<newSection> 1.
INTRODUCTION This paper describes a sentence generator that was built primarily to focus on syntactic form and syntactic relationships.
Our main goal was to produce a tutorial system for the English language; the intended users of the system are people with language delaying handicaps such as deafness, and people learning English as a foreign language.
For these populations, extensive exposure to standard English constructions (negatives, questions, relativization, etc.) and their interactions is necessary.
.
The purpose of the generator was to serve as a powerful resource for tutorial programs that need examples of particular constructions and/or related sentences to embed in exercises or examples for the student.
The focus of the generator is thus not so much on what to express as on how to express it in acceptable English.
This is quite different from the focus of most other language generation systems.
Nonetheless, our system could be interfaced to a more goal-directed semantic component.
The mechanism of transformational grammar was chosen because it offered both a way to exercise tight control over the surface syntactic form of a sentence and a good model for the production of groups of sentences that are syntactically related (e.g. the active and passive forms of a transitive sentence).
By controlling (at a very high level) the rules that are applied and by examining the detailed syntactic relationships in the tree structures at each end of the derivation, the tutorial part of the system accesses a great deal of information about the syntax of the sentences that are produced by the generator; this knowledge is used to give explanations and hints to the user in the context of the particular exercise that the student is attempting.
The transformational generator is composed of three major parts: a base component that produces base trees, a transformer that applies transformational rules to the trees to derive a surface tree, and a set of mechanisms to control the operation of the first two components.
We will discuss each of the components of this system separately.