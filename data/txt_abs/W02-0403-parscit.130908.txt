<newSection> 2.1 Finite-state transduction support in GATE In order to make it easier to build new processing resources, GATE comes with built-in finite-state transduction capabilities, which we have used as the core of the summarisation process (see Section 3).
The transducer runs on grammars written in the JAPE (Java Annotations Pattern Engine) language (Cunningham et al., 2002), which describes patterns to match and annotations to be created as a result.
A JAPE grammar consists of a set of phases, each of which consists of a set of pattern/action rules, and which run sequentially.
Patterns can be specified by describing a specific text string, or existing annotations (e.g. annotations created by the tokeniser, gazetteer, part-of-speech tagger, or document format analysis).
Rule prioritisation (if activated) prevents multiple assignment of annotations to the same text string.
Creating new modules and applications on the basis of JAPE, such as a summarisation component for another domain, is a low-overhead task, because the user only needs to be concerned with writing new grammar rules (though other modules such as the gazetteer may also need to be updated or modified).
The amount of tuning necessary for a new domain can vary depending on the type of information that needs to be extracted, and how similar the domain and text structure is to that which existing components are designed for.
For example, we reuse much of the same information about companies, dates, numbers, etc from the default Information Extraction components, so very little tuning was needed in this case, especially since the patterns we aim to identify for health and safety are quite easy to define, but this cannot be guaranteed for all other domains or applications.
So far, we have successfully used JAPE for named entity recognition, sentence splitting, and summarisation, and we intend to experiment with it in other fields such as shallow syntactic parsing.
Although at the moment we are using hand-crafted rules, it would be possible for an application to learn rules automatically for the Jape transducers in a manner similar to (Day et al., 1997).
These rules could then be verified or amended by a human if necessary, as they are human readable.
HaSIE uses a set of Named Entity Recognition modules adapted from the ANNIE information extraction system.
HaSIE uses the following processing resources: The first three components are taken directly from ANNIE; the gazetteer and JAPE transducer are modified versions of ANNIE components, which reflect the specific information needs of the project.
The HaSIE gazetteer contains additional information about words related specifically to the field of health and safety, such as lists of accident keywords (e.g. &quot;road traffic accident&quot;, &quot;fatality&quot;, &quot;falls from heights&quot;'), health and safety keywords (e.g. &quot;Lost Workday Cases&quot;, &quot;Medical Treatment Cases&quot;, &quot;RIDDOR&quot;), and various other lists of more general keywords such as &quot;monitoring&quot;, &quot;report&quot;, &quot;policy&quot; etc.
The HaSIE semantic tagger contains hand-coded rules to identify textual patterns which are to be annotated, for example, to find noun phrases which contain information about accidents.
These will be described in more detail in the next section.