<newSection> 1 Introduction In the last few years, the international organization for standards ISO has started up various projects concerned with the definition of interoperable concepts for syntactic, morphosyntactic, and semantic annotation, with the ultimate aim to support the development of interoperable language resources.
The Linguistic Annotation Framework (LAF, Ide & Romary, 2004) thereby serves as a meta-framework.
LAF distinguishes between the concepts of annotation and representation: ‘annotation’ refers to the process of adding information to segments of language data, or to that information itself, independent of the format in which this information is represented.
The term ‘representation’ refers to the format in which an annotation is rendered, for instance in XML.
According to LAF, annotations are the proper level of standardization.
This distinction is reflected in the specification of ISO-TimeML, a proposed ISO standard for temporal annotation (ISO, 2008) which consists of an abstract syntax, a concrete syntax, and a semantics.
The abstract syntax specifies the elements making up the information in annotations, and how these elements may be combined to form complex annotation structures; these combinations are defined as set-theoretical structures.
The concrete syntax is a variant of the TimeML markup language (Pustejovsky et al., 2003).
Any other representation that is a rendering of the abstract syntax can be converted into this representation.
The ISO-TimeML semantics is associated with its abstract syntax, which explains why all concrete representations of ISO-TimeML annotations are semantically equivalent.
In this note we argue that the distinction of an abstract and a concrete syntax level is desirable not only from a standardization point of view, but also for designing annotation languages with a representation that is conceptually transparent for annotators and that allows a simple, systematic Proceedings of the 8th International Conference on Computational Semantics, pages 268–271, Tilburg, January 2009.
c�2009 International Conference on Computational Semantics interpretation.
We illustrate this for the annotation and interpretation of expressions denoting dates, times, and durations.
The abstract syntax of ISO-TimeML consists of two parts: (a) a ‘conceptual inventory’, specifying the elements from which annotations are built up; and (b) a set of syntax rules which describe the possible combinations of these elements. a. Conceptual inventory The concepts that can be used to build ISO-TimeML annotations fall into the following five categories, all formed by finite sets, plus the concepts of real and natural numbers. b. Syntax rules Annotation structures in ISO-TimeML come in two varieties, entity structures and link structures.
Entity structures contain semantic information about a segment of source text; link structures describe semantic relations between segments of source text.
The simplest kind of ISO-TimeML structures are a single entity structure, which is a pair < m, a > consisting of a markable1 m and an annotation a, or a single link structure < e1, e2, R > which relates two entity structures.
More complex annotation structures consist of a set of entity structures and a set of link structures which link the entity structures together.
Entity structures come in 6 types, containing information about (1) events; (2) temporal intervals; (3) time points (or “instants”); (4) amounts of time; (5) frequencies of events; and (6) temporal relations.
We focus here on the tree types of temporal concepts: intervals, instants, and amounts of time.
'The term markable is used to refer to the entities that the annotations are associated with.
There are two kinds of markables in ISO-TimeML: event markables and time markables, corresponding to segments of primary data that describe events, and to those that describe temporal entities or relations, respectively.
Link structures specify the temporal anchoring of events in time; the temporal ordering of events, intervals or instants; the length of an interval; subordination relations between events; and aspectual relations between events.
The semantics associated with this abstract syntax defines a mapping from the set-theoretical structures defined by the abstact syntax to the language of first-order predicate logic with lambda abstraction.
A concrete syntax in general consists of the specification of names for the various sets that make up the conceptual vocabulary, plus a listing of specific named elements of these sets, and for each rule of the abstract syntax a specification of how to represent the constructed annotation structure.
The TimeML-based concrete syntax that is part of the ISO-TimeML specification makes use of a TIMEX3 tag to mark up explicit temporal expressions like dates, times and durations.
Using this tag, the different types of temporal expressions are represented by means of the attribute type.
An attribute called value has alphanumerical string values that follow a standard format to represent (combinations of) calendar days, weeks, months and years (2007-03-16); clock hours, minutes and seconds; (T13:15:00), as well as amounts of time (P60D) and frequencies.
This representation does not have a transparent relation to the conceptual distinctions made in the abstract syntax.
A more transparent representation can be obtained by defining a concrete syntax where the categories (sets) of the conceptual inventory correspond to XML tags, and elements in these sets to attribute values.
This gives annotation representations that wear there meaning on their sleeve, which is optimal both for human annotators and for computing the formal interpretation of the annotations.
The following examples illustrate this, where we show, for three types of temporal expressions, (a) the conceptual annotation structure; (b) the TimeML-based representation; (c) an XML representation that directly instantiates the conceptual structure; (d) the formal interpretation.2 In all cases, the representations (c) are intuitively more transparent than the (b) ones, and have a more straightforward relation to the interpretations (d).