<newSection> ABSTRACT Knowledge representation schemes are either based on a set of primitives or not.
The decision of whether or not to have a primitive-based scheme is crucial since it affects the knowledge that is stored and how that knowledge may be processed.
We suggest that a knowledge representation scheme may not initially have primitives, but may evolve into a primitive-based scheme by inferring a set of primitive meaning units based on previous experience.
We describe a program that infers its own primitive set and discuss how the inferred primitives may affect the organization of existing information and the subsequent incorporation of new information.
A crucial decision in the design of a knowledge representation is whether to base it on primitives.
A primitive-based scheme postulates a pre-defined set of meaning structures, combination rules and procedures.
The primitives may combine according to the rules into more complex representational structures, the procedures interpret what those structures mean.
A primitive-free scheme, on the other hand, does not build complex structures from standard building blocks; instead, information is gathered from any available source, such as input and information in previously built meaning structures.
A hybrid approach postulates a small set of pre-defined meaning units that may be used if applicable and convenient, but is not limited to those units.
Such a representation scheme is not truly primitive-based since the word &quot;primitive&quot; implies a complete set of pre-defined meaning units that are the only ones available for construction.
However, we will call this hybrid approach a primitive-based scheme, since it does postulate some pre-defined meaning units that are used in the same manner as primitives.