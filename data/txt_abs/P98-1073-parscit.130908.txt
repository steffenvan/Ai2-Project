<newSection> Abstract Formal methods have'nt been applied enough in the development process of lingware although their advantages have been proved in many other domains.
In this framework, we have investigated some applications dealing with different processing levels (lexical analyses, morphology, syntax, semantic and pragmatic).
These investigations has mainly led to the following observations.
First of all, we have noticed a lack of use of methodologies that cover all the life cycle of a software development.
The formal specification has not been used in the first development phases.
In addition, we have noticed the lack of formal validation and consequently the insufficient guarantee of the developed software results.
Moreover, there has been no appeal to rigorous methods of integration to solve the dichotomy of data and processing problem.
However, the use of the formal aspect in the Natural Language Processing (NLP) has generally been limited to describing the natural language knowledge (i.e., grammars) and specifying the treatments using algorithmic languages.
Few are those who have used a high level specification language.
This paper focuses on the contributions of formal methods in developing natural language software starting from an experimentation carried out on a real application and which consists in specifying and validating the system CORTEXA (Correction ORthographique des TEXtes Arabes) using the VDM formal method.
First of all, we review the advantages of formal methods in the general software development process.
Then, we present the experimentation and the obtained results.
After that, we place the formal methods advantages in the context of NLP.
Finally, we give some methodological criteria that allow the choice of an appropriate formal method.
Les methodes formelles n'ont pas ete suff-isamment utilisees dans le processus de developpement des linguiciels, alors qu'elles ont fait leurs preuves dans d'autres domaines.
Le present article essaye de mettre en relief les avantages des methodes formelles dans le contexte des langues naturelles, partant des resultats d'une experience realisee sur une application reelle.
Dans un premier temps, nous rappellons les avantages globaux des methodes formelles dans le processus de developpement d'un logiciel.
Ensuite, nous placons ces avantages dans le contexte des langues naturelles.
Enfin, nous donnons les criteres methodologiques pour le choix d'une methode formelle appropriee.