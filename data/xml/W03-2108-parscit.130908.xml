<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.982947">
Building a New Internet Chat System for Sharing Timing Information
</title>
<author confidence="0.993519">
Kanayo Ogura
</author>
<affiliation confidence="0.9063305">
School of
knowledge Science,
Japan Advanced Institute of
Science and Technology
</affiliation>
<address confidence="0.990973666666667">
1-1 Asahidai,Tatsunokuchi,
Nomi, Ishikawa,
923-1292, Japan
</address>
<email confidence="0.998066">
k-ogura@jaist.ac.jp
</email>
<note confidence="0.445906">
Takeshi Masuda
NEC Informatec Systems,
Ltd.
</note>
<keyword confidence="0.3126155">
2561,Shinohara,
Kohoku, Yokohama,
Kanagawa,
222-0026, Japan
t-masuda@
qg.jp.nec.com
</keyword>
<author confidence="0.71416">
Masato Ishizaki
</author>
<affiliation confidence="0.856730666666667">
Institute Socio-Information
and Communication Studies,
The Univ. of Tokyo
</affiliation>
<address confidence="0.754798333333333">
7-3-1 Hongo, Bunkyo-ku,
Tokyo,
113-0033, Japan
</address>
<email confidence="0.7801975">
ishizaki@isics.u-
tokyo.ac.jp
</email>
<sectionHeader confidence="0.995732" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99985680952381">
Chat system has gained popularity as a
tool for real-time conversation. How-
ever, standard chat systems have prob-
lems due to lack of timing information.
To tackle this problem, we have built a
system which has the following func-
tions: 1) function of making typing state
visible; 2) floor holding function at the
start of typing. The evaluation results
show that the sys-tem with each new
function significantly increases the
number of turns, which indicates the ef-
fectiveness of the new functions for
smooth communication. The survey re-
sults showed that the system with the
function of making typing state visible
significantly different from that without
them concerning 1) easiness of adjust-
ing the timing of utterances and
smoothness of conversations, and 2)
easiness of using the system.
</bodyText>
<sectionHeader confidence="0.99963" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999948727272727">
Use of computer communication tools is now
indispensable to our everyday life because of the
proliferation of computer network. These com-
munication tools include E-mail, BBS (Bulletin
Board System) and chat systems. Among all,
chat system users have been increasing dramati-
cally for its real time nature. Despite of its popu-
larity, standard chat systems do not allow users
to share timing information, which is thought to
be necessary for smooth communication. This
often makes chat conversations confusing such
as ones with a lot of repetitions and corrections.
To tackle the problem of lack of timing in-
formation, we have implemented a system which
has the following functions: 1) function of mak-
ing typing state visible; 2) floor holding function
at the start of typing.
To evaluate the effectiveness of the system,
the length of utterance and the number of utter-
ances are used as quantitative index for smooth
communication. We also conducted question-
naire surveys of users&apos; evaluation of the system
from effective-ness of the new functions to easi-
ness of using the system.
The rest of the paper is organized as follows.
Section two explains the problems of standard
chat systems and related studies to tackle them.
Section three describes our implemented new
system with explanatory examples. Section four
shows the effectiveness of our new system by
quantitative evaluation results. Section five con-
cludes with some final remarks and our further
attempt to improve the system.
</bodyText>
<sectionHeader confidence="0.999521" genericHeader="introduction">
2 Previous Work
</sectionHeader>
<subsectionHeader confidence="0.999517">
2.1 Problems of standard chat systems
</subsectionHeader>
<bodyText confidence="0.89408396">
In chat conversations, even if no message ap-
pears on the screen, this does not mean other us-
ers are typing a message. Other users might be
reading or waiting for the others&apos; message or be
leaving the computer. This is due to the mecha-
nism of standard chat systems. In standard chat
systems, a user sends a message by pressing the
return key. This means that what users know is
only complete utterances, without the informa-
tion on how the utterances are made: In face-to-
face conversation, the participants sometimes
signal the difficulty of making utterances by in-
serting fillers and pauses, but in chat conversa-
tion, the participants cannot send such kind of
information. The lack of this process information
has been known to cause phenomena similar to
overlap in face-to-face conversation and interrup-
tion [1,2]. Figure 1 shows an example of this
overlap-like phenomenon.
1:A&gt;I’m going to visit a company tomorrow.
2:B&gt;You are going to Osaka, aren’t you?
3:A&gt;So, how is the Job interview of T Com-
pany going?
4:A&gt;Yes, I’m going to Osaka.
5:B&gt;I have to submit data. So ...
</bodyText>
<figureCaption confidence="0.999619">
Figure 1: Example of overlap-like phenomena
</figureCaption>
<bodyText confidence="0.800860111111111">
In Figure 1, Speaker A talked about the visit to
some company (utterance 1) and speaker B
checked where A would go in response to utter-
ance 1. At almost the same time of B&apos;s response,
A sent his message about the job interview (ut-
terance 3), which made adjacent turns semanti-
cally irrelevant. This overlap-like phenomenon
can be escaped if at least A knows B is typing a
response to A.
</bodyText>
<subsectionHeader confidence="0.9361595">
2.2 Communicating the information on how
the utterances are made
</subsectionHeader>
<bodyText confidence="0.998661903225807">
MSN messenger [3] shows whether the partici-
pants are typing at the bottom of the system win-
dow. Tangible Chat [5] communicates the state
of the other user&apos;s typing using vibration of the
cushions. When a user starts to type, the other
user&apos;s chair cushion vibrates, which enables users
to share typing information without distracting
their attention to the messages. In UNIX talk pro-
gram (a little old chat system), users can send a
message character by character, which allows
them to know what the others are doing.
Alternative Interfaces for Chat realized two
proto-type systems; Status Client for sharing
status information; Flow Client for sharing time
sequence information [4]. Status client imple-
mented the following functions for sharing user’s
status information.
When a user presses a key, his or her name in
the participants list is highlighted.
A user’s last utterance appears next to his or
her name in the participants list.
When a user starts to write a message, it ap-
pears in gray color next to his or her name in
the participants list.
Flow Client improved the following floor hold-
ing function so that slow typists can easily join
conversation.
A user has own track on screen
Visualization of participants&apos; character and
timing information
Auto scrolling of the message history
</bodyText>
<subsectionHeader confidence="0.979866">
2.3 The design concept of our new system
</subsectionHeader>
<bodyText confidence="0.999397685714286">
- User interface
Many people have already used the current chat
systems and got accustomed to the interface of
the current system. This observation was con-
firmed in the evaluation of Status Clients and
Flow clients [4]. Thus, we decided to make the
interface of our new system similar to that of the
current system.
- The information the proposed system communi-
cates
Our preliminary experiments confirmed that the
information about whether the other participants
are writing does not improve easiness of using
the system. Based on this result, we decided to
examine two approaches: one is to increase the
information to be communicated. That is, as in
the UNIX talk program, the system communi-
cates what the participants write in real time; The
other is to focus on the floor holding function. In
face-to-face conversation, the information on
how the utterances are made is used for taking or
holding the floor. Thus if the chat system users
can take or hold the floor easily, this might con-
tribute to improving easiness of using the system.
With respect to the function of the floor hold-
ing, the former function might subsume the latter.
However, this does not mean both functions are
the same. Some users do not want to show the
process of utterance making and even think it
distracts their attention. If this is true, and the
system can support the floor holding function
effectively, then system does not have to com-
municate what the participants writes character
by character, which will be examined in Section
four.
</bodyText>
<sectionHeader confidence="0.952544" genericHeader="method">
3 The Implemented New Chat System
</sectionHeader>
<bodyText confidence="0.999943857142857">
We implemented a new system in which users
can share the process information. An example
of the system display is shown in Figure 2 and 3.
A user sends messages and read conversation
history in the main window (Figure 2), and rec-
ognizes the typing state of other users in the sub
window (Figure 3).
</bodyText>
<subsectionHeader confidence="0.7687025">
3.1 Function of making the typing state visi-
ble
</subsectionHeader>
<bodyText confidence="0.9913248">
The new system can show the typing state of
other users for all the time. When a user connects
to the system, his or her nicknames appear in the
sub window. Figure 3 shows the display where
&apos;miho&apos; and &apos;yo&apos; connected to the system and
&apos;miho&apos; sent a message &amp;quot; (Ishikawa)&amp;quot;. Each
time a user starts to write a message, a new text
appears next to his or her name in the sub win-
dow.
holds a line with the message [stop writing a
message without sending] in gray color in the
main window. This function is for showing the
status or the activity of a user even when s/he
does not send a message.
Figure2: Main window of the system
</bodyText>
<subsectionHeader confidence="0.7178445">
3.2 Floor holding function at the start of
typing
</subsectionHeader>
<bodyText confidence="0.999064545454545">
In face-to-face conversation, people monitor
each other&apos;s behavior, which helps them take
turns smoothly. But in the standard chat systems,
a user cannot know each other&apos;s states, since s/he
see only complete utterances without the infor-
mation on how the utterances are made. A user
sometimes misses his or her turn because of this.
The first user is writing a message in response to
the second&apos;s, while the second user sends another
message which is accepted by the system before
the first user&apos;s response. To deal with this prob-
lem, the new system implemented a floor holding
function at the start of writing a message.
When a user starts to write a message, the system
holds the place or turn in advance for the user,
displaying [--- start to write a message ---] in the
main window. Thus, utterances are displayed in
the order of the time when a user starts to type.
Users can send their messages without consider-
ing their typing speed.
The system also allows users to stop sending
a message in the middle. In this case, the system
</bodyText>
<table confidence="0.853903523809524">
Figure3: Sub window of the system
System Function
Typing state Floor holding
system1 invisible at the end of typing
system2 visible at the end of typing
system3 invisible at the start of typing
system4 visible at the start of typing
take hello
miho hello
3: ALL
yo hello ALL
Table1: Experimental systems
take it is cold today, isn’t it? In the experiments, eight groups, each of which
miho [stop writing a message] consists of three subjects, engage in chat conver-
yo Yeah sation. All subjects are computer users at the in-
miho Where are you all come from ? ter-mediate level or higher: they have
take [--- start writing a message ---] experiences of using chat systems and no prob-
lems of typing. The task of the experiments is
just to chat with each other about any topics for
twenty minutes.
4.2 Chat logs
</table>
<bodyText confidence="0.954198875">
The average and the standard deviation of the
number and the length of turns are shown in Ta-
ble 3 and 4, respectively.
yo I&apos;m from Ishikawa
miho [--- start writing a message ---]
yo [--- start writing a message ---]
Figure 4: English translation of the chat dialogue
in the main window (Figure 2)
</bodyText>
<sectionHeader confidence="0.911282" genericHeader="method">
4 Evaluation of the System
</sectionHeader>
<table confidence="0.992824666666667">
Ave.(SD) B1 B2
A1 16.83 (6.32) 25.33 (10.01)
A2 24.42 (10.4) 22.00 (8.61)
</table>
<tableCaption confidence="0.95912">
Table 2: Average number of the turns and its SD
</tableCaption>
<table confidence="0.997971666666667">
Ave. (SD) B1 B2
A1 17.82 (5.97) 16.48 (4.71)
A2 17.70 (6.04) 17.98 (4.09)
</table>
<tableCaption confidence="0.999786">
Table 3: Average length of the turns and its SD
</tableCaption>
<subsectionHeader confidence="0.944703">
4.1 Experimental Design
</subsectionHeader>
<bodyText confidence="0.999289666666667">
Four experimental systems were built to evaluate
the effectiveness of the system (Table 1)
We examined the effects of the functions by
applying two-way ANOVA to the number and
the length of turns. Factors and levels are
summarized in Table 4.
</bodyText>
<table confidence="0.663937166666667">
Level 1 Level 2
Factor A visible invisible
(typing state ) (A1) (A2)
Factor B at the end at the start
(floor holding) of typing of typing
(B1) (B2)
</table>
<tableCaption confidence="0.949053">
Table 4: Factor and Level for ANOVA
</tableCaption>
<bodyText confidence="0.9877637">
Table 5 and 6 shows that main effects concerning
both the number and the length of turns are not
significant. But interaction effects concerning the
number of turns are significant. The detailed
analysis of the interaction effects showed that the
system with each new function significantly in-
creases the number of turns.
The previous work suggested two hypothe-
ses about the number and the length of turns
[4][5].
</bodyText>
<listItem confidence="0.914528222222222">
(1) If users share the process information, this
will prompt smoothness of communication
which results in the increase of the number of
turns.
(2) If users use the function of floor holding at
the start of writing a message, they will be able
to write what they really want without consider-
ing time pressure. This makes the length of turns
longer than that without using the function.
</listItem>
<bodyText confidence="0.9997451">
Adopting these assumptions, the results here
might indicate the effectiveness of the new func-
tions for smooth communication. The number of
turns didn&apos;t increase when participants used the
system with both functions. These functions are
displayed on different windows and might dis-
tract user&apos;s attention.
However, these assumptions can be said to be
rather naïve, since the number and the length of
turns can be affected by many other factors like
the familiarity between the participants and kinds
of topics the participants happen to choose. Still
we do not have good evaluation criteria for the
functions of chat systems in general and thus the
interpretation of our data against these assump-
tions should be used as corroboration to show the
effectiveness of our system, but apparently not
enough to prove it. Therefore, we conducted
questionnaire survey to examine the usability of
the system.
</bodyText>
<table confidence="0.9981043">
SS d.f. MS F
Factor A 54.19 1 54.19 0.62
Level B1 345.04 1 345.04. 3.92*
Level B2 66.67 1 66.67 0.76
Factor B 111.02 1 111.02 1.26
Level A1 433.05 1 433.05 4.93**
Level A2 35.04 1 35.04 0.40
Interaction 357.52 1 357.52 4.07**
Error 87.95 44 1.99
Total 47
</table>
<tableCaption confidence="0.8442895">
(*: level of significance 10% **: 5%)
Table 5: ANOVA for the number of turns
</tableCaption>
<table confidence="0.823174470588235">
SS d.f. MS F
Factor A 5.70 1 5.70 0.19
Factor B 3.38 1 3.38 0.11
Interaction 7.48 1 7.84 0.26
Error 1332.47 44 30.28 1.00
Total 47
Table 6: ANOVA for the length of turns
4.3 Questionnaire survey
Item 1 Item 2 Item 3
System 1 2.58 2.67 3.50
System 2 1.92 3.67 3.75
System 3 2.17 3.00 3.00
System 4 1.58 3.92 4.00
Item 1: smoothness of conversation
Item 2: Easiness of adjusting the timing of
making utterances
Item 3: Easiness of using the system
</table>
<tableCaption confidence="0.771731">
Table 7: Evaluation results of questionnaire sur-
vey
</tableCaption>
<bodyText confidence="0.997568714285714">
Experimental subjects were asked to answer the
questions such as effectiveness of the new func-
tions and the easiness of using the system on
five-point scale. Table 7 shows the part of the
results.
The results showed that the system with the
function of making typing state visible (factor A)
gains significantly higher score than that without
them concerning the smoothness of conversa-
tions, the easiness of adjusting the timing of ut-
terances and the easiness of using the system
(Table 8,9 and 10). This suggests that the func-
tion of making typing state visible is effective in
chat systems.
</bodyText>
<table confidence="0.972242142857143">
SS d.f. MS F
Factor A 4.69 1 4.69 3.90*
Factor B 1.69 1 1.69 1.41
Interaction 0.02 1 0.02 0.02
Error 1.20 44 0.03
Total 47
(*: level of significance 10% )
</table>
<tableCaption confidence="0.988994">
Table 8: &amp;quot; The smoothness of conversations”
</tableCaption>
<table confidence="0.973739">
SS d.f. MS F
Factor A 11.02 1 11.02 8.38**
Factor B 1.02 1 1.02 0.78
Interaction 0.02 1 0.02 0.02
Error 1.32 44 0.03
Total 47
(**: level of significance 5%)
</table>
<tableCaption confidence="0.96768">
Table 9: &amp;quot; Easiness of adjusting the timing of
</tableCaption>
<table confidence="0.990416428571429">
SS d.f. MS F
Factor A 4.69 1 4.69 5.83**
Factor B 0.19 1 0.19 0.23
Interaction 1.69 1 1.69 2.09
Error 0.81 44 0.02
Total 47
(**:level of significance 5%)
</table>
<tableCaption confidence="0.989514">
Table 10: &amp;quot; The easiness of using the system &amp;quot;
</tableCaption>
<subsectionHeader confidence="0.999904">
4.4 The number of overlap-like phenomena
</subsectionHeader>
<bodyText confidence="0.999678105263158">
The new system enables users to share the proc-
ess information. Theoretically this should de-
crease overlap-like phenomena observed in
conversations using the standard chat systems.
Figure 5 shows the ratio of the overlap-like
phenomena. It is difficult to find overlap-like
phenomena from chat logs. Here we counted the
number of the places which satisfies the follow-
ing conditions: one is that the interval of utter-
ances should be short (three seconds here); The
other is that the topic threads should be parallel.
We used an algorithm proposed in [6] to extract
topic threads.
There are no great differences for all the sys-
tems and the ratio of system 4 is the lowest. The
combination of functions might raise awareness
for others&apos; behavior, but the combination effects
should be examined more thoroughly as future
work
</bodyText>
<table confidence="0.8436744">
System1 4.3%
System2 6.4%
System3 8.3%
System4 2.7%
Figure5: The ratio of overlap-like phenomena
</table>
<sectionHeader confidence="0.3082185" genericHeader="method">
4.5 Semantically irrelevant turns in adjacent
positions
</sectionHeader>
<bodyText confidence="0.948473428571429">
speaker A was able to respond to speaker B’s
utterance 40, while in the sequence change of the
turns example, speaker B’s utterance 42 wrongly
preceded A’s response 41 to B’s utterance 40,
which makes adjacent utterances 40 and 41 dis-
rupted.
Sequence change of turns
</bodyText>
<table confidence="0.7764527">
Uttr.No.
40 B Smother the sliced meat and the
flour separately
41 B So it&apos;s difficult to cook it by my-
self
42 A Ah I&apos;m getting hungry somehow
ormal sequence of turns
Uttr.No.
40 B Smother the sliced meat and the
flour separately
</table>
<page confidence="0.93695575">
42 A Ah I&apos;m getting hungry some-
how
41 B So it&apos;s difficult to cook it by
myself
</page>
<tableCaption confidence="0.998314">
Table 11: Examples of sequence change of turns
</tableCaption>
<figure confidence="0.995579">
4.3%
6.4%
8.3%
2.7%
utterances &amp;quot; Table 11 shows examples of sequence change of
turns. In the normal sequence of turns example,
System3
System4
</figure>
<figureCaption confidence="0.986582">
Figure 7: The ratio of changing sequence of turns
for system 3 and 4
</figureCaption>
<bodyText confidence="0.999849769230769">
The number of sequence change of turns is ex-
pected to decrease when the system has the floor
holding function. Based on the method proposed
in [6], these turns were examined and their ratio
was calculated shown in Figure 7. The results
indicated that there are no great differences for
both systems (changing sequence of turns existed
at least 10% in both systems). The ratio of sys-
tem 4 is a little lower than that of system 3. This
might be able to be interpreted that visibility of
typing information can be one of the factors to
decrease sequence of change of turns, but this
need s to be examined in future work.
</bodyText>
<sectionHeader confidence="0.988931" genericHeader="conclusions">
5 Conclusion and Further Study
</sectionHeader>
<bodyText confidence="0.999945642857143">
We built a new system for sharing the process in-
formation. The system has the following func-
tions: 1) function of making typing state visible;
2) floor holding function at the start of typing.
The evaluation results showed that the system
with each function significantly increases the
number of turns, which might indicate the effec-
tiveness of the new functions for smooth com-
munication. The survey results showed that the
system with the function of making typing state
visible gained significantly higher score than the
system without it concerning easiness of adjust-
ing the timing of making utterances, smoothness
of conversations, and easiness of using the sys-
tem.
This system was confirmed to be effective to
the problems caused by the lack of time informa-
tion, but did not solve it completely. We tried
another approach to solve one of the problems,
semantically irrelevant turns in adjacent position.
We implemented a function by which users ex-
plicitly specify a semantically relevant turn with
its number and those relevant turns are displayed
in the same color (Figure 8). We conducted
questionnaire survey to verify the effectiveness
of this function, but the results confirmed the
usefulness of this function, but also the need for
the improvement of the interface de
</bodyText>
<figure confidence="0.971157444444445">
changing
other
82.7%
17.3%
changing
other
86.7%
13.3%
sign.
</figure>
<figureCaption confidence="0.785582333333333">
Please type the number of a semantically
relevant turn to the current.
Figure 8: Example of the Dialog Box for a new
</figureCaption>
<bodyText confidence="0.851861">
function
</bodyText>
<sectionHeader confidence="0.993639" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999558071428571">
[1] Hosoma, H. (2000) What do people presup-
pose in chat conversations -Timing Structure
of chat and speech conversations in Okada,
M., Mishima, H.and Sasaki, M. (eds.) Em-
bodiment and Computers, bit magazine, Kyo-
ritsu Publisher, Japan, pp.339-349.
[2] Mizukami, E. and Migita, M. (2002) Order of
Chat Conversations – Study of Conversation
Structure by Interval Analysis, Cognitive
Studies: Bulletin of the Japanese Cognitive
Science Society, Vol.9 No.1, pp.77-88
[3] MSN messenger
http://messenger.microsoft.com/
[4] Vronay, D., Smith, M., and Drucker, S.
(1999) Alternative Interfaces for Chat, Proc.
of the 12th Annual ACM Symposium on User
Interface Software and Technology
UIST99
[5] Yamada, Y. Hirano, T. and Nishimoto, K.
(2002) Tangible Chat: Communication of con-
versation situation awareness using a sense of
touch in a key-board chat system, Tech.
Report SIG-GW-43-18 Information Process-
ing Society of Japan, pp.103-108
[6] Ogura, K. and Ishizaki, M. (2002) The char-
acteristics analysis about the topic change in
Chat Conversations Tech. Report SIG-
SLUD-A202-3, Japan
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.088082">
<title confidence="0.999993">Building a New Internet Chat System for Sharing Timing Information</title>
<author confidence="0.947717">Kanayo Ogura</author>
<affiliation confidence="0.559903">School</affiliation>
<email confidence="0.790498">knowledge</email>
<affiliation confidence="0.9554395">Japan Advanced Institute Science and Technology</affiliation>
<address confidence="0.903518">1-1</address>
<affiliation confidence="0.594683">Nomi,</affiliation>
<address confidence="0.998397">923-1292, Japan</address>
<email confidence="0.981681">k-ogura@jaist.ac.jp</email>
<author confidence="0.944905">Takeshi Masuda</author>
<affiliation confidence="0.876659">NEC Informatec Systems, Ltd. Kohoku,</affiliation>
<address confidence="0.995826">222-0026, Japan</address>
<email confidence="0.999787">qg.jp.nec.com</email>
<author confidence="0.977567">Masato Ishizaki</author>
<affiliation confidence="0.997154666666667">Institute and Communication The Univ. of Tokyo</affiliation>
<address confidence="0.926719">7-3-1 Hongo, Tokyo, 113-0033, Japan</address>
<email confidence="0.986787">tokyo.ac.jp</email>
<abstract confidence="0.999066409090909">Chat system has gained popularity as a tool for real-time conversation. However, standard chat systems have problems due to lack of timing information. To tackle this problem, we have built a system which has the following functions: 1) function of making typing state visible; 2) floor holding function at the start of typing. The evaluation results show that the sys-tem with each new function significantly increases the number of turns, which indicates the effectiveness of the new functions for smooth communication. The survey results showed that the system with the function of making typing state visible significantly different from that without them concerning 1) easiness of adjusting the timing of utterances and smoothness of conversations, and 2) easiness of using the system.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>H Hosoma</author>
</authors>
<title>What do people presuppose in chat conversations -Timing Structure of chat and speech conversations</title>
<date>2000</date>
<booktitle>Embodiment and Computers, bit magazine, Kyoritsu Publisher, Japan,</booktitle>
<pages>339--349</pages>
<editor>in Okada, M., Mishima, H.and Sasaki, M. (eds.)</editor>
<contexts>
<context position="3697" citStr="[1,2]" startWordPosition="578" endWordPosition="578">. This is due to the mechanism of standard chat systems. In standard chat systems, a user sends a message by pressing the return key. This means that what users know is only complete utterances, without the information on how the utterances are made: In face-toface conversation, the participants sometimes signal the difficulty of making utterances by inserting fillers and pauses, but in chat conversation, the participants cannot send such kind of information. The lack of this process information has been known to cause phenomena similar to overlap in face-to-face conversation and interruption [1,2]. Figure 1 shows an example of this overlap-like phenomenon. 1:A&gt;I’m going to visit a company tomorrow. 2:B&gt;You are going to Osaka, aren’t you? 3:A&gt;So, how is the Job interview of T Company going? 4:A&gt;Yes, I’m going to Osaka. 5:B&gt;I have to submit data. So ... Figure 1: Example of overlap-like phenomena In Figure 1, Speaker A talked about the visit to some company (utterance 1) and speaker B checked where A would go in response to utterance 1. At almost the same time of B&apos;s response, A sent his message about the job interview (utterance 3), which made adjacent turns semantically irrelevant. Thi</context>
</contexts>
<marker>[1]</marker>
<rawString>Hosoma, H. (2000) What do people presuppose in chat conversations -Timing Structure of chat and speech conversations in Okada, M., Mishima, H.and Sasaki, M. (eds.) Embodiment and Computers, bit magazine, Kyoritsu Publisher, Japan, pp.339-349.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Mizukami</author>
<author>M Migita</author>
</authors>
<date>2002</date>
<journal>Order of Chat Conversations – Study of Conversation Structure by Interval Analysis, Cognitive Studies: Bulletin of the Japanese Cognitive Science Society,</journal>
<volume>9</volume>
<pages>77--88</pages>
<contexts>
<context position="3697" citStr="[1,2]" startWordPosition="578" endWordPosition="578">. This is due to the mechanism of standard chat systems. In standard chat systems, a user sends a message by pressing the return key. This means that what users know is only complete utterances, without the information on how the utterances are made: In face-toface conversation, the participants sometimes signal the difficulty of making utterances by inserting fillers and pauses, but in chat conversation, the participants cannot send such kind of information. The lack of this process information has been known to cause phenomena similar to overlap in face-to-face conversation and interruption [1,2]. Figure 1 shows an example of this overlap-like phenomenon. 1:A&gt;I’m going to visit a company tomorrow. 2:B&gt;You are going to Osaka, aren’t you? 3:A&gt;So, how is the Job interview of T Company going? 4:A&gt;Yes, I’m going to Osaka. 5:B&gt;I have to submit data. So ... Figure 1: Example of overlap-like phenomena In Figure 1, Speaker A talked about the visit to some company (utterance 1) and speaker B checked where A would go in response to utterance 1. At almost the same time of B&apos;s response, A sent his message about the job interview (utterance 3), which made adjacent turns semantically irrelevant. Thi</context>
</contexts>
<marker>[2]</marker>
<rawString>Mizukami, E. and Migita, M. (2002) Order of Chat Conversations – Study of Conversation Structure by Interval Analysis, Cognitive Studies: Bulletin of the Japanese Cognitive Science Society, Vol.9 No.1, pp.77-88</rawString>
</citation>
<citation valid="false">
<note>MSN messenger http://messenger.microsoft.com/</note>
<contexts>
<context position="4469" citStr="[3]" startWordPosition="715" endWordPosition="715">terview of T Company going? 4:A&gt;Yes, I’m going to Osaka. 5:B&gt;I have to submit data. So ... Figure 1: Example of overlap-like phenomena In Figure 1, Speaker A talked about the visit to some company (utterance 1) and speaker B checked where A would go in response to utterance 1. At almost the same time of B&apos;s response, A sent his message about the job interview (utterance 3), which made adjacent turns semantically irrelevant. This overlap-like phenomenon can be escaped if at least A knows B is typing a response to A. 2.2 Communicating the information on how the utterances are made MSN messenger [3] shows whether the participants are typing at the bottom of the system window. Tangible Chat [5] communicates the state of the other user&apos;s typing using vibration of the cushions. When a user starts to type, the other user&apos;s chair cushion vibrates, which enables users to share typing information without distracting their attention to the messages. In UNIX talk program (a little old chat system), users can send a message character by character, which allows them to know what the others are doing. Alternative Interfaces for Chat realized two proto-type systems; Status Client for sharing status i</context>
</contexts>
<marker>[3]</marker>
<rawString>MSN messenger http://messenger.microsoft.com/</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Vronay</author>
<author>M Smith</author>
<author>S Drucker</author>
</authors>
<title>Alternative Interfaces for Chat,</title>
<date>1999</date>
<booktitle>Proc. of the 12th Annual ACM Symposium on User Interface Software and Technology UIST99</booktitle>
<contexts>
<context position="5134" citStr="[4]" startWordPosition="822" endWordPosition="822">e system window. Tangible Chat [5] communicates the state of the other user&apos;s typing using vibration of the cushions. When a user starts to type, the other user&apos;s chair cushion vibrates, which enables users to share typing information without distracting their attention to the messages. In UNIX talk program (a little old chat system), users can send a message character by character, which allows them to know what the others are doing. Alternative Interfaces for Chat realized two proto-type systems; Status Client for sharing status information; Flow Client for sharing time sequence information [4]. Status client implemented the following functions for sharing user’s status information. When a user presses a key, his or her name in the participants list is highlighted. A user’s last utterance appears next to his or her name in the participants list. When a user starts to write a message, it appears in gray color next to his or her name in the participants list. Flow Client improved the following floor holding function so that slow typists can easily join conversation. A user has own track on screen Visualization of participants&apos; character and timing information Auto scrolling of the mes</context>
<context position="11634" citStr="[4]" startWordPosition="1973" endWordPosition="1973"> Table 4. Level 1 Level 2 Factor A visible invisible (typing state ) (A1) (A2) Factor B at the end at the start (floor holding) of typing of typing (B1) (B2) Table 4: Factor and Level for ANOVA Table 5 and 6 shows that main effects concerning both the number and the length of turns are not significant. But interaction effects concerning the number of turns are significant. The detailed analysis of the interaction effects showed that the system with each new function significantly increases the number of turns. The previous work suggested two hypotheses about the number and the length of turns [4][5]. (1) If users share the process information, this will prompt smoothness of communication which results in the increase of the number of turns. (2) If users use the function of floor holding at the start of writing a message, they will be able to write what they really want without considering time pressure. This makes the length of turns longer than that without using the function. Adopting these assumptions, the results here might indicate the effectiveness of the new functions for smooth communication. The number of turns didn&apos;t increase when participants used the system with both funct</context>
</contexts>
<marker>[4]</marker>
<rawString>Vronay, D., Smith, M., and Drucker, S. (1999) Alternative Interfaces for Chat, Proc. of the 12th Annual ACM Symposium on User Interface Software and Technology UIST99</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Hirano Yamada</author>
<author>T</author>
<author>K Nishimoto</author>
</authors>
<title>Tangible Chat: Communication of conversation situation awareness using a sense of touch in a key-board chat system,</title>
<date>2002</date>
<tech>Tech. Report SIG-GW-43-18</tech>
<pages>103--108</pages>
<institution>Information Processing Society of Japan,</institution>
<contexts>
<context position="4565" citStr="[5]" startWordPosition="733" endWordPosition="733">e 1: Example of overlap-like phenomena In Figure 1, Speaker A talked about the visit to some company (utterance 1) and speaker B checked where A would go in response to utterance 1. At almost the same time of B&apos;s response, A sent his message about the job interview (utterance 3), which made adjacent turns semantically irrelevant. This overlap-like phenomenon can be escaped if at least A knows B is typing a response to A. 2.2 Communicating the information on how the utterances are made MSN messenger [3] shows whether the participants are typing at the bottom of the system window. Tangible Chat [5] communicates the state of the other user&apos;s typing using vibration of the cushions. When a user starts to type, the other user&apos;s chair cushion vibrates, which enables users to share typing information without distracting their attention to the messages. In UNIX talk program (a little old chat system), users can send a message character by character, which allows them to know what the others are doing. Alternative Interfaces for Chat realized two proto-type systems; Status Client for sharing status information; Flow Client for sharing time sequence information [4]. Status client implemented the</context>
<context position="11637" citStr="[5]" startWordPosition="1973" endWordPosition="1973">ble 4. Level 1 Level 2 Factor A visible invisible (typing state ) (A1) (A2) Factor B at the end at the start (floor holding) of typing of typing (B1) (B2) Table 4: Factor and Level for ANOVA Table 5 and 6 shows that main effects concerning both the number and the length of turns are not significant. But interaction effects concerning the number of turns are significant. The detailed analysis of the interaction effects showed that the system with each new function significantly increases the number of turns. The previous work suggested two hypotheses about the number and the length of turns [4][5]. (1) If users share the process information, this will prompt smoothness of communication which results in the increase of the number of turns. (2) If users use the function of floor holding at the start of writing a message, they will be able to write what they really want without considering time pressure. This makes the length of turns longer than that without using the function. Adopting these assumptions, the results here might indicate the effectiveness of the new functions for smooth communication. The number of turns didn&apos;t increase when participants used the system with both function</context>
</contexts>
<marker>[5]</marker>
<rawString>Yamada, Y. Hirano, T. and Nishimoto, K. (2002) Tangible Chat: Communication of conversation situation awareness using a sense of touch in a key-board chat system, Tech. Report SIG-GW-43-18 Information Processing Society of Japan, pp.103-108</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Ogura</author>
<author>M Ishizaki</author>
</authors>
<title>The characteristics analysis about the topic change in Chat Conversations</title>
<date>2002</date>
<tech>Tech. Report SIGSLUD-A202-3,</tech>
<contexts>
<context position="15540" citStr="[6]" startWordPosition="2662" endWordPosition="2662">e system &amp;quot; 4.4 The number of overlap-like phenomena The new system enables users to share the process information. Theoretically this should decrease overlap-like phenomena observed in conversations using the standard chat systems. Figure 5 shows the ratio of the overlap-like phenomena. It is difficult to find overlap-like phenomena from chat logs. Here we counted the number of the places which satisfies the following conditions: one is that the interval of utterances should be short (three seconds here); The other is that the topic threads should be parallel. We used an algorithm proposed in [6] to extract topic threads. There are no great differences for all the systems and the ratio of system 4 is the lowest. The combination of functions might raise awareness for others&apos; behavior, but the combination effects should be examined more thoroughly as future work System1 4.3% System2 6.4% System3 8.3% System4 2.7% Figure5: The ratio of overlap-like phenomena 4.5 Semantically irrelevant turns in adjacent positions speaker A was able to respond to speaker B’s utterance 40, while in the sequence change of the turns example, speaker B’s utterance 42 wrongly preceded A’s response 41 to B’s ut</context>
<context position="16943" citStr="[6]" startWordPosition="2909" endWordPosition="2909">A Ah I&apos;m getting hungry somehow ormal sequence of turns Uttr.No. 40 B Smother the sliced meat and the flour separately 42 A Ah I&apos;m getting hungry somehow 41 B So it&apos;s difficult to cook it by myself Table 11: Examples of sequence change of turns 4.3% 6.4% 8.3% 2.7% utterances &amp;quot; Table 11 shows examples of sequence change of turns. In the normal sequence of turns example, System3 System4 Figure 7: The ratio of changing sequence of turns for system 3 and 4 The number of sequence change of turns is expected to decrease when the system has the floor holding function. Based on the method proposed in [6], these turns were examined and their ratio was calculated shown in Figure 7. The results indicated that there are no great differences for both systems (changing sequence of turns existed at least 10% in both systems). The ratio of system 4 is a little lower than that of system 3. This might be able to be interpreted that visibility of typing information can be one of the factors to decrease sequence of change of turns, but this need s to be examined in future work. 5 Conclusion and Further Study We built a new system for sharing the process information. The system has the following functions</context>
</contexts>
<marker>[6]</marker>
<rawString>Ogura, K. and Ishizaki, M. (2002) The characteristics analysis about the topic change in Chat Conversations Tech. Report SIGSLUD-A202-3, Japan</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>