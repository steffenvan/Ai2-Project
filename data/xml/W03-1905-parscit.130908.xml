<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.915823">
RDF Instantiation of ISLE/MILE Lexical Entries
</title>
<author confidence="0.995691">
Nancy Ide
</author>
<affiliation confidence="0.73513975">
Department of Computer
Science
Vassar College
Poughkeepsie, New York
</affiliation>
<address confidence="0.978065">
USA 12604-0520
</address>
<email confidence="0.998803">
ide@cs.vassar.edu
</email>
<note confidence="0.527297">
Alessandro Lenci
Università di Pisa
Dipartimento di Linguistica
</note>
<address confidence="0.504761333333333">
Via Santa Maria 36
56100 PISA
Italy
</address>
<email confidence="0.943051">
lenci@ilc.cnr.it
</email>
<author confidence="0.352543">
Nicoletta Calzolari
</author>
<affiliation confidence="0.153734">
Istituto di Linguistica
</affiliation>
<address confidence="0.22669425">
Computazionale, CNR
Area della Ricerca
Via Moruzzi 1 – 56100 PISA
Italy
</address>
<email confidence="0.780769">
glottolo@ilc.cnr.it
</email>
<sectionHeader confidence="0.98911" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999695590909091">
In this paper we describe the overall
model for MILE lexical entries and
provide an instantiation of the model in
RDF/OWL. This work has been done
with an eye toward the goal of creating a
web-based registry of lexical data
categories and enabling the description of
lexical information by establishing
relations among them, and/or using pre-
defined objects that may reside at various
locations on the web. It is also assumed
that using OWL specifications to enhance
specifications of the ontology of lexical
objects will eventually enable the
exploitation of inferencing engines to
retrieve and possibly create lexical
information on the fly, as suited to
particular contexts. As such, the model
and RDF instantiation provided here are
in line with the goals of ISO TC37 SC4,
and should be fully mappable to the
proposed pivot.
</bodyText>
<sectionHeader confidence="0.999337" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99346756097561">
The eventual vision for computational lexicons is
to enable universal access to sophisticated
linguistic information, which in turn will serve as a
central component for content-based information
management on the web. This demands, first of all,
some standardized means to represent complex
lexical information while retaining the flexibility
required to accommodate diverse approaches to
lexicon organization and use. To this end, the
ISLE1 ( International Standards for Language
Engineering) Computational Lexicons Working
Group (CLWG) has designed MILE (Multilingual
ISLE Lexical Entry), a general schema for the
encoding of multilingual lexical information
intended as a meta-entry that can serve as a
standardized representational layer for multilingual
lexical resources. MILE consists of an incremental
definition of object-oriented layers for lexical
description that will enable open and distributed
lexicons, with elements possibly residing in
different sites of the web. The defined lexical
objects are intended for use by lexicon and
application developers to build and target lexical
data at high level of abstraction.
The Resource Definition Framework (RDF) and
the Ontology Web Language (OWL) recently
developed by the World Wide Web Consortium
(W3C) build upon the XML web infrastructure to
enable the creation of a Semantic Web, wherein
web objects can be classified according to their
properties, and the semantics of their relations
(links) to other web objects can be precisely
defined. This in turn will enable powerful
inferencing capabilities that can adapt language
processing applications to particular contexts.
The MILE lexical entry is an ideal structure for
rendering via RDF/OWL. It consists of a hierarchy
of lexical objects that are built up in a layered
fashion by combining atomic data categories via
clearly defined relations. The overall architecture is
modular and layered, as described in Atkins et al.
</bodyText>
<footnote confidence="0.625797">
1 ISLE Web Site URL:
lingue.ilc.pi.cnr.it/EAGLES96/isle/ISLE_Home_Page.htm
</footnote>
<bodyText confidence="0.999514361111111">
(2002) and Calzolari et al. (2003). On the
horizontal dimension, independent, linked modules
target different dimensions of lexical entries. On
the vertical dimension, the layered organization
allows for varying degrees of granularity in lexical
descriptions, allowing both “shallow” and “deep”
lexical representations. RDF’s class hierarchy
mechanism, together with its capacity to specify
named relations among objects in the various
classes, provide a web-based means to represent
this architecture.2 Furthermore, because RDF
allows for instantiating objects in any defined class
and subsequently referring to them as the target of
appropriate relations, lexical objects at any level of
specificity can be pre-defined. This provides an
important mechanism for standardization of lexical
elements, since these elements may be pre-defined,
organized in class hierarchies with inherited
properties, and used “off-the-shelf” as needed.
In this paper we describe the overall model for
MILE lexical entries and provide an instantiation
of the model in RDF/OWL. This work has been
done with an eye toward the goal of creating a
web-based registry of lexical data categories and
enabling the description of lexical information by
establishing relations among them, and/or using
pre-defined objects that may reside at various
locations on the web. It is also assumed that using
OWL specifications to enhance specifications of
the ontology of lexical objects will eventually
enable the exploitation of inferencing engines to
retrieve and possibly create lexical information on
the fly, as suited to particular contexts. As such, the
model and RDF instantiation provided here are in
line with the goals of ISO TC37 SC4, and should
be fully mappable to the proposed pivot.3
</bodyText>
<sectionHeader confidence="0.990592" genericHeader="method">
2 The MILE Lexical Model
</sectionHeader>
<bodyText confidence="0.991226666666667">
The MILE Lexical Model (MLM) consists of two
primary components: a mono-lingual component
and a multi-lingual component. The mono-lingual
</bodyText>
<footnote confidence="0.984864714285714">
2 It should be noted that this architecture is analogous to
other data models, including ER diagrams and various
knowledge representation schemes.
3 We have in fact produced a version of the prototype
ISLE lexical entry in an XML format instantiating the
proposed ISO pivot format (Ide and Romary,
Vassar/LORIA internal document).
</footnote>
<bodyText confidence="0.9986094">
component comprises three layers: morphological,
syntactic, and semantic. The overall architecture is
shown in Figure 1.
Within each of the MLM layers, two types of
objects are defined:
</bodyText>
<listItem confidence="0.857757941176471">
1. MILE Lexical Classes (MLC): the main
building blocks of lexical entries. They
formalize the basic lexical notions for each
layer defined in the ISLE project (Calzolari et
al. 2003). The MLM defines each class by
specifying its attributes and the relations
among them. Classes represent notions like
syntactic feature, syntactic phrase, predicate,
semantic relation, synset, etc. Instances of
MLCs are the MILE Data Categories (MDC).
So for instance, NP and VP are data category
instances of the class &lt;Phrase&gt;, and SUBJ and
OBJ are data category instances of the class
&lt;Function&gt;. Each MDC is identified by a URI.
MDC can be either user- defined or reside in a
shared repository.
2. lexical operations: special lexical entities
</listItem>
<bodyText confidence="0.958625916666667">
which allow users to state conditions and
perform complex operations over lexical
entries. They will for instance allow
lexicographers to establish multilingual
conditions, link the slots within two different
syntactic frames, link semantic arguments with
syntactic slots, etc.
The MLM is described with Entity-Relationship
(E-R) diagrams defining the entities of the lexical
model and the way they can be combined to design
an actual lexical entry. As such, the MLM does not
correspond to a specific lexical entry, but is rather
an entry schema corresponding to a lexical meta-
entry. This means that different possible lexical
entries can be designed as instances of the schema
provided by the MLM. Instance entries might
therefore differ for the type of information they
include (e.g. morphological, syntactic, semantic,
monolingual or multilingual, etc.), and for the
depth of lexical description.
Figure 2 depicts the MLM classes and relations for
the syntactic layer (SynU for “syntactic unit”). Full
definitions for the MLM can be found in the ISLE
document (Calzolari et al. 2003).
</bodyText>
<figure confidence="0.999249727272727">
semantic layer
syntactic layer
morphological
layer
linking conditions
mono-Mile
multilingual
correspondence
conditions
multi-MILE
mono-Mile
</figure>
<figureCaption confidence="0.985994">
Figure 1. Overall MILE architecture
</figureCaption>
<figure confidence="0.984104">
MLC:SynU
id: xs:anyURY
comment: xs:string
example: xs:string
hasSyntacticFrame
1..*
hasFrameSet
*
MLC:SyntacticFrame
MLC:FrameSet
composedBy Composition
*
correspondsTo MLC:SemU
*
CorrespSynUSemU
</figure>
<figureCaption confidence="0.999426">
Figure 2. Lexical classes and their relations for the syntactic layer (SynU)
</figureCaption>
<sectionHeader confidence="0.984817" genericHeader="method">
3 RDF instantiation
</sectionHeader>
<bodyText confidence="0.999946">
We have created an RDF schema for the
syntactic layer of the ISLE/MILE lexical entry
and instantiated one entry in several alternative
forms to explore its potential as a representation
for lexical data that can be integrated into the
Semantic Web. The following describes the
various components.
</bodyText>
<subsectionHeader confidence="0.408955">
3.1.1 RDF schema for ISLE lexical entries
</subsectionHeader>
<bodyText confidence="0.99986015625">
An RDF schema defines classes of objects and
their relations to other objects. It does not in
itself comprise an instance of these objects, but
simply specifies the properties and constraints
applicable to objects that conform to it.
The RDF schema for the syntactic layer of ISLE
lexical entries can be accessed at
http://www.cs.vassar.edu/~ide/rdf/isle-schema-
v.6. The classes and relations (properties)
defined in the schema correspond to the ER
diagrams in Calzolari et al. (2003). The schema
indicates that there is class of objects called
Entry; a property declaration indicates that the
relation hasSynU holds between Entry objects
and SynU objects. Note that classes can be
defined to be subclasses of other classes, in
which case properties associated with the parent
class are inherited. In the ISLE schema, for
example, the objects Self and SlotRealization
are defined to be sub-classes of PhraseElement,
and the hasPhrase property holds between any
object of type PhraseElement (including its
sub-classes) and objects of type Phrase.
The ISLE RDF schema and entries have been
validated using the ICS-FORTH Validating RDF
Parser (VRP v2.1), which analyzes the syntax of
a given RDF/ XML file according to the RDF
Model and Syntax Specification4 and checks
whether the statements contained in both RDF
schemas and resource descriptions satisfy the
semantic constraints derived by the RDF Schema
Specification.5
</bodyText>
<footnote confidence="0.995138">
4 http://www.w3.org/TR/rdf-syntax-grammar/
5 http://www.w3.org/TR/rdf-schema/
</footnote>
<sectionHeader confidence="0.9700435" genericHeader="method">
4 ISLE Lexical Entries and the Data
Category Registry
</sectionHeader>
<bodyText confidence="0.9997533125">
Appendix A contains three versions of the SynU
description for “eat”, instantiated as RDF
objects. The first is a “full” version in which all
of the information is specified, including atomic
values (strings) at the leaves of the tree structure.
The second two versions, rather than specifying
all information explicitly, rely on the existence
of a Data Category Registry (DCR) in which
pre-defined lexical objects are instantiated and
may be included in the entry by a direct
reference.
The potential to develop a Data Category
Registry in which lexical objects are instantiated
in RDF is one of the most important for the
creation of multi-lingual, reusable lexicons. It
allows for the following:
</bodyText>
<listItem confidence="0.89923835">
1. specification of a universally accessible,
standard set of morphological, syntactic, and
semantic information that can serve as a
reference for lexicons creators;
2. a fully modular specification of lexical
entities that enables use of all or parts of the
lexical information in the repository as
desired or appropriate, to build more
complex lexical information modules;
3. a template for data category description that
lexicon creators can use to create their own
data categories at any level of granularity;
4. means to reuse lexical specifications in
entries sharing common properties, thereby
eliminating redundancy as well as providing
direct means to identify lexical entries or
sub-entries with shared properties;
5. a universally accessible set of lexical
information categories that may be used in
applications or resources other than lexicons.
</listItem>
<bodyText confidence="0.999621785714286">
Note that the existence of a repository of lexical
objects, instantiated and specified at different
levels of complexity, does not imply that these
objects must be used by lexicon creators. Rather,
it provides a set of “off the shelf” lexical objects
which either may be used as is, or which provide
a departure point for the definition of new or
modified categories.
The examples in Appendix A provide a general
idea of how a repository of RDF-instantiated
lexical objects can be used. Sample repositories
at three different levels of granularity,
corresponding to the examples in Appendix A,
are given in Appendix B:
</bodyText>
<listItem confidence="0.965395714285714">
1. a repository of enumerated classes for
lexical objects at the lowest level of
granularity; this comprises a definition of
sets of possible values for various lexical
objects. Any object of this type must be
instantiated with one of the listed values.
2. a repository of phrase classes which
instantiate common phrase types, e.g., NP,
VP, etc.
3. a repository of constructions containing
instantiations of common syntactic
constructions (e.g., for verbs which are both
transitive and intransitive, as shown in the
example).
</listItem>
<bodyText confidence="0.959241">
The example entries demonstrate three different
possibilities for the use of information in the
repositories:
</bodyText>
<listItem confidence="0.924822736842105">
1. Entry 1 uses only the enumerated classes in
the LDCR for SynFeatureName and
SynFeatureValue. Note that in this case, the
LDCR only provides a closed list of possible
values, from which the assigned value in the
entry must be chosen.
2. Entry 2 refers to instances of phrase objects
in the LDCR rather than including them in
the entry; this enables referring to a complex
phrase (Vauxhave in the example) rather
than including it directly in the entry, and
provides the potential to reuse the same
instance by reference in the same or other
entries (this is done with N P in the
example).
3. Entry 3 takes advantage of construction
instances in the LDCR, thus eliminating the
full specification in the entry and, again,
allowing for reuse in other entries.
</listItem>
<sectionHeader confidence="0.988624" genericHeader="method">
5 Summary
</sectionHeader>
<bodyText confidence="0.999960043478261">
This exercise is intended to exemplify how RDF
may be used to instantiate lexical objects at
various levels of granularity, which can be used
and reused to create lexical entries within a
single lexicon as well as across lexicons. By
relying on the developing standardized
technologies underlying the Semantic Web, we
ensure universal accessibility and commonality.
Ultimately, lexical objects defined in this way
can be used not only for lexicons, but also in
language processing and other applications.
This example serves primarily as a proof of
concept that may be refined and modified as we
consider in more depth the exact RDF
representation that would best serve the needs of
lexicon creation. However, the potential of
exploiting the developments in the Semantic
Web world for lexicon development should be
clear. More importantly, by situating our work in
the context of W3 standards, we are in step with
ISO TC37/SC4 vision of a Linguistic Annotation
Framework that includes a Data Category
Registry of the type we describe here.
</bodyText>
<sectionHeader confidence="0.983556" genericHeader="method">
References
</sectionHeader>
<reference confidence="0.8996299">
Atkins, S., Bel, N., Bertagna, F., Bouillon, P.,
Calzolari, N., Fellbaum, C., Grishman, R., Lenci,
A., MacLeod, C., Palmer, M., Thurmair, G.,
Villegas, M., Zampolli A., 2002. “From
Resources to Applications. Designing the
Multilingual ISLE Lexical Entry”, Proceedings
of LREC 2002, Las Palmas, Canary Islands,
Spain: 687-693.
Calzolari, N., Bertagna, F., Lenci, A.,
Monachini, M., 2003. Standards and best
</reference>
<table confidence="0.731574363636364">
Practice for Multilingual Computational
Lexicons and MILE (Multilingual ISLE Lexical
Entry), ISLE Computational Lexicon Working
Group deliverables D2.2 – D3.2, Pisa.
Appendix A: Sample Entries
ENTRY 1 : Full entry
Highlighted lines refer to objects whose values are constrained in DCR definitions (Appendix B).
&lt;?xml version=&amp;quot;1.0&amp;quot;?&gt;
&lt;!-- Sample ISLE lexical Entry for EAT (transitive), SynU only
Abbreviated syntax version using no pre-defined objects
2002/10/23 Author: Nancy Ide --&gt;
</table>
<figure confidence="0.930229571428571">
&lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot;
xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot;
xmlns:mlc=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;
xmlns=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;
&lt;Entry rdf:ID=&amp;quot;eat1&amp;quot;&gt;
&lt;!-- The SynU for eat1 --&gt;
&lt;hasSynu rdf:parseType=&amp;quot;Resource&amp;quot;&gt;
&lt;SynU rdf:ID=&amp;quot;eat1-SynU&amp;quot;&gt;
&lt;example&gt;John ate the cake&lt;/example&gt;
&lt;hasSyntacticFrame&gt;
&lt;SyntacticFrame rdf:ID=&amp;quot;eat1SynFrame&amp;quot;&gt;
&lt;hasSelf&gt;
&lt;Self rdf:ID=&amp;quot;eat1Self&amp;quot;&gt;
&lt;headedBy&gt;
&lt;Phrase rdf:ID=&amp;quot;Vauxhave&amp;quot;&gt;
&lt;hasSynFeature&gt;
&lt;SynFeature&gt;
&lt;hasSynFeatureName rdf:value=&amp;quot;aux&amp;quot;/&gt;
&lt;hasSynFeatureValue rdf:value=&amp;quot;have&amp;quot;/&gt;
&lt;/SynFeature&gt;&lt;/hasSynFeature&gt;&lt;/Phrase&gt;&lt;/headedBy&gt;&lt;/Self&gt;&lt;/hasSelf&gt;
&lt;hasConstruction&gt;
&lt;Construction rdf:ID=&amp;quot;eat1Const&amp;quot;&gt;
&lt;slot&gt;
&lt;SlotRealization rdf:ID=&amp;quot;NPsubj&amp;quot;&gt;
&lt;hasFunction rdf:value=&amp;quot;Subj&amp;quot;/&gt;
&lt;filledBy rdf:value=&amp;quot;NP&amp;quot;/&gt;
&lt;/SlotRealization&gt;&lt;/slot&gt;
&lt;slot&gt;
&lt;SlotRealization rdf:ID=&amp;quot;NPobj&amp;quot;&gt;
&lt;hasFunction rdf:value=&amp;quot;Obj&amp;quot;/&gt;
&lt;filledBy rdf:value=&amp;quot;NP&amp;quot;/&gt;
&lt;/SlotRealization&gt;&lt;/slot&gt;&lt;/Construction&gt;&lt;/hasConstruction&gt;
&lt;hasFrequency rdf:value=&amp;quot;8788&amp;quot; mlc:corpus=&amp;quot;PAROLE&amp;quot;/&gt;
&lt;/SyntacticFrame&gt;&lt;/hasSyntacticFrame&gt;&lt;/SynU&gt;&lt;/hasSynu&gt;&lt;/Entry&gt;&lt;/rdf:RDF&gt;
ENTRY 2 : Using DCR categories for PHRASE
</figure>
<bodyText confidence="0.6513608">
The highlighted lines refer to pre-instantiated lexical objects. A portion of the LDCR for Phrases is given
in Appendix C. The URL reference is to the actual web address where the object is instantiated.
&lt;?xml version=&amp;quot;1.0&amp;quot;?&gt;
&lt;!--
Sample ISLE lexical Entry for EAT (transitive), SynU only
</bodyText>
<footnote confidence="0.873218636363636">
Abbreviated syntax version using no pre-defined objects
2002/10/23 Author: Nancy Ide --&gt;
&lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot;
xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot;
xmlns:mlc=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;
xmlns=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;
&lt;Entry rdf:ID=&amp;quot;eat1&amp;quot;&gt;
&lt;!-- The SynU for eat1 --&gt;
&lt;hasSynu rdf:parseType=&amp;quot;Resource&amp;quot;&gt;
&lt;SynU rdf:ID=&amp;quot;eat1-SynU&amp;quot;&gt;
&lt;example&gt;John ate the cake&lt;/example&gt;
</footnote>
<figure confidence="0.983942666666667">
&lt;hasSyntacticFrame&gt;
&lt;SyntacticFrame rdf:ID=&amp;quot;eat1SynFrame&amp;quot;&gt;
&lt;hasSelf&gt;
&lt;Self rdf:ID=&amp;quot;eat1Self&amp;quot;&gt;
&lt;headedBy rdf:resource=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#Vauxhave&amp;quot;/&gt;
&lt;/Self&gt;&lt;/hasSelf&gt;
&lt;hasConstruction&gt;
&lt;Construction rdf:ID=&amp;quot;eat1Const&amp;quot;&gt;
&lt;slot&gt;
&lt;SlotRealization rdf:ID=&amp;quot;NPsubj&amp;quot;&gt;
&lt;hasFunction rdf:value=&amp;quot;Subj&amp;quot;/&gt;
&lt;filledBy rdf:resource=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP&amp;quot;/&gt;
&lt;/SlotRealization&gt;&lt;/slot&gt;
&lt;slot&gt;
&lt;SlotRealization rdf:ID=&amp;quot;NPobj&amp;quot;&gt;
&lt;hasFunction rdf:value=&amp;quot;Obj&amp;quot;/&gt;
&lt;filledBy rdf:resource=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP&amp;quot;/&gt;
&lt;/SlotRealization&gt;&lt;/slot&gt;&lt;/Construction&gt;&lt;/hasConstruction&gt;
&lt;hasFrequency rdf:value=&amp;quot;8788&amp;quot; mlc:corpus=&amp;quot;PAROLE&amp;quot;/&gt;
&lt;/SyntacticFrame&gt;&lt;/hasSyntacticFrame&gt;&lt;/SynU&gt;&lt;/hasSynu&gt;&lt;/Entry&gt;&lt;/rdf:RDF&gt;
ENTRY 3 : Using DCR categories for CONSTRUCTION
</figure>
<bodyText confidence="0.916911333333333">
The highlighted lines refer to a pre-instantiated Construction object. A portion of the DCR for
Constructions is given in Appendix B. The URL reference is to the actual web address where the object is
instantiated.
</bodyText>
<figure confidence="0.978387375">
&lt;?xml version=&amp;quot;1.0&amp;quot;?&gt;
&lt;!-- Sample ISLE lexical Entry for EAT (transitive)
Abbreviated syntax version using pre-defined construction
2002/10/23 Author: Nancy Ide --&gt;
&lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot;
xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot;
xmlns:mlc=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;
xmlns=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;
&lt;Entry rdf:ID=&amp;quot;eat1&amp;quot;&gt;
&lt;!-- The SynU for eat1 --&gt;
&lt;hasSynu rdf:parseType=&amp;quot;Resource&amp;quot;&gt;
&lt;SynU rdf:ID=&amp;quot;eat1-SynU&amp;quot;&gt;
&lt;example&gt;John ate the cake&lt;/example&gt;
&lt;hasSyntacticFrame&gt;
&lt;SyntacticFrame rdf:ID=&amp;quot;eat1SynFrame&amp;quot;&gt;
&lt;hasSelf&gt;
&lt;Self rdf:ID=&amp;quot;eat1Self&amp;quot;&gt;
&lt;headedBy rdf:resource=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#Vauxhave&amp;quot;/&gt;
&lt;/Self&gt;&lt;/hasSelf&gt;
&lt;hasConstruction rdf:resource=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Constructions#TransIntrans&amp;quot;/&gt;
&lt;hasFrequency rdf:value=&amp;quot;8788&amp;quot; mlc:corpus=&amp;quot;PAROLE&amp;quot;/&gt;
&lt;/SyntacticFrame&gt;&lt;/hasSyntacticFrame&gt;&lt;/SynU&gt;&lt;/hasSynu&gt;&lt;/Entry&gt;&lt;/rdf:RDF&gt;
</figure>
<sectionHeader confidence="0.976173" genericHeader="method">
Appendix B: DCR definitions
</sectionHeader>
<bodyText confidence="0.4370165">
Sample DCR entries specifying enumerated values for SynFeatureName, etc. The specification uses the
Ontology Web Language (OWL) to list valid values for objects of the defined class.
</bodyText>
<footnote confidence="0.8769172">
&lt;!-- Enumerated classes for ISLE lexical entries v0.1 2002/10/23 Author: Nancy Ide --&gt;
&lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot;
xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot;
xmlns:owl =&amp;quot;http://www.w3.org/2002/07/owl#
xmlns:isle =&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;
</footnote>
<figure confidence="0.992907404761905">
&lt;rdfs:Class rdf:about=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-enumerated-classes#FunctionType&amp;quot;&gt;
&lt;owl:oneOf&gt;
&lt;rdf:Seq&gt;
&lt;rdf:li&gt;Subj&lt;/rdf:li&gt;
&lt;rdf:li&gt;Obj&lt;/rdf:li&gt;
&lt;rdf:li&gt;Comp&lt;/rdf:li&gt;
&lt;rdf:li&gt;Arg&lt;/rdf:li&gt;
&lt;rdf:li&gt;Iobj&lt;/rdf:li&gt;
&lt;/rdf:Seq&gt;&lt;/owl:oneOf&gt;&lt;/rdfs:Class&gt;
&lt;rdfs:Class rdf:about=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-enumerated-classes#SynFeatureName&amp;quot;&gt;
&lt;owl:oneOf&gt;
&lt;rdf:Seq&gt;
&lt;rdf:li&gt;tense&lt;/rdf:li&gt;
&lt;rdf:li&gt;gender&lt;/rdf:li&gt;
&lt;rdf:li&gt;control&lt;/rdf:li&gt;
&lt;rdf:li&gt;person&lt;/rdf:li&gt;
&lt;rdf:li&gt;aux&lt;/rdf:li&gt;
&lt;/rdf:Seq&gt;&lt;/owl:oneOf&gt; &lt;/rdfs:Class&gt;
&lt;rdfs:Class rdf:about=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-enumerated-classes#SynFeatureValue&amp;quot;&gt;
&lt;owl:oneOf&gt;
&lt;rdf:Seq&gt;
&lt;rdf:li&gt;have&lt;/rdf:li&gt;
&lt;rdf:li&gt;be&lt;/rdf:li&gt;
&lt;rdf:li&gt;subject_control&lt;/rdf:li&gt;
&lt;rdf:li&gt;object_control&lt;/rdf:li&gt;
&lt;rdf:li&gt;masculine&lt;/rdf:li&gt;
&lt;rdf:li&gt;feminine&lt;/rdf:li&gt;
&lt;/rdf:Seq&gt;&lt;/owl:oneOf&gt;&lt;/rdfs:Class&gt;&lt;/rdf:RDF&gt;
Sample LDCR entry for two Phrase objects
&lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot;
xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot;
xmlns:mlc=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;
&lt;Phrase rdf:ID=&amp;quot;NP&amp;quot; rdfs:label=&amp;quot;NP&amp;quot;/&gt;
&lt;Phrase rdf:ID=&amp;quot;Vauxhave&amp;quot;&gt;
&lt;hasSynFeature&gt;
&lt;SynFeature&gt;
&lt;hasSynFeatureName rdf:value=&amp;quot;aux&amp;quot;/&gt;
&lt;hasSynFeatureValue rdf:value=&amp;quot;have&amp;quot;/&gt;
&lt;/SynFeature&gt;&lt;/hasSynFeature&gt;&lt;/Phrase&gt;&lt;/rdf:RDF&gt;
</figure>
<reference confidence="0.930716294117647">
Sample LDCR entry for a Construction object
&lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot;
xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot;
xmlns=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;
&lt;Construction rdf:ID=&amp;quot;TransIntrans&amp;quot;&gt;
&lt;slot&gt;
&lt;SlotRealization rdf:ID=&amp;quot;NPsubj&amp;quot;&gt;
&lt;hasFunction rdf:value=&amp;quot;Subj&amp;quot;/&gt;
&lt;filledBy rdf:resource=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP&amp;quot;/&gt;
&lt;/SlotRealization&gt;&lt;/slot&gt;
&lt;slot&gt;
&lt;SlotRealization rdf:ID=&amp;quot;NPobj&amp;quot;&gt;
&lt;hasFunction rdf:value=&amp;quot;Obj&amp;quot;/&gt;
&lt;filledBy rdf:resource=
&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-datcats/Phrases#NP&amp;quot;/&gt;
&lt;/SlotRealization&gt;&lt;/slot&gt;&lt;/Construction&gt;&lt;/rdf:RDF&gt;
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.168739">
<title confidence="0.998283">RDF Instantiation of ISLE/MILE Lexical Entries</title>
<author confidence="0.989694">Nancy</author>
<affiliation confidence="0.8572125">Department of Vassar</affiliation>
<address confidence="0.9962255">Poughkeepsie, New York USA</address>
<email confidence="0.999626">ide@cs.vassar.edu</email>
<author confidence="0.904566">Alessandro</author>
<affiliation confidence="0.9986495">Università di Pisa Dipartimento di Linguistica</affiliation>
<address confidence="0.988924333333333">Via Santa Maria 36 56100 PISA Italy</address>
<email confidence="0.997266">lenci@ilc.cnr.it</email>
<author confidence="0.774389">Nicoletta</author>
<affiliation confidence="0.794292">Istituto di Computazionale, Area della</affiliation>
<address confidence="0.8559675">Via Moruzzi 1 – 56100 PISA Italy</address>
<email confidence="0.999003">glottolo@ilc.cnr.it</email>
<abstract confidence="0.997120521739131">In this paper we describe the overall model for MILE lexical entries and provide an instantiation of the model in RDF/OWL. This work has been done with an eye toward the goal of creating a web-based registry of lexical data categories and enabling the description of lexical information by establishing relations among them, and/or using predefined objects that may reside at various locations on the web. It is also assumed that using OWL specifications to enhance specifications of the ontology of lexical objects will eventually enable the exploitation of inferencing engines to retrieve and possibly create lexical information on the fly, as suited to particular contexts. As such, the model and RDF instantiation provided here are in line with the goals of ISO TC37 SC4, and should be fully mappable to the proposed pivot.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Atkins</author>
<author>N Bel</author>
<author>F Bertagna</author>
<author>P Bouillon</author>
<author>N Calzolari</author>
<author>C Fellbaum</author>
<author>R Grishman</author>
<author>A Lenci</author>
<author>C MacLeod</author>
<author>M Palmer</author>
<author>G Thurmair</author>
<author>M Villegas</author>
<author>A Zampolli</author>
</authors>
<title>From Resources to Applications. Designing the Multilingual ISLE Lexical Entry”,</title>
<date>2002</date>
<booktitle>Proceedings of LREC 2002,</booktitle>
<pages>687--693</pages>
<location>Las Palmas, Canary Islands, Spain:</location>
<marker>Atkins, Bel, Bertagna, Bouillon, Calzolari, Fellbaum, Grishman, Lenci, MacLeod, Palmer, Thurmair, Villegas, Zampolli, 2002</marker>
<rawString>Atkins, S., Bel, N., Bertagna, F., Bouillon, P., Calzolari, N., Fellbaum, C., Grishman, R., Lenci, A., MacLeod, C., Palmer, M., Thurmair, G., Villegas, M., Zampolli A., 2002. “From Resources to Applications. Designing the Multilingual ISLE Lexical Entry”, Proceedings of LREC 2002, Las Palmas, Canary Islands, Spain: 687-693.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Calzolari</author>
<author>F Bertagna</author>
<author>A Lenci</author>
<author>M Monachini</author>
</authors>
<title>Standards and best Sample LDCR entry for a Construction object</title>
<date>2003</date>
<contexts>
<context position="3315" citStr="Calzolari et al. (2003)" startWordPosition="486" endWordPosition="489">ntics of their relations (links) to other web objects can be precisely defined. This in turn will enable powerful inferencing capabilities that can adapt language processing applications to particular contexts. The MILE lexical entry is an ideal structure for rendering via RDF/OWL. It consists of a hierarchy of lexical objects that are built up in a layered fashion by combining atomic data categories via clearly defined relations. The overall architecture is modular and layered, as described in Atkins et al. 1 ISLE Web Site URL: lingue.ilc.pi.cnr.it/EAGLES96/isle/ISLE_Home_Page.htm (2002) and Calzolari et al. (2003). On the horizontal dimension, independent, linked modules target different dimensions of lexical entries. On the vertical dimension, the layered organization allows for varying degrees of granularity in lexical descriptions, allowing both “shallow” and “deep” lexical representations. RDF’s class hierarchy mechanism, together with its capacity to specify named relations among objects in the various classes, provide a web-based means to represent this architecture.2 Furthermore, because RDF allows for instantiating objects in any defined class and subsequently referring to them as the target of</context>
<context position="5909" citStr="Calzolari et al. 2003" startWordPosition="876" endWordPosition="879"> including ER diagrams and various knowledge representation schemes. 3 We have in fact produced a version of the prototype ISLE lexical entry in an XML format instantiating the proposed ISO pivot format (Ide and Romary, Vassar/LORIA internal document). component comprises three layers: morphological, syntactic, and semantic. The overall architecture is shown in Figure 1. Within each of the MLM layers, two types of objects are defined: 1. MILE Lexical Classes (MLC): the main building blocks of lexical entries. They formalize the basic lexical notions for each layer defined in the ISLE project (Calzolari et al. 2003). The MLM defines each class by specifying its attributes and the relations among them. Classes represent notions like syntactic feature, syntactic phrase, predicate, semantic relation, synset, etc. Instances of MLCs are the MILE Data Categories (MDC). So for instance, NP and VP are data category instances of the class &lt;Phrase&gt;, and SUBJ and OBJ are data category instances of the class &lt;Function&gt;. Each MDC is identified by a URI. MDC can be either user- defined or reside in a shared repository. 2. lexical operations: special lexical entities which allow users to state conditions and perform co</context>
<context position="7543" citStr="Calzolari et al. 2003" startWordPosition="1131" endWordPosition="1134">LM does not correspond to a specific lexical entry, but is rather an entry schema corresponding to a lexical metaentry. This means that different possible lexical entries can be designed as instances of the schema provided by the MLM. Instance entries might therefore differ for the type of information they include (e.g. morphological, syntactic, semantic, monolingual or multilingual, etc.), and for the depth of lexical description. Figure 2 depicts the MLM classes and relations for the syntactic layer (SynU for “syntactic unit”). Full definitions for the MLM can be found in the ISLE document (Calzolari et al. 2003). semantic layer syntactic layer morphological layer linking conditions mono-Mile multilingual correspondence conditions multi-MILE mono-Mile Figure 1. Overall MILE architecture MLC:SynU id: xs:anyURY comment: xs:string example: xs:string hasSyntacticFrame 1..* hasFrameSet * MLC:SyntacticFrame MLC:FrameSet composedBy Composition * correspondsTo MLC:SemU * CorrespSynUSemU Figure 2. Lexical classes and their relations for the syntactic layer (SynU) 3 RDF instantiation We have created an RDF schema for the syntactic layer of the ISLE/MILE lexical entry and instantiated one entry in several altern</context>
<context position="8836" citStr="Calzolari et al. (2003)" startWordPosition="1313" endWordPosition="1316">ata that can be integrated into the Semantic Web. The following describes the various components. 3.1.1 RDF schema for ISLE lexical entries An RDF schema defines classes of objects and their relations to other objects. It does not in itself comprise an instance of these objects, but simply specifies the properties and constraints applicable to objects that conform to it. The RDF schema for the syntactic layer of ISLE lexical entries can be accessed at http://www.cs.vassar.edu/~ide/rdf/isle-schemav.6. The classes and relations (properties) defined in the schema correspond to the ER diagrams in Calzolari et al. (2003). The schema indicates that there is class of objects called Entry; a property declaration indicates that the relation hasSynU holds between Entry objects and SynU objects. Note that classes can be defined to be subclasses of other classes, in which case properties associated with the parent class are inherited. In the ISLE schema, for example, the objects Self and SlotRealization are defined to be sub-classes of PhraseElement, and the hasPhrase property holds between any object of type PhraseElement (including its sub-classes) and objects of type Phrase. The ISLE RDF schema and entries have b</context>
</contexts>
<marker>Calzolari, Bertagna, Lenci, Monachini, 2003</marker>
<rawString>Calzolari, N., Bertagna, F., Lenci, A., Monachini, M., 2003. Standards and best Sample LDCR entry for a Construction object</rawString>
</citation>
<citation valid="false">
<title>xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot; xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot; xmlns=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;</title>
<marker></marker>
<rawString>&lt;rdf:RDF xmlns:rdf=&amp;quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;quot; xmlns:rdfs=&amp;quot;http://www.w3.org/2000/01/rdf-schema#&amp;quot; xmlns=&amp;quot;http://www.cs.vassar.edu/~ide/rdf/isle-schema-v.6#&amp;quot;&gt;</rawString>
</citation>
<citation valid="false">
<pages>rdf:ID=&amp;quot;TransIntrans&amp;quot;&gt;</pages>
<marker></marker>
<rawString>&lt;Construction rdf:ID=&amp;quot;TransIntrans&amp;quot;&gt; &lt;slot&gt;</rawString>
</citation>
<citation valid="false">
<note>rdf:ID=&amp;quot;NPsubj&amp;quot;&gt; rdf:value=&amp;quot;Subj&amp;quot;/&gt; rdf:resource=</note>
<marker></marker>
<rawString>&lt;SlotRealization rdf:ID=&amp;quot;NPsubj&amp;quot;&gt; &lt;hasFunction rdf:value=&amp;quot;Subj&amp;quot;/&gt; &lt;filledBy rdf:resource=</rawString>
</citation>
<citation valid="false">
<note>rdf:ID=&amp;quot;NPobj&amp;quot;&gt; rdf:value=&amp;quot;Obj&amp;quot;/&gt; rdf:resource=</note>
<marker></marker>
<rawString>&lt;SlotRealization rdf:ID=&amp;quot;NPobj&amp;quot;&gt; &lt;hasFunction rdf:value=&amp;quot;Obj&amp;quot;/&gt; &lt;filledBy rdf:resource=</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>