<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.972271">
Phrase Based Decoding using a Discriminative Model
</title>
<author confidence="0.544381">
Prasanth Kolachina
</author>
<affiliation confidence="0.286326">
LTRC, IIIT-Hyderabad
</affiliation>
<email confidence="0.701848">
{prasanth k}@research.iiit.ac.in
</email>
<subsectionHeader confidence="0.43961">
Srinivas Bangalore
</subsectionHeader>
<address confidence="0.330129">
AT&amp;T Labs-Research, NY
</address>
<email confidence="0.970859">
{srini}@research.att.com
</email>
<note confidence="0.5222605">
Sriram Venkatapathy
LTRC, IIIT-Hyderabad
</note>
<email confidence="0.764745">
{sriram}@research.iiit.ac.in
</email>
<author confidence="0.542584">
Sudheer Kolachina
</author>
<affiliation confidence="0.313904">
LTRC, IIIT-Hyderabad
</affiliation>
<email confidence="0.917517">
{sudheer.kpg08}@research.iiit.ac.in
</email>
<author confidence="0.240937">
Avinesh PVS
</author>
<affiliation confidence="0.141836">
LTRC, IIIT-Hyderabad
</affiliation>
<email confidence="0.862676">
{avinesh}@research.iiit.ac.in
</email>
<sectionHeader confidence="0.994933" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999957035714286">
In this paper, we present an approach to
statistical machine translation that com-
bines the power of a discriminative model
(for training a model for Machine Transla-
tion), and the standard beam-search based
decoding technique (for the translation of
an input sentence). A discriminative ap-
proach for learning lexical selection and
reordering utilizes a large set of feature
functions (thereby providing the power to
incorporate greater contextual and linguis-
tic information), which leads to an effec-
tive training of these models. This model
is then used by the standard state-of-art
Moses decoder (Koehn et al., 2007) for the
translation of an input sentence.
We conducted our experiments on
Spanish-English language pair. We used
maximum entropy model in our exper-
iments. We show that the performance
of our approach (using simple lexical
features) is comparable to that of the
state-of-art statistical MT system (Koehn
et al., 2007). When additional syntactic
features (POS tags in this paper) are used,
there is a boost in the performance which
is likely to improve when richer syntactic
features are incorporated in the model.
</bodyText>
<sectionHeader confidence="0.99906" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999970064516129">
The popular approaches to machine translation
use the generative IBM models for training
(Brown et al., 1993; Och et al., 1999). The param-
eters for these models are learnt using the stan-
dard EM Algorithm. The parameters used in these
models are extremely restrictive, that is, a simple,
small and closed set of feature functions is used
to represent the translation process. Also, these
feature functions are local and are word based. In
spite of these limitations, these models perform
very well for the task of word-alignment because
of the restricted search space. However, they per-
form poorly during decoding (or translation) be-
cause of their limitations in the context of a much
larger search space.
To handle the contextual information, phrase-
based models were introduced (Koehn et al.,
2003). The phrase-based models use the word
alignment information from the IBM models and
train source-target phrase pairs for lexical se-
lection (phrase-table) and distortions of source
phrases (reordering-table). These models are still
relatively local, as the target phrases are tightly as-
sociated with their corresponding source phrases.
In contrast to a phrase-based model, a discrim-
inative model has the power to integrate much
richer contextual information into the training
model. Contextual information is extremely use-
ful in making lexical selections of higher quality,
as illustrated by the models for Global Lexical Se-
lection (Bangalore et al., 2007; Venkatapathy and
</bodyText>
<page confidence="0.982834">
34
</page>
<note confidence="0.9817175">
Proceedings of SSST-4, Fourth Workshop on Syntax and Structure in Statistical Translation, pages 34–42,
COLING 2010, Beijing, August 2010.
</note>
<bodyText confidence="0.998856980769231">
Bangalore, 2009).
However, the limitation of global lexical se-
lection models has been sentence construction.
In global lexical selection models, lattice con-
struction and scoring (LCS) is used for the pur-
pose of sentence construction (Bangalore et al.,
2007; Venkatapathy and Bangalore, 2009). In our
work, we address this limitation of global lexi-
cal selection models by using an existing state-of-
art decoder (Koehn et al., 2007) for the purpose
of sentence construction. The translation model
used by this decoder is derived from a discrimina-
tive model, instead of the usual phrase-table and
reordering-table construction algorithms. This al-
lows us to use the effectiveness of an existing
phrase-based decoder while retaining the advan-
tages of the discriminative model. In this paper,
we compare the sentence construction accuracies
of lattice construction and scoring approach (see
section 4.1 for LCS Decoding) and the phrase-
based decoding approach (see section 4.2).
Another advantage of using a discriminative ap-
proach to construct the phrase table and the re-
ordering table is the flexibility it provides to in-
corporate linguistic knowledge in the form of ad-
ditional feature functions. In the past, factored
phrase-based approaches for Machine Translation
have allowed the use of linguistic feature func-
tions. But, they are still bound by the local-
ity of context, and definition of a fixed struc-
ture of dependencies between the factors (Koehn
and Hoang, 2007). Furthermore, factored phrase-
based approaches place constraints both on the
type and number of factors that can be incorpo-
rated into the training. In this paper, though we do
not extensively test this aspect, we show that us-
ing syntactic feature functions does improve the
performance of our approach, which is likely to
improve when much richer syntactic feature func-
tions (such as information about the parse struc-
ture) are incorporated in the model.
As the training model in a standard phrase-
based system is relatively impoverished with re-
spect to contextual/linguistic information, integra-
tion of the discriminative model in the form of
phrase-table and reordering-table with the phrase-
based decoder is highly desirable. We propose to
do this by defining sentence specific tables. For
example, given a source sentence s, the phrase-
table contains all the possible phrase-pairs condi-
tioned on the context of the source sentence s.
In this paper, the key contributions are,
</bodyText>
<listItem confidence="0.7505695">
1. We combine a discriminative training model
with a phrase-based decoder. We ob-
tained comparable results with the state-of-
art phrase-based decoder.
2. We evaluate the performance of the lattice
construction and scoring (LCS) approach to
decoding. We observed that even though the
lexical accuracy obtained using LCS is high,
the performance in terms of sentence con-
struction is low when compared to phrase-
based decoder.
3. We show that the incorporation of syntactic
</listItem>
<bodyText confidence="0.988196">
information (POS tags) in our discriminative
model boosts the performance of translation.
In future, we plan to use richer syntactic fea-
ture functions (which the discriminative ap-
proach allows us to incorporate) to evaluate
the approach.
The paper is organized in the following sec-
tions. Section 2 presents the related work. In
section 3, we describe the training of our model.
In section 4, we present the decoding approaches
(both LCS and phrase-based decoder). We de-
scribe the data used in our experiments in section
5. Section 6 consists of the experiments and re-
sults. Finally we conclude the paper in section 7.
</bodyText>
<sectionHeader confidence="0.999763" genericHeader="introduction">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999335923076923">
In this section, we present approaches that are di-
rectly related to our approach. In Direct Trans-
lation Model (DTM) proposed for statistical ma-
chine translation by (Papineni et al., 1998; Och
and Ney, 2002), the authors present a discrimi-
native set-up for natural language understanding
(and MT). They use a slightly modified equation
(in comparison to IBM models) as shown in equa-
tion 1. In equation 1, they consider the translation
model from f → e (p(e|f)), instead of the the-
oretically sound (after the application of Bayes’
rule), e → f (p(f|e)) and use grammatical fea-
tures such as the presence of equal number of
</bodyText>
<page confidence="0.989962">
35
</page>
<bodyText confidence="0.757074">
verbs forms etc.
</bodyText>
<equation confidence="0.99241">
eˆ = arg max pTM(e|f) ∗ pLM(e) (1)
e
</equation>
<bodyText confidence="0.9704287">
In their model, they use generic feature func-
tions such as language model, cooccurence fea-
tures such as presence of a lexical relationship in
the lexicon. Their search algorithm limited the use
of complex features.
Direct Translation Model 2 (DTM2) (Itty-
cheriah and Roukos, 2007) expresses the phrase-
based translation task in a unified log-linear prob-
abilistic framework consisting of three compo-
nents:
</bodyText>
<listItem confidence="0.998922285714286">
1. a prior conditional distribution P0
2. a number of feature functions Φi() that cap-
ture the effects of translation and language
model
3. the weights of the features λi that are esti-
mated using MaxEnt training (Berger et al.,
1996) as shown in equation 2.
</listItem>
<equation confidence="0.993550333333333">
P r(e|f) = Z exp
P0(e, j|f) λiΦi(e, j, f) (2)
i
</equation>
<bodyText confidence="0.999774916666667">
In the above equation, j is the skip reordering
factor for the phrase pair captured by Φi() and rep-
resents the jump from the previous source word.
Z represents the per source sentence normaliza-
tion term (Hassan et al., 2009). While a uni-
form prior on the set of futures results in a max-
imum entropy model, choosing other priors out-
put a minimum divergence models. Normalized
phrase count has been used as the prior P0 in the
DTM2 model.
The following decision rule is used to obtain opti-
mal translation.
</bodyText>
<equation confidence="0.9949716">
eˆ = arg max Pr(e|f)
e
M (3)
= arg max λmΦm(f, e)
e m=1
</equation>
<bodyText confidence="0.9997895">
The DTM2 model differs from other phrase-
based SMT models in that it avoids the redun-
dancy present in other systems by extracting from
a word aligned parallel corpora a set of minimal
phrases such that no two phrases overlap with
each other (Hassan et al., 2009).
The decoding strategy in DTM2 (Ittycheriah
and Roukos, 2007) is similar to a phrase-based de-
coder except that the score of a particular transla-
tion block is obtained from the maximum entropy
model using the set of feature functions. In our
approach, instead of providing the complete scor-
ing function ourselves, we compute the parame-
ters needed by a phrase based decoder, which in
turn uses these parameters appropriately. In com-
parison with the DTM2, we also use minimal non-
overlapping blocks as the entries in the phrase ta-
ble that we generate.
Xiong et al. (2006) present a phrase reordering
model under the ITG constraint using a maximum
entropy framework. They model the reordering
problem as a two-class classification problem, the
classes being straight and inverted. The model is
used to merge the phrases obtained from trans-
lating the segments in a source sentence. The
decoder used is a hierarchical decoder motivated
from the CYK parsing algorithm employing a
beam search algorithm. The maximum entropy
model is presented with features extracted from
the blocks being merged and probabilities are es-
timated using the log-linear equation shown in
(4). The work in addition to lexical features and
collocational features, uses an additional metric
called the information gain ratio (IGR) as a fea-
ture. The authors report an improvement of 4%
BLEU score over the traditional distance based
distortion model upon using the lexical features
alone.
</bodyText>
<equation confidence="0.978711666666667">
1
pλ(y|x) = Zλ(x)exp( λiΦi(x, y)) (4)
i
</equation>
<sectionHeader confidence="0.988044" genericHeader="method">
3 Training
</sectionHeader>
<bodyText confidence="0.9882425">
The training process of our approach has two
steps:
</bodyText>
<listItem confidence="0.99815875">
1. training the discriminative models for trans-
lation and reordering.
2. integrating the models into a phrase based
decoder.
</listItem>
<page confidence="0.991254">
36
</page>
<bodyText confidence="0.99990725">
The input to our training step are the word-
alignments between source and target sentences
obtained using GIZA++ (implementation of IBM,
HMM models).
</bodyText>
<subsectionHeader confidence="0.99856">
3.1 Training discriminative models
</subsectionHeader>
<bodyText confidence="0.999971">
We train two models, one to model the transla-
tion of source blocks, and the other to model the
reordering of source blocks. We call the transla-
tion model a ‘context dependent block translation
model’ for two reasons.
</bodyText>
<listItem confidence="0.993416">
1. It is concerned with the translation of mini-
mal phrasal units called blocks.
2. The context of the source block is used dur-
ing its translation.
</listItem>
<bodyText confidence="0.99676275">
The word alignments are used to obtain the set
of possible target blocks, and are added to the tar-
get vocabulary. A target block b is a sequence of n
words that are paired with a sequence of m source
words (Ittycheriah and Roukos, 2007). In our ap-
proach, we restrict ourselves to target blocks that
are associated with only one source word. How-
ever, this constraint can be easily relaxed.
Similarly, we call the reordering model, a ‘con-
text dependent block distortion model’. For train-
ing, we use the maximum entropy software library
Llama presented in (Haffner, 2006).
</bodyText>
<subsectionHeader confidence="0.5643105">
3.1.1 Context Dependent Block Translation
Model
</subsectionHeader>
<bodyText confidence="0.9998971">
In this model, the goal is to predict a target
block given the source word and contextual and
syntactic information. Given a source word and its
lexical context, the model estimates the probabil-
ities of the presence or absence of possible target
blocks (see Figure 1).
The probabilities of the candidate target blocks
are obtained from the maximum entropy model.
The probability pei of a candidate target block ez
is estimated as given in equation 5
</bodyText>
<equation confidence="0.827082">
pei = P(true|ez, fj, C) (5)
</equation>
<bodyText confidence="0.938037571428572">
where fj is the source word corresponding to ez
and C is its context.
Using the maximum entropy model, binary
classifiers are trained for every target block in the
target word 1 prob p1
target word 2 prob p2
target word K
</bodyText>
<figureCaption confidence="0.999076">
Figure 1: Word prediction model
</figureCaption>
<bodyText confidence="0.996738333333333">
vocabulary. These classifiers predict if a particu-
lar target block should be present given the source
word and its context. This model is similar to the
global lexical selection (GLS) model described in
(Bangalore et al., 2007; Venkatapathy and Banga-
lore, 2009) except that in GLS, the predicted tar-
get blocks are not associated with any particular
source word unlike the case here.
For the set of experiments in this paper, we used
a context of size 6, containing three words to the
left and three words to the right. We also used
the POS tags of words in the context window as
features. In future, we plan to use the words syn-
tactically dependent on a source word as global
context(shown in Figure 1).
</bodyText>
<sectionHeader confidence="0.5327745" genericHeader="method">
3.1.2 Context Dependent Block Distortion
Model
</sectionHeader>
<bodyText confidence="0.999091">
An IBM model 3 like distortion model is
trained to predict the relative position of a source
word in the target given its context. Given a
source word and its context, the model estimates
the probability of particular relative position be-
ing an appropriate position of the source word in
the target (see Figure 2).
</bodyText>
<figureCaption confidence="0.7861255">
Figure 2: Position prediction model
Using a maximum entropy model similar to
</figureCaption>
<figure confidence="0.9496046">
context window
SOURCE SENTENCE
source word
word syntactically dependent
on source word
...
1
p1
0
p0
2
p2
w
pw
−1
p−1
−2
p−2
−w ...
p−w
context window
SOURCE SENTENCE source word
word syntactically dependent
on source word
prob pK
</figure>
<page confidence="0.994689">
37
</page>
<bodyText confidence="0.999605076923077">
the one described in the context dependent block
translation model, binary classifiers are trained
for every possible relative position in the target.
These classifiers output a probability distribution
over various relative positions given a source word
and its context.
The word alignments in the training corpus are
used to train the distortion model. While comput-
ing the relative position, the difference in sentence
lengths is also taken into account. Hence, the rela-
tive position of the target block located at position
i corresponding to the source word located at po-
sition j is given in equation 6.
</bodyText>
<equation confidence="0.999931">
r = round(i � m
n − j) (6)
</equation>
<bodyText confidence="0.999855625">
where, m is the length of source sentence and n is
the number of target blocks. round is the function
to compute the nearest integer of the argument. If
the source word is not aligned to any target word,
a special symbol ‘INF’ is used to indicate such a
case. In our model, this symbol is also a part of
the target distribution.
The features used to train this model are the
same as those used for the block translation
model. In order to use further lexical information,
we also incorporated information about the target
word for predicting the distribution. The informa-
tion about possible target words is obtained from
the ‘context dependent block translation model’.
The probabilities in this case are measured as
shown in equation 7
</bodyText>
<equation confidence="0.904739">
pr,ei = P(truejr, ei, fj, C) (7)
</equation>
<subsectionHeader confidence="0.99916">
3.2 Integration with phrase-based decoder
</subsectionHeader>
<bodyText confidence="0.999964210526316">
The discriminative models trained are sentence
specific, i.e. the context of the sentence is used
to make predictions in these models. Hence,
the phrase-based decoder is required to use in-
formation specific to a source sentence. In order
to handle this issue, a different phrase-table and
reordering-table are constructed for every input
sentence. The phrase-table and reordering-table
are constructed using the discriminative models
trained earlier.
In Moses (Koehn et al., 2007), the phrase-
table contains the source phrase, the target phrase
and the various scores associated with the phrase
pair such as phrase translation probability, lexical
weighting, inverse phrase translation probability,
etc.1
In our approach, given a source sentence, the
following steps are followed to construct the
phrase table.
</bodyText>
<listItem confidence="0.858313">
1. Extract source blocks (’words’ in this work)
2. Use the ‘context dependent block translation
</listItem>
<bodyText confidence="0.958381181818182">
model’ to predict the possible target blocks.
The set of possible blocks can be predicted
using two criteria, (1) Probability threshold,
and (2) K-best. Here, we use a threshold
value to prune the set of possible candidates
in the target vocabulary.
3. Use the prediction probabilities to assign
scores to the phrase pairs.
A similar set of steps is used to construct the
reordering-table corresponding to an input sen-
tence in the source language.
</bodyText>
<sectionHeader confidence="0.99931" genericHeader="method">
4 Decoding
</sectionHeader>
<subsectionHeader confidence="0.999933">
4.1 Decoding with LCS Decoder
</subsectionHeader>
<bodyText confidence="0.999873">
The lattice construction and scoring algorithm, as
the name suggests, consists of two steps,
</bodyText>
<listItem confidence="0.641172">
1. Lattice construction
</listItem>
<bodyText confidence="0.999979055555556">
In this step, a lattice representing various
possible target sequences is obtained. In the
approach for global lexical selection (Banga-
lore et al., 2007; Venkatapathy and Banga-
lore, 2009), the input to this step is a bag of
words. The bag of words is used to construct
an initial sequence (a single path lattice). To
this sequence, deletion arcs are added to in-
corporate additional paths (at a cost) that fa-
cilitate deletion of words in the initial se-
quence. This sequence is permuted using a
permutation window in order to construct a
lattice representing possible sequences. The
permutation window is used to control the
search space.
In our experiments, we used a similar process
for sentence construction. Using the con-
text dependent block translation algorithm,
</bodyText>
<footnote confidence="0.980655">
1http://www.statmt.org/moses/?n=FactoredTraining.ScorePhrases
</footnote>
<page confidence="0.999268">
38
</page>
<bodyText confidence="0.99893875">
we obtain a number of translation blocks for
every source word. These blocks are inter-
connected in order to obtain the initial lattice
(see figure 3).
</bodyText>
<sectionHeader confidence="0.56861" genericHeader="method">
SOURCE SENTENCE
INTIAL TARGET LATTICE
</sectionHeader>
<figureCaption confidence="0.999356">
Figure 3: Lattice Construction
</figureCaption>
<bodyText confidence="0.999668">
To control deletions at various source posi-
tions, deletion nodes may be added to the
initial lattice. This lattice is permuted us-
ing a permutation window to construct a lat-
tice representing possible sequences. Hence,
the parameters that dictate lattice construc-
tion are, (1) Threshold for lexical selection,
(2) Using deletion arcs or not, and (3) Per-
mutation window.
</bodyText>
<sectionHeader confidence="0.881516" genericHeader="method">
2. Scoring
</sectionHeader>
<bodyText confidence="0.999975529411765">
In this step, each of the paths in the lattice
constructed in the earlier step is scored us-
ing a language model (Haffner, 2006), which
is same as the one used in the sentence con-
struction in global lexical selection models.
It is to be noted that we do not use the dis-
criminative reordering model in this decoder,
and only the language model is used to score
various target sequences.
The path with the lowest score is considered
the best possible target sentence for the given
source sentence. Using this decoder, we con-
ducted experiments on the development set by
varying threshold values and the size of the per-
mutation window. The best parameter values ob-
tained using the development set were used for de-
coding the test corpus.
</bodyText>
<subsectionHeader confidence="0.999893">
4.2 Decoding with Moses Decoder
</subsectionHeader>
<bodyText confidence="0.999976565217391">
In this approach, the phrase-table and the
reordering-table are constructed using the dis-
criminative model for every source sentence (see
section 3.2). These tables are then used by the
state-of-art Moses decoder to obtain correspond-
ing translations.
The various training and decoding parameters
of the discriminative model are computed by ex-
haustively exploring the parameter space, and cor-
respondingly measuring the output quality on the
development set. The best set of parameters were
used for decoding the sentences in the test corpus.
We modified the weights assigned by MOSES to
the translation model, reordering model and lan-
guage model. Experiments were conducted by
performing pruning on the options in the phrase
table and by using the word penalty feature in
MOSES.
We trained a language model of order 5 built on
the entire EUROPARL corpus using the SRILM
package. The method uses improved Kneser-Ney
smoothing algorithm (Chen and Goodman, 1999)
to compute sequence probabilities.
</bodyText>
<sectionHeader confidence="0.995087" genericHeader="method">
5 Dataset
</sectionHeader>
<bodyText confidence="0.998229375">
The experiments were conducted on the Spanish-
English language pair. The latest version of the
Europarl corpus(version-5) was used in this work.
A small set of 200K sentences was selected from
the training set to conduct the experiments. The
test and development sets containing 2525 sen-
tences and 2051 sentences respectively were used,
without making any changes.
</bodyText>
<table confidence="0.990808666666667">
Corpus No. of sentences Source Target
Training 200000 59591 36886
Testing 2525 10629 8905
Development 2051 8888 7750
Monolingual 200000 n.a 36886
English (LM)
</table>
<tableCaption confidence="0.955429">
Table 1: Corpus statistics for Spanish-English cor-
pus.
</tableCaption>
<sectionHeader confidence="0.990123" genericHeader="evaluation">
6 Experiments and Results
</sectionHeader>
<bodyText confidence="0.9995868">
The output of our experiments was evaluated us-
ing two metrics, (1) BLEU (Papineni et al., 2002),
and (2) Lexical Accuracy (LexAcc). Lexical ac-
curacy measures the similarity between the un-
ordered bag of words in the reference sentence
</bodyText>
<equation confidence="0.976109111111111">
f_(i−1) f_(i) f_(i+1)
t_(i,1) t_(i+1,1)
t_(i−1,1)
t_(i+1,2)
....
t_(i−1,2)
t_(i,2)
t_(i−1,3)
t_(i+1,3)
</equation>
<page confidence="0.990898">
39
</page>
<bodyText confidence="0.999771266666667">
against the unordered bag of words in the hypoth-
esized translation. Lexical accuracy is a measure
of the fidelity of lexical transfer from the source
to the target sentence, independent of the syntax
of the target language (Venkatapathy and Banga-
lore, 2009). We report lexical accuracies to show
the performance of LCS decoding in comparison
with the baseline system.
We first present the results of the state-of-art
phrase-based model (Moses) trained on a paral-
lel corpus. We treat this as our baseline. The re-
ordering feature used is msd-bidirectional, which
allows for all possible reorderings over a speci-
fied distortion limit. The baseline accuracies are
shown in table 2.
</bodyText>
<table confidence="0.997314666666667">
Corpus BLEU Lexical Accuracy
Development 0.1734 0.448
Testing 0.1823 0.492
</table>
<tableCaption confidence="0.996815">
Table 2: Baseline Accuracy
</tableCaption>
<bodyText confidence="0.995837">
We conduct two types of experiments to test our
approach.
</bodyText>
<listItem confidence="0.99427725">
1. Experiments using lexical features (see sec-
tion 6.1), and
2. Experiments using syntactic features (see
section 6.2).
</listItem>
<subsectionHeader confidence="0.997768">
6.1 Experiments using Lexical Features
</subsectionHeader>
<bodyText confidence="0.999909111111111">
In this section, we present results of our exper-
iments that use only lexical features. First, we
measure the translation accuracy using LCS de-
coding. On the development set, we explored the
set of decoding parameters (as described in sec-
tion 4.1) to compute the optimal parameter val-
ues. The best lexical accuracy obtained on the de-
velopment set is 0.4321 and the best BLEU score
obtained is 0.0923 at a threshold of 0.17 and a per-
mutation window size of value 3. The accuracies
corresponding to a few other parameter values are
shown in Table 3.
On the test data, we obtained a lexical accu-
racy of 0.4721 and a BLEU score of 0.1023. As
we can observe, the BLEU score obtained using
the LCS decoding technique is low when com-
pared to the BLEU score of the state-of-art sys-
tem. However, the lexical accuracy is comparable
</bodyText>
<table confidence="0.773559833333333">
Threshold Perm. Window LexAcc BLEU
0.16 3 0.4274 0.0914
0.17 3 0.4321 0.0923
0.18 3 0.4317 0.0918
0.16 4 0.4297 0.0912
0.17 4 0.4315 0.0915
</table>
<tableCaption confidence="0.776396333333333">
Table 3: Lexical Accuracies of Lattice-Output us-
ing lexical features alone for various parameter
values
</tableCaption>
<bodyText confidence="0.998996384615385">
to the lexical accuracy of Moses. This shows that
the discriminative model provides good lexical se-
lection, while the sentence construction technique
does not perform as expected.
Next, we present the results of the Moses based
decoder that uses the discriminative model (see
section 3.2). In our experiments, we did not use
MERT training for tuning the Moses parameters.
Rather, we explore a set of possible parameter val-
ues (i.e. weights of the translation model, reorder-
ing model and the language model) to check the
performance. We show the BLEU scores obtained
on the development set using Moses decoder in
</bodyText>
<tableCaption confidence="0.829265">
Table 4.
</tableCaption>
<table confidence="0.999327833333333">
Reordering LM Translation BLEU
weight(d) weight(l) weight(t)
0 0.6 0.3 0.1347
0 0.6 0.6 0.1354
0.3 0.6 0.3 0.1441
0.3 0.6 0.6 0.1468
</table>
<tableCaption confidence="0.9742685">
Table 4: BLEU for different weight values using
lexical features only
</tableCaption>
<bodyText confidence="0.992108625">
On the test set, we obtained a BLEU score of
0.1771. We observe that both the lexical accuracy
and the BLEU scores obtained using the discrim-
inative training model combined with the Moses
decoder are comparable to the state-of-art results.
The summary of the results obtained using three
approaches and lexical feature functions is pre-
sented in Table 5.
</bodyText>
<subsectionHeader confidence="0.993772">
6.2 Experiments using Syntactic Features
</subsectionHeader>
<bodyText confidence="0.9737835">
In this section, we present the effect of incorpo-
rating syntactic features using our model on the
</bodyText>
<page confidence="0.989889">
40
</page>
<table confidence="0.999336333333333">
Approach BLEU LexAcc
State-of-art(MOSES) 0.1823 0.492
LCS decoding 0.1023 0.4721
Moses decoder trained 0.1771 0.4841
using a discriminative
model
</table>
<tableCaption confidence="0.976963">
Table 5: Translation accuracies using lexical fea-
tures for different approaches
</tableCaption>
<bodyText confidence="0.983386666666667">
translation accuracies. Table 6 presents the results
of our approach that uses syntactic features at dif-
ferent parameter values. Here, we can observe
that the translation accuracies (both LexAcc and
BLEU) are better than the model that uses only
lexical features.
</bodyText>
<table confidence="0.990174333333333">
Reordering LM Translation BLEU
weight(d) weight(l) weight(t)
0 0.6 0.3 0.1661
0 0.6 0.6 0.1724
0.3 0.6 0.3 0.1780
0.3 0.6 0.6 0.1847
</table>
<tableCaption confidence="0.963382666666667">
Table 6: BLEU for different weight values using
syntactic features
Table 7 shows the comparative performance of
the model using syntactic as well as lexical fea-
tures against the one with lexical features func-
tions only.
</tableCaption>
<table confidence="0.9986165">
Model BLEU LexAcc
Lexical features 0.1771 0.4841
Lexical+Syntactic 0.201 0.5431
features
</table>
<tableCaption confidence="0.955476333333333">
Table 7: Comparison between translation accura-
cies from models using syntactic and lexical fea-
tures
</tableCaption>
<sectionHeader confidence="0.96275" genericHeader="conclusions">
7 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.99835025">
In this paper, we presented an approach to statisti-
cal machine translation that combines the power
of a discriminative model (for training a model
for Machine Translation), and the standard beam-
search based decoding technique (for the transla-
tion of an input sentence). The key contributions
are:
1. We incorporated a discriminative model in
a phrase-based decoder. We obtained com-
parable results with the state-of-art phrase-
based decoder (see section 6.1). The ad-
vantage in using our approach is that it has
the flexibility to incorporate richer contextual
and linguistic feature functions.
2. We show that the incorporation of syntac-
tic information (POS tags) in our discrimina-
tive model boosted the performance of trans-
lation. The lexical accuracy using our ap-
proach improved by 6.1% when syntactic
features were used in addition to the lexi-
cal features. Similarly, the BLEU score im-
proved by 2.3 points when syntactic features
were used compared to the model that uses
lexical features alone. The accuracies are
likely to improve when richer linguistic fea-
ture functions (that use parse structure) are
incorporated in our approach.
In future, we plan to work on:
</bodyText>
<listItem confidence="0.981933833333333">
1. Experiment with rich syntactic and structural
features (parse tree-based features) using our
approach.
2. Experiment on other language pairs such as
Arabic-English and Hindi-English.
3. Improving LCS decoding algorithm using
</listItem>
<bodyText confidence="0.93602025">
syntactic cues in the target (Venkatapathy
and Bangalore, 2007) such as supertags.
On the test set, we obtained a BLEU score of
0.20 which is an improvement of 2.3 points over
the model that uses lexical features alone. We also
obtained an increase of 6.1% in lexical accuracy
using this model with syntactic features as com-
pared to the model using lexical features only.
</bodyText>
<sectionHeader confidence="0.999048" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.982992571428571">
Bangalore, S., P. Haffner, and S. Kanthak. 2007. Statistical machine transla-
tion through global lexical selection and sentence reconstruction. In An-
nual Meeting-Association for Computational Linguistics, volume 45, page
152.
Berger, A.L., V.J.D. Pietra, and S.A.D. Pietra. 1996. A maximum en-
tropy approach to natural language processing. Computational linguistics,
22(1):39–71.
</reference>
<page confidence="0.987777">
41
</page>
<reference confidence="0.9996666">
Brown, P.F., V.J.D. Pietra, S.A.D. Pietra, and R.L. Mercer. 1993. The mathe-
matics of statistical machine translation: Parameter estimation. Computa-
tional linguistics, 19(2):263–311.
Chen, S.F. and J. Goodman. 1999. An empirical study of smoothing
techniques for language modeling. Computer Speech and Language,
13(4):359–394.
Haffner, P. 2006. Scaling large margin classifiers for spoken language under-
standing. Speech Communication, 48(3-4):239–261.
Hassan, H., K. Sima’an, and A. Way. 2009. A syntactified direct translation
model with linear-time decoding. In Proceedings of the 2009 Conference
on Empirical Methods in Natural Language Processing: Volume 3-Volume
3, pages 1182–1191. Association for Computational Linguistics.
Ittycheriah, A. and S. Roukos. 2007. Direct translation model 2. In Proceed-
ings of NAACL HLT, pages 57–64.
Koehn, P. and H. Hoang. 2007. Factored translation models. In Pro-
ceedings of the 2007 Joint Conference on Empirical Methods in Natu-
ral Language Processing and Computational Natural Language Learning
(EMNLP-CoNLL), pages 868–876.
Koehn, P., F.J. Och, and D. Marcu. 2003. Statistical phrase-based transla-
tion. In Proceedings of the 2003 Conference of the North American Chap-
ter of the Association for Computational Linguistics on Human Language
Technology-Volume 1, pages 48–54. Association for Computational Lin-
guistics.
Koehn, P., H. Hoang, A. Birch, C. Callison-Burch, M. Federico, N. Bertoldi,
B. Cowan, W. Shen, C. Moran, R. Zens, et al. 2007. Moses: Open source
toolkit for statistical machine translation. In Annual meeting-association
for computational linguistics, volume 45, page 2.
Och, F.J. and H. Ney. 2002. Discriminative training and maximum entropy
models for statistical machine translation. In Proceedings of ACL, vol-
ume 2, pages 295–302.
Och, F.J., C. Tillmann, H. Ney, et al. 1999. Improved alignment models
for statistical machine translation. In Proc. of the Joint SIGDAT Conf.
on Empirical Methods in Natural Language Processing and Very Large
Corpora, pages 20–28.
Papineni, KA, S. Roukos, and RT Ward. 1998. Maximum likelihood and
discriminative training of directtranslation models. In Acoustics, Speech
and Signal Processing, 1998. Proceedings of the 1998 IEEE International
Conference on, volume 1.
Papineni, K., S. Roukos, T. Ward, and W.J. Zhu. 2002. BLEU: a method for
automatic evaluation of machine translation. In Proceedings of the 40th
annual meeting on association for computational linguistics, pages 311–
318. Association for Computational Linguistics.
Venkatapathy, S. and S. Bangalore. 2007. Three models for discriminative
machine translation using Global Lexical Selection and Sentence Recon-
struction. In Proceedings of the NAACL-HLT 2007/AMTA Workshop on
Syntax and Structure in Statistical Translation, pages 96–102. Association
for Computational Linguistics.
Venkatapathy, Sriram and Srinivas Bangalore. 2009. Discriminative Machine
Translation Using Global Lexical Selection. ACM Transactions on Asian
Language Information Processing, 8(2).
Xiong, D., Q. Liu, and S. Lin. 2006. Maximum entropy based phrase reorder-
ing model for statistical machine translation. In Proceedings of the 21st
International Conference on Computational Linguistics and the 44th an-
nual meeting of the Association for Computational Linguistics, page 528.
Association for Computational Linguistics.
</reference>
<page confidence="0.999294">
42
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.038781">
<title confidence="0.958862">Phrase Based Decoding using a Discriminative Model</title>
<note confidence="0.4301837">Prasanth LTRC, IIIT-Hyderabad Srinivas AT&amp;T Labs-Research, NY Sriram LTRC, IIIT-Hyderabad Sudheer LTRC, IIIT-Hyderabad Avinesh LTRC, IIIT-Hyderabad</note>
<abstract confidence="0.999727931034483">In this paper, we present an approach to statistical machine translation that combines the power of a discriminative model (for training a model for Machine Translation), and the standard beam-search based decoding technique (for the translation of an input sentence). A discriminative approach for learning lexical selection and reordering utilizes a large set of feature functions (thereby providing the power to incorporate greater contextual and linguistic information), which leads to an effective training of these models. This model is then used by the standard state-of-art Moses decoder (Koehn et al., 2007) for the translation of an input sentence. We conducted our experiments on Spanish-English language pair. We used maximum entropy model in our experiments. We show that the performance of our approach (using simple lexical features) is comparable to that of the state-of-art statistical MT system (Koehn et al., 2007). When additional syntactic features (POS tags in this paper) are used, there is a boost in the performance which is likely to improve when richer syntactic features are incorporated in the model.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Bangalore</author>
<author>P Haffner</author>
<author>S Kanthak</author>
</authors>
<title>Statistical machine translation through global lexical selection and sentence reconstruction.</title>
<date>2007</date>
<booktitle>In Annual Meeting-Association for Computational Linguistics,</booktitle>
<volume>45</volume>
<pages>152</pages>
<contexts>
<context position="3006" citStr="Bangalore et al., 2007" startWordPosition="438" endWordPosition="441"> word alignment information from the IBM models and train source-target phrase pairs for lexical selection (phrase-table) and distortions of source phrases (reordering-table). These models are still relatively local, as the target phrases are tightly associated with their corresponding source phrases. In contrast to a phrase-based model, a discriminative model has the power to integrate much richer contextual information into the training model. Contextual information is extremely useful in making lexical selections of higher quality, as illustrated by the models for Global Lexical Selection (Bangalore et al., 2007; Venkatapathy and 34 Proceedings of SSST-4, Fourth Workshop on Syntax and Structure in Statistical Translation, pages 34–42, COLING 2010, Beijing, August 2010. Bangalore, 2009). However, the limitation of global lexical selection models has been sentence construction. In global lexical selection models, lattice construction and scoring (LCS) is used for the purpose of sentence construction (Bangalore et al., 2007; Venkatapathy and Bangalore, 2009). In our work, we address this limitation of global lexical selection models by using an existing state-ofart decoder (Koehn et al., 2007) for the p</context>
<context position="12725" citStr="Bangalore et al., 2007" startWordPosition="2056" endWordPosition="2059">the maximum entropy model. The probability pei of a candidate target block ez is estimated as given in equation 5 pei = P(true|ez, fj, C) (5) where fj is the source word corresponding to ez and C is its context. Using the maximum entropy model, binary classifiers are trained for every target block in the target word 1 prob p1 target word 2 prob p2 target word K Figure 1: Word prediction model vocabulary. These classifiers predict if a particular target block should be present given the source word and its context. This model is similar to the global lexical selection (GLS) model described in (Bangalore et al., 2007; Venkatapathy and Bangalore, 2009) except that in GLS, the predicted target blocks are not associated with any particular source word unlike the case here. For the set of experiments in this paper, we used a context of size 6, containing three words to the left and three words to the right. We also used the POS tags of words in the context window as features. In future, we plan to use the words syntactically dependent on a source word as global context(shown in Figure 1). 3.1.2 Context Dependent Block Distortion Model An IBM model 3 like distortion model is trained to predict the relative pos</context>
<context position="16986" citStr="Bangalore et al., 2007" startWordPosition="2761" endWordPosition="2765"> and (2) K-best. Here, we use a threshold value to prune the set of possible candidates in the target vocabulary. 3. Use the prediction probabilities to assign scores to the phrase pairs. A similar set of steps is used to construct the reordering-table corresponding to an input sentence in the source language. 4 Decoding 4.1 Decoding with LCS Decoder The lattice construction and scoring algorithm, as the name suggests, consists of two steps, 1. Lattice construction In this step, a lattice representing various possible target sequences is obtained. In the approach for global lexical selection (Bangalore et al., 2007; Venkatapathy and Bangalore, 2009), the input to this step is a bag of words. The bag of words is used to construct an initial sequence (a single path lattice). To this sequence, deletion arcs are added to incorporate additional paths (at a cost) that facilitate deletion of words in the initial sequence. This sequence is permuted using a permutation window in order to construct a lattice representing possible sequences. The permutation window is used to control the search space. In our experiments, we used a similar process for sentence construction. Using the context dependent block translat</context>
</contexts>
<marker>Bangalore, Haffner, Kanthak, 2007</marker>
<rawString>Bangalore, S., P. Haffner, and S. Kanthak. 2007. Statistical machine translation through global lexical selection and sentence reconstruction. In Annual Meeting-Association for Computational Linguistics, volume 45, page 152.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A L Berger</author>
<author>V J D Pietra</author>
<author>S A D Pietra</author>
</authors>
<title>A maximum entropy approach to natural language processing.</title>
<date>1996</date>
<journal>Computational linguistics,</journal>
<pages>22--1</pages>
<contexts>
<context position="8020" citStr="Berger et al., 1996" startWordPosition="1249" endWordPosition="1252"> they use generic feature functions such as language model, cooccurence features such as presence of a lexical relationship in the lexicon. Their search algorithm limited the use of complex features. Direct Translation Model 2 (DTM2) (Ittycheriah and Roukos, 2007) expresses the phrasebased translation task in a unified log-linear probabilistic framework consisting of three components: 1. a prior conditional distribution P0 2. a number of feature functions Φi() that capture the effects of translation and language model 3. the weights of the features λi that are estimated using MaxEnt training (Berger et al., 1996) as shown in equation 2. P r(e|f) = Z exp P0(e, j|f) λiΦi(e, j, f) (2) i In the above equation, j is the skip reordering factor for the phrase pair captured by Φi() and represents the jump from the previous source word. Z represents the per source sentence normalization term (Hassan et al., 2009). While a uniform prior on the set of futures results in a maximum entropy model, choosing other priors output a minimum divergence models. Normalized phrase count has been used as the prior P0 in the DTM2 model. The following decision rule is used to obtain optimal translation. eˆ = arg max Pr(e|f) e </context>
</contexts>
<marker>Berger, Pietra, Pietra, 1996</marker>
<rawString>Berger, A.L., V.J.D. Pietra, and S.A.D. Pietra. 1996. A maximum entropy approach to natural language processing. Computational linguistics, 22(1):39–71.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P F Brown</author>
<author>V J D Pietra</author>
<author>S A D Pietra</author>
<author>R L Mercer</author>
</authors>
<title>The mathematics of statistical machine translation: Parameter estimation.</title>
<date>1993</date>
<journal>Computational linguistics,</journal>
<volume>19</volume>
<issue>2</issue>
<contexts>
<context position="1661" citStr="Brown et al., 1993" startWordPosition="228" endWordPosition="231">n of an input sentence. We conducted our experiments on Spanish-English language pair. We used maximum entropy model in our experiments. We show that the performance of our approach (using simple lexical features) is comparable to that of the state-of-art statistical MT system (Koehn et al., 2007). When additional syntactic features (POS tags in this paper) are used, there is a boost in the performance which is likely to improve when richer syntactic features are incorporated in the model. 1 Introduction The popular approaches to machine translation use the generative IBM models for training (Brown et al., 1993; Och et al., 1999). The parameters for these models are learnt using the standard EM Algorithm. The parameters used in these models are extremely restrictive, that is, a simple, small and closed set of feature functions is used to represent the translation process. Also, these feature functions are local and are word based. In spite of these limitations, these models perform very well for the task of word-alignment because of the restricted search space. However, they perform poorly during decoding (or translation) because of their limitations in the context of a much larger search space. To </context>
</contexts>
<marker>Brown, Pietra, Pietra, Mercer, 1993</marker>
<rawString>Brown, P.F., V.J.D. Pietra, S.A.D. Pietra, and R.L. Mercer. 1993. The mathematics of statistical machine translation: Parameter estimation. Computational linguistics, 19(2):263–311.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S F Chen</author>
<author>J Goodman</author>
</authors>
<title>An empirical study of smoothing techniques for language modeling.</title>
<date>1999</date>
<journal>Computer Speech and Language,</journal>
<volume>13</volume>
<issue>4</issue>
<contexts>
<context position="19987" citStr="Chen and Goodman, 1999" startWordPosition="3247" endWordPosition="3250">d by exhaustively exploring the parameter space, and correspondingly measuring the output quality on the development set. The best set of parameters were used for decoding the sentences in the test corpus. We modified the weights assigned by MOSES to the translation model, reordering model and language model. Experiments were conducted by performing pruning on the options in the phrase table and by using the word penalty feature in MOSES. We trained a language model of order 5 built on the entire EUROPARL corpus using the SRILM package. The method uses improved Kneser-Ney smoothing algorithm (Chen and Goodman, 1999) to compute sequence probabilities. 5 Dataset The experiments were conducted on the SpanishEnglish language pair. The latest version of the Europarl corpus(version-5) was used in this work. A small set of 200K sentences was selected from the training set to conduct the experiments. The test and development sets containing 2525 sentences and 2051 sentences respectively were used, without making any changes. Corpus No. of sentences Source Target Training 200000 59591 36886 Testing 2525 10629 8905 Development 2051 8888 7750 Monolingual 200000 n.a 36886 English (LM) Table 1: Corpus statistics for </context>
</contexts>
<marker>Chen, Goodman, 1999</marker>
<rawString>Chen, S.F. and J. Goodman. 1999. An empirical study of smoothing techniques for language modeling. Computer Speech and Language, 13(4):359–394.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Haffner</author>
</authors>
<title>Scaling large margin classifiers for spoken language understanding.</title>
<date>2006</date>
<journal>Speech Communication,</journal>
<pages>48--3</pages>
<contexts>
<context position="11717" citStr="Haffner, 2006" startWordPosition="1886" endWordPosition="1887"> source block is used during its translation. The word alignments are used to obtain the set of possible target blocks, and are added to the target vocabulary. A target block b is a sequence of n words that are paired with a sequence of m source words (Ittycheriah and Roukos, 2007). In our approach, we restrict ourselves to target blocks that are associated with only one source word. However, this constraint can be easily relaxed. Similarly, we call the reordering model, a ‘context dependent block distortion model’. For training, we use the maximum entropy software library Llama presented in (Haffner, 2006). 3.1.1 Context Dependent Block Translation Model In this model, the goal is to predict a target block given the source word and contextual and syntactic information. Given a source word and its lexical context, the model estimates the probabilities of the presence or absence of possible target blocks (see Figure 1). The probabilities of the candidate target blocks are obtained from the maximum entropy model. The probability pei of a candidate target block ez is estimated as given in equation 5 pei = P(true|ez, fj, C) (5) where fj is the source word corresponding to ez and C is its context. Us</context>
<context position="18392" citStr="Haffner, 2006" startWordPosition="2988" endWordPosition="2989">in the initial lattice (see figure 3). SOURCE SENTENCE INTIAL TARGET LATTICE Figure 3: Lattice Construction To control deletions at various source positions, deletion nodes may be added to the initial lattice. This lattice is permuted using a permutation window to construct a lattice representing possible sequences. Hence, the parameters that dictate lattice construction are, (1) Threshold for lexical selection, (2) Using deletion arcs or not, and (3) Permutation window. 2. Scoring In this step, each of the paths in the lattice constructed in the earlier step is scored using a language model (Haffner, 2006), which is same as the one used in the sentence construction in global lexical selection models. It is to be noted that we do not use the discriminative reordering model in this decoder, and only the language model is used to score various target sequences. The path with the lowest score is considered the best possible target sentence for the given source sentence. Using this decoder, we conducted experiments on the development set by varying threshold values and the size of the permutation window. The best parameter values obtained using the development set were used for decoding the test cor</context>
</contexts>
<marker>Haffner, 2006</marker>
<rawString>Haffner, P. 2006. Scaling large margin classifiers for spoken language understanding. Speech Communication, 48(3-4):239–261.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Hassan</author>
<author>K Sima’an</author>
<author>A Way</author>
</authors>
<title>A syntactified direct translation model with linear-time decoding.</title>
<date>2009</date>
<booktitle>In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume</booktitle>
<volume>3</volume>
<pages>1182--1191</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<marker>Hassan, Sima’an, Way, 2009</marker>
<rawString>Hassan, H., K. Sima’an, and A. Way. 2009. A syntactified direct translation model with linear-time decoding. In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume 3-Volume 3, pages 1182–1191. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Ittycheriah</author>
<author>S Roukos</author>
</authors>
<title>Direct translation model 2.</title>
<date>2007</date>
<booktitle>In Proceedings of NAACL HLT,</booktitle>
<pages>57--64</pages>
<contexts>
<context position="7664" citStr="Ittycheriah and Roukos, 2007" startWordPosition="1189" endWordPosition="1193">quation (in comparison to IBM models) as shown in equation 1. In equation 1, they consider the translation model from f → e (p(e|f)), instead of the theoretically sound (after the application of Bayes’ rule), e → f (p(f|e)) and use grammatical features such as the presence of equal number of 35 verbs forms etc. eˆ = arg max pTM(e|f) ∗ pLM(e) (1) e In their model, they use generic feature functions such as language model, cooccurence features such as presence of a lexical relationship in the lexicon. Their search algorithm limited the use of complex features. Direct Translation Model 2 (DTM2) (Ittycheriah and Roukos, 2007) expresses the phrasebased translation task in a unified log-linear probabilistic framework consisting of three components: 1. a prior conditional distribution P0 2. a number of feature functions Φi() that capture the effects of translation and language model 3. the weights of the features λi that are estimated using MaxEnt training (Berger et al., 1996) as shown in equation 2. P r(e|f) = Z exp P0(e, j|f) λiΦi(e, j, f) (2) i In the above equation, j is the skip reordering factor for the phrase pair captured by Φi() and represents the jump from the previous source word. Z represents the per sou</context>
<context position="8976" citStr="Ittycheriah and Roukos, 2007" startWordPosition="1428" endWordPosition="1431"> set of futures results in a maximum entropy model, choosing other priors output a minimum divergence models. Normalized phrase count has been used as the prior P0 in the DTM2 model. The following decision rule is used to obtain optimal translation. eˆ = arg max Pr(e|f) e M (3) = arg max λmΦm(f, e) e m=1 The DTM2 model differs from other phrasebased SMT models in that it avoids the redundancy present in other systems by extracting from a word aligned parallel corpora a set of minimal phrases such that no two phrases overlap with each other (Hassan et al., 2009). The decoding strategy in DTM2 (Ittycheriah and Roukos, 2007) is similar to a phrase-based decoder except that the score of a particular translation block is obtained from the maximum entropy model using the set of feature functions. In our approach, instead of providing the complete scoring function ourselves, we compute the parameters needed by a phrase based decoder, which in turn uses these parameters appropriately. In comparison with the DTM2, we also use minimal nonoverlapping blocks as the entries in the phrase table that we generate. Xiong et al. (2006) present a phrase reordering model under the ITG constraint using a maximum entropy framework.</context>
<context position="11385" citStr="Ittycheriah and Roukos, 2007" startWordPosition="1830" endWordPosition="1833">aining discriminative models We train two models, one to model the translation of source blocks, and the other to model the reordering of source blocks. We call the translation model a ‘context dependent block translation model’ for two reasons. 1. It is concerned with the translation of minimal phrasal units called blocks. 2. The context of the source block is used during its translation. The word alignments are used to obtain the set of possible target blocks, and are added to the target vocabulary. A target block b is a sequence of n words that are paired with a sequence of m source words (Ittycheriah and Roukos, 2007). In our approach, we restrict ourselves to target blocks that are associated with only one source word. However, this constraint can be easily relaxed. Similarly, we call the reordering model, a ‘context dependent block distortion model’. For training, we use the maximum entropy software library Llama presented in (Haffner, 2006). 3.1.1 Context Dependent Block Translation Model In this model, the goal is to predict a target block given the source word and contextual and syntactic information. Given a source word and its lexical context, the model estimates the probabilities of the presence or</context>
</contexts>
<marker>Ittycheriah, Roukos, 2007</marker>
<rawString>Ittycheriah, A. and S. Roukos. 2007. Direct translation model 2. In Proceedings of NAACL HLT, pages 57–64.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>H Hoang</author>
</authors>
<title>Factored translation models.</title>
<date>2007</date>
<booktitle>In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL),</booktitle>
<pages>868--876</pages>
<contexts>
<context position="4631" citStr="Koehn and Hoang, 2007" startWordPosition="689" endWordPosition="692">ce construction and scoring approach (see section 4.1 for LCS Decoding) and the phrasebased decoding approach (see section 4.2). Another advantage of using a discriminative approach to construct the phrase table and the reordering table is the flexibility it provides to incorporate linguistic knowledge in the form of additional feature functions. In the past, factored phrase-based approaches for Machine Translation have allowed the use of linguistic feature functions. But, they are still bound by the locality of context, and definition of a fixed structure of dependencies between the factors (Koehn and Hoang, 2007). Furthermore, factored phrasebased approaches place constraints both on the type and number of factors that can be incorporated into the training. In this paper, though we do not extensively test this aspect, we show that using syntactic feature functions does improve the performance of our approach, which is likely to improve when much richer syntactic feature functions (such as information about the parse structure) are incorporated in the model. As the training model in a standard phrasebased system is relatively impoverished with respect to contextual/linguistic information, integration o</context>
</contexts>
<marker>Koehn, Hoang, 2007</marker>
<rawString>Koehn, P. and H. Hoang. 2007. Factored translation models. In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL), pages 868–876.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>F J Och</author>
<author>D Marcu</author>
</authors>
<title>Statistical phrase-based translation.</title>
<date>2003</date>
<booktitle>In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology-Volume 1,</booktitle>
<pages>48--54</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="2351" citStr="Koehn et al., 2003" startWordPosition="341" endWordPosition="344">he standard EM Algorithm. The parameters used in these models are extremely restrictive, that is, a simple, small and closed set of feature functions is used to represent the translation process. Also, these feature functions are local and are word based. In spite of these limitations, these models perform very well for the task of word-alignment because of the restricted search space. However, they perform poorly during decoding (or translation) because of their limitations in the context of a much larger search space. To handle the contextual information, phrasebased models were introduced (Koehn et al., 2003). The phrase-based models use the word alignment information from the IBM models and train source-target phrase pairs for lexical selection (phrase-table) and distortions of source phrases (reordering-table). These models are still relatively local, as the target phrases are tightly associated with their corresponding source phrases. In contrast to a phrase-based model, a discriminative model has the power to integrate much richer contextual information into the training model. Contextual information is extremely useful in making lexical selections of higher quality, as illustrated by the mode</context>
</contexts>
<marker>Koehn, Och, Marcu, 2003</marker>
<rawString>Koehn, P., F.J. Och, and D. Marcu. 2003. Statistical phrase-based translation. In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology-Volume 1, pages 48–54. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>H Hoang</author>
<author>A Birch</author>
<author>C Callison-Burch</author>
<author>M Federico</author>
<author>N Bertoldi</author>
<author>B Cowan</author>
<author>W Shen</author>
<author>C Moran</author>
<author>R Zens</author>
</authors>
<title>Moses: Open source toolkit for statistical machine translation.</title>
<date>2007</date>
<booktitle>In Annual meeting-association for computational linguistics,</booktitle>
<volume>45</volume>
<pages>2</pages>
<contexts>
<context position="1024" citStr="Koehn et al., 2007" startWordPosition="127" endWordPosition="130">ct In this paper, we present an approach to statistical machine translation that combines the power of a discriminative model (for training a model for Machine Translation), and the standard beam-search based decoding technique (for the translation of an input sentence). A discriminative approach for learning lexical selection and reordering utilizes a large set of feature functions (thereby providing the power to incorporate greater contextual and linguistic information), which leads to an effective training of these models. This model is then used by the standard state-of-art Moses decoder (Koehn et al., 2007) for the translation of an input sentence. We conducted our experiments on Spanish-English language pair. We used maximum entropy model in our experiments. We show that the performance of our approach (using simple lexical features) is comparable to that of the state-of-art statistical MT system (Koehn et al., 2007). When additional syntactic features (POS tags in this paper) are used, there is a boost in the performance which is likely to improve when richer syntactic features are incorporated in the model. 1 Introduction The popular approaches to machine translation use the generative IBM mo</context>
<context position="3596" citStr="Koehn et al., 2007" startWordPosition="527" endWordPosition="530">ction (Bangalore et al., 2007; Venkatapathy and 34 Proceedings of SSST-4, Fourth Workshop on Syntax and Structure in Statistical Translation, pages 34–42, COLING 2010, Beijing, August 2010. Bangalore, 2009). However, the limitation of global lexical selection models has been sentence construction. In global lexical selection models, lattice construction and scoring (LCS) is used for the purpose of sentence construction (Bangalore et al., 2007; Venkatapathy and Bangalore, 2009). In our work, we address this limitation of global lexical selection models by using an existing state-ofart decoder (Koehn et al., 2007) for the purpose of sentence construction. The translation model used by this decoder is derived from a discriminative model, instead of the usual phrase-table and reordering-table construction algorithms. This allows us to use the effectiveness of an existing phrase-based decoder while retaining the advantages of the discriminative model. In this paper, we compare the sentence construction accuracies of lattice construction and scoring approach (see section 4.1 for LCS Decoding) and the phrasebased decoding approach (see section 4.2). Another advantage of using a discriminative approach to co</context>
<context position="15802" citStr="Koehn et al., 2007" startWordPosition="2577" endWordPosition="2580"> probabilities in this case are measured as shown in equation 7 pr,ei = P(truejr, ei, fj, C) (7) 3.2 Integration with phrase-based decoder The discriminative models trained are sentence specific, i.e. the context of the sentence is used to make predictions in these models. Hence, the phrase-based decoder is required to use information specific to a source sentence. In order to handle this issue, a different phrase-table and reordering-table are constructed for every input sentence. The phrase-table and reordering-table are constructed using the discriminative models trained earlier. In Moses (Koehn et al., 2007), the phrasetable contains the source phrase, the target phrase and the various scores associated with the phrase pair such as phrase translation probability, lexical weighting, inverse phrase translation probability, etc.1 In our approach, given a source sentence, the following steps are followed to construct the phrase table. 1. Extract source blocks (’words’ in this work) 2. Use the ‘context dependent block translation model’ to predict the possible target blocks. The set of possible blocks can be predicted using two criteria, (1) Probability threshold, and (2) K-best. Here, we use a thresh</context>
</contexts>
<marker>Koehn, Hoang, Birch, Callison-Burch, Federico, Bertoldi, Cowan, Shen, Moran, Zens, 2007</marker>
<rawString>Koehn, P., H. Hoang, A. Birch, C. Callison-Burch, M. Federico, N. Bertoldi, B. Cowan, W. Shen, C. Moran, R. Zens, et al. 2007. Moses: Open source toolkit for statistical machine translation. In Annual meeting-association for computational linguistics, volume 45, page 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>H Ney</author>
</authors>
<title>Discriminative training and maximum entropy models for statistical machine translation.</title>
<date>2002</date>
<booktitle>In Proceedings of ACL,</booktitle>
<volume>2</volume>
<pages>295--302</pages>
<contexts>
<context position="6914" citStr="Och and Ney, 2002" startWordPosition="1060" endWordPosition="1063">te the approach. The paper is organized in the following sections. Section 2 presents the related work. In section 3, we describe the training of our model. In section 4, we present the decoding approaches (both LCS and phrase-based decoder). We describe the data used in our experiments in section 5. Section 6 consists of the experiments and results. Finally we conclude the paper in section 7. 2 Related Work In this section, we present approaches that are directly related to our approach. In Direct Translation Model (DTM) proposed for statistical machine translation by (Papineni et al., 1998; Och and Ney, 2002), the authors present a discriminative set-up for natural language understanding (and MT). They use a slightly modified equation (in comparison to IBM models) as shown in equation 1. In equation 1, they consider the translation model from f → e (p(e|f)), instead of the theoretically sound (after the application of Bayes’ rule), e → f (p(f|e)) and use grammatical features such as the presence of equal number of 35 verbs forms etc. eˆ = arg max pTM(e|f) ∗ pLM(e) (1) e In their model, they use generic feature functions such as language model, cooccurence features such as presence of a lexical rel</context>
</contexts>
<marker>Och, Ney, 2002</marker>
<rawString>Och, F.J. and H. Ney. 2002. Discriminative training and maximum entropy models for statistical machine translation. In Proceedings of ACL, volume 2, pages 295–302.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>C Tillmann</author>
<author>H Ney</author>
</authors>
<title>Improved alignment models for statistical machine translation.</title>
<date>1999</date>
<booktitle>In Proc. of the Joint SIGDAT Conf. on Empirical Methods in Natural Language Processing and Very Large Corpora,</booktitle>
<pages>20--28</pages>
<contexts>
<context position="1680" citStr="Och et al., 1999" startWordPosition="232" endWordPosition="235">ce. We conducted our experiments on Spanish-English language pair. We used maximum entropy model in our experiments. We show that the performance of our approach (using simple lexical features) is comparable to that of the state-of-art statistical MT system (Koehn et al., 2007). When additional syntactic features (POS tags in this paper) are used, there is a boost in the performance which is likely to improve when richer syntactic features are incorporated in the model. 1 Introduction The popular approaches to machine translation use the generative IBM models for training (Brown et al., 1993; Och et al., 1999). The parameters for these models are learnt using the standard EM Algorithm. The parameters used in these models are extremely restrictive, that is, a simple, small and closed set of feature functions is used to represent the translation process. Also, these feature functions are local and are word based. In spite of these limitations, these models perform very well for the task of word-alignment because of the restricted search space. However, they perform poorly during decoding (or translation) because of their limitations in the context of a much larger search space. To handle the contextu</context>
</contexts>
<marker>Och, Tillmann, Ney, 1999</marker>
<rawString>Och, F.J., C. Tillmann, H. Ney, et al. 1999. Improved alignment models for statistical machine translation. In Proc. of the Joint SIGDAT Conf. on Empirical Methods in Natural Language Processing and Very Large Corpora, pages 20–28.</rawString>
</citation>
<citation valid="true">
<authors>
<author>KA Papineni</author>
<author>S Roukos</author>
<author>RT Ward</author>
</authors>
<title>Maximum likelihood and discriminative training of directtranslation models.</title>
<date>1998</date>
<booktitle>In Acoustics, Speech and Signal Processing,</booktitle>
<volume>1</volume>
<contexts>
<context position="6894" citStr="Papineni et al., 1998" startWordPosition="1056" endWordPosition="1059"> incorporate) to evaluate the approach. The paper is organized in the following sections. Section 2 presents the related work. In section 3, we describe the training of our model. In section 4, we present the decoding approaches (both LCS and phrase-based decoder). We describe the data used in our experiments in section 5. Section 6 consists of the experiments and results. Finally we conclude the paper in section 7. 2 Related Work In this section, we present approaches that are directly related to our approach. In Direct Translation Model (DTM) proposed for statistical machine translation by (Papineni et al., 1998; Och and Ney, 2002), the authors present a discriminative set-up for natural language understanding (and MT). They use a slightly modified equation (in comparison to IBM models) as shown in equation 1. In equation 1, they consider the translation model from f → e (p(e|f)), instead of the theoretically sound (after the application of Bayes’ rule), e → f (p(f|e)) and use grammatical features such as the presence of equal number of 35 verbs forms etc. eˆ = arg max pTM(e|f) ∗ pLM(e) (1) e In their model, they use generic feature functions such as language model, cooccurence features such as prese</context>
</contexts>
<marker>Papineni, Roukos, Ward, 1998</marker>
<rawString>Papineni, KA, S. Roukos, and RT Ward. 1998. Maximum likelihood and discriminative training of directtranslation models. In Acoustics, Speech and Signal Processing, 1998. Proceedings of the 1998 IEEE International Conference on, volume 1.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Papineni</author>
<author>S Roukos</author>
<author>T Ward</author>
<author>W J Zhu</author>
</authors>
<title>BLEU: a method for automatic evaluation of machine translation.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th annual meeting on association for computational linguistics,</booktitle>
<pages>311--318</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="20732" citStr="Papineni et al., 2002" startWordPosition="3363" endWordPosition="3366">t version of the Europarl corpus(version-5) was used in this work. A small set of 200K sentences was selected from the training set to conduct the experiments. The test and development sets containing 2525 sentences and 2051 sentences respectively were used, without making any changes. Corpus No. of sentences Source Target Training 200000 59591 36886 Testing 2525 10629 8905 Development 2051 8888 7750 Monolingual 200000 n.a 36886 English (LM) Table 1: Corpus statistics for Spanish-English corpus. 6 Experiments and Results The output of our experiments was evaluated using two metrics, (1) BLEU (Papineni et al., 2002), and (2) Lexical Accuracy (LexAcc). Lexical accuracy measures the similarity between the unordered bag of words in the reference sentence f_(i−1) f_(i) f_(i+1) t_(i,1) t_(i+1,1) t_(i−1,1) t_(i+1,2) .... t_(i−1,2) t_(i,2) t_(i−1,3) t_(i+1,3) 39 against the unordered bag of words in the hypothesized translation. Lexical accuracy is a measure of the fidelity of lexical transfer from the source to the target sentence, independent of the syntax of the target language (Venkatapathy and Bangalore, 2009). We report lexical accuracies to show the performance of LCS decoding in comparison with the base</context>
</contexts>
<marker>Papineni, Roukos, Ward, Zhu, 2002</marker>
<rawString>Papineni, K., S. Roukos, T. Ward, and W.J. Zhu. 2002. BLEU: a method for automatic evaluation of machine translation. In Proceedings of the 40th annual meeting on association for computational linguistics, pages 311– 318. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Venkatapathy</author>
<author>S Bangalore</author>
</authors>
<title>Three models for discriminative machine translation using Global Lexical Selection and Sentence Reconstruction.</title>
<date>2007</date>
<booktitle>In Proceedings of the NAACL-HLT 2007/AMTA Workshop on Syntax and Structure in Statistical Translation,</booktitle>
<pages>96--102</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<marker>Venkatapathy, Bangalore, 2007</marker>
<rawString>Venkatapathy, S. and S. Bangalore. 2007. Three models for discriminative machine translation using Global Lexical Selection and Sentence Reconstruction. In Proceedings of the NAACL-HLT 2007/AMTA Workshop on Syntax and Structure in Statistical Translation, pages 96–102. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sriram Venkatapathy</author>
<author>Srinivas Bangalore</author>
</authors>
<title>Discriminative Machine Translation Using Global Lexical Selection.</title>
<date>2009</date>
<journal>ACM Transactions on Asian Language Information Processing,</journal>
<volume>8</volume>
<issue>2</issue>
<contexts>
<context position="3458" citStr="Venkatapathy and Bangalore, 2009" startWordPosition="503" endWordPosition="506">g model. Contextual information is extremely useful in making lexical selections of higher quality, as illustrated by the models for Global Lexical Selection (Bangalore et al., 2007; Venkatapathy and 34 Proceedings of SSST-4, Fourth Workshop on Syntax and Structure in Statistical Translation, pages 34–42, COLING 2010, Beijing, August 2010. Bangalore, 2009). However, the limitation of global lexical selection models has been sentence construction. In global lexical selection models, lattice construction and scoring (LCS) is used for the purpose of sentence construction (Bangalore et al., 2007; Venkatapathy and Bangalore, 2009). In our work, we address this limitation of global lexical selection models by using an existing state-ofart decoder (Koehn et al., 2007) for the purpose of sentence construction. The translation model used by this decoder is derived from a discriminative model, instead of the usual phrase-table and reordering-table construction algorithms. This allows us to use the effectiveness of an existing phrase-based decoder while retaining the advantages of the discriminative model. In this paper, we compare the sentence construction accuracies of lattice construction and scoring approach (see section</context>
<context position="12760" citStr="Venkatapathy and Bangalore, 2009" startWordPosition="2060" endWordPosition="2064">l. The probability pei of a candidate target block ez is estimated as given in equation 5 pei = P(true|ez, fj, C) (5) where fj is the source word corresponding to ez and C is its context. Using the maximum entropy model, binary classifiers are trained for every target block in the target word 1 prob p1 target word 2 prob p2 target word K Figure 1: Word prediction model vocabulary. These classifiers predict if a particular target block should be present given the source word and its context. This model is similar to the global lexical selection (GLS) model described in (Bangalore et al., 2007; Venkatapathy and Bangalore, 2009) except that in GLS, the predicted target blocks are not associated with any particular source word unlike the case here. For the set of experiments in this paper, we used a context of size 6, containing three words to the left and three words to the right. We also used the POS tags of words in the context window as features. In future, we plan to use the words syntactically dependent on a source word as global context(shown in Figure 1). 3.1.2 Context Dependent Block Distortion Model An IBM model 3 like distortion model is trained to predict the relative position of a source word in the targe</context>
<context position="17021" citStr="Venkatapathy and Bangalore, 2009" startWordPosition="2766" endWordPosition="2770">e use a threshold value to prune the set of possible candidates in the target vocabulary. 3. Use the prediction probabilities to assign scores to the phrase pairs. A similar set of steps is used to construct the reordering-table corresponding to an input sentence in the source language. 4 Decoding 4.1 Decoding with LCS Decoder The lattice construction and scoring algorithm, as the name suggests, consists of two steps, 1. Lattice construction In this step, a lattice representing various possible target sequences is obtained. In the approach for global lexical selection (Bangalore et al., 2007; Venkatapathy and Bangalore, 2009), the input to this step is a bag of words. The bag of words is used to construct an initial sequence (a single path lattice). To this sequence, deletion arcs are added to incorporate additional paths (at a cost) that facilitate deletion of words in the initial sequence. This sequence is permuted using a permutation window in order to construct a lattice representing possible sequences. The permutation window is used to control the search space. In our experiments, we used a similar process for sentence construction. Using the context dependent block translation algorithm, 1http://www.statmt.o</context>
<context position="21234" citStr="Venkatapathy and Bangalore, 2009" startWordPosition="3439" endWordPosition="3443">h corpus. 6 Experiments and Results The output of our experiments was evaluated using two metrics, (1) BLEU (Papineni et al., 2002), and (2) Lexical Accuracy (LexAcc). Lexical accuracy measures the similarity between the unordered bag of words in the reference sentence f_(i−1) f_(i) f_(i+1) t_(i,1) t_(i+1,1) t_(i−1,1) t_(i+1,2) .... t_(i−1,2) t_(i,2) t_(i−1,3) t_(i+1,3) 39 against the unordered bag of words in the hypothesized translation. Lexical accuracy is a measure of the fidelity of lexical transfer from the source to the target sentence, independent of the syntax of the target language (Venkatapathy and Bangalore, 2009). We report lexical accuracies to show the performance of LCS decoding in comparison with the baseline system. We first present the results of the state-of-art phrase-based model (Moses) trained on a parallel corpus. We treat this as our baseline. The reordering feature used is msd-bidirectional, which allows for all possible reorderings over a specified distortion limit. The baseline accuracies are shown in table 2. Corpus BLEU Lexical Accuracy Development 0.1734 0.448 Testing 0.1823 0.492 Table 2: Baseline Accuracy We conduct two types of experiments to test our approach. 1. Experiments usin</context>
</contexts>
<marker>Venkatapathy, Bangalore, 2009</marker>
<rawString>Venkatapathy, Sriram and Srinivas Bangalore. 2009. Discriminative Machine Translation Using Global Lexical Selection. ACM Transactions on Asian Language Information Processing, 8(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Xiong</author>
<author>Q Liu</author>
<author>S Lin</author>
</authors>
<title>Maximum entropy based phrase reordering model for statistical machine translation.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics,</booktitle>
<pages>528</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="9482" citStr="Xiong et al. (2006)" startWordPosition="1516" endWordPosition="1519">rases overlap with each other (Hassan et al., 2009). The decoding strategy in DTM2 (Ittycheriah and Roukos, 2007) is similar to a phrase-based decoder except that the score of a particular translation block is obtained from the maximum entropy model using the set of feature functions. In our approach, instead of providing the complete scoring function ourselves, we compute the parameters needed by a phrase based decoder, which in turn uses these parameters appropriately. In comparison with the DTM2, we also use minimal nonoverlapping blocks as the entries in the phrase table that we generate. Xiong et al. (2006) present a phrase reordering model under the ITG constraint using a maximum entropy framework. They model the reordering problem as a two-class classification problem, the classes being straight and inverted. The model is used to merge the phrases obtained from translating the segments in a source sentence. The decoder used is a hierarchical decoder motivated from the CYK parsing algorithm employing a beam search algorithm. The maximum entropy model is presented with features extracted from the blocks being merged and probabilities are estimated using the log-linear equation shown in (4). The </context>
</contexts>
<marker>Xiong, Liu, Lin, 2006</marker>
<rawString>Xiong, D., Q. Liu, and S. Lin. 2006. Maximum entropy based phrase reordering model for statistical machine translation. In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics, page 528. Association for Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>