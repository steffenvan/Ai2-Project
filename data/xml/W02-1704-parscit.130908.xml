<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.008040">
<title confidence="0.912693">
XML/XSL in the Dictionary: The Case of Discourse Markers
</title>
<author confidence="0.988238">
Daniela Berger and David Reitter and Manfred Stede
</author>
<affiliation confidence="0.9586605">
University of Potsdam
Dept. of Linguistics / Applied Computational Linguistics
</affiliation>
<address confidence="0.802487">
P.O. Box 601553 / D-14415 Potsdam / Germany
</address>
<email confidence="0.997908">
{berger|reitter|stede}@ling.uni-potsdam.de
</email>
<sectionHeader confidence="0.995627" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999942555555556">
We describe our ongoing work on an application
of XML/XSL technology to a dictionary, from
whose source representation various views for
the human reader as well as for automatic text
generation and understanding are derived. Our
case study is a dictionary of discourse markers,
the words (often, but not always, conjunctions)
that signal the presence of a disocurse relation
between adjacent spans of text.
</bodyText>
<sectionHeader confidence="0.986523" genericHeader="keywords">
1 Overview
</sectionHeader>
<bodyText confidence="0.999955">
Electronic dictionaries have made extensive use
of SGML encoding in the past, but to our
knowledge, the advantages of contemporary
frameworks such as XML/XSL are only be-
ginning to be explored. We are applying this
framework to our work on a lexicon of ‘dis-
course markers’ and will outline the advantages
of deriving a variety of views from the common
underlying lexical resource: different views for
different demands by the human eye, but also
application-specific views that tailor the dictio-
nary to either the parsing or the generation task
(a third one would be machine translation but
is not covered in this paper), and that respect
the conventions of the specific underlying pro-
gramming language. Using XSL style sheets for
producing the views automatically is especially
useful when the lexicon is still under develop-
ment: the ramifications of particular modifica-
tions or extensions can be made visible easily
by running the conversion and testing the ap-
plications in question.
Discourse markers are words (predominantly
conjunctions) that signal the kind of semantic or
rhetorical relationship between adjacent spans
of text. In text generation, when given a rep-
resentation of propositions and relations hold-
ing between them, the task is to select an ap-
propriate discourse marker in the context. In
text understanding, discourse markers are the
most important clues for inferring the ‘rhetori-
cal structure’ of the text, a task that has lately
been called ‘rhetorical parsing’. While these
discourse markers are a somewhat idiosyncratic
class of lexical items, we believe that our general
approach to applying XML/XSL can be fruitful
to other branches of the dictionary as well (in
particular to the open-class “content words”).
After reviewing some earlier work on XML-
based dictionaries (Section 2) and discussing the
notion of discourse markers (Section 3), we pro-
ceed to outline the particular requirements on
a discourse marker lexicon from both the text
generation and the text understanding perspec-
tive (Section 4). Then, Section 5 describes our
XML/XSL encoding of the source lexicon and
the views for the human eye, for automatic text
generation, and for text understanding. Finally,
Section 6 draws some conclusions.
</bodyText>
<sectionHeader confidence="0.8007595" genericHeader="introduction">
2 Dictionaries and XML: Related
work
</sectionHeader>
<bodyText confidence="0.999961098360656">
Recent research in lexicology has been focused
on two different goals: the mark-up process
for existing print dictionaries, and the success-
ful construction of machine-readable dictionar-
ies from scratch.
The first approach has received more at-
tention in the past. This is partly due to
the fact that the transformation of existing
print dictionaries into modules for NLP applica-
tions promises to be less time-consuming than
the construction of a new machine-readable
database. Lexicologists agree on the fact that a
dictionary entry is inherently hierarchical, i.e.,
it consists out of atomic elements grouped to-
gether within non-atomic elements in a tree-like
hierarchy. Many approaches place orthograph-
ical and phonological information together in
one group, while grammatical information is put
in a different group. This hierarchical approach
also allows to denote scope by inserting informa-
tion at different levels of the hierarchy. Again,
information about orthography and phonology
generally applies to every facet of the headword
and are thus placed high in the hierarchy, while
other information might only apply to single
definitions and thus ranks lower hierarchically
(Amsler/Tompa, 1988; Ide, V´eronis, 1995; Ide
et al., 2000).
A common problem of lexicologists working
with print dictionaries is the fact that there is
a certain variation between entries in any two
given dictionaries or even within the same dic-
tionary. This results in a neccessary trade-off
between the descriptive power and the gener-
ality of an approach, i.e. to design a SGML
application that is both descriptive enough to
be of practical value and general enough to ac-
comodate the variation.
There has been, on the other hand, only little
research on machine-readable dictionaries that
are not based on print dictionaries. To our
knowledge, only (Ide et al., 1993) deals with
this issue by reviewing several approaches to-
wards encoding machine-readable dictionaries.
One of these is the use of text models that ap-
ply a rather flat hierarchy to mark up dictio-
nary entries. These text models might chiefly
use typographical or grammatical information.
Another approach is using relational databases,
in which the information contained in a dictio-
nary entry is distributed over several databases.
A third approach is based on feature structures
that impose a rich hierarchical structure on the
data. The authors finally describe an example
application that uses feature structures encoded
in SGML to set up a machine-readable dictio-
nary.
The papers mentioned above agree on us-
ing SGML for the mark-up. We found that
their SGML code is, however, in general XML-
compliant.
</bodyText>
<sectionHeader confidence="0.990037" genericHeader="method">
3 Discourse markers
</sectionHeader>
<bodyText confidence="0.999941381578948">
Several contemporary discourse theories posit
that important aspects of a text’s coherence
can be formally described (and represented) by
means of discourse relations holding between
adjacent spans of text (e.g. Asher, 1993; Mann,
Thompson, 1988). We use the term discourse
marker for those lexical items that (in addition
to non-lexical means such as punctuation, as-
pectual and focus shifts, etc.) can signal the
presence of such a relation at the linguistic sur-
face. Typically, a discourse relation is associ-
ated with a wide range of such markers; con-
sider, for instance, the following variety of CON-
CESSIONS, which all express the same underly-
ing propositional content. The words that we
treat as discourse markers are underlined.
We were in SoHo; {nevertheless  |nonetheless
 |however  |still  |yet}, we found a cheap bar.
We were in SoHo, but we found a cheap bar
anyway.
Despite the fact that we were in SoHo, we
found a cheap bar.
Notwithstanding the fact that we were in
SoHo, we found a cheap bar.
Although we were in SoHo, we found a cheap
bar.
If one accepts these sentences as paraphrases,
then the various discourse markers all need to
be associated with the information that they
signal a concessive relationship between the two
propositions involved. Notice that the markers
belong to different syntactic categories and thus
impose quite different syntactic constraints on
their environment in the sentence. Discourse
markers do not form a homogeneous class from
the syntactican’s viewpoint, but from a func-
tional perspective they should nonetheless be
treated as alternatives in a paradigmatic choice.
A detailled characterization of discourse
markers, together with a test procedure for
identifying them in text, has been provided for
English by (Knott, 1996). Recently, (Grote, to
appear) adapted Knott’s procedure for the Ger-
man language. Very briefly, to identify a dis-
course marker (e.g., because) in a text, isolate
the clause containing a candidate from the text,
resolve any anaphors and make elided items ex-
plicit; if the resulting text is incomplete (e.g.,
because the woman bought a Macintosh), then
the candidate is indeed a ‘relational phrase’, or
for our purposes, a two-place discourse marker.
In addition to the syntactic features, the dif-
ferences in meaning and style between similar
markers need to be discerned; one such differ-
ence is the degree of specificity: for example,
but can mark a general CONTRAST or a more
specific CONCESSION. Another one is the no-
table difference in formality between, say but ...
anyway and notwithstanding.
From the perspective of text generation, not
all paraphrases listed above are equally felici-
tous in specific contexts. In order to choose
the most appropriate variant, a generator needs
knowledge about the fine-grained differences be-
tween similar markers for the same relation.
Furthermore, it needs to account for the interac-
tions between marker choice and other genera-
tion decisions and hence needs knowledge about
the syntagmatic constraints associated with dif-
ferent markers. We will discuss this perspective
in Section 4.1
From the perspective of text understanding,
discourse markers can be used as one source of
information for guessing the rhetorical structure
of a text, or automatic rhetorical parsing. We
will characterize this application in Section 4.2.
</bodyText>
<sectionHeader confidence="0.5759245" genericHeader="method">
4 Requirements on a discourse
marker lexicon
</sectionHeader>
<bodyText confidence="0.999977785714286">
As the following two subsections will show, text
generation and understanding have quite dif-
ferent preferences on the information coded in
a discourse marker lexicon, or “DiMLex” for
short. In addition, different systems employ dif-
ferent programming languages, and the format
of the lexicon has to be adapted accordingly.
Yet we want to avoid coding different lexicons
manually and thus seek a common “core rep-
resentation” for DiMLex from which the var-
ious application-specific instantiations can be
derived. Before proposing such a representa-
tion, though, we have to examine in more detail
the different requirements.
</bodyText>
<subsectionHeader confidence="0.989982">
4.1 The text generation perspective
</subsectionHeader>
<bodyText confidence="0.999776878378379">
Present text generation systems are typically
not very good at choosing discourse mark-
ers. Even though a few systems have incor-
porated some more sophisticated mappings for
specific relations (e.g., in DRAFTER (Paris et
al., 1995)), there is still a general tendency to
treat discourse marker selection as a task to
be performed as a “side effect” by the gram-
mar, much like for other function words such as
prepositions.
To improve this situation, we propose to view
discourse marker selection as one subtask of the
general lexical choice process, so that — to con-
tinue the example given above — one or another
form of CONCESSION can be produced in the
light of the specific utterance parameters and
the context. Obviously, marker selection also
includes the decision whether to use any marker
at all or leave the relation implicit. When these
decisions can be systematically controlled, the
text can be tailored much better to the specific
goals of the generation process.
The generation task imposes a particular view
of the information coded in DiMLex: the en-
try point to the lexicon is the discourse relation
to be realized, and the lookup yields the range
of alternatives. But many markers have more
semantic and pragmatic constraints associated
with them, which have to be verified in the gen-
erator’s input representation for the marker to
be a candidate. Then, discourse markers place
(predominantly syntactic) constraints on their
immediate context, which affects the interac-
tions between marker choice and other realiza-
tion decisions. And finally, markers that are still
equivalent after evaluating these constraints are
subject to a choice process that can utilize pref-
erential (e.g. stylistic or length-based) criteria.
Therefore, under the generation view, the infor-
mation in DiMLex is grouped into the following
three classes:
— Applicability conditions: The necessary
conditions for using a discourse marker, i.e., the
features or structural configurations that need
to be present in the input specification.
— Syntagmatic constraints: The constraints
regarding the combination of a marker and the
neighbouring constituents; most of them are
syntactic and appear at the beginning of the list
given above (part of speech, linear order, etc.).
— Paradigmatic features: Features that label
the differences between similar markers sharing
the same applicability conditions, such as stylis-
tic features and degrees of emphasis.
Very briefly, we see discourse marker choice
as one aspect of the sentence planning task
(e.g. (Wanner, Hovy, 1996)). In order to
account for the intricate interactions between
marker choice and other generation decisions,
the idea is to employ DiMLex as a declara-
tive resource supporting the sentence planning
process, which comprises determining sentence
boundaries and sentence structure, linear order-
ing of constituents (e.g. thematizations), and
lexical choice. All these decisions are heavily
interdependent, and in order to produce truly
adequate text, the various realization options
need to be weighted against each other (in con-
trast to a simple, fixed sequence of making the
types of decisions), which presupposes a flexible
computational mechanism based on resources
as declarative as possible. This generation ap-
proach is described in more detail in (Grote,
Stede, 1998).
</bodyText>
<subsectionHeader confidence="0.956938">
4.2 The text understanding perspective
</subsectionHeader>
<bodyText confidence="0.999980736842105">
In text understanding, discourse markers serve
as cues for inferring the rhetorical or semantic
structure of the text. In the approach proposed
in (Marcu, 1997), for example, the presence of
discourse markers is used to hypothesize indi-
vidual textual units and relations holding be-
tween them. Then, the overall discourse struc-
ture tree is built using constraint satisfaction
techniques. Our analysis method uses the lexi-
con for an initial identification and disambigua-
tion of discourse markers. They serve as one
of several other shallow features that determine
through a statistical, learned language model
the optimal rhetorical analysis.
In contrast to the use of markers in genera-
tion, the list of cues is significantly longer and
includes phrasal items like aus diesem Grund
(for this reason) or genauer genommen (more
precisely).
</bodyText>
<sectionHeader confidence="0.994406" genericHeader="method">
5 Our XML/XSL solution
</sectionHeader>
<bodyText confidence="0.999904">
In the following we show some sample represen-
tations and style sheets that have been abridged
for presentation purposes.
</bodyText>
<subsectionHeader confidence="0.986005">
5.1 Source representation
</subsectionHeader>
<bodyText confidence="0.999788307692308">
In our hierarchical XML structure, the
&lt;dictionary&gt; root tag encloses the entire file,
and every single entry rests in an &lt;entry&gt;
tag, which unambigously identifies every entry
with its id attribute. Within the &lt;entry&gt; tag
there are four subordinate tags: &lt;form&gt;, &lt;syn&gt;,
&lt;sem&gt;, and &lt;examples&gt;.
The &lt;form&gt; tag contains the orthographic
form of the headword; at present this amounts
to two slots for alternative orthographies. The
&lt;syn&gt; area contains the syntactic information
about the headword. In this shortened exam-
ple, there is only the &lt;init field&gt; tag present,
</bodyText>
<figure confidence="0.99691515625">
&lt;?xml version=&amp;quot;1.0&amp;quot; ?&gt;
&lt;?xml-stylesheet type=&amp;quot;text/xsl&amp;quot;
href=&amp;quot;short_dictionary.xsl&amp;quot; ?&gt;
&lt;!DOCTYPE dictionary SYSTEM &amp;quot;DTD.dtd&amp;quot;&gt;
5 &lt;dictionary&gt;
&lt;entry id=&amp;quot;05&amp;quot;&gt;
&lt;form&gt;
&lt;orth&gt;denn&lt;/orth&gt;
&lt;alt_orth&gt;none&lt;/alt_orth&gt;
10 &lt;!-- . . . --&gt;
&lt;/form&gt;
&lt;syn&gt;
&lt;init_field&gt;-&lt;/init_field&gt;
&lt;!-- . . . --&gt;
15 &lt;/syn&gt;
&lt;sem&gt;
&lt;function&gt;causal&lt;/function&gt;
&lt;!-- . . . --&gt;
&lt;/sem&gt;
20 &lt;examples&gt;
&lt;example&gt;Das Konzert muss ausfallen,
*denn* die Sängerin ist erkrankt.
&lt;/example&gt;
&lt;example&gt;Die Blumen auf dem Balkon sind
25 erfroren, *denn* es hat heute nacht
Frost gegeben.&lt;/example&gt;
&lt;/examples&gt;
&lt;/entry&gt;
&lt;entry&gt;
30 &lt;!-- more entries --&gt;
&lt;/entry&gt;
&lt;/dictionary&gt;
</figure>
<figureCaption confidence="0.999999">
Figure 1: The XML structure
</figureCaption>
<bodyText confidence="0.999951117647059">
which shows whether the headword can be used
in the initial field of a sentence. Correspond-
ingly, &lt;sem&gt; contains semantic features such as
the &lt;function&gt; tag, which contains the seman-
tic/discourse relation expressed by the head-
word. Finally, &lt;examples&gt;, contains one or
more &lt;example&gt; tags that may each give an ex-
ample sentence.
We have shortened this presentation consider-
ably; the full lexicon contains more fine-grained
features for all three areas: within &lt;form&gt;, in-
formation on pronounciation, syllable structure,
and hyphenation; within &lt;syn&gt;, information
about syntactic subcategorization and possible
positions in the clause; within &lt;sem&gt;, for exam-
ple the feature whether the information subor-
dinated by the marker is presupposed or not.
</bodyText>
<subsectionHeader confidence="0.968487">
5.2 HTML views
</subsectionHeader>
<bodyText confidence="0.9998485">
The listing in Figure 4 shows a style sheet that
provides an HTML by listing the XML data in
a format that roughly resembles a print dictio-
nary. Figure 2 shows the output that results
from applying this XSL file to the XML source
in figure 1.
</bodyText>
<figure confidence="0.51615825">
05: denn
Occurrences: middle field / Nullstelle
Semantics: kausal
Related markers: weil da
Examples: Das Konzert muss ausfallen, *denn* die
S¨angerin ist erkrankt.
Die Blumen auf dem Balkon sind erfroren, *denn* es hat
heute nacht Frost gegeben.
</figure>
<figureCaption confidence="0.997646">
Figure 2: One HTML view of the data
</figureCaption>
<bodyText confidence="0.999291705882353">
We assume that the general structure of the
formatting part of XSL is familiar to the reader.
We would like to highlight some details.
XLINK is used to ensure that the entry con-
tains an HTML-anchor named after the head-
word (ll. 14-20). This way it is possible to link
to a certain entry from the &lt;rel&gt; tag of a dif-
ferent entry (39-45).
We also employ the XSL equivalent to
an if/then/else construct (24-31). The
&lt;xsl:choose&gt; tag encloses the choices to be
made. The &lt;xsl:when&gt; tag contains the con-
dition match=&amp;quot;.[alt orth=’none’]&amp;quot; that does
nothing if the &lt;alt orth&gt; tag contains the
data none. Every other case is covered by
the &lt;xsl:otherwise&gt; tag that prints out the
&lt;alt orth&gt; information if it is not no entry.
</bodyText>
<table confidence="0.939811166666667">
Entry alt orth init field mid field ...
denn none - + ...
da none + + ...
zumal none - - . . .
weil none - -...
als none - - . . .
</table>
<figureCaption confidence="0.968679">
Figure 3: Another possible HTML view of the
data
</figureCaption>
<bodyText confidence="0.986668285714286">
Figure 3 shows another possible view for the
data. In this case the data is presented in table
form, ordered by the value of the mid field tag.
It would be easy to show that it is possible to
use a &lt;xsl:choose&gt; construct as shown in the
example before to print out only those entries
that satisfy a certain condition.
</bodyText>
<subsectionHeader confidence="0.881914">
5.3 The text generation view
</subsectionHeader>
<bodyText confidence="0.97498275">
For the lexicon to be applied in our text
generation system ‘Polibox’ (Stede, 2002),
we need a Lisp-based version of DiM-
Lex. Using the (defstruct &lt;name&gt; &lt;slot1&gt;
</bodyText>
<figure confidence="0.975009524590164">
&lt;?xml version=&amp;quot;1.0&amp;quot;?&gt;
&lt;xsl:stylesheet
xmlns:xsl=
&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&gt;
5 &lt;xsl:template match=&amp;quot;/&amp;quot;&gt;
&lt;FONT SIZE=&amp;quot;-2&amp;quot;&gt;
&lt;xsl:apply-templates/&gt;
&lt;/FONT&gt;
&lt;/xsl:template&gt;
10 &lt;xsl:template match=&amp;quot;dictionary&amp;quot;&gt;
&lt;xsl:apply-templates/&gt;
&lt;/xsl:template&gt;
&lt;xsl:template match=&amp;quot;entry&amp;quot;&gt;
&lt;P&gt;&lt;font size=&amp;quot;2&amp;quot;&gt;&lt;B&gt;&lt;A&gt;
15 &lt;xsl:attribute name=&amp;quot;NAME&amp;quot;&gt;
&lt;xsl:value-of select=&amp;quot;form/orth&amp;quot;/&gt;
&lt;/xsl:attribute&gt;
&lt;xsl:value-of select=&amp;quot;./@id&amp;quot;/&gt;:
&lt;xsl:value-of select=&amp;quot;form/orth&amp;quot;/&gt;
20 &lt;/A&gt;&lt;/b&gt;&lt;/font&gt;
&lt;xsl:apply-templates/&gt;&lt;/P&gt;
&lt;/xsl:template&gt;
&lt;xsl:template match=&amp;quot;form&amp;quot;&gt;
&lt;xsl:choose&gt;
25 &lt;xsl:when match=&amp;quot;.[alt_orth=’none’]&amp;quot;&gt;
&lt;/xsl:when&gt;
&lt;xsl:otherwise&gt;
&lt;BR/&gt;&lt;B&gt;Alternative orthography:&lt;/B&gt;
&lt;xsl:value-of select=&amp;quot;alt_orth&amp;quot;/&gt;
30 &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
&lt;/xsl:template&gt;
&lt;xsl:template match=&amp;quot;sem&amp;quot;&gt;
&lt;BR/&gt;&lt;B&gt;Semantics:&lt;/B&gt;
35 &lt;xsl:value-of select=&amp;quot;ko_sub&amp;quot;/&gt;
/ &lt;xsl:value-of select=&amp;quot;function&amp;quot;/&gt;
&lt;br/&gt;&lt;b&gt;Related markers:&lt;/b&gt;
&lt;xsl:for-each select=&amp;quot;rel&amp;quot;&gt;
&lt;A&gt;&lt;xsl:attribute name=&amp;quot;HREF&amp;quot;&gt;
40 #&lt;xsl:value-of select=&amp;quot;.&amp;quot;/&gt;
&lt;/xsl:attribute&gt;
&lt;xsl:value-of select=&amp;quot;.&amp;quot;/&gt;&lt;/A&gt;
&lt;/xsl:for-each&gt;
&lt;/xsl:template&gt;
45 &lt;xsl:template match=&amp;quot;syn&amp;quot;&gt;
&lt;BR/&gt;&lt;B&gt;Occurrences:&lt;/B&gt;
&lt;xsl:choose&gt;
&lt;xsl:when match=&amp;quot;.[init\_field=’-’]&amp;quot;&gt;
&lt;/xsl:when&gt;
50 &lt;xsl:otherwise&gt;
initial field /
&lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
&lt;/xsl:template&gt;
55 &lt;xsl:template match=&amp;quot;examples&amp;quot;&gt;
&lt;BR/&gt;&lt;B&gt;Examples:&lt;/B&gt;
&lt;xsl:for-each select=&amp;quot;example&amp;quot;&gt;
&lt;xsl:value-of select=&amp;quot;.&amp;quot;/&gt;&lt;BR/&gt;
&lt;/xsl:for-each&gt;
60 &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</figure>
<figureCaption confidence="0.8731115">
Figure 4: The XSL file for the HTML view
shown in Figure 2
</figureCaption>
<bodyText confidence="0.99592275">
.. &lt;slotn&gt;) construct, we define a class of ob-
jects for discourse markers, where the features
needed for generation are stored in the slots.
Again, we abbreviate slightly:
</bodyText>
<table confidence="0.499854666666667">
(defstruct DiscMarker
Relation N-Complexity S-Complexity
Ortho POS ... Style)
</table>
<bodyText confidence="0.998230307692308">
Now, a Lisp-object for each individual dis-
course marker entry is created with the func-
tion make-Discmarker, which provides the val-
ues for the slots. Figure 5 shows the shape of the
entry for denn, whose XML-source was given in
figure 1.
Again, we aim at deriving these entries au-
tomatically via an XSL sheet (which we do not
show here). Notice that the mapping task is
now somewhat different from the HTML cases,
since the transformation part of XSL (XSLT)
comes into play here. Instead of merely display-
ing the data in a web browser as in the examples
before, an XSLT processor may transform data
for use in some XML based client application.
As explained in Section 4.1, in the generation
scenario we are given a tree fragment consist-
ing of a discourse relation node and two daugh-
ters representing the related material, the nu-
cleus and the satellite of the relation. In order
to decide whether a particular marker can be
used, one important constraint is the “size” of
the daughter material, which can be a single
proposition or an entire sub-tree. The gener-
ator needs to estimate whether it will fit into
a single phrase, clause, sentence, or into a se-
quence of sentences; a subordinating conjunc-
tion, for instance, can only be used if the ma-
terial can be expressed within a clause. Thus,
the Lisp-entry contains slots N-Complexity and
S-Complexity, which are highly application-
specific and thus do not have a simple corre-
sponding feature in the XML source represen-
tation of the dictionary. The XSL sheet thus
inspects certain combinations of daughter at-
tributes of &lt;syn&gt; and maps them to new names
for the fillers of the two Complexity slots in
the Lisp structure. (Similar mappings occur in
other places as well, which we do not show here.)
</bodyText>
<subsectionHeader confidence="0.864716">
5.4 The text understanding view
</subsectionHeader>
<bodyText confidence="0.9981745">
Our analysis method recasts rhetorical parsing
as a set of classification decisions, where a pars-
</bodyText>
<figure confidence="0.989379285714286">
(make-Discmarker
:Relation cause
:N-Complexity sent
:S-Complexity sent
s :Ortho denn
:POS coordconj
:Style unmarked)
</figure>
<figureCaption confidence="0.9409695">
Figure 5: Lisp-version of generation-oriented
dictionary entry for denn (abridged)
</figureCaption>
<bodyText confidence="0.999984209876544">
ing framework builds a tree structured analy-
sis. Each of the decisions is based on a set of
features. Feature types range from syntactical
configuration to the presence of a certain dis-
course marker. The mapping from a pattern of
observed features to a rhetorical relation may be
learned automatically by a classification learn-
ing algorithm.
Learning and analysis applications use a pars-
ing framework that gives us a set of text span
pairs. Every two text spans are subject to a
classification learning algorithm (during train-
ing) or the actual classifier. So, a rhetorical rela-
tion is assigned to these two spans of text along
with a score so that the parsing framework may
decide which of several competing classifications
to accept.
Learning and actual rhetorical analysis are
accomplished by a set of distinct tools that add
specific annotations to a given input text, be-
fore resulting relations are learned or guessed.
These tools include a data mining component, a
part-of-speech tagger and a segmenter. They all
access data organized in an XML syntax. The
central learning and parsing application makes
use of a Document Object Model (DOM) repre-
sentation of the corpus. This data structure is
effectively used for information interchange be-
tween several components, because it allows us
to easily visualize and modify the current data
at each processing step during development.
With the present corpus data, the learning al-
gorithm is theoretically able to identify rhetori-
cal markers automatically and could thus com-
pile a marker lexicon. However, markers are
highly ambiguous. Even though many of them
can be tagged as adverbials or conjunctions,
markers often lack distinctive syntactic and/or
positional properties; some of them are phrasal,
some are discontinuous. To identify significant
cue - relation correlations, a lot of annotated
data is necessary: more than is usually avail-
able. In a sparse data situation, we want to
easen the learning task for the rhetorical lan-
guage model: It makes sense to use a discourse
marker lexicon.
On the other hand, we do not expect a hand-
crafted lexicon to contain all contextual con-
straints that would enable us to assign a sin-
gle rhetorical relation. These constraints can be
very subtle; some of them should be represented
as probabilistic scalar information.
Thus, DiMLex contributes to initial dis-
course marker disambiguation. From each en-
try, we interpret syntactic positioning informa-
tion, morphosyntactic contextual information
and a scope class (sentential, phrasal, discourse-
level) as a conjunction of constraints. The pres-
ence of a certain discourse marker in a specified
configuration is one of the features to be ob-
served in the text.
Depending on the depth of the syntactic and
semantic analysis carried out by the text un-
derstanding system, different features provided
by DiMLex can be taken into account. Certain
structural configurations can be tested with-
out any deep understanding; for instance, the
German marker w¨ahrend is generally ambigu-
ous between a CONTRAST and a TEMPORAL-
COOCCURRENCE reading, but when followed by
a noun phrase, only the latter reading is avail-
able (w¨ahrend corresponds not only to the En-
glish while but also to during).
In the parsing client application, DiMLex
serves as resource for the identification of cue
phrases in specific structural configurations.
Rhetorical information from the DiMLex entries
may serve as one of several cues for the classi-
fication engine. The final linking from cue pat-
terns to rhetorical relations is learned from a
corpus annotated with rhetorical structures.
</bodyText>
<sectionHeader confidence="0.99802" genericHeader="conclusions">
6 Summary
</sectionHeader>
<bodyText confidence="0.999996294117647">
We have presented our ongoing work on con-
structing an XML-based dictionary of discourse
markers, from which a variety of views are de-
rived by XSL sheets: For the dictionary de-
signer or application developer, we present the
dictionary in tabular form or in a form resem-
bling print dictionaries, but with hyperlinks in-
cluded for easy cross-referencing. Similarly, text
generation and understanding systems are on
the one hand written in different programming
languages and thus expect different dictionary
formats; on the other hand, the information
needed for generation and parsing is also not
identical, which is accounted for by the XSL
sheets. Evaluation of the approach will depend
on the client applications. Their implementa-
tion will determine the final shape of DiMLex.
</bodyText>
<sectionHeader confidence="0.997978" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.995198958333333">
R.A. Amsler and F.W. Tompa, “An SGML-
Based Standard for English Monolingual Dic-
tionaries.” In: Information in Text: Fourth
Annual Conference of the UW Center for the
New Oxford English Dictionary, University of
Waterloo Center for the New Oxford English
Dictionary, Waterloo, Ontario, 1988, pp. 61-
79.
N. Asher. Reference to Abstract Objects in Dis-
course. Dordrecht: Kluwer, 1993.
B. Grote, M. Stede. “Discourse marker choice
in sentence planning.” In: Proceedings of
the Ninth International Workshop on Natural
Language Generation, Niagara-on-the-Lake,
Canada, 1998.
B. Grote. “Signalling coherence relations: tem-
poral markers and their role in text genera-
tion.” Doctoral dissertation, Universit¨at Bre-
men, forthcoming.
N. M. Ide, J. Le Maitre, and J. V´eronis, “Out-
line of a Model for Lexical Databases.” In-
formation Processing and Management, 29, 2
(1993), 159-186.
N. M. Ide and J. V´eronis. Encoding Dictionar-
ies.Computers and the Humanities, 29:167-
180, 1995
N. M. Ide, Kilgarriff, A., and Romary, L.A For-
mal Model of Dictionary Structure and Con-
tent. In Proceedings of EURALEX 2000, pp.
113-126, Stuttgart.
A. Knott. “A data-driven methodology for mo-
tivating a set of coherence relations.” Doc-
toral dissertation, University of Edinburgh,
1996.
W. Mann, S. Thompson. “Rhetorical structure
theory: Towards a functional theory of text
organization.” In: TEXT, 8:243-281, 1988.
D. Marcu. “The Rhetorical Parsing of Un-
restricted Natural Language Texts.”
Proceedings of the Thirty-Fifth Annual
Meeting of the Association for Computa-
tional Linguistics and Eighth Conference of
the European Chapter of the Association for
Computational Linguistics, Somerset, New
Jersey, 1997.
C. Paris, K. Van der Linden, M. Fischer, A.
Hartley, L. Pemberton, R. Power and D.R.
Scott, “Drafter: A Drafting Tool for Produc-
ing Multilingual Instructions”, Proceedings of
the 5th European Workshop on Natural Lan-
guage Generation, pp. 239-242, Leiden, the
Netherlands, 1995.
M. Stede. “Polibox: Generating, descriptions,
comparisons, and recommendations from a
database.” In Proceedings of COLING-2002.
L. Wanner, E. Hovy. “The HealthDoc Sentence
Planner.” Proceedings of the 8th Interna-
tional Workshop on Natural Language Gen-
eration, Hearstmonceux Castle, 1996.
Web References
Domain Object Model
W3C Recommendation, 13 November 2000
http://www.w3.org/TR/DOM-Level-2-Core
Extensible Stylesheet Language (XSL) 1.0
W3C Recommendation, 15 October 2001
http://www.w3.org/TR/xsl
XML Base
W3C Recommendation 27 June 2001
http://www.w3.org/TR/xmlbase
XSL Transformations (XSLT) 1.0
W3C Recommendation, 16 November 1999
http://www.w3.org/TR/xslt
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000010">
<title confidence="0.997696">XML/XSL in the Dictionary: The Case of Discourse Markers</title>
<author confidence="0.998792">Berger Reitter</author>
<affiliation confidence="0.9970335">University of Dept. of Linguistics / Applied Computational</affiliation>
<address confidence="0.96161">P.O. Box 601553 / D-14415 Potsdam /</address>
<abstract confidence="0.999494917956657">We describe our ongoing work on an application of XML/XSL technology to a dictionary, from whose source representation various views for the human reader as well as for automatic text generation and understanding are derived. Our case study is a dictionary of discourse markers, the words (often, but not always, conjunctions) that signal the presence of a disocurse relation between adjacent spans of text. 1 Overview Electronic dictionaries have made extensive use of SGML encoding in the past, but to our knowledge, the advantages of contemporary frameworks such as XML/XSL are only beginning to be explored. We are applying this framework to our work on a lexicon of ‘discourse markers’ and will outline the advantages of deriving a variety of views from the common underlying lexical resource: different views for different demands by the human eye, but also application-specific views that tailor the dictionary to either the parsing or the generation task (a third one would be machine translation but is not covered in this paper), and that respect the conventions of the specific underlying programming language. Using XSL style sheets for producing the views automatically is especially useful when the lexicon is still under development: the ramifications of particular modifications or extensions can be made visible easily by running the conversion and testing the applications in question. Discourse markers are words (predominantly conjunctions) that signal the kind of semantic or rhetorical relationship between adjacent spans of text. In text generation, when given a representation of propositions and relations holding between them, the task is to select an appropriate discourse marker in the context. In text understanding, discourse markers are the most important clues for inferring the ‘rhetorical structure’ of the text, a task that has lately been called ‘rhetorical parsing’. While these discourse markers are a somewhat idiosyncratic class of lexical items, we believe that our general approach to applying XML/XSL can be fruitful to other branches of the dictionary as well (in particular to the open-class “content words”). After reviewing some earlier work on XMLbased dictionaries (Section 2) and discussing the notion of discourse markers (Section 3), we proceed to outline the particular requirements on a discourse marker lexicon from both the text generation and the text understanding perspective (Section 4). Then, Section 5 describes our XML/XSL encoding of the source lexicon and the views for the human eye, for automatic text generation, and for text understanding. Finally, Section 6 draws some conclusions. 2 Dictionaries and XML: Related work Recent research in lexicology has been focused on two different goals: the mark-up process for existing print dictionaries, and the successful construction of machine-readable dictionaries from scratch. The first approach has received more attention in the past. This is partly due to the fact that the transformation of existing print dictionaries into modules for NLP applications promises to be less time-consuming than the construction of a new machine-readable database. Lexicologists agree on the fact that a dictionary entry is inherently hierarchical, i.e., it consists out of atomic elements grouped together within non-atomic elements in a tree-like Many approaches place orthographical and phonological information together in one group, while grammatical information is put in a different group. This hierarchical approach also allows to denote scope by inserting information at different levels of the hierarchy. Again, information about orthography and phonology generally applies to every facet of the headword and are thus placed high in the hierarchy, while other information might only apply to single definitions and thus ranks lower hierarchically (Amsler/Tompa, 1988; Ide, V´eronis, 1995; Ide et al., 2000). A common problem of lexicologists working with print dictionaries is the fact that there is a certain variation between entries in any two given dictionaries or even within the same dictionary. This results in a neccessary trade-off between the descriptive power and the generality of an approach, i.e. to design a SGML application that is both descriptive enough to be of practical value and general enough to accomodate the variation. There has been, on the other hand, only little research on machine-readable dictionaries that are not based on print dictionaries. To our knowledge, only (Ide et al., 1993) deals with this issue by reviewing several approaches towards encoding machine-readable dictionaries. One of these is the use of text models that apply a rather flat hierarchy to mark up dictionary entries. These text models might chiefly use typographical or grammatical information. Another approach is using relational databases, in which the information contained in a dictionary entry is distributed over several databases. A third approach is based on feature structures that impose a rich hierarchical structure on the data. The authors finally describe an example application that uses feature structures encoded in SGML to set up a machine-readable dictionary. The papers mentioned above agree on using SGML for the mark-up. We found that their SGML code is, however, in general XMLcompliant. 3 Discourse markers Several contemporary discourse theories posit that important aspects of a text’s coherence can be formally described (and represented) by of relations between adjacent spans of text (e.g. Asher, 1993; Mann, 1988). We use the term those lexical items that (in addition to non-lexical means such as punctuation, aspectual and focus shifts, etc.) can signal the presence of such a relation at the linguistic surface. Typically, a discourse relation is associated with a wide range of such markers; consider, for instance, the following variety of CON- CESSIONS, which all express the same underlying propositional content. The words that we treat as discourse markers are underlined. were in SoHo;  |nonetheless however |still |we found a cheap bar. were in SoHo, butwe found a cheap bar anyway. Despite the fact that we were in SoHo, we found a cheap bar. Notwithstandingthe fact that we were in SoHo, we found a cheap bar. Although we were in SoHo, we found a cheap bar. If one accepts these sentences as paraphrases, then the various discourse markers all need to be associated with the information that they signal a concessive relationship between the two propositions involved. Notice that the markers belong to different syntactic categories and thus impose quite different syntactic constraints on their environment in the sentence. Discourse markers do not form a homogeneous class from syntactican’s viewpoint, but from a functhey should nonetheless be treated as alternatives in a paradigmatic choice. A detailled characterization of discourse markers, together with a test procedure for identifying them in text, has been provided for English by (Knott, 1996). Recently, (Grote, to appear) adapted Knott’s procedure for the German language. Very briefly, to identify a dismarker (e.g., in a text, isolate the clause containing a candidate from the text, resolve any anaphors and make elided items explicit; if the resulting text is incomplete (e.g., the woman bought a then the candidate is indeed a ‘relational phrase’, or for our purposes, a two-place discourse marker. In addition to the syntactic features, the differences in meaning and style between similar markers need to be discerned; one such difference is the degree of specificity: for example, but can mark a general CONTRAST or a more specific CONCESSION. Another one is the notable difference in formality between, say but ... anyway and notwithstanding. From the perspective of text generation, not all paraphrases listed above are equally felicitous in specific contexts. In order to choose the most appropriate variant, a generator needs knowledge about the fine-grained differences between similar markers for the same relation. Furthermore, it needs to account for the interactions between marker choice and other generation decisions and hence needs knowledge about the syntagmatic constraints associated with different markers. We will discuss this perspective in Section 4.1 From the perspective of text understanding, discourse markers can be used as one source of information for guessing the rhetorical structure of a text, or automatic rhetorical parsing. We will characterize this application in Section 4.2. 4 Requirements on a discourse marker lexicon As the following two subsections will show, text generation and understanding have quite different preferences on the information coded in a discourse marker lexicon, or “DiMLex” for short. In addition, different systems employ different programming languages, and the format of the lexicon has to be adapted accordingly. Yet we want to avoid coding different lexicons manually and thus seek a common “core representation” for DiMLex from which the various application-specific instantiations can be derived. Before proposing such a representation, though, we have to examine in more detail the different requirements. 4.1 The text generation perspective Present text generation systems are typically not very good at choosing discourse markers. Even though a few systems have incorporated some more sophisticated mappings for specific relations (e.g., in DRAFTER (Paris et al., 1995)), there is still a general tendency to treat discourse marker selection as a task to be performed as a “side effect” by the grammar, much like for other function words such as prepositions. To improve this situation, we propose to view discourse marker selection as one subtask of the general lexical choice process, so that — to continue the example given above — one or another form of CONCESSION can be produced in the light of the specific utterance parameters and the context. Obviously, marker selection also includes the decision whether to use any marker at all or leave the relation implicit. When these decisions can be systematically controlled, the text can be tailored much better to the specific goals of the generation process. The generation task imposes a particular view of the information coded in DiMLex: the entry point to the lexicon is the discourse relation to be realized, and the lookup yields the range of alternatives. But many markers have more semantic and pragmatic constraints associated with them, which have to be verified in the generator’s input representation for the marker to be a candidate. Then, discourse markers place (predominantly syntactic) constraints on their immediate context, which affects the interactions between marker choice and other realization decisions. And finally, markers that are still equivalent after evaluating these constraints are subject to a choice process that can utilize preferential (e.g. stylistic or length-based) criteria. Therefore, under the generation view, the information in DiMLex is grouped into the following three classes: conditions: necessary conditions for using a discourse marker, i.e., the features or structural configurations that need to be present in the input specification. constraints: constraints regarding the combination of a marker and the neighbouring constituents; most of them are syntactic and appear at the beginning of the list given above (part of speech, linear order, etc.). features: that label the differences between similar markers sharing the same applicability conditions, such as stylistic features and degrees of emphasis. Very briefly, we see discourse marker choice one aspect of the planning (e.g. (Wanner, Hovy, 1996)). In order to account for the intricate interactions between marker choice and other generation decisions, the idea is to employ DiMLex as a declarative resource supporting the sentence planning process, which comprises determining sentence and sentence structure, linear ordering of constituents (e.g. thematizations), and lexical choice. All these decisions are heavily interdependent, and in order to produce truly adequate text, the various realization options need to be weighted against each other (in contrast to a simple, fixed sequence of making the types of decisions), which presupposes a flexible computational mechanism based on resources as declarative as possible. This generation approach is described in more detail in (Grote, Stede, 1998). 4.2 The text understanding perspective In text understanding, discourse markers serve as cues for inferring the rhetorical or semantic structure of the text. In the approach proposed in (Marcu, 1997), for example, the presence of discourse markers is used to hypothesize individual textual units and relations holding between them. Then, the overall discourse structure tree is built using constraint satisfaction techniques. Our analysis method uses the lexicon for an initial identification and disambiguation of discourse markers. They serve as one of several other shallow features that determine through a statistical, learned language model the optimal rhetorical analysis. In contrast to the use of markers in generation, the list of cues is significantly longer and includes phrasal items like aus diesem Grund (for this reason) or genauer genommen (more precisely). 5 Our XML/XSL solution In the following we show some sample representations and style sheets that have been abridged for presentation purposes. 5.1 Source representation In our hierarchical XML structure, the tag encloses the entire file, every single entry rests in an tag, which unambigously identifies every entry its Within the are four subordinate tags: and contains the orthographic form of the headword; at present this amounts to two slots for alternative orthographies. The contains the syntactic information about the headword. In this shortened examthere is only the field&gt; present, &lt;?xml version=&amp;quot;1.0&amp;quot; ?&gt; &lt;?xml-stylesheet type=&amp;quot;text/xsl&amp;quot; href=&amp;quot;short_dictionary.xsl&amp;quot; ?&gt; &lt;!DOCTYPE dictionary SYSTEM &amp;quot;DTD.dtd&amp;quot;&gt; &lt;entry id=&amp;quot;05&amp;quot;&gt; &lt;form&gt; &lt;orth&gt;denn&lt;/orth&gt; &lt;alt_orth&gt;none&lt;/alt_orth&gt; . . . &lt;/form&gt; &lt;syn&gt; &lt;init_field&gt;-&lt;/init_field&gt; &lt;!-- . . . --&gt; &lt;sem&gt; &lt;function&gt;causal&lt;/function&gt; &lt;!-- . . . --&gt; &lt;/sem&gt; &lt;example&gt;Das Konzert muss ausfallen, *denn* die S&amp;auml;ngerin ist erkrankt. &lt;/example&gt; &lt;example&gt;Die Blumen auf dem Balkon sind *denn* es hat heute Frost gegeben.&lt;/example&gt; &lt;/examples&gt; &lt;/entry&gt; &lt;entry&gt; more entries &lt;/entry&gt; &lt;/dictionary&gt; Figure 1: The XML structure which shows whether the headword can be used in the initial field of a sentence. Correspondsemantic features such as which contains the semantic/discourse relation expressed by the head- Finally, contains one or that may each give an example sentence. We have shortened this presentation considerably; the full lexicon contains more fine-grained for all three areas: within information on pronounciation, syllable structure, hyphenation; within information about syntactic subcategorization and possible in the clause; within for example the feature whether the information suborby the marker is not. 5.2 HTML views The listing in Figure 4 shows a style sheet that provides an HTML by listing the XML data in format that roughly resembles a print dictionary. Figure 2 shows the output that results from applying this XSL file to the XML source in figure 1. 05: denn field / Nullstelle markers: da Konzert muss ausfallen, *denn* die S¨angerin ist erkrankt. Die Blumen auf dem Balkon sind erfroren, *denn* es hat heute nacht Frost gegeben. Figure 2: One HTML view of the data We assume that the general structure of the formatting part of XSL is familiar to the reader. We would like to highlight some details. XLINK is used to ensure that the entry contains an HTML-anchor named after the headword (ll. 14-20). This way it is possible to link a certain entry from the of a different entry (39-45). We also employ the XSL equivalent to an if/then/else construct (24-31). encloses the choices to be The contains the conorth=’none’]&amp;quot; does if the orth&gt; contains the Every other case is covered by that prints out the orth&gt; if it is not Entry alt orth init field mid field ... denn none - + ... da none + + ... zumal none - - . . . weil none - -... als none - - . . . Figure 3: Another possible HTML view of the data Figure 3 shows another possible view for the data. In this case the data is presented in table ordered by the value of the field It would be easy to show that it is possible to a as shown in the example before to print out only those entries that satisfy a certain condition. 5.3 The text generation view For the lexicon to be applied in our text generation system ‘Polibox’ (Stede, 2002), we need a Lisp-based version of DiM- Using the &lt;name&gt; &lt;slot1&gt; &lt;?xml version=&amp;quot;1.0&amp;quot;?&gt; &lt;xsl:stylesheet xmlns:xsl= &amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&gt; 5 &lt;FONT SIZE=&amp;quot;-2&amp;quot;&gt; &lt;xsl:apply-templates/&gt; &lt;/FONT&gt; &lt;/xsl:template&gt; 10 &lt;xsl:apply-templates/&gt; &lt;/xsl:template&gt; &lt;xsl:template match=&amp;quot;entry&amp;quot;&gt; &lt;P&gt;&lt;font size=&amp;quot;2&amp;quot;&gt;&lt;B&gt;&lt;A&gt; 15 &lt;xsl:value-of select=&amp;quot;form/orth&amp;quot;/&gt; &lt;/xsl:attribute&gt; &lt;xsl:value-of select=&amp;quot;./@id&amp;quot;/&gt;: &lt;xsl:value-of select=&amp;quot;form/orth&amp;quot;/&gt; 20 &lt;xsl:apply-templates/&gt;&lt;/P&gt; &lt;/xsl:template&gt; &lt;xsl:template match=&amp;quot;form&amp;quot;&gt; &lt;xsl:choose&gt; 25 &lt;/xsl:when&gt; &lt;xsl:otherwise&gt; &lt;BR/&gt;&lt;B&gt;Alternative orthography:&lt;/B&gt; &lt;xsl:value-of select=&amp;quot;alt_orth&amp;quot;/&gt; 30 &lt;/xsl:choose&gt; &lt;/xsl:template&gt; &lt;xsl:template match=&amp;quot;sem&amp;quot;&gt; &lt;BR/&gt;&lt;B&gt;Semantics:&lt;/B&gt; 35 select=&amp;quot;ko_sub&amp;quot;/&gt; / &lt;xsl:value-of select=&amp;quot;function&amp;quot;/&gt; &lt;br/&gt;&lt;b&gt;Related markers:&lt;/b&gt; &lt;xsl:for-each select=&amp;quot;rel&amp;quot;&gt; &lt;A&gt;&lt;xsl:attribute name=&amp;quot;HREF&amp;quot;&gt; 40 &lt;/xsl:attribute&gt; &lt;xsl:value-of select=&amp;quot;.&amp;quot;/&gt;&lt;/A&gt; &lt;/xsl:for-each&gt; &lt;/xsl:template&gt; 45 &lt;BR/&gt;&lt;B&gt;Occurrences:&lt;/B&gt; &lt;xsl:choose&gt; &lt;xsl:when match=&amp;quot;.[init\_field=’-’]&amp;quot;&gt; &lt;/xsl:when&gt; 50 initial field / &lt;/xsl:otherwise&gt; &lt;/xsl:choose&gt; &lt;/xsl:template&gt; 55 &lt;BR/&gt;&lt;B&gt;Examples:&lt;/B&gt; &lt;xsl:for-each select=&amp;quot;example&amp;quot;&gt; &lt;xsl:value-of select=&amp;quot;.&amp;quot;/&gt;&lt;BR/&gt; &lt;/xsl:for-each&gt; &lt;/xsl:stylesheet&gt; Figure 4: The XSL file for the HTML view shown in Figure 2 &lt;slotn&gt;) we define a class of objects for discourse markers, where the features needed for generation are stored in the slots. Again, we abbreviate slightly: (defstruct DiscMarker Relation N-Complexity S-Complexity Ortho POS ... Style) Now, a Lisp-object for each individual discourse marker entry is created with the funcwhich provides the values for the slots. Figure 5 shows the shape of the for whose XML-source was given in figure 1. Again, we aim at deriving these entries automatically via an XSL sheet (which we do not show here). Notice that the mapping task is now somewhat different from the HTML cases, since the transformation part of XSL (XSLT) comes into play here. Instead of merely displaying the data in a web browser as in the examples before, an XSLT processor may transform data for use in some XML based client application. As explained in Section 4.1, in the generation scenario we are given a tree fragment consisting of a discourse relation node and two daughters representing the related material, the nucleus and the satellite of the relation. In order to decide whether a particular marker can be used, one important constraint is the “size” of the daughter material, which can be a single proposition or an entire sub-tree. The generator needs to estimate whether it will fit into a single phrase, clause, sentence, or into a sequence of sentences; a subordinating conjunction, for instance, can only be used if the material can be expressed within a clause. Thus, Lisp-entry contains slots which are highly applicationspecific and thus do not have a simple corresponding feature in the XML source representation of the dictionary. The XSL sheet thus inspects certain combinations of daughter atof maps them to new names the fillers of the two in the Lisp structure. (Similar mappings occur in other places as well, which we do not show here.) 5.4 The text understanding view Our analysis method recasts rhetorical parsing a set of classification decisions, where a pars- (make-Discmarker :Relation cause :N-Complexity sent :S-Complexity sent :POS coordconj :Style unmarked) Figure 5: Lisp-version of generation-oriented entry for ing framework builds a tree structured analysis. Each of the decisions is based on a set of features. Feature types range from syntactical configuration to the presence of a certain discourse marker. The mapping from a pattern of observed features to a rhetorical relation may be learned automatically by a classification learning algorithm. Learning and analysis applications use a parsing framework that gives us a set of text span pairs. Every two text spans are subject to a classification learning algorithm (during training) or the actual classifier. So, a rhetorical relation is assigned to these two spans of text along with a score so that the parsing framework may decide which of several competing classifications to accept. Learning and actual rhetorical analysis are accomplished by a set of distinct tools that add specific annotations to a given input text, before resulting relations are learned or guessed. These tools include a data mining component, a part-of-speech tagger and a segmenter. They all access data organized in an XML syntax. The central learning and parsing application makes use of a Document Object Model (DOM) representation of the corpus. This data structure is effectively used for information interchange between several components, because it allows us to easily visualize and modify the current data at each processing step during development. With the present corpus data, the learning algorithm is theoretically able to identify rhetorical markers automatically and could thus compile a marker lexicon. However, markers are highly ambiguous. Even though many of them can be tagged as adverbials or conjunctions, markers often lack distinctive syntactic and/or positional properties; some of them are phrasal, some are discontinuous. To identify significant cue relation correlations, a lot of annotated data is necessary: more than is usually available. In a sparse data situation, we want to easen the learning task for the rhetorical language model: It makes sense to use a discourse marker lexicon. On the other hand, we do not expect a handcrafted lexicon to contain all contextual constraints that would enable us to assign a single rhetorical relation. These constraints can be very subtle; some of them should be represented as probabilistic scalar information. Thus, DiMLex contributes to initial discourse marker disambiguation. From each entry, we interpret syntactic positioning information, morphosyntactic contextual information and a scope class (sentential, phrasal, discourselevel) as a conjunction of constraints. The presence of a certain discourse marker in a specified configuration is one of the features to be observed in the text. Depending on the depth of the syntactic and semantic analysis carried out by the text understanding system, different features provided by DiMLex can be taken into account. Certain structural configurations can be tested without any deep understanding; for instance, the marker generally ambiguous between a CONTRAST and a TEMPORAL- COOCCURRENCE reading, but when followed by a noun phrase, only the latter reading is availnot only to the Enalso to In the parsing client application, DiMLex serves as resource for the identification of cue phrases in specific structural configurations. Rhetorical information from the DiMLex entries may serve as one of several cues for the classification engine. The final linking from cue patterns to rhetorical relations is learned from a corpus annotated with rhetorical structures. 6 Summary We have presented our ongoing work on constructing an XML-based dictionary of discourse markers, from which a variety of views are derived by XSL sheets: For the dictionary designer or application developer, we present the dictionary in tabular form or in a form resembling print dictionaries, but with hyperlinks included for easy cross-referencing. Similarly, text generation and understanding systems are on the one hand written in different programming languages and thus expect different dictionary formats; on the other hand, the information needed for generation and parsing is also not identical, which is accounted for by the XSL sheets. Evaluation of the approach will depend on the client applications. Their implementation will determine the final shape of DiMLex.</abstract>
<note confidence="0.723697444444445">References R.A. Amsler and F.W. Tompa, “An SGML- Based Standard for English Monolingual Dic- In: in Text: Fourth Annual Conference of the UW Center for the Oxford English University of Waterloo Center for the New Oxford English Dictionary, Waterloo, Ontario, 1988, pp. 61- 79. Asher. to Abstract Objects in Dis- Kluwer, 1993. B. Grote, M. Stede. “Discourse marker choice sentence planning.” In: of the Ninth International Workshop on Natural Generation, Canada, 1998. B. Grote. “Signalling coherence relations: temporal markers and their role in text genera-</note>
<affiliation confidence="0.448727">tion.” Doctoral dissertation, Universit¨at Bre-</affiliation>
<keyword confidence="0.511754">men, forthcoming.</keyword>
<note confidence="0.913623333333333">N. M. Ide, J. Le Maitre, and J. V´eronis, “Outof a Model for Lexical Databases.” In- Processing and 29, 2 (1993), 159-186. N. M. Ide and J. V´eronis. Encoding Dictionarand the 29:167-</note>
<date confidence="0.95503">180, 1995</date>
<author confidence="0.566013">N M Ide</author>
<author confidence="0.566013">A Kilgarriff</author>
<author confidence="0.566013">L A For- Romary</author>
<affiliation confidence="0.6571755">mal Model of Dictionary Structure and Con- In of EURALEX pp.</affiliation>
<address confidence="0.788461">113-126, Stuttgart.</address>
<abstract confidence="0.551884363636364">A. Knott. “A data-driven methodology for motivating a set of coherence relations.” Doctoral dissertation, University of Edinburgh, 1996. W. Mann, S. Thompson. “Rhetorical structure theory: Towards a functional theory of text In: 8:243-281, 1988. D. Marcu. “The Rhetorical Parsing of Unrestricted Natural Language Texts.” of the Thirty-Fifth Annual of the Association for Computa-</abstract>
<note confidence="0.944312388888889">tional Linguistics and Eighth Conference of the European Chapter of the Association for Computational Linguistics, Somerset, New Jersey, 1997. C. Paris, K. Van der Linden, M. Fischer, A. Hartley, L. Pemberton, R. Power and D.R. Scott, “Drafter: A Drafting Tool for Produc- Multilingual Instructions”, of the 5th European Workshop on Natural Lanpp. 239-242, Leiden, the Netherlands, 1995. M. Stede. “Polibox: Generating, descriptions, comparisons, and recommendations from a database.” In Proceedings of COLING-2002. L. Wanner, E. Hovy. “The HealthDoc Sentence Planner.” Proceedings of the 8th International Workshop on Natural Language Generation, Hearstmonceux Castle, 1996.</note>
<title confidence="0.876472">Web References</title>
<author confidence="0.466821">Domain Object Model</author>
<note confidence="0.696831">W3C Recommendation, 13 November 2000</note>
<web confidence="0.799559">http://www.w3.org/TR/DOM-Level-2-Core</web>
<note confidence="0.791122">Extensible Stylesheet Language (XSL) 1.0 W3C Recommendation, 15 October 2001</note>
<web confidence="0.780701">http://www.w3.org/TR/xsl</web>
<note confidence="0.723246">XML Base W3C Recommendation 27 June 2001 http://www.w3.org/TR/xmlbase XSL Transformations (XSLT) 1.0 W3C Recommendation, 16 November 1999</note>
<web confidence="0.689994">http://www.w3.org/TR/xslt</web>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R A Amsler</author>
<author>F W Tompa</author>
</authors>
<title>An SGMLBased Standard for English Monolingual Dictionaries.” In: Information in Text:</title>
<date>1988</date>
<booktitle>Fourth Annual Conference of the UW</booktitle>
<pages>61--79</pages>
<institution>Center for the New Oxford English Dictionary, University of Waterloo Center for the New Oxford English Dictionary,</institution>
<location>Waterloo, Ontario,</location>
<marker>Amsler, Tompa, 1988</marker>
<rawString>R.A. Amsler and F.W. Tompa, “An SGMLBased Standard for English Monolingual Dictionaries.” In: Information in Text: Fourth Annual Conference of the UW Center for the New Oxford English Dictionary, University of Waterloo Center for the New Oxford English Dictionary, Waterloo, Ontario, 1988, pp. 61-79.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Asher</author>
</authors>
<title>Reference to Abstract Objects in Discourse.</title>
<date>1993</date>
<publisher>Kluwer,</publisher>
<location>Dordrecht:</location>
<contexts>
<context position="5867" citStr="Asher, 1993" startWordPosition="910" endWordPosition="911">rd approach is based on feature structures that impose a rich hierarchical structure on the data. The authors finally describe an example application that uses feature structures encoded in SGML to set up a machine-readable dictionary. The papers mentioned above agree on using SGML for the mark-up. We found that their SGML code is, however, in general XMLcompliant. 3 Discourse markers Several contemporary discourse theories posit that important aspects of a text’s coherence can be formally described (and represented) by means of discourse relations holding between adjacent spans of text (e.g. Asher, 1993; Mann, Thompson, 1988). We use the term discourse marker for those lexical items that (in addition to non-lexical means such as punctuation, aspectual and focus shifts, etc.) can signal the presence of such a relation at the linguistic surface. Typically, a discourse relation is associated with a wide range of such markers; consider, for instance, the following variety of CONCESSIONS, which all express the same underlying propositional content. The words that we treat as discourse markers are underlined. We were in SoHo; {nevertheless |nonetheless |however |still |yet}, we found a cheap bar. </context>
</contexts>
<marker>Asher, 1993</marker>
<rawString>N. Asher. Reference to Abstract Objects in Discourse. Dordrecht: Kluwer, 1993.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Grote</author>
<author>M Stede</author>
</authors>
<title>Discourse marker choice in sentence planning.” In:</title>
<date>1998</date>
<booktitle>Proceedings of the Ninth International Workshop on Natural Language Generation,</booktitle>
<location>Niagara-on-the-Lake, Canada,</location>
<marker>Grote, Stede, 1998</marker>
<rawString>B. Grote, M. Stede. “Discourse marker choice in sentence planning.” In: Proceedings of the Ninth International Workshop on Natural Language Generation, Niagara-on-the-Lake, Canada, 1998.</rawString>
</citation>
<citation valid="false">
<authors>
<author>B Grote</author>
</authors>
<title>Signalling coherence relations: temporal markers and their role in text generation.” Doctoral dissertation,</title>
<institution>Universit¨at Bremen, forthcoming.</institution>
<marker>Grote, </marker>
<rawString>B. Grote. “Signalling coherence relations: temporal markers and their role in text generation.” Doctoral dissertation, Universit¨at Bremen, forthcoming.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N M Ide</author>
<author>J Le Maitre</author>
<author>J V´eronis</author>
</authors>
<title>Outline of a Model for Lexical Databases.” Information Processing and</title>
<date>1993</date>
<journal>Management,</journal>
<volume>29</volume>
<pages>159--186</pages>
<marker>Ide, Le Maitre, V´eronis, 1993</marker>
<rawString>N. M. Ide, J. Le Maitre, and J. V´eronis, “Outline of a Model for Lexical Databases.” Information Processing and Management, 29, 2 (1993), 159-186.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N M Ide</author>
<author>J V´eronis</author>
</authors>
<title>Encoding Dictionaries.Computers and the Humanities,</title>
<date>1995</date>
<pages>29--167</pages>
<marker>Ide, V´eronis, 1995</marker>
<rawString>N. M. Ide and J. V´eronis. Encoding Dictionaries.Computers and the Humanities, 29:167-180, 1995</rawString>
</citation>
<citation valid="true">
<authors>
<author>N M Ide</author>
<author>A Kilgarriff</author>
<author>L A Romary</author>
</authors>
<title>Formal Model of Dictionary Structure and Content.</title>
<date>2000</date>
<booktitle>In Proceedings of EURALEX</booktitle>
<pages>113--126</pages>
<location>Stuttgart.</location>
<contexts>
<context position="4210" citStr="Ide et al., 2000" startWordPosition="644" endWordPosition="647">hin non-atomic elements in a tree-like hierarchy. Many approaches place orthographical and phonological information together in one group, while grammatical information is put in a different group. This hierarchical approach also allows to denote scope by inserting information at different levels of the hierarchy. Again, information about orthography and phonology generally applies to every facet of the headword and are thus placed high in the hierarchy, while other information might only apply to single definitions and thus ranks lower hierarchically (Amsler/Tompa, 1988; Ide, V´eronis, 1995; Ide et al., 2000). A common problem of lexicologists working with print dictionaries is the fact that there is a certain variation between entries in any two given dictionaries or even within the same dictionary. This results in a neccessary trade-off between the descriptive power and the generality of an approach, i.e. to design a SGML application that is both descriptive enough to be of practical value and general enough to accomodate the variation. There has been, on the other hand, only little research on machine-readable dictionaries that are not based on print dictionaries. To our knowledge, only (Ide et</context>
</contexts>
<marker>Ide, Kilgarriff, Romary, 2000</marker>
<rawString>N. M. Ide, Kilgarriff, A., and Romary, L.A Formal Model of Dictionary Structure and Content. In Proceedings of EURALEX 2000, pp. 113-126, Stuttgart.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Knott</author>
</authors>
<title>A data-driven methodology for motivating a set of coherence relations.” Doctoral dissertation,</title>
<date>1996</date>
<institution>University of Edinburgh,</institution>
<contexts>
<context position="7416" citStr="Knott, 1996" startWordPosition="1161" endWordPosition="1162">ith the information that they signal a concessive relationship between the two propositions involved. Notice that the markers belong to different syntactic categories and thus impose quite different syntactic constraints on their environment in the sentence. Discourse markers do not form a homogeneous class from the syntactican’s viewpoint, but from a functional perspective they should nonetheless be treated as alternatives in a paradigmatic choice. A detailled characterization of discourse markers, together with a test procedure for identifying them in text, has been provided for English by (Knott, 1996). Recently, (Grote, to appear) adapted Knott’s procedure for the German language. Very briefly, to identify a discourse marker (e.g., because) in a text, isolate the clause containing a candidate from the text, resolve any anaphors and make elided items explicit; if the resulting text is incomplete (e.g., because the woman bought a Macintosh), then the candidate is indeed a ‘relational phrase’, or for our purposes, a two-place discourse marker. In addition to the syntactic features, the differences in meaning and style between similar markers need to be discerned; one such difference is the de</context>
</contexts>
<marker>Knott, 1996</marker>
<rawString>A. Knott. “A data-driven methodology for motivating a set of coherence relations.” Doctoral dissertation, University of Edinburgh, 1996.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Mann</author>
<author>S Thompson</author>
</authors>
<title>Rhetorical structure theory: Towards a functional theory of text organization.” In: TEXT,</title>
<date>1988</date>
<pages>8--243</pages>
<marker>Mann, Thompson, 1988</marker>
<rawString>W. Mann, S. Thompson. “Rhetorical structure theory: Towards a functional theory of text organization.” In: TEXT, 8:243-281, 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Marcu</author>
</authors>
<title>The Rhetorical Parsing of Unrestricted Natural Language Texts.”</title>
<date>1997</date>
<booktitle>Proceedings of the Thirty-Fifth Annual Meeting of the Association for Computational Linguistics and Eighth Conference of the European Chapter of the Association for Computational Linguistics,</booktitle>
<location>Somerset, New Jersey,</location>
<contexts>
<context position="13199" citStr="Marcu, 1997" startWordPosition="2059" endWordPosition="2060">hese decisions are heavily interdependent, and in order to produce truly adequate text, the various realization options need to be weighted against each other (in contrast to a simple, fixed sequence of making the types of decisions), which presupposes a flexible computational mechanism based on resources as declarative as possible. This generation approach is described in more detail in (Grote, Stede, 1998). 4.2 The text understanding perspective In text understanding, discourse markers serve as cues for inferring the rhetorical or semantic structure of the text. In the approach proposed in (Marcu, 1997), for example, the presence of discourse markers is used to hypothesize individual textual units and relations holding between them. Then, the overall discourse structure tree is built using constraint satisfaction techniques. Our analysis method uses the lexicon for an initial identification and disambiguation of discourse markers. They serve as one of several other shallow features that determine through a statistical, learned language model the optimal rhetorical analysis. In contrast to the use of markers in generation, the list of cues is significantly longer and includes phrasal items li</context>
</contexts>
<marker>Marcu, 1997</marker>
<rawString>D. Marcu. “The Rhetorical Parsing of Unrestricted Natural Language Texts.” Proceedings of the Thirty-Fifth Annual Meeting of the Association for Computational Linguistics and Eighth Conference of the European Chapter of the Association for Computational Linguistics, Somerset, New Jersey, 1997.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Paris</author>
<author>K Van der Linden</author>
<author>M Fischer</author>
<author>A Hartley</author>
<author>L Pemberton</author>
<author>R Power</author>
<author>D R Scott</author>
</authors>
<title>Drafter: A Drafting Tool for Producing Multilingual Instructions”,</title>
<date>1995</date>
<booktitle>Proceedings of the 5th European Workshop on Natural Language Generation,</booktitle>
<pages>239--242</pages>
<location>Leiden, the</location>
<marker>Paris, Van der Linden, Fischer, Hartley, Pemberton, Power, Scott, 1995</marker>
<rawString>C. Paris, K. Van der Linden, M. Fischer, A. Hartley, L. Pemberton, R. Power and D.R. Scott, “Drafter: A Drafting Tool for Producing Multilingual Instructions”, Proceedings of the 5th European Workshop on Natural Language Generation, pp. 239-242, Leiden, the Netherlands, 1995.</rawString>
</citation>
<citation valid="false">
<authors>
<author>M Stede</author>
</authors>
<title>Polibox: Generating, descriptions, comparisons, and recommendations from a database.”</title>
<booktitle>In Proceedings of COLING-2002.</booktitle>
<marker>Stede, </marker>
<rawString>M. Stede. “Polibox: Generating, descriptions, comparisons, and recommendations from a database.” In Proceedings of COLING-2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Wanner</author>
<author>E Hovy</author>
</authors>
<title>The HealthDoc Sentence Planner.”</title>
<date>1996</date>
<booktitle>Proceedings of the 8th International Workshop on Natural Language Generation,</booktitle>
<location>Hearstmonceux Castle,</location>
<marker>Wanner, Hovy, 1996</marker>
<rawString>L. Wanner, E. Hovy. “The HealthDoc Sentence Planner.” Proceedings of the 8th International Workshop on Natural Language Generation, Hearstmonceux Castle, 1996.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Web</author>
</authors>
<title>References Domain Object Model W3C Recommendation,</title>
<date>2000</date>
<note>http://www.w3.org/TR/DOM-Level-2-Core</note>
<marker>Web, 2000</marker>
<rawString>Web References Domain Object Model W3C Recommendation, 13 November 2000 http://www.w3.org/TR/DOM-Level-2-Core</rawString>
</citation>
<citation valid="true">
<title>Extensible Stylesheet Language (XSL) 1.0 W3C Recommendation,</title>
<date>2001</date>
<note>http://www.w3.org/TR/xsl</note>
<marker>2001</marker>
<rawString>Extensible Stylesheet Language (XSL) 1.0 W3C Recommendation, 15 October 2001 http://www.w3.org/TR/xsl</rawString>
</citation>
<citation valid="true">
<date>2001</date>
<journal>XML Base W3C Recommendation</journal>
<volume>27</volume>
<note>http://www.w3.org/TR/xmlbase</note>
<marker>2001</marker>
<rawString>XML Base W3C Recommendation 27 June 2001 http://www.w3.org/TR/xmlbase</rawString>
</citation>
<citation valid="true">
<date>1999</date>
<booktitle>XSL Transformations (XSLT) 1.0 W3C Recommendation, 16</booktitle>
<note>http://www.w3.org/TR/xslt</note>
<marker>1999</marker>
<rawString>XSL Transformations (XSLT) 1.0 W3C Recommendation, 16 November 1999 http://www.w3.org/TR/xslt</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>