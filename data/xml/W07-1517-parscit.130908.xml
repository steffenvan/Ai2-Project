<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.293339">
<title confidence="0.983541">
Combining Independent Syntactic and Semantic Annotation Schemes
</title>
<author confidence="0.998568">
Marc Verhagen, Amber Stubbs and James Pustejovsky
</author>
<affiliation confidence="0.960348">
Computer Science Department
Brandeis University, Waltham, USA
</affiliation>
<email confidence="0.999425">
{marc,astubbs,jamesp}@cs.brandeis.edu
</email>
<sectionHeader confidence="0.998604" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999956857142857">
We present MAIS, a UIMA-based environ-
ment for combining information from var-
ious annotated resources. Each resource
contains one mode of linguistic annotation
and remains independent from the other re-
sources. Interactions between annotations
are defined based on use cases.
</bodyText>
<sectionHeader confidence="0.999392" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998627714285714">
MAIS is designed to allow easy access to a set of
linguistic annotations. It embodies a methodology
to define interactions between separate annotation
schemes where each interaction is based on a use
case. With MAIS, we adopt the following require-
ments for the interoperability of syntactic and se-
mantic annotations:
</bodyText>
<listItem confidence="0.9973067">
1. Each annotation scheme has its own philosophy
and is independent from the other annotations.
Simple and generally available interfaces pro-
vide access to the content of each annotation
scheme.
2. Interactions between annotations are not de-
fined a priori, but based on use cases.
3. Simple tree-based and one-directional merg-
ing of annotations is useful for visualization of
overlap between schemes.
</listItem>
<bodyText confidence="0.999890285714286">
The annotation schemes currently embedded in
MAIS are the Proposition Bank (Palmer et al.,
2005), NomBank (Meyers et al., 2004) and Time-
Bank (Pustejovsky et al., 2003). Other linguis-
tics annotation schemes like the opinion annotation
(Wiebe et al., 2005), named entity annotation, and
discourse annotation (Miltsakaki et al., 2004) will
be added in the future.
In the next section, we elaborate on the first
two requirements mentioned above and present the
MAIS methodology to achieve interoperability of
annotations. In section 3, we present the XBank
Browser, a unified browser that allows researchers
to inspect overlap between annotation schemes.
</bodyText>
<sectionHeader confidence="0.931383" genericHeader="method">
2 Interoperability of Annotations
</sectionHeader>
<bodyText confidence="0.999117">
Our goal is not to define a static merger of all anno-
tation schemes. Rather, we avoid defining a poten-
tially complex interlingua and instead focus on how
information from different sources can be combined
pragmatically. A high-level schematic representa-
tion of the system architecture is given in figure 1.
</bodyText>
<figureCaption confidence="0.999911">
Figure 1: Architecture of MAIS
</figureCaption>
<figure confidence="0.9987625">
GUI GUI
PropBank
PropBank
interface
case-based
interaction
annotation initializers
NomBank TimeBank
NomBank
interface
case-based
interaction
TimeBank
interface
</figure>
<page confidence="0.988948">
109
</page>
<bodyText confidence="0.978622625">
Proceedings of the Linguistic Annotation Workshop, pages 109–112,
Prague, June 2007. c�2007 Association for Computational Linguistics
The simple and extensible interoperability of
MAIS can be put in place using three components: a
unified environment that stores the annotations and
implements some common functionality, a set of an-
notation interfaces, and a set of case-based interac-
tions.
</bodyText>
<subsectionHeader confidence="0.991482">
2.1 Unified Environment
</subsectionHeader>
<bodyText confidence="0.999893789473684">
All annotations are embedded as stand-off annota-
tions in a unified environment in which each annota-
tion has its own namespace. This unified environ-
ment takes care of some basic functionality. For
example, given a tag from one annotation scheme,
there is a method that returns tags from other anno-
tation schemes that have the same text extent or tags
that have an overlap in text extent. The unified envi-
ronment chosen for MAIS is UIMA, the open plat-
form for unstructured information analysis created
by IBM.1
UIMA implements a common data representation
named CAS (Common Analysis Structure) that pro-
vides read and write access to the documents being
analyzed. Existing annotations can be imported into
a CAS using CAS Initializers. UIMA also provides
a framework for Analysis Engines: modules that can
read from and write to a CAS and that can be com-
bined into a complex work flow.
</bodyText>
<subsectionHeader confidence="0.998343">
2.2 Annotation Interfaces
</subsectionHeader>
<bodyText confidence="0.961289125">
In the unified environment, the individual annota-
tions are independent from each other and they are
considered immutable. Each annotation defines an
interface through which salient details of the anno-
tations can be retrieved. For example, annotation
schemes that encodes predicate-argument structure,
that is, PropBank and NomBank, define methods
like
args-of-relation(pred)
arg-of-relation(pred, arg)
relation-of-argument(arg)
Similarly, the interface for TimeBank includes
methods like
rel-between(eventz, events)
events-before(event)
event-anchorings(event)
</bodyText>
<footnote confidence="0.805394">
1http://www.research.ibm.com/UIMA/
</footnote>
<bodyText confidence="0.983241846153846">
The arguments to these methods are not strings
but text positions, where each text position contains
an offset and a document identifier. Return values
are also text positions. All interfaces are required to
include a method that returns the tuples that match a
given string:
get-locations(string, type)
This method returns a set of text positions. Each
text position points to a location where the input
string occurs as being of the given type. For Time-
Bank, the type could be event or time, for Prop-
Bank and NomBank, more appropriate values are
rel or arg0.
</bodyText>
<subsectionHeader confidence="0.900977">
2.3 Case-based Interactions
</subsectionHeader>
<bodyText confidence="0.999923866666667">
Most of the integration work occurs in the interac-
tion components. Specific interactions can be built
using the unified environment and the specified in-
terfaces of each annotation scheme.
Take for example, the use case of an entity chron-
icle (Pustejovsky and Verhagen, 2007). An entity
chronicle follows an entity through time, display-
ing what events an entity was engaged in, how these
events are anchored to time expressions, and how the
events are ordered relative to each other. Such an
application depends on three kinds of information:
identification of named entities, predicate-argument
structure, and temporal relations. Each of these de-
rive from a separate annotation scheme. A use case
can be built using the interfaces for each annotation:
</bodyText>
<listItem confidence="0.999200923076923">
• the named entity annotation returns the text
extents of the named entity, using the gen-
eral method get-locations(string,
type)
• the predicate-argument annotation (accessed
through the PropBank and NomBank inter-
faces) returns the predicates that go with a
named-entity argument, repeatedly using the
method relation-of-argument(arg)
• finally, the temporal annotation returns the tem-
poral relations between all those predicates,
calling rel-between(eventz, events)
on all pairs of predicates
</listItem>
<page confidence="0.997151">
110
</page>
<bodyText confidence="0.999967545454545">
Note that named entity annotation is not inte-
grated into the current system. As a stopgap mea-
sure we use a pre-compiled list of named entities
and feed elements of this list into the PropBank
and NomBank interfaces, asking for those text po-
sitions where the entity is expressed as an argu-
ment. This shows the utility of a general method
like get-locations(string, type).
Each case-based interaction is implemented using
one or more UIMA analysis engines. It should be
noted that the analysis engines used for the entity
chronicler do not add data to the common data repre-
sentation. This is not a principled choice: if adding
new data to the CAS is useful then it can be part of
the case-based interaction, but these added data are
not integrated into existing annotations, rather, they
are added as a separate secondary resource.2
The point of this approach is that applications can
be built pragmatically, using only those resources
that are needed. It does not depend on fully merged
syntactic and semantic representations. The entity
chronicle, for example, does not require discourse
annotation, opinion annotation or any other resource
except for the three discussed before. An a priori
requirement to have a unified representation intro-
duces complexities that go beyond what’s needed for
individual applications.
This is not to say that a unified representation is
not useful on its own, there is obvious theoretical
interest in thoroughly exploring how annotations re-
late to each other. But we feel that the unified repre-
sentation is not needed for most, if not all, practical
applications.
</bodyText>
<sectionHeader confidence="0.989543" genericHeader="method">
3 The XBank Browser
</sectionHeader>
<bodyText confidence="0.999905166666667">
The unified browser, named the XBank Browser, is
intended as a convenience for researchers. It shows
the overlap between different annotations. Annota-
tions from different schemes are merged into one
XML representation and a set of cascading style
sheets is used to display the information.
</bodyText>
<footnote confidence="0.9328035">
2In fact, for the entity chronicle it would be useful to have
extra data available. The current implementation uses what’s
provided by the basic resources plus a few heuristics to super-
ficially merge data from separate documents. But a more in-
formative chronicle along the lines of (Pustejovsky and Verha-
gen, 2007) would require more temporal links than available in
TimeBank. These can be pre-compiled and added using a dedi-
cated analysis engine.
</footnote>
<bodyText confidence="0.999078625">
The XBank Browser does not adhere to the MAIS
philosophy that all resources are independent. In-
stead, it designates one syntactic annotation to pro-
vide the basic shape of the XML tree and requires
tags from other annotations to find landing spots in
the basic tree.
The Penn Treebank annotation (Marcus et al.,
1993) was chosen to be the first among equals: it
is the starting point for the merger and data from
other annotations are attached at tree nodes. Cur-
rently, only one heuristic is used to merge in data
from other sources: go up the tree to find a Treebank
constituent that contains the entire extent of the tag
that is merged in, then select the head of this con-
stituent. A more sophisticated approach would con-
sist of two steps:
</bodyText>
<listItem confidence="0.9737478">
• first try to find an exact match of the imported
tag with a Treebank constituent,
• if that fails, find the constituent that contains
the entire tag that is merged in, and select this
constituent
</listItem>
<bodyText confidence="0.99936676">
In the latter case, there can be an option to select
the head rather than the whole constituent. In any
case, the attached node will be marked if its original
extent does not line up with the extent at the tree
node.
It should be noted that this merging is one-
directional since no attempt is made to change the
shape of the tree defined by the Treebank annota-
tion.
The unified browser currently displays markups
from the Proposition Bank, NomBank, TimeBank
and the Discourse Treebank. Tags from individual
schemes can be hidden as desired. The main prob-
lem with the XBank Browser is that there is only a
limited amount of visual clues that can be used to
distinguish individual components from each other
and cognitive overload restricts how many annota-
tion schemes can be viewed at the same time. Nev-
ertheless, the browser does show how a limited num-
ber of annotation schemes relate to each other.
All functionality of the browser can be accessed at
http://timeml.org/ula/. An idea of what
it looks like can be gleaned from the screenshot dis-
played in figure 2. In this figure, boxes represent
relations from PropBank or NomBank and shaded
</bodyText>
<page confidence="0.997532">
111
</page>
<figureCaption confidence="0.999783">
Figure 2: A glimpse of the XBank Browser
</figureCaption>
<bodyText confidence="0.9996355">
backgrounds represent arguments. Superscripts are
indexes that identify relations, subscripts identify
what relation an argument belongs to. Red fonts
indicate events from TimeBank. Note that the real
browser is barely done justice by this picture be-
cause the browser’s use of color is not visible.
</bodyText>
<sectionHeader confidence="0.999745" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999994083333333">
We described MAIS, an environment that imple-
ments interoperability between syntactic and seman-
tic annotation schemes. The kind of interoperabil-
ity proposed herein does not require an elaborate
representational structure that allows the interaction.
Rather, it relies on independent annotation schemes
with interfaces to the outside world that interact
given a specific use case. The more annotations
there are, the more interactions can be defined. The
complexity of the methodology is not bound by the
number of annotation schemes integrated but by the
complexity of the use cases.
</bodyText>
<sectionHeader confidence="0.999632" genericHeader="acknowledgments">
5 Acknowledgments
</sectionHeader>
<bodyText confidence="0.9998088">
The work reported in this paper was performed as
part of the project ”Towards a Comprehensive Lin-
guistic Annotation of Language”, and supported un-
der award CNS-0551615 of the National Science
Foundation.
</bodyText>
<sectionHeader confidence="0.999643" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999896133333333">
Mitchell Marcus, Beatrice Santorini, and Mary Ann
Marcinkiewicz. 1993. Building a Large Annotated
Corpus of English: The Penn Treeb. Computational
Linguistics, 19(2):313–330.
A. Meyers, R. Reeves, C. Macleod, R. Szekely, V. Zielin-
ska, B. Young, and R. Grishman. 2004. The nombank
project: An interim report. In A. Meyers, editor, HLT-
NAACL 2004 Workshop: Frontiers in Corpus Annota-
tion, pages 24–31, Boston, Massachusetts, USA, May
2 - May 7. Association for Computational Linguistics.
Eleni Miltsakaki, Rashmi Prasad, Aravind Joshi, and
Bonnie Webber. 2004. The penn discourse treebank.
In Proceedings of the Language Resources and Evalu-
ation Conference, Lisbon, Portugal.
Martha Palmer, Paul Kingsbury, and Daniel Gildea.
2005. The Proposition Bank: An Annotated Cor-
pus of Semantic Roles. Computational Linguistics,
31(1):71–106.
James Pustejovsky and Marc Verhagen. 2007. Con-
structing event-based entity chronicles. In Proceed-
ings of the IWCS-7, Tilburg, The Netherlands.
James Pustejovsky, Patrick Hanks, Roser Sauri, Andrew
See, Robert Gaizauskas, Andrea Setzer, Dragomir
Radev, Beth Sundheim, David Day, Lisa Ferro, and
Marcia Lazo. 2003. The timebank corpus. In Pro-
ceedings of Corpus Linguistics, pages 647–656.
Janyce Wiebe, Theresa Wilson, and Claire Cardie. 2005.
Annotating expressions of opinions and emotions in
language. Language Resources and Evaluation, 39(2-
3):165–210.
</reference>
<page confidence="0.998293">
112
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.987061">
<title confidence="0.999916">Combining Independent Syntactic and Semantic Annotation Schemes</title>
<author confidence="0.998522">Marc Verhagen</author>
<author confidence="0.998522">Amber Stubbs</author>
<author confidence="0.998522">James</author>
<affiliation confidence="0.9957725">Computer Science Brandeis University, Waltham,</affiliation>
<abstract confidence="0.999617625">We present MAIS, a UIMA-based environment for combining information from various annotated resources. Each resource contains one mode of linguistic annotation and remains independent from the other resources. Interactions between annotations are defined based on use cases.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Mitchell Marcus</author>
<author>Beatrice Santorini</author>
<author>Mary Ann Marcinkiewicz</author>
</authors>
<title>Building a Large Annotated Corpus of English: The Penn Treeb. Computational Linguistics,</title>
<date>1993</date>
<contexts>
<context position="8848" citStr="Marcus et al., 1993" startWordPosition="1352" endWordPosition="1355"> resources plus a few heuristics to superficially merge data from separate documents. But a more informative chronicle along the lines of (Pustejovsky and Verhagen, 2007) would require more temporal links than available in TimeBank. These can be pre-compiled and added using a dedicated analysis engine. The XBank Browser does not adhere to the MAIS philosophy that all resources are independent. Instead, it designates one syntactic annotation to provide the basic shape of the XML tree and requires tags from other annotations to find landing spots in the basic tree. The Penn Treebank annotation (Marcus et al., 1993) was chosen to be the first among equals: it is the starting point for the merger and data from other annotations are attached at tree nodes. Currently, only one heuristic is used to merge in data from other sources: go up the tree to find a Treebank constituent that contains the entire extent of the tag that is merged in, then select the head of this constituent. A more sophisticated approach would consist of two steps: • first try to find an exact match of the imported tag with a Treebank constituent, • if that fails, find the constituent that contains the entire tag that is merged in, and s</context>
</contexts>
<marker>Marcus, Santorini, Marcinkiewicz, 1993</marker>
<rawString>Mitchell Marcus, Beatrice Santorini, and Mary Ann Marcinkiewicz. 1993. Building a Large Annotated Corpus of English: The Penn Treeb. Computational Linguistics, 19(2):313–330.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Meyers</author>
<author>R Reeves</author>
<author>C Macleod</author>
<author>R Szekely</author>
<author>V Zielinska</author>
<author>B Young</author>
<author>R Grishman</author>
</authors>
<title>The nombank project: An interim report.</title>
<date>2004</date>
<booktitle>HLTNAACL 2004 Workshop: Frontiers in Corpus Annotation,</booktitle>
<volume>2</volume>
<pages>24--31</pages>
<editor>In A. Meyers, editor,</editor>
<location>Boston, Massachusetts, USA,</location>
<contexts>
<context position="1357" citStr="Meyers et al., 2004" startWordPosition="193" endWordPosition="196"> the following requirements for the interoperability of syntactic and semantic annotations: 1. Each annotation scheme has its own philosophy and is independent from the other annotations. Simple and generally available interfaces provide access to the content of each annotation scheme. 2. Interactions between annotations are not defined a priori, but based on use cases. 3. Simple tree-based and one-directional merging of annotations is useful for visualization of overlap between schemes. The annotation schemes currently embedded in MAIS are the Proposition Bank (Palmer et al., 2005), NomBank (Meyers et al., 2004) and TimeBank (Pustejovsky et al., 2003). Other linguistics annotation schemes like the opinion annotation (Wiebe et al., 2005), named entity annotation, and discourse annotation (Miltsakaki et al., 2004) will be added in the future. In the next section, we elaborate on the first two requirements mentioned above and present the MAIS methodology to achieve interoperability of annotations. In section 3, we present the XBank Browser, a unified browser that allows researchers to inspect overlap between annotation schemes. 2 Interoperability of Annotations Our goal is not to define a static merger </context>
</contexts>
<marker>Meyers, Reeves, Macleod, Szekely, Zielinska, Young, Grishman, 2004</marker>
<rawString>A. Meyers, R. Reeves, C. Macleod, R. Szekely, V. Zielinska, B. Young, and R. Grishman. 2004. The nombank project: An interim report. In A. Meyers, editor, HLTNAACL 2004 Workshop: Frontiers in Corpus Annotation, pages 24–31, Boston, Massachusetts, USA, May 2 - May 7. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eleni Miltsakaki</author>
<author>Rashmi Prasad</author>
<author>Aravind Joshi</author>
<author>Bonnie Webber</author>
</authors>
<title>The penn discourse treebank.</title>
<date>2004</date>
<booktitle>In Proceedings of the Language Resources and Evaluation Conference,</booktitle>
<location>Lisbon, Portugal.</location>
<contexts>
<context position="1561" citStr="Miltsakaki et al., 2004" startWordPosition="223" endWordPosition="226">enerally available interfaces provide access to the content of each annotation scheme. 2. Interactions between annotations are not defined a priori, but based on use cases. 3. Simple tree-based and one-directional merging of annotations is useful for visualization of overlap between schemes. The annotation schemes currently embedded in MAIS are the Proposition Bank (Palmer et al., 2005), NomBank (Meyers et al., 2004) and TimeBank (Pustejovsky et al., 2003). Other linguistics annotation schemes like the opinion annotation (Wiebe et al., 2005), named entity annotation, and discourse annotation (Miltsakaki et al., 2004) will be added in the future. In the next section, we elaborate on the first two requirements mentioned above and present the MAIS methodology to achieve interoperability of annotations. In section 3, we present the XBank Browser, a unified browser that allows researchers to inspect overlap between annotation schemes. 2 Interoperability of Annotations Our goal is not to define a static merger of all annotation schemes. Rather, we avoid defining a potentially complex interlingua and instead focus on how information from different sources can be combined pragmatically. A high-level schematic rep</context>
</contexts>
<marker>Miltsakaki, Prasad, Joshi, Webber, 2004</marker>
<rawString>Eleni Miltsakaki, Rashmi Prasad, Aravind Joshi, and Bonnie Webber. 2004. The penn discourse treebank. In Proceedings of the Language Resources and Evaluation Conference, Lisbon, Portugal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martha Palmer</author>
<author>Paul Kingsbury</author>
<author>Daniel Gildea</author>
</authors>
<title>The Proposition Bank: An Annotated Corpus of Semantic Roles.</title>
<date>2005</date>
<journal>Computational Linguistics,</journal>
<volume>31</volume>
<issue>1</issue>
<contexts>
<context position="1326" citStr="Palmer et al., 2005" startWordPosition="188" endWordPosition="191">a use case. With MAIS, we adopt the following requirements for the interoperability of syntactic and semantic annotations: 1. Each annotation scheme has its own philosophy and is independent from the other annotations. Simple and generally available interfaces provide access to the content of each annotation scheme. 2. Interactions between annotations are not defined a priori, but based on use cases. 3. Simple tree-based and one-directional merging of annotations is useful for visualization of overlap between schemes. The annotation schemes currently embedded in MAIS are the Proposition Bank (Palmer et al., 2005), NomBank (Meyers et al., 2004) and TimeBank (Pustejovsky et al., 2003). Other linguistics annotation schemes like the opinion annotation (Wiebe et al., 2005), named entity annotation, and discourse annotation (Miltsakaki et al., 2004) will be added in the future. In the next section, we elaborate on the first two requirements mentioned above and present the MAIS methodology to achieve interoperability of annotations. In section 3, we present the XBank Browser, a unified browser that allows researchers to inspect overlap between annotation schemes. 2 Interoperability of Annotations Our goal is</context>
</contexts>
<marker>Palmer, Kingsbury, Gildea, 2005</marker>
<rawString>Martha Palmer, Paul Kingsbury, and Daniel Gildea. 2005. The Proposition Bank: An Annotated Corpus of Semantic Roles. Computational Linguistics, 31(1):71–106.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
<author>Marc Verhagen</author>
</authors>
<title>Constructing event-based entity chronicles.</title>
<date>2007</date>
<booktitle>In Proceedings of the IWCS-7,</booktitle>
<location>Tilburg, The Netherlands.</location>
<contexts>
<context position="5200" citStr="Pustejovsky and Verhagen, 2007" startWordPosition="770" endWordPosition="773">turns the tuples that match a given string: get-locations(string, type) This method returns a set of text positions. Each text position points to a location where the input string occurs as being of the given type. For TimeBank, the type could be event or time, for PropBank and NomBank, more appropriate values are rel or arg0. 2.3 Case-based Interactions Most of the integration work occurs in the interaction components. Specific interactions can be built using the unified environment and the specified interfaces of each annotation scheme. Take for example, the use case of an entity chronicle (Pustejovsky and Verhagen, 2007). An entity chronicle follows an entity through time, displaying what events an entity was engaged in, how these events are anchored to time expressions, and how the events are ordered relative to each other. Such an application depends on three kinds of information: identification of named entities, predicate-argument structure, and temporal relations. Each of these derive from a separate annotation scheme. A use case can be built using the interfaces for each annotation: • the named entity annotation returns the text extents of the named entity, using the general method get-locations(string,</context>
<context position="8398" citStr="Pustejovsky and Verhagen, 2007" startWordPosition="1276" endWordPosition="1280">tions. 3 The XBank Browser The unified browser, named the XBank Browser, is intended as a convenience for researchers. It shows the overlap between different annotations. Annotations from different schemes are merged into one XML representation and a set of cascading style sheets is used to display the information. 2In fact, for the entity chronicle it would be useful to have extra data available. The current implementation uses what’s provided by the basic resources plus a few heuristics to superficially merge data from separate documents. But a more informative chronicle along the lines of (Pustejovsky and Verhagen, 2007) would require more temporal links than available in TimeBank. These can be pre-compiled and added using a dedicated analysis engine. The XBank Browser does not adhere to the MAIS philosophy that all resources are independent. Instead, it designates one syntactic annotation to provide the basic shape of the XML tree and requires tags from other annotations to find landing spots in the basic tree. The Penn Treebank annotation (Marcus et al., 1993) was chosen to be the first among equals: it is the starting point for the merger and data from other annotations are attached at tree nodes. Currentl</context>
</contexts>
<marker>Pustejovsky, Verhagen, 2007</marker>
<rawString>James Pustejovsky and Marc Verhagen. 2007. Constructing event-based entity chronicles. In Proceedings of the IWCS-7, Tilburg, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
<author>Patrick Hanks</author>
<author>Roser Sauri</author>
<author>Andrew See</author>
<author>Robert Gaizauskas</author>
<author>Andrea Setzer</author>
<author>Dragomir Radev</author>
<author>Beth Sundheim</author>
<author>David Day</author>
<author>Lisa Ferro</author>
<author>Marcia Lazo</author>
</authors>
<title>The timebank corpus.</title>
<date>2003</date>
<booktitle>In Proceedings of Corpus Linguistics,</booktitle>
<pages>647--656</pages>
<contexts>
<context position="1397" citStr="Pustejovsky et al., 2003" startWordPosition="200" endWordPosition="203"> interoperability of syntactic and semantic annotations: 1. Each annotation scheme has its own philosophy and is independent from the other annotations. Simple and generally available interfaces provide access to the content of each annotation scheme. 2. Interactions between annotations are not defined a priori, but based on use cases. 3. Simple tree-based and one-directional merging of annotations is useful for visualization of overlap between schemes. The annotation schemes currently embedded in MAIS are the Proposition Bank (Palmer et al., 2005), NomBank (Meyers et al., 2004) and TimeBank (Pustejovsky et al., 2003). Other linguistics annotation schemes like the opinion annotation (Wiebe et al., 2005), named entity annotation, and discourse annotation (Miltsakaki et al., 2004) will be added in the future. In the next section, we elaborate on the first two requirements mentioned above and present the MAIS methodology to achieve interoperability of annotations. In section 3, we present the XBank Browser, a unified browser that allows researchers to inspect overlap between annotation schemes. 2 Interoperability of Annotations Our goal is not to define a static merger of all annotation schemes. Rather, we av</context>
</contexts>
<marker>Pustejovsky, Hanks, Sauri, See, Gaizauskas, Setzer, Radev, Sundheim, Day, Ferro, Lazo, 2003</marker>
<rawString>James Pustejovsky, Patrick Hanks, Roser Sauri, Andrew See, Robert Gaizauskas, Andrea Setzer, Dragomir Radev, Beth Sundheim, David Day, Lisa Ferro, and Marcia Lazo. 2003. The timebank corpus. In Proceedings of Corpus Linguistics, pages 647–656.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Janyce Wiebe</author>
<author>Theresa Wilson</author>
<author>Claire Cardie</author>
</authors>
<title>Annotating expressions of opinions and emotions in language. Language Resources and Evaluation,</title>
<date>2005</date>
<pages>39--2</pages>
<contexts>
<context position="1484" citStr="Wiebe et al., 2005" startWordPosition="213" endWordPosition="216">n philosophy and is independent from the other annotations. Simple and generally available interfaces provide access to the content of each annotation scheme. 2. Interactions between annotations are not defined a priori, but based on use cases. 3. Simple tree-based and one-directional merging of annotations is useful for visualization of overlap between schemes. The annotation schemes currently embedded in MAIS are the Proposition Bank (Palmer et al., 2005), NomBank (Meyers et al., 2004) and TimeBank (Pustejovsky et al., 2003). Other linguistics annotation schemes like the opinion annotation (Wiebe et al., 2005), named entity annotation, and discourse annotation (Miltsakaki et al., 2004) will be added in the future. In the next section, we elaborate on the first two requirements mentioned above and present the MAIS methodology to achieve interoperability of annotations. In section 3, we present the XBank Browser, a unified browser that allows researchers to inspect overlap between annotation schemes. 2 Interoperability of Annotations Our goal is not to define a static merger of all annotation schemes. Rather, we avoid defining a potentially complex interlingua and instead focus on how information fro</context>
</contexts>
<marker>Wiebe, Wilson, Cardie, 2005</marker>
<rawString>Janyce Wiebe, Theresa Wilson, and Claire Cardie. 2005. Annotating expressions of opinions and emotions in language. Language Resources and Evaluation, 39(2-3):165–210.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>