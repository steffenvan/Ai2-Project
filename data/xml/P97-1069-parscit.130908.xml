<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000223">
<title confidence="0.987713">
Generative Power of CCGs with Generalized Type-Raised Categories
</title>
<author confidence="0.995065">
Nobo Komagata
</author>
<affiliation confidence="0.998461">
Department of Computer and Information Science
University of Pennsylvania
</affiliation>
<address confidence="0.844242">
Philadelphia, PA 19104
</address>
<email confidence="0.977227">
komagataglinc.cis.upenn.edu
</email>
<sectionHeader confidence="0.997044" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999442875">
This paper shows that a class of Combinatory
Categorial Grammars (CCGs) augmented with
a linguistically-motivated form of type raising
involving variables is weakly equivalent to the
standard CCGs not involving variables. The
proof is based on the idea that any instance of
such a grammar can be simulated by a standard
CCG.
</bodyText>
<sectionHeader confidence="0.999644" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99995724">
The class of Combinatory Categorial Grammars (CCG-
Std) was proved to be weakly equivalent to Linear Index
Grammars and Tree Adjoining Grammars (Joshi, Vijay-
Shanker, and Weir, 1991; Vijay-Shanker and Weir, 1994).
But CCG-Std cannot handle the generalization of type
raising that has been used in accounting for various lin-
guistic phenomena including: coordination and extrac-
tion (Steedman, 1985; Dowty, 1988; Steedman, 1996),
prosody (Prevost and Steedman, 1993), and quantifier
scope (Park, 1995). Intuitively, all of these phenomena
call for a non-traditional, more flexible notion of consti-
tuency capable of representing surface structures inclu-
ding &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type
raising involving variables can be introduced to derive
such a constituent,&apos; unconstrained use of variables can
increase the power. For example, a grammar involving
(T \ x) /(T\y) can generate a language A&amp;quot; Bn C&apos; D&apos;En
which CCG-Std cannot (Hoffman, 1993).
This paper argues that there is a class of grammars
which allows the use of linguistically-motivated form of
type raising involving variables while it is still weakly
equivalent to CCG-Std. A class of grammars, CCG-
GTRC, is introduced in the next section as an extension
to CCG-Std. Then we show that CCG-GTRC can actually
be simulated by a CCG-Std, proving the equivalence.
</bodyText>
<footnote confidence="0.55242075">
&apos;Thanks to Mark Steedman, Beryl Hoffman, Anoop Sarkar,
and the reviewers. The research was supported in part by NSF
Grant Nos. 112195-04372, STC-SBR-8920230, ARPA Grant
No. N66001-94-C6043, and ARO Grant No. DAAH04-94-
G0426.
&apos;Our lexical rules to introduce type raising are non-recursive
and thus do not suffer from the problem of the overgeneration
discussed in (Carpenter, 1991).
</footnote>
<sectionHeader confidence="0.934489" genericHeader="method">
2 CCGs with Generalized Type-Raised
Categories
</sectionHeader>
<bodyText confidence="0.987743045454545">
In languages like Japanese, multiple NPs can easily form
a non-traditional constituent as in &amp;quot;[(Subj Obji) &amp; (Subj2
Obj2)] Verb&amp;quot;. The proposed grammars (CCG-GTRC)
admit lexical type-raised categories (LTRC) of the form
T/ (T\a) or T\ (T/a) where T is a variable over categories
and a is a constant category (Const).2 Then, composition
of LTRCs can give rise to a class of categories having
the form T/ (T\ \ al) or T\ (T/an.../a1), representing
a multiple-NP constituent exemplified by &amp;quot;Subji Obi
We call these categories generalized type-raised cate-
gories (GTRC) and each a; of a GTRC an argument (of
the GTRC).
The introduction of GTRCs affects the use of combi-
natory rules: functional application &amp;quot;&gt;: xly + y x&amp;quot;
and generalized functional composition &amp;quot;&gt;B&apos; (x)
x y + ylz,...lzk iz,...lzk&amp;quot; where k is bounded by a
grammar-dependent kniaz as in CCG-Std.3 This paper
assumes two constraints defined for the grammars and
one condition stipulated to control the formal properties.
The following order-preserving constraint, which
follows more primitive directionality features (Steedman,
1991), limits the directions of the slashes in GTRCs.
</bodyText>
<listItem confidence="0.7317535">
(1) In a GTRC Tjo (lion—kat), the direction of lo must
be the opposite to any of In ,
</listItem>
<bodyText confidence="0.7739785">
This prohibits functional composition `&gt;Bx &apos; on
`GTRC+GTRC&apos; pairs so that
&amp;quot;T/ (T\ A \ B) U\ (U/C/D)&amp;quot; does not result in
T\ (T\A\B/C/D) or U/ (U/C/D\A\B). That is, no
movement of arguments across the functor is allowed.
The variable constraint states that:
</bodyText>
<listItem confidence="0.5730205">
(2) Variables are limited to the defined positions in
GTRCs.
</listItem>
<bodyText confidence="0.983903">
This prohibits &gt;Bk () &apos; with k &gt; 1 on the pair
&apos;Categories are in the &amp;quot;result-leftmost&amp;quot; representation and
associate left. Thus alblc should be read as (a/b) /c and re-
turns a/b when an argument c is applied to its right. A, ..., Z
stand for nonterminals and a, ..., z for complex, constant
categories.
3There are also backward rules (&lt;) that are analogous to
forward rules (&gt;). Crossing rules where z, is found in the
direction opposite of that of y are labelled with x &apos;k&apos; re-
presents the number of arguments being passed. &apos;I&apos; stands for
a directional meta-variable for {/, \}.
</bodyText>
<page confidence="0.98814">
513
</page>
<bodyText confidence="0.981723">
&apos;Const+GTRC&apos;. For example, &apos;&gt;B2&apos; on &amp;quot;A/B +
T/ (T \ C)&amp;quot; cannot realize the unification of the form
&amp;quot;A/B + TIIT21 (TIIT2\ C)&amp;quot; (with T = TilT2) resulting in
&amp;quot;AiT2/ (BIT2\ C)&amp;quot;.
In order to assure the expected generative capacity, we
place a condition on the use of rules. The condition can
be viewed in a way comparable to those on rewriting rules
to define, say, context-free grammars. The bounded ar-
gument condition ensures that every argument category
is bounded as follows:
(3) `&gt;B (x)&apos; should not apply to the pair
&apos;Const+GTRC&apos;.
For example, this prohibits &amp;quot;AIB + T/ (T\ C.... \ CI) —
A/ (B\C....\C1)&amp;quot;, where the underlined argument can
be unboundedly large. These constraints and condition
also tell us how we can implement a CCG-GTRC system
without overgeneration.
The possible cases of combinatory rule application are
summarized as follows:
</bodyText>
<listItem confidence="0.968275769230769">
(4) a. For &apos;Const+Conse , the same rules as in CCG-Std
are applicable.
b. For `GTRC+Conse , the applicable rules are:
(i) &gt;: e.g., &amp;quot;T/ (T\A\B) + S\A\B 5&amp;quot;
(ii) &gt;Bk (x): e.g., &amp;quot;T/ (T \ A \ B) +
S\A\B\C I D S\C I D&amp;quot;
c. For &apos;Const+GTRC&apos;, only &apos;&gt;&apos; is possible: e.g.,
&amp;quot;SI (Si (S\B)) +T/ (T \ B) S&amp;quot;
d. For `GTRC+GTRC&apos;, the possibilities are:
(i) &gt;: e.g., &amp;quot;T/ (T\ (S/A/B)) + T (T/A/B)
S&amp;quot;
(ii) &gt;B: e.g., &amp;quot;T/ (T \ A \ B) + T/ (T\C\D) —
T/ (T\A\B\C\D)&amp;quot;
</listItem>
<bodyText confidence="0.9904696875">
CCG-GTRC is defined below where g,t, and ggt„ re-
present the classes of the instances of CCG-Std and CCG-
GTRC, respectively:
Definition 1 ggt„ is the collection of G&apos;s (extension of
a G E gstd) such that:
I. For the lexical function f of G (from terminals to
sets of categories), if a E f (a), f&apos; may additionally
include { (a, T/ (T \ a)) , (a, T (T/a) )1.
2. G&apos; may include the rule schemata in (4).
The main claim of the paper is the following:
Proposition 1 gor, is wealdy equivalent with g3 td.
We show the non-trivial direction: for any G&apos; E gorc,
there is a G&amp;quot; E gstd such that L (G&apos;) = L (G&amp;quot;). As G&apos;
corresponds to a unique G E Cs td, we extend G&amp;quot; from G
to simulate G&apos;, then show that the languages are exactly
the same.
</bodyText>
<sectionHeader confidence="0.89384" genericHeader="method">
3 Simulation of CCG-GTRC
</sectionHeader>
<bodyText confidence="0.9973585">
Consider a fragment of CCG-GTRC with a lexical
function f such that f (a) = {A, T/ (T\ A) } , f (b) =
T/ (T\ A)} , f (c) = {S\A\B}. This fragment can
generate the following two permutations:
</bodyText>
<figure confidence="0.797243857142857">
(5) a. a
T/ (T\ A) + T/ (I\ B) + S\A\B
S\A
6. b a
T/ (T\B) + T/ (TVA) + S\A\B
&gt;Bx
S\B
</figure>
<bodyText confidence="0.995782181818182">
Notice that (50 cannot be generated by the original CCG-
Std where the lexicon does not involve GTRCs. In order
to (statically)simulate (5b) by a CCG-Std, we add S\B\A
to the value of f&amp;quot; (c) in the lexicon of G&amp;quot;. Let us call
this type of relation between the original S\A\B and the
new S\B wrapping, due to its resemblance to the
operation of the same name in (Bach, 1979). There are
two potential problems with this simple augmentation.
First, wrapping may affect unboundedly long chunks of
categories as exemplified in (6). Second, the simulation
may overgenerate. We discuss these issues in turn.
</bodyText>
<equation confidence="0.875362">
(6) &amp;quot;T/ (T \ A) +T/ (T \ B) (T \ A) +T/ (T \ B) +
S\A\B...\A\B\C S\C&amp;quot;
</equation>
<bodyText confidence="0.999622">
We need S\CI\A\B...\A\B , which can be the result of
unboundedly-long compositions, to simulate (6) without
depending on the GTRCs. Intuitively, this situation is
analogous to long-distance movement of C from the po-
sition left of S\A\B ...\C to the sentence-initial position.
In order to deal with the first problem, the following
key properties of CCG-GTRC must be observed:
</bodyText>
<listItem confidence="0.6442005">
(7) a. Any derived category is a combination of lexical
categories. For example,
</listItem>
<equation confidence="0.929006666666667">
S\A\B\A\B...\A\B\C may be derived from
&amp;quot;S\A\B\C + + S\A\B\S + S\A\B\S&amp;quot; by
&apos;&lt;B&apos;.
</equation>
<bodyText confidence="0.9964047">
b. Wrapping can occur only when GTRCs are invol-
ved in the use of &apos;&gt; Bkx &apos; and can only cross at most
kmar arguments. Since there are only finitely-
many argument categories, the argument(s) being
passed can be encoded in a finite store.
For derivable categories bounded by the maximum
number of arguments of a lexical category, we add all
the instances of wrapping required for simulating the ef-
fect of GTRC into the lexicon of G&amp;quot;. For the unbounded
case, we extend the lexicon as in the following example:
</bodyText>
<listItem confidence="0.886998333333333">
(8) a. For a category S\A\B\C, add S{\c}\A\B to the
lexicon.
b. For S\A\B\S, add S{\c}\A\B\S{\c},
</listItem>
<footnote confidence="0.6202395">
S\A\B\C\Sncl,...,S\Gl\A\B \S{\c}.
S{\c} is a new category representing the situation where
\C is being passed across categories. Thus \C which
originated in S\A\B\C in (a) may be passed onto another
</footnote>
<page confidence="0.9955">
514
</page>
<bodyText confidence="0.996698">
[1-wrap] and/or the new categories of the form &apos;x{. &apos;
which record the argument(s) being passed. As before,
we need sublemmas to handle each case. The proof of
the sublemma involving the `xf ..} &apos; form can be done by
induction on the length of the category.
category in (b), after a possibly unbounded number of
compositions as follows:
</bodyText>
<note confidence="0.3751325">
(9) S(\c}\A\B Sf\cl\A\B\S{\c}+
S\C \A\B \S{w} S\CI\A\B ...\A\B\A\B
</note>
<bodyText confidence="0.973764909090909">
Now, both of the permutations in (5) can be derived in
this extension of CCG-Std. The finite lexicon with finite
extension assures the termination of the process. This
covers the case (4bii).
Case (4c) can be characterized by a general pattern
&amp;quot;c/ (b1 (b\ak T/ {T\ ak... \ al) c&amp;quot; where T =
b. Since any argument category is bounded, we can add
b/ (b\a k ...\ct E f (al ...a,‘) in the lexicon as an idiom.
The other cases do not require simulation as the same
string can be derived in the original grammar.
The second problem of overgeneration calls for
another step. Suppose that the lexicon includes
1(c) = {S\A\B}, f (d) = {S\B\A}, and 1(e) =
{E\ (S\B\A)} and that S\B \A is added to 1(c)
by wrapping. To avoid generating an illegal string
&amp;quot;c e&amp;quot; (in addition to the legal &amp;quot;d e&amp;quot;), we label the
state of wrapping as S \ Bf.f.rapi \ ilf+wrop] . The origi-
nal entries can be labelled as S Br—wrapAAI—wrapl and
E\ (S\B(_,.0,„„)\At_wropi). The lexical, argument cate-
gories, e.g., A, are underspecified with respect to the fea-
ture. Since finite features can be folded into a category,
this can be written as a CCG-Std without features.
</bodyText>
<sectionHeader confidence="0.940305" genericHeader="method">
4 Equivalence of the Two Languages
</sectionHeader>
<bodyText confidence="0.979381576923077">
Proposition 1 can be proved by the following lemma (as
a special case where c = S):
Lemma 1 For any G&apos; E ggtrc (an extension of G), there
is a G&amp;quot; E gitd such that a string w is derivable from a
constant category c in G&apos; if (4-4) w is derivable from c in
G&amp;quot;.
The sketch of the proof goes as follows. First, we con-
struct G&amp;quot; from G&apos; as in the previous section. Both di-
rections of the lemma can be proved by induction on the
height of derivation. Consider the direction of `,&apos;. The
base (lexical) case holds by definition of the grammars.
For the induction step, we consider each case of rule ap-
plication in (4). Case (4a) allows direct application of
the induction hypothesis for the substructure of smaller
height starting with a constant category. Other cases in-
volve GTRC and require sublemmas which can be proved
by induction on the length of the GTRC. Cases (46i, di)
have a differently-branching derivation in G&amp;quot; but can be
derived without simulation. Cases (46ii, c) depend on
the simulation of the previous section. Case (4dii) only
appears in sublemmas as the result category is GTRC. In
each sublemma, the induction hypothesis of Lemma 1 is
applied (mutually recursively) to handle the derivations
of the smaller substructures from a constant category.
A similar proof is applicable to the other direction.
The special cases in this direction involves the feature
</bodyText>
<sectionHeader confidence="0.998987" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999937">
We have shown that CCG-GTRC as formulated above is
weakly equivalent to CCG-Std. The results support the
use of type raising involving variables in accounting for
various linguistic phenomena. Other related results to be
reported in the future include: (i) an extension of the po-
lynomial parsing algorithm of (Vijay-Shanker and Weir,
1990) for CCG-Std to CCG-GTRC (Komagata, 1997),
(ii) application to a Japanese parser which is capable
of handling non-traditional constituents and information
structure (roughly, topic/focus structure). An extension
of the formalism is also being studied, to include lexi-
cal type raising of the form T/ (T \c) for English
prepositions/articles and Japanese particles.
</bodyText>
<sectionHeader confidence="0.999665" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99960265625">
Bach, Emmon. 1979. Control in Montague grammar. Lingui-
stic Inquiry, 10.
Carpenter, Bob. 1991. The generative power of Categorial
Grammars and Head-driven Phrase Structure Grammars with
lexical rules. Computational Linguistics, 17.
Dowty, David. 1988. Type raising, functional composition,
and non-constituent conjunction. In Richard Oehrle et al.,
editors, Categorial Grammars and Natural Language Struc-
tures. D. Reidel.
Hoffman, Beryl. 1993. The formal consequences of using
variables in CCG categories. In ACL3I
Joshi, Aravind, K. Vijay-Shanker, and David Weir. 1991. The
convergence of mildly context-sensitive grammatical forma-
lisms. In Peter Sells et al., editors, Foundational Issues in
Natural Language Processing. MIT Press, pages 31-81.
Komagata, Nobo. 1997. Efficient parsing of CCGs with genera-
lized type-raised categories. Ms. University of Pennsylvania.
Park, Jong C. 1995. Quantifier scope and constituency. In
ACL33.
Prevost, Scott and Mark Steedman. 1993. Generating contex-
tually appropriate intonation. In EACL6.
Steedman, Mark J. 1985. Dependency and coordination in the
grammar of Dutch and English. Language, 61:523-56.
Steedman, Mark. 1991. Type-raising and directionality in
Combinatory Grammar. In ACL29.
Steedman, Mark. 1996. Surface Structure and Interpretation.
MIT Press.
Vijay-Shanker, K. and David J. Weir. 1990. Polynomial time
parsing of Combinatory Categorial Grammars. In ACL28.
Vijay-Shanker, K. and D. J. Weir. 1994. The equivalence
of four extensions of context-free grammars. Mathematical
Systems Theory, 27:511.
</reference>
<page confidence="0.998367">
515
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.628487">
<title confidence="0.999847">Generative Power of CCGs with Generalized Type-Raised Categories</title>
<author confidence="0.996126">Nobo Komagata</author>
<affiliation confidence="0.9999075">Department of Computer and Information Science University of Pennsylvania</affiliation>
<address confidence="0.99938">Philadelphia, PA 19104</address>
<email confidence="0.999617">komagataglinc.cis.upenn.edu</email>
<abstract confidence="0.958755444444444">This paper shows that a class of Combinatory Categorial Grammars (CCGs) augmented with a linguistically-motivated form of type raising involving variables is weakly equivalent to the standard CCGs not involving variables. The proof is based on the idea that any instance of such a grammar can be simulated by a standard CCG.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Emmon Bach</author>
</authors>
<date>1979</date>
<booktitle>Control in Montague grammar. Linguistic Inquiry,</booktitle>
<volume>10</volume>
<contexts>
<context position="7127" citStr="Bach, 1979" startWordPosition="1223" endWordPosition="1224"> a lexical function f such that f (a) = {A, T/ (T\ A) } , f (b) = T/ (T\ A)} , f (c) = {S\A\B}. This fragment can generate the following two permutations: (5) a. a T/ (T\ A) + T/ (I\ B) + S\A\B S\A 6. b a T/ (T\B) + T/ (TVA) + S\A\B &gt;Bx S\B Notice that (50 cannot be generated by the original CCGStd where the lexicon does not involve GTRCs. In order to (statically)simulate (5b) by a CCG-Std, we add S\B\A to the value of f&amp;quot; (c) in the lexicon of G&amp;quot;. Let us call this type of relation between the original S\A\B and the new S\B wrapping, due to its resemblance to the operation of the same name in (Bach, 1979). There are two potential problems with this simple augmentation. First, wrapping may affect unboundedly long chunks of categories as exemplified in (6). Second, the simulation may overgenerate. We discuss these issues in turn. (6) &amp;quot;T/ (T \ A) +T/ (T \ B) (T \ A) +T/ (T \ B) + S\A\B...\A\B\C S\C&amp;quot; We need S\CI\A\B...\A\B , which can be the result of unboundedly-long compositions, to simulate (6) without depending on the GTRCs. Intuitively, this situation is analogous to long-distance movement of C from the position left of S\A\B ...\C to the sentence-initial position. In order to deal with the </context>
</contexts>
<marker>Bach, 1979</marker>
<rawString>Bach, Emmon. 1979. Control in Montague grammar. Linguistic Inquiry, 10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bob Carpenter</author>
</authors>
<title>The generative power of Categorial Grammars and Head-driven Phrase Structure Grammars with lexical rules.</title>
<date>1991</date>
<journal>Computational Linguistics,</journal>
<volume>17</volume>
<contexts>
<context position="2266" citStr="Carpenter, 1991" startWordPosition="339" endWordPosition="340">es while it is still weakly equivalent to CCG-Std. A class of grammars, CCGGTRC, is introduced in the next section as an extension to CCG-Std. Then we show that CCG-GTRC can actually be simulated by a CCG-Std, proving the equivalence. &apos;Thanks to Mark Steedman, Beryl Hoffman, Anoop Sarkar, and the reviewers. The research was supported in part by NSF Grant Nos. 112195-04372, STC-SBR-8920230, ARPA Grant No. N66001-94-C6043, and ARO Grant No. DAAH04-94- G0426. &apos;Our lexical rules to introduce type raising are non-recursive and thus do not suffer from the problem of the overgeneration discussed in (Carpenter, 1991). 2 CCGs with Generalized Type-Raised Categories In languages like Japanese, multiple NPs can easily form a non-traditional constituent as in &amp;quot;[(Subj Obji) &amp; (Subj2 Obj2)] Verb&amp;quot;. The proposed grammars (CCG-GTRC) admit lexical type-raised categories (LTRC) of the form T/ (T\a) or T\ (T/a) where T is a variable over categories and a is a constant category (Const).2 Then, composition of LTRCs can give rise to a class of categories having the form T/ (T\ \ al) or T\ (T/an.../a1), representing a multiple-NP constituent exemplified by &amp;quot;Subji Obi We call these categories generalized type-raised categ</context>
</contexts>
<marker>Carpenter, 1991</marker>
<rawString>Carpenter, Bob. 1991. The generative power of Categorial Grammars and Head-driven Phrase Structure Grammars with lexical rules. Computational Linguistics, 17.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Dowty</author>
</authors>
<title>Type raising, functional composition, and non-constituent conjunction.</title>
<date>1988</date>
<editor>In Richard Oehrle et al., editors,</editor>
<contexts>
<context position="958" citStr="Dowty, 1988" startWordPosition="137" endWordPosition="138"> involving variables is weakly equivalent to the standard CCGs not involving variables. The proof is based on the idea that any instance of such a grammar can be simulated by a standard CCG. 1 Introduction The class of Combinatory Categorial Grammars (CCGStd) was proved to be weakly equivalent to Linear Index Grammars and Tree Adjoining Grammars (Joshi, VijayShanker, and Weir, 1991; Vijay-Shanker and Weir, 1994). But CCG-Std cannot handle the generalization of type raising that has been used in accounting for various linguistic phenomena including: coordination and extraction (Steedman, 1985; Dowty, 1988; Steedman, 1996), prosody (Prevost and Steedman, 1993), and quantifier scope (Park, 1995). Intuitively, all of these phenomena call for a non-traditional, more flexible notion of constituency capable of representing surface structures including &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type raising involving variables can be introduced to derive such a constituent,&apos; unconstrained use of variables can increase the power. For example, a grammar involving (T \ x) /(T\y) can generate a language A&amp;quot; Bn C&apos; D&apos;En which CCG-Std cannot (Hoffman, 1993). This paper argues that there is a class of gram</context>
</contexts>
<marker>Dowty, 1988</marker>
<rawString>Dowty, David. 1988. Type raising, functional composition, and non-constituent conjunction. In Richard Oehrle et al., editors, Categorial Grammars and Natural Language Structures. D. Reidel.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Beryl Hoffman</author>
</authors>
<title>The formal consequences of using variables in CCG categories.</title>
<date>1993</date>
<booktitle>In ACL3I</booktitle>
<contexts>
<context position="1509" citStr="Hoffman, 1993" startWordPosition="220" endWordPosition="221">uding: coordination and extraction (Steedman, 1985; Dowty, 1988; Steedman, 1996), prosody (Prevost and Steedman, 1993), and quantifier scope (Park, 1995). Intuitively, all of these phenomena call for a non-traditional, more flexible notion of constituency capable of representing surface structures including &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type raising involving variables can be introduced to derive such a constituent,&apos; unconstrained use of variables can increase the power. For example, a grammar involving (T \ x) /(T\y) can generate a language A&amp;quot; Bn C&apos; D&apos;En which CCG-Std cannot (Hoffman, 1993). This paper argues that there is a class of grammars which allows the use of linguistically-motivated form of type raising involving variables while it is still weakly equivalent to CCG-Std. A class of grammars, CCGGTRC, is introduced in the next section as an extension to CCG-Std. Then we show that CCG-GTRC can actually be simulated by a CCG-Std, proving the equivalence. &apos;Thanks to Mark Steedman, Beryl Hoffman, Anoop Sarkar, and the reviewers. The research was supported in part by NSF Grant Nos. 112195-04372, STC-SBR-8920230, ARPA Grant No. N66001-94-C6043, and ARO Grant No. DAAH04-94- G0426</context>
</contexts>
<marker>Hoffman, 1993</marker>
<rawString>Hoffman, Beryl. 1993. The formal consequences of using variables in CCG categories. In ACL3I</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aravind Joshi</author>
<author>K Vijay-Shanker</author>
<author>David Weir</author>
</authors>
<title>The convergence of mildly context-sensitive grammatical formalisms.</title>
<date>1991</date>
<booktitle>Foundational Issues in Natural Language Processing.</booktitle>
<pages>31--81</pages>
<editor>In Peter Sells et al., editors,</editor>
<publisher>MIT Press,</publisher>
<marker>Joshi, Vijay-Shanker, Weir, 1991</marker>
<rawString>Joshi, Aravind, K. Vijay-Shanker, and David Weir. 1991. The convergence of mildly context-sensitive grammatical formalisms. In Peter Sells et al., editors, Foundational Issues in Natural Language Processing. MIT Press, pages 31-81.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nobo Komagata</author>
</authors>
<title>Efficient parsing of CCGs with generalized type-raised categories.</title>
<date>1997</date>
<institution>Ms. University of Pennsylvania.</institution>
<marker>Komagata, 1997</marker>
<rawString>Komagata, Nobo. 1997. Efficient parsing of CCGs with generalized type-raised categories. Ms. University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jong C Park</author>
</authors>
<title>Quantifier scope and constituency.</title>
<date>1995</date>
<booktitle>In ACL33.</booktitle>
<contexts>
<context position="1048" citStr="Park, 1995" startWordPosition="149" endWordPosition="150">e proof is based on the idea that any instance of such a grammar can be simulated by a standard CCG. 1 Introduction The class of Combinatory Categorial Grammars (CCGStd) was proved to be weakly equivalent to Linear Index Grammars and Tree Adjoining Grammars (Joshi, VijayShanker, and Weir, 1991; Vijay-Shanker and Weir, 1994). But CCG-Std cannot handle the generalization of type raising that has been used in accounting for various linguistic phenomena including: coordination and extraction (Steedman, 1985; Dowty, 1988; Steedman, 1996), prosody (Prevost and Steedman, 1993), and quantifier scope (Park, 1995). Intuitively, all of these phenomena call for a non-traditional, more flexible notion of constituency capable of representing surface structures including &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type raising involving variables can be introduced to derive such a constituent,&apos; unconstrained use of variables can increase the power. For example, a grammar involving (T \ x) /(T\y) can generate a language A&amp;quot; Bn C&apos; D&apos;En which CCG-Std cannot (Hoffman, 1993). This paper argues that there is a class of grammars which allows the use of linguistically-motivated form of type raising involving varia</context>
</contexts>
<marker>Park, 1995</marker>
<rawString>Park, Jong C. 1995. Quantifier scope and constituency. In ACL33.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Scott Prevost</author>
<author>Mark Steedman</author>
</authors>
<title>Generating contextually appropriate intonation.</title>
<date>1993</date>
<booktitle>In EACL6.</booktitle>
<contexts>
<context position="1013" citStr="Prevost and Steedman, 1993" startWordPosition="142" endWordPosition="145">nt to the standard CCGs not involving variables. The proof is based on the idea that any instance of such a grammar can be simulated by a standard CCG. 1 Introduction The class of Combinatory Categorial Grammars (CCGStd) was proved to be weakly equivalent to Linear Index Grammars and Tree Adjoining Grammars (Joshi, VijayShanker, and Weir, 1991; Vijay-Shanker and Weir, 1994). But CCG-Std cannot handle the generalization of type raising that has been used in accounting for various linguistic phenomena including: coordination and extraction (Steedman, 1985; Dowty, 1988; Steedman, 1996), prosody (Prevost and Steedman, 1993), and quantifier scope (Park, 1995). Intuitively, all of these phenomena call for a non-traditional, more flexible notion of constituency capable of representing surface structures including &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type raising involving variables can be introduced to derive such a constituent,&apos; unconstrained use of variables can increase the power. For example, a grammar involving (T \ x) /(T\y) can generate a language A&amp;quot; Bn C&apos; D&apos;En which CCG-Std cannot (Hoffman, 1993). This paper argues that there is a class of grammars which allows the use of linguistically-motivated f</context>
</contexts>
<marker>Prevost, Steedman, 1993</marker>
<rawString>Prevost, Scott and Mark Steedman. 1993. Generating contextually appropriate intonation. In EACL6.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark J Steedman</author>
</authors>
<title>Dependency and coordination in the grammar of Dutch</title>
<date>1985</date>
<pages>61--523</pages>
<contexts>
<context position="945" citStr="Steedman, 1985" startWordPosition="135" endWordPosition="136"> of type raising involving variables is weakly equivalent to the standard CCGs not involving variables. The proof is based on the idea that any instance of such a grammar can be simulated by a standard CCG. 1 Introduction The class of Combinatory Categorial Grammars (CCGStd) was proved to be weakly equivalent to Linear Index Grammars and Tree Adjoining Grammars (Joshi, VijayShanker, and Weir, 1991; Vijay-Shanker and Weir, 1994). But CCG-Std cannot handle the generalization of type raising that has been used in accounting for various linguistic phenomena including: coordination and extraction (Steedman, 1985; Dowty, 1988; Steedman, 1996), prosody (Prevost and Steedman, 1993), and quantifier scope (Park, 1995). Intuitively, all of these phenomena call for a non-traditional, more flexible notion of constituency capable of representing surface structures including &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type raising involving variables can be introduced to derive such a constituent,&apos; unconstrained use of variables can increase the power. For example, a grammar involving (T \ x) /(T\y) can generate a language A&amp;quot; Bn C&apos; D&apos;En which CCG-Std cannot (Hoffman, 1993). This paper argues that there is a </context>
</contexts>
<marker>Steedman, 1985</marker>
<rawString>Steedman, Mark J. 1985. Dependency and coordination in the grammar of Dutch and English. Language, 61:523-56.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Type-raising and directionality in Combinatory Grammar.</title>
<date>1991</date>
<booktitle>In ACL29.</booktitle>
<contexts>
<context position="3405" citStr="Steedman, 1991" startWordPosition="516" endWordPosition="517">plified by &amp;quot;Subji Obi We call these categories generalized type-raised categories (GTRC) and each a; of a GTRC an argument (of the GTRC). The introduction of GTRCs affects the use of combinatory rules: functional application &amp;quot;&gt;: xly + y x&amp;quot; and generalized functional composition &amp;quot;&gt;B&apos; (x) x y + ylz,...lzk iz,...lzk&amp;quot; where k is bounded by a grammar-dependent kniaz as in CCG-Std.3 This paper assumes two constraints defined for the grammars and one condition stipulated to control the formal properties. The following order-preserving constraint, which follows more primitive directionality features (Steedman, 1991), limits the directions of the slashes in GTRCs. (1) In a GTRC Tjo (lion—kat), the direction of lo must be the opposite to any of In , This prohibits functional composition `&gt;Bx &apos; on `GTRC+GTRC&apos; pairs so that &amp;quot;T/ (T\ A \ B) U\ (U/C/D)&amp;quot; does not result in T\ (T\A\B/C/D) or U/ (U/C/D\A\B). That is, no movement of arguments across the functor is allowed. The variable constraint states that: (2) Variables are limited to the defined positions in GTRCs. This prohibits &gt;Bk () &apos; with k &gt; 1 on the pair &apos;Categories are in the &amp;quot;result-leftmost&amp;quot; representation and associate left. Thus alblc should be read</context>
</contexts>
<marker>Steedman, 1991</marker>
<rawString>Steedman, Mark. 1991. Type-raising and directionality in Combinatory Grammar. In ACL29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Surface Structure and Interpretation.</title>
<date>1996</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="975" citStr="Steedman, 1996" startWordPosition="139" endWordPosition="140">riables is weakly equivalent to the standard CCGs not involving variables. The proof is based on the idea that any instance of such a grammar can be simulated by a standard CCG. 1 Introduction The class of Combinatory Categorial Grammars (CCGStd) was proved to be weakly equivalent to Linear Index Grammars and Tree Adjoining Grammars (Joshi, VijayShanker, and Weir, 1991; Vijay-Shanker and Weir, 1994). But CCG-Std cannot handle the generalization of type raising that has been used in accounting for various linguistic phenomena including: coordination and extraction (Steedman, 1985; Dowty, 1988; Steedman, 1996), prosody (Prevost and Steedman, 1993), and quantifier scope (Park, 1995). Intuitively, all of these phenomena call for a non-traditional, more flexible notion of constituency capable of representing surface structures including &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type raising involving variables can be introduced to derive such a constituent,&apos; unconstrained use of variables can increase the power. For example, a grammar involving (T \ x) /(T\y) can generate a language A&amp;quot; Bn C&apos; D&apos;En which CCG-Std cannot (Hoffman, 1993). This paper argues that there is a class of grammars which allows</context>
</contexts>
<marker>Steedman, 1996</marker>
<rawString>Steedman, Mark. 1996. Surface Structure and Interpretation. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>David J Weir</author>
</authors>
<title>Polynomial time parsing of Combinatory Categorial Grammars.</title>
<date>1990</date>
<booktitle>In ACL28.</booktitle>
<marker>Vijay-Shanker, Weir, 1990</marker>
<rawString>Vijay-Shanker, K. and David J. Weir. 1990. Polynomial time parsing of Combinatory Categorial Grammars. In ACL28.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>D J Weir</author>
</authors>
<title>The equivalence of four extensions of context-free grammars.</title>
<date>1994</date>
<booktitle>Mathematical Systems Theory,</booktitle>
<pages>27--511</pages>
<contexts>
<context position="762" citStr="Vijay-Shanker and Weir, 1994" startWordPosition="106" endWordPosition="109">ity of Pennsylvania Philadelphia, PA 19104 komagataglinc.cis.upenn.edu Abstract This paper shows that a class of Combinatory Categorial Grammars (CCGs) augmented with a linguistically-motivated form of type raising involving variables is weakly equivalent to the standard CCGs not involving variables. The proof is based on the idea that any instance of such a grammar can be simulated by a standard CCG. 1 Introduction The class of Combinatory Categorial Grammars (CCGStd) was proved to be weakly equivalent to Linear Index Grammars and Tree Adjoining Grammars (Joshi, VijayShanker, and Weir, 1991; Vijay-Shanker and Weir, 1994). But CCG-Std cannot handle the generalization of type raising that has been used in accounting for various linguistic phenomena including: coordination and extraction (Steedman, 1985; Dowty, 1988; Steedman, 1996), prosody (Prevost and Steedman, 1993), and quantifier scope (Park, 1995). Intuitively, all of these phenomena call for a non-traditional, more flexible notion of constituency capable of representing surface structures including &amp;quot;(Subj V) (Obj)&amp;quot; in English. Although lexical type raising involving variables can be introduced to derive such a constituent,&apos; unconstrained use of variables</context>
</contexts>
<marker>Vijay-Shanker, Weir, 1994</marker>
<rawString>Vijay-Shanker, K. and D. J. Weir. 1994. The equivalence of four extensions of context-free grammars. Mathematical Systems Theory, 27:511.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>