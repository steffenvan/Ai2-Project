<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000004">
<title confidence="0.9885715">
Multilingual Grammar Resources in Multilingual Application
Development
</title>
<author confidence="0.368545">
Marianne Santaholma
</author>
<affiliation confidence="0.306116">
Geneva University, ETI/TIM/ISSCO
</affiliation>
<address confidence="0.594952">
40, bvd du Pont-d’Arve
1211 Geneva 4, Switzerland
</address>
<email confidence="0.994715">
Marianne.Santaholma@eti.unige.ch
</email>
<sectionHeader confidence="0.997318" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999967909090909">
Grammar development makes up a large
part of the multilingual rule-based appli-
cation development cycle. One way to
decrease the required grammar develop-
ment efforts is to base the systems on
multilingual grammar resources. This pa-
per presents a detailed description of a
parametrization mechanism used for build-
ing multilingual grammar rules. We show
how these rules, which had originally been
designed and developed for typologically
different languages (English, Japanese and
Finnish) are applied to a new language
(Greek). The developed shared grammar
system has been implemented for a do-
main specific speech-to-speech translation
application. A majority of these rules
(54%) are shared amongst the four lan-
guages, 75% of the rules are shared for at
least two languages. The main benefit of
the described approach is shorter develop-
ment cycles for new system languages.
</bodyText>
<sectionHeader confidence="0.999471" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99969275">
Most of grammar based applications are built on
monolingual grammars. However, it is not unusual
that the same application is deployed for more
than one language. For these types of systems the
monolingual grammar approach is clearly not the
best choice, since similar grammar rules are writ-
ten several times, which increases overall develop-
ment efforts and makes maintenance laborious.
</bodyText>
<note confidence="0.645075">
© 2008. Licensed under the Creative Commons
</note>
<footnote confidence="0.795503666666667">
Attribution-Noncommercial-Share Alike 3.0 Unported li-
cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).
Some rights reserved.
</footnote>
<bodyText confidence="0.999901605263158">
One way to decrease these efforts is to share al-
ready developed linguistic resources between sys-
tem languages. Common approaches for shar-
ing information include grammar adaptation and
grammar sharing. Grammar adaptation is the tech-
nique of modifying an already existing grammar to
cover a new language as implemented among oth-
ers by Alshawi et al. 1992; Kim et al. 2003; and
Santaholma, 2005.
In grammar sharing, existing grammar rules are
directly shared between languages rather than just
being recycled as they are in grammar adapta-
tion. Compared to both the monolingual grammar
approach and the grammar adaptation approach,
grammar sharing reduces the amount of code that
needs to be written as the central rules are writ-
ten only once. This automatically leads to coher-
ence between language descriptions for different
languages, which improves grammar maintainabil-
ity, and eliminates the duplication effort that other-
wise occurs when monolingual grammars are used.
Multilingual grammars can share resources be-
tween languages in various ways. Ranta (2007)
has developed an abstract syntax that defines a
common semantic representation in a multilingual
grammar.
Another type of approach is implemented in
the LinGO Grammar Matrix project (Bender et al.
2005; Bender, 2007). The Grammar Matrix con-
sists of a core grammar that contains the types and
constraints that are regarded as cross-linguistically
useful. This core is further linked to phenomenon-
specific libraries. These consist of rule reperto-
ries based on typological categories. The neces-
sary modules are put together like building blocks
according to language characteristics to form the
final grammar of a language.
The work described in this paper implements
</bodyText>
<page confidence="0.979484">
25
</page>
<note confidence="0.849753">
Coling 2008: Proceedings of the workshop on Grammar Engineering Across Frameworks, pages 25–32
Manchester, August 2008
</note>
<bodyText confidence="0.999800604166667">
a grammar sharing approach that is based on
language-independent parameterized rules that are
complemented with necessary language-specific
rules and features. These shared rules have been
implemented for MedSLT, a multilingual spoken
language translation system (Bouillon et al., 2005).
All of the central language processing compo-
nents of MedSLT, including the speech recog-
nizer, parser and generator, are derived from hand-
crafted general grammars of a language. The
biggest effort in adding a new language to the ex-
isting spoken language translation framework is
the grammar development cycle. As more lan-
guages are added to the existing spoken language
translation framework, the necessity for multilin-
gual grammar rules grows.
(Bouillon et al., 2006) first developed shared
MedSLT grammar rules for the Romance lan-
guages French, Spanish and Catalan. Compared
to the monolingual grammar system, the shared
grammar-based system facilitated application de-
velopment without degrading the performance of
any of its components (speech recognition, trans-
lation) on these languages.
We took this approach further and implemented
parameterized grammar rules for typologically dif-
ferent languages - English, Finnish and Japanese.
Experiments have shown that these shared rules
perform equally well on all three languages (San-
taholma, 2007). As these grammars had been de-
veloped in parallel, it was not clear how flexi-
ble the parameterized grammar approach would
be for new a language, which was not included
in the original development process. We thus ex-
tended the grammar to cover Modern Greek as a
new language. The paper describes the methodol-
ogy of adding this new language and evaluates the
parametrization mechanism.
The rest of the paper is structured as follows.
Section 2 describes the Regulus toolkit (Rayner
et al., 2006) and MedSLT, which form the devel-
opment environment and application framework
on which this work is based. Section 3 de-
scribes the parameterized multilingual grammar
and parametrization mechanism. Section 4 sum-
marizes techniques used to adding Modern Greek
to the shared grammar system. Section 5 con-
cludes.
</bodyText>
<sectionHeader confidence="0.991452" genericHeader="method">
2 Regulus Development environment and
MedSLT application
</sectionHeader>
<subsectionHeader confidence="0.998783">
2.1 Regulus features
</subsectionHeader>
<bodyText confidence="0.999920457142857">
The Regulus grammar framework has been de-
signed for spoken language grammars, and thus
differs from popular grammar frameworks like
Lexical Functional Grammar (LFG) (Bresnan and
Kaplan, 1985) and Head-driven Phrase Structure
Grammar (HSPG) (Pollard and Sag, 1994). Reg-
ulus grammars are written with a feature-grammar
formalism that can easily be compiled into context
free grammars (CFG). These are required for com-
pilation of grammar-based language models used
in speech recognition. Characteristic for Regulus
grammars are finite valued features and exclusion
of complex feature-value structures. Consequently
the resulting rule-sets are perhaps more repeti-
tive and less elegant than the equivalent LFGs or
HPSGs. This design, however, enables compila-
tion of non-trivial feature-grammars to CFG.
Another Regulus feature that enables CFG com-
pilation is grammar specialization that reduces the
extent of the grammar. Grammar specialization
is performed by explanation-based learning (EBL)
1. Multilingual grammar development can profit
from grammar specialization in various ways. The
general grammar of a language can be specialized
to specific domains based on domain specific in-
formation2. Thus the specialization serves as a
way to limit the ambiguities typical for general
grammars. Furthermore, the procedure is used to
specialize the grammars for different tasks. Ideally
a grammar should recognize variant forms but gen-
erate only one. This variation can be controlled by
specializing the Regulus grammars for these tasks.
Finally the multilingual Regulus grammar can be
specialized for specific languages by automatically
removing the unnecessary rules.
</bodyText>
<subsectionHeader confidence="0.990849">
2.2 MedSLT
</subsectionHeader>
<bodyText confidence="0.999768166666667">
Most large-scale machine translation systems are
currently based on statistical language processing.
MedSLT, however, has been implemented with lin-
guistically motivated grammars mainly for the fol-
lowing reasons: (1) necessary data for inducing
the grammars and training the statistical language
</bodyText>
<footnote confidence="0.8542152">
1The method is described in detail in (Rayner et al., 2006),
Chapter 10.
2These include domain specific corpus, lexica and oper-
ationality criteria that control the granularity of specialized
grammar. Details provided by (Rayner et al., 2006).
</footnote>
<page confidence="0.996061">
26
</page>
<bodyText confidence="0.9999826">
models were not available for the required domain
and languages. (2) the medical domain demands
accurate translation performance, which can be
more easily guaranteed with rule based systems.
MedSLT is an unidirectional3 speech-to-speech
translation system that has been designed to help
in emergency situations where a common lan-
guage between the physician and the patient does
not exist. In addition to influencing the system
architecture, this communication goal also sig-
nificantly influences system coverage, and con-
sequently the grammars. The typical utterances
MedSLT translates consist of physician’s questions
about the intensity, location, duration and qual-
ity of pain, factors that increase and decrease the
pain, therapeutic processes and the family history
of the patient. These include yes-no questions like
“Does it hurt in the morning?”, “Is the pain stub-
bing?” and “Do you have fever when you have
the headaches?”. Other frequent type of questions
include wh-questions followed by elliptical utter-
ance, like “Where is the pain?”, “In the front of the
head?”, “On both sides of the head?”. Currently
MedSLT translates between Arabic, Catalan, En-
glish, Finnish, French, Japanese, and Spanish. The
translation is interlingua based.
The following sections describe the implemen-
tation of the shared parameterized grammar rules
for this specific application using the Regulus plat-
form.
</bodyText>
<sectionHeader confidence="0.943015" genericHeader="method">
3 Parameterized grammar rules
</sectionHeader>
<bodyText confidence="0.94841259375">
The parameterized grammar rules assemble the
common foundations of linguistic phenomena in
different languages. The framework for the
language-independent rules presented here was de-
veloped and tested with English, Japanese and
Finnish. These languages represent different types
of languages and hence express the same linguistic
phenomena in different ways. Consequently they
provided a good starting point for framework de-
sign.
The Regulus multilingual grammar is modular
and organized hierarchically. Parameterized rules
are stored in the “language-independent core”
module. This is the most generic level and as such
is shared between all languages. The “lower lev-
els” include the language-family specific modules
3Bidirectional MedSLT exists currently for English-
Spanish language pair. Details are provided in (Bouillon et
al., 2007).
and the language-specific modules. The modules
for related languages decrease redundancy as re-
lated languages commonly share characteristics at
least to some extent. 4 The information in this
modular structure is inherited top-down from the
most generic to language specific.
The first language to which we applied the pa-
rameterized rules and which had not been part of
the original shared grammar framework develop-
ment is Modern Greek.
In the following we first describe the parameter-
ized grammar rules. Then we focus on how these
rules are applied for Greek.
</bodyText>
<subsectionHeader confidence="0.998001">
3.1 Coverage
</subsectionHeader>
<bodyText confidence="0.99943325">
The parameterized grammar currently covers basic
linguistic phenomena by focusing on the structures
required to process MedSLT system coverage. The
current coverage is summarized in Table 1.
</bodyText>
<table confidence="0.870828826086957">
Phenomena Construction
Sentence types declarative, yn-question,
wh-question, ellipsis
subordinate when clause
Tense present, past(imperfect)
Voice active, passive
Aspect continuous,
present perfect,
past perfect
Verb transitive, intransitive,
subcategorization predicative (be+adj),
existential (there+be+np)
Determiners article, number,
quantifier
Adpositional prepositional,
modifiers postpositional
Adverbial modifiers verb and sentence
modifying adverbs,
comparison adverbs
Pronouns personal, possessive,
dummy pronouns
Adjective modifiers predicative, attributive,
comparison
</table>
<tableCaption confidence="0.941241">
Table 1: Linguistic phenomena covered by the
shared grammar.
</tableCaption>
<bodyText confidence="0.7576712">
The general difficulty of spoken language for
grammar development is frequent ungrammatical
4However, as identical constructions and features also ex-
ist in unrelated languages the advantage of language family
modules is finally not so significant.
</bodyText>
<page confidence="0.99297">
27
</page>
<bodyText confidence="0.999212666666667">
and non-standard use of language. This includes
for example incorrect use of case inflections in
Finnish and missing particles in spoken Japanese.
</bodyText>
<subsectionHeader confidence="0.71539">
3.2 Parametrization - abstracting away from
</subsectionHeader>
<bodyText confidence="0.9951356">
language specific details
The parametrization aims to generalize the cross-
linguistic variation in grammar rules. English
yes-no questions require an auxiliary and in-
verted word order, in Finnish yes-no questions the
subject-verb inversion is combined with a certain
form of the main verb; in Finnish noun heads and
the modifying adjective agree in case and number,
in Greek they additionally agree in gender, and so
forth. The way of expressing the same linguistic
phenomena or constructions varies from one lan-
guage to another. Hence, shared grammar rules
need to abstract away from these kinds of details.
The multilingual Regulus rules are parameter-
ized using macro declarations. Macros are a stan-
dard tool in many development environments. In
Regulus grammars they are extensively used to
catch generalizations in the rules, and in partic-
ular in lexica. In multilingual grammar rules the
macros serve as “links” towards language-specific
information.
The shared rules have a language-neutral sur-
face representation where macros invoke the re-
quired language-specific information. The macro
reference of a language-independent rule is re-
placed by the information contained in the macro
definition. The context of the macro reference de-
termines how the macro definition combines with
other parts of the description. The mechanism is
similar to LFG ‘templates’, which encode linguis-
tic generalizations in a language description (Dal-
rymple et al., 2004).
The macro mechanism itself is rather simple.
The crucial is that the macros are defined in a trans-
parent and coherent way. Otherwise the grammar
developer will spend more time learning to how
to use the parameterized rule set than she would
spend to develop a new grammar from scratch.
When the macros are well defined, sharing the
rules for a new language is just a matter of defining
the language-specific macro definitions.
In the following we present some concrete ex-
amples of how cross-linguistic variation can be pa-
rameterized in a multilingual Regulus grammar us-
ing macros.
</bodyText>
<subsectionHeader confidence="0.769754">
3.2.1 Parameterizing features
</subsectionHeader>
<bodyText confidence="0.902506863636364">
The following example shows how we param-
eterize the previously mentioned agreement fea-
tures required in different languages. In Regu-
lus grammars, like in other constraint-based gram-
mars, this fine-grained information is encoded in
feature-value pairs. We encode a basic declara-
tive sentence rule (s) that consists of a noun phrase
(np) and a verb phrase (vp):
s:[sem=concat(Np, Vp)] --&gt;
np:[sem=Np, sem_np_type=T,
@noun_head_features(Head)],
vp:[sem=Vp, subj_sem_np_type=T,
@verb_head_features(Head)].
In Finnish sentences the subject and the main
verb agree in person and number. Japanese doesn’t
make use of these agreement features in this con-
text. Consequently, the common rules have to ex-
press the agreement in a parameterized way. For
this reason in the np we introduce a macro called
noun_head_features(Head) and in the vp
the macro verb_head_features(Head). 5
These macro declarations unify but don’t say any-
thing explicit about the unifying features them-
selves at this common level. The macros thus
“neutralize” the language-specific variation and
only point further down to language-specific infor-
mation.
In Finnish, the noun_head_features and
verb_head_features macros invoke the lan-
guage specific features ‘number’ and ‘person’:
macro
(noun_head_features([P, N]),
[person=P, number=N]).
macro
(verb_head_features(([P, N]),
[person=P, number=N]).
The macro references are replaced by these fea-
tures in the final Finnish declarative sentence rule
which takes the form:
s:[sem=concat(Np, Vp)] --&gt;
np:[sem=Np, sem_np_type=T,
person=P, number=N],
vp:[sem=Vp, subj_sem_np_type=T,
person=P, number=N].
</bodyText>
<footnote confidence="0.956484">
5The Regulus macro declaration is preceded by ’@’.
</footnote>
<page confidence="0.998743">
28
</page>
<bodyText confidence="0.973442538461538">
As Japanese does not apply either ‘number’ or
‘person’ features the macro definition consists of
an empty value:
macro(noun_head_features([]),
[]).
The final Japanese sentence rule takes after the
macro replacement the form:
s:[sem=concat(Np, Vp)] --&gt;
np:[sem=Np, sem_np_type=T],
vp:[sem=Vp, subj_sem_np_type=T].
Similarly we can parameterize the value of
a specific feature. A vp could include a
verb_form feature that in English could take as
its value “gerundive” and in Finnish “infinite” in
that particular context. We can parameterize the
vp rule with a macro vform which invokes the
language-specific macro definition and replaces it
with the corresponding language-specific feature-
value pairs:
vp:[sem=concat(Aux, Vp)] --&gt;
aux:[sem=Aux,@aux_features(Head)],
vp:[sem=Vp,
@vform(Vform),
@verb_head_features(Head)].
The English macro definition would be:
macro(vform(Vform),
[verb_form=gerund,
verb_form=Vform]).
The Finnish equivalent:
macro(vform(Vform),
[verb_form=finite,
verb_form=Vform]).
Macros can furthermore refer to other macro
definitions and in this way represent inclu-
sion relations between different features. This
forms a multilevel macro hierarchy. The macro
noun_head_features(Head) included in
np rule (1) could contain a macro arg (2), that
would further be defined by (3):
</bodyText>
<figure confidence="0.4308275">
1)
np:[sem=Np, sem_np_type=SemType,
@noun_head_features(Head)].
3)
macro(agr([Case, Number]),
[case=Case, number=Number]).
</figure>
<subsectionHeader confidence="0.945229">
3.2.2 Parameterizing the constituent order
</subsectionHeader>
<bodyText confidence="0.993857289473684">
The constituent order is defined by concate-
nation of linguistic categories in the wanted or-
der (vp:[sem=concat(Verb, NP)]). This
order can, similarly to features, also be parameter-
ized by using macros. We show here as an example
of how the order of a transitive main verb (verb)
and direct object (np) is parameterized in a verb
phrase:
vp:[sem=concat(Verb, NP)] --&gt;
verb:[sem=Verb, subcat=transitive,
obj_sem_np_type=ObjType],
np:[sem=NP, sem_np_type=ObjType]).
In English the direct object follows the verb,
whereas in Japanese it precedes the verb. The
order of these constituents can be parame-
terized by introducing into the rule a macro
that in the example rule is represented by
‘verb_transitive_np’:
vp:[sem=concat(Verb, NP)] --&gt;
@verb_transitive_np(
verb:[sem=Verb, subcat=transitive,
obj_sem_np_type=ObjType],
np:[sem=NP, sem_np_type=ObjType]).
This macro invokes the language-specific rules that
define the order of the semantic values of cate-
gories required in a specific language. The seman-
tic value of the category verb is sem=Verb and
of noun sem=Noun. Consequently the English-
specific macro definition would be:
macro(verb_transitive_np
(Verb, Noun),(Verb, Noun)).
This rule specifies that when there is a seman-
tic value ‘Verb’ followed by a semantic value
‘Noun’ these should be processed in the order
‘Verb’, ‘Noun’. The order of constituents re-
mains unchanged.
The equivalent Japanese macro definition would
be:
</bodyText>
<footnote confidence="0.698802666666667">
2) macro(verb_transitive_np
macro(noun_head_features([Agr,Case]),(Verb, Noun),(Noun, Verb)).
[@agr(Agr), case=Case]).
</footnote>
<page confidence="0.998718">
29
</page>
<bodyText confidence="0.999277857142857">
Contrary to the English rule this rule specifies that
when there is a semantic value ‘Verb’ followed
by a semantic value ‘Noun’ these should be pro-
cessed in the order ‘Noun’, ‘Verb’. This changes
the order the of constituents. Details of Regulus
semantic processing are available in Rayner et al.,
2006.
</bodyText>
<subsectionHeader confidence="0.8119525">
3.2.3 Ignoring rules/features and using empty
values
</subsectionHeader>
<bodyText confidence="0.999198777777778">
There exist several ways to ignore rules and
features or to introduce empty values in Regulus
grammars. These have proven practical in rule
parametrization. In the following we present some
frequent examples.
Features that are irrelevant for a particular lan-
guage (in a particular context) can take ‘empty’
([]) as their value. This can be encoded in sev-
eral ways.
</bodyText>
<listItem confidence="0.973841">
• Macro takes an empty value. This is encoded
by ‘[]’
</listItem>
<bodyText confidence="0.585396">
Example:
macro(noun_head_features([]),
[]).
</bodyText>
<listItem confidence="0.998869">
• Feature takes an empty value. This is encoded
by ‘_’:
</listItem>
<bodyText confidence="0.964214535714286">
Example:
macro(premod_case(Case),
[case=_]).
Rules that are applied to only one language are
organized in the language-specific modules. How-
ever most of the rules are necessary for two or
more languages. The rules that are used for groups
of specific languages can be ‘tagged’ using macro
declarations. For example a rule or feature that
is valid for English and Japanese could be simply
tagged with an identifier macro ‘eng jap’:
@eng_jap
(‘rule_body_here’).
The English and Japanese rules would call the rule
body by macro definition:
macro(eng_jap(Body), (Body).
The Finnish language-specific macro definition
would call an empty category that we call here
‘dummy cat’ and the rule would be ignored:
macro(eng_jap(Body),
(dummy_cat:[] --&gt; dummy)).
Specialization of a grammar for a specific lan-
guage and into domain-specific form checks which
rules are necessary for processing the domain
specific-coverage in that particular language. Con-
sequently empty features of the general grammar
are automatically ignored and the language pro-
cessing remains efficient.
</bodyText>
<sectionHeader confidence="0.8465045" genericHeader="method">
4 Processing Modern Greek with shared
parameterized grammar rules
</sectionHeader>
<bodyText confidence="0.999917473684211">
Cross-linguistic comparison shows that the Greek
that belongs to the Indo-European language family
does not only share some features with English but
also with Japanese and Finnish. Common with En-
glish is, for example, the use of prepositions and
articles, and with Finnish and Japanese the pro-
drop.
The development of Greek grammar cover-
age equivalent to those of English, Japanese and
Finnish coverage in MedSLT took about two
weeks. For most part only the language-specific
macro definitions needed to be specified. Five new
rules were developed from scratch. The most sig-
nificant part of the development consisted of build-
ing the Greek lexicon and verifying that the anal-
yses produced by the shared grammar rules were
correct.
In the following we summarize Greek-specific
rules, features and macros.
</bodyText>
<subsectionHeader confidence="0.998797">
4.1 Greek rules and features
</subsectionHeader>
<bodyText confidence="0.994438375">
In general, Greek word order is flexible, es-
pecially in spoken language. All permutations
of ordering of subject, object, and verb can be
found, though the language shows a preference
for Subject-Verb-Object ordering in neutral con-
texts. New parametrized constituent orders were
the most significant additions to the multilingual
grammar. These are listed below.
1. Yes-no questions, which are a central part of
the MedSLT application’s coverage, can be
expressed by both direct and indirect con-
stituent order in Greek. As these are both
common in spoken language, the Japanese
question rule (direct constituent order + ques-
tion particle ’ka’) was parameterized for
Greek.
</bodyText>
<page confidence="0.993847">
30
</page>
<bodyText confidence="0.995901096774193">
2. The order of possessive pronoun and head
noun required parametrization. Until now
the shared grammar contained only the order
where a head noun is preceded by the pos-
sessive. In Greek the opposite order is used,
with the possessive following the head noun.
The existing rule was parameterized by a new
macro.
3. Similar parameterization was performed for
verb phrases including an indirect object. The
Greek constituent order is reversed relative to
English order. That is, the pronoun goes be-
fore the verb. A new macro was introduced to
parameterize the rule.
One main area of difference compared to En-
glish/Finnish/Japanese, is in the placement of
weak pronouns, generally referred to as ‘clitics’.
Their position in Greek is relative to the verb.
In standard language they are placed before finite
verbs and after infinite verbs. Thus these weak pro-
nouns can occur in sentence-initial position. New
rules were developed to process these clitics as
well as the Greek genitive post-modifier structure.
Greek could mainly use the existing grammar
features. The difference, compared to the origi-
nal three languages, was in the extensive use of the
‘gender’ feature (possible values: feminine, mas-
culine and neuter). For example, Greek articles
agree with the head noun in gender, number, and
case. Furthermore, prepositions agree with the fol-
lowing nouns in gender, number and case.
</bodyText>
<subsectionHeader confidence="0.996629">
4.2 Summary of multilingual rules
</subsectionHeader>
<bodyText confidence="0.999837">
Table 2 summarizes current use of the multilingual
rules. The grammar includes a total of 80 rules
for English, Finnish, Japanese and Greek. 54%
of the rules are shared between all four languages
and 75% of the rules are shared between two or
more languages. Not everything can be parameter-
ized, and some language-specific rules are neces-
sary. The language-specific rules cover 25% of all
rules.
</bodyText>
<sectionHeader confidence="0.999632" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.99976">
We have described a shared grammar approach
for multilingual application development. The de-
scribed approach is based on parametrization of
Regulus grammar rules using macros. We have
shown that these parameterized rules can with
comparably little effort be used for a new system
</bodyText>
<table confidence="0.98816615">
Languages N. of rules % of total
Eng + Fin + Jap + Gre 43 54%
Eng + Fin + Jap 0
Eng + Fin + Gre 4
Eng + Jap + Gre 0
Fin + Jap + Gre 6
TOTAL 10 12.5%
Fin + Jap 3
Eng + Fin 1
Eng + Jap 1
Gre + Eng 1
Gre + Jap 1
Gre + Fin 0
TOTAL 7 8.75%
Eng 9
Fin 0
Jap 6
Gre 5
TOTAL 20 25%
TOTAL 80 100%
</table>
<tableCaption confidence="0.998484">
Table 2: Grammar rules in total
</tableCaption>
<bodyText confidence="0.99990425">
language in a multilingual limited-domain appli-
cation. A majority of rules were shared between
all implemented languages and 75% of rules by at
least two languages. The deployment of a new lan-
guage was mainly based on already existing rules.
The shared grammar approach promotes consis-
tency across all system languages, effectively in-
creasing maintainability.
</bodyText>
<sectionHeader confidence="0.979916" genericHeader="acknowledgments">
Acknowledgement
</sectionHeader>
<bodyText confidence="0.99972025">
I would like to thank Pierrette Bouillon and Manny
Rayner for their advise, and Agnes Lisowska and
Nikos Chatzichrisafis for their suggestions and En-
glish corrections.
</bodyText>
<sectionHeader confidence="0.999227" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999231">
Bender, Emily and Dan Flickinger. 2005. Rapid Pro-
totyping of Scalable Grammars: Towards Modular-
ity in Extensions to a Language-Independent Core.
In: Proceedings of the 2nd International Joint Con-
ference on Natural Language Processing IJCNLP-05
(Posters/Demos), Jeju Island, Korea.
Bender, Emily. 2007. Combining Research and
Pedagogy in the Development of a Crosslinguis-
tic Grammar Resource. In: Proceedings of the
workshop Grammar Engineering across Frameworks
2007, Stanford University.
</reference>
<page confidence="0.997662">
31
</page>
<reference confidence="0.999835885245902">
Bouillon, Pierrette, Manny Rayner, Nikos
Chatzichrisafis, Beth Ann Hockey, Marianne
Santaholma, Marianne Starlander, Yukie Nakao,
Kyoko Kanzaki, Hitoshi Isahara. 2005. A generic
multilingual open source platform for limited-
domain medical speech translation. In: Proceedings
of the 10th Conference of the European Associa-
tion for Machine Translation, EAMT, Budapest,
Hungary.
Bouillon, Pierrette, Manny Rayner, Bruna Novellas
Vall, Marianne Starlander, Marianne Santaholma,
Nikos Chatzichrisafis. 2007. Une grammaire
partage multi-tache pour le traitement de la parole
: application aux langues romanes. TAL (Traitement
Automatique des Langues), Volume 47, 2006/3.
Bouillon, Pierrette, Glenn Flores, Marianne Starlan-
der, Nikos Chatzichrisafis, Marianne Santaholma,
Nikos Tsourakis, Manny Rayner, Beth Ann Hockey.
2007. A Bidirectional Grammar-Based Medical
Speech Translator. In: Proceedings of workshop on
Grammar-based approaches to spoken language pro-
cessing, ACL 2007, June 29, Prague, Czech Repub-
lic.
Bresnan, Joan and Ronald Kaplan. 1985. The mental
representation of grammatical relations. MIT Press,
Cambridge, MA.
Butt, Miriam, Helge Dyvik, Tracy Holloway King, Hi-
roshi Masuichi, and Christian Rohrer. 2002. The
Parallel Grammar Project. In: Proceedings of
COLING-2002 Workshop on Grammar Engineering
and Evaluation.
Dalrymple, Mary, Ron Kaplan, and Tracy Holloway
King. 2004. Linguistics Generalizations over De-
scriptions. In M. Butt and T.H. King (ed.) Proceed-
ings of the LFG04 Conference.
Kim, Roger, Mary Dalrymple, Ronald M. Kaplan,
Tracy Holloway King, Hiroshi Masuichi, Tomoko
Ohkuma. 2003. Language Multilingual Grammar
Development via Grammar Porting. In: Proceedings
of the ESSLLI Workshop on Ideas and Strategies for
Multilingual Grammar Development, Vienna, Aus-
tria.
Pollard, Carl and Ivan Sag. 1994. Head Driven Phrase
Structure Grammar. University of Chicago Press,
Chicago.
Ranta, Aarne. 2007. Modular Grammar Engineering in
GF. Research on Language and Computation, Vol-
ume 5, 2/2007, 133–158.
Rayner, Manny, Beth Ann Hockey, Pierrette Bouillon.
2006. Regulus-Putting linguistics into speech recog-
nition. CSLI publications, California, USA.
Santaholma, Marianne. 2005. Linguistic representa-
tion of Finnish in a limited domain speech-to-speech
translation system. In: Proceedings of the 10th Con-
ference on European Association of Machine Trans-
lation, Budapest, Hungary.
Santaholma, Marianne. 2007. Grammar sharing tech-
niques for rule-based multilingual NLP systems. In:
Proceedings of NODALIDA 2007, the 16th Nordic
Conference of Computational Linguistics, Tartu, Es-
tonia.
</reference>
<page confidence="0.999298">
32
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.533435">
<title confidence="0.9739995">Multilingual Grammar Resources in Multilingual Development</title>
<author confidence="0.912754">Marianne</author>
<affiliation confidence="0.999858">Geneva University,</affiliation>
<address confidence="0.7946905">40, bvd du 1211 Geneva 4,</address>
<email confidence="0.846823">Marianne.Santaholma@eti.unige.ch</email>
<abstract confidence="0.999475391304348">Grammar development makes up a large part of the multilingual rule-based application development cycle. One way to decrease the required grammar development efforts is to base the systems on multilingual grammar resources. This paper presents a detailed description of a parametrization mechanism used for building multilingual grammar rules. We show how these rules, which had originally been designed and developed for typologically different languages (English, Japanese and Finnish) are applied to a new language (Greek). The developed shared grammar system has been implemented for a domain specific speech-to-speech translation application. A majority of these rules (54%) are shared amongst the four languages, 75% of the rules are shared for at least two languages. The main benefit of the described approach is shorter development cycles for new system languages.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Emily Bender</author>
<author>Dan Flickinger</author>
</authors>
<title>Rapid Prototyping of Scalable Grammars: Towards Modularity in Extensions to a Language-Independent Core. In:</title>
<date>2005</date>
<booktitle>Proceedings of the 2nd International Joint Conference on Natural Language Processing IJCNLP-05 (Posters/Demos),</booktitle>
<location>Jeju Island,</location>
<marker>Bender, Flickinger, 2005</marker>
<rawString>Bender, Emily and Dan Flickinger. 2005. Rapid Prototyping of Scalable Grammars: Towards Modularity in Extensions to a Language-Independent Core. In: Proceedings of the 2nd International Joint Conference on Natural Language Processing IJCNLP-05 (Posters/Demos), Jeju Island, Korea.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Emily Bender</author>
</authors>
<title>Combining Research and Pedagogy in the Development of a Crosslinguistic Grammar Resource. In:</title>
<date>2007</date>
<booktitle>Proceedings of the workshop Grammar Engineering across Frameworks</booktitle>
<institution>Stanford University.</institution>
<contexts>
<context position="2944" citStr="Bender, 2007" startWordPosition="431" endWordPosition="432"> of code that needs to be written as the central rules are written only once. This automatically leads to coherence between language descriptions for different languages, which improves grammar maintainability, and eliminates the duplication effort that otherwise occurs when monolingual grammars are used. Multilingual grammars can share resources between languages in various ways. Ranta (2007) has developed an abstract syntax that defines a common semantic representation in a multilingual grammar. Another type of approach is implemented in the LinGO Grammar Matrix project (Bender et al. 2005; Bender, 2007). The Grammar Matrix consists of a core grammar that contains the types and constraints that are regarded as cross-linguistically useful. This core is further linked to phenomenonspecific libraries. These consist of rule repertories based on typological categories. The necessary modules are put together like building blocks according to language characteristics to form the final grammar of a language. The work described in this paper implements 25 Coling 2008: Proceedings of the workshop on Grammar Engineering Across Frameworks, pages 25–32 Manchester, August 2008 a grammar sharing approach th</context>
</contexts>
<marker>Bender, 2007</marker>
<rawString>Bender, Emily. 2007. Combining Research and Pedagogy in the Development of a Crosslinguistic Grammar Resource. In: Proceedings of the workshop Grammar Engineering across Frameworks 2007, Stanford University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pierrette Bouillon</author>
<author>Manny Rayner</author>
<author>Nikos Chatzichrisafis</author>
<author>Beth Ann Hockey</author>
<author>Marianne Santaholma</author>
</authors>
<title>Marianne Starlander, Yukie Nakao, Kyoko Kanzaki, Hitoshi Isahara.</title>
<date>2005</date>
<booktitle>Proceedings of the 10th Conference of the European Association for Machine Translation,</booktitle>
<location>EAMT, Budapest, Hungary.</location>
<contexts>
<context position="3801" citStr="Bouillon et al., 2005" startWordPosition="553" endWordPosition="556">sed on typological categories. The necessary modules are put together like building blocks according to language characteristics to form the final grammar of a language. The work described in this paper implements 25 Coling 2008: Proceedings of the workshop on Grammar Engineering Across Frameworks, pages 25–32 Manchester, August 2008 a grammar sharing approach that is based on language-independent parameterized rules that are complemented with necessary language-specific rules and features. These shared rules have been implemented for MedSLT, a multilingual spoken language translation system (Bouillon et al., 2005). All of the central language processing components of MedSLT, including the speech recognizer, parser and generator, are derived from handcrafted general grammars of a language. The biggest effort in adding a new language to the existing spoken language translation framework is the grammar development cycle. As more languages are added to the existing spoken language translation framework, the necessity for multilingual grammar rules grows. (Bouillon et al., 2006) first developed shared MedSLT grammar rules for the Romance languages French, Spanish and Catalan. Compared to the monolingual gra</context>
</contexts>
<marker>Bouillon, Rayner, Chatzichrisafis, Hockey, Santaholma, 2005</marker>
<rawString>Bouillon, Pierrette, Manny Rayner, Nikos Chatzichrisafis, Beth Ann Hockey, Marianne Santaholma, Marianne Starlander, Yukie Nakao, Kyoko Kanzaki, Hitoshi Isahara. 2005. A generic multilingual open source platform for limiteddomain medical speech translation. In: Proceedings of the 10th Conference of the European Association for Machine Translation, EAMT, Budapest, Hungary.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pierrette Bouillon</author>
<author>Manny Rayner</author>
<author>Bruna Novellas Vall</author>
<author>Marianne Starlander</author>
<author>Marianne Santaholma</author>
<author>Nikos Chatzichrisafis</author>
</authors>
<title>Une grammaire partage multi-tache pour le traitement de la parole : application aux langues romanes.</title>
<date>2007</date>
<journal>TAL (Traitement Automatique des Langues), Volume</journal>
<volume>47</volume>
<pages>2006--3</pages>
<contexts>
<context position="10206" citStr="Bouillon et al., 2007" startWordPosition="1500" endWordPosition="1503">apanese and Finnish. These languages represent different types of languages and hence express the same linguistic phenomena in different ways. Consequently they provided a good starting point for framework design. The Regulus multilingual grammar is modular and organized hierarchically. Parameterized rules are stored in the “language-independent core” module. This is the most generic level and as such is shared between all languages. The “lower levels” include the language-family specific modules 3Bidirectional MedSLT exists currently for EnglishSpanish language pair. Details are provided in (Bouillon et al., 2007). and the language-specific modules. The modules for related languages decrease redundancy as related languages commonly share characteristics at least to some extent. 4 The information in this modular structure is inherited top-down from the most generic to language specific. The first language to which we applied the parameterized rules and which had not been part of the original shared grammar framework development is Modern Greek. In the following we first describe the parameterized grammar rules. Then we focus on how these rules are applied for Greek. 3.1 Coverage The parameterized gramma</context>
</contexts>
<marker>Bouillon, Rayner, Vall, Starlander, Santaholma, Chatzichrisafis, 2007</marker>
<rawString>Bouillon, Pierrette, Manny Rayner, Bruna Novellas Vall, Marianne Starlander, Marianne Santaholma, Nikos Chatzichrisafis. 2007. Une grammaire partage multi-tache pour le traitement de la parole : application aux langues romanes. TAL (Traitement Automatique des Langues), Volume 47, 2006/3.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pierrette Bouillon</author>
<author>Glenn Flores</author>
<author>Marianne Starlander</author>
<author>Nikos Chatzichrisafis</author>
<author>Marianne Santaholma</author>
<author>Nikos Tsourakis</author>
<author>Manny Rayner</author>
<author>Beth Ann Hockey</author>
</authors>
<title>A Bidirectional Grammar-Based Medical Speech Translator. In:</title>
<date>2007</date>
<booktitle>Proceedings of workshop on Grammar-based approaches to spoken language processing, ACL</booktitle>
<location>Prague, Czech Republic.</location>
<contexts>
<context position="10206" citStr="Bouillon et al., 2007" startWordPosition="1500" endWordPosition="1503">apanese and Finnish. These languages represent different types of languages and hence express the same linguistic phenomena in different ways. Consequently they provided a good starting point for framework design. The Regulus multilingual grammar is modular and organized hierarchically. Parameterized rules are stored in the “language-independent core” module. This is the most generic level and as such is shared between all languages. The “lower levels” include the language-family specific modules 3Bidirectional MedSLT exists currently for EnglishSpanish language pair. Details are provided in (Bouillon et al., 2007). and the language-specific modules. The modules for related languages decrease redundancy as related languages commonly share characteristics at least to some extent. 4 The information in this modular structure is inherited top-down from the most generic to language specific. The first language to which we applied the parameterized rules and which had not been part of the original shared grammar framework development is Modern Greek. In the following we first describe the parameterized grammar rules. Then we focus on how these rules are applied for Greek. 3.1 Coverage The parameterized gramma</context>
</contexts>
<marker>Bouillon, Flores, Starlander, Chatzichrisafis, Santaholma, Tsourakis, Rayner, Hockey, 2007</marker>
<rawString>Bouillon, Pierrette, Glenn Flores, Marianne Starlander, Nikos Chatzichrisafis, Marianne Santaholma, Nikos Tsourakis, Manny Rayner, Beth Ann Hockey. 2007. A Bidirectional Grammar-Based Medical Speech Translator. In: Proceedings of workshop on Grammar-based approaches to spoken language processing, ACL 2007, June 29, Prague, Czech Republic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joan Bresnan</author>
<author>Ronald Kaplan</author>
</authors>
<title>The mental representation of grammatical relations.</title>
<date>1985</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="5920" citStr="Bresnan and Kaplan, 1985" startWordPosition="878" endWordPosition="881">cribes the Regulus toolkit (Rayner et al., 2006) and MedSLT, which form the development environment and application framework on which this work is based. Section 3 describes the parameterized multilingual grammar and parametrization mechanism. Section 4 summarizes techniques used to adding Modern Greek to the shared grammar system. Section 5 concludes. 2 Regulus Development environment and MedSLT application 2.1 Regulus features The Regulus grammar framework has been designed for spoken language grammars, and thus differs from popular grammar frameworks like Lexical Functional Grammar (LFG) (Bresnan and Kaplan, 1985) and Head-driven Phrase Structure Grammar (HSPG) (Pollard and Sag, 1994). Regulus grammars are written with a feature-grammar formalism that can easily be compiled into context free grammars (CFG). These are required for compilation of grammar-based language models used in speech recognition. Characteristic for Regulus grammars are finite valued features and exclusion of complex feature-value structures. Consequently the resulting rule-sets are perhaps more repetitive and less elegant than the equivalent LFGs or HPSGs. This design, however, enables compilation of non-trivial feature-grammars t</context>
</contexts>
<marker>Bresnan, Kaplan, 1985</marker>
<rawString>Bresnan, Joan and Ronald Kaplan. 1985. The mental representation of grammatical relations. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Miriam Butt</author>
<author>Helge Dyvik</author>
<author>Tracy Holloway King</author>
<author>Hiroshi Masuichi</author>
<author>Christian Rohrer</author>
</authors>
<title>The Parallel Grammar Project. In:</title>
<date>2002</date>
<booktitle>Proceedings of COLING-2002 Workshop on Grammar Engineering and Evaluation.</booktitle>
<marker>Butt, Dyvik, King, Masuichi, Rohrer, 2002</marker>
<rawString>Butt, Miriam, Helge Dyvik, Tracy Holloway King, Hiroshi Masuichi, and Christian Rohrer. 2002. The Parallel Grammar Project. In: Proceedings of COLING-2002 Workshop on Grammar Engineering and Evaluation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>Ron Kaplan</author>
<author>Tracy Holloway King</author>
</authors>
<title>Linguistics Generalizations over Descriptions.</title>
<date>2004</date>
<booktitle>Proceedings of the LFG04 Conference.</booktitle>
<editor>In M. Butt and T.H. King (ed.)</editor>
<contexts>
<context position="13509" citStr="Dalrymple et al., 2004" startWordPosition="1971" endWordPosition="1975">and in particular in lexica. In multilingual grammar rules the macros serve as “links” towards language-specific information. The shared rules have a language-neutral surface representation where macros invoke the required language-specific information. The macro reference of a language-independent rule is replaced by the information contained in the macro definition. The context of the macro reference determines how the macro definition combines with other parts of the description. The mechanism is similar to LFG ‘templates’, which encode linguistic generalizations in a language description (Dalrymple et al., 2004). The macro mechanism itself is rather simple. The crucial is that the macros are defined in a transparent and coherent way. Otherwise the grammar developer will spend more time learning to how to use the parameterized rule set than she would spend to develop a new grammar from scratch. When the macros are well defined, sharing the rules for a new language is just a matter of defining the language-specific macro definitions. In the following we present some concrete examples of how cross-linguistic variation can be parameterized in a multilingual Regulus grammar using macros. 3.2.1 Parameteriz</context>
</contexts>
<marker>Dalrymple, Kaplan, King, 2004</marker>
<rawString>Dalrymple, Mary, Ron Kaplan, and Tracy Holloway King. 2004. Linguistics Generalizations over Descriptions. In M. Butt and T.H. King (ed.) Proceedings of the LFG04 Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger Kim</author>
<author>Mary Dalrymple</author>
<author>Ronald M Kaplan</author>
</authors>
<title>Tracy Holloway King, Hiroshi Masuichi, Tomoko Ohkuma.</title>
<date>2003</date>
<booktitle>Proceedings of the ESSLLI Workshop on Ideas and Strategies for Multilingual Grammar Development,</booktitle>
<location>Vienna, Austria.</location>
<contexts>
<context position="2038" citStr="Kim et al. 2003" startWordPosition="293" endWordPosition="296">reases overall development efforts and makes maintenance laborious. © 2008. Licensed under the Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported license (http://creativecommons.org/licenses/by-nc-sa/3.0/). Some rights reserved. One way to decrease these efforts is to share already developed linguistic resources between system languages. Common approaches for sharing information include grammar adaptation and grammar sharing. Grammar adaptation is the technique of modifying an already existing grammar to cover a new language as implemented among others by Alshawi et al. 1992; Kim et al. 2003; and Santaholma, 2005. In grammar sharing, existing grammar rules are directly shared between languages rather than just being recycled as they are in grammar adaptation. Compared to both the monolingual grammar approach and the grammar adaptation approach, grammar sharing reduces the amount of code that needs to be written as the central rules are written only once. This automatically leads to coherence between language descriptions for different languages, which improves grammar maintainability, and eliminates the duplication effort that otherwise occurs when monolingual grammars are used. </context>
</contexts>
<marker>Kim, Dalrymple, Kaplan, 2003</marker>
<rawString>Kim, Roger, Mary Dalrymple, Ronald M. Kaplan, Tracy Holloway King, Hiroshi Masuichi, Tomoko Ohkuma. 2003. Language Multilingual Grammar Development via Grammar Porting. In: Proceedings of the ESSLLI Workshop on Ideas and Strategies for Multilingual Grammar Development, Vienna, Austria.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carl Pollard</author>
<author>Ivan Sag</author>
</authors>
<title>Head Driven Phrase Structure Grammar.</title>
<date>1994</date>
<publisher>University of Chicago Press,</publisher>
<location>Chicago.</location>
<contexts>
<context position="5992" citStr="Pollard and Sag, 1994" startWordPosition="888" endWordPosition="891"> development environment and application framework on which this work is based. Section 3 describes the parameterized multilingual grammar and parametrization mechanism. Section 4 summarizes techniques used to adding Modern Greek to the shared grammar system. Section 5 concludes. 2 Regulus Development environment and MedSLT application 2.1 Regulus features The Regulus grammar framework has been designed for spoken language grammars, and thus differs from popular grammar frameworks like Lexical Functional Grammar (LFG) (Bresnan and Kaplan, 1985) and Head-driven Phrase Structure Grammar (HSPG) (Pollard and Sag, 1994). Regulus grammars are written with a feature-grammar formalism that can easily be compiled into context free grammars (CFG). These are required for compilation of grammar-based language models used in speech recognition. Characteristic for Regulus grammars are finite valued features and exclusion of complex feature-value structures. Consequently the resulting rule-sets are perhaps more repetitive and less elegant than the equivalent LFGs or HPSGs. This design, however, enables compilation of non-trivial feature-grammars to CFG. Another Regulus feature that enables CFG compilation is grammar s</context>
</contexts>
<marker>Pollard, Sag, 1994</marker>
<rawString>Pollard, Carl and Ivan Sag. 1994. Head Driven Phrase Structure Grammar. University of Chicago Press, Chicago.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aarne Ranta</author>
</authors>
<title>Modular Grammar Engineering in GF.</title>
<date>2007</date>
<journal>Research on Language and Computation,</journal>
<volume>5</volume>
<pages>2--2007</pages>
<contexts>
<context position="2727" citStr="Ranta (2007)" startWordPosition="398" endWordPosition="399">ly shared between languages rather than just being recycled as they are in grammar adaptation. Compared to both the monolingual grammar approach and the grammar adaptation approach, grammar sharing reduces the amount of code that needs to be written as the central rules are written only once. This automatically leads to coherence between language descriptions for different languages, which improves grammar maintainability, and eliminates the duplication effort that otherwise occurs when monolingual grammars are used. Multilingual grammars can share resources between languages in various ways. Ranta (2007) has developed an abstract syntax that defines a common semantic representation in a multilingual grammar. Another type of approach is implemented in the LinGO Grammar Matrix project (Bender et al. 2005; Bender, 2007). The Grammar Matrix consists of a core grammar that contains the types and constraints that are regarded as cross-linguistically useful. This core is further linked to phenomenonspecific libraries. These consist of rule repertories based on typological categories. The necessary modules are put together like building blocks according to language characteristics to form the final g</context>
</contexts>
<marker>Ranta, 2007</marker>
<rawString>Ranta, Aarne. 2007. Modular Grammar Engineering in GF. Research on Language and Computation, Volume 5, 2/2007, 133–158.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manny Rayner</author>
<author>Beth Ann Hockey</author>
<author>Pierrette Bouillon</author>
</authors>
<title>Regulus-Putting linguistics into speech recognition. CSLI publications,</title>
<date>2006</date>
<location>California, USA.</location>
<contexts>
<context position="5343" citStr="Rayner et al., 2006" startWordPosition="793" endWordPosition="796">sh and Japanese. Experiments have shown that these shared rules perform equally well on all three languages (Santaholma, 2007). As these grammars had been developed in parallel, it was not clear how flexible the parameterized grammar approach would be for new a language, which was not included in the original development process. We thus extended the grammar to cover Modern Greek as a new language. The paper describes the methodology of adding this new language and evaluates the parametrization mechanism. The rest of the paper is structured as follows. Section 2 describes the Regulus toolkit (Rayner et al., 2006) and MedSLT, which form the development environment and application framework on which this work is based. Section 3 describes the parameterized multilingual grammar and parametrization mechanism. Section 4 summarizes techniques used to adding Modern Greek to the shared grammar system. Section 5 concludes. 2 Regulus Development environment and MedSLT application 2.1 Regulus features The Regulus grammar framework has been designed for spoken language grammars, and thus differs from popular grammar frameworks like Lexical Functional Grammar (LFG) (Bresnan and Kaplan, 1985) and Head-driven Phrase</context>
<context position="7756" citStr="Rayner et al., 2006" startWordPosition="1142" endWordPosition="1145">ariant forms but generate only one. This variation can be controlled by specializing the Regulus grammars for these tasks. Finally the multilingual Regulus grammar can be specialized for specific languages by automatically removing the unnecessary rules. 2.2 MedSLT Most large-scale machine translation systems are currently based on statistical language processing. MedSLT, however, has been implemented with linguistically motivated grammars mainly for the following reasons: (1) necessary data for inducing the grammars and training the statistical language 1The method is described in detail in (Rayner et al., 2006), Chapter 10. 2These include domain specific corpus, lexica and operationality criteria that control the granularity of specialized grammar. Details provided by (Rayner et al., 2006). 26 models were not available for the required domain and languages. (2) the medical domain demands accurate translation performance, which can be more easily guaranteed with rule based systems. MedSLT is an unidirectional3 speech-to-speech translation system that has been designed to help in emergency situations where a common language between the physician and the patient does not exist. In addition to influenci</context>
<context position="19101" citStr="Rayner et al., 2006" startWordPosition="2744" endWordPosition="2747">e ‘Verb’ followed by a semantic value ‘Noun’ these should be processed in the order ‘Verb’, ‘Noun’. The order of constituents remains unchanged. The equivalent Japanese macro definition would be: 2) macro(verb_transitive_np macro(noun_head_features([Agr,Case]),(Verb, Noun),(Noun, Verb)). [@agr(Agr), case=Case]). 29 Contrary to the English rule this rule specifies that when there is a semantic value ‘Verb’ followed by a semantic value ‘Noun’ these should be processed in the order ‘Noun’, ‘Verb’. This changes the order the of constituents. Details of Regulus semantic processing are available in Rayner et al., 2006. 3.2.3 Ignoring rules/features and using empty values There exist several ways to ignore rules and features or to introduce empty values in Regulus grammars. These have proven practical in rule parametrization. In the following we present some frequent examples. Features that are irrelevant for a particular language (in a particular context) can take ‘empty’ ([]) as their value. This can be encoded in several ways. • Macro takes an empty value. This is encoded by ‘[]’ Example: macro(noun_head_features([]), []). • Feature takes an empty value. This is encoded by ‘_’: Example: macro(premod_case</context>
</contexts>
<marker>Rayner, Hockey, Bouillon, 2006</marker>
<rawString>Rayner, Manny, Beth Ann Hockey, Pierrette Bouillon. 2006. Regulus-Putting linguistics into speech recognition. CSLI publications, California, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marianne Santaholma</author>
</authors>
<title>Linguistic representation of Finnish in a limited domain speech-to-speech translation system. In:</title>
<date>2005</date>
<booktitle>Proceedings of the 10th Conference on European Association of Machine Translation,</booktitle>
<location>Budapest, Hungary.</location>
<contexts>
<context position="2060" citStr="Santaholma, 2005" startWordPosition="298" endWordPosition="299">pment efforts and makes maintenance laborious. © 2008. Licensed under the Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported license (http://creativecommons.org/licenses/by-nc-sa/3.0/). Some rights reserved. One way to decrease these efforts is to share already developed linguistic resources between system languages. Common approaches for sharing information include grammar adaptation and grammar sharing. Grammar adaptation is the technique of modifying an already existing grammar to cover a new language as implemented among others by Alshawi et al. 1992; Kim et al. 2003; and Santaholma, 2005. In grammar sharing, existing grammar rules are directly shared between languages rather than just being recycled as they are in grammar adaptation. Compared to both the monolingual grammar approach and the grammar adaptation approach, grammar sharing reduces the amount of code that needs to be written as the central rules are written only once. This automatically leads to coherence between language descriptions for different languages, which improves grammar maintainability, and eliminates the duplication effort that otherwise occurs when monolingual grammars are used. Multilingual grammars </context>
</contexts>
<marker>Santaholma, 2005</marker>
<rawString>Santaholma, Marianne. 2005. Linguistic representation of Finnish in a limited domain speech-to-speech translation system. In: Proceedings of the 10th Conference on European Association of Machine Translation, Budapest, Hungary.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marianne Santaholma</author>
</authors>
<title>Grammar sharing techniques for rule-based multilingual NLP systems. In:</title>
<date>2007</date>
<booktitle>Proceedings of NODALIDA 2007, the 16th Nordic Conference of Computational Linguistics,</booktitle>
<location>Tartu, Estonia.</location>
<contexts>
<context position="4849" citStr="Santaholma, 2007" startWordPosition="710" endWordPosition="712">r rules grows. (Bouillon et al., 2006) first developed shared MedSLT grammar rules for the Romance languages French, Spanish and Catalan. Compared to the monolingual grammar system, the shared grammar-based system facilitated application development without degrading the performance of any of its components (speech recognition, translation) on these languages. We took this approach further and implemented parameterized grammar rules for typologically different languages - English, Finnish and Japanese. Experiments have shown that these shared rules perform equally well on all three languages (Santaholma, 2007). As these grammars had been developed in parallel, it was not clear how flexible the parameterized grammar approach would be for new a language, which was not included in the original development process. We thus extended the grammar to cover Modern Greek as a new language. The paper describes the methodology of adding this new language and evaluates the parametrization mechanism. The rest of the paper is structured as follows. Section 2 describes the Regulus toolkit (Rayner et al., 2006) and MedSLT, which form the development environment and application framework on which this work is based.</context>
</contexts>
<marker>Santaholma, 2007</marker>
<rawString>Santaholma, Marianne. 2007. Grammar sharing techniques for rule-based multilingual NLP systems. In: Proceedings of NODALIDA 2007, the 16th Nordic Conference of Computational Linguistics, Tartu, Estonia.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>