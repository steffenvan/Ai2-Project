<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000010">
<title confidence="0.758348">
Terminology Finite-State Preprocessing for Computational LFG
</title>
<author confidence="0.704745">
Caroline Brun
</author>
<affiliation confidence="0.562769">
Xerox Research Centre Europe
</affiliation>
<note confidence="0.6048755">
6, chemin de Maupertuis 38240 Meylan France
Caroline.Brung.xrce.xerox.corn
</note>
<sectionHeader confidence="0.978125" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9998464375">
This paper presents a technique to deal with
multiword nominal terminology in a compu-
tational Lexical Functional Grammar. This
method treats multiword terms as single to-
kens by modifying the preprocessing stage of the
grammar (tokenization and morphological anal-
ysis), which consists of a cascade of two-level
finite-state automata (transducers). We present
here how we build the transducers to take ter-
minology into account. We tested the method
by parsing a small corpus with and without this
treatment of multiword terms. The number of
parses and parsing time decrease without affect-
ing the relevance of the results. Moreover, the
method improves the perspicuity of the analy-
ses.
</bodyText>
<sectionHeader confidence="0.998784" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.990106022222223">
The general issue we are dealing with here is
to determine whether there is an advantage to
treating multiword expressions as single tokens,
by recognizing them before parsing. Possible
advantages are the reduction of ambiguity in
the parse results, perspicuity in the structure
of analyses, and reduction in parsing time. The
possible disadvantage is the loss of valid analy-
ses. There is probably no single answer to this
issue, as there are many different kinds of mul-
tiword expressions. This work follows the inte-
gration&apos; of (French) fixed multiword expressions
like a priori, and time expressions, like le 12 jan-
vier 1988, in the preprocessing stage.
Terminology is an interesting kind of multiword
expressions because such expressions are almost
but not completely fixed, and there is an in-
tuition that you won&apos;t loose many good anal-
&apos;This integration has been done by Frederique
Segond.
yses by treating them as single tokens. More-
over, terminology can be semi or fully automat-
ically extracted. Our goal in the present paper
is to compare efficiency and syntactic coverage
of a French LFG grammar on a technical text,
with and without terminology recognition in the
preprocessing stage. The preprocessing consists
mainly in two stages: tokenization and morpho-
logical analysis. Both stages are performed by
use of finite-state lexical transducers (Kartun-
nen, 1994). In the following, we describe the in-
sertion of terminology in these finite-state trans-
ducers. as well as the consequences of such an
insertion on the syntactic analysis, in terms of
number of valid analyses produced, parsing time
and nature of the results. We are part of a
project. which aims at developing LFG gram-
mars, (Bresnan and Kaplan, 1982), in paral-
lel for French, English and German, (Butt et
al., To appear). The grammar is developed in
a computational environment called XLE (Xe-
rox Linguistic Environment), (Maxwell and Ka-
plan, 1996), which provides automatic parsing
and generation, as well as an interface to the
preprocessing tools we are describing.
</bodyText>
<sectionHeader confidence="0.977202" genericHeader="method">
2 Terminology Extraction
</sectionHeader>
<bodyText confidence="0.999280307692308">
The first stage of this work was to extract termi-
nology from our corpus. This corpus is a small
French technical text of 742 sentences (7000
words). As we have at our disposal parallel
aligned English/French texts, we use the English
translation to decide when a potential term is
actually a term. The terminology we are deal-
ing with is mainly nominal. To perform this
extraction task, we use a tagger (Chanod and
Tapanainen, 1995) to disambiguate the French
text, and then extract the following syntactic
patterns. N Prep N, N N, N A, A N, which are
good candidates to be terms. These candidates
</bodyText>
<page confidence="0.998343">
196
</page>
<bodyText confidence="0.9583184">
are considered as terms when the correspond-
ing English translation is a unit, or when their
translation differs from a word to word trans-
lation. For example. we extract the following
terms:
</bodyText>
<figure confidence="0.630381">
(1) vitesses rampantes (creepers)
boite de vitesse (gearbox)
</figure>
<figureCaption confidence="0.40035">
arbre de transmission (drive shaft)
tableau de bord (instrument panel)
</figureCaption>
<bodyText confidence="0.9985709">
This simple method allowed us to extract a set
of 210 terms which are then integrated in the
preprocessing stages of the parser, as we are go-
ing to explain in the following sections.
We are aware that this semi-automatic process
works because of the small size of our corpus.
A fully automatic method (Jacquemin, 1997)
could be used to extract terminology. But the
material extracted was sufficient to perform the
experiment of comparison we had in mind.
</bodyText>
<sectionHeader confidence="0.985471" genericHeader="method">
3 Grammar Preprocessing
</sectionHeader>
<bodyText confidence="0.99993825">
In this section, we present how tokenization and
morphological analysis are handled in the sys-
tem and then how we integrate terminology pro-
cessing in these two stages.
</bodyText>
<subsectionHeader confidence="0.992434">
3.1 Tokeniz at ion
</subsectionHeader>
<bodyText confidence="0.999977529411765">
The tokenization process consists of splitting
an input string into tokens, (Grefenstette and
Tapanainen. 1994), (Ait-Mokthar. 1997), i.e.
determining the word boundaries. If there is
one and only one output string the tokenization
is said to be deterministic, if there is more than
one output string, the tokenization is non deter-
ministic. The tokenizer of our application is non
deterministic (Chanod and Tapanainen, 1996),
which is valuable for the treatment of some am-
biguous input string&apos;, but in this paper we deal
with fixed multiword expressions.
The tokenization is performed by applying a
two-level finite-state transducer on the input
string. For example, applying this transducer
on the sentence in 2 gives the following result,
the token boundary being the sign.
</bodyText>
<listItem confidence="0.522849">
(2) Le tracteur est a l&apos;arret.
(The tractor is stationary.)
Le@tracteur(gest@a©I&apos;@arret@A
</listItem>
<footnote confidence="0.777532">
2for example bien que in French
</footnote>
<bodyText confidence="0.9999794">
In this particular case, each word is a token.
But several words can be a unit, for exam-
ple compounds. or multiword expressions. Here
are some examples of the desired tokenization,
where terms are treated as units:
</bodyText>
<listItem confidence="0.8005905">
(3) La boite de vitesse est en deux sections.
(the gearbox is in two sections)
La4boite de vitesseOest@enadeuxOsectionsa.©
(4) Ce levier engage l&apos;arbre de transmission.
(This lever engages the drive shaft.)
Cealevier@engageOl&apos;Oarbre de transmission.©
</listItem>
<bodyText confidence="0.999895333333333">
We need such an analysis for the terminology
extracted from the text. This tokenization is
realized in two logical steps. The first step is
performed by the basic transducer and splits the
sentence in a sequence of single word. Then a
second transducer containing a list of multiword
expressions is applied. It recognizes these ex-
pressions and marks them as units. When more
than one expression in the list matches the in-
put, the longest matching expression is marked.
We have included all the terms and their mor-
phological variations in this last transducer, so
that they are analyzed as single tokens later on
in the process. The problem now is to associate
a morphological analysis to these units.
</bodyText>
<subsectionHeader confidence="0.999914">
3.2 Morphological Analysis
</subsectionHeader>
<bodyText confidence="0.97604315">
The morphological analyzer used during the
parsing process, just after the tokenization
process, is a two-level finite-state transducer
(Chanod. 1994). This lexical transducer links
the surface form of a string to its morphological
analysis, i.e. its canonical form and some char-
acterizing morphological tags. Some examples
are given in 5.
(5) &gt;veut
vouloir+IndP+SG+P3+Verb
&gt;animaux
animal+Masc+PL+Noun
animal+Masc+PL+Adj
The compound terms have to be integrated into
this transducer. This is done by developing a
local regular grammar which describes the com-
pound morphological variation, according to the
inflectional model proposed in (Kartunnen et
al., 1992).
The hypothesis is that only the two main parts
</bodyText>
<page confidence="0.992031">
197
</page>
<bodyText confidence="0.999816">
of the compounds are able to vary. i.e. Ni or
Al, and N2 or A2. in the patterns .V1 prep 1V2,
Ni N2, Al 1V2, and Ni A2. In our corpus, we
identify two kinds of morphological variations:
</bodyText>
<listItem confidence="0.98578">
• The first part varies in number:
gyrophare de toit. gyrophares de toit
regime moteur, regimes moteur
• Both parts vary in number:
roue motrice, roues motrices
</listItem>
<bodyText confidence="0.986080764705882">
This is of course not general for French com-
pounds; there are other variation patterns, how-
ever it is reliable enough for the technical man-
ual we are dealing with. Other inflectional
schemes and exceptions are described in (Kar-
tunnen et al., 1992) and (Quint, 1997), and
can be easily added to the regular grammar if
needed.
A cascade of regular rules is applied on the dif-
ferent parts of the compound to build the mor-
phological analyzer of the whole compound. For
example, roue motrice is marked with the dia-
critic +DPL, for double plural and then, a first
rule which just copies the morphological tags
from the end to the middle is applied if the di-
acritic is present in the right context:
roue 0 0 -motrice+DPL+Fem+PL
</bodyText>
<equation confidence="0.590792">
I I I I H
roue+Fem+PL -motrice 0 +Fem+PL
</equation>
<figureCaption confidence="0.99912">
Figure 1: First rule
</figureCaption>
<bodyText confidence="0.968755">
A second rule is applied to the output of the
preceding one and &amp;quot;realizes&amp;quot; the tags on surface.
</bodyText>
<figure confidence="0.5005985">
roue +Fem+PL-motrice +Fem +PL
roue 0 s -motrice 0 s
</figure>
<figureCaption confidence="0.998707">
Figure 2: Second rule
</figureCaption>
<bodyText confidence="0.991989307692308">
The composition of these two layers gives us the
direct mapping between surface inflected forms
and morphological analysis. The same kind of
rules are used when only the first part of the
compound varies, but in this case the second
rule just deletes the tags of the second word.
The two morphological analyzers for the two
variations are both unioned into the basic mor-
phological analyzer for French we use for mor-
phology. The result is the transducer we use fol-
lowing tokenization and completing input pre-
processing. An example of compound analysis
is given here:
</bodyText>
<figure confidence="0.8243325">
(6) &gt; roues motrices
roue motrice+Fem+PL+Noun
&gt; regimes moteur
regime moteur+Masc+PL+Noun
</figure>
<bodyText confidence="0.9948194">
The morphological analysis developed here for
terminology allows multiword terms to be
treated as regular nouns within the parsing pro-
cess. Constraints on agreement remain valid, for
example for relative or adjectival attachment.
</bodyText>
<sectionHeader confidence="0.683314" genericHeader="method">
4 Parsing with the Grammar
</sectionHeader>
<bodyText confidence="0.999935769230769">
One of the problems one encounters with pars-
ing using a high level grammar is the multi-
plicity of (valid) analyses one gets as a result.
While syntactically correct, some of these anal-
yses should be removed for semantic reasons or
in a particular context. One of the challenges
is to reduce the parse number, without affecting
the relevance of the results and without remov-
ing the desired parses. There are several ways to
perform such a task, as described for example in
(Segond and Copperman, 1997); we show here
that finite state preprocessing for compounds is
compatible with other possibilities.
</bodyText>
<subsectionHeader confidence="0.99477">
4.1 Experiment and Results
</subsectionHeader>
<bodyText confidence="0.999828666666667">
The experiment reported here is very simple: it
consists of parsing the technical corpus before
and after integration of the morphological terms
in the preprocessing components, using exactly
the same grammar rules, and comparing the re-
sults obtained. As the compounds are mainly
nominal, they will be analyzed just as regular
nouns by the grammar rules. For example, if we
parse the NP:
</bodyText>
<listItem confidence="0.566606">
(7) La boite de vitesse (the gearbox)
</listItem>
<bodyText confidence="0.99930125">
before integration we get the structures shown
in Fig.3, and after integration we get the simple
structures shown in Fig.4. The following tables
show the results obtained on the whole corpus:
</bodyText>
<page confidence="0.987434">
198
</page>
<figure confidence="0.998922379310345">
NP • After Terminology Integration:
NPdet
DETP NPpp
I
D NPap PP
I
la N P NP
I I I
bolte de NPdet
I
NPpp
I
NPap
I
N
I
vitesse
- PRED &apos;botte&apos;
SPEC-TYPE clef]
SPEC
[SPEC-FORM le
1 PRED &apos;de&lt; (t OBJ) &gt;&apos; 1 I
ADJUNCT
OBJ PRED &apos;vitesse&apos;
SPEC null
PCASE de
PERS 3
_PSEM oc PTYPE sem
PERS 3 GEND fern NUM sg
</figure>
<figureCaption confidence="0.970154">
Figure 3: Before Terminology Integration
</figureCaption>
<figure confidence="0.996078666666667">
NP
NPdet
DETP NPdet
NPpp
la NPap
boite de vitesse
</figure>
<figureCaption confidence="0.999164">
Figure 4: After Terminology Integration
</figureCaption>
<listItem confidence="0.817934">
• Before Terminology Integration:
</listItem>
<bodyText confidence="0.74493025">
Number of Token Parse Time
sentences Average average Average
with terms 358 10.59 4.21 1.706
without terms 384 8.98 3.77 1.025
Number of Token Parse Time
sentences average average Average
with terms 358 8.86 2.79 0.987
without terms 384 8.98 3.77 1.025
The results are straightforward: one ob-
serves a significant reduction in the number of
parses as well as in the parsing time, and no
change at all for sentences which do not contain
technical terms. Looking closer at the results
shows that the parses ruled out by this method
are semantically undesirable. We discuss these
results in the next section.
</bodyText>
<subsectionHeader confidence="0.999858">
4.2 Analysis of Results
</subsectionHeader>
<bodyText confidence="0.998223">
The good results we obtained in terms of parse
number and parsing time reduction were pre-
dictable. As the nominal terminology groups
nouns, prepositional phrases and adjectival /
phrases together in lexical units, there is a sig-
nificant reduction of the number of attachments.
For example, the adjective hydraulique in the
sentence:
</bodyText>
<figureCaption confidence="0.376767333333333">
(8) Le voyant de levier de distributeur hydrau-
ligue s&apos;allume. (The control valve lever
warning light comes on.)
</figureCaption>
<bodyText confidence="0.999923833333333">
can syntactically attach to voyant, levier, and
distributeur which leads to 3 analyses. But in
the domain the corpus is concerned with, dis-
tributeur hydraulique is a term. Parsing it as a
nominal unit gives only one parse, which is the
desired one. Moreover, grouping terms in unit
resolves some lexical ambiguity in the prepro-
cessing stage: for example, in ceinture de se&apos;cu-
rite, the word ceinture is a noun but may be a
verb in other contexts. Parsing ceinture de secu-
rite as a nominal term avoids further syntactic
disambiguation.
Of course, one has to be very careful with the
terminology integration in order to prevent a
loss of valid analyses. In this experiment, no
valid analyses were ruled out, because the semi-
automatic method we used for extraction and
integration allowed us to choose accurate terms.
The reduction in the number of attachments is
the main source of the decrease in the number
of parses.
As the number of attachments and of lexical
ambiguities decreases, the number of grammar
rules applied to compute the results decreases
</bodyText>
<table confidence="0.5588845">
[SPEC PRED &apos;botte de vitesse&apos;
[ SPEC-TYPE clef]
SPEC-FORM le
PERS 3 GEND fern NUM sg
</table>
<page confidence="0.990923">
199
</page>
<bodyText confidence="0.999879">
as well. The parsing time is reduced as a conse-
quence.
The gain of efficiency is interesting in this ap-
proach, but perhaps more valuable is the per-
spicuity of the results. For example. in a trans-
lation application it is clear that the represen-
tation given in Fig. 4, is more relevant and di-
rectly exploitable than the one given in Fig. 3,
because in this case there is a direct mapping
between the semantic predicate in French and
English.
</bodyText>
<sectionHeader confidence="0.946719" genericHeader="conclusions">
5 Conclusion and possible extensions
</sectionHeader>
<bodyText confidence="0.999962861111111">
The experiment presented in this paper shows
the advantage of treating terms as single to-
kens in the preprocessing stage of a parser. It
is an example of interaction between low level
finite-state tools and higher level grammars. Its
shows the benefit from such a cooperation for
the treatment of terminology and its implica-
tion on the syntactic parse results. One can
imagine other interactions, for example, to use
a &amp;quot;guesser&amp;quot;3 transducer which can easily pro-
cess unknown words, and give them plausible
mophological analyses according to rules about
productive endings.
There are ambiguity sources other than termi-
nology, but this method of ambiguity reduction
is compatible with others, and improves the per-
spicuity of the results. It has been shown to
be valuable for other syntactic phenomena like
time expressions, where local regular rules can
compute the morphological variation of such ex-
pressions. In general, lexicalization of (fixed)
multiword expressions, like complex preposition
or adverbial phrases, compounds, dates, numer-
als, etc., is valuable for parsing because it avoids
creation of &amp;quot;had hoc&amp;quot; and unproductive syntac-
tic rules like ADV -4 N Coord N to parse corps et
clme (body and soul), and unusual lexicon entries
like fur to get au fur et a mesure (as one goes
along). Ambiguity reduction and better rele-
vance of results are direct consequences of such
a treatment.
This experiment, which has been conducted on
a small corpus containing few terms. will be ex-
tended with an automatic extraction and inte-
gration process on larger scale corpora and other
languages.
</bodyText>
<footnote confidence="0.777444">
3Already used in tagging applications
</footnote>
<sectionHeader confidence="0.972758" genericHeader="acknowledgments">
6 Acknowledgments
</sectionHeader>
<bodyText confidence="0.995548666666667">
I would like to thanks my colleagues at XRCE,
especially Max Copperman and Frederique
Segond for their help and valuable comments.
</bodyText>
<sectionHeader confidence="0.986093" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9996946">
Salah Ait-Mokthar. 1997. Du texte ascii au texte
lemmatise : la presyntaxe en une seule etape. In
Proceedings TA LN97, Grenoble, France.
Joan Bresnan and Ronald M. Kaplan. 1982. The
Mental Representation of Grammatical Relations.
The MIT Press, Cambridge, MA.
Miriam Butt, Tracy Holloway King, Maria-Eugenia
Nitio, and Frederique Segond. To appear. A Gram-
mar Writer&apos;s Cookbook. CSLI Publications/ Univer-
sity of Chicago Press, Stanford University.
Jean-Pierre Chanod and Pasi Tapanainen. 1995.
Tagging French - comparing a statistical and a
constraint-based method. In Proceedings of the Sev-
enth Conference of the European Chapter, pages
149-156, Dublin. Association for Computational
Linguistic.
Jean-Pierre Chanod and Path Tapanainen. 1996. A
non-deterministic tokeniser for finite-state parsing.
In Proceedings ECA196, Prague, Czech Republic.
Jean-Pierre Chanod. 1994. Finite-state composi-
tion of French verb morphology. Technical Report
MLTT-004, Rank Xerox Research Centre, Grenoble.
Gregory Grefenstette and Pasi Tapanainen. 1994.
What is a word, what is a sentence? problems of
tokenisation. In Proceedings of the Third Interna-
tional Conference on Computational Lexicography,
pages 79-87, Budapest. Research Institute for Lin-
guistic Hungarian Academy of Sciences.
Christian Jacquemin. 1997. Variation termi-
nologique : Reconnaissance et acquistion automa-
tique de termes et de leur variante en corpus. Ha-
bilitation a. diriger les recherches.
Lauri Kartunnen, Ronald M. Kaplan, and Annie Za-
enen. 1992. Two-level morphology with composi-
tion. In Proceedings of the I7h International Confer-
ence on Computational Linguistics (COLING &apos;92),
August.
Lauri Kartunnen. 1994. Constructing lexical trans-
ducers. In Proceedings of the 19h International
Conference on Computational Linguistics (COLING
&apos;94), August.
John T. Maxwell and Ron Kaplan. 1996. An ef-
ficient parser for LFG. In Proceedings of LFG96,
Grenoble, France.
Julien Quint. 1997. Morphologie a deux niveaux des
noms du frangais. Master thesis, Xerox European
Research Centre, Grenoble.
Frederique Segond and Max Copperman. 1997. Lex-
icon filtering. In Proceedings of RANLP97, Bu-
dapest.
</reference>
<page confidence="0.996618">
200
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.592109">
<title confidence="0.997242">Terminology Finite-State Preprocessing for Computational LFG</title>
<author confidence="0.999295">Caroline Brun</author>
<affiliation confidence="0.933827">Xerox Research Centre Europe</affiliation>
<address confidence="0.926141">6, chemin de Maupertuis 38240 Meylan France</address>
<email confidence="0.6974">Caroline.Brung.xrce.xerox.corn</email>
<abstract confidence="0.993322176470588">This paper presents a technique to deal with multiword nominal terminology in a computational Lexical Functional Grammar. This method treats multiword terms as single tokens by modifying the preprocessing stage of the grammar (tokenization and morphological analysis), which consists of a cascade of two-level finite-state automata (transducers). We present here how we build the transducers to take terminology into account. We tested the method by parsing a small corpus with and without this treatment of multiword terms. The number of parses and parsing time decrease without affecting the relevance of the results. Moreover, the method improves the perspicuity of the analyses.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Salah Ait-Mokthar</author>
</authors>
<title>Du texte ascii au texte lemmatise : la presyntaxe en une seule etape.</title>
<date>1997</date>
<booktitle>In Proceedings TA LN97,</booktitle>
<location>Grenoble, France.</location>
<marker>Ait-Mokthar, 1997</marker>
<rawString>Salah Ait-Mokthar. 1997. Du texte ascii au texte lemmatise : la presyntaxe en une seule etape. In Proceedings TA LN97, Grenoble, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joan Bresnan</author>
<author>Ronald M Kaplan</author>
</authors>
<title>The Mental Representation of Grammatical Relations.</title>
<date>1982</date>
<publisher>The MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="2604" citStr="Bresnan and Kaplan, 1982" startWordPosition="404" endWordPosition="407"> grammar on a technical text, with and without terminology recognition in the preprocessing stage. The preprocessing consists mainly in two stages: tokenization and morphological analysis. Both stages are performed by use of finite-state lexical transducers (Kartunnen, 1994). In the following, we describe the insertion of terminology in these finite-state transducers. as well as the consequences of such an insertion on the syntactic analysis, in terms of number of valid analyses produced, parsing time and nature of the results. We are part of a project. which aims at developing LFG grammars, (Bresnan and Kaplan, 1982), in parallel for French, English and German, (Butt et al., To appear). The grammar is developed in a computational environment called XLE (Xerox Linguistic Environment), (Maxwell and Kaplan, 1996), which provides automatic parsing and generation, as well as an interface to the preprocessing tools we are describing. 2 Terminology Extraction The first stage of this work was to extract terminology from our corpus. This corpus is a small French technical text of 742 sentences (7000 words). As we have at our disposal parallel aligned English/French texts, we use the English translation to decide w</context>
</contexts>
<marker>Bresnan, Kaplan, 1982</marker>
<rawString>Joan Bresnan and Ronald M. Kaplan. 1982. The Mental Representation of Grammatical Relations. The MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Miriam Butt</author>
<author>Tracy Holloway King</author>
<author>Maria-Eugenia Nitio</author>
<author>Frederique Segond</author>
</authors>
<title>To appear. A Grammar Writer&apos;s Cookbook.</title>
<date>1995</date>
<booktitle>In Proceedings of the Seventh Conference of the European Chapter,</booktitle>
<pages>149--156</pages>
<publisher>CSLI Publications/</publisher>
<institution>University of Chicago Press, Stanford University. Jean-Pierre Chanod</institution>
<marker>Butt, King, Nitio, Segond, 1995</marker>
<rawString>Miriam Butt, Tracy Holloway King, Maria-Eugenia Nitio, and Frederique Segond. To appear. A Grammar Writer&apos;s Cookbook. CSLI Publications/ University of Chicago Press, Stanford University. Jean-Pierre Chanod and Pasi Tapanainen. 1995. Tagging French - comparing a statistical and a constraint-based method. In Proceedings of the Seventh Conference of the European Chapter, pages 149-156, Dublin. Association for Computational Linguistic.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Jean-Pierre Chanod</author>
<author>Path Tapanainen</author>
</authors>
<title>A non-deterministic tokeniser for finite-state parsing.</title>
<date>1996</date>
<booktitle>In Proceedings ECA196,</booktitle>
<tech>Technical Report MLTT-004,</tech>
<pages>79--87</pages>
<institution>Rank Xerox Research Centre, Grenoble. Gregory Grefenstette and Pasi Tapanainen.</institution>
<location>Prague, Czech Republic. Jean-Pierre Chanod.</location>
<contexts>
<context position="4960" citStr="Chanod and Tapanainen, 1996" startWordPosition="790" endWordPosition="793">ar Preprocessing In this section, we present how tokenization and morphological analysis are handled in the system and then how we integrate terminology processing in these two stages. 3.1 Tokeniz at ion The tokenization process consists of splitting an input string into tokens, (Grefenstette and Tapanainen. 1994), (Ait-Mokthar. 1997), i.e. determining the word boundaries. If there is one and only one output string the tokenization is said to be deterministic, if there is more than one output string, the tokenization is non deterministic. The tokenizer of our application is non deterministic (Chanod and Tapanainen, 1996), which is valuable for the treatment of some ambiguous input string&apos;, but in this paper we deal with fixed multiword expressions. The tokenization is performed by applying a two-level finite-state transducer on the input string. For example, applying this transducer on the sentence in 2 gives the following result, the token boundary being the sign. (2) Le tracteur est a l&apos;arret. (The tractor is stationary.) Le@tracteur(gest@a©I&apos;@arret@A 2for example bien que in French In this particular case, each word is a token. But several words can be a unit, for example compounds. or multiword expression</context>
</contexts>
<marker>Chanod, Tapanainen, 1996</marker>
<rawString>Jean-Pierre Chanod and Path Tapanainen. 1996. A non-deterministic tokeniser for finite-state parsing. In Proceedings ECA196, Prague, Czech Republic. Jean-Pierre Chanod. 1994. Finite-state composition of French verb morphology. Technical Report MLTT-004, Rank Xerox Research Centre, Grenoble. Gregory Grefenstette and Pasi Tapanainen. 1994. What is a word, what is a sentence? problems of tokenisation. In Proceedings of the Third International Conference on Computational Lexicography, pages 79-87, Budapest. Research Institute for Linguistic Hungarian Academy of Sciences.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christian Jacquemin</author>
</authors>
<title>Variation terminologique : Reconnaissance et acquistion automatique de termes et de leur variante en corpus. Habilitation a. diriger les recherches.</title>
<date>1997</date>
<contexts>
<context position="4188" citStr="Jacquemin, 1997" startWordPosition="671" endWordPosition="672">when the corresponding English translation is a unit, or when their translation differs from a word to word translation. For example. we extract the following terms: (1) vitesses rampantes (creepers) boite de vitesse (gearbox) arbre de transmission (drive shaft) tableau de bord (instrument panel) This simple method allowed us to extract a set of 210 terms which are then integrated in the preprocessing stages of the parser, as we are going to explain in the following sections. We are aware that this semi-automatic process works because of the small size of our corpus. A fully automatic method (Jacquemin, 1997) could be used to extract terminology. But the material extracted was sufficient to perform the experiment of comparison we had in mind. 3 Grammar Preprocessing In this section, we present how tokenization and morphological analysis are handled in the system and then how we integrate terminology processing in these two stages. 3.1 Tokeniz at ion The tokenization process consists of splitting an input string into tokens, (Grefenstette and Tapanainen. 1994), (Ait-Mokthar. 1997), i.e. determining the word boundaries. If there is one and only one output string the tokenization is said to be determ</context>
</contexts>
<marker>Jacquemin, 1997</marker>
<rawString>Christian Jacquemin. 1997. Variation terminologique : Reconnaissance et acquistion automatique de termes et de leur variante en corpus. Habilitation a. diriger les recherches.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lauri Kartunnen</author>
<author>Ronald M Kaplan</author>
<author>Annie Zaenen</author>
</authors>
<title>Two-level morphology with composition.</title>
<date>1992</date>
<booktitle>In Proceedings of the I7h International Conference on Computational Linguistics (COLING &apos;92),</booktitle>
<contexts>
<context position="7290" citStr="Kartunnen et al., 1992" startWordPosition="1149" endWordPosition="1152">the parsing process, just after the tokenization process, is a two-level finite-state transducer (Chanod. 1994). This lexical transducer links the surface form of a string to its morphological analysis, i.e. its canonical form and some characterizing morphological tags. Some examples are given in 5. (5) &gt;veut vouloir+IndP+SG+P3+Verb &gt;animaux animal+Masc+PL+Noun animal+Masc+PL+Adj The compound terms have to be integrated into this transducer. This is done by developing a local regular grammar which describes the compound morphological variation, according to the inflectional model proposed in (Kartunnen et al., 1992). The hypothesis is that only the two main parts 197 of the compounds are able to vary. i.e. Ni or Al, and N2 or A2. in the patterns .V1 prep 1V2, Ni N2, Al 1V2, and Ni A2. In our corpus, we identify two kinds of morphological variations: • The first part varies in number: gyrophare de toit. gyrophares de toit regime moteur, regimes moteur • Both parts vary in number: roue motrice, roues motrices This is of course not general for French compounds; there are other variation patterns, however it is reliable enough for the technical manual we are dealing with. Other inflectional schemes and excep</context>
</contexts>
<marker>Kartunnen, Kaplan, Zaenen, 1992</marker>
<rawString>Lauri Kartunnen, Ronald M. Kaplan, and Annie Zaenen. 1992. Two-level morphology with composition. In Proceedings of the I7h International Conference on Computational Linguistics (COLING &apos;92), August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lauri Kartunnen</author>
</authors>
<title>Constructing lexical transducers.</title>
<date>1994</date>
<booktitle>In Proceedings of the 19h International Conference on Computational Linguistics (COLING &apos;94),</booktitle>
<contexts>
<context position="2254" citStr="Kartunnen, 1994" startWordPosition="345" endWordPosition="347">ut not completely fixed, and there is an intuition that you won&apos;t loose many good anal&apos;This integration has been done by Frederique Segond. yses by treating them as single tokens. Moreover, terminology can be semi or fully automatically extracted. Our goal in the present paper is to compare efficiency and syntactic coverage of a French LFG grammar on a technical text, with and without terminology recognition in the preprocessing stage. The preprocessing consists mainly in two stages: tokenization and morphological analysis. Both stages are performed by use of finite-state lexical transducers (Kartunnen, 1994). In the following, we describe the insertion of terminology in these finite-state transducers. as well as the consequences of such an insertion on the syntactic analysis, in terms of number of valid analyses produced, parsing time and nature of the results. We are part of a project. which aims at developing LFG grammars, (Bresnan and Kaplan, 1982), in parallel for French, English and German, (Butt et al., To appear). The grammar is developed in a computational environment called XLE (Xerox Linguistic Environment), (Maxwell and Kaplan, 1996), which provides automatic parsing and generation, as</context>
</contexts>
<marker>Kartunnen, 1994</marker>
<rawString>Lauri Kartunnen. 1994. Constructing lexical transducers. In Proceedings of the 19h International Conference on Computational Linguistics (COLING &apos;94), August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John T Maxwell</author>
<author>Ron Kaplan</author>
</authors>
<title>An efficient parser for LFG.</title>
<date>1996</date>
<booktitle>In Proceedings of LFG96,</booktitle>
<location>Grenoble, France.</location>
<contexts>
<context position="2801" citStr="Maxwell and Kaplan, 1996" startWordPosition="435" endWordPosition="439">ges are performed by use of finite-state lexical transducers (Kartunnen, 1994). In the following, we describe the insertion of terminology in these finite-state transducers. as well as the consequences of such an insertion on the syntactic analysis, in terms of number of valid analyses produced, parsing time and nature of the results. We are part of a project. which aims at developing LFG grammars, (Bresnan and Kaplan, 1982), in parallel for French, English and German, (Butt et al., To appear). The grammar is developed in a computational environment called XLE (Xerox Linguistic Environment), (Maxwell and Kaplan, 1996), which provides automatic parsing and generation, as well as an interface to the preprocessing tools we are describing. 2 Terminology Extraction The first stage of this work was to extract terminology from our corpus. This corpus is a small French technical text of 742 sentences (7000 words). As we have at our disposal parallel aligned English/French texts, we use the English translation to decide when a potential term is actually a term. The terminology we are dealing with is mainly nominal. To perform this extraction task, we use a tagger (Chanod and Tapanainen, 1995) to disambiguate the Fr</context>
</contexts>
<marker>Maxwell, Kaplan, 1996</marker>
<rawString>John T. Maxwell and Ron Kaplan. 1996. An efficient parser for LFG. In Proceedings of LFG96, Grenoble, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Julien Quint</author>
</authors>
<title>Morphologie a deux niveaux des noms du frangais. Master thesis, Xerox European Research Centre,</title>
<date>1997</date>
<location>Grenoble.</location>
<contexts>
<context position="7955" citStr="Quint, 1997" startWordPosition="1272" endWordPosition="1273">of the compounds are able to vary. i.e. Ni or Al, and N2 or A2. in the patterns .V1 prep 1V2, Ni N2, Al 1V2, and Ni A2. In our corpus, we identify two kinds of morphological variations: • The first part varies in number: gyrophare de toit. gyrophares de toit regime moteur, regimes moteur • Both parts vary in number: roue motrice, roues motrices This is of course not general for French compounds; there are other variation patterns, however it is reliable enough for the technical manual we are dealing with. Other inflectional schemes and exceptions are described in (Kartunnen et al., 1992) and (Quint, 1997), and can be easily added to the regular grammar if needed. A cascade of regular rules is applied on the different parts of the compound to build the morphological analyzer of the whole compound. For example, roue motrice is marked with the diacritic +DPL, for double plural and then, a first rule which just copies the morphological tags from the end to the middle is applied if the diacritic is present in the right context: roue 0 0 -motrice+DPL+Fem+PL I I I I H roue+Fem+PL -motrice 0 +Fem+PL Figure 1: First rule A second rule is applied to the output of the preceding one and &amp;quot;realizes&amp;quot; the tag</context>
</contexts>
<marker>Quint, 1997</marker>
<rawString>Julien Quint. 1997. Morphologie a deux niveaux des noms du frangais. Master thesis, Xerox European Research Centre, Grenoble.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frederique Segond</author>
<author>Max Copperman</author>
</authors>
<title>Lexicon filtering.</title>
<date>1997</date>
<booktitle>In Proceedings of RANLP97,</booktitle>
<location>Budapest.</location>
<contexts>
<context position="10056" citStr="Segond and Copperman, 1997" startWordPosition="1630" endWordPosition="1633"> process. Constraints on agreement remain valid, for example for relative or adjectival attachment. 4 Parsing with the Grammar One of the problems one encounters with parsing using a high level grammar is the multiplicity of (valid) analyses one gets as a result. While syntactically correct, some of these analyses should be removed for semantic reasons or in a particular context. One of the challenges is to reduce the parse number, without affecting the relevance of the results and without removing the desired parses. There are several ways to perform such a task, as described for example in (Segond and Copperman, 1997); we show here that finite state preprocessing for compounds is compatible with other possibilities. 4.1 Experiment and Results The experiment reported here is very simple: it consists of parsing the technical corpus before and after integration of the morphological terms in the preprocessing components, using exactly the same grammar rules, and comparing the results obtained. As the compounds are mainly nominal, they will be analyzed just as regular nouns by the grammar rules. For example, if we parse the NP: (7) La boite de vitesse (the gearbox) before integration we get the structures shown</context>
</contexts>
<marker>Segond, Copperman, 1997</marker>
<rawString>Frederique Segond and Max Copperman. 1997. Lexicon filtering. In Proceedings of RANLP97, Budapest.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>