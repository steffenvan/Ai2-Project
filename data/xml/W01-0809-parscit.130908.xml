<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.997713">
Generation of Vietnamese for French-Vietnamese and English-
Vietnamese Machine Translation
</title>
<author confidence="0.38246">
DOAN-NGUYEN Hai
</author>
<affiliation confidence="0.223471">
Groupe de recherche sur l&apos;asymétrie des langues naturelles,
</affiliation>
<address confidence="0.537">
Université du Québec à Montréal, H3C-3P8, Canada.
</address>
<email confidence="0.981161">
E-mail: c1322@er.uqam.ca
</email>
<bodyText confidence="0.7435425">
and
Laboratoire d&apos;Analyse et de Technologie du Langage (LATL)
Faculté des Lettres, Université de Genève
2, rue de Candolle, CH-1211 Genève 4, Switzerland
</bodyText>
<sectionHeader confidence="0.988747" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999836">
This paper presents the implementation
of the Vietnamese generation module
in ITS3, a multilingual machine
translation (MT) system based on the
Government &amp; Binding (GB) theory.
Despite well-designed generic
mechanisms of the system, it turned out
that the task of generating Vietnamese
posed non-trivial problems. We
therefore had to deviate from the
generic code and make new design and
implementation in many important
cases. By developing corresponding
bilingual lexicons, we obtained
prototypes of French-Vietnamese and
English-Vietnamese MT, the former
being the first known prototype of this
kind. Our experience suggests that in a
principle-based generation system, the
parameterized modules, which contain
language-specific and lexicalized
properties, deserve more attention, and
the generic mechanisms should be
flexible enough to facilitate the
integration of these modules.
</bodyText>
<sectionHeader confidence="0.999342" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998877230769231">
Although Vietnamese is now spoken by about
80 millions people in the world, there has not
been much work on machine translation (MT)
from and to this language, except some English-
Vietnamese MT implementations (eg. Doan-
Nguyen, 1994) of minor success. As far as we
know, there has been yet no similar
implementation for French-Vietnamese MT.
This paper presents the implementation of the
generation module for Vietnamese in ITS3, a
multilingual MT system developed at the
Laboratoire d&apos;Analyse et de Technologie du
Langage (LATL), University of Geneva.
Together with the generation module, we
construct bilingual lexicons, and thus obtain
prototypes of French-Vietnamese and English-
Vietnamese MT.
As Vietnamese is very different from European
languages, the implementation of the generation
module for Vietnamese based on the generic
mechanisms of ITS3 poses non-trivial problems.
We present here some main problems and their
solutions, such as the construction of
Vietnamese noun phrases (NPs), verb phrases
(VPs), adverbial phrases (AdvPs), relative
clauses, etc.
</bodyText>
<sectionHeader confidence="0.930213" genericHeader="method">
2 Brief description of ITS3
</sectionHeader>
<bodyText confidence="0.992556785714286">
ITS3 (Wehrli, 1992; Etchegoyhen &amp; Wehrli,
1998; L&apos;haire &amp; al, 2000) can now translate
from French to English and vice versa. Modules
for other languages such as German, Italian, are
under development. ITS3 is a principle-based
system, linguistically inspired by the
Government &amp; Binding (GB) theory. (See eg.
Haegeman (1994) for an introduction to GB,
Berwick &amp; al (1991) for principle-based
systems). The system chooses the classical
analysis-transfer-generation approach of MT
(see Hutchins &amp; Sommers, 1992). ITS3 works
on single isolated sentences. A sentence in the
source language is analyzed into a logico-
linguistic structure, called pseudo-semantic
structure (PSS). After a lexical transfer phase,
this PSS is passed to the generation phase,
which finally produces the sentence in the target
language. By default, ITS3 gives a unique
solution, the best one.
Let&apos;s take an example of French-English
translation to illustrate the process. The analysis
phase consists of two steps: GB-based syntax
analysis and PSS construction. Syntax analysis
is carried out by the IPS parser (Wehrli, 1992),
which builds the X-bar structure of the sentence,
using many filtering constraints (on thematic
roles, on cases, etc.) to reduce overgeneration.
</bodyText>
<listItem confidence="0.997831666666667">
(1) La maison a été vendue.
(2) [TP [DP la [NP maison]]i [T&apos; a [VP été
[VP vendue [DP ei]]]]]
</listItem>
<bodyText confidence="0.997552625">
A PSS is then derived from the syntax analysis
results (Etchegoyhen &amp; Wehrli, 1998).
Components of the sentence are represented in
corresponding frame-liked structures. For
example, a clause gives rise to a PSS of type
CLS, which contains the main verb or adjective
(the Predicate slot) and other information on
tense, mood, voice, etc., as well as the PSS&apos;s of
its arguments and adjuncts (the Satellites).
Similarly, a noun phrase gives rise to a PSS of
type DPS, which contains, besides the main
noun (the Property slot), its number, gender,
referential index for binding resolution, etc. A
PSS thus contains abstract linguistic values for
&amp;quot;closed&amp;quot; features (tense, mood, voice, number,
gender, etc.), and lexical values for &amp;quot;open&amp;quot;
</bodyText>
<equation confidence="0.975714535714286">
features (CLS Predicate, DPS Property, etc.).
PSS[{ }
CLS[
Mood : real
Tense : E = S
InfoFunction : categorical
Modality : undefined
Aspect : (non
progressive, perfective)
Voice : passive
Causative : not causative
Negation : not negated
Utterance type : declaration
Predicate : vendre
]CLS
Satellites {
PSS[{ }
Theta role : theme
DPS[
Property : maison
Operator : the
Number : singular
Gender : feminine
Ref. index : i
]DPS
]PSS
}
]PSS
</equation>
<bodyText confidence="0.999712214285714">
In the lexical transfer phase, the lexical units in
the PSS are replaced by those in the target
language, using frequency data for translation
selection. In the generation phase, a generic
engine called GBGEN (Etchegoyhen &amp; Wehrle,
1998; Etchegoyhen &amp; al, 1999) cooperates with
language-specific modules to construct the
output from the PSS in three steps. First, D-
structure generation maps the PSS into an X-bar
structure in a top-down fashion (see 3a). Next,
S-structure generation carries out movements
and bindings (3b). Finally, morphological
realization is done (3c), and the result is output,
as in (3d).
</bodyText>
<listItem confidence="0.981369714285714">
(3) (a) [CP [TP [VP aux [VP aux [VP sell [DP
the [NP house]]i]]]]]
(b) [CP [TP [DP the [NP house]]i [T&apos; [VP aux
[VP aux [VP sell [DP ei]]]]]]]
(c) [CP [TP [DP the [NP house]]i [T&apos; [VP has
[VP been [VP sold [DP ei]]]]]]]
(d) The house has been sold.
</listItem>
<bodyText confidence="0.999813789473684">
Note that ITS3 does only lexical, and not
structural, transfer. This approach can therefore
be considered as half transfer half interlingual. It
is not the purpose of this paper to discuss the
pros and cons of the transfer and interlingual
approaches in MT. See eg. Gdaniec (1998) for
discussions about advantages of a particular
transfer-based MT system, and Dorr (1993) for
an interlingual one. The latter, also based on
GB, concentrates on treating mismatches across
languages, an issue less considered in ITS3. It
needs however to use very complex
representations for its interlingual approach,
hence is not likely to become a practical system.
As for the specification issue, ITS3 chooses to
be purely procedural. All generic engines and
language-specific modules are written in
Modula-2. Procedure templates are designed so
that one can fill in language-specific parameters
when adding a new language. However, this is
not always straightforward, as one will see in the
integration of Vietnamese below. In general, any
development requires to read, understand, and
often modify some parts of the huge code. This
is an important reason why a declarative
approach would be preferred (see eg. Emele &amp;
al, 1992; Nicolov &amp; Mellish, 2000).
Unfortunately, we do not have at our disposal
any declarative system with high-quality French
analysis. Also, as best as we know, there are no
parallel French-Vietnamese or English-
Vietnamese corpora built so far to think of
statistical or example-based MT approaches.
ITS3 is one among few systems that can do
French syntax analysis with large lexical and
grammatical coverage. It can therefore serve our
main purpose to develop a prototype of French-
Vietnamese MT in a short term.
</bodyText>
<sectionHeader confidence="0.909473" genericHeader="method">
3 Generation of Vietnamese
</sectionHeader>
<bodyText confidence="0.9999832">
In this section, we present the problems and our
solutions for constructing Vietnamese NPs, VPs,
AdvPs, relative clauses, etc. in ITS3. Below we
will use generalized notions of NP and VP in
GB, that of DP and TP, respectively.
</bodyText>
<subsectionHeader confidence="0.98911">
3.1 DP construction
</subsectionHeader>
<subsubsectionHeader confidence="0.489346">
3.1.1 Vietnamese noun categorizers
</subsubsectionHeader>
<bodyText confidence="0.996320933333333">
Many Vietnamese nouns have to be preceded by
a &amp;quot;categorizer&amp;quot; to form an NP. For example,
knowing that , we
cannot translate &amp;quot;a cat&amp;quot; into , but
. Here &amp;quot; &amp;quot; needs the
categorizer &amp;quot;con&amp;quot;. A categorizer is also a noun,
giving some vague idea on the semantic class of
the noun which requires it. For example, almost
every noun designating an animal needs &amp;quot;con&amp;quot;.
However, there seems to be no general rule to
determine the categorizer for a particular noun.
We therefore specify the categorizer for each
noun in the Vietnamese lexicon. This
information helps to form Vietnamese NPs
appropriately, eg. &amp;quot;a cat&amp;quot; gives rise to
</bodyText>
<listItem confidence="0.622753">
(4) [DP [NP con [NP ]]],
but &amp;quot;a language&amp;quot; to
(S) [DP [NP ]],
because &amp;quot; needs no categorizer.
</listItem>
<subsubsectionHeader confidence="0.923521">
3.1.2 Plural DPs
</subsubsectionHeader>
<bodyText confidence="0.8785202">
One important task in DP construction for many
languages is to assure agreement (on number,
gender, etc.). Vietnamese words are
morphologically invariant with respect to all
these concepts. For plural DPs, we need to add
an appropriate determiner: a quantifier if it is
specified (&amp;quot;two students&amp;quot; = [DP
&amp;quot;some students&amp;quot; = [DP
), or &amp;quot; &amp;quot; otherwise (&amp;quot;(the) students&amp;quot;
= [DP [NP ).
</bodyText>
<subsubsectionHeader confidence="0.587894">
3.1.3 Determiners
</subsubsectionHeader>
<bodyText confidence="0.996338555555556">
GBGEN supposes a 1-1 mapping in which a
determiner in a language corresponds to a
universal operator and vice versa, eg.:
English French Operator
each chaque every
this, these ce, cette, ces demonstrative
no aucun, aucune no
&amp;quot;Ces chats&amp;quot;, eg., is analyzed into a PSS like
(note the Operator slot):
</bodyText>
<equation confidence="0.985783">
DPS[
Property : chat
Operator : demonstrative
Number : plural
Ref. index :
]DPS
</equation>
<bodyText confidence="0.992164666666666">
After &amp;quot;chat&amp;quot; is replaced by &amp;quot;cat&amp;quot;, this gives [DP
these [NP cats]]. This model does not apply
totally to Vietnamese DPs. Some operators
correspond to a determiner as prescribed by the
model. Some do not, but require instead an
adjective after the noun, and some others need
both a determiner and an adjective.
Operator English/ Vietnamese frame, and attempt to fill it gradually with
French appropriate elements:
</bodyText>
<figure confidence="0.965417125">
every each cat/
chaque
chat
this cat/
ce chat
demonstrative
(singular)
these cats/
ces chats
demonstrative
(plural)
no no cat/
aucun
chat
[TP [T&apos; Modal [VP Perfective [VP Passive [VP
Progresive [VP Main]]]]]]
</figure>
<bodyText confidence="0.9999674">
where Modal, Perfective, Passive, and
Progressive stand for auxiliary verbs
representing respectively the modal, perfective,
passive, and progressive aspects of the TP, and
Main is the main verb. See example (3) above.
This model seems to work at least with French
and English. However, Vietnamese has many
differences from these languages on verbal
notions and on VP formation, as will be
presented in the following.
</bodyText>
<subsubsectionHeader confidence="0.939267">
3.1.4 Strategy for Vietnamese DP construction
</subsubsectionHeader>
<bodyText confidence="0.999980357142857">
It turns out to be somewhat problematic to
construct Vietnamese DPs in the generic model
of GBGEN. First, the procedure template for
deriving the determiner from the DPS Operator
slot does not expect that there may be an
adjective after the noun. Modifying this
procedure template would lead to many
obligatory changes in modules for all other
languages of the system. Moreover, this would
not mean that the template be generic enough
for every human language. Second, the generic
model does not evidently foresee a facility for
treating Vietnamese categorizers. We therefore
found more convenient to develop a specialized1
procedure for Vietnamese DP construction. This
allows a safe treatment of Vietnamese DPs
while still respecting the available system.
This procedure computes the determiner and
post-nominal adjective from the Operator and
Number slots of the DPS. A DP is then projected
from the determiner. Its NP complement is built
from the main noun (the Property slot in the
DPS). If the noun needs a categorizer, which is
given in its lexical entry, the NP will be of
structure [NP Categorizer [NP Main]],
otherwise it will be only [NP Main]. Finally, the
post-nominal adjective is added as a
complement of the NP.
</bodyText>
<subsectionHeader confidence="0.993224">
3.2 TP construction
</subsectionHeader>
<bodyText confidence="0.999484">
The principal strategy of GBGEN for TP
construction is to create the following general
</bodyText>
<subsubsectionHeader confidence="0.992158">
3.2.1 Tenses and aspects
</subsubsectionHeader>
<bodyText confidence="0.997822736842105">
In Vietnamese, verbs are not conjugated, and
tense and aspect are generally understood in
context. &amp;quot;He sleeps&amp;quot;, &amp;quot;He slept&amp;quot;, &amp;quot;He is
sleeping&amp;quot; eg., can all be translated in suitable
contexts into &amp;quot;✵ &amp;quot;. To explicit the tense
and aspect, Vietnamese uses some adverbs as
shown below.
He sleeps [TP [NP
He slept [TP [NP
He will sleep [TP [NP
He is sleeping [TP [NP
He has slept [TP [NP
There are some cases where it is difficult to have
a concise translation in Vietnamese, eg. &amp;quot;He has
been sleeping&amp;quot; may be translated into &amp;quot;
&amp;quot; (past tense emphasized) or &amp;quot;
&amp;quot; (progressive aspect emphasized)2.
We choose the one that seems preferable, eg. the
second sentence for this example.
</bodyText>
<footnote confidence="0.918843666666667">
2 It is impossible to say *&amp;quot;❩ &amp;quot; or
1 As understood in object-oriented paradigm.
*&amp;quot;❩ &amp;quot;.
</footnote>
<subsubsectionHeader confidence="0.960953">
3.2.2 Negation and modality
</subsubsectionHeader>
<bodyText confidence="0.984822333333333">
The Negation slot of a CLS specifies whether it
is in negative form or not. The Modality slot
contains an abstract value for the modality of the
verb, eg. possibility corresponds to English
&amp;quot;can&amp;quot; and French &amp;quot;pouvoir&amp;quot;, obligation to
&amp;quot;must&amp;quot; and &amp;quot;devoir&amp;quot;. GBGEN foresees an
orthogonal combination of negation and
modality; it inserts &amp;quot;not&amp;quot; after the modal verb
for English, or &amp;quot;ne&amp;quot; and &amp;quot;pas&amp;quot; around it for
French. In Vietnamese, one generally adds the
adverb &amp;quot; &amp;quot; before the verb to form a
negation.
</bodyText>
<subsubsectionHeader confidence="0.766752">
3.2.3 Passive
</subsubsectionHeader>
<bodyText confidence="0.998430555555556">
Passivization is realized in Vietnamese by
adding &amp;quot;❉ &amp;quot; or &amp;quot;❍ &amp;quot; before the verb. &amp;quot;❏ &amp;quot; is
used when the subject suffers a bad effect from
the action, otherwise &amp;quot;❉ &amp;quot; is used. We put
&amp;quot;❉ &amp;quot; or &amp;quot;❍ &amp;quot; in the specifier component of the
VP, ie. [Spec, VP]. The choice of &amp;quot;❉ &amp;quot; or &amp;quot;❍
&amp;quot;
for a verb is considered as a lexical one, and
stored in the Vietnamese lexicon.
</bodyText>
<figure confidence="0.502505">
(12) Le chat a gtg tug. (The cat was killed.)
(14) Le livre a gtg gcrit par John. (The book
was written by John.)
</figure>
<bodyText confidence="0.9628862">
Evidently, this orthogonal model will have
trouble in translation, because a modal verb in
negative form may have different logical
interpretations from one language to another.
For example, &amp;quot;must&amp;quot; = &amp;quot;✿ &amp;quot;, &amp;quot;✚ &amp;quot; =
</bodyText>
<equation confidence="0.527548">
(10) I must not run.
</equation>
<bodyText confidence="0.990760642857143">
cannot be translated into &amp;quot;
&amp;quot;, which means &amp;quot;I don&apos;t have to run&amp;quot;. The
right translation should be
At the moment, the specifications in the PSS
does not allow to determine the logical
interpretation of a negated modal verb. In
waiting for an improvement of GBGEN on this
issue, we implement a temporary solution which
helps to translate negative modal verbs from
English and French, specifically, to Vietnamese.
The appropriate Vietnamese negative modal
verb form is derived not only from the Modality
slot of the interested CLS, as done in GBGEN,
but also by examining its Negation slot.
</bodyText>
<subsectionHeader confidence="0.510601">
3.2.4 Translations of be/être
</subsectionHeader>
<bodyText confidence="0.999756636363637">
The lexical transfer procedure in ITS3 does not
take into account the interaction between the
components of the sentence when it translates
the lexical units in the PSS. In particular, the
English &amp;quot;be&amp;quot; is always translated into the French
&amp;quot;être&amp;quot;, and vice versa. However, to translate
be/être into Vietnamese, one has to distinguish
between at least three cases3.
For the first case, it suffices to test the theta role
of the complement of the verb in the PSS, which
should be THEME, to have the right translation
</bodyText>
<listItem confidence="0.557122333333333">
&amp;quot; &amp;quot;. In the last two cases, whether using &amp;quot; &amp;quot;
or &amp;quot; &amp;quot; is too delicate to explain, as it
concerns pragmatic issues. We decide to put
</listItem>
<page confidence="0.328697">
3 We ignored to treat, eg., the case of be + infinitive
</page>
<figure confidence="0.853834461538462">
(&amp;quot;He is to do it&amp;quot;, &amp;quot;↕ &amp;quot;).
&amp;quot; &amp;quot;, but
using another modal, &amp;quot;❉ &amp;quot;.
He is a student
He is intelligent
This flag is of
this country
]]]
( is
optional.)
(Here or even
are all possible and
optional.)
</figure>
<bodyText confidence="0.848271333333333">
&amp;quot;( )&amp;quot; for the second case where the
complement is an AP, and &amp;quot;( / &amp;quot; for all other
cases.
</bodyText>
<subsubsectionHeader confidence="0.794499">
3.2.5 Strategy for Vietnamese TP construction
</subsubsectionHeader>
<bodyText confidence="0.91972270967742">
From the discussion above, it seems not very
natural to follow the construction order of
GBGEN in building Vietnamese TPs, neither to
reuse some of its pre-designed procedure
templates, such as selecting auxiliary verbs. We
need rather to implement a different strategy. At
first, a simple frame [TP [T&apos; [VP ...]]] is built as
D-structure. Verbal information, such as tense,
aspect, modality, negation, is gathered from the
PSS as much as possible. The complete TP is
then constructed based on the combination of
gathered information, and in an order particular
to Vietnamese. The adverb representing the
tense/aspect of the clause, if exists, will occupy
the head position of the TP. The modal, passive,
and main verb make up layers of VPs in the TP.
Values of negation and modal are computed
together. The maximal frame looks like:
[TP [T&apos; Tense [VP Negation [V&apos; Modal [VP
Passive [V&apos; Main]]]]]]
For example, for the sentence
(16) Il n&apos;a pas pu être tué. (He could not be
killed.)
the past tense gives &amp;quot; &amp;quot;, the negation and the
modality combine and give &amp;quot; &amp;quot;4, and
the passive gives &amp;quot; &amp;quot; by consulting the lexical
entry of the verb &amp;quot; &amp;quot;:
In particular, if the main verb is a translation of
be/être (checked with a bit in the lexical entry),
its complements will be examined to give the
right translation.
</bodyText>
<page confidence="0.641546">
4 &amp;quot; &amp;quot; is a concise and more frequent form of
</page>
<bodyText confidence="0.376821">
&amp;quot; &amp;quot; (see example (9)).
</bodyText>
<subsectionHeader confidence="0.80693">
3.3 Other constructions
3.3.1 AdvP location
</subsectionHeader>
<bodyText confidence="0.999678266666667">
In ITS3, a large set of adverbs and, more
generally, adverbial phrases (AdvPs) are
classified into semantic groups, specified by a
value. For example, English &amp;quot;much&amp;quot; and French
&amp;quot;beaucoup&amp;quot; are assigned the abstract value
degree. GBGEN uses this information to locate
the generated AdvP in an appropriate position.
This generic approach is not perfect. For
example, the equivalent adverbs &amp;quot;where&amp;quot;
(English), &amp;quot;oii&amp;quot; (French), and &amp;quot; &amp;quot;
(Vietnamese) all have the where value, and
would be moved to [Spec, CP] of the
subordinate clause. This would give a bad
Vietnamese sentence (20). The correct one is
(21).
</bodyText>
<listItem confidence="0.96817025">
(18) I know [CP [AdvP where]i [C&apos; [TP he
[T&apos; [VP sleeps [AdvP ei]]]]]].
(19) Je sais [CP [AdvP oii]i [C&apos; [TP il [T&apos;
[VP dort [AdvP ei]]]]]].
</listItem>
<equation confidence="0.499679">
[CP [AdvP �]i [C&apos; [TP
[T&apos; [VP [AdvP ei]]]]]]
</equation>
<bodyText confidence="0.999911833333333">
This example shows that AdvP location should
be language-specific and lexicalized. The
generic procedure is in fact just a specialized
one valid for some class of languages. It is not
difficult here to imitate it for a treatment of
AdvP location specific to Vietnamese.
</bodyText>
<subsubsectionHeader confidence="0.678088">
3.3.2 Negative words
</subsubsectionHeader>
<bodyText confidence="0.993210333333333">
Translating structures with negative words, such
as &amp;quot;jamais&amp;quot; _ &amp;quot;never&amp;quot; _ &amp;quot;� ,
&amp;quot;rien&amp;quot; _ &amp;quot;nothing&amp;quot; _ &amp;quot; , etc. into
Vietnamese is problematic. A straightforward
application of the generic engine might yield
exactly the opposite meaning, eg.:
</bodyText>
<footnote confidence="0.7369115">
(22) Je / ne dors jamais. (I never sleep.)
5 We recall that in Vietnamese the adverb &amp;quot; &amp;quot; is
inserted before the verb to form a negation.
3.3.3 Wh-movements
</footnote>
<note confidence="0.8511405">
The right sentence should be Vietnamese wh-questions do not need a wh-
movement as in English:
</note>
<bodyText confidence="0.9981662">
The same problem was known in French-
English translation, and cured in GBGEN by
realizing the English sentence not in negative
but in affirmative form. This solution does not
work for Vietnamese:
</bodyText>
<listItem confidence="0.978882">
(25) Je / n&apos;écris rien. (I write nothing.)
(26) * .
(27) Tu / ne dois jamais / courir trop vite.
(You must never run too fast.)
</listItem>
<bodyText confidence="0.993807733333333">
The right translations for (25) and (27) should
be, respectively:
Our solution here is to keep the verb in the
negative form, and use the &amp;quot;indefinite&amp;quot;
counterparts &amp;quot;❛ &amp;quot; , etc. of the
expressions &amp;quot;❣ &amp;quot;❣ ,
etc6. The structure of eg. the translation (24) is
thus
where &amp;quot;❣ and &amp;quot;❛ are two different
constituents. Note however that this solution
gives a less good but still acceptable translation
of (27), that of
. We could have done better, but at
the cost of much more complicated
programming.
</bodyText>
<listItem confidence="0.9749535">
(32) Whom have you seen ?
(33) (&amp;quot;whom&amp;quot;=&amp;quot;ai&amp;quot;)
</listItem>
<bodyText confidence="0.99804875">
We therefore block the wh-movement procedure
in GBGEN in constructing wh-questions.
However, there is a case where a movement is
preferred and realized, that of why7.
</bodyText>
<listItem confidence="0.86307125">
(34) Pourquoi il ne dort pas ? (Why doesn&apos;t
he sleep?)
(Acceptable)
(Preferred)
</listItem>
<subsubsectionHeader confidence="0.873566">
3.3.4 Relative clauses
</subsubsectionHeader>
<bodyText confidence="0.977128866666667">
To form a relative clause in Vietnamese, one can
generally add an optional complementizer &amp;quot; &amp;quot;
before the clause. We decide to put &amp;quot; &amp;quot; for
subject relative clauses, and &amp;quot; &amp;quot; for object
relative clauses, as it is more acceptable to drop
&amp;quot; &amp;quot; in the former case than in the latter.
(37) The student / who has seen the cat / is
John.
(39) The student / whom you see / is John.
The translation of adjunct relative clauses which
begin with a preposition from French or English
into Vietnamese is difficult. In general, we need
to keep the preposition at the end of the relative
clause, rather than move it to the beginning as
GBGEN proposes:
</bodyText>
<figure confidence="0.600289166666667">
(41) La fille / avec qui John parle / est Mary.
(42) The girl / with whom John talks / is
Mary.
(43) *
. (I do not
write anything.)
</figure>
<footnote confidence="0.921351333333333">
7 This is done by the AdvP location procedure (see
section 3.3.1).
8 If &amp;quot; &amp;quot; is dropped, it is a sort of garden-path
sentence. But this is common in Vietnamese, and
may be an interesting subject to study.
6 Just as &amp;quot;anything&amp;quot; to &amp;quot;nothing&amp;quot; in English.
</footnote>
<bodyText confidence="0.84126375">
At the moment, we cannot deal with cases where
a paraphrase is needed for a correct translation.
Knowing that &amp;quot;without&amp;quot;=&amp;quot;❅
&amp;quot;,
(44) The girl / without whom John cannot
work / is Mary.
(The girl / that if she is not there, John
cannot work / is Mary.)
</bodyText>
<sectionHeader confidence="0.999599" genericHeader="method">
4 Results
</sectionHeader>
<bodyText confidence="0.999907738095238">
The implemented generation module for
Vietnamese can realize almost all structures that
can be generated from the intermediate PSSs.
Many of them are of course not yet perfect, but a
French-Vietnamese translation test on a sample
of French sentences of many different syntactic
structures gave encouraging results. We did not
consider tests on English-Vietnamese
translation, because the English analysis module
in ITS3 has not yet been well developed.
We have not been able to do a large-scale test on
real corpora yet, because our lexicons are still
small (about 400 entries for each bilingual
lexicon, among them many functional words
(prepositions, adverbs, pronouns, conjunctions)).
However, tests are not necessarily restricted by
the size of the lexicons, because if a source
language word is not found in the bilingual
lexicon, it is still retained in the PSS during the
lexical transfer phase. This word will then
appear in the target language sentence exactly at
the position of its supposed translation.
As it is well known, lexicon building requires
huge investments on human work and time. One
can use methods of (semi-)automatic acquisition
of dictionary resources (see eg., Doan-Nguyen,
1998) to obtain quickly a large draft of
necessary lexicons, provided that such resources
(eg. a French-Vietnamese dictionary text file)
exist. In the worst case, a human will verify and
complete this draft, but in general this is still
much cheaper than developing a lexicon from
scratch. We did not, unfortunately, have any of
these resources. Nevertheless, we profited much
from a French-English lexicon draft extracted
from ITS3&apos;s lexicons: much lexical information
in its entries can be reused in the corresponding
Vietnamese entries (eg. the part-of-speech, the
verb theta grid). Moreover, English translations
of a French word, as well as French translations
of an English word, help to choose correct
corresponding Vietnamese translations.
</bodyText>
<sectionHeader confidence="0.999776" genericHeader="method">
5 Discussion
</sectionHeader>
<bodyText confidence="0.999980527272728">
Although not totally perfect, ITS3, and in
particular GBGEN, show to be good systems for
multilingual MT. They have a solid linguistic
theoretical base, a modular computational
design, and a surprising performance. Besides
the problems presented in this paper, we find
convenient to use many available procedure
templates, such as PP construction, movements
and bindings. In particular, ITS3 is able to do
robust, high-quality, and broad-coverage
syntactic analysis for French. Our experience
can be seen as a test on integrating an &amp;quot;exotic&amp;quot;
language into the sytem.
As we have shown above, many difficulties in
implementing the generation module for
Vietnamese stem from &amp;quot;mismatches&amp;quot; between
Vietnamese grammatical notions and the model
of the generic engine GBGEN. It is largely
agreed that designing a generic, flexible, and
efficient system for pratical applications of
multilingual generation and MT is a very
difficult problem. Our experience suggests that
in a principle-based generation system such as
GBGEN, the parameterized modules, which
contain language-specific and lexicalized
properties, should be of more importance. The
flexibility of a generic system consists in
designing good &amp;quot;slots&amp;quot; so that modules for a
new language can be plugged in systematically
and conveniently.
As discussed in section 2, a declarative approach
may be very beneficial for system development,
including genericity and flexibility. The
programming paradigm is also an important
factor. The LATL has recently begun to
reengineer ITS3 in an object-oriented language,
which facilitates the development of the system
while still guanratees its performance9.
helpful comments on earlier versions of this
paper, and finally, Anne-Marie Di Sciullo for
her support to this research.
Apart from the generation phase, the quality of
an MT system depends heavily on the analysis
modules. The construction of the PSS from the
syntactic analysis of the input sentence is of
crucial importance. We find that this is a real
bottleneck in ITS3: in many cases, despite a
good syntactic analysis, the translation fails
because of a bad PSS construction. PSS
construction is obviously a very difficult task, as
it is in fact a kind of translation, that goes from a
syntactic structure into a logical formalism. See
eg. Alshawi (1992) for a similar task, ie.
translating English sentences into a logical
representation.
</bodyText>
<sectionHeader confidence="0.999882" genericHeader="conclusions">
6 Conclusions
</sectionHeader>
<bodyText confidence="0.999976909090909">
With the Vietnamese generation module and the
lexicons developed, we have implemented first
prototypes of French-Vietnamese and English-
Vietnamese MT. As we know best, this is the
first time a French-Vietnamese MT prototype is
realized.
Our future work is to develop the lexicons,
improve the implemented module, and test it on
real corpora for a more precise evaluation. We
also envisage doing Vietnamese GB-based
analysis in the framework of ITS3.
</bodyText>
<sectionHeader confidence="0.998021" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.99975575">
I am grateful to the Agence Universitaire de la
Francophonie whose scholarship allowed me to
carry out this project. This research has also
been supported by the Social Sciences and
Humanities Research Council of Canada (grant
# 412-97-0016), for the &amp;quot;Asymmetry and
Natural Language Processing Project&amp;quot;, awarded
to professor Anne-Marie Di Sciullo, in the
Département de Linguistique at Université du
Québec à Montréal (UQAM). Eric Wehrli,
Thierry Etchegoyhen, Luka Nerima, Anne
Vandeventer, and all members of LATL,
reserved for me precious help and friendship
during my work in Geneva. I would like also to
thank Eric Wehrli, Nicolas Nicolov, Nikolay
Vazov, and the EWNLG-01 reviewers for
</bodyText>
<page confidence="0.444705">
9 Eric Wehrli, personal communication.
</page>
<sectionHeader confidence="0.989648" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999799838709677">
Berwick R., Abney S., &amp; Tenny C., editors (1991)
Principle-Based Parsing: Computation and
Psycholinguistics. Kluwer Academic Publishers.
Alshawi, H. (1992) The Core Language Engine. MIT
Press.
Doan-Nguyen H. (1993) The English-Vietnamese
Translation Machine-88. Proceedings of
HoChiMinh City Mathematics Consortium -1993,
HoChiMinh City, pp. 217-222.
Doan-Nguyen H. (1998) Accumulation of Lexical
Sets: Acquisition of Dictionary Resources and
Production of New Lexical Sets. Proceedings of
the 17th International Conference on
Computational Linguistics and 36th Annual
Meeting of the Association for Computational
Linguistics, COLING-ACL &apos;98, Montreal, pp 330-
335.
Dorr B. (1993) Interlingual Machine Translation: A
Parameterized Approach. Artificial Intelligence,
Vol. 63, N. 1-2, pp. 429-492.
Emele M., Heid U., Moma S. &amp; Zajac R. (1992)
Interactions between Linguistic Constraints:
Procedural vs. Declarative Approaches. Machine
Translation, Vol. 7, N. 1-2, pp. 61-98.
Etchegoyhen T. &amp; Wehrli E. (1998) Traduction
automatique et structures d&apos;interface. Actes de la
Conférence sur le Traitement Automatique du
Langage Naturel, TALN &apos;98, Paris.
Etchegoyhen T. &amp; Wehrle, T. (1998) Overview of
GBGen. Proceedings of the 9th International
Workshop on Natural Language Generation,
Niagara-on-the-lake, Canada.
Etchegoyhen T., Wehrle T., Mengon J. &amp;
Vandeventer A. (1999) Une approche efficace à la
génération syntaxique. Le système GBGen. Actes
du 2ème colloque francophone sur la Génération
Automatique de Textes, GAT &apos;99, Grenoble.
Gdaniec C. (1998) Lexical Choice and Syntactic
Generation in a Transfer System: Transformations
in the New LMT English-German System. In
Farwell D. &amp; al (ed.) Machine Translation and the
Information Soup, Third Conference of the
Association for Machine Translation in the
Americas, AMTA &apos;98, Langhorne, PA, USA, pp.
408-420.
Haegeman L. (1994) Introduction to Government &amp;
Binding Theory, 2nd Edition. Blackwell, Oxford
(UK) and Cambridge (USA), 701 p.
Hutchins J. &amp; Sommers L. (1992) An Introduction to
Machine Translation. Academic Press, London.
L&apos;haire S., Mengon J. &amp; Laenzlinger C. (2000) Outils
génériques et transfert hybride pour la traduction
automatique sur Internet. Actes de la Conférence
sur le Traitement Automatique du Langage
Naturel, TALN &apos;2000, Lausanne.
Nicolov N. &amp; Mellish C. (2000) PROTECTOR:
Efficient Generation with Lexicalized Grammars.
Recent Advances in Natural Language Processing,
John Benjamins, pp. 221-243.
Wehrli, E. (1992) The IPS system. Proceedings of the
14th International Conference on Computational
Linguistics, COLING &apos;92, Nantes, pp. 870-874.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.207375">
<title confidence="0.86998575">of Vietnamese for French-Vietnamese and Vietnamese Machine Translation DOAN-NGUYEN Groupe de recherche sur l&apos;asymétrie des langues</title>
<address confidence="0.636792">Université du Québec à Montréal, H3C-3P8,</address>
<email confidence="0.956462">E-mail:</email>
<affiliation confidence="0.693621">Laboratoire d&apos;Analyse et de Technologie du Langage Faculté des Lettres, Université de</affiliation>
<address confidence="0.856019">2, rue de Candolle, CH-1211 Genève 4, Switzerland</address>
<abstract confidence="0.999823807692308">This paper presents the implementation of the Vietnamese generation module in ITS3, a multilingual machine translation (MT) system based on the Government &amp; Binding (GB) theory. Despite well-designed mechanisms of the system, it turned out that the task of generating Vietnamese posed non-trivial problems. We therefore had to deviate from the generic code and make new design and implementation in many important cases. By developing corresponding bilingual lexicons, we obtained prototypes of French-Vietnamese and English-Vietnamese MT, the former being the first known prototype of this kind. Our experience suggests that in a principle-based generation system, the parameterized modules, which contain language-specific and lexicalized properties, deserve more attention, and the generic mechanisms should be flexible enough to facilitate the integration of these modules.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R Berwick</author>
</authors>
<title>Principle-Based Parsing: Computation and Psycholinguistics.</title>
<date>1991</date>
<editor>Abney S., &amp; Tenny C., editors</editor>
<publisher>Kluwer Academic Publishers.</publisher>
<marker>Berwick, 1991</marker>
<rawString>Berwick R., Abney S., &amp; Tenny C., editors (1991) Principle-Based Parsing: Computation and Psycholinguistics. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Alshawi</author>
</authors>
<title>The Core Language Engine.</title>
<date>1992</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="25035" citStr="Alshawi (1992)" startWordPosition="4129" endWordPosition="4130">aper, and finally, Anne-Marie Di Sciullo for her support to this research. Apart from the generation phase, the quality of an MT system depends heavily on the analysis modules. The construction of the PSS from the syntactic analysis of the input sentence is of crucial importance. We find that this is a real bottleneck in ITS3: in many cases, despite a good syntactic analysis, the translation fails because of a bad PSS construction. PSS construction is obviously a very difficult task, as it is in fact a kind of translation, that goes from a syntactic structure into a logical formalism. See eg. Alshawi (1992) for a similar task, ie. translating English sentences into a logical representation. 6 Conclusions With the Vietnamese generation module and the lexicons developed, we have implemented first prototypes of French-Vietnamese and EnglishVietnamese MT. As we know best, this is the first time a French-Vietnamese MT prototype is realized. Our future work is to develop the lexicons, improve the implemented module, and test it on real corpora for a more precise evaluation. We also envisage doing Vietnamese GB-based analysis in the framework of ITS3. Acknowledgements I am grateful to the Agence Univer</context>
</contexts>
<marker>Alshawi, 1992</marker>
<rawString>Alshawi, H. (1992) The Core Language Engine. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Doan-Nguyen</author>
</authors>
<title>The English-Vietnamese Translation Machine-88.</title>
<date>1993</date>
<booktitle>Proceedings of HoChiMinh City Mathematics Consortium -1993, HoChiMinh City,</booktitle>
<pages>217--222</pages>
<marker>Doan-Nguyen, 1993</marker>
<rawString>Doan-Nguyen H. (1993) The English-Vietnamese Translation Machine-88. Proceedings of HoChiMinh City Mathematics Consortium -1993, HoChiMinh City, pp. 217-222.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Doan-Nguyen</author>
</authors>
<title>Accumulation of Lexical Sets: Acquisition of Dictionary Resources and Production of New Lexical Sets.</title>
<date>1998</date>
<booktitle>Proceedings of the 17th International Conference on Computational Linguistics and 36th Annual Meeting of the Association for Computational Linguistics, COLING-ACL &apos;98,</booktitle>
<pages>330--335</pages>
<location>Montreal,</location>
<contexts>
<context position="21971" citStr="Doan-Nguyen, 1998" startWordPosition="3662" endWordPosition="3663">ingual lexicon, among them many functional words (prepositions, adverbs, pronouns, conjunctions)). However, tests are not necessarily restricted by the size of the lexicons, because if a source language word is not found in the bilingual lexicon, it is still retained in the PSS during the lexical transfer phase. This word will then appear in the target language sentence exactly at the position of its supposed translation. As it is well known, lexicon building requires huge investments on human work and time. One can use methods of (semi-)automatic acquisition of dictionary resources (see eg., Doan-Nguyen, 1998) to obtain quickly a large draft of necessary lexicons, provided that such resources (eg. a French-Vietnamese dictionary text file) exist. In the worst case, a human will verify and complete this draft, but in general this is still much cheaper than developing a lexicon from scratch. We did not, unfortunately, have any of these resources. Nevertheless, we profited much from a French-English lexicon draft extracted from ITS3&apos;s lexicons: much lexical information in its entries can be reused in the corresponding Vietnamese entries (eg. the part-of-speech, the verb theta grid). Moreover, English t</context>
</contexts>
<marker>Doan-Nguyen, 1998</marker>
<rawString>Doan-Nguyen H. (1998) Accumulation of Lexical Sets: Acquisition of Dictionary Resources and Production of New Lexical Sets. Proceedings of the 17th International Conference on Computational Linguistics and 36th Annual Meeting of the Association for Computational Linguistics, COLING-ACL &apos;98, Montreal, pp 330-335.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Dorr</author>
</authors>
<title>Interlingual Machine Translation: A Parameterized Approach.</title>
<date>1993</date>
<journal>Artificial Intelligence,</journal>
<volume>63</volume>
<pages>1--2</pages>
<contexts>
<context position="6135" citStr="Dorr (1993)" startWordPosition="948" endWordPosition="949">CP [TP [VP aux [VP aux [VP sell [DP the [NP house]]i]]]]] (b) [CP [TP [DP the [NP house]]i [T&apos; [VP aux [VP aux [VP sell [DP ei]]]]]]] (c) [CP [TP [DP the [NP house]]i [T&apos; [VP has [VP been [VP sold [DP ei]]]]]]] (d) The house has been sold. Note that ITS3 does only lexical, and not structural, transfer. This approach can therefore be considered as half transfer half interlingual. It is not the purpose of this paper to discuss the pros and cons of the transfer and interlingual approaches in MT. See eg. Gdaniec (1998) for discussions about advantages of a particular transfer-based MT system, and Dorr (1993) for an interlingual one. The latter, also based on GB, concentrates on treating mismatches across languages, an issue less considered in ITS3. It needs however to use very complex representations for its interlingual approach, hence is not likely to become a practical system. As for the specification issue, ITS3 chooses to be purely procedural. All generic engines and language-specific modules are written in Modula-2. Procedure templates are designed so that one can fill in language-specific parameters when adding a new language. However, this is not always straightforward, as one will see in</context>
</contexts>
<marker>Dorr, 1993</marker>
<rawString>Dorr B. (1993) Interlingual Machine Translation: A Parameterized Approach. Artificial Intelligence, Vol. 63, N. 1-2, pp. 429-492.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Emele</author>
<author>U Heid</author>
<author>S Moma</author>
<author>R Zajac</author>
</authors>
<title>Interactions between Linguistic Constraints: Procedural vs. Declarative Approaches.</title>
<date>1992</date>
<journal>Machine Translation,</journal>
<volume>7</volume>
<pages>1--2</pages>
<marker>Emele, Heid, Moma, Zajac, 1992</marker>
<rawString>Emele M., Heid U., Moma S. &amp; Zajac R. (1992) Interactions between Linguistic Constraints: Procedural vs. Declarative Approaches. Machine Translation, Vol. 7, N. 1-2, pp. 61-98.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Etchegoyhen</author>
<author>E Wehrli</author>
</authors>
<title>Traduction automatique et structures d&apos;interface.</title>
<date>1998</date>
<booktitle>Actes de la Conférence sur le Traitement Automatique du Langage Naturel, TALN &apos;98,</booktitle>
<location>Paris.</location>
<contexts>
<context position="2442" citStr="Etchegoyhen &amp; Wehrli, 1998" startWordPosition="345" endWordPosition="348"> Langage (LATL), University of Geneva. Together with the generation module, we construct bilingual lexicons, and thus obtain prototypes of French-Vietnamese and EnglishVietnamese MT. As Vietnamese is very different from European languages, the implementation of the generation module for Vietnamese based on the generic mechanisms of ITS3 poses non-trivial problems. We present here some main problems and their solutions, such as the construction of Vietnamese noun phrases (NPs), verb phrases (VPs), adverbial phrases (AdvPs), relative clauses, etc. 2 Brief description of ITS3 ITS3 (Wehrli, 1992; Etchegoyhen &amp; Wehrli, 1998; L&apos;haire &amp; al, 2000) can now translate from French to English and vice versa. Modules for other languages such as German, Italian, are under development. ITS3 is a principle-based system, linguistically inspired by the Government &amp; Binding (GB) theory. (See eg. Haegeman (1994) for an introduction to GB, Berwick &amp; al (1991) for principle-based systems). The system chooses the classical analysis-transfer-generation approach of MT (see Hutchins &amp; Sommers, 1992). ITS3 works on single isolated sentences. A sentence in the source language is analyzed into a logicolinguistic structure, called pseudo</context>
<context position="3816" citStr="Etchegoyhen &amp; Wehrli, 1998" startWordPosition="559" endWordPosition="562">arget language. By default, ITS3 gives a unique solution, the best one. Let&apos;s take an example of French-English translation to illustrate the process. The analysis phase consists of two steps: GB-based syntax analysis and PSS construction. Syntax analysis is carried out by the IPS parser (Wehrli, 1992), which builds the X-bar structure of the sentence, using many filtering constraints (on thematic roles, on cases, etc.) to reduce overgeneration. (1) La maison a été vendue. (2) [TP [DP la [NP maison]]i [T&apos; a [VP été [VP vendue [DP ei]]]]] A PSS is then derived from the syntax analysis results (Etchegoyhen &amp; Wehrli, 1998). Components of the sentence are represented in corresponding frame-liked structures. For example, a clause gives rise to a PSS of type CLS, which contains the main verb or adjective (the Predicate slot) and other information on tense, mood, voice, etc., as well as the PSS&apos;s of its arguments and adjuncts (the Satellites). Similarly, a noun phrase gives rise to a PSS of type DPS, which contains, besides the main noun (the Property slot), its number, gender, referential index for binding resolution, etc. A PSS thus contains abstract linguistic values for &amp;quot;closed&amp;quot; features (tense, mood, voice, nu</context>
</contexts>
<marker>Etchegoyhen, Wehrli, 1998</marker>
<rawString>Etchegoyhen T. &amp; Wehrli E. (1998) Traduction automatique et structures d&apos;interface. Actes de la Conférence sur le Traitement Automatique du Langage Naturel, TALN &apos;98, Paris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Etchegoyhen</author>
<author>T Wehrle</author>
</authors>
<title>Overview of GBGen.</title>
<date>1998</date>
<booktitle>Proceedings of the 9th International Workshop on Natural Language Generation,</booktitle>
<location>Niagara-on-the-lake, Canada.</location>
<contexts>
<context position="5139" citStr="Etchegoyhen &amp; Wehrle, 1998" startWordPosition="776" endWordPosition="779">PSS[{ } CLS[ Mood : real Tense : E = S InfoFunction : categorical Modality : undefined Aspect : (non progressive, perfective) Voice : passive Causative : not causative Negation : not negated Utterance type : declaration Predicate : vendre ]CLS Satellites { PSS[{ } Theta role : theme DPS[ Property : maison Operator : the Number : singular Gender : feminine Ref. index : i ]DPS ]PSS } ]PSS In the lexical transfer phase, the lexical units in the PSS are replaced by those in the target language, using frequency data for translation selection. In the generation phase, a generic engine called GBGEN (Etchegoyhen &amp; Wehrle, 1998; Etchegoyhen &amp; al, 1999) cooperates with language-specific modules to construct the output from the PSS in three steps. First, Dstructure generation maps the PSS into an X-bar structure in a top-down fashion (see 3a). Next, S-structure generation carries out movements and bindings (3b). Finally, morphological realization is done (3c), and the result is output, as in (3d). (3) (a) [CP [TP [VP aux [VP aux [VP sell [DP the [NP house]]i]]]]] (b) [CP [TP [DP the [NP house]]i [T&apos; [VP aux [VP aux [VP sell [DP ei]]]]]]] (c) [CP [TP [DP the [NP house]]i [T&apos; [VP has [VP been [VP sold [DP ei]]]]]]] (d) </context>
</contexts>
<marker>Etchegoyhen, Wehrle, 1998</marker>
<rawString>Etchegoyhen T. &amp; Wehrle, T. (1998) Overview of GBGen. Proceedings of the 9th International Workshop on Natural Language Generation, Niagara-on-the-lake, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Etchegoyhen</author>
<author>T Wehrle</author>
<author>J Mengon</author>
<author>A Vandeventer</author>
</authors>
<title>Une approche efficace à la génération syntaxique.</title>
<date>1999</date>
<booktitle>Le système GBGen. Actes du 2ème colloque francophone sur la Génération Automatique de Textes, GAT &apos;99,</booktitle>
<location>Grenoble.</location>
<marker>Etchegoyhen, Wehrle, Mengon, Vandeventer, 1999</marker>
<rawString>Etchegoyhen T., Wehrle T., Mengon J. &amp; Vandeventer A. (1999) Une approche efficace à la génération syntaxique. Le système GBGen. Actes du 2ème colloque francophone sur la Génération Automatique de Textes, GAT &apos;99, Grenoble.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Gdaniec</author>
</authors>
<title>Lexical Choice and Syntactic Generation in a Transfer System: Transformations in the New LMT English-German System.</title>
<date>1998</date>
<booktitle>Machine Translation and the Information Soup, Third Conference of the Association for Machine Translation in the Americas, AMTA &apos;98,</booktitle>
<pages>408--420</pages>
<editor>In Farwell D. &amp; al (ed.)</editor>
<location>Langhorne, PA, USA,</location>
<contexts>
<context position="6044" citStr="Gdaniec (1998)" startWordPosition="935" endWordPosition="936">nally, morphological realization is done (3c), and the result is output, as in (3d). (3) (a) [CP [TP [VP aux [VP aux [VP sell [DP the [NP house]]i]]]]] (b) [CP [TP [DP the [NP house]]i [T&apos; [VP aux [VP aux [VP sell [DP ei]]]]]]] (c) [CP [TP [DP the [NP house]]i [T&apos; [VP has [VP been [VP sold [DP ei]]]]]]] (d) The house has been sold. Note that ITS3 does only lexical, and not structural, transfer. This approach can therefore be considered as half transfer half interlingual. It is not the purpose of this paper to discuss the pros and cons of the transfer and interlingual approaches in MT. See eg. Gdaniec (1998) for discussions about advantages of a particular transfer-based MT system, and Dorr (1993) for an interlingual one. The latter, also based on GB, concentrates on treating mismatches across languages, an issue less considered in ITS3. It needs however to use very complex representations for its interlingual approach, hence is not likely to become a practical system. As for the specification issue, ITS3 chooses to be purely procedural. All generic engines and language-specific modules are written in Modula-2. Procedure templates are designed so that one can fill in language-specific parameters </context>
</contexts>
<marker>Gdaniec, 1998</marker>
<rawString>Gdaniec C. (1998) Lexical Choice and Syntactic Generation in a Transfer System: Transformations in the New LMT English-German System. In Farwell D. &amp; al (ed.) Machine Translation and the Information Soup, Third Conference of the Association for Machine Translation in the Americas, AMTA &apos;98, Langhorne, PA, USA, pp. 408-420.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Haegeman</author>
</authors>
<title>Introduction to Government &amp; Binding Theory, 2nd Edition.</title>
<date>1994</date>
<volume>701</volume>
<pages>p.</pages>
<location>Blackwell, Oxford</location>
<contexts>
<context position="2720" citStr="Haegeman (1994)" startWordPosition="390" endWordPosition="391">ietnamese based on the generic mechanisms of ITS3 poses non-trivial problems. We present here some main problems and their solutions, such as the construction of Vietnamese noun phrases (NPs), verb phrases (VPs), adverbial phrases (AdvPs), relative clauses, etc. 2 Brief description of ITS3 ITS3 (Wehrli, 1992; Etchegoyhen &amp; Wehrli, 1998; L&apos;haire &amp; al, 2000) can now translate from French to English and vice versa. Modules for other languages such as German, Italian, are under development. ITS3 is a principle-based system, linguistically inspired by the Government &amp; Binding (GB) theory. (See eg. Haegeman (1994) for an introduction to GB, Berwick &amp; al (1991) for principle-based systems). The system chooses the classical analysis-transfer-generation approach of MT (see Hutchins &amp; Sommers, 1992). ITS3 works on single isolated sentences. A sentence in the source language is analyzed into a logicolinguistic structure, called pseudo-semantic structure (PSS). After a lexical transfer phase, this PSS is passed to the generation phase, which finally produces the sentence in the target language. By default, ITS3 gives a unique solution, the best one. Let&apos;s take an example of French-English translation to illu</context>
</contexts>
<marker>Haegeman, 1994</marker>
<rawString>Haegeman L. (1994) Introduction to Government &amp; Binding Theory, 2nd Edition. Blackwell, Oxford (UK) and Cambridge (USA), 701 p.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Hutchins</author>
<author>L Sommers</author>
</authors>
<title>An Introduction to Machine Translation.</title>
<date>1992</date>
<publisher>Academic Press,</publisher>
<location>London.</location>
<contexts>
<context position="2905" citStr="Hutchins &amp; Sommers, 1992" startWordPosition="414" endWordPosition="417">un phrases (NPs), verb phrases (VPs), adverbial phrases (AdvPs), relative clauses, etc. 2 Brief description of ITS3 ITS3 (Wehrli, 1992; Etchegoyhen &amp; Wehrli, 1998; L&apos;haire &amp; al, 2000) can now translate from French to English and vice versa. Modules for other languages such as German, Italian, are under development. ITS3 is a principle-based system, linguistically inspired by the Government &amp; Binding (GB) theory. (See eg. Haegeman (1994) for an introduction to GB, Berwick &amp; al (1991) for principle-based systems). The system chooses the classical analysis-transfer-generation approach of MT (see Hutchins &amp; Sommers, 1992). ITS3 works on single isolated sentences. A sentence in the source language is analyzed into a logicolinguistic structure, called pseudo-semantic structure (PSS). After a lexical transfer phase, this PSS is passed to the generation phase, which finally produces the sentence in the target language. By default, ITS3 gives a unique solution, the best one. Let&apos;s take an example of French-English translation to illustrate the process. The analysis phase consists of two steps: GB-based syntax analysis and PSS construction. Syntax analysis is carried out by the IPS parser (Wehrli, 1992), which build</context>
</contexts>
<marker>Hutchins, Sommers, 1992</marker>
<rawString>Hutchins J. &amp; Sommers L. (1992) An Introduction to Machine Translation. Academic Press, London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S L&apos;haire</author>
<author>J Mengon</author>
<author>C Laenzlinger</author>
</authors>
<title>Outils génériques et transfert hybride pour la traduction automatique sur Internet.</title>
<date>2000</date>
<booktitle>Actes de la Conférence sur le Traitement Automatique du Langage Naturel, TALN &apos;2000,</booktitle>
<location>Lausanne.</location>
<marker>L&apos;haire, Mengon, Laenzlinger, 2000</marker>
<rawString>L&apos;haire S., Mengon J. &amp; Laenzlinger C. (2000) Outils génériques et transfert hybride pour la traduction automatique sur Internet. Actes de la Conférence sur le Traitement Automatique du Langage Naturel, TALN &apos;2000, Lausanne.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Nicolov</author>
<author>C Mellish</author>
</authors>
<title>PROTECTOR: Efficient Generation with Lexicalized Grammars.</title>
<date>2000</date>
<booktitle>Recent Advances in Natural Language Processing, John Benjamins,</booktitle>
<pages>221--243</pages>
<contexts>
<context position="7002" citStr="Nicolov &amp; Mellish, 2000" startWordPosition="1082" endWordPosition="1085">kely to become a practical system. As for the specification issue, ITS3 chooses to be purely procedural. All generic engines and language-specific modules are written in Modula-2. Procedure templates are designed so that one can fill in language-specific parameters when adding a new language. However, this is not always straightforward, as one will see in the integration of Vietnamese below. In general, any development requires to read, understand, and often modify some parts of the huge code. This is an important reason why a declarative approach would be preferred (see eg. Emele &amp; al, 1992; Nicolov &amp; Mellish, 2000). Unfortunately, we do not have at our disposal any declarative system with high-quality French analysis. Also, as best as we know, there are no parallel French-Vietnamese or EnglishVietnamese corpora built so far to think of statistical or example-based MT approaches. ITS3 is one among few systems that can do French syntax analysis with large lexical and grammatical coverage. It can therefore serve our main purpose to develop a prototype of FrenchVietnamese MT in a short term. 3 Generation of Vietnamese In this section, we present the problems and our solutions for constructing Vietnamese NPs</context>
</contexts>
<marker>Nicolov, Mellish, 2000</marker>
<rawString>Nicolov N. &amp; Mellish C. (2000) PROTECTOR: Efficient Generation with Lexicalized Grammars. Recent Advances in Natural Language Processing, John Benjamins, pp. 221-243.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Wehrli</author>
</authors>
<title>The IPS system.</title>
<date>1992</date>
<booktitle>Proceedings of the 14th International Conference on Computational Linguistics, COLING &apos;92,</booktitle>
<pages>870--874</pages>
<location>Nantes,</location>
<contexts>
<context position="2414" citStr="Wehrli, 1992" startWordPosition="343" endWordPosition="344">Technologie du Langage (LATL), University of Geneva. Together with the generation module, we construct bilingual lexicons, and thus obtain prototypes of French-Vietnamese and EnglishVietnamese MT. As Vietnamese is very different from European languages, the implementation of the generation module for Vietnamese based on the generic mechanisms of ITS3 poses non-trivial problems. We present here some main problems and their solutions, such as the construction of Vietnamese noun phrases (NPs), verb phrases (VPs), adverbial phrases (AdvPs), relative clauses, etc. 2 Brief description of ITS3 ITS3 (Wehrli, 1992; Etchegoyhen &amp; Wehrli, 1998; L&apos;haire &amp; al, 2000) can now translate from French to English and vice versa. Modules for other languages such as German, Italian, are under development. ITS3 is a principle-based system, linguistically inspired by the Government &amp; Binding (GB) theory. (See eg. Haegeman (1994) for an introduction to GB, Berwick &amp; al (1991) for principle-based systems). The system chooses the classical analysis-transfer-generation approach of MT (see Hutchins &amp; Sommers, 1992). ITS3 works on single isolated sentences. A sentence in the source language is analyzed into a logicolinguis</context>
</contexts>
<marker>Wehrli, 1992</marker>
<rawString>Wehrli, E. (1992) The IPS system. Proceedings of the 14th International Conference on Computational Linguistics, COLING &apos;92, Nantes, pp. 870-874.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>