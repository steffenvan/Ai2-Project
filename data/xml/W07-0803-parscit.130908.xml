<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000007">
<title confidence="0.985378">
Person Name Entity Recognition for Arabic
</title>
<author confidence="0.982861">
Khaled Shaalan
</author>
<affiliation confidence="0.935012">
Institute of Informatics
The British University in Dubai
</affiliation>
<address confidence="0.686682">
P O Box 502216, Dubai, UAE
</address>
<email confidence="0.988017">
Khaled.shaalan@buid.ac.ae
</email>
<sectionHeader confidence="0.995365" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99979852173913">
Named entity recognition (NER) is nowa-
days an important task, which is responsi-
ble for the identification of proper names in
text and their classification as different
types of named entity such as people, loca-
tions, and organizations. In this paper, we
present our attempt at the recognition and
extraction of the most important proper
name entity, that is, the person name, for
the Arabic language. We developed the
system, Person Name Entity Recognition
for Arabic (PERA), using a rule-based ap-
proach. The system consists of a lexicon, in
the form of gazetteer name lists, and a
grammar, in the form of regular expres-
sions, which are responsible for recogniz-
ing person name entities. The PERA sys-
tem is evaluated using a corpus that is
tagged in a semi-automated way. The sys-
tem performance results achieved were sat-
isfactory and confirm to the targets set
forth for the precision, recall, and f-
measure.
</bodyText>
<sectionHeader confidence="0.999337" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.994998428571429">
The recognition and classification of proper names
in text (e.g. persons, locations, and organizations)
has recently become considered of major impor-
tance in Natural Language Processing (NLP) as it
plays a significant role in various types of NLP
applications, especially in Information Extraction,
Information Retrieval, Machine Translation, Syn-
</bodyText>
<page confidence="0.992972">
17
</page>
<author confidence="0.657372">
Hafsa Raza
</author>
<affiliation confidence="0.636498">
Institute of Informatics
The British University in Dubai
</affiliation>
<address confidence="0.298083">
P O Box 502216, Dubai, UAE
</address>
<email confidence="0.813719">
hafsa.raza@gmail.com
</email>
<bodyText confidence="0.994230942857143">
tactic Parsing/Chunking, Question-Answering,
among others. The valuable information in text is
usually located around proper names, to collect this
information it should be found first (Abuleil, 2004;
Chinchor, 1998). In our presentation, we will con-
centrate on the role of NER in Information Extrac-
tion (IE). IE is the NLP task that retrieves relevant
information from unstructured texts and produces
as a result a structured set of data.
This paper describes work on recognizing and
extracting the most important entities, that is, per-
son names for the Arabic language. We have
adopted the rule-based approach using linguistic
grammar-based techniques to develop PERA. This
approach provides flexibility and adaptability fea-
tures in our system and it can be easily configured
to work with different languages, NLP applications,
and domains. In order to determine the best rules
for recognition of person names, various Arabic
text corpora were analyzed. Phrases containing
person names were retrieved, the underlying pat-
tern was learned and person indicators such as ti-
tles were identified. Apart from this, person names
were extracted from the available corpora and
other resources to build up a lexicon, in the form of
gazetteer name lists, or gazetteer for short. The
various Arabic naming conventions and the person
indicators identified helped in deriving fine rules
that gave high-quality recognition of person names
in Arabic text. The recognition was done in two
cycles using first the gazetteer and then the gram-
mar rules. The PERA system is evaluated using a
reference corpus that is tagged with person names
in a semi-automated way. The achieved system
performance results were satisfactory and confirm
</bodyText>
<note confidence="0.891874">
Proceedings of the 5th Workshop on Important Unresolved Matters, pages 17–24,
Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics
</note>
<bodyText confidence="0.999688583333333">
to the targets set forth for the precision, recall, and
f-measure.
The paper is structured as follows. Section 2
presents the related work. Section 3 describes the
naming conventions of person names used in Ara-
bic language. Section 4 presents methods of data
collection used. Section 5 explains the system ar-
chitecture and implementation. Section 6 presents
the experiment performed to evaluate the system
and finally Section 7 concludes the paper,
summarizes our achievements, and highlights our
plans for future work..
</bodyText>
<sectionHeader confidence="0.999725" genericHeader="introduction">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999970727272728">
As in other NLP techniques, there are two main
approaches to NER (Toral, 2005). One is based on
linguistic knowledge, in particular grammar rules
and hence called rule-based, while the other is
based on machine learning techniques. The re-
quired resources for the knowledge approach are
usually gazetteers and rules whereas the learning
approach needs an annotated (tagged) corpus. The
linguistic knowledge-based model achieve better
results in specific domains, as the gazetteers can be
adapted very precisely, and it is able to detect
complex entities, as the rules can be tailored to
meet nearly any requirement. However, if we deal
with an unrestricted domain, it is better to choose
the machine learning approach, as it would be inef-
ficient to acquire and/or derive rules and gazetteers
in this case.
Name identification has been worked on quite
intensively for the past few years, and has been
incorporated into several products. Many research-
ers have attacked this problem in a variety of lan-
guages but only a few limited researches have fo-
cused on NER for Arabic text. This is due to the
lack of resources for Arabic NE and the limited
amount of progress made in Arabic NLP in gen-
eral.
Maloney and Niv (1998) developed TAGARAB
an Arabic name recognizer that uses a pattern-
recognition engine integrated with morphological
analysis. The role of the morphological analyzer is
to decide where a name ends and the non-name
context begins. The decision depends on the part-
of-speech of the Arabic word and/or its inflections.
Abuleil (2004) presented a technique to extract
proper names from text to build a database of
names along with their classification that can be
used in question-answering systems. This work
was done in three main stages: 1) marking the
phrases that might include names, 2) building up
graphs to represent the words in these phrases and
the relationships between them, and 3) applying
rules to generate the names, classify each of them,
and saves them in a database.
Larkey et al. (2003) have conducted a study that
showed the importance of the proper names com-
ponent in cross language tasks involving searching,
tracking, retrieving, or extracting information. In
particular, they have concluded that a combination
of static proper name (English-Arabic) translation
plus transliteration provides a successful solution.
Pouliquen et al. (2005) developed a tool for mul-
tilingual person name recognition that focuses on
the &amp;quot;Who&amp;quot; part of the analysis of large news text.
As multilingual NER is concerned, the translitera-
tion of the NE has included alternative spelling
variants where the origin language of the name is
usually not known. Several variants could also be
found in the same language.
Samy et al. (2005) has used parallel corpora in
Spanish, and Arabic and an NE tagger in Spanish
to tag the names in the Arabic corpus. For each
sentence pair aligned together, they use a simple
mapping scheme to transliterate all the words in
the Arabic sentence and return those matching with
NEs in the Spanish sentence as the NEs in Arabic.
While they report high precision and recall, it
should be noted that their approach is applicable
only when a parallel corpus is available.
Zitouni et al. (2005) has adopted a statistical ap-
proach for the entity detection and recognition
(EDR). In this work, a mention can be either
named (e.g. John Mayor), nominal (the president)
or pronominal (she, it). An entity is the aggregate
of all the mentions (of any level) which refer to
one conceptual entity. This extended definition of
the entity has proved the suitability of the ap-
proach.
</bodyText>
<sectionHeader confidence="0.709337" genericHeader="method">
3 Components of an Arabic Full Name
</sectionHeader>
<bodyText confidence="0.938296142857143">
Arabic has well-defined naming practices. The
Arabic name elements may be divided into five
main categories, Ibn Auda (2003):
1. An ism (pronounced IZM, as the final syllable
in the word dogmatism), a personal, proper
name given shortly after birth, i.e. the given
name. Examples of such names are Muham-
</bodyText>
<page confidence="0.98851">
18
</page>
<bodyText confidence="0.98514593258427">
mad [Mohammed], Musa [Moses], Ibrahim 4 Data Collection
[Abraham].
2. A kunya (pronounced COON-yah), an honor-
ific name or surname, as the father or mother
of someone; e.g., abu Da&apos;ud [the father of
David], umm Salim [the mother of Salim]. It is
meant as a prefix of respect or reverence. Mar-
ried persons (especially married ladies) are, as
a general rule, simply called by their kunya
(abu or umm + the name of their first-born
child). When using a person&apos;s full name, the
kunya precedes the personal (given) name: Abu
Yusuf Hasan [the father of Joseph, Hasan],
Umm Ja’far Aminah [the mother of Ja’far,
Aminah].
3. By a nasab (pronounced NAH-sahb), a pedi-
gree, as the son or daughter of someone; e.g.,
ibn &apos;Umar [the son of Omar], bint &apos;Abbas [the
daughter of Abbas]. The nasab follows the ism
in usage: Hasan ibn Faraj [Hasan the son of
Faraj], Sumayya bint Khubbat [Sumayya the
daughter of Khubbat]. Many historical person-
ages are more familiar to us by their nasab
than by their ism: e.g., the historian ibn
Khaldun, the traveler ibn Battuta, and the phi-
losopher ibn Sina [Avicenna].
Nasabs may be extended for several genera-
tions, as may be noted in the example below
containing two generations nasab:
Abu al-Qasim Mansur ibn al-Zabriqan ibn
Salamah al-Namari
4. A laqab (pronounced LAH-kahb), a combina-
tion of words into a byname or epithet, usually
religious, relating to nature, a descriptive, or of
some admirable quality the person had (or
would like to have); e.g., al-Rashid [the
Rightly-guided], al-Fadl [the Prominent].
Laqabs follow the ism: Harun al-Rashid
[Aaron the Rightly-guided].
5. A nisba (pronounced NISS-bah), a name de-
rived from a person&apos;s: trade or profession,
place of residence or birth, religious affiliation,
among others; e.g. al-Hallaj [the dresser of
cotton], Al Msri [The Egyptian], Islami [Is-
lamic]. Nisbas follow the ism or, if the name
contains a nasab (of however many genera-
tions), generally follow the nasab.
19
The development of the system PERA depends on
collecting dictionaries of proper nouns and their
related indicators. Techniques used for acquiring
such data to build the dictionaries include:
1. Automatic collection of person names from
annotated corpus. The person entities in the
ACE1 and Treebank corpus2 were recognized
and extracted using regular expression patterns
coded within Python scripts. Python is a strong
string processing language and widely used in
developing NLP applications and tools.
2. Identification of person indicators. Apart from
extracting the person names, these corpora
were used also to extract noun phrases contain-
ing the person names. The surrounding se-
quence of words around person names was
analyzed to identify indicators of person
names. A dictionary of these indicators was
formed which represented contextual cues of
person names.
3. Name Database provided by government or-
ganization. The person name dictionary was
also build from names collected from some or-
ganizations including Immigration Depart-
ments, Educational bodies, and Brokerage
companies.
4. Internet Resources. Names were retrieved fur-
ther from various websites3 containing lists of
Arabic names. Some of these names are Ro-
manized (written using the Latin alphabet) and
had to be transliterated from English to Arabic.
This was done using the online translation
software ‘Tarjim’ provided by Sakhr Software
Company. Notice that the variations in Roman-
ized Arabic due to the lack of one to one corre-
spondence between Arabic letters and Roman
letters have also been reflected in the translit-
eration, in reverse, from Romanized Arabic to
Arabic Script.
The raw data received had to be further proc-
essed to make it suitable for building gazetteers to
</bodyText>
<table confidence="0.7281425">
1 ACE reference: http://projects.ldc.upenn.edu/ace/
2 Treebank Corpus reference:
http://www.ircs.upenn.edu/arabic/
Both software are available to BUiD under license agreement.
3 Web sites include:
http://en.wikipedia.org/wiki/List_of_Arabic_names ,
http://www.islam4you.info/contents/names/fa.php, and
http://www.mybabynamessite.com/list.php?letter=a
</table>
<bodyText confidence="0.979910533333333">
be incorporated within the system. Some of the
automated preprocessing performed on these data
includes:
■ Removing extra whitespaces between first
and last names, or beginning and end of
names for the efficient processing of the
main gazetteer (dictionary) of complete
person names.
■ Creating separate dictionaries (i.e. first,
last and middle names) without redun-
dancy because the full names had to be
parsed. The extraction of each of these in-
dividual components from full person
names was based on Python code and
common sense.
</bodyText>
<subsectionHeader confidence="0.964678">
4.1 Typographic Variants
</subsectionHeader>
<bodyText confidence="0.9966776">
In order to be able to recognize variant Arabic
name entities, we added extra expressions in rules
and lexicon entries which lead to recognizing
named entities and their typographic variants. Ex-
amples of typographic variants include:
</bodyText>
<listItem confidence="0.993951277777778">
• The drop of hamza initially, medially, and
finally (e.g. نﺎﺴﺣا vs نﺎﺴﺣٕا - [Ehessan])
• Two dots inserted on aleph maqsura, and
two dots removed from yaa (e.g. ﻲѧﺳﻮﻣ vs
ﻰﺳﻮﻣ - [Mousa])
• Dropping the madda from the aleph (e.g.
ﺔﻔﻴﻠﺧلا vs ﺔﻔﻴﻠﺧ - [Al Khalifa])
لٓا
• Hamza insertion below vs. above aleph
(e.g. ءاﺮﺳأ vs ءاﺮﺳإ-[Essraa])
• Two dots inserted on final haa, and two
dots removed from taa marbouta (e.g. ﻪѧﻤﻃﺎﻓ
vs ﺔﻤﻃﺎﻓ-[Fatma])
• Diacritics: partial, full, or none. In the cur-
rent version we remove diacritics.
• Typing hamza followed by aleph maqsura
separately vs. together (e.g. ءﻰﻧﺎѧه vs ﺊﻧﺎѧه-
[Hani]).
</listItem>
<subsectionHeader confidence="0.84593">
4.2 Dictionaries
</subsectionHeader>
<bodyText confidence="0.98971">
The following dictionaries (gazetteers) are derived
using the aforementioned data collection tech-
niques. A total of 472617 entries were collected.
</bodyText>
<listItem confidence="0.999794944444444">
• A dictionary of full person names (263598
entries)
• A dictionary of first names (78956 entries)
• A dictionary of middle names (67595 en-
tries)
• A dictionary of last names (33517 entries)
• A dictionary of job titles (19245 entries)
• A dictionary of honorifics used before
names (173 entries)
• A dictionary of country names including
variations in spellings (923 entries)
• A dictionary of nick names and laqabs
(8169 entries)
• A dictionary of person titles (20 entries)
• a dictionary of words and phrases that act
as person indicators such as ‘ فﺮﺸѧﻤﻟا
ﻲѧﺿﺎﻳﺮﻟا’ (The sports supervisor) (421 en-
tries)
</listItem>
<sectionHeader confidence="0.938091" genericHeader="method">
5 System Architecture and Implementa-
tion
</sectionHeader>
<figureCaption confidence="0.851680666666667">
Figure 1 shows the architecture of the PERA sys-
tem. Our system has two major components: the
gazetteers and the Grammar. A filtration mecha-
nism is employed that enables revision capabilities
in the system.
Figure 1: Architecture of the System
</figureCaption>
<subsectionHeader confidence="0.902869">
5.1 Gazetteers
</subsectionHeader>
<bodyText confidence="0.997906333333333">
The main gazetteer (dictionary) of complete person
names plays the role of a fixed static dictionary of
full person names. It recognizes person name enti-
</bodyText>
<figure confidence="0.9997455">
Rule-based System
Whitelist
Dictionary
(1) Gazetteer
(2) Grammar
Configuration
(3) Filter
Annotated
Text
Text
Blacklist
Dictionary
Dictionaries
Acquisition from ACE
&amp; Treebank corpus
Internet Resources
Names Databases
Arabic
script
Data Collection
</figure>
<page confidence="0.909557">
20
</page>
<bodyText confidence="0.996708615384615">
ties by being applied as a Whitelist mechanism that
accepts matches which are reported as a result of
an intersection between the dictionary and the in-
put text. A Whitelist is a list of strings that must be
recognized independent of the rules. It contains
entries in the following format:
ىواﺮﻴﺸﻟا ﻢﺳﺎﻗ ﻦﻤﺣﺮﻟاﺪﺒﻋ|Abdulrahman Qasim
Mohammed Alshirawi
Since the system being developed can be incor-
porated in various applications independent of lan-
guage constraints, the English transliterations of
the Arabic names are included in the dictionary as
meta data.
</bodyText>
<subsectionHeader confidence="0.961115">
5.2 Grammar
</subsectionHeader>
<bodyText confidence="0.9999946">
The grammar performs recognition and extraction
of person entities from the input text based on
combinations of regular expression patterns. This
rule definition is particularly challenging for the
Arabic language due to reasons such as:
</bodyText>
<listItem confidence="0.9598012">
• Arabic writing systems do not exhibit dif-
ferences in orthographic case, such as ini-
tial capitalized letters to indicate the pres-
ence of a proper name. This lack of spe-
cific internal structure in the Arabic lan-
guage poses great challenge for recogniz-
ing person entities.
• Arabic is a highly inflected language
which entails a requirement of understand-
ing of its morphological nature. The in-
</listItem>
<bodyText confidence="0.870241545454546">
flected Arabic word maybe composed of
prefixes such as prepositions and suffixes
such as pronouns. These affixes need to be
addressed to ensure recognition of person
names alone.
Due to the above complexities in the Arabic
language a deep contextual analysis of various
Arabic scripts was performed using Python scripts
to build grammar rules based on keywords or trig-
ger words forming a window around a person
name.
</bodyText>
<subsectionHeader confidence="0.967629">
An Example Rule:
</subsectionHeader>
<bodyText confidence="0.9998115">
The following rule recognizes a person name com-
posed of a first name followed by optional middle
and last names based on a preceding person indica-
tor pattern.
</bodyText>
<equation confidence="0.38627925">
((honorfic+ws(location(ﺔﻳ|ي)+ws)?)
+firsts_v((ws+middle_vv)|
(ws+lasts_v))?ws+(number)?)
Description:
</equation>
<listItem confidence="0.868872777777778">
• The names should be verified against their
respective dictionaries (i.e. first, middle,
and last names).
• The indicator pattern is composed of an
honorific such as &amp;quot;ﻚﻠﻤﻟا&amp;quot; [The king] fol-
lowed by an optional Nisba derived from a
location name such as &amp;quot;ﻲﻧدرﻷا&amp;quot; [Jordanian].
These act as trigger words to recognize the
person name and should be verified against
their respective dictionaries of honorific
and locations.
• The rule also matches an optional ordinal
number appearing at the end of some
names such as &amp;quot;ﻲﻧﺎﺜﻟا&amp;quot; [II].
• The Arabic suffix letters &amp;quot;ﺔﻳ&amp;quot; and &amp;quot;ي&amp;quot; used
in the above pattern parses the inflections
attached to Nisba derived from locations
that are commonly found in Arabic text.
</listItem>
<figure confidence="0.919927166666667">
Implementation:
(($honorific$ws*($location
(\x{064A}|\x{0629})*$ws*)?)+
$firsts_v(($ws*$middle_vv)|
($ws*$lasts_v))?$ws*($number)?)
Writing conventions:
</figure>
<listItem confidence="0.999951555555555">
• $: reference to a slave schema.
• Firsts_v: dictionary of first names.
• Middle_vv: dictionary of middle names.
• Lasts_v: dictionary of last names.
• Ws: whitespace.
• Honorific: dictionary of honorifics ap-
pearing before names.
• Location: dictionary of locations.
• Number: Arabic ordinal numbers.
</listItem>
<bodyText confidence="0.9188604">
Example:
The following name would be recognized by the
above rule:
ﻲﻧﺎﺜﻟا ﷲا ﺪﺒﻋ ﻲﻧدرﻷا ﻚﻠﻤﻟا
[The Jordanian king Abdullah II]
Apart from contextual cues, the typical Arabic
naming elements were used to formulate rules such
as nasab, kunya, etc. Thereby the rules resulted in a
good control over critical instances by recognizing
complex entities.
</bodyText>
<page confidence="0.997601">
21
</page>
<subsectionHeader confidence="0.961882">
5.3 Filter
</subsectionHeader>
<bodyText confidence="0.991726375">
A filtration mechanism is used in the form of a
Blacklist (rejecter) within the grammar configura-
tion to filter matches that appear after person titles
but are invalid person names. In the following ex-
ample:
‘مﺎﻌﻟا ﻦﻴﻣﻻا ﻲﻗاﺮﻌﻟا ﺔﻴﺟرﺎ ﺨﻟا ﺮﻳزو’ [The Iraqi Foreign
Minister the Secretary-General]
The sequence of words ‘ﻲﻗاﺮﻌﻟا ﺔﻴﺟرﺎﺨﻟا ﺮﻳزو’ [The
Iraqi Foreign Minister] acts as a person indicator
and the word immediately following it is usually a
valid person name. However, in this example, the
words following the person indicator that is, ‘ ﻦﻴﻣﻻا
مﺎﻌﻟا’ (the Secretary-General) is not a valid person
name. Hence the role of the blacklist comes into
play by rejecting the incorrect matches recognized
by certain rules.
</bodyText>
<subsectionHeader confidence="0.984767">
5.4 The Implementation Platform
</subsectionHeader>
<bodyText confidence="0.99999365">
The PERA system was implemented through in-
corporation into the FAST ESP framework,
(FAST,_). FAST ESP is an integrated software
application that provides searching and filtering
services. It is a distributed system that enables in-
formation retrieval from any type of information,
combining real-time searching, advanced linguis-
tics, and a variety of content access options into a
modular, scalable product suite.
The document processing stage within FAST
ESP system provides support for Entity Extraction.
PERA is implemented through the customizable
document processing pipelines within FAST ESP,
which consists of multiple document processing
stages. A new search pipeline was created and
stages containing the grammar configuration and
gazetteers were added to this pipeline. Figure 2
indicates the functionality of the PERA system
incorporated in the pipeline within FAST ESP for
recognizing and tagging person entity in text.
</bodyText>
<sectionHeader confidence="0.986245" genericHeader="method">
6 The Experiment
</sectionHeader>
<bodyText confidence="0.9998048">
In evaluating the PERA system we follow the
standard practice in the IE field of comparing sys-
tem output against a reference corpus and measur-
ing the performance of the Arabic person named
entity.
</bodyText>
<subsectionHeader confidence="0.913299">
Politics of Ukraine
</subsectionHeader>
<bodyText confidence="0.984079384615385">
In July 1994, Leonid Kuchma was elected as Ukraine&apos;s second president in
free and fair elections. Kuchma was reelected in November 1999 to
another five-year term, with 56 percent of the vote. International observers
criticized aspects of the election, especially slanted media coverage;
however, the outcome of the vote was not called into question. In March
2002, Ukraine held its most recent parliamentary elections, which were
characterized by the Organization for Security and Cooperation in Europe
(OSCE) as flawed, but an improvement over the 1998 elections. The pro-
presidential For a United Ukraine bloc won the largest number of seats,
followed by the reformist Our Ukraine bloc of former Prime Minister Viktor
Yushchenko, and the Communist Party. There are 450 seats in parliament,
with half chosen from party lists by proportional vote and half from individ-
ual constituencies
</bodyText>
<figure confidence="0.876825">
PIPELINE
Person Person
Person
</figure>
<figureCaption confidence="0.9980805">
Figure 2: PERA incorporated into FAST ESP pipe-
line to produce Tagged text
</figureCaption>
<subsectionHeader confidence="0.99684">
6.1 Reference Corpus
</subsectionHeader>
<bodyText confidence="0.9999903125">
The text within the ACE and Treebank corpus was
used for creating the entity tagged reference corpus
for evaluating PERA. The text was chosen ran-
domly from files with ‘sgm’ extension (containing
the Arabic script) within ACE &amp; Treebank corpus.
The tagging was automatically performed with a
Python script and further a post manual check was
performed to correct any invalid tags or identify
the missing ones. The end product was an anno-
tated text corpus in the xml format with the UTF-8
encoding. This was divided into a 46 test sets and
each evaluated individually with hurricane. The
total size of the reference corpus build is around
4MB. The size and content of the corpus is such
that it contains a representative amount of occur-
rences of the person entity.
</bodyText>
<subsectionHeader confidence="0.992669">
6.2 Evaluation Method
</subsectionHeader>
<bodyText confidence="0.99996925">
We have adopted the evaluation measures that are
standard in the IE community (De Sitter et al.,
2004), to evaluate and compare the results (preci-
sion, recall and F-measures):
</bodyText>
<subsubsectionHeader confidence="0.490791">
correct entities recognized
Precision= total entities recognized
</subsubsectionHeader>
<page confidence="0.981614">
22
</page>
<figure confidence="0.65968625">
correct entities recognized
Recall= total correct entities
2 x recall x precision
F-measure= recall + precision
</figure>
<bodyText confidence="0.998739692307692">
Precision indicates how many of the extracted
entities are correct. Recall indicates how many of
the entities that should have been found, are effec-
tively extracted. Usually there is a trade off of re-
call against precision. Therefore, often an average
accuracy is reported in the form of the F-measure,
a harmonic mean which weights recall and preci-
sion equally. It was introduced to provide a single
figure to compare different systems’ performances.
The PERA system implemented within the FAST
ESP pipeline was evaluated using an Information
Extraction testing tool called ‘hurricane’ that ap-
plies these standard measures.
</bodyText>
<sectionHeader confidence="0.63671" genericHeader="evaluation">
6.3 Results
</sectionHeader>
<bodyText confidence="0.975265666666667">
Figure 3 is a snapshot of the evaluation performed
by hurricane in terms of the above mentioned
measure.
</bodyText>
<figureCaption confidence="0.993591">
Figure 3: An Extraction from Hurricane Evaluation
</figureCaption>
<bodyText confidence="0.99949247368421">
The extraction quality of the pipeline created for
the person name extractor confirms to the initial
target set. The required degree of precision (80%)
and recall (70%), for the Person name extractor,
has been achieved with the hurricane evaluation.
Some of the entries within the gazetteers were ex-
tracted from the same corpus used also for creating
the reference corpus for evaluation. However, the
results achieved are accurate since they indicated
recognition of person entities not included in the
gazetteers but being recognized by the grammar
rules.
Table1 indicates the performance figures pro-
duced by 6 out of the 46 sets used for Hurricane
evaluation.
The average Precision and Recall for the total 46
sets in recognizing person names is 85.5% and
89%, respectively. And the average f-measure is
87.5%.
</bodyText>
<table confidence="0.999752857142857">
Test Set Precision Recall F-measure
Treebank set 1 91.2 90.3 90.7
Treebank set 2 94 96.3 95.1
Treebank set 3 84.2 84.7 84.4
ACE set 1 89.6 96.8 93.1
ACE set 2 88.4 94.2 91.2
ACE set 3 86.7 89 87.8
</table>
<tableCaption confidence="0.999959">
Table 1: Evaluation result for 6 test sets.
</tableCaption>
<bodyText confidence="0.9935555">
The missing accuracy can be overcome in the
following ways:
</bodyText>
<listItem confidence="0.997775235294118">
• Expanding the dictionary of person
names further.
• More Arabic text/corpus can be analyzed
to identify strings that act as person indi-
cators.
• Reducing negative effects on evaluation
results (true positive being treated as
false positives) caused due to incomplete
annotation of the test corpus. The refer-
ence corpus can be further fine tuned to
tag all person entities completely.
• Enhancing quality of transliterated
names used.
• Using Arabic text with error free spell-
ing.
• Including all possible spelling variations
used for names in Arabic written text.
</listItem>
<sectionHeader confidence="0.976508" genericHeader="conclusions">
7 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.9999426">
The work done in this project is an attempt to
broaden the coverage for entity extraction by in-
corporating the Arabic language, thereby paving
the path towards enabling search solutions to the
Arabian market.
Various data collection techniques were used for
acquiring gazetteer name lists. The rule-based ap-
proach employed with great linguistic expertise
provided a successful implementation of the PERA
system. Rules are capable of recognizing inflected
</bodyText>
<page confidence="0.991405">
23
</page>
<bodyText confidence="0.9999734375">
forms by breaking them down into stems and af-
fixes. A filtration mechanism is employed in the
form of a rejecter within the grammar configura-
tion that helps in deciding where a name ends and
the non-name context begins. We have evaluated
our system performance using a reference corpus
that is tagged in a semi-automated way. The aver-
age Precision and Recall achieved for recognizing
person names was 85.5% and 89%, respectively.
Suggestions for improving the system performance
were provided.
This work is part of a new system for Arabic
NER. It has several ongoing activities, all con-
cerned with extending our research to recognize
and categorize other entity Arabic named entities
such as locations, organization.
</bodyText>
<sectionHeader confidence="0.987739" genericHeader="acknowledgments">
Acknowledgement
</sectionHeader>
<bodyText confidence="0.992142909090909">
This work is funded by the &amp;quot;Named Entity Rec-
ognition for Arabic&amp;quot; joint project between The
British Univ. in Duabi, Dubai, UAE and FAST
search &amp; Transfer Inc., Oslo, Norway. We thank
the FAST team. In particular, we would like to
thank Dr. Petra Maier and Dr. Jürgen Oesterle for
their technical support.
Any opinions, findings and conclusions or rec-
ommendations expressed in this material are the
authors, and do not necessarily reflect those of the
sponsor.
</bodyText>
<sectionHeader confidence="0.999033" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999565218181818">
Saleem Abuleil 2004. Extracting Names from Arabic
Text for Question-Answering Systems, In Proceed-
ings of Coupling approaches, coupling media and
coupling languages for information retrieval (RIAO
2004), Avignon, France. pp. 638- 647.
Da&apos;ud Ibn Auda. 2003. Period Arabic Names and Nam-
ing Practices, In Proceedings of the Known World
Heraldic Symposium (SCA: KWHS Proceedings,
2003), pp. 42-56, St. Louis, USA.
FAST ESP
http://www.fastsearch.com/thesolution.aspx?m=376
Nancy Chinchor 1998. Overview of MUC-7. In Pro-
ceedings of the Seventh Message Understanding
Conference (MUC-7). Available at:
http://www.itl.nist.gov/iaui/894.02/related_projects/
muc/
Leah S. Larkey, Nasreen Abdul Jaleel, Margaret Con-
nell. 2003. What&apos;s in a Name?: Proper Names in
Arabic Cross Language Information Retrieval CIIR
Technical Report IR-278. Available at
http://ciir.cs.umass.edu/pubfiles/ir-278.pdf
John Maloney and Michael Niv. 1998. TAGARAB: A
Fast, Accurate Arabic Name Recogniser Using High
Precision Morphological Analysis. In Proceedings of
the Workshop on Computational Approaches to Se-
mitic Languages. Montreal, Canada. August, pp. 8-
15.
Bruno Pouliquen, Ralf Steinberger, Camelia Ignat, Irina
Temnikova, Anna Widiger, Wajdi Zaghouani, and
Jan Zizka. 2005. Multilingual person name recogni-
tion and transliteration. Journal CORELA-Cognition,
Représentation, Langage, Vol. 2, ISSN 1638-5748.
Available at http://edel.univ-poitiers.fr/corela/
Doaa Samy, Antonio Moreno and Jose M. Guirao. 2005.
A Proposal for an Arabic Named Entity Tagger Lev-
eraging a Parallel Corpus, International Conference
RANLP, Borovets, Bulgaria, pp. 459-465.
An De Sitter, Toon Calders, and Walter Daelemans.
2004. A Formal Framework for Evaluation of Infor-
mation Extraction, University of Antwerp, Dept. of
Mathematics and Computer Science, Technical Re-
port, TR 2004-0. Available at
http://www.cnts.ua.ac.be/Publications/2004/DCD04
Antonio Toral. 2005. DRAMNERI: a free knowledge
based tool to Named Entity Recognition. In Proceed-
ings of the 1st Free Software Technologies Confer-
ence. A Coruña, Spain. pp. 27-32.
Imed Zitouni, Jeffrey Sorensen, Xiaoqiang Luo and
Radu Florian, 2005 The Impact of Morphological
Stemming on Arabic Mention Detection and
Coreference Resolution, In the Proceedings of the
ACL workshop on Computational Approaches to Se-
mitic Languages, 43rd Annual Meeting of the Asso-
ciation of Computational Linguistics (ACL05). June,
Ann Arbor, Michigan, USA, pp. 63-70.
</reference>
<page confidence="0.999178">
24
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.173627">
<title confidence="0.51310675">Person Name Entity Recognition for Arabic Khaled Institute of The British University in</title>
<author confidence="0.31423">P O Box</author>
<email confidence="0.788081">Khaled.shaalan@buid.ac.ae</email>
<abstract confidence="0.992891958333333">Named entity recognition (NER) is nowadays an important task, which is responsible for the identification of proper names in text and their classification as different types of named entity such as people, locations, and organizations. In this paper, we present our attempt at the recognition and extraction of the most important proper name entity, that is, the person name, for the Arabic language. We developed the system, Person Name Entity Recognition for Arabic (PERA), using a rule-based approach. The system consists of a lexicon, in the form of gazetteer name lists, and a grammar, in the form of regular expressions, which are responsible for recognizing person name entities. The PERA system is evaluated using a corpus that is tagged in a semi-automated way. The system performance results achieved were satisfactory and confirm to the targets set forth for the precision, recall, and fmeasure.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Saleem Abuleil</author>
</authors>
<title>Extracting Names from Arabic Text for Question-Answering Systems,</title>
<date>2004</date>
<booktitle>In Proceedings of Coupling approaches, coupling media and coupling languages for information retrieval (RIAO 2004),</booktitle>
<pages>638--647</pages>
<location>Avignon,</location>
<contexts>
<context position="1762" citStr="Abuleil, 2004" startWordPosition="270" endWordPosition="271">in text (e.g. persons, locations, and organizations) has recently become considered of major importance in Natural Language Processing (NLP) as it plays a significant role in various types of NLP applications, especially in Information Extraction, Information Retrieval, Machine Translation, Syn17 Hafsa Raza Institute of Informatics The British University in Dubai P O Box 502216, Dubai, UAE hafsa.raza@gmail.com tactic Parsing/Chunking, Question-Answering, among others. The valuable information in text is usually located around proper names, to collect this information it should be found first (Abuleil, 2004; Chinchor, 1998). In our presentation, we will concentrate on the role of NER in Information Extraction (IE). IE is the NLP task that retrieves relevant information from unstructured texts and produces as a result a structured set of data. This paper describes work on recognizing and extracting the most important entities, that is, person names for the Arabic language. We have adopted the rule-based approach using linguistic grammar-based techniques to develop PERA. This approach provides flexibility and adaptability features in our system and it can be easily configured to work with differen</context>
<context position="5517" citStr="Abuleil (2004)" startWordPosition="869" endWordPosition="870">roducts. Many researchers have attacked this problem in a variety of languages but only a few limited researches have focused on NER for Arabic text. This is due to the lack of resources for Arabic NE and the limited amount of progress made in Arabic NLP in general. Maloney and Niv (1998) developed TAGARAB an Arabic name recognizer that uses a patternrecognition engine integrated with morphological analysis. The role of the morphological analyzer is to decide where a name ends and the non-name context begins. The decision depends on the partof-speech of the Arabic word and/or its inflections. Abuleil (2004) presented a technique to extract proper names from text to build a database of names along with their classification that can be used in question-answering systems. This work was done in three main stages: 1) marking the phrases that might include names, 2) building up graphs to represent the words in these phrases and the relationships between them, and 3) applying rules to generate the names, classify each of them, and saves them in a database. Larkey et al. (2003) have conducted a study that showed the importance of the proper names component in cross language tasks involving searching, tr</context>
</contexts>
<marker>Abuleil, 2004</marker>
<rawString>Saleem Abuleil 2004. Extracting Names from Arabic Text for Question-Answering Systems, In Proceedings of Coupling approaches, coupling media and coupling languages for information retrieval (RIAO 2004), Avignon, France. pp. 638- 647.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Da&apos;ud Ibn Auda</author>
</authors>
<title>Period Arabic Names and Naming Practices,</title>
<date>2003</date>
<booktitle>In Proceedings of the Known World Heraldic Symposium (SCA: KWHS Proceedings,</booktitle>
<pages>42--56</pages>
<location>St. Louis, USA.</location>
<contexts>
<context position="7741" citStr="Auda (2003)" startWordPosition="1236" endWordPosition="1237">plicable only when a parallel corpus is available. Zitouni et al. (2005) has adopted a statistical approach for the entity detection and recognition (EDR). In this work, a mention can be either named (e.g. John Mayor), nominal (the president) or pronominal (she, it). An entity is the aggregate of all the mentions (of any level) which refer to one conceptual entity. This extended definition of the entity has proved the suitability of the approach. 3 Components of an Arabic Full Name Arabic has well-defined naming practices. The Arabic name elements may be divided into five main categories, Ibn Auda (2003): 1. An ism (pronounced IZM, as the final syllable in the word dogmatism), a personal, proper name given shortly after birth, i.e. the given name. Examples of such names are Muham18 mad [Mohammed], Musa [Moses], Ibrahim 4 Data Collection [Abraham]. 2. A kunya (pronounced COON-yah), an honorific name or surname, as the father or mother of someone; e.g., abu Da&apos;ud [the father of David], umm Salim [the mother of Salim]. It is meant as a prefix of respect or reverence. Married persons (especially married ladies) are, as a general rule, simply called by their kunya (abu or umm + the name of their f</context>
</contexts>
<marker>Auda, 2003</marker>
<rawString>Da&apos;ud Ibn Auda. 2003. Period Arabic Names and Naming Practices, In Proceedings of the Known World Heraldic Symposium (SCA: KWHS Proceedings, 2003), pp. 42-56, St. Louis, USA.</rawString>
</citation>
<citation valid="false">
<note>FAST ESP http://www.fastsearch.com/thesolution.aspx?m=376</note>
<marker></marker>
<rawString>FAST ESP http://www.fastsearch.com/thesolution.aspx?m=376</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy Chinchor</author>
</authors>
<title>Overview of MUC-7.</title>
<date>1998</date>
<booktitle>In Proceedings of the Seventh Message Understanding Conference (MUC-7). Available at: http://www.itl.nist.gov/iaui/894.02/related_projects/ muc/</booktitle>
<contexts>
<context position="1779" citStr="Chinchor, 1998" startWordPosition="272" endWordPosition="273">ersons, locations, and organizations) has recently become considered of major importance in Natural Language Processing (NLP) as it plays a significant role in various types of NLP applications, especially in Information Extraction, Information Retrieval, Machine Translation, Syn17 Hafsa Raza Institute of Informatics The British University in Dubai P O Box 502216, Dubai, UAE hafsa.raza@gmail.com tactic Parsing/Chunking, Question-Answering, among others. The valuable information in text is usually located around proper names, to collect this information it should be found first (Abuleil, 2004; Chinchor, 1998). In our presentation, we will concentrate on the role of NER in Information Extraction (IE). IE is the NLP task that retrieves relevant information from unstructured texts and produces as a result a structured set of data. This paper describes work on recognizing and extracting the most important entities, that is, person names for the Arabic language. We have adopted the rule-based approach using linguistic grammar-based techniques to develop PERA. This approach provides flexibility and adaptability features in our system and it can be easily configured to work with different languages, NLP </context>
</contexts>
<marker>Chinchor, 1998</marker>
<rawString>Nancy Chinchor 1998. Overview of MUC-7. In Proceedings of the Seventh Message Understanding Conference (MUC-7). Available at: http://www.itl.nist.gov/iaui/894.02/related_projects/ muc/</rawString>
</citation>
<citation valid="true">
<authors>
<author>Leah S Larkey</author>
<author>Nasreen Abdul Jaleel</author>
<author>Margaret Connell</author>
</authors>
<title>What&apos;s in a Name?: Proper Names</title>
<date>2003</date>
<booktitle>in Arabic Cross Language Information Retrieval CIIR Technical Report IR-278. Available at http://ciir.cs.umass.edu/pubfiles/ir-278.pdf</booktitle>
<contexts>
<context position="5989" citStr="Larkey et al. (2003)" startWordPosition="947" endWordPosition="950">ere a name ends and the non-name context begins. The decision depends on the partof-speech of the Arabic word and/or its inflections. Abuleil (2004) presented a technique to extract proper names from text to build a database of names along with their classification that can be used in question-answering systems. This work was done in three main stages: 1) marking the phrases that might include names, 2) building up graphs to represent the words in these phrases and the relationships between them, and 3) applying rules to generate the names, classify each of them, and saves them in a database. Larkey et al. (2003) have conducted a study that showed the importance of the proper names component in cross language tasks involving searching, tracking, retrieving, or extracting information. In particular, they have concluded that a combination of static proper name (English-Arabic) translation plus transliteration provides a successful solution. Pouliquen et al. (2005) developed a tool for multilingual person name recognition that focuses on the &amp;quot;Who&amp;quot; part of the analysis of large news text. As multilingual NER is concerned, the transliteration of the NE has included alternative spelling variants where the o</context>
</contexts>
<marker>Larkey, Jaleel, Connell, 2003</marker>
<rawString>Leah S. Larkey, Nasreen Abdul Jaleel, Margaret Connell. 2003. What&apos;s in a Name?: Proper Names in Arabic Cross Language Information Retrieval CIIR Technical Report IR-278. Available at http://ciir.cs.umass.edu/pubfiles/ir-278.pdf</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Maloney</author>
<author>Michael Niv</author>
</authors>
<title>TAGARAB: A Fast, Accurate Arabic Name Recogniser Using High Precision Morphological Analysis.</title>
<date>1998</date>
<booktitle>In Proceedings of the Workshop on Computational Approaches to Semitic Languages.</booktitle>
<pages>8--15</pages>
<location>Montreal, Canada.</location>
<contexts>
<context position="5192" citStr="Maloney and Niv (1998)" startWordPosition="817" endWordPosition="820">arly any requirement. However, if we deal with an unrestricted domain, it is better to choose the machine learning approach, as it would be inefficient to acquire and/or derive rules and gazetteers in this case. Name identification has been worked on quite intensively for the past few years, and has been incorporated into several products. Many researchers have attacked this problem in a variety of languages but only a few limited researches have focused on NER for Arabic text. This is due to the lack of resources for Arabic NE and the limited amount of progress made in Arabic NLP in general. Maloney and Niv (1998) developed TAGARAB an Arabic name recognizer that uses a patternrecognition engine integrated with morphological analysis. The role of the morphological analyzer is to decide where a name ends and the non-name context begins. The decision depends on the partof-speech of the Arabic word and/or its inflections. Abuleil (2004) presented a technique to extract proper names from text to build a database of names along with their classification that can be used in question-answering systems. This work was done in three main stages: 1) marking the phrases that might include names, 2) building up grap</context>
</contexts>
<marker>Maloney, Niv, 1998</marker>
<rawString>John Maloney and Michael Niv. 1998. TAGARAB: A Fast, Accurate Arabic Name Recogniser Using High Precision Morphological Analysis. In Proceedings of the Workshop on Computational Approaches to Semitic Languages. Montreal, Canada. August, pp. 8-15.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bruno Pouliquen</author>
<author>Ralf Steinberger</author>
<author>Camelia Ignat</author>
<author>Irina Temnikova</author>
<author>Anna Widiger</author>
<author>Wajdi Zaghouani</author>
<author>Jan Zizka</author>
</authors>
<title>Multilingual person name recognition and transliteration.</title>
<date>2005</date>
<journal>Journal CORELA-Cognition, Représentation, Langage,</journal>
<volume>2</volume>
<pages>1638--5748</pages>
<note>Available at http://edel.univ-poitiers.fr/corela/</note>
<contexts>
<context position="6345" citStr="Pouliquen et al. (2005)" startWordPosition="996" endWordPosition="999">: 1) marking the phrases that might include names, 2) building up graphs to represent the words in these phrases and the relationships between them, and 3) applying rules to generate the names, classify each of them, and saves them in a database. Larkey et al. (2003) have conducted a study that showed the importance of the proper names component in cross language tasks involving searching, tracking, retrieving, or extracting information. In particular, they have concluded that a combination of static proper name (English-Arabic) translation plus transliteration provides a successful solution. Pouliquen et al. (2005) developed a tool for multilingual person name recognition that focuses on the &amp;quot;Who&amp;quot; part of the analysis of large news text. As multilingual NER is concerned, the transliteration of the NE has included alternative spelling variants where the origin language of the name is usually not known. Several variants could also be found in the same language. Samy et al. (2005) has used parallel corpora in Spanish, and Arabic and an NE tagger in Spanish to tag the names in the Arabic corpus. For each sentence pair aligned together, they use a simple mapping scheme to transliterate all the words in the A</context>
</contexts>
<marker>Pouliquen, Steinberger, Ignat, Temnikova, Widiger, Zaghouani, Zizka, 2005</marker>
<rawString>Bruno Pouliquen, Ralf Steinberger, Camelia Ignat, Irina Temnikova, Anna Widiger, Wajdi Zaghouani, and Jan Zizka. 2005. Multilingual person name recognition and transliteration. Journal CORELA-Cognition, Représentation, Langage, Vol. 2, ISSN 1638-5748. Available at http://edel.univ-poitiers.fr/corela/</rawString>
</citation>
<citation valid="true">
<authors>
<author>Doaa Samy</author>
<author>Antonio Moreno</author>
<author>Jose M Guirao</author>
</authors>
<title>A Proposal for an Arabic Named Entity Tagger Leveraging a Parallel Corpus,</title>
<date>2005</date>
<booktitle>International Conference RANLP, Borovets, Bulgaria,</booktitle>
<pages>459--465</pages>
<contexts>
<context position="6715" citStr="Samy et al. (2005)" startWordPosition="1059" endWordPosition="1062">olving searching, tracking, retrieving, or extracting information. In particular, they have concluded that a combination of static proper name (English-Arabic) translation plus transliteration provides a successful solution. Pouliquen et al. (2005) developed a tool for multilingual person name recognition that focuses on the &amp;quot;Who&amp;quot; part of the analysis of large news text. As multilingual NER is concerned, the transliteration of the NE has included alternative spelling variants where the origin language of the name is usually not known. Several variants could also be found in the same language. Samy et al. (2005) has used parallel corpora in Spanish, and Arabic and an NE tagger in Spanish to tag the names in the Arabic corpus. For each sentence pair aligned together, they use a simple mapping scheme to transliterate all the words in the Arabic sentence and return those matching with NEs in the Spanish sentence as the NEs in Arabic. While they report high precision and recall, it should be noted that their approach is applicable only when a parallel corpus is available. Zitouni et al. (2005) has adopted a statistical approach for the entity detection and recognition (EDR). In this work, a mention can b</context>
</contexts>
<marker>Samy, Moreno, Guirao, 2005</marker>
<rawString>Doaa Samy, Antonio Moreno and Jose M. Guirao. 2005. A Proposal for an Arabic Named Entity Tagger Leveraging a Parallel Corpus, International Conference RANLP, Borovets, Bulgaria, pp. 459-465.</rawString>
</citation>
<citation valid="true">
<authors>
<author>An De Sitter</author>
<author>Toon Calders</author>
<author>Walter Daelemans</author>
</authors>
<title>A Formal Framework for Evaluation of Information Extraction,</title>
<date>2004</date>
<tech>Technical Report, TR 2004-0.</tech>
<institution>University of Antwerp, Dept. of Mathematics and Computer Science,</institution>
<note>Available at http://www.cnts.ua.ac.be/Publications/2004/DCD04</note>
<marker>De Sitter, Calders, Daelemans, 2004</marker>
<rawString>An De Sitter, Toon Calders, and Walter Daelemans. 2004. A Formal Framework for Evaluation of Information Extraction, University of Antwerp, Dept. of Mathematics and Computer Science, Technical Report, TR 2004-0. Available at http://www.cnts.ua.ac.be/Publications/2004/DCD04</rawString>
</citation>
<citation valid="true">
<authors>
<author>Antonio Toral</author>
</authors>
<title>DRAMNERI: a free knowledge based tool to Named Entity Recognition.</title>
<date>2005</date>
<booktitle>In Proceedings of the 1st Free Software Technologies Conference. A Coruña,</booktitle>
<pages>27--32</pages>
<contexts>
<context position="4055" citStr="Toral, 2005" startWordPosition="629" endWordPosition="630"> the targets set forth for the precision, recall, and f-measure. The paper is structured as follows. Section 2 presents the related work. Section 3 describes the naming conventions of person names used in Arabic language. Section 4 presents methods of data collection used. Section 5 explains the system architecture and implementation. Section 6 presents the experiment performed to evaluate the system and finally Section 7 concludes the paper, summarizes our achievements, and highlights our plans for future work.. 2 Related Work As in other NLP techniques, there are two main approaches to NER (Toral, 2005). One is based on linguistic knowledge, in particular grammar rules and hence called rule-based, while the other is based on machine learning techniques. The required resources for the knowledge approach are usually gazetteers and rules whereas the learning approach needs an annotated (tagged) corpus. The linguistic knowledge-based model achieve better results in specific domains, as the gazetteers can be adapted very precisely, and it is able to detect complex entities, as the rules can be tailored to meet nearly any requirement. However, if we deal with an unrestricted domain, it is better t</context>
</contexts>
<marker>Toral, 2005</marker>
<rawString>Antonio Toral. 2005. DRAMNERI: a free knowledge based tool to Named Entity Recognition. In Proceedings of the 1st Free Software Technologies Conference. A Coruña, Spain. pp. 27-32.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Imed Zitouni</author>
<author>Jeffrey Sorensen</author>
<author>Xiaoqiang Luo</author>
<author>Radu Florian</author>
</authors>
<title>The Impact of Morphological Stemming on Arabic Mention Detection and Coreference Resolution,</title>
<date>2005</date>
<booktitle>In the Proceedings of the ACL workshop on Computational Approaches to Semitic Languages, 43rd Annual Meeting of the Association of Computational Linguistics (ACL05). June,</booktitle>
<pages>63--70</pages>
<location>Ann Arbor, Michigan, USA,</location>
<contexts>
<context position="7202" citStr="Zitouni et al. (2005)" startWordPosition="1144" endWordPosition="1147">re the origin language of the name is usually not known. Several variants could also be found in the same language. Samy et al. (2005) has used parallel corpora in Spanish, and Arabic and an NE tagger in Spanish to tag the names in the Arabic corpus. For each sentence pair aligned together, they use a simple mapping scheme to transliterate all the words in the Arabic sentence and return those matching with NEs in the Spanish sentence as the NEs in Arabic. While they report high precision and recall, it should be noted that their approach is applicable only when a parallel corpus is available. Zitouni et al. (2005) has adopted a statistical approach for the entity detection and recognition (EDR). In this work, a mention can be either named (e.g. John Mayor), nominal (the president) or pronominal (she, it). An entity is the aggregate of all the mentions (of any level) which refer to one conceptual entity. This extended definition of the entity has proved the suitability of the approach. 3 Components of an Arabic Full Name Arabic has well-defined naming practices. The Arabic name elements may be divided into five main categories, Ibn Auda (2003): 1. An ism (pronounced IZM, as the final syllable in the wor</context>
</contexts>
<marker>Zitouni, Sorensen, Luo, Florian, 2005</marker>
<rawString>Imed Zitouni, Jeffrey Sorensen, Xiaoqiang Luo and Radu Florian, 2005 The Impact of Morphological Stemming on Arabic Mention Detection and Coreference Resolution, In the Proceedings of the ACL workshop on Computational Approaches to Semitic Languages, 43rd Annual Meeting of the Association of Computational Linguistics (ACL05). June, Ann Arbor, Michigan, USA, pp. 63-70.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>