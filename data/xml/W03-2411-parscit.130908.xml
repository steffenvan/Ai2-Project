<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.702418">
Step by step: underspecified markup in incremental rhetorical analysis *
</title>
<author confidence="0.927534">
David Reitter Manfred Stede
</author>
<affiliation confidence="0.80845">
Media Lab Europe University of Potsdam
Adaptive Speech Interfaces Dept. of Linguistics
</affiliation>
<author confidence="0.567402">
Sugar House Lane, Dublin 8, Ireland P.O. Box 601553, 14415 Potsdam, Germany
</author>
<bodyText confidence="0.349482">
reitter@mle .media .mit edu stede@ling .uni-potsdam. de
</bodyText>
<sectionHeader confidence="0.992623" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999903266666667">
While quite a few linguistic corpora
with syntactic annotations are available
today, resources are scarce on the level
of discourse annotation. As a step
toward flexible, extendible annotation
schemes, we propose an XML format
for annotating rhetorical structure trees.
For human and automatic analysis alike,
rhetorical structure is often difficult and
assigned incrementally. Thus, our for-
mat allows for underspecification. The
paper discusses the various design de-
cisions involved, illustrates the format
with an example, and sketches some ap-
plications.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999787239130435">
The demand for annotated linguistic corpora rises
steadily. Recently, work has begun on providing
data that is annotated not only on the sentence
level but also on the discourse level. In partic-
ular, &apos;rhetorical annotation&apos; turned out to be im-
portant for applications such as automatic summa-
rization. With the growing importance of machine
learning and parsing algorithms that detect rhetor-
ical structure and evaluate the results of manual or
automatic annotation, it becomes clear that corpus
data should be readable for both humans and ma-
chines.
The work presented was funded in part through EU grant
IST-200l-38685. We would like to thank Silvan Heintze for
his helpful comments.
In the following, we discuss design considera-
tions for an XML-based rhetorical annotation for-
mat that is extensible and provides room for un-
derspecification. This is a key feature for two rea-
sons: 1) Human annotators often find it difficult
to make a clear decision on either a specific rela-
tion or the length of the spans (e.g., in the case
of sentences starting with a conjunctive adverbial:
On the other hand, ...). Thus it should be possi-
ble to leave such a matter open and represent it
accordingly. 2) For automatic rhetorical analysis,
the problem above is much more pressing. Rather
than enforcing a decision all the time, it is desir-
able for a parser to leave some aspects underspeci-
fied, represent this clearly, and possibly have addi-
tional components making a choice later on the ba-
sis of additional knowledge. More generally, un-
derspecification allows for incremental rhetorical
analysis based on sound representations. We as-
sume a theory of rhetorical description along the
lines of Mann &amp; Thompson (1988), which assigns
relations between adjacent spans of text and recur-
sively builds up a tree. We have applied our format
to both manual and experimental automatic analy-
ses of a new corpus of German newspaper texts.
The format is open to extension and specializa-
tion, e.g. to enable multi-modal applications. In
general, we think that the emergence of a stan-
dard for rhetorical annotation will be instrumental
for comparing analyses, and obviously for training
stochastic or machine learning algorithms.
</bodyText>
<sectionHeader confidence="0.998705" genericHeader="method">
2 Previous work
</sectionHeader>
<bodyText confidence="0.956081">
Schilder (2002) formalizes a symbolic underspec-
</bodyText>
<page confidence="0.997353">
77
</page>
<bodyText confidence="0.999904925925926">
ification scheme for rhetorical structure. His re-
lations connect Segmented Discourse Represen-
tation Structures; he explicitly states immediate
dominance, dominance, precedence and equiva-
lence of text spans. Similar to our approach, a
set of relations is given for the whole document,
and for a specific pair of segments, the set of re-
lations may be constrained during one of the anal-
ysis steps. His symbolic system is targeted at an
analysis architecture based on cue phrases and a
topicality measure that both constrain the rhetor-
ical structure. In contrast, our architecture de-
fines a serialized, XML based intermediate format
that allows for the exchange of corpus data and
for an incremental annotation of cues and rhetori-
cal structure. Other representation efforts include
Rehm (1998), who uses an SGML syntax to iden-
tify rhetorical cues. The annotation application
RSTTool (O&apos;Donnell 2000) writes annotation data
from single documents in several SGML based
formats that include no underspecification. In con-
trast to this format, our representation integrates
various layers of annotation; this is targeted pri-
marily at automatic analysis, which will have to
take into account quite different kinds of informa-
tion before making a decision about rhetorical re-
lations (Marcu 2000, Corston-Oliver 1998).
</bodyText>
<sectionHeader confidence="0.833773" genericHeader="method">
3 Accounts of rhetorical structure
</sectionHeader>
<subsectionHeader confidence="0.998286">
3.1 Basis: Rhetorical Structure Theory
</subsectionHeader>
<bodyText confidence="0.999547419354839">
Rhetorical Structure Theory (Mann &amp; Thompson
1988, RST) builds tree structures on top of rhetor-
ical relationships that hold among minimal units
of text and recursively among larger units as well.
RST proposes a set of such relations, including
e.g. ELABORATION(A, B), which is defined as a
text span B giving additional information regard-
ing the facts presented in span A, and CONTRAST,
which is defined as the contents of two or more
text spans being knowingly presented as incom-
patible. Depending on the relation, a text span may
take the role of nucleus or satellite. &apos;Paratactic&apos; re-
lations hold among several nuclei; &apos;hypotactic&apos; re-
lations hold between one nucleus and one satellite.
In fig. 1, satellites are designated by arcs, nuclei by
straight lines.
The relations in RST were chosen such that the
resulting tree is a characterization of a text&apos;s over-
all coherence. Their definitions are not linked to
linguistic properties such as connectives or sen-
tence types. Semantic and world-knowledge based
constraints are supposed to interact with the pre-
sumed writer&apos;s or speaker&apos;s intentions. The set of
relations was proposed on the basis of empirical
work with a wide variety of texts; RST does not
claim that this set be &amp;quot;closed&amp;quot;. As for the span
structure, RST posits that relations do not overlap
and do not share elements (except hypotactic re-
lations sharing a nucleus â€” see below) . Marcu
(2000) provides a formalization of the framework
of rhetorical structure.
</bodyText>
<subsectionHeader confidence="0.999334">
3.2 Binary trees
</subsectionHeader>
<bodyText confidence="0.993733870967742">
The proposal by Mann &amp; Thompson (1988) of-
fers the possibility of binary hypotactic relations
sharing a common nucleus. Each nucleus and all
its satellites form the instantiation of a schema.
Subsequent applications of the theory, however,
mainly made use of the idea of binary trees
(Cristea &amp; Webber 1997, Marcu 2000, and others).
These contain a nucleus and exactly one satellite,
or exactly two nuclei, respectively.
In Fig. 2, analysis (1) can be represented as
shown in analysis (2). This assumes that the nu-
cleus contributes the essential meaning in compar-
ison to its satellite and &amp;quot;promotes it upward&amp;quot;. Con-
sequently, if a relation holds between span A with
several segments and span B, the same (or, a sim-
ilar) relation holds between the nucleus of span A
and span B (Marcu 2000, compositionality crite-
rion). Empirical evidence we gained in the collec-
tion of our newspaper corpus supports this view:
in the intuition of the annotators, in no case was
the non-nucleus-sharing, tree-structured represen-
tation representationally weaker than the nucleus-
sharing view. The choice between the two possi-
bilities for a two-satellite-one-nucleus schema was
usually made from referential clues. Also, in the
RST Discourse Treebank (Carlson et al. 2001),
we found that only in 9 out of 17962 relation
schemas (in the partition labeled &apos;training&apos;) there
were satellites relating to a common nucleus with
a hypotactic relation. We therefore chose to imple-
ment just binary relations and no RST schemas.
</bodyText>
<page confidence="0.983952">
78
</page>
<figure confidence="0.877216555555556">
1F
lA
ELABORATION
CAUSE
1G
SEQUENCE
CONCESSION 1D
1B IC
1H
</figure>
<bodyText confidence="0.966489076923077">
[Yesterday, the delegates chose
their new representative.]lA
[Even though Smith received only
24 votes,] -B [he accepted the
election with a short speech.]W
[Then the assembly applauded
for three minutes.] ip [Due to the
upcoming caucus meeting,]-E
[the subsequent discussion was
very short.] iF [ Nonetheless the
most pressing questions could be
resolvedliG [The meeting was
closed at 7pm.]1H
</bodyText>
<figureCaption confidence="0.9771245">
Figure 1: A text analysis within Rhetorical Structure Theory. It is one of the interpretations that can be
derived from the underspecified URML representation in Fig. 3
</figureCaption>
<subsectionHeader confidence="0.998633">
3.3 Is a single tree adequate?
</subsectionHeader>
<bodyText confidence="0.999996631578947">
The tree-structured approach of RST prima facie
suggests that there is - even though several dis-
tinct analyses may be drawn from a text (Mann &amp;
Thompson (1988) themselves had acknowledged
potential sources of ambiguity) - only one struc-
ture that is faithful to the writer&apos;s intentions. It
may however be questioned whether there is in-
deed such a &amp;quot;primary rhetorical intention&amp;quot; (Grosz
&amp; Sidner 1986). Furthermore, when it comes to
automatic rhetorical analysis, a program will have
difficulties deriving the one and only correct struc-
ture. One of our own approaches (Reitter to ap-
pear) tries to derive a single interpretation that
most likely matches the writer&apos;s intention; how-
ever, the algorithm can also output several inter-
pretations, along with their probabilistic scores as
derived from corpus training. â€” In conclusion, we
propose that a representation format should pro-
vide the possibility of multiple analyses.
</bodyText>
<sectionHeader confidence="0.713904" genericHeader="method">
4 Rhetorical annotation in URML
</sectionHeader>
<subsectionHeader confidence="0.915367">
4.1 Basics
</subsectionHeader>
<bodyText confidence="0.999855636363637">
Our representation format URML (Underspecified
rhetorical markup language) allows for a free defi-
nition of dependencies among text spans. It clearly
separates: 1) Symbolic system and, in the docu-
ment, an inventory of relation instances. A doc-
ument annotation contains a set of relations that
can be found in the data. Similar to a parse for-
est in syntactic parsing (Billot &amp; Lang 1989), it
may state ambiguous relations. Some may even
be incompatible according to the axioms that de-
fined a well-formed rhetorical analysis. This is de-
fined by the format; all relation instances may be
represented using URML. 2) Axioms and, in the
document, well-formed tree analyses of a text. It
is up to the client software to define restrictions
that hold for well-formed analyses. A well-formed
analysis contains a subset of the relations defined
in the relation set of the document. This well-
formed analysis can also be represented and iden-
tified as such in URML. We chose XML as under-
lying formalism in order to maximise re-usability.
A &amp;quot;document-type definition&amp;quot; grammar was de-
fined to describe the format of documents, rhetor-
ical and morpho-syntactic annotations. I
In URML, all documents are contained in one
file. This facilitates automatic handling, since the
filesystem is not involved in retrieving parts of the
corpus. To make use of the XML-based data, stan-
dard XML libraries are available for all common
implementation formalisms.
Relation names are declared once for all
documents (Fig. 3, &lt;reltypes&gt;). Indi-
vidual documents consist of minimal discourse
</bodyText>
<footnote confidence="0.673149333333333">
&apos;The complete document type defintion (DTD) for
URML is available from our web site, http : / /www.
ling.uni-potsdam.de/cl/rst/
</footnote>
<page confidence="0.982615">
79
</page>
<figure confidence="0.977297411764706">
(1)
2A
JUSTIFY
2B EVIDENCE
â– â€¢
2C 2D
EVIDENCE
&lt;editor job=&amp;quot;annotate&amp;quot; date=&amp;quot;18.02.02&amp;quot;â€º
Antje Sauermann
&lt;/editor&gt;
&lt;editor job=&amp;quot;revise&amp;quot; date=&amp;quot;20.09.02&amp;quot;â€º
David Reitter
&lt;note&gt;revised result/cause
nuclearity
&lt;/note&gt;
EVIDENCE
(2) 2A
</figure>
<bodyText confidence="0.995261285714286">
[Also, there can be no social boundaries to
the seldom-publicized topic of a community-
level obligation to social welfanaVA [The
moral responsibility is ignored. 12B [The ques-
tion is, whether the disadvantaged group of
the homeless is put away even more in their
new quarters in Kyritz.]2c [After all, their home
</bodyText>
<equation confidence="0.332192">
is Wittstockl2D (maz14071e)
</equation>
<figureCaption confidence="0.9869755">
Figure 2: Schemas vs. binary nodes. Text trans-
lated from original.
</figureCaption>
<bodyText confidence="0.979782375">
units (&lt;t ext &gt;), followed by relation nodes
(&lt;analysis&gt;) explained below.
When analysis information is added to the raw
data, we want to preserve the original information
wherever possible (especially in the light of the
incremental rhetorical parsing we are developing;
see below). Thus, all information used in the ana-
lysis process is stored in the corpus persistently.
</bodyText>
<subsectionHeader confidence="0.996442">
4.2 Meta-data
</subsectionHeader>
<bodyText confidence="0.999924444444445">
The possibility to trace partial analyses of docu-
ments is valuable, especially in large corpora. For
example, when a manually annotated rhetorical re-
lation is to be clarified later, there should be a way
to identify the annotator. Similarly, documents
may get corrupted due to bugs in an annotation
tool. Thus, a source identifier is needed. Within an
&lt;info&gt; tag, source information for documents
and a reference to the annotator can be given.
</bodyText>
<equation confidence="0.625105">
&lt;analysis id=&amp;quot;maz3379.a.1&amp;quot; scheme=
&amp;quot;interpretation&amp;quot;â€º
&lt;info&gt;
</equation>
<subsectionHeader confidence="0.997872">
4.3 Representing tree structure in XML
</subsectionHeader>
<bodyText confidence="0.996046714285714">
One crucial decision in syntax design was
whether annotations should be coded as on-the-
spot markup within the text or as relation nodes
with referential indices. The first variant is easy to
read (and is analogous to the one used in a LISP-
style format in Carlson et al. (2001)). For exam-
ple:
</bodyText>
<figure confidence="0.576822">
&lt;concession&gt;
&lt;satellite&gt;Admittedly, ...&lt;/satellite&gt;
&lt;nucleus&gt; &lt;contrast&gt;
&lt;nucleus&gt;However, some ...&lt;/nucleus&gt; &lt;
nucleus&gt;others ...&lt;/nucleus&gt;
&lt;/contrast&gt; &lt;/nucleus&gt; &lt;/concession&gt;
</figure>
<bodyText confidence="0.997420318181818">
This format demands a fully specified, unam-
biguous single tree structure and encodes the un-
derlying relation set in the document grammar
(DTD). In XML, this may be desirable when
generic editors are used, because they restrict an-
notators to comply with the DTD, thus with claims
of the underlying discourse theory. All processing
modules, however, are also determined to follow
the fixed syntax. Changes in theoretic assump-
tions, such as the introduction of discontinuous
constituents or several rhetorical analysis layers,
inevitably lead to a chain of modifications in the
system, even if the changes concern only one anal-
ysis layer.
Therefore, in our format every node of a dis-
course tree represents one relation: either a hy-
potactic one (one nucleus, one satellite) or a parat-
actic one (several nuclei). Nodes are indexed and
reference each other to express references to the
according text spans. In the following example,
the IDs 1, 2, 3 refer to minimal discourse units (cf.
Fig. 3).
</bodyText>
<table confidence="0.584853375">
&lt;hypRelation type=&amp;quot;concesszon&amp;quot; id=&amp;quot;10&amp;quot;&gt;
&lt;satellzte id=&amp;quot;1&amp;quot; /&gt;
&lt;nucleus zd=&amp;quot;11&amp;quot; /&gt;
&lt;/hypRelation&gt;
&lt;parRelation type=&amp;quot;contrast&amp;quot; id=&amp;quot;11&amp;quot;&gt;
JUSTIFY
2B EVIDENCE
2C 2D
</table>
<page confidence="0.717457">
80
</page>
<construct confidence="0.541313">
&lt;nucleus id=&amp;quot;2&amp;quot; /&gt;
&lt;nucleus id=&amp;quot;3&amp;quot; /&gt;
&lt;/parRelation&gt;
</construct>
<bodyText confidence="0.999801533333333">
Each relation statement refers to its direct de-
scendants in the tree via the identifier of the re-
lation. We could, alternatively, refer to spans by
their left and right borders in the sequence of min-
imal discourse units. This way, ambiguous analy-
ses would share common nodes high up in the tree.
However, in a scenario of probabilistic analysis,
it would violate our assumption that the score as-
signed to those nodes relates to their descendants.
In the example given in Fig. 1, the score given to
the CAUSE relation might be lower because the
connective then in segment ID usually indicates
a SEQUENCE relation.
Paratactic and hypotactic relations are repre-
sented in the same way, and there are no addi-
tional span types. In contrast to the RSTTool for-
mat (O&apos;Donnell 2000), our URML format is not
aimed at presenting and manipulating RST dia-
grams. Rather, we wish to store rhetorically anno-
tated data, potentially underspecified, in a manner
that is independent from a particular application
and readable for both humans and machines.
In contrast to semantics-based representations
(Schilder 2002), URML refers to textual data. It
implicitly states linear precedence. Tree nodes
in an analysis state immediate dominance; under-
specified dominance situations have to be explic-
itly stated with concurrent tree nodes. This keeps
annotations simple enough to work with them both
manually and automatically.
</bodyText>
<subsectionHeader confidence="0.994365">
4.4 Underspecification
</subsectionHeader>
<bodyText confidence="0.999940409836066">
Consider again the sample text shown in Fig. 1.
What is its primary discourse intention, and what
structure should be ascribed? Annotators may dis-
agree. For example, 1D may be rightly charac-
terized as being in temporal sequence with span
[1B,1C], but it could also seen as in sequence
with only 1C, with IB being a concession to span
[1C,11)]. Automated analysis tools might only
give a partial answer here. Also, they might not
be able to infer the ELABORATION relation be-
tween IA and the subsequent segments. In partic-
ular, automatic analysis will often encounter prob-
lems to locate the precise boundaries of larger seg-
ments: Where does the just-mentioned ELABO-
RATION end? Also, nonetheless at the beginning
of 1G signals a CONTRAST or CONCESSION, but
based solely on surface cues, it is by no means
clear how far to the left the first span stretches,
i.e., what the exact scope of the nonetheless is.
The referential markup syntax is flexible by
design. Uncertainties on the kind of relation
can be represented by simply leaving out rela-
tion information â€” see Fig. 3. For instance, if
the specific relation between two spans is un-
known, the relation tag can omit the type
attribute (node l 2). If, however, the class of a
relation (hypotactic or paratactic) is known, a
hypRelat ion or parRelation tag should be
used. If a span is known to be an argument of a re-
lation, but its role is unknown, it should be labeled
element instead of satellite or nucleus
(nodes 1E, 1F). Also, scores may be mentioned
for a node to indicate a preference or the result of
some heuristics. As for structural underspecifica-
tion, the set of relations implements what is known
in chart parsing systems as subtree sharing: We do
not represent each tree derivation separately, but
several analyses may share sub-trees. This hap-
pens when two or more alternative relations re-
fer to the same relation as their nucleus or satel-
lite (nodelOa and nodel0b). Another technique al-
lows structure-sharing of nodes that are the same,
but have different subtrees (local ambiguity pack-
ing). To do this, we introduce an attribute group
which defines a common name (node 10) for two
or more alternative relations. Node 11 refers to ei-
ther one of the three subtrees (with nodel0a/b/c).
While local ambiguity packing saves space, it is
limited to those cases where the unified node con-
tains exactly the same data. This applies to the
score given to node 14 which might depend on
the (ambiguous) structure of its content. If so, lo-
cal ambiguity packing cannot be used by the client
application.
In case of dependencies among alternative
nodes, separate analyses should be used. The ra-
tionale for this suggestion is a lower complexity at
the client application side. The alternative, an ex-
plicit disjunction with a tag that groups relations
within the relation set, would demand more elab-
orate processing of the representation.
</bodyText>
<page confidence="0.9924">
81
</page>
<figure confidence="0.950029">
&lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&gt;
&lt;!DOCTYPE urml SYSTEM &amp;quot;urml.dtd&amp;quot;â€º
&lt;urml&gt;
&lt;header&gt;
&lt;reltypes&gt;
</figure>
<construct confidence="0.35946975">
&lt;rel name=&amp;quot;Cause&amp;quot; type=&amp;quot;hyp&amp;quot;/&gt;
&lt;rel name=&amp;quot;Circumstance&amp;quot; type=&amp;quot;hyp&amp;quot;/&gt;
&lt;rel name=&amp;quot;Concession&amp;quot; type=&amp;quot;hyp&amp;quot;/&gt;
&lt;rel name=&amp;quot;Condition&amp;quot; type=&amp;quot;hyp&amp;quot;/&gt;
&lt;rel name=&amp;quot;Contrast&amp;quot; type=&amp;quot;par&amp;quot;/&gt;
&lt;rel name=&amp;quot;Elaboration&amp;quot; type=&amp;quot;hyp&amp;quot;/&gt;
&lt;rel name=&amp;quot;Joint&amp;quot; type=&amp;quot;par&amp;quot;/&gt;
&lt;rel name=&amp;quot;List&amp;quot; type=&amp;quot;par&amp;quot;/&gt;
&lt;rel name=&amp;quot;Means&amp;quot; type=&amp;quot;hyp&amp;quot;/&gt;
&lt;rel name=&amp;quot;Purpose&amp;quot; type=&amp;quot;hyp&amp;quot;/&gt;
&lt;rel name=&amp;quot;Resuit&amp;quot; type=&amp;quot;par&amp;quot;/&gt;
&lt;rel name=&amp;quot;Sequence&amp;quot; type=&amp;quot;par&amp;quot;/&gt;
</construct>
<figure confidence="0.499307205882353">
&lt;/reltypes&gt;
&lt;/header&gt;
&lt;document id=&amp;quot;sample001&amp;quot;â€º
&lt;text&gt;
&lt;segment id=&amp;quot;1A&amp;quot;&gt;Yesterday, the
delegates
chose their new
representative.&lt;/segment&gt;
&lt;segment id=&amp;quot;1B&amp;quot;&gt;Even though Smith
received only 24 votes,&lt;/segment&gt;
&lt;segment id=&amp;quot;1C&amp;quot;&gt;he accepted the
election with a short
speech.&lt;/segment&gt;
&lt;segment id=&amp;quot;1D&amp;quot;&gt;Then the assembly
applauded for three
minutes.&lt;/segment&gt;
&lt;segment id=&amp;quot;1E&amp;quot;&gt;Due to the upcoming
caucus meeting,&lt;/segment&gt;
&lt;segment id=&amp;quot;1F&amp;quot;&gt;the subsequent
discussion was very
short.&lt;/segment&gt;
&lt;segment id=&amp;quot;1G&amp;quot;&gt;Nonetheless the most
pressing questions could be
resolved.&lt;/segment&gt;
&lt;analysis status=&amp;quot;forest-complete&amp;quot;â€º
&lt;hypRelation id=&amp;quot;node9a&amp;quot; type=&amp;quot;Concession&amp;quot;â€º
&lt;satellite id=&amp;quot;1B&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;1C&amp;quot;/&gt;
&lt;/hypRelation&gt;
&lt;parRelation id=&amp;quot;node9b&amp;quot; type=&amp;quot;Sequencen&gt;
&lt;nucleus id=&amp;quot;1C&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;1D&amp;quot;/&gt;
&lt;/hypRelation&gt;
&lt;hypRelation id=&amp;quot;nodelOa&amp;quot; group=&amp;quot;nodel0&amp;quot;
type=&amp;quot;Cause&amp;quot; score=&amp;quot;.3&amp;quot;â€º
&lt;satellite id=&amp;quot;node9a&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;1D&amp;quot;/&gt;
&lt;/hypRelation&gt;
&lt;parRelation id=&amp;quot;nodelOb&amp;quot; group=&amp;quot;nodel0&amp;quot;
type=&amp;quot;Sequence&amp;quot; score=&amp;quot;.6&amp;quot;â€º
&lt;nucleus id=&amp;quot;node9a&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;1D&amp;quot;/&gt;
&lt;/hypRelation&gt;
&lt;hypRelation id=&amp;quot;nodelOc&amp;quot; group=&amp;quot;nodel0&amp;quot;
type=&amp;quot;Concession&amp;quot; score=&amp;quot;.1&amp;quot;â€º
&lt;satellite id=&amp;quot;1B&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;node9b&amp;quot;/&gt;
&lt;/hypRelation&gt;
&lt;hypRelation id=&amp;quot;nodel1&amp;quot; type=&amp;quot;Elaboration&amp;quot;
score=&amp;quot; .4&amp;quot;&gt;
&lt;nucleus id=&amp;quot;1A&amp;quot;/&gt;
&lt;satellite id=&amp;quot;nodel0&amp;quot;/&gt;
&lt;/hypRelation&gt;
&lt;relation id=&amp;quot;node12&amp;quot;â€º
&lt;element id=&amp;quot;1E&amp;quot;/&gt;
&lt;element id=&amp;quot;1F&amp;quot;/&gt;
&lt;/hypRelation&gt;
&lt;parRelation id=&amp;quot;nodel3&amp;quot; type=&amp;quot;Contrast&amp;quot;â€º
&lt;nucleus id=&amp;quot;node12&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;1G&amp;quot;/&gt;r
&lt;/parRelation&gt;
&lt;parRelation id=&amp;quot;nodel4&amp;quot; type=&amp;quot;Sequence&amp;quot;â€º
&lt;nucleus id=&amp;quot;nodell&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;node13&amp;quot;/&gt;
&lt;nucleus id=&amp;quot;1H&amp;quot;/&gt;
&lt;segment id=&amp;quot;1H&amp;quot;&gt;The meeting was closed &lt;/parRelation&gt;
at 7pm. &lt;P /&gt;&lt;/segment&gt; &lt;/analysis&gt;
&lt;/text&gt; &lt;/document&gt;&lt;/urmi&gt;
</figure>
<figureCaption confidence="0.997788">
Figure 3: Sample URML document. Meta data is not given.
</figureCaption>
<subsectionHeader confidence="0.997481">
4.5 Interpreting relation sets
</subsectionHeader>
<bodyText confidence="0.998558727272727">
Turning now to automatic tools for structural anal-
ysis, we encounter three paradigms to under-
stand sets of relations, which correspond to dif-
ferent phases of analysis. The first is the parse
forest scheme, where concurrent partial analyses
are present. The parse forest holds relations al-
ready processed. They may be annotated with
a score (Fig. 3, node 10a/b/c). We indicate the
scheme in the &lt;analysis&gt; element with a
status=&amp;quot; forest&amp;quot; attribute.
Different stages of discourse analysis will mod-
ify existing relation scores and add new re-
lations. At this phase of analysis (status
=&amp;quot; forestâ€”complete&amp;quot;), a missing relation in
the URML document indicates that this relation
has not been considered yet. If it was con-
sidered, it should be included, possibly with a
s co r e= &amp;quot; 0&amp;quot; attribute. When the process is fin-
ished, pruning may occur and low-scoring rela-
tions may be removed from the relation set. This
changes the semantics of the parse forest: relations
that don&apos;t exist in the forest are assumed not to
</bodyText>
<page confidence="0.995342">
82
</page>
<bodyText confidence="0.9991624">
hold.
The third way to see a set of relations is the
interpretation scheme. Here, the analysis
algorithm has singled out (and, possibly, scored) a
whole, well-formed derivation.
As shown, the forest scheme assigns scores to
each relation, while the second scheme assigns
them to each analysis. This happens on grounds of
the locality of classification decisions. In bottom-
up style algorithms, the partial analyses are prese-
lected only according to local constraints, i.e. con-
straints that refer to data covered by the local text
spans. For example, the rhetorical relation LIST
might be proposed to hold between the segments
B and C, because of a comma found at the right
border of B and the connective and found at the
left border of C. At a later stage in processing, the
analysis algorithm might find that B, C elaborate
on A, which ends with the words &amp;quot;is highly con-
tradictory&amp;quot; and a colon. It may revise its earlier
decision and find that a CONTRAST relation holds
between B, C, because of the ELABORATION re-
lation and the cue phrase to be found. These prop-
erties are non-local.
The three-scheme layout shown here does not
restrict analysis algorithms to work decrementally,
reducing the search-space tool by tool. They
can, alternatively, add anticipated relations. These
tools should add their own &lt;analysis&gt; to the
document.
</bodyText>
<sectionHeader confidence="0.992591" genericHeader="method">
5 Some applications
</sectionHeader>
<subsectionHeader confidence="0.764594">
5.1 Collecting rhetorical corpora with
URML
</subsectionHeader>
<bodyText confidence="0.999881653846154">
The format described has evolved from a practi-
cal application. We collected a corpus of German
language newspaper texts and performed manual
rhetorical annotation confirming to RST. A web-
crawler proved to be the most practical solution to
download and normalize the newspaper texts from
a web site. With the consent of the publisher, it
accessed the newspaper&apos;s online edition, stripped
away layout-specific markup and conserved exact
source information including some meta-data re-
garding authorship, date, newspaper section etc.
Two annotators worked through 173 texts. Data
was converted from the annotation application for-
mat to URML, part-of-speech-tagged and segmen-
tized with Perl tools. These access external to-
kenization and tagging applications. We used a
GUI-based tool (O&apos;Donnell 2000, RSTTool 3.1)
to annotate the data with rhetorical structures and
then converted it to URML.
Also, the RST-annotated collection of English
language newspaper articles presented in Carlson
et al. (2001) was converted to URML. It contains
almost 21,800 minimal discourse units in 385 doc-
uments of varying sizes.
For both corpora, URML can represent all of
the structures.
</bodyText>
<subsectionHeader confidence="0.99121">
4.6 Specializing the DTD
</subsectionHeader>
<bodyText confidence="0.9998925">
The proposed document type definition (DTD) is
open. We see it as a base class that may be ex-
tended. Therefore, unknown tags should be ig-
nored by applications. We have used a derived
DTD which provides optional part-of-speech in-
formation for each token of a text and includes
results from a stemming algorithm. Other exten-
sions could, e.g., designate boundaries of topic
chains or disambiguate discourse markers. Exist-
ing documents should still be valid with a special-
ized DTD, so that corpus data can be imported for
evaluation. For exchanging data in the other direc-
tion, additional tags can usually be easily stripped
away.
</bodyText>
<subsectionHeader confidence="0.997513">
5.2 Learning classification with URML
</subsectionHeader>
<bodyText confidence="0.999973076923077">
We also used the underspecified representation in
a machine-learning approach to rhetorical analysis
(Reitter to appear). Our rhetorical classification
decisions are based on a variety of shallow fea-
tures, which are annotated by a chain of tools. Our
machine learning tool uses a standard XML parser
(Xerces) to build a DOM representation and oper-
ates on this data in memory. As the further feature
extraction process is costly in terms of space and
time, we use indexing algorithms to access data
quickly. At any time, we can serialize the current
parse forest or single relations, which provides an
adequate debugging and optimization output.
</bodyText>
<page confidence="0.994435">
83
</page>
<subsectionHeader confidence="0.885314">
5.3 Building tools with XML/DOM
</subsectionHeader>
<bodyText confidence="0.999981">
We use the data format to incrementally annotate
data using various tools. The XML-based for-
mat serves as common interface between the tools.
This interface standardization facilitates the im-
plementation of a layer-based processing model.
Each layer may be assigned to different machine
or human annotators.
The Document Object Model (DOM) defines
an interface to access a tree-structure of the doc-
ument, created by an off-the-shelf XML parser.
This allows fairly easy access to the data. The
development of annotation tools profited from the
fact that corpus-related DOM data could be visu-
alized easily through a generic formating routine
at any point during a system run.
For simple tools that access only partial content,
such as tokenizers and POS taggers, we recom-
mend to have them operate on the raw XML files
with regular expressions.
</bodyText>
<subsectionHeader confidence="0.972387">
5.4 Editing and Visualization
</subsectionHeader>
<bodyText confidence="0.999993375">
Thanks to the XML architecture, the URML-
based corpus can be inspected and manually edited
with one of numerous XML browsers and edi-
tors available. For the purpose of visualization,
we provide a package for L^,TEX(Reitter 2002).
Rhetorical analyses and their corresponding doc-
ument text can be extracted from the URML data
and converted to the appropriate format.
</bodyText>
<sectionHeader confidence="0.998734" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999994888888889">
We have shown an underspecification method for
rhetorical structure and introduced an XML-based
corpus format. The format has already proven to
be useful in corpus collection efforts, in a pipeline-
based rhetorical parser, and in the implementa-
tion of a machine-learning analysis algorithm. We
would like to see it as proposal towards a standard-
ization of corpus representation and for tool build-
ing in rhetorical analysis.
</bodyText>
<sectionHeader confidence="0.998827" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.975162454545454">
Billot, S. &amp; Lang, B. (1989), The structure of
shared forests in ambiguous parsing, in &apos;Pro-
ceedings of the 27th Meeting of the Association
for Computational Linguistics&apos;, pp. 143-151.
Carlson, L., Marcu, D. &amp; Okurowski, M. E.
(2001), Building a discourse-tagged corpus in
the framework of rhetorical structure theory, in
&apos;Proc. of the 2nd SIGDIAL Workshop on Dis-
course and Dialogue, Eurospeech&apos;, Denmark.
Corston-Oliver, S. H. (1998), Computing Repre-
sentations of Discourse Structure, PhD thesis,
University of California, Santa Barbara, CA.
Cristea, D. &amp; Webber, B. (1997), Expectations in
incremental discourse processing, in &apos;Proc. of
ACL-EACL97&apos;, Madrid, Spain, pp. 88-95.
Grosz, B. J. &amp; Sidner, C. L. (1986), &apos;Attention, in-
tentions, and the structure of discourse&apos;, Com-
putational Linguistics 12, 175-204.
Mann, W. C. &amp; Thompson, S. A. (1988), &apos;Rhetori-
cal Structure Theory: Towards a functional the-
ory of text organization&apos;, Text 8(3), 243-281.
Marcu, D. (2000), The theory and practice of dis-
course parsing and summarization, MIT Press,
Cambridge, MA.
O&apos;Donnell, M. (2000), RSTTool 2.4 â€” a markup
tool for Rhetorical Structure Theory, in &apos;Proc.
of the 1st International Natural Language Gen-
eration Conference, Mitzpe Ramon, Israel&apos;.
Rehm, G. (1998), Voriiberlegungen zur automa-
tischen Zusammenfassung deutschsprachiger
Texte mittels einer SGML- und DSSSL-
basierten Reprasentation von RST-Relationen,
Master&apos;s thesis, Universitat Giessen.
</reference>
<bodyText confidence="0.9632779">
Reitter, D. (2002), Rhetorical theory in La-
TeX with the `rse package, Technical report,
http://www.reitter-it-media.de/compling/.
Reitter, D. (to appear), Complex signals for
rhetorics: On rhetorical analysis with rich-
feature support vector models, in &apos;in Proceed-
ings of the GLDV conference 2003&apos;.
Schilder, F. (2002), &apos;Robust discourse parsing
via discourse markers, topicality and position&apos;,
Natural Language Engineering 8 (2/3).
</bodyText>
<page confidence="0.998235">
84
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.685419">
<title confidence="0.999157">Step by step: underspecified markup in incremental rhetorical analysis *</title>
<author confidence="0.999538">David Reitter Manfred Stede</author>
<affiliation confidence="0.97721">Media Lab Europe University of Potsdam Adaptive Speech Interfaces Dept. of Linguistics</affiliation>
<address confidence="0.969219">Sugar House Lane, Dublin 8, Ireland P.O. Box 601553, 14415 Potsdam, Germany</address>
<email confidence="0.827998">.media.mitedustede@lingde</email>
<abstract confidence="0.9913569375">While quite a few linguistic corpora with syntactic annotations are available today, resources are scarce on the level of discourse annotation. As a step flexible, extendible propose an XML format for annotating rhetorical structure trees. For human and automatic analysis alike, rhetorical structure is often difficult and assigned incrementally. Thus, our forallows for paper discusses the various design decisions involved, illustrates the format with an example, and sketches some applications.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Billot</author>
<author>B Lang</author>
</authors>
<title>The structure of shared forests in ambiguous parsing,</title>
<date>1989</date>
<booktitle>in &apos;Proceedings of the 27th Meeting of the Association for Computational Linguistics&apos;,</booktitle>
<pages>143--151</pages>
<contexts>
<context position="9535" citStr="Billot &amp; Lang 1989" startWordPosition="1513" endWordPosition="1516">etations, along with their probabilistic scores as derived from corpus training. â€” In conclusion, we propose that a representation format should provide the possibility of multiple analyses. 4 Rhetorical annotation in URML 4.1 Basics Our representation format URML (Underspecified rhetorical markup language) allows for a free definition of dependencies among text spans. It clearly separates: 1) Symbolic system and, in the document, an inventory of relation instances. A document annotation contains a set of relations that can be found in the data. Similar to a parse forest in syntactic parsing (Billot &amp; Lang 1989), it may state ambiguous relations. Some may even be incompatible according to the axioms that defined a well-formed rhetorical analysis. This is defined by the format; all relation instances may be represented using URML. 2) Axioms and, in the document, well-formed tree analyses of a text. It is up to the client software to define restrictions that hold for well-formed analyses. A well-formed analysis contains a subset of the relations defined in the relation set of the document. This wellformed analysis can also be represented and identified as such in URML. We chose XML as underlying formal</context>
</contexts>
<marker>Billot, Lang, 1989</marker>
<rawString>Billot, S. &amp; Lang, B. (1989), The structure of shared forests in ambiguous parsing, in &apos;Proceedings of the 27th Meeting of the Association for Computational Linguistics&apos;, pp. 143-151.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Carlson</author>
<author>D Marcu</author>
<author>M E Okurowski</author>
</authors>
<title>Building a discourse-tagged corpus in the framework of rhetorical structure theory,</title>
<date>2001</date>
<booktitle>in &apos;Proc. of the 2nd SIGDIAL Workshop on Discourse and Dialogue,</booktitle>
<location>Eurospeech&apos;, Denmark.</location>
<contexts>
<context position="7285" citStr="Carlson et al. 2001" startWordPosition="1151" endWordPosition="1154"> relation holds between span A with several segments and span B, the same (or, a similar) relation holds between the nucleus of span A and span B (Marcu 2000, compositionality criterion). Empirical evidence we gained in the collection of our newspaper corpus supports this view: in the intuition of the annotators, in no case was the non-nucleus-sharing, tree-structured representation representationally weaker than the nucleussharing view. The choice between the two possibilities for a two-satellite-one-nucleus schema was usually made from referential clues. Also, in the RST Discourse Treebank (Carlson et al. 2001), we found that only in 9 out of 17962 relation schemas (in the partition labeled &apos;training&apos;) there were satellites relating to a common nucleus with a hypotactic relation. We therefore chose to implement just binary relations and no RST schemas. 78 1F lA ELABORATION CAUSE 1G SEQUENCE CONCESSION 1D 1B IC 1H [Yesterday, the delegates chose their new representative.]lA [Even though Smith received only 24 votes,] -B [he accepted the election with a short speech.]W [Then the assembly applauded for three minutes.] ip [Due to the upcoming caucus meeting,]-E [the subsequent discussion was very short.</context>
<context position="12672" citStr="Carlson et al. (2001)" startWordPosition="2006" endWordPosition="2009">a way to identify the annotator. Similarly, documents may get corrupted due to bugs in an annotation tool. Thus, a source identifier is needed. Within an &lt;info&gt; tag, source information for documents and a reference to the annotator can be given. &lt;analysis id=&amp;quot;maz3379.a.1&amp;quot; scheme= &amp;quot;interpretation&amp;quot;â€º &lt;info&gt; 4.3 Representing tree structure in XML One crucial decision in syntax design was whether annotations should be coded as on-thespot markup within the text or as relation nodes with referential indices. The first variant is easy to read (and is analogous to the one used in a LISPstyle format in Carlson et al. (2001)). For example: &lt;concession&gt; &lt;satellite&gt;Admittedly, ...&lt;/satellite&gt; &lt;nucleus&gt; &lt;contrast&gt; &lt;nucleus&gt;However, some ...&lt;/nucleus&gt; &lt; nucleus&gt;others ...&lt;/nucleus&gt; &lt;/contrast&gt; &lt;/nucleus&gt; &lt;/concession&gt; This format demands a fully specified, unambiguous single tree structure and encodes the underlying relation set in the document grammar (DTD). In XML, this may be desirable when generic editors are used, because they restrict annotators to comply with the DTD, thus with claims of the underlying discourse theory. All processing modules, however, are also determined to follow the fixed syntax. Changes in</context>
<context position="24083" citStr="Carlson et al. (2001)" startWordPosition="3703" endWordPosition="3706">n, stripped away layout-specific markup and conserved exact source information including some meta-data regarding authorship, date, newspaper section etc. Two annotators worked through 173 texts. Data was converted from the annotation application format to URML, part-of-speech-tagged and segmentized with Perl tools. These access external tokenization and tagging applications. We used a GUI-based tool (O&apos;Donnell 2000, RSTTool 3.1) to annotate the data with rhetorical structures and then converted it to URML. Also, the RST-annotated collection of English language newspaper articles presented in Carlson et al. (2001) was converted to URML. It contains almost 21,800 minimal discourse units in 385 documents of varying sizes. For both corpora, URML can represent all of the structures. 4.6 Specializing the DTD The proposed document type definition (DTD) is open. We see it as a base class that may be extended. Therefore, unknown tags should be ignored by applications. We have used a derived DTD which provides optional part-of-speech information for each token of a text and includes results from a stemming algorithm. Other extensions could, e.g., designate boundaries of topic chains or disambiguate discourse ma</context>
</contexts>
<marker>Carlson, Marcu, Okurowski, 2001</marker>
<rawString>Carlson, L., Marcu, D. &amp; Okurowski, M. E. (2001), Building a discourse-tagged corpus in the framework of rhetorical structure theory, in &apos;Proc. of the 2nd SIGDIAL Workshop on Discourse and Dialogue, Eurospeech&apos;, Denmark.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S H Corston-Oliver</author>
</authors>
<title>Computing Representations of Discourse Structure,</title>
<date>1998</date>
<tech>PhD thesis,</tech>
<institution>University of California,</institution>
<location>Santa Barbara, CA.</location>
<contexts>
<context position="4471" citStr="Corston-Oliver 1998" startWordPosition="696" endWordPosition="697">incremental annotation of cues and rhetorical structure. Other representation efforts include Rehm (1998), who uses an SGML syntax to identify rhetorical cues. The annotation application RSTTool (O&apos;Donnell 2000) writes annotation data from single documents in several SGML based formats that include no underspecification. In contrast to this format, our representation integrates various layers of annotation; this is targeted primarily at automatic analysis, which will have to take into account quite different kinds of information before making a decision about rhetorical relations (Marcu 2000, Corston-Oliver 1998). 3 Accounts of rhetorical structure 3.1 Basis: Rhetorical Structure Theory Rhetorical Structure Theory (Mann &amp; Thompson 1988, RST) builds tree structures on top of rhetorical relationships that hold among minimal units of text and recursively among larger units as well. RST proposes a set of such relations, including e.g. ELABORATION(A, B), which is defined as a text span B giving additional information regarding the facts presented in span A, and CONTRAST, which is defined as the contents of two or more text spans being knowingly presented as incompatible. Depending on the relation, a text s</context>
</contexts>
<marker>Corston-Oliver, 1998</marker>
<rawString>Corston-Oliver, S. H. (1998), Computing Representations of Discourse Structure, PhD thesis, University of California, Santa Barbara, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Cristea</author>
<author>B Webber</author>
</authors>
<title>Expectations in incremental discourse processing,</title>
<date>1997</date>
<booktitle>in &apos;Proc. of ACL-EACL97&apos;,</booktitle>
<pages>88--95</pages>
<location>Madrid,</location>
<contexts>
<context position="6342" citStr="Cristea &amp; Webber 1997" startWordPosition="1000" endWordPosition="1003">ariety of texts; RST does not claim that this set be &amp;quot;closed&amp;quot;. As for the span structure, RST posits that relations do not overlap and do not share elements (except hypotactic relations sharing a nucleus â€” see below) . Marcu (2000) provides a formalization of the framework of rhetorical structure. 3.2 Binary trees The proposal by Mann &amp; Thompson (1988) offers the possibility of binary hypotactic relations sharing a common nucleus. Each nucleus and all its satellites form the instantiation of a schema. Subsequent applications of the theory, however, mainly made use of the idea of binary trees (Cristea &amp; Webber 1997, Marcu 2000, and others). These contain a nucleus and exactly one satellite, or exactly two nuclei, respectively. In Fig. 2, analysis (1) can be represented as shown in analysis (2). This assumes that the nucleus contributes the essential meaning in comparison to its satellite and &amp;quot;promotes it upward&amp;quot;. Consequently, if a relation holds between span A with several segments and span B, the same (or, a similar) relation holds between the nucleus of span A and span B (Marcu 2000, compositionality criterion). Empirical evidence we gained in the collection of our newspaper corpus supports this view</context>
</contexts>
<marker>Cristea, Webber, 1997</marker>
<rawString>Cristea, D. &amp; Webber, B. (1997), Expectations in incremental discourse processing, in &apos;Proc. of ACL-EACL97&apos;, Madrid, Spain, pp. 88-95.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B J Grosz</author>
<author>C L Sidner</author>
</authors>
<title>Attention, intentions, and the structure of discourse&apos;,</title>
<date>1986</date>
<journal>Computational Linguistics</journal>
<volume>12</volume>
<pages>175--204</pages>
<contexts>
<context position="8586" citStr="Grosz &amp; Sidner 1986" startWordPosition="1362" endWordPosition="1365">was closed at 7pm.]1H Figure 1: A text analysis within Rhetorical Structure Theory. It is one of the interpretations that can be derived from the underspecified URML representation in Fig. 3 3.3 Is a single tree adequate? The tree-structured approach of RST prima facie suggests that there is - even though several distinct analyses may be drawn from a text (Mann &amp; Thompson (1988) themselves had acknowledged potential sources of ambiguity) - only one structure that is faithful to the writer&apos;s intentions. It may however be questioned whether there is indeed such a &amp;quot;primary rhetorical intention&amp;quot; (Grosz &amp; Sidner 1986). Furthermore, when it comes to automatic rhetorical analysis, a program will have difficulties deriving the one and only correct structure. One of our own approaches (Reitter to appear) tries to derive a single interpretation that most likely matches the writer&apos;s intention; however, the algorithm can also output several interpretations, along with their probabilistic scores as derived from corpus training. â€” In conclusion, we propose that a representation format should provide the possibility of multiple analyses. 4 Rhetorical annotation in URML 4.1 Basics Our representation format URML (Unde</context>
</contexts>
<marker>Grosz, Sidner, 1986</marker>
<rawString>Grosz, B. J. &amp; Sidner, C. L. (1986), &apos;Attention, intentions, and the structure of discourse&apos;, Computational Linguistics 12, 175-204.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W C Mann</author>
<author>S A Thompson</author>
</authors>
<title>Rhetorical Structure Theory: Towards a functional theory of text organization&apos;,</title>
<date>1988</date>
<journal>Text</journal>
<volume>8</volume>
<issue>3</issue>
<pages>243--281</pages>
<contexts>
<context position="2601" citStr="Mann &amp; Thompson (1988)" startWordPosition="404" endWordPosition="407">n the other hand, ...). Thus it should be possible to leave such a matter open and represent it accordingly. 2) For automatic rhetorical analysis, the problem above is much more pressing. Rather than enforcing a decision all the time, it is desirable for a parser to leave some aspects underspecified, represent this clearly, and possibly have additional components making a choice later on the basis of additional knowledge. More generally, underspecification allows for incremental rhetorical analysis based on sound representations. We assume a theory of rhetorical description along the lines of Mann &amp; Thompson (1988), which assigns relations between adjacent spans of text and recursively builds up a tree. We have applied our format to both manual and experimental automatic analyses of a new corpus of German newspaper texts. The format is open to extension and specialization, e.g. to enable multi-modal applications. In general, we think that the emergence of a standard for rhetorical annotation will be instrumental for comparing analyses, and obviously for training stochastic or machine learning algorithms. 2 Previous work Schilder (2002) formalizes a symbolic underspec77 ification scheme for rhetorical st</context>
<context position="4596" citStr="Mann &amp; Thompson 1988" startWordPosition="711" endWordPosition="714">yntax to identify rhetorical cues. The annotation application RSTTool (O&apos;Donnell 2000) writes annotation data from single documents in several SGML based formats that include no underspecification. In contrast to this format, our representation integrates various layers of annotation; this is targeted primarily at automatic analysis, which will have to take into account quite different kinds of information before making a decision about rhetorical relations (Marcu 2000, Corston-Oliver 1998). 3 Accounts of rhetorical structure 3.1 Basis: Rhetorical Structure Theory Rhetorical Structure Theory (Mann &amp; Thompson 1988, RST) builds tree structures on top of rhetorical relationships that hold among minimal units of text and recursively among larger units as well. RST proposes a set of such relations, including e.g. ELABORATION(A, B), which is defined as a text span B giving additional information regarding the facts presented in span A, and CONTRAST, which is defined as the contents of two or more text spans being knowingly presented as incompatible. Depending on the relation, a text span may take the role of nucleus or satellite. &apos;Paratactic&apos; relations hold among several nuclei; &apos;hypotactic&apos; relations hold </context>
<context position="6075" citStr="Mann &amp; Thompson (1988)" startWordPosition="957" endWordPosition="960">d to linguistic properties such as connectives or sentence types. Semantic and world-knowledge based constraints are supposed to interact with the presumed writer&apos;s or speaker&apos;s intentions. The set of relations was proposed on the basis of empirical work with a wide variety of texts; RST does not claim that this set be &amp;quot;closed&amp;quot;. As for the span structure, RST posits that relations do not overlap and do not share elements (except hypotactic relations sharing a nucleus â€” see below) . Marcu (2000) provides a formalization of the framework of rhetorical structure. 3.2 Binary trees The proposal by Mann &amp; Thompson (1988) offers the possibility of binary hypotactic relations sharing a common nucleus. Each nucleus and all its satellites form the instantiation of a schema. Subsequent applications of the theory, however, mainly made use of the idea of binary trees (Cristea &amp; Webber 1997, Marcu 2000, and others). These contain a nucleus and exactly one satellite, or exactly two nuclei, respectively. In Fig. 2, analysis (1) can be represented as shown in analysis (2). This assumes that the nucleus contributes the essential meaning in comparison to its satellite and &amp;quot;promotes it upward&amp;quot;. Consequently, if a relation </context>
<context position="8347" citStr="Mann &amp; Thompson (1988)" startWordPosition="1324" endWordPosition="1327">on with a short speech.]W [Then the assembly applauded for three minutes.] ip [Due to the upcoming caucus meeting,]-E [the subsequent discussion was very short.] iF [ Nonetheless the most pressing questions could be resolvedliG [The meeting was closed at 7pm.]1H Figure 1: A text analysis within Rhetorical Structure Theory. It is one of the interpretations that can be derived from the underspecified URML representation in Fig. 3 3.3 Is a single tree adequate? The tree-structured approach of RST prima facie suggests that there is - even though several distinct analyses may be drawn from a text (Mann &amp; Thompson (1988) themselves had acknowledged potential sources of ambiguity) - only one structure that is faithful to the writer&apos;s intentions. It may however be questioned whether there is indeed such a &amp;quot;primary rhetorical intention&amp;quot; (Grosz &amp; Sidner 1986). Furthermore, when it comes to automatic rhetorical analysis, a program will have difficulties deriving the one and only correct structure. One of our own approaches (Reitter to appear) tries to derive a single interpretation that most likely matches the writer&apos;s intention; however, the algorithm can also output several interpretations, along with their prob</context>
</contexts>
<marker>Mann, Thompson, 1988</marker>
<rawString>Mann, W. C. &amp; Thompson, S. A. (1988), &apos;Rhetorical Structure Theory: Towards a functional theory of text organization&apos;, Text 8(3), 243-281.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Marcu</author>
</authors>
<title>The theory and practice of discourse parsing and summarization,</title>
<date>2000</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="4449" citStr="Marcu 2000" startWordPosition="694" endWordPosition="695"> and for an incremental annotation of cues and rhetorical structure. Other representation efforts include Rehm (1998), who uses an SGML syntax to identify rhetorical cues. The annotation application RSTTool (O&apos;Donnell 2000) writes annotation data from single documents in several SGML based formats that include no underspecification. In contrast to this format, our representation integrates various layers of annotation; this is targeted primarily at automatic analysis, which will have to take into account quite different kinds of information before making a decision about rhetorical relations (Marcu 2000, Corston-Oliver 1998). 3 Accounts of rhetorical structure 3.1 Basis: Rhetorical Structure Theory Rhetorical Structure Theory (Mann &amp; Thompson 1988, RST) builds tree structures on top of rhetorical relationships that hold among minimal units of text and recursively among larger units as well. RST proposes a set of such relations, including e.g. ELABORATION(A, B), which is defined as a text span B giving additional information regarding the facts presented in span A, and CONTRAST, which is defined as the contents of two or more text spans being knowingly presented as incompatible. Depending on </context>
<context position="5952" citStr="Marcu (2000)" startWordPosition="940" endWordPosition="941">such that the resulting tree is a characterization of a text&apos;s overall coherence. Their definitions are not linked to linguistic properties such as connectives or sentence types. Semantic and world-knowledge based constraints are supposed to interact with the presumed writer&apos;s or speaker&apos;s intentions. The set of relations was proposed on the basis of empirical work with a wide variety of texts; RST does not claim that this set be &amp;quot;closed&amp;quot;. As for the span structure, RST posits that relations do not overlap and do not share elements (except hypotactic relations sharing a nucleus â€” see below) . Marcu (2000) provides a formalization of the framework of rhetorical structure. 3.2 Binary trees The proposal by Mann &amp; Thompson (1988) offers the possibility of binary hypotactic relations sharing a common nucleus. Each nucleus and all its satellites form the instantiation of a schema. Subsequent applications of the theory, however, mainly made use of the idea of binary trees (Cristea &amp; Webber 1997, Marcu 2000, and others). These contain a nucleus and exactly one satellite, or exactly two nuclei, respectively. In Fig. 2, analysis (1) can be represented as shown in analysis (2). This assumes that the nucl</context>
</contexts>
<marker>Marcu, 2000</marker>
<rawString>Marcu, D. (2000), The theory and practice of discourse parsing and summarization, MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M O&apos;Donnell</author>
</authors>
<title>RSTTool 2.4 â€” a markup tool for Rhetorical Structure Theory,</title>
<date>2000</date>
<booktitle>in &apos;Proc. of the 1st International Natural Language Generation Conference,</booktitle>
<location>Mitzpe Ramon, Israel&apos;.</location>
<contexts>
<context position="4062" citStr="O&apos;Donnell 2000" startWordPosition="635" endWordPosition="636">nt, and for a specific pair of segments, the set of relations may be constrained during one of the analysis steps. His symbolic system is targeted at an analysis architecture based on cue phrases and a topicality measure that both constrain the rhetorical structure. In contrast, our architecture defines a serialized, XML based intermediate format that allows for the exchange of corpus data and for an incremental annotation of cues and rhetorical structure. Other representation efforts include Rehm (1998), who uses an SGML syntax to identify rhetorical cues. The annotation application RSTTool (O&apos;Donnell 2000) writes annotation data from single documents in several SGML based formats that include no underspecification. In contrast to this format, our representation integrates various layers of annotation; this is targeted primarily at automatic analysis, which will have to take into account quite different kinds of information before making a decision about rhetorical relations (Marcu 2000, Corston-Oliver 1998). 3 Accounts of rhetorical structure 3.1 Basis: Rhetorical Structure Theory Rhetorical Structure Theory (Mann &amp; Thompson 1988, RST) builds tree structures on top of rhetorical relationships t</context>
<context position="14845" citStr="O&apos;Donnell 2000" startWordPosition="2348" endWordPosition="2349">t and right borders in the sequence of minimal discourse units. This way, ambiguous analyses would share common nodes high up in the tree. However, in a scenario of probabilistic analysis, it would violate our assumption that the score assigned to those nodes relates to their descendants. In the example given in Fig. 1, the score given to the CAUSE relation might be lower because the connective then in segment ID usually indicates a SEQUENCE relation. Paratactic and hypotactic relations are represented in the same way, and there are no additional span types. In contrast to the RSTTool format (O&apos;Donnell 2000), our URML format is not aimed at presenting and manipulating RST diagrams. Rather, we wish to store rhetorically annotated data, potentially underspecified, in a manner that is independent from a particular application and readable for both humans and machines. In contrast to semantics-based representations (Schilder 2002), URML refers to textual data. It implicitly states linear precedence. Tree nodes in an analysis state immediate dominance; underspecified dominance situations have to be explicitly stated with concurrent tree nodes. This keeps annotations simple enough to work with them bot</context>
<context position="23881" citStr="O&apos;Donnell 2000" startWordPosition="3675" endWordPosition="3676">. A webcrawler proved to be the most practical solution to download and normalize the newspaper texts from a web site. With the consent of the publisher, it accessed the newspaper&apos;s online edition, stripped away layout-specific markup and conserved exact source information including some meta-data regarding authorship, date, newspaper section etc. Two annotators worked through 173 texts. Data was converted from the annotation application format to URML, part-of-speech-tagged and segmentized with Perl tools. These access external tokenization and tagging applications. We used a GUI-based tool (O&apos;Donnell 2000, RSTTool 3.1) to annotate the data with rhetorical structures and then converted it to URML. Also, the RST-annotated collection of English language newspaper articles presented in Carlson et al. (2001) was converted to URML. It contains almost 21,800 minimal discourse units in 385 documents of varying sizes. For both corpora, URML can represent all of the structures. 4.6 Specializing the DTD The proposed document type definition (DTD) is open. We see it as a base class that may be extended. Therefore, unknown tags should be ignored by applications. We have used a derived DTD which provides op</context>
</contexts>
<marker>O&apos;Donnell, 2000</marker>
<rawString>O&apos;Donnell, M. (2000), RSTTool 2.4 â€” a markup tool for Rhetorical Structure Theory, in &apos;Proc. of the 1st International Natural Language Generation Conference, Mitzpe Ramon, Israel&apos;.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Rehm</author>
</authors>
<title>Voriiberlegungen zur automatischen Zusammenfassung deutschsprachiger Texte mittels einer SGML- und DSSSLbasierten Reprasentation von RST-Relationen, Master&apos;s thesis,</title>
<date>1998</date>
<institution>Universitat Giessen.</institution>
<contexts>
<context position="3956" citStr="Rehm (1998)" startWordPosition="619" endWordPosition="620">d equivalence of text spans. Similar to our approach, a set of relations is given for the whole document, and for a specific pair of segments, the set of relations may be constrained during one of the analysis steps. His symbolic system is targeted at an analysis architecture based on cue phrases and a topicality measure that both constrain the rhetorical structure. In contrast, our architecture defines a serialized, XML based intermediate format that allows for the exchange of corpus data and for an incremental annotation of cues and rhetorical structure. Other representation efforts include Rehm (1998), who uses an SGML syntax to identify rhetorical cues. The annotation application RSTTool (O&apos;Donnell 2000) writes annotation data from single documents in several SGML based formats that include no underspecification. In contrast to this format, our representation integrates various layers of annotation; this is targeted primarily at automatic analysis, which will have to take into account quite different kinds of information before making a decision about rhetorical relations (Marcu 2000, Corston-Oliver 1998). 3 Accounts of rhetorical structure 3.1 Basis: Rhetorical Structure Theory Rhetorica</context>
</contexts>
<marker>Rehm, 1998</marker>
<rawString>Rehm, G. (1998), Voriiberlegungen zur automatischen Zusammenfassung deutschsprachiger Texte mittels einer SGML- und DSSSLbasierten Reprasentation von RST-Relationen, Master&apos;s thesis, Universitat Giessen.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>