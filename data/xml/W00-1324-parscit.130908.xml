<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.782699">
A query tool for syntactically annotated corpora*
</title>
<author confidence="0.640277">
Laura Kallmeyer
</author>
<affiliation confidence="0.457064">
UFRL, Universite Paris 7
</affiliation>
<address confidence="0.465333">
2, place Jussieu
75251 Paris cedex 05
</address>
<email confidence="0.994479">
laura.kallmeyer@linguist.jussieu.fr
</email>
<sectionHeader confidence="0.994679" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999981470588235">
This paper presents a query tool for syntacti-
cally annotated corpora. The query tool is de-
veloped to search the Verbmobil treebanks an-
notated at the University of Tübingen. How-
ever, in principle it also can be adapted to
other corpora such as the Negra Corpus, the
Penn Treebank or the French treebank devel-
oped in Paris. The tool uses a query language
that allows to search for tokens, syntactic cat-
egories, grammatical functions and binary re-
lations of (immediate) dominance and linear
precedence between nodes. The overall idea
is to extract in an initializing phase the rele-
vant information from the corpus and store it
in a relational database. An incoming query
is then translated into a corresponding SQL
query that is evaluated on the database.
</bodyText>
<sectionHeader confidence="0.999565" genericHeader="introduction">
1 Introduction
</sectionHeader>
<subsectionHeader confidence="0.998666">
1.1 Syntactic annotation and
linguistic research
</subsectionHeader>
<bodyText confidence="0.998714482758621">
With the increasing availability of large
amounts of electronic texts, linguists have ac-
cess to more and more material for empiri-
cally based linguistic research. Furthermore,
electronic corpora are more and more richly
annotated and thereby more and more de-
tailed and structured information contained
in the corpora becomes accessable. Currently
many corpora are tagged with morphosyntac-
tic categories (part-of-speech) and there are
already several syntactically annotated cor-
pora. Examples are the Penn Treebank (Mar-
cus et al., 1994; Bies et al., 1995) annotated
at the University of Pennsylvania, the Ne-
gra corpus (Brants et al., 1999) developed in
Saarbriicken, the Verbmobil treebanks (Hin-
richs et al., 2000) annotated in Tiibingen
The work presented here was done as part of a
project in SFB 441 &amp;quot;Linguistic Data Structures&amp;quot; at
the University of Tiibingen.
and the French treebank annotated in Paris
(Abeille and Clement, 1999).
However, in order to have access to these
rich linguistic annotations, adequate query
tools are needed.
In the following, an example of a linguisti-
cally relevant construction is considered that
illustrates how useful access to structural in-
formation in a corpus might be.
</bodyText>
<listItem confidence="0.702405666666667">
iiber Chomsky habe ich em n Buch
about Chomsky have I a book
(1) gelesen
</listItem>
<bodyText confidence="0.974080684210526">
read
&apos;I have read a book about Chomsky&apos;
Linguists are often concerned with con-
structions that seem not very natural and
where intuitions about grammaticality fail.
An example is (1) where we have an accusative
object (ein Buch) which is positioned between
the two verbal elements and whose modifier
(the prepositional phrase fiber Chomsky) is
topicalized.
Some people claim (1) to be ungrammatical
whereas other people are inclined to accept it.
In these cases it is very useful to search in an
adequate corpus for more natural data show-
ing the same construction (see also (Meurers,
1999) for other examples of the use of corpora
for linguistic research).
In order to find structures like (1) in a Ger-
man corpus, one needs to search for
</bodyText>
<listItem confidence="0.957463333333333">
(a) a prepositional phrase modifying the ac-
cusative object and preceding the finite
verb (i.e. in the so-called vorfeld), and
(b) an accusative object between finite verb.
and infinite verb forms (i.e. in the so-
called mittelfeld)
</listItem>
<bodyText confidence="0.99928975">
Obviously, two things need to be available
in order to enable such a search. On the one
hand, one needs a corpus with an annotation
that is rich enough to encode the properties
</bodyText>
<page confidence="0.993">
190
</page>
<listItem confidence="0.678496">
(a) and (b). On the other hand, one needs a
query tool with a query language that allows
to express the properties (a) and (b).
Corpora encoding features such as (a) and
(b) are for example the Verbmobil treebanks.
</listItem>
<subsectionHeader confidence="0.971793">
1.2 Current query tools
</subsectionHeader>
<bodyText confidence="0.999959488372093">
Query tools such as xkwic (Christ, 1994) that
allow to search on the tokens and their part-
of-speech categories using regular expressions
do not allow a direct search on the syntac-
tic annotation structures of the corpus, i.e. a
search for specific relations between nodes in
the annotation such as dominance or linear
precedence. Therefore many queries a linguist
would like to ask using a syntactically anno-
tated corpus either cannnot be expressed in a
regular expression based language or at least
cannot be expressed in an intuitive way.
Even more recent query languages as
SgmlQL (Le Maitre et al., 1998) and XML-QL
(Deutsch et al., 1999) that refer to the SGML
or XML annotation of a corpus are in gen-
eral not adequate for syntactically annotated
corpora: if the annotations are trees and
the nesting of SGML/XML elements encodes
the tree structure, such query languages work
nicely. With regular path expressions as sup-
ported by XML-QL, it is possible to search
not only for parent but also for dominance
relations. However, in order to deal with
discontinuous constituents, most syntactically
annotated corpora do not contain trees but
slightly different data structures. The Penn
Treebank for example consists of trees with
an additional coindexation relation, Negra al-
lows crossing branches and in Verbmobil, an
element (a tree-like structure) in the corpus
might contain completely disconnected nodes.
In order to express these annotations in XML,
one has to encode for example each node and
each edge as a single element as in (Mengel
and Lezius, 2000). But then a query for a
dominance relation can no longer be formu-
lated with a regular path expression.
In this paper, I propose a query tool that
allows to search for parent, dominance and
linear precedence relations even in corpora an-
notated with structures slightly different from
trees.
</bodyText>
<sectionHeader confidence="0.979836" genericHeader="method">
2 The Verbmobil treebanks
</sectionHeader>
<bodyText confidence="0.998839">
The German Verbmobil corpus (Stegmann et
al., 1998; Hinrichs et al., 2000) is a tree-
bank annotated at the University of Tübingen
</bodyText>
<equation confidence="0.7239118">
SIMPX
r:=1
MF vc
PX
HD
I I
NX VXFIN
111 HD HD
APPR NE VAFIN PPER
iiber C. habe ich
</equation>
<figureCaption confidence="0.9358505">
Figure 1: Annotation of (1) in Verbmobil for-
mat
</figureCaption>
<bodyText confidence="0.998481371428571">
that contains approx. 38.000 trees (or rather
tree-like annotation structures since, as al-
ready mentioned, the structures are not al-
ways trees). The corpus consists of spoken
texts restricted to the domain of arrangement
of business appointments.
The Verbmobil corpus is part-of-speech
tagged using the Stuttgart Tfibingen tagset
(STTS) described in (Schiller et al., 1995).
One of the design decisions in Verbmobil
was that for the purpose of reusability of the
treebank, the annotation scheme should not
reflect a commitment to a particular syntac-
tic theory. Therefore a surface-oriented an-
notation scheme was adopted that is inspired
by the notion of topological fields in the sense
of (Hale, 1985). The discontinuous position-
ing of the verbal elements in verb-first and
verb-second sentences (as in (1) for example)
is the traditional reason to structure the Ger-
man sentence by means of topological fields:
The verbal elements have the categories LK
(Linke Klammer) and VC (verbal complex), and
roughly everything preceding the LK forms the
`vorfeld&apos; VF, everything between LK and VC
forms the `mittelfeld&apos; MF and the `nachfeld&apos; NF
follows the verbal complex.
The Verbmobil corpus is annotated with
syntactic categories as node labels, grammat-
ical functions as edge labels and dependency
relations. The syntactic categories are based
on traditional phrase structure and on the the-
ory of topological fields. In contrast to Negra
or Penn Treebank, there are neither crossing
branches nor empty categories. Instead, de-
</bodyText>
<figure confidence="0.997877047619047">
El
VF
OA-MOD
11J
LK
HD
ON
NIX
HD
OA
NX
1
HD
1
ART NN
em n Buch
OV
VXINF
F1171
VVPP
gelesen
</figure>
<page confidence="0.99549">
191
</page>
<bodyText confidence="0.998283555555555">
pendency relations are expressed within the
grammatical functions (e.g. OA-MOD for a con-
stituent modifying the accusative object).
A sample annotation conformant to the
Verbmobil annotation scheme is the annota-
tion of (1) shown in Fig. 1. (The elements set
in boxes are edge labels.)
In order to search for structures as in Fig. 1,
one needs to search for trees containing a node
n1 with label PX and grammatical function
0A-MOD, a node n2 with label VF that domi-
nates n1, a node n3 with label MF and a node
714 with label NX and grammatical function OA
that is immediately dominated by 713.
Evaluating a query for structures as in
Fig. 1 on the Verbmobil corpus gives results
such as (2) that sound much more natural
than the constructed example (1).
</bodyText>
<listItem confidence="0.983571">
• tja , fiber Flugverbindungen habe ich
about flight connections have I
(2) leider keine Information.
</listItem>
<bodyText confidence="0.895841125">
unfortunately no information .
&apos;unfortunately I have no information
about flight connections.&apos;
This example illustrates the usefulness of
syntactic annotations for linguistic research
and it shows the need of query languages and
query tools that allow access to these annota-
tions.
</bodyText>
<sectionHeader confidence="0.911686" genericHeader="method">
3 The query language
</sectionHeader>
<subsectionHeader confidence="0.920806">
3.1 Syntax
</subsectionHeader>
<bodyText confidence="0.999698916666667">
As query language for the German Verbmo-
bil corpus, a first order logic without quan-
tification is chosen where variables are inter-
preted as existentially quantified. Negation
is only allowed for atomic formula. It seems
that even this very simple logic already gives
a high degree of expressive power with respect
to the queries linguists are interested in (see
for example (Kallmeyer, 2000) for theoretical
investigations of query languages). However,
it might be that at a later stage the query
language will be extended.
Let C (the node labels, i.e. syntactic cate-
gories and part-of-speech categories), E (the
edge labels, i.e. grammatical functions) and T
(the terminals, i.e. tokens) be pairwise disjoint
finite sets. &gt;, &gt;&gt;, . . are constants for the
binary relations immediate dominance (par-
ent relation), dominance (reflexive transitive
closure of immediate dominance) and linear
precedence. The set IN of natural numbers is
used as variables. Further, &amp;, I, ! are logi-
cal connectives (conjunction, disjunction, and
negation).
</bodyText>
<construct confidence="0.8583505">
Definition 1 ((C, E, T)-queries)
(C,E,T)-queries are inductively defined:
</construct>
<listItem confidence="0.983782375">
(a) for all iE IN, tE T:
token (i)=t and token (i) !=t are
queries,
(b) for all iE IN, CE C:
cat (i)=c and cat (i.) !=c are queries,
(c) for all iE IN, eE E:
fct (i)=e and fct (i) !=e are queries,
(d) for all i, jE IN:
</listItem>
<equation confidence="0.8267936">
i &gt; j and i !&gt; j are queries,
i &gt;&gt; j and i !&gt;&gt; j are queries,
. . j and i ! j are queries,
(e) for all queries qi,q2:
qi &amp; q2 and (qi I q2) are queries.
</equation>
<bodyText confidence="0.999954066666667">
Of course, when adapting this language to
another corpus, depending on the specific an-
notation scheme, other unary or binary pred-
icates might be added to the query language.
This does not change the complexity of the
query language in general.
However, it is also possible that at a later
point negation needs to be allowed in a general
way or that quantification needs to be added
to the query language for linguistic reasons.
Such modifications would affect the complex-
ity of the language and the performance of
the tool. Therefore the decision was taken to
keep the language as simple as possible in the
beginning.
</bodyText>
<subsectionHeader confidence="0.998156">
3.2 Intended models
</subsectionHeader>
<bodyText confidence="0.9988651875">
In the case of the German Verbmobil corpus,
the data structures are not trees, since struc-
tures as in Fig. 2, which shows the annotation
of the long-distance wh-movement in (3), can
occur. The structure in Fig. 2 does not have
a unique root node, and the two nodes with
label SIMPX have neither a dominance nor a
linear precedence relation.
(3) wen glaubst du liebt Maria
whom believe you loves Maria
&apos;whom do you believe Maria loves&apos;
Therefore, the models of our queries are de-
fined as more general structures than finite
trees.
A model is a tuple (U, P, G, p, n, a)
where U is the set of nodes, P, 7, and G are the
</bodyText>
<page confidence="0.977096">
192
</page>
<figure confidence="0.984896">
SIMPX
HE
ISIMPX
E
LK MF
HD ON
I I 1 I I
NX VXFIN NX VXFIN NX
I I I I I
HD HD HD HD HD
PWS VVFIN PPER VVFIN NE
wen glaubst du liebt Maria
</figure>
<figureCaption confidence="0.9224175">
Figure 2: Annotation of (3) in Verbmobil for-
mat
</figureCaption>
<bodyText confidence="0.991360571428571">
binary relations immediate dominance (par-
ent), dominance and linear precedence, p is
a function assigning syntactic categories or
part-of-speech tags to nodes, n is a function
mapping edges to grammatical functions, and
a assigns tokens to the leaves (i.e. the nodes
that do not dominate any other node).
</bodyText>
<construct confidence="0.9042625">
Definition 2 (Query model)
Let C, E and T be disjoint alphabets.
n, a) is a query model with cat-
egories C, edge labels E and terminals T if
1. U is a finite set with u n (c u E UT) = 0,
the set of nodes.
</construct>
<listItem confidence="0.985888388888889">
2. P, G,D EU xU, such that:
(a) P is irrefiexive, and for all x E U
there is at most one v E U with
(v, x) E P.
(b) D is the reflexive transitive closure of
P, and D is antisymmetric.
(c) G is transitive.
(d) for all x,y E U: if (x,y) E G, then
(x,y) 0D and (y,x) V.
(e) for all x,y E U: (x,y) E if for
all z,w E U with (x,z),(y,w) E 7),
(z, w) E G holds.
(f) for all x,y,z EU: if (x,y),(x,z) ED,
then either (x, z) E T) or (z, x) E V or
(x, z) E G or (z, x) E G.
3. C is a total function.
4. i :P E is a total function.
5. a : {u e UI there is no u&apos; with (u,u1) E
</listItem>
<equation confidence="0.696017">
P} T is a total function.
</equation>
<bodyText confidence="0.999842230769231">
With (b), (c) and (d), G is also irrefiexive
and antisymmetric.
In contrast to finite trees, our query mod-
els do not necessarily have a unique root
node, i.e. a node that dominates all other
nodes. Consequently, the so-called exhaus-
tiveness property does not hold since two
nodes in a query model might be completely
disconnected. In other words, it does not hold
in general that (x,y) E 7) or (y , x) E 7) or
(x, y) E G or (y, x) E for all x,y E U. This
holds only for nodes x,y E U where a node z
exists that dominates x and y.
</bodyText>
<subsectionHeader confidence="0.998004">
3.3 Semantics
</subsectionHeader>
<bodyText confidence="0.9998672">
Satisfiability of a query q by a query model
M is defined in the classical model-theoretic
way with respect to an injective assignment g
mapping node variables to nodes in the query
model.
</bodyText>
<subsectionHeader confidence="0.483083">
Definition 3 (Satisfiability)
</subsectionHeader>
<bodyText confidence="0.835523666666667">
Let M = (U,P,D, 4 p, 77, a) be a query model
and let g : U be an injective function.
For all iE IN, tE T, CE C, eE E:
</bodyText>
<listItem confidence="0.991719761904762">
• M token(i)=t if a(g(i)) =t.
• M j= token(i)!=t iff a(g(i)) Ot.
• M cat(i)=c if p(g(i)) =c.
• M 1=9 cat (i) !=c iff p(g(i)) 4c.
• .A4+9 fct(i)=e if there is au EU with
(u,g(i)) €2 and ri((u,g(i))) .e.
• M 1=9 fct (i) ! =e if there is no u E U with
(u,g(i)) E P and n((u,g(i))) =e.
For all i, jE IN:
• M &gt; j if (g(i),g(j)) E P (i.e. g(i)
immediately dominates g(j))
• M1=9 i !› j if (g(i),g(j)) OP
• M = i &gt;&gt; j iff (g(i),g(j)) ED (i.e. g(i)
dominates g(j))
• M1=9 i !» j iff (g(i),g(j)) OD
• M j if (g(i),g(j)) E .0
g(i) is left of g(j))
• M1=9 i ! . . j if (g(i),g(j)) G
For all queries q1,q2:
• M 1=9 qi &amp; q2 if M I= qi and M
• M 1= (qi I q2) if M j= ql or M q2.
</listItem>
<bodyText confidence="0.8855734">
Note that the condition that g needs to
be injective means that different variables are
considered to refer to different-nodes. In this
respect, Def. 3 differs from traditional model-
theoretic semantics.
</bodyText>
<figure confidence="0.699931">
VF
OA
LK MF
HD ON
</figure>
<page confidence="0.876752">
193
</page>
<figureCaption confidence="0.999868">
Figure 3: The relational database schema
</figureCaption>
<bodyText confidence="0.999253333333333">
As an example, consider the query for struc-
tures as in (1) that is shown in (4). The struc-
ture in Fig. 1 is a query model satisfying (4).
</bodyText>
<equation confidence="0.83174325">
(4) cat (1)=PX &amp; fct(1)=0A-MOD
Sc cat (2)=VF &amp; 2&gt;&gt;1
&amp; cat (3)=MF &amp; cat (4)=NX
&amp; fct (4)=0A &amp; 3&gt;&gt;4
</equation>
<sectionHeader confidence="0.659115" genericHeader="method">
4 Storing the corpus in a database
</sectionHeader>
<bodyText confidence="0.9999406">
As already mentioned, the general idea of the
query tool is to store the information one
wants to search for in a relational database
and then to translate an expression in the
query language presented in the previous sec-
tion into an SQL expression that is evaluated
on the database. The first part is performed
by an initializing component and needs to be
done only once per corpus, usually by the cor-
pus administrator. The second part, i.e. the
querying of the corpus, is performed by a
query component.
The tool is implemented in Java with Java
Database Connectivity (JDBC) as interface
and mysql as database management system.
</bodyText>
<subsectionHeader confidence="0.996082">
4.1 The relational database schema
</subsectionHeader>
<bodyText confidence="0.999497357142857">
The German Verbmobil corpus consist of sev-
eral subcorpora. In the relational database
there are two global tables, node_class and
pair_class. Besides these, for each of the sub-
corpora identified by i there are tables to-
kensi and node_pair_i. The database schema
is shown in Fig. 3. The arrows represent
foreign keys. The column in the ta-
ble node_pair_i, for example, is a foreign key
referring to the column did in the table
pair_class. This means that each entry for
did in node_pair_i uniquely refers to one en-
try for aid in pair_class.
The content of the tables is as follows:
</bodyText>
<listItem confidence="0.998327772727273">
• node_class contains node classes charac-
terized by category (node label) and gram-
matical function (edge label between the
node and its mother). Each node class
has a unique identifier, namely the column
n_id.
• pair_class contains classes of node pairs
characterized by the two node classes and
the parent, dominance and linear prece-
dence relation between the two nodes. The
columns pl, p2, dl, d2, 11 and 12 stand for
binary relations and have values 1 or 0 de-
pending on whether the relation holds or
not. pl signifies immediate dominance of
the first node over the second, p2 immedi-
ate dominance of the second over the first,
dl dominance of the first over the second,
etc. Each node pair class has a unique iden-
tifier, namely its cl_id.
• tokens_i contains all leaves from subcor-
pus i with their tokens (word).
• node_pair_i contains all node pairs from
</listItem>
<bodyText confidence="0.672764333333333">
subcorpus i with their pair class. Of
course, only pairs of nodes belonging to one
single annotation structure are stored.
</bodyText>
<subsectionHeader confidence="0.992028">
4.2 Initializing the database
</subsectionHeader>
<bodyText confidence="0.999514857142857">
The storage of the corpus in the database is
done by an initializing component. This com-
ponent extracts information from the struc-
tures in export format (the format used for the
German Verbmobil corpus) and stores them
in the database. The export format explicitly
encodes tokens, categories and edge labels,
linear precedence between leaves and the par-
ent (immediate dominance) relation. Domi-
nance and linear precedence in general how-
ever need to be precompiled.
First the dominance relation is computed
simply as reflexive transitive closure of the
parent relation.
Linear precedence on the leaves can be im-
mediately extracted from the export format.
When computing linear precedence for inter-
nal nodes, the specific properties of the data
structures in Verbmobil (see Section 3) must
be taken into account. Unlike in finite trees,
for two nodes ui, u2, the fact that ui domi-
nates some x and u2 dominates some y and x
is left of y is not sufficient to decide that ui
is left of u2. Instead (see axiom (e) in Def. 2)
the following holds for two nodes ul, u2: ui is
left of u2 if for all x, y dominated by ui, u2
respectively: x is left of y.
In general, the database schema itself does
</bodyText>
<figure confidence="0.9982291">
tree_id [de
word
tokens_i
node_class
n_id
cl_id
n_id2
pl
fct
cat
</figure>
<page confidence="0.992821">
194
</page>
<table confidence="0.878642">
#BOS 24 25 898511955 1
scheinbar ADV HD 500
nicht PTKNEG HD 501
beides PIS HD 502
zusammen ADV HD 503
$. 0
#500 ADVX 505
#501 ADVX 505
#502 NX HD 504
#503 ADVX 504
#504 NX HD 505
#505 NX 0
#E0S 24
ADVX
HD
ADV PTKNEG PIS ADV S.
scheinbar nicht beides zus. .
</table>
<figureCaption confidence="0.9980285">
Figure 4: Export format of sentence 24 in cd20
and corresponding structure
</figureCaption>
<figure confidence="0.998630413793103">
tokens_2
tree_id node word
24 0 scheinbar
24 1 nicht
24 2 beides
24 3 zusammen
24 4 .
node_pair_20
tree_id nodel node2 cl_id
24 1 1459
24 2 2608
24 3 120
24 9 10 1327
pair.. class
cl.id nidi n_id2 pl p2 dl d2 11 12
120 1 13 1 13 1 0 1 0 1 0 1 0 1 1 1 0
1327 1 24 1 25 1 0 1 1 1 0 1 1 1 0 1 0
node_class
n_id cat fct
13 1 ADV 1 HD
24 1 NX HD
25 1 NX
Corresponding structure:
NX
HD
NX
El 111 HD
ADVX ADVX NX
HD HD ED
</figure>
<figureCaption confidence="0.999947">
Figure 5: Sentence 24 in the database
</figureCaption>
<bodyText confidence="0.94528825">
not reflect the concrete properties of the query
model, in particular the properties of the bi-
nary relations are not part of the database
schema, e.g. considering only the database,
the dominance and linear precedence relations
are not necessarily transitive. Therefore, the
query tool can be easily adapted to other data
structures, for example to feature structures
with reentrancy as annotations. In this case,
a modification of the part of the initializing
component that computes the binary relations
would be sufficient.
As an example, consider how sentence 24
in the subcorpus cd20 (identifier 20) is stored
in the database. This sentence was chosen
for the simple reason that it is not too long
but contains enough nodes to provide a useful
example. Besides this, its construction and its
tokens are not of any interest here.
Fig. 4 shows the sentence in its export for-
mat, i.e. the way it originally occurs in the
corpus, together with a picture of the corre-
sponding structure. Parts of the tables in the
database concerning sentence 24 are shown in
Fig. 5. Each line in the export format cor-
responds to one node. The nodes are as-
signed numbers 0, 1, ... in the order of the
lines in the export format. The nodes with
tokens (i.e. that are leaves) are inserted into
the table tokens_20. Furthermore, each pair
of nodes occurring in sentence 24 is inserted
into the table node_pair_20 together with its
pair class. Both orders of a pair are stored.&apos;
The pair classes and node classes belonging to
a pair can be found in the two global tables.
Consider for example the nodes 9 and 10 in
sentence 24 (the node labelled NX that domi-
nates beides zusammen and the topmost node
with label NX). The did of this pair is 1327.
&apos;In a previous version just one order was stored
but it turned out that for some queries this causes an
exponential time complexity depending on the number
of variables occurring in the query. This problem is
avoided storing both orders of a node pair.
</bodyText>
<page confidence="0.998063">
195
</page>
<bodyText confidence="0.999967777777778">
The corresponding entry in pair_class tells us
that the second node is the mother of the first,
that the second dominates the first, and that
there is no linear precedence relation between
the two nodes. Furthermore, the node classes
identified by nidi and n_id2 are such that the
first node has label NX and grammatical func-
tion HD whereas the second has label NX and
no grammatical function.
</bodyText>
<subsectionHeader confidence="0.983414">
4.3 The size of the database
</subsectionHeader>
<bodyText confidence="0.98649225">
So far, in order to test the tool, approximately
one quarter of the German Verbmobil corpus
is stored in the database, namely the following
sub corpora:
</bodyText>
<table confidence="0.997369142857143">
id sub- trees tokens pairs
corpus
15 cd15 1567 15474 1326416
20 cd20 2151 21069 1941056
21 cd21 2416 22360 1761082
22 cd22 1723 16587 1229324
24 cd24 2255 22763 2129548
</table>
<bodyText confidence="0.996814333333333">
The table pair_class has 23024 entries and
node_class has 213 entries. The following ta-
ble shows the current size of the files:
</bodyText>
<tableCaption confidence="0.88898">
Table data file index file
</tableCaption>
<table confidence="0.995818692307692">
(KB) (KB)
node_class 1 10
pair_class 585 1500
tokens_15 303 293
tokens_20 413 403
tokens_21 439 423
tokens_22 325 311
tokens_24 446 430
node_pair_15 9067 72556
node_pair_20 13269 106377
node_pair_21 12039 96383
node_pair_22 8404 67153
node_pair_24 14557 116694
</table>
<sectionHeader confidence="0.67355" genericHeader="method">
5 Searching the corpus
</sectionHeader>
<bodyText confidence="0.9999845">
In order to search the corpus, one needs of
course to know the specific properties of the
annotation scheme. These are described in the
STTS guidelines (Schiller et al., 1995) and the
Verbmobil stylebook (Stegmann et al., 1998)
that must be both available to any user of the
query tool.
Currently, the query component does not
yet process all possible expressions in the
query language. In particular, it does not
allow disjunctions and it does not allow to
query for tokens. Other atomic queries com-
bined with with negations and conjunctions
are possible. In particular, complex syntac-
tic structures involving category and edge la-
bels and binary relations can be searched. The
query component will be completed very soon
to process all queries defined in Section 3.
The query component takes an expression
in the query language as input and trans-
lates this into a corresponding SQL expres-
sion, which is then passed to the database.
As an example, consider again the query (4)
repeated here as (5):
</bodyText>
<equation confidence="0.764295333333333">
(5) cat(1)=PX &amp; fct(1)=0A-MOD &amp;
cat(2)=VF &amp; 2&gt;&gt;1 &amp; cat (3)=MF &amp;
cat(4)=NX &amp; fct(4)=0A &amp; 3&gt;&gt;4
</equation>
<bodyText confidence="0.981155333333333">
For query (5) as input performed on the
subcorpus cd20, the query component pro-
duces the following SQL query:
</bodyText>
<table confidence="0.816881785714286">
SELECT DISTINCT np1.tree_id
FROM
node_class AS nc1, node_class AS nc2,
node_class AS nc3, node_class AS nc4,
node_pair_20 AS npl, pair_class AS pc1,
node_pair_20 AS np2, pair_class AS pc2
WHERE
ncl.caWn&apos; AND nc1.fcW0A-MOD&apos;
AND nc2.cat=&apos;VF&apos; AND nc3.cat=&apos;MF&apos;
AND nc4.cat=&apos;NX&apos; AND nc4.fct=&apos;0A&apos;
AND pc1.n_id1=nc2.n_id
AND pc1.n_id2=ncl.n_id AND pcl.d1=1
AND pc2.n_id1=nc3.n_id
AND pc2.n_id2=nc4.n_id AND pc2.d1=1
</table>
<sectionHeader confidence="0.960110333333333" genericHeader="method">
AND np1.cl_id=pc1.cl_id
AND np1.tree_id=np2.tree_id
AND np2.cl_id=pc2.cl_id;
</sectionHeader>
<bodyText confidence="0.892264235294118">
As a second example consider the search for
long distance wh-movements as in (3). The
annotation of (3) using the Verbmobil annota-
tion scheme was shown in Fig. 2. Such struc-
tures might be characterized by the following
properties: there is an interrogative pronoun
(past-of-speech tag PWS for substituting inter-
rogative pronoun) that is part of a simplex
clause and there is another simplex clause con-
taining a finite verb such that the two sim-
plex clauses are not connected and the pro-
noun precedes the finite verb. This leads to
the query (6):
(6) cat(1)=PWS &amp; cat(2)=SIMPX &amp; 2&gt;&gt;1
&amp; cat(3)=SIMPX &amp; cat(4)=VVFIN
&amp; 2!&gt;&gt;3 &amp; 3!&gt;&gt;2 &amp; 2!..3 &amp; 3! ..2
&amp; 1..4 Br 3&gt;&gt;4
</bodyText>
<page confidence="0.967875">
196
</page>
<table confidence="0.717344333333333">
Performed on cd20, (6) as input leads to the
following SQL query:
SELECT DISTINCT npl.tree_id
FROM
node_class AS nc1, node_class AS nc2,
node_class AS nc3, node_class AS nc4,
</table>
<sectionHeader confidence="0.905108696969697" genericHeader="method">
node_pair_20 AS npl,
pair_class AS pc1,
node_pair_20 AS np2,
pair_class AS pc2,
node_pair_20 AS np3,
pair_class AS pc3,
node_pair_20 AS np4,
pair_class AS pc4
WHERE
nc1.cat=&apos;PWS&apos; AND nc2.cat=&apos;SIMPX&apos;
AND nc3.cat=&apos;SIMPX&apos;
AND nc4.cat=&apos;VVFIN&apos;
AND pc1.n_id1=nc2.n_id
AND pc1.n_id2=nc1.n_id AND pc1.d1=1
AND pc2.n_id1=nc2.n_id
AND pc2.n_id2=nc3.n_id
AND pc2.d1=0 AND pc2.d2=0
AND pc2.11=0 AND pc2.12=0
AND pc3.n_idl=nc1.n_id
AND pc3.n_id2=nc4.n_id AND pc3.11=1
,AND pc4.n_idl=nc3.n_id
AND pc4.n_id2=nc4.n_id AND pc4.d1=1
AND np1.cl_id=pc1.cl_id
AND np1.node1=np2.nodel
AND np1.node2=np3.nodel
AND np1.tree_id=np2.tree_id
AND np2.cl_id=pc2.cl_id
AND np2.node2=np4.node1
AND np2.tree_id=np3.tree_id
AND np3.cl_id=pc3.cl_id
AND np3.node2=np4.node2
AND np3.tree_id=np4.tree_id
AND np4.cl_id=pc4.cl_id;
</sectionHeader>
<bodyText confidence="0.999977075">
Currently the database and the tool are
running on a Pentium II PC 400MHz 128MB
under Linux. On this machine, example (5)
takes 1.46 sec to be answered by mysql, and
example (6) takes 6.43 sec to be answered.
This shows that although the queries, in par-
ticular the last one, are quite complex and in-
volve many intermediate results, the perfor-
mance of the system is quite efficient.
The performance of course depends cru-
cially on the size of intermediate results.
In cases where more than one node pair is
searched for (as in the two examples above)
the order of the pairs is important since the
result set of the first pair restricts the second
pair. In (5) for example, first a node pair with
a PX with function OA-MOD dominated by a VF
is searched for. Afterwards, the search for the
NX with function OA in the MF is restricted to
those trees that were found when searching
for the first pair. Obviously, the first pair is
much more restrictive than the second. If the
order is reversed, the query takes much more
time to process. Currently the ordering of the
pairs needs to be done by the user, i.e. depends
on the incoming query. However, we plan to
implement at least partly an ordering of the
binary conjuncts in the query depending on
the frequency of the syntactic categories and
grammatical functions involved in the pairs.
The obvious advantage of using a relational
database to store the corpus is that some parts
of the work are taken over by the database
management system such as the search of the
corpus. Furthermore, and this is crucial, the
indexing functionalities of the database man-
agement system can be used to increase the
performance of the tool, e.g. indexes are put
on did in node_pair_i and on n_idl and n_id2
in pair_class.
</bodyText>
<sectionHeader confidence="0.987416" genericHeader="conclusions">
6 Conclusion and future work
</sectionHeader>
<bodyText confidence="0.999972518518518">
In this paper, I have presented a query tool for
syntactically annotated corpora that is devel-
oped for the German Verbmobil treebank an-
notated at the University of Tübingen. The
key idea is to extract in an initializing phase
the information one wants to search for from
the corpus and to store it in a relational
database. The search itself is done by trans-
lating an input query that is an expression in
a simple quantifier free first order logic into an
SQL query that is then passed to the database
system.
An obvious advantage of this architecture is
that a considerable amount of work is taken
over by the database management system and
therefore needs not to be implemented. Fur-
thermore, the mysql indexing functionalities
can be used to directly affect the performance
of the search.
The query tool is work in progress, and I
briefly want to point out some of the things
that still need to be done. First, the set of
queries the tool can process needs to be ex-
tended to all queries allowed in the query lan-
guage. This will be done very soon. An-
other task for the near future is, as men-
tioned in the previous section, to add an or-
</bodyText>
<page confidence="0.993146">
197
</page>
<bodyText confidence="0.999936142857143">
dering mechanism on binary conjuncts in or-
der to ensure that the more restrictive node
pairs are searched for first. Further, the de-
sign of a graphical user-interface to enter the
queries is planned, allowing to specify queries
by drawing partial trees instead of typing in
the expressions in the query language. Finally,
we also want to implement a web-based user-
interface for the query tool.
Besides these tasks that all concern the cur-
rent query tool for the German Verbmobil cor-
pus, a more general issue to persue in the fu-
ture is to adapt the tool to other corpora. In
some cases, this implies a modification of the
way binary relations are precompiled, and in
some other cases this would even lead to a
modification of the query language and the
database schema, namely in those cases where
other binary relations are needed, e.g. the
coindexation relation in the case of the Penn
Treebank.
</bodyText>
<sectionHeader confidence="0.998299" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99942725">
For fruitful discussions I would like to thank
Oliver Plaehn and Ilona Steiner. Further-
more, I am grateful to three anonymous re-
viewers for their valuable comments.
</bodyText>
<sectionHeader confidence="0.998705" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999894983606558">
Anne Abellle and Lionel Clement. 1999. A tagged
reference Corpus for French. In Proceedings of
EACL-LINC, Bergen.
Ann Bies, Mark Ferguson, Karen Katz, and
Robert MacIntyre. 1995. Bracketing Guidelines
for Treebank II Style Penn Treebank Project.
University of Pennsylvania.
Thorsten Brants, Wojciech Skut, and Hans Uszko-
reit. 1999. Syntactic Annotation of a German
Newspaper Corpus. In Journies ATALA, 18-
19 juin 1999, Corpus annotes pour la syntaxe,
pages 69-76, Paris.
Oliver Christ. 1994. A modular and flexible archi-
tecture for an integrated corpus query system.
In Proceedings of COMPLEX&apos;94-
Alin Deutsch, Mary Fernandez, Daniela Florescu,
Alon Levy, and Dan Suciu. 1999. A Query Lan-
guage for XML. In Proceedings of the Interna-
tional World Wide Web Conference (WWW),
volume 31, pages 1155-1169.
Erhard W. Hinrichs, Julia Bartels, Yasuhiro
Kawata, Valia Kordoni, and Heike Telljohann.
2000. The VERBMOBIL Treeba.nks. In Pro-
ceedings of KONVENS 2000, October. To ap-
pear.
Tilman HOhle. 1985. Der Begriff `Mittelfeld&apos;. An-
merkungen fiber die Theorie der topologischen
Felder. In A. Schone, editor, Kontroversen alte
und neue. Akten des 7. Internationalen Ger-
manistenkongresses Gottingen, pages 329-340.
Laura Kallmeyer. 2000. On the Complexity of
Queries for Structurally Annotated Linguistic
Data. In Proceedings of ACIDCA&apos;2000, pages
105-110, March.
Jacques Le Maitre, Elisabeth Murisasco, and
Monique Rolbert. 1998. From Annotated Cor-
pora to Databases: the SgmlQL Language. In
John Nerbonne, editor, Linguistic databases.
CSLI.
Mitchell Marcus, Grace Kim, Mary Ann
Marcinldewicz, Robert MacIntyre, Ann Bies,
Mark Ferguson, Karen Katz, and Britta Schas-
berger. 1994. The Penn Treebank: Annotating
Predicate Argument Structure. In ARPA &apos;94.
Andreas Mengel and Wolfgang Lezius. 2000. An
XML-based encoding format for syntactically
annotated corpora. In Proceedings of LREC
2000.
Detmar Meurers. 1999. Von partiellen Kon-
stituenten, erstaunlichen Passiven und ver-
wirrten Franken. zur Verwendung von Korpora
fiir die theoretische Linguistik. Handout at the
DGfS Jahrestagung, February.
A. Schiller, S. Teufel, and C. Thielen. 1995.
Guidelines fiir das Tagging deutscher Textcor-
pora mit STTS. Manuskript Universitat
Stuttgart und Universitat Tübingen.
Rosemary Stegmann, Heike Schulz, and Er-
hard W. Hinrichs. 1998. Stylebook for the
German &apos;Treebank in VERBMOBIL. Eberhard-
Karls Universitat Tübingen.
</reference>
<page confidence="0.997711">
198
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.907587">
<title confidence="0.987325">A query tool for syntactically annotated corpora*</title>
<author confidence="0.983864">Laura</author>
<affiliation confidence="0.998191">UFRL, Universite Paris</affiliation>
<address confidence="0.979494">2, place 75251 Paris cedex</address>
<email confidence="0.970167">laura.kallmeyer@linguist.jussieu.fr</email>
<abstract confidence="0.998913388888889">This paper presents a query tool for syntactically annotated corpora. The query tool is developed to search the Verbmobil treebanks annotated at the University of Tübingen. However, in principle it also can be adapted to other corpora such as the Negra Corpus, the Penn Treebank or the French treebank developed in Paris. The tool uses a query language that allows to search for tokens, syntactic categories, grammatical functions and binary relations of (immediate) dominance and linear precedence between nodes. The overall idea is to extract in an initializing phase the relevant information from the corpus and store it in a relational database. An incoming query is then translated into a corresponding SQL query that is evaluated on the database.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Anne Abellle</author>
<author>Lionel Clement</author>
</authors>
<title>A tagged reference Corpus for French.</title>
<date>1999</date>
<booktitle>In Proceedings of EACL-LINC,</booktitle>
<location>Bergen.</location>
<marker>Abellle, Clement, 1999</marker>
<rawString>Anne Abellle and Lionel Clement. 1999. A tagged reference Corpus for French. In Proceedings of EACL-LINC, Bergen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ann Bies</author>
<author>Mark Ferguson</author>
<author>Karen Katz</author>
<author>Robert MacIntyre</author>
</authors>
<title>Bracketing Guidelines for Treebank II Style Penn Treebank Project.</title>
<date>1995</date>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="1544" citStr="Bies et al., 1995" startWordPosition="236" endWordPosition="239"> 1 Introduction 1.1 Syntactic annotation and linguistic research With the increasing availability of large amounts of electronic texts, linguists have access to more and more material for empirically based linguistic research. Furthermore, electronic corpora are more and more richly annotated and thereby more and more detailed and structured information contained in the corpora becomes accessable. Currently many corpora are tagged with morphosyntactic categories (part-of-speech) and there are already several syntactically annotated corpora. Examples are the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) annotated at the University of Pennsylvania, the Negra corpus (Brants et al., 1999) developed in Saarbriicken, the Verbmobil treebanks (Hinrichs et al., 2000) annotated in Tiibingen The work presented here was done as part of a project in SFB 441 &amp;quot;Linguistic Data Structures&amp;quot; at the University of Tiibingen. and the French treebank annotated in Paris (Abeille and Clement, 1999). However, in order to have access to these rich linguistic annotations, adequate query tools are needed. In the following, an example of a linguistically relevant construction is considered that illustrates how useful ac</context>
</contexts>
<marker>Bies, Ferguson, Katz, MacIntyre, 1995</marker>
<rawString>Ann Bies, Mark Ferguson, Karen Katz, and Robert MacIntyre. 1995. Bracketing Guidelines for Treebank II Style Penn Treebank Project. University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thorsten Brants</author>
<author>Wojciech Skut</author>
<author>Hans Uszkoreit</author>
</authors>
<title>Syntactic Annotation of a German Newspaper Corpus.</title>
<date>1999</date>
<booktitle>In Journies ATALA, 18-19 juin 1999, Corpus annotes pour la syntaxe,</booktitle>
<pages>69--76</pages>
<location>Paris.</location>
<contexts>
<context position="1628" citStr="Brants et al., 1999" startWordPosition="250" endWordPosition="253">ng availability of large amounts of electronic texts, linguists have access to more and more material for empirically based linguistic research. Furthermore, electronic corpora are more and more richly annotated and thereby more and more detailed and structured information contained in the corpora becomes accessable. Currently many corpora are tagged with morphosyntactic categories (part-of-speech) and there are already several syntactically annotated corpora. Examples are the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) annotated at the University of Pennsylvania, the Negra corpus (Brants et al., 1999) developed in Saarbriicken, the Verbmobil treebanks (Hinrichs et al., 2000) annotated in Tiibingen The work presented here was done as part of a project in SFB 441 &amp;quot;Linguistic Data Structures&amp;quot; at the University of Tiibingen. and the French treebank annotated in Paris (Abeille and Clement, 1999). However, in order to have access to these rich linguistic annotations, adequate query tools are needed. In the following, an example of a linguistically relevant construction is considered that illustrates how useful access to structural information in a corpus might be. iiber Chomsky habe ich em n Buc</context>
</contexts>
<marker>Brants, Skut, Uszkoreit, 1999</marker>
<rawString>Thorsten Brants, Wojciech Skut, and Hans Uszkoreit. 1999. Syntactic Annotation of a German Newspaper Corpus. In Journies ATALA, 18-19 juin 1999, Corpus annotes pour la syntaxe, pages 69-76, Paris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Oliver Christ</author>
</authors>
<title>A modular and flexible architecture for an integrated corpus query system.</title>
<date>1994</date>
<booktitle>In Proceedings of COMPLEX&apos;94-</booktitle>
<contexts>
<context position="3697" citStr="Christ, 1994" startWordPosition="603" endWordPosition="604">finite verb (i.e. in the so-called vorfeld), and (b) an accusative object between finite verb. and infinite verb forms (i.e. in the socalled mittelfeld) Obviously, two things need to be available in order to enable such a search. On the one hand, one needs a corpus with an annotation that is rich enough to encode the properties 190 (a) and (b). On the other hand, one needs a query tool with a query language that allows to express the properties (a) and (b). Corpora encoding features such as (a) and (b) are for example the Verbmobil treebanks. 1.2 Current query tools Query tools such as xkwic (Christ, 1994) that allow to search on the tokens and their partof-speech categories using regular expressions do not allow a direct search on the syntactic annotation structures of the corpus, i.e. a search for specific relations between nodes in the annotation such as dominance or linear precedence. Therefore many queries a linguist would like to ask using a syntactically annotated corpus either cannnot be expressed in a regular expression based language or at least cannot be expressed in an intuitive way. Even more recent query languages as SgmlQL (Le Maitre et al., 1998) and XML-QL (Deutsch et al., 1999</context>
</contexts>
<marker>Christ, 1994</marker>
<rawString>Oliver Christ. 1994. A modular and flexible architecture for an integrated corpus query system. In Proceedings of COMPLEX&apos;94-</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alin Deutsch</author>
<author>Mary Fernandez</author>
<author>Daniela Florescu</author>
<author>Alon Levy</author>
<author>Dan Suciu</author>
</authors>
<title>A Query Language for XML.</title>
<date>1999</date>
<booktitle>In Proceedings of the International World Wide Web Conference (WWW),</booktitle>
<volume>31</volume>
<pages>1155--1169</pages>
<contexts>
<context position="4298" citStr="Deutsch et al., 1999" startWordPosition="701" endWordPosition="704">xkwic (Christ, 1994) that allow to search on the tokens and their partof-speech categories using regular expressions do not allow a direct search on the syntactic annotation structures of the corpus, i.e. a search for specific relations between nodes in the annotation such as dominance or linear precedence. Therefore many queries a linguist would like to ask using a syntactically annotated corpus either cannnot be expressed in a regular expression based language or at least cannot be expressed in an intuitive way. Even more recent query languages as SgmlQL (Le Maitre et al., 1998) and XML-QL (Deutsch et al., 1999) that refer to the SGML or XML annotation of a corpus are in general not adequate for syntactically annotated corpora: if the annotations are trees and the nesting of SGML/XML elements encodes the tree structure, such query languages work nicely. With regular path expressions as supported by XML-QL, it is possible to search not only for parent but also for dominance relations. However, in order to deal with discontinuous constituents, most syntactically annotated corpora do not contain trees but slightly different data structures. The Penn Treebank for example consists of trees with an additio</context>
</contexts>
<marker>Deutsch, Fernandez, Florescu, Levy, Suciu, 1999</marker>
<rawString>Alin Deutsch, Mary Fernandez, Daniela Florescu, Alon Levy, and Dan Suciu. 1999. A Query Language for XML. In Proceedings of the International World Wide Web Conference (WWW), volume 31, pages 1155-1169.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Erhard W Hinrichs</author>
<author>Julia Bartels</author>
<author>Yasuhiro Kawata</author>
<author>Valia Kordoni</author>
<author>Heike Telljohann</author>
</authors>
<title>The VERBMOBIL Treeba.nks.</title>
<date>2000</date>
<booktitle>In Proceedings of KONVENS</booktitle>
<note>To appear.</note>
<contexts>
<context position="1703" citStr="Hinrichs et al., 2000" startWordPosition="260" endWordPosition="264">ss to more and more material for empirically based linguistic research. Furthermore, electronic corpora are more and more richly annotated and thereby more and more detailed and structured information contained in the corpora becomes accessable. Currently many corpora are tagged with morphosyntactic categories (part-of-speech) and there are already several syntactically annotated corpora. Examples are the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) annotated at the University of Pennsylvania, the Negra corpus (Brants et al., 1999) developed in Saarbriicken, the Verbmobil treebanks (Hinrichs et al., 2000) annotated in Tiibingen The work presented here was done as part of a project in SFB 441 &amp;quot;Linguistic Data Structures&amp;quot; at the University of Tiibingen. and the French treebank annotated in Paris (Abeille and Clement, 1999). However, in order to have access to these rich linguistic annotations, adequate query tools are needed. In the following, an example of a linguistically relevant construction is considered that illustrates how useful access to structural information in a corpus might be. iiber Chomsky habe ich em n Buch about Chomsky have I a book (1) gelesen read &apos;I have read a book about Ch</context>
<context position="5610" citStr="Hinrichs et al., 2000" startWordPosition="914" endWordPosition="917">tree-like structure) in the corpus might contain completely disconnected nodes. In order to express these annotations in XML, one has to encode for example each node and each edge as a single element as in (Mengel and Lezius, 2000). But then a query for a dominance relation can no longer be formulated with a regular path expression. In this paper, I propose a query tool that allows to search for parent, dominance and linear precedence relations even in corpora annotated with structures slightly different from trees. 2 The Verbmobil treebanks The German Verbmobil corpus (Stegmann et al., 1998; Hinrichs et al., 2000) is a treebank annotated at the University of Tübingen SIMPX r:=1 MF vc PX HD I I NX VXFIN 111 HD HD APPR NE VAFIN PPER iiber C. habe ich Figure 1: Annotation of (1) in Verbmobil format that contains approx. 38.000 trees (or rather tree-like annotation structures since, as already mentioned, the structures are not always trees). The corpus consists of spoken texts restricted to the domain of arrangement of business appointments. The Verbmobil corpus is part-of-speech tagged using the Stuttgart Tfibingen tagset (STTS) described in (Schiller et al., 1995). One of the design decisions in Verbmobi</context>
</contexts>
<marker>Hinrichs, Bartels, Kawata, Kordoni, Telljohann, 2000</marker>
<rawString>Erhard W. Hinrichs, Julia Bartels, Yasuhiro Kawata, Valia Kordoni, and Heike Telljohann. 2000. The VERBMOBIL Treeba.nks. In Proceedings of KONVENS 2000, October. To appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tilman HOhle</author>
</authors>
<title>Der Begriff `Mittelfeld&apos;. Anmerkungen fiber die Theorie der topologischen Felder. In</title>
<date>1985</date>
<booktitle>Kontroversen alte und neue. Akten des 7. Internationalen Germanistenkongresses Gottingen,</booktitle>
<pages>329--340</pages>
<editor>A. Schone, editor,</editor>
<marker>HOhle, 1985</marker>
<rawString>Tilman HOhle. 1985. Der Begriff `Mittelfeld&apos;. Anmerkungen fiber die Theorie der topologischen Felder. In A. Schone, editor, Kontroversen alte und neue. Akten des 7. Internationalen Germanistenkongresses Gottingen, pages 329-340.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Laura Kallmeyer</author>
</authors>
<title>On the Complexity of Queries for Structurally Annotated Linguistic Data.</title>
<date>2000</date>
<booktitle>In Proceedings of ACIDCA&apos;2000,</booktitle>
<pages>105--110</pages>
<contexts>
<context position="8967" citStr="Kallmeyer, 2000" startWordPosition="1476" endWordPosition="1477">tions.&apos; This example illustrates the usefulness of syntactic annotations for linguistic research and it shows the need of query languages and query tools that allow access to these annotations. 3 The query language 3.1 Syntax As query language for the German Verbmobil corpus, a first order logic without quantification is chosen where variables are interpreted as existentially quantified. Negation is only allowed for atomic formula. It seems that even this very simple logic already gives a high degree of expressive power with respect to the queries linguists are interested in (see for example (Kallmeyer, 2000) for theoretical investigations of query languages). However, it might be that at a later stage the query language will be extended. Let C (the node labels, i.e. syntactic categories and part-of-speech categories), E (the edge labels, i.e. grammatical functions) and T (the terminals, i.e. tokens) be pairwise disjoint finite sets. &gt;, &gt;&gt;, . . are constants for the binary relations immediate dominance (parent relation), dominance (reflexive transitive closure of immediate dominance) and linear precedence. The set IN of natural numbers is used as variables. Further, &amp;, I, ! are logical connectives</context>
</contexts>
<marker>Kallmeyer, 2000</marker>
<rawString>Laura Kallmeyer. 2000. On the Complexity of Queries for Structurally Annotated Linguistic Data. In Proceedings of ACIDCA&apos;2000, pages 105-110, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jacques Le Maitre</author>
<author>Elisabeth Murisasco</author>
<author>Monique Rolbert</author>
</authors>
<title>From Annotated Corpora to Databases: the SgmlQL Language. In</title>
<date>1998</date>
<editor>John Nerbonne, editor, Linguistic databases.</editor>
<publisher>CSLI.</publisher>
<marker>Le Maitre, Murisasco, Rolbert, 1998</marker>
<rawString>Jacques Le Maitre, Elisabeth Murisasco, and Monique Rolbert. 1998. From Annotated Corpora to Databases: the SgmlQL Language. In John Nerbonne, editor, Linguistic databases. CSLI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mitchell Marcus</author>
<author>Grace Kim</author>
<author>Mary Ann Marcinldewicz</author>
<author>Robert MacIntyre</author>
<author>Ann Bies</author>
<author>Mark Ferguson</author>
<author>Karen Katz</author>
<author>Britta Schasberger</author>
</authors>
<title>The Penn Treebank: Annotating Predicate Argument Structure.</title>
<date>1994</date>
<booktitle>In ARPA &apos;94.</booktitle>
<contexts>
<context position="1524" citStr="Marcus et al., 1994" startWordPosition="231" endWordPosition="235">ated on the database. 1 Introduction 1.1 Syntactic annotation and linguistic research With the increasing availability of large amounts of electronic texts, linguists have access to more and more material for empirically based linguistic research. Furthermore, electronic corpora are more and more richly annotated and thereby more and more detailed and structured information contained in the corpora becomes accessable. Currently many corpora are tagged with morphosyntactic categories (part-of-speech) and there are already several syntactically annotated corpora. Examples are the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) annotated at the University of Pennsylvania, the Negra corpus (Brants et al., 1999) developed in Saarbriicken, the Verbmobil treebanks (Hinrichs et al., 2000) annotated in Tiibingen The work presented here was done as part of a project in SFB 441 &amp;quot;Linguistic Data Structures&amp;quot; at the University of Tiibingen. and the French treebank annotated in Paris (Abeille and Clement, 1999). However, in order to have access to these rich linguistic annotations, adequate query tools are needed. In the following, an example of a linguistically relevant construction is considered that illus</context>
</contexts>
<marker>Marcus, Kim, Marcinldewicz, MacIntyre, Bies, Ferguson, Katz, Schasberger, 1994</marker>
<rawString>Mitchell Marcus, Grace Kim, Mary Ann Marcinldewicz, Robert MacIntyre, Ann Bies, Mark Ferguson, Karen Katz, and Britta Schasberger. 1994. The Penn Treebank: Annotating Predicate Argument Structure. In ARPA &apos;94.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andreas Mengel</author>
<author>Wolfgang Lezius</author>
</authors>
<title>An XML-based encoding format for syntactically annotated corpora.</title>
<date>2000</date>
<booktitle>In Proceedings of LREC</booktitle>
<contexts>
<context position="5219" citStr="Mengel and Lezius, 2000" startWordPosition="849" endWordPosition="852">QL, it is possible to search not only for parent but also for dominance relations. However, in order to deal with discontinuous constituents, most syntactically annotated corpora do not contain trees but slightly different data structures. The Penn Treebank for example consists of trees with an additional coindexation relation, Negra allows crossing branches and in Verbmobil, an element (a tree-like structure) in the corpus might contain completely disconnected nodes. In order to express these annotations in XML, one has to encode for example each node and each edge as a single element as in (Mengel and Lezius, 2000). But then a query for a dominance relation can no longer be formulated with a regular path expression. In this paper, I propose a query tool that allows to search for parent, dominance and linear precedence relations even in corpora annotated with structures slightly different from trees. 2 The Verbmobil treebanks The German Verbmobil corpus (Stegmann et al., 1998; Hinrichs et al., 2000) is a treebank annotated at the University of Tübingen SIMPX r:=1 MF vc PX HD I I NX VXFIN 111 HD HD APPR NE VAFIN PPER iiber C. habe ich Figure 1: Annotation of (1) in Verbmobil format that contains approx. 3</context>
</contexts>
<marker>Mengel, Lezius, 2000</marker>
<rawString>Andreas Mengel and Wolfgang Lezius. 2000. An XML-based encoding format for syntactically annotated corpora. In Proceedings of LREC 2000.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Detmar Meurers</author>
</authors>
<title>Von partiellen Konstituenten, erstaunlichen Passiven und verwirrten Franken. zur Verwendung von Korpora fiir die theoretische Linguistik. Handout at the DGfS Jahrestagung,</title>
<date>1999</date>
<contexts>
<context position="2858" citStr="Meurers, 1999" startWordPosition="454" endWordPosition="455">have I a book (1) gelesen read &apos;I have read a book about Chomsky&apos; Linguists are often concerned with constructions that seem not very natural and where intuitions about grammaticality fail. An example is (1) where we have an accusative object (ein Buch) which is positioned between the two verbal elements and whose modifier (the prepositional phrase fiber Chomsky) is topicalized. Some people claim (1) to be ungrammatical whereas other people are inclined to accept it. In these cases it is very useful to search in an adequate corpus for more natural data showing the same construction (see also (Meurers, 1999) for other examples of the use of corpora for linguistic research). In order to find structures like (1) in a German corpus, one needs to search for (a) a prepositional phrase modifying the accusative object and preceding the finite verb (i.e. in the so-called vorfeld), and (b) an accusative object between finite verb. and infinite verb forms (i.e. in the socalled mittelfeld) Obviously, two things need to be available in order to enable such a search. On the one hand, one needs a corpus with an annotation that is rich enough to encode the properties 190 (a) and (b). On the other hand, one need</context>
</contexts>
<marker>Meurers, 1999</marker>
<rawString>Detmar Meurers. 1999. Von partiellen Konstituenten, erstaunlichen Passiven und verwirrten Franken. zur Verwendung von Korpora fiir die theoretische Linguistik. Handout at the DGfS Jahrestagung, February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Schiller</author>
<author>S Teufel</author>
<author>C Thielen</author>
</authors>
<title>Guidelines fiir das Tagging deutscher Textcorpora mit STTS.</title>
<date>1995</date>
<institution>Manuskript Universitat Stuttgart und Universitat Tübingen.</institution>
<contexts>
<context position="6169" citStr="Schiller et al., 1995" startWordPosition="1009" endWordPosition="1012">Verbmobil corpus (Stegmann et al., 1998; Hinrichs et al., 2000) is a treebank annotated at the University of Tübingen SIMPX r:=1 MF vc PX HD I I NX VXFIN 111 HD HD APPR NE VAFIN PPER iiber C. habe ich Figure 1: Annotation of (1) in Verbmobil format that contains approx. 38.000 trees (or rather tree-like annotation structures since, as already mentioned, the structures are not always trees). The corpus consists of spoken texts restricted to the domain of arrangement of business appointments. The Verbmobil corpus is part-of-speech tagged using the Stuttgart Tfibingen tagset (STTS) described in (Schiller et al., 1995). One of the design decisions in Verbmobil was that for the purpose of reusability of the treebank, the annotation scheme should not reflect a commitment to a particular syntactic theory. Therefore a surface-oriented annotation scheme was adopted that is inspired by the notion of topological fields in the sense of (Hale, 1985). The discontinuous positioning of the verbal elements in verb-first and verb-second sentences (as in (1) for example) is the traditional reason to structure the German sentence by means of topological fields: The verbal elements have the categories LK (Linke Klammer) and</context>
<context position="22323" citStr="Schiller et al., 1995" startWordPosition="4003" endWordPosition="4006">2129548 The table pair_class has 23024 entries and node_class has 213 entries. The following table shows the current size of the files: Table data file index file (KB) (KB) node_class 1 10 pair_class 585 1500 tokens_15 303 293 tokens_20 413 403 tokens_21 439 423 tokens_22 325 311 tokens_24 446 430 node_pair_15 9067 72556 node_pair_20 13269 106377 node_pair_21 12039 96383 node_pair_22 8404 67153 node_pair_24 14557 116694 5 Searching the corpus In order to search the corpus, one needs of course to know the specific properties of the annotation scheme. These are described in the STTS guidelines (Schiller et al., 1995) and the Verbmobil stylebook (Stegmann et al., 1998) that must be both available to any user of the query tool. Currently, the query component does not yet process all possible expressions in the query language. In particular, it does not allow disjunctions and it does not allow to query for tokens. Other atomic queries combined with with negations and conjunctions are possible. In particular, complex syntactic structures involving category and edge labels and binary relations can be searched. The query component will be completed very soon to process all queries defined in Section 3. The quer</context>
</contexts>
<marker>Schiller, Teufel, Thielen, 1995</marker>
<rawString>A. Schiller, S. Teufel, and C. Thielen. 1995. Guidelines fiir das Tagging deutscher Textcorpora mit STTS. Manuskript Universitat Stuttgart und Universitat Tübingen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rosemary Stegmann</author>
<author>Heike Schulz</author>
<author>Erhard W Hinrichs</author>
</authors>
<title>Stylebook for the German &apos;Treebank in VERBMOBIL. EberhardKarls Universitat Tübingen.</title>
<date>1998</date>
<contexts>
<context position="5586" citStr="Stegmann et al., 1998" startWordPosition="910" endWordPosition="913">rbmobil, an element (a tree-like structure) in the corpus might contain completely disconnected nodes. In order to express these annotations in XML, one has to encode for example each node and each edge as a single element as in (Mengel and Lezius, 2000). But then a query for a dominance relation can no longer be formulated with a regular path expression. In this paper, I propose a query tool that allows to search for parent, dominance and linear precedence relations even in corpora annotated with structures slightly different from trees. 2 The Verbmobil treebanks The German Verbmobil corpus (Stegmann et al., 1998; Hinrichs et al., 2000) is a treebank annotated at the University of Tübingen SIMPX r:=1 MF vc PX HD I I NX VXFIN 111 HD HD APPR NE VAFIN PPER iiber C. habe ich Figure 1: Annotation of (1) in Verbmobil format that contains approx. 38.000 trees (or rather tree-like annotation structures since, as already mentioned, the structures are not always trees). The corpus consists of spoken texts restricted to the domain of arrangement of business appointments. The Verbmobil corpus is part-of-speech tagged using the Stuttgart Tfibingen tagset (STTS) described in (Schiller et al., 1995). One of the desi</context>
<context position="22375" citStr="Stegmann et al., 1998" startWordPosition="4011" endWordPosition="4014">ode_class has 213 entries. The following table shows the current size of the files: Table data file index file (KB) (KB) node_class 1 10 pair_class 585 1500 tokens_15 303 293 tokens_20 413 403 tokens_21 439 423 tokens_22 325 311 tokens_24 446 430 node_pair_15 9067 72556 node_pair_20 13269 106377 node_pair_21 12039 96383 node_pair_22 8404 67153 node_pair_24 14557 116694 5 Searching the corpus In order to search the corpus, one needs of course to know the specific properties of the annotation scheme. These are described in the STTS guidelines (Schiller et al., 1995) and the Verbmobil stylebook (Stegmann et al., 1998) that must be both available to any user of the query tool. Currently, the query component does not yet process all possible expressions in the query language. In particular, it does not allow disjunctions and it does not allow to query for tokens. Other atomic queries combined with with negations and conjunctions are possible. In particular, complex syntactic structures involving category and edge labels and binary relations can be searched. The query component will be completed very soon to process all queries defined in Section 3. The query component takes an expression in the query languag</context>
</contexts>
<marker>Stegmann, Schulz, Hinrichs, 1998</marker>
<rawString>Rosemary Stegmann, Heike Schulz, and Erhard W. Hinrichs. 1998. Stylebook for the German &apos;Treebank in VERBMOBIL. EberhardKarls Universitat Tübingen.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>