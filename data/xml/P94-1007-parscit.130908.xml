<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000003">
<sectionHeader confidence="0.8065805" genericHeader="abstract">
GENERATING PRECONDITION EXPRESSIONS
IN INSTRUCTIONAL TEXT
</sectionHeader>
<author confidence="0.956247">
Keith Vander Linden
</author>
<affiliation confidence="0.998329">
ITRI, University of Brighton
</affiliation>
<address confidence="0.757918333333333">
Lewes Road
Brighton, BN2 4AT
UK
</address>
<email confidence="0.781622">
Internet: knvICvitri.bton.ac.uk
</email>
<sectionHeader confidence="0.984712" genericHeader="keywords">
Abstract
</sectionHeader>
<bodyText confidence="0.99993475">
This study employs a knowledge intensive corpus
analysis to identify the elements of the commu-
nicative context which can be used to determine
the appropriate lexical and grammatical form of
instructional texts. IMACENE, an instructional
text generation system based on this analysis, is
presented, particularly with reference to its ex-
pression of precondition relations.
</bodyText>
<sectionHeader confidence="0.998799" genericHeader="introduction">
INTRODUCTION
</sectionHeader>
<bodyText confidence="0.91762">
Technical writers routinely employ a range of
forms of expression for precondition expressions in
instructional text. These forms are not randomly
chosen from a pool of forms that say &amp;quot;basically
the same thing&amp;quot; but are rather systematically used
based on elements of the communicative context.
Consider the following expressions of various kinds
of procedural conditions taken from a corpus of in-
structional text:
(la) If light flashes red, insert credit card again.
(Airfone, 1991) I
(lb) When the 7010 is installed and the battery
has charged for twelve hours, move the
OFF/STBY/TALK [8] switch to STBY.
(Code-a-phone, 1989)
(lc) The BATTERY LOW INDICATOR will
light when the battery in the handset is low.
(Excursion, 1989)
(1d) Return the OFF/STBY/TALK switch to
STBY after your call. (Code-a-phone, 1989)
(le) 1. Make sure the handset and base
antennas are fully extended. 2. Set the
OFF/STBY/TALK SWITCH to Talk.
(Excursion, 1989)
As can be seen here, procedural conditions
may be expressed using a number of alternative
&apos;In this paper, a reference will be added to the
end of all examples that have come directly from the
corpus, indicating the manual from which they were
taken.
lexical and grammatical forms. They may occur
either before or after the expression of their related
action (referred to here as the issue of slot), and
may be linked with a variety of conjunctions or
prepositions (the issue of linker). Further, they
may be expressed in a number of grammatical
forms, either as actions or as the relevant state
brought about by such actions (called here the ter-
minating condition). Finally, they may or may not
be combined into a single sentence with the ex-
pression of their related action (the issue of clause
combining).
Text generation systems must not only be ca-
pable of producing these forms but must also know
when to produce them. The study described here
has employed a detailed corpus analysis to address
these issues of choice and has implemented the re-
sults of this study in IMAGENE, an architecture for
instructional text generation.
</bodyText>
<sectionHeader confidence="0.991665" genericHeader="method">
CORPUS ANALYSIS
</sectionHeader>
<bodyText confidence="0.999536375">
The corpus developed for this study contains ap-
proximately 1000 clauses (6000 words) of instruc-
tions taken from 17 different sources, including in-
struction booklets, recipes, and auto-repair man-
uals. It contains 98 precondition expressions,
where the notion of precondition has been taken
from Rhetorical Structure Theory (Mann and
Thompson, 1988), and in particular from Rosner
and Stede&apos;s modified relation called Precondition
(1992). This relation is a simple amalgam of the
standard RST relations Circumstance and Condi-
tion and has proven useful in analyzing various
kinds of conditions and circumstances that fre-
quently, arise in instructions.
The analysis involves addressing two related
issues:
</bodyText>
<listItem confidence="0.6871275">
1. Determining the range of expressional forms
commonly used by instructional text writers;
2. Determining the precise communicative context
in which each of these forms is used.
</listItem>
<page confidence="0.997808">
42
</page>
<table confidence="0.718106307692308">
IMAGENE
Text
Level
Inquiries
••■■■•-111.
System Network
(Proces
Structrir)e
J.6 Sentence Builder Text
Structure
V
PENMAN ** Instructional
Al Text
</table>
<figureCaption confidence="0.999741">
Figure 1: The Architecture of IMAGENE
</figureCaption>
<bodyText confidence="0.999959136363636">
Determining the range of forms was a matter
of cataloging the forms that occurred in the cor-
pus. Example (1) shows exemplars of the major
forms found, which include present tense action
expressions (la), agentless passives (lb), relational
expressions of resultant states (lc), phrasal forms,
(1d). and separated imperative forms (le).
Determining the functional context in which
each of the forms is used involves identifying corre-
lations between the contextual features of commu-
nicative context on the one hand, and the lexical
and grammatical form on the other. I focus here
on the range of lexical and grammatical forms cor-
responding to the precondition expressions in the
corpus. The analyst begins by identifying a fea-
ture of the communicative context that appears
to correlate with the variation of some aspect of
the lexical and grammatical forms. They then at-
tempt to validate the hypothesis by referring to
the examples in the corpus. These two phases are
repeated until a good match is achieved or until a
relevant hypothesis cannot be found.
</bodyText>
<sectionHeader confidence="0.885189" genericHeader="method">
IMAGENE
</sectionHeader>
<bodyText confidence="0.999987473684211">
The analysis has resulted in a number of identified
covariations which have been coded in the Sys-
tem Network formalism from Systemic-Functional
Linguistics (Halliday, 1976) and included in the
IMAGENE architecture. The system network is
basically a decision network where each choice
point distinguishes between alternate features of
the communicative context. It has been used ex-
tensively in Systemic Linguistics to address both
sentence-level and text-level issues. Such networks
are traversed based on the appropriate features of
the communicative context, and as a side-effect
of this traversal, linguistic structures are con-
structed by realization statements which are as-
sociated with each feature of the network. These
statements allow several types of manipulation of
the evolving text structure, including the insertion
of text structure nodes, grammatical marking of
the nodes, textual ordering, and clause combin-
ing. Currently, the network is traversed manually;
the data structures and code necessary to auto-
matically navigate the structure have not been im-
plemented. This has allowed me to focus on the
contextual distinctions that need to be made and
on their lexical and grammatical consequences.
The general architecture of IMAGENE, as de-
picted in Figure 1, consists of a System Network
and a Sentence Building routine, and is built on
top of the Penman text generation system (Mann,
1985). It transforms inputs (shown on the left)
into instructional text (shown on the right).
The following sections will detail the results
of the analysis for precondition expressions. It
should be noted that they will include intuitive
motivations for the distinctions made in the sys-
tem network. This is entirely motivational; the de-
terminations made by the systems are based solely
on the results of the corpus analysis.
</bodyText>
<sectionHeader confidence="0.708802" genericHeader="method">
PRECONDITION SLOT
</sectionHeader>
<bodyText confidence="0.888569375">
In the corpus, preconditions are typically fronted,
and therefore the sub-network devoted to precon-
dition expression will default to fronting. There
are four exceptions to this default which are illus-
trated here:
(2a) The BATTERY LOW INDICATOR will
light when the battery is the handset is low.
(Excursion, 1989)
</bodyText>
<page confidence="0.999428">
43
</page>
<figure confidence="0.972890333333333">
Local
Nucleus&gt;Precond
Not-Local
</figure>
<figureCaption confidence="0.998427">
Figure 2: The Precondition Slot Selection Network
</figureCaption>
<listItem confidence="0.990698">
(2b) Return the OFF/STBY/TALK switch to
STBY after your call. (Code-a-phone, 1989)
(2c) The phone will ring only if the handset is
on the base. (Code-a-phone, 1989)
(2d) In the STBY (standby) position, the phone
will ring whether the handset is on the base or
in another location. (Code-a-phone, 1989)
</listItem>
<bodyText confidence="0.998131636363636">
The slot selection for example (2a) could go
either way, except that it is the first sentence in
a section titled &amp;quot;Battery Low Indicator&amp;quot;, mak-
ing the discussion of this indicator the local topic
of conversation, and thus the appropriate theme
of the sentence. This distinction is made in the
portion of the system network shown in figure 2.
This sub-network has a single system which dis-
tinguishes between preconditions associated with
actions referring to thematic material and those
associated with non-thematic material. The re-
alization statement, Nucleus&gt; Precond. indicates
that the main action associated with the condi-
tion (called the nucleus in RST terminology) is to
be placed before the precondition itself.
The slot determinations for the remainder of
example (2) are embedded in system networks
shown later in this paper. Example (21)) is the
example of what I call rhetorical demotion. The
action is considered obvious and is thus demoted
to phrase status and put at the end of its imme-
diately following action. Examples (2c) and (2d)
show preconditions that are not fronted because of
the syntax used to express the logical nature of the
precondition. In (2c), the condition is expiessed as
an exclusive condition which is never fronted. One
could, perhaps, say &amp;quot;?? Only if the handset is on
the base, will the phone ring.&amp;quot; ,2 but this form is
never used in the corpus. Neither is the condition
form in (24) ever fronted in the corpus.
&apos;The &amp;quot;??&amp;quot; notation is used to denote a possible
form of expression that is not typically found in the
corpus; it does not indicate itugrammatic.ality.
</bodyText>
<subsectionHeader confidence="0.575157">
PRECONDITION LINKER
</subsectionHeader>
<bodyText confidence="0.952295166666667">
Preconditions are marked with a number of link-
ers, illustrated in the following examples:
(3a) Lift the handset and set the
OFF/STBY/TALK [8) switch to TALK. When
you hear dial tone, dial the number on the
Dialpad [4]. (Code-a-phone, 1989)
</bodyText>
<listItem confidence="0.952477285714286">
(3b) If you have touch-tone service, move the
TONE/PULSE SWITCH to the Tone position.
(Excursion, 1989)
(3c) I. Make sure the handset and base
antennas are fully extended. 2. Set the
OFF/STBY/TALK SWITCH to Talk.
(Excursion, 1989)
</listItem>
<bodyText confidence="0.999613333333333">
The systems largely dedicated to selecting
precondition linkers are shown in figure 3.3
Two parallel systems are entered, Condition-
</bodyText>
<subsubsectionHeader confidence="0.605941">
Probability and Changeable-Type.
</subsubsectionHeader>
<bodyText confidence="0.999797864864865">
Condition-Probability distinguishes ac-
tions which are probable from those which are not.
Highly probable actions are typically marked with
&amp;quot;when&amp;quot;. Those actions which are not highly prob-
ably are marked with &amp;quot;If&amp;quot; or some similar linker,
as determined by the Complexity system and its
descendants.
The Complexity system is entered for ac-
tions which are not probable and not changeable.
It determines the logical nature of the precondi-
tions and sets the linker accordingly. The three
possible linkers chosen by this sub-network are
&amp;quot;if&amp;quot;, &amp;quot;only if&amp;quot;, or &amp;quot;whether ... or ... &amp;quot;.
Precond-When is entered when the action
is conditional and further is highly probable. The
occurrence of the dial tone in example (3a) is part
of a sequence of actions and is conditional in that it
may not actually happen, say if the telephone sys-
tem is malfunctioning in some way, but is nonethe-
less highly probable. Precond-Nominal is en-
tered immediately after Precond-When when-
ever the precondition is being stated as a nom-
inalization. It overwrites the linker choice with
&amp;quot;after&amp;quot; in only this case.
Preconditions that the user is expected to be
able to change if necessary and which come at
the beginning of sections that contain sequences
of prescribed actions are called Changeable pre-
conditions. Example (3c) is such a case. Here, the
reader is expected to check the antennas and ex-
tend them if they are not already extended. This
In the figure, the bold-italic conditions attached to
the front of these systems denote conditions that hold
on entry (e.g., Conditional-Action is a condition true
on the entry of Condition-Probability). They are nec-
essary because the networks shown are only portions
of a much larger network.
</bodyText>
<figure confidence="0.9686802">
Act-
Topic
44
Conditional-Action
Probable
Precond-When Precond-Nominal
Mark( after)
Mork(when)
Condition-
Probability
Nominal-Available
Not-Probable
Changeable
Mark( make-sure)
Changeable-
Exclusive
Mark(only-if)
Exclusivity Nucleus&gt; Precond
Simplex
Not-Exclusive
Mark(if)
Not-Changeable
P re cond&gt;Nucl eus
Procedural-Sequence and
Not-Concurrent and
(Obvious or Not-Coordinate)
Alternatives
Mork( whether-
or-not)
Not-
Alternatives
Mark( if)
Alternativeness
Complex
Complexity
</figure>
<figureCaption confidence="0.999992">
Figure 3: The Precondition Linker Selection Network
</figureCaption>
<bodyText confidence="0.9992985">
type of precondition is marked as a &amp;quot;Make sure&amp;quot;
imperative clause by Changeable-Type.
</bodyText>
<sectionHeader confidence="0.927944" genericHeader="method">
PRECONDITION FORM
</sectionHeader>
<bodyText confidence="0.998814888888889">
As noted above, preconditions can be expressed
as either a terminating condition or as an action.
The choice between the two is made by the form
selection sub-networks, shown in figures 4 and 5.
This choice depends largely upon the type of ac-
tion on which the precondition is based. The ac-
tions in the corpus can be divided into five cate-
gories which affect the grammatical form of pre-
condition expressions:
</bodyText>
<listItem confidence="0.999984">
• Monitor Actions;
• Giving Actions;
• Placing Actions;
• Habitual Decisions;
• Other Actions.
</listItem>
<bodyText confidence="0.999709555555555">
The first four actions are special categories
of actions that have varying act and terminating
condition forms of expression. The last category,
other actions, encompasses all actions not falling
into the previous four categories. The sub-network
which distinguishes these forms is shown in figure
4. This section will discuss each category in turn,
starting with the following examples of the first
four action types:
</bodyText>
<listItem confidence="0.81849675">
(4a) Listen for dial tone, then dial AREA
CODE + NUMBER slowly. (Airfone, 1991)
(4b) If you have touch-tone service, move the
TONE/PULSE SWITCH to the Tone position.
(Excursion, 1989)
(4c) The phone will ring only if the handset is
on the base. (Code-a-phone, 1989)
(4d) If you leave the OFF/STBY/TALK 18]
switch in TALK, move the switch to PULSE,
and tap FLASH [6] the next time you lift the
handset, to return to PULSE dialing mode.
(Code-a-phone, 1989)
</listItem>
<bodyText confidence="0.9993512">
Monitor actions, as shown in example (4a),
concern explicit commands to monitor conditions
in the environment. In this case, readers are being
commanded to listen for a dial tone, with the un-
derlying assumption that they will not continue on
</bodyText>
<page confidence="0.992282">
45
</page>
<figure confidence="0.997650352941177">
Monitor (Procedural-Giving
Mark(present) Mark(present)
Marktimperative) Mark(having)Primitive-Giving
Mark(is-required)
Giving
Habitual-Decision Procedural-Placing
Mark(present) Mark(present)
Mark(act) Mark(locative)
Primitive-Placing
Mark(locative)
Placing
Previous-
Ad-Type
Oth-
Other
Effective
Actions
</figure>
<figureCaption confidence="0.974134">
Figure 4: The Precondition Form Selection Net-
work
</figureCaption>
<bodyText confidence="0.85549056">
with the instructions unless one is heard. Giving
and Placing actions, however, tend to be expressed
as terminating conditions, as shown in (4b) and
(4c). The corpus does not include active forms
of these actions, such as &amp;quot;?? If the phone com-
pany has given you touch-tone service, do ...&amp;quot; or
&amp;quot;?? Do ... if you have placed the handset on the
base.&amp;quot; An Habitual decision is a decision to make
a practice of performing some action or of per-
forming an action in some way. When stated as
preconditions, they take the present tense form in
(4d). Taken in context, this expression refers not
to a singular action of leaving the OFF/STBY/-
TALK switch in TALK position, but rather to the
decision to habitually leave it in such a state. The
singular event would be expressed as &amp;quot;If you have
left the OFF/STBY/TALK switch in TALK, do
&amp;quot; which means something quite different from
the expression in (4d) which is stated in present
tense.
The bulk of the preconditions in the corpus
(70.4%) are based on other types of actions. These
types are distinguished in figure 5. In general, the
Other Effective Action systems are based on the
actor of the action. Reader actions are expressed
either as present tense passives or as present tense
actions, depending upon whether the action has
been mentioned before or not. These distinctions
are made by the gates Repeated-Reader and
Not-Repeated-Reader. An example of the for-
mer can be found in (5a), (&amp;quot;When the 7010 is in-
stalled&amp;quot;). In the corpus, such expressions of ac-
tions already detailed in the previous text take
the present tense, agentless passive form. If the
reader action is not a repeated mention, a simple
present tense active form is used, as in example
(5b).
(5a) When the 7010 is installed and the battery
has charged for twelve hours, move the
OFF/STBY/TALK [8] switch to STBY.
(Code-a-phone, 1989)
(5b) If you make a dialing error, or want to
make another call immediately, FLASH gives
you new dial tone without moving the
OFF/STBY/TALK switch. (Code-a-phone,
1989)
The Act-Hide system and its descendants
are entered for non-obvious, non-reader actions.
There are four basic forms for these precondition
expressions, examples of which are shown here:
</bodyText>
<listItem confidence="0.8200549">
(6a) If light flashes red, insert credit card again
(Airfone, 1991)
(6b) When you hear dial tone. dial the number
on the Dialpad (4]. (Code-a-phone, 1989)
(6c) The BATTERY LOW INDICATOR will
light when the battery in the handset is low.
(Excursion, 1989)
(6d) When instructed (approx. 10 sec.) remove
phone by firmly grasping top of handset and
pulling out. (Aitione, 1991)
</listItem>
<bodyText confidence="0.994634518518519">
Act-Hide distinguishes actions which are
overly complex or long duration and those that
are not. Those which are not will be expressed
either as present tense actions, as the one in ex-
ample (6a), if the action form is available in the
lexico-grammar. Active-Available makes this
determination. If no action form is available, then
Inception-Status is entered. If the inception of
the action is expected to have been witnessed by
the reader, then the present tense sensing action
form is used, as shown in example (6b).
Termination-Availability is entered either
if the action is to be hidden or if the inception of
the action was not expected to be experienced by
the reader. In these cases, the relational form of
the terminating condition is used if it is available.
An example of this is shown in example (6c). The
long duration action of the battery draining is not
expressed in the relational form used there. If the
relational form is not available, the present tense,
agentless passive is specified, as shown in example
(6d).
Finally, if an action being expressed as a pre-
condition is considered obvious to the reader, the
nominalization is used, provided its nominalized
form is available in the lexicon. Example (1d) is
an example of such an expression.
</bodyText>
<page confidence="0.998532">
46
</page>
<figure confidence="0.99913115625">
Not-Obvious-Action and
Reader-Action
Repeated-Reader
Mark(present)
Mark(passive)
Not-Repeated-Reader
Mart(present)
Mark(act)
Not-Obvious-Action and
Non-Reader-Action
A ct-
Hid
Active-
Not-Hide
Availablt
Hide
Available
Mark(art)
Mark(present)
Inception-
Not-Available Status
Experienced
Mark(sensing)
Mark(present)
Not-Experienced l Termination-
Availability
Available
Mark(relational)
Mark(present)
Not-Available
Mark(passive)
Mark(present)
</figure>
<figureCaption confidence="0.999951">
Figure 5: The Other Effective Actions Selection Network
</figureCaption>
<sectionHeader confidence="0.9666065" genericHeader="method">
VERIFYING IMAGENE&apos;S
PRESCRIPTIONS
</sectionHeader>
<bodyText confidence="0.992602040816327">
This study has been based primarily on an analysis
of a small subset of the full corpus, namely on the
instructions for a set of three cordless telephone
manuals. This training set constitutes approxi-
mately 35% of the 1000 clause corpus. The results
of this analysis were implemented in IMAGENE and
tested by manually re-running the system network
for all of the precondition expressions in the train-
ing set. These tests were performed without the
Penman realization component engaged, compar-
ing the text structure output by the system net-
work with the structure inherent in the corpus
text. A sample of such a text structure, showing
IMAGENE&apos;s output when run on the actions ex-
pressed in the text in example (7), is shown in fig-
ure 6. The general structure of this figure is reflec-
tive of the underlying RST structure of the text.
The nodes of the structure are further marked with
all the lexical and grammatical information rele-
vant to the issues addressed here.
(7) When. the 7010 installed and the battery
has charged for twelve hours, move the
OFF/STBY/TALK [8] switch to STBY. The
7010 is now ready to use. Fully extend the
base antenna [12]. Extend the handset antenna
[1] for telephone conversations. (Code-a-phone,
1989)
Statistics were kept on how well IMAGENE&apos;s
text structure output matched the expressions
in the corpus with respect to the four lexical
and grammatical issues considered here (i.e., slot,
form, linker, and clause combining). In the ex-
ample structure, all of the action expressions are
specified correctly except for the Charge action
(the second clause). This action is marked as a
present tense passive, and occurs in the corpus in
present perfect form.
In full realization mode, IMAGENE translates
the text structure into sentence generation com-
mands for the Penman generation system, produc-
ing the following output for example (7):
(8) When the phone is installed, and the battery
is charged. move the OFF/STBY/TALK
switch to the STBY position. The phone is now
ready to use. Extend the base antenna. Extend
the handset antenna for phone conversation.
As just mentioned, this text identical to the
original with respect to the four lexical and gram-
matical issues addressed in the corpus study with
</bodyText>
<page confidence="0.996606">
47
</page>
<figure confidence="0.93175375">
*IG-Text*
Procedural Sequence
Install Charge Continue-
Form: Passive Form: Passiv Sentence
Linker: When Linker: And
Tense: Present Tense: Present
Continue-
Sentence
</figure>
<figureCaption confidence="0.991134">
Figure 6: A Sample Text Structure
</figureCaption>
<figure confidence="0.998945285714286">
Result
Precondition
Move
Form: Imper.
Ready-to-use
Form: Relational
Tense: Present
dew-
Sentence
Purpose
1=1■1■116•■•
Extend-Handset Converse
Form: Imper. Form: Nominal
Linker: For
Continue-
Sentence
Extend-Base
Form: Imperative
New-
Sentence
oint
</figure>
<bodyText confidence="0.999422777777778">
the exception of the second clause. There. are other
differences, however, having to do with issues not
addressed in the. study. such as referring expres-
sions and the. expression of manner. A corpus
study of these issues is yet to be performed.
The overall results are shown in table 7 (see
Vander Linden, 1993b for the results concerning
other rhetorical relations). This chart indicates
the percentage of the precondition examples for
which IMAGENE&apos;s predictions matched the corpus
for each of the four lexical and grammatical issues
considered. The values for the training and testing
sets are differentiated. The training set. results
indicate that there are patterns of expression in
cordless telephone manuals that, can be identified
and implemented.
The system&apos;s predictions were also tested on
a separate and more diverse portion of the cor-
pus which includes instructions for different types
of devices and processes. This additional testing
serves both to disallow over-fitting of the data in
the training portion, and to give a measure of how
far beyond the telephone domain the predictions
can legitimately be applied. As can be seen in fig-
ure 7, the testing set. results were not as good as
those for the training set. but were still well above
random guesses.
</bodyText>
<figure confidence="0.908031">
Preconditions
100 —
90 —
80 —
70 —
60
50 —
40 —
30 —
20 —
10 —
0
cu
.14
IN Training Set Testing Set
</figure>
<figureCaption confidence="0.9872305">
Figure 7: The Accuracy of IMAGENE&apos;s Realizations
for Precondition Expressions
</figureCaption>
<page confidence="0.998325">
48
</page>
<sectionHeader confidence="0.984401" genericHeader="conclusions">
CONCLUSIONS
</sectionHeader>
<bodyText confidence="0.999565065217391">
This study has employed a knowledge intensive
corpus analysis to identify the elements of the
communicative context which can be used to de-
termine the appropriate lexical and grammatical
form of precondition expressions in instructional
texts. The methodology provides a principled
means for cataloging the use of lexical and gram-
matical forms in particular registers, and is thus
critical for any text generation project. The cur-
rent study of precondition expressions in instruc-
tions can be seen as providing the sort of register
specific data required for some current approaches
to register-based text generation (Bateman and
Paris, 1991).
The methodology is designed to identify co-
variation between elements of the communicative
context. on the one hand and grammatical form
on the other. Such covariations, however, do not
constitute proof that the technical writer actu-
ally considers those elements during the genera-
tion process, nor that the prescribed form is ac-
tually more effective than any other. Proof of ei-
ther of these issues would require psycholinguistic
testing. This work provides detailed prescriptions
concerning how such testing could be performed,
i.e., what forms should be tested and what con-
texts controlled for, but does not actually perform
them (cf. Vander Linden, 1993a).
The analysis was carried out by hand (with
the help of a relational database), and as such was
tedious and limited in size. The prospect of au-
tomation, however, is not a promising one at this
point. While it might be possible to automati-
cally parse the grammatical and lexical forms, it
remains unclear how to automate the determina-
tion of the complex semantic and pragmatic fea-
tures relevant to choice in generation. It might
be possible to use automated learning procedures
(Quinlan, 1986) to construct the system networks,
but this assumes that one is given the set of rele-
vant features to start with.
Future work on this project will include at-
tempts to automate parts of the process to facili-
tate the use of larger corpora, and the implemen-
tation of the data structures and code necessary
to automate the inquiry process.
</bodyText>
<sectionHeader confidence="0.99791" genericHeader="acknowledgments">
ACKNOWLEDGMENTS
</sectionHeader>
<bodyText confidence="0.9936702">
This work was done in conjunction with Jim Mar-
tin and Susanna Cumming whose help is grate-
fully acknowledged. It was supported by the
National Science Foundation under Contract No.
IRI-9109859.
</bodyText>
<sectionHeader confidence="0.991886" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.9984611">
Airfone (1991). Inflight Entertainment Informa-
tion Guide. United Airlines.
Bateman, J. A. and Paris, C. L. (1991). Con-
straining the development of lexicogrammati-
cal resources during text generation: towards
a computational instantiation of register the-
ory. In Ventola, E., editor, Functional and
Systemic Linguistics Approaches and Uses,
pages 81 106. Mouton, Amsterdam. Selected
papers from the 16th International Systemics
Congress, Helsinki, 1989.
Code-a-phone (1989). Code-A-Phone Owner&apos;s
Guide. Code-A-Phone Corporation, P.O. Box
5678, Portland, OR 97228.
Excursion (1989). Excursion 3100. Northwestern
Bell Phones, A US West Company.
Halliday, M. A. K. (1976). System and Function in
Language. Oxford University Press, London.
edited by G. R. Kress.
Mann, W. C. (1985). An introduction to the Nigel
text generation grammar. In Benson, J. D.,
Freedle, R. 0., and Greaves, W. S., edi-
tors, Systemic Perspectives on Discourse, vol-
ume 1, pages 84 95. Ablex.
Mann, W. C. and Thompson, S. A. (1988). Rhetori-
cal structure theory: Toward a functional the-
ory of text organization. Text: An Interdisci-
plinary Journal for the Study of Text, 8(2).
Quinlan, J. R. (1986). Induction of decision trees.
Machine Learning, 1:81 106.
Rosner, D. and Stede, M. (1992). Customizing
RST for the automatic production of techni-
cal manuals. In Dale, R., Hovy, E., Wiesner,
D., and Stock, 0., editors, Aspects of Au-
tomated Natural Language Generation, Lec-
ture Notes in Artificial Intelligence 587, pages
199 214. Springer Verlag, Berlin. Proceedings
of the 6th International Workshop on Natu-
ral Language Generation, Trento, Italy, April,
1992.
Vander Linden, K. (1993a). Generating effective in-
structions. In Proceedings of the Fifteenth An-
nual Conference of the Cognitive Science So-
ciety, June 18 21, Boulder, CO, pages 1023
1028.
Vander Linden, K. (1993b). Speaking of Actions:
Choosing Rhetorical Status and Grammatical
Form in Instructional Text Generation. PhD
thesis, University of Colorado. Available as
Technical Report CU-CS-654-93.
</reference>
<page confidence="0.999544">
49
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.577800">
<title confidence="0.990395">GENERATING PRECONDITION EXPRESSIONS IN INSTRUCTIONAL TEXT</title>
<author confidence="0.998583">Keith Vander Linden</author>
<affiliation confidence="0.962976">of Brighton</affiliation>
<address confidence="0.855026">Lewes Road Brighton, BN2 4AT UK</address>
<email confidence="0.944088">Internet:knvICvitri.bton.ac.uk</email>
<abstract confidence="0.998534111111111">This study employs a knowledge intensive corpus analysis to identify the elements of the communicative context which can be used to determine the appropriate lexical and grammatical form of texts. instructional text generation system based on this analysis, is presented, particularly with reference to its expression of precondition relations.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Airfone</author>
</authors>
<title>Inflight Entertainment Information Guide. United Airlines.</title>
<date>1991</date>
<contexts>
<context position="1046" citStr="Airfone, 1991" startWordPosition="149" endWordPosition="150"> system based on this analysis, is presented, particularly with reference to its expression of precondition relations. INTRODUCTION Technical writers routinely employ a range of forms of expression for precondition expressions in instructional text. These forms are not randomly chosen from a pool of forms that say &amp;quot;basically the same thing&amp;quot; but are rather systematically used based on elements of the communicative context. Consider the following expressions of various kinds of procedural conditions taken from a corpus of instructional text: (la) If light flashes red, insert credit card again. (Airfone, 1991) I (lb) When the 7010 is installed and the battery has charged for twelve hours, move the OFF/STBY/TALK [8] switch to STBY. (Code-a-phone, 1989) (lc) The BATTERY LOW INDICATOR will light when the battery in the handset is low. (Excursion, 1989) (1d) Return the OFF/STBY/TALK switch to STBY after your call. (Code-a-phone, 1989) (le) 1. Make sure the handset and base antennas are fully extended. 2. Set the OFF/STBY/TALK SWITCH to Talk. (Excursion, 1989) As can be seen here, procedural conditions may be expressed using a number of alternative &apos;In this paper, a reference will be added to the end of</context>
<context position="12904" citStr="Airfone, 1991" startWordPosition="2025" endWordPosition="2026">ndition expressions: • Monitor Actions; • Giving Actions; • Placing Actions; • Habitual Decisions; • Other Actions. The first four actions are special categories of actions that have varying act and terminating condition forms of expression. The last category, other actions, encompasses all actions not falling into the previous four categories. The sub-network which distinguishes these forms is shown in figure 4. This section will discuss each category in turn, starting with the following examples of the first four action types: (4a) Listen for dial tone, then dial AREA CODE + NUMBER slowly. (Airfone, 1991) (4b) If you have touch-tone service, move the TONE/PULSE SWITCH to the Tone position. (Excursion, 1989) (4c) The phone will ring only if the handset is on the base. (Code-a-phone, 1989) (4d) If you leave the OFF/STBY/TALK 18] switch in TALK, move the switch to PULSE, and tap FLASH [6] the next time you lift the handset, to return to PULSE dialing mode. (Code-a-phone, 1989) Monitor actions, as shown in example (4a), concern explicit commands to monitor conditions in the environment. In this case, readers are being commanded to listen for a dial tone, with the underlying assumption that they wi</context>
<context position="16144" citStr="Airfone, 1991" startWordPosition="2547" endWordPosition="2548">ent tense active form is used, as in example (5b). (5a) When the 7010 is installed and the battery has charged for twelve hours, move the OFF/STBY/TALK [8] switch to STBY. (Code-a-phone, 1989) (5b) If you make a dialing error, or want to make another call immediately, FLASH gives you new dial tone without moving the OFF/STBY/TALK switch. (Code-a-phone, 1989) The Act-Hide system and its descendants are entered for non-obvious, non-reader actions. There are four basic forms for these precondition expressions, examples of which are shown here: (6a) If light flashes red, insert credit card again (Airfone, 1991) (6b) When you hear dial tone. dial the number on the Dialpad (4]. (Code-a-phone, 1989) (6c) The BATTERY LOW INDICATOR will light when the battery in the handset is low. (Excursion, 1989) (6d) When instructed (approx. 10 sec.) remove phone by firmly grasping top of handset and pulling out. (Aitione, 1991) Act-Hide distinguishes actions which are overly complex or long duration and those that are not. Those which are not will be expressed either as present tense actions, as the one in example (6a), if the action form is available in the lexico-grammar. Active-Available makes this determination.</context>
</contexts>
<marker>Airfone, 1991</marker>
<rawString>Airfone (1991). Inflight Entertainment Information Guide. United Airlines.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J A Bateman</author>
<author>C L Paris</author>
</authors>
<title>Constraining the development of lexicogrammatical resources during text generation: towards a computational instantiation of register theory.</title>
<date>1991</date>
<booktitle>Functional and Systemic Linguistics Approaches and Uses,</booktitle>
<pages>81--106</pages>
<editor>In Ventola, E., editor,</editor>
<location>Mouton, Amsterdam.</location>
<contexts>
<context position="23019" citStr="Bateman and Paris, 1991" startWordPosition="3632" endWordPosition="3635">ployed a knowledge intensive corpus analysis to identify the elements of the communicative context which can be used to determine the appropriate lexical and grammatical form of precondition expressions in instructional texts. The methodology provides a principled means for cataloging the use of lexical and grammatical forms in particular registers, and is thus critical for any text generation project. The current study of precondition expressions in instructions can be seen as providing the sort of register specific data required for some current approaches to register-based text generation (Bateman and Paris, 1991). The methodology is designed to identify covariation between elements of the communicative context. on the one hand and grammatical form on the other. Such covariations, however, do not constitute proof that the technical writer actually considers those elements during the generation process, nor that the prescribed form is actually more effective than any other. Proof of either of these issues would require psycholinguistic testing. This work provides detailed prescriptions concerning how such testing could be performed, i.e., what forms should be tested and what contexts controlled for, but</context>
</contexts>
<marker>Bateman, Paris, 1991</marker>
<rawString>Bateman, J. A. and Paris, C. L. (1991). Constraining the development of lexicogrammatical resources during text generation: towards a computational instantiation of register theory. In Ventola, E., editor, Functional and Systemic Linguistics Approaches and Uses, pages 81 106. Mouton, Amsterdam. Selected papers from the 16th International Systemics Congress, Helsinki, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Code-a-phone</author>
</authors>
<title>Code-A-Phone Owner&apos;s Guide. Code-A-Phone Corporation,</title>
<date>1989</date>
<pages>97228</pages>
<location>P.O. Box 5678, Portland, OR</location>
<contexts>
<context position="1190" citStr="Code-a-phone, 1989" startWordPosition="173" endWordPosition="174">al writers routinely employ a range of forms of expression for precondition expressions in instructional text. These forms are not randomly chosen from a pool of forms that say &amp;quot;basically the same thing&amp;quot; but are rather systematically used based on elements of the communicative context. Consider the following expressions of various kinds of procedural conditions taken from a corpus of instructional text: (la) If light flashes red, insert credit card again. (Airfone, 1991) I (lb) When the 7010 is installed and the battery has charged for twelve hours, move the OFF/STBY/TALK [8] switch to STBY. (Code-a-phone, 1989) (lc) The BATTERY LOW INDICATOR will light when the battery in the handset is low. (Excursion, 1989) (1d) Return the OFF/STBY/TALK switch to STBY after your call. (Code-a-phone, 1989) (le) 1. Make sure the handset and base antennas are fully extended. 2. Set the OFF/STBY/TALK SWITCH to Talk. (Excursion, 1989) As can be seen here, procedural conditions may be expressed using a number of alternative &apos;In this paper, a reference will be added to the end of all examples that have come directly from the corpus, indicating the manual from which they were taken. lexical and grammatical forms. They may</context>
<context position="7100" citStr="Code-a-phone, 1989" startWordPosition="1102" endWordPosition="1103">is entirely motivational; the determinations made by the systems are based solely on the results of the corpus analysis. PRECONDITION SLOT In the corpus, preconditions are typically fronted, and therefore the sub-network devoted to precondition expression will default to fronting. There are four exceptions to this default which are illustrated here: (2a) The BATTERY LOW INDICATOR will light when the battery is the handset is low. (Excursion, 1989) 43 Local Nucleus&gt;Precond Not-Local Figure 2: The Precondition Slot Selection Network (2b) Return the OFF/STBY/TALK switch to STBY after your call. (Code-a-phone, 1989) (2c) The phone will ring only if the handset is on the base. (Code-a-phone, 1989) (2d) In the STBY (standby) position, the phone will ring whether the handset is on the base or in another location. (Code-a-phone, 1989) The slot selection for example (2a) could go either way, except that it is the first sentence in a section titled &amp;quot;Battery Low Indicator&amp;quot;, making the discussion of this indicator the local topic of conversation, and thus the appropriate theme of the sentence. This distinction is made in the portion of the system network shown in figure 2. This sub-network has a single system wh</context>
<context position="9180" citStr="Code-a-phone, 1989" startWordPosition="1449" endWordPosition="1450">r fronted. One could, perhaps, say &amp;quot;?? Only if the handset is on the base, will the phone ring.&amp;quot; ,2 but this form is never used in the corpus. Neither is the condition form in (24) ever fronted in the corpus. &apos;The &amp;quot;??&amp;quot; notation is used to denote a possible form of expression that is not typically found in the corpus; it does not indicate itugrammatic.ality. PRECONDITION LINKER Preconditions are marked with a number of linkers, illustrated in the following examples: (3a) Lift the handset and set the OFF/STBY/TALK [8) switch to TALK. When you hear dial tone, dial the number on the Dialpad [4]. (Code-a-phone, 1989) (3b) If you have touch-tone service, move the TONE/PULSE SWITCH to the Tone position. (Excursion, 1989) (3c) I. Make sure the handset and base antennas are fully extended. 2. Set the OFF/STBY/TALK SWITCH to Talk. (Excursion, 1989) The systems largely dedicated to selecting precondition linkers are shown in figure 3.3 Two parallel systems are entered, ConditionProbability and Changeable-Type. Condition-Probability distinguishes actions which are probable from those which are not. Highly probable actions are typically marked with &amp;quot;when&amp;quot;. Those actions which are not highly probably are marked wi</context>
<context position="13090" citStr="Code-a-phone, 1989" startWordPosition="2056" endWordPosition="2057">e varying act and terminating condition forms of expression. The last category, other actions, encompasses all actions not falling into the previous four categories. The sub-network which distinguishes these forms is shown in figure 4. This section will discuss each category in turn, starting with the following examples of the first four action types: (4a) Listen for dial tone, then dial AREA CODE + NUMBER slowly. (Airfone, 1991) (4b) If you have touch-tone service, move the TONE/PULSE SWITCH to the Tone position. (Excursion, 1989) (4c) The phone will ring only if the handset is on the base. (Code-a-phone, 1989) (4d) If you leave the OFF/STBY/TALK 18] switch in TALK, move the switch to PULSE, and tap FLASH [6] the next time you lift the handset, to return to PULSE dialing mode. (Code-a-phone, 1989) Monitor actions, as shown in example (4a), concern explicit commands to monitor conditions in the environment. In this case, readers are being commanded to listen for a dial tone, with the underlying assumption that they will not continue on 45 Monitor (Procedural-Giving Mark(present) Mark(present) Marktimperative) Mark(having)Primitive-Giving Mark(is-required) Giving Habitual-Decision Procedural-Placing M</context>
<context position="15722" citStr="Code-a-phone, 1989" startWordPosition="2482" endWordPosition="2483">ctions, depending upon whether the action has been mentioned before or not. These distinctions are made by the gates Repeated-Reader and Not-Repeated-Reader. An example of the former can be found in (5a), (&amp;quot;When the 7010 is installed&amp;quot;). In the corpus, such expressions of actions already detailed in the previous text take the present tense, agentless passive form. If the reader action is not a repeated mention, a simple present tense active form is used, as in example (5b). (5a) When the 7010 is installed and the battery has charged for twelve hours, move the OFF/STBY/TALK [8] switch to STBY. (Code-a-phone, 1989) (5b) If you make a dialing error, or want to make another call immediately, FLASH gives you new dial tone without moving the OFF/STBY/TALK switch. (Code-a-phone, 1989) The Act-Hide system and its descendants are entered for non-obvious, non-reader actions. There are four basic forms for these precondition expressions, examples of which are shown here: (6a) If light flashes red, insert credit card again (Airfone, 1991) (6b) When you hear dial tone. dial the number on the Dialpad (4]. (Code-a-phone, 1989) (6c) The BATTERY LOW INDICATOR will light when the battery in the handset is low. (Excursi</context>
<context position="19470" citStr="Code-a-phone, 1989" startWordPosition="3069" endWordPosition="3070">text structure, showing IMAGENE&apos;s output when run on the actions expressed in the text in example (7), is shown in figure 6. The general structure of this figure is reflective of the underlying RST structure of the text. The nodes of the structure are further marked with all the lexical and grammatical information relevant to the issues addressed here. (7) When. the 7010 installed and the battery has charged for twelve hours, move the OFF/STBY/TALK [8] switch to STBY. The 7010 is now ready to use. Fully extend the base antenna [12]. Extend the handset antenna [1] for telephone conversations. (Code-a-phone, 1989) Statistics were kept on how well IMAGENE&apos;s text structure output matched the expressions in the corpus with respect to the four lexical and grammatical issues considered here (i.e., slot, form, linker, and clause combining). In the example structure, all of the action expressions are specified correctly except for the Charge action (the second clause). This action is marked as a present tense passive, and occurs in the corpus in present perfect form. In full realization mode, IMAGENE translates the text structure into sentence generation commands for the Penman generation system, producing th</context>
</contexts>
<marker>Code-a-phone, 1989</marker>
<rawString>Code-a-phone (1989). Code-A-Phone Owner&apos;s Guide. Code-A-Phone Corporation, P.O. Box 5678, Portland, OR 97228.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Excursion</author>
</authors>
<title>Excursion 3100. Northwestern Bell Phones, A</title>
<date>1989</date>
<publisher>US West Company.</publisher>
<contexts>
<context position="1290" citStr="Excursion, 1989" startWordPosition="190" endWordPosition="191">l text. These forms are not randomly chosen from a pool of forms that say &amp;quot;basically the same thing&amp;quot; but are rather systematically used based on elements of the communicative context. Consider the following expressions of various kinds of procedural conditions taken from a corpus of instructional text: (la) If light flashes red, insert credit card again. (Airfone, 1991) I (lb) When the 7010 is installed and the battery has charged for twelve hours, move the OFF/STBY/TALK [8] switch to STBY. (Code-a-phone, 1989) (lc) The BATTERY LOW INDICATOR will light when the battery in the handset is low. (Excursion, 1989) (1d) Return the OFF/STBY/TALK switch to STBY after your call. (Code-a-phone, 1989) (le) 1. Make sure the handset and base antennas are fully extended. 2. Set the OFF/STBY/TALK SWITCH to Talk. (Excursion, 1989) As can be seen here, procedural conditions may be expressed using a number of alternative &apos;In this paper, a reference will be added to the end of all examples that have come directly from the corpus, indicating the manual from which they were taken. lexical and grammatical forms. They may occur either before or after the expression of their related action (referred to here as the issue </context>
<context position="6932" citStr="Excursion, 1989" startWordPosition="1079" endWordPosition="1080"> of the analysis for precondition expressions. It should be noted that they will include intuitive motivations for the distinctions made in the system network. This is entirely motivational; the determinations made by the systems are based solely on the results of the corpus analysis. PRECONDITION SLOT In the corpus, preconditions are typically fronted, and therefore the sub-network devoted to precondition expression will default to fronting. There are four exceptions to this default which are illustrated here: (2a) The BATTERY LOW INDICATOR will light when the battery is the handset is low. (Excursion, 1989) 43 Local Nucleus&gt;Precond Not-Local Figure 2: The Precondition Slot Selection Network (2b) Return the OFF/STBY/TALK switch to STBY after your call. (Code-a-phone, 1989) (2c) The phone will ring only if the handset is on the base. (Code-a-phone, 1989) (2d) In the STBY (standby) position, the phone will ring whether the handset is on the base or in another location. (Code-a-phone, 1989) The slot selection for example (2a) could go either way, except that it is the first sentence in a section titled &amp;quot;Battery Low Indicator&amp;quot;, making the discussion of this indicator the local topic of conversation, </context>
<context position="9284" citStr="Excursion, 1989" startWordPosition="1465" endWordPosition="1466">s form is never used in the corpus. Neither is the condition form in (24) ever fronted in the corpus. &apos;The &amp;quot;??&amp;quot; notation is used to denote a possible form of expression that is not typically found in the corpus; it does not indicate itugrammatic.ality. PRECONDITION LINKER Preconditions are marked with a number of linkers, illustrated in the following examples: (3a) Lift the handset and set the OFF/STBY/TALK [8) switch to TALK. When you hear dial tone, dial the number on the Dialpad [4]. (Code-a-phone, 1989) (3b) If you have touch-tone service, move the TONE/PULSE SWITCH to the Tone position. (Excursion, 1989) (3c) I. Make sure the handset and base antennas are fully extended. 2. Set the OFF/STBY/TALK SWITCH to Talk. (Excursion, 1989) The systems largely dedicated to selecting precondition linkers are shown in figure 3.3 Two parallel systems are entered, ConditionProbability and Changeable-Type. Condition-Probability distinguishes actions which are probable from those which are not. Highly probable actions are typically marked with &amp;quot;when&amp;quot;. Those actions which are not highly probably are marked with &amp;quot;If&amp;quot; or some similar linker, as determined by the Complexity system and its descendants. The Complexi</context>
<context position="13008" citStr="Excursion, 1989" startWordPosition="2041" endWordPosition="2042">ther Actions. The first four actions are special categories of actions that have varying act and terminating condition forms of expression. The last category, other actions, encompasses all actions not falling into the previous four categories. The sub-network which distinguishes these forms is shown in figure 4. This section will discuss each category in turn, starting with the following examples of the first four action types: (4a) Listen for dial tone, then dial AREA CODE + NUMBER slowly. (Airfone, 1991) (4b) If you have touch-tone service, move the TONE/PULSE SWITCH to the Tone position. (Excursion, 1989) (4c) The phone will ring only if the handset is on the base. (Code-a-phone, 1989) (4d) If you leave the OFF/STBY/TALK 18] switch in TALK, move the switch to PULSE, and tap FLASH [6] the next time you lift the handset, to return to PULSE dialing mode. (Code-a-phone, 1989) Monitor actions, as shown in example (4a), concern explicit commands to monitor conditions in the environment. In this case, readers are being commanded to listen for a dial tone, with the underlying assumption that they will not continue on 45 Monitor (Procedural-Giving Mark(present) Mark(present) Marktimperative) Mark(havin</context>
<context position="16331" citStr="Excursion, 1989" startWordPosition="2579" endWordPosition="2580">, 1989) (5b) If you make a dialing error, or want to make another call immediately, FLASH gives you new dial tone without moving the OFF/STBY/TALK switch. (Code-a-phone, 1989) The Act-Hide system and its descendants are entered for non-obvious, non-reader actions. There are four basic forms for these precondition expressions, examples of which are shown here: (6a) If light flashes red, insert credit card again (Airfone, 1991) (6b) When you hear dial tone. dial the number on the Dialpad (4]. (Code-a-phone, 1989) (6c) The BATTERY LOW INDICATOR will light when the battery in the handset is low. (Excursion, 1989) (6d) When instructed (approx. 10 sec.) remove phone by firmly grasping top of handset and pulling out. (Aitione, 1991) Act-Hide distinguishes actions which are overly complex or long duration and those that are not. Those which are not will be expressed either as present tense actions, as the one in example (6a), if the action form is available in the lexico-grammar. Active-Available makes this determination. If no action form is available, then Inception-Status is entered. If the inception of the action is expected to have been witnessed by the reader, then the present tense sensing action f</context>
</contexts>
<marker>Excursion, 1989</marker>
<rawString>Excursion (1989). Excursion 3100. Northwestern Bell Phones, A US West Company.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M A K Halliday</author>
</authors>
<title>System and Function in Language.</title>
<date>1976</date>
<publisher>Oxford University Press,</publisher>
<location>London.</location>
<note>edited by</note>
<contexts>
<context position="4949" citStr="Halliday, 1976" startWordPosition="772" endWordPosition="773">orms corresponding to the precondition expressions in the corpus. The analyst begins by identifying a feature of the communicative context that appears to correlate with the variation of some aspect of the lexical and grammatical forms. They then attempt to validate the hypothesis by referring to the examples in the corpus. These two phases are repeated until a good match is achieved or until a relevant hypothesis cannot be found. IMAGENE The analysis has resulted in a number of identified covariations which have been coded in the System Network formalism from Systemic-Functional Linguistics (Halliday, 1976) and included in the IMAGENE architecture. The system network is basically a decision network where each choice point distinguishes between alternate features of the communicative context. It has been used extensively in Systemic Linguistics to address both sentence-level and text-level issues. Such networks are traversed based on the appropriate features of the communicative context, and as a side-effect of this traversal, linguistic structures are constructed by realization statements which are associated with each feature of the network. These statements allow several types of manipulation </context>
</contexts>
<marker>Halliday, 1976</marker>
<rawString>Halliday, M. A. K. (1976). System and Function in Language. Oxford University Press, London. edited by G. R. Kress.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W C Mann</author>
</authors>
<title>An introduction to the Nigel text generation grammar.</title>
<date>1985</date>
<booktitle>Systemic Perspectives on Discourse,</booktitle>
<volume>1</volume>
<pages>84--95</pages>
<editor>In Benson, J. D., Freedle, R. 0., and Greaves, W. S., editors,</editor>
<publisher>Ablex.</publisher>
<contexts>
<context position="6181" citStr="Mann, 1985" startWordPosition="961" endWordPosition="962">structure, including the insertion of text structure nodes, grammatical marking of the nodes, textual ordering, and clause combining. Currently, the network is traversed manually; the data structures and code necessary to automatically navigate the structure have not been implemented. This has allowed me to focus on the contextual distinctions that need to be made and on their lexical and grammatical consequences. The general architecture of IMAGENE, as depicted in Figure 1, consists of a System Network and a Sentence Building routine, and is built on top of the Penman text generation system (Mann, 1985). It transforms inputs (shown on the left) into instructional text (shown on the right). The following sections will detail the results of the analysis for precondition expressions. It should be noted that they will include intuitive motivations for the distinctions made in the system network. This is entirely motivational; the determinations made by the systems are based solely on the results of the corpus analysis. PRECONDITION SLOT In the corpus, preconditions are typically fronted, and therefore the sub-network devoted to precondition expression will default to fronting. There are four exc</context>
</contexts>
<marker>Mann, 1985</marker>
<rawString>Mann, W. C. (1985). An introduction to the Nigel text generation grammar. In Benson, J. D., Freedle, R. 0., and Greaves, W. S., editors, Systemic Perspectives on Discourse, volume 1, pages 84 95. Ablex.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W C Mann</author>
<author>S A Thompson</author>
</authors>
<title>Rhetorical structure theory: Toward a functional theory of text organization.</title>
<date>1988</date>
<journal>Text: An Interdisciplinary Journal for the Study of Text,</journal>
<volume>8</volume>
<issue>2</issue>
<contexts>
<context position="2994" citStr="Mann and Thompson, 1988" startWordPosition="467" endWordPosition="470">these forms but must also know when to produce them. The study described here has employed a detailed corpus analysis to address these issues of choice and has implemented the results of this study in IMAGENE, an architecture for instructional text generation. CORPUS ANALYSIS The corpus developed for this study contains approximately 1000 clauses (6000 words) of instructions taken from 17 different sources, including instruction booklets, recipes, and auto-repair manuals. It contains 98 precondition expressions, where the notion of precondition has been taken from Rhetorical Structure Theory (Mann and Thompson, 1988), and in particular from Rosner and Stede&apos;s modified relation called Precondition (1992). This relation is a simple amalgam of the standard RST relations Circumstance and Condition and has proven useful in analyzing various kinds of conditions and circumstances that frequently, arise in instructions. The analysis involves addressing two related issues: 1. Determining the range of expressional forms commonly used by instructional text writers; 2. Determining the precise communicative context in which each of these forms is used. 42 IMAGENE Text Level Inquiries ••■■■•-111. System Network (Proces</context>
</contexts>
<marker>Mann, Thompson, 1988</marker>
<rawString>Mann, W. C. and Thompson, S. A. (1988). Rhetorical structure theory: Toward a functional theory of text organization. Text: An Interdisciplinary Journal for the Study of Text, 8(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>J R Quinlan</author>
</authors>
<title>Induction of decision trees.</title>
<date>1986</date>
<booktitle>Machine Learning,</booktitle>
<volume>1</volume>
<pages>106</pages>
<marker>Quinlan, 1986</marker>
<rawString>Quinlan, J. R. (1986). Induction of decision trees. Machine Learning, 1:81 106.</rawString>
</citation>
<citation valid="false">
<authors>
<author>D Rosner</author>
<author>M Stede</author>
</authors>
<title>Customizing RST for the automatic production of technical manuals.</title>
<date>1992</date>
<booktitle>Aspects of Automated Natural Language Generation, Lecture Notes in Artificial Intelligence 587,</booktitle>
<pages>199--214</pages>
<editor>In Dale, R., Hovy, E., Wiesner, D., and Stock, 0., editors,</editor>
<publisher>Springer Verlag,</publisher>
<location>Berlin.</location>
<marker>Rosner, Stede, 1992</marker>
<rawString>Rosner, D. and Stede, M. (1992). Customizing RST for the automatic production of technical manuals. In Dale, R., Hovy, E., Wiesner, D., and Stock, 0., editors, Aspects of Automated Natural Language Generation, Lecture Notes in Artificial Intelligence 587, pages 199 214. Springer Verlag, Berlin. Proceedings of the 6th International Workshop on Natural Language Generation, Trento, Italy, April, 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vander Linden</author>
<author>K</author>
</authors>
<title>Generating effective instructions.</title>
<date>1993</date>
<booktitle>In Proceedings of the Fifteenth Annual Conference of the Cognitive Science Society,</booktitle>
<volume>18</volume>
<pages>1023--1028</pages>
<location>Boulder, CO,</location>
<marker>Linden, K, 1993</marker>
<rawString>Vander Linden, K. (1993a). Generating effective instructions. In Proceedings of the Fifteenth Annual Conference of the Cognitive Science Society, June 18 21, Boulder, CO, pages 1023 1028.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vander Linden</author>
<author>K</author>
</authors>
<title>Speaking of Actions: Choosing Rhetorical Status and Grammatical Form in Instructional Text Generation.</title>
<date>1993</date>
<tech>PhD thesis,</tech>
<institution>University of Colorado.</institution>
<note>Available as Technical Report CU-CS-654-93.</note>
<marker>Linden, K, 1993</marker>
<rawString>Vander Linden, K. (1993b). Speaking of Actions: Choosing Rhetorical Status and Grammatical Form in Instructional Text Generation. PhD thesis, University of Colorado. Available as Technical Report CU-CS-654-93.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>