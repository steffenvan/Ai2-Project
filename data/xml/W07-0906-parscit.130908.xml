<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.699316">
Cultural Heritage Digital Resources: from Extraction to Querying
</title>
<author confidence="0.98363">
Michel G´en´ereux
</author>
<affiliation confidence="0.995864">
Natural Language Technology Group
University of Brighton
</affiliation>
<address confidence="0.596937">
Umited Kingdom
</address>
<email confidence="0.996043">
M.Genereux@brighton.ac.uk
</email>
<sectionHeader confidence="0.996629" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999872">
This article presents a method to extract and
query Cultural Heritage (CH) textual dig-
ital resources. The extraction and query-
ing phases are linked by a common on-
tological representation (CIDOC-CRM). A
transport format (RDF) allows the ontol-
ogy to be queried in a suitable query lan-
guage (SPARQL), on top of which an inter-
face makes it possible to formulate queries
in Natural Language (NL). The extraction
phase exploits the propositional nature of
the ontology. The query interface is based
on the Generate and Select principle, where
potentially suitable queries are generated to
match the user input, only for the most se-
mantically similar candidate to be selected.
In the process we evaluate data extracted
from the description of a medieval city
(Wolfenb¨uttel), transform and develop two
methods of computing similarity between
sentences based on WordNet. Experiments
are described that compare the pros and
cons of the similarity measures and evaluate
them.
</bodyText>
<sectionHeader confidence="0.999161" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999241026315789">
The CIDOC-CRM (DOERR, 2005) ontology is an
ISO standard created to describe in a formal lan-
guage the explicit and implicit concepts and rela-
tions underlying the documentation produced in CH.
The ontology aims at accommodating a wide variety
of data from the CH domain, but its sheer complex-
ity may make it difficult for non-experts to learn it
quickly, let alone use it efficiently. For others, it may
even be simpler to find a way to translate automati-
cally their data from the storage mechanism already
in place into CIDOC-CRM. For practitioners unfa-
miliar with strict formalisms, it may be more natural
to describe collections in natural language (e.g. En-
glish), and there is already an unprecedented wealth
of information available on-line in natural language
for almost anything, including CH. Wouldn’t it be
practical to be able to describe a collection of arti-
facts in plain English, with little or no knowledge
of the CIDOC-CRM formalism, and let language
technology take over and produce a CIDOC-CRM
database? The principle behind that idea is based
on the observation that the building blocks of the
CIDOC-CRM ontology, the triples, have a pred-
icative nature, which is structurally consistent with
the way many natural languages are built (DOERR,
2005):
The domain class is analogous to the
grammatical subject of the phrase for
which the property is analogous to the
verb. Property names in the CRM are de-
signed to be semantically meaningful and
grammatically correct when read from do-
main to range. In addition, the inverse
property name, normally given in paren-
theses, is also designed to be semanti-
cally meaningful and grammatically cor-
rect when read from range to domain.
A triple is defined as:
</bodyText>
<sectionHeader confidence="0.970198" genericHeader="method">
DOMAIN PROPERTY RANGE
</sectionHeader>
<page confidence="0.994063">
41
</page>
<note confidence="0.991847">
Proceedings of the Workshop on Language Technology for Cultural Heritage Data (LaTeCH 2007), pages 41–48,
Prague, 28 June 2007. c�2007 Association for Computational Linguistics
</note>
<bodyText confidence="0.9948521">
The domain is the class (or entity) for which a prop-
erty is formally defined. Subclasses of the domain
class inherit that property. The range is the class
that comprises all potential values of a property.
Through inheritance, subclasses of the range class
can also be values for that property. Example 1 is
somewhat artificial, but it illustrates how triples can
be extracted from natural language, where entities
E48 and E53 are Place Name and Place respectively,
while P1 is the property identify.
</bodyText>
<equation confidence="0.817243333333333">
(1) Rome identifies the capital ofItaly.
DOM E41 PROP P1 RANGE E1
E48 P1 E53
</equation>
<bodyText confidence="0.998594375">
‘Rome identifies the capital of Italy.’
The task of the natural language processing tool is to
map relevant parts of texts to entities and properties
in such a way that triples can be constructed (see also
(SHETH, 2003; SCHUTZ, 2005; DAGAN, 2006)).
In a nutshell, the Noun Clauses (NC) Rome and the
capital of Italy are mapped to Entity 48 and Entity
53, themselves subclasses of the domain E41 and
range E1 respectively, while the Verb Clause (VC)
identifies is mapped to Property P1.
On the other hand, a natural language interface
(ANDROUTSOPOULOS, 1995) to query struc-
turally complex and semantically intertwined data
such as those that can be found in the archaeological
domain can lighten a great deal the tasks of browsing
and searching. This state of affairs is even more true
for people not familiar with formal languages, as is
often the case in archaeology in particular and cul-
tural heritage in general. With the Semantic Web1
in full development and ontologies such as CIDOC-
CRM teaming together to render semantic naviga-
tion a realistic prospect, natural language interfaces
can offer a welcomed simplified view of the under-
lying data.
One of the most important and Semantic Web
oriented conceptual model available today is the
CIDOC-CRM, which is becoming the new standard
model to document CH data: the creation of tools
ready to manage CIDOC-CRM compliant archives
will be one of the most important goals of the com-
ing years (HERMON, 2000). The full implemen-
tation of the CIDOC-CRM model is simplified to-
</bodyText>
<footnote confidence="0.94142">
1http://www.w3.org/2001/sw/
</footnote>
<bodyText confidence="0.9944072">
day by a family of languages developed by the
World Wide Web Consortium2 and XML-based (LI,
2006). One of its most important representative is
RDF3, on top of which sits a query language such as
SPARQL4.
</bodyText>
<sectionHeader confidence="0.976218" genericHeader="method">
2 Extraction
</sectionHeader>
<subsectionHeader confidence="0.694484">
2.1 Methodology
</subsectionHeader>
<figure confidence="0.776192222222222">
TRIPLE
������� �������
� �
NC VC NC
NP VVZ NC PC
� � �� �� ��
Rome identifies DT NN IN NC
the capital of NP
Italy
</figure>
<figureCaption confidence="0.79133225">
Figure 1: Linguistic parse tree for example 1.
Figure 1 suggests that all pairs of NC separated by
a VC (and possibly other elements) are potentially
valid CIDOC-CRM triples. Part-of-speeches (POS)
</figureCaption>
<bodyText confidence="0.994454722222222">
and phrasal clauses can be obtained with a POS tag-
ger and chunker5. To validate the triples, we must
first make sure that the predicate is relevant by ex-
tracting the main verb of the verbal clause (VC) and
see if its meaning is similar (synonym) to at least
one of the CIDOC-CRM properties. For example, it
is possible to use the verb describe instead of iden-
tify. Once a set of possible properties is identified,
we must verify if the noun clauses (NC) surround-
ing the property are related to the DOMAIN and the
RANGE of that property. To establish the relation,
the first step is to identify the semantics of each NC
clause. For English, a good indicator of the NC se-
mantics is the rightmost NN in the clause, excluding
any attached PC. The rightmost NN is usually the
most significant: for example, in the NC the mu-
seum artifact, the main focus point is artifact, not
museum. In figure 1 the rightmost NN of the capital
</bodyText>
<footnote confidence="0.9995644">
2W3C: http://www.w3.org/
3http://www.w3.org/RDF/
4http://www.w3.org/TR/2006/CR-rdf-sparql-query-
20060406/
5http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/
</footnote>
<page confidence="0.999489">
42
</page>
<bodyText confidence="0.999802857142857">
of Italy is capital (excluding the attached PC); this
tells us that we are dealing with an object of type
capital. The second step is to see if the type is a
subclass of the DOMAIN or RANGE. Because en-
tity (E1) is a hypernym of capital, then we conclude
that the clause the capital of Italy is a subclass of
E1:CRM Entity. What if the NC has no NN? One
possibility6 is that the clause is made up of at least
one proper noun (Rome). To establish the type of
a proper noun, we use the Web as corpus and com-
pute a measure of semantic association (CHURCH,
1989) with all CIDOC-CRM classes and choose the
most similar as being the type of the NC clause. This
would yield the following triple:
</bodyText>
<equation confidence="0.933538">
E41 E1
Rome P1 the capital ofItaly
</equation>
<bodyText confidence="0.9995285">
where E1 and E41 are the entities Appellation and
CRMEntity respectively.
</bodyText>
<subsectionHeader confidence="0.998788">
2.2 Extracting a triple from free text
</subsectionHeader>
<bodyText confidence="0.999924368421053">
The following experiment shows the result of ex-
tracting a triple from a textual description of the me-
dieval city of Wolfenb¨uttel based on the method de-
scribed previously. The document was 3922 words
long with 173 sentences. The system extracted 197
intermediate triples and 79 final triples. Table 1
shows a few processing steps for the following frag-
ment of text:
The street’s particular charm lies in its
broad-faced half-timbered buildings.
In step ①, an intermediate triple is extracted from
texts, then we use synonyms and hypernyms in step
② to find mappings with domains (D), properties (P)
and ranges (R) of the ontology. The final triples
appears in step ③. For example, consist is a syn-
onym for lie, and object is an hypernym of building.
In each case, we extracted from WordNet7 (PED-
ERSEN, 2004) the synonyms and hypernyms of the
three most common uses for each word (verb, noun).
</bodyText>
<footnote confidence="0.9983315">
6The other possibility, pronouns, is omitted for simplicity.
7http://wordnet.princeton.edu/
</footnote>
<table confidence="0.99953075">
① D [The street’s particular charm]
P lies in
R [its broad-faced
half-timbered buildings]
② D [attribute, charm, entity,
P language, object]
R [consist]
[activity, building, creation,
entity, event, object]
③ D [e13:Attribute Assignment]
P p9:consists of
R [e7:Activity]
</table>
<tableCaption confidence="0.999693">
Table 1: A triple extracted from free text.
</tableCaption>
<sectionHeader confidence="0.997751" genericHeader="method">
3 Querying
</sectionHeader>
<subsectionHeader confidence="0.991553">
3.1 NL Interface to SPARQL Querying
</subsectionHeader>
<bodyText confidence="0.999969428571429">
Our approach to the problem of mapping a query in
natural language to a query expressed in a partic-
ular query language (here SPARQL) is to generate
(BURKE, 1997) the most likely candidates and se-
lect the item which shows maximum semantic sim-
ilarity with the input string. We now explain both
steps in turn.
</bodyText>
<subsectionHeader confidence="0.629954">
3.1.1 Generation
</subsectionHeader>
<bodyText confidence="0.99911475">
We start from two parallel grammars describing
both the target query language and one or more nat-
ural languages. Here is an excerpt from one query
language (SPARQL),
</bodyText>
<subsubsectionHeader confidence="0.367636">
SelectQuery --+ Select S Saar }
</subsubsectionHeader>
<construct confidence="0.88337625">
DC? WC SM?
DC --+ From Table
WC --+ Where? { Filter }
SM --+ OrderBy Modi�er
Star--+ ’*’
Select --+ ’select’
From --+ ’from’
Table --+ ’&lt; OneTable &gt;’
</construct>
<bodyText confidence="0.873292">
and part of its equivalent in natural language (here
English):
</bodyText>
<construct confidence="0.304070333333333">
Select --+r ’select’ } ’the’?
l ’show’
From --+ ’from’
</construct>
<page confidence="0.893388">
43
</page>
<equation confidence="0.8516555">
’all records’
Star �
’everything’
OneTable —* ’clients’
</equation>
<bodyText confidence="0.999857772727273">
Therefore, for a SPARQL query such as select *
from &lt;clients&gt; 11, we are able to generate the
equivalent in natural language: select all records
from clients. The generation space of SPARQL and
natural languages can be very large (in fact it can be
infinitely large in both cases), so generation must be
constrained in some way (it is in fact constrained by
the size of the input string). More specifically, the
grammar generates candidate strings of length to be
contained between a fraction f1 shorter and a frac-
tion f2 longer than the size (in meaningful words) of
the input strings. Meaningful words are limited to be
adjectives (tag J), nouns (tag N), verbs (tag V) and
adverbs (tag RB), partly because they can be com-
pared against each other using WordNet. The val-
ues off2 is usually less than the value off1, but the
exact values are to be determined empirically. The
idea behind this is based on the general observation
that queries expressed in natural languages are more
likely to be redundant than underspecified. Let’s
look at example 2, a particular example of a user
query.
</bodyText>
<listItem confidence="0.836593333333333">
(2) Could/MD you/PP show/VVP me/PP all/PDT
the/DT records/NNS you/PP have/VHP
please/VV ./SENT
</listItem>
<bodyText confidence="0.999934333333333">
There are three (show, records and have) meaning-
ful words in 2. Assuming that we have 0.4 and 0.1
for the values of f1 and f2 respectively, the gener-
ator would then be constrained to produce candi-
date strings having a length in the range [3-0.4*3,
3+0.1*3] or [1.8, 3.3], i.e. between two and three
words after rounding. The generative process must
also be informed on possible values employed by
the user for the sake of filtering. For example, in
queries such as Show me everything that has a salary
above 500 and Select people named Smith, the value
of the fields salary and name are respectively speci-
fied as being above 500 and Smith. These values are
used by the generator. They are assume to be found
as symbols (SYM), foreign words (FW), nouns (N),
cardinal numbers (CD) or adjectives (J) in the input
string. The whole generative process can be sum-
marised as follows:
</bodyText>
<listItem confidence="0.994868428571429">
1. Compute the input query strings length I in
meaningful word tokens and detect potential
field values (SYM, FW, N, CD or J)
2. Generates candidate strings of a given language
L with length in the range [I-f1*I, I+f2*I]
3. For each candidate string, generate the equiva-
lent SPARQL query
</listItem>
<bodyText confidence="0.9914395">
The candidate strings in language L from step 2 are
passed on to the selection process.
</bodyText>
<subsectionHeader confidence="0.905633">
3.1.2 Selection
</subsectionHeader>
<bodyText confidence="0.999894911764706">
The selection process is based on a measure of
similarity between the input string and candidates
issued from generation. The two similarity mea-
sures we are presenting are based on an available
semantic resource for English, Wordnet. Both mea-
sures assume that two sentences are semantically
similar if they share words with similar meanings.
This assumption is certainly not true in general but,
in the case of database querying, we can assume
that the use of metaphors, irony or contextualised
expressions is relatively rare. There are different
approaches to compute similarity, but we are con-
strained by the fact that the system must potentially
analyse and compare a large number of sentences
with varying lengths. The so-called Levenshtein dis-
tance or edit distance is a simple option based on
dynamic programming (RISTAD, 1998). It can be
transformed to become a semantic distance, that is,
the semantic distance between two strings is given
by the minimum number of operations needed to
transform one string into the other, where an oper-
ation is an insertion (cost 1), deletion (cost 1), or
substitution of a single word (as opposed to letters
in the original edit-distance). The exact cost of sub-
stitution is given by how dissimilar a pair of words
is according to WordNet (from 0 to 2). Two strings
are therefore similar if they have words semantically
related, with a preference for the same word order.
This last requirement is not always acceptable for
natural language, as can be illustrated by examples 3
and 4, which are clear semantic equivalent, although
a measure based on the Levenhstein distance would
be unduly penalising because of a different word or-
der.
</bodyText>
<listItem confidence="0.97861">
(3) Show me the name and salary of all clients.
</listItem>
<page confidence="0.878256">
44
</page>
<listItem confidence="0.9462615">
(4) Look into clients and show me their name and
salary.
</listItem>
<bodyText confidence="0.9996623">
However, the edit distance is computationally attrac-
tive and it is not clear whether word-order is such an
important factor when querying database in natural
language.
One way to have more control over word-order
is to built a similarity matrix. A similarity matrix
provides a pairwise measure of similarity between
each word of two sentences. Let’s say we want to
compare the similarity of a user’s sentence 5 with a
candidate query 6 generated by system.
</bodyText>
<listItem confidence="0.9993815">
(5) Show me salaries for names Smith.
(6) Select the salary where name is Smith.
</listItem>
<bodyText confidence="0.718125">
The corresponding similarity matrix is shown as ta-
ble 2. Each word is assigned a part-of-speech and
transformed to its base-form to simplify comparison
using WordNet. The similarity values in the table are
</bodyText>
<table confidence="0.616427666666667">
Similarity show salary name Smith
select 25 0 0 0
salary 0 100 8 6
name 0 8 100 17
be 33 0 0 0
Smith 0 6 17 100
</table>
<tableCaption confidence="0.983062">
Table 2: Similarity matrix between two sentences
</tableCaption>
<bodyText confidence="0.9999633">
in the [0,100] range. They are computed using sim-
ple edge counting in WordNet, a technique similar
to computing how two people are genetically related
through their common ancestors (BUDANITSKY,
2001). Only nouns, verbs, adjectives and adverbs
can be semantically related by WordNet, therefore
strings are initially stripped of all other grammatical
categories. For example, table 2 shows that the word
select has a degree of similarity of 25 with show.
This approach does not take on board word-order at
all, and we introduce a slight correction for the value
of each entry in the table: similarity is decreased
when words appear in different positions in a string.
This is a sensible compromise to consider word-
order without undue penalties. This approach can be
expressed as follows: similarity values are decreased
by a maximum of MaxDecrease only when a pair of
words are significantly distant (by factor SigDistant)
in their respective position within each string. This
is expressed by the following formula:
</bodyText>
<equation confidence="0.967285">
IF  |l −c |
L &gt; SigDistant THEN
Sim ← Sim ∗ 11 −  |l L c |∗ MaxDecrease I
</equation>
<bodyText confidence="0.99984475">
where l and c are the line and column numbers re-
spectively and L is the size of the longest string. If
we set the values of SigDistant and MaxDecrease
to 0.2, then table 2 is transformed to 3. In table 3,
</bodyText>
<table confidence="0.5987555">
Similarity show salary name Smith
select 25 0 0 0
salary 0 100 7 5
name 0 7 100 17
be 28 0 0 0
Smith 0 5 16 100
</table>
<tableCaption confidence="0.7274465">
Table 3: Transf. sim. matrix between two sentences
we can see that the similarity between show and be
</tableCaption>
<bodyText confidence="0.9633685">
has been reduced from 33 to 28. Once we have the
transformed similarity matrix, we can compute the
similarity between the two sentences as such. This
is achieved by the following four steps:
</bodyText>
<listItem confidence="0.7518875">
1. Generate all possible squared (k*k) sub-
matrices from the transformed similarity ma-
trix. There are Ckn = n!
k!(n−k)! such matrices
</listItem>
<bodyText confidence="0.788907857142857">
where k is the size of the shortest sentence and
n the longest
2. Generate all possible word-pairings for each
sub-matrices. This amounts to selecting ele-
ments being on a different row and column.
There are k! such pairings for each Ckn =
k!(n−k)! squared sub-matrices
</bodyText>
<listItem confidence="0.9513715">
n!
3. Compute the similarity of each k! word-pairs
for all Ckn sub-matrices by adding their similar-
ity value
4. The similarity of the transformed matrix is
taken to be the same as the highest among the
k! word-pairs * Ckn sub-matrices, divided (nor-
malised) by the size of the longest string n
</listItem>
<bodyText confidence="0.7639475">
For our running example in table 3, step 1 yields five
4*4 sub-matrices. For each sub-matrix, there are 24
</bodyText>
<page confidence="0.99866">
45
</page>
<bodyText confidence="0.999972346153846">
word-pairings (step 2). It is easy to see which word
pairing from table 2 gives the highest similarity: (be-
show,28), (salary-salary,100), (name-name,100) and
(Smith-Smith,100), for a total of 328, normalised
to the length of the longest string (5): 328/5 =
66. For comparison, the semantic similarity dis-
tance between the same two sentences using the edit-
distance is 250, and this must be normalised to the
added length of the shortest and the longest sen-
tence, 250/(5+4) = 28. Since Levenhstein gives us
a distance, we have 1-distance for similarity. The
normalising factor is (longest+shortest = 5+4), since
two strings completely different would necessitate k
replacements and n-k insertions. The maximum cost
is therefore k*2 + (n-k) = k+n.
We can get a flavour of the computational com-
plexities involved in both measures in terms of
the number of semantic similarity computations be-
tween two words (the most costly computation). The
ration between these numbers for Matrix (n!/(n-k)!)
and Edit (k*n) is (n-1)!/k(n-k)!. This ratio is equal
or greater than 1 in all cases except when n=k=2 and
n=k=3, which confirms the expected greater com-
plexity of the Matrix method. For example, when
two strings of 8 words (n=k=8) are compared, com-
plexity is 64 for Edit and 40320 for Matrix.
</bodyText>
<subsectionHeader confidence="0.999411">
3.2 Comparative Evaluation
</subsectionHeader>
<bodyText confidence="0.999537933333333">
In this experiment8 we aim at evaluating and com-
paring the two (word-based) measures of semantic
similarity between sentences previously described
and based on WordNet. We will refer to these mea-
sures as Edit and Matrix. We need a reference cor-
pus where phrases are paired as paraphrases, so
we used the Microsoft Research Paraphrase Corpus
(QUIRK, 2004), which is described by the authors
as:
... a text file containing 5800 pairs of sen-
tences which have been extracted from
news sources on the web, along with hu-
man annotations indicating whether each
pair captures a paraphrase/semantic equiv-
alence relationship.
</bodyText>
<footnote confidence="0.60965">
8Values of parameters for the methods: cost of substitution
= 2, word-pairings are centred, contiguous and do not exceed
7, MaxDecrease=0.2, SigDistant=0.2, method for similarity =
count of edges
</footnote>
<bodyText confidence="0.999750666666667">
One of two levels of quality is assigned to each para-
phrase (0 or 1). For example, phrases 7 are better
paraphrases (annotated “1”) than 8 (annotated “0”).
</bodyText>
<listItem confidence="0.985065">
(7) Amrozi accused his brother, whom he called ”the
witness”, of deliberately distorting his evidence./
Referring to him as only ”the witness”, Amrozi accused
his brother of deliberately distorting his evidence.
(8) Yucaipa owned Dominick’s before selling the chain to
</listItem>
<bodyText confidence="0.924473388888889">
Safeway in 1998 for $2.5 billion./ Yucaipa bought
Dominick’s in 1995 for $693 million and sold it to
Safeway for $1.8 billion in 1998.
We selected random subsets of 100 pairs of good
paraphrases (i.e. annotated with “1”), 100 pairs of
less good paraphrases (annotated with “0”) and 100
pairs of phrases not paraphrases of each other. We
computed semantic similarity for each subset using
both methods. Results are presented in table 4. For
each method the minimum and maximum values of
similarity are reported. Variance is relatively low
and both methods appear to correlate. As expected,
paraphrases have higher similarity values, with type
“1” values slightly ahead. Moreover, average val-
ues for paraphrases are significantly higher than for
non-paraphrases, which is a sign that both methods
can discriminate between semantically related sen-
tences. When querying databases, we cannot always
</bodyText>
<table confidence="0.983860857142857">
Compar. Min Avg Max Var Cor
No(E) 5 12 24 0.2 0.7
No(M) 3 14 30 0.4 0.7
“0”(E) 21 57 86 1.2 0.8
“0”(M) 20 54 84 3.3 0.8
“1”(E) 35 69 94 1.9 0.6
“1”(M) 34 61 84 2.4 0.6
</table>
<tableCaption confidence="0.95734">
Table 4: Compar. eval. of the (E)dit and (M)atrix
methods for types “0”, “1” and (No) paraphrases.
</tableCaption>
<bodyText confidence="0.99813">
expect a clear front runner, but a continuum of more
or less likely valuable candidates, more in line with
the case of paraphrases “0”.
2-best pairs In this last experiment, 40 sets of 9
phrases are submitted to each method for evalua-
tion. Each set includes only one pair of paraphrases:
sets 1 to 20 include type “0” paraphrases, while sets
21 to 40 include type “1” paraphrases. There was
no indication in the corpus that two phrases were
not paraphrase of each other, so we assumed that
</bodyText>
<page confidence="0.998455">
46
</page>
<bodyText confidence="0.999780666666667">
phrases not paired as being paraphrases were not.
Therefore, our random selection of non-paraphrases
can be more or less dissimilar. Table 5 show the re-
sults, where underlined similarity scores are those
of the actual paraphrases, and columns BEST and
SECOND give the actual measures of similarity for
the best match (the pair the system thinks are para-
phrases) and its closest follower respectively. We
can see that all 40 paraphrases were selected as the
best by both methods (M and E). Numbers in bold
indicate cases where methods have selected differ-
ent second best. The differences between type “0”
and “1” are consistent with those observed in table
4. These are very encouraging results that suggest
both methods could be used in a real system.
</bodyText>
<table confidence="0.9999074">
S Type 0 Type 1 S
E E
T T
Best Second Best Second
M E M E M E M E
1 43 54 19 20 59 48 26 17 21
2 39 38 19 14 62 94 24 17 22
3 40 59 32 21 74 90 16 18 23
4 46 65 24 20 57 86 39 21 24
5 51 57 33 31 47 47 25 19 25
6 39 43 19 15 53 54 15 11 26
7 54 70 41 39 46 60 16 15 27
8 50 59 13 9 51 79 12 10 28
9 72 78 17 20 52 62 21 14 29
10 60 67 33 23 56 60 42 29 30
11 56 78 17 15 56 52 27 26 31
12 36 50 15 14 84 79 21 17 32
13 72 80 18 16 48 60 29 27 33
14 66 68 29 25 80 79 16 13 34
15 39 65 15 12 84 87 34 29 35
16 52 58 10 9 52 77 22 14 36
17 75 71 23 21 84 82 21 18 37
18 48 53 22 19 84 87 21 17 38
19 60 60 27 19 69 71 15 13 39
20 84 63 18 14 55 80 18 18 40
</table>
<tableCaption confidence="0.9920735">
Table 5: Similarity scores for each of the 2 most sim-
ilar pairs of phrases as computed by M and E
</tableCaption>
<subsectionHeader confidence="0.98379">
3.3 Conclusions and Future Work
</subsectionHeader>
<bodyText confidence="0.999845803921569">
It is difficult to have a comprehensive evaluation of
the extraction phase through standard metrics (pre-
cision, recall), since there is no benchmark for this
type of analysis. A good benchmark would be a
CIDOC-CRM human-annotated text. Yet we can
give some evidence of the performance of the sys-
tem. In our experiment, we have collected 79 final
triples from a 173 sentences long document describ-
ing buildings and places of interest in a medieval
city. The data was relatively clean, although punc-
tuation was heavily used throughout the document,
confusing the chunker. Despite modest results, there
is no doubt that a system like this gives a head start
to anyone wishing to build a collection using the
CIDOC-CRM ontology. A first pass in the docu-
mentation gives a good idea of what the textual doc-
umentation is about. However, a fuller interpretation
will often involve combining many triples together
to form paths. Because of time restriction, we have
decided to process the three most common meanings
of each word that we looked up in WordNet (avoid-
ing the need to select the correct meaning among
many); this may have the side effect of lowering ac-
curacy. Speed was not an issue without access to the
Web, not an absolute necessity if we have a good
thesaurus for proper nouns. Finally, we have tuned
the CRM to analyse impressions of a city, which is
not a domain for which the CRM is optimally in-
tended. We conjecture that texts about museum cat-
alogues would have yielded better results.
The approach to database querying presented in
this paper demonstrates that more and more seman-
tic resources can be used to render natural language
interfaces more efficient. The semantic web pro-
vides the backbone and the technology to support
complex querying of naturally complex data. Lexi-
cal resources such as WordNet makes it possible to
compute semantic similarity between sentences, al-
lowing researchers to develop original ways to se-
mantic parsing of natural languages. Our experi-
ments show that it is possible to map English queries
to a subset of SPARQL with high level of precision
and recall. The main drawback of the Edit method is
its overemphasis on word-order, making it less suit-
able for some languages (e.g. German). The Ma-
trix method is computationally greedy, and future
research must investigate efficient ways of cutting
down the large search space. Perhaps step 2 should
limit the number of word-pairings by taking only ad-
jacent combinations.
Another improvement might include less uncon-
</bodyText>
<page confidence="0.997706">
47
</page>
<bodyText confidence="0.9996113125">
ventional methods for generating the sentences such
as FUF/Surge or the realiser of the LKB system, as
well as the use of a corpus more relevant to CH.
At this point we concede that the generation space
may be problematic as input gets longer, but we con-
jecture that user’s input should in most cases be of
manageable length. Finally, more standards evalu-
ation metrics could serve to situate the two similar-
ity measures that are being presented with regards to
more standard approaches used for the same purpose
(KAUCHAK, 2006).
Finally, we have avoided the issue raised by poly-
semic words by considering only the most common
senses found in WordNet, so the approach would be
well complemented by contribution from the field of
Word-Sense Disambiguation (WSD).
</bodyText>
<sectionHeader confidence="0.983938" genericHeader="conclusions">
Acknowledgement
</sectionHeader>
<bodyText confidence="0.9998695">
This work has been conducted as part of the EPOCH
network of excellence (IST-2002-507382) within the
IST (Information Society Technologies) section of
the Sixth Framework Programme of the European
Commission. Thank you to the reviewers for useful
comments.
</bodyText>
<sectionHeader confidence="0.998965" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.996262">
ANDROUTSOPOULOS I., RITCHIE G., THANISCH P.
(1995). Natural language interfaces to databases - an
introduction. Journal of Language Engineering, 1(1),
29.
BUDANITSKY A., HIRST G. (2001). Semantic dis-
tance in wordnet : an experimental, application-
oriented evaluation offive measures. In NAACL 2001
Workshop on WordNet and Other Lexical Resources,
Pittsburgh.
BURKE R.D., HAMMOND K.J., KULYUKIN V., LYTI-
NEN S.L., TOMURO N., SCHOENBERG. S. Ques-
tion answering from frequently asked question files -
experiences with the faq finder system. AI Magazine,
18(2), 57.
CHURCH K.W., HANKS P. (1989) Word association
norms, mutual information, and lexicography. In
Proc. of the 27th. Annual Meeting of the ACL Van-
vouver, B.V., 1989), pp. 76-83.
CRESCIOLI M., D’ANDREA A., NICCOLUCCI F.
(2002). XML Encoding of Archaeological Unstruc-
tured Data. In G. Burenhault (ed.), Archaeological
Informatics : Pushing the envelope. In Proc. of the
29th CAA Conference, Gotland April 2001, BAR In-
ternational Series 1016, Oxford 2002, 267-275.
DAGAN I., GLICKMAN O., MAGNINI B. (2006). The
PASCAL Recognising Textual Entailment Challenge.
Lecture Notes in Computer Science, Volume 3944, Jan
2006, Pages 177 - 190.
DOERR M. (2005) The CIDOC CRM, an Ontolog-
ical Approach to Schema Heterogeneity. Seman-
tic Interoperability and Integration. Dagstuhl Sem-
inar Proceedings, pp. 1862-4405. Internationales
Begegnungs- und Forschungszentrum fuer Informatik
(IBFI), Schloss Dagstuhl, Germany.
HERMON S., NICCOLUCCI F. (2000). The Impact of
Web-shared Knowledge on Archaeological Scientific
Research. Proc. of Intl CRIS 2000 Conf., Helsinki,
Finland, 2000.
KAUCHAK D., BARZILAY R. (2006). Paraphrasing
for Automatic Evaluation. In Proc. of NAACL/HLT,
2006.
LI Y., YANG H., JAGADISH H. (2006). Construct-
ing a generic natural language interface for an xml
database. International Conference on Extending
Database Technology
PEDERSEN T., PATWARDHAN S.,MICHELIZZI
J.(2004). Wordnet::Similarity - Measuring the
Relatedness of Concepts. In Nineteenth National
Conference on Artificial Intelligence (AAAI-04), San
Jose, CA. (Intelligent Systems Demonstration).
QUIRK C., BROCKETT C., DOLAN W.B. (2004).
Monolingual Machine Translation for Paraphrase
Generation. In Proceedings of the 2004 Conference
on Empirical Methods in Natural Language Process-
ing, Barcelona Spain.
RISTAD E.S., YIANILOS P. N. (1998). Learning string-
edit distance. IEEE Transactions on Pattern Analysis
and Machine Intelligence, 20(5), 522.
SCHUTZ A., BUITELAR P. (2005). RelExt: A Tool
for Relation Extraction in Ontology Extension. In:
Proc. of the 4th International Semantic Web Confer-
ence, Galway, Ireland, Nov. 2005.
SHETH A. (2003) Capturing and applying exist-
ing knowledge to semantic applications. Invited
Talk ”Sharing the Knowledge” - International CIDOC
CRM Symposium. March 2003. Washington DC.
All web references visited on 02-05-2007.
</reference>
<page confidence="0.999184">
48
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.493786">
<title confidence="0.99801">Cultural Heritage Digital Resources: from Extraction to Querying</title>
<author confidence="0.988193">Michel</author>
<affiliation confidence="0.829127666666667">Natural Language Technology University of Umited</affiliation>
<email confidence="0.9817">M.Genereux@brighton.ac.uk</email>
<abstract confidence="0.99857048">This article presents a method to extract and query Cultural Heritage (CH) textual digital resources. The extraction and querying phases are linked by a common ontological representation (CIDOC-CRM). A transport format (RDF) allows the ontology to be queried in a suitable query language (SPARQL), on top of which an interface makes it possible to formulate queries in Natural Language (NL). The extraction phase exploits the propositional nature of the ontology. The query interface is based on the Generate and Select principle, where suitable queries are match the user input, only for the most sesimilar candidate to be In the process we evaluate data extracted from the description of a medieval city (Wolfenb¨uttel), transform and develop two methods of computing similarity between sentences based on WordNet. Experiments are described that compare the pros and cons of the similarity measures and evaluate them.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>I ANDROUTSOPOULOS</author>
<author>G RITCHIE</author>
<author>P THANISCH</author>
</authors>
<title>Natural language interfaces to databases - an introduction.</title>
<date>1995</date>
<journal>Journal of Language Engineering,</journal>
<volume>1</volume>
<issue>1</issue>
<pages>29</pages>
<marker>ANDROUTSOPOULOS, RITCHIE, THANISCH, 1995</marker>
<rawString>ANDROUTSOPOULOS I., RITCHIE G., THANISCH P. (1995). Natural language interfaces to databases - an introduction. Journal of Language Engineering, 1(1), 29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A BUDANITSKY</author>
<author>G HIRST</author>
</authors>
<title>Semantic distance in wordnet : an experimental, applicationoriented evaluation offive measures.</title>
<date>2001</date>
<booktitle>In NAACL 2001 Workshop on WordNet and Other Lexical Resources,</booktitle>
<location>Pittsburgh.</location>
<marker>BUDANITSKY, HIRST, 2001</marker>
<rawString>BUDANITSKY A., HIRST G. (2001). Semantic distance in wordnet : an experimental, applicationoriented evaluation offive measures. In NAACL 2001 Workshop on WordNet and Other Lexical Resources, Pittsburgh.</rawString>
</citation>
<citation valid="false">
<authors>
<author>S</author>
</authors>
<title>Question answering from frequently asked question files -experiences with the faq finder system.</title>
<journal>AI Magazine,</journal>
<volume>18</volume>
<issue>2</issue>
<pages>57</pages>
<marker>S, </marker>
<rawString>BURKE R.D., HAMMOND K.J., KULYUKIN V., LYTINEN S.L., TOMURO N., SCHOENBERG. S. Question answering from frequently asked question files -experiences with the faq finder system. AI Magazine, 18(2), 57.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K W CHURCH</author>
<author>P HANKS</author>
</authors>
<title>Word association norms, mutual information, and lexicography.</title>
<date>1989</date>
<booktitle>In Proc. of the 27th. Annual Meeting of the ACL Vanvouver,</booktitle>
<pages>76--83</pages>
<location>B.V.,</location>
<marker>CHURCH, HANKS, 1989</marker>
<rawString>CHURCH K.W., HANKS P. (1989) Word association norms, mutual information, and lexicography. In Proc. of the 27th. Annual Meeting of the ACL Vanvouver, B.V., 1989), pp. 76-83.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M CRESCIOLI</author>
<author>A D’ANDREA</author>
<author>F NICCOLUCCI</author>
</authors>
<title>XML Encoding of Archaeological Unstructured Data.</title>
<date>2002</date>
<booktitle>Archaeological Informatics : Pushing the envelope. In Proc. of the 29th CAA Conference, Gotland April 2001, BAR International Series 1016,</booktitle>
<pages>267--275</pages>
<editor>In G. Burenhault (ed.),</editor>
<location>Oxford</location>
<marker>CRESCIOLI, D’ANDREA, NICCOLUCCI, 2002</marker>
<rawString>CRESCIOLI M., D’ANDREA A., NICCOLUCCI F. (2002). XML Encoding of Archaeological Unstructured Data. In G. Burenhault (ed.), Archaeological Informatics : Pushing the envelope. In Proc. of the 29th CAA Conference, Gotland April 2001, BAR International Series 1016, Oxford 2002, 267-275.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I DAGAN</author>
<author>O GLICKMAN</author>
<author>B MAGNINI</author>
</authors>
<title>The PASCAL Recognising Textual Entailment Challenge.</title>
<date>2006</date>
<journal>Lecture Notes in Computer Science,</journal>
<volume>3944</volume>
<pages>177--190</pages>
<marker>DAGAN, GLICKMAN, MAGNINI, 2006</marker>
<rawString>DAGAN I., GLICKMAN O., MAGNINI B. (2006). The PASCAL Recognising Textual Entailment Challenge. Lecture Notes in Computer Science, Volume 3944, Jan 2006, Pages 177 - 190.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M DOERR</author>
</authors>
<title>The CIDOC CRM, an Ontological Approach to Schema Heterogeneity. Semantic Interoperability and Integration.</title>
<date>2005</date>
<booktitle>Dagstuhl Seminar Proceedings,</booktitle>
<pages>1862--4405</pages>
<location>Germany.</location>
<contexts>
<context position="1198" citStr="DOERR, 2005" startWordPosition="178" endWordPosition="179">extraction phase exploits the propositional nature of the ontology. The query interface is based on the Generate and Select principle, where potentially suitable queries are generated to match the user input, only for the most semantically similar candidate to be selected. In the process we evaluate data extracted from the description of a medieval city (Wolfenb¨uttel), transform and develop two methods of computing similarity between sentences based on WordNet. Experiments are described that compare the pros and cons of the similarity measures and evaluate them. 1 Introduction The CIDOC-CRM (DOERR, 2005) ontology is an ISO standard created to describe in a formal language the explicit and implicit concepts and relations underlying the documentation produced in CH. The ontology aims at accommodating a wide variety of data from the CH domain, but its sheer complexity may make it difficult for non-experts to learn it quickly, let alone use it efficiently. For others, it may even be simpler to find a way to translate automatically their data from the storage mechanism already in place into CIDOC-CRM. For practitioners unfamiliar with strict formalisms, it may be more natural to describe collectio</context>
<context position="2433" citStr="DOERR, 2005" startWordPosition="381" endWordPosition="382">(e.g. English), and there is already an unprecedented wealth of information available on-line in natural language for almost anything, including CH. Wouldn’t it be practical to be able to describe a collection of artifacts in plain English, with little or no knowledge of the CIDOC-CRM formalism, and let language technology take over and produce a CIDOC-CRM database? The principle behind that idea is based on the observation that the building blocks of the CIDOC-CRM ontology, the triples, have a predicative nature, which is structurally consistent with the way many natural languages are built (DOERR, 2005): The domain class is analogous to the grammatical subject of the phrase for which the property is analogous to the verb. Property names in the CRM are designed to be semantically meaningful and grammatically correct when read from domain to range. In addition, the inverse property name, normally given in parentheses, is also designed to be semantically meaningful and grammatically correct when read from range to domain. A triple is defined as: DOMAIN PROPERTY RANGE 41 Proceedings of the Workshop on Language Technology for Cultural Heritage Data (LaTeCH 2007), pages 41–48, Prague, 28 June 2007</context>
</contexts>
<marker>DOERR, 2005</marker>
<rawString>DOERR M. (2005) The CIDOC CRM, an Ontological Approach to Schema Heterogeneity. Semantic Interoperability and Integration. Dagstuhl Seminar Proceedings, pp. 1862-4405. Internationales Begegnungs- und Forschungszentrum fuer Informatik (IBFI), Schloss Dagstuhl, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S HERMON</author>
<author>F NICCOLUCCI</author>
</authors>
<title>The Impact of Web-shared Knowledge on Archaeological Scientific Research.</title>
<date>2000</date>
<booktitle>Proc. of Intl CRIS 2000 Conf.,</booktitle>
<location>Helsinki, Finland,</location>
<marker>HERMON, NICCOLUCCI, 2000</marker>
<rawString>HERMON S., NICCOLUCCI F. (2000). The Impact of Web-shared Knowledge on Archaeological Scientific Research. Proc. of Intl CRIS 2000 Conf., Helsinki, Finland, 2000.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D KAUCHAK</author>
<author>R BARZILAY</author>
</authors>
<title>Paraphrasing for Automatic Evaluation.</title>
<date>2006</date>
<booktitle>In Proc. of NAACL/HLT,</booktitle>
<marker>KAUCHAK, BARZILAY, 2006</marker>
<rawString>KAUCHAK D., BARZILAY R. (2006). Paraphrasing for Automatic Evaluation. In Proc. of NAACL/HLT, 2006.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y LI</author>
<author>H YANG</author>
<author>H JAGADISH</author>
</authors>
<title>Constructing a generic natural language interface for an xml database.</title>
<date>2006</date>
<booktitle>International Conference on Extending Database Technology</booktitle>
<marker>LI, YANG, JAGADISH, 2006</marker>
<rawString>LI Y., YANG H., JAGADISH H. (2006). Constructing a generic natural language interface for an xml database. International Conference on Extending Database Technology</rawString>
</citation>
<citation valid="false">
<authors>
<author>T PEDERSEN</author>
</authors>
<title>PATWARDHAN S.,MICHELIZZI J.(2004). Wordnet::Similarity - Measuring the Relatedness of Concepts.</title>
<booktitle>In Nineteenth National Conference on Artificial Intelligence (AAAI-04),</booktitle>
<institution>(Intelligent Systems Demonstration).</institution>
<location>San Jose, CA.</location>
<marker>PEDERSEN, </marker>
<rawString>PEDERSEN T., PATWARDHAN S.,MICHELIZZI J.(2004). Wordnet::Similarity - Measuring the Relatedness of Concepts. In Nineteenth National Conference on Artificial Intelligence (AAAI-04), San Jose, CA. (Intelligent Systems Demonstration).</rawString>
</citation>
<citation valid="true">
<authors>
<author>C QUIRK</author>
<author>C BROCKETT</author>
<author>W B DOLAN</author>
</authors>
<title>Monolingual Machine Translation for Paraphrase Generation.</title>
<date>2004</date>
<booktitle>In Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<location>Barcelona</location>
<marker>QUIRK, BROCKETT, DOLAN, 2004</marker>
<rawString>QUIRK C., BROCKETT C., DOLAN W.B. (2004). Monolingual Machine Translation for Paraphrase Generation. In Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing, Barcelona Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E S RISTAD</author>
<author>P N YIANILOS</author>
</authors>
<title>Learning stringedit distance.</title>
<date>1998</date>
<journal>IEEE Transactions on Pattern Analysis and Machine Intelligence,</journal>
<volume>20</volume>
<issue>5</issue>
<pages>522</pages>
<marker>RISTAD, YIANILOS, 1998</marker>
<rawString>RISTAD E.S., YIANILOS P. N. (1998). Learning stringedit distance. IEEE Transactions on Pattern Analysis and Machine Intelligence, 20(5), 522.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A SCHUTZ</author>
<author>P BUITELAR</author>
</authors>
<title>RelExt: A Tool for Relation Extraction in Ontology Extension. In:</title>
<date>2005</date>
<booktitle>Proc. of the 4th International Semantic Web Conference,</booktitle>
<location>Galway, Ireland,</location>
<marker>SCHUTZ, BUITELAR, 2005</marker>
<rawString>SCHUTZ A., BUITELAR P. (2005). RelExt: A Tool for Relation Extraction in Ontology Extension. In: Proc. of the 4th International Semantic Web Conference, Galway, Ireland, Nov. 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A SHETH</author>
</authors>
<title>Capturing and applying existing knowledge to semantic applications.</title>
<date>2003</date>
<booktitle>Invited Talk ”Sharing the Knowledge” - International CIDOC CRM Symposium.</booktitle>
<location>Washington DC.</location>
<contexts>
<context position="3880" citStr="SHETH, 2003" startWordPosition="622" endWordPosition="623">alues of a property. Through inheritance, subclasses of the range class can also be values for that property. Example 1 is somewhat artificial, but it illustrates how triples can be extracted from natural language, where entities E48 and E53 are Place Name and Place respectively, while P1 is the property identify. (1) Rome identifies the capital ofItaly. DOM E41 PROP P1 RANGE E1 E48 P1 E53 ‘Rome identifies the capital of Italy.’ The task of the natural language processing tool is to map relevant parts of texts to entities and properties in such a way that triples can be constructed (see also (SHETH, 2003; SCHUTZ, 2005; DAGAN, 2006)). In a nutshell, the Noun Clauses (NC) Rome and the capital of Italy are mapped to Entity 48 and Entity 53, themselves subclasses of the domain E41 and range E1 respectively, while the Verb Clause (VC) identifies is mapped to Property P1. On the other hand, a natural language interface (ANDROUTSOPOULOS, 1995) to query structurally complex and semantically intertwined data such as those that can be found in the archaeological domain can lighten a great deal the tasks of browsing and searching. This state of affairs is even more true for people not familiar with form</context>
</contexts>
<marker>SHETH, 2003</marker>
<rawString>SHETH A. (2003) Capturing and applying existing knowledge to semantic applications. Invited Talk ”Sharing the Knowledge” - International CIDOC CRM Symposium. March 2003. Washington DC.</rawString>
</citation>
<citation valid="false">
<title>All web references visited on</title>
<pages>02--05</pages>
<marker></marker>
<rawString>All web references visited on 02-05-2007.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>