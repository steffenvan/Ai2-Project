<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.679331">
DESIGNER DEFINITES IN LOGICAL FORM
</title>
<author confidence="0.92622">
Mary P. Harper*
</author>
<affiliation confidence="0.984216">
School of Electrical Engineering
Purdue University
</affiliation>
<address confidence="0.429527">
West Lafayette, IN 47907
</address>
<sectionHeader confidence="0.95866" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999402">
In this paper, we represent singular definite noun
phrases as functions in logical form. This represen-
tation is designed to model the behaviors of both
anaphoric and non-anaphoric, distributive definites.
It is also designed to obey the computational con-
straints suggested in Harper [Har88]. Our initial
representation of a definite places an upper bound
on its behavior given its structure and location in
a sentence. Later, when ambiguity is resolved, the
precise behavior of the definite is pinpointed.
</bodyText>
<sectionHeader confidence="0.994508" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.943587106382979">
A goal of natural language research is to provide
a computer model capable of understanding En-
glish sentences. One approach to constructing this
model requires the generation of an unambiguous
internal representation for each sentence before at-
tempting to represent subsequent sentences. Natu-
ral language systems that attempt to guess the in-
tended meaning of a sentence without considering
subsequent sentences usually make no provision for
recovery from incorrect guesses since that would re-
quire storing information about the ambiguity of the
sentence. Hence, this approach may require the pro-
cessing of several sentences before enough informa-
tion is available to determine the intended meaning
of the sentence being represented. However, in or-
der to make the inferences necessary to resolve some
ambiguities, some internal representation is needed
for both the current sentence as well as subsequent
sentences. A more powerful approach is to leave
the ambiguity unresolved in an intermediate repre-
sentation until the necessary information has been
processed. We adopt this second approach, which
advocates mapping parsed sentences into an inter-
mediate level of representation called logical form
*This paper contains results from the author&apos;s the-
sis in the Computer Science Department at Brown -Uni-
versity. The paper has benefited from discussions with
Eugene Charniak, Kate Sanders, Leora Morgenstern,
Torn Dean, Paul Harper and Frederic Evans. The work
was supported in part by the NSF grants IST 8416034
and 1ST 8515005, ONR grant N00014-79-C-0529, and
AFOSR grant F49620-88-c-0132.
[SP84; A1187; Har88]. Logical form partially spec-
ifies the meaning of a sentence based on syntactic
and sentence-level information, without considering
the effect of pragmatics and context. Later, as more
information becomes available, the representation of
the sentence is incrementally updated until all am-
biguities have been resolved.
In the literature, two sources of ambiguity have
been handled using logical form, quantifier scop-
ing (see [SP84; A1187]) and pronoun resolution (see
[Har88; Har90]). In this paper, we will discuss the
use of logical form for handling the ambiguities in
the meanings of singular definite noun phrases. But
first, it will be useful to briefly review the logical
form for pronouns.
</bodyText>
<sectionHeader confidence="0.715545" genericHeader="method">
2 Pronouns in Logical Form
</sectionHeader>
<bodyText confidence="0.999810041666667">
Pronouns are a source of underspecification in a sen-
tence which can be handled in logical form. The
antecedent of a pronoun cannot be immediately de-
termined when the sentence containing it is parsed.
Contextual and syntactic constraints combine to al-
low a listener/reader to decide on the antecedent for
a certain pronoun. In Harper [Har88; Har90], we
devised a logical form representation for pronouns.
This representation divides the process of deter-
mining the meaning of a pronoun into two phases.
First, the representation for the pronoun is deter-
mined using only syntactic and sentence-levet infor-
mation. Then, once the antecedent is determined,
a feat which often requires pragmatic and contex-
tual information available in subsequent sentences,
we provide a way to update our logical form to in-
dicate this information.
Our logical form representation for pronouns was
designed with two goals in mind. First, we required
our representation to be compatible with the goal of
devising a computational model of language com-
prehension. In fact, we defined three constraints
for using logical form in a computational framework
(from [Har88] and [Har90]).
</bodyText>
<listItem confidence="0.86711375">
1. Compactness Constraint: Logical form
should compactly represent ambiguity.
2. Modularity Constraint: Logical form
should be initially computable from syntax
</listItem>
<page confidence="0.998572">
62
</page>
<bodyText confidence="0.99919325">
and local (sentence-level) semantics. In par-
ticular, logical form should not be dependent
on pragmatics, which requires inference and
hence, internal representation.
</bodyText>
<sectionHeader confidence="0.866967" genericHeader="method">
3. Formal Consistency Constraint: Further
</sectionHeader>
<bodyText confidence="0.993501236842105">
processing of logical form should only disam-
biguate or further specify logical form. Logical
form has a meaning. Any further processing
must respect that meaning.
First, the compactness constraint captures the spirit
of logical form as presented by Allen [A1187]. Sec-
ond, if the modularity constraint is violated, the
value of computing logical form is lost. Finally, the
formal consistency constraint keeps us honest. Ini-
tially, logical form provides a composite representa-
tion for a sentence. However, as more information
becomes available, then the meaning of the sentence
will be incrementally updated until all ambiguity is
resolved. We cannot modify logical form in any way
that contradicts its original meaning.
The second goal of our approach was to accu-
rately model the linguistic behavior of pronouns
while obeying our logical form constraints. Since
pronouns have a range of behaviors between vari-
ables on the one hand and constants on the other,
the initial logical form for a pronoun must be com-
patible with both extremes (to model the range of
pronoun behaviors and to be consistent with the
compactness and formal consistency constraints).
Hence, we provided a composite representation for
a pronoun, one compatible with any possible an-
tecedent it can have given its position in a. sentence.
Pronouns in a sentence are represented as part of
the process of providing logical form for that sen-
tence. We enumerate the important features of a
sentence&apos;s representation.
1. A sentence is represented as a predicate-
argument structure, with subjects lambda
abstracted to handle verb phrase ellipsis.
Lambda operators are necessary for handling
examples of verb phrase ellipsis. The second
sentence in Example 1 is a sentence with verb
phrase ellipsis (also called an elided sentence).
</bodyText>
<figure confidence="0.585894833333333">
Example 1
Trigger Sentence: Fred, loves his wife.
Elided Sentence: George/ does too.
Meanings:
a. George loves Fred&apos;s wife.
b. George loves George&apos;s wife.
</figure>
<bodyText confidence="0.841365454545455">
Assuming that the meaning of the elided verb
phrase is inherited from the representation of
the trigger sentence&apos;s verb phrase, then the the
pronoun his in the trigger verb phrase must be
able to refer indirectly to the subject Fred in
order for the sloppy reading of the elided sen-
tence (i.e., George loves George&apos;s wife) to be
available. All sentences are potentially trig-
ger sentences; hence, we lambda abstract the
syntactic subjects of all sentences (following
Webber [Web78] and Sag [Sag76]).
</bodyText>
<listItem confidence="0.9806971">
2. The logical roles of all noun phrases in a sen-
tence are identified by position in logical form
(logical subject first, logical object second, log-
ical indirect object third, etc.).
3. We represent universal noun phrases as univer-
sally quantified (and restricted) variables and
indefinite noun phrases as existentially quanti-
fied (and restricted) variables (following Web-
ber [Web78]).
4. Quantifier scope ambiguity is handled in the
</listItem>
<bodyText confidence="0.973569076923077">
same way as in Allen [A1187]. Initially, we place
quantifiers in the predicate-argument. struc-
ture (except for subjects). Later, when infor-
mation becomes available for making scoping
decisions, quantifier scoping is indicated (dis-
cussed in Harper [Har90]).
A composite representation for a pronoun is pro-
vided once the parse tree for the sentence contain-
ing it is available. When the parse tree is provided,
we can determine all of the quantified noun phrases
that are possible antecedents for a pronoun in the
sentence (see Reinhart [R.ei83]). Hence, we repre-
sent a pronoun initially as a function of all of the
variables associated with noun phrases that are pos-
sible antecedents for or distribute over possible an-
tecedents for the pronoun. To handle verb phrase
ellipsis, the argument list must also include the
lambda variables corresponding to syntactic sub-
jects. A pronoun is represented as a uniquely-named
function of all lambda variables (associated with
subjects) which have scope over it in logical form,
any non-subject quantified variables corresponding
to noun phrases that c-command the pronoun (fol-
lowing Reinhart [Rei83]), and any quantified noun
phrase not embedded in a relative clause but con-
tained in a noun phrase that c-commands the pro-
noun. The lambda variable of a quantified subject
subsumes the subject&apos;s quantified variable because
the lambda operator abstracts the quantified vari-
able. Our logical form representation for pronouns
summarizes all of the operators that can directly
affect their final meanings. Hence, the representa-
tion is useful for limiting the possible antecedents
of a pronoun. For example, a pronoun function can
take a universal noun phrase as its antecedent if and
only if the universal variable (or the variable corre-
sponding to the lambda operator that abstracts the
universal variable) is included in the function&apos;s ar-
gument list.
</bodyText>
<page confidence="0.999016">
63
</page>
<bodyText confidence="0.998794">
Consider a simple example to demonstrate the
initial representation of the following sentence.
</bodyText>
<equation confidence="0.9681542">
Example 2
Every teacher gave every student his paper.
Vx: (teacher x)
x, )(y) (give y (paper-of (his: y z))
[Vz: (student z) z])
</equation>
<bodyText confidence="0.949400392857143">
The syntactic subject of the sentence is univer-
sally quantified, and the restriction on the quan-
tifier is indicated after the colon&apos;. The syntac-
tic subject of the sentence is abstracted from the
predicate-argument structure representing the sen-
tence. Hence, the verb phrase, represented as a
lambda function, is separable from the subject. The
subject&apos;s position is maintained in the lambda func-
tion by the lambda variable. Notice that the defi-
nite noun phrase his paper is represented here as
a function of the pronoun. Shortly, we will pro-
vide a more general representation for definite noun
phrases. Notice that the pronoun his is represented
as a function of subject&apos;s lambda variable plus the
universal variable corresponding to every student.
This list of arguments corresponds to the opera-
tors for noun phrases that can be antecedents for
the pronoun given the syntactic constraints or can
distribute over possible definite antecedents. No-
tice that the subject&apos;s lambda variable subsumes the
subject&apos;s universal variable. The reader should note
that quantifier scoping is not indicated in our initial
logical form (following Allen [A11871).
The representation for the pronoun in 2 is a
composite representation, that is it indicates all of
the operators that can affect its final meaning. In
fact, before the final meaning of the sentence can
be given, the antecedent for the pronoun must be
determined and made explicit in our logical form.
Though the process of determining antecedents for
pronouns is beyond the scope of this paper, when a
pronoun&apos;s antecedent is known (requiring additional
pragmatic information), the logical form containing
it must be updated in a way compatible with its
initial representation (because of the formal consis-
tency constraint). Suppose that we decide that the
antecedent for his in example 2 is every studerti,
then the logical form is be modified as shown in 3.
1The colon following the quantifier is syntactic sugar
which expands the restriction differently depending on
the type of quantifier. If a sentence is represented as 3x:
(R x) (P x), then the meaning is 9x (and (Ft x) (P x)).
If a sentence is represented as Vx: x) (P x), then it
is expanded as Vx (if (ft x) (P x)).
Example 3
Every teacher gave every students hiss paper.
Vx: (teacher x)
x, A(y) (and (give y (paper-ot (hisi y z))
EVz: (student z) z])
(--= (his: y z) z))
This update is compatible with the pronoun&apos;s initial
representation. We are indicating that the function
(his, y z) is really the identity function on 2.. In
Harper tHar88], we fully specify how logical form
is updated when a pronoun&apos;s antecedent has been
determined.
</bodyText>
<sectionHeader confidence="0.715785" genericHeader="method">
3 Definites: Behaviors to
Cover
</sectionHeader>
<bodyText confidence="0.987708527777778">
In the rest of this paper, we develop our logical form
representation for singular definite noun phrases.
As for pronouns, we wish to obey our computational
constraints while providing a good model of definite
behavior. Consider the behaviors of definites we
wish to cover.
Like pronouns, definite noun phrases can be
anaphoric. Anaphoric definites can either depend
on linguistic antecedents (in either the same or pre-
vious sentences) or can denote salient individuals in
the environment of the speaker/hearer (also called
deictic use). Because of our logical form constraints,
in particular because of the compactness and for-
mal consistency constraints, the initial representa-
tion for a definite noun phrase must be compatible
with the representations of its possible antecedents.
Definite noun phrases can have intrasentential an-
tecedents as in example 4.
Example 4
Every boy, saw (his, dog) before the beast)
saw him,.
In this case, the definite noun phrase acts like a
universally quantified variable (adopting the behav-
ior of its antecedent in much the same way as a
pronoun).
Definites, unlike pronouns, can also have a com-
plex syntactic structure. Pronouns and other noun
phrases can be attached to a definite noun phrase
in different ways. First, consider the effect em-
bedded pronouns have on definite noun phrases.
While simple definites (which are not intrasentential
anaphors) seem to act like constants when they oc-
cur in a sentence with a universal noun phrase (e.g.,
5a), definite noun phrases with embedded pronouns
often cannot be described as constants (e.g., 5b).
Example 5
</bodyText>
<listItem confidence="0.4377275">
a. Every boy loves the woman.
b. Every boy loves his mother.
</listItem>
<page confidence="0.997182">
64
</page>
<bodyText confidence="0.953232423076923">
The meaning of his mother depends on how the pro-
noun is resolved. If the antecedent for his is found
in another sentence, then his mother could be rep-
resented as a constant. In contrast, if every boy is
the antecedent for his, then the universal quanti-
fier corresponding to every boy distributes over his
mother. When a quantifier distributes over a defi-
nite, the definite changes what it denotes based on
the values assigned to the quantified variable.
Embedded quantified noun phrases can also dis-
tribute over a definite noun phrase, preventing it
from acting like a. constant. For example, the uni-
versal possessive noun phrase distributes over the
definite in the following sentence. The definite in
this case cannot be described as a constant.
Example 6
George loves every man&apos;s wife.
However, not all embedded quantified noun phrases
can distribute over a definite. When quantified noun
phrases are embedded in relative clauses attached
to a definite noun phrase, they cannot distribute
over that noun phrase. This constraint (related to
the complex noun phrase constraint, first noted by
[Ros671) prohibits quantifiers from moving out of a
relative clause attached to a noun phrase. For ex-
ample:
</bodyText>
<equation confidence="0.316004">
Example 7
</equation>
<bodyText confidence="0.995412217391305">
George saw the mother who cares for every boy.
In this case, the mother who cares for every boy de-
notes one specific mother. In such cases, the univer-
sal cannot distribute over the definite it is attached
to or have scope over other quantified noun phrases
outside of the relative clause.
Thus, the meaning of a definite noun phrase is
affected by its structure, whether it contains pro-
nouns, and whether or not it is used anaphorically.
If used an.aphorically, it should behave in a way con-
sistent with its antecedent, just like a pronoun. If it
contains pronouns, then its meaning should depend
on the antecedents chosen for those pronouns. If
it contains embedded quantified noun phrases (not
subject to the relative clause island constraint), then
those embedded noun phrases may distribute over
the definite.
In the remainder of this paper, we introduce our
logical form representation for definites. We discuss
the initial representation of definites, which must be
able to encompass all of the above definite behav-
iors. We also describe the ways this logical form is
updated once ambiguity is resolved.
</bodyText>
<sectionHeader confidence="0.9219495" genericHeader="method">
4 Our Representation of
Definite Noun Phrases
</sectionHeader>
<bodyText confidence="0.999962729166667">
In this section, we develop a representation for def-
Mites in logical form. The logical form represen-
tation for a definite noun phrase presents a chal-
lenge to our approach. To he consistent with the
modularity constraint, we must provide an initial
representation for a definite noun phrase that can
be generated before we know the antecedents for
any embedded pronouns or before we know the def-
inite&apos;s antecedent (if it is anaphoric). To obey the
compactness and formal consistency constraints, we
must initially represent a definite so it is consistent
with all the ways it can possibly act. As more in-
formation becomes available about. the meaning of
the definite noun phrase, we must be able to update
logical form in a way compatible with its initial rep-
resentation. Our logical form for a definite must be
a composite representation compatible with its pos-
sible behaviors. We cannot provide different initial
representations for a definite depending on use, oth-
erwise we violate the compactness constraint. Ad-
ditionally, unless our initial representation is com-
patible with all possible behaviors, we could violate
the formal consistency constraint when we update
logical form.
We represent a definite as a named function of
all of the variables associated with operators that
can affect its meaning. This representation satis-
fies our constraints by combining the advantages of
definite descriptions (discussed in Harper [Har90])
with the functional notation we introduced to rep-
resent pronouns. Each definite function is defined
by a unique name (i.e., def with a unique integer ap-
pended to it), a list of arguments, and a restriction.
The restriction of a definite function is derived from
the words following the determiner. The argument
list of the function consists of the variables associ-
ated with lambda operators that have scope over its
position, any variables associated with non-subject
quantified noun phrases that could bind a pronoun
in that position, and any quantified variables asso-
ciated with embedded quantified noun phrases that
are not embedded in a relative clause attached to
a noun phrase&apos;. Because a definite functicai has a
unique name, we can differentiate two occurrences
of the same definite noun phrase, in contrast to def-
inite descriptions [Rus711 (for more information on
the shortcomings of definite descriptions and defi-
nite quantifiers, see [Har90; Hin85]).
</bodyText>
<footnote confidence="0.998626333333333">
2We should also add that a sententiaIly attached PP
with a quantified object can quantify over a definite as
well (as in, In every car, the driver turned the steering
wheel. This sentence is tricky because we seem to be
attaching the PP to both of the NPs while leaving the
quantifier to distribute over both definites).
</footnote>
<page confidence="0.999291">
65
</page>
<bodyText confidence="0.999571666666667">
Consider the initial representation of a sentence
containing a definite noun phrase before the an-
tecedent of an embedded pronoun is known:
</bodyText>
<equation confidence="0.945979222222222">
Example 8
Every man showed every boy his picture.
Vx: (man x)
x, A(y) (show
((clef&apos; y z) I
(and (picture (def y z))
(possess (his2 y z)
(def y z))))
[Vz: (boy z) z])
</equation>
<bodyText confidence="0.999995128205128">
The representation of this sentence is very similar
to example 2 except for the representation of the
definite noun phrase. Notice that his picture is rep-
resented as a function called deft. The restriction
of the function is the conjunction of statements fol-
lowing the vertical bar. The vertical bar is syntactic
sugar and should be expanded like the colon in a.n
existential&apos;s restriction (but not until the definite&apos;s
final meaning is determined). The argument list of
the function consists of the variables y and .z3. No-
tice that the pronoun his is also represented as a
function of y and z. Anything that can affect the
pronoun his picture will also affect the meaning of
the definite noun phrase.
Because a definite function is a composite rep-
resentation for all possible meanings of a definite
noun phrase, we must restrict the function in cer-
tain ways before a final interpretation for the sen-
tence is available (or before deriving the meaning of
an elided sentence from a trigger verb phrase con-
taining a definite function, as discussed in [Har90]).
The initial representation of a definite places an up-
per and lower bound on the definite&apos;s behavior. The
lower bound is a constant, while the upper bound
is the initial representation. These bounds must be
tightened to settle on a final interpretation for the
definite. We provide two methods to pinpoint a def-
iMte function. If the definite is used anaphorically,
we equate the definite function with some value con-
sistent with its antecedent. Otherwise, we apply a
constraint that limits the argument list of the func-
tion to include only necessary variables.
If a definite is used anaphorically, it can be
equated with some value depending on its an-
tecedent (just like pronoun functions in [Har88]).
For example, if the antecedent of a definite noun
phrase occurs in another sentence, we would equate
the definite function with a discourse entity. An-
tecedents for definite noun phrases can also occur
</bodyText>
<footnote confidence="0.9019475">
3As in the representation of pronouns, we omit the
variable x from the argument list because the lambda
operator for y abstracts x, so y is the more general
argument.
</footnote>
<bodyText confidence="0.998312166666667">
within the same sentence. An intrasentential refer-
ence to an antecedent requires the definite function
to have an argument list compatible with the rep-
resentation of the antecedent4. Consider the initial
representation of a sentence containing a potentially
anaphoric definite shown in 9.
</bodyText>
<equation confidence="0.855547857142857">
Example 9
Every man told his mother&apos;s psychiatrist about
the old lady&apos;s diary.
Vx: (man xi
x, A(y)(tell
((defi y) 1
(and (psychiatrist (defi y))
(possess
((def2 y) I
(and (mother (def2 y))
(possess
(his3 y)
(def2 y))))
(defi y))))
(about
((defi y) I
(and (diary (def4 y))
(possess
((def5 y) I
(old-lady (def5 50))
(def4 y))))))
</equation>
<bodyText confidence="0.8631775">
Suppose the antecedent for his is every man and
the antecedent for the old lady is his another. Then
we can augment the logical form, as shown in 10.
4It is unusual for a definite to have an antecedent
corresponding to one of its arguments unless the vari-
able corresponds to a quantified noun phrase which is
not embedded in a relative clause but is embedded in
another noun phrase. When the antecedent is repre-
sented as a function, its argument list must be a subset
of (or it must be possible to limit it to be a subset of)
the arguments of the anaphoric definite for the equality
to be asserted.
</bodyText>
<page confidence="0.749763">
66
</page>
<equation confidence="0.899955">
Example 10
Every man/ told (his,2 mothers)i psychiatrist
about the old lady&apos;s, diary.
Vx: (man x)
x, A(y)(tell
((deli Y) 1
(and (psychiatrist (defi y))
(possess
((def2 y) I
(and (mother (def2 y))
(possess (his3 y)
(def2 y))
(or (= (his3 y) y)
(= (his3 y) x))))
(deli y))))
(about
((def.&apos; y)
(and (diary (def4 y))
(possess
((defy y) I
(old-lady (defy y)))
(def4 y))
(= (defy y) (deli y))))))
</equation>
<bodyText confidence="0.999978672413793">
This example would be very difficult for an ap-
proach that uses either definite descriptions or def-
inite quantifiers. Either approach would represent
the old lady in a way equivalent to replacing the
representation by a constant, because of uniqueness.
Hence, any update of those representations to indi-
cate the anaphora would violate formal consistency.
Our approach, however, can easily handle the ex-
ample.
The other way to pinpoint a definite function ap-
plies once antecedents for embedded pronouns are
known and once we know whether quantifiers cor-
responding to embedded quantified noun phrases
(not embedded in relative clauses attached to noun
phrases) should distribute over the definite. Con-
sider the initial representation of the sentence in 8.
The definite function def.&apos; is a function of all of the
variables that can potentially cause it to change.
However, once we know the antecedent for its em-
bedded pronoun, the argument list of the function
should be limited. To limit the argument list, we
make use of the insights gained from definite de-
scriptions. Because of the uniqueness assumption,
any definite description that does not contain vari-
ables bound by outside quantifiers acts like a con-
stant. On the other hand, if a pronoun embedded
in a definite description adopts the behavior of a
universally quantified variable, then the definite de-
scription will change what it denotes depending on
the instantiation of that variable. Hence, we con-
clude that a definite function should only change
as a function of those variables bound by operators
outside of its restriction (ignoring its own argument
list).
Once antecedent and embedded quantifier infor-
mation is available, we can limit the argument list to
precisely those arguments that are bound by opera-
tors outside of the restriction. If a pronoun function
in the restriction of the definite function is equated
with a variable bound outside its restriction or with
another function which must be a function of a cer-
tain variable (based on its own restriction), then
the argument must be retained. Additionally, other
arguments that are free in the restriction must be
retained (these correspond to embedded quantified
noun phrases whose quantifiers are moved out of
the restriction). Once we know the necessary ar-
guments, we replace the original function by a new
function over those arguments. By using this argu-
ment reduction constraint, we limit the initial com-
posite representation of a definite noun phrase to its
final meaning (given pronoun and quantifier infor-
mation).
Consider how we would limit the function
(defi y z) from example 8 following pronoun res-
olution. If we decide that the antecedent of h.is is
every boy, then we would update the logical form,
as shown in 11,
</bodyText>
<equation confidence="0.9891259">
Example 11
Every man showed every boy, his picture.
Vx: (man x)
IC, My) (show y
((clefi y z) I
(and (picture (deli y z))
(possess (his2 y z)
(deft y z))
(= (his2 y z) z)))
[Vz: (boy z) z])
</equation>
<bodyText confidence="0.999941">
By using our argument reduction constraint, we can
replace the function (clefi y z) by a function of x
(since (his2 y z) is replaced with the variable r), as
shown in 12.
</bodyText>
<equation confidence="0.937850181818182">
Example 12
Every man showed every boy, his, picture.
Vx: (man x)
x, A(y)(and (show
((deli y z) I
(and (picture (deft y z))
(possess (his2 y z)
(deli y z))
(= (his2 y z) z)))
[iz: (boy z) z])
(= (deft y z) (def 3 z)))
</equation>
<bodyText confidence="0.9499284">
Equality here is equivalent to replacing the first
function with the second value. Because of this fact
and because of the meaning of the vertical bar in
the restriction of the function, this representation
can be simplified as shown in 13.
</bodyText>
<page confidence="0.970517">
67
</page>
<equation confidence="0.946819375">
Example 13
Every man showed every boys hiss picture.
Vx: (man x)
x, .1(y) (and (show y
(def3 z)
EVz : (boy z) z3)
(picture (clefs z))
(possess z (defa z)))
</equation>
<bodyText confidence="0.995363384615385">
To handle the readings where his is anaphorically
dependent on other noun phrases, our approach
would be similar.
Our representation of pronouns has several
strengths. First, the representation provides useful
information to a semantic routine concerning possi-
ble intrasentential antecedents for the definite. Ar-
gument lists limit what can be the antecedent along
with other factors like number and gender agree-
ment and antecedent limitations particular to defi-
nites. To demonstrate a strength of this approach,
consider the initial representation of the following
sentence:
</bodyText>
<figure confidence="0.630406266666667">
Example 14
Fred told the teacher who discusses every
student with his mother to record her response,
((clef].) 1 (name (defi) Fred)),
)(x) (tell
((def2 x) I
(and (inst (def2 x) teacher)
(def2 x),
A(y)(discuss
IV(z):
(inst z student) z]
(with
((clefs x y z) I
(and
(inst
</figure>
<equation confidence="0.819152923076923">
(def3 x y a)
mother)
(possess
x y a)
(clefs x y a))))))
[(def2 x),
A(w)(record
((def5 x w) I
(and (inst (clefs x w)
response)
(possess
(here x w)
(def5 x w)))))])
</equation>
<bodyText confidence="0.985243612903226">
Here the meaning of her response depends on the
antecedent for her. What then are legal antecedents
for her in this sentence? Certainly, the teacher is a
fine candidate, but what about his mother. We can-
not tell immediately whether his mother can be the
antecedent for her. If the antecedent for his is every
student, then his mother cannot be the antecedent
for her. This accessibility problem results because
the universal in the relative clause (i.e., every stu-
dent) cannot have scope over her response, hence,
his mother is not a good antecedent for her. Notice
that (hers x w) is not immediately compatible with
the representation for his mother (i.e,, (def3 x y z)).
Before we can assert that his mother is the an-
tecedent for her we must pinpoint the meaning of
that noun phrase, that is, we mast determine the
antecedent for his. Then depending on our choice,
the final meaning of his mother may or may riot be
accessible to the pronoun. Hence, we can explain
why some definites in relative clauses are accessible
to pronouns in the matrix sentence and others are
not. C-command does not accurately predict when
definites are accessible as antecedents for anaphoric
expressions. This is not surprising, given the fact
that the final meaning of a definite determines its
accessibility, and determining this meaning may re-
quire resolving pronouns and scoping ambiguities.
In this paper, we have introduced a composite
representation for definite noun phrases with two
ways to update their meaning as more informa-
tion becomes available. This approach is consistent
with the three computational constraints discussed
in section 2, and also provides a good model of defi-
nite behavior. We refer the reader to Harper [Har90]
for discussion of a wider variety of examples. In
particular; we discuss examples of verb phrase el-
lipsis, Bach-Peters sentences, and definite donkey
sentences [Gea62]. Our approach has been imple-
mented and tested on a wide variety of examples.
The logical form for pronouns and definites is pro-
vided as soon as a parse tree for the sentence is
available. Then, the logical form for the sentence
is incrementally updated until all ambiguities have
been resolved. Logical form is very useful in the
search for pronoun and definite antecedents. For
more on the implementation see [Har90].
One shortcoming of our approach is our inabil-
))ity to provide a single logical form for a sentence
with structural ambiguity. One possible solution to
this problem (which we are currently investigating)
is to store partial logical forms in a parse forest. As
more information is processed this intermediate rep-
resentation will be incrementally updated until the
parse forest is reduced to a single tree containing
&apos;Strictly speaking, universal noun phrases cannot
bind across sentences. However, speakers sometimes al-
low a universal to be the antecedent for a singular pro-
noun outside of its scope. Such pronouns are not usu-
ally understood as giving a bound variable reading. See
Webber fWeb78] for a discussion of this issue. A simi-
lar treatment can apply to definites which change as a
function of a universal.
</bodyText>
<page confidence="0.998003">
68
</page>
<bodyText confidence="0.896764">
one logical form.
</bodyText>
<sectionHeader confidence="0.976103" genericHeader="conclusions">
5 Past Approaches
</sectionHeader>
<bodyText confidence="0.999985086956522">
Our work has benefited from the insights gained
from other approaches to definite noun phrases in
the literature. We considered both definite de-
scriptions introduced by Russell [Rus05] and defi-
nite quantifiers (used by many including [Web83])
for representing definite noun phrases. Neither
representation allows us to handle intrasentential
anaphoric definites while obeying our computational
constraints. However, the in-place definite descrip-
tion is excellent for modeling definite subjects in
verb phrase ellipsis and for capturing the behaviors
of distributive definite noun phrases. On the other
hand, a definite quantifier is not a good represen-
tation for a definite subject in verb phrase ellipsis
(the strict meaning of The cat wants its toy. The dog
does too cannot be provided because quantifiers do
not have scope across sentences). In fact, to make
the definite quantifier a feasible representation, we
would have to make the binding properties of a def-
inite quantifier different than the binding proper-
ties of a universal. Hornstein [Hor84] suggests that
definite quantifiers have different binding properties
than universals. His approach fails to consider how
the process of pinpointing the meaning of a defi-
nite affects its ability to bind a pronoun. For more
discussion of the strengths and weaknesses of these
approaches, see Harper [Har90].
Other approaches to handling definites include
the work of [11ei82; Kam81; Rob87; Kle87; PP88].
Each approach differs from ours both in scope and
emphasis. We build an intermediate meaning for a
sentence using only the constraints dictated by the
syntax and local semantics and incrementally up-
date it as we process contextual information. The
work of Pollack and Periera [PP88] also attempts to
gradually build up a final interpretation of a sen-
tence using their semantic and pragmatic discharge
interpretation rules. However, our representation
of a definite noun phrase locally stores information
about those quantifiers in the sentence that can po-
tentially quantify over it, while Pollack and Periera&apos;s
representation does not. The approaches of {Hei82;
Kam81; Rob87; K1e87] require a large amount of
contextual information before the representation of
a sentence can be given (leading to a violation of
our constraints).
</bodyText>
<sectionHeader confidence="0.997949" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999802365079365">
[A1187] James Allen. Natural Language Understand-
ing. The Benjamin/Cummings Publishing
Company, Menlo Park, CA, 1987,
[Gea62] Peter T. Geach. Reference and Generality.
Cornell University Press, Ithaca, 1962.
[Har88] Mary P. Harper. Representing pronouns in
logical form : Computational constraints and
linguistic evidence. In The Proceedings of the
7th National Meeting of AAAI, 1988.
[Har90] Mary P. Harper. The representation of noun
phrases in logical form. PhD thesis, Brown
University, 1990.
[Hei82] Irene Heim. The Semantics of Definite and In-
definite Noun Phrases. PhD thesis, University
of Massachusetts, 1982.
[Ilin85] laakko Hintikka.. Anaphora and Defiyiitc
Descriptions: Two applications of Game-
Theoretical semantics. D. Reidel Publishing
Company, Boston, 1985.
[lior841 Norbert Hornstein. Logic as Grammar: An
Approach to Meaning in Natural Language.
MIT Press, Cambridge, MA, 1984.
[Kain81] Hans Kamp. A theory of truth and semantic
representation. In Jeroen Groenendijk, Thco
Janssen, and Martin Stokhof, editors, Formal
Methods in the Study of Language, volume I.
Mathernatische Centrum, Amsterdam, 1981.
[Kle87] Ewan Klein. VP ellipsis in DR theory. In
J. Groenenclijk, D. de Jongh, and M. Stokhof,
editors, Studies in Discourse Representation
and the Theory of Generalized Quantifiers.
Faris, Dordrecht, 1987.
[PP88] Martha E. Pollack and Fernando C.N. Pereira..
An integrated framework for semantic arid
pragmatic interpretation. In The Proceedings
of the 26th Annual Meeting of the Association
for Computastional Linguistics, 1988.
[Rei83] Tanya Reinhart. Anaphora and Semantic In-
terpretation. Cream Helm, London, 1983.
[Rob87] Craige Roberts. Modal Subordination,
Anaphora, and Distributivity. PhD thesis,
University of Massachusetts, 1987,
[Ros67] John R. Ross. Constraints on Variables in
Syntax. PhD thesis, MIT, 1967.
[Rus05] Bertrand Russell. On denoting. Mind, 14:479-
493, 1905.
[Rus71] Bertrand Russell. Reference. In J. F. Rosen-
berg and C. Travis, editors, Readings in the
Philosophy of Language. Prentice-Hall, Inc.,
Englewood Cliffs, New Jersey, 1971.
[Sag76] Ivan A. Sag. Deletion and Logical Form. PhD
thesis, MIT, 1976.
[SP841 L. K. Schubert and F. J. Pelletier. From En-
glish to Logic : Context-free computation of
&apos;conventional&apos; logical translations. American
Journal of Computational Linguistics, 10:165-
176, 1984.
[Web78] Bonnie L. Webber. A Forma/ Approach to Dis-
course Anaphora. PhD thesis, Harvard, 1978.
[Web83] Bonnie L. Webber. So what can we talk about.
now? In M. Brady and R. Berwick, edi-
tors, Computational Models of Discourse. MIT
Press, Cambridge MA, 1983.
</reference>
<page confidence="0.999318">
69
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.940591">
<title confidence="0.994536">DESIGNER DEFINITES IN LOGICAL FORM</title>
<author confidence="0.999987">Mary P Harper</author>
<affiliation confidence="0.9997415">School of Electrical Engineering Purdue University</affiliation>
<address confidence="0.99966">West Lafayette, IN 47907</address>
<abstract confidence="0.994567636363636">In this paper, we represent singular definite noun phrases as functions in logical form. This represenis designed to model of both anaphoric and non-anaphoric, distributive definites. It is also designed to obey the computational constraints suggested in Harper [Har88]. Our initial representation of a definite places an upper bound on its behavior given its structure and location in a sentence. Later, when ambiguity is resolved, the precise behavior of the definite is pinpointed.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>James Allen</author>
</authors>
<title>Natural Language Understanding. The Benjamin/Cummings Publishing Company,</title>
<date>1987</date>
<location>Menlo Park, CA,</location>
<contexts>
<context position="2266" citStr="[SP84; A1187; Har88]" startWordPosition="339" endWordPosition="341">diate representation until the necessary information has been processed. We adopt this second approach, which advocates mapping parsed sentences into an intermediate level of representation called logical form *This paper contains results from the author&apos;s thesis in the Computer Science Department at Brown -University. The paper has benefited from discussions with Eugene Charniak, Kate Sanders, Leora Morgenstern, Torn Dean, Paul Harper and Frederic Evans. The work was supported in part by the NSF grants IST 8416034 and 1ST 8515005, ONR grant N00014-79-C-0529, and AFOSR grant F49620-88-c-0132. [SP84; A1187; Har88]. Logical form partially specifies the meaning of a sentence based on syntactic and sentence-level information, without considering the effect of pragmatics and context. Later, as more information becomes available, the representation of the sentence is incrementally updated until all ambiguities have been resolved. In the literature, two sources of ambiguity have been handled using logical form, quantifier scoping (see [SP84; A1187]) and pronoun resolution (see [Har88; Har90]). In this paper, we will discuss the use of logical form for handling the ambiguities in the meanings of singular defi</context>
<context position="4778" citStr="[A1187]" startWordPosition="723" endWordPosition="723"> Logical form should compactly represent ambiguity. 2. Modularity Constraint: Logical form should be initially computable from syntax 62 and local (sentence-level) semantics. In particular, logical form should not be dependent on pragmatics, which requires inference and hence, internal representation. 3. Formal Consistency Constraint: Further processing of logical form should only disambiguate or further specify logical form. Logical form has a meaning. Any further processing must respect that meaning. First, the compactness constraint captures the spirit of logical form as presented by Allen [A1187]. Second, if the modularity constraint is violated, the value of computing logical form is lost. Finally, the formal consistency constraint keeps us honest. Initially, logical form provides a composite representation for a sentence. However, as more information becomes available, then the meaning of the sentence will be incrementally updated until all ambiguity is resolved. We cannot modify logical form in any way that contradicts its original meaning. The second goal of our approach was to accurately model the linguistic behavior of pronouns while obeying our logical form constraints. Since p</context>
<context position="7426" citStr="[A1187]" startWordPosition="1146" endWordPosition="1146">are potentially trigger sentences; hence, we lambda abstract the syntactic subjects of all sentences (following Webber [Web78] and Sag [Sag76]). 2. The logical roles of all noun phrases in a sentence are identified by position in logical form (logical subject first, logical object second, logical indirect object third, etc.). 3. We represent universal noun phrases as universally quantified (and restricted) variables and indefinite noun phrases as existentially quantified (and restricted) variables (following Webber [Web78]). 4. Quantifier scope ambiguity is handled in the same way as in Allen [A1187]. Initially, we place quantifiers in the predicate-argument. structure (except for subjects). Later, when information becomes available for making scoping decisions, quantifier scoping is indicated (discussed in Harper [Har90]). A composite representation for a pronoun is provided once the parse tree for the sentence containing it is available. When the parse tree is provided, we can determine all of the quantified noun phrases that are possible antecedents for a pronoun in the sentence (see Reinhart [R.ei83]). Hence, we represent a pronoun initially as a function of all of the variables assoc</context>
</contexts>
<marker>[A1187]</marker>
<rawString>James Allen. Natural Language Understanding. The Benjamin/Cummings Publishing Company, Menlo Park, CA, 1987,</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter T Geach</author>
</authors>
<title>Reference and Generality.</title>
<date>1962</date>
<publisher>Cornell University Press,</publisher>
<location>Ithaca,</location>
<contexts>
<context position="29611" citStr="[Gea62]" startWordPosition="4839" endWordPosition="4839">ility, and determining this meaning may require resolving pronouns and scoping ambiguities. In this paper, we have introduced a composite representation for definite noun phrases with two ways to update their meaning as more information becomes available. This approach is consistent with the three computational constraints discussed in section 2, and also provides a good model of definite behavior. We refer the reader to Harper [Har90] for discussion of a wider variety of examples. In particular; we discuss examples of verb phrase ellipsis, Bach-Peters sentences, and definite donkey sentences [Gea62]. Our approach has been implemented and tested on a wide variety of examples. The logical form for pronouns and definites is provided as soon as a parse tree for the sentence is available. Then, the logical form for the sentence is incrementally updated until all ambiguities have been resolved. Logical form is very useful in the search for pronoun and definite antecedents. For more on the implementation see [Har90]. One shortcoming of our approach is our inabil))ity to provide a single logical form for a sentence with structural ambiguity. One possible solution to this problem (which we are cu</context>
</contexts>
<marker>[Gea62]</marker>
<rawString>Peter T. Geach. Reference and Generality. Cornell University Press, Ithaca, 1962.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary P Harper</author>
</authors>
<title>Representing pronouns in logical form : Computational constraints and linguistic evidence.</title>
<date>1988</date>
<booktitle>In The Proceedings of the 7th National Meeting of AAAI,</booktitle>
<contexts>
<context position="2266" citStr="[SP84; A1187; Har88]" startWordPosition="339" endWordPosition="341">diate representation until the necessary information has been processed. We adopt this second approach, which advocates mapping parsed sentences into an intermediate level of representation called logical form *This paper contains results from the author&apos;s thesis in the Computer Science Department at Brown -University. The paper has benefited from discussions with Eugene Charniak, Kate Sanders, Leora Morgenstern, Torn Dean, Paul Harper and Frederic Evans. The work was supported in part by the NSF grants IST 8416034 and 1ST 8515005, ONR grant N00014-79-C-0529, and AFOSR grant F49620-88-c-0132. [SP84; A1187; Har88]. Logical form partially specifies the meaning of a sentence based on syntactic and sentence-level information, without considering the effect of pragmatics and context. Later, as more information becomes available, the representation of the sentence is incrementally updated until all ambiguities have been resolved. In the literature, two sources of ambiguity have been handled using logical form, quantifier scoping (see [SP84; A1187]) and pronoun resolution (see [Har88; Har90]). In this paper, we will discuss the use of logical form for handling the ambiguities in the meanings of singular defi</context>
<context position="4130" citStr="[Har88]" startWordPosition="633" endWordPosition="633">e pronoun is determined using only syntactic and sentence-levet information. Then, once the antecedent is determined, a feat which often requires pragmatic and contextual information available in subsequent sentences, we provide a way to update our logical form to indicate this information. Our logical form representation for pronouns was designed with two goals in mind. First, we required our representation to be compatible with the goal of devising a computational model of language comprehension. In fact, we defined three constraints for using logical form in a computational framework (from [Har88] and [Har90]). 1. Compactness Constraint: Logical form should compactly represent ambiguity. 2. Modularity Constraint: Logical form should be initially computable from syntax 62 and local (sentence-level) semantics. In particular, logical form should not be dependent on pragmatics, which requires inference and hence, internal representation. 3. Formal Consistency Constraint: Further processing of logical form should only disambiguate or further specify logical form. Logical form has a meaning. Any further processing must respect that meaning. First, the compactness constraint captures the spir</context>
<context position="21000" citStr="[Har88]" startWordPosition="3371" endWordPosition="3371">behavior. The lower bound is a constant, while the upper bound is the initial representation. These bounds must be tightened to settle on a final interpretation for the definite. We provide two methods to pinpoint a defiMte function. If the definite is used anaphorically, we equate the definite function with some value consistent with its antecedent. Otherwise, we apply a constraint that limits the argument list of the function to include only necessary variables. If a definite is used anaphorically, it can be equated with some value depending on its antecedent (just like pronoun functions in [Har88]). For example, if the antecedent of a definite noun phrase occurs in another sentence, we would equate the definite function with a discourse entity. Antecedents for definite noun phrases can also occur 3As in the representation of pronouns, we omit the variable x from the argument list because the lambda operator for y abstracts x, so y is the more general argument. within the same sentence. An intrasentential reference to an antecedent requires the definite function to have an argument list compatible with the representation of the antecedent4. Consider the initial representation of a sente</context>
</contexts>
<marker>[Har88]</marker>
<rawString>Mary P. Harper. Representing pronouns in logical form : Computational constraints and linguistic evidence. In The Proceedings of the 7th National Meeting of AAAI, 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary P Harper</author>
</authors>
<title>The representation of noun phrases in logical form.</title>
<date>1990</date>
<tech>PhD thesis,</tech>
<institution>Brown University,</institution>
<contexts>
<context position="2747" citStr="[Har88; Har90]" startWordPosition="410" endWordPosition="411">art by the NSF grants IST 8416034 and 1ST 8515005, ONR grant N00014-79-C-0529, and AFOSR grant F49620-88-c-0132. [SP84; A1187; Har88]. Logical form partially specifies the meaning of a sentence based on syntactic and sentence-level information, without considering the effect of pragmatics and context. Later, as more information becomes available, the representation of the sentence is incrementally updated until all ambiguities have been resolved. In the literature, two sources of ambiguity have been handled using logical form, quantifier scoping (see [SP84; A1187]) and pronoun resolution (see [Har88; Har90]). In this paper, we will discuss the use of logical form for handling the ambiguities in the meanings of singular definite noun phrases. But first, it will be useful to briefly review the logical form for pronouns. 2 Pronouns in Logical Form Pronouns are a source of underspecification in a sentence which can be handled in logical form. The antecedent of a pronoun cannot be immediately determined when the sentence containing it is parsed. Contextual and syntactic constraints combine to allow a listener/reader to decide on the antecedent for a certain pronoun. In Harper [Har88; Har90], we devis</context>
<context position="4142" citStr="[Har90]" startWordPosition="635" endWordPosition="635"> determined using only syntactic and sentence-levet information. Then, once the antecedent is determined, a feat which often requires pragmatic and contextual information available in subsequent sentences, we provide a way to update our logical form to indicate this information. Our logical form representation for pronouns was designed with two goals in mind. First, we required our representation to be compatible with the goal of devising a computational model of language comprehension. In fact, we defined three constraints for using logical form in a computational framework (from [Har88] and [Har90]). 1. Compactness Constraint: Logical form should compactly represent ambiguity. 2. Modularity Constraint: Logical form should be initially computable from syntax 62 and local (sentence-level) semantics. In particular, logical form should not be dependent on pragmatics, which requires inference and hence, internal representation. 3. Formal Consistency Constraint: Further processing of logical form should only disambiguate or further specify logical form. Logical form has a meaning. Any further processing must respect that meaning. First, the compactness constraint captures the spirit of logica</context>
<context position="7652" citStr="[Har90]" startWordPosition="1177" endWordPosition="1177"> in logical form (logical subject first, logical object second, logical indirect object third, etc.). 3. We represent universal noun phrases as universally quantified (and restricted) variables and indefinite noun phrases as existentially quantified (and restricted) variables (following Webber [Web78]). 4. Quantifier scope ambiguity is handled in the same way as in Allen [A1187]. Initially, we place quantifiers in the predicate-argument. structure (except for subjects). Later, when information becomes available for making scoping decisions, quantifier scoping is indicated (discussed in Harper [Har90]). A composite representation for a pronoun is provided once the parse tree for the sentence containing it is available. When the parse tree is provided, we can determine all of the quantified noun phrases that are possible antecedents for a pronoun in the sentence (see Reinhart [R.ei83]). Hence, we represent a pronoun initially as a function of all of the variables associated with noun phrases that are possible antecedents for or distribute over possible antecedents for the pronoun. To handle verb phrase ellipsis, the argument list must also include the lambda variables corresponding to synta</context>
<context position="17650" citStr="[Har90]" startWordPosition="2806" endWordPosition="2806">resentation compatible with its possible behaviors. We cannot provide different initial representations for a definite depending on use, otherwise we violate the compactness constraint. Additionally, unless our initial representation is compatible with all possible behaviors, we could violate the formal consistency constraint when we update logical form. We represent a definite as a named function of all of the variables associated with operators that can affect its meaning. This representation satisfies our constraints by combining the advantages of definite descriptions (discussed in Harper [Har90]) with the functional notation we introduced to represent pronouns. Each definite function is defined by a unique name (i.e., def with a unique integer appended to it), a list of arguments, and a restriction. The restriction of a definite function is derived from the words following the determiner. The argument list of the function consists of the variables associated with lambda operators that have scope over its position, any variables associated with non-subject quantified noun phrases that could bind a pronoun in that position, and any quantified variables associated with embedded quantifi</context>
<context position="20299" citStr="[Har90]" startWordPosition="3254" endWordPosition="3254">. The argument list of the function consists of the variables y and .z3. Notice that the pronoun his is also represented as a function of y and z. Anything that can affect the pronoun his picture will also affect the meaning of the definite noun phrase. Because a definite function is a composite representation for all possible meanings of a definite noun phrase, we must restrict the function in certain ways before a final interpretation for the sentence is available (or before deriving the meaning of an elided sentence from a trigger verb phrase containing a definite function, as discussed in [Har90]). The initial representation of a definite places an upper and lower bound on the definite&apos;s behavior. The lower bound is a constant, while the upper bound is the initial representation. These bounds must be tightened to settle on a final interpretation for the definite. We provide two methods to pinpoint a defiMte function. If the definite is used anaphorically, we equate the definite function with some value consistent with its antecedent. Otherwise, we apply a constraint that limits the argument list of the function to include only necessary variables. If a definite is used anaphorically, </context>
<context position="29443" citStr="[Har90]" startWordPosition="4814" endWordPosition="4814">n definites are accessible as antecedents for anaphoric expressions. This is not surprising, given the fact that the final meaning of a definite determines its accessibility, and determining this meaning may require resolving pronouns and scoping ambiguities. In this paper, we have introduced a composite representation for definite noun phrases with two ways to update their meaning as more information becomes available. This approach is consistent with the three computational constraints discussed in section 2, and also provides a good model of definite behavior. We refer the reader to Harper [Har90] for discussion of a wider variety of examples. In particular; we discuss examples of verb phrase ellipsis, Bach-Peters sentences, and definite donkey sentences [Gea62]. Our approach has been implemented and tested on a wide variety of examples. The logical form for pronouns and definites is provided as soon as a parse tree for the sentence is available. Then, the logical form for the sentence is incrementally updated until all ambiguities have been resolved. Logical form is very useful in the search for pronoun and definite antecedents. For more on the implementation see [Har90]. One shortcom</context>
<context position="32242" citStr="[Har90]" startWordPosition="5258" endWordPosition="5258">The dog does too cannot be provided because quantifiers do not have scope across sentences). In fact, to make the definite quantifier a feasible representation, we would have to make the binding properties of a definite quantifier different than the binding properties of a universal. Hornstein [Hor84] suggests that definite quantifiers have different binding properties than universals. His approach fails to consider how the process of pinpointing the meaning of a definite affects its ability to bind a pronoun. For more discussion of the strengths and weaknesses of these approaches, see Harper [Har90]. Other approaches to handling definites include the work of [11ei82; Kam81; Rob87; Kle87; PP88]. Each approach differs from ours both in scope and emphasis. We build an intermediate meaning for a sentence using only the constraints dictated by the syntax and local semantics and incrementally update it as we process contextual information. The work of Pollack and Periera [PP88] also attempts to gradually build up a final interpretation of a sentence using their semantic and pragmatic discharge interpretation rules. However, our representation of a definite noun phrase locally stores informatio</context>
</contexts>
<marker>[Har90]</marker>
<rawString>Mary P. Harper. The representation of noun phrases in logical form. PhD thesis, Brown University, 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Irene Heim</author>
</authors>
<title>The Semantics of Definite and Indefinite Noun Phrases.</title>
<date>1982</date>
<tech>PhD thesis,</tech>
<institution>University of Massachusetts,</institution>
<marker>[Hei82]</marker>
<rawString>Irene Heim. The Semantics of Definite and Indefinite Noun Phrases. PhD thesis, University of Massachusetts, 1982.</rawString>
</citation>
<citation valid="true">
<authors>
<author>laakko Hintikka</author>
</authors>
<title>Anaphora and Defiyiitc Descriptions: Two applications of GameTheoretical semantics.</title>
<date>1985</date>
<publisher>D. Reidel Publishing Company,</publisher>
<location>Boston,</location>
<marker>[Ilin85]</marker>
<rawString>laakko Hintikka.. Anaphora and Defiyiitc Descriptions: Two applications of GameTheoretical semantics. D. Reidel Publishing Company, Boston, 1985. [lior841 Norbert Hornstein. Logic as Grammar: An Approach to Meaning in Natural Language. MIT Press, Cambridge, MA, 1984.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans Kamp</author>
</authors>
<title>A theory of truth and semantic representation.</title>
<date>1981</date>
<booktitle>Formal Methods in the Study of Language, volume I. Mathernatische Centrum,</booktitle>
<editor>In Jeroen Groenendijk, Thco Janssen, and Martin Stokhof, editors,</editor>
<location>Amsterdam,</location>
<marker>[Kain81]</marker>
<rawString>Hans Kamp. A theory of truth and semantic representation. In Jeroen Groenendijk, Thco Janssen, and Martin Stokhof, editors, Formal Methods in the Study of Language, volume I. Mathernatische Centrum, Amsterdam, 1981.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ewan Klein</author>
</authors>
<title>VP ellipsis in DR theory. In</title>
<date>1987</date>
<booktitle>Studies in Discourse Representation and the Theory of Generalized Quantifiers.</booktitle>
<editor>J. Groenenclijk, D. de Jongh, and M. Stokhof, editors,</editor>
<location>Faris, Dordrecht,</location>
<contexts>
<context position="32338" citStr="[11ei82; Kam81; Rob87; Kle87; PP88]" startWordPosition="5268" endWordPosition="5272">scope across sentences). In fact, to make the definite quantifier a feasible representation, we would have to make the binding properties of a definite quantifier different than the binding properties of a universal. Hornstein [Hor84] suggests that definite quantifiers have different binding properties than universals. His approach fails to consider how the process of pinpointing the meaning of a definite affects its ability to bind a pronoun. For more discussion of the strengths and weaknesses of these approaches, see Harper [Har90]. Other approaches to handling definites include the work of [11ei82; Kam81; Rob87; Kle87; PP88]. Each approach differs from ours both in scope and emphasis. We build an intermediate meaning for a sentence using only the constraints dictated by the syntax and local semantics and incrementally update it as we process contextual information. The work of Pollack and Periera [PP88] also attempts to gradually build up a final interpretation of a sentence using their semantic and pragmatic discharge interpretation rules. However, our representation of a definite noun phrase locally stores information about those quantifiers in the sentence that can potentially quantify over it, while Pollack a</context>
</contexts>
<marker>[Kle87]</marker>
<rawString>Ewan Klein. VP ellipsis in DR theory. In J. Groenenclijk, D. de Jongh, and M. Stokhof, editors, Studies in Discourse Representation and the Theory of Generalized Quantifiers. Faris, Dordrecht, 1987.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martha E Pollack</author>
<author>Fernando C N Pereira</author>
</authors>
<title>An integrated framework for semantic arid pragmatic interpretation.</title>
<date>1988</date>
<booktitle>In The Proceedings of the 26th Annual Meeting of the Association for Computastional Linguistics,</booktitle>
<contexts>
<context position="32338" citStr="[11ei82; Kam81; Rob87; Kle87; PP88]" startWordPosition="5268" endWordPosition="5272">scope across sentences). In fact, to make the definite quantifier a feasible representation, we would have to make the binding properties of a definite quantifier different than the binding properties of a universal. Hornstein [Hor84] suggests that definite quantifiers have different binding properties than universals. His approach fails to consider how the process of pinpointing the meaning of a definite affects its ability to bind a pronoun. For more discussion of the strengths and weaknesses of these approaches, see Harper [Har90]. Other approaches to handling definites include the work of [11ei82; Kam81; Rob87; Kle87; PP88]. Each approach differs from ours both in scope and emphasis. We build an intermediate meaning for a sentence using only the constraints dictated by the syntax and local semantics and incrementally update it as we process contextual information. The work of Pollack and Periera [PP88] also attempts to gradually build up a final interpretation of a sentence using their semantic and pragmatic discharge interpretation rules. However, our representation of a definite noun phrase locally stores information about those quantifiers in the sentence that can potentially quantify over it, while Pollack a</context>
</contexts>
<marker>[PP88]</marker>
<rawString>Martha E. Pollack and Fernando C.N. Pereira.. An integrated framework for semantic arid pragmatic interpretation. In The Proceedings of the 26th Annual Meeting of the Association for Computastional Linguistics, 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tanya Reinhart</author>
</authors>
<title>Anaphora and Semantic Interpretation. Cream Helm,</title>
<date>1983</date>
<location>London,</location>
<contexts>
<context position="8535" citStr="[Rei83]" startWordPosition="1318" endWordPosition="1318">art [R.ei83]). Hence, we represent a pronoun initially as a function of all of the variables associated with noun phrases that are possible antecedents for or distribute over possible antecedents for the pronoun. To handle verb phrase ellipsis, the argument list must also include the lambda variables corresponding to syntactic subjects. A pronoun is represented as a uniquely-named function of all lambda variables (associated with subjects) which have scope over it in logical form, any non-subject quantified variables corresponding to noun phrases that c-command the pronoun (following Reinhart [Rei83]), and any quantified noun phrase not embedded in a relative clause but contained in a noun phrase that c-commands the pronoun. The lambda variable of a quantified subject subsumes the subject&apos;s quantified variable because the lambda operator abstracts the quantified variable. Our logical form representation for pronouns summarizes all of the operators that can directly affect their final meanings. Hence, the representation is useful for limiting the possible antecedents of a pronoun. For example, a pronoun function can take a universal noun phrase as its antecedent if and only if the universa</context>
</contexts>
<marker>[Rei83]</marker>
<rawString>Tanya Reinhart. Anaphora and Semantic Interpretation. Cream Helm, London, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Craige Roberts</author>
</authors>
<title>Modal Subordination, Anaphora, and Distributivity.</title>
<date>1987</date>
<tech>PhD thesis,</tech>
<institution>University of Massachusetts,</institution>
<contexts>
<context position="32338" citStr="[11ei82; Kam81; Rob87; Kle87; PP88]" startWordPosition="5268" endWordPosition="5272">scope across sentences). In fact, to make the definite quantifier a feasible representation, we would have to make the binding properties of a definite quantifier different than the binding properties of a universal. Hornstein [Hor84] suggests that definite quantifiers have different binding properties than universals. His approach fails to consider how the process of pinpointing the meaning of a definite affects its ability to bind a pronoun. For more discussion of the strengths and weaknesses of these approaches, see Harper [Har90]. Other approaches to handling definites include the work of [11ei82; Kam81; Rob87; Kle87; PP88]. Each approach differs from ours both in scope and emphasis. We build an intermediate meaning for a sentence using only the constraints dictated by the syntax and local semantics and incrementally update it as we process contextual information. The work of Pollack and Periera [PP88] also attempts to gradually build up a final interpretation of a sentence using their semantic and pragmatic discharge interpretation rules. However, our representation of a definite noun phrase locally stores information about those quantifiers in the sentence that can potentially quantify over it, while Pollack a</context>
</contexts>
<marker>[Rob87]</marker>
<rawString>Craige Roberts. Modal Subordination, Anaphora, and Distributivity. PhD thesis, University of Massachusetts, 1987,</rawString>
</citation>
<citation valid="true">
<authors>
<author>John R Ross</author>
</authors>
<title>Constraints on Variables</title>
<date>1967</date>
<booktitle>in Syntax. PhD thesis, MIT,</booktitle>
<marker>[Ros67]</marker>
<rawString>John R. Ross. Constraints on Variables in Syntax. PhD thesis, MIT, 1967.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bertrand Russell</author>
</authors>
<title>On denoting.</title>
<date>1905</date>
<journal>Mind,</journal>
<pages>14--479</pages>
<contexts>
<context position="31067" citStr="[Rus05]" startWordPosition="5078" endWordPosition="5078">ing, universal noun phrases cannot bind across sentences. However, speakers sometimes allow a universal to be the antecedent for a singular pronoun outside of its scope. Such pronouns are not usually understood as giving a bound variable reading. See Webber fWeb78] for a discussion of this issue. A similar treatment can apply to definites which change as a function of a universal. 68 one logical form. 5 Past Approaches Our work has benefited from the insights gained from other approaches to definite noun phrases in the literature. We considered both definite descriptions introduced by Russell [Rus05] and definite quantifiers (used by many including [Web83]) for representing definite noun phrases. Neither representation allows us to handle intrasentential anaphoric definites while obeying our computational constraints. However, the in-place definite description is excellent for modeling definite subjects in verb phrase ellipsis and for capturing the behaviors of distributive definite noun phrases. On the other hand, a definite quantifier is not a good representation for a definite subject in verb phrase ellipsis (the strict meaning of The cat wants its toy. The dog does too cannot be provi</context>
</contexts>
<marker>[Rus05]</marker>
<rawString>Bertrand Russell. On denoting. Mind, 14:479-493, 1905.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Reference</author>
</authors>
<date>1971</date>
<booktitle>Readings in the Philosophy of Language.</booktitle>
<editor>In J. F. Rosenberg and C. Travis, editors,</editor>
<publisher>Prentice-Hall, Inc.,</publisher>
<location>Englewood Cliffs, New Jersey,</location>
<marker>[Rus71]</marker>
<rawString>Bertrand Russell. Reference. In J. F. Rosenberg and C. Travis, editors, Readings in the Philosophy of Language. Prentice-Hall, Inc., Englewood Cliffs, New Jersey, 1971.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan A Sag</author>
</authors>
<title>Deletion and Logical Form. PhD thesis, MIT,</title>
<date>1976</date>
<journal>American Journal of Computational Linguistics,</journal>
<pages>10--165</pages>
<contexts>
<context position="6961" citStr="[Sag76]" startWordPosition="1073" endWordPosition="1073">wife. Elided Sentence: George/ does too. Meanings: a. George loves Fred&apos;s wife. b. George loves George&apos;s wife. Assuming that the meaning of the elided verb phrase is inherited from the representation of the trigger sentence&apos;s verb phrase, then the the pronoun his in the trigger verb phrase must be able to refer indirectly to the subject Fred in order for the sloppy reading of the elided sentence (i.e., George loves George&apos;s wife) to be available. All sentences are potentially trigger sentences; hence, we lambda abstract the syntactic subjects of all sentences (following Webber [Web78] and Sag [Sag76]). 2. The logical roles of all noun phrases in a sentence are identified by position in logical form (logical subject first, logical object second, logical indirect object third, etc.). 3. We represent universal noun phrases as universally quantified (and restricted) variables and indefinite noun phrases as existentially quantified (and restricted) variables (following Webber [Web78]). 4. Quantifier scope ambiguity is handled in the same way as in Allen [A1187]. Initially, we place quantifiers in the predicate-argument. structure (except for subjects). Later, when information becomes available</context>
</contexts>
<marker>[Sag76]</marker>
<rawString>Ivan A. Sag. Deletion and Logical Form. PhD thesis, MIT, 1976. [SP841 L. K. Schubert and F. J. Pelletier. From English to Logic : Context-free computation of &apos;conventional&apos; logical translations. American Journal of Computational Linguistics, 10:165-176, 1984.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bonnie L Webber</author>
</authors>
<title>A Forma/ Approach to Discourse Anaphora. PhD thesis,</title>
<date>1978</date>
<location>Harvard,</location>
<contexts>
<context position="6945" citStr="[Web78]" startWordPosition="1070" endWordPosition="1070">Fred, loves his wife. Elided Sentence: George/ does too. Meanings: a. George loves Fred&apos;s wife. b. George loves George&apos;s wife. Assuming that the meaning of the elided verb phrase is inherited from the representation of the trigger sentence&apos;s verb phrase, then the the pronoun his in the trigger verb phrase must be able to refer indirectly to the subject Fred in order for the sloppy reading of the elided sentence (i.e., George loves George&apos;s wife) to be available. All sentences are potentially trigger sentences; hence, we lambda abstract the syntactic subjects of all sentences (following Webber [Web78] and Sag [Sag76]). 2. The logical roles of all noun phrases in a sentence are identified by position in logical form (logical subject first, logical object second, logical indirect object third, etc.). 3. We represent universal noun phrases as universally quantified (and restricted) variables and indefinite noun phrases as existentially quantified (and restricted) variables (following Webber [Web78]). 4. Quantifier scope ambiguity is handled in the same way as in Allen [A1187]. Initially, we place quantifiers in the predicate-argument. structure (except for subjects). Later, when information b</context>
</contexts>
<marker>[Web78]</marker>
<rawString>Bonnie L. Webber. A Forma/ Approach to Discourse Anaphora. PhD thesis, Harvard, 1978.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bonnie L Webber</author>
</authors>
<title>So what can we talk about. now?</title>
<date>1983</date>
<booktitle>Computational Models of Discourse.</booktitle>
<editor>In M. Brady and R. Berwick, editors,</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge MA,</location>
<contexts>
<context position="31124" citStr="[Web83]" startWordPosition="5087" endWordPosition="5087"> However, speakers sometimes allow a universal to be the antecedent for a singular pronoun outside of its scope. Such pronouns are not usually understood as giving a bound variable reading. See Webber fWeb78] for a discussion of this issue. A similar treatment can apply to definites which change as a function of a universal. 68 one logical form. 5 Past Approaches Our work has benefited from the insights gained from other approaches to definite noun phrases in the literature. We considered both definite descriptions introduced by Russell [Rus05] and definite quantifiers (used by many including [Web83]) for representing definite noun phrases. Neither representation allows us to handle intrasentential anaphoric definites while obeying our computational constraints. However, the in-place definite description is excellent for modeling definite subjects in verb phrase ellipsis and for capturing the behaviors of distributive definite noun phrases. On the other hand, a definite quantifier is not a good representation for a definite subject in verb phrase ellipsis (the strict meaning of The cat wants its toy. The dog does too cannot be provided because quantifiers do not have scope across sentence</context>
</contexts>
<marker>[Web83]</marker>
<rawString>Bonnie L. Webber. So what can we talk about. now? In M. Brady and R. Berwick, editors, Computational Models of Discourse. MIT Press, Cambridge MA, 1983.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>