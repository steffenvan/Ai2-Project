<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000011">
<title confidence="0.9986555">
TJUdeM: A Combination Classifier for Aspect Category Detection
and Sentiment Polarity Classification
</title>
<author confidence="0.998736">
Zhifei Zhang and Jian-Yun Nie
</author>
<affiliation confidence="0.844652666666667">
Dept. of Comp. Sci. and Oper. Res.
University of Montreal
Quebec H3C 3J7, Canada
</affiliation>
<email confidence="0.991735">
{zhanzhif, nie}@iro.umontreal.ca
</email>
<author confidence="0.995874">
Hongling Wang
</author>
<affiliation confidence="0.894293">
Dept. of Comp. Sci. and Tech.
Soochow University
Suzhou 215006, China
</affiliation>
<email confidence="0.992246">
hlwang@suda.edu.cn
</email>
<sectionHeader confidence="0.998569" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999324307692308">
This paper describes the system we submitted
to In-domain ABSA subtask of SemEval 2015
shared task on aspect-based sentiment analy-
sis that includes aspect category detection and
sentiment polarity classification. For the as-
pect category detection, we combined an SVM
classifier with implicit aspect indicators. For
the sentiment polarity classification, we com-
bined an SVM classifier with a lexicon-based
polarity classifier. Our system outperforms the
baselines on both the laptop and restaurant do-
mains and ranks above average on the laptop
domain.
</bodyText>
<sectionHeader confidence="0.999519" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999974769230769">
Sentiment analysis aims at identifying people’s
opinions, sentiments, attitudes, and emotions to-
wards entities and their attributes (Liu, 2012), which
has a wide range of applications on user-generated
content, e.g., reviews, blogs, and tweets.
Most previous work in sentiment analysis mainly
attempted to identify the overall polarity of a giv-
en text or text span (Pang and Lee, 2008; Wilson et
al., 2009; Zhang et al., 2009). The document-level
or sentence-level sentiment classification is often in-
sufficient for applications. Each document may talk
about different entities, or express different opinions
about different aspects of the entity even if the doc-
ument concerns a single entity. Therefore, we need
to discover the aspects of entities and determine the
sentiment polarity on each entity aspect. This task
is called aspect-based sentiment analysis or feature-
based opinion mining (Hu and Liu, 2004).
The aspect-based sentiment analysis (ABSA) task
(Task 12) (Pontiki et al., 2015) in SemEval 2015 is
a continuation of SemEval 2014 Task 4 (Pontiki et
al., 2014). The ABSA task consists of two subtasks:
In-domain ABSA and Out-domain ABSA. We par-
ticipated in the former subtask that aims to identify
the aspect category (i.e., an entity and attribute pair)
and the sentiment polarity given a review text about
a laptop or a restaurant.
Each entity and attribute pair is an aspect catego-
ry chosen from the predefined inventories of entity
types and attribute labels per domain. For the aspect
category detection, an SVM classifier with the bag-
of-words features can be used, and this approach is
used as our baseline method. However, if a token
implying an aspect, e.g., “overpriced”, is not tak-
en as a feature, the SVM classifier cannot correct-
ly identify its corresponding category. Therefore,
we enhance the results from the SVM classifier by
using implicit aspect indicators (Cruz-Garcia et al.,
2014). For the sentiment polarity classification, an
SVM classifier with the bag-of-words features plus
the category feature is trained and this is used as our
baseline. However, again, if a sentiment word does
not appear in the training data, the SVM classifier
cannot predict its polarity. Therefore, we combined
the SVM classifier and a lexicon-based polarity clas-
sifier (Taboada et al., 2011).
The remainder of this paper is organized as fol-
lows. In Section 2, we describe our approach to
the aspect category detection. In Section 3, our ap-
proach to the sentiment polarity classification is pre-
sented. Experimental results are shown in Section 4.
Section 5 provides the conclusion.
</bodyText>
<page confidence="0.966921">
772
</page>
<note confidence="0.605229">
Proceedings of the 9th International Workshop on Semantic Evaluation (SemEval 2015), pages 772–777,
Denver, Colorado, June 4-5, 2015. c�2015 Association for Computational Linguistics
</note>
<sectionHeader confidence="0.964093" genericHeader="method">
2 Aspect Category Detection
</sectionHeader>
<bodyText confidence="0.999226833333333">
The aspect category detection task is to identify the
specific entities and their attributes about the laptop
or restaurant reviews. We use an SVM classifier en-
hanced by implicit aspect indicators. The process of
the whole system is illustrated in Figure 1. We will
describe the details in the following subsections.
</bodyText>
<figureCaption confidence="0.995689">
Figure 1: System flowchart for aspect category detection.
</figureCaption>
<subsectionHeader confidence="0.990465">
2.1 SVM Classifier
</subsectionHeader>
<bodyText confidence="0.993772">
The SVM classifier uses words as features to deter-
mine the aspect categories. We use the LIBSVM
package (Chang and Lin, 2011) to implement an
SVM classifier. The “-t” option is set to 0 for linear
kernel, and the “-b” option is set to 1 for probability
estimates. The top n frequent tokens in the training
data are used as the bag-of-words features. We set
n = 1000 as the number of bag-of-words features.
An aspect category (C) is an entity (E) and at-
tribute (A) pair, i.e., C = E#A. For instance,
I received prompt service with a s-
mile.→{Service#General}
It would cost too much to repair
it.→{Support#Price}
For a test sentence s, the LIBSVM package can
predict the probability of assigning each category
E#A to s. The category should be assigned to s
only if its probability is higher than a predefined
threshold t. We set t to 0.2 for the restaurant re-
views and to 0.12 for the laptop reviews. It’s easy
to see that our SVM classifier is configured in accor-
dance with the SVM baseline system provided by
the task organizers (Pontiki et al., 2015).
</bodyText>
<equation confidence="0.991745">
Aspectsvm(s) = {E#A|Prob(E#A) &gt; t} (1)
</equation>
<subsectionHeader confidence="0.992251">
2.2 Implicit Aspect Indicator
</subsectionHeader>
<bodyText confidence="0.9155685">
If the tokens implying aspects are beyond bag-of-
words features, the SVM classifier is unable to pre-
dict it. For example,
It was totally overpriced-fish and chips was about
$15.
Both “overpriced” and “$15” in the above sen-
tence are associated with the “price” aspect. These
tokens are considered as the implicit aspect indica-
tors.
The different methods can be used to identify the
implicit aspect indicators (Cruz-Garcia et al., 2014).
In our case, we do it manually by setting a set of in-
dicators for several aspects (see Table 1). The list
of words associated with the “price” aspect includes
“cost”, “overpriced”, “expensive”, etc. The list
for the “quality” aspect includes “feels”, “durable”,
“taste”, etc.
Implicit Word List Size
Aspect
expensive, overpriced,
</bodyText>
<equation confidence="0.689879">
Price 16
cheap, discount, cost, · · · · · ·
feels, durable, overcooked,
Quality 50
taste, breaks, · · · · · ·
improves, stable, crashed,
Performance 40
performs, powerful, · · · · · ·
lightweight, heavy, elegant,
Design 27 fit, looks,······
access, store, typing,
Usability 62
flexible, upgrade, · · · · · ·
</equation>
<tableCaption confidence="0.98713">
Table 1: Implicit aspect indicator.
</tableCaption>
<bodyText confidence="0.999951285714286">
In addition, an expression of the amount of money
is strongly related to the “price” aspect. To identify
these expressions, we use the following regular ex-
pression: “\s$\d+(\.\d+)?\s”.
If the word W indicates the implicit aspect A&apos;, the
aspects determined by implicit aspect indicators are
denoted as follows:
</bodyText>
<equation confidence="0.974008">
Aspectiai(s) = {A&apos;|W E s} (2)
</equation>
<subsectionHeader confidence="0.999146">
2.3 Combination Classifier
</subsectionHeader>
<bodyText confidence="0.999963">
We find the SVM classifier often obtains the cate-
gory like “E|General” which means that a general
</bodyText>
<page confidence="0.992135">
773
</page>
<bodyText confidence="0.999228466666667">
opinion is expressed and it is not specific to a partic-
ular aspect. On the other hand, for the same case, the
implicit aspect indicators may suggest other specif-
ic aspect categories (e.g., “price”). This case occurs
when the words corresponding to the implicit aspec-
t indicators are not included in the features used by
SVM. It is in this case that it is the most useful to
combine the two classifiers.
Our combination is done as follows: if the “Gen-
eral” category is suggested by the SVM classifi-
er, then we replace it by the categories identified
through the implicit aspect indicators. Otherwise,
the categories given by the SVM classifier remain
unchanged. The method is described in the follow-
ing algorithm.
</bodyText>
<figure confidence="0.609601666666667">
Algorithm 1 A combination classifier for aspect cat-
egory detection.
Input: Aspectsvm(s) and Aspectiai(s) for a test
sentence s
Output: Aspect(s)
1: if Aspectiai(s) = 0 then
</figure>
<listItem confidence="0.975038153846154">
2: return Aspectsvm(s)
3: end if
4: Aspect(s) = 0
5: for all E#A E Aspectsvm(s) do
6: if A is ‘General’ then
7: for all A&apos; E Aspectiai(s) do
8: Aspect(s) = Aspect(s) U {E#A&apos;}
9: end for
10: else
11: Aspect(s) = Aspect(s) U {E#A}
12: end if
13: end for
14: return Aspect(s)
</listItem>
<sectionHeader confidence="0.958687" genericHeader="method">
3 Sentiment Polarity Classification
</sectionHeader>
<bodyText confidence="0.99964425">
The sentiment polarity classification task is to assign
a polarity from a set {positive, negative, neutral} to
each identified aspect category of a sentence. We use
a similar method as for the previous task. The pro-
cesses of the system are illustrated in Figure 2 that
includes three parts: an SVM classifier, a lexicon-
based polarity classifier, and their combination clas-
sifier.
</bodyText>
<figureCaption confidence="0.9935395">
Figure 2: System flowchart for sentiment polarity classi-
fication.
</figureCaption>
<subsectionHeader confidence="0.995954">
3.1 SVM Classifier
</subsectionHeader>
<bodyText confidence="0.999964454545454">
We also use the LIBSVM package (Chang and Lin,
2011) to implement an SVM classifier with linear k-
ernel. Again, n (n = 1000) bag-of-words features
are extracted from the training data. In addition,
a feature that indicates the aspect category is used.
Our SVM configurations are also the same with that
of the SVM baseline system (Pontiki et al., 2015).
The SVM classifier can predict a polarity (posi-
tive, negative, or neutral) for each aspect category
C within a test sentence s. We represent three polar-
ity labels with three respective numbers.
</bodyText>
<equation confidence="0.889135">
Polaritysvm(s, C) E {1, −1, 0} (3)
</equation>
<subsectionHeader confidence="0.998664">
3.2 Lexicon-Based Polarity Classifier
</subsectionHeader>
<bodyText confidence="0.999972421052632">
If the sentiment words are beyond the bag-of-words
features, the SVM classifier assigns the neutral po-
larity, and what’s worse, it assigns the reverse polar-
ity if the sentence contains negation words (Zhu et
al., 2014), like “not” and “no”. In fact, the lexicon-
based methods can also be effective in sentiment
classification (Taboada et al., 2011). We therefore
adopt a simple lexicon-based method in our system.
The sentiment lexicons, such as Bing Liu’s Opin-
ion Lexicon (Hu and Liu, 2004) and MPQA Sub-
jectivity Lexicon (Wilson et al., 2009), are used to
generate our sentiment word list. We denote all pos-
itive words and negative words by POS and NEG
respectively.
We use the Stanford Parser package (Klein and
Manning, 2003) for POS tagging and parsing. The
typed dependency “neg(X, Y )” shows that one sen-
tence contains a negation Y modifying X, and
“root(ROOT, X)” shows that X is a core word.
</bodyText>
<page confidence="0.995719">
774
</page>
<bodyText confidence="0.9103904">
Assume that one sentiment word X is in a test
sentence s and X E POS U NEG, if X E POS,
then Polarity(X) = 1, otherwise Polarity(X) =
−1. The polarity for the aspect category is deter-
mined by,
</bodyText>
<equation confidence="0.995918285714286">
−Polarity(X) 3neg(X,Y)
−Polarity(X) 3neg(Z,Y)
nroot(ROOT, Z)
Polarity(X) otherwise
(4)
where Y E s is a negation word, and Z E s but
Z E/ POS U NEG.
</equation>
<bodyText confidence="0.8505405">
The following examples are corresponding to
three circumstances in the above equation:
</bodyText>
<subsubsectionHeader confidence="0.478413">
Overpriced and not tasty {neg(tasty, not)}
</subsubsectionHeader>
<bodyText confidence="0.494060333333333">
Our experience did not ever get any
better {neg(get, not), root(ROOT, get)}
Overpriced and not
</bodyText>
<subsubsectionHeader confidence="0.364721">
tasty {root(ROOT, overpriced)}
</subsubsectionHeader>
<subsectionHeader confidence="0.998702">
3.3 Combination Classifier
</subsectionHeader>
<bodyText confidence="0.8797238125">
If none of the sentiment words in the lexicon appear
in a sentence, the lexicon-based polarity classifier is
helpless, but the SVM classifier could still determine
a reasonable polarity (Pang et al., 2002).
We propose a classifier combining the SVM clas-
sifier and the lexicon-based polarity classifier. It
works as follows: If there is disagreement between
the polarity of SVM classifier and the lexicon, we
will rely on the polarity based on the lexicon if the
latter is not neutral (0). Otherwise, we take the po-
larity of the SVM classifier.
Algorithm 2 A combination classifier for sentiment
polarity classification.
Input: Polaritysv,,t(s, C) and Polaritylex(s, C)
for an aspect category C of a test sentence s
Output: Polarity(s, C)
</bodyText>
<listItem confidence="0.93701175">
1: if Polarity,,,,,,,,(s, C) = Polarityle,(s, C) then
2: Polarity(s, C) = Polaritysv,,t(s, C)
3: else if Polaritylex(s, C) = 0 then
4: Polarity(s, C) = Polaritysv,,t(s, C)
5: else
6: Polarity(s, C) = Polaritylex(s, C)
7: end if
8: return Polarity(s, C)
</listItem>
<sectionHeader confidence="0.998919" genericHeader="method">
4 Experiments
</sectionHeader>
<subsectionHeader confidence="0.999625">
4.1 Data Sets
</subsectionHeader>
<bodyText confidence="0.968721">
The training and test data is described in Table 2.
</bodyText>
<table confidence="0.999756818181818">
Domain Training Test
Sentence 1739 761
Positive 1103 541
Laptop Category Negative 765 329
Neutral 106 79
Total 1974 949
Sentence 1315 685
Positive 1198 454
Restaurant Category Negative 403 346
Neutral 53 45
Total 1654 845
</table>
<tableCaption confidence="0.999451">
Table 2: Data sets.
</tableCaption>
<bodyText confidence="0.999513727272727">
The laptop training data, consisting of 1739 sen-
tences, includes 1974 aspect category instances. The
laptop test data, consisting of 761 sentences, in-
cludes 949 aspect category instances. The restaurant
training data, consisting of 1315 sentences, includes
1654 aspect category instances. The restaurant test
data, consisting of 685 sentences, includes 845 as-
pect category instances.
There are 22 entity labels and 9 attribute labels on
the laptop domain, and there are 6 entity labels and
5 attribute labels on the restaurant domain.
</bodyText>
<subsectionHeader confidence="0.992161">
4.2 Experimental Results
</subsectionHeader>
<bodyText confidence="0.980548">
Aspect category detection Table 3 lists the results
of our system for the aspect category detection.
</bodyText>
<table confidence="0.997989">
Laptop Restaurant
SVM Baseline 0.4631 0.5133
Top 0.5086 0.6268
Average 0.4548 0.5383
Our System 0.4649 0.5245
</table>
<tableCaption confidence="0.9835765">
Table 3: F-score comparison for aspect category detec-
tion.
</tableCaption>
<bodyText confidence="0.999663">
Our system clearly outperforms the SVM baseline
on both two domains. This indicates that the im-
plicit aspect indicators can further improve the per-
formance. Our system ranks above average on the
laptop domain. But our system is far from the top
system. This is possibly due to the simple features
</bodyText>
<figure confidence="0.662474">
Polaritylex(s, C) =
⎧
⎨⎪
⎪⎩
</figure>
<page confidence="0.99318">
775
</page>
<bodyText confidence="0.997897142857143">
used by the SVM classifier. Globally, our method
is comparable to the average performance of all the
participating systems.
Sentiment polarity classification Table 4 lists the
results of our system for the sentiment polarity clas-
sification. The majority baseline is obtained by ma-
jority voting in all the participating results.
</bodyText>
<table confidence="0.998234166666667">
Laptop Restaurant
SVM Baseline 0.6997 0.6355
Majority Baseline 0.5701 0.5373
Top 0.7935 0.7870
Average 0.7131 0.7132
Our System 0.7323 0.6888
</table>
<tableCaption confidence="0.984167">
Table 4: F-score comparison for sentiment polarity clas-
sification.
</tableCaption>
<bodyText confidence="0.999978052631579">
The performance of our system is obviously bet-
ter than two baselines on both two domains, but fails
to reach the average on the restaurant domain. The
conclusion of this experiment is that the lexicon-
based method is helpful to sentiment classification
when it is combined with a baseline method. As for
the task of aspect category detection, a possible rea-
son lies in the simple bag-of-words features we used.
With more sophisticated features, one can likely im-
prove the performance of the baseline methods, and
as a result, the combination method.
Comparing the results on the two domains, we ob-
serve that our system produced lower performance
than average for the restaurant reviews, but high-
er performance for the laptop reviews. A possi-
ble reason can be the lexicon we defined for the t-
wo domains. The Opinion Lexicon is originally de-
signed for the customer reviews about 5 digit prod-
ucts, which is more related to the laptop domain.
</bodyText>
<sectionHeader confidence="0.999512" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.999986615384615">
In this task, we proposed a combination classifier
for the aspect category detection which combines
an SVM classifier with implicit aspect indicators,
and a combination classifier for the sentiment polar-
ity classification which combines an SVM classifier
with a lexicon-based polarity classifier. Our system
ranks above average on the laptop domain and out-
performs the baselines, but is still lower than the av-
erage for the restaurant domain. Our experiments
show that implicit aspect indicators and polarity lex-
icon are both useful in these tasks. For the future
work, more and better features will be examined to
help to improve the classification performance.
</bodyText>
<sectionHeader confidence="0.997713" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9997534">
We are really grateful to the organizers and review-
ers for this interesting task and their helpful sug-
gestions and comments. This research is supported
by the Quebec-China Postdoctoral Scholarship (File
No. 188040).
</bodyText>
<sectionHeader confidence="0.99967" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999736472222222">
Chih-Chung Chang and Chih-Jen Lin. 2011. LIB-
SVM: A library for support vector machines. ACM
Transactions on Intelligent Systems and Technology,
2(3):27:1–27:27.
Ivan Omar Cruz-Garcia, Alexander Gelbukh, and Grigori
Sidorov. 2014. Implicit aspect indicator extraction for
aspect-based opinion mining.
Minqing Hu and Bing Liu. 2004. Mining and summariz-
ing customer reviews. In Proceedings of KDD, pages
168–177, New York, NY, USA.
Dan Klein and Christopher D. Manning. 2003. Accurate
unlexicalized parsing. In Proceedings of ACL, pages
423–430, Sapporo, Japan.
Bing Liu. 2012. Sentiment analysis and opinion mining.
Synthesis Lectures on Human Language Technologies,
5(1):1–167.
Bo Pang and Lillian Lee. 2008. Opinion mining and
sentiment analysis. Foundations and Trends in Infor-
mation Retrieval, 2(1-2):1–135.
Bo Pang, Lillian Lee, and Shivakumar Vaithyanathan.
2002. Thumbs up? Sentiment classification using ma-
chine learning techniques. In Proceedings of EMNLP,
pages 79–86, Philadelphia, PA, USA.
Maria Pontiki, Haris Papageorgiou, Dimitrios Galanis,
Ion Androutsopoulos, John Pavlopoulos, and Suresh
Manandhar. 2014. SemEval-2014 Task 4: Aspect
based sentiment analysis. In Proceedings of SemEval,
pages 27–35, Dublin, Ireland.
Maria Pontiki, Dimitrios Galanis, Haris Papageogiou,
Suresh Manandhar, and Ion Androutsopoulos. 2015.
SemEval-2015 Task 12: Aspect based sentiment anal-
ysis. In Proceedings of SemEval, Denver, CO, USA.
Maite Taboada, Julian Brooke, Milan Tofiloski, Kimberly
Voll, and Manfred Stede. 2011. Lexicon-based meth-
ods for sentiment analysis. Computational Linguistic-
s, 37(2):267–307.
</reference>
<page confidence="0.98225">
776
</page>
<reference confidence="0.999234692307692">
Theresa Wilson, Janyce Wiebe, and Paul Hoffmann.
2009. Recognizing contextual polarity: An explo-
ration of features for phrase-level sentiment analysis.
Computational Linguistics, 35(3):399–433.
Changli Zhang, Daniel Zeng, Jiexun Li, Fei-Yue Wang,
and Wanli Zuo. 2009. Sentiment analysis of Chinese
documents: From sentence to document level. Journal
of the American Society for Information Science and
Technology, 60(12):2474–2487.
Xiaodan Zhu, Hongyu Guo, Saif Mohammad, and Svet-
lana Kiritchenko. 2014. An empirical study on the
effect of negation words on sentiment. In Proceedings
of ACL, pages 304–313, Baltimore, MD, USA.
</reference>
<page confidence="0.997383">
777
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.159886">
<title confidence="0.9948245">TJUdeM: A Combination Classifier for Aspect Category and Sentiment Polarity Classification</title>
<author confidence="0.982928">Zhang</author>
<affiliation confidence="0.745831333333333">Dept. of Comp. Sci. and Oper. University of Quebec H3C 3J7, Hongling Dept. of Comp. Sci. and Soochow</affiliation>
<address confidence="0.800068">Suzhou 215006,</address>
<email confidence="0.890045">hlwang@suda.edu.cn</email>
<abstract confidence="0.9905035">This paper describes the system we submitted to In-domain ABSA subtask of SemEval 2015 shared task on aspect-based sentiment analysis that includes aspect category detection and sentiment polarity classification. For the aspect category detection, we combined an SVM classifier with implicit aspect indicators. For the sentiment polarity classification, we combined an SVM classifier with a lexicon-based polarity classifier. Our system outperforms the baselines on both the laptop and restaurant domains and ranks above average on the laptop domain.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Chih-Chung Chang</author>
<author>Chih-Jen Lin</author>
</authors>
<title>LIBSVM: A library for support vector machines.</title>
<date>2011</date>
<journal>ACM Transactions on Intelligent Systems and Technology,</journal>
<volume>2</volume>
<issue>3</issue>
<contexts>
<context position="4251" citStr="Chang and Lin, 2011" startWordPosition="653" endWordPosition="656">lorado, June 4-5, 2015. c�2015 Association for Computational Linguistics 2 Aspect Category Detection The aspect category detection task is to identify the specific entities and their attributes about the laptop or restaurant reviews. We use an SVM classifier enhanced by implicit aspect indicators. The process of the whole system is illustrated in Figure 1. We will describe the details in the following subsections. Figure 1: System flowchart for aspect category detection. 2.1 SVM Classifier The SVM classifier uses words as features to determine the aspect categories. We use the LIBSVM package (Chang and Lin, 2011) to implement an SVM classifier. The “-t” option is set to 0 for linear kernel, and the “-b” option is set to 1 for probability estimates. The top n frequent tokens in the training data are used as the bag-of-words features. We set n = 1000 as the number of bag-of-words features. An aspect category (C) is an entity (E) and attribute (A) pair, i.e., C = E#A. For instance, I received prompt service with a smile.→{Service#General} It would cost too much to repair it.→{Support#Price} For a test sentence s, the LIBSVM package can predict the probability of assigning each category E#A to s. The cate</context>
<context position="8537" citStr="Chang and Lin, 2011" startWordPosition="1384" endWordPosition="1387">s) = Aspect(s) U {E#A} 12: end if 13: end for 14: return Aspect(s) 3 Sentiment Polarity Classification The sentiment polarity classification task is to assign a polarity from a set {positive, negative, neutral} to each identified aspect category of a sentence. We use a similar method as for the previous task. The processes of the system are illustrated in Figure 2 that includes three parts: an SVM classifier, a lexiconbased polarity classifier, and their combination classifier. Figure 2: System flowchart for sentiment polarity classification. 3.1 SVM Classifier We also use the LIBSVM package (Chang and Lin, 2011) to implement an SVM classifier with linear kernel. Again, n (n = 1000) bag-of-words features are extracted from the training data. In addition, a feature that indicates the aspect category is used. Our SVM configurations are also the same with that of the SVM baseline system (Pontiki et al., 2015). The SVM classifier can predict a polarity (positive, negative, or neutral) for each aspect category C within a test sentence s. We represent three polarity labels with three respective numbers. Polaritysvm(s, C) E {1, −1, 0} (3) 3.2 Lexicon-Based Polarity Classifier If the sentiment words are beyon</context>
</contexts>
<marker>Chang, Lin, 2011</marker>
<rawString>Chih-Chung Chang and Chih-Jen Lin. 2011. LIBSVM: A library for support vector machines. ACM Transactions on Intelligent Systems and Technology, 2(3):27:1–27:27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan Omar Cruz-Garcia</author>
<author>Alexander Gelbukh</author>
<author>Grigori Sidorov</author>
</authors>
<title>Implicit aspect indicator extraction for aspect-based opinion mining.</title>
<date>2014</date>
<contexts>
<context position="2836" citStr="Cruz-Garcia et al., 2014" startWordPosition="432" endWordPosition="435">arity given a review text about a laptop or a restaurant. Each entity and attribute pair is an aspect category chosen from the predefined inventories of entity types and attribute labels per domain. For the aspect category detection, an SVM classifier with the bagof-words features can be used, and this approach is used as our baseline method. However, if a token implying an aspect, e.g., “overpriced”, is not taken as a feature, the SVM classifier cannot correctly identify its corresponding category. Therefore, we enhance the results from the SVM classifier by using implicit aspect indicators (Cruz-Garcia et al., 2014). For the sentiment polarity classification, an SVM classifier with the bag-of-words features plus the category feature is trained and this is used as our baseline. However, again, if a sentiment word does not appear in the training data, the SVM classifier cannot predict its polarity. Therefore, we combined the SVM classifier and a lexicon-based polarity classifier (Taboada et al., 2011). The remainder of this paper is organized as follows. In Section 2, we describe our approach to the aspect category detection. In Section 3, our approach to the sentiment polarity classification is presented.</context>
<context position="5680" citStr="Cruz-Garcia et al., 2014" startWordPosition="902" endWordPosition="905">lassifier is configured in accordance with the SVM baseline system provided by the task organizers (Pontiki et al., 2015). Aspectsvm(s) = {E#A|Prob(E#A) &gt; t} (1) 2.2 Implicit Aspect Indicator If the tokens implying aspects are beyond bag-ofwords features, the SVM classifier is unable to predict it. For example, It was totally overpriced-fish and chips was about $15. Both “overpriced” and “$15” in the above sentence are associated with the “price” aspect. These tokens are considered as the implicit aspect indicators. The different methods can be used to identify the implicit aspect indicators (Cruz-Garcia et al., 2014). In our case, we do it manually by setting a set of indicators for several aspects (see Table 1). The list of words associated with the “price” aspect includes “cost”, “overpriced”, “expensive”, etc. The list for the “quality” aspect includes “feels”, “durable”, “taste”, etc. Implicit Word List Size Aspect expensive, overpriced, Price 16 cheap, discount, cost, · · · · · · feels, durable, overcooked, Quality 50 taste, breaks, · · · · · · improves, stable, crashed, Performance 40 performs, powerful, · · · · · · lightweight, heavy, elegant, Design 27 fit, looks,······ access, store, typing, Usab</context>
</contexts>
<marker>Cruz-Garcia, Gelbukh, Sidorov, 2014</marker>
<rawString>Ivan Omar Cruz-Garcia, Alexander Gelbukh, and Grigori Sidorov. 2014. Implicit aspect indicator extraction for aspect-based opinion mining.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Minqing Hu</author>
<author>Bing Liu</author>
</authors>
<title>Mining and summarizing customer reviews.</title>
<date>2004</date>
<booktitle>In Proceedings of KDD,</booktitle>
<pages>168--177</pages>
<location>New York, NY, USA.</location>
<contexts>
<context position="1833" citStr="Hu and Liu, 2004" startWordPosition="267" endWordPosition="270">attempted to identify the overall polarity of a given text or text span (Pang and Lee, 2008; Wilson et al., 2009; Zhang et al., 2009). The document-level or sentence-level sentiment classification is often insufficient for applications. Each document may talk about different entities, or express different opinions about different aspects of the entity even if the document concerns a single entity. Therefore, we need to discover the aspects of entities and determine the sentiment polarity on each entity aspect. This task is called aspect-based sentiment analysis or featurebased opinion mining (Hu and Liu, 2004). The aspect-based sentiment analysis (ABSA) task (Task 12) (Pontiki et al., 2015) in SemEval 2015 is a continuation of SemEval 2014 Task 4 (Pontiki et al., 2014). The ABSA task consists of two subtasks: In-domain ABSA and Out-domain ABSA. We participated in the former subtask that aims to identify the aspect category (i.e., an entity and attribute pair) and the sentiment polarity given a review text about a laptop or a restaurant. Each entity and attribute pair is an aspect category chosen from the predefined inventories of entity types and attribute labels per domain. For the aspect category</context>
<context position="9595" citStr="Hu and Liu, 2004" startWordPosition="1559" endWordPosition="1562"> three polarity labels with three respective numbers. Polaritysvm(s, C) E {1, −1, 0} (3) 3.2 Lexicon-Based Polarity Classifier If the sentiment words are beyond the bag-of-words features, the SVM classifier assigns the neutral polarity, and what’s worse, it assigns the reverse polarity if the sentence contains negation words (Zhu et al., 2014), like “not” and “no”. In fact, the lexiconbased methods can also be effective in sentiment classification (Taboada et al., 2011). We therefore adopt a simple lexicon-based method in our system. The sentiment lexicons, such as Bing Liu’s Opinion Lexicon (Hu and Liu, 2004) and MPQA Subjectivity Lexicon (Wilson et al., 2009), are used to generate our sentiment word list. We denote all positive words and negative words by POS and NEG respectively. We use the Stanford Parser package (Klein and Manning, 2003) for POS tagging and parsing. The typed dependency “neg(X, Y )” shows that one sentence contains a negation Y modifying X, and “root(ROOT, X)” shows that X is a core word. 774 Assume that one sentiment word X is in a test sentence s and X E POS U NEG, if X E POS, then Polarity(X) = 1, otherwise Polarity(X) = −1. The polarity for the aspect category is determine</context>
</contexts>
<marker>Hu, Liu, 2004</marker>
<rawString>Minqing Hu and Bing Liu. 2004. Mining and summarizing customer reviews. In Proceedings of KDD, pages 168–177, New York, NY, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Klein</author>
<author>Christopher D Manning</author>
</authors>
<title>Accurate unlexicalized parsing.</title>
<date>2003</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>423--430</pages>
<location>Sapporo, Japan.</location>
<contexts>
<context position="9832" citStr="Klein and Manning, 2003" startWordPosition="1600" endWordPosition="1603">arity, and what’s worse, it assigns the reverse polarity if the sentence contains negation words (Zhu et al., 2014), like “not” and “no”. In fact, the lexiconbased methods can also be effective in sentiment classification (Taboada et al., 2011). We therefore adopt a simple lexicon-based method in our system. The sentiment lexicons, such as Bing Liu’s Opinion Lexicon (Hu and Liu, 2004) and MPQA Subjectivity Lexicon (Wilson et al., 2009), are used to generate our sentiment word list. We denote all positive words and negative words by POS and NEG respectively. We use the Stanford Parser package (Klein and Manning, 2003) for POS tagging and parsing. The typed dependency “neg(X, Y )” shows that one sentence contains a negation Y modifying X, and “root(ROOT, X)” shows that X is a core word. 774 Assume that one sentiment word X is in a test sentence s and X E POS U NEG, if X E POS, then Polarity(X) = 1, otherwise Polarity(X) = −1. The polarity for the aspect category is determined by, −Polarity(X) 3neg(X,Y) −Polarity(X) 3neg(Z,Y) nroot(ROOT, Z) Polarity(X) otherwise (4) where Y E s is a negation word, and Z E s but Z E/ POS U NEG. The following examples are corresponding to three circumstances in the above equat</context>
</contexts>
<marker>Klein, Manning, 2003</marker>
<rawString>Dan Klein and Christopher D. Manning. 2003. Accurate unlexicalized parsing. In Proceedings of ACL, pages 423–430, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bing Liu</author>
</authors>
<title>Sentiment analysis and opinion mining.</title>
<date>2012</date>
<journal>Synthesis Lectures on Human Language Technologies,</journal>
<volume>5</volume>
<issue>1</issue>
<contexts>
<context position="1066" citStr="Liu, 2012" startWordPosition="149" endWordPosition="150">on aspect-based sentiment analysis that includes aspect category detection and sentiment polarity classification. For the aspect category detection, we combined an SVM classifier with implicit aspect indicators. For the sentiment polarity classification, we combined an SVM classifier with a lexicon-based polarity classifier. Our system outperforms the baselines on both the laptop and restaurant domains and ranks above average on the laptop domain. 1 Introduction Sentiment analysis aims at identifying people’s opinions, sentiments, attitudes, and emotions towards entities and their attributes (Liu, 2012), which has a wide range of applications on user-generated content, e.g., reviews, blogs, and tweets. Most previous work in sentiment analysis mainly attempted to identify the overall polarity of a given text or text span (Pang and Lee, 2008; Wilson et al., 2009; Zhang et al., 2009). The document-level or sentence-level sentiment classification is often insufficient for applications. Each document may talk about different entities, or express different opinions about different aspects of the entity even if the document concerns a single entity. Therefore, we need to discover the aspects of ent</context>
</contexts>
<marker>Liu, 2012</marker>
<rawString>Bing Liu. 2012. Sentiment analysis and opinion mining. Synthesis Lectures on Human Language Technologies, 5(1):1–167.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Pang</author>
<author>Lillian Lee</author>
</authors>
<title>Opinion mining and sentiment analysis.</title>
<date>2008</date>
<booktitle>Foundations and Trends in Information Retrieval,</booktitle>
<pages>2--1</pages>
<contexts>
<context position="1307" citStr="Pang and Lee, 2008" startWordPosition="187" endWordPosition="190">arity classification, we combined an SVM classifier with a lexicon-based polarity classifier. Our system outperforms the baselines on both the laptop and restaurant domains and ranks above average on the laptop domain. 1 Introduction Sentiment analysis aims at identifying people’s opinions, sentiments, attitudes, and emotions towards entities and their attributes (Liu, 2012), which has a wide range of applications on user-generated content, e.g., reviews, blogs, and tweets. Most previous work in sentiment analysis mainly attempted to identify the overall polarity of a given text or text span (Pang and Lee, 2008; Wilson et al., 2009; Zhang et al., 2009). The document-level or sentence-level sentiment classification is often insufficient for applications. Each document may talk about different entities, or express different opinions about different aspects of the entity even if the document concerns a single entity. Therefore, we need to discover the aspects of entities and determine the sentiment polarity on each entity aspect. This task is called aspect-based sentiment analysis or featurebased opinion mining (Hu and Liu, 2004). The aspect-based sentiment analysis (ABSA) task (Task 12) (Pontiki et al</context>
</contexts>
<marker>Pang, Lee, 2008</marker>
<rawString>Bo Pang and Lillian Lee. 2008. Opinion mining and sentiment analysis. Foundations and Trends in Information Retrieval, 2(1-2):1–135.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Pang</author>
<author>Lillian Lee</author>
<author>Shivakumar Vaithyanathan</author>
</authors>
<title>Thumbs up? Sentiment classification using machine learning techniques.</title>
<date>2002</date>
<booktitle>In Proceedings of EMNLP,</booktitle>
<pages>79--86</pages>
<location>Philadelphia, PA, USA.</location>
<contexts>
<context position="10838" citStr="Pang et al., 2002" startWordPosition="1772" endWordPosition="1775">,Y) −Polarity(X) 3neg(Z,Y) nroot(ROOT, Z) Polarity(X) otherwise (4) where Y E s is a negation word, and Z E s but Z E/ POS U NEG. The following examples are corresponding to three circumstances in the above equation: Overpriced and not tasty {neg(tasty, not)} Our experience did not ever get any better {neg(get, not), root(ROOT, get)} Overpriced and not tasty {root(ROOT, overpriced)} 3.3 Combination Classifier If none of the sentiment words in the lexicon appear in a sentence, the lexicon-based polarity classifier is helpless, but the SVM classifier could still determine a reasonable polarity (Pang et al., 2002). We propose a classifier combining the SVM classifier and the lexicon-based polarity classifier. It works as follows: If there is disagreement between the polarity of SVM classifier and the lexicon, we will rely on the polarity based on the lexicon if the latter is not neutral (0). Otherwise, we take the polarity of the SVM classifier. Algorithm 2 A combination classifier for sentiment polarity classification. Input: Polaritysv,,t(s, C) and Polaritylex(s, C) for an aspect category C of a test sentence s Output: Polarity(s, C) 1: if Polarity,,,,,,,,(s, C) = Polarityle,(s, C) then 2: Polarity(s</context>
</contexts>
<marker>Pang, Lee, Vaithyanathan, 2002</marker>
<rawString>Bo Pang, Lillian Lee, and Shivakumar Vaithyanathan. 2002. Thumbs up? Sentiment classification using machine learning techniques. In Proceedings of EMNLP, pages 79–86, Philadelphia, PA, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maria Pontiki</author>
<author>Haris Papageorgiou</author>
<author>Dimitrios Galanis</author>
<author>Ion Androutsopoulos</author>
<author>John Pavlopoulos</author>
<author>Suresh Manandhar</author>
</authors>
<title>SemEval-2014 Task 4: Aspect based sentiment analysis.</title>
<date>2014</date>
<booktitle>In Proceedings of SemEval,</booktitle>
<pages>27--35</pages>
<location>Dublin, Ireland.</location>
<contexts>
<context position="1995" citStr="Pontiki et al., 2014" startWordPosition="294" endWordPosition="297">entence-level sentiment classification is often insufficient for applications. Each document may talk about different entities, or express different opinions about different aspects of the entity even if the document concerns a single entity. Therefore, we need to discover the aspects of entities and determine the sentiment polarity on each entity aspect. This task is called aspect-based sentiment analysis or featurebased opinion mining (Hu and Liu, 2004). The aspect-based sentiment analysis (ABSA) task (Task 12) (Pontiki et al., 2015) in SemEval 2015 is a continuation of SemEval 2014 Task 4 (Pontiki et al., 2014). The ABSA task consists of two subtasks: In-domain ABSA and Out-domain ABSA. We participated in the former subtask that aims to identify the aspect category (i.e., an entity and attribute pair) and the sentiment polarity given a review text about a laptop or a restaurant. Each entity and attribute pair is an aspect category chosen from the predefined inventories of entity types and attribute labels per domain. For the aspect category detection, an SVM classifier with the bagof-words features can be used, and this approach is used as our baseline method. However, if a token implying an aspect,</context>
</contexts>
<marker>Pontiki, Papageorgiou, Galanis, Androutsopoulos, Pavlopoulos, Manandhar, 2014</marker>
<rawString>Maria Pontiki, Haris Papageorgiou, Dimitrios Galanis, Ion Androutsopoulos, John Pavlopoulos, and Suresh Manandhar. 2014. SemEval-2014 Task 4: Aspect based sentiment analysis. In Proceedings of SemEval, pages 27–35, Dublin, Ireland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maria Pontiki</author>
<author>Dimitrios Galanis</author>
<author>Haris Papageogiou</author>
<author>Suresh Manandhar</author>
<author>Ion Androutsopoulos</author>
</authors>
<title>SemEval-2015 Task 12: Aspect based sentiment analysis.</title>
<date>2015</date>
<booktitle>In Proceedings of SemEval,</booktitle>
<location>Denver, CO, USA.</location>
<contexts>
<context position="1915" citStr="Pontiki et al., 2015" startWordPosition="279" endWordPosition="282">and Lee, 2008; Wilson et al., 2009; Zhang et al., 2009). The document-level or sentence-level sentiment classification is often insufficient for applications. Each document may talk about different entities, or express different opinions about different aspects of the entity even if the document concerns a single entity. Therefore, we need to discover the aspects of entities and determine the sentiment polarity on each entity aspect. This task is called aspect-based sentiment analysis or featurebased opinion mining (Hu and Liu, 2004). The aspect-based sentiment analysis (ABSA) task (Task 12) (Pontiki et al., 2015) in SemEval 2015 is a continuation of SemEval 2014 Task 4 (Pontiki et al., 2014). The ABSA task consists of two subtasks: In-domain ABSA and Out-domain ABSA. We participated in the former subtask that aims to identify the aspect category (i.e., an entity and attribute pair) and the sentiment polarity given a review text about a laptop or a restaurant. Each entity and attribute pair is an aspect category chosen from the predefined inventories of entity types and attribute labels per domain. For the aspect category detection, an SVM classifier with the bagof-words features can be used, and this </context>
<context position="5176" citStr="Pontiki et al., 2015" startWordPosition="821" endWordPosition="824">is an entity (E) and attribute (A) pair, i.e., C = E#A. For instance, I received prompt service with a smile.→{Service#General} It would cost too much to repair it.→{Support#Price} For a test sentence s, the LIBSVM package can predict the probability of assigning each category E#A to s. The category should be assigned to s only if its probability is higher than a predefined threshold t. We set t to 0.2 for the restaurant reviews and to 0.12 for the laptop reviews. It’s easy to see that our SVM classifier is configured in accordance with the SVM baseline system provided by the task organizers (Pontiki et al., 2015). Aspectsvm(s) = {E#A|Prob(E#A) &gt; t} (1) 2.2 Implicit Aspect Indicator If the tokens implying aspects are beyond bag-ofwords features, the SVM classifier is unable to predict it. For example, It was totally overpriced-fish and chips was about $15. Both “overpriced” and “$15” in the above sentence are associated with the “price” aspect. These tokens are considered as the implicit aspect indicators. The different methods can be used to identify the implicit aspect indicators (Cruz-Garcia et al., 2014). In our case, we do it manually by setting a set of indicators for several aspects (see Table 1</context>
<context position="8836" citStr="Pontiki et al., 2015" startWordPosition="1435" endWordPosition="1438">evious task. The processes of the system are illustrated in Figure 2 that includes three parts: an SVM classifier, a lexiconbased polarity classifier, and their combination classifier. Figure 2: System flowchart for sentiment polarity classification. 3.1 SVM Classifier We also use the LIBSVM package (Chang and Lin, 2011) to implement an SVM classifier with linear kernel. Again, n (n = 1000) bag-of-words features are extracted from the training data. In addition, a feature that indicates the aspect category is used. Our SVM configurations are also the same with that of the SVM baseline system (Pontiki et al., 2015). The SVM classifier can predict a polarity (positive, negative, or neutral) for each aspect category C within a test sentence s. We represent three polarity labels with three respective numbers. Polaritysvm(s, C) E {1, −1, 0} (3) 3.2 Lexicon-Based Polarity Classifier If the sentiment words are beyond the bag-of-words features, the SVM classifier assigns the neutral polarity, and what’s worse, it assigns the reverse polarity if the sentence contains negation words (Zhu et al., 2014), like “not” and “no”. In fact, the lexiconbased methods can also be effective in sentiment classification (Taboa</context>
</contexts>
<marker>Pontiki, Galanis, Papageogiou, Manandhar, Androutsopoulos, 2015</marker>
<rawString>Maria Pontiki, Dimitrios Galanis, Haris Papageogiou, Suresh Manandhar, and Ion Androutsopoulos. 2015. SemEval-2015 Task 12: Aspect based sentiment analysis. In Proceedings of SemEval, Denver, CO, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maite Taboada</author>
<author>Julian Brooke</author>
<author>Milan Tofiloski</author>
<author>Kimberly Voll</author>
<author>Manfred Stede</author>
</authors>
<title>Lexicon-based methods for sentiment analysis.</title>
<date>2011</date>
<journal>Computational Linguistics,</journal>
<volume>37</volume>
<issue>2</issue>
<contexts>
<context position="3227" citStr="Taboada et al., 2011" startWordPosition="493" endWordPosition="496">rpriced”, is not taken as a feature, the SVM classifier cannot correctly identify its corresponding category. Therefore, we enhance the results from the SVM classifier by using implicit aspect indicators (Cruz-Garcia et al., 2014). For the sentiment polarity classification, an SVM classifier with the bag-of-words features plus the category feature is trained and this is used as our baseline. However, again, if a sentiment word does not appear in the training data, the SVM classifier cannot predict its polarity. Therefore, we combined the SVM classifier and a lexicon-based polarity classifier (Taboada et al., 2011). The remainder of this paper is organized as follows. In Section 2, we describe our approach to the aspect category detection. In Section 3, our approach to the sentiment polarity classification is presented. Experimental results are shown in Section 4. Section 5 provides the conclusion. 772 Proceedings of the 9th International Workshop on Semantic Evaluation (SemEval 2015), pages 772–777, Denver, Colorado, June 4-5, 2015. c�2015 Association for Computational Linguistics 2 Aspect Category Detection The aspect category detection task is to identify the specific entities and their attributes ab</context>
<context position="9452" citStr="Taboada et al., 2011" startWordPosition="1535" endWordPosition="1538">2015). The SVM classifier can predict a polarity (positive, negative, or neutral) for each aspect category C within a test sentence s. We represent three polarity labels with three respective numbers. Polaritysvm(s, C) E {1, −1, 0} (3) 3.2 Lexicon-Based Polarity Classifier If the sentiment words are beyond the bag-of-words features, the SVM classifier assigns the neutral polarity, and what’s worse, it assigns the reverse polarity if the sentence contains negation words (Zhu et al., 2014), like “not” and “no”. In fact, the lexiconbased methods can also be effective in sentiment classification (Taboada et al., 2011). We therefore adopt a simple lexicon-based method in our system. The sentiment lexicons, such as Bing Liu’s Opinion Lexicon (Hu and Liu, 2004) and MPQA Subjectivity Lexicon (Wilson et al., 2009), are used to generate our sentiment word list. We denote all positive words and negative words by POS and NEG respectively. We use the Stanford Parser package (Klein and Manning, 2003) for POS tagging and parsing. The typed dependency “neg(X, Y )” shows that one sentence contains a negation Y modifying X, and “root(ROOT, X)” shows that X is a core word. 774 Assume that one sentiment word X is in a tes</context>
</contexts>
<marker>Taboada, Brooke, Tofiloski, Voll, Stede, 2011</marker>
<rawString>Maite Taboada, Julian Brooke, Milan Tofiloski, Kimberly Voll, and Manfred Stede. 2011. Lexicon-based methods for sentiment analysis. Computational Linguistics, 37(2):267–307.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Theresa Wilson</author>
<author>Janyce Wiebe</author>
<author>Paul Hoffmann</author>
</authors>
<title>Recognizing contextual polarity: An exploration of features for phrase-level sentiment analysis.</title>
<date>2009</date>
<journal>Computational Linguistics,</journal>
<volume>35</volume>
<issue>3</issue>
<contexts>
<context position="1328" citStr="Wilson et al., 2009" startWordPosition="191" endWordPosition="194">, we combined an SVM classifier with a lexicon-based polarity classifier. Our system outperforms the baselines on both the laptop and restaurant domains and ranks above average on the laptop domain. 1 Introduction Sentiment analysis aims at identifying people’s opinions, sentiments, attitudes, and emotions towards entities and their attributes (Liu, 2012), which has a wide range of applications on user-generated content, e.g., reviews, blogs, and tweets. Most previous work in sentiment analysis mainly attempted to identify the overall polarity of a given text or text span (Pang and Lee, 2008; Wilson et al., 2009; Zhang et al., 2009). The document-level or sentence-level sentiment classification is often insufficient for applications. Each document may talk about different entities, or express different opinions about different aspects of the entity even if the document concerns a single entity. Therefore, we need to discover the aspects of entities and determine the sentiment polarity on each entity aspect. This task is called aspect-based sentiment analysis or featurebased opinion mining (Hu and Liu, 2004). The aspect-based sentiment analysis (ABSA) task (Task 12) (Pontiki et al., 2015) in SemEval 2</context>
<context position="9647" citStr="Wilson et al., 2009" startWordPosition="1568" endWordPosition="1571">ers. Polaritysvm(s, C) E {1, −1, 0} (3) 3.2 Lexicon-Based Polarity Classifier If the sentiment words are beyond the bag-of-words features, the SVM classifier assigns the neutral polarity, and what’s worse, it assigns the reverse polarity if the sentence contains negation words (Zhu et al., 2014), like “not” and “no”. In fact, the lexiconbased methods can also be effective in sentiment classification (Taboada et al., 2011). We therefore adopt a simple lexicon-based method in our system. The sentiment lexicons, such as Bing Liu’s Opinion Lexicon (Hu and Liu, 2004) and MPQA Subjectivity Lexicon (Wilson et al., 2009), are used to generate our sentiment word list. We denote all positive words and negative words by POS and NEG respectively. We use the Stanford Parser package (Klein and Manning, 2003) for POS tagging and parsing. The typed dependency “neg(X, Y )” shows that one sentence contains a negation Y modifying X, and “root(ROOT, X)” shows that X is a core word. 774 Assume that one sentiment word X is in a test sentence s and X E POS U NEG, if X E POS, then Polarity(X) = 1, otherwise Polarity(X) = −1. The polarity for the aspect category is determined by, −Polarity(X) 3neg(X,Y) −Polarity(X) 3neg(Z,Y) </context>
</contexts>
<marker>Wilson, Wiebe, Hoffmann, 2009</marker>
<rawString>Theresa Wilson, Janyce Wiebe, and Paul Hoffmann. 2009. Recognizing contextual polarity: An exploration of features for phrase-level sentiment analysis. Computational Linguistics, 35(3):399–433.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Changli Zhang</author>
<author>Daniel Zeng</author>
<author>Jiexun Li</author>
<author>Fei-Yue Wang</author>
<author>Wanli Zuo</author>
</authors>
<title>Sentiment analysis of Chinese documents: From sentence to document level.</title>
<date>2009</date>
<journal>Journal of the American Society for Information Science and Technology,</journal>
<volume>60</volume>
<issue>12</issue>
<contexts>
<context position="1349" citStr="Zhang et al., 2009" startWordPosition="195" endWordPosition="198">classifier with a lexicon-based polarity classifier. Our system outperforms the baselines on both the laptop and restaurant domains and ranks above average on the laptop domain. 1 Introduction Sentiment analysis aims at identifying people’s opinions, sentiments, attitudes, and emotions towards entities and their attributes (Liu, 2012), which has a wide range of applications on user-generated content, e.g., reviews, blogs, and tweets. Most previous work in sentiment analysis mainly attempted to identify the overall polarity of a given text or text span (Pang and Lee, 2008; Wilson et al., 2009; Zhang et al., 2009). The document-level or sentence-level sentiment classification is often insufficient for applications. Each document may talk about different entities, or express different opinions about different aspects of the entity even if the document concerns a single entity. Therefore, we need to discover the aspects of entities and determine the sentiment polarity on each entity aspect. This task is called aspect-based sentiment analysis or featurebased opinion mining (Hu and Liu, 2004). The aspect-based sentiment analysis (ABSA) task (Task 12) (Pontiki et al., 2015) in SemEval 2015 is a continuation</context>
</contexts>
<marker>Zhang, Zeng, Li, Wang, Zuo, 2009</marker>
<rawString>Changli Zhang, Daniel Zeng, Jiexun Li, Fei-Yue Wang, and Wanli Zuo. 2009. Sentiment analysis of Chinese documents: From sentence to document level. Journal of the American Society for Information Science and Technology, 60(12):2474–2487.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaodan Zhu</author>
<author>Hongyu Guo</author>
<author>Saif Mohammad</author>
<author>Svetlana Kiritchenko</author>
</authors>
<title>An empirical study on the effect of negation words on sentiment.</title>
<date>2014</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>304--313</pages>
<location>Baltimore, MD, USA.</location>
<contexts>
<context position="9323" citStr="Zhu et al., 2014" startWordPosition="1514" endWordPosition="1517"> the aspect category is used. Our SVM configurations are also the same with that of the SVM baseline system (Pontiki et al., 2015). The SVM classifier can predict a polarity (positive, negative, or neutral) for each aspect category C within a test sentence s. We represent three polarity labels with three respective numbers. Polaritysvm(s, C) E {1, −1, 0} (3) 3.2 Lexicon-Based Polarity Classifier If the sentiment words are beyond the bag-of-words features, the SVM classifier assigns the neutral polarity, and what’s worse, it assigns the reverse polarity if the sentence contains negation words (Zhu et al., 2014), like “not” and “no”. In fact, the lexiconbased methods can also be effective in sentiment classification (Taboada et al., 2011). We therefore adopt a simple lexicon-based method in our system. The sentiment lexicons, such as Bing Liu’s Opinion Lexicon (Hu and Liu, 2004) and MPQA Subjectivity Lexicon (Wilson et al., 2009), are used to generate our sentiment word list. We denote all positive words and negative words by POS and NEG respectively. We use the Stanford Parser package (Klein and Manning, 2003) for POS tagging and parsing. The typed dependency “neg(X, Y )” shows that one sentence con</context>
</contexts>
<marker>Zhu, Guo, Mohammad, Kiritchenko, 2014</marker>
<rawString>Xiaodan Zhu, Hongyu Guo, Saif Mohammad, and Svetlana Kiritchenko. 2014. An empirical study on the effect of negation words on sentiment. In Proceedings of ACL, pages 304–313, Baltimore, MD, USA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>