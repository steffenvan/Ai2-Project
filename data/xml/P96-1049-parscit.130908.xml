<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000477">
<title confidence="0.923073">
On Reversing the Generation Process in Optimality Theory
</title>
<author confidence="0.635606">
J. Eric Fosler
</author>
<affiliation confidence="0.561893">
U.C. Berkeley and International Computer Science Institute
</affiliation>
<address confidence="0.318951">
1947 Center Street, Suite 600, Berkeley, CA 94704
</address>
<email confidence="0.8533">
fosleraicsi.berkeley.edu
</email>
<sectionHeader confidence="0.995706" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999196">
Optimality Theory, a constraint-based phonol-
ogy and morphology paradigm, has allowed
linguists to make elegant analyses of many
phenomena, including infixation and redupli-
cation. In this work-in-progress, we build on
the work of Ellison (1994) to investigate the
possibility of using OT as a parsing tool that
derives underlying forms from surface forms.
</bodyText>
<sectionHeader confidence="0.999382" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999176444444445">
Optimality Theory (Prince and Smolensky, 1993) is a
constraint-based phonological and morphological system
that allows violable constraints in deriving output sur-
face forms from underlying forms. In OT a system of
constraints selects an &amp;quot;optimal&amp;quot; surface output from a
set of candidates. The methodology allows succinct anal-
yses of phenomena such as infixation and reduplication
that were difficult to describe under sets of transforma-
tional rules.
Several computational methods for OT have been pro-
duced within the short amount of time since Prince and
Smolensky&apos;s paper (Ellison, 1994; Tesar, 1995; Ham-
mond, 1995). These systems were designed as genera-
tion systems, deriving surface forms from an underlying
lexicon. There have, however, been no computational
models of OT parsers that derive underlying forms from
the surface form.&apos; In this work, we lay the theoretical
groundwork for using OT as a parsing tool.
</bodyText>
<sectionHeader confidence="0.946557" genericHeader="method">
2 Comparing Derivational Methods
to Optimality Theory
</sectionHeader>
<bodyText confidence="0.996340818181818">
In traditional computational phonology/morphology
systems such as two-level phonology (Koskenniemi,
1983), grammars that generate surface forms are invert-
ible, allowing parsing back into underlying forms. In a
derivational framework, the grammar converts underly-
ing forms to surface outputs via transformations; the in-
put and output share the same space (Figure la). In the
one-level version of OT that most computational meth-
ods use, the space is populated with candidate outputs
&apos;Some of the computational work in OT confusingly
uses the term &amp;quot;parsing&amp;quot; to refer to generation.
</bodyText>
<figureCaption confidence="0.7368695">
a. Derivational Phonology b. Optimality Theory
Figure 1: Search Spaces Within Different Paradigms
</figureCaption>
<bodyText confidence="0.990067">
created by a generator function GEN operating on in-
put strings. The search narrows in on an optimal out-
put (Figure lb) using evaluation constraints in a process
called EvAL; successively smaller boundaries are cut out
by the constraints until only one candidate remains. It
is easy to see why the derivational method can be run
backward: it just retraces derivational links in the graph.
It is not obvious, though, how the input can be found
from the search space in OT.
</bodyText>
<sectionHeader confidence="0.992061" genericHeader="method">
3 Tagalog Infixation
</sectionHeader>
<bodyText confidence="0.986191434782608">
Infixation has traditionally been a difficult problem
for computational models that use two-level phonology
(Sproat, 1992). Infixation in Tagalog, however, has been
modeled using OT (McCarthy and Prince, 1995). In
Tagalog, the urn affix can appear as a prefix, or &amp;quot;move&amp;quot;
slightly into the word to which it is attaching (French,
1988).
Root with urn Gloss
alis um-alis &amp;quot;leave&amp;quot;
sulat s-um-ulat &amp;quot;write&amp;quot;
gradwet gr-um-adwet &amp;quot;graduate&amp;quot;
McCarthy and Prince analyze um as a prefix, which
moves into a word to reduce the number of coda con-
sonants. They postulate two competing constraints,
ALIGN-PREFIX and the higher-ranked NOCODA. ALIGN-
PREFIX states that the prefix should remain as close to
the front of the word as possible. NoCoDA penalizes
syllables with coda consonants.
In the OT derivation of grumadwet from um+gradwet
(Figure 2), the winning candidate violates NoCoDA
twice, while the first two candidates violate it three
times. The final candidate is pruned since it violates
the ALIGN constraint more times than the winner.
</bodyText>
<page confidence="0.996821">
354
</page>
<figure confidence="0.991264">
Candidates NoCoda - Align
um.grad.wet * * *!
i
gum.rad.wet * *
V gru.mad.wet ** **
gra.dum.wet ** * * *!*
</figure>
<figureCaption confidence="0.787318">
Figure 2: OT Evaluation for Tagalog Infixation
</figureCaption>
<figure confidence="0.97625025">
(Morpheme Structure) ( P PWWWWWWW) WPPWWWWWW` WWPPWWWW
(Syllable Structure) NC OONC ONC ONCONCONC OONONCONC
(Phoneme Structure) umgradwe t gum r a dw e t, grumadwet&apos;
Candi Cand2 Cand3
</figure>
<figureCaption confidence="0.967734">
Figure 3: Candidate outputs for um+gradwet in an
FST
</figureCaption>
<sectionHeader confidence="0.947642" genericHeader="method">
4 Ellison&apos;s Conversion Method
</sectionHeader>
<bodyText confidence="0.998730904761905">
Ellison (1994) provides a paradigm for converting Opti-
mality Theory constraints into Finite State Transducers.
He requires that EVAL constraints output binary marks
when ranking candidates and be describable as a regular
language; the output of GEN must also be describable
by a regular language. As Ellison points out, most con-
straints can be reformulated to be binary. He is able
to build FST representations for the constraints that he
considers, showing them to be regular.
For the Tagalog example, GEN will output the regu-
lar language shown in Figure 3 for the first three candi-
dates (umgradwet, gumradwet, and grumadwet).2 Each
candidate consists of segments associated with a syllable
structure position and a morpheme structure marker.3
We now consider the ALIGN-PREFIX constraint, re-
stricting the prefix to occur as early in the word as pos-
sible. This is encoded as an FST that writes marks on
an output &amp;quot;Harmony Masks&amp;quot; tape. A &amp;quot;1&amp;quot; is written
for any word (W) morphological material that precedes
prefix (P) material, and a &amp;quot;0&amp;quot; is written for any other
segment.
</bodyText>
<figure confidence="0.7648845">
(Morpheme Structure) ( w1 * p0 * &apos;‘),■/ ) ( w0
(Syllable Structure) ) •• •• •• :
</figure>
<figureCaption confidence="0.998587">
Figure 4: ALIGN-PREFIX FST Regular Language
</figureCaption>
<bodyText confidence="0.989643214285714">
The regular language generated by this FST (Figure 4)
has a very simple structure. Any Ws before Ps on the
Morpheme Structure tape get a harmony violation mark.
Taking the product of this language with the optimal
candidate scores the candidate (Figure 5). The harmony
marks include two non-harmonic marks (i.e. &amp;quot;1&amp;quot;s); in the
OT tableau in Figure 2, we see that ALIGN also gives two
marks to the optimal candidate.
We can encode a similar FST for NoCoDA. This FST
examines the syllable structure tape to give harmony
marks (Figure 6)— codas (Cs) get a harmony violation
mark, onsets (0) and nuclei (N) are unmarked. As in the
OT tableau, the winning candidate (Figure 7) violates
No CODA twice.
</bodyText>
<footnote confidence="0.989162">
3For brevity, we are not considering other candidates.
3We have extended Ellison&apos;s work by adding a third
tape that marks segments as belonging to the prefix or
to the word.
</footnote>
<table confidence="0.98383125">
(Harmony Marks)( 1 1 0 0 0 0 0 0 0
(Morpheme Structure) WWP PWWWWW
(Syllable Structure) 0 ONONC ONC
(Phonetne Structure) gr umadwe t
</table>
<figureCaption confidence="0.813058">
Figure 5: Scoring of grumadwet by ALIGN-PREFIX
</figureCaption>
<figure confidence="0.66740625">
(Harmony Marks) ( 1
(Morpheme Structure) •
(Syllable Structure) o
(Phoneme Structure) •
</figure>
<figureCaption confidence="0.998781">
Figure 6: Regular Language generated by NoCoDA
</figureCaption>
<bodyText confidence="0.998017190476191">
Once the OT constraints are represented as FSTs,
combining all of the EVAL constraints into one trans-
ducer is a straightforward product. Ellison augments
the product procedure so that harmony marks are con-
catenated by the resulting transducer.
We have used two different types of harmony marks
in the ALIGN-PREFIX and NoCcum FSTs, representing
the ranking of the two rules as suggested by McCarthy
and Prince. The higher-ranked NoCoak constraint out-
puts &amp;quot;2&amp;quot; marks while ALIGN-PREFIX outputs &amp;quot;1&amp;quot; marks.4
Harmonic comparisons between the candidates will con-
sider the candidates with the smallest number of &amp;quot;2&amp;quot;
marks first, followed by the smallest number of &amp;quot;1&amp;quot;
marks. Marks are not added together, rather, the count
of each type of mark is the deciding factor in evaluation.5
The output of GEN and the constraints of EVAL are
combined into a single transducer by taking the product
of all of the FSTs. For the Tagalog example, the output
rankings for the candidates are shown in Figure 8. Using
the harmonic marks to prune the resulting transducer
reveals the optimal candidate (Figure 9).
</bodyText>
<sectionHeader confidence="0.889221" genericHeader="method">
5 Extensions to Parsing
</sectionHeader>
<bodyText confidence="0.998940428571429">
Ellison&apos;s approach gives us an elegant method of per-
forming OT generation using finite state automata. Nev-
ertheless, the system cannot parse the output string
back into underlying surface forms. In a derivational
paradigm (Figure la) , the input and output forms are
enclosed in the same space. The derivational grammar
is a transform that one can invert using FSTs, searching
for the input using the output.
Ellison&apos;s FSTs transform output candidates to har-
mony marks; even so, the inversion of these FSTs are
useless. The crucial point is that GEN hides the surface-
form-to-candidate mapping; in Ellison&apos;s system the EVAL
portion of the system only combines with the output of
GEN, so the mapping is lost. For invertability it is crit-
ical that the FST have access to both input and output
forms.
In the version of OT (one-level OT) Ellison incorpo-
rated into his system, outputs of GEN are constrained
4Ellison uses only one type of mark and determines
rank ordering from the relative positions of marks for
each output segment. These two methods are equivalent.
</bodyText>
<equation confidence="0.7200395">
50ne &amp;quot;2&amp;quot; is worse than two &amp;quot;1&amp;quot;s.
(Harmony Marks)/ 0 0 0 0 2 0 0 2
(
(Morpheme Structure) WW PP WWWWW
</equation>
<footnote confidence="0.6323165">
(Syllable Structure) OONONCONC
(Phoneme Structure) gr uma dw e t
</footnote>
<figureCaption confidence="0.999926">
Figure 7: Scoring of grumadwet by NoCoDA
</figureCaption>
<figure confidence="0.94849425">
0
• •
• •
355
Marks) ( ocw00000027 ( 01002o0002000002) olamaccan0000no)
(tdoghemeannTeureue) PPWWWWWWW WPPWWWWWW WWPPWWWWW
thibleStructue) NCOONCONC ONCONCONC OONONCONC
Stlucene) umgradwet gumradwet grumadwet
</figure>
<figureCaption confidence="0.993269">
Figure 8: Output of OT-FST System
</figureCaption>
<figure confidence="0.8286242">
(
(Harmony Marks) 101000000002000002
(Morpheme Structure) WWPPWWWWW
(Syllable Structure) OONONCONC
(Phoneme Structure) grumadwet
</figure>
<figureCaption confidence="0.99932">
Figure 9: Pruned Output of OT-FST System
</figureCaption>
<bodyText confidence="0.999902607142857">
to be similar to the input. McCarthy St Prince (1994)
abandon this constraint principle, and use faithfulness
constraints in EVAL to achieve the same effect within
&amp;quot;modern&amp;quot; two-level OT. This will be a critical move for
the OT-FST paradigm.
In two-level OT, GEN generates all strings; faith-
fulness constraints in EVAL minimize the inserted and
deleted material between underlying and candidate sur-
face forms. By specifically modeling the faithfulness con-
straints, we now allow the FST to have access to the
input-output correspondences crucial for searching for
underlying forms. The remaining question, however, is
whether faithfulness constraints can be modeled by reg-
ular grammars. Several formulations of two-level OT
faithfulness constraints are discussed by McCarthy and
Prince (1994) and Orgun (1994). To illustrate the fla-
vor of these constraints and how they might be regular-
izable, we consider two constraints, CORR and MATCH
(named for their similarity to Orgun&apos;s constraints). For
our Tagalog example, we add two tapes for the under-
lying word and prefix forms (Figure 10). The CORR
constraint requires that for every element in the surface
phoneme string there is a segment in the underlying word
or prefix, and vice versa. MATCH constrains the surface
string phoneme to match6 those in the word and prefix,
and vice versa (Figure 11). Using these constraints, the
OT-FSTs should be able to generate and parse in the
Tagalog example.
</bodyText>
<figure confidence="0.918475">
(WWPPWWWWI4
OONONCONC)
grumadwet
(Word Phonemes) (gr a dw we t)
(Prefix Phonemes) ( u m)
</figure>
<figureCaption confidence="0.980052">
Figure 10: Adding Word and Prefix Tapes
</figureCaption>
<bodyText confidence="0.999985">
The additional computational complexity for imple-
menting this type of system may be quite large; the
search space for determining unknown strings at parse
time will make for a slow implementation unless suit-
able heuristics are found for searching over each type of
string. Systems of this type are likely to become even
more complex as more information such as moraic struc-
ture is added. We envision that these heuristics will be
based on the harmony mark scoring of the FST, but the
exact nature of this is left to future work.
</bodyText>
<sectionHeader confidence="0.997556" genericHeader="conclusions">
6 Conclusions &amp; Future Work
</sectionHeader>
<footnote confidence="0.9693266">
Current Computational Optimality Theory systems pro-
vide solutions for OT generation, but deriving underly-
ing forms from surface forms is not possible within these
6Here we mean be identical to; this definition can be
extended with features and underspecified elements.
</footnote>
<table confidence="0.940893416666667">
(Harmony Marts) 0 0 1
(Morpheme Struelme) I W P
(Phoneme Structure) • • •
(Wont Phonemes) •
(Prefix Phonemes) •
COIT Constraint
(
(Harmony Mance) 0
Morpheme Structure) W(Phoneme Structure) a
(Word Phonemes) a
(Prefix Phoneme)
Match Constraint
</table>
<figureCaption confidence="0.880493">
Figure 11: Faithfulness Constraints
</figureCaption>
<bodyText confidence="0.99970995">
systems. In order to extend any generation system to an
OT parsing system, two-level Optimality Theory should
be a critical component, since it moves the hidden rela-
tionship between input and output out of GEN and into
EVAL. With two-level OT, the mapping from input to
output can be directly operated upon by computational
theories.
We have proposed using two-level OT to extend El-
lison&apos;s technique for representing constraints as finite
state transducers. By explicitly representing the input-
to-output mapping using two-level OT, we have laid the
theoretical groundwork for recovering underlying forms
from surface forms.
In future work, we will implement the extensions to
Ellison&apos;s algorithm allowing us to morphologically ana-
lyze cases like the Tagalog example. Search complexity
will, however, be an issue in the implementation of the
system; after an initial brute-force implementation, work
must be focused on determining how the harmony marks
can be used to heuristically guide the parser search.
</bodyText>
<sectionHeader confidence="0.999075" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99995975">
We would like to thank Dan Jurafsky, Orhan Orgun,
Sharon Inkelas, Nelson Morgan, Su-Lin Wu, and three
anonymous ACL reviewers for comments, suggestions,
and support.
</bodyText>
<sectionHeader confidence="0.999547" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99730448">
T.M. Ellison. Phonological derivation in optimality theory. In
COLING-94, 1994.
K. French. Insights into Tagalog: Reduplication, infrxation, and
Stress from Nonlinear Phonology. M.A. Thesis, Summer In-
stitute of Linguistics and University of Texas, Arlington, 1988.
M. Hammond. Syllable parsing in English and French. Rutgers
Optimality Archive, 1995.
L. Karttunen. Kimmo: A general morphological processor. In
Texas Linguistics Forum 22, 1983.
K. Koskenniemi. Two-Level Morphology: A General Compu-
tational Model for Word-Form Recognition and Production.
Ph.D. thesis, University of Helsinki, 1983.
J. McCarthy and A. Prince. Prosodic morphology, parts 1 and 2.
Prosodic Morphology Workshop, OTS, Utrecht, 1994.
J. McCarthy and A. Prince. Prosodic morphology. In J. Gold-
smith, editor, Handbook of Phonological Theory, pages 318-
366. Basil Blackwell Ltd., 1995.
0. Orgun. Containment: Why and why not. Unpublished ins., U.
of California-Berkeley, Department of Linguistics, July 1994.
A. Prince and P. Smolensky. Optimality theory. Unpublished
ma., Rutgers University, 1993.
R. Sproat. Morphology and Computation. MIT Press, Cam-
bridge, MA, 1992.
B. Tesar. Computational Optimality Theory. Ph.D. Thesis, U.
of Colorado-Boulder, Department of Computer Science, 1995.
</reference>
<figure confidence="0.9996521">
(Morpheme Structure)
(Syllable Structure)
(Surface Phoneme Structure)
0 0
1&apos;3 a
a
•
1
•
•
</figure>
<page confidence="0.978393">
356
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.996119">
<title confidence="0.999976">On Reversing the Generation Process in Optimality Theory</title>
<author confidence="0.999709">J Eric Fosler</author>
<affiliation confidence="0.99984">U.C. Berkeley and International Computer Science Institute</affiliation>
<address confidence="0.999944">1947 Center Street, Suite 600, Berkeley, CA 94704</address>
<email confidence="0.999723">fosleraicsi.berkeley.edu</email>
<abstract confidence="0.999640777777778">Optimality Theory, a constraint-based phonology and morphology paradigm, has allowed linguists to make elegant analyses of many phenomena, including infixation and reduplication. In this work-in-progress, we build on the work of Ellison (1994) to investigate the possibility of using OT as a parsing tool that derives underlying forms from surface forms.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T M Ellison</author>
</authors>
<title>Phonological derivation in optimality theory.</title>
<date>1994</date>
<booktitle>In COLING-94,</booktitle>
<contexts>
<context position="1171" citStr="Ellison, 1994" startWordPosition="169" endWordPosition="170">face forms. 1 Introduction Optimality Theory (Prince and Smolensky, 1993) is a constraint-based phonological and morphological system that allows violable constraints in deriving output surface forms from underlying forms. In OT a system of constraints selects an &amp;quot;optimal&amp;quot; surface output from a set of candidates. The methodology allows succinct analyses of phenomena such as infixation and reduplication that were difficult to describe under sets of transformational rules. Several computational methods for OT have been produced within the short amount of time since Prince and Smolensky&apos;s paper (Ellison, 1994; Tesar, 1995; Hammond, 1995). These systems were designed as generation systems, deriving surface forms from an underlying lexicon. There have, however, been no computational models of OT parsers that derive underlying forms from the surface form.&apos; In this work, we lay the theoretical groundwork for using OT as a parsing tool. 2 Comparing Derivational Methods to Optimality Theory In traditional computational phonology/morphology systems such as two-level phonology (Koskenniemi, 1983), grammars that generate surface forms are invertible, allowing parsing back into underlying forms. In a deriva</context>
<context position="4191" citStr="Ellison (1994)" startWordPosition="646" endWordPosition="647"> violates NoCoDA twice, while the first two candidates violate it three times. The final candidate is pruned since it violates the ALIGN constraint more times than the winner. 354 Candidates NoCoda - Align um.grad.wet * * *! i gum.rad.wet * * V gru.mad.wet ** ** gra.dum.wet ** * * *!* Figure 2: OT Evaluation for Tagalog Infixation (Morpheme Structure) ( P PWWWWWWW) WPPWWWWWW` WWPPWWWW (Syllable Structure) NC OONC ONC ONCONCONC OONONCONC (Phoneme Structure) umgradwe t gum r a dw e t, grumadwet&apos; Candi Cand2 Cand3 Figure 3: Candidate outputs for um+gradwet in an FST 4 Ellison&apos;s Conversion Method Ellison (1994) provides a paradigm for converting Optimality Theory constraints into Finite State Transducers. He requires that EVAL constraints output binary marks when ranking candidates and be describable as a regular language; the output of GEN must also be describable by a regular language. As Ellison points out, most constraints can be reformulated to be binary. He is able to build FST representations for the constraints that he considers, showing them to be regular. For the Tagalog example, GEN will output the regular language shown in Figure 3 for the first three candidates (umgradwet, gumradwet, an</context>
</contexts>
<marker>Ellison, 1994</marker>
<rawString>T.M. Ellison. Phonological derivation in optimality theory. In COLING-94, 1994.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K French</author>
</authors>
<title>Insights into Tagalog: Reduplication, infrxation, and Stress from Nonlinear Phonology.</title>
<date>1988</date>
<tech>M.A. Thesis,</tech>
<institution>Summer Institute of Linguistics and University of Texas,</institution>
<location>Arlington,</location>
<contexts>
<context position="3057" citStr="French, 1988" startWordPosition="465" endWordPosition="466">t out by the constraints until only one candidate remains. It is easy to see why the derivational method can be run backward: it just retraces derivational links in the graph. It is not obvious, though, how the input can be found from the search space in OT. 3 Tagalog Infixation Infixation has traditionally been a difficult problem for computational models that use two-level phonology (Sproat, 1992). Infixation in Tagalog, however, has been modeled using OT (McCarthy and Prince, 1995). In Tagalog, the urn affix can appear as a prefix, or &amp;quot;move&amp;quot; slightly into the word to which it is attaching (French, 1988). Root with urn Gloss alis um-alis &amp;quot;leave&amp;quot; sulat s-um-ulat &amp;quot;write&amp;quot; gradwet gr-um-adwet &amp;quot;graduate&amp;quot; McCarthy and Prince analyze um as a prefix, which moves into a word to reduce the number of coda consonants. They postulate two competing constraints, ALIGN-PREFIX and the higher-ranked NOCODA. ALIGNPREFIX states that the prefix should remain as close to the front of the word as possible. NoCoDA penalizes syllables with coda consonants. In the OT derivation of grumadwet from um+gradwet (Figure 2), the winning candidate violates NoCoDA twice, while the first two candidates violate it three times. T</context>
</contexts>
<marker>French, 1988</marker>
<rawString>K. French. Insights into Tagalog: Reduplication, infrxation, and Stress from Nonlinear Phonology. M.A. Thesis, Summer Institute of Linguistics and University of Texas, Arlington, 1988. M. Hammond. Syllable parsing in English and French. Rutgers Optimality Archive, 1995.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Karttunen</author>
</authors>
<title>Kimmo: A general morphological processor.</title>
<date>1983</date>
<booktitle>In Texas Linguistics Forum 22,</booktitle>
<marker>Karttunen, 1983</marker>
<rawString>L. Karttunen. Kimmo: A general morphological processor. In Texas Linguistics Forum 22, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Koskenniemi</author>
</authors>
<title>Two-Level Morphology: A General Computational Model for Word-Form Recognition and Production.</title>
<date>1983</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Helsinki,</institution>
<contexts>
<context position="1660" citStr="Koskenniemi, 1983" startWordPosition="240" endWordPosition="241">computational methods for OT have been produced within the short amount of time since Prince and Smolensky&apos;s paper (Ellison, 1994; Tesar, 1995; Hammond, 1995). These systems were designed as generation systems, deriving surface forms from an underlying lexicon. There have, however, been no computational models of OT parsers that derive underlying forms from the surface form.&apos; In this work, we lay the theoretical groundwork for using OT as a parsing tool. 2 Comparing Derivational Methods to Optimality Theory In traditional computational phonology/morphology systems such as two-level phonology (Koskenniemi, 1983), grammars that generate surface forms are invertible, allowing parsing back into underlying forms. In a derivational framework, the grammar converts underlying forms to surface outputs via transformations; the input and output share the same space (Figure la). In the one-level version of OT that most computational methods use, the space is populated with candidate outputs &apos;Some of the computational work in OT confusingly uses the term &amp;quot;parsing&amp;quot; to refer to generation. a. Derivational Phonology b. Optimality Theory Figure 1: Search Spaces Within Different Paradigms created by a generator funct</context>
</contexts>
<marker>Koskenniemi, 1983</marker>
<rawString>K. Koskenniemi. Two-Level Morphology: A General Computational Model for Word-Form Recognition and Production. Ph.D. thesis, University of Helsinki, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J McCarthy</author>
<author>A Prince</author>
</authors>
<title>Prosodic morphology, parts 1 and 2. Prosodic Morphology Workshop,</title>
<date>1994</date>
<location>OTS, Utrecht,</location>
<contexts>
<context position="10143" citStr="McCarthy and Prince (1994)" startWordPosition="1612" endWordPosition="1615">&amp;quot;modern&amp;quot; two-level OT. This will be a critical move for the OT-FST paradigm. In two-level OT, GEN generates all strings; faithfulness constraints in EVAL minimize the inserted and deleted material between underlying and candidate surface forms. By specifically modeling the faithfulness constraints, we now allow the FST to have access to the input-output correspondences crucial for searching for underlying forms. The remaining question, however, is whether faithfulness constraints can be modeled by regular grammars. Several formulations of two-level OT faithfulness constraints are discussed by McCarthy and Prince (1994) and Orgun (1994). To illustrate the flavor of these constraints and how they might be regularizable, we consider two constraints, CORR and MATCH (named for their similarity to Orgun&apos;s constraints). For our Tagalog example, we add two tapes for the underlying word and prefix forms (Figure 10). The CORR constraint requires that for every element in the surface phoneme string there is a segment in the underlying word or prefix, and vice versa. MATCH constrains the surface string phoneme to match6 those in the word and prefix, and vice versa (Figure 11). Using these constraints, the OT-FSTs shoul</context>
</contexts>
<marker>McCarthy, Prince, 1994</marker>
<rawString>J. McCarthy and A. Prince. Prosodic morphology, parts 1 and 2. Prosodic Morphology Workshop, OTS, Utrecht, 1994.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J McCarthy</author>
<author>A Prince</author>
</authors>
<title>Prosodic morphology.</title>
<date>1995</date>
<booktitle>Handbook of Phonological Theory,</booktitle>
<pages>318--366</pages>
<editor>In J. Goldsmith, editor,</editor>
<publisher>Basil Blackwell Ltd.,</publisher>
<contexts>
<context position="2933" citStr="McCarthy and Prince, 1995" startWordPosition="440" endWordPosition="443">narrows in on an optimal output (Figure lb) using evaluation constraints in a process called EvAL; successively smaller boundaries are cut out by the constraints until only one candidate remains. It is easy to see why the derivational method can be run backward: it just retraces derivational links in the graph. It is not obvious, though, how the input can be found from the search space in OT. 3 Tagalog Infixation Infixation has traditionally been a difficult problem for computational models that use two-level phonology (Sproat, 1992). Infixation in Tagalog, however, has been modeled using OT (McCarthy and Prince, 1995). In Tagalog, the urn affix can appear as a prefix, or &amp;quot;move&amp;quot; slightly into the word to which it is attaching (French, 1988). Root with urn Gloss alis um-alis &amp;quot;leave&amp;quot; sulat s-um-ulat &amp;quot;write&amp;quot; gradwet gr-um-adwet &amp;quot;graduate&amp;quot; McCarthy and Prince analyze um as a prefix, which moves into a word to reduce the number of coda consonants. They postulate two competing constraints, ALIGN-PREFIX and the higher-ranked NOCODA. ALIGNPREFIX states that the prefix should remain as close to the front of the word as possible. NoCoDA penalizes syllables with coda consonants. In the OT derivation of grumadwet from </context>
</contexts>
<marker>McCarthy, Prince, 1995</marker>
<rawString>J. McCarthy and A. Prince. Prosodic morphology. In J. Goldsmith, editor, Handbook of Phonological Theory, pages 318-366. Basil Blackwell Ltd., 1995.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Orgun</author>
</authors>
<title>Containment: Why and why not. Unpublished ins.,</title>
<date>1994</date>
<institution>U. of California-Berkeley, Department of Linguistics,</institution>
<contexts>
<context position="10160" citStr="Orgun (1994)" startWordPosition="1617" endWordPosition="1618">l be a critical move for the OT-FST paradigm. In two-level OT, GEN generates all strings; faithfulness constraints in EVAL minimize the inserted and deleted material between underlying and candidate surface forms. By specifically modeling the faithfulness constraints, we now allow the FST to have access to the input-output correspondences crucial for searching for underlying forms. The remaining question, however, is whether faithfulness constraints can be modeled by regular grammars. Several formulations of two-level OT faithfulness constraints are discussed by McCarthy and Prince (1994) and Orgun (1994). To illustrate the flavor of these constraints and how they might be regularizable, we consider two constraints, CORR and MATCH (named for their similarity to Orgun&apos;s constraints). For our Tagalog example, we add two tapes for the underlying word and prefix forms (Figure 10). The CORR constraint requires that for every element in the surface phoneme string there is a segment in the underlying word or prefix, and vice versa. MATCH constrains the surface string phoneme to match6 those in the word and prefix, and vice versa (Figure 11). Using these constraints, the OT-FSTs should be able to gene</context>
</contexts>
<marker>Orgun, 1994</marker>
<rawString>0. Orgun. Containment: Why and why not. Unpublished ins., U. of California-Berkeley, Department of Linguistics, July 1994.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Prince</author>
<author>P Smolensky</author>
</authors>
<title>Optimality theory. Unpublished ma.,</title>
<date>1993</date>
<institution>Rutgers University,</institution>
<contexts>
<context position="631" citStr="Prince and Smolensky, 1993" startWordPosition="85" endWordPosition="88">eversing the Generation Process in Optimality Theory J. Eric Fosler U.C. Berkeley and International Computer Science Institute 1947 Center Street, Suite 600, Berkeley, CA 94704 fosleraicsi.berkeley.edu Abstract Optimality Theory, a constraint-based phonology and morphology paradigm, has allowed linguists to make elegant analyses of many phenomena, including infixation and reduplication. In this work-in-progress, we build on the work of Ellison (1994) to investigate the possibility of using OT as a parsing tool that derives underlying forms from surface forms. 1 Introduction Optimality Theory (Prince and Smolensky, 1993) is a constraint-based phonological and morphological system that allows violable constraints in deriving output surface forms from underlying forms. In OT a system of constraints selects an &amp;quot;optimal&amp;quot; surface output from a set of candidates. The methodology allows succinct analyses of phenomena such as infixation and reduplication that were difficult to describe under sets of transformational rules. Several computational methods for OT have been produced within the short amount of time since Prince and Smolensky&apos;s paper (Ellison, 1994; Tesar, 1995; Hammond, 1995). These systems were designed a</context>
</contexts>
<marker>Prince, Smolensky, 1993</marker>
<rawString>A. Prince and P. Smolensky. Optimality theory. Unpublished ma., Rutgers University, 1993.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Sproat</author>
</authors>
<title>Morphology and Computation.</title>
<date>1992</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA,</location>
<contexts>
<context position="2846" citStr="Sproat, 1992" startWordPosition="429" endWordPosition="430">reated by a generator function GEN operating on input strings. The search narrows in on an optimal output (Figure lb) using evaluation constraints in a process called EvAL; successively smaller boundaries are cut out by the constraints until only one candidate remains. It is easy to see why the derivational method can be run backward: it just retraces derivational links in the graph. It is not obvious, though, how the input can be found from the search space in OT. 3 Tagalog Infixation Infixation has traditionally been a difficult problem for computational models that use two-level phonology (Sproat, 1992). Infixation in Tagalog, however, has been modeled using OT (McCarthy and Prince, 1995). In Tagalog, the urn affix can appear as a prefix, or &amp;quot;move&amp;quot; slightly into the word to which it is attaching (French, 1988). Root with urn Gloss alis um-alis &amp;quot;leave&amp;quot; sulat s-um-ulat &amp;quot;write&amp;quot; gradwet gr-um-adwet &amp;quot;graduate&amp;quot; McCarthy and Prince analyze um as a prefix, which moves into a word to reduce the number of coda consonants. They postulate two competing constraints, ALIGN-PREFIX and the higher-ranked NOCODA. ALIGNPREFIX states that the prefix should remain as close to the front of the word as possible. N</context>
</contexts>
<marker>Sproat, 1992</marker>
<rawString>R. Sproat. Morphology and Computation. MIT Press, Cambridge, MA, 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Tesar</author>
</authors>
<title>Computational Optimality Theory.</title>
<date>1995</date>
<tech>Ph.D. Thesis,</tech>
<institution>U. of Colorado-Boulder, Department of Computer Science,</institution>
<contexts>
<context position="1184" citStr="Tesar, 1995" startWordPosition="171" endWordPosition="172">ntroduction Optimality Theory (Prince and Smolensky, 1993) is a constraint-based phonological and morphological system that allows violable constraints in deriving output surface forms from underlying forms. In OT a system of constraints selects an &amp;quot;optimal&amp;quot; surface output from a set of candidates. The methodology allows succinct analyses of phenomena such as infixation and reduplication that were difficult to describe under sets of transformational rules. Several computational methods for OT have been produced within the short amount of time since Prince and Smolensky&apos;s paper (Ellison, 1994; Tesar, 1995; Hammond, 1995). These systems were designed as generation systems, deriving surface forms from an underlying lexicon. There have, however, been no computational models of OT parsers that derive underlying forms from the surface form.&apos; In this work, we lay the theoretical groundwork for using OT as a parsing tool. 2 Comparing Derivational Methods to Optimality Theory In traditional computational phonology/morphology systems such as two-level phonology (Koskenniemi, 1983), grammars that generate surface forms are invertible, allowing parsing back into underlying forms. In a derivational framew</context>
</contexts>
<marker>Tesar, 1995</marker>
<rawString>B. Tesar. Computational Optimality Theory. Ph.D. Thesis, U. of Colorado-Boulder, Department of Computer Science, 1995.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>