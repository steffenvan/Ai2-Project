<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000055">
<title confidence="0.975194">
Layering and Merging Linguistic Annotations
</title>
<author confidence="0.998272">
Keith Suderman
</author>
<affiliation confidence="0.710712666666667">
Department of Computer Science
Vassar College
Poughkeepsie, NY USA
</affiliation>
<email confidence="0.999343">
suderman@cs.vassar.edu
</email>
<author confidence="0.996349">
Nancy Ide
</author>
<affiliation confidence="0.710666333333333">
Department of Computer Science
Vassar College
Poughkeepsie, NY USA
</affiliation>
<email confidence="0.999303">
ide@cs.vassar.edu
</email>
<sectionHeader confidence="0.993905" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999645727272727">
The American National Corpus and its
annotations are represented in a stand-off
XML format compliant with the specifi-
cations of ISO TC37 SC4 WG1’s Lin-
guistic Annotation Framework. Because
few systems that enable search and ac-
cess of the corpus currently support
stand-off markup, the project has devel-
oped a SAX like parser that generates
ANC data with annotations in-line, in a
variety of output formats.
</bodyText>
<sectionHeader confidence="0.998796" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998543434782609">
The American National Corpus (ANC) project1
recently released its 2nd release consisting of ap-
proximately 22 million words of data, represent-
ing a variety of genres of both written and spo-
ken data. The corpus is annotated with several
layers of automatically produced linguistic in-
formation, including sentence and token bounda-
ries, part of speech using two different POS tag-
sets (a version of the Penn tagset2 and the Biber
tagset3), and noun chunks and verb chunks.
ANC primary documents are plain text (UTF-
16) documents and are treated as “read only”
resources. All annotations are represented in
stand-off XML documents referencing spans in
the primary data or other annotation documents,
using the XCES4 implementation of the specifi-
cations of ISO TC37 SC4’s Linguistic Annota-
tion Framework (LAF) (Ide and Romary, 2004).
Because few systems that enable search and ac-
cess of the corpus currently support stand-off
markup, the project has developed a parser that
generates ANC data with annotations in-line, in a
variety of output formats.
</bodyText>
<footnote confidence="0.9996468">
1http:// americannationalcorpus.org
2http://americannationalcorpus.org/FirstRelease/gatetags.txt
3http://americannationalcorpus.org/FirstRelease/Biber-
tags.txt
4http://www.xces.org
</footnote>
<bodyText confidence="0.999826666666667">
This demonstration will show the “life-cycle”
of an ANC document, from acquisition of a
document in any of a variety of formats (MS
Word, PDF, HTML, etc.) through annotation and
final representation in the stand-off format. The
ANC tool for merging annotations of the user’s
choice with the primary data to produce a single
document with in-line annotations will also be
demonstrated.
</bodyText>
<sectionHeader confidence="0.984825" genericHeader="method">
2 ANC Document Life-Cycle
</sectionHeader>
<bodyText confidence="0.9976988">
Documents to be included in the ANC are ac-
quired in many different formats, including MS
Word, PDF, HTML, Quark Express, etc. Proc-
essing involves a series of steps, which are out-
lined below.
</bodyText>
<subsectionHeader confidence="0.933368">
2.1 Conversion from original format to
“rudimentary” XML
</subsectionHeader>
<bodyText confidence="0.994317">
The ANC receives documents in a variety of dif-
ferent formats. The first step in processing is to
convert the input documents into XCES XML
with basic structural annotations included. The
most common types of file formats encountered
are:
</bodyText>
<listItem confidence="0.982005">
• Microsoft Word. The release of OpenOf-
fice 2 has greatly simplified the processing
of MS Word documents. OpenOffice uses
XSL and XSLT stylesheets to export files
to XML and ships with stylesheets to gen-
erate DocBook and TEI-compliant for-
mats. We modified the TEI stylesheet to
create XCES XML. OpenOffice’s Java
API enables us to automate and integrate
OpenOffice with later processing steps.
• XML/SGML/HTML. processing of
XML files typically involves using XSLT
to map element names to XCES. SGML
and HTML files typically require pre-
processing to render them into valid XML,
followed by the application of an XSLT
stylesheet to convert them to XCES.
</listItem>
<page confidence="0.973755">
89
</page>
<listItem confidence="0.992967666666667">
• Quark Express. Several publishers pro-
vided documents prepared for publication
using Quark Express. Quark documents
</listItem>
<bodyText confidence="0.965363538461538">
can be exported in XML, but doing so is
worthwhile only if the creator of the
document takes advantage of Quark’s
style-definition facilities (which was not
the case for any of the contributed Quark
documents). We therefore exported the
documents in RTF; however, many fonts
and special characters are improperly ren-
dered, and fairly extensive manual editing
was therefore required to render the files
into a format that could be used. Once ed-
ited, the same procedures for MS Word
documents are used to generate XCES.
</bodyText>
<listItem confidence="0.9913239">
• PDF. Bitmap PDF files are unusable for
our purposes. Adobe Acrobat can generate
plain text from PDF, although this process
loses much of the formatting information
that would be desirable to retain to facili-
tate later processing. In some cases, liga-
tures and other special characters are im-
properly represented in the text version,
and it is not always possible to automati-
cally detect and convert them to conform
to the original. PDF documents with two
or more columns cannot, to our knowl-
edge, be extracted without some mis-
ordering of the text in the results.
• Other formats. Other formats in which
the ANC has acquired documents include
plain text and plain text that employed a
variety of proprietary markup languages.
These documents are processed on a case
by case basis, using specialized scripts.
</listItem>
<subsectionHeader confidence="0.999253">
2.2 GATE processing and annotation
</subsectionHeader>
<bodyText confidence="0.999908384615385">
We use the University of Sheffield’s GATE sys-
tem5 for the bulk of ANC document processing
and annotation, currently including tokenization,
sentence splitting, part of speech tagging, noun
chunking, and verb chunking. Most annotations
are produced using GATE’s built-in ANNIE
components; we have, however, modified the
ANNIE sentence splitter and created several Java
plug-ins for use in GATE that perform basic
bookkeeping, renaming of annotations/features,
moving of annotations between annotation sets
etc. We have also developed a scripting language
(XORO6) for use with GATE to enable easy bulk
</bodyText>
<footnote confidence="0.9972935">
5http://gate.ac.uk
6 http:// americannationalcorpus.org/xoro.html
</footnote>
<bodyText confidence="0.9998944">
processing and re-processing of the entire cor-
pus, or to apply selected annotation steps without
having to load the files into a GATE corpus or
data store. This eases iterative development as
documents are added and tools are refined.
</bodyText>
<subsectionHeader confidence="0.651858">
2.3 Creation of standoff annotation docu-
ments
</subsectionHeader>
<bodyText confidence="0.999951428571429">
We have developed several custom processing
resources that plug into GATE to generate stand-
off annotations in the XCES implementation of
the LAF format. The last step in our GATE pipe-
line is to create the primary text document and
generate all the required standoff annotation
files.
</bodyText>
<sectionHeader confidence="0.996382" genericHeader="method">
3 Standoff Format
</sectionHeader>
<bodyText confidence="0.998371272727273">
The ANC standoff format for annotations is a
simple graph representation, consisting of one
node set and one, or more, edge sets. The node
set is represented by the text itself, with an im-
plied node between each character. Each edge set
is represented by an XML document and may
contain one or more annotation types: logical
structure, sentence boundaries, tokens, etc.
An ANC header file for each document is used
to associate the source text with the standoff an-
notation documents; for example:
</bodyText>
<figure confidence="0.993137037037037">
&lt;cesHeader&gt;
...
&lt;annotations&gt;
&lt;annotation type=&amp;quot;content&amp;quot;
ann.loc=&amp;quot;en_4065.txt&amp;quot;&gt;
Text content&lt;/annotation&gt;
&lt;annotation type=&amp;quot;logical&amp;quot;
ann.loc=&amp;quot;en_4065-logical.xml&amp;quot;&gt;
Logical structure&lt;/annotation&gt;
&lt;annotation type=&amp;quot;s&amp;quot;
ann.loc=&amp;quot;en_4065-s.xml&amp;quot;&gt;
Sentence boundaries&lt;/annotation&gt;
&lt;annotation type=&amp;quot;hepple&amp;quot;
ann.loc=&amp;quot;en_4065-hepple.xml&amp;quot;&gt;
Hepple POS tags&lt;/annotation&gt;
&lt;annotation type=&amp;quot;biber&amp;quot;
ann.loc=&amp;quot;en_4065-biber.xml&amp;quot;&gt;
Biber POS tags&lt;/annotation&gt;
&lt;annotation type=&amp;quot;vp&amp;quot;
ann.loc=&amp;quot;en_4065-vp.xml&amp;quot;&gt;
Verb chunks&lt;/annotation&gt;
&lt;annotation type=&amp;quot;np&amp;quot;
ann.loc=&amp;quot;en_4065-np.xml&amp;quot;&gt;
Noun chunks&lt;/annotation&gt;
&lt;/annotations&gt;
...
&lt;/cesHeader&gt;
</figure>
<bodyText confidence="0.993118">
ANC annotation documents are marked up
with the XCES representation of the nodes and
edge sets of the annotation graph. The following
shows a segment of the document containing part
of speech annotation:
</bodyText>
<page confidence="0.9834">
90
</page>
<figure confidence="0.997535">
&lt;cesAna
xmlns=&amp;quot;http://www.xces.org/schema/2003&amp;quot;
version=&amp;quot;1.0.4&amp;quot;&gt;
&lt;struct type=&amp;quot;tok&amp;quot; from=&amp;quot;4&amp;quot; to=&amp;quot;6&amp;quot;&gt;
&lt;feat name=&amp;quot;base&amp;quot; value=&amp;quot;in&amp;quot;/&gt;
&lt;feat name=&amp;quot;msd&amp;quot; value=&amp;quot;IN&amp;quot;/&gt;
&lt;/struct&gt;
&lt;struct type=&amp;quot;tok&amp;quot; from=&amp;quot;7&amp;quot; to=&amp;quot;11&amp;quot;&gt;
&lt;feat name=&amp;quot;msd&amp;quot; value=&amp;quot;DT&amp;quot;/&gt;
&lt;feat name=&amp;quot;base&amp;quot; value=&amp;quot;this&amp;quot;/&gt;
&lt;/struct&gt;
&lt;struct type=&amp;quot;tok&amp;quot; from=&amp;quot;12&amp;quot; to=&amp;quot;19&amp;quot;&gt;
&lt;feat name=&amp;quot;base&amp;quot; value=&amp;quot;chapter&amp;quot;/&gt;
&lt;feat name=&amp;quot;msd&amp;quot; value=&amp;quot;NN&amp;quot;/&gt;
&lt;/struct&gt;
...
&lt;/cesAna&gt;
</figure>
<bodyText confidence="0.90121125">
Each &lt;struct&gt; element represents an edge in the
graph; values of the from and to attributes denote
the nodes (between characters in the primary text
document) over which the edge spans.
</bodyText>
<subsectionHeader confidence="0.999201">
3.1 Annotating discontiguous spans
</subsectionHeader>
<bodyText confidence="0.99982775">
Presently, the ANC includes standoff annotations
that reference contiguous spans of data in the
original (primary) document. However, we plan
to add a wide variety of automatically-produced
annotations for various linguistic phenomena to
the ANC data, some of which will reference dis-
contiguous regions of the primary data, or may
reference annotations contained in other standoff
documents. This is handled as follows: given an
annotation graph, G, we create an edge graph G’
whose nodes can themselves be annotated,
thereby allowing for edges between the edges of
the original annotation graph G.
For example, consider the sentence “My dog
has fleas.” The standoff annotations for the to-
kens would be:
</bodyText>
<equation confidence="0.766271285714286">
1
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6
|M|y ||d|o|g ||h|a|s ||f|l|e|a|s|
&lt;struct ... id=&amp;quot;t1&amp;quot; from=&amp;quot;0&amp;quot; to=&amp;quot;2&amp;quot;/&gt;
&lt;struct ... id=&amp;quot;t2&amp;quot; from=&amp;quot;3&amp;quot; to=&amp;quot;6&amp;quot;/&gt;
&lt;struct ... id=&amp;quot;t3&amp;quot; from=&amp;quot;7&amp;quot; to=&amp;quot;10&amp;quot;/&gt;
&lt;struct ... id=&amp;quot;t4&amp;quot; from=&amp;quot;11&amp;quot; to=&amp;quot;16&amp;quot;/&gt;
</equation>
<bodyText confidence="0.927469777777778">
Now consider the dependency tree generated
by Minipar7 given in Figure 2. The tree can be
represented by annotating the token elements in
the standoff annotation document as follows:
&lt;!-- Define some pseudo nodes --&gt;
&lt;node type=&amp;quot;root&amp;quot; id&amp;quot;E0&amp;quot; ref=&amp;quot;t3&amp;quot;/&gt;
&lt;node type=&amp;quot;clone&amp;quot; id=&amp;quot;E2&amp;quot; ref=&amp;quot;t2&amp;quot;/&gt;
&lt;!-- Define edges in dependency tree --&gt;
&lt;struct type=&amp;quot;subj&amp;quot; id=&amp;quot;s1&amp;quot;
</bodyText>
<footnote confidence="0.7502445">
from=&amp;quot;t3&amp;quot; to=&amp;quot;E2&amp;quot;/&gt;
&lt;struct type=&amp;quot;s&amp;quot; id=&amp;quot;s2&amp;quot;
from=&amp;quot;t3&amp;quot; to=&amp;quot;t2&amp;quot;/&gt;
7http://www.cs.ualberta.ca/~lindek/minipar.htm
</footnote>
<figure confidence="0.455993">
&lt;struct type=&amp;quot;gen&amp;quot; id=&amp;quot;gen&amp;quot;
from=&amp;quot;t2&amp;quot; to=&amp;quot;t1&amp;quot;/&gt;
&lt;struct type=&amp;quot;obj&amp;quot; id=&amp;quot;obj&amp;quot;
from=&amp;quot;t3&amp;quot; to=&amp;quot;t4&amp;quot;/&gt;
</figure>
<figureCaption confidence="0.997771">
Figure 2. Dependency tree generated by Minipar.8
</figureCaption>
<sectionHeader confidence="0.9881545" genericHeader="method">
4 Creating In-line Annotation Docu-
ments
</sectionHeader>
<bodyText confidence="0.9998715">
We have developed an “XCES Parser”9 that im-
plements the org.xml.sax.XMLReader interface
to create ANC documents containing in-line an-
notations in XML (or any other format).
The XCES parser works as follows: annota-
tions to be loaded are selected with the
</bodyText>
<equation confidence="0.48683">
org.xml.sax.XMLReader.setProperty()
</equation>
<bodyText confidence="0.957622409090909">
method. The selected annotation sets are then
loaded into a single list in memory and sorted,
first by offset and, if the offsets are the same,
secondly by annotation type. At present, the or-
dering of annotation types are hard coded into
the parser; work is underway to make the XCES
parser &amp;quot;schema aware&amp;quot; so that embedding speci-
fications can be provided by the user. Once the
text is loaded and sorted, the appropriate SAX2
events are generated and dispatched to the
org.xml.sax.ContentHandler (if one has been reg-
istered with the parser) in sequence to simulate
the parsing of an XML document. While the
parser will allow the programmer to specify an
ErrorHandler, DTDHandler, or EntityResolver,
at this time no methods from those interfaces will
be invoked during parsing.
In the current version of the XCES parser,
when overlapping annotations are encountered,
they are &amp;quot;truncated&amp;quot;. For example:
&lt;s&gt;Sentence &lt;em&gt;one.&lt;/s&gt;&lt;s&gt;Sentence&lt;/em&gt;
two.&lt;/s&gt;
</bodyText>
<footnote confidence="0.95637075">
8 Image generated by
http://ai.stanford.edu/~rion/parsing/minipar_viz.html
9 http://americannationalcorpus.org/tools/index.html#xces-
parser
</footnote>
<page confidence="0.99683">
91
</page>
<figure confidence="0.432445666666667">
becomes
&lt;s&gt;Sentence &lt;em&gt;one.&lt;/em&gt;&lt;/s&gt;&lt;s&gt;Sentence
two.&lt;/s&gt;
</figure>
<bodyText confidence="0.9967805">
Work is underway to provide the option to gen-
erate milestones in CLIX/HORSE (DeRose,
2004) format to represent overlapping hierar-
chies.
</bodyText>
<subsectionHeader confidence="0.997566">
4.1 Using the XCES parser
</subsectionHeader>
<bodyText confidence="0.99686">
The XCES parser can be used in three ways:
</bodyText>
<listItem confidence="0.653143">
• from the command line. The xces-
parser.jar file can be run as a command
line program to print XML with inline an-
notation to standard output.
• as the XML parser used by other applica-
tions. For example, Saxon10 can take the
name of the parser to use to parse the
source document as a command line pa-
rameter. This allows us to apply XSLT
stylesheets to ANC documents without
having to translate them into XML first.
• as a library for use in other Java applica-
tions. For example, The ANC Tool11 is a
graphical front end to the XCES parser.
</listItem>
<subsectionHeader confidence="0.941786">
4.2 The ANC tool
</subsectionHeader>
<bodyText confidence="0.9999495">
The ANC Tool provides a graphical user inter-
face for the XCES parser and is used to convert
ANC documents to other formats. Users specify
their choice of annotations to be included. Cur-
rently, the ANC Tool can be used to generate the
following output formats:
</bodyText>
<listItem confidence="0.987565285714286">
• XML XCES format, suitable for use with
the BNC’s XAIRA12 search and access in-
terface;
• Text with part of speech tags appended to
each word and separated by an under-
score;
• WordSmith/MonoConc Pro format.
</listItem>
<bodyText confidence="0.9998343">
The ANC Tool uses multiple implementations
of the org.xml.sax.DocumentHandler interface,
one for each output format, which the XCES
parser uses to generate the desired output. Addi-
tional output formats can be easily generated by
implementing additional interfaces.
Of course, if the target application understands
annotation graphs, there is no need to bother with
the XCES parser or conversion to XML. For ex-
ample, we provide several resources for GATE
</bodyText>
<footnote confidence="0.996372666666667">
10 http://saxon.sourceforge.net/
11 http:// americannationalcorpus.org/tools/anctool.html
12 http://sourceforge.net/projects/xaira
</footnote>
<bodyText confidence="0.99888225">
that permit GATE to open and read ANC docu-
ments with standoff annotations, or to load
standoff annotations into an already loaded
document.
</bodyText>
<sectionHeader confidence="0.999501" genericHeader="method">
5 Future Work
</sectionHeader>
<bodyText confidence="0.9998895">
Currently the XCES parser is a proof of concept
rather than a production grade tool. The parser is
being augmented to invoke all the appropriate
methods from the org.xml.sax.*Handler
interfaces and throw the proper SAXExceptions
at the appropriate times. We are also providing
for some level of SAX conformance, rather than
simply “doing what Xerces does”.
</bodyText>
<sectionHeader confidence="0.999706" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.99996915">
The ANC has implemented an efficient pipeline
for the processing of text into a corpus of ma-
chine usable documents. For some document
types this process is almost completely auto-
mated and can be regarded as a Corpus-Builder-
in-a Box: raw data goes in one end, and a fully
annotated corpus with standoff annotations
comes out the other.
The use of standoff annotations allows for an
accurate representation of the ANC data as pro-
vided by the contributors and allows us to easily
provide several modular annotation sets that can
be included or excluded by the end user as de-
sired. By providing a SAX like parser for ANC
documents, we are able to leverage a number of
available XML tools without the restrictions im-
posed by an XML representation of the docu-
ments. For users who are not interested in XML
or standoff annotations, the plain text version is
preserved.
</bodyText>
<sectionHeader confidence="0.999259" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99837">
DeRose, Steven J. (2004). Markup Overlap: A Re-
view and a Horse. http://www.mulberrytech.com/
Extreme/Proceedings/html/2004/DeRose01/
EML2004DeRose01.html
Ide, N., Romary, L. (2004). International standard for
a linguistic annotation framework. Journal of
Natural Language Engineering, 10:3-4, 211-225.
</reference>
<page confidence="0.996">
92
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.266719">
<title confidence="0.99996">Layering and Merging Linguistic Annotations</title>
<author confidence="0.989787">Keith</author>
<affiliation confidence="0.801402">Department of Computer Vassar</affiliation>
<address confidence="0.922066">Poughkeepsie, NY USA</address>
<email confidence="0.999464">suderman@cs.vassar.edu</email>
<author confidence="0.945432">Nancy</author>
<affiliation confidence="0.801233">Department of Computer Vassar</affiliation>
<address confidence="0.913437">Poughkeepsie, NY USA</address>
<email confidence="0.999759">ide@cs.vassar.edu</email>
<abstract confidence="0.999425416666667">The American National Corpus and its annotations are represented in a stand-off XML format compliant with the specifications of ISO TC37 SC4 WG1’s Linguistic Annotation Framework. Because few systems that enable search and access of the corpus currently support stand-off markup, the project has devela SAX that generates ANC data with annotations in-line, in a variety of output formats.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Steven J DeRose</author>
</authors>
<title>Markup Overlap: A Review and a Horse.</title>
<date>2004</date>
<note>http://www.mulberrytech.com/ Extreme/Proceedings/html/2004/DeRose01/ EML2004DeRose01.html</note>
<contexts>
<context position="11247" citStr="DeRose, 2004" startWordPosition="1645" endWordPosition="1646"> programmer to specify an ErrorHandler, DTDHandler, or EntityResolver, at this time no methods from those interfaces will be invoked during parsing. In the current version of the XCES parser, when overlapping annotations are encountered, they are &amp;quot;truncated&amp;quot;. For example: &lt;s&gt;Sentence &lt;em&gt;one.&lt;/s&gt;&lt;s&gt;Sentence&lt;/em&gt; two.&lt;/s&gt; 8 Image generated by http://ai.stanford.edu/~rion/parsing/minipar_viz.html 9 http://americannationalcorpus.org/tools/index.html#xcesparser 91 becomes &lt;s&gt;Sentence &lt;em&gt;one.&lt;/em&gt;&lt;/s&gt;&lt;s&gt;Sentence two.&lt;/s&gt; Work is underway to provide the option to generate milestones in CLIX/HORSE (DeRose, 2004) format to represent overlapping hierarchies. 4.1 Using the XCES parser The XCES parser can be used in three ways: • from the command line. The xcesparser.jar file can be run as a command line program to print XML with inline annotation to standard output. • as the XML parser used by other applications. For example, Saxon10 can take the name of the parser to use to parse the source document as a command line parameter. This allows us to apply XSLT stylesheets to ANC documents without having to translate them into XML first. • as a library for use in other Java applications. For example, The AN</context>
</contexts>
<marker>DeRose, 2004</marker>
<rawString>DeRose, Steven J. (2004). Markup Overlap: A Review and a Horse. http://www.mulberrytech.com/ Extreme/Proceedings/html/2004/DeRose01/ EML2004DeRose01.html</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Ide</author>
<author>L Romary</author>
</authors>
<title>International standard for a linguistic annotation framework.</title>
<date>2004</date>
<journal>Journal of Natural Language Engineering,</journal>
<pages>10--3</pages>
<contexts>
<context position="1498" citStr="Ide and Romary, 2004" startWordPosition="226" endWordPosition="229">orpus is annotated with several layers of automatically produced linguistic information, including sentence and token boundaries, part of speech using two different POS tagsets (a version of the Penn tagset2 and the Biber tagset3), and noun chunks and verb chunks. ANC primary documents are plain text (UTF16) documents and are treated as “read only” resources. All annotations are represented in stand-off XML documents referencing spans in the primary data or other annotation documents, using the XCES4 implementation of the specifications of ISO TC37 SC4’s Linguistic Annotation Framework (LAF) (Ide and Romary, 2004). Because few systems that enable search and access of the corpus currently support stand-off markup, the project has developed a parser that generates ANC data with annotations in-line, in a variety of output formats. 1http:// americannationalcorpus.org 2http://americannationalcorpus.org/FirstRelease/gatetags.txt 3http://americannationalcorpus.org/FirstRelease/Bibertags.txt 4http://www.xces.org This demonstration will show the “life-cycle” of an ANC document, from acquisition of a document in any of a variety of formats (MS Word, PDF, HTML, etc.) through annotation and final representation in</context>
</contexts>
<marker>Ide, Romary, 2004</marker>
<rawString>Ide, N., Romary, L. (2004). International standard for a linguistic annotation framework. Journal of Natural Language Engineering, 10:3-4, 211-225.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>