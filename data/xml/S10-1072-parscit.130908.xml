<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.019055">
<title confidence="0.942611">
KUL: Recognition and Normalization of Temporal Expressions
</title>
<author confidence="0.996454">
Oleksandr Kolomiyets, Marie-Francine Moens
</author>
<affiliation confidence="0.895073">
Department of Computer Science
Katholieke Universiteit Leuven
</affiliation>
<email confidence="0.989455">
{oleksandr.kolomiyets, sien.moens}@cs.kuleuven.be
</email>
<sectionHeader confidence="0.993826" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99904305882353">
In this paper we describe a system for the
recognition and normalization of temporal
expressions (Task 13: TempEval-2, Task
A). The recognition task is approached as
a classification problem of sentence con-
stituents and the normalization is imple-
mented in a rule-based manner. One of the
system features is extending positive an-
notations in the corpus by semantically
similar words automatically obtained from
a large unannotated textual corpus. The
best results obtained by the system are
0.85 and 0.84 for precision and recall re-
spectively for recognition of temporal ex-
pressions; the accuracy values of 0.91 and
0.55 were obtained for the feature values
TYPE and VAL respectively.
</bodyText>
<sectionHeader confidence="0.99899" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9999065">
Recognition of temporal expressions1 is a task of
proper identification of phrases with temporal
semantics in running text. After several evalua-
tion campaigns targeted at temporal processing
of text, such as MUC, ACE TERN and TempEv-
al-1 (Verhagen et al., 2007), the recognition and
normalization task has been again newly reintro-
duced in TempEval-2 (Pustejovsky &amp; Verhagen,
2009). The task is defined as follows: determine
the extent of the time expressions; in addition,
determine the value of the features TYPE for the
type of the temporal expression and its temporal
value VAL. In this paper we describe the KUL
system that has participated in this task.
</bodyText>
<sectionHeader confidence="0.2765565" genericHeader="method">
1 Temporal expressions are sometimes referenced as time
expressions and timexes.
</sectionHeader>
<bodyText confidence="0.999878052631579">
Architecturally, the system employs a pipe-
lined information processing chain and imple-
ments a number of machine learning classifiers
for extracting the necessary information for the
temporal value estimation. The normalization
step employs a number of hand-crafted vocabula-
ries for tagging single elements of a temporal
expression and a rule-based system for estimat-
ing the temporal value. The performance of the
system obtained the values of 0.85 and 0.84 for
precision and recall respectively for the recogni-
tion of temporal expressions. The accuracy for
the type and value is 0.91 and 0.55 respectively.
The remainder of the paper is organized as
follows: Section 2 reports on the architecture of
the system with single modules and describes
theirs functions. Section 3 presents the results
and error analysis; the conclusions are provided
in Section 4.
</bodyText>
<sectionHeader confidence="0.941377" genericHeader="method">
2 System Architecture
</sectionHeader>
<bodyText confidence="0.9998394">
The system is implemented in Java and follows a
pipelined method for information processing.
Regarding the problems it solves, it can be split
in two sub-systems: recognition and normaliza-
tion.
</bodyText>
<subsectionHeader confidence="0.999514">
2.1 Recognition of Temporal Expressions
</subsectionHeader>
<bodyText confidence="0.997398">
This sub-system is employed for finding tempor-
al expressions in the text. It takes a sentence as
input and looks for temporal expressions in it.
</bodyText>
<listItem confidence="0.969627714285714">
Pre-processing: At this step the input text un-
dergoes syntactic analysis. Sentence detection,
tokenization, part-of-speech tagging and parsing
are applied2.
Candidate selection: Since only certain lexi-
cal categories can be temporal expressions and
they are defined in the TIDES standard (Ferro et
</listItem>
<footnote confidence="0.890492">
2 For preprocessing we use the OpenNLP package
(http://opennlp.sourceforge.net).
</footnote>
<page confidence="0.981462">
325
</page>
<bodyText confidence="0.954830526315789">
Proceedings of the 5th International Workshop on Semantic Evaluation, ACL 2010, pages 325–328,
Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics
al., 2003), in our implementation we consider the
following chunk-phrases as candidates for tem-
poral expressions: nouns (week, day), proper
names (Tuesday, May), noun phrases (last Tues-
day), adjectives (current), adjective phrases (then
current), adverbs (currently), adverbial phrases
(a year ago), and numbers (2000). As input it
takes the sentences with provided syntactic in-
formation and marks phrases in the parse tree
belonging to the above types for temporal ex-
pressions.
Annotation alignment: If the system is used
for training classifiers, all the candidates in a
sentence are examined against the available an-
notations. The candidates, whose parse and anno-
tation extents aligned, are taken as positive ex-
amples and the rest is considered as negative.
</bodyText>
<listItem confidence="0.969799">
Feature Design: To produce a feature-vector
we use most valuable features extracted for
phrase-candidate. After a number of experiments
the following features were selected:
• Last token in the phrase, most probable
token to be a temporal trigger;
• Lemma of the last phrasal token;
• Part-of-speech of the last phrasal token;
• Character pattern of the last phrasal to-
ken as introduced in (Ahn et al., 2007);
• Neighbor POS’s. The concatenated part-
of-speech tags of the last phrasal token
and its preceding token;
• Character pattern of the entire phrase;
• Phrase surface. A concatenated string of
sub-parse types for the phrase;
• A Boolean feature indicating nested
complex phrasal parses, such as noun
verb, adverbial, adjective or preposition-
al phrase;
• Depth of the phrase. The number of the
nested sub-parses to the deepest pre-
terminal sub-parse.
</listItem>
<bodyText confidence="0.991311442622951">
All the features are considered as Boolean.
Classification: Once the classifiers are trained
they can be used for recognition of temporal ex-
pressions on test sentences. A preprocessed sen-
tence is taken as input and starting from its
parse-tree root the candidate-phrases are classi-
fied. The most probable class will be assigned to
the candidate under consideration. Once the
phrase is classified as temporal expression no
further classification of nested phrases is per-
formed, since no embedded timexes are allowed
in the corpus. After a series of experiments with
different machine learning techniques on the
training data the maximum entropy classifier was
chosen.
Extending positive instances: Sparseness of
annotated corpora is the biggest challenge for
any supervised machine learning technique. To
overcome this problem we hypothesize that
knowledge of semantic similar words could be
found by associating words that do not occur in
the training set to similar words that did occur in
the training set. Furthermore, we would like to
learn these similarities automatically in order to
be as much as possible independent of know-
ledge sources that might not be available for all
languages or domains. For example, there is in
TimeBank a temporal expression “last summer“
with the temporal trigger summer, but there is no
annotation of temporal expressions built around
the temporal trigger winter, and this means that
no temporal expression with the trigger winter
can be recognized. Something similar usually
happens to any annotated corpus and we want to
find a way how to find other temporal expres-
sions outside the available data, which can be
used for training. On the other hand, we want to
avoid a naïve selection of words as, for example,
from a gazetteer with temporal triggers, which
may contradict with grammatical rules and the
lexical context of a timex in text, e.g.:
on Tuesday said....
But grammatically wrong by naïve replacement
from a gazetteer:
... on week said*...
... on day said*...
... on month said* ...
In order to find these words, which are legiti-
mate at a certain position in a certain context we
use the latent word language model (LWLM)
(Deschacht &amp; Moens, 2009) with a Hidden Mar-
kov Model approach for estimating the latent
word parameters.
Complementary, we use WordNet (Miller,
1995) as a source that can provide a most com-
plete set of words similar to the given one. One
should note that the use of WordNet is not
straight-forward. Due to the polysemy, the word
sense disambiguation (WSD) problem has to be
solved. Our system uses latent words obtained by
the LWLM and chooses the synset with the high-
</bodyText>
<page confidence="0.995711">
326
</page>
<bodyText confidence="0.998736777777778">
est overlap between WordNet synonyms and
coordinate terms, and the latent words. The over-
lap value is calculated as the sum of LWLM
probabilities for matching words.
Having these two sets of synonyms and after a
series of preliminary tests we found the setting,
at which the system produces the highest results
and submitted several runs with different strate-
gies:
</bodyText>
<listItem confidence="0.998719166666667">
• Baseline (no expansion) (KUL Run 1)
• 3 LWLM words with highest probabili-
ties (KUL Run 2)
• 3 WordNet coordinate terms; WSD is
solved by means of LWLM3 (KUL Run
3)
</listItem>
<bodyText confidence="0.9714894">
For each available annotation in the corpus a
positive instance is generated. After that, the to-
ken at the most probable position for a temporal
trigger is replaced by a synonym from the syn-
onym set found to the available token.
</bodyText>
<subsectionHeader confidence="0.998727">
2.2 Normalization of Temporal Expressions
</subsectionHeader>
<bodyText confidence="0.999124884615385">
Normalization of temporal expressions is a
process of estimating standardized temporal val-
ues and types. For example, the temporal expres-
sion “summer 1990” has to be resolved to its
value of 1990-SU and the type of DATE. In
contrast, for the expression “last year” the value
cannot be estimated directly, rather it gets a mod-
ified value of another time expression.
Due to a large variance of expressions denot-
ing the same date and vagueness in language,
rule-based systems have been proven to perform
better than machine-learning ones for the norma-
lization task. The current implementation follows
a rule-based approach and takes a pre-processed
document with recognized temporal expressions
(as it is described in Section 2.1) and estimates a
standardized ISO-based date/time value. In the
following sections we provide implementation
details of the system.
Before the temporal value is estimated, we
employ a classifier, which uses the same feature
sets and classify the temporal expression among
type classes DATE, TIME, DURATION and
SET.
Labeling: Labeling text is a process of provid-
ing tags to tokens of chunk-phrases from a de-
</bodyText>
<footnote confidence="0.92232825">
3 Preliminary experiments, when the most common sense in
WordNet is chosen for increasing the number of positive
examples, showed a low performance level and thus has not
been proposed for evaluations.
</footnote>
<bodyText confidence="0.99874256">
fined set of tags. We carefully examined availa-
ble annotated temporal expressions and annota-
tion standards to determine categories of words
participating in temporal expressions. The fol-
lowing set of categories with labels based on se-
mantics of temporally relevant information and
simple syntax was defined: ordinal numbers
(first, 30th etc.), cardinal numbers (one, two, 10
etc.), month names (Jan., January etc.), week
day names (Mo., Monday etc.), season names
(summer, winter etc.), parts of day (morning,
afternoon etc.), temporal directions (ago, later,
earlier etc.), quantifiers (several, few etc.), mod-
ifiers (recent, last etc.), approximators (almost,
nearly etc.), temporal co-references (time, period
etc.), fixed single token timexes (tomorrow, to-
day etc.), holidays (Christmas, Easter etc.) and
temporal units (days, months, years etc.). Also
fine-grained categories are introduced: day num-
ber, month number and year number. For each
category we manually construct a vocabulary, in
which each entry specifies a value of a temporal
field or a final date/time value, or a method with
parameters to apply.
As input, the normalization takes a recognized
temporal expression and its properties, such as
the temporal type and the discourse type4. During
labeling each token in a temporal expression is
tagged with one or multiple labels corresponding
to the categories defined above. For each of the
categories a custom detector is implemented. The
detector declares the method to run and the ex-
pected type of the result. The rules that imple-
ment the logics for the detector are inherited
from an abstract class for this specific detector,
so that if a new rule needs to be implemented its
realization is limited to the development of one
class, all the rest the detector does automatically.
Besides, the order, in which detectors have to be
run, can be specified (as for example, in case of
fine-grained detectors). As output, the module
provides labels of the categories to the tokens in
the temporal expression. If there is no entry in
the vocabulary for a token, its part-of-speech tag
is used as the label.
Value estimation: Value estimation is
implemented in the way of aggregating the
values defined for entries in the vocabulary
and/or executing instructions or methods
specified. Also a set of predefined resolution
</bodyText>
<footnote confidence="0.909058666666667">
4 Since in TempEval-2 the reference to the timex with re-
spect to which the value estimated is given, the normaliza-
tion module considers all timexes as deictic.
</footnote>
<page confidence="0.996493">
327
</page>
<bodyText confidence="0.995469">
rules is provided and can be extended with new
implementations of resolution strategies.
For resolution of complex relative temporal
expressions, the value for which cannot be esti-
mated directly, we need to rely on additional in-
formation found at the recognition step. This in-
cludes the semantic type of the timex, discourse
type and contextual temporal information
(speech or document creation time, or previously
mentioned timexes). Let’s consider the following
temporal expression as an example: 10 days ago.
In this example the temporal expression receives
a modified value of another timex, namely the
value of the document creation time. The tem-
poral expression is recognized and classified as a
date (SEM TYPE: DATE), which refers to
another timex (DISCOURSE TYPE: DEIC-
TIC). It takes the value of the referenced timex
and modifies it with respect to the number (10),
magnitude (days) and temporal direction (ago).
Thus, the final value is calculated by subtracting
a number of days for the value of the referenced
timex.
</bodyText>
<sectionHeader confidence="0.999621" genericHeader="evaluation">
3 Results and Error Analysis
</sectionHeader>
<bodyText confidence="0.963603">
In the Table 1 the results of the best-performing
runs are presented.
</bodyText>
<table confidence="0.996341833333333">
Run Recognition Normalization
P R F1 TYPE VAL
Acc. Acc.
1 0.78 0.82 0.8 0.91 0.55
2 0.75 0.85 0.797 0.91 0.51
3 0.85 0.84 0.845 0.91 0.55
</table>
<tableCaption confidence="0.999904">
Table 1. Results of different runs of the system.
</tableCaption>
<bodyText confidence="0.999974090909091">
As we can see the best results were obtained
by extending available annotations with maxi-
mum 3 additional instances, which are extracted
as coordinate terms in WordNet, whereas the
WSD problem was solved as the greatest overlap
between coordinate terms and latent words ob-
tained by the LWLM.
Most of the errors at the recognition step were
caused by misaligned parses and annotations.
For normalization we acknowledge the signi-
ficance of estimating a proper temporal value
with a correct link to the temporal expression
with its value. In the TempEval-2 training data
the links to the temporal expressions indicating
how the value is calculated were not provided,
and thus, the use of machine learning tools for
training and automatic disambiguation was not
possible. We choose a fixed strategy and all rela-
tive temporal expressions were resolved with
respect to the document creation time, which
caused errors with wrong temporal values and a
low performance level.
</bodyText>
<sectionHeader confidence="0.999654" genericHeader="conclusions">
4 Conclusions
</sectionHeader>
<bodyText confidence="0.999985555555555">
For TempEval-2 we proposed a system for the
recognition and normalization of temporal ex-
pressions. Multiple runs were submitted, among
which the best results were obtained with auto-
matically expanded positive instances by words
derived as coordinate terms from WordNet for
which the proper sense was found as the greatest
overlap between coordinate terms and latent
words found by the LWLM.
</bodyText>
<sectionHeader confidence="0.9976" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.99966">
This work has been funded by the Flemish gov-
ernment as a part of the project AMASS++
(Grant: IWT-60051) and by Space Applications
Services NV as part of the ITEA2 project LIN-
DO (ITEA2-06011, IWT-70043).
</bodyText>
<sectionHeader confidence="0.999103" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99940492">
Ahn, D., van Rantwijk, J., and de Rijke, M. 2007. A
Cascaded Machine Learning Approach to Interpret-
ing Temporal Expressions. In Proceedings of
NAACL-HLT 2007.
Deschacht, K., and Moens M.-F. 2009. Using the La-
tent Words Language Model for Semi-Supervised
Semantic Role Labeling. In Proceedings of the
Conference on Empirical Methods in Natural Lan-
guage Processing.
Ferro, L., Gerber, L., Mani, I., Sundheim, B., and
Wilson, G. 2003. TIDES 2003 Standard for the
Annotation of Temporal Expressions.
Miller, G. A. 1995. WordNet: A Lexical Database for
English. Communications of the ACM, 38(11): 39-
41.
Pustejovsky, J. and Verhagen, M. 2009. SemEval-
2010 Task 13: Evaluating Events, Time Expres-
sions, and Temporal Relations (TempEval-2). In
Proceedings of the Workshop on Semantic Evalua-
tions: Recent Achievements and Future Directions.
Verhagen, M., Gaizauskas, R., Schilder, F., Hepple,
M., and Pustejovsky, J. 2007. Semeval-2007 Task
15: Tempeval Temporal Relation Identification. In
SemEval-2007: 4th International Workshop on
Semantic Evaluations.
</reference>
<page confidence="0.998314">
328
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.512982">
<title confidence="0.99953">KUL: Recognition and Normalization of Temporal Expressions</title>
<author confidence="0.969037">Oleksandr Kolomiyets</author>
<author confidence="0.969037">Marie-Francine Moens</author>
<affiliation confidence="0.9871335">Department of Computer Science Katholieke Universiteit Leuven</affiliation>
<email confidence="0.928562">oleksandr.kolomiyets@cs.kuleuven.be</email>
<email confidence="0.928562">sien.moens@cs.kuleuven.be</email>
<abstract confidence="0.998777625">In this paper we describe a system for the recognition and normalization of temporal expressions (Task 13: TempEval-2, Task A). The recognition task is approached as a classification problem of sentence constituents and the normalization is implemented in a rule-based manner. One of the system features is extending positive annotations in the corpus by semantically similar words automatically obtained from a large unannotated textual corpus. The best results obtained by the system are 0.85 and 0.84 for precision and recall respectively for recognition of temporal expressions; the accuracy values of 0.91 and</abstract>
<intro confidence="0.593511">0.55 were obtained for the feature values</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>D Ahn</author>
<author>J van Rantwijk</author>
<author>M de Rijke</author>
</authors>
<title>A Cascaded Machine Learning Approach to Interpreting Temporal Expressions.</title>
<date>2007</date>
<booktitle>In Proceedings of NAACL-HLT</booktitle>
<marker>Ahn, van Rantwijk, de Rijke, 2007</marker>
<rawString>Ahn, D., van Rantwijk, J., and de Rijke, M. 2007. A Cascaded Machine Learning Approach to Interpreting Temporal Expressions. In Proceedings of NAACL-HLT 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Deschacht</author>
<author>M-F Moens</author>
</authors>
<title>Using the Latent Words Language Model for Semi-Supervised Semantic Role Labeling.</title>
<date>2009</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="7292" citStr="Deschacht &amp; Moens, 2009" startWordPosition="1128" endWordPosition="1131">ow to find other temporal expressions outside the available data, which can be used for training. On the other hand, we want to avoid a naïve selection of words as, for example, from a gazetteer with temporal triggers, which may contradict with grammatical rules and the lexical context of a timex in text, e.g.: on Tuesday said.... But grammatically wrong by naïve replacement from a gazetteer: ... on week said*... ... on day said*... ... on month said* ... In order to find these words, which are legitimate at a certain position in a certain context we use the latent word language model (LWLM) (Deschacht &amp; Moens, 2009) with a Hidden Markov Model approach for estimating the latent word parameters. Complementary, we use WordNet (Miller, 1995) as a source that can provide a most complete set of words similar to the given one. One should note that the use of WordNet is not straight-forward. Due to the polysemy, the word sense disambiguation (WSD) problem has to be solved. Our system uses latent words obtained by the LWLM and chooses the synset with the high326 est overlap between WordNet synonyms and coordinate terms, and the latent words. The overlap value is calculated as the sum of LWLM probabilities for mat</context>
</contexts>
<marker>Deschacht, Moens, 2009</marker>
<rawString>Deschacht, K., and Moens M.-F. 2009. Using the Latent Words Language Model for Semi-Supervised Semantic Role Labeling. In Proceedings of the Conference on Empirical Methods in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Ferro</author>
<author>L Gerber</author>
<author>I Mani</author>
<author>B Sundheim</author>
<author>G Wilson</author>
</authors>
<title>Standard for the Annotation of Temporal Expressions.</title>
<date>2003</date>
<publisher>TIDES</publisher>
<marker>Ferro, Gerber, Mani, Sundheim, Wilson, 2003</marker>
<rawString>Ferro, L., Gerber, L., Mani, I., Sundheim, B., and Wilson, G. 2003. TIDES 2003 Standard for the Annotation of Temporal Expressions.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G A Miller</author>
</authors>
<title>WordNet: A Lexical Database for English.</title>
<date>1995</date>
<journal>Communications of the ACM,</journal>
<volume>38</volume>
<issue>11</issue>
<pages>39--41</pages>
<contexts>
<context position="7416" citStr="Miller, 1995" startWordPosition="1149" endWordPosition="1150"> naïve selection of words as, for example, from a gazetteer with temporal triggers, which may contradict with grammatical rules and the lexical context of a timex in text, e.g.: on Tuesday said.... But grammatically wrong by naïve replacement from a gazetteer: ... on week said*... ... on day said*... ... on month said* ... In order to find these words, which are legitimate at a certain position in a certain context we use the latent word language model (LWLM) (Deschacht &amp; Moens, 2009) with a Hidden Markov Model approach for estimating the latent word parameters. Complementary, we use WordNet (Miller, 1995) as a source that can provide a most complete set of words similar to the given one. One should note that the use of WordNet is not straight-forward. Due to the polysemy, the word sense disambiguation (WSD) problem has to be solved. Our system uses latent words obtained by the LWLM and chooses the synset with the high326 est overlap between WordNet synonyms and coordinate terms, and the latent words. The overlap value is calculated as the sum of LWLM probabilities for matching words. Having these two sets of synonyms and after a series of preliminary tests we found the setting, at which the sy</context>
</contexts>
<marker>Miller, 1995</marker>
<rawString>Miller, G. A. 1995. WordNet: A Lexical Database for English. Communications of the ACM, 38(11): 39-41.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
<author>M Verhagen</author>
</authors>
<title>SemEval2010 Task 13: Evaluating Events, Time Expressions, and Temporal Relations (TempEval-2).</title>
<date>2009</date>
<booktitle>In Proceedings of the Workshop on Semantic Evaluations: Recent Achievements and Future Directions.</booktitle>
<contexts>
<context position="1301" citStr="Pustejovsky &amp; Verhagen, 2009" startWordPosition="185" endWordPosition="188"> best results obtained by the system are 0.85 and 0.84 for precision and recall respectively for recognition of temporal expressions; the accuracy values of 0.91 and 0.55 were obtained for the feature values TYPE and VAL respectively. 1 Introduction Recognition of temporal expressions1 is a task of proper identification of phrases with temporal semantics in running text. After several evaluation campaigns targeted at temporal processing of text, such as MUC, ACE TERN and TempEval-1 (Verhagen et al., 2007), the recognition and normalization task has been again newly reintroduced in TempEval-2 (Pustejovsky &amp; Verhagen, 2009). The task is defined as follows: determine the extent of the time expressions; in addition, determine the value of the features TYPE for the type of the temporal expression and its temporal value VAL. In this paper we describe the KUL system that has participated in this task. 1 Temporal expressions are sometimes referenced as time expressions and timexes. Architecturally, the system employs a pipelined information processing chain and implements a number of machine learning classifiers for extracting the necessary information for the temporal value estimation. The normalization step employs </context>
</contexts>
<marker>Pustejovsky, Verhagen, 2009</marker>
<rawString>Pustejovsky, J. and Verhagen, M. 2009. SemEval2010 Task 13: Evaluating Events, Time Expressions, and Temporal Relations (TempEval-2). In Proceedings of the Workshop on Semantic Evaluations: Recent Achievements and Future Directions.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Verhagen</author>
<author>R Gaizauskas</author>
<author>F Schilder</author>
<author>M Hepple</author>
<author>J Pustejovsky</author>
</authors>
<title>Semeval-2007 Task 15: Tempeval Temporal Relation Identification. In</title>
<date>2007</date>
<booktitle>SemEval-2007: 4th International Workshop on Semantic Evaluations.</booktitle>
<contexts>
<context position="1182" citStr="Verhagen et al., 2007" startWordPosition="168" endWordPosition="171"> in the corpus by semantically similar words automatically obtained from a large unannotated textual corpus. The best results obtained by the system are 0.85 and 0.84 for precision and recall respectively for recognition of temporal expressions; the accuracy values of 0.91 and 0.55 were obtained for the feature values TYPE and VAL respectively. 1 Introduction Recognition of temporal expressions1 is a task of proper identification of phrases with temporal semantics in running text. After several evaluation campaigns targeted at temporal processing of text, such as MUC, ACE TERN and TempEval-1 (Verhagen et al., 2007), the recognition and normalization task has been again newly reintroduced in TempEval-2 (Pustejovsky &amp; Verhagen, 2009). The task is defined as follows: determine the extent of the time expressions; in addition, determine the value of the features TYPE for the type of the temporal expression and its temporal value VAL. In this paper we describe the KUL system that has participated in this task. 1 Temporal expressions are sometimes referenced as time expressions and timexes. Architecturally, the system employs a pipelined information processing chain and implements a number of machine learning </context>
</contexts>
<marker>Verhagen, Gaizauskas, Schilder, Hepple, Pustejovsky, 2007</marker>
<rawString>Verhagen, M., Gaizauskas, R., Schilder, F., Hepple, M., and Pustejovsky, J. 2007. Semeval-2007 Task 15: Tempeval Temporal Relation Identification. In SemEval-2007: 4th International Workshop on Semantic Evaluations.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>