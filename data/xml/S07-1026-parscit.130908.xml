<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.016331">
<title confidence="0.989194">
CUNIT: A Semantic Role Labeling System for Modern Standard Arabic
</title>
<author confidence="0.998362">
Mona Diab Alessandro Moschitti Daniele Pighin
</author>
<affiliation confidence="0.99998">
Columbia University University of Trento, DIT FBK-irst; University of Trento, DIT
</affiliation>
<email confidence="0.991735">
mdiab@cs.columbia.edu moschitti@dit.unitn.it pighin@itc.it
</email>
<sectionHeader confidence="0.993756" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999894555555556">
In this paper, we present a system for Ara-
bic semantic role labeling (SRL) based on
SVMs and standard features. The system is
evaluated on the released SEMEVAL 2007
development and test data. The results show
an Fβ=1 score of 94.06 on argument bound-
ary detection and an overall Fβ=1 score of
81.43 on the complete semantic role label-
ing task using gold parse trees.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999968277777778">
There is a widely held belief in the computational
linguistics field that identifying and defining the
roles of predicate arguments, semantic role label-
ing (SRL), in a sentence has a lot of potential for
and is a significant step towards the improvement of
important applications such as document retrieval,
machine translation, question answering and infor-
mation extraction. However, effective ways for see-
ing this belief come to fruition require a lot more
research investment.
Since most of the available data resources are for
the English language, most of the reported SRL sys-
tems to date only deal with English. Nevertheless,
we do see some headway for other languages, such
as German and Chinese (Erk and Pado, 2006; Sun
and Jurafsky, 2004; Xue and Palmer, 2005). The
systems for non-English languages follow the suc-
cessful models devised for English, e.g. (Gildea and
Jurafsky, 2002; Xue and Palmer, 2004; Pradhan et
al., 2003). However, no SRL system exists for Ara-
bic.
In this paper, we present a system for semantic
role labeling for modern standard Arabic. To our
knowledge, it is the first SRL system for a semitic
language in the literature. It is based on a supervised
model that uses support vector machines (SVM)
technology for argument boundary detection and ar-
gument classification. It is trained and tested using
the pilot Arabic PropBank data released as part of
the SEMEVAL 2007 data. Given the lack of a re-
liable deep syntactic parser, in this research we use
gold trees.
The system yields an F-score of 94.06 on the sub
task of argument boundary detection and an F-score
of 81.43 on the complete task, i.e. boundary plus
classification.
</bodyText>
<sectionHeader confidence="0.65988" genericHeader="method">
2 SRL system for Arabic
</sectionHeader>
<bodyText confidence="0.998321642857143">
The design of an optimal model for an Arabic SRL
systems should take into account specific linguis-
tic aspects of the language. However, a remarkable
amount of research has already been done in SRL
and we can capitalize from it to design a basic and
effective SRL system. The idea is to use the technol-
ogy developed for English and verify if it is suitable
for Arabic.
Our adopted SRL models use Support Vector Ma-
chines (SVM) to implement a two steps classifica-
tion approach, i.e. boundary detection and argument
classification. Such models have already been in-
vestigated in (Pradhan et al., 2003; Moschitti et al.,
2005) and their description is hereafter reported.
</bodyText>
<subsectionHeader confidence="0.985383">
2.1 Predicate Argument Extraction
</subsectionHeader>
<bodyText confidence="0.999953857142857">
The extraction of predicative structures is carried out
at the sentence level. Given a predicate within a
natural language sentence, its arguments have to be
properly labeled. This problem is usually divided
in two subtasks: (a) the detection of the boundaries,
i.e. the word spans of the arguments, and (b) the
classification of their type, e.g. Arg0 and ArgM in
</bodyText>
<page confidence="0.988136">
133
</page>
<bodyText confidence="0.5748985">
Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 133–136,
Prague, June 2007. c�2007 Association for Computational Linguistics
</bodyText>
<figure confidence="0.999307848484849">
NN
/project
NP
NNP
✠/nations
ARG0 Predicate ARG1
NP
JJ
✠/United
VBP
/instated
S
/grace-period
NN
NP
VP
JJ
/final
IN
/for
✠/allowing
NN
NP
PP
/the-chance
NN
NP
PP
IN
/before
NNP
NP
/Cyprus
</figure>
<figureCaption confidence="0.793197">
Figure 1: A syntactic parse tree of an Arabic sentence. ARGM-PRP
PropBank or Agent and Goal in FrameNet.
</figureCaption>
<bodyText confidence="0.999389">
The standard approach to learn both the detection
and the classification of predicate arguments is sum-
marized by the following steps:
</bodyText>
<listItem confidence="0.997099125">
1. Given a sentence from the training-set, gener-
ate a full syntactic parse-tree;
2. let P and A be the set of predicates and the
set of parse-tree nodes (i.e. the potential argu-
ments), respectively;
3. for each pair (p, a) E P x A:
• extract the feature representation set, Fp,a;
• if the subtree rooted in a covers exactly
</listItem>
<bodyText confidence="0.930857025641026">
the words of one argument of p, put Fp,a
in T+ (positive examples), otherwise put
it in T− (negative examples).
For instance, in Figure 1, for each combination
of the predicate instated with the nodes NP, S,
VP, VPB, NNP, NN, PP, JJ or IN the instances
Finstated,a are generated. In case the node a ex-
actly covers ”project nations United”, ”grace-period
final” or ”for allowing the chance before Cyprus”,
Fp,a will be a positive instance otherwise it will be a
negative one, e.g. Finstated,IN.
The T+ and T− sets are used to train the bound-
ary classifier. To train the multi-class classifier, T+
can be reorganized as positive T+argi and negative
T−argi examples for each argument i. In this way,
an individual ONE-vs-ALL classifier for each argu-
ment i can be trained. We adopted this solution, ac-
cording to (Pradhan et al., 2003), since it is simple
and effective. In the classification phase, given an
unseen sentence, all its Fp,a are generated and clas-
sified by each individual classifier Ci. The argument
associated with the maximum among the scores pro-
vided by the individual classifiers is eventually se-
lected.
The above approach assigns labels independently
for the different arguments in the predicate argument
structure. As a consequence the classifier output
may generate overlapping arguments. Thus, to make
the annotations globally consistent, we apply a dis-
ambiguating heuristic that selects only one argument
among multiple overlapping arguments. The heuris-
tic is based on the following steps:
• if more than two nodes are involved, i.e. a
node d and two or more of its descendants ni
are classified as arguments, then assume that d
is not an argument. This choice is justified by
previous studies (Moschitti et al., 2005) show-
ing that for lower nodes, the role classification
is generally more accurate than for upper ones;
</bodyText>
<listItem confidence="0.973370666666667">
• if only two nodes are involved, i.e. they dom-
inate each other, then keep the one with the
higher SVM classification score.
</listItem>
<subsectionHeader confidence="0.99762">
2.2 Standard Features
</subsectionHeader>
<bodyText confidence="0.9702662">
The discovery of relevant features is, as usual, a
complex task. However, there is a common con-
sensus on the set of basic features that should be
adopted. Among them, we select the following sub-
set: (a) Phrase Type, Predicate Word, Head Word,
</bodyText>
<page confidence="0.994639">
134
</page>
<bodyText confidence="0.948554142857143">
Position and Voice as defined in (Gildea and Ju-
rafsky, 2002); (b) Partial Path, No Direction Path,
Head Word POS, First and Last Word/POS in Con-
stituent and SubCategorization as proposed in (Prad-
han et al., 2003); and (c) Syntactic Frame as de-
signed in (Xue and Palmer, 2004).
For example, Phrase Type indicates the syntactic
type of the phrase labeled as a predicate argument,
NP for Arg] in Figure 1 whereas the Parse Tree Path
contains the path in the parse tree between the pred-
icate and the argument phrase, expressed as a se-
quence of nonterminal labels linked by direction (up
or down) symbols, VPB ↑ VP ↑ S ↓ NP for Arg] in
Figure 1.
</bodyText>
<sectionHeader confidence="0.999424" genericHeader="method">
3 Experiments
</sectionHeader>
<bodyText confidence="0.999990272727273">
In these experiments, we investigate if the technol-
ogy proposed in previous work for automatic SRL
of English texts is suitable for Arabic SRL systems.
From this perspective, we tested each SRL phase,
i.e. boundary detection and argument classification,
separately.
The final labeling accuracy that we derive us-
ing the official CoNLL evaluator (Carreras and
M`arquez, 2005) along with the official development
and test data of SEMEVAL provides a reliable assess-
ment of the accuracy achievable by our SRL model.
</bodyText>
<subsectionHeader confidence="0.992875">
3.1 Experimental setup
</subsectionHeader>
<bodyText confidence="0.999842666666667">
We use the dataset released in the SEMEVAL 2007
Task 18 on Arabic Semantic Labeling, which is
sampled from the Pilot Arabic PropBank.
Such data covers the 95 most frequent verbs in
the Arabic Treebank III ver. 2 (ATB)
(Maamouri et al., 2004). The ATB consists of MSA
newswire data from Annhar newspaper from the
months of July through November 2002.
An important characteristic of the dataset is
the use of unvowelized Arabic in the Buckwalter
transliteration scheme. We used the gold standard
parses in the ATB as a source for syntactic parses
for the data. The data comprises a development set
of 886 sentences, a test set of 902 sentences, and
a training set of 8,402 sentences. The development
set comprises 1,725 argument instances, the test data
comprises 1,661 argument instances, and training
data comprises 21,194 argument instances. These
</bodyText>
<table confidence="0.999924333333333">
Precision Recall Fβ=1
Dev 97.85% 89.86% 93.68
Test 97.85% 90.55% 94.06
</table>
<tableCaption confidence="0.979405">
Table 1: Boundary detection F1 results on the development
and test sets.
</tableCaption>
<bodyText confidence="0.99369825">
instances are distributed over 26 different role types.
The training instances for the boundary detection
task relate to parse-tree nodes that do not correspond
to correct boundaries. For efficiency reasons, we use
only the first 350K training instances for the bound-
ary classifier out of more than 700K available.
The experiments are carried out with
the SVM-light-TK software available at
</bodyText>
<equation confidence="0.436834">
http://ai-nlp.info.uniroma2.it/moschitti/
</equation>
<bodyText confidence="0.999805857142857">
which encodes tree kernels in the SVM-light soft-
ware. This allows us to design a system which can
exploit tree kernels in future research. To implement
the boundary classifier and the individual argument
classifiers, we use a polynomial kernel with the
default regularization parameter (of SVM-light),
and a cost-factor equal to 1.
</bodyText>
<subsectionHeader confidence="0.999483">
3.2 Official System Results
</subsectionHeader>
<bodyText confidence="0.999797894736842">
Our system is evaluated using the official CoNLL
evaluator (Carreras and M`arquez, 2005), avail-
able at http://www.lsi.upc.es/∼srlconll/
soft.html.
Table 1 shows the F1 scores obtained on the de-
velopment and test data. We note that the F1 on the
development set, i.e. 93.68, is slightly lower than
the result on the test set, i.e. 94.06. This suggests
that the test data is easier than the development set.
Similar behavior can be observed for the role clas-
sification task in tables1 2 and 3.
Again, the overall F1 on the development set
(77.85) is lower than the result on the test set (81.43).
This confirms that the test data is, indeed, easier
than the development set.
Regarding the F1 of individual arguments, we
note that, as for English SRL, ARG0 shows high
values, 95.42 and 96.69 on the development and
test sets, respectively. Interestingly, ARG1 seems
</bodyText>
<footnote confidence="0.9950642">
1The arguments: ARG1-PRD, ARG2-STR, ARG4, ARGM,
ARGM-BNF, ARGM-DIR, ARGM-DIS, ARGM-EXT and
ARGM-REC have F1 equal to 0. To save space, we removed
them from the tables, but their presence makes the classification
task more complex than if they were removed from test data.
</footnote>
<page confidence="0.990287">
135
</page>
<table confidence="0.999993944444445">
Precision Recall Fβ=1
Overall 81.31% 74.67% 77.85
ARG0 94.40% 96.48% 95.42
ARG1 91.69% 88.03% 89.83
ARG1-PRD 50.00% 50.00% 50.00
ARG1-STR 20.00% 4.35% 7.14
ARG2 60.51% 61.78% 61.14
ARG3 66.67% 15.38% 25.00
ARGM 100.00% 16.67% 28.57
ARGM-ADV 46.39% 43.69% 45.00
ARGM-CND 66.67% 33.33% 44.44
ARGM-DIS 60.00% 37.50% 46.15
ARGM-LOC 69.00% 84.15% 75.82
ARGM-MNR 63.08% 48.24% 54.67
ARGM-NEG 87.06% 97.37% 91.93
ARGM-PRD 25.00% 7.14% 11.11
ARGM-PRP 85.29% 69.05% 76.32
ARGM-TMP 82.05% 66.67% 73.56
</table>
<tableCaption confidence="0.956789">
Table 2: Argument classification results on the development
set.
</tableCaption>
<table confidence="0.999994117647059">
Precision Recall Fβ=1
Overall 84.71% 78.39% 81.43
ARG0 96.50% 96.88% 96.69
ARG0-STR 100.00% 20.00% 33.33
ARG1 92.06% 89.56% 90.79
ARG1-STR 33.33% 15.38% 21.05
ARG2 70.74% 73.89% 72.28
ARG3 50.00% 8.33% 14.29
ARGM-ADV 64.29% 54.78% 59.15
ARGM-CAU 100.00% 9.09% 16.67
ARGM-CND 25.00% 33.33% 28.57
ARGM-LOC 67.50% 88.52% 76.60
ARGM-MNR 54.17% 47.27% 50.49
ARGM-NEG 80.85% 97.44% 88.37
ARGM-PRD 20.00% 8.33% 11.76
ARGM-PRP 85.71% 66.67% 75.00
ARGM-TMP 90.82% 83.18% 86.83
</table>
<tableCaption confidence="0.999817">
Table 3: Argument classification results on the test set.
</tableCaption>
<bodyText confidence="0.999952611111111">
more difficult classify in Arabic than it is in En-
glish. In our current experiments, the F1 for
ARG1 is only 89.83 (compared to 95.42 for ARG0).
This may be attributed to two main factors. Ara-
bic allows for different types of syntactic config-
urations, subject-verb-object, object-verb-subject,
verb-subject-object, hence the logical object of a
predicate is highly confusable with the logical sub-
ject. Moreover, around 30% of the ATB data is
pro-dropped, where the subject is morphologically
marked on the verb and its absence is marked in the
gold trees with an empty trace. In the current version
of the data, the traces are annotated with the ARG0
semantic role consistently allowing for the high rel-
ative performance yielded.
The F1 of the other arguments seems to follow the
English SRL behavior as their lower value depends
on the lower number of available training examples.
</bodyText>
<sectionHeader confidence="0.998663" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999974785714286">
In this paper, we presented a first system for Arabic
SRL system. The system yields results that are very
promising, 94.06 for argument boundary detection
and 81.43 on argument classification.
For future work, we would like to experiment with
explicit morphological features and different POS
tag sets that are tailored to Arabic. The results pre-
sented here are based on gold parses. We would
like to experiment with automatic parses and shal-
lower representations such as chunked data. Finally,
we would like to experiment with more sophisti-
cated kernels, the tree kernels described in (Mos-
chitti, 2004), i.e. models that have shown a lot of
promise for the English SRL process.
</bodyText>
<sectionHeader confidence="0.997603" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9961635">
The first author is funded by DARPA Contract No. HR0011-
06-C-0023.
</bodyText>
<sectionHeader confidence="0.998863" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99957040625">
Xavier Carreras and Lluis M`arquez. 2005. Introduction to the
CoNLL-2005 shared task: Semantic role labeling. In Pro-
ceedings of CoNLL-2005, Ann Arbor, Michigan.
Katrin Erk and Sebastian Pado. 2006. Shalmaneser - a flexi-
ble toolbox for semantic role assignment. In Proceedings of
LREC-06, Genoa, Italy.
Daniel Gildea and Daniel Jurafsky. 2002. Automatic labeling
of semantic roles. Computational Linguistics, 28(3):245–
288.
Mohamed Maamouri, Ann Bies, Tim Buckwalter, and Wig dan
Mekki. 2004. The Penn-Arabic Treebank : Building a large-
scale annotated Arabic corpus.
Alessandro Moschitti, Ana-Maria Giuglea, Bonaventura Cop-
pola, and Roberto Basili. 2005. Hierarchical semantic
role labeling. In Proceedings of CoNLL-2005, Ann Arbor,
Michigan.
Alessandro Moschitti. 2004. A study on convolution kernels
for shallow semantic parsing. In proceedings of ACL-2004,
Barcelona, Spain.
Sameer Pradhan, Kadri Hacioglu, Wayne Ward, James H. Mar-
tin, and Daniel Jurafsky. 2003. Semantic role parsing:
Adding semantic structure to unstructured text. In Proceed-
ings ofICDM-2003, Melbourne, USA.
Honglin Sun and Daniel Jurafsky. 2004. Shallow seman-
tic parsing of chinese. In In Proceedings of NAACL 2004,
Boston, USA.
Nianwen Xue and Martha Palmer. 2004. Calibrating features
for semantic role labeling. In Proceedings of EMNLP 2004,
pages 88–94, Barcelona, Spain.
Nianwen Xue and Martha Palmer. 2005. Automatic semantic
role labeling for chinese verbs. In Proceedings of IJCAI,
Edinburgh, Scotland.
</reference>
<page confidence="0.998792">
136
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.885177">
<title confidence="0.998207">CUNIT: A Semantic Role Labeling System for Modern Standard Arabic</title>
<author confidence="0.998691">Mona Diab Alessandro Moschitti Daniele Pighin</author>
<affiliation confidence="0.997971">Columbia University University of Trento, DIT FBK-irst; University of Trento, DIT</affiliation>
<email confidence="0.898144">mdiab@cs.columbia.edumoschitti@dit.unitn.itpighin@itc.it</email>
<abstract confidence="0.9990333">In this paper, we present a system for Arabic semantic role labeling (SRL) based on SVMs and standard features. The system is evaluated on the released SEMEVAL 2007 development and test data. The results show score of 94.06 on argument bounddetection and an overall score of 81.43 on the complete semantic role labeling task using gold parse trees.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Xavier Carreras</author>
<author>Lluis M`arquez</author>
</authors>
<title>Introduction to the CoNLL-2005 shared task: Semantic role labeling.</title>
<date>2005</date>
<booktitle>In Proceedings of CoNLL-2005,</booktitle>
<location>Ann Arbor, Michigan.</location>
<marker>Carreras, M`arquez, 2005</marker>
<rawString>Xavier Carreras and Lluis M`arquez. 2005. Introduction to the CoNLL-2005 shared task: Semantic role labeling. In Proceedings of CoNLL-2005, Ann Arbor, Michigan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Katrin Erk</author>
<author>Sebastian Pado</author>
</authors>
<title>Shalmaneser - a flexible toolbox for semantic role assignment.</title>
<date>2006</date>
<booktitle>In Proceedings of LREC-06,</booktitle>
<location>Genoa, Italy.</location>
<contexts>
<context position="1365" citStr="Erk and Pado, 2006" startWordPosition="211" endWordPosition="214">oles of predicate arguments, semantic role labeling (SRL), in a sentence has a lot of potential for and is a significant step towards the improvement of important applications such as document retrieval, machine translation, question answering and information extraction. However, effective ways for seeing this belief come to fruition require a lot more research investment. Since most of the available data resources are for the English language, most of the reported SRL systems to date only deal with English. Nevertheless, we do see some headway for other languages, such as German and Chinese (Erk and Pado, 2006; Sun and Jurafsky, 2004; Xue and Palmer, 2005). The systems for non-English languages follow the successful models devised for English, e.g. (Gildea and Jurafsky, 2002; Xue and Palmer, 2004; Pradhan et al., 2003). However, no SRL system exists for Arabic. In this paper, we present a system for semantic role labeling for modern standard Arabic. To our knowledge, it is the first SRL system for a semitic language in the literature. It is based on a supervised model that uses support vector machines (SVM) technology for argument boundary detection and argument classification. It is trained and te</context>
</contexts>
<marker>Erk, Pado, 2006</marker>
<rawString>Katrin Erk and Sebastian Pado. 2006. Shalmaneser - a flexible toolbox for semantic role assignment. In Proceedings of LREC-06, Genoa, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Gildea</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Automatic labeling of semantic roles.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>3</issue>
<pages>288</pages>
<contexts>
<context position="1533" citStr="Gildea and Jurafsky, 2002" startWordPosition="237" endWordPosition="240">t applications such as document retrieval, machine translation, question answering and information extraction. However, effective ways for seeing this belief come to fruition require a lot more research investment. Since most of the available data resources are for the English language, most of the reported SRL systems to date only deal with English. Nevertheless, we do see some headway for other languages, such as German and Chinese (Erk and Pado, 2006; Sun and Jurafsky, 2004; Xue and Palmer, 2005). The systems for non-English languages follow the successful models devised for English, e.g. (Gildea and Jurafsky, 2002; Xue and Palmer, 2004; Pradhan et al., 2003). However, no SRL system exists for Arabic. In this paper, we present a system for semantic role labeling for modern standard Arabic. To our knowledge, it is the first SRL system for a semitic language in the literature. It is based on a supervised model that uses support vector machines (SVM) technology for argument boundary detection and argument classification. It is trained and tested using the pilot Arabic PropBank data released as part of the SEMEVAL 2007 data. Given the lack of a reliable deep syntactic parser, in this research we use gold tr</context>
<context position="6610" citStr="Gildea and Jurafsky, 2002" startWordPosition="1094" endWordPosition="1098">This choice is justified by previous studies (Moschitti et al., 2005) showing that for lower nodes, the role classification is generally more accurate than for upper ones; • if only two nodes are involved, i.e. they dominate each other, then keep the one with the higher SVM classification score. 2.2 Standard Features The discovery of relevant features is, as usual, a complex task. However, there is a common consensus on the set of basic features that should be adopted. Among them, we select the following subset: (a) Phrase Type, Predicate Word, Head Word, 134 Position and Voice as defined in (Gildea and Jurafsky, 2002); (b) Partial Path, No Direction Path, Head Word POS, First and Last Word/POS in Constituent and SubCategorization as proposed in (Pradhan et al., 2003); and (c) Syntactic Frame as designed in (Xue and Palmer, 2004). For example, Phrase Type indicates the syntactic type of the phrase labeled as a predicate argument, NP for Arg] in Figure 1 whereas the Parse Tree Path contains the path in the parse tree between the predicate and the argument phrase, expressed as a sequence of nonterminal labels linked by direction (up or down) symbols, VPB ↑ VP ↑ S ↓ NP for Arg] in Figure 1. 3 Experiments In th</context>
</contexts>
<marker>Gildea, Jurafsky, 2002</marker>
<rawString>Daniel Gildea and Daniel Jurafsky. 2002. Automatic labeling of semantic roles. Computational Linguistics, 28(3):245– 288.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mohamed Maamouri</author>
<author>Ann Bies</author>
<author>Tim Buckwalter</author>
<author>Wig dan Mekki</author>
</authors>
<title>The Penn-Arabic Treebank : Building a largescale annotated Arabic corpus.</title>
<date>2004</date>
<contexts>
<context position="7980" citStr="Maamouri et al., 2004" startWordPosition="1330" endWordPosition="1333">rom this perspective, we tested each SRL phase, i.e. boundary detection and argument classification, separately. The final labeling accuracy that we derive using the official CoNLL evaluator (Carreras and M`arquez, 2005) along with the official development and test data of SEMEVAL provides a reliable assessment of the accuracy achievable by our SRL model. 3.1 Experimental setup We use the dataset released in the SEMEVAL 2007 Task 18 on Arabic Semantic Labeling, which is sampled from the Pilot Arabic PropBank. Such data covers the 95 most frequent verbs in the Arabic Treebank III ver. 2 (ATB) (Maamouri et al., 2004). The ATB consists of MSA newswire data from Annhar newspaper from the months of July through November 2002. An important characteristic of the dataset is the use of unvowelized Arabic in the Buckwalter transliteration scheme. We used the gold standard parses in the ATB as a source for syntactic parses for the data. The data comprises a development set of 886 sentences, a test set of 902 sentences, and a training set of 8,402 sentences. The development set comprises 1,725 argument instances, the test data comprises 1,661 argument instances, and training data comprises 21,194 argument instances</context>
</contexts>
<marker>Maamouri, Bies, Buckwalter, Mekki, 2004</marker>
<rawString>Mohamed Maamouri, Ann Bies, Tim Buckwalter, and Wig dan Mekki. 2004. The Penn-Arabic Treebank : Building a largescale annotated Arabic corpus.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alessandro Moschitti</author>
<author>Ana-Maria Giuglea</author>
<author>Bonaventura Coppola</author>
<author>Roberto Basili</author>
</authors>
<title>Hierarchical semantic role labeling.</title>
<date>2005</date>
<booktitle>In Proceedings of CoNLL-2005,</booktitle>
<location>Ann Arbor, Michigan.</location>
<contexts>
<context position="2948" citStr="Moschitti et al., 2005" startWordPosition="482" endWordPosition="485">ic The design of an optimal model for an Arabic SRL systems should take into account specific linguistic aspects of the language. However, a remarkable amount of research has already been done in SRL and we can capitalize from it to design a basic and effective SRL system. The idea is to use the technology developed for English and verify if it is suitable for Arabic. Our adopted SRL models use Support Vector Machines (SVM) to implement a two steps classification approach, i.e. boundary detection and argument classification. Such models have already been investigated in (Pradhan et al., 2003; Moschitti et al., 2005) and their description is hereafter reported. 2.1 Predicate Argument Extraction The extraction of predicative structures is carried out at the sentence level. Given a predicate within a natural language sentence, its arguments have to be properly labeled. This problem is usually divided in two subtasks: (a) the detection of the boundaries, i.e. the word spans of the arguments, and (b) the classification of their type, e.g. Arg0 and ArgM in 133 Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 133–136, Prague, June 2007. c�2007 Association for Computati</context>
<context position="6053" citStr="Moschitti et al., 2005" startWordPosition="997" endWordPosition="1000">ed. The above approach assigns labels independently for the different arguments in the predicate argument structure. As a consequence the classifier output may generate overlapping arguments. Thus, to make the annotations globally consistent, we apply a disambiguating heuristic that selects only one argument among multiple overlapping arguments. The heuristic is based on the following steps: • if more than two nodes are involved, i.e. a node d and two or more of its descendants ni are classified as arguments, then assume that d is not an argument. This choice is justified by previous studies (Moschitti et al., 2005) showing that for lower nodes, the role classification is generally more accurate than for upper ones; • if only two nodes are involved, i.e. they dominate each other, then keep the one with the higher SVM classification score. 2.2 Standard Features The discovery of relevant features is, as usual, a complex task. However, there is a common consensus on the set of basic features that should be adopted. Among them, we select the following subset: (a) Phrase Type, Predicate Word, Head Word, 134 Position and Voice as defined in (Gildea and Jurafsky, 2002); (b) Partial Path, No Direction Path, Head</context>
</contexts>
<marker>Moschitti, Giuglea, Coppola, Basili, 2005</marker>
<rawString>Alessandro Moschitti, Ana-Maria Giuglea, Bonaventura Coppola, and Roberto Basili. 2005. Hierarchical semantic role labeling. In Proceedings of CoNLL-2005, Ann Arbor, Michigan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alessandro Moschitti</author>
</authors>
<title>A study on convolution kernels for shallow semantic parsing.</title>
<date>2004</date>
<booktitle>In proceedings of ACL-2004,</booktitle>
<location>Barcelona,</location>
<marker>Moschitti, 2004</marker>
<rawString>Alessandro Moschitti. 2004. A study on convolution kernels for shallow semantic parsing. In proceedings of ACL-2004, Barcelona, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sameer Pradhan</author>
<author>Kadri Hacioglu</author>
<author>Wayne Ward</author>
<author>James H Martin</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Semantic role parsing: Adding semantic structure to unstructured text.</title>
<date>2003</date>
<booktitle>In Proceedings ofICDM-2003,</booktitle>
<location>Melbourne, USA.</location>
<contexts>
<context position="1578" citStr="Pradhan et al., 2003" startWordPosition="245" endWordPosition="248">e translation, question answering and information extraction. However, effective ways for seeing this belief come to fruition require a lot more research investment. Since most of the available data resources are for the English language, most of the reported SRL systems to date only deal with English. Nevertheless, we do see some headway for other languages, such as German and Chinese (Erk and Pado, 2006; Sun and Jurafsky, 2004; Xue and Palmer, 2005). The systems for non-English languages follow the successful models devised for English, e.g. (Gildea and Jurafsky, 2002; Xue and Palmer, 2004; Pradhan et al., 2003). However, no SRL system exists for Arabic. In this paper, we present a system for semantic role labeling for modern standard Arabic. To our knowledge, it is the first SRL system for a semitic language in the literature. It is based on a supervised model that uses support vector machines (SVM) technology for argument boundary detection and argument classification. It is trained and tested using the pilot Arabic PropBank data released as part of the SEMEVAL 2007 data. Given the lack of a reliable deep syntactic parser, in this research we use gold trees. The system yields an F-score of 94.06 on</context>
<context position="2923" citStr="Pradhan et al., 2003" startWordPosition="478" endWordPosition="481"> 2 SRL system for Arabic The design of an optimal model for an Arabic SRL systems should take into account specific linguistic aspects of the language. However, a remarkable amount of research has already been done in SRL and we can capitalize from it to design a basic and effective SRL system. The idea is to use the technology developed for English and verify if it is suitable for Arabic. Our adopted SRL models use Support Vector Machines (SVM) to implement a two steps classification approach, i.e. boundary detection and argument classification. Such models have already been investigated in (Pradhan et al., 2003; Moschitti et al., 2005) and their description is hereafter reported. 2.1 Predicate Argument Extraction The extraction of predicative structures is carried out at the sentence level. Given a predicate within a natural language sentence, its arguments have to be properly labeled. This problem is usually divided in two subtasks: (a) the detection of the boundaries, i.e. the word spans of the arguments, and (b) the classification of their type, e.g. Arg0 and ArgM in 133 Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 133–136, Prague, June 2007. c�2007 </context>
<context position="5146" citStr="Pradhan et al., 2003" startWordPosition="852" endWordPosition="855">P, VPB, NNP, NN, PP, JJ or IN the instances Finstated,a are generated. In case the node a exactly covers ”project nations United”, ”grace-period final” or ”for allowing the chance before Cyprus”, Fp,a will be a positive instance otherwise it will be a negative one, e.g. Finstated,IN. The T+ and T− sets are used to train the boundary classifier. To train the multi-class classifier, T+ can be reorganized as positive T+argi and negative T−argi examples for each argument i. In this way, an individual ONE-vs-ALL classifier for each argument i can be trained. We adopted this solution, according to (Pradhan et al., 2003), since it is simple and effective. In the classification phase, given an unseen sentence, all its Fp,a are generated and classified by each individual classifier Ci. The argument associated with the maximum among the scores provided by the individual classifiers is eventually selected. The above approach assigns labels independently for the different arguments in the predicate argument structure. As a consequence the classifier output may generate overlapping arguments. Thus, to make the annotations globally consistent, we apply a disambiguating heuristic that selects only one argument among </context>
<context position="6762" citStr="Pradhan et al., 2003" startWordPosition="1120" endWordPosition="1124">or upper ones; • if only two nodes are involved, i.e. they dominate each other, then keep the one with the higher SVM classification score. 2.2 Standard Features The discovery of relevant features is, as usual, a complex task. However, there is a common consensus on the set of basic features that should be adopted. Among them, we select the following subset: (a) Phrase Type, Predicate Word, Head Word, 134 Position and Voice as defined in (Gildea and Jurafsky, 2002); (b) Partial Path, No Direction Path, Head Word POS, First and Last Word/POS in Constituent and SubCategorization as proposed in (Pradhan et al., 2003); and (c) Syntactic Frame as designed in (Xue and Palmer, 2004). For example, Phrase Type indicates the syntactic type of the phrase labeled as a predicate argument, NP for Arg] in Figure 1 whereas the Parse Tree Path contains the path in the parse tree between the predicate and the argument phrase, expressed as a sequence of nonterminal labels linked by direction (up or down) symbols, VPB ↑ VP ↑ S ↓ NP for Arg] in Figure 1. 3 Experiments In these experiments, we investigate if the technology proposed in previous work for automatic SRL of English texts is suitable for Arabic SRL systems. From </context>
</contexts>
<marker>Pradhan, Hacioglu, Ward, Martin, Jurafsky, 2003</marker>
<rawString>Sameer Pradhan, Kadri Hacioglu, Wayne Ward, James H. Martin, and Daniel Jurafsky. 2003. Semantic role parsing: Adding semantic structure to unstructured text. In Proceedings ofICDM-2003, Melbourne, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Honglin Sun</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Shallow semantic parsing of chinese. In</title>
<date>2004</date>
<booktitle>In Proceedings of NAACL 2004,</booktitle>
<location>Boston, USA.</location>
<contexts>
<context position="1389" citStr="Sun and Jurafsky, 2004" startWordPosition="215" endWordPosition="218">guments, semantic role labeling (SRL), in a sentence has a lot of potential for and is a significant step towards the improvement of important applications such as document retrieval, machine translation, question answering and information extraction. However, effective ways for seeing this belief come to fruition require a lot more research investment. Since most of the available data resources are for the English language, most of the reported SRL systems to date only deal with English. Nevertheless, we do see some headway for other languages, such as German and Chinese (Erk and Pado, 2006; Sun and Jurafsky, 2004; Xue and Palmer, 2005). The systems for non-English languages follow the successful models devised for English, e.g. (Gildea and Jurafsky, 2002; Xue and Palmer, 2004; Pradhan et al., 2003). However, no SRL system exists for Arabic. In this paper, we present a system for semantic role labeling for modern standard Arabic. To our knowledge, it is the first SRL system for a semitic language in the literature. It is based on a supervised model that uses support vector machines (SVM) technology for argument boundary detection and argument classification. It is trained and tested using the pilot Ara</context>
</contexts>
<marker>Sun, Jurafsky, 2004</marker>
<rawString>Honglin Sun and Daniel Jurafsky. 2004. Shallow semantic parsing of chinese. In In Proceedings of NAACL 2004, Boston, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nianwen Xue</author>
<author>Martha Palmer</author>
</authors>
<title>Calibrating features for semantic role labeling.</title>
<date>2004</date>
<booktitle>In Proceedings of EMNLP 2004,</booktitle>
<pages>88--94</pages>
<location>Barcelona,</location>
<contexts>
<context position="1555" citStr="Xue and Palmer, 2004" startWordPosition="241" endWordPosition="244">ment retrieval, machine translation, question answering and information extraction. However, effective ways for seeing this belief come to fruition require a lot more research investment. Since most of the available data resources are for the English language, most of the reported SRL systems to date only deal with English. Nevertheless, we do see some headway for other languages, such as German and Chinese (Erk and Pado, 2006; Sun and Jurafsky, 2004; Xue and Palmer, 2005). The systems for non-English languages follow the successful models devised for English, e.g. (Gildea and Jurafsky, 2002; Xue and Palmer, 2004; Pradhan et al., 2003). However, no SRL system exists for Arabic. In this paper, we present a system for semantic role labeling for modern standard Arabic. To our knowledge, it is the first SRL system for a semitic language in the literature. It is based on a supervised model that uses support vector machines (SVM) technology for argument boundary detection and argument classification. It is trained and tested using the pilot Arabic PropBank data released as part of the SEMEVAL 2007 data. Given the lack of a reliable deep syntactic parser, in this research we use gold trees. The system yields</context>
<context position="6825" citStr="Xue and Palmer, 2004" startWordPosition="1133" endWordPosition="1136">nate each other, then keep the one with the higher SVM classification score. 2.2 Standard Features The discovery of relevant features is, as usual, a complex task. However, there is a common consensus on the set of basic features that should be adopted. Among them, we select the following subset: (a) Phrase Type, Predicate Word, Head Word, 134 Position and Voice as defined in (Gildea and Jurafsky, 2002); (b) Partial Path, No Direction Path, Head Word POS, First and Last Word/POS in Constituent and SubCategorization as proposed in (Pradhan et al., 2003); and (c) Syntactic Frame as designed in (Xue and Palmer, 2004). For example, Phrase Type indicates the syntactic type of the phrase labeled as a predicate argument, NP for Arg] in Figure 1 whereas the Parse Tree Path contains the path in the parse tree between the predicate and the argument phrase, expressed as a sequence of nonterminal labels linked by direction (up or down) symbols, VPB ↑ VP ↑ S ↓ NP for Arg] in Figure 1. 3 Experiments In these experiments, we investigate if the technology proposed in previous work for automatic SRL of English texts is suitable for Arabic SRL systems. From this perspective, we tested each SRL phase, i.e. boundary detec</context>
</contexts>
<marker>Xue, Palmer, 2004</marker>
<rawString>Nianwen Xue and Martha Palmer. 2004. Calibrating features for semantic role labeling. In Proceedings of EMNLP 2004, pages 88–94, Barcelona, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nianwen Xue</author>
<author>Martha Palmer</author>
</authors>
<title>Automatic semantic role labeling for chinese verbs.</title>
<date>2005</date>
<booktitle>In Proceedings of IJCAI,</booktitle>
<location>Edinburgh, Scotland.</location>
<contexts>
<context position="1412" citStr="Xue and Palmer, 2005" startWordPosition="219" endWordPosition="222">abeling (SRL), in a sentence has a lot of potential for and is a significant step towards the improvement of important applications such as document retrieval, machine translation, question answering and information extraction. However, effective ways for seeing this belief come to fruition require a lot more research investment. Since most of the available data resources are for the English language, most of the reported SRL systems to date only deal with English. Nevertheless, we do see some headway for other languages, such as German and Chinese (Erk and Pado, 2006; Sun and Jurafsky, 2004; Xue and Palmer, 2005). The systems for non-English languages follow the successful models devised for English, e.g. (Gildea and Jurafsky, 2002; Xue and Palmer, 2004; Pradhan et al., 2003). However, no SRL system exists for Arabic. In this paper, we present a system for semantic role labeling for modern standard Arabic. To our knowledge, it is the first SRL system for a semitic language in the literature. It is based on a supervised model that uses support vector machines (SVM) technology for argument boundary detection and argument classification. It is trained and tested using the pilot Arabic PropBank data relea</context>
</contexts>
<marker>Xue, Palmer, 2005</marker>
<rawString>Nianwen Xue and Martha Palmer. 2005. Automatic semantic role labeling for chinese verbs. In Proceedings of IJCAI, Edinburgh, Scotland.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>