<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000045">
<title confidence="0.704221">
D-Tree Grammars
</title>
<author confidence="0.395813">
Owen Rambow
</author>
<note confidence="0.55025">
CoGenTex, Inc.
840 Hanshaw Road
Ithaca, NY 14850
owen@cogentex coin
</note>
<author confidence="0.916061">
K. Vijay-Shanker
</author>
<affiliation confidence="0.99453">
Department of Computer &amp;
Information Science
University of Delaware
</affiliation>
<address confidence="0.940384">
Newark, DE 19716
</address>
<email confidence="0.965636">
vijayOudel.edu
</email>
<author confidence="0.989757">
David Weir
</author>
<affiliation confidence="0.971366666666667">
School of Cognitive &amp;
Computing Sciences
University of Sussex
</affiliation>
<address confidence="0.983314">
Brighton, BN1 9HQ, UK.
</address>
<email confidence="0.95811">
david.weirOcogs.susx.ac.uk
</email>
<sectionHeader confidence="0.993477" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999671705882353">
DTG are designed to share some of the
advantages of TAG while overcoming some
of its limitations. DTG involve two com-
position operations called subsertion and
sister-adjunction. The most distinctive fea-
ture of DTG is that, unlike TAG, there is
complete uniformity in the way that the
two DTG operations relate lexical items:
subsertion always corresponds to comple-
mentation and sister-adjunction to modi-
fication. Furthermore, DTG, unlike TAG,
can provide a uniform analysis for wh-
movement in English and Kashmiri, des-
pite the fact that the wh element in Kash-
miri appears in sentence-second position,
and not sentence-initial position as in Eng-
lish.
</bodyText>
<sectionHeader confidence="0.999518" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999650689655172">
We define a new grammar formalism, called D-Tree
Grammars (DTG), which arises from work on Tree-
Adjoining Grammars (TAG) (Joshi et al., 1975). A
salient feature of TAG is the extended domain of lo-
cality it provides. Each elementary structure can
be associated with a lexical item (as in Lexicalized
TAG (LTAG) (Joshi &amp; Schabes, 1991)). Properties
related to the lexical item (such as subcategoriza-
tion, agreement, certain types of word order varia-
tion) can be expressed within the elementary struc-
ture (Kroch, 1987; Frank, 1992). In addition, TAG
remain tractable, yet their generative capacity is suf-
ficient to account for certain syntactic phenomena
that, it has been argued, lie beyond Context-Free
Grammars (CFG) (Shieber, 1985). TAG, however, has
two limitations which provide the motivation for this
work. The first problem (discussed in Section 1.1)
is that the TAG operations of substitution and ad-
junction do not map cleanly onto the relations of
complementation and modification. A second pro-
blem (discussed in Section 1.2) has to do with the
inability of TAG to provide analyses for certain syn-
tactic phenomena. In developing DTG we have tried
to overcome these problems while remaining faith-
ful to what we see as the key advantages of TAG (in
particular, its enlarged domain of locality). In Sec-
tion 1.3 we introduce some of the key features of
DTG and explain how they are intended to address
the problems that we have identified with TAG.
</bodyText>
<subsectionHeader confidence="0.995266">
1.1 Derivations and Dependencies
</subsectionHeader>
<bodyText confidence="0.997683638888889">
In LTAG, the operations of substitution and adjunc-
tion relate two lexical items. It is therefore natural
to interpret these operations as establishing a di-
rect linguistic relation between the two lexical items,
namely a relation of complementation (predicate-
argument relation) or of modification. In purely
CFG-based approaches, these relations are only im-
plicit. However, they represent important linguistic
intuition, they provide a uniform interface to se-
mantics, and they are, as Schabes &amp; Shieber (1994)
argue, important in order to support statistical pa-
rameters in stochastic frameworks and appropriate
adjunction constraints in TAG. In many frameworks,
complementation and modification are in fact made
explicit: LFG (Bresnan &amp; Kaplan, 1982) provides a
separate functional (f-) structure, and dependency
grammars (see e.g. Mel&apos;euk (1988)) use these no-
tions as the principal basis for syntactic represen-
tation. We will follow the dependency literature
in referring to complementation and modification
as syntactic dependency. As observed by Rambow
and Joshi (1992), for TAG, the importance of the
dependency structure means that not only the deri-
ved phrase-structure tree is of interest, but also the
operations by which we obtained it from elementary
structures. This information is encoded in the deri-
vation tree (Vijay-Shanker, 1987).
However, as Vijay-Shanker (1992) observes, the
TAG composition operations are not used uniformly:
while substitution is used only to add a (nominal)
complement, adjunction is used both for modifica-
tion and (clausal) complementation. Clausal com-
plementation could not be handled uniformly by
substitution because of the existence of syntactic
phenomena such as long-distance wh-movement in
English. Furthermore, there is an inconsistency in
</bodyText>
<page confidence="0.997482">
151
</page>
<bodyText confidence="0.9995059">
the directionality of the operations used for comple-
mentation in TAG@: nominal complements are sub-
stituted into their governing verb&apos;s tree, while the
governing verb&apos;s tree is adjoined into its own clausal
complement. The fact that adjunction and substitu-
tion are used in a linguistically heterogeneous man-
ner means that (standard) TAG derivation trees do
not provide a good representation of the dependen-
cies between the words of the sentence, i.e., of the
predicate-argument and modification structure.
</bodyText>
<figure confidence="0.919838">
adore
SUBJ COMP
</figure>
<figureCaption confidence="0.7619512">
Figure 1: Derivation trees for (1): original definition
(left); Schabes &amp; Shieber definition (right)
For instance, English sentence (1) gets the deriva-
tion structure shown on the left in Figure 1&apos;.
(1) Small spicy hotdogs he claims Mary seems to adore
</figureCaption>
<bodyText confidence="0.997840727272727">
When comparing this derivation structure to the
dependency structure in Figure 2, the following pro-
blems become apparent. First, both adjectives de-
pend on hotdog, while in the derivation structure
small is a daughter of spicy. In addition, seem de-
pends on claim (as does its nominal argument, he),
and adore depends on seem. In the derivation struc-
ture, seem is a daughter of adore (the direction does
not express the actual dependency), and claim is also
a daughter of adore (though neither is an argument
of the other).
</bodyText>
<figure confidence="0.913873125">
claim
SUBOMP
he seem
I COMP
adore
Mary hotdog
&lt;/LOD
spicy small
</figure>
<figureCaption confidence="0.994307">
Figure 2: Dependency tree for (1)
</figureCaption>
<bodyText confidence="0.955396318181818">
Schabes &amp; Shieber (1994) solve the first problem
&apos;For clarity, we depart from standard TAG notational
practice and annotate nodes with lexemes and arcs with
grammatical function.
by distinguishing between the adjunction of modi-
fiers and of clausal complements. This gives us the
derivation structure shown on the right in Figure 1.
While this might provide a satisfactory treatment of
modification at the derivation level, there are now
three types of operations (two adjunctions and sub-
stitution) for two types of dependencies (arguments
and modifiers), and the directionality problem for
embedded clauses remains unsolved.
In defining DTG we have attempted to resolve
these problems with the use of a single operation
(that we call subsertion) for handling all comple-
mentation and a second operation (called sister-
adjunction) for modification. Before discussion
these operations further we consider a second pro-
blem with TAG that has implications for the design
of these new composition operations (in particular,
subsertion).
</bodyText>
<subsectionHeader confidence="0.980905">
1.2 Problematic Constructions for TAG
</subsectionHeader>
<bodyText confidence="0.9999798125">
TAG cannot be used to provide suitable analyses
for certain syntactic phenomena, including long-
distance scrambling in German (Becker et al., 1991),
Romance Clitics (Bleam, 1994), wh-extraction out of
complex picture-NPs (Kroch, 1987), and Kashmiri
wh-extraction (presented here). The problem in de-
scribing these phenomena with TAG arises from the
fact (observed by Vijay-Shanker (1992)) that adjoi-
ning is an overly restricted way of combining structu-
res. We illustrate the problem by considering Kash-
miri drawing on Bhatt (1994). Wh-
extraction in Kashmiri proceeds as in English, ex-
cept that the wh-word ends up in sentence-second
position, with a topic from the matrix clause in
sentence-initial position. This is illustrated in (2a)
for a simple clause and in (2b) for a complex clause.
</bodyText>
<figure confidence="0.6082115">
(2) a. rameshan kyaa dyutnay tse
RameshERG whatNom gave youoAr
What did you give Ramesh?
b. rameshan kyaa, chu baasaan [ki
RameshERG what is believeNPert that
me kor ts]
&apos;ERG do
What does Ramesh believe that I did?
</figure>
<bodyText confidence="0.999427285714286">
Since the moved element does not appear in
sentence-initial position, the TAG analysis of English
wit-extraction of Kroch (1987; 1989) (in which the
matrix clause is adjoined into the embedded clause)
cannot be transferred, and in fact no linguistically
plausible TAG analysis appears to be available.
In the past, variants of TAG have been develo-
ped to extend the range of possible analyses. In
Multi-Component TAG (MCTAG) (Joshi, 1987), trees
are grouped into sets which must be adjoined to-
gether (multicomponent adjunction). However, MC-
TAG lack expressive power since, while syntactic re-
lations are invariably subject to c-command or do-
minance constraints, there is no way to state that
</bodyText>
<figure confidence="0.998961666666667">
Mary OBJ
hotdog claim
I mon I SUBJ
spicy he
I MOD
small
adore
COMP
COMP
Mary OBJ seem
hotdog claim
MOD MOD J SUBJ
spicy small he
COMP
seam SUBJ
</figure>
<page confidence="0.981981">
152
</page>
<bodyText confidence="0.999988">
two trees from a set must be in a dominance rela-
tion in the derived tree. MCTAG with Domination
Links (MCTAG-DL) (Becker et al., 1991) are multi-
component systems that allow for the expression of
dominance constraints. However, MCTAG-DL share a
further problem with MCTAG: the derivation struc-
tures cannot be given a linguistically meaningful in-
terpretation. Thus, they fail to address the first pro-
blem we discussed (in Section 1.1).
</bodyText>
<subsectionHeader confidence="0.922744">
1.3 The DTG Approach
</subsectionHeader>
<bodyText confidence="0.999811774193549">
Vijay-Shanker (1992) points out that use of ad-
junction for clausal complementation in TAG corre-
sponds, at the level of dependency structure, to sub-
stitution at the foot node&apos; of the adjoined tree. Ho-
wever, adjunction (rather than substitution) is used
since, in general, the structure that is substituted
may only form part of the clausal complement: the
remaining substructure of the clausal complement
appears above the root of the adjoined tree. Un-
fortunately, as seen in the examples given in Sec-
tion 1.2, there are cases where satisfactory analyses
cannot be obtained with adjunction. In particular,
using adjunction in this way cannot handle cases in
which parts of the clausal complement are required
to be placed within the structure of the adjoined
tree.
The DTG operation of subsertion is designed to
overcome this limitation. Subsertion can be viewed
as a generalization of adjunction in which com-
ponents of the clausal complement (the subserted
structure) which are not substituted can be inters-
persed within the structure that is the site of the
subsertion. Following earlier work (Becker et al.,
1991; Vijay-Shanker, 1992), DTG provide a mecha-
nism involving the use of domination links (d-edges)
that ensure that parts of the subserted structure
that are not substituted dominate those parts that
are. Furthermore, there is a need to constrain the
way in which the non-substituted components can
be interspersed&apos;. This is done by either using ap-
propriate feature constraints at nodes or by means
of subsertion-insertion constraints (see Section 2).
We end this section by briefly commenting on the
other DTG operation of sister-adjunction. In TAG,
modification is performed with adjunction of modi-
fier trees that have a highly constrained form. In
particular, the foot nodes of these trees are always
daughters of the root and either the leftmost or
rightmost frontier nodes. The effect of adjoining a
21n these cases the foot node is an argument node of
the lexical anchor.
&apos;This was also observed by Rambow (1994a), where
an integrity constraint (first defined for an ID/LP version
of TAG (Becker etal., 1991)) is defined for a MCTAG-DL
version called V-TAG. However, this was found to be in-
sufficient for treating both long-distance scrambling and
long-distance topicalization in German. V-TAG retains
adjoining (to handle topicalization) for this reason.
tree of this form corresponds (almost) exactly to the
addition of a new (leftmost or rightmost) subtree
below the nede that was the site of the adjunction.
For this reason, we have equipped DTG with an ope-
ration (sister-adjunction) that does exactly this and
nothing more. From the definition of DTG in Sec-
tion 2 it can be seen that the essential aspects of
Schabes &amp; Shieber (1994) treatment for modifica-
tion, including multiple modifications of a phrase,
can be captured by using this operation4.
After defining DTG in Section 2, we discuss, in
Section 3, DTG analyses for the English and Kash-
miri data presented in this section. Section 4 briefly
discusses DTG recognition algorithms.
</bodyText>
<sectionHeader confidence="0.774852" genericHeader="method">
2 Definition of D-Tree Grammars
</sectionHeader>
<bodyText confidence="0.998402578947369">
A d-tree is a tree with two types of edges: domi-
nation edges (d-edges) and immediate domination
edges (i-edges). D-edges and i-edges express domi-
nation and immediate domination relations between
nodes. These relations are never rescinded when d-
trees are composed. Thus, nodes separated by an
i-edge will remain in a mother-daughter relationship
throughout the derivation, whereas nodes separated
by an d-edge can be equated or have a path of any
length inserted between them during a derivation.
D-edges and i-edges are not distributed arbitrarily
in d-trees. For each internal node, either all of its
daughters are linked by i-edges or it has a single
daughter that is linked to it by a d-edge. Each node
is labelled with a terminal symbol, a nonterminal
symbol or the empty string. A d-tree containing n
d-edges can be decomposed into n + 1 components
containing only i-edges.
D-trees can be composed using two operations:
subsertion and sister-adjunction. When a d-tree
a is subserted into another d-tree fl, a component of
a is substituted at a frontier nonterminal node (a
substitution node) of and all components of a
that are above the substituted component are in-
serted into d-edges above the substituted node or
placed above the root node. For example, consider
the d-trees a and shown in Figure 3. Note that
components are shown as triangles. In the compo-
sed d-tree 7 the component a(5) is substituted at
a substitution node in /3. The components, a(1),
a(2), and a(4) of a above a(5) drift up the path
in which runs from the substitution node. These
components are then inserted into d-edges in # or
above the root of #. In general, when a component
a(i) of some d-tree a is inserted into a d-edge bet-
ween nodes ni and 772 two new d-edges are created,
the first of which relates and the root node of
a(i), and the second of which relates the frontier
</bodyText>
<footnote confidence="0.61411">
&apos;Santorini and Mahootian (1995) provide additional
evidence against the standard TAG approach to modifi-
cation from code switching data, which can be accounted
for by using sister-adjunction.
</footnote>
<page confidence="0.996409">
153
</page>
<figureCaption confidence="0.999793">
Figure 3: Subsertion
</figureCaption>
<bodyText confidence="0.999530000000001">
node of a(i) that dominates the substituted com-
ponent to 772. It is possible for components above
the substituted node to drift arbitrarily far up the
d-tree and distribute themselves within domination
edges, or above the root, in any way that is compati-
ble with the domination relationships present in the
substituted d-tree. DTG provide a mechanism called
subsertion-insertion constraints to control what
can appear within d-edges (see below).
The second composition operation involving d-
trees is called sister-adjunction. When a d-tree a is
sister-adjoined at a node ri in a d-tree 13 the com-
posed d-tree 7 results from the addition to fl of
a as a new leftmost or rightmost sub-d-tree below
I). Note that sister-adjunction involves the addition
of exactly one new immediate domination edge and
that several sister-adjunctions can occur at the same
node. Sister-adjoining constraints specify where
d-trees can be sister-adjoined and whether they will
be right- or left-sister-adjoined (see below).
A DTG is a four tuple G = (ITN , VT S, D) where
VN and VT are the usual nonterminal and termi-
nal alphabets, S E VN is a distinguished nonter-
minal and D is a finite set of elementary d-trees.
A DTG is said to be lexicalized if each d-tree in
the grammar has at least one terminal node. The
elementary d-trees of a grammar G have two addi-
tional annotations: subsertion-insertion constraints
and sister-adjoining constraints. These will be de-
scribed below, but first we define simultaneously
DTG derivations and subsertion-adjoining trees (SA-
trees), which are partial derivation structures that
can be interpreted as representing dependency in-
formation, the importance of which was stressed in
the introduction&apos;.
Consider a DTG G = (VN, VT S D). In defining
SA-trees, we assume some naming convention for
the elementary d-trees in D and some consistent or-
dering on the components and nodes of elementary
d-trees in D. For each i, we define the set of d-trees
Ti(G) whose derivations are captured by SA-trees of
height i or less. Let To(G) be the set D of elemen-
tary d-trees of G. Mark all of the components of each
d-tree in To(G) as being substitutable6. Only com-
ponents marked as substitutable can be substituted
in a subsertion operation. The SA-tree for a E T0(G)
consists of a single node labelled by the elementary
d-tree name for a.
For i&gt; 0 let Ti(G) be the union of the set T1_1(G)
with the set of all d-trees 7 that can be produced as
follows. Let a E D and let 7 be the result of subser-
ting or sister-adjoining the d-trees 7&apos;,. • 7k into a
where 71, ,-y, are all in T1... ,(G), with the subser-
tions taking place at different substitution nodes in
a as the footnote. Only substitutable components
of -y1,...,-yk can be substituted in these subsertions.
Only the new components of 7 that came from a are
marked as substitutable in 7. Let r1, , kbe the
SA-trees for 71, , 7k, respectively. The SA-tree 7
for 7 has root labelled by the name for a and k sub-
trees 71, , 7k. The edge from the root of r to the
root of the subtree 7i is labelled by i (1 &lt; i &lt; k) de-
fined as follows. Suppose that 7i was subserted into
a and the root of ri is labelled by the name of some
a&apos; E D. Only components of a&apos; will have been mar-
ked as substitutable in 7. Thus, in this subsertion
some component ai(j) will have been substituted at
a node in a with address n. In this case, the la-
bel 1 is the pair (j, n). Alternatively, 7i will have
&apos;Due to space limitations, in the following definiti-
ons we are forced to be somewhat imprecise when we
identify a node in a derived d-tree with the node in the
elementary d-trees (elementary nodes) from which it was
derived. This is often done in TAG literature, and hope-
fully it will be clear what is intended.
&apos;We will discuss the notion of substitutability further
in the next section. It is used to ensure the SA-tree
is a tree. That is, an elementary structure cannot be
subserted into more than one structure since this would
be counter to our motivations for using subsertion for
complementation.
</bodyText>
<equation confidence="0.8199434">
insertion
insertion
substitution
insertion
a(3) a(4)
</equation>
<page confidence="0.998843">
154
</page>
<bodyText confidence="0.992951072727273">
been d-sister-adjoined at some node with address n
in a, in which case l will be the pair (d, n) where
d E { left, right }.
The tree set T(G) generated by G is defined as
the set of trees 7 such that: 7&apos; E Ti(G) for some i &gt;
0; 7&apos; is rooted with the nonterminal S; the frontier of
7&apos; is a string in Vit ; and 7 results from the removal of
all d-edges from 7&apos;. A d-edge is removed by merging
the nodes at either end of the edge as long as they are
labelled by the same symbol. The string language
L(G) associated with G is the set of terminal strings
appearing on the frontier of trees in T(G).
We have given a reasonably precise definition of
SA-trees since they play such an important role in
the motivation for this work. We now describe infor-
mally a structure that can be used to encode a DTG
derivation. A derivation graph for 7 E T(G) results
from the addition of insertion edges to a SA-tree r
for 7. The location in -y of an inserted elementary
component a(i) can be unambiguously determined
by identifying the source of the node (say the node
with address n in the elementary d-tree a&apos;) with
which the root of this occurrence of a(i) is merged
with when d-edges are removed. The insertion edge
will relate the two (not necessarily distinct) nodes
corresponding to appropriate occurrences of a and
a&apos; and will be labelled by the pair (i, n).
Each d-edge in elementary d-trees has an associa-
ted subsertion-insertion constraint (SIC). A SIC is a
finite set of elementary node addresses (ENAs). An
ENA n specifies some elementary d-tree a E D, a
component of a and the address of a node within
that component of a. If a ENA q is in the SIC asso-
ciated with a d-edge between qi and q2 in an elemen-
tary d-tree a then n cannot appear properly within
the path that appears from i to 712 in the derived
tree 7 E T(G).
Each node of elementary d-trees has an associa-
ted sister-adjunction constraint (SAC). A SAC is a
finite set of pairs, each pair identifying a direction
(left or right) and an elementary d-tree. A SAC gi-
ves a complete specification of what can be sister-
adjoined at a node. If a node ti is associated with
a SAC containing a pair (d, a) then the d-tree a can
be d-sister-adjoined at q. By definition of sister-
adjunction, all substitution nodes and all nodes at
the top of d-edges can be assumed to have SACs that
are the empty-set. This prevents sister-adjunction at
these nodes.
In this section we have defined &amp;quot;raw&amp;quot; DTG. In a
more refined version of the formalism we would as-
sociate (a single) finite-valued feature structure with
each node&apos;. It is a matter of further research to de-
termine to what extent SICs and SACs can be stated
globally for a grammar, rather than being attached
</bodyText>
<footnote confidence="0.87661">
7Trees used in Section 3 make use of such feature
structures.
</footnote>
<bodyText confidence="0.996419333333333">
to d-edges/nodess. See the next section for a brief
discussion of linguistic principles from which a gram-
mar&apos;s SICs could be derived.
</bodyText>
<sectionHeader confidence="0.984082" genericHeader="method">
3 Linguistic Examples
</sectionHeader>
<bodyText confidence="0.9997055">
In this section, we show how an account for the data
introduced in Section 1 can be given with DTG.
</bodyText>
<subsectionHeader confidence="0.981508">
3.1 Getting Dependencies Right: English
</subsectionHeader>
<figure confidence="0.757085133333333">
S,
NP VP[fin: +1
VP[fin: VP[fin: A.]
V VP[fin: -1
claims seems
S&apos;
NP
(hotdogs)
S.
NP VP[fin: +1
(Mary)
VP[fin: -]
V NP
I I
to adore
</figure>
<figureCaption confidence="0.999105">
Figure 4: D-trees for (1)
</figureCaption>
<bodyText confidence="0.998799133333333">
In Figure 4, we give a DTG that generates sent-
ence (1). Every d-tree is a projection from a lexical
anchor. The label of the maximal projection is, we
assume, determined by the morphology of the an-
chor. For example, if the anchor is a finite verb, it
will project to S, indicating that an overt syntactic
(&amp;quot;surface&amp;quot;) subject is required for agreement with
it (and perhaps case-assignment). Furthermore, a
finite verb may optionally also project to S&apos; (as in
the d-tree shown for claims), indicating that a wh-
moved or topicalized element is required. The fi-
nite verb seems also projects to S, even though it
does not itself provide a functional subject. In the
case of the to adore tree, the situation is the in-
verse: the functional subject requires a finite verb
</bodyText>
<footnote confidence="0.88583425">
8In this context, it might be beneficial to consider
the expression of a feature-based lodcalist theory such
as HPSG in DTG, similar to the compilation of HPSG to
TAG (Kasper et al., 1995).
</footnote>
<page confidence="0.998459">
155
</page>
<bodyText confidence="0.999148375">
to agree with, which is signaled by the fact that its
component&apos;s root and frontier nodes are labelled S
and VP, respectively, but the verb itself is not finite
and therefore only projects to VP[-fin]. Therefore,
the subject will have to raise out of its clause for
agreement and case assignment. The direct object
of to adore has wh-moved out of the projection of
the verb (we include a trace for the sake of clarity).
</bodyText>
<figure confidence="0.9922495">
S&apos;
NP
N&apos; NP VP
AdjP AdjP N he V
I I I I
Adj Adj hotdogs claims NP VP
I I I /1
small spicy Mary seems VP
NP
to adore e
</figure>
<figureCaption confidence="0.999956">
Figure 5: Derived tree for (1)
</figureCaption>
<bodyText confidence="0.995369032258065">
We add SICs to ensure that the projections are
respected by components of other d-trees that may
be inserted during a derivation. A SIC is associa-
ted with the d-edge between VP and S node in the
seems d-tree to ensure that no node labelled S&apos; can
be inserted within it – i.e., it can not be filled by
with a wh-moved element. In contrast, since both
the subject and the object of to adore have been
moved out of the projection of the verb, the path to
these arguments do not carry any SIC at all&apos;.
We now discuss a possible derivation. We start
out with the most deeply embedded clause, the ad-
ores clause. Before subserting its nominal argu-
ments, we sister-adjoin the two adjectival trees to
the tree for hotdogs. This is handled by a SAC asso-
ciated with the N&apos; node that allows all trees rooted
in AdjP to be left sister-adjoined. We then sub-
sert this structure and the subject into the to adore
d-tree. We subsert the resulting structure into the
seems clause by substituting its maximal projection
node, labelled VP[fin: 1, at the VP[fin: -] frontier
node of seems, and by inserting the subject into the
d-edge of the seems tree. Now, only the S node of
the seems tree (which is its maximal projection) is
substitutable. Finally, we subsert this derived struc-
&apos;We enforce island effects for wh-movement by using
a [±extract] feature on substitution nodes. This corre-
sponds roughly to the analysis in TAG, where islandhood
is (to a large extent) enforced by designating a particular
node as the foot node (Kroch &amp; Joshi, 1986).
ture into the claims d-tree by substituting the S node
of seems at che S complement node of claims, and
by inserting the object of adores (which has not yet
been used in the derivation) in the d-edge of the
claims d-tree above its S node. The derived tree is
shown in Figure 5. The SA-tree for this derivation
corresponds to the dependency tree given previously
in Figure 2.
Note that this is the only possible derivation invol-
ving these three d-trees, modulo order of operations.
To see this, consider the following putative alternate
derivation. We first subsert the to adore d-tree into
the seems tree as above, by substituting the anchor
component at the substitution node of seems. We
insert the subject component of to adore above the
anchor component of seems. We then subsert this
derived structure into the claims tree by substitu-
ting the root of the subject component of to adore
at the S node of claims and by inserting the S node
of the seems d-tree as well as the object component
of the to adore d-tree in the SYS d-edge of the claims
d-tree. This last operation is shown in Figure 6. The
resulting phrase structure tree would be the same as
in the previously discussed derivation, but the deri-
vation structure is linguistically meaningless, since
to adore would have been subserted into both seems
and claims. However, this derivation is ruled out by
the restriction that only substitutable components
can be substituted: the subject component of the
adore d-tree is not substitutable after subsertion into
the seems d-tree, and therefore it cannot be substi-
tuted into the claims d-tree.
</bodyText>
<figure confidence="0.868852428571429">
Substitution
NP VP[fin:
(Mary)
V VP[fin:
seems V NP
1
to adore
</figure>
<figureCaption confidence="0.998707">
Figure 6: An ill-formed derivation
</figureCaption>
<bodyText confidence="0.814607">
In the above discussion, substitutability played a
</bodyText>
<figure confidence="0.992924888888889">
S&apos;
NP
(hotdogs)
Insertions S&apos;
NP VP[fin: 4]
VP[fin: 4]
V
—
claims
</figure>
<page confidence="0.99355">
156
</page>
<bodyText confidence="0.999987857142857">
central role in ruling out the derivation. We observe
in passing that the SIC associated to the d-edge in
the seems d-tree also rules out this derivation. The
derivation requires that the S node of seems be in-
serted into the S&apos;/S d-edge of claims. However, we
would have to stretch the edge over two components
which are both ruled out by the SIC, since they vio-
late the projection from seems to its S node. Thus,
the derivation is excluded by the independently mo-
tivated SICs, which enforce the notion of projection.
This raises the possibility that, in grammars that ex-
press certain linguistic principles, substitutability is
not needed for ruling out derivations of this nature.
We intend to examine this issue in future work.
</bodyText>
<subsectionHeader confidence="0.992145">
3.2 Getting Word Order Right: Kashmiri
</subsectionHeader>
<figure confidence="0.9858692">
VP wh:-
I
L fin:
[
wtop :
h: - j NP VP
(rameshas) F top:.
I L fin:
Aux VP
(chu)
NP VP
V VP [
fin:
top:-wh: -
baasaan
</figure>
<figureCaption confidence="0.9683695">
Figure 7: D-trees for (2b)
Figure 7 shows the matrix and embedded clauses
</figureCaption>
<bodyText confidence="0.991601166666667">
for sentence (2b). We use the node label VP throug-
hout and use features such as top (for topic) to diffe-
rentiate different levels of projection. Observe that
in both trees an argument has been fronted. Again,
we will use the SICs to enforce the projection from a
lexical anchor to its maximal projection. Since the
direct object of kor has wh-moved out of its clause,
the d-edge connecting it to the maximal projection
of its verb has no SIC. The d-edge connecting the
maximal projection of baasaan to the Aux compo-
nent, however, has a SIC that allows only VP[wh: +,
top: -] nodes to be inserted.
</bodyText>
<figure confidence="0.982417375">
VP L fin:.
baasaan
COMP VP
I /\
ki NP VP
me NP VP
V
kor
</figure>
<figureCaption confidence="0.999993">
Figure 8: Derived d-tree for (2b)
</figureCaption>
<bodyText confidence="0.999757388888889">
The derivation proceeds as follows. We first sub-
sert the embedded clause tree into the matrix clause
tree. After that, we subsert the nominal arguments
and function words. The derived structure is shown
in Figure 8. The associated SA-tree is the desired,
semantically motivated, dependency structure: the
embedded clause depends on the matrix clause.
In this section, we have discussed examples where
the elementary objects have been obtained by pro-
jecting from lexical items. In these cases, we over-
come both the problems with TAG considered in
Section 1. The SICs considered here enforce the
same notion of projection that was used in obtai-
ning the elementary structures. This method of ar-
riving at SICs not only generalizes for the English
and Kashmiri examples but also appears to apply to
the case of long-distance scrambling and topicaliza-
tion in German.
</bodyText>
<figure confidence="0.99776925">
VP
v&apos; [ tfivfnk:
[ .4] NP VP
(kyaa) • [ tg::1]
VP fin:
COMP VP
NP VP
NP VP
V
kor
(ki)
(me)
</figure>
<page confidence="0.968365">
157
</page>
<sectionHeader confidence="0.994634" genericHeader="method">
4 Recognition
</sectionHeader>
<bodyText confidence="0.9999654">
It is straightforward to adapt the polynomial-time
CKY-style recognition algorithm for a lexicalized
UVG-DL of ftarnhow (199419) for DTG. The entries
in this array recording derivations of substrings of
input contain a set of elementary nodes along with a
multi-set of components that must be inserted above
during bottom-up recognition. These components
are added or removed at substitution and insertion.
The algorithm simulates traversal of a derived tree;
checking for SICs and SACS can be done easily. Bec-
ause of lexicalization, the size of these multi-sets is
polynomially bounded, from which the polynomial
time and space complexity of the algorithm follows.
For practical purposes, especially for lexicalized
grammars, it is preferable to incorporate some ele-
ment of prediction. We are developing a polynomial-
time Earley style parsing algorithm. The parser re-
turns a parse forest encoding all parses for an input
string. The performance of this parser is sensitive to
the grammar and input. Indeed it appears that for
grammars that lexicalize CFG and for English gram-
mar (where the structures are similar to the LTAG
developed at University of Pennsylvania (XTAG Re-
search Group, 1995)) we obtain cubic-time comple-
xity.
</bodyText>
<sectionHeader confidence="0.999129" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999936428571429">
DTG, like other formalisms in the TAG family, is lexi-
calizable, but in addition, its derivations are them-
selves linguistically meaningful. In future work we
intend to examine additional linguistic data, refining
aspects of our definition as needed. We will also
study the formal properties of DTG, and complete
the design of the Earley style parser.
</bodyText>
<sectionHeader confidence="0.997983" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999507857142857">
We would like to thank Rakesh Bhatt for help with
the Kashmiri data. We are also grateful to Tilman
Becker, Gerald Gazdar, Aravind Joshi, Bob Kasper,
Bill Keller, Tony Kroch, Klaus Netter and the ACL-
95 referees. Rambow was supported by the North
Atlantic Treaty Organization under a Grant awar-
ded in 1993, while at TALANA, Universite Paris 7.
</bodyText>
<sectionHeader confidence="0.999498" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999288378787879">
T. Becker, A. Joshi, &amp; 0. Rambow. 1991. Long distance
scrambling and tree adjoining grammars. In EACL-
91, 21-26.
R. Bltatt. 1994. Word order and case in Kashmiri.
Ph.D. thesis, Univ. Illinois.
T. Bleam. 1994. Clitic climbing in spanish: a GB per-
spective. In TAG+ Workshop, Tech. Rep. TALANA-
RT-94-01, Universite Paris 7, 16-19.
J. Bresnan Lc R. Kaplan. 1982. Lexical-functional gram-
mar: A formal system for grammatical representa-
tion. In .1. Bresnan, ed., The Mental Representation
of Grammatical Relations. MIT Press.
Frank. 1992. Syntactic Locality and Tree Adjoining
Grammar: Grammatical, Acquisition and Processing
Perspectives. Ph.D. thesis, Dept. Comp. &amp; Inf. Sc.,
Univ. Pennsylvania.
A. Joshi. 1987. An introduction to tree adjoining gram-
mars. In A. Manaster-Ramer, ed., Mathematics of
Language, 87-114.
A. Joshi, L. Levy, &amp; M. Takahashi. 1975. Tree adjunct
grammars. J. Comput. Syst. Sc., 10(1):136-163.
A. Joshi &amp; Y. Schabes. 1991. Tree-adjoining grammars
and lexicalized grammars. In M. Nivat &amp; A. Podelski,
eds., Definability and Recognizability of Sets of Trees.
R. Kasper, E. Kiefer, K. Netter, Az K. Vijay-Shanker
1995. Compilation of HPSG to TAG. In ACL-95.
A. Kroch. 1987. Subja.cency in a tree adjoining gram-
mar. In A. Manaster-Ramer, ed., Mathematics of Lan-
guage, 143-172.
A. Kroch. 1989. Asymmetries in long distance extrac-
tion in a Tree Adjoining Grammar. In Mark Baltin
&amp; Anthony Kroch, editors, Alternative Conceptions of
Phrase Structure, 66-98.
A. Kroch &amp; A. Joshi. 1986. Analyzing extraposition in
a tree adjoining grammar. In G. Huck &amp; A. Ojeda,
eds., Syntax Ed Semantics: Discontinuous Constitu-
ents, 107-149.
I. MePtuk. 1988. Dependency Syntax: Theory and Prac-
tice.
0. Rambow. 1994. Formal and Computational Aspects
of Natural Language Syntax. Ph.D. thesis, Dept. Com-
put. &amp; Inf. Sc., Univ. Pennsylvania.
0. Rambow. 1994. Multiset-Valued Linear Index Gram-
mars. In ACL-94, 263-270.
0. Rambow &amp; A. Joshi. 1992. A formal look at de-
pendency grammars and phrase-structure grammars,
with special consideration of word-order phenomena.
In Intern. Workshop on The Meaning-Text Theory,
Darmstadt. Arbeitspapiere der GMD 671, 47-66.
B. Santorini &amp; S. Mahootian. 1995. Codeswitching and
the syntactic status of adnominal adjectives. Lingua,
95.
Y. Schabes &amp; S. Shieber. 1994. An alternative con-
ception of tree-adjoining derivation. Comput. Ling.,
20(1):91-124.
S. Shieber. 1985. Evidence against the context-freeness
of natural language. Ling. £4 Phil., 8:333-343.
K. Vijay-Shanker. 1987. A Study of Tree Adjoining
Grammars. Ph.D. thesis, Dept. Comput. &amp; Inf. Sc.,
Univ. Pennsylvania.
K. Vijay-Shanker. 1992. Using descriptions of trees in
a tree adjoining grammar. Comput. Ling., 18(4):481-
517.
The XTAG Research Group. 1995. A lexicalized tree ad-
joining grammar for English. Tech. Rep. IRCS Report
95-03, Univ. Pennsylvania.
</reference>
<page confidence="0.996907">
158
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.135250">
<author confidence="0.981758">Owen Rambow</author>
<affiliation confidence="0.992923">CoGenTex, Inc.</affiliation>
<address confidence="0.9996675">840 Hanshaw Road Ithaca, NY 14850</address>
<title confidence="0.568823">owen@cogentex coin</title>
<author confidence="0.996191">K Vijay-Shanker</author>
<affiliation confidence="0.999894333333333">Department of Computer &amp; Information Science University of Delaware</affiliation>
<address confidence="0.941156">Newark, DE 19716</address>
<email confidence="0.997788">vijayOudel.edu</email>
<author confidence="0.986777">Weir</author>
<affiliation confidence="0.999796333333333">School of Cognitive &amp; Computing Sciences University of Sussex</affiliation>
<address confidence="0.999817">Brighton, BN1 9HQ, UK.</address>
<email confidence="0.99929">david.weirOcogs.susx.ac.uk</email>
<abstract confidence="0.997461329512894">designed to share some of the advantages of TAG while overcoming some its limitations. two composition operations called subsertion and sister-adjunction. The most distinctive feaof that, unlike TAG, there is complete uniformity in the way that the relate lexical items: subsertion always corresponds to complementation and sister-adjunction to modi- Furthermore, unlike TAG, provide a uniform analysis for whmovement in English and Kashmiri, despite the fact that the wh element in Kashmiri appears in sentence-second position, and not sentence-initial position as in English. We define a new grammar formalism, called D-Tree arises from work on Tree- Adjoining Grammars (TAG) (Joshi et al., 1975). A salient feature of TAG is the extended domain of locality it provides. Each elementary structure can be associated with a lexical item (as in Lexicalized (LTAG) (Joshi &amp; 1991)). Properties related to the lexical item (such as subcategorization, agreement, certain types of word order variation) can be expressed within the elementary struc- (Kroch, 1987; Frank, 1992). In addition, remain tractable, yet their generative capacity is sufficient to account for certain syntactic phenomena that, it has been argued, lie beyond Context-Free Grammars (CFG) (Shieber, 1985). TAG, however, has two limitations which provide the motivation for this The first problem (discussed in Section that the of substitution and adjunction do not map cleanly onto the relations of complementation and modification. A second problem (discussed in Section 1.2) has to do with the of provide analyses for certain syntactic phenomena. In developing DTG we have tried to overcome these problems while remaining faithto what we see as the key advantages of particular, its enlarged domain of locality). In Section 1.3 we introduce some of the key features of explain how they are intended to address problems that we have identified with 1.1 Derivations and Dependencies operations of substitution and adjunction relate two lexical items. It is therefore natural to interpret these operations as establishing a direct linguistic relation between the two lexical items, namely a relation of complementation (predicateargument relation) or of modification. In purely CFG-based approaches, these relations are only implicit. However, they represent important linguistic intuition, they provide a uniform interface to semantics, and they are, as Schabes &amp; Shieber (1994) argue, important in order to support statistical parameters in stochastic frameworks and appropriate constraints in many frameworks, complementation and modification are in fact made &amp; Kaplan, 1982) provides a separate functional (f-) structure, and dependency grammars (see e.g. Mel&apos;euk (1988)) use these notions as the principal basis for syntactic representation. We will follow the dependency literature in referring to complementation and modification as syntactic dependency. As observed by Rambow and Joshi (1992), for TAG, the importance of the dependency structure means that not only the derived phrase-structure tree is of interest, but also the operations by which we obtained it from elementary structures. This information is encoded in the derivation tree (Vijay-Shanker, 1987). However, as Vijay-Shanker (1992) observes, the operations are not used uniformly: while substitution is used only to add a (nominal) complement, adjunction is used both for modification and (clausal) complementation. Clausal complementation could not be handled uniformly by substitution because of the existence of syntactic such as in English. Furthermore, there is an inconsistency in 151 the directionality of the operations used for complementation in TAG@: nominal complements are substituted into their governing verb&apos;s tree, while the governing verb&apos;s tree is adjoined into its own clausal complement. The fact that adjunction and substitution are used in a linguistically heterogeneous manner means that (standard) TAG derivation trees do not provide a good representation of the dependencies between the words of the sentence, i.e., of the predicate-argument and modification structure. adore SUBJ COMP Figure 1: Derivation trees for (1): original definition (left); Schabes &amp; Shieber definition (right) For instance, English sentence (1) gets the derivation structure shown on the left in Figure 1&apos;. spicy hotdogs he claims Mary seems to adore When comparing this derivation structure to the dependency structure in Figure 2, the following problems become apparent. First, both adjectives deon in the derivation structure is daughter of addition, deon does its nominal argument, on the derivation strucis daughter of direction does express the actual dependency), and also daughter of neither is an argument of the other). claim SUBOMP he seem I COMP adore Mary hotdog &lt;/LOD spicy small Figure 2: Dependency tree for (1) Schabes &amp; Shieber (1994) solve the first problem &apos;For clarity, we depart from standard TAG notational practice and annotate nodes with lexemes and arcs with grammatical function. by distinguishing between the adjunction of modifiers and of clausal complements. This gives us the derivation structure shown on the right in Figure 1. While this might provide a satisfactory treatment of modification at the derivation level, there are now three types of operations (two adjunctions and substitution) for two types of dependencies (arguments and modifiers), and the directionality problem for embedded clauses remains unsolved. defining have attempted to resolve these problems with the use of a single operation (that we call subsertion) for handling all complementation and a second operation (called sisteradjunction) for modification. Before discussion these operations further we consider a second problem with TAG that has implications for the design of these new composition operations (in particular, subsertion). 1.2 Problematic Constructions for TAG be used to provide suitable analyses for certain syntactic phenomena, including longdistance scrambling in German (Becker et al., 1991), Romance Clitics (Bleam, 1994), wh-extraction out of complex picture-NPs (Kroch, 1987), and Kashmiri wh-extraction (presented here). The problem in describing these phenomena with TAG arises from the fact (observed by Vijay-Shanker (1992)) that adjoining is an overly restricted way of combining structu- We illustrate the problem by considering Kashon Bhatt (1994). extraction in Kashmiri proceeds as in English, except that the wh-word ends up in sentence-second position, with a topic from the matrix clause in sentence-initial position. This is illustrated in (2a) for a simple clause and in (2b) for a complex clause. (2) rameshan kyaa dyutnay tse RameshERG whatNom gave youoAr What did you give Ramesh? b. rameshan kyaa, chu baasaan what is believeNPertthat kor &apos;ERG do What does Ramesh believe that I did? Since the moved element does not appear in sentence-initial position, the TAG analysis of English wit-extraction of Kroch (1987; 1989) (in which the matrix clause is adjoined into the embedded clause) cannot be transferred, and in fact no linguistically plausible TAG analysis appears to be available. In the past, variants of TAG have been developed to extend the range of possible analyses. In Multi-Component TAG (MCTAG) (Joshi, 1987), trees are grouped into sets which must be adjoined to- (multicomponent adjunction). However, MCexpressive power since, while syntactic relations are invariably subject to c-command or dominance constraints, there is no way to state that Mary OBJ hotdog claim SUBJ spicyhe I MOD small adore COMP COMP Mary OBJ seem hotdog claim MOD SUBJ spicy small he COMP seamSUBJ 152 two trees from a set must be in a dominance relain the derived tree. Domination et al., 1991) are multicomponent systems that allow for the expression of dominance constraints. However, MCTAG-DL share a further problem with MCTAG: the derivation structures cannot be given a linguistically meaningful interpretation. Thus, they fail to address the first prowe discussed (in Section 1.3 The DTG Approach Vijay-Shanker (1992) points out that use of adjunction for clausal complementation in TAG corresponds, at the level of dependency structure, to substitution at the foot node&apos; of the adjoined tree. However, adjunction (rather than substitution) is used since, in general, the structure that is substituted may only form part of the clausal complement: the remaining substructure of the clausal complement appears above the root of the adjoined tree. Unfortunately, as seen in the examples given in Section 1.2, there are cases where satisfactory analyses cannot be obtained with adjunction. In particular, using adjunction in this way cannot handle cases in which parts of the clausal complement are required to be placed within the structure of the adjoined tree. of subsertion is designed to overcome this limitation. Subsertion can be viewed as a generalization of adjunction in which components of the clausal complement (the subserted structure) which are not substituted can be interspersed within the structure that is the site of the subsertion. Following earlier work (Becker et al., Vijay-Shanker, 1992), a mechanism involving the use of domination links (d-edges) that ensure that parts of the subserted structure that are not substituted dominate those parts that are. Furthermore, there is a need to constrain the way in which the non-substituted components can be interspersed&apos;. This is done by either using appropriate feature constraints at nodes or by means of subsertion-insertion constraints (see Section 2). We end this section by briefly commenting on the of sister-adjunction. In TAG, modification is performed with adjunction of modifier trees that have a highly constrained form. In particular, the foot nodes of these trees are always daughters of the root and either the leftmost or rightmost frontier nodes. The effect of adjoining a these cases the foot node is an argument node of the lexical anchor. &apos;This was also observed by Rambow (1994a), where integrity constraint (first defined for an of TAG (Becker etal., 1991)) is defined for a MCTAG-DL version called V-TAG. However, this was found to be insufficient for treating both long-distance scrambling and long-distance topicalization in German. V-TAG retains adjoining (to handle topicalization) for this reason. tree of this form corresponds (almost) exactly to the addition of a new (leftmost or rightmost) subtree below the nede that was the site of the adjunction. this reason, we have equipped an operation (sister-adjunction) that does exactly this and more. From the definition of Section 2 it can be seen that the essential aspects of Schabes &amp; Shieber (1994) treatment for modification, including multiple modifications of a phrase, be captured by using this defining Section 2, we discuss, in Section 3, DTG analyses for the English and Kashmiri data presented in this section. Section 4 briefly algorithms. 2 Definition of D-Tree Grammars d-tree is a tree with two types of domination edges (d-edges) and immediate domination edges (i-edges). D-edges and i-edges express domination and immediate domination relations between nodes. These relations are never rescinded when dtrees are composed. Thus, nodes separated by an i-edge will remain in a mother-daughter relationship throughout the derivation, whereas nodes separated by an d-edge can be equated or have a path of any length inserted between them during a derivation. D-edges and i-edges are not distributed arbitrarily in d-trees. For each internal node, either all of its daughters are linked by i-edges or it has a single daughter that is linked to it by a d-edge. Each node is labelled with a terminal symbol, a nonterminal or the empty string. containing n can be decomposed into n + 1 containing only i-edges. D-trees can be composed using two operations: subsertion and sister-adjunction. When a d-tree is subserted into another d-tree component of a is substituted at a frontier nonterminal node (a node) and all components of a that are above the substituted component are inserted into d-edges above the substituted node or placed above the root node. For example, consider the d-trees a and shown in Figure 3. Note that components are shown as triangles. In the composed d-tree 7 the component a(5) is substituted at a substitution node in /3. The components, a(1), a(2), and a(4) of a above a(5) drift up the path in which runs from the substitution node. These are then into in # or above the root of #. In general, when a component some d-tree a is inserted into a d-edge betnodes and two new d-edges are created, the first of which relates and the root node of the second of which relates the frontier &apos;Santorini and Mahootian (1995) provide additional evidence against the standard TAG approach to modification from code switching data, which can be accounted for by using sister-adjunction. 153 Figure 3: Subsertion node of a(i) that dominates the substituted comto is possible for components above the substituted node to drift arbitrarily far up the d-tree and distribute themselves within domination edges, or above the root, in any way that is compatible with the domination relationships present in the d-tree. a mechanism called constraints control what can appear within d-edges (see below). The second composition operation involving dtrees is called sister-adjunction. When a d-tree a is at a node ri in a d-tree the comd-tree from the addition to fl of a as a new leftmost or rightmost sub-d-tree below that sister-adjunction involves the addition of exactly one new immediate domination edge and that several sister-adjunctions can occur at the same constraints where d-trees can be sister-adjoined and whether they will be rightor left-sister-adjoined (see below). DTG a four tuple G = , VT S, D) the usual nonterminal and termialphabets, a distinguished nonterand a finite set of DTG said to be each d-tree in the grammar has at least one terminal node. The d-trees of a grammar two additional annotations: subsertion-insertion constraints and sister-adjoining constraints. These will be described below, but first we define simultaneously and subsertion-adjoining trees (SAtrees), which are partial derivation structures that can be interpreted as representing dependency in-</abstract>
<intro confidence="0.419775">formation, the importance of which was stressed in</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T Becker</author>
<author>A Joshi</author>
</authors>
<title>Long distance scrambling and tree adjoining grammars.</title>
<date>1991</date>
<booktitle>In EACL91,</booktitle>
<pages>21--26</pages>
<marker>Becker, Joshi, 1991</marker>
<rawString>T. Becker, A. Joshi, &amp; 0. Rambow. 1991. Long distance scrambling and tree adjoining grammars. In EACL91, 21-26.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Bltatt</author>
</authors>
<title>Word order and case in Kashmiri.</title>
<date>1994</date>
<tech>Ph.D. thesis,</tech>
<institution>Univ. Illinois.</institution>
<marker>Bltatt, 1994</marker>
<rawString>R. Bltatt. 1994. Word order and case in Kashmiri. Ph.D. thesis, Univ. Illinois.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Bleam</author>
</authors>
<title>Clitic climbing in spanish: a GB perspective. In</title>
<date>1994</date>
<tech>TAG+ Workshop, Tech. Rep. TALANART-94-01,</tech>
<volume>7</volume>
<pages>16--19</pages>
<institution>Universite Paris</institution>
<contexts>
<context position="6920" citStr="Bleam, 1994" startWordPosition="1071" endWordPosition="1072">ning DTG we have attempted to resolve these problems with the use of a single operation (that we call subsertion) for handling all complementation and a second operation (called sisteradjunction) for modification. Before discussion these operations further we consider a second problem with TAG that has implications for the design of these new composition operations (in particular, subsertion). 1.2 Problematic Constructions for TAG TAG cannot be used to provide suitable analyses for certain syntactic phenomena, including longdistance scrambling in German (Becker et al., 1991), Romance Clitics (Bleam, 1994), wh-extraction out of complex picture-NPs (Kroch, 1987), and Kashmiri wh-extraction (presented here). The problem in describing these phenomena with TAG arises from the fact (observed by Vijay-Shanker (1992)) that adjoining is an overly restricted way of combining structures. We illustrate the problem by considering Kashmiri drawing on Bhatt (1994). Whextraction in Kashmiri proceeds as in English, except that the wh-word ends up in sentence-second position, with a topic from the matrix clause in sentence-initial position. This is illustrated in (2a) for a simple clause and in (2b) for a compl</context>
</contexts>
<marker>Bleam, 1994</marker>
<rawString>T. Bleam. 1994. Clitic climbing in spanish: a GB perspective. In TAG+ Workshop, Tech. Rep. TALANART-94-01, Universite Paris 7, 16-19.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Bresnan Lc R Kaplan</author>
</authors>
<title>Lexical-functional grammar: A formal system for grammatical representation.</title>
<date>1982</date>
<journal>In</journal>
<volume>1</volume>
<editor>Bresnan, ed.,</editor>
<publisher>MIT Press.</publisher>
<contexts>
<context position="3243" citStr="Kaplan, 1982" startWordPosition="503" endWordPosition="504">s establishing a direct linguistic relation between the two lexical items, namely a relation of complementation (predicateargument relation) or of modification. In purely CFG-based approaches, these relations are only implicit. However, they represent important linguistic intuition, they provide a uniform interface to semantics, and they are, as Schabes &amp; Shieber (1994) argue, important in order to support statistical parameters in stochastic frameworks and appropriate adjunction constraints in TAG. In many frameworks, complementation and modification are in fact made explicit: LFG (Bresnan &amp; Kaplan, 1982) provides a separate functional (f-) structure, and dependency grammars (see e.g. Mel&apos;euk (1988)) use these notions as the principal basis for syntactic representation. We will follow the dependency literature in referring to complementation and modification as syntactic dependency. As observed by Rambow and Joshi (1992), for TAG, the importance of the dependency structure means that not only the derived phrase-structure tree is of interest, but also the operations by which we obtained it from elementary structures. This information is encoded in the derivation tree (Vijay-Shanker, 1987). Howe</context>
</contexts>
<marker>Kaplan, 1982</marker>
<rawString>J. Bresnan Lc R. Kaplan. 1982. Lexical-functional grammar: A formal system for grammatical representation. In .1. Bresnan, ed., The Mental Representation of Grammatical Relations. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frank</author>
</authors>
<title>Syntactic Locality and Tree Adjoining Grammar: Grammatical, Acquisition and Processing Perspectives.</title>
<date>1992</date>
<booktitle>Ph.D. thesis, Dept. Comp. &amp; Inf. Sc.,</booktitle>
<location>Univ. Pennsylvania.</location>
<contexts>
<context position="1536" citStr="Frank, 1992" startWordPosition="235" endWordPosition="236">nce-second position, and not sentence-initial position as in English. 1 Introduction We define a new grammar formalism, called D-Tree Grammars (DTG), which arises from work on TreeAdjoining Grammars (TAG) (Joshi et al., 1975). A salient feature of TAG is the extended domain of locality it provides. Each elementary structure can be associated with a lexical item (as in Lexicalized TAG (LTAG) (Joshi &amp; Schabes, 1991)). Properties related to the lexical item (such as subcategorization, agreement, certain types of word order variation) can be expressed within the elementary structure (Kroch, 1987; Frank, 1992). In addition, TAG remain tractable, yet their generative capacity is sufficient to account for certain syntactic phenomena that, it has been argued, lie beyond Context-Free Grammars (CFG) (Shieber, 1985). TAG, however, has two limitations which provide the motivation for this work. The first problem (discussed in Section 1.1) is that the TAG operations of substitution and adjunction do not map cleanly onto the relations of complementation and modification. A second problem (discussed in Section 1.2) has to do with the inability of TAG to provide analyses for certain syntactic phenomena. In de</context>
</contexts>
<marker>Frank, 1992</marker>
<rawString>Frank. 1992. Syntactic Locality and Tree Adjoining Grammar: Grammatical, Acquisition and Processing Perspectives. Ph.D. thesis, Dept. Comp. &amp; Inf. Sc., Univ. Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Joshi</author>
</authors>
<title>An introduction to tree adjoining grammars.</title>
<date>1987</date>
<booktitle>Mathematics of Language,</booktitle>
<pages>87--114</pages>
<editor>In A. Manaster-Ramer, ed.,</editor>
<contexts>
<context position="8183" citStr="Joshi, 1987" startWordPosition="1275" endWordPosition="1276">RG whatNom gave youoAr What did you give Ramesh? b. rameshan kyaa, chu baasaan [ki RameshERG what is believeNPert that me kor ts] &apos;ERG do What does Ramesh believe that I did? Since the moved element does not appear in sentence-initial position, the TAG analysis of English wit-extraction of Kroch (1987; 1989) (in which the matrix clause is adjoined into the embedded clause) cannot be transferred, and in fact no linguistically plausible TAG analysis appears to be available. In the past, variants of TAG have been developed to extend the range of possible analyses. In Multi-Component TAG (MCTAG) (Joshi, 1987), trees are grouped into sets which must be adjoined together (multicomponent adjunction). However, MCTAG lack expressive power since, while syntactic relations are invariably subject to c-command or dominance constraints, there is no way to state that Mary OBJ hotdog claim I mon I SUBJ spicy he I MOD small adore COMP COMP Mary OBJ seem hotdog claim MOD MOD J SUBJ spicy small he COMP seam SUBJ 152 two trees from a set must be in a dominance relation in the derived tree. MCTAG with Domination Links (MCTAG-DL) (Becker et al., 1991) are multicomponent systems that allow for the expression of domi</context>
</contexts>
<marker>Joshi, 1987</marker>
<rawString>A. Joshi. 1987. An introduction to tree adjoining grammars. In A. Manaster-Ramer, ed., Mathematics of Language, 87-114.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Joshi</author>
<author>L Levy</author>
<author>M Takahashi</author>
</authors>
<title>Tree adjunct grammars.</title>
<date>1975</date>
<journal>J. Comput. Syst. Sc.,</journal>
<pages>10--1</pages>
<contexts>
<context position="1149" citStr="Joshi et al., 1975" startWordPosition="170" endWordPosition="173">t distinctive feature of DTG is that, unlike TAG, there is complete uniformity in the way that the two DTG operations relate lexical items: subsertion always corresponds to complementation and sister-adjunction to modification. Furthermore, DTG, unlike TAG, can provide a uniform analysis for whmovement in English and Kashmiri, despite the fact that the wh element in Kashmiri appears in sentence-second position, and not sentence-initial position as in English. 1 Introduction We define a new grammar formalism, called D-Tree Grammars (DTG), which arises from work on TreeAdjoining Grammars (TAG) (Joshi et al., 1975). A salient feature of TAG is the extended domain of locality it provides. Each elementary structure can be associated with a lexical item (as in Lexicalized TAG (LTAG) (Joshi &amp; Schabes, 1991)). Properties related to the lexical item (such as subcategorization, agreement, certain types of word order variation) can be expressed within the elementary structure (Kroch, 1987; Frank, 1992). In addition, TAG remain tractable, yet their generative capacity is sufficient to account for certain syntactic phenomena that, it has been argued, lie beyond Context-Free Grammars (CFG) (Shieber, 1985). TAG, ho</context>
</contexts>
<marker>Joshi, Levy, Takahashi, 1975</marker>
<rawString>A. Joshi, L. Levy, &amp; M. Takahashi. 1975. Tree adjunct grammars. J. Comput. Syst. Sc., 10(1):136-163.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Joshi</author>
<author>Y Schabes</author>
</authors>
<title>Tree-adjoining grammars and lexicalized grammars.</title>
<date>1991</date>
<booktitle>Definability and Recognizability of Sets of Trees.</booktitle>
<editor>In M. Nivat &amp; A. Podelski, eds.,</editor>
<contexts>
<context position="1341" citStr="Joshi &amp; Schabes, 1991" startWordPosition="203" endWordPosition="206">and sister-adjunction to modification. Furthermore, DTG, unlike TAG, can provide a uniform analysis for whmovement in English and Kashmiri, despite the fact that the wh element in Kashmiri appears in sentence-second position, and not sentence-initial position as in English. 1 Introduction We define a new grammar formalism, called D-Tree Grammars (DTG), which arises from work on TreeAdjoining Grammars (TAG) (Joshi et al., 1975). A salient feature of TAG is the extended domain of locality it provides. Each elementary structure can be associated with a lexical item (as in Lexicalized TAG (LTAG) (Joshi &amp; Schabes, 1991)). Properties related to the lexical item (such as subcategorization, agreement, certain types of word order variation) can be expressed within the elementary structure (Kroch, 1987; Frank, 1992). In addition, TAG remain tractable, yet their generative capacity is sufficient to account for certain syntactic phenomena that, it has been argued, lie beyond Context-Free Grammars (CFG) (Shieber, 1985). TAG, however, has two limitations which provide the motivation for this work. The first problem (discussed in Section 1.1) is that the TAG operations of substitution and adjunction do not map cleanly</context>
</contexts>
<marker>Joshi, Schabes, 1991</marker>
<rawString>A. Joshi &amp; Y. Schabes. 1991. Tree-adjoining grammars and lexicalized grammars. In M. Nivat &amp; A. Podelski, eds., Definability and Recognizability of Sets of Trees.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Kasper</author>
<author>E Kiefer</author>
<author>K Netter</author>
</authors>
<title>Az K. Vijay-Shanker</title>
<date>1995</date>
<journal>Compilation of HPSG</journal>
<note>to TAG. In ACL-95.</note>
<contexts>
<context position="22464" citStr="Kasper et al., 1995" startWordPosition="3770" endWordPosition="3773">uired for agreement with it (and perhaps case-assignment). Furthermore, a finite verb may optionally also project to S&apos; (as in the d-tree shown for claims), indicating that a whmoved or topicalized element is required. The finite verb seems also projects to S, even though it does not itself provide a functional subject. In the case of the to adore tree, the situation is the inverse: the functional subject requires a finite verb 8In this context, it might be beneficial to consider the expression of a feature-based lodcalist theory such as HPSG in DTG, similar to the compilation of HPSG to TAG (Kasper et al., 1995). 155 to agree with, which is signaled by the fact that its component&apos;s root and frontier nodes are labelled S and VP, respectively, but the verb itself is not finite and therefore only projects to VP[-fin]. Therefore, the subject will have to raise out of its clause for agreement and case assignment. The direct object of to adore has wh-moved out of the projection of the verb (we include a trace for the sake of clarity). S&apos; NP N&apos; NP VP AdjP AdjP N he V I I I I Adj Adj hotdogs claims NP VP I I I /1 small spicy Mary seems VP NP to adore e Figure 5: Derived tree for (1) We add SICs to ensure tha</context>
</contexts>
<marker>Kasper, Kiefer, Netter, 1995</marker>
<rawString>R. Kasper, E. Kiefer, K. Netter, Az K. Vijay-Shanker 1995. Compilation of HPSG to TAG. In ACL-95.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kroch</author>
</authors>
<title>Subja.cency in a tree adjoining grammar.</title>
<date>1987</date>
<booktitle>Mathematics of Language,</booktitle>
<pages>143--172</pages>
<editor>In A. Manaster-Ramer, ed.,</editor>
<contexts>
<context position="1522" citStr="Kroch, 1987" startWordPosition="233" endWordPosition="234">ears in sentence-second position, and not sentence-initial position as in English. 1 Introduction We define a new grammar formalism, called D-Tree Grammars (DTG), which arises from work on TreeAdjoining Grammars (TAG) (Joshi et al., 1975). A salient feature of TAG is the extended domain of locality it provides. Each elementary structure can be associated with a lexical item (as in Lexicalized TAG (LTAG) (Joshi &amp; Schabes, 1991)). Properties related to the lexical item (such as subcategorization, agreement, certain types of word order variation) can be expressed within the elementary structure (Kroch, 1987; Frank, 1992). In addition, TAG remain tractable, yet their generative capacity is sufficient to account for certain syntactic phenomena that, it has been argued, lie beyond Context-Free Grammars (CFG) (Shieber, 1985). TAG, however, has two limitations which provide the motivation for this work. The first problem (discussed in Section 1.1) is that the TAG operations of substitution and adjunction do not map cleanly onto the relations of complementation and modification. A second problem (discussed in Section 1.2) has to do with the inability of TAG to provide analyses for certain syntactic ph</context>
<context position="6976" citStr="Kroch, 1987" startWordPosition="1078" endWordPosition="1079">h the use of a single operation (that we call subsertion) for handling all complementation and a second operation (called sisteradjunction) for modification. Before discussion these operations further we consider a second problem with TAG that has implications for the design of these new composition operations (in particular, subsertion). 1.2 Problematic Constructions for TAG TAG cannot be used to provide suitable analyses for certain syntactic phenomena, including longdistance scrambling in German (Becker et al., 1991), Romance Clitics (Bleam, 1994), wh-extraction out of complex picture-NPs (Kroch, 1987), and Kashmiri wh-extraction (presented here). The problem in describing these phenomena with TAG arises from the fact (observed by Vijay-Shanker (1992)) that adjoining is an overly restricted way of combining structures. We illustrate the problem by considering Kashmiri drawing on Bhatt (1994). Whextraction in Kashmiri proceeds as in English, except that the wh-word ends up in sentence-second position, with a topic from the matrix clause in sentence-initial position. This is illustrated in (2a) for a simple clause and in (2b) for a complex clause. (2) a. rameshan kyaa dyutnay tse RameshERG wh</context>
</contexts>
<marker>Kroch, 1987</marker>
<rawString>A. Kroch. 1987. Subja.cency in a tree adjoining grammar. In A. Manaster-Ramer, ed., Mathematics of Language, 143-172.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kroch</author>
</authors>
<title>Asymmetries in long distance extraction in a Tree Adjoining Grammar.</title>
<date>1989</date>
<booktitle>Alternative Conceptions of Phrase Structure,</booktitle>
<pages>66--98</pages>
<editor>In Mark Baltin &amp; Anthony Kroch, editors,</editor>
<marker>Kroch, 1989</marker>
<rawString>A. Kroch. 1989. Asymmetries in long distance extraction in a Tree Adjoining Grammar. In Mark Baltin &amp; Anthony Kroch, editors, Alternative Conceptions of Phrase Structure, 66-98.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kroch</author>
<author>A Joshi</author>
</authors>
<title>Analyzing extraposition in a tree adjoining grammar.</title>
<date>1986</date>
<booktitle>Syntax Ed Semantics: Discontinuous Constituents,</booktitle>
<pages>107--149</pages>
<editor>In G. Huck &amp; A. Ojeda, eds.,</editor>
<contexts>
<context position="24566" citStr="Kroch &amp; Joshi, 1986" startWordPosition="4159" endWordPosition="4162"> subsert the resulting structure into the seems clause by substituting its maximal projection node, labelled VP[fin: 1, at the VP[fin: -] frontier node of seems, and by inserting the subject into the d-edge of the seems tree. Now, only the S node of the seems tree (which is its maximal projection) is substitutable. Finally, we subsert this derived struc&apos;We enforce island effects for wh-movement by using a [±extract] feature on substitution nodes. This corresponds roughly to the analysis in TAG, where islandhood is (to a large extent) enforced by designating a particular node as the foot node (Kroch &amp; Joshi, 1986). ture into the claims d-tree by substituting the S node of seems at che S complement node of claims, and by inserting the object of adores (which has not yet been used in the derivation) in the d-edge of the claims d-tree above its S node. The derived tree is shown in Figure 5. The SA-tree for this derivation corresponds to the dependency tree given previously in Figure 2. Note that this is the only possible derivation involving these three d-trees, modulo order of operations. To see this, consider the following putative alternate derivation. We first subsert the to adore d-tree into the seem</context>
</contexts>
<marker>Kroch, Joshi, 1986</marker>
<rawString>A. Kroch &amp; A. Joshi. 1986. Analyzing extraposition in a tree adjoining grammar. In G. Huck &amp; A. Ojeda, eds., Syntax Ed Semantics: Discontinuous Constituents, 107-149.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I MePtuk</author>
</authors>
<title>Dependency Syntax: Theory and Practice.</title>
<date>1988</date>
<marker>MePtuk, 1988</marker>
<rawString>I. MePtuk. 1988. Dependency Syntax: Theory and Practice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rambow</author>
</authors>
<title>Formal and Computational Aspects of Natural Language Syntax.</title>
<date>1994</date>
<booktitle>Ph.D. thesis, Dept. Comput. &amp; Inf. Sc.,</booktitle>
<location>Univ. Pennsylvania.</location>
<contexts>
<context position="11067" citStr="Rambow (1994" startWordPosition="1750" endWordPosition="1751">erspersed&apos;. This is done by either using appropriate feature constraints at nodes or by means of subsertion-insertion constraints (see Section 2). We end this section by briefly commenting on the other DTG operation of sister-adjunction. In TAG, modification is performed with adjunction of modifier trees that have a highly constrained form. In particular, the foot nodes of these trees are always daughters of the root and either the leftmost or rightmost frontier nodes. The effect of adjoining a 21n these cases the foot node is an argument node of the lexical anchor. &apos;This was also observed by Rambow (1994a), where an integrity constraint (first defined for an ID/LP version of TAG (Becker etal., 1991)) is defined for a MCTAG-DL version called V-TAG. However, this was found to be insufficient for treating both long-distance scrambling and long-distance topicalization in German. V-TAG retains adjoining (to handle topicalization) for this reason. tree of this form corresponds (almost) exactly to the addition of a new (leftmost or rightmost) subtree below the nede that was the site of the adjunction. For this reason, we have equipped DTG with an operation (sister-adjunction) that does exactly this </context>
</contexts>
<marker>Rambow, 1994</marker>
<rawString>0. Rambow. 1994. Formal and Computational Aspects of Natural Language Syntax. Ph.D. thesis, Dept. Comput. &amp; Inf. Sc., Univ. Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rambow</author>
</authors>
<title>Multiset-Valued Linear Index Grammars. In</title>
<date>1994</date>
<booktitle>ACL-94,</booktitle>
<pages>263--270</pages>
<contexts>
<context position="11067" citStr="Rambow (1994" startWordPosition="1750" endWordPosition="1751">erspersed&apos;. This is done by either using appropriate feature constraints at nodes or by means of subsertion-insertion constraints (see Section 2). We end this section by briefly commenting on the other DTG operation of sister-adjunction. In TAG, modification is performed with adjunction of modifier trees that have a highly constrained form. In particular, the foot nodes of these trees are always daughters of the root and either the leftmost or rightmost frontier nodes. The effect of adjoining a 21n these cases the foot node is an argument node of the lexical anchor. &apos;This was also observed by Rambow (1994a), where an integrity constraint (first defined for an ID/LP version of TAG (Becker etal., 1991)) is defined for a MCTAG-DL version called V-TAG. However, this was found to be insufficient for treating both long-distance scrambling and long-distance topicalization in German. V-TAG retains adjoining (to handle topicalization) for this reason. tree of this form corresponds (almost) exactly to the addition of a new (leftmost or rightmost) subtree below the nede that was the site of the adjunction. For this reason, we have equipped DTG with an operation (sister-adjunction) that does exactly this </context>
</contexts>
<marker>Rambow, 1994</marker>
<rawString>0. Rambow. 1994. Multiset-Valued Linear Index Grammars. In ACL-94, 263-270.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rambow</author>
<author>A Joshi</author>
</authors>
<title>A formal look at dependency grammars and phrase-structure grammars, with special consideration of word-order phenomena.</title>
<date>1992</date>
<booktitle>In Intern. Workshop on The Meaning-Text Theory, Darmstadt. Arbeitspapiere der GMD 671,</booktitle>
<pages>47--66</pages>
<contexts>
<context position="3565" citStr="Rambow and Joshi (1992)" startWordPosition="548" endWordPosition="551">face to semantics, and they are, as Schabes &amp; Shieber (1994) argue, important in order to support statistical parameters in stochastic frameworks and appropriate adjunction constraints in TAG. In many frameworks, complementation and modification are in fact made explicit: LFG (Bresnan &amp; Kaplan, 1982) provides a separate functional (f-) structure, and dependency grammars (see e.g. Mel&apos;euk (1988)) use these notions as the principal basis for syntactic representation. We will follow the dependency literature in referring to complementation and modification as syntactic dependency. As observed by Rambow and Joshi (1992), for TAG, the importance of the dependency structure means that not only the derived phrase-structure tree is of interest, but also the operations by which we obtained it from elementary structures. This information is encoded in the derivation tree (Vijay-Shanker, 1987). However, as Vijay-Shanker (1992) observes, the TAG composition operations are not used uniformly: while substitution is used only to add a (nominal) complement, adjunction is used both for modification and (clausal) complementation. Clausal complementation could not be handled uniformly by substitution because of the existen</context>
</contexts>
<marker>Rambow, Joshi, 1992</marker>
<rawString>0. Rambow &amp; A. Joshi. 1992. A formal look at dependency grammars and phrase-structure grammars, with special consideration of word-order phenomena. In Intern. Workshop on The Meaning-Text Theory, Darmstadt. Arbeitspapiere der GMD 671, 47-66.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Santorini</author>
<author>S Mahootian</author>
</authors>
<title>Codeswitching and the syntactic status of adnominal adjectives.</title>
<date>1995</date>
<journal>Lingua,</journal>
<volume>95</volume>
<contexts>
<context position="14025" citStr="Santorini and Mahootian (1995)" startWordPosition="2245" endWordPosition="2248">onsider the d-trees a and shown in Figure 3. Note that components are shown as triangles. In the composed d-tree 7 the component a(5) is substituted at a substitution node in /3. The components, a(1), a(2), and a(4) of a above a(5) drift up the path in which runs from the substitution node. These components are then inserted into d-edges in # or above the root of #. In general, when a component a(i) of some d-tree a is inserted into a d-edge between nodes ni and 772 two new d-edges are created, the first of which relates and the root node of a(i), and the second of which relates the frontier &apos;Santorini and Mahootian (1995) provide additional evidence against the standard TAG approach to modification from code switching data, which can be accounted for by using sister-adjunction. 153 Figure 3: Subsertion node of a(i) that dominates the substituted component to 772. It is possible for components above the substituted node to drift arbitrarily far up the d-tree and distribute themselves within domination edges, or above the root, in any way that is compatible with the domination relationships present in the substituted d-tree. DTG provide a mechanism called subsertion-insertion constraints to control what can appe</context>
</contexts>
<marker>Santorini, Mahootian, 1995</marker>
<rawString>B. Santorini &amp; S. Mahootian. 1995. Codeswitching and the syntactic status of adnominal adjectives. Lingua, 95.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Schabes</author>
<author>S Shieber</author>
</authors>
<title>An alternative conception of tree-adjoining derivation.</title>
<date>1994</date>
<journal>Comput. Ling.,</journal>
<pages>20--1</pages>
<contexts>
<context position="3002" citStr="Schabes &amp; Shieber (1994)" startWordPosition="467" endWordPosition="470">in how they are intended to address the problems that we have identified with TAG. 1.1 Derivations and Dependencies In LTAG, the operations of substitution and adjunction relate two lexical items. It is therefore natural to interpret these operations as establishing a direct linguistic relation between the two lexical items, namely a relation of complementation (predicateargument relation) or of modification. In purely CFG-based approaches, these relations are only implicit. However, they represent important linguistic intuition, they provide a uniform interface to semantics, and they are, as Schabes &amp; Shieber (1994) argue, important in order to support statistical parameters in stochastic frameworks and appropriate adjunction constraints in TAG. In many frameworks, complementation and modification are in fact made explicit: LFG (Bresnan &amp; Kaplan, 1982) provides a separate functional (f-) structure, and dependency grammars (see e.g. Mel&apos;euk (1988)) use these notions as the principal basis for syntactic representation. We will follow the dependency literature in referring to complementation and modification as syntactic dependency. As observed by Rambow and Joshi (1992), for TAG, the importance of the depe</context>
<context position="5700" citStr="Schabes &amp; Shieber (1994)" startWordPosition="886" endWordPosition="889">derivation structure to the dependency structure in Figure 2, the following problems become apparent. First, both adjectives depend on hotdog, while in the derivation structure small is a daughter of spicy. In addition, seem depends on claim (as does its nominal argument, he), and adore depends on seem. In the derivation structure, seem is a daughter of adore (the direction does not express the actual dependency), and claim is also a daughter of adore (though neither is an argument of the other). claim SUBOMP he seem I COMP adore Mary hotdog &lt;/LOD spicy small Figure 2: Dependency tree for (1) Schabes &amp; Shieber (1994) solve the first problem &apos;For clarity, we depart from standard TAG notational practice and annotate nodes with lexemes and arcs with grammatical function. by distinguishing between the adjunction of modifiers and of clausal complements. This gives us the derivation structure shown on the right in Figure 1. While this might provide a satisfactory treatment of modification at the derivation level, there are now three types of operations (two adjunctions and substitution) for two types of dependencies (arguments and modifiers), and the directionality problem for embedded clauses remains unsolved.</context>
<context position="11794" citStr="Schabes &amp; Shieber (1994)" startWordPosition="1866" endWordPosition="1869">efined for a MCTAG-DL version called V-TAG. However, this was found to be insufficient for treating both long-distance scrambling and long-distance topicalization in German. V-TAG retains adjoining (to handle topicalization) for this reason. tree of this form corresponds (almost) exactly to the addition of a new (leftmost or rightmost) subtree below the nede that was the site of the adjunction. For this reason, we have equipped DTG with an operation (sister-adjunction) that does exactly this and nothing more. From the definition of DTG in Section 2 it can be seen that the essential aspects of Schabes &amp; Shieber (1994) treatment for modification, including multiple modifications of a phrase, can be captured by using this operation4. After defining DTG in Section 2, we discuss, in Section 3, DTG analyses for the English and Kashmiri data presented in this section. Section 4 briefly discusses DTG recognition algorithms. 2 Definition of D-Tree Grammars A d-tree is a tree with two types of edges: domination edges (d-edges) and immediate domination edges (i-edges). D-edges and i-edges express domination and immediate domination relations between nodes. These relations are never rescinded when dtrees are composed</context>
</contexts>
<marker>Schabes, Shieber, 1994</marker>
<rawString>Y. Schabes &amp; S. Shieber. 1994. An alternative conception of tree-adjoining derivation. Comput. Ling., 20(1):91-124.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Shieber</author>
</authors>
<title>Evidence against the context-freeness of natural language.</title>
<date>1985</date>
<journal>Ling. £4 Phil.,</journal>
<pages>8--333</pages>
<contexts>
<context position="1740" citStr="Shieber, 1985" startWordPosition="265" endWordPosition="266">G) (Joshi et al., 1975). A salient feature of TAG is the extended domain of locality it provides. Each elementary structure can be associated with a lexical item (as in Lexicalized TAG (LTAG) (Joshi &amp; Schabes, 1991)). Properties related to the lexical item (such as subcategorization, agreement, certain types of word order variation) can be expressed within the elementary structure (Kroch, 1987; Frank, 1992). In addition, TAG remain tractable, yet their generative capacity is sufficient to account for certain syntactic phenomena that, it has been argued, lie beyond Context-Free Grammars (CFG) (Shieber, 1985). TAG, however, has two limitations which provide the motivation for this work. The first problem (discussed in Section 1.1) is that the TAG operations of substitution and adjunction do not map cleanly onto the relations of complementation and modification. A second problem (discussed in Section 1.2) has to do with the inability of TAG to provide analyses for certain syntactic phenomena. In developing DTG we have tried to overcome these problems while remaining faithful to what we see as the key advantages of TAG (in particular, its enlarged domain of locality). In Section 1.3 we introduce som</context>
</contexts>
<marker>Shieber, 1985</marker>
<rawString>S. Shieber. 1985. Evidence against the context-freeness of natural language. Ling. £4 Phil., 8:333-343.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
</authors>
<title>A Study of Tree Adjoining Grammars.</title>
<date>1987</date>
<tech>Ph.D. thesis,</tech>
<institution>Dept. Comput. &amp; Inf. Sc., Univ. Pennsylvania.</institution>
<contexts>
<context position="3837" citStr="Vijay-Shanker, 1987" startWordPosition="593" endWordPosition="594">G (Bresnan &amp; Kaplan, 1982) provides a separate functional (f-) structure, and dependency grammars (see e.g. Mel&apos;euk (1988)) use these notions as the principal basis for syntactic representation. We will follow the dependency literature in referring to complementation and modification as syntactic dependency. As observed by Rambow and Joshi (1992), for TAG, the importance of the dependency structure means that not only the derived phrase-structure tree is of interest, but also the operations by which we obtained it from elementary structures. This information is encoded in the derivation tree (Vijay-Shanker, 1987). However, as Vijay-Shanker (1992) observes, the TAG composition operations are not used uniformly: while substitution is used only to add a (nominal) complement, adjunction is used both for modification and (clausal) complementation. Clausal complementation could not be handled uniformly by substitution because of the existence of syntactic phenomena such as long-distance wh-movement in English. Furthermore, there is an inconsistency in 151 the directionality of the operations used for complementation in TAG@: nominal complements are substituted into their governing verb&apos;s tree, while the gov</context>
</contexts>
<marker>Vijay-Shanker, 1987</marker>
<rawString>K. Vijay-Shanker. 1987. A Study of Tree Adjoining Grammars. Ph.D. thesis, Dept. Comput. &amp; Inf. Sc., Univ. Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
</authors>
<title>Using descriptions of trees in a tree adjoining grammar.</title>
<date>1992</date>
<journal>Comput. Ling.,</journal>
<pages>18--4</pages>
<contexts>
<context position="3871" citStr="Vijay-Shanker (1992)" startWordPosition="597" endWordPosition="598">s a separate functional (f-) structure, and dependency grammars (see e.g. Mel&apos;euk (1988)) use these notions as the principal basis for syntactic representation. We will follow the dependency literature in referring to complementation and modification as syntactic dependency. As observed by Rambow and Joshi (1992), for TAG, the importance of the dependency structure means that not only the derived phrase-structure tree is of interest, but also the operations by which we obtained it from elementary structures. This information is encoded in the derivation tree (Vijay-Shanker, 1987). However, as Vijay-Shanker (1992) observes, the TAG composition operations are not used uniformly: while substitution is used only to add a (nominal) complement, adjunction is used both for modification and (clausal) complementation. Clausal complementation could not be handled uniformly by substitution because of the existence of syntactic phenomena such as long-distance wh-movement in English. Furthermore, there is an inconsistency in 151 the directionality of the operations used for complementation in TAG@: nominal complements are substituted into their governing verb&apos;s tree, while the governing verb&apos;s tree is adjoined int</context>
<context position="7128" citStr="Vijay-Shanker (1992)" startWordPosition="1100" endWordPosition="1101">modification. Before discussion these operations further we consider a second problem with TAG that has implications for the design of these new composition operations (in particular, subsertion). 1.2 Problematic Constructions for TAG TAG cannot be used to provide suitable analyses for certain syntactic phenomena, including longdistance scrambling in German (Becker et al., 1991), Romance Clitics (Bleam, 1994), wh-extraction out of complex picture-NPs (Kroch, 1987), and Kashmiri wh-extraction (presented here). The problem in describing these phenomena with TAG arises from the fact (observed by Vijay-Shanker (1992)) that adjoining is an overly restricted way of combining structures. We illustrate the problem by considering Kashmiri drawing on Bhatt (1994). Whextraction in Kashmiri proceeds as in English, except that the wh-word ends up in sentence-second position, with a topic from the matrix clause in sentence-initial position. This is illustrated in (2a) for a simple clause and in (2b) for a complex clause. (2) a. rameshan kyaa dyutnay tse RameshERG whatNom gave youoAr What did you give Ramesh? b. rameshan kyaa, chu baasaan [ki RameshERG what is believeNPert that me kor ts] &apos;ERG do What does Ramesh be</context>
<context position="9059" citStr="Vijay-Shanker (1992)" startWordPosition="1424" endWordPosition="1425">y OBJ hotdog claim I mon I SUBJ spicy he I MOD small adore COMP COMP Mary OBJ seem hotdog claim MOD MOD J SUBJ spicy small he COMP seam SUBJ 152 two trees from a set must be in a dominance relation in the derived tree. MCTAG with Domination Links (MCTAG-DL) (Becker et al., 1991) are multicomponent systems that allow for the expression of dominance constraints. However, MCTAG-DL share a further problem with MCTAG: the derivation structures cannot be given a linguistically meaningful interpretation. Thus, they fail to address the first problem we discussed (in Section 1.1). 1.3 The DTG Approach Vijay-Shanker (1992) points out that use of adjunction for clausal complementation in TAG corresponds, at the level of dependency structure, to substitution at the foot node&apos; of the adjoined tree. However, adjunction (rather than substitution) is used since, in general, the structure that is substituted may only form part of the clausal complement: the remaining substructure of the clausal complement appears above the root of the adjoined tree. Unfortunately, as seen in the examples given in Section 1.2, there are cases where satisfactory analyses cannot be obtained with adjunction. In particular, using adjunctio</context>
</contexts>
<marker>Vijay-Shanker, 1992</marker>
<rawString>K. Vijay-Shanker. 1992. Using descriptions of trees in a tree adjoining grammar. Comput. Ling., 18(4):481-517.</rawString>
</citation>
<citation valid="true">
<authors>
<author>The XTAG Research Group</author>
</authors>
<title>A lexicalized tree adjoining grammar for English.</title>
<date>1995</date>
<tech>Tech. Rep. IRCS Report 95-03, Univ. Pennsylvania.</tech>
<contexts>
<context position="30199" citStr="Group, 1995" startWordPosition="5134" endWordPosition="5135">ounded, from which the polynomial time and space complexity of the algorithm follows. For practical purposes, especially for lexicalized grammars, it is preferable to incorporate some element of prediction. We are developing a polynomialtime Earley style parsing algorithm. The parser returns a parse forest encoding all parses for an input string. The performance of this parser is sensitive to the grammar and input. Indeed it appears that for grammars that lexicalize CFG and for English grammar (where the structures are similar to the LTAG developed at University of Pennsylvania (XTAG Research Group, 1995)) we obtain cubic-time complexity. 5 Conclusion DTG, like other formalisms in the TAG family, is lexicalizable, but in addition, its derivations are themselves linguistically meaningful. In future work we intend to examine additional linguistic data, refining aspects of our definition as needed. We will also study the formal properties of DTG, and complete the design of the Earley style parser. Acknowledgements We would like to thank Rakesh Bhatt for help with the Kashmiri data. We are also grateful to Tilman Becker, Gerald Gazdar, Aravind Joshi, Bob Kasper, Bill Keller, Tony Kroch, Klaus Nett</context>
</contexts>
<marker>Group, 1995</marker>
<rawString>The XTAG Research Group. 1995. A lexicalized tree adjoining grammar for English. Tech. Rep. IRCS Report 95-03, Univ. Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>