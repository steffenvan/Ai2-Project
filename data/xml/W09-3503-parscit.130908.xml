<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.887491">
<title confidence="0.967024">
Automata for Transliteration and Machine Translation
</title>
<author confidence="0.99876">
Kevin Knight
</author>
<affiliation confidence="0.9973785">
Information Sciences Institute
University of Southern California
</affiliation>
<email confidence="0.995706">
knight@isi.edu
</email>
<sectionHeader confidence="0.986266" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999746161290322">
Automata theory, transliteration, and machine
translation (MT) have an interesting and inter-
twined history.
Finite-state string automata theory became a
powerful tool for speech and language after
the introduction of the AT&amp;T’s FSM software.
For example, string transducers can convert be-
tween word sequences and phoneme sequences,
or between phoneme sequences and acoustic se-
quences; furthermore, these machines can be
pipelined to attack complex problems like speech
recognition. Likewise, n-gram models can be cap-
tured by finite-state acceptors, which can be re-
used across applications.
It is possible to mix, match, and compose trans-
ducers to flexibly solve all kinds of problems. One
such problem is transliteration, which can be mod-
eled as a pipeline of string transformations. MT
has also been modeled with transducers, and de-
scendants of the FSM toolkit are now used to im-
plement phrase-based machine translation. Even
speech recognizers and MT systems can them-
selves be composed to deliver speech-to-speech
MT.
The main rub with finite-state string MT is word
re-ordering. Tree transducers offer a natural mech-
anism to solve this problem, and they have re-
cently been employed with some success.
In this talk, we will survey these ideas (and their
origins), and we will finish with a discussion of
how transliteration and MT can work together.
</bodyText>
<page confidence="0.969753">
27
</page>
<note confidence="0.9783575">
Proceedings of the 2009 Named Entities Workshop, ACL-IJCNLP 2009, page 27,
Suntec, Singapore, 7 August 2009. c�2009 ACL and AFNLP
</note>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.717112">
<title confidence="0.999891">Automata for Transliteration and Machine Translation</title>
<author confidence="0.992728">Kevin</author>
<affiliation confidence="0.999642">Information Sciences University of Southern</affiliation>
<email confidence="0.999799">knight@isi.edu</email>
<abstract confidence="0.949614166666667">Automata theory, transliteration, and machine translation (MT) have an interesting and intertwined history. Finite-state string automata theory became a powerful tool for speech and language after</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>