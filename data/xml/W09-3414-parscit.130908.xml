<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.002953">
<title confidence="0.998631">
A Syntactic Resource for Thai: CG Treebank
</title>
<author confidence="0.930356">
Taneth Ruangrajitpakorn Kanokorn Trakultaweekoon Thepchai Supnithi
</author>
<affiliation confidence="0.862644">
Human Language Technology Laboratory
National Electronics and Computer Technology Center
112 Thailand Science Park, Phahonyothin Road, Klong 1,
</affiliation>
<address confidence="0.725203333333333">
Klong Luang Pathumthani, 12120, Thailand
+66-2-564-6900 Ext.2547, Fax.: +66-2-564-6772
{taneth.ruangrajitpakorn, kanokorn.trakultaweekoon, thep-
</address>
<email confidence="0.989282">
chai.supnithi}@nectec.or.th
</email>
<sectionHeader confidence="0.995482" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999967117647059">
This paper presents Thai syntactic re-
source: Thai CG treebank, a categorial
approach of language resources. Since
there are very few Thai syntactic re-
sources, we designed to create treebank
based on CG formalism. Thai corpus was
parsed with existing CG syntactic dic-
tionary and LALR parser. The correct
parsed trees were collected as prelimin-
ary CG treebank. It consists of 50,346
trees from 27,239 utterances. Trees can
be split into three grammatical types.
There are 12,876 sentential trees, 13,728
noun phrasal trees, and 18,342 verb
phrasal trees. There are 17,847 utterances
that obtain one tree, and an average tree
per an utterance is 1.85.
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999791269230769">
Syntactic lexical resources such as POS tagged
corpus and treebank play one of the important
roles in NLP tools for instance machine transla-
tion (MT), automatic POS tagger, and statistical
parser. Because of a load burden and lacking lin-
guistic expertise to manually assign syntactic an-
notation to sentence, we are currently limited to a
few syntactical resources. There are few re-
searches (Satayamas and Kawtrakul, 2004) fo-
cused on developing system to build treebank.
Unfortunately, there is no further report on the
existing treebank in Thai so far. Especially for
Thai, Thai belongs to analytic language which
means grammatical information relying in a
word rather than inflection (Richard, 1964).
Function words represent grammatical informa-
tion such as tense, aspect, modal, etc. Therefore,
to recognise word order is a key to syntactic ana-
lysis for Thai. Categorial Grammar (CG) is a
formalism which focuses on principle of syntact-
ic behaviour. It can be applied to solve word or-
der issues in Thai. To apply CG for machine
learning and statistical based approach, CG tree-
bank, is initially required.
CG is a based concept that can be applied to
advance grammar such as Combinatory Cat-
egorial Grammar (CCG) (Steedman, 2000).
Moreover, CCG is proved to be superior than
POS for CCG tag consisting of fine grained lex-
ical categories and its accuracy rate (Curran et
al., 2006; Clark and Curran, 2007).
Nowadays, CG and CCG become popular in
NLP researches. There are several researches us-
ing them as a main theoretical approach in Asia.
For example, there is a research in China using
CG with Type Lifting (Dowty, 1988) to find fea-
tures interpretations of undefined words as syn-
tactic-semantic analysis (Jiangsheng, 2000). In
Japan, researchers also works on Japanese cat-
egorial grammar (JCG) which gives a foundation
of semantic parsing of Japanese (Komatsu,
1999). Moreover, there is a research in Japan to
improve CG for solving Japanese particle shift-
ing phenomenon and using CG to focus on Ja-
panese particle (Nishiguchi, 2008).
This paper is organised as follows. Section 2
reviews categorial grammar and its function.
Section 3 explains resources for building Thai
CG treebank. Section 4 describes experiment res-
ult. Section 5 discusses issues of Thai CG tree-
bank. Last, Section 6 summarises paper and lists
up future work.
</bodyText>
<page confidence="0.944393">
96
</page>
<note confidence="0.997085">
Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 96–102,
Suntec, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP
</note>
<sectionHeader confidence="0.921954" genericHeader="method">
2 Categorial Grammar
</sectionHeader>
<bodyText confidence="0.998941">
Categorial grammar (Aka. CG or classical cat-
egorial grammar) (Ajdukiewicz, 1935; Car-
penter, 1992; Buszkowski, 1998; Steedman,
2000) is a formalism in natural language syntax
motivated by the principle of constitutionality
and organised according to the syntactic ele-
ments. The syntactic elements are categorised in
terms of their ability to combine with one anoth-
er to form larger constituents as functions or ac-
cording to a function-argument relationship. All
syntactic categories in CG are distinguished by a
syntactic category identifying them as one of the
following two types:
</bodyText>
<listItem confidence="0.992694909090909">
1. Argument: this type is a basic category,
such as s (sentence) and np (noun
phrase).
2. Functor (or functor category): this cat-
egory type is a combination of argument
and operator(s) &apos;/&apos; and &apos;\&apos;. Functor is
marked to a complex lexicon to assist ar-
gument to complete sentence such as
s\np (intransitive verb) requires noun
phrase from the left side to complete a
sentence.
</listItem>
<bodyText confidence="0.999240214285714">
CG captures the same information by associat-
ing a functional type or category with all gram-
matical entities. The notation α/P is a rightward-
combining functor over a domain of α into a
range of R. The notation α\R is a leftward-com-
bining functor over R into α. α and R are both ar-
gument syntactic categories (Hockenmaier and
Steedman, 2002; Baldridge and Kruijff, 2003).
The basic concept is to find the core of the com-
bination and replace the grammatical modifier
and complement with set of categories based on
the same concept with fractions. For example, in-
transitive verb is needed to combine with a sub-
ject to complete a sentence therefore intransitive
verb is written as s\np which means it needs a
noun phrase from the left side to complete a sen-
tence. If there is a noun phrase exists on the left
side, the rule of fraction cancellation is applied
as np*s\np = s. With CG, each lexicon can be an-
notated with its own syntactic category.
However, a lexicon could have more than one
syntactic category if it is able to be used in dif-
ferent appearances.
Furthermore, CG does not only construct a
purely syntactic structure but also delivers a
compositional interpretation. The identification
of derivation with interpretation becomes an ad-
vantage over others.
Example of CG derivation of Thai sentence is
illustrated in Figure 1.
Recently, there are many researches on com-
binatory categorial grammar (CCG) which is an
improved version of CG. With the CG based
concept and notation, it is possible to easily up-
grade it to advance formalism. However, Thai
syntax still remains unclear since there are sever-
al points on Thai grammar that are yet not com-
pletely researched and found absolute solvent
(Ruangrajitpakorn et al., 2007). Therefore, CG is
currently set for Thai to significantly reduce over
generation rate of complex composition or am-
biguate usage.
</bodyText>
<figureCaption confidence="0.992373">
Figure 1. CG derivation tree of Thai sentence
</figureCaption>
<sectionHeader confidence="0.998613" genericHeader="method">
3 Resources
</sectionHeader>
<bodyText confidence="0.999942833333333">
To collect CG treebank, CG dictionary and pars-
er are essentially required. Firstly, Thai corpus
was parsed with the parser using CG dictionary
as a syntactic resource. Then, the correct trees of
each sentence were manually determined by lin-
guists and collected together as treebank.
</bodyText>
<subsectionHeader confidence="0.997538">
3.1 Thai CG Dictionary
</subsectionHeader>
<bodyText confidence="0.999990846153846">
Recently, we developed Thai CG dictionary to be
a syntactic dictionary for several purposes since
CG is new to Thai NLP. CG was adopted to our
syntactic dictionary because of its focusing on
lexicon&apos;s behaviour and its fine grained lexical-
ised grammar. CG is proper to nature of Thai
language since Thai belongs to analytic language
typology; that is, its syntax and meaning depend
on the use of particles and word orders rather
than inflection (Boonkwan, and Supnithi, 2008).
Moreover, pronouns and other grammatical in-
formation, such as tenses, aspects, numbers, and
voices, are expressed by function words such as
</bodyText>
<page confidence="0.999238">
97
</page>
<bodyText confidence="0.99978775">
determiners, auxiliary verbs, adverbs and adject-
ives, which are in fix word order. With CG, it is
possible to well capture Thai grammatical in-
formation. Currently we only aim to improve an
accuracy of Thai syntax parsing since it still re-
mains unresearched ambiguities in Thai syntax.
A list of grammatical Thai word orders which are
handled with CG is shown in Table 1.
</bodyText>
<table confidence="0.92358335">
Thai Word-order
utilisation
Sentence - Subject + Verb + (Object)1 [rigid order]
Compound - Core noun + Attachment
noun
Adjective 2
modification - Noun + Adjective
Predicate Ad- - Noun + Adjective3
jective
Determiner - Noun + (Classifier) + Determiner
Numeral ex- - Noun + (Modifier) + Number + Classifier +
pression (Modifier)
Adverb - Sentence + Adverb
modification - Adverb + Sentence
Several aux- Subject + (Aux verbs) + VP + (Aux verbs)
iliary verbs
Negation - Subject + Negator + VP
- Subject + (Aux verb) + Negator + (Aux verb) +
VP
- Subject + VP + (Aux verb) + Negator + (Aux
</table>
<figure confidence="0.953146714285714">
verb)
Passive - Actee + Passive marker + (Actor) + Verb
Ditransitive - Subject + Ditransitive verb + Direct object + In-
direct object
Relative - Noun + Relative marker + Clause
clause
Compound - Sentence + Conjunction + Sentence
sentence - Conjunction + Sentence + Sentence
Complex - Sentence + Conjunction + Sentence
sentence - Conjunction + Sentence + Sentence
Subordinate - Subject + Verb + “in” + Sentence
clause that
begins with
word “��n”
</figure>
<tableCaption confidence="0.996786">
Table 1. Thai word orders that CG can solve
</tableCaption>
<listItem confidence="0.604391">
1 Information in parentheses is able to be omitted.
2 Adjective modification is a form of an adjective per-
forms as a modifier to a noun, and they combine as a
noun phrase.
3 Predicate adjective is a form of an adjective acts as a
predicate of a sentence.
</listItem>
<bodyText confidence="0.99995548">
In addition, there are many multi-sense words
in Thai. These words have the same surface form
but they have different meanings and different
usages. This issue can be solved with CG formal-
ism. The different usages are separated because
the annotation of syntactic information. For ex-
ample, Thai word “ drns” /k?/ can be used to
refer to noun as an &apos;island&apos; and it is marked as
np, and this word can also be denoted an action
which means &apos;to clink&apos; or &apos;to attach&apos; and it is
marked as s\np/np.
After observation Thai word usage, the list of
CG was created according to CG theory ex-
plained in Section 2.
Thai argument syntactic categories were ini-
tially created. For Thai language, six argument
syntactic categories were determined. Thai CG
arguments are listed with definition and ex-
amples in Table 2. Additionally, np, num, and
spnum are a Thai CG arguments that can dir-
ectly tag to a word, but other can not and they
can only be used as a combination for other argu-
ment.
With the arguments, other type of word are
created as functor by combining the arguments
together following its behaviour and environ-
mental requirements. The first argument in a
functor is a result of combination. There are only
two main operators in CG which are slash &apos;/&apos; and
backslash &apos;�&apos; before an argument. A slash &apos;/&apos; refers
to argument requirement from the right, and a
backslash &apos;�&apos; refers to argument requirement from
the left. For instance, a transitive verb requires
one np from the left and one np from the right to
complete a sentence. Therefore, it can be written
as s\np/np in CG form. However, several Thai
words have many functions even it has the same
word sense. For example, Thai word “ dia” /chuz a/
(to believe) is capable to use as intransitive verb,
transitive verb, and verb that can be followed
with subordinate clause. This word therefore has
three different syntactic categories. Currently,
there are 72 functors for Thai.
With an argument and a functor, each word in
the word list is annotated with CG. This informa-
tion is sufficient for parser to analyse an input
sentence into a grammatical tree. In conclusion,
CG dictionary presently contains 42,564 lexical
entries with 75 CG syntactic categories. All Thai
CG categories are shown in Appendix A.
</bodyText>
<page confidence="0.972653">
98
</page>
<table confidence="0.999906791666667">
Thai ar- definition example
gument
category
np a noun phrase ช �าง (elephant),
ผม (I, me)
num A both digit and word หน��ง (one),
cardinal number 2 (two)
spnum a number which is suc- น�ง (one),
ceeding to classifier in- เด�ยว (one)4
stead of proceeding clas-
sifier like ordinary num-
ber
pp a prepositional phrase ในรถ (in car),
บนโต�ะ (on table)
s a sentence ช�างก�นกล�วย
(elephant eats ba-
nana)
ws * ว�าเขาจะมาสาย 5
a specific category for &apos;that he will come
Thai which is assigned late &apos;
to a sentence that begins
with Thai word ว�า (that :
sub-ordinate clause
marker).
</table>
<tableCaption confidence="0.999539">
Table 2. List of Thai CG arguments
</tableCaption>
<subsectionHeader confidence="0.981474">
3.2 Parser
</subsectionHeader>
<bodyText confidence="0.999993733333333">
Our implemented lookahead LR parser (LALR)
(Aho and Johnson, 1974; Knuth, 1965) was used
as a tool to syntactically parse input from corpus.
For our LALR parser, a grammar rule is not
manually determined, but it is automatically pro-
duced by a any given syntactic notations aligned
with lexicons in a dictionary therefore this LALR
parser has a coverage including a CG formalism
parsing. Furthermore, our LALR parser has po-
tential to parse a tree from sentence, noun phrase
and verb phrase. However, the parser does not
only return the best first tree, but also all parsable
trees to gather all ambiguous trees since Thai
language tends to be ambiguous because of lack-
ing explicit sentence and word boundary.
</bodyText>
<subsectionHeader confidence="0.999037">
3.3 Tree Visualiser
</subsectionHeader>
<bodyText confidence="0.96271532">
To reduce load burden of linguist to seek for the
correct tree among all outputs, we developed a
tree visualiser. This tool was developed by using
an open source library provided by NLTK: The
4 This spnum category has a different usage from other
numerical use, e.g. ม�า[noun,&apos;horse&apos;] ต&amp;quot;ว[classifier]
เด�ยว[spnum,&apos;one&apos;] &apos;lit: one horse&apos;. This case is different
from normal numerical usage, e.g. ม�า[noun,&apos;horse&apos;] หน��ง
[num,&apos;one&apos;] ต&amp;quot;ว[classifier] &apos;lit: one horse&apos;
5 This example is a part of a sentence ฉ&amp;quot;นเช��อว�าเขาจะมา
สาย &apos;lit: I believe that he will come late&apos;
Natural Language Toolkit (http://www.nltk.org/
Home; Bird and Loper, 2004).
A tree visualiser is a tool to transform a textual
tree structure to graphic tree. This tool reads a
tree marking with parentheses form and trans-
mutes it into graphic. This tool can transform all
output types of tree including sentence tree, noun
phrase tree, and verb phrase tree. For example,
Thai sentence &amp;quot;IการIล�าIเส�อIเป%นlการlผจญภ&amp;quot;ยl&amp;quot;
/ka:n la: sttza pm ka:n pha2 con phai/ &apos;lit: Tiger
hunting is an adventure&apos; was parsed to a tree
shown in Figure 2. With a tree visualiser, the tree
in Figure 2 was transformed to a graphic tree il-
lustrated in Figure 3.
</bodyText>
<sectionHeader confidence="0.997984" genericHeader="method">
4 Experiment Result
</sectionHeader>
<bodyText confidence="0.996906375">
In the preliminary experiment, 27,239 Thai utter-
ances with a mix of sentences and phrases from a
general domain corpus are tested. The input was
word-segmented by JwordSeg (http://www.su-
parsit.com/nlp-tools) and approved by linguists.
In the test corpus, the longest utterance contains
seventeen words, and the shortest utterance con-
tains two words.
</bodyText>
<figure confidence="0.9976703125">
s
(np
(np/(s\np)[การ]
s\np(
(s\np)/np[ล�า]
np[เส�อ]
)
)
s\np(
(s\np)/np[เป%น]
np(
np/(s\np)[การ]
s\np[ผจญภ&amp;quot;ย]
)
)
)
</figure>
<figureCaption confidence="0.999959">
Figure 2. An example of CG tree output
Figure 3. An example of graphic tree
</figureCaption>
<page confidence="0.996019">
99
</page>
<bodyText confidence="0.957820333333333">
All trees are manually observed by linguists to
evaluate accuracy of the parser. The criteria of
accuracy are:
</bodyText>
<listItem confidence="0.981628875">
• A tree is correct if sentence is success-
fully parsed and syntactically correct ac-
cording to Thai grammar.
• In case of syntactic ambiguity such as a
usage of preposition or phrase and sen-
tence ambiguity, any tree following
those ambiguity is acceptable and coun-
ted as correct.
</listItem>
<bodyText confidence="0.959292666666667">
The parser returns 50,346 trees from 27,239
utterances as 1.85 trees per input in average.
There are 17,874 utterances that returns one tree.
The outputs can be divided into three different
output types: 12,876 sentential trees, 13,728
noun phrasal trees, and 18,342 verb phrasal trees.
From the parser output, tree amount collecting
in the CG tree bank in details is shown in Table
3.
</bodyText>
<table confidence="0.999413384615385">
Tree type Utterance Tree Average
amount amount
Only S 8,184 12,798 1.56
Only NP 7,211 12,407 1.72
Only VP 8,006 11,339 1.42
Both NP 1,583 5,188 3.28
and S
Both VP 1,725 6,816 3.95
and S
Both NP 397 1,140 2.87
and VP
S, NP, VP 133 658 4.95
Total 27,239 50,346 1.85
</table>
<tableCaption confidence="0.941917">
Table 3. Amount of tree categorised by a dif-
ferent kind of grammatical tree
</tableCaption>
<sectionHeader confidence="0.998629" genericHeader="evaluation">
5 Discussion
</sectionHeader>
<bodyText confidence="0.9998138">
After observation of our result, we found two
main issues.
First, some Thai inputs were parsed into sever-
al correct outputs due to ambiguity of an input.
The use of an adjective can be parsed to both
noun phrase and sentence since Thai adjective
can be used either a noun modifier or predicate.
For example, Thai input “|เด%กๆ|สดใส|บน|สนาม|” /
dek dek sod sai bon sat na:m/ can be literally
translated as follows:
</bodyText>
<listItem confidence="0.993949">
1. Children is cheerful on a playground.
2. Cheerful children on a playground
</listItem>
<bodyText confidence="0.99884209375">
For this problem, we decided to keep both
trees in our treebank since they are both gram-
matically correct.
Second, the next issue is a variety of syntactic
usages of Thai word. It is the fact that Thai has a
narrow range of word&apos;s surface but a lot of poly-
symy words. The more the word in Thai is gener-
ally used, the more utilisation of word becomes
varieties. With the several combination, there are
more chances to generate trees in a wrong con-
ceptual meaning even they form a correct syn-
tactic word order. For example, Thai noun phrase
“ก)าล&amp;quot;ง|มหาศาลll /kam lax mat ha: sa:n/ &apos;lit: great
power&apos; can automatically be parsed to three trees
for a sentence, a noun phrase, and a verb phrase
because of polysymy of the first word. The first
word &amp;quot;r�es&amp;quot; has two syntactic usages as a noun
which conceptually refers to power and a pre-
auxiliary verb to imply progressive aspect. The
word &amp;quot;muiPiia&amp;quot; is an adjective which can per-
form two options in Thai as noun modifier and
predicate. These affect parser to result three trees
as follows:
np: np(np[ก)าล&amp;quot;ง] np\np[มหาศาล])
s: s(np[ก)าล&amp;quot;ง] s\np[มหาศาล])
vp: s\np((s\np)/(s\np)[ก)าล&amp;quot;ง] s\np[มหาศาล])
Even though all trees are syntactically correct,
only noun phrasal tree is fully acceptable in
terms of semantic sense as great power. The oth-
er trees are awkward and out of certain meaning
in Thai. Therefore, the only noun phrase tree is
collected into our CG treebank for such case.
</bodyText>
<sectionHeader confidence="0.983917" genericHeader="conclusions">
6 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.9999433">
This paper presents Thai CG treebank which is a
language resource for developing Thai NLP ap-
plication. This treebank consists of 50,346 syn-
tactic trees from 27,239 utterances with CG tag
and composition. Trees can be split into three
grammatical types. There are 12,876 sentential
trees, 13,728 noun phrasal trees, and 18,342 verb
phrasal trees. There are 17,847 utterances that
obtain one tree, and an average tree per an utter-
ance is 1.85.
In the future, we plan to improve Thai CG
treebank to Thai CCG treebank. We also plan to
reduce a variety of trees by extending semantic
feature into CG. We will improve our LALR
parser to be GLR and PGLR parser respectively
to reduce a missing word and named entity prob-
lem. Moreover, we will develop parallel Thai-
English treebank by adding a parallel English
treebank aligned with Thai since parallel tree-
bank is useful resource for learning to statistical
</bodyText>
<page confidence="0.981318">
100
</page>
<bodyText confidence="0.9871">
machine translation. Furthermore, we will apply
obtained CG treebank for automatic CG tagging
development.
</bodyText>
<sectionHeader confidence="0.615656" genericHeader="references">
Reference
</sectionHeader>
<reference confidence="0.984083294871795">
Alfred V. Aho, and Stephen C. Johnson. 1974 LR
Parsing, In Proceedings of Computing Surveys,
Vol. 6, No. 2.
Bob Carpenter. 1992. “Categorial Grammars, Lexical
Rules,and the English Predicative”, In R. Levine,
ed., Formal Grammar: Theory and Implementation.
OUP.
David Dowty, Type raising, functional composition,
and non-constituent conjunction, In Richard Oehrle
et al., ed., Categorial Grammars and Natural Lan-
guage Structures. D. Reidel, 1988.
Donald E. Knuth. 1965. On the translation of lan-
guages from left to right, Information and Control
86.
Hisashi Komatsu. 1999. “Japanese Categorial Gram-
mar Based on Term and Sentence”. In Proceeding
of The 13th Pacific Asia Conference on Language,
Information and Computation, Taiwan.
James R. Curran, Stephen Clark, and David Vadas.
2006. Multi-Tagging for Lexicalized-Grammar
Parsing. In Proceedings of the Joint Conference of
the International Committee on Computational
Linguistics and the Association for Computational
Linguistics (ACL), Paris, France.
Jason Baldridge, and Geert-Jan. M. Kruijff. 2003.
“Multimodal combinatory categorial grammar”. In
Proceeding of 10th Conference of the European
Chapter of the ACL-2003, Budapest, Hungary.
Julia Hockenmaier, and Mark Steedman. 2002. “Ac-
quiring Compact Lexicalized Grammars from a
Cleaner Treebank”. In Proceeding of 3rd Interna-
tional Conference on Language Resources and
Evaluation (LREC-2002), Las Palmas, Spain.
JWordSeg, word-segmentation toolkit. Available
from: http://www.suparsit.com/nlp-tools), 2007.
Kazimierz Ajdukiewicz. 1935. Die Syntaktische Kon-
nexitat, Polish Logic.
Mark Steedman. 2000. The Syntactic Process, The
MIT Press, Cambridge Mass.
NLTK: The Natural Language Toolkit. Available
from: http://www.nltk.org/Home
Noss B. Richard. 1964. Thai Reference Grammar, U.
S. Government Printing Office, Washington DC.
Prachya Boonkwan, and Thepchai Supnithi. 2008.
Memory-inductive categorial grammar: An ap-
proach to gap resolution in analytic-language trans-
lation. In Proceeding of 3rd International Joint
Conference on Natural Language Processing
(IJCNLP-2008), Hyderabad, India.
Stephen Clark and James R. Curran. 2007. Formal-
ism-Independent Parser Evaluation with CCG and
DepBank. In Proceedings of the 45th Annual
Meeting of the Association for Computational Lin-
guistics (ACL), Prague, Czech Republic.
Steven G. Bird, and Edward Loper. 2004. NLTK: The
Natural Language Toolkit, In Proceedings of 42nd
Meeting of the Association for Computational Lin-
guistics (Demonstration Track), Barcelona, Spain.
Sumiyo Nishiguchi. 2008. Continuation-based CCG
of Japanese Quantifiers. In Proceeding of 6th
ICCS, The Korean Society of Cognitive Science,
Seoul, South Korea.
Taneth Ruangrajitpakorn, Wasan. na Chai, Prachya
Boonkwan, Montika Boriboon, and Thepchai.
Supnithi. 2007. The Design of Lexical Information
for Thai to English MT, In Proceeding of SNLP
2007, Pattaya, Thailand.
Vee Satayamas, and Asanee Kawtrakul. 2004. Wide-
Coverage Grammar Extraction from Thai Tree-
bank. In Proceedings of Papillon 2004 Workshops
on Multilingual Lexical Databases, Grenoble,
France.
Wojciech Buszkowski, Witold Marciszewski, and Jo-
han van Benthem, ed., Categorial Grammar, John
Benjamin, Amsterdam, 1998.
Yu Jiangsheng. 2000. Categorial Grammar based on
Feature Structures, dissersion in In-stitute of Com-
putational Linguistics, Peking University.
</reference>
<page confidence="0.99321">
101
</page>
<figure confidence="0.997929018404908">
CG Category
Type
((s\np)\(s\np))/(np\np)
Function word
((s\np)\(s\np))/((s\np)\(s\np))
Function word
((s\np)/ws)/pp
Verb
((s\np)/ws)/np
Verb
Adverb, Auxiliary
verb
((s\np)/pp)\((s\np)/pp)
((s\np)/pp)/np
Verb
Function word,
Adverb
((s\np)/pp)/((s\np)/pp)
((s\np)/np)\((s\np)/np)
Auxiliary verb
((s\np)/np)/np
Verb
((s\np)/np)/(s\np)
Verb
((s\np)/(s\np))\((s\np)/(s\np))
Adverberb
((np\np)\(np\np))/np
Function word
((np\np)\(np\np))/(np\np)
Conjoiner
Adverb, Auxiliary
verb
((np\np)/pp)\((np\np)/pp)
Adverb, Function
word
((np\np)/pp)/((np\np)/pp)
((np\np)/np)\((np\np)/np)
Auxiliary verb
((np/pp)\(np/pp))/(np/pp)
Conjoiner
(((s\np)\np)
Verb
(((s\np)/ws)/pp)/np
Verb
(((s\np)/pp)\((s\np)/pp))/((s\np)/pp)
Conjoiner
(((s\np)/pp)\((s\np)/pp))/(((s\np)/pp)\((s\np)/pp))
Function word
(((s\np)/pp)/np)/np
Verb
(((s\np)/pp)/np)/(((s\np)/pp)/np)
Function word
(((s\np)/np)/(s\np))/pp
Verb
(((np\np)/pp)\((np\np)/pp))/((np\np)/pp)
Conjoiner
(np\np)/(s\np)
(s\np)/((s\np)/np)
(np\np)/num
(s\np)/(s\np)
(np\np)/(np\np)
(np\np)/s
(np\np)\(np\np)
((s\np)\(s\np))/(s\np)
(np\np)\num
(s/s)/np
(s\np)/pp
(np\np)/spnum
(s\np)/np
(np\np)/np
((s\np)\(s\np))\num
(np/pp)\(np/pp)
((s\np)\(s\np))/np
(s\np)/(np\np)
(np/pp)/(np/pp)
(np\np)/((np\np)/np)
((s\np)\(s\np))/spnum
(s/s)/s
(s\np)/num
(s/s)/(s/np)
(s\np)/ws
Function word
Verb, Adjective
Verb
Classifier
Auxiliary verb
Determiner
Function word, Verb,
Adverb, Auxiliary verb
Classifier, Function word,
Adverb, Auxiliary verb
Function word
Function word, Adverb,
Auxiliary verb
Conjoiner
Classifier
Function word
Classifier
Verb, Adjective
Adjective, Conjoiner
Classifier
Adjective, Determiner
Function word
Function word
Determiner
Auxiliary verb
ws/s
Determiner
Conjunction
Function word
np/pp
(s\np)\(s\np)
s/s
s\np/(s\np)/np
np\num
num
np/np
pp/np
s/(s/np)
ws/(s/np)
s\s
pp/s
np\np
pp/(s\np)
s\np
np
np/(np/np)
np/((s\np)/np)
(s\s)/s
np/(s\np)
Conjoiner
spnum
s/np
s
Noun, Pronoun
Conjoiner
Particle, Adverb
Adverb, Auxiliary verb
Function word, Particle
Verb
Classifier
Function word
Adjective, Determiner
Conjoiner
Auxiliary verb
Conjoiner
Adjective
Conjoiner
Verb
Noun, Pronoun
Auxiliary verb
Function word
Conjunction
Function word
Function word
Sentence
Function word
102
CG Category
Type
CG Category
Type
Appendix A
</figure>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.442258">
<title confidence="0.999787">A Syntactic Resource for Thai: CG Treebank</title>
<author confidence="0.75832">Taneth Ruangrajitpakorn Kanokorn Trakultaweekoon Thepchai</author>
<affiliation confidence="0.863477">Human Language Technology National Electronics and Computer Technology</affiliation>
<address confidence="0.982355">112 Thailand Science Park, Phahonyothin Road, Klong Klong Luang Pathumthani, 12120,</address>
<phone confidence="0.934547">66-2-564-6900 Ext.2547, Fax.: +66-2-564-6772</phone>
<email confidence="0.92178">kanokorn.trakultaweekoon,chai.supnithi}@nectec.or.th</email>
<abstract confidence="0.988996222222222">This paper presents Thai syntactic resource: Thai CG treebank, a categorial approach of language resources. Since there are very few Thai syntactic resources, we designed to create treebank based on CG formalism. Thai corpus was parsed with existing CG syntactic dictionary and LALR parser. The correct parsed trees were collected as preliminary CG treebank. It consists of 50,346 trees from 27,239 utterances. Trees can be split into three grammatical types. There are 12,876 sentential trees, 13,728 noun phrasal trees, and 18,342 verb phrasal trees. There are 17,847 utterances that obtain one tree, and an average tree per an utterance is 1.85.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Alfred V Aho</author>
<author>Stephen C Johnson</author>
</authors>
<title>LR Parsing,</title>
<date>1974</date>
<booktitle>In Proceedings of Computing Surveys,</booktitle>
<volume>6</volume>
<contexts>
<context position="12036" citStr="Aho and Johnson, 1974" startWordPosition="2000" endWordPosition="2003">se ช �าง (elephant), ผม (I, me) num A both digit and word หน��ง (one), cardinal number 2 (two) spnum a number which is suc- น�ง (one), ceeding to classifier in- เด�ยว (one)4 stead of proceeding classifier like ordinary number pp a prepositional phrase ในรถ (in car), บนโต�ะ (on table) s a sentence ช�างก�นกล�วย (elephant eats banana) ws * ว�าเขาจะมาสาย 5 a specific category for &apos;that he will come Thai which is assigned late &apos; to a sentence that begins with Thai word ว�า (that : sub-ordinate clause marker). Table 2. List of Thai CG arguments 3.2 Parser Our implemented lookahead LR parser (LALR) (Aho and Johnson, 1974; Knuth, 1965) was used as a tool to syntactically parse input from corpus. For our LALR parser, a grammar rule is not manually determined, but it is automatically produced by a any given syntactic notations aligned with lexicons in a dictionary therefore this LALR parser has a coverage including a CG formalism parsing. Furthermore, our LALR parser has potential to parse a tree from sentence, noun phrase and verb phrase. However, the parser does not only return the best first tree, but also all parsable trees to gather all ambiguous trees since Thai language tends to be ambiguous because of la</context>
</contexts>
<marker>Aho, Johnson, 1974</marker>
<rawString>Alfred V. Aho, and Stephen C. Johnson. 1974 LR Parsing, In Proceedings of Computing Surveys, Vol. 6, No. 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bob Carpenter</author>
</authors>
<title>Categorial Grammars, Lexical Rules,and the English Predicative”, In</title>
<date>1992</date>
<booktitle>Formal Grammar: Theory and Implementation. OUP.</booktitle>
<editor>R. Levine, ed.,</editor>
<contexts>
<context position="3701" citStr="Carpenter, 1992" startWordPosition="569" endWordPosition="571">o focus on Japanese particle (Nishiguchi, 2008). This paper is organised as follows. Section 2 reviews categorial grammar and its function. Section 3 explains resources for building Thai CG treebank. Section 4 describes experiment result. Section 5 discusses issues of Thai CG treebank. Last, Section 6 summarises paper and lists up future work. 96 Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 96–102, Suntec, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP 2 Categorial Grammar Categorial grammar (Aka. CG or classical categorial grammar) (Ajdukiewicz, 1935; Carpenter, 1992; Buszkowski, 1998; Steedman, 2000) is a formalism in natural language syntax motivated by the principle of constitutionality and organised according to the syntactic elements. The syntactic elements are categorised in terms of their ability to combine with one another to form larger constituents as functions or according to a function-argument relationship. All syntactic categories in CG are distinguished by a syntactic category identifying them as one of the following two types: 1. Argument: this type is a basic category, such as s (sentence) and np (noun phrase). 2. Functor (or functor cate</context>
</contexts>
<marker>Carpenter, 1992</marker>
<rawString>Bob Carpenter. 1992. “Categorial Grammars, Lexical Rules,and the English Predicative”, In R. Levine, ed., Formal Grammar: Theory and Implementation. OUP.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Dowty</author>
</authors>
<title>Type raising, functional composition, and non-constituent conjunction,</title>
<date>1988</date>
<booktitle>Categorial Grammars and Natural Language Structures.</booktitle>
<editor>In Richard Oehrle et al., ed.,</editor>
<contexts>
<context position="2721" citStr="Dowty, 1988" startWordPosition="418" endWordPosition="419">ply CG for machine learning and statistical based approach, CG treebank, is initially required. CG is a based concept that can be applied to advance grammar such as Combinatory Categorial Grammar (CCG) (Steedman, 2000). Moreover, CCG is proved to be superior than POS for CCG tag consisting of fine grained lexical categories and its accuracy rate (Curran et al., 2006; Clark and Curran, 2007). Nowadays, CG and CCG become popular in NLP researches. There are several researches using them as a main theoretical approach in Asia. For example, there is a research in China using CG with Type Lifting (Dowty, 1988) to find features interpretations of undefined words as syntactic-semantic analysis (Jiangsheng, 2000). In Japan, researchers also works on Japanese categorial grammar (JCG) which gives a foundation of semantic parsing of Japanese (Komatsu, 1999). Moreover, there is a research in Japan to improve CG for solving Japanese particle shifting phenomenon and using CG to focus on Japanese particle (Nishiguchi, 2008). This paper is organised as follows. Section 2 reviews categorial grammar and its function. Section 3 explains resources for building Thai CG treebank. Section 4 describes experiment resu</context>
</contexts>
<marker>Dowty, 1988</marker>
<rawString>David Dowty, Type raising, functional composition, and non-constituent conjunction, In Richard Oehrle et al., ed., Categorial Grammars and Natural Language Structures. D. Reidel, 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donald E Knuth</author>
</authors>
<title>On the translation of languages from left to right,</title>
<date>1965</date>
<journal>Information and Control</journal>
<volume>86</volume>
<contexts>
<context position="12050" citStr="Knuth, 1965" startWordPosition="2004" endWordPosition="2005"> (I, me) num A both digit and word หน��ง (one), cardinal number 2 (two) spnum a number which is suc- น�ง (one), ceeding to classifier in- เด�ยว (one)4 stead of proceeding classifier like ordinary number pp a prepositional phrase ในรถ (in car), บนโต�ะ (on table) s a sentence ช�างก�นกล�วย (elephant eats banana) ws * ว�าเขาจะมาสาย 5 a specific category for &apos;that he will come Thai which is assigned late &apos; to a sentence that begins with Thai word ว�า (that : sub-ordinate clause marker). Table 2. List of Thai CG arguments 3.2 Parser Our implemented lookahead LR parser (LALR) (Aho and Johnson, 1974; Knuth, 1965) was used as a tool to syntactically parse input from corpus. For our LALR parser, a grammar rule is not manually determined, but it is automatically produced by a any given syntactic notations aligned with lexicons in a dictionary therefore this LALR parser has a coverage including a CG formalism parsing. Furthermore, our LALR parser has potential to parse a tree from sentence, noun phrase and verb phrase. However, the parser does not only return the best first tree, but also all parsable trees to gather all ambiguous trees since Thai language tends to be ambiguous because of lacking explicit</context>
</contexts>
<marker>Knuth, 1965</marker>
<rawString>Donald E. Knuth. 1965. On the translation of languages from left to right, Information and Control 86.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hisashi Komatsu</author>
</authors>
<title>Japanese Categorial Grammar Based on Term and Sentence”.</title>
<date>1999</date>
<booktitle>In Proceeding of The 13th Pacific Asia Conference on Language, Information and Computation,</booktitle>
<contexts>
<context position="2967" citStr="Komatsu, 1999" startWordPosition="454" endWordPosition="455">to be superior than POS for CCG tag consisting of fine grained lexical categories and its accuracy rate (Curran et al., 2006; Clark and Curran, 2007). Nowadays, CG and CCG become popular in NLP researches. There are several researches using them as a main theoretical approach in Asia. For example, there is a research in China using CG with Type Lifting (Dowty, 1988) to find features interpretations of undefined words as syntactic-semantic analysis (Jiangsheng, 2000). In Japan, researchers also works on Japanese categorial grammar (JCG) which gives a foundation of semantic parsing of Japanese (Komatsu, 1999). Moreover, there is a research in Japan to improve CG for solving Japanese particle shifting phenomenon and using CG to focus on Japanese particle (Nishiguchi, 2008). This paper is organised as follows. Section 2 reviews categorial grammar and its function. Section 3 explains resources for building Thai CG treebank. Section 4 describes experiment result. Section 5 discusses issues of Thai CG treebank. Last, Section 6 summarises paper and lists up future work. 96 Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 96–102, Suntec, Singapore, 6-7 August 2009. c�20</context>
</contexts>
<marker>Komatsu, 1999</marker>
<rawString>Hisashi Komatsu. 1999. “Japanese Categorial Grammar Based on Term and Sentence”. In Proceeding of The 13th Pacific Asia Conference on Language, Information and Computation, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James R Curran</author>
<author>Stephen Clark</author>
<author>David Vadas</author>
</authors>
<title>Multi-Tagging for Lexicalized-Grammar Parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of the Joint Conference of the International Committee on Computational Linguistics and the Association for Computational Linguistics (ACL),</booktitle>
<location>Paris, France.</location>
<contexts>
<context position="2477" citStr="Curran et al., 2006" startWordPosition="374" endWordPosition="377">ense, aspect, modal, etc. Therefore, to recognise word order is a key to syntactic analysis for Thai. Categorial Grammar (CG) is a formalism which focuses on principle of syntactic behaviour. It can be applied to solve word order issues in Thai. To apply CG for machine learning and statistical based approach, CG treebank, is initially required. CG is a based concept that can be applied to advance grammar such as Combinatory Categorial Grammar (CCG) (Steedman, 2000). Moreover, CCG is proved to be superior than POS for CCG tag consisting of fine grained lexical categories and its accuracy rate (Curran et al., 2006; Clark and Curran, 2007). Nowadays, CG and CCG become popular in NLP researches. There are several researches using them as a main theoretical approach in Asia. For example, there is a research in China using CG with Type Lifting (Dowty, 1988) to find features interpretations of undefined words as syntactic-semantic analysis (Jiangsheng, 2000). In Japan, researchers also works on Japanese categorial grammar (JCG) which gives a foundation of semantic parsing of Japanese (Komatsu, 1999). Moreover, there is a research in Japan to improve CG for solving Japanese particle shifting phenomenon and u</context>
</contexts>
<marker>Curran, Clark, Vadas, 2006</marker>
<rawString>James R. Curran, Stephen Clark, and David Vadas. 2006. Multi-Tagging for Lexicalized-Grammar Parsing. In Proceedings of the Joint Conference of the International Committee on Computational Linguistics and the Association for Computational Linguistics (ACL), Paris, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kruijff</author>
</authors>
<title>Multimodal combinatory categorial grammar”.</title>
<date>2003</date>
<booktitle>In Proceeding of 10th Conference of the European Chapter of the ACL-2003,</booktitle>
<location>Budapest, Hungary.</location>
<contexts>
<context position="4929" citStr="Kruijff, 2003" startWordPosition="774" endWordPosition="775">tegory type is a combination of argument and operator(s) &apos;/&apos; and &apos;\&apos;. Functor is marked to a complex lexicon to assist argument to complete sentence such as s\np (intransitive verb) requires noun phrase from the left side to complete a sentence. CG captures the same information by associating a functional type or category with all grammatical entities. The notation α/P is a rightwardcombining functor over a domain of α into a range of R. The notation α\R is a leftward-combining functor over R into α. α and R are both argument syntactic categories (Hockenmaier and Steedman, 2002; Baldridge and Kruijff, 2003). The basic concept is to find the core of the combination and replace the grammatical modifier and complement with set of categories based on the same concept with fractions. For example, intransitive verb is needed to combine with a subject to complete a sentence therefore intransitive verb is written as s\np which means it needs a noun phrase from the left side to complete a sentence. If there is a noun phrase exists on the left side, the rule of fraction cancellation is applied as np*s\np = s. With CG, each lexicon can be annotated with its own syntactic category. However, a lexicon could </context>
</contexts>
<marker>Kruijff, 2003</marker>
<rawString>Jason Baldridge, and Geert-Jan. M. Kruijff. 2003. “Multimodal combinatory categorial grammar”. In Proceeding of 10th Conference of the European Chapter of the ACL-2003, Budapest, Hungary.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Julia Hockenmaier</author>
<author>Mark Steedman</author>
</authors>
<title>Acquiring Compact Lexicalized Grammars from a Cleaner Treebank”.</title>
<date>2002</date>
<booktitle>In Proceeding of 3rd International Conference on Language Resources and Evaluation (LREC-2002),</booktitle>
<location>Las Palmas,</location>
<contexts>
<context position="4899" citStr="Hockenmaier and Steedman, 2002" startWordPosition="768" endWordPosition="771">se). 2. Functor (or functor category): this category type is a combination of argument and operator(s) &apos;/&apos; and &apos;\&apos;. Functor is marked to a complex lexicon to assist argument to complete sentence such as s\np (intransitive verb) requires noun phrase from the left side to complete a sentence. CG captures the same information by associating a functional type or category with all grammatical entities. The notation α/P is a rightwardcombining functor over a domain of α into a range of R. The notation α\R is a leftward-combining functor over R into α. α and R are both argument syntactic categories (Hockenmaier and Steedman, 2002; Baldridge and Kruijff, 2003). The basic concept is to find the core of the combination and replace the grammatical modifier and complement with set of categories based on the same concept with fractions. For example, intransitive verb is needed to combine with a subject to complete a sentence therefore intransitive verb is written as s\np which means it needs a noun phrase from the left side to complete a sentence. If there is a noun phrase exists on the left side, the rule of fraction cancellation is applied as np*s\np = s. With CG, each lexicon can be annotated with its own syntactic categ</context>
</contexts>
<marker>Hockenmaier, Steedman, 2002</marker>
<rawString>Julia Hockenmaier, and Mark Steedman. 2002. “Acquiring Compact Lexicalized Grammars from a Cleaner Treebank”. In Proceeding of 3rd International Conference on Language Resources and Evaluation (LREC-2002), Las Palmas, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>JWordSeg</author>
</authors>
<title>word-segmentation toolkit. Available from: http://www.suparsit.com/nlp-tools),</title>
<date>2007</date>
<marker>JWordSeg, 2007</marker>
<rawString>JWordSeg, word-segmentation toolkit. Available from: http://www.suparsit.com/nlp-tools), 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kazimierz Ajdukiewicz</author>
</authors>
<title>Die Syntaktische Konnexitat, Polish Logic.</title>
<date>1935</date>
<contexts>
<context position="3684" citStr="Ajdukiewicz, 1935" startWordPosition="567" endWordPosition="568">enon and using CG to focus on Japanese particle (Nishiguchi, 2008). This paper is organised as follows. Section 2 reviews categorial grammar and its function. Section 3 explains resources for building Thai CG treebank. Section 4 describes experiment result. Section 5 discusses issues of Thai CG treebank. Last, Section 6 summarises paper and lists up future work. 96 Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 96–102, Suntec, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP 2 Categorial Grammar Categorial grammar (Aka. CG or classical categorial grammar) (Ajdukiewicz, 1935; Carpenter, 1992; Buszkowski, 1998; Steedman, 2000) is a formalism in natural language syntax motivated by the principle of constitutionality and organised according to the syntactic elements. The syntactic elements are categorised in terms of their ability to combine with one another to form larger constituents as functions or according to a function-argument relationship. All syntactic categories in CG are distinguished by a syntactic category identifying them as one of the following two types: 1. Argument: this type is a basic category, such as s (sentence) and np (noun phrase). 2. Functor</context>
</contexts>
<marker>Ajdukiewicz, 1935</marker>
<rawString>Kazimierz Ajdukiewicz. 1935. Die Syntaktische Konnexitat, Polish Logic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>The Syntactic Process,</title>
<date>2000</date>
<publisher>The MIT Press,</publisher>
<location>Cambridge Mass.</location>
<contexts>
<context position="2327" citStr="Steedman, 2000" startWordPosition="349" endWordPosition="350">means grammatical information relying in a word rather than inflection (Richard, 1964). Function words represent grammatical information such as tense, aspect, modal, etc. Therefore, to recognise word order is a key to syntactic analysis for Thai. Categorial Grammar (CG) is a formalism which focuses on principle of syntactic behaviour. It can be applied to solve word order issues in Thai. To apply CG for machine learning and statistical based approach, CG treebank, is initially required. CG is a based concept that can be applied to advance grammar such as Combinatory Categorial Grammar (CCG) (Steedman, 2000). Moreover, CCG is proved to be superior than POS for CCG tag consisting of fine grained lexical categories and its accuracy rate (Curran et al., 2006; Clark and Curran, 2007). Nowadays, CG and CCG become popular in NLP researches. There are several researches using them as a main theoretical approach in Asia. For example, there is a research in China using CG with Type Lifting (Dowty, 1988) to find features interpretations of undefined words as syntactic-semantic analysis (Jiangsheng, 2000). In Japan, researchers also works on Japanese categorial grammar (JCG) which gives a foundation of sema</context>
<context position="3736" citStr="Steedman, 2000" startWordPosition="574" endWordPosition="575">guchi, 2008). This paper is organised as follows. Section 2 reviews categorial grammar and its function. Section 3 explains resources for building Thai CG treebank. Section 4 describes experiment result. Section 5 discusses issues of Thai CG treebank. Last, Section 6 summarises paper and lists up future work. 96 Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 96–102, Suntec, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP 2 Categorial Grammar Categorial grammar (Aka. CG or classical categorial grammar) (Ajdukiewicz, 1935; Carpenter, 1992; Buszkowski, 1998; Steedman, 2000) is a formalism in natural language syntax motivated by the principle of constitutionality and organised according to the syntactic elements. The syntactic elements are categorised in terms of their ability to combine with one another to form larger constituents as functions or according to a function-argument relationship. All syntactic categories in CG are distinguished by a syntactic category identifying them as one of the following two types: 1. Argument: this type is a basic category, such as s (sentence) and np (noun phrase). 2. Functor (or functor category): this category type is a comb</context>
</contexts>
<marker>Steedman, 2000</marker>
<rawString>Mark Steedman. 2000. The Syntactic Process, The MIT Press, Cambridge Mass.</rawString>
</citation>
<citation valid="false">
<title>NLTK: The Natural Language Toolkit. Available from: http://www.nltk.org/Home</title>
<marker></marker>
<rawString>NLTK: The Natural Language Toolkit. Available from: http://www.nltk.org/Home</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noss B Richard</author>
</authors>
<title>Thai Reference Grammar,</title>
<date>1964</date>
<location>Washington DC.</location>
<contexts>
<context position="1798" citStr="Richard, 1964" startWordPosition="260" endWordPosition="261">ortant roles in NLP tools for instance machine translation (MT), automatic POS tagger, and statistical parser. Because of a load burden and lacking linguistic expertise to manually assign syntactic annotation to sentence, we are currently limited to a few syntactical resources. There are few researches (Satayamas and Kawtrakul, 2004) focused on developing system to build treebank. Unfortunately, there is no further report on the existing treebank in Thai so far. Especially for Thai, Thai belongs to analytic language which means grammatical information relying in a word rather than inflection (Richard, 1964). Function words represent grammatical information such as tense, aspect, modal, etc. Therefore, to recognise word order is a key to syntactic analysis for Thai. Categorial Grammar (CG) is a formalism which focuses on principle of syntactic behaviour. It can be applied to solve word order issues in Thai. To apply CG for machine learning and statistical based approach, CG treebank, is initially required. CG is a based concept that can be applied to advance grammar such as Combinatory Categorial Grammar (CCG) (Steedman, 2000). Moreover, CCG is proved to be superior than POS for CCG tag consistin</context>
</contexts>
<marker>Richard, 1964</marker>
<rawString>Noss B. Richard. 1964. Thai Reference Grammar, U. S. Government Printing Office, Washington DC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Prachya Boonkwan</author>
<author>Thepchai Supnithi</author>
</authors>
<title>Memory-inductive categorial grammar: An approach to gap resolution in analytic-language translation.</title>
<date>2008</date>
<booktitle>In Proceeding of 3rd International Joint Conference on Natural Language Processing (IJCNLP-2008),</booktitle>
<location>Hyderabad, India.</location>
<marker>Boonkwan, Supnithi, 2008</marker>
<rawString>Prachya Boonkwan, and Thepchai Supnithi. 2008. Memory-inductive categorial grammar: An approach to gap resolution in analytic-language translation. In Proceeding of 3rd International Joint Conference on Natural Language Processing (IJCNLP-2008), Hyderabad, India.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen Clark</author>
<author>James R Curran</author>
</authors>
<title>Formalism-Independent Parser Evaluation with CCG and DepBank.</title>
<date>2007</date>
<booktitle>In Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<location>Prague, Czech Republic.</location>
<contexts>
<context position="2502" citStr="Clark and Curran, 2007" startWordPosition="378" endWordPosition="381">etc. Therefore, to recognise word order is a key to syntactic analysis for Thai. Categorial Grammar (CG) is a formalism which focuses on principle of syntactic behaviour. It can be applied to solve word order issues in Thai. To apply CG for machine learning and statistical based approach, CG treebank, is initially required. CG is a based concept that can be applied to advance grammar such as Combinatory Categorial Grammar (CCG) (Steedman, 2000). Moreover, CCG is proved to be superior than POS for CCG tag consisting of fine grained lexical categories and its accuracy rate (Curran et al., 2006; Clark and Curran, 2007). Nowadays, CG and CCG become popular in NLP researches. There are several researches using them as a main theoretical approach in Asia. For example, there is a research in China using CG with Type Lifting (Dowty, 1988) to find features interpretations of undefined words as syntactic-semantic analysis (Jiangsheng, 2000). In Japan, researchers also works on Japanese categorial grammar (JCG) which gives a foundation of semantic parsing of Japanese (Komatsu, 1999). Moreover, there is a research in Japan to improve CG for solving Japanese particle shifting phenomenon and using CG to focus on Japan</context>
</contexts>
<marker>Clark, Curran, 2007</marker>
<rawString>Stephen Clark and James R. Curran. 2007. Formalism-Independent Parser Evaluation with CCG and DepBank. In Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics (ACL), Prague, Czech Republic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven G Bird</author>
<author>Edward Loper</author>
</authors>
<title>NLTK: The Natural Language Toolkit,</title>
<date>2004</date>
<booktitle>In Proceedings of 42nd Meeting of the Association for Computational Linguistics (Demonstration Track),</booktitle>
<location>Barcelona,</location>
<contexts>
<context position="13339" citStr="Bird and Loper, 2004" startWordPosition="2209" endWordPosition="2212">en of linguist to seek for the correct tree among all outputs, we developed a tree visualiser. This tool was developed by using an open source library provided by NLTK: The 4 This spnum category has a different usage from other numerical use, e.g. ม�า[noun,&apos;horse&apos;] ต&amp;quot;ว[classifier] เด�ยว[spnum,&apos;one&apos;] &apos;lit: one horse&apos;. This case is different from normal numerical usage, e.g. ม�า[noun,&apos;horse&apos;] หน��ง [num,&apos;one&apos;] ต&amp;quot;ว[classifier] &apos;lit: one horse&apos; 5 This example is a part of a sentence ฉ&amp;quot;นเช��อว�าเขาจะมา สาย &apos;lit: I believe that he will come late&apos; Natural Language Toolkit (http://www.nltk.org/ Home; Bird and Loper, 2004). A tree visualiser is a tool to transform a textual tree structure to graphic tree. This tool reads a tree marking with parentheses form and transmutes it into graphic. This tool can transform all output types of tree including sentence tree, noun phrase tree, and verb phrase tree. For example, Thai sentence &amp;quot;IการIล�าIเส�อIเป%นlการlผจญภ&amp;quot;ยl&amp;quot; /ka:n la: sttza pm ka:n pha2 con phai/ &apos;lit: Tiger hunting is an adventure&apos; was parsed to a tree shown in Figure 2. With a tree visualiser, the tree in Figure 2 was transformed to a graphic tree illustrated in Figure 3. 4 Experiment Result In the prelimina</context>
</contexts>
<marker>Bird, Loper, 2004</marker>
<rawString>Steven G. Bird, and Edward Loper. 2004. NLTK: The Natural Language Toolkit, In Proceedings of 42nd Meeting of the Association for Computational Linguistics (Demonstration Track), Barcelona, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sumiyo Nishiguchi</author>
</authors>
<title>Continuation-based CCG of Japanese Quantifiers.</title>
<date>2008</date>
<booktitle>In Proceeding of 6th ICCS, The Korean Society of Cognitive Science,</booktitle>
<location>Seoul, South</location>
<contexts>
<context position="3133" citStr="Nishiguchi, 2008" startWordPosition="482" endWordPosition="483"> and CCG become popular in NLP researches. There are several researches using them as a main theoretical approach in Asia. For example, there is a research in China using CG with Type Lifting (Dowty, 1988) to find features interpretations of undefined words as syntactic-semantic analysis (Jiangsheng, 2000). In Japan, researchers also works on Japanese categorial grammar (JCG) which gives a foundation of semantic parsing of Japanese (Komatsu, 1999). Moreover, there is a research in Japan to improve CG for solving Japanese particle shifting phenomenon and using CG to focus on Japanese particle (Nishiguchi, 2008). This paper is organised as follows. Section 2 reviews categorial grammar and its function. Section 3 explains resources for building Thai CG treebank. Section 4 describes experiment result. Section 5 discusses issues of Thai CG treebank. Last, Section 6 summarises paper and lists up future work. 96 Proceedings of the 7th Workshop on Asian Language Resources, ACL-IJCNLP 2009, pages 96–102, Suntec, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP 2 Categorial Grammar Categorial grammar (Aka. CG or classical categorial grammar) (Ajdukiewicz, 1935; Carpenter, 1992; Buszkowski, 1998; Steedman, 20</context>
</contexts>
<marker>Nishiguchi, 2008</marker>
<rawString>Sumiyo Nishiguchi. 2008. Continuation-based CCG of Japanese Quantifiers. In Proceeding of 6th ICCS, The Korean Society of Cognitive Science, Seoul, South Korea.</rawString>
</citation>
<citation valid="true">
<authors>
<author>na Chai</author>
<author>Prachya Boonkwan</author>
<author>Montika Boriboon</author>
<author>Thepchai Supnithi</author>
</authors>
<date>2007</date>
<booktitle>The Design of Lexical Information for Thai to English MT, In Proceeding of SNLP 2007,</booktitle>
<location>Pattaya, Thailand.</location>
<marker>Chai, Boonkwan, Boriboon, Supnithi, 2007</marker>
<rawString>Taneth Ruangrajitpakorn, Wasan. na Chai, Prachya Boonkwan, Montika Boriboon, and Thepchai. Supnithi. 2007. The Design of Lexical Information for Thai to English MT, In Proceeding of SNLP 2007, Pattaya, Thailand.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vee Satayamas</author>
<author>Asanee Kawtrakul</author>
</authors>
<title>WideCoverage Grammar Extraction from Thai Treebank.</title>
<date>2004</date>
<booktitle>In Proceedings of Papillon 2004 Workshops on Multilingual Lexical Databases,</booktitle>
<location>Grenoble, France.</location>
<contexts>
<context position="1519" citStr="Satayamas and Kawtrakul, 2004" startWordPosition="215" endWordPosition="218">pes. There are 12,876 sentential trees, 13,728 noun phrasal trees, and 18,342 verb phrasal trees. There are 17,847 utterances that obtain one tree, and an average tree per an utterance is 1.85. 1 Introduction Syntactic lexical resources such as POS tagged corpus and treebank play one of the important roles in NLP tools for instance machine translation (MT), automatic POS tagger, and statistical parser. Because of a load burden and lacking linguistic expertise to manually assign syntactic annotation to sentence, we are currently limited to a few syntactical resources. There are few researches (Satayamas and Kawtrakul, 2004) focused on developing system to build treebank. Unfortunately, there is no further report on the existing treebank in Thai so far. Especially for Thai, Thai belongs to analytic language which means grammatical information relying in a word rather than inflection (Richard, 1964). Function words represent grammatical information such as tense, aspect, modal, etc. Therefore, to recognise word order is a key to syntactic analysis for Thai. Categorial Grammar (CG) is a formalism which focuses on principle of syntactic behaviour. It can be applied to solve word order issues in Thai. To apply CG for</context>
</contexts>
<marker>Satayamas, Kawtrakul, 2004</marker>
<rawString>Vee Satayamas, and Asanee Kawtrakul. 2004. WideCoverage Grammar Extraction from Thai Treebank. In Proceedings of Papillon 2004 Workshops on Multilingual Lexical Databases, Grenoble, France.</rawString>
</citation>
<citation valid="true">
<date>1998</date>
<booktitle>Categorial Grammar,</booktitle>
<editor>Wojciech Buszkowski, Witold Marciszewski, and Johan van Benthem, ed.,</editor>
<location>John Benjamin, Amsterdam,</location>
<marker>1998</marker>
<rawString>Wojciech Buszkowski, Witold Marciszewski, and Johan van Benthem, ed., Categorial Grammar, John Benjamin, Amsterdam, 1998.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yu Jiangsheng</author>
</authors>
<title>Categorial Grammar based on Feature Structures, dissersion in In-stitute of Computational Linguistics,</title>
<date>2000</date>
<institution>Peking University.</institution>
<contexts>
<context position="2823" citStr="Jiangsheng, 2000" startWordPosition="432" endWordPosition="433">G is a based concept that can be applied to advance grammar such as Combinatory Categorial Grammar (CCG) (Steedman, 2000). Moreover, CCG is proved to be superior than POS for CCG tag consisting of fine grained lexical categories and its accuracy rate (Curran et al., 2006; Clark and Curran, 2007). Nowadays, CG and CCG become popular in NLP researches. There are several researches using them as a main theoretical approach in Asia. For example, there is a research in China using CG with Type Lifting (Dowty, 1988) to find features interpretations of undefined words as syntactic-semantic analysis (Jiangsheng, 2000). In Japan, researchers also works on Japanese categorial grammar (JCG) which gives a foundation of semantic parsing of Japanese (Komatsu, 1999). Moreover, there is a research in Japan to improve CG for solving Japanese particle shifting phenomenon and using CG to focus on Japanese particle (Nishiguchi, 2008). This paper is organised as follows. Section 2 reviews categorial grammar and its function. Section 3 explains resources for building Thai CG treebank. Section 4 describes experiment result. Section 5 discusses issues of Thai CG treebank. Last, Section 6 summarises paper and lists up futu</context>
</contexts>
<marker>Jiangsheng, 2000</marker>
<rawString>Yu Jiangsheng. 2000. Categorial Grammar based on Feature Structures, dissersion in In-stitute of Computational Linguistics, Peking University.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>