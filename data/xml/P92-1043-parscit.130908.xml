<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000585">
<title confidence="0.988799">
A Linguistic and Computational Analysis of the German
&amp;quot;Third Construction&apos;
</title>
<author confidence="0.934059">
Owen Rambow
</author>
<affiliation confidence="0.7831875">
Department of CIS, University of Pennsylvania
Philadelphia, PA 19104, USA
</affiliation>
<email confidence="0.633209">
rambow@linc . cis .upenn.edu
</email>
<sectionHeader confidence="0.956257" genericHeader="method">
1 The Linguistic Data
</sectionHeader>
<bodyText confidence="0.994818909090909">
For German, most transformational lingusitic theories such
as GB posit center-embedding as the underlying word order
of sentences with embedded clauses:
Well ich [das Fahrrad zu reparieren] versprochen habe
Because I the bike (acc) to repair promised have
Because I promised to repair the bike
However, far more common is a construction in which the
entire subordinate clause is extraposed: Weil ich 1 ver-
sprochen habe, [das Fahrrad zu reparieren] i. In addition,
a third construction is possible, which has been called the
&amp;quot;third construction&amp;quot;, in which only the embedded verb, but
not its nominal argument has been extraposed: Weil ich das
Fahrrad t versprochen habe [zu reparieren]1.
A similar construction can also be observed if there are
two levels of embedding. In this case, the number of pos-
sible word orders increases from 3 to 30, 6 of which are
shown in Figure 1. Of the 30 sentences, 7 are clearly un-
grammatical (marked &amp;quot;*&amp;quot;), and 3 are extremely marginal,
but not &amp;quot;flat out&amp;quot; (marked &amp;quot;?*&amp;quot;). The remaining 20 are
acceptable to a greater or lesser degree (marked &amp;quot;ok&amp;quot; or
&amp;quot;?&amp;quot;). No attempt has been made in the linguistic or com-
putational literature to account for this full range of data.
</bodyText>
<sectionHeader confidence="0.976873" genericHeader="method">
2 A Linguistic TAG Analysis
</sectionHeader>
<bodyText confidence="0.999170083333333">
Following [den Besten and Rutten 1989], [Santorini and
ICroch 1990] argue that the third construction, rather
than being a morphological effect of clause union, is
in fact a syntactic phenomenon. The construction de-
rives from two independently motivated syntactic oper-
ations, scrambling and (remnant) extraposition. In this
work, I have implemented this suggestion in a variant of
multi-component TAG (MC-TAG, [Weir 1988]) defined in
[Lee 1991], which I will call SI-TAG. In SI-TAG, as in
MC-TAG, the elementary structures are sets of trees, which
can be initial or auxiliary trees. Contrary to the regular MC-
TAG, in SI-TAG the trees can also be adjoined into trees
</bodyText>
<footnote confidence="0.6872024">
&apos;This work was supported by the following grants: ARO
DAAL 03-89-C-0031; DARPA N00014-90-J-1863; NSF IRI 90-
16592; and Ben Franklin 91S.3078C-1. I would like to thank Bob
Frank and Aravind Joshi for fruitful discussions relating to this
paper.
</footnote>
<bodyText confidence="0.995057416666667">
from the same set (set-internal adjunction). Furthermore,
the trees can be annotated with dominance constraints (or
&amp;quot;links&amp;quot;), which hold between foot nodes of auxiliary trees
and nodes of other trees. These constraints must be met
when the tree set is adjoined.
The following SI-TAG accounts for the German data. We
have 5 elementary sets: for the two verbs that subcategorize
for clauses, versuchen &apos;to try&apos; and versprechen &apos;to promise&apos;,
there are two sets each, representing the center-embedded
and extraposed versions. For reparieren &apos;to repair&apos;, there
is only one set. Sample sets can be found in Figure 2. The
dominance links are shown by dotted lines.
</bodyText>
<figure confidence="0.495933625">
............
VP I VP ip
NPt VP St VP V
versprechen
VP VP
&amp;quot; I
VP S V
versuchen
</figure>
<figureCaption confidence="0.933886">
Figure 2: Sample tree sets for versprechen &apos;to promise&apos;,
and versuchen &apos;to try&apos; with extraposed subordinate clause
</figureCaption>
<bodyText confidence="0.999915538461538">
This analysis rules out those sentences that are ungram-
matical, since the dominance constraints would be circular
and could not be satisfied. Derivations are possible for
the sentences that are acceptable. However, the analysis
also provides derivations for the three sentences that are
extremely marginal, but not ungrammatical. Since these
sentences can be derived by a sequence of 3 licit steps, the
combination of any two of which is also licit, a syntactic
analysis cannot insightfully rule them out. Instead, I would
like to explore a processing-based analysis. A processing
account holds two promises: first, it should account for
the differences in degree among the acceptable sentences;
second, it should rule out the extremely marginal sentences.
</bodyText>
<page confidence="0.806933">
297
</page>
<bodyText confidence="0.9986765">
Weil ich das Fahrrad zu reparieren zu versuchen versprochen habe ok
Weil ich das Fahrrad zu versuchen zu reparieren versprochen habe 7
Weil ich versprochen habe, zu versuchen, das Fahrrad zu reparieren ok
Weil ich zu versuchen versprochen habe, das Fahrrad zu reparieren ?*
Weil ich das Fahrrad zu versuchen versprochen habe zu reparieren
Weil zu versuchen ich das Fahrrad versprochen habe zu reparieren
</bodyText>
<figureCaption confidence="0.966964">
Figure 1: An excerpt from the data
</figureCaption>
<sectionHeader confidence="0.95754" genericHeader="method">
3 A Processing Account Based on
Bottom-Up EPDAs
</sectionHeader>
<bodyText confidence="0.999969131578947">
[Joshi 1990] proposes to model human sentence process-
ing with an Embedded Pushdown Automaton (EPDA), the
automaton that recognizes tree adjoining languages. He
defines the Principle of Partial Interpretation (PPI), which
stipulates that structures are only popped from the EPDA
when they are a properly integrated predicate-argument
structure. Furthermore, it requires that they be popped only
when they are either the root clause or they are the immedi-
ately embedded clause of the previously popped structure.
Before extending this approach to the extraposition cases,
I will recast it in terms of a closely related automaton, the
Bottom-up EPDA (BEPDA)1. The BEPDA consists of a
finite-state control and of a stack of stacks. There are two
types of moves: either an input is read and pushed onto a
new stack on top of the stack of stacks, or a fixed num-
ber of stacks below and above a designated stack on the
stack of stacks is removed and a new symbol is pushed
on the top of the designated stack, which is now the top
stack (an &amp;quot;unwrap&amp;quot; move). The operation of this automaton
will be illustrated on the German center-embedded sentence
N1N2N3V3V2V12. The moves of the BEPDA are shown
in Table 3. The three nouns are read in, and each is pushed
onto a new stack on top of the stack of stacks (steps 1-3).
When V3 is read, it is combined with its nominal argument
and replaces it on the top stack (Step 4). The PPI prevents
V3*° from being popped from the automaton, since Vr is
not the root clause and V2 has not yet been popped. V2 is
then read and pushed onto a new stack (Step 5a). In the
next move (Sb), N2, Vr and V2 (i.e., V2 and its nominal
and clausal complements) are unwrapped, and the com-
bined V2*° is placed on top of the new top stack (the one
formerly containing V3*°). A similar move happens in steps
6a and 6b. Now, Vr can be popped from the automaton
in accordance with the PPI. (Recall that Vr contains its
clausal argument, V2*°, which in turn contains its clausal
argument, V°, so that at this point all input has been pro-
cessed.). In summary, the machine operates as follows: it
creates a new top stack for each input it reads, and unwraps
</bodyText>
<footnote confidence="0.461980142857143">
1I am indebted to Yves Schabes for suggesting the use of the
BEPDA.
21 will abbreviate the lexemes so that for example sentence
(i) will be represented as N1N3 V3 172 V1. As in [Joshi 19901, an
asterisk (e.g., V1*) denotes a verb not lacking any overt nominal
complements. In extension to this notation, a circle (e.g., 140)
denotes a verb not lacking any clausal complements.
</footnote>
<table confidence="0.717139375">
1 [N1
2 [N1 [N2
3 [N1 [N2 [N3
4 [N1 [N2 [V3&amp;quot;
5a [N1 [N2 [173* [V2
5b [N1 [172.°
6a [N1 [V28° [V1
6b [W°
</table>
<figureCaption confidence="0.994417">
Figure 3: BEPDA moves for N1N2 N3 V3 V2 V1
</figureCaption>
<bodyText confidence="0.998235545454545">
whenever and as soon as this is possible.
Using a BEPDA rather than an EPDA has two advan-
tages: first, the data-driven bottom-up automaton repre-
sents a more intuitive model of human sentence processing
than the top-down automaton; second, the grammar that
corresponds to the BEPDA analysis is the TAG grammar
proposed independently on linguistic grounds, as shown in
Figure 43. The unwrap in move 5a/b corresponds to the
adjunction of tree th to tree a3 at the root node of a3
(shown by the arrow), and the unwrap in Move 6a/b to the
adjunction of tree th to tree /32.
</bodyText>
<figure confidence="0.770654">
\ /\
N3 V3 N2 S
/\
S V2
13 2 13
</figure>
<figureCaption confidence="0.999722">
Figure 4: Derivation for German Center-Embedding
</figureCaption>
<bodyText confidence="0.999777333333333">
Let us consider how the BEPDA account can be ex-
tended to the extraposition cases, such as sentence (xxiii),
NI V21/1 N3V3. If we simply use the BEPDA for center-
embedding described above, we get the sequence of moves
in Figure 5. In move 3a, we can unwrap the nominal ar-
gument and verb of the matrix clause, which is popped in
move 3b in accordance with the PPI. In move 3c, the clause
of V2* can also be popped. Then, the remaining noun and
verb are simply read and popped.
If we use any of the metrics proposed in [Joshi 1990]
(such as the sum of the number of moves that input el-
ements are stored in the stack) we predict that sentence
</bodyText>
<footnote confidence="0.9318755">
3In the interest of conciseness, VP nodes and empty categories
have been omitted.
</footnote>
<equation confidence="0.917065">
N1 S
S V1
a3
</equation>
<page confidence="0.99087">
298
</page>
<table confidence="0.995510142857143">
1 [N1 1 [NI [v2*
2 [N1 [V,* 2 [N1 fP/3 Ev; Ev3°
3a [N1 [V; [V1 3 [N1 [N3 [v2°
3b [V; Vi 4a [N1 [N3
3c [V; 4b [N1 [N3
4 [N3 4c [N1 [172&amp;quot;
5 [V; 5 [W°
</table>
<figureCaption confidence="0.975484">
Figure 5: BEPDA moves for N1 V2 Vi. N3 1/3
</figureCaption>
<bodyText confidence="0.973584645833333">
(xxiii) is easier to process than sentence (i), which appears
to be correct. It is easy to see how this analysis extends
to sentence (xvi). Its processing would be predicted to be
the easiest possible, and in fact it is the word order by far
preferred by German speakers.
Now let us turn to the third construction cases. If we
assume the PPI, the only way for a simple TAG to derive
the relevant word orders (e.g., N1 N2 V1 V2) is by an analy-
sis corresponding to verb raising as employed in Dutch.
In Section 2, I mentioned linguistic evidence against a
verb-raising analysis for German. Processing considera-
tions also speak against this approach: we would have to
postulate that German speakers can either use the German
center-embedding strategy, or the Dutch verb-raising strat-
egy. This would mean that German speakers should be as
good at cross-serial dependencies as at center-embedding.
However, in German at levels of embedding beyond 2, the
center-embedding construction is clearly preferred. We are
left with the conclusion that we must go beyond simple
TAGs, as was in fact proposed in Section 2. Therefore, a
simple BEPDA will not handle such cases either, and we
will need an extension of the automaton. This extension
will be explained by way of an example, sentence (iv).
N1, N3, V2 and V3 are read in and placed on new top
stacks (moves 1 — 4a). (Popping V2* would violate the
PPL) Now we unwrap V2* and combine it with V3°. This
yields V: while formerly V2* did not lack any nominal
arguments (since it has none of its own), V2° now has its
clausal complement, but it is lacking a nominal comple-
ment (namely V3&apos;s)4. The reason why N3 and V3 can&apos;t
be unwrapped around V2 is that V3 does not subcatego-
rize for a clausal complement. We then unwrap N3 around
V2° and get V2* ° in step 4c. We can then unwrap and pop
the matrix clause, and then pop Vr in the usual manner.
The grammar corresponding to the BEPDA of Figure 6 is
shown in Figure 7 (the arrows again show the sequence of
adjunctions): we see that the deferred incorporation of N3
corresponds to the use of a tree set for the clause of V3.
Finally, let us consider the extremely marginal sentence
(xxv), Ni N3V2V1V3. Here, the automaton as defined so
far would simply read in the input elements and push them
on separate stacks. At no point can a clause be unwrapped
(because both verb/noun pairs are too far apart), and the
extension proposed to handle the third construction, the
deferred incorporation of nominal arguments, cannot apply,
4This operation can be likened to the operation of function
composition in a categorial framework.
either. The automaton rejects the suing, as desired.
</bodyText>
<sectionHeader confidence="0.916644" genericHeader="conclusions">
4 Current and Future Work
</sectionHeader>
<bodyText confidence="0.999968625">
In summary, the linguistic analysis correctly predicts which
sentences are ungrammatical, and the processing analy-
sis shows promise for correctly ruling out the extremely
marginal sentences, and for accounting for the differences
in acceptability among the remaining sentences. Immediate
further goals include testing the coverage of this approach,
and exploring the relation between the proposed extension
to the BEPDA and the form of the SI-TAG grammar.
</bodyText>
<sectionHeader confidence="0.9759" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.930855684210526">
[Besten and Rutten 19891 Besten, Hans den and Rutten,
Jean, 1989. On verb raising, extraposition and free word
order in Dutch. In Jaspers, Dany (editor), Sentential
complementation and the lexicon, pages 41-56. Foris,
Dordrecht.
[Joshi 1990] Joshi, Aravind K., 1990. Processing Crossed
and Nested Dependencies: an Automaton Perspective on
the Psycholinguistic Results. Language and Cognitive
Processes.
[Lee 1991] Lee, Young-Suk, 1991. Scrambling and the
Adjoined Argument Hypothesis. Thesis Proposal, Uni-
versity of Pennsylvania.
[Santorini and Kroch 19901 Santorini, Beatrice and ICroch,
Anthony, 1990. Remnant Extraposition in German. Un-
published Paper, University of Pennsylvania.
[Weir 1988] Weir, David J., 1988. Characterizing Mildly
Context-Sensitive Grammar Formalisms. PhD thesis,
Department of Computer and Information Science, Uni-
versity of Pennsylvania.
</reference>
<figureCaption confidence="0.971163">
Figure 6: BEPDA moves for N1 N3 V2 V3 V1
</figureCaption>
<figure confidence="0.978750333333333">
.. .......... ...
:
I
V3
S V2
S V,
</figure>
<figureCaption confidence="0.99985">
Figure 7: Derivation for N1 N3 V2 V3 I/1
</figureCaption>
<page confidence="0.995741">
299
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000229">
<title confidence="0.995171">A Linguistic and Computational Analysis of the German &amp;quot;Third Construction&apos;</title>
<author confidence="0.999764">Owen Rambow</author>
<affiliation confidence="0.999946">Department of CIS, University of Pennsylvania</affiliation>
<address confidence="0.999765">Philadelphia, PA 19104, USA</address>
<abstract confidence="0.987273398809524">rambow@linc . cis .upenn.edu 1 The Linguistic Data For German, most transformational lingusitic theories such as GB posit center-embedding as the underlying word order of sentences with embedded clauses: Well ich [das Fahrrad zu reparieren] versprochen habe Because I the bike (acc) to repair promised have Because I promised to repair the bike However, far more common is a construction in which the subordinate clause is extraposed: ich 1 verhabe, [das Fahrrad zu reparieren] addition, a third construction is possible, which has been called the &amp;quot;third construction&amp;quot;, in which only the embedded verb, but its nominal argument has been extraposed: ich das t versprochen habe [zu A similar construction can also be observed if there are two levels of embedding. In this case, the number of possible word orders increases from 3 to 30, 6 of which are shown in Figure 1. Of the 30 sentences, 7 are clearly ungrammatical (marked &amp;quot;*&amp;quot;), and 3 are extremely marginal, but not &amp;quot;flat out&amp;quot; (marked &amp;quot;?*&amp;quot;). The remaining 20 are acceptable to a greater or lesser degree (marked &amp;quot;ok&amp;quot; or &amp;quot;?&amp;quot;). No attempt has been made in the linguistic or computational literature to account for this full range of data. 2 A Linguistic TAG Analysis Following [den Besten and Rutten 1989], [Santorini and ICroch 1990] argue that the third construction, rather than being a morphological effect of clause union, is in fact a syntactic phenomenon. The construction derives from two independently motivated syntactic operations, scrambling and (remnant) extraposition. In this work, I have implemented this suggestion in a variant of multi-component TAG (MC-TAG, [Weir 1988]) defined in [Lee 1991], which I will call SI-TAG. In SI-TAG, as in MC-TAG, the elementary structures are sets of trees, which can be initial or auxiliary trees. Contrary to the regular MC- TAG, in SI-TAG the trees can also be adjoined into trees &apos;This work was supported by the following grants: ARO DAAL 03-89-C-0031; DARPA N00014-90-J-1863; NSF IRI 90- 16592; and Ben Franklin 91S.3078C-1. I would like to thank Bob Frank and Aravind Joshi for fruitful discussions relating to this paper. from the same set (set-internal adjunction). Furthermore, the trees can be annotated with dominance constraints (or &amp;quot;links&amp;quot;), which hold between foot nodes of auxiliary trees and nodes of other trees. These constraints must be met when the tree set is adjoined. The following SI-TAG accounts for the German data. We have 5 elementary sets: for the two verbs that subcategorize clauses, try&apos; and promise&apos;, there are two sets each, representing the center-embedded extraposed versions. For repair&apos;, there is only one set. Sample sets can be found in Figure 2. The dominance links are shown by dotted lines. ............ VP I VP ip NPt VP St VP V versprechen VP VP &amp;quot; I VP S V versuchen 2: Sample tree sets for promise&apos;, try&apos; with extraposed subordinate clause This analysis rules out those sentences that are ungrammatical, since the dominance constraints would be circular and could not be satisfied. Derivations are possible for the sentences that are acceptable. However, the analysis also provides derivations for the three sentences that are extremely marginal, but not ungrammatical. Since these sentences can be derived by a sequence of 3 licit steps, the combination of any two of which is also licit, a syntactic analysis cannot insightfully rule them out. Instead, I would like to explore a processing-based analysis. A processing account holds two promises: first, it should account for the differences in degree among the acceptable sentences; second, it should rule out the extremely marginal sentences. 297 Weil ich das Fahrrad zu reparieren zu versuchen versprochen habe Weil ich das Fahrrad zu versuchen zu reparieren versprochen habe Weil ich versprochen habe, zu versuchen, das Fahrrad zu reparieren Weil ich zu versuchen versprochen habe, das Fahrrad zu reparieren Weil ich das Fahrrad zu versuchen versprochen habe zu reparieren Weil zu versuchen ich das Fahrrad versprochen habe zu reparieren ok 7 ok ?* Figure 1: An excerpt from the data 3 A Processing Account Based on Bottom-Up EPDAs [Joshi 1990] proposes to model human sentence processing with an Embedded Pushdown Automaton (EPDA), the automaton that recognizes tree adjoining languages. He defines the Principle of Partial Interpretation (PPI), which stipulates that structures are only popped from the EPDA when they are a properly integrated predicate-argument structure. Furthermore, it requires that they be popped only when they are either the root clause or they are the immediately embedded clause of the previously popped structure. Before extending this approach to the extraposition cases, I will recast it in terms of a closely related automaton, the EPDA The BEPDA consists of a finite-state control and of a stack of stacks. There are two types of moves: either an input is read and pushed onto a new stack on top of the stack of stacks, or a fixed number of stacks below and above a designated stack on the stack of stacks is removed and a new symbol is pushed on the top of the designated stack, which is now the top stack (an &amp;quot;unwrap&amp;quot; move). The operation of this automaton will be illustrated on the German center-embedded sentence The moves of the BEPDA are shown in Table 3. The three nouns are read in, and each is pushed onto a new stack on top of the stack of stacks (steps 1-3). When V3 is read, it is combined with its nominal argument and replaces it on the top stack (Step 4). The PPI prevents from being popped from the automaton, since Vr is the root clause and not yet been popped. then read and pushed onto a new stack (Step 5a). In the move (Sb), Vr V2 its nominal and clausal complements) are unwrapped, and the comis placed on top of the new top stack (the one containing A similar move happens in steps 6a and 6b. Now, Vr can be popped from the automaton in accordance with the PPI. (Recall that Vr contains its argument, which in turn contains its clausal so that at this point all input has been processed.). In summary, the machine operates as follows: it creates a new top stack for each input it reads, and unwraps am indebted to Yves Schabes for suggesting the use of the BEPDA. will abbreviate the lexemes so that for example sentence will be represented as N1N3 V1. in [Joshi 19901, an (e.g., denotes a verb not lacking any overt nominal In extension to this notation, a circle (e.g., denotes a verb not lacking any clausal complements. 1 [N1 2 [N1 [N2 3 [N1 [N2 [N3 [N2 [V3&amp;quot; [N1 [N2 [V2 [N1 [N1 [V1 6b [W° 3: BEPDA moves for N1N2 N3 V3 V2 whenever and as soon as this is possible. Using a BEPDA rather than an EPDA has two advantages: first, the data-driven bottom-up automaton represents a more intuitive model of human sentence processing than the top-down automaton; second, the grammar that corresponds to the BEPDA analysis is the TAG grammar proposed independently on linguistic grounds, as shown in The unwrap in move 5a/b corresponds to the of tree th to tree a3 at the root node of (shown by the arrow), and the unwrap in Move 6a/b to the of tree th to tree \ /\ V3 /\ 2 Figure 4: Derivation for German Center-Embedding Let us consider how the BEPDA account can be extended to the extraposition cases, such as sentence (xxiii), V21/1 If we simply use the BEPDA for centerembedding described above, we get the sequence of moves in Figure 5. In move 3a, we can unwrap the nominal argument and verb of the matrix clause, which is popped in move 3b in accordance with the PPI. In move 3c, the clause can also be popped. Then, the remaining noun and verb are simply read and popped. If we use any of the metrics proposed in [Joshi 1990] (such as the sum of the number of moves that input elements are stored in the stack) we predict that sentence the interest of conciseness, VP nodes and empty categories have been omitted.</abstract>
<note confidence="0.7652359">S 298 1 [NI Ev; Ev3° [V,* [N1 [V; 3 [N1 [N3 3b [V; Vi [V; 4b [N1 [N3 [N1 5[V; 5: BEPDA moves for V2 Vi. 1/3</note>
<abstract confidence="0.998542929824561">(xxiii) is easier to process than sentence (i), which appears to be correct. It is easy to see how this analysis extends to sentence (xvi). Its processing would be predicted to be the easiest possible, and in fact it is the word order by far preferred by German speakers. Now let us turn to the third construction cases. If we assume the PPI, the only way for a simple TAG to derive relevant word orders (e.g., N2 V1 V2) by an analysis corresponding to verb raising as employed in Dutch. In Section 2, I mentioned linguistic evidence against a verb-raising analysis for German. Processing considerations also speak against this approach: we would have to that German speakers can either German center-embedding strategy, or the Dutch verb-raising strategy. This would mean that German speakers should be as good at cross-serial dependencies as at center-embedding. However, in German at levels of embedding beyond 2, the center-embedding construction is clearly preferred. We are left with the conclusion that we must go beyond simple TAGs, as was in fact proposed in Section 2. Therefore, a simple BEPDA will not handle such cases either, and we will need an extension of the automaton. This extension be explained by way of an example, sentence and are read in and placed on new top (moves 1 — 4a). (Popping would violate the Now we unwrap and combine it with This formerly did not lack any nominal (since it has none of its own), now has its clausal complement, but it is lacking a nominal comple- (namely The reason why N3 and can&apos;t unwrapped around V2 is that does not subcategorize for a clausal complement. We then unwrap N3 around and get ° in step 4c. We can then unwrap and pop the matrix clause, and then pop Vr in the usual manner. The grammar corresponding to the BEPDA of Figure 6 is shown in Figure 7 (the arrows again show the sequence of we see that the deferred incorporation of corresponds to the use of a tree set for the clause of V3. Finally, let us consider the extremely marginal sentence N3V2V1V3. Here, the automaton as defined so far would simply read in the input elements and push them on separate stacks. At no point can a clause be unwrapped (because both verb/noun pairs are too far apart), and the extension proposed to handle the third construction, the deferred incorporation of nominal arguments, cannot apply, operation can be likened to the operation of function composition in a categorial framework. either. The automaton rejects the suing, as desired. 4 Current and Future Work In summary, the linguistic analysis correctly predicts which sentences are ungrammatical, and the processing analysis shows promise for correctly ruling out the extremely marginal sentences, and for accounting for the differences in acceptability among the remaining sentences. Immediate further goals include testing the coverage of this approach, and exploring the relation between the proposed extension to the BEPDA and the form of the SI-TAG grammar.</abstract>
<note confidence="0.929493117647059">References [Besten and Rutten 19891 Besten, Hans den and Rutten, Jean, 1989. On verb raising, extraposition and free word in Dutch. In Jaspers, Dany (editor), and the lexicon, 41-56. Foris, Dordrecht. [Joshi 1990] Joshi, Aravind K., 1990. Processing Crossed and Nested Dependencies: an Automaton Perspective on Psycholinguistic Results. and Cognitive Processes. [Lee 1991] Lee, Young-Suk, 1991. Scrambling and the Adjoined Argument Hypothesis. Thesis Proposal, University of Pennsylvania. [Santorini and Kroch 19901 Santorini, Beatrice and ICroch, Anthony, 1990. Remnant Extraposition in German. Unpublished Paper, University of Pennsylvania. 1988] Weir, David J., 1988. Mildly</note>
<author confidence="0.913662">thesis</author>
<affiliation confidence="0.986349">Department of Computer and Information Science, University of Pennsylvania.</affiliation>
<note confidence="0.200831857142857">6: BEPDA moves for V2 V3 .. .......... ... : I S V, 7: Derivation for N3 V2 V3 299</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>On verb raising, extraposition and free word order</title>
<date>1989</date>
<booktitle>Sentential complementation and the lexicon,</booktitle>
<pages>41--56</pages>
<editor>in Dutch. In Jaspers, Dany (editor),</editor>
<location>Foris, Dordrecht.</location>
<marker>1989</marker>
<rawString> [Besten and Rutten 19891 Besten, Hans den and Rutten, Jean, 1989. On verb raising, extraposition and free word order in Dutch. In Jaspers, Dany (editor), Sentential complementation and the lexicon, pages 41-56. Foris, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aravind K Joshi</author>
</authors>
<title>Processing Crossed and Nested Dependencies: an Automaton Perspective on the Psycholinguistic Results. Language and Cognitive Processes.</title>
<date>1990</date>
<marker>[Joshi 1990]</marker>
<rawString>Joshi, Aravind K., 1990. Processing Crossed and Nested Dependencies: an Automaton Perspective on the Psycholinguistic Results. Language and Cognitive Processes.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Young-Suk Lee</author>
</authors>
<title>Scrambling and the Adjoined Argument Hypothesis. Thesis Proposal,</title>
<date>1991</date>
<booktitle>Santorini and Kroch 19901 Santorini, Beatrice and ICroch,</booktitle>
<institution>University of Pennsylvania.</institution>
<location>Anthony,</location>
<marker>[Lee 1991]</marker>
<rawString>Lee, Young-Suk, 1991. Scrambling and the Adjoined Argument Hypothesis. Thesis Proposal, University of Pennsylvania. [Santorini and Kroch 19901 Santorini, Beatrice and ICroch, Anthony, 1990. Remnant Extraposition in German. Unpublished Paper, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David J Weir</author>
</authors>
<title>Characterizing Mildly Context-Sensitive Grammar Formalisms.</title>
<date>1988</date>
<tech>PhD thesis,</tech>
<institution>Department of Computer and Information Science, University of Pennsylvania.</institution>
<marker>[Weir 1988]</marker>
<rawString>Weir, David J., 1988. Characterizing Mildly Context-Sensitive Grammar Formalisms. PhD thesis, Department of Computer and Information Science, University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>