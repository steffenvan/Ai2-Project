<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003409">
<title confidence="0.608748">
Tense and Aspect Assignment in Narrative Discourse
</title>
<author confidence="0.893069">
David K. Elson and Kathleen R. McKeown
</author>
<affiliation confidence="0.996105">
Department of Computer Science
Columbia University
</affiliation>
<email confidence="0.996473">
Idelson,kathyl@cs.columbia.edu
</email>
<sectionHeader confidence="0.994713" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999960705882353">
We describe a method for assigning English
tense and aspect in a system that realizes sur-
face text for symbolically encoded narratives. Our
testbed is an encoding interface in which proposi-
tions that are attached to a timeline must be real-
ized from several temporal viewpoints. This in-
volves a mapping from a semantic encoding of
time to a set of tense/aspect permutations. The
encoding tool realizes each permutation to give
a readable, precise description of the narrative so
that users can check whether they have correctly
encoded actions and statives in the formal repre-
sentation. Our method selects tenses and aspects
for individual event intervals as well as subinter-
vals (with multiple reference points), quoted and
unquoted speech (which reassign the temporal fo-
cus), and modal events such as conditionals.
</bodyText>
<sectionHeader confidence="0.998783" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999952477272727">
Generation systems that communicate knowledge
about time must select tense and aspect carefully
in their surface realizations. An incorrect assign-
ment can give the erroneous impression that a con-
tinuous action has ended, or that a previous state
is the current reality. In this paper, we consider
English tense and aspect in the generation of nar-
rative discourse, where statives and actions occur
over connected intervals.
We describe two contributions: first, a general
application of theories of tense, aspect and inter-
val logic to a generation context in which we map
temporal relationships to specific tense/aspect se-
lections. Second, we describe an implementation
of this approach in an interactive environment with
a basic sentence planner and realizer. The first re-
sult does not depend on the second.
The purpose of the system is to allow users who
are naive to linguistics and knowledge representa-
tion to create semantic encodings of short stories.
To do this, they construct propositions (predicate-
argument structures) through a graphical, menu-
based interface, and assign them to intervals on a
timeline. Figure 1 shows a session in which the
user is encoding a fable of Aesop. The top-right
panel shows the original fable, and the left-hand
panel shows a graphical timeline with buttons for
constructing new propositions at certain intervals.
The left-hand and bottom-right panels contain au-
tomatically generated text of the encoded story, as
the system understands it, from different points of
view. Users rely on these realizations to check that
they have assigned the formal connections cor-
rectly. The tenses and aspects of these sentences
are a key component of this feedback. We describe
the general purpose of the system, its data model,
and the encoding methodology in a separate paper
(Elson and McKeown, 2010).
The paper is organized as follows: After dis-
cussing related work in Section 2, we describe our
method for selecting tense and aspect for single
events in Section 3. Section 4 follows with more
complex cases involving multiple events and shifts
in temporal focus. We then discuss the results.
</bodyText>
<sectionHeader confidence="0.999856" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.9999085">
There has been intense interest in the interpre-
tation of tense and aspect into a formal under-
standing of the ordering and duration of events.
This work has been in both linguistics (Dowty,
1979; Nerbonne, 1986; Vlach, 1993) and natu-
ral language understanding. Early systems inves-
tigated rule-based approaches to parsing the du-
rations and orderings of events from the tenses
and aspects of their verbs (Hinrichs, 1987; Web-
ber, 1987; Song and Cohen, 1988; Passonneau,
1988). Allen (1984) and Steedman (1995) focus
on distinguishing between achievements (when an
event culminates in a result, such as John builds
a house) and processes (such as walking). More
</bodyText>
<figureCaption confidence="0.999537">
Figure 1: Screenshot of our story encoding interface.
</figureCaption>
<bodyText confidence="0.999754476190476">
recent work has centered on markup languages
for complex temporal information (Mani, 2004)
and corpus-based (statistical) models for predict-
ing temporal relationships on unseen text (Mani et
al., 2006; Lapata and Lascarides, 2006).
Our annotation interface requires a fast realizer
that can be easily integrated into an interactive, on-
line encoding tool. We found that developing a
custom realizer as a module to our Java-based sys-
tem was preferable to integrating a large, general
purpose system such as KPML/Nigel (Matthiessen
and Bateman, 1991) or FUF/SURGE (Elhadad
and Robin, 1996). These realizers, along with Re-
alPro (Lavoie and Rambow, 1997), accept tense as
a parameter, but do not calculate it from a semantic
representation of overlapping time intervals such
as ours (though the Nigel grammar can calculate
tense from speech, event, and reference time or-
derings, discussed below). The statistically trained
FERGUS (Chen et al., 2002) contrasts with our
rule-based approach.
Dorr and Gaasterland (1995) and Grote (1998)
focus on generating temporal connectives, such as
before, based on the relative times and durations of
two events; Gagnon and Lapalme (1996) focus on
temporal adverbials (e.g., when to insert a known
time of day for an event). By comparison, we ex-
tend our approach to cover direct/indirect speech
and the subjunctive/conditional forms, which they
do not report implementing. While our work fo-
cuses on English, Yang and Bateman (2009) de-
scribe a recent system for generating Chinese as-
pect expressions based on a time interval represen-
tation, using KPML as their surface realizer.
Several other projects run tangential to our in-
teractive narrative encoding project. Callaway
and Lester’s STORYBOOK (2002) aims to im-
prove fluency and discourse cohesion in realiz-
ing formally encoded narratives; Ligozat and Zock
(1992) allow users to interactively construct sen-
tences in various temporal scenarios through a
graphical interface.
</bodyText>
<sectionHeader confidence="0.939383" genericHeader="method">
3 Expressing single events
</sectionHeader>
<subsectionHeader confidence="0.997922">
3.1 Temporal knowledge
</subsectionHeader>
<bodyText confidence="0.999992533333333">
The propositions that we aim to realize take the
form of a predicate, one or more arguments, zero
or more attached modifiers (either a negation oper-
ator or an adverbial, which is itself a proposition),
and an assignment in time. Each argument is asso-
ciated with a semantic role (such as Agent or Ex-
periencer), and may include nouns (such as char-
acters) or other propositions. In our implemented
system, the set of predicates available to the an-
notator is adapted from the VerbNet (Kingsbury
and Palmer, 2002) and WordNet (Fellbaum, 1998)
linguistic databanks. These provide both durative
actions and statives (Dowty, 1979); we will refer
to both as events as they occur over intervals. For
example, here are an action and a stative:
</bodyText>
<equation confidence="0.9890185">
walk(Mary, store, 2, 6) (1)
hungry(Julia, 1,∞) (2)
</equation>
<bodyText confidence="0.997471473684211">
The latter two arguments in (1) refer to time
states in a totally ordered sequence; Mary starts
walking to the store at state 2 and finishes walking
at state 6. (2) begins at state 1, but is unbounded
(Julia never ceases being hungry). While this pa-
per does not address the use of reference times
(such as equating a state to 6:00 or yesterday), this
is an area of ongoing work.
(1) and (2), depending on the situation, can be
realized in several aspects and tenses. We adapt
and extend Reichenbach’s (1947) famous system
of symbols for distinguishing between simple and
progressive aspect. Reichenbach identifies three
points that define the temporal position of the
event: the event time E, the speech time S, and
a reference time R which may or may not be in-
dicated by a temporal adverbial. The total order-
ing between these times dictates the appropriate
aspect. For example, the simple past John laughed
has the relation E &lt; S. R = E because there is
no separate reference time involved. The past per-
fect John had laughed [by the end of the play] has
the relation E &lt; R &lt; S, in that it describe “the
past of the past”, with the nearer “past” being R
(the end of the play). R can be seen as the tempo-
ral focus of the sentence.
As Reichenbach does not address events with
intervals, we redefine E as the transition (E1..E2)
attached to the proposition (for example, (2,6)
for Mary’s walk). This definition deliberately as-
sumes that no event ever occurs over a single “in-
stant” of time. The perception of an instantaneous
event, when it is needed, is instead created by di-
lating R into an interval large enough to contain
the entire event, as in Dowty (1979).
We also distinguish between two generation
modes: realizing the story as a complete discourse
(narration mode) and describing the content of a
single state or interval (snapshot mode). Our sys-
tem supports both modes differently. In discourse
mode, we realize the story as if all events occur be-
fore the speech time S, which is the style of most
literary fiction. (We shall see that this does not
preclude the use of the future tense.) In snapshot
mode, speech time is concurrent with reference
time so that the same events are realized as though
they are happening “now.” The system uses this
mode to allow annotators to inspect and edit what
occurs at any point in the story. In Figure 1, for in-
stance, the lion’s watching of the bull is realized as
both a present, continuing event in snapshot mode
(the lion continues to watch the bull) and narrated
as a past, continuing event (the lion was watching
the bull). In both cases, we aim to precisely trans-
late the propositions and their temporal relation-
ships into text, even if the results are not elegant
rhetoric, so that annotators can see how they have
</bodyText>
<table confidence="0.998487636363636">
Diagram Relations Perspective
E 1 E 2 R &lt; E1 Before
R
E 1 E 2 R = E1 Begin
R R&lt;E2
E 1 E 2 E1 &lt; R During
R R &lt; E2
E 1 E 2 R = E2 Finish
R R &gt; E1
E 1 E 2 R &gt; E2 After
R
</table>
<tableCaption confidence="0.947144">
Table 1: Perspective assignment for viewing an
event from a reference state.
</tableCaption>
<bodyText confidence="0.977733666666667">
formally encoded the story. In the remainder of
this section, we describe our method for assigning
tenses and aspects to propositions such as these.
</bodyText>
<subsectionHeader confidence="0.999512">
3.2 Reference state
</subsectionHeader>
<bodyText confidence="0.999943233333333">
In both snapshot and narration modes, we often
need to render the events that occur at some ref-
erence state R. We would like to know, for in-
stance, what is happening now, or what happened
at 6:00 yesterday evening. The tense and aspect
depend on the perspective of the reference state
on the event, which can be bounded or unbounded.
The two-step process for this scenario is to deter-
mine the correct perspective, then pick the tense
and aspect class that best communicates it.
We define the set of possible perspec-
tives to follow Allen (1983), who describes
seven relationships between two intervals: be-
fore/after, meets/met by, overlaps/overlapped by,
starts/started by, during/contains, finishes/finished
by, and equals. Not all of these map to a relation-
ship between a single reference point and an event
interval. Table 1 maps each possible interaction
between E and R to a perspective, for both
bounded and unbounded events, including the
defining relationships for each interaction. A dia-
mond for E1 indicates at or before, i.e., the event
is either anteriorly unbounded (E1 = −∞) or
beginning at a state prior to R and E2. Similarly,
a diamond for E2 indicates at or after.
Once the perspective is determined, covering
Reichenbach’s E and R, speech time S is deter-
mined by the generation mode. Following the
guidelines of Reichenbach and Dowty, we then as-
sign a tense for each perspective/speech time per-
</bodyText>
<table confidence="0.999263636363636">
Perspective Generation mode English tense System’s construction Example
After Future Speech Past perfect had {PAST PARTICIPLE} She had walked.
Present Speech Present perfect has/have {PAST PARTICIPLE} She has walked.
Past Speech Future perfect will have {PAST PARTICIPLE} She will have walked.
Modal Infinitive to have {PAST PARTICIPLE} To have walked.
Finish Future Speech “Finished” stopped {PROGRESSIVE} She stopped walking.
Present Speech “Finishes” stops {PROGRESSIVE} She stops walking.
Past Speech “Will finish” will stop {PROGRESSIVE} She will stop walking.
Modal Infinitive to stop {PROGRESSIVE} To stop walking.
During Future Speech Past progressive was/were {PROGRESSIVE} She was walking.
Present Speech Present pro- am/is/are {PROGRESSIVE} She is walking.
Past Speech gressive will be {PROGRESSIVE} She will be walking.
Modal Infinitive Future progres- to be {PROGRESSIVE} To be walking.
sive
During- Future Speech Past perfect had been {PROGRESSIVE} She had been walking.
After Present Speech progressive has/have been {PROGRESSIVE} She has been walking.
Past Speech Present perfect will have been {PROGRESSIVE} She will have been
Modal Infinitive progressive to has/have been {PROGRESSIVE} walking.
Future perfect To have been walking.
progressive
Begin Future Speech “Began” began {INFINITIVE} She began to walk.
Present Speech “Begins” begins {INFINITIVE} She begins to walk.
Past Speech “Will begin” will begin {INFINITIVE} She will begin to walk.
Modal Infinitive to begin {PROGRESSIVE} To begin walking.
Contains Future Speech Simple past {SIMPLE PAST} She walked.
Present Speech Simple present {SIMPLE PRESENT} She walks.
Past speech Simple future will {INFINITIVE} She will walk.
Modal Infinitive {INFINITIVE} To walk.
Before Future Speech “Posterior” was/were going {INFINITIVE} She was going to walk.
Present Speech Future am/is/are going {INFINITIVE} She is going to walk.
Past Speech Future-of- will be going {INFINITIVE} She will be going to
Modal Infinitive future to be going {INFINITIVE} walk.
To be going to walk.
</table>
<tableCaption confidence="0.8714325">
Table 2: Tense/aspect assignment and realizer constructions for describing an action event from a partic-
ular perspective and speech time. “Progressive” means “present participle.”
</tableCaption>
<bodyText confidence="0.99966619047619">
mutation in Table 2. Not all permutations map to
actual English tenses. Narration mode is shown as
Future Speech, in that S is in the future with re-
spect to all events in the timeline. (This is the case
even if E is unbounded, with E2 = ∞.) Snap-
shot mode is realized as Present Speech, in that
R = S. The fourth column indicates the syntac-
tic construction with which our system realizes the
permutation. Each is a sequence of tokens that are
either cue words (began, stopped, etc.) or conjuga-
tions of the predicate’s verb. These constructions
emphasize precision over fluency.
As we have noted, theorists have distinguished
between “statives” that are descriptive (John was
hungry), “achievement” actions that culminate in
a state change (John built the house), and “activi-
ties” that are more continuous and divisible (John
read a book for an hour) (Dowty, 1979). Prior
work in temporal connectives has taken advantage
of lexical information to determine the correct sit-
uation and assign aspect appropriately (Moens and
Steedman, 1988; Dorr and Gaasterland, 1995). In
our case, we only distinguish between actions and
statives, based on information from WordNet and
VerbNet. We use a separate table for statives; it is
similar to Table 2, except the constructions replace
verb conjugations with insertions of be, been, be-
ing, was, were, felt, and so on (with the latter ap-
plying to affective states). We do not currently
distinguish between achievements and activities in
selecting tense and aspect, except that the anno-
tator is tasked with “manually” indicating a new
state when an event culminates in one (e.g., The
house was complete). Recognizing an achieve-
ment action can benefit lexical choice (better to
say John finished building the house than John
stopped) and content selection for the discourse as
a whole (the house’s completion is implied by fin-
ished and does not need to be stated separately).
To continue our running examples, suppose
propositions (1) and (2) were viewed as a snap-
shot from state R = 2. Table 1 indicates Begin
</bodyText>
<table confidence="0.999613380952381">
Diagram Relations Perspective
E 1 E 2 R1 ≥ E2 After
R 1 R 2
E 1 E 2
Ri R 2
E 1 E 2 R1 &gt; E1 Finish
R 1 R 2 E2 &gt; R1
R2 &gt; E2
E 1 E 2 R1 ≤ E1 Contains
R 1 R 2 R2 ≥ E2
E 1 E 2
R 1 R 2
E 1 E 2 E1 &lt; R1 During
R 1 R 2 E2 &gt; R2
E 1 E 2 R1 &lt; E1 Begin
R 1 R 2 R2 &gt; E1
E2 &gt; R2
E 1 E 2 E1 ≥ R2 Before
R 1 R 2
E 1 E 2
R 1 R 2
</table>
<tableCaption confidence="0.9739825">
Table 3: Perspective assignment for describing an
event from an assigned perspective.
</tableCaption>
<bodyText confidence="0.998326333333333">
to be the perspective for (1), since E1 = R, and
Table 2 calls for a “new” tense/aspect permutation
that means “begins at the present time.” When the
appropriate construction is inserted into the over-
all syntax for walk(Agent, Destination), which we
derive from the VerbNet frame for walk, the result
is Mary begins to walk to the store; similarly, (2) is
realized as Julia is hungry via the During perspec-
tive. Narration mode invokes past-tense verbs.
</bodyText>
<subsectionHeader confidence="0.994976">
3.3 Reference interval
</subsectionHeader>
<bodyText confidence="0.997677642857143">
Just as events occur over intervals, rather than sin-
gle points, so too can reference times. One may
need to express what occurred when “Julia entered
the room” (a non-instantaneous action) or “yes-
terday evening.” Our system allows annotators to
view intervals in snapshot mode to get a sense of
what happens over a certain time span.
The semantics of reference intervals have been
studied as extensions to Reichenbach’s point ap-
proach. Dowty (1979, p.152), for example, posits
that the progressive fits only if the reference in-
terval is completely contained within the event in-
terval. Following this, we construct an alternate
lookup table (Table 3) for assigning the perspec-
</bodyText>
<tableCaption confidence="0.8707315">
Table 4: Perspective assignment if event and ref-
erence intervals are unbounded in like directions.
</tableCaption>
<bodyText confidence="0.9994354">
tive of an event from a reference interval. Table
2 then applies in the same manner. In snapshot
mode, the speech time 5 also occurs over an inter-
val (namely, R), and Present Speech is still used.
In narration mode, 5 is assumed to be a point fol-
lowing all event and reference intervals. In our
running example, narrating the interval (1,7) re-
sults in Mary walked to the store and Julia began
to be hungry, using the Contains and Begin per-
spectives respectively.
The notion of an unbounded reference interval,
while unusual, corresponds to a typical perspec-
tive if the event is either bounded or unbounded
in the opposite direction. These scenarios are il-
lustrated in Table 3. Less intuitive are the cases
where event and reference intervals are unbounded
in the same direction. Perspective assignments for
these instances are described in Table 4 and em-
phasize the bounded end of R. These situations
occur rarely in this generation context.
</bodyText>
<subsectionHeader confidence="0.982918">
3.4 Event Subintervals
</subsectionHeader>
<bodyText confidence="0.9998902">
We do not always want to refer to events in their
entirety. We may instead wish to refer to the be-
ginning, middle or end of an event, no matter when
it occurs with respect to the reference time. This
invokes a second reference point in the same inter-
val (Comrie, 1985, p.128), delimiting a subinter-
val. Consider John searches for his glasses versus
John continues to search for his glasses– both in-
dicate an ongoing process, but the latter implies a
subinterval during which time, we are expected to
know, John was already looking for his glasses.
Our handling of subintervals falls along four
alternatives that depend on the interval E1..E2,
the reference R and the subinterval Ei..E2 of E,
where Ei ≥ E1 and E2 ≤ E2.
</bodyText>
<equation confidence="0.944432076923077">
Diagram
Ei
Ri
Relations
E2 &gt; R2
E1 = −∞
R1 = −∞
R2 &gt; E2
E1 = −∞
R1 = −∞
R1 &gt; E1
E2 = ∞
R2 = ∞
</equation>
<figure confidence="0.726683071428572">
Perspective
During (a priori)
After
Contains
E 2
R 2
E 2
R 2
E1 &gt; R1
E2 = ∞
R2 = ∞
Before
Rl
El
</figure>
<listItem confidence="0.96316803125">
1. During-After. If E0 is not a final subinter-
val of E (E02 &lt; E2), and R = E02 or R is a
subinterval of E that is met by E0 (R1 = E02),
the perspective of E0 is defined as During-
After. In Table 2, this invokes the perfect-
progressive tense. For example, viewing ex-
ample (1) with E0 = (2,4) from R = 4 in
narration mode (Future Speech) would yield
Mary had been walking to the store.
2. Start. Otherwise, if E0 is an initial subin-
terval of E (E01 = E1 and E02 &lt; E2), the
perspective is defined as Start. These rows
are omitted from Table 2 for space reasons,
but the construction for this case reassigns the
perspective to that between R and E0. Our
realizer reassigns the verb predicate to begin
(or become for statives) with a plan to render
its only argument, the original proposition, in
the infinitive tense. For example, narrating
(2) with E0 =(1,2) from R = 3 would yield
Julia had become hungry.
3. Continue. Otherwise, and similarly, if E
strictly contains E0 (E01 &gt; E1 and E02 &lt; E2),
we assign the perspective Continue. To real-
ize this, we reassign the perspective to that
between R and E0, and reassign the verb
predicate to continue (or was still for statives)
with a plan to render its only argument, the
original proposition, in the infinitive.
4. End. Otherwise, if E0 is a final subinterval
of E (E01 &gt; E1 and E02 = E2), we assign the
perspective End. To realize this, we reassign
</listItem>
<bodyText confidence="0.7623644">
the perspective to that between R and E0, and
reassign the verb predicate to stop (or finish
for cumulative achievements). Similarly, the
predicate’s argument is the original proposi-
tion rendered in the infinitive.
</bodyText>
<sectionHeader confidence="0.879945" genericHeader="method">
4 Alternate timelines and modalities
</sectionHeader>
<bodyText confidence="0.982482">
This section covers more complex situations in-
volving alternate timelines– the feature of our rep-
resentation by which a proposition in the main
timeline can refer to a second frame of time. Other
models of time have supported similar encapsula-
tions (Crouch and Pulman, 1993; Mani and Puste-
jovsky, 2004). The alternate timeline can contain
references to actual events or modal events (imag-
ined, obligated, desired, planned, etc.) in the past
the future with respect to its point of attachment on
</bodyText>
<figureCaption confidence="0.872991">
Figure 2: Schematic of a speech act attaching to
a alternate timeline with a hypothetical action. R0
and Espeech are attachment points.
</figureCaption>
<bodyText confidence="0.9944414">
the main timeline. This is primarily used in prac-
tice for modeling dialogue acts, but it can also be
used to place real events at uncertain time states
in the past (e.g., the present perfect is used in a
reference story being encoded).
</bodyText>
<subsectionHeader confidence="0.998417">
4.1 Reassigning Temporal Focus
</subsectionHeader>
<bodyText confidence="0.999948166666666">
Ogihara (1995) describes dialogue acts involving
changes in temporal focus as “double-access sen-
tences.” We now consider a method for planning
such sentences in such a way that the refocusing
of time (the reassignment of R into a new con-
text) is clear, even if it means changing tense and
aspect mid-sentence. Suppose Mary were to de-
clare that she would buy some eggs because of
Julia’s hunger, but before she returned from the
store, Julia filled up on snacks. If this speech act
is described by a character later in the story, then
we need to carefully separate what is known to
Mary at the time of her speech from what is later
known at R by the teller of the episode. Mary
sees her purchase of eggs as a possible future, even
though it may have already happened by the point
of retelling, and Mary does not know that Julia’s
hunger is to end before long.
Following Hornstein’s treatment of these sce-
narios (Hornstein, 1990), we attach R0, the ref-
erence time for Mary’s statement (in an alternate
timeline), to Espeech, the event of her speaking (in
the main timeline). The act of buying eggs is a
hypothetical event E0buy that falls after R0 on the
alternate (modal) timeline. S is not reassigned.
Figure 2 shows both timelines for this example.
The main timeline is shown on top; Mary’s speech
act is below. The attachment point on the main
timeline is, in this case, the speech event Espeech;
the attachment point on an alternate timeline is al-
</bodyText>
<figure confidence="0.998363666666667">
S
R
reality
E speech
E hunger
E′hunger
alternate
R′
E′buy
</figure>
<bodyText confidence="0.972937428571429">
ways R0. The placement of R, the main refer-
ence point, is not affected by the alternate time-
line. Real events, such as Julia’s hunger, can be
invoked in the alternate timeline (as drawn with a
vertical line from Ehunger to an E0hunger without
an E02 known to Mary) but they must preserve their
order from the main timeline.
The tense assignment for the event intervals in
the alternate timeline then proceeds as normal,
with R0 substituting for R. The hypothetical “buy”
event is seen in Before perspective, but past tense
(Future Speech), giving the “posterior” (future-of-
a-past) tense. Julia’s hunger is seen as During as
per Table 1. Further, we assert that connectives
such as Because do not alter R (or in this situation,
R0), and that the E0buy is connected to E0hunger
with a causality edge. (Annotators can indicate
connectives between events for causality, motiva-
tion and other features of narrative cohesion.)
The result is: Mary had said that she
was going to buy eggs because Julia was hungry.
The subordinate clause following that sees E0buy
in the future, and E0hunger as ongoing rather than
in the past. It is appropriately ambiguous in both
the symbolic and rendered forms whether E0buy oc-
curs at all, and if so, whether it occurs before, dur-
ing or after R. A discourse planner would have
the responsibility of pointing out Mary’s mistaken
assumption about the duration of Julia’s hunger.
We assign tense and aspect for quoted speech
differently than for unquoted speech. Instead of
holding 5 fixed, 50 is assigned to R0 at the attach-
ment point of the alternate timeline (the “present
time” for the speech act). If future hypothetical
events are present, they invoke the Past Speech
constructions in Table 2 that have not been used
by either narration or snapshot mode. The content
of the quoted speech then operates totally indepen-
dently of the speech action, since both R0 and 50
are detached: Mary said/says/was saying, “I am
going to buy eggs because Julia is hungry.”
The focus of the sentence can be subsequently
reassigned to deeper nested timelines as necessary
(attaching E0 to R00, and so on). Although the
above example uses subordinate clauses, we can
use this nesting technique to construct compos-
ite tenses such as those enumerated by Halliday
(1976). To this end, we conjugate the Modal In-
finitive construction in Table 2 for each alternate
timeline. For instance, Halliday’s complex form
“present in past in future in past in future” (as in
will have been going to have been taking) can be
generated with four timelines in a chain that in-
voke, in order and with Past Speech, the After, Be-
fore, After and During perspectives. There are four
Rs, all but the main one attached to a previous E.
</bodyText>
<subsectionHeader confidence="0.999303">
4.2 Subjunctives and Conditionals
</subsectionHeader>
<bodyText confidence="0.989304827160494">
We finally consider tense and aspect in the case of
subjunctive and conditional statements (if-thens),
which can appear in alternate timelines. The re-
lationship between an if clause and a then clause
is not the same as the relationship between two
clauses joined by because or when. The then
clause– or set of clauses– is predicated on the truth
of the if clause. As linguists have noted (Horn-
stein, 1990, p.74), the if clause serves as an adver-
bial modifier, which has the effect of moving for-
ward the reference point to the last of the if event
intervals (provided that the if refers to a hypotheti-
cal future). Consider the sentence: If John were to
fly to Tokyo, he would have booked a hotel. A cor-
rect model would place E0book before E0fly on an
alternate timeline, with E0fly as the if. Since were
to fly is a hypothetical future, R0 &lt; E0fly. Dur-
ing regeneration, we set R0 to E0fly after rendering
If John were to fly to Tokyo, because we begin to
assume that this event transpired. If R0 is left un-
changed, it may be erroneously left before E0book:
Then he would be going to book a hotel.
Our encoding interface allows users to mark one
or more events in an alternate timeline as if events.
If at least one event is marked, all if events are ren-
dered in the subjunctive mood, and the remainder
are rendered in the conditional. For the if clauses
that follow R0, 50 and R0 itself are reassigned to
the interval for each clause in turn. R0 and 50 then
remain at the latest if interval (if it is after the origi-
nal R0) for purposes of rendering the then clauses.
In our surface realizer, auxiliary words were and
would are combined with the Modal Infinitive con-
structions in Table 2 for events during or following
the original attachment point.
As an example, consider an alternate timeline
with two statives whose start and end points are the
same: Julia is hungry and Julia is unhappy. The
former is marked if. Semantically, we are saying
that hungry(Julia)→unhappy(Julia).
If R0 were within these intervals, the rendering
would be: If Julia is hungry, then she is unhappy
(Contains/Present Speech for both clauses). If
R0 were prior to these intervals, the rendering
would be: If Julia were to be hungry, then
she would be unhappy. This reassigns R&apos; to
Ehungry, using were as a futurative and would
to indicate a conditional. Because R&apos; and S&apos; are
set to Ehungry, the perspective on both clauses
remains Contains/Present Speech. Finally, if both
intervals are before R&apos;, describing Julia’s previous
emotional states, we avoid shifting R&apos; and S&apos;
backward: If Julia had been hungry, then she had
been unhappy (After perspective, Future Speech
for both statives).
The algorithm is the same for event intervals.
Take (1) and a prior event where Mary runs out of
eggs:
runOut(Mary, eggs, 0,1) (3)
Suppose they are in an alternate timeline with
attachment point 0&apos; and (1) marked if. We be-
gin by realizing Mary’s walk as an if clause: If
Mary were to walk to the store. We reassign R&apos;
to Ewalk, (2,6), which diverts the perception of
(3) from Begins to After: She would have run out
of eggs. Conversely, suppose the conditional re-
lationship were reversed, with (3) as the only if
action. If the attachment point is 3&apos;, we realize (3)
first in the After perspective, as R&apos; does not shift
backward: If Mary had run out of eggs. The re-
mainder is rendered from the During perspective:
She would be walking to the store. Note that in
casual conversation, we might expect a speaker at
R = 3 to use the past simple: If Mary ran out
of eggs, she would be walking to the store. In this
case, the speaker is attaching the alternate timeline
at a reference interval that subsumes (3), invoking
the Contains perspective by casting a net around
the past. We ask our annotators to select the best
attachment point manually; automatically making
this choice is beyond the scope of this paper.
</bodyText>
<sectionHeader confidence="0.999745" genericHeader="method">
5 Discussion
</sectionHeader>
<bodyText confidence="0.999992073170732">
As we mentioned earlier, we are describing two
separate methods with a modular relationship to
one another. The first is an abstract mapping from
a conceptual representation of time in a narrative,
including interval and modal logic, to a set of 11
perspectives, including the 7 listed in Table 2 and
the 4 introduced in Section 3.4. These 11 are
crossed with three scenarios for speech time to
give a total of 33 tense/aspect permutations. We
also use an infinitive form for each perspective.
One may take these results and map them from
other time representations with similar specifica-
tions.
The second result is a set of syntactic construc-
tions for realizing these permutations in our story
encoding interface. Our focus here, as we have
noted, is not fluency, but a surface-level render-
ing that reflects the relationships (and, at times,
the ambiguities) present in the conceptual encod-
ing. We consider variations in modality, such as
an indicative reading as opposed to a conditional
or subjunctive reading, to be at the level of the re-
alizer and not another class of tenses.
We have run a collection project with our en-
coding interface and can report success in the
tool’s usability (Elson and McKeown, 2009). Two
annotators each encoded 20 fables into the for-
mal representation, with their only exposure to the
semantic encodings being through the reference
text generator (as in Figure 1). Both annotators
became comfortable with the tool after a period
of training; in surveys that they completed after
each task, they gave Likert-scale usability scores
of 4.25 and 4.30 (averaged over 20 tasks, with
5 meaning “easiest to use”). These scores are
not specific to the generation component, but they
suggest that annotators could derive satisfactory
tenses from their semantic structures. The most
frequently cited deficiency in the model in terms
of time was the inability to assign reference times
to states and intervals (such as the next morning).
</bodyText>
<sectionHeader confidence="0.996124" genericHeader="conclusions">
6 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.999982105263158">
It has always been the goal in surface realization
to generate sentences from a purely semantic rep-
resentation. Our approach to the generation of
tense and aspect from temporal intervals takes us
closer to that goal. We have applied prior work in
linguistics and interval theory and tested our ap-
proach in an interactive narrative encoding tool.
Our method handles reference intervals and event
intervals, bounded and unbounded, and extends
into subintervals, modal events, conditionals, and
direct and indirect speech where the temporal fo-
cus shifts.
In the future, we will investigate extensions
to the current model, including temporal adver-
bials (which explain the relationship between two
events), reference times, habitual events, achieve-
ments, and discourse-level issues such as prevent-
ing ambiguity as to whether adjacent sentences oc-
cur sequentially (Nerbonne, 1986; Vlach, 1993).
</bodyText>
<sectionHeader confidence="0.997169" genericHeader="acknowledgments">
7 Acknowledgments
</sectionHeader>
<bodyText confidence="0.999902666666667">
This material is based on research supported in
part by the U.S. National Science Foundation
(NSF) under IIS-0935360. Any opinions, findings
and conclusions or recommendations expressed in
this material are those of the authors and do not
necessarily reflect the views of the NSF.
</bodyText>
<sectionHeader confidence="0.997851" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999888448818898">
James F. Allen. 1983. Maintaining knowledge about
temporal intervals. Communications of the ACM,
26(11):832–843.
James F. Allen. 1984. Towards a general theory of
action and time. Artificial Intelligence, 23(2):123–
154.
Charles Callaway and James Lester. 2002. Nar-
rative prose generation. Artificial Intelligence,
139(2):213–252.
John Chen, Srinivas Bangalore, Owen Rambow, and
Marilyn Walker. 2002. Towards automatic gen-
eration of natural language generation systems. In
Proceedings of the 19th International Conference on
Computational Linguistics (COLING 2002), Taipei,
Taiwan.
Bernard Comrie. 1985. Tense. Cambridge University
Press.
Richard Crouch and Stephen Pulman. 1993. Time and
modality in a natural language interface to a plan-
ning system. Artificial Intelligence, pages 265–304.
Bonnie J. Dorr and Terry Gaasterland. 1995. Select-
ing tense, aspect, and connecting words in language
generation. In Proceedings of the Fourteenth Inter-
national Joint Conference on Artificial Intelligence
(IJCAI-95), Montreal, Canada.
David R. Dowty. 1979. Word Meaning and Montague
Grammar. D. Reidel, Dordrecht.
Michael Elhadad and Jacques Robin. 1996. An
overview of surge: a reusable comprehensive syn-
tactic realization component. In INLG ’96 Demon-
strations and Posters, pages 1–4, Brighton, UK.
Eighth International Natural Language Generation
Workshop.
David K. Elson and Kathleen R. McKeown. 2009. A
tool for deep semantic encoding of narrative texts.
In Proceedings of the ACL-IJCNLP 2009 Software
Demonstrations, pages 9–12, Suntec, Singapore.
David K. Elson and Kathleen R. McKeown. 2010.
Building a bank of semantically encoded narratives.
In Proceedings of the Seventh International Confer-
ence on Language Resources and Evaluation (LREC
2010), Malta.
Christiane Fellbaum. 1998. WordNet: An Electronic
Lexical Database. MIT Press, Cambridge, MA.
Michel Gagnon and Guy Lapalme. 1996. From con-
ceptual time to linguistic time. Computational Lin-
guistics, 22(1):91–127.
Brigitte Grote. 1998. Representing temporal discourse
markers for generation purposes. In Proceedings
of the Discourse Relations and Discourse Markers
Workshop, pages 22–28, Montreal, Canada.
M.A.K. Halliday. 1976. The english verbal group. In
G. R. Kress, editor, Halliday: System and Function
in Language. Oxford University Press, London.
Erhard W. Hinrichs. 1987. A compositional semantics
of temporal expressions in english. In Proceedings
of the 25th Annual Conference of the Association for
Computational Linguistics (ACL-87), Stanford, CA.
Norbert Hornstein. 1990. As Time Goes By: Tense and
Universal Grammar. MIT Press, Cambridge, MA.
Paul Kingsbury and Martha Palmer. 2002. From tree-
bank to propbank. In Proceedings of the Third In-
ternational Conference on Language Resources and
Evaluation (LREC-02), Canary Islands, Spain.
Mirella Lapata and Alex Lascarides. 2006. Learning
sentence-internal temporal relations. Journal of Ar-
tificial Intelligence Research, 27:85–117.
Benoit Lavoie and Owen Rambow. 1997. A fast and
portable realizer for text generation systems. In Pro-
ceedings of the Fifth Conference on Applied Natural
Language Processing, Washington, DC.
Gerard Ligozat and Michael Zock. 1992. How to vi-
sualize time, tense and aspect? In Proceedings of
the 14th International Conference on Computational
Linguistics (COLING ’92), pages 475–482, Nantes,
France.
Inderjeet Mani and James Pustejovsky. 2004. Tem-
poral discourse models for narrative structure. In
Proceedings of the ACL Workshop on Discourse An-
notation, Barcelona, Spain.
Inderjeet Mani, Marc Verhagen, Ben Wellner,
Chong Min Lee, and James Pustejovsky. 2006. Ma-
chine learning of temporal relations. In Proceedings
of COLING/ACL 2006, pages 753–760, Sydney,
Australia.
Inderjeet Mani. 2004. Recent developments in tempo-
ral information extraction. In Proceedings of the In-
ternational Conference on Recent Advances in Nat-
ural Language Processing (RANLP ’03), pages 45–
60, Borovets, Bulgaria.
Christian M. I. M. Matthiessen and John A. Bateman.
1991. Text generation and systemic-functional lin-
guistics: experiences from English and Japanese.
Frances Pinter Publishers and St. Martin’s Press,
London and New York.
Marc Moens and Mark Steedman. 1988. Temporal on-
tology and temporal reference. Computational Lin-
guistics, 14(2):15–28.
John Nerbonne. 1986. Reference time and time in nar-
ration. Linguistics and Philosophy, 9(1):83–95.
Toshiyuki Ogihara. 1995. Double-access sentences
and reference to states. Natural Language Seman-
tics, 3:177–210.
Rebecca Passonneau. 1988. A computational model
of the semantics of tense and aspect. Computational
Linguistics, 14(2):44–60.
Hans Reichenbach. 1947. Elements of Symbolic Logic.
MacMillan, London.
Fei Song and Robin Cohen. 1988. The interpretation
of temporal relations in narrative. In Proceedings of
the Seventh National Conference on Artificial Intel-
ligence (AAAI-88), St. Paul, Minnesota.
Mark Steedman. 1995. Dynamic semantics for tense
and aspect. In The 1995 International Joint Confer-
ence on AI (IJCAI-95), Montreal, Quebec, Canada.
Frank Vlach. 1993. Temporal adverbials, tenses and
the perfect. Linguistics and Philosophy, 16(3):231–
283.
Bonnie Lynn Webber. 1987. The interpretation of
tense in discourse. In Proceedings of the 25th An-
nual Meeting of the Association for Computational
Linguistics (ACL-87), pages 147–154, Stanford, CA.
Guowen Yang and John Bateman. 2009. The chinese
aspect generation based on aspect selection func-
tions. In Proceedings of the 47th Annual Meeting
of the ACL and the 4th IJCNLP of the AFNLP (ACL-
IJCNLP 2009), Singapore.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.560761">
<title confidence="0.999911">Tense and Aspect Assignment in Narrative Discourse</title>
<author confidence="0.996233">K Elson R</author>
<affiliation confidence="0.999761">Department of Computer</affiliation>
<address confidence="0.637376">Columbia</address>
<abstract confidence="0.992694166666667">We describe a method for assigning English tense and aspect in a system that realizes surface text for symbolically encoded narratives. Our testbed is an encoding interface in which propositions that are attached to a timeline must be realized from several temporal viewpoints. This involves a mapping from a semantic encoding of time to a set of tense/aspect permutations. The encoding tool realizes each permutation to give a readable, precise description of the narrative so that users can check whether they have correctly encoded actions and statives in the formal representation. Our method selects tenses and aspects for individual event intervals as well as subintervals (with multiple reference points), quoted and unquoted speech (which reassign the temporal focus), and modal events such as conditionals.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>James F Allen</author>
</authors>
<title>Maintaining knowledge about temporal intervals.</title>
<date>1983</date>
<journal>Communications of the ACM,</journal>
<volume>26</volume>
<issue>11</issue>
<contexts>
<context position="10376" citStr="Allen (1983)" startWordPosition="1737" endWordPosition="1738">enses and aspects to propositions such as these. 3.2 Reference state In both snapshot and narration modes, we often need to render the events that occur at some reference state R. We would like to know, for instance, what is happening now, or what happened at 6:00 yesterday evening. The tense and aspect depend on the perspective of the reference state on the event, which can be bounded or unbounded. The two-step process for this scenario is to determine the correct perspective, then pick the tense and aspect class that best communicates it. We define the set of possible perspectives to follow Allen (1983), who describes seven relationships between two intervals: before/after, meets/met by, overlaps/overlapped by, starts/started by, during/contains, finishes/finished by, and equals. Not all of these map to a relationship between a single reference point and an event interval. Table 1 maps each possible interaction between E and R to a perspective, for both bounded and unbounded events, including the defining relationships for each interaction. A diamond for E1 indicates at or before, i.e., the event is either anteriorly unbounded (E1 = −∞) or beginning at a state prior to R and E2. Similarly, a</context>
</contexts>
<marker>Allen, 1983</marker>
<rawString>James F. Allen. 1983. Maintaining knowledge about temporal intervals. Communications of the ACM, 26(11):832–843.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James F Allen</author>
</authors>
<title>Towards a general theory of action and time.</title>
<date>1984</date>
<journal>Artificial Intelligence,</journal>
<volume>23</volume>
<issue>2</issue>
<pages>154</pages>
<contexts>
<context position="3634" citStr="Allen (1984)" startWordPosition="575" endWordPosition="576">ws with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that devel</context>
</contexts>
<marker>Allen, 1984</marker>
<rawString>James F. Allen. 1984. Towards a general theory of action and time. Artificial Intelligence, 23(2):123– 154.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Charles Callaway</author>
<author>James Lester</author>
</authors>
<title>Narrative prose generation.</title>
<date>2002</date>
<journal>Artificial Intelligence,</journal>
<volume>139</volume>
<issue>2</issue>
<marker>Callaway, Lester, 2002</marker>
<rawString>Charles Callaway and James Lester. 2002. Narrative prose generation. Artificial Intelligence, 139(2):213–252.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Chen</author>
<author>Srinivas Bangalore</author>
<author>Owen Rambow</author>
<author>Marilyn Walker</author>
</authors>
<title>Towards automatic generation of natural language generation systems.</title>
<date>2002</date>
<booktitle>In Proceedings of the 19th International Conference on Computational Linguistics (COLING</booktitle>
<location>Taipei, Taiwan.</location>
<contexts>
<context position="4804" citStr="Chen et al., 2002" startWordPosition="753" endWordPosition="756">ctive, online encoding tool. We found that developing a custom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from speech, event, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Gagnon and Lapalme (1996) focus on temporal adverbials (e.g., when to insert a known time of day for an event). By comparison, we extend our approach to cover direct/indirect speech and the subjunctive/conditional forms, which they do not report implementing. While our work focuses on English, Yang and Bateman (2009) describe a recent system for generating Chinese aspect expressions based on a ti</context>
</contexts>
<marker>Chen, Bangalore, Rambow, Walker, 2002</marker>
<rawString>John Chen, Srinivas Bangalore, Owen Rambow, and Marilyn Walker. 2002. Towards automatic generation of natural language generation systems. In Proceedings of the 19th International Conference on Computational Linguistics (COLING 2002), Taipei, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bernard Comrie</author>
</authors>
<title>Tense.</title>
<date>1985</date>
<publisher>Cambridge University Press.</publisher>
<contexts>
<context position="18392" citStr="Comrie, 1985" startWordPosition="3086" endWordPosition="3087">e direction. These scenarios are illustrated in Table 3. Less intuitive are the cases where event and reference intervals are unbounded in the same direction. Perspective assignments for these instances are described in Table 4 and emphasize the bounded end of R. These situations occur rarely in this generation context. 3.4 Event Subintervals We do not always want to refer to events in their entirety. We may instead wish to refer to the beginning, middle or end of an event, no matter when it occurs with respect to the reference time. This invokes a second reference point in the same interval (Comrie, 1985, p.128), delimiting a subinterval. Consider John searches for his glasses versus John continues to search for his glasses– both indicate an ongoing process, but the latter implies a subinterval during which time, we are expected to know, John was already looking for his glasses. Our handling of subintervals falls along four alternatives that depend on the interval E1..E2, the reference R and the subinterval Ei..E2 of E, where Ei ≥ E1 and E2 ≤ E2. Diagram Ei Ri Relations E2 &gt; R2 E1 = −∞ R1 = −∞ R2 &gt; E2 E1 = −∞ R1 = −∞ R1 &gt; E1 E2 = ∞ R2 = ∞ Perspective During (a priori) After Contains E 2 R 2 E</context>
</contexts>
<marker>Comrie, 1985</marker>
<rawString>Bernard Comrie. 1985. Tense. Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Crouch</author>
<author>Stephen Pulman</author>
</authors>
<title>Time and modality in a natural language interface to a planning system.</title>
<date>1993</date>
<journal>Artificial Intelligence,</journal>
<pages>265--304</pages>
<contexts>
<context position="20954" citStr="Crouch and Pulman, 1993" startWordPosition="3565" endWordPosition="3568">nterval of E (E01 &gt; E1 and E02 = E2), we assign the perspective End. To realize this, we reassign the perspective to that between R and E0, and reassign the verb predicate to stop (or finish for cumulative achievements). Similarly, the predicate’s argument is the original proposition rendered in the infinitive. 4 Alternate timelines and modalities This section covers more complex situations involving alternate timelines– the feature of our representation by which a proposition in the main timeline can refer to a second frame of time. Other models of time have supported similar encapsulations (Crouch and Pulman, 1993; Mani and Pustejovsky, 2004). The alternate timeline can contain references to actual events or modal events (imagined, obligated, desired, planned, etc.) in the past the future with respect to its point of attachment on Figure 2: Schematic of a speech act attaching to a alternate timeline with a hypothetical action. R0 and Espeech are attachment points. the main timeline. This is primarily used in practice for modeling dialogue acts, but it can also be used to place real events at uncertain time states in the past (e.g., the present perfect is used in a reference story being encoded). 4.1 Re</context>
</contexts>
<marker>Crouch, Pulman, 1993</marker>
<rawString>Richard Crouch and Stephen Pulman. 1993. Time and modality in a natural language interface to a planning system. Artificial Intelligence, pages 265–304.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bonnie J Dorr</author>
<author>Terry Gaasterland</author>
</authors>
<title>Selecting tense, aspect, and connecting words in language generation.</title>
<date>1995</date>
<booktitle>In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95),</booktitle>
<location>Montreal, Canada.</location>
<contexts>
<context position="4872" citStr="Dorr and Gaasterland (1995)" startWordPosition="762" endWordPosition="765">tom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from speech, event, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Gagnon and Lapalme (1996) focus on temporal adverbials (e.g., when to insert a known time of day for an event). By comparison, we extend our approach to cover direct/indirect speech and the subjunctive/conditional forms, which they do not report implementing. While our work focuses on English, Yang and Bateman (2009) describe a recent system for generating Chinese aspect expressions based on a time interval representation, using KPML as their surface realizer. Se</context>
<context position="14532" citStr="Dorr and Gaasterland, 1995" startWordPosition="2370" endWordPosition="2373">t are either cue words (began, stopped, etc.) or conjugations of the predicate’s verb. These constructions emphasize precision over fluency. As we have noted, theorists have distinguished between “statives” that are descriptive (John was hungry), “achievement” actions that culminate in a state change (John built the house), and “activities” that are more continuous and divisible (John read a book for an hour) (Dowty, 1979). Prior work in temporal connectives has taken advantage of lexical information to determine the correct situation and assign aspect appropriately (Moens and Steedman, 1988; Dorr and Gaasterland, 1995). In our case, we only distinguish between actions and statives, based on information from WordNet and VerbNet. We use a separate table for statives; it is similar to Table 2, except the constructions replace verb conjugations with insertions of be, been, being, was, were, felt, and so on (with the latter applying to affective states). We do not currently distinguish between achievements and activities in selecting tense and aspect, except that the annotator is tasked with “manually” indicating a new state when an event culminates in one (e.g., The house was complete). Recognizing an achieveme</context>
</contexts>
<marker>Dorr, Gaasterland, 1995</marker>
<rawString>Bonnie J. Dorr and Terry Gaasterland. 1995. Selecting tense, aspect, and connecting words in language generation. In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), Montreal, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David R Dowty</author>
</authors>
<title>Word Meaning and</title>
<date>1979</date>
<location>Dordrecht.</location>
<contexts>
<context position="3342" citStr="Dowty, 1979" startWordPosition="530" endWordPosition="531">ose of the system, its data model, and the encoding methodology in a separate paper (Elson and McKeown, 2010). The paper is organized as follows: After discussing related work in Section 2, we describe our method for selecting tense and aspect for single events in Section 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Man</context>
<context position="6489" citStr="Dowty, 1979" startWordPosition="1021" endWordPosition="1022">itions that we aim to realize take the form of a predicate, one or more arguments, zero or more attached modifiers (either a negation operator or an adverbial, which is itself a proposition), and an assignment in time. Each argument is associated with a semantic role (such as Agent or Experiencer), and may include nouns (such as characters) or other propositions. In our implemented system, the set of predicates available to the annotator is adapted from the VerbNet (Kingsbury and Palmer, 2002) and WordNet (Fellbaum, 1998) linguistic databanks. These provide both durative actions and statives (Dowty, 1979); we will refer to both as events as they occur over intervals. For example, here are an action and a stative: walk(Mary, store, 2, 6) (1) hungry(Julia, 1,∞) (2) The latter two arguments in (1) refer to time states in a totally ordered sequence; Mary starts walking to the store at state 2 and finishes walking at state 6. (2) begins at state 1, but is unbounded (Julia never ceases being hungry). While this paper does not address the use of reference times (such as equating a state to 6:00 or yesterday), this is an area of ongoing work. (1) and (2), depending on the situation, can be realized in</context>
<context position="8310" citStr="Dowty (1979)" startWordPosition="1351" endWordPosition="1352">ay] has the relation E &lt; R &lt; S, in that it describe “the past of the past”, with the nearer “past” being R (the end of the play). R can be seen as the temporal focus of the sentence. As Reichenbach does not address events with intervals, we redefine E as the transition (E1..E2) attached to the proposition (for example, (2,6) for Mary’s walk). This definition deliberately assumes that no event ever occurs over a single “instant” of time. The perception of an instantaneous event, when it is needed, is instead created by dilating R into an interval large enough to contain the entire event, as in Dowty (1979). We also distinguish between two generation modes: realizing the story as a complete discourse (narration mode) and describing the content of a single state or interval (snapshot mode). Our system supports both modes differently. In discourse mode, we realize the story as if all events occur before the speech time S, which is the style of most literary fiction. (We shall see that this does not preclude the use of the future tense.) In snapshot mode, speech time is concurrent with reference time so that the same events are realized as though they are happening “now.” The system uses this mode </context>
<context position="14331" citStr="Dowty, 1979" startWordPosition="2343" endWordPosition="2344">mode is realized as Present Speech, in that R = S. The fourth column indicates the syntactic construction with which our system realizes the permutation. Each is a sequence of tokens that are either cue words (began, stopped, etc.) or conjugations of the predicate’s verb. These constructions emphasize precision over fluency. As we have noted, theorists have distinguished between “statives” that are descriptive (John was hungry), “achievement” actions that culminate in a state change (John built the house), and “activities” that are more continuous and divisible (John read a book for an hour) (Dowty, 1979). Prior work in temporal connectives has taken advantage of lexical information to determine the correct situation and assign aspect appropriately (Moens and Steedman, 1988; Dorr and Gaasterland, 1995). In our case, we only distinguish between actions and statives, based on information from WordNet and VerbNet. We use a separate table for statives; it is similar to Table 2, except the constructions replace verb conjugations with insertions of be, been, being, was, were, felt, and so on (with the latter applying to affective states). We do not currently distinguish between achievements and acti</context>
<context position="16833" citStr="Dowty (1979" startWordPosition="2819" endWordPosition="2820">ins to walk to the store; similarly, (2) is realized as Julia is hungry via the During perspective. Narration mode invokes past-tense verbs. 3.3 Reference interval Just as events occur over intervals, rather than single points, so too can reference times. One may need to express what occurred when “Julia entered the room” (a non-instantaneous action) or “yesterday evening.” Our system allows annotators to view intervals in snapshot mode to get a sense of what happens over a certain time span. The semantics of reference intervals have been studied as extensions to Reichenbach’s point approach. Dowty (1979, p.152), for example, posits that the progressive fits only if the reference interval is completely contained within the event interval. Following this, we construct an alternate lookup table (Table 3) for assigning the perspecTable 4: Perspective assignment if event and reference intervals are unbounded in like directions. tive of an event from a reference interval. Table 2 then applies in the same manner. In snapshot mode, the speech time 5 also occurs over an interval (namely, R), and Present Speech is still used. In narration mode, 5 is assumed to be a point following all event and refere</context>
</contexts>
<marker>Dowty, 1979</marker>
<rawString>David R. Dowty. 1979. Word Meaning and Montague Grammar. D. Reidel, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Elhadad</author>
<author>Jacques Robin</author>
</authors>
<title>An overview of surge: a reusable comprehensive syntactic realization component.</title>
<date>1996</date>
<journal>Eighth International Natural Language Generation Workshop.</journal>
<booktitle>In INLG ’96 Demonstrations and Posters,</booktitle>
<pages>1--4</pages>
<location>Brighton, UK.</location>
<contexts>
<context position="4446" citStr="Elhadad and Robin, 1996" startWordPosition="697" endWordPosition="700">shot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that developing a custom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from speech, event, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Gagnon and Lapalme (1996) focus on tempor</context>
</contexts>
<marker>Elhadad, Robin, 1996</marker>
<rawString>Michael Elhadad and Jacques Robin. 1996. An overview of surge: a reusable comprehensive syntactic realization component. In INLG ’96 Demonstrations and Posters, pages 1–4, Brighton, UK. Eighth International Natural Language Generation Workshop.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David K Elson</author>
<author>Kathleen R McKeown</author>
</authors>
<title>A tool for deep semantic encoding of narrative texts.</title>
<date>2009</date>
<booktitle>In Proceedings of the ACL-IJCNLP 2009 Software Demonstrations,</booktitle>
<pages>9--12</pages>
<location>Suntec, Singapore.</location>
<contexts>
<context position="30951" citStr="Elson and McKeown, 2009" startWordPosition="5307" endWordPosition="5310">ns. The second result is a set of syntactic constructions for realizing these permutations in our story encoding interface. Our focus here, as we have noted, is not fluency, but a surface-level rendering that reflects the relationships (and, at times, the ambiguities) present in the conceptual encoding. We consider variations in modality, such as an indicative reading as opposed to a conditional or subjunctive reading, to be at the level of the realizer and not another class of tenses. We have run a collection project with our encoding interface and can report success in the tool’s usability (Elson and McKeown, 2009). Two annotators each encoded 20 fables into the formal representation, with their only exposure to the semantic encodings being through the reference text generator (as in Figure 1). Both annotators became comfortable with the tool after a period of training; in surveys that they completed after each task, they gave Likert-scale usability scores of 4.25 and 4.30 (averaged over 20 tasks, with 5 meaning “easiest to use”). These scores are not specific to the generation component, but they suggest that annotators could derive satisfactory tenses from their semantic structures. The most frequentl</context>
</contexts>
<marker>Elson, McKeown, 2009</marker>
<rawString>David K. Elson and Kathleen R. McKeown. 2009. A tool for deep semantic encoding of narrative texts. In Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 9–12, Suntec, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David K Elson</author>
<author>Kathleen R McKeown</author>
</authors>
<title>Building a bank of semantically encoded narratives.</title>
<date>2010</date>
<booktitle>In Proceedings of the Seventh International Conference on Language Resources and Evaluation (LREC</booktitle>
<contexts>
<context position="2840" citStr="Elson and McKeown, 2010" startWordPosition="442" endWordPosition="445">el shows the original fable, and the left-hand panel shows a graphical timeline with buttons for constructing new propositions at certain intervals. The left-hand and bottom-right panels contain automatically generated text of the encoded story, as the system understands it, from different points of view. Users rely on these realizations to check that they have assigned the formal connections correctly. The tenses and aspects of these sentences are a key component of this feedback. We describe the general purpose of the system, its data model, and the encoding methodology in a separate paper (Elson and McKeown, 2010). The paper is organized as follows: After discussing related work in Section 2, we describe our method for selecting tense and aspect for single events in Section 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule</context>
</contexts>
<marker>Elson, McKeown, 2010</marker>
<rawString>David K. Elson and Kathleen R. McKeown. 2010. Building a bank of semantically encoded narratives. In Proceedings of the Seventh International Conference on Language Resources and Evaluation (LREC 2010), Malta.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christiane Fellbaum</author>
</authors>
<title>WordNet: An Electronic Lexical Database.</title>
<date>1998</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="6404" citStr="Fellbaum, 1998" startWordPosition="1010" endWordPosition="1011">ough a graphical interface. 3 Expressing single events 3.1 Temporal knowledge The propositions that we aim to realize take the form of a predicate, one or more arguments, zero or more attached modifiers (either a negation operator or an adverbial, which is itself a proposition), and an assignment in time. Each argument is associated with a semantic role (such as Agent or Experiencer), and may include nouns (such as characters) or other propositions. In our implemented system, the set of predicates available to the annotator is adapted from the VerbNet (Kingsbury and Palmer, 2002) and WordNet (Fellbaum, 1998) linguistic databanks. These provide both durative actions and statives (Dowty, 1979); we will refer to both as events as they occur over intervals. For example, here are an action and a stative: walk(Mary, store, 2, 6) (1) hungry(Julia, 1,∞) (2) The latter two arguments in (1) refer to time states in a totally ordered sequence; Mary starts walking to the store at state 2 and finishes walking at state 6. (2) begins at state 1, but is unbounded (Julia never ceases being hungry). While this paper does not address the use of reference times (such as equating a state to 6:00 or yesterday), this is</context>
</contexts>
<marker>Fellbaum, 1998</marker>
<rawString>Christiane Fellbaum. 1998. WordNet: An Electronic Lexical Database. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michel Gagnon</author>
<author>Guy Lapalme</author>
</authors>
<title>From conceptual time to linguistic time.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<volume>22</volume>
<issue>1</issue>
<contexts>
<context position="5030" citStr="Gagnon and Lapalme (1996)" startWordPosition="787" endWordPosition="790">1) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from speech, event, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Gagnon and Lapalme (1996) focus on temporal adverbials (e.g., when to insert a known time of day for an event). By comparison, we extend our approach to cover direct/indirect speech and the subjunctive/conditional forms, which they do not report implementing. While our work focuses on English, Yang and Bateman (2009) describe a recent system for generating Chinese aspect expressions based on a time interval representation, using KPML as their surface realizer. Several other projects run tangential to our interactive narrative encoding project. Callaway and Lester’s STORYBOOK (2002) aims to improve fluency and discours</context>
</contexts>
<marker>Gagnon, Lapalme, 1996</marker>
<rawString>Michel Gagnon and Guy Lapalme. 1996. From conceptual time to linguistic time. Computational Linguistics, 22(1):91–127.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brigitte Grote</author>
</authors>
<title>Representing temporal discourse markers for generation purposes.</title>
<date>1998</date>
<booktitle>In Proceedings of the Discourse Relations and Discourse Markers Workshop,</booktitle>
<pages>22--28</pages>
<location>Montreal, Canada.</location>
<contexts>
<context position="4889" citStr="Grote (1998)" startWordPosition="767" endWordPosition="768">Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from speech, event, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Gagnon and Lapalme (1996) focus on temporal adverbials (e.g., when to insert a known time of day for an event). By comparison, we extend our approach to cover direct/indirect speech and the subjunctive/conditional forms, which they do not report implementing. While our work focuses on English, Yang and Bateman (2009) describe a recent system for generating Chinese aspect expressions based on a time interval representation, using KPML as their surface realizer. Several other proje</context>
</contexts>
<marker>Grote, 1998</marker>
<rawString>Brigitte Grote. 1998. Representing temporal discourse markers for generation purposes. In Proceedings of the Discourse Relations and Discourse Markers Workshop, pages 22–28, Montreal, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M A K Halliday</author>
</authors>
<title>The english verbal group.</title>
<date>1976</date>
<booktitle>Halliday: System and Function in Language.</booktitle>
<editor>In G. R. Kress, editor,</editor>
<publisher>Oxford University Press,</publisher>
<location>London.</location>
<contexts>
<context position="25367" citStr="Halliday (1976)" startWordPosition="4327" endWordPosition="4328">sent, they invoke the Past Speech constructions in Table 2 that have not been used by either narration or snapshot mode. The content of the quoted speech then operates totally independently of the speech action, since both R0 and 50 are detached: Mary said/says/was saying, “I am going to buy eggs because Julia is hungry.” The focus of the sentence can be subsequently reassigned to deeper nested timelines as necessary (attaching E0 to R00, and so on). Although the above example uses subordinate clauses, we can use this nesting technique to construct composite tenses such as those enumerated by Halliday (1976). To this end, we conjugate the Modal Infinitive construction in Table 2 for each alternate timeline. For instance, Halliday’s complex form “present in past in future in past in future” (as in will have been going to have been taking) can be generated with four timelines in a chain that invoke, in order and with Past Speech, the After, Before, After and During perspectives. There are four Rs, all but the main one attached to a previous E. 4.2 Subjunctives and Conditionals We finally consider tense and aspect in the case of subjunctive and conditional statements (if-thens), which can appear in </context>
</contexts>
<marker>Halliday, 1976</marker>
<rawString>M.A.K. Halliday. 1976. The english verbal group. In G. R. Kress, editor, Halliday: System and Function in Language. Oxford University Press, London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Erhard W Hinrichs</author>
</authors>
<title>A compositional semantics of temporal expressions in english.</title>
<date>1987</date>
<booktitle>In Proceedings of the 25th Annual Conference of the Association for Computational Linguistics (ACL-87),</booktitle>
<location>Stanford, CA.</location>
<contexts>
<context position="3565" citStr="Hinrichs, 1987" startWordPosition="564" endWordPosition="565">ecting tense and aspect for single events in Section 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily inte</context>
</contexts>
<marker>Hinrichs, 1987</marker>
<rawString>Erhard W. Hinrichs. 1987. A compositional semantics of temporal expressions in english. In Proceedings of the 25th Annual Conference of the Association for Computational Linguistics (ACL-87), Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Norbert Hornstein</author>
</authors>
<title>As Time Goes By: Tense and Universal Grammar.</title>
<date>1990</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="22506" citStr="Hornstein, 1990" startWordPosition="3839" endWordPosition="3840">uppose Mary were to declare that she would buy some eggs because of Julia’s hunger, but before she returned from the store, Julia filled up on snacks. If this speech act is described by a character later in the story, then we need to carefully separate what is known to Mary at the time of her speech from what is later known at R by the teller of the episode. Mary sees her purchase of eggs as a possible future, even though it may have already happened by the point of retelling, and Mary does not know that Julia’s hunger is to end before long. Following Hornstein’s treatment of these scenarios (Hornstein, 1990), we attach R0, the reference time for Mary’s statement (in an alternate timeline), to Espeech, the event of her speaking (in the main timeline). The act of buying eggs is a hypothetical event E0buy that falls after R0 on the alternate (modal) timeline. S is not reassigned. Figure 2 shows both timelines for this example. The main timeline is shown on top; Mary’s speech act is below. The attachment point on the main timeline is, in this case, the speech event Espeech; the attachment point on an alternate timeline is alS R reality E speech E hunger E′hunger alternate R′ E′buy ways R0. The placem</context>
<context position="26248" citStr="Hornstein, 1990" startWordPosition="4481" endWordPosition="4483">lines in a chain that invoke, in order and with Past Speech, the After, Before, After and During perspectives. There are four Rs, all but the main one attached to a previous E. 4.2 Subjunctives and Conditionals We finally consider tense and aspect in the case of subjunctive and conditional statements (if-thens), which can appear in alternate timelines. The relationship between an if clause and a then clause is not the same as the relationship between two clauses joined by because or when. The then clause– or set of clauses– is predicated on the truth of the if clause. As linguists have noted (Hornstein, 1990, p.74), the if clause serves as an adverbial modifier, which has the effect of moving forward the reference point to the last of the if event intervals (provided that the if refers to a hypothetical future). Consider the sentence: If John were to fly to Tokyo, he would have booked a hotel. A correct model would place E0book before E0fly on an alternate timeline, with E0fly as the if. Since were to fly is a hypothetical future, R0 &lt; E0fly. During regeneration, we set R0 to E0fly after rendering If John were to fly to Tokyo, because we begin to assume that this event transpired. If R0 is left u</context>
</contexts>
<marker>Hornstein, 1990</marker>
<rawString>Norbert Hornstein. 1990. As Time Goes By: Tense and Universal Grammar. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Kingsbury</author>
<author>Martha Palmer</author>
</authors>
<title>From treebank to propbank.</title>
<date>2002</date>
<booktitle>In Proceedings of the Third International Conference on Language Resources and Evaluation (LREC-02), Canary Islands,</booktitle>
<contexts>
<context position="6375" citStr="Kingsbury and Palmer, 2002" startWordPosition="1004" endWordPosition="1007">ntences in various temporal scenarios through a graphical interface. 3 Expressing single events 3.1 Temporal knowledge The propositions that we aim to realize take the form of a predicate, one or more arguments, zero or more attached modifiers (either a negation operator or an adverbial, which is itself a proposition), and an assignment in time. Each argument is associated with a semantic role (such as Agent or Experiencer), and may include nouns (such as characters) or other propositions. In our implemented system, the set of predicates available to the annotator is adapted from the VerbNet (Kingsbury and Palmer, 2002) and WordNet (Fellbaum, 1998) linguistic databanks. These provide both durative actions and statives (Dowty, 1979); we will refer to both as events as they occur over intervals. For example, here are an action and a stative: walk(Mary, store, 2, 6) (1) hungry(Julia, 1,∞) (2) The latter two arguments in (1) refer to time states in a totally ordered sequence; Mary starts walking to the store at state 2 and finishes walking at state 6. (2) begins at state 1, but is unbounded (Julia never ceases being hungry). While this paper does not address the use of reference times (such as equating a state t</context>
</contexts>
<marker>Kingsbury, Palmer, 2002</marker>
<rawString>Paul Kingsbury and Martha Palmer. 2002. From treebank to propbank. In Proceedings of the Third International Conference on Language Resources and Evaluation (LREC-02), Canary Islands, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mirella Lapata</author>
<author>Alex Lascarides</author>
</authors>
<title>Learning sentence-internal temporal relations.</title>
<date>2006</date>
<journal>Journal of Artificial Intelligence Research,</journal>
<pages>27--85</pages>
<contexts>
<context position="4090" citStr="Lapata and Lascarides, 2006" startWordPosition="641" endWordPosition="644">arsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that developing a custom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from s</context>
</contexts>
<marker>Lapata, Lascarides, 2006</marker>
<rawString>Mirella Lapata and Alex Lascarides. 2006. Learning sentence-internal temporal relations. Journal of Artificial Intelligence Research, 27:85–117.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Benoit Lavoie</author>
<author>Owen Rambow</author>
</authors>
<title>A fast and portable realizer for text generation systems.</title>
<date>1997</date>
<booktitle>In Proceedings of the Fifth Conference on Applied Natural Language Processing,</booktitle>
<location>Washington, DC.</location>
<contexts>
<context position="4509" citStr="Lavoie and Rambow, 1997" startWordPosition="707" endWordPosition="710">on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that developing a custom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from speech, event, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Gagnon and Lapalme (1996) focus on temporal adverbials (e.g., when to insert a known time of day for an </context>
</contexts>
<marker>Lavoie, Rambow, 1997</marker>
<rawString>Benoit Lavoie and Owen Rambow. 1997. A fast and portable realizer for text generation systems. In Proceedings of the Fifth Conference on Applied Natural Language Processing, Washington, DC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gerard Ligozat</author>
<author>Michael Zock</author>
</authors>
<title>How to visualize time, tense and aspect?</title>
<date>1992</date>
<booktitle>In Proceedings of the 14th International Conference on Computational Linguistics (COLING ’92),</booktitle>
<pages>475--482</pages>
<location>Nantes, France.</location>
<contexts>
<context position="5706" citStr="Ligozat and Zock (1992)" startWordPosition="894" endWordPosition="897"> known time of day for an event). By comparison, we extend our approach to cover direct/indirect speech and the subjunctive/conditional forms, which they do not report implementing. While our work focuses on English, Yang and Bateman (2009) describe a recent system for generating Chinese aspect expressions based on a time interval representation, using KPML as their surface realizer. Several other projects run tangential to our interactive narrative encoding project. Callaway and Lester’s STORYBOOK (2002) aims to improve fluency and discourse cohesion in realizing formally encoded narratives; Ligozat and Zock (1992) allow users to interactively construct sentences in various temporal scenarios through a graphical interface. 3 Expressing single events 3.1 Temporal knowledge The propositions that we aim to realize take the form of a predicate, one or more arguments, zero or more attached modifiers (either a negation operator or an adverbial, which is itself a proposition), and an assignment in time. Each argument is associated with a semantic role (such as Agent or Experiencer), and may include nouns (such as characters) or other propositions. In our implemented system, the set of predicates available to t</context>
</contexts>
<marker>Ligozat, Zock, 1992</marker>
<rawString>Gerard Ligozat and Michael Zock. 1992. How to visualize time, tense and aspect? In Proceedings of the 14th International Conference on Computational Linguistics (COLING ’92), pages 475–482, Nantes, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inderjeet Mani</author>
<author>James Pustejovsky</author>
</authors>
<title>Temporal discourse models for narrative structure.</title>
<date>2004</date>
<booktitle>In Proceedings of the ACL Workshop on Discourse Annotation,</booktitle>
<location>Barcelona,</location>
<contexts>
<context position="20983" citStr="Mani and Pustejovsky, 2004" startWordPosition="3569" endWordPosition="3573">d E02 = E2), we assign the perspective End. To realize this, we reassign the perspective to that between R and E0, and reassign the verb predicate to stop (or finish for cumulative achievements). Similarly, the predicate’s argument is the original proposition rendered in the infinitive. 4 Alternate timelines and modalities This section covers more complex situations involving alternate timelines– the feature of our representation by which a proposition in the main timeline can refer to a second frame of time. Other models of time have supported similar encapsulations (Crouch and Pulman, 1993; Mani and Pustejovsky, 2004). The alternate timeline can contain references to actual events or modal events (imagined, obligated, desired, planned, etc.) in the past the future with respect to its point of attachment on Figure 2: Schematic of a speech act attaching to a alternate timeline with a hypothetical action. R0 and Espeech are attachment points. the main timeline. This is primarily used in practice for modeling dialogue acts, but it can also be used to place real events at uncertain time states in the past (e.g., the present perfect is used in a reference story being encoded). 4.1 Reassigning Temporal Focus Ogih</context>
</contexts>
<marker>Mani, Pustejovsky, 2004</marker>
<rawString>Inderjeet Mani and James Pustejovsky. 2004. Temporal discourse models for narrative structure. In Proceedings of the ACL Workshop on Discourse Annotation, Barcelona, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inderjeet Mani</author>
<author>Marc Verhagen</author>
<author>Ben Wellner</author>
<author>Chong Min Lee</author>
<author>James Pustejovsky</author>
</authors>
<title>Machine learning of temporal relations.</title>
<date>2006</date>
<booktitle>In Proceedings of COLING/ACL</booktitle>
<pages>753--760</pages>
<location>Sydney, Australia.</location>
<contexts>
<context position="4060" citStr="Mani et al., 2006" startWordPosition="637" endWordPosition="640">sed approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that developing a custom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel gram</context>
</contexts>
<marker>Mani, Verhagen, Wellner, Lee, Pustejovsky, 2006</marker>
<rawString>Inderjeet Mani, Marc Verhagen, Ben Wellner, Chong Min Lee, and James Pustejovsky. 2006. Machine learning of temporal relations. In Proceedings of COLING/ACL 2006, pages 753–760, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inderjeet Mani</author>
</authors>
<title>Recent developments in temporal information extraction.</title>
<date>2004</date>
<booktitle>In Proceedings of the International Conference on Recent Advances in Natural Language Processing (RANLP ’03),</booktitle>
<pages>45--60</pages>
<location>Borovets, Bulgaria.</location>
<contexts>
<context position="3950" citStr="Mani, 2004" startWordPosition="623" endWordPosition="624">979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that developing a custom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not</context>
</contexts>
<marker>Mani, 2004</marker>
<rawString>Inderjeet Mani. 2004. Recent developments in temporal information extraction. In Proceedings of the International Conference on Recent Advances in Natural Language Processing (RANLP ’03), pages 45– 60, Borovets, Bulgaria.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christian M I M Matthiessen</author>
<author>John A Bateman</author>
</authors>
<title>Text generation and systemic-functional linguistics: experiences from English and Japanese. Frances Pinter Publishers and St.</title>
<date>1991</date>
<publisher>Martin’s Press,</publisher>
<location>London and New York.</location>
<contexts>
<context position="4407" citStr="Matthiessen and Bateman, 1991" startWordPosition="691" endWordPosition="694">sses (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that developing a custom realizer as a module to our Java-based system was preferable to integrating a large, general purpose system such as KPML/Nigel (Matthiessen and Bateman, 1991) or FUF/SURGE (Elhadad and Robin, 1996). These realizers, along with RealPro (Lavoie and Rambow, 1997), accept tense as a parameter, but do not calculate it from a semantic representation of overlapping time intervals such as ours (though the Nigel grammar can calculate tense from speech, event, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Ga</context>
</contexts>
<marker>Matthiessen, Bateman, 1991</marker>
<rawString>Christian M. I. M. Matthiessen and John A. Bateman. 1991. Text generation and systemic-functional linguistics: experiences from English and Japanese. Frances Pinter Publishers and St. Martin’s Press, London and New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marc Moens</author>
<author>Mark Steedman</author>
</authors>
<title>Temporal ontology and temporal reference.</title>
<date>1988</date>
<journal>Computational Linguistics,</journal>
<volume>14</volume>
<issue>2</issue>
<contexts>
<context position="14503" citStr="Moens and Steedman, 1988" startWordPosition="2366" endWordPosition="2369">s a sequence of tokens that are either cue words (began, stopped, etc.) or conjugations of the predicate’s verb. These constructions emphasize precision over fluency. As we have noted, theorists have distinguished between “statives” that are descriptive (John was hungry), “achievement” actions that culminate in a state change (John built the house), and “activities” that are more continuous and divisible (John read a book for an hour) (Dowty, 1979). Prior work in temporal connectives has taken advantage of lexical information to determine the correct situation and assign aspect appropriately (Moens and Steedman, 1988; Dorr and Gaasterland, 1995). In our case, we only distinguish between actions and statives, based on information from WordNet and VerbNet. We use a separate table for statives; it is similar to Table 2, except the constructions replace verb conjugations with insertions of be, been, being, was, were, felt, and so on (with the latter applying to affective states). We do not currently distinguish between achievements and activities in selecting tense and aspect, except that the annotator is tasked with “manually” indicating a new state when an event culminates in one (e.g., The house was comple</context>
</contexts>
<marker>Moens, Steedman, 1988</marker>
<rawString>Marc Moens and Mark Steedman. 1988. Temporal ontology and temporal reference. Computational Linguistics, 14(2):15–28.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Nerbonne</author>
</authors>
<title>Reference time and time in narration.</title>
<date>1986</date>
<journal>Linguistics and Philosophy,</journal>
<volume>9</volume>
<issue>1</issue>
<contexts>
<context position="3358" citStr="Nerbonne, 1986" startWordPosition="532" endWordPosition="533">stem, its data model, and the encoding methodology in a separate paper (Elson and McKeown, 2010). The paper is organized as follows: After discussing related work in Section 2, we describe our method for selecting tense and aspect for single events in Section 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and cor</context>
</contexts>
<marker>Nerbonne, 1986</marker>
<rawString>John Nerbonne. 1986. Reference time and time in narration. Linguistics and Philosophy, 9(1):83–95.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Toshiyuki Ogihara</author>
</authors>
<title>Double-access sentences and reference to states.</title>
<date>1995</date>
<journal>Natural Language Semantics,</journal>
<pages>3--177</pages>
<contexts>
<context position="21593" citStr="Ogihara (1995)" startWordPosition="3674" endWordPosition="3675">004). The alternate timeline can contain references to actual events or modal events (imagined, obligated, desired, planned, etc.) in the past the future with respect to its point of attachment on Figure 2: Schematic of a speech act attaching to a alternate timeline with a hypothetical action. R0 and Espeech are attachment points. the main timeline. This is primarily used in practice for modeling dialogue acts, but it can also be used to place real events at uncertain time states in the past (e.g., the present perfect is used in a reference story being encoded). 4.1 Reassigning Temporal Focus Ogihara (1995) describes dialogue acts involving changes in temporal focus as “double-access sentences.” We now consider a method for planning such sentences in such a way that the refocusing of time (the reassignment of R into a new context) is clear, even if it means changing tense and aspect mid-sentence. Suppose Mary were to declare that she would buy some eggs because of Julia’s hunger, but before she returned from the store, Julia filled up on snacks. If this speech act is described by a character later in the story, then we need to carefully separate what is known to Mary at the time of her speech fr</context>
</contexts>
<marker>Ogihara, 1995</marker>
<rawString>Toshiyuki Ogihara. 1995. Double-access sentences and reference to states. Natural Language Semantics, 3:177–210.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rebecca Passonneau</author>
</authors>
<title>A computational model of the semantics of tense and aspect.</title>
<date>1988</date>
<journal>Computational Linguistics,</journal>
<volume>14</volume>
<issue>2</issue>
<contexts>
<context position="3620" citStr="Passonneau, 1988" startWordPosition="573" endWordPosition="574"> 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We fo</context>
</contexts>
<marker>Passonneau, 1988</marker>
<rawString>Rebecca Passonneau. 1988. A computational model of the semantics of tense and aspect. Computational Linguistics, 14(2):44–60.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans Reichenbach</author>
</authors>
<date>1947</date>
<booktitle>Elements of Symbolic Logic.</booktitle>
<publisher>MacMillan,</publisher>
<location>London.</location>
<marker>Reichenbach, 1947</marker>
<rawString>Hans Reichenbach. 1947. Elements of Symbolic Logic. MacMillan, London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fei Song</author>
<author>Robin Cohen</author>
</authors>
<title>The interpretation of temporal relations in narrative.</title>
<date>1988</date>
<booktitle>In Proceedings of the Seventh National Conference on Artificial Intelligence (AAAI-88),</booktitle>
<location>St. Paul, Minnesota.</location>
<contexts>
<context position="3601" citStr="Song and Cohen, 1988" startWordPosition="569" endWordPosition="572">ngle events in Section 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online e</context>
</contexts>
<marker>Song, Cohen, 1988</marker>
<rawString>Fei Song and Robin Cohen. 1988. The interpretation of temporal relations in narrative. In Proceedings of the Seventh National Conference on Artificial Intelligence (AAAI-88), St. Paul, Minnesota.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Dynamic semantics for tense and aspect.</title>
<date>1995</date>
<booktitle>In The 1995 International Joint Conference on AI (IJCAI-95),</booktitle>
<location>Montreal, Quebec, Canada.</location>
<contexts>
<context position="3654" citStr="Steedman (1995)" startWordPosition="578" endWordPosition="579">lex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an interactive, online encoding tool. We found that developing a custom reali</context>
</contexts>
<marker>Steedman, 1995</marker>
<rawString>Mark Steedman. 1995. Dynamic semantics for tense and aspect. In The 1995 International Joint Conference on AI (IJCAI-95), Montreal, Quebec, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frank Vlach</author>
</authors>
<title>Temporal adverbials, tenses and the perfect.</title>
<date>1993</date>
<journal>Linguistics and Philosophy,</journal>
<volume>16</volume>
<issue>3</issue>
<pages>283</pages>
<contexts>
<context position="3372" citStr="Vlach, 1993" startWordPosition="534" endWordPosition="535">odel, and the encoding methodology in a separate paper (Elson and McKeown, 2010). The paper is organized as follows: After discussing related work in Section 2, we describe our method for selecting tense and aspect for single events in Section 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (sta</context>
</contexts>
<marker>Vlach, 1993</marker>
<rawString>Frank Vlach. 1993. Temporal adverbials, tenses and the perfect. Linguistics and Philosophy, 16(3):231– 283.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bonnie Lynn Webber</author>
</authors>
<title>The interpretation of tense in discourse.</title>
<date>1987</date>
<booktitle>In Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics (ACL-87),</booktitle>
<pages>147--154</pages>
<location>Stanford, CA.</location>
<contexts>
<context position="3579" citStr="Webber, 1987" startWordPosition="566" endWordPosition="568"> aspect for single events in Section 3. Section 4 follows with more complex cases involving multiple events and shifts in temporal focus. We then discuss the results. 2 Related Work There has been intense interest in the interpretation of tense and aspect into a formal understanding of the ordering and duration of events. This work has been in both linguistics (Dowty, 1979; Nerbonne, 1986; Vlach, 1993) and natural language understanding. Early systems investigated rule-based approaches to parsing the durations and orderings of events from the tenses and aspects of their verbs (Hinrichs, 1987; Webber, 1987; Song and Cohen, 1988; Passonneau, 1988). Allen (1984) and Steedman (1995) focus on distinguishing between achievements (when an event culminates in a result, such as John builds a house) and processes (such as walking). More Figure 1: Screenshot of our story encoding interface. recent work has centered on markup languages for complex temporal information (Mani, 2004) and corpus-based (statistical) models for predicting temporal relationships on unseen text (Mani et al., 2006; Lapata and Lascarides, 2006). Our annotation interface requires a fast realizer that can be easily integrated into an</context>
</contexts>
<marker>Webber, 1987</marker>
<rawString>Bonnie Lynn Webber. 1987. The interpretation of tense in discourse. In Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics (ACL-87), pages 147–154, Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Guowen Yang</author>
<author>John Bateman</author>
</authors>
<title>The chinese aspect generation based on aspect selection functions.</title>
<date>2009</date>
<booktitle>In Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP (ACLIJCNLP</booktitle>
<contexts>
<context position="5323" citStr="Yang and Bateman (2009)" startWordPosition="835" endWordPosition="838">nt, and reference time orderings, discussed below). The statistically trained FERGUS (Chen et al., 2002) contrasts with our rule-based approach. Dorr and Gaasterland (1995) and Grote (1998) focus on generating temporal connectives, such as before, based on the relative times and durations of two events; Gagnon and Lapalme (1996) focus on temporal adverbials (e.g., when to insert a known time of day for an event). By comparison, we extend our approach to cover direct/indirect speech and the subjunctive/conditional forms, which they do not report implementing. While our work focuses on English, Yang and Bateman (2009) describe a recent system for generating Chinese aspect expressions based on a time interval representation, using KPML as their surface realizer. Several other projects run tangential to our interactive narrative encoding project. Callaway and Lester’s STORYBOOK (2002) aims to improve fluency and discourse cohesion in realizing formally encoded narratives; Ligozat and Zock (1992) allow users to interactively construct sentences in various temporal scenarios through a graphical interface. 3 Expressing single events 3.1 Temporal knowledge The propositions that we aim to realize take the form of</context>
</contexts>
<marker>Yang, Bateman, 2009</marker>
<rawString>Guowen Yang and John Bateman. 2009. The chinese aspect generation based on aspect selection functions. In Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP (ACLIJCNLP 2009), Singapore.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>