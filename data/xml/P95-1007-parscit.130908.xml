<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000334">
<title confidence="0.9991805">
Corpus Statistics Meet the Noun Compound:
Some Empirical Results
</title>
<author confidence="0.997428">
Mark Lauer
</author>
<affiliation confidence="0.994891">
Microsoft Institute
</affiliation>
<address confidence="0.901530666666667">
65 Epping Road,
North Ryde NSW 2113
Australia
</address>
<email confidence="0.894283">
t-marklOmicrosoft.com
</email>
<sectionHeader confidence="0.995781" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999900454545454">
A variety of statistical methods for noun
compound analysis are implemented and
compared. The results support two main
conclusions. First, the use of conceptual
association not only enables a broad cove-
rage, but also improves the accuracy. Se-
cond, an analysis model based on depen-
dency grammar is substantially more accu-
rate than one based on deepest constitu-
ents, even though the latter is more preva-
lent in the literature.
</bodyText>
<sectionHeader confidence="0.998344" genericHeader="keywords">
1 Background
</sectionHeader>
<subsectionHeader confidence="0.999293">
1.1 Compound Nouns
</subsectionHeader>
<bodyText confidence="0.999528142857143">
If parsing is taken to be the first step in taming the
natural language understanding task, then broad co-
verage NLP remains a jungle inhabited by wild be-
asts. For instance, parsing noun compounds appears
to require detailed world knowledge that is unavaila-
ble outside a limited domain (Sparck Jones, 1983).
Yet, far from being an obscure, endangered species,
the noun compound is flourishing in modern lan-
guage. It has already made five appearances in this
paragraph and at least one diachronic study shows
a veritable population explosion (Leonard, 1984).
While substantial work on noun compounds exists in
both linguistics (e.g. Levi, 1978; Ryder, 1994) and
computational linguistics (Finin, 1980; McDonald,
1982; Isabelle, 1984), techniques suitable for broad
coverage parsing remain unavailable. This paper ex-
plores the application of corpus statistics (Charniak,
1993) to noun compound parsing (other computa-
tional problems are addressed in Arens et al, 1987;
Vanderwende, 1993 and Sproat, 1994).
The task is illustrated in example 1:
</bodyText>
<figure confidence="0.316253666666667">
Example 1
(a) [womanN [aidN worker4
(b) [[hydrogenN ionN] exchangeN]
</figure>
<bodyText confidence="0.991039636363636">
The parses assigned to these two compounds dif-
fer, even though the sequence of parts of speech are
identical. The problem is analogous to the prepo-
sitional phrase attachment task explored in Hindle
and Rooth (1993). The approach they propose in-
volves computing lexical associations from a corpus
and using these to select the correct parse. A similar
architecture may be applied to noun compounds.
In the experiments below the accuracy of such a
system is measured. Comparisons are made across
five dimensions:
</bodyText>
<listItem confidence="0.998814">
• Each of two analysis models are applied: adja-
cency and dependency.
• Each of a range of training schemes are em-
ployed.
• Results are computed with and without tuning
factors suggested in the literature.
• Each of two parameterisations are used: asso-
ciations between words and associations bet-
ween concepts.
• Results are collected with and without machine
tagging of the corpus.
</listItem>
<subsectionHeader confidence="0.990966">
1.2 Training Schemes
</subsectionHeader>
<bodyText confidence="0.99993065">
While Hindle and Rooth (1993) use a partial par-
ser to acquire training data, such machinery appears
unnecessary for noun compounds. Brent (1993) has
proposed the use of simple word patterns for the ac-
quisition of verb subcategorisation information. An
analogous approach to compounds is used in Lauer
(1994) and constitutes one scheme evaluated below.
While such patterns produce false training examp-
les, the resulting noise often only introduces minor
distortions.
A more I.beral alternative is the use of a co-
occurrence window. Yarowsky (1992) uses a fixed
100 word window to collect information used for
sense disambiguation. Similarly, Smadja (1993) uses
a six content word window to extract significant col-
locations. A range of windowed training schemes are
employed below. Importantly, the use of a window
provides a natural means of trading off the amount
of data against its quality. When data sparseness un-
dermines the system accuracy, a wider window may
</bodyText>
<page confidence="0.998782">
47
</page>
<bodyText confidence="0.965087">
admit a sufficient volume of extra accurate data to
outweigh the additional noise.
</bodyText>
<subsectionHeader confidence="0.992589">
1.3 Noun Compound Analysis
</subsectionHeader>
<bodyText confidence="0.994547785714286">
There are at least four existing corpus-based al-
gorithms proposed for syntactically analysing noun
compounds. Only two of these have been subjected
to evaluation, and in each case, no comparison to
any of the other three was performed. In fact all au-
thors appear unaware of the other three proposals.
I will therefore briefly describe these algorithms.
Three of the algorithms use what I will call the
ADJACENCY MODEL, an analysis procedure that goes
back to Marcus (1980, p253). Therein, the proce-
dure is stated in terms of calls to an oracle which
can determine if a noun compound is acceptable. It
is reproduced here for reference:
Given three nouns n1, n2 and n3:
</bodyText>
<listItem confidence="0.999379">
• If either [ni n2] or [n2 n3] is not semantically
acceptable then build the alternative structure;
• otherwise, if [n2 n3] is semantically preferable
to [ni n21 then build [n2 ns];
• otherwise, build [ni n2].
</listItem>
<bodyText confidence="0.9995531">
Only more recently has it been suggested that cor-
pus statistics might provide the oracle, and this idea
is the basis of the three algorithms which use the
adjacency model. The simplest of these is repor-
ted in Pustejovsky et al (1993). Given a three word
compound, a search is conducted elsewhere in the
corpus for each of the two possible subcomponents.
Whichever is found is then chosen as the more closely
bracketed pair. For example, when backup compiler
disk is encountered, the analysis will be:
</bodyText>
<figure confidence="0.9284444">
Example 2
(a) [backupN [compilerN diskN]]
when compiler disk appears elsewhere
(b) [[backupN compilerN]
when backup compiler appears elsewhere
</figure>
<figureCaption confidence="0.36991775">
Since this is proposed merely as a rough heuristic,
it is not stated what the outcome is to be if neither
or both subcomponents appear. Nor is there any
evaluation of the algorithm.
</figureCaption>
<bodyText confidence="0.97960459375">
The proposal of Liberman and Sproat (1992) is
more sophisticated and allows for the frequency of
the words in the compound. Their proposal invol-
ves comparing the mutual information between the
two pairs of adjacent words and bracketing together
whichever pair exhibits the highest. Again, there is
no evaluation of the method other than a demon-
stration that four examples work correctly.
The third proposal based on the adjacency model
appears in Resnik (1993) and is rather more complex
again. The SELECTIONAL ASSOCIATION between a
predicate and a word is defined based on the con-
tribution of the word to the conditional entropy of
the predicate. The association between each pair
of words in the compound is then computed by ta-
king the maximum selectional association from all
possible ways of regarding the pair as predicate and
argument. Whilst this association metric is compli-
cated, the decision procedure still follows the out-
line devised by Marcus (1980) above. Resnik (1993)
used unambiguous noun compounds from the parsed
Wall Street Journal (WSJ) corpus to estimate the
association N alues and analysed a test set of around
160 compounds. After some tuning, the accuracy
was about 73%, as compared with a baseline of 64%
achieved by always bracketing the first two nouns
together.
The fourth algorithm, first described in Lauer
(1994), differs in one striking manner from the other
three. It uses what I will call the DEPENDENCY MO-
DEL. This model utilises the following procedure
when given three nouns ni, n2 and n3:
</bodyText>
<listItem confidence="0.9988856">
• Determine how acceptable the structures [ni n2]
and [ni n3] are;
• if the latter is more acceptable, build [n2 n3]
first;
• otherwise, build [ni n2] first.
</listItem>
<bodyText confidence="0.935837538461538">
Figure 1 shows a graphical comparison of the two
analysis models.
In Lauer (1994), the degree of acceptability is
again provided by statistical measures over a cor-
pus. The metric used is a mutual information-like
measure based on probabilities of modification rela-
tionships. This is derived from the idea that parse
trees capture the structure of semantic relationships
within a noun compound.&apos;
The dependency model attempts to choose a parse
which makes the resulting relationships as accepta-
ble as possible. For example, when backup compiler
disk is encountered, the analysis will be:
</bodyText>
<figure confidence="0.9366804">
Example 3
(a) [backupN [compilerN disk4
when backup disk is more acceptable
(b) [[backupN compilerN] disk1.11
when backup compiler is more acceptable
</figure>
<bodyText confidence="0.9822786">
I claim that the dependency model makes more
intuitive sense for the following reason. Consider
the compound calcium ion exchange, which is typi-
cally left-branching (that is, the first two words are
bracketed together). There does not seem to be any
reason why calcium ion should be any more frequent
than ion exchange. Both are plausible compounds
and regardless of the bracketing, ions are the object
of an exchange. Instead, the correct parse depends
on whether calcium characterises the ions or media-
tes the exchange.
Another significant difference between the models
is the predictions they make about the proportion
&apos;Lauer and Dras (1994) give a formal construction
motivating the algorithm given in Lauer (1994).
</bodyText>
<page confidence="0.995707">
48
</page>
<figure confidence="0.82248">
N1 N2 N3 Prefer N1 N2 N3
left-branching
if
L is more
acceptable
than R
Adjacency Dependency
</figure>
<figureCaption confidence="0.99949">
Figure 1: Two analysis models and the associations they compare
</figureCaption>
<bodyText confidence="0.999914473684211">
of left and right-branching compounds. Lauer and
Dras (1994) show that under a dependency mo-
del, left-branching compounds should occur twice
as often as right-branching compounds (that is two-
thirds of the time). In the test set used here and
in that of Resnik (1993), the proportion of left-
branching compounds is 67% and 64% respectively.
In contrast, the adjacency model appears to predict
a proportion of 50%.
The dependency model has also been proposed by
Kobayasi et al (1994) for analysing Japanese noun
compounds, apparently independently. Using a cor-
pus to acquire associations, they bracket sequences
of Kanji with lengths four to six (roughly equiva-
lent to two or three words). A simple calculation
shows that using their own preprocessing hueristics
to guess a bracketing provides a higher accuracy on
their test set than their statistical model does. This
renders their experiment inconclusive.
</bodyText>
<sectionHeader confidence="0.984379" genericHeader="introduction">
2 Method
</sectionHeader>
<subsectionHeader confidence="0.999916">
2.1 Extracting a Test Set
</subsectionHeader>
<bodyText confidence="0.999959888888889">
A test set of syntactically ambiguous noun com-
pounds was extracted from our 8 million word Gro-
lier&apos;s encyclopedia corpus in the following way.2 Be-
cause the corpus is not tagged or parsed, a some-
what conservative strategy of looking for unambi-
guous sequences of nouns was used. To distinguish
nouns from other words, the University of Penn-
sylvania morphological analyser (described in Karp
et al, 1992) was used to generate the set of words
that can only be used as nouns (I shall henceforth
call this set A). All consecutive sequences of these
words were extracted, and the three word sequences
used to form the test set. For reasons made clear
below, only sequences consisting entirely of words
from Roget&apos;s thesaurus were retained, giving a total
of 308 test triples.3
These triples were manually analysed using as
context the entire article in which they appeared. In
</bodyText>
<footnote confidence="0.99720975">
2We would like to thank Grolier&apos;s for permission to
use this material for research purposes.
3The 1911 version of Roget&apos;s used is available on-line
and is in the public domain.
</footnote>
<bodyText confidence="0.998606923076923">
some cases, the sequence was not a noun compound
(nouns can appear adjacent to one another across
various constituent boundaries) and was marked as
an error. Other compounds exhibited what Hin-
dle and Rooth (1993) have termed SEMANTIC INDE-
TERMINACY where the two possible bracketings can-
not be distinguished in the context. The remaining
compounds were assigned either a left-branching or
right-branching analysis. Table 1 shows the number
of each kind and an example of each.
Accuracy figures in all the results reported be-
low were computed using only those 244 compounds
which received a parse.
</bodyText>
<subsectionHeader confidence="0.998264">
2.2 Conceptual Association
</subsectionHeader>
<bodyText confidence="0.99991375">
One problem with applying lexical association to
noun compounds is the enormous number of para-
meters required, one for every possible pair of nouns.
Not only does this require a vast amount of memory
space, it creates a severe data sparseness problem
since we require at least some data about each pa-
rameter. Resnik and Hearst (1993) coined the term
CONCEPTUAL ASSOCIATION to refer to association
values computed between groups of words. By assu-
ming that all words within a group behave similarly,
the parameter space can be built in terms of the
groups rather than in terms of the words.
In this study, conceptual association is used with
groups consisting of all categories from the 1911 ver-
sion of Roget&apos;s thesaurus.4 Given two thesaurus ca-
tegories t1 and t2, there is a parameter which re-
presents the degree of acceptability of the structure
[n1n2j where ni is a noun appearing in t1 and n2
appears in t2. By the assumption that words within
a group behave similarly, this is constant given the
two categories. Following Lauer and Dras (1994) we
can formally write this parameter as Pr(ti —.12)
where the event ti t2 denotes the modification of
a noun in t2 by a noun in t1.
</bodyText>
<subsectionHeader confidence="0.995128">
2.3 Training
</subsectionHeader>
<bodyText confidence="0.956253">
To ensure that the test set is disjoint from the trai-
ning data, all occurrences of the test noun com-
pounds have been removed from the training corpus.
</bodyText>
<footnote confidence="0.844682">
41t contains 1043 categories.
</footnote>
<page confidence="0.993032">
49
</page>
<table confidence="0.9990564">
Type Number Proportion Example
Error 29 9% In monsoon regions rainfall does not ...
Indeterminate 35 11% Most advanced aircraft have precision navigation systems.
Left-branching 163 53% ...escaped punishment by the Allied war crimes tribunals.
Right-branching 81 26% Ronald Reagan, who won two landslide election victories, ...
</table>
<tableCaption confidence="0.999756">
Table 1: Test set distribution
</tableCaption>
<bodyText confidence="0.999626833333333">
Two types of training scheme are explored in this
study, both unsupervised. The first employs a pat-
tern that follows Pustejovsky (1993) in counting the
occurrences of subcomponents. A training instance
is any sequence of four words w1w2w3w4 where
tv1,1v4 Ar and w2, w3 E Ar. Let countp(ni, n2) be
the number of times a sequence w1n1n2w4 occurs in
the training corpus with wi, tv4 H.
The second type uses a window to collect training
instances by observing how often a pair of nouns co-
occur within some fixed number of words. In this
study, a variety of window sizes are used. For n &gt; 2,
let countn(ni , n2) be the number of times a sequence
niwi win2 occurs in the training corpus where
i &lt; n — 2. Note that windowed counts are asym-
metric. In the case of a window two words wide,
this yields the mutual information metric proposed
by Liberman and Sproat (1992).
Using each of these different training schemes to
arrive at appropriate counts it is then possible to
estimate the parameters. Since these are expressed
in terms of categories rather than words, it is ne-
cessary to combine the counts of words to arrive at
estimates. In all cases the estimates used are:
</bodyText>
<equation confidence="0.982332">
count(wi, w2)
ambig(w1)ambig(w2)
W2Et2
</equation>
<bodyText confidence="0.9953204">
Here ambig(w) is the number of categories in
which w appears. It has the effect of dividing the
evidence from a training instance across all possi-
ble categories for the words. The normaliser ensures
that all parameters for a head noun sum to unity.
</bodyText>
<subsectionHeader confidence="0.993411">
2.4 Analysing the Test Set
</subsectionHeader>
<bodyText confidence="0.999697">
Given the high level descriptions in section 1.3 it
remains only to formalise the decision process used
to analyse a noun compound. Each test compound
presents a set of possible analyses and the goal is to
choose which analysis is most likely. For three word
compounds it suffices to compute the ratio of two
probabilities, that of a left-branching analysis and
that of a right-branching one. If this ratio is greater
than unity, then the left-branching analysis is cho-
sen. When it is less than unity, a right-branching
analysis is chosen.5 If the ratio is exactly unity, the
analyser guesses left-branching, although this is fai-
rly rare for conceptual association as shown by the
experimental results below.
For the adjacency model, when the given com-
pound is w1w2w3, we can estimate this ratio as:
</bodyText>
<equation confidence="0.966660666666667">
Radi =
2-4,Ecats(..) Pr(12 13)
For the dependency model, the ratio is:
R Et.Ecats(.,) Pr(11 • 12) Pr(12 13)
de = (2)
P 2-a,Ecats(w,) Pr(11 13) Pr(12 14
</equation>
<bodyText confidence="0.999818733333333">
In both cases, we sum over all possible categories
for the words in the compound. Because the de-
pendency model equations have two factors, they
are affected more severely by data sparseness. If
the probability estimate for Pr(t2 t9 is zero for
all possible categories 12 and 13 then both the nu-
merator and the denominator will be zero. This
will conceal any preference given by the parame-
ters involving 11. In such cases, we observe that the
test instance itself provides the information that the
event 12 t3 can occur and we recalculate the ra-
tio using Pr(12 19 = Jr for all possible categories
12,13 where k is any non-zero constant. However, no
correction is made to the probability estimates for
Pr(ti t2) and Pr(ti 13) for unseen cases, thus
putting the dependency model on an equal footing
with the adjacency model above.
The equations presented above for the dependency
model differ from those developed in Lauer and Dras
(1994) in one way. There, an additional weighting
factor (of 2.0) is used to favour a left-branching ana-
lysis. This arises because their construction is ba-
sed on the dependency model which predicts that
left-branching analyses should occur twice as often.
Also, the work reported in Lauer and Dras (1994)
uses simplistic estimates of the probability of a word
given its thesaurus category. The equations above
assume these probabilities are uniformly constant.
Section 3.2 below shows the result of making these
two additions to the method.
</bodyText>
<footnote confidence="0.990545333333333">
5If either probability estimate is zero, the other ana-
lysis is chosen. If both are zero the analysis is made as
if the ratio were exactly unity.
</footnote>
<equation confidence="0.953676571428572">
Pr(ti t2) = _n1
where i = E
wiE.Ar
ambig(w ambig(w2)
counr , w2)
EtiEcats(.DPr(ti
(1)
</equation>
<page confidence="0.989084">
50
</page>
<figure confidence="0.993538846153846">
85
80
75
Accuracy 70
(%) 65
60
55
50
Dependency Model –
Adjacency Model -e—
Guess Left • • -
Pattern 2 3 4 5 10 50 100
Training scheme (integers denote window widths)
</figure>
<figureCaption confidence="0.999912">
Figure 2: Accuracy of dependency and adjacency model for various training schemes
</figureCaption>
<sectionHeader confidence="0.9999" genericHeader="background">
3 Results
</sectionHeader>
<subsectionHeader confidence="0.990474">
3.1 Dependency meets Adjacency
</subsectionHeader>
<bodyText confidence="0.9993695">
Eight different training schemes have been used to
estimate the parameters and each set of estimates
used to analyse the test set under both the adjacency
and the dependency model. The schemes used are:
</bodyText>
<listItem confidence="0.916520333333333">
• the pattern given in section 2.3; and
• windowed training schemes with window widths
of 2, 3, 4, 5, 10, 50 and 100 words.
</listItem>
<bodyText confidence="0.999977925925926">
The accuracy on the test set for all these expe-
riments is shown in figure 2. As can be seen, the
dependency model is more accurate than the adja-
cency model. This is true across the whole spec-
trum of training schemes. The proportion of cases
in which the procedure was forced to guess, either
because no data supported either analysis or because
both were equally supported, is quite low. For the
pattern and two-word window training schemes, the
guess rate is less than 4% for both models. In the
three-word window training scheme, the guess rates
are less than 1%. For all larger windows, neither
model is ever forced to guess.
In the case of the pattern training scheme, the
difference between 68.9% for adjacency and 77.5%
for dependency is statistically significant at the 5%
level (p = 0.0316), demonstrating the superiority of
the dependency model, at least for the compounds
within Grolier&apos;s encyclopedia.
In no case do any of the windowed training sche-
mes outperform the pattern scheme. It seems that
additional instances admitted by the windowed sche-
mes are too noisy to make an improvement.
Initial results from applying these methods to the
EMA corpus have been obtained by Wilco ter Stal
(1995), and support the conclusion that the depen-
dency model is superior to the adjacency model.
</bodyText>
<subsectionHeader confidence="0.996949">
3.2 Tuning
</subsectionHeader>
<bodyText confidence="0.998886">
Lauer and Dras (1994) suggest two improvements to
the method used above. These are:
</bodyText>
<listItem confidence="0.818534">
• a factor favouring left-branching which arises
from the formal dependency construction; and
• factors allowing for naive estimates of the varia-
</listItem>
<bodyText confidence="0.962962214285714">
tion in the probability of categories.
While these changes are motivated by the depen-
dency model, I have also applied them to the adja-
cency model for comparison. To implement them,
equations 1 and 2 must be modified to incorporate
a factor of in each term of the sum and the
l 1 td1t2iissi
entire ratio must be multiplied by two. Five trai-
ning schemes have been applied with these extensi-
ons. The accuracy results are shown in figure 3. For
comparison, the untuned accuracy figures are shown
with dotted lines. A marked improvement is obser-
ved for the adjacency model, while the dependency
model is only slightly improved.
</bodyText>
<subsectionHeader confidence="0.9982">
3.3 Lexical Association
</subsectionHeader>
<bodyText confidence="0.999988285714286">
To determine the difference made by conceptual as-
sociation, the pattern training scheme has been re-
trained using lexical counts for both the dependency
and adjacency model, but only for the words in
the test set. If the same system were to be app-
lied across all of Ar (a total of 90,000 nouns), then
around 8.1 billion parameters would be required.
Left-branching is favoured by a factor of two as de-
scribed in the previous section, but no estimates for
the category probabilities are used (these being mea-
ningless for the lexical association method).
Accuracy and guess rates are shown in figure 4.
Conceptual association outperforms lexical associa-
tion, presumably because of its ability to generalise.
</bodyText>
<subsectionHeader confidence="0.998487">
3.4 Using a Tagger
</subsectionHeader>
<bodyText confidence="0.999821857142857">
One problem with the training methods given in sec-
tion 2.3 is the restriction of training data to nouns
in H. Many nouns, especially common ones, have
verbal or adjectival usages that preclude them from
being in N. Yet when they occur as nouns, they
still provide useful training information that the cur-
rent system ignores. To test whether using tagged
</bodyText>
<page confidence="0.994002">
51
</page>
<figure confidence="0.976025928571429">
85
80
75
Accuracy 70
(%) 65
60
55
50
Tuned Dependency S -
Tuned Adjacency -e—
•
......... • • •
Pattern 2 3 5 10
Training scheme (integers denote window widths)
</figure>
<figureCaption confidence="0.997562">
Figure 3: Accuracy of tuned dependency and adjacency model for various training schemes
</figureCaption>
<figure confidence="0.995213789473684">
70
Accuracy
(%)
65
85
80
75
60
55
50
Guess Rate ,
(%)
30
25
20
10
Conceptual •
— Lexical 0
Dependency Adjacency Dependency Adjacency
</figure>
<figureCaption confidence="0.999825">
Figure 4: Accuracy and Guess Rates of Lexical and Conceptual Association
</figureCaption>
<page confidence="0.915103">
52
</page>
<figure confidence="0.985213846153846">
85
80
75
Accuracy 70
(%) 65
60
55
50
................
Tagged Dependency -.—
Tagged Adjacency -e—
L.
Pattern 3 5
</figure>
<figureCaption confidence="0.9777775">
Training scheme (integers denote window widths)
Figure 5: Accuracy using a tagged corpus for various training schemes
</figureCaption>
<bodyText confidence="0.99990794117647">
data would make a difference, the freely available
Brill tagger (Brill, 1993) was applied to the corpus.
Since no manually tagged training data is available
for our corpus, the tagger&apos;s default rules were used
(these rules were produced by Brill by training on
the Brown corpus). This results in rather poor tag-
ging accuracy, so it is quite possible that a manually
tagged corpus would produce better results.
Three training schemes have been used and the
tuned analysis procedures applied to the test set.
Figure 5 shows the resulting accuracy, with accuracy
values from figure 3 displayed with dotted lines. If
anything, admitting additional training data based
on the tagger introduces more noise, reducing the
accuracy. However, for the pattern training scheme
an improvement was made to the dependency model,
producing the highest overall accuracy of 81%.
</bodyText>
<sectionHeader confidence="0.999493" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999962476190476">
The experiments above demonstrate a number of im-
portant points. The most general of these is that
even quite crude corpus statistics can provide infor-
mation about the syntax of compound nouns. At the
very least, this information can be applied in broad
coverage parsing to assist in the control of search. I
have also shown that with a corpus of moderate size
it is possible to get reasonable results without using
a tagger or parser by employing a customised trai-
ning pattern. While using windowed co-occurrence
did not help here, it is possible that under more data
sparse conditions better performance could be achie-
ved by this method.
The significance of the use of conceptual associa-
tion deserves some mention. I have argued that wit-
hout it a broad coverage system would be impossible.
This is in contrast to previous work on conceptual
association where it resulted in little improvement
on a task which could already be performed. In this
study, not only has the technique proved its worth
by supporting generality, but through generalisation
of training information it outperforms the equivalent
lexical association approach given the same informa-
tion.
Amongst all the comparisons performed in these
experiments one stands out as exhibiting the grea-
test contrast. In all experiments the dependency
model provides a substantial advantage over the ad-
jacency model, even though the latter is more pre-
valent in proposals within the literature. This re-
sult is in accordance with the informal reasoning gi-
ven in section 1.3. The model also has the further
commendation that it predicts correctly the obser-
ved proportion of left-branching compounds found
in two independently extracted test sets.
In all, the most accurate technique achieved an ac-
curacy of 81% as compared to the 67% achieved by
guessing left-branching. Given the high frequency of
occurrence of noun compounds in many texts, this
suggests that the use of these techniques in proba-
bilistic parsers will result in higher performance in
broad coverage natural language processing.
</bodyText>
<sectionHeader confidence="0.999329" genericHeader="acknowledgments">
5 Acknowledgements
</sectionHeader>
<bodyText confidence="0.693016333333333">
This work has received valuable input from people
too numerous to mention. The most significant con-
tributions have been made by Richard Buckland,
</bodyText>
<reference confidence="0.64729275">
Robert Dale and Mark Dras. I am also indebted
to Vance Gledhill, Mike Johnson, Philip Resnik, Ri-
chard Sproat, Wilco ter Stal, Lucy Vanderwende and
Wayne Wobcke. Financial support is gratefully ack-
</reference>
<page confidence="0.99884">
53
</page>
<bodyText confidence="0.996208">
nowledged from the Microsoft Institute and the Au-
stralian Government.
</bodyText>
<sectionHeader confidence="0.992959" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99983606">
Arens, Y., Granacki, J. and Parker, A. 1987. Phra-
sal Analysis of Long Noun Sequences. In Procee-
dings of the 25th Annual Meeting of the Associa-
tion for Computational Linguistics, Stanford, CA.
pp59-64.
Brent, Michael. 1993. From Grammar to Lexi-
con: Unsupervised Learning of Lexical Syntax. In
Computational Linguistics, Vol 19(2), Special Is-
sue on Using Large Corpora II, pp243-62.
Brill, Eric. 1993. A Corpus-based Approach to Lan-
guage Learning. PhD Thesis, University of Penn-
sylvania, Philadelphia, PA..
Charniak, Eugene. 1993. Statistical Language Lear-
ning. MIT Press, Cambridge, MA.
Finin, Tim. 1980. The Semantic Interpretation of
Compound Nominals. PhD Thesis, Co-ordinated
Science Laboratory, University of Illinois, Urbana,
IL.
Hindle, D. and Rooth, M. 1993. Structural Am-
biguity and Lexical Relations. In Computational
Linguistics Vol. 19(1), Special Issue on Using
Large Corpora I, pp103-20.
Isabelle, Pierre. 1984. Another Look At Nominal
Compounds. In Proceedings of COLING-84, Stan-
ford, CA. pp509-16.
Karp, D., Schabes, Y., Zaidel, M. and Egedi, D.
1992. A Freely Available Wide Coverage Mor-
phological Analyzer for English. In Proceedings of
COLING-92, Nantes, France, pp950-4.
Kobayasi, Y., Tokunaga, T. and Tanaka, H. 1994.
Analysis of Japanese Compound Nouns using
Collocational Information. In Proceedings of
COLING-94, Kyoto, Japan, pp865-9.
Lauer, Mark. 1994. Conceptual Association for
Compound Noun Analysis. In Proceedings of the
32nd Annual Meeting of the Association for Com-
putational Linguistics, Student Session, Las Cru-
ces, NM. pp337-9.
Lauer, M. and Dras, M. 1994. A Probabilistic Mo-
del of Compound Nouns. In Proceedings of the 7th
Australian Joint Conference on Artificial Intelli-
gence, Armidale, NSW, Australia. World Scienti-
fic Press, pp474-81.
Leonard, Rosemary. 1984. The Interpretation of
English Noun Sequences on the Computer. North-
Holland, Amsterdam.
Levi, Judith. 1978. The Syntax and Semantics of
Complex Nominals. Academic Press, New York.
Liberman, M. and Sproat, R. 1992. The Stress and
Structure of Modified Noun Phrases in English.
In Sag, I. and Szabolcsi, A., editors, Lexical Mat-
ters CSLI Lecture Notes No. 24. University of
Chicago Press, pp131-81.
Marcus, Mitchell. 1980. A Theory of Syntactic Re-
cognition for Natural Language. MIT Press, Cam-
bridge, MA.
McDonald, David B. 1982. Understanding Noun
Compounds. PhD Thesis, Carnegie-Mellon Uni-
versity, Pittsburgh, PA.
Pustejovsky, J., Bergler, S. and Anick, P. 1993. Le-
xical Semantic Techniques for Corpus Analysis. In
Computational Linguistics Vol 19(2), Special Is-
sue on Using Large Corpora II, pp331-58.
Resnik, Philip. 1993. Selection and Informa-
tion: A Class-Based Approach to Lexical Relati-
onships. PhD dissertation, University of Pennsyl-
vania, Philadelphia, PA.
Resnik, P. and Hearst, M. 1993. Structural Ambi-
guity and Conceptual Relations. In Proceedings of
the Workshop on Very Large Corpora: Academic
and Industrial Perspectives, June 22, Ohio State
University, pp58-64.
Ryder, Mary Ellen. 1994. Ordered Chaos: The In-
terpretation of English Noun-Noun Compounds.
University of California Press Publications in Lin-
guistics, Vol 123.
Smadja, Frank. 1993. Retrieving Collocations from
Text: Xtract. In Computational Linguistics, Vol
19(1), Special Issue on Using Large Corpora I,
pp143-177.
Sparck Jones, Karen. 1983. Compound Noun
Interpretation Problems. In Fallside, F. and
Woods, W.A., editors, Computer Speech Proces-
sing. Prentice-Hall, NJ. pp363-81.
Sproat, Richard. 1994. English noun-phrase accent
prediction for text-to-speech. In Computer Speech
and Language, Vol 8, pp79-94.
Vanderwende, Lucy. 1993. SENS: The System for
Evaluating Noun Sequences. In Jensen, K., Hei-
dorn, G. and Richardson, S., editors, Natural Lan-
guage Processing: The PLNLP Approach. Kluwer
Academic, pp161-73.
ter Stal, Wilco. 1995. Syntactic Disambiguation of
Nominal Compounds Using Lexical and Concep-
tual Association. Memorandum UT-KBS-95-002,
University of Twente, Enschede, Netherlands.
Yarowsky, David. 1992. Word-Sense Disambigua-
tion Using Statistical Models of Roget&apos;s Catego-
ries Traincd on Large Corpora. In Proceedings of
COLING-92, Nantes, France, pp454-60.
</reference>
<page confidence="0.999026">
54
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.995452">Corpus Statistics Meet the Noun Compound: Some Empirical Results</title>
<author confidence="0.999988">Mark Lauer</author>
<affiliation confidence="0.999998">Microsoft Institute</affiliation>
<address confidence="0.989091">65 Epping Road, North Ryde NSW 2113 Australia</address>
<abstract confidence="0.99502749086162">A variety of statistical methods for noun compound analysis are implemented and compared. The results support two main conclusions. First, the use of conceptual association not only enables a broad coverage, but also improves the accuracy. Second, an analysis model based on dependency grammar is substantially more accurate than one based on deepest constituents, even though the latter is more prevalent in the literature. 1 Background Nouns taken to be the first step in taming the natural language understanding task, then broad coverage NLP remains a jungle inhabited by wild beasts. For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computaproblems are addressed in Arens al, Vanderwende, 1993 and Sproat, 1994). task is illustrated in example Example 1 (a) [womanN [aidN worker4 [[hydrogenN The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993). The approach they propose involves computing lexical associations from a corpus and using these to select the correct parse. A similar architecture may be applied to noun compounds. In the experiments below the accuracy of such a system is measured. Comparisons are made across five dimensions: • Each of two analysis models are applied: adjacency and dependency. • Each of a range of training schemes are employed. • Results are computed with and without tuning factors suggested in the literature. • Each of two parameterisations are used: associations between words and associations between concepts. • Results are collected with and without machine tagging of the corpus. 1.2 Training Schemes While Hindle and Rooth (1993) use a partial parser to acquire training data, such machinery appears unnecessary for noun compounds. Brent (1993) has proposed the use of simple word patterns for the acquisition of verb subcategorisation information. An analogous approach to compounds is used in Lauer (1994) and constitutes one scheme evaluated below. While such patterns produce false training examples, the resulting noise often only introduces minor distortions. A more I.beral alternative is the use of a cooccurrence window. Yarowsky (1992) uses a fixed 100 word window to collect information used for sense disambiguation. Similarly, Smadja (1993) uses a six content word window to extract significant collocations. A range of windowed training schemes are employed below. Importantly, the use of a window provides a natural means of trading off the amount of data against its quality. When data sparseness undermines the system accuracy, a wider window may 47 admit a sufficient volume of extra accurate data to outweigh the additional noise. 1.3 Noun Compound Analysis There are at least four existing corpus-based algorithms proposed for syntactically analysing noun compounds. Only two of these have been subjected to evaluation, and in each case, no comparison to any of the other three was performed. In fact all authors appear unaware of the other three proposals. I will therefore briefly describe these algorithms. Three of the algorithms use what I will call the MODEL, analysis procedure that goes back to Marcus (1980, p253). Therein, the procedure is stated in terms of calls to an oracle which can determine if a noun compound is acceptable. It is reproduced here for reference: three nouns and n3: • If either [ni n2] or [n2 n3] is not semantically acceptable then build the alternative structure; • otherwise, if [n2 n3] is semantically preferable then build ns]; • otherwise, build [ni n2]. Only more recently has it been suggested that corpus statistics might provide the oracle, and this idea is the basis of the three algorithms which use the adjacency model. The simplest of these is reporin Pustejovsky (1993). Given a three word compound, a search is conducted elsewhere in the corpus for each of the two possible subcomponents. Whichever is found is then chosen as the more closely pair. For example, when compiler is the analysis will be: Example 2 (a) [compilerN diskN]] disk elsewhere (b) [[backupNcompilerN] compiler elsewhere Since this is proposed merely as a rough heuristic, it is not stated what the outcome is to be if neither or both subcomponents appear. Nor is there any evaluation of the algorithm. The proposal of Liberman and Sproat (1992) is more sophisticated and allows for the frequency of the words in the compound. Their proposal involves comparing the mutual information between the two pairs of adjacent words and bracketing together whichever pair exhibits the highest. Again, there is no evaluation of the method other than a demonstration that four examples work correctly. The third proposal based on the adjacency model appears in Resnik (1993) and is rather more complex The ASSOCIATION a predicate and a word is defined based on the contribution of the word to the conditional entropy of the predicate. The association between each pair of words in the compound is then computed by taking the maximum selectional association from all possible ways of regarding the pair as predicate and argument. Whilst this association metric is complicated, the decision procedure still follows the outline devised by Marcus (1980) above. Resnik (1993) used unambiguous noun compounds from the parsed Street Journal corpus to estimate the and analysed a test set of around 160 compounds. After some tuning, the accuracy was about 73%, as compared with a baseline of 64% achieved by always bracketing the first two nouns together. The fourth algorithm, first described in Lauer (1994), differs in one striking manner from the other It uses what I will call the MOmodel utilises the following procedure given three nouns and • Determine how acceptable the structures [ni n2] are; • if the latter is more acceptable, build [n2 n3] first; otherwise, build n2] first. Figure 1 shows a graphical comparison of the two analysis models. In Lauer (1994), the degree of acceptability is again provided by statistical measures over a corpus. The metric used is a mutual information-like measure based on probabilities of modification relationships. This is derived from the idea that parse trees capture the structure of semantic relationships within a noun compound.&apos; The dependency model attempts to choose a parse which makes the resulting relationships as acceptaas possible. For example, when compiler encountered, the analysis will be: Example 3 (a) [backupN [compilerN disk4 disk more acceptable (b) [[backupN compilerN] disk1.11 compiler more acceptable I claim that the dependency model makes more intuitive sense for the following reason. Consider compound ion exchange, is typically left-branching (that is, the first two words are bracketed together). There does not seem to be any calcium ion be any more frequent ion are plausible compounds regardless of the bracketing, the object an the correct parse depends whether the mediathe Another significant difference between the models is the predictions they make about the proportion Dras (1994) give a formal construction motivating the algorithm given in Lauer (1994). 48 N1 N2 N3 Prefer N1 N2 N3 left-branching if L is more acceptable than R Adjacency Dependency analysis models and the associations they compare of left and right-branching compounds. Lauer and Dras (1994) show that under a dependency model, left-branching compounds should occur twice as often as right-branching compounds (that is twothirds of the time). In the test set used here and in that of Resnik (1993), the proportion of leftbranching compounds is 67% and 64% respectively. In contrast, the adjacency model appears to predict a proportion of 50%. The dependency model has also been proposed by (1994) for analysing Japanese noun compounds, apparently independently. Using a corpus to acquire associations, they bracket sequences of Kanji with lengths four to six (roughly equivalent to two or three words). A simple calculation shows that using their own preprocessing hueristics to guess a bracketing provides a higher accuracy on test set than their statistical model does. renders their experiment inconclusive. 2.1 Extracting a Test Set A test set of syntactically ambiguous noun compounds was extracted from our 8 million word Groencyclopedia corpus in the following Because the corpus is not tagged or parsed, a somewhat conservative strategy of looking for unambiguous sequences of nouns was used. To distinguish nouns from other words, the University of Pennsylvania morphological analyser (described in Karp al, was used to generate the set of words that can only be used as nouns (I shall henceforth call this set A). All consecutive sequences of these words were extracted, and the three word sequences used to form the test set. For reasons made clear below, only sequences consisting entirely of words from Roget&apos;s thesaurus were retained, giving a total 308 test These triples were manually analysed using as context the entire article in which they appeared. In like to thank Grolier&apos;s for permission to use this material for research purposes. 1911 version of Roget&apos;s used is available on-line and is in the public domain. some cases, the sequence was not a noun compound (nouns can appear adjacent to one another across various constituent boundaries) and was marked as an error. Other compounds exhibited what Hinand Rooth (1993) have termed INDEthe two possible bracketings cannot be distinguished in the context. The remaining compounds were assigned either a left-branching or right-branching analysis. Table 1 shows the number of each kind and an example of each. Accuracy figures in all the results reported below were computed using only those 244 compounds which received a parse. 2.2 Conceptual Association One problem with applying lexical association to noun compounds is the enormous number of parameters required, one for every possible pair of nouns. Not only does this require a vast amount of memory space, it creates a severe data sparseness problem since we require at least some data about each parameter. Resnik and Hearst (1993) coined the term ASSOCIATION refer to association values computed between groups of words. By assuming that all words within a group behave similarly, the parameter space can be built in terms of the groups rather than in terms of the words. In this study, conceptual association is used with groups consisting of all categories from the 1911 verof Roget&apos;s Given two thesaurus categories t1 and t2, there is a parameter which represents the degree of acceptability of the structure where ni is a noun appearing in t1 and n2 in By the assumption that words within a group behave similarly, this is constant given the two categories. Following Lauer and Dras (1994) we formally write this parameter as —.12) the event denotes the modification of a noun in t2 by a noun in t1. 2.3 Training To ensure that the test set is disjoint from the training data, all occurrences of the test noun comhave been the training corpus. contains 1043 categories. Type Number Proportion Example Error 29 9% regions rainfall not ... Indeterminate 35 11% advanced aircraft have navigation systems. Left-branching 163 53% punishment by the Allied war tribunals. Right-branching 81 26% Reagan, who won two election victories, ... Table 1: Test set distribution Two types of training scheme are explored in this study, both unsupervised. The first employs a pattern that follows Pustejovsky (1993) in counting the occurrences of subcomponents. A training instance any sequence of four words where w2, w3 E Ar. Let n2) be number of times a sequence occurs in training corpus with wi, tv4 The second type uses a window to collect training instances by observing how often a pair of nouns cooccur within some fixed number of words. In this study, a variety of window sizes are used. For n &gt; 2, , n2) be the number of times a sequence win2 occurs in the training corpus where i &lt; n — 2. Note that windowed counts are asymmetric. In the case of a window two words wide, this yields the mutual information metric proposed by Liberman and Sproat (1992). Using each of these different training schemes to arrive at appropriate counts it is then possible to estimate the parameters. Since these are expressed in terms of categories rather than words, it is necessary to combine the counts of words to arrive at estimates. In all cases the estimates used are: count(wi, w2) ambig(w1)ambig(w2) W2Et2 Here ambig(w) is the number of categories in which w appears. It has the effect of dividing the evidence from a training instance across all possible categories for the words. The normaliser ensures that all parameters for a head noun sum to unity. 2.4 Analysing the Test Set Given the high level descriptions in section 1.3 it remains only to formalise the decision process used to analyse a noun compound. Each test compound presents a set of possible analyses and the goal is to choose which analysis is most likely. For three word compounds it suffices to compute the ratio of two probabilities, that of a left-branching analysis and that of a right-branching one. If this ratio is greater than unity, then the left-branching analysis is chosen. When it is less than unity, a right-branching is If the ratio is exactly unity, the analyser guesses left-branching, although this is fairly rare for conceptual association as shown by the experimental results below. For the adjacency model, when the given compound is w1w2w3, we can estimate this ratio as: = For the dependency model, the ratio is: Pr(11• = P2-a,Ecats(w,) Pr(12 14 In both cases, we sum over all possible categories for the words in the compound. Because the dependency model equations have two factors, they are affected more severely by data sparseness. If the probability estimate for Pr(t2 t9 is zero for possible categories 12 and then both the numerator and the denominator will be zero. This will conceal any preference given by the parameinvolving In such cases, we observe that the test instance itself provides the information that the 12 t3 can occur and we recalculate the rausing Pr(12 = for all possible categories where any non-zero constant. However, no correction is made to the probability estimates for and 13) for unseen cases, thus putting the dependency model on an equal footing with the adjacency model above. The equations presented above for the dependency model differ from those developed in Lauer and Dras (1994) in one way. There, an additional weighting factor (of 2.0) is used to favour a left-branching analysis. This arises because their construction is based on the dependency model which predicts that left-branching analyses should occur twice as often. Also, the work reported in Lauer and Dras (1994) uses simplistic estimates of the probability of a word given its thesaurus category. The equations above assume these probabilities are uniformly constant. Section 3.2 below shows the result of making these two additions to the method. either probability estimate is zero, the other analysis is chosen. If both are zero the analysis is made as if the ratio were exactly unity. = i = wiE.Ar</abstract>
<note confidence="0.886064636363636">counr , w2) (1) 50 85 80 75 Accuracy 70 (%) 65 60 55 50</note>
<title confidence="0.589646">Dependency Model – Adjacency Model -e— Guess Left • • -</title>
<abstract confidence="0.993481395061728">Pattern 2 3 4 5 10 50 100 Training scheme (integers denote window widths) Figure 2: Accuracy of dependency and adjacency model for various training schemes 3.1 Dependency meets Adjacency Eight different training schemes have been used to estimate the parameters and each set of estimates used to analyse the test set under both the adjacency and the dependency model. The schemes used are: • the pattern given in section 2.3; and • windowed training schemes with window widths of 2, 3, 4, 5, 10, 50 and 100 words. The accuracy on the test set for all these experiments is shown in figure 2. As can be seen, the dependency model is more accurate than the adjacency model. This is true across the whole specof training schemes. The proportion of in which the procedure was forced to guess, either because no data supported either analysis or because both were equally supported, is quite low. For the pattern and two-word window training schemes, the guess rate is less than 4% for both models. In the three-word window training scheme, the guess rates are less than 1%. For all larger windows, neither model is ever forced to guess. In the case of the pattern training scheme, the difference between 68.9% for adjacency and 77.5% for dependency is statistically significant at the 5% = demonstrating the superiority of the dependency model, at least for the compounds within Grolier&apos;s encyclopedia. In no case do any of the windowed training schemes outperform the pattern scheme. It seems that additional instances admitted by the windowed schemes are too noisy to make an improvement. Initial results from applying these methods to the have been obtained by Wilco ter Stal (1995), and support the conclusion that the dependency model is superior to the adjacency model. 3.2 Tuning Lauer and Dras (1994) suggest two improvements to the method used above. These are: • a factor favouring left-branching which arises from the formal dependency construction; and • factors allowing for naive estimates of the variation in the probability of categories. While these changes are motivated by the dependency model, I have also applied them to the adjacency model for comparison. To implement them, 2 must be modified to incorporate a factor of in each term of the sum and the 1td1t2iissi entire ratio must be multiplied by two. Five training schemes have been applied with these extensions. The accuracy results are shown in figure 3. For comparison, the untuned accuracy figures are shown with dotted lines. A marked improvement is observed for the adjacency model, while the dependency model is only slightly improved. Association To determine the difference made by conceptual association, the pattern training scheme has been retrained using lexical counts for both the dependency and adjacency model, but only for the words in the test set. If the same system were to be appacross all of total of 90,000 nouns), then around 8.1 billion parameters would be required. Left-branching is favoured by a factor of two as described in the previous section, but no estimates for the category probabilities are used (these being meaningless for the lexical association method). Accuracy and guess rates are shown in figure 4. Conceptual association outperforms lexical association, presumably because of its ability to generalise. 3.4 Using a Tagger One problem with the training methods given in section 2.3 is the restriction of training data to nouns in H. Many nouns, especially common ones, have verbal or adjectival usages that preclude them from being in N. Yet when they occur as nouns, they still provide useful training information that the current system ignores. To test whether using tagged</abstract>
<note confidence="0.795798204545455">51 85 80 75 Accuracy 70 (%) 65 60 55 50 Tuned Dependency S - Tuned Adjacency -e— • ......... • • • Pattern 2 3 5 10 Training scheme (integers denote window widths) Figure 3: Accuracy of tuned dependency and adjacency model for various training schemes 70 Accuracy (%) 65 85 80 75 60 55 50 Guess Rate , (%) 30 25 20 10 Conceptual • Lexical 0 Dependency Adjacency Dependency Adjacency Figure 4: Accuracy and Guess Rates of Lexical and Conceptual Association 52 85 80 75 Accuracy 70 (%) 65 60 55</note>
<date confidence="0.309638">50</date>
<abstract confidence="0.951873102564103">Tagged Dependency -.— Tagged Adjacency -e— L. Pattern 3 5 Training scheme (integers denote window widths) Figure 5: Accuracy using a tagged corpus for various training schemes data would make a difference, the freely available Brill tagger (Brill, 1993) was applied to the corpus. Since no manually tagged training data is available for our corpus, the tagger&apos;s default rules were used (these rules were produced by Brill by training on the Brown corpus). This results in rather poor tagging accuracy, so it is quite possible that a manually tagged corpus would produce better results. Three training schemes have been used and the tuned analysis procedures applied to the test set. Figure 5 shows the resulting accuracy, with accuracy values from figure 3 displayed with dotted lines. If anything, admitting additional training data based on the tagger introduces more noise, reducing the accuracy. However, for the pattern training scheme an improvement was made to the dependency model, producing the highest overall accuracy of 81%. 4 Conclusion The experiments above demonstrate a number of important points. The most general of these is that even quite crude corpus statistics can provide information about the syntax of compound nouns. At the very least, this information can be applied in broad coverage parsing to assist in the control of search. I have also shown that with a corpus of moderate size it is possible to get reasonable results without using a tagger or parser by employing a customised training pattern. While using windowed co-occurrence did not help here, it is possible that under more data sparse conditions better performance could be achieved by this method. The significance of the use of conceptual association deserves some mention. I have argued that without it a broad coverage system would be impossible. This is in contrast to previous work on conceptual association where it resulted in little improvement on a task which could already be performed. In this study, not only has the technique proved its worth by supporting generality, but through generalisation of training information it outperforms the equivalent lexical association approach given the same information. Amongst all the comparisons performed in these experiments one stands out as exhibiting the greatest contrast. In all experiments the dependency model provides a substantial advantage over the adjacency model, even though the latter is more prevalent in proposals within the literature. This result is in accordance with the informal reasoning given in section 1.3. The model also has the further commendation that it predicts correctly the observed proportion of left-branching compounds found in two independently extracted test sets. In all, the most accurate technique achieved an accuracy of 81% as compared to the 67% achieved by guessing left-branching. Given the high frequency of occurrence of noun compounds in many texts, this suggests that the use of these techniques in probabilistic parsers will result in higher performance in broad coverage natural language processing. 5 Acknowledgements This work has received valuable input from people too numerous to mention. The most significant contributions have been made by Richard Buckland, Robert Dale and Mark Dras. I am also indebted to Vance Gledhill, Mike Johnson, Philip Resnik, Richard Sproat, Wilco ter Stal, Lucy Vanderwende and Wobcke. Financial support is gratefully ack- 53 nowledged from the Microsoft Institute and the Australian Government.</abstract>
<note confidence="0.889225666666667">References Arens, Y., Granacki, J. and Parker, A. 1987. Phra- Analysis of Long Noun Sequences. In Proceedings of the 25th Annual Meeting of the Associafor Computational Linguistics, CA. pp59-64. Brent, Michael. 1993. From Grammar to Lexicon: Unsupervised Learning of Lexical Syntax. In Linguistics, Special Is-</note>
<title confidence="0.988234">on Using Large Corpora</title>
<author confidence="0.990456">A Approach to Lan-</author>
<affiliation confidence="0.977248">Learning. Thesis, University of Penn-</affiliation>
<address confidence="0.983639">sylvania, Philadelphia, PA..</address>
<note confidence="0.927312340909091">Eugene. 1993. Language Lear- Press, Cambridge, MA. Tim. 1980. Semantic Interpretation of Nominals. Thesis, Co-ordinated Science Laboratory, University of Illinois, Urbana, IL. D. and Rooth, Structural Amand Lexical Relations. In 19(1), Issue on Using Large Corpora I, pp103-20. Isabelle, Pierre. 1984. Another Look At Nominal In of Stanford, CA. pp509-16. Karp, D., Schabes, Y., Zaidel, M. and Egedi, D. 1992. A Freely Available Wide Coverage Mor- Analyzer for English. In of France, pp950-4. Kobayasi, Y., Tokunaga, T. and Tanaka, H. 1994. Analysis of Japanese Compound Nouns using Information. In of Japan, pp865-9. Lauer, Mark. 1994. Conceptual Association for Noun Analysis. In of the 32nd Annual Meeting of the Association for Com- Linguistics, Session, Las Cruces, NM. pp337-9. Lauer, M. and Dras, M. 1994. A Probabilistic Moof Compound Nouns. In of the 7th Australian Joint Conference on Artificial Intelli- NSW, Australia. World Scientific Press, pp474-81. Rosemary. 1984. Interpretation of Noun Sequences on the Computer. North- Holland, Amsterdam. Judith. 1978. Syntax and Semantics of Nominals. Press, Liberman, M. and Sproat, R. 1992. The Stress and Structure of Modified Noun Phrases in English. Sag, I. and Szabolcsi, A., editors, Mat- CSLI Lecture Notes 24. University of Chicago Press, pp131-81. Mitchell. 1980. A of Syntactic Refor Natural Language. Press, Cambridge, MA.</note>
<author confidence="0.786375">B David</author>
<affiliation confidence="0.808339">Thesis, Carnegie-Mellon Uni-</affiliation>
<address confidence="0.792659">versity, Pittsburgh, PA.</address>
<note confidence="0.822697846153846">Pustejovsky, J., Bergler, S. and Anick, P. 1993. Lexical Semantic Techniques for Corpus Analysis. In Linguistics 19(2), Issue on Using Large Corpora II, pp331-58. Philip. 1993. and Informa- A Approach to Lexical Relatidissertation, University of Pennsylvania, Philadelphia, PA. Resnik, P. and Hearst, M. 1993. Structural Ambiand Conceptual Relations. In of the Workshop on Very Large Corpora: Academic Industrial Perspectives, 22, Ohio State University, pp58-64.</note>
<author confidence="0.994484">Chaos The In-</author>
<affiliation confidence="0.982431">of English Compounds. University of California Press Publications in Lin-</affiliation>
<address confidence="0.968707">Smadja, Frank. 1993. Retrieving Collocations from</address>
<note confidence="0.698747260869565">Xtract. In Linguistics, Issue on Using Large Corpora I, pp143-177. Sparck Jones, Karen. 1983. Compound Noun Interpretation Problems. In Fallside, F. and W.A., editors, Speech Proces- NJ. pp363-81. Sproat, Richard. 1994. English noun-phrase accent for text-to-speech. In Speech Language, Vanderwende, Lucy. 1993. SENS: The System for Evaluating Noun Sequences. In Jensen, K., Hei- G. and Richardson, S., editors, Lan- Processing: The PLNLP Approach. Academic, pp161-73. ter Stal, Wilco. 1995. Syntactic Disambiguation of Nominal Compounds Using Lexical and Conceptual Association. Memorandum UT-KBS-95-002, University of Twente, Enschede, Netherlands. Yarowsky, David. 1992. Word-Sense Disambiguation Using Statistical Models of Roget&apos;s Catego- Traincd on Large Corpora. In of France, pp454-60.</note>
<intro confidence="0.602243">54</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Robert Dale</author>
<author>Mark Dras</author>
</authors>
<title>I am also indebted to Vance Gledhill,</title>
<location>Mike Johnson, Philip Resnik, Richard</location>
<marker>Dale, Dras, </marker>
<rawString>Robert Dale and Mark Dras. I am also indebted to Vance Gledhill, Mike Johnson, Philip Resnik, Richard Sproat, Wilco ter Stal, Lucy Vanderwende and Wayne Wobcke. Financial support is gratefully ack-</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Arens</author>
<author>J Granacki</author>
<author>A Parker</author>
</authors>
<title>Phrasal Analysis of Long Noun Sequences.</title>
<date>1987</date>
<booktitle>In Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>59--64</pages>
<location>Stanford, CA.</location>
<contexts>
<context position="1593" citStr="Arens et al, 1987" startWordPosition="242" endWordPosition="245">red species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993). The approach they propose involves computing lexical associations from a corpus and using these to select the correct parse. A similar architecture may be applied to noun compounds. In the experiments below the accuracy of such a system i</context>
</contexts>
<marker>Arens, Granacki, Parker, 1987</marker>
<rawString>Arens, Y., Granacki, J. and Parker, A. 1987. Phrasal Analysis of Long Noun Sequences. In Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics, Stanford, CA. pp59-64.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Brent</author>
</authors>
<title>From Grammar to Lexicon: Unsupervised Learning of Lexical Syntax.</title>
<date>1993</date>
<booktitle>In Computational Linguistics, Vol 19(2), Special Issue on Using Large Corpora II,</booktitle>
<pages>243--62</pages>
<contexts>
<context position="2796" citStr="Brent (1993)" startWordPosition="439" endWordPosition="440"> system is measured. Comparisons are made across five dimensions: • Each of two analysis models are applied: adjacency and dependency. • Each of a range of training schemes are employed. • Results are computed with and without tuning factors suggested in the literature. • Each of two parameterisations are used: associations between words and associations between concepts. • Results are collected with and without machine tagging of the corpus. 1.2 Training Schemes While Hindle and Rooth (1993) use a partial parser to acquire training data, such machinery appears unnecessary for noun compounds. Brent (1993) has proposed the use of simple word patterns for the acquisition of verb subcategorisation information. An analogous approach to compounds is used in Lauer (1994) and constitutes one scheme evaluated below. While such patterns produce false training examples, the resulting noise often only introduces minor distortions. A more I.beral alternative is the use of a cooccurrence window. Yarowsky (1992) uses a fixed 100 word window to collect information used for sense disambiguation. Similarly, Smadja (1993) uses a six content word window to extract significant collocations. A range of windowed tr</context>
</contexts>
<marker>Brent, 1993</marker>
<rawString>Brent, Michael. 1993. From Grammar to Lexicon: Unsupervised Learning of Lexical Syntax. In Computational Linguistics, Vol 19(2), Special Issue on Using Large Corpora II, pp243-62.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eric Brill</author>
</authors>
<title>A Corpus-based Approach to Language Learning.</title>
<date>1993</date>
<tech>PhD Thesis,</tech>
<institution>University of Pennsylvania,</institution>
<location>Philadelphia, PA..</location>
<contexts>
<context position="21866" citStr="Brill, 1993" startWordPosition="3651" endWordPosition="3652">widths) Figure 3: Accuracy of tuned dependency and adjacency model for various training schemes 70 Accuracy (%) 65 85 80 75 60 55 50 Guess Rate , (%) 30 25 20 10 Conceptual • — Lexical 0 Dependency Adjacency Dependency Adjacency Figure 4: Accuracy and Guess Rates of Lexical and Conceptual Association 52 85 80 75 Accuracy 70 (%) 65 60 55 50 ................ Tagged Dependency -.— Tagged Adjacency -e— L. Pattern 3 5 Training scheme (integers denote window widths) Figure 5: Accuracy using a tagged corpus for various training schemes data would make a difference, the freely available Brill tagger (Brill, 1993) was applied to the corpus. Since no manually tagged training data is available for our corpus, the tagger&apos;s default rules were used (these rules were produced by Brill by training on the Brown corpus). This results in rather poor tagging accuracy, so it is quite possible that a manually tagged corpus would produce better results. Three training schemes have been used and the tuned analysis procedures applied to the test set. Figure 5 shows the resulting accuracy, with accuracy values from figure 3 displayed with dotted lines. If anything, admitting additional training data based on the tagger</context>
</contexts>
<marker>Brill, 1993</marker>
<rawString>Brill, Eric. 1993. A Corpus-based Approach to Language Learning. PhD Thesis, University of Pennsylvania, Philadelphia, PA..</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eugene Charniak</author>
</authors>
<title>Statistical Language Learning.</title>
<date>1993</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="1503" citStr="Charniak, 1993" startWordPosition="229" endWordPosition="230">e outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993). The approach they propose involves computing lexical associations from a corpus and using these to select the correct parse. A similar architecture </context>
</contexts>
<marker>Charniak, 1993</marker>
<rawString>Charniak, Eugene. 1993. Statistical Language Learning. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tim Finin</author>
</authors>
<title>The Semantic Interpretation of Compound Nominals.</title>
<date>1980</date>
<tech>PhD Thesis,</tech>
<institution>Co-ordinated Science Laboratory, University of Illinois,</institution>
<location>Urbana, IL.</location>
<contexts>
<context position="1328" citStr="Finin, 1980" startWordPosition="206" endWordPosition="207">ask, then broad coverage NLP remains a jungle inhabited by wild beasts. For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored i</context>
</contexts>
<marker>Finin, 1980</marker>
<rawString>Finin, Tim. 1980. The Semantic Interpretation of Compound Nominals. PhD Thesis, Co-ordinated Science Laboratory, University of Illinois, Urbana, IL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Hindle</author>
<author>M Rooth</author>
</authors>
<title>Structural Ambiguity and Lexical Relations.</title>
<date>1993</date>
<journal>In Computational Linguistics</journal>
<booktitle>Special Issue on Using Large Corpora I,</booktitle>
<volume>19</volume>
<issue>1</issue>
<pages>103--20</pages>
<contexts>
<context position="1953" citStr="Hindle and Rooth (1993)" startWordPosition="300" endWordPosition="303">McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993). The approach they propose involves computing lexical associations from a corpus and using these to select the correct parse. A similar architecture may be applied to noun compounds. In the experiments below the accuracy of such a system is measured. Comparisons are made across five dimensions: • Each of two analysis models are applied: adjacency and dependency. • Each of a range of training schemes are employed. • Results are computed with and without tuning factors suggested in the literature. • Each of two parameterisations are used: associations between words and associations between conc</context>
<context position="10937" citStr="Hindle and Rooth (1993)" startWordPosition="1773" endWordPosition="1777">e clear below, only sequences consisting entirely of words from Roget&apos;s thesaurus were retained, giving a total of 308 test triples.3 These triples were manually analysed using as context the entire article in which they appeared. In 2We would like to thank Grolier&apos;s for permission to use this material for research purposes. 3The 1911 version of Roget&apos;s used is available on-line and is in the public domain. some cases, the sequence was not a noun compound (nouns can appear adjacent to one another across various constituent boundaries) and was marked as an error. Other compounds exhibited what Hindle and Rooth (1993) have termed SEMANTIC INDETERMINACY where the two possible bracketings cannot be distinguished in the context. The remaining compounds were assigned either a left-branching or right-branching analysis. Table 1 shows the number of each kind and an example of each. Accuracy figures in all the results reported below were computed using only those 244 compounds which received a parse. 2.2 Conceptual Association One problem with applying lexical association to noun compounds is the enormous number of parameters required, one for every possible pair of nouns. Not only does this require a vast amount</context>
</contexts>
<marker>Hindle, Rooth, 1993</marker>
<rawString>Hindle, D. and Rooth, M. 1993. Structural Ambiguity and Lexical Relations. In Computational Linguistics Vol. 19(1), Special Issue on Using Large Corpora I, pp103-20.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pierre Isabelle</author>
</authors>
<title>Another Look At Nominal Compounds.</title>
<date>1984</date>
<booktitle>In Proceedings of COLING-84,</booktitle>
<pages>509--16</pages>
<location>Stanford, CA.</location>
<contexts>
<context position="1361" citStr="Isabelle, 1984" startWordPosition="210" endWordPosition="211">remains a jungle inhabited by wild beasts. For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993). The ap</context>
</contexts>
<marker>Isabelle, 1984</marker>
<rawString>Isabelle, Pierre. 1984. Another Look At Nominal Compounds. In Proceedings of COLING-84, Stanford, CA. pp509-16.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Karp</author>
<author>Y Schabes</author>
<author>M Zaidel</author>
<author>D Egedi</author>
</authors>
<title>A Freely Available Wide Coverage Morphological Analyzer for English.</title>
<date>1992</date>
<booktitle>In Proceedings of COLING-92,</booktitle>
<pages>950--4</pages>
<location>Nantes, France,</location>
<contexts>
<context position="10078" citStr="Karp et al, 1992" startWordPosition="1629" endWordPosition="1632">their own preprocessing hueristics to guess a bracketing provides a higher accuracy on their test set than their statistical model does. This renders their experiment inconclusive. 2 Method 2.1 Extracting a Test Set A test set of syntactically ambiguous noun compounds was extracted from our 8 million word Grolier&apos;s encyclopedia corpus in the following way.2 Because the corpus is not tagged or parsed, a somewhat conservative strategy of looking for unambiguous sequences of nouns was used. To distinguish nouns from other words, the University of Pennsylvania morphological analyser (described in Karp et al, 1992) was used to generate the set of words that can only be used as nouns (I shall henceforth call this set A). All consecutive sequences of these words were extracted, and the three word sequences used to form the test set. For reasons made clear below, only sequences consisting entirely of words from Roget&apos;s thesaurus were retained, giving a total of 308 test triples.3 These triples were manually analysed using as context the entire article in which they appeared. In 2We would like to thank Grolier&apos;s for permission to use this material for research purposes. 3The 1911 version of Roget&apos;s used is </context>
</contexts>
<marker>Karp, Schabes, Zaidel, Egedi, 1992</marker>
<rawString>Karp, D., Schabes, Y., Zaidel, M. and Egedi, D. 1992. A Freely Available Wide Coverage Morphological Analyzer for English. In Proceedings of COLING-92, Nantes, France, pp950-4.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Kobayasi</author>
<author>T Tokunaga</author>
<author>H Tanaka</author>
</authors>
<title>Analysis of Japanese Compound Nouns using Collocational Information.</title>
<date>1994</date>
<booktitle>In Proceedings of COLING-94,</booktitle>
<pages>865--9</pages>
<location>Kyoto, Japan,</location>
<contexts>
<context position="9216" citStr="Kobayasi et al (1994)" startWordPosition="1491" endWordPosition="1494"> N1 N2 N3 left-branching if L is more acceptable than R Adjacency Dependency Figure 1: Two analysis models and the associations they compare of left and right-branching compounds. Lauer and Dras (1994) show that under a dependency model, left-branching compounds should occur twice as often as right-branching compounds (that is twothirds of the time). In the test set used here and in that of Resnik (1993), the proportion of leftbranching compounds is 67% and 64% respectively. In contrast, the adjacency model appears to predict a proportion of 50%. The dependency model has also been proposed by Kobayasi et al (1994) for analysing Japanese noun compounds, apparently independently. Using a corpus to acquire associations, they bracket sequences of Kanji with lengths four to six (roughly equivalent to two or three words). A simple calculation shows that using their own preprocessing hueristics to guess a bracketing provides a higher accuracy on their test set than their statistical model does. This renders their experiment inconclusive. 2 Method 2.1 Extracting a Test Set A test set of syntactically ambiguous noun compounds was extracted from our 8 million word Grolier&apos;s encyclopedia corpus in the following w</context>
</contexts>
<marker>Kobayasi, Tokunaga, Tanaka, 1994</marker>
<rawString>Kobayasi, Y., Tokunaga, T. and Tanaka, H. 1994. Analysis of Japanese Compound Nouns using Collocational Information. In Proceedings of COLING-94, Kyoto, Japan, pp865-9.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Lauer</author>
</authors>
<title>Conceptual Association for Compound Noun Analysis.</title>
<date>1994</date>
<booktitle>In Proceedings of the 32nd Annual Meeting of the Association for Computational Linguistics, Student Session, Las Cruces, NM.</booktitle>
<pages>337--9</pages>
<contexts>
<context position="2959" citStr="Lauer (1994)" startWordPosition="465" endWordPosition="466">g schemes are employed. • Results are computed with and without tuning factors suggested in the literature. • Each of two parameterisations are used: associations between words and associations between concepts. • Results are collected with and without machine tagging of the corpus. 1.2 Training Schemes While Hindle and Rooth (1993) use a partial parser to acquire training data, such machinery appears unnecessary for noun compounds. Brent (1993) has proposed the use of simple word patterns for the acquisition of verb subcategorisation information. An analogous approach to compounds is used in Lauer (1994) and constitutes one scheme evaluated below. While such patterns produce false training examples, the resulting noise often only introduces minor distortions. A more I.beral alternative is the use of a cooccurrence window. Yarowsky (1992) uses a fixed 100 word window to collect information used for sense disambiguation. Similarly, Smadja (1993) uses a six content word window to extract significant collocations. A range of windowed training schemes are employed below. Importantly, the use of a window provides a natural means of trading off the amount of data against its quality. When data spars</context>
<context position="6778" citStr="Lauer (1994)" startWordPosition="1095" endWordPosition="1096"> the maximum selectional association from all possible ways of regarding the pair as predicate and argument. Whilst this association metric is complicated, the decision procedure still follows the outline devised by Marcus (1980) above. Resnik (1993) used unambiguous noun compounds from the parsed Wall Street Journal (WSJ) corpus to estimate the association N alues and analysed a test set of around 160 compounds. After some tuning, the accuracy was about 73%, as compared with a baseline of 64% achieved by always bracketing the first two nouns together. The fourth algorithm, first described in Lauer (1994), differs in one striking manner from the other three. It uses what I will call the DEPENDENCY MODEL. This model utilises the following procedure when given three nouns ni, n2 and n3: • Determine how acceptable the structures [ni n2] and [ni n3] are; • if the latter is more acceptable, build [n2 n3] first; • otherwise, build [ni n2] first. Figure 1 shows a graphical comparison of the two analysis models. In Lauer (1994), the degree of acceptability is again provided by statistical measures over a corpus. The metric used is a mutual information-like measure based on probabilities of modificatio</context>
<context position="8575" citStr="Lauer (1994)" startWordPosition="1385" endWordPosition="1386">nd calcium ion exchange, which is typically left-branching (that is, the first two words are bracketed together). There does not seem to be any reason why calcium ion should be any more frequent than ion exchange. Both are plausible compounds and regardless of the bracketing, ions are the object of an exchange. Instead, the correct parse depends on whether calcium characterises the ions or mediates the exchange. Another significant difference between the models is the predictions they make about the proportion &apos;Lauer and Dras (1994) give a formal construction motivating the algorithm given in Lauer (1994). 48 N1 N2 N3 Prefer N1 N2 N3 left-branching if L is more acceptable than R Adjacency Dependency Figure 1: Two analysis models and the associations they compare of left and right-branching compounds. Lauer and Dras (1994) show that under a dependency model, left-branching compounds should occur twice as often as right-branching compounds (that is twothirds of the time). In the test set used here and in that of Resnik (1993), the proportion of leftbranching compounds is 67% and 64% respectively. In contrast, the adjacency model appears to predict a proportion of 50%. The dependency model has al</context>
</contexts>
<marker>Lauer, 1994</marker>
<rawString>Lauer, Mark. 1994. Conceptual Association for Compound Noun Analysis. In Proceedings of the 32nd Annual Meeting of the Association for Computational Linguistics, Student Session, Las Cruces, NM. pp337-9.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Lauer</author>
<author>M Dras</author>
</authors>
<title>A Probabilistic Model of Compound Nouns.</title>
<date>1994</date>
<booktitle>In Proceedings of the 7th Australian Joint Conference on Artificial Intelligence,</booktitle>
<pages>474--81</pages>
<publisher>Australia. World Scientific Press,</publisher>
<location>Armidale, NSW,</location>
<contexts>
<context position="8501" citStr="Lauer and Dras (1994)" startWordPosition="1372" endWordPosition="1375">ency model makes more intuitive sense for the following reason. Consider the compound calcium ion exchange, which is typically left-branching (that is, the first two words are bracketed together). There does not seem to be any reason why calcium ion should be any more frequent than ion exchange. Both are plausible compounds and regardless of the bracketing, ions are the object of an exchange. Instead, the correct parse depends on whether calcium characterises the ions or mediates the exchange. Another significant difference between the models is the predictions they make about the proportion &apos;Lauer and Dras (1994) give a formal construction motivating the algorithm given in Lauer (1994). 48 N1 N2 N3 Prefer N1 N2 N3 left-branching if L is more acceptable than R Adjacency Dependency Figure 1: Two analysis models and the associations they compare of left and right-branching compounds. Lauer and Dras (1994) show that under a dependency model, left-branching compounds should occur twice as often as right-branching compounds (that is twothirds of the time). In the test set used here and in that of Resnik (1993), the proportion of leftbranching compounds is 67% and 64% respectively. In contrast, the adjacency</context>
<context position="12394" citStr="Lauer and Dras (1994)" startWordPosition="2018" endWordPosition="2021">ps of words. By assuming that all words within a group behave similarly, the parameter space can be built in terms of the groups rather than in terms of the words. In this study, conceptual association is used with groups consisting of all categories from the 1911 version of Roget&apos;s thesaurus.4 Given two thesaurus categories t1 and t2, there is a parameter which represents the degree of acceptability of the structure [n1n2j where ni is a noun appearing in t1 and n2 appears in t2. By the assumption that words within a group behave similarly, this is constant given the two categories. Following Lauer and Dras (1994) we can formally write this parameter as Pr(ti —.12) where the event ti t2 denotes the modification of a noun in t2 by a noun in t1. 2.3 Training To ensure that the test set is disjoint from the training data, all occurrences of the test noun compounds have been removed from the training corpus. 41t contains 1043 categories. 49 Type Number Proportion Example Error 29 9% In monsoon regions rainfall does not ... Indeterminate 35 11% Most advanced aircraft have precision navigation systems. Left-branching 163 53% ...escaped punishment by the Allied war crimes tribunals. Right-branching 81 26% Ron</context>
<context position="16450" citStr="Lauer and Dras (1994)" startWordPosition="2719" endWordPosition="2722">minator will be zero. This will conceal any preference given by the parameters involving 11. In such cases, we observe that the test instance itself provides the information that the event 12 t3 can occur and we recalculate the ratio using Pr(12 19 = Jr for all possible categories 12,13 where k is any non-zero constant. However, no correction is made to the probability estimates for Pr(ti t2) and Pr(ti 13) for unseen cases, thus putting the dependency model on an equal footing with the adjacency model above. The equations presented above for the dependency model differ from those developed in Lauer and Dras (1994) in one way. There, an additional weighting factor (of 2.0) is used to favour a left-branching analysis. This arises because their construction is based on the dependency model which predicts that left-branching analyses should occur twice as often. Also, the work reported in Lauer and Dras (1994) uses simplistic estimates of the probability of a word given its thesaurus category. The equations above assume these probabilities are uniformly constant. Section 3.2 below shows the result of making these two additions to the method. 5If either probability estimate is zero, the other analysis is ch</context>
<context position="19165" citStr="Lauer and Dras (1994)" startWordPosition="3187" endWordPosition="3190">jacency and 77.5% for dependency is statistically significant at the 5% level (p = 0.0316), demonstrating the superiority of the dependency model, at least for the compounds within Grolier&apos;s encyclopedia. In no case do any of the windowed training schemes outperform the pattern scheme. It seems that additional instances admitted by the windowed schemes are too noisy to make an improvement. Initial results from applying these methods to the EMA corpus have been obtained by Wilco ter Stal (1995), and support the conclusion that the dependency model is superior to the adjacency model. 3.2 Tuning Lauer and Dras (1994) suggest two improvements to the method used above. These are: • a factor favouring left-branching which arises from the formal dependency construction; and • factors allowing for naive estimates of the variation in the probability of categories. While these changes are motivated by the dependency model, I have also applied them to the adjacency model for comparison. To implement them, equations 1 and 2 must be modified to incorporate a factor of in each term of the sum and the l 1 td1t2iissi entire ratio must be multiplied by two. Five training schemes have been applied with these extensions.</context>
</contexts>
<marker>Lauer, Dras, 1994</marker>
<rawString>Lauer, M. and Dras, M. 1994. A Probabilistic Model of Compound Nouns. In Proceedings of the 7th Australian Joint Conference on Artificial Intelligence, Armidale, NSW, Australia. World Scientific Press, pp474-81.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rosemary Leonard</author>
</authors>
<date>1984</date>
<booktitle>The Interpretation of English Noun Sequences on the Computer. NorthHolland,</booktitle>
<location>Amsterdam.</location>
<contexts>
<context position="1185" citStr="Leonard, 1984" startWordPosition="186" endWordPosition="187">evalent in the literature. 1 Background 1.1 Compound Nouns If parsing is taken to be the first step in taming the natural language understanding task, then broad coverage NLP remains a jungle inhabited by wild beasts. For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds dif</context>
</contexts>
<marker>Leonard, 1984</marker>
<rawString>Leonard, Rosemary. 1984. The Interpretation of English Noun Sequences on the Computer. NorthHolland, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Judith Levi</author>
</authors>
<title>The Syntax and Semantics of Complex Nominals.</title>
<date>1978</date>
<publisher>Academic Press,</publisher>
<location>New York.</location>
<contexts>
<context position="1271" citStr="Levi, 1978" startWordPosition="199" endWordPosition="200">irst step in taming the natural language understanding task, then broad coverage NLP remains a jungle inhabited by wild beasts. For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogo</context>
</contexts>
<marker>Levi, 1978</marker>
<rawString>Levi, Judith. 1978. The Syntax and Semantics of Complex Nominals. Academic Press, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Liberman</author>
<author>R Sproat</author>
</authors>
<title>The Stress and Structure of Modified Noun Phrases</title>
<date>1992</date>
<booktitle>Lexical Matters CSLI Lecture Notes No. 24.</booktitle>
<pages>131--81</pages>
<editor>in English. In Sag, I. and Szabolcsi, A., editors,</editor>
<publisher>University of Chicago Press,</publisher>
<contexts>
<context position="5475" citStr="Liberman and Sproat (1992)" startWordPosition="881" endWordPosition="884"> three word compound, a search is conducted elsewhere in the corpus for each of the two possible subcomponents. Whichever is found is then chosen as the more closely bracketed pair. For example, when backup compiler disk is encountered, the analysis will be: Example 2 (a) [backupN [compilerN diskN]] when compiler disk appears elsewhere (b) [[backupN compilerN] when backup compiler appears elsewhere Since this is proposed merely as a rough heuristic, it is not stated what the outcome is to be if neither or both subcomponents appear. Nor is there any evaluation of the algorithm. The proposal of Liberman and Sproat (1992) is more sophisticated and allows for the frequency of the words in the compound. Their proposal involves comparing the mutual information between the two pairs of adjacent words and bracketing together whichever pair exhibits the highest. Again, there is no evaluation of the method other than a demonstration that four examples work correctly. The third proposal based on the adjacency model appears in Resnik (1993) and is rather more complex again. The SELECTIONAL ASSOCIATION between a predicate and a word is defined based on the contribution of the word to the conditional entropy of the predi</context>
<context position="13943" citStr="Liberman and Sproat (1992)" startWordPosition="2290" endWordPosition="2293">w2w3w4 where tv1,1v4 Ar and w2, w3 E Ar. Let countp(ni, n2) be the number of times a sequence w1n1n2w4 occurs in the training corpus with wi, tv4 H. The second type uses a window to collect training instances by observing how often a pair of nouns cooccur within some fixed number of words. In this study, a variety of window sizes are used. For n &gt; 2, let countn(ni , n2) be the number of times a sequence niwi win2 occurs in the training corpus where i &lt; n — 2. Note that windowed counts are asymmetric. In the case of a window two words wide, this yields the mutual information metric proposed by Liberman and Sproat (1992). Using each of these different training schemes to arrive at appropriate counts it is then possible to estimate the parameters. Since these are expressed in terms of categories rather than words, it is necessary to combine the counts of words to arrive at estimates. In all cases the estimates used are: count(wi, w2) ambig(w1)ambig(w2) W2Et2 Here ambig(w) is the number of categories in which w appears. It has the effect of dividing the evidence from a training instance across all possible categories for the words. The normaliser ensures that all parameters for a head noun sum to unity. 2.4 Ana</context>
</contexts>
<marker>Liberman, Sproat, 1992</marker>
<rawString>Liberman, M. and Sproat, R. 1992. The Stress and Structure of Modified Noun Phrases in English. In Sag, I. and Szabolcsi, A., editors, Lexical Matters CSLI Lecture Notes No. 24. University of Chicago Press, pp131-81.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mitchell Marcus</author>
</authors>
<title>A Theory of Syntactic Recognition for Natural Language.</title>
<date>1980</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="4200" citStr="Marcus (1980" startWordPosition="665" endWordPosition="666">ccuracy, a wider window may 47 admit a sufficient volume of extra accurate data to outweigh the additional noise. 1.3 Noun Compound Analysis There are at least four existing corpus-based algorithms proposed for syntactically analysing noun compounds. Only two of these have been subjected to evaluation, and in each case, no comparison to any of the other three was performed. In fact all authors appear unaware of the other three proposals. I will therefore briefly describe these algorithms. Three of the algorithms use what I will call the ADJACENCY MODEL, an analysis procedure that goes back to Marcus (1980, p253). Therein, the procedure is stated in terms of calls to an oracle which can determine if a noun compound is acceptable. It is reproduced here for reference: Given three nouns n1, n2 and n3: • If either [ni n2] or [n2 n3] is not semantically acceptable then build the alternative structure; • otherwise, if [n2 n3] is semantically preferable to [ni n21 then build [n2 ns]; • otherwise, build [ni n2]. Only more recently has it been suggested that corpus statistics might provide the oracle, and this idea is the basis of the three algorithms which use the adjacency model. The simplest of these</context>
<context position="6395" citStr="Marcus (1980)" startWordPosition="1033" endWordPosition="1034">ion that four examples work correctly. The third proposal based on the adjacency model appears in Resnik (1993) and is rather more complex again. The SELECTIONAL ASSOCIATION between a predicate and a word is defined based on the contribution of the word to the conditional entropy of the predicate. The association between each pair of words in the compound is then computed by taking the maximum selectional association from all possible ways of regarding the pair as predicate and argument. Whilst this association metric is complicated, the decision procedure still follows the outline devised by Marcus (1980) above. Resnik (1993) used unambiguous noun compounds from the parsed Wall Street Journal (WSJ) corpus to estimate the association N alues and analysed a test set of around 160 compounds. After some tuning, the accuracy was about 73%, as compared with a baseline of 64% achieved by always bracketing the first two nouns together. The fourth algorithm, first described in Lauer (1994), differs in one striking manner from the other three. It uses what I will call the DEPENDENCY MODEL. This model utilises the following procedure when given three nouns ni, n2 and n3: • Determine how acceptable the st</context>
</contexts>
<marker>Marcus, 1980</marker>
<rawString>Marcus, Mitchell. 1980. A Theory of Syntactic Recognition for Natural Language. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David B McDonald</author>
</authors>
<title>Understanding Noun Compounds.</title>
<date>1982</date>
<tech>PhD Thesis,</tech>
<institution>Carnegie-Mellon University,</institution>
<location>Pittsburgh, PA.</location>
<contexts>
<context position="1344" citStr="McDonald, 1982" startWordPosition="208" endWordPosition="209">ad coverage NLP remains a jungle inhabited by wild beasts. For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Roo</context>
</contexts>
<marker>McDonald, 1982</marker>
<rawString>McDonald, David B. 1982. Understanding Noun Compounds. PhD Thesis, Carnegie-Mellon University, Pittsburgh, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
<author>S Bergler</author>
<author>P Anick</author>
</authors>
<title>Lexical Semantic Techniques for Corpus Analysis.</title>
<date>1993</date>
<booktitle>In Computational Linguistics Vol 19(2), Special Issue on Using Large Corpora II,</booktitle>
<pages>331--58</pages>
<contexts>
<context position="4840" citStr="Pustejovsky et al (1993)" startWordPosition="778" endWordPosition="781">, the procedure is stated in terms of calls to an oracle which can determine if a noun compound is acceptable. It is reproduced here for reference: Given three nouns n1, n2 and n3: • If either [ni n2] or [n2 n3] is not semantically acceptable then build the alternative structure; • otherwise, if [n2 n3] is semantically preferable to [ni n21 then build [n2 ns]; • otherwise, build [ni n2]. Only more recently has it been suggested that corpus statistics might provide the oracle, and this idea is the basis of the three algorithms which use the adjacency model. The simplest of these is reported in Pustejovsky et al (1993). Given a three word compound, a search is conducted elsewhere in the corpus for each of the two possible subcomponents. Whichever is found is then chosen as the more closely bracketed pair. For example, when backup compiler disk is encountered, the analysis will be: Example 2 (a) [backupN [compilerN diskN]] when compiler disk appears elsewhere (b) [[backupN compilerN] when backup compiler appears elsewhere Since this is proposed merely as a rough heuristic, it is not stated what the outcome is to be if neither or both subcomponents appear. Nor is there any evaluation of the algorithm. The pro</context>
</contexts>
<marker>Pustejovsky, Bergler, Anick, 1993</marker>
<rawString>Pustejovsky, J., Bergler, S. and Anick, P. 1993. Lexical Semantic Techniques for Corpus Analysis. In Computational Linguistics Vol 19(2), Special Issue on Using Large Corpora II, pp331-58.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philip Resnik</author>
</authors>
<title>Selection and Information: A Class-Based Approach to Lexical Relationships.</title>
<date>1993</date>
<institution>University of Pennsylvania,</institution>
<location>Philadelphia, PA.</location>
<note>PhD dissertation,</note>
<contexts>
<context position="5893" citStr="Resnik (1993)" startWordPosition="950" endWordPosition="951"> as a rough heuristic, it is not stated what the outcome is to be if neither or both subcomponents appear. Nor is there any evaluation of the algorithm. The proposal of Liberman and Sproat (1992) is more sophisticated and allows for the frequency of the words in the compound. Their proposal involves comparing the mutual information between the two pairs of adjacent words and bracketing together whichever pair exhibits the highest. Again, there is no evaluation of the method other than a demonstration that four examples work correctly. The third proposal based on the adjacency model appears in Resnik (1993) and is rather more complex again. The SELECTIONAL ASSOCIATION between a predicate and a word is defined based on the contribution of the word to the conditional entropy of the predicate. The association between each pair of words in the compound is then computed by taking the maximum selectional association from all possible ways of regarding the pair as predicate and argument. Whilst this association metric is complicated, the decision procedure still follows the outline devised by Marcus (1980) above. Resnik (1993) used unambiguous noun compounds from the parsed Wall Street Journal (WSJ) co</context>
<context position="9002" citStr="Resnik (1993)" startWordPosition="1458" endWordPosition="1459">gnificant difference between the models is the predictions they make about the proportion &apos;Lauer and Dras (1994) give a formal construction motivating the algorithm given in Lauer (1994). 48 N1 N2 N3 Prefer N1 N2 N3 left-branching if L is more acceptable than R Adjacency Dependency Figure 1: Two analysis models and the associations they compare of left and right-branching compounds. Lauer and Dras (1994) show that under a dependency model, left-branching compounds should occur twice as often as right-branching compounds (that is twothirds of the time). In the test set used here and in that of Resnik (1993), the proportion of leftbranching compounds is 67% and 64% respectively. In contrast, the adjacency model appears to predict a proportion of 50%. The dependency model has also been proposed by Kobayasi et al (1994) for analysing Japanese noun compounds, apparently independently. Using a corpus to acquire associations, they bracket sequences of Kanji with lengths four to six (roughly equivalent to two or three words). A simple calculation shows that using their own preprocessing hueristics to guess a bracketing provides a higher accuracy on their test set than their statistical model does. This</context>
</contexts>
<marker>Resnik, 1993</marker>
<rawString>Resnik, Philip. 1993. Selection and Information: A Class-Based Approach to Lexical Relationships. PhD dissertation, University of Pennsylvania, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Resnik</author>
<author>M Hearst</author>
</authors>
<title>Structural Ambiguity and Conceptual Relations.</title>
<date>1993</date>
<booktitle>In Proceedings of the Workshop on Very Large Corpora: Academic and Industrial Perspectives,</booktitle>
<pages>58--64</pages>
<institution>Ohio State University,</institution>
<contexts>
<context position="11681" citStr="Resnik and Hearst (1993)" startWordPosition="1895" endWordPosition="1898">ning compounds were assigned either a left-branching or right-branching analysis. Table 1 shows the number of each kind and an example of each. Accuracy figures in all the results reported below were computed using only those 244 compounds which received a parse. 2.2 Conceptual Association One problem with applying lexical association to noun compounds is the enormous number of parameters required, one for every possible pair of nouns. Not only does this require a vast amount of memory space, it creates a severe data sparseness problem since we require at least some data about each parameter. Resnik and Hearst (1993) coined the term CONCEPTUAL ASSOCIATION to refer to association values computed between groups of words. By assuming that all words within a group behave similarly, the parameter space can be built in terms of the groups rather than in terms of the words. In this study, conceptual association is used with groups consisting of all categories from the 1911 version of Roget&apos;s thesaurus.4 Given two thesaurus categories t1 and t2, there is a parameter which represents the degree of acceptability of the structure [n1n2j where ni is a noun appearing in t1 and n2 appears in t2. By the assumption that </context>
</contexts>
<marker>Resnik, Hearst, 1993</marker>
<rawString>Resnik, P. and Hearst, M. 1993. Structural Ambiguity and Conceptual Relations. In Proceedings of the Workshop on Very Large Corpora: Academic and Industrial Perspectives, June 22, Ohio State University, pp58-64.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Ellen Ryder</author>
</authors>
<title>Ordered Chaos: The Interpretation of English Noun-Noun Compounds.</title>
<date>1994</date>
<journal>University of California Press Publications in Linguistics, Vol</journal>
<volume>123</volume>
<contexts>
<context position="1285" citStr="Ryder, 1994" startWordPosition="201" endWordPosition="202"> taming the natural language understanding task, then broad coverage NLP remains a jungle inhabited by wild beasts. For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983). Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prep</context>
</contexts>
<marker>Ryder, 1994</marker>
<rawString>Ryder, Mary Ellen. 1994. Ordered Chaos: The Interpretation of English Noun-Noun Compounds. University of California Press Publications in Linguistics, Vol 123.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frank Smadja</author>
</authors>
<title>Retrieving Collocations from Text: Xtract.</title>
<date>1993</date>
<booktitle>In Computational Linguistics, Vol 19(1), Special Issue on Using Large Corpora I,</booktitle>
<pages>143--177</pages>
<contexts>
<context position="3305" citStr="Smadja (1993)" startWordPosition="517" endWordPosition="518">ial parser to acquire training data, such machinery appears unnecessary for noun compounds. Brent (1993) has proposed the use of simple word patterns for the acquisition of verb subcategorisation information. An analogous approach to compounds is used in Lauer (1994) and constitutes one scheme evaluated below. While such patterns produce false training examples, the resulting noise often only introduces minor distortions. A more I.beral alternative is the use of a cooccurrence window. Yarowsky (1992) uses a fixed 100 word window to collect information used for sense disambiguation. Similarly, Smadja (1993) uses a six content word window to extract significant collocations. A range of windowed training schemes are employed below. Importantly, the use of a window provides a natural means of trading off the amount of data against its quality. When data sparseness undermines the system accuracy, a wider window may 47 admit a sufficient volume of extra accurate data to outweigh the additional noise. 1.3 Noun Compound Analysis There are at least four existing corpus-based algorithms proposed for syntactically analysing noun compounds. Only two of these have been subjected to evaluation, and in each c</context>
</contexts>
<marker>Smadja, 1993</marker>
<rawString>Smadja, Frank. 1993. Retrieving Collocations from Text: Xtract. In Computational Linguistics, Vol 19(1), Special Issue on Using Large Corpora I, pp143-177.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sparck Jones</author>
<author>Karen</author>
</authors>
<title>Compound Noun Interpretation Problems.</title>
<date>1983</date>
<booktitle>Computer Speech Processing. Prentice-Hall, NJ.</booktitle>
<pages>363--81</pages>
<editor>In Fallside, F. and Woods, W.A., editors,</editor>
<marker>Jones, Karen, 1983</marker>
<rawString>Sparck Jones, Karen. 1983. Compound Noun Interpretation Problems. In Fallside, F. and Woods, W.A., editors, Computer Speech Processing. Prentice-Hall, NJ. pp363-81.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Sproat</author>
</authors>
<title>English noun-phrase accent prediction for text-to-speech.</title>
<date>1994</date>
<journal>In Computer Speech and Language,</journal>
<volume>8</volume>
<pages>79--94</pages>
<contexts>
<context position="1630" citStr="Sproat, 1994" startWordPosition="249" endWordPosition="250">hing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993). The approach they propose involves computing lexical associations from a corpus and using these to select the correct parse. A similar architecture may be applied to noun compounds. In the experiments below the accuracy of such a system is measured. Comparisons are made acro</context>
</contexts>
<marker>Sproat, 1994</marker>
<rawString>Sproat, Richard. 1994. English noun-phrase accent prediction for text-to-speech. In Computer Speech and Language, Vol 8, pp79-94.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lucy Vanderwende</author>
</authors>
<title>SENS: The System for Evaluating Noun Sequences.</title>
<date>1993</date>
<booktitle>Natural Language Processing: The PLNLP Approach.</booktitle>
<pages>161--73</pages>
<editor>In Jensen, K., Heidorn, G. and Richardson, S., editors,</editor>
<publisher>Kluwer Academic,</publisher>
<contexts>
<context position="1612" citStr="Vanderwende, 1993" startWordPosition="246" endWordPosition="247">un compound is flourishing in modern language. It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984). While substantial work on noun compounds exists in both linguistics (e.g. Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable. This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994). The task is illustrated in example 1: Example 1 (a) [womanN [aidN worker4 (b) [[hydrogenN ionN] exchangeN] The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical. The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993). The approach they propose involves computing lexical associations from a corpus and using these to select the correct parse. A similar architecture may be applied to noun compounds. In the experiments below the accuracy of such a system is measured. Compari</context>
</contexts>
<marker>Vanderwende, 1993</marker>
<rawString>Vanderwende, Lucy. 1993. SENS: The System for Evaluating Noun Sequences. In Jensen, K., Heidorn, G. and Richardson, S., editors, Natural Language Processing: The PLNLP Approach. Kluwer Academic, pp161-73.</rawString>
</citation>
<citation valid="true">
<authors>
<author>ter Stal</author>
<author>Wilco</author>
</authors>
<title>Syntactic Disambiguation of Nominal Compounds Using Lexical and Conceptual Association. Memorandum UT-KBS-95-002,</title>
<date>1995</date>
<institution>University of Twente,</institution>
<location>Enschede, Netherlands.</location>
<marker>Stal, Wilco, 1995</marker>
<rawString>ter Stal, Wilco. 1995. Syntactic Disambiguation of Nominal Compounds Using Lexical and Conceptual Association. Memorandum UT-KBS-95-002, University of Twente, Enschede, Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Yarowsky</author>
</authors>
<title>Word-Sense Disambiguation Using Statistical Models of Roget&apos;s Categories Traincd on Large Corpora.</title>
<date>1992</date>
<booktitle>In Proceedings of COLING-92,</booktitle>
<pages>454--60</pages>
<location>Nantes, France,</location>
<contexts>
<context position="3197" citStr="Yarowsky (1992)" startWordPosition="501" endWordPosition="502"> with and without machine tagging of the corpus. 1.2 Training Schemes While Hindle and Rooth (1993) use a partial parser to acquire training data, such machinery appears unnecessary for noun compounds. Brent (1993) has proposed the use of simple word patterns for the acquisition of verb subcategorisation information. An analogous approach to compounds is used in Lauer (1994) and constitutes one scheme evaluated below. While such patterns produce false training examples, the resulting noise often only introduces minor distortions. A more I.beral alternative is the use of a cooccurrence window. Yarowsky (1992) uses a fixed 100 word window to collect information used for sense disambiguation. Similarly, Smadja (1993) uses a six content word window to extract significant collocations. A range of windowed training schemes are employed below. Importantly, the use of a window provides a natural means of trading off the amount of data against its quality. When data sparseness undermines the system accuracy, a wider window may 47 admit a sufficient volume of extra accurate data to outweigh the additional noise. 1.3 Noun Compound Analysis There are at least four existing corpus-based algorithms proposed fo</context>
</contexts>
<marker>Yarowsky, 1992</marker>
<rawString>Yarowsky, David. 1992. Word-Sense Disambiguation Using Statistical Models of Roget&apos;s Categories Traincd on Large Corpora. In Proceedings of COLING-92, Nantes, France, pp454-60.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>