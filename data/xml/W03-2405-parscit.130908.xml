<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000004">
<title confidence="0.814791">
The Annotation Process in the Turkish Treebank
Nart B. Atalay
</title>
<author confidence="0.751392">
Informatics Inst.
</author>
<affiliation confidence="0.639867">
Middle East Technical Univ.
Ankara, Turkey
</affiliation>
<email confidence="0.9967">
bedin@ii.metu.edu.tr
</email>
<note confidence="0.506608">
Kemal Mazer
Fac. of Eng. and Natural Sci.
</note>
<author confidence="0.348712">
Sabanct Univ.
</author>
<affiliation confidence="0.425083">
Istanbul, Turkey
</affiliation>
<email confidence="0.9965">
oflazer@sabanci.edu
</email>
<note confidence="0.4996675">
Bilge Say
Informatics Inst.
</note>
<author confidence="0.456332">
Middle East Technical Univ.
</author>
<affiliation confidence="0.519287">
Ankara, Turkey
</affiliation>
<email confidence="0.992424">
bsay@ii.metu.edu.tr
</email>
<sectionHeader confidence="0.979713" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999938555555556">
We present a progress report of the
Turkish Treebank concentrating on vari-
ous aspects of its design and implemen-
tation. In addition to a review of the cor-
pus compilation process and the design
of the annotation scheme, we describe
the details of various pre-processing
stages and the computer-assisted anno-
tation process.
</bodyText>
<sectionHeader confidence="0.995461" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.997037">
Recent years have seen an increase in the con-
struction of treebank resources for a variety of
languages and some of the treebank compilations
have used an annotation scheme employing a de-
pendency grammar representation (Abeille, 2003;
Hinrichs and Simov, 2002). The Turkish Treebank
Project (Oflazer et al., 2003; Say et al., 2002) is
a treebank compilation project comprising written
Turkish samples, with full morphological and sur-
face dependency annotation.
In Section 2, we review the relevant aspects of
the METU Turkish Corpus, which is the source of
the text samples for the treebank. In Section 3,
the design of the annotation scheme is reviewed
briefly, followed by a detailed account of the mor-
phosyntactic preprocessing in the treebank in Sec-
tion 4. In Section 5, we present the annotation tool
that is used for assisting the manual disambigua-
tion of morphological analyses and the annotation
of dependency relations. Finally, the current status
of the treebank is reviewed.
</bodyText>
<sectionHeader confidence="0.955318" genericHeader="method">
2 Corpus Description
</sectionHeader>
<bodyText confidence="0.999966545454545">
The Turkish Treebank is a subcorpus of the METU
Turkish Corpus, which is a 2 million word cor-
pus of post-1990 written Turkish, sampled from
various genres (Say et al., 2002). No representa-
tiveness scheme was applied statistically, but care
was taken to balance the corpus across genres (ap-
proximately 16 main genres) and authors to the
extent made possible by the copyright permis-
sion processes. The corpus has 2000-word sam-
ples. The samples are annotated in conformance
with XCES, short for XML-based Corpus Encod-
ing Standard which is based on TEl (Text En-
coding Initiative) guidelines (Sperberg-McQueen
and Burnard, 1994; Ide, 1996). The annotation
scheme applied to the whole corpus is conformant
with XCES on typographic-general level which in-
cludes tags for bibliographical information, para-
graphs, lists, highlighted items, etc. Human er-
ror is minimized by using in-house developed an-
notation software, an XCES editor and annotation
control procedures. The corpus will be announced
with a supporting query workbench, which is cur-
rently under development and includes searching
for terms and with regular expressions, along with
various saving, and viewing options.
The Turkish Treebank is aimed at including
10,000 sentences that are annotated with morpho-
logical and syntactic annotations. The follow-
ing sections describe the details of the annotation
scheme and the annotation process. We include
whole samples from the METU Turkish Corpus in
the treebank and try to representatively select sam-
ples from the genres present in the main corpus.
</bodyText>
<page confidence="0.999359">
33
</page>
<sectionHeader confidence="0.888864" genericHeader="method">
3 Design of the Annotation Scheme
</sectionHeader>
<bodyText confidence="0.999595483870968">
The treebank corpus has detailed annotations at
both the lexical level and the syntactic level. At the
lexical level we annotate each token with its un-
ambiguous morphological analysis (though multi-
word collocations are treated a bit differently).
These morphological analyses are encoded us-
ing an extensive set of inflectional, derivational
and, where relevant, morphosemantic features (see
(Oflazer et al., 2003) for the details of such fea-
tures.) Since Turkish is an agglutinative lan-
guage with very productive derivational phenom-
ena, derivations are marked explicitly as they get
involved in syntactic relations: groups of inflec-
tional features separated by derivational markers
are treated as full-fledged syntactic units as we
will see below.
At the syntactic level, surface syntactic relations
are encoded using a set of dependency relation-
ships. Our rationale for choosing this represen-
tation was elaborated earlier (Oflazer et al., 2003).
Even though we have encountered some complica-
tions when such representation schemes were ap-
plied to real sentences in corpora we have made
principled amendments to the representation to al-
leviate almost all problems encountered. We have
completed an annotation manual that guides peo-
ple not familiar with the annotation scheme to an-
notate sentences or interpret annotations (Say and
Oflazer, 2002).
Currently the following surface syntactic rela-
tions are used to annotate the dependency links.
</bodyText>
<listItem confidence="0.990913333333333">
1. Sentence 2. Subject
3. Object 4. Modifier
5. Modifier 6. Determiner
7. Focus-Particle 8. Question-Particle
9. Vocative 10. Classifier
11. Dative Adjunct 12. Ablative Adjunct
13. Locative Adjunct 14. Instrum. Adjunct
15. Coordination 16. Relativizer
17. Possessive
</listItem>
<bodyText confidence="0.995109571428571">
In Figure 1 the following sentence is shown
with dependency links •
Bu cocuk okuldan erken geldi.
This child school+Abl early come+Past+3sg.
This child came from the school early.
The final period is considered to be the head of
the whole sentence and the direction of the arrow
</bodyText>
<figure confidence="0.4452585">
ddum su bie qb I. d
Bu cocuk okuldan erken geld.
</figure>
<figureCaption confidence="0.976754">
Figure 1: Surface Dependency Relations of an Ex-
ample Sentence
</figureCaption>
<bodyText confidence="0.948374">
is from the dependent to the head.
</bodyText>
<sectionHeader confidence="0.982776" genericHeader="method">
4 Morphosyntactic Preprocessing
</sectionHeader>
<bodyText confidence="0.999913636363636">
Since our representation scheme relies extensively
on proper and unambiguous identification of mor-
phological features, we use a full-scale mor-
phological analyzer for Turkish (Oflazer, 1993)
built using Xerox Research Centre Finite State
Toolkit (Karttunen and Beesley, 2003). We then
use a postprocessor that identifies various non-
lexicalized and lexicalized collocations, so that de-
pendency relations involving the components of
such collocations can be more perspicuously ex-
pressed.
</bodyText>
<subsectionHeader confidence="0.9976">
4.1 Morphological Analysis
</subsectionHeader>
<bodyText confidence="0.948646">
The morphological analyzer takes tokens coming
from a tokenizer module and produces all possible
morphological interpretations of the token. The
general representation of analyses comprises a se-
quence of inflectional groups separated by deriva-
tional boundary markers.
root+Infli-DB+Inf12&apos;DB+• • •^DB+Infin
where I n fli denote relevant inflectional features
including the part-of-speech for the root or any of
the forms. For instance, the simple derived mod-
ifier evdeki (... that is at the house) will have the
morphological analysis
ev+Noun+A3sg+Pnon+Loc+^DB+Adj+Rel
and would be represented by a sequence 2 inflec-
tional groups:
1. ev+Noun+A3sg+Pnon+Loc 2. +Ad +Rel
The grammatical role of this word as a modifier
is determined by the 2nd inflectional group while
any preceding modifiers (of ev (house)) to the
left of this token may link to the first inflectional
group.
se nte
</bodyText>
<page confidence="0.968852">
34
</page>
<bodyText confidence="0.999873833333333">
The morphological analysis process is very fast
and can process thousands of tokens per second.
The morphological analysis process also employs
an unknown word processor but any tokens still
not given an analysis could be manually annotated
later.
</bodyText>
<subsectionHeader confidence="0.999723">
4.2 Preprocessing of Collocations
</subsectionHeader>
<bodyText confidence="0.9976085">
A collocation, for our purposes, is defined as a
group of lexical items that would better be con-
sidered as a single unit in terms of the dependency
relations in sentences. In regard of this definition,
collocations can be classified into the following
groups:
</bodyText>
<listItem confidence="0.993664416666667">
• word sequences with certain patterns that can
be generated productively according to cer-
tain rules (henceforth non-lexicalized collo-
cations),
• proper nouns that are composed of more than
one word,
• token sequences that express date or time,
• idiomatic word sequences with specific usage
whose semantics is non-compositional,
• compound verb forms which are formed by
a lexically adjacent, direct or oblique object
and a verb.
</listItem>
<bodyText confidence="0.99804085106383">
The merging of a group of lexemes into a single
one and the attachment of morphological analy-
sis to the resultant lexeme is carried by two post-
processing processes that follow the morphologi-
cal analysis process.
The first process handles non-lexicalized
collocations. Non-lexicalized collocations
are sequences of 2 or 3 tokens which
almost-always involve some form of par-
tial or full reduplication of word forms.1
For instance, the marked verb sequence
gelir gelmez (gel+Verb+Pos+Aor+A3sg
gel+Verb+Neg+Aor+A3sg) actually func-
tions as a temporal adverbial meaning as soon as
...comes.
&apos;Note that these formations (usually involving full or par-
tial reduplications of strings of the sort w w, w x w or wx wz)
are beyond the formal power of finite state mechanisms hence
are not dealt within the finite state morphological analyzer.
The postprocessor takes the morphologically
analyzed token sequence as input. The colloca-
tional rules that will be operated on corpus can
be entered interactively or can be given as a con-
figuration file to the program. The program ap-
plies rules one by one and generates two output
files. One is collocationally preprocessed corpus
file and the other is the list of collocations in the
corpus that were processed. For instance, for non-
lexicalized collocations like above (for which the
verbal root can be any verb), the postprocessor
rule searches for two adjacent tokens whose possi-
bly ambiguous morphological analyses have anal-
yses matching the patterns specified: the first to-
ken would have an aorist marker with positive po-
larity and the second token would have the same
root, also an aorist marker but a negative polarity.
These tokens are then coalesced into a single token
gider_gitmez with the new morphological analysis
git+Verb+Pos^DB+Adverb+AsSoonAs.
It can be noted that any modifiers and the com-
plements of the verb git, preceding the collocation
will link to the first inflectional group while this
collocation will link as a modifier to a verb via the
second inflectional group. Thus the overall repre-
sentational scheme is maintained.
Currently the following nonlexicalized colloca-
tions are implemented:
</bodyText>
<listItem confidence="0.9976985">
• Duplicated optative and 3sg verbs acting as
manner adverb (e.g., ko§a ko§a), meaning
&amp;quot;by.. verb-ing&amp;quot;,
• duplicated verbal and derived adverbial
forms from the same root acting as a temporal
adverb (e.g., bildi bileli) meaning &amp;quot;ever since
verb-ed&amp;quot;,
• duplicated adjectives acting as a manner ad-
verb (e.g., giizel giizel), meaning &amp;quot;adj-ly&amp;quot;,
• duplicated nouns acting as manner adverb
</listItem>
<bodyText confidence="0.9030218">
(e.g., ev ev), meaning &amp;quot;noun by noun&amp;quot;
A follow-up process similarly handles the semi-
lexicalized collocations where one of the tokens is
variable while the other is fixed, and lexicalized
collocations.
</bodyText>
<page confidence="0.997963">
35
</page>
<subsectionHeader confidence="0.996581">
4.3 Syntactic Preprocessing
</subsectionHeader>
<bodyText confidence="0.9996335625">
Although the main burden of dependency rela-
tion annotation process was and is still carried
out by human annotators, our annotation tool pro-
vides some simple syntactic preprocessing which
attempts to identify automatically certain relations
with a very high precision. This preprocessor uses
heuristic rules that identifies relations between in-
flectional groups and automatically tags the rela-
tions. If the annotator disagrees with the anno-
tations, s/he can modify the relations later in the
annotation tool.
The linking rules implemented exploit the fact
that the functions of nominal inflectional groups
are essentially determined by the case marking
features. The following heuristic rules are imple-
mented:
</bodyText>
<listItem confidence="0.886386">
• If a word final inflectional group has an ac-
cusative case marker and a suitable postposi-
tion follows it immediately, then the nominal
inflectional group is linked to the postposi-
tion with the label OBJECT.
• If the next token is not a postposition then,
we locate a verbal inflectional group to the
right and link the noun as an OBJECT of the
nearest of such verbal inflectional group.
• Similarly a dative case-marked nominal word
final inflectional group can link to a suitable
postposition that immediately follows it, as
an OBJECT and if no postposition is found
then it can link as a DATIVE ADJUNCT to a
verbal inflectional group.
• A genitive case marked nominal word final
</listItem>
<bodyText confidence="0.891524857142857">
inflectional group can link to a following
noun as a POSSESSOR provided some ad-
ditional agreement criteria are met. If this
is not possible but an infinitive or participle
nominal inflectional group is found, the gen-
itive case-marked inflectional group is linked
as the SUBJECT of the (subordinate clause
headed by the) verb preceding the infinitive
or the participle inflectional group.
The dependency relations that are handled in the
syntactic preprocessing phase appear to annotators
as default links. Annotators check these links and
report errors that are encountered regarding the
tags. This process enables refining of the rules.
</bodyText>
<sectionHeader confidence="0.361684" genericHeader="method">
5 Tagging with the Annotation Tool
</sectionHeader>
<bodyText confidence="0.999962">
To facilitate the tagging process for annotators, an
annotation tool has been implemented in Visual
Basic. This program helps annotators to easily tag
dependency relations by enabling visual browsing
and marking. The input of the program is the mor-
phologically analyzed and preprocessed text. The
output is a morphologically disambiguated and an-
notated treebank which is encoded according to
XML document format. The tagging process re-
quires two steps: morphological disambiguation
and dependency tagging.
The first task of an annotator is to disambiguate
morphological analysis (see Figure 2). The word
and its morphological analyses are shown to the
user in this screen. Morphological analyses are
presented in text boxes and the user selects the
appropriate analysis by clicking on the relevant
check box. If some analyses are incorrect, the an-
notator can edit them by typing into the text boxes.
After all words in a sentence are morphologically
disambiguated, the annotator can pass to the sec-
ond phase of annotation.
After finishing the disambiguation process, the
user directs the program to the dependency screen
(see Figure 3). In this part, the word, its posi-
tional index and the selected morphological anal-
ysis of the word are shown to the user. Three
combo boxes are attached to each word. These
combo boxes enable user to select the head word,
the head derivational boundary and the type of the
dependency link, respectively.2 After dependency
relation annotation is completed, the user saves his
work in the output format.
Both disambiguation and dependency tagging
screen includes a text box for taking notes. It is
possible to modify the list of the dependency tags.
</bodyText>
<footnote confidence="0.541577333333333">
2It is possible to add a covert element (NULL) to the sen-
tence where necessitated by the sentence structure, e.g. ellip-
tical sentences involving coordination.
</footnote>
<page confidence="0.994913">
36
</page>
<note confidence="0.442793">
6 Current Status and Difficulties
Encountered
</note>
<bodyText confidence="0.99996416">
Currently, the preprocessing and the annotation
tool software are completed and tested, and we are
halfway through annotating 10,000 sentences. The
integration of treebank search into the query work-
bench is also under development. A viewing tool
that allows the user to see the selected morphosyn-
tactically annotated sentences as dependency di-
agrams has also been developed to be integrated
into the query workbench.
As expected we have encountered numerous
difficulties in all these processes. They fall into
three different categories: First, agreement on the
annotation scheme so that it has large coverage but
is still practical to apply, has been difficult. We
have left out some tags, such as thematic role tags,
that at the outset we thought could be included.
Second, the development of the supporting an-
notation software took more time than planned,
mainly due to project personnel turnover and fi-
nancial support difficulties. Finally, the manual
annotation process has as expected proved to be
quite time consuming and the development and
testing of the syntactic preprocessing part which
speeds up the process had to wait for the accumu-
lation of substantial test data.
</bodyText>
<sectionHeader confidence="0.990949" genericHeader="conclusions">
7 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.999955705882353">
To our knowledge, the Turkish treebank is the first
sizeable effort to develop a principled treebank
for Turkish with accompanying annotation support
tools and search software. There are, though, sev-
eral items on our wish list, which might be formed
into further projects: one is to increase the number
of tagged sentences in the treebank. Additional
and alternative annotation schemes applied on the
same subcorpus of the METU Turkish corpus will
also be valuable: with more involvement from lin-
guists working on Turkish, we could add to exist-
ing annotation, for example, tags for information
structure. Alternative annotation schemes adher-
ing to different grammar formalisms will enable
comparative evaluation of the syntactic structure
both for research in linguistics and computational
linguistics.
</bodyText>
<sectionHeader confidence="0.970391" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.99992925">
We would like to express our gratitude to
TOBITAK (Project No: EEEAG 199E026) for
their financial support. Many thanks to Bari§
Demiral, Hacer Uke, Dilek H. Tar, Gokhan Tiir,
irfan Nuri Karaca, cagn Kayadelen, Umut Ozge
and participants of METU Turkish Corpus Project
for their contributions to various phases of this
project.
</bodyText>
<sectionHeader confidence="0.997733" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998780088235294">
Anne AbelIle, editor. 2003. Building and Exploit-
ing Syntactically-annotated Corpora. Kluwer Aca-
demic Publishers.
Erhard Hinrichs and Kiril Simov, editors. 2002. Pro-
ceedings of the First Workshop on Treebanks and
Linguistic Theories. Available on the WWW as:
http://www.B ulTreeB ank.org/Proceedings.html.
Nancy Ide, 1996. Corpus Encoding Stan-
dard: Document CES 1, Version 1.4, October.
http://www.cs.vassar.edu/CES/.
Lauri Karttunen and Kenneth R. Beesley. 2003. Finite-
State Morphology: Xerox Tools And Techniques.
CSLI Publications. Stanford University.
Kemal Oflazer, Bilge Say, Dilek Zeynep Hakkani-Tiir,
and Gokhan Tun 2003. Building a turkish tree-
bank. In Anne Abeille, editor, Building and Exploit-
ing Syntactically-annotated Corpora. Kluwer Aca-
demic Publishers.
Kemal Oflazer. 1993. Two-level description of Turk-
ish morphology. In Proceedings of the Sixth Con-
ference of the European Chapter of the Association
for Computational Linguistics, April. A full version
appears in Literary and Linguistic Computing, Vol.9
No.2, 1994.
Bilge Say and Kemal Oflazer, 2002. Annotation Man-
ual for Turkish Treebank. June 2002.
Bilge Say, Deniz Zeyrek, Kemal Oflazer, and Umut
Ozge. 2002. Development of a corpus and a tree-
bank for present-day written turkish. 11th Interna-
tional Conference on Turkish Linguistics.
C. M. Sperberg-McQueen and Lou Burnard, 1994.
Guidelines for Electronic Text Encoding and Inter-
change (TEI P3). Chicago, Oxford: Text Encoding
Initiative.
</reference>
<page confidence="0.995725">
37
</page>
<figure confidence="0.9141695">
Mac Banka Projesi - [Giirde -CABelgelerinAhlarrIminor-nantWBPROJEIKopya 11‘trial.161
Dosya Secenekler Yardim
</figure>
<figureCaption confidence="0.977472">
Figure 2: Disambiguation Screen of Annotation Tool
</figureCaption>
<figure confidence="0.998898577777778">
Comic
E le
14kilendir
Geri
bu+Pron+DemonsP+A3sg+Pnon+Nom
1.7
bu+D et
ybnetici+Noun+A3p1+Pnon+Nom
yonetide
yonet-Nerb+Pos DB Aoun-F.Agt-FA3p5FPnon-FNom
3 ken dilerini lkendi+Pron+ReflexP+A3p1+P3p1+Acc
4 mkilli 1,7 akil+Noun+A3s5+Pnon+NoreDB+Adj+With
&apos;
akil+Noun+A3sg+Pnon+Norn-DB+Adj+With&apos;DB+Noun+Zero
+A3sg+Pnon+Nom
5 bizi 1.7 biz+Pron+PersP+Al pl+Pnon+Acc
biz+Noun+A3sg+Pnon+Acc
biz+N oun+A3sg+P3sg+N om
(1) Bu (2) yoneticiler (3) kendilerini (4) akIlil (5) bizi (6) ise (7)
aptal (8) sandar (9) .
Mac Banka Projesi - Dapraklar -11
Dosya Secene ler Yardim
Comic
Ekle
12 •±11 •±1DETERMIN •••
yoneticiler
18 111 •.-11SLIBJECT
RPM
Err
13
1 _LI
(1) Bu (2) yone
• sanirlar (9) .
SUBJECT
OBJECT
MODIFIER
SPECIFIER
DETERMINE
DATIVE ADJ
ABLATIVE
LOCATIVE A
endilerini (4) akilli (5) bizi (6) ise (7) aptal (8)
Geri D&apos;on
Kaydet
kendi+Pron+ReflexP+A3p1+P3p1+Acc
</figure>
<figureCaption confidence="0.999043">
Figure 3: Dependency Tagging Screen of Annotation Tool
</figureCaption>
<page confidence="0.99763">
38
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.068886">
<title confidence="0.994113">The Annotation Process in the Turkish Treebank</title>
<author confidence="0.666042">B Nart</author>
<affiliation confidence="0.9336895">Informatics Inst. Middle East Technical Univ.</affiliation>
<address confidence="0.991655">Ankara, Turkey</address>
<email confidence="0.978337">bedin@ii.metu.edu.tr</email>
<title confidence="0.3908335">Kemal Fac. of Eng. and Natural</title>
<author confidence="0.446677">Sabanct</author>
<email confidence="0.969334">oflazer@sabanci.edu</email>
<author confidence="0.623427">Bilge Say</author>
<affiliation confidence="0.840637">Informatics Middle East Technical Univ.</affiliation>
<address confidence="0.800835">Ankara,</address>
<email confidence="0.995343">bsay@ii.metu.edu.tr</email>
<abstract confidence="0.9976456">We present a progress report of the Turkish Treebank concentrating on various aspects of its design and implementation. In addition to a review of the corpus compilation process and the design of the annotation scheme, we describe the details of various pre-processing stages and the computer-assisted annotation process.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>Building and Exploiting Syntactically-annotated Corpora.</title>
<date>2003</date>
<editor>Anne AbelIle, editor.</editor>
<publisher>Kluwer Academic Publishers.</publisher>
<marker>2003</marker>
<rawString>Anne AbelIle, editor. 2003. Building and Exploiting Syntactically-annotated Corpora. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<date>2002</date>
<booktitle>Proceedings of the First Workshop on Treebanks and Linguistic Theories. Available on the WWW as: http://www.B ulTreeB ank.org/Proceedings.html.</booktitle>
<editor>Erhard Hinrichs and Kiril Simov, editors.</editor>
<marker>2002</marker>
<rawString>Erhard Hinrichs and Kiril Simov, editors. 2002. Proceedings of the First Workshop on Treebanks and Linguistic Theories. Available on the WWW as: http://www.B ulTreeB ank.org/Proceedings.html.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy Ide</author>
</authors>
<title>Corpus Encoding Standard:</title>
<date>1996</date>
<booktitle>Document CES 1, Version 1.4,</booktitle>
<note>http://www.cs.vassar.edu/CES/.</note>
<contexts>
<context position="2315" citStr="Ide, 1996" startWordPosition="360" endWordPosition="361">a subcorpus of the METU Turkish Corpus, which is a 2 million word corpus of post-1990 written Turkish, sampled from various genres (Say et al., 2002). No representativeness scheme was applied statistically, but care was taken to balance the corpus across genres (approximately 16 main genres) and authors to the extent made possible by the copyright permission processes. The corpus has 2000-word samples. The samples are annotated in conformance with XCES, short for XML-based Corpus Encoding Standard which is based on TEl (Text Encoding Initiative) guidelines (Sperberg-McQueen and Burnard, 1994; Ide, 1996). The annotation scheme applied to the whole corpus is conformant with XCES on typographic-general level which includes tags for bibliographical information, paragraphs, lists, highlighted items, etc. Human error is minimized by using in-house developed annotation software, an XCES editor and annotation control procedures. The corpus will be announced with a supporting query workbench, which is currently under development and includes searching for terms and with regular expressions, along with various saving, and viewing options. The Turkish Treebank is aimed at including 10,000 sentences tha</context>
</contexts>
<marker>Ide, 1996</marker>
<rawString>Nancy Ide, 1996. Corpus Encoding Standard: Document CES 1, Version 1.4, October. http://www.cs.vassar.edu/CES/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lauri Karttunen</author>
<author>Kenneth R Beesley</author>
</authors>
<title>FiniteState Morphology: Xerox Tools And Techniques.</title>
<date>2003</date>
<publisher>CSLI Publications. Stanford University.</publisher>
<contexts>
<context position="5707" citStr="Karttunen and Beesley, 2003" startWordPosition="877" endWordPosition="880">child school+Abl early come+Past+3sg. This child came from the school early. The final period is considered to be the head of the whole sentence and the direction of the arrow ddum su bie qb I. d Bu cocuk okuldan erken geld. Figure 1: Surface Dependency Relations of an Example Sentence is from the dependent to the head. 4 Morphosyntactic Preprocessing Since our representation scheme relies extensively on proper and unambiguous identification of morphological features, we use a full-scale morphological analyzer for Turkish (Oflazer, 1993) built using Xerox Research Centre Finite State Toolkit (Karttunen and Beesley, 2003). We then use a postprocessor that identifies various nonlexicalized and lexicalized collocations, so that dependency relations involving the components of such collocations can be more perspicuously expressed. 4.1 Morphological Analysis The morphological analyzer takes tokens coming from a tokenizer module and produces all possible morphological interpretations of the token. The general representation of analyses comprises a sequence of inflectional groups separated by derivational boundary markers. root+Infli-DB+Inf12&apos;DB+• • •^DB+Infin where I n fli denote relevant inflectional features incl</context>
</contexts>
<marker>Karttunen, Beesley, 2003</marker>
<rawString>Lauri Karttunen and Kenneth R. Beesley. 2003. FiniteState Morphology: Xerox Tools And Techniques. CSLI Publications. Stanford University.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Kemal Oflazer</author>
</authors>
<title>Bilge Say, Dilek Zeynep Hakkani-Tiir, and Gokhan Tun 2003. Building a turkish treebank.</title>
<booktitle>Building and Exploiting Syntactically-annotated Corpora.</booktitle>
<editor>In Anne Abeille, editor,</editor>
<publisher>Kluwer Academic Publishers.</publisher>
<marker>Oflazer, </marker>
<rawString>Kemal Oflazer, Bilge Say, Dilek Zeynep Hakkani-Tiir, and Gokhan Tun 2003. Building a turkish treebank. In Anne Abeille, editor, Building and Exploiting Syntactically-annotated Corpora. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kemal Oflazer</author>
</authors>
<title>Two-level description of Turkish morphology.</title>
<date>1993</date>
<booktitle>In Proceedings of the Sixth Conference of the European Chapter of the Association for Computational Linguistics, April. A full version appears in Literary and Linguistic Computing, Vol.9 No.2,</booktitle>
<contexts>
<context position="5622" citStr="Oflazer, 1993" startWordPosition="867" endWordPosition="868">ce is shown with dependency links • Bu cocuk okuldan erken geldi. This child school+Abl early come+Past+3sg. This child came from the school early. The final period is considered to be the head of the whole sentence and the direction of the arrow ddum su bie qb I. d Bu cocuk okuldan erken geld. Figure 1: Surface Dependency Relations of an Example Sentence is from the dependent to the head. 4 Morphosyntactic Preprocessing Since our representation scheme relies extensively on proper and unambiguous identification of morphological features, we use a full-scale morphological analyzer for Turkish (Oflazer, 1993) built using Xerox Research Centre Finite State Toolkit (Karttunen and Beesley, 2003). We then use a postprocessor that identifies various nonlexicalized and lexicalized collocations, so that dependency relations involving the components of such collocations can be more perspicuously expressed. 4.1 Morphological Analysis The morphological analyzer takes tokens coming from a tokenizer module and produces all possible morphological interpretations of the token. The general representation of analyses comprises a sequence of inflectional groups separated by derivational boundary markers. root+Infl</context>
</contexts>
<marker>Oflazer, 1993</marker>
<rawString>Kemal Oflazer. 1993. Two-level description of Turkish morphology. In Proceedings of the Sixth Conference of the European Chapter of the Association for Computational Linguistics, April. A full version appears in Literary and Linguistic Computing, Vol.9 No.2, 1994.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bilge Say</author>
<author>Kemal Oflazer</author>
</authors>
<title>Annotation Manual for Turkish Treebank.</title>
<date>2002</date>
<contexts>
<context position="4612" citStr="Say and Oflazer, 2002" startWordPosition="708" endWordPosition="711">its as we will see below. At the syntactic level, surface syntactic relations are encoded using a set of dependency relationships. Our rationale for choosing this representation was elaborated earlier (Oflazer et al., 2003). Even though we have encountered some complications when such representation schemes were applied to real sentences in corpora we have made principled amendments to the representation to alleviate almost all problems encountered. We have completed an annotation manual that guides people not familiar with the annotation scheme to annotate sentences or interpret annotations (Say and Oflazer, 2002). Currently the following surface syntactic relations are used to annotate the dependency links. 1. Sentence 2. Subject 3. Object 4. Modifier 5. Modifier 6. Determiner 7. Focus-Particle 8. Question-Particle 9. Vocative 10. Classifier 11. Dative Adjunct 12. Ablative Adjunct 13. Locative Adjunct 14. Instrum. Adjunct 15. Coordination 16. Relativizer 17. Possessive In Figure 1 the following sentence is shown with dependency links • Bu cocuk okuldan erken geldi. This child school+Abl early come+Past+3sg. This child came from the school early. The final period is considered to be the head of the who</context>
</contexts>
<marker>Say, Oflazer, 2002</marker>
<rawString>Bilge Say and Kemal Oflazer, 2002. Annotation Manual for Turkish Treebank. June 2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bilge Say</author>
<author>Deniz Zeyrek</author>
<author>Kemal Oflazer</author>
<author>Umut Ozge</author>
</authors>
<title>Development of a corpus and a treebank for present-day written turkish.</title>
<date>2002</date>
<booktitle>11th International Conference on Turkish Linguistics.</booktitle>
<contexts>
<context position="1005" citStr="Say et al., 2002" startWordPosition="147" endWordPosition="150">k concentrating on various aspects of its design and implementation. In addition to a review of the corpus compilation process and the design of the annotation scheme, we describe the details of various pre-processing stages and the computer-assisted annotation process. 1 Introduction Recent years have seen an increase in the construction of treebank resources for a variety of languages and some of the treebank compilations have used an annotation scheme employing a dependency grammar representation (Abeille, 2003; Hinrichs and Simov, 2002). The Turkish Treebank Project (Oflazer et al., 2003; Say et al., 2002) is a treebank compilation project comprising written Turkish samples, with full morphological and surface dependency annotation. In Section 2, we review the relevant aspects of the METU Turkish Corpus, which is the source of the text samples for the treebank. In Section 3, the design of the annotation scheme is reviewed briefly, followed by a detailed account of the morphosyntactic preprocessing in the treebank in Section 4. In Section 5, we present the annotation tool that is used for assisting the manual disambiguation of morphological analyses and the annotation of dependency relations. Fi</context>
</contexts>
<marker>Say, Zeyrek, Oflazer, Ozge, 2002</marker>
<rawString>Bilge Say, Deniz Zeyrek, Kemal Oflazer, and Umut Ozge. 2002. Development of a corpus and a treebank for present-day written turkish. 11th International Conference on Turkish Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C M Sperberg-McQueen</author>
<author>Lou Burnard</author>
</authors>
<date>1994</date>
<booktitle>Guidelines for Electronic Text Encoding and Interchange (TEI P3).</booktitle>
<institution>Text Encoding Initiative.</institution>
<location>Chicago, Oxford:</location>
<contexts>
<context position="2303" citStr="Sperberg-McQueen and Burnard, 1994" startWordPosition="356" endWordPosition="359">Description The Turkish Treebank is a subcorpus of the METU Turkish Corpus, which is a 2 million word corpus of post-1990 written Turkish, sampled from various genres (Say et al., 2002). No representativeness scheme was applied statistically, but care was taken to balance the corpus across genres (approximately 16 main genres) and authors to the extent made possible by the copyright permission processes. The corpus has 2000-word samples. The samples are annotated in conformance with XCES, short for XML-based Corpus Encoding Standard which is based on TEl (Text Encoding Initiative) guidelines (Sperberg-McQueen and Burnard, 1994; Ide, 1996). The annotation scheme applied to the whole corpus is conformant with XCES on typographic-general level which includes tags for bibliographical information, paragraphs, lists, highlighted items, etc. Human error is minimized by using in-house developed annotation software, an XCES editor and annotation control procedures. The corpus will be announced with a supporting query workbench, which is currently under development and includes searching for terms and with regular expressions, along with various saving, and viewing options. The Turkish Treebank is aimed at including 10,000 s</context>
</contexts>
<marker>Sperberg-McQueen, Burnard, 1994</marker>
<rawString>C. M. Sperberg-McQueen and Lou Burnard, 1994. Guidelines for Electronic Text Encoding and Interchange (TEI P3). Chicago, Oxford: Text Encoding Initiative.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>