<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000021">
<title confidence="0.995957">
Temiar Reduplication in One-Level Prosodic Morphology
</title>
<author confidence="0.995308">
Markus Walther
</author>
<affiliation confidence="0.998349">
University of Marburg
</affiliation>
<address confidence="0.965673">
FB09/IGS, Wilhelm-R¬opke-Str. 6A, D-35032 Marburg, Germany
</address>
<email confidence="0.994189">
Markus.Walther@mailer.uni-marburg.de
</email>
<sectionHeader confidence="0.997317" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999518125">
Temiar reduplication is a difficult piece of prosodic
morphology. This paper presents the first com-
putational analysis of Temiar reduplication, us-
ing the novel finite-state approach of One-Level
Prosodic Morphology originally developed by
Walther (1999b, 2000). After reviewing both the
data and the basic tenets of One-level Prosodic Mor-
phology, the analysis is laid out in some detail,
using the notation of the FSA Utilities finite-state
toolkit (van Noord 1997). One important discovery
is that in this approach one can easily define a regu-
lar expression operator which ambiguously scans a
string in the left- or rightward direction for a cer-
tain prosodic property. This yields an elegant ac-
count of base-length-dependent triggering of redu-
plication as found in Temiar.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.974121754098361">
Temiar is an Austroasiatic language of the Mon-
Khmer group spoken by a variety of tribal people in
West Malaysia (Benjamin, 1976). Its intricate mor-
phological system has received some attention in the
theoretical literature. The main focus has been on
the aspectual morphology of verbs, where an inter-
esting pattern of partial reduplication emerges that
is sensitive to the size of the verbal root. For exam-
ple, in the active continuative, ‘to eat’ redu-
plicates both the initial /g/ and the final /l/ of its
monosyllabic base . In contrast, bisyllabic
‘to shoot’ comes out as , where only the final
/h/ is copied, this time as an infix.
Temiar reduplication thus appears to be a suitably
rich testing ground for a novel approach to redu-
plication developed by (Walther, 1999b; Walther,
2000) within a finite-state framework. Even though
that approach, One-Level Prosodic Morphology,
was presented from the outset as being generally
applicable, it has been proven time and time again
that only concrete empirical application of a par-
ticular approach to computational morphology and
phonology will fully reveal its inherent virtues and
weaknesses. As an example, (Beesley, 1998) re-
ports that it was actual experimentation with gram-
mars of word-formation in Arabic and Hungarian
which fully revealed the negative effects of mod-
elling long-distance circumfixional dependencies in
purely finite-state terms, subsequently leading to
some suggestions for improvement.
It is perhaps worth emphasizing that (Walther,
1999b)’s solution for reduplication in a finite-state
context is preferrable for cross-linguistic validation
precisely because it is the first that solves the prob-
lem in the general case. Because reduplication of-
ten involves copying of a strictly bounded amount
of material, the bounded case could in principle be
modelled as a finite-state process by enumerating all
possible forms of the copy and then making sure
each was matched to the proper stem. To solve this
simplified problem, no new techniques are needed
in theory. In practice however, the brute-force enu-
meration approach apparently has not been pursued
further, apart from isolated examples (see Antworth
(1990), p.157f for a fixed-size case in Tagalog). This
is probably because such an approach is awkward
to specify in actual grammars and because it will
inevitably lead to an explosion of the state space
(Sproat (1992), p.161). Finally and in contrast to
(Walther, 1999b), it would clearly break down for
productive total reduplication, which is isomorphic
to the context-sensitive language .
A second motivation for choosing Temiar is that
all prior analyses of its data are heavily under-
formalized and incomplete, irrespective of whether
they are situated in the older rule paradigm (Mc-
Carthy,1982; Broselow and McCarthy, 1983; Sloan,
1988; Shaw, 1993) or an optimality-theoretic setting
(Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos,
1998a). Hence a formalized and computationally
tested analysis that strives to keep a healthy balance
</bodyText>
<page confidence="0.998582">
13
</page>
<bodyText confidence="0.999953777777778">
with respect to linguistic adequacy would represent
significant progress on its own.
In the rest of the paper I will attempt to provide
just such an analysis, beginning in 2 with a presen-
tation of the relevant data. Next, section 3 reviews
the core of One-Level Prosodic Morphology, which
will be used as formal background. Using that back-
ground, the analysis is then fully developed in 4.
The paper concludes with some discussion in 5.
</bodyText>
<sectionHeader confidence="0.9934" genericHeader="method">
2 Temiar reduplication
</sectionHeader>
<bodyText confidence="0.999875730769231">
All data on Temiar reduplication in this section
come from (Benjamin, 1976), the main source on
the subject.1 According to Benjamin, the charac-
teristic aspectual paradigms of “monosyllabic and
schewa-form verbs” (B:168) are as follows (B:169):
We have inferred syllabifications in (1) from the
statement that “only two types of syllables occur:
open syllables of canonical form CV, and closed syl-
lables of canonical form CVC” (B:141). Note that
Benjamin abstracts from vowel length here. Word-
level stress, which is “falling regularly on the final
syllable” (B:139), is likewise inferred in (1). Ob-
serve that only monosyllabic roots like redu-
plicate their initial consonant in the non-perfective
aspectual forms of the active, while longer roots like
do not. This contrasts with obligatory redupli-
cation of the root-final consonant in the continua-
tive.
An important further generalization is that all
extra segmental material beyond the bare root is
inserted immediately before the stressed syllable,
leading to prefixation for monosyllabic roots, but in-
fixation in polysyllabic ones (Gafos, 1998b). From
this point of view we can also see a correlation be-
tween the fact that causative forms of monosyllabic
roots – which must be at least bisyllabic – begin
</bodyText>
<footnote confidence="0.933023666666667">
1We will abbreviate further references to this work with
“(B: page number )” in the text. Moreover, to highlight
reduplicated parts in the data they will often be printed in bold.
</footnote>
<bodyText confidence="0.9959812">
with a fixed /t/2 and the restriction that words must
“always begin and end with a consonant” (B:141).
In triconsonantal roots like that restriction is
taken care of by the first root consonant itself, so no
fixed segment needs to appear.
According to Benjamin, prefinal syllables –
which are unstressed – can show alternation of their
vocalic quality: “In prefinal closed syllables the in-
ner vowels /e o/ are replaced by the outer vowels /i
u/ respectively” (B:144). This descriptive general-
ization accounts for the remaining contrasts in (1),
witness e.g. versus .
It is interesting to see that Temiar even exhibits
phonological modifications between base and redu-
plicant, affecting consonants in the continuative:
</bodyText>
<listItem confidence="0.739097">
(2) y m ‘to cry’ (B:143)
</listItem>
<bodyText confidence="0.95650959375">
p n ‘to long for’ (B:146)
‘to hunt successfully’ (B:146)
Benjamin explains that medial coda consonants
from the class of oral voiceless stops turn into their
voiced nasal equivalents in Northern Temiar (and to
plain voiced stops in the Southern dialect; B:143).
It is of some importance to clarify a number
of further aspects of the data and their interpreta-
tion. First, theorists have frequently employed the
stronger term ‘minor syllables’ for Benjamin’s pre-
final syllables, reflecting their alleged special status
by means of an impoverished representation (e.g.
empty syllable nuclei in (Gafos, 1998b)) and/or fur-
ther formal mechanisms (e.g. a ban on full vowels
in prefinal position *PREFINAL-V (Gafos, 1998a)).
We do not follow this move here, because empiri-
cally it is neither true that penultimate vowels are
categorically restricted to schwa-like vowels (
‘to go downriver’, ‘to float’, etc.) nor
are there any solid statistics of a presumed tendency
to vowel reduction in unstressed syllables, nor can
the variable quality of prefinal vowels be consis-
tently derived from flanking consonants. Hence,
such penultimative vowels are to be lexically speci-
fied as alternating.
Second, Benjamin’s subclass restriction of (1)
to “monosyllabic and schewa-form verbs” correctly
excludes polysyllabic roots like the already men-
tioned and , where prefinal open syl-
lables with vowels outside of / / occur. These
roots undergo “very few morphological changes”
(B:170), basically proclitization.
</bodyText>
<footnote confidence="0.673932333333333">
2Or /b/, if the root starts in /c,t/: / / ‘to eat’ gives
/
/ ‘to feed’ (B:169).
</footnote>
<figure confidence="0.999027615384615">
‘to call’
‘to lie down/sleep/marry’
(1)
‘monosyllabic’
‘schewa-form’
perfective
simulfactive
g continuative
perfective
simulfactive
g continuative
a
c
t
i
v
e
k
k w
c
a
u
s
a
t.
w
</figure>
<page confidence="0.995945">
14
</page>
<bodyText confidence="0.999584733333333">
Third, paradigms for a given root are hardly
ever complete, with various irregularities and non-
productive patterns also occuring (B:169f). Again, a
good deal of lexicalization would seem necessary to
correctly describe Temiar verbs in a realistic gram-
mar fragment.
Given this descriptive summary, our goals for
the upcoming analysis are, first, to treat the full
paradigm of (1). As a second goal, we would like
to reflect the emergent formal desiderata in a trans-
parent way, in particular referring to the need to
account for repetition, truncation, infixation and
phonological modification. Thirdly, we will attempt
a compositional analysis of the morphological ex-
ponency of aspect.
</bodyText>
<sectionHeader confidence="0.998386" genericHeader="method">
3 One-Level Prosodic Morphology
</sectionHeader>
<bodyText confidence="0.998228891891892">
In order to provide the necessary background for
the Temiar analysis in 4, this section briefly re-
views the finite-state approach to prosodic morphol-
ogy developed in (Walther, 1999b),
That work itself was presented as an extension
to (Bird and Ellison, 1994)’s One-Level Phonol-
ogy framework, where phonological representa-
tions, morphemes and more abstract generalizations
are all finite-state automata that express surface-true
constraints on word forms, and constraint combina-
tion is by automata intersection.
In a nutshell, the extension comprises three main
components. We (i) represent phonological strings
differently for purposes of modelling prosodic mor-
phology, (ii) implement reduplicative coyping by
automata intersection, and (iii) introduce a resource-
conscious variant of automata.
For (i), operators are provided that construct en-
riched automata from a simple string automaton, in
particular giving it a kind of doubly-linked structure
so that the symbol repetition inherent in redupli-
cation translates into following backwards-pointing
technical transitions. The individual enrichments in-
volve only local computation per state or transition,
so that on-the-fly implementation is easy if desired.
In other words, one does not necessarily have to en-
rich the entire lexicon in advance.
Enriched representations In a bit more de-
tail, the enrichments of (i) are as follows. The
three aspects of reduplication or symbol repeti-
tion, truncation or symbol skipping and infixation
or transitive, non-immediate precedence of sym-
bols are reflected in three regular expression op-
erators,
Each takes the underlying automaton of a regular
language as its only argument. Formally, they
can be defined as follows:
</bodyText>
<listItem confidence="0.654884">
(3) Let be the minimal -
</listItem>
<bodyText confidence="0.9586876">
free3 finite-state automaton for , with a
finite set of states, finite alphabet , transition
function , start state
and set of final states .
a. Assume .
,
where ,
and
An example enrichment of Temiar is shown
in figure 1. One can imagine how and
transitions allow, figuratively speaking, forward and
backward movement within a string, while self
loops will absorb infixal morphemes that are inter-
sected with fig. 1. Finally, so-called synchronization
bits :1, :0 were introduced in (Walther, 1999b) to
define the extent of a reduplicative base constituent
in a segment-independent way. Bit value :1 marks
the edges and :0 the interior segments of a base, as
shown in fig. 1 for a hypothetical whole-root redu-
plication pattern. In actual practive, synchronization
</bodyText>
<figureCaption confidence="0.999184">
Figure 1: add repeats(add skips(add self loops(selog)))
</figureCaption>
<bodyText confidence="0.851758285714286">
bits are sets of symbols, just like the rest of the al-
phabet. Sets as transition labels improve over tra-
ditional automata in terms of automata compact-
ness, were already proposed for phonology in (Bird
3Minimality prevents non-(co)-accessible transitions from
getting enriched, while lack of transitions keeps positional
‘movement’ in lockstep with segmental positions.
</bodyText>
<figure confidence="0.959244777777778">
b. Assume .
,
where ,
and
c. ,
where
E
E
E
E E
E
skip skip skip skip
skip
s:1 e:0 l:0 o:0
0 1 2 3 4
g:1 5
repeat repeat repeat repeat
repeat
</figure>
<page confidence="0.716577">
15
</page>
<bodyText confidence="0.984105743589743">
.
and Ellison, 1992) and do not increase mathematical
expressivity beyond regular languages.4 Hence, the
segmental part of fig. 1 may be defined in a modular
fashion through the intersection of strings of sym-
bol sets that mention only certain dimensions (here:
phonemes and synchronisation bits), being under-
specified for the unmentioned dimensions. We will
again follow (Walther, 1999b) in conceiving of sets
as types arranged in a type hierarchy that is struc-
tured by set inclusion, and also in allowing arbitrary
boolean combinations of types.
Copying as intersection Given enriched repre-
sentations as in fig. 1, various patterns of redupli-
cation are now easy to define. We can denote a syn-
chronised abstract string by the regular expression
where is the type subsuming all phonological
segments. Then hypothetical total reduplication –
unattested in Temiar, but wellknown from Indone-
sian and many other languages – is described by
A variant slightly more akin to Temiar – and actu-
ally attested in the neighbouring language Semai –
that s the interior of the base in a prefixed redu-
plicant is just as easy:
Ignoring self loops for the moment, all we need
now to apply a reduplication pattern to an enriched
base representation is simply to intersect the former
with the latter: automata intersection has sufficient
formal power to implement reduplicative copying!
Here is an example, using the abbreviation
for perspicuous display:
As pointed out in (Walther, 2000), generaliz-
ing to a set of bases involves nothing more than
enriching each base separately, then forming the
union of the resulting automata. The opposite or-
der would produce unwanted cross-string repetition,
since does not distribute over union.
However, an unpublished experiment shows that
on-demand implementation of a slightly modified
</bodyText>
<footnote confidence="0.767542">
4Of course, the identity requirement for matching transi-
tions in traditional automata intersection must be replaced by
a non-empty intersection requirement for set-based matching.
</footnote>
<bodyText confidence="0.999908527777778">
can help to preserve the memory ef-
ficiency of building a minimized base lexicon as the
union of individual base strings first. Due to lack of
space, the details will be reported elsewhere.
Resource consciousness As much as we need the
formal means provided by self loops for infixations
like Temiar , the resulting automata over-
generate massively. What’s missing according to
(Walther, 1999b) is a distinction between explic-
itly contributed, independent information (e.g. the
infix itself) and contextual, dependent informa-
tion that is tolerated but must be provided by other
constraints (e.g. the self loop that hosts the
infix). Therefore, a parallel distinction between two
kinds of symbols – producers and consumers – was
introduced. In that scenario a symbol represents an
information resource that needs to be produced at
least once, then can be consumed arbitrarily often.
To utilize the distinction, an additional P/C bit ac-
companies symbols, with P/C = 1 for producers. All
symbols introduced by the three enrichment oper-
ators are consumers. Furthermore, automata inter-
section is made aware of these resource-conscious
notions by splitting it into two variants: In open
interpretation mode, P/C bits of matching symbols
are combined by logical OR, so that a result transi-
tion will be marked as a producer whenever at least
one argument transition is a producer. In closed in-
terpretation mode, combination is by logical AND
instead, allowing only producer-producer matches.
Grammatical evaluation can then be characterized
as follows:
Here and elsewhere, producers are in bold print.
Note the final intersection with the universal pro-
ducer language, which eliminates unused consumer
transitions, the main source of overgeneration.
</bodyText>
<sectionHeader confidence="0.9639" genericHeader="method">
4 The analysis
</sectionHeader>
<bodyText confidence="0.9999645">
We have assembled enough background now to pro-
ceed to the actual analysis of the Temiar data in (1).
The analysis is implemented using FSA Utilities, a
finite-state toolbox written in Prolog which encour-
ages rapid prototyping (van Noord, 1997). Figure 2
shows a relevant fragment of its syntax (extensions
and modifications in italics).
In displaying the grammar, we will take liberty
in suppressing certain definitions in the interest
of conciseness, relying on the mnemonic value of
</bodyText>
<figure confidence="0.7723858">
Lexicon Constraint Constraint
16
{} empty language
S set complement
Head(arg1, , argN) := Body macro def.
</figure>
<figureCaption confidence="0.998673">
Figure 2: Regular expression operators
</figureCaption>
<bodyText confidence="0.962850255813954">
their names instead. A case in point is producer(T),
consumer(T): since the names are self-explanatory,
it suffices to note that the only argument T con-
tains type formulae that denote the symbol sets, as
explained before. Allowable type-combining opera-
tors are conjunction &amp;, disjunction ; and negation .
The same goes for monotonic rules, which – unlike
rewrite rules – can only specialize their focussed
segmental position A to B. They exist in two variants,
where A -r-&gt; B/C notates the case where context C
is right-adjacent to the focus ( ), and
vice versa for A -l-&gt; B/C.
Syllabification To define the reduplicant in
prosodic terms later on, we need syllabification
in the first place. Here a simplified finite-state ver-
sion of a proposal by (Walther, 1999a) is employed.
Its key idea is to allow incremental assignment of
syllable roles to segmental positions via a featural
decomposition of the three traditional roles, using
two binary-valued features ons and cod:
Onset ons cod
Nucleus ons cod
Coda ons cod
CodaOnset ons cod
As a side-effect, one gets the fourth role CO,
a monosegmental prosodic representation of
true geminates. The subcomponent sbs, for
sonority-based syllabification, itself rests on
the computation of sonority differences be-
tween adjacent segmental positions (not shown),
where sonority may either go up or down. To-
gether with some self-explanatory constraints
obligatory wordinternal onsets and no geminates,
prosodic surface wellformedness is then wellde-
fined. Only if doubly synced edge then stressed
may seem slightly odd, since it has a purely
technical character: it rules out certain illformed
alternatives in wordforms. Note, however, that the
necesssity of such technical constraints, which are
certainly implicit in informal analyses as well, can
only be reliably detected in computerized analyses
such as the present one, which allow for mechanical
enumeration of a grammar’s denotation.
</bodyText>
<equation confidence="0.999779590909091">
sbs := [ { [consumer(down&amp;&amp;quot;ons),
consumer(segment&amp;&amp;quot;’Nuc’)],
[consumer(up&amp;&amp;quot;’Nuc’),
consumer(segment&amp;&amp;quot;cod)
} *, no_final_onset &amp;quot;].
no_initial_coda := consumer(segment&amp;&amp;quot;cod).
no_final_onset := consumer(segment&amp;&amp;quot;ons).
syllabification := sonority_differences&amp;
sbs&amp;[no_initial_coda, sbs].
% -- further constraints ---
obligatory_wordinternal_onsets :=
( segment -r-&gt; ons / ’Nuc’ ). % _ ’N’
no_geminates := consumer(&amp;quot;’CO’)*.
prosodic_constraints := obligatory_word-
internal_onsets &amp; no_geminates &amp;
if_doubly_synced_edge_then_stressed.
if_doubly_synced_edge_then_stressed :=
[( {consumer(&amp;quot;’:1’),
[consumer(’:1’),consumer(&amp;quot;’:1’)],
[consumer(’:1’),consumer(’:1’),
consumer(stressed)]
} *), consumer(’:1’) &amp;quot;].
</equation>
<bodyText confidence="0.997004666666667">
Stress Given the assignment of syllable roles to
segmental positions, we are now ready to define
Temiar word stress. A possibly empty sequence
of prefinal syllables, each of which is constrained
to be of shape and unstressed, is fol-
lowed by a final stressed syllable. The macro
ends before last syll makes sure that the dividing
line between the penultimate and ultimate syllable
is drawn correctly.
</bodyText>
<equation confidence="0.935753416666667">
stress := [prefinal_syllables &amp;
ends_before_last_syll,
syllable].
prefinal_syllables :=
([consumer(’Ons’), consumer(’Nuc’),
(consumer(’Cod’) &amp;quot;) ]*) &amp;
consumer(unstressed)*.
ends_before_last_syll:=([consumer(segment)*,
consumer(segment&amp;&amp;quot;ons)]&amp;quot;).
syllable := [consumer(ons)+,consumer(’Nuc’),
consumer(cod)*] &amp;
(consumer(stressed)*).
</equation>
<figure confidence="0.911933125">
[E1,E2, ,En] concatenation
{E1,E2, ,En} union
E* Kleene closure
E&amp;quot; optionality
E1 &amp; E2 intersection
A
( B / C) monotonic rules
(4)
</figure>
<page confidence="0.995512">
17
</page>
<bodyText confidence="0.999322210526316">
Stems We proceed towards the definition of a stem
by noting that – as described in 2 – both the extent
of a base’s phonological material and its stress pat-
tern are necessary prior knowledge for adding as-
pectual morphemes in the appropriate way. Hence,
we impose the respective constraints onto the iso-
lated base string in stem0, before wrapping the re-
sult in the usual enrichments. However, the addi-
tion of self loops for infixation this time is a pri-
ori restricted to the position immediately before a
stressed onset, in accordance with the descriptive
generalization stated in 2. Experiments have shown
that using the unrestricted of (3.c)
would cause much unnecessary hassle in a posteri-
ori restriction of the possible infix locations to the
actually attested ones. It thus appears that Temiar
provides a first case for further parametrization of
at least one of the original operators from (Walther,
1999b):
</bodyText>
<equation confidence="0.982732444444444">
base := [consumer(’:1’),consumer(’:0’)*,
consumer(’:1’)].
stem0(StemMaterial) :=
add_self_loop_before(stressed&amp;’Ons’,
add_repeats(add_skips(StemMaterial &amp;
base &amp; syllabification &amp;
prosodic_constraints &amp; stress))).
stem(Segments) :=
stem0(stringToSegments(Segments)).
</equation>
<bodyText confidence="0.999861230769231">
Definitions for the actual stem entries of selog,
koow, yaap are shown below, using the ASCII-IPA
mapping @ , E , O . In eval-
uating the first entry, the schwa actually trans-
lates into a producer-type disjunction ( ; ) with
the help of stringToSegments. It thus makes sense
to constrain this free alternation further, which
is the purpose of has prefinal syllable. While
the monosyllable koow needs no extra treatment,
yaap is an example of a stem ending in an
alternating labial, whose definition however is
straightforward (medial, final refer to a positional
classification of the word that is defined later):
</bodyText>
<equation confidence="0.961887142857143">
selog := stem(&amp;quot;s@lOg&amp;quot;) &amp;
has_prefinal_syllable.
koow := stem(&amp;quot;kOOw&amp;quot;).
yaap := stem0([stringToSegments(&amp;quot;yaa&amp;quot;),
alternating_labial]).
alternating_labial := {producer(p&amp;final),
producer(m&amp;medial&amp;cod)}.
</equation>
<bodyText confidence="0.9999734">
If we now define has prefinal syllable itself, we
have completed the components that make up
stem. While the definition really targets the prefinal
vowel, its preceding onset and the stretch of arbi-
trary material after it must also be mentioned. To
tolerate interspersed technical symbols, the ignore
operator is used (Kaplan and Kay, 1994).
The purpose of prefinal V is to control the al-
ternation between ‘outer’ and ‘inner’ vowel, here
parametrized for only. It does so by referenc-
ing the next syllable role: if it is consistent with
ons, that vowel resides in an open syllable, hence
the close mid variant ( ) will be selected. Two else-
where cases deal with closed syllables and the pos-
sible presence of a technical symbol:
</bodyText>
<equation confidence="0.957195333333333">
has_prefinal_syllable :=
ignore([consumer(’Ons’),
prefinal_V((’E’;’@’),
’:0’&amp;unstressed),
consumer(anything) *],
technical_symbols).
technical_symbols :=
(consumer((skip;repeat)) *).
prefinal_V(Quality, Common) :=
{ [producer(Quality&amp;close_mid&amp;Common),
consumer(ons)],
[producer(Quality&amp;÷close_mid&amp;Common),
consumer(cod)],
[consumer((skip;repeat))]
} ).
</equation>
<bodyText confidence="0.9931201">
Aspectual affixes It is time to concentrate on the
most interesting part, and that is how to define the
affixes. Again the general picture will be to see them
as constraints on word forms which are imposed by
intersection. We begin with the simulfactive. The
claim here is that its characteristic pattern is the real-
ization of the initial base segment (:1), followed by
the infixed melodic element /a/, and then the entire
string that begins with the stressed onset. Phrasing
the pattern this way already suffices to capture the
difference in reduplication behaviour between
and : if we have inserted the after the ini-
tial consonant in the first base, the stressed onset is
to the left of /a/’s position, whereas in the second
base that onset is found to the right. Thus, repeti-
tion of segments is necessary to avoid ungrammat-
icality due to constraint violation in the first case
( ), but not in the second ( ).
This behaviour is most naturally modelled by
defining a new operator seek(X), which allows for
</bodyText>
<page confidence="0.997989">
18
</page>
<bodyText confidence="0.999960777777778">
ambiguous movement either to the left (repeat) or
to the right (skip) before imposing the restriction
X. This operator is applied to infixal /a/ because
it is precisely the infix which needs to ‘seek’ its
prosodically defined unique insertion point, i.e. self
loop. Finally, to ensure that the other aspectual mor-
phemes can play their part later on, the entire pat-
tern is wrapped in align to tolerate further material
before (align right) and after it (align left):
</bodyText>
<equation confidence="0.998640555555556">
simulfactive :=
align([consumer(’:1’),
seek([producer(a&amp;’:0’&amp;unstressed),
consumer(stressed&amp;’Ons’)])]).
seek(X) :=
[{producer(skip)*,producer(repeat)*},X].
align_left(X):=[X,consumer(anything)*].
align_right(X):=[consumer(anything)*,X].
align(X) := align_right(align_left(X)).
</equation>
<bodyText confidence="0.999960214285714">
Moving on to the continuative, we can see that the
relevant formal generalization is a bit more com-
plex. Again we start off with the initial base segment
(:1), but then seek a place to infix the constant / /,
before we skip to the next synchronised base posi-
tion (:1), which inevitably will be the final one. The
pattern is completed by again seeking the stressed
onset, from which realization of the string proceeds
uninterrupted due to the licensing of extra material
that the align wrapper provides. This produces a
similar contrast with respect to (non-)reduplication
of the first base position, but makes both the rep-
etition of the last base segment and the truncation
of its interior material obligatory in both base types
</bodyText>
<equation confidence="0.776442">
( oo vs. Lo ):
continuative :=
align([consumer(’:1’),
seek([producer(’E’&amp;’:0’&amp;unstressed)]),
skip_to(consumer(’:1’)),
seek(consumer(stressed&amp;’Ons’))]).
wordform(X):=closed_interpretation(X&amp;word).
</equation>
<bodyText confidence="0.995528222222222">
familiar has prefinal syllable. Finally, the charac-
teristic fixed element /r/ is specified. Upon second
thought, the /t/ is guaranteed to appear in mono-
syllable roots, because prefinal syllables always re-
quire an onset. The default absence of the /t/ – when
not needed on prosodic grounds – is again encoded
by the producer/consumer distinction, which con-
trasts the two disjuncts of the parametrized macro
default:
</bodyText>
<equation confidence="0.640927125">
causative :=
align_left([default(t&amp;unstressed,’:1’),
producer(vowel),
producer(r&amp;’:1’&amp;unstressed)])&amp;
has_prefinal_syllable.
default(Optional, Common) :=
{ producer(Common&amp;Optional),
consumer(Common) }.
</equation>
<bodyText confidence="0.998503214285714">
Entire words We can put the pieces together now
by first defining the word constraint as the con-
junction of syllabification and related prosodic con-
straints plus a classification of the word’s segmental
positions into initial,medial,final ones. Again,
this is modulo interspersed or sym-
bols. This actually means that base syllabification
and word syllabification must match up, but fortu-
nately this is indeed a property of our Temiar data.
Second, wordform conjoins the previous constraint
with its parameter X – which will contain the con-
junction of stem and aspect morphemes –, before
eliminating leftover consumer symbols with the
help of closed interpretation:
</bodyText>
<equation confidence="0.987992">
word := ignore(syllabification &amp;
prosodic_constraints &amp;
positional_classification,
technical_symbols).
positional_classification :=
[consumer(initial),consumer(medial)*,
consumer(final)].
skip_to(X) := [producer(skip)+, X].
</equation>
<bodyText confidence="0.999406">
What is left now is the proper definition of the
causative. Here we observe from (1) that the
causative morphology always starts word-initial,
hence the use of align left. We have a default con-
sonant /t/ whose realization we must somehow force
in the monosyllabic roots. Next comes a vowel,
whose quality – or – is again regulated by the
These definitions have removed the last barrier
to evaluating expressions like wordform(selog &amp;
simulfactive &amp; causative) or even suitable dis-
junctive combinations of such expressions which
define entire paradigms. Figure 3 shows an example
automaton for three forms. We refrain from describ-
ing a final automaton operation called Bounded Lo-
cal Optimization in (Walther, 1999b) that was put
</bodyText>
<page confidence="0.984396">
19
</page>
<figure confidence="0.998426857142857">
[s−Ons−up−:1
[ ‘y−Ons−up−:1
0
[ ‘k−Ons−up−:1
2
3
1
@−Nuc−down−:0
repeat
repeat
4
5
E−Nuc−down−:0
6
</figure>
<figureCaption confidence="0.839108">
Figure 3: Temiar reduplications , ,
</figureCaption>
<figure confidence="0.992604846153846">
a−Nuc−down−:0
r−Ons−up−:1
7
9
8
a−Nuc−down−:0
‘k−Ons−up−:1
skip
10
11
12
‘O−Nuc−down−:0
‘l−Ons−up−:0
skip
13
14
15
‘O−Nuc−down−:0
‘O−Cod−down−:0
skip
] ‘w−Cod−down−:1
16
17
18
] ‘g−Cod−down−:1
‘m−Cod−down−:1
repeat repeat
repeatrepeat
] ‘p−Cod−down−:1
20
19
21
22
23
‘a−Cod−down−:0
24 ‘y−Ons−up−:1 25
27
‘a−Nuc−down−:0
26
</figure>
<bodyText confidence="0.999760727272727">
to use here to filter harmless spurious ambiguities
from the original version of fig. 3. The kind of am-
biguity involved in our Temiar grammar is one of al-
ternative distribution of technical symbols in strings
of the same segmental-content yield. Suffice to say
that a simple parametrization of Bounded Local Op-
timization, which could only look at length-1 transi-
tion paths emerging from any given state, was able
to prune the unwanted alternatives by considering
technical transitions costlier in weight than segmen-
tal transitions.
</bodyText>
<sectionHeader confidence="0.999349" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999930238095239">
The present paper has provided further support for
(Walther, 1999b)’s finite-state conception of One-
Level Prosodic Morphology by formulating – for
the first time – a fully formalized and computa-
tional analysis of a complicated piece of reduplica-
tive morphology found in the Mon-Khmer language
of Temiar. Compared to the initial proposal, all
three core components of enriched representations,
namely technical transitions for repeating or skip-
ping segmental symbols and the ability to perform
infixation by using self loops, were again found
necessary in the course of this analysis. However,
in Temiar the last enrichment – –
needed to be parametrized for a prosodic condition
to narrow down the insertion site to a unique posi-
tion per base.
The prosodic condition of ‘stressed onset’ proved
crucial to define that position, and accounted for the
variation between infixing aspectual morphology in
longer bases and descriptively prefixing morphol-
ogy in monosyllabic ones. Temiar thus underscores
the utility of computing with real prosodic informa-
tion in finite-state morphology, a frequently miss-
ing desideratum according to (Sproat, 1992, p.170).
Also, the symmetry of having both forward and
backward-pointing technical transitions in enriched
automata representations was exploited in a novel
regular expression operator called seek(X), which
encapsulated an interesting kind of ambiguous di-
rectional movement (or: movement underspecified
for direction) towards a position satisfying property
X. This operator could rather directly be motivated
from the data. In particular, it facilitated an insight-
ful account of the base-length-dependent triggering
of reduplication in the active simulfactive aspect.
Finally, in contrast to even the most recent anal-
yses in the theoretical linguistic literature, the full
paradigm including the causative forms was cap-
tured in this fairly complete analysis, together with
phonological modifications that sometimes occur
between base and reduplicant, as exemplified by
. Apart from an optional filtering step
for some technical spurious ambiguities that could
make use of local optimization, neither global op-
timization nor violable or soft constraints of the
type argued for in Optimality Theory (Prince and
Smolensky, 1993) were found necessary.
For future research, the empirical base of Temiar
should be broadened to include further reduplica-
tion patterns, in particular those found in expres-
sives. Also, the grammar should be amended to al-
low for words containing geminates, which were
initially excluded to simplify the overall analysis at
the cost of what is at best a peripheral aspect of it.
Because the finite-state constraints employed in this
work are all surface-true, the potential of machine-
learning techniques to acquire them automatically
from surface-oriented corpora should be explored.
Finally, it would be very interesting to broaden to
Temiar the ongoing experiments with efficiency-
oriented computational variants of the One-Level
Prosodic Morphology framework that were already
alluded to in the text.
</bodyText>
<page confidence="0.991548">
20
</page>
<sectionHeader confidence="0.998313" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999933126582278">
Evan Antworth. 1990. PC-KIMMO: A Two-Level Pro-
cessor for Morphological Analysis. SIL, Dallas.
Kenneth R. Beesley. 1998. Constraining separated
morphotactic dependencies in finite-state grammars.
In Proceedings of FSMNLP’98, Bilkent University,
Turkey, pages 118–127.
Geoffrey Benjamin. 1976. An outline of Temiar gram-
mar. In Philip Jenner, Lawrence Thompson, and Stan-
ley Starosta, editors, Austroastiatic studies, volume II,
pages 129–187. University Press of Hawaii, Honululu.
Steven Bird and T. Mark Ellison. 1992. One-Level
Phonology: Autosegmental representations and rules
as finite-state automata. Technical report, Cen-
tre for Cognitive Science, University of Edinburgh.
EUCCS/RP-51.
Steven Bird and T. Mark Ellison. 1994. One-Level
Phonology. Computational Linguistics, 20(1):55–90.
Ellen Broselow and John McCarthy. 1983. A theory of
infixing reduplication. The Linguistic Review, 3:25–
98.
Adamantios Gafos. 1995. On the Proper Charac-
terization of ‘Nonconcatenative’ Languages. Ms.,
Department of Cognitive Science, The Johns
Hopkins University, Baltimore. (ROA-106 at
http://ruccs.rutgers.edu/roa.html).
Diamandis Gafos. 1996. The articulatory basis of lo-
cality in phonology. Ph.D. thesis, The Johns Hop-
kins University, Baltimore, Md. [Published by Gar-
land:New York].
Diamandis Gafos. 1998a. A-templatic reduplication.
Linguistic Inquiry, 29(3):515–527.
Diamandis Gafos. 1998b. Eliminating long distance
consonantal spreading. Natural Language and Lin-
guistic Theory, 16(2):223–278.
Ron Kaplan and Martin Kay. 1994. Regular models of
phonological rule systems. Computational Linguis-
tics, 20(3):331–78.
John McCarthy. 1982. Prosodic templates, morphemic
templates, and morphemic tiers. In Harry van der
Hulst and Norval Smith, editors, The structure of
phonological representations, part I, pages 191–224.
Foris, Dordrecht.
Alan Prince and Paul Smolensky. 1993. Optimality
theory. constraint interaction in generative grammar.
Technical Report RuCCS TR-2, Rutgers University
Center for Cognitive Science.
Patricia Shaw. 1993. The prosodic constituency of mi-
nor syllables. In Proceedings of the Eleventh West
Coast Conference on Formal Linguistics, pages 117–
132, Stanford, CA. CSLI Publications. [Distributed
by Cambridge University Press].
Kelly Sloan. 1988. Bare-consonant reduplication. In
Proceedings of the Seventh West Coast Conference
on Formal Linguistics, pages 319–330, Stanford, CA.
CSLI Publications. [Distributed by Cambridge Uni-
versity Press].
Richard Sproat. 1992. Morphology and Computation.
MIT Press, Cambridge, Mass.
Gertjan van Noord. 1997. FSA Utilities: A tool-
box to manipulate finite-state automata. In
Darrell Raymond, Derrick Wood, and Sheng
Yu, editors, Automata Implementation, volume
1260 of Lecture Notes in Computer Science,
pages 87–108. Springer Verlag. (Software under
http://grid.let.rug.nl/ vannoord/Fsa/).
Markus Walther. 1999a. Deklarative prosodische Mor-
phologie: constraint-basierte Analysen und Comput-
ermodelle zum Finnischen und Tigrinya. Niemeyer,
T¬ubingen.
Markus Walther. 1999b. One-Level Prosodic Morphol-
ogy. Marburger Arbeiten zur Linguistik 1, University
of Marburg. 64 pp.
(http://xxx.lanl.gov/abs/cs.CL/9911011).
Markus Walther. 2000. Finite-state Reduplica-
tion in One-Level Prosodic Morphology. In
Proceedings of NAACL-2000, pages 296–302,
Seattle/WA. North American Association for
Computational Linguistics, Morgan Kaufman.
(http://xxx.lanl.gov/abs/cs.CL/0005025).
</reference>
<page confidence="0.999433">
21
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.530946">
<title confidence="0.999041">Temiar Reduplication in One-Level Prosodic Morphology</title>
<author confidence="0.991047">Markus</author>
<affiliation confidence="0.999606">University of</affiliation>
<address confidence="0.679904">FB09/IGS, Wilhelm-R¬opke-Str. 6A, D-35032 Marburg,</address>
<email confidence="0.991199">Markus.Walther@mailer.uni-marburg.de</email>
<abstract confidence="0.984855294117647">Temiar reduplication is a difficult piece of prosodic morphology. This paper presents the first computational analysis of Temiar reduplication, using the novel finite-state approach of One-Level Prosodic Morphology originally developed by Walther (1999b, 2000). After reviewing both the data and the basic tenets of One-level Prosodic Morphology, the analysis is laid out in some detail, using the notation of the FSA Utilities finite-state toolkit (van Noord 1997). One important discovery is that in this approach one can easily define a regular expression operator which ambiguously scans a string in the leftor rightward direction for a certain prosodic property. This yields an elegant account of base-length-dependent triggering of reduplication as found in Temiar.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Evan Antworth</author>
</authors>
<title>PC-KIMMO: A Two-Level Processor for Morphological Analysis.</title>
<date>1990</date>
<location>SIL, Dallas.</location>
<contexts>
<context position="3166" citStr="Antworth (1990)" startWordPosition="480" endWordPosition="481">t is preferrable for cross-linguistic validation precisely because it is the first that solves the problem in the general case. Because reduplication often involves copying of a strictly bounded amount of material, the bounded case could in principle be modelled as a finite-state process by enumerating all possible forms of the copy and then making sure each was matched to the proper stem. To solve this simplified problem, no new techniques are needed in theory. In practice however, the brute-force enumeration approach apparently has not been pursued further, apart from isolated examples (see Antworth (1990), p.157f for a fixed-size case in Tagalog). This is probably because such an approach is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Brose</context>
</contexts>
<marker>Antworth, 1990</marker>
<rawString>Evan Antworth. 1990. PC-KIMMO: A Two-Level Processor for Morphological Analysis. SIL, Dallas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth R Beesley</author>
</authors>
<title>Constraining separated morphotactic dependencies in finite-state grammars.</title>
<date>1998</date>
<booktitle>In Proceedings of FSMNLP’98,</booktitle>
<pages>118--127</pages>
<institution>Bilkent University,</institution>
<contexts>
<context position="2159" citStr="Beesley, 1998" startWordPosition="329" endWordPosition="330">’ comes out as , where only the final /h/ is copied, this time as an infix. Temiar reduplication thus appears to be a suitably rich testing ground for a novel approach to reduplication developed by (Walther, 1999b; Walther, 2000) within a finite-state framework. Even though that approach, One-Level Prosodic Morphology, was presented from the outset as being generally applicable, it has been proven time and time again that only concrete empirical application of a particular approach to computational morphology and phonology will fully reveal its inherent virtues and weaknesses. As an example, (Beesley, 1998) reports that it was actual experimentation with grammars of word-formation in Arabic and Hungarian which fully revealed the negative effects of modelling long-distance circumfixional dependencies in purely finite-state terms, subsequently leading to some suggestions for improvement. It is perhaps worth emphasizing that (Walther, 1999b)’s solution for reduplication in a finite-state context is preferrable for cross-linguistic validation precisely because it is the first that solves the problem in the general case. Because reduplication often involves copying of a strictly bounded amount of mat</context>
</contexts>
<marker>Beesley, 1998</marker>
<rawString>Kenneth R. Beesley. 1998. Constraining separated morphotactic dependencies in finite-state grammars. In Proceedings of FSMNLP’98, Bilkent University, Turkey, pages 118–127.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Geoffrey Benjamin</author>
</authors>
<title>An outline of Temiar grammar.</title>
<date>1976</date>
<booktitle>Austroastiatic studies, volume II,</booktitle>
<pages>129--187</pages>
<editor>In Philip Jenner, Lawrence Thompson, and Stanley Starosta, editors,</editor>
<publisher>University Press of Hawaii, Honululu.</publisher>
<contexts>
<context position="1113" citStr="Benjamin, 1976" startWordPosition="161" endWordPosition="162">sic tenets of One-level Prosodic Morphology, the analysis is laid out in some detail, using the notation of the FSA Utilities finite-state toolkit (van Noord 1997). One important discovery is that in this approach one can easily define a regular expression operator which ambiguously scans a string in the left- or rightward direction for a certain prosodic property. This yields an elegant account of base-length-dependent triggering of reduplication as found in Temiar. 1 Introduction Temiar is an Austroasiatic language of the MonKhmer group spoken by a variety of tribal people in West Malaysia (Benjamin, 1976). Its intricate morphological system has received some attention in the theoretical literature. The main focus has been on the aspectual morphology of verbs, where an interesting pattern of partial reduplication emerges that is sensitive to the size of the verbal root. For example, in the active continuative, ‘to eat’ reduplicates both the initial /g/ and the final /l/ of its monosyllabic base . In contrast, bisyllabic ‘to shoot’ comes out as , where only the final /h/ is copied, this time as an infix. Temiar reduplication thus appears to be a suitably rich testing ground for a novel approach </context>
<context position="4538" citStr="Benjamin, 1976" startWordPosition="699" endWordPosition="700">d and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed in 4. The paper concludes with some discussion in 5. 2 Temiar reduplication All data on Temiar reduplication in this section come from (Benjamin, 1976), the main source on the subject.1 According to Benjamin, the characteristic aspectual paradigms of “monosyllabic and schewa-form verbs” (B:168) are as follows (B:169): We have inferred syllabifications in (1) from the statement that “only two types of syllables occur: open syllables of canonical form CV, and closed syllables of canonical form CVC” (B:141). Note that Benjamin abstracts from vowel length here. Wordlevel stress, which is “falling regularly on the final syllable” (B:139), is likewise inferred in (1). Observe that only monosyllabic roots like reduplicate their initial consonant in</context>
</contexts>
<marker>Benjamin, 1976</marker>
<rawString>Geoffrey Benjamin. 1976. An outline of Temiar grammar. In Philip Jenner, Lawrence Thompson, and Stanley Starosta, editors, Austroastiatic studies, volume II, pages 129–187. University Press of Hawaii, Honululu.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
<author>T Mark Ellison</author>
</authors>
<title>One-Level Phonology: Autosegmental representations and rules as finite-state automata.</title>
<date>1992</date>
<tech>Technical report,</tech>
<institution>Centre for Cognitive Science, University of Edinburgh.</institution>
<marker>Bird, Ellison, 1992</marker>
<rawString>Steven Bird and T. Mark Ellison. 1992. One-Level Phonology: Autosegmental representations and rules as finite-state automata. Technical report, Centre for Cognitive Science, University of Edinburgh. EUCCS/RP-51.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
<author>T Mark Ellison</author>
</authors>
<date>1994</date>
<journal>One-Level Phonology. Computational Linguistics,</journal>
<volume>20</volume>
<issue>1</issue>
<contexts>
<context position="9371" citStr="Bird and Ellison, 1994" startWordPosition="1464" endWordPosition="1467">t the full paradigm of (1). As a second goal, we would like to reflect the emergent formal desiderata in a transparent way, in particular referring to the need to account for repetition, truncation, infixation and phonological modification. Thirdly, we will attempt a compositional analysis of the morphological exponency of aspect. 3 One-Level Prosodic Morphology In order to provide the necessary background for the Temiar analysis in 4, this section briefly reviews the finite-state approach to prosodic morphology developed in (Walther, 1999b), That work itself was presented as an extension to (Bird and Ellison, 1994)’s One-Level Phonology framework, where phonological representations, morphemes and more abstract generalizations are all finite-state automata that express surface-true constraints on word forms, and constraint combination is by automata intersection. In a nutshell, the extension comprises three main components. We (i) represent phonological strings differently for purposes of modelling prosodic morphology, (ii) implement reduplicative coyping by automata intersection, and (iii) introduce a resourceconscious variant of automata. For (i), operators are provided that construct enriched automata</context>
</contexts>
<marker>Bird, Ellison, 1994</marker>
<rawString>Steven Bird and T. Mark Ellison. 1994. One-Level Phonology. Computational Linguistics, 20(1):55–90.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ellen Broselow</author>
<author>John McCarthy</author>
</authors>
<title>A theory of infixing reduplication. The Linguistic Review,</title>
<date>1983</date>
<volume>3</volume>
<pages>98</pages>
<contexts>
<context position="3788" citStr="Broselow and McCarthy, 1983" startWordPosition="576" endWordPosition="579">1990), p.157f for a fixed-size case in Tagalog). This is probably because such an approach is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed i</context>
</contexts>
<marker>Broselow, McCarthy, 1983</marker>
<rawString>Ellen Broselow and John McCarthy. 1983. A theory of infixing reduplication. The Linguistic Review, 3:25– 98.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adamantios Gafos</author>
</authors>
<title>On the Proper Characterization of ‘Nonconcatenative’ Languages.</title>
<date>1995</date>
<tech>Ms.,</tech>
<institution>Department of Cognitive Science, The Johns Hopkins University,</institution>
<location>Baltimore.</location>
<contexts>
<context position="3862" citStr="Gafos, 1995" startWordPosition="588" endWordPosition="589"> is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed in 4. The paper concludes with some discussion in 5. 2 Temiar reduplication</context>
</contexts>
<marker>Gafos, 1995</marker>
<rawString>Adamantios Gafos. 1995. On the Proper Characterization of ‘Nonconcatenative’ Languages. Ms., Department of Cognitive Science, The Johns Hopkins University, Baltimore. (ROA-106 at http://ruccs.rutgers.edu/roa.html).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Diamandis Gafos</author>
</authors>
<title>The articulatory basis of locality in phonology.</title>
<date>1996</date>
<tech>Ph.D. thesis,</tech>
<institution>The Johns Hopkins University,</institution>
<location>Baltimore, Md. [Published by Garland:New York].</location>
<contexts>
<context position="3875" citStr="Gafos, 1996" startWordPosition="590" endWordPosition="591">o specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed in 4. The paper concludes with some discussion in 5. 2 Temiar reduplication All data on </context>
</contexts>
<marker>Gafos, 1996</marker>
<rawString>Diamandis Gafos. 1996. The articulatory basis of locality in phonology. Ph.D. thesis, The Johns Hopkins University, Baltimore, Md. [Published by Garland:New York].</rawString>
</citation>
<citation valid="true">
<authors>
<author>Diamandis Gafos</author>
</authors>
<title>A-templatic reduplication.</title>
<date>1998</date>
<journal>Linguistic Inquiry,</journal>
<volume>29</volume>
<issue>3</issue>
<contexts>
<context position="3888" citStr="Gafos, 1998" startWordPosition="592" endWordPosition="593">actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed in 4. The paper concludes with some discussion in 5. 2 Temiar reduplication All data on Temiar redupl</context>
<context position="5558" citStr="Gafos, 1998" startWordPosition="854" endWordPosition="855">re. Wordlevel stress, which is “falling regularly on the final syllable” (B:139), is likewise inferred in (1). Observe that only monosyllabic roots like reduplicate their initial consonant in the non-perfective aspectual forms of the active, while longer roots like do not. This contrasts with obligatory reduplication of the root-final consonant in the continuative. An important further generalization is that all extra segmental material beyond the bare root is inserted immediately before the stressed syllable, leading to prefixation for monosyllabic roots, but infixation in polysyllabic ones (Gafos, 1998b). From this point of view we can also see a correlation between the fact that causative forms of monosyllabic roots – which must be at least bisyllabic – begin 1We will abbreviate further references to this work with “(B: page number )” in the text. Moreover, to highlight reduplicated parts in the data they will often be printed in bold. with a fixed /t/2 and the restriction that words must “always begin and end with a consonant” (B:141). In triconsonantal roots like that restriction is taken care of by the first root consonant itself, so no fixed segment needs to appear. According to Benjam</context>
<context position="7245" citStr="Gafos, 1998" startWordPosition="1129" endWordPosition="1130">(B:143) p n ‘to long for’ (B:146) ‘to hunt successfully’ (B:146) Benjamin explains that medial coda consonants from the class of oral voiceless stops turn into their voiced nasal equivalents in Northern Temiar (and to plain voiced stops in the Southern dialect; B:143). It is of some importance to clarify a number of further aspects of the data and their interpretation. First, theorists have frequently employed the stronger term ‘minor syllables’ for Benjamin’s prefinal syllables, reflecting their alleged special status by means of an impoverished representation (e.g. empty syllable nuclei in (Gafos, 1998b)) and/or further formal mechanisms (e.g. a ban on full vowels in prefinal position *PREFINAL-V (Gafos, 1998a)). We do not follow this move here, because empirically it is neither true that penultimate vowels are categorically restricted to schwa-like vowels ( ‘to go downriver’, ‘to float’, etc.) nor are there any solid statistics of a presumed tendency to vowel reduction in unstressed syllables, nor can the variable quality of prefinal vowels be consistently derived from flanking consonants. Hence, such penultimative vowels are to be lexically specified as alternating. Second, Benjamin’s sub</context>
</contexts>
<marker>Gafos, 1998</marker>
<rawString>Diamandis Gafos. 1998a. A-templatic reduplication. Linguistic Inquiry, 29(3):515–527.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Diamandis Gafos</author>
</authors>
<title>Eliminating long distance consonantal spreading.</title>
<date>1998</date>
<journal>Natural Language and Linguistic Theory,</journal>
<volume>16</volume>
<issue>2</issue>
<contexts>
<context position="3888" citStr="Gafos, 1998" startWordPosition="592" endWordPosition="593">actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed in 4. The paper concludes with some discussion in 5. 2 Temiar reduplication All data on Temiar redupl</context>
<context position="5558" citStr="Gafos, 1998" startWordPosition="854" endWordPosition="855">re. Wordlevel stress, which is “falling regularly on the final syllable” (B:139), is likewise inferred in (1). Observe that only monosyllabic roots like reduplicate their initial consonant in the non-perfective aspectual forms of the active, while longer roots like do not. This contrasts with obligatory reduplication of the root-final consonant in the continuative. An important further generalization is that all extra segmental material beyond the bare root is inserted immediately before the stressed syllable, leading to prefixation for monosyllabic roots, but infixation in polysyllabic ones (Gafos, 1998b). From this point of view we can also see a correlation between the fact that causative forms of monosyllabic roots – which must be at least bisyllabic – begin 1We will abbreviate further references to this work with “(B: page number )” in the text. Moreover, to highlight reduplicated parts in the data they will often be printed in bold. with a fixed /t/2 and the restriction that words must “always begin and end with a consonant” (B:141). In triconsonantal roots like that restriction is taken care of by the first root consonant itself, so no fixed segment needs to appear. According to Benjam</context>
<context position="7245" citStr="Gafos, 1998" startWordPosition="1129" endWordPosition="1130">(B:143) p n ‘to long for’ (B:146) ‘to hunt successfully’ (B:146) Benjamin explains that medial coda consonants from the class of oral voiceless stops turn into their voiced nasal equivalents in Northern Temiar (and to plain voiced stops in the Southern dialect; B:143). It is of some importance to clarify a number of further aspects of the data and their interpretation. First, theorists have frequently employed the stronger term ‘minor syllables’ for Benjamin’s prefinal syllables, reflecting their alleged special status by means of an impoverished representation (e.g. empty syllable nuclei in (Gafos, 1998b)) and/or further formal mechanisms (e.g. a ban on full vowels in prefinal position *PREFINAL-V (Gafos, 1998a)). We do not follow this move here, because empirically it is neither true that penultimate vowels are categorically restricted to schwa-like vowels ( ‘to go downriver’, ‘to float’, etc.) nor are there any solid statistics of a presumed tendency to vowel reduction in unstressed syllables, nor can the variable quality of prefinal vowels be consistently derived from flanking consonants. Hence, such penultimative vowels are to be lexically specified as alternating. Second, Benjamin’s sub</context>
</contexts>
<marker>Gafos, 1998</marker>
<rawString>Diamandis Gafos. 1998b. Eliminating long distance consonantal spreading. Natural Language and Linguistic Theory, 16(2):223–278.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ron Kaplan</author>
<author>Martin Kay</author>
</authors>
<title>Regular models of phonological rule systems.</title>
<date>1994</date>
<journal>Computational Linguistics,</journal>
<volume>20</volume>
<issue>3</issue>
<contexts>
<context position="22379" citStr="Kaplan and Kay, 1994" startWordPosition="3410" endWordPosition="3413">l, final refer to a positional classification of the word that is defined later): selog := stem(&amp;quot;s@lOg&amp;quot;) &amp; has_prefinal_syllable. koow := stem(&amp;quot;kOOw&amp;quot;). yaap := stem0([stringToSegments(&amp;quot;yaa&amp;quot;), alternating_labial]). alternating_labial := {producer(p&amp;final), producer(m&amp;medial&amp;cod)}. If we now define has prefinal syllable itself, we have completed the components that make up stem. While the definition really targets the prefinal vowel, its preceding onset and the stretch of arbitrary material after it must also be mentioned. To tolerate interspersed technical symbols, the ignore operator is used (Kaplan and Kay, 1994). The purpose of prefinal V is to control the alternation between ‘outer’ and ‘inner’ vowel, here parametrized for only. It does so by referencing the next syllable role: if it is consistent with ons, that vowel resides in an open syllable, hence the close mid variant ( ) will be selected. Two elsewhere cases deal with closed syllables and the possible presence of a technical symbol: has_prefinal_syllable := ignore([consumer(’Ons’), prefinal_V((’E’;’@’), ’:0’&amp;unstressed), consumer(anything) *], technical_symbols). technical_symbols := (consumer((skip;repeat)) *). prefinal_V(Quality, Common) :=</context>
</contexts>
<marker>Kaplan, Kay, 1994</marker>
<rawString>Ron Kaplan and Martin Kay. 1994. Regular models of phonological rule systems. Computational Linguistics, 20(3):331–78.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John McCarthy</author>
</authors>
<title>Prosodic templates, morphemic templates, and morphemic tiers.</title>
<date>1982</date>
<booktitle>The structure of phonological representations, part I,</booktitle>
<pages>191--224</pages>
<editor>In Harry van der Hulst and Norval Smith, editors,</editor>
<location>Foris, Dordrecht.</location>
<marker>McCarthy, 1982</marker>
<rawString>John McCarthy. 1982. Prosodic templates, morphemic templates, and morphemic tiers. In Harry van der Hulst and Norval Smith, editors, The structure of phonological representations, part I, pages 191–224. Foris, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan Prince</author>
<author>Paul Smolensky</author>
</authors>
<title>Optimality theory. constraint interaction in generative grammar.</title>
<date>1993</date>
<tech>Technical Report RuCCS TR-2,</tech>
<institution>Rutgers University Center for Cognitive Science.</institution>
<contexts>
<context position="31303" citStr="Prince and Smolensky, 1993" startWordPosition="4713" endWordPosition="4716">endent triggering of reduplication in the active simulfactive aspect. Finally, in contrast to even the most recent analyses in the theoretical linguistic literature, the full paradigm including the causative forms was captured in this fairly complete analysis, together with phonological modifications that sometimes occur between base and reduplicant, as exemplified by . Apart from an optional filtering step for some technical spurious ambiguities that could make use of local optimization, neither global optimization nor violable or soft constraints of the type argued for in Optimality Theory (Prince and Smolensky, 1993) were found necessary. For future research, the empirical base of Temiar should be broadened to include further reduplication patterns, in particular those found in expressives. Also, the grammar should be amended to allow for words containing geminates, which were initially excluded to simplify the overall analysis at the cost of what is at best a peripheral aspect of it. Because the finite-state constraints employed in this work are all surface-true, the potential of machinelearning techniques to acquire them automatically from surface-oriented corpora should be explored. Finally, it would b</context>
</contexts>
<marker>Prince, Smolensky, 1993</marker>
<rawString>Alan Prince and Paul Smolensky. 1993. Optimality theory. constraint interaction in generative grammar. Technical Report RuCCS TR-2, Rutgers University Center for Cognitive Science.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Patricia Shaw</author>
</authors>
<title>The prosodic constituency of minor syllables.</title>
<date>1993</date>
<booktitle>In Proceedings of the Eleventh West Coast Conference on Formal Linguistics,</booktitle>
<pages>117--132</pages>
<publisher>University Press].</publisher>
<location>Stanford, CA.</location>
<contexts>
<context position="3814" citStr="Shaw, 1993" startWordPosition="582" endWordPosition="583">alog). This is probably because such an approach is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed in 4. The paper concludes w</context>
</contexts>
<marker>Shaw, 1993</marker>
<rawString>Patricia Shaw. 1993. The prosodic constituency of minor syllables. In Proceedings of the Eleventh West Coast Conference on Formal Linguistics, pages 117– 132, Stanford, CA. CSLI Publications. [Distributed by Cambridge University Press].</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kelly Sloan</author>
</authors>
<title>Bare-consonant reduplication.</title>
<date>1988</date>
<booktitle>In Proceedings of the Seventh West Coast Conference on Formal Linguistics,</booktitle>
<pages>319--330</pages>
<location>Stanford, CA.</location>
<contexts>
<context position="3801" citStr="Sloan, 1988" startWordPosition="580" endWordPosition="581">e case in Tagalog). This is probably because such an approach is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic adequacy would represent significant progress on its own. In the rest of the paper I will attempt to provide just such an analysis, beginning in 2 with a presentation of the relevant data. Next, section 3 reviews the core of One-Level Prosodic Morphology, which will be used as formal background. Using that background, the analysis is then fully developed in 4. The pape</context>
</contexts>
<marker>Sloan, 1988</marker>
<rawString>Kelly Sloan. 1988. Bare-consonant reduplication. In Proceedings of the Seventh West Coast Conference on Formal Linguistics, pages 319–330, Stanford, CA.</rawString>
</citation>
<citation valid="false">
<authors>
<author>CSLI Publications</author>
</authors>
<title>Distributed by Cambridge</title>
<publisher>University Press].</publisher>
<marker>Publications, </marker>
<rawString>CSLI Publications. [Distributed by Cambridge University Press].</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Sproat</author>
</authors>
<title>Morphology and Computation.</title>
<date>1992</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, Mass.</location>
<contexts>
<context position="3378" citStr="Sproat (1992)" startWordPosition="516" endWordPosition="517"> the bounded case could in principle be modelled as a finite-state process by enumerating all possible forms of the copy and then making sure each was matched to the proper stem. To solve this simplified problem, no new techniques are needed in theory. In practice however, the brute-force enumeration approach apparently has not been pursued further, apart from isolated examples (see Antworth (1990), p.157f for a fixed-size case in Tagalog). This is probably because such an approach is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to k</context>
<context position="30177" citStr="Sproat, 1992" startWordPosition="4555" endWordPosition="4556">e again found necessary in the course of this analysis. However, in Temiar the last enrichment – – needed to be parametrized for a prosodic condition to narrow down the insertion site to a unique position per base. The prosodic condition of ‘stressed onset’ proved crucial to define that position, and accounted for the variation between infixing aspectual morphology in longer bases and descriptively prefixing morphology in monosyllabic ones. Temiar thus underscores the utility of computing with real prosodic information in finite-state morphology, a frequently missing desideratum according to (Sproat, 1992, p.170). Also, the symmetry of having both forward and backward-pointing technical transitions in enriched automata representations was exploited in a novel regular expression operator called seek(X), which encapsulated an interesting kind of ambiguous directional movement (or: movement underspecified for direction) towards a position satisfying property X. This operator could rather directly be motivated from the data. In particular, it facilitated an insightful account of the base-length-dependent triggering of reduplication in the active simulfactive aspect. Finally, in contrast to even th</context>
</contexts>
<marker>Sproat, 1992</marker>
<rawString>Richard Sproat. 1992. Morphology and Computation. MIT Press, Cambridge, Mass.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gertjan van Noord</author>
</authors>
<title>FSA Utilities: A toolbox to manipulate finite-state automata.</title>
<date>1997</date>
<booktitle>Automata Implementation,</booktitle>
<volume>1260</volume>
<pages>87--108</pages>
<editor>In Darrell Raymond, Derrick Wood, and Sheng Yu, editors,</editor>
<publisher>Springer Verlag. (Software</publisher>
<note>under http://grid.let.rug.nl/ vannoord/Fsa/).</note>
<marker>van Noord, 1997</marker>
<rawString>Gertjan van Noord. 1997. FSA Utilities: A toolbox to manipulate finite-state automata. In Darrell Raymond, Derrick Wood, and Sheng Yu, editors, Automata Implementation, volume 1260 of Lecture Notes in Computer Science, pages 87–108. Springer Verlag. (Software under http://grid.let.rug.nl/ vannoord/Fsa/).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Markus Walther</author>
</authors>
<title>Deklarative prosodische Morphologie: constraint-basierte Analysen und Computermodelle zum Finnischen und Tigrinya.</title>
<date>1999</date>
<location>Niemeyer, T¬ubingen.</location>
<contexts>
<context position="1757" citStr="Walther, 1999" startWordPosition="271" endWordPosition="272">ystem has received some attention in the theoretical literature. The main focus has been on the aspectual morphology of verbs, where an interesting pattern of partial reduplication emerges that is sensitive to the size of the verbal root. For example, in the active continuative, ‘to eat’ reduplicates both the initial /g/ and the final /l/ of its monosyllabic base . In contrast, bisyllabic ‘to shoot’ comes out as , where only the final /h/ is copied, this time as an infix. Temiar reduplication thus appears to be a suitably rich testing ground for a novel approach to reduplication developed by (Walther, 1999b; Walther, 2000) within a finite-state framework. Even though that approach, One-Level Prosodic Morphology, was presented from the outset as being generally applicable, it has been proven time and time again that only concrete empirical application of a particular approach to computational morphology and phonology will fully reveal its inherent virtues and weaknesses. As an example, (Beesley, 1998) reports that it was actual experimentation with grammars of word-formation in Arabic and Hungarian which fully revealed the negative effects of modelling long-distance circumfixional dependencies i</context>
<context position="3429" citStr="Walther, 1999" startWordPosition="524" endWordPosition="525"> a finite-state process by enumerating all possible forms of the copy and then making sure each was matched to the proper stem. To solve this simplified problem, no new techniques are needed in theory. In practice however, the brute-force enumeration approach apparently has not been pursued further, apart from isolated examples (see Antworth (1990), p.157f for a fixed-size case in Tagalog). This is probably because such an approach is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic</context>
<context position="9293" citStr="Walther, 1999" startWordPosition="1453" endWordPosition="1454">ive summary, our goals for the upcoming analysis are, first, to treat the full paradigm of (1). As a second goal, we would like to reflect the emergent formal desiderata in a transparent way, in particular referring to the need to account for repetition, truncation, infixation and phonological modification. Thirdly, we will attempt a compositional analysis of the morphological exponency of aspect. 3 One-Level Prosodic Morphology In order to provide the necessary background for the Temiar analysis in 4, this section briefly reviews the finite-state approach to prosodic morphology developed in (Walther, 1999b), That work itself was presented as an extension to (Bird and Ellison, 1994)’s One-Level Phonology framework, where phonological representations, morphemes and more abstract generalizations are all finite-state automata that express surface-true constraints on word forms, and constraint combination is by automata intersection. In a nutshell, the extension comprises three main components. We (i) represent phonological strings differently for purposes of modelling prosodic morphology, (ii) implement reduplicative coyping by automata intersection, and (iii) introduce a resourceconscious variant</context>
<context position="11345" citStr="Walther, 1999" startWordPosition="1765" endWordPosition="1766">maton of a regular language as its only argument. Formally, they can be defined as follows: (3) Let be the minimal - free3 finite-state automaton for , with a finite set of states, finite alphabet , transition function , start state and set of final states . a. Assume . , where , and An example enrichment of Temiar is shown in figure 1. One can imagine how and transitions allow, figuratively speaking, forward and backward movement within a string, while self loops will absorb infixal morphemes that are intersected with fig. 1. Finally, so-called synchronization bits :1, :0 were introduced in (Walther, 1999b) to define the extent of a reduplicative base constituent in a segment-independent way. Bit value :1 marks the edges and :0 the interior segments of a base, as shown in fig. 1 for a hypothetical whole-root reduplication pattern. In actual practive, synchronization Figure 1: add repeats(add skips(add self loops(selog))) bits are sets of symbols, just like the rest of the alphabet. Sets as transition labels improve over traditional automata in terms of automata compactness, were already proposed for phonology in (Bird 3Minimality prevents non-(co)-accessible transitions from getting enriched, </context>
<context position="12566" citStr="Walther, 1999" startWordPosition="1966" endWordPosition="1967">ck of transitions keeps positional ‘movement’ in lockstep with segmental positions. b. Assume . , where , and c. , where E E E E E E skip skip skip skip skip s:1 e:0 l:0 o:0 0 1 2 3 4 g:1 5 repeat repeat repeat repeat repeat 15 . and Ellison, 1992) and do not increase mathematical expressivity beyond regular languages.4 Hence, the segmental part of fig. 1 may be defined in a modular fashion through the intersection of strings of symbol sets that mention only certain dimensions (here: phonemes and synchronisation bits), being underspecified for the unmentioned dimensions. We will again follow (Walther, 1999b) in conceiving of sets as types arranged in a type hierarchy that is structured by set inclusion, and also in allowing arbitrary boolean combinations of types. Copying as intersection Given enriched representations as in fig. 1, various patterns of reduplication are now easy to define. We can denote a synchronised abstract string by the regular expression where is the type subsuming all phonological segments. Then hypothetical total reduplication – unattested in Temiar, but wellknown from Indonesian and many other languages – is described by A variant slightly more akin to Temiar – and actua</context>
<context position="14560" citStr="Walther, 1999" startWordPosition="2282" endWordPosition="2283">mand implementation of a slightly modified 4Of course, the identity requirement for matching transitions in traditional automata intersection must be replaced by a non-empty intersection requirement for set-based matching. can help to preserve the memory efficiency of building a minimized base lexicon as the union of individual base strings first. Due to lack of space, the details will be reported elsewhere. Resource consciousness As much as we need the formal means provided by self loops for infixations like Temiar , the resulting automata overgenerate massively. What’s missing according to (Walther, 1999b) is a distinction between explicitly contributed, independent information (e.g. the infix itself) and contextual, dependent information that is tolerated but must be provided by other constraints (e.g. the self loop that hosts the infix). Therefore, a parallel distinction between two kinds of symbols – producers and consumers – was introduced. In that scenario a symbol represents an information resource that needs to be produced at least once, then can be consumed arbitrarily often. To utilize the distinction, an additional P/C bit accompanies symbols, with P/C = 1 for producers. All symbols</context>
<context position="17316" citStr="Walther, 1999" startWordPosition="2718" endWordPosition="2719">contains type formulae that denote the symbol sets, as explained before. Allowable type-combining operators are conjunction &amp;, disjunction ; and negation . The same goes for monotonic rules, which – unlike rewrite rules – can only specialize their focussed segmental position A to B. They exist in two variants, where A -r-&gt; B/C notates the case where context C is right-adjacent to the focus ( ), and vice versa for A -l-&gt; B/C. Syllabification To define the reduplicant in prosodic terms later on, we need syllabification in the first place. Here a simplified finite-state version of a proposal by (Walther, 1999a) is employed. Its key idea is to allow incremental assignment of syllable roles to segmental positions via a featural decomposition of the three traditional roles, using two binary-valued features ons and cod: Onset ons cod Nucleus ons cod Coda ons cod CodaOnset ons cod As a side-effect, one gets the fourth role CO, a monosegmental prosodic representation of true geminates. The subcomponent sbs, for sonority-based syllabification, itself rests on the computation of sonority differences between adjacent segmental positions (not shown), where sonority may either go up or down. Together with so</context>
<context position="20957" citStr="Walther, 1999" startWordPosition="3219" endWordPosition="3220">he isolated base string in stem0, before wrapping the result in the usual enrichments. However, the addition of self loops for infixation this time is a priori restricted to the position immediately before a stressed onset, in accordance with the descriptive generalization stated in 2. Experiments have shown that using the unrestricted of (3.c) would cause much unnecessary hassle in a posteriori restriction of the possible infix locations to the actually attested ones. It thus appears that Temiar provides a first case for further parametrization of at least one of the original operators from (Walther, 1999b): base := [consumer(’:1’),consumer(’:0’)*, consumer(’:1’)]. stem0(StemMaterial) := add_self_loop_before(stressed&amp;’Ons’, add_repeats(add_skips(StemMaterial &amp; base &amp; syllabification &amp; prosodic_constraints &amp; stress))). stem(Segments) := stem0(stringToSegments(Segments)). Definitions for the actual stem entries of selog, koow, yaap are shown below, using the ASCII-IPA mapping @ , E , O . In evaluating the first entry, the schwa actually translates into a producer-type disjunction ( ; ) with the help of stringToSegments. It thus makes sense to constrain this free alternation further, which is the</context>
<context position="28016" citStr="Walther, 1999" startWordPosition="4223" endWordPosition="4224">tive morphology always starts word-initial, hence the use of align left. We have a default consonant /t/ whose realization we must somehow force in the monosyllabic roots. Next comes a vowel, whose quality – or – is again regulated by the These definitions have removed the last barrier to evaluating expressions like wordform(selog &amp; simulfactive &amp; causative) or even suitable disjunctive combinations of such expressions which define entire paradigms. Figure 3 shows an example automaton for three forms. We refrain from describing a final automaton operation called Bounded Local Optimization in (Walther, 1999b) that was put 19 [s−Ons−up−:1 [ ‘y−Ons−up−:1 0 [ ‘k−Ons−up−:1 2 3 1 @−Nuc−down−:0 repeat repeat 4 5 E−Nuc−down−:0 6 Figure 3: Temiar reduplications , , a−Nuc−down−:0 r−Ons−up−:1 7 9 8 a−Nuc−down−:0 ‘k−Ons−up−:1 skip 10 11 12 ‘O−Nuc−down−:0 ‘l−Ons−up−:0 skip 13 14 15 ‘O−Nuc−down−:0 ‘O−Cod−down−:0 skip ] ‘w−Cod−down−:1 16 17 18 ] ‘g−Cod−down−:1 ‘m−Cod−down−:1 repeat repeat repeatrepeat ] ‘p−Cod−down−:1 20 19 21 22 23 ‘a−Cod−down−:0 24 ‘y−Ons−up−:1 25 27 ‘a−Nuc−down−:0 26 to use here to filter harmless spurious ambiguities from the original version of fig. 3. The kind of ambiguity involved in o</context>
</contexts>
<marker>Walther, 1999</marker>
<rawString>Markus Walther. 1999a. Deklarative prosodische Morphologie: constraint-basierte Analysen und Computermodelle zum Finnischen und Tigrinya. Niemeyer, T¬ubingen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Markus Walther</author>
</authors>
<title>One-Level Prosodic Morphology. Marburger Arbeiten zur Linguistik 1,</title>
<date>1999</date>
<journal>University of Marburg.</journal>
<volume>64</volume>
<pages>9911011</pages>
<contexts>
<context position="1757" citStr="Walther, 1999" startWordPosition="271" endWordPosition="272">ystem has received some attention in the theoretical literature. The main focus has been on the aspectual morphology of verbs, where an interesting pattern of partial reduplication emerges that is sensitive to the size of the verbal root. For example, in the active continuative, ‘to eat’ reduplicates both the initial /g/ and the final /l/ of its monosyllabic base . In contrast, bisyllabic ‘to shoot’ comes out as , where only the final /h/ is copied, this time as an infix. Temiar reduplication thus appears to be a suitably rich testing ground for a novel approach to reduplication developed by (Walther, 1999b; Walther, 2000) within a finite-state framework. Even though that approach, One-Level Prosodic Morphology, was presented from the outset as being generally applicable, it has been proven time and time again that only concrete empirical application of a particular approach to computational morphology and phonology will fully reveal its inherent virtues and weaknesses. As an example, (Beesley, 1998) reports that it was actual experimentation with grammars of word-formation in Arabic and Hungarian which fully revealed the negative effects of modelling long-distance circumfixional dependencies i</context>
<context position="3429" citStr="Walther, 1999" startWordPosition="524" endWordPosition="525"> a finite-state process by enumerating all possible forms of the copy and then making sure each was matched to the proper stem. To solve this simplified problem, no new techniques are needed in theory. In practice however, the brute-force enumeration approach apparently has not been pursued further, apart from isolated examples (see Antworth (1990), p.157f for a fixed-size case in Tagalog). This is probably because such an approach is awkward to specify in actual grammars and because it will inevitably lead to an explosion of the state space (Sproat (1992), p.161). Finally and in contrast to (Walther, 1999b), it would clearly break down for productive total reduplication, which is isomorphic to the context-sensitive language . A second motivation for choosing Temiar is that all prior analyses of its data are heavily underformalized and incomplete, irrespective of whether they are situated in the older rule paradigm (McCarthy,1982; Broselow and McCarthy, 1983; Sloan, 1988; Shaw, 1993) or an optimality-theoretic setting (Gafos, 1995; Gafos, 1996; Gafos, 1998b; Gafos, 1998a). Hence a formalized and computationally tested analysis that strives to keep a healthy balance 13 with respect to linguistic</context>
<context position="9293" citStr="Walther, 1999" startWordPosition="1453" endWordPosition="1454">ive summary, our goals for the upcoming analysis are, first, to treat the full paradigm of (1). As a second goal, we would like to reflect the emergent formal desiderata in a transparent way, in particular referring to the need to account for repetition, truncation, infixation and phonological modification. Thirdly, we will attempt a compositional analysis of the morphological exponency of aspect. 3 One-Level Prosodic Morphology In order to provide the necessary background for the Temiar analysis in 4, this section briefly reviews the finite-state approach to prosodic morphology developed in (Walther, 1999b), That work itself was presented as an extension to (Bird and Ellison, 1994)’s One-Level Phonology framework, where phonological representations, morphemes and more abstract generalizations are all finite-state automata that express surface-true constraints on word forms, and constraint combination is by automata intersection. In a nutshell, the extension comprises three main components. We (i) represent phonological strings differently for purposes of modelling prosodic morphology, (ii) implement reduplicative coyping by automata intersection, and (iii) introduce a resourceconscious variant</context>
<context position="11345" citStr="Walther, 1999" startWordPosition="1765" endWordPosition="1766">maton of a regular language as its only argument. Formally, they can be defined as follows: (3) Let be the minimal - free3 finite-state automaton for , with a finite set of states, finite alphabet , transition function , start state and set of final states . a. Assume . , where , and An example enrichment of Temiar is shown in figure 1. One can imagine how and transitions allow, figuratively speaking, forward and backward movement within a string, while self loops will absorb infixal morphemes that are intersected with fig. 1. Finally, so-called synchronization bits :1, :0 were introduced in (Walther, 1999b) to define the extent of a reduplicative base constituent in a segment-independent way. Bit value :1 marks the edges and :0 the interior segments of a base, as shown in fig. 1 for a hypothetical whole-root reduplication pattern. In actual practive, synchronization Figure 1: add repeats(add skips(add self loops(selog))) bits are sets of symbols, just like the rest of the alphabet. Sets as transition labels improve over traditional automata in terms of automata compactness, were already proposed for phonology in (Bird 3Minimality prevents non-(co)-accessible transitions from getting enriched, </context>
<context position="12566" citStr="Walther, 1999" startWordPosition="1966" endWordPosition="1967">ck of transitions keeps positional ‘movement’ in lockstep with segmental positions. b. Assume . , where , and c. , where E E E E E E skip skip skip skip skip s:1 e:0 l:0 o:0 0 1 2 3 4 g:1 5 repeat repeat repeat repeat repeat 15 . and Ellison, 1992) and do not increase mathematical expressivity beyond regular languages.4 Hence, the segmental part of fig. 1 may be defined in a modular fashion through the intersection of strings of symbol sets that mention only certain dimensions (here: phonemes and synchronisation bits), being underspecified for the unmentioned dimensions. We will again follow (Walther, 1999b) in conceiving of sets as types arranged in a type hierarchy that is structured by set inclusion, and also in allowing arbitrary boolean combinations of types. Copying as intersection Given enriched representations as in fig. 1, various patterns of reduplication are now easy to define. We can denote a synchronised abstract string by the regular expression where is the type subsuming all phonological segments. Then hypothetical total reduplication – unattested in Temiar, but wellknown from Indonesian and many other languages – is described by A variant slightly more akin to Temiar – and actua</context>
<context position="14560" citStr="Walther, 1999" startWordPosition="2282" endWordPosition="2283">mand implementation of a slightly modified 4Of course, the identity requirement for matching transitions in traditional automata intersection must be replaced by a non-empty intersection requirement for set-based matching. can help to preserve the memory efficiency of building a minimized base lexicon as the union of individual base strings first. Due to lack of space, the details will be reported elsewhere. Resource consciousness As much as we need the formal means provided by self loops for infixations like Temiar , the resulting automata overgenerate massively. What’s missing according to (Walther, 1999b) is a distinction between explicitly contributed, independent information (e.g. the infix itself) and contextual, dependent information that is tolerated but must be provided by other constraints (e.g. the self loop that hosts the infix). Therefore, a parallel distinction between two kinds of symbols – producers and consumers – was introduced. In that scenario a symbol represents an information resource that needs to be produced at least once, then can be consumed arbitrarily often. To utilize the distinction, an additional P/C bit accompanies symbols, with P/C = 1 for producers. All symbols</context>
<context position="17316" citStr="Walther, 1999" startWordPosition="2718" endWordPosition="2719">contains type formulae that denote the symbol sets, as explained before. Allowable type-combining operators are conjunction &amp;, disjunction ; and negation . The same goes for monotonic rules, which – unlike rewrite rules – can only specialize their focussed segmental position A to B. They exist in two variants, where A -r-&gt; B/C notates the case where context C is right-adjacent to the focus ( ), and vice versa for A -l-&gt; B/C. Syllabification To define the reduplicant in prosodic terms later on, we need syllabification in the first place. Here a simplified finite-state version of a proposal by (Walther, 1999a) is employed. Its key idea is to allow incremental assignment of syllable roles to segmental positions via a featural decomposition of the three traditional roles, using two binary-valued features ons and cod: Onset ons cod Nucleus ons cod Coda ons cod CodaOnset ons cod As a side-effect, one gets the fourth role CO, a monosegmental prosodic representation of true geminates. The subcomponent sbs, for sonority-based syllabification, itself rests on the computation of sonority differences between adjacent segmental positions (not shown), where sonority may either go up or down. Together with so</context>
<context position="20957" citStr="Walther, 1999" startWordPosition="3219" endWordPosition="3220">he isolated base string in stem0, before wrapping the result in the usual enrichments. However, the addition of self loops for infixation this time is a priori restricted to the position immediately before a stressed onset, in accordance with the descriptive generalization stated in 2. Experiments have shown that using the unrestricted of (3.c) would cause much unnecessary hassle in a posteriori restriction of the possible infix locations to the actually attested ones. It thus appears that Temiar provides a first case for further parametrization of at least one of the original operators from (Walther, 1999b): base := [consumer(’:1’),consumer(’:0’)*, consumer(’:1’)]. stem0(StemMaterial) := add_self_loop_before(stressed&amp;’Ons’, add_repeats(add_skips(StemMaterial &amp; base &amp; syllabification &amp; prosodic_constraints &amp; stress))). stem(Segments) := stem0(stringToSegments(Segments)). Definitions for the actual stem entries of selog, koow, yaap are shown below, using the ASCII-IPA mapping @ , E , O . In evaluating the first entry, the schwa actually translates into a producer-type disjunction ( ; ) with the help of stringToSegments. It thus makes sense to constrain this free alternation further, which is the</context>
<context position="28016" citStr="Walther, 1999" startWordPosition="4223" endWordPosition="4224">tive morphology always starts word-initial, hence the use of align left. We have a default consonant /t/ whose realization we must somehow force in the monosyllabic roots. Next comes a vowel, whose quality – or – is again regulated by the These definitions have removed the last barrier to evaluating expressions like wordform(selog &amp; simulfactive &amp; causative) or even suitable disjunctive combinations of such expressions which define entire paradigms. Figure 3 shows an example automaton for three forms. We refrain from describing a final automaton operation called Bounded Local Optimization in (Walther, 1999b) that was put 19 [s−Ons−up−:1 [ ‘y−Ons−up−:1 0 [ ‘k−Ons−up−:1 2 3 1 @−Nuc−down−:0 repeat repeat 4 5 E−Nuc−down−:0 6 Figure 3: Temiar reduplications , , a−Nuc−down−:0 r−Ons−up−:1 7 9 8 a−Nuc−down−:0 ‘k−Ons−up−:1 skip 10 11 12 ‘O−Nuc−down−:0 ‘l−Ons−up−:0 skip 13 14 15 ‘O−Nuc−down−:0 ‘O−Cod−down−:0 skip ] ‘w−Cod−down−:1 16 17 18 ] ‘g−Cod−down−:1 ‘m−Cod−down−:1 repeat repeat repeatrepeat ] ‘p−Cod−down−:1 20 19 21 22 23 ‘a−Cod−down−:0 24 ‘y−Ons−up−:1 25 27 ‘a−Nuc−down−:0 26 to use here to filter harmless spurious ambiguities from the original version of fig. 3. The kind of ambiguity involved in o</context>
</contexts>
<marker>Walther, 1999</marker>
<rawString>Markus Walther. 1999b. One-Level Prosodic Morphology. Marburger Arbeiten zur Linguistik 1, University of Marburg. 64 pp. (http://xxx.lanl.gov/abs/cs.CL/9911011).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Markus Walther</author>
</authors>
<title>Finite-state Reduplication in One-Level Prosodic Morphology.</title>
<date>2000</date>
<booktitle>In Proceedings of NAACL-2000,</booktitle>
<pages>296--302</pages>
<publisher>North American Association</publisher>
<institution>for Computational Linguistics, Morgan Kaufman.</institution>
<contexts>
<context position="1774" citStr="Walther, 2000" startWordPosition="273" endWordPosition="274">ed some attention in the theoretical literature. The main focus has been on the aspectual morphology of verbs, where an interesting pattern of partial reduplication emerges that is sensitive to the size of the verbal root. For example, in the active continuative, ‘to eat’ reduplicates both the initial /g/ and the final /l/ of its monosyllabic base . In contrast, bisyllabic ‘to shoot’ comes out as , where only the final /h/ is copied, this time as an infix. Temiar reduplication thus appears to be a suitably rich testing ground for a novel approach to reduplication developed by (Walther, 1999b; Walther, 2000) within a finite-state framework. Even though that approach, One-Level Prosodic Morphology, was presented from the outset as being generally applicable, it has been proven time and time again that only concrete empirical application of a particular approach to computational morphology and phonology will fully reveal its inherent virtues and weaknesses. As an example, (Beesley, 1998) reports that it was actual experimentation with grammars of word-formation in Arabic and Hungarian which fully revealed the negative effects of modelling long-distance circumfixional dependencies in purely finite-s</context>
<context position="13649" citStr="Walther, 2000" startWordPosition="2144" endWordPosition="2145">Temiar, but wellknown from Indonesian and many other languages – is described by A variant slightly more akin to Temiar – and actually attested in the neighbouring language Semai – that s the interior of the base in a prefixed reduplicant is just as easy: Ignoring self loops for the moment, all we need now to apply a reduplication pattern to an enriched base representation is simply to intersect the former with the latter: automata intersection has sufficient formal power to implement reduplicative copying! Here is an example, using the abbreviation for perspicuous display: As pointed out in (Walther, 2000), generalizing to a set of bases involves nothing more than enriching each base separately, then forming the union of the resulting automata. The opposite order would produce unwanted cross-string repetition, since does not distribute over union. However, an unpublished experiment shows that on-demand implementation of a slightly modified 4Of course, the identity requirement for matching transitions in traditional automata intersection must be replaced by a non-empty intersection requirement for set-based matching. can help to preserve the memory efficiency of building a minimized base lexicon</context>
</contexts>
<marker>Walther, 2000</marker>
<rawString>Markus Walther. 2000. Finite-state Reduplication in One-Level Prosodic Morphology. In Proceedings of NAACL-2000, pages 296–302, Seattle/WA. North American Association for Computational Linguistics, Morgan Kaufman. (http://xxx.lanl.gov/abs/cs.CL/0005025).</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>