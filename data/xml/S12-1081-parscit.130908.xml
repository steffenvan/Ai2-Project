<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000026">
<title confidence="0.8228525">
DSS: Text Similarity Using Lexical Alignments of Form, Distributional
Semantics and Grammatical Relations
</title>
<author confidence="0.984441">
Diana McCarthy Spandana Gella Siva Reddy
</author>
<affiliation confidence="0.997965">
Saarland University* University of Malta Lexical Computing Ltd.
</affiliation>
<email confidence="0.995114">
diana@dianamccarthy.co.uk spandanagella@gmail.com siva@sivareddy.in
</email>
<sectionHeader confidence="0.995022" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9976326">
In this paper we present our systems for the
STS task. Our systems are all based on a
simple process of identifying the components
that correspond between two sentences. Cur-
rently we use words (that is word forms), lem-
mas, distributional similar words and gram-
matical relations identified with a dependency
parser. We submitted three systems. All sys-
tems only use open class words. Our first sys-
tem (alignheuristic) tries to obtain a map-
ping between every open class token using all
the above sources of information. Our second
system (wordsim) uses a different algorithm
and unlike alignheuristic, it does not use
the dependency information. The third sys-
tem (average) simply takes the average of
the scores for each item from the other two
systems to take advantage of the merits of
both systems. For this reason we only pro-
vide a brief description of that. The results
are promising, with Pearson’s coefficients on
each individual dataset ranging from .3765
to .7761 for our relatively simple heuristics
based systems that do not require training on
different datasets. We provide some analy-
sis of the results and also provide results for
our data using Spearman’s, which as a non-
parametric measure which we argue is better
able to reflect the merits of the different sys-
tems (average is ranked between the others).
</bodyText>
<sectionHeader confidence="0.999103" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.913723125">
Our motivation for the systems entered in the STS
task (Agirre et al., 2012) was to model the contribu-
* The first author is a visiting scholar on the Erasmus
Mundus Masters Program in ‘Language and Communication
Technologies’ (LCT, 2007–0060).
tion of each linguistic component of both sentences
to the similarity of the texts by finding an align-
ment. Ultimately such a system could be exploited
for ranking candidate paraphrases of a chunk of text
of any length. We envisage a system as outlined in
the future work section. The systems reported are
simple baselines to such a system. We have two
main systems (alignheuristic and wordsim) and
also a system which simply uses the average score
for each item from the two main systems (average).
In our systems we:
</bodyText>
<listItem confidence="0.803757111111111">
• only deal with open class words as to-
kens i.e. nouns, verbs, adjectives, adverbs.
alignheuristic and average also use num-
bers
• assume that tokens have a 1:1 mapping
• match:
– word forms
– lemmas
– distributionally similar lemmas
</listItem>
<bodyText confidence="0.99544925">
– (alignheuristic and average only) ar-
gument or head in a matched grammatical
relation with a word that already has a lex-
ical mapping
</bodyText>
<listItem confidence="0.970049">
• score the sentence pair based on the size of the
overlap. Different formulations of the score are
used by our methods
</listItem>
<bodyText confidence="0.9999432">
The paper is structured as follows. In the next
section we make a brief mention of related work
though of course there will be more pertinent related
work presented and published at SemEval 2012. In
section 3 we give a detailed account of the systems
</bodyText>
<page confidence="0.956773">
557
</page>
<note confidence="0.972701">
First Joint Conference on Lexical and Computational Semantics (*SEM), pages 557–564,
Montr´eal, Canada, June 7-8, 2012. c�2012 Association for Computational Linguistics
</note>
<bodyText confidence="0.999695">
and in section 4 we provide the results obtained on
the training data on developing our systems. In sec-
tion 5 we present the results on the test data, along
with a little analysis using the gold standard data. In
section 6 we conclude our findings and discuss our
ideas for future work.
</bodyText>
<sectionHeader confidence="0.999726" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999781088235294">
Semantic textual similarity relates to textual entail-
ment (Dagan et al., 2005), lexical substitution (Mc-
Carthy and Navigli, 2009) and paraphrasing (Hirst,
2003). The key issue for semantic textual similarity
is that the task is to determine similarity, where sim-
ilarity is cast as meaning equivalence. 1 In textual
entailment the relation under question is the more
specific relation of entailment, where the meaning
of one sentence is entailed by another and a sys-
tem needs to determine the direction of the entail-
ment. Lexical substitution relates to semantic tex-
tual similarity though the task involves a lemma in
the context of a sentence, candidate substitutes are
not provided, and the relation at question in the task
is one of substitutability. 2 Paraphrase recognition
is a highly related task, for example using compa-
rable corpora (Barzilay and Elhadad, 2003), and it
is likely that semantic textual similarity measures
might be useful for ranking candidates in paraphrase
acquisition.
In addition to various works related to textual
entailment, lexical substitution and paraphrasing,
there has been some prior work explicitly on se-
mantic text similarity. Semantic textual similarity
has been explored in various works. Mihalcea et al.
(2006) extend earlier work on word similarity us-
ing various WordNet similarity measures (Patward-
han et al., 2003) and a couple of corpus-based dis-
tributional measures: PMI-IR (Turney, 2002) and
LSA (Berry, 1992). They use a measure which
takes a summation over all tokens in both sen-
tences. For each token they find the maximum sim-
ilarity (WordNet or distributional) weighted by the
inverse document frequency of that word. The dis-
</bodyText>
<footnote confidence="0.959102666666667">
1See the guidelines given to the annotators at
http://www.cs.columbia.edu/˜weiwei/workshop/
instructions.pdf
2This is more or less semantic equivalence since the an-
notators were instructed to focus on meaning http://www.
dianamccarthy.co.uk/files/instructions.pdf.
</footnote>
<bodyText confidence="0.999831529411765">
tributional similarity measures perform at a simi-
lar level to the knowledge-based measures that use
WordNet. Mohler and Mihalcea (2009) adapt this
work for automatic short answer grading, that is
matching a candidate answer to one supplied by
the tutor. Mohler et al. (2011) take this applica-
tion forward, combining lexical semantic similarity
measures with a graph-alignment which considers
dependency graphs using the Stanford dependency
parser (de Marneffe et al., 2006) in terms of lexical,
semantic and syntactic features. A score is then pro-
vided for each node in the graph. The features are
combined using machine learning.
The systems we propose likewise use lexical sim-
ilarity and dependency relations, but in a simple
heuristic formulation without a man-made thesaurus
such as WordNet and without machine learning.
</bodyText>
<sectionHeader confidence="0.99754" genericHeader="method">
3 Systems
</sectionHeader>
<bodyText confidence="0.9997507">
We lemmatize and part-of-speech tag the data using
TreeTagger (Schmid, 1994). We process the tagged
data with default settings of the Malt Parser (Nivre
et al., 2007) to dependency parse the data. All sys-
tems make use of a distributional thesaurus which
lists distributionally similar lemmas (‘neighbours’)
for a given lemma. This is a thesaurus constructed
using log-dice (Rychl´y, 2008) and UkWaC (Fer-
raresi et al., 2008). 3 Note that we use only the
top 20 neighbours for any word in all the methods
described below. We have not experimented with
varying this threshold.
In the following descriptions, we refer to our sen-
tences as s1 and s2 and these open classed tokens
within those sentences as ti E s1 and tj E s2 where
each token in either sentence is represented by a
word (w), lemma (l), part-of-speech (p) and gram-
matical relation (gr), identified by the Malt parser,
to its dependency head at a given position (hp) in
the same sentence.
</bodyText>
<subsectionHeader confidence="0.981641">
3.1 alignheuristic
</subsectionHeader>
<bodyText confidence="0.998748333333333">
This method uses nouns, verbs, adjectives, adverbs
and numbers. The algorithm aligns words (w), or
lemmas (l) from left to right from s1 to s2 and vice
</bodyText>
<footnote confidence="0.9783925">
3This is the ukWaC distributional thesaurus avail-
able in Sketch Engine (Kilgarriff et al., 2004) at
http://the.sketchengine.co.uk/bonito/run.cgi/
first\_form?corpname=preloaded/ukwac2
</footnote>
<page confidence="0.992828">
558
</page>
<bodyText confidence="0.995781">
versa ( ). If there is no alignment for words or
lemmas then it does the same matching process (s1
given s2 and vice versa) for distributionally similar
neighbours using the distributional thesaurus men-
tioned above ( ) and also another matching pro-
cess looking for a corresponding grammatical rela-
tion identified with the Malt parser in the other sen-
tence where the head (or argument) already has a
</bodyText>
<listItem confidence="0.949254214285714">
match in both sentences ( ).
A fuller and more formal description of the algo-
rithm follows:
1. retain nouns, verbs (not be), adjectives, adverbs
and numbers in both sentences s1 and s2.
2. :
(a) look for word matches
• wi E s1 to wj E s2, left to right i.e. the
first matching wj E s2 is selected as a
match for wi.
• wj E s2 to wi E s1, left to right i.e. the
first matching wi E s1 is selected as a
match for wj
(b) and then lemma matches for any ti E s1
and tj E s1 not matched in steps 2a
• li E s1 to lj E s2 , left to right i.e. the
first matching lj E s2 is selected as a
match for li.
• lj E s2 to li E s1 , left to right i.e. the
first matching li E s1 is selected as a
match for lj
3. using only ti E s1 and tj E s2 not matched in
the above steps:
• : match lemma and PoS (l + p) with
the distributional thesaurus against the top
20 most similar lemma-pos entries. That
is:
(a) For l + pi E s1, if not already matched
</listItem>
<bodyText confidence="0.980877810810811">
at step 2 above, find the most similar
words in the thesaurus, and match if
one of these is in l + pj E s2, left to
right i.e. the first matching l + pj E s2
to any of the most similar words to
l + pi according to the thesaurus is se-
lected as a match for l + pi E s1.
(b) For l + pj E s2, if not already matched
at step 2 above, find the most similar
words in the thesaurus, and match if
one of these is in l + pi E s1, left to
right
• : match the tokens, if not already
matched at step 2 above, by looking for
a head or argument relation with a token
that has been matched at step 2 to a token
with the inverse relation. That is:
i For ti E s1, if not already matched at
step 2 above, if hpi E s1 (the pointer
to the head, i.e. parent, of ti) refers to
a token tx E s1 which has at tk
in s2, and there exists a tq E s2 with
grq = gri and hpq = tk, then match ti
with tq
ii For ti E s1 , if not already matched
at step 2 or the preceding step (
3i) and if there exists another tx E s1
with a hpx which refers to ti (i.e. ti is
the parent, or head, of tx) with a match
between tx and tk E s2 from step 2, 4
and where tk has grk = grx with hpk
which refers to tq in s2, then match ti
with tq 5
iii we do likewise in reverse for s2 to s1
and then check all matches are recip-
rocated with the same 1:1 mapping
Finally, we calculate the score sim(s1, s2):
</bodyText>
<equation confidence="0.998977">
  ||+ (wt x  |+ |) x 5 (1)
|s1 |+ |s2|
</equation>
<bodyText confidence="0.958720285714286">
where wt is a weight of 0.5 or less (see below).
The sim score gives a score of 5 where two
sentences have the same open class tokens, since
matches in both directions are included and the de-
nominator is the number of open class tokens in both
sentences. The score is 0 if there are no matches.
The thesaurus and grammatical relation matches are
counted equally and are considered less important
4In the example illustrated in figure 1 and discussed below,
ti could be rose in the upper sentence (s1) and Nasdaq would be
tx and tk.
5So in our example, from figure 1, ti (rose) is matched with tq
(climb) as climb is the counterpart head to rose for the matched
arguments (Nasdaq).
</bodyText>
<page confidence="0.986927">
559
</page>
<figure confidence="0.833971">
malt
</figure>
<figureCaption confidence="0.999731">
Figure 1: Example of matching with alignheuristic
</figureCaption>
<figure confidence="0.6426536">
malt
thesaurus
The tech−loaded Nasdaq composite rose 20.96 points to 1595.91, ending at its highest level for 12 months.
The technology−laced Nasdaq Composite Index &lt;.IXIC&gt; climbed 19.11
points, or 1.2 percent, to 1,615.02.
</figure>
<bodyText confidence="0.999517136363636">
for the score as the exact matches. We set wt to 0.4
for the official run, though we could improve perfor-
mance by perhaps setting a bit lower as shown below
in section 4.1.
Figure 1 shows an example pair of sentences from
the training data in MSRpar. The solid lines show
alignments between words. Composite and compos-
ite are not matched because the lemmatizer assumes
that the former is a proper noun and does not decap-
italise; we could decapitalise all proper nouns. The
dotted arcs show parallel dependency relations in the
sentences where the argument (Nasdaq) is matched
by . The process therefore assumes the
corresponding heads (rise and climb) align. In addi-
tion, finds a match from climb to rise as rise is
in the top 20 most similar words (neighbours) in the
distributional thesaurus. climb is not however in the
top 20 for rise and so a link is not found in the other
direction. We have not yet experimented with val-
idating the thesaurus and grammatical relation pro-
cesses together, though that would be worthwhile in
future.
</bodyText>
<subsectionHeader confidence="0.992928">
3.2 wordsim
</subsectionHeader>
<bodyText confidence="0.998645166666667">
In this method, we first choose the shortest sentence
based on the number of open words. Let s1 and s2
be the shortest and longest sentences respectively.
For every lemma li ∈ s1, we find its best matching
lemma lj ∈ s2 using the following heuristics and
assigning an alignment score as follows:
</bodyText>
<listItem confidence="0.999066">
1. if li=lj, then the alignment score of li
(algnscr(li)) is one.
2. else li ∈ s1 is matched with a lemma lj ∈ s2
</listItem>
<bodyText confidence="0.9993675">
with which it has the highest distributional sim-
ilarity. 6 The alignment score, algnscr(li) is
the distributional similarity between li and lj
(which is always less than one).
The final sentence similarity score between the
pair s1 and s2 is computed as
</bodyText>
<equation confidence="0.9764845">
sim(s1, s2) = Eli∈s1 algnscr(li) (2)
|s1|
</equation>
<subsectionHeader confidence="0.558329">
3.3 average
</subsectionHeader>
<bodyText confidence="0.99991525">
This system simple uses the average score for each
item from alignheuristic and wordsim. This is
simply so we can make a compromise between the
merits of the two systems.
</bodyText>
<sectionHeader confidence="0.953409" genericHeader="method">
4 Experiments on the Training Data
</sectionHeader>
<bodyText confidence="0.9998195">
Table 1 displays the results on training data for the
system settings as they were for the final test run. We
conducted further analysis for the alignheuristic
system and that is reported in the following subsec-
tion. We can see that while the alignheuristic
is better on the MSRpar and SMT-eur datasets, the
wordsim outperforms it on the MSRvid dataset,
which contains shorter, simpler sentences. One rea-
son might be that the wordsim credits alignments
in one direction only and this works well when sen-
tences are of a similar length but can loose out on the
longer paraphrase and SMT data. This behaviour is
</bodyText>
<footnote confidence="0.997636">
6Provided this is within the top 20 most similar words in the
thesaurus.
</footnote>
<page confidence="0.983818">
560
</page>
<table confidence="0.99494375">
MSRpar MSRvid SMT-eur
alignheuristic 0.6015 0.6994 0.5222
wordsim 0.4134 0.7658 0.4479
average 0.5337 0.7535 0.5061
</table>
<tableCaption confidence="0.999956">
Table 1: Results on training data
</tableCaption>
<bodyText confidence="0.980156">
confirmed by the results on the test data reported be-
low in section 5, though we cannot rule out that other
factors play a part.
</bodyText>
<subsectionHeader confidence="0.924182">
4.1 alignheuristic
</subsectionHeader>
<bodyText confidence="0.99638496875">
We developed the system on the training data for the
purpose of finding bugs, and setting the weight in
equation 1. During development we found the opti-
mal weight for wt to be 0.4. 7 Unfortunately we did
not leave ourselves sufficient time to set the weights
after resolving the bugs. In table 1 we report the
results on the training data for the system that we
uploaded, however in table 2 we report more recent
results for the final system but with different values
of wt. From table 2 it seems that results may have
been improved if we had determined the final value
of wt after debugging our system fully, however this
depends on the type of data as 0.4 was optimal for
the datasets with more complex sentences (MSRpar
and SMT-eur).
In table 3, we report results for alignheuristic
with and without the distributional similarity
thesaurus ( ) and the dependency relations
( ). In table 4 we show the total number of to-
ken alignments made by the different matching pro-
cesses on the training data. We see, from table 4
that the MSRvid data relies on the thesaurus and de-
pendency relations to a far greater extent than the
other datasets, presumably because of the shorter
sentences where many have a few contrasting words
in similar syntactic relations, for example s1 Some-
one is drawing. s2 Someone is dancing. 8 We see
from table 3 that the use of these matching processes
is less accurate for MSRvid and that while
improves performance, seems to degrade per-
formance. From table 2 it would seem that on this
type of data we would get the best results by reduc-
</bodyText>
<footnote confidence="0.73947725">
7We have not yet attempted setting the weight on alignment
by relation and alignment by distributional similarity separately.
8Note that the alignheuristic algorithm is symmetrical
with respect to s1 and s2 so it does not matter which is which.
</footnote>
<table confidence="0.999762285714286">
wt MSRpar MSRvid SMT-eur
0.5 0.5998 0.6518 0.5290
0.4 0.6015 0.6994 0.5222
0.3 0.6020 0.7352 0.5146
0.2 0.6016 0.7577 0.5059
0.1 0.6003 0.7673 0.4964
0 0.5981 0.7661 0.4863
</table>
<tableCaption confidence="0.7140585">
Table 2: Results for the alignheuristic algorithm on
the training data: varying wt
</tableCaption>
<table confidence="0.999856">
MSR MSR SMT
par vid -eur
- + 0.6008 0.7245 0.5129
+ - 0.5989 0.7699 0.4959
- - 0.5981 0.7661 0.4863
+ + 0.6015 0.6994 0.5222
</table>
<tableCaption confidence="0.998944">
Table 3: Results for the alignheuristic algorithm on
</tableCaption>
<bodyText confidence="0.990043">
the training data: with and without and
ing wt to a minimum, and perhaps it would make
sense to drop . Meanwhile, on the longer more
complex MSRpar and SMT-eur data, the less precise
and are used less frequently (relative to
the ) but can be seen from table 3 to improve
performance on both training datasets. Moreover, as
we mention above, from table 2 the parameter set-
ting of 0.4 used for our final test run was optimal for
these datasets.
</bodyText>
<table confidence="0.9929415">
MSRpar MSRvid SMT-eur
10960 2349 12155
378 1221 964
1008 965 1755
</table>
<tableCaption confidence="0.9980835">
Table 4: Number of token alignments for the different
matching processes
</tableCaption>
<page confidence="0.924207">
561
</page>
<table confidence="0.99847225">
run ALL MSRpar MSRvid SMT-eur On-WN SMT-news
alignheuristic .5253 .5735 (24) .7123 (53) .4781 (25) .6984 (7) .4177 (38)
average .5490 (58) .5020 (48) .7645 (41) .4875 (16) .6677(14) .4324 (31)
wordsim .5130 .3765 (75) .7761 (34) .4161 (58) .5728 (59) .3964 (48)
</table>
<tableCaption confidence="0.966768">
Table 5: Official results: Rank (out of 89) is shown in brackets
</tableCaption>
<table confidence="0.99952225">
run ALL MSRpar MSRvid SMT-eur On-WN SMT-news average p
alignheuristic 0.5216 0.5539 0.7125 0.5404 0.6928 0.3655 0.5645
average 0.5087 0.4818 0.7653 0.5415 0.6302 0.3835 0.5518
wordsim 0.4279 0.3608 0.7799 0.4487 0.4976 0.3388 0.4756
</table>
<tableCaption confidence="0.988295">
Table 7: Spearman’s p for the 5 datasets, ’all’ and the average coefficient across the datasets
</tableCaption>
<table confidence="0.9931455">
run mean Allnrm
alignheuristic 0.6030 (21) 0.7962 (42)
average 0.5943 (26) 0.8047 (35)
wordsim 0.5287 (55) 0.7895 (49)
</table>
<tableCaption confidence="0.9932295">
Table 6: Official results: Further metrics suggested in dis-
cussion. Rank (out of 89) is shown in brackets
</tableCaption>
<sectionHeader confidence="0.999411" genericHeader="evaluation">
5 Results
</sectionHeader>
<bodyText confidence="0.999982545454545">
Table 5 provides the official results for our submitted
systems, along with the rank on each dataset. The re-
sults in the ’all’ column which combine all datasets
together are at odds with our intuitions. Our sys-
tems were ranked higher in every individual dataset
compared to the ’all’ ranking, with the exception of
wordsim and the MSRpar dataset. This ’all’ met-
ric is anticipated to impact systems that have dif-
ferent settings for different types of data however
we did not train our systems to run differently on
different data. We used exactly the same parame-
ter settings for each system on every dataset. We
believe Pearson’s measure has a significant impact
on results because it is a parametric measure and
as such the shape of the distribution (the distribu-
tion of scores) is assumed to be normal. We present
the results in table 6 from new metrics proposed by
participants during the post-results discussion: All-
nrm (normalised) and mean (this score is weighted
by the number of sentence pairs in each dataset). 9
The Allnrm score, proposed by a participant during
the discussion phase to try and combat issues with
</bodyText>
<footnote confidence="0.6115235">
9Post-results discussion is archived at http://groups.
google.com/group/sts-semeval/topics
</footnote>
<bodyText confidence="0.995469242424242">
the ’all’ score, also does not accord with our intu-
ition given the ranks of our systems on the individ-
ual datasets. The mean score, proposed by another
participant, however does reflect performance on the
individual datasets. Our average system is ranked
between alignheuristic and wordsim which is
in line with our expectations given results on the
training data and individual datasets.
As mentioned above, an issue with the use of
Pearson’s correlation coefficient is that it is para-
metric and assumes that the scores are normally dis-
tributed. We calculated Spearman’s p which is the
non-parametric equivalent of Pearson’s and uses the
ranks of the scores, rather than the actual scores. 10
The results are presented in table 7. We cannot cal-
culate the results for other systems, and therefore the
ranks for our system, since we do not have the other
system’s outputs but we do see that the relative per-
formance of our system on ’all’ is more in line with
our expectations: average, which simply uses the
average of the other two systems for each item, is
usually ranked between the other two systems, de-
pending on the dataset. Spearman’s ’all’ gives a sim-
ilar ranking of our three systems as the mean score.
We also show average p. This is a macro average
of the Spearman’s value for the 5 datasets without
weighting by the number of sentence pairs. 11
10Note that Spearman’s p is often a little lower than Pear-
son’s (Mitchell and Lapata, 2008)
11We do recognise the difficulty in determining metrics on a
new pilot study. The task organisers are making every effort to
make it clear that this enterprise is a pilot, not a competition and
that they welcome feedback.
</bodyText>
<page confidence="0.994821">
562
</page>
<sectionHeader confidence="0.999302" genericHeader="conclusions">
6 Conclusions
</sectionHeader>
<bodyText confidence="0.99998565">
The systems were developed in less than a week
including the time with the test data. There are
many trivial fixes that may improve the basic algo-
rithm, such as decapitalising proper nouns. There
are many things we would like to try, such as val-
idating the dependency matching process with the
thesaurus matching. We would like to match larger
units rather than tokens, with preferences towards
the longer matching blocks. In parallel to the devel-
opment of alignheuristic, we developed a sys-
tem which measures the similarity between a node
in the dependency tree of s1 and a node in the de-
pendency tree of s2 as the sum of the lexical sim-
ilarity of the lemmas at the nodes and the simi-
larity of its children nodes. We did not submit a
run for the system as it did not perform as well as
alignheuristic, probably because the score fo-
cused on structure too much. We hope to spend time
developing this system in future.
Ultimately, we envisage a system that:
</bodyText>
<listItem confidence="0.969310545454546">
• can have non 1:1 mappings between tokens, i.e.
a phrase may be paraphrased as a word for ex-
ample blow up may be paraphrased as explode
• can map between sequences of non-contiguous
words for example the words in the phrase blow
up may be separated but mapped to the word
explode as in the bomb exploded H They blew
it up
• has categories (such as equivalence, entailment,
negation, omission ... ) associated with each
mapping. Speculation, modality and sentiment
</listItem>
<bodyText confidence="0.982927277777778">
should be indicated on any relevant chunk so
that differences can be detected between candi-
date and referent
• scores the candidate using a function of the
scores of the mapped units (as in the systems
described above) but alters the score to reflect
the category as well as the source of the map-
ping, for example entailment without equiva-
lence should reduce the similarity score, in con-
trast to equivalence, and negation should re-
duce this still further
Crucially we would welcome a task where anno-
tators would also provide a score on sub chunks of
the sentences (or arbitrary blocks of text) that align
along with a category for the mapping (equivalence,
entailment, negation etc..). This would allow us to
look under the hood at the text similarity task and de-
termine the reason behind the similarity judgments.
</bodyText>
<sectionHeader confidence="0.996314" genericHeader="acknowledgments">
7 Acknowledgements
</sectionHeader>
<bodyText confidence="0.99954375">
We thank the task organisers for their efforts in or-
ganising the task and their readiness to take on board
discussions on this as a pilot. We also thank the
SemEval-2012 co-ordinators.
</bodyText>
<sectionHeader confidence="0.98947" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.785221285714286">
Agirre, E., Cer, D., Diab, M., and Gonzalez-Agirre,
A. (2012). Semeval-2012 task 6: A pilot on se-
mantic textual similarity. In Proceedings of the
6th International Workshop on Semantic Evalua-
tion (SemEval 2012), in conjunction with the First
Joint Conference on Lexical and Computational
Semantics (*SEM 2012).
</reference>
<bodyText confidence="0.825475">
Barzilay, R. and Elhadad, N. (2003). Sentence align-
ment for monolingual comparable corpora. In
Collins, M. and Steedman, M., editors, Proceed-
ings of the 2003 Conference on Empirical Meth-
ods in Natural Language Processing, pages 25–
32.
Berry, M. (1992). Large scale singular value compu-
tations. International Journal of Supercomputer
Applications, 6(1):13–49.
</bodyText>
<reference confidence="0.898529375">
Dagan, I., Glickman, O., and Magnini, B. (2005).
The pascal recognising textual entailment chal-
lenge. In Proceedings of the PASCAL First Chal-
lenge Workshop, pages 1–8, Southampton, UK.
de Marneffe, M.-C., MacCartney, B., and Man-
ning, C. D. (2006). Generating typed dependency
parses from phrase structure parses. In To appear
at LREC-06.
Ferraresi, A., Zanchetta, E., Baroni, M., and Bernar-
dini, S. (2008). Introducing and evaluating
ukwac, a very large web-derived corpus of en-
glish. In Proceedings of the Sixth International
Conference on Language Resources and Evalua-
tion (LREC 2008), Marrakech, Morocco.
Hirst, G. (2003). Paraphrasing paraphrased. In-
vited talk at the Second International Workshop
</reference>
<page confidence="0.989629">
563
</page>
<reference confidence="0.996488192982456">
on Paraphrasing, 41st Annual Meeting of the As-
sociation for Computational Linguistics.
Kilgarriff, A., Rychl´y, P., Smrz, P., and Tugwell, D.
(2004). The sketch engine. In Proceedings of Eu-
ralex, pages 105–116, Lorient, France. Reprinted
in Patrick Hanks (ed.). 2007. Lexicology: Critical
concepts in Linguistics. London: Routledge.
McCarthy, D. and Navigli, R. (2009). The English
lexical substitution task. Language Resources and
Evaluation Special Issue on Computational Se-
mantic Analysis of Language: SemEval-2007 and
Beyond, 43(2):139–159.
Mihalcea, R., Corley, C., and Strapparava, C.
(2006). Corpus-based and knowledge-based mea-
sures of text semantic similarity. In Proceedings
of the American Association for Artificial Intelli-
gence (AAAI 2006), Boston, MA.
Mitchell, J. and Lapata, M. (2008). Vector-based
models of semantic composition. In Proceed-
ings ofACL-08: HLT, pages 236–244, Columbus,
Ohio. Association for Computational Linguistics.
Mohler, M., Bunescu, R., and Mihalcea, R. (2011).
Learning to grade short answer questions us-
ing semantic similarity measures and dependency
graph alignments. In Proceedings of the 49th
Annual Meeting of the Association for Compu-
tational Linguistics: Human Language Technolo-
gies, pages 752–762, Portland, Oregon, USA. As-
sociation for Computational Linguistics.
Mohler, M. and Mihalcea, R. (2009). Text-to-text se-
mantic similarity for automatic short answer grad-
ing. In Proceedings of the 12th Conference of
the European Chapter of the ACL (EACL 2009),
pages 567–575, Athens, Greece. Association for
Computational Linguistics.
Nivre, J., Hall, J., Nilsson, J., Chanev, A., Eryigit,
G., K¨ubler, S., Marinov, S., and Marsi, E. (2007).
Maltparser: A language-independent system for
data-driven dependency parsing. Natural Lan-
guage Engineering, 13(2):95–135.
Patwardhan, S., Banerjee, S., and Pedersen, T.
(2003). Using measures of semantic relatedness
for word sense disambiguation. In Proceedings
of the Fourth International Conference on Intelli-
gent Text Processing and Computational Linguis-
tics (CICLing 2003), Mexico City.
Rychl´y, P. (2008). A lexicographer-friendly associ-
ation score. In Proceedings of 2nd Workshop on
Recent Advances in Slavonic Natural Languages
Processing, RASLAN 2008, Brno.
Schmid, H. (1994). Probabilistic Part-of-Speech
Tagging Using Decision Trees. In Proceedings of
the International Conference on New Methods in
Language Processing, pages 44–49, Manchester,
UK.
Turney, P. D. (2002). Mining the web for synonyms:
Pmi-ir versus lsa on toefl. CoRR, cs.LG/0212033.
</reference>
<page confidence="0.998153">
564
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.748555">
<title confidence="0.994069">DSS: Text Similarity Using Lexical Alignments of Form, Semantics and Grammatical Relations</title>
<author confidence="0.999774">Diana McCarthy Spandana Gella Siva Reddy</author>
<affiliation confidence="0.962619">of Malta Lexical Computing Ltd.</affiliation>
<email confidence="0.824731">diana@dianamccarthy.co.ukspandanagella@gmail.comsiva@sivareddy.in</email>
<abstract confidence="0.997879129032258">In this paper we present our systems for the STS task. Our systems are all based on a simple process of identifying the components that correspond between two sentences. Currently we use words (that is word forms), lemmas, distributional similar words and grammatical relations identified with a dependency parser. We submitted three systems. All systems only use open class words. Our first system (alignheuristic) tries to obtain a mapping between every open class token using all the above sources of information. Our second (wordsim) uses a algorithm and unlike alignheuristic, it does not use the dependency information. The third system (average) simply takes the average of the scores for each item from the other two systems to take advantage of the merits of both systems. For this reason we only provide a brief description of that. The results promising, with Pearson’s on each individual dataset ranging from .3765 to .7761 for our relatively simple heuristics based systems that do not require training on datasets. We provide some analysis of the results and also provide results for our data using Spearman’s, which as a nonparametric measure which we argue is better to reflect the merits of the systems (average is ranked between the others).</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>E Agirre</author>
<author>D Cer</author>
<author>M Diab</author>
<author>A Gonzalez-Agirre</author>
</authors>
<title>Semeval-2012 task 6: A pilot on semantic textual similarity.</title>
<date>2012</date>
<booktitle>In Proceedings of the 6th International Workshop on Semantic Evaluation (SemEval 2012), in conjunction with the First Joint Conference on Lexical and Computational Semantics (*SEM</booktitle>
<contexts>
<context position="1698" citStr="Agirre et al., 2012" startWordPosition="264" endWordPosition="267">systems. For this reason we only provide a brief description of that. The results are promising, with Pearson’s coefficients on each individual dataset ranging from .3765 to .7761 for our relatively simple heuristics based systems that do not require training on different datasets. We provide some analysis of the results and also provide results for our data using Spearman’s, which as a nonparametric measure which we argue is better able to reflect the merits of the different systems (average is ranked between the others). 1 Introduction Our motivation for the systems entered in the STS task (Agirre et al., 2012) was to model the contribu* The first author is a visiting scholar on the Erasmus Mundus Masters Program in ‘Language and Communication Technologies’ (LCT, 2007–0060). tion of each linguistic component of both sentences to the similarity of the texts by finding an alignment. Ultimately such a system could be exploited for ranking candidate paraphrases of a chunk of text of any length. We envisage a system as outlined in the future work section. The systems reported are simple baselines to such a system. We have two main systems (alignheuristic and wordsim) and also a system which simply uses t</context>
</contexts>
<marker>Agirre, Cer, Diab, Gonzalez-Agirre, 2012</marker>
<rawString>Agirre, E., Cer, D., Diab, M., and Gonzalez-Agirre, A. (2012). Semeval-2012 task 6: A pilot on semantic textual similarity. In Proceedings of the 6th International Workshop on Semantic Evaluation (SemEval 2012), in conjunction with the First Joint Conference on Lexical and Computational Semantics (*SEM 2012).</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Dagan</author>
<author>O Glickman</author>
<author>B Magnini</author>
</authors>
<title>The pascal recognising textual entailment challenge.</title>
<date>2005</date>
<booktitle>In Proceedings of the PASCAL First Challenge Workshop,</booktitle>
<pages>1--8</pages>
<location>Southampton, UK.</location>
<contexts>
<context position="3676" citStr="Dagan et al., 2005" startWordPosition="602" endWordPosition="605">Eval 2012. In section 3 we give a detailed account of the systems 557 First Joint Conference on Lexical and Computational Semantics (*SEM), pages 557–564, Montr´eal, Canada, June 7-8, 2012. c�2012 Association for Computational Linguistics and in section 4 we provide the results obtained on the training data on developing our systems. In section 5 we present the results on the test data, along with a little analysis using the gold standard data. In section 6 we conclude our findings and discuss our ideas for future work. 2 Related Work Semantic textual similarity relates to textual entailment (Dagan et al., 2005), lexical substitution (McCarthy and Navigli, 2009) and paraphrasing (Hirst, 2003). The key issue for semantic textual similarity is that the task is to determine similarity, where similarity is cast as meaning equivalence. 1 In textual entailment the relation under question is the more specific relation of entailment, where the meaning of one sentence is entailed by another and a system needs to determine the direction of the entailment. Lexical substitution relates to semantic textual similarity though the task involves a lemma in the context of a sentence, candidate substitutes are not prov</context>
</contexts>
<marker>Dagan, Glickman, Magnini, 2005</marker>
<rawString>Dagan, I., Glickman, O., and Magnini, B. (2005). The pascal recognising textual entailment challenge. In Proceedings of the PASCAL First Challenge Workshop, pages 1–8, Southampton, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M-C de Marneffe</author>
<author>B MacCartney</author>
<author>C D Manning</author>
</authors>
<title>Generating typed dependency parses from phrase structure parses.</title>
<date>2006</date>
<note>In To appear at LREC-06.</note>
<marker>de Marneffe, MacCartney, Manning, 2006</marker>
<rawString>de Marneffe, M.-C., MacCartney, B., and Manning, C. D. (2006). Generating typed dependency parses from phrase structure parses. In To appear at LREC-06.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Ferraresi</author>
<author>E Zanchetta</author>
<author>M Baroni</author>
<author>S Bernardini</author>
</authors>
<title>Introducing and evaluating ukwac, a very large web-derived corpus of english.</title>
<date>2008</date>
<booktitle>In Proceedings of the Sixth International Conference on Language Resources and Evaluation (LREC</booktitle>
<location>Marrakech, Morocco.</location>
<contexts>
<context position="6798" citStr="Ferraresi et al., 2008" startWordPosition="1079" endWordPosition="1083">systems we propose likewise use lexical similarity and dependency relations, but in a simple heuristic formulation without a man-made thesaurus such as WordNet and without machine learning. 3 Systems We lemmatize and part-of-speech tag the data using TreeTagger (Schmid, 1994). We process the tagged data with default settings of the Malt Parser (Nivre et al., 2007) to dependency parse the data. All systems make use of a distributional thesaurus which lists distributionally similar lemmas (‘neighbours’) for a given lemma. This is a thesaurus constructed using log-dice (Rychl´y, 2008) and UkWaC (Ferraresi et al., 2008). 3 Note that we use only the top 20 neighbours for any word in all the methods described below. We have not experimented with varying this threshold. In the following descriptions, we refer to our sentences as s1 and s2 and these open classed tokens within those sentences as ti E s1 and tj E s2 where each token in either sentence is represented by a word (w), lemma (l), part-of-speech (p) and grammatical relation (gr), identified by the Malt parser, to its dependency head at a given position (hp) in the same sentence. 3.1 alignheuristic This method uses nouns, verbs, adjectives, adverbs and n</context>
</contexts>
<marker>Ferraresi, Zanchetta, Baroni, Bernardini, 2008</marker>
<rawString>Ferraresi, A., Zanchetta, E., Baroni, M., and Bernardini, S. (2008). Introducing and evaluating ukwac, a very large web-derived corpus of english. In Proceedings of the Sixth International Conference on Language Resources and Evaluation (LREC 2008), Marrakech, Morocco.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Hirst</author>
</authors>
<title>Paraphrasing paraphrased. Invited talk at the</title>
<date>2003</date>
<booktitle>Second International Workshop on Paraphrasing, 41st Annual Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="3758" citStr="Hirst, 2003" startWordPosition="615" endWordPosition="616">nce on Lexical and Computational Semantics (*SEM), pages 557–564, Montr´eal, Canada, June 7-8, 2012. c�2012 Association for Computational Linguistics and in section 4 we provide the results obtained on the training data on developing our systems. In section 5 we present the results on the test data, along with a little analysis using the gold standard data. In section 6 we conclude our findings and discuss our ideas for future work. 2 Related Work Semantic textual similarity relates to textual entailment (Dagan et al., 2005), lexical substitution (McCarthy and Navigli, 2009) and paraphrasing (Hirst, 2003). The key issue for semantic textual similarity is that the task is to determine similarity, where similarity is cast as meaning equivalence. 1 In textual entailment the relation under question is the more specific relation of entailment, where the meaning of one sentence is entailed by another and a system needs to determine the direction of the entailment. Lexical substitution relates to semantic textual similarity though the task involves a lemma in the context of a sentence, candidate substitutes are not provided, and the relation at question in the task is one of substitutability. 2 Parap</context>
</contexts>
<marker>Hirst, 2003</marker>
<rawString>Hirst, G. (2003). Paraphrasing paraphrased. Invited talk at the Second International Workshop on Paraphrasing, 41st Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kilgarriff</author>
<author>P Rychl´y</author>
<author>P Smrz</author>
<author>D Tugwell</author>
</authors>
<title>The sketch engine.</title>
<date>2004</date>
<booktitle>In Proceedings of Euralex,</booktitle>
<pages>105--116</pages>
<editor>Patrick Hanks (ed.).</editor>
<publisher>Routledge.</publisher>
<location>Lorient, France.</location>
<note>Reprinted in</note>
<marker>Kilgarriff, Rychl´y, Smrz, Tugwell, 2004</marker>
<rawString>Kilgarriff, A., Rychl´y, P., Smrz, P., and Tugwell, D. (2004). The sketch engine. In Proceedings of Euralex, pages 105–116, Lorient, France. Reprinted in Patrick Hanks (ed.). 2007. Lexicology: Critical concepts in Linguistics. London: Routledge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D McCarthy</author>
<author>R Navigli</author>
</authors>
<title>The English lexical substitution task.</title>
<date>2009</date>
<booktitle>Language Resources and Evaluation Special Issue on Computational Semantic Analysis of Language: SemEval-2007 and Beyond,</booktitle>
<volume>43</volume>
<issue>2</issue>
<contexts>
<context position="3727" citStr="McCarthy and Navigli, 2009" startWordPosition="608" endWordPosition="612">account of the systems 557 First Joint Conference on Lexical and Computational Semantics (*SEM), pages 557–564, Montr´eal, Canada, June 7-8, 2012. c�2012 Association for Computational Linguistics and in section 4 we provide the results obtained on the training data on developing our systems. In section 5 we present the results on the test data, along with a little analysis using the gold standard data. In section 6 we conclude our findings and discuss our ideas for future work. 2 Related Work Semantic textual similarity relates to textual entailment (Dagan et al., 2005), lexical substitution (McCarthy and Navigli, 2009) and paraphrasing (Hirst, 2003). The key issue for semantic textual similarity is that the task is to determine similarity, where similarity is cast as meaning equivalence. 1 In textual entailment the relation under question is the more specific relation of entailment, where the meaning of one sentence is entailed by another and a system needs to determine the direction of the entailment. Lexical substitution relates to semantic textual similarity though the task involves a lemma in the context of a sentence, candidate substitutes are not provided, and the relation at question in the task is o</context>
</contexts>
<marker>McCarthy, Navigli, 2009</marker>
<rawString>McCarthy, D. and Navigli, R. (2009). The English lexical substitution task. Language Resources and Evaluation Special Issue on Computational Semantic Analysis of Language: SemEval-2007 and Beyond, 43(2):139–159.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Mihalcea</author>
<author>C Corley</author>
<author>C Strapparava</author>
</authors>
<title>Corpus-based and knowledge-based measures of text semantic similarity.</title>
<date>2006</date>
<booktitle>In Proceedings of the American Association for Artificial Intelligence (AAAI</booktitle>
<location>Boston, MA.</location>
<contexts>
<context position="4850" citStr="Mihalcea et al. (2006)" startWordPosition="785" endWordPosition="788">f a sentence, candidate substitutes are not provided, and the relation at question in the task is one of substitutability. 2 Paraphrase recognition is a highly related task, for example using comparable corpora (Barzilay and Elhadad, 2003), and it is likely that semantic textual similarity measures might be useful for ranking candidates in paraphrase acquisition. In addition to various works related to textual entailment, lexical substitution and paraphrasing, there has been some prior work explicitly on semantic text similarity. Semantic textual similarity has been explored in various works. Mihalcea et al. (2006) extend earlier work on word similarity using various WordNet similarity measures (Patwardhan et al., 2003) and a couple of corpus-based distributional measures: PMI-IR (Turney, 2002) and LSA (Berry, 1992). They use a measure which takes a summation over all tokens in both sentences. For each token they find the maximum similarity (WordNet or distributional) weighted by the inverse document frequency of that word. The dis1See the guidelines given to the annotators at http://www.cs.columbia.edu/˜weiwei/workshop/ instructions.pdf 2This is more or less semantic equivalence since the annotators we</context>
</contexts>
<marker>Mihalcea, Corley, Strapparava, 2006</marker>
<rawString>Mihalcea, R., Corley, C., and Strapparava, C. (2006). Corpus-based and knowledge-based measures of text semantic similarity. In Proceedings of the American Association for Artificial Intelligence (AAAI 2006), Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Mitchell</author>
<author>M Lapata</author>
</authors>
<title>Vector-based models of semantic composition.</title>
<date>2008</date>
<booktitle>In Proceedings ofACL-08: HLT,</booktitle>
<pages>236--244</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Columbus, Ohio.</location>
<contexts>
<context position="20697" citStr="Mitchell and Lapata, 2008" startWordPosition="3601" endWordPosition="3604"> since we do not have the other system’s outputs but we do see that the relative performance of our system on ’all’ is more in line with our expectations: average, which simply uses the average of the other two systems for each item, is usually ranked between the other two systems, depending on the dataset. Spearman’s ’all’ gives a similar ranking of our three systems as the mean score. We also show average p. This is a macro average of the Spearman’s value for the 5 datasets without weighting by the number of sentence pairs. 11 10Note that Spearman’s p is often a little lower than Pearson’s (Mitchell and Lapata, 2008) 11We do recognise the difficulty in determining metrics on a new pilot study. The task organisers are making every effort to make it clear that this enterprise is a pilot, not a competition and that they welcome feedback. 562 6 Conclusions The systems were developed in less than a week including the time with the test data. There are many trivial fixes that may improve the basic algorithm, such as decapitalising proper nouns. There are many things we would like to try, such as validating the dependency matching process with the thesaurus matching. We would like to match larger units rather th</context>
</contexts>
<marker>Mitchell, Lapata, 2008</marker>
<rawString>Mitchell, J. and Lapata, M. (2008). Vector-based models of semantic composition. In Proceedings ofACL-08: HLT, pages 236–244, Columbus, Ohio. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Mohler</author>
<author>R Bunescu</author>
<author>R Mihalcea</author>
</authors>
<title>Learning to grade short answer questions using semantic similarity measures and dependency graph alignments.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>752--762</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Portland, Oregon, USA.</location>
<contexts>
<context position="5814" citStr="Mohler et al. (2011)" startWordPosition="928" endWordPosition="931"> distributional) weighted by the inverse document frequency of that word. The dis1See the guidelines given to the annotators at http://www.cs.columbia.edu/˜weiwei/workshop/ instructions.pdf 2This is more or less semantic equivalence since the annotators were instructed to focus on meaning http://www. dianamccarthy.co.uk/files/instructions.pdf. tributional similarity measures perform at a similar level to the knowledge-based measures that use WordNet. Mohler and Mihalcea (2009) adapt this work for automatic short answer grading, that is matching a candidate answer to one supplied by the tutor. Mohler et al. (2011) take this application forward, combining lexical semantic similarity measures with a graph-alignment which considers dependency graphs using the Stanford dependency parser (de Marneffe et al., 2006) in terms of lexical, semantic and syntactic features. A score is then provided for each node in the graph. The features are combined using machine learning. The systems we propose likewise use lexical similarity and dependency relations, but in a simple heuristic formulation without a man-made thesaurus such as WordNet and without machine learning. 3 Systems We lemmatize and part-of-speech tag the</context>
</contexts>
<marker>Mohler, Bunescu, Mihalcea, 2011</marker>
<rawString>Mohler, M., Bunescu, R., and Mihalcea, R. (2011). Learning to grade short answer questions using semantic similarity measures and dependency graph alignments. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 752–762, Portland, Oregon, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Mohler</author>
<author>R Mihalcea</author>
</authors>
<title>Text-to-text semantic similarity for automatic short answer grading.</title>
<date>2009</date>
<booktitle>In Proceedings of the 12th Conference of the European Chapter of the ACL (EACL</booktitle>
<pages>567--575</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Athens, Greece.</location>
<contexts>
<context position="5675" citStr="Mohler and Mihalcea (2009)" startWordPosition="904" endWordPosition="907"> 1992). They use a measure which takes a summation over all tokens in both sentences. For each token they find the maximum similarity (WordNet or distributional) weighted by the inverse document frequency of that word. The dis1See the guidelines given to the annotators at http://www.cs.columbia.edu/˜weiwei/workshop/ instructions.pdf 2This is more or less semantic equivalence since the annotators were instructed to focus on meaning http://www. dianamccarthy.co.uk/files/instructions.pdf. tributional similarity measures perform at a similar level to the knowledge-based measures that use WordNet. Mohler and Mihalcea (2009) adapt this work for automatic short answer grading, that is matching a candidate answer to one supplied by the tutor. Mohler et al. (2011) take this application forward, combining lexical semantic similarity measures with a graph-alignment which considers dependency graphs using the Stanford dependency parser (de Marneffe et al., 2006) in terms of lexical, semantic and syntactic features. A score is then provided for each node in the graph. The features are combined using machine learning. The systems we propose likewise use lexical similarity and dependency relations, but in a simple heurist</context>
</contexts>
<marker>Mohler, Mihalcea, 2009</marker>
<rawString>Mohler, M. and Mihalcea, R. (2009). Text-to-text semantic similarity for automatic short answer grading. In Proceedings of the 12th Conference of the European Chapter of the ACL (EACL 2009), pages 567–575, Athens, Greece. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Nivre</author>
<author>J Hall</author>
<author>J Nilsson</author>
<author>A Chanev</author>
<author>G Eryigit</author>
<author>S K¨ubler</author>
<author>S Marinov</author>
<author>E Marsi</author>
</authors>
<title>Maltparser: A language-independent system for data-driven dependency parsing.</title>
<date>2007</date>
<journal>Natural Language Engineering,</journal>
<volume>13</volume>
<issue>2</issue>
<marker>Nivre, Hall, Nilsson, Chanev, Eryigit, K¨ubler, Marinov, Marsi, 2007</marker>
<rawString>Nivre, J., Hall, J., Nilsson, J., Chanev, A., Eryigit, G., K¨ubler, S., Marinov, S., and Marsi, E. (2007). Maltparser: A language-independent system for data-driven dependency parsing. Natural Language Engineering, 13(2):95–135.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Patwardhan</author>
<author>S Banerjee</author>
<author>T Pedersen</author>
</authors>
<title>Using measures of semantic relatedness for word sense disambiguation.</title>
<date>2003</date>
<booktitle>In Proceedings of the Fourth International Conference on Intelligent Text Processing and Computational Linguistics (CICLing 2003),</booktitle>
<location>Mexico City.</location>
<contexts>
<context position="4957" citStr="Patwardhan et al., 2003" startWordPosition="801" endWordPosition="805">substitutability. 2 Paraphrase recognition is a highly related task, for example using comparable corpora (Barzilay and Elhadad, 2003), and it is likely that semantic textual similarity measures might be useful for ranking candidates in paraphrase acquisition. In addition to various works related to textual entailment, lexical substitution and paraphrasing, there has been some prior work explicitly on semantic text similarity. Semantic textual similarity has been explored in various works. Mihalcea et al. (2006) extend earlier work on word similarity using various WordNet similarity measures (Patwardhan et al., 2003) and a couple of corpus-based distributional measures: PMI-IR (Turney, 2002) and LSA (Berry, 1992). They use a measure which takes a summation over all tokens in both sentences. For each token they find the maximum similarity (WordNet or distributional) weighted by the inverse document frequency of that word. The dis1See the guidelines given to the annotators at http://www.cs.columbia.edu/˜weiwei/workshop/ instructions.pdf 2This is more or less semantic equivalence since the annotators were instructed to focus on meaning http://www. dianamccarthy.co.uk/files/instructions.pdf. tributional simil</context>
</contexts>
<marker>Patwardhan, Banerjee, Pedersen, 2003</marker>
<rawString>Patwardhan, S., Banerjee, S., and Pedersen, T. (2003). Using measures of semantic relatedness for word sense disambiguation. In Proceedings of the Fourth International Conference on Intelligent Text Processing and Computational Linguistics (CICLing 2003), Mexico City.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Rychl´y</author>
</authors>
<title>A lexicographer-friendly association score.</title>
<date>2008</date>
<booktitle>In Proceedings of 2nd Workshop on Recent Advances in Slavonic Natural Languages Processing, RASLAN 2008,</booktitle>
<location>Brno.</location>
<marker>Rychl´y, 2008</marker>
<rawString>Rychl´y, P. (2008). A lexicographer-friendly association score. In Proceedings of 2nd Workshop on Recent Advances in Slavonic Natural Languages Processing, RASLAN 2008, Brno.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Schmid</author>
</authors>
<title>Probabilistic Part-of-Speech Tagging Using Decision Trees.</title>
<date>1994</date>
<booktitle>In Proceedings of the International Conference on New Methods in Language Processing,</booktitle>
<pages>44--49</pages>
<location>Manchester, UK.</location>
<contexts>
<context position="6451" citStr="Schmid, 1994" startWordPosition="1026" endWordPosition="1027">orward, combining lexical semantic similarity measures with a graph-alignment which considers dependency graphs using the Stanford dependency parser (de Marneffe et al., 2006) in terms of lexical, semantic and syntactic features. A score is then provided for each node in the graph. The features are combined using machine learning. The systems we propose likewise use lexical similarity and dependency relations, but in a simple heuristic formulation without a man-made thesaurus such as WordNet and without machine learning. 3 Systems We lemmatize and part-of-speech tag the data using TreeTagger (Schmid, 1994). We process the tagged data with default settings of the Malt Parser (Nivre et al., 2007) to dependency parse the data. All systems make use of a distributional thesaurus which lists distributionally similar lemmas (‘neighbours’) for a given lemma. This is a thesaurus constructed using log-dice (Rychl´y, 2008) and UkWaC (Ferraresi et al., 2008). 3 Note that we use only the top 20 neighbours for any word in all the methods described below. We have not experimented with varying this threshold. In the following descriptions, we refer to our sentences as s1 and s2 and these open classed tokens wi</context>
</contexts>
<marker>Schmid, 1994</marker>
<rawString>Schmid, H. (1994). Probabilistic Part-of-Speech Tagging Using Decision Trees. In Proceedings of the International Conference on New Methods in Language Processing, pages 44–49, Manchester, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P D Turney</author>
</authors>
<title>Mining the web for synonyms: Pmi-ir versus lsa on toefl.</title>
<date>2002</date>
<location>CoRR, cs.LG/0212033.</location>
<contexts>
<context position="5033" citStr="Turney, 2002" startWordPosition="815" endWordPosition="816">comparable corpora (Barzilay and Elhadad, 2003), and it is likely that semantic textual similarity measures might be useful for ranking candidates in paraphrase acquisition. In addition to various works related to textual entailment, lexical substitution and paraphrasing, there has been some prior work explicitly on semantic text similarity. Semantic textual similarity has been explored in various works. Mihalcea et al. (2006) extend earlier work on word similarity using various WordNet similarity measures (Patwardhan et al., 2003) and a couple of corpus-based distributional measures: PMI-IR (Turney, 2002) and LSA (Berry, 1992). They use a measure which takes a summation over all tokens in both sentences. For each token they find the maximum similarity (WordNet or distributional) weighted by the inverse document frequency of that word. The dis1See the guidelines given to the annotators at http://www.cs.columbia.edu/˜weiwei/workshop/ instructions.pdf 2This is more or less semantic equivalence since the annotators were instructed to focus on meaning http://www. dianamccarthy.co.uk/files/instructions.pdf. tributional similarity measures perform at a similar level to the knowledge-based measures th</context>
</contexts>
<marker>Turney, 2002</marker>
<rawString>Turney, P. D. (2002). Mining the web for synonyms: Pmi-ir versus lsa on toefl. CoRR, cs.LG/0212033.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>