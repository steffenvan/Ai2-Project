<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000001">
<title confidence="0.9955965">
Ambiguity Preserving Machine Translation
using Packed Representations*
</title>
<author confidence="0.639444">
Martin C. Emele and Michael Dorna
</author>
<affiliation confidence="0.436114">
IMS, Institut fiir Maschinelle Sprachverarbeitung
Universitat Stuttgart
</affiliation>
<address confidence="0.8511445">
Azenbergstrage 12
D-70174 Stuttgart
</address>
<email confidence="0.849076">
femele,dornalGims.uni-stuttgart.de
</email>
<sectionHeader confidence="0.99407" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999353944444445">
In this paper we present an ambiguity preserv-
ing translation approach which transfers am-
biguous LFG f-structure representations. It
is based on packed f-structure representations
which are the result of potentially ambiguous
utterances. If the ambiguities between source
and target language can be preserved, no un-
packing during transfer is necessary and the
generator may produce utterances which max-
imally cover the underlying ambiguities. We
convert the packed f-structure descriptions into
a flat set of prolog terms which consist of pred-
icates, their predicate argument structure and
additional attribute-value information. Ambi-
guity is expressed via local disjunctions. The
flat representations facilitate the application of a
Shake-and-Bake like transfer approach extended
to deal with packed ambiguities.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.990009322033898">
It is a central problem for any practical NLP
system and specifically for any machine trans-
lation (MT) system to deal with ambiguity of
natural language utterances. This is especially
true for systems with large coverage grammars,
where the number of potentially ambiguous de-
scriptions grows drammatically as the number
of acceptable syntactic constructions and the
number of lexical readings increases. In gen-
eral, it is not possible to resolve all potentially
ambiguous descriptions without incorporating
world knowledge of unlimited size. This funda-
mental problem has been discussed in the litera-
We would like to thank our colleagues at Xerox PARC
and Xerox RCE for fruitful discussions and the anony-
mous reviewers for valuable feedback. This work was
funded by the German Federal Ministry of Education,
Science, Research and Technology (BMBF) in the frame-
work of the Verbmobil project under grant 01 IV 701 N3.
ture as the Al completeness problem (cf. Kay et
al. (1994)). Nevertheless, it has been observed
that many ambiguous utterances in the source
language (SL) text can be translated by equiva-
lently ambiguous phrases in the target language
(TL) text. We call such an ambiguity a preserv-
able ambiguity and the corresponding architec-
ture for translation an ambiguity preserving MT
approach.
In order to achieve this goal of ambiguity pre-
serving translations there exist a number of dif-
ferent solutions we can apply. A naive solu-
tion would enumerate all possible ambiguous de-
scriptions, translate them and generate the cor-
responding target utterances which would then
be intersected to find a common string which
covers all meanings. This strategy is obvi-
ously not feasible because the number of poten-
tial readings might grow exponentially with the
length of the sentence.
Another solution to overcome this problem is
not to resolve ambiguities at all by using un-
derspecified representations. This strategy has
been successfully applied for a number of se-
mantic ambiguities like quantifier and operator
scope ambiguities. Therefore it is not surpris-
ing that the usage of underspecified semantic
representations have gained much popularity in
recent years. Work in the literature include
the QLF representations (Alshawi, 1992), the
work on Underspecified Discourse Representa-
tion Structures (UDRS) (Reyle, 1993; Bos et
al., 1996), and the collection of papers in van
Deemter and Peters (1996). For an application
of using underspecified semantic representations
within MT see Alshawi et al. (1991), Copestake
et al. (1995) and Dorna and Emele (1996).
Another source of ambiguities which might be
preservable between related languages include
syntactic ambiguities like the well-known PP at-
</bodyText>
<page confidence="0.998031">
365
</page>
<bodyText confidence="0.99995095890411">
tachment ambiguities. There has been growing
interest in developing underspecified or so called
packed respresentations to deal with such syn-
tactic ambiguities (cf. Rich et al. (1987), Seo
and Simmons (1989), Bear and Hobbs (1988),
Maxwell III and Kaplan (1993), Pinkal (1995),
Egg and Lebeth (1995), Schiehlen (1996) and
Dorre (1997)).
The key idea of all these representations is
to factor common information as much as pos-
sible in a parse forest and to represent the at-
tachment ambiguities as local disjunctions with-
out conversion to disjunctive normal form. Such
representations avoid the exponential explosion
which would result if all possible readings are
extracted from the parse forest.
To achieve our overall goal of ambiguity pre-
serving MT it requires not only a parser which
is able to produce such packed representations
but also a generator which is able to take such a
packed representation as input and generate all
possible paraphrases without explicitly enumer-
ating all readings. The work in Kay (1996) and
the extension to ambiguous input in Shemtov
(1996) and Shemtov (1997) describes a chart-
based generation process which takes packed
representations as input and generates all para-
phrases without expanding first into disjunctive
normal form.
What needs to be done to realize our envis-
aged goal is a transfer system which is able
to work on these packed translations without
unpacking them or only as much as necessary
if ambiguities can only partly be preserved in
the target language. The rest of this paper is
concerned with the extension of a Shake-and-
Bake like transfer approach (Whitelock, 1992;
Beaven, 1992) or the kind of semantic-based
transfer approach as described for example in
Dorna and Emele (1996) to cope with local am-
biguities.
To explain and illustrate the treatment of
local ambiguities we show how an underspeci-
fied representation of PP attachment ambigu-
ities can be utilized in a machine translation
architecture for providing ambiguity preserving
translations. It is illustrated on the basis of
LFG f-structure level representations (Kaplan
and Bresnan, 1982). However, it could equally
well be done on the level of underspecified se-
mantic representations as shown in (Dorna et
al., 1998). The main reason for choosing the f-
structure level representation is due to the fact
that we could use the Xerox Linguistic Envi-
ronment (XLE) system (Maxwell III and Ka-
plan, 1996) for the analysis and generation of
English and German utterances. The key ar-
gument for using this linguistic workbench is
the ability to produce packed representations
for ambiguous utterances using techniques de-
scribed in Maxwell III and Kaplan (1993) and
the availability of a generator which generates
utterances from f-structure descriptions.
The rest of the paper is structured as follows:
first, we show how the hierarchical f-structure
representations can be converted into a flat set
of Prolog predicates such that the Shake-and-
Bake like transfer approach can be applied. Sec-
ond, we show how PP attachment ambiguities
are represented using a packed representation.
Then we show how this particular transfer ap-
proach can be adopted for dealing with this kind
of ambiguous representations.
</bodyText>
<sectionHeader confidence="0.995195" genericHeader="introduction">
2 Example
</sectionHeader>
<bodyText confidence="0.982063615384616">
To illustrate the approach we take a simple ex-
ample which contains a PP attachment ambi-
guity which can be preserved between German
and English and probably between many other
related languages as well.
(1) wir treffen die Kollegen in Berlin
we meet the colleagues in Berlin
For example the sentence in (1) can either mean
(a) that we will have a meeting in Berlin where
we will meet our colleagues or (b) that we will
meet our colleagues who live in Berlin. Without
previous knowledge about the discourse and the
specific people involved, it will not be possible to
resolve these two meanings. Nevertheless, both
the German and the English sentence express
exactly the same ambiguity.
There might exist other paraphrases using ex-
actly the same semantic predicates, e.g. the ut-
terances in (2) but they will not be chosen by
the generator because they do not cover both
readings at the same time. Instead sentence
(2a) would be chosen to express the attachment
of the prepositional phrase to the verb phrase
whereas sentence (2b) would be chosen to ex-
press the attachment to the noun phrase &apos;the
colleagues&apos;.
</bodyText>
<page confidence="0.992278">
366
</page>
<bodyText confidence="0.9117298">
(2) a. In Berlin treffen wir die Kollegen
In Berlin meet we the colleagues
(In Berlin we will meet the colleagues.)
b. wir treffen die Kollegen aus Berlin
we meet the colleagues from Berlin
(We will meet the colleagues from Berlin.)
In addition, those two maximally discriminat-
ing sentences could also be used as an interface
for an interactive translation system, e.g. the
negotiator approach (Kay, 1997) where the hu-
man translator would be asked to distinguish
between the two possible readings.
The f-structures in (3) and (4) correspond to
the disambiguated attachments as paraphrased
in (2a) and (213) respectively.
</bodyText>
<listItem confidence="0.598589">
(3) &amp;quot;PRED treffen&lt;III,
</listItem>
<figure confidence="0.979130368421052">
[NUM
NUM pl
pro]
[&apos;RED KOliegl
OBJ NUM pl
51
SPEC def
in&lt;111&gt;
OBJ qPRED Berlin]]}
[OBJ
(4) PRED treffen&lt;O, El&gt;
_
[NUM
pro]
NUM pl
FRED Kollege
[
NUM pl
SPEC def
</figure>
<sectionHeader confidence="0.792709" genericHeader="method">
3 From F-structures to Term Sets
</sectionHeader>
<bodyText confidence="0.999315714285714">
F-stuctures encode information in a hierarchical
manner by recursively embedding substructures.
They provide by nature only outside-in refer-
ences whereas in transfer frequently inside-out
access is necessary. Hence, information access
for transformation processes like transfer is not
as straightforward as it could be when using flat
set representations (Beaven, 1992; Whitelock,
1992). Set representations can be seen as a pool
of constraints where co-references between the
constraints, i.e. the set elements, are used to en-
code the same embedding f-structures provide.
Therefore, the structural embedding which is,
on the one hand, part of f-structures themself
is represented, on the other hand, in the inter-
pretation of constraint sets. Furthermore, sets
come with very simple test and manipulation
operations such as tests for membership and set
union.
In the following we define a correspondence
between f-structures and sets of terms. We re-
strict the f-structures to transfer relevant infor-
mation such as PREDS, grammatical functions,
etc. Feature structure constraints are encoded
as relational constraints using Prolog syntax (cf.
Johnson (1991)). As examples of such sets of
terms see (5) and (6) which corresponds to f-
structures (3) and (4), respectively.
</bodyText>
<figure confidence="0.850161583333333">
(5) treffen(1),
subj(1,2),pro(2),num(2,p1),
obj(1,3), kollege(3),num(3,p1),
spec(3,def),
adjn(1,4),in(4),
obj(4,5),Berlin(5)
(6) treffen(1),
subj(1,2),pro(2),num(2,p1),
obj(1,3), kollege(3),num(3,p1),
spec(3,def),
adjn(3,4),in(4),
obj(4,5),Berlin(5)
</figure>
<bodyText confidence="0.999018142857143">
The 2-place relation trans given below trans-
lates between f-structures and (sets of) terms.
are references to f-structures which are mapped
into nodes i used in terms. r are features, n(...)
describe predicates, v stands for atomic values,
and ep are complex f-structures. Co-occuring
parts of f-structures are translated only once.
</bodyText>
<listItem confidence="0.882720125">
1. (atomic values)
trans&lt; Etr v], r(i,v) &gt;
2. (predicate values)
trans&lt; 14PRED H(...)]. n(i) &gt;
3. (complex f-structure values)
trans&lt; ii(r IEI yolj , r(i,j) u T&gt;
with trans&lt; Elco, T&gt;
4. (set values)
</listItem>
<equation confidence="0.880912333333333">
trans&lt; 14ADJN {Etl (pi, • • •7 (Pn
adjn(i,ii), adjn(i,in)
U Ti U U Tn &gt;
</equation>
<bodyText confidence="0.945752571428571">
with trans&lt; I çoj, T3&gt;; 1 &lt; j &lt; n
trans is bidirectional, i.e. we are able to
translate between f-structures and terms for us-
ing terms as transfer input, process terms in the
transfer, and convert the transfer output back to
f-structures which are the appropriate generator
representations.
</bodyText>
<figure confidence="0.991109125">
SUBJ
ADJN fl
SUBJ
OBJ 51
{
[PRED in&lt;121&gt;
ADJN n
gPRED
</figure>
<page confidence="0.979804">
367
</page>
<sectionHeader confidence="0.994936" genericHeader="method">
4 F-structure Transfer
</sectionHeader>
<bodyText confidence="0.998954">
Transfer works on source language (SL) and tar-
get language (TL) sets of terms representing
predicates, roles, etc. like the ones shown in (5)
and (6). The mapping is encoded in transfer
rules as in (7). For a rule to be applied, the
set on the SL side must be a matching subset of
the SL input set. If this is the case, we remove
the covering set from the input and add the set
on the other side of the rule to the TL output.
Transfer is complete, if the SL set is empty.
</bodyText>
<figure confidence="0.943275">
(7) a. treffen(E) &lt;-&gt; meet (E)
b. kollege(X) &lt;-&gt; colleague(X)
c. Berlin(X) &lt;-&gt; Berlin(X)
d. in(X) &lt;-&gt; in(X) .
e. pro(X) &lt;-&gt; pro(X)
f. subj (X ,Y) &lt;-&gt; subj (X ,Y) .
g. obj (X ,Y) &lt;-&gt; obj (X ,Y) .
h. adjn(X,Y) &lt;-&gt; adjn(X,Y)
</figure>
<bodyText confidence="0.999644285714286">
The transfer operator &lt;-&gt; is bidirectional. Up-
per case letters in argument positions are logical
variables which will be bound to nodes at run-
time. Because of the variable sharings on both
sides of a rule we work on the same nodes of
a graph. Hence, the overall mechanism can be
formalized as a graph rewriting process.
</bodyText>
<table confidence="0.824433357142857">
(8) a. meet (1),
subj (1,2) ,pro(2) ,num(2,p1)
obj (1,3) , colleague (3) ,
num(3,p1) ,spec(3,def) ,
adjn(1,4) ,in(4)
obj (4,5) ,Berlin (5)
b. PRED meet&lt; , El&gt;
PRED pro]
NUM pl
[PRED colleague
NUM pi
SPEC def
PRED in&lt;M&gt;
OBJ EIPRED Berlinill
</table>
<bodyText confidence="0.9991336">
Applying the rule set in (7) to (5), we yield the
result in (8a). Using the correspondence be-
tween f-structures and term representations it is
possible to translate back to the TL f-structure
in (8b). This f-structure will be passed on to
the generator which will produce the utterance
in (2a) as one of the possible paraphrases.
The transfer rules in (7c-h) which are defined
as the identity transformation between SL and
TL are actually redundant. They can be re-
placed via a general metarule which passes on all
singleton sets which are not covered by any ex-
plicit transfer rule. The same metarule transfers
also morpho-syntactic information like number
and definiteness.
</bodyText>
<sectionHeader confidence="0.995465" genericHeader="method">
5 Packed Representations
</sectionHeader>
<bodyText confidence="0.99983275">
The following example in (9) provides a packed
f-structure respresentation for the German sen-
tence in (1). The ambiguous PP attachment of
the &apos;in&apos; PP is represented via a local disjunction&apos;
(X=1 V X=3) which binds the external variable
X of the adjunct relation to either node 1 or
node 3 representing the VP or NP attachment,
respectively.
</bodyText>
<equation confidence="0.928695555555555">
(9) a. treffen(1) ,
subj (1,2) ,pro (2) ,num(2 ,p1)
obj (1,3) , kollege(3) ,
num(3,p1) ,spec(3,def) ,
adjn(X,4) ,in(4)
obj (4,5) ,Berlin(5) ,
(X=1 V X=3)
_
PRED treffen&lt;E)
</equation>
<table confidence="0.545097125">
, El &gt;
SUBJ al [PRED pro]
OBJ NUM pl
[PRED Kollege
NUM pi
SPEC def
III[ OBJ E
ADJN {Lc
</table>
<equation confidence="0.746147333333333">
IPRED Berlin0
,_,[PRED in&lt;E1&gt;
lE=1:1 V Iii=111
</equation>
<bodyText confidence="0.999766">
Applying the very same transfer rules in (7) to
the input in (9) produces the result in (10) which
fully preserves the ambiguity between source
and target language.
</bodyText>
<equation confidence="0.984951857142857">
(10) meet(1),
subj(1,2),pre(2),num(2,11.1)
obj (1,3), colleague(3),
num(3,p1),spec(3,def),
adjn(X,4),in(4)
obj(4,5),Berlin(5),
(X=1 V X=3)
</equation>
<bodyText confidence="0.774024714285714">
If the generator takes the corresponding f-
structure for this packed description as input it
will generate (1) repeated in (11) and not any of
&apos;The notation of using a local disjunction is used only
for illustrating purposes. The actual implementation
uses contexted contraints as developed and implemented
in the XLE system (cf. Maxwell III and Kaplan (1991)).
</bodyText>
<figure confidence="0.9609896">
II
SUBJ
OBJ
ADJN
_
</figure>
<page confidence="0.987705">
368
</page>
<bodyText confidence="0.9634525">
the paraphrases in (2) because they would not
cover both ambiguities at the same time.
(11) We will meet the colleagues in Berlin.
The local disjunction is not affected by the ap-
plication of the transfer rule for mapping the
adjunct relation to the target language because
there is no interaction between the variable x
and any other predicate.
</bodyText>
<sectionHeader confidence="0.994941" genericHeader="method">
6 Local Disambiguation
</sectionHeader>
<bodyText confidence="0.999699818181818">
If it is not possible to fully preserve the attach-
ment ambiguities between source and target lan-
guage, we need to partially disambiguate the rel-
evant ambiguity. For example, this would be
the case if we would translate (1) to Japanese.
Depending whether we attach to the NP &apos;the
colleagues&apos; or to the VP we have to choose be-
tween two different postpositions `de&apos; (location)
vs. &apos;no&apos; (adnominal modification). The two sen-
tences in (12) show the Japanese translations
together with their English glosses.
</bodyText>
<listItem confidence="0.49807">
(12) a. watashi tachi -ga berurin -de
</listItem>
<figure confidence="0.7269484">
we NOM Berlin LOC
dooryoo -to aimasu
colleagues COM will meet
(In Berlin we will meet the colleagues.)
b. watashi tachi -ga berurin -no
</figure>
<figureCaption confidence="0.709738333333333">
we NOM Berlin MOD
dooryoo -to aimasu
colleagues COM will meet
</figureCaption>
<bodyText confidence="0.993397555555556">
(We will meet the colleagues from Berlin.)
The choice of the postposition could be triggered
via selectional restrictions in the condition part
of the transfer rules. The rules in (13) show two
components on their lefthand sides: the part to
the right of # is a test on a copy of the origi-
nal input. The test matches an adjunct relation
where the variable Y is bound to the internal ar-
gument. Y is coindexed with the node of the SL
preposition &apos;in&apos;. The variable X is bound to the
external argument node where the adjunct is at-
tached. The second element of the test checks
the selectional restriction2 of this attachment.
2Instead of using explicit predicates for testing selec-
tional restrictions the real system uses a sort system.
The test on explicit predicates is replaced with a more
general sortal subsumption test, e.g. sort (X) event vs.
sort (X)&lt;object.
</bodyText>
<equation confidence="0.97051275">
(13) a. in(Y) # adjn(X,Y),treffen(X) -&gt;
de(Y) •
b. in(Y) # adjn(X,Y) ,kollege(X) -&gt;
no (Y) .
</equation>
<bodyText confidence="0.9999285">
The Japanese distinction is parallel to the case
where the German preposition `in&apos; would be
translated either with the English preposition
&apos;in&apos; or the preposition &apos;from&apos; depending which
of the two meanings is taken. Hence for ease
of exposition we will apply the two equivalent
transfer rules in (14) for the translation of the
&apos;in&apos; instead of the equivalent Japanese ones.
</bodyText>
<equation confidence="0.95018575">
(14) a. in(Y) # adjn(X,Y),treffen(X) -&gt;
in(Y) .
b. in(Y) # adjn(X,Y),kollege(X) -&gt;
from(Y).
</equation>
<bodyText confidence="0.999124583333333">
Since the external argument of the adjunct rela-
tion takes part in the local disjunction (X=1 V
X=3) the application of transfer rule (14a) trig-
gers a local resolution. This is done by applying
the distributive law such that the selectional re-
striction can be tested. For the first disjunct
this yields true whereas it fails for the second
disjunct. Rule (14b) is treated in the same way
where only the test on the second disjunct can
be satisfied. Both results are joined together
and are associated with the very same disjunc-
tion: (X=1, in(4) V X=3, from(4)).
</bodyText>
<equation confidence="0.924184111111111">
(15) a. meet (1) ,
subj (1,2) ,pro (2) ,num(2 ,p1)
obj (1,3) , colleague(3) ,
num(3 ,p1) , spec (3 , def ) ,
adjn(X,4), obj (4,5) ,Berlin(5) ,
(X=1, in(4) V X=3, from(4))
-
PRED meet&lt;ID, &gt;
[PRED pro]
NUM pl
FRED colleague
OBJ El[NUM pi
SPEC def
-
4ADJN MOBJ L4PRED Berlin
(
NH], ETPRED indEl&gt;])
Iv
</equation>
<bodyText confidence="0.8829024">
1171-431, (*RED from&lt;M&gt;ll
As a final result we get the packed representa-
tion in (15), where the two prepositions are dis-
tributed into the local disjunction without con-
verting to disjunctive normal form.
</bodyText>
<figure confidence="0.94346">
b.
n
SUBJ 0
fa
]
</figure>
<page confidence="0.997039">
369
</page>
<bodyText confidence="0.998625303571429">
The transferred packed representation corre-
sponds to the two possible utterances in (16). It
would be left as a task for the (human) negotia-
tor to find out which of the two sentences would
be more appropriate in a given context situa-
tion. Due to the local nature of the disjunctions
they can be handed over to an additional resolu-
tion component in order to disambiguate them
or if the discourse and world knowledge is not
sufficient for disambiguating to leave them as
choices for the human translator.
(16) a. we will meet the colleagues in Berlin
b. we will meet the colleagues from Berlin
The main advantage of such an approach is that
the transfer rules are independent of the fact
whether they are applied to packed representa-
tions or not. Unpacking is done only locally and
as much as necessary. Only the internal pro-
cessing needs to be adapted in order to keep
track which of the local disjuncts are processed.
This is done with a simple book-keeping mecha-
nism which keeps track for any individual term
to which local disjunct it belongs. Technically,
it is done by using the contexted constraints
as described in Maxwell III and Kaplan (1991).
Hence the whole mechanism can be kept fully
transparent for the transfer rule writer and all
of the complexity can be dealt with internally
in the transfer rule compiler which compiles the
external transfer rule format into an executable
Prolog program which propagates the necessary
variable sharings.
In order to avoid duplicated work while try-
ing to apply all possible transfer rule combina-
tions the transfer system uses an internal chart
to store all successful rule applications. Each
predicate in the input set gets assigned a unique
bit in a bit vector such that it can be checked
easily that no predicate is covered more than
once while trying to combine different edges in
the chart. With this scheme it is also possible to
identify the final edges because they are the ones
where all bits are set. The overall processing
scheme using an agenda and the data structures
are very similar to the chart representation as
proposed for doing chart-based generation from
ambiguous input (cf. Kay (1996) and Shemtov
(1996)). The main difference stems from the
lack of explicit context-free grammar rules. In-
stead, in the proposed setup, the left hand sides
of transfer rules are interpreted as immediate
dominance rules as they are used for describing
free word order languages supplemented with a
single binary context-free rule which recursively
tries to combine all possible subsets of terms for
which no explicit transfer rule exists.
</bodyText>
<sectionHeader confidence="0.997891" genericHeader="conclusions">
7 Summary
</sectionHeader>
<bodyText confidence="0.999623">
In this paper we have demonstrated that a
Shake-and-Bake inspired MT approach can be
applied to flat f-structure respresentations. It
has also been shown how such a transfer system
can be combined with the treatment of packed
ambiguities for the representation of (syntactic)
ambiguities to achieve a truly ambiguity pre-
serving translation architecture. Since the par-
ticular treatment of syntactic ambiguities is or-
thogonal to the possiblity of using underspeci-
fied semantic representations, the same exten-
sion could also be applied for a semantic-based
transfer approach on flat representations as ad-
vocated for example in Copestake et al. (1995)
and Dorna and Emele (1996). The advan-
tage for doing transfer on the level of under-
specified semantic representations is the gain of
parallelism between source and target language
due to the abstraction and underspecification
of language specific idiosyncracies which are al-
ready dealt with in the linking between syntac-
tic and semantic information. Popular examples
are cases of head-switching, category switching
and diathesis etc. which disappear on the level
of semantic representations (e.g. Dorna et al.
(1998)). The discussion of such examples can be
found at length in the literature and will there-
fore not be repeated here.
The proposed transfer architecture is cur-
rently being implemented as an extension to an
experimental transfer MT system which is fully
integrated and interfaced with the XLE system
for doing parsing and generation. The appli-
cation domain comprises the translation of in-
struction manuals.
</bodyText>
<sectionHeader confidence="0.998976" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.985816">
Hiyan Alshawi, David M. Carter, Bjorn Gamback,
and Manny Rayner. 1991. Translation by Quasi
Logical Form Transfer. In Proceedings of the
29th Annual Meeting of the Association for Com-
putational Linguistics (ACL&apos;91), pages 161-168,
Berkeley, CA.
</reference>
<page confidence="0.989497">
370
</page>
<reference confidence="0.999838552631578">
Hiyan Alshawi, editor. 1992. The Core Language
Engine. ACL-MIT Press Series in Natural Lan-
guages Processing. MIT Press, Cambridge, Mass.
John Bear and Jerry R. Hobbs. 1988. Localizing ex-
pression of ambiguity. In Proceedings of the 2nd
International Conference on Applied Natural Lan-
guage Processing, pages 235-241, Texas, Austin.
J. L. Beaven. 1992. Shake-and-Bake Machine Trans-
lation. In Proceedings of the 14th International
Conference on Computational Linguistics (Col-
ing &apos;92), Nantes, France.
J. Bos, B. Gamback, C. Lieske, Y. Mori, M. Pinkal,
and K. Worm. 1996. Compositional Semantics in
Verbmobil. In Proceedings of the 16th Interna-
tional Conference on Computational Linguistics
(Coling &apos;96), Copenhagen, Denmark.
A. Copestake, D. Flickinger, R. Malouf, S. Riehe-
mann, and I. Sag. 1995. Translation using Min-
imal Recursion Semantics. In Proceedings of
the 6th International Conference on Theoretical
and Methodological Issues in Machine Translation
(TMI&apos;95), Leuven, Belgium.
Michael Dorna and Martin C. Emele. 1996.
Semantic-based Transfer. In Proceedings of the
16th International Conference on Computational
Linguistics (Coling &apos;96), Copenhagen, Denmark.
Michael Dorna, Anette Frank, Josef van Genabith,
and Martin C. Emele. 1998. Syntactic and se-
mantic transfer with f-structures. In Proceedings
of the 17th International Conference on Compu-
tational Linguistics (Coling-ACL &apos;98), Montréal,
Canada, August.
Jochen Done. 1997. Efficient construction of un-
derspecified semantics under massive ambiguity.
In Proceedings of the 35th Annual Meeting of the
Association for Computational Linguistics (ACL-
EACL&apos;97), Madrid, Spain.
M. Egg and K. Lebeth. 1995. Semantic under-
specification and modifier attachment ambigui-
ties. In J. Kilbury and R. Wiese, editors, Integra-
tive Ansatze in der Computerlinguistik. Beitrdge
zur 5. Fachtagung der Sektion Computerlinguis-
tik der Deutschen Gesellschaft fir Sprachwis-
senschaft (DGfS), pages 19-24, Düsseldorf, Ger-
many.
Mark Johnson. 1991. Features and Formulae. Com-
putational Linguistics, 17(2):131-151.
Ronald M. Kaplan and Joan Bresnan. 1982.
Lexical-Functional Grammar: A formal system
for grammatical representation. In Joan Bresnan,
editor, The Mental Representation of Grammat-
ical Relations, pages 173-281. MIT Press, Cam-
bridge, Mass.
M. Kay, M. Gawron, and P. Norwig. 1994. Verb-
mobil: a Translation System for Face-to-Face Di-
alogs. Number 33 in CSLI Lecture Notes. Univer-
sity of Chicago Press.
Martin Kay. 1996. Chart generation. In Proceedings
of the 34th Annual Meeting of the Association for
Computational Linguistics (ACL &apos;96), pages 200-
204, Santa Cruz, CA.
Martin Kay. 1997. The Proper Place of Men
and Machines in Language Translation. Machine
Translation, 12:3-23.
John T. Maxwell III and Ronald M. Kaplan. 1991.
A method for disjunctive constraint satisfaction.
In Masaru Tomita, editor, Current Issues in Pars-
ing Techonlogy, pages 18-27. Kluwer Academic
Publishers, Dordrecht, Holland.
John T. Maxwell III and Ronald M. Kaplan. 1993.
The interface between phrasal and functional con-
straints. Computational Linguistics, 19(4):571—
590.
John T. Maxwell III and Ronald M. Kaplan. 1996.
An efficient parser for LFG. In Proceedings of the
1st LFG Conference.
Manfred Pinkal. 1995. Radical Underspecification.
In Proceedings of the 10th Amsterdam Collo-
quium, pages 587-606, Amsterdam, Holland, De-
cember. ILLC/Department of Philosophy, Univer-
sity of Amsterdam.
Uwe Reyle. 1993. Dealing with Ambiguities by
Underspecification: Construction, Representation
and Deduction. Jounal of Semantics, 10(2):123-
179.
E. Rich, J. Barnett, K. Wittenburg, and D. Wrob-
lewski. 1987. Ambiguity procrastination. In Pro-
ceedings of the 6th National Conference of the
American Association for Artificial Intelligence
(AAAI&apos;87), pages 571-576, Seattle, WA.
Michael Schiehlen. 1996. Semantic Construction
from Parse Forests. In Proceedings of the 16th
International Conference on Computational Lin-
guistics (Coling &apos;96).
Jungyun Seo and Robert F. Simmons. 1989. Syntac-
tic graphs: A representation for the union of all
ambiguous parse trees. Computational Linguis-
tics, 15(1):19-32, March.
Hadar Shemtov. 1996. Generation of Paraphrases
from Ambiguous Logical Forms. In Proceedings
of the 16th International Conference on Computa-
tional Linguistics (Coling &apos;96), Copenhagen, Den-
mark.
Hadar Shemtov. 1997. Ambiguity Management in
Natural Language Generation. Ph.D. thesis, Stan-
ford University, June.
Kees van Deemter and Stanley Peters, editors. 1996.
Semantic ambiguity and underspecification. Num-
ber 55 in CSLI Lecture Notes. CSLI Publications,
Stanford University, CA.
Pete Whitelock. 1992. Shake-and-Bake Translation.
In Proceedings of the 14th International Confer-
ence on Computational Linguistics (Coling &apos;92),
pages 784-791, Nantes, France.
</reference>
<page confidence="0.998748">
371
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.908634">
<title confidence="0.998859">Ambiguity Preserving Machine Translation using Packed Representations*</title>
<author confidence="0.996189">C Emele Michael Dorna</author>
<affiliation confidence="0.9928065">IMS, Institut fiir Maschinelle Sprachverarbeitung Universitat Stuttgart</affiliation>
<address confidence="0.978282">Azenbergstrage 12 D-70174 Stuttgart</address>
<email confidence="0.998793">femele,dornalGims.uni-stuttgart.de</email>
<abstract confidence="0.998142842105263">In this paper we present an ambiguity preserving translation approach which transfers ambiguous LFG f-structure representations. It is based on packed f-structure representations which are the result of potentially ambiguous utterances. If the ambiguities between source and target language can be preserved, no unpacking during transfer is necessary and the generator may produce utterances which maximally cover the underlying ambiguities. We convert the packed f-structure descriptions into flat set of prolog terms which consist predpredicate argument structure and additional attribute-value information. Ambiguity is expressed via local disjunctions. The flat representations facilitate the application of a Shake-and-Bake like transfer approach extended to deal with packed ambiguities.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Hiyan Alshawi</author>
<author>David M Carter</author>
<author>Bjorn Gamback</author>
<author>Manny Rayner</author>
</authors>
<title>Translation by Quasi Logical Form Transfer.</title>
<date>1991</date>
<booktitle>In Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics (ACL&apos;91),</booktitle>
<pages>161--168</pages>
<location>Berkeley, CA.</location>
<contexts>
<context position="3589" citStr="Alshawi et al. (1991)" startWordPosition="532" endWordPosition="535">representations. This strategy has been successfully applied for a number of semantic ambiguities like quantifier and operator scope ambiguities. Therefore it is not surprising that the usage of underspecified semantic representations have gained much popularity in recent years. Work in the literature include the QLF representations (Alshawi, 1992), the work on Underspecified Discourse Representation Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common infor</context>
</contexts>
<marker>Alshawi, Carter, Gamback, Rayner, 1991</marker>
<rawString>Hiyan Alshawi, David M. Carter, Bjorn Gamback, and Manny Rayner. 1991. Translation by Quasi Logical Form Transfer. In Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics (ACL&apos;91), pages 161-168, Berkeley, CA.</rawString>
</citation>
<citation valid="true">
<title>The Core Language Engine.</title>
<date>1992</date>
<booktitle>Series in Natural Languages Processing.</booktitle>
<editor>Hiyan Alshawi, editor.</editor>
<publisher>ACL-MIT Press</publisher>
<location>Cambridge, Mass.</location>
<marker>1992</marker>
<rawString>Hiyan Alshawi, editor. 1992. The Core Language Engine. ACL-MIT Press Series in Natural Languages Processing. MIT Press, Cambridge, Mass.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Bear</author>
<author>Jerry R Hobbs</author>
</authors>
<title>Localizing expression of ambiguity.</title>
<date>1988</date>
<booktitle>In Proceedings of the 2nd International Conference on Applied Natural Language Processing,</booktitle>
<pages>235--241</pages>
<location>Texas, Austin.</location>
<contexts>
<context position="4015" citStr="Bear and Hobbs (1988)" startWordPosition="596" endWordPosition="599">le, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representati</context>
</contexts>
<marker>Bear, Hobbs, 1988</marker>
<rawString>John Bear and Jerry R. Hobbs. 1988. Localizing expression of ambiguity. In Proceedings of the 2nd International Conference on Applied Natural Language Processing, pages 235-241, Texas, Austin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J L Beaven</author>
</authors>
<title>Shake-and-Bake Machine Translation.</title>
<date>1992</date>
<booktitle>In Proceedings of the 14th International Conference on Computational Linguistics (Coling &apos;92),</booktitle>
<location>Nantes, France.</location>
<contexts>
<context position="5422" citStr="Beaven, 1992" startWordPosition="827" endWordPosition="828"> the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chartbased generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form. What needs to be done to realize our envisaged goal is a transfer system which is able to work on these packed translations without unpacking them or only as much as necessary if ambiguities can only partly be preserved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 1992; Beaven, 1992) or the kind of semantic-based transfer approach as described for example in Dorna and Emele (1996) to cope with local ambiguities. To explain and illustrate the treatment of local ambiguities we show how an underspecified representation of PP attachment ambiguities can be utilized in a machine translation architecture for providing ambiguity preserving translations. It is illustrated on the basis of LFG f-structure level representations (Kaplan and Bresnan, 1982). However, it could equally well be done on the level of underspecified semantic representations as shown in (Dorna et al., 1998). T</context>
<context position="9323" citStr="Beaven, 1992" startWordPosition="1460" endWordPosition="1461">a) and (213) respectively. (3) &amp;quot;PRED treffen&lt;III, [NUM NUM pl pro] [&apos;RED KOliegl OBJ NUM pl 51 SPEC def in&lt;111&gt; OBJ qPRED Berlin]]} [OBJ (4) PRED treffen&lt;O, El&gt; _ [NUM pro] NUM pl FRED Kollege [ NUM pl SPEC def 3 From F-structures to Term Sets F-stuctures encode information in a hierarchical manner by recursively embedding substructures. They provide by nature only outside-in references whereas in transfer frequently inside-out access is necessary. Hence, information access for transformation processes like transfer is not as straightforward as it could be when using flat set representations (Beaven, 1992; Whitelock, 1992). Set representations can be seen as a pool of constraints where co-references between the constraints, i.e. the set elements, are used to encode the same embedding f-structures provide. Therefore, the structural embedding which is, on the one hand, part of f-structures themself is represented, on the other hand, in the interpretation of constraint sets. Furthermore, sets come with very simple test and manipulation operations such as tests for membership and set union. In the following we define a correspondence between f-structures and sets of terms. We restrict the f-struct</context>
</contexts>
<marker>Beaven, 1992</marker>
<rawString>J. L. Beaven. 1992. Shake-and-Bake Machine Translation. In Proceedings of the 14th International Conference on Computational Linguistics (Coling &apos;92), Nantes, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Bos</author>
<author>B Gamback</author>
<author>C Lieske</author>
<author>Y Mori</author>
<author>M Pinkal</author>
<author>K Worm</author>
</authors>
<title>Compositional Semantics in Verbmobil.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96),</booktitle>
<location>Copenhagen, Denmark.</location>
<contexts>
<context position="3421" citStr="Bos et al., 1996" startWordPosition="506" endWordPosition="509">gs might grow exponentially with the length of the sentence. Another solution to overcome this problem is not to resolve ambiguities at all by using underspecified representations. This strategy has been successfully applied for a number of semantic ambiguities like quantifier and operator scope ambiguities. Therefore it is not surprising that the usage of underspecified semantic representations have gained much popularity in recent years. Work in the literature include the QLF representations (Alshawi, 1992), the work on Underspecified Discourse Representation Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxw</context>
</contexts>
<marker>Bos, Gamback, Lieske, Mori, Pinkal, Worm, 1996</marker>
<rawString>J. Bos, B. Gamback, C. Lieske, Y. Mori, M. Pinkal, and K. Worm. 1996. Compositional Semantics in Verbmobil. In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96), Copenhagen, Denmark.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Copestake</author>
<author>D Flickinger</author>
<author>R Malouf</author>
<author>S Riehemann</author>
<author>I Sag</author>
</authors>
<title>Translation using Minimal Recursion Semantics.</title>
<date>1995</date>
<booktitle>In Proceedings of the 6th International Conference on Theoretical and Methodological Issues in Machine Translation (TMI&apos;95),</booktitle>
<location>Leuven, Belgium.</location>
<contexts>
<context position="3614" citStr="Copestake et al. (1995)" startWordPosition="536" endWordPosition="539">trategy has been successfully applied for a number of semantic ambiguities like quantifier and operator scope ambiguities. Therefore it is not surprising that the usage of underspecified semantic representations have gained much popularity in recent years. Work in the literature include the QLF representations (Alshawi, 1992), the work on Underspecified Discourse Representation Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possibl</context>
<context position="21599" citStr="Copestake et al. (1995)" startWordPosition="3522" endWordPosition="3525">monstrated that a Shake-and-Bake inspired MT approach can be applied to flat f-structure respresentations. It has also been shown how such a transfer system can be combined with the treatment of packed ambiguities for the representation of (syntactic) ambiguities to achieve a truly ambiguity preserving translation architecture. Since the particular treatment of syntactic ambiguities is orthogonal to the possiblity of using underspecified semantic representations, the same extension could also be applied for a semantic-based transfer approach on flat representations as advocated for example in Copestake et al. (1995) and Dorna and Emele (1996). The advantage for doing transfer on the level of underspecified semantic representations is the gain of parallelism between source and target language due to the abstraction and underspecification of language specific idiosyncracies which are already dealt with in the linking between syntactic and semantic information. Popular examples are cases of head-switching, category switching and diathesis etc. which disappear on the level of semantic representations (e.g. Dorna et al. (1998)). The discussion of such examples can be found at length in the literature and will</context>
</contexts>
<marker>Copestake, Flickinger, Malouf, Riehemann, Sag, 1995</marker>
<rawString>A. Copestake, D. Flickinger, R. Malouf, S. Riehemann, and I. Sag. 1995. Translation using Minimal Recursion Semantics. In Proceedings of the 6th International Conference on Theoretical and Methodological Issues in Machine Translation (TMI&apos;95), Leuven, Belgium.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Dorna</author>
<author>Martin C Emele</author>
</authors>
<title>Semantic-based Transfer.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96),</booktitle>
<location>Copenhagen, Denmark.</location>
<contexts>
<context position="3641" citStr="Dorna and Emele (1996)" startWordPosition="541" endWordPosition="544">y applied for a number of semantic ambiguities like quantifier and operator scope ambiguities. Therefore it is not surprising that the usage of underspecified semantic representations have gained much popularity in recent years. Work in the literature include the QLF representations (Alshawi, 1992), the work on Underspecified Discourse Representation Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possible in a parse forest and to </context>
<context position="5521" citStr="Dorna and Emele (1996)" startWordPosition="841" endWordPosition="844">sed generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form. What needs to be done to realize our envisaged goal is a transfer system which is able to work on these packed translations without unpacking them or only as much as necessary if ambiguities can only partly be preserved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 1992; Beaven, 1992) or the kind of semantic-based transfer approach as described for example in Dorna and Emele (1996) to cope with local ambiguities. To explain and illustrate the treatment of local ambiguities we show how an underspecified representation of PP attachment ambiguities can be utilized in a machine translation architecture for providing ambiguity preserving translations. It is illustrated on the basis of LFG f-structure level representations (Kaplan and Bresnan, 1982). However, it could equally well be done on the level of underspecified semantic representations as shown in (Dorna et al., 1998). The main reason for choosing the fstructure level representation is due to the fact that we could us</context>
<context position="21626" citStr="Dorna and Emele (1996)" startWordPosition="3527" endWordPosition="3530">Bake inspired MT approach can be applied to flat f-structure respresentations. It has also been shown how such a transfer system can be combined with the treatment of packed ambiguities for the representation of (syntactic) ambiguities to achieve a truly ambiguity preserving translation architecture. Since the particular treatment of syntactic ambiguities is orthogonal to the possiblity of using underspecified semantic representations, the same extension could also be applied for a semantic-based transfer approach on flat representations as advocated for example in Copestake et al. (1995) and Dorna and Emele (1996). The advantage for doing transfer on the level of underspecified semantic representations is the gain of parallelism between source and target language due to the abstraction and underspecification of language specific idiosyncracies which are already dealt with in the linking between syntactic and semantic information. Popular examples are cases of head-switching, category switching and diathesis etc. which disappear on the level of semantic representations (e.g. Dorna et al. (1998)). The discussion of such examples can be found at length in the literature and will therefore not be repeated </context>
</contexts>
<marker>Dorna, Emele, 1996</marker>
<rawString>Michael Dorna and Martin C. Emele. 1996. Semantic-based Transfer. In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96), Copenhagen, Denmark.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Dorna</author>
<author>Anette Frank</author>
<author>Josef van Genabith</author>
<author>Martin C Emele</author>
</authors>
<title>Syntactic and semantic transfer with f-structures.</title>
<date>1998</date>
<booktitle>In Proceedings of the 17th International Conference on Computational Linguistics (Coling-ACL &apos;98),</booktitle>
<location>Montréal, Canada,</location>
<marker>Dorna, Frank, van Genabith, Emele, 1998</marker>
<rawString>Michael Dorna, Anette Frank, Josef van Genabith, and Martin C. Emele. 1998. Syntactic and semantic transfer with f-structures. In Proceedings of the 17th International Conference on Computational Linguistics (Coling-ACL &apos;98), Montréal, Canada, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jochen Done</author>
</authors>
<title>Efficient construction of underspecified semantics under massive ambiguity.</title>
<date>1997</date>
<booktitle>In Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics (ACLEACL&apos;97),</booktitle>
<location>Madrid,</location>
<marker>Done, 1997</marker>
<rawString>Jochen Done. 1997. Efficient construction of underspecified semantics under massive ambiguity. In Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics (ACLEACL&apos;97), Madrid, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Egg</author>
<author>K Lebeth</author>
</authors>
<title>Semantic underspecification and modifier attachment ambiguities.</title>
<date>1995</date>
<booktitle>Integrative Ansatze in der Computerlinguistik. Beitrdge zur 5. Fachtagung der Sektion Computerlinguistik der Deutschen Gesellschaft fir Sprachwissenschaft (DGfS),</booktitle>
<pages>19--24</pages>
<editor>In J. Kilbury and R. Wiese, editors,</editor>
<location>Düsseldorf, Germany.</location>
<contexts>
<context position="4084" citStr="Egg and Lebeth (1995)" startWordPosition="607" endWordPosition="610">ter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representations but also a generator which is able to take such a packed represen</context>
</contexts>
<marker>Egg, Lebeth, 1995</marker>
<rawString>M. Egg and K. Lebeth. 1995. Semantic underspecification and modifier attachment ambiguities. In J. Kilbury and R. Wiese, editors, Integrative Ansatze in der Computerlinguistik. Beitrdge zur 5. Fachtagung der Sektion Computerlinguistik der Deutschen Gesellschaft fir Sprachwissenschaft (DGfS), pages 19-24, Düsseldorf, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Johnson</author>
</authors>
<title>Features and Formulae.</title>
<date>1991</date>
<journal>Computational Linguistics,</journal>
<pages>17--2</pages>
<contexts>
<context position="10111" citStr="Johnson (1991)" startWordPosition="1579" endWordPosition="1580">mbedding f-structures provide. Therefore, the structural embedding which is, on the one hand, part of f-structures themself is represented, on the other hand, in the interpretation of constraint sets. Furthermore, sets come with very simple test and manipulation operations such as tests for membership and set union. In the following we define a correspondence between f-structures and sets of terms. We restrict the f-structures to transfer relevant information such as PREDS, grammatical functions, etc. Feature structure constraints are encoded as relational constraints using Prolog syntax (cf. Johnson (1991)). As examples of such sets of terms see (5) and (6) which corresponds to fstructures (3) and (4), respectively. (5) treffen(1), subj(1,2),pro(2),num(2,p1), obj(1,3), kollege(3),num(3,p1), spec(3,def), adjn(1,4),in(4), obj(4,5),Berlin(5) (6) treffen(1), subj(1,2),pro(2),num(2,p1), obj(1,3), kollege(3),num(3,p1), spec(3,def), adjn(3,4),in(4), obj(4,5),Berlin(5) The 2-place relation trans given below translates between f-structures and (sets of) terms. are references to f-structures which are mapped into nodes i used in terms. r are features, n(...) describe predicates, v stands for atomic value</context>
</contexts>
<marker>Johnson, 1991</marker>
<rawString>Mark Johnson. 1991. Features and Formulae. Computational Linguistics, 17(2):131-151.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ronald M Kaplan</author>
<author>Joan Bresnan</author>
</authors>
<title>Lexical-Functional Grammar: A formal system for grammatical representation.</title>
<date>1982</date>
<booktitle>The Mental Representation of Grammatical Relations,</booktitle>
<pages>173--281</pages>
<editor>In Joan Bresnan, editor,</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, Mass.</location>
<contexts>
<context position="5890" citStr="Kaplan and Bresnan, 1982" startWordPosition="896" endWordPosition="899">rved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 1992; Beaven, 1992) or the kind of semantic-based transfer approach as described for example in Dorna and Emele (1996) to cope with local ambiguities. To explain and illustrate the treatment of local ambiguities we show how an underspecified representation of PP attachment ambiguities can be utilized in a machine translation architecture for providing ambiguity preserving translations. It is illustrated on the basis of LFG f-structure level representations (Kaplan and Bresnan, 1982). However, it could equally well be done on the level of underspecified semantic representations as shown in (Dorna et al., 1998). The main reason for choosing the fstructure level representation is due to the fact that we could use the Xerox Linguistic Environment (XLE) system (Maxwell III and Kaplan, 1996) for the analysis and generation of English and German utterances. The key argument for using this linguistic workbench is the ability to produce packed representations for ambiguous utterances using techniques described in Maxwell III and Kaplan (1993) and the availability of a generator w</context>
</contexts>
<marker>Kaplan, Bresnan, 1982</marker>
<rawString>Ronald M. Kaplan and Joan Bresnan. 1982. Lexical-Functional Grammar: A formal system for grammatical representation. In Joan Bresnan, editor, The Mental Representation of Grammatical Relations, pages 173-281. MIT Press, Cambridge, Mass.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kay</author>
<author>M Gawron</author>
<author>P Norwig</author>
</authors>
<title>Verbmobil: a Translation System for Face-to-Face Dialogs. Number 33 in CSLI Lecture Notes.</title>
<date>1994</date>
<publisher>University of Chicago Press.</publisher>
<contexts>
<context position="2058" citStr="Kay et al. (1994)" startWordPosition="295" endWordPosition="298">s and the number of lexical readings increases. In general, it is not possible to resolve all potentially ambiguous descriptions without incorporating world knowledge of unlimited size. This fundamental problem has been discussed in the literaWe would like to thank our colleagues at Xerox PARC and Xerox RCE for fruitful discussions and the anonymous reviewers for valuable feedback. This work was funded by the German Federal Ministry of Education, Science, Research and Technology (BMBF) in the framework of the Verbmobil project under grant 01 IV 701 N3. ture as the Al completeness problem (cf. Kay et al. (1994)). Nevertheless, it has been observed that many ambiguous utterances in the source language (SL) text can be translated by equivalently ambiguous phrases in the target language (TL) text. We call such an ambiguity a preservable ambiguity and the corresponding architecture for translation an ambiguity preserving MT approach. In order to achieve this goal of ambiguity preserving translations there exist a number of different solutions we can apply. A naive solution would enumerate all possible ambiguous descriptions, translate them and generate the corresponding target utterances which would the</context>
</contexts>
<marker>Kay, Gawron, Norwig, 1994</marker>
<rawString>M. Kay, M. Gawron, and P. Norwig. 1994. Verbmobil: a Translation System for Face-to-Face Dialogs. Number 33 in CSLI Lecture Notes. University of Chicago Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Kay</author>
</authors>
<title>Chart generation.</title>
<date>1996</date>
<booktitle>In Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics (ACL &apos;96),</booktitle>
<pages>200--204</pages>
<location>Santa Cruz, CA.</location>
<contexts>
<context position="4805" citStr="Kay (1996)" startWordPosition="726" endWordPosition="727"> as much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representations but also a generator which is able to take such a packed representation as input and generate all possible paraphrases without explicitly enumerating all readings. The work in Kay (1996) and the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chartbased generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form. What needs to be done to realize our envisaged goal is a transfer system which is able to work on these packed translations without unpacking them or only as much as necessary if ambiguities can only partly be preserved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 19</context>
<context position="20506" citStr="Kay (1996)" startWordPosition="3355" endWordPosition="3356">ions the transfer system uses an internal chart to store all successful rule applications. Each predicate in the input set gets assigned a unique bit in a bit vector such that it can be checked easily that no predicate is covered more than once while trying to combine different edges in the chart. With this scheme it is also possible to identify the final edges because they are the ones where all bits are set. The overall processing scheme using an agenda and the data structures are very similar to the chart representation as proposed for doing chart-based generation from ambiguous input (cf. Kay (1996) and Shemtov (1996)). The main difference stems from the lack of explicit context-free grammar rules. Instead, in the proposed setup, the left hand sides of transfer rules are interpreted as immediate dominance rules as they are used for describing free word order languages supplemented with a single binary context-free rule which recursively tries to combine all possible subsets of terms for which no explicit transfer rule exists. 7 Summary In this paper we have demonstrated that a Shake-and-Bake inspired MT approach can be applied to flat f-structure respresentations. It has also been shown </context>
</contexts>
<marker>Kay, 1996</marker>
<rawString>Martin Kay. 1996. Chart generation. In Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics (ACL &apos;96), pages 200-204, Santa Cruz, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Kay</author>
</authors>
<date>1997</date>
<booktitle>The Proper Place of Men and Machines in Language Translation. Machine Translation,</booktitle>
<pages>12--3</pages>
<contexts>
<context position="8522" citStr="Kay, 1997" startWordPosition="1335" endWordPosition="1336">tence (2a) would be chosen to express the attachment of the prepositional phrase to the verb phrase whereas sentence (2b) would be chosen to express the attachment to the noun phrase &apos;the colleagues&apos;. 366 (2) a. In Berlin treffen wir die Kollegen In Berlin meet we the colleagues (In Berlin we will meet the colleagues.) b. wir treffen die Kollegen aus Berlin we meet the colleagues from Berlin (We will meet the colleagues from Berlin.) In addition, those two maximally discriminating sentences could also be used as an interface for an interactive translation system, e.g. the negotiator approach (Kay, 1997) where the human translator would be asked to distinguish between the two possible readings. The f-structures in (3) and (4) correspond to the disambiguated attachments as paraphrased in (2a) and (213) respectively. (3) &amp;quot;PRED treffen&lt;III, [NUM NUM pl pro] [&apos;RED KOliegl OBJ NUM pl 51 SPEC def in&lt;111&gt; OBJ qPRED Berlin]]} [OBJ (4) PRED treffen&lt;O, El&gt; _ [NUM pro] NUM pl FRED Kollege [ NUM pl SPEC def 3 From F-structures to Term Sets F-stuctures encode information in a hierarchical manner by recursively embedding substructures. They provide by nature only outside-in references whereas in transfer f</context>
</contexts>
<marker>Kay, 1997</marker>
<rawString>Martin Kay. 1997. The Proper Place of Men and Machines in Language Translation. Machine Translation, 12:3-23.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John T Maxwell</author>
<author>Ronald M Kaplan</author>
</authors>
<title>A method for disjunctive constraint satisfaction.</title>
<date>1991</date>
<booktitle>In Masaru Tomita, editor, Current Issues in Parsing Techonlogy,</booktitle>
<pages>18--27</pages>
<publisher>Kluwer Academic Publishers,</publisher>
<location>Dordrecht, Holland.</location>
<marker>Maxwell, Kaplan, 1991</marker>
<rawString>John T. Maxwell III and Ronald M. Kaplan. 1991. A method for disjunctive constraint satisfaction. In Masaru Tomita, editor, Current Issues in Parsing Techonlogy, pages 18-27. Kluwer Academic Publishers, Dordrecht, Holland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John T Maxwell</author>
<author>Ronald M Kaplan</author>
</authors>
<title>The interface between phrasal and functional constraints.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>4</issue>
<pages>590</pages>
<marker>Maxwell, Kaplan, 1993</marker>
<rawString>John T. Maxwell III and Ronald M. Kaplan. 1993. The interface between phrasal and functional constraints. Computational Linguistics, 19(4):571— 590.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John T Maxwell</author>
<author>Ronald M Kaplan</author>
</authors>
<title>An efficient parser for LFG.</title>
<date>1996</date>
<booktitle>In Proceedings of the 1st LFG Conference.</booktitle>
<marker>Maxwell, Kaplan, 1996</marker>
<rawString>John T. Maxwell III and Ronald M. Kaplan. 1996. An efficient parser for LFG. In Proceedings of the 1st LFG Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manfred Pinkal</author>
</authors>
<title>Radical Underspecification.</title>
<date>1995</date>
<booktitle>In Proceedings of the 10th Amsterdam Colloquium,</booktitle>
<pages>587--606</pages>
<institution>ILLC/Department of Philosophy, University of Amsterdam.</institution>
<location>Amsterdam, Holland,</location>
<contexts>
<context position="4061" citStr="Pinkal (1995)" startWordPosition="605" endWordPosition="606">ers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representations but also a generator which is able to take</context>
</contexts>
<marker>Pinkal, 1995</marker>
<rawString>Manfred Pinkal. 1995. Radical Underspecification. In Proceedings of the 10th Amsterdam Colloquium, pages 587-606, Amsterdam, Holland, December. ILLC/Department of Philosophy, University of Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Uwe Reyle</author>
</authors>
<title>Dealing with Ambiguities by Underspecification: Construction, Representation and Deduction.</title>
<date>1993</date>
<journal>Jounal of Semantics,</journal>
<pages>10--2</pages>
<contexts>
<context position="3402" citStr="Reyle, 1993" startWordPosition="504" endWordPosition="505">ential readings might grow exponentially with the length of the sentence. Another solution to overcome this problem is not to resolve ambiguities at all by using underspecified representations. This strategy has been successfully applied for a number of semantic ambiguities like quantifier and operator scope ambiguities. Therefore it is not surprising that the usage of underspecified semantic representations have gained much popularity in recent years. Work in the literature include the QLF representations (Alshawi, 1992), the work on Underspecified Discourse Representation Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and</context>
</contexts>
<marker>Reyle, 1993</marker>
<rawString>Uwe Reyle. 1993. Dealing with Ambiguities by Underspecification: Construction, Representation and Deduction. Jounal of Semantics, 10(2):123-179.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Rich</author>
<author>J Barnett</author>
<author>K Wittenburg</author>
<author>D Wroblewski</author>
</authors>
<title>Ambiguity procrastination.</title>
<date>1987</date>
<booktitle>In Proceedings of the 6th National Conference of the American Association for Artificial Intelligence (AAAI&apos;87),</booktitle>
<pages>571--576</pages>
<location>Seattle, WA.</location>
<contexts>
<context position="3968" citStr="Rich et al. (1987)" startWordPosition="588" endWordPosition="591">course Representation Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser wh</context>
</contexts>
<marker>Rich, Barnett, Wittenburg, Wroblewski, 1987</marker>
<rawString>E. Rich, J. Barnett, K. Wittenburg, and D. Wroblewski. 1987. Ambiguity procrastination. In Proceedings of the 6th National Conference of the American Association for Artificial Intelligence (AAAI&apos;87), pages 571-576, Seattle, WA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Schiehlen</author>
</authors>
<title>Semantic Construction from Parse Forests.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96).</booktitle>
<contexts>
<context position="4102" citStr="Schiehlen (1996)" startWordPosition="611" endWordPosition="612">For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representations but also a generator which is able to take such a packed representation as input an</context>
</contexts>
<marker>Schiehlen, 1996</marker>
<rawString>Michael Schiehlen. 1996. Semantic Construction from Parse Forests. In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jungyun Seo</author>
<author>Robert F Simmons</author>
</authors>
<title>Syntactic graphs: A representation for the union of all ambiguous parse trees.</title>
<date>1989</date>
<journal>Computational Linguistics,</journal>
<pages>15--1</pages>
<contexts>
<context position="3992" citStr="Seo and Simmons (1989)" startWordPosition="592" endWordPosition="595">n Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995), Schiehlen (1996) and Dorre (1997)). The key idea of all these representations is to factor common information as much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce s</context>
</contexts>
<marker>Seo, Simmons, 1989</marker>
<rawString>Jungyun Seo and Robert F. Simmons. 1989. Syntactic graphs: A representation for the union of all ambiguous parse trees. Computational Linguistics, 15(1):19-32, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hadar Shemtov</author>
</authors>
<title>Generation of Paraphrases from Ambiguous Logical Forms.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96),</booktitle>
<location>Copenhagen, Denmark.</location>
<contexts>
<context position="4860" citStr="Shemtov (1996)" startWordPosition="735" endWordPosition="736">sent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representations but also a generator which is able to take such a packed representation as input and generate all possible paraphrases without explicitly enumerating all readings. The work in Kay (1996) and the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chartbased generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form. What needs to be done to realize our envisaged goal is a transfer system which is able to work on these packed translations without unpacking them or only as much as necessary if ambiguities can only partly be preserved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 1992; Beaven, 1992) or the kind of semantic-based transfe</context>
<context position="20525" citStr="Shemtov (1996)" startWordPosition="3358" endWordPosition="3359">er system uses an internal chart to store all successful rule applications. Each predicate in the input set gets assigned a unique bit in a bit vector such that it can be checked easily that no predicate is covered more than once while trying to combine different edges in the chart. With this scheme it is also possible to identify the final edges because they are the ones where all bits are set. The overall processing scheme using an agenda and the data structures are very similar to the chart representation as proposed for doing chart-based generation from ambiguous input (cf. Kay (1996) and Shemtov (1996)). The main difference stems from the lack of explicit context-free grammar rules. Instead, in the proposed setup, the left hand sides of transfer rules are interpreted as immediate dominance rules as they are used for describing free word order languages supplemented with a single binary context-free rule which recursively tries to combine all possible subsets of terms for which no explicit transfer rule exists. 7 Summary In this paper we have demonstrated that a Shake-and-Bake inspired MT approach can be applied to flat f-structure respresentations. It has also been shown how such a transfer</context>
</contexts>
<marker>Shemtov, 1996</marker>
<rawString>Hadar Shemtov. 1996. Generation of Paraphrases from Ambiguous Logical Forms. In Proceedings of the 16th International Conference on Computational Linguistics (Coling &apos;96), Copenhagen, Denmark.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hadar Shemtov</author>
</authors>
<date>1997</date>
<booktitle>Ambiguity Management in Natural Language Generation. Ph.D. thesis,</booktitle>
<institution>Stanford University,</institution>
<contexts>
<context position="4879" citStr="Shemtov (1997)" startWordPosition="738" endWordPosition="739"> ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representations but also a generator which is able to take such a packed representation as input and generate all possible paraphrases without explicitly enumerating all readings. The work in Kay (1996) and the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chartbased generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form. What needs to be done to realize our envisaged goal is a transfer system which is able to work on these packed translations without unpacking them or only as much as necessary if ambiguities can only partly be preserved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 1992; Beaven, 1992) or the kind of semantic-based transfer approach as descr</context>
</contexts>
<marker>Shemtov, 1997</marker>
<rawString>Hadar Shemtov. 1997. Ambiguity Management in Natural Language Generation. Ph.D. thesis, Stanford University, June.</rawString>
</citation>
<citation valid="true">
<title>Semantic ambiguity and underspecification.</title>
<date>1996</date>
<journal>Number</journal>
<booktitle>in CSLI Lecture Notes. CSLI Publications,</booktitle>
<volume>55</volume>
<editor>Kees van Deemter and Stanley Peters, editors.</editor>
<location>Stanford University, CA.</location>
<contexts>
<context position="3484" citStr="(1996)" startWordPosition="520" endWordPosition="520">ion to overcome this problem is not to resolve ambiguities at all by using underspecified representations. This strategy has been successfully applied for a number of semantic ambiguities like quantifier and operator scope ambiguities. Therefore it is not surprising that the usage of underspecified semantic representations have gained much popularity in recent years. Work in the literature include the QLF representations (Alshawi, 1992), the work on Underspecified Discourse Representation Structures (UDRS) (Reyle, 1993; Bos et al., 1996), and the collection of papers in van Deemter and Peters (1996). For an application of using underspecified semantic representations within MT see Alshawi et al. (1991), Copestake et al. (1995) and Dorna and Emele (1996). Another source of ambiguities which might be preservable between related languages include syntactic ambiguities like the well-known PP at365 tachment ambiguities. There has been growing interest in developing underspecified or so called packed respresentations to deal with such syntactic ambiguities (cf. Rich et al. (1987), Seo and Simmons (1989), Bear and Hobbs (1988), Maxwell III and Kaplan (1993), Pinkal (1995), Egg and Lebeth (1995)</context>
<context position="4805" citStr="(1996)" startWordPosition="727" endWordPosition="727">much as possible in a parse forest and to represent the attachment ambiguities as local disjunctions without conversion to disjunctive normal form. Such representations avoid the exponential explosion which would result if all possible readings are extracted from the parse forest. To achieve our overall goal of ambiguity preserving MT it requires not only a parser which is able to produce such packed representations but also a generator which is able to take such a packed representation as input and generate all possible paraphrases without explicitly enumerating all readings. The work in Kay (1996) and the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chartbased generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form. What needs to be done to realize our envisaged goal is a transfer system which is able to work on these packed translations without unpacking them or only as much as necessary if ambiguities can only partly be preserved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 19</context>
<context position="20506" citStr="(1996)" startWordPosition="3356" endWordPosition="3356"> the transfer system uses an internal chart to store all successful rule applications. Each predicate in the input set gets assigned a unique bit in a bit vector such that it can be checked easily that no predicate is covered more than once while trying to combine different edges in the chart. With this scheme it is also possible to identify the final edges because they are the ones where all bits are set. The overall processing scheme using an agenda and the data structures are very similar to the chart representation as proposed for doing chart-based generation from ambiguous input (cf. Kay (1996) and Shemtov (1996)). The main difference stems from the lack of explicit context-free grammar rules. Instead, in the proposed setup, the left hand sides of transfer rules are interpreted as immediate dominance rules as they are used for describing free word order languages supplemented with a single binary context-free rule which recursively tries to combine all possible subsets of terms for which no explicit transfer rule exists. 7 Summary In this paper we have demonstrated that a Shake-and-Bake inspired MT approach can be applied to flat f-structure respresentations. It has also been shown </context>
</contexts>
<marker>1996</marker>
<rawString>Kees van Deemter and Stanley Peters, editors. 1996. Semantic ambiguity and underspecification. Number 55 in CSLI Lecture Notes. CSLI Publications, Stanford University, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pete Whitelock</author>
</authors>
<title>Shake-and-Bake Translation.</title>
<date>1992</date>
<booktitle>In Proceedings of the 14th International Conference on Computational Linguistics (Coling &apos;92),</booktitle>
<pages>784--791</pages>
<location>Nantes, France.</location>
<contexts>
<context position="5407" citStr="Whitelock, 1992" startWordPosition="825" endWordPosition="826">in Kay (1996) and the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chartbased generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form. What needs to be done to realize our envisaged goal is a transfer system which is able to work on these packed translations without unpacking them or only as much as necessary if ambiguities can only partly be preserved in the target language. The rest of this paper is concerned with the extension of a Shake-andBake like transfer approach (Whitelock, 1992; Beaven, 1992) or the kind of semantic-based transfer approach as described for example in Dorna and Emele (1996) to cope with local ambiguities. To explain and illustrate the treatment of local ambiguities we show how an underspecified representation of PP attachment ambiguities can be utilized in a machine translation architecture for providing ambiguity preserving translations. It is illustrated on the basis of LFG f-structure level representations (Kaplan and Bresnan, 1982). However, it could equally well be done on the level of underspecified semantic representations as shown in (Dorna e</context>
<context position="9341" citStr="Whitelock, 1992" startWordPosition="1462" endWordPosition="1463">espectively. (3) &amp;quot;PRED treffen&lt;III, [NUM NUM pl pro] [&apos;RED KOliegl OBJ NUM pl 51 SPEC def in&lt;111&gt; OBJ qPRED Berlin]]} [OBJ (4) PRED treffen&lt;O, El&gt; _ [NUM pro] NUM pl FRED Kollege [ NUM pl SPEC def 3 From F-structures to Term Sets F-stuctures encode information in a hierarchical manner by recursively embedding substructures. They provide by nature only outside-in references whereas in transfer frequently inside-out access is necessary. Hence, information access for transformation processes like transfer is not as straightforward as it could be when using flat set representations (Beaven, 1992; Whitelock, 1992). Set representations can be seen as a pool of constraints where co-references between the constraints, i.e. the set elements, are used to encode the same embedding f-structures provide. Therefore, the structural embedding which is, on the one hand, part of f-structures themself is represented, on the other hand, in the interpretation of constraint sets. Furthermore, sets come with very simple test and manipulation operations such as tests for membership and set union. In the following we define a correspondence between f-structures and sets of terms. We restrict the f-structures to transfer r</context>
</contexts>
<marker>Whitelock, 1992</marker>
<rawString>Pete Whitelock. 1992. Shake-and-Bake Translation. In Proceedings of the 14th International Conference on Computational Linguistics (Coling &apos;92), pages 784-791, Nantes, France.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>