<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000008">
<note confidence="0.9215968">
LANGUAGE GENERATION FROM CONCEPTUAL STRUCTURE:
SYNTHESIS OF GERMAN IN A JAPANESE/GERMAN MT PROJECT
J. Laubsch, D. Roesner, K. Hanakata, A. Lesniewski
Projekt SEMSYN, Institut fuer Informatik, Universitaet Stuttgart
Herdweg 51, 0-7000 Stuttgart 1, West Germany
</note>
<email confidence="0.580407">
ABSTRACT
</email>
<bodyText confidence="0.999889125">
This caper pescribes the current state of the
SEMSYN project , whose goal is to develop a module
for generation of German from a semantic
representation. The first application of this
module is within the framework of a Japanese/German
machine translation project. The generation process
is organized into three stages that use distinct
knowledge sources. The first stage is conceptually
oriented and language independent, and exploits
case and concept schemata. The second stage employs
realization schemata which specify choices to map
from meaning structures into German linguistic
constructs. The last stage constructs the surface
string using knowledge about syntax, morphology,
and style. This paper describes the first two
stages.
</bodyText>
<sectionHeader confidence="0.955793" genericHeader="abstract">
INTRODUCTICN
</sectionHeader>
<bodyText confidence="0.999827105263158">
SEMSYN&apos;s generation module is developed within a
German/Japanese MT project. FUjitsu Research Labs.
provide semantic representations that are produced
as an interim data structure of their Ja-
panese/English MT system ATLAS/II (Uchida &amp;
Sugiyama, 1980). The feasibility of the approach of
using a semantic representation as an interlingua
in a practical application will be investigated and
demonstrated by translating titles of Japanese
papers from the field of &amp;quot;Information Technology&amp;quot;.
This material comes from Japanese documentation
data bases and contains in addition to titles also
their respective abstracts. Our design of the
generation component is not limited to titles, but
takes extensibility to abstracts and full texts
into account. The envisioned future application of
a Japanese/German translation system is to provide
natural language access to Japanese documentation
data bases.
</bodyText>
<sectionHeader confidence="0.987402" genericHeader="method">
OVERALL DESIGN OF SEMSYN
</sectionHeader>
<bodyText confidence="0.876766777777778">
Fig. 1 shows the stages of generation. The
Japanese text is processed by the analysis part of
FUjlTSU&apos;s ATLAS/II system. Its output is a semantic
net which serves as the input for our system.
1 SEMSYN is an acronym for semantic synthesis. The
project is funded by the &amp;quot;Informationslinguistik&amp;quot;
program of the Ministry for Research and Technology
(BMFT), FRG, and is carried out in cooperation with
FUJITSU Research Laboratories, Japan.
</bodyText>
<figure confidence="0.993708888888889">
Japanese text
ATLAS/II analysis stage
Semantic net
SEMSYN generation stages
Knowledge base relating
semantic symbols to case-
schemata for verb concepts
and concept-schemata for
noun concepts
stage 1
Instantiated
Knowledge Base
Schema (IS)
Rules for selecting
realization-schemata,
specifying syntactic
categories and functional
roles
stage 2
Instantiated
Realization
Schema (IRS)
Generator front end:
style, syntax, and
morphology
stage 3
German text
</figure>
<figureCaption confidence="0.935575">
Fig. 1 Stages of Generation
</figureCaption>
<page confidence="0.998353">
491
</page>
<sectionHeader confidence="0.964021" genericHeader="method">
CONCEPTUAL STRUCTURE
</sectionHeader>
<bodyText confidence="0.99996">
ATLAS/II&apos;s semantic networks (see Fig.2)
are directed graphs with named nodes and
labelled arcs. The names of the node are
called &amp;quot;semantic symbols&amp;quot; and are associated
with Japanese and English dictionary entries.
The labelled arcs are used in two ways:
</bodyText>
<listItem confidence="0.6234565">
a) Binary arcs either express case relations
between connected symbols or combine sub-
structures
b) Unary arcs serve as modifying tags of
various kinds (logical junctors, syntactic
features, stylistics, ...)
</listItem>
<bodyText confidence="0.971216">
The first stage of generation is con-
ceptually oriented and should be target
language independent. We use frame structures
in a EEL-like notation. Our representation
distinguishes between case schemata (used to
carry the meaning of actions), and concept
schemata (used to represent &amp;quot;things&amp;quot; or &amp;quot;qua-
lities&amp;quot;). Each semantic symbol points to such
a schema. These schemata have three parts:
</bodyText>
<listItem confidence="0.999389090909091">
(1) roles: For action schemata, these are the
usual cases of Fillmore (e.g. AGENT, OBJECT,
...); for concept schemata roles describe how
the concept may be further specified by other
concepts.
(2) transformation rules: These are condition-
action pairs that specify which schema is to
be applied, and how its roles are to be filled
from the ATLAS/II net.
(3) choices describe possible syntactic
patterns for realization.
</listItem>
<figure confidence="0.8291945625">
Examples:
Case schema for the semantic symbol ACHIEVE:
(ACHIEVE (superc goal-oriented-act)
(roles
(Agent (class animate))
(Goal)
(Method (class abstract-object))
(Instrument (class concrete-object)))
(transformation-rules ...)
(choices ...)))
The concept schema for SPEAKER is:
(SPEAKER (superc animate)
(roles
(Performs-act-for (class organization))
(transformation-rules ...)
(choices ...))).
</figure>
<sectionHeader confidence="0.763533" genericHeader="method">
FROM CONCEPTS TO LANGUAGE
</sectionHeader>
<bodyText confidence="0.9972215">
In the target language oriented stage 2,
the following decisions have to be made:
</bodyText>
<listItem confidence="0.963300625">
i) Retrieval of the lexical entry of a German
verb and its associated case frame cor-
responding to the IKBS.
ii) Selection of lexical entries for the other
semantic symbols.
iii) Selection of a realization schema (RS),
mapping of IKBS roles to RS functional
roles, and inferring syntactic features.
</listItem>
<bodyText confidence="0.999926545454546">
In i) a simple retrieval may not suffice.
In order to choose the most adequate German
verb, it will e.g. be necessary to check the
fillers of an IKBS. For example, the semantic
symbol REALISE may translate to &amp;quot;realisieren&amp;quot;,
&amp;quot;implementieren&amp;quot; etc.. If the Instrument role
of REALISE were filled with an instance of the
PROGRAM concept, we would choose the more
adequate word sense &amp;quot;implementieren&amp;quot;.
In ii) sometimes similar problems arise.
For example, the semantic symbol ACCIDENT may
translate to the German equivalent of
&amp;quot;accident&amp;quot;, &amp;quot;error&amp;quot;, &amp;quot;failure&amp;quot; or &amp;quot;bug&amp;quot;. The
actual choice depends here on the filler of
ACCIDENT&apos;s semantic role for &amp;quot;where it
occurred&amp;quot;.
iii) The choices aspect of a schema
describes different possibilities how an
instance may be realized and specifies the
conditions for selection. (This idea is due to
McDonald (1983) and his MUMBLE system). The
factors determining the choice include:
</bodyText>
<listItem confidence="0.99573875">
(a) Which roles are filled?
(b) What are their respective fillers?
(c) Which type of text are we going to
generate?
</listItem>
<bodyText confidence="0.999845772727273">
For example if the Agent-role of a case
frame is unfilled, we may choose either
passivation or selection of a German verb
which maps the semantic object into the
syntactic subject. If neither agent nor object
are filled, nominalization is forced.
A realization schema (RS) is a structure
which identifies a syntactic category (e.g.
CLAUSE, NP) and describes its functional roles
(e.g. HEAD, MODIFIER, ...). We employ
Winograd&apos;s terminology for functional grammar
(Winograd, 1983). In general, case schemata
will be mapped into CLAUSE-RS and concept
schemata are mapped into NP-RS. A CLAUSE-RS
has a features description and slots for verb,
subject, direct object, and indirect objects.
A features description may include information
about voice, modality, idiomatic realization,
etc.. There are realization schemata for
discourse as well as titles. The latter are
special cases of the former, forcing
nominalized constructions.
</bodyText>
<sectionHeader confidence="0.999067" genericHeader="method">
REFERENCING AND FOCUSSING
</sectionHeader>
<bodyText confidence="0.99871825">
For referencing and other phenomena like
focussing, the simple approach of only
allowing a schema instance as a filler is not
sufficient. We therefore included in our
</bodyText>
<page confidence="0.994097">
492
</page>
<bodyText confidence="0.959288833333333">
knowledge representation a way to have de-
scriptors as fillers. Such descriptors are
references to parts of a schema. In the
following example the filler of USE&apos;s Object-
slot is a reference descriptor to SYNTHESIZE&apos;s
Object-slot:
</bodyText>
<figure confidence="0.9347855">
X = (a USE with
(Object
(the Object from
(a SYNTHESIZE with
(Object (FUNCTION))
(Method [DYNAM/C-PROGRAMMING])))
(Purpose (an ACCESS with
(Object [DATA-BASE)))))
X could be realized as:
&amp;quot;Using functions, that are synthesized by
dynamic programming for data-base access.&amp;quot;
In general, descriptors have the form:
(the &lt;path&gt; from &lt;IRBS&gt;)
&lt;path&gt; = &lt;slot&gt;...
A description can be realized by a relative
clause.
</figure>
<bodyText confidence="0.844713166666667">
The same technique of referring to a sub-
structure may as well be used for focussing.
For example, embedding X into
(the Purpose from X)
expresses that the focus is on X&apos;s Purpose
slot, which would yield the realization:
</bodyText>
<listItem confidence="0.9098015">
â€¢ &amp;quot;Database access using functions that are
synthesized by dynamic programming.&amp;quot;
</listItem>
<sectionHeader confidence="0.515561" genericHeader="method">
A WALK WITH SEMSYN
</sectionHeader>
<bodyText confidence="0.841431">
Let us look at the first sentence from an
abstract. Figure 2 contains the Japanese input
and the semantic net corresponding to
ATLAS/II&apos;s analysis.
In stage 1, we first examine those semantic
symbols which have an attached case schema and
instantiate them according to their trans-
formation rules.
In this example the WANT and ACHIEVE nodes
(flagged by a PRED arc) are case schemata.
Applying their tranformation rules results in
the following IKBS:
</bodyText>
<figure confidence="0.936767">
(a WANT with
(Object
(an ACHIEVE with
(Agent [SPEAKER))
(Object [PURPOSE (Number (PLURAL1)1)
(Method [UTTERANCE (Number [SINGLE))))))
</figure>
<bodyText confidence="0.43447175">
In stage 2, we will derive a description of
how this structure will be realized as German
text.
First, consider the outer WANT act. There
</bodyText>
<table confidence="0.997045096774194">
ig*tt--30Atit-CVNORn
&amp; ti ct :5 L tZ
Japanese input for FUJITSUs ATLAS/II-system
Topofobject
SEMSYNs interface to ATLAS/II
((UTTERANCE --NUMBER-, ONE) (PURPOSE --NUMBER-, PLURAL)
(WANT --OW-, ACHIEVE)
(WANT --PRED-&gt; *NIL)
(*NIL --ST-, WANT)
(ACHIEVE --OBJ-&gt; PURPOSE)
(ACHIEVE --PRED-&gt; *NIL)
(ACHIEVE --METHOD-) UTTERANCE)
(ACHIEVE --AGENT-&gt; SPEAKER))
Bottom of object
RUN-K-101
4:&gt;
CIMID a=c&apos;
aml,
MD 121/3 CZMO
METHOD
PURPOSE
412=2E) 1112=ED
ONE
SEMANTIC NET
Top of object
GERMAN EQUIVALENT TO JAPANESE INPUT
ES WIRD GEWUENSCHT DASS EIN
SPRECHER MEHRERE ZWECKE MIT
LINER EINZELNEN AEUSSERUNG
ERREICHT
Bottom of object
</table>
<figureCaption confidence="0.98699">
Figure 2. From Japanese to German
</figureCaption>
<bodyText confidence="0.664482555555556">
is no Agent, so we choose to build a clause in
passive voice. Next, we observe that WANT&apos;s
object is itself an act with several filled
roles and could be realized as a clause. One
of the choices of WANT fits this situation.
Its condition is that there is no Agent and
the Object will be realized as a clause. Its
realization schema is an idiomatic phrase
named *Es-Part*:
</bodyText>
<footnote confidence="0.7266542">
&amp;quot;Es ist erwuenscht, dass &lt;CLAUSE&gt;&amp;quot;
(&amp;quot;It is wanted that &lt;CLAUSE&gt;&amp;quot;)
Now consider the embedded &lt;CLAUSE&gt;. An
ACHIEVE act can be realized in German as a
clause by the following realization schema:
</footnote>
<page confidence="0.99868">
493
</page>
<figure confidence="0.722670125">
(a CLAUSE with
(Subject &lt;NP-realization of Agent-role&gt;
(Verb &amp;quot;erreich_&amp;quot;
(DirObj &lt;NP-realization of Object-role&gt;
(IndObjs
(a PP with
(Prep (One-of [&amp;quot;durch&amp;quot; &amp;quot;mit&amp;quot; &amp;quot;mittels&amp;quot;]))
(PObj &lt;NP-realization of Method-role&gt;))))
</figure>
<bodyText confidence="0.99976564516129">
This schema is not particular to ACHIEVE.
It is shared by other verbs and will therefore
be found via general choices which ACHIEVE
inherits.
The Agent of ACHIEVE&apos;s IKBS maps to the
Subject and the Method is realized as an
indirect object. Within the scope of the
chosen German verb &amp;quot;erreichen&amp;quot; (for
&amp;quot;achieve&amp;quot;), a Method role maps into a PP with
one of the prepositions &amp;quot;durch&amp;quot;, &amp;quot;mit&amp;quot;,
&amp;quot;mittels&amp;quot; (corresponding to &amp;quot;by means of&amp;quot;).
This leads to the following IRS:
IPG&apos;s input is a conceptual structure.
Parts of it are fully realized before others
are considered. The motivation for IPG&apos;s
incremental control structure is psycho-
logical. In contrast, the derivation of our
IRS and its subsequent rendering is not
committed to such a control structure. Never-
theless, the procedural grammar of IPG could
be used to produce surface strings from IKBS
by providing it with additional syntactic
features (which are contained in IRS).
Both MUMBLE and IPG are conceptually
oriented and incremental. MUMBLE&apos;s input is on
the level of our IKBS. MUMBLE produces func-
tional descriptions of sentences &amp;quot;on the fly&amp;quot;.
These descriptions are contained in a
constituent structure tree, which is traversed
to produce surface text. Our approach is to
make the functional description explicit.
</bodyText>
<sectionHeader confidence="0.797158" genericHeader="method">
ACKNOWLEDGEMENTS
</sectionHeader>
<figure confidence="0.945530315789474">
(a CLAUSE with
(Features (Voice Passive
Idiom *Es-Part*)
(Verb Nuensch2) ;want
(DirObj
(a CLAUSE with
(Subject (a NP with
(Head &amp;quot;Sprecher&amp;quot;)));speaker
(Verb &amp;quot;erreich2)
(DirObj
(a NP with
(Features (Numerus= Plural))
(Head [&amp;quot;Ziel&amp;quot;, &amp;quot;Zweck&amp;quot;]) ; purpose
(Adj &amp;quot;mehrere&amp;quot;)) ; multiple
(IndObjs
((a PP with
(Prep (&amp;quot;durch&amp;quot;, &amp;quot;mit&amp;quot;, &amp;quot;mittels&amp;quot;1)
(PObj
(a NP with
</figure>
<figureCaption confidence="0.503900333333333">
(Features (Numerus Singular))
(Head &amp;quot;Aeusserung&amp;quot;) ;utterance
(Adj &amp;quot;einzeln&amp;quot;) ; single )))))
</figureCaption>
<bodyText confidence="0.999597">
Such an instantiated realization schema
(IRS) will be the input of the generation
front end that takes care of a syntactically
and morphologically correct German surface
structure (see Fig. 2).
</bodyText>
<sectionHeader confidence="0.986085" genericHeader="conclusions">
EXPERIMENTS WITH OTHER GENERATION MODULES
</sectionHeader>
<bodyText confidence="0.999911545454546">
We recently studied three generation
modules (running in Lisp on our SYMBOLICS
3600) with the objective to find out, whether
they could serve as a generation front end for
SEMSYN: SUTRA (Busemann, 1983), the German
version of IPG (Kempen &amp; Hoenkamp, 1982), and
MUMBLE (McDonald, 1983).
Our IRS is a functional grammar descrip-
tion. The input of SUTRA, the &amp;quot;preterminal
structure&amp;quot;, already makes assumptions about
word order within the noun group. To use
SUTRA, additional transformation rules would
have to be written.
We have to thank many colleagues in the
generation field that helped SEMSYN with their
experience. We are especially thankful to Dave
McDonald (Amherst), and Eduard Hoenkamp
(Nijmegen) whose support - personally and
through their software - is still going on. We
also thank the members of the ATLAS/II
research group (Fujitsu Laboratories) for
their support.
</bodyText>
<sectionHeader confidence="0.996446" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.936167611111111">
Uchida,H. &amp; Sugiyama: A machine translation
system from Japanese into English based on
conceptual structure, Proc. of COLING-80,
Tokyo, 1980, pp.455-462
Winograd, T.: Language as a cognitive process,
Addison-Wesley, 1983
McDonald, D.D.: Natural language generation as
a computational problem: An Introduction; in:
Brady &amp; Berwick (Eds.) Computational model of
discourse, MIT-Press, 1983, pp.209-265
Kempen, G. &amp; Hoenkamp,E.: Incremental sentence
generation: Implication for the structure of a
syntactic processor; in Proc. COLING-82,
Prague, 1982, pp.151-156
Busemann,B.: Oberflaechentransformationen bei
der Generierung geschriebener deutscher
Sprache; in: Neumann, B. (Ed.) GWAI-83,
Springer, 1983, pp.90-99
</reference>
<page confidence="0.999002">
494
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.010544">
<title confidence="0.997351">GENERATION FROM CONCEPTUAL SYNTHESIS OF GERMAN IN A JAPANESE/GERMAN MT PROJECT</title>
<author confidence="0.999826">J Laubsch</author>
<author confidence="0.999826">D Roesner</author>
<author confidence="0.999826">K Hanakata</author>
<author confidence="0.999826">A Lesniewski</author>
<affiliation confidence="0.99259">Projekt SEMSYN, Institut fuer Informatik, Universitaet Stuttgart</affiliation>
<address confidence="0.935265">Herdweg 51, 0-7000 Stuttgart 1, West Germany</address>
<abstract confidence="0.955863647540983">This caper pescribes the current state of the SEMSYN project , whose goal is to develop a module for generation of German from a semantic representation. The first application of this module is within the framework of a Japanese/German machine translation project. The generation process is organized into three stages that use distinct knowledge sources. The first stage is conceptually oriented and language independent, and exploits case and concept schemata. The second stage employs realization schemata which specify choices to map from meaning structures into German linguistic constructs. The last stage constructs the surface string using knowledge about syntax, morphology, and style. This paper describes the first two stages. INTRODUCTICN SEMSYN&apos;s generation module is developed within a German/Japanese MT project. FUjitsu Research Labs. provide semantic representations that are produced as an interim data structure of their Japanese/English MT system ATLAS/II (Uchida &amp; Sugiyama, 1980). The feasibility of the approach of using a semantic representation as an interlingua in a practical application will be investigated and demonstrated by translating titles of Japanese papers from the field of &amp;quot;Information Technology&amp;quot;. This material comes from Japanese documentation data bases and contains in addition to titles also their respective abstracts. Our design of the generation component is not limited to titles, but takes extensibility to abstracts and full texts into account. The envisioned future application of a Japanese/German translation system is to provide natural language access to Japanese documentation data bases. OVERALL DESIGN OF SEMSYN Fig. 1 shows the stages of generation. The Japanese text is processed by the analysis part of FUjlTSU&apos;s ATLAS/II system. Its output is a semantic net which serves as the input for our system. 1 SEMSYN is an acronym for semantic synthesis. The project is funded by the &amp;quot;Informationslinguistik&amp;quot; program of the Ministry for Research and Technology (BMFT), FRG, and is carried out in cooperation with FUJITSU Research Laboratories, Japan. Japanese text ATLAS/II analysis stage Semantic net SEMSYN generation stages Knowledge base relating semantic symbols to caseschemata for verb concepts and concept-schemata for noun concepts stage 1 Instantiated Knowledge Base Schema (IS) Rules for selecting realization-schemata, specifying syntactic categories and functional roles stage 2 Instantiated Realization Schema (IRS) Generator front end: style, syntax, and stage 3 German text Fig. 1 Stages of Generation 491 CONCEPTUAL STRUCTURE ATLAS/II&apos;s semantic networks (see Fig.2) are directed graphs with named nodes and labelled arcs. The names of the node are called &amp;quot;semantic symbols&amp;quot; and are associated with Japanese and English dictionary entries. The labelled arcs are used in two ways: a) Binary arcs either express case relations between connected symbols or combine substructures b) Unary arcs serve as modifying tags of various kinds (logical junctors, syntactic features, stylistics, ...) The first stage of generation is conceptually oriented and should be target language independent. We use frame structures in a EEL-like notation. Our representation between schemata to the meaning of actions), and to represent &amp;quot;things&amp;quot; or &amp;quot;qualities&amp;quot;). Each semantic symbol points to such a schema. These schemata have three parts: roles: action schemata, these are the usual cases of Fillmore (e.g. AGENT, OBJECT, ...); for concept schemata roles describe how the concept may be further specified by other concepts. transformation rules: are conditionaction pairs that specify which schema is to be applied, and how its roles are to be filled from the ATLAS/II net. choices possible syntactic patterns for realization. Examples: Case schema for the semantic symbol ACHIEVE: (roles (Goal) (transformation-rules ...) (choices ...))) The concept schema for SPEAKER is: (roles (Performs-act-for (class organization)) (transformation-rules ...) (choices ...))). FROM CONCEPTS TO LANGUAGE In the target language oriented stage 2, the following decisions have to be made: i) Retrieval of the lexical entry of a German verb and its associated case frame corresponding to the IKBS. ii) Selection of lexical entries for the other semantic symbols. iii) Selection of a realization schema (RS), mapping of IKBS roles to RS functional roles, and inferring syntactic features. In i) a simple retrieval may not suffice. In order to choose the most adequate German verb, it will e.g. be necessary to check the fillers of an IKBS. For example, the semantic symbol REALISE may translate to &amp;quot;realisieren&amp;quot;, &amp;quot;implementieren&amp;quot; etc.. If the Instrument role of REALISE were filled with an instance of the PROGRAM concept, we would choose the more adequate word sense &amp;quot;implementieren&amp;quot;. In ii) sometimes similar problems arise. For example, the semantic symbol ACCIDENT may translate to the German equivalent of &amp;quot;accident&amp;quot;, &amp;quot;error&amp;quot;, &amp;quot;failure&amp;quot; or &amp;quot;bug&amp;quot;. The actual choice depends here on the filler of ACCIDENT&apos;s semantic role for &amp;quot;where it occurred&amp;quot;. The of a schema describes different possibilities how an instance may be realized and specifies the conditions for selection. (This idea is due to McDonald (1983) and his MUMBLE system). The factors determining the choice include: (a) Which roles are filled? (b) What are their respective fillers? (c) Which type of text are we going to generate? For example if the Agent-role of a case frame is unfilled, we may choose either passivation or selection of a German verb which maps the semantic object into the syntactic subject. If neither agent nor object are filled, nominalization is forced. A realization schema (RS) is a structure which identifies a syntactic category (e.g. CLAUSE, NP) and describes its functional roles (e.g. HEAD, MODIFIER, ...). We employ Winograd&apos;s terminology for functional grammar (Winograd, 1983). In general, case schemata will be mapped into CLAUSE-RS and concept schemata are mapped into NP-RS. A CLAUSE-RS has a features description and slots for verb, subject, direct object, and indirect objects. A features description may include information about voice, modality, idiomatic realization, etc.. There are realization schemata for discourse as well as titles. The latter are special cases of the former, forcing nominalized constructions. REFERENCING AND FOCUSSING For referencing and other phenomena like focussing, the simple approach of only allowing a schema instance as a filler is not sufficient. We therefore included in our 492 knowledge representation a way to have descriptors as fillers. Such descriptors are references to parts of a schema. In the following example the filler of USE&apos;s Objectslot is a reference descriptor to SYNTHESIZE&apos;s Object-slot: X = (a USE with (Object (the Object from (a SYNTHESIZE with (Object (FUNCTION)) (Method [DYNAM/C-PROGRAMMING]))) (Purpose (an ACCESS with (Object [DATA-BASE))))) X could be realized as: &amp;quot;Using functions, that are synthesized by dynamic programming for data-base access.&amp;quot; In general, descriptors have the form: (the &lt;path&gt; from &lt;IRBS&gt;) &lt;path&gt; = &lt;slot&gt;... A description can be realized by a relative clause. The same technique of referring to a substructure may as well be used for focussing. For example, embedding X into (the Purpose from X) expresses that the focus is on X&apos;s Purpose slot, which would yield the realization: â€¢ &amp;quot;Database access using functions that are synthesized by dynamic programming.&amp;quot; A WALK WITH SEMSYN us look the first sentence from an Figure 2 contains the input and the semantic net corresponding to ATLAS/II&apos;s analysis. stage first examine those semantic symbols which have an attached case schema and instantiate them according to their transformation rules. In this example the WANT and ACHIEVE nodes (flagged by a PRED arc) are case schemata. Applying their tranformation rules results in the following IKBS: (a WANT with (Object (an ACHIEVE with (Agent [SPEAKER)) (Object [PURPOSE (Number (PLURAL1)1) (Method [UTTERANCE (Number [SINGLE)))))) In stage 2, we will derive a description of how this structure will be realized as German text. consider the WANT act. There &amp; ti ct :5 L tZ Japanese input for FUJITSUs ATLAS/II-system Topofobject SEMSYNs interface to ATLAS/II ((UTTERANCE --NUMBER-, ONE) (PURPOSE --NUMBER-, PLURAL) (WANT --OW-, ACHIEVE) (WANT --PRED-&gt; *NIL) (*NIL --ST-, WANT) (ACHIEVE --OBJ-&gt; PURPOSE) (ACHIEVE --PRED-&gt; *NIL) (ACHIEVE --METHOD-) UTTERANCE) (ACHIEVE --AGENT-&gt; SPEAKER)) object RUN-K-101 4:&gt; 121/3CZMO METHOD PURPOSE ONE SEMANTIC NET Top of object GERMAN EQUIVALENT TO JAPANESE INPUT ES WIRD GEWUENSCHT DASS EIN SPRECHER MEHRERE ZWECKE MIT LINER EINZELNEN AEUSSERUNG ERREICHT Figure 2. From Japanese to German is no Agent, so we choose to build a clause in voice. Next, we observe WANT&apos;s object is itself an act with several filled roles and could be realized as a clause. One the WANT fits this situation. Its condition is that there is no Agent and Object will be realized as a clause. schema is idiomatic phrase named *Es-Part*: erwuenscht, dass &lt;CLAUSE&gt;&amp;quot; wanted that &lt;CLAUSE&gt;&amp;quot;) Now consider the embedded &lt;CLAUSE&gt;. An ACHIEVE act can be realized in German as a clause by the following realization schema: 493 (a CLAUSE with (Subject &lt;NP-realization of Agent-role&gt; (Verb &amp;quot;erreich_&amp;quot; (DirObj &lt;NP-realization of Object-role&gt; (IndObjs (a PP with (Prep (One-of [&amp;quot;durch&amp;quot; &amp;quot;mit&amp;quot; &amp;quot;mittels&amp;quot;])) (PObj &lt;NP-realization of Method-role&gt;)))) This schema is not particular to ACHIEVE. It is shared by other verbs and will therefore be found via general choices which ACHIEVE inherits. The Agent of ACHIEVE&apos;s IKBS maps to the Subject and the Method is realized as an indirect object. Within the scope of the chosen German verb &amp;quot;erreichen&amp;quot; (for &amp;quot;achieve&amp;quot;), a Method role maps into a PP with one of the prepositions &amp;quot;durch&amp;quot;, &amp;quot;mit&amp;quot;, &amp;quot;mittels&amp;quot; (corresponding to &amp;quot;by means of&amp;quot;). This leads to the following IRS: IPG&apos;s input is a conceptual structure. Parts of it are fully realized before others are considered. The motivation for IPG&apos;s incremental control structure is psychological. In contrast, the derivation of our IRS and its subsequent rendering is not committed to such a control structure. Nevertheless, the procedural grammar of IPG could be used to produce surface strings from IKBS by providing it with additional syntactic features (which are contained in IRS). Both MUMBLE and IPG are conceptually oriented and incremental. MUMBLE&apos;s input is on the level of our IKBS. MUMBLE produces functional descriptions of sentences &amp;quot;on the fly&amp;quot;. These descriptions are contained in a constituent structure tree, which is traversed to produce surface text. Our approach is to make the functional description explicit. ACKNOWLEDGEMENTS (a CLAUSE with (Features (Voice Passive Idiom *Es-Part*) (Verb Nuensch2) ;want (DirObj (a CLAUSE with (Subject (a NP with (Head &amp;quot;Sprecher&amp;quot;)));speaker (Verb &amp;quot;erreich2) (DirObj (a NP with (Features (Numerus= Plural)) (Head [&amp;quot;Ziel&amp;quot;, &amp;quot;Zweck&amp;quot;]) ; purpose (Adj &amp;quot;mehrere&amp;quot;)) ; multiple (IndObjs ((a PP with (Prep (&amp;quot;durch&amp;quot;, &amp;quot;mit&amp;quot;, &amp;quot;mittels&amp;quot;1) (PObj (a NP with (Features (Numerus Singular)) (Head &amp;quot;Aeusserung&amp;quot;) ;utterance (Adj &amp;quot;einzeln&amp;quot;) ; single ))))) Such an instantiated realization schema (IRS) will be the input of the generation front end that takes care of a syntactically and morphologically correct German surface structure (see Fig. 2). EXPERIMENTS WITH OTHER GENERATION MODULES We recently studied three generation modules (running in Lisp on our SYMBOLICS 3600) with the objective to find out, whether they could serve as a generation front end for SEMSYN: SUTRA (Busemann, 1983), the German version of IPG (Kempen &amp; Hoenkamp, 1982), and MUMBLE (McDonald, 1983). a functional grammar description. The input of SUTRA, the &amp;quot;preterminal structure&amp;quot;, already makes assumptions about word order within the noun group. To use SUTRA, additional transformation rules would to We have to thank many colleagues in the generation field that helped SEMSYN with their experience. We are especially thankful to Dave McDonald (Amherst), and Eduard Hoenkamp (Nijmegen) whose support personally and through their software is still going on. We also thank the members of the ATLAS/II research group (Fujitsu Laboratories) for their support. REFERENCES Uchida,H. &amp; Sugiyama: A machine translation system from Japanese into English based on</abstract>
<note confidence="0.771096">conceptual structure, Proc. of COLING-80, Tokyo, 1980, pp.455-462 Winograd, T.: Language as a cognitive process, Addison-Wesley, 1983</note>
<intro confidence="0.589955">McDonald, D.D.: Natural language generation as</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>H Uchida</author>
</authors>
<title>Sugiyama: A machine translation system from Japanese into English based on conceptual structure,</title>
<date>1980</date>
<booktitle>Proc. of COLING-80,</booktitle>
<pages>455--462</pages>
<location>Tokyo,</location>
<marker>Uchida, 1980</marker>
<rawString>Uchida,H. &amp; Sugiyama: A machine translation system from Japanese into English based on conceptual structure, Proc. of COLING-80, Tokyo, 1980, pp.455-462</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Winograd</author>
</authors>
<title>Language as a cognitive process, Addison-Wesley,</title>
<date>1983</date>
<contexts>
<context position="6452" citStr="Winograd, 1983" startWordPosition="959" endWordPosition="960">the choice include: (a) Which roles are filled? (b) What are their respective fillers? (c) Which type of text are we going to generate? For example if the Agent-role of a case frame is unfilled, we may choose either passivation or selection of a German verb which maps the semantic object into the syntactic subject. If neither agent nor object are filled, nominalization is forced. A realization schema (RS) is a structure which identifies a syntactic category (e.g. CLAUSE, NP) and describes its functional roles (e.g. HEAD, MODIFIER, ...). We employ Winograd&apos;s terminology for functional grammar (Winograd, 1983). In general, case schemata will be mapped into CLAUSE-RS and concept schemata are mapped into NP-RS. A CLAUSE-RS has a features description and slots for verb, subject, direct object, and indirect objects. A features description may include information about voice, modality, idiomatic realization, etc.. There are realization schemata for discourse as well as titles. The latter are special cases of the former, forcing nominalized constructions. REFERENCING AND FOCUSSING For referencing and other phenomena like focussing, the simple approach of only allowing a schema instance as a filler is not</context>
</contexts>
<marker>Winograd, 1983</marker>
<rawString>Winograd, T.: Language as a cognitive process, Addison-Wesley, 1983</rawString>
</citation>
<citation valid="true">
<authors>
<author>D D McDonald</author>
</authors>
<title>Natural language generation as a computational problem: An Introduction; in: Brady &amp; Berwick (Eds.) Computational model of discourse, MIT-Press,</title>
<date>1983</date>
<pages>209--265</pages>
<contexts>
<context position="5788" citStr="McDonald (1983)" startWordPosition="854" endWordPosition="855">lementieren&amp;quot; etc.. If the Instrument role of REALISE were filled with an instance of the PROGRAM concept, we would choose the more adequate word sense &amp;quot;implementieren&amp;quot;. In ii) sometimes similar problems arise. For example, the semantic symbol ACCIDENT may translate to the German equivalent of &amp;quot;accident&amp;quot;, &amp;quot;error&amp;quot;, &amp;quot;failure&amp;quot; or &amp;quot;bug&amp;quot;. The actual choice depends here on the filler of ACCIDENT&apos;s semantic role for &amp;quot;where it occurred&amp;quot;. iii) The choices aspect of a schema describes different possibilities how an instance may be realized and specifies the conditions for selection. (This idea is due to McDonald (1983) and his MUMBLE system). The factors determining the choice include: (a) Which roles are filled? (b) What are their respective fillers? (c) Which type of text are we going to generate? For example if the Agent-role of a case frame is unfilled, we may choose either passivation or selection of a German verb which maps the semantic object into the syntactic subject. If neither agent nor object are filled, nominalization is forced. A realization schema (RS) is a structure which identifies a syntactic category (e.g. CLAUSE, NP) and describes its functional roles (e.g. HEAD, MODIFIER, ...). We emplo</context>
<context position="12461" citStr="McDonald, 1983" startWordPosition="1888" endWordPosition="1889">th (Features (Numerus Singular)) (Head &amp;quot;Aeusserung&amp;quot;) ;utterance (Adj &amp;quot;einzeln&amp;quot;) ; single ))))) Such an instantiated realization schema (IRS) will be the input of the generation front end that takes care of a syntactically and morphologically correct German surface structure (see Fig. 2). EXPERIMENTS WITH OTHER GENERATION MODULES We recently studied three generation modules (running in Lisp on our SYMBOLICS 3600) with the objective to find out, whether they could serve as a generation front end for SEMSYN: SUTRA (Busemann, 1983), the German version of IPG (Kempen &amp; Hoenkamp, 1982), and MUMBLE (McDonald, 1983). Our IRS is a functional grammar description. The input of SUTRA, the &amp;quot;preterminal structure&amp;quot;, already makes assumptions about word order within the noun group. To use SUTRA, additional transformation rules would have to be written. We have to thank many colleagues in the generation field that helped SEMSYN with their experience. We are especially thankful to Dave McDonald (Amherst), and Eduard Hoenkamp (Nijmegen) whose support - personally and through their software - is still going on. We also thank the members of the ATLAS/II research group (Fujitsu Laboratories) for their support. REFEREN</context>
</contexts>
<marker>McDonald, 1983</marker>
<rawString>McDonald, D.D.: Natural language generation as a computational problem: An Introduction; in: Brady &amp; Berwick (Eds.) Computational model of discourse, MIT-Press, 1983, pp.209-265</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Kempen</author>
</authors>
<title>Hoenkamp,E.: Incremental sentence generation: Implication for the structure of a syntactic processor; in</title>
<date>1982</date>
<booktitle>Proc. COLING-82,</booktitle>
<pages>151--156</pages>
<location>Prague,</location>
<marker>Kempen, 1982</marker>
<rawString>Kempen, G. &amp; Hoenkamp,E.: Incremental sentence generation: Implication for the structure of a syntactic processor; in Proc. COLING-82, Prague, 1982, pp.151-156</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Busemann</author>
</authors>
<title>Oberflaechentransformationen bei der Generierung geschriebener deutscher Sprache; in:</title>
<date>1983</date>
<journal>Neumann, B. (Ed.)</journal>
<volume>83</volume>
<pages>90--99</pages>
<publisher>Springer,</publisher>
<contexts>
<context position="12379" citStr="Busemann, 1983" startWordPosition="1875" endWordPosition="1876"> ; multiple (IndObjs ((a PP with (Prep (&amp;quot;durch&amp;quot;, &amp;quot;mit&amp;quot;, &amp;quot;mittels&amp;quot;1) (PObj (a NP with (Features (Numerus Singular)) (Head &amp;quot;Aeusserung&amp;quot;) ;utterance (Adj &amp;quot;einzeln&amp;quot;) ; single ))))) Such an instantiated realization schema (IRS) will be the input of the generation front end that takes care of a syntactically and morphologically correct German surface structure (see Fig. 2). EXPERIMENTS WITH OTHER GENERATION MODULES We recently studied three generation modules (running in Lisp on our SYMBOLICS 3600) with the objective to find out, whether they could serve as a generation front end for SEMSYN: SUTRA (Busemann, 1983), the German version of IPG (Kempen &amp; Hoenkamp, 1982), and MUMBLE (McDonald, 1983). Our IRS is a functional grammar description. The input of SUTRA, the &amp;quot;preterminal structure&amp;quot;, already makes assumptions about word order within the noun group. To use SUTRA, additional transformation rules would have to be written. We have to thank many colleagues in the generation field that helped SEMSYN with their experience. We are especially thankful to Dave McDonald (Amherst), and Eduard Hoenkamp (Nijmegen) whose support - personally and through their software - is still going on. We also thank the member</context>
</contexts>
<marker>Busemann, 1983</marker>
<rawString>Busemann,B.: Oberflaechentransformationen bei der Generierung geschriebener deutscher Sprache; in: Neumann, B. (Ed.) GWAI-83, Springer, 1983, pp.90-99</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>