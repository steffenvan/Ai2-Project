<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001240">
<title confidence="0.965066">
THE LEXICAL SEMANTICS OF COMPARATIVE
EXPRESSIONS IN A MULTI-LEVEL SEMANTIC
PROCESSOR
</title>
<author confidence="0.916132">
Duane E. Olawsky
</author>
<affiliation confidence="0.912534">
Computer Science Dept.
University of Minnesota
</affiliation>
<address confidence="0.539617">
4-192 EE/CSci Building
200 Union Street SE
</address>
<sectionHeader confidence="0.864800333333333" genericHeader="abstract">
Minneapolis, MN 55455
[olawsky@umn-cs.cs.umn edu]
ABSTRACT
</sectionHeader>
<bodyText confidence="0.9998284375">
Comparative expressions (CEs) such as &amp;quot;big-
ger than&amp;quot; and &amp;quot;more oranges than&amp;quot; are highly
ambiguous, and their meaning is context depen-
dent. Thus, they pose problems for the semantic
interpretation algorithms typically used in nat-
ural language database interfaces. We focus on
the comparison attribute ambiguities that occur
with CEs. To resolve these ambiguities our nat-
ural language interface interacts with the user,
finding out which of the possible interpretations
was intended. Our multi-level semantic processor
facilitates this interaction by recognizing the oc-
currence of comparison attribute ambiguity and
then calculating and presenting a list of candi-
date comparison attributes from which the user
may choose.
</bodyText>
<sectionHeader confidence="0.994483" genericHeader="method">
1 PROBLEM DESCRIPTION.
</sectionHeader>
<bodyText confidence="0.999885">
Although there has been considerable work on the
development of natural language database inter-
faces, many difficult language interpretation prob-
lems remain. One of these is the semantic inter-
pretation of comparative expressions such as those
shown in sentences (1) through (3).
</bodyText>
<listItem confidence="0.9804825">
(1) Does ACME construct better buildings than
ACE?
(2) Does ACME construct buildings faster than
ACE?
(3) Are more oranges than apples exported by
Mexico?
</listItem>
<bodyText confidence="0.999824342857143">
To interpret a comparative expression (CE) a
natural language processor must determine (1)
the entities to be compared, and (2) the at-
tribute(s) of those entities to consider in per-
forming the comparison. The selection of com-
parison attributes is made difficult by the high
level of lexical ambiguity exhibited by compara-
tive predicates. For example, what pieces of data
should be compared to answer query (1)? If the
database contains information about foundation
type, structural characteristics, wiring, and in-
sulation, any of these attributes could be used.
Similarly, when comparing orange and apple ex-
ports as in query (3), we might compare numeric
quantity, weight, volume, or monetary value. To
further complicate matters, the plausible compar-
ison attributes for a comparative predicate change
with the arguments to which that predicate is ap-
plied. Table 1 shows several examples of likely
comparison attributes to use with the predicate
&amp;quot;bigger&amp;quot; depending on the types of entity that
are being compared. Since the system must de-
termine for a comparative predicate the lexical
definition intended by the user, this problem is,
at heart, one of lexical ambiguity resolution.
The problems discussed so far are similar to the
well known vagueness and context sensitivity of
adjectives (although they occur here even in sen-
tences without adjectives such as (3)). Any pro-
posed method of CE interpretation should also
treat several other phenomena that are unique
to comparatives. These are bipredicational com-
parisons, cross-class comparisons, and pairability
constraints. Bipredicational comparisons in-
volve two predicates, as shown in example (4) (the
</bodyText>
<page confidence="0.999034">
169
</page>
<tableCaption confidence="0.9637075">
Table 1: Examples of argument sensitivity in the
meaning of &amp;quot;bigger&amp;quot;.
</tableCaption>
<figureCaption confidence="0.806442071428571">
Argument type Possible Comparison attributes
hotels number of rooms
hospitals number of beds
houses square feet
- number of rooms, or
number of bedrooms
wheat farms number of acres
dairy farms number of cows
countries number of people,
or land area
cars length,
curb weight,
passenger space, or
passenger limit
</figureCaption>
<bodyText confidence="0.980903">
predicates are in boldface), and they use a differ-
ent comparison attribute for each argument of the
comparative.
</bodyText>
<listItem confidence="0.543461">
(4) John&apos;s car is wider than Mary&apos;s car is long.
</listItem>
<bodyText confidence="0.949613058823529">
Bipredicational CEs have strong pairability
constraints (Hale 1970). That is, there are re-
strictions on the pairing of predicates in a bipred-
icational CE. Example (5) gives a sentence
that is semantically anomalous because it violates
pairability constraints.
(5) ? Bob&apos;s car is wider than it is heavy.
A cross-class comparison involves arguments of
radically different types as shown in (6).
(6) Is the Metrodome bigger than Ronald
Reagan?1
Interpreting this comparison requires that we find
a stadium attribute and a person attribute which
are in some sense comparable (e.g. stadium-height
and person-height). Pairability constraints also
apply indirectly to cross-class comparisons as can
be seen in the oddness of (7).
</bodyText>
<footnote confidence="0.979145444444445">
1 Although this is an unusual comparison to request, it is
perfectly understandable, and the literal interpretation is
easily answered. As pointed out to me by Karen Ryan, sen-
tence (6) has several possible metaphoric interpretations
(e.g. &amp;quot;Does the Metrodome get more news coverage than
Ronald Reagan?&amp;quot;). In this paper we will generally ignore
metaphoric interpretations. However, using the approach
we describe below, they could be handled in much the same
way as the more literal ones.
</footnote>
<listItem confidence="0.534259">
(7) ? The party was longer than my car.2
</listItem>
<bodyText confidence="0.999972923076923">
Although we have only one predicate (&amp;quot;longer&amp;quot;) in
this sentence, it is difficult to find a comparable
pair of attributes. The attribute describing the
length of a party is not comparable to any of the
attributes describing the length of a car.
When faced with ambiguous input a natural
language interface has two options. In the first
one, it guesses at what the user wants and pro-
vides the answer corresponding to that guess. In
the second, it interacts with the user to obtain a
more completely specified query. Although Op-
tion 1 is easier to implement, it is also inflexible
and can lead to miscommunication between the
user and the interface. With Option 2, the system
lets the user select the desired interpretation, re-
suiting in greater flexibility and less chance of mis-
understanding. It is the second option that we are
exploring. To carry out Option 2 for CE interpre-
tation the system must present to the user a list of
the permissible comparison attribute pairs for the
given CE. In Section 3 we will see how pairabil-
ity constraints can be used to delimit these pairs.
Comparatives add significant expressive power to
an interface (Ballard 1988), and it is therefore im-
portant that reliable techniques be developed to
resolve the lexical ambiguities that occur in CEs.
</bodyText>
<sectionHeader confidence="0.979337" genericHeader="method">
2 PRIOR WORK.
</sectionHeader>
<bodyText confidence="0.998214777777778">
For purposes of discussion we will divide compara-
tive expressions into the following commonly used
classes: adjectival, adverbial, and adnominal,
where the comparative element is based on an ad-
jective, an adverb, or a noun, respectively. See
(1)â€”(3) for an example of each type. Within
linguistics, adjectival comparatives are the most
studied of these three varieties. (See (Rusiecld
1985) for a detailed description of the various
types of adjectival comparative.) For work on
the syntax of CEs see (Bresnan 1973), (Pinkham
1985) and (Ryan 1983). Klein (1980), (1982)
presents a formal semantics for adjectival CEs
without using degrees or extents. It would be diffi-
cult to apply his work computationally since there
is no easy way to determine the positive and neg-
ative extensions of adjectives upon which his the-
ory rests. Hoeksema (1983) defines a set-theoretic
</bodyText>
<footnote confidence="0.9738725">
2lientence (7) can perhaps be interpreted metaphori-
cally (perhaps with humorous intent), but it seems more
difficult to do so than it does with (6). It is certainly hard
to imagine what truth conditions (7) might have!
</footnote>
<page confidence="0.99682">
170
</page>
<bodyText confidence="0.999954">
semantics for adjectival comparatives based on
primitive grading relations that order the domain
with respect to gradable adjectives. His primary
concern is the relationship of comparatives to co-
ordination and quantification, and he pays little
attention to lexical ambiguities. Cresswell&apos;s work
(Cresswell 1976) handles both adjectivals and ad-
norninals and is closer in spirit to our own (see
Section 3.1). It contains analogs of our Codomain
Agreement Principle, mappings and base orders.
The main difference is that whereas Cresswell al-
ways uses degrees, we also allow base orders to be
defined directly on the domain entities.
Most of the work done on lexical ambiguity
resolution (e.g. (Hirst 1984) and (Wilks 1975))
has focussed on homonymy (when words have a
small number of unrelated meanings) rather than
polysemy (when words have many closely related
meanings) as occurs with CEs. The techniques
developed for homonymy depend on large seman-
tic differences between meanings and thus are not
as useful for CEs.
Although comparatives are frequently used as
examples in the NLP literature (e.g. (Hendrix,
Sacerdoti, Sagalowicz, and Slocum 1978), (Mar-
tin, Appelt, and Pereira 1983) and (Pereira
1983)), no one has presented a detailed treatment
of the ambiguities in the selection of comparison
attributes. Most NLP researchers provide neither
a detailed explanation of how they treat compar-
atives nor any characterization of the breadth of
their treatment. Two exceptions are the recent
papers of Ballard (1988) and Rayner and Banks
(1988). The former treats adjectival and adnomi-
nal comparatives, and is primarily concerned with
the interpretation of expressions like &amp;quot;at least 20
inches more than twice as long as&amp;quot;. The selection
of comparison attributes is not discussed in any
detail. Rayner and Banks (1988) describe a logic
programming approach to obtaining a parse and
an initial logical formula for sentences containing
a fairly broad range of CEs. They do not dis-
cuss lexical semantics and thus do not deal with
comparison attribute selection.
This paper is an abbreviated version of a longer
paper (Olawsky 1989), to which the reader is re-
ferred for a more detailed presentation.
</bodyText>
<sectionHeader confidence="0.997824" genericHeader="method">
3 SOLUTION APPROACH.
</sectionHeader>
<bodyText confidence="0.999864818181818">
In this section we describe a rule-based semantic
processor that follows Option 2. To provide for
user-controlled comparison attribute selection we
augment the common lexical translation process
(e.g. (Bronnenberg, Bunt, Landsbergen, Scha,
Schoenmakers, and van Utteren 1980) and (Ryan,
Root, and Olawsky 1988)) with a Mapping Selec-
tor that communicates with the user and returns
the results to the rule-based translator. The im-
plementation of the approach described here is in
progress and is proceeding well.
</bodyText>
<subsectionHeader confidence="0.9537385">
3.1 Semantic Description of Com-
paratives.
</subsectionHeader>
<bodyText confidence="0.9999366">
We base our approach on the semantic interpreta-
tion of a comparative predicate as a set-theoretic
relation. A comparison defined by the relation R
is true if the denotations of the first and second
arguments of the comparative predicate (i.e. its
subject and object3) form an element pair of /Z.
It is tempting to claim that comparatives should
be defined by orders rather than relations (we call
this the Comparison Order Claim). However,
it can be shown (Olawsky 1989) that the compar-
ison relation Lâ€ž for a bipredicational comparative
like longer than . . . wide is neither asymmetric nor
antisymmetric4, and hence, Lâ€ž is not an order.5
Comparison relations are not defined directly in
our semantic description. Instead they are speci-
fied in terms of three components: a base order,
a subject mapping, and an object mapping.
The base order is a set-theoretic order on some do-
main (e.g. the obvious order on physical lengths).
The subject mapping is a mapping from the do-
main of the denotation of the subject of the CE
to the domain of the base order (e.g. the map-
ping from a rectangle to its length). The object
mapping is defined analogously. Let comparison
relation R be defined by the base order B, and the
subject and object mappings M, and Mo. Then
(a, b) E /Z if and only if (M5(a), Mo(b)) E B. It
should be noted here that comparison attribute
selection is now recast as the selection of subject
and object mappings.
</bodyText>
<footnote confidence="0.583119">
3Our reasons for calling the first and second arguments
of a CE the subject and object are syntactic and beyond
the scope of this paper (see (Ryan 1983)).
41t is also easy to show that L. is nontransitive.
3Klein ((1980), p. 23) and Hoeksetna ((1983), pp. 410-
411) both make claims similar (but not identical) to the
Comparison Order Claim. It seems to us that bipred-
icationals pose a problem for Hoeksema&apos;s analysis (see
(Olawsky 1989)). Klein appears to relax his assumptions
slightly when he deals with them. Cresswell (1976) dearly
avoids the Comparison Order Claim.
</footnote>
<page confidence="0.994383">
171
</page>
<bodyText confidence="0.999989468085107">
By definition, the subject and object mappings
must have the same codomain, and this codomain
must be the domain of the base order. We call this
the Codomain Agreement Principle, and it is
through this principle that pairability constraints
are enforced. For example, when interpreting the
CE in sentence (5), we must find a subject map-
ping for the width of Bob&apos;s car and an object map-
ping for its weight, and these mappings must have
the same codomain. However, this is impossible
since all width mappings will have LENGTH as
a codomain, and all weight mappings will have
WEIGHT as a codomain. The Codomain Agree-
ment Principle also helps explain the interpreta-
tion of sentences (6) and (7).
Before concluding this section we consider the
semantic description of CEs in TEAM ((Grosz,
Haas, Hendrix, Hobbs, Martin, Moore, Robinson,
and Ftosenschein 1982) and (Martin, Appelt, and
Pereira 1983)), comparing it to ours. Since com-
parative expressions were not the main focus in
these papers, we must piece together TEAM&apos;s
treatment of CEs from the examples that are
given. In (Grosz, Haas, Hendrix, Hobbs, Mar-
tin, Moore, Robinson, and Rosenschein 1982), the
CE &amp;quot;children older than 15 years&amp;quot; is translated
to ((*MORE* OLD) child2 (YEAR 15)) where
&amp;quot;MORE* maps a predicate into a comparative
along the scale corresponding to the predicate&amp;quot; (p.
11). This implies that TEAM requires the same
mapping to be used for both the subject and ob-
ject of the comparative. That would not work well
for bipredicational CEs, and could also lead to
problems for cross-class comparisons. In (Martin,
Appelt, and Pereira 1983) the examples contain
predicates (e.g. salary-of and earn) which, on the
surface, are similar to mappings. However, in con-
trast to our approach, it does not appear that any
special significance is given to these predicates.
There is nothing in either paper to indicate that
the many types of CEs are consistently translated
to a base order, subject mapping and object map-
ping as is done in our system. Furthermore, there
is nothing analogous to the Codomain Agreement
Principle discussed in either paper. Now, we move
on to a presentation of how the semantic descrip-
tion presented above is applied in our system.
</bodyText>
<subsectionHeader confidence="0.997632">
3.2 General Comments.
</subsectionHeader>
<bodyText confidence="0.999925053571428">
We use a multi-level semantic processor (see
(Bates and Bobrow 1983), (Bronnenberg, Bunt,
Landsbergen, Scha, Schoenmakers, and van Ut-
teren 1980), (Grosz, Haas, Hendrix, Hobbs, Mar-
tin, Moore, Robinson, and Rosenschein 1982),
(Martin, Appelt, and Pereira 1983) and (Ryan,
Root, and Olawsky 1988) for descriptions of simi-
lar systems). At each level queries are represented
by logic-based formulas (see (Olawsky 1989) for
examples) with generalized quantifiers ((Barwise
and Cooper 1981), (Moore 1981) and (Pereira
1983)) using predicates defined for that level. The
initial level is based on often ambiguous English-
oriented predicates. At the other end is a de-
scription of the query in unambiguous database-
oriented terms (i.e. the relation and attribute
names used in the database). Between these lev-
els we have a domain model level where formulas
represent the query in terms of the basic entities,
attributes and relationships of the subject domain
described in a domain model. These basic con-
cepts are treated as unambiguous. Linking these
levels are a series of translators, each of which is
responsible for handling a particular semantic in-
terpretation task.
In this paper we restrict our attention to the
translation from the English-oriented level (EL)
to the domain Model level (DML) since this is
where CEs are disambiguated by choosing unam-
biguous mappings and base orders from the do-
main model. To perform its task the EL-DML
translator uses three sources of information. First,
it has access to the domain model, a frame-based
representation of the subject domain. Second, it
uses the semantic lexicon which tells how to map
each EL predicate into a DML formula. Finally,
this translator will, when necessary, invoke the
Mapping Selectorâ€”a program that uses the se-
mantic lexicon and the domain model to guide
the user in the selection of a comparison attribute
pair.
Forour semantic formulas we extend the usual
ontology of the predicate calculus with three new
classes: sets, mass aggregations, and bunches.
Sets are required for count noun adnominal com-
paratives (e.g. &amp;quot;Has ACME built more ware-
houses than ACE?&amp;quot;) where we compare set cardi-
nalities rather than entity attribute values. Given
a class of mass entities (e.g. oil), a mass aggre-
gation is the new instance of that class result-
ing from the combination of zero or more old in-
stances. For example, if John combines the oil
from three cans into a large vat, the oil in that
vat is an aggregation of the oil in the cans. It is
not necessary that the original instances be phys-
ically combined; it is sufficient merely to consider
</bodyText>
<page confidence="0.710732">
17 2
</page>
<bodyText confidence="0.999813882352941">
them together conceptually. Mass aggregations
are needed for mass noun adnominal compara-
tives. Finally, we define the term bunch to refer
ambiguously both to sets and to mass aggrega-
tions. Bunches are used in EL where mass aggre-
gations and sets are not yet distinguished. Sets,
mass aggregations and bunches are described in
semantic formulas by the *SET-OF*, *MASS..
OF*, and *BUNCH-OF* relations, respectively.
These relations are unusual in that their second
arguments are unary predicates serving as char-
acteristic functions defining the components of
the first argumentâ€”a set, aggregation or bunch.
For example, (*MASS-OF* m (Awl&amp;quot;(wheat w)p) is
true in case m is the aggregation of all mass enti-
ties e such that Aw[(wheat w)] (e) is true (i.e. e is
wheat).
</bodyText>
<subsectionHeader confidence="0.999947">
3.3 Base Orders and Mappings.
</subsectionHeader>
<bodyText confidence="0.99944">
EL and DML formulas contain, for each CE, a
base order and two mappings. Two sample EL
base orders are more and less. DML base orders
are typically defined on domains such as VOL-
UME, and INTEGER, but they can also be de-
fined on domains that are not usually numeri-
cally quantified such as BUILDING-QUALITY,
or CLEVERNESS. More and less are ambiguous
between the more specific DML orders.
Most EL mappings p correspond one-for-one
with an English adjective (or adverb). They are
binary relations where the first argument is an
entity e from the domain and the second is the
degree of p-ness that e possesses. For example,
if big&apos; is an EL mapping, then in (big&apos; e b), b is
the degree of bigness for e. Of course, big&apos; is am-
biguous. In contrast to adjectival and adverbial
CEs, all adnominals use the ambiguous EL map-
ping *MUCH-MANY* which pairs a bunch with
its size.
In most cases, a DML mapping is a relation
whose first argument is an entity from some class
in the core of the domain model and whose second
argument is from the domain of a base order. In
the mapping predication (DM_w-storage-volume
w v) the first argument is a warehouse, and the
second is a volume. DM_w-storage-volume could
serve as the translation of big&apos; when applied to a
warehouse. CEs based on count nouns generally
use the *CARDINALITY* mapping which is like
other mappings except that its first argument is
a set of entities from a domain model class rather
than a member of the class. The second argument
is always an integer. Mass noun comparatives re-
quire a slightly different approach. Since we are
dealing with a mass aggregation rather than a set,
the *CARDINALITY* mapping is inapplicable.
To measure the size of an aggregation we com-
bine, according to some function, the attribute
values (e.g. weight or volume) of the components
of the aggregation.6 Thus, the mappings used for
mass adnominal comparatives are based on the
attributes of the appropriate class of mass enti-
ties.
</bodyText>
<subsectionHeader confidence="0.926678">
3.4 EL-DML Translation Rules.
</subsectionHeader>
<bodyText confidence="0.999929733333333">
As stated above, EL and DML are linked by
a translator that uses rules defined in the se-
mantic lexicon (see (Olawsky 1989) for sample
rules). These rules constitute definitions of the
EL predicates in terms of DML formulas. Our
system employs three kinds of translation rulesâ€”
Trans, MTrans, and BTrans. Trans rules have
four components: a template to be matched
against an EL predication, an EL context spec-
ification, a DML context specification, and
the DML translation of the EL predication.7
The context specifications are used to resolve am-
biguities on the basis of other predications in
the EL formula and the (incomplete) DML for-
mula. A rule is applicable only if its context
specifications are satisfied. Although a predica-
tion in an EL context specification must unify
with some predication in the context, subsump-
tion relationships are used in matching DML
context specifications. Thus, the DML context
specification (DM_building b) will be satisfied by
(DM_warehouse 6) since DM_building subsumes
DM_tvarehouse. MTrans rules are intended for
the translation of subject and object mapping
predications from EL to DML. They have two ex-
tra components that indicate the base order and
the mapping to be used in DML. This additional
information is used to enforce the Codomain
Agreement Principle and to help in the user inter-
action described in Section 3.5. Finally, BTrans
</bodyText>
<tableCaption confidence="0.8526021">
6Although the aggregation function would likely be
SUM for attributes such as weight, volume, and value,
other functions are possible. For example, AVERAGE
might be used for a nutritional-quality attribute of an agri-
cultural commodity. The aggregation function is not ex-
plicitly reflected in our system until the database level
?Trans rules are nearly identical to the lexical trans-
lation rules used in the ATOZ system (Ryan, Root, and
Olawsky 1988). However, our rules do have some addi-
tional features, one of which will be discussed below.
</tableCaption>
<page confidence="0.998935">
173
</page>
<bodyText confidence="0.997270465753425">
rules are used to translate *BUNCH-OF* predi-
cations to DML.
One noteworthy feature of our translation rules
is that they can look inside a functional )-
argument to satisfy a context specification.8 We
call these A-context specifications, and they
may be used inside both EL and DML context
specifications for rules of all three types. How-
ever, it is only in BTrans rules that they can occur
as a top level specification. Top level )-context
specifications (e.g. (A b [(DM_building OD) are
matched to the functional argument of the rele-
vant *BUNCH-OF* predication. This match is
performed by treating the body of the )t-context
specification as a new, independent context spec-
ification which must be satisfied by predications
inside the body of the functional argument. In
Trans and MTrans rules, a A-context specifica-
tion can occur only as an argument of some
normal predicational context specification. For
example, the specification (*MASS-OF* b (Ac
[(DM_commodity c)])) can be used in any DML
context specification. It checks whether b is a
mass of some commodity. Just as standard con-
text specifications provide a way to examine the
properties of the arguments of a predication being
translated, A-context specifications provide a way
to determine the contents of a bunch by inspect-
ing the definition of its characteristic function.
Before continuing, we compare our context
matching mechanism to the similar one used
in the PHLIQA1 system (Bronnenberg, Bunt,
Landsbergen, Scha, Schoenmakers, and van Ut-
teren 1980). This system uses a typed seman-
tic language, and context checking is based en-
tirely on the type system. As a result, PHLIQA1
can duplicate the effect of context specifications
like (DM_building b) by requiring that b have
type DM_building. However, PHLIQA1 can-
not handle more complex specifications such as
((DM_building b) (DM_b-owner b ACME)) since
there is no semantic type in PHLIQA1 that would
correspond to this subset of the buildings in the
domain.8 The same comments apply to A-context
specifications which can be declared in PHLIQA1
9This is an extension to the rules used in ATOZ (Ryan,
Root, and Olawsky 1988) which do not allow functions as
arguments and therefore never need this kind of context
checking.
90ne could perhaps modify the PHLIQA1 world model
to contain such subclasses of buildings, but this would
eventually lead to a very complex model. It would also
be difficult or impossible to keep such a model hierarchical
in structure.
by specifying a functional semantic type. That
is, (Ab (DM_building 6)) is written as the type
DM_building â€”â–  truthvalue, a function from build-
ings to truth values. As with standard context
specifications, ()tb (DM_building b) (DM_b-owner
b ACME)) cannot be expressed as a type re-
striction. Thus, the context specifications used
in PHLIQA1 offer less discrimination power than
those used in our system.
There is one other difference regarding A-
context specifications that should be noted
here. The context specification (Ab (DM_building
b)) will be satisfied by the expression ()itv
(DM_warehouse w)). However, in PHLIQA1 the
type DM_building ---â–  truthvalue will not match
the type DM_warehouse truthvalue. From this,
we see that PHLIQA1 does not use subsumption
information in matching A-context specifications,
while our system does.
</bodyText>
<subsectionHeader confidence="0.9291435">
3.5 Translation and Mapping Se-
lection.
</subsectionHeader>
<bodyText confidence="0.999822517241379">
When translating an input sentence containing a
comparative expression from EL to DML, the sys-
tem first applies Trans and Btrans rules to trans-
late the predications that do not represent map-
pings or base orders. Next, comparison attributes
must be selected. The system recognizes compar-
ison attribute ambiguity when there is more than
one applicable MTrans rule for a particular EL
mapping predicate. We define a candidate map-
ping as any DML mapping that, on the basis of an
applicable MTrans rule, can serve as the transla-
tion of a mapping in an EL formula. Assume that
for an EL predication (big&apos; w a) in a given context
there are three applicable MTrans rules trans-
lating big&apos; to the three DML mappings DM_w-
storage-volume, DM_w-storage-area, and DM_b-
total-area, respectively. All three of these DML
mappings would then be candidates with either
VOLUME or AREA as the corresponding base
order.
The system examines the semantic lexicon to
determine a list of candidate mappings for each
EL mapping. A candidate is removed from one
of these lists if there is no compatible mapping in
the other list. Compatible mappings are those
that allow the Codomain Agreement Principle to
be satisfied, and they are easily identified by ex-
amining the base order component of the MTrans
rules being used. All of the remaining candidates
</bodyText>
<page confidence="0.996171">
174
</page>
<bodyText confidence="0.999958571428571">
in one of the lists are presented to the user who
may select a candidate mapping. Next, the se-
mantic processor presents to the user those can-
didates for the other EL mapping that are com-
patible with her first choice. She must select one
of these remaining candidates as the translation
for the second mapping. Based on her choices,
two MTrans rules (one for each EL mapping) are
applied, and in this way the EL mapping predica-
tions are translated to DML formulas. Once this
is completed, the processor can easily translate
the EL base order to the DML base order listed in
both of the MTrans rules it used (with any neces-
sary adjustments in the direction of comparison).
</bodyText>
<sectionHeader confidence="0.9994765" genericHeader="method">
4 COMMENTS AND CONCLU-
SIONS.
</sectionHeader>
<bodyText confidence="0.999933913043478">
We are currently examining some additional is-
sues. First, once candidate mappings are ob-
tained, how should they be explained to the user?
In the present design text is stored along with
the declaration of each mapping, and that text is
used to describe the mapping to the user. This ap-
proach is somewhat limited, especially for adnom-
inal comparatives given their flexibility and the
relatively small information content of the *CAR-
DINALITY* mapping. A more general technique
would use natural language generation to explain
the semantic import of each mapping as applied
to its arguments. Perhaps there are compromise
approaches between these two extremes (e.g. some
kind a pseudo-English explanations).
Second, it seems desirable that the system could
work automatically without asking the user which
mappings to use. Perhaps the system could
choose a mapping, do the query, present the re-
sults and then tell the user what interpretation
was assumed (and offer to try another interprets,
tion). This works well as long as either (a) the sys-
tem almost always selects the mapping intended
by the user, or (b) the cost of an incorrect choice
(i.e. the wasted query time) is small. If the sys-
tem frequently makes a poor choice and wastes
a lot of time, this approach could be quite an-
noying to a user. Crucial to the success of this
automatic approach is the ability to reliably pre-
dict the resources required to perform a query so
that the risk of guessing can be weighed against
the benefits. A similar issue was pointed out by
an anonymous reviewer. We noted in Section 1
that for sentence (3) (repeated here as (8))
(8) Are more oranges than apples exported by
Mexico?
the comparison could be based on quantity,
weight, volume, or value. If the answer is the
same regardless of the basis for comparison, a
&amp;quot;friendly&amp;quot; system would realize this and not re-
quire the user to choose comparison attributes.
Unfortunately, this realization is based on exten-
sional rather than intentional equivalence, and
hence, the system must perform all four (in this
case) queries and compare the answers. The extra
cost could be prohibitive. Again, the system must
predict query performance resource requirements
to know whether this approach is worthwhile for
a particular query. See (Olawsky 1989) for more
information on further work.
To summarize, we have examined a number of
issues associated with the semantic interpretation
of comparative expressions and have developed
techniques for representing the semantics of CEs
and for interacting with the user to resolve com-
parison attribute ambiguities. These techniques
will work for adjectival, adverbial, and adnomi-
nal comparatives and for both numerically and
non-numerically based comparisons (see (Olawsky
1989) for more on this). We are presently com-
pleting the implementation of our approach in
Common Lisp using the SunViewlÂ° window sys-
tem as a medium for user interaction. Most pre-
vious techniques for handling lexical ambiguity
work best with homonymy since they depend on
large semantic differences between the possible in-
terpretations of a lexical item. Our approach, on
the other hand, does not depend solely on these
semantic differences and handles polysemy well.
</bodyText>
<sectionHeader confidence="0.999606" genericHeader="conclusions">
5 ACKNOWLEDGEMENTS.
</sectionHeader>
<bodyText confidence="0.998893166666667">
I wish to thank the University of Minnesota Grad-
uate School for supporting this research through
the Doctoral Dissertation Fellowship program. I
also want to thank Maria Gini, Michael Kac,
Karen Ryan, Ron Zacharski, and John Carlis for
discussions and suggestions regarding this work.
</bodyText>
<sectionHeader confidence="0.998865" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.880231666666667">
Ballard, Bruce W. June 1988 A General Compu-
tational Treatment of Comparatives for Natural
Language Question Answering. In: 26th Annual
</reference>
<footnote confidence="0.905241">
10SunView is a trademark of Sun Microsystems, Inc.
</footnote>
<page confidence="0.995193">
175
</page>
<reference confidence="0.999617360824742">
Meeting of the Association for Computational Lin-
guistics. Buffalo, NY.
Barwise, Jon and Cooper, Robin. 1981 Generalized
Quantifiers and Natural Language. Linguistics
and Philosophy 4(2): 159-219.
Bates, Madeleine and Bobrow, Robert J. 1983 Infor-
mation Retrieval Using a Transportable Natural
Language Interface. In: Research and Develop-
ment in Information Retrieval: Proceedings of the
Sixth Annual International ACM SIGIR Confer-
ence, Bethesda, Md. New York: 81-86.
Bresnan, Joan W. 1973 Syntax of the Comparative
Clause Construction in English. Linguistic Inquiry
4(3): 275-343.
Bronnenberg, W. J. H. J.; Bunt, H. C.; Landsber-
gen, S. P. J.; Scha, R. J. H.; Schoenmakers, W. J.;
and van Utteren, E. P. C. 1980 The Question-
Answering System PHLIQA1. In: Bok, L., Ed.,
Natural Language Question Answering Systems.
Macmillan.
Cresswell, M. J. 1976 The Semantics of Degree. In:
Partee, Barbara, Ed., Montague Grammar. Aca-
demic Press: 261-292.
Grosz, Barbara; Haas, Norman; Hendrix, Gary;
Hobbs, Jerry; Martin, Paul; Moore, Robert;
Robinson, Jane; and Rosenschein, Stanley.
November 1982 DIALOGIC: A Core Natural-
Language Processing System. Tech. Note 270,
Artificial Intelligence Center, SRI International,
Menlo Park, California.
Hale, Austin. 1970 Conditions on English compara-
tive clause pairings. In: Jacobs, R. A. and Rosen-
baum, P., Eds., Readings in English Transforma-
tional Grammar. Ginn &amp; Co., Waltham, Mass.:
30-50.
Hendrix, Gary G.; Sacerdoti, Earl D.; Sagalowicz,
Daniel; and Slocum, Jonathan. 1978 Develop-
ing a Natural Language Interface to Complex
Data. ACM Transactions on Database Systems
3(2): 105-147.
Hirst, Graeme John. May 1984 Semantic Interpreta-
tion Against Ambiguity. PhD thesis, Computer
Science Dept., Brown University.
Hoeksema, Jack. 1983 Negative Polarity and the
Comparative. Natural Language and Linguistic
Theory 1: 403-434.
Klein, Ewan. 1980 A Semantics for Positive and Com-
parative Adjectives. Linguistics and Philosophy 4:
1-46.
Klein, Ewan. 1982 The Interpretation of Adjectival
Comparatives. Linguistics 18: 113-136.
Martin, Paul; Appelt, Douglas; and Pereira, Fer-
nando. 1983 Transportability and Generality in a
Natural-Language Interface System. In: Proceed-
ings of the Eighth International Joint Conference
on Artificial Intelligence, Karlsruhe, West Ger-
many. William Kaufmann, Inc., Los Altos: 573-
581.
Moore, Robert C. 1981 Problems in Logical Form.
In: Proceedings of the 19th Annual Meeting. As-
sociation for Computational Linguistics, Stanford,
California: 117-124.
Olawsky, Duane E. April 1989 The Lexical Seman-
tics of Comparative Expressions in a Muli-Level
Semantic Processor. Technical Report CSci TR
89-19, Computer Science Dept., University of Min-
nesota, Minneapolis, MN.
Pereira, Fernando. 1983 Logic for Natural Language
Analysis. Technical Note 275, Artificial Intelli-
gence Center, Computer Science and Technology
Division, SRI International, Menlo Park, Califor-
nia. Ph. D. dissertation, Department of Artificial
Intelligence, University of Edinburgh.
Pinkham, Jessie Elizabeth. 1985 The Formation of
Comparative Clauses in French and English. Gar-
land Publishing Inc, New York. Also available
from Indian U University Linguistics Club, Bloom-
ington, IN, August 1982.
Rayner, Manny and Banks, Amelie. June 1988 Pars-
ing and Interpreting Comparatives. In: 26th An-
nual Meeting of the Association for Computational
Linguistics. Buffalo, NY.
Rusiecld, Jan. 1985 Adjectives and Comparison in
English: A Semantic Study. Longman Inc., New
York.
Ryan, Karen L.; Root, Rebecca; and Olawsky, Duane.
February 1988 Application-Specific Issues in NLI
Development for a Diagnostic Expert System. In:
Association for Computational Linguistics Second
Conference on Applied Natural Language Process-
ing. Austin, Texas.
Ryan, Karen L. 1983 A Grammar of the English
Comparative. PhD thesis, University of Min-
nesota. Reproduced by Indiana University Lin-
guistics Club, Bloomington Indiana, 1986.
Wilks, Yorick. 1975 An Intelligent Analyzer and Un-
derstander of English. CA CM 18(5): 264-274.
</reference>
<page confidence="0.998747">
176
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.992503333333333">THE LEXICAL SEMANTICS OF COMPARATIVE EXPRESSIONS IN A MULTI-LEVEL SEMANTIC PROCESSOR</title>
<author confidence="0.999967">Duane E Olawsky</author>
<affiliation confidence="0.999968">Computer Science Dept. University of Minnesota</affiliation>
<address confidence="0.999092">4-192 EE/CSci Building 200 Union Street SE Minneapolis, MN 55455</address>
<abstract confidence="0.998569299465241">[olawsky@umn-cs.cs.umn edu] ABSTRACT Comparative expressions (CEs) such as &amp;quot;bigger than&amp;quot; and &amp;quot;more oranges than&amp;quot; are highly ambiguous, and their meaning is context dependent. Thus, they pose problems for the semantic interpretation algorithms typically used in natural language database interfaces. We focus on the comparison attribute ambiguities that occur with CEs. To resolve these ambiguities our natural language interface interacts with the user, finding out which of the possible interpretations was intended. Our multi-level semantic processor facilitates this interaction by recognizing the occurrence of comparison attribute ambiguity and then calculating and presenting a list of candidate comparison attributes from which the user may choose. 1 PROBLEM DESCRIPTION. Although there has been considerable work on the development of natural language database interfaces, many difficult language interpretation problems remain. One of these is the semantic interpretation of comparative expressions such as those shown in sentences (1) through (3). (1) Does ACME construct better buildings than ACE? (2) Does ACME construct buildings faster than ACE? (3) Are more oranges than apples exported by Mexico? To interpret a comparative expression (CE) a natural language processor must determine (1) the entities to be compared, and (2) the attribute(s) of those entities to consider in performing the comparison. The selection of comparison attributes is made difficult by the high level of lexical ambiguity exhibited by comparative predicates. For example, what pieces of data should be compared to answer query (1)? If the database contains information about foundation type, structural characteristics, wiring, and insulation, any of these attributes could be used. Similarly, when comparing orange and apple exports as in query (3), we might compare numeric quantity, weight, volume, or monetary value. To further complicate matters, the plausible comparison attributes for a comparative predicate change with the arguments to which that predicate is applied. Table 1 shows several examples of likely comparison attributes to use with the predicate &amp;quot;bigger&amp;quot; depending on the types of entity that are being compared. Since the system must determine for a comparative predicate the lexical definition intended by the user, this problem is, at heart, one of lexical ambiguity resolution. The problems discussed so far are similar to the well known vagueness and context sensitivity of adjectives (although they occur here even in sentences without adjectives such as (3)). Any proposed method of CE interpretation should also treat several other phenomena that are unique to comparatives. These are bipredicational comparisons, cross-class comparisons, and pairability comparisons involve two predicates, as shown in example (4) (the 169 Table 1: Examples of argument sensitivity in the meaning of &amp;quot;bigger&amp;quot;. Argument type Possible Comparison attributes hotels number of rooms hospitals number of beds houses square feet number of rooms, or number of bedrooms wheat farms number of acres dairy farms number of cows countries number of people, or land area cars length, curb weight, passenger space, or passenger limit predicates are in boldface), and they use a different comparison attribute for each argument of the comparative. (4) John&apos;s car is wider than Mary&apos;s car is long. Bipredicational CEs have strong pairability constraints (Hale 1970). That is, there are restrictions on the pairing of predicates in a bipredicational CE. Example (5) gives a sentence that is semantically anomalous because it violates pairability constraints. (5) ? Bob&apos;s car is wider than it is heavy. A cross-class comparison involves arguments of radically different types as shown in (6). (6) Is the Metrodome bigger than Ronald Interpreting this comparison requires that we find a stadium attribute and a person attribute which are in some sense comparable (e.g. stadium-height and person-height). Pairability constraints also apply indirectly to cross-class comparisons as can be seen in the oddness of (7). 1Although this is an unusual comparison to request, it is perfectly understandable, and the literal interpretation is easily answered. As pointed out to me by Karen Ryan, sentence (6) has several possible metaphoric interpretations (e.g. &amp;quot;Does the Metrodome get more news coverage than Ronald Reagan?&amp;quot;). In this paper we will generally ignore metaphoric interpretations. However, using the approach we describe below, they could be handled in much the same way as the more literal ones. ? The party was longer than my Although we have only one predicate (&amp;quot;longer&amp;quot;) in this sentence, it is difficult to find a comparable pair of attributes. The attribute describing the length of a party is not comparable to any of the attributes describing the length of a car. When faced with ambiguous input a natural language interface has two options. In the first one, it guesses at what the user wants and provides the answer corresponding to that guess. In the second, it interacts with the user to obtain a more completely specified query. Although Option 1 is easier to implement, it is also inflexible and can lead to miscommunication between the user and the interface. With Option 2, the system lets the user select the desired interpretation, resuiting in greater flexibility and less chance of misunderstanding. It is the second option that we are exploring. To carry out Option 2 for CE interpretation the system must present to the user a list of the permissible comparison attribute pairs for the given CE. In Section 3 we will see how pairability constraints can be used to delimit these pairs. Comparatives add significant expressive power to an interface (Ballard 1988), and it is therefore important that reliable techniques be developed to resolve the lexical ambiguities that occur in CEs. 2 PRIOR WORK. For purposes of discussion we will divide comparative expressions into the following commonly used classes: adjectival, adverbial, and adnominal, where the comparative element is based on an adjective, an adverb, or a noun, respectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparative.) For work on the syntax of CEs see (Bresnan 1973), (Pinkham 1985) and (Ryan 1983). Klein (1980), (1982) presents a formal semantics for adjectival CEs without using degrees or extents. It would be difficult to apply his work computationally since there is no easy way to determine the positive and negative extensions of adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do so than it does with (6). It is certainly hard to imagine what truth conditions (7) might have! 170 semantics for adjectival comparatives based on primitive grading relations that order the domain with respect to gradable adjectives. His primary concern is the relationship of comparatives to coordination and quantification, and he pays little attention to lexical ambiguities. Cresswell&apos;s work (Cresswell 1976) handles both adjectivals and adnorninals and is closer in spirit to our own (see Section 3.1). It contains analogs of our Codomain Agreement Principle, mappings and base orders. The main difference is that whereas Cresswell always uses degrees, we also allow base orders to be defined directly on the domain entities. Most of the work done on lexical ambiguity resolution (e.g. (Hirst 1984) and (Wilks 1975)) has focussed on homonymy (when words have a small number of unrelated meanings) rather than polysemy (when words have many closely related meanings) as occurs with CEs. The techniques developed for homonymy depend on large semantic differences between meanings and thus are not as useful for CEs. Although comparatives are frequently used as examples in the NLP literature (e.g. (Hendrix,</abstract>
<address confidence="0.5639235">Sacerdoti, Sagalowicz, and Slocum 1978), (Martin, Appelt, and Pereira 1983) and (Pereira</address>
<abstract confidence="0.986806127659574">1983)), no one has presented a detailed treatment of the ambiguities in the selection of comparison attributes. Most NLP researchers provide neither a detailed explanation of how they treat comparatives nor any characterization of the breadth of their treatment. Two exceptions are the recent papers of Ballard (1988) and Rayner and Banks (1988). The former treats adjectival and adnominal comparatives, and is primarily concerned with the interpretation of expressions like &amp;quot;at least 20 inches more than twice as long as&amp;quot;. The selection of comparison attributes is not discussed in any detail. Rayner and Banks (1988) describe a logic programming approach to obtaining a parse and an initial logical formula for sentences containing a fairly broad range of CEs. They do not discuss lexical semantics and thus do not deal with comparison attribute selection. This paper is an abbreviated version of a longer paper (Olawsky 1989), to which the reader is referred for a more detailed presentation. 3 SOLUTION APPROACH. In this section we describe a rule-based semantic processor that follows Option 2. To provide for user-controlled comparison attribute selection we augment the common lexical translation process (e.g. (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980) and (Ryan, Root, and Olawsky 1988)) with a Mapping Selector that communicates with the user and returns the results to the rule-based translator. The implementation of the approach described here is in progress and is proceeding well. Description of Comparatives. We base our approach on the semantic interpretation of a comparative predicate as a set-theoretic relation. A comparison defined by the relation R is true if the denotations of the first and second arguments of the comparative predicate (i.e. its and form an element pair of /Z. It is tempting to claim that comparatives should be defined by orders rather than relations (we call this the Comparison Order Claim). However, it can be shown (Olawsky 1989) that the comparison relation Lâ€ž for a bipredicational comparative than . . . wide neither asymmetric nor and hence, not an Comparison relations are not defined directly in our semantic description. Instead they are specified in terms of three components: a base order, a subject mapping, and an object mapping. The base order is a set-theoretic order on some domain (e.g. the obvious order on physical lengths). The subject mapping is a mapping from the domain of the denotation of the subject of the CE to the domain of the base order (e.g. the mapping from a rectangle to its length). The object mapping is defined analogously. Let comparison R be defined by the base order the and object mappings /Z if and only if Mo(b)) should be noted here that comparison attribute selection is now recast as the selection of subject and object mappings. reasons for calling the first and second arguments of a CE the subject and object are syntactic and beyond the scope of this paper (see (Ryan 1983)). is also easy to show that nontransitive. ((1980), p. 23) and Hoeksetna ((1983), pp. 410- 411) both make claims similar (but not identical) to the Comparison Order Claim. It seems to us that bipredicationals pose a problem for Hoeksema&apos;s analysis (see (Olawsky 1989)). Klein appears to relax his assumptions slightly when he deals with them. Cresswell (1976) dearly avoids the Comparison Order Claim. 171 By definition, the subject and object mappings must have the same codomain, and this codomain must be the domain of the base order. We call this the Codomain Agreement Principle, and it is through this principle that pairability constraints are enforced. For example, when interpreting the CE in sentence (5), we must find a subject mapping for the width of Bob&apos;s car and an object mapping for its weight, and these mappings must have the same codomain. However, this is impossible since all width mappings will have LENGTH as a codomain, and all weight mappings will have WEIGHT as a codomain. The Codomain Agreement Principle also helps explain the interpretation of sentences (6) and (7). Before concluding this section we consider the semantic description of CEs in TEAM ((Grosz,</abstract>
<address confidence="0.711652">Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Ftosenschein 1982) and (Martin, Appelt, and</address>
<abstract confidence="0.9650921">Pereira 1983)), comparing it to ours. Since comparative expressions were not the main focus in these papers, we must piece together TEAM&apos;s treatment of CEs from the examples that are given. In (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), the CE &amp;quot;children older than 15 years&amp;quot; is translated to ((*MORE* OLD) child2 (YEAR 15)) where &amp;quot;MORE* maps a predicate into a comparative along the scale corresponding to the predicate&amp;quot; (p. 11). This implies that TEAM requires the same mapping to be used for both the subject and object of the comparative. That would not work well for bipredicational CEs, and could also lead to problems for cross-class comparisons. In (Martin, Appelt, and Pereira 1983) the examples contain (e.g. earn) which, on the surface, are similar to mappings. However, in contrast to our approach, it does not appear that any special significance is given to these predicates. There is nothing in either paper to indicate that the many types of CEs are consistently translated to a base order, subject mapping and object mapping as is done in our system. Furthermore, there is nothing analogous to the Codomain Agreement Principle discussed in either paper. Now, we move on to a presentation of how the semantic description presented above is applied in our system. 3.2 General Comments. We use a multi-level semantic processor (see</abstract>
<note confidence="0.8636675">(Bates and Bobrow 1983), (Bronnenberg, Bunt, Scha, Schoenmakers, and van Utteren 1980), (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), (Martin, Appelt, and Pereira 1983) and (Ryan, Root, and Olawsky 1988) for descriptions of simi-</note>
<abstract confidence="0.99905908045977">lar systems). At each level queries are represented by logic-based formulas (see (Olawsky 1989) for examples) with generalized quantifiers ((Barwise and Cooper 1981), (Moore 1981) and (Pereira 1983)) using predicates defined for that level. The initial level is based on often ambiguous Englishoriented predicates. At the other end is a description of the query in unambiguous databaseoriented terms (i.e. the relation and attribute names used in the database). Between these levels we have a domain model level where formulas represent the query in terms of the basic entities, attributes and relationships of the subject domain described in a domain model. These basic concepts are treated as unambiguous. Linking these levels are a series of translators, each of which is responsible for handling a particular semantic interpretation task. In this paper we restrict our attention to the translation from the English-oriented level (EL) to the domain Model level (DML) since this is where CEs are disambiguated by choosing unambiguous mappings and base orders from the domain model. To perform its task the EL-DML translator uses three sources of information. First, it has access to the domain model, a frame-based representation of the subject domain. Second, it uses the semantic lexicon which tells how to map each EL predicate into a DML formula. Finally, this translator will, when necessary, invoke the Mapping Selectorâ€”a program that uses the semantic lexicon and the domain model to guide the user in the selection of a comparison attribute pair. Forour semantic formulas we extend the usual ontology of the predicate calculus with three new classes: sets, mass aggregations, and bunches. Sets are required for count noun adnominal comparatives (e.g. &amp;quot;Has ACME built more warehouses than ACE?&amp;quot;) where we compare set cardinalities rather than entity attribute values. Given a class of mass entities (e.g. oil), a mass aggregation is the new instance of that class resulting from the combination of zero or more old instances. For example, if John combines the oil from three cans into a large vat, the oil in that vat is an aggregation of the oil in the cans. It is not necessary that the original instances be physically combined; it is sufficient merely to consider 17 2 them together conceptually. Mass aggregations are needed for mass noun adnominal comparatives. Finally, we define the term bunch to refer ambiguously both to sets and to mass aggregations. Bunches are used in EL where mass aggregations and sets are not yet distinguished. Sets, and bunches are described in formulas by the *MASS.. respectively. These relations are unusual in that their second arguments are unary predicates serving as characteristic functions defining the components of the first argumentâ€”a set, aggregation or bunch. example, m (Awl&amp;quot;(wheat w)p) is in case m is the aggregation of all entie that w)] (e) true (i.e. is wheat). 3.3 Base Orders and Mappings. EL and DML formulas contain, for each CE, a base order and two mappings. Two sample EL orders are more and base orders are typically defined on domains such as VOL- UME, and INTEGER, but they can also be defined on domains that are not usually numerically quantified such as BUILDING-QUALITY, CLEVERNESS. ambiguous between the more specific DML orders. Most EL mappings p correspond one-for-one with an English adjective (or adverb). They are binary relations where the first argument is an entity e from the domain and the second is the degree of p-ness that e possesses. For example, is EL mapping, then in e b), b degree of bigness for e. Of course, is ambiguous. In contrast to adjectival and adverbial CEs, all adnominals use the ambiguous EL mappairs a bunch with its size. In most cases, a DML mapping is a relation first argument is an entity from some in the core of the domain model and whose second argument is from the domain of a base order. In mapping predication v) first argument is a warehouse, and the is a volume. as the translation of applied to a warehouse. CEs based on count nouns generally which is like other mappings except that its first argument is entities from a domain model class rather than a member of the class. The second argument is always an integer. Mass noun comparatives require a slightly different approach. Since we are dealing with a mass aggregation rather than a set, is inapplicable. To measure the size of an aggregation we combine, according to some function, the attribute values (e.g. weight or volume) of the components the Thus, the mappings used for mass adnominal comparatives are based on the of the appropriate mass entities. Translation Rules. As stated above, EL and DML are linked by a translator that uses rules defined in the semantic lexicon (see (Olawsky 1989) for sample rules). These rules constitute definitions of the EL predicates in terms of DML formulas. Our system employs three kinds of translation rulesâ€” Trans, MTrans, and BTrans. Trans rules have four components: a template to be matched against an EL predication, an EL context specification, a DML context specification, and DML translation of the EL The context specifications are used to resolve ambiguities on the basis of other predications in the EL formula and the (incomplete) DML formula. A rule is applicable only if its context specifications are satisfied. Although a predicain an EL context specification must with some predication in the context, subsumption relationships are used in matching DML context specifications. Thus, the DML context b) be satisfied by 6) rules are intended for the translation of subject and object mapping predications from EL to DML. They have two extra components that indicate the base order and the mapping to be used in DML. This additional information is used to enforce the Codomain Agreement Principle and to help in the user interaction described in Section 3.5. Finally, BTrans the aggregation function would likely be SUM for attributes such as weight, volume, and value, other functions are possible. For example, AVERAGE might be used for a nutritional-quality attribute of an agricultural commodity. The aggregation function is not explicitly reflected in our system until the database level ?Trans rules are nearly identical to the lexical translation rules used in the ATOZ system (Ryan, Root, and Olawsky 1988). However, our rules do have some addifeatures, one of which will below. 173 are used to translate predications to DML. One noteworthy feature of our translation rules is that they can look inside a functional )to satisfy a context We call these A-context specifications, and they may be used inside both EL and DML context specifications for rules of all three types. However, it is only in BTrans rules that they can occur as a top level specification. Top level )-context (e.g. (A [(DM_building OD) are the functional argument of the rele- This match is performed by treating the body of the )t-context specification as a new, independent context specification which must be satisfied by predications inside the body of the functional argument. In Trans and MTrans rules, a A-context specification can occur only as an argument of some normal predicational context specification. For the specification b (Ac c)])) be used in any DML specification. It checks whether a mass of some commodity. Just as standard context specifications provide a way to examine the properties of the arguments of a predication being translated, A-context specifications provide a way to determine the contents of a bunch by inspecting the definition of its characteristic function. Before continuing, we compare our context matching mechanism to the similar one used in the PHLIQA1 system (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980). This system uses a typed semantic language, and context checking is based entirely on the type system. As a result, PHLIQA1 can duplicate the effect of context specifications b) requiring that DM_building.However, PHLIQA1 cannot handle more complex specifications such as b) (DM_b-owner b ACME)) there is no semantic type in PHLIQA1 that would correspond to this subset of the buildings in the The same comments apply to A-context specifications which can be declared in PHLIQA1 is an extension to the rules used in ATOZ (Ryan, Root, and Olawsky 1988) which do not allow functions as arguments and therefore never need this kind of context checking. could perhaps modify the PHLIQA1 world model to contain such subclasses of buildings, but this would eventually lead to a very complex model. It would also be difficult or impossible to keep such a model hierarchical in structure. by specifying a functional semantic type. That (DM_building 6)) written as the type DM_buildingâ€”â–  truthvalue,a function from buildings to truth values. As with standard context (DM_building b) (DM_b-owner ACME)) be expressed as a type restriction. Thus, the context specifications used in PHLIQA1 offer less discrimination power than those used in our system. There is one other difference regarding Acontext specifications that should be noted The context specification (Ab be satisfied by the expression However, in PHLIQA1 the DM_building---â–  truthvaluewill not match type truthvalue.From this, we see that PHLIQA1 does not use subsumption information in matching A-context specifications, while our system does. 3.5 Translation and Mapping Selection. When translating an input sentence containing a comparative expression from EL to DML, the system first applies Trans and Btrans rules to translate the predications that do not represent mappings or base orders. Next, comparison attributes must be selected. The system recognizes comparison attribute ambiguity when there is more than one applicable MTrans rule for a particular EL mapping predicate. We define a candidate mapping as any DML mapping that, on the basis of an applicable MTrans rule, can serve as the translation of a mapping in an EL formula. Assume that an EL predication w a) in given context there are three applicable MTrans rules transthe three DML mappings DM_w- DM_w-storage-area, DM_btotal-area, respectively. All three of these DML mappings would then be candidates with either VOLUME or AREA as the corresponding base order. The system examines the semantic lexicon to determine a list of candidate mappings for each EL mapping. A candidate is removed from one of these lists if there is no compatible mapping in the other list. Compatible mappings are those that allow the Codomain Agreement Principle to be satisfied, and they are easily identified by examining the base order component of the MTrans rules being used. All of the remaining candidates 174 in one of the lists are presented to the user who may select a candidate mapping. Next, the semantic processor presents to the user those candidates for the other EL mapping that are compatible with her first choice. She must select one of these remaining candidates as the translation for the second mapping. Based on her choices, two MTrans rules (one for each EL mapping) are applied, and in this way the EL mapping predications are translated to DML formulas. Once this is completed, the processor can easily translate the EL base order to the DML base order listed in both of the MTrans rules it used (with any necessary adjustments in the direction of comparison). 4 COMMENTS AND CONCLU- SIONS. We are currently examining some additional issues. First, once candidate mappings are obtained, how should they be explained to the user? In the present design text is stored along with the declaration of each mapping, and that text is used to describe the mapping to the user. This approach is somewhat limited, especially for adnominal comparatives given their flexibility and the small information content of the *CAR- A more general technique would use natural language generation to explain the semantic import of each mapping as applied to its arguments. Perhaps there are compromise approaches between these two extremes (e.g. some kind a pseudo-English explanations). Second, it seems desirable that the system could work automatically without asking the user which to the system could choose a mapping, do the query, present the results and then tell the user what interpretation was assumed (and offer to try another interprets, tion). This works well as long as either (a) the system almost always selects the mapping intended by the user, or (b) the cost of an incorrect choice (i.e. the wasted query time) is small. If the system frequently makes a poor choice and wastes a lot of time, this approach could be quite annoying to a user. Crucial to the success of this automatic approach is the ability to reliably predict the resources required to perform a query so that the risk of guessing can be weighed against the benefits. A similar issue was pointed out by an anonymous reviewer. We noted in Section 1 that for sentence (3) (repeated here as (8)) Are oranges apples exported by Mexico? the comparison could be based on quantity, weight, volume, or value. If the answer is the regardless of the comparison, a &amp;quot;friendly&amp;quot; system would realize this and not require the user to choose comparison attributes. Unfortunately, this realization is based on extensional rather than intentional equivalence, and hence, the system must perform all four (in this case) queries and compare the answers. The extra cost could be prohibitive. Again, the system must predict query performance resource requirements to know whether this approach is worthwhile for a particular query. See (Olawsky 1989) for more information on further work. To summarize, we have examined a number of issues associated with the semantic interpretation of comparative expressions and have developed techniques for representing the semantics of CEs and for interacting with the user to resolve comparison attribute ambiguities. These techniques will work for adjectival, adverbial, and adnominal comparatives and for both numerically and non-numerically based comparisons (see (Olawsky 1989) for more on this). We are presently completing the implementation of our approach in Common Lisp using the SunViewlÂ° window sysa for user interaction. Most previous techniques for handling lexical ambiguity work best with homonymy since they depend on large semantic differences between the possible interpretations of a lexical item. Our approach, on the other hand, does not depend solely on these semantic differences and handles polysemy well. 5 ACKNOWLEDGEMENTS. I wish to thank the University of Minnesota Graduate School for supporting this research through the Doctoral Dissertation Fellowship program. I</abstract>
<author confidence="0.672802">also want to thank Maria Gini</author>
<author confidence="0.672802">Michael Kac</author>
<author confidence="0.672802">Karen Ryan</author>
<author confidence="0.672802">Ron Zacharski</author>
<author confidence="0.672802">John Carlis for</author>
<abstract confidence="0.594374">discussions and suggestions regarding this work.</abstract>
<note confidence="0.774023107142857">References Ballard, Bruce W. June 1988 A General Computational Treatment of Comparatives for Natural Question Answering. In: is a trademark of Microsystems, Inc. Meeting of the Association for Computational Lin- NY. Barwise, Jon and Cooper, Robin. 1981 Generalized and Natural Language. Philosophy 159-219. Bates, Madeleine and Bobrow, Robert J. 1983 Information Retrieval Using a Transportable Natural Interface. In: Develop- Retrieval: Proceedings of the ACM SIGIR Confer- Bethesda, Md. York: 81-86. Bresnan, Joan W. 1973 Syntax of the Comparative Construction in English. Inquiry 4(3): 275-343. Bronnenberg, W. J. H. J.; Bunt, H. C.; Landsbergen, S. P. J.; Scha, R. J. H.; Schoenmakers, W. J.; and van Utteren, E. P. C. 1980 The Question- Answering System PHLIQA1. In: Bok, L., Ed., Question Answering Systems. Macmillan. Cresswell, M. J. 1976 The Semantics of Degree. In: Barbara, Ed., Academic Press: 261-292.</note>
<address confidence="0.939348">Grosz, Barbara; Haas, Norman; Hendrix, Gary; Hobbs, Jerry; Martin, Paul; Moore, Robert; Robinson, Jane; and Rosenschein, Stanley.</address>
<note confidence="0.581618">November 1982 DIALOGIC: A Core Natural- Language Processing System. Tech. Note 270,</note>
<affiliation confidence="0.998675">Artificial Intelligence Center, SRI International,</affiliation>
<address confidence="0.958061">Menlo Park, California. Hale, Austin. 1970 Conditions on English compara-</address>
<note confidence="0.75900523880597">tive clause pairings. In: Jacobs, R. A. and Rosen- P., Eds., in English Transforma- Ginn Waltham, Mass.: 30-50. Hendrix, Gary G.; Sacerdoti, Earl D.; Sagalowicz, Daniel; and Slocum, Jonathan. 1978 Developing a Natural Language Interface to Complex Transactions on Database Systems 3(2): 105-147. Hirst, Graeme John. May 1984 Semantic Interpretation Against Ambiguity. PhD thesis, Computer Science Dept., Brown University. Hoeksema, Jack. 1983 Negative Polarity and the Natural Language and 403-434. Klein, Ewan. 1980 A Semantics for Positive and Com- Adjectives. and Philosophy 1-46. Klein, Ewan. 1982 The Interpretation of Adjectival 113-136. Martin, Paul; Appelt, Douglas; and Pereira, Fernando. 1983 Transportability and Generality in a Interface System. In: Proceedings of the Eighth International Joint Conference on Artificial Intelligence, Karlsruhe, West Ger- William Inc., Los Altos: 573- 581. Moore, Robert C. 1981 Problems in Logical Form. of the 19th Association for Computational Linguistics, Stanford, California: 117-124. Olawsky, Duane E. April 1989 The Lexical Semantics of Comparative Expressions in a Muli-Level Semantic Processor. Technical Report CSci TR 89-19, Computer Science Dept., University of Minnesota, Minneapolis, MN. Pereira, Fernando. 1983 Logic for Natural Language Analysis. Technical Note 275, Artificial Intelligence Center, Computer Science and Technology Division, SRI International, Menlo Park, California. Ph. D. dissertation, Department of Artificial Intelligence, University of Edinburgh. Jessie Elizabeth. 1985 Formation of Clauses and English. Garland Publishing Inc, New York. Also available from Indian U University Linguistics Club, Bloomington, IN, August 1982. Rayner, Manny and Banks, Amelie. June 1988 Parsand Interpreting Comparatives. In: Anof the Association for Computational NY. Jan. 1985 and Comparison in A Semantic Study. Inc., New York. Ryan, Karen L.; Root, Rebecca; and Olawsky, Duane. February 1988 Application-Specific Issues in NLI Development for a Diagnostic Expert System. In: Association for Computational Linguistics Second Conference on Applied Natural Language Process- Texas. Ryan, Karen L. 1983 A Grammar of the English Comparative. PhD thesis, University of Minnesota. Reproduced by Indiana University Linguistics Club, Bloomington Indiana, 1986. Wilks, Yorick. 1975 An Intelligent Analyzer and Unof English. CM 264-274. 176</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Bruce W Ballard</author>
</authors>
<title>A General Computational Treatment of Comparatives for Natural Language Question Answering. In:</title>
<date>1988</date>
<booktitle>26th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<location>Buffalo, NY.</location>
<contexts>
<context position="6038" citStr="Ballard 1988" startWordPosition="948" endWordPosition="949">to implement, it is also inflexible and can lead to miscommunication between the user and the interface. With Option 2, the system lets the user select the desired interpretation, resuiting in greater flexibility and less chance of misunderstanding. It is the second option that we are exploring. To carry out Option 2 for CE interpretation the system must present to the user a list of the permissible comparison attribute pairs for the given CE. In Section 3 we will see how pairability constraints can be used to delimit these pairs. Comparatives add significant expressive power to an interface (Ballard 1988), and it is therefore important that reliable techniques be developed to resolve the lexical ambiguities that occur in CEs. 2 PRIOR WORK. For purposes of discussion we will divide comparative expressions into the following commonly used classes: adjectival, adverbial, and adnominal, where the comparative element is based on an adjective, an adverb, or a noun, respectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparati</context>
<context position="8783" citStr="Ballard (1988)" startWordPosition="1380" endWordPosition="1381">es developed for homonymy depend on large semantic differences between meanings and thus are not as useful for CEs. Although comparatives are frequently used as examples in the NLP literature (e.g. (Hendrix, Sacerdoti, Sagalowicz, and Slocum 1978), (Martin, Appelt, and Pereira 1983) and (Pereira 1983)), no one has presented a detailed treatment of the ambiguities in the selection of comparison attributes. Most NLP researchers provide neither a detailed explanation of how they treat comparatives nor any characterization of the breadth of their treatment. Two exceptions are the recent papers of Ballard (1988) and Rayner and Banks (1988). The former treats adjectival and adnominal comparatives, and is primarily concerned with the interpretation of expressions like &amp;quot;at least 20 inches more than twice as long as&amp;quot;. The selection of comparison attributes is not discussed in any detail. Rayner and Banks (1988) describe a logic programming approach to obtaining a parse and an initial logical formula for sentences containing a fairly broad range of CEs. They do not discuss lexical semantics and thus do not deal with comparison attribute selection. This paper is an abbreviated version of a longer paper (Ol</context>
</contexts>
<marker>Ballard, 1988</marker>
<rawString>Ballard, Bruce W. June 1988 A General Computational Treatment of Comparatives for Natural Language Question Answering. In: 26th Annual Meeting of the Association for Computational Linguistics. Buffalo, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jon Barwise</author>
<author>Robin Cooper</author>
</authors>
<date>1981</date>
<journal>Generalized Quantifiers and Natural Language. Linguistics and Philosophy</journal>
<volume>4</volume>
<issue>2</issue>
<pages>159--219</pages>
<contexts>
<context position="14759" citStr="Barwise and Cooper 1981" startWordPosition="2364" endWordPosition="2367">her paper. Now, we move on to a presentation of how the semantic description presented above is applied in our system. 3.2 General Comments. We use a multi-level semantic processor (see (Bates and Bobrow 1983), (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980), (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), (Martin, Appelt, and Pereira 1983) and (Ryan, Root, and Olawsky 1988) for descriptions of similar systems). At each level queries are represented by logic-based formulas (see (Olawsky 1989) for examples) with generalized quantifiers ((Barwise and Cooper 1981), (Moore 1981) and (Pereira 1983)) using predicates defined for that level. The initial level is based on often ambiguous Englishoriented predicates. At the other end is a description of the query in unambiguous databaseoriented terms (i.e. the relation and attribute names used in the database). Between these levels we have a domain model level where formulas represent the query in terms of the basic entities, attributes and relationships of the subject domain described in a domain model. These basic concepts are treated as unambiguous. Linking these levels are a series of translators, each of</context>
</contexts>
<marker>Barwise, Cooper, 1981</marker>
<rawString>Barwise, Jon and Cooper, Robin. 1981 Generalized Quantifiers and Natural Language. Linguistics and Philosophy 4(2): 159-219.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Madeleine Bates</author>
<author>Robert J Bobrow</author>
</authors>
<title>Information Retrieval Using a Transportable Natural Language Interface. In:</title>
<date>1983</date>
<booktitle>Research and Development in Information Retrieval: Proceedings of the Sixth Annual International ACM SIGIR Conference,</booktitle>
<pages>81--86</pages>
<location>Bethesda, Md. New York:</location>
<contexts>
<context position="14344" citStr="Bates and Bobrow 1983" startWordPosition="2305" endWordPosition="2308"> are similar to mappings. However, in contrast to our approach, it does not appear that any special significance is given to these predicates. There is nothing in either paper to indicate that the many types of CEs are consistently translated to a base order, subject mapping and object mapping as is done in our system. Furthermore, there is nothing analogous to the Codomain Agreement Principle discussed in either paper. Now, we move on to a presentation of how the semantic description presented above is applied in our system. 3.2 General Comments. We use a multi-level semantic processor (see (Bates and Bobrow 1983), (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980), (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), (Martin, Appelt, and Pereira 1983) and (Ryan, Root, and Olawsky 1988) for descriptions of similar systems). At each level queries are represented by logic-based formulas (see (Olawsky 1989) for examples) with generalized quantifiers ((Barwise and Cooper 1981), (Moore 1981) and (Pereira 1983)) using predicates defined for that level. The initial level is based on often ambiguous Englishoriented predicates. At the other end is a description o</context>
</contexts>
<marker>Bates, Bobrow, 1983</marker>
<rawString>Bates, Madeleine and Bobrow, Robert J. 1983 Information Retrieval Using a Transportable Natural Language Interface. In: Research and Development in Information Retrieval: Proceedings of the Sixth Annual International ACM SIGIR Conference, Bethesda, Md. New York: 81-86.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joan W Bresnan</author>
</authors>
<title>Syntax of the Comparative Clause Construction in English.</title>
<date>1973</date>
<journal>Linguistic Inquiry</journal>
<volume>4</volume>
<issue>3</issue>
<pages>275--343</pages>
<contexts>
<context position="6691" citStr="Bresnan 1973" startWordPosition="1051" endWordPosition="1052">iable techniques be developed to resolve the lexical ambiguities that occur in CEs. 2 PRIOR WORK. For purposes of discussion we will divide comparative expressions into the following commonly used classes: adjectival, adverbial, and adnominal, where the comparative element is based on an adjective, an adverb, or a noun, respectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparative.) For work on the syntax of CEs see (Bresnan 1973), (Pinkham 1985) and (Ryan 1983). Klein (1980), (1982) presents a formal semantics for adjectival CEs without using degrees or extents. It would be difficult to apply his work computationally since there is no easy way to determine the positive and negative extensions of adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic 2lientence (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do so than it does with (6). It is certainly hard to imagine what truth conditions (7) might have! 170 semantics for adjectival </context>
</contexts>
<marker>Bresnan, 1973</marker>
<rawString>Bresnan, Joan W. 1973 Syntax of the Comparative Clause Construction in English. Linguistic Inquiry 4(3): 275-343.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W J H J Bronnenberg</author>
<author>H C Bunt</author>
<author>S P J Landsbergen</author>
<author>R J H Scha</author>
<author>W J Schoenmakers</author>
<author>E P C van Utteren</author>
</authors>
<title>The QuestionAnswering System PHLIQA1. In:</title>
<date>1980</date>
<publisher>Macmillan.</publisher>
<marker>Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, van Utteren, 1980</marker>
<rawString>Bronnenberg, W. J. H. J.; Bunt, H. C.; Landsbergen, S. P. J.; Scha, R. J. H.; Schoenmakers, W. J.; and van Utteren, E. P. C. 1980 The QuestionAnswering System PHLIQA1. In: Bok, L., Ed., Natural Language Question Answering Systems. Macmillan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M J Cresswell</author>
</authors>
<title>The Semantics of Degree.</title>
<date>1976</date>
<pages>261--292</pages>
<publisher>Grammar. Academic Press:</publisher>
<location>In: Partee, Barbara, Ed., Montague</location>
<contexts>
<context position="7578" citStr="Cresswell 1976" startWordPosition="1189" endWordPosition="1190">adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic 2lientence (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do so than it does with (6). It is certainly hard to imagine what truth conditions (7) might have! 170 semantics for adjectival comparatives based on primitive grading relations that order the domain with respect to gradable adjectives. His primary concern is the relationship of comparatives to coordination and quantification, and he pays little attention to lexical ambiguities. Cresswell&apos;s work (Cresswell 1976) handles both adjectivals and adnorninals and is closer in spirit to our own (see Section 3.1). It contains analogs of our Codomain Agreement Principle, mappings and base orders. The main difference is that whereas Cresswell always uses degrees, we also allow base orders to be defined directly on the domain entities. Most of the work done on lexical ambiguity resolution (e.g. (Hirst 1984) and (Wilks 1975)) has focussed on homonymy (when words have a small number of unrelated meanings) rather than polysemy (when words have many closely related meanings) as occurs with CEs. The techniques develo</context>
<context position="11991" citStr="Cresswell (1976)" startWordPosition="1917" endWordPosition="1918">son attribute selection is now recast as the selection of subject and object mappings. 3Our reasons for calling the first and second arguments of a CE the subject and object are syntactic and beyond the scope of this paper (see (Ryan 1983)). 41t is also easy to show that L. is nontransitive. 3Klein ((1980), p. 23) and Hoeksetna ((1983), pp. 410- 411) both make claims similar (but not identical) to the Comparison Order Claim. It seems to us that bipredicationals pose a problem for Hoeksema&apos;s analysis (see (Olawsky 1989)). Klein appears to relax his assumptions slightly when he deals with them. Cresswell (1976) dearly avoids the Comparison Order Claim. 171 By definition, the subject and object mappings must have the same codomain, and this codomain must be the domain of the base order. We call this the Codomain Agreement Principle, and it is through this principle that pairability constraints are enforced. For example, when interpreting the CE in sentence (5), we must find a subject mapping for the width of Bob&apos;s car and an object mapping for its weight, and these mappings must have the same codomain. However, this is impossible since all width mappings will have LENGTH as a codomain, and all weight</context>
</contexts>
<marker>Cresswell, 1976</marker>
<rawString>Cresswell, M. J. 1976 The Semantics of Degree. In: Partee, Barbara, Ed., Montague Grammar. Academic Press: 261-292.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Barbara Grosz</author>
<author>Norman Haas</author>
<author>Gary Hendrix</author>
<author>Jerry Hobbs</author>
<author>Paul Martin</author>
<author>Robert Moore</author>
<author>Jane Robinson</author>
<author>Stanley Rosenschein</author>
</authors>
<date>1982</date>
<booktitle>DIALOGIC: A Core NaturalLanguage Processing System. Tech. Note 270, Artificial Intelligence Center, SRI International,</booktitle>
<location>Menlo Park, California.</location>
<marker>Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, Rosenschein, 1982</marker>
<rawString>Grosz, Barbara; Haas, Norman; Hendrix, Gary; Hobbs, Jerry; Martin, Paul; Moore, Robert; Robinson, Jane; and Rosenschein, Stanley. November 1982 DIALOGIC: A Core NaturalLanguage Processing System. Tech. Note 270, Artificial Intelligence Center, SRI International, Menlo Park, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Austin Hale</author>
</authors>
<title>Conditions on English comparative clause pairings. In:</title>
<date>1970</date>
<booktitle>Readings in English Transformational Grammar. Ginn &amp; Co.,</booktitle>
<pages>30--50</pages>
<location>Waltham, Mass.:</location>
<contexts>
<context position="3698" citStr="Hale 1970" startWordPosition="561" endWordPosition="562">Table 1: Examples of argument sensitivity in the meaning of &amp;quot;bigger&amp;quot;. Argument type Possible Comparison attributes hotels number of rooms hospitals number of beds houses square feet - number of rooms, or number of bedrooms wheat farms number of acres dairy farms number of cows countries number of people, or land area cars length, curb weight, passenger space, or passenger limit predicates are in boldface), and they use a different comparison attribute for each argument of the comparative. (4) John&apos;s car is wider than Mary&apos;s car is long. Bipredicational CEs have strong pairability constraints (Hale 1970). That is, there are restrictions on the pairing of predicates in a bipredicational CE. Example (5) gives a sentence that is semantically anomalous because it violates pairability constraints. (5) ? Bob&apos;s car is wider than it is heavy. A cross-class comparison involves arguments of radically different types as shown in (6). (6) Is the Metrodome bigger than Ronald Reagan?1 Interpreting this comparison requires that we find a stadium attribute and a person attribute which are in some sense comparable (e.g. stadium-height and person-height). Pairability constraints also apply indirectly to cross-</context>
</contexts>
<marker>Hale, 1970</marker>
<rawString>Hale, Austin. 1970 Conditions on English comparative clause pairings. In: Jacobs, R. A. and Rosenbaum, P., Eds., Readings in English Transformational Grammar. Ginn &amp; Co., Waltham, Mass.: 30-50.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gary G Hendrix</author>
<author>Earl D Sacerdoti</author>
<author>Daniel Sagalowicz</author>
<author>Jonathan Slocum</author>
</authors>
<title>Developing a Natural Language Interface to Complex Data.</title>
<date>1978</date>
<journal>ACM Transactions on Database Systems</journal>
<volume>3</volume>
<issue>2</issue>
<pages>105--147</pages>
<marker>Hendrix, Sacerdoti, Sagalowicz, Slocum, 1978</marker>
<rawString>Hendrix, Gary G.; Sacerdoti, Earl D.; Sagalowicz, Daniel; and Slocum, Jonathan. 1978 Developing a Natural Language Interface to Complex Data. ACM Transactions on Database Systems 3(2): 105-147.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Graeme John Hirst</author>
</authors>
<title>Semantic Interpretation Against Ambiguity.</title>
<date>1984</date>
<tech>PhD thesis,</tech>
<institution>Computer Science Dept., Brown University.</institution>
<contexts>
<context position="7969" citStr="Hirst 1984" startWordPosition="1254" endWordPosition="1255">main with respect to gradable adjectives. His primary concern is the relationship of comparatives to coordination and quantification, and he pays little attention to lexical ambiguities. Cresswell&apos;s work (Cresswell 1976) handles both adjectivals and adnorninals and is closer in spirit to our own (see Section 3.1). It contains analogs of our Codomain Agreement Principle, mappings and base orders. The main difference is that whereas Cresswell always uses degrees, we also allow base orders to be defined directly on the domain entities. Most of the work done on lexical ambiguity resolution (e.g. (Hirst 1984) and (Wilks 1975)) has focussed on homonymy (when words have a small number of unrelated meanings) rather than polysemy (when words have many closely related meanings) as occurs with CEs. The techniques developed for homonymy depend on large semantic differences between meanings and thus are not as useful for CEs. Although comparatives are frequently used as examples in the NLP literature (e.g. (Hendrix, Sacerdoti, Sagalowicz, and Slocum 1978), (Martin, Appelt, and Pereira 1983) and (Pereira 1983)), no one has presented a detailed treatment of the ambiguities in the selection of comparison att</context>
</contexts>
<marker>Hirst, 1984</marker>
<rawString>Hirst, Graeme John. May 1984 Semantic Interpretation Against Ambiguity. PhD thesis, Computer Science Dept., Brown University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jack Hoeksema</author>
</authors>
<title>Negative Polarity and the Comparative.</title>
<date>1983</date>
<journal>Natural Language and Linguistic Theory</journal>
<volume>1</volume>
<pages>403--434</pages>
<contexts>
<context position="7018" citStr="Hoeksema (1983)" startWordPosition="1105" endWordPosition="1106">pectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparative.) For work on the syntax of CEs see (Bresnan 1973), (Pinkham 1985) and (Ryan 1983). Klein (1980), (1982) presents a formal semantics for adjectival CEs without using degrees or extents. It would be difficult to apply his work computationally since there is no easy way to determine the positive and negative extensions of adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic 2lientence (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do so than it does with (6). It is certainly hard to imagine what truth conditions (7) might have! 170 semantics for adjectival comparatives based on primitive grading relations that order the domain with respect to gradable adjectives. His primary concern is the relationship of comparatives to coordination and quantification, and he pays little attention to lexical ambiguities. Cresswell&apos;s work (Cresswell 1976) handles both adjectivals and adnorninal</context>
</contexts>
<marker>Hoeksema, 1983</marker>
<rawString>Hoeksema, Jack. 1983 Negative Polarity and the Comparative. Natural Language and Linguistic Theory 1: 403-434.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ewan Klein</author>
</authors>
<title>A Semantics for Positive and Comparative Adjectives.</title>
<date>1980</date>
<journal>Linguistics and Philosophy</journal>
<volume>4</volume>
<pages>1--46</pages>
<contexts>
<context position="6737" citStr="Klein (1980)" startWordPosition="1058" endWordPosition="1059">xical ambiguities that occur in CEs. 2 PRIOR WORK. For purposes of discussion we will divide comparative expressions into the following commonly used classes: adjectival, adverbial, and adnominal, where the comparative element is based on an adjective, an adverb, or a noun, respectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparative.) For work on the syntax of CEs see (Bresnan 1973), (Pinkham 1985) and (Ryan 1983). Klein (1980), (1982) presents a formal semantics for adjectival CEs without using degrees or extents. It would be difficult to apply his work computationally since there is no easy way to determine the positive and negative extensions of adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic 2lientence (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do so than it does with (6). It is certainly hard to imagine what truth conditions (7) might have! 170 semantics for adjectival comparatives based on primitive grading relati</context>
</contexts>
<marker>Klein, 1980</marker>
<rawString>Klein, Ewan. 1980 A Semantics for Positive and Comparative Adjectives. Linguistics and Philosophy 4: 1-46.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ewan Klein</author>
</authors>
<title>The Interpretation of Adjectival Comparatives.</title>
<date>1982</date>
<journal>Linguistics</journal>
<volume>18</volume>
<pages>113--136</pages>
<marker>Klein, 1982</marker>
<rawString>Klein, Ewan. 1982 The Interpretation of Adjectival Comparatives. Linguistics 18: 113-136.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Martin</author>
<author>Douglas Appelt</author>
<author>Fernando Pereira</author>
</authors>
<title>Transportability and Generality in a Natural-Language Interface System. In:</title>
<date>1983</date>
<booktitle>Proceedings of the Eighth International Joint Conference on Artificial Intelligence,</booktitle>
<pages>573--581</pages>
<publisher>William Kaufmann, Inc.,</publisher>
<location>Karlsruhe, West Germany.</location>
<marker>Martin, Appelt, Pereira, 1983</marker>
<rawString>Martin, Paul; Appelt, Douglas; and Pereira, Fernando. 1983 Transportability and Generality in a Natural-Language Interface System. In: Proceedings of the Eighth International Joint Conference on Artificial Intelligence, Karlsruhe, West Germany. William Kaufmann, Inc., Los Altos: 573-581.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert C Moore</author>
</authors>
<title>Problems in Logical Form. In:</title>
<date>1981</date>
<booktitle>Proceedings of the 19th Annual Meeting. Association for Computational Linguistics,</booktitle>
<pages>117--124</pages>
<location>Stanford, California:</location>
<contexts>
<context position="14773" citStr="Moore 1981" startWordPosition="2368" endWordPosition="2369">to a presentation of how the semantic description presented above is applied in our system. 3.2 General Comments. We use a multi-level semantic processor (see (Bates and Bobrow 1983), (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980), (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), (Martin, Appelt, and Pereira 1983) and (Ryan, Root, and Olawsky 1988) for descriptions of similar systems). At each level queries are represented by logic-based formulas (see (Olawsky 1989) for examples) with generalized quantifiers ((Barwise and Cooper 1981), (Moore 1981) and (Pereira 1983)) using predicates defined for that level. The initial level is based on often ambiguous Englishoriented predicates. At the other end is a description of the query in unambiguous databaseoriented terms (i.e. the relation and attribute names used in the database). Between these levels we have a domain model level where formulas represent the query in terms of the basic entities, attributes and relationships of the subject domain described in a domain model. These basic concepts are treated as unambiguous. Linking these levels are a series of translators, each of which is resp</context>
</contexts>
<marker>Moore, 1981</marker>
<rawString>Moore, Robert C. 1981 Problems in Logical Form. In: Proceedings of the 19th Annual Meeting. Association for Computational Linguistics, Stanford, California: 117-124.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Duane E Olawsky</author>
</authors>
<title>The Lexical Semantics of Comparative Expressions in a Muli-Level Semantic Processor.</title>
<date>1989</date>
<tech>Technical Report CSci TR 89-19,</tech>
<institution>Computer Science Dept., University of Minnesota,</institution>
<location>Minneapolis, MN.</location>
<contexts>
<context position="9394" citStr="Olawsky 1989" startWordPosition="1479" endWordPosition="1480">8) and Rayner and Banks (1988). The former treats adjectival and adnominal comparatives, and is primarily concerned with the interpretation of expressions like &amp;quot;at least 20 inches more than twice as long as&amp;quot;. The selection of comparison attributes is not discussed in any detail. Rayner and Banks (1988) describe a logic programming approach to obtaining a parse and an initial logical formula for sentences containing a fairly broad range of CEs. They do not discuss lexical semantics and thus do not deal with comparison attribute selection. This paper is an abbreviated version of a longer paper (Olawsky 1989), to which the reader is referred for a more detailed presentation. 3 SOLUTION APPROACH. In this section we describe a rule-based semantic processor that follows Option 2. To provide for user-controlled comparison attribute selection we augment the common lexical translation process (e.g. (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980) and (Ryan, Root, and Olawsky 1988)) with a Mapping Selector that communicates with the user and returns the results to the rule-based translator. The implementation of the approach described here is in progress and is proceeding well. </context>
<context position="11899" citStr="Olawsky 1989" startWordPosition="1903" endWordPosition="1904"> Then (a, b) E /Z if and only if (M5(a), Mo(b)) E B. It should be noted here that comparison attribute selection is now recast as the selection of subject and object mappings. 3Our reasons for calling the first and second arguments of a CE the subject and object are syntactic and beyond the scope of this paper (see (Ryan 1983)). 41t is also easy to show that L. is nontransitive. 3Klein ((1980), p. 23) and Hoeksetna ((1983), pp. 410- 411) both make claims similar (but not identical) to the Comparison Order Claim. It seems to us that bipredicationals pose a problem for Hoeksema&apos;s analysis (see (Olawsky 1989)). Klein appears to relax his assumptions slightly when he deals with them. Cresswell (1976) dearly avoids the Comparison Order Claim. 171 By definition, the subject and object mappings must have the same codomain, and this codomain must be the domain of the base order. We call this the Codomain Agreement Principle, and it is through this principle that pairability constraints are enforced. For example, when interpreting the CE in sentence (5), we must find a subject mapping for the width of Bob&apos;s car and an object mapping for its weight, and these mappings must have the same codomain. However</context>
<context position="14689" citStr="Olawsky 1989" startWordPosition="2357" endWordPosition="2358">logous to the Codomain Agreement Principle discussed in either paper. Now, we move on to a presentation of how the semantic description presented above is applied in our system. 3.2 General Comments. We use a multi-level semantic processor (see (Bates and Bobrow 1983), (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980), (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), (Martin, Appelt, and Pereira 1983) and (Ryan, Root, and Olawsky 1988) for descriptions of similar systems). At each level queries are represented by logic-based formulas (see (Olawsky 1989) for examples) with generalized quantifiers ((Barwise and Cooper 1981), (Moore 1981) and (Pereira 1983)) using predicates defined for that level. The initial level is based on often ambiguous Englishoriented predicates. At the other end is a description of the query in unambiguous databaseoriented terms (i.e. the relation and attribute names used in the database). Between these levels we have a domain model level where formulas represent the query in terms of the basic entities, attributes and relationships of the subject domain described in a domain model. These basic concepts are treated as </context>
<context position="19785" citStr="Olawsky 1989" startWordPosition="3223" endWordPosition="3224">r. Mass noun comparatives require a slightly different approach. Since we are dealing with a mass aggregation rather than a set, the *CARDINALITY* mapping is inapplicable. To measure the size of an aggregation we combine, according to some function, the attribute values (e.g. weight or volume) of the components of the aggregation.6 Thus, the mappings used for mass adnominal comparatives are based on the attributes of the appropriate class of mass entities. 3.4 EL-DML Translation Rules. As stated above, EL and DML are linked by a translator that uses rules defined in the semantic lexicon (see (Olawsky 1989) for sample rules). These rules constitute definitions of the EL predicates in terms of DML formulas. Our system employs three kinds of translation rulesâ€” Trans, MTrans, and BTrans. Trans rules have four components: a template to be matched against an EL predication, an EL context specification, a DML context specification, and the DML translation of the EL predication.7 The context specifications are used to resolve ambiguities on the basis of other predications in the EL formula and the (incomplete) DML formula. A rule is applicable only if its context specifications are satisfied. Although </context>
<context position="29250" citStr="Olawsky 1989" startWordPosition="4773" endWordPosition="4774">? the comparison could be based on quantity, weight, volume, or value. If the answer is the same regardless of the basis for comparison, a &amp;quot;friendly&amp;quot; system would realize this and not require the user to choose comparison attributes. Unfortunately, this realization is based on extensional rather than intentional equivalence, and hence, the system must perform all four (in this case) queries and compare the answers. The extra cost could be prohibitive. Again, the system must predict query performance resource requirements to know whether this approach is worthwhile for a particular query. See (Olawsky 1989) for more information on further work. To summarize, we have examined a number of issues associated with the semantic interpretation of comparative expressions and have developed techniques for representing the semantics of CEs and for interacting with the user to resolve comparison attribute ambiguities. These techniques will work for adjectival, adverbial, and adnominal comparatives and for both numerically and non-numerically based comparisons (see (Olawsky 1989) for more on this). We are presently completing the implementation of our approach in Common Lisp using the SunViewlÂ° window syste</context>
</contexts>
<marker>Olawsky, 1989</marker>
<rawString>Olawsky, Duane E. April 1989 The Lexical Semantics of Comparative Expressions in a Muli-Level Semantic Processor. Technical Report CSci TR 89-19, Computer Science Dept., University of Minnesota, Minneapolis, MN.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fernando Pereira</author>
</authors>
<title>Logic for Natural Language Analysis.</title>
<date>1983</date>
<tech>Technical Note 275,</tech>
<institution>Artificial Intelligence Center, Computer Science and Technology Division, SRI International, Menlo Park, California.</institution>
<note>Ph. D. dissertation,</note>
<contexts>
<context position="8452" citStr="Pereira 1983" startWordPosition="1329" endWordPosition="1330">ase orders to be defined directly on the domain entities. Most of the work done on lexical ambiguity resolution (e.g. (Hirst 1984) and (Wilks 1975)) has focussed on homonymy (when words have a small number of unrelated meanings) rather than polysemy (when words have many closely related meanings) as occurs with CEs. The techniques developed for homonymy depend on large semantic differences between meanings and thus are not as useful for CEs. Although comparatives are frequently used as examples in the NLP literature (e.g. (Hendrix, Sacerdoti, Sagalowicz, and Slocum 1978), (Martin, Appelt, and Pereira 1983) and (Pereira 1983)), no one has presented a detailed treatment of the ambiguities in the selection of comparison attributes. Most NLP researchers provide neither a detailed explanation of how they treat comparatives nor any characterization of the breadth of their treatment. Two exceptions are the recent papers of Ballard (1988) and Rayner and Banks (1988). The former treats adjectival and adnominal comparatives, and is primarily concerned with the interpretation of expressions like &amp;quot;at least 20 inches more than twice as long as&amp;quot;. The selection of comparison attributes is not discussed in any</context>
<context position="12930" citStr="Pereira 1983" startWordPosition="2072" endWordPosition="2073">reting the CE in sentence (5), we must find a subject mapping for the width of Bob&apos;s car and an object mapping for its weight, and these mappings must have the same codomain. However, this is impossible since all width mappings will have LENGTH as a codomain, and all weight mappings will have WEIGHT as a codomain. The Codomain Agreement Principle also helps explain the interpretation of sentences (6) and (7). Before concluding this section we consider the semantic description of CEs in TEAM ((Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Ftosenschein 1982) and (Martin, Appelt, and Pereira 1983)), comparing it to ours. Since comparative expressions were not the main focus in these papers, we must piece together TEAM&apos;s treatment of CEs from the examples that are given. In (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), the CE &amp;quot;children older than 15 years&amp;quot; is translated to ((*MORE* OLD) child2 (YEAR 15)) where &amp;quot;MORE* maps a predicate into a comparative along the scale corresponding to the predicate&amp;quot; (p. 11). This implies that TEAM requires the same mapping to be used for both the subject and object of the comparative. That would not work well for bipredic</context>
<context position="14534" citStr="Pereira 1983" startWordPosition="2333" endWordPosition="2334">ny types of CEs are consistently translated to a base order, subject mapping and object mapping as is done in our system. Furthermore, there is nothing analogous to the Codomain Agreement Principle discussed in either paper. Now, we move on to a presentation of how the semantic description presented above is applied in our system. 3.2 General Comments. We use a multi-level semantic processor (see (Bates and Bobrow 1983), (Bronnenberg, Bunt, Landsbergen, Scha, Schoenmakers, and van Utteren 1980), (Grosz, Haas, Hendrix, Hobbs, Martin, Moore, Robinson, and Rosenschein 1982), (Martin, Appelt, and Pereira 1983) and (Ryan, Root, and Olawsky 1988) for descriptions of similar systems). At each level queries are represented by logic-based formulas (see (Olawsky 1989) for examples) with generalized quantifiers ((Barwise and Cooper 1981), (Moore 1981) and (Pereira 1983)) using predicates defined for that level. The initial level is based on often ambiguous Englishoriented predicates. At the other end is a description of the query in unambiguous databaseoriented terms (i.e. the relation and attribute names used in the database). Between these levels we have a domain model level where formulas represent the</context>
</contexts>
<marker>Pereira, 1983</marker>
<rawString>Pereira, Fernando. 1983 Logic for Natural Language Analysis. Technical Note 275, Artificial Intelligence Center, Computer Science and Technology Division, SRI International, Menlo Park, California. Ph. D. dissertation, Department of Artificial Intelligence, University of Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jessie Elizabeth Pinkham</author>
</authors>
<title>The Formation of Comparative Clauses in French and English.</title>
<date>1985</date>
<publisher>Garland Publishing Inc,</publisher>
<institution>Indian U University Linguistics Club,</institution>
<location>New York.</location>
<note>Also available from</note>
<contexts>
<context position="6707" citStr="Pinkham 1985" startWordPosition="1053" endWordPosition="1054"> be developed to resolve the lexical ambiguities that occur in CEs. 2 PRIOR WORK. For purposes of discussion we will divide comparative expressions into the following commonly used classes: adjectival, adverbial, and adnominal, where the comparative element is based on an adjective, an adverb, or a noun, respectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparative.) For work on the syntax of CEs see (Bresnan 1973), (Pinkham 1985) and (Ryan 1983). Klein (1980), (1982) presents a formal semantics for adjectival CEs without using degrees or extents. It would be difficult to apply his work computationally since there is no easy way to determine the positive and negative extensions of adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic 2lientence (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do so than it does with (6). It is certainly hard to imagine what truth conditions (7) might have! 170 semantics for adjectival comparatives bas</context>
</contexts>
<marker>Pinkham, 1985</marker>
<rawString>Pinkham, Jessie Elizabeth. 1985 The Formation of Comparative Clauses in French and English. Garland Publishing Inc, New York. Also available from Indian U University Linguistics Club, Bloomington, IN, August 1982.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manny Rayner</author>
<author>Amelie Banks</author>
</authors>
<title>Parsing and Interpreting Comparatives. In:</title>
<date>1988</date>
<booktitle>26th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<location>Buffalo, NY.</location>
<contexts>
<context position="8811" citStr="Rayner and Banks (1988)" startWordPosition="1383" endWordPosition="1386">monymy depend on large semantic differences between meanings and thus are not as useful for CEs. Although comparatives are frequently used as examples in the NLP literature (e.g. (Hendrix, Sacerdoti, Sagalowicz, and Slocum 1978), (Martin, Appelt, and Pereira 1983) and (Pereira 1983)), no one has presented a detailed treatment of the ambiguities in the selection of comparison attributes. Most NLP researchers provide neither a detailed explanation of how they treat comparatives nor any characterization of the breadth of their treatment. Two exceptions are the recent papers of Ballard (1988) and Rayner and Banks (1988). The former treats adjectival and adnominal comparatives, and is primarily concerned with the interpretation of expressions like &amp;quot;at least 20 inches more than twice as long as&amp;quot;. The selection of comparison attributes is not discussed in any detail. Rayner and Banks (1988) describe a logic programming approach to obtaining a parse and an initial logical formula for sentences containing a fairly broad range of CEs. They do not discuss lexical semantics and thus do not deal with comparison attribute selection. This paper is an abbreviated version of a longer paper (Olawsky 1989), to which the re</context>
</contexts>
<marker>Rayner, Banks, 1988</marker>
<rawString>Rayner, Manny and Banks, Amelie. June 1988 Parsing and Interpreting Comparatives. In: 26th Annual Meeting of the Association for Computational Linguistics. Buffalo, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jan Rusiecld</author>
</authors>
<title>Adjectives and Comparison in English: A Semantic Study.</title>
<date>1985</date>
<publisher>Longman Inc.,</publisher>
<location>New York.</location>
<contexts>
<context position="6566" citStr="Rusiecld 1985" startWordPosition="1030" endWordPosition="1031">se pairs. Comparatives add significant expressive power to an interface (Ballard 1988), and it is therefore important that reliable techniques be developed to resolve the lexical ambiguities that occur in CEs. 2 PRIOR WORK. For purposes of discussion we will divide comparative expressions into the following commonly used classes: adjectival, adverbial, and adnominal, where the comparative element is based on an adjective, an adverb, or a noun, respectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparative.) For work on the syntax of CEs see (Bresnan 1973), (Pinkham 1985) and (Ryan 1983). Klein (1980), (1982) presents a formal semantics for adjectival CEs without using degrees or extents. It would be difficult to apply his work computationally since there is no easy way to determine the positive and negative extensions of adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic 2lientence (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do </context>
</contexts>
<marker>Rusiecld, 1985</marker>
<rawString>Rusiecld, Jan. 1985 Adjectives and Comparison in English: A Semantic Study. Longman Inc., New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karen L Ryan</author>
<author>Rebecca Root</author>
<author>Duane Olawsky</author>
</authors>
<title>Application-Specific Issues in NLI Development for a Diagnostic Expert System. In:</title>
<date>1988</date>
<booktitle>Association for Computational Linguistics Second Conference on Applied Natural Language Processing.</booktitle>
<location>Austin, Texas.</location>
<marker>Ryan, Root, Olawsky, 1988</marker>
<rawString>Ryan, Karen L.; Root, Rebecca; and Olawsky, Duane. February 1988 Application-Specific Issues in NLI Development for a Diagnostic Expert System. In: Association for Computational Linguistics Second Conference on Applied Natural Language Processing. Austin, Texas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karen L Ryan</author>
</authors>
<title>A Grammar of the English Comparative.</title>
<date>1983</date>
<tech>PhD thesis,</tech>
<institution>University of Minnesota. Reproduced by Indiana University Linguistics Club,</institution>
<location>Bloomington Indiana,</location>
<contexts>
<context position="6723" citStr="Ryan 1983" startWordPosition="1056" endWordPosition="1057">solve the lexical ambiguities that occur in CEs. 2 PRIOR WORK. For purposes of discussion we will divide comparative expressions into the following commonly used classes: adjectival, adverbial, and adnominal, where the comparative element is based on an adjective, an adverb, or a noun, respectively. See (1)â€”(3) for an example of each type. Within linguistics, adjectival comparatives are the most studied of these three varieties. (See (Rusiecld 1985) for a detailed description of the various types of adjectival comparative.) For work on the syntax of CEs see (Bresnan 1973), (Pinkham 1985) and (Ryan 1983). Klein (1980), (1982) presents a formal semantics for adjectival CEs without using degrees or extents. It would be difficult to apply his work computationally since there is no easy way to determine the positive and negative extensions of adjectives upon which his theory rests. Hoeksema (1983) defines a set-theoretic 2lientence (7) can perhaps be interpreted metaphorically (perhaps with humorous intent), but it seems more difficult to do so than it does with (6). It is certainly hard to imagine what truth conditions (7) might have! 170 semantics for adjectival comparatives based on primitive </context>
<context position="11614" citStr="Ryan 1983" startWordPosition="1855" endWordPosition="1856">e domain of the denotation of the subject of the CE to the domain of the base order (e.g. the mapping from a rectangle to its length). The object mapping is defined analogously. Let comparison relation R be defined by the base order B, and the subject and object mappings M, and Mo. Then (a, b) E /Z if and only if (M5(a), Mo(b)) E B. It should be noted here that comparison attribute selection is now recast as the selection of subject and object mappings. 3Our reasons for calling the first and second arguments of a CE the subject and object are syntactic and beyond the scope of this paper (see (Ryan 1983)). 41t is also easy to show that L. is nontransitive. 3Klein ((1980), p. 23) and Hoeksetna ((1983), pp. 410- 411) both make claims similar (but not identical) to the Comparison Order Claim. It seems to us that bipredicationals pose a problem for Hoeksema&apos;s analysis (see (Olawsky 1989)). Klein appears to relax his assumptions slightly when he deals with them. Cresswell (1976) dearly avoids the Comparison Order Claim. 171 By definition, the subject and object mappings must have the same codomain, and this codomain must be the domain of the base order. We call this the Codomain Agreement Principl</context>
</contexts>
<marker>Ryan, 1983</marker>
<rawString>Ryan, Karen L. 1983 A Grammar of the English Comparative. PhD thesis, University of Minnesota. Reproduced by Indiana University Linguistics Club, Bloomington Indiana, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yorick Wilks</author>
</authors>
<title>An Intelligent Analyzer and Understander of English.</title>
<date>1975</date>
<journal>CA CM</journal>
<volume>18</volume>
<issue>5</issue>
<pages>264--274</pages>
<contexts>
<context position="7986" citStr="Wilks 1975" startWordPosition="1257" endWordPosition="1258"> to gradable adjectives. His primary concern is the relationship of comparatives to coordination and quantification, and he pays little attention to lexical ambiguities. Cresswell&apos;s work (Cresswell 1976) handles both adjectivals and adnorninals and is closer in spirit to our own (see Section 3.1). It contains analogs of our Codomain Agreement Principle, mappings and base orders. The main difference is that whereas Cresswell always uses degrees, we also allow base orders to be defined directly on the domain entities. Most of the work done on lexical ambiguity resolution (e.g. (Hirst 1984) and (Wilks 1975)) has focussed on homonymy (when words have a small number of unrelated meanings) rather than polysemy (when words have many closely related meanings) as occurs with CEs. The techniques developed for homonymy depend on large semantic differences between meanings and thus are not as useful for CEs. Although comparatives are frequently used as examples in the NLP literature (e.g. (Hendrix, Sacerdoti, Sagalowicz, and Slocum 1978), (Martin, Appelt, and Pereira 1983) and (Pereira 1983)), no one has presented a detailed treatment of the ambiguities in the selection of comparison attributes. Most NLP</context>
</contexts>
<marker>Wilks, 1975</marker>
<rawString>Wilks, Yorick. 1975 An Intelligent Analyzer and Understander of English. CA CM 18(5): 264-274.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>