<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000035">
<title confidence="0.630299">
Primitive-Based Word Sense Disambiguation For SENSEVAL-2
</title>
<note confidence="0.374872">
Lim Beng Tat, Prof Zaharin Yusoff, Dr Tang Enya Kong and Dr Guo Cheng Ming
Unit Terjemahan Melalui Komputer,
Universiti Sains Malaysia,
11800, Pulau Pinang.
btlim, zarin, enyakong, cmguol@cs.usm.my
</note>
<sectionHeader confidence="0.877943" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999878818181818">
This paper describes a descriptive-
semantic-primitive-based method for
word sense disambiguation (WSD) with
a machine-tractable dictionary and
conceptual distance data among
primitives. This approach is using
unsupervised learning algorithm and
focuses only on the immediately
surrounding words and basis
morphological form to disambiguate a
word sense. This approach also agrees
with past observations that human only
requires a small window of a few words
to perform WSD. (Choueka &amp; Lusignan,
1985). In additional, this paper also
describes our experience in doing the
English all-word task in SENSEVAL-2.
Then, we will discuss the results in the
SENSEVAL-2 evaluation.
Apart from the description of current
system, possibilities for future work are
explored
</bodyText>
<sectionHeader confidence="0.725154" genericHeader="method">
1 Primitive-Based Word Sense Disambiguation
</sectionHeader>
<bodyText confidence="0.996876">
This system consists of three important
components: machine-tractable dictionary,
conceptual distance data and sense tagger that
uses a simple summation algorithm.
</bodyText>
<subsectionHeader confidence="0.995021">
1.1 Machine-Tractable Dictionary
</subsectionHeader>
<bodyText confidence="0.999943235294117">
The first one is Machine-Tractable
Dictionary (MTD) such as WordNet and
LDOCE (Longman Dictionary of
Contemporary English) especially LDOCE has
been used extensively in NLP research and
provide a broad set of senses for sense tagging.
MTD contains word senses and their definitions
are defined in term of descriptive and tagged
primitives (words attached with sense number).
Primitives are a set of words derived from
dictionary (Guo, 1989b) and it is used to define
the definition of a word sense. (For further
information about primitives, please refer to
Wilks.Y (1977)). For example, father#1 has a
definition defined by using four primitives that
are `titlelVrespect2&apos;, `priest3&apos; and `church4&apos;
(refer figure 1).
For SENSEVAL-2 competition, the pre-
release WordNet1.7 was used for this purpose.
After WordNet1.7 was downloaded, the entries
including their definition, sense number and
sense id in WordNet was extracted and written
into a temporary file. Primitives (not tagged)
were derived from the words used in the word
senses&apos; definition. Then, the first 7 words of the
definition text of the WordNet dictionary were
disambiguated using the information from an
existing MTD (LDOCE) and the derived
primitives (Guo, 1998a). The existing MTD
(LDOCE) contained word senses and the words
in their definition are already tagged.
Thus, a new MTD (the pre-release
WordNet 1.7) was ready for the usage of
tagging process.
</bodyText>
<subsectionHeader confidence="0.997024">
1.2 Conceptual Distance Data
</subsectionHeader>
<bodyText confidence="0.978302733333333">
Conceptual distance data is showing the
relatedness between two tagged primitives.
Basically, the conceptual distance data is
calculated by using content terms in the
definition to determine the relatedness measure
between two primitives layer by layer. The
definitions of the primitives are getting from the
existing MTD (LDOCE). It is important to note
that a tagged primitive is also a word sense. For
example, the first and second layer of
referential definition for word sense forecast2&apos;
is:
forecast2 [def] predictl in2 advance3
predictl [def] makel a2 prediction3 about4; tell1 in2
advance3
</bodyText>
<footnote confidence="0.67764">
1-referential layer: forecast2 predictl advance3
2-referential layer: predictl makel prediction3 telll
(note:&apos;advance3&apos; is omitted because it has been
counted in the first layer)
</footnote>
<page confidence="0.998191">
103
</page>
<bodyText confidence="0.981083166666667">
Formula used to compute the relatedness
percentage:
% for first layer of the first target word sense
and first layer of the second target word sense:
if q&lt;(nl+n2)/2 then p1 = (q/((nl+n2)/2)*70%
if q&gt;(nl+n2)/2 then p1 = 70%
</bodyText>
<equation confidence="0.8574516">
% for other layers:
x 1 = q 1 / ((n3+n4)/2)
x2 = q2 / ((n 1 +n4)/2)
x3 = q3 / ((n2+n3)/2)
p2=((x 1+x2+x3)/3)*30%
</equation>
<bodyText confidence="0.953913416666667">
The total value = pl+p2
n1 = no. of the element in the first layer of first
target word sense
n2 = no. of the element in the first layer of
second target word sense
n3 = no. of the element in the second layer of
first target word sense
n4 = no. of the element in the second layer of
second target word sense
q, ql, q2, q3 = no. of common content terms
for each comparison
pl, p2 = final value of the relatedness measure
</bodyText>
<subsectionHeader confidence="0.998086">
1.3 Sense Tagger
</subsectionHeader>
<bodyText confidence="0.9999198">
The third one is sense tagger. Sense tagger
will get the input from MTD and its conceptual
distance data among primitives to do the word
sense disambiguation. Currently, the tagger
consists of three processes:
</bodyText>
<listItem confidence="0.999982">
• Preprocess process.
• Dictionary look-up process
• Numerical calculation algorithm
</listItem>
<bodyText confidence="0.999890782608696">
In the preprocess process, test data, which is
downloaded for the usage of SENSEVAL-2, is
going through several processes before tagging
process takes place. The first process is
separating the given text into sentences using
full stops as separator. After that, the words in
the sentences that do not require tagging will be
removed, leaving only the heads (words to be
sense-tagged) behind. Then, each word in the
sentences will be stemmed, leaving only
morphological root. The list of heads is then cut
into chunks of three successive heads to be
tagged in seconds.
In dictionary look-up module, word senses
with their definition for each of the words in a
chunk is extracted from MTD.
After that, sense tagger will use numerical,
calculation algorithm to choose the suitable word
sense for the words in the sentence. This
algorithm is to compute the path value among the
definition of the word senses in a sentence. This is
done first, by summing up the semantic data from
conceptual distance data when comparison among
primitives in the definitions for the word sense
pairs in the sentence. After that, the result of
summation has to be multiplied with the distance
value between the two words in the sentence. This
distance value basically depends on total words in
a sentence. For example, sentence &amp;quot;Father marry
couple&amp;quot;, the distance value for &apos;father&apos; and
`marry&apos; is 2 whereas the distance value for
&apos;father&apos; and &apos;couple&apos; is 1. This is because word
&apos;father&apos; is closer to the word &apos;marry&apos; than
&apos;couple&apos;. Then this computation continues for the
other of word sense pairs.
Finally, this algorithm will compare the path
values for the combination of word senses in a
sentence and find the highest path value. Then
this algorithm assigns the best combination of
senses to each word in the sentence.
For example, with reference to Figure 1,
assume that words such as &apos;father&apos;, &apos;many&apos; and
&apos;couple&apos; have two senses only.
In the first step, definition of sense 1 from
&apos;father&apos; will compare with definition of sense 1
from `marry&apos;.
</bodyText>
<table confidence="0.907557588235294">
father 1 marry 1 value
title 1 take 1 xl
person2 x2
marriage3 x3
respect2 takel x4
person2 x5
marriage3 x6
priest3 takel x7
person2 x8
marriage3 x9
church4 takel x10
person2 x11
marriage3 x12
Total xl+x2+...x 12=X
Total comparison 12
(Note: xi, x2, ....x12 are the values accessed from
conceptual data. )
</table>
<bodyText confidence="0.999637818181818">
In the second step, definition of sense 1 from
&apos;father&apos; will compare with definition of sense 1
from `couple&apos;. The total comparison is 4*4=16
and total value extracted from conceptual
distance data is Y. Then in the third step,
definition of sense 1 from &apos;couple&apos; will
compare with definition of sense 1 from
`marry&apos;. The total comparison is 4*3=12 and
total value extracted from conceptual distance
data is Z. The calculations for second step and
third are as same as the step.
</bodyText>
<page confidence="0.998078">
104
</page>
<bodyText confidence="0.999378">
So, the path value for fatherl marryl couplel
= 2(X/12) +Y/16 + 2(Z/12).
Formula used to compute path value:
Path value=/(distance)(s_i / total comparison)
where n = the total of words sense pairs , s =
the total summation of values getting from
conceptual distance data for i-th of word sense
pairs.
This process will continue for other
combination of word senses:
</bodyText>
<equation confidence="0.852545285714286">
fatherl marryl couple2
fatherl marry2 couptel
fatherl marry2 couple2
father2 marryl couplel
father2 marryl couple2
father2 marry2 couplel
father2 marry2 couple2
</equation>
<bodyText confidence="0.999853666666667">
The total combination of word sense for this
example is 2*2*2=8. Finally, this algorithm
will compare the path values for the
combination of word senses in a sentence and
find the most suitable combination of word
senses. (Please refer to Figure 2)
</bodyText>
<sectionHeader confidence="0.601126" genericHeader="method">
2 Result
</sectionHeader>
<table confidence="0.997607285714286">
System Number Course Fine Grained
of Grained Precision/
prinndves Precision/ Recall
Recall
usml 492 35.5% / 34.7% 34.5% / 33.8%
usm2 478 37.0% / 37.0% 36.0% / 36.0%
usm3 4000 34.4% / 34.4% 33.6% / 33.6%
</table>
<tableCaption confidence="0.999749">
Table 1: SENSEVAL-2 English All Word Results
</tableCaption>
<equation confidence="0.498684">
(note:usm = Universiti Sains Malaysia)
</equation>
<bodyText confidence="0.999875">
With reference to the above table, usml,
usm2 and usm3 are three systems that are
different in the number of primitives used in
MTD as well as in the conceptual distance data
and also MTD used. MTD used in usml is less
comprehensive compare to MTD used in usm2
and usm3. More comprehensive is meaning that
each of the entries is represented by a more
complete set of primitives. MTD used in usm2
and usm3 is the same. Because of we are
focusing more on speed of the system, overall
of the results decreases when only the head
words are considered.
</bodyText>
<page confidence="0.550872">
3 Future extension of the system
</page>
<bodyText confidence="0.999166130434783">
In order to improve the existing algorithm, we
need to avoid repeated calculation especially
repeated comparison among the primitives. The
concept of dynamic programming is needed to
reduce the calculation. Basically, by using this
method, result of the calculation is stored in
memory so that the result can be accessed easily
later when it is needed. As a result, although
this method will increase the memory usage, it
can also increase speed of the calculation
significantly especially when a long sentence is
processed. This is important because since the
speed of the algorithm is increasing, it can be
used in the real time application such
information retrieval system especially in the
Internet.
In additional, the accuracy of the system can
be increased because more words in a sentence
can be considered when a target word is tagged.
It is also important to note that this system not
only can be used for English language, it can
also be used in the other languages such Bahasa
Malaysia, Chinese and Japanese.
</bodyText>
<sectionHeader confidence="0.584855" genericHeader="conclusions">
Conclusion
</sectionHeader>
<bodyText confidence="0.999912166666667">
In this paper, we have illustrated the overall
architecture of our application of unsupervised
learning technique to word sense
disambiguation. Besides that, we have also
presented that how our application in handling
the given sentence and how we manage to
complete the English all task given by
SENSEVAL-2 competition. In additional, we
illustrated the improvement over the algorithm
we have presented in this paper. This is to make
the algorithm becoming more efficient and
practical to implement in real time application.
</bodyText>
<sectionHeader confidence="0.988484" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9969226">
Guo, C-M (1989a) &amp;quot;Constructing a Machine-
Tractable Dictionary from Longman Dictionary
of Contemporary English.&amp;quot;. Doctoral dissertation.
New Mexico State University.
Guo, C-M (1989b) &amp;quot;Deriving a natural set of
semantic primitives from Longman Dictionary of
Contemporary English.&amp;quot; Proceedings of the
Second Irish Conference on Artificial Intelligence
and Cognitive Science. 218-227
Wilks, Y. (1977) &amp;quot;Good and Bad Arguments About
Semantic Primitives.&amp;quot; In Communication and
Cognition, Vol 10, No 3/4.
Y. Choueka and S.Lusigna. (1985). &amp;quot;Disambiguation
by Short Contexts&amp;quot;. Computer and the
Humanities. 19:147-157.
</reference>
<page confidence="0.995486">
105
</page>
<figure confidence="0.995715">
Father marry couple
Definitions Definitions Definitions Values
./
Sense 1- titlel respect2
priest3 church4
Sense 2- ....
Sense 1 — takel person2
marriage3
Sense 2 -
Sense 1- manl woman2
husband3 wife4
Sense 2 -
X
</figure>
<figureCaption confidence="0.999124">
Figure 1: Example for sense-pair comparison among the words in a sentence.
</figureCaption>
<figure confidence="0.576019833333333">
Input:
A chunk of words
output:
A list of word senses
(each correspond to
an input word)
</figure>
<figureCaption confidence="0.981158">
Figure 2: Sense Tagger
</figureCaption>
<figure confidence="0.999691352941176">
Machine Tractable
Dictionary
entries Definition
a xxxxxx
xxxxxx
Preprocess
Definition
Extractor
a b c....z
A chunk of
preprocessed
words
Conceptual
Distance Data
al b2 c3....zN
Numerical
Calculation
</figure>
<page confidence="0.953772">
106
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000448">
<title confidence="0.948436">Primitive-Based Word Sense Disambiguation For SENSEVAL-2</title>
<author confidence="0.938653">Lim Beng Tat</author>
<author confidence="0.938653">Zaharin Yusoff</author>
<author confidence="0.938653">Dr Tang Enya Kong Guo Cheng Ming</author>
<affiliation confidence="0.982581">Unit Terjemahan Melalui Komputer, Universiti Sains Malaysia,</affiliation>
<address confidence="0.998791">11800, Pulau Pinang.</address>
<email confidence="0.982074">btlim,zarin,enyakong,cmguol@cs.usm.my</email>
<abstract confidence="0.942306152727272">This paper describes a descriptivesemantic-primitive-based method for word sense disambiguation (WSD) with a machine-tractable dictionary and conceptual distance data among primitives. This approach is using unsupervised learning algorithm and focuses only on the immediately surrounding words and morphological form to disambiguate a word sense. This approach also agrees with past observations that human only requires a small window of a few words to perform WSD. (Choueka &amp; Lusignan, 1985). In additional, this paper also describes our experience in doing the English all-word task in SENSEVAL-2. Then, we will discuss the results in the SENSEVAL-2 evaluation. Apart from the description of current system, possibilities for future work are explored Word Sense Disambiguation This system consists of three important components: machine-tractable dictionary, conceptual distance data and sense tagger that uses a simple summation algorithm. Dictionary The first one is Machine-Tractable Dictionary (MTD) such as WordNet and LDOCE (Longman Dictionary of Contemporary English) especially LDOCE has been used extensively in NLP research and provide a broad set of senses for sense tagging. MTD contains word senses and their definitions are defined in term of descriptive and tagged primitives (words attached with sense number). Primitives are a set of words derived from dictionary (Guo, 1989b) and it is used to define the definition of a word sense. (For further information about primitives, please refer to Wilks.Y (1977)). For example, father#1 has a definition defined by using four primitives that `priest3&apos; (refer figure 1). For SENSEVAL-2 competition, the prerelease WordNet1.7 was used for this purpose. After WordNet1.7 was downloaded, the entries including their definition, sense number and sense id in WordNet was extracted and written into a temporary file. Primitives (not tagged) were derived from the words used in the word senses&apos; definition. Then, the first 7 words of the definition text of the WordNet dictionary were disambiguated using the information from an existing MTD (LDOCE) and the derived primitives (Guo, 1998a). The existing MTD (LDOCE) contained word senses and the words in their definition are already tagged. Thus, a new MTD (the pre-release WordNet 1.7) was ready for the usage of tagging process. 1.2 Conceptual Distance Data Conceptual distance data is showing the relatedness between two tagged primitives. Basically, the conceptual distance data is calculated by using content terms in the definition to determine the relatedness measure between two primitives layer by layer. The definitions of the primitives are getting from the existing MTD (LDOCE). It is important to note that a tagged primitive is also a word sense. For example, the first and second layer of definition for word sense is: forecast2 [def] predictl in2 advance3 [def] makel a2 prediction3 about4; advance3 1-referential layer: forecast2 predictl advance3 2-referential layer: predictl makel prediction3 telll (note:&apos;advance3&apos; is omitted because it has been counted in the first layer) 103 Formula used to compute the relatedness percentage: % for first layer of the first target word sense and first layer of the second target word sense: if q&lt;(nl+n2)/2 then p1 = (q/((nl+n2)/2)*70% if q&gt;(nl+n2)/2 then p1 = 70% % for other layers: x 1 = q 1 / ((n3+n4)/2) x2 = q2 / ((n 1 +n4)/2) x3 = q3 / ((n2+n3)/2) p2=((x 1+x2+x3)/3)*30% The total value = pl+p2 n1 = no. of the element in the first layer of first target word sense n2 = no. of the element in the first layer of second target word sense n3 = no. of the element in the second layer of first target word sense n4 = no. of the element in the second layer of second target word sense q, ql, q2, q3 = no. of common content terms for each comparison pl, p2 = final value of the relatedness measure 1.3 Sense Tagger The third one is sense tagger. Sense tagger will get the input from MTD and its conceptual distance data among primitives to do the word sense disambiguation. Currently, the tagger consists of three processes: • Preprocess process. • Dictionary look-up process • Numerical calculation algorithm In the preprocess process, test data, which is downloaded for the usage of SENSEVAL-2, is going through several processes before tagging process takes place. The first process is separating the given text into sentences using full stops as separator. After that, the words in the sentences that do not require tagging will be removed, leaving only the heads (words to be sense-tagged) behind. Then, each word in the sentences will be stemmed, leaving only morphological root. The list of heads is then cut into chunks of three successive heads to be tagged in seconds. In dictionary look-up module, word senses with their definition for each of the words in a chunk is extracted from MTD. After that, sense tagger will use numerical, calculation algorithm to choose the suitable word sense for the words in the sentence. This algorithm is to compute the path value among the definition of the word senses in a sentence. This is done first, by summing up the semantic data from conceptual distance data when comparison among primitives in the definitions for the word sense pairs in the sentence. After that, the result of summation has to be multiplied with the distance value between the two words in the sentence. This distance value basically depends on total words in a sentence. For example, sentence &amp;quot;Father marry the distance value for 2 whereas the distance value for is This is because word closer to the word this computation continues for the other of word sense pairs. Finally, this algorithm will compare the path values for the combination of word senses in a sentence and find the highest path value. Then this algorithm assigns the best combination of senses to each word in the sentence. For example, with reference to Figure 1, that words such as &apos;many&apos; two senses only. In the first step, definition of sense 1 from compare with definition of sense 1 father 1 marry 1 value title 1 take 1 xl person2 x2 marriage3 x3 respect2 takel x4 person2 x5 marriage3 x6 priest3 takel x7 person2 x8 marriage3 x9 church4 takel x10 person2 x11 marriage3 x12 Total xl+x2+...x 12=X Total comparison 12 (Note: xi, x2, ....x12 are the values accessed from conceptual data. ) In the second step, definition of sense 1 from compare with definition of sense 1 total comparison is 4*4=16 and total value extracted from conceptual distance data is Y. Then in the third step, of sense 1 from compare with definition of sense 1 from total comparison is 4*3=12 and total value extracted from conceptual distance data is Z. The calculations for second step and third are as same as the step. 104 So, the path value for fatherl marryl couplel = 2(X/12) +Y/16 + 2(Z/12). Formula used to compute path value: Path value=/(distance)(s_i / total comparison) where n = the total of words sense pairs , s = the total summation of values getting from conceptual distance data for i-th of word sense pairs. This process will continue for other combination of word senses: fatherl marryl couple2 fatherl marry2 couptel fatherl marry2 couple2 father2 marryl couplel father2 marryl couple2 father2 marry2 couplel father2 marry2 couple2 The total combination of word sense for this example is 2*2*2=8. Finally, this algorithm will compare the path values for the combination of word senses in a sentence and find the most suitable combination of word senses. (Please refer to Figure 2) 2 Result System of Course Grained Precision/ Recall Fine Grained Precision/ Recall prinndves usml 492 35.5% / 34.7% 34.5% / 33.8% usm2 478 37.0% / 37.0% 36.0% / 36.0% usm3 4000 34.4% / 34.4% 33.6% / 33.6% Table 1: SENSEVAL-2 English All Word Results (note:usm = Universiti Sains Malaysia) With reference to the above table, usml, usm2 and usm3 are three systems that are different in the number of primitives used in MTD as well as in the conceptual distance data also MTD used in usml is less comprehensive compare to MTD used in usm2 and usm3. More comprehensive is meaning that each of the entries is represented by a more complete set of primitives. MTD used in usm2 and usm3 is the same. Because of we are focusing more on speed of the system, overall of the results decreases when only the head words are considered. 3 Future extension of the system In order to improve the existing algorithm, we need to avoid repeated calculation especially repeated comparison among the primitives. The concept of dynamic programming is needed to reduce the calculation. Basically, by using this method, result of the calculation is stored in memory so that the result can be accessed easily later when it is needed. As a result, although this method will increase the memory usage, it can also increase speed of the calculation significantly especially when a long sentence is processed. This is important because since the speed of the algorithm is increasing, it can be used in the real time application such information retrieval system especially in the Internet. In additional, the accuracy of the system can be increased because more words in a sentence can be considered when a target word is tagged. It is also important to note that this system not only can be used for English language, it can also be used in the other languages such Bahasa Malaysia, Chinese and Japanese. Conclusion In this paper, we have illustrated the overall architecture of our application of unsupervised learning technique to word sense disambiguation. Besides that, we have also presented that how our application in handling the given sentence and how we manage to complete the English all task given by SENSEVAL-2 competition. In additional, we illustrated the improvement over the algorithm we have presented in this paper. This is to make the algorithm becoming more efficient and practical to implement in real time application. References (1989a) &amp;quot;Constructing Machine- Tractable Dictionary from Longman Dictionary of Contemporary English.&amp;quot;. Doctoral dissertation.</abstract>
<note confidence="0.944284">New Mexico State University. Guo, C-M (1989b) &amp;quot;Deriving a natural set of semantic primitives from Longman Dictionary of Contemporary English.&amp;quot; Proceedings of the Second Irish Conference on Artificial Intelligence and Cognitive Science. 218-227 Wilks, Y. (1977) &amp;quot;Good and Bad Arguments About Semantic Primitives.&amp;quot; In Communication and Cognition, Vol 10, No 3/4. Y. Choueka and S.Lusigna. (1985). &amp;quot;Disambiguation by Short Contexts&amp;quot;. Computer and the Humanities. 19:147-157. 105</note>
<title confidence="0.8030295">Father marry couple Definitions Definitions Definitions Values</title>
<abstract confidence="0.588747833333333">Sense 1titlel respect2 priest3 church4 Sense 2- .... Sense 1 — takel person2 marriage3 Sense 2 - Sense 1manl woman2 husband3 wife4 Sense 2 - X Figure 1: Example for sense-pair comparison among the words in a sentence. Input: of words A list of word (each correspond an input word) Figure 2: Sense Tagger Machine Tractable Dictionary entries Definition a xxxxxx xxxxxx Preprocess Definition Extractor a b c....z A chunk of preprocessed words</abstract>
<note confidence="0.8471355">Conceptual Distance Data al b2 c3....zN Numerical Calculation 106</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C-M Guo</author>
</authors>
<title>Constructing a MachineTractable Dictionary from Longman Dictionary of Contemporary English.&amp;quot;. Doctoral dissertation.</title>
<date>1989</date>
<institution>New Mexico State University.</institution>
<contexts>
<context position="1704" citStr="Guo, 1989" startWordPosition="241" endWordPosition="242">ee important components: machine-tractable dictionary, conceptual distance data and sense tagger that uses a simple summation algorithm. 1.1 Machine-Tractable Dictionary The first one is Machine-Tractable Dictionary (MTD) such as WordNet and LDOCE (Longman Dictionary of Contemporary English) especially LDOCE has been used extensively in NLP research and provide a broad set of senses for sense tagging. MTD contains word senses and their definitions are defined in term of descriptive and tagged primitives (words attached with sense number). Primitives are a set of words derived from dictionary (Guo, 1989b) and it is used to define the definition of a word sense. (For further information about primitives, please refer to Wilks.Y (1977)). For example, father#1 has a definition defined by using four primitives that are `titlelVrespect2&apos;, `priest3&apos; and `church4&apos; (refer figure 1). For SENSEVAL-2 competition, the prerelease WordNet1.7 was used for this purpose. After WordNet1.7 was downloaded, the entries including their definition, sense number and sense id in WordNet was extracted and written into a temporary file. Primitives (not tagged) were derived from the words used in the word senses&apos; defin</context>
</contexts>
<marker>Guo, 1989</marker>
<rawString>Guo, C-M (1989a) &amp;quot;Constructing a MachineTractable Dictionary from Longman Dictionary of Contemporary English.&amp;quot;. Doctoral dissertation. New Mexico State University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C-M Guo</author>
</authors>
<title>Deriving a natural set of semantic primitives from Longman Dictionary of Contemporary English.&amp;quot;</title>
<date>1989</date>
<booktitle>Proceedings of the Second Irish Conference on Artificial Intelligence and Cognitive Science.</booktitle>
<pages>218--227</pages>
<contexts>
<context position="1704" citStr="Guo, 1989" startWordPosition="241" endWordPosition="242">ee important components: machine-tractable dictionary, conceptual distance data and sense tagger that uses a simple summation algorithm. 1.1 Machine-Tractable Dictionary The first one is Machine-Tractable Dictionary (MTD) such as WordNet and LDOCE (Longman Dictionary of Contemporary English) especially LDOCE has been used extensively in NLP research and provide a broad set of senses for sense tagging. MTD contains word senses and their definitions are defined in term of descriptive and tagged primitives (words attached with sense number). Primitives are a set of words derived from dictionary (Guo, 1989b) and it is used to define the definition of a word sense. (For further information about primitives, please refer to Wilks.Y (1977)). For example, father#1 has a definition defined by using four primitives that are `titlelVrespect2&apos;, `priest3&apos; and `church4&apos; (refer figure 1). For SENSEVAL-2 competition, the prerelease WordNet1.7 was used for this purpose. After WordNet1.7 was downloaded, the entries including their definition, sense number and sense id in WordNet was extracted and written into a temporary file. Primitives (not tagged) were derived from the words used in the word senses&apos; defin</context>
</contexts>
<marker>Guo, 1989</marker>
<rawString>Guo, C-M (1989b) &amp;quot;Deriving a natural set of semantic primitives from Longman Dictionary of Contemporary English.&amp;quot; Proceedings of the Second Irish Conference on Artificial Intelligence and Cognitive Science. 218-227</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Wilks</author>
</authors>
<title>Good and Bad Arguments About Semantic Primitives.&amp;quot;</title>
<date>1977</date>
<journal>In Communication and Cognition,</journal>
<volume>10</volume>
<marker>Wilks, 1977</marker>
<rawString>Wilks, Y. (1977) &amp;quot;Good and Bad Arguments About Semantic Primitives.&amp;quot; In Communication and Cognition, Vol 10, No 3/4.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Choueka</author>
<author>S Lusigna</author>
</authors>
<title>Disambiguation by Short Contexts&amp;quot;. Computer and the Humanities.</title>
<date>1985</date>
<pages>19--147</pages>
<marker>Choueka, Lusigna, 1985</marker>
<rawString>Y. Choueka and S.Lusigna. (1985). &amp;quot;Disambiguation by Short Contexts&amp;quot;. Computer and the Humanities. 19:147-157.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>