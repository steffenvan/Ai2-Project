<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.008773">
<title confidence="0.910118">
XRCE-T: XIP temporal module for TempEval campaign
</title>
<author confidence="0.924011">
Caroline Hagège
</author>
<affiliation confidence="0.877672">
XEROX Research Centre Europe
</affiliation>
<address confidence="0.946472">
6, chemin de Maupertuis
38240 MEYLAN, FRANCE
</address>
<email confidence="0.998261">
Caroline.Hagege@xrce.xerox.com
</email>
<author confidence="0.900219">
Xavier Tannier
</author>
<affiliation confidence="0.853898">
XEROX Research Centre Europe
</affiliation>
<address confidence="0.9358305">
6, chemin de Maupertuis
38240 MEYLAN, FRANCE
</address>
<email confidence="0.999183">
Xavier.Tannier@xrce.xerox.com
</email>
<sectionHeader confidence="0.9939" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999774857142857">
We present the system we used for the
TempEval competition. This system relies
on a deep syntactic analyzer that has been
extended for the treatment of temporal ex-
pressions, thus making temporal processing
a complement to a better general purpose
text understanding system.
</bodyText>
<sectionHeader confidence="0.527766" genericHeader="keywords">
1 General presentation and system over-
view
</sectionHeader>
<bodyText confidence="0.999497846153846">
Although interest in temporal and aspectual phe-
nomena is not new in NLP and AI, temporal proc-
essing of real texts is a topic that has been of grow-
ing interest in the last years (Mani et al. 2005).
The work we have done concerning temporal
processing of texts is part of a more general proc-
ess in text understanding, integrated into a more
generic tool.
In this article, we present briefly our general
purpose analyzer XIP and explain how we perform
our three-level temporal processing. TempEval
experiments of our system are finally described
and results we obtained are discussed.
</bodyText>
<subsectionHeader confidence="0.6644485">
1.1 XIP – a general purpose deep syntactic
analyzer
</subsectionHeader>
<bodyText confidence="0.999397">
Our temporal processor, called XTM, is an exten-
sion of XIP (Xerox Incremental Parser (Aït Mok-
htar et al., 2002). XIP extracts basic grammatical
relations and also thematic roles in the form of de-
pendency links. See (Brun and Hagège 2003) for
details on deep linguistic processing using XIP.
XIP is rule-based and its architecture can roughly
be divided into the three following parts:
</bodyText>
<listItem confidence="0.999972285714286">
• A pre-processing stage handling tokeniza-
tion, morphological analysis and POS tag-
ging.
• A surface syntactic analysis stage consist-
ing in chunking the input and dealing with
Named Entity Recognition (NER).
• A deep syntactic analysis
</listItem>
<subsectionHeader confidence="0.9965425">
1.2 Intertwining temporal processing and
linguistic processing
</subsectionHeader>
<bodyText confidence="0.999979636363636">
The underlying idea is that temporal processing is
one of the necessary steps in a more general task of
text understanding. All temporal processing at the
sentence level is performed together with other
tasks of linguistic analysis. Association between
temporal expressions and events is considered as a
particular case of the more general task of attach-
ing thematic roles to predicates (the TIME and
DURATION roles). We will detail in sections 3.1
and 3.2 how low-level temporal processing is com-
bined with the rest of the linguistic processing.
</bodyText>
<sectionHeader confidence="0.735385" genericHeader="method">
2 Three levels of temporal processing
</sectionHeader>
<bodyText confidence="0.997617">
Temporal processing has the following purposes:
1) Recognizing and interpreting temporal expres-
sions, 2) Attaching these expressions to the corre-
sponding events1 they modify, 3) Ordering these
events using a set of temporal expressions we pre-
sent above.
We deliberately decided not to change our sys-
tem’s output in order to match TempEval gold-
standard EVENTs and TIMEX3s. This would have
</bodyText>
<footnote confidence="0.559843666666667">
1 We consider as events: verbs, deverbal nouns or any
kind of non-deverbal nouns from a pre-defined list (e.g.:
“sunrise” or “war”).
</footnote>
<page confidence="0.981646">
492
</page>
<bodyText confidence="0.956263428571429">
Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 492–495,
Prague, June 2007. c�2007 Association for Computational Linguistics
implied to change our parser’s behavior. As linking
events and temporal expressions is only a part of a
general syntactico-semantic process, changing this
part would have had bad consequences for the
other aspects of the parsing.
</bodyText>
<subsectionHeader confidence="0.993626">
2.1 Local level
</subsectionHeader>
<bodyText confidence="0.999986066666667">
Recognition of temporal expressions is performed
by local rules that can make use of left and/or right
context. Together with contextual rules, some ac-
tions are associated. These actions are meant to
attribute a value to the resulting temporal expres-
sion. Figure 1 illustrates this stage for a simple an-
chor date. An ADV (adverbial) node with associ-
ated Boolean features is built from linguistic ex-
pressions such as “4 years ago”. Note that there is
a call to a Python function (Roux, 2006)
“merge_anchor_and_dur” whose parameters are
three linguistic nodes (#0 represents the resulting
left-hand expression). The representation of the
values is close to TimeML format (Saurí et al,
2006).
</bodyText>
<subsectionHeader confidence="0.999208">
2.2 Sentence level
</subsectionHeader>
<bodyText confidence="0.997742869565217">
The sentence level is the place where some links
between temporal expressions and the events they
modify are established, as well as temporal rela-
tions between events in a same sentence.
Attaching temporal expressions to events
As a XIP grammar is developed in an incremental
way, at a first stage, any prepositional phrase (PP,
included temporal PP) is attached to the predicate
it modifies through a very general MOD (modifier)
dependency link. Then, in a later stage, these de-
pendency links are refined considering the nature
and the linguistic properties of the linked constitu-
ents.
In the case of temporal expressions, a specific
relation TEMP links the temporal expression and
the predicate it is attached to.
For instance, in the following sentence (ex-
tracted from trial data):
People began gathering in Abuja
Tuesday for the two day rally.
The following dependencies are extracted
TEMP(began, Tuesday)
TEMP(rally, two day)
</bodyText>
<figureCaption confidence="0.997319">
Figure 1: Local level processing, anchor date.
</figureCaption>
<bodyText confidence="0.976187066666667">
“Tuesday”is recognized as a date and “two day”
as a duration.
Temporal relations between events in the
same sentence
Using the temporal relations presented above,
the system can detect in certain syntactic configu-
rations if predicates in the sentence are temporally
related and what kind of relations exist between
them. When it is explicit in the text, a temporal
distance between the two events is also calculated.
The following example illustrates these temporal
dependencies:
This move comes a month after
Qantas suspended a number of
services.
In this sentence, the clause containing the verb
“suspended” is embedded into the main clause
headed by “comes”. These two events have a tem-
poral distance of one month, which is expressed by
the expression “a month after”. We obtain the fol-
lowing dependencies:
ORDER[before](suspended, comes)
DELTA(suspended, comes, a month)
Verbal tenses and aspect
Morphological analysis gives some information
about tenses. But the final tense of a complex ver-
bal chain is calculated considering not only mor-
phological clues, but also aspectual information.
Tenses of complex verbal chains may be under-
specified when there is insufficient context.
</bodyText>
<table confidence="0.8180578">
- DURATION - TEMPORAL RELATION
4Y BEFORE
REFERENT
ST (Speech Time)
4 years ago
4Y, BEFORE, ST
(4 years before ST)
ADV[tempexpr:+,anchor:+] =
#1[dur], adv#2[temp_rel,temp_ref],
where(merge anchor and dur(#2,#1,#0))
</table>
<page confidence="0.99715">
493
</page>
<bodyText confidence="0.992284375">
For instance, for the chain “has been taken”, we
extract “take” as the semantic head of the verbal
chain. The aspect is perfective and the tense of the
auxiliary “has” is present.
From this information, we deduce that this form is
either in present or in past. This is expressed the
following way:
PRES-OR-PAST(taken).
</bodyText>
<subsectionHeader confidence="0.997727">
2.3 Document level
</subsectionHeader>
<bodyText confidence="0.999981666666667">
Beyond sentence-level, the system is at the first
stage of development. We are only able to com-
plete relative dates when it refers to the document
creation time, and to infer new relations with the
help of composition rules, by saturating the graph
of temporal relations (Muller and Tannier, 2004).
</bodyText>
<sectionHeader confidence="0.9839485" genericHeader="method">
3 Adapting XTM to TempEval specifica-
tions
</sectionHeader>
<bodyText confidence="0.999837166666667">
The TempEval track consists of three different
tasks described in (Verhagen et al. 2007). Tem-
pEval guidelines present several differences with
respect to our own methodology. These differences
concern definitions of relations and events, as well
as choices about linking.
</bodyText>
<subsectionHeader confidence="0.981358">
3.1 TIMEX3 definition
</subsectionHeader>
<bodyText confidence="0.999819666666667">
TimeML definition of a temporal expression
(TIMEX3) is slightly different from what we con-
sider to be a temporal expression in XTM:
</bodyText>
<listItem confidence="0.942643">
• First, we incorporate signals (in, at...) into
temporal expressions boundaries. But, as
TIMEX3s are provided in the test collection,
a simple mapping is quite easy to perform.
• We also have a different tokenization for
complex temporal expressions. This tokeni-
zation is based on syntactic and semantic
properties of the whole expression.
</listItem>
<bodyText confidence="0.999616">
For example, our criteria make that we consider
“ten days ago yesterday&amp;quot; as a single temporal
expression, while &amp;quot;during 10 days in Decem-
ber&amp;quot; should be split into &amp;quot;during 10 days&amp;quot; and
&amp;quot;in December&amp;quot;.
</bodyText>
<subsectionHeader confidence="0.993929">
3.2 TIMEX3 linking
</subsectionHeader>
<bodyText confidence="0.997550230769231">
XTM does not handle temporal relations be-
tween events and durations. In our temporal model,
an event can have duration. However, this is not
represented by a temporal relation, but by an at-
tribute of the event. Durations included in a larger
temporal expression (like in “two days later”) in-
troduce an interval for the temporal relation: AF-
TER(A, B, interval: two days). Here again no tem-
poral relation is attributed with respect to the dura-
tion.
Therefore, we had to adapt our system so that it
is able to infer at least some relations between
events and durations. We used two ways to do so:
</bodyText>
<listItem confidence="0.983914571428572">
• An event having an explicit duration at-
tributed by XTM gets the relation OVER-
LAP with this duration.
• An event occurring, for example, “two
days after another one” (resp. “two days be-
fore”) gets the relation AFTER (resp. BE-
FORE) with this duration.
</listItem>
<bodyText confidence="0.977799">
Other relations are found (or not) by composi-
tion rules.
</bodyText>
<subsectionHeader confidence="0.993643">
3.3 TIMEX3 values
</subsectionHeader>
<bodyText confidence="0.999930166666667">
TempEval test collection provides a &amp;quot;value&amp;quot; attrib-
ute for each TIMEX3. However we did not use this
value, because we wanted to obtain an evaluation
as close as possible to a real world application. The
only value we used was the given Document Crea-
tion Time.
</bodyText>
<subsectionHeader confidence="0.992252">
3.4 EVENTs mapping
</subsectionHeader>
<bodyText confidence="0.999970666666667">
Event lists do not match either between
TempEval corpus and our system analysis. Unfor-
tunately, when a TempEval EVENT is not consid-
ered as an event by XTM, we did not find any suc-
cessful way to map this EVENT to another event
of the sentence.
</bodyText>
<subsectionHeader confidence="0.960434">
3.5 Temporal relation mapping
</subsectionHeader>
<bodyText confidence="0.998243666666667">
The set of temporal relations we use is the follow-
ing: AFTER, BEFORE, DURING, INCLUDES,
OVERLAPS, IS_OVERLAPPED AND EQUALS.
</bodyText>
<page confidence="0.997927">
494
</page>
<bodyText confidence="0.9997807">
This choice is explained in more details in (Muller
and Tannier, 2004).
Obtaining TempEval relations from our own re-
lations is straightforward: AFTER and BEFORE
are kept just as they are. The other relations or dis-
junctions of these relations are turned into OVER-
LAP. Disjunctions of relations containing AFTER
(resp. BEFORE) and OVERLAP-like relations are
turned into OVERLAP-OR-AFTER (resp. BE-
FORE-OR-OVERLAP).
</bodyText>
<sectionHeader confidence="0.999974" genericHeader="evaluation">
4 Results
</sectionHeader>
<bodyText confidence="0.9880484">
The trial, training and test sets of document pro-
vided were all subsets of the annotated TimeBank
corpus. For each task, two metrics are used, the
strict measure and the relaxed measure (see also
(Muller and Tannier, 2004)).
Our rule-based analyzer is designed to favor
precision. As our system is intended for use in in-
formation extraction, finding correct relations is
more important than finding a large number of re-
lations. That is why, at least for tasks A and B, we
do not assign a temporal relation when the parser
does not find any link. For the same reason, in our
opinion, the strict measure is not as valuable as the
relaxed one. We would argue that it does not really
make sense to use a strict metric in combination
with disjunctive relations.
Tasks A and B were evaluated together. We ob-
tained the best precision for relaxed matching
(0.79), but with a low recall (respectively 0.50).
Strict matching is not very different. Another inter-
esting figure is that less than 10% of the relations
are totally incorrect (e.g.: BEFORE instead of AF-
TER). As we said, this was our main aim.
Note that if we choose a default behavior
(OVERLAP for task A, BEFORE for task B,
which are respectively the most frequent relations)
for every undefined relation, we obtain precision
and recall of 0.69, which is lower than but not far
from the best team results.
Task C was more exploratory. Even more than
for task AB, the fact that we chose not to use the
provided TIMEX3 values makes the problem
harder. Our gross results are quite low. We used a
default OVERLAP for each unfound relation2 and
finally got equal precision and recall of 0.57.
2 The OVERLAP relation is the most frequent for task C
training data.
However, assigning OVERLAP to all 258 links
led to precision and recall of 0.508; no team man-
aged to bring a satisfying trade-off in this task.
</bodyText>
<sectionHeader confidence="0.998189" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999888454545454">
We described in this paper the system that we
adapted in order to participate to TempEval 2007
evaluation campaign. We obtained a good preci-
sion score and a very low rate of incorrect relations,
which makes the tool robust enough for informa-
tion extraction applications. Errors and low recall
are mostly due to parsing errors or underspecifica-
tion and to the fact that we gave priority to our
own theoretical choices concerning event and tem-
poral expression definitions and event-temporal
expression linking.
</bodyText>
<sectionHeader confidence="0.999431" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999900714285714">
James Allen, 1984. Toward a general theory of action
and time. Artificial Intelligence, 23:123-154.
Salah Aït-Mokhtar, Jean-Pierre Chanod and Claude
Roux. 2002. Robustness beyond Shallowness: Incre-
mental Deep Parsing. Natural Language Engineer-
ing, 8 :121-144
Caroline Brun and Caroline Hagege, 2003. Normaliza-
tion and Paraphrasing using Symbolic Methods, 2nd
Workshop on Paraphrasing, ACL 2003.
Inderjeet Mani, James Pustejovsky and Robert Gai-
zauskas (ed.) 2005. The Language of Time A reader.
Philippe Muller and Xavier Tannier 2004. Annotating
and measuring temporal relations in texts. In Pro-
ceedings of COLING 2004.
James Pustejovsky, Patrick Hanks, Roser Saurí, Andrew
See, Robert Gaizauskas, Andrea Setzer and Beth
Sundheim. 2003. The TIMEBANK Corpus. Corpus
Linguistics. Lancaster, U.K.
Claude Roux. 2006. Coupling a linguistic formalism
and a script language. CSLP-06, Coling-ACL.
Roser Saurí, Jessica Littman, Bob Knippen, Robert
Gaizauskas, Andrea Setzer and James Pustejovsky.
TimeML Annotation Guidelines. 2006.
Marc Verhagen, Robert Gaizauskas, Frank Schilder,
Mark Hepple, Graham Katz and James Pustejovsky.
2007. SemEval-2007 – Task 15: TempEval Temporal
Relation Identification. SemEval workshop in ACL
2007.
</reference>
<page confidence="0.999129">
495
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.082068">
<title confidence="0.989914">XRCE-T: XIP temporal module for TempEval campaign</title>
<author confidence="0.990786">Caroline Hagège</author>
<affiliation confidence="0.980039">XEROX Research Centre Europe</affiliation>
<address confidence="0.9071975">6, chemin de Maupertuis 38240 MEYLAN, FRANCE</address>
<email confidence="0.990301">Caroline.Hagege@xrce.xerox.com</email>
<author confidence="0.996662">Xavier Tannier</author>
<affiliation confidence="0.978841">XEROX Research Centre Europe</affiliation>
<address confidence="0.9070385">6, chemin de Maupertuis 38240 MEYLAN, FRANCE</address>
<email confidence="0.999515">Xavier.Tannier@xrce.xerox.com</email>
<abstract confidence="0.990326254180603">We present the system we used for the TempEval competition. This system relies on a deep syntactic analyzer that has been extended for the treatment of temporal expressions, thus making temporal processing a complement to a better general purpose text understanding system. 1 General presentation and system overview Although interest in temporal and aspectual phenomena is not new in NLP and AI, temporal processing of real texts is a topic that has been of growing interest in the last years (Mani et al. 2005). The work we have done concerning temporal processing of texts is part of a more general process in text understanding, integrated into a more generic tool. In this article, we present briefly our general purpose analyzer XIP and explain how we perform our three-level temporal processing. TempEval experiments of our system are finally described and results we obtained are discussed. 1.1 XIP – a general purpose deep syntactic analyzer Our temporal processor, called XTM, is an extension of XIP (Xerox Incremental Parser (Aït Mokhtar et al., 2002). XIP extracts basic grammatical relations and also thematic roles in the form of dependency links. See (Brun and Hagège 2003) for details on deep linguistic processing using XIP. XIP is rule-based and its architecture can roughly be divided into the three following parts: • A pre-processing stage handling tokenization, morphological analysis and POS tagging. • A surface syntactic analysis stage consisting in chunking the input and dealing with Named Entity Recognition (NER). • A deep syntactic analysis 1.2 Intertwining temporal processing and linguistic processing The underlying idea is that temporal processing is one of the necessary steps in a more general task of text understanding. All temporal processing at the sentence level is performed together with other tasks of linguistic analysis. Association between temporal expressions and events is considered as a particular case of the more general task of attaching thematic roles to predicates (the TIME and DURATION roles). We will detail in sections 3.1 and 3.2 how low-level temporal processing is combined with the rest of the linguistic processing. 2 Three levels of temporal processing Temporal processing has the following purposes: 1) Recognizing and interpreting temporal expressions, 2) Attaching these expressions to the correthey modify, 3) Ordering these events using a set of temporal expressions we present above. We deliberately decided not to change our system’s output in order to match TempEval goldstandard EVENTs and TIMEX3s. This would have 1We consider as events: verbs, deverbal nouns or any kind of non-deverbal nouns from a pre-defined list (e.g.: “sunrise” or “war”). 492 of the 4th International Workshop on Semantic Evaluations pages 492–495, June 2007. Association for Computational Linguistics implied to change our parser’s behavior. As linking events and temporal expressions is only a part of a general syntactico-semantic process, changing this part would have had bad consequences for the other aspects of the parsing. 2.1 Local level Recognition of temporal expressions is performed by local rules that can make use of left and/or right context. Together with contextual rules, some actions are associated. These actions are meant to attribute a value to the resulting temporal expression. Figure 1 illustrates this stage for a simple anchor date. An ADV (adverbial) node with associated Boolean features is built from linguistic expressions such as “4 years ago”. Note that there is a call to a Python function (Roux, 2006) “merge_anchor_and_dur” whose parameters are linguistic nodes the resulting left-hand expression). The representation of the values is close to TimeML format (Saurí et al, 2006). 2.2 Sentence level The sentence level is the place where some links between temporal expressions and the events they modify are established, as well as temporal relations between events in a same sentence. Attaching temporal expressions to events As a XIP grammar is developed in an incremental way, at a first stage, any prepositional phrase (PP, included temporal PP) is attached to the predicate it modifies through a very general MOD (modifier) dependency link. Then, in a later stage, these dependency links are refined considering the nature and the linguistic properties of the linked constituents. In the case of temporal expressions, a specific relation TEMP links the temporal expression and the predicate it is attached to. For instance, in the following sentence (extracted from trial data): begangathering in Abuja the day rally. The following dependencies are extracted TEMP(began, Tuesday) TEMP(rally, two day) Figure 1: Local level processing, anchor date. “Tuesday”is recognized as a date and “two day” as a duration. Temporal relations between events in the same sentence Using the temporal relations presented above, the system can detect in certain syntactic configurations if predicates in the sentence are temporally related and what kind of relations exist between them. When it is explicit in the text, a temporal distance between the two events is also calculated. The following example illustrates these temporal dependencies: move comes month after suspendeda number of services. In this sentence, the clause containing the verb “suspended” is embedded into the main clause headed by “comes”. These two events have a temporal distance of one month, which is expressed by the expression “a month after”. We obtain the following dependencies: ORDER[before](suspended, comes) DELTA(suspended, comes, a month) Verbal tenses and aspect Morphological analysis gives some information about tenses. But the final tense of a complex verbal chain is calculated considering not only morphological clues, but also aspectual information. Tenses of complex verbal chains may be underspecified when there is insufficient context. RELATION 4Y BEFORE Time) 4 years ago ST (4 years before ST) ADV[tempexpr:+,anchor:+] = where(merge anchor and dur(#2,#1,#0)) 493 For instance, for the chain “has been taken”, we extract “take” as the semantic head of the verbal chain. The aspect is perfective and the tense of the auxiliary “has” is present. From this information, we deduce that this form is either in present or in past. This is expressed the following way: PRES-OR-PAST(taken). 2.3 Document level Beyond sentence-level, the system is at the first stage of development. We are only able to complete relative dates when it refers to the document creation time, and to infer new relations with the help of composition rules, by saturating the graph of temporal relations (Muller and Tannier, 2004). 3 Adapting XTM to TempEval specifications The TempEval track consists of three different tasks described in (Verhagen et al. 2007). TempEval guidelines present several differences with respect to our own methodology. These differences concern definitions of relations and events, as well as choices about linking. 3.1 TIMEX3 definition TimeML definition of a temporal expression (TIMEX3) is slightly different from what we consider to be a temporal expression in XTM: • First, we incorporate signals (in, at...) into temporal expressions boundaries. But, as TIMEX3s are provided in the test collection, a simple mapping is quite easy to perform. • We also have a different tokenization for complex temporal expressions. This tokenization is based on syntactic and semantic properties of the whole expression. For example, our criteria make that we consider “ten days ago yesterday&amp;quot; as a single temporal expression, while &amp;quot;during 10 days in December&amp;quot; should be split into &amp;quot;during 10 days&amp;quot; and &amp;quot;in December&amp;quot;. 3.2 TIMEX3 linking XTM does not handle temporal relations between events and durations. In our temporal model, an event can have duration. However, this is not represented by a temporal relation, but by an attribute of the event. Durations included in a larger temporal expression (like in “two days later”) introduce an interval for the temporal relation: AF- TER(A, B, interval: two days). Here again no temporal relation is attributed with respect to the duration. Therefore, we had to adapt our system so that it is able to infer at least some relations between events and durations. We used two ways to do so: • An event having an explicit duration attributed by XTM gets the relation OVER- LAP with this duration. • An event occurring, for example, “two days after another one” (resp. “two days before”) gets the relation AFTER (resp. BE- FORE) with this duration. Other relations are found (or not) by composition rules. 3.3 TIMEX3 values TempEval test collection provides a &amp;quot;value&amp;quot; attribute for each TIMEX3. However we did not use this value, because we wanted to obtain an evaluation as close as possible to a real world application. The only value we used was the given Document Creation Time. 3.4 EVENTs mapping Event lists do not match either between TempEval corpus and our system analysis. Unfortunately, when a TempEval EVENT is not considered as an event by XTM, we did not find any successful way to map this EVENT to another event of the sentence. 3.5 Temporal relation mapping The set of temporal relations we use is the following: AFTER, BEFORE, DURING, INCLUDES, OVERLAPS, IS_OVERLAPPED AND EQUALS. 494 This choice is explained in more details in (Muller and Tannier, 2004). Obtaining TempEval relations from our own relations is straightforward: AFTER and BEFORE are kept just as they are. The other relations or disjunctions of these relations are turned into OVER- LAP. Disjunctions of relations containing AFTER (resp. BEFORE) and OVERLAP-like relations are turned into OVERLAP-OR-AFTER (resp. BE- FORE-OR-OVERLAP). 4 Results The trial, training and test sets of document provided were all subsets of the annotated TimeBank corpus. For each task, two metrics are used, the strict measure and the relaxed measure (see also (Muller and Tannier, 2004)). Our rule-based analyzer is designed to favor precision. As our system is intended for use in information extraction, finding correct relations is more important than finding a large number of relations. That is why, at least for tasks A and B, we do not assign a temporal relation when the parser does not find any link. For the same reason, in our opinion, the strict measure is not as valuable as the relaxed one. We would argue that it does not really make sense to use a strict metric in combination with disjunctive relations. Tasks A and B were evaluated together. We obtained the best precision for relaxed matching (0.79), but with a low recall (respectively 0.50). Strict matching is not very different. Another interesting figure is that less than 10% of the relations are totally incorrect (e.g.: BEFORE instead of AF- TER). As we said, this was our main aim. Note that if we choose a default behavior (OVERLAP for task A, BEFORE for task B, which are respectively the most frequent relations) for every undefined relation, we obtain precision and recall of 0.69, which is lower than but not far from the best team results. Task C was more exploratory. Even more than for task AB, the fact that we chose not to use the provided TIMEX3 values makes the problem harder. Our gross results are quite low. We used a OVERLAP for each unfound and finally got equal precision and recall of 0.57. 2The OVERLAP relation is the most frequent for task C training data. However, assigning OVERLAP to all 258 links led to precision and recall of 0.508; no team managed to bring a satisfying trade-off in this task. 5 Conclusion We described in this paper the system that we adapted in order to participate to TempEval 2007 evaluation campaign. We obtained a good precision score and a very low rate of incorrect relations, which makes the tool robust enough for information extraction applications. Errors and low recall are mostly due to parsing errors or underspecification and to the fact that we gave priority to our own theoretical choices concerning event and temporal expression definitions and event-temporal expression linking.</abstract>
<note confidence="0.946086">References James Allen, 1984. Toward a general theory of action time. 23:123-154. Salah Aït-Mokhtar, Jean-Pierre Chanod and Claude 2002. beyond Shallowness: Incre- Deep Natural Language Engineering, 8 :121-144 Brun and Caroline Hagege, 2003. Normalizaand Paraphrasing using Symbolic Workshop on Paraphrasing, ACL 2003. Inderjeet Mani, James Pustejovsky and Robert Gai- (ed.) 2005. Language of Time A reader. Muller and Xavier Tannier 2004. measuring temporal relations in texts. Proceedings of COLING 2004. James Pustejovsky, Patrick Hanks, Roser Saurí, Andrew See, Robert Gaizauskas, Andrea Setzer and Beth 2003. The TIMEBANK Corpus. U.K. Roux. 2006. a linguistic formalism a script language. Coling-ACL. Roser Saurí, Jessica Littman, Bob Knippen, Robert Gaizauskas, Andrea Setzer and James Pustejovsky. TimeML Annotation Guidelines. 2006.</note>
<author confidence="0.8077715">Marc Verhagen</author>
<author confidence="0.8077715">Robert Gaizauskas</author>
<author confidence="0.8077715">Frank Schilder</author>
<author confidence="0.8077715">Mark Hepple</author>
<author confidence="0.8077715">Graham Katz</author>
<author confidence="0.8077715">James Pustejovsky</author>
<note confidence="0.8537365">Task 15: TempEval Temporal Identification. workshop in ACL 2007. 495</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>James Allen</author>
</authors>
<title>Toward a general theory of action and time.</title>
<date>1984</date>
<journal>Artificial Intelligence,</journal>
<pages>23--123</pages>
<marker>Allen, 1984</marker>
<rawString>James Allen, 1984. Toward a general theory of action and time. Artificial Intelligence, 23:123-154.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Salah Aït-Mokhtar</author>
<author>Jean-Pierre Chanod</author>
<author>Claude Roux</author>
</authors>
<title>Robustness beyond Shallowness: Incremental Deep Parsing.</title>
<date>2002</date>
<journal>Natural Language Engineering,</journal>
<volume>8</volume>
<pages>121--144</pages>
<marker>Aït-Mokhtar, Chanod, Roux, 2002</marker>
<rawString>Salah Aït-Mokhtar, Jean-Pierre Chanod and Claude Roux. 2002. Robustness beyond Shallowness: Incremental Deep Parsing. Natural Language Engineering, 8 :121-144</rawString>
</citation>
<citation valid="true">
<authors>
<author>Caroline Brun</author>
<author>Caroline Hagege</author>
</authors>
<date>2003</date>
<booktitle>Normalization and Paraphrasing using Symbolic Methods, 2nd Workshop on Paraphrasing, ACL</booktitle>
<marker>Brun, Hagege, 2003</marker>
<rawString>Caroline Brun and Caroline Hagege, 2003. Normalization and Paraphrasing using Symbolic Methods, 2nd Workshop on Paraphrasing, ACL 2003.</rawString>
</citation>
<citation valid="true">
<title>The Language of Time A reader.</title>
<date>2005</date>
<editor>Inderjeet Mani, James Pustejovsky and Robert Gaizauskas (ed.)</editor>
<marker>2005</marker>
<rawString>Inderjeet Mani, James Pustejovsky and Robert Gaizauskas (ed.) 2005. The Language of Time A reader.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philippe Muller</author>
<author>Xavier Tannier</author>
</authors>
<title>Annotating and measuring temporal relations in texts.</title>
<date>2004</date>
<booktitle>In Proceedings of COLING</booktitle>
<contexts>
<context position="7182" citStr="Muller and Tannier, 2004" startWordPosition="1125" endWordPosition="1128">ce, for the chain “has been taken”, we extract “take” as the semantic head of the verbal chain. The aspect is perfective and the tense of the auxiliary “has” is present. From this information, we deduce that this form is either in present or in past. This is expressed the following way: PRES-OR-PAST(taken). 2.3 Document level Beyond sentence-level, the system is at the first stage of development. We are only able to complete relative dates when it refers to the document creation time, and to infer new relations with the help of composition rules, by saturating the graph of temporal relations (Muller and Tannier, 2004). 3 Adapting XTM to TempEval specifications The TempEval track consists of three different tasks described in (Verhagen et al. 2007). TempEval guidelines present several differences with respect to our own methodology. These differences concern definitions of relations and events, as well as choices about linking. 3.1 TIMEX3 definition TimeML definition of a temporal expression (TIMEX3) is slightly different from what we consider to be a temporal expression in XTM: • First, we incorporate signals (in, at...) into temporal expressions boundaries. But, as TIMEX3s are provided in the test collect</context>
<context position="9880" citStr="Muller and Tannier, 2004" startWordPosition="1582" endWordPosition="1585">to obtain an evaluation as close as possible to a real world application. The only value we used was the given Document Creation Time. 3.4 EVENTs mapping Event lists do not match either between TempEval corpus and our system analysis. Unfortunately, when a TempEval EVENT is not considered as an event by XTM, we did not find any successful way to map this EVENT to another event of the sentence. 3.5 Temporal relation mapping The set of temporal relations we use is the following: AFTER, BEFORE, DURING, INCLUDES, OVERLAPS, IS_OVERLAPPED AND EQUALS. 494 This choice is explained in more details in (Muller and Tannier, 2004). Obtaining TempEval relations from our own relations is straightforward: AFTER and BEFORE are kept just as they are. The other relations or disjunctions of these relations are turned into OVERLAP. Disjunctions of relations containing AFTER (resp. BEFORE) and OVERLAP-like relations are turned into OVERLAP-OR-AFTER (resp. BEFORE-OR-OVERLAP). 4 Results The trial, training and test sets of document provided were all subsets of the annotated TimeBank corpus. For each task, two metrics are used, the strict measure and the relaxed measure (see also (Muller and Tannier, 2004)). Our rule-based analyze</context>
</contexts>
<marker>Muller, Tannier, 2004</marker>
<rawString>Philippe Muller and Xavier Tannier 2004. Annotating and measuring temporal relations in texts. In Proceedings of COLING 2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
<author>Patrick Hanks</author>
<author>Roser Saurí</author>
<author>Andrew See</author>
<author>Robert Gaizauskas</author>
<author>Andrea Setzer</author>
<author>Beth Sundheim</author>
</authors>
<title>The TIMEBANK Corpus. Corpus Linguistics.</title>
<date>2003</date>
<location>Lancaster, U.K.</location>
<marker>Pustejovsky, Hanks, Saurí, See, Gaizauskas, Setzer, Sundheim, 2003</marker>
<rawString>James Pustejovsky, Patrick Hanks, Roser Saurí, Andrew See, Robert Gaizauskas, Andrea Setzer and Beth Sundheim. 2003. The TIMEBANK Corpus. Corpus Linguistics. Lancaster, U.K.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claude Roux</author>
</authors>
<title>Coupling a linguistic formalism and a script language.</title>
<date>2006</date>
<tech>CSLP-06, Coling-ACL.</tech>
<contexts>
<context position="3948" citStr="Roux, 2006" startWordPosition="622" endWordPosition="623">mantic process, changing this part would have had bad consequences for the other aspects of the parsing. 2.1 Local level Recognition of temporal expressions is performed by local rules that can make use of left and/or right context. Together with contextual rules, some actions are associated. These actions are meant to attribute a value to the resulting temporal expression. Figure 1 illustrates this stage for a simple anchor date. An ADV (adverbial) node with associated Boolean features is built from linguistic expressions such as “4 years ago”. Note that there is a call to a Python function (Roux, 2006) “merge_anchor_and_dur” whose parameters are three linguistic nodes (#0 represents the resulting left-hand expression). The representation of the values is close to TimeML format (Saurí et al, 2006). 2.2 Sentence level The sentence level is the place where some links between temporal expressions and the events they modify are established, as well as temporal relations between events in a same sentence. Attaching temporal expressions to events As a XIP grammar is developed in an incremental way, at a first stage, any prepositional phrase (PP, included temporal PP) is attached to the predicate i</context>
</contexts>
<marker>Roux, 2006</marker>
<rawString>Claude Roux. 2006. Coupling a linguistic formalism and a script language. CSLP-06, Coling-ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roser Saurí</author>
<author>Jessica Littman</author>
<author>Bob Knippen</author>
<author>Robert Gaizauskas</author>
<author>Andrea Setzer</author>
<author>James Pustejovsky</author>
</authors>
<title>TimeML Annotation Guidelines.</title>
<date>2006</date>
<contexts>
<context position="4146" citStr="Saurí et al, 2006" startWordPosition="647" endWordPosition="650">an make use of left and/or right context. Together with contextual rules, some actions are associated. These actions are meant to attribute a value to the resulting temporal expression. Figure 1 illustrates this stage for a simple anchor date. An ADV (adverbial) node with associated Boolean features is built from linguistic expressions such as “4 years ago”. Note that there is a call to a Python function (Roux, 2006) “merge_anchor_and_dur” whose parameters are three linguistic nodes (#0 represents the resulting left-hand expression). The representation of the values is close to TimeML format (Saurí et al, 2006). 2.2 Sentence level The sentence level is the place where some links between temporal expressions and the events they modify are established, as well as temporal relations between events in a same sentence. Attaching temporal expressions to events As a XIP grammar is developed in an incremental way, at a first stage, any prepositional phrase (PP, included temporal PP) is attached to the predicate it modifies through a very general MOD (modifier) dependency link. Then, in a later stage, these dependency links are refined considering the nature and the linguistic properties of the linked consti</context>
</contexts>
<marker>Saurí, Littman, Knippen, Gaizauskas, Setzer, Pustejovsky, 2006</marker>
<rawString>Roser Saurí, Jessica Littman, Bob Knippen, Robert Gaizauskas, Andrea Setzer and James Pustejovsky. TimeML Annotation Guidelines. 2006.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marc Verhagen</author>
<author>Robert Gaizauskas</author>
<author>Frank Schilder</author>
<author>Mark Hepple</author>
<author>Graham Katz</author>
<author>James Pustejovsky</author>
</authors>
<date>2007</date>
<booktitle>SemEval-2007 – Task 15: TempEval Temporal Relation Identification. SemEval workshop in ACL</booktitle>
<contexts>
<context position="7314" citStr="Verhagen et al. 2007" startWordPosition="1146" endWordPosition="1149">f the auxiliary “has” is present. From this information, we deduce that this form is either in present or in past. This is expressed the following way: PRES-OR-PAST(taken). 2.3 Document level Beyond sentence-level, the system is at the first stage of development. We are only able to complete relative dates when it refers to the document creation time, and to infer new relations with the help of composition rules, by saturating the graph of temporal relations (Muller and Tannier, 2004). 3 Adapting XTM to TempEval specifications The TempEval track consists of three different tasks described in (Verhagen et al. 2007). TempEval guidelines present several differences with respect to our own methodology. These differences concern definitions of relations and events, as well as choices about linking. 3.1 TIMEX3 definition TimeML definition of a temporal expression (TIMEX3) is slightly different from what we consider to be a temporal expression in XTM: • First, we incorporate signals (in, at...) into temporal expressions boundaries. But, as TIMEX3s are provided in the test collection, a simple mapping is quite easy to perform. • We also have a different tokenization for complex temporal expressions. This token</context>
</contexts>
<marker>Verhagen, Gaizauskas, Schilder, Hepple, Katz, Pustejovsky, 2007</marker>
<rawString>Marc Verhagen, Robert Gaizauskas, Frank Schilder, Mark Hepple, Graham Katz and James Pustejovsky. 2007. SemEval-2007 – Task 15: TempEval Temporal Relation Identification. SemEval workshop in ACL 2007.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>