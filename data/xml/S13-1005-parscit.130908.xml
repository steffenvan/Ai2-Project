<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000558">
<title confidence="0.529029">
UMBC EBIQUITY-CORE: Semantic Textual Similarity Systems
</title>
<author confidence="0.889419">
Lushan Han, Abhay Kashyap, Tim Finin
</author>
<affiliation confidence="0.941341666666667">
Computer Science and
Electrical Engineering
University of Maryland, Baltimore County
</affiliation>
<address confidence="0.948242">
Baltimore MD 21250
</address>
<email confidence="0.999099">
{lushan1,abhay1,finin}@umbc.edu
</email>
<author confidence="0.809091">
James Mayfield and Jonathan Weese
</author>
<affiliation confidence="0.822845333333333">
Human Language Technology
Center of Excellence
Johns Hopkins University
</affiliation>
<address confidence="0.908423">
Baltimore MD 21211
</address>
<email confidence="0.998868">
mayfield@jhu.edu, jonny@cs.jhu.edu
</email>
<sectionHeader confidence="0.994791" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999335">
We describe three semantic text similarity
systems developed for the *SEM 2013 STS
shared task and the results of the correspond-
ing three runs. All of them shared a word sim-
ilarity feature that combined LSA word sim-
ilarity and WordNet knowledge. The first,
which achieved the best mean score of the 89
submitted runs, used a simple term alignment
algorithm augmented with penalty terms. The
other two runs, ranked second and fourth, used
support vector regression models to combine
larger sets of features.
</bodyText>
<sectionHeader confidence="0.998783" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999866157894737">
Measuring semantic text similarity has been a re-
search subject in natural language processing, infor-
mation retrieval and artificial intelligence for many
years. Previous efforts have focused on compar-
ing two long texts (e.g., for document classification)
or a short text with a long text (e.g., Web search),
but there are a growing number of tasks requiring
computing the semantic similarity between two sen-
tences or other short text sequences. They include
paraphrase recognition (Dolan et al., 2004), Twitter
tweets search (Sriram et al., 2010), image retrieval
by captions (Coelho et al., 2004), query reformula-
tion (Metzler et al., 2007), automatic machine trans-
lation evaluation (Kauchak and Barzilay, 2006) and
schema matching (Han et al., 2012).
There are three predominant approaches to com-
puting short text similarity. The first uses informa-
tion retrieval’s vector space model (Meadow, 1992)
in which each text is modeled as a “bag of words”
</bodyText>
<page confidence="0.987224">
44
</page>
<bodyText confidence="0.9999654">
and represented using a vector. The similarity be-
tween two texts is then computed as the cosine
similarity of the vectors. A variation on this ap-
proach leverages web search results (e.g., snip-
pets) to provide context for the short texts and en-
rich their vectors using the words in the snippets
(Sahami and Heilman, 2006). The second approach
is based on the assumption that if two sentences or
other short text sequences are semantically equiva-
lent, we should be able to align their words or ex-
pressions. The alignment quality can serve as a
similarity measure. This technique typically pairs
words from the two texts by maximizing the sum-
mation of the word similarity of the resulting pairs
(Mihalcea et al., 2006). The third approach com-
bines different measures and features using machine
learning models. Lexical, semantic and syntactic
features are computed for the texts using a variety
of resources and supplied to a classifier, which then
assigns weights to the features by fitting the model
to training data (Saric et al., 2012).
For evaluating different approaches, the 2013 Se-
mantic Textual Similarity (STS) task asked auto-
matic systems to compute sentence similarity ac-
cording to a scale definition ranging from 0 to 5,
with 0 meaning unrelated and 5 semantically equiv-
alent (Agirre et al., 2012; Agirre et al., 2013). The
example sentence pair “The woman is playing the
violin” and “The young lady enjoys listening to the
guitar” is scored as only 1 and the pair “The bird is
bathing in the sink” and “Birdie is washing itself in
the water basin” is given a score of 5.
The vector-space approach tends to be too shallow
for the task, since solving it well requires discrimi-
nating word-level semantic differences and goes be-
</bodyText>
<note confidence="0.8439385">
Second Joint Conference on Lexical and Computational Semantics (*SEM), Volume 1: Proceedings of the Main Conference
and the Shared Task, pages 44–52, Atlanta, Georgia, June 13-14, 2013. c�2013 Association for Computational Linguistics
</note>
<bodyText confidence="0.999457157894737">
yond simply comparing sentence topics or contexts.
Our first run uses an align-and-penalize algorithm,
which extends the second approach by giving penal-
ties to the words that are poorly aligned. Our other
two runs use a support vector regression model to
combine a large number of general and domain spe-
cific features. An important and fundamental feature
used by all three runs is a powerful semantic word
similarity model based on a combination of Latent
Semantic Analysis (LSA) (Deerwester et al., 1990;
Landauer and Dumais, 1997) and knowledge from
WordNet (Miller, 1995).
The remainder of the paper proceeds as follows.
Section 2 presents the hybrid word similarity model.
Section 3 describes the align-and-penalize approach
used for the PairingWords run. In Section 4 we de-
scribe the SVM approach used for the Galactus and
Saiyan runs. Section 5 discusses the results and is
followed by a short conclusion.
</bodyText>
<sectionHeader confidence="0.951341" genericHeader="method">
2 Semantic Word Similarity Model
</sectionHeader>
<bodyText confidence="0.999896642857143">
Our word similarity model was originally developed
for the Graph of Relations project (UMBC, 2013a)
which maps informal queries with English words
and phrases for an RDF linked data collection into
a SPARQL query. For this, we wanted a metric
in which only the semantics of a word is consid-
ered and not its lexical category. For example, the
verb “marry” should be semantically similar to the
noun “wife”. Another desiderata was that the met-
ric should give highest scores and lowest scores in
its range to similar and non-similar words, respec-
tively. In this section, we describe how we con-
structed the model by combining LSA word simi-
larity and WordNet knowledge.
</bodyText>
<subsectionHeader confidence="0.983472">
2.1 LSA Word Similarity
</subsectionHeader>
<bodyText confidence="0.999208">
LSA Word Similarity relies on the distributional hy-
pothesis that words occurring in the same contexts
tend to have similar meanings (Harris, 1968).
</bodyText>
<subsectionHeader confidence="0.937914">
2.1.1 Corpus Selection and Processing
</subsectionHeader>
<bodyText confidence="0.999931925925926">
In order to produce a reliable word co-occurrence
statistics, a very large and balanced text corpus is
required. After experimenting with several cor-
pus choices including Wikipedia, Project Gutenberg
e-Books (Hart, 1997), ukWaC (Baroni et al., 2009),
Reuters News stories (Rose et al., 2002) and LDC
gigawords, we selected the Web corpus from the
Stanford WebBase project (Stanford, 2001). We
used the February 2007 crawl, which is one of the
largest collections and contains 100 million web
pages from more than 50,000 websites. The Web-
Base project did an excellent job in extracting tex-
tual content from HTML tags but still has abun-
dant text duplications, truncated text, non-English
text and strange characters. We processed the collec-
tion to remove undesired sections and produce high
quality English paragraphs. We detected paragraphs
using heuristic rules and only retrained those whose
length was at least two hundred characters. We elim-
inated non-English text by checking the first twenty
words of a paragraph to see if they were valid En-
glish words. We used the percentage of punctuation
characters in a paragraph as a simple check for typi-
cal text. We removed duplicated paragraphs using a
hash table. Finally, we obtained a three billion words
corpus of good quality English, which is available at
(Han and Finin, 2013).
</bodyText>
<subsectionHeader confidence="0.922861">
2.1.2 Word Co-Occurrence Generation
</subsectionHeader>
<bodyText confidence="0.999798913043478">
We performed POS tagging and lemmatization on
the WebBase corpus using the Stanford POS tagger
(Toutanova et al., 2000). Word/term co-occurrences
are counted in a moving window of a fixed size
that scans the entire corpus1. We generated two co-
occurrence models using window sizes ±1 and ±4
because we observed different natures of the models.
±1 window produces a context similar to the depen-
dency context used in (Lin, 1998a). It provides a
more precise context but only works for comparing
words within the same POS. In contrast, a context
window of ±4 words allows us to compute semantic
similarity between words with different POS.
Our word co-occurrence models were based on
a predefined vocabulary of more than 22,000 com-
mon English words and noun phrases. We also
added to it more than 2,000 verb phrases extracted
from WordNet. The final dimensions of our word
co-occurrence matrices are 29,000 x 29,000 when
words are POS tagged. Our vocabulary includes
only open-class words (i.e. nouns, verbs, adjectives
and adverbs). There are no proper nouns in the vo-
cabulary with the only exception of country names.
</bodyText>
<footnote confidence="0.996106">
1We used a stop-word list consisting of only the three arti-
cles “a”, “an” and “the”.
</footnote>
<page confidence="0.997894">
45
</page>
<listItem confidence="0.985363545454546">
Word Pair ±4 model ±1 model
1. doctor NN, physician NN 0.775 0.726
2. car NN, vehicle NN 0.748 0.802
3. person NN, car NN 0.038 0.024
4. car NN, country NN 0.000 0.016
5. person NN, country NN 0.031 0.069
6. child NN, marry VB 0.098 0.000
7. wife NN, marry VB 0.548 0.274
8. author NN, write VB 0.364 0.128
9. doctor NN, hospital NN 0.473 0.347
10. car NN, driver NN 0.497 0.281
</listItem>
<tableCaption confidence="0.99822">
Table 1: Ten examples from the LSA similarity model
</tableCaption>
<subsectionHeader confidence="0.382714">
2.1.3 SVD Transformation
</subsectionHeader>
<bodyText confidence="0.998237625">
Singular Value Decomposition (SVD) has been
found to be effective in improving word similar-
ity measures (Landauer and Dumais, 1997). SVD
is typically applied to a word by document ma-
trix, yielding the familiar LSA technique. In
our case we apply it to our word by word ma-
trix. In literature, this variation of LSA is some-
times called HAL (Hyperspace Analog to Lan-
guage) (Burgess et al., 1998).
Before performing SVD, we transform the raw
word co-occurrence count fij to its log frequency
log(fij + 1). We select the 300 largest singular val-
ues and reduce the 29K word vectors to 300 dimen-
sions. The LSA similarity between two words is de-
fined as the cosine similarity of their corresponding
word vectors after the SVD transformation.
</bodyText>
<subsectionHeader confidence="0.685383">
2.1.4 LSA Similarity Examples
</subsectionHeader>
<bodyText confidence="0.9993708125">
Ten examples obtained using LSA similarity are
given in Table 1. Examples 1 to 6 illustrate that the
metric has a good property of differentiating simi-
lar words from non-similar words. Examples 7 and
8 show that the +4 model can detect semantically
similar words even with different POS while the +1
model yields much worse performance. Example 9
and 10 show that highly related but not substitutable
words can also have a strong similarity but the +1
model has a better performance in discriminating
them. We call the +1 model and the +4 model
as concept similarity and relation similarity respec-
tively since the +1 model has a good performance
on nouns and the +4 model is good at computing
similarity between relations regardless of POS of
words, such as “marry to” and “is the wife of”.
</bodyText>
<subsectionHeader confidence="0.999538">
2.2 Combining with WordNet Knowledge
</subsectionHeader>
<bodyText confidence="0.99999825">
Statistical word similarity measures have limita-
tions. Related words can have similarity scores as
high as what similar words get, as illustrated by
“doctor” and “hospital” in Table 1. Word similar-
ity is typically low for synonyms having many word
senses since information about different senses are
mashed together (Han et al., 2013). By using Word-
Net, we can reduce the above issues.
</bodyText>
<subsectionHeader confidence="0.875188">
2.2.1 Boosting LSA similarity using WordNet
</subsectionHeader>
<bodyText confidence="0.999769">
We increase the similarity between two words if any
of the following relations hold.
</bodyText>
<listItem confidence="0.9962781875">
• They are in the same WordNet synset.
• One word is the direct hypernym of the other.
• One word is the two-link indirect hypernym of
the other.
• One adjective has a direct similar to relation
with the other.
• One adjective has a two-link indirect similar to
relation with the other.
• One word is a derivationally related form of the
other.
• One word is the head of the gloss of the other
or its direct hypernym or one of its direct hy-
ponyms.
• One word appears frequently in the glosses of
the other and its direct hypernym and its direct
hyponyms.
</listItem>
<bodyText confidence="0.9999395">
We use the algorithm described in (Collins, 1999)
to find a word gloss header. We require a minimum
LSA similarity of 0.1 between the two words to filter
out noisy data when extracting WordNet relations.
We define a word’s “significant senses” to deal
with the problem of WordNet trivial senses. The
word “year”, for example, has a sense “a body of
students who graduate together” which makes it a
synonym of the word “class”. This causes problems
because “year” and “class” are not similar, in gen-
eral. A sense is significant, if any of the following
conditions are met: (i) it is the first sense; (ii) its
WordNet frequency count is not less than five; or
(iii) its word form appears first in its synset’s word
</bodyText>
<page confidence="0.996047">
46
</page>
<bodyText confidence="0.9998465">
form list and it has a WordNet sense number less
than eight.
We assign path distance of zero to the category
1, path distance of one to the category 2, 4 and 6,
and path distance of two to the other categories. The
new similarity between word x and y by combining
LSA similarity and WordNet relations is shown in
the following equation
</bodyText>
<equation confidence="0.95024">
sim®(x, y) = simLSA(x, y) + 0.5e−αD(x,y) (1)
</equation>
<bodyText confidence="0.999870285714286">
where D(x, y) is the minimal path distance between
x and y. Using the e−αD(x,y) to transform simple
shortest path length has been demonstrated to be
very effective according to (Li et al., 2003). The pa-
rameter α is set to be 0.25, following their experi-
mental results. The ceiling of sim®(x, y) remains
1.0 and we simply cut the excess.
</bodyText>
<subsectionHeader confidence="0.819251">
2.2.2 Dealing with words of many senses
</subsectionHeader>
<bodyText confidence="0.999949142857143">
For a word w with many WordNet senses (currently
ten or more), we use its synonyms with fewer senses
(at most one third of that of w) as its substitutions in
computing similarity with another word. Let Sx and
Sy be the sets of all such substitutions of the words
x and y respectively. The new similarity is obtained
using Equation 2.
</bodyText>
<equation confidence="0.994091">
sim(x, y) = max( max
s.ES.u1x}
sim®(x, sy)) (2)
</equation>
<bodyText confidence="0.99995">
An online demonstration of a similar model
developed for the GOR project is available
(UMBC, 2013b), but it lacks some of this version’s
features.
</bodyText>
<sectionHeader confidence="0.985074" genericHeader="method">
3 Align-and-Penalize Approach
</sectionHeader>
<bodyText confidence="0.999875">
First we hypothesize that STS similarity between
two sentences can be computed using
</bodyText>
<equation confidence="0.985156">
STS = T − P′ − P″(3)
</equation>
<bodyText confidence="0.999945666666667">
where T is the term alignments score, P′ is the
penalty for bad term alignments and P″is the
penalty for syntactic contradictions led by the align-
ments. However P″had not been fully implemented
and was not used in our STS submissions. We show
it here just for completeness.
</bodyText>
<subsectionHeader confidence="0.99983">
3.1 Aligning terms in two sentences
</subsectionHeader>
<bodyText confidence="0.9999793">
We start by applying the Stanford POS tagger to tag
and lemmatize the input sentences. We use our pre-
defined vocabulary, POS tagging data and simple
regular expressions to recognize multi-word terms
including noun and verb phrases, proper nouns,
numbers and time. We ignore adverbs with fre-
quency count larger than 500, 000 in our corpus and
stop words with general meaning.
Equation 4 shows our aligning function g which
finds the counterpart of term t E S in sentence S′.
</bodyText>
<equation confidence="0.994163">
g(t) = argmax sim′(t, t′) (4)
t′ES′
</equation>
<bodyText confidence="0.987463033333334">
sim′(t, t′) is a wrapper function over sim(x, y) in
Equation 2 that uses the relation similarity model.
It compares numerical and time terms by their val-
ues. If they are equal, 1 is returned; otherwise 0.
sim′(t, t′) provides limited comparison over pro-
nouns. It returns 1 between subject pronouns I, we,
they, he, she and their corresponding object pro-
nouns. sim′(t, t′) also outputs 1 if one term is the
acronym of the other term, or if one term is the head
of the other term, or if two consecutive terms in a
sentence match a single term in the other sentence
(e.g. “long term” and “long-term”). sim′(t, t′) fur-
ther adds support for matching words2 not presented
in our vocabulary using a simple string similarity al-
gorithm. It computes character bigram sets for each
of the two words without using padding characters.
Dice coefficient is then applied to get the degree of
overlap between the two sets. If it is larger than two
thirds, sim′(t, t′) returns a score of 1; otherwise 0.
g(t) is direction-dependent and does not achieve
one-to-one mapping. This property is useful in mea-
suring STS similarity because two sentences are of-
ten not exact paraphrases of one another. Moreover,
it is often necessary to align multiple terms in one
sentence to a single term in the other sentence, such
as when dealing with repetitions and anaphora or,
e.g., mapping “people writing books” to “writers”.
Let S1 and S2 be the sets of terms in two input
sentences. We define term alignments score T as the
following equation shows.
</bodyText>
<equation confidence="0.7316075">
E
tES1
</equation>
<footnote confidence="0.7615015">
2We use the regular expression “[A-Za-z][A-Za-z]*” to
identify them.
</footnote>
<equation confidence="0.910525142857143">
sim®(sx, y),
max
s,yESYu1y}
+ (5)
2 · |S1 |2 · |S2|
�
sim′(t, g(t)) tES2 sim′(t, g(t))
</equation>
<page confidence="0.992689">
47
</page>
<subsectionHeader confidence="0.99665">
3.2 Penalizing bad term alignments
</subsectionHeader>
<bodyText confidence="0.998527636363636">
We currently treat two kinds of alignments as “bad”,
as described in Equation 6. For the set Bi, we have
an additional restriction that neither of the sentences
has the form of a negation. In defining Bi, we used
a collection of antonyms extracted from WordNet
(Mohammad et al., 2008). Antonym pairs are a spe-
cial case of disjoint sets. The terms “piano” and “vi-
olin” are also disjoint but they are not antonyms. In
order to broaden the set Bi we will need to develop
a model that can determine when two terms belong
to disjoint sets.
</bodyText>
<equation confidence="0.96438">
Ai = {ht, g(t)i |t ∈ Si ∧ sim′(t, g(t)) &lt; 0.051
Bi = {ht, g(t)i |t ∈ Si ∧ t is an antonym of g(t)}
i ∈ {1,2} (6)
We show how we compute P′ in Equation 7.
PA __ E(t,g(t))EAz (sim&apos;(t, g(t)) + w f(t) · wp(t))
i 2· |Si|
PB __ E(t,g(t))EA (sim&apos;(t, g(t)) + 0.5)
i 2· |Si|
P′=P1A +P1B+P2 A +PB (7)
2
</equation>
<bodyText confidence="0.9998494">
The wf(t) and wp(t) terms are two weighting func-
tions on the term t. wf (t) inversely weights the log
frequency of term t and wp(t) weights t by its part of
speech tag, assigning 1.0 to verbs, nouns, pronouns
and numbers, and 0.5 to terms with other POS tags.
</bodyText>
<sectionHeader confidence="0.987105" genericHeader="method">
4 SVM approach
</sectionHeader>
<bodyText confidence="0.99975325">
We used the scores from the align-and-penalize ap-
proach along with several other features to learn a
support vector regression model. We started by ap-
plying the following preprocessing steps.
</bodyText>
<listItem confidence="0.997869571428571">
• The sentences were tokenized and POS-tagged
using NLTK’s (Bird, 2006) default Penn Tree-
bank based tagger.
• Punctuation characters were removed from the
tokens except for the decimal point in numbers.
• All numbers written as words were converted
into numerals, e.g., “2.2 million” was replaced
by “2200000” and “fifty six” by “56”.
• All mentions of time were converted into mil-
itary time, e.g., “5:40pm” was replaced by
“1740” and “1h30am” by “0130”.
• Abbreviations were expanded using a compiled
list of commonly used abbreviations.
• About 80 stopwords were removed.
</listItem>
<subsectionHeader confidence="0.990264">
4.1 Ngram Matching
</subsectionHeader>
<bodyText confidence="0.999937535714286">
The sentence similarities are derived as a function of
the similarity scores of their corresponding paired
word ngrams. These features closely resemble the
ones used in (Saric et al., 2012). For our system, we
used unigrams, bigrams, trigrams and skip-bigrams,
a special form of bigrams which allow for arbitrary
distance between two tokens.
An ngram from the first sentence is exclusively
paired with an ngram from the second which has the
highest similarity score. Several similarity metrics
are used to generate different features. For bigrams,
trigrams and skip-bigrams, the similarity score for
two ngrams is computed as the arithmetic mean of
the similarity scores of the individual words they
contain. For example, for the bigrams “he ate” and
“she spoke”, the similarity score is the average of the
similarity scores between the words “he” and “she”
and the words “ate” and “spoke”.
The ngram overlap of two sentences is defined
as “the harmonic mean of the degree to which
the second sentence covers the first and the de-
gree to which the first sentence covers the second”
(Saric et al., 2012). Given sets S1 and S2 containing
ngrams from sentences 1 and 2, and sets P1 and P2
containing their paired ngrams along with their sim-
ilarity scores, the ngram overlap score for a given
ngram type is computed using the following equa-
tion.
</bodyText>
<equation confidence="0.9723245">
EnEP1 w(n).sim(n)
HM EnǫS1 w(n) ,
</equation>
<bodyText confidence="0.9554905">
(8)
In this formula, HM is the harmonic mean, w(n) is
the weight assigned for the given ngram and sim(n)
is the similarity score of the paired word.
By default, all the ngrams are assigned a uniform
weight of 1. But since different words carry differ-
ent amount of information, e.g. “acclimatize” vs.
“take”, “cardiologist” vs. “person”, we also use in-
formation content as weights. The information con-
tent of a word is as defined in (Saric et al., 2012).
</bodyText>
<equation confidence="0.998244375">
ic(w) = ln E�
w′ǫ C freq(w′) (9)
freq(w)
E
nǫP2 w(n).sim(n)
E
nǫS2 w(n)
�
</equation>
<page confidence="0.991618">
48
</page>
<bodyText confidence="0.999957736842106">
Here C is the set of words in the corpus and freq(w)
is the frequency of a word in the corpus. The
weight of an ngram is the sum of its constituent word
weights. We use refined versions of Google ngram
frequencies (Michel et al., 2011) from (Mem, 2008)
and (Saric et al., 2012) to get the information con-
tent of the words. Words not in this list are assigned
the average weight.
We used several word similarity metrics for
ngram matching apart from the similarity metric de-
scribed in section 2. Our baseline similarity metric
was an exact string match which assigned a score
of 1 if two tokens contained the same sequence of
characters and 0 otherwise. We also used NLTK’s
library to compute WordNet based similarity mea-
sures such as Path Distance Similarity, Wu-Palmer
Similarity (Wu and Palmer, 1994) and Lin Similar-
ity (Lin, 1998b). For Lin Similarity, the Semcor cor-
pus was used for the information content of words.
</bodyText>
<subsectionHeader confidence="0.9959">
4.2 Contrast Scores
</subsectionHeader>
<bodyText confidence="0.9999655">
We computed contrast scores between two sen-
tences using three different lists of antonym pairs
(Mohammad et al., 2008). We used a large list con-
taining 3.5 million antonym pairs, a list of about
22,000 antonym pairs from Wordnet and a list of
50,000 pairs of words with their degree of contrast.
Contrast scores between two sentences were derived
as a function of the number of antonym pairs be-
tween them similar to equation 8 but with negative
values to indicate contrast scores.
</bodyText>
<subsectionHeader confidence="0.950971">
4.3 Features
</subsectionHeader>
<bodyText confidence="0.9774316">
We constructed 52 features from different combina-
tions of similarity metrics, their parameters, ngram
types (unigram, bigram, trigram and skip-bigram)
and ngram weights (equal weight vs. information
content) for all sentence pairs in the training data.
</bodyText>
<listItem confidence="0.995825173913043">
• We used scores from the align-and-penalize ap-
proach directly as a feature.
• Using exact string match over different ngram
types and ngram weights, we extracted eight
features (4 * 4). We also developed four addi-
tional features (2 * 2) by includin stopwords in
bigrams and trigrams, motivated by the nature
of MSRvid dataset.
• We used the LSA boosted similarity metric in
three modes: concept similarity, relation simi-
larity and mixed mode, which used the concept
model for nouns and relation model for verbs,
adverbs and adjectives. A total of 24 features
were extracted (4 * 2 * 3).
• For Wordnet-based similarity measures, we
used uniform weights for Path and Wu-Palmer
similarity and used the information content of
words (derived from the Semcor corpus) for
Lin similarity. Skip bigrams were ignored and
a total of nine features were produced (3 * 3).
• Contrast scores used three different lists of
antonym pairs. A total of six features were ex-
tracted using different weight values (3 * 2).
</listItem>
<subsectionHeader confidence="0.997769">
4.4 Support Vector Regression
</subsectionHeader>
<bodyText confidence="0.99997775862069">
The features described in 4.3 were used in dif-
ferent combinations to train several support vec-
tor regression (SVR) models. We used LIBSVM
(Chang and Lin, 2011) to learn the SVR models and
ran a grid search provided by (Saric et al., 2012) to
find the optimal values for the parameters C, g and
p. These models were then used to predict the scores
for the test sets.
The Galactus system was trained on all of STS
2012 data and used the full set of 52 features. The
FnWN dataset was handled slightly differently from
the others. We observed that terms like “frame” and
“entity” were used frequently in the five sample sen-
tence pairs and treated them as stopwords. To ac-
commodate the vast difference in sentence lengths,
equation 8 was modified to compute the arithmetic
mean instead of the harmonic mean.
The Saiyan system employed data-specific train-
ing and features. The training sets were subsets of
the supplied STS 2012 dataset. More specifically,
the model for headlines was trained on 3000 sen-
tence pairs from MSRvid and MSRpar, SMT used
1500 sentence pairs from SMT europarl and SMT
news, while OnWN used only the 750 OnWN sen-
tence pairs from last year. The FnWN scores were
directly used from the Align-and-Penalize approach.
None of the models for Saiyan used contrast fea-
tures and the model for SMT also ignored similarity
scores from exact string match metric.
</bodyText>
<page confidence="0.999495">
49
</page>
<sectionHeader confidence="0.997313" genericHeader="evaluation">
5 Results and discussion
</sectionHeader>
<bodyText confidence="0.999781652173913">
Table 2 presents the official results of our three runs
in the 2013 STS task. Each entry gives a run’s Pear-
son correlation on a dataset as well as the rank of the
run among all 89 runs submitted by the 35 teams.
The last row shows the mean of the correlations and
the overall ranks of our three runs.
We tested performance of the align-and-penalize
approach on all of the 2012 STS datasets. It ob-
tained correlation values of 0.819 on MSRvid, 0.669
on MSRpar, 0.553 on SMTeuroparl, 0.567 on SMT-
news and 0.722 on OnWN for the test datasets, and
correlation values of 0.814 on MSRvid, 0.707 on
MSRpar and 0.646 on SMTeuroparl for the training
datasets. The performance of the approach without
using the antonym penalty is also tested, producing
correlation scores of 0.795 on MSRvid, 0.667 on
MSRpar, 0.554 on SMTeuroparl, 0.566 on SMTnew
and 0.727 on OnWN, for the test datasets, and 0.794
on MSRvid, 0.707 on MSRpar and 0.651 on SM-
Teuroparl for the training datasets. The average of
the correlation scores on all eight datasets with and
without the antonym penalty is 0.6871 and 0.6826,
respectively. Since the approach’s performance was
only slightly improved when the antonym penalty
was used, we decided to not include this penalty in
our PairingWords run in the hope that its simplicity
would make it more robust.
During development, our SVM approach
achieved correlations of 0.875 for MSRvid, 0.699
for MSRpar, 0.559 for SMTeuroparl, 0.625 for
SMTnews and 0.729 for OnWN on the 2012 STS
test data. Models were trained on their respective
training sets while SMTnews used SMTeuroparl and
OnWN used all the training sets. We experimented
with different features and training data to study
their influence on the performance of the models.
We found that the unigram overlap feature, based on
boosted LSA similarity and weighted by informa-
tion content, could independently achieve very high
correlations. Including more features improved the
accuracy slightly and in some cases added noise.
The difficulty in selecting data specific features and
training for novel datasets is indicated by Saiyan’s
contrasting performance on headlines and OnWN
datasets. The model used for Headlines was trained
on data from seemingly different domains (MSRvid,
</bodyText>
<table confidence="0.999719166666667">
Dataset Pairing Galactus Saiyan
Headlines (750 pairs) 0.7642 0.7428 (7) 0.7838
OnWN (561 pairs) 0.7529 (5) 0.7053 (12) 0.5593 (36)
FNWN (189 pairs) 0.5818 (1) 0.5444 (3) 0.5815
SMT (750 pairs) 0.3804 (8) 0.3705 (11) 0.3563 (16)
Weighted mean 0.6181 (1) 0.5927 (2) 0.5683
</table>
<tableCaption confidence="0.995933">
Table 2: Performance of our three systems on the four
test sets.
</tableCaption>
<bodyText confidence="0.999778692307692">
MSRpar) while OnWN was trained only on OnWN
from STS 2012. When the model for headlines
dataset was used to predict the scores for OnWN,
the correlation jumped from 0.55 to 0.71 indicating
that the earlier model suffered from overfitting.
Overfitting is not evident in the performance of
PairingWords and Galactus, which have more con-
sistent performance over all datasets. The relatively
simple PairingWords system has two advantages: it
is faster, since the current Galactus requires comput-
ing a large number of features; and its performance
is more predictable, since training is not needed thus
eliminating noise induced from diverse training sets.
</bodyText>
<sectionHeader confidence="0.999016" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.9999516">
We described three semantic text similarity systems
developed for the *SEM 2013 STS shared task and
the results of the corresponding three runs we sub-
mitted. All of the systems used a lexical similarity
feature that combined POS tagging, LSA word sim-
ilarity and WordNet knowledge.
The first run, which achieved the best mean score
out of all 89 submissions, used a simple term align-
ment algorithm augmented with two penalty met-
rics. The other two runs, ranked second and fourth
out of all submissions, used support vector regres-
sion models based on a set of more than 50 addi-
tional features. The runs differed in their feature
sets, training data and procedures, and parameter
settings.
</bodyText>
<sectionHeader confidence="0.998049" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9473565">
This research was supported by AFOSR award
FA9550-08-1-0265 and a gift from Microsoft.
</bodyText>
<page confidence="0.994459">
50
</page>
<sectionHeader confidence="0.978817" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999335692307693">
[Agirre et al.2012] Eneko Agirre, Mona Diab, Daniel Cer,
and Aitor Gonzalez-Agirre. 2012. Semeval-2012 task
6: a pilot on semantic textual similarity. In Proceed-
ings ofthe First Joint Conference on Lexical and Com-
putational Semantics, pages 385–393. Association for
Computational Linguistics.
[Agirre et al.2013] Eneko Agirre, Daniel Cer, Mona Diab,
Aitor Gonzalez-Agirre, and Weiwei Guo. 2013. *sem
2013 shared task: Semantic textual similarity, includ-
ing a pilot on typed-similarity. In *SEM 2013: The
Second Joint Conference on Lexical and Computa-
tional Semantics. Association for Computational Lin-
guistics.
[Baroni et al.2009] M. Baroni, S. Bernardini, A. Fer-
raresi, and E. Zanchetta. 2009. The wacky wide
web: A collection of very large linguistically pro-
cessed web-crawled corpora. Language Resources
and Evaluation, 43(3):209–226.
[Bird2006] Steven Bird. 2006. Nltk: the natural lan-
guage toolkit. In Proceedings of the COLING/ACL on
Interactive presentation sessions, COLING-ACL ’06,
pages 69–72, Stroudsburg, PA, USA. Association for
Computational Linguistics.
[Burgess et al.1998] C. Burgess, K. Livesay, and K. Lund.
1998. Explorations in context space: Words, sen-
tences, discourse. Discourse Processes, 25:211–257.
[Chang and Lin2011] Chih-Chung Chang and Chih-Jen
Lin. 2011. LIBSVM: A library for support vector ma-
chines. ACM Transactions on Intelligent Systems and
Technology, 2:27:1–27:27.
[Coelho et al.2004] T.A.S. Coelho, P´avel Pereira Calado,
Lamarque Vieira Souza, Berthier Ribeiro-Neto, and
Richard Muntz. 2004. Image retrieval using multiple
evidence ranking. IEEE Trans. on Knowl. and Data
Eng., 16(4):408–417.
[Collins1999] Michael John Collins. 1999. Head-driven
statistical models for natural language parsing. Ph.D.
thesis, University of Pennsylvania.
[Deerwester et al.1990] Scott Deerwester, Susan T. Du-
mais, George W. Furnas, Thomas K. Landauer, and
Richard Harshman. 1990. Indexing by latent semantic
analysis. Journal of the American Societyfor Informa-
tion Science, 41(6):391–407.
[Dolan et al.2004] Bill Dolan, Chris Quirk, and Chris
Brockett. 2004. Unsupervised construction of
large paraphrase corpora: exploiting massively paral-
lel news sources. In Proceedings of the 20th interna-
tional conference on Computational Linguistics, COL-
ING ’04. Association for Computational Linguistics.
[Ganitkevitch et al.2013] Juri Ganitkevitch, Ben-
jamin Van Durme, and Chris Callison-Burch. 2013.
PPDB: The paraphrase database. In HLT-NAACL
2013.
[Han and Finin2013] Lushan Han and Tim Finin. 2013.
UMBC webbase corpus. http://ebiq.org/r/351.
[Han et al.2012] Lushan Han, Tim Finin, and Anupam
Joshi. 2012. Schema-free structured querying of db-
pedia data. In Proceedings of the 21st ACM interna-
tional conference on Information and knowledge man-
agement, pages 2090–2093. ACM.
[Han et al.2013] Lushan Han, Tim Finin, Paul McNamee,
Anupam Joshi, and Yelena Yesha. 2013. Improving
Word Similarity by Augmenting PMI with Estimates
of Word Polysemy. IEEE Transactions on Knowledge
and Data Engineering, 25(6):1307–1322.
[Harris1968] Zellig Harris. 1968. Mathematical Struc-
tures ofLanguage. Wiley, New York, USA.
[Hart1997] M. Hart. 1997. Project gutenberg electronic
books. http://www.gutenberg.org/wiki/Main Page.
[Kauchak and Barzilay2006] David Kauchak and Regina
Barzilay. 2006. Paraphrasing for automatic evalua-
tion. In HLT-NAACL ’06, pages 455–462.
[Landauer and Dumais1997] T. Landauer and S. Dumais.
1997. A solution to plato’s problem: The latent se-
mantic analysis theory of the acquisition, induction,
and representation of knowledge. In Psychological
Review, 104, pages 211–240.
[Li et al.2003] Y. Li, Z.A. Bandar, and D. McLean.
2003. An approach for measuring semantic similar-
ity between words using multiple information sources.
IEEE Transactions on Knowledge and Data Engineer-
ing, 15(4):871–882.
[Lin1998a] Dekang Lin. 1998a. Automatic retrieval and
clustering of similar words. In Proc. 17th Int. Conf. on
Computational Linguistics, pages 768–774, Montreal,
CN.
[Lin1998b] Dekang Lin. 1998b. An information-
theoretic definition of similarity. In Proceedings of the
Fifteenth International Conference on Machine Learn-
ing, ICML ’98, pages 296–304, San Francisco, CA,
USA. Morgan Kaufmann Publishers Inc.
[Meadow1992] Charles T. Meadow. 1992. Text Informa-
tion Retrieval Systems. Academic Press, Inc.
[Mem2008] 2008. Google word frequency counts.
http://bit.ly/10JdTRz.
[Metzler et al.2007] Donald Metzler, Susan Dumais, and
Christopher Meek. 2007. Similarity measures for
short segments of text. In Proceedings of the 29th
European conference on IR research, pages 16–27.
Springer-Verlag.
[Michel et al.2011] Jean-Baptiste Michel, Yuan K. Shen,
Aviva P. Aiden, Adrian Veres, Matthew K. Gray, The
Google Books Team, Joseph P. Pickett, Dale Hoiberg,
Dan Clancy, Peter Norvig, Jon Orwant, Steven Pinker,
</reference>
<page confidence="0.989758">
51
</page>
<reference confidence="0.967747454545455">
32nd Annual Meeting of the Association for Compu-
tational Linguistics (ACL-1994), pages 133–138, Las
Cruces (Mexico).
Martin A. Nowak, and Erez L. Aiden. 2011. Quan-
titative analysis of culture using millions of digitized
books. Science, 331(6014):176–182, January 14.
[Mihalcea et al.2006] Rada Mihalcea, Courtney Corley,
and Carlo Strapparava. 2006. Corpus-based and
knowledge-based measures of text semantic similarity.
In Proceedings of the 21st national conference on Ar-
tificial intelligence, pages 775–780. AAAI Press.
[Miller1995] G.A. Miller. 1995. WordNet: a lexical
database for English. Communications of the ACM,
38(11):41.
[Mohammad et al.2008] Saif Mohammad, Bonnie Dorr,
and Graeme Hirst. 2008. Computing word-pair
antonymy. In Proc. Conf. on Empirical Methods
in Natural Language Processing and Computational
Natural Language Learning (EMNLP-2008), October.
[Rose et al.2002] Tony Rose, Mark Stevenson, and Miles
Whitehead. 2002. The reuters corpus volume 1 - from
yesterdays news to tomorrows language resources. In
In Proceedings of the Third International Conference
on Language Resources and Evaluation, pages 29–31.
[Sahami and Heilman2006] Mehran Sahami and Timo-
thy D. Heilman. 2006. A web-based kernel function
for measuring the similarity of short text snippets. In
Proceedings of the 15th international conference on
World Wide Web, WWW ’06, pages 377–386. ACM.
[Saric et al.2012] Frane Saric, Goran Glavas, Mladen
Karan, Jan Snajder, and Bojana Dalbelo Basic. 2012.
Takelab: systems for measuring semantic text simi-
larity. In Proceedings of the First Joint Conference
on Lexical and Computational Semantics, pages 441–
448. Association for Computational Linguistics.
[Sriram et al.2010] Bharath Sriram, Dave Fuhry, Engin
Demir, Hakan Ferhatosmanoglu, and Murat Demirbas.
2010. Short text classification in twitter to improve
information filtering. In Proceedings of the 33rd in-
ternational ACM SIGIR conference on Research and
development in information retrieval, pages 841–842.
ACM.
[Stanford2001] Stanford. 2001. Stanford WebBase
project. http://bit.ly/WebBase.
[Toutanova et al.2000] Kristina Toutanova, Dan
Klein, Christopher Manning, William Mor-
gan, Anna Rafferty, and Michel Galley. 2000.
Stanford log-linear part-of-speech tagger.
http://nlp.stanford.edu/software/tagger.shtml.
[UMBC2013a] UMBC. 2013a. Graph of relations
project. http://ebiq.org/j/95.
[UMBC2013b] UMBC. 2013b. Semantic similarity
demonstration. http://swoogle.umbc.edu/SimService/.
[Wu and Palmer1994] Z. Wu and M. Palmer. 1994. Verb
semantic and lexical selection. In Proceedings of the
</reference>
<page confidence="0.998857">
52
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.321395">
<title confidence="0.999814">UMBC EBIQUITY-CORE: Semantic Textual Similarity Systems</title>
<author confidence="0.997385">Lushan Han</author>
<author confidence="0.997385">Abhay Kashyap</author>
<author confidence="0.997385">Tim</author>
<affiliation confidence="0.983180666666667">Computer Science Electrical Engineering University of Maryland, Baltimore</affiliation>
<address confidence="0.99834">Baltimore MD 21250</address>
<author confidence="0.772282">James Mayfield</author>
<author confidence="0.772282">Jonathan Human Language</author>
<affiliation confidence="0.829949">Center of Johns Hopkins Baltimore MD</affiliation>
<email confidence="0.999619">mayfield@jhu.edu,jonny@cs.jhu.edu</email>
<abstract confidence="0.999633769230769">We describe three semantic text similarity systems developed for the *SEM 2013 STS shared task and the results of the corresponding three runs. All of them shared a word similarity feature that combined LSA word similarity and WordNet knowledge. The first, which achieved the best mean score of the 89 submitted runs, used a simple term alignment algorithm augmented with penalty terms. The other two runs, ranked second and fourth, used support vector regression models to combine larger sets of features.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Eneko Agirre</author>
<author>Mona Diab</author>
<author>Daniel Cer</author>
<author>Aitor Gonzalez-Agirre</author>
</authors>
<title>Semeval-2012 task 6: a pilot on semantic textual similarity.</title>
<date>2012</date>
<booktitle>In Proceedings ofthe First Joint Conference on Lexical and Computational Semantics,</booktitle>
<pages>385--393</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<marker>[Agirre et al.2012]</marker>
<rawString>Eneko Agirre, Mona Diab, Daniel Cer, and Aitor Gonzalez-Agirre. 2012. Semeval-2012 task 6: a pilot on semantic textual similarity. In Proceedings ofthe First Joint Conference on Lexical and Computational Semantics, pages 385–393. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eneko Agirre</author>
<author>Daniel Cer</author>
<author>Mona Diab</author>
<author>Aitor Gonzalez-Agirre</author>
<author>Weiwei Guo</author>
</authors>
<title>sem 2013 shared task: Semantic textual similarity, including a pilot on typed-similarity.</title>
<date>2013</date>
<booktitle>In *SEM 2013: The Second Joint Conference on Lexical and Computational Semantics. Association for Computational Linguistics.</booktitle>
<marker>[Agirre et al.2013]</marker>
<rawString>Eneko Agirre, Daniel Cer, Mona Diab, Aitor Gonzalez-Agirre, and Weiwei Guo. 2013. *sem 2013 shared task: Semantic textual similarity, including a pilot on typed-similarity. In *SEM 2013: The Second Joint Conference on Lexical and Computational Semantics. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Baroni</author>
<author>S Bernardini</author>
<author>A Ferraresi</author>
<author>E Zanchetta</author>
</authors>
<title>The wacky wide web: A collection of very large linguistically processed web-crawled corpora. Language Resources and Evaluation,</title>
<date>2009</date>
<pages>43--3</pages>
<marker>[Baroni et al.2009]</marker>
<rawString>M. Baroni, S. Bernardini, A. Ferraresi, and E. Zanchetta. 2009. The wacky wide web: A collection of very large linguistically processed web-crawled corpora. Language Resources and Evaluation, 43(3):209–226.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
</authors>
<title>Nltk: the natural language toolkit.</title>
<date>2006</date>
<booktitle>In Proceedings of the COLING/ACL on Interactive presentation sessions, COLING-ACL ’06,</booktitle>
<pages>69--72</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Stroudsburg, PA, USA.</location>
<marker>[Bird2006]</marker>
<rawString>Steven Bird. 2006. Nltk: the natural language toolkit. In Proceedings of the COLING/ACL on Interactive presentation sessions, COLING-ACL ’06, pages 69–72, Stroudsburg, PA, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Burgess</author>
<author>K Livesay</author>
<author>K Lund</author>
</authors>
<date>1998</date>
<booktitle>Explorations in context space: Words, sentences, discourse. Discourse Processes,</booktitle>
<pages>25--211</pages>
<marker>[Burgess et al.1998]</marker>
<rawString>C. Burgess, K. Livesay, and K. Lund. 1998. Explorations in context space: Words, sentences, discourse. Discourse Processes, 25:211–257.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chih-Chung Chang</author>
<author>Chih-Jen Lin</author>
</authors>
<title>LIBSVM: A library for support vector machines.</title>
<date>2011</date>
<journal>ACM Transactions on Intelligent Systems and Technology,</journal>
<pages>2--27</pages>
<marker>[Chang and Lin2011]</marker>
<rawString>Chih-Chung Chang and Chih-Jen Lin. 2011. LIBSVM: A library for support vector machines. ACM Transactions on Intelligent Systems and Technology, 2:27:1–27:27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T A S Coelho</author>
<author>P´avel Pereira Calado</author>
<author>Lamarque Vieira Souza</author>
<author>Berthier Ribeiro-Neto</author>
<author>Richard Muntz</author>
</authors>
<title>Image retrieval using multiple evidence ranking.</title>
<date>2004</date>
<journal>IEEE Trans. on Knowl. and Data Eng.,</journal>
<volume>16</volume>
<issue>4</issue>
<marker>[Coelho et al.2004]</marker>
<rawString>T.A.S. Coelho, P´avel Pereira Calado, Lamarque Vieira Souza, Berthier Ribeiro-Neto, and Richard Muntz. 2004. Image retrieval using multiple evidence ranking. IEEE Trans. on Knowl. and Data Eng., 16(4):408–417.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael John Collins</author>
</authors>
<title>Head-driven statistical models for natural language parsing.</title>
<date>1999</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Pennsylvania.</institution>
<marker>[Collins1999]</marker>
<rawString>Michael John Collins. 1999. Head-driven statistical models for natural language parsing. Ph.D. thesis, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Scott Deerwester</author>
<author>Susan T Dumais</author>
<author>George W Furnas</author>
<author>Thomas K Landauer</author>
<author>Richard Harshman</author>
</authors>
<title>Indexing by latent semantic analysis.</title>
<date>1990</date>
<journal>Journal of the American Societyfor Information Science,</journal>
<volume>41</volume>
<issue>6</issue>
<marker>[Deerwester et al.1990]</marker>
<rawString>Scott Deerwester, Susan T. Dumais, George W. Furnas, Thomas K. Landauer, and Richard Harshman. 1990. Indexing by latent semantic analysis. Journal of the American Societyfor Information Science, 41(6):391–407.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bill Dolan</author>
<author>Chris Quirk</author>
<author>Chris Brockett</author>
</authors>
<title>Unsupervised construction of large paraphrase corpora: exploiting massively parallel news sources.</title>
<date>2004</date>
<booktitle>In Proceedings of the 20th international conference on Computational Linguistics, COLING ’04. Association for Computational Linguistics.</booktitle>
<marker>[Dolan et al.2004]</marker>
<rawString>Bill Dolan, Chris Quirk, and Chris Brockett. 2004. Unsupervised construction of large paraphrase corpora: exploiting massively parallel news sources. In Proceedings of the 20th international conference on Computational Linguistics, COLING ’04. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Juri Ganitkevitch</author>
<author>Benjamin Van Durme</author>
<author>Chris Callison-Burch</author>
</authors>
<title>PPDB: The paraphrase database.</title>
<date>2013</date>
<booktitle>In HLT-NAACL</booktitle>
<marker>[Ganitkevitch et al.2013]</marker>
<rawString>Juri Ganitkevitch, Benjamin Van Durme, and Chris Callison-Burch. 2013. PPDB: The paraphrase database. In HLT-NAACL 2013.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lushan Han</author>
<author>Tim Finin</author>
</authors>
<date>2013</date>
<note>UMBC webbase corpus. http://ebiq.org/r/351.</note>
<marker>[Han and Finin2013]</marker>
<rawString>Lushan Han and Tim Finin. 2013. UMBC webbase corpus. http://ebiq.org/r/351.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lushan Han</author>
<author>Tim Finin</author>
<author>Anupam Joshi</author>
</authors>
<title>Schema-free structured querying of dbpedia data.</title>
<date>2012</date>
<booktitle>In Proceedings of the 21st ACM international conference on Information and knowledge management,</booktitle>
<pages>2090--2093</pages>
<publisher>ACM.</publisher>
<marker>[Han et al.2012]</marker>
<rawString>Lushan Han, Tim Finin, and Anupam Joshi. 2012. Schema-free structured querying of dbpedia data. In Proceedings of the 21st ACM international conference on Information and knowledge management, pages 2090–2093. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lushan Han</author>
<author>Tim Finin</author>
<author>Paul McNamee</author>
<author>Anupam Joshi</author>
<author>Yelena Yesha</author>
</authors>
<title>Improving Word Similarity by Augmenting PMI with Estimates of Word Polysemy.</title>
<date>2013</date>
<journal>IEEE Transactions on Knowledge and Data Engineering,</journal>
<volume>25</volume>
<issue>6</issue>
<marker>[Han et al.2013]</marker>
<rawString>Lushan Han, Tim Finin, Paul McNamee, Anupam Joshi, and Yelena Yesha. 2013. Improving Word Similarity by Augmenting PMI with Estimates of Word Polysemy. IEEE Transactions on Knowledge and Data Engineering, 25(6):1307–1322.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Zellig Harris</author>
</authors>
<date>1968</date>
<booktitle>Mathematical Structures ofLanguage.</booktitle>
<publisher>Wiley,</publisher>
<location>New York, USA.</location>
<marker>[Harris1968]</marker>
<rawString>Zellig Harris. 1968. Mathematical Structures ofLanguage. Wiley, New York, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Hart</author>
</authors>
<title>Project gutenberg electronic books. http://www.gutenberg.org/wiki/Main Page.</title>
<date>1997</date>
<marker>[Hart1997]</marker>
<rawString>M. Hart. 1997. Project gutenberg electronic books. http://www.gutenberg.org/wiki/Main Page.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Kauchak</author>
<author>Regina Barzilay</author>
</authors>
<title>Paraphrasing for automatic evaluation.</title>
<date>2006</date>
<booktitle>In HLT-NAACL ’06,</booktitle>
<pages>455--462</pages>
<marker>[Kauchak and Barzilay2006]</marker>
<rawString>David Kauchak and Regina Barzilay. 2006. Paraphrasing for automatic evaluation. In HLT-NAACL ’06, pages 455–462.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Landauer</author>
<author>S Dumais</author>
</authors>
<title>A solution to plato’s problem: The latent semantic analysis theory of the acquisition, induction, and representation of knowledge.</title>
<date>1997</date>
<journal>In Psychological Review,</journal>
<volume>104</volume>
<pages>211--240</pages>
<marker>[Landauer and Dumais1997]</marker>
<rawString>T. Landauer and S. Dumais. 1997. A solution to plato’s problem: The latent semantic analysis theory of the acquisition, induction, and representation of knowledge. In Psychological Review, 104, pages 211–240.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Li</author>
<author>Z A Bandar</author>
<author>D McLean</author>
</authors>
<title>An approach for measuring semantic similarity between words using multiple information sources.</title>
<date>2003</date>
<journal>IEEE Transactions on Knowledge and Data Engineering,</journal>
<volume>15</volume>
<issue>4</issue>
<marker>[Li et al.2003]</marker>
<rawString>Y. Li, Z.A. Bandar, and D. McLean. 2003. An approach for measuring semantic similarity between words using multiple information sources. IEEE Transactions on Knowledge and Data Engineering, 15(4):871–882.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>Automatic retrieval and clustering of similar words.</title>
<date>1998</date>
<booktitle>In Proc. 17th Int. Conf. on Computational Linguistics,</booktitle>
<pages>768--774</pages>
<location>Montreal, CN.</location>
<marker>[Lin1998a]</marker>
<rawString>Dekang Lin. 1998a. Automatic retrieval and clustering of similar words. In Proc. 17th Int. Conf. on Computational Linguistics, pages 768–774, Montreal, CN.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>An informationtheoretic definition of similarity.</title>
<date>1998</date>
<booktitle>In Proceedings of the Fifteenth International Conference on Machine Learning, ICML ’98,</booktitle>
<pages>296--304</pages>
<publisher>Morgan Kaufmann Publishers Inc.</publisher>
<location>San Francisco, CA, USA.</location>
<marker>[Lin1998b]</marker>
<rawString>Dekang Lin. 1998b. An informationtheoretic definition of similarity. In Proceedings of the Fifteenth International Conference on Machine Learning, ICML ’98, pages 296–304, San Francisco, CA, USA. Morgan Kaufmann Publishers Inc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Charles T Meadow</author>
</authors>
<title>Text Information Retrieval Systems.</title>
<date>1992</date>
<publisher>Academic Press, Inc.</publisher>
<marker>[Meadow1992]</marker>
<rawString>Charles T. Meadow. 1992. Text Information Retrieval Systems. Academic Press, Inc.</rawString>
</citation>
<citation valid="false">
<date>2008</date>
<note>Google word frequency counts. http://bit.ly/10JdTRz.</note>
<marker>[Mem2008]</marker>
<rawString>2008. Google word frequency counts. http://bit.ly/10JdTRz.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donald Metzler</author>
<author>Susan Dumais</author>
<author>Christopher Meek</author>
</authors>
<title>Similarity measures for short segments of text.</title>
<date>2007</date>
<booktitle>In Proceedings of the 29th European conference on IR research,</booktitle>
<pages>16--27</pages>
<publisher>Springer-Verlag.</publisher>
<marker>[Metzler et al.2007]</marker>
<rawString>Donald Metzler, Susan Dumais, and Christopher Meek. 2007. Similarity measures for short segments of text. In Proceedings of the 29th European conference on IR research, pages 16–27. Springer-Verlag.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Jean-Baptiste Michel</author>
<author>Yuan K Shen</author>
<author>Aviva P Aiden</author>
<author>Adrian Veres</author>
<author>Matthew K Gray</author>
</authors>
<title>The Google Books</title>
<date>2011</date>
<journal>Science,</journal>
<booktitle>Steven Pinker, 32nd Annual Meeting of the Association for Computational Linguistics (ACL-1994),</booktitle>
<volume>331</volume>
<issue>6014</issue>
<pages>133--138</pages>
<location>Las Cruces (Mexico). Martin</location>
<marker>[Michel et al.2011]</marker>
<rawString>Jean-Baptiste Michel, Yuan K. Shen, Aviva P. Aiden, Adrian Veres, Matthew K. Gray, The Google Books Team, Joseph P. Pickett, Dale Hoiberg, Dan Clancy, Peter Norvig, Jon Orwant, Steven Pinker, 32nd Annual Meeting of the Association for Computational Linguistics (ACL-1994), pages 133–138, Las Cruces (Mexico). Martin A. Nowak, and Erez L. Aiden. 2011. Quantitative analysis of culture using millions of digitized books. Science, 331(6014):176–182, January 14.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rada Mihalcea</author>
<author>Courtney Corley</author>
<author>Carlo Strapparava</author>
</authors>
<title>Corpus-based and knowledge-based measures of text semantic similarity.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st national conference on Artificial intelligence,</booktitle>
<pages>775--780</pages>
<publisher>AAAI Press.</publisher>
<marker>[Mihalcea et al.2006]</marker>
<rawString>Rada Mihalcea, Courtney Corley, and Carlo Strapparava. 2006. Corpus-based and knowledge-based measures of text semantic similarity. In Proceedings of the 21st national conference on Artificial intelligence, pages 775–780. AAAI Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G A Miller</author>
</authors>
<title>WordNet: a lexical database for English.</title>
<date>1995</date>
<journal>Communications of the ACM,</journal>
<volume>38</volume>
<issue>11</issue>
<marker>[Miller1995]</marker>
<rawString>G.A. Miller. 1995. WordNet: a lexical database for English. Communications of the ACM, 38(11):41.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Saif Mohammad</author>
<author>Bonnie Dorr</author>
<author>Graeme Hirst</author>
</authors>
<title>Computing word-pair antonymy.</title>
<date>2008</date>
<booktitle>In Proc. Conf. on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-2008),</booktitle>
<marker>[Mohammad et al.2008]</marker>
<rawString>Saif Mohammad, Bonnie Dorr, and Graeme Hirst. 2008. Computing word-pair antonymy. In Proc. Conf. on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-2008), October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tony Rose</author>
<author>Mark Stevenson</author>
<author>Miles Whitehead</author>
</authors>
<title>The reuters corpus volume 1 - from yesterdays news to tomorrows language resources. In</title>
<date>2002</date>
<booktitle>In Proceedings of the Third International Conference on Language Resources and Evaluation,</booktitle>
<pages>29--31</pages>
<marker>[Rose et al.2002]</marker>
<rawString>Tony Rose, Mark Stevenson, and Miles Whitehead. 2002. The reuters corpus volume 1 - from yesterdays news to tomorrows language resources. In In Proceedings of the Third International Conference on Language Resources and Evaluation, pages 29–31.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehran Sahami</author>
<author>Timothy D Heilman</author>
</authors>
<title>A web-based kernel function for measuring the similarity of short text snippets.</title>
<date>2006</date>
<booktitle>In Proceedings of the 15th international conference on World Wide Web, WWW ’06,</booktitle>
<pages>377--386</pages>
<publisher>ACM.</publisher>
<marker>[Sahami and Heilman2006]</marker>
<rawString>Mehran Sahami and Timothy D. Heilman. 2006. A web-based kernel function for measuring the similarity of short text snippets. In Proceedings of the 15th international conference on World Wide Web, WWW ’06, pages 377–386. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frane Saric</author>
<author>Goran Glavas</author>
<author>Mladen Karan</author>
<author>Jan Snajder</author>
<author>Bojana Dalbelo Basic</author>
</authors>
<title>Takelab: systems for measuring semantic text similarity.</title>
<date>2012</date>
<booktitle>In Proceedings of the First Joint Conference on Lexical and Computational Semantics,</booktitle>
<pages>441--448</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<marker>[Saric et al.2012]</marker>
<rawString>Frane Saric, Goran Glavas, Mladen Karan, Jan Snajder, and Bojana Dalbelo Basic. 2012. Takelab: systems for measuring semantic text similarity. In Proceedings of the First Joint Conference on Lexical and Computational Semantics, pages 441– 448. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bharath Sriram</author>
<author>Dave Fuhry</author>
<author>Engin Demir</author>
<author>Hakan Ferhatosmanoglu</author>
<author>Murat Demirbas</author>
</authors>
<title>Short text classification in twitter to improve information filtering.</title>
<date>2010</date>
<booktitle>In Proceedings of the 33rd international ACM SIGIR conference on Research and development in information retrieval,</booktitle>
<pages>841--842</pages>
<publisher>ACM.</publisher>
<marker>[Sriram et al.2010]</marker>
<rawString>Bharath Sriram, Dave Fuhry, Engin Demir, Hakan Ferhatosmanoglu, and Murat Demirbas. 2010. Short text classification in twitter to improve information filtering. In Proceedings of the 33rd international ACM SIGIR conference on Research and development in information retrieval, pages 841–842. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stanford</author>
</authors>
<date>2001</date>
<note>Stanford WebBase project. http://bit.ly/WebBase.</note>
<marker>[Stanford2001]</marker>
<rawString>Stanford. 2001. Stanford WebBase project. http://bit.ly/WebBase.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kristina Toutanova</author>
<author>Dan Klein</author>
<author>Christopher Manning</author>
<author>William Morgan</author>
<author>Anna Rafferty</author>
<author>Michel Galley</author>
</authors>
<date>2000</date>
<note>Stanford log-linear part-of-speech tagger. http://nlp.stanford.edu/software/tagger.shtml.</note>
<marker>[Toutanova et al.2000]</marker>
<rawString>Kristina Toutanova, Dan Klein, Christopher Manning, William Morgan, Anna Rafferty, and Michel Galley. 2000. Stanford log-linear part-of-speech tagger. http://nlp.stanford.edu/software/tagger.shtml.</rawString>
</citation>
<citation valid="false">
<authors>
<author>2013a</author>
</authors>
<title>Graph of relations project.</title>
<note>http://ebiq.org/j/95.</note>
<marker>[UMBC2013a]</marker>
<rawString>UMBC. 2013a. Graph of relations project. http://ebiq.org/j/95.</rawString>
</citation>
<citation valid="false">
<authors>
<author>2013b</author>
</authors>
<title>Semantic similarity demonstration.</title>
<note>http://swoogle.umbc.edu/SimService/.</note>
<marker>[UMBC2013b]</marker>
<rawString>UMBC. 2013b. Semantic similarity demonstration. http://swoogle.umbc.edu/SimService/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Z Wu</author>
<author>M Palmer</author>
</authors>
<title>Verb semantic and lexical selection.</title>
<date>1994</date>
<booktitle>In Proceedings of the</booktitle>
<marker>[Wu and Palmer1994]</marker>
<rawString>Z. Wu and M. Palmer. 1994. Verb semantic and lexical selection. In Proceedings of the</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>