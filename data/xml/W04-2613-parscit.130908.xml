<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.995614">
Generating Linear Orders of Text-Based Events
</title>
<author confidence="0.990495">
Kathleen Hornsby
</author>
<affiliation confidence="0.975476333333333">
National Center for Geographic
Information and Analysis
University of Maine
</affiliation>
<address confidence="0.748196">
Orono, ME 04469-5711
</address>
<email confidence="0.999362">
khornsby@spatial.maine.edu
</email>
<author confidence="0.933341">
Suzannah Hall
</author>
<affiliation confidence="0.919933">
Department of Spatial Information
Science and Engineering
University of Maine
</affiliation>
<address confidence="0.746937">
Orono, ME 04469-5711
</address>
<email confidence="0.999273">
shall@spatial.maine.edu
</email>
<sectionHeader confidence="0.995644" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999990631578947">
Events described in textual narratives do not
always occur in neat, chronological order but
occur, for example, during or overlapping
each other or as simultaneous events. Summa-
rizations of narratives, however, benefit from
a simpler, linear ordering of events. This pa-
per describes an approach for modeling events
in text as event intervals and for generating
linear orders of event intervals, useful for the
summarization of events or as the basis for
question answering systems. Linear orders are
derived through reducing the set of thirteen
possible event interval relations to a set of
only before or equal relations. The mapping
of event interval relations into before/after se-
quences requires the support of additional
constraints in order to preserve the original
semantics of the events presented in the text
and to derive plausible orders of events.
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.996002953846154">
The world is a dynamic place and the activities and ac-
tions that are part of our everyday experience include
such phenomena as the flow of traffic on the morning
drive to work, a person walking across a street, or the
fluctuation of water bodies due to seasonal change. An
interest in developing computational models that convey
the dynamic aspects of the world has resulted in a more
explicit focus on modeling events, i.e., actions that re-
sult in some change to an entity over time, such as the
creation, elimination, or transmission of entities (Al-
Taha and Barrera, 1994; Claramunt and Theriault, 1995;
Claramunt and Theriault, 1996; Medak, 1999; Hornsby
and Egenhofer, 2000). The segmentation of real-world
happenings into events facilitates the processing and
conveying of natural language information to a user
(Zacks and Tversky, 2001). An understanding of text is
improved if the event structure of the text can be recon-
structed. Alfonseca and Manandhar (2002) extract
events based on verbs that represent actions, verbs asso-
ciated with the verb to be which represent states, and
occurrences of nouns that are specifications of verbs,
such as arrival or accident. Events are anchored in time
relative to either the time the text is written or to the
main event, and reordered based on this anchoring and
verb tenses. Indexing and information retrieval for cur-
rent and historical reports on infectious disease out-
breaks is improved through an approach where events
relating to occurrences of infectious diseases are auto-
matically extracted from news sources on the Internet
(Grishman et al., 2002). These events are then used to
populate a database with the view that coupling the text-
based event extraction with a database approach, offers
better indexing for reports on infectious disease out-
breaks.
Reasoning about events commonly requires assem-
bling the events into a sequence or order of events such
that a temporal pattern of events becomes distinguish-
able (Frank, 1998) and more understandable. For many
reasoning tasks involving events, users require a simple,
total order of events, where for every pair of events, A
and B, either A is before B or B is before A (or both)
(Frank, 1998). The case where A is before B and B is
before A describes the case where A occurs at the same
time as B. This linear sequencing helps us to understand
and communicate in a simpler fashion how events occur
over time.
In a typical database, the values of one or more at-
tributes of data may be ordered through queries to the
database using a database query language such as SQL.
Dynamic scenarios as captured in text-based narratives,
for example, require alternative approaches to ordering,
where orders are based on events or the relations among
events even though the knowledge about these relations
may be incomplete or uncertain (Pustejovsky et al.,
2003). This paper presents methods to generate linear
orders of events from more complex orderings of events
in text. These linear orders provide simpler, summarized
views of the events in a narrative as well as a basis for
event-based question and answer systems. Automatic
text summarization strategies are necessary to support
decision making from large textual narratives as well as
the large number of information resources available via
the Web (Mani and Maybury, 2001). Temporal seman-
tics and events have been considered in the context of
time-based summarization strategies that assist users to
monitor changes in news coverage over time (Allan et
al., 2001).
In this paper, entities refer to phenomena in the real
world, and an event results in some change to an entity
over time. Events are assumed to be linear with both a
start point and an end point. Events that are ongoing,
i.e., have no end, are not treated here, nor are pre-
existing events, i.e., those that have no known start
point.
The objective of this paper is to introduce an ap-
proach for automatically generating plausible linear
orders of events from partially-ordered sets of event
intervals drawn from text descriptions. The remainder of
this paper is structured as follows: Section 2 describes
events modeled as event intervals and the relations that
hold between event intervals. Section 3 presents an ap-
proach to generating linear orders of event intervals
where the set of 13 possible event interval relations are
reduced to either before or equals. In Section 4 an ex-
ample is introduced to demonstrate this approach. The
next section further refines the ordering process by in-
corporating constraints derived from the semantics of
the original event interval relations, and Section 6 uses
the example scenario to illustrate the use of these se-
mantics in the ordering process. Section 7 presents the
conclusions and discusses future work.
2 Events and relations among events
Events are often modeled as being instantaneous such
as, for example, an update to a bank account or the
transmission of an electronic message, i.e., changes of
state having no duration (Hinze and Voisard, 2002).
Alternatively, events may be modeled as occurring over
a period of time and therefore have duration. These
events are typically associated with a specific point in
time (Motakis and Zaniolo, 1995), usually the point at
which the event finishes (Galton and Augusto, 2002). In
linguistics and cognitive psychology, an event is most
often modeled as occurring over a period of time
(Larson, 1999; Pedersen and Wright, 2002), and human
perceptions of this event time are of particular interest
to researchers. For example, in a court case, a suspect’s
claim about events during a particular time period ver-
sus a witness’ perception of the same events may affect
the jury and make a difference to the outcome of a trial
(Pedersen and Wright, 2002).
The events described in this paper are treated as in-
tervals with a start point and end point, and are assumed
to have some duration. For example, LowPressure-
Moves refers to an event–the movement of a low pres-
sure system–modeled as an interval. Text, such as a
paragraph describing the weather over the past twenty-
four hours, can be processed to yield a set of event-
relation combinations. Our focus in this paper is not so
much on event extraction from text but rather the meth-
ods to automatically generate a plausible linear order of
events. As event intervals are assumed to be linear, Al-
len’s temporal interval relations (Allen, 1983) describe
the set of possible relations that hold among event inter-
vals (Figure 1). For example, scattered showers occur
this afternoon before drier air arrives from the west
relates two events, ScatteredShowersOccur and D ri-
erAirArrives, by the temporal interval relation before.
This approach assumes an underlying linear model of
time and excludes cyclic or branching time (Frank,
1998; Hornsby et al., 1999).
</bodyText>
<figureCaption confidence="0.9874235">
Figure 1. Thirteen event interval relations (after
Allen 1983).
</figureCaption>
<bodyText confidence="0.999769">
Retrieving information about event intervals that
shows how events relate to each other is required for an
understanding of how entities described in a narrative
evolve over space and time. Generating orders of events
is necessary such that useful information about events is
presented for users, either as a summarization tool for
large information resources or as a method for question
answering.
</bodyText>
<sectionHeader confidence="0.946047" genericHeader="method">
3 Ordering events
</sectionHeader>
<bodyText confidence="0.99920265">
To generate linear orders of events, the set of 13 possi-
ble event interval relations is reduced to a set compris-
ing only before or equal relations. Given two event
intervals, A and B, for example, if the start point of A is
before or equal to the start point of B and the end point
of A is before the end point of B, then A is before B in
the linear order. This holds for the cases of: A before B,
A meets B, A overlaps B, and A starts B (Figure 2a).
Event A is also before B in cases where the start point of
B is after the start point of A, and the end point of B is
before or equal to the end point of A, as in the occur-
rence of A contains B and A ended_by B.
Where the start point of A is after the start point of B
and the end point of A is before or equal to the end point
of B, then B is before A in the linear order. This holds
for A during B and A ends B, as well as for cases, A after
B, A met_by B, A overlapped_by B, and A started_by B,
where the start point of B is before or equal to the start
point of A, and the end point of B is before the end point
of A (Figure 2b).
</bodyText>
<figure confidence="0.997406333333333">
A before B A before B
0
A meets B 0 A before B
A overlaps B 0 A before B
A starts B 0 A before B
A contains B 0 A before B
A ended_by B 0 A before B
A during B B before A
0
A ends B 0 B before A
A after B 0 B before A
A met_by B 0 B before A
A overlapped_by B 0 B before A
A started_by B 0 B before A
A equals B 0 A equals B
</figure>
<figureCaption confidence="0.873033">
Figure 2. The set of event interval relations are
reduced to (a) A before B, (b) B before A, and (c)
A equals B.
</figureCaption>
<bodyText confidence="0.999992866666667">
Finally, where the start point of A is equal to the
start point of B and the end point of A is equal to the end
point of B, then A equals B in the linear order (Figure
2c). For these cases, the event intervals are considered
to be simultaneous.
If all possible relations that hold between events are
known through the narrative, then only one plausible
linear order will result. More commonly, however, it
may not be known for certain how each event interval is
related to the other intervals. For these cases, partial
orders exist, and the events in the narrative may corre-
spond to multiple possible linear orders.
In these cases, without filtering or abstracting some
of the events, the number of possible orders generated
can easily become too large for a user to comprehend. A
method for filtering or abstracting is necessary. One
method of abstraction is to remove any events that occur
at the same time as another event with a longer duration,
and about which no other information is known. Thus
any event that occurs during another event would be
discounted if that event has no known relation to an-
other event. In addition, events that start other events
are of shorter duration than the events that they start,
and may also be abstracted if no other relation exists
between the starting event and a third event. An event
that ends another event and about which no other infor-
mation is known would also be abstracted. This filtering
will prune many of the orders from the set.
The next section presents an example scenario
where orders of events are abstracted from a short text.
</bodyText>
<sectionHeader confidence="0.989266" genericHeader="method">
4 Example Scenario
</sectionHeader>
<bodyText confidence="0.999152375">
Consider a narrative describing vehicles traveling on a
bridge and boat traffic maneuvering in the harbor below
the bridge, as well as activities on land in preparation
for a ferry’s arrival:
While the car was crossing over the
bridge, a ferry passed underneath and an
ambulance went rushing past. A plane
flew over as the ferry passed under the
bridge. As the ferry reached the dock on
the other side of the bridge, a truck ar-
rived to pick up goods from the boat.
Events described in a narrative can be reduced to a
set of event-relation combinations, where two event
intervals are related by one relation. There are n event
intervals and m relations in the set, where m ! 13 is the
number of possible event interval relations.
In this example, there are n=6 event intervals in-
cluding CarCrossesBridge, FerryUnderBridge, Ambu-
lancePassesCar, FerryDocks, and TruckArrives. There
are also m=4 (unique) relations generating the following
event-relation combinations:
FerryUnderBridge during CarCrossesBridge
AmbulancePassesCar during CarCrossesBridge
FerryDocks after FerryUnderBridge
FerryUnderBridge overlaps PlaneFliesOver
FerryDocks meets TruckArrives
From this set, the event intervals are extracted and
combined pairwise (Figure 3) such that a square matrix
E is formed with rows i and columns j, where i=1Én-1
and j=1Én-1. Cells in E are denoted as ei,j .
The matrix E is populated with the m relations that
exist between the events in the set. Event-event combi-
nations that do not exist in the set are represented by ~.
All inverse relations are included in the matrix, thereby
allowing all information about an event to be captured
by a single row. The inverse of an equals relation is
another equals. If orders are generated from the exam-
ple matrix at this point, 15 linear orders are possible. To
avoid such large result sets, filtering is performed on the
matrix. Each row of the matrix is checked for a single
during, starts, or ends relation, and these rows are
eliminated from the matrix. The row for Ambulance-
PassesCar contains only a during relation, so this row
and its corresponding column are eliminated. The re-
vised matrix E1 (Figure 4) becomes the foundation for
computing the orders.
Applying the mappings to before for the relations in
the matrix E1 now yields a total of 3 possible orders:
</bodyText>
<listItem confidence="0.980433444444444">
(1) CarCrosseBridge before FerryUnderBridge before
Ferry-Docks before TruckArrives before PlaneFli-
esOver
(2) CarCrossesBridge before FerryUnderBridge before
Ferry-Docks before PlaneFliesOver before
TruckArrives
(3) CarCrossesBridge before FerryUnderBridge before
Plane-FliesOver before FerryDocks before
TruckArrives
</listItem>
<bodyText confidence="0.998131777777778">
A key aspect to generating the linear orders is that
the result set comprises orders that are plausible, i.e.,
capture as closely as possible the semantics of the origi-
nal text. The next section describes a method for in-
voking additional constraints that increase the
plausibility of all orders that are derived. Keeping the
plausibility of the automatically generated linear orders
as high as possible, has the added benefit of reducing
the number of linear orders that are generated.
</bodyText>
<table confidence="0.9760414">
E=
FerryUnderBridge CarCrossesBridge AmbulancePassesCar FerryDocks PlaneFliesOver TruckArrives
FerryUnderBridge ~ during ~ before overlaps ~
CarCrossesBridge contains ~ contains ~ ~ ~
AmbulancePassesCar ~ during ~ ~ ~ ~
FerryDocks after ~ ~ ~ ~ meets
PlaneFliesOver overlapped_by ~ ~ ~ ~ ~
TruckArrives ~ ~ ~ met_by ~ ~
Figure 3. Matrix based on a set of event-relation pairs
FerryUnderBridge CarCrossesBridge FerryDocks PlaneFliesOver TruckArrives
FerryUnderBridge ~ during before overlaps ~
CarCrossesBridge contains ~ ~ ~ ~
FerryDocks after ~ ~ ~ meets
PlaneFliesOver overlapped_by ~ ~ ~ ~
TruckArrives ~ ~ met_by ~ ~
</table>
<figureCaption confidence="0.998116">
Figure 4. Matrix of events and relations after abstraction
</figureCaption>
<equation confidence="0.681937">
E1 =
</equation>
<bodyText confidence="0.965851818181818">
5 Applying additional constraints based
on semantics of relations
Each event interval relation is associated with par-
ticular semantics that should be maintained in order
to generate plausible linear orders. For example, the
meet relation describes a scenario in which two event
intervals, A and B, occur such that the start time of B
is simultaneous with the end-time of A. No other
events would be expected to occur between these two
events in a resulting linear order. Combine A meets B
with A before C, however, and one resulting linear
order of events is A before C before B, in which event
C occurs between A and B. Incorporating the seman-
tics of the relations offers a way to increase the plau-
sibility of linear orders of events. Based on this work,
mapping rules are defined that reduce the thirteen
event interval relations to either before or equals, and
constraints are applied to allow the preservation of
key semantics associated with any given event inter-
val relation. These constraints provide the basis for �
mapping event intervals and relations to a linear or-
der of events.
</bodyText>
<subsectionHeader confidence="0.974591">
5.1 Semantics involving during and contains
</subsectionHeader>
<bodyText confidence="0.9933288">
relations
The semantics associated with during and contains
relations capture cases where one event begins and
ends within the time that another event is occurring.
Applying the mapping rules to a case where, for ex-
ample, A before B and C during B, with no regard to
the semantics of the during relation, returns A before
B and B before C, i.e., the linear order, A before B
before C. If, in addition, D after A, one linear order
becomes A before B before D before C and the events
that are originally related by during are no longer
together. In order to preserve the semantics relating
to during and contains for a linear order of events,
therefore, a constraint is applied where any events
related by during, are always sequential in the re-
sulting linear order of events and no intermediate
events can occur between them, i.e. A during
BÆB pA and /$ C  |B --&lt;C pA, read A during B leads
to B before A and there does not exist a C such that B
before C before A. For cases where A contains B, A
contains BÆA pB and /$ C  |A�C�B.
� For cases where more than one event occurs dur-
ing another event interval, for example if C during A
and A during B, the events can be put in order and the
semantics preserved. C during A reduces to A before
</bodyText>
<equation confidence="0.948459">
� � � �
</equation>
<bodyText confidence="0.977624">
C and A during B reduces to B before A, resulting in
the order B before A before C. If it is also known that
event D occurs before A and during B, the linear or-
der then becomes B before D before A before C. In�
this case, B and A are separated by event interval D
since both A and D are during event B but both
events cannot immediately follow B. Formally, A
during B Æ B p A except if $ D |D during B , D be-
fore A then B p D -&lt; A.
</bodyText>
<subsectionHeader confidence="0.980792">
5.2 Semantics involving meets, met_by, starts,
</subsectionHeader>
<bodyText confidence="0.799231">
started_by, ended_by, and ends
�
Applying the mapping rules to any of the relations
</bodyText>
<equation confidence="0.483684">
� �
</equation>
<bodyText confidence="0.996276352941177">
meets, starts, or ended_by results in the relation being
replaced by before. I.e., A meets B Æ A before B, A
starts B Æ A before B, and A ended_by B Æ A before
B. In all of these cases, it is implausible that a third
event would occur between events A and B in a linear
order. A constraint is applied to prevent this, and
thus when R = meets, starts or ended_by, A R B Æ
ASB and EC  |A
It is equally implausible that a third event would
occur between two events related by an inverse of
one of the above three relations, and a similar con-
straint is applied: when R = met_by, started_by or
ends, A R B Æ BSA and /$ C  |B pC pA. Because
the constraints for during take precedence over those
for all other relations, some exceptions to the above
constraints are necessary. In the case of meets and
met_by, if, in addition to an event-relation pair that
</bodyText>
<equation confidence="0.987362">
� � � �
</equation>
<bodyText confidence="0.983836066666667">
meets, for example A meets B, there are events that
occur during A, additional rules are necessary. For
these cases we allow events that meet to be separated
by other events in the resulting linear order. For ex-
ample, given A meets B and D during A, these event-
relation pairs are mapped to A before B and A before
D. Two linear orders result, A before D before B, and
A before B before D. The latter order is implausible,
however, because event B occurs between two dur-
ing-events, D and A. To prevent this type of implau-
sible order, an addition is made to the meets
constraint, if $ D  |D during A then A --&lt;D --&lt;B, or if $
E  |B during E and not A during E, then A
Similarly, A met_by BÆB pA and /$ C  |B
except if $ D  |D during B then B pD pA, or if $ E |
</bodyText>
<figure confidence="0.8818422">
A during E and not B during E, then B
� �
�E�A.
One exception to the
started_by
A, an event (e.g., C)
event A. Here the
B. Another exception is in the case where event B is
during a third event. Given A starts B and D contains
B, the resulting order is A before D before B. Thus A
starts B
A
except if
D contains B then
A
For A started_by B , A started_by B
B
and E
except if
D
D during B
then B
An exception is made in the case of ends an
constraints for starts and
�
</figure>
<equation confidence="0.973280863636364">
occurs if, given A starts B or B started_by
� � �
or a set of events occurs during
�
resulting order is A before C before
�
Æ
pB
$ D|
pDpB.
Æ
pA
C|B -&lt;C -&lt;A,
$
|
pDpA.
d
ended_by if, given A ends B or B ended_by A, a set of
�C�B.
E
--&lt;B.
pC pA,
</equation>
<bodyText confidence="0.8716643">
events occurs during the event that is ended_by the
other. In this case these events occur between the two
events related by ends in the linear order. For exam-
ple, consider A ends B and C during B. These map to
B before A and B before C, and the resulting plausible
order is B before C before A. Event interval C falls
between B and A because C is related to event B by
during. Thus A ends B Æ BSA and
except if $ D  |D during B then B pD --&lt;A, or if $ E |
A during E and not B during E, then B pE pA. In the
</bodyText>
<figure confidence="0.804066142857143">
case where A is ended_by B, A ended_by B Æ A-&lt;B
and /$ C  |A C
� B, excep� t if $ D  |D during A then
� �
A --&lt;D --&lt;B, or if $ E  |B during E and not A during E,
� �
A�E�B.
</figure>
<subsectionHeader confidence="0.981703">
Semantics involving overlaps and
</subsectionHeader>
<bodyText confidence="0.9743306875">
The semantics involving overlaps and
probably pose the most challenges for automatically
generating a linear sequence of events. When one
event interval overlaps another, the duration of the
overlap is not always known. It is possible that two
events almost coincide, approximating an equals re-
lation. It is also possible that the overlap is very
small, such that one event is almost before the other,
or that the two event intervals almost meet. In this
work, two event intervals, A and B, that overlap are
reduced to A before B. No additional constraint is
applied because it is assumed that the relation will
hold even if there are intermediate events between
the events that overlap, and therefore, A overlaps B
ASB. Overlapped_by is represented as A over-
lapped_by B
</bodyText>
<figure confidence="0.919651111111111">
B
5.3
�
over-
lapped_by
overlapped_by
Æ
Æ
pA.
</figure>
<bodyText confidence="0.8539687">
contrast to the other relations, it is acceptable to have
additional events occurring between any before-
events, since the relation before continues to hold
regardless of the number of events between the two
events. Therefore, no constraints are necessary and A
before B
A
This same reasoning holds for any
event interv
should be preserved in the linear order of events. In
</bodyText>
<figure confidence="0.508922714285714">
�
Æ
pB.
als related by after, such that A after B Æ
BSA
6 Using a matrix to generate orders
The matrix
</figure>
<bodyText confidence="0.886486523809524">
is the basis for generating linear or-
ders. The events are arranged in a linear order using
the constraints and mapping rules presented in the
previous section. Parsing each row of
the first
event-event combination
represents either a re-
lation linking the two event intervals or is an empty
cell,
Empty cells obviously do not contribute to
any linear order. In this example, there is no valid
relation for
Cell
returns FerryUnderBridge during Car-
CrossesBridge, and based on the mapping rules, an
order is instantiated, CarCrossesBridge before Fer-
ryUnderBridge.
The next cell encountered,
contains FerryUn-
derBridge before FerryDocks, and the order is up-
dated to CarCrossesBridge before FerryUnderBridge
</bodyText>
<figure confidence="0.823524944444444">
before FerryDocks. Cell
contains FerryUnder-
Bridge overlaps PlaneFliesOver, and because the
relation between PlaneFliesOver and Ferry
E1
E1,
(e1,1)
~.
e1,1.
e1,2
e1,3,
e1,4
Docks is
unknown, two possible orders result:
(1) CarCrossesBridge before FerryUnderBridge before
PlaneFliesOver before FerryDocks
(2) CarCrossesBridge before FerryUnderBridge before
FerryDocks before PlaneFliesOver
</figure>
<bodyText confidence="0.969962222222222">
there is no valid relation and no updates
are made to the orders. The next event-event combi-
nation considered is
i.e., CarCrossesBridge
contains FerryUnderBridge. This is redundant since
FerryUnderBridge during CarCrossesBridge has
already been considered, and so no changes are nec-
essary to the orders. No valid relations are present in
the remainder of the second row, and the next rela-
tion encountered is
FerryDocks after FerryUn-
derBridge. The inverse of this relation has also
already been considered and no changes are made.
However,
contains FerryDocks meets TruckAr-
rives, which does result in an update to each of the
orders. Adding the event TruckArrives such that the
constraints of meets are satisfied return
</bodyText>
<figure confidence="0.907928166666667">
e1,5,
e2,1,
e3,1,
e2,5
s two orders:
(1) CarCrossesBridge before FerryUnderBridge before
PlaneFliesOver before FerryDocks before TruckAr-
rives
(2) CarCrossesBridge before FerryUnderBridge before
FerryDocks before TruckArrives before PlaneFli-
esOver
then
</figure>
<subsectionHeader confidence="0.836515">
5.4 Semantics involving before and after
</subsectionHeader>
<bodyText confidence="0.865896">
When one event is before another event, this order
</bodyText>
<subsectionHeader confidence="0.711739">
5.5Semantics involving equals
</subsectionHeader>
<bodyText confidence="0.940368384615385">
If two events are equal to each other this relation is
preserved in the ordering of events. As orders are
built, the events that are equal will remain together.
Events that are not equal in the initial set of events
and relations will not be equal in the final li
�
near or-
ders.
At
The remaining two event interval relations ex-
tracted from the matrix (PlaneFliesOver
FerryUnderBridge in
and
</bodyText>
<subsubsectionHeader confidence="0.611686">
TruckArrives met_by Ferry
</subsubsectionHeader>
<figure confidence="0.715171">
over-
lapped_by
e4,1
Docks in e5,3) are redun-
--&lt;C
--&lt;A,
/$ C  |B
</figure>
<bodyText confidence="0.998131">
dant because their inverses have already been consid-
ered, and thus require no additional changes to the
orders. When all relations have been processed, the
result is a set O of all possible orders that are plausi-
ble and maintain as closely as possible the original
semantics of the relations:
</bodyText>
<figure confidence="0.81901175">
O= { CarCrossesBridge before FerryUnderBridge before
PlaneFliesOver before FerryDocks before TruckArrives,
CarCrossesBridge before FerryUnderBridge before Ferry-
Docks before TruckArrives before PlaneFliesOver }
</figure>
<bodyText confidence="0.999277615384616">
Using the semantics of the relations, both orders
generated are plausible. PlaneFliesOver always oc-
curs after the ferry is under the bridge, as does Fer-
ryDocks. FerryDocks is always directly before
TruckArrives with no intermediate events between
them. If the result set O is compared to the set of or-
ders generated in section 4, i.e., before the semantic
constraints were applied, O is shown to consist of a
smaller number of orders. These correspond to the
most plausible orders given the original set of event-
relation combinations present in the text. Orders that
do not meet the constraints based on semantics are
eliminated and not presented to a user.
</bodyText>
<sectionHeader confidence="0.991219" genericHeader="conclusions">
7 Conclusions and future work
</sectionHeader>
<bodyText confidence="0.999988675675676">
This paper introduces a method for abstracting events
from text and generating a linear order of these
events based on the temporal semantics associated
with them. These simpler orders are useful as sum-
maries of the events contained in the textual descrip-
tion. They also provide a basis for reasoning about
the events and performing operations on the orders,
such as returning, for example, all events that hap-
pened before event X, or returning the first event, last
event, etc. The approach presented in the paper mod-
els events as event interval relations and maps the
thirteen possible event interval relations to before and
equals. A system of constraints that preserve the se-
mantics associated with the original event relations
assists in generating orders that are plausible. For
example, when one event is during another, no in-
termediate events will fall between these two events
in a linear order. Since for many cases not all rela-
tions among events are known, it is possible that
there are many candidate linear orders produced for a
given narrative. In an effort to reduce the number of
orders, methods are presented for filtering the orders
based on event relations.
This linear sequencing helps us to understand and
communicate how events described in text occur over
time and serves as the basis for establishing a time-
line of events. Timelines organize events into
chronological order and provide a method of encap-
sulation or summarization where detailed data are
rendered in a simpler, temporally ordered fashion.
Future work will focus on additional approaches for
filtering possible orders, for example, if the narrative
includes the locations of events, this spatial informa-
tion can be used to refine further the orders. Events
that happen beyond a certain distance, or outside a
known area of interest, for example, can be ab-
stracted from the orders.
</bodyText>
<sectionHeader confidence="0.996377" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.996392666666667">
This research is supported by the National Geospa-
tial-Intelligence Agency under grant number,
NMA201-00-1-200. Kathleen Hornsby&apos;s research is
further supported by a grant from the National Insti-
tute of Environmental Health Sciences, NIH, under
grant number 1 R 01 ES09816-01.
</bodyText>
<sectionHeader confidence="0.999192" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999774910112359">
Khaled Al-Taha and Renato Barrera. 1994. Identities
through Time. In Proceedings of the Inter-
national Workshop on Requirements for In-
tegrated Geographic Information Systems,
pages 1-12, New Orleans, LA.
Enrique Alfonseca and Suresh Manandhar. 2002. A
Framework for Constructing Temporal
Models from Texts. In proceedings of the
FLAIRS Conference, pages 456-460,
Pensacola Beach, FL.
James Allan, Rahul Gupta, and Vikas Khandelwal.
2001. Temporal Summaries of News Topics.
In proceedings of SIGIR&apos;01, New Orleans,
Louisiana, September 9-12, 2001.
James F. Allen. 1983. Maintaining Knowledge
About Temporal Intervals. Communications
of the ACM 26(11): 832-43.
Christophe Claramunt and Marius Theriault. 1995.
Managing Time in GIS: An Event-Oriented
Approach. In Proceedings of the Interna-
tional Workshop on Temporal Databases,
pages 23-42, Zurich.
Christophe Claramunt and Marius Theriault. 1996.
Toward Semantics for Modelling Spatio-
Temporal Processes within GIS. In Pro-
ceedings of the 7th International Symposium
on Spatial Data Handling, pages 47-63,
Delft, NL.
Andrew Frank. 1998. Different Types of &amp;quot;Times&amp;quot; in
GIS. In Spatial and Temporal Reasoning in
Geographic Information Systems, eds. M.J.
Egenhofer and R.G. Golledge. Oxford Uni-
versity Press, New York.
Antony Galton and Juan Carlos Augusto. 2002. Two
Approaches to Event Definition. In Pro-
ceedings of the 13th International Confer-
ence on Database and Expert Systems
Applications (DEXA&apos;02), pages 547-556,
Aix Provence, France.
Ralph Grishman, Silja Huttunen, and Roman Yan-
garber. 2002. Real-Time Event Extraction
for Infectious Disease Outbreaks. In Pro-
ceedings of Human Language Technology
Conference, San Diego, CA, March 24-
27,2002.
Annika Hinze and Agnes Voisard. 2002. A Flexible
Parameter-Dependent Algebra for Event
Notification Services. Freie Universitat Ber-
lin, Berlin.
Kathleen Hornsby and Max J. Egenhofer. 2000.
Identity-Based Change: A Foundation for
Spatio-Temporal Knowledge Representa-
tion. International Journal of Geographical
Information Science, 14 (3): 207-224.
Kathleen Hornsby, Max J. Egenhofer, and Patrick
Hayes. 1999. Modeling Cyclic Change. Ad-
vances in Conceptual Modeling, ER&apos;99
Workshop on Evolution and Change in Data
Management, pages 98-109, Paris, France.
Richard Larson. 1999. Time and Event Measure. In
Proceedings of the Linguistic Society of
America Meeting, Los Angeles, CA.
Inderjeet Mani and Mark T. Maybury, eds. 2001.
Advances in Automatic Text Summarization.
Cambridge, Massachusetts: MIT Press.
Damir Medak. 1999. Lifestyles - an Algebraic Ap-
proach to Change in Identity. In Proceed-
ings of the International Workshop, Spatio-
Temporal Database Management,
STDBM&apos;99, pages 19-38, Edinburgh, Scot-
land.
Iakovos Motakis and Carlo Zaniolo. 1995. A Formal
Semantics for Composite Temporal Events
in Active Database Rules. U.C.L.A. Com-
puter Science Department, Los Angeles.
Alice C. I. Pedersen and Daniel B. Wright. 2002. Do
Differences in Event Descriptions Cause
Differences in Duration Estimates? Applied
Cognitive Psychology 16: 769-83.
James Pustejovsky, José Castaiio, Robert Ingria,
Roser Saurí, Robert Gaizauskas, Andrea
Setzer, and Graham Katz. 2003. TimeML:
Robust Specification of Event and Temporal
Expressions in Text. In Proceedings of AAAI
Spring Symposium, pages 28-34, Palo Alto,
CA.
Jeffrey Zacks and Barbara Tversky. 2001. Event
Structure in Perception and Conception.
Psychological Bulletin 127(1): 3-21.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.999843">Generating Linear Orders of Text-Based Events</title>
<author confidence="0.995027">Kathleen</author>
<affiliation confidence="0.99408">National Center for Information and University of</affiliation>
<address confidence="0.989833">Orono, ME 04469-5711</address>
<email confidence="0.999758">khornsby@spatial.maine.edu</email>
<author confidence="0.699111">Suzannah</author>
<affiliation confidence="0.999303666666667">Department of Spatial Science and University of</affiliation>
<address confidence="0.988547">Orono, ME 04469-5711</address>
<email confidence="0.999901">shall@spatial.maine.edu</email>
<abstract confidence="0.993971892473118">Events described in textual narratives do not always occur in neat, chronological order but occur, for example, during or overlapping each other or as simultaneous events. Summarizations of narratives, however, benefit from a simpler, linear ordering of events. This paper describes an approach for modeling events in text as event intervals and for generating linear orders of event intervals, useful for the summarization of events or as the basis for question answering systems. Linear orders are derived through reducing the set of thirteen possible event interval relations to a set of The mapping event interval relations into sequences requires the support of additional constraints in order to preserve the original semantics of the events presented in the text and to derive plausible orders of events. The world is a dynamic place and the activities and actions that are part of our everyday experience include such phenomena as the flow of traffic on the morning drive to work, a person walking across a street, or the fluctuation of water bodies due to seasonal change. An interest in developing computational models that convey the dynamic aspects of the world has resulted in a more focus on modeling actions that result in some change to an entity over time, such as the creation, elimination, or transmission of entities (Al- Taha and Barrera, 1994; Claramunt and Theriault, 1995; Claramunt and Theriault, 1996; Medak, 1999; Hornsby and Egenhofer, 2000). The segmentation of real-world happenings into events facilitates the processing and conveying of natural language information to a user (Zacks and Tversky, 2001). An understanding of text is improved if the event structure of the text can be reconstructed. Alfonseca and Manandhar (2002) extract events based on verbs that represent actions, verbs assowith the verb be represent states, and occurrences of nouns that are specifications of verbs, as Events are anchored in time relative to either the time the text is written or to the main event, and reordered based on this anchoring and verb tenses. Indexing and information retrieval for current and historical reports on infectious disease outbreaks is improved through an approach where events relating to occurrences of infectious diseases are automatically extracted from news sources on the Internet (Grishman et al., 2002). These events are then used to populate a database with the view that coupling the textbased event extraction with a database approach, offers better indexing for reports on infectious disease outbreaks. Reasoning about events commonly requires assembling the events into a sequence or order of events such that a temporal pattern of events becomes distinguishable (Frank, 1998) and more understandable. For many reasoning tasks involving events, users require a simple, order events, where for every pair of events, either is before B is before A both) 1998). The case where is before B is A the case where the same as This linear sequencing helps us to understand and communicate in a simpler fashion how events occur over time. In a typical database, the values of one or more attributes of data may be ordered through queries to the database using a database query language such as SQL. Dynamic scenarios as captured in text-based narratives, for example, require alternative approaches to ordering, where orders are based on events or the relations among events even though the knowledge about these relations may be incomplete or uncertain (Pustejovsky et al., 2003). This paper presents methods to generate linear orders of events from more complex orderings of events in text. These linear orders provide simpler, summarized views of the events in a narrative as well as a basis for event-based question and answer systems. Automatic text summarization strategies are necessary to support decision making from large textual narratives as well as the large number of information resources available via the Web (Mani and Maybury, 2001). Temporal semantics and events have been considered in the context of time-based summarization strategies that assist users to monitor changes in news coverage over time (Allan et al., 2001). this paper, to phenomena in the real and an in some change to an entity over time. Events are assumed to be linear with both a start point and an end point. Events that are ongoing, i.e., have no end, are not treated here, nor are preexisting events, i.e., those that have no known start point. The objective of this paper is to introduce an approach for automatically generating plausible linear orders of events from partially-ordered sets of event intervals drawn from text descriptions. The remainder of this paper is structured as follows: Section 2 describes events modeled as event intervals and the relations that hold between event intervals. Section 3 presents an approach to generating linear orders of event intervals where the set of 13 possible event interval relations are to either In Section 4 an example is introduced to demonstrate this approach. The next section further refines the ordering process by incorporating constraints derived from the semantics of the original event interval relations, and Section 6 uses the example scenario to illustrate the use of these semantics in the ordering process. Section 7 presents the conclusions and discusses future work. and relations among events Events are often modeled as being instantaneous such as, for example, an update to a bank account or the transmission of an electronic message, i.e., changes of state having no duration (Hinze and Voisard, 2002). Alternatively, events may be modeled as occurring over a period of time and therefore have duration. These events are typically associated with a specific point in time (Motakis and Zaniolo, 1995), usually the point at which the event finishes (Galton and Augusto, 2002). In linguistics and cognitive psychology, an event is most often modeled as occurring over a period of time (Larson, 1999; Pedersen and Wright, 2002), and human perceptions of this event time are of particular interest to researchers. For example, in a court case, a suspect’s about events during a particular time period verwitness’ perception of the same events may affect the jury and make a difference to the outcome of a trial (Pedersen and Wright, 2002). The events described in this paper are treated as intervals with a start point and end point, and are assumed to have some duration. For example, LowPressure- Moves refers to an event–the movement of a low pressure system–modeled as an interval. Text, such as a paragraph describing the weather over the past twentyfour hours, can be processed to yield a set of eventrelation combinations. Our focus in this paper is not so much on event extraction from text but rather the methods to automatically generate a plausible linear order of events. As event intervals are assumed to be linear, Allen’s temporal interval relations (Allen, 1983) describe the set of possible relations that hold among event inter- (Figure 1). For example, showers occur this afternoon before drier air arrives from the west two events, riby the temporal interval relation This approach assumes an underlying linear model of time and excludes cyclic or branching time (Frank, 1998; Hornsby et al., 1999). Figure 1. Thirteen event interval relations (after Allen 1983). Retrieving information about event intervals that shows how events relate to each other is required for an understanding of how entities described in a narrative over space and time. Generating of events is necessary such that useful information about events is presented for users, either as a summarization tool for large information resources or as a method for question answering. events To generate linear orders of events, the set of 13 possible event interval relations is reduced to a set comprisonly Given two event for example, if the start point of the start point of the end point before the end point of then B linear order. This holds for the cases of: before meets overlaps and starts B 2a). also B cases where the start point of start point of and the end point of the end point of as in the occurof contains B ended_by the start point of start point of the end point of the end point then A the linear order. This holds during B ends as well as for cases, after met_by overlapped_by and started_by the start point of the start of and the end point of end point 2b). A 0 B 0 Figure 2. The set of event interval relations are to (a) A (b) B and (c) where the start point of the point of the end point of the end of then equals B the linear order (Figure 2c). For these cases, the event intervals are considered to be simultaneous. If all possible relations that hold between events are known through the narrative, then only one plausible linear order will result. More commonly, however, it may not be known for certain how each event interval is to the other intervals. For these cases, and the events in the narrative may correspond to multiple possible linear orders. In these cases, without filtering or abstracting some of the events, the number of possible orders generated can easily become too large for a user to comprehend. A method for filtering or abstracting is necessary. One method of abstraction is to remove any events that occur at the same time as another event with a longer duration, and about which no other information is known. Thus event that occurs event would be discounted if that event has no known relation to anevent. In addition, events that events are of shorter duration than the events that they start, and may also be abstracted if no other relation exists the and a third event. An event event and about which no other information is known would also be abstracted. This filtering will prune many of the orders from the set. The next section presents an example scenario where orders of events are abstracted from a short text. Scenario Consider a narrative describing vehicles traveling on a bridge and boat traffic maneuvering in the harbor below the bridge, as well as activities on land in preparation for a ferry’s arrival: While the car was crossing over the bridge, a ferry passed underneath and an ambulance went rushing past. A plane flew over as the ferry passed under the bridge. As the ferry reached the dock on the other side of the bridge, a truck arrived to pick up goods from the boat. Events described in a narrative can be reduced to a set of event-relation combinations, where two event are related by one relation. There are and in the set, where is the number of possible event interval relations. this example, there are event intervals in- Ambuand There also (unique) relations generating the following event-relation combinations: From this set, the event intervals are extracted and combined pairwise (Figure 3) such that a square matrix formed with rows columns where Cells in denoted as . matrix populated with the that exist between the events in the set. Event-event combinations that do not exist in the set are represented by ~. All inverse relations are included in the matrix, thereby allowing all information about an event to be captured a single row. The inverse of an is If orders are generated from the example matrix at this point, 15 linear orders are possible. To avoid such large result sets, filtering is performed on the matrix. Each row of the matrix is checked for a single starts, and these rows are from the matrix. The row for Ambulanceonly a so this row and its corresponding column are eliminated. The rematrix 4) becomes the foundation for computing the orders. the mappings to the relations in matrix yields a total of 3 possible orders: (1) CarCrosseBridge before FerryUnderBridge before Ferry-Docks before TruckArrives before PlaneFliesOver (2) CarCrossesBridge before FerryUnderBridge before Ferry-Docks before PlaneFliesOver before TruckArrives (3) CarCrossesBridge before FerryUnderBridge before Plane-FliesOver before FerryDocks before TruckArrives A key aspect to generating the linear orders is that the result set comprises orders that are plausible, i.e., capture as closely as possible the semantics of the original text. The next section describes a method for invoking additional constraints that increase the plausibility of all orders that are derived. Keeping the plausibility of the automatically generated linear orders as high as possible, has the added benefit of reducing the number of linear orders that are generated.</abstract>
<title confidence="0.786030461538462">E= FerryUnderBridge CarCrossesBridge AmbulancePassesCar FerryDocks PlaneFliesOver TruckArrives FerryUnderBridge ~ during ~ before overlaps ~ CarCrossesBridge contains ~ contains ~ ~ ~ AmbulancePassesCar ~ during ~ ~ ~ ~ FerryDocks after ~ ~ ~ ~ meets PlaneFliesOver overlapped_by ~ ~ ~ ~ ~ TruckArrives ~ ~ ~ met_by ~ ~ Figure 3. Matrix based on a set of event-relation pairs FerryUnderBridge CarCrossesBridge FerryDocks PlaneFliesOver TruckArrives FerryUnderBridge ~ during before overlaps ~ CarCrossesBridge contains ~ ~ ~ ~ FerryDocks after ~ ~ ~ meets</title>
<abstract confidence="0.965481333333334">PlaneFliesOver overlapped_by ~ ~ ~ ~ TruckArrives ~ ~ met_by ~ ~ Figure 4. Matrix of events and relations after abstraction = additional constraints based on semantics of relations Each event interval relation is associated with particular semantics that should be maintained in order to generate plausible linear orders. For example, the describes a scenario in which two event such that the start time of simultaneous with the end-time of No other events would be expected to occur between these two in a resulting linear order. Combine meets B before however, and one resulting linear of events is before C before in which event between the semantics of the relations offers a way to increase the plausibility of linear orders of events. Based on this work, mapping rules are defined that reduce the thirteen interval relations to either and constraints are applied to allow the preservation of key semantics associated with any given event interrelation. These constraints provide the basis for mapping event intervals and relations to a linear order of events. Semantics involving relations semantics associated with relations capture cases where one event begins and ends within the time that another event is occurring. Applying the mapping rules to a case where, for exbefore B during with no regard to semantics of the returns before before i.e., the linear order, before B If, in addition, after one linear order before B before D before C the events are originally related by no longer together. In order to preserve the semantics relating a linear order of events, therefore, a constraint is applied where any events by always sequential in the resulting linear order of events and no intermediate can occur between them, i.e. during  |B read during B before A there does not exist a that C before For cases where contains B, A | cases where more than one event occurs durevent interval, for example if during A during the events can be put in order and the preserved. during A to before � � � � during B to before resulting in order before A before If it is also known that A the linear orthen becomes before D before A before case, separated by event interval both cannot immediately follow Formally, B if |D during B be- A Semantics involving and � Applying the mapping rules to any of the relations � � or in the relation being by I.e., meets B before B before and ended_by B before In all of these cases, it is implausible that a third would occur between events a linear order. A constraint is applied to prevent this, and when = R B  |A It is equally implausible that a third event would occur between two events related by an inverse of one of the above three relations, and a similar conis applied: when R = R B  |B Because the constraints for during take precedence over those for all other relations, some exceptions to the above are necessary. In the case of if, in addition to an event-relation pair that � � � � for example meets there are events that additional rules are necessary. For cases we allow events that be separated by other events in the resulting linear order. For exgiven meets B during these eventpairs are mapped to before B before Two linear orders result, before D before and before B before The latter order is implausible, because event between two dur- To prevent this type of implauorder, an addition is made to the if  |D during A or if  |B during E not during then met_by  |B if  |D during B or if | during E not during then � � �E�A. One exception to the started_by A, an event (e.g., C) event A. Here the B. Another exception is in the case where event B is during a third event. Given A starts B and D contains B, the resulting order is A before D before B. Thus A starts B A except if D contains B then A For A started_by B , A started_by B B and E except if D D during B then B An exception is made in the case of ends an for � if, given starts B started_by � � � a set of events occurs � order is before C before � pB D| pDpB. pA pDpA. d given ends B ended_by a set of E occurs event that is other. In this case these events occur between the two related by the linear order. For examconsider ends B during These map to before A before and the resulting plausible is before C before Event interval related to event Thus ends B if  |D during B or if | during E not during then In the where ended_by B  |A C if  |D during A � � or if  |B during E not during � � involving semantics involving probably pose the most challenges for automatically generating a linear sequence of events. When one interval the duration of the overlap is not always known. It is possible that two almost coincide, approximating an relation. It is also possible that the overlap is very such that one event is almost other, that the two event intervals almost In this two event intervals, that to before No additional constraint is applied because it is assumed that the relation will hold even if there are intermediate events between events that and therefore, overlaps B represented as overlapped_by B B 5.3 � overlapped_by overlapped_by contrast to the other relations, it is acceptable to have events occurring between any beforesince the relation to hold regardless of the number of events between the two Therefore, no constraints are necessary and before B A This same reasoning holds for any event interv should be preserved in the linear order of events. In pB. related by such that after B a matrix to generate orders The matrix is the basis for generating linear orders. The events are arranged in a linear order using the constraints and mapping rules presented in the previous section. Parsing each row of the first event-event combination represents either a relation linking the two event intervals or is an empty cell, Empty cells obviously do not contribute to any linear order. In this example, there is no valid relation for Cell returns during Carbased on the mapping rules, an is instantiated, before Fer- The next cell encountered, contains FerryUnbefore and the order is upto before FerryUnderBridge FerryDocks. contains FerryUnderoverlaps and because the between Ferry E1 E1, (e1,1) ~. e1,1. e1,2 e1,3, e1,4 unknown, two possible orders result: (1) CarCrossesBridge before FerryUnderBridge before PlaneFliesOver before FerryDocks (2) CarCrossesBridge before FerryUnderBridge before FerryDocks before PlaneFliesOver there is no valid relation and no updates are made to the orders. The next event-event combination considered is i.e., FerryUnderBridge. is redundant since during CarCrossesBridge already been considered, and so no changes are necessary to the orders. No valid relations are present in the remainder of the second row, and the next relation encountered is FerryDocks after FerryUninverse of this relation has also already been considered and no changes are made. However, contains meets TruckArwhich does result in an update to each of the Adding the event that the of satisfied return e1,5, e2,1, e3,1, e2,5 s two orders: (1) CarCrossesBridge before FerryUnderBridge before PlaneFliesOver before FerryDocks before TruckArrives (2) CarCrossesBridge before FerryUnderBridge before FerryDocks before TruckArrives before PlaneFliesOver then Semantics involving one event is event, this order involving two events are each other this relation is preserved in the ordering of events. As orders are the events that are remain together. that are not the initial set of events relations will not be the final li � near orders. At remaining two event interval relations exfrom the matrix FerryUnderBridge and TruckArrives met_by Ferry overlapped_by e4,1 redun-  |B dant because their inverses have already been considered, and thus require no additional changes to the orders. When all relations have been processed, the is a set all possible orders that are plausible and maintain as closely as possible the original semantics of the relations: O= { CarCrossesBridge before FerryUnderBridge before PlaneFliesOver before FerryDocks before TruckArrives, CarCrossesBridge before FerryUnderBridge before Ferry- Docks before TruckArrives before PlaneFliesOver } Using the semantics of the relations, both orders are plausible. ocferry is under the bridge, as does Feralways directly before no intermediate events between If the result set compared to the set of orders generated in section 4, i.e., before the semantic were applied, shown to consist of a smaller number of orders. These correspond to the most plausible orders given the original set of eventrelation combinations present in the text. Orders that do not meet the constraints based on semantics are eliminated and not presented to a user. and future work This paper introduces a method for abstracting events from text and generating a linear order of these events based on the temporal semantics associated with them. These simpler orders are useful as summaries of the events contained in the textual description. They also provide a basis for reasoning about the events and performing operations on the orders, such as returning, for example, all events that hapbefore event or returning the first event, last event, etc. The approach presented in the paper models events as event interval relations and maps the possible event interval relations to A system of constraints that preserve the semantics associated with the original event relations assists in generating orders that are plausible. For when one event is no intermediate events will fall between these two events in a linear order. Since for many cases not all relations among events are known, it is possible that there are many candidate linear orders produced for a given narrative. In an effort to reduce the number of orders, methods are presented for filtering the orders based on event relations. This linear sequencing helps us to understand and communicate how events described in text occur over and serves as the basis for establishing a timeevents. Timelines organize events into chronological order and provide a method of encapsulation or summarization where detailed data are rendered in a simpler, temporally ordered fashion. Future work will focus on additional approaches for filtering possible orders, for example, if the narrative includes the locations of events, this spatial information can be used to refine further the orders. Events that happen beyond a certain distance, or outside a known area of interest, for example, can be abstracted from the orders.</abstract>
<note confidence="0.887045">Acknowledgements This research is supported by the National Geospatial-Intelligence Agency under grant number, NMA201-00-1-200. Kathleen Hornsby&apos;s research is further supported by a grant from the National Institute of Environmental Health Sciences, NIH, under grant number 1 R 01 ES09816-01. References Khaled Al-Taha and Renato Barrera. 1994. Identities Time. In of the International Workshop on Requirements for In- Geographic Information pages 1-12, New Orleans, LA. Enrique Alfonseca and Suresh Manandhar. 2002. A Framework for Constructing Temporal Models from Texts. In proceedings of the pages 456-460, Pensacola Beach, FL. James Allan, Rahul Gupta, and Vikas Khandelwal. 2001. Temporal Summaries of News Topics. proceedings of New Orleans, Louisiana, September 9-12, 2001. James F. Allen. 1983. Maintaining Knowledge Temporal Intervals. the ACM 832-43. Christophe Claramunt and Marius Theriault. 1995. Managing Time in GIS: An Event-Oriented In of the Interna- Workshop on Temporal pages 23-42, Zurich. Christophe Claramunt and Marius Theriault. 1996.</note>
<title confidence="0.850886">Toward Semantics for Modelling Spatio-</title>
<note confidence="0.5945016">Processes within GIS. In Proceedings of the 7th International Symposium Spatial Data pages 47-63, Delft, NL. Andrew Frank. 1998. Different Types of &amp;quot;Times&amp;quot; in In and Temporal Reasoning in Information eds. M.J. Egenhofer and R.G. Golledge. Oxford University Press, New York. Antony Galton and Juan Carlos Augusto. 2002. Two to Event Definition. In Proceedings of the 13th International Conference on Database and Expert Systems pages 547-556, Aix Provence, France.</note>
<author confidence="0.667328">Ralph Grishman</author>
<author confidence="0.667328">Silja Huttunen</author>
<author confidence="0.667328">Roman Yan-</author>
<email confidence="0.205472">garber.2002.Real-TimeEventExtraction</email>
<affiliation confidence="0.679943">Infectious Disease Outbreaks. In Proceedings of Human Language Technology</affiliation>
<address confidence="0.935856">San Diego, CA, March 24-</address>
<email confidence="0.483915">27,2002.</email>
<title confidence="0.6386075">Hinze and Agnes Voisard. 2002. Flexible Parameter-Dependent Algebra for Event</title>
<affiliation confidence="0.569326">Services. Universitat Ber-</affiliation>
<address confidence="0.540253">lin, Berlin.</address>
<note confidence="0.7695678">Kathleen Hornsby and Max J. Egenhofer. 2000. Identity-Based Change: A Foundation for Spatio-Temporal Knowledge Representa- International Journal of Geographical Science, (3): 207-224. Kathleen Hornsby, Max J. Egenhofer, and Patrick 1999. Modeling Cyclic Change. Advances in Conceptual Modeling, ER&apos;99 Workshop on Evolution and Change in Data pages 98-109, Paris, France. Richard Larson. 1999. Time and Event Measure. In Proceedings of the Linguistic Society of Los Angeles, CA. Inderjeet Mani and Mark T. Maybury, eds. 2001. in Automatic Text Cambridge, Massachusetts: MIT Press. Damir Medak. 1999. Lifestyles an Algebraic Apto Change in Identity. In Proceedings of the International Workshop, Spatio- Temporal Database Management, pages 19-38, Edinburgh, Scotland. Motakis and Carlo Zaniolo. 1995. Formal Semantics for Composite Temporal Events Active Database U.C.L.A. Computer Science Department, Los Angeles. Alice C. I. Pedersen and Daniel B. Wright. 2002. Do Differences in Event Descriptions Cause in Duration Estimates? Psychology 769-83. James Pustejovsky, José Castaiio, Robert Ingria, Roser Saurí, Robert Gaizauskas, Andrea Setzer, and Graham Katz. 2003. TimeML: Robust Specification of Event and Temporal in Text. In of AAAI pages 28-34, Palo Alto, CA. Jeffrey Zacks and Barbara Tversky. 2001. Event Structure in Perception and Conception. Bulletin 3-21.</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Khaled Al-Taha</author>
<author>Renato Barrera</author>
</authors>
<title>Identities through Time.</title>
<date>1994</date>
<booktitle>In Proceedings of the International Workshop on Requirements for Integrated Geographic Information Systems,</booktitle>
<pages>1--12</pages>
<location>New Orleans, LA.</location>
<marker>Al-Taha, Barrera, 1994</marker>
<rawString>Khaled Al-Taha and Renato Barrera. 1994. Identities through Time. In Proceedings of the International Workshop on Requirements for Integrated Geographic Information Systems, pages 1-12, New Orleans, LA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Enrique Alfonseca</author>
<author>Suresh Manandhar</author>
</authors>
<title>A Framework for Constructing Temporal Models from Texts.</title>
<date>2002</date>
<booktitle>In proceedings of the FLAIRS Conference,</booktitle>
<pages>456--460</pages>
<location>Pensacola Beach, FL.</location>
<contexts>
<context position="2176" citStr="Alfonseca and Manandhar (2002)" startWordPosition="330" endWordPosition="333">ic aspects of the world has resulted in a more explicit focus on modeling events, i.e., actions that result in some change to an entity over time, such as the creation, elimination, or transmission of entities (AlTaha and Barrera, 1994; Claramunt and Theriault, 1995; Claramunt and Theriault, 1996; Medak, 1999; Hornsby and Egenhofer, 2000). The segmentation of real-world happenings into events facilitates the processing and conveying of natural language information to a user (Zacks and Tversky, 2001). An understanding of text is improved if the event structure of the text can be reconstructed. Alfonseca and Manandhar (2002) extract events based on verbs that represent actions, verbs associated with the verb to be which represent states, and occurrences of nouns that are specifications of verbs, such as arrival or accident. Events are anchored in time relative to either the time the text is written or to the main event, and reordered based on this anchoring and verb tenses. Indexing and information retrieval for current and historical reports on infectious disease outbreaks is improved through an approach where events relating to occurrences of infectious diseases are automatically extracted from news sources on </context>
</contexts>
<marker>Alfonseca, Manandhar, 2002</marker>
<rawString>Enrique Alfonseca and Suresh Manandhar. 2002. A Framework for Constructing Temporal Models from Texts. In proceedings of the FLAIRS Conference, pages 456-460, Pensacola Beach, FL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Allan</author>
<author>Rahul Gupta</author>
<author>Vikas Khandelwal</author>
</authors>
<title>Temporal Summaries of News Topics.</title>
<date>2001</date>
<booktitle>In proceedings of SIGIR&apos;01,</booktitle>
<location>New Orleans, Louisiana,</location>
<contexts>
<context position="4728" citStr="Allan et al., 2001" startWordPosition="750" endWordPosition="753">linear orders of events from more complex orderings of events in text. These linear orders provide simpler, summarized views of the events in a narrative as well as a basis for event-based question and answer systems. Automatic text summarization strategies are necessary to support decision making from large textual narratives as well as the large number of information resources available via the Web (Mani and Maybury, 2001). Temporal semantics and events have been considered in the context of time-based summarization strategies that assist users to monitor changes in news coverage over time (Allan et al., 2001). In this paper, entities refer to phenomena in the real world, and an event results in some change to an entity over time. Events are assumed to be linear with both a start point and an end point. Events that are ongoing, i.e., have no end, are not treated here, nor are preexisting events, i.e., those that have no known start point. The objective of this paper is to introduce an approach for automatically generating plausible linear orders of events from partially-ordered sets of event intervals drawn from text descriptions. The remainder of this paper is structured as follows: Section 2 desc</context>
</contexts>
<marker>Allan, Gupta, Khandelwal, 2001</marker>
<rawString>James Allan, Rahul Gupta, and Vikas Khandelwal. 2001. Temporal Summaries of News Topics. In proceedings of SIGIR&apos;01, New Orleans, Louisiana, September 9-12, 2001.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James F Allen</author>
</authors>
<title>Maintaining Knowledge About Temporal Intervals.</title>
<date>1983</date>
<journal>Communications of the ACM</journal>
<volume>26</volume>
<issue>11</issue>
<pages>832--43</pages>
<contexts>
<context position="7610" citStr="Allen, 1983" startWordPosition="1235" endWordPosition="1236">this paper are treated as intervals with a start point and end point, and are assumed to have some duration. For example, LowPressureMoves refers to an event–the movement of a low pressure system–modeled as an interval. Text, such as a paragraph describing the weather over the past twentyfour hours, can be processed to yield a set of eventrelation combinations. Our focus in this paper is not so much on event extraction from text but rather the methods to automatically generate a plausible linear order of events. As event intervals are assumed to be linear, Allen’s temporal interval relations (Allen, 1983) describe the set of possible relations that hold among event intervals (Figure 1). For example, scattered showers occur this afternoon before drier air arrives from the west relates two events, ScatteredShowersOccur and D rierAirArrives, by the temporal interval relation before. This approach assumes an underlying linear model of time and excludes cyclic or branching time (Frank, 1998; Hornsby et al., 1999). Figure 1. Thirteen event interval relations (after Allen 1983). Retrieving information about event intervals that shows how events relate to each other is required for an understanding of</context>
</contexts>
<marker>Allen, 1983</marker>
<rawString>James F. Allen. 1983. Maintaining Knowledge About Temporal Intervals. Communications of the ACM 26(11): 832-43.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christophe Claramunt</author>
<author>Marius Theriault</author>
</authors>
<title>Managing Time in GIS: An Event-Oriented Approach.</title>
<date>1995</date>
<booktitle>In Proceedings of the International Workshop on Temporal Databases,</booktitle>
<pages>23--42</pages>
<location>Zurich.</location>
<contexts>
<context position="1812" citStr="Claramunt and Theriault, 1995" startWordPosition="276" endWordPosition="279">f events. 1 Introduction The world is a dynamic place and the activities and actions that are part of our everyday experience include such phenomena as the flow of traffic on the morning drive to work, a person walking across a street, or the fluctuation of water bodies due to seasonal change. An interest in developing computational models that convey the dynamic aspects of the world has resulted in a more explicit focus on modeling events, i.e., actions that result in some change to an entity over time, such as the creation, elimination, or transmission of entities (AlTaha and Barrera, 1994; Claramunt and Theriault, 1995; Claramunt and Theriault, 1996; Medak, 1999; Hornsby and Egenhofer, 2000). The segmentation of real-world happenings into events facilitates the processing and conveying of natural language information to a user (Zacks and Tversky, 2001). An understanding of text is improved if the event structure of the text can be reconstructed. Alfonseca and Manandhar (2002) extract events based on verbs that represent actions, verbs associated with the verb to be which represent states, and occurrences of nouns that are specifications of verbs, such as arrival or accident. Events are anchored in time rela</context>
</contexts>
<marker>Claramunt, Theriault, 1995</marker>
<rawString>Christophe Claramunt and Marius Theriault. 1995. Managing Time in GIS: An Event-Oriented Approach. In Proceedings of the International Workshop on Temporal Databases, pages 23-42, Zurich.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christophe Claramunt</author>
<author>Marius Theriault</author>
</authors>
<title>Toward Semantics for Modelling SpatioTemporal Processes within GIS.</title>
<date>1996</date>
<booktitle>In Proceedings of the 7th International Symposium on Spatial Data Handling,</booktitle>
<pages>47--63</pages>
<location>Delft, NL.</location>
<contexts>
<context position="1843" citStr="Claramunt and Theriault, 1996" startWordPosition="280" endWordPosition="283">rld is a dynamic place and the activities and actions that are part of our everyday experience include such phenomena as the flow of traffic on the morning drive to work, a person walking across a street, or the fluctuation of water bodies due to seasonal change. An interest in developing computational models that convey the dynamic aspects of the world has resulted in a more explicit focus on modeling events, i.e., actions that result in some change to an entity over time, such as the creation, elimination, or transmission of entities (AlTaha and Barrera, 1994; Claramunt and Theriault, 1995; Claramunt and Theriault, 1996; Medak, 1999; Hornsby and Egenhofer, 2000). The segmentation of real-world happenings into events facilitates the processing and conveying of natural language information to a user (Zacks and Tversky, 2001). An understanding of text is improved if the event structure of the text can be reconstructed. Alfonseca and Manandhar (2002) extract events based on verbs that represent actions, verbs associated with the verb to be which represent states, and occurrences of nouns that are specifications of verbs, such as arrival or accident. Events are anchored in time relative to either the time the tex</context>
</contexts>
<marker>Claramunt, Theriault, 1996</marker>
<rawString>Christophe Claramunt and Marius Theriault. 1996. Toward Semantics for Modelling SpatioTemporal Processes within GIS. In Proceedings of the 7th International Symposium on Spatial Data Handling, pages 47-63, Delft, NL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Frank</author>
</authors>
<title>Different Types of &amp;quot;Times&amp;quot;</title>
<date>1998</date>
<booktitle>In Spatial and Temporal Reasoning in Geographic Information Systems,</booktitle>
<editor>in GIS.</editor>
<publisher>Oxford University Press,</publisher>
<location>New York.</location>
<contexts>
<context position="3191" citStr="Frank, 1998" startWordPosition="496" endWordPosition="497"> and historical reports on infectious disease outbreaks is improved through an approach where events relating to occurrences of infectious diseases are automatically extracted from news sources on the Internet (Grishman et al., 2002). These events are then used to populate a database with the view that coupling the textbased event extraction with a database approach, offers better indexing for reports on infectious disease outbreaks. Reasoning about events commonly requires assembling the events into a sequence or order of events such that a temporal pattern of events becomes distinguishable (Frank, 1998) and more understandable. For many reasoning tasks involving events, users require a simple, total order of events, where for every pair of events, A and B, either A is before B or B is before A (or both) (Frank, 1998). The case where A is before B and B is before A describes the case where A occurs at the same time as B. This linear sequencing helps us to understand and communicate in a simpler fashion how events occur over time. In a typical database, the values of one or more attributes of data may be ordered through queries to the database using a database query language such as SQL. Dynam</context>
<context position="7998" citStr="Frank, 1998" startWordPosition="1294" endWordPosition="1295">s not so much on event extraction from text but rather the methods to automatically generate a plausible linear order of events. As event intervals are assumed to be linear, Allen’s temporal interval relations (Allen, 1983) describe the set of possible relations that hold among event intervals (Figure 1). For example, scattered showers occur this afternoon before drier air arrives from the west relates two events, ScatteredShowersOccur and D rierAirArrives, by the temporal interval relation before. This approach assumes an underlying linear model of time and excludes cyclic or branching time (Frank, 1998; Hornsby et al., 1999). Figure 1. Thirteen event interval relations (after Allen 1983). Retrieving information about event intervals that shows how events relate to each other is required for an understanding of how entities described in a narrative evolve over space and time. Generating orders of events is necessary such that useful information about events is presented for users, either as a summarization tool for large information resources or as a method for question answering. 3 Ordering events To generate linear orders of events, the set of 13 possible event interval relations is reduce</context>
</contexts>
<marker>Frank, 1998</marker>
<rawString>Andrew Frank. 1998. Different Types of &amp;quot;Times&amp;quot; in GIS. In Spatial and Temporal Reasoning in Geographic Information Systems, eds. M.J. Egenhofer and R.G. Golledge. Oxford University Press, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Antony Galton</author>
<author>Juan Carlos Augusto</author>
</authors>
<title>Two Approaches to Event Definition.</title>
<date>2002</date>
<booktitle>In Proceedings of the 13th International Conference on Database and Expert Systems Applications (DEXA&apos;02),</booktitle>
<pages>547--556</pages>
<location>Aix Provence, France.</location>
<contexts>
<context position="6500" citStr="Galton and Augusto, 2002" startWordPosition="1042" endWordPosition="1045">of these semantics in the ordering process. Section 7 presents the conclusions and discusses future work. 2 Events and relations among events Events are often modeled as being instantaneous such as, for example, an update to a bank account or the transmission of an electronic message, i.e., changes of state having no duration (Hinze and Voisard, 2002). Alternatively, events may be modeled as occurring over a period of time and therefore have duration. These events are typically associated with a specific point in time (Motakis and Zaniolo, 1995), usually the point at which the event finishes (Galton and Augusto, 2002). In linguistics and cognitive psychology, an event is most often modeled as occurring over a period of time (Larson, 1999; Pedersen and Wright, 2002), and human perceptions of this event time are of particular interest to researchers. For example, in a court case, a suspect’s claim about events during a particular time period versus a witness’ perception of the same events may affect the jury and make a difference to the outcome of a trial (Pedersen and Wright, 2002). The events described in this paper are treated as intervals with a start point and end point, and are assumed to have some dur</context>
</contexts>
<marker>Galton, Augusto, 2002</marker>
<rawString>Antony Galton and Juan Carlos Augusto. 2002. Two Approaches to Event Definition. In Proceedings of the 13th International Conference on Database and Expert Systems Applications (DEXA&apos;02), pages 547-556, Aix Provence, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ralph Grishman</author>
<author>Silja Huttunen</author>
<author>Roman Yangarber</author>
</authors>
<title>Real-Time Event Extraction for Infectious Disease Outbreaks.</title>
<date>2002</date>
<booktitle>In Proceedings of Human Language Technology Conference,</booktitle>
<location>San Diego, CA,</location>
<contexts>
<context position="2812" citStr="Grishman et al., 2002" startWordPosition="433" endWordPosition="436">s based on verbs that represent actions, verbs associated with the verb to be which represent states, and occurrences of nouns that are specifications of verbs, such as arrival or accident. Events are anchored in time relative to either the time the text is written or to the main event, and reordered based on this anchoring and verb tenses. Indexing and information retrieval for current and historical reports on infectious disease outbreaks is improved through an approach where events relating to occurrences of infectious diseases are automatically extracted from news sources on the Internet (Grishman et al., 2002). These events are then used to populate a database with the view that coupling the textbased event extraction with a database approach, offers better indexing for reports on infectious disease outbreaks. Reasoning about events commonly requires assembling the events into a sequence or order of events such that a temporal pattern of events becomes distinguishable (Frank, 1998) and more understandable. For many reasoning tasks involving events, users require a simple, total order of events, where for every pair of events, A and B, either A is before B or B is before A (or both) (Frank, 1998). T</context>
</contexts>
<marker>Grishman, Huttunen, Yangarber, 2002</marker>
<rawString>Ralph Grishman, Silja Huttunen, and Roman Yangarber. 2002. Real-Time Event Extraction for Infectious Disease Outbreaks. In Proceedings of Human Language Technology Conference, San Diego, CA, March 24-27,2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Annika Hinze</author>
<author>Agnes Voisard</author>
</authors>
<title>A Flexible Parameter-Dependent Algebra for Event Notification Services. Freie Universitat</title>
<date>2002</date>
<location>Berlin, Berlin.</location>
<contexts>
<context position="6228" citStr="Hinze and Voisard, 2002" startWordPosition="999" endWordPosition="1002">4 an example is introduced to demonstrate this approach. The next section further refines the ordering process by incorporating constraints derived from the semantics of the original event interval relations, and Section 6 uses the example scenario to illustrate the use of these semantics in the ordering process. Section 7 presents the conclusions and discusses future work. 2 Events and relations among events Events are often modeled as being instantaneous such as, for example, an update to a bank account or the transmission of an electronic message, i.e., changes of state having no duration (Hinze and Voisard, 2002). Alternatively, events may be modeled as occurring over a period of time and therefore have duration. These events are typically associated with a specific point in time (Motakis and Zaniolo, 1995), usually the point at which the event finishes (Galton and Augusto, 2002). In linguistics and cognitive psychology, an event is most often modeled as occurring over a period of time (Larson, 1999; Pedersen and Wright, 2002), and human perceptions of this event time are of particular interest to researchers. For example, in a court case, a suspect’s claim about events during a particular time period</context>
</contexts>
<marker>Hinze, Voisard, 2002</marker>
<rawString>Annika Hinze and Agnes Voisard. 2002. A Flexible Parameter-Dependent Algebra for Event Notification Services. Freie Universitat Berlin, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kathleen Hornsby</author>
<author>Max J Egenhofer</author>
</authors>
<title>Identity-Based Change: A Foundation for Spatio-Temporal Knowledge Representation.</title>
<date>2000</date>
<journal>International Journal of Geographical Information Science,</journal>
<volume>14</volume>
<issue>3</issue>
<pages>207--224</pages>
<contexts>
<context position="1886" citStr="Hornsby and Egenhofer, 2000" startWordPosition="286" endWordPosition="289">d actions that are part of our everyday experience include such phenomena as the flow of traffic on the morning drive to work, a person walking across a street, or the fluctuation of water bodies due to seasonal change. An interest in developing computational models that convey the dynamic aspects of the world has resulted in a more explicit focus on modeling events, i.e., actions that result in some change to an entity over time, such as the creation, elimination, or transmission of entities (AlTaha and Barrera, 1994; Claramunt and Theriault, 1995; Claramunt and Theriault, 1996; Medak, 1999; Hornsby and Egenhofer, 2000). The segmentation of real-world happenings into events facilitates the processing and conveying of natural language information to a user (Zacks and Tversky, 2001). An understanding of text is improved if the event structure of the text can be reconstructed. Alfonseca and Manandhar (2002) extract events based on verbs that represent actions, verbs associated with the verb to be which represent states, and occurrences of nouns that are specifications of verbs, such as arrival or accident. Events are anchored in time relative to either the time the text is written or to the main event, and reor</context>
</contexts>
<marker>Hornsby, Egenhofer, 2000</marker>
<rawString>Kathleen Hornsby and Max J. Egenhofer. 2000. Identity-Based Change: A Foundation for Spatio-Temporal Knowledge Representation. International Journal of Geographical Information Science, 14 (3): 207-224.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kathleen Hornsby</author>
<author>Max J Egenhofer</author>
<author>Patrick Hayes</author>
</authors>
<title>Modeling Cyclic Change.</title>
<date>1999</date>
<booktitle>Advances in Conceptual Modeling, ER&apos;99 Workshop on Evolution and Change in Data Management,</booktitle>
<pages>98--109</pages>
<location>Paris, France.</location>
<contexts>
<context position="8021" citStr="Hornsby et al., 1999" startWordPosition="1296" endWordPosition="1299"> on event extraction from text but rather the methods to automatically generate a plausible linear order of events. As event intervals are assumed to be linear, Allen’s temporal interval relations (Allen, 1983) describe the set of possible relations that hold among event intervals (Figure 1). For example, scattered showers occur this afternoon before drier air arrives from the west relates two events, ScatteredShowersOccur and D rierAirArrives, by the temporal interval relation before. This approach assumes an underlying linear model of time and excludes cyclic or branching time (Frank, 1998; Hornsby et al., 1999). Figure 1. Thirteen event interval relations (after Allen 1983). Retrieving information about event intervals that shows how events relate to each other is required for an understanding of how entities described in a narrative evolve over space and time. Generating orders of events is necessary such that useful information about events is presented for users, either as a summarization tool for large information resources or as a method for question answering. 3 Ordering events To generate linear orders of events, the set of 13 possible event interval relations is reduced to a set comprising o</context>
</contexts>
<marker>Hornsby, Egenhofer, Hayes, 1999</marker>
<rawString>Kathleen Hornsby, Max J. Egenhofer, and Patrick Hayes. 1999. Modeling Cyclic Change. Advances in Conceptual Modeling, ER&apos;99 Workshop on Evolution and Change in Data Management, pages 98-109, Paris, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Larson</author>
</authors>
<title>Time and Event Measure.</title>
<date>1999</date>
<booktitle>In Proceedings of the Linguistic Society of America Meeting,</booktitle>
<location>Los Angeles, CA.</location>
<contexts>
<context position="6622" citStr="Larson, 1999" startWordPosition="1064" endWordPosition="1065">events Events are often modeled as being instantaneous such as, for example, an update to a bank account or the transmission of an electronic message, i.e., changes of state having no duration (Hinze and Voisard, 2002). Alternatively, events may be modeled as occurring over a period of time and therefore have duration. These events are typically associated with a specific point in time (Motakis and Zaniolo, 1995), usually the point at which the event finishes (Galton and Augusto, 2002). In linguistics and cognitive psychology, an event is most often modeled as occurring over a period of time (Larson, 1999; Pedersen and Wright, 2002), and human perceptions of this event time are of particular interest to researchers. For example, in a court case, a suspect’s claim about events during a particular time period versus a witness’ perception of the same events may affect the jury and make a difference to the outcome of a trial (Pedersen and Wright, 2002). The events described in this paper are treated as intervals with a start point and end point, and are assumed to have some duration. For example, LowPressureMoves refers to an event–the movement of a low pressure system–modeled as an interval. Text</context>
</contexts>
<marker>Larson, 1999</marker>
<rawString>Richard Larson. 1999. Time and Event Measure. In Proceedings of the Linguistic Society of America Meeting, Los Angeles, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inderjeet Mani</author>
<author>Mark T Maybury</author>
<author>eds</author>
</authors>
<date>2001</date>
<booktitle>Advances in Automatic Text Summarization.</booktitle>
<publisher>MIT Press.</publisher>
<location>Cambridge, Massachusetts:</location>
<marker>Mani, Maybury, eds, 2001</marker>
<rawString>Inderjeet Mani and Mark T. Maybury, eds. 2001. Advances in Automatic Text Summarization. Cambridge, Massachusetts: MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Damir Medak</author>
</authors>
<title>Lifestyles - an Algebraic Approach to Change in Identity.</title>
<date>1999</date>
<booktitle>In Proceedings of the International Workshop, SpatioTemporal Database Management, STDBM&apos;99,</booktitle>
<pages>pages</pages>
<location>Edinburgh, Scotland.</location>
<contexts>
<context position="1856" citStr="Medak, 1999" startWordPosition="284" endWordPosition="285">activities and actions that are part of our everyday experience include such phenomena as the flow of traffic on the morning drive to work, a person walking across a street, or the fluctuation of water bodies due to seasonal change. An interest in developing computational models that convey the dynamic aspects of the world has resulted in a more explicit focus on modeling events, i.e., actions that result in some change to an entity over time, such as the creation, elimination, or transmission of entities (AlTaha and Barrera, 1994; Claramunt and Theriault, 1995; Claramunt and Theriault, 1996; Medak, 1999; Hornsby and Egenhofer, 2000). The segmentation of real-world happenings into events facilitates the processing and conveying of natural language information to a user (Zacks and Tversky, 2001). An understanding of text is improved if the event structure of the text can be reconstructed. Alfonseca and Manandhar (2002) extract events based on verbs that represent actions, verbs associated with the verb to be which represent states, and occurrences of nouns that are specifications of verbs, such as arrival or accident. Events are anchored in time relative to either the time the text is written </context>
</contexts>
<marker>Medak, 1999</marker>
<rawString>Damir Medak. 1999. Lifestyles - an Algebraic Approach to Change in Identity. In Proceedings of the International Workshop, SpatioTemporal Database Management, STDBM&apos;99, pages 19-38, Edinburgh, Scotland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Iakovos Motakis</author>
<author>Carlo Zaniolo</author>
</authors>
<title>A Formal Semantics for Composite Temporal Events in Active Database Rules.</title>
<date>1995</date>
<institution>U.C.L.A. Computer Science Department,</institution>
<location>Los Angeles.</location>
<contexts>
<context position="6426" citStr="Motakis and Zaniolo, 1995" startWordPosition="1030" endWordPosition="1033">l relations, and Section 6 uses the example scenario to illustrate the use of these semantics in the ordering process. Section 7 presents the conclusions and discusses future work. 2 Events and relations among events Events are often modeled as being instantaneous such as, for example, an update to a bank account or the transmission of an electronic message, i.e., changes of state having no duration (Hinze and Voisard, 2002). Alternatively, events may be modeled as occurring over a period of time and therefore have duration. These events are typically associated with a specific point in time (Motakis and Zaniolo, 1995), usually the point at which the event finishes (Galton and Augusto, 2002). In linguistics and cognitive psychology, an event is most often modeled as occurring over a period of time (Larson, 1999; Pedersen and Wright, 2002), and human perceptions of this event time are of particular interest to researchers. For example, in a court case, a suspect’s claim about events during a particular time period versus a witness’ perception of the same events may affect the jury and make a difference to the outcome of a trial (Pedersen and Wright, 2002). The events described in this paper are treated as in</context>
</contexts>
<marker>Motakis, Zaniolo, 1995</marker>
<rawString>Iakovos Motakis and Carlo Zaniolo. 1995. A Formal Semantics for Composite Temporal Events in Active Database Rules. U.C.L.A. Computer Science Department, Los Angeles.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alice C I Pedersen</author>
<author>Daniel B Wright</author>
</authors>
<date>2002</date>
<booktitle>Do Differences in Event Descriptions Cause Differences in Duration Estimates? Applied Cognitive Psychology</booktitle>
<volume>16</volume>
<pages>769--83</pages>
<contexts>
<context position="6650" citStr="Pedersen and Wright, 2002" startWordPosition="1066" endWordPosition="1069">are often modeled as being instantaneous such as, for example, an update to a bank account or the transmission of an electronic message, i.e., changes of state having no duration (Hinze and Voisard, 2002). Alternatively, events may be modeled as occurring over a period of time and therefore have duration. These events are typically associated with a specific point in time (Motakis and Zaniolo, 1995), usually the point at which the event finishes (Galton and Augusto, 2002). In linguistics and cognitive psychology, an event is most often modeled as occurring over a period of time (Larson, 1999; Pedersen and Wright, 2002), and human perceptions of this event time are of particular interest to researchers. For example, in a court case, a suspect’s claim about events during a particular time period versus a witness’ perception of the same events may affect the jury and make a difference to the outcome of a trial (Pedersen and Wright, 2002). The events described in this paper are treated as intervals with a start point and end point, and are assumed to have some duration. For example, LowPressureMoves refers to an event–the movement of a low pressure system–modeled as an interval. Text, such as a paragraph descri</context>
</contexts>
<marker>Pedersen, Wright, 2002</marker>
<rawString>Alice C. I. Pedersen and Daniel B. Wright. 2002. Do Differences in Event Descriptions Cause Differences in Duration Estimates? Applied Cognitive Psychology 16: 769-83.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
<author>José Castaiio</author>
<author>Robert Ingria</author>
<author>Roser Saurí</author>
<author>Robert Gaizauskas</author>
<author>Andrea Setzer</author>
<author>Graham Katz</author>
</authors>
<title>TimeML: Robust Specification of Event and Temporal Expressions in Text.</title>
<date>2003</date>
<booktitle>In Proceedings of AAAI Spring Symposium,</booktitle>
<pages>28--34</pages>
<location>Palo Alto, CA.</location>
<contexts>
<context position="4067" citStr="Pustejovsky et al., 2003" startWordPosition="647" endWordPosition="650">d B is before A describes the case where A occurs at the same time as B. This linear sequencing helps us to understand and communicate in a simpler fashion how events occur over time. In a typical database, the values of one or more attributes of data may be ordered through queries to the database using a database query language such as SQL. Dynamic scenarios as captured in text-based narratives, for example, require alternative approaches to ordering, where orders are based on events or the relations among events even though the knowledge about these relations may be incomplete or uncertain (Pustejovsky et al., 2003). This paper presents methods to generate linear orders of events from more complex orderings of events in text. These linear orders provide simpler, summarized views of the events in a narrative as well as a basis for event-based question and answer systems. Automatic text summarization strategies are necessary to support decision making from large textual narratives as well as the large number of information resources available via the Web (Mani and Maybury, 2001). Temporal semantics and events have been considered in the context of time-based summarization strategies that assist users to mo</context>
</contexts>
<marker>Pustejovsky, Castaiio, Ingria, Saurí, Gaizauskas, Setzer, Katz, 2003</marker>
<rawString>James Pustejovsky, José Castaiio, Robert Ingria, Roser Saurí, Robert Gaizauskas, Andrea Setzer, and Graham Katz. 2003. TimeML: Robust Specification of Event and Temporal Expressions in Text. In Proceedings of AAAI Spring Symposium, pages 28-34, Palo Alto, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeffrey Zacks</author>
<author>Barbara Tversky</author>
</authors>
<title>Event Structure in Perception and Conception.</title>
<date>2001</date>
<journal>Psychological Bulletin</journal>
<volume>127</volume>
<issue>1</issue>
<pages>3--21</pages>
<contexts>
<context position="2050" citStr="Zacks and Tversky, 2001" startWordPosition="309" endWordPosition="312">fluctuation of water bodies due to seasonal change. An interest in developing computational models that convey the dynamic aspects of the world has resulted in a more explicit focus on modeling events, i.e., actions that result in some change to an entity over time, such as the creation, elimination, or transmission of entities (AlTaha and Barrera, 1994; Claramunt and Theriault, 1995; Claramunt and Theriault, 1996; Medak, 1999; Hornsby and Egenhofer, 2000). The segmentation of real-world happenings into events facilitates the processing and conveying of natural language information to a user (Zacks and Tversky, 2001). An understanding of text is improved if the event structure of the text can be reconstructed. Alfonseca and Manandhar (2002) extract events based on verbs that represent actions, verbs associated with the verb to be which represent states, and occurrences of nouns that are specifications of verbs, such as arrival or accident. Events are anchored in time relative to either the time the text is written or to the main event, and reordered based on this anchoring and verb tenses. Indexing and information retrieval for current and historical reports on infectious disease outbreaks is improved thr</context>
</contexts>
<marker>Zacks, Tversky, 2001</marker>
<rawString>Jeffrey Zacks and Barbara Tversky. 2001. Event Structure in Perception and Conception. Psychological Bulletin 127(1): 3-21.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>