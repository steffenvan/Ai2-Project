<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.006288">
<note confidence="0.643415">
AnnoMarket: An Open Cloud Platform for NLP
Marin Dimitrov
Ontotext AD
47A Tsarigradsko Shosse, Sofia, Bulgaria
</note>
<email confidence="0.659675">
marin.dimitrov@ontotext.com
</email>
<author confidence="0.978469">
Valentin Tablan, Kalina Bontcheva
Ian Roberts, Hamish Cunningham
</author>
<affiliation confidence="0.999802">
University of Sheffield,
Department of Computer Science
</affiliation>
<address confidence="0.994082">
211 Portobello, Sheffield, UK
</address>
<email confidence="0.998518">
Initial.Surname@dcs.shef.ac.uk
</email>
<sectionHeader confidence="0.993872" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999935">
This paper presents AnnoMarket, an open
cloud-based platform which enables re-
searchers to deploy, share, and use lan-
guage processing components and re-
sources, following the data-as-a-service
and software-as-a-service paradigms. The
focus is on multilingual text analysis re-
sources and services, based on an open-
source infrastructure and compliant with
relevant NLP standards. We demonstrate
how the AnnoMarket platform can be used
to develop NLP applications with little
or no programming, to index the results
for enhanced browsing and search, and
to evaluate performance. Utilising Anno-
Market is straightforward, since cloud in-
frastructural issues are dealt with by the
platform, completely transparently to the
user: load balancing, efficient data upload
and storage, deployment on the virtual ma-
chines, security, and fault tolerance.
</bodyText>
<sectionHeader confidence="0.998992" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9999405">
Following the Software-as-a-Service (SaaS)
paradigm from cloud computing (Dikaiakos et al.,
2009), a number of text processing services have
been developed, e.g. OpenCalais1 and Alchemy
API2. These provide information extraction ser-
vices, accessible programmatically and charged
per number of documents processed.
However, they suffer from two key technical
drawbacks. Firstly, document-by-document pro-
cessing over HTTP is inefficient on large datasets
and is also limited to within-document text pro-
cessing algorithms. Secondly, the text process-
ing algorithms are pre-packaged: it is not pos-
sible for researchers to extend the functional-
</bodyText>
<footnote confidence="0.9999405">
1http://www.opencalais.com
2http://www.alchemyapi.com
</footnote>
<bodyText confidence="0.999860179487179">
ity (e.g. adapt such a service to recognise new
kinds of entities). Additionally, these text pro-
cessing SaaS sites come with daily rate limits,
in terms of number of API calls or documents
that can be processed. Consequently, using these
services for research is not just limited in terms
of text processing functionality offered, but also
quickly becomes very expensive on large-scale
datasets. A moderately-sized collection of tweets,
for example, comprises small but numerous docu-
ments, which can lead to unfeasibly high process-
ing costs.
Platform-as-a-Service (PaaS) (Dikaiakos et al.,
2009) are a type of cloud computing service which
insulates developers from the low-level issues of
utilising cloud infrastructures effectively, while
providing facilities for efficient development, test-
ing, and deployment of software over the Inter-
net, following the SaaS model. In the context
of traditional NLP research and development, and
pre-dating cloud computing, similar needs were
addressed through NLP infrastructures, such as
GATE (Cunningham et al., 2013) and UIMA (Fer-
rucci and Lally, 2004). These infrastructures ac-
celerated significantly the pace of NLP research,
through reusable algorithms (e.g. rule-based pat-
tern matching engines, machine learning algo-
rithms), free tools for low-level NLP tasks, and
support for multiple input and output document
formats (e.g. XML, PDF, DOC, RDF, JSON).
This demonstration introduces the AnnoMar-
ket3 open, cloud-based platform, which has
been developed following the PaaS paradigm.
It enables researchers to deploy, share, and
use language processing components and re-
sources, following the Data-as-a-Service (DaaS)
and Software-as-a-Service (SaaS) paradigms. It
gives researchers access to an open, standard-
compliant NLP infrastructure and enables them
</bodyText>
<footnote confidence="0.999878">
3At the time of writing, a beta version of AnnoMarket is
available at http://annomarket.com
</footnote>
<page confidence="0.989136">
19
</page>
<bodyText confidence="0.952644933333333">
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 19–24,
Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics
to carry out large-scale NLP experiments by har-
nessing the vast, on-demand compute power of
the Amazon cloud. It supports not only NLP al-
gorithm development and execution, but also on-
demand collaborative corpus annotation and per-
formance evaluation. Important infrastructural is-
sues are dealt with by the platform, completely
transparently for the researcher: load balancing,
efficient data upload and storage, deployment on
the virtual machines, security, and fault tolerance.
AnnoMarket differs from previous work (e.g.
(Zhou et al., 2010; Ramakrishnan et al., 2010))
in that it requires no programming in order to
run a GATE-compliant NLP application on a large
dataset. In that sense, it combines the ease of
use of an NLP SaaS with the openness and com-
prehensive facilities of the GATE NLP infras-
tructure. AnnoMarket offers a growing number
of pre-packaged services, in multiple languages.
Additionally, as a specialised NLP PaaS, it also
supports a bring-your-own-pipeline option, which
can be built easily by reusing pre-existing GATE-
compatible NLP components and adding some
new ones. Moreover, in addition to offering entity
extraction services like OpenCalais, our NLP PaaS
also supports manual corpus annotation, semantic
indexing and search, and performance evaluation.
The contributions of this paper are as follows:
</bodyText>
<listItem confidence="0.977955071428572">
1. A demonstration of running AnnoMarket
multilingual NLP services on large datasets,
without programming. The new service
deployment facilities will also be shown,
including how services can optionally be
shared with others.
2. A demonstration on shared research corpora
via the AnnoMarket platform, following the
data-as-a-service model (the sharer is respon-
sible for ensuring no copyright violations).
3. A demonstration of the large-scale search and
browsing interface, which uses the results of
the NLP SaaS to offer enhanced, semantic-
based functionality.
</listItem>
<sectionHeader confidence="0.90083" genericHeader="method">
2 The AnnoMarket NLP PaaS
</sectionHeader>
<bodyText confidence="0.999812">
This section first discusses the methodology
underpinning the AnnoMarket platform, then
presents its architecture and key components.
</bodyText>
<subsectionHeader confidence="0.7170795">
2.1 Development and Deployment
Methodology
</subsectionHeader>
<bodyText confidence="0.9998926">
The development of text analysis algorithms and
pipelines typically follows a certain methodolog-
ical pattern, or lifecycle. A central problem is
to define the NLP task, such that human anno-
tators can perform it with a high level of agree-
ment and to create high quality training and evalu-
ation datasets. It is common to use double or triple
annotation, where several people perform the an-
notation task independently and we then measure
their level of agreement (Inter-Annotator Agree-
ment, or IAA) to quantify and control the quality
of this data (Hovy, 2010).
The AnnoMarket platform was therefore de-
signed to offer full methodological support for all
stages of the text analysis development lifecycle:
</bodyText>
<listItem confidence="0.99385625">
1. Create an initial prototype of the NLP
pipeline, testing on a small document collec-
tion, using the desktop-based GATE user in-
terface (Cunningham et al., 2002);
2. If required, collect a gold-standard corpus for
evaluation and/or training, using the GATE
Teamware collaborative corpus annotation
service (Bontcheva et al., 2013), running in
AnnoMarket;
3. Evaluate the performance of the automatic
pipeline on the gold standard (either locally
in the GATE development environment or on
the cloud). Return to step 1 for further devel-
opment and evaluation cycles, as needed.
4. Upload the large datasets and deploy the NLP
pipeline on the AnnoMarket PaaS;
5. Run the large-scale NLP experiment and
download the results as XML or a standard
linguistic annotation format (Ide and Ro-
mary, 2004). AnnoMarket also offers scal-
able semantic indexing and search over the
linguistic annotations and document content.
6. Analyse any errors, and if required, iterate
again over the earlier steps.
</listItem>
<bodyText confidence="0.9869695">
AnnoMarket is fully compatible with the GATE
open-source architecture (Cunningham et al.,
2002), in order to benefit from GATE’s numerous
reusable and multilingual text processing compo-
nents, and also from its infrastructural support for
linguistic standards and diverse input formats.
</bodyText>
<subsectionHeader confidence="0.993532">
2.2 Architecture
</subsectionHeader>
<bodyText confidence="0.9994075">
The architecture of the AnnoMarket PaaS com-
prises of four layers (see Figure 1), combining
</bodyText>
<page confidence="0.963874">
20
</page>
<figureCaption confidence="0.999962">
Figure 1: The AnnoMarket Architecture
</figureCaption>
<bodyText confidence="0.987144789473684">
components with related capabilities. Addition-
ally, we have identified three aspects, which span
across multiple layers.
The Data Layer is described in Section 2.3, the
Platform Layer – in Section 2.4, and the Annota-
tion Services – in Section 2.5.
The fourth, web user interface layer, contains a
number of UI components that allow researchers
to use the AnnoMarket platform in various ways,
e.g. to run an already deployed text annotation ser-
vice on a large dataset, to deploy and share a new
service on the platform, or to upload (and option-
ally share) a document collection (i.e. a corpus).
There is also support for finding relevant services,
deployed on the AnnoMarket platform. Lastly,
due to the platform running on the Amazon cloud
infrastructure, there are account management in-
terfaces, including billing information, payments,
and usage reports.
The first vertical aspect is cloud deployment on
Amazon. This covers support for automatic up and
down-scaling of the allocated Amazon resources,
detection of and recovery from Amazon infras-
tructure failures and network failures, and data
backup.
Usage monitoring and billing is the second
key vertical aspect, since fine-grained pay-as-
you-go ability is essential. Even in the case of
freely-available annotations services, Amazon us-
age charges are incurred and thus such function-
ality is needed. Various usage metrics are mon-
itored and metered so that proper billing can be
guaranteed, including: storage space required by
language resources and data sets; CPU utilisation
of the annotation services; number and size of doc-
uments processed.
Security aspects also have impact on all the lay-
ers of the AnnoMarket platform:
</bodyText>
<listItem confidence="0.997542625">
• Data Layer – data encryption and access con-
trol;
• Platform Layer – data encryption, authentica-
tion and access control;
• Service layer – authentication and transport
level encryption;
• User Interface layer – authentication and
transport level encryption.
</listItem>
<bodyText confidence="0.996653">
In addition, we have implemented a REST pro-
gramming API for AnnoMarket, so that data up-
load and download and running of annotation ser-
vices can all be done automatically, outside of
the web interface. This allows tighter integration
within other applications, as well as support for
synchronous (i.e. document-by-document) calling
of the annotation services.
</bodyText>
<subsectionHeader confidence="0.997456">
2.3 The Data Layer
</subsectionHeader>
<bodyText confidence="0.999902444444445">
The Data Layer stores various kinds of content,
e.g. crawled web content, users’ own corpora (pri-
vate or shared with others), results from running
the annotation services, etc.
Input documents can be in all major formats
(e.g., XML, HTML, JSON, PDF, DOC), based
on GATE’s comprehensive format support. In all
cases, when a document is being processed by An-
noMarket, the format is analysed and converted
into a single unified, graph-based model of an-
notation: the one of the GATE NLP framework
(Cunningham et al., 2002). Then this internal an-
notation format is also used by the collaborative
corpus annotation web tool, and for annotation in-
dexing and search. Annotations produced can be
exported as in-line or stand-off XML, including
XCES (Ide and Romary, 2004).
In implementation terms, Amazon S3 is used to
store content on the platform. S3 provides a REST
service for content access, as well as direct HTTP
access, which provides an easy way for AnnoMar-
ket users to upload and download content.
While stored on the cloud, data is protected by
Amazon’s security procedures. All transfers be-
tween the cloud storage, the annotation services,
and the user’s computer are done via an encrypted
channel, using SSL.
</bodyText>
<subsectionHeader confidence="0.994025">
2.4 The Platform Layer
</subsectionHeader>
<bodyText confidence="0.9999065">
The AnnoMarket platform provides an environ-
ment where text processing applications can be de-
ployed as annotation services on the cloud. It al-
lows processing pipelines that were produced on a
</bodyText>
<page confidence="0.999432">
21
</page>
<figureCaption confidence="0.999825">
Figure 2: Web-based Job Editor
</figureCaption>
<bodyText confidence="0.999915583333334">
developer’s stand-alone computer to be deployed
seamlessly on distributed hardware resources (the
compute cloud) with the aim of processing large
amounts of data in a timely fashion. This process
needs to be resilient in the face of failures at the
level of the cloud infrastructure, the network com-
munication, errors in the processing pipeline and
in the input data.
The platform layer determines the optimal num-
ber of virtual machines for running a given NLP
application, given the size of the document collec-
tion to be processed and taking into account the
overhead in starting up new virtual machines on
demand. The implementation is designed to be ro-
bust in the face of hardware failures and process-
ing errors. For technical details on the way this
was implemented on Amazon EC2 see (Tablan et
al., 2013).
The GATE plugin-based architecture (Cunning-
ham et al., 2002) is the basis for the platform en-
vironment. Users can upload any pipelines com-
pliant with the GATE Processing Resource (PR)
model and these are automatically deployed as an-
notation services on the AnnoMarket platform.
</bodyText>
<subsectionHeader confidence="0.999258">
2.5 Annotation Services
</subsectionHeader>
<bodyText confidence="0.941893636363636">
As discussed above, the platform layer in An-
noMarket addresses most of the technical and
methodological requirements towards the NLP
PaaS, making the deployment, execution, and
sharing of annotation services (i.e. pipelines and
algorithms) a straightforward task. From a re-
searcher’s perspective, executing an annotation
service on a dataset involves a few simple steps:
• Upload the document collection to be pro-
cessed or point the system to a shared dataset
on the platform;
</bodyText>
<listItem confidence="0.9995956">
• Upload a GATE-based processing pipeline to
be used (or choose an already deployed anno-
tation service);
• Set any required parameter values;
• Press the ‘Start’ button.
</listItem>
<bodyText confidence="0.9997696">
While the job is running, a regularly updated
execution log is made available in the user’s dash-
board. Upon job completion, an email notification
is also sent. Most of the implementation details are
hidden away from the user, who interacts with the
system through a web-based job editor, depicted
in Figure 2, or through a REST API.
The number of already deployed annotation ser-
vices on the platform is growing continuously.
Figure 3 shows a subset of them, as well as the
metadata tags associated with these services, so
that users can quickly restrict which types of ser-
vices they are after and then be shown only the
relevant subset. At the time of writing, there are
services of the following kinds:
</bodyText>
<listItem confidence="0.998367866666667">
• Part-of-Speech-Taggers for English, German,
Dutch, and Hungarian.
• Chunking: the GATE NP and VP chunkers
and the OpenNLP ones;
• Parsing: currently the Stanford Parser 4, but
more are under integration;
• Stemming in 15 languages, via the Snowball
stemmer;
• Named Entity Recognition: in English, Ger-
man, French, Arabic, Dutch, Romanian, and
Bulgarian;
• Biomedical taggers: the PennBio5 and the
AbGene (Tanabe and Wilbur, 2002) taggers;
• Twitter-specific NLP: language detection, to-
kenisation, normalisation, POS tagging, and
</listItem>
<footnote confidence="0.999932">
4http://nlp.stanford.edu/software/lex-parser.shtml
5http://www.seas.upenn.edu/˜strctlrn/BioTagger/BioTagger.html
</footnote>
<page confidence="0.998706">
22
</page>
<figureCaption confidence="0.996742">
Figure 3: Pre-deployed Text Annotation Services
Figure 4: Creating a New Annotation Service
</figureCaption>
<bodyText confidence="0.980002166666667">
NER.
The deployment of new annotation services is
done via a web interface (see Figure 4), where an
administrator needs to configure some basic de-
tails related to the utilisation of the platform layer
and provide a self-contained GATE-compatible
application. Platform users can only publish their
own annotation services by contacting an adminis-
trator, who can validate the provided pipeline be-
fore making it publicly available to the other users.
This step is intended to protect the users commu-
nity from malicious or poor quality pipelines.
</bodyText>
<sectionHeader confidence="0.991764" genericHeader="method">
3 Search and Browsing of Annotated
Corpora
</sectionHeader>
<bodyText confidence="0.999962954545455">
The AnnoMarket platform also includes a service
for indexing and searching over a collection of se-
mantically annotated documents. The output of an
annotation service (see Figure 2) can be fed di-
rectly into a search index, which is created as the
service is run on the documents. This provides fa-
cilities for searching over different views of doc-
ument text, for example one can search the docu-
ment’s words, the part-of-speech of those words,
or their morphological roots. As well as searching
the document text, we also support searches over
the documents’ semantic annotations, e.g. named
entity types or semantic roles.
Figure 5 shows a semantic search over 80,000
news web pages from the BBC. They have
first been pre-processed with the POS tagging,
morphological analysis, and NER services on
the platform and the output indexed automat-
ically. The search query is for documents,
where entities of type Person are followed by
any morphological form of the verb say, i.e.
{Person} root:say.
</bodyText>
<sectionHeader confidence="0.999535" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.9999476">
This paper described a cloud-based open platform
for text mining, which aims to assist the develop-
ment and deployment of robust, large-scale text
processing applications. By supporting the shar-
ing of annotation pipelines, AnnoMarket also pro-
</bodyText>
<page confidence="0.99795">
23
</page>
<figureCaption confidence="0.999531">
Figure 5: Example Semantic Search Results
</figureCaption>
<bodyText confidence="0.998507176470588">
motes reuse and repeatability of experiments.
As the number of annotation services offered by
the platform has grown, we identified a need for
service search, so that users can locate useful NLP
services more effectively. We are currently devel-
oping a new UI, which offers search and brows-
ing functionality, alongside various criteria, such
as functionality (e.g. POS tagger, named entity
recogniser), user ratings, natural language sup-
ported). In the medium- to long-term we have
also planned to support UIMA-based pipelines,
via GATE’s UIMA compatibility layer.
A beta version is currently open to researchers
for experimentation. Within the next six months
we plan to to solicit more shared annotation
pipelines to be deployed on the platform by other
researchers.
</bodyText>
<sectionHeader confidence="0.99766" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.988275666666667">
This work was supported by the European Union
under grant agreement No. 296322 AnnoMarket,6
and a UK EPSRC grant No. EP/I004327/1.
</bodyText>
<sectionHeader confidence="0.998614" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999809983870968">
Kalina Bontcheva, Hamish Cunningham, Ian Roberts,
Angus. Roberts, Valentin. Tablan, Niraj Aswani, and
Genevieve Gorrell. 2013. GATE Teamware: A
Web-based, Collaborative Text Annotation Frame-
work. Language Resources and Evaluation.
Hamish Cunningham, Diana Maynard, Kalina
Bontcheva, and Valentin Tablan. 2002. Gate: an
architecture for development of robust hlt applica-
tions. In Proceedings of the 40th Annual Meeting
on Association for Computational Linguistics, 7–12
July 2002, ACL ’02, pages 168–175, Strouds-
burg, PA, USA. Association for Computational
Linguistics.
Hamish Cunningham, Valentin Tablan, Angus Roberts,
and Kalina Bontcheva. 2013. Getting more out of
biomedical documents with gate’s full lifecycle open
6Seehttp://www.annomarket.eu/.
source text analytics. PLoS Computational Biology,
9(2):e1002854, 02.
Marios D Dikaiakos, Dimitrios Katsaros, Pankaj
Mehra, George Pallis, and Athena Vakali. 2009.
Cloud computing: Distributed internet computing
for IT and scientific research. IEEE Internet Com-
puting, 13(5):10–13.
David Ferrucci and Adam Lally. 2004. UIMA: An
Architectural Approach to Unstructured Information
Processing in the Corporate Research Environment.
Natural Language Engineering, 10(3-4):327–348.
Eduard Hovy. 2010. Annotation. In Tutorial Abstracts
ofACL.
Nancy Ide and Laurent Romary. 2004. Standards for
language resources. Natural Language Engineer-
ing, 10:211–225.
C. Ramakrishnan, W. A. Baumgartner, J. A. Blake,
G. A. P. C. Burns, K. Bretonnel Cohen, H. Drabkin,
J. Eppig, E. Hovy, C. N. Hsu, L. E. Hunter, T. Ingulf-
sen, H. R. Onda, S. Pokkunuri, E. Riloff, C. Roeder,
and K. Verspoor. 2010. Building the scientific
knowledge mine (SciKnowMine): a community-
driven framework for text mining tools in direct ser-
vice to biocuration. In New Challenges for NLP
Frameworks (NLPFrameworks 2010), LREC 2010,
pages 9–14, Valletta, Malta, May. ELRA.
Valentin Tablan, Ian Roberts, Hamish Cunningham,
and Kalina Bontcheva. 2013. GATECloud.net: a
Platform for Large-Scale, Open-Source Text Pro-
cessing on the Cloud. Philosophical Transactions
of the Royal Society A: Mathematical, Physical &amp;
Engineering Sciences, 371(1983):20120071.
Lorraine Tanabe and W. John Wilbur. 2002. Tag-
ging Gene and Protein Names in Full Text Articles.
In Proceedings of the ACL-02 workshop on Natural
Language Processing in the biomedical domain, 7–
12 July 2002, volume 3, pages 9–13, Philadelphia,
PA. Association for Computational Linguistics.
Bin Zhou, Yan Jia, Chunyang Liu, and Xu Zhang.
2010. A distributed text mining system for online
web textual data analysis. In Cyber-Enabled Dis-
tributed Computing and Knowledge Discovery (Cy-
berC), 2010 International Conference on, pages 1–
4, Los Alamitos, CA, USA, October. IEEE Com-
puter Society.
</reference>
<page confidence="0.999178">
24
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.514652">
<title confidence="0.999889">AnnoMarket: An Open Cloud Platform for NLP</title>
<author confidence="0.918866">Marin</author>
<affiliation confidence="0.693055">Ontotext AD</affiliation>
<address confidence="0.796493">47A Tsarigradsko Shosse, Sofia, Bulgaria</address>
<email confidence="0.999277">marin.dimitrov@ontotext.com</email>
<author confidence="0.990746">Valentin Tablan</author>
<author confidence="0.990746">Kalina</author>
<affiliation confidence="0.9995955">University of Department of Computer</affiliation>
<address confidence="0.999686">211 Portobello, Sheffield, UK</address>
<email confidence="0.943058">Initial.Surname@dcs.shef.ac.uk</email>
<abstract confidence="0.994309409090909">This paper presents AnnoMarket, an open cloud-based platform which enables researchers to deploy, share, and use language processing components and resources, following the data-as-a-service and software-as-a-service paradigms. The focus is on multilingual text analysis resources and services, based on an opensource infrastructure and compliant with relevant NLP standards. We demonstrate how the AnnoMarket platform can be used to develop NLP applications with little or no programming, to index the results for enhanced browsing and search, and to evaluate performance. Utilising Anno- Market is straightforward, since cloud infrastructural issues are dealt with by the platform, completely transparently to the user: load balancing, efficient data upload and storage, deployment on the virtual machines, security, and fault tolerance.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Valentin Tablan Roberts</author>
<author>Niraj Aswani</author>
<author>Genevieve Gorrell</author>
</authors>
<title>GATE Teamware: A Web-based, Collaborative Text Annotation Framework. Language Resources and Evaluation.</title>
<date>2013</date>
<marker>Roberts, Aswani, Gorrell, 2013</marker>
<rawString>Kalina Bontcheva, Hamish Cunningham, Ian Roberts, Angus. Roberts, Valentin. Tablan, Niraj Aswani, and Genevieve Gorrell. 2013. GATE Teamware: A Web-based, Collaborative Text Annotation Framework. Language Resources and Evaluation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hamish Cunningham</author>
<author>Diana Maynard</author>
<author>Kalina Bontcheva</author>
<author>Valentin Tablan</author>
</authors>
<title>Gate: an architecture for development of robust hlt applications.</title>
<date>2002</date>
<journal>ACL</journal>
<booktitle>In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics, 7–12</booktitle>
<volume>02</volume>
<pages>168--175</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Stroudsburg, PA, USA.</location>
<contexts>
<context position="6911" citStr="Cunningham et al., 2002" startWordPosition="999" endWordPosition="1002">nt and to create high quality training and evaluation datasets. It is common to use double or triple annotation, where several people perform the annotation task independently and we then measure their level of agreement (Inter-Annotator Agreement, or IAA) to quantify and control the quality of this data (Hovy, 2010). The AnnoMarket platform was therefore designed to offer full methodological support for all stages of the text analysis development lifecycle: 1. Create an initial prototype of the NLP pipeline, testing on a small document collection, using the desktop-based GATE user interface (Cunningham et al., 2002); 2. If required, collect a gold-standard corpus for evaluation and/or training, using the GATE Teamware collaborative corpus annotation service (Bontcheva et al., 2013), running in AnnoMarket; 3. Evaluate the performance of the automatic pipeline on the gold standard (either locally in the GATE development environment or on the cloud). Return to step 1 for further development and evaluation cycles, as needed. 4. Upload the large datasets and deploy the NLP pipeline on the AnnoMarket PaaS; 5. Run the large-scale NLP experiment and download the results as XML or a standard linguistic annotation</context>
<context position="11005" citStr="Cunningham et al., 2002" startWordPosition="1639" endWordPosition="1642">upport for synchronous (i.e. document-by-document) calling of the annotation services. 2.3 The Data Layer The Data Layer stores various kinds of content, e.g. crawled web content, users’ own corpora (private or shared with others), results from running the annotation services, etc. Input documents can be in all major formats (e.g., XML, HTML, JSON, PDF, DOC), based on GATE’s comprehensive format support. In all cases, when a document is being processed by AnnoMarket, the format is analysed and converted into a single unified, graph-based model of annotation: the one of the GATE NLP framework (Cunningham et al., 2002). Then this internal annotation format is also used by the collaborative corpus annotation web tool, and for annotation indexing and search. Annotations produced can be exported as in-line or stand-off XML, including XCES (Ide and Romary, 2004). In implementation terms, Amazon S3 is used to store content on the platform. S3 provides a REST service for content access, as well as direct HTTP access, which provides an easy way for AnnoMarket users to upload and download content. While stored on the cloud, data is protected by Amazon’s security procedures. All transfers between the cloud storage, </context>
<context position="12819" citStr="Cunningham et al., 2002" startWordPosition="1938" endWordPosition="1942">e level of the cloud infrastructure, the network communication, errors in the processing pipeline and in the input data. The platform layer determines the optimal number of virtual machines for running a given NLP application, given the size of the document collection to be processed and taking into account the overhead in starting up new virtual machines on demand. The implementation is designed to be robust in the face of hardware failures and processing errors. For technical details on the way this was implemented on Amazon EC2 see (Tablan et al., 2013). The GATE plugin-based architecture (Cunningham et al., 2002) is the basis for the platform environment. Users can upload any pipelines compliant with the GATE Processing Resource (PR) model and these are automatically deployed as annotation services on the AnnoMarket platform. 2.5 Annotation Services As discussed above, the platform layer in AnnoMarket addresses most of the technical and methodological requirements towards the NLP PaaS, making the deployment, execution, and sharing of annotation services (i.e. pipelines and algorithms) a straightforward task. From a researcher’s perspective, executing an annotation service on a dataset involves a few s</context>
</contexts>
<marker>Cunningham, Maynard, Bontcheva, Tablan, 2002</marker>
<rawString>Hamish Cunningham, Diana Maynard, Kalina Bontcheva, and Valentin Tablan. 2002. Gate: an architecture for development of robust hlt applications. In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics, 7–12 July 2002, ACL ’02, pages 168–175, Stroudsburg, PA, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hamish Cunningham</author>
<author>Valentin Tablan</author>
<author>Angus Roberts</author>
<author>Kalina Bontcheva</author>
</authors>
<title>Getting more out of biomedical documents with gate’s full lifecycle open 6Seehttp://www.annomarket.eu/.</title>
<date>2013</date>
<contexts>
<context position="2933" citStr="Cunningham et al., 2013" startWordPosition="406" endWordPosition="409">s, for example, comprises small but numerous documents, which can lead to unfeasibly high processing costs. Platform-as-a-Service (PaaS) (Dikaiakos et al., 2009) are a type of cloud computing service which insulates developers from the low-level issues of utilising cloud infrastructures effectively, while providing facilities for efficient development, testing, and deployment of software over the Internet, following the SaaS model. In the context of traditional NLP research and development, and pre-dating cloud computing, similar needs were addressed through NLP infrastructures, such as GATE (Cunningham et al., 2013) and UIMA (Ferrucci and Lally, 2004). These infrastructures accelerated significantly the pace of NLP research, through reusable algorithms (e.g. rule-based pattern matching engines, machine learning algorithms), free tools for low-level NLP tasks, and support for multiple input and output document formats (e.g. XML, PDF, DOC, RDF, JSON). This demonstration introduces the AnnoMarket3 open, cloud-based platform, which has been developed following the PaaS paradigm. It enables researchers to deploy, share, and use language processing components and resources, following the Data-as-a-Service (Daa</context>
</contexts>
<marker>Cunningham, Tablan, Roberts, Bontcheva, 2013</marker>
<rawString>Hamish Cunningham, Valentin Tablan, Angus Roberts, and Kalina Bontcheva. 2013. Getting more out of biomedical documents with gate’s full lifecycle open 6Seehttp://www.annomarket.eu/.</rawString>
</citation>
<citation valid="false">
<title>source text analytics.</title>
<journal>PLoS Computational Biology,</journal>
<volume>9</volume>
<issue>2</issue>
<pages>02</pages>
<marker></marker>
<rawString>source text analytics. PLoS Computational Biology, 9(2):e1002854, 02.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marios D Dikaiakos</author>
<author>Dimitrios Katsaros</author>
<author>Pankaj Mehra</author>
<author>George Pallis</author>
<author>Athena Vakali</author>
</authors>
<title>Cloud computing: Distributed internet computing for IT and scientific research.</title>
<date>2009</date>
<journal>IEEE Internet Computing,</journal>
<volume>13</volume>
<issue>5</issue>
<contexts>
<context position="1280" citStr="Dikaiakos et al., 2009" startWordPosition="170" endWordPosition="173">cture and compliant with relevant NLP standards. We demonstrate how the AnnoMarket platform can be used to develop NLP applications with little or no programming, to index the results for enhanced browsing and search, and to evaluate performance. Utilising AnnoMarket is straightforward, since cloud infrastructural issues are dealt with by the platform, completely transparently to the user: load balancing, efficient data upload and storage, deployment on the virtual machines, security, and fault tolerance. 1 Introduction Following the Software-as-a-Service (SaaS) paradigm from cloud computing (Dikaiakos et al., 2009), a number of text processing services have been developed, e.g. OpenCalais1 and Alchemy API2. These provide information extraction services, accessible programmatically and charged per number of documents processed. However, they suffer from two key technical drawbacks. Firstly, document-by-document processing over HTTP is inefficient on large datasets and is also limited to within-document text processing algorithms. Secondly, the text processing algorithms are pre-packaged: it is not possible for researchers to extend the functional1http://www.opencalais.com 2http://www.alchemyapi.com ity (</context>
</contexts>
<marker>Dikaiakos, Katsaros, Mehra, Pallis, Vakali, 2009</marker>
<rawString>Marios D Dikaiakos, Dimitrios Katsaros, Pankaj Mehra, George Pallis, and Athena Vakali. 2009. Cloud computing: Distributed internet computing for IT and scientific research. IEEE Internet Computing, 13(5):10–13.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Ferrucci</author>
<author>Adam Lally</author>
</authors>
<title>UIMA: An Architectural Approach to Unstructured Information Processing in the Corporate Research Environment.</title>
<date>2004</date>
<journal>Natural Language Engineering,</journal>
<pages>10--3</pages>
<contexts>
<context position="2969" citStr="Ferrucci and Lally, 2004" startWordPosition="412" endWordPosition="416"> numerous documents, which can lead to unfeasibly high processing costs. Platform-as-a-Service (PaaS) (Dikaiakos et al., 2009) are a type of cloud computing service which insulates developers from the low-level issues of utilising cloud infrastructures effectively, while providing facilities for efficient development, testing, and deployment of software over the Internet, following the SaaS model. In the context of traditional NLP research and development, and pre-dating cloud computing, similar needs were addressed through NLP infrastructures, such as GATE (Cunningham et al., 2013) and UIMA (Ferrucci and Lally, 2004). These infrastructures accelerated significantly the pace of NLP research, through reusable algorithms (e.g. rule-based pattern matching engines, machine learning algorithms), free tools for low-level NLP tasks, and support for multiple input and output document formats (e.g. XML, PDF, DOC, RDF, JSON). This demonstration introduces the AnnoMarket3 open, cloud-based platform, which has been developed following the PaaS paradigm. It enables researchers to deploy, share, and use language processing components and resources, following the Data-as-a-Service (DaaS) and Software-as-a-Service (SaaS) </context>
</contexts>
<marker>Ferrucci, Lally, 2004</marker>
<rawString>David Ferrucci and Adam Lally. 2004. UIMA: An Architectural Approach to Unstructured Information Processing in the Corporate Research Environment. Natural Language Engineering, 10(3-4):327–348.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eduard Hovy</author>
</authors>
<date>2010</date>
<booktitle>Annotation. In Tutorial Abstracts ofACL.</booktitle>
<contexts>
<context position="6605" citStr="Hovy, 2010" startWordPosition="953" endWordPosition="954">omponents. 2.1 Development and Deployment Methodology The development of text analysis algorithms and pipelines typically follows a certain methodological pattern, or lifecycle. A central problem is to define the NLP task, such that human annotators can perform it with a high level of agreement and to create high quality training and evaluation datasets. It is common to use double or triple annotation, where several people perform the annotation task independently and we then measure their level of agreement (Inter-Annotator Agreement, or IAA) to quantify and control the quality of this data (Hovy, 2010). The AnnoMarket platform was therefore designed to offer full methodological support for all stages of the text analysis development lifecycle: 1. Create an initial prototype of the NLP pipeline, testing on a small document collection, using the desktop-based GATE user interface (Cunningham et al., 2002); 2. If required, collect a gold-standard corpus for evaluation and/or training, using the GATE Teamware collaborative corpus annotation service (Bontcheva et al., 2013), running in AnnoMarket; 3. Evaluate the performance of the automatic pipeline on the gold standard (either locally in the GA</context>
</contexts>
<marker>Hovy, 2010</marker>
<rawString>Eduard Hovy. 2010. Annotation. In Tutorial Abstracts ofACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy Ide</author>
<author>Laurent Romary</author>
</authors>
<title>Standards for language resources.</title>
<date>2004</date>
<journal>Natural Language Engineering,</journal>
<pages>10--211</pages>
<contexts>
<context position="7541" citStr="Ide and Romary, 2004" startWordPosition="1097" endWordPosition="1101">equired, collect a gold-standard corpus for evaluation and/or training, using the GATE Teamware collaborative corpus annotation service (Bontcheva et al., 2013), running in AnnoMarket; 3. Evaluate the performance of the automatic pipeline on the gold standard (either locally in the GATE development environment or on the cloud). Return to step 1 for further development and evaluation cycles, as needed. 4. Upload the large datasets and deploy the NLP pipeline on the AnnoMarket PaaS; 5. Run the large-scale NLP experiment and download the results as XML or a standard linguistic annotation format (Ide and Romary, 2004). AnnoMarket also offers scalable semantic indexing and search over the linguistic annotations and document content. 6. Analyse any errors, and if required, iterate again over the earlier steps. AnnoMarket is fully compatible with the GATE open-source architecture (Cunningham et al., 2002), in order to benefit from GATE’s numerous reusable and multilingual text processing components, and also from its infrastructural support for linguistic standards and diverse input formats. 2.2 Architecture The architecture of the AnnoMarket PaaS comprises of four layers (see Figure 1), combining 20 Figure 1</context>
<context position="11249" citStr="Ide and Romary, 2004" startWordPosition="1678" endWordPosition="1681">nning the annotation services, etc. Input documents can be in all major formats (e.g., XML, HTML, JSON, PDF, DOC), based on GATE’s comprehensive format support. In all cases, when a document is being processed by AnnoMarket, the format is analysed and converted into a single unified, graph-based model of annotation: the one of the GATE NLP framework (Cunningham et al., 2002). Then this internal annotation format is also used by the collaborative corpus annotation web tool, and for annotation indexing and search. Annotations produced can be exported as in-line or stand-off XML, including XCES (Ide and Romary, 2004). In implementation terms, Amazon S3 is used to store content on the platform. S3 provides a REST service for content access, as well as direct HTTP access, which provides an easy way for AnnoMarket users to upload and download content. While stored on the cloud, data is protected by Amazon’s security procedures. All transfers between the cloud storage, the annotation services, and the user’s computer are done via an encrypted channel, using SSL. 2.4 The Platform Layer The AnnoMarket platform provides an environment where text processing applications can be deployed as annotation services on t</context>
</contexts>
<marker>Ide, Romary, 2004</marker>
<rawString>Nancy Ide and Laurent Romary. 2004. Standards for language resources. Natural Language Engineering, 10:211–225.</rawString>
</citation>
<citation valid="false">
<authors>
<author>C Ramakrishnan</author>
<author>W A Baumgartner</author>
<author>J A Blake</author>
<author>G A P C Burns</author>
<author>K Bretonnel Cohen</author>
<author>H Drabkin</author>
<author>J Eppig</author>
<author>E Hovy</author>
<author>C N Hsu</author>
<author>L E Hunter</author>
<author>T Ingulfsen</author>
<author>H R Onda</author>
<author>S Pokkunuri</author>
<author>E Riloff</author>
<author>C Roeder</author>
<author>K Verspoor</author>
</authors>
<title>Building the scientific knowledge mine (SciKnowMine): a communitydriven framework for text mining tools in direct service to biocuration. In New Challenges for NLP Frameworks (NLPFrameworks 2010), LREC</title>
<date>2010</date>
<pages>9--14</pages>
<publisher>ELRA.</publisher>
<location>Valletta, Malta,</location>
<contexts>
<context position="4522" citStr="Ramakrishnan et al., 2010" startWordPosition="633" endWordPosition="636">-9 2013. c�2013 Association for Computational Linguistics to carry out large-scale NLP experiments by harnessing the vast, on-demand compute power of the Amazon cloud. It supports not only NLP algorithm development and execution, but also ondemand collaborative corpus annotation and performance evaluation. Important infrastructural issues are dealt with by the platform, completely transparently for the researcher: load balancing, efficient data upload and storage, deployment on the virtual machines, security, and fault tolerance. AnnoMarket differs from previous work (e.g. (Zhou et al., 2010; Ramakrishnan et al., 2010)) in that it requires no programming in order to run a GATE-compliant NLP application on a large dataset. In that sense, it combines the ease of use of an NLP SaaS with the openness and comprehensive facilities of the GATE NLP infrastructure. AnnoMarket offers a growing number of pre-packaged services, in multiple languages. Additionally, as a specialised NLP PaaS, it also supports a bring-your-own-pipeline option, which can be built easily by reusing pre-existing GATEcompatible NLP components and adding some new ones. Moreover, in addition to offering entity extraction services like OpenCalai</context>
</contexts>
<marker>Ramakrishnan, Baumgartner, Blake, Burns, Cohen, Drabkin, Eppig, Hovy, Hsu, Hunter, Ingulfsen, Onda, Pokkunuri, Riloff, Roeder, Verspoor, 2010</marker>
<rawString>C. Ramakrishnan, W. A. Baumgartner, J. A. Blake, G. A. P. C. Burns, K. Bretonnel Cohen, H. Drabkin, J. Eppig, E. Hovy, C. N. Hsu, L. E. Hunter, T. Ingulfsen, H. R. Onda, S. Pokkunuri, E. Riloff, C. Roeder, and K. Verspoor. 2010. Building the scientific knowledge mine (SciKnowMine): a communitydriven framework for text mining tools in direct service to biocuration. In New Challenges for NLP Frameworks (NLPFrameworks 2010), LREC 2010, pages 9–14, Valletta, Malta, May. ELRA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Valentin Tablan</author>
<author>Ian Roberts</author>
<author>Hamish Cunningham</author>
<author>Kalina Bontcheva</author>
</authors>
<title>GATECloud.net: a Platform for Large-Scale, Open-Source Text Processing on the Cloud.</title>
<date>2013</date>
<journal>Philosophical Transactions of the Royal Society A: Mathematical, Physical &amp; Engineering Sciences,</journal>
<volume>371</volume>
<issue>1983</issue>
<contexts>
<context position="12757" citStr="Tablan et al., 2013" startWordPosition="1930" endWordPosition="1933">rocess needs to be resilient in the face of failures at the level of the cloud infrastructure, the network communication, errors in the processing pipeline and in the input data. The platform layer determines the optimal number of virtual machines for running a given NLP application, given the size of the document collection to be processed and taking into account the overhead in starting up new virtual machines on demand. The implementation is designed to be robust in the face of hardware failures and processing errors. For technical details on the way this was implemented on Amazon EC2 see (Tablan et al., 2013). The GATE plugin-based architecture (Cunningham et al., 2002) is the basis for the platform environment. Users can upload any pipelines compliant with the GATE Processing Resource (PR) model and these are automatically deployed as annotation services on the AnnoMarket platform. 2.5 Annotation Services As discussed above, the platform layer in AnnoMarket addresses most of the technical and methodological requirements towards the NLP PaaS, making the deployment, execution, and sharing of annotation services (i.e. pipelines and algorithms) a straightforward task. From a researcher’s perspective,</context>
</contexts>
<marker>Tablan, Roberts, Cunningham, Bontcheva, 2013</marker>
<rawString>Valentin Tablan, Ian Roberts, Hamish Cunningham, and Kalina Bontcheva. 2013. GATECloud.net: a Platform for Large-Scale, Open-Source Text Processing on the Cloud. Philosophical Transactions of the Royal Society A: Mathematical, Physical &amp; Engineering Sciences, 371(1983):20120071.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lorraine Tanabe</author>
<author>W John Wilbur</author>
</authors>
<title>Tagging Gene and Protein Names in Full Text Articles.</title>
<date>2002</date>
<booktitle>In Proceedings of the ACL-02 workshop on Natural Language Processing in the biomedical domain, 7– 12</booktitle>
<volume>3</volume>
<pages>9--13</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Philadelphia, PA.</location>
<contexts>
<context position="14843" citStr="Tanabe and Wilbur, 2002" startWordPosition="2268" endWordPosition="2271">rvices, so that users can quickly restrict which types of services they are after and then be shown only the relevant subset. At the time of writing, there are services of the following kinds: • Part-of-Speech-Taggers for English, German, Dutch, and Hungarian. • Chunking: the GATE NP and VP chunkers and the OpenNLP ones; • Parsing: currently the Stanford Parser 4, but more are under integration; • Stemming in 15 languages, via the Snowball stemmer; • Named Entity Recognition: in English, German, French, Arabic, Dutch, Romanian, and Bulgarian; • Biomedical taggers: the PennBio5 and the AbGene (Tanabe and Wilbur, 2002) taggers; • Twitter-specific NLP: language detection, tokenisation, normalisation, POS tagging, and 4http://nlp.stanford.edu/software/lex-parser.shtml 5http://www.seas.upenn.edu/˜strctlrn/BioTagger/BioTagger.html 22 Figure 3: Pre-deployed Text Annotation Services Figure 4: Creating a New Annotation Service NER. The deployment of new annotation services is done via a web interface (see Figure 4), where an administrator needs to configure some basic details related to the utilisation of the platform layer and provide a self-contained GATE-compatible application. Platform users can only publish t</context>
</contexts>
<marker>Tanabe, Wilbur, 2002</marker>
<rawString>Lorraine Tanabe and W. John Wilbur. 2002. Tagging Gene and Protein Names in Full Text Articles. In Proceedings of the ACL-02 workshop on Natural Language Processing in the biomedical domain, 7– 12 July 2002, volume 3, pages 9–13, Philadelphia, PA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bin Zhou</author>
<author>Yan Jia</author>
<author>Chunyang Liu</author>
<author>Xu Zhang</author>
</authors>
<title>A distributed text mining system for online web textual data analysis.</title>
<date>2010</date>
<booktitle>In Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC), 2010 International Conference on,</booktitle>
<volume>1</volume>
<pages>pages</pages>
<publisher>IEEE Computer Society.</publisher>
<location>Los Alamitos, CA, USA,</location>
<contexts>
<context position="4494" citStr="Zhou et al., 2010" startWordPosition="629" endWordPosition="632"> Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics to carry out large-scale NLP experiments by harnessing the vast, on-demand compute power of the Amazon cloud. It supports not only NLP algorithm development and execution, but also ondemand collaborative corpus annotation and performance evaluation. Important infrastructural issues are dealt with by the platform, completely transparently for the researcher: load balancing, efficient data upload and storage, deployment on the virtual machines, security, and fault tolerance. AnnoMarket differs from previous work (e.g. (Zhou et al., 2010; Ramakrishnan et al., 2010)) in that it requires no programming in order to run a GATE-compliant NLP application on a large dataset. In that sense, it combines the ease of use of an NLP SaaS with the openness and comprehensive facilities of the GATE NLP infrastructure. AnnoMarket offers a growing number of pre-packaged services, in multiple languages. Additionally, as a specialised NLP PaaS, it also supports a bring-your-own-pipeline option, which can be built easily by reusing pre-existing GATEcompatible NLP components and adding some new ones. Moreover, in addition to offering entity extrac</context>
</contexts>
<marker>Zhou, Jia, Liu, Zhang, 2010</marker>
<rawString>Bin Zhou, Yan Jia, Chunyang Liu, and Xu Zhang. 2010. A distributed text mining system for online web textual data analysis. In Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC), 2010 International Conference on, pages 1– 4, Los Alamitos, CA, USA, October. IEEE Computer Society.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>