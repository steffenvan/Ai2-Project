<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000749">
<title confidence="0.9885675">
Towards a dependency-based gold standard for German parsers â€”
The TiGer Dependency Bank
</title>
<author confidence="0.9877235">
Martin Fors-0, Nuria Bertomeu*, Berthold Crysmann*, Frederik Fouvry*,
Silvia Hansen-Schirra*, Valia Kordoni*
</author>
<affiliation confidence="0.628383">
*Computational Linguistics &amp; Phonetics, Saarland University
</affiliation>
<address confidence="0.382214">
Postfach 15 11 50, 66041 Saarbriicken, Germany
{eft omeu I crysmann I f ouvry I hansen I kordoni}@coli . uni-sb . de
tInstitute for Natural Language Processing, University of Stuttgart
Azenbergstr. 12, 70174 Stuttgart, Germany
</address>
<email confidence="0.723691">
forst@ims.uni-stuttgart.de
</email>
<sectionHeader confidence="0.953632" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999664470588235">
In this paper we discuss the construction, fea-
tures and intended uses of the TiGer DB.
The TiGer DB is a dependency bank derived
from the TiGer Treebank containing predicate-
argument relations and several grammatical fea-
tures which can be considered as semantically
meaningful. It is produced semi-automatically
by the conversion of the TiGer treebank into
an LFG f-structure bank, which then in turn is
converted into the TiGer DB. This allows for a
relatively rapid construction. The grammatical
relations and features encoded in the TiGer DB
are chosen in order to keep the mapping from
parser output, e.g. LFG f-structures or HPSG
feature structures, to dependency triples simple.
Hence, the TiGer DB can be used as a gold stan-
dard for the evaluation of German parsers.
</bodyText>
<sectionHeader confidence="0.99725" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99980328">
The TiGer Dependency Bank (henceforth TiGer
DB) consists of a part of the TiGer Treebank,
currently about 40,000 syntactically annotated
sentences of German newspaper texts (Brants
et al., in press). It is annotated with so-called
dependency triples, i.e. a functor representing a
grammatical relation or feature and two argu-
ments representing the head and the value of
this feature respectively. The format of these
dependency triples is the same as in the PARC
700 Dependency Bank (King et al., 2003), which
makes it possible to use the tools for display-
ing and pruning structures that are available to-
gether with this English dependency bank. The
grammatical relations encoded in the TiGer DB
are to a fair extent identical to the edge labels
used in the TiGer Treebank; in order to make
it more suitable as a basis for the evaluation
of German parsers, additional distinctions have
to be made in the set of grammatical relations,
which leads to an enlarged set of features com-
pared to the TiGer Treebank.&apos;
The TiGer DB is created because the graphs
of the TiGer Treebank themselves are difficult
to use as a gold standard for German parsers
for a number of reasons: The constituency an-
notation in the TiGer graphs has the advantage
of being fairly theory-neutral, but (i) since it in-
cludes discontinuous constituents and secondary
edges, it cannot be mimicked by any of the Ger-
man parsers we are aware of. Besides, (ii) the to-
kenization (and lemmatization) of certain multi-
word expressions, compounds etc. differs from
the analyses most parsers obtain. The func-
tional annotation in the TiGer graphs is more
suitable for the evaluation and comparison of
parsers across theoretical frameworks, but (iii)
it is intimately tied to the constituency annota-
tion, including edge labels such as ADC&apos; (multi-
token adjective component), which only exist
due to the lemmatization decisions mentioned
above, and (iv) it does not encode all infor-
mation and distinctions that (deep) parsers are
supposed to obtain.
Similar problems arise with other syntacti-
cally annotated corpora of German text and
speech, such as the Negra Corpus (Skut et al.,
1998; Brants et al., 1999), the Verbmobil Corpus
(Wahlster, 2000) and the Tiibingen Treebank
of Written German (Telljohann et al., 2003),
</bodyText>
<footnote confidence="0.981854333333333">
&apos;It is planned to distribute the TiGer DB
alongside the TiGer Treebank, which is freely
available for research and evaluation, and to in-
clude detailed documentation in the release. For
more information, please refer to http://www.ims.uni-
stuttgart.de/projekte/TIGER/TIGERCorpus/.
2Upper case labels will be used for the functional an-
notation encoded in the TiGer Treebank and lower case
labels for the dependencies encoded in the TiGer DB.
</footnote>
<bodyText confidence="0.9997404">
since they all encode constituency and depen-
dency information in one structure, the latter
being biased by the former. Grammar devel-
opers, however, are interested in pure depen-
dency representations, which allow for a much
more meaningful evaluation than the bracketing
of constituents, and are therefore clearly moving
away from treebanks to dependency banks (Car-
roll et al., 1999; Carroll et al., 2003).
In this paper we present the strategy that has
been adopted in the TiGer project for semi-
automatically obtaining a dependency bank
that will be of use for a wide variety of applica-
tions, in particular parser evaluation for various
formalisms.
</bodyText>
<sectionHeader confidence="0.686681" genericHeader="method">
2 Constructing the TiGer DB
</sectionHeader>
<bodyText confidence="0.998852833333333">
In this section, the method for producing the
TiGer DB is presented. It is a combination of
automatic and manual techniques in order to
achieve the most accurate and consistent results
in a reasonable amount of time. The basic pro-
cess is as follows:
</bodyText>
<listItem confidence="0.938691777777778">
1. Convert the TiGer graph into an f-structure
chart (packed representation of one or sev-
eral f-structures).
2. Match the resulting f-structure chart
against the output of a broad-coverage LFG
for German and bank the compatible read-
ing(s).
3. For all sentences for which there are either
several or no compatible readings, select the
correct/best analysis manually.
4. Fully automatically convert the selected f-
structure into dependency triples.
5. Manually check/correct each structure us-
ing the pretty-printing and validation tools
that are distributed with the PARC 700 De-
pendency Bank.
2.1 Automatic derivation of f-structure
charts from the TiGer Treebank
</listItem>
<bodyText confidence="0.999947486486487">
The conversion of TiGer graphs into f-structure
charts is described in Forst (2003a) and Forst
(2003b). It takes the TiGer graphs encoded in
TiGer XML as input and produces f-structure
charts, i.e. packed representations of one or sev-
eral f-structures. The ambiguity in the map-
ping from TiGer graphs to f-structures is due
to information lacking in the TiGer Treebank,
such as information concerning the decomposi-
tion of compounds, the nature of phrases labeled
as MOs (modifiers), the subjects of infinite verb
forms etc. In the conversion process it can be
dealt with by means of optional rules, but for its
use as a gold standard the output of the conver-
sion has to be disambiguated, of course. How
this can be done is discussed in 2.2 and 2.3.
Apart from changes due to the shift from one
representation to another, we have decided to
perform some changes to the analyses chosen by
the TiGer Treebank annotators as well. They
are motivated by the fact that the treatment
given to these phenomena by all German parsers
we are aware of differs from the analysis in the
TiGer Treebank in a systematic way. One of
these changes concerns PPs that are extracted
from NPs, such as statt dessen in Statt dessen
gestand ihnen die Regierung eine Entschadigung
zit: (TiGer Corpus sentence #14839). In the
TiGer Treebank, this PP is attached as an MNR
(noun modifier) to the NP eine Entschadigung.
Current German parsers, however, would attach
this PP to the verb, since the attempt of at-
taching it to the NP would result in a massive
increase of ambiguity. For a gold standard for
German parsers, we consider it reasonable to en-
code the latter attachment rather than one that
no parser would be able to achieve.
</bodyText>
<subsectionHeader confidence="0.726971">
2.2 Automatic disambiguation of
TiGer-derived f-structure charts
</subsectionHeader>
<bodyText confidence="0.99998527027027">
As a first step towards disambiguating the f-
structure charts resulting from the fully auto-
matic treebank conversion, these are matched
against the output of a broad-coverage LFG
for German (Dipper, 2003) and the compatible
reading(s) are saved. This is done with the help
of a Perl script that has been specifically de-
veloped for this purpose. Of course, this map-
ping can only be performed for sentences that
are assigned a full parse by the broad-coverage
LFG, and although the information both in the
TiGer graphs and in the LFG parses is rela-
tively detailed it can be impossible to fully dis-
ambiguate. Typical remaining ambiguities are
due to the decomposition of compounds and to
person and number ambiguities of possessive de-
terminers and pronouns, these informations not
being included in the TiGer Treebank.
Moreover, it has to be kept in mind that the
mapping against the LFG output does not al-
ways retain the correct analysis, although most
ambiguities can be resolved correctly in this way.
This is particularly true for the mo (modifier)
vs. op (prepositional object) distinction; an in-
complete lexicon entry in the LFG can lead to
the selection of the mo reading, even if the op
reading is more adequate.
Nevertheless, the matching of the TiGer-
derived f-structure charts is extremely useful.
Not only does it help to disambiguate the am-
biguous representations, but it also helps to in-
crease consistency in the gold standard, since
every time a match between the TiGer-derived
structure and the grammar output is expected,
but cannot be achieved, the human annotators
can pay special attention to the phenomenon
that caused the match to fail.
</bodyText>
<subsectionHeader confidence="0.898569">
2.3 Manual disambiguation of
TiGer-derived f-structure charts
</subsectionHeader>
<bodyText confidence="0.999967588235294">
All ambiguous TiGer-derived f-structure charts
that cannot be fully disambiguated in the pre-
vious step have to be disambiguated manu-
ally. This is performed by visualizing the struc-
tures in the grammar development tool XLE
(Maxwell III and Kaplan, 1993). It displays
the packed representation of all f-structures en-
coded, the currently selected f-structure and an
additional window, where the alternatives with
the information differing among them are visu-
alized. This allows human annotators to choose
and save the correct reading in a relatively com-
fortable way. When none of the readings can be
considered correct, the best analysis is selected
and the annotator puts the sentence number on
a list of structures to be reconsidered in the val-
idation step.
</bodyText>
<subsectionHeader confidence="0.9398465">
2.4 Conversion into dependency triples
and validation
</subsectionHeader>
<bodyText confidence="0.991611972222222">
The conversion from f-structures to dependency
triples is fully automatic and unambiguous. It
is carried out in basically the same way as it
was done for the PARC 700 Dependency Bank
(King et al., 2003). It mainly involves a cer-
tain amount of &amp;quot;flattening&amp;quot;, i.e. articulate f-
structures without a PRED have to be restruc-
tured, but this can be done without any loss of
information. In addition to the flattening, a cer-
tain amount of renaming and reorganizing has
to be carried out in order to make the struc-
tures meet the annotation principles outlined in
Section 3.
In a final (and very important) step, each
TiGer DB structure is manually evaluated by
two people. If the structure is not correct,
changes are made in the text-based represen-
tation of the structure. These changes are ex-
pected to be minor and to concern mainly the
attachment of certain phrases in cases where the
TiGer DB annotator disagrees with the annota-
tion in the TiGer Treebank.
3 Grammatical relations and
features encoded in the TiGer DB
The choice of the format and the dependencies
encoded in the TiGer DB is crucial for its pos-
sible uses. Therefore the contents of the TiGer
DB structures themselves are discussed in this
section. Most of this information will be in-
cluded in greater detail in the documentation
distributed with the TiGer DB.
First we discuss indices, reentrancies and
lemmatization. We then present the grammat-
ical relations we have decided to encode in the
TiGer DB and finally the atomic features cho-
sen.
</bodyText>
<subsectionHeader confidence="0.9774585">
3.1 Indices, Reentrancies and
Lemmatization
</subsectionHeader>
<bodyText confidence="0.997588515151515">
Just as in the PARC 700 Dependency Bank, all
predicates in a given TiGer DB structure are as-
signed a unique index. For displaying reasons,
the matrix predicate is always assigned the in-
dex 0. All other predicates are assigned the
index corresponding to the ID of the terminal
node in the TiGer Treebank that it relates to.
Predicates which do not clearly relate to a ter-
minal node in the TiGer treebank are given a
&amp;quot;new&amp;quot; index. (This is the case for the compound
non-head privat-1001 in Figure 2, for example.)
The use of indices has a number of advan-
tages: First, they help to distinguish two in-
stances of the same word. Second, they allow
to express reentrant structures, i.e. structures
in which a single item is related to more than
one predicate. This occurs with controlled in-
finitives and with predicative constructions.
Consider the sentence Privatmuseum muf3
weichen (Private museum must leave). Its
TiGer graph representation (in TiGer XML)
and its representation as dependency triples are
shown in Figures 1 and 2 respectively.
The matrix predicate of the sentence is the
verb miissen; this is thus assigned the index
0. All other predicates are assigned the indices
corresponding to the terminal nodes they re-
late to, which are 1 for (Privat)Museum and 3
for weichen. The &amp;quot;new&amp;quot; predicate privat, whose
existence is due to the decomposition of com-
pounds in the TiGer DB, is assigned a new
unique index calculated on the basis of the in-
dex of its head and the position of the compound
</bodyText>
<equation confidence="0.9495401">
&lt;s id=&amp;quot;s8595&amp;quot;â€º
&lt;graph root=&amp;quot;s8595_500&amp;quot;â€º
&lt;terminals&gt;
&lt;t id=&amp;quot;s8595_1&amp;quot;
word=&amp;quot;Privatmuseum&amp;quot;
pos=&amp;quot;NN&amp;quot; morph=&amp;quot;Nom.Sg.Neut&amp;quot;/&gt;
&lt;t id=&amp;quot;s8595_2&amp;quot; word=&amp;quot;muE&amp;quot;
pos=&amp;quot;VMFIN&amp;quot; morph=&amp;quot;3.Sg.Pres.Ind&amp;quot;/&gt;
&lt;t id=&amp;quot;s8595_3&amp;quot; word=&amp;quot;weichen&amp;quot;
pos=&amp;quot;VVINF&amp;quot; morph=&amp;quot;--&amp;quot; I&gt;
</equation>
<figure confidence="0.9294985">
&lt;/terminals&gt;
&lt;nonterminals&gt;
&lt;nt id=&amp;quot;s8595_500&amp;quot; cat=&amp;quot;S&amp;quot;â€º
&lt;edge label=&amp;quot;SB&amp;quot; idref=&amp;quot;s8595_1&amp;quot;/&gt;
&lt;edge label=&amp;quot;HD&amp;quot; idref=&amp;quot;s8595_2&amp;quot;/&gt;
&lt;edge label=&amp;quot;0C&amp;quot; idref=&amp;quot;s8595_3&amp;quot;/&gt;
&lt;/nt&gt;
&lt;/nonterminals&gt;
&lt;/graph&gt;
&lt;/s&gt;
</figure>
<figureCaption confidence="0.9866">
Figure 1: TiGer XML representation of TiGer
Corpus sentence #8595
</figureCaption>
<equation confidence="0.623564">
case(Museum-1, nom),
cmpd_form(Museum-1, Privatmuseum),
gend(Museum-1, neut),
mod(Museum-1, privat-1001),
mood(mlissen-0, indicative),
num(Museum-1, sg),
oc_inf(mlissen-0, weichen-3),
pers(Museum-1, 3),
sb(mlissen-0, Museum-1),
sb(weichen-3, Museum-1),
tense(mlissen-0, pres)
</equation>
<figureCaption confidence="0.940419">
Figure 2: Dependency triple representation of
TiGer Corpus sentence #8595
</figureCaption>
<bodyText confidence="0.982757888888889">
non-head within the compound, which turns out
to be 1001 in the present example. The fact
that the subject of the embedded verb weichen
shares its structure with the subject of the top
verb miissen is expressed by the two triples
sb (miissenâ€” 0, Museumâ€” 1) and sb (weichenâ€” 3 ,
Museumâ€” 1).
The above example also demonstrates the
lemmatization applied in the TiGer DB. Verb
forms are lemmatized to the infinitive, nomi-
nal forms to the nominative singular etc. Com-
pounds are split up into their components, of
which the head is used in the predicate name
and the others are mod dependents of this head.
In order to keep track of the original compound
form, the lemma of the compound is encoded as
the value of the feature cmpd form, as can be
seen in Figure 2.
</bodyText>
<subsectionHeader confidence="0.99688">
3.2 Grammatical relations
</subsectionHeader>
<bodyText confidence="0.999925">
The most difficult decisions in creating the
TiGer DB involve choosing the grammatical re-
lations to be encoded. Which dependencies
are needed in the final application differs from
framework to framework, and the names they
are given vary from grammar to grammar. As
a guideline, it has been decided to stick to
the functional annotation in the TiGer Tree-
bank, i.e. the edge labels in the TiGer graphs.
Additional distinctions were introduced where
the TiGer Treebank annotations seemed not to
make all the distinctions current deep parsers of
German make. The most striking example of a
TiGer Treebank edge label which is treated in
a number of different ways by German parsers
is MO, which can be a truly optional modifier
(still labeled as mo in the TiGer DB), but also a
predicative argument (labeled as pd in the TiGer
DB) or a (more or less) obligatory directional
or locative argument (labeled as op dir and
op loc respectively). Finally, there were also
some distinctions in the functional annotation
of the TiGer Treebank which are generally not
made by German parsers, so that some rather
special functional labels have been abandoned in
favor of more general ones. An example of such
a relation is AMS (measure argument/adjunct
of adjective) which is treated as a mo in the
TiGer DB.
The grammatical relations that are encoded
identically in the TiGer Treebank (or in a former
version of it) and in the TiGer DB are:
</bodyText>
<listItem confidence="0.9999646">
â€¢ sb - subjects
â€¢ oa - direct objects in the accusative
â€¢ oa2 - secondary objects in the accusative
â€¢ da - objects in the dative
â€¢ og - objects in the genitive
â€¢ op - prepositional objects
â€¢ sbp - logical subjects of verbs in the passive
â€¢ cj - conjunct of a coordination
â€¢ gl - genitive attribute on the left of its head
noun
â€¢ gr - genitive attribute on the right of its
head noun
â€¢ pgâ€” von-PPs considered as pseudo-genitives
â€¢ rc â€” relative clauses
â€¢ vo â€” vocatives
</listItem>
<bodyText confidence="0.670717">
Grammatical relations that can also be found
in the TiGer Treebank, but whose definition di-
verges from it, are:
</bodyText>
<listItem confidence="0.999385684210526">
â€¢ pd â€” all predicative arguments, not only
those of bleiben, sein and werden.
â€¢ mo â€” optional modifiers; in contrast to MO
in the TiGer Treebank, mo in the TiGer DB
no longer comprises (more or less) oblig-
atory directional and locative arguments;
the definition is enlarged with respect to
the TiGer Treebank in that it now includes
AMSs and certain CCs.
â€¢ appâ€” close appositions, opposed to wide ap-
positions in the TiGer Treebank; the latter
are shifted to mo.
â€¢ cc â€” comparative (and equative) comple-
ments; in contrast to CC in the TiGer Tree-
bank, this no longer comprises wie-PPs that
are not triggered by an equative context;
not being subcategorized, these are treated
as mos in the TiGer DB.
â€¢ rs â€” reported speech, in constructions such
</listItem>
<bodyText confidence="0.917533818181818">
as Technisch sei dies machbar, widersprach
Starzacher den Skeptikern in der Verwal-
tung., where the RS clause is not regularly
subcategorized for by the matrix verb; note
that all other RS constructions of the TiGer
Treebank are reinterpreted as oc fins.
Finally, there are a number of &amp;quot;new&amp;quot; gram-
matical functions in the TiGer DB, which arise
from the more fine-grained distinctions that are
made in the dependency bank with respect to
the TiGer Treebank edge labels.
</bodyText>
<listItem confidence="0.998964333333333">
â€¢ oc fin â€” finite clausal objects (dass I ob-
clauses, indirect questions)
â€¢ oc inf â€” infinite clausal objects
â€¢ op dir â€” directional oblique arguments
â€¢ op loc â€” locative oblique arguments
â€¢ app cl â€” appositive clauses, occurring with
es and pronominal adverbs
â€¢ det â€” articles, demonstrative and interroga-
tive determiners
â€¢ measured â€” measured entity in construc-
tions such as zwei Flaschen Wein
â€¢ mod â€” non-head components of compounds
â€¢ number â€” numbers in specifier position
â€¢ poss â€” possessive specifiers
â€¢ quant â€” quantifying specifiers
</listItem>
<bodyText confidence="0.999658833333333">
In general, determining these grammatical re-
lations is relatively straight-forward. There are
exceptions to this rule, however, such as the dis-
tinction between mos and the different ops, as
well as certain constructions where a given PP
could be analyzed either as a mo or a pd.
</bodyText>
<subsectionHeader confidence="0.995249">
3.3 Atomic features
</subsectionHeader>
<bodyText confidence="0.99997236">
The atomic features included in the TiGer DB
correspond mostly to the morphological infor-
mation encoded in the TiGer Treebank, but
also to information from the part-of-speech tags.
Generally these features further specify the
predicates that relate to the terminal nodes in
the TiGer Treebank where the information is
encoded. An exception to this rule is the per-
son/number agreement information given for fi-
nite verb forms, which ends up in the features
num and pers of the subject of the verb in con-
sideration, as well as agreement information pro-
vided by determiners and inflected adjectives,
which is attached to their head noun. The pur-
pose of this is to avoid the doubling of informa-
tion.
It has been decided to encode the follow-
ing atomic features in the TiGer DB: case,
cmpd form (cf. 3.1), comp form (complemen-
tizer form), coord form (form of coordinating
conjunction), degree, det type (type of deter-
miner), mood, num, pass asp (dynamic vs. sta-
tive passive), pers, precoord form (first part of
composite coordinating conjunction), pron type
(type of pronoun), tense.
</bodyText>
<sectionHeader confidence="0.994431" genericHeader="method">
4 Applications
</sectionHeader>
<bodyText confidence="0.999987518987342">
The TiGer DB is designed as a gold stan-
dard for the dependency-based evaluation of
German parsing systems. Since it uses the
fairly theory-independent dependency struc-
tures (even though they are labelled), we expect
them to be of use for a number of linguistic the-
ories and, which is at least equally important,
to allow cross-framework comparisons. For the
moment, such a gold standard does not exist.
It is thus of interest to parser and grammar de-
velopers belonging to different communities to
have a common set of evaluation sentences for
internal and perhaps even external comparison.
Within both the HPSG and the LFG commu-
nities, tools and data sets for regression testing
are already in common use for English and, to
a lesser extent, for other languages (Oepen and
Carroll, 2000).
Concerning the concrete possibilities of
matching parser output against the TiGer DB
dependency triples, we have considered this task
both for an LFG and an HPSG parser.
Given the resemblance between the TiGer DB
representations and f-structures, the first map-
ping (i.e. from LFG f-structures to dependency
triples) turns out to be straight-forward. It in-
volves some renaming and reorganizing of the
structures, but since this is basically the same
as is used in the final step of the construction of
the TiGer DB (cf. 2.4), we do not expect major
difficulties.
The mapping from HPSG feature structures
to the TiGer DB is less trivial, since the repre-
sentations differ more. Nevertheless, the TiGer
DB is constructed in close collaboration with
the HPSG developers at Saarland University, so
that its usability by the HPSG community is
ensured. Moreover, the mapping from HPSG
feature structures to dependency triples will be
part of the investigations carried out within the
TiGer Project.
Concretely, the mapping from an HPSG anal-
ysis to a dependency structure requires the fol-
lowing steps: (i) the relations between the dif-
ferent semantic predicates in the sentence are
maintained in the dependency structure, and
(ii) the feature information encoded in TiGer
DB is extracted from the HPSG analysis. As
for (ii), the collection of information like case,
mood, tense and so on is straight-forward as it
is directly encoded in the grammar. As for the
different arguments that verbs can take, we ex-
pect, if not a direct mapping between the argu-
ment labels in MRS and the ones in the depen-
dency structure, a mapping with optional rules,
defining the different constellations in which ar-
guments can appear, to be possible.
For the use within the HPSG community, we
hope to be able to use the dependency informa-
tion that is encoded in the semantic representa-
tion of sentences (Minimal Recursion Semantics;
MRS) (Copestake et al., 2001). It is a smaller
structure than the full analysis, and can be used
as a comparison between different HPSG gram-
mars.
Depending on how large a share of the TiGer
Corpus can be annotated with dependency
triples, the TiGer DB can also be used for the
construction of framework-specific training cor-
pora for the probabilization of existing gram-
mars.3 This will be performed by matching the
full analyses of these grammars against the de-
pendency triples and determining the readings
that are compatible with them. Given the lin-
guistic detail of the TiGer DB, it is hoped that
it allows to achieve so-called fully labeled data
(opposed to partly labeled data that can be ob-
tained with the help of less detailed annotation
such as bracketing).
</bodyText>
<sectionHeader confidence="0.999458" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.999874971428571">
The TiGer Dependency Bank is a dependency
bank containing both grammatical relations be-
tween predicates and arguments and a num-
ber of other grammatical features. In this
it is closely related to the PARC 700 Depen-
dency Bank (King et al., 2003). It is produced
semi-automatically on the basis of the TiGer
Treebank annotations, partly cross-validated by
means of a broad-coverage LFG for German and
finally validated by human annotators. The au-
tomation and cross-validation allow to build the
TiGer Dependency Bank in a relatively short
time and, more importantly, they help to ob-
tain a degree of consistency of analysis otherwise
impossible to achieve. Although the process
still necessitates human intervention and vali-
dation, we hope to convert a large part (&gt;2000
sentences) of the TiGer Treebank into a depen-
dency bank by the time of the workshop.
The TiGer DB is mainly intended to be used
for the evaluation of German parsers, both for
regression tests during a specific grammar devel-
opment effort and for parser comparison across
frameworks. In this sense, it opens up new
possibilities in the development of hand-crafted
deep grammars. Moreover, since most statisti-
cal parsing systems for German (cf. Beil et al.
(1999) and Frank (2002), for example) are based
either on the TiGer Treebank or on the closely
related NeGra Treebank, the TiGer DB can di-
rectly be used for a dependency-based evalua-
tion of such parsing systems.
Furthermore, it is hoped that the TiGer DB
will help to establish training corpora for the
probabilization of grammars that to date are
</bodyText>
<footnote confidence="0.683758333333333">
3The difference with the work in the Redwoods
project (HPSG) (Oepen et al., 2002) is that here it is
intended to use the corpus annotations.
</footnote>
<bodyText confidence="0.9965988">
purely symbolic. Concretely, this is planned for
the broad-coverage LFG developed at the Uni-
versity of Stuttgart along the lines of Riezler et
al. (2002) and for the broad-coverage HPSG de-
veloped at Saarland University.
</bodyText>
<sectionHeader confidence="0.980901" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9996373">
Anne Abeille, editor. 2003. Building and using
syntactically annotated corpora. Kluwer, Dor-
drecht.
Franz Beil, Glenn Carroll, Detlef Prescher, Ste-
fan Riezler, and Mats Rooth. 1999. Inside-
outside estimation of a lexicalised PCFG for
German. In Proceedings of the 37th Annual
Meeting of the Association for Computational
Linguistics (ACL &apos;99), College Park, Mary-
land.
Thorsten Brants, Wojciech Skut, and Hans
Uszkoreit. 1999. Syntactic annotation of a
German newspaper corpus. In Proceedings of
the ATALA Treebank Workshop, pages 69-76,
Paris, France.
Sabine Brants, Stefanie Dipper, Peter Eisen-
berg, Silvia Hansen-Schirra, Esther Konig,
Wolfgang Lezius, Christian Rohrer, George
Smith, and Hans Uszkoreit. in press. TIGER:
Linguistic Interpretation of a German Corpus.
Journal of Language and Computation.
John Carroll, Guido Minnen, and Ted Briscoe.
1999. Corpus annotation for parser evalua-
tion. In Proceedings of the EACL Workshop
on Linguistically Interpreted Corpora (LINC
&apos;99), Bergen.
John Carroll, Guido Minnen, and Edward
Briscoe. 2003. Parser evaluation: using a
grammatical relation annotation scheme. In
Abeille (Abeille, 2003), pages 299-316.
Ann Copestake, Alex Lascarides, and Dan
Flickinger. 2001. An algebra for semantic
construction in constraint-based grammars.
In Proceedings of the 39th Annual Meeting of
the Association for Computational Linguistics
(A CL 2001), Toulouse, France.
Stefanie Dipper. 2003. Implementing and
Documenting Large-scale Grammars - Ger-
man LFG. Ph.D. thesis, IMS, University of
Stuttgart. Arbeitspapiere des Instituts {Ur
Maschinelle Sprachverarbeitung (AIMS), Vol-
ume 9, Number 1.
Martin Forst. 2003a. Treebank Conversion -
Creating a German f-structure bank from the
TIGER Corpus. In Proceedings of the LFG03
Conference, Saratoga Springs. CSLI Publica-
tions.
Martin Forst. 2003b. Treebank Conversion -
Establishing a testsuite for a broad-coverage
LFG from the the TIGER Treebank. In Pro-
ceedings of the EACL Workshop on Linguis-
tically Interpreted Corpora (LINC &apos;03), Bu-
dapest.
Anette Frank. 2002. Treebank Conversion.
Converting the NEGRA treebank to an LTAG
grammar. In Proceedings of the Workshop on
Multi-layer Corpus-based Analysis, Iasi.
Tracy Holloway King, Richard Crouch, Ste-
fan Riezler, Mary Dalrymple, and Ron M.
Kaplan. 2003. The PARC 700 Dependency
Bank. In Proceedings of the EACL Workshop
on Linguistically Interpreted Corpora (LINC
&apos;03), Budapest.
John T. Maxwell III and Ronald M. Kaplan.
1993. The interface between phrasal and
functional constraints. Computational Lin-
guistics, 19(4):571 - 589.
Stephan Oepen and John Carroll. 2000. Parser
engineering and performance profiling. Natu-
ral Language Engineering, 6(1):81-97.
Stephan Oepen, Kristina Toutanova, Stuart
Shieber, Chris Manning, Dan Flickinger, and
Thorsten Brants. 2002. The LinG0 Red-
woods Treebank. Motivation and Preliminary
Applications. In Proceedings of 19th Interna-
tional Conference on Computational Linguis-
tics, Coling 2002, Taipei, Taiwan.
Stefan Riezler, Tracy Holloway King, Ronald M.
Kaplan, Richard Crouch, John T. Maxwell
III, and Mark Johnson. 2002. Parsing
the Wall Street Journal using a Lexical-
Functional Grammar and Discriminative Es-
timation Techniques. In Proceedings of the
40th Annual Meeting of the Association for
Computational Linguistics 2002, Philadel-
phia.
Wojciech Skut, Thorsten Brants, Brigitte
Krenn, and Hans Uszkoreit. 1998. A Linguis-
tically Interpreted Corpus of German News-
paper Text. In Proceedings of the Confer-
ence on Language Resources and Evaluation
LREC-98, pages 705-711, Granada, Spain.
Heike Telljohann, Erhard Hinrichs, and San-
dra Kiibler. 2003. Stylebook for the Tubin-
gen Treebank of Written German (TilBa-
D/Z). Technical report, University of Tubin-
gen, Tubingen, Germany.
Wolfgang Wahlster, editor. 2000. Verbmobil:
Foundations of Speech-to-Speech Translation.
Springer, Heidelberg.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.321640">
<title confidence="0.9275075">Towards a dependency-based gold standard for German parsers The TiGer Dependency Bank</title>
<author confidence="0.8661155">Nuria Bertomeu</author>
<author confidence="0.8661155">Berthold Crysmann</author>
<author confidence="0.8661155">Frederik Silvia Hansen-Schirra</author>
<author confidence="0.8661155">Valia Kordoni</author>
<affiliation confidence="0.959314">Linguistics Saarland</affiliation>
<address confidence="0.956789">Postfach 15 11 50, 66041 Saarbriicken, Germany</address>
<email confidence="0.790461">omeuIcrysmannIfouvryIhansenIkordoni}@coli..de</email>
<note confidence="0.7281575">tInstitute for Natural Language Processing, University of Azenbergstr. 12, 70174 Stuttgart,</note>
<abstract confidence="0.991944722222222">In this paper we discuss the construction, features and intended uses of the TiGer DB. The TiGer DB is a dependency bank derived from the TiGer Treebank containing predicateargument relations and several grammatical features which can be considered as semantically meaningful. It is produced semi-automatically by the conversion of the TiGer treebank into an LFG f-structure bank, which then in turn is converted into the TiGer DB. This allows for a relatively rapid construction. The grammatical relations and features encoded in the TiGer DB are chosen in order to keep the mapping from output, e.g. or feature structures, to dependency triples simple. Hence, the TiGer DB can be used as a gold standard for the evaluation of German parsers.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>Building and using syntactically annotated corpora.</title>
<date>2003</date>
<editor>Anne Abeille, editor.</editor>
<publisher>Kluwer,</publisher>
<location>Dordrecht.</location>
<marker>2003</marker>
<rawString>Anne Abeille, editor. 2003. Building and using syntactically annotated corpora. Kluwer, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Franz Beil</author>
<author>Glenn Carroll</author>
<author>Detlef Prescher</author>
<author>Stefan Riezler</author>
<author>Mats Rooth</author>
</authors>
<title>Insideoutside estimation of a lexicalised PCFG for German.</title>
<date>1999</date>
<booktitle>In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics (ACL &apos;99),</booktitle>
<location>College Park, Maryland.</location>
<contexts>
<context position="24432" citStr="Beil et al. (1999)" startWordPosition="4012" endWordPosition="4015">f analysis otherwise impossible to achieve. Although the process still necessitates human intervention and validation, we hope to convert a large part (&gt;2000 sentences) of the TiGer Treebank into a dependency bank by the time of the workshop. The TiGer DB is mainly intended to be used for the evaluation of German parsers, both for regression tests during a specific grammar development effort and for parser comparison across frameworks. In this sense, it opens up new possibilities in the development of hand-crafted deep grammars. Moreover, since most statistical parsing systems for German (cf. Beil et al. (1999) and Frank (2002), for example) are based either on the TiGer Treebank or on the closely related NeGra Treebank, the TiGer DB can directly be used for a dependency-based evaluation of such parsing systems. Furthermore, it is hoped that the TiGer DB will help to establish training corpora for the probabilization of grammars that to date are 3The difference with the work in the Redwoods project (HPSG) (Oepen et al., 2002) is that here it is intended to use the corpus annotations. purely symbolic. Concretely, this is planned for the broad-coverage LFG developed at the University of Stuttgart alon</context>
</contexts>
<marker>Beil, Carroll, Prescher, Riezler, Rooth, 1999</marker>
<rawString>Franz Beil, Glenn Carroll, Detlef Prescher, Stefan Riezler, and Mats Rooth. 1999. Insideoutside estimation of a lexicalised PCFG for German. In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics (ACL &apos;99), College Park, Maryland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thorsten Brants</author>
<author>Wojciech Skut</author>
<author>Hans Uszkoreit</author>
</authors>
<title>Syntactic annotation of a German newspaper corpus.</title>
<date>1999</date>
<booktitle>In Proceedings of the ATALA Treebank Workshop,</booktitle>
<pages>69--76</pages>
<location>Paris, France.</location>
<contexts>
<context position="3469" citStr="Brants et al., 1999" startWordPosition="550" endWordPosition="553">parsers obtain. The functional annotation in the TiGer graphs is more suitable for the evaluation and comparison of parsers across theoretical frameworks, but (iii) it is intimately tied to the constituency annotation, including edge labels such as ADC&apos; (multitoken adjective component), which only exist due to the lemmatization decisions mentioned above, and (iv) it does not encode all information and distinctions that (deep) parsers are supposed to obtain. Similar problems arise with other syntactically annotated corpora of German text and speech, such as the Negra Corpus (Skut et al., 1998; Brants et al., 1999), the Verbmobil Corpus (Wahlster, 2000) and the Tiibingen Treebank of Written German (Telljohann et al., 2003), &apos;It is planned to distribute the TiGer DB alongside the TiGer Treebank, which is freely available for research and evaluation, and to include detailed documentation in the release. For more information, please refer to http://www.ims.unistuttgart.de/projekte/TIGER/TIGERCorpus/. 2Upper case labels will be used for the functional annotation encoded in the TiGer Treebank and lower case labels for the dependencies encoded in the TiGer DB. since they all encode constituency and dependency</context>
</contexts>
<marker>Brants, Skut, Uszkoreit, 1999</marker>
<rawString>Thorsten Brants, Wojciech Skut, and Hans Uszkoreit. 1999. Syntactic annotation of a German newspaper corpus. In Proceedings of the ATALA Treebank Workshop, pages 69-76, Paris, France.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Sabine Brants</author>
<author>Stefanie Dipper</author>
<author>Peter Eisenberg</author>
<author>Silvia Hansen-Schirra</author>
<author>Esther Konig</author>
<author>Wolfgang Lezius</author>
<author>Christian Rohrer</author>
<author>George Smith</author>
</authors>
<title>and Hans Uszkoreit. in press. TIGER: Linguistic Interpretation of a German Corpus.</title>
<journal>Journal of Language and Computation.</journal>
<marker>Brants, Dipper, Eisenberg, Hansen-Schirra, Konig, Lezius, Rohrer, Smith, </marker>
<rawString>Sabine Brants, Stefanie Dipper, Peter Eisenberg, Silvia Hansen-Schirra, Esther Konig, Wolfgang Lezius, Christian Rohrer, George Smith, and Hans Uszkoreit. in press. TIGER: Linguistic Interpretation of a German Corpus. Journal of Language and Computation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Carroll</author>
<author>Guido Minnen</author>
<author>Ted Briscoe</author>
</authors>
<title>Corpus annotation for parser evaluation.</title>
<date>1999</date>
<booktitle>In Proceedings of the EACL Workshop on Linguistically Interpreted Corpora (LINC &apos;99),</booktitle>
<location>Bergen.</location>
<contexts>
<context position="4400" citStr="Carroll et al., 1999" startWordPosition="689" endWordPosition="693">on, please refer to http://www.ims.unistuttgart.de/projekte/TIGER/TIGERCorpus/. 2Upper case labels will be used for the functional annotation encoded in the TiGer Treebank and lower case labels for the dependencies encoded in the TiGer DB. since they all encode constituency and dependency information in one structure, the latter being biased by the former. Grammar developers, however, are interested in pure dependency representations, which allow for a much more meaningful evaluation than the bracketing of constituents, and are therefore clearly moving away from treebanks to dependency banks (Carroll et al., 1999; Carroll et al., 2003). In this paper we present the strategy that has been adopted in the TiGer project for semiautomatically obtaining a dependency bank that will be of use for a wide variety of applications, in particular parser evaluation for various formalisms. 2 Constructing the TiGer DB In this section, the method for producing the TiGer DB is presented. It is a combination of automatic and manual techniques in order to achieve the most accurate and consistent results in a reasonable amount of time. The basic process is as follows: 1. Convert the TiGer graph into an f-structure chart (</context>
</contexts>
<marker>Carroll, Minnen, Briscoe, 1999</marker>
<rawString>John Carroll, Guido Minnen, and Ted Briscoe. 1999. Corpus annotation for parser evaluation. In Proceedings of the EACL Workshop on Linguistically Interpreted Corpora (LINC &apos;99), Bergen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Carroll</author>
<author>Guido Minnen</author>
<author>Edward Briscoe</author>
</authors>
<title>Parser evaluation: using a grammatical relation annotation scheme. In Abeille (Abeille,</title>
<date>2003</date>
<pages>299--316</pages>
<contexts>
<context position="4423" citStr="Carroll et al., 2003" startWordPosition="694" endWordPosition="697">tp://www.ims.unistuttgart.de/projekte/TIGER/TIGERCorpus/. 2Upper case labels will be used for the functional annotation encoded in the TiGer Treebank and lower case labels for the dependencies encoded in the TiGer DB. since they all encode constituency and dependency information in one structure, the latter being biased by the former. Grammar developers, however, are interested in pure dependency representations, which allow for a much more meaningful evaluation than the bracketing of constituents, and are therefore clearly moving away from treebanks to dependency banks (Carroll et al., 1999; Carroll et al., 2003). In this paper we present the strategy that has been adopted in the TiGer project for semiautomatically obtaining a dependency bank that will be of use for a wide variety of applications, in particular parser evaluation for various formalisms. 2 Constructing the TiGer DB In this section, the method for producing the TiGer DB is presented. It is a combination of automatic and manual techniques in order to achieve the most accurate and consistent results in a reasonable amount of time. The basic process is as follows: 1. Convert the TiGer graph into an f-structure chart (packed representation o</context>
</contexts>
<marker>Carroll, Minnen, Briscoe, 2003</marker>
<rawString>John Carroll, Guido Minnen, and Edward Briscoe. 2003. Parser evaluation: using a grammatical relation annotation scheme. In Abeille (Abeille, 2003), pages 299-316.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ann Copestake</author>
<author>Alex Lascarides</author>
<author>Dan Flickinger</author>
</authors>
<title>An algebra for semantic construction in constraint-based grammars.</title>
<date>2001</date>
<booktitle>In Proceedings of the 39th Annual Meeting of the Association for Computational Linguistics (A CL</booktitle>
<location>Toulouse, France.</location>
<contexts>
<context position="22454" citStr="Copestake et al., 2001" startWordPosition="3684" endWordPosition="3687"> (ii), the collection of information like case, mood, tense and so on is straight-forward as it is directly encoded in the grammar. As for the different arguments that verbs can take, we expect, if not a direct mapping between the argument labels in MRS and the ones in the dependency structure, a mapping with optional rules, defining the different constellations in which arguments can appear, to be possible. For the use within the HPSG community, we hope to be able to use the dependency information that is encoded in the semantic representation of sentences (Minimal Recursion Semantics; MRS) (Copestake et al., 2001). It is a smaller structure than the full analysis, and can be used as a comparison between different HPSG grammars. Depending on how large a share of the TiGer Corpus can be annotated with dependency triples, the TiGer DB can also be used for the construction of framework-specific training corpora for the probabilization of existing grammars.3 This will be performed by matching the full analyses of these grammars against the dependency triples and determining the readings that are compatible with them. Given the linguistic detail of the TiGer DB, it is hoped that it allows to achieve so-calle</context>
</contexts>
<marker>Copestake, Lascarides, Flickinger, 2001</marker>
<rawString>Ann Copestake, Alex Lascarides, and Dan Flickinger. 2001. An algebra for semantic construction in constraint-based grammars. In Proceedings of the 39th Annual Meeting of the Association for Computational Linguistics (A CL 2001), Toulouse, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stefanie Dipper</author>
</authors>
<title>Implementing and Documenting Large-scale Grammars - German LFG.</title>
<date>2003</date>
<journal>Arbeitspapiere des Instituts {Ur Maschinelle Sprachverarbeitung (AIMS), Volume 9, Number</journal>
<tech>Ph.D. thesis,</tech>
<volume>1</volume>
<institution>IMS, University of Stuttgart.</institution>
<contexts>
<context position="7580" citStr="Dipper, 2003" startWordPosition="1221" endWordPosition="1222">to the NP eine Entschadigung. Current German parsers, however, would attach this PP to the verb, since the attempt of attaching it to the NP would result in a massive increase of ambiguity. For a gold standard for German parsers, we consider it reasonable to encode the latter attachment rather than one that no parser would be able to achieve. 2.2 Automatic disambiguation of TiGer-derived f-structure charts As a first step towards disambiguating the fstructure charts resulting from the fully automatic treebank conversion, these are matched against the output of a broad-coverage LFG for German (Dipper, 2003) and the compatible reading(s) are saved. This is done with the help of a Perl script that has been specifically developed for this purpose. Of course, this mapping can only be performed for sentences that are assigned a full parse by the broad-coverage LFG, and although the information both in the TiGer graphs and in the LFG parses is relatively detailed it can be impossible to fully disambiguate. Typical remaining ambiguities are due to the decomposition of compounds and to person and number ambiguities of possessive determiners and pronouns, these informations not being included in the TiGe</context>
</contexts>
<marker>Dipper, 2003</marker>
<rawString>Stefanie Dipper. 2003. Implementing and Documenting Large-scale Grammars - German LFG. Ph.D. thesis, IMS, University of Stuttgart. Arbeitspapiere des Instituts {Ur Maschinelle Sprachverarbeitung (AIMS), Volume 9, Number 1.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Forst</author>
</authors>
<title>Treebank Conversion -Creating a German f-structure bank from the TIGER Corpus.</title>
<date>2003</date>
<booktitle>In Proceedings of the LFG03 Conference,</booktitle>
<publisher>CSLI Publications.</publisher>
<location>Saratoga Springs.</location>
<contexts>
<context position="5689" citStr="Forst (2003" startWordPosition="899" endWordPosition="900">f-structure chart against the output of a broad-coverage LFG for German and bank the compatible reading(s). 3. For all sentences for which there are either several or no compatible readings, select the correct/best analysis manually. 4. Fully automatically convert the selected fstructure into dependency triples. 5. Manually check/correct each structure using the pretty-printing and validation tools that are distributed with the PARC 700 Dependency Bank. 2.1 Automatic derivation of f-structure charts from the TiGer Treebank The conversion of TiGer graphs into f-structure charts is described in Forst (2003a) and Forst (2003b). It takes the TiGer graphs encoded in TiGer XML as input and produces f-structure charts, i.e. packed representations of one or several f-structures. The ambiguity in the mapping from TiGer graphs to f-structures is due to information lacking in the TiGer Treebank, such as information concerning the decomposition of compounds, the nature of phrases labeled as MOs (modifiers), the subjects of infinite verb forms etc. In the conversion process it can be dealt with by means of optional rules, but for its use as a gold standard the output of the conversion has to be disambigua</context>
</contexts>
<marker>Forst, 2003</marker>
<rawString>Martin Forst. 2003a. Treebank Conversion -Creating a German f-structure bank from the TIGER Corpus. In Proceedings of the LFG03 Conference, Saratoga Springs. CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Forst</author>
</authors>
<title>Treebank Conversion -Establishing a testsuite for a broad-coverage LFG from the the TIGER Treebank.</title>
<date>2003</date>
<booktitle>In Proceedings of the EACL Workshop on Linguistically Interpreted Corpora (LINC &apos;03),</booktitle>
<location>Budapest.</location>
<contexts>
<context position="5689" citStr="Forst (2003" startWordPosition="899" endWordPosition="900">f-structure chart against the output of a broad-coverage LFG for German and bank the compatible reading(s). 3. For all sentences for which there are either several or no compatible readings, select the correct/best analysis manually. 4. Fully automatically convert the selected fstructure into dependency triples. 5. Manually check/correct each structure using the pretty-printing and validation tools that are distributed with the PARC 700 Dependency Bank. 2.1 Automatic derivation of f-structure charts from the TiGer Treebank The conversion of TiGer graphs into f-structure charts is described in Forst (2003a) and Forst (2003b). It takes the TiGer graphs encoded in TiGer XML as input and produces f-structure charts, i.e. packed representations of one or several f-structures. The ambiguity in the mapping from TiGer graphs to f-structures is due to information lacking in the TiGer Treebank, such as information concerning the decomposition of compounds, the nature of phrases labeled as MOs (modifiers), the subjects of infinite verb forms etc. In the conversion process it can be dealt with by means of optional rules, but for its use as a gold standard the output of the conversion has to be disambigua</context>
</contexts>
<marker>Forst, 2003</marker>
<rawString>Martin Forst. 2003b. Treebank Conversion -Establishing a testsuite for a broad-coverage LFG from the the TIGER Treebank. In Proceedings of the EACL Workshop on Linguistically Interpreted Corpora (LINC &apos;03), Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anette Frank</author>
</authors>
<title>Treebank Conversion. Converting the NEGRA treebank to an LTAG grammar.</title>
<date>2002</date>
<booktitle>In Proceedings of the Workshop on Multi-layer Corpus-based Analysis, Iasi.</booktitle>
<contexts>
<context position="24449" citStr="Frank (2002)" startWordPosition="4017" endWordPosition="4018">possible to achieve. Although the process still necessitates human intervention and validation, we hope to convert a large part (&gt;2000 sentences) of the TiGer Treebank into a dependency bank by the time of the workshop. The TiGer DB is mainly intended to be used for the evaluation of German parsers, both for regression tests during a specific grammar development effort and for parser comparison across frameworks. In this sense, it opens up new possibilities in the development of hand-crafted deep grammars. Moreover, since most statistical parsing systems for German (cf. Beil et al. (1999) and Frank (2002), for example) are based either on the TiGer Treebank or on the closely related NeGra Treebank, the TiGer DB can directly be used for a dependency-based evaluation of such parsing systems. Furthermore, it is hoped that the TiGer DB will help to establish training corpora for the probabilization of grammars that to date are 3The difference with the work in the Redwoods project (HPSG) (Oepen et al., 2002) is that here it is intended to use the corpus annotations. purely symbolic. Concretely, this is planned for the broad-coverage LFG developed at the University of Stuttgart along the lines of Ri</context>
</contexts>
<marker>Frank, 2002</marker>
<rawString>Anette Frank. 2002. Treebank Conversion. Converting the NEGRA treebank to an LTAG grammar. In Proceedings of the Workshop on Multi-layer Corpus-based Analysis, Iasi.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tracy Holloway King</author>
<author>Richard Crouch</author>
<author>Stefan Riezler</author>
<author>Mary Dalrymple</author>
<author>Ron M Kaplan</author>
</authors>
<title>The PARC 700 Dependency Bank.</title>
<date>2003</date>
<booktitle>In Proceedings of the EACL Workshop on Linguistically Interpreted Corpora (LINC &apos;03),</booktitle>
<location>Budapest.</location>
<contexts>
<context position="1810" citStr="King et al., 2003" startWordPosition="273" endWordPosition="276">les simple. Hence, the TiGer DB can be used as a gold standard for the evaluation of German parsers. 1 Introduction The TiGer Dependency Bank (henceforth TiGer DB) consists of a part of the TiGer Treebank, currently about 40,000 syntactically annotated sentences of German newspaper texts (Brants et al., in press). It is annotated with so-called dependency triples, i.e. a functor representing a grammatical relation or feature and two arguments representing the head and the value of this feature respectively. The format of these dependency triples is the same as in the PARC 700 Dependency Bank (King et al., 2003), which makes it possible to use the tools for displaying and pruning structures that are available together with this English dependency bank. The grammatical relations encoded in the TiGer DB are to a fair extent identical to the edge labels used in the TiGer Treebank; in order to make it more suitable as a basis for the evaluation of German parsers, additional distinctions have to be made in the set of grammatical relations, which leads to an enlarged set of features compared to the TiGer Treebank.&apos; The TiGer DB is created because the graphs of the TiGer Treebank themselves are difficult to</context>
<context position="10106" citStr="King et al., 2003" startWordPosition="1633" endWordPosition="1636">ernatives with the information differing among them are visualized. This allows human annotators to choose and save the correct reading in a relatively comfortable way. When none of the readings can be considered correct, the best analysis is selected and the annotator puts the sentence number on a list of structures to be reconsidered in the validation step. 2.4 Conversion into dependency triples and validation The conversion from f-structures to dependency triples is fully automatic and unambiguous. It is carried out in basically the same way as it was done for the PARC 700 Dependency Bank (King et al., 2003). It mainly involves a certain amount of &amp;quot;flattening&amp;quot;, i.e. articulate fstructures without a PRED have to be restructured, but this can be done without any loss of information. In addition to the flattening, a certain amount of renaming and reorganizing has to be carried out in order to make the structures meet the annotation principles outlined in Section 3. In a final (and very important) step, each TiGer DB structure is manually evaluated by two people. If the structure is not correct, changes are made in the text-based representation of the structure. These changes are expected to be minor</context>
<context position="23448" citStr="King et al., 2003" startWordPosition="3854" endWordPosition="3857">ching the full analyses of these grammars against the dependency triples and determining the readings that are compatible with them. Given the linguistic detail of the TiGer DB, it is hoped that it allows to achieve so-called fully labeled data (opposed to partly labeled data that can be obtained with the help of less detailed annotation such as bracketing). 5 Conclusions The TiGer Dependency Bank is a dependency bank containing both grammatical relations between predicates and arguments and a number of other grammatical features. In this it is closely related to the PARC 700 Dependency Bank (King et al., 2003). It is produced semi-automatically on the basis of the TiGer Treebank annotations, partly cross-validated by means of a broad-coverage LFG for German and finally validated by human annotators. The automation and cross-validation allow to build the TiGer Dependency Bank in a relatively short time and, more importantly, they help to obtain a degree of consistency of analysis otherwise impossible to achieve. Although the process still necessitates human intervention and validation, we hope to convert a large part (&gt;2000 sentences) of the TiGer Treebank into a dependency bank by the time of the w</context>
</contexts>
<marker>King, Crouch, Riezler, Dalrymple, Kaplan, 2003</marker>
<rawString>Tracy Holloway King, Richard Crouch, Stefan Riezler, Mary Dalrymple, and Ron M. Kaplan. 2003. The PARC 700 Dependency Bank. In Proceedings of the EACL Workshop on Linguistically Interpreted Corpora (LINC &apos;03), Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John T Maxwell</author>
<author>Ronald M Kaplan</author>
</authors>
<title>The interface between phrasal and functional constraints.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>4</issue>
<pages>589</pages>
<marker>Maxwell, Kaplan, 1993</marker>
<rawString>John T. Maxwell III and Ronald M. Kaplan. 1993. The interface between phrasal and functional constraints. Computational Linguistics, 19(4):571 - 589.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephan Oepen</author>
<author>John Carroll</author>
</authors>
<title>Parser engineering and performance profiling.</title>
<date>2000</date>
<journal>Natural Language Engineering,</journal>
<pages>6--1</pages>
<contexts>
<context position="20520" citStr="Oepen and Carroll, 2000" startWordPosition="3365" endWordPosition="3368">tructures (even though they are labelled), we expect them to be of use for a number of linguistic theories and, which is at least equally important, to allow cross-framework comparisons. For the moment, such a gold standard does not exist. It is thus of interest to parser and grammar developers belonging to different communities to have a common set of evaluation sentences for internal and perhaps even external comparison. Within both the HPSG and the LFG communities, tools and data sets for regression testing are already in common use for English and, to a lesser extent, for other languages (Oepen and Carroll, 2000). Concerning the concrete possibilities of matching parser output against the TiGer DB dependency triples, we have considered this task both for an LFG and an HPSG parser. Given the resemblance between the TiGer DB representations and f-structures, the first mapping (i.e. from LFG f-structures to dependency triples) turns out to be straight-forward. It involves some renaming and reorganizing of the structures, but since this is basically the same as is used in the final step of the construction of the TiGer DB (cf. 2.4), we do not expect major difficulties. The mapping from HPSG feature struct</context>
</contexts>
<marker>Oepen, Carroll, 2000</marker>
<rawString>Stephan Oepen and John Carroll. 2000. Parser engineering and performance profiling. Natural Language Engineering, 6(1):81-97.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephan Oepen</author>
<author>Kristina Toutanova</author>
<author>Stuart Shieber</author>
<author>Chris Manning</author>
<author>Dan Flickinger</author>
<author>Thorsten Brants</author>
</authors>
<title>The LinG0 Redwoods Treebank. Motivation and Preliminary Applications.</title>
<date>2002</date>
<booktitle>In Proceedings of 19th International Conference on Computational Linguistics, Coling</booktitle>
<location>Taipei, Taiwan.</location>
<marker>Oepen, Toutanova, Shieber, Manning, Flickinger, Brants, 2002</marker>
<rawString>Stephan Oepen, Kristina Toutanova, Stuart Shieber, Chris Manning, Dan Flickinger, and Thorsten Brants. 2002. The LinG0 Redwoods Treebank. Motivation and Preliminary Applications. In Proceedings of 19th International Conference on Computational Linguistics, Coling 2002, Taipei, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stefan Riezler</author>
<author>Tracy Holloway King</author>
<author>Ronald M Kaplan</author>
<author>Richard Crouch</author>
<author>John T Maxwell</author>
<author>Mark Johnson</author>
</authors>
<title>Parsing the Wall Street Journal using a LexicalFunctional Grammar and Discriminative Estimation Techniques.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics 2002,</booktitle>
<location>Philadelphia.</location>
<marker>Riezler, King, Kaplan, Crouch, Maxwell, Johnson, 2002</marker>
<rawString>Stefan Riezler, Tracy Holloway King, Ronald M. Kaplan, Richard Crouch, John T. Maxwell III, and Mark Johnson. 2002. Parsing the Wall Street Journal using a LexicalFunctional Grammar and Discriminative Estimation Techniques. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics 2002, Philadelphia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wojciech Skut</author>
<author>Thorsten Brants</author>
<author>Brigitte Krenn</author>
<author>Hans Uszkoreit</author>
</authors>
<title>A Linguistically Interpreted Corpus of German Newspaper Text.</title>
<date>1998</date>
<booktitle>In Proceedings of the Conference on Language Resources and Evaluation LREC-98,</booktitle>
<pages>705--711</pages>
<location>Granada,</location>
<contexts>
<context position="3447" citStr="Skut et al., 1998" startWordPosition="546" endWordPosition="549"> the analyses most parsers obtain. The functional annotation in the TiGer graphs is more suitable for the evaluation and comparison of parsers across theoretical frameworks, but (iii) it is intimately tied to the constituency annotation, including edge labels such as ADC&apos; (multitoken adjective component), which only exist due to the lemmatization decisions mentioned above, and (iv) it does not encode all information and distinctions that (deep) parsers are supposed to obtain. Similar problems arise with other syntactically annotated corpora of German text and speech, such as the Negra Corpus (Skut et al., 1998; Brants et al., 1999), the Verbmobil Corpus (Wahlster, 2000) and the Tiibingen Treebank of Written German (Telljohann et al., 2003), &apos;It is planned to distribute the TiGer DB alongside the TiGer Treebank, which is freely available for research and evaluation, and to include detailed documentation in the release. For more information, please refer to http://www.ims.unistuttgart.de/projekte/TIGER/TIGERCorpus/. 2Upper case labels will be used for the functional annotation encoded in the TiGer Treebank and lower case labels for the dependencies encoded in the TiGer DB. since they all encode const</context>
</contexts>
<marker>Skut, Brants, Krenn, Uszkoreit, 1998</marker>
<rawString>Wojciech Skut, Thorsten Brants, Brigitte Krenn, and Hans Uszkoreit. 1998. A Linguistically Interpreted Corpus of German Newspaper Text. In Proceedings of the Conference on Language Resources and Evaluation LREC-98, pages 705-711, Granada, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Heike Telljohann</author>
<author>Erhard Hinrichs</author>
<author>Sandra Kiibler</author>
</authors>
<title>Stylebook for the Tubingen Treebank of Written German (TilBaD/Z).</title>
<date>2003</date>
<tech>Technical report,</tech>
<institution>University of Tubingen,</institution>
<location>Tubingen, Germany.</location>
<contexts>
<context position="3579" citStr="Telljohann et al., 2003" startWordPosition="566" endWordPosition="569">arison of parsers across theoretical frameworks, but (iii) it is intimately tied to the constituency annotation, including edge labels such as ADC&apos; (multitoken adjective component), which only exist due to the lemmatization decisions mentioned above, and (iv) it does not encode all information and distinctions that (deep) parsers are supposed to obtain. Similar problems arise with other syntactically annotated corpora of German text and speech, such as the Negra Corpus (Skut et al., 1998; Brants et al., 1999), the Verbmobil Corpus (Wahlster, 2000) and the Tiibingen Treebank of Written German (Telljohann et al., 2003), &apos;It is planned to distribute the TiGer DB alongside the TiGer Treebank, which is freely available for research and evaluation, and to include detailed documentation in the release. For more information, please refer to http://www.ims.unistuttgart.de/projekte/TIGER/TIGERCorpus/. 2Upper case labels will be used for the functional annotation encoded in the TiGer Treebank and lower case labels for the dependencies encoded in the TiGer DB. since they all encode constituency and dependency information in one structure, the latter being biased by the former. Grammar developers, however, are interes</context>
</contexts>
<marker>Telljohann, Hinrichs, Kiibler, 2003</marker>
<rawString>Heike Telljohann, Erhard Hinrichs, and Sandra Kiibler. 2003. Stylebook for the Tubingen Treebank of Written German (TilBaD/Z). Technical report, University of Tubingen, Tubingen, Germany.</rawString>
</citation>
<citation valid="true">
<title>Verbmobil: Foundations of Speech-to-Speech Translation.</title>
<date>2000</date>
<editor>Wolfgang Wahlster, editor.</editor>
<publisher>Springer,</publisher>
<location>Heidelberg.</location>
<marker>2000</marker>
<rawString>Wolfgang Wahlster, editor. 2000. Verbmobil: Foundations of Speech-to-Speech Translation. Springer, Heidelberg.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>