<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.175448">
<title confidence="0.973152">
Intelligent Linux Information Access by Data Mining: the ILIAD Project
</title>
<author confidence="0.7543275">
Timothy Baldwin,♠ David Martinez,♥ Richard B. Penman,♠ Su Nam Kim,♠
Marco Lui,♠ Li Wang♠ and Andrew MacKinlay♠
</author>
<note confidence="0.6411975">
� Dept of Computer Science and Software Engineering, University of Melbourne, Australia
Q NICTA Victoria Research Laboratory
</note>
<sectionHeader confidence="0.974099" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9994906">
We propose an alternative to conventional in-
formation retrieval over Linux forum data,
based on thread-, post- and user-level analysis,
interfaced with an information retrieval engine
via reranking.
</bodyText>
<sectionHeader confidence="0.999265" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99995525">
Due to the sheer scale of web data, simple keyword
matching is an effective means of information ac-
cess for many informational web queries. There
still remain significant clusters of information access
needs, however, where keyword matching is less
successful. One such instance is technical web fo-
rums and mailing lists (collectively termed “forums”
for the purposes of this paper): technical forums
are a rich source of information when troubleshoot-
ing, and it is often possible to resolve technical
queries/problems via web-archived data. The search
facilities provided by forums and web search en-
gines tend to be over-simplistic, however, and there
is a desperate need for more sophisticated search (Xi
et al., 2004; Seo et al., 2009), including: favour-
ing threads which have led to a successful resolu-
tion; reflecting the degree of clarity/reproducibility
of the proposed solution in a given thread; repre-
senting threads via their threaded rather than sim-
ple chronological structure; the ability to highlight
key aspects of the thread, in terms of the problem
description and solution which led to a successful
resolution; and ideally, the ability to represent the
problem and solution in normalised form via infor-
mation extraction.
This paper provides a brief outline of an attempt
to achieve these and other goals in the context of
Linux web user forum data, in the form of the IL-
IAD (Intelligent Linux Information Access by Data
Mining) project. Linux users and developers rely
particularly heavily on web user forums and mail-
ing lists, due to the nature of the community, which
is highly decentralised — with massive proliferation
of packages and distributions — and notoriously bad
at maintaining up-to-date documentation at a level
suitable for newbie and even intermediate users.
</bodyText>
<sectionHeader confidence="0.8994" genericHeader="introduction">
2 Project Outline
</sectionHeader>
<bodyText confidence="0.9999895">
Our proposed solution is as follows: (1) crawl data
from a variety of web user forums; (2) analyse each
thread, to identify named entities and generate meta-
data; (3) analyse post-level linkages; (4) predict
user-level features which are expected to impinge on
the quality of search results; and finally (5) draw to-
gether the features from (1) to (4) to enhance the
quality of a traditional ranked IR approach. We
briefly review each step below. Given space limi-
tations, we focus on outlining our interpretation of
the task in this paper. For further details and results,
the reader is referred to the key papers cited herein.
</bodyText>
<subsectionHeader confidence="0.989772">
2.1 Crawling
</subsectionHeader>
<bodyText confidence="0.999799875">
The first step is to crawl data from a variety of fo-
rums and mailing lists, for which we have developed
open-source scraping software in the form of SITE-
SCRAPER.1 SITESCRAPER is designed such that the
user simply copies relevant content from a browser-
rendered version of a given set of pages, which it
interprets as a structured record, and translates into
a generalised XPATH query.
</bodyText>
<subsectionHeader confidence="0.998747">
2.2 Thread-level analysis
</subsectionHeader>
<bodyText confidence="0.999907">
Next, we perform named entity recognition (NER)
over each thread to identify entities such as package
and distribution names, version numbers and snip-
pets of code; as part of this, we perform version
</bodyText>
<footnote confidence="0.992101">
1http://sitescraper.googlecode.com/
</footnote>
<page confidence="0.923965">
15
</page>
<note confidence="0.879117">
Proceedings of the NAACL HLT 2010 Workshop on Computational Linguistics in a World of Social Media, pages 15–16,
Los Angeles, California, June 2010. c�2010 Association for Computational Linguistics
</note>
<bodyText confidence="0.995392176470588">
anchoring, in identifying what entity each version
number relates to.
To generate thread-level metadata, we classify
each thread for the following three features, based
on an ordinal scale of 1–5 (Baldwin et al., 2007):
Complete: Is the problem description complete?
Solved: Is a solution provided in the thread?
Task Oriented: Is the thread about a specific
problem?
We additionally automatically classify the nature
of the thread content, in terms of, e.g., whether it
contains documentation or installation details, or re-
lates to software, hardware or programming.
Our experiments on thread-level classification are
based on a set of 250 annotated threads from Lin-
uxQuestions and other forums, as well as a dataset
from CNET.
</bodyText>
<subsectionHeader confidence="0.999118">
2.3 Post-level analysis
</subsectionHeader>
<bodyText confidence="0.999754235294118">
We automatically analyse the post-to-post discourse
structure of each thread, in terms of which (preced-
ing) post(s) each post relates to, and how, building
off the work of Ros´e et al. (1995) and Wolf and Gib-
son (2005). For example, a given post may refute
the solution proposed in an earlier post, and also
propose a novel solution in response to the initiat-
ing post.
Separately, we are developing techniques for
identifying whether a new post to a given forum
is sufficiently similar to other (ideally resolved)
threads that the author should be prompted to first
check the existing threads for redundancy before a
new thread is initiated.
Our experiments on post-level analysis are, once
again, based on data from LinuxQuestions and
CNET.
</bodyText>
<subsectionHeader confidence="0.999738">
2.4 User-level analysis
</subsectionHeader>
<bodyText confidence="0.99995275">
We are also experimenting with profiling users vari-
ously, based on a 5-point ordinal scale across a range
of user characteristics. Our experiments are based
on data from LinuxQuestions (Lui, 2009).
</bodyText>
<subsectionHeader confidence="0.982509">
2.5 IR ranking
</subsectionHeader>
<bodyText confidence="0.99971175">
The various features are interfaced with an ad hoc
information retrieval (IR) system via a learning-to-
rank approach (Cao et al., 2007). In order to carry
out IR evaluation, we have developed a set of queries
and relevance judgements over a large-scale set of
forum data.
Our experiments to date have been based on com-
bination over three IR engines (LUCENE, ZETTAIR
and LEMUR), and involved thread-level metadata
only, but we have achieved encouraging results, sug-
gesting that thread-level metadata can enhance IR
effectiveness.
</bodyText>
<sectionHeader confidence="0.999496" genericHeader="conclusions">
3 Conclusions
</sectionHeader>
<bodyText confidence="0.999946857142857">
This paper provides an outline of the ILIAD project,
focusing on the tasks of crawling, thread-level anal-
ysis, post-level analysis, user-level analysis and IR
reranking. We have designed a series of class sets
for the component tasks, and carried out experimen-
tation over a range of data sources, achieving en-
couraging results.
</bodyText>
<sectionHeader confidence="0.996273" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9959684">
NICTA is funded by the Australian Government as rep-
resented by the Department of Broadband, Communica-
tions and the Digital Economy and the Australian Re-
search Council through the ICT Centre of Excellence pro-
gram.
</bodyText>
<sectionHeader confidence="0.998515" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999050904761905">
T Baldwin, D Martinez, and RB Penman. 2007. Auto-
matic thread classification for Linux user forum infor-
mation access. In Proc ofADCS 2007.
Z Cao, T Qin, TY Liu, MF Tsai, and H Li. 2007. Learn-
ing to rank: from pairwise approach to listwise ap-
proach. In Proc of ICML 2007.
M Lui. 2009. Impact of user characteristics on online fo-
rum classification tasks. Honours thesis, University of
Melbourne. http://repository.unimelb.edu.
au/10187/5745.
CP Ros´e, B Di Eugenio, LS Levin, and C Van Ess-
Dykema. 1995. Discourse processing of dialogues
with multiple threads. In Proc of ACL 1995.
J Seo, WB Croft, and DA Smith. 2009. Online commu-
nity search using thread structure. In Proc of CIKM
2009.
F Wolf and E Gibson. 2005. Representing discourse co-
herence: A corpus-based study. Comp Ling, 31(2).
W Xi, J Lind, and E Brill. 2004. Learning effective rank-
ing functions for newsgroup search. In Proc of SIGIR
2004.
</reference>
<page confidence="0.998696">
16
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.964309">
<title confidence="0.998713">Intelligent Linux Information Access by Data Mining: the ILIAD Project</title>
<author confidence="0.999993">Richard B Nam</author>
<affiliation confidence="0.9994375">of Computer Science and Software Engineering, University of Melbourne, Victoria Research Laboratory</affiliation>
<abstract confidence="0.994234333333333">We propose an alternative to conventional information retrieval over Linux forum data, based on thread-, postand user-level analysis, interfaced with an information retrieval engine via reranking.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T Baldwin</author>
<author>D Martinez</author>
<author>RB Penman</author>
</authors>
<title>Automatic thread classification for Linux user forum information access.</title>
<date>2007</date>
<booktitle>In Proc ofADCS</booktitle>
<contexts>
<context position="4044" citStr="Baldwin et al., 2007" startWordPosition="633" endWordPosition="636">gnition (NER) over each thread to identify entities such as package and distribution names, version numbers and snippets of code; as part of this, we perform version 1http://sitescraper.googlecode.com/ 15 Proceedings of the NAACL HLT 2010 Workshop on Computational Linguistics in a World of Social Media, pages 15–16, Los Angeles, California, June 2010. c�2010 Association for Computational Linguistics anchoring, in identifying what entity each version number relates to. To generate thread-level metadata, we classify each thread for the following three features, based on an ordinal scale of 1–5 (Baldwin et al., 2007): Complete: Is the problem description complete? Solved: Is a solution provided in the thread? Task Oriented: Is the thread about a specific problem? We additionally automatically classify the nature of the thread content, in terms of, e.g., whether it contains documentation or installation details, or relates to software, hardware or programming. Our experiments on thread-level classification are based on a set of 250 annotated threads from LinuxQuestions and other forums, as well as a dataset from CNET. 2.3 Post-level analysis We automatically analyse the post-to-post discourse structure of </context>
</contexts>
<marker>Baldwin, Martinez, Penman, 2007</marker>
<rawString>T Baldwin, D Martinez, and RB Penman. 2007. Automatic thread classification for Linux user forum information access. In Proc ofADCS 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Z Cao</author>
<author>T Qin</author>
<author>TY Liu</author>
<author>MF Tsai</author>
<author>H Li</author>
</authors>
<title>Learning to rank: from pairwise approach to listwise approach.</title>
<date>2007</date>
<booktitle>In Proc of ICML</booktitle>
<contexts>
<context position="5692" citStr="Cao et al., 2007" startWordPosition="897" endWordPosition="900">ideally resolved) threads that the author should be prompted to first check the existing threads for redundancy before a new thread is initiated. Our experiments on post-level analysis are, once again, based on data from LinuxQuestions and CNET. 2.4 User-level analysis We are also experimenting with profiling users variously, based on a 5-point ordinal scale across a range of user characteristics. Our experiments are based on data from LinuxQuestions (Lui, 2009). 2.5 IR ranking The various features are interfaced with an ad hoc information retrieval (IR) system via a learning-torank approach (Cao et al., 2007). In order to carry out IR evaluation, we have developed a set of queries and relevance judgements over a large-scale set of forum data. Our experiments to date have been based on combination over three IR engines (LUCENE, ZETTAIR and LEMUR), and involved thread-level metadata only, but we have achieved encouraging results, suggesting that thread-level metadata can enhance IR effectiveness. 3 Conclusions This paper provides an outline of the ILIAD project, focusing on the tasks of crawling, thread-level analysis, post-level analysis, user-level analysis and IR reranking. We have designed a ser</context>
</contexts>
<marker>Cao, Qin, Liu, Tsai, Li, 2007</marker>
<rawString>Z Cao, T Qin, TY Liu, MF Tsai, and H Li. 2007. Learning to rank: from pairwise approach to listwise approach. In Proc of ICML 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Lui</author>
</authors>
<title>Impact of user characteristics on online forum classification tasks. Honours thesis,</title>
<date>2009</date>
<institution>University of Melbourne.</institution>
<note>http://repository.unimelb.edu. au/10187/5745.</note>
<contexts>
<context position="5541" citStr="Lui, 2009" startWordPosition="874" endWordPosition="875">initiating post. Separately, we are developing techniques for identifying whether a new post to a given forum is sufficiently similar to other (ideally resolved) threads that the author should be prompted to first check the existing threads for redundancy before a new thread is initiated. Our experiments on post-level analysis are, once again, based on data from LinuxQuestions and CNET. 2.4 User-level analysis We are also experimenting with profiling users variously, based on a 5-point ordinal scale across a range of user characteristics. Our experiments are based on data from LinuxQuestions (Lui, 2009). 2.5 IR ranking The various features are interfaced with an ad hoc information retrieval (IR) system via a learning-torank approach (Cao et al., 2007). In order to carry out IR evaluation, we have developed a set of queries and relevance judgements over a large-scale set of forum data. Our experiments to date have been based on combination over three IR engines (LUCENE, ZETTAIR and LEMUR), and involved thread-level metadata only, but we have achieved encouraging results, suggesting that thread-level metadata can enhance IR effectiveness. 3 Conclusions This paper provides an outline of the ILI</context>
</contexts>
<marker>Lui, 2009</marker>
<rawString>M Lui. 2009. Impact of user characteristics on online forum classification tasks. Honours thesis, University of Melbourne. http://repository.unimelb.edu. au/10187/5745.</rawString>
</citation>
<citation valid="true">
<authors>
<author>CP Ros´e</author>
<author>B Di Eugenio</author>
<author>LS Levin</author>
<author>C Van EssDykema</author>
</authors>
<title>Discourse processing of dialogues with multiple threads.</title>
<date>1995</date>
<booktitle>In Proc of ACL</booktitle>
<marker>Ros´e, Di Eugenio, Levin, Van EssDykema, 1995</marker>
<rawString>CP Ros´e, B Di Eugenio, LS Levin, and C Van EssDykema. 1995. Discourse processing of dialogues with multiple threads. In Proc of ACL 1995.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Seo</author>
<author>WB Croft</author>
<author>DA Smith</author>
</authors>
<title>Online community search using thread structure.</title>
<date>2009</date>
<booktitle>In Proc of CIKM</booktitle>
<contexts>
<context position="1268" citStr="Seo et al., 2009" startWordPosition="188" endWordPosition="191">ional web queries. There still remain significant clusters of information access needs, however, where keyword matching is less successful. One such instance is technical web forums and mailing lists (collectively termed “forums” for the purposes of this paper): technical forums are a rich source of information when troubleshooting, and it is often possible to resolve technical queries/problems via web-archived data. The search facilities provided by forums and web search engines tend to be over-simplistic, however, and there is a desperate need for more sophisticated search (Xi et al., 2004; Seo et al., 2009), including: favouring threads which have led to a successful resolution; reflecting the degree of clarity/reproducibility of the proposed solution in a given thread; representing threads via their threaded rather than simple chronological structure; the ability to highlight key aspects of the thread, in terms of the problem description and solution which led to a successful resolution; and ideally, the ability to represent the problem and solution in normalised form via information extraction. This paper provides a brief outline of an attempt to achieve these and other goals in the context of</context>
</contexts>
<marker>Seo, Croft, Smith, 2009</marker>
<rawString>J Seo, WB Croft, and DA Smith. 2009. Online community search using thread structure. In Proc of CIKM 2009.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Wolf</author>
<author>E Gibson</author>
</authors>
<title>Representing discourse coherence: A corpus-based study.</title>
<date>2005</date>
<journal>Comp Ling,</journal>
<volume>31</volume>
<issue>2</issue>
<contexts>
<context position="4797" citStr="Wolf and Gibson (2005)" startWordPosition="752" endWordPosition="756"> specific problem? We additionally automatically classify the nature of the thread content, in terms of, e.g., whether it contains documentation or installation details, or relates to software, hardware or programming. Our experiments on thread-level classification are based on a set of 250 annotated threads from LinuxQuestions and other forums, as well as a dataset from CNET. 2.3 Post-level analysis We automatically analyse the post-to-post discourse structure of each thread, in terms of which (preceding) post(s) each post relates to, and how, building off the work of Ros´e et al. (1995) and Wolf and Gibson (2005). For example, a given post may refute the solution proposed in an earlier post, and also propose a novel solution in response to the initiating post. Separately, we are developing techniques for identifying whether a new post to a given forum is sufficiently similar to other (ideally resolved) threads that the author should be prompted to first check the existing threads for redundancy before a new thread is initiated. Our experiments on post-level analysis are, once again, based on data from LinuxQuestions and CNET. 2.4 User-level analysis We are also experimenting with profiling users vario</context>
</contexts>
<marker>Wolf, Gibson, 2005</marker>
<rawString>F Wolf and E Gibson. 2005. Representing discourse coherence: A corpus-based study. Comp Ling, 31(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Xi</author>
<author>J Lind</author>
<author>E Brill</author>
</authors>
<title>Learning effective ranking functions for newsgroup search.</title>
<date>2004</date>
<booktitle>In Proc of SIGIR</booktitle>
<contexts>
<context position="1249" citStr="Xi et al., 2004" startWordPosition="184" endWordPosition="187">for many informational web queries. There still remain significant clusters of information access needs, however, where keyword matching is less successful. One such instance is technical web forums and mailing lists (collectively termed “forums” for the purposes of this paper): technical forums are a rich source of information when troubleshooting, and it is often possible to resolve technical queries/problems via web-archived data. The search facilities provided by forums and web search engines tend to be over-simplistic, however, and there is a desperate need for more sophisticated search (Xi et al., 2004; Seo et al., 2009), including: favouring threads which have led to a successful resolution; reflecting the degree of clarity/reproducibility of the proposed solution in a given thread; representing threads via their threaded rather than simple chronological structure; the ability to highlight key aspects of the thread, in terms of the problem description and solution which led to a successful resolution; and ideally, the ability to represent the problem and solution in normalised form via information extraction. This paper provides a brief outline of an attempt to achieve these and other goal</context>
</contexts>
<marker>Xi, Lind, Brill, 2004</marker>
<rawString>W Xi, J Lind, and E Brill. 2004. Learning effective ranking functions for newsgroup search. In Proc of SIGIR 2004.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>