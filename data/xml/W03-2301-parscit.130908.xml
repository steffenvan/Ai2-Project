<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000006">
<title confidence="0.9828935">
Dynamic Generation of Cooperative Natural Language Responses in
WEBCOOP
</title>
<author confidence="0.7136">
Farah Benamara Patrick Saint Dizier
IRIT IRIT
</author>
<affiliation confidence="0.839152">
Toulouse III University Toulouse III University
</affiliation>
<email confidence="0.926888">
benamara@irit.fr stdizier@irit.fr
</email>
<sectionHeader confidence="0.997894" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999989461538462">
We present in this paper a formal ap-
proach for the dynamic generation of
cooperative NL responses in WEB-
COOP, a system that provides intelligent
responses in French to natural language
queries on the Web. The system inte-
grates reasoning procedures and NLG
techniques paired with hypertext links
Content determination is organized in
two steps: providing explanations that
report user misconceptions and then of-
fering flexible solutions that reflect the
cooperative know how of the system.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999983960784314">
The main aim of WEBCOOP is to explore, de-
velop and evaluate reasoning procedures and lan-
guage technologies for the development of a sys-
tem that provides intelligent cooperative responses
in French to natural language queries on the Web.
Besides the use of language at several levels (pro-
cessing queries, generating responses, extracting
knowledge from web pages), such a system re-
quires the integration of knowledge representa-
tion and the use of advanced reasoning proce-
dures. Moreover, the complexity of reasoning pro-
cedures must be kept reasonable in order to opti-
mise tractability, efficiency, and re-usability.
In a first stage, the project is developed on a
relatively limited domain that includes a number
of aspects of tourism (accommodation and trans-
portation, which have very different characteris-
tics on the web). WEBCOOP is a direct question-
answering system, it is not settled within a dia-
logue perspective and does not include any user
model.
Our challenge is to develop a formal framework
that integrates reasoning procedures with real-life
data extracted from web pages in order to produce
web style cooperative NL responses that reflect the
accuracy of the reasoning procedures. Our ulti-
mate goal is to develop a formal pragmatics for
cooperative responses.
In this paper, we focus (1) on formal aspects
of content determination and (2) on the dynamic
and interactive generation of cooperative NL re-
sponses by integrating NLG techniques with hy-
pertexts (Dale et al, 98). NL responses are pro-
duced from logical formulas constructed from rea-
soning processes. During the content determina-
tion stage, the system has to decide, via coopera-
tive rules, what is relevant and then to organize it
in a way that allows for the realization of a coher-
ent response. Hyperlinks are dynamically created
at generation time. This leaves up to the user the
high-level planning tasks inherent to NLG (Reiter
and Dale, 97) and improves readability and infor-
mation access. The standard generation difficul-
ties (lexicalisation, aggregation (Reape and Mel-
lish, 99), argumentation) remain crucial to gen-
erate cooperative responses, but their web-style
greatly reduces the overall complexity.
In the following sections, we first present a gen-
eral typology of cooperative responses followed
by a few motivational examples that explain the
main current aspects of WEBCOOP. Then we
</bodyText>
<page confidence="0.975637">
1
</page>
<bodyText confidence="0.999875857142857">
analyse the content determination process, orga-
nized in two steps: production of explanations that
report user misconceptions and then production of
flexible solutions that reflect the cooperative know
how of the system in order to provide help to the
user. Finally, central elements of the surface gen-
eration component are briefly presented.
</bodyText>
<sectionHeader confidence="0.981662" genericHeader="introduction">
2 Motivations
</sectionHeader>
<bodyText confidence="0.999947941176471">
(Grice, 75) maxims of conversation (quality, quan-
tity, relation, style) are often used as a basis for
designing cooperative answering systems. These
systems are typically able to provide general, de-
scriptive answers along with explanations about
these answers. They can respond intelligently
to false presuppositions and to various types of
misconceptions. They can also relax constraints
in a question and provide summaries or condi-
tional responses. A number of cooperative sys-
tems were designed in the past for databases such
as COBASE (Minock and Chu, 96) and CARMIN
(Chakravarthy et al, 90). Most of the efforts
were concentrated on fundamental reasoning pro-
cedures, while very little attention was paid to
question analysis and to NL response generation.
For an overview see (Gaasterland et ali, 94).
</bodyText>
<subsectionHeader confidence="0.7276445">
2.1 A General Typology of Cooperative
Responses
</subsectionHeader>
<bodyText confidence="0.864011545454546">
Gricean maxims describe fundamental properties
of cooperative behaviours. To address this, spe-
cific cooperative techniques have been developed
and different types of cooperative responses have
then been identified. We have structured and clas-
sified these types within a functional architecture.
In WEBCOOP, cooperativity can be summarized
as follows :
First, the elaboration of cooperative responses
is based on the use of reasoning procedures that
construct :
</bodyText>
<listItem confidence="0.939322352941176">
(1) explanations of a query failure when false
presuppositions or misconceptions in the question
conflict with knowledge in the database (figure 1
section 2.2.1) (Gal, 88),
(2) conditional responses reflecting relaxation
procedures (Gaasterland et al, 92) when the sys-
tem cannot find any response (figure 2 section
2.2.1),
(3) explanations related to the interpretation of
fuzzy terms (figure 3 section 2.2.1 ),
(4) warnings indicating the temporal depen-
dency of the response especially for elements with
a high temporal variability, intrinsic or observed,
such as seat availability or fares in air ticket reser-
vation,
(5) conditions directly related to conditional
knowledge in the knowledge base (KB) (Burhans
and Shapiro, 01) such as constraints associated
with the possibility of a service,
(6) textual information from web pages,
describing procedures, definitions or causes,
obtained from the query evaluation on the
knowledge base of indexed web pages such as
asking for visa formalities to enter a given country.
Next, the organisation of the informational con-
tent of the response before NL generation in-
cludes:
(7) cleaning redundant elements,
(8) providing intentional responses which are
abstract descriptions of large sets of extensional
responses (figure 3) (Burhans, 02).
(9) summarizing, sorting explanations or
focussing on a particular one, using heuristics that
apply to sets of integrity constraints, to produce
</listItem>
<bodyText confidence="0.885134">
synthetic responses (Gal, 88).
In this paper we focus on the content determi-
nation and the surface generation of (1), (2) and,
to some extent, of (3).
</bodyText>
<subsectionHeader confidence="0.999625">
2.2 Cooperative Responses in WEB COOP
</subsectionHeader>
<bodyText confidence="0.999971142857143">
In WEB COOP, user&apos;s questions may range from
keywords to comprehensive natural language ex-
pressions. Responses provided to users are built in
web style, by integrating natural language genera-
tion (NLG) techniques with hypertext links to pro-
duce &amp;quot;dynamic&amp;quot; responses. Responses are struc-
tured in two parts. The first part contains explana-
tion elements in natural language. It is a first level
of cooperativity that reports user misconceptions
in relation with the domain knowledge. The sec-
ond part is the most important and the most orig-
inal. It reflects the &apos;know-how&apos; of the cooperative
system, going beyond the cooperative statements
given in part one. It is based on several compo-
</bodyText>
<page confidence="0.981728">
2
</page>
<figure confidence="0.783217">
IRIT-ILPL/WEBCOOP - Microsoft Internet Explorg3
_Question R6ponse Base de C otmaissances ?
Your question : A chalet in Corsica for 15 persons
Response : A chalet capacity is less than 10 persons in
Corsica.
Flexibk solutions to go further :
</figure>
<listItem confidence="0.7409542">
• 2 close- by chalets in Corsica
• Another accommodation type hotel, pension in
Corsica.
• A 15 person country cottage in another region in
France.
</listItem>
<figure confidence="0.9762681">
IRIT-ILPL/ WEBCOOP - Microsoft Internet E
Question R e:ponse ase de C onnai ssanc es
Your questiom : When are the flights from Paris to Alhi
Response : There is no commercial Lip ort in Albi
Kexible 3°1m-ions to go...further :
Here are the nearby aizports s erved front Paris, by
increaing cligtance from Albi:
• Carcassonne
• Toulouse
• Montpellier
</figure>
<figureCaption confidence="0.999944">
Figure 1: Example 1. Figure 2: Example 2
</figureCaption>
<bodyText confidence="0.999971333333333">
nents: dedicated cooperative rules possibly using
knowledge extracted from web pages, relaxation
strategies and the domain ontology. The know-
how component also allows for the dynamic deter-
mination of those text fragments to be defined as
hypertext links, from which the user can get more
information. This allows the user to control navi-
gation within the response hyperlink network and,
therefore, the general planning of the response.
</bodyText>
<subsectionHeader confidence="0.741429">
2.2.1 A Few Examples
</subsectionHeader>
<bodyText confidence="0.967820679245283">
To better characterise our problem, we collected
a corpus of question answer pairs in French that re-
flects different cooperative behaviours. The three
examples below are extracted from this corpus.
For the sake of readability, they are translated into
English.
- Example 1 : Suppose one wishes to rent a
15 person country cottage in Corsica and (1) that
observations made on the related web pages or (2)
that a constraint or a regulation, indicate that the
maximum capacity of a country cottage in Corsica
is 10 persons (figure 1).
The first part of the response relates the detec-
tion of a false presupposition or the violation of
an integrity constraint for respectively cases ( )
and (2) above. Case (2) entails the production of
the following message, generated by a process that
evaluates the question logical formula against the
knowledge base: A chalet capacity is less than 10
persons in Corsica.
In a second step, the know-how of the cooper-
ative system generates a set of flexible solutions
as shown in figure 1, since the first part of the
response is informative but not really productive
for the user. The three flexible solutions proposed
emerge from know-how cooperative rules based
on minimal relaxation procedures. The first flex-
ible solution is based on a cardinality relaxation,
while in the last two solutions relaxation oper-
ates gradually on concepts such as the type of
accommodation (hotel or pension) or the region,
via the domain model and the ontology. Dynam-
ically created links are underlined. The user can
then, at will, get more precise information, dynam-
ically generated from the data base of indexed web
pages.
- Example 2: In the second example, the user
asks for flights from Paris to Albi. The user&apos;s
false presupposition is detected and a coopera-
tive response is first generated by indicating that
there is no commercial airport in Albi (figure 2).
The know-how component goes further by pro-
viding responses using first relaxation procedures
and then scalar implicature to rank the nearests
airports served from Paris, by increasing distance
from Albi. The airports names are generated as
dynamic links in order to get flight information.
- Example 3: Another type of cooperativity is a
flexible interpretation of fuzzy terms in questions
(Figure 3). Suppose the user asks for : a coun-
try cottage not too close to the sea in Cote d&apos;Azur.
Since this question does not contain any false pre-
supposition, the know how component produces
</bodyText>
<page confidence="0.995961">
3
</page>
<table confidence="0.888185">
IRIT-ILPL/ WEBCOOP - Microsoft Internet E
Question Reponse Base de C onnaissances
Your questior2 : A countty cottage not too close to the
sea in Cate d&apos;Az-ux ?
Re.spon5e : List of country cottages in Cate d&apos;Azur :
</table>
<listItem confidence="0.966525">
• Between 8 and 12 kms (109 responses)
• Between 15 and 25 tans (74 responses)
• More than 30 kms (48 responses)
</listItem>
<figureCaption confidence="0.996951">
Figure 3: Example 3
</figureCaption>
<bodyText confidence="0.999953727272727">
a direct response. It is elaborated using, in our
case, techniques based on geometrical considera-
tions which compute the distance from each coun-
try cottage to the sea and group cottages accord-
ing to dynamically determined distance intervals.
When the user clicks on an interval, since there are
many responses, the intentional component pro-
duces a synthesis of responses according, for ex-
ample, to the localisation of country cottages such
as mountain, country side, river bank which are at
the same conceptual level as sea side.
</bodyText>
<sectionHeader confidence="0.999051" genericHeader="method">
3 Reasoning Procedures for Content
Determination
</sectionHeader>
<subsectionHeader confidence="0.999894">
3.1 Detection of Misconceptions
</subsectionHeader>
<bodyText confidence="0.999570148148148">
Misconceptions include, among others, a variety
of false presuppositions. A false presupposition
occurs when a user presupposes the existence of an
entity that does not exist or presupposes a relation
between entities (or entity type) that is inconsistent
with the knowledge base. The detection of these
phenomena in a question implies the generation
of an explicative response that reports the conflict
between that question and the knowledge base.
Formally, presuppositions in a logic conjunctive
query, written in a variable substituted form (Gal,
88), are all formulas derived from the original
query by removing one or several literals. Mean-
ingful presuppositions are those which are con-
ceptually and logically coherent expressions. The
meaningful subsets of presuppositions are struc-
tured as a partial order using the generalisation re-
lation as an order relation.
One of the most studied techniques in the lit-
erature for the detection of false presuppositions
(Gaasterland et al, 96), is the merge compatibil-
ity between the query and the integrity constraints
of the knowledge base. The merging process pro-
duces residues which allow for semantic informa-
tion to be added to the query without changing its
denotation. If the residue contains an incoherence,
then a false presupposition is detected (table 1).
</bodyText>
<table confidence="0.997494">
The Knowledge Base
Rule: cottage(x) chalet(x)
Constraint : Fail = cottag e(x) A capacity (x , n1))
Anb &gt; 10.
Interpreted User Question
Chalet in Corsica for 15 persons?
(Entity. x : chalet, in(place, x, C onsica) A
capacity (x . 15))
Deduction Process
Question variable substituted form:
chalet(x) A in(pl ace, x, y) A capacity(x, nb) A
rib = 15 A y = Corsica.
Merging the rule and the constraint produces:
Fail chalet(x) A capacity(x , rib) A nb &gt; 10
Merging the question and the new constraint produces :
the incoherence : nb = 15 A rib &lt; 10
Generated Logical Response
chalet(x) A capacity (x , rib) A a &lt; 10
-Table 1 -
</table>
<bodyText confidence="0.999836333333333">
In table 1, the knowledge base is first aug-
mented with a new integrity constraint by merging
a rule with an existing integrity constraint. Then
merge compatibility can optimally be used involv-
ing the query and that new constraint. After detec-
tion of an incoherence, the following natural lan-
guage response is produced: a chalet capacity is
less than 10 persons in Corsica.
Another kind of incoherence is detected from
the failure of a search in the extensional database.
This is illustrated in the question : A flight from
Paris to Albi? of example 2 where airport(Albi)
is not a fact of the knowledge base.
If more than 2 integrity constraints are violated,
the system has to manage possible redundant ex-
planations and to organize independent explana-
tions. For that purpose, (Gal, 88) proposes heuris-
tics to produce synthetic responses.
</bodyText>
<page confidence="0.964672">
4
</page>
<subsectionHeader confidence="0.982828">
3.2 Content Determination in the Know How
Component
</subsectionHeader>
<bodyText confidence="0.999700050847458">
The cooperative know how component aims at
providing flexible solutions to go further (1) when
there is a misconception as above, (2) when the
set of extensional responses is too large or empty,
or (3) simply when the response needs an elabora-
tion to be useful. This component is based on in-
tentional description techniques (not treated here)
and on intelligent relaxation procedures going be-
yond classical generalization methods. This com-
ponent also includes additional dedicated cooper-
ative rules that make a thorough use of the domain
ontology and general knowledge. This component
has potentially a large number of capabilities. We
focus here on a basic, but frequently used reason-
ing schema: the proximity relation that pairs accu-
rate relaxation techniques with ontological knowl-
edge. We first present the reasoning aspects (for
content determination) and then the main natural
language generation aspects.
Very roughly, a relaxation is a process that
rewrites a query in some way to extend its deno-
tation. (Gaasterland et al, 92) define three types
of relaxation techniques : a rewrite of a predi-
cate, the broadening of the domain of a variable
or breaking a join dependency. In our approach,
the notion of answer in the neighbourhood of a
question requires that the data base must include a
representation of the most salient object properties
and their possible interactions. We present in this
paper a relaxation technique based on a generic
proximity relation that uses inherent properties
of objects, a conceptual ontology and lexical se-
mantics relations. This proximity relation applies
to different ontological or technical domains such
as : distance (example 2), fares, capacity (example
1), type of transportation... The proximity relation
is associated with constraints (e.g. minimal re-
laxations, conceptually graded relaxations, which
are relevant for the intentional component as well)
to produce information useful and relevant for the
user. It is one of the most productive know-how
rule. It is an iterative process running till a flexi-
ble solution is found that leads to a non-empty and
coherent solution.
Similarly to the merge compatibility, the prox-
imity relation is a rewriting rule that operates on a
formula. We now present its main logical features.
In the next paragraphs, we assume that the ques-
tion is written in its variable substituted form (ta-
ble 1). Let T be the set of variables at stake in the
residue. Let X be the set of variables that appear
in the predicates where an element of T occurs,
and Var,T U X. Then, let F(X,T) be the set of
predicates in the query where at least one of the
variables in Var occurs, and R the remainder of
the query. The general rewriting rule is:
proximity(F (V ar),T) A R —&gt; NewFormula,
where NewForrnula realises several generic op-
erations, among which:
</bodyText>
<listItem confidence="0.97077025">
1. considering several objects of the same type,
instead of just one, till the constraint is satisfied.
F(X,T) is duplicated to introduce several instances
of the same object T till the desired quantity of T
is reached (example 1),
2. proposing the same kind of resource but with
a ranked set of values close to the initial value at
the origin of the failure (example 2),
3. relaxing on the resource via the minimal gen-
eralisation that makes consistent the previously in-
consistent user constraint, e.g. via the least upper
bound in the generalizations lattice (example 1).
</listItem>
<bodyText confidence="0.999983111111111">
The notion of proximity is implemented by the
predicate near(C D,V,Y, Result) where CD is a
type in a conceptual domain, Y is a resource re-
sulting from the relaxation, of the same type than
V. V is the resource on which relaxation operates.
Result contains the sorted set of results according
to the criteria associated with the conceptual cate-
gory. W.r.t. the three operations described above,
NewFonnula has the following forms:
</bodyText>
<listItem confidence="0.936461090909091">
1. F(X1, T1) A F(X2, T2) A X1 X2 A
near(C D, Xl, X2, Result) A R A (Ti +
T2 &gt; T) (Ti, T2 and T contain a single vari-
able).
2. F(X, T)A
near(CD,T : Type,Y : Type, Result) A
T Y A R. T and Y are of the same type.
3. near(typeo f (V), V : Type, Y, Result) A
(X, V) AR.
F&apos;(X,V) is F(X,V) without the predicates typ-
ing X. V belongs to X.
</listItem>
<page confidence="0.984799">
5
</page>
<bodyText confidence="0.997554">
The instantiation of these formulas can respec-
tively be illustrated by the following examples :
ultimately in the display of a series of web pages
related to the initial query.
</bodyText>
<listItem confidence="0.94561">
1. For example 1111 figure 1, the rewrite of the
question formula is :
</listItem>
<equation confidence="0.803165">
chalet(x) A in(place, x, z) A capacity(x .nbl) A
chalet(y) A in(place, y. z) A capacity (y , nb2) A a: =
y Anear (place, x, y, result) Az = Corsica A (nbl
nb2) &gt; 15,
</equation>
<bodyText confidence="0.734616">
which proposes in result a set of two nearby
cottages x and y instead of one.
</bodyText>
<sectionHeader confidence="0.49724" genericHeader="method">
2. The query:
</sectionHeader>
<bodyText confidence="0.766823333333333">
f light(x,paris,T) A T = albi,
in example 2, figure 2, is relaxed into
f light(x, paris , T) A T = albi A
near (place, T, z result) A T z,
which computes the nearests airports from
Albi served from Paris.
</bodyText>
<listItem confidence="0.994029666666667">
3. The logical formula of example 1:
chalet(x) A in(place, x, y)
Acapacity(x, nb) A nb = 15 A y = corsica
</listItem>
<bodyText confidence="0.910638">
is rewritten into :
near (typeo f (x), x, v. result) A in(place, v, y)
Acapacity(v, , nb) A rib = 15 A y = corsica
according to the domain ontology and the
minimal generalization strategy. This allows
us to propose objects v of a type close to x,
e.g.: hotels or pensions (listed in the variable
result) that can accommodate more than 15
persons in Corsica.
In the know-how component, a response
is often composed of an ordered sequence
of proximity rule applications, starting with
those responses which are the closests to the
initial query. A priori, rules 1 to 3 above are
organized by increasing generalizations.
</bodyText>
<sectionHeader confidence="0.93492" genericHeader="method">
4 Dynamic Surface Generation of
Cooperative Responses
</sectionHeader>
<bodyText confidence="0.999127571428571">
Our aim is to maximize over the hyperlinks net-
work (Dale et al, 98) the cognitive as well as the
communicative coherence of responses provided
to the user. At our level, the main advantages are:
(1) to leave up to the user the high-level planning
tasks inherent to NLG and (2) to improve readabil-
ity and information access. Each search may result
</bodyText>
<subsectionHeader confidence="0.997425">
4.1 Generating Misconception Reports
</subsectionHeader>
<bodyText confidence="0.999986522727273">
Generating misconception reports is relatively
simple from a linguistic and NLG point of view
when a single false presupposition or integrity
constraint violation is detected. The main difficul-
ties are: (1) the generation of expressions in the
scope of a negation and (2) lexicalisation. Con-
cerning negation, our strategy in the production
of cooperative responses is to keep the scope of
negation operators minimal, avoiding thus ambi-
guities. In that case, either generation is based on
the equivalent contraposed form of the negated ex-
pression (e.g. not cheaper becomes more expen-
sive) or, when impossible, a negation is generated.
In this latter case, it often has the form there is no,
it is not possible to, etc.. About lexicalisation, our
strategy is to keep track of the terms used in the
related query and to use them as much as possi-
ble. A particular case of lexicalization is the lack
of a predicate corresponding to a verb in the for-
mula. Our strategy is then to search for a predica-
tive noun corresponding to a deverbal predicate (or
a synonym) with the largest set of arguments pos-
sible (to guarantee its central relational role) and
to lexicalise it as a verb. For example, cout(x,y) is
lexicalized as the verb coater (cost).
Organizing reports with more than one violation
is more subtle and requires e.g. redundancy elim-
ination (Gal, 88), ordering with adequate connec-
tors, and pronominalization. Concerning explana-
tion ordering, we are exploring heuristics where
the formula which has the largest ratio &apos;number of
free variables / number of predicates&apos; is prefered
because of its generality. Interestingly, this tech-
nique is the opposite of query optimization in data
bases.
Let us now consider a simple example, the
NLG of example 1 in figure 1 : chalet(x) A
capacity(x , N) A N &lt; 10. Generation pro-
ceeds roughly as follows: aggregation of capac-
ity(x,N) with chalet(x), where capacity(x,N) is the
head noun since it is relational, i.e.: la capacite
d&apos;un chalet. Then comes the VP represented by
N &lt; 10, N is a reference to the subject, while 10
is the object. &lt; lexicalises as est inferieure a. The
</bodyText>
<page confidence="0.99856">
6
</page>
<bodyText confidence="0.9997965">
whole sentence is then: la capacite d&apos;un chalet est
inferieure a 10. (A chalet capacity is less than 10).
</bodyText>
<subsectionHeader confidence="0.970058">
4.2 Generating Cooperative Know-How
Statements
</subsectionHeader>
<bodyText confidence="0.964324375">
Let us now explain how cooperative know-how
statements are generated. Let us concentrate on
the proximity rewriting rules given in section 3.
An important feature is that the generation of a
statement is based on instantiations of the general
schemas of this rewriting rule. The NLG process
is based on (1) a few predetermined sentence frag-
ments and (2) on the assembling of underspecified
fragments which are instantiated from the types of
the objects at stake in the formula being treated
and from references to lexicalised nodes in the
domain ontology. A statement is generated only
when the formula produced by the proximity rela-
tion rewriting rule has a solution in the knowledge
base. Hypertext links range over generalized con-
cepts (usually NPs) or on any term which is a part
of the response that corresponds to a non-terminal
concept in the ontology. In a response, concepts
underlined as hypertext links are a priori in differ-
ent branches in the ontology. The choice of hyper
text links is also guided by the underlying inten-
tions of the response. We give below the three
generation schemas and briefly show their appli-
cation on an example:
1. F(Xl, T1) A F(X2, T2) A X1 X2 A
near(C D, Xi, X2, Result) A R A (Ti +
T2 &gt; T).
The duplication (possibly more than 2) of the
formula F entails the generation of the de-
terminer deux (two), then the abstract form
F(X,V) is treated. Near(—,—, —,—) is lexi-
calised e.g. as proches (depending on the on-
tological type of CD) and then the constraints
in R are generated (this is close to their for-
mulation in the query). Since no explicit list
of chalets is given, the first NP is underlined
as an hypertext link, pointing to a list which
can be produced upon request. For exam-
ple 1, we get: Deux chalets proches en Corse
(two close-by chalets in Corsica).
</bodyText>
<equation confidence="0.825369333333333">
2. F(X, T)A
near(CD,T : Type,Y : Type, Result) A
T Y A R.
</equation>
<bodyText confidence="0.998558423076923">
F(X, T) is first generated, using the princi-
ples shown in section 4.1. For example 2,
where F(X, T) = f light(id paris, City), the
following NL fragment is produced: les vols
de Paris (Flights from Paris), the destination
(City) is not lexicalised since it is a variable.
Next, the predicate near() is treated, the on-
tological domain being localization in exam-
ple 2, a preposition like vers is generated, ex-
pressing a notion of destination deduced from
the thematic role of the argument Y, which is
then lexicalised. This lexicalization is an hy-
pertext link if no explicit list is given. Then,
near() is lexicalised as proche de and then we
have the proper noun of the original query
Albi (in T). The sentence ends by an under-
specified text fragment realized as: par dis-
tance croissante d&apos;Albi, sont: (by increasing
distance from Albi are:). The full sentence is:
Les vols de Paris vers des aeroports proches
de Albi, par distance croissante de Albi sont:
(Flights to airports near Albi, by increasing
distance from Albi are:). Then follows the list
of city/airport names underlined as hypertext
links (instead of the lexicalization of Y which
is more general).
</bodyText>
<listItem confidence="0.9845955">
3. near(typeo f (V),V : Type, Y, Result) A
F&apos;(X,V) A R.
</listItem>
<bodyText confidence="0.999949">
where F&apos; keeps track of the constraint. The
predicate near is here realized as: nous vous
proposons le/les followed by the lexicalisa-
tion of Type, followed by the generation of
the constraint(s) in F&apos; as given in the origi-
nal query. For example 1, we get: Nous vous
proposons les logements touristiques suiv-
ants pour 15 personnes: (we propose you
the following tourist accommodations for 15
persons) followed by a list of tourist accom-
modations Y elaborated in Result, and under-
lined as hyperlinks This constitutes a simple
intentional response.
</bodyText>
<sectionHeader confidence="0.999542" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999494333333333">
We presented an approach to the generation of co-
operative NL responses in WEBCOOP, a system
that provides intelligent responses in French to
</bodyText>
<page confidence="0.9977">
7
</page>
<bodyText confidence="0.999959227272727">
natural language queries on the Web. We focused
in this paper on formal aspects of content determi-
nation and on the surface generation of coopera-
tive responses. The content determination process
is organized in two steps: production of explana-
tions that report user misconceptions and then pro-
duction of flexible solutions that reflect the coop-
erative know how of the system in order to provide
help to the user. The know how component is actu-
ally based on intelligent relaxation techniques us-
ing a generic proximity relation, which goes be-
yond classical generalization methods. This com-
ponent also allows for the dynamic determination
of the responses to be defined as hypertext links
The WEBCOOP project is in an early stage
of development and its implementation is under-
way. Reasoning and language generation proce-
dures are implemented in Prolog (with constraint
interpreters), while the external aspects are devel-
oped in Java.
This project has obviously has several future di-
rections among which we plan to :
</bodyText>
<listItem confidence="0.989146333333333">
• Develop new cooperative know-how strate-
gies and their related logical expressions and
implementations (e.g. for fuzzy terms),
• Analyse how NLG argumentation techniques
(Horacek, 99) can be used, particularly when
a misconception is based on the interaction of
several integrity constraints.
• Specify different strategies for generating in-
tentional responses in the know how compo-
nent, for example when the number of direct
responses is very large.
• Study the external display of textual frag-
</listItem>
<bodyText confidence="0.969463555555555">
ments extracted from web pages, in particu-
lar for queries requiring narrative responses
such as procedures or regulations.
A thorough evaluation of the results is crucial
in this project at two levels: the quality of the
services offered to a user and the re-usability to
other domains identifying where are the difficul-
ties, what are the costs, what is domain specific
and, finally, what can be shared.
</bodyText>
<sectionHeader confidence="0.951209" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9999675">
We wish to thank Claire Gardent for her relevant
suggestions, and the GENT project group.
</bodyText>
<sectionHeader confidence="0.992296" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999908790697674">
Burhans D. 2002. A Question Answering Interpreta-
tion of Refutation Resolution. Phd thesis, Buffalo.
Burhans D. T., and Shapiro, S. C. 2001. Abduction and
Question Answering. Proceedings of the IJCAI-01
Workshop on Abductive Reasoning, Seattle, WA.
Chakravarthy U, Grant J, and Minker J. 1990. Logic-
Based Approach to Semantic Query Optimisation,
ACM Transactions on Database Systems, 15(2):162-
207,1990.
Dale R., Oberlander J., Milosavljevic M., Knott A.
1998. Integrating Natural Language Generation
and Hypertext to Produce Dynamic Documents, In-
teracting with Computers 11(2), pp. 109-135.
Gal, A. 1988. Cooperative Responses in Deductive
Databases, Phd Thesis, University of Maryland,
Department of Computer Science.
Gaasterland T, Godfrey P, Minker J. 1994. An
Overview of Cooperative Answering. Papers in
Non-standard Queries and Non-standard Answers,
in series Studies in Logic and Computation, Claren-
don Press, Oxford.
Gaasterland, T., Godfrey, P., Minker, J. 1992. Re-
laxation as a Platfbrm for Cooperative Answering,
Journal of Intelligent Information Systems, volume
1, pp : 293-321.
Grice H. 1990. Logic and Conversation, In Cole and
Morgan editors, Syntax and Semantic, Academic
Press.
Horacek, H. 1999. Generating Deductive Argumen-
tation in Variable Lengths, Proceedings of the 7th
European Workshop on Natural Language Genera-
tion, Toulouse, France.
Minock M, Chu W. 1996. Explanation for Coopera-
tive Information Systems, International Symposium
on Methodologies for Intelligent Systems, 264-273.
Reiter, R. and Dale, R. 1997. Building Applied Natu-
ral Language Generation Systems, Journal of Natu-
ral Language Engineering, volume 3, number 1, pp:
57-87.
Reape, M, Mellish, C. 1999. Just What is Aggre-
gation Anyway?, Proceedings of the 7th European
Workshop on Natural Language Generation, May,
Toulouse, France.
</reference>
<page confidence="0.998494">
8
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.785909">
<title confidence="0.981747">Dynamic Generation of Cooperative Natural Language Responses in WEBCOOP</title>
<author confidence="0.99524">Farah Benamara Patrick Saint Dizier</author>
<affiliation confidence="0.9970375">IRIT IRIT Toulouse III University Toulouse III University</affiliation>
<email confidence="0.825136">benamara@irit.frstdizier@irit.fr</email>
<abstract confidence="0.999861285714286">We present in this paper a formal approach for the dynamic generation of cooperative NL responses in WEB- COOP, a system that provides intelligent responses in French to natural language queries on the Web. The system integrates reasoning procedures and NLG techniques paired with hypertext links Content determination is organized in two steps: providing explanations that report user misconceptions and then offering flexible solutions that reflect the how the system.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>D Burhans</author>
</authors>
<title>A Question Answering Interpretation of Refutation Resolution. Phd thesis,</title>
<date>2002</date>
<location>Buffalo.</location>
<marker>Burhans, 2002</marker>
<rawString>Burhans D. 2002. A Question Answering Interpretation of Refutation Resolution. Phd thesis, Buffalo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D T Burhans</author>
<author>S C Shapiro</author>
</authors>
<title>Abduction and Question Answering.</title>
<date>2001</date>
<booktitle>Proceedings of the IJCAI-01 Workshop on Abductive Reasoning,</booktitle>
<location>Seattle, WA.</location>
<marker>Burhans, Shapiro, 2001</marker>
<rawString>Burhans D. T., and Shapiro, S. C. 2001. Abduction and Question Answering. Proceedings of the IJCAI-01 Workshop on Abductive Reasoning, Seattle, WA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>U Chakravarthy</author>
<author>J Grant</author>
<author>J Minker</author>
</authors>
<title>LogicBased Approach to Semantic Query Optimisation,</title>
<date>1990</date>
<journal>ACM Transactions on Database Systems,</journal>
<pages>15--2</pages>
<marker>Chakravarthy, Grant, Minker, 1990</marker>
<rawString>Chakravarthy U, Grant J, and Minker J. 1990. LogicBased Approach to Semantic Query Optimisation, ACM Transactions on Database Systems, 15(2):162-207,1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Dale</author>
<author>J Oberlander</author>
<author>M Milosavljevic</author>
<author>A Knott</author>
</authors>
<title>Integrating Natural Language Generation and Hypertext to Produce Dynamic Documents,</title>
<date>1998</date>
<journal>Interacting with Computers</journal>
<volume>11</volume>
<issue>2</issue>
<pages>109--135</pages>
<marker>Dale, Oberlander, Milosavljevic, Knott, 1998</marker>
<rawString>Dale R., Oberlander J., Milosavljevic M., Knott A. 1998. Integrating Natural Language Generation and Hypertext to Produce Dynamic Documents, Interacting with Computers 11(2), pp. 109-135.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Gal</author>
</authors>
<title>Cooperative Responses in Deductive Databases, Phd Thesis,</title>
<date>1988</date>
<institution>University of Maryland, Department of Computer Science.</institution>
<marker>Gal, 1988</marker>
<rawString>Gal, A. 1988. Cooperative Responses in Deductive Databases, Phd Thesis, University of Maryland, Department of Computer Science.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Gaasterland</author>
<author>P Godfrey</author>
<author>J Minker</author>
</authors>
<title>An Overview of Cooperative Answering. Papers in Non-standard Queries and Non-standard Answers,</title>
<date>1994</date>
<booktitle>in series Studies in Logic and Computation,</booktitle>
<location>Clarendon Press, Oxford.</location>
<marker>Gaasterland, Godfrey, Minker, 1994</marker>
<rawString>Gaasterland T, Godfrey P, Minker J. 1994. An Overview of Cooperative Answering. Papers in Non-standard Queries and Non-standard Answers, in series Studies in Logic and Computation, Clarendon Press, Oxford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Gaasterland</author>
<author>P Godfrey</author>
<author>J Minker</author>
</authors>
<title>Relaxation as a Platfbrm for Cooperative Answering,</title>
<date>1992</date>
<journal>Journal of Intelligent Information Systems,</journal>
<volume>1</volume>
<pages>293--321</pages>
<marker>Gaasterland, Godfrey, Minker, 1992</marker>
<rawString>Gaasterland, T., Godfrey, P., Minker, J. 1992. Relaxation as a Platfbrm for Cooperative Answering, Journal of Intelligent Information Systems, volume 1, pp : 293-321.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Grice</author>
</authors>
<title>Logic and Conversation,</title>
<date>1990</date>
<booktitle>In Cole and Morgan editors, Syntax and Semantic,</booktitle>
<publisher>Academic Press.</publisher>
<marker>Grice, 1990</marker>
<rawString>Grice H. 1990. Logic and Conversation, In Cole and Morgan editors, Syntax and Semantic, Academic Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Horacek</author>
</authors>
<title>Generating Deductive Argumentation in Variable Lengths,</title>
<date>1999</date>
<booktitle>Proceedings of the 7th European Workshop on Natural Language Generation,</booktitle>
<location>Toulouse, France.</location>
<marker>Horacek, 1999</marker>
<rawString>Horacek, H. 1999. Generating Deductive Argumentation in Variable Lengths, Proceedings of the 7th European Workshop on Natural Language Generation, Toulouse, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Minock</author>
<author>W Chu</author>
</authors>
<title>Explanation for Cooperative Information Systems,</title>
<date>1996</date>
<booktitle>International Symposium on Methodologies for Intelligent Systems,</booktitle>
<pages>264--273</pages>
<marker>Minock, Chu, 1996</marker>
<rawString>Minock M, Chu W. 1996. Explanation for Cooperative Information Systems, International Symposium on Methodologies for Intelligent Systems, 264-273.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Reiter</author>
<author>R Dale</author>
</authors>
<title>Building Applied Natural Language Generation Systems,</title>
<date>1997</date>
<journal>Journal of Natural Language Engineering,</journal>
<volume>3</volume>
<pages>57--87</pages>
<marker>Reiter, Dale, 1997</marker>
<rawString>Reiter, R. and Dale, R. 1997. Building Applied Natural Language Generation Systems, Journal of Natural Language Engineering, volume 3, number 1, pp: 57-87.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Reape</author>
<author>C Mellish</author>
</authors>
<title>Just What is Aggregation Anyway?,</title>
<date>1999</date>
<booktitle>Proceedings of the 7th European Workshop on Natural Language Generation,</booktitle>
<location>May, Toulouse, France.</location>
<marker>Reape, Mellish, 1999</marker>
<rawString>Reape, M, Mellish, C. 1999. Just What is Aggregation Anyway?, Proceedings of the 7th European Workshop on Natural Language Generation, May, Toulouse, France.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>