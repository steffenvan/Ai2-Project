<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.036685">
<title confidence="0.938181">
A note on the definition of semantic annotation
languages
</title>
<author confidence="0.893458">
Harry Bunt and Chwhynny Overbeeke
</author>
<email confidence="0.981238">
harry.bunt@uvt.nl, info@chwhynny.com
</email>
<sectionHeader confidence="0.998384" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999984592592593">
In the last few years, the international organization for standards ISO has
started up various projects concerned with the definition of interoperable
concepts for syntactic, morphosyntactic, and semantic annotation, with
the ultimate aim to support the development of interoperable language re-
sources. The Linguistic Annotation Framework (LAF, Ide &amp; Romary, 2004)
thereby serves as a meta-framework. LAF distinguishes between the con-
cepts of annotation and representation: ‘annotation’ refers to the process
of adding information to segments of language data, or to that information
itself, independent of the format in which this information is represented.
The term ‘representation’ refers to the format in which an annotation is ren-
dered, for instance in XML. According to LAF, annotations are the proper
level of standardization.
This distinction is reflected in the specification of ISO-TimeML, a pro-
posed ISO standard for temporal annotation (ISO, 2008) which consists of
an abstract syntax, a concrete syntax, and a semantics. The abstract syntax
specifies the elements making up the information in annotations, and how
these elements may be combined to form complex annotation structures;
these combinations are defined as set-theoretical structures. The concrete
syntax is a variant of the TimeML markup language (Pustejovsky et al.,
2003). Any other representation that is a rendering of the abstract syntax
can be converted into this representation. The ISO-TimeML semantics is
associated with its abstract syntax, which explains why all concrete repre-
sentations of ISO-TimeML annotations are semantically equivalent.
In this note we argue that the distinction of an abstract and a concrete
syntax level is desirable not only from a standardization point of view, but
also for designing annotation languages with a representation that is con-
ceptually transparent for annotators and that allows a simple, systematic
</bodyText>
<page confidence="0.957268">
268
</page>
<bodyText confidence="0.92055625">
Proceedings of the 8th International Conference on Computational Semantics, pages 268–271,
Tilburg, January 2009. c�2009 International Conference on Computational Semantics
interpretation. We illustrate this for the annotation and interpretation of
expressions denoting dates, times, and durations.
</bodyText>
<subsectionHeader confidence="0.985752">
1.1 ISO-TimeML
</subsectionHeader>
<bodyText confidence="0.998140714285714">
The abstract syntax of ISO-TimeML consists of two parts: (a) a ‘conceptual
inventory’, specifying the elements from which annotations are built up; and
(b) a set of syntax rules which describe the possible combinations of these
elements.
a. Conceptual inventory The concepts that can be used to build ISO-
TimeML annotations fall into the following five categories, all formed by
finite sets, plus the concepts of real and natural numbers.
</bodyText>
<listItem confidence="0.99984125">
• finite sets of elements called ‘event classes’; ‘tenses’, ‘aspects’, ‘polarities’,
and ‘set-theoretic types’ ;
• finite sets of elements called ‘temporal relations’,‘duration relations’, ‘numer-
ical relations, ‘event subordination relations’, and ‘aspectual relations’;
• a finite set of elements called ‘time zones’;
• finite sets of elements called ‘calendar years’, ‘calendar months’, ‘calendar
day numbers’; ‘clock times’;
• a finite set of elements called ‘temporal units’.
</listItem>
<bodyText confidence="0.823650769230769">
b. Syntax rules Annotation structures in ISO-TimeML come in two va-
rieties, entity structures and link structures. Entity structures contain se-
mantic information about a segment of source text; link structures describe
semantic relations between segments of source text.
The simplest kind of ISO-TimeML structures are a single entity struc-
ture, which is a pair &lt; m, a &gt; consisting of a markable1 m and an annotation
a, or a single link structure &lt; e1, e2, R &gt; which relates two entity structures.
More complex annotation structures consist of a set of entity structures and
a set of link structures which link the entity structures together.
Entity structures come in 6 types, containing information about (1) events;
(2) temporal intervals; (3) time points (or “instants”); (4) amounts of time;
(5) frequencies of events; and (6) temporal relations. We focus here on the
tree types of temporal concepts: intervals, instants, and amounts of time.
</bodyText>
<listItem confidence="0.89237225">
1. An instant structure is either a triple &lt; time zone, date, clocktime &gt;, where
a date is a triple consisting of a calendar year, a calendar month, and a cal-
endar day number; or a triple &lt; time-amount structure, instant structure,
temporal relation&gt; (“an hour before midnight”).
</listItem>
<bodyText confidence="0.911973">
&apos;The term markable is used to refer to the entities that the annotations are associated
with. There are two kinds of markables in ISO-TimeML: event markables and time mark-
ables, corresponding to segments of primary data that describe events, and to those that
describe temporal entities or relations, respectively.
</bodyText>
<page confidence="0.978906">
269
</page>
<listItem confidence="0.970452181818182">
2. An interval structure is either:
(a) a pair &lt; t1, t2 &gt; of two instant structures (beginning and end);
(b) a calendar year, a pair consisting of a calendar year and a calendar
month, or a triple &lt; cal.year, cal.month, cal.daynumber &gt;;
(c) a triple &lt; time-amount structure, interval structure, temporal
relation &gt; (“three weeks before Christmas”);
(d) a triple &lt; t1, t2, R &gt; where t1 and t2 are either instant or interval
structures, and where R is a duration relation (\from ’92 until ’95”).
3. A time-amount structure is a pair &lt; n, u &gt;, where n is a real number and u
a temporal unit, or a triple &lt; R, n, u &gt;, where R is a numerical relation (like
greater than) and n and u as before;
</listItem>
<bodyText confidence="0.999960862068966">
Link structures specify the temporal anchoring of events in time; the tempo-
ral ordering of events, intervals or instants; the length of an interval; subor-
dination relations between events; and aspectual relations between events.
The semantics associated with this abstract syntax defines a mapping
from the set-theoretical structures defined by the abstact syntax to the lan-
guage of first-order predicate logic with lambda abstraction.
A concrete syntax in general consists of the specification of names for
the various sets that make up the conceptual vocabulary, plus a listing of
specific named elements of these sets, and for each rule of the abstract
syntax a specification of how to represent the constructed annotation struc-
ture. The TimeML-based concrete syntax that is part of the ISO-TimeML
specification makes use of a TIMEX3 tag to mark up explicit temporal ex-
pressions like dates, times and durations. Using this tag, the different types
of temporal expressions are represented by means of the attribute type. An
attribute called value has alphanumerical string values that follow a stan-
dard format to represent (combinations of) calendar days, weeks, months
and years (2007-03-16); clock hours, minutes and seconds; (T13:15:00), as
well as amounts of time (P60D) and frequencies. This representation does
not have a transparent relation to the conceptual distinctions made in the
abstract syntax.
A more transparent representation can be obtained by defining a con-
crete syntax where the categories (sets) of the conceptual inventory corre-
spond to XML tags, and elements in these sets to attribute values. This
gives annotation representations that wear there meaning on their sleeve,
which is optimal both for human annotators and for computing the formal
interpretation of the annotations. The following examples illustrate this,
where we show, for three types of temporal expressions, (a) the conceptual
annotation structure; (b) the TimeML-based representation; (c) an XML
representation that directly instantiates the conceptual structure; (d) the
</bodyText>
<page confidence="0.984044">
270
</page>
<bodyText confidence="0.999469666666667">
formal interpretation.2 In all cases, the representations (c) are intuitively
more transparent than the (b) ones, and have a more straightforward rela-
tion to the interpretations (d).
</bodyText>
<figure confidence="0.995423555555555">
(1) March 2007 [m1 = w1w2, w1 =“March”, w2 =“2007”]
a. &lt; m1, &lt;interval, &lt;2007, march&gt;&gt;
b. &lt;TIMEX3 id=&amp;quot;t1&amp;quot; type=&amp;quot;DATE&amp;quot; value=&amp;quot;207-03-XX&amp;quot;’&gt;
c. &lt;INTERVAL id=&amp;quot;t1&amp;quot; calYear=&amp;quot;2007&amp;quot; calMonth=&amp;quot;MARCH&amp;quot;&gt;
d. At.INTERVAL(t) ∧ Calyear(t)=2007 ∧ Calmonth(t)=march
(2) Twelve-thirty tomorrow
[m1 = w1w2, w1 =“Twelve-thirty”, w2 =“tomorrow” ]
a. &lt; m1, &lt;instant, &lt;2009, january, 8&gt;,1230&gt;&gt;
b.&lt;TIMEX3 id=&amp;quot;t1&amp;quot; type=&amp;quot;TIME&amp;quot; value=&amp;quot;T12:30&amp;quot;&gt;
c. &lt;TIME id=&amp;quot;t1&amp;quot; calYear=&amp;quot;2009&amp;quot; calMonth=&amp;quot;JANUARY&amp;quot; calDayNum=&amp;quot;8&amp;quot;
clockTime=&amp;quot;1230&amp;quot; &gt;
d. At.TIME(t) ∧ Calyear(t)=2009 ∧ Calmonth(t)=january ∧ Caldaynum(t)=8
∧ Clocktime(t)=1230
(3) two-and-a-half minutes [m1 = w1w2, w1 =“Two-and-a-half”, w2 =“minutes”]
a. &lt; m1, &lt;time-amount, &lt;2.5, minute&gt;&gt;
b. &lt;TIMEX3 id=&amp;quot;t1&amp;quot; type=&amp;quot;DURATION&amp;quot; value=&amp;quot;P2.5M&amp;quot;&gt;
c. &lt;TIMEAMOUNT id=&amp;quot;a1&amp;quot; num=&amp;quot;2.5&amp;quot; unit=&amp;quot;minute&amp;quot;&gt;
d. Ax.TIME-AMOUNT(x) ∧ Number(x)=2.5 ∧ Unit(x)=minute
</figure>
<sectionHeader confidence="0.802057" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999918666666667">
[1] Bunt, H.C, Overbeeke, C. (2008) An Extensible Compositional Semantics for
Temporal Annotation. In: Proceedings of LAW II, the Second Workshop on Lin-
guistic Annotation, Satellite workshop at LREC 2008. Paris: ELRA.
[2] Bunt, H.C., Romary, L. (2002) Requirements on multimodal semantic repre-
sentations. In Proceedings of ISO TC37/SC4 Preliminary Meeting, Seoul, 59-68.
[3] Ide, N., Romary, L. (2004) International Standard for a Linguistic Anootation
Framework. Natural language Engineering, 10: 211-225.
[4] ISO (2008) ISO Draft International Standard 24617-1 “Semantic annotation
framework Part 1: Time and events”. Geneva: ISO.
[5] Pustejovsky, J., Castano, J., Ingria, R., Gaizauskas, R., Katz, G., Sauri, R.,
Setzer, A. (2003) TimeML: Robust Specification of Event and Temporal Expres-
sions in Text. In Proceedings IWCS-5, Tilburg, pp. 337-353
</reference>
<footnote confidence="0.5643825">
2Depending on the semantic interpretation framework in which this interpretation is
embedded, the semantic representations may be slightly different; e.g. Bunt &amp; Over-
beeke (2008) assign to the first example the representation AP.∃t.INTERVAL(t) n Ca-
lyear(t)=2007 n Calmonth(t)=march n P(t).
</footnote>
<page confidence="0.994299">
271
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.963414">
<title confidence="0.9952115">A note on the definition of semantic annotation languages</title>
<author confidence="0.996433">Harry Bunt</author>
<author confidence="0.996433">Chwhynny Overbeeke</author>
<email confidence="0.975773">harry.bunt@uvt.nl,info@chwhynny.com</email>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>H C Bunt</author>
<author>C Overbeeke</author>
</authors>
<title>An Extensible Compositional Semantics for Temporal Annotation. In:</title>
<date>2008</date>
<booktitle>Proceedings of LAW II, the Second Workshop on Linguistic Annotation, Satellite workshop at LREC</booktitle>
<publisher>ELRA.</publisher>
<location>Paris:</location>
<marker>[1]</marker>
<rawString>Bunt, H.C, Overbeeke, C. (2008) An Extensible Compositional Semantics for Temporal Annotation. In: Proceedings of LAW II, the Second Workshop on Linguistic Annotation, Satellite workshop at LREC 2008. Paris: ELRA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H C Bunt</author>
<author>L Romary</author>
</authors>
<title>Requirements on multimodal semantic representations.</title>
<date>2002</date>
<booktitle>In Proceedings of ISO TC37/SC4 Preliminary Meeting, Seoul,</booktitle>
<pages>59--68</pages>
<marker>[2]</marker>
<rawString>Bunt, H.C., Romary, L. (2002) Requirements on multimodal semantic representations. In Proceedings of ISO TC37/SC4 Preliminary Meeting, Seoul, 59-68.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Ide</author>
<author>L Romary</author>
</authors>
<title>International Standard for a Linguistic Anootation Framework.</title>
<date>2004</date>
<journal>Natural language Engineering,</journal>
<volume>10</volume>
<pages>211--225</pages>
<marker>[3]</marker>
<rawString>Ide, N., Romary, L. (2004) International Standard for a Linguistic Anootation Framework. Natural language Engineering, 10: 211-225.</rawString>
</citation>
<citation valid="true">
<authors>
<author>ISO</author>
</authors>
<title>ISO Draft International Standard 24617-1 “Semantic annotation framework Part 1: Time and events”.</title>
<date>2008</date>
<publisher>ISO.</publisher>
<location>Geneva:</location>
<marker>[4]</marker>
<rawString>ISO (2008) ISO Draft International Standard 24617-1 “Semantic annotation framework Part 1: Time and events”. Geneva: ISO.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
<author>J Castano</author>
<author>R Ingria</author>
<author>R Gaizauskas</author>
<author>G Katz</author>
<author>R Sauri</author>
<author>A Setzer</author>
</authors>
<title>TimeML: Robust Specification of Event and Temporal Expressions in Text.</title>
<date>2003</date>
<booktitle>In Proceedings IWCS-5,</booktitle>
<pages>337--353</pages>
<location>Tilburg,</location>
<marker>[5]</marker>
<rawString>Pustejovsky, J., Castano, J., Ingria, R., Gaizauskas, R., Katz, G., Sauri, R., Setzer, A. (2003) TimeML: Robust Specification of Event and Temporal Expressions in Text. In Proceedings IWCS-5, Tilburg, pp. 337-353</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>