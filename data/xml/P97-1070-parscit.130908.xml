<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.026380">
<title confidence="0.994155">
Representing Paraphrases Using Synchronous TAGs
</title>
<author confidence="0.993767">
Mark Dras
</author>
<affiliation confidence="0.990918">
Microsoft Research Institute, Macquarie University
</affiliation>
<address confidence="0.331861">
NSW Australia 2109
</address>
<email confidence="0.815824">
markdOmpce.mq.edu.au
</email>
<sectionHeader confidence="0.99472" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999977714285714">
This paper looks at representing para-
phrases using the formalism of Syn-
chronous TAGs; it looks particularly at
comparisons with machine translation and
the modifications it is necessary to make
to Synchronous TAGs for paraphrasing. A
more detailed version is in Dras (1997a).
</bodyText>
<sectionHeader confidence="0.999649" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9999593">
The context of the paraphrasing in this work is
that of Reluctant Paraphrase (Dras, 1997b). In
this framework, a paraphrase is a tool for modify-
ing a text to fit a set of constraints like length or
lexical density. As such, generally applicable para-
phrases are appropriate, so syntactic paraphrases—
paraphrases that can be represented in terms of a
mapping between syntax trees describing each of the
paraphrase alternatives—have been chosen for their
general applicability. Three examples are:
</bodyText>
<listItem confidence="0.804817583333333">
(1) a. The salesman made an attempt to wear
Steven down.
b. The salesman attempted to wear Steven
down.
(2) a. The compere who put the contestant to
the lie detector gained the cheers of the
audience.
b. The compere put the contestant to the
lie detector test. He gained the cheers
of the audience.
(3) a. The smile broke his composure.
b. His composure was broken by the smile.
</listItem>
<bodyText confidence="0.999946617647059">
A possible approach for representing paraphrases
is that of Chandrasekar et al (1996) in the context of
text simplification. This involves a fairly straightfor-
ward representation, as the focus is on paraphrases
which simplify sentences by breaking them apart.
However, for purposes other than sentence simplifi-
cation, where paraphrases like (1) are used, a more
complex representation is needed.
A paraphrase representation can be thought of as
comprising two parts—a representation for each of
the source and target texts, and a representation
for mapping between them. Tree Adjoining Gram-
mars (TAGs) cover the first part: as a formalism
for describing the syntactic aspects of text, they
have a number of desirable features. The proper-
ties of the formalism are well established (Joshi et
al, 1975), and the research has also led to the de-
velopment of a large standard grammar (XTAG Re-
search Group, 1995), and a parser XTAG (Doran et
al, 1994). Mapping between source and target texts
is achieved by an extension to the TAG formalism
known as Synchronous TAG, introduced by Shieber
and Schabes (1990). Synchronous TAGs (STAGs)
comprise a pair of trees plus links between nodes of
the trees. The original paper of Shieber and Schabes
proposed using STAGs to map from a syntactic to
a semantic representation, while another paper by
Abeille (1990) proposed their use in machine trans-
lation. The use in machine translation is quite close
to the use proposed here, hence the comparison in
the following section; instead of mapping between
possibly different trees in different languages, there
is a mapping between trees in the same language
with very different syntactic properties.
</bodyText>
<subsectionHeader confidence="0.516771">
2 Paraphrasing with STAGs
</subsectionHeader>
<bodyText confidence="0.999752882352941">
Abeille notes that the STAG formalism allows an
explicit semantic representation to be avoided, map-
ping from syntax to syntax directly. This fits well
with the syntactic paraphrases described in this pa-
per; but it does not, as Abeille also notes, pre-
clude semantic-based mappings, with Shieber and
Schabes constructing syntax-to-semantics mappings
as the first demonstration of STAGs. Similarly, more
semantically-based paraphrases are possible through
an indirect application of STAGs to a semantic rep-
resentation, and then back to the syntax.
One major difference between use in MT and
paraphrase is in lexicalisation. The sorts of map-
pings that Abeille deals with are lexically idiosyn-
cratic: the English sentences Kim likes Dale and
Kim misses Dale, while syntactically parallel and
semantically fairly close, are translated to different
</bodyText>
<page confidence="0.98756">
516
</page>
<figure confidence="0.951531">
NP VP.
NP° VP.
V. NP. A
Vanqueet P. le
</figure>
<figureCaption confidence="0.99994">
Figure 1: STAGs: miss-man quer a
</figureCaption>
<bodyText confidence="0.9998235">
syntactic structures in French; see Figure 1. The
actual mappings depend on the properties of words,
so any TAGs used in this synchronous manner will
necessarily be lexicalised. Here, however, the sorts
of paraphrases which are used are lexically general:
splitting off a relative clause, as in (2), is not depen-
dent on any lexical attribute of the sentence.
Related to this is that, at least between English
and French, extensive syntactic mismatch is un-
usual, much of the difficulty in translation coming
from lexical idiosyncrasies. A consequence for ma-
chine translation is that much of the synchronis-
ing of TAGs is between elementary trees. So, even
with a more complex syntactic structure than the
translation examples above, the changes can be de-
scribed by composing mappings between elementary
trees, or just in the transfer lexicon. Abeille notes
that there are occasions where it is necessary to re-
place an elementary tree by a derived tree; for exam-
ple, in Hopefully, John will work becomes On espere
que Jean travaillera, hopefully (an elementary tree)
matches on espere que (derived).
</bodyText>
<figure confidence="0.925277">
s, S.
S, S,
A
NP S V,0 NP. NP, VP, NP VP,
</figure>
<figureCaption confidence="0.999257">
Figure 2: Relative clause paraphrase
</figureCaption>
<bodyText confidence="0.999868725806452">
The situation is more complex in paraphrasing:
by definition, the mappings are between units of
text with differing syntactic properties. For exam-
ple, the mapping of examples (2a) and (2b) involves
the pairing of two derived trees, as in Figure 2. In
this case, both trees are derived ones. A problem
with the STAG formalism in this situation is that
it doesn&apos;t capture the generality of the mapping be-
tween (2a) and (2b); separate tree pairings will have
to be made for verbs in the matrix clause which have
complementation patterns different from that of the
above examples; the same is true for verbs in the sub-
ordinate clause. For more complex matchings, the
making and pairing of derived trees becomes combi-
natorially large.
A more compact definition is to have links, of a
kind different from the standard STAG links, be-
tween nodes higher in the tree. In STAG, a link
between two nodes specifies that any substitution
or adjunction occurring at one node must be repli-
cated at the other. This new proposed link would be
a summary link indicating the synchronisation of an
entire subtree: more precisely, each subnode of the
node with the summary link is mapped to the cor-
responding node in the paired tree in a synchronous
depth-first traversal of the subtree. Naturally, this
can only be defined for pairs of nodes which have
the same structurel ; that is, in the context of para-
phrasing, it is effectively a statement that the paired
subtrees are identical. So, for example, a mapping
between the nodes labelled VPI in each of the trees
of the example described above would be an appro-
priate place to have such a summary link: by es-
tablishing a mapping between each subnode of VP&apos;,
this covers different types of matrix clauses.
Another feature of using STAGs for paraphras-
ing is that the links are not necessarily one-to-one.
In the right-hand tree of the Figure 2 pairing, the
subject NPs of both sentences are linked to NPI of
the left-hand tree; this is a statement that both re-
sulting sentences have the same subject. This does
not, however, change the properties in any signifi-
cant way.&apos;
It is also useful to add another type of link which
is non-standard, in that it is not just a link between
nodes at which adjunction and substitution occur,
but which represents shared attributes. It connects
nodes such as the main verb of each tree, and indi-
cates that particular attributes are held in common.
For example, mapping between active and passive
voice versions of a sentence is represented by the
tree in Figure 3. The verb in the active version of
(3) (broke) shares the attribute of tense with the
auxiliary verb \be\, and the lexical component is
shared with the main verb of the passive tree (bro-
&apos;More precisely, they need only have the same num-
ber and type of argument slots.
&apos;This is equivalent to there being m dummy child
nodes of the node at the multiple end of an m:1 link,
each child node being exactly the same as the parent
with fully re-entrant feature structures, with one link
being systematically allocated to each child.
</bodyText>
<page confidence="0.990157">
517
</page>
<bodyText confidence="0.999996">
ken), which takes the past participle form. This sort
of link is unnecessary when STAGs are used in MT,
as the trees are lexicalised, and the information is
shared in the transfer lexicon. Since, with para-
phrasing, the transfer lexicon does not play such a
role, the shared information is represented by this
new type of link between the trees, where the links
are labelled according to the information shared.
Hence, node V1 in the active tree has a TENSE link
with node Vo in the passive tree, where tense is the
attribute in common; and a LEX link with node V1
in the passive tree, where the lexeme is shared.3
</bodyText>
<sectionHeader confidence="0.986421" genericHeader="method">
3 Notation
</sectionHeader>
<bodyText confidence="0.961922377777778">
In paraphrasing, the tree notation thus becomes
fairly clumsy: as well as consuming a large amount of
space (given the large derived trees), it fails to reflect
the generality provided by the summary links. That
is, it is not possible to define a mapping between
two structures reflecting their common features if
the structures are not, as is standard in STAG, en-
tire elementary or derived trees. Therefore, a new
and more compact notation is proposed to overcome
these two disadvantages.
The new notation has three parts: the first part
uniquely defines each tree of a synchronous tree pair;
the second part describes, also uniquely, the nodes
that will be part of the links; the third part links
the trees via these nodes. So, let variables X and
Y stand for any string of argument types accept-
able in tree names; for example, X could be nxlnx2
and Y nl. Then, for example, the tree for (2a)
can be defined as the adjunction of a )3NOnx0VX
tree (generic relative clause tree, standing for, e.g.,
)31\TOnx0Vnxlnx2) into an anOVY tree; the tree for
(2b) can be defined as a conjoined S tree, having
a parent Sm node and 2 child nodes anOVX and
anOVY.
Figure 3: Paraphrase with partial links
The second part of the notation requires pick-
ing out important nodes. The identification scheme
3The determination of a precise set of link labels is
future work.
proposed here has a string comprising node labels
with relations between them, signifying a relation-
ship taken from the set {parent, child, left-sibling,
right-sibling}, abbreviated {p, c, ls, rs}. The node
NPI of the left-hand tree of Figure 2 can then be
described by the string NPpNPpSrpNIL; an asso-
ciated mnemonic nickname might be T1subjNP.
The third part of the representation is then link-
ing the nodes. Standard links are represented by
an equal sign; other links are represented with the
link type subscripted to the equal sign. Thus,
for Figure 2, TisubjNP=T2leftsubjNP, where
T2leftsubjNP is NPpSrpSmpNIL for the right-
hand tree.
For a tabular representation using this notation,
see Dras (1997a).
</bodyText>
<sectionHeader confidence="0.998716" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999947583333333">
Synchronous TAGs are a useful representation for
paraphrasing, the mapping between parallel texts
of the same language which have different syntac-
tic structure. A number of modifications need to be
made, however, to properly capture the nature of
paraphrases: the creation of a new type of summary
link, to compensate for the increased importance of
derived trees; the allowing of many-to-many links
between trees; the creation of partial links, which
allow some information to be shared; and a new no-
tation which expresses the generality of paraphras-
ing.
</bodyText>
<sectionHeader confidence="0.998296" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998448652173913">
Abeille, Anne, Y. Schabes and A. Joshi. 1990. Using
Lexicalised Tags for Machine Translation. Proc. of
COLING90, 1-6.
Chandrasekar, R., C. Doran, B. Srinivas. 1996. Moti-
vations and Methods for Text Simplification. Proc. of
COLINC96, 1041-1044.
Doran, Christy, D. Egedi, B.A. Hockey, B. Srinivas and
M. Zaidel. 1994. XTAG System - A Wide Coverage
Grammar of English. Proc. of COLING94, 922-928.
Dras, Mark. 1997a. Representing Paraphrases Using
Synchronous Tree Adjoining Grammars. 1997 Aus-
tralasian NLP Summer Workshop, 17-24.
Dras, Mark. 1997b. Reluctant Paraphrase: Textual Re-
structuring under an Optimisation Model. Submitted
to PACLING97.
Joshi, Aravind, L. Levy and M. Takahashi. 1975. Tree
Adjunct Grammars. J. of Computer and System Sci-
ences, 10(1).
Shieber, Stuart and Y. Schabes. 1990. Synchronous Tree
Adjoining Grammars. Proc. of COLING90, 253-258.
XTAG Research Group. 1995. A Lexicalised Tree Ad-
joining Grammar for English. Univ. of Pennsylvania
Technical Report IRCS 95-03.
</reference>
<figure confidence="0.995753888888889">
S.
NPo VP,
V.0 NN
NP , VP,
Vo vP,
77ENSff 7N
1.11%
The V,0 pp
by
</figure>
<page confidence="0.937213">
518
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.596433">
<title confidence="0.999645">Representing Paraphrases Using Synchronous TAGs</title>
<author confidence="0.999569">Mark Dras</author>
<affiliation confidence="0.999962">Microsoft Research Institute, Macquarie University</affiliation>
<address confidence="0.919534">NSW Australia 2109</address>
<email confidence="0.991492">markdOmpce.mq.edu.au</email>
<abstract confidence="0.951384375">This paper looks at representing paraphrases using the formalism of Synchronous TAGs; it looks particularly at comparisons with machine translation and the modifications it is necessary to make to Synchronous TAGs for paraphrasing. A more detailed version is in Dras (1997a).</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Anne Abeille</author>
<author>Y Schabes</author>
<author>A Joshi</author>
</authors>
<title>Using Lexicalised Tags for Machine Translation.</title>
<date>1990</date>
<booktitle>Proc. of COLING90,</booktitle>
<pages>1--6</pages>
<marker>Abeille, Schabes, Joshi, 1990</marker>
<rawString>Abeille, Anne, Y. Schabes and A. Joshi. 1990. Using Lexicalised Tags for Machine Translation. Proc. of COLING90, 1-6.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Chandrasekar</author>
<author>C Doran</author>
<author>B Srinivas</author>
</authors>
<title>Motivations and Methods for Text Simplification.</title>
<date>1996</date>
<booktitle>Proc. of COLINC96,</booktitle>
<pages>1041--1044</pages>
<contexts>
<context position="1409" citStr="Chandrasekar et al (1996)" startWordPosition="219" endWordPosition="222"> in terms of a mapping between syntax trees describing each of the paraphrase alternatives—have been chosen for their general applicability. Three examples are: (1) a. The salesman made an attempt to wear Steven down. b. The salesman attempted to wear Steven down. (2) a. The compere who put the contestant to the lie detector gained the cheers of the audience. b. The compere put the contestant to the lie detector test. He gained the cheers of the audience. (3) a. The smile broke his composure. b. His composure was broken by the smile. A possible approach for representing paraphrases is that of Chandrasekar et al (1996) in the context of text simplification. This involves a fairly straightforward representation, as the focus is on paraphrases which simplify sentences by breaking them apart. However, for purposes other than sentence simplification, where paraphrases like (1) are used, a more complex representation is needed. A paraphrase representation can be thought of as comprising two parts—a representation for each of the source and target texts, and a representation for mapping between them. Tree Adjoining Grammars (TAGs) cover the first part: as a formalism for describing the syntactic aspects of text, </context>
</contexts>
<marker>Chandrasekar, Doran, Srinivas, 1996</marker>
<rawString>Chandrasekar, R., C. Doran, B. Srinivas. 1996. Motivations and Methods for Text Simplification. Proc. of COLINC96, 1041-1044.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christy Doran</author>
<author>D Egedi</author>
<author>B A Hockey</author>
<author>B Srinivas</author>
<author>M Zaidel</author>
</authors>
<date>1994</date>
<booktitle>XTAG System - A Wide Coverage Grammar of English. Proc. of COLING94,</booktitle>
<pages>922--928</pages>
<contexts>
<context position="2268" citStr="Doran et al, 1994" startWordPosition="359" endWordPosition="362">raphrases like (1) are used, a more complex representation is needed. A paraphrase representation can be thought of as comprising two parts—a representation for each of the source and target texts, and a representation for mapping between them. Tree Adjoining Grammars (TAGs) cover the first part: as a formalism for describing the syntactic aspects of text, they have a number of desirable features. The properties of the formalism are well established (Joshi et al, 1975), and the research has also led to the development of a large standard grammar (XTAG Research Group, 1995), and a parser XTAG (Doran et al, 1994). Mapping between source and target texts is achieved by an extension to the TAG formalism known as Synchronous TAG, introduced by Shieber and Schabes (1990). Synchronous TAGs (STAGs) comprise a pair of trees plus links between nodes of the trees. The original paper of Shieber and Schabes proposed using STAGs to map from a syntactic to a semantic representation, while another paper by Abeille (1990) proposed their use in machine translation. The use in machine translation is quite close to the use proposed here, hence the comparison in the following section; instead of mapping between possibly</context>
</contexts>
<marker>Doran, Egedi, Hockey, Srinivas, Zaidel, 1994</marker>
<rawString>Doran, Christy, D. Egedi, B.A. Hockey, B. Srinivas and M. Zaidel. 1994. XTAG System - A Wide Coverage Grammar of English. Proc. of COLING94, 922-928.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Dras</author>
</authors>
<title>Representing Paraphrases Using Synchronous Tree Adjoining Grammars.</title>
<date>1997</date>
<booktitle>Australasian NLP Summer Workshop,</booktitle>
<pages>17--24</pages>
<marker>Dras, 1997</marker>
<rawString>Dras, Mark. 1997a. Representing Paraphrases Using Synchronous Tree Adjoining Grammars. 1997 Australasian NLP Summer Workshop, 17-24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Dras</author>
</authors>
<title>Reluctant Paraphrase: Textual Restructuring under an Optimisation Model.</title>
<date>1997</date>
<note>Submitted to PACLING97.</note>
<marker>Dras, 1997</marker>
<rawString>Dras, Mark. 1997b. Reluctant Paraphrase: Textual Restructuring under an Optimisation Model. Submitted to PACLING97.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aravind Joshi</author>
<author>L Levy</author>
<author>M Takahashi</author>
</authors>
<title>Tree Adjunct Grammars.</title>
<date>1975</date>
<journal>J. of Computer and System Sciences,</journal>
<volume>10</volume>
<issue>1</issue>
<contexts>
<context position="2123" citStr="Joshi et al, 1975" startWordPosition="331" endWordPosition="334">s the focus is on paraphrases which simplify sentences by breaking them apart. However, for purposes other than sentence simplification, where paraphrases like (1) are used, a more complex representation is needed. A paraphrase representation can be thought of as comprising two parts—a representation for each of the source and target texts, and a representation for mapping between them. Tree Adjoining Grammars (TAGs) cover the first part: as a formalism for describing the syntactic aspects of text, they have a number of desirable features. The properties of the formalism are well established (Joshi et al, 1975), and the research has also led to the development of a large standard grammar (XTAG Research Group, 1995), and a parser XTAG (Doran et al, 1994). Mapping between source and target texts is achieved by an extension to the TAG formalism known as Synchronous TAG, introduced by Shieber and Schabes (1990). Synchronous TAGs (STAGs) comprise a pair of trees plus links between nodes of the trees. The original paper of Shieber and Schabes proposed using STAGs to map from a syntactic to a semantic representation, while another paper by Abeille (1990) proposed their use in machine translation. The use i</context>
</contexts>
<marker>Joshi, Levy, Takahashi, 1975</marker>
<rawString>Joshi, Aravind, L. Levy and M. Takahashi. 1975. Tree Adjunct Grammars. J. of Computer and System Sciences, 10(1).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart Shieber</author>
<author>Y Schabes</author>
</authors>
<title>Synchronous Tree Adjoining Grammars.</title>
<date>1990</date>
<booktitle>Proc. of COLING90,</booktitle>
<pages>253--258</pages>
<contexts>
<context position="2425" citStr="Shieber and Schabes (1990)" startWordPosition="384" endWordPosition="387">ntation for each of the source and target texts, and a representation for mapping between them. Tree Adjoining Grammars (TAGs) cover the first part: as a formalism for describing the syntactic aspects of text, they have a number of desirable features. The properties of the formalism are well established (Joshi et al, 1975), and the research has also led to the development of a large standard grammar (XTAG Research Group, 1995), and a parser XTAG (Doran et al, 1994). Mapping between source and target texts is achieved by an extension to the TAG formalism known as Synchronous TAG, introduced by Shieber and Schabes (1990). Synchronous TAGs (STAGs) comprise a pair of trees plus links between nodes of the trees. The original paper of Shieber and Schabes proposed using STAGs to map from a syntactic to a semantic representation, while another paper by Abeille (1990) proposed their use in machine translation. The use in machine translation is quite close to the use proposed here, hence the comparison in the following section; instead of mapping between possibly different trees in different languages, there is a mapping between trees in the same language with very different syntactic properties. 2 Paraphrasing with </context>
</contexts>
<marker>Shieber, Schabes, 1990</marker>
<rawString>Shieber, Stuart and Y. Schabes. 1990. Synchronous Tree Adjoining Grammars. Proc. of COLING90, 253-258.</rawString>
</citation>
<citation valid="true">
<authors>
<author>XTAG Research Group</author>
</authors>
<title>A Lexicalised Tree Adjoining Grammar for English.</title>
<date>1995</date>
<tech>Technical Report IRCS 95-03.</tech>
<institution>Univ. of Pennsylvania</institution>
<contexts>
<context position="2229" citStr="Group, 1995" startWordPosition="353" endWordPosition="354">sentence simplification, where paraphrases like (1) are used, a more complex representation is needed. A paraphrase representation can be thought of as comprising two parts—a representation for each of the source and target texts, and a representation for mapping between them. Tree Adjoining Grammars (TAGs) cover the first part: as a formalism for describing the syntactic aspects of text, they have a number of desirable features. The properties of the formalism are well established (Joshi et al, 1975), and the research has also led to the development of a large standard grammar (XTAG Research Group, 1995), and a parser XTAG (Doran et al, 1994). Mapping between source and target texts is achieved by an extension to the TAG formalism known as Synchronous TAG, introduced by Shieber and Schabes (1990). Synchronous TAGs (STAGs) comprise a pair of trees plus links between nodes of the trees. The original paper of Shieber and Schabes proposed using STAGs to map from a syntactic to a semantic representation, while another paper by Abeille (1990) proposed their use in machine translation. The use in machine translation is quite close to the use proposed here, hence the comparison in the following secti</context>
</contexts>
<marker>Group, 1995</marker>
<rawString>XTAG Research Group. 1995. A Lexicalised Tree Adjoining Grammar for English. Univ. of Pennsylvania Technical Report IRCS 95-03.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>