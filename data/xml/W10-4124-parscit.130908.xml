<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.986664">
Kazakh Segmentation System of Inflectional Affixes
</title>
<author confidence="0.960723">
Gulila.Altenbek
</author>
<affiliation confidence="0.9186994">
1.Information Science and Engineering Colleges
Xinjiang University,
Xinjiang Lab. of Multilanguage Information Technology ,
830046ˈP.R. China.
2ˊHarbin Institute of Technology, Harbin
</affiliation>
<email confidence="0.992856">
gla@xju.edu.cn
</email>
<author confidence="0.985749">
WANG Xiao-long
</author>
<affiliation confidence="0.998357">
Institute of Computer Science and Technology,
Harbin Institute of Technology, Harbin,
</affiliation>
<address confidence="0.78602">
150001, P.R. China.
</address>
<email confidence="0.996581">
wangxl@insun.hit.edu.cn
</email>
<sectionHeader confidence="0.995618" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999895">
This paper focuses on the automatic segmentation
of inflectional affixes of the Kazakh Language (KL)
on the basis of studying the corpus of KL. Kazakh is
an agglutinative language with word structures
formed by productive affixation of derivational and
inflectional suffixes to stems. Based on the analysis
of the configuration of inflectional affixes, it firstly
constructs the Finite-State Automation and the
segmentation of inflectional affixes. Secondly it
targets at specially constructing the Finite-State
Automations of nouns and verbs, which are the
most changeable and complex part of speech of KL.
And thirdly it adopts the methods of Bidirectional
Omni-Word Segmentation and lexical analysis to
achieve the goal of stemming and fine segmentation
of inflectional affixes of KL. And finally it gives an
additional account of studying the segmentation of
ambiguous inflectional affixes. The paper intends
to improve the accuracy and the quickness of
stemming the inflectional affixes of KL.
</bodyText>
<sectionHeader confidence="0.999337" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9997194">
Lexical or morphemic analysis is to turn the character
string of natural language into “the word string”.
During the process, at first it takes “the word” out,, and
then conducts the morphological analysis of the
internal components of “the word”, and finally it ends
up with the tagging. Many language processing tasks,
including parsing, semantic analysis, information
retrieval, and machine translation usually require a
morphological analysis of the language beforehand.
As we know, Kazakh Language belongs to Turkish
Language group of Altaic Language Family, whose
unique language features decide that we should focus
on its Inflectional Morphology is inflectionally
changed. Kazakh language is written right-to-left in
the Arabic alphabet with some modifications.
This paper attaches importance to analyzing the
nouns and the verbs, which have great difficulties in
affixes segmentation. And this paper will definitely
contribute to the further study of lexical analysis of
KL.
</bodyText>
<sectionHeader confidence="0.999008" genericHeader="introduction">
2 Related works
</sectionHeader>
<bodyText confidence="0.999764344827586">
There have been some related studies, such as, Martin
Porter has proposed ”English Stemming Processor”
(1980), which is most widely used; The
Longest-March put forward by Kut is a type of word
Segmentation algorithm based on the Turkish
Lexicon(1995).Beihang University has finished its
CDWS Chinese Word Segmentation System
(nan-yuan.Liang, 1987); Tsinghua University has also
completed its SEG Chinese Word Segmentation
System(Da-yang Shen et al.,1997); and &lt;The
Grammatical Knowledge-base of Contemporary
Chinese&gt; edited by Peking University was also
published(Shi-Wen,Yu, 2003).
And the study of lexical analysis of minority
languages has also achieved a lot in China, Some
researches(A.Gulila and A.M i j i tˈ2004, K.Aykiz et
al.,2006, YuSufu, 2005) have been done in the
lexical analysis of Uighur Language conducted
Xinjiang; the Automatic Segmentation System of
Mongolian language conducted by Inner Mongolia
University (U.Nasun, 1997) ; And the lexical analysis
of kazakh Language conducted by our project is in
progress (A.Gulila and A.Dawel,2007) and so on.
There have been several main approaches or
algorithms to segment inflectional affixes, including
maximum matching algorithm based on mechanic
matching of character strings, rules-based algorithm,
statistics-based algorithm, and the combination of both
rules-based and statistics-based algorithms.
</bodyText>
<sectionHeader confidence="0.981728" genericHeader="method">
3 Kazakh Morphology
</sectionHeader>
<subsectionHeader confidence="0.997791">
3.1 Kazakh Morphology
</subsectionHeader>
<bodyText confidence="0.997990142857143">
Kazakh is an agglutinative language with word
structures formed by affixes to grammatically or
meaningfully change the words.Kazakh morphology is
an affixal system consisting mainly of suffixes and a
few prefixes. According to linguistic theory, the word
of the text consists of the root or the stem and the
affix.( Milat etc. 2003, ding-jin Zhang. 2004).
</bodyText>
<listItem confidence="0.9780220625">
•Word root is the core of the whole word structure,
which is the essential morpheme to convey the basic
content of its meaning.
•Word stem is a new word generated by adding
various affixes to the root, which is also called a
derivative word. It expresses the complete and full
meaning.
• Affixes are divided into inflectional affixes and
derivational affixes. The study of derivational affixes
focuses on the derivational words, which can be
formed by adding prefixes or suffixes or prefixes plus
suffixes. Meanwhile the meanings of the derivational
words will be changed. While the study of inflectional
affixes pays attention to the Inflectional Morphology,
which shows grammatical changes between words but
does not change word meanings.
</listItem>
<subsectionHeader confidence="0.999811">
3.2 The Analysis of Inflectional Affixes
</subsectionHeader>
<bodyText confidence="0.99997675">
We focus on most general morphological rules which
are common rules related to morpheme segmentation.
The inflectional affixes in Kazakhh language are
divided into the following four types:
</bodyText>
<listItem confidence="0.951341846153846">
1) Plural: KL has six various affixes to express the
plural form of words, which usually are directly linked
to the general nouns, pronouns and numerals.
2) Personal pronoun possessive: KL has six various
affixes to express the possessive forms of personal
pronouns.
3) Case: KL has seven various affixes to express the
different cases. So KL has seven cases. Case endings
are applied only to the last element of a noun phrase,
which are closely linked to the following verbs.
4) Predicative Person: The first, second and third
personal pronouns are usually followed by the words
with additive predicative personal elements.
</listItem>
<bodyText confidence="0.998626833333333">
The above-mentioned four types of inflectional affixes
can be used separately or linked together. Suffixes in
Kazakh are complex, especially when a stem is linked
with many suffixes. There are some rules we can
follow to add affixes to word roots. See Figure 1:
(Right-to-Left)
</bodyText>
<figureCaption confidence="0.9684025">
Figure 1. Rules to guide the connections of inflectional
affixes
</figureCaption>
<subsectionHeader confidence="0.9932605">
3.3 The Finite-state Automaton model of
inflectional affixes of KL
</subsectionHeader>
<bodyText confidence="0.9993202">
Finite-State Automata (FSA) can be used to describe
the possible word forms of a language. We have
already applied the model of FSA into the lexical
analysis of KL. The following figure shows a FSA
model of inflectional changes of a noun. See Figure 2:
</bodyText>
<figureCaption confidence="0.938708">
Figure 2. The FSA model of inflectional changes of a noun.
</figureCaption>
<sectionHeader confidence="0.851588" genericHeader="method">
4 The Finite-state Transducer (FST) of
Kazakh Words
</sectionHeader>
<bodyText confidence="0.940247545454546">
As a typical agglutinative language, Kazakh words are
formed by adding various suffix to word roots. But the
Kazakh language itself does not have prefixes with
exception of some borrowed or loaned prefixes from
foreign words. And there are some rules guiding the
usage and connection of various suffixes. Thus we can
apply FST to establish a model for Kazakh words. The
process of establishing a FST model can be divided
into the following steps(E.Gülúen &amp; A.Eúref. 2004):
Step 1: Establish a Right-to-Left FSM.
Step 2: Tag affixes
</bodyText>
<figureCaption confidence="0.901213">
Step 3: Reverse the Right-to-Left FSM, and get a
Non-deterministic Finite-state Automaton (NFA)
Step 4: Convert the NFA to a Deterministic
Finite-state Automaton (DFA) and establish a
Left-to-Right FSM.
</figureCaption>
<bodyText confidence="0.999969833333333">
The Kazakh words that can be added affixes to
themselves are the followings: nouns, numerals,
adjectives, pronouns, verbs, adverbs and so on.
Among them, nouns and verbs are the most difficult
parts of speech to be segmented. Take these two parts
of speech as examples:
</bodyText>
<subsectionHeader confidence="0.948813">
4.1 Inflectional Affixes of Nouns
</subsectionHeader>
<bodyText confidence="0.993546833333333">
Step 1: Establish a Right-to-Left FSM .
The four types of inflectional affixes can be added to
stems under the guidance of some rules which also
decide the FSM. We can apply the FSM to segment
stens and we can analyze the FSM from right to left.
See Figure 3:
</bodyText>
<figureCaption confidence="0.981803">
Figure 3. Right-to-Left FSM of inflectional affixes.
</figureCaption>
<bodyText confidence="0.9405056">
Step 2: Tag affixes
How to tag depends on the types of inflectional
affixes, in which each type is given a value as its
expressing value. Those affixes will be stored in the
database as well as those expressing values. See Table 1
</bodyText>
<tableCaption confidence="0.865927">
Table 1. Types and Expressing Values of Inflectional
Affixes of Nouns.
</tableCaption>
<bodyText confidence="0.441957764705882">
inflectional affixes value Inflectional affixes value
Type type
Plural 1 Personal pronoun 4
possessive: plural
Case 2 predicative person: 5
singular
Personal pronoun 3 predicative person: 6
possessive: plural
singular
Step 3: Reverse the Right-to-Left FSM to form a
Left-to-Right FSM
Reverse the Right-to-Left FSM, and form a
Non-deterministic Finite-state Automaton (NFA) (See
Figure 4). The number in each circle of Figure 4
represents the state value consistent with the state
value of Figure 3. The types and expressing values are
also marked above the lines in Figure 4.
</bodyText>
<figureCaption confidence="0.979581">
Figure 4. Left-to-Right NFA of inflectional affixes.
Step 4: Convert NFA to DFA
</figureCaption>
<bodyText confidence="0.999809684210526">
The multi-switches and &amp;quot;İ&amp;quot; switches of an expressing
value of NFA makes the realization of NFA on
computer very complex. Therefore, we should convert
the NFA to be a DFA with the purpose of making each
inputted expressing value facing one switch and
making &amp;quot;s&amp;quot; switch nonexistent. We adopt “subset
construction algorithm”[A.V.Aho et al. ,1986] to
conduct the operation. We make each state of the new
DFA correspondent to a subset of the NFA. As Table 2
shows, the start state (A)of DFA contains one element
“0” and the start state of NFA. We know that all other
states can be achieved from the state “0” through &amp;quot;s&amp;quot;
switches. Thus, the start state of DFA could be
A={0 , 1 , 2 , 3 , 4 , 5}. The numbers in the
brackets represent inputted expressing values or types
of affixes. The next state of DFA should be started
with A and “1 , 2, 3, 4, 5”can be separately
inputted as expressing values. The FAS can thus be
established.
</bodyText>
<tableCaption confidence="0.808783">
Table 2. The Conversion from NFA to DFA of Inflectional
Affixes.
</tableCaption>
<figure confidence="0.6691484">
E-closure({0})={0,1,2,3,4,5}*A E-closure(C,1)={1}
E-closure(A,1)={1} *B B
E-closure(A,2)={1,2,3} *C E-closure(D,1)={1}
E-closure(A,4)={2,4} *D B
E-closure(A,6)={2} *E E-closure(E,1)={1} B
</figure>
<figureCaption confidence="0.9951115">
Figure 5. FSM of Inflectional Affixes of Nouns.
inflectional affixes of verbs.
</figureCaption>
<sectionHeader confidence="0.509171" genericHeader="method">
5 Approaches to the Segmentation of
</sectionHeader>
<subsectionHeader confidence="0.743442">
Inflectional Affixes of Kazakh Words
</subsectionHeader>
<bodyText confidence="0.993493777777778">
Some mathematical frameworks or modeling
methodologies can be used for morphology learning
and word segmentation: maximum likelihood (ML)
modeling, probabilistic maximum a posteriori (MAP)
models, finite state automata (FSA), etc.
The algorithms suitable for the segmentation of
inflectional affixes of Kazakh words include the
followings: Bidirectional Maximum Matching and
Omni-word Segmentation.
</bodyText>
<subsectionHeader confidence="0.998657">
5.1 Bidirectional Matching Algorithm
</subsectionHeader>
<bodyText confidence="0.999989636363637">
Forward and backward algorithm is applied for the
segmentation of a given word is examined for the
words whose surface forms change after concatenation.
The basic idea of this approach is to conduct the
segmentation of inflectional affixes from left side of a
character string to its right side and vice versa. But
during the process, the critical issue is to determine the
border between stens and inflectional affixes. Under
many situations, vague borders between stens and
inflectional affixes cause the inaccurate stemming.
Thus, this algorithm can solve this problem.
</bodyText>
<subsectionHeader confidence="0.998037">
5.2 Omni-word Segmentation Algorithm
</subsectionHeader>
<bodyText confidence="0.999867333333333">
The basic idea of this algorithm is to find all the
segmentation forms of character strings waited for the
segmentation starting from position “i”. For Kazakh
text, we should find all the segmentation forms of a
word. We just leave the issue of ambiguity for later
discussion.
</bodyText>
<subsectionHeader confidence="0.998366333333333">
5.3 The Combination of Bidirectional
Omni-word Segmentation Algorithm and
The Lexical Analysis
</subsectionHeader>
<bodyText confidence="0.999933405405406">
1) The segmentation of inflectional affixes is
conducted from the left side of a Kazakh word and
then matched with the table of inflectional affixes. In
general the inflectional affixes are formed by short
character strings. Therefore some inflectional affixes
maybe become sub-strings of other inflectional affixes.
It is very possible that there are many successful
matches of inflectional affixes, that is to say, there will
be various segmentations of inflectional affixes of a
word, But only one of them is accurate. So we need to
classify the inflectional affixes and enact the rules to
guide their connection order. According to those rules
we just search one type of inflectional affixes and
adopt Maximum matching algorithm to avoid the
problem of many segmentations of an affix. When
conducting the segmentation of inflectional affixes
and the stem extraction, we call the far right side of
segmentation border “candidate border” .
2) The extract stems is conducted from the right side of
a Kazakh word and then matched with the lexicon in
order to find the candidate border of the sten. The
ability to form new words for some affixes is very
strong, so many stems which are added to various
derivational affixes become new stems of other words.
So the situation is the same with the segmentation of
inflectional affixes. We should conduct Omni-word
Segmentation and list all the possible segmentation
forms of affixes.
We should deal with some special problems when
conducting segmentation of inflectional affixes.
Borders of stens will be changed somewhat when
some inflectional affixes are added to the stens.
Changes would occur like vowel deletion and lenition
reduction. Sometimes it is impossible to find the
complete match in the lexicon. Under such situation,
we should apply orthographic rule of Kazakh language
to deal with it.
</bodyText>
<sectionHeader confidence="0.98886" genericHeader="method">
6 The Analysis of the Ambiguity of
Inflectional Affixes
</sectionHeader>
<subsectionHeader confidence="0.999881">
6.1 Rule-based analysis of Ambiguity
</subsectionHeader>
<bodyText confidence="0.998329571428571">
To prevent over-segmentation and secure the semantic
identity of a word, stem and suffix boundary is chosen
as the primary target of segmentation.
Suppose the right border of inflectional affix is
indicated as S1 while the left border of sten as S2. The
ambiguity probably occurred in the segmentation is
listed below as well as its solution.
</bodyText>
<listItem confidence="0.992834">
1) S1=S2 (Under various situations, it is possible that
S1 is S2): Under this situation we should segment the
longest sten.
2) S1 S2 (Under this situation, we also consider the
following two cases see Figure 8)
Case 1:
(1) The sub-string on the right side of S1 will be
regarded as the candidate stem. And then we should
apply orthographic rule to make a choice of the
candidate stem and the sub-string on the left side of S1.
(2) If some variants of the words do exist, a new sten is
formed; otherwise, go to Step 5.
(3) We should search the new sten in the lexicon
(4) If we succeed to find the new sten in the lexicon,
please tag the stem and the inflectional affix (the left
sub-string of S1)
(5) End
</listItem>
<bodyText confidence="0.5242165">
Case 2:We should apply probability statistics to solve
the problem.
</bodyText>
<figureCaption confidence="0.999918">
Figure 6(a). Case 1: (S1 S2).
Figure 6(b). Case 2: (S1 S2).
</figureCaption>
<bodyText confidence="0.952015964285714">
3) Non-matched stems but with matched inflectional
affixes
We adopt the same solution to deal with this
situation. That is to say, we at first should apply
orthographic rule to make a choice of the sub-string on
the left side of S1 and the sub-string on the right side of
S1.And we also try to find the existence of lenition
reduction. If we could not find the new sten in the
lexicon, we should change to apply probability
statistics to analyze.
4) Non-matched stens with non-matched inflectional
affixes
We should search the inflectional affixes from the
left side of the word to be segmented. If we could not
find the match in the lexicon, we should judge the
suffix and the sub-string on the right side by use of
orthographic rule. And then we continue to search the
candidate stem in the lexicon. If the match does exist,
we tag the word as a sten; otherwise we tag it as an
unregistered word.
5) Non-matched inflectional affixes with matched
stems.
We consider the sub-string on the left side of the
stem as the candidate derivational affix and search the
match in the table of derivational affixes. If the match
could be found in the table and its type is the same with
the stem , we should tag the word as a stem; otherwise
we tag it as an unregistered word.
</bodyText>
<subsectionHeader confidence="0.729532">
6.2 The ambiguity analysis based on Bayesian
classification
</subsectionHeader>
<bodyText confidence="0.999909444444444">
The principle of Semantic Bayesian classifier is to
consider the information of surrounding words of
ambiguous words in a large context. Each practical
word contains potentially useful information to imply
the possible semantics of the ambiguous words. This
Classifier is not a features selection but a combination
of all features. The ambiguous words of the corpus
should be semantically tagged in advance.Table 3 lists
some symbols presented by this paper.
</bodyText>
<tableCaption confidence="0.997781">
Table 3. Symbols Agreement.
</tableCaption>
<table confidence="0.975988125">
Symbol Meaning
W An ambiguous word
s1,...,sk,...,sK ALL the different segmentations
of W
c1,...,ci,...,cI the context in which W is in the
corpus
v1,...,vj,...,vJ the context features of the
Disambiguation
</table>
<bodyText confidence="0.983621714285714">
When selecting the types, the Bayesian classifier using
Bayesian decision-making rules could be used; those
rules can minimize the error probability (R. O.Duda, P.
E. Hart. ,1973).
According to simple Bayesian assumption, we have
revised the decision making rules, as follows:
Simple Bayesian decision-making rules.
</bodyText>
<equation confidence="0.954696666666667">
Decide s if
&apos;s =argmaxsk[logP(sk) + vj in clogP(vj|sk)] (1)
P (vj  |sk) and P (sk) in the formula can be calculated
</equation>
<bodyText confidence="0.958791888888889">
using the maximum likelihood estimates from the
tagging of training in Corpus:
C(vj,sk) in the formula is the number to show how
many times sk is to be segmented by vj in the context
of training materials; C (sk) is the number to show how
many times that sk occur in the training corpus; an
d C
(w) is the total number to show how many times the
unambiguous words occur.
</bodyText>
<figureCaption confidence="0.993472">
Figure 7. Bayes Disambiguation.
</figureCaption>
<sectionHeader confidence="0.821988" genericHeader="method">
7 The Design of the System
</sectionHeader>
<bodyText confidence="0.999704875">
In the process of segmenting affixes in Kazakh
language, the main task is to segment the prefixes,
stems, and inflectional affixes. For this purpose, About
60,000 stems and 438 tables of affixes are collected
as the basis of segmentation. The stem list consists of
almost all the common stems except from the domain
specific words and rarely used words. The realization
of the whole system experiences the following steps:
</bodyText>
<listItem confidence="0.940912642857143">
1) Take a Kazakh word from a text.
2) Establish a FSM of a noun or a verb. If possible,
directly give the result of segmentation and return to
step
turn to the next step.
3) Adopt the combination of Bidirectional Omni-word
Segmentation Algorithm and the Lexical Analysis to
analyze for the words to be segmented. If possibly
segmented, directly give the result of the segmentation
and return to step 1; otherwise adopt Bayesian
Classification by use of the parameters from the
training corpus to select the correct segmentation of
ambiguous words.
4) The result of tagging the segmentation of
</listItem>
<bodyText confidence="0.88311775">
1;otherwise
affixes .
The corpus contains 150ˈ992 words, among which
51% is used as training corpus while the rest as test
</bodyText>
<figure confidence="0.910472131147541">
&apos;
P
)
c
s
s
(
k
arg max
s k
P
(vj  |sk ) ¦
(2)
P ( )
s k
C ( )
sk
C w
( )
(
P
c
arg max
s k
(
s )
k P
( )
s k
c
P
)
P
arg max
s k
(c s k) P ( s k)
�
log
P(c sk)
arg max[log
s k
( )]
s k
P
,
v
s
)
(
j
k
,
s
)
k
v
( t
C
t
C
&apos;
</figure>
<table confidence="0.782322615384616">
corpus. The accuracy rates generated from the testes
conducted for this paper include Precision 1 and
Precision 2. We can define two evaluation functions,
as follows:
Definition 1:The accuracy rate of inflectional affixes
segmentation of words.
1 _ X100%
numbers of correct extracted stems
total words (3)
Definition 2: The accuracy rate of inflectional affixes
segmentation of ambiguous words
precision2 _ numbers of correct extracted ambiguous words x100%
total number of ambiguous words (4)
</table>
<sectionHeader confidence="0.997602" genericHeader="evaluation">
8 Experimental results
</sectionHeader>
<subsectionHeader confidence="0.990082">
8.1 The comparison of the segmentation speeds
</subsectionHeader>
<bodyText confidence="0.999909833333333">
Table 5 shows the comparison of the segmentation
speeds, in which we compare the system adopting
FSM to the system not adopting FSM. We have tested
10ˈ000 words and the result of the comparison is
quite obvious, which indicates the high segmentation
speed of the system adopting FSM.
</bodyText>
<tableCaption confidence="0.999221">
Table 4. The comparison of Two segmentation speeds.
</tableCaption>
<table confidence="0.986772">
Type of The Total time average
segmentation number used for velocity
of tested segmentation (Ms/words)
words (Ms)
not adopting 100,00 24ˈ422 2.4422
FSM
adopting 100,00 19ˈ408 1.9408
FSM
</table>
<subsectionHeader confidence="0.994589">
8.2 The Analysis of the result of inflectional
affixes segmentation
</subsectionHeader>
<bodyText confidence="0.936683">
This paper adopts the combination of bidirectional
omni-segmentation and rule-based segmentation to
segment inflectional affixes and extract stems.
</bodyText>
<tableCaption confidence="0.9889955">
Table 5. The contrast of affix segmentations by use of
different algorithms.
</tableCaption>
<table confidence="0.962403">
Algorithms Precision1
˄%˅
Omni-word Segmentation 78.1
Maximum matching 74.2
Combination of bidirectional 84.0
omni-segmentation and lexical analysis
</table>
<bodyText confidence="0.999757333333333">
The tests show that the final one improves the
accuracy rate of affix segmentation and realizes the
segmentation of inflectional affixes.
</bodyText>
<subsectionHeader confidence="0.567617">
8.3 The Analysis of segmentation of ambiguous
words
</subsectionHeader>
<bodyText confidence="0.974006117647059">
This paper puts forward that we should firstly adopt
rule-based approach or algorithm to the segmentation
of ambiguous words, if without any result, we should
adopt Bayesian Classification to the segmentation of
ambiguous words. In the test corpora, among 74,026
words 922 words are ambiguous words. So at first we
should adopt rule-based algorithm to deal with those
ambiguous words, in which 600 ambiguous words can
be correctly dealt with; and then we should adopt
Bayesian Classification Algorithm to further improve
the accuracy rate of the segmentation of ambiguous
words. As a result, the accuracy rate of the
segmentation of ambiguous words can be reached to
84.38%. Table 7 shows the analysis of the
segmentation of ambiguous words.
Table 6. The analysis of the segmentation of ambiguous
words.
</bodyText>
<sectionHeader confidence="0.985111" genericHeader="conclusions">
9 Conclusion and Future Study
</sectionHeader>
<bodyText confidence="0.999933444444445">
This paper firstly analyzes the morphemic structure in
the corpus of Kazakh Language, and especially studies
stem extraction and affix segmentation. It establishes
the FSM of inflectional affixes and then conducts the
segmentation of inflectional affixes. The process starts
with the analysis of FSM of the words to be segmented.
If successfully achieved, the result would be
considered as the result of segmentation. Otherwise,
the algorithm of combining the bidirectional
</bodyText>
<figure confidence="0.525389">
precision
</figure>
<figureCaption confidence="0.535828909090909">
Algorithm to deal Total number Number of Precision2
with ambiguous of ambiguous correctly ˄%˅
words words of test segmented
corpora ambiguous
words
Rule-based 922 532 57.70%
segmentation of
ambiguous
words
Bayesian 390 246 63.07%
classification
</figureCaption>
<bodyText confidence="0.999810684210526">
omni-word segmentation and ruled based
segmentation should be adopted to segment the
inflectional affixes, which better solves the problem of
segmenting inflectional affixes. At last the paper
presents that we should apply the method of statistics
to disambiguate the segmentation of inflectional
affixes of ambiguous words. Compared to other
approaches, this approach improves the accuracy rate
and the segmentation speed of segmenting inflectional
affixes.
But there exist other problems presented in this paper,
such as unregistered words. We should continue to
make efforts to improve the accuracy rate of the
segmentation of inflectional affixes through further
enlarging the vocabulary of the dictionary and
adopting the method of statistics. And we should be
well-trained in obtaining parameters of segmentation
models of Kazakh Language, making the language
model close to the reality language itself.
</bodyText>
<sectionHeader confidence="0.973472" genericHeader="acknowledgments">
Acknowledgment
</sectionHeader>
<bodyText confidence="0.98088375">
This work is funded by the Natural Science
Foundation of China(NSFC)(No.60763005), And the
Project of China Ministry of Education
(No.MZ115-92).
</bodyText>
<sectionHeader confidence="0.997456" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99705628">
A.Kut, A. Aplkoçak, E.Özkarahan. 1995.Bilgi bulma
sistemleri için otomatic turkçe dizinleme yöntemi.
In Bilisim Bildirileri, Dokuz Eylül University, Izmir,
Turkey.
A.V.Aho,R.Sethi&amp;J.D.Ullman. 1986. Compilers:
principles,techniques,tools[R].Reading,MA:Addiso
n Wesley.
A.Gulila ,A.M i j i t.2004 .Reseach on Uighur Word
Segmentation, Journal of Chinese information
processing ,l . 18( 6):61-65.
A.Gulila, A.Dawel.2007.Study on the Rule-based
Kazakh Word Lemmatization, 11TH Symposium
national language and information
Proceedings ,Xishuangbanna, 109-114.
E.Gülsen , A.Esref. 2004. An affix stripping
morphological analyzer for Turkish, Proceedings of
the International Conference on Artificial
Intelligence and Application,Austria,299-304.
K.Aykiz,K.Kaysar,I.Turgun,2006.Morphological
Analysis of Uighur Noun for Natural Language
Information Processing,Journal of Chinese
information processing,20(3):43-48.
Liang nan-yuan. 1987.The Mordern Printed Chinese
Distinguishing Word System, Journal of Chinese
information processing,l . 1 (2):44-52.
M.F.Porter. 1980.An algorithm for suffix stripping”,
Program ,14(3):130í137.
Milat etc. 2003.Contemporary Kazakh language,
Xinjiang People&apos;s Publishing House.
R. O.Duda, P. E. Hart. 1973. Pattern Classification and
Scene Analysis,John Wiley and Sons, New
York,10-43.
Shen Da-yang,Huang Chang-ning,Sun Moa-song,
1997. The approaches of Information integration
and bestpath seaching inCWASS, Journal of
Chinese information processing, l . 11 (2):34-47.
U.Nasun, 1997 .The automatic segmentation system
of Mongolian roots, stems, word, Journal of Inner
Mongolia University ,NO2:53-57.
YuShi-Wen,2003.TheGrammatical Knowledge-base
of Contemporary Chinese-A Complete
Specification, Tsinghua University Press.
Zhang ding-jin. 2004.Modern Kazakh language
practicality grammar,The central University for
Nationalities Publishing House.
Yusup Abaidula , Rezwangul, Abdiryim Sali.
2005.The Research and Development of Computer
Aided Contemporary Uighur Language Tagging
System. Journal of Chinese Language and
Computing.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.333307">
<title confidence="0.998643">of Inflectional Affixes</title>
<author confidence="0.953266">Gulila Altenbek</author>
<affiliation confidence="0.93369">1.Information Science and Engineering</affiliation>
<address confidence="0.624571">Xinjiang</address>
<affiliation confidence="0.8808555">Xinjiang Lab. of Multilanguage Information Technology Institute of Technology, Harbin</affiliation>
<email confidence="0.90133">gla@xju.edu.cn</email>
<author confidence="0.981362">WANG Xiao-long</author>
<affiliation confidence="0.9935925">Institute of Computer Science and Technology, Harbin Institute of Technology, Harbin,</affiliation>
<address confidence="0.999763">150001, P.R. China.</address>
<email confidence="0.995702">wangxl@insun.hit.edu.cn</email>
<abstract confidence="0.999561095238095">This paper focuses on the automatic segmentation of inflectional affixes of the Kazakh Language (KL) on the basis of studying the corpus of KL. Kazakh is an agglutinative language with word structures formed by productive affixation of derivational and inflectional suffixes to stems. Based on the analysis of the configuration of inflectional affixes, it firstly constructs the Finite-State Automation and the segmentation of inflectional affixes. Secondly it targets at specially constructing the Finite-State Automations of nouns and verbs, which are the most changeable and complex part of speech of KL. And thirdly it adopts the methods of Bidirectional Omni-Word Segmentation and lexical analysis to achieve the goal of stemming and fine segmentation of inflectional affixes of KL. And finally it gives an additional account of studying the segmentation of ambiguous inflectional affixes. The paper intends to improve the accuracy and the quickness of stemming the inflectional affixes of KL.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>A A Kut</author>
</authors>
<title>Aplkoçak, E.Özkarahan. 1995.Bilgi bulma sistemleri için otomatic turkçe dizinleme yöntemi.</title>
<institution>In Bilisim Bildirileri, Dokuz Eylül University,</institution>
<location>Izmir, Turkey.</location>
<marker>Kut, </marker>
<rawString>A.Kut, A. Aplkoçak, E.Özkarahan. 1995.Bilgi bulma sistemleri için otomatic turkçe dizinleme yöntemi. In Bilisim Bildirileri, Dokuz Eylül University, Izmir, Turkey.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Sethi&amp;J D Ullman A V Aho</author>
</authors>
<title>Compilers: principles,techniques,tools[R].Reading,MA:Addiso n Wesley.</title>
<date>1986</date>
<marker>Aho, 1986</marker>
<rawString>A.V.Aho,R.Sethi&amp;J.D.Ullman. 1986. Compilers: principles,techniques,tools[R].Reading,MA:Addiso n Wesley.</rawString>
</citation>
<citation valid="false">
<authors>
<author>A Gulila</author>
</authors>
<title>i j i t.2004 .Reseach on Uighur Word Segmentation,</title>
<journal>Journal of Chinese information processing ,l .</journal>
<volume>18</volume>
<pages>6--61</pages>
<marker>Gulila, </marker>
<rawString>A.Gulila ,A.M i j i t.2004 .Reseach on Uighur Word Segmentation, Journal of Chinese information processing ,l . 18( 6):61-65.</rawString>
</citation>
<citation valid="false">
<authors>
<author>A Gulila</author>
</authors>
<title>A.Dawel.2007.Study on the Rule-based Kazakh Word Lemmatization,</title>
<booktitle>11TH Symposium national language and information Proceedings ,Xishuangbanna,</booktitle>
<pages>109--114</pages>
<marker>Gulila, </marker>
<rawString>A.Gulila, A.Dawel.2007.Study on the Rule-based Kazakh Word Lemmatization, 11TH Symposium national language and information Proceedings ,Xishuangbanna, 109-114.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Gülsen</author>
</authors>
<title>An affix stripping morphological analyzer for Turkish,</title>
<date>2004</date>
<booktitle>Proceedings of the International Conference on Artificial Intelligence and Application,Austria,299-304.</booktitle>
<marker>Gülsen, 2004</marker>
<rawString>E.Gülsen , A.Esref. 2004. An affix stripping morphological analyzer for Turkish, Proceedings of the International Conference on Artificial Intelligence and Application,Austria,299-304.</rawString>
</citation>
<citation valid="false">
<booktitle>K.Aykiz,K.Kaysar,I.Turgun,2006.Morphological Analysis of Uighur Noun for Natural Language Information Processing,Journal of Chinese information</booktitle>
<pages>20--3</pages>
<marker></marker>
<rawString>K.Aykiz,K.Kaysar,I.Turgun,2006.Morphological Analysis of Uighur Noun for Natural Language Information Processing,Journal of Chinese information processing,20(3):43-48.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Liang nan-yuan</author>
</authors>
<title>1987.The Mordern Printed Chinese Distinguishing Word System,</title>
<journal>Journal of Chinese information processing,l .</journal>
<volume>1</volume>
<pages>2--44</pages>
<marker>nan-yuan, </marker>
<rawString>Liang nan-yuan. 1987.The Mordern Printed Chinese Distinguishing Word System, Journal of Chinese information processing,l . 1 (2):44-52.</rawString>
</citation>
<citation valid="false">
<authors>
<author>M F Porter</author>
</authors>
<title>1980.An algorithm for suffix stripping”,</title>
<journal>Program</journal>
<volume>14</volume>
<issue>3</issue>
<marker>Porter, </marker>
<rawString>M.F.Porter. 1980.An algorithm for suffix stripping”, Program ,14(3):130í137.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Milat etc</author>
</authors>
<title>2003.Contemporary Kazakh language,</title>
<publisher>People&apos;s Publishing House.</publisher>
<location>Xinjiang</location>
<marker>etc, </marker>
<rawString>Milat etc. 2003.Contemporary Kazakh language, Xinjiang People&apos;s Publishing House.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R O Duda</author>
<author>P E Hart</author>
</authors>
<title>Pattern Classification and Scene Analysis,John Wiley and Sons,</title>
<date>1973</date>
<pages>10--43</pages>
<location>New</location>
<marker>Duda, Hart, 1973</marker>
<rawString>R. O.Duda, P. E. Hart. 1973. Pattern Classification and Scene Analysis,John Wiley and Sons, New York,10-43.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shen Da-yang</author>
<author>Huang</author>
</authors>
<title>Chang-ning,Sun Moa-song,</title>
<date>1997</date>
<journal>Journal of Chinese information processing, l .</journal>
<volume>11</volume>
<pages>2--34</pages>
<marker>Da-yang, Huang, 1997</marker>
<rawString>Shen Da-yang,Huang Chang-ning,Sun Moa-song, 1997. The approaches of Information integration and bestpath seaching inCWASS, Journal of Chinese information processing, l . 11 (2):34-47.</rawString>
</citation>
<citation valid="true">
<authors>
<author>U Nasun</author>
</authors>
<title>The automatic segmentation system of Mongolian roots, stems, word,</title>
<date>1997</date>
<journal>Journal of Inner Mongolia University</journal>
<pages>2--53</pages>
<contexts>
<context position="3377" citStr="Nasun, 1997" startWordPosition="478" endWordPosition="479">uan.Liang, 1987); Tsinghua University has also completed its SEG Chinese Word Segmentation System(Da-yang Shen et al.,1997); and &lt;The Grammatical Knowledge-base of Contemporary Chinese&gt; edited by Peking University was also published(Shi-Wen,Yu, 2003). And the study of lexical analysis of minority languages has also achieved a lot in China, Some researches(A.Gulila and A.M i j i tˈ2004, K.Aykiz et al.,2006, YuSufu, 2005) have been done in the lexical analysis of Uighur Language conducted Xinjiang; the Automatic Segmentation System of Mongolian language conducted by Inner Mongolia University (U.Nasun, 1997) ; And the lexical analysis of kazakh Language conducted by our project is in progress (A.Gulila and A.Dawel,2007) and so on. There have been several main approaches or algorithms to segment inflectional affixes, including maximum matching algorithm based on mechanic matching of character strings, rules-based algorithm, statistics-based algorithm, and the combination of both rules-based and statistics-based algorithms. 3 Kazakh Morphology 3.1 Kazakh Morphology Kazakh is an agglutinative language with word structures formed by affixes to grammatically or meaningfully change the words.Kazakh mor</context>
</contexts>
<marker>Nasun, 1997</marker>
<rawString>U.Nasun, 1997 .The automatic segmentation system of Mongolian roots, stems, word, Journal of Inner Mongolia University ,NO2:53-57.</rawString>
</citation>
<citation valid="false">
<title>YuShi-Wen,2003.TheGrammatical Knowledge-base of Contemporary Chinese-A Complete Specification,</title>
<publisher>Tsinghua University Press.</publisher>
<marker></marker>
<rawString>YuShi-Wen,2003.TheGrammatical Knowledge-base of Contemporary Chinese-A Complete Specification, Tsinghua University Press.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Zhang ding-jin</author>
</authors>
<title>2004.Modern Kazakh language practicality grammar,The central</title>
<publisher>Publishing House.</publisher>
<institution>University for Nationalities</institution>
<marker>ding-jin, </marker>
<rawString>Zhang ding-jin. 2004.Modern Kazakh language practicality grammar,The central University for Nationalities Publishing House.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Yusup Abaidula</author>
</authors>
<title>Abdiryim Sali. 2005.The Research and Development of Computer Aided Contemporary Uighur Language Tagging System.</title>
<journal>Journal of Chinese Language and Computing.</journal>
<marker>Abaidula, </marker>
<rawString>Yusup Abaidula , Rezwangul, Abdiryim Sali. 2005.The Research and Development of Computer Aided Contemporary Uighur Language Tagging System. Journal of Chinese Language and Computing.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>