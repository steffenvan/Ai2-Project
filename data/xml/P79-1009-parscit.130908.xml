<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000867">
<note confidence="0.56078375">
Taxonomy, Descriptions, and Individuals
in Natural Language Understanding
Ronald J. Brachman
Bolt Beranek and Newman Inc.
</note>
<bodyText confidence="0.999675142857143">
KLONE is a general-purpose language for representing
conceptual information. Several of its prominent
features -- semantically clean inheritance of structured
descriptions, taxonomic classification of generic
knowledge, intensional structures for functional roles
(including the possibility of multiple fillers), and
procedural attachment (with automatic invocation) --
make it particularly useful in computer-based natural
language understanding. We have implemented a prototype
natural language system that uses KLONE extensively in
several facets of its operation. This paper describes
the system and points out some of the benefits of using
KLONE for representation in natural language processing.
Our system is the beneficiary of two kinds of advantage
from KLONE. First, the taxonomic character of the
structured inheritance net facilitates the processing
involved in analyzing and responding to an utterance.
In particular, (1) it helps guide parsing by ruling out
semantically meaningless paths, (2) it provides a
general way of organizing and invoking semantic
interpretation rules, and (3) it allows algorithmic
determination of equivalent sets of entities for certain
plan-recognition inferences. Second, KLONE&apos;s
representational structure captures vmne of the
subtleties of natural language expression. That is, it
provides a general way of representing exactly the
quantificational import of a sentence without over-
committing the interpretation to scope or multiplicity
not overtly specified.
The paper first presents a brief overall description of
the natural language system. Then, prior to describing
how we use KLONE in the system, we discuss some of the
language&apos;s features at a general level. Finally we look
in detail at how KLONE affords us the advantages listed
above.
</bodyText>
<listItem confidence="0.629481">
1. THE TASK AND THE SYSTEM
</listItem>
<bodyText confidence="0.998552294117647">
Generally speaking, we want to provide a natural
interface to a subsystem that knows how to present
conceptual information intelligently (on a bit-map dis-
play) -- in this case the Augmented Transition Network
(ATN) grammar from tohe LUNAR system [57. The informa-
tion presentation subsystem allows flexible specifica-
tion of coordinate system mappings, including rectangu-
lar windows, from parts of the ATN onto a sequence of
&amp;quot;view surfaces&amp;quot;. Object types can be assigned arbitrary
presentation forms (graphic or alphanumeric), which can
be modified in particular cases. Parts of the grammar
are displayed according to standing orders and special
requests about shape and projection.
Our task is to command and control the intelligent
graphics subsystem through natural language. For
example, a sample dialogue with the system might include
this sequence of utterances:
</bodyText>
<listItem confidence="0.944042">
(1) Show me the clause level network.
[System displays states and arcs of the S/ network)
(2) Show me S/NP.
[System highlights state S/NP]
(3) Focus in on the preverbal constituents.
[System shifts scale and centers the display on the
preverbal states]
(4) No. I want to be able to see S/AUX.
</listItem>
<bodyText confidence="0.987070571428572">
[System &amp;quot;backs off&amp;quot; display so as to include state
5/AUX]
At the same time, we would like to ask factual questions
about the states, arcs, etc. of the ATN (e.g. &amp;quot;What are
the conditions on this &lt;user points&gt; arc?&amp;quot;). Questions
and commands addressed to the system typically (1) make
use of elements of the preceding dialogue, (2) can be
expressed indirectly so that the surface form does not
reflect the real intent, and (3) given our graphical
presentation system, can make reference to a shared non-
linguistic context. The issues of anaphora, (indirect)
speech acts, and deixis are thus of principal concern.
The natural language system is organized as illustrated
in Figure 1*. The user sits at a bit-map terminal
</bodyText>
<subsectionHeader confidence="0.839072">
VISrLAI eVrCV
</subsectionHeader>
<bodyText confidence="0.978147526315789">
equipped with a keyboard and a pointing device. Typed
input from the keyboard (possibly interspersed with
coordinates from the pointing device) is analyzed by a
version of the RUS System [2] -- an ATN-based increment-
al parser that is closely coupled with a &amp;quot;case-frame
dictionary&amp;quot;. In our system, this dictionary is embodied
in a syntactic taxonomy represented in KLONE. The
parser produces a KLONE representation of the syntactic
structure of an utterance. Incrementally along with its
production, this syntactic structure triggers the
creation of an interpretation. The interpretation
structure -- the literal (sentential) semantic content
of the utterance -- is then processed by a discourse
expert that attempts to determine what was really meant.
In this process, anaphoric expressions must be resolved
and indirect speech acts recognized. Finally, on the
basis of what is determined to be the intended force of
* Dashed elements of the figure are proposed but not yet
implemented.
</bodyText>
<figure confidence="0.93357496">
111411,
PINOTm&amp;
WM*
ketP.17
MO&apos; ce&amp;quot;vor
1
^
i
1....„
&apos;49:4rwq
f.x.PeRT
t&amp;quot;,,oftoa
- -
PI5tove;E/41,6044 ALl&amp;quot;
€1Cfter
alaaraDVA ;
umA1tuAAV0101-
LoNctrImm- AIWA&apos;
NmemnA4
CO 6mumnpu. .,4 1•KolimAtos
tragr
Se
&apos;MO
SeMAK1V- , ftbrA
tHrfirltgrPnott wows)
</figure>
<figureCaption confidence="0.984874">
Figure 1. System structure
(highlighting types of knowledge involved).
</figureCaption>
<figure confidence="0.844679">
UWLAN
fotopaV.,
RO5
fAgSf-g.
</figure>
<page confidence="0.997315">
33
</page>
<bodyText confidence="0.9999315">
the utterance, the discourse component decides how the
system should respond. It plans its own speech or
display actions, and passes them off to the language
generation component (not yet implemented) or display
expert. Some of these operations will be discussed in
more detail in Section 3.
</bodyText>
<sectionHeader confidence="0.925083" genericHeader="abstract">
2. THE REPRESENTATION LANGUAGE
</sectionHeader>
<bodyText confidence="0.999778435294118">
Before we look at details of the system&apos;s Use of KLONE,
we briefly sketch out some of its cogent features.
KLONE is a uniform language for the explicit
representation of natural language conceptual
information based on the idea of structured inheritance
networks [3]. The principal representational elements
of KLONE are Concepts, of which there are two major
types -- Generic and Individual. Generic Concepts are
arranged in an inheritance structure, expressing
long-term generic knowledge as a taxonomy*. A single
Generic Concept is a description template, from which
individual descriptions (in the form of Individual
Concepts) are formed. Generic Concepts can be built as
specializations of other Generic Concepts, to which they
are attached by inheritance Cables. These Cables form
the backbone of the network (a Generic Concept can have
many &amp;quot;superConcepts&amp;quot; as well as many &amp;quot;subConcepts&amp;quot;).
They carry structured descriptions from a Concept to its
subConcepts.
KLONE Concepts are highly structured objects. A
subConcept inherits a structured definition from its
parent** and can modify it in a number of structurally
consistent ways. The main elements of the structure are
Roles, which express relationships between a Concept and
other closely associated Concepts (i.e. its properties,
parts, etc.). Roles themselves have structure,
including descriptions of potential fillers***, modality
information, and names****. There are basically two
kinds of Roles in KLONE: RoleSets and &apos;Roles. RoleSets
have potentially many fillers (e.g. the officer
Role***** of a particular COMPANY would be filled once
for each officer). A RoleSet has as part of its
internal structure a restriction on the number of
possible fillers it can have in any particular instance.
A RoleSet on an Individual Concept stands for the
particular set of fillers for that particular Concept.
An IRole (for Instance Role) appears on an Individual
Concept to express the binding of a particular value to
the Role it plays in that Concept. (There would be
exactly one IRole for each officer slot of a particular
company, regardless of the actual number of people
playing those roles.)
* The network is a partial ordering with a topmost
element -- the Concept of an INDIVIDUAL -- below which
all other Concepts appear. There is no &amp;quot;least&amp;quot; element
in the net, whose fringe is composed of Individual
Concepts not related to each other.
&amp;quot;0* This inheritance implies inter alia that, if STATE is
a subConcept of ATN-CONSTITUENT, then any particular
state is by definition also an ATN constituent.
*** These limitations on the form of particular fillers
are called &amp;quot;Value Restrictions&amp;quot; (V/R&apos;s). If more than
one V/R is applicable at a given Role, the restrictions
are taken conjunctively.
**** Names are not used by the system in any way. They
are merely conveniences for the user.
In the text that follows. Roles will be indicated
as underlined names and Concepts will be indicated by
all upper case expressions.
There are several inter-Role relationships in KLONE.
which relate the Roles of a Concept to those of a
superConcept. Such relationships are carried in the
inheritance Cables mentioned earlier. They include
- restriction (of filler description and number); e.g.
that a particular kind of COMPANY will have exactly
three officers, all of whom must be over 45; this is
a relationship between RoleSets, in which the more
restricted RoleSet has all of the properties of the
one it restricts, with its own local restrictions
added conjunctively;
- differentiation (of a Role into subRoles); e.g.
differentiating the officers of a COMPANY into
president, vice-president, etc.; this is also a
relationship between two RoleSets carrying
inheritance -- the more specific Roles inherit all
properties of the parent Role except for the number
restriction;
- particularization (of a RoleSet for an Individual
Concept); e.g. the officers of BBN are all
COLLEGE-GRADUATEs;
- satisfaction (binding of a particular filler
description into a particular Role in an Individual
Concept); e.g. the president of BBN is STEVE-LEVY:
this is the relationship between an IRole and its
parent RoleSet.
</bodyText>
<figureCaption confidence="0.936528">
Figure 2 illustrates the use of Cables and the structure
Figure 2. A piece of a KLONE taxonomy.
</figureCaption>
<bodyText confidence="0.999789">
of Concepts in a piece of the KLONE taxonomy for the ATN
grammar. In this figure, Concepts are presented as
ellipses (Individual Concepts are shaded), Roles as
small squares (IRoles are filled in), and Cables as
double-lined arrows. The most general Concept.
ATN-CONSTITUENT, has two subConcepts -- STATE and ARC.
These each inherit the general properties of ATN
constituents, namely, each is known to have a
</bodyText>
<page confidence="0.995509">
34
</page>
<bodyText confidence="0.987868848275862">
displayForm associated with it. The subnetwork below
ARC expresses the classification of the various types of
arcs in the ATN and how their conceptual structures
vary. For example, a CONNECTING-ARC has a nextState
(the state in which the transition leaves the parsing
process), while for POP-ARCs the term is not meaningful
(i.e. there is no nextState Role). Links that connect
the Roles of more specific Concepts with corresponding
Roles in their parent Concepts are considered to travel
through the appropriate Cables. Finally, the structure
of an Individual Concept is illustrated by CATARC#0117.
Each IRole expresses the filling of a Role inherited
from the hierarchy above -- because CATARC00117 is a
CAT-ARC, it has a category; because it is also a
CONNECTING-ARC, it has a nextState, etc.
The structure of a Concept is completed by its set of
Structural Descriptions (SD&apos;s). These express how the
Roles of the Concept interrelate via the use of
parameterized versions (&amp;quot;ParaIndividuals&amp;quot;) of other
Concepts in the network to describe quantified relations
between the ultimate fillers of the Concept&apos;s Roles.
The quantification is expressed in terms of set mappings
between the RoleSets of a Concept, thereby quantifying
over their sets of fillers. In addition to quantified
relations between potential Role fillers, simple
relations like subset and set equality can be expressed
with a special kind of SD ,:alled a &amp;quot;RoleValueMap&amp;quot; (e.g.
the relation that &amp;quot;the object of the precondition of a
SEE is the same as the object of its effect&amp;quot;). SD&apos;s are
inherited through cables and are particularized in a
manner similar to that of Roles.
There is one important feature of KLONE that I would
like to point out, although it is not yet used in the
natural language system. The language carefully
distinguishes between purely descriptional structure and
assertions about coreference, existence, etc. All of
the structure mentioned above (Concepts, Roles, SD&apos;s and
Cables) is definitional. A separate construct called a
Nexus is a used as a locus of coreference for Individual
Concepts. One expresses coreference of description
relative to a Context by placing a Nexus in that Context
and attaching to it Individual Concepts considered to be
coreferential. All assertions are made relative to a
Context, and thus do not affect the (descriptive)
taxonomy of generic knowledge. We anticipate that
Nexuses will be important in reasoning about particu-
lars, answering questions (especially in deciding the
appropriate form for an answer), and resolving anaphoric
expressions, and that Contexts will be of use in
reasoning about hypotheticals, beliefs, and wants.
The final feature of KLONE relevant to our particular
application is the ability to attach procedures and data
to structures in the network. The attached procedure
mechanism is implemented in a very general way. Proce-
dures are attached to KLONE entities by &amp;quot;interpretive
hooks&amp;quot; (ihooks), which specify the set of situations in
which they are to be triggered. An interpreter function
operating on a KLONE entity causes the invocation of all
procedures inherited by or directly attached to that
entity by ihnnks whose situations match the intent of
that function. Situations include things like
&amp;quot;Individuate&amp;quot;, &amp;quot;Modify&amp;quot;, &amp;quot;Create&amp;quot;, &amp;quot;Remove&amp;quot;, etc. In
addition to a general situation, an ihook specifies when
in the execution of the interpreter function it is to be
invoked (PRE-, POST-, or WHEN-).
3. USE OF KLONE IN THE NATURAL LANGUAGE SYSTEM
The previous section described the features of KLONE in
general terms. Here we illustrate how they facilitate
the performance of our natural language system. (Figure
1 above sketched the places within the system of the
various KLONE knowledge bases discussed here.) We will
discuss the use of a syntactic taxonomy to constrain
parsing and index semantic interpretation rules, and
structures used in the syntactic/discourse interface to
express the literal semantic content of an utterance.
The parser uses KLONE to describe potential syntactic
structures. A taxonomy of syntactic constituent
descriptions, with Concepts like PHRASE, NOUN-PHRASE,
LOCATION-PP, and PERSON-WORD, is used to express how
phrases are built from their constituents. The taxonomy
also serves as a discrimination net, allowing common
features of constituent types to be expressed in a
single place, and distinguishing features to cause
branching into separate subnets.
Two benefits accrue from this organization of knowledge.
First, shallow semantic constraints are expressed in the
Roles and SD&apos;s of Concepts like LOCATION-PP. For
example, the prepObject )f a LOCATION-PP must be a
PLACE-NOUN. A description of &amp;quot;on Al&amp;quot; (as in &amp;quot;book on
Al&amp;quot;) as a LOCATION-PP could not be constructed since Al
does not satisfy the value restriction for the head
role. Such constraints help rule out misleading parse
paths, in the manner of a semantic grammar [4], by
refusing to construct semantically anomalous constituent
descriptions. In conjun-tinn with the general (ATN)
grammar of English, this is a powerful guidance
mechanism which helps parsing proceed close to
deterministically (21.
Second, the syntactic taxonomy serves as a structure on
which to hang semantic projection rules. Since the
taxonomy is an inheritance structure, the description of
a given syntactic constituent inherits all semantic
interpretation rules appropriate for each of the more
general constituent types that it specializes, and can
have its own special-purpose rules as well. In the
example above, simply by virtue of its placement in the
taxonomy, the Concept for &amp;quot;on Al&amp;quot; would inherit rules
relevant to PP&apos;s in general and to SUBJECT-PP&apos;s in
particular, but not those appropriate to LOCATION-PP&apos;s.
Interpretation per se is achieved using the attached
procedure facility, with semantic projection rules
expressed as functions attached to Roles of the syntac-
tic Concepts. The functions specify how to translate
pieces of syntactic structure into &amp;quot;deeper&amp;quot; Concepts and
Roles. For example, the ,subject of a SHOW-PHRASE might
map into the agent of a DISPLAY action.
The mapping rules are triggered automatically by the
KLONE interpreter. This is facilitated by the
interpreter&apos;s &amp;quot;pushing down&amp;quot; a Concept to the most
specific place it can be considered to belong in the
taxonomy (using only &amp;quot;analytic&amp;quot;, definitional
constraints). Figure 3 illustrates schematically the
way a Concept can descend to the most specific level
implied by its internal description. The Concept being
added to the network is an NP whose head is &amp;quot;ARC&amp;quot; and
whose modifier is &amp;quot;PUSH&amp;quot; (NPti0023). It is initially
considered a direct (Generic) subConcept of the Concept
for its basic syntactic type (NP). Its Role structure,
however, implies that it in fact belongs in a more
restricted subclass of NP&apos;s, that is, TYPED-ARC-NP (an
NP whose head is an ARC-NOUN and whose modifier is an
ARC-TYPE-WORD). The interpreter, on the basis of only
definitional constraints expressed in the network,
places the new Concept below its &amp;quot;most specific
subsumer&amp;quot; -- the proper place for it in the taxonomy.
The process proceeds incrementally, with each new piece
of the constituent possibly causing further descent. In
this case, NP@O023 would initially only have its head
Role specified, and on that basis, it would be placed
under ARC-NP (which is &amp;quot;an NP whose head is an
ARC-NOUN&amp;quot;). Then the parser would add the modifier
specification, causing the Concept&apos;s descent to the
resting place shown in the right half of Figure 3. When
the constituent whose description is being added to the
network is &amp;quot;popped&amp;quot; in the parser, its KLONE description
</bodyText>
<page confidence="0.998811">
35
</page>
<figureCaption confidence="0.998954">
Figure 3. Automatic Concept descent.
</figureCaption>
<bodyText confidence="0.999943567567567">
is individuated -- causing the invocation of all &amp;quot;WHEN—
Individuated&amp;quot; attached procedures inherited through
superConcept Cables. These procedures cause an
interpretation for the constituent to be built on the
basis of the interpretations of component parts of the
syntactic description.
This literal semantic interpretation of a phrase -- also
a KLONE structure -- is the &amp;quot;input&amp;quot; to the discourse
component. An important element of this interface
between the syntactic processor and the discourse
component is that the parser/interpreter commits itself
only to information explicitly present in the input
phrase, and leaves all inference about quantifier scope,
etc. to the discourse expert. Two kinds of representa—
tional structures support this. The Concept DSET (for
&amp;quot;determined set&amp;quot;) is used extensively to capture sets
implicit in noun phrases and clauses. DSETs Use the
inherent multiplicity of RoleSets to group together
several entities under a single Concept, and associate
determiners (definite/indefinite, quantifiers, etc.)
with such a set of entities. A DSET can express the
characteristics of a set of entities without enumerating
them explicitly, or even indicating how many members the
set is expected to have. RoleValueMaps allow
,constraints between DSETs to be expressed in a general
way -- a RoleValueMap expresses a subset or equality
relation between two RoleSets. Such relations can be
constructed without knowing in advance the cardinality
of the sets or any of their members.
Figure 4 illustrates the use of these structures to
express the intent of the sentence, &amp;quot;Show me states
S/NP, S/AUX, and S/DCL&amp;quot;*. DSE140035 represents the
interpretation of the noun phrase, &amp;quot;the states S/NP,
S/AUX, and S/DCL&amp;quot;. The generic DSET Concept has two
Roles, member and determiner. The member Role can be .
filled multiply, and therein lies the &amp;quot;settedness&amp;quot; of
the DSET. DSET#0035 has a particularized version of the
</bodyText>
<listItem confidence="0.6332258">
• RoleSets in this figure are drawn as squares with
circles around them. RoleSets with filled—in circles
are a special kind of particularized RoleSet that can
occur only in Individual Concepts. The RoleValueMap is
pictured as a diamond.
</listItem>
<figureCaption confidence="0.7800625">
Figure U. KLONE description of
&amp;quot;Show me states S/NP, S/AUX, and S/DCL&amp;quot;.
</figureCaption>
<bodyText confidence="0.999382136363636">
member Role: Role R1 represents the set of three states
mentioned in the noun phrase, as a group. Thus, the
Value Restriction of R1, STATE, applies to each member.
The three IRoles of SSET00035, connected by &amp;quot;Satisfies&amp;quot;
links to the particularized member RoleSet, indicate
that the particular states are the members of the set*.
The other DSET in the figure, 05E740037, represents the
clause—level structure of the sentence. The clause has
been interpreted into something like &amp;quot;the user has
performed what looks on the surface to be a request for
the system to Show the user some Set Of States&amp;quot;. This
captures several kinds of indeterminacy: (1) that the
sentence may only be a request at the surface level
(&amp;quot;Don&apos;t you know that pigs can&apos;t fly?&amp;quot; looks like a
request to infOrm), (2) that there is more than one way
to effect a &amp;quot;show&amp;quot; (&amp;quot;show&amp;quot; could mean redraw the entire
display, change it slightly to include a new object, or
simply highlight an existing one), (3) that it is not
clear how many operations are actually being requested
(showing three objects could take one, two, or three
actions). Therefore, the interpretation uses Generic
Concepts to describe the kind of events appearing in the
surface form of the sentence and makes no commitment to
the number of them requested. The only commitment to
&amp;quot;quantificational&amp;quot; information is expressed by the Role—
ValueMap. Its two pointers, X (pointing to the member
Role of ET00035) and Y** (pointing to the object of
• The Value Restriction, STATE, is redundant here, since
the members of this particular set were explicitly
specified (and are known to be states). In other cases,
the information is more useful. For example, no IRoles
would be constructed by the parser if the sentence were
&amp;quot;Are there three states?&amp;quot;: only one would be constructed
in &amp;quot;Show me state S/NP and its two nearest neighbors&amp;quot;.
On the other hand, no Value Restriction would be
directly present on Role R1 if the noun phrase were just
&amp;quot;S/NP, S/AUX. and S/DCL&amp;quot;.
** Y is a chained pointer going first through the member
Role of DSET/0037, then through the act Role of
S—REQUESTe0038, and finally to the object Role of
SH0W036. It is considered to refer to the set of
IRoles expressing the objects of all SHOW events
ultimately S—REQUESTed, when it is determined exactly
how many there are to be (i.e. when the IRoles of
</bodyText>
<page confidence="0.993692">
36
</page>
<bodyText confidence="0.968092730337079">
the requested act), indicate that the ultimate set of
things to be shown, no matter how many particular SHOW
events take place, must be the same as the set of
members in the noun phrase DSET (namely, the three
states).
As mentioned, semantic interpretation invokes the
discourse expert. This program looks to a plan that it
is hypothesizing its user to be following in order to
interpret indirect speech acts. Following [1], the
speech acts REQUEST, INFORM, INFORMREF, and INFORMIF are
defined as producing certain effects by means of the
hearer&apos;s recognition of the speaker&apos;s intention to
produce these effects. Indirect speech act recognition
proceeds by inferring what the user wants the system to
think is his/her plan. Plan-recognition involves making
inferences of the form, &amp;quot;the user did this action in
order to produce that effect, which s/he wanted to
enable him/her to do this (next) action&amp;quot;.
Making inferences at the level of &amp;quot;intended plan
recognition&amp;quot; is begun by analyzing the user&apos;s utterance
as a &amp;quot;surface&amp;quot; speech act (SURFACE-REQUEST or SURFACE..
INFORM) indicating what the utterance &amp;quot;looks like&amp;quot;. By
performing plan-recognition inferences whose
:plausibility is ascertained by using mutual beliefs, the
system can, for instance, reason that what looked to be
an INFORM of the user&apos;s goal is actually a REQUEST to
include some portion of the ATN into the display. Thus,
the second clause of the utterance, &amp;quot;No; I want to be
able to see S/AUX,&amp;quot; is analyzed as a REQUEST to INCLUDE
S/AUX by the following chain of plan-recognition
inferences:
The system believes
(1) the user has performed a SURFACE-INFORM of his/her
goal; thus
(2) the user intends for the system to believe that the
user wants to be able to see S/AUX. Since this
requires that S/AUX be visible,
(3) the user intends for the system to believe that the
user wants the system to plan an action to make
S/AUX visible. Because the &amp;quot;No&amp;quot; leads to an
expectation that the user might want to modify the
display, the system plans to INCLUDE S/AUX in the
existing display, rather than DISPLAY S/AUX alone.
(4) Hence, the user intends for the system to believe
that user wants the system to INCLUDE S/AUX.
(5) The user has performed a REQUEST to INCLUDE.
The system responds by planning that action.
In addition to using Contexts to hold descriptions of
beliefs and wants, the plan-recognition process makes
extensive use of RoleValueMaps and DSETs (see Figure 4).
Plan-recognition inferences proceed using just the
clause-level structur* and pay no attention to the
particulars of the noun phrase interpretations. The
system creates new DSETs for intermediate sets and
equates them to previous ones by RoleValueMaps, as, for
example, when it decides to do a SHOW whose object is to
be the same as whatever was to be visible. At the end
of plan-recognition the system may need to trace through
the constructed RoleValueMaps to find all sets
equivalent to a given one. For instance, when it
determines that it needs to know which set of things to
display, highlight, or include, it treats the equated
RoleValueMaps as a set of rewrite rules, traces back to
the original noun phrase DSET, and then tries to finds
the referent of that DSET.
DSET00037 are finally specified). Thus, if there are
ultimately two SHOWS, one of one state and the other of
two, the Y pointer implicitly refers to the set of all
three states shown.
• The system only finds referents when necessary. This
depends on the user&apos;s speech acts and the system&apos;s needs
in understanding and complying with them. Thus, it is
Finally, not only are parse structures and semantic
interpretations represented in KLONE, but the data base
-- the ATN being discussed -- is as well (see Figure 2
above). Further, descriptions of how to display the
ATN, and general descriptions of coordinate mappings and
other display information are represented too. Commands
to the display expert are expressed as Concepts
involving actions like SHOW, CENTER, etc. whose
&amp;quot;arguments&amp;quot; are descriptions of desired shapes, etc.
Derivations of particular display forms from generic
descriptions, or from mapping changes, are carried out
by the attached procedure mechanism. Finally, once the
particular shapes are decided upon, drawing is achieved
by invoking &amp;quot;how to draw&amp;quot; procedures attached to display
form Concepts. Once again, the taxonomic nature of the
structured inheritance net allows domain structure to be
expressed in a natural and useful way.
</bodyText>
<sectionHeader confidence="0.995723" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999905">
The prototype natural language system was the result of
a tremendous effort by several people: Rusty Bobrow was
responsible for the parser and syntactic taxonomy,
although his support in design and implementation of
KLONE was as extensive and as important; Phil Cohen
designed and built the discourse/speech act component
that does all of the inference in the system; Jack
Klovstad did the graphics, building on an existing
system (AIPS) built by Norton Greenfeld, Martin Yonke,
Eugene Ciccarelli, and Frank Zdybel. Finally, Bill
Woods built a pseudo-English input parser that allowed
Us to easily build complex KLONE structures with a
minimum of effort. Many thanks to Phil Cohen, Candy
Sidner, and Bonnie Webber for help with this paper.
This research was supported by the Advanced Research
Projects Agency of the Department of Defense and was
monitored by ONR under Contract No. N00014-77-C-0378.
</bodyText>
<sectionHeader confidence="0.999142" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.947824076923077">
[11 Allen, James F. A Plan-based Approach to Speech Act
Recognition. Technical Report No. 131/79. Toronto,
Ontario: Dept. of Computer Science, University of
Toronto, February 1979.
(2) Bobrow, R. J. The RUS System. In Research in
Natural Language Understanding: Quarterly Progress
Report No. 3 (1 March 1978 to 31 May 1978). BBN
Report No. 3878. Cambridge, MA: Bolt Beranek and
Newman Inc., July 1978.
[3] Brachman, R. J. A Structural Paradigm for
Representing Knowledge. Ph.D. Dissertation,
Harvard University, Cambridge, MA, May 1977. Also
BBN Report No. 3605. Cambridge, MA: Bolt Beranek
and Newman Inc., May 1978.
[4] Burton, R. R. Semantic Grammar: An Engineering
Technique for Constructing Natural Language
Understanding Systems. BBN Report No. 3453.
Cambridge, MA: Bolt Beranek and Newman Inc..
December, 1976.
• [5] Woods, W. A., Kaplan, R. M., and Nash-Webber, B. The
Lunar Sciences Natural Language Information System:
Final Report. BBN Report No. 2378. Cambridge, MA:
Bolt Beranek and Newman Inc., 1972.
intended that a naming speech act like &amp;quot;Call that the
complement network&amp;quot; will not cause a search for the
referent of &amp;quot;the complement network&amp;quot;.
</reference>
<page confidence="0.999451">
37
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.097065">
<title confidence="0.999084">Taxonomy, Descriptions, and Individuals in Natural Language Understanding</title>
<author confidence="0.999998">Ronald J Brachman</author>
<affiliation confidence="0.716369">Bolt Beranek and Newman Inc.</affiliation>
<abstract confidence="0.997818420959149">KLONE is a general-purpose language for representing conceptual information. Several of its prominent features -semantically clean inheritance of structured descriptions, taxonomic classification of generic knowledge, intensional structures for functional roles (including the possibility of multiple fillers), and procedural attachment (with automatic invocation) -make it particularly useful in computer-based natural language understanding. We have implemented a prototype natural language system that uses KLONE extensively in several facets of its operation. This paper describes the system and points out some of the benefits of using KLONE for representation in natural language processing. Our system is the beneficiary of two kinds of advantage from KLONE. First, the taxonomic character of the inheritance net facilitates the processing involved in analyzing and responding to an utterance. In particular, (1) it helps guide parsing by ruling out semantically meaningless paths, (2) it provides a general way of organizing and invoking semantic interpretation rules, and (3) it allows algorithmic determination of equivalent sets of entities for certain plan-recognition inferences. Second, KLONE&apos;s structurecaptures vmne of the subtleties of natural language expression. That is, it provides a general way of representing exactly the quantificational import of a sentence without overcommitting the interpretation to scope or multiplicity not overtly specified. The paper first presents a brief overall description of the natural language system. Then, prior to describing we in the system, we discuss some of the language&apos;s features at a general level. Finally we look in detail at how KLONE affords us the advantages listed above. 1. THE TASK AND THE SYSTEM Generally speaking, we want to provide a natural interface to a subsystem that knows how to present conceptual information intelligently (on a bit-map display) -in this case the Augmented Transition Network (ATN) grammar from tohe LUNAR system [57. The information presentation subsystem allows flexible specification of coordinate system mappings, including rectangular windows, from parts of the ATN onto a sequence of &amp;quot;view surfaces&amp;quot;. Object types can be assigned arbitrary presentation forms (graphic or alphanumeric), which can be modified in particular cases. Parts of the grammar are displayed according to standing orders and special requests about shape and projection. Our task is to command and control the intelligent graphics subsystem through natural language. For example, a sample dialogue with the system might include this sequence of utterances: (1) Show me the clause level network. [System displays states and arcs of the S/ network) (2) Show me S/NP. [System highlights state S/NP] (3) Focus in on the preverbal constituents. [System shifts scale and centers the display on the preverbal states] (4) No. I want to be able to see S/AUX. [System &amp;quot;backs off&amp;quot; display so as to include state 5/AUX] At the same time, we would like to ask factual questions about the states, arcs, etc. of the ATN (e.g. &amp;quot;What are the conditions on this &lt;user points&gt; arc?&amp;quot;). Questions and commands addressed to the system typically (1) make use of elements of the preceding dialogue, (2) can be expressed indirectly so that the surface form does not reflect the real intent, and (3) given our graphical presentation system, can make reference to a shared nonlinguistic context. The issues of anaphora, (indirect) speech acts, and deixis are thus of principal concern. The natural language system is organized as illustrated in Figure 1*. The user sits at a bit-map terminal VISrLAI eVrCV equipped with a keyboard and a pointing device. Typed input from the keyboard (possibly interspersed with coordinates from the pointing device) is analyzed by a of the RUS System[2] -an ATN-based incremental parser that is closely coupled with a &amp;quot;case-frame dictionary&amp;quot;. In our system, this dictionary is embodied in a syntactic taxonomy represented in KLONE. The parser produces a KLONE representation of the syntactic structure of an utterance. Incrementally along with its production, this syntactic structure triggers the creation of an interpretation. The interpretation structure -the literal (sentential) semantic content of the utterance -is then processed by a discourse expert that attempts to determine what was really meant. In this process, anaphoric expressions must be resolved and indirect speech acts recognized. Finally, on the basis of what is determined to be the intended force of * Dashed elements of the figure are proposed but not yet implemented. PINOTm&amp; WM* ketP.17 ce&amp;quot;vor 1 ^ i f.x.PeRT - - ALl&amp;quot; €1Cfter ; LoNctrImm- AIWA&apos; NmemnA4 CO 6mumnpu. .,4 1•KolimAtos tragr Se &apos;MO , ftbrA Figure 1. System structure (highlighting types of knowledge involved). UWLAN RO5 fAgSf-g. 33 the utterance, the discourse component decides how the system should respond. It plans its own speech or display actions, and passes them off to the language generation component (not yet implemented) or display expert. Some of these operations will be discussed in detail in Section 2. THE REPRESENTATION LANGUAGE we look at details of the system&apos;s KLONE, we briefly sketch out some of its cogent features. uniform language for the explicit representation of natural language conceptual based on the idea of inheritance networks[3]. principal representational elements KLONE are Concepts,of which there are two major types -- Generic and Individual. Generic Concepts are arranged in an inheritance structure, expressing long-term generic knowledge as a taxonomy*. A single Concept is a template,from which individual descriptions (in the form of Individual are formed. Generic Concepts can be built specializations of other Generic Concepts, to which they attached by inheritanceCables. These Cables form the backbone of the network (a Generic Concept can have many &amp;quot;superConcepts&amp;quot; as well as many &amp;quot;subConcepts&amp;quot;). They carry structured descriptions from a Concept to its subConcepts. KLONE Concepts are highly structured objects. A inherits a structureddefinition from its parent** and can modify it in a number of structurally consistent ways. The main elements of the structure are Roles, which express relationships between a Concept and other closely associated Concepts (i.e. its properties, parts, etc.). Roles themselves have structure, including descriptions of potential fillers***, modality information, and names****. There are basically two of Roles in KLONE: RoleSetsand &apos;Roles. RoleSets potentially many fillers (e.g. the Role***** of a particular COMPANY would be filled once for each officer). A RoleSet has as part of its internal structure a restriction on the number of possible fillers it can have in any particular instance. A RoleSet on an Individual Concept stands for the particular set of fillers for that particular Concept. An IRole (for Instance Role) appears on an Individual Concept to express the binding of a particular value to the Role it plays in that Concept. (There would be exactly one IRole for each officer slot of a particular company, regardless of the actual number of people playing those roles.) * The network is a partial ordering with a topmost element -the Concept of an INDIVIDUAL -below which all other Concepts appear. There is no &amp;quot;least&amp;quot; element in the net, whose fringe is composed of Individual Concepts not related to each other. This inheritance implies inter alia that, if STATE a subConcept of ATN-CONSTITUENT, then any particular is definitionalso an ATN constituent. *** These limitations on the form of particular fillers are called &amp;quot;Value Restrictions&amp;quot; (V/R&apos;s). If more than one V/R is applicable at a given Role, the restrictions are taken conjunctively. **** Names are not used by the system in any way. They are merely conveniences for the user. In the text that follows. Roles will be indicated as underlined names and Concepts will be indicated by all upper case expressions. There are several inter-Role relationships in KLONE. relate the Roles of a Concept of a superConcept. Such relationships are carried in the inheritance Cables mentioned earlier. They include restriction (of filler description and number); e.g. that a particular kind of COMPANY will have exactly officers,all of whom must be over 45; this is a relationship between RoleSets, in which the more restricted RoleSet has all of the properties of the one it restricts, with its own local restrictions added conjunctively; differentiation (of a Role into subRoles); e.g. the officersof a COMPANY into vice-president,etc.; this is also a relationship between two RoleSets carrying inheritance -the more specific Roles inherit all properties of the parent Role except for the number restriction; particularization (of a RoleSet for an Individual e.g. the officersof BBN are all COLLEGE-GRADUATEs; satisfaction (binding of a particular filler description into a particular Role in an Individual e.g. the presidentof BBN is STEVE-LEVY: this is the relationship between an IRole and its parent RoleSet. Figure 2 illustrates the use of Cables and the structure Figure 2. A piece of a KLONE taxonomy. of Concepts in a piece of the KLONE taxonomy for the ATN grammar. In this figure, Concepts are presented as ellipses (Individual Concepts are shaded), Roles as small squares (IRoles are filled in), and Cables as double-lined arrows. The most general Concept. ATN-CONSTITUENT, has two subConcepts -- STATE and ARC. These each inherit the general properties of ATN constituents, namely, each is known to have a 34 displayFormassociated with it. The subnetwork below ARC expresses the classification of the various types of arcs in the ATN and how their conceptual structures For example, a CONNECTING-ARC has a (the state in which the transition leaves the parsing process), while for POP-ARCs the term is not meaningful there is no nextStateRole). Links that connect the Roles of more specific Concepts with corresponding Roles in their parent Concepts are considered to travel through the appropriate Cables. Finally, the structure of an Individual Concept is illustrated by CATARC#0117. Each IRole expresses the filling of a Role inherited from the hierarchy above -because CATARC00117 is a it has a category;because it is also a it has a nextState,etc. The structure of a Concept is completed by its set of Descriptions(SD&apos;s). These express how the of the Concept interrelate via the parameterized versions (&amp;quot;ParaIndividuals&amp;quot;) of other Concepts in the network to describe quantified relations between the ultimate fillers of the Concept&apos;s Roles. The quantification is expressed in terms of set mappings between the RoleSets of a Concept, thereby quantifying over their sets of fillers. In addition to quantified relations between potential Role fillers, simple relations like subset and set equality can be expressed a special kind of SD a &amp;quot;RoleValueMap&amp;quot; (e.g. relation that &amp;quot;the objectof the preconditionof a is the same as the object effect&amp;quot;).SD&apos;s are inherited through cables and are particularized in a manner similar to that of Roles. There is one important feature of KLONE that I would like to point out, although it is not yet used in the natural language system. The language carefully distinguishes between purely descriptional structure and assertions about coreference, existence, etc. All of the structure mentioned above (Concepts, Roles, SD&apos;s and is definitional.A separate construct called a Nexusis a used as a locus of coreference for Individual Concepts. One expresses coreference of description relative to a Context by placing a Nexus in that Context and attaching to it Individual Concepts considered to be coreferential. All assertions are made relative to a Context, and thus do not affect the (descriptive) taxonomy of generic knowledge. We anticipate that Nexuses will be important in reasoning about particulars, answering questions (especially in deciding the appropriate form for an answer), and resolving anaphoric expressions, and that Contexts will be of use in reasoning about hypotheticals, beliefs, and wants. The final feature of KLONE relevant to our particular application is the ability to attach procedures and data to structures in the network. The attached procedure mechanism is implemented in a very general way. Procedures are attached to KLONE entities by &amp;quot;interpretive hooks&amp;quot; (ihooks), which specify the set of situations in which they are to be triggered. An interpreter function operating on a KLONE entity causes the invocation of all procedures inherited by or directly attached to that entity by ihnnks whose situations match the intent of that function. Situations include things like &amp;quot;Individuate&amp;quot;, &amp;quot;Modify&amp;quot;, &amp;quot;Create&amp;quot;, &amp;quot;Remove&amp;quot;, etc. In addition to a general situation, an ihook specifies when in the execution of the interpreter function it is to be invoked (PRE-, POST-, or WHEN-). OF KLONE IN THE NATURAL LANGUAGE SYSTEM The previous section described the features of KLONE in general terms. Here we illustrate how they facilitate the performance of our natural language system. (Figure 1 above sketched the places within the system of the various KLONE knowledge bases discussed here.) We will the use of a syntactic taxonomy to and index semantic interpretation rules, used in the interface to the literal semantic content of utterance. parser uses KLONE to describe syntactic taxonomy of syntactic with Concepts like PHRASE, and PERSON-WORD, is to express how built from their The taxonomy as a discrimination allowing common features of constituent types to be expressed in a single place, and distinguishing features to cause branching into separate subnets. Two benefits accrue from this organization of knowledge. First, shallow semantic constraints are expressed in the SD&apos;s of Concepts like For the prepObject)f must be a PLACE-NOUN. A description of &amp;quot;on Al&amp;quot; (as in &amp;quot;book on Al&amp;quot;) as a LOCATION-PP could not be constructed since Al does not satisfy the value restriction for the head role. Such constraints help rule out misleading parse paths, in the manner of a semantic grammar [4], by refusing to construct semantically anomalous constituent descriptions. In conjun-tinn with the general (ATN) grammar of English, this is a powerful guidance mechanism which helps parsing proceed close to deterministically (21. the syntactic taxonomy as a structure on which to hang semantic projection rules. Since the taxonomy is an inheritance structure, the description of a given syntactic constituent inherits all semantic interpretation rules appropriate for each of the more general constituent types that it specializes, and can have its own special-purpose rules as well. In the example above, simply by virtue of its placement in the taxonomy, the Concept for &amp;quot;on Al&amp;quot; would inherit rules relevant to PP&apos;s in general and to SUBJECT-PP&apos;s in particular, but not those appropriate to LOCATION-PP&apos;s. perse is achieved using the attached procedure facility, with semantic projection rules expressed as functions attached to Roles of the syntactic Concepts. The functions specify how to translate pieces of syntactic structure into &amp;quot;deeper&amp;quot; Concepts and For example, the ,subjectof a SHOW-PHRASE might into the agentof a DISPLAY action. The mapping rules are triggered automatically by the KLONE interpreter. This is facilitated by the interpreter&apos;s &amp;quot;pushing down&amp;quot; a Concept to the most specific place it can be considered to belong in the taxonomy (using only &amp;quot;analytic&amp;quot;, definitional constraints). Figure 3 illustrates schematically the way a Concept can descend to the most specific level implied by its internal description. The Concept being added to the network is an NP whose head is &amp;quot;ARC&amp;quot; and modifieris &amp;quot;PUSH&amp;quot; (NPti0023). It is initially considered a direct (Generic) subConcept of the Concept for its basic syntactic type (NP). Its Role structure, however, implies that it in fact belongs in a more restricted subclass of NP&apos;s, that is, TYPED-ARC-NP (an whose head is an ARC-NOUN and whose modifieris an ARC-TYPE-WORD). The interpreter, on the basis of only definitional constraints expressed in the network, places the new Concept below its &amp;quot;most specific subsumer&amp;quot; -the proper place for it in the taxonomy. The process proceeds incrementally, with each new piece of the constituent possibly causing further descent. In this case, NP@O023 would initially only have its head Role specified, and on that basis, it would be placed under ARC-NP (which is &amp;quot;an NP whose head is an Then the parser would add the specification, causing the Concept&apos;s descent to the place shown in the right half of Figure constituent whose description is being added to network is &amp;quot;popped&amp;quot; in the parser, its KLONE description 35 Concept descent. individuated-causing the invocation of all &amp;quot;WHEN— Individuated&amp;quot; attached procedures inherited through superConcept Cables. These procedures cause an interpretation for the constituent to be built on the basis of the interpretations of component parts of the syntactic description. This literal semantic interpretation of a phrase -also a KLONE structure -is the &amp;quot;input&amp;quot; to the discourse component. An important element of this interface between the syntactic processor and the discourse component is that the parser/interpreter commits itself only to information explicitly present in the input phrase, and leaves all inference about quantifier scope, etc. to the discourse expert. Two kinds of representa— tional structures support this. The Concept DSET (for &amp;quot;determined set&amp;quot;) is used extensively to capture sets implicit in noun phrases and clauses. DSETs Use the inherent multiplicity of RoleSets to group together several entities under a single Concept, and associate determiners (definite/indefinite, quantifiers, etc.) with such a set of entities. A DSET can express the characteristics of a set of entities without enumerating them explicitly, or even indicating how many members the set is expected to have. RoleValueMaps allow ,constraints between DSETs to be expressed in a general way -a RoleValueMap expresses a subset or equality relation between two RoleSets. Such relations can be constructed without knowing in advance the cardinality of the sets or any of their members. Figure 4 illustrates the use of these structures to express the intent of the sentence, &amp;quot;Show me states S/NP, S/AUX, and S/DCL&amp;quot;*. DSE140035 represents the interpretation of the noun phrase, &amp;quot;the states S/NP, S/AUX, and S/DCL&amp;quot;. The generic DSET Concept has two member and determiner.The member Role can be . filled multiply, and therein lies the &amp;quot;settedness&amp;quot; of the DSET. DSET#0035 has a particularized version of the • RoleSets in this figure are drawn as squares with circles around them. RoleSets with filled—in circles are a special kind of particularized RoleSet that can occur only in Individual Concepts. The RoleValueMap is pictured as a diamond. Figure U. KLONE description of &amp;quot;Show me states S/NP, S/AUX, and S/DCL&amp;quot;. member Role: Role R1 represents the set of three states mentioned in the noun phrase, as a group. Thus, the Value Restriction of R1, STATE, applies to each member. The three IRoles of SSET00035, connected by &amp;quot;Satisfies&amp;quot; links to the particularized member RoleSet, indicate that the particular states are the members of the set*. The other DSET in the figure, 05E740037, represents the clause—level structure of the sentence. The clause has been interpreted into something like &amp;quot;the user has performed what looks on the surface to be a request for the system to Show the user some Set Of States&amp;quot;. This captures several kinds of indeterminacy: (1) that the sentence may only be a request at the surface level (&amp;quot;Don&apos;t you know that pigs can&apos;t fly?&amp;quot; looks like a request to infOrm), (2) that there is more than one way to effect a &amp;quot;show&amp;quot; (&amp;quot;show&amp;quot; could mean redraw the entire display, change it slightly to include a new object, or simply highlight an existing one), (3) that it is not clear how many operations are actually being requested (showing three objects could take one, two, or three actions). Therefore, the interpretation uses Generic Concepts to describe the kind of events appearing in the surface form of the sentence and makes no commitment to the number of them requested. The only commitment to &amp;quot;quantificational&amp;quot; information is expressed by the Role— ValueMap. Its two pointers, X (pointing to the member of ET00035) and Y** (pointing to the objectof • The Value Restriction, STATE, is redundant here, since the members of this particular set were explicitly (and to be states). In other cases, the information is more useful. For example, no IRoles would be constructed by the parser if the sentence were &amp;quot;Are there three states?&amp;quot;: only one would be constructed in &amp;quot;Show me state S/NP and its two nearest neighbors&amp;quot;. On the other hand, no Value Restriction would be directly present on Role R1 if the noun phrase were just &amp;quot;S/NP, S/AUX. and S/DCL&amp;quot;. ** Y is a chained pointer going first through the member Role of DSET/0037, then through the act Role of and finally to the objectRole of SH0W036. It is considered to refer to the set of IRoles expressing the objects of all SHOW events ultimately S—REQUESTed, when it is determined exactly how many there are to be (i.e. when the IRoles of 36 the requested act), indicate that the ultimate set of things to be shown, no matter how many particular SHOW events take place, must be the same as the set of members in the noun phrase DSET (namely, the three states). As mentioned, semantic interpretation invokes the discourse expert. This program looks to a plan that it is hypothesizing its user to be following in order to interpret indirect speech acts. Following [1], the speech acts REQUEST, INFORM, INFORMREF, and INFORMIF are defined as producing certain effects by means of the hearer&apos;s recognition of the speaker&apos;s intention to produce these effects. Indirect speech act recognition proceeds by inferring what the user wants the system to think is his/her plan. Plan-recognition involves making inferences of the form, &amp;quot;the user did this action in order to produce that effect, which s/he wanted to enable him/her to do this (next) action&amp;quot;. Making inferences at the level of &amp;quot;intended plan recognition&amp;quot; is begun by analyzing the user&apos;s utterance as a &amp;quot;surface&amp;quot; speech act (SURFACE-REQUEST or SURFACE.. INFORM) indicating what the utterance &amp;quot;looks like&amp;quot;. By performing plan-recognition inferences whose :plausibility is ascertained by using mutual beliefs, the system can, for instance, reason that what looked to be an INFORM of the user&apos;s goal is actually a REQUEST to include some portion of the ATN into the display. Thus, the second clause of the utterance, &amp;quot;No; I want to be able to see S/AUX,&amp;quot; is analyzed as a REQUEST to INCLUDE S/AUX by the following chain of plan-recognition inferences: The system believes (1) the user has performed a SURFACE-INFORM of his/her goal; thus (2) the user intends for the system to believe that the user wants to be able to see S/AUX. Since this requires that S/AUX be visible, (3) the user intends for the system to believe that the user wants the system to plan an action to make S/AUX visible. Because the &amp;quot;No&amp;quot; leads to an expectation that the user might want to modify the display, the system plans to INCLUDE S/AUX in the existing display, rather than DISPLAY S/AUX alone. (4) Hence, the user intends for the system to believe that user wants the system to INCLUDE S/AUX. (5) The user has performed a REQUEST to INCLUDE. The system responds by planning that action. In addition to using Contexts to hold descriptions of beliefs and wants, the plan-recognition process makes extensive use of RoleValueMaps and DSETs (see Figure 4). Plan-recognition inferences proceed using just the clause-level structur* and pay no attention to the particulars of the noun phrase interpretations. The system creates new DSETs for intermediate sets and equates them to previous ones by RoleValueMaps, as, for when it decides to do a SHOW whose objectis be the same as whatever was to be visible. At the end of plan-recognition the system may need to trace through the constructed RoleValueMaps to find all sets equivalent to a given one. For instance, when it determines that it needs to know which set of things to display, highlight, or include, it treats the equated RoleValueMaps as a set of rewrite rules, traces back to the original noun phrase DSET, and then tries to finds the referent of that DSET. DSET00037 are finally specified). Thus, if there are ultimately two SHOWS, one of one state and the other of two, the Y pointer implicitly refers to the set of all three states shown. • The system only finds referents when necessary. This depends on the user&apos;s speech acts and the system&apos;s needs in understanding and complying with them. Thus, it is Finally, not only are parse structures and semantic represented in KLONE, but the data -the ATN being discussed -is as well (see Figure 2 above). Further, descriptions of how to display the ATN, and general descriptions of coordinate mappings and other display information are represented too. Commands to the display expert are expressed as Concepts involving actions like SHOW, CENTER, etc. whose &amp;quot;arguments&amp;quot; are descriptions of desired shapes, etc. Derivations of particular display forms from generic descriptions, or from mapping changes, are carried out by the attached procedure mechanism. Finally, once the particular shapes are decided upon, drawing is achieved by invoking &amp;quot;how to draw&amp;quot; procedures attached to display form Concepts. Once again, the taxonomic nature of the structured inheritance net allows domain structure to be expressed in a natural and useful way. Acknowledgements The prototype natural language system was the result of a tremendous effort by several people: Rusty Bobrow was responsible for the parser and syntactic taxonomy, although his support in design and implementation of KLONE was as extensive and as important; Phil Cohen designed and built the discourse/speech act component that does all of the inference in the system; Jack Klovstad did the graphics, building on an existing system (AIPS) built by Norton Greenfeld, Martin Yonke, Eugene Ciccarelli, and Frank Zdybel. Finally, Bill Woods built a pseudo-English input parser that allowed easily build complex KLONE structures with a minimum of effort. Many thanks to Phil Cohen, Candy Sidner, and Bonnie Webber for help with this paper.</abstract>
<note confidence="0.967325178571429">This research was supported by the Advanced Research Projects Agency of the Department of Defense and was monitored by ONR under Contract No. N00014-77-C-0378. References [11 Allen, James F. A Plan-based Approach to Speech Act Recognition. Technical Report No. 131/79. Toronto, Ontario: Dept. of Computer Science, University of Toronto, February 1979. (2) Bobrow, R. J. The RUS System. In Research in Natural Language Understanding: Quarterly Progress No. March 1978 to 31 May 1978). BBN Report No. 3878. Cambridge, MA: Bolt Beranek and Newman Inc., July 1978. [3] Brachman, R. J. A Structural Paradigm for Representing Knowledge. Ph.D. Dissertation, Harvard University, Cambridge, MA, May 1977. Also BBN Report No. 3605. Cambridge, MA: Bolt Beranek and Newman Inc., May 1978. [4] Burton, R. R. Semantic Grammar: An Engineering Technique for Constructing Natural Language Systems. BBN Report No. Cambridge, MA: Bolt Beranek and Newman Inc.. December, 1976. • [5] Woods, W. A., Kaplan, R. M., and Nash-Webber, B. The Lunar Sciences Natural Language Information System: Final Report. BBN Report No. 2378. Cambridge, MA: Bolt Beranek and Newman Inc., 1972. intended that a naming speech act like &amp;quot;Call that the</note>
<abstract confidence="0.714888">complement network&amp;quot; will not cause a search for the referent of &amp;quot;the complement network&amp;quot;.</abstract>
<intro confidence="0.693021">37</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>A Plan-based Approach to Speech Act Recognition.</title>
<date>1979</date>
<tech>Technical Report No. 131/79.</tech>
<institution>Dept. of Computer Science, University of Toronto,</institution>
<location>Toronto, Ontario:</location>
<marker>1979</marker>
<rawString>[11 Allen, James F. A Plan-based Approach to Speech Act Recognition. Technical Report No. 131/79. Toronto, Ontario: Dept. of Computer Science, University of Toronto, February 1979.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R J Bobrow</author>
</authors>
<title>The RUS System. In Research in Natural Language Understanding: Quarterly Progress Report No.</title>
<date>1978</date>
<tech>BBN Report No. 3878.</tech>
<volume>3</volume>
<issue>1</issue>
<institution>Bolt Beranek and Newman Inc.,</institution>
<location>Cambridge, MA:</location>
<note>to</note>
<marker>Bobrow, 1978</marker>
<rawString>(2) Bobrow, R. J. The RUS System. In Research in Natural Language Understanding: Quarterly Progress Report No. 3 (1 March 1978 to 31 May 1978). BBN Report No. 3878. Cambridge, MA: Bolt Beranek and Newman Inc., July 1978.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R J Brachman</author>
</authors>
<title>A Structural Paradigm for Representing Knowledge.</title>
<date>1977</date>
<tech>Ph.D. Dissertation,</tech>
<institution>Harvard University,</institution>
<location>Cambridge, MA,</location>
<marker>Brachman, 1977</marker>
<rawString>[3] Brachman, R. J. A Structural Paradigm for Representing Knowledge. Ph.D. Dissertation, Harvard University, Cambridge, MA, May 1977. Also BBN Report No. 3605. Cambridge, MA: Bolt Beranek and Newman Inc., May 1978.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R R Burton</author>
</authors>
<title>Semantic Grammar: An Engineering Technique for Constructing Natural Language Understanding Systems.</title>
<date>1976</date>
<tech>BBN Report No. 3453.</tech>
<institution>Bolt Beranek and Newman Inc..</institution>
<location>Cambridge, MA:</location>
<marker>Burton, 1976</marker>
<rawString>[4] Burton, R. R. Semantic Grammar: An Engineering Technique for Constructing Natural Language Understanding Systems. BBN Report No. 3453. Cambridge, MA: Bolt Beranek and Newman Inc.. December, 1976.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W A Woods</author>
<author>R M Kaplan</author>
<author>B Nash-Webber</author>
</authors>
<title>The Lunar Sciences Natural Language Information System: Final Report.</title>
<date>1972</date>
<tech>BBN Report No. 2378.</tech>
<institution>Bolt Beranek and Newman Inc.,</institution>
<location>Cambridge, MA:</location>
<marker>Woods, Kaplan, Nash-Webber, 1972</marker>
<rawString>• [5] Woods, W. A., Kaplan, R. M., and Nash-Webber, B. The Lunar Sciences Natural Language Information System: Final Report. BBN Report No. 2378. Cambridge, MA: Bolt Beranek and Newman Inc., 1972.</rawString>
</citation>
<citation valid="false">
<title>intended that a naming speech act like &amp;quot;Call that the complement network&amp;quot; will not cause a search for the referent of &amp;quot;the complement network&amp;quot;.</title>
<marker></marker>
<rawString>intended that a naming speech act like &amp;quot;Call that the complement network&amp;quot; will not cause a search for the referent of &amp;quot;the complement network&amp;quot;.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>