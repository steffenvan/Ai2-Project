<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000006">
<title confidence="0.992529">
Less is More:
Using a Single Knowledge Representation in Dialogue Systems
</title>
<author confidence="0.794744">
Iryna Gurevych , Robert Porzel , Elena Slinko , Norbert Pfleger , Jan Alexandersson , Stefan Merten*
</author>
<affiliation confidence="0.657861">
European Media Laboratory
</affiliation>
<address confidence="0.7752095">
Schloss-Wolfsbrunnenweg 31c
69118 Heidelberg, Germany
</address>
<email confidence="0.992963">
gurevych,porzel,slinko@eml.org
</email>
<note confidence="0.568774">
DFKI GmbH
</note>
<address confidence="0.7522065">
Stuhlsatzenhausweg 3
66123 Saarbr¨ucken, Germany
</address>
<email confidence="0.989514">
pfleger,janal @dfki.de
</email>
<note confidence="0.721691">
*DFKI GmbH
</note>
<address confidence="0.6364465">
Erwin-Schr¨odinger-Str.57
67608 Kaiserslautern, Germany
</address>
<email confidence="0.997471">
merten@dfki.de
</email>
<sectionHeader confidence="0.993863" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9998644">
The approach to knowledge representation
taken in a multi-modal multi-domain dialogue
system - SMARTKOM - is presented. We fo-
cus on the ontological and representational is-
sues and choices helping to construct an ontol-
ogy, which is shared by multiple components of
the system, can be re-used in different projects
and applied to various tasks. Finally, examples
highlighting the usefulness of our approach are
given.
</bodyText>
<sectionHeader confidence="0.998798" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999938314285714">
The ways in which knowledge has been represented in
multi-modal dialogue systems (MMDS) show that indi-
vidual representations with different semantics and het-
erogeneously structured content can be found in vari-
ous formats within single natural language processing
(NLP) systems and applications. For example, a typi-
cal NLP system, such as TRAINS (Allen et al., 1996),
employs different knowledge representations for parsing,
action planning and generation, despite the fact that what
is being represented is common to all those representa-
tions, e. g., the parser representation for going from A to
B has no similarity to the action planner’s representation
thereof (Ferguson et al., 1996). Also central concepts, for
example city, are represented in multiple ways through-
out the system.
The origin for this state of affairs is that the respective
knowledge stores are hand-crafted individually for each
task. Sometimes they are compiled into code and cease
to be externally available. Where an explicit knowledge
representation is used, we find a multitude of formats and
inference engines, which often cause both performance
and tractability problems. In this paper we introduce the
results of an effort to employ a single knowledge repre-
sentation, i. e., an ontology, throughout a complete multi-
modal dialogue system. Therefore, we will describe the
underlying modeling principles and the benefits of such
a rigorously crafted knowledge store for the actual and
future MMDS.
In Section 2 we will introduce the representational for-
mats pertinent to our ontology, followed by a description
of our dialogue system in Section 3. In Section 4 we
discuss the modeling principles underlying the ontology.
Section 5 presents some examples of the various ways in
which the common ontology is employed throughout the
system. Concluding remarks are given in Section 6.
</bodyText>
<sectionHeader confidence="0.963504" genericHeader="method">
2 The Representational Formalism Used
</sectionHeader>
<bodyText confidence="0.999738615384615">
Here we give a brief outline of the formalism pertinent
to the following description of the ontology. Efforts
originating in various W3C and Semantic Web projects
brought about several knowledge modeling standards:
Resource Description Framework (RDF), DARPA Agent
Mark-up Language (DAML), Ontology Interchange Lan-
guage (OIL), Web Ontology Language (OWL).1 Domain
and discourse knowledge represented in the ontology
may be encoded using XML-based semantic mark-up
languages, such as OIL, or DAML+OIL. In the work re-
ported here, we used an ontology defined in the OIL-
RDFS syntax. A detailed characterization of the for-
mal properties of the OIL language can be found in
Fensel et al. (2001). The FACT2 system can be used as
a reasoning engine for OIL ontologies, providing some
automated reasoning capabilities, such as class consis-
tency or subsumption checking. Graphical ontology en-
gineering front-ends and visualization tools are available
for editing, maintaining, and visualizing the ontology.3
The semantics of OIL is based on description logic ex-
tended with concrete datatypes. The language employs a
combination of frame- and description logic. It provides
most of the modeling primitives commonly used in the
frame-based knowledge representation systems. Frames
are used to represent concepts. These frames consist of
a collection of classes along with a list of slots and at-
</bodyText>
<footnote confidence="0.994869285714286">
1See www.w3c.org/RDF, www.ontoknowledge.org/oil,
www.daml.org and http://www.w3.org/2001/sw/WebOnt/ for
the individual specifications.
2See also www.cs.man.ac.uk/ horroks/FaCT/.
3See OilEd (oiled.man.ac.uk) for editing and
FrodoRDFSViz (www.dfki.uni-kl.de/frodo/RDFSViz) for
visualization.
</footnote>
<bodyText confidence="0.999889472222222">
tributes. Under the term class or class expression a class
name, or an enumeration, or a property-restriction, or a
boolean combination of class expressions is to be under-
stood. Slots are interpreted as a collection of properties.
They are divided into those that relate classes to other
classes (so called object properties) and those that relate
classes to datatype values (so called datatype properties).
Slots can be filled by: class names, names of the atomic
elements, collection of the above (conjunctive sets - and,
disjunctive sets - or, or negation - not), concrete datatypes
(integers and strings).
Then, domain and range restrictions of the slots can
be defined. Domain restriction asserts that the property
only applies to the instances of particular class expres-
sions. Range restriction specifies that a property only as-
sumes values that are instances of the respective class ex-
pressions. Slot fillers can have several types of further
constraints, also called facets. These include value-type
restrictions (all fillers must be of a particular class), has-
value restrictions (there must be at least one filler of a
particular class). The value-type restriction corresponds
to the universal quantifier of the predicate logic. The has-
value restriction is analogous to the existential quantifier.
Another constraint on the slot fillers is cardinality, which
limits the number of possible fillers of the given class.
Atomic elements or individuals can also be associated
with a class definition via slot constraints.
The decision to restrict ourselves to schemes based on
the description logic is due to the fact that it allows to
represent enough knowledge for the effective operation
of envisaged NLP applications, e. g., those described in
Section 5. We used the OIL language in particular as
a whole range of software is freely available to support
ontology construction as mentioned above. Additionaly,
the usage of the ontology in Semantic Web applications
would be simplified.
</bodyText>
<sectionHeader confidence="0.991786" genericHeader="method">
3 The SMARTKOM Ontology
</sectionHeader>
<bodyText confidence="0.992178">
The SMARTKOM system (Wahlster et al., 2001) com-
prises a large set of input and output modalities which
the most advanced current systems feature, together with
an efficient fusion and fission pipeline. SMARTKOM fea-
tures speech input with prosodic analysis, gesture input
via infrared camera, recognition of facial expressions and
their emotional states. On the output side, the system fea-
tures a gesturing and speaking life-like character together
with displayed generated text and multimedia graphical
output. It currently comprises nearly 50 modules running
on a parallel virtual machine-based integration software
called Multiplatform.4
As mentioned in the introduction, complex MMDS
</bodyText>
<footnote confidence="0.966547">
4The abbreviation stands for “MUltiple Language / Target
Integration PLATform FOR Modules”.
</footnote>
<bodyText confidence="0.999945318181818">
such as SMARTKOM require a homogeneous world
model. This model serves as a common knowledge rep-
resentation for various modules throughout the system. It
represents a general conceptualization of the world (top-
level or generic ontology) as well as ofparticular domains
(domain-specific ontologies). This way, the ontology rep-
resents language-independent knowledge. The language-
specific knowledge is stored elsewhere, e.g. in the lexi-
con containing lexical items together with their meanings
defined in terms of ontology concepts.
The ontology described herein was initially designed
as a general purpose component for knowledge-based
NLP. It includes a top-level developed following the pro-
cedure outlined by Russell and Norvig (1995) and orig-
inally covered the tourism domain encoding knowledge
about sights, historical persons and buildings. Then, the
existing ontology was adopted in the SMARTKOM project
and modified to cover a number of new domains, e. g.,
new media and program guides. The top-level ontology
was re-used with some slight extensions. Further devel-
opments were motivated by the need of a process hierar-
chy. This hierarchy models processes which are domain-
independent in the sense that they can be relevant for
many domains, e. g., InformationSearchProcess (see Sec-
tion 4.3 for more details).
Currently, the ontology employed by the system has
about 730 concepts and 200 relations. The acquisition
of the ontology went in two directions: top-down to cre-
ate a top level of the ontology and bottom-up to satisfy
the need of mapping lexical items to concepts. The pur-
pose of the top-level ontology is to provide a basic struc-
ture of the world, i. e., abstract classes to divide the uni-
verse in distinct parts as resulting from the ontological
analysis (Guarino and Poli, 1995). The domain concepts
emerged through a comprehensive corpus analysis. The
most important modeling decisions will be discussed in
Section 4. Once available, the ontology was augmented
with comments containing definitions, assumptions and
examples that facilitate its appropriate use in a multi-
component system such as SMARTKOM and its possible
re-use in other systems. Such descriptions of ontology
classes are particularly important as the meanings associ-
ated with them may vary considerably from one ontology
to another.
</bodyText>
<sectionHeader confidence="0.999297" genericHeader="method">
4 Our Approach to Knowledge
Representation
</sectionHeader>
<subsectionHeader confidence="0.993258">
4.1 Type versus Role
</subsectionHeader>
<bodyText confidence="0.999654">
Following the distinctions made by
Guarino and Welty (2000), we first defined a collec-
tion of concepts that have primary ontological status.
The guiding principle was to differentiate between the
basic ontological entities and the roles taken by them in
particular situations, events, or processes. For example,
a building can be a hospital, a railway station, a school,
etc. But while taking all these roles, it doesn’t cease to
be a building. Another example is a person who can take
the role of a school teacher, a mother, etc., but it still
remains a person for its entire life.
Here the question arises, how deep the differentiation
should go. Consider the example of a person: we give
a concept Person a primary ontological status, but what
about the concepts Man and Woman? Should they be
given the same status? Our answer is positive and is
based, on one hand, on the assumption that sex is the pri-
mary property that defines a person as a man or a woman,
on the other hand, a functional approach shows that rela-
tions of these two classes to other classes and their other
attributes can be determined by this property. In this way,
the basic top-level ontological categorization in our sys-
tem divides all concepts into two classes Type and Role
(see Figure 1). As the class Type includes concepts with
primary ontological status independent of the particular
application, every system using the ontology for its spe-
cific purposes deals with the class Role.
</bodyText>
<figure confidence="0.481417">
Top
</figure>
<figureCaption confidence="0.998674">
Figure 1: Top-level part of the ontology.
</figureCaption>
<bodyText confidence="0.999976636363636">
Role is the most general class in the ontology repre-
senting concrete roles that any entity or process can per-
form in a specific domain. It is divided into Event and
AbstractEvent. Along with concrete events, i. e., free-
standing entities existing essentially in space or in time,
our model includes abstract objects, e. g., numbers or ab-
stract properties, such as spatial relations, and abstract
processes or rather abstracted states every real process
can go through, such as Start, Done, Interrupt, etc. These
are modeled separately thereby allowing a uniform de-
scription of the processes throughout the ontology.
</bodyText>
<subsectionHeader confidence="0.992905">
4.2 Event versus Abstract Event
</subsectionHeader>
<bodyText confidence="0.999745666666667">
On the Role level we distinguish between Event and Ab-
stractEvent. Event is used to describe a kind of role any
entity or process may have in a real situation or process,
e.g. a school or an information search. It is contrasted
with AbstractEvent, which is abstracted from a set of sit-
uations and processes. It reflects no reality and is used
for the general categorization and description, e.g., Num-
ber, Set, SpatialRelation. AbstractEvent has subclasses
AbstractObject and AbstractProcess.
Event’s are further classified in PhysicalObject and
Process. In contrast to abstract objects, they have a lo-
cation in space and time. The class PhysicalObject de-
scribes any kind of objects we come in contact with -
living as well as non-living. These objects refer to dif-
ferent domains, such as Sight and Route in the tourism
domain, AvMedium and Actor in the TV and cinema do-
main, etc., and can be associated with certain relations in
the processes via slot constraint definitions.
</bodyText>
<subsectionHeader confidence="0.999152">
4.3 Representing Processes
</subsectionHeader>
<bodyText confidence="0.999939780487805">
The modeling of Process as a kind of event that is contin-
uous and homogeneous in nature, follows the frame se-
mantic analysis used for generating the FRAMENET data
(Baker et al., 1998). Based on the analysis of our dia-
logue data, we developed the following classification of
processes (see Figure 2):
GeneralProcess, a set of the most general processes
such as duplication, imitation or repetition pro-
cesses;
MentalProcess, a set of processes such as cognitive,
emotional or perceptual processes;
PhysicalProcess, a set of processes such as motion,
transaction or controlling processes;
SocialProcess, a set of processes such as communi-
cation or instruction processes.
While the three last classes can be understood intu-
itively, the first one needs further explanation. It con-
sists of several subclasses, such as AbstractDuplication-
Process, AbstractRepetitionProcess, AbstractImitation-
Process, etc. These are abstract processes that are inde-
pendent from the real processes and can take place at the
same time with the main process.
The MentalProcess subtree includes CognitiveProcess,
EmotionProcess and PerceptualProcess. Under Cogni-
tiveProcess we understand a group of processes that aim
at acquiring information or making plans about the fu-
ture. The further division of EmotionProcess into the fol-
lowing subclasses - EmotionExperiencerObjectProcess
and EmotionExperiencerSubjectProcess - is due to the
fact that an emotion can be either provoked by an ob-
ject (e.g. The cry scared me) or can be experienced by an
agent towards some object (e.g. I want to go home).
The PhysicalProcess has the following subclasses: the
semantics of ControllingProcess presupposes the control-
ling of a number of artifacts, e. g., devices, MotionPro-
cess models different types of agent’s movement regard-
ing some object or point in space, PresentationProcess
describes a process of displaying some information by
an agent, e. g., a TV program by Smartakus, an artificial
character embedding the SMARTKOM system, StaticSpa-
tialProcess consists in the agent’s dwelling in some point
</bodyText>
<figure confidence="0.907922779661017">
Role
Event
Abstract Event
Type
Abstract Event
Type
Event Type
Physical Object
Process
Abstract Object
Abstract Process
Process
Physical Process
Mental Process
General Process
Abstract Duplication
Process
Abstract Imitation Process
Abstract Repetition Process
Cognitive Process
Planning Process
Social Process
Controlling Commu−
nication Device
Abstract Reset Process
Hear Perceptual Process
Watch Perceptual Process
Information Search
Process
Controlling Enter−
tainment Device
Controlling Process
Controlling Device
Process
Controlling Presen−
tation Device
Controlling Media
Process
Controlling
Representational
Artifact
Verification Process
Motion Process
Communicative
Process
Instructive Process
Abstract Replacement
Process
Emotion Process
Perceptual Process
Emotion Active
Process
Emotion Directed
Process
Emotion Experiencer Emotion Experiencer
Subject Process Object Process
Presentation Process
Static Spatial Process
Transaction Process
</figure>
<figureCaption confidence="0.999242">
Figure 2: Process Hierarchy.
</figureCaption>
<bodyText confidence="0.99687625">
in space, TransactionProcess presupposes an exchange
of entities or services among different participants of the
process.
Another subclass of the Process - SocialProcess in-
cludes CommunicativeProcess, which consists in com-
municating by the agent a message to the addressee by
different means, and InstructiveProcess which describes
an interaction between an agent and a trainee.
</bodyText>
<subsectionHeader confidence="0.99864">
4.4 Slot Hierarchy
</subsectionHeader>
<bodyText confidence="0.999867285714286">
The slot structure also reflects the general intention to
keep abstract and concrete elements apart. A set of most
general properties has been defined with regard to the
role an object can play in a process: agent, theme, ex-
periencer, instrument (or means), location, source, tar-
get, path. These general roles applied to concrete pro-
cesses may also have subslots: thus an agent in a pro-
cess of buying (TransactionProcess) is a buyer, the one
in the process of cognition is a cognizer. This way, slots
can also build hierarchical trees. The property theme in
the process of information search is a required piece-of-
information, in presentation process it is a presentable-
object, i. e., the item that is to be presented, etc.
Consider the class Process. It has the following
slots: begin-time, a time expression indicating the start-
ing point, end-time, a time expression indicating the time
point when the process is complete, state, one of the ab-
stract process states. These slots describe properties that
are common to all processes, and as such they are inher-
ited by all subclasses of the Process class. An Emotion-
ExperiencerSubjectProcess inherits the slots of the Pro-
cess class, among them the slot theme that can be filled
with any process or object (the basic idea is that any phys-
ical entity or the performance of any process can become
an object of someone’s emotion). It also has several ad-
ditional properties such as experiencer to denote the one
who undergoes the process, and preference to define the
attitude an experiencer has to the object of its emotion.
</bodyText>
<subsectionHeader confidence="0.907525">
4.5 Ontology instances
</subsectionHeader>
<bodyText confidence="0.9999074">
Consider the definition of the InformationSearchProcess
in the ontology. It is modeled as a subclass of the Cogni-
tiveProcess, which is a subclass of the MentalProcess and
inherits the following slot constraints: begin-time, a time
expression indicating the starting time point, end-time, a
time expression indicating the time point when the pro-
cess is complete, state, one of the abstract process states,
e. g., start, continue, interrupt, etc., cognizer, filled with a
class Person including its subclasses.
The InformationSearchProcess features one additional
slot constraint, piece-of-information. The possible slot-
fillers are a range of domain objects, e.g. Sight, Perfor-
mance, or whole sets of those, e.g. TvProgram, but also
processes, e.g. ControllingTvDeviceProcess. This way,
an utterance such as:5
</bodyText>
<listItem confidence="0.59542">
(1) I h¨atte gerne Informationen zum Schloss
</listItem>
<bodyText confidence="0.9855654">
I would like information about the castle
can be mapped onto the InformationSearchProcess,
which has an agent of the type User, and a piece of in-
formation of the type Sight. Sight has a name of the type
Castle. Analogously, the utterance:
</bodyText>
<listItem confidence="0.623134">
(2) Wie kann ich den Fernseher steuern
</listItem>
<bodyText confidence="0.983443363636364">
How can I the TV control
can also be mapped onto the InformationSearchProcess,
which has an agent of the type User, and has a piece of
information of the type ControllingTvDeviceProcess.
Another example demonstrating how slot structures
can be shared between some super- and subclasses: the
subclass AvEntertainment inherits from its superclass
Entertainment the following slots: duration, end-time,
and begin-time, filled by the TimeDuration and TimeEx-
pression respectively. The class AvEntertainment fea-
tures two additional slots: language, its filler is an in-
dividual Language and av-medium, its filler is a class
AvMedium. The class AvEntertainment has further sub-
classes - Broadcast representing an individual entry in a
TV program, and Performance modeling an entry in a
cinema program. Both of them inherit the slots of the
superclasses Entertainment and AvEntertainment, while
also featuring their own additional slots, e. g., channel
and showview for the Broadcast, cinema and seat for the
Performance. In Section 5.2, we will show how this fea-
ture can be effectively utilized by a specific dialogue in-
terpretation algorithm called overlay.
</bodyText>
<sectionHeader confidence="0.99497" genericHeader="method">
5 Example Applications of Ontology
</sectionHeader>
<bodyText confidence="0.999969666666666">
There is no agreed methodology for ontology evaluation.
In our opinion, the usefulness of an ontology can be eval-
uated by examining the ways it is employed within the
system, allowing to draw tentative conclusions as for the
re-usability of the ontology and its portability with re-
spect to new applications and NLP tasks. The ontology
described here is used by the complete core of the system
(L¨ockelt et al., 2002). In the next sections we give some
examples of the usage within the project.
</bodyText>
<subsectionHeader confidence="0.989407">
5.1 Semantic Coherence Scoring
</subsectionHeader>
<bodyText confidence="0.999951">
We introduced the notion of semantic coherence as a
special measurement which can be applied to estimate
how well a given speech recognition hypothesis (SRH)
fits with respect to the existing knowledge representation
(Gurevych et al., 2003). This provides a mechanism in-
creasing the robustness and reliability of multi-modal di-
alogue systems.
</bodyText>
<subsubsectionHeader confidence="0.375458">
5.1.1 Challenge
</subsubsectionHeader>
<bodyText confidence="0.999992875">
One of the major challenges in making an MMDS re-
liable enough to be deployed in more complex real world
applications is an accurate recognition of the users’ input.
In many cases both correct and incorrect representations
of the users’ utterances are contained in the automatic
speech recognizer’s n-best lists. Facing multiple repre-
sentations of a single utterance poses the question, which
of the different hypotheses corresponds most likely to the
user’s utterance. Different methods have been proposed
to solve this problem. Frequently, the scores provided
by the recognition system itself are used. More recently,
also scores provided by the parsing system have been em-
ployed, e.g. Engel (2002). In this application, we propose
a new ontology-based method and show that knowledge-
based scores can be successfully employed to re-score the
speech recognition output.
</bodyText>
<subsubsectionHeader confidence="0.498905">
5.1.2 Solution
</subsubsectionHeader>
<bodyText confidence="0.966862428571429">
The software for scoring the SRHs and classifying
them in terms of their semantic coherence employs the
ontology described herein. This means, that the ontology
crafted as a general knowledge representation for various
processing modules of the system is additionally used as
the basis for evaluating the semantic coherence of sets of
concepts.
The scoring software performs a number of processing
steps:
converting each SRH into a concept representation.
For this purpose, each entry of the system’s lexicon
was augmented with zero, one or multiple ontology
concepts;
converting the domain model, i.e. an ontology, into a
directed graph with concepts as nodes and relations
as edges;
scoring concept representations using the shortest
path between concepts based scoring metric.
For example, in our data (Gurevych et al., 2002) a user
expressed the wish to get more information about a spe-
cific church, as:
</bodyText>
<footnote confidence="0.959493">
5All examples are displayed with the Germano riginal on top (3) Kann ich bitte Informationen zur
and a glossed translation below. May I please Information about the
Heiliggeistkirche bekommen
</footnote>
<note confidence="0.457558">
Church of Holy Spirit get
</note>
<bodyText confidence="0.9993346">
Looking at two SRHs from the ensuing n-best list we
found that Example (5) constituted a suitable representa-
tion of the utterance, whereas Example (4) constituted a
less adequate representation thereof, labeled accordingly
by the human annotators:
</bodyText>
<figure confidence="0.773927625">
(4) Kann ich Information zur
May I Information about the
Heiliggeistkirche kommen
Church of Holy Spirit come
(5) Kann ich Information zur
May I Information about the
Heiliggeistkirche bekommen
Church of Holy Spirit get
</figure>
<bodyText confidence="0.952907">
According to the lexicon entries, the SRHs are trans-
formed into two alternative concept representations:
</bodyText>
<listItem confidence="0.93869">
: Person; Information Search Process; Church;
Motion Directed Transliterated Process ;
: Person; Information Search Process; Church;
Transaction Process .
</listItem>
<bodyText confidence="0.999969066666667">
The scores are normalized as numbers on a scale from
0 to 1 with higher scores indicating better semantic co-
herence. Then, the resulting score assigned to Example
4 is 0.6, and the score of Example 5 is 0.75. The evalua-
tion of the method against the hand-annotated corpus has
shown that it successfully classifies 73.2% in a German
corpus of 2.284 speech recognition hypotheses as either
coherent or incoherent, given a baseline 54.55% derived
from the annotation experiments (the majority class).
Additional application of the semantic coherence scor-
ing method is the calculation of a semantic coherence
score for SRHs taking into account their conceptual con-
text (Porzel and Gurevych, 2003). Currently we are
also experimenting with the ontology-based automatic
domain recognition and domain change detection.
</bodyText>
<subsectionHeader confidence="0.999763">
5.2 Computing Dialogue Coherence
</subsectionHeader>
<bodyText confidence="0.9997605">
The ontology provides a good basis for the enrichment
and scoring of hypotheses - the two main tasks for the
discourse module (Pfleger, 2002). What we call discourse
processing is an essential processing step for any dia-
logue system since it provides an interpretation of the
hypotheses based on the discourse history.
</bodyText>
<subsectionHeader confidence="0.65554">
5.2.1 Challenge
</subsectionHeader>
<bodyText confidence="0.999832666666666">
As indicated in Section 5.1, a system processing spo-
ken language and gestures is faced with analysis modules
producing several hypotheses. A discourse module has
not just the task of scoring these hypotheses in respect to
the discourse state, but also interpretating and resolving
ambiguities, e. g., (L¨ockelt et al., 2002).
</bodyText>
<subsectionHeader confidence="0.832234">
5.2.2 Solution
</subsectionHeader>
<bodyText confidence="0.999879657142857">
There are several advantages for using an ontology.
First, it enables a convenient way for interpreting com-
mon phenomena like partial utterances and ellipses. Sec-
ond, and most notably, using overlay (Alexandersson and
Becker, 2003) we can straightforwardly inherit informa-
tion from one discourse state to another, even if the fo-
cussed instance of the ontology is from a different but
related type than the one of the current hypothesis. The
advantage of this technique becomes evident in the dia-
logue excerpt below.
The data structure of the discourse memory is
based on the ideas presented in LuperFoy (1992),
Salmon-Alt (2000). A three-tiered partition of a modal-
ity, discourse and domain layer is connected with a dou-
ble threaded focus structure.
A non-monotonic unification-like operation called
overlay serves as the main algorithm for manipulating
instances of the ontology. It combines new informa-
tion (cover) with old context information (background)
by unifying where possible, and overwriting where uni-
fication would fail. Additionally, the operation does not
fail if the types differ, but assimilates the background to
the type of the cover - thereby possibly deleting informa-
tion of the background - before the cover is layed over
the background. During overlay we record a number of
parameters, e. g., the number of type clashes (tc) , the
amount of information stemming from background (bg)
and cover (co) and the number of conflicting values (cv),
which is combined using the formula below to form the
score (see (Pfleger et al., 2002)).
The total score includes a fifth parameter recency that ex-
presses how accessible the considered discourse state is.
To highlight the advantage of the ontology, consider
the following dialogue excerpt between the user (U) and
the system (S):
</bodyText>
<listItem confidence="0.99881125">
(6) U: What’s on TV tonight
(7) S: [Displays a list of films] Here you see a list of
films.
(8) U: show me the cinema program.
</listItem>
<bodyText confidence="0.999802714285714">
In our ontology, the structure for showing cinema pro-
gram and the structure for showing tv program are related
in that there exists a common superclass AvEntertainment
(see also Section 4.5) defining common slots, e. g., begin-
time. Overlay makes it possible to inherit the time infor-
mation deployed in (6) while enriching the hypotheses for
(8) with contextual information.
</bodyText>
<subsectionHeader confidence="0.984542">
5.3 Generating Interface Specifications
</subsectionHeader>
<bodyText confidence="0.99997625">
In this additional application, we proposed to use the
knowledge modeled in the ontology as the basis for defin-
ing the semantics and the content of information ex-
changed between various modules of the system.
</bodyText>
<subsectionHeader confidence="0.475651">
5.3.1 Challenge
</subsectionHeader>
<bodyText confidence="0.999979">
In NLP systems, modules typically exchange mes-
sages, e.g., a parser might get word lattices as input and
produce corresponding semantic representations for later
processing modules, such as a discourse manager. The in-
creasing employment of XML-based interfaces for agent-
based or other multi-blackboard communication systems
sets a de facto standard for syntax and expressive capabil-
ities of the information that is exchanged amongst mod-
ules. The content and structure of the information to be
represented are typically defined in corresponding XML
schemata (XMLS) or Document Type Definitions (DTD).
As discussed above, ontologies are a suitable means
for knowledge representation, e.g. for the definition of
an explicit and detailed model of a system’s domains.
That way, they provide a shared domain theory, which
can be used for communication. Additionally, they can
be employed for deductive reasoning and manipulations
of models. The meaning of ontology constructs relies
on a translation to some logic. This way, the inference
implications of statements, e.g. whether a class can be
related to another class via a subclass or some other re-
lation, can be determined from the formal specification
of the semantics of the ontology language. However, this
does not make any claims about the syntactic appearance
of the representations exchanged, e.g. an ordering of the
properties of a class.
An interface specification framework, such as XMLS
or DTD, constitutes a suitable means for defining con-
straints on the syntax and structure of XML documents.
Ideally, the definition of the content communicated be-
tween the components of a complex dialogue system
should relate both the syntax and the semantics of the
XML documents exchanged. Those can then be seen
as instances of the ontology represented as XMLS-based
XML documents. However, this requires that the knowl-
edge, originally encoded in the ontology, is represented
in the XMLS syntax.
</bodyText>
<subsectionHeader confidence="0.375155">
5.3.2 Solution
</subsectionHeader>
<bodyText confidence="0.999886361111111">
The solution proposed states that the knowledge repre-
sentations to be expressed in XMLS are first modeled in
OIL-RDFS or DAML+OIL as ontology proper, using the
advantages of ontology engineering systems available,
and then transformed into a communication interface au-
tomatically with the help of the software developed for
that purpose.6
Employing this approach, XMLS and DTDs are cre-
ated such that they:
stay logically consistent,
are easy to manage,
enable a straightforward mapping back to the re-
spective knowledge representation for inference,
allow the handling of a range of NLP tasks immedi-
ately on the basis of XMLS.7
The resulting schemata capture the hierarchical struc-
ture and a significant part of the semantics of the ontol-
ogy. We, therefore, provide a standard mechanism for
defining XMLS-based interface specifications, which are
knowledge rich, and thus can be used as a suitable rep-
resentation of domain and discourse knowledge by NLP
components. Since the software that has been developed
completely automates the transformation process, the re-
sulting XMLS are congruent with the XML schema spec-
ifications. Furthermore, the ontology can be re-used in
multiple systems as a single ontology can be used to gen-
erate application-specific communication interfaces.
However, the main advantage of our approach is that
it combines the power of ontological knowledge repre-
sentation with the strengths of XMLS as an interface
specification framework in a single and consistent rep-
resentation. Our experience shows, this would not have
been possible for a complex dialogue system, if XML
schemata were defined from scratch or hand-crafted, and
constitutes a step towards building robust and reusable
NLP components.
</bodyText>
<sectionHeader confidence="0.985763" genericHeader="conclusions">
6 Concluding Remarks
</sectionHeader>
<bodyText confidence="0.999926363636364">
In this paper, we presented an ontology which can be used
as a single knowledge representation in a multi-modal
and multi-domain dialogue system. We described the
major modeling principles and the design choices made.
Furthermore, we sketched some examples of the ontology
application within the system.
Together these examples suffice to demonstrate the
benefits of using a single knowledge representation
throughout a dialogue system as opposed to using mul-
tiple knowledge representations and formats. An addi-
tional advantage of such a homogeneous world model
</bodyText>
<footnote confidence="0.822646166666667">
6This is a free software project. The package
and respective documentation can be obtained from
http://savannah.nongnu.org/projects/oil2xsd.
7E.g., the discourse module described in the previous sub-
section operates on the XML schema obtained via ontology
transformation.
</footnote>
<bodyText confidence="0.999979888888889">
that defines the processing interfaces as well as the sys-
tem’s world knowledge is that no costly mappings be-
tween them are any more necessary. This means that
modules receive only messages whose content is congru-
ent to the terminological and structural distinctions de-
fined in the ontology.
Our additional concern while designing the ontology
was the re-usability of this component within our MMDS
as well as other NLP systems. So far, the top-level on-
tology proved stable. We found the extensions on the
lower levels of the ontology to be comparatively cheap.
This single knowledge base was successfully tested and
applied to multiple NLP problems, e.g., resolving bridg-
ing expressions in texts as well as for the resolution of
metonymical and polysemous utterances next to defin-
ing communication interfaces for NLP components of
the system, scoring of speech recognition hypotheses and
overlay mechanism described above.
</bodyText>
<sectionHeader confidence="0.998929" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9998885">
This work was partially funded by the German Federal
Ministry of Education, Science, Research and Technol-
ogy (BMBF) in the framework of the SmartKom project
under Grant 01 IL 905 K7 and by the Klaus Tschira Foun-
dation. The responsibility for the contents lies with the
authors.
</bodyText>
<sectionHeader confidence="0.999245" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998812">
Jan Alexandersson and Tilman Becker. 2003. The For-
mal Foundations Underlying Overlay. In Proceedings
of the Fifth International Workshop on Computational
Semantics (IWCS-5), Tilburg, The Netherlands, Febru-
ary.
James F. Allen, Bradford Miller, Eric Ringger, and Teresa
Sikorski. 1996. A robust system for natural spoken
dialogue. In Proc. ofACL-96.
Collin F. Baker, Charles J. Fillmore, and John B. Lowe.
1998. The Berkeley FrameNet Project. In Proceedings
of COLING-ACL, Montreal, Canada.
Ralf Engel. 2002. SPIN: Language understanding for
spoken dialogue systems using a production system ap-
proach. In Proceedings ofICSLP 2002.
D. Fensel, F. van Harmelen, I. Horrocks, D. McGuin-
ness, and P. Patel-Schneider. 2001. OIL: An ontology
infrastructure for the semantic web. IEEE Intelligent
Systems, 16(2).
George Ferguson, James F. Allen, Brad Miller, and Eric
Ringger. 1996. The desgin and implementation of the
TRAINS-96 system. Technical Report 96-5, Univer-
sity of Rochester, New York.
Nicola Guarino and Roberto Poli. 1995. Formal ontol-
ogy in conceptual analysis and knowledge representa-
tion. Special issue of the International Journal ofHu-
man and Computer Studies, 43.
Nicola Guarino and Chris Welty. 2000. A formal on-
tology of properties. In R. Dieng and O. Corby, ed-
itors, Proceedings of EKAW-2000: The 12th Inter-
national Conference on Knowledge Engineering and
Knowledge Management, volume 1937, pages 97–112.
Springer Verlag.
Iryna Gurevych, Robert Porzel, and Michael Strube.
2002. Annotating the semantic consistency of speech
recognition hypotheses. In Proceedings of the Third
SIGdial Workshop on Discourse and Dialogue, pages
46–49, Philadelphia, USA, July.
Iryna Gurevych, Rainer Malaka, Robert Porzel, and
Hans-Peter Zorn. 2003. Semantic coherence scoring
using an ontology. In Proceedings of the HLT-NAACL
Conference. to appear.
Markus L¨ockelt, Tilman Becker, Norbert Pfleger, and Jan
Alexandersson. 2002. Making sense of partial. In
Proceedings of the sixth workshop on the semantics
and pragmatics of dialogue (EDILOG 2002), pages
101–107, Edinburgh, UK, September.
Susann LuperFoy. 1992. The representation of multi-
modal user interface dialogues using discourse pegs.
In Proceedings of the ACL Conference, pages 22–31.
Norbert Pfleger, Jan Alexandersson, and Tilman Becker.
2002. Scoring functions for overlay and their ap-
plication in discourse processing. In KONVENS-02,
Saarbr¨ucken, September – October.
Norbert Pfleger. 2002. Discourse processing for mul-
timodal dialogues and its application in SmartKom.
Master’s thesis, Universit¨at des Saarlandes.
Robert Porzel and Iryna Gurevych. 2003. Contextual
coherence in natural language processing. Modeling
and Using Context, Springer, LNCS:to appear.
Stuart J. Russell and Peter Norvig. 1995. Artificial In-
telligence. A Modern Approach. Prentice Hall, Engle-
wood Cliffs, N.J.
Susanne Salmon-Alt. 2000. Interpreting referring ex-
pressions by restructuring context. In Proceedings of
ESSLLI2000, Birmingham, UK. Student Session.
Wolfgang Wahlster, Norbert Reithinger, and Anselm
Blocher. 2001. SmartKom: Multimodal communi-
cation with a life-like character. In Proceedings of the
7th European Conference on Speech Communication
and Technology., pages 1547–1550.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.312468">
<title confidence="0.8402025">Less is More: Using a Single Knowledge Representation in Dialogue Systems</title>
<author confidence="0.992152">Elena Slinko</author>
<affiliation confidence="0.8195355">European Media Schloss-Wolfsbrunnenweg</affiliation>
<address confidence="0.998045">69118 Heidelberg,</address>
<email confidence="0.998555">gurevych,porzel,slinko@eml.org</email>
<affiliation confidence="0.99067">DFKI GmbH</affiliation>
<address confidence="0.991214">Stuhlsatzenhausweg 3 66123 Saarbr¨ucken, Germany</address>
<email confidence="0.91194">pfleger,janal@dfki.de</email>
<affiliation confidence="0.836616">DFKI</affiliation>
<address confidence="0.972957">67608 Kaiserslautern,</address>
<email confidence="0.998344">merten@dfki.de</email>
<abstract confidence="0.994803909090909">The approach to knowledge representation taken in a multi-modal multi-domain dialogue is presented. We focus on the ontological and representational issues and choices helping to construct an ontology, which is shared by multiple components of the system, can be re-used in different projects and applied to various tasks. Finally, examples highlighting the usefulness of our approach are given.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Jan Alexandersson</author>
<author>Tilman Becker</author>
</authors>
<title>The Formal Foundations Underlying Overlay.</title>
<date>2003</date>
<booktitle>In Proceedings of the Fifth International Workshop on Computational Semantics (IWCS-5),</booktitle>
<location>Tilburg, The Netherlands,</location>
<contexts>
<context position="25511" citStr="Alexandersson and Becker, 2003" startWordPosition="3907" endWordPosition="3910">hypotheses based on the discourse history. 5.2.1 Challenge As indicated in Section 5.1, a system processing spoken language and gestures is faced with analysis modules producing several hypotheses. A discourse module has not just the task of scoring these hypotheses in respect to the discourse state, but also interpretating and resolving ambiguities, e. g., (L¨ockelt et al., 2002). 5.2.2 Solution There are several advantages for using an ontology. First, it enables a convenient way for interpreting common phenomena like partial utterances and ellipses. Second, and most notably, using overlay (Alexandersson and Becker, 2003) we can straightforwardly inherit information from one discourse state to another, even if the focussed instance of the ontology is from a different but related type than the one of the current hypothesis. The advantage of this technique becomes evident in the dialogue excerpt below. The data structure of the discourse memory is based on the ideas presented in LuperFoy (1992), Salmon-Alt (2000). A three-tiered partition of a modality, discourse and domain layer is connected with a double threaded focus structure. A non-monotonic unification-like operation called overlay serves as the main algo</context>
</contexts>
<marker>Alexandersson, Becker, 2003</marker>
<rawString>Jan Alexandersson and Tilman Becker. 2003. The Formal Foundations Underlying Overlay. In Proceedings of the Fifth International Workshop on Computational Semantics (IWCS-5), Tilburg, The Netherlands, February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James F Allen</author>
<author>Bradford Miller</author>
<author>Eric Ringger</author>
<author>Teresa Sikorski</author>
</authors>
<title>A robust system for natural spoken dialogue.</title>
<date>1996</date>
<booktitle>In Proc. ofACL-96.</booktitle>
<contexts>
<context position="1255" citStr="Allen et al., 1996" startWordPosition="173" endWordPosition="176">nd choices helping to construct an ontology, which is shared by multiple components of the system, can be re-used in different projects and applied to various tasks. Finally, examples highlighting the usefulness of our approach are given. 1 Introduction The ways in which knowledge has been represented in multi-modal dialogue systems (MMDS) show that individual representations with different semantics and heterogeneously structured content can be found in various formats within single natural language processing (NLP) systems and applications. For example, a typical NLP system, such as TRAINS (Allen et al., 1996), employs different knowledge representations for parsing, action planning and generation, despite the fact that what is being represented is common to all those representations, e. g., the parser representation for going from A to B has no similarity to the action planner’s representation thereof (Ferguson et al., 1996). Also central concepts, for example city, are represented in multiple ways throughout the system. The origin for this state of affairs is that the respective knowledge stores are hand-crafted individually for each task. Sometimes they are compiled into code and cease to be ext</context>
</contexts>
<marker>Allen, Miller, Ringger, Sikorski, 1996</marker>
<rawString>James F. Allen, Bradford Miller, Eric Ringger, and Teresa Sikorski. 1996. A robust system for natural spoken dialogue. In Proc. ofACL-96.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Collin F Baker</author>
<author>Charles J Fillmore</author>
<author>John B Lowe</author>
</authors>
<title>The Berkeley FrameNet Project.</title>
<date>1998</date>
<booktitle>In Proceedings of COLING-ACL,</booktitle>
<location>Montreal, Canada.</location>
<contexts>
<context position="12976" citStr="Baker et al., 1998" startWordPosition="2002" endWordPosition="2005">o abstract objects, they have a location in space and time. The class PhysicalObject describes any kind of objects we come in contact with - living as well as non-living. These objects refer to different domains, such as Sight and Route in the tourism domain, AvMedium and Actor in the TV and cinema domain, etc., and can be associated with certain relations in the processes via slot constraint definitions. 4.3 Representing Processes The modeling of Process as a kind of event that is continuous and homogeneous in nature, follows the frame semantic analysis used for generating the FRAMENET data (Baker et al., 1998). Based on the analysis of our dialogue data, we developed the following classification of processes (see Figure 2): GeneralProcess, a set of the most general processes such as duplication, imitation or repetition processes; MentalProcess, a set of processes such as cognitive, emotional or perceptual processes; PhysicalProcess, a set of processes such as motion, transaction or controlling processes; SocialProcess, a set of processes such as communication or instruction processes. While the three last classes can be understood intuitively, the first one needs further explanation. It consists of</context>
</contexts>
<marker>Baker, Fillmore, Lowe, 1998</marker>
<rawString>Collin F. Baker, Charles J. Fillmore, and John B. Lowe. 1998. The Berkeley FrameNet Project. In Proceedings of COLING-ACL, Montreal, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ralf Engel</author>
</authors>
<title>SPIN: Language understanding for spoken dialogue systems using a production system approach.</title>
<date>2002</date>
<booktitle>In Proceedings ofICSLP</booktitle>
<contexts>
<context position="21721" citStr="Engel (2002)" startWordPosition="3327" endWordPosition="3328">mplex real world applications is an accurate recognition of the users’ input. In many cases both correct and incorrect representations of the users’ utterances are contained in the automatic speech recognizer’s n-best lists. Facing multiple representations of a single utterance poses the question, which of the different hypotheses corresponds most likely to the user’s utterance. Different methods have been proposed to solve this problem. Frequently, the scores provided by the recognition system itself are used. More recently, also scores provided by the parsing system have been employed, e.g. Engel (2002). In this application, we propose a new ontology-based method and show that knowledgebased scores can be successfully employed to re-score the speech recognition output. 5.1.2 Solution The software for scoring the SRHs and classifying them in terms of their semantic coherence employs the ontology described herein. This means, that the ontology crafted as a general knowledge representation for various processing modules of the system is additionally used as the basis for evaluating the semantic coherence of sets of concepts. The scoring software performs a number of processing steps: converting</context>
</contexts>
<marker>Engel, 2002</marker>
<rawString>Ralf Engel. 2002. SPIN: Language understanding for spoken dialogue systems using a production system approach. In Proceedings ofICSLP 2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Fensel</author>
<author>F van Harmelen</author>
<author>I Horrocks</author>
<author>D McGuinness</author>
<author>P Patel-Schneider</author>
</authors>
<title>OIL: An ontology infrastructure for the semantic web.</title>
<date>2001</date>
<journal>IEEE Intelligent Systems,</journal>
<volume>16</volume>
<issue>2</issue>
<marker>Fensel, van Harmelen, Horrocks, McGuinness, Patel-Schneider, 2001</marker>
<rawString>D. Fensel, F. van Harmelen, I. Horrocks, D. McGuinness, and P. Patel-Schneider. 2001. OIL: An ontology infrastructure for the semantic web. IEEE Intelligent Systems, 16(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>George Ferguson</author>
<author>James F Allen</author>
<author>Brad Miller</author>
<author>Eric Ringger</author>
</authors>
<title>The desgin and implementation of the TRAINS-96 system.</title>
<date>1996</date>
<tech>Technical Report 96-5,</tech>
<institution>University of Rochester,</institution>
<location>New York.</location>
<contexts>
<context position="1577" citStr="Ferguson et al., 1996" startWordPosition="222" endWordPosition="225">ialogue systems (MMDS) show that individual representations with different semantics and heterogeneously structured content can be found in various formats within single natural language processing (NLP) systems and applications. For example, a typical NLP system, such as TRAINS (Allen et al., 1996), employs different knowledge representations for parsing, action planning and generation, despite the fact that what is being represented is common to all those representations, e. g., the parser representation for going from A to B has no similarity to the action planner’s representation thereof (Ferguson et al., 1996). Also central concepts, for example city, are represented in multiple ways throughout the system. The origin for this state of affairs is that the respective knowledge stores are hand-crafted individually for each task. Sometimes they are compiled into code and cease to be externally available. Where an explicit knowledge representation is used, we find a multitude of formats and inference engines, which often cause both performance and tractability problems. In this paper we introduce the results of an effort to employ a single knowledge representation, i. e., an ontology, throughout a compl</context>
</contexts>
<marker>Ferguson, Allen, Miller, Ringger, 1996</marker>
<rawString>George Ferguson, James F. Allen, Brad Miller, and Eric Ringger. 1996. The desgin and implementation of the TRAINS-96 system. Technical Report 96-5, University of Rochester, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nicola Guarino</author>
<author>Roberto Poli</author>
</authors>
<title>Formal ontology in conceptual analysis and knowledge representation.</title>
<date>1995</date>
<journal>Special issue of the International Journal ofHuman and Computer Studies,</journal>
<volume>43</volume>
<contexts>
<context position="9047" citStr="Guarino and Poli, 1995" startWordPosition="1355" endWordPosition="1358">domainindependent in the sense that they can be relevant for many domains, e. g., InformationSearchProcess (see Section 4.3 for more details). Currently, the ontology employed by the system has about 730 concepts and 200 relations. The acquisition of the ontology went in two directions: top-down to create a top level of the ontology and bottom-up to satisfy the need of mapping lexical items to concepts. The purpose of the top-level ontology is to provide a basic structure of the world, i. e., abstract classes to divide the universe in distinct parts as resulting from the ontological analysis (Guarino and Poli, 1995). The domain concepts emerged through a comprehensive corpus analysis. The most important modeling decisions will be discussed in Section 4. Once available, the ontology was augmented with comments containing definitions, assumptions and examples that facilitate its appropriate use in a multicomponent system such as SMARTKOM and its possible re-use in other systems. Such descriptions of ontology classes are particularly important as the meanings associated with them may vary considerably from one ontology to another. 4 Our Approach to Knowledge Representation 4.1 Type versus Role Following the</context>
</contexts>
<marker>Guarino, Poli, 1995</marker>
<rawString>Nicola Guarino and Roberto Poli. 1995. Formal ontology in conceptual analysis and knowledge representation. Special issue of the International Journal ofHuman and Computer Studies, 43.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nicola Guarino</author>
<author>Chris Welty</author>
</authors>
<title>A formal ontology of properties.</title>
<date>2000</date>
<booktitle>Proceedings of EKAW-2000: The 12th International Conference on Knowledge Engineering and Knowledge Management,</booktitle>
<volume>volume</volume>
<pages>97--112</pages>
<editor>In R. Dieng and O. Corby, editors,</editor>
<publisher>Springer Verlag.</publisher>
<contexts>
<context position="9693" citStr="Guarino and Welty (2000)" startWordPosition="1450" endWordPosition="1453">emerged through a comprehensive corpus analysis. The most important modeling decisions will be discussed in Section 4. Once available, the ontology was augmented with comments containing definitions, assumptions and examples that facilitate its appropriate use in a multicomponent system such as SMARTKOM and its possible re-use in other systems. Such descriptions of ontology classes are particularly important as the meanings associated with them may vary considerably from one ontology to another. 4 Our Approach to Knowledge Representation 4.1 Type versus Role Following the distinctions made by Guarino and Welty (2000), we first defined a collection of concepts that have primary ontological status. The guiding principle was to differentiate between the basic ontological entities and the roles taken by them in particular situations, events, or processes. For example, a building can be a hospital, a railway station, a school, etc. But while taking all these roles, it doesn’t cease to be a building. Another example is a person who can take the role of a school teacher, a mother, etc., but it still remains a person for its entire life. Here the question arises, how deep the differentiation should go. Consider t</context>
</contexts>
<marker>Guarino, Welty, 2000</marker>
<rawString>Nicola Guarino and Chris Welty. 2000. A formal ontology of properties. In R. Dieng and O. Corby, editors, Proceedings of EKAW-2000: The 12th International Conference on Knowledge Engineering and Knowledge Management, volume 1937, pages 97–112. Springer Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Iryna Gurevych</author>
<author>Robert Porzel</author>
<author>Michael Strube</author>
</authors>
<title>Annotating the semantic consistency of speech recognition hypotheses.</title>
<date>2002</date>
<booktitle>In Proceedings of the Third SIGdial Workshop on Discourse and Dialogue,</booktitle>
<pages>46--49</pages>
<location>Philadelphia, USA,</location>
<contexts>
<context position="22734" citStr="Gurevych et al., 2002" startWordPosition="3479" endWordPosition="3482"> for various processing modules of the system is additionally used as the basis for evaluating the semantic coherence of sets of concepts. The scoring software performs a number of processing steps: converting each SRH into a concept representation. For this purpose, each entry of the system’s lexicon was augmented with zero, one or multiple ontology concepts; converting the domain model, i.e. an ontology, into a directed graph with concepts as nodes and relations as edges; scoring concept representations using the shortest path between concepts based scoring metric. For example, in our data (Gurevych et al., 2002) a user expressed the wish to get more information about a specific church, as: 5All examples are displayed with the Germano riginal on top (3) Kann ich bitte Informationen zur and a glossed translation below. May I please Information about the Heiliggeistkirche bekommen Church of Holy Spirit get Looking at two SRHs from the ensuing n-best list we found that Example (5) constituted a suitable representation of the utterance, whereas Example (4) constituted a less adequate representation thereof, labeled accordingly by the human annotators: (4) Kann ich Information zur May I Information about t</context>
</contexts>
<marker>Gurevych, Porzel, Strube, 2002</marker>
<rawString>Iryna Gurevych, Robert Porzel, and Michael Strube. 2002. Annotating the semantic consistency of speech recognition hypotheses. In Proceedings of the Third SIGdial Workshop on Discourse and Dialogue, pages 46–49, Philadelphia, USA, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Iryna Gurevych</author>
<author>Rainer Malaka</author>
<author>Robert Porzel</author>
<author>Hans-Peter Zorn</author>
</authors>
<title>Semantic coherence scoring using an ontology.</title>
<date>2003</date>
<booktitle>In Proceedings of the HLT-NAACL Conference.</booktitle>
<note>to appear.</note>
<contexts>
<context position="20903" citStr="Gurevych et al., 2003" startWordPosition="3199" endWordPosition="3202"> is employed within the system, allowing to draw tentative conclusions as for the re-usability of the ontology and its portability with respect to new applications and NLP tasks. The ontology described here is used by the complete core of the system (L¨ockelt et al., 2002). In the next sections we give some examples of the usage within the project. 5.1 Semantic Coherence Scoring We introduced the notion of semantic coherence as a special measurement which can be applied to estimate how well a given speech recognition hypothesis (SRH) fits with respect to the existing knowledge representation (Gurevych et al., 2003). This provides a mechanism increasing the robustness and reliability of multi-modal dialogue systems. 5.1.1 Challenge One of the major challenges in making an MMDS reliable enough to be deployed in more complex real world applications is an accurate recognition of the users’ input. In many cases both correct and incorrect representations of the users’ utterances are contained in the automatic speech recognizer’s n-best lists. Facing multiple representations of a single utterance poses the question, which of the different hypotheses corresponds most likely to the user’s utterance. Different me</context>
</contexts>
<marker>Gurevych, Malaka, Porzel, Zorn, 2003</marker>
<rawString>Iryna Gurevych, Rainer Malaka, Robert Porzel, and Hans-Peter Zorn. 2003. Semantic coherence scoring using an ontology. In Proceedings of the HLT-NAACL Conference. to appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Markus L¨ockelt</author>
<author>Tilman Becker</author>
<author>Norbert Pfleger</author>
<author>Jan Alexandersson</author>
</authors>
<title>Making sense of partial.</title>
<date>2002</date>
<booktitle>In Proceedings of the sixth workshop on the</booktitle>
<pages>101--107</pages>
<location>Edinburgh, UK,</location>
<marker>L¨ockelt, Becker, Pfleger, Alexandersson, 2002</marker>
<rawString>Markus L¨ockelt, Tilman Becker, Norbert Pfleger, and Jan Alexandersson. 2002. Making sense of partial. In Proceedings of the sixth workshop on the semantics and pragmatics of dialogue (EDILOG 2002), pages 101–107, Edinburgh, UK, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susann LuperFoy</author>
</authors>
<title>The representation of multimodal user interface dialogues using discourse pegs.</title>
<date>1992</date>
<booktitle>In Proceedings of the ACL Conference,</booktitle>
<pages>22--31</pages>
<contexts>
<context position="25889" citStr="LuperFoy (1992)" startWordPosition="3973" endWordPosition="3974">ution There are several advantages for using an ontology. First, it enables a convenient way for interpreting common phenomena like partial utterances and ellipses. Second, and most notably, using overlay (Alexandersson and Becker, 2003) we can straightforwardly inherit information from one discourse state to another, even if the focussed instance of the ontology is from a different but related type than the one of the current hypothesis. The advantage of this technique becomes evident in the dialogue excerpt below. The data structure of the discourse memory is based on the ideas presented in LuperFoy (1992), Salmon-Alt (2000). A three-tiered partition of a modality, discourse and domain layer is connected with a double threaded focus structure. A non-monotonic unification-like operation called overlay serves as the main algorithm for manipulating instances of the ontology. It combines new information (cover) with old context information (background) by unifying where possible, and overwriting where unification would fail. Additionally, the operation does not fail if the types differ, but assimilates the background to the type of the cover - thereby possibly deleting information of the background</context>
</contexts>
<marker>LuperFoy, 1992</marker>
<rawString>Susann LuperFoy. 1992. The representation of multimodal user interface dialogues using discourse pegs. In Proceedings of the ACL Conference, pages 22–31.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Norbert Pfleger</author>
<author>Jan Alexandersson</author>
<author>Tilman Becker</author>
</authors>
<title>Scoring functions for overlay and their application in discourse processing.</title>
<date>2002</date>
<booktitle>In KONVENS-02, Saarbr¨ucken, September –</booktitle>
<contexts>
<context position="26830" citStr="Pfleger et al., 2002" startWordPosition="4121" endWordPosition="4124">text information (background) by unifying where possible, and overwriting where unification would fail. Additionally, the operation does not fail if the types differ, but assimilates the background to the type of the cover - thereby possibly deleting information of the background - before the cover is layed over the background. During overlay we record a number of parameters, e. g., the number of type clashes (tc) , the amount of information stemming from background (bg) and cover (co) and the number of conflicting values (cv), which is combined using the formula below to form the score (see (Pfleger et al., 2002)). The total score includes a fifth parameter recency that expresses how accessible the considered discourse state is. To highlight the advantage of the ontology, consider the following dialogue excerpt between the user (U) and the system (S): (6) U: What’s on TV tonight (7) S: [Displays a list of films] Here you see a list of films. (8) U: show me the cinema program. In our ontology, the structure for showing cinema program and the structure for showing tv program are related in that there exists a common superclass AvEntertainment (see also Section 4.5) defining common slots, e. g., begintim</context>
</contexts>
<marker>Pfleger, Alexandersson, Becker, 2002</marker>
<rawString>Norbert Pfleger, Jan Alexandersson, and Tilman Becker. 2002. Scoring functions for overlay and their application in discourse processing. In KONVENS-02, Saarbr¨ucken, September – October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Norbert Pfleger</author>
</authors>
<title>Discourse processing for multimodal dialogues and its application in SmartKom. Master’s thesis, Universit¨at des Saarlandes.</title>
<date>2002</date>
<contexts>
<context position="24745" citStr="Pfleger, 2002" startWordPosition="3791" endWordPosition="3792">heses as either coherent or incoherent, given a baseline 54.55% derived from the annotation experiments (the majority class). Additional application of the semantic coherence scoring method is the calculation of a semantic coherence score for SRHs taking into account their conceptual context (Porzel and Gurevych, 2003). Currently we are also experimenting with the ontology-based automatic domain recognition and domain change detection. 5.2 Computing Dialogue Coherence The ontology provides a good basis for the enrichment and scoring of hypotheses - the two main tasks for the discourse module (Pfleger, 2002). What we call discourse processing is an essential processing step for any dialogue system since it provides an interpretation of the hypotheses based on the discourse history. 5.2.1 Challenge As indicated in Section 5.1, a system processing spoken language and gestures is faced with analysis modules producing several hypotheses. A discourse module has not just the task of scoring these hypotheses in respect to the discourse state, but also interpretating and resolving ambiguities, e. g., (L¨ockelt et al., 2002). 5.2.2 Solution There are several advantages for using an ontology. First, it ena</context>
</contexts>
<marker>Pfleger, 2002</marker>
<rawString>Norbert Pfleger. 2002. Discourse processing for multimodal dialogues and its application in SmartKom. Master’s thesis, Universit¨at des Saarlandes.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Porzel</author>
<author>Iryna Gurevych</author>
</authors>
<title>Contextual coherence in natural language processing. Modeling and Using Context, Springer,</title>
<date>2003</date>
<note>LNCS:to appear.</note>
<contexts>
<context position="24451" citStr="Porzel and Gurevych, 2003" startWordPosition="3746" endWordPosition="3749">igher scores indicating better semantic coherence. Then, the resulting score assigned to Example 4 is 0.6, and the score of Example 5 is 0.75. The evaluation of the method against the hand-annotated corpus has shown that it successfully classifies 73.2% in a German corpus of 2.284 speech recognition hypotheses as either coherent or incoherent, given a baseline 54.55% derived from the annotation experiments (the majority class). Additional application of the semantic coherence scoring method is the calculation of a semantic coherence score for SRHs taking into account their conceptual context (Porzel and Gurevych, 2003). Currently we are also experimenting with the ontology-based automatic domain recognition and domain change detection. 5.2 Computing Dialogue Coherence The ontology provides a good basis for the enrichment and scoring of hypotheses - the two main tasks for the discourse module (Pfleger, 2002). What we call discourse processing is an essential processing step for any dialogue system since it provides an interpretation of the hypotheses based on the discourse history. 5.2.1 Challenge As indicated in Section 5.1, a system processing spoken language and gestures is faced with analysis modules pro</context>
</contexts>
<marker>Porzel, Gurevych, 2003</marker>
<rawString>Robert Porzel and Iryna Gurevych. 2003. Contextual coherence in natural language processing. Modeling and Using Context, Springer, LNCS:to appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart J Russell</author>
<author>Peter Norvig</author>
</authors>
<title>Artificial Intelligence. A Modern Approach.</title>
<date>1995</date>
<publisher>Prentice Hall,</publisher>
<location>Englewood Cliffs, N.J.</location>
<contexts>
<context position="7988" citStr="Russell and Norvig (1995)" startWordPosition="1179" endWordPosition="1182">or various modules throughout the system. It represents a general conceptualization of the world (toplevel or generic ontology) as well as ofparticular domains (domain-specific ontologies). This way, the ontology represents language-independent knowledge. The languagespecific knowledge is stored elsewhere, e.g. in the lexicon containing lexical items together with their meanings defined in terms of ontology concepts. The ontology described herein was initially designed as a general purpose component for knowledge-based NLP. It includes a top-level developed following the procedure outlined by Russell and Norvig (1995) and originally covered the tourism domain encoding knowledge about sights, historical persons and buildings. Then, the existing ontology was adopted in the SMARTKOM project and modified to cover a number of new domains, e. g., new media and program guides. The top-level ontology was re-used with some slight extensions. Further developments were motivated by the need of a process hierarchy. This hierarchy models processes which are domainindependent in the sense that they can be relevant for many domains, e. g., InformationSearchProcess (see Section 4.3 for more details). Currently, the ontolo</context>
</contexts>
<marker>Russell, Norvig, 1995</marker>
<rawString>Stuart J. Russell and Peter Norvig. 1995. Artificial Intelligence. A Modern Approach. Prentice Hall, Englewood Cliffs, N.J.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susanne Salmon-Alt</author>
</authors>
<title>Interpreting referring expressions by restructuring context.</title>
<date>2000</date>
<booktitle>In Proceedings of ESSLLI2000,</booktitle>
<publisher>UK. Student Session.</publisher>
<location>Birmingham,</location>
<contexts>
<context position="25908" citStr="Salmon-Alt (2000)" startWordPosition="3975" endWordPosition="3976">everal advantages for using an ontology. First, it enables a convenient way for interpreting common phenomena like partial utterances and ellipses. Second, and most notably, using overlay (Alexandersson and Becker, 2003) we can straightforwardly inherit information from one discourse state to another, even if the focussed instance of the ontology is from a different but related type than the one of the current hypothesis. The advantage of this technique becomes evident in the dialogue excerpt below. The data structure of the discourse memory is based on the ideas presented in LuperFoy (1992), Salmon-Alt (2000). A three-tiered partition of a modality, discourse and domain layer is connected with a double threaded focus structure. A non-monotonic unification-like operation called overlay serves as the main algorithm for manipulating instances of the ontology. It combines new information (cover) with old context information (background) by unifying where possible, and overwriting where unification would fail. Additionally, the operation does not fail if the types differ, but assimilates the background to the type of the cover - thereby possibly deleting information of the background - before the cover</context>
</contexts>
<marker>Salmon-Alt, 2000</marker>
<rawString>Susanne Salmon-Alt. 2000. Interpreting referring expressions by restructuring context. In Proceedings of ESSLLI2000, Birmingham, UK. Student Session.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wolfgang Wahlster</author>
<author>Norbert Reithinger</author>
<author>Anselm Blocher</author>
</authors>
<title>SmartKom: Multimodal communication with a life-like character.</title>
<date>2001</date>
<booktitle>In Proceedings of the 7th European Conference on Speech Communication and Technology.,</booktitle>
<pages>1547--1550</pages>
<contexts>
<context position="6519" citStr="Wahlster et al., 2001" startWordPosition="969" endWordPosition="972">nts or individuals can also be associated with a class definition via slot constraints. The decision to restrict ourselves to schemes based on the description logic is due to the fact that it allows to represent enough knowledge for the effective operation of envisaged NLP applications, e. g., those described in Section 5. We used the OIL language in particular as a whole range of software is freely available to support ontology construction as mentioned above. Additionaly, the usage of the ontology in Semantic Web applications would be simplified. 3 The SMARTKOM Ontology The SMARTKOM system (Wahlster et al., 2001) comprises a large set of input and output modalities which the most advanced current systems feature, together with an efficient fusion and fission pipeline. SMARTKOM features speech input with prosodic analysis, gesture input via infrared camera, recognition of facial expressions and their emotional states. On the output side, the system features a gesturing and speaking life-like character together with displayed generated text and multimedia graphical output. It currently comprises nearly 50 modules running on a parallel virtual machine-based integration software called Multiplatform.4 As </context>
</contexts>
<marker>Wahlster, Reithinger, Blocher, 2001</marker>
<rawString>Wolfgang Wahlster, Norbert Reithinger, and Anselm Blocher. 2001. SmartKom: Multimodal communication with a life-like character. In Proceedings of the 7th European Conference on Speech Communication and Technology., pages 1547–1550.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>