<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000413">
<title confidence="0.9870865">
From Manual to Semi-automatic Semantic Annotation: About
Ontology-based Text Annotation Tools
</title>
<author confidence="0.812318">
M. Erdmann, A. Maedche, H.-P. Schnurr, S. Staab
</author>
<affiliation confidence="0.75141">
Institute AIFB, Karlsruhe University, 76128 Karlsruhe, Germany
</affiliation>
<address confidence="0.266409">
erdmann, maedche, schnurr, staab @aifb.uni-karlsruhe.de
</address>
<email confidence="0.673072">
http://www.aifb.uni-karlsruhe.de/WBS
</email>
<sectionHeader confidence="0.989846" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999798466666667">
Semantic Annotation is a basic technology for intelli-
gent content and is beneficial in a wide range of content-
oriented intelligent applications. In this paper we present
our work in ontology-based semantic annotation, which
is embedded in a scenario of a knowledge portal appli-
cation. Starting with seemingly good and bad manual
semantic annotation, we describe our experiences made
within the KA -initiative. The experiences gave us the
starting point for developing an ergonomic and knowl-
edge base-supported annotation tool. Furthermore, the
annotation tool described are currently extended with
mechanisms for semi-automatic information-extraction
based annotation. Supporting the evolving nature of
semantic content we additionally describe our idea of
evolving ontologies supporting semantic annotation.
</bodyText>
<sectionHeader confidence="0.998992" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999937476190476">
The KA -initiative (Knowledge Annotation initiative of
the Knowledge Acquisition community) was launched at
EKAW in 1997 in order to provide semantic access to in-
formation stored in web pages in the WWW. It built on
manual semantic annotation for integration and retrieval
of facts from semantically annotated web pages, which
belonged to members of the knowledge acquisition com-
munity (Decker et al., 1999; Benjamins et al., 1999). The
initiative recently developed into a more comprehensive
concept viz. the KA community portal, which allows for
providing, browsing and retrieving information through
various means of ontology-based support (Staab et al.,
2000). All along the way, the usage of semantic anno-
tation as the underpinning for semantics-based fact re-
trieval, integration, and presentation has remained one of
the major cornerstones of the system.
The content of the paper is organized as follows. In
Section 2 we start with a brief introduction to our notion
of a community web portal to set up the context of our
use of semantic annotations. Then, we present the prac-
tical problems we have encountered with manual annota-
tions and the lessons learned from these experiences (cf.
Section 3). In Section 4 the development of annotation
tools is sketched that facilitate manual semantic anno-
tation by following ergonomic considerations about the
process that someone who is annotating information goes
through and inferencing support that provides a compre-
hensive view on what has been annotated, so far. The de-
velopment of an information extraction-based system for
semi-automatic annotation that proposes annotations to
the human who is performing annotations is presented in
Section 5. We conceive semantic annotation as a cyclic
process between the actual task of annotating documents
and the development and adaptation of a domain ontol-
ogy. Incoming information that is to be annotated does
not only require some more annotating, but also contin-
uous adaptation to new semantic terminology and rela-
tionships. This cyclic process of evolving ontologies is
shown in Section 6. Our objective here is to give the
reader a comprehensive picture of what semantic annota-
tion has meant in our application and where it is heading
now.
</bodyText>
<sectionHeader confidence="0.9252805" genericHeader="method">
2 Scenario: Semantic Community Web
Portal
</sectionHeader>
<bodyText confidence="0.9991765">
Community web portals serve as high quality informa-
tion repositories for the information needs of particular
communities on the web. A prerequisite for fulfilling
this role is the accessibility of information. In commu-
nity portals this information is typically provided by the
users of the portal, i.e. the portal is driven by the com-
munity for the community. We have been maintaining a
web portal for the Knowledge Acquisition community1
and, thus, have gained some experience with the difficul-
ties of providing information for that portal by semantic
annotations.
We here give only a very brief sketch of the KA com-
munity web portal. A broader introduction to the meth-
ods and tools developed in this context can be found in
(Staab et al., 2000). The portal’s main component is On-
tobroker (Decker et al., 1999), that uses ontologies to
provide an integrated view on distributed, heterogenous
information sources. The ontology is the means for cap-
turing domain knowledge in a generic way that provides
a commonly agreed understanding of a domain, which
may be reused and shared within communities or appli-
cations. The ontology can be used to semantically anno-
tate web pages that are accessed by Ontobroker
The Ontobroker system consists of (i) a crawling com-
ponent, (ii) a knowledge base, (iii) an inference engine,
and (iv) a query interface. The crawler collects informa-
</bodyText>
<footnote confidence="0.933568">
1http://ka2portal.aifb.uni-karlBruhe.de
</footnote>
<bodyText confidence="0.9997098">
tion contained in registered web pages and stores it in the
knowledge base. The HTML pages are manually anno-
tated with special semantic tags, a proprietary extension
to HTML that is compatible with common web browsers.
This annotation language is presented in the next section.
Thus, the web crawler establishes the core of the knowl-
edge base, that is enhanced by applying axioms from the
ontology to these ground facts. The ontology is repre-
sented in Frame Logic (Kifer et al., 1995), an object-
oriented and logics-based language. Thus, axioms can be
formulated using a subset of first order logic statements
including object oriented modelling primitives. Finally,
the information stored in the knowledge base or derived
by the inference engine can be accessed using Frame
Logic queries.
</bodyText>
<sectionHeader confidence="0.982313" genericHeader="method">
3 Manual Semantic Annotations
</sectionHeader>
<subsectionHeader confidence="0.994916">
3.1 HTML-A
</subsectionHeader>
<bodyText confidence="0.999848064516129">
The main source of information for the KA portal stems
from distributed web pages maintained by members of
the KA community. These web pages have been man-
ually annotated to explicitely represent the semantics of
their contents (cf. Figure 1). Since a huge amount of rel-
evant information for most communities is represented in
HTML, we chose to enhance HTML with few semanti-
cally relevant extensions. The resulting annotation lan-
guage HTML-A (Decker et al., 1999) adds to HTML
primitives for tagging instances of concepts, for relat-
ing these instances, and for setting their properties, i.e.
the ontology serves as a schema for semantic statements
in these pages. For all these primitives the HTML an-
chor tag &lt;A&gt; has been extended with a special attribute
onto. This decision implies that the original informa-
tion sources hardly have to be changed to provide se-
mantically meaningful information. The semantic tags
are embedded in the ordinary HTML text in such a way
that standard browsers can still process the HTML pages
and, at the same time, Ontobroker’s crawler can ex-
tract the semantic annotations from them. This kind
of semantic annotation resembles Knuth’s literate pro-
gramming (Knuth, 1984), where few semantically rele-
vant and formal statements are embedded in unstructured
prose text. In Ontobroker, objects (instances of concepts)
are uniquely identified by a URI, i.e. resources in the web
are interpreted as surrogates for real objects like persons,
organizations, and publications. To associate (in HTML)
such an object with a concept from the ontology one
of the following statements can be made in the HTML
source.
</bodyText>
<equation confidence="0.99765125">
&lt;A onto=&amp;quot;’http://www.aifb.uni-
karlsruhe.de/studer’:Researcher&amp;quot;&gt;&lt;/A&gt;
&lt;A onto=&amp;quot;’www9’:InProceedings&amp;quot;&gt;&lt;/A&gt;
&lt;A onto=&amp;quot;page:Institute&amp;quot;&gt;&lt;/A&gt;
</equation>
<bodyText confidence="0.986976818181818">
In the schema &lt;A onto=&amp;quot; : &amp;quot;&gt;&lt;/A&gt; of these ex-
pressions represents the instance and represents the
concept. can either be a global URI, a local part of
a URI (that is expanded by the crawler to a global one),
or one of the special keywords page, body, href, or
tag. These special keywords represent resources rel-
ative to the current tag and the current web page, e.g.
the keyword page represents the URI of the webpage
of this statement. The following statements both define
formally the value of the name attribute of the object rep-
resented by the current page:
</bodyText>
<equation confidence="0.5621645">
&lt;A onto=&amp;quot;page[name=’Rudi Studer’]&amp;quot;&gt;&lt;/A&gt;
&lt;A onto=&amp;quot;page[name=body]&amp;quot;&gt;Rudi Studer&lt;/A&gt;
</equation>
<bodyText confidence="0.9997589">
The keyword body refers to the content of the anchor
tag. Thus, the actual information is rendered by a web
browser and at the same time interpreted formally by
the crawler. Including semantics in this way into HTML
pages reduces redundancy and enhances maintainability,
since changes in the prose part of the page are immedi-
ately reflected in the formal part, as well.
To establish relationships between two objects similar
statements can be made, since binary relations can be
modelled as attributes:
</bodyText>
<equation confidence="0.521183428571429">
&lt;A onto=&amp;quot;page[affiliation=’http://www.aifb.uni-
karlsruhe.de’]&amp;quot;&gt;&lt;/A&gt;
&lt;A onto=&amp;quot;page[affiliation=href]&amp;quot;
href=&amp;quot;http://www.aifb.uni-karlsruhe.de&amp;quot;&gt;
Institut AIFB&lt;/A&gt;
&lt;A onto=&amp;quot;page[authorOf=href]&amp;quot;
href=&amp;quot;publications.html#www9&amp;quot;&gt;
</equation>
<subsectionHeader confidence="0.783614">
Semantic Community Web Portals&lt;/A&gt;
</subsectionHeader>
<bodyText confidence="0.99988425">
The href keyword defines the target of the hypertext
link as an object representing the value of the attribute. If
this link is relative it is expanded to its global URI before
putting the facts into the knowledge base.
</bodyText>
<figure confidence="0.551373">
ASCII Editor
</figure>
<figureCaption confidence="0.9863845">
Figure 1: Manually annotating HTML pages with se-
mantic information.
</figureCaption>
<subsectionHeader confidence="0.995901">
3.2 Experiences
</subsectionHeader>
<bodyText confidence="0.999897375">
Our experiences with the KA2 initiative were quite dis-
appointing, concerning the information providing pro-
cess. There were about 30 people willing to provide in-
formation from their web pages to Ontobroker. About
15 accepted and were (more or less) able to annotate
their pages. The other 15 needed rather extensive sup-
port from the Ontobroker team. One of our students pre-
pared annotated versions of their homepages. Since the
</bodyText>
<figure confidence="0.944464666666667">
Docs
Knowledge Base Ontology
Dsdfdsfsdf
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
Annotator
Annotated
Docs
Crawler
</figure>
<figureCaption confidence="0.99998">
Figure 2: Annotation Dialog.
</figureCaption>
<bodyText confidence="0.999960607142857">
to add his EMAIL address to the knowledge base. If
there would be no corresponding known object in the
knowledge base, the user would have to select Aca-
demicStaff Neu to add a new instance. Thereby,
the system automatically creates a primary key for that
new object. In the middle of the right column of
Figure 2, the attributes of the highlighted concept are
shown. The selected part of the document, namely
studer@aifb.uni-karlsruhe.de in our example,
may now be moved via drag-and-drop to the appropri-
ate attribute, in our example the attribute EMAIL. The
user thereby annotates the selected part of the document.
Clicking the ”R”-button in the middle of the right col-
umn in Figure 2 shows a list of relations linked to the
chosen concept. Selecting one of the indicated relations
gives a list of possible instances, where the relation may
point to. The user picks up the appropriate instance and
thus, links both concepts with the selected relation. The
dialog shown in Figure 2 offers the whole range of an-
notation support to the user. With the features of our
annotation tool, we support annotators with an interac-
tive, graphical means helping to avoid syntax errors. We
support them in choosing the most appropriate concepts
for instances and provide an object repository to identify
existing instances. As indicated in Figure 3, the annota-
tion tool integrates the ontology and the knowledge base
into the editing environment to allow for ergonomic and
knowledge base-supported annotating.
</bodyText>
<sectionHeader confidence="0.997452" genericHeader="method">
5 Semi-Automatic Annotation
</sectionHeader>
<bodyText confidence="0.9715605">
Based on our experiences and the existing annotation
tool for supporting ontology-based semantic annotation
</bodyText>
<figure confidence="0.593367">
Annotation Tool V1.0
</figure>
<figureCaption confidence="0.968254">
Figure 3: Ergonomic and inference-supported Annota-
tion.
</figureCaption>
<bodyText confidence="0.999513133333333">
of texts, we now approach semi-automatic annotation
of natural language texts. We conceive an informa-
tion extraction-based appraoch for semi-automatic anno-
tation, which has been implemented on top of SMES
(Saarbr¬ucken Message Extraction System), a shallow
text processor for German (cf. (Neumann et al., 1997)).
This is a generic component that adheres to several prin-
ciples that are crucial for our objectives. (i), it is fast and
robust, (ii), it realizes a mapping from terms to ontologi-
cal concepts, (iii) it yields dependency relations between
terms, and, (iv), it is easily adaptable to new domains.2
We here give a short survey on SMES in order to pro-
vide the reader with a comprehensive picture of what un-
derlies our system. The architecture of SMES comprises
a tokenizer based on regular expressions, a lexical anal-
</bodyText>
<footnote confidence="0.742399">
2The interlinkage between the information extraction system SMES
and domain ontologies is described in further detail in (Staab et al.,
1999).
</footnote>
<figure confidence="0.992778538461539">
User
Docs
Dsdfdsfsdf
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdfsdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
Annotated
Docs
</figure>
<bodyText confidence="0.995500333333333">
ysis component including a word and a domain lexicon,
and a chunk parser. The tokenizer scans the text in order
to identify boundaries of words and complex expressions
like “$20.00” or “Mecklenburg-Vorpommern” 3, and to
expand abbreviations. The lexicon contains more than
120,000 stem entries and more than 12,000 subcatego-
rization frames describing information used for lexical
analysis and chunk parsing. Furthermore, the domain-
specific part of the lexicon associates word stems with
concepts that are available in the concept taxonomy. Lex-
ical Analysis uses the lexicon to perform, (1), morpho-
logical analysis, i.e., the identification of the canonical
common stem of a set of related word forms and the
analysis of compounds, (2), recognition of name enti-
ties, (3), retrieval of domain-specific information, and,
(4), part-of-speech tagging. While the steps (1),(2) and
(4) can be a viewed as standard for information extrac-
tion approaches (cf. (Appelt et al., 1993; Neumann et al.,
1997)), the step (3) is of specific interest for our annota-
tion task. This step associates single words or complex
expressions with a concept from the ontology if a corre-
sponding entry in the domain-specific part of the lexicon
exists. E.g., the expression “Hotel Schwarzer Adler” is
associated with the concept Hotel.
</bodyText>
<subsectionHeader confidence="0.720964">
Annotation Tool V2.0
</subsectionHeader>
<bodyText confidence="0.971832764705883">
SMES includes a chunk parser based on weighted fi-
nite state transducers to efficiently process phrasal and
sentential patterns. The parser works on the phrasal
level, before it analyzes the overall sentence. Gram-
matical functions (such as subject, direct-object) are de-
termined for each dependency-based sentential structure
on the basis of subcategorizations frames in the lexicon.
Our primary output derived from SMES consists of de-
pendency relations (Hudson, 1990) found through lexi-
cal analysis (compound processing) and through parsing
at the phrase and sentential level. Thereby, the gram-
matical dependency relation need not even hold directly
between two conceptually meaningful entities. For in-
stance, in the sentence ”The Hotel Schwarzer Adler
in Rostock celebrates Christmas.“, “Hotel Schwarzer
Adler” and “Rostock”, the concepts of which appear in
the ontology as Hotel and City, respectively, are not di-
rectly connected by a dependency relation. However, the
preposition “in” acts as a mediator that incurs the con-
ceptual pairing of Hotel with City.
Figure 4 depicts the architecture of the semi-automatic
3Mecklenburg-Vorpommern is a region in the north east of Ger-
many.
annotation tool. Incoming documents are processed us-
ing the information extraction system SMES. SMES as-
sociates single words or complex expressions with a con-
cept from the ontology, connected through the domain
lexicon linkage. Recognized concepts and dependency
relations between concepts are highlighted as suggested
annotations. This mechanism has the advantage that all
relevant information in the document with regard to the
ontology is recognized and proposed to the annotator.
The actual process of annotation is delegated to the an-
notation tool described in section 4.
</bodyText>
<sectionHeader confidence="0.986296" genericHeader="method">
6 Evolving Ontologies
</sectionHeader>
<bodyText confidence="0.975191714285714">
In the previous sections 3, 4 and 5 we have abstracted
from the interlinkage between evolving ontologies and
the different annotation mechanisms. However, in any
realistic application scenario, incoming information that
is to be annotated does not only require some more an-
notating, but also continuous adaptation to new seman-
tic terminology and relationships. Terms evolve in their
meanings, or take on new meanings as new technologies
are developed, and as existing ones evolve.
The abstraction from the interlinkage between annota-
tion and evolving ontologies resulted in problems, (i) if
the meaning of ontological elements changed, (ii) if the
elements in the ontology became unnecessary and have
been eliminated, or (iii) if new elements have been added
to the ontology. Our experiences have shown that anno-
tation and ontology development and maintenance must
be considered as a cyclic process. Thus, in a realistic an-
notation scenario a feedback loop and tight integration is
required, so that new conceptual structures can be added
to the ontology for supporting the actual task of annotat-
ing documents towards evolving ontologies.
Manual Ontology Engineering. Starting with manual
semantic annotation as described in Section 3 the ontol-
ogy was represented as an ASCII file in FLogic. There
was only few documentation, no browsing was possible,
and it was fixed from the beginning. The process of man-
ual semantic annotation didn’t incorporate the ontology,
so that typing errors were not unusual. One of the more
fundamental problems were incorrect coreferences, be-
cause no interlinkage between new annotated facts and
existing facts was supported.
As described in Section 4 our experiences showed
us the necessity for ergonomic and knowledge base-
supported annotation. We developed a tool which in-
cludes the domain ontology directly in its interface, de-
fines automatically identifiers and references to exist-
ing facts contained in the knowledge base. We also de-
veloped an ontology engineering environment OntoEdit 4
supporting the ontology engineer in modeling conceptual
structures.
Semi-Automatic Ontology Engineering. Currently
we are working on the tight integration between seman-
</bodyText>
<footnote confidence="0.966686666666667">
4A comprehensive description of the ontology engineering environ-
ment OntoEdit and the underlying methodology is given in (Staab and
Maedche, 2000).
</footnote>
<figure confidence="0.996862428571428">
Domain Lexicon
Docs
Information
Extraction
Annotated
Docs
User
</figure>
<figureCaption confidence="0.7485244">
Figure 4: Semi-automatic Annotation.
Dsd fdsfsdf
sdfsdf sdfsdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdf sdfsdf sdfsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdfs dfsd fsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
sdfsdf sdfsd fsdfsdfsd
sdfsdfdsfsdfsdfsdfsdfsdfocs
</figureCaption>
<bodyText confidence="0.999993285714286">
tic annotation and ontology engineering. Lexical re-
sources are directly mapped onto concepts and relations
contained in the ontology. The coding nature of ontolo-
gies makes it necessary to account for changes. Hence,
we have been developing methods that propose new con-
ceptual structures to the maintainer of the ontology (cf.
(Maedche and Staab, 2000a)). In parallel, linguistic
resources are gathered, which connect the conceptual
structures with the information extraction system. The
information extraction system supports the engineering
of evolving ontologies as well as the process of extract-
ing annotation-relevant information. The underlying idea
is that acquired domain specific knowledge and linguis-
tic resources are connected to natural language using a
tight interplay between ontology and domain lexicon.
In (Maedche and Staab, 2000b) we describe our work
in semi-automatic engineering and learning of domain
ontologies from text. A comprehensive architecture lays
the foundation for acquiring domain ontologies and lin-
guistic resources. The main components of the archi-
tecture are (i) the Text &amp; Processing Management, (ii)
the Information Extraction Server (SMES), (iii) a Lexi-
cal Database and Domain Lexicon, (iv) a Learning Mod-
ule, and (v) the Ontology Engineering Environment On-
toEdit. The architecture has been fully implemented
in the “Ontology Learning”-Environment Text-To-Onto
and lays the foundation for supporting the development
of evolving ontologies from text.
</bodyText>
<sectionHeader confidence="0.99977" genericHeader="related work">
7 Related Work
</sectionHeader>
<bodyText confidence="0.999941115384615">
An approach similar to our first tries of annotating
HTML using ontologies has been developed at the Uni-
versity of Maryland. The SHOE system (Luke et al.,
1997) defines additional tags that can be embedded in
the body of HTML pages. In SHOE there is no di-
rect relationship between the new tags and the original
text of the page, i.e. SHOE tags are not annotations in a
strict sense. In (Heflin et al., 1999), the authors report
of similar observations of the “annotation” process as we
present here.5
When talking about semantic annotations, terms like
XML (Bray et al., 1998) and RDF (Lassila and Swick,
1999) must not be absent. Especially XML (Extensible
Markup Language) earned a lot of attention in the last
two years since its standardisation. XML allows the defi-
nition of individual tags that can be interpreted according
to the user’s will. E.g. XHTML represents an HTML-
like vocabulary to describe the layout of web pages for
browsers, SMIL defines tags that describe complete mul-
timedia documents, or with XMLNews-tags the text of
news can be annotated with rich semantic meaning such
as the location and date of an event. Pure XML vocabu-
laries like these are not sufficient as means for represent-
ing deep semantics, but they can be complemented by
ontologies to achieve a flexible and well understood way
to represent and transfer content (via XML) and at the
</bodyText>
<footnote confidence="0.886371333333333">
5For a further comparison of several ways to represent knowledge
in the WWW (often by means like semantic annotations) refer to (van
Harmelen and Fensel,1999).
</footnote>
<bodyText confidence="0.999968113636364">
same time to embed the represented facts in a formal and
machine interpretable model of discourse (via the ontol-
ogy). In (Erdmann and Studer, 1999) we show how to
establish such a close coupling automatically.
We expect the relationship of semantic annotations or
semantic metadata with ontologies to be central for the
success of semantic information processing in the future.
The Resource Description Framework (RDF), an (XML-
based) representation format for meta data defined by
the W3C could take a central part in this development,
since an ontology representation mechanism has been
defined on top of the basic RDF primitives. A core lan-
guage introducing notions of classes and relationships
has been proposed to the W3C as RDFS (Brickley and
Guha, 1999). Even richer languages for more elaborate
modeling primitives like symmetric relationships, part-of
relations, or Description-Logic-like subsumption hierar-
chies were proposed in (Erdmann et al., 2000) or (Hor-
rocks et.al., 2000). Thus, RDF could become the means
to represent metadata and ontologies in an open, widely
“spoken” representation and interchange format.
Concerning our mechanisms for semi-automatic se-
mantic annotation described in Section 5 there has been
done only little research. Pustejovsky et al. (Pustejovsky
et al., 1997) describe their approach for semantic index-
ing and typed hyperlinking. As in our approach finite
state technologies support lexical acquisition as well as
semantic tagging. The goal of the overall process is the
generation of so called lexical webs that can be utilized
to enable automatic and semi-automatic construction of
web-based texts.
In (Bod et al., 1997) approaches for learning syntactic
strctures from syntactically tagged corpus has been trans-
ferred to the semantic level, too. In order to tag a text
corpus with type-logical formulae, they created tool en-
vironment called SEMTAGS for semi-automatically en-
riching trees with semantic annotations. SEMTAGS in-
crementally creates a first order markov model based on
existing annotations and proposes a semantic annotation
of new syntactic trees. The authors report promising re-
sults: After the first 100 sentences of the corpus had been
annotated, SEMTAGS already produced the correct an-
notations for 80% of the nodes for the immediately sub-
sequent sentences.
</bodyText>
<sectionHeader confidence="0.999458" genericHeader="conclusions">
8 Discussion
</sectionHeader>
<bodyText confidence="0.99997425">
Based on the KA community portal scenario we have
shown in Section 3 how information has been provided
in the beginning. Our lessons learned from this expe-
rience gave us a starting point for developing more ad-
vanced and more user friendly methods for semantically
annotating documents. The methods are combined with
an information extraction system that semi-automatically
proposes new annotations to the user. Our experiences
have shown that semantic annotation and ontology engi-
neering must be considered a cyclic process.
In the future much work remains to be done. First,we
will have to build an integrated system of annotation
and ontology construction. This system will combine
knowledge base-supported, ergonomic annotation, with
an environment and methods for ontology engineering
and learning from text supporting evolving ontologies.
Second, we have to evaluate our annotation mechanisms.
Evaluation in our annotation architecture can be splitted
into several sub-evaluation phases: ergonomic evalua-
tion, evaluation of the ontology, evaluation of the semi-
automatic suggestions, evaluation of the user’s annota-
tions. Third, we will support the RDF standard for rep-
resenting metadata on the web, representing both ontolo-
gies and generated annotated facts in RDF(S). This stan-
dard will make annotated facts reusable and machine-
processable on the web (Decker et al., 2000).
Acknowledgements. We thank Stefan Decker for initi-
ating the first version of an annotation tool. We thank our
students Mika Maier-Collin and Jochen Klotzbuecher for
the Annotation Tool; Dirk Wenke for the Ontology Engi-
neering Environment OntoEdit; Raphael Volz for the On-
tology Learning Environment Text-To-Onto; DFKI lan-
guage technology group, in particular Guenter Neumann,
for their dedicated support in using SMES. This work
was partially supported by grant GETESS and by Onto-
prise GmbH.
</bodyText>
<sectionHeader confidence="0.998107" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999503810526316">
D. Appelt, J. Hobbs, J. Bear, D. Israel, and M. Tyson. 1993.
FASTUS: A finite state processor for information extraction
from real world text. In Proceedings of IJCAI-93, Cham-
bery, France, August.
R. Benjamins, D. Fensel, and S. Decker. 1999. KA2: Build-
ing Ontologies for the Internet: A Midterm Report. Interna-
tional Journal of Human Computer Studies, 51(3):687.
R. Bod, R. Bonnema, and R. Scha. 1997. Data-oriented se-
mantic interpretation. In In Proceedings of the Second In-
ternational Workshop on Computational Semantics (IWCS),
Tilburg, 1997.
T. Bray, J. Paoli, and C.M. Sperberg-McQueen. 1998. Exten-
sible markup language (XML) 1.0. Technical report, W3C.
http://www.w3.org/TR/1998/REC-xml-19980210.
D. Brickley and R.V. Guha. 1999. Resource descrip-
tion framework (RDF) schema specification. Techni-
cal report, W3C. W3C Proposed Recommendation.
http://www.w3.org/TR/PR-rdf-schema/.
S. Decker, M. Erdmann, D. Fensel, and R. Studer. 1999. Onto-
broker: Ontology Based Access to Distributed and Semi-
Structured Information. In R. Meersman et al., editors,
Database Semantics: Semantic Issues in Multimedia Sys-
tems, pages 351–369. Kluwer Academic Publisher.
S. Decker, J. Jannink, P. Mitra, S. Staab, R. Studer, and
G. Wiederhold. 2000. An information food chain for ad-
vanced applications on the www. In Proceedings of the
Fourth European Conference on Research and Advanced
Technology for Digital Libraries.
M. Erdmann and R. Studer. 1999. Ontologies as Conceptual
Models for XML Documents. In Proceedings of the 12th In-
ternational Workshop on Knowledge Acquisition, Modelling
and Mangement (KAW’99), Banff, Canada, October.
M. Erdmann, M. Maedche, S. Staab, and S. Decker. 2000. On-
tologies in RDF(S). Technical Report 401, Institute AIFB,
Karlsruhe University.
J. Heflin, J. Hendler, and S. Luke. 1999. Applying Ontology
to the Web: A Case Study. In Proceedings of the Inter-
national Work-Conference on ArtiÞcial and Natural Neural
Networks, IWANN’99.
I. Horrocks et.al. 2000. The ontology interchange lan-
guage oil: The grease between ontologies. Technical
report, Dep. of Computer Science, Univ. of Manch-
ester, UK/ Vrije Universiteit Amsterdam, NL/ AIdmin-
istrator, Nederland B.V./ AIFB, Univ. of Karlsruhe, DE.
http://www.cs.vu.nl/˜dieter/oil/.
R. Hudson. 1990. English Word Grammar. Basil Blackwell,
Oxford.
Michael Kifer, Georg Lausen, and James Wu. 1995. Logical
foundations of object-oriented and frame-based languages.
Journal of the ACM, 42.
D. E. Knuth. 1984. Literate programming. The Computer
Journal, 27:97–111.
O. Lassila and R. Swick. 1999. Resource descrip-
tion framework (RDF) model and syntax specifica-
tion. Technical report, W3C. W3C Recommendation.
http://www.w3.org/TR/REC-rdf-syntax.
S. Luke, L. Spector, D. Rager, and J. Hendler. 1997. Ontology-
based Web Agents. In Proceedings of First International
Conference on Autonomous Agents, LNCS.
A. Maedche and S. Staab. 2000a. Discovering conceptual re-
lations from text. In Proceedings of ECAI-2000. IOS Press,
Amsterdam.
A. Maedche and S. Staab. 2000b. Semi-automatic engineer-
ing of ontologies from text. In Proceedings of the 12th In-
ternal Conference on Software and Knowledge Engineering.
Chicago, USA, July, 5-7, 2000. KSI.
G. Neumann, R. Backofen, J. Baur, M. Becker, and C. Braun.
1997. An information extraction core system for real world
german text processing. In In Proceedings of ANLP-97,
pages 208–215, Washington, USA.
J. Pustejovsky, B. Boguraev, M. Verhagen, P. Buitelaar, and
M. Johnston. 1997. Semantic indexing and typed hyper-
linking. In Proceedings of AAAI Spring Symposium, NLP
for WWW.
H.-P. Schnurr and S. Staab. 2000. A proactive inferencing
agent for desk support. In Proceedings of the AAAI Sympo-
sium on Bringing Knowledge to Business Processes, Stan-
ford, CA, USA. AAAI Technical Report, Menlo Park.
S. Staab and A. Maedche. 2000. Ontology engineering beyond
the modeling of concepts and relations. In Proceedings of
the ECAI’2000 Workshop on Application of Ontologies and
Problem-Solving Methods.
S. Staab, C. Braun, A. D¬usterh¬oft, A. Heuer, M. Klettke,
S. Melzig, G. Neumann, B. Prager, J. Pretzel, H.-P. Schnurr,
R. Studer, H. Uszkoreit, and B. Wrenger. 1999. GETESS —
searching the web exploiting german texts. In Proceedings
of the 3rd Workshop on Cooperative Information Agents,
LNCS, Berlin. Springer.
S. Staab, J. Angele, S. Decker, M. Erdmann, A. Hotho,
A. Maedche, R. Studer, and Y. Sure. 2000. Semantic Com-
munity Web Portals. In Proceedings of the 9th World Wide
Web Conference (WWW-9), Amsterdam, Netherlands.
F. van Harmelen and D. Fensel. 1999. Practical Knowledge
Representation for the Web. In Proceedings of the IJCAI
Workshop on Intelligent Information Integration.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.440236">
<title confidence="0.9840945">From Manual to Semi-automatic Semantic Annotation: Ontology-based Text Annotation Tools</title>
<author confidence="0.889163">M Erdmann</author>
<author confidence="0.889163">A Maedche</author>
<author confidence="0.889163">H-P Schnurr</author>
<author confidence="0.889163">S</author>
<affiliation confidence="0.861076">Institute AIFB, Karlsruhe University, 76128 Karlsruhe,</affiliation>
<address confidence="0.481168">erdmann, maedche, schnurr, staab</address>
<web confidence="0.997193">http://www.aifb.uni-karlsruhe.de/WBS</web>
<abstract confidence="0.999717">Semantic Annotation is a basic technology for intelligent content and is beneficial in a wide range of contentoriented intelligent applications. In this paper we present our work in ontology-based semantic annotation, which is embedded in a scenario of a knowledge portal application. Starting with seemingly good and bad manual semantic annotation, we describe our experiences made within the KA -initiative. The experiences gave us the starting point for developing an ergonomic and knowledge base-supported annotation tool. Furthermore, the annotation tool described are currently extended with mechanisms for semi-automatic information-extraction based annotation. Supporting the evolving nature of semantic content we additionally describe our idea of evolving ontologies supporting semantic annotation.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>D Appelt</author>
<author>J Hobbs</author>
<author>J Bear</author>
<author>D Israel</author>
<author>M Tyson</author>
</authors>
<title>FASTUS: A finite state processor for information extraction from real world text.</title>
<date>1993</date>
<booktitle>In Proceedings of IJCAI-93,</booktitle>
<location>Chambery, France,</location>
<contexts>
<context position="13744" citStr="Appelt et al., 1993" startWordPosition="2075" endWordPosition="2078">information used for lexical analysis and chunk parsing. Furthermore, the domainspecific part of the lexicon associates word stems with concepts that are available in the concept taxonomy. Lexical Analysis uses the lexicon to perform, (1), morphological analysis, i.e., the identification of the canonical common stem of a set of related word forms and the analysis of compounds, (2), recognition of name entities, (3), retrieval of domain-specific information, and, (4), part-of-speech tagging. While the steps (1),(2) and (4) can be a viewed as standard for information extraction approaches (cf. (Appelt et al., 1993; Neumann et al., 1997)), the step (3) is of specific interest for our annotation task. This step associates single words or complex expressions with a concept from the ontology if a corresponding entry in the domain-specific part of the lexicon exists. E.g., the expression “Hotel Schwarzer Adler” is associated with the concept Hotel. Annotation Tool V2.0 SMES includes a chunk parser based on weighted finite state transducers to efficiently process phrasal and sentential patterns. The parser works on the phrasal level, before it analyzes the overall sentence. Grammatical functions (such as sub</context>
</contexts>
<marker>Appelt, Hobbs, Bear, Israel, Tyson, 1993</marker>
<rawString>D. Appelt, J. Hobbs, J. Bear, D. Israel, and M. Tyson. 1993. FASTUS: A finite state processor for information extraction from real world text. In Proceedings of IJCAI-93, Chambery, France, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Benjamins</author>
<author>D Fensel</author>
<author>S Decker</author>
</authors>
<title>KA2: Building Ontologies for the Internet: A Midterm Report.</title>
<date>1999</date>
<journal>International Journal of Human Computer Studies,</journal>
<volume>51</volume>
<issue>3</issue>
<contexts>
<context position="1562" citStr="Benjamins et al., 1999" startWordPosition="212" endWordPosition="215">rmation-extraction based annotation. Supporting the evolving nature of semantic content we additionally describe our idea of evolving ontologies supporting semantic annotation. 1 Introduction The KA -initiative (Knowledge Annotation initiative of the Knowledge Acquisition community) was launched at EKAW in 1997 in order to provide semantic access to information stored in web pages in the WWW. It built on manual semantic annotation for integration and retrieval of facts from semantically annotated web pages, which belonged to members of the knowledge acquisition community (Decker et al., 1999; Benjamins et al., 1999). The initiative recently developed into a more comprehensive concept viz. the KA community portal, which allows for providing, browsing and retrieving information through various means of ontology-based support (Staab et al., 2000). All along the way, the usage of semantic annotation as the underpinning for semantics-based fact retrieval, integration, and presentation has remained one of the major cornerstones of the system. The content of the paper is organized as follows. In Section 2 we start with a brief introduction to our notion of a community web portal to set up the context of our use</context>
</contexts>
<marker>Benjamins, Fensel, Decker, 1999</marker>
<rawString>R. Benjamins, D. Fensel, and S. Decker. 1999. KA2: Building Ontologies for the Internet: A Midterm Report. International Journal of Human Computer Studies, 51(3):687.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Bod</author>
<author>R Bonnema</author>
<author>R Scha</author>
</authors>
<title>Data-oriented semantic interpretation. In</title>
<date>1997</date>
<booktitle>In Proceedings of the Second International Workshop on Computational Semantics (IWCS),</booktitle>
<location>Tilburg,</location>
<contexts>
<context position="23237" citStr="Bod et al., 1997" startWordPosition="3520" endWordPosition="3523"> ontologies in an open, widely “spoken” representation and interchange format. Concerning our mechanisms for semi-automatic semantic annotation described in Section 5 there has been done only little research. Pustejovsky et al. (Pustejovsky et al., 1997) describe their approach for semantic indexing and typed hyperlinking. As in our approach finite state technologies support lexical acquisition as well as semantic tagging. The goal of the overall process is the generation of so called lexical webs that can be utilized to enable automatic and semi-automatic construction of web-based texts. In (Bod et al., 1997) approaches for learning syntactic strctures from syntactically tagged corpus has been transferred to the semantic level, too. In order to tag a text corpus with type-logical formulae, they created tool environment called SEMTAGS for semi-automatically enriching trees with semantic annotations. SEMTAGS incrementally creates a first order markov model based on existing annotations and proposes a semantic annotation of new syntactic trees. The authors report promising results: After the first 100 sentences of the corpus had been annotated, SEMTAGS already produced the correct annotations for 80%</context>
</contexts>
<marker>Bod, Bonnema, Scha, 1997</marker>
<rawString>R. Bod, R. Bonnema, and R. Scha. 1997. Data-oriented semantic interpretation. In In Proceedings of the Second International Workshop on Computational Semantics (IWCS), Tilburg, 1997.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Bray</author>
<author>J Paoli</author>
<author>C M Sperberg-McQueen</author>
</authors>
<date>1998</date>
<note>Extensible markup language (XML) 1.0. Technical report, W3C. http://www.w3.org/TR/1998/REC-xml-19980210.</note>
<contexts>
<context position="20619" citStr="Bray et al., 1998" startWordPosition="3106" endWordPosition="3109">ving ontologies from text. 7 Related Work An approach similar to our first tries of annotating HTML using ontologies has been developed at the University of Maryland. The SHOE system (Luke et al., 1997) defines additional tags that can be embedded in the body of HTML pages. In SHOE there is no direct relationship between the new tags and the original text of the page, i.e. SHOE tags are not annotations in a strict sense. In (Heflin et al., 1999), the authors report of similar observations of the “annotation” process as we present here.5 When talking about semantic annotations, terms like XML (Bray et al., 1998) and RDF (Lassila and Swick, 1999) must not be absent. Especially XML (Extensible Markup Language) earned a lot of attention in the last two years since its standardisation. XML allows the definition of individual tags that can be interpreted according to the user’s will. E.g. XHTML represents an HTMLlike vocabulary to describe the layout of web pages for browsers, SMIL defines tags that describe complete multimedia documents, or with XMLNews-tags the text of news can be annotated with rich semantic meaning such as the location and date of an event. Pure XML vocabularies like these are not suf</context>
</contexts>
<marker>Bray, Paoli, Sperberg-McQueen, 1998</marker>
<rawString>T. Bray, J. Paoli, and C.M. Sperberg-McQueen. 1998. Extensible markup language (XML) 1.0. Technical report, W3C. http://www.w3.org/TR/1998/REC-xml-19980210.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Brickley</author>
<author>R V Guha</author>
</authors>
<title>Resource description framework (RDF) schema specification.</title>
<date>1999</date>
<tech>Technical report, W3C. W3C Proposed Recommendation. http://www.w3.org/TR/PR-rdf-schema/.</tech>
<contexts>
<context position="22332" citStr="Brickley and Guha, 1999" startWordPosition="3387" endWordPosition="3390">tuder, 1999) we show how to establish such a close coupling automatically. We expect the relationship of semantic annotations or semantic metadata with ontologies to be central for the success of semantic information processing in the future. The Resource Description Framework (RDF), an (XMLbased) representation format for meta data defined by the W3C could take a central part in this development, since an ontology representation mechanism has been defined on top of the basic RDF primitives. A core language introducing notions of classes and relationships has been proposed to the W3C as RDFS (Brickley and Guha, 1999). Even richer languages for more elaborate modeling primitives like symmetric relationships, part-of relations, or Description-Logic-like subsumption hierarchies were proposed in (Erdmann et al., 2000) or (Horrocks et.al., 2000). Thus, RDF could become the means to represent metadata and ontologies in an open, widely “spoken” representation and interchange format. Concerning our mechanisms for semi-automatic semantic annotation described in Section 5 there has been done only little research. Pustejovsky et al. (Pustejovsky et al., 1997) describe their approach for semantic indexing and typed h</context>
</contexts>
<marker>Brickley, Guha, 1999</marker>
<rawString>D. Brickley and R.V. Guha. 1999. Resource description framework (RDF) schema specification. Technical report, W3C. W3C Proposed Recommendation. http://www.w3.org/TR/PR-rdf-schema/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Decker</author>
<author>M Erdmann</author>
<author>D Fensel</author>
<author>R Studer</author>
</authors>
<title>Ontobroker: Ontology Based Access to Distributed and SemiStructured Information. In</title>
<date>1999</date>
<booktitle>Database Semantics: Semantic Issues in Multimedia Systems,</booktitle>
<pages>351--369</pages>
<editor>R. Meersman et al., editors,</editor>
<publisher>Kluwer Academic Publisher.</publisher>
<contexts>
<context position="1537" citStr="Decker et al., 1999" startWordPosition="208" endWordPosition="211">r semi-automatic information-extraction based annotation. Supporting the evolving nature of semantic content we additionally describe our idea of evolving ontologies supporting semantic annotation. 1 Introduction The KA -initiative (Knowledge Annotation initiative of the Knowledge Acquisition community) was launched at EKAW in 1997 in order to provide semantic access to information stored in web pages in the WWW. It built on manual semantic annotation for integration and retrieval of facts from semantically annotated web pages, which belonged to members of the knowledge acquisition community (Decker et al., 1999; Benjamins et al., 1999). The initiative recently developed into a more comprehensive concept viz. the KA community portal, which allows for providing, browsing and retrieving information through various means of ontology-based support (Staab et al., 2000). All along the way, the usage of semantic annotation as the underpinning for semantics-based fact retrieval, integration, and presentation has remained one of the major cornerstones of the system. The content of the paper is organized as follows. In Section 2 we start with a brief introduction to our notion of a community web portal to set </context>
<context position="4225" citStr="Decker et al., 1999" startWordPosition="640" endWordPosition="643">ty of information. In community portals this information is typically provided by the users of the portal, i.e. the portal is driven by the community for the community. We have been maintaining a web portal for the Knowledge Acquisition community1 and, thus, have gained some experience with the difficulties of providing information for that portal by semantic annotations. We here give only a very brief sketch of the KA community web portal. A broader introduction to the methods and tools developed in this context can be found in (Staab et al., 2000). The portal’s main component is Ontobroker (Decker et al., 1999), that uses ontologies to provide an integrated view on distributed, heterogenous information sources. The ontology is the means for capturing domain knowledge in a generic way that provides a commonly agreed understanding of a domain, which may be reused and shared within communities or applications. The ontology can be used to semantically annotate web pages that are accessed by Ontobroker The Ontobroker system consists of (i) a crawling component, (ii) a knowledge base, (iii) an inference engine, and (iv) a query interface. The crawler collects informa1http://ka2portal.aifb.uni-karlBruhe.de</context>
<context position="6118" citStr="Decker et al., 1999" startWordPosition="940" endWordPosition="943">formation stored in the knowledge base or derived by the inference engine can be accessed using Frame Logic queries. 3 Manual Semantic Annotations 3.1 HTML-A The main source of information for the KA portal stems from distributed web pages maintained by members of the KA community. These web pages have been manually annotated to explicitely represent the semantics of their contents (cf. Figure 1). Since a huge amount of relevant information for most communities is represented in HTML, we chose to enhance HTML with few semantically relevant extensions. The resulting annotation language HTML-A (Decker et al., 1999) adds to HTML primitives for tagging instances of concepts, for relating these instances, and for setting their properties, i.e. the ontology serves as a schema for semantic statements in these pages. For all these primitives the HTML anchor tag &lt;A&gt; has been extended with a special attribute onto. This decision implies that the original information sources hardly have to be changed to provide semantically meaningful information. The semantic tags are embedded in the ordinary HTML text in such a way that standard browsers can still process the HTML pages and, at the same time, Ontobroker’s craw</context>
</contexts>
<marker>Decker, Erdmann, Fensel, Studer, 1999</marker>
<rawString>S. Decker, M. Erdmann, D. Fensel, and R. Studer. 1999. Ontobroker: Ontology Based Access to Distributed and SemiStructured Information. In R. Meersman et al., editors, Database Semantics: Semantic Issues in Multimedia Systems, pages 351–369. Kluwer Academic Publisher.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Decker</author>
<author>J Jannink</author>
<author>P Mitra</author>
<author>S Staab</author>
<author>R Studer</author>
<author>G Wiederhold</author>
</authors>
<title>An information food chain for advanced applications on the www.</title>
<date>2000</date>
<booktitle>In Proceedings of the Fourth European Conference on Research and Advanced Technology for Digital Libraries.</booktitle>
<marker>Decker, Jannink, Mitra, Staab, Studer, Wiederhold, 2000</marker>
<rawString>S. Decker, J. Jannink, P. Mitra, S. Staab, R. Studer, and G. Wiederhold. 2000. An information food chain for advanced applications on the www. In Proceedings of the Fourth European Conference on Research and Advanced Technology for Digital Libraries.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Erdmann</author>
<author>R Studer</author>
</authors>
<title>Ontologies as Conceptual Models for XML Documents.</title>
<date>1999</date>
<booktitle>In Proceedings of the 12th International Workshop on Knowledge Acquisition, Modelling and Mangement (KAW’99),</booktitle>
<location>Banff, Canada,</location>
<contexts>
<context position="21720" citStr="Erdmann and Studer, 1999" startWordPosition="3290" endWordPosition="3293">annotated with rich semantic meaning such as the location and date of an event. Pure XML vocabularies like these are not sufficient as means for representing deep semantics, but they can be complemented by ontologies to achieve a flexible and well understood way to represent and transfer content (via XML) and at the 5For a further comparison of several ways to represent knowledge in the WWW (often by means like semantic annotations) refer to (van Harmelen and Fensel,1999). same time to embed the represented facts in a formal and machine interpretable model of discourse (via the ontology). In (Erdmann and Studer, 1999) we show how to establish such a close coupling automatically. We expect the relationship of semantic annotations or semantic metadata with ontologies to be central for the success of semantic information processing in the future. The Resource Description Framework (RDF), an (XMLbased) representation format for meta data defined by the W3C could take a central part in this development, since an ontology representation mechanism has been defined on top of the basic RDF primitives. A core language introducing notions of classes and relationships has been proposed to the W3C as RDFS (Brickley and</context>
</contexts>
<marker>Erdmann, Studer, 1999</marker>
<rawString>M. Erdmann and R. Studer. 1999. Ontologies as Conceptual Models for XML Documents. In Proceedings of the 12th International Workshop on Knowledge Acquisition, Modelling and Mangement (KAW’99), Banff, Canada, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Erdmann</author>
<author>M Maedche</author>
<author>S Staab</author>
<author>S Decker</author>
</authors>
<title>Ontologies in RDF(S).</title>
<date>2000</date>
<tech>Technical Report 401,</tech>
<institution>Institute AIFB, Karlsruhe University.</institution>
<contexts>
<context position="22533" citStr="Erdmann et al., 2000" startWordPosition="3412" endWordPosition="3415"> information processing in the future. The Resource Description Framework (RDF), an (XMLbased) representation format for meta data defined by the W3C could take a central part in this development, since an ontology representation mechanism has been defined on top of the basic RDF primitives. A core language introducing notions of classes and relationships has been proposed to the W3C as RDFS (Brickley and Guha, 1999). Even richer languages for more elaborate modeling primitives like symmetric relationships, part-of relations, or Description-Logic-like subsumption hierarchies were proposed in (Erdmann et al., 2000) or (Horrocks et.al., 2000). Thus, RDF could become the means to represent metadata and ontologies in an open, widely “spoken” representation and interchange format. Concerning our mechanisms for semi-automatic semantic annotation described in Section 5 there has been done only little research. Pustejovsky et al. (Pustejovsky et al., 1997) describe their approach for semantic indexing and typed hyperlinking. As in our approach finite state technologies support lexical acquisition as well as semantic tagging. The goal of the overall process is the generation of so called lexical webs that can b</context>
</contexts>
<marker>Erdmann, Maedche, Staab, Decker, 2000</marker>
<rawString>M. Erdmann, M. Maedche, S. Staab, and S. Decker. 2000. Ontologies in RDF(S). Technical Report 401, Institute AIFB, Karlsruhe University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Heflin</author>
<author>J Hendler</author>
<author>S Luke</author>
</authors>
<title>Applying Ontology to the Web: A Case Study.</title>
<date>1999</date>
<booktitle>In Proceedings of the International Work-Conference on ArtiÞcial and Natural Neural Networks, IWANN’99.</booktitle>
<contexts>
<context position="20450" citStr="Heflin et al., 1999" startWordPosition="3080" endWordPosition="3083">nt OntoEdit. The architecture has been fully implemented in the “Ontology Learning”-Environment Text-To-Onto and lays the foundation for supporting the development of evolving ontologies from text. 7 Related Work An approach similar to our first tries of annotating HTML using ontologies has been developed at the University of Maryland. The SHOE system (Luke et al., 1997) defines additional tags that can be embedded in the body of HTML pages. In SHOE there is no direct relationship between the new tags and the original text of the page, i.e. SHOE tags are not annotations in a strict sense. In (Heflin et al., 1999), the authors report of similar observations of the “annotation” process as we present here.5 When talking about semantic annotations, terms like XML (Bray et al., 1998) and RDF (Lassila and Swick, 1999) must not be absent. Especially XML (Extensible Markup Language) earned a lot of attention in the last two years since its standardisation. XML allows the definition of individual tags that can be interpreted according to the user’s will. E.g. XHTML represents an HTMLlike vocabulary to describe the layout of web pages for browsers, SMIL defines tags that describe complete multimedia documents, </context>
</contexts>
<marker>Heflin, Hendler, Luke, 1999</marker>
<rawString>J. Heflin, J. Hendler, and S. Luke. 1999. Applying Ontology to the Web: A Case Study. In Proceedings of the International Work-Conference on ArtiÞcial and Natural Neural Networks, IWANN’99.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Horrocks et al</author>
</authors>
<title>The ontology interchange language oil: The grease between ontologies.</title>
<date>2000</date>
<tech>Technical report,</tech>
<institution>Dep. of Computer Science, Univ. of Manchester, UK/ Vrije Universiteit Amsterdam, NL/ AIdministrator, Nederland B.V./ AIFB, Univ. of Karlsruhe, DE.</institution>
<note>http://www.cs.vu.nl/˜dieter/oil/.</note>
<marker>al, 2000</marker>
<rawString>I. Horrocks et.al. 2000. The ontology interchange language oil: The grease between ontologies. Technical report, Dep. of Computer Science, Univ. of Manchester, UK/ Vrije Universiteit Amsterdam, NL/ AIdministrator, Nederland B.V./ AIFB, Univ. of Karlsruhe, DE. http://www.cs.vu.nl/˜dieter/oil/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Hudson</author>
</authors>
<title>English Word Grammar.</title>
<date>1990</date>
<publisher>Basil Blackwell,</publisher>
<location>Oxford.</location>
<contexts>
<context position="14569" citStr="Hudson, 1990" startWordPosition="2204" endWordPosition="2205">main-specific part of the lexicon exists. E.g., the expression “Hotel Schwarzer Adler” is associated with the concept Hotel. Annotation Tool V2.0 SMES includes a chunk parser based on weighted finite state transducers to efficiently process phrasal and sentential patterns. The parser works on the phrasal level, before it analyzes the overall sentence. Grammatical functions (such as subject, direct-object) are determined for each dependency-based sentential structure on the basis of subcategorizations frames in the lexicon. Our primary output derived from SMES consists of dependency relations (Hudson, 1990) found through lexical analysis (compound processing) and through parsing at the phrase and sentential level. Thereby, the grammatical dependency relation need not even hold directly between two conceptually meaningful entities. For instance, in the sentence ”The Hotel Schwarzer Adler in Rostock celebrates Christmas.“, “Hotel Schwarzer Adler” and “Rostock”, the concepts of which appear in the ontology as Hotel and City, respectively, are not directly connected by a dependency relation. However, the preposition “in” acts as a mediator that incurs the conceptual pairing of Hotel with City. Figur</context>
</contexts>
<marker>Hudson, 1990</marker>
<rawString>R. Hudson. 1990. English Word Grammar. Basil Blackwell, Oxford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Kifer</author>
<author>Georg Lausen</author>
<author>James Wu</author>
</authors>
<title>Logical foundations of object-oriented and frame-based languages.</title>
<date>1995</date>
<journal>Journal of the ACM,</journal>
<volume>42</volume>
<contexts>
<context position="5310" citStr="Kifer et al., 1995" startWordPosition="813" endWordPosition="816">ledge base, (iii) an inference engine, and (iv) a query interface. The crawler collects informa1http://ka2portal.aifb.uni-karlBruhe.de tion contained in registered web pages and stores it in the knowledge base. The HTML pages are manually annotated with special semantic tags, a proprietary extension to HTML that is compatible with common web browsers. This annotation language is presented in the next section. Thus, the web crawler establishes the core of the knowledge base, that is enhanced by applying axioms from the ontology to these ground facts. The ontology is represented in Frame Logic (Kifer et al., 1995), an objectoriented and logics-based language. Thus, axioms can be formulated using a subset of first order logic statements including object oriented modelling primitives. Finally, the information stored in the knowledge base or derived by the inference engine can be accessed using Frame Logic queries. 3 Manual Semantic Annotations 3.1 HTML-A The main source of information for the KA portal stems from distributed web pages maintained by members of the KA community. These web pages have been manually annotated to explicitely represent the semantics of their contents (cf. Figure 1). Since a hug</context>
</contexts>
<marker>Kifer, Lausen, Wu, 1995</marker>
<rawString>Michael Kifer, Georg Lausen, and James Wu. 1995. Logical foundations of object-oriented and frame-based languages. Journal of the ACM, 42.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D E Knuth</author>
</authors>
<title>Literate programming.</title>
<date>1984</date>
<journal>The Computer Journal,</journal>
<pages>27--97</pages>
<contexts>
<context position="6855" citStr="Knuth, 1984" startWordPosition="1062" endWordPosition="1063">.e. the ontology serves as a schema for semantic statements in these pages. For all these primitives the HTML anchor tag &lt;A&gt; has been extended with a special attribute onto. This decision implies that the original information sources hardly have to be changed to provide semantically meaningful information. The semantic tags are embedded in the ordinary HTML text in such a way that standard browsers can still process the HTML pages and, at the same time, Ontobroker’s crawler can extract the semantic annotations from them. This kind of semantic annotation resembles Knuth’s literate programming (Knuth, 1984), where few semantically relevant and formal statements are embedded in unstructured prose text. In Ontobroker, objects (instances of concepts) are uniquely identified by a URI, i.e. resources in the web are interpreted as surrogates for real objects like persons, organizations, and publications. To associate (in HTML) such an object with a concept from the ontology one of the following statements can be made in the HTML source. &lt;A onto=&amp;quot;’http://www.aifb.unikarlsruhe.de/studer’:Researcher&amp;quot;&gt;&lt;/A&gt; &lt;A onto=&amp;quot;’www9’:InProceedings&amp;quot;&gt;&lt;/A&gt; &lt;A onto=&amp;quot;page:Institute&amp;quot;&gt;&lt;/A&gt; In the schema &lt;A onto=&amp;quot; : &amp;quot;&gt;&lt;/A&gt; o</context>
</contexts>
<marker>Knuth, 1984</marker>
<rawString>D. E. Knuth. 1984. Literate programming. The Computer Journal, 27:97–111.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Lassila</author>
<author>R Swick</author>
</authors>
<title>Resource description framework (RDF) model and syntax specification.</title>
<date>1999</date>
<tech>Technical report, W3C. W3C Recommendation. http://www.w3.org/TR/REC-rdf-syntax.</tech>
<contexts>
<context position="20653" citStr="Lassila and Swick, 1999" startWordPosition="3112" endWordPosition="3115"> Related Work An approach similar to our first tries of annotating HTML using ontologies has been developed at the University of Maryland. The SHOE system (Luke et al., 1997) defines additional tags that can be embedded in the body of HTML pages. In SHOE there is no direct relationship between the new tags and the original text of the page, i.e. SHOE tags are not annotations in a strict sense. In (Heflin et al., 1999), the authors report of similar observations of the “annotation” process as we present here.5 When talking about semantic annotations, terms like XML (Bray et al., 1998) and RDF (Lassila and Swick, 1999) must not be absent. Especially XML (Extensible Markup Language) earned a lot of attention in the last two years since its standardisation. XML allows the definition of individual tags that can be interpreted according to the user’s will. E.g. XHTML represents an HTMLlike vocabulary to describe the layout of web pages for browsers, SMIL defines tags that describe complete multimedia documents, or with XMLNews-tags the text of news can be annotated with rich semantic meaning such as the location and date of an event. Pure XML vocabularies like these are not sufficient as means for representing </context>
</contexts>
<marker>Lassila, Swick, 1999</marker>
<rawString>O. Lassila and R. Swick. 1999. Resource description framework (RDF) model and syntax specification. Technical report, W3C. W3C Recommendation. http://www.w3.org/TR/REC-rdf-syntax.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Luke</author>
<author>L Spector</author>
<author>D Rager</author>
<author>J Hendler</author>
</authors>
<title>Ontologybased Web Agents.</title>
<date>1997</date>
<booktitle>In Proceedings of First International Conference on Autonomous Agents, LNCS.</booktitle>
<contexts>
<context position="20203" citStr="Luke et al., 1997" startWordPosition="3033" endWordPosition="3036">ces. The main components of the architecture are (i) the Text &amp; Processing Management, (ii) the Information Extraction Server (SMES), (iii) a Lexical Database and Domain Lexicon, (iv) a Learning Module, and (v) the Ontology Engineering Environment OntoEdit. The architecture has been fully implemented in the “Ontology Learning”-Environment Text-To-Onto and lays the foundation for supporting the development of evolving ontologies from text. 7 Related Work An approach similar to our first tries of annotating HTML using ontologies has been developed at the University of Maryland. The SHOE system (Luke et al., 1997) defines additional tags that can be embedded in the body of HTML pages. In SHOE there is no direct relationship between the new tags and the original text of the page, i.e. SHOE tags are not annotations in a strict sense. In (Heflin et al., 1999), the authors report of similar observations of the “annotation” process as we present here.5 When talking about semantic annotations, terms like XML (Bray et al., 1998) and RDF (Lassila and Swick, 1999) must not be absent. Especially XML (Extensible Markup Language) earned a lot of attention in the last two years since its standardisation. XML allows</context>
</contexts>
<marker>Luke, Spector, Rager, Hendler, 1997</marker>
<rawString>S. Luke, L. Spector, D. Rager, and J. Hendler. 1997. Ontologybased Web Agents. In Proceedings of First International Conference on Autonomous Agents, LNCS.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Maedche</author>
<author>S Staab</author>
</authors>
<title>Discovering conceptual relations from text.</title>
<date>2000</date>
<booktitle>In Proceedings of ECAI-2000.</booktitle>
<publisher>IOS Press,</publisher>
<location>Amsterdam.</location>
<contexts>
<context position="18889" citStr="Maedche and Staab, 2000" startWordPosition="2841" endWordPosition="2844"> Annotated Docs User Figure 4: Semi-automatic Annotation. Dsd fdsfsdf sdfsdf sdfsdfsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdf sdfsdf sdfsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdfsdfs dfsd fsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdfsdf sdfsd fsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs tic annotation and ontology engineering. Lexical resources are directly mapped onto concepts and relations contained in the ontology. The coding nature of ontologies makes it necessary to account for changes. Hence, we have been developing methods that propose new conceptual structures to the maintainer of the ontology (cf. (Maedche and Staab, 2000a)). In parallel, linguistic resources are gathered, which connect the conceptual structures with the information extraction system. The information extraction system supports the engineering of evolving ontologies as well as the process of extracting annotation-relevant information. The underlying idea is that acquired domain specific knowledge and linguistic resources are connected to natural language using a tight interplay between ontology and domain lexicon. In (Maedche and Staab, 2000b) we describe our work in semi-automatic engineering and learning of domain ontologies from text. A comp</context>
</contexts>
<marker>Maedche, Staab, 2000</marker>
<rawString>A. Maedche and S. Staab. 2000a. Discovering conceptual relations from text. In Proceedings of ECAI-2000. IOS Press, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Maedche</author>
<author>S Staab</author>
</authors>
<title>Semi-automatic engineering of ontologies from text.</title>
<date>2000</date>
<booktitle>In Proceedings of the 12th Internal Conference on Software and Knowledge Engineering.</booktitle>
<publisher>KSI.</publisher>
<location>Chicago, USA,</location>
<contexts>
<context position="18889" citStr="Maedche and Staab, 2000" startWordPosition="2841" endWordPosition="2844"> Annotated Docs User Figure 4: Semi-automatic Annotation. Dsd fdsfsdf sdfsdf sdfsdfsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdf sdfsdf sdfsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdfsdfs dfsd fsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdfsdf sdfsd fsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs tic annotation and ontology engineering. Lexical resources are directly mapped onto concepts and relations contained in the ontology. The coding nature of ontologies makes it necessary to account for changes. Hence, we have been developing methods that propose new conceptual structures to the maintainer of the ontology (cf. (Maedche and Staab, 2000a)). In parallel, linguistic resources are gathered, which connect the conceptual structures with the information extraction system. The information extraction system supports the engineering of evolving ontologies as well as the process of extracting annotation-relevant information. The underlying idea is that acquired domain specific knowledge and linguistic resources are connected to natural language using a tight interplay between ontology and domain lexicon. In (Maedche and Staab, 2000b) we describe our work in semi-automatic engineering and learning of domain ontologies from text. A comp</context>
</contexts>
<marker>Maedche, Staab, 2000</marker>
<rawString>A. Maedche and S. Staab. 2000b. Semi-automatic engineering of ontologies from text. In Proceedings of the 12th Internal Conference on Software and Knowledge Engineering. Chicago, USA, July, 5-7, 2000. KSI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Neumann</author>
<author>R Backofen</author>
<author>J Baur</author>
<author>M Becker</author>
<author>C Braun</author>
</authors>
<title>An information extraction core system for real world german text processing. In</title>
<date>1997</date>
<booktitle>In Proceedings of ANLP-97,</booktitle>
<pages>208--215</pages>
<location>Washington, USA.</location>
<contexts>
<context position="11884" citStr="Neumann et al., 1997" startWordPosition="1802" endWordPosition="1805">base into the editing environment to allow for ergonomic and knowledge base-supported annotating. 5 Semi-Automatic Annotation Based on our experiences and the existing annotation tool for supporting ontology-based semantic annotation Annotation Tool V1.0 Figure 3: Ergonomic and inference-supported Annotation. of texts, we now approach semi-automatic annotation of natural language texts. We conceive an information extraction-based appraoch for semi-automatic annotation, which has been implemented on top of SMES (Saarbr¬ucken Message Extraction System), a shallow text processor for German (cf. (Neumann et al., 1997)). This is a generic component that adheres to several principles that are crucial for our objectives. (i), it is fast and robust, (ii), it realizes a mapping from terms to ontological concepts, (iii) it yields dependency relations between terms, and, (iv), it is easily adaptable to new domains.2 We here give a short survey on SMES in order to provide the reader with a comprehensive picture of what underlies our system. The architecture of SMES comprises a tokenizer based on regular expressions, a lexical anal2The interlinkage between the information extraction system SMES and domain ontologie</context>
<context position="13767" citStr="Neumann et al., 1997" startWordPosition="2079" endWordPosition="2082">lexical analysis and chunk parsing. Furthermore, the domainspecific part of the lexicon associates word stems with concepts that are available in the concept taxonomy. Lexical Analysis uses the lexicon to perform, (1), morphological analysis, i.e., the identification of the canonical common stem of a set of related word forms and the analysis of compounds, (2), recognition of name entities, (3), retrieval of domain-specific information, and, (4), part-of-speech tagging. While the steps (1),(2) and (4) can be a viewed as standard for information extraction approaches (cf. (Appelt et al., 1993; Neumann et al., 1997)), the step (3) is of specific interest for our annotation task. This step associates single words or complex expressions with a concept from the ontology if a corresponding entry in the domain-specific part of the lexicon exists. E.g., the expression “Hotel Schwarzer Adler” is associated with the concept Hotel. Annotation Tool V2.0 SMES includes a chunk parser based on weighted finite state transducers to efficiently process phrasal and sentential patterns. The parser works on the phrasal level, before it analyzes the overall sentence. Grammatical functions (such as subject, direct-object) ar</context>
</contexts>
<marker>Neumann, Backofen, Baur, Becker, Braun, 1997</marker>
<rawString>G. Neumann, R. Backofen, J. Baur, M. Becker, and C. Braun. 1997. An information extraction core system for real world german text processing. In In Proceedings of ANLP-97, pages 208–215, Washington, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
<author>B Boguraev</author>
<author>M Verhagen</author>
<author>P Buitelaar</author>
<author>M Johnston</author>
</authors>
<title>Semantic indexing and typed hyperlinking.</title>
<date>1997</date>
<booktitle>In Proceedings of AAAI Spring Symposium, NLP for WWW.</booktitle>
<contexts>
<context position="22874" citStr="Pustejovsky et al., 1997" startWordPosition="3463" endWordPosition="3466">es and relationships has been proposed to the W3C as RDFS (Brickley and Guha, 1999). Even richer languages for more elaborate modeling primitives like symmetric relationships, part-of relations, or Description-Logic-like subsumption hierarchies were proposed in (Erdmann et al., 2000) or (Horrocks et.al., 2000). Thus, RDF could become the means to represent metadata and ontologies in an open, widely “spoken” representation and interchange format. Concerning our mechanisms for semi-automatic semantic annotation described in Section 5 there has been done only little research. Pustejovsky et al. (Pustejovsky et al., 1997) describe their approach for semantic indexing and typed hyperlinking. As in our approach finite state technologies support lexical acquisition as well as semantic tagging. The goal of the overall process is the generation of so called lexical webs that can be utilized to enable automatic and semi-automatic construction of web-based texts. In (Bod et al., 1997) approaches for learning syntactic strctures from syntactically tagged corpus has been transferred to the semantic level, too. In order to tag a text corpus with type-logical formulae, they created tool environment called SEMTAGS for sem</context>
</contexts>
<marker>Pustejovsky, Boguraev, Verhagen, Buitelaar, Johnston, 1997</marker>
<rawString>J. Pustejovsky, B. Boguraev, M. Verhagen, P. Buitelaar, and M. Johnston. 1997. Semantic indexing and typed hyperlinking. In Proceedings of AAAI Spring Symposium, NLP for WWW.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H-P Schnurr</author>
<author>S Staab</author>
</authors>
<title>A proactive inferencing agent for desk support.</title>
<date>2000</date>
<booktitle>In Proceedings of the AAAI Symposium on Bringing Knowledge to Business Processes,</booktitle>
<tech>AAAI Technical Report, Menlo Park.</tech>
<location>Stanford, CA, USA.</location>
<marker>Schnurr, Staab, 2000</marker>
<rawString>H.-P. Schnurr and S. Staab. 2000. A proactive inferencing agent for desk support. In Proceedings of the AAAI Symposium on Bringing Knowledge to Business Processes, Stanford, CA, USA. AAAI Technical Report, Menlo Park.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Staab</author>
<author>A Maedche</author>
</authors>
<title>Ontology engineering beyond the modeling of concepts and relations.</title>
<date>2000</date>
<booktitle>In Proceedings of the ECAI’2000 Workshop on Application of Ontologies and Problem-Solving Methods.</booktitle>
<contexts>
<context position="18222" citStr="Staab and Maedche, 2000" startWordPosition="2757" endWordPosition="2760">ecessity for ergonomic and knowledge basesupported annotation. We developed a tool which includes the domain ontology directly in its interface, defines automatically identifiers and references to existing facts contained in the knowledge base. We also developed an ontology engineering environment OntoEdit 4 supporting the ontology engineer in modeling conceptual structures. Semi-Automatic Ontology Engineering. Currently we are working on the tight integration between seman4A comprehensive description of the ontology engineering environment OntoEdit and the underlying methodology is given in (Staab and Maedche, 2000). Domain Lexicon Docs Information Extraction Annotated Docs User Figure 4: Semi-automatic Annotation. Dsd fdsfsdf sdfsdf sdfsdfsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdf sdfsdf sdfsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdfsdfs dfsd fsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs sdfsdf sdfsd fsdfsdfsd sdfsdfdsfsdfsdfsdfsdfsdfocs tic annotation and ontology engineering. Lexical resources are directly mapped onto concepts and relations contained in the ontology. The coding nature of ontologies makes it necessary to account for changes. Hence, we have been developing methods that propose new conceptual structu</context>
</contexts>
<marker>Staab, Maedche, 2000</marker>
<rawString>S. Staab and A. Maedche. 2000. Ontology engineering beyond the modeling of concepts and relations. In Proceedings of the ECAI’2000 Workshop on Application of Ontologies and Problem-Solving Methods.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Staab</author>
<author>C Braun</author>
<author>A D¬usterh¬oft</author>
<author>A Heuer</author>
<author>M Klettke</author>
<author>S Melzig</author>
<author>G Neumann</author>
<author>B Prager</author>
<author>J Pretzel</author>
<author>H-P Schnurr</author>
<author>R Studer</author>
<author>H Uszkoreit</author>
<author>B Wrenger</author>
</authors>
<title>GETESS — searching the web exploiting german texts.</title>
<date>1999</date>
<booktitle>In Proceedings of the 3rd Workshop on Cooperative Information Agents, LNCS,</booktitle>
<publisher>Springer.</publisher>
<location>Berlin.</location>
<marker>Staab, Braun, D¬usterh¬oft, Heuer, Klettke, Melzig, Neumann, Prager, Pretzel, Schnurr, Studer, Uszkoreit, Wrenger, 1999</marker>
<rawString>S. Staab, C. Braun, A. D¬usterh¬oft, A. Heuer, M. Klettke, S. Melzig, G. Neumann, B. Prager, J. Pretzel, H.-P. Schnurr, R. Studer, H. Uszkoreit, and B. Wrenger. 1999. GETESS — searching the web exploiting german texts. In Proceedings of the 3rd Workshop on Cooperative Information Agents, LNCS, Berlin. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Staab</author>
<author>J Angele</author>
<author>S Decker</author>
<author>M Erdmann</author>
<author>A Hotho</author>
<author>A Maedche</author>
<author>R Studer</author>
<author>Y Sure</author>
</authors>
<title>Semantic Community Web Portals.</title>
<date>2000</date>
<booktitle>In Proceedings of the 9th World Wide Web Conference (WWW-9),</booktitle>
<location>Amsterdam, Netherlands.</location>
<contexts>
<context position="1794" citStr="Staab et al., 2000" startWordPosition="244" endWordPosition="247">tiative of the Knowledge Acquisition community) was launched at EKAW in 1997 in order to provide semantic access to information stored in web pages in the WWW. It built on manual semantic annotation for integration and retrieval of facts from semantically annotated web pages, which belonged to members of the knowledge acquisition community (Decker et al., 1999; Benjamins et al., 1999). The initiative recently developed into a more comprehensive concept viz. the KA community portal, which allows for providing, browsing and retrieving information through various means of ontology-based support (Staab et al., 2000). All along the way, the usage of semantic annotation as the underpinning for semantics-based fact retrieval, integration, and presentation has remained one of the major cornerstones of the system. The content of the paper is organized as follows. In Section 2 we start with a brief introduction to our notion of a community web portal to set up the context of our use of semantic annotations. Then, we present the practical problems we have encountered with manual annotations and the lessons learned from these experiences (cf. Section 3). In Section 4 the development of annotation tools is sketch</context>
<context position="4160" citStr="Staab et al., 2000" startWordPosition="629" endWordPosition="632"> web. A prerequisite for fulfilling this role is the accessibility of information. In community portals this information is typically provided by the users of the portal, i.e. the portal is driven by the community for the community. We have been maintaining a web portal for the Knowledge Acquisition community1 and, thus, have gained some experience with the difficulties of providing information for that portal by semantic annotations. We here give only a very brief sketch of the KA community web portal. A broader introduction to the methods and tools developed in this context can be found in (Staab et al., 2000). The portal’s main component is Ontobroker (Decker et al., 1999), that uses ontologies to provide an integrated view on distributed, heterogenous information sources. The ontology is the means for capturing domain knowledge in a generic way that provides a commonly agreed understanding of a domain, which may be reused and shared within communities or applications. The ontology can be used to semantically annotate web pages that are accessed by Ontobroker The Ontobroker system consists of (i) a crawling component, (ii) a knowledge base, (iii) an inference engine, and (iv) a query interface. Th</context>
</contexts>
<marker>Staab, Angele, Decker, Erdmann, Hotho, Maedche, Studer, Sure, 2000</marker>
<rawString>S. Staab, J. Angele, S. Decker, M. Erdmann, A. Hotho, A. Maedche, R. Studer, and Y. Sure. 2000. Semantic Community Web Portals. In Proceedings of the 9th World Wide Web Conference (WWW-9), Amsterdam, Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F van Harmelen</author>
<author>D Fensel</author>
</authors>
<title>Practical Knowledge Representation for the Web.</title>
<date>1999</date>
<booktitle>In Proceedings of the IJCAI Workshop on Intelligent Information Integration.</booktitle>
<marker>van Harmelen, Fensel, 1999</marker>
<rawString>F. van Harmelen and D. Fensel. 1999. Practical Knowledge Representation for the Web. In Proceedings of the IJCAI Workshop on Intelligent Information Integration.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>