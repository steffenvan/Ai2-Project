<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000018">
<title confidence="0.797382">
Automatic Treebank-Based Acquisition of Arabic LFG Dependency
Structures
</title>
<author confidence="0.86508">
Lamia Tounsi Mohammed Attia Josef van Genabith
</author>
<affiliation confidence="0.855664">
NCLT, School of Computing, Dublin City University, Ireland
</affiliation>
<email confidence="0.991158">
{lamia.tounsi, mattia, josef}@computing.dcu.ie
</email>
<sectionHeader confidence="0.997343" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99968925">
A number of papers have reported on meth-
ods for the automatic acquisition of large-scale,
probabilistic LFG-based grammatical resources
from treebanks for English (Cahill and al., 2002),
(Cahill and al., 2004), German (Cahill and al.,
2003), Chinese (Burke, 2004), (Guo and al.,
2007), Spanish (O’Donovan, 2004), (Chrupala
and van Genabith, 2006) and French (Schluter
and van Genabith, 2008). Here, we extend the
LFG grammar acquisition approach to Arabic and
the Penn Arabic Treebank (ATB) (Maamouri and
Bies, 2004), adapting and extending the methodol-
ogy of (Cahill and al., 2004) originally developed
for English. Arabic is challenging because of its
morphological richness and syntactic complexity.
Currently 98% of ATB trees (without FRAG and
X) produce a covering and connected f-structure.
We conduct a qualitative evaluation of our annota-
tion against a gold standard and achieve an f-score
of 95%.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999866239130435">
Treebank-based statistical parsers tend to achieve
greater coverage and robustness compared to ap-
proaches using handcrafted grammars. However,
they are criticised for being too shallow to mark
important syntactic and semantic dependencies
needed for meaning-sensitive applications (Ka-
plan, 2004). To treat this deficiency, a number
of researchers have concentrated on enriching
shallow parsers with deep dependency informa-
tion. (Cahill and al., 2002), (Cahill and al., 2004)
outlined an approach which exploits information
encoded in the Penn-II Treebank (PTB) trees to
automatically annotate each node in each tree
with LFG f-structure equations representing deep
predicate-argument structure relations. From this
LFG annotated treebank, large-scale unification
grammar resources were automatically extracted
and used in parsing (Cahill and al., 2008) and
generation (Cahill and van Genabith, 2006).
This approach was subsequently extended to
other languages including German (Cahill and
al., 2003), Chinese (Burke, 2004), (Guo and al.,
2007), Spanish (O’Donovan, 2004), (Chrupala
and van Genabith, 2006) and French (Schluter
and van Genabith, 2008).
Arabic is a semitic language and is well-known
for its morphological richness and syntactic
complexity. In this paper we describe the porting
of the LFG annotation methodology to Arabic in
order to induce LFG f-structures from the Penn
Arabic Treebank (ATB) (Bies, 2003), (Maamouri
and Bies, 2004). We evaluate both the coverage
and quality of the automatic f-structure annotation
of the ATB. Ultimately, our goal is to use the f-
structure annotated ATB to derive wide-coverage
resources for parsing and generating unrestricted
Arabic text. In this paper we concentrate on the
annotation algorithm.
The paper first provides a brief overview of
Lexical Functional Grammar, and the Penn
Arabic Treebank (ATB). The next section presents
the architecture of the f-structure annotation
algorithm for the acquisition of f-structures from
the Arabic treebank. The last section provides
an evaluation of the quality and coverage of the
annotation algorithm.
</bodyText>
<subsectionHeader confidence="0.996389">
1.1 Lexical Functional Grammar
</subsectionHeader>
<bodyText confidence="0.998833666666667">
Lexical-Functional Grammar (LFG) (Kaplan and
Bresnan, 1982); (Bresnan, 2001), (Falk, 2001)
2001, (Sells, 1985) is a constraint-based theory
of grammar. LFG rejects concepts of configura-
tionality and movement familiar from generative
grammar, and provides a non-derivational alterna-
tive of parallel structures of which phrase structure
trees are only one component.
LFG involves two basic, parallel forms of
</bodyText>
<note confidence="0.9521105">
Proceedings of the EACL 2009 Workshop on Computational Approaches to Semitic Languages, pages 45–52,
Athens, Greece, 31 March, 2009. c�2009 Association for Computational Linguistics
</note>
<page confidence="0.999248">
45
</page>
<bodyText confidence="0.999096">
knowledge representation: c(onstituent)-structure,
which is represented by (f-structure annotated)
phrase structure trees; and f(unctional)-structure,
represented by a matrix of attribute-value pairs.
While c-structure accounts for language-specific
lexical idiosyncrasies, syntactic surface config-
urations and word order variations, f-structure
provides a more abstract level of representation
(grammatical functions/ labeled dependencies),
abstracting from some cross-linguistic syntactic
differences. Languages may differ typologically
as regards surface structural representations, but
may still encode similar syntactic functions (such
as, subject, object, adjunct, etc.). For a recent
overview on LFG-based analyses of Arabic see
(Attia, 2008) who presents a hand-crafted Arabic
LFG parser using the XLE (Xerox Linguistics En-
vironment).
</bodyText>
<subsectionHeader confidence="0.907825">
1.2 The Penn Arabic Treebank (ATB)
</subsectionHeader>
<bodyText confidence="0.99982323255814">
The Penn Arabic Treebank project started in
2001 with the aim of describing written Modern
Standard Arabic newswire. The Treebank consists
of 23611 sentences (Bies, 2003), (Maamouri and
Bies, 2004) .
Arabic is a subject pro-drop language: a null
category (pro) is allowed in the subject position
of a finite clause if the agreement features on
the verb are rich enough to enable content to be
recovered (Baptista, 1995), (Chomsky, 1981).
This is represented in the ATB annotation by an
empty node after the verb marked with a -SBJ
functional tag. The ATB annotation, following
the Penn-II Treebank, utilises the concept of
empty nodes and traces to mark long distance
dependencies, as in relative clauses and questions.
The default word order in Arabic is VSO. When
the subject precedes the verb (SVO), the con-
struction is considered as topicalized. Modern
Standard Arabic also allows VOS word order
under certain conditions, e.g. when the object is
a pronoun. The ATB annotation scheme involves
24 basic POS-tags (497 different tags with mor-
phological information ), 22 phrasal tags, and 20
individual functional tags (52 different combined
tags).
The relatively free word order of Arabic means
that phrase structural position is not an indicator
of grammatical function, a feature of English
which was heavily exploited in the automatic LFG
annotation of the Penn-II Treebank (Cahill and
al., 2002). Instead, in the ATB functional tags are
used to mark the subject as well as the object.
The syntactic annotation style of the ATB follows,
as much as possible, the methodologies and
bracketing guidelines already used for the English
Penn-II Treebank. For example, in the Penn
English Treebank (PTB) (Marcus, 1994), small
clauses are considered sentences composed of
a subject and a predicate, without traces for an
omitted verb or any sort of control relationship, as
in example (1) for the sentence ”I consider Kris a
fool”.
</bodyText>
<equation confidence="0.98781275">
(1) (S (NP-SBJ I)
(VP consider
(S (NP-SBJ Kris)
(NP-PRD a fool))))
</equation>
<bodyText confidence="0.993027833333333">
The team working on the ATB found this
approach very convenient for copula construc-
tions in Arabic, which are mainly verbless
(Maamouri and Bies, 2004). Therefore they used
a similar analysis without assuming a deleted
copula verb or control relationship, as in (2).
</bodyText>
<listItem confidence="0.7030375">
(2) (S (NP-SBJ Al-mas&gt;alatu ✏é❐✌❆❶ÖÏ❅)
(ADJ-PRD basiyTatuN ✏é➣❏✡❶✢✳))
</listItem>
<bodyText confidence="0.6423612">
é➣❏✡❶✢✳ ✏é❐
✏
Al-mas&gt;alatu basiyTatuN
the-question simple
‘The question is simple.’
</bodyText>
<subsectionHeader confidence="0.6398815">
2 Architecture of the Arabic Automatic
Annotation Algorithm
</subsectionHeader>
<bodyText confidence="0.9765508125">
The annotation algorithm for Arabic is based on
and substantially revises the methodology used for
English.
For English, f-structure annotation is very much
driven by configurational information: e.g. the
leftmost NP sister of a VP is likely to be a direct
object and hence annotated T OBJ =J. This infor-
mation is captured in the format of left-right anno-
tation matrices, which specify annotations for left
or right sisters relative to a local head.
By contrast, Arabic is a lot less configurational and
has much richer morphology. In addition, com-
pared to the Penn-II treebank, the ATB features a
larger functional tag set. This is reflected in the de-
sign of the Arabic f-structure annotation algorithm
✌❆❶ÖÏ❅
</bodyText>
<page confidence="0.996197">
46
</page>
<bodyText confidence="0.999752733333333">
(Figure 1), where left-right annotation matrices
play a much smaller role than for English. The
annotation algorithm recursively traverses trees in
the ATB. It exploits ATB morpho-syntactic fea-
tures, ATB functional tags, and (some) configura-
tional information in the local subtrees.
We first mask (conflate) some of the complex
morphological information available in the pre-
terminal nodes to be able to state generalisations
for some of the annotation components. We then
head-lexicalise ATB trees identifying local heads.
Lexical macros exploit the full morphological an-
notations available in the ATB and map them to
corresponding f-structure equations. We then ex-
ploit ATB functional tags mapping them to SUBJ,
OBJ, OBL, OBJ2, TOPIC and ADJUNCT etc.
grammatical functions. The remaining functions
(COMP, XCOMP, SPEC etc.) as well as some
cases of SUBJ, OBJ, OBL, OBJ2, TOPIC and AD-
JUNCT, which could not be identified by ATB
tags, are treated in terms of left-right context anno-
tation matrices. Coordination is treated in a sepa-
rate component to keep the other components sim-
ple. Catch-all &amp; Clean-Up corrects overgenerali-
sations in the previous modules and uses defaults
for remaining unannotated nodes. Finally, non-
local dependencies are handled by a Traces com-
ponent.
The next sub-sections describe the main modules
of the annotation algorithm.
</bodyText>
<subsectionHeader confidence="0.988947">
2.1 Conflation
</subsectionHeader>
<bodyText confidence="0.9921314">
ATB preterminals are very fine-grained, encod-
ing extensive morpho-syntactic details in addi-
tion to POS information. For example, the word
k � ���� sanaqifu ‘[we will] stand’ is tagged as
�
(FUT+IV1P+IV+IVSUFF MOOD:I) denoting an
imperfective (I) verb (V) in the future tense (FUT),
and is first person (1) plural (P) with indicative
mood (IVSUFF MOOD:I). In total there are over
460 preterminal types in the treebank. This level
of fine-grainedness is an important issue for the
annotation as we cannot state grammatical func-
tion (dependency) generalizations about heads and
left and right contexts for such a large tag set. To
deal with this problem, for some of the annotation
algorithm components we masked the morpho-
syntactic details in preterminals, thereby conflat-
ing them into more generic POS tags. For exam-
ple, the above-mentioned tag will be conflated as
VERB.
</bodyText>
<figureCaption confidence="0.93109">
Figure 1: Architecture of the Arabic annotation al-
gorithm
</figureCaption>
<subsectionHeader confidence="0.999568">
2.2 Lexical Macros
</subsectionHeader>
<bodyText confidence="0.9994774">
Lexical macros, by contrast, utilise the de-
tailed morpho-syntactic information encoded in
the preterminal nodes of the Penn Arabic Tree-
bank trees and provide the required functional an-
notations accordingly. These tags usually include
information related to person, number, gender,
definiteness, case, tense, aspect, mood, etc.
Table 1 lists common tags for nouns and verbs and
shows the LFG functional annotation assigned to
each tag.
</bodyText>
<subsectionHeader confidence="0.999094">
2.3 Functional Tags
</subsectionHeader>
<bodyText confidence="0.999962857142857">
In addition to monadic POS categories, the ATB
treebank contains a set of labels (called functional
tags or functional labels) associated with func-
tional information, such as -SBJ for ‘subject’ and
-OBJ for ‘object’. The functional tags module
translates these functional labels into LFG func-
tional equations, e.g. -OBJ is assigned the anno-
tation TOBJ=J. An f-structure equation look-up
table assigns default f-structure equations to each
functional label in the ATB (Table 2).
A particular treatment is applied for the tag -PRD
(predicate). This functional tag is used with cop-
ula complements, as in (3) and the correspond-
ing c-structure in Figure 2. Copula complements
</bodyText>
<page confidence="0.986293">
47
</page>
<figure confidence="0.332511">
Tag Annotation
Nouns
</figure>
<equation confidence="0.984908058823529">
MASC T GEND = masc (masculine)
FEM T GEND = fem (feminine)
SG T NUM = sg (singular)
DU T NUM = dual
PL T NUM = pl (plural)
ACC T CASE = acc (accusative)
NOM T CASE = nom (nominative)
GEN T CASE = gen (genitive)
Verbs
1 T PERS = 1
2 T PERS = 2
3 T PERS = 3
S T NUM = sg
D T NUM = dual
P T NUM = pl
F T GEND = masc
M T GEND = fem
</equation>
<tableCaption confidence="0.9903175">
Table 1: Morpho-syntactic tags and their functional anno-
tations
</tableCaption>
<table confidence="0.999843769230769">
Functional Label Annotation
-SBJ (subject) T SUBJ = 1
-OBJ (object) T OBJ = 1
-DTV (dative), T OBJ2 =1
-BNF (Benefactive)
-TPC (topicalized) T TOPIC=1
-CLR (clearly related) T OBL =1
-LOC (locative), 1ET ADJUNCT
-MNR (manner),
-DIR (direction),
-TMP (temporal),
-ADV (adverbial)
-PRP (purpose),
</table>
<tableCaption confidence="0.985977">
Table 2: Functional tags used in the ATP Treebank and their
default annotations
</tableCaption>
<bodyText confidence="0.999900875">
correspond to the open complement grammatical
function XCOMP in LFG and the ATB tag -PRD
is associated with the annotation in (4) in order to
produce the f-structure in Figure 3. The resulting
analysis includes a main predicator ‘null be’ and
specifies the control relationship through a func-
tional equation stating that the main subject is co-
indexed with the subject of the XCOMP.
</bodyText>
<equation confidence="0.9191069">
(3)Z-)3-f,;� ;41
Al-hudonapu Daruwriy˜apN
the-truce necessary
‘The truce is necessary.’
(4) T PRED = ’null be’
T XCOMP = 1
T SUBJ=1 SUBJ
NP-SBJ
N
Alhudonapu
</equation>
<figureCaption confidence="0.8802645">
Figure 2: C-structure for example (3)
‘null be❉SUBJ , XCOMP❊’
</figureCaption>
<figure confidence="0.9858915">
PRED
PRED ‘Al-hudonapu’
NUM sg
GEND fem
DEF +
CASE nom
PRED ‘Daruwriy˜apN’
NUM sg
GEND fem
DEF -
CASEnom
SUBJ ❤ ✐
</figure>
<figureCaption confidence="0.998331">
Figure 3: F-structure for example (3)
</figureCaption>
<subsectionHeader confidence="0.986266">
2.4 Left-Right Context Rules
</subsectionHeader>
<bodyText confidence="0.999989730769231">
The left-right context annotation module is based
on a tripartite division of local subtrees into a left-
hand-side context (LHS) followed by a head (H)
followed by a right-hand-side context (RHS). We
developed our own head finding, or head lexical-
ization, rules based on a variety of heuristics and
manual inspection of the PS rules.
Initially, we extracted 45785 Phrase Structure (PS)
rules from the treebank. The reason for the rela-
tively large number of PS rules is the fine-grained
nature of the tags encoding morphological infor-
mation for pre-terminal nodes. When we conflate
pre-terminals containing morphological informa-
tion to basic POS tags, the set of PS rules is re-
duced to 9731.
Treebanks grammars follow the Zipfian law: for
each category, there is a small number of highly
frequent rules expanding that category, followed
by a large number of rules with a very low fre-
quency. Therefore, for each LHS category we se-
lect the most frequent rules which together give
85% coverage. This results is a reduced set of 339
(most frequent) PS rules. These rules are manu-
ally examined and used to construct left-right LFG
f-structure annotation matrices for the treebank.
The annotation matrices encode information about
</bodyText>
<figure confidence="0.945358459459459">
S
NP-PRD
N
DaruwriyapN
✷
✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✻✹
SUBJ ✷
XCOMP ✻✻✻✻✻✹
✷
✻✻✻✻✻✻✻✻✹
1
✸
✺✼✼✼✼✼
1
✸
✺✼✼✼✼✼✼✼ ✼
✸
✺✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼ ✼
48
✷✻COORD FORM ‘wa-’
✻✻✻✻✻✻✻✻✻✻✻COORD
✻✻✻✻✹
✸
✾❃❃❃✼
❃✼
❃❃✼
❃❃✼
❃❃✼
❃❂ ❃❃✼✼✼✼
✸ ❃ ✼✼
✼ ❃❃✼
✺✼❃❃❃❃✼
❃❃❃✼✼
❀❃❃❃✺✼
jamoEiyapu Al-TayAriyna Al-&gt;anoguwliyapu
society the-pilot the-Angolian
’Angolian Pilot Society‘
</figure>
<bodyText confidence="0.9794242">
the left and right context of a rule’s head and state
generalisations about the functional annotation of
constituents to the left and right of the local head.
Consider sentence (5), where an NP is expanded
as NP NP ADJP. The first NP is considered the
head and is given the annotation T=J. The second
NP and the ADJP are located to the left (Arabic
reading) of the head (LHS). The left-right context
matrix for NP constituents analyses these phrases
as adjuncts and assigns them the annotation J E T
ADJUNCT.
(5) ✏é✎❏✡❐ñ♠✳✚✠✬ ❇❅✠á❑✡P❆✎❏✡➣❐❅ ✏é✎❏✡➟Ô❣✳
✌
The left-right annotation matrices also cover
other non-subcategorisable functions (such as
XADJUNCT, SPEC, etc.) as well as constituents
with subcategorisable grammatical functions
(SUBJ, OBJ, OBL, COMP, etc.) which are not
identified via ATB functional tags (and hence left
unannotated by the Functional Tags component)
</bodyText>
<subsectionHeader confidence="0.980981">
2.5 Coordination
</subsectionHeader>
<bodyText confidence="0.999842125">
Treebanks tend to encode co-ordination in a rather
flat manner. In the LFG framework coordinated
constituents are treated as sets. The phrase
structure functional annotations for creating a
set function for such constituents is given in (6)
where the f-structures of the two coordinated NPs
on the right-hand side are members of the set
valued f-structure of the NP on the left-hand side.
</bodyText>
<listItem confidence="0.63407">
(6) NP —* NP CONJ NP
TEJ TEJ
</listItem>
<bodyText confidence="0.967283">
To keep the other modules simple and perspicuous
coordination is treated in the annotation algorithm
as a separate component. The coordination mod-
ule localizes the coordinating conjunct, marks it
as head and adds the coordinated elements to the
f-structure set representation of the coordination
JET COORD. Figure 2.5 shows the f-structure for
the NP in sentence (7).
</bodyText>
<figure confidence="0.985789">
(7) ✏❍❅❨❑✡❨❶✏✜❐❅ð ✏❍❅◗➸❐❅
Al-kurAtu wa-Al-tasodiydAtu
the-balls and-the-scores
✷PRED ‘Al-kurAtu’
✻✻✹NUM pl
GEND fem
CASE nom
✷PRED ‘Al-tasodiydAtu’
✻✻✹ NUM pl
GEND fem
CASE nom
</figure>
<figureCaption confidence="0.99888">
Figure 4: An Arabic coordination example
</figureCaption>
<subsectionHeader confidence="0.964777">
2.6 Catch-All and Clean-Up
</subsectionHeader>
<bodyText confidence="0.99959109375">
The previous components of the annotation algo-
rithm give concise statements of linguistic gen-
eralisations, but sometimes they overgeneralise.
Such overgeneralisations are detected and cor-
rected by the Catch-All and Clean-Up component
of the algorithm.
For example, the mutiword expression à✎✠
✌
’illaA ’anna ‘but’ is annotated in the tree-
bank as two subsequent subordinating con-
junctions: (SUB CONJ ’illaA) (SUB CONJ
’anna). In the f-structure annotation this leads to
a conflict as to which lexical item should occupy
the value of the SUBORD FORM feature. The
Catch-All and Clean-Up component sidelines the
problem by moving the second part of the MWE
to an adjunct position.
Another example is provided by quantifiers. In
Arabic, quantifiers have the same syntactic struc-
ture as the construct state (similar to the genitive
construction in English as in the boys’ book), so
that sentences (8) and (9) are syntactically equiv-
alent. The word ‘students’ is in the second part of
the construct state in both phrases, but it is a mod-
ifier in the first and a head in the second. There-
fore, a list of quantifiers (Table 3) is used in the
Catch-All and Clean-Up module, so that they are
identified and properly annotated according to cer-
tain context conditions.
The Catch-All and Clean-Up module also pro-
vides default annotations for nodes that remain
unannotated by the previous components.
</bodyText>
<figure confidence="0.978206">
✎
(8)❍✳ ❈➣❐❅ ■✳ ✏❏➺
kutubu Al-Tulabi
books the-students
‘students’ books’
❁❃❃❃❃❃❃❃❃❃❃❃❃❃✽
❃❃❃❃❃❃❃❃❃❃❃❃❃✿
✸
✺✼✼
✎
❅ ❇ ❅
</figure>
<page confidence="0.672631">
49
</page>
<figure confidence="0.9966306875">
(9) ❍✳ ❈ ➣❐❅ ✠➅➟❑✳
baEoDu Al-Tul˜abi
some the-students
‘some students’
biDoEapu
kAf˜apu
&gt;ay˜u
jamiyEu
muEoZamu
biDoEu
kul˜u
baEoDu
baqiy˜apu
nafosu
&gt;aHadu
&lt;iHodaY
</figure>
<tableCaption confidence="0.99219">
Table 3: List of Arabic quantifiers
</tableCaption>
<subsectionHeader confidence="0.954161">
2.7 Traces
</subsectionHeader>
<bodyText confidence="0.999379363636364">
The f-structure generated prior to the Traces
module is called a proto-f-structure (i.e. a partial
representation), as it is not complete with respect
to long-distance dependency resolution. In order
to produce proper f-structures, long-distance
dependencies such as topicalisation and wh-
movement must be captured. In our annotation
algorithm we exploit trace information in the ATB
treebank and translate long-distance dependencies
into cooresponding reentrancies at the f-structure
level using coindexation.
Figure 5 gives the ATB tree for the phrase in (10)
containing a trace. The trace is used to capture
A-movement, and the indices on the WHNP-2
and NP-SBJ-2 indicate that these constituents are
related.
In the annotation algorithm we assign the equa-
tion TSUBJ = TTOPICREL to the empty node
to indicate that the relative pronoun ‘which’ is
interpreted as the subject of the verb ‘threaten’.
This annotation produces the proper f-structure in
Figure 6.
</bodyText>
<equation confidence="0.578415">
(10) �❈❶❐❅ ❳ ✎❨�❊✡ �✡ ✠❨ ❐❅ ✠ ➢✠❏➟❐❅
</equation>
<subsectionHeader confidence="0.774426">
Al-Eunofu Al˜a*iy yuhad˜idu Al-salAma
</subsectionHeader>
<bodyText confidence="0.986979666666667">
violence which threatens peace
Once every node in a tree is annotated with f-
structure equations, the equations are then passed
</bodyText>
<figure confidence="0.602317">
NP
SBAR
S
V NP-SBJ-2 NP-OBJ
yuhadidu * Al-salAma
</figure>
<figureCaption confidence="0.935672">
Figure 5: C-structure with a long-distance depen-
dency
</figureCaption>
<figure confidence="0.998128296296296">
✷PRED ‘Al-Eunofu’
+
✻✻DEF
✻genitive
✻CASE
✻✷ ✷
✻PRED pro
✻✻✻✻✻✻
✻✻TOPICREL ✹PRON FORM ‘Al˜a*iy’
PRON TYPE relative
✻✻✻✻
✻✻
✻✻‘yuhad˜idu’
✻✻✻✻PRED
ASPECT imperfect
RELMOD✻MOOD ✻✻indicative
✻✻✻✻
✻✻
✻SUBJ ❤ ✐ 1
✻✷
✻✻✸
DEF +
✻✻
✻✻✻
✻✹ ✻✹ OBJ ✹ ✺✼
CASE accusative
PRED ‘Al-salAma’
</figure>
<figureCaption confidence="0.996919">
Figure 6: Proper f-structure with long-distance de-
pendencies captured
</figureCaption>
<bodyText confidence="0.9996505">
to a constraint solver. Ideally one f-structure rep-
resentation is produced for each sentence. If there
are conflicts in the f-structure equations, no f-
structure is produced.
</bodyText>
<sectionHeader confidence="0.996888" genericHeader="introduction">
3 Evaluation
</sectionHeader>
<bodyText confidence="0.999841083333333">
We conduct two types of evaluation: quantitative
and qualitative evaluation.
The quantitative evaluation evaluates the coverage
of our annotation algorithm, while the qualitative
evaluation compares the f-structures generated by
the automatic annotation procedure against a gold
standard of manually constructed f-structures for
250 sentences (Al-Raheb and al., 2006) selected
at random from the ATB treebank. The aim of
the qualitative evaluation is to ensure that the an-
notation quality is of a high standard, particularly
as the annotation algorithm is used for extracting
</bodyText>
<figure confidence="0.999531611111111">
é➟ ✏➆✢ some
✠✳ all
é✏➥❆➾✎✠
✎ø✡✌❅
➞❏✡Ô❣✳
Ñ ✠➣➟Ó
➞➆✢
✠✳
✎➱➾
❨➟❑✳
⑩➤✠❑ ✠
✌
❨❣❅
ø❨❣❅✌
any
all
most
few
all
some
rest
same
one-masc
one-fem
NP
N
Al-Eunofu
WHNP-2
Ala*iy
✸
✸
✺✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼ ✼
1
✸
✺✼
✺✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼ ✼
</figure>
<page confidence="0.986586">
50
</page>
<bodyText confidence="0.999368433333334">
wide-coverage syntactic and lexical resources.
In the quantitative evaluation experiment, the an-
notation algorithm achieves good coverage for
19 273 ATB sentences (remaining after removing
trees with FRAG and X - labeled constituents);
98% of trees produce a complete and connected
f-structure (no fragments) and 2% of trees do not
produce an f-structure because of feature-value
clashes.
For the qualitative evaluation, we use the eval-
uation methodology of (Crouch and al., 2002)
and (Riezler, 2002) in order to calculate preci-
sion and recall on descriptions of f-structures.
In this methodology, each f-structure is rep-
resented as a set of triples of the form:
relation(argument1,argument2). For example the
triples num(riHol+At+i, pl), case(riHol+At+i,
genitive), gender(riHol+At+i, fem) encode that
the number of the word riHol+At+i ✏❍yb, ‘jour-
neys’ is plural; its case is genitive; and its gen-
der is feminine. The triple subj(ta+bolug+u: to
reach,HarAr+ap+a: temperature) indicates that
the subject of the verb to reach is temperature. The
results of the evaluation of the quality of the an-
notation against the DCU 250 gold standard are
presented in Table 4. We achieve an f-score of
95%. In comparison, the f-scores for French, Eng-
lish and Chinese languages are 95%-96%. Table 5
presents the results by selected grammatical func-
tions.
</bodyText>
<table confidence="0.9968265">
Precision Recall F-score
Results 95.49 94.43 94.96
</table>
<tableCaption confidence="0.998467">
Table 4: Evaluation of the automatically produced
f-structures against gold standard (all features).
</tableCaption>
<table confidence="0.999970666666667">
Precision Recall F-score
adjunct 91 91 91
coord 80 87 83
obj 81 88 85
obl 100 94 97
poss 96 89 92
subj 89 68 77
topic 93 92 92
topicrel 89 88 88
</table>
<tableCaption confidence="0.980868666666667">
Table 5: Evaluation of the automatically pro-
duced f-structures against gold standard by se-
lected grammatical functions.
</tableCaption>
<sectionHeader confidence="0.998894" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999966875">
In this paper, we have shown how the methodol-
ogy for automatically annotating treebanks with
LFG f-structure equations originally developed for
English has been successfully adapted to Arabic.
Arabic is known for its rich morphology and syn-
tactic flexibility which allows SVO, VSO, VOS
word orders. We exploit the rich morphological
information in the annotation algorithm by utilis-
ing the morphological tags to add information to
the f-structures. We also use ATB functional tags
to specify default syntactic functions, e.g. -SBJ
(subject) and -OBJ (object), provide left-right an-
notation matrices for the remaining constituents,
treat coordination and represent non-local depen-
dencies. The evaluation measured coverage as
well as the quality of the automatic annotation al-
gorithm. 98% of ATB trees (without FRAG and
X) produce a complete and connected f-structure.
When evaluated against a gold standard of 250
manually constructed f-structures, the algorithm
scores an f-measure of 95%. The work presented
in this paper is the first step in automatically ac-
quiring deep resources for wide coverage parsing
and generation for Arabic.
</bodyText>
<sectionHeader confidence="0.998582" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.8318895">
This research was supported by Science Founda-
tion Ireland Grant 04/IN/I527.
</bodyText>
<sectionHeader confidence="0.9991" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9915607">
Y. Al-Raheb, A. Akrout, J. van Genabith, J. Dichy.
2006. DCU 250 Arabic Dependency Bank: An LFG
Gold Standard Resource for the Arabic Penn Tree-
bank The Challenge of Arabic for NLP/MT at the
British Computer Society, UK, pp. 105–116.
M. Attia. 2008. Handling Arabic Morphological
and Syntactic Ambiguity within the LFG Framework
with a View to Machine Translation. Ph.D. Thesis.
The University of Manchester, Manchester, UK.
M. Baptista. 1995. On the Nature of Pro-drop in
Capeverdean Creole. Harvard Working Papers in
Linguistics, 5:3-17.
J. Bresnan. 2001. Lexical-Functional Syntax. Black-
well Publishers, Oxford, UK.
M. Burke, O. Lam, R. Chan, A. Cahill, R. ODonovan,
A. Bodomo, J. van Genabith, and A. Way. 2004.
Treebank-Based Acquisition of a Chinese Lexical-
Functional Grammar. The 18th Pacific Asia Con-
ference on Language, Information and Computation,
Tokyo, Japan, pp. 161–172.
</reference>
<figure confidence="0.6225505">
A. Bies and M. Maamouri. 2003. Penn
Arabic Treebank Guidelines URL:
http://www.ircs.upenn.edu/arabic/Jan03release/guidelines-
TB-1-28-03.pdf.
</figure>
<page confidence="0.990012">
51
</page>
<reference confidence="0.999918830188679">
M. Burke. 2006. Automatic Treebank Annotation for
the Acquisition of LFG Resources. Ph.D. thesis,
School of Computing, Dublin City University, Ire-
land.
A. Cahill, M. McCarthy, J. van Genabith, A. Way.
2002. Automatic Annotation of the Penn Tree-
bank with LFG F-Structure Information. LREC
Workshop on Linguistic Knowledge Acquisition and
Representation: Bootstrapping Annotated Language
Data, Spain, pp. 8-15.
A. Cahill, M. Forst, M. McCarthy, R. ODonovan,
C. Rohrer, J. van Genabith and A. Way. 2003.
Treebank-Based Multilingual Unification Grammar
Development. The 15th Workshop on Ideas and
Strategies for Multilingual Grammar Development,
at the 15th European Summer School in Logic, Lan-
guage and Information, Vienna, Austria, pp. 17–24.
A. Cahill, M. Burke, R. ODonovan, J. van Genabith,
A. Way. 2004. Long-Distance Dependency Res-
olution in Automatically Acquired Wide-Coverage
PCFG-Based LFG Approximations. 42nd Meeting
of the Association for Computational Linguistics,
Barcelona, Spain pp. 319-326.
A. Cahill, J. van Genabith. 2006. Robust PCFG-Based
Generation using Automatically Acquired LFG Ap-
proximations. ACL 2006, Sydney, Australia, pages
1033-1040.
A. Cahill, M. Burke, R. O’Donovan, S. Riezler, J. van
Genabith, A. Way. 2008. Wide-Coverage Deep Sta-
tistical Parsing using Automatic Dependency Struc-
ture Annotation. Computational Linguistics, Vol.
34, No. 1, pages 81-124.
N. Chomsky. 1981. Lectures on Government and
Binding. Dordrecht: Foris.
G. Chrupala and J. van Genabith. 2006. Improving
Treebank-Based Automatic LFG Induction for Span-
ish. In Proceedings of the LFG06 Conference.
R. Crouch, R. M. Kaplan, T. H. King, S. Riezler. 2002.
Comparison of Evaluation Metrics for a Broad Cov-
erage Parser LREC Workshop: Beyond PARSE-
VAL Towards Improved Evaluation Measures for
Parsing Systems, Spain, pp. 67-74.
M. Dalrymple. 2002. Lexical Functional Grammar.
Syntax and Semantics, Volume 34, Academic Press,
San Diego, CA/London, U.K.
Y. Falk. 2001. Lexical-Functional Grammar: An
Introduction to Parallel Constraint-Based Syntax.
Stanford, Calif.: CSLI Publications.
A. Frank, L. Sadler, J. van Genabith, A. Way. 2003.
From Treebank Resources to LFG F-Structurese.
A. Abeille editor Treebanks: Building and Using
Syntactically Annotated Corpora, Kluwer Academic
Publishers, Dordrecht/Boston/London,The Nether-
landsm pp. 367-389.
Y. Guo, J. van Genabith, H. Wang. 2007. Acquisition
of Wide-Coverage, Robust, Probabilistic Lexical-
Functional Grammar Resources for Chinese. Pro-
ceedings of the 12th International Lexical Func-
tional Grammar Conference, USA, pp. 214–232.
R. Kaplan and J. Bresnan. 1982. Lexical Functional
Grammar: a Formal System for Grammatical Rep-
resentation, in J. Bresnan (ed.). The Mental Rep-
resentation of Grammatical Relations, MIT Press,
Cambridge, MA, pp. 173-281.
R. M. Kaplan, S. Riezler, T. H. King, J. T. Maxwell,
A. Vasserman, and R. Crouch. 2004. Speed and
Accuracy in Shallow and Deep Stochastic Parsing.
In The Human Language Technology Conference
of the North American Chapter of the Association
for Computational Linguistics (HLT-NAACL 2004),
Boston, MA, pp. 97–104.
M. Maamouri and A. Bies. 2004. Developing an
Arabic Treebank: Methods, Guidelines, Procedures,
and Tools Workshop on Computational Approaches
to Arabic Script-based Languages, COLING 2004,
Geneva, 2004.
M. Marcus, G. Kim, M. Marcinkiewicz, R. MacIn-
tyre, A. Bies, M. Ferguson, K. Katz and B. Schas-
berger 1994. The Penn Treebank: Annotating Pred-
icate Argument Structure. In Proceedings of the
Human Language Technology Workshop. San Fran-
cisco, CA.
R. O’Donovan, M. Burke, A. Cahill, J. van Genabith,
and A. Way. 2004. Large-Scale Induction and
Evaluation of Lexical Resources from the Penn-II
Treebank. The 42nd Annual Meeting of the As-
sociation for Computational Linguistics, Barcelona,
Spain, pp. 368–375.
R. O’Donovan, A. Cahill, J. van Genabith, and A. Way.
2005. Automatic Acquisition of Spanish LFG Re-
sources from the CAST3LB Treebank. The Tenth
International Conference on LFG, Bergen, Norway,
pp. 334–352.
S. Riezler, King, T., Kaplan, R., Crouch, R., Maxwell,
J. T., and Johnson, M. 2002. Parsing theWall Street
Journal using a Lexical-Functional Grammar and
Discriminative Estimation Techniques. The 40th
Annual Conference of the Association for Compu-
tational Linguistics (ACL-02), Philadelphia, PA, pp.
271–278.
P. Sells 1985. Lectures on Contemporary Syntactic
Theories. CSLI Lecture Notes. Stanford, CA: CSLI.
N. Schluter and J. van Genabith 2008. Treebank-Based
Acquisition of LFG Parsing Resources for French.
Proceedings of the Sixth International Language Re-
sources and Evaluation (LREC’08).
</reference>
<page confidence="0.998854">
52
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.520695">
<title confidence="0.99851">Automatic Treebank-Based Acquisition of Arabic LFG Dependency Structures</title>
<author confidence="0.999515">Lamia Tounsi Mohammed Attia Josef van_Genabith</author>
<affiliation confidence="0.999669">NCLT, School of Computing, Dublin City University,</affiliation>
<email confidence="0.749538">mattia,</email>
<abstract confidence="0.961541904761905">A number of papers have reported on methods for the automatic acquisition of large-scale, probabilistic LFG-based grammatical resources from treebanks for English (Cahill and al., 2002), (Cahill and al., 2004), German (Cahill and al., 2003), Chinese (Burke, 2004), (Guo and al., 2007), Spanish (O’Donovan, 2004), (Chrupala and van Genabith, 2006) and French (Schluter and van Genabith, 2008). Here, we extend the LFG grammar acquisition approach to Arabic and the Penn Arabic Treebank (ATB) (Maamouri and Bies, 2004), adapting and extending the methodology of (Cahill and al., 2004) originally developed for English. Arabic is challenging because of its morphological richness and syntactic complexity. Currently 98% of ATB trees (without FRAG and X) produce a covering and connected f-structure. We conduct a qualitative evaluation of our annotation against a gold standard and achieve an f-score of 95%.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Y Al-Raheb</author>
<author>A Akrout</author>
<author>J van Genabith</author>
<author>J Dichy</author>
</authors>
<title>DCU 250 Arabic Dependency Bank: An LFG Gold Standard Resource for the Arabic Penn Treebank The Challenge of Arabic for NLP/MT at the British</title>
<date>2006</date>
<pages>105--116</pages>
<publisher>Computer Society, UK,</publisher>
<marker>Al-Raheb, Akrout, van Genabith, Dichy, 2006</marker>
<rawString>Y. Al-Raheb, A. Akrout, J. van Genabith, J. Dichy. 2006. DCU 250 Arabic Dependency Bank: An LFG Gold Standard Resource for the Arabic Penn Treebank The Challenge of Arabic for NLP/MT at the British Computer Society, UK, pp. 105–116.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Attia</author>
</authors>
<title>Handling Arabic Morphological and Syntactic Ambiguity within the LFG Framework with a View to Machine Translation.</title>
<date>2008</date>
<tech>Ph.D. Thesis.</tech>
<institution>The University of Manchester,</institution>
<location>Manchester, UK.</location>
<contexts>
<context position="4629" citStr="Attia, 2008" startWordPosition="643" endWordPosition="644">l)-structure, represented by a matrix of attribute-value pairs. While c-structure accounts for language-specific lexical idiosyncrasies, syntactic surface configurations and word order variations, f-structure provides a more abstract level of representation (grammatical functions/ labeled dependencies), abstracting from some cross-linguistic syntactic differences. Languages may differ typologically as regards surface structural representations, but may still encode similar syntactic functions (such as, subject, object, adjunct, etc.). For a recent overview on LFG-based analyses of Arabic see (Attia, 2008) who presents a hand-crafted Arabic LFG parser using the XLE (Xerox Linguistics Environment). 1.2 The Penn Arabic Treebank (ATB) The Penn Arabic Treebank project started in 2001 with the aim of describing written Modern Standard Arabic newswire. The Treebank consists of 23611 sentences (Bies, 2003), (Maamouri and Bies, 2004) . Arabic is a subject pro-drop language: a null category (pro) is allowed in the subject position of a finite clause if the agreement features on the verb are rich enough to enable content to be recovered (Baptista, 1995), (Chomsky, 1981). This is represented in the ATB an</context>
</contexts>
<marker>Attia, 2008</marker>
<rawString>M. Attia. 2008. Handling Arabic Morphological and Syntactic Ambiguity within the LFG Framework with a View to Machine Translation. Ph.D. Thesis. The University of Manchester, Manchester, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Baptista</author>
</authors>
<title>On the Nature of Pro-drop in Capeverdean Creole. Harvard Working Papers in Linguistics,</title>
<date>1995</date>
<pages>5--3</pages>
<contexts>
<context position="5177" citStr="Baptista, 1995" startWordPosition="732" endWordPosition="733">a recent overview on LFG-based analyses of Arabic see (Attia, 2008) who presents a hand-crafted Arabic LFG parser using the XLE (Xerox Linguistics Environment). 1.2 The Penn Arabic Treebank (ATB) The Penn Arabic Treebank project started in 2001 with the aim of describing written Modern Standard Arabic newswire. The Treebank consists of 23611 sentences (Bies, 2003), (Maamouri and Bies, 2004) . Arabic is a subject pro-drop language: a null category (pro) is allowed in the subject position of a finite clause if the agreement features on the verb are rich enough to enable content to be recovered (Baptista, 1995), (Chomsky, 1981). This is represented in the ATB annotation by an empty node after the verb marked with a -SBJ functional tag. The ATB annotation, following the Penn-II Treebank, utilises the concept of empty nodes and traces to mark long distance dependencies, as in relative clauses and questions. The default word order in Arabic is VSO. When the subject precedes the verb (SVO), the construction is considered as topicalized. Modern Standard Arabic also allows VOS word order under certain conditions, e.g. when the object is a pronoun. The ATB annotation scheme involves 24 basic POS-tags (497 </context>
</contexts>
<marker>Baptista, 1995</marker>
<rawString>M. Baptista. 1995. On the Nature of Pro-drop in Capeverdean Creole. Harvard Working Papers in Linguistics, 5:3-17.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Bresnan</author>
</authors>
<title>Lexical-Functional Syntax.</title>
<date>2001</date>
<publisher>Blackwell Publishers,</publisher>
<location>Oxford, UK.</location>
<contexts>
<context position="3364" citStr="Bresnan, 2001" startWordPosition="482" endWordPosition="483">otated ATB to derive wide-coverage resources for parsing and generating unrestricted Arabic text. In this paper we concentrate on the annotation algorithm. The paper first provides a brief overview of Lexical Functional Grammar, and the Penn Arabic Treebank (ATB). The next section presents the architecture of the f-structure annotation algorithm for the acquisition of f-structures from the Arabic treebank. The last section provides an evaluation of the quality and coverage of the annotation algorithm. 1.1 Lexical Functional Grammar Lexical-Functional Grammar (LFG) (Kaplan and Bresnan, 1982); (Bresnan, 2001), (Falk, 2001) 2001, (Sells, 1985) is a constraint-based theory of grammar. LFG rejects concepts of configurationality and movement familiar from generative grammar, and provides a non-derivational alternative of parallel structures of which phrase structure trees are only one component. LFG involves two basic, parallel forms of Proceedings of the EACL 2009 Workshop on Computational Approaches to Semitic Languages, pages 45–52, Athens, Greece, 31 March, 2009. c�2009 Association for Computational Linguistics 45 knowledge representation: c(onstituent)-structure, which is represented by (f-struct</context>
</contexts>
<marker>Bresnan, 2001</marker>
<rawString>J. Bresnan. 2001. Lexical-Functional Syntax. Blackwell Publishers, Oxford, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Burke</author>
<author>O Lam</author>
<author>R Chan</author>
<author>A Cahill</author>
<author>R ODonovan</author>
<author>A Bodomo</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<title>Treebank-Based Acquisition of a Chinese LexicalFunctional Grammar.</title>
<date>2004</date>
<booktitle>The 18th Pacific Asia Conference on Language, Information and Computation,</booktitle>
<pages>161--172</pages>
<location>Tokyo, Japan,</location>
<marker>Burke, Lam, Chan, Cahill, ODonovan, Bodomo, van Genabith, Way, 2004</marker>
<rawString>M. Burke, O. Lam, R. Chan, A. Cahill, R. ODonovan, A. Bodomo, J. van Genabith, and A. Way. 2004. Treebank-Based Acquisition of a Chinese LexicalFunctional Grammar. The 18th Pacific Asia Conference on Language, Information and Computation, Tokyo, Japan, pp. 161–172.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Burke</author>
</authors>
<title>Automatic Treebank Annotation for the Acquisition of LFG Resources.</title>
<date>2006</date>
<tech>Ph.D. thesis,</tech>
<institution>School of Computing, Dublin City University,</institution>
<marker>Burke, 2006</marker>
<rawString>M. Burke. 2006. Automatic Treebank Annotation for the Acquisition of LFG Resources. Ph.D. thesis, School of Computing, Dublin City University, Ireland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cahill</author>
<author>M McCarthy</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<date>2002</date>
<booktitle>Automatic Annotation of the Penn Treebank with LFG F-Structure Information. LREC Workshop on Linguistic Knowledge Acquisition and Representation: Bootstrapping Annotated Language Data,</booktitle>
<pages>8--15</pages>
<marker>Cahill, McCarthy, van Genabith, Way, 2002</marker>
<rawString>A. Cahill, M. McCarthy, J. van Genabith, A. Way. 2002. Automatic Annotation of the Penn Treebank with LFG F-Structure Information. LREC Workshop on Linguistic Knowledge Acquisition and Representation: Bootstrapping Annotated Language Data, Spain, pp. 8-15.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cahill</author>
<author>M Forst</author>
<author>M McCarthy</author>
<author>R ODonovan</author>
<author>C Rohrer</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<title>Treebank-Based Multilingual Unification Grammar Development.</title>
<date>2003</date>
<booktitle>The 15th Workshop on Ideas and Strategies for Multilingual Grammar Development, at the 15th European Summer School in Logic, Language and Information,</booktitle>
<pages>17--24</pages>
<location>Vienna, Austria,</location>
<marker>Cahill, Forst, McCarthy, ODonovan, Rohrer, van Genabith, Way, 2003</marker>
<rawString>A. Cahill, M. Forst, M. McCarthy, R. ODonovan, C. Rohrer, J. van Genabith and A. Way. 2003. Treebank-Based Multilingual Unification Grammar Development. The 15th Workshop on Ideas and Strategies for Multilingual Grammar Development, at the 15th European Summer School in Logic, Language and Information, Vienna, Austria, pp. 17–24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cahill</author>
<author>M Burke</author>
<author>R ODonovan</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<title>Long-Distance Dependency Resolution in Automatically Acquired Wide-Coverage PCFG-Based LFG Approximations.</title>
<date>2004</date>
<booktitle>42nd Meeting of the Association for Computational Linguistics,</booktitle>
<pages>319--326</pages>
<location>Barcelona,</location>
<marker>Cahill, Burke, ODonovan, van Genabith, Way, 2004</marker>
<rawString>A. Cahill, M. Burke, R. ODonovan, J. van Genabith, A. Way. 2004. Long-Distance Dependency Resolution in Automatically Acquired Wide-Coverage PCFG-Based LFG Approximations. 42nd Meeting of the Association for Computational Linguistics, Barcelona, Spain pp. 319-326.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cahill</author>
<author>J van Genabith</author>
</authors>
<title>Robust PCFG-Based Generation using Automatically Acquired LFG Approximations.</title>
<date>2006</date>
<booktitle>ACL 2006,</booktitle>
<pages>1033--1040</pages>
<location>Sydney, Australia,</location>
<marker>Cahill, van Genabith, 2006</marker>
<rawString>A. Cahill, J. van Genabith. 2006. Robust PCFG-Based Generation using Automatically Acquired LFG Approximations. ACL 2006, Sydney, Australia, pages 1033-1040.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cahill</author>
<author>M Burke</author>
<author>R O’Donovan</author>
<author>S Riezler</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<title>Wide-Coverage Deep Statistical Parsing using Automatic Dependency Structure Annotation.</title>
<date>2008</date>
<journal>Computational Linguistics,</journal>
<volume>34</volume>
<pages>81--124</pages>
<marker>Cahill, Burke, O’Donovan, Riezler, van Genabith, Way, 2008</marker>
<rawString>A. Cahill, M. Burke, R. O’Donovan, S. Riezler, J. van Genabith, A. Way. 2008. Wide-Coverage Deep Statistical Parsing using Automatic Dependency Structure Annotation. Computational Linguistics, Vol. 34, No. 1, pages 81-124.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Chomsky</author>
</authors>
<date>1981</date>
<booktitle>Lectures on Government and Binding.</booktitle>
<location>Dordrecht: Foris.</location>
<contexts>
<context position="5194" citStr="Chomsky, 1981" startWordPosition="734" endWordPosition="735">on LFG-based analyses of Arabic see (Attia, 2008) who presents a hand-crafted Arabic LFG parser using the XLE (Xerox Linguistics Environment). 1.2 The Penn Arabic Treebank (ATB) The Penn Arabic Treebank project started in 2001 with the aim of describing written Modern Standard Arabic newswire. The Treebank consists of 23611 sentences (Bies, 2003), (Maamouri and Bies, 2004) . Arabic is a subject pro-drop language: a null category (pro) is allowed in the subject position of a finite clause if the agreement features on the verb are rich enough to enable content to be recovered (Baptista, 1995), (Chomsky, 1981). This is represented in the ATB annotation by an empty node after the verb marked with a -SBJ functional tag. The ATB annotation, following the Penn-II Treebank, utilises the concept of empty nodes and traces to mark long distance dependencies, as in relative clauses and questions. The default word order in Arabic is VSO. When the subject precedes the verb (SVO), the construction is considered as topicalized. Modern Standard Arabic also allows VOS word order under certain conditions, e.g. when the object is a pronoun. The ATB annotation scheme involves 24 basic POS-tags (497 different tags wi</context>
</contexts>
<marker>Chomsky, 1981</marker>
<rawString>N. Chomsky. 1981. Lectures on Government and Binding. Dordrecht: Foris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Chrupala</author>
<author>J van Genabith</author>
</authors>
<title>Improving Treebank-Based Automatic LFG Induction for Spanish.</title>
<date>2006</date>
<booktitle>In Proceedings of the LFG06 Conference.</booktitle>
<marker>Chrupala, van Genabith, 2006</marker>
<rawString>G. Chrupala and J. van Genabith. 2006. Improving Treebank-Based Automatic LFG Induction for Spanish. In Proceedings of the LFG06 Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Crouch</author>
<author>R M Kaplan</author>
<author>T H King</author>
<author>S Riezler</author>
</authors>
<title>Comparison of Evaluation Metrics for a Broad Coverage Parser LREC Workshop: Beyond PARSEVAL Towards Improved Evaluation Measures for Parsing Systems,</title>
<date>2002</date>
<pages>67--74</pages>
<marker>Crouch, Kaplan, King, Riezler, 2002</marker>
<rawString>R. Crouch, R. M. Kaplan, T. H. King, S. Riezler. 2002. Comparison of Evaluation Metrics for a Broad Coverage Parser LREC Workshop: Beyond PARSEVAL Towards Improved Evaluation Measures for Parsing Systems, Spain, pp. 67-74.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Dalrymple</author>
</authors>
<title>Lexical Functional Grammar. Syntax and Semantics,</title>
<date>2002</date>
<volume>34</volume>
<publisher>Academic Press,</publisher>
<location>San Diego, CA/London, U.K.</location>
<marker>Dalrymple, 2002</marker>
<rawString>M. Dalrymple. 2002. Lexical Functional Grammar. Syntax and Semantics, Volume 34, Academic Press, San Diego, CA/London, U.K.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Falk</author>
</authors>
<title>Lexical-Functional Grammar: An Introduction to Parallel Constraint-Based Syntax.</title>
<date>2001</date>
<publisher>CSLI Publications.</publisher>
<location>Stanford, Calif.:</location>
<contexts>
<context position="3378" citStr="Falk, 2001" startWordPosition="484" endWordPosition="485">ive wide-coverage resources for parsing and generating unrestricted Arabic text. In this paper we concentrate on the annotation algorithm. The paper first provides a brief overview of Lexical Functional Grammar, and the Penn Arabic Treebank (ATB). The next section presents the architecture of the f-structure annotation algorithm for the acquisition of f-structures from the Arabic treebank. The last section provides an evaluation of the quality and coverage of the annotation algorithm. 1.1 Lexical Functional Grammar Lexical-Functional Grammar (LFG) (Kaplan and Bresnan, 1982); (Bresnan, 2001), (Falk, 2001) 2001, (Sells, 1985) is a constraint-based theory of grammar. LFG rejects concepts of configurationality and movement familiar from generative grammar, and provides a non-derivational alternative of parallel structures of which phrase structure trees are only one component. LFG involves two basic, parallel forms of Proceedings of the EACL 2009 Workshop on Computational Approaches to Semitic Languages, pages 45–52, Athens, Greece, 31 March, 2009. c�2009 Association for Computational Linguistics 45 knowledge representation: c(onstituent)-structure, which is represented by (f-structure annotated)</context>
</contexts>
<marker>Falk, 2001</marker>
<rawString>Y. Falk. 2001. Lexical-Functional Grammar: An Introduction to Parallel Constraint-Based Syntax. Stanford, Calif.: CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Frank</author>
<author>L Sadler</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<date>2003</date>
<booktitle>From Treebank Resources to LFG F-Structurese. A. Abeille editor Treebanks: Building and Using Syntactically Annotated Corpora, Kluwer Academic Publishers, Dordrecht/Boston/London,The Netherlandsm</booktitle>
<pages>367--389</pages>
<marker>Frank, Sadler, van Genabith, Way, 2003</marker>
<rawString>A. Frank, L. Sadler, J. van Genabith, A. Way. 2003. From Treebank Resources to LFG F-Structurese. A. Abeille editor Treebanks: Building and Using Syntactically Annotated Corpora, Kluwer Academic Publishers, Dordrecht/Boston/London,The Netherlandsm pp. 367-389.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Guo</author>
<author>J van Genabith</author>
<author>H Wang</author>
</authors>
<title>Acquisition of Wide-Coverage, Robust, Probabilistic LexicalFunctional Grammar Resources for Chinese.</title>
<date>2007</date>
<booktitle>Proceedings of the 12th International Lexical Functional Grammar Conference, USA,</booktitle>
<pages>214--232</pages>
<marker>Guo, van Genabith, Wang, 2007</marker>
<rawString>Y. Guo, J. van Genabith, H. Wang. 2007. Acquisition of Wide-Coverage, Robust, Probabilistic LexicalFunctional Grammar Resources for Chinese. Proceedings of the 12th International Lexical Functional Grammar Conference, USA, pp. 214–232.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Kaplan</author>
<author>J Bresnan</author>
</authors>
<title>Lexical Functional Grammar: a Formal System for Grammatical Representation,</title>
<date>1982</date>
<booktitle>The Mental Representation of Grammatical Relations,</booktitle>
<pages>173--281</pages>
<editor>in J. Bresnan (ed.).</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA,</location>
<contexts>
<context position="3347" citStr="Kaplan and Bresnan, 1982" startWordPosition="478" endWordPosition="481">is to use the fstructure annotated ATB to derive wide-coverage resources for parsing and generating unrestricted Arabic text. In this paper we concentrate on the annotation algorithm. The paper first provides a brief overview of Lexical Functional Grammar, and the Penn Arabic Treebank (ATB). The next section presents the architecture of the f-structure annotation algorithm for the acquisition of f-structures from the Arabic treebank. The last section provides an evaluation of the quality and coverage of the annotation algorithm. 1.1 Lexical Functional Grammar Lexical-Functional Grammar (LFG) (Kaplan and Bresnan, 1982); (Bresnan, 2001), (Falk, 2001) 2001, (Sells, 1985) is a constraint-based theory of grammar. LFG rejects concepts of configurationality and movement familiar from generative grammar, and provides a non-derivational alternative of parallel structures of which phrase structure trees are only one component. LFG involves two basic, parallel forms of Proceedings of the EACL 2009 Workshop on Computational Approaches to Semitic Languages, pages 45–52, Athens, Greece, 31 March, 2009. c�2009 Association for Computational Linguistics 45 knowledge representation: c(onstituent)-structure, which is represe</context>
</contexts>
<marker>Kaplan, Bresnan, 1982</marker>
<rawString>R. Kaplan and J. Bresnan. 1982. Lexical Functional Grammar: a Formal System for Grammatical Representation, in J. Bresnan (ed.). The Mental Representation of Grammatical Relations, MIT Press, Cambridge, MA, pp. 173-281.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Kaplan</author>
<author>S Riezler</author>
<author>T H King</author>
<author>J T Maxwell</author>
<author>A Vasserman</author>
<author>R Crouch</author>
</authors>
<title>Speed and Accuracy in Shallow and Deep Stochastic Parsing.</title>
<date>2004</date>
<booktitle>In The Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics (HLT-NAACL 2004),</booktitle>
<pages>97--104</pages>
<location>Boston, MA,</location>
<marker>Kaplan, Riezler, King, Maxwell, Vasserman, Crouch, 2004</marker>
<rawString>R. M. Kaplan, S. Riezler, T. H. King, J. T. Maxwell, A. Vasserman, and R. Crouch. 2004. Speed and Accuracy in Shallow and Deep Stochastic Parsing. In The Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics (HLT-NAACL 2004), Boston, MA, pp. 97–104.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Maamouri</author>
<author>A Bies</author>
</authors>
<title>Developing an Arabic Treebank:</title>
<date>2004</date>
<booktitle>Methods, Guidelines, Procedures, and Tools Workshop on Computational Approaches to Arabic Script-based Languages, COLING 2004,</booktitle>
<location>Geneva,</location>
<contexts>
<context position="751" citStr="Maamouri and Bies, 2004" startWordPosition="101" endWordPosition="104">chool of Computing, Dublin City University, Ireland {lamia.tounsi, mattia, josef}@computing.dcu.ie Abstract A number of papers have reported on methods for the automatic acquisition of large-scale, probabilistic LFG-based grammatical resources from treebanks for English (Cahill and al., 2002), (Cahill and al., 2004), German (Cahill and al., 2003), Chinese (Burke, 2004), (Guo and al., 2007), Spanish (O’Donovan, 2004), (Chrupala and van Genabith, 2006) and French (Schluter and van Genabith, 2008). Here, we extend the LFG grammar acquisition approach to Arabic and the Penn Arabic Treebank (ATB) (Maamouri and Bies, 2004), adapting and extending the methodology of (Cahill and al., 2004) originally developed for English. Arabic is challenging because of its morphological richness and syntactic complexity. Currently 98% of ATB trees (without FRAG and X) produce a covering and connected f-structure. We conduct a qualitative evaluation of our annotation against a gold standard and achieve an f-score of 95%. 1 Introduction Treebank-based statistical parsers tend to achieve greater coverage and robustness compared to approaches using handcrafted grammars. However, they are criticised for being too shallow to mark im</context>
<context position="2605" citStr="Maamouri and Bies, 2004" startWordPosition="369" endWordPosition="372">sing (Cahill and al., 2008) and generation (Cahill and van Genabith, 2006). This approach was subsequently extended to other languages including German (Cahill and al., 2003), Chinese (Burke, 2004), (Guo and al., 2007), Spanish (O’Donovan, 2004), (Chrupala and van Genabith, 2006) and French (Schluter and van Genabith, 2008). Arabic is a semitic language and is well-known for its morphological richness and syntactic complexity. In this paper we describe the porting of the LFG annotation methodology to Arabic in order to induce LFG f-structures from the Penn Arabic Treebank (ATB) (Bies, 2003), (Maamouri and Bies, 2004). We evaluate both the coverage and quality of the automatic f-structure annotation of the ATB. Ultimately, our goal is to use the fstructure annotated ATB to derive wide-coverage resources for parsing and generating unrestricted Arabic text. In this paper we concentrate on the annotation algorithm. The paper first provides a brief overview of Lexical Functional Grammar, and the Penn Arabic Treebank (ATB). The next section presents the architecture of the f-structure annotation algorithm for the acquisition of f-structures from the Arabic treebank. The last section provides an evaluation of th</context>
<context position="4955" citStr="Maamouri and Bies, 2004" startWordPosition="691" endWordPosition="694">ng from some cross-linguistic syntactic differences. Languages may differ typologically as regards surface structural representations, but may still encode similar syntactic functions (such as, subject, object, adjunct, etc.). For a recent overview on LFG-based analyses of Arabic see (Attia, 2008) who presents a hand-crafted Arabic LFG parser using the XLE (Xerox Linguistics Environment). 1.2 The Penn Arabic Treebank (ATB) The Penn Arabic Treebank project started in 2001 with the aim of describing written Modern Standard Arabic newswire. The Treebank consists of 23611 sentences (Bies, 2003), (Maamouri and Bies, 2004) . Arabic is a subject pro-drop language: a null category (pro) is allowed in the subject position of a finite clause if the agreement features on the verb are rich enough to enable content to be recovered (Baptista, 1995), (Chomsky, 1981). This is represented in the ATB annotation by an empty node after the verb marked with a -SBJ functional tag. The ATB annotation, following the Penn-II Treebank, utilises the concept of empty nodes and traces to mark long distance dependencies, as in relative clauses and questions. The default word order in Arabic is VSO. When the subject precedes the verb (</context>
<context position="6904" citStr="Maamouri and Bies, 2004" startWordPosition="1010" endWordPosition="1013">f the ATB follows, as much as possible, the methodologies and bracketing guidelines already used for the English Penn-II Treebank. For example, in the Penn English Treebank (PTB) (Marcus, 1994), small clauses are considered sentences composed of a subject and a predicate, without traces for an omitted verb or any sort of control relationship, as in example (1) for the sentence ”I consider Kris a fool”. (1) (S (NP-SBJ I) (VP consider (S (NP-SBJ Kris) (NP-PRD a fool)))) The team working on the ATB found this approach very convenient for copula constructions in Arabic, which are mainly verbless (Maamouri and Bies, 2004). Therefore they used a similar analysis without assuming a deleted copula verb or control relationship, as in (2). (2) (S (NP-SBJ Al-mas&gt;alatu ✏é❐✌❆ÖÏ❅) (ADJ-PRD basiyTatuN ✏é➣❏✡✢✳)) é➣❏✡✢✳ ✏é❐ ✏ Al-mas&gt;alatu basiyTatuN the-question simple ‘The question is simple.’ 2 Architecture of the Arabic Automatic Annotation Algorithm The annotation algorithm for Arabic is based on and substantially revises the methodology used for English. For English, f-structure annotation is very much driven by configurational information: e.g. the leftmost NP sister of a VP is likely to be a direct object and he</context>
</contexts>
<marker>Maamouri, Bies, 2004</marker>
<rawString>M. Maamouri and A. Bies. 2004. Developing an Arabic Treebank: Methods, Guidelines, Procedures, and Tools Workshop on Computational Approaches to Arabic Script-based Languages, COLING 2004, Geneva, 2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Marcus</author>
<author>G Kim</author>
<author>M Marcinkiewicz</author>
<author>R MacIntyre</author>
<author>A Bies</author>
<author>M Ferguson</author>
<author>K Katz</author>
<author>B Schasberger</author>
</authors>
<title>The Penn Treebank: Annotating Predicate Argument Structure.</title>
<date>1994</date>
<booktitle>In Proceedings of the Human Language Technology Workshop.</booktitle>
<location>San Francisco, CA.</location>
<marker>Marcus, Kim, Marcinkiewicz, MacIntyre, Bies, Ferguson, Katz, Schasberger, 1994</marker>
<rawString>M. Marcus, G. Kim, M. Marcinkiewicz, R. MacIntyre, A. Bies, M. Ferguson, K. Katz and B. Schasberger 1994. The Penn Treebank: Annotating Predicate Argument Structure. In Proceedings of the Human Language Technology Workshop. San Francisco, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R O’Donovan</author>
<author>M Burke</author>
<author>A Cahill</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<date>2004</date>
<booktitle>Large-Scale Induction and Evaluation of Lexical Resources from the Penn-II Treebank. The 42nd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>368--375</pages>
<location>Barcelona,</location>
<marker>O’Donovan, Burke, Cahill, van Genabith, Way, 2004</marker>
<rawString>R. O’Donovan, M. Burke, A. Cahill, J. van Genabith, and A. Way. 2004. Large-Scale Induction and Evaluation of Lexical Resources from the Penn-II Treebank. The 42nd Annual Meeting of the Association for Computational Linguistics, Barcelona, Spain, pp. 368–375.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R O’Donovan</author>
<author>A Cahill</author>
<author>J van Genabith</author>
<author>A Way</author>
</authors>
<date>2005</date>
<booktitle>Automatic Acquisition of Spanish LFG Resources from the CAST3LB Treebank. The Tenth International Conference on LFG,</booktitle>
<pages>334--352</pages>
<location>Bergen,</location>
<marker>O’Donovan, Cahill, van Genabith, Way, 2005</marker>
<rawString>R. O’Donovan, A. Cahill, J. van Genabith, and A. Way. 2005. Automatic Acquisition of Spanish LFG Resources from the CAST3LB Treebank. The Tenth International Conference on LFG, Bergen, Norway, pp. 334–352.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Riezler</author>
<author>T King</author>
<author>R Kaplan</author>
<author>R Crouch</author>
<author>J T Maxwell</author>
<author>M Johnson</author>
</authors>
<title>Parsing theWall Street Journal using a Lexical-Functional Grammar and Discriminative Estimation Techniques.</title>
<date>2002</date>
<booktitle>The 40th Annual Conference of the Association for Computational Linguistics (ACL-02),</booktitle>
<pages>271--278</pages>
<location>Philadelphia, PA,</location>
<marker>Riezler, King, Kaplan, Crouch, Maxwell, Johnson, 2002</marker>
<rawString>S. Riezler, King, T., Kaplan, R., Crouch, R., Maxwell, J. T., and Johnson, M. 2002. Parsing theWall Street Journal using a Lexical-Functional Grammar and Discriminative Estimation Techniques. The 40th Annual Conference of the Association for Computational Linguistics (ACL-02), Philadelphia, PA, pp. 271–278.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Sells</author>
</authors>
<title>Lectures on Contemporary Syntactic Theories. CSLI Lecture Notes.</title>
<date>1985</date>
<publisher>CSLI.</publisher>
<location>Stanford, CA:</location>
<contexts>
<context position="3398" citStr="Sells, 1985" startWordPosition="487" endWordPosition="488">esources for parsing and generating unrestricted Arabic text. In this paper we concentrate on the annotation algorithm. The paper first provides a brief overview of Lexical Functional Grammar, and the Penn Arabic Treebank (ATB). The next section presents the architecture of the f-structure annotation algorithm for the acquisition of f-structures from the Arabic treebank. The last section provides an evaluation of the quality and coverage of the annotation algorithm. 1.1 Lexical Functional Grammar Lexical-Functional Grammar (LFG) (Kaplan and Bresnan, 1982); (Bresnan, 2001), (Falk, 2001) 2001, (Sells, 1985) is a constraint-based theory of grammar. LFG rejects concepts of configurationality and movement familiar from generative grammar, and provides a non-derivational alternative of parallel structures of which phrase structure trees are only one component. LFG involves two basic, parallel forms of Proceedings of the EACL 2009 Workshop on Computational Approaches to Semitic Languages, pages 45–52, Athens, Greece, 31 March, 2009. c�2009 Association for Computational Linguistics 45 knowledge representation: c(onstituent)-structure, which is represented by (f-structure annotated) phrase structure tr</context>
</contexts>
<marker>Sells, 1985</marker>
<rawString>P. Sells 1985. Lectures on Contemporary Syntactic Theories. CSLI Lecture Notes. Stanford, CA: CSLI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Schluter</author>
<author>J van Genabith</author>
</authors>
<title>Treebank-Based Acquisition of LFG Parsing Resources for French.</title>
<date>2008</date>
<booktitle>Proceedings of the Sixth International Language Resources and Evaluation (LREC’08).</booktitle>
<marker>Schluter, van Genabith, 2008</marker>
<rawString>N. Schluter and J. van Genabith 2008. Treebank-Based Acquisition of LFG Parsing Resources for French. Proceedings of the Sixth International Language Resources and Evaluation (LREC’08).</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>