<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.039255">
<title confidence="0.935076">
OTTO: A Transcription and Management Tool for Historical Texts
</title>
<author confidence="0.994161">
Stefanie Dipper, Lara Kresse, Martin Schnurrenberger &amp; Seong-Eun Cho
</author>
<affiliation confidence="0.989136">
Institute of Linguistics, Ruhr University Bochum
</affiliation>
<address confidence="0.737982">
D – 44780 Bochum
</address>
<email confidence="0.9132385">
dipper@linguistics.rub.de, lara.kresse@rub.de,
martin.schnurrenberger@rub.de, seong-eun.cho@rub.de
</email>
<sectionHeader confidence="0.992851" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999953818181818">
This paper presents OTTO, a transcription
tool designed for diplomatic transcription
of historical language data. The tool sup-
ports easy and fast typing and instant ren-
dering of transcription in order to gain a
look as close to the original manuscript
as possible. In addition, the tool provides
support for the management of transcrip-
tion projects which involve distributed,
collaborative working of multiple parties
on collections of documents.
</bodyText>
<sectionHeader confidence="0.720744" genericHeader="method">
1 Corpora of Historical Languages1
</sectionHeader>
<bodyText confidence="0.99993352173913">
The only way to study historical languages is, of
course, by looking at texts, or corpora from these
languages. Compared to texts from modern lan-
guages, early manuscripts or prints pose particular
challenges. Depending on physical condition of
the manuscripts, passages can be hard to decipher,
or pages can be damaged or missing completely.
Some texts contain words or passages that have
been added later, e.g., to clarify the meaning of a
text segment, or to correct (real or assumed) errors.
Moreover, historical texts exhibit a large
amount of character peculiarities (special letters,
punctuation marks, abbreviations, etc.), which are
not easily encoded by, e.g., the ASCII encoding
standard. For instance, medieval German texts of-
ten use superscribed letters to represent emerging
or remnant forms of diphthongs, e.g. u. Some texts
distinguish two forms of the (modern) letter &lt;s&gt;,
the so-called short vs. long s: &lt;s&gt; vs. &lt; &gt;. Con-
versely, some texts do not differentiate between
the (modern) letters &lt;u&gt; and &lt;v&gt;.
The existence of letter variants is often at-
tributed to aesthetic reasons or to save (expen-
</bodyText>
<footnote confidence="0.96412275">
1The research reported in this paper was financed by
Deutsche Forschungsgemeinschaft, Grant DI 1558/1-1.
We would like to thank the anonymous reviewers for their
helpful comments.
</footnote>
<bodyText confidence="0.997122589743589">
sive) space. Thus, when early manuscripts are
to be transcribed, it must first be decided whether
the differences between such variants are consid-
ered irrelevant and, hence, can be safely ignored,
or whether they constitute a (possibly) interesting
phenomenon and potential research issue.
This discussion relates to the level of tran-
scription, i.e. “how much of the information in
the original document is included (or otherwise
noted) by the transcriber in his or her transcrip-
tion” (Driscoll, 2006). Diplomatic transcription
aims at reproducing a large range of features of the
original manuscript or print, such as large initials
or variant letter forms.
Another important issue with historical corpora
is meta-information. A lot of research on histor-
ical texts focuses on the text proper and its con-
tent, rather than its language. For instance, re-
searchers are interested in the history of a text
(“who wrote this text and where?”), its relation-
ship to other texts (“did the writer know about or
copy another text?”), its provenance (“who were
the owners of this text?”), or its role in the cul-
tural context (“why did the author write about this
subject, and why in this way?”). To answer such
questions, information about past and current de-
positories of a manuscript, peculiarities of the ma-
terial that the text is written on, etc. are collected.
In addition, any indicator of the author (or writer)
of the text is noted down. Here, the text’s language
becomes relevant as a means to gather information
about the author. Linguistic features can be used to
determine the text’s date of origin and the author’s
social and regional affiliation. Usually, this kind
of information is encoded in the header (see, e.g.,
the TEI header (TEI Consortium (eds), 2007)).2
From the above, we derive the following re-
quirements:
Above all, use of Unicode is indispensable, to
</bodyText>
<footnote confidence="0.98573">
2Text Encoding Initiative, www.tei-c.org
</footnote>
<page confidence="0.950137">
182
</page>
<bodyText confidence="0.940201826086956">
Proceedings of the Fourth Linguistic Annotation Workshop, ACL 2010, pages 182–185,
Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics
be able to encode and represent the numerous spe-
cial symbols and characters in a reliable and sus-
tainable way. Of course, not all characters that oc-
cur in historical texts are already covered by the
current version of Unicode. This is especially true
of character combinations, which are only sup-
ported partially (the main reason being that Uni-
code’s Combining Diacritical Marks focus on su-
perscribed diacritics rather than characters in gen-
eral). Therefore, Unicode’s Private Use Area has
to be used as well.
Similarly, there are characters without glyphs
defined and designed for them. Hence, an ideal
transcription tool should support the user in creat-
ing new glyphs whenever needed.
Since there are many more characters in histori-
cal texts than keys on a keyboard, the transcription
tool must provide some means to key in all char-
acters and combinations (similar issues arise from
logographic scripts, such as Chinese). In princi-
ple, there are two ways to do this:
</bodyText>
<listItem confidence="0.779917590909091">
(i) The transcriber uses a virtual keyboard,
which supports various character sets simultane-
ously and is operated by the mouse. Virtual key-
boards are “WYSIWYG” in that their keys are la-
beled by the special characters, which can then be
selected by the user by mouse clicks. As is well
known, virtual keyboards are often preferred by
casual users, beginners, or non-experts, since they
are straightforward to operate and do not require
any extra knowledge. However, the drawback is
that “typing” with a computer mouse is rather slow
and tedious and, hence, not a long-term solution.
(ii) Alternatively, special characters, such as
“$”, “@”, etc., are used as substitutes for historical
characters, commonly in combination with ordi-
nary characters, to yield a larger number of char-
acters that can be represented. Regular and ad-
vanced users usually prefer substitute characters
to virtual keyboards, because once the user knows
the substitutes, typing them becomes very natural
and fast. Of course, with this solution transcribers
have to learn and memorize the substitutes.
</listItem>
<bodyText confidence="0.999788234042554">
Some tools convert substitutes to the actual
characters immediately after typing (this is the
case, e.g., with shortcuts in Emacs), while others
require additional post-processing by interpreters
and viewers to display the intended glyphs (e.g.,
LaTeX encodings converted to postscript). Imme-
diate preview seems advantageous in that it pro-
vides immediate feedback to the user. On the other
hand, it might be easier to memorize substitutes if
the user can actually see them.
Which input method is to be preferred for his-
torical data? Transcription projects often involve
both beginners and advanced users: having people
(e.g. student assistants) join and leave the team is
rather often the case, because transcribing is a very
labor- and time-intensive task.
Our transcription tool OTTO faces this fact by
combining the advantages of the two methods.
The user types and views character substitutes but
simultaneously gets feedback in a separate win-
dow about whether the input is correct or not. This
lessens the uncertainty of new team members and
helps avoiding typing mistakes, thus increasing
the quality of transcription.
Another important requirement is the possibil-
ity to mark additions, deletions, uncertain read-
ings, etc. To encode such information, TEI also
provides a standardized representation format.
Finally, projects that involve multiple parties
distributed over different sites add a further re-
quirement. In such scenarios, tools are preferably
hosted by a server and operated via a web browser.
This way, there is no need of multiple installations
at different sites, and data on the server does not
need to be synchronized but is always up to date.
To our knowledge, there is no transcription tool
that (i) would support Unicode, (ii) allow for fast
typing, using character substitutes, and (iii) is
web-based. In MS Word, special characters are
usually inserted by means of virtual keyboards but
character substitutes can be defined via macros.
However, macros often pose problems when Word
is upgraded. Moreover, Word is not web-based.
LaTeX, which supports character substitutes, is of-
ten considered too complex for non-expert users,
does not offer instant preview, and is not web-
based.
</bodyText>
<sectionHeader confidence="0.952143" genericHeader="method">
2 The Transcription Tool OTTO3
</sectionHeader>
<bodyText confidence="0.997699571428571">
OTTO is an online transcription tool for editing,
viewing and storing information of historical lan-
guage data. OTTO’s data model is a directed
graph. Nodes point to a (possibly empty) stretch
of primary data and are labeled.
The tool is written in PHP and also uses some
Java Script; data is stored in a mySQL database.
</bodyText>
<footnote confidence="0.9760605">
3A prior version of OTTO has been described in Dipper
and Schnurrenberger (2009).
</footnote>
<page confidence="0.998138">
183
</page>
<figureCaption confidence="0.999954">
Figure 1: Screenshot of the text editor
</figureCaption>
<bodyText confidence="0.9998565">
Any server which runs PHP &gt;5.2 can be a host
for OTTO. Users can login to the tool from any-
where using a standard web browser. A live demo
of OTTO, with slightly restricted functionality,
can be tried out here: http://underberg.
linguistics.rub.de/ottolive.
</bodyText>
<subsectionHeader confidence="0.997006">
2.1 Transcribing with OTTO
</subsectionHeader>
<bodyText confidence="0.998005545454545">
OTTO integrates a user-definable header editor, to
enter meta information about the manuscript, such
as its title, author, date of origin, etc. However, the
tool’s core feature is the text editor. The upper part
of the text editor in Fig. 1 displays the lines that
have been transcribed and saved already. Each line
is preceded by the bibliographic key, M117_sd2,
the folio and line numbers, which are automati-
cally generated.
The bottom part is dominated by two separate
frames. The frame on the left, called Transcrip-
tion, is the currently “active” field, where the user
enters the transcription (or edits an existing one).
The transcriber can use substitute characters to en-
code non-ASCII characters. In the figure, the dol-
lar sign ($) serves as a substitute for long s (&lt; &gt;,
see the first word of the text, De$), and u\o stands
for u (see Cu\onrat in the Transcription field at the
bottom).
The frame on the right, called Unicode, directly
transforms the user input to its diplomatic tran-
scription form, using a set of transcription rules.
The diplomatic Unicode view thus provides imme-
diate feedback to the transcriber whether the input
is correct or not.
Transcription rules have the form of “search-
and-replace” patterns. The first entity specifies the
character “to be searched” (e.g. $), the second en-
tity specifies the diplomatic Unicode character that
“replaces” the actual character. Transcription rules
are defined by the user, who can consult a database
such as the ENRICH Gaiji Bank4 to look up Uni-
code code points and standardized mappings for
them, or define new ones. OTTO uses the Juni-
code font, which supports many of MUFI’s me-
dieval characters, partly defined in Unicode’s Pri-
vate Use Area.5
Rules can be defined locally—i.e., applying to
the current transcription only—or globally, i.e.,
applying to all documents contained in OTTO’s
database.6 The rules are used to map the lines
entered in the Transcription frame to the lines in
diplomatic form in the Unicode frame.
OTTO allows for the use of comments, which
</bodyText>
<footnote confidence="0.997638857142857">
4http://beta.manuscriptorium.com/
5Junicode: http://junicode.sourceforge.
net/; MUFI (Medieval Unicode Font Initiative):
http://www.mufi.info/
6Global rules can be thought of as the application of a
project’s transcription criteria; local rules can be viewed as
handy abbreviations defined by individual users.
</footnote>
<page confidence="0.997529">
184
</page>
<bodyText confidence="0.9996812">
can be inserted at any point of the text. Since the
current version of OTTO does not provide special
means to take record of passages that have been
added, deleted, or modified otherwise, the com-
ment mechanism could be exploited for this pur-
pose.
The transcription, both in original (typed) and
in Unicode version, can be exported to a (cus-
tomized) TEI-conform XML format. Transcrip-
tion rules are optionally included in the header.
</bodyText>
<subsectionHeader confidence="0.99896">
2.2 Transcription Projects
</subsectionHeader>
<bodyText confidence="0.9999675">
Projects that deal with the creation of historical
corpora often involve a cascade of successive pro-
cessing steps that a transcription has to undergo.
For instance, high-quality transcriptions are often
entered twice, by two transcribers independently
from each other, and their outcomes are compared
and adjusted. In the case of diplomatic transcrip-
tions, a further step called collating is necessary.
Collating means comparing the transcription and
the original manuscript in full detail. Often two
people are involved: One person reads out the
manuscript letter for letter, and also reports on any
superscript, white-space, etc. The other person
simultaneously tracks the transcription, letter for
letter. This way, high-quality diplomatic transcrip-
tion can be achieved.
To cope with the numerous processing steps,
transcription projects often involve a lot of people,
who work on different manuscripts (or different
pages of the same manuscript), in different pro-
cessing states.
OTTO supports such transcription projects in
several aspects: First, it allows for remote access
to the database, via standard web browsers. Sec-
ond, documents that are currently edited by some
user are locked, i.e., cannot be edited or modi-
fied otherwise by another user. Third, OTTO pro-
vides facilities to support and promote communi-
cation among project members. Finally, graphical
progress bars show the progress for each transcrip-
tion, measuring the ratio of the subtasks already
completed to all subtasks,
</bodyText>
<sectionHeader confidence="0.997793" genericHeader="conclusions">
3 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.999964428571429">
This paper presented OTTO, an online transcrip-
tion tool for easy and fast typing, by the use of
user-defined special characters, and, simultane-
ously, providing a view on the manuscript that is as
close to the original as possible. OTTO also sup-
ports distributed, collaborative working of multi-
ple parties on collections of documents.
Future work includes adding further support for
transcribing special characters. First, we plan to
integrate a virtual keyboard for casual users. The
keyboard can also be used in the creation of tran-
scription rules, in order to specify the Unicode re-
placement characters, or if the user wants to look
up the substitute character defined for a specific
Unicode character in the set of transcription rules.
We plan to use the TEI gaiji module for the
representation of transcription rules and substitute
characters; similarly, elements from the TEI tran-
scr module could be used for the encoding of ad-
ditions, deletions, etc.7
For facilitating the collation process, we plan
to integrate transparent overlays. The user would
have to rescale an image of the original manuscript
and adjust it to the transcription, so that corre-
sponding characters would match.
OTTO is designed as to allow for adding cus-
tom functions, by being programmed according
to the paradigm of object-oriented programming.
Additional functionality can easily be integrated
(known as Plug-Ins). We currently work on in-
tegrating a normalizer into OTTO which maps
spelling and dialectal variants of word forms to a
standardized word form (Schnurrenberger, 2010).
OTTO will be made freely available to the re-
search community.
</bodyText>
<sectionHeader confidence="0.99924" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.984963388888889">
Stefanie Dipper and Martin Schnurrenberger. 2009.
OTTO: A tool for diplomatic transcription of histor-
ical texts. In Proceedings of 4th Language &amp; Tech-
nology Conference, Poznan, Poland. To appear.
Matthew J. Driscoll. 2006. Levels of transcription.
In Lou Burnard, Katherine O’Brien O’Keeffe,
and John Unsworth, editors, Electronic Textual
Editing, pages 254–261. New York: Modern
Language Association of America. URL: http:
//www.tei-c.org/About/Archive_new/
ETE/Preview/driscoll.xml.
Martin Schnurrenberger. 2010. Methods for
graphemic normalization of unstandardized written
lang uage from Middle High German Corpora. Mas-
ter’s thesis, Ruhr University Bochum.
TEI Consortium (eds). 2007. TEI P5: Guidelines for
electronic text encoding and interchange. http:
//www.tei-c.org/Guidelines/P5/.
</reference>
<footnote confidence="0.884024">
7http://www.tei-c.org/release/doc/
tei-p5-doc/html/WD.html and PH.html
</footnote>
<page confidence="0.995214">
185
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.098416">
<title confidence="0.995211">OTTO: A Transcription and Management Tool for Historical Texts</title>
<author confidence="0.913838">Stefanie Dipper</author>
<author confidence="0.913838">Lara Kresse</author>
<author confidence="0.913838">Martin Schnurrenberger</author>
<author confidence="0.913838">Seong-Eun</author>
<affiliation confidence="0.999327">Institute of Linguistics, Ruhr University Bochum</affiliation>
<address confidence="0.964939">D – 44780 Bochum</address>
<email confidence="0.894285">dipper@linguistics.rub.de,lara.kresse@rub.de,martin.schnurrenberger@rub.de,seong-eun.cho@rub.de</email>
<abstract confidence="0.994050481250002">This paper presents OTTO, a transcription tool designed for diplomatic transcription of historical language data. The tool supports easy and fast typing and instant rendering of transcription in order to gain a look as close to the original manuscript as possible. In addition, the tool provides support for the management of transcription projects which involve distributed, collaborative working of multiple parties on collections of documents. Corpora of Historical The only way to study historical languages is, of course, by looking at texts, or corpora from these languages. Compared to texts from modern languages, early manuscripts or prints pose particular challenges. Depending on physical condition of the manuscripts, passages can be hard to decipher, or pages can be damaged or missing completely. Some texts contain words or passages that have been added later, e.g., to clarify the meaning of a text segment, or to correct (real or assumed) errors. Moreover, historical texts exhibit a large amount of character peculiarities (special letters, punctuation marks, abbreviations, etc.), which are not easily encoded by, e.g., the ASCII encoding standard. For instance, medieval German texts often use superscribed letters to represent emerging or remnant forms of diphthongs, e.g. u. Some texts two forms of the (modern) letter so-called short vs. long s: Conversely, some texts do not differentiate between (modern) letters The existence of letter variants is often atto aesthetic reasons or to save (expenresearch reported in this paper was financed by Deutsche Forschungsgemeinschaft, Grant DI 1558/1-1. We would like to thank the anonymous reviewers for their helpful comments. sive) space. Thus, when early manuscripts are to be transcribed, it must first be decided whether the differences between such variants are considered irrelevant and, hence, can be safely ignored, or whether they constitute a (possibly) interesting phenomenon and potential research issue. discussion relates to the of trani.e. “how much of the information in the original document is included (or otherwise noted) by the transcriber in his or her transcrip- (Driscoll, 2006). transcription aims at reproducing a large range of features of the original manuscript or print, such as large initials or variant letter forms. Another important issue with historical corpora is meta-information. A lot of research on historical texts focuses on the text proper and its content, rather than its language. For instance, researchers are interested in the history of a text (“who wrote this text and where?”), its relationship to other texts (“did the writer know about or copy another text?”), its provenance (“who were the owners of this text?”), or its role in the cultural context (“why did the author write about this subject, and why in this way?”). To answer such questions, information about past and current depositories of a manuscript, peculiarities of the material that the text is written on, etc. are collected. In addition, any indicator of the author (or writer) of the text is noted down. Here, the text’s language becomes relevant as a means to gather information about the author. Linguistic features can be used to determine the text’s date of origin and the author’s social and regional affiliation. Usually, this kind information is encoded in the e.g., TEI header (TEI Consortium (eds), From the above, we derive the following requirements: all, use of indispensable, to Encoding Initiative, 182 of the Fourth Linguistic Annotation Workshop, ACL pages Sweden, 15-16 July 2010. Association for Computational Linguistics be able to encode and represent the numerous special symbols and characters in a reliable and sustainable way. Of course, not all characters that occur in historical texts are already covered by the current version of Unicode. This is especially true character which are only supported partially (the main reason being that Unicode’s Combining Diacritical Marks focus on superscribed diacritics rather than characters in general). Therefore, Unicode’s Private Use Area has to be used as well. Similarly, there are characters without glyphs defined and designed for them. Hence, an ideal transcription tool should support the user in creating new glyphs whenever needed. Since there are many more characters in historical texts than keys on a keyboard, the transcription tool must provide some means to key in all characters and combinations (similar issues arise from logographic scripts, such as Chinese). In principle, there are two ways to do this: (i) The transcriber uses a virtual keyboard, which supports various character sets simultaneously and is operated by the mouse. Virtual keyboards are “WYSIWYG” in that their keys are labeled by the special characters, which can then be selected by the user by mouse clicks. As is well known, virtual keyboards are often preferred by casual users, beginners, or non-experts, since they are straightforward to operate and do not require any extra knowledge. However, the drawback is that “typing” with a computer mouse is rather slow and tedious and, hence, not a long-term solution. (ii) Alternatively, special characters, such as “$”, “@”, etc., are used as substitutes for historical characters, commonly in combination with ordinary characters, to yield a larger number of characters that can be represented. Regular and advanced users usually prefer substitute characters to virtual keyboards, because once the user knows the substitutes, typing them becomes very natural and fast. Of course, with this solution transcribers have to learn and memorize the substitutes. Some tools convert substitutes to the actual characters immediately after typing (this is the case, e.g., with shortcuts in Emacs), while others require additional post-processing by interpreters and viewers to display the intended glyphs (e.g., LaTeX encodings converted to postscript). Immediate preview seems advantageous in that it provides immediate feedback to the user. On the other hand, it might be easier to memorize substitutes if the user can actually see them. Which input method is to be preferred for historical data? Transcription projects often involve both beginners and advanced users: having people (e.g. student assistants) join and leave the team is rather often the case, because transcribing is a very laborand time-intensive task. Our transcription tool OTTO faces this fact by combining the advantages of the two methods. The user types and views character substitutes but simultaneously gets feedback in a separate window about whether the input is correct or not. This lessens the uncertainty of new team members and helps avoiding typing mistakes, thus increasing the quality of transcription. Another important requirement is the possibility to mark additions, deletions, uncertain readings, etc. To encode such information, TEI also provides a standardized representation format. Finally, projects that involve multiple parties distributed over different sites add a further requirement. In such scenarios, tools are preferably hosted by a server and operated via a web browser. This way, there is no need of multiple installations at different sites, and data on the server does not need to be synchronized but is always up to date. To our knowledge, there is no transcription tool that (i) would support Unicode, (ii) allow for fast typing, using character substitutes, and (iii) is web-based. In MS Word, special characters are usually inserted by means of virtual keyboards but character substitutes can be defined via macros. However, macros often pose problems when Word is upgraded. Moreover, Word is not web-based. LaTeX, which supports character substitutes, is often considered too complex for non-expert users, does not offer instant preview, and is not webbased. The Transcription Tool OTTO is an online transcription tool for editing, viewing and storing information of historical language data. OTTO’s data model is a directed graph. Nodes point to a (possibly empty) stretch of primary data and are labeled. The tool is written in PHP and also uses some Java Script; data is stored in a mySQL database. prior version of OTTO has been described in Dipper and Schnurrenberger (2009). 183 Figure 1: Screenshot of the text editor server which runs PHP can be a host for OTTO. Users can login to the tool from anywhere using a standard web browser. A live demo of OTTO, with slightly restricted functionality, be tried out here: 2.1 Transcribing with OTTO OTTO integrates a user-definable header editor, to enter meta information about the manuscript, such as its title, author, date of origin, etc. However, the tool’s core feature is the text editor. The upper part of the text editor in Fig. 1 displays the lines that have been transcribed and saved already. Each line preceded by the bibliographic key, the folio and line numbers, which are automatically generated. The bottom part is dominated by two separate The frame on the left, called Transcripis the currently “active” field, where the user enters the transcription (or edits an existing one). The transcriber can use substitute characters to encode non-ASCII characters. In the figure, the dolsign serves as a substitute for long s the first word of the text, and the Transcription field at the bottom). frame on the right, called directly transforms the user input to its diplomatic transcription form, using a set of transcription rules. The diplomatic Unicode view thus provides immediate feedback to the transcriber whether the input is correct or not. Transcription rules have the form of “searchand-replace” patterns. The first entity specifies the “to be searched” (e.g. the second entity specifies the diplomatic Unicode character that “replaces” the actual character. Transcription rules are defined by the user, who can consult a database as the ENRICH Gaiji to look up Unicode code points and standardized mappings for them, or define new ones. OTTO uses the Junicode font, which supports many of MUFI’s medieval characters, partly defined in Unicode’s Pri- Use Rules can be defined locally—i.e., applying to the current transcription only—or globally, i.e., applying to all documents contained in OTTO’s The rules are used to map the lines entered in the Transcription frame to the lines in diplomatic form in the Unicode frame. OTTO allows for the use of comments, which MUFI (Medieval Unicode Font Initiative): http://www.mufi.info/ rules can be thought of as the application of a project’s transcription criteria; local rules can be viewed as handy abbreviations defined by individual users. 184 can be inserted at any point of the text. Since the current version of OTTO does not provide special means to take record of passages that have been added, deleted, or modified otherwise, the comment mechanism could be exploited for this purpose. The transcription, both in original (typed) and in Unicode version, can be exported to a (customized) TEI-conform XML format. Transcription rules are optionally included in the header. 2.2 Transcription Projects Projects that deal with the creation of historical corpora often involve a cascade of successive processing steps that a transcription has to undergo. For instance, high-quality transcriptions are often entered twice, by two transcribers independently from each other, and their outcomes are compared and adjusted. In the case of diplomatic transcripa further step called necessary. Collating means comparing the transcription and the original manuscript in full detail. Often two people are involved: One person reads out the manuscript letter for letter, and also reports on any superscript, white-space, etc. The other person simultaneously tracks the transcription, letter for letter. This way, high-quality diplomatic transcription can be achieved. To cope with the numerous processing steps, transcription projects often involve a lot of people, who work on different manuscripts (or different pages of the same manuscript), in different processing states. OTTO supports such transcription projects in several aspects: First, it allows for remote access to the database, via standard web browsers. Second, documents that are currently edited by some user are locked, i.e., cannot be edited or modified otherwise by another user. Third, OTTO provides facilities to support and promote communication among project members. Finally, graphical progress bars show the progress for each transcription, measuring the ratio of the subtasks already completed to all subtasks, 3 Conclusion and Future Work This paper presented OTTO, an online transcription tool for easy and fast typing, by the use of user-defined special characters, and, simultaneously, providing a view on the manuscript that is as to the original as possible. OTTO also supports distributed, collaborative working of multiple parties on collections of documents. Future work includes adding further support for transcribing special characters. First, we plan to integrate a virtual keyboard for casual users. The keyboard can also be used in the creation of transcription rules, in order to specify the Unicode replacement characters, or if the user wants to look up the substitute character defined for a specific Unicode character in the set of transcription rules. plan to use the TEI for the representation of transcription rules and substitute similarly, elements from the TEI trancould be used for the encoding of addeletions, For facilitating the collation process, we plan to integrate transparent overlays. The user would have to rescale an image of the original manuscript and adjust it to the transcription, so that corresponding characters would match. OTTO is designed as to allow for adding custom functions, by being programmed according to the paradigm of object-oriented programming. Additional functionality can easily be integrated (known as Plug-Ins). We currently work on integrating a normalizer into OTTO which maps spelling and dialectal variants of word forms to a standardized word form (Schnurrenberger, 2010). OTTO will be made freely available to the research community.</abstract>
<note confidence="0.902273">References Stefanie Dipper and Martin Schnurrenberger. 2009. OTTO: A tool for diplomatic transcription of histortexts. In of 4th Language &amp; Tech- Poznan, Poland. To appear. Matthew J. Driscoll. 2006. Levels of transcription. In Lou Burnard, Katherine O’Brien O’Keeffe, John Unsworth, editors, Textual pages 254–261. New York: Modern Association of America. URL: //www.tei-c.org/About/Archive_new/</note>
<author confidence="0.948202">Methods for</author>
<abstract confidence="0.9719078">graphemic normalization of unstandardized written lang uage from Middle High German Corpora. Master’s thesis, Ruhr University Bochum. TEI Consortium (eds). 2007. TEI P5: Guidelines for text encoding and interchange.</abstract>
<intro confidence="0.795066">185</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Stefanie Dipper</author>
<author>Martin Schnurrenberger</author>
</authors>
<title>OTTO: A tool for diplomatic transcription of historical texts.</title>
<date>2009</date>
<booktitle>In Proceedings of 4th Language &amp; Technology Conference,</booktitle>
<location>Poznan, Poland.</location>
<note>To appear.</note>
<contexts>
<context position="8838" citStr="Dipper and Schnurrenberger (2009)" startWordPosition="1389" endWordPosition="1392">ord is upgraded. Moreover, Word is not web-based. LaTeX, which supports character substitutes, is often considered too complex for non-expert users, does not offer instant preview, and is not webbased. 2 The Transcription Tool OTTO3 OTTO is an online transcription tool for editing, viewing and storing information of historical language data. OTTO’s data model is a directed graph. Nodes point to a (possibly empty) stretch of primary data and are labeled. The tool is written in PHP and also uses some Java Script; data is stored in a mySQL database. 3A prior version of OTTO has been described in Dipper and Schnurrenberger (2009). 183 Figure 1: Screenshot of the text editor Any server which runs PHP &gt;5.2 can be a host for OTTO. Users can login to the tool from anywhere using a standard web browser. A live demo of OTTO, with slightly restricted functionality, can be tried out here: http://underberg. linguistics.rub.de/ottolive. 2.1 Transcribing with OTTO OTTO integrates a user-definable header editor, to enter meta information about the manuscript, such as its title, author, date of origin, etc. However, the tool’s core feature is the text editor. The upper part of the text editor in Fig. 1 displays the lines that have</context>
</contexts>
<marker>Dipper, Schnurrenberger, 2009</marker>
<rawString>Stefanie Dipper and Martin Schnurrenberger. 2009. OTTO: A tool for diplomatic transcription of historical texts. In Proceedings of 4th Language &amp; Technology Conference, Poznan, Poland. To appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew J Driscoll</author>
</authors>
<title>Levels of transcription.</title>
<date>2006</date>
<booktitle>Electronic Textual Editing,</booktitle>
<pages>254--261</pages>
<editor>In Lou Burnard, Katherine O’Brien O’Keeffe, and John Unsworth, editors,</editor>
<location>New York:</location>
<contexts>
<context position="2580" citStr="Driscoll, 2006" startWordPosition="386" endWordPosition="387">chungsgemeinschaft, Grant DI 1558/1-1. We would like to thank the anonymous reviewers for their helpful comments. sive) space. Thus, when early manuscripts are to be transcribed, it must first be decided whether the differences between such variants are considered irrelevant and, hence, can be safely ignored, or whether they constitute a (possibly) interesting phenomenon and potential research issue. This discussion relates to the level of transcription, i.e. “how much of the information in the original document is included (or otherwise noted) by the transcriber in his or her transcription” (Driscoll, 2006). Diplomatic transcription aims at reproducing a large range of features of the original manuscript or print, such as large initials or variant letter forms. Another important issue with historical corpora is meta-information. A lot of research on historical texts focuses on the text proper and its content, rather than its language. For instance, researchers are interested in the history of a text (“who wrote this text and where?”), its relationship to other texts (“did the writer know about or copy another text?”), its provenance (“who were the owners of this text?”), or its role in the cultu</context>
</contexts>
<marker>Driscoll, 2006</marker>
<rawString>Matthew J. Driscoll. 2006. Levels of transcription. In Lou Burnard, Katherine O’Brien O’Keeffe, and John Unsworth, editors, Electronic Textual Editing, pages 254–261. New York: Modern Language Association of America. URL: http: //www.tei-c.org/About/Archive_new/ ETE/Preview/driscoll.xml.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Schnurrenberger</author>
</authors>
<title>Methods for graphemic normalization of unstandardized written lang uage from Middle High German Corpora. Master’s thesis,</title>
<date>2010</date>
<institution>Ruhr University Bochum.</institution>
<marker>Schnurrenberger, 2010</marker>
<rawString>Martin Schnurrenberger. 2010. Methods for graphemic normalization of unstandardized written lang uage from Middle High German Corpora. Master’s thesis, Ruhr University Bochum.</rawString>
</citation>
<citation valid="true">
<authors>
<author>TEI Consortium</author>
</authors>
<title>TEI P5: Guidelines for electronic text encoding and interchange.</title>
<date>2007</date>
<note>http: //www.tei-c.org/Guidelines/P5/.</note>
<marker>Consortium, 2007</marker>
<rawString>TEI Consortium (eds). 2007. TEI P5: Guidelines for electronic text encoding and interchange. http: //www.tei-c.org/Guidelines/P5/.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>