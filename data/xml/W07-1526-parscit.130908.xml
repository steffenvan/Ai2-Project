<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.417917">
<title confidence="0.950163">
Multiple-step treebank conversion: from dependency to Penn format
</title>
<author confidence="0.963696">
Cristina Bosco
</author>
<affiliation confidence="0.921113">
Dipartimento di Informatica, Universit`a di Torino
</affiliation>
<address confidence="0.9314545">
Corso Svizzera 185
10149 Torino - Italia
</address>
<email confidence="0.999298">
bosco@di.unito.it
</email>
<sectionHeader confidence="0.998601" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999990086956522">
Whilst the degree to which a treebank sub-
scribes to a specific linguistic theory limits
the usefulness of the resource, the availabil-
ity of more formats for the same resource
plays a crucial role both in NLP and linguis-
tics. Conversion tools and multi-format tree-
banks are useful for investigating portability
of NLP systems and validity of annotation.
Unfortunately, conversion is a quite complex
task since it involves grammatical rules and
linguistic knowledge to be incorporated into
the converter program.
The paper focusses on a methodology for
treebank conversion which consists in split-
ting the process in steps corresponding to
the kinds of information that have to be con-
verted, i.e. morphological, structural or re-
lational syntactic. The advantage is the gen-
eration of a set of parallel treebanks fea-
turing progressively differentiated formats.
An application to the case of an Italian
dependency-based treebank in a Penn like
format is described.
</bodyText>
<sectionHeader confidence="0.99963" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999861081081081">
The usefulness of a treebank can be potentially lim-
ited by the degree to which it subscribes to a spe-
cific linguistic theory, and when a new annotation is
devised which employs a different linguistic frame-
work than a standard, the problem of how to relate
the syntactic schemes to one another arises. The in-
creasing availability of multi-format treebanks (e.g.
(Bick, 2006)) and the automatic conversion from
some formats to others, e.g. (Collins et al, 1999;
Bahgat Shehata and Zanzotto, 2006), are attempts to
overcome this problem.
The automatic conversion of a treebank plays an
important role in NLP and linguistics. First, it in-
creases the exportability of the treebank, making us-
able tools developed for other resources. Second,
it underlies a full check on correctness and consis-
tency of the treebank annotation. Moreover, it is
an explicit comparison among formats and linguis-
tic frameworks. Therefore, a conversion is crucial
for overcoming the limits imposed by data in for-
mats that realize different grammatical theories to
very important activities such as parsing evaluation
and comparative testing of the adequateness of a rep-
resentation for particular linguistic phenomena, lan-
guages and/or tasks. For instance, the availability of
parallel annotations, and among them one in Penn
format, can be of some aid in investigating the irre-
producibility of the state-of-the-art results on tree-
banks or languages other than Penn and English,
as empirically demonstrated by, e.g., (Collins et al,
1999) on Czech, (Dubey and Keller, 2003) on Ger-
man, (Corazza et al, 2004) on Italian.
The paper, first, presents a methodology for the con-
version, then an application of the methodology to
the conversion of a dependency-based treebank into
a Penn-like format, and finally some remarks on the
implementation.
</bodyText>
<sectionHeader confidence="0.92087" genericHeader="method">
2 On the conversion methodology
</sectionHeader>
<bodyText confidence="0.993492">
The conversion of a treebank, annotated with some
format A, into format B consists in a simple filtering
</bodyText>
<page confidence="0.980585">
164
</page>
<bodyText confidence="0.994523838709677">
Proceedings of the Linguistic Annotation Workshop, pages 164–167,
Prague, June 2007. c�2007 Association for Computational Linguistics
and string manipulation only when A and B both fol-
low the same linguistic framework. Elsewhere the
conversion and development of parallel annotations
is a challenging task, which involves grammatical
rules and linguistic knowledge to be incorporated
into the converter programs (see e.g.(Musillo and
Sima’an, 2002) (Bick, 2006)). Nevertheless, par-
allel annotations which employ different linguistic
frameworks may serve as a suitable infrastructure
for comparisons among them. In fact, the defini-
tion of a conversion process is in itself a compari-
son between A and B, since it involves explicit as-
sumptions about how A and B relate, and a virtually
complete and correct mapping which translates ev-
ery analysis in A into the corresponding analysis in
B (Musillo and Sima’an, 2002).
We propose a methodology that consists in organiz-
ing the conversion in steps to be performed in cas-
cade. Each step outputs a new annotation format,
which differentiates from the previous one only with
respect to a single kind of knowledge, e.g. morpho-
logical, structural or functional syntactic. The main
advantage is in making available a set of parallel an-
notations for further use too.
In the next part, we describe the application of this
methodology to the conversion of the Turin Univer-
sity Treebank (henceforth TUT), which exploits a
dependency-based functionally rich annotation, into
a Penn-like format.
</bodyText>
<sectionHeader confidence="0.971176" genericHeader="method">
3 Converting TUT
</sectionHeader>
<bodyText confidence="0.999902928571428">
TUT is a project for an Italian treebank that fea-
tures a dependency-based annotation following the
dependency grammar major tenets (Hudson, 1984).
The annotation is centred on a notion of morpho-
syntactic-semantic grammatical relation which aims
at represent the syntax-semantics interface by means
of the Augmented Relational Structure (Bosco,
2004). TUT currently includes 2.000 sentences (see
at http://www.di.unito.it/˜tutreeb/) where 200 differ-
ent dependency relations are annotated. The figure
1 a) shows an example of TUT tree.
Other Italian resources1 implement, like TUT, par-
ticular representation formats and subscribe to spe-
cific linguistic frameworks, thus strongly limiting
</bodyText>
<footnote confidence="0.944517333333333">
1Two other larger Italian treebanks exist: Venice Italian
Treebank (VIT) (Delmonte, forthcoming) and Italian Syntactic
Semantic Treebank (ISST) (Barsotti et al, 2001)
</footnote>
<bodyText confidence="0.999864">
activities such as the application of state-of-the-art
parsers and parsing evaluation for this language.
The conversion of TUT in a Penn-like format is
a crucial step towards the exportability of the re-
source, but also a first attempt at overcoming these
limits by choosing as a further output a format of
widespread use in training, testing and evaluating.
Moreover, since the process is fully deterministic,
even if currently applied on a small corpus, the con-
version is in itself a preliminary validation of the re-
source and a demonstration that TUT annotation is
expressive at least as Penn.
In the next sections, we show the translation of de-
pendency into constituency trees and the manage-
ment of differences in PoS tagging, structural syn-
tactic, and syntactic-semantic relations faced during
the conversion. For detailed information about the
conversion of specific linguistic phenomena see at
http://www.di.unito.it/˜tutreeb/noteparallele.zip.
</bodyText>
<subsectionHeader confidence="0.990005">
3.1 First step: morphology
</subsectionHeader>
<bodyText confidence="0.999459434782609">
Since Italian is inflectionally richer than English,
TUT PoS tagset is richer than that of Penn
(see at http://www.di.unito.it/˜tutreeb/syntcat-22-7-
02.doc), but we reduced it including only infor-
mation that Penn makes explicit too, as usual
in similar cases, see e.g. (Collins et al, 1999)
and http://www.coli.uni-sb.de/sfb378/negra-corpus/.
The major differences with respect to Penn concern
tags of Verbs, which include fine-grained tempo-
ral information and are organized in three classes
(Modal, Auxiliary, Main), rather than two like in
Penn (Modal and non-Modal). Moreover, a fine-
grained variety of Adjectives and Pronouns enables
the recovery of information such as e.g. the owner
of an object (possessive Adjective).
The output of this first step includes compact tags
where features are expressed by short strings, like
in (Collins et al, 1999). The following are exam-
ples of TUT PoS native vs reduced tags: for a com-
mon Noun ’nome’ is (NOME NOUN COMMON M
SING) reduced in (NOU÷CS); for the main infinite
Verb ’entrare’ is (ENTRARE VERB MAIN INFI-
NITE PRES INTRANS) reduced in (VMA÷IN).
</bodyText>
<subsectionHeader confidence="0.99773">
3.2 Second step: structural syntax
</subsectionHeader>
<bodyText confidence="0.999949">
The main issue in this step is the conversion
of dependency trees into Penn-like trees, i.e.
</bodyText>
<page confidence="0.99851">
165
</page>
<figureCaption confidence="0.9867255">
Figure 1: TUT (a), Constituency-TUT (b), Augmented-Penn (c) and Penn-like (d) representations of sen-
tence ALB-4 ”Il governo di Berisha appare in difficolt`a” (The government of Berisha appears in trouble)
</figureCaption>
<bodyText confidence="0.99929390625">
constituency structures implementing a minimal
projection strategy. It is approached in two sub-
steps: by first converting the TUT trees into a
standard linguistically motivated Xbar form (i.e.
Constituency-TUT), and then into Penn format (i.e.
Augmented-Penn), but both including the functional
syntactic information as TUT, i.e. the grammatical
relations (annotated on constituents).
Constituency-TUT is a TUT-oriented constituency-
based annotation that introduces in TUT trees the
types of the multiple words syntactic units (e.g. VP
and S). Each terminal category X corresponds to a
word of a TUT tree, and projects into non-terminal
nodes, namely the intermediate (Xbar) and maximal
(XP) projections of X. The distinction between
complements and adjuncts is here structurally
marked.
Augmented-Penn instead features a format struc-
turally isomorphic to Penn, but more functionally
annotated. It applies to the Constituency-TUT struc-
tures the minimal projection strategy2, and manages
the smoothing of structures conceptually different in
TUT and Penn, i.e. those of Determiners, auxiliary
Verbs and relative clauses. In figure 1 you can
see the same sentence in TUT, Constituency-TUT,
Augmented-Penn and Penn format.
The conversion from dependency to constituency
is not affected by the typical problem of non-
projective structures, since TUT represents them
through projective structures exploiting null ele-
ments. In dependency TUT, empty nodes also mark
dropped subjects, and Constituency-TUT exploits
</bodyText>
<footnote confidence="0.8624785">
2Each terminal category projects only when the constituent
includes more than one word
</footnote>
<page confidence="0.997658">
166
</page>
<bodyText confidence="0.9997835">
null elements for marking subjects which occur in
non standard position with respect to the Verb (i.e.
extraposed).
than minimal projection heuristics, i.e. a category
always projects into intermediate and maximal pro-
jections.
</bodyText>
<sectionHeader confidence="0.999327" genericHeader="method">
5 Conclusions
</sectionHeader>
<subsectionHeader confidence="0.99953">
3.3 Third step: syntactic-semantic relations
</subsectionHeader>
<bodyText confidence="0.999941">
While Penn features a description of relations based
only on a single component, TUT features an ex-
plicit, systematic annotation of three components
in each relation. Moreover, Penn includes a lower
number of values for each component than TUT3
and in various cases the Penn tags do not enable fine-
grained distinctions as TUT.
We applied the original Penn tags that can be mean-
ingful for Italian looking for correspondences be-
tween TUT and Penn relations (e.g. using the re-
lation LOC for all TUT LOC+ relations)4. Never-
theless, the multi-step methodology makes available
also a Penn-like format almost functionally rich as
TUT, i.e. Augmented-Penn5.
</bodyText>
<sectionHeader confidence="0.986604" genericHeader="method">
4 The converter
</sectionHeader>
<bodyText confidence="0.999840882352941">
The five modules of the converter are: Mreduc for
the reduction of PoS tags; Mctu which converts in
the Constituency-TUT format; Maugp, which con-
verts Constituency-TUT in Augmented-Penn; Mpen,
which takes Augmented-Penn and outputs Penn;
Mpar that generates the parenthetical notation of the
output.
Mctu manages the conversion from dependency
to constituency by implementing the algorithm in
(Xia, 2001). It recovers the types of phrases that
(the grammatical category of) each node of the de-
pendency tree projects by using the linguistic knowl-
edge stored in dedicated tables.
The converter follows a lowest attachment strategy,
i.e. the projection of a dependent attaches to a pro-
jection of its head as lowly as possible, but, in con-
trast with (Xia, 2001), it pursues a maximal rather
</bodyText>
<footnote confidence="0.994621">
3While Penn annotates 2 morpho-syntactic, 11 syntactic and
7 semantic relations, TUT features 40 morpho-syntactic, 55
functional-syntactic and 88 semantic items for building rela-
tions.
4The conversion from NEGRA to Penn maintains in-
stead the NEGRA relations, see at http://www.coli.uni-
sb.de/sfb378/negra-corpus/.
5The relations linking terminal nodes encompassed in a sin-
gle constituent in Augmented-Penn are deleted during the con-
version in this latter format.
</footnote>
<bodyText confidence="0.999815333333333">
The methodology for treebank conversion here pre-
sented splits the process in steps, which correspond
to the kinds of annotated linguistic knowledge that
have to be converted. Since each step outputs a new
annotation format, the advantage is the generation of
set of parallel treebanks.
The application of the methodology in the conver-
sion from a small Italian dependency-based treebank
to a Penn like format is described.
</bodyText>
<sectionHeader confidence="0.999664" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99957464516129">
A. Bahgat Shehata and F.M. Zanzotto. 2006. A
dependency-based algorithm for grammar conversion.
Proc. of LREC ’06
F. Barsotti and R. Basili et al. 2001. The Italian
Syntactic-Semantic Treebank: Architecture, Annota-
tion, Tools and Evaluation. Kluwer, Dordrecht.
E. Bick. 2006. Turning a dependency-based treebank
into a PSG-style constituent treebank. Proc. of LREC
06.
C. Bosco. 2004. A grammatical relation system for tree-
bank annotation. PhD thesis, University of Torino.
M. Collins, J. Hajic, L. Ramshaw, and C. Tillmann. 1999.
A statistical parser of Czech. Proc. of ACL’99.
A. Corazza, A. Lavelli, G. Satta, and R. Zanoli. 2004
Analyzing an Italian treebank with state-of-the-art sta-
tistical parser. In Proc. of TLT-2004.
R. Delmonte. forthcoming. Strutture sintattiche
dall’analisi computazionale di corpora di italiano
Franco Angeli, Milano, Italy.
A. Dubey and F. Keller. 2003. Probabilistic parsing
for German using sister-head dependencies. Proc. of
ACL’03.
R. Hudson. 1984. Word Grammar. Basil Blackwell,
Oxford and New York.
G. Musillo and K. Sima’an. 2002. Towards comparing
parsers from different linguistic frameworks. An infor-
mation theoretic approach. Proc. of Workshop Beyond
PARSEUAL.
F. Xia. 2001. Automatic grammar generation from two
different perspectives. PhD thesis, University of Penn-
sylvania.
</reference>
<page confidence="0.997753">
167
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.537248">
<title confidence="0.890291">Multiple-step treebank conversion: from dependency to Penn format</title>
<author confidence="0.950287">Cristina</author>
<affiliation confidence="0.833326">Dipartimento di Informatica, Universit`a di Corso Svizzera</affiliation>
<address confidence="0.993229">10149 Torino -</address>
<email confidence="0.997097">bosco@di.unito.it</email>
<abstract confidence="0.987212333333333">Whilst the degree to which a treebank subscribes to a specific linguistic theory limits the usefulness of the resource, the availability of more formats for the same resource plays a crucial role both in NLP and linguistics. Conversion tools and multi-format treebanks are useful for investigating portability of NLP systems and validity of annotation. Unfortunately, conversion is a quite complex task since it involves grammatical rules and linguistic knowledge to be incorporated into the converter program. The paper focusses on a methodology for treebank conversion which consists in splitting the process in steps corresponding to the kinds of information that have to be converted, i.e. morphological, structural or relational syntactic. The advantage is the generation of a set of parallel treebanks featuring progressively differentiated formats. An application to the case of an Italian dependency-based treebank in a Penn like format is described.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A Bahgat Shehata</author>
<author>F M Zanzotto</author>
</authors>
<title>A dependency-based algorithm for grammar conversion.</title>
<date>2006</date>
<booktitle>Proc. of LREC ’06</booktitle>
<contexts>
<context position="1668" citStr="Shehata and Zanzotto, 2006" startWordPosition="256" endWordPosition="259">iated formats. An application to the case of an Italian dependency-based treebank in a Penn like format is described. 1 Introduction The usefulness of a treebank can be potentially limited by the degree to which it subscribes to a specific linguistic theory, and when a new annotation is devised which employs a different linguistic framework than a standard, the problem of how to relate the syntactic schemes to one another arises. The increasing availability of multi-format treebanks (e.g. (Bick, 2006)) and the automatic conversion from some formats to others, e.g. (Collins et al, 1999; Bahgat Shehata and Zanzotto, 2006), are attempts to overcome this problem. The automatic conversion of a treebank plays an important role in NLP and linguistics. First, it increases the exportability of the treebank, making usable tools developed for other resources. Second, it underlies a full check on correctness and consistency of the treebank annotation. Moreover, it is an explicit comparison among formats and linguistic frameworks. Therefore, a conversion is crucial for overcoming the limits imposed by data in formats that realize different grammatical theories to very important activities such as parsing evaluation and c</context>
</contexts>
<marker>Shehata, Zanzotto, 2006</marker>
<rawString>A. Bahgat Shehata and F.M. Zanzotto. 2006. A dependency-based algorithm for grammar conversion. Proc. of LREC ’06</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Barsotti</author>
<author>R Basili</author>
</authors>
<title>The Italian Syntactic-Semantic Treebank: Architecture, Annotation, Tools and Evaluation.</title>
<date>2001</date>
<publisher>Kluwer,</publisher>
<location>Dordrecht.</location>
<marker>Barsotti, Basili, 2001</marker>
<rawString>F. Barsotti and R. Basili et al. 2001. The Italian Syntactic-Semantic Treebank: Architecture, Annotation, Tools and Evaluation. Kluwer, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Bick</author>
</authors>
<title>Turning a dependency-based treebank into a PSG-style constituent treebank.</title>
<date>2006</date>
<booktitle>Proc. of LREC 06.</booktitle>
<contexts>
<context position="1547" citStr="Bick, 2006" startWordPosition="239" endWordPosition="240">ntactic. The advantage is the generation of a set of parallel treebanks featuring progressively differentiated formats. An application to the case of an Italian dependency-based treebank in a Penn like format is described. 1 Introduction The usefulness of a treebank can be potentially limited by the degree to which it subscribes to a specific linguistic theory, and when a new annotation is devised which employs a different linguistic framework than a standard, the problem of how to relate the syntactic schemes to one another arises. The increasing availability of multi-format treebanks (e.g. (Bick, 2006)) and the automatic conversion from some formats to others, e.g. (Collins et al, 1999; Bahgat Shehata and Zanzotto, 2006), are attempts to overcome this problem. The automatic conversion of a treebank plays an important role in NLP and linguistics. First, it increases the exportability of the treebank, making usable tools developed for other resources. Second, it underlies a full check on correctness and consistency of the treebank annotation. Moreover, it is an explicit comparison among formats and linguistic frameworks. Therefore, a conversion is crucial for overcoming the limits imposed by </context>
<context position="3588" citStr="Bick, 2006" startWordPosition="552" endWordPosition="553">ntation. 2 On the conversion methodology The conversion of a treebank, annotated with some format A, into format B consists in a simple filtering 164 Proceedings of the Linguistic Annotation Workshop, pages 164–167, Prague, June 2007. c�2007 Association for Computational Linguistics and string manipulation only when A and B both follow the same linguistic framework. Elsewhere the conversion and development of parallel annotations is a challenging task, which involves grammatical rules and linguistic knowledge to be incorporated into the converter programs (see e.g.(Musillo and Sima’an, 2002) (Bick, 2006)). Nevertheless, parallel annotations which employ different linguistic frameworks may serve as a suitable infrastructure for comparisons among them. In fact, the definition of a conversion process is in itself a comparison between A and B, since it involves explicit assumptions about how A and B relate, and a virtually complete and correct mapping which translates every analysis in A into the corresponding analysis in B (Musillo and Sima’an, 2002). We propose a methodology that consists in organizing the conversion in steps to be performed in cascade. Each step outputs a new annotation format</context>
</contexts>
<marker>Bick, 2006</marker>
<rawString>E. Bick. 2006. Turning a dependency-based treebank into a PSG-style constituent treebank. Proc. of LREC 06.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Bosco</author>
</authors>
<title>A grammatical relation system for treebank annotation.</title>
<date>2004</date>
<tech>PhD thesis,</tech>
<institution>University of Torino.</institution>
<contexts>
<context position="5021" citStr="Bosco, 2004" startWordPosition="777" endWordPosition="778"> for further use too. In the next part, we describe the application of this methodology to the conversion of the Turin University Treebank (henceforth TUT), which exploits a dependency-based functionally rich annotation, into a Penn-like format. 3 Converting TUT TUT is a project for an Italian treebank that features a dependency-based annotation following the dependency grammar major tenets (Hudson, 1984). The annotation is centred on a notion of morphosyntactic-semantic grammatical relation which aims at represent the syntax-semantics interface by means of the Augmented Relational Structure (Bosco, 2004). TUT currently includes 2.000 sentences (see at http://www.di.unito.it/˜tutreeb/) where 200 different dependency relations are annotated. The figure 1 a) shows an example of TUT tree. Other Italian resources1 implement, like TUT, particular representation formats and subscribe to specific linguistic frameworks, thus strongly limiting 1Two other larger Italian treebanks exist: Venice Italian Treebank (VIT) (Delmonte, forthcoming) and Italian Syntactic Semantic Treebank (ISST) (Barsotti et al, 2001) activities such as the application of state-of-the-art parsers and parsing evaluation for this l</context>
</contexts>
<marker>Bosco, 2004</marker>
<rawString>C. Bosco. 2004. A grammatical relation system for treebank annotation. PhD thesis, University of Torino.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Collins</author>
<author>J Hajic</author>
<author>L Ramshaw</author>
<author>C Tillmann</author>
</authors>
<title>A statistical parser of Czech.</title>
<date>1999</date>
<booktitle>Proc. of ACL’99.</booktitle>
<contexts>
<context position="1632" citStr="Collins et al, 1999" startWordPosition="251" endWordPosition="254">ring progressively differentiated formats. An application to the case of an Italian dependency-based treebank in a Penn like format is described. 1 Introduction The usefulness of a treebank can be potentially limited by the degree to which it subscribes to a specific linguistic theory, and when a new annotation is devised which employs a different linguistic framework than a standard, the problem of how to relate the syntactic schemes to one another arises. The increasing availability of multi-format treebanks (e.g. (Bick, 2006)) and the automatic conversion from some formats to others, e.g. (Collins et al, 1999; Bahgat Shehata and Zanzotto, 2006), are attempts to overcome this problem. The automatic conversion of a treebank plays an important role in NLP and linguistics. First, it increases the exportability of the treebank, making usable tools developed for other resources. Second, it underlies a full check on correctness and consistency of the treebank annotation. Moreover, it is an explicit comparison among formats and linguistic frameworks. Therefore, a conversion is crucial for overcoming the limits imposed by data in formats that realize different grammatical theories to very important activit</context>
<context position="6794" citStr="Collins et al, 1999" startWordPosition="1035" endWordPosition="1038">ndency into constituency trees and the management of differences in PoS tagging, structural syntactic, and syntactic-semantic relations faced during the conversion. For detailed information about the conversion of specific linguistic phenomena see at http://www.di.unito.it/˜tutreeb/noteparallele.zip. 3.1 First step: morphology Since Italian is inflectionally richer than English, TUT PoS tagset is richer than that of Penn (see at http://www.di.unito.it/˜tutreeb/syntcat-22-7- 02.doc), but we reduced it including only information that Penn makes explicit too, as usual in similar cases, see e.g. (Collins et al, 1999) and http://www.coli.uni-sb.de/sfb378/negra-corpus/. The major differences with respect to Penn concern tags of Verbs, which include fine-grained temporal information and are organized in three classes (Modal, Auxiliary, Main), rather than two like in Penn (Modal and non-Modal). Moreover, a finegrained variety of Adjectives and Pronouns enables the recovery of information such as e.g. the owner of an object (possessive Adjective). The output of this first step includes compact tags where features are expressed by short strings, like in (Collins et al, 1999). The following are examples of TUT P</context>
</contexts>
<marker>Collins, Hajic, Ramshaw, Tillmann, 1999</marker>
<rawString>M. Collins, J. Hajic, L. Ramshaw, and C. Tillmann. 1999. A statistical parser of Czech. Proc. of ACL’99.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Corazza</author>
<author>A Lavelli</author>
<author>G Satta</author>
<author>R Zanoli</author>
</authors>
<title>Analyzing an Italian treebank with state-of-the-art statistical parser.</title>
<date>2004</date>
<booktitle>In Proc. of TLT-2004.</booktitle>
<contexts>
<context position="2751" citStr="Corazza et al, 2004" startWordPosition="426" endWordPosition="429">mits imposed by data in formats that realize different grammatical theories to very important activities such as parsing evaluation and comparative testing of the adequateness of a representation for particular linguistic phenomena, languages and/or tasks. For instance, the availability of parallel annotations, and among them one in Penn format, can be of some aid in investigating the irreproducibility of the state-of-the-art results on treebanks or languages other than Penn and English, as empirically demonstrated by, e.g., (Collins et al, 1999) on Czech, (Dubey and Keller, 2003) on German, (Corazza et al, 2004) on Italian. The paper, first, presents a methodology for the conversion, then an application of the methodology to the conversion of a dependency-based treebank into a Penn-like format, and finally some remarks on the implementation. 2 On the conversion methodology The conversion of a treebank, annotated with some format A, into format B consists in a simple filtering 164 Proceedings of the Linguistic Annotation Workshop, pages 164–167, Prague, June 2007. c�2007 Association for Computational Linguistics and string manipulation only when A and B both follow the same linguistic framework. Elsew</context>
</contexts>
<marker>Corazza, Lavelli, Satta, Zanoli, 2004</marker>
<rawString>A. Corazza, A. Lavelli, G. Satta, and R. Zanoli. 2004 Analyzing an Italian treebank with state-of-the-art statistical parser. In Proc. of TLT-2004.</rawString>
</citation>
<citation valid="false">
<authors>
<author>forthcoming</author>
</authors>
<title>Strutture sintattiche dall’analisi computazionale di corpora di italiano Franco Angeli,</title>
<location>Milano, Italy.</location>
<marker>forthcoming, </marker>
<rawString>R. Delmonte. forthcoming. Strutture sintattiche dall’analisi computazionale di corpora di italiano Franco Angeli, Milano, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Dubey</author>
<author>F Keller</author>
</authors>
<title>Probabilistic parsing for German using sister-head dependencies.</title>
<date>2003</date>
<booktitle>Proc. of ACL’03.</booktitle>
<contexts>
<context position="2718" citStr="Dubey and Keller, 2003" startWordPosition="419" endWordPosition="422">ion is crucial for overcoming the limits imposed by data in formats that realize different grammatical theories to very important activities such as parsing evaluation and comparative testing of the adequateness of a representation for particular linguistic phenomena, languages and/or tasks. For instance, the availability of parallel annotations, and among them one in Penn format, can be of some aid in investigating the irreproducibility of the state-of-the-art results on treebanks or languages other than Penn and English, as empirically demonstrated by, e.g., (Collins et al, 1999) on Czech, (Dubey and Keller, 2003) on German, (Corazza et al, 2004) on Italian. The paper, first, presents a methodology for the conversion, then an application of the methodology to the conversion of a dependency-based treebank into a Penn-like format, and finally some remarks on the implementation. 2 On the conversion methodology The conversion of a treebank, annotated with some format A, into format B consists in a simple filtering 164 Proceedings of the Linguistic Annotation Workshop, pages 164–167, Prague, June 2007. c�2007 Association for Computational Linguistics and string manipulation only when A and B both follow the</context>
</contexts>
<marker>Dubey, Keller, 2003</marker>
<rawString>A. Dubey and F. Keller. 2003. Probabilistic parsing for German using sister-head dependencies. Proc. of ACL’03.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Hudson</author>
</authors>
<title>Word Grammar. Basil Blackwell,</title>
<date>1984</date>
<location>Oxford and New York.</location>
<contexts>
<context position="4817" citStr="Hudson, 1984" startWordPosition="749" endWordPosition="750">tiates from the previous one only with respect to a single kind of knowledge, e.g. morphological, structural or functional syntactic. The main advantage is in making available a set of parallel annotations for further use too. In the next part, we describe the application of this methodology to the conversion of the Turin University Treebank (henceforth TUT), which exploits a dependency-based functionally rich annotation, into a Penn-like format. 3 Converting TUT TUT is a project for an Italian treebank that features a dependency-based annotation following the dependency grammar major tenets (Hudson, 1984). The annotation is centred on a notion of morphosyntactic-semantic grammatical relation which aims at represent the syntax-semantics interface by means of the Augmented Relational Structure (Bosco, 2004). TUT currently includes 2.000 sentences (see at http://www.di.unito.it/˜tutreeb/) where 200 different dependency relations are annotated. The figure 1 a) shows an example of TUT tree. Other Italian resources1 implement, like TUT, particular representation formats and subscribe to specific linguistic frameworks, thus strongly limiting 1Two other larger Italian treebanks exist: Venice Italian T</context>
</contexts>
<marker>Hudson, 1984</marker>
<rawString>R. Hudson. 1984. Word Grammar. Basil Blackwell, Oxford and New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Musillo</author>
<author>K Sima’an</author>
</authors>
<title>Towards comparing parsers from different linguistic frameworks. An information theoretic approach.</title>
<date>2002</date>
<booktitle>Proc. of Workshop Beyond PARSEUAL.</booktitle>
<marker>Musillo, Sima’an, 2002</marker>
<rawString>G. Musillo and K. Sima’an. 2002. Towards comparing parsers from different linguistic frameworks. An information theoretic approach. Proc. of Workshop Beyond PARSEUAL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Xia</author>
</authors>
<title>Automatic grammar generation from two different perspectives.</title>
<date>2001</date>
<tech>PhD thesis,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="10888" citStr="Xia, 2001" startWordPosition="1652" endWordPosition="1653"> using the relation LOC for all TUT LOC+ relations)4. Nevertheless, the multi-step methodology makes available also a Penn-like format almost functionally rich as TUT, i.e. Augmented-Penn5. 4 The converter The five modules of the converter are: Mreduc for the reduction of PoS tags; Mctu which converts in the Constituency-TUT format; Maugp, which converts Constituency-TUT in Augmented-Penn; Mpen, which takes Augmented-Penn and outputs Penn; Mpar that generates the parenthetical notation of the output. Mctu manages the conversion from dependency to constituency by implementing the algorithm in (Xia, 2001). It recovers the types of phrases that (the grammatical category of) each node of the dependency tree projects by using the linguistic knowledge stored in dedicated tables. The converter follows a lowest attachment strategy, i.e. the projection of a dependent attaches to a projection of its head as lowly as possible, but, in contrast with (Xia, 2001), it pursues a maximal rather 3While Penn annotates 2 morpho-syntactic, 11 syntactic and 7 semantic relations, TUT features 40 morpho-syntactic, 55 functional-syntactic and 88 semantic items for building relations. 4The conversion from NEGRA to Pe</context>
</contexts>
<marker>Xia, 2001</marker>
<rawString>F. Xia. 2001. Automatic grammar generation from two different perspectives. PhD thesis, University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>