<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.004493">
<title confidence="0.9918935">
An intelligent authoring environment for abstract semantic
representations of cultural object descriptions
</title>
<author confidence="0.806274">
Stasinos Konstantopoulos and Vangelis Karkaletsis and Dimitris Bilidas
</author>
<affiliation confidence="0.775524">
Institute of Informatics &amp; Telecommunications
</affiliation>
<address confidence="0.476783">
NCSR ‘Demokritos’, Greece
</address>
<email confidence="0.99789">
{konstant,vangelis,dbilid}@iit.demokritos.gr
</email>
<sectionHeader confidence="0.997397" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999460045454545">
In this paper we describe an authoring
environment for the creation of cultural-
domain ontologies and the associated lin-
guistic and profile annotations, for dy-
namically generating adaptable natural-
language descriptions of the cultural ob-
jects in the ontology. Adaptation is
achieved at the expense of considerable
authoring effort, since it relies on pro-
viding numerical parameters for each on-
tological entity. To assist the authoring
process, we provide an intelligent author-
ing back-end that completes manually au-
thored models by inferring missing values.
This intelligent authoring support facility,
combined with immediate previews, can
considerably reduce the effort required to
create a fully functional model as the au-
thor can iterate through cycles of provid-
ing information, previewing the generated
text, and only elaborating the model where
the text is unsatisfactory.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9998648">
Cultural heritage organizations create and main-
tain repositories of (digital representations of) arti-
facts, including extensive semantic knowledge and
meta-data about the cultural objects in the collec-
tion. Such semantic repositories are typically seen
as an opportunity to catalogue, index, and classify
the cultural content, for the purpose of providing
semantic searching and browsing facilities to pro-
fessional users as well as to the general public.
In this article we discuss another unique op-
portunity that cultural heritage repositories offer:
the opportunity to automatically generate adapt-
able and customizable textual descriptions of the
cultural objects for a variety of audiences and pur-
poses.
More specifically, we present ELEON, an au-
thoring environment for creating abstract concep-
tual representations of cultural heritage object de-
scriptions, as well as the linguistic and profil-
ing models necessary to realize those into con-
crete natural-language descriptions exploiting nat-
ural language generation technology. The advan-
tages of this approach, as opposed to directly au-
thoring natural language descriptions, are mani-
fold:
</bodyText>
<listItem confidence="0.965707894736842">
• Abstract descriptions constitute machine-
readable and reusable models of the cultural
heritage collection. Besides deriving natural
language descriptions, such models can be
used for the semantic indexing and search-
ing of the collection. This can also be seen
from the reverse perspective: the natural lan-
guage descriptions can be derived from ex-
isting conceptual models created for the pur-
pose of semantic indexing and searching.
• The conceptual descriptions are realized us-
ing domain-independent, reusable linguistic
models. By clearly separating the conceptual
and linguistic models, the same conceptual
descriptions can be realized in different lan-
guages and the same linguistic models can be
used to realize descriptions of different col-
lections.
• The dynamic generation of the description
</listItem>
<bodyText confidence="0.851103555555556">
is driven by profiles that personalize the de-
scriptions for different audiences, but also
adapt them to different contexts and situa-
tions.
ELEON provides great flexibility in finely
parametrizing how the generated descriptions are
adapted to different audiences and situations. Fur-
thermore, the authoring environment is backed by
Artificial Intelligence tools that assist the author
</bodyText>
<note confidence="0.951948333333333">
Proceedings of the EACL 2009 Workshop on Language Technology and Resources for Cultural Heritage,
Social Sciences, Humanities, and Education –LaTeCH – SHELT&amp;R 2009, pages 10–17,
Athens, Greece, 30 March 2009. c�2009 Association for Computational Linguistics
</note>
<page confidence="0.998007">
10
</page>
<bodyText confidence="0.999970043478261">
by automatically inferring missing profile param-
eters, alleviating the burden of explicitly providing
all necessary details for large numbers of objects.
Although the system can be used in a variety of
domains and Human-Computer interaction appli-
cations, it is particularly pertinent to cultural her-
itage content, which is interesting for wide ranges
of age groups, levels of expertise, cultural and edu-
cational backgrounds, situations and contexts, em-
phasising the need for personalized and custom-
tailored text.
In the rest of this article we first set the back-
ground by describing the authoring environment
and particularly the way in which it can be used to
create the conceptual model of the collection and
populate it with data (Section 2) and then proceed
to to describe how adaptation parameters are rep-
resented and used by human-computer interaction
systems (Section 3). We then focus on the main
contribution of this paper by describing the intel-
ligence mechanism behind the environment (Sec-
tion 4), discuss related work (Section 5), and con-
clude (Section 6).
</bodyText>
<sectionHeader confidence="0.848265" genericHeader="method">
2 Authoring Domain Ontologies
</sectionHeader>
<bodyText confidence="0.998688416666667">
ELEON enables its authors—i.e., persons that have
domain expertise but no technological expertise—
to create a new application domain, defining the
ontology of the new domain, as well as the cor-
responding language resources and the profiling
models. All these elements are used by a natu-
ral language generation (NLG) engine in order to
derive natural language descriptions from the con-
ceptual representations in the ontology. The envi-
ronment also enables authors to generate text pre-
views using the NLG engine in order to examine
the effect of their updates to the domain ontology,
the language resources and the profiling parame-
ters.
Concerning the language resources, these affect
the content and the surface form of the derived
texts, leading to more varied texts and contain en-
tries for nouns and verbs for each supported lan-
guage. With regard to the profiling parameters,
these are used by ELEON to adapt the generated
descriptions to the users’ preferences and knowl-
edge.
ELEON ontologies encode domain knowledge in
the form of concepts, instances of concepts, (en-
tity types and entities respectively in ELEON ter-
minology), and relations between concepts and in-
stances.
Figure 1 illustrates part of such an ontology
that encodes knowledge about the ancient Agora
of Athens. This ontology is used in the INDIGO
project,1 implementing a use case where the sys-
tem guides visitors through an exhibition on the
ancient Agora of Athens, introducing the build-
ings to them before they attend a virtual 3D tour
of the Agora hosted at the Foundation of the Hel-
lenic World. The examples used in this paper are
drawn from this domain.
In the example of Figure 1, ‘stoa-of-attalus’,
is an instance of the entity type Stoa, a sub-
type of Building which is a sub-type of Archi-
tecturalConstruction, a sub-type of PhysicalOb-
ject. Properties and relationships are expressed
using fields. For any entity type, it is possible
to introduce new fields which then become avail-
able to all the entities that belong to that type and
its subtypes. In Figure 1, the field locatedIn is
introduced at the ArchitecturalConstruction en-
tity type and is defined as a relationship between
ArchitecturalConstruction and Place, while the
using-period field defines a property of the Phys-
icalObject entity type. Consequently, all enti-
ties of type PhysicalObject and its subtypes, i.e.
ArchitecturalConstruction and ArtObject inherit
these fields. Furthermore, all the instances of these
entity types and their subtypes also inherit these
fields.
The proposed system expresses such ontologi-
cal conceptual models in OWL [11], an ontology
representation language that is one of the core se-
mantic web technologies. OWL models can be
created from scratch in the authoring tool or im-
ported, facilitating the use of well-established con-
ceptual models in the cultural heritage domain, as
almost all can be (or already are) expressed as on-
tologies. The CIDOC conceptual reference model,
for example, also provides an official OWL ver-
sion.2 Most other cultural heritage vocabularies,
thesauri, and classification schemes using XML
or relational database data models are consistent
with the Simple Knowledge Organization System
(SKOS) and can be automatically converted to on-
tologies.3
</bodyText>
<footnote confidence="0.984888285714286">
1See http://www.ics.forth.gr/indigo/ and
Acknowledgements section.
2http://cidoc.ics.forth.gr/official_
release_cidoc.html
3See http://www.w3.org/2004/02/skos/
about SKOS. A variety of tools exist for con-
verting SKOS data models to, or aligning with,
</footnote>
<page confidence="0.998712">
11
</page>
<figureCaption confidence="0.994095">
Figure 1: ELEON screen, showing the class hi-
</figureCaption>
<bodyText confidence="0.9845935">
erarchy and the individuals of each class (left),
the properties of the currently selected individual
(right top), and a preview of the description of the
individual (right bottom). The preview language
and profile can be seen on (and selected from) the
bar at the bottom of the screen.
</bodyText>
<sectionHeader confidence="0.988939" genericHeader="method">
3 Description Adaptation
</sectionHeader>
<bodyText confidence="0.999915730769231">
Besides modelling the cultural heritage domain
itself, ELEON supports annotating the objects,
classes, and properties of the domain with adapta-
tion and linguistic information. Such information
is used by NLG engines to (a) plan the descrip-
tion that will be generated, adapting it to the cur-
rent audience and circumstance, and (b) realize the
planned description in a particular language.
Realization is based on clause plans (micro-
plans) that specify how an ontological property
can be expressed in each supported natural lan-
guage. The author specifies the clause to be gen-
erated in abstract terms, by specifying, for ex-
ample, the verb to be used, the voice and tense
of the resulting clause, etc. Similar annota-
tions for instances and classes specify how they
should be realized as noun phrases that fill slots
in the property-generated clauses. Micro-plan an-
notations also comprise several other language-
specific parameters, such as whether the resulting
clause can be aggregated into a longer sentence or
not, its voice and tense, and so on, as described in
more detail by Androutsopoulos et al. [1], Sect. 3.
Adaptive planning, on the other hand, operates
at the abstract level and does not involve specifics
of the target language. It is rather aimed at re-
</bodyText>
<footnote confidence="0.908739666666667">
ontological models. See, for example, http:
//www.heppnetz.de/projects/skos2gentax/
and http://annocultor.sourceforge.net/
</footnote>
<bodyText confidence="0.999950857142857">
flecting a synthetic personality in the description,
as well as personalizing it for a particular audi-
ence. Adaptation parameters are provided in the
form of profile attributes that control aspects of the
text plan such as how many and which of the facts
known about an object should be used to describe
it, as discussed in more detail below.
</bodyText>
<subsectionHeader confidence="0.999354">
3.1 Personalization and personality
</subsectionHeader>
<bodyText confidence="0.9994968125">
The system supports authoring the adaptation pro-
files that control the dynamic adaptation of the
generated descriptions. Profiles permit the au-
thor to specify, for example, that technical vocab-
ulary be used when generating for experts, or that
shorter and simpler sentences are generated for
children. This is achieved by providing a variety
of generation parameters though user profiles, in-
cluding a numerical interest attribute of the prop-
erties of the ontology.
Isard et al. [7] describe how interest is used to
impose a preference ordering of the properties of
ontological entities, controlling which facts will be
used when describing each entity. In the work de-
scribed here, we have extended profiles in two re-
spects:
</bodyText>
<listItem confidence="0.9706218">
• by generalizing interest into arbitrary, author-
defined profile attributes; and
• by permitting profile attributes to apply not
only to ontological properties, but also to in-
dividuals and classes.
</listItem>
<bodyText confidence="0.99976835">
Using these extensions, authors can define person-
ality profiles for generating text, managing dia-
logue, and simulating emotional variation in a way
that reflects a certain personality on behalf of the
system.
In the INDIGO project we use these profiles
in a human-robot interaction application, where
a robotic tour guide that gives the impression of
empathizing with the visitor is perceived as more
natural and user-friendly. But the methodology
is generally interesting in any context of generat-
ing descriptions of cultural heritage content, es-
pecially if the individual descriptions are aggre-
gated in a tour of the collection. In such contexts,
dialogue-management adaptivity can vary the ex-
hibits included in personalized tours and emo-
tional state variation can match the described con-
tent and make the tour more engaging and lively.
The way in which personality profiles are used
to parametrize dialogue management and simu-
</bodyText>
<page confidence="0.993065">
12
</page>
<bodyText confidence="0.999986117647059">
lated emotions are discussed in more detail else-
where [9], so we shall only briefly outline it
here. Emotional variation is achieved by using the
personality profile to estimate the emotional ap-
praisal of dialogue acts and update the mood and
emotional state of artificial agents. Dialogue man-
agement is affected both directly, by taking exhibit
preference into account when deliberating over di-
alogue acts, and indirectly, by being influenced by
the artificial agent’s current mood; and, as already
mentioned above, NLG is adapted by using prop-
erty preference to plan a description
In the Konstantopoulos et al. [9] model, prefer-
ence is calculated based on a logic model of the
robot’s personality traits and also on ground facts
regarding objective attributes of the content—such
as the importance of an exhibit—but also subjec-
tive attributes that reflect the robot’s perception of
the content—such as how interesting an exhibit is.
With the work described here, we alleviate the bur-
den of manually providing all the ground param-
eters, exploiting the fact that these parameters are
strongly inter-related and can, to a large extend, be
automatically inferred. More specifically, ELEON
backs the profile authoring process by reasoning
over manually provided exhibit attributes in order
to infer what the values of the missing attributes
should be. The author can inspect the explicitly
provided as well as the automatically inferred val-
ues and make corrections where necessary (Fig-
ure 2). Manual corrections trigger a re-estimation
of the missing values, so that after each round of
corrections the overall model is a closer approxi-
mation of the author’s intention.
</bodyText>
<subsectionHeader confidence="0.999173">
3.2 Representation and interoperability
</subsectionHeader>
<bodyText confidence="0.974154967741935">
Linguistic and profile annotations are represented
in RDF, the Resource Description Framework
(RDF) [5]. RDF is a knowledge representa-
tion technology built around the concept of us-
ing subject-predicate-object triples to describe ab-
stract entities, resources. RDF triples assign to
their subject resource the property of being related
to the object through the predicate resource. Pred-
icates can be data properties, in which case their
objects are concrete values (numbers, strings, time
periods, and so on), or object properties, in which
case their objects are abstract resources.
Although OWL is not formally defined in RDF,
it is defined in such a way that it can be repre-
sented within RDF. In fact, the OWL specification
Figure 2: Screen fragment, showing the pop-up
window for providing profile attribute values for
an exhibit. Automatically inferred attribute values
are displayed in red, to stand out from explicitly
provided ones which are displayed in black.
itself provides a serialization of OWL ontologies
as RDF for transport and data interchange pur-
poses. Since ELEON uses this OWL/RDF repre-
sentation for the domain ontology, linguistic and
profile annotations can be directly represented as
RDF triples of extra-ontological properties of the
ontological instances.
The RDF vocabulary used defines a prop-
erty that relates ontological entities (individuals,
classes, and properties) with profile attribute nodes
that involve:
</bodyText>
<listItem confidence="0.995092">
• the profile to which they are pertinent, e.g.,
‘expert’;
• the attribute, e.g., ‘interest’ or ‘importance’;
and
• the numerical value of the attribute for this
entity in this profile.
</listItem>
<bodyText confidence="0.999836083333333">
When applied to ontology properties, profile at-
tribute nodes can be further elaborated to apply
only to properties of instances of a particular class.
For example, one can express that users find it
more interesting to know the architectural style
when discussing temples than when discussing
stoas.
Using RDF is motivated by the usage of OWL
to represent the domain ontology as well as the
availability of natural language generation (NLG)
engines that support it. More specifically, as al-
ready discussed, OWL ontologies and RDF anno-
</bodyText>
<page confidence="0.995633">
13
</page>
<bodyText confidence="0.9997283">
tations can be easily merged in a combined model
since OWL ontologies can be expressed in RDF.
An alternative approach would have been to in-
corporate profile attributes in the OWL ontology.
Since profile attributes refer to classes and proper-
ties as well as individuals, profile attributes would,
then, have to be interpreted as second-order on-
tological properties. Although second-order con-
structs can be represented in OWL-Full (the most
expressive ‘dialect’ of OWL), logical inference
over OWL-Full ontologies is a challenging and
computationally inefficient task. In fact, second-
order inference is only supported by research pro-
totypes and only for restricted fragments, often
excluding binary second-order predicates (second-
order properties).
By contrast, the chosen approach restricts
the ontology within the computationally efficient
OWL-DL dialect, for which multiple stable and
highly optimized inference engines have been de-
veloped. Profile attributes are provided as extra-
ontological properties, without tying them to a
particular logical interpretation. We shall revisit
this point in the following section.
The second motivating factor behind RDF pro-
file attributes is interoperability with NLG en-
gines. The RDF vocabulary used to assign linguis-
tic and profile attributes is understood by the NAT-
URALOWL [6] and METHODIUS [10] generation
engines (Figure 3).
</bodyText>
<sectionHeader confidence="0.997803" genericHeader="method">
4 Intelligent Authoring Support
</sectionHeader>
<bodyText confidence="0.998897315789474">
We have previously discussed how profile at-
tributes were not directly incorporated in the do-
main ontology as second-order statements, but are
rather represented as extra-logical RDF annota-
tions. While avoiding forcing a second-order in-
terpretation of profile attributes is a definite ad-
vantage from a computational-complexity point of
view, this choice leaves profile attributes outside
the scope of OWL reasoning tools.
In order to be able to efficiently reason over and
draw inferences about profile attributes, we have
chosen to interpret profile attributes within many-
valued description logics. Using description log-
ics has the advantage of direct access to the do-
main ontology; using many-valued valuations has
the advantage of providing a means to represent
and reason over numerical values.
This section describes this interpretation and
how it is used, after first introducing description
</bodyText>
<figureCaption confidence="0.843037666666667">
Figure 3: System architecture showing the inter-
facing with NLG and Inference engines
logics and many-valued valuations.
</figureCaption>
<subsectionHeader confidence="0.999085">
4.1 Integrating reasoning in ELEON
</subsectionHeader>
<bodyText confidence="0.999970476190476">
ELEON specifies a Java interface through which
inference results can be requested and retrieved:
OWL domain models and RDF profile annotations
are passed to an inference engine, which responds
with the numerical values of profile attributes for
all ontological entities in the domain (individuals,
classes, and properties).
ELEON also extends and uses the TransOnto se-
mantic knowledge migration system4 to perform
all the necessary transformations for using many-
valued DL reasoners, i.e., transforming the OWL
and RDF models into many-valued DL assertions,
as well as transforming logical query answers into
the numerical profile-attribute values.
Furthermore, as depicted in Figure 3, the im-
plementation includes the necessary API calls for
using either of two many-valued DL reasoners,
YADLR [8] or FUZZYDL [4]. Support for alter-
native many-valued DL reasoners can be easily
added, by using such reasoners to implement the
reasoning API expected by the authoring system.
</bodyText>
<subsectionHeader confidence="0.988426">
4.2 Many-valued DL Reasoning
</subsectionHeader>
<bodyText confidence="0.998500428571429">
Description Logics (DL) [2] are a family of first-
order logics; their main characteristic is decidabil-
ity, attained by being restricted to concepts (unary
predicates, sets of individuals) and relations (bi-
nary predicates, sets of pairs of individuals). Of
particular importance is the DL called SROZN,
which covers OWL-DL.
</bodyText>
<footnote confidence="0.862642">
4Seehttp://transonto.sourceforge.net/
</footnote>
<page confidence="0.998935">
14
</page>
<bodyText confidence="0.999936228571428">
DL statements, concept descriptions, use logi-
cal connectives to define concepts by combining
(a) other concepts, and (b) relation constructs that
describe the set of individuals that have a certain
relation with a certain set of fillers (relation ob-
jects). Relation descriptions are not supported,
and membership in a relation can only be ex-
plicitly asserted, except for a limited set of rela-
tion axioms such as inversion, subordination, and
transitivity. Most DL reasoners also provide lim-
ited support for reasoning over concrete domains
(numbers, strings, etc.) through data properties
that relate abstract individual subjects with con-
crete value objects.
Many-valued logics in general, and conse-
quently many-valued DLs, extend the binary true-
false valuations of logical formulae into many-
valued numerical valuations, denoting the degree
to which formulae hold. Such many-valued mod-
els receive their semantics not from set theory, as
is the case with binary valuations, but from al-
gebraic norms that assign semantics to the logi-
cal connectives. These norms are used to calcu-
late the degree at which complex logical proposi-
tions hold, given the degrees of their constituent
elementary propositions.
In the work described here we use
Łukasziewicz-Tarski algebra to provide many-
valued semantics [9, Sect. 3]. Although there is
nothing in ELEON itself that forces this choice,
Łukasiewicz-Tarski algebra is well-suited to
inferring profile attribute values, as it is founded
on neither probability nor uncertainty, which
would be inappropriate in our case, but on the
notion of relevance.
</bodyText>
<subsectionHeader confidence="0.999708">
4.3 Inferring missing attribute values
</subsectionHeader>
<bodyText confidence="0.9999165">
Profile attributes of individuals are captured by
normalizing in the [0, 1] range and then using the
normalized value as a class membership degree.
So, for example, if interesting is such an at-
tribute of individual exhibits, then an exhibit with
a (normalized) interest level of 0.7 is an instance
of the Interesting class at a degree of 0.7.
Attributes of classes are reduced to attributes of
the members of the class, expressed by a class sub-
sumption assertion at the degree of the attribute.
So, if the class of stoas is interesting at a degree
of 0.6, this is expressed by asserting that being a
member of Stoa implies being a member of Inter-
esting. The implication is asserted at a degree of
</bodyText>
<table confidence="0.869713">
Ontology Interesting
Instance membership
Doric style 0.8
Ionic style 0.7
Pergamene style 0.3
Attalus 0.9
</table>
<tableCaption confidence="0.997243">
Table 1: Profile fragment.
</tableCaption>
<table confidence="0.9153396">
Resource Property Value
Stoa of Attalus style Doric
Stoa of Attalus style Ionic
Stoa of Attalus style Pergamene
Stoa of Attalus orderedBy Attalus
</table>
<tableCaption confidence="0.773814">
Table 2: Ontology fragment, showing the proper-
ties of the ‘Stoa of Attalus’ instance.
</tableCaption>
<bodyText confidence="0.999925606060606">
0.6, which, under Łukasiewicz-Tarski semantics,
means that being a stoa implies being interesting
at a loss of 0.4 of a degree. Thus individuals that
are members of the Stoa class at a degree of 1.0,
are implicitly interesting at a degree of 0.6. Al-
though this is not identical to saying that the class
itself is interesting, it clearly captures the intention
behind the original RDF annotation.
Profile attributes can also characterize proper-
ties, like orderedBy, creationEra or style, en-
coding the information that it might, for example,
be more interesting to describe the artistic style of
an exhibit rather than provide historical data about
it. This is interpreted as the strength of the con-
nection between how interesting an exhibit is, and
how interesting its properties are. In other words,
if having an interesting filler for style also makes
the exhibit interesting, this is taken as an indica-
tion that the style relation itself is an interesting
one. Formulated in logical terms, having interest-
ing relation fillers implies being interesting, and
the implication holds at a degree provided by the
interest level of the relation itself.
For example, consider the assertion at 0.8 that
the class of things that are related to at least
one Interesting instance with the style property,
are themselves Interesting and the assertion at
0.4 that the class of things that are related to at
least one Interesting instance with the orderedBy
property, are themselves Interesting.
Given a profile fragment like the one in Table 1
and a domain ontology including the factual infor-
mation in Table 2, ‘Stoa of Attalus’ has an interest-
</bodyText>
<page confidence="0.99491">
15
</page>
<bodyText confidence="0.999990604651163">
ing style at a degree of 0.8, which is the maximum
among the three architectural styles found in the
stoa (Doric, Ionic, and Pergamene). Since style
fillers transfer interest at a loss of 0.2, style con-
tributes 0.6 to the stoa’s Interesting-ness. By con-
trast, the filler of orderedBy (which is more inter-
esting in this profile than any of the architectural
styles) only contributes 0.3 of a degree, because
orderedBy is annotated as uninteresting and in-
terest transfers across it at a heavy loss.
We have so far discussed how to infer profile
attribute values for the individuals of the domain.
Classes and relations receive the value of the min-
imal instance of the class (relation). That is to say,
the individual (pair of individuals) for which noth-
ing else is known, except that it is a member of the
class (relation).
As an example, consider a DoricBuilding class
which is a subclass of Building that only admits
instances that have a style relation with ‘Doric’.
The minimal instance of this class is a member of
Interesting through having an interesting property
as discussed above, even though nothing else is
known about it. This membership degree in Inter-
esting is taken to be an attribute of the class itself
rather than any one of its members, and is used as
the attribute value for the class itself.
For relations, two minimal instances of the rela-
tion’s domain and range are created. The attribute
value for the property is the degree of the impli-
cation that having this property makes the domain
individual have the attribute. For example, in order
to infer how interesting the property devotedTo is,
we first observe that it relates Temple instances
with MythicalPerson instances, and create bare
instances of these two classes. The implication
that having a devotedTo relation to an Interest-
ing individual leads to being member of Interest-
ing holds to a degree that can be calculated, given
the Interesting degrees of the Temple and Mythi-
calPerson instances involved in the relation. The
degree of the implication is then used as the value
of the interesting attribute.
</bodyText>
<sectionHeader confidence="0.999968" genericHeader="evaluation">
5 Related Work
</sectionHeader>
<bodyText confidence="0.999647297297297">
ELEON is based on the authoring tool described
by Androutsopoulos et al. [1], which was also tar-
geted at creating ontologies for generating person-
alized descriptions of the individuals in the ontol-
ogy. ELEON inherits from that tool the idea of
separating the abstract ontological relations from
the concrete linguistic information, facilitating the
easy reuse of the ontological information to gener-
ate descriptions in multiple languages, as well as
using an external NLG engine to provide previews
of the descriptions from within the authoring envi-
ronment.
The system presented here extends a previous
version of ELEON [3], which supports using an
external DL reasoner to catch logical errors by
checking the consistency of the authored ontology.
In the work described here, the intelligence behind
the tool is substantially extended by using logical
inference to predict values that have not been ex-
plicitly entered by the user, alleviating the need to
manually provide large volumes of numerical data.
A parallel line of development of the origi-
nal Androutsopoulos et al. tool is based on the
Prot´eg´e ontology authoring and management en-
vironment.5 Galanis and Androutsopoulos [6] de-
veloped a Prot´eg´e plug-in that builds upon the ex-
tensive ontology authoring features of Prot´eg´e to
provide an environment for creating cultural her-
itage ontologies and the associated linguistic and
profiling annotations. It does not, however, of-
fer the flexibility to define new profile attributes
as ELEON does, and is restricted to specifying the
level of interest of the various ontological entities.
Furthermore, it only uses logic inference to catch
ontological inconsistencies in a manner similar to
that described by Bilidas et al. [3] without any pre-
diction facilities.
</bodyText>
<sectionHeader confidence="0.999199" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999982823529412">
In this article we have presented an authoring envi-
ronment for the creation of domain ontologies and
the associated linguistic and profile annotations.
Annotated ontologies can be used to automatically
generate natural-language descriptions of the enti-
ties of the ontology, dynamically adapting the gen-
eration engine to the audience and context of the
description.
The advantages of using ELEON instead of
generic knowledge tools, such as Prot´eg´e, stem
from the ability to couple ELEON with external en-
gines that provide important conveniences to the
author. More specifically, ELEON can invoke a nat-
ural language generation engine in order to display
previews of the description based on the informa-
tion currently provided about an object. Further-
more, logical inference is used to provide an intel-
</bodyText>
<footnote confidence="0.998343">
5See http://protege.stanford.edu/
</footnote>
<page confidence="0.99806">
16
</page>
<bodyText confidence="0.999934130434783">
ligent authoring back-end that completes the cur-
rent model by inferring missing values based on
what has already been provided.
This intelligent authoring support facility, com-
bined with the immediate previews, can consid-
erably reduce the effort required to create a fully
functional model as the author can iterate through
cycles of providing information, previewing the
generated text, and only elaborating the model
where the text is unsatisfactory. This iterative pro-
cess converges to satisfactory descriptions much
faster than having to manually enter all adaptation
parameters, especially for large and complex do-
mains.
In the context of the XENIOS project,6 the pre-
vious version of ELEON has been evaluated by cu-
rators of the Foundation of the Hellenic World,
who used it to create an ontology of the buildings,
rooms, and exhibitions of the Foundation. In the
context of creating the Agora of Athens ontology
and annotations for INDIGO, we are planning to
extend this evaluation to include the new intelli-
gent authoring features.
</bodyText>
<sectionHeader confidence="0.996534" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9999932">
The work described here is supported by the FP6-
IST project INDIGO7 which aims to advance
human-robot interaction methodology and tech-
nology, enabling robots to perceive natural human
behaviour, as well as making them act in ways that
are more familiar to humans. The authors also
wish to acknowledge the help of the colleagues
from the Foundation of the Hellenic World who
used ELEON to create the initial version of the on-
tology for the ancient Agora of Athens.
</bodyText>
<sectionHeader confidence="0.999001" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9996547">
[1] Ion Androutsopoulos, Jon Oberlander, and
Vangelis Karkaletsis. 2007. Source authoring
for multilingual generation of personalised
object descriptions. Journal of Natural Lan-
guage Engineering, 13(3):191–233.
[2] Franz Baader, Ian Horrocks, and Ulrike Sat-
tler. 2003. Description logics as ontology
languages for the semantic web. In Steffen
Staab and Rudi Studer, editors, Lecture Notes
in Artificial Intelligence. Springer Verlag.
</reference>
<footnote confidence="0.649242">
6See http://www.ics.forth.gr/xenios/ (in
Greek)
7Seehttp://www.ics.forth.gr/indigo/
</footnote>
<reference confidence="0.999964510204082">
[3] Dimitris Bilidas, Maria Theologou, and Van-
gelis Karkaletsis. 2007. Enriching OWL on-
tologies with linguistic and user-related an-
notations: the ELEON system. In Proc.
19th IEEE Intl. Conf. on Tools with Artificial
Intelligence (ICTAI-2007), Patras, Greece,
Oct. 2007. IEEE Computer Society.
[4] Fernando Bobillo and Umberto Straccia.
2008. fuzzyDL: an expressive fuzzy Descrip-
tion Logic reasoner. In Proceedings of the
2008 International Conference on Fuzzy Sys-
tems (FUZZ-08).
[5] Dan Brickley and R. V. Guha. 2004. RDF
Primer. W3C Recommendation.
[6] Dimitris Galanis and Ion Androutsopoulos.
2007. Generating multilingual descriptions
from linguistically annotated OWL ontolo-
gies: the NaturalOWL system. In Pro-
ceedings of the 11th European Workshop on
Natural Language Generation (ENLG 2007),
Schloss Dagstuhl, Germany, pages 143–146.
[7] Amy Isard, Jon Oberlander, Ion Androut-
sopoulos, and Colin Matheson. 2003. Speak-
ing the users’ languages. IEEE Intelligent
Systems, 18(1):40–45.
[8] Stasinos Konstantopoulos and Georgios
Apostolikas. 2007. Fuzzy-DL reasoning
over unknown fuzzy degrees. In Proc. Intl.
IFIP Workshop of Semantic Web and Web
Semantics (IFIP-SWWS 07), Nov. 2007,
Vilamoura, Portugal. LNCS 4806, Springer,
Berlin/Heidelberg.
[9] Stasinos Konstantopoulos, Vangelis
Karkaletsis, and Colin Matheson. 2008.
Robot personality: Representation and exter-
nalization. In Proceedings of Intl. Workshop
on Computational Aspects of Affective and
Emotional Interaction (CAFFEi 08), Patras,
Greece, July 2008.
[10] Matthew Marge, Amy Isard, and Johanna
Moore. 2008. Creation of a new do-
main and evaluation of comparison gener-
ation in a natural language generation sys-
tem. In Proceedings of the Fifth Inter-
national Language Generation Conference
(INLG08), June 2008, Salt Fork, Ohio, USA.
[11] Michael K. Smith, Chris Welty, and Debo-
rah L. McGuinness. 2004. OWL web ontol-
ogy language. W3C Recommendation.
</reference>
<page confidence="0.99941">
17
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.806694">
<title confidence="0.9886965">An intelligent authoring environment for abstract representations of cultural object descriptions</title>
<author confidence="0.907509">Konstantopoulos Karkaletsis</author>
<affiliation confidence="0.9435465">Institute of Informatics &amp; NCSR ‘Demokritos’,</affiliation>
<abstract confidence="0.999003391304348">In this paper we describe an authoring environment for the creation of culturaldomain ontologies and the associated linguistic and profile annotations, for dynamically generating adaptable naturaldescriptions of the cultural objects in the ontology. Adaptation achieved at the expense of considerable authoring effort, since it relies on providing numerical parameters for each ontological entity. To assist the authoring process, we provide an intelligent authoring back-end that completes manually authored models by inferring missing values. This intelligent authoring support facility, combined with immediate previews, can considerably reduce the effort required to create a fully functional model as the author can iterate through cycles of providing information, previewing the generated text, and only elaborating the model where the text is unsatisfactory.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Ion Androutsopoulos</author>
<author>Jon Oberlander</author>
<author>Vangelis Karkaletsis</author>
</authors>
<title>Source authoring for multilingual generation of personalised object descriptions.</title>
<date>2007</date>
<journal>Journal of Natural Language Engineering,</journal>
<volume>13</volume>
<issue>3</issue>
<contexts>
<context position="9832" citStr="[1]" startWordPosition="1494" endWordPosition="1494">each supported natural language. The author specifies the clause to be generated in abstract terms, by specifying, for example, the verb to be used, the voice and tense of the resulting clause, etc. Similar annotations for instances and classes specify how they should be realized as noun phrases that fill slots in the property-generated clauses. Micro-plan annotations also comprise several other languagespecific parameters, such as whether the resulting clause can be aggregated into a longer sentence or not, its voice and tense, and so on, as described in more detail by Androutsopoulos et al. [1], Sect. 3. Adaptive planning, on the other hand, operates at the abstract level and does not involve specifics of the target language. It is rather aimed at reontological models. See, for example, http: //www.heppnetz.de/projects/skos2gentax/ and http://annocultor.sourceforge.net/ flecting a synthetic personality in the description, as well as personalizing it for a particular audience. Adaptation parameters are provided in the form of profile attributes that control aspects of the text plan such as how many and which of the facts known about an object should be used to describe it, as discuss</context>
<context position="21737" citStr="[0, 1]" startWordPosition="3314" endWordPosition="3315">which complex logical propositions hold, given the degrees of their constituent elementary propositions. In the work described here we use Łukasziewicz-Tarski algebra to provide manyvalued semantics [9, Sect. 3]. Although there is nothing in ELEON itself that forces this choice, Łukasiewicz-Tarski algebra is well-suited to inferring profile attribute values, as it is founded on neither probability nor uncertainty, which would be inappropriate in our case, but on the notion of relevance. 4.3 Inferring missing attribute values Profile attributes of individuals are captured by normalizing in the [0, 1] range and then using the normalized value as a class membership degree. So, for example, if interesting is such an attribute of individual exhibits, then an exhibit with a (normalized) interest level of 0.7 is an instance of the Interesting class at a degree of 0.7. Attributes of classes are reduced to attributes of the members of the class, expressed by a class subsumption assertion at the degree of the attribute. So, if the class of stoas is interesting at a degree of 0.6, this is expressed by asserting that being a member of Stoa implies being a member of Interesting. The implication is as</context>
<context position="26536" citStr="[1]" startWordPosition="4123" endWordPosition="4123">w interesting the property devotedTo is, we first observe that it relates Temple instances with MythicalPerson instances, and create bare instances of these two classes. The implication that having a devotedTo relation to an Interesting individual leads to being member of Interesting holds to a degree that can be calculated, given the Interesting degrees of the Temple and MythicalPerson instances involved in the relation. The degree of the implication is then used as the value of the interesting attribute. 5 Related Work ELEON is based on the authoring tool described by Androutsopoulos et al. [1], which was also targeted at creating ontologies for generating personalized descriptions of the individuals in the ontology. ELEON inherits from that tool the idea of separating the abstract ontological relations from the concrete linguistic information, facilitating the easy reuse of the ontological information to generate descriptions in multiple languages, as well as using an external NLG engine to provide previews of the descriptions from within the authoring environment. The system presented here extends a previous version of ELEON [3], which supports using an external DL reasoner to cat</context>
</contexts>
<marker>[1]</marker>
<rawString>Ion Androutsopoulos, Jon Oberlander, and Vangelis Karkaletsis. 2007. Source authoring for multilingual generation of personalised object descriptions. Journal of Natural Language Engineering, 13(3):191–233.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Franz Baader</author>
<author>Ian Horrocks</author>
<author>Ulrike Sattler</author>
</authors>
<title>Description logics as ontology languages for the semantic web.</title>
<date>2003</date>
<booktitle>Lecture Notes in Artificial Intelligence.</booktitle>
<editor>In Steffen Staab and Rudi Studer, editors,</editor>
<publisher>Springer Verlag.</publisher>
<contexts>
<context position="19700" citStr="[2]" startWordPosition="3007" endWordPosition="3007">ssary transformations for using manyvalued DL reasoners, i.e., transforming the OWL and RDF models into many-valued DL assertions, as well as transforming logical query answers into the numerical profile-attribute values. Furthermore, as depicted in Figure 3, the implementation includes the necessary API calls for using either of two many-valued DL reasoners, YADLR [8] or FUZZYDL [4]. Support for alternative many-valued DL reasoners can be easily added, by using such reasoners to implement the reasoning API expected by the authoring system. 4.2 Many-valued DL Reasoning Description Logics (DL) [2] are a family of firstorder logics; their main characteristic is decidability, attained by being restricted to concepts (unary predicates, sets of individuals) and relations (binary predicates, sets of pairs of individuals). Of particular importance is the DL called SROZN, which covers OWL-DL. 4Seehttp://transonto.sourceforge.net/ 14 DL statements, concept descriptions, use logical connectives to define concepts by combining (a) other concepts, and (b) relation constructs that describe the set of individuals that have a certain relation with a certain set of fillers (relation objects). Relatio</context>
</contexts>
<marker>[2]</marker>
<rawString>Franz Baader, Ian Horrocks, and Ulrike Sattler. 2003. Description logics as ontology languages for the semantic web. In Steffen Staab and Rudi Studer, editors, Lecture Notes in Artificial Intelligence. Springer Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dimitris Bilidas</author>
<author>Maria Theologou</author>
<author>Vangelis Karkaletsis</author>
</authors>
<title>Enriching OWL ontologies with linguistic and user-related annotations: the ELEON system.</title>
<date>2007</date>
<booktitle>In Proc. 19th IEEE Intl. Conf. on Tools with Artificial Intelligence (ICTAI-2007),</booktitle>
<publisher>IEEE Computer Society.</publisher>
<location>Patras, Greece,</location>
<contexts>
<context position="27083" citStr="[3]" startWordPosition="4207" endWordPosition="4207">e authoring tool described by Androutsopoulos et al. [1], which was also targeted at creating ontologies for generating personalized descriptions of the individuals in the ontology. ELEON inherits from that tool the idea of separating the abstract ontological relations from the concrete linguistic information, facilitating the easy reuse of the ontological information to generate descriptions in multiple languages, as well as using an external NLG engine to provide previews of the descriptions from within the authoring environment. The system presented here extends a previous version of ELEON [3], which supports using an external DL reasoner to catch logical errors by checking the consistency of the authored ontology. In the work described here, the intelligence behind the tool is substantially extended by using logical inference to predict values that have not been explicitly entered by the user, alleviating the need to manually provide large volumes of numerical data. A parallel line of development of the original Androutsopoulos et al. tool is based on the Prot´eg´e ontology authoring and management environment.5 Galanis and Androutsopoulos [6] developed a Prot´eg´e plug-in that bu</context>
</contexts>
<marker>[3]</marker>
<rawString>Dimitris Bilidas, Maria Theologou, and Vangelis Karkaletsis. 2007. Enriching OWL ontologies with linguistic and user-related annotations: the ELEON system. In Proc. 19th IEEE Intl. Conf. on Tools with Artificial Intelligence (ICTAI-2007), Patras, Greece, Oct. 2007. IEEE Computer Society.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fernando Bobillo</author>
<author>Umberto Straccia</author>
</authors>
<title>fuzzyDL: an expressive fuzzy Description Logic reasoner.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 International Conference on Fuzzy Systems (FUZZ-08).</booktitle>
<contexts>
<context position="19483" citStr="[4]" startWordPosition="2974" endWordPosition="2974">al values of profile attributes for all ontological entities in the domain (individuals, classes, and properties). ELEON also extends and uses the TransOnto semantic knowledge migration system4 to perform all the necessary transformations for using manyvalued DL reasoners, i.e., transforming the OWL and RDF models into many-valued DL assertions, as well as transforming logical query answers into the numerical profile-attribute values. Furthermore, as depicted in Figure 3, the implementation includes the necessary API calls for using either of two many-valued DL reasoners, YADLR [8] or FUZZYDL [4]. Support for alternative many-valued DL reasoners can be easily added, by using such reasoners to implement the reasoning API expected by the authoring system. 4.2 Many-valued DL Reasoning Description Logics (DL) [2] are a family of firstorder logics; their main characteristic is decidability, attained by being restricted to concepts (unary predicates, sets of individuals) and relations (binary predicates, sets of pairs of individuals). Of particular importance is the DL called SROZN, which covers OWL-DL. 4Seehttp://transonto.sourceforge.net/ 14 DL statements, concept descriptions, use logica</context>
</contexts>
<marker>[4]</marker>
<rawString>Fernando Bobillo and Umberto Straccia. 2008. fuzzyDL: an expressive fuzzy Description Logic reasoner. In Proceedings of the 2008 International Conference on Fuzzy Systems (FUZZ-08).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Brickley</author>
<author>R V Guha</author>
</authors>
<date>2004</date>
<note>RDF Primer. W3C Recommendation.</note>
<contexts>
<context position="14157" citStr="[5]" startWordPosition="2168" endWordPosition="2168">thoring process by reasoning over manually provided exhibit attributes in order to infer what the values of the missing attributes should be. The author can inspect the explicitly provided as well as the automatically inferred values and make corrections where necessary (Figure 2). Manual corrections trigger a re-estimation of the missing values, so that after each round of corrections the overall model is a closer approximation of the author’s intention. 3.2 Representation and interoperability Linguistic and profile annotations are represented in RDF, the Resource Description Framework (RDF) [5]. RDF is a knowledge representation technology built around the concept of using subject-predicate-object triples to describe abstract entities, resources. RDF triples assign to their subject resource the property of being related to the object through the predicate resource. Predicates can be data properties, in which case their objects are concrete values (numbers, strings, time periods, and so on), or object properties, in which case their objects are abstract resources. Although OWL is not formally defined in RDF, it is defined in such a way that it can be represented within RDF. In fact, </context>
</contexts>
<marker>[5]</marker>
<rawString>Dan Brickley and R. V. Guha. 2004. RDF Primer. W3C Recommendation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dimitris Galanis</author>
<author>Ion Androutsopoulos</author>
</authors>
<title>Generating multilingual descriptions from linguistically annotated OWL ontologies: the NaturalOWL system.</title>
<date>2007</date>
<booktitle>In Proceedings of the 11th European Workshop on Natural Language Generation (ENLG 2007), Schloss Dagstuhl, Germany,</booktitle>
<pages>143--146</pages>
<contexts>
<context position="17536" citStr="[6]" startWordPosition="2685" endWordPosition="2685">ates (secondorder properties). By contrast, the chosen approach restricts the ontology within the computationally efficient OWL-DL dialect, for which multiple stable and highly optimized inference engines have been developed. Profile attributes are provided as extraontological properties, without tying them to a particular logical interpretation. We shall revisit this point in the following section. The second motivating factor behind RDF profile attributes is interoperability with NLG engines. The RDF vocabulary used to assign linguistic and profile attributes is understood by the NATURALOWL [6] and METHODIUS [10] generation engines (Figure 3). 4 Intelligent Authoring Support We have previously discussed how profile attributes were not directly incorporated in the domain ontology as second-order statements, but are rather represented as extra-logical RDF annotations. While avoiding forcing a second-order interpretation of profile attributes is a definite advantage from a computational-complexity point of view, this choice leaves profile attributes outside the scope of OWL reasoning tools. In order to be able to efficiently reason over and draw inferences about profile attributes, we </context>
<context position="27645" citStr="[6]" startWordPosition="4295" endWordPosition="4295">e extends a previous version of ELEON [3], which supports using an external DL reasoner to catch logical errors by checking the consistency of the authored ontology. In the work described here, the intelligence behind the tool is substantially extended by using logical inference to predict values that have not been explicitly entered by the user, alleviating the need to manually provide large volumes of numerical data. A parallel line of development of the original Androutsopoulos et al. tool is based on the Prot´eg´e ontology authoring and management environment.5 Galanis and Androutsopoulos [6] developed a Prot´eg´e plug-in that builds upon the extensive ontology authoring features of Prot´eg´e to provide an environment for creating cultural heritage ontologies and the associated linguistic and profiling annotations. It does not, however, offer the flexibility to define new profile attributes as ELEON does, and is restricted to specifying the level of interest of the various ontological entities. Furthermore, it only uses logic inference to catch ontological inconsistencies in a manner similar to that described by Bilidas et al. [3] without any prediction facilities. 6 Conclusion In</context>
</contexts>
<marker>[6]</marker>
<rawString>Dimitris Galanis and Ion Androutsopoulos. 2007. Generating multilingual descriptions from linguistically annotated OWL ontologies: the NaturalOWL system. In Proceedings of the 11th European Workshop on Natural Language Generation (ENLG 2007), Schloss Dagstuhl, Germany, pages 143–146.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Amy Isard</author>
<author>Jon Oberlander</author>
<author>Ion Androutsopoulos</author>
<author>Colin Matheson</author>
</authors>
<title>Speaking the users’ languages.</title>
<date>2003</date>
<journal>IEEE Intelligent Systems,</journal>
<volume>18</volume>
<issue>1</issue>
<contexts>
<context position="10974" citStr="[7]" startWordPosition="1670" endWordPosition="1670">own about an object should be used to describe it, as discussed in more detail below. 3.1 Personalization and personality The system supports authoring the adaptation profiles that control the dynamic adaptation of the generated descriptions. Profiles permit the author to specify, for example, that technical vocabulary be used when generating for experts, or that shorter and simpler sentences are generated for children. This is achieved by providing a variety of generation parameters though user profiles, including a numerical interest attribute of the properties of the ontology. Isard et al. [7] describe how interest is used to impose a preference ordering of the properties of ontological entities, controlling which facts will be used when describing each entity. In the work described here, we have extended profiles in two respects: • by generalizing interest into arbitrary, authordefined profile attributes; and • by permitting profile attributes to apply not only to ontological properties, but also to individuals and classes. Using these extensions, authors can define personality profiles for generating text, managing dialogue, and simulating emotional variation in a way that reflec</context>
</contexts>
<marker>[7]</marker>
<rawString>Amy Isard, Jon Oberlander, Ion Androutsopoulos, and Colin Matheson. 2003. Speaking the users’ languages. IEEE Intelligent Systems, 18(1):40–45.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stasinos Konstantopoulos</author>
<author>Georgios Apostolikas</author>
</authors>
<title>Fuzzy-DL reasoning over unknown fuzzy degrees.</title>
<date>2007</date>
<booktitle>In Proc. Intl. IFIP Workshop of Semantic Web and Web Semantics (IFIP-SWWS 07),</booktitle>
<tech>LNCS 4806,</tech>
<publisher>Springer, Berlin/Heidelberg.</publisher>
<location>Vilamoura,</location>
<contexts>
<context position="19468" citStr="[8]" startWordPosition="2971" endWordPosition="2971">ith the numerical values of profile attributes for all ontological entities in the domain (individuals, classes, and properties). ELEON also extends and uses the TransOnto semantic knowledge migration system4 to perform all the necessary transformations for using manyvalued DL reasoners, i.e., transforming the OWL and RDF models into many-valued DL assertions, as well as transforming logical query answers into the numerical profile-attribute values. Furthermore, as depicted in Figure 3, the implementation includes the necessary API calls for using either of two many-valued DL reasoners, YADLR [8] or FUZZYDL [4]. Support for alternative many-valued DL reasoners can be easily added, by using such reasoners to implement the reasoning API expected by the authoring system. 4.2 Many-valued DL Reasoning Description Logics (DL) [2] are a family of firstorder logics; their main characteristic is decidability, attained by being restricted to concepts (unary predicates, sets of individuals) and relations (binary predicates, sets of pairs of individuals). Of particular importance is the DL called SROZN, which covers OWL-DL. 4Seehttp://transonto.sourceforge.net/ 14 DL statements, concept descripti</context>
</contexts>
<marker>[8]</marker>
<rawString>Stasinos Konstantopoulos and Georgios Apostolikas. 2007. Fuzzy-DL reasoning over unknown fuzzy degrees. In Proc. Intl. IFIP Workshop of Semantic Web and Web Semantics (IFIP-SWWS 07), Nov. 2007, Vilamoura, Portugal. LNCS 4806, Springer, Berlin/Heidelberg.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stasinos Konstantopoulos</author>
<author>Vangelis Karkaletsis</author>
<author>Colin Matheson</author>
</authors>
<title>Robot personality: Representation and externalization.</title>
<date>2008</date>
<booktitle>In Proceedings of Intl. Workshop on Computational Aspects of Affective and Emotional Interaction (CAFFEi 08),</booktitle>
<location>Patras, Greece,</location>
<contexts>
<context position="12404" citStr="[9]" startWordPosition="1896" endWordPosition="1896">ceived as more natural and user-friendly. But the methodology is generally interesting in any context of generating descriptions of cultural heritage content, especially if the individual descriptions are aggregated in a tour of the collection. In such contexts, dialogue-management adaptivity can vary the exhibits included in personalized tours and emotional state variation can match the described content and make the tour more engaging and lively. The way in which personality profiles are used to parametrize dialogue management and simu12 lated emotions are discussed in more detail elsewhere [9], so we shall only briefly outline it here. Emotional variation is achieved by using the personality profile to estimate the emotional appraisal of dialogue acts and update the mood and emotional state of artificial agents. Dialogue management is affected both directly, by taking exhibit preference into account when deliberating over dialogue acts, and indirectly, by being influenced by the artificial agent’s current mood; and, as already mentioned above, NLG is adapted by using property preference to plan a description In the Konstantopoulos et al. [9] model, preference is calculated based on</context>
</contexts>
<marker>[9]</marker>
<rawString>Stasinos Konstantopoulos, Vangelis Karkaletsis, and Colin Matheson. 2008. Robot personality: Representation and externalization. In Proceedings of Intl. Workshop on Computational Aspects of Affective and Emotional Interaction (CAFFEi 08), Patras, Greece, July 2008.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Marge</author>
<author>Amy Isard</author>
<author>Johanna Moore</author>
</authors>
<title>Creation of a new domain and evaluation of comparison generation in a natural language generation system.</title>
<date>2008</date>
<booktitle>In Proceedings of the Fifth International Language Generation Conference (INLG08),</booktitle>
<location>Salt Fork, Ohio, USA.</location>
<contexts>
<context position="17555" citStr="[10]" startWordPosition="2688" endWordPosition="2688">properties). By contrast, the chosen approach restricts the ontology within the computationally efficient OWL-DL dialect, for which multiple stable and highly optimized inference engines have been developed. Profile attributes are provided as extraontological properties, without tying them to a particular logical interpretation. We shall revisit this point in the following section. The second motivating factor behind RDF profile attributes is interoperability with NLG engines. The RDF vocabulary used to assign linguistic and profile attributes is understood by the NATURALOWL [6] and METHODIUS [10] generation engines (Figure 3). 4 Intelligent Authoring Support We have previously discussed how profile attributes were not directly incorporated in the domain ontology as second-order statements, but are rather represented as extra-logical RDF annotations. While avoiding forcing a second-order interpretation of profile attributes is a definite advantage from a computational-complexity point of view, this choice leaves profile attributes outside the scope of OWL reasoning tools. In order to be able to efficiently reason over and draw inferences about profile attributes, we have chosen to inte</context>
</contexts>
<marker>[10]</marker>
<rawString>Matthew Marge, Amy Isard, and Johanna Moore. 2008. Creation of a new domain and evaluation of comparison generation in a natural language generation system. In Proceedings of the Fifth International Language Generation Conference (INLG08), June 2008, Salt Fork, Ohio, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael K Smith</author>
<author>Chris Welty</author>
<author>Deborah L McGuinness</author>
</authors>
<title>OWL web ontology language. W3C Recommendation.</title>
<date>2004</date>
<contexts>
<context position="7467" citStr="[11]" startWordPosition="1129" endWordPosition="1129">at belong to that type and its subtypes. In Figure 1, the field locatedIn is introduced at the ArchitecturalConstruction entity type and is defined as a relationship between ArchitecturalConstruction and Place, while the using-period field defines a property of the PhysicalObject entity type. Consequently, all entities of type PhysicalObject and its subtypes, i.e. ArchitecturalConstruction and ArtObject inherit these fields. Furthermore, all the instances of these entity types and their subtypes also inherit these fields. The proposed system expresses such ontological conceptual models in OWL [11], an ontology representation language that is one of the core semantic web technologies. OWL models can be created from scratch in the authoring tool or imported, facilitating the use of well-established conceptual models in the cultural heritage domain, as almost all can be (or already are) expressed as ontologies. The CIDOC conceptual reference model, for example, also provides an official OWL version.2 Most other cultural heritage vocabularies, thesauri, and classification schemes using XML or relational database data models are consistent with the Simple Knowledge Organization System (SKOS</context>
</contexts>
<marker>[11]</marker>
<rawString>Michael K. Smith, Chris Welty, and Deborah L. McGuinness. 2004. OWL web ontology language. W3C Recommendation.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>