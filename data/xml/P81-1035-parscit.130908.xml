<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.927453666666667">
TRANSPORTABLE NATURAL-LANGUAGE INTERFACES TO DATABASES
by
Gary G. Hendrix and William H. Lewis
SRI International
333 Ravenswood Avenue
Menlo Park, California 94025
</note>
<sectionHeader confidence="0.929893" genericHeader="abstract">
I INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999929457142857">
Over the last few years a number of
application systems have been constructed that
allow users to access databases by posing questions
in natural languages, much as English. When used
in the restricted domains for which they have been
especially designed, these systems have achieved
reasonably high levels of performance. Such
systems as LADDER [2], PLANES [10], ROBOT [1],
and REL [9] require the encoding of knowledge
about the domain of application in such constructs
as database schemata, lexicons, pragmatic grammars,
and the like. The creation of these data
structures typically requires considerable effort
on the part of a computer professional who has had
special training in computational linguistics and
the use of databases. Thus, the utility of these
systems is severely limited by the high cost
involved in developing an interface to any
particular database.
This paper describes initial work on a
methodology for creating natural-language
processing capabilities for new domains without the
need for intervention by specially trained experts.
Our approach is to acquire logical schemata and
lexical information through simple interactive
dialogues with someone who is familiar with the
form and content of the database, but unfamiliar
with the technology of natural-language interfaces.
To test our approach in an actual computer
environment, we have developed a prototype system
called TED (Transportable English Datamanager). As
a result of our experience with TED, the NL group
at SRI is now undertaking the development of a much
more ambitious system based on the same philosophy
[4].
</bodyText>
<sectionHeader confidence="0.997889" genericHeader="keywords">
II RESEARCH PROBLEMS
</sectionHeader>
<bodyText confidence="0.917636294117647">
Given the demonstrated feasibility of
language-access systems, such as LADDER, major
research issues to be dealt with in achieving
transportable database interfaces include the
following:
* Information used by transportable systems
must be cleanly divided into database-
independent and database-dependent
portions.
* Knowledge representations must be
established for the database-dependent part
in such a way that their form is fixed and
applicable to all databases and their
content readily acquirable.
* Mechanisms must be developed to enable the
system to acquire, information about a
particular application from nonlinguists.
</bodyText>
<sectionHeader confidence="0.976055" genericHeader="introduction">
III THE TED PROTOTYPE
</sectionHeader>
<bodyText confidence="0.999920102564103">
We have developed our prototype system (TED)
to explore one possible approach to these problems.
In essence, TED is a LADDER-like natural-language
processing system for accessing databases, combined
with an &amp;quot;automated interface expert&amp;quot; that
interviews users to learn the language and logical
structure associated with a particular database and
that automatically tailors the system for use with
the particular application. TED allows users to
create, populate, and edit their own new local
databases, to describe existing local databases, or
even to describe and subsequently access
heterogeneous (as in OD distributed databases.
Most of TED is based on and built from
components of LADDER. In particular, TED uses the
LIFER parser and its associated support packages
[3], the SODA data access planner [5], and the
FAH file access manager [6]. All of these support
packages are independent of the particular database
used. In LADDER, the data structures used by these
components were hand-generated for a particular
database by computer scientists. In TED, however,
they are created by TED&apos;s automated interface
expert.
Like LADDER, TED uses a pragmatic grammar; but
TED&apos;s pragmatic grammar does not make any
assumptions about the particular database being
accessed. It assumes only that interactions with
the system will concern data access or update, and
that information regarding the particular database
will be encoded in data structures of a prescribed
form, which are created by the automated interface
expert.
The executive level of TED accepts three kinds
of input: questions stated in English about the
data in files that have been previously described
to the system; questions posed in the SODA query
language; single-word commands that Initiate
dialogues with the automated interface expert.
</bodyText>
<sectionHeader confidence="0.9807" genericHeader="method">
IV THE AUTOMATED INTERFACE EXPERT
A. Philosophy
</sectionHeader>
<bodyText confidence="0.998100888888889">
TED&apos;s mechanism for acquiring information
about a particular database application is to
conduct interviews with users. For such interviews
to be successful,
The work reported herein was supported by the Advanced Research Projects Agency of the Department of Defense
under contracts N00039-79-C-0118 and N00039-80-C-0645 with the Naval Electronic Systems Command. The views and
conclusions contained in this document are those of the authors and should not be interpreted as representative
of the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency of the
U.S. Government.
</bodyText>
<page confidence="0.997953">
159
</page>
<bodyText confidence="0.997087">
* There must be a range of readily understood
questions that elicit all the information
needed about a new database.
* The questions must be both brief and easy
to understand.
* The system must appear coherent, eliciting
required information in an order
comfortable to the user.
* The system must provide substantial
assistance, when needed, to enable a user
to understand the kinds of responses that
are expected.
All these points cannot be covered herein, but the
sample transcript shown at the end of this paper,
in conjunction with the following discussion,
suggests the manner of our approach.
</bodyText>
<subsectionHeader confidence="0.839421">
B. Strategy
</subsectionHeader>
<bodyText confidence="0.994801618181818">
A key Strategy of TED is to first acquire
information about the structure of files. Because
the semantics of files is relatively well
understood, the system thereby lays the foundation
for subsequently acquiring information about the
linguistic constructions likely to be used .in
questions about the data contained in the file.
One of the singleâ€”word commands accepted by
the TED executive system is the command NEW, which
initiates a dialogue prompting the user to supply
information about the structure of a new data file.
The NEW dialogue allows the user to think of the
file as a table of information and asks relatively
simple questions about each of the fields (columns)
in the file (table).
For example, TED asks for the heading names of
the columns, for possible synonyms for the heading
names, and for information about the types of
values (numeric, Boolean, or symbolic) that each
column can contain. The heading names generally
act like relational nouns, while the information
about the type of values in each column provides a
clue to the column&apos;s semantics. The heading name
of a symbolic column tends to be the generic name
for the class of objects referred to by the values
of that column. Heading names for Boolean columns
tend to be the names of properties that database
objects can possess. If a column contains numbers,
this suggests that there may be some scale with
associated adjectives of degree. To allow the
system to answer questions requiring the
integration of information from multiple files, the
user is also asked about the interconnections
between the file currently being defined and other
files described previously.
C. Examples from a Transcript
In the sample transcript at the end of this
paper, the user initiates a NEW dialogue at Point
A. The automated interface expert then takes the
initiative in the conversation, asking first for
the name of the new file, then for the names of the
file&apos;s fields. The file name will be used to
distinguish the new file from others during the
acquisition process. The field names are entered
into the lexicon as the names of attributes and are
put on an agenda so that further questions about
the fields may be asked subsequently of the user.
At this point, TED still does not know what
type of objects the data in the new file concern.
Thus, as its next task, TED asks for words that
might be used as generic names for the subjects of
the file. Then, at Point E, TED acquires
information about how to identify one of these
subjects to the user and, at Point F, determines
what kinds of pronouns might be used to refer to
one of the subjects. (As regards ships, TED is
fooled, because ships may be referred to by &amp;quot;she.&amp;quot;)
TED is programmed with the knowledge that the
identifier of an object must be some kind of name,
rather than a numeric quantity or Boolean value.
Thus, TED can assume a priori that the NAME field
given in Interaction E is symbolic in nature. At
Point G, TED acquires possible synonyms for NAME.
TED then cycles through all the other fields,
acquiring information about their individual
semantics. At Point H, TED asks about the CLASS
field, but the user doesn&apos;t understand the
question. By typing a question mark, the user
causes TED to give a more detailed explanation of
what it needs. Every question TED asks has at
least two levels of explanation that a user may
call upon for clarification. For example, the user
again has trouble at J, whereupon he receives an
extended explanation with an example. See T also.
Depending upon whether a field is symbolic,
arithmetic or Boolean, TED makes different forms of
entries in its lexicon and seeks .to acquire
different types of information about the field.
For example, as at Points J, K and Y, TED asks
whether symbolic field values can be used as
modifiers (usually in nounâ€”noun combinations). For
arithmetic fields, TED looks for adjectives
associated with scales, as is illustrated by the
sequence OPqR. Once TED has a word such as OLD, it
assumes MORE OLD, OLDER and OLDEST may also be
used. (GOODâ€”BETTERâ€”BEST requires special
intervention.)
Note the aggressive use of previously acquired
information in formulating new questions to the
user (as in the use of AGE, and SHIP at Point P).
We have found that this aids considerably in
keeping the user focused on the current items of
interest to the system and helps to keep
interactions brief.
Once TED has acquired local information about
a new file, it seeks to relate it to all known
files, including the new file itself. At Points Z
through &amp;+, TED discovers that the *SHIP* file may
be joined with itself. That is, one of the
attributes of a ship is yet another ship (the
escorted ship), which may itself be described in
the same file. The need for this information is
illustrated by the query the user poses at Point
G+.
To better illustrate linkages between files,
the transcript includes the acquisition of a second
file about ship classes, beginning at Point J+.
Much of this dialogue is omitted but, at L+, TED
learns there is a link between the *SHIP* and
*CLASS* files. At M+ it learns the direction of
</bodyText>
<page confidence="0.993824">
160
</page>
<bodyText confidence="0.999791631578947">
this link; at N+ and 0+ it learns the fields upon
which the join must be made; at P+ it learns the
attributes inherited through the link. This
intonation is used, for example, in answering the
query at S+. TED converts the user&apos;s question
&amp;quot;What is the speed of the hod?&amp;quot; into &amp;quot;What is the
speed of the class whose CNAME is equal to the
CLASS of the hoe!?.&amp;quot;
Of course, the whole purpose of the NEW
dialogues is to make it possible for users to ask
questions of their databases in English. Examples
of English inputs accepted by TED are shown at
Points E+ through I+, and S+ and T+ in the
transcript. Note the use of nounâ€”noun
combinations, superlatives and arithmetic.
Although not illustrated, TED also supports all the
available LADDER facilities of ellipsis, spelling
correction, runâ€”time grammar extension and
introspection.
</bodyText>
<sectionHeader confidence="0.944957" genericHeader="method">
V THE PRAGMATIC GRAMMAR
</sectionHeader>
<bodyText confidence="0.931720374999999">
The pragmatic grammar used by TED includes
special syntactic/semantic categories that are
acquired by the NEW dialogues. In our actual
implementation, these have rather awkward names,
but they correspond approximately to the following:
* &lt;GENERIC&gt; is the category for the generic
names of the objects in files. Lexical
properties for this category include the
name of the relevant file(s) and the names
of the fields that can be used to identify
one of the objects to the user. See
transcript Points D and E.
* &lt;ID.VALUE&gt; is the category for the
identifiers of subjects of individual
records (i.e., keyâ€”field values). For
example, for the *SHIP* file, it contains
the values of the NAME field. See
transcript Point E.
* &lt;MOD.VALUE&gt; is the category for the values
of database fields that can serve as
modifiers. See Points J and K.
* &lt;NUM.ATTR&gt;, &lt;SYM.ATTR&gt;, and &lt;BOOL.ATTR&gt; are
numeric, symbolic and Boolean attributes,
respectively. They include the names of
all database fields and their synonyms.
* &lt;+NUM.ADJ&gt; is the category for adjectives
(e.g. OLD) associated with numeric fields.
Lexical properties include the name of the
associated field and files, as well as
information regarding whether the adjective
is associated with greater (as in OLD) or
lesser (as in YOUNG) values in the field.
See Points P, Q and R.
* &lt;COMP.ADJ&gt; and &lt;SUPERLATIVE&gt; are derived
from ONUM.ADJ&gt;.
Shown below are some illustrative pragmatic
production rules for nonlexical categories. As in
the foregoing examples, these are not exactly the
rules used by TED, but they do convey the nature of
the approach.
&lt;S&gt; â€”&gt; &lt;PRESENT&gt; THE &lt;ATTR&gt; OF &lt;ITEM&gt;
what is the age of the reeves
HOW &lt;+NUM.ADJ&gt; &lt;BE&gt; &lt;ITEM&gt;
how old is the youngest ship
&lt;WHDET&gt; &lt;ITEM&gt; &lt;RAVE&gt; &lt;FEATURE&gt;
what leahy ships have a doctor
&lt;WHDET&gt; &lt;ITEM&gt; &lt;BE&gt; &lt;COMPLEMENT&gt;
which ships are older than reeves
</bodyText>
<figure confidence="0.995200666666667">
&lt;PRESENT&gt; â€”&gt; WHAT &lt;BE&gt;
PRINT
&lt;ATTR&gt; â€”&gt; &lt;NUM.ATTR&gt;
&lt;SYM.ATTR&gt;
&lt;BOOL.ATTR&gt;
&lt;ITEM&gt; â€”&gt; &lt;GENERIC&gt;
ships
&lt;ID.VALUE&gt;
reeves
THE &lt;ITEM&gt;
the oldest ship
&lt;MOD.VALUE&gt; &lt;ITEM&gt;
leahy ships
&lt;SUPERLATIVE&gt; &lt;ITEM&gt;
fastest ship with a doctor
&lt;ITEM&gt; &lt;WITH&gt; &lt;FEATURE&gt;
ship with a speed greater than 12
&lt;FEATURE&gt; â€”&gt; &lt;BOOL.ATTR&gt;
doctor / poisonous
&lt;NUM.ATTR&gt; &lt;NUM.COMP&gt; &lt;NUMBER&gt;
age of 15
&lt;NUM.ATTR&gt; &lt;NUM.COMP&gt; (ITEM)
age greater than reeves
&lt;NUM.COMP&gt; â€”&gt; &lt;COMP.ADJ&gt; THAN
OF
&lt;GREATER&gt; THAN
&lt;COMPLEMENT&gt; â€”&gt; &lt;COMP.ADJ&gt; THAN &lt;ITEM&gt;
</figure>
<sectionHeader confidence="0.720826" genericHeader="method">
&lt;COMP.ADJ&gt; THAN &lt;NUMBER&gt;
</sectionHeader>
<bodyText confidence="0.9991218125">
These pragmatic grammar rules are very much
like the ones used in LADDER [2], but they differ
from those of LADDER in two critical ways.
(1) They capture the pragmatics of accessing
databases without forcibly including
information about the pragmatics of any
one particular set of data.
(2) They use syntactic/semantic categories
that support the processes of accessing
databases, but that are domainâ€”
independent and easily acquirable.
It is worth noting that, even when a particular
application requires the introduction of specialâ€”
purpose rules, the basic pragmatic grammar used by
TED provides a starting point from which domainâ€”
specific features can be added.
</bodyText>
<sectionHeader confidence="0.992431" genericHeader="method">
VI DIRECTIONS FOR FURTHER WORK ,
</sectionHeader>
<bodyText confidence="0.999622">
The TED system represents a first step toward
truly portable naturalâ€”language interfaces to
database systems. TED is only a prototype,
however, and much additional work will be required
</bodyText>
<page confidence="0.9912">
161
</page>
<bodyText confidence="0.9682918125">
to provide adequate syntactic and conceptual
coverage, as well as to increase the ease with
which systems may be adapted to new databases.
A severe limitation of the current TED system
is its restricted range of syntactic coverage. For
example, TED deals only with the verbs BE and HAVE,
and does not know about units (e.g., the Waddel&apos;s
age is 15.5, not 15.5 YEARS). To remove this
limitation, the SRI NL group is currently adapting
Jane Robinson&apos;s extensive DIAGRAM grammar [7] for
use in a successor to TED. In preparation for the
latter, we are experimenting with verb acquisition
dialogues such as the following:
&gt; VERB
Please conjugate the verb
(e.g. fly flew flown) &gt; EARN EARNED EARNED
</bodyText>
<sectionHeader confidence="0.7880568" genericHeader="method">
EARN is:
1 intransitive (John dines)
2 transitive (John eats dinner)
3 ditransitive (John cooks Mary dinner)
(Choose the most general pattern) &gt; 2
</sectionHeader>
<bodyText confidence="0.996893152173913">
who or what is EARNED? &gt;a SALARY
who or what EARNS A SALARY? &gt; AN EMPLOYEE
can A SALARY be EARNED by AN EMPLOYEE? &gt; YES
can A SALARY EARN? &gt; NO
can AN EMPLOYEE EARN? &gt; 22
Ok., an EMPLOYEE can EARN a SALARY
What database field identifies an EMPLOYEE? &gt; NAME
What database field identifies a SALARY? &gt; SALARY
The greatest challenge to extending systems
like TED is to increase their conceptual coverage.
As pointed out by Tennant [8], users who are
accorded naturalâ€”language access to a database
expect not only to retrieve information directly
stored there, but also to compute &amp;quot;reasonable&amp;quot;
derivative information. For example, if a database
has the location of two ships, users will expect
the system to be able to provide the distance
between them--an item of information not directly
recorded in the database, but easily computed from
the existing data. In general, any system that is
to be widely accepted by users must not only
provide access to primary information, but must
also enhance the latter with procedures that
calculate secondary attributes from the data
actually stored. Data enhancement procedures are
currently provided by LADDER and a few other handâ€”
built systems, but work is needed now to devise
means for allowing system users to specify their
own database enhancement functions and to couple
these with the naturalâ€”language component.
A second issue associated with conceptual
coverage is the ability to access information
extrinsic to the database per se, such as where the
data are stored and how the fields are defined, as
well as information about the status of the query
system itself.
In summary, systems such as LADDER are of
limited utility unless they can be transported to
new databases by people with no significant formal
training in computer science. Although the
development of userâ€”specifiable systems with
extensive conceptual and syntactic coverage
continues to pose a challenge to research, a
polished version of the TED prototype, even with
its limited coverage, would appear to have high
potential as a useful tool for data access.
</bodyText>
<sectionHeader confidence="0.994925" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.998398408163266">
1. L. R. Harris, &amp;quot;User Oriented Data Base Query
with the ROBOT Natural Language Query System,&amp;quot;
Proc. Third International Conference on Very
Large Data Bases, Tokyo (October 1977).
2. G. G. Hendrix, E. D. Sacerdoti, D. Sagalowicz,
and J. Slocum, &amp;quot;Developing a Natural Language
Interface to Complex Data,&amp;quot; ACM Transactions
on Database Systems, Vol. 3, No. 2 June
1978).
3. G. G. Hendrix, &amp;quot;Human Engineering for Applied
Natural Language Processing,&amp;quot; Proc. 5th &apos;
International Joint Conference on Artificial
Intelligence, Cambridge, Massachusetts (August
1977).
4. G. G. Hendrix, D. Sagalawicz and E. D.
Sacerdoti, &amp;quot;Research on Transportable Englishâ€”
Access Media to Distributed and Local Data
Bases,&amp;quot; Proposal ECU 79-103, Artificial
Intelligence Center, SRI International, Menlo
Park, California (November 1979).
5. R. C. Moore, &amp;quot;Handling Complex Queries in a
Distributed Data Base,&amp;quot; Technical Note 170,
Artificial Intelligence Center, SRI
International Menlo Park, California (October
1979).
6. P. Morris and D. Sagalovicz, &amp;quot;Managing Network
Access to a Distributed Data Base,&amp;quot; Proc.
Second Berkeley Workshop on Distributed Data
Management and Computer Networks, Berkeley,
California71.11y 1977).
7. J. J. Robinson, &amp;quot;DIAGRAM: A Grammar for
Dialogues,&amp;quot; Technical Note 205, Artificial
Intelligence Center, SRI International
Menlo Park, California (February 1980).
8. H. Tennant, &amp;quot;Experience with the Evaluation of
Natural Language Question Answerers,&amp;quot; Proc.
Sixth International Joint Conference on
Artificial Intelligence, Tokyo, Japan (August
1979).
9. F. B. Thompson and B. H. Thompson, &amp;quot;Practical
Natural Language Processing: The REL System as
Prototype,&amp;quot; pp. 109-168, M. Rubinoff and M. C.
Yovits, eds., Advances in Computers 13
(Academic Press, New York, 1975).
10. D. Waltz, &amp;quot;Natural Language Access to a Large
Data Base: An Engineering Approach,&amp;quot; Proc. 4th
International Joint Conference on Artificial
Intelligence, Tbilisi, USSR, pp:â€”.868 â€”872
(September 1975).
</reference>
<page confidence="0.980888">
162
</page>
<figure confidence="0.928598222222222">
(**User asks
of this symbolic field be used as modifiers?
----------
DEPARTMENT
An example file is
1.). ....
a &gt;4
w .1
. 044 ..,
00 CA 14 V.- V ....
O a).. 41 .1CO
O) 0) 0 g 0 0 ..1 0) 04 to -*0 â€¢ VC
4.1 V 4.1 X 4) I 41 aa 0 V Fl 0
WV 0.40. 4.1 I., 41 VII 4. v. 0
VI C ..10000 0 CO 8 IF ...
,1â€¢1 II
.1.1 co
oo w
4) I. VV
CO I. 0
O CO
4)
41 0 N 1.
CO .0 1.0 4) 0 C.1 I. 1. 0 41 .0
ID CO 0â€¢â€¢â€¢ 47
3 IV WO. 00.-1.001. cri .0 ..4 0 0 0 a. a.
0 0000 V.0 ... 03 F. IF VVI 03 0 a. 0 K &gt;, &gt;.
44 0 0 4.1 10 CT. &gt; F 0 .. .A â€¢ 8 %I ..1 14 V LI la
A I = 00 A â€¢ . â€¢ 40 8:0)I3r A&apos;&apos; 0 VI V
. 04 0. I.
O v v
= u&amp;quot;4 24&amp;quot;F.1112,&apos;S 0 ,.. v 0 CA .0 .. .0 V 8
0 â€¢-â–  U 4) 0 0 .4 fa. C 0
n - Cal a.,
CD C
0 2 0
O 0 â€¢ 4. 1.1 .0 03 CO .0 1 U IF .0 4.1 ok kJ f a
.. â€¢C 8 03 0 0. .. ... 4) .1.1 7 41.4
Pi g 4.1 0) CO CU â€¢â€¢â€¢â–  0. AD 0 / )4 0 .4 ... a) Z
..1 .4 ..1 Da. 0 .0 .4.3 0 0 &gt;, 0 03 7 4) 0) V 0) a) a)
0. Or 0. 0 4) 0 0 0 I. ..) V.4 V114 &apos;4 2 &apos;4 2 t 0 .
0
.. z
0 0
â€¢â€¢ 8.4 0, MI 4. ill a. .e -, w 0 0
O 0.0 0.0 0.0 J.)13 0 V 42 A C.: A 0 er .3 .4 F 0
0 0 0131.4m 14-ocov F F .. v 4. v 44 0 0
VI 0 woo. mo F eFIoso: 13 1. s. o o o: O.
In 2Â° e, ts -410.00.4V 4, 1 . - il 0 04.4- .4
a) .6) ea
.... â€¢â€¢â€¢ al
. .0
A.,. e- A In a)
. l-i IF .4 .. s.â€¢ .4 Ce W 4 1.1 1.4 â€¢ 44
=0. ,..., _40 .....A :1 ...A...
0
V. 04 0. O. 411 0) 4) &amp;quot; 1 I &gt;, 2 0 ... 0 0 .,..
1&apos; 0 0
2 0, 2 0. . 0. 03
I CO â€¢4) 2 VtO 2 4 . t 0 &amp;quot; 1 : .?. &amp;quot; 0 0 &amp;quot; u ..c co 0 no
â€¢ â€¢ â€¢ oo c a, 0
T. 4) 4) ..00 41.4
â€¢ lg6 . 4.4V a) : 000 ..W .4..
1104)0VO 4A ..7)
..1
O I. g I. g .0 0. F
0.. = V 00 00
r.3 3 .3 3
8 71 ,):,&apos; 0 g....Â°. 7. .1 7; w ti, &apos;&apos;&apos; ,i.
el CNI C.1 .0 8 Fl 0 0 0 41 4.1 F CO 7.1 ..g 1 7:* a:
O u..
o 0
4.,
0 e 0 0 .4 0 ..4
4.1 4.1
41 111 4. 10 &gt;1.1 141 4.1 N 0- 0. 0.
0,0 0,.. ,.... ,...
0 .., r- 1. o:
e .1 di 4.8 4. 1. 4/ IF ... I. 4/ CO V0 V0 ...â–  00 2 I
z 0. 0. 0 .... 0. 0 Ig.1 oi F w ...
Fl 0 0 4) 1 CA 4. CO F I+ CD 0 â€¢ FI
01
O U
8 0
01 U
8 0) 1 T W
E. U 0
A 0 0.0 MT)
%. 8
O V 8 0 ir 0 0 RI 0) 0/
,.....&amp;quot;.11.VV20-0-400 00 ,.. 0 ,.. 0 v . = -
-10 P.. .1 Ei, .1
... 3 0 -V CO Ls) = 0 IF &gt; O. 4J 4) u .0 ..0 C C C C
. V . e a -0 ..-â€¢ 4.1 4) .4 4) CA 01
0 0 0 0 i?. 44C/341041%)41.... 4. V C. A 4) er I.â€¢ E. 0 03 0 0
000 CO A: . 1.1 1. .4 0 8 0 v A 45 I) 4. 0 4. .17 w
r. C.4 01 I
000 .4 : 44 0 0. 0 .4
â€¢ 0 U 0 4., 0 0 0 WV
</figure>
<table confidence="0.876545625">
o ,-.
e.- ,.. co
= al
O g 1 2 2 1 o... 01+ oe ri
C3 .0 ...: .0
.., â– -, --.. .. - = â– -â–  &gt; 0 = .400 VA ce col 0 0)&apos;a â€¢ 3
1. 4-1 â€¢1.10..1 7 al 4.1 C C1- 41 41
O 0 .141 tO AD 4. 4) 0 4) 01 C CO .1.1 PF ..â€¢ 1* 44 1:1., I. al CO 3 4 g 21. 6. ...., ,.. 4.
C4 IN 0 0 41 4) C 0 .0 0 I 4.1 I. tU CU 0 41 0 03 O. 413. .4 c::
VI 43 0-.0 e -00 ..., F04)71.1.) 041 Pa. .4 Ph = V 3 &gt;. 00 0 4) 0
= CD = a) e, &gt;, 0 to .... 0. ... 0 u ..... 41 ... 0 0 &gt; ).1 41 CU 41 4)
I. U 1. U
â€¢-I F F .. ...1 CO ...1 Ia ..... {a ./.1
CA Z 413 1.4)0034)7N. â€¢04.4)C00.1 01. W.&amp;quot;&apos;
.0 111 1.1 F 1:4 7 0 .. .0 0 41 0 CI V GI 7 44 0 C 1) C
V. 0d Cs. F 0.0 3.0....03 4).0.0 0 c.c .0 2t ... .0 â€¢ 04 .0 er 0 .0 V .0 V
</table>
<figure confidence="0.835368836538461">
â€¢ â€¢ â€¢ CO 0 .1.1 13 I. 0 ..1 CD .4 0 7 1.1 0 CA ..4 e .1.1 8 w 0)414)0.6)0
..) ..3 X 4.4 -t000cumoâ€¢os.o 4.. 8 40 ...I a 0 01 4/ co V 14 w e. u.
0 4* .0 o. co .. 44 o: 4. 0
0 &gt;. 4. .0
U ...... F, ..a A ..0 (-i 4.1 A U F. .4 O. F 0 IF CO
z 0 a
The name of the new file is (type file name) )
I
00
E-â€¢
to introduce new
EXAMPLE TED TRANSCRIPT
DOC ESCORTED.SHIP
Welcome to TED! For instructions please type
*********** ***** ***TRANSCRIPT STARTS HERE ******* *** ****** ****
[**User asks
05 0 0 0 0 VI
â€¢ s â€¢ â€¢ â€¢ â€¢
fa. ON cf1 In
Â§ 1
â€¢ â€¢
P. VI
r.
â€¢-â–  03 Ca CO 0
.4 â€¢14
4J â€¢â€¢â€¢â€¢â€¢ 0 â€¢ 0
âœ“II 4.1 â€¢ &gt;
..1
.00i .40 4.1
... 0
0 w
4 ... .
IV C l I Q
..
âœ“ II 0.1
O ..6.1 V VV .-. â€¢.) a. 4.0
T1
.4 0
2 414.. V U 0 .0
0 0 4r. 0 0
âœ“ ...) 0 .-I .44)4
.4 U 43. 41 C u 03
.). 4) CO ai 0 .3&gt;4
..., 4) A 0 ... 0
tw A 0 443.3 .) 03 4
O 0 ....&apos; al P.
00 4100
4)
LI &gt; 1 14* t0.. t .0 I.
4
03 ..1 .4V* 0) 0
C 441. V 0 .0
âœ“ 0 1â– 1 .0 4. 13 I. &gt;.
âœ“ 4.. VA &apos;4 2 i. 0 0 .
V. .CU ..-.
00 0 V 14 z e .. . .
. ,.. ...., - ,,, , . . .
...., ..â€ž, .., . o VV
âœ“ al 0.4 IA 444* 0, r4 0
3.44. w .4 0) 41.4 .V V0
0.... ... 0 to a. 8 0 0)
..... 0 ... 0
â€¢â€¢â–  = 000 i ... 1 0
.0 . 414)
ea to 1...
0
0 0 CI) 0..&amp;quot;t a..i., a; 1.. e
0: o VII
V.4
I.
A
1. a: .4 g 0: .. V eo co el
03 I. 7 1 144 0 OC 1 ... 41
0. CD a) 4. WV
A 01 0 V
440 ..... 8
- .4 0.&apos;:Â° P,
0&gt; 4,03 ....9 A
I A. N U Z 4./ 4 OD
II 0 0 C .44 41.4
100 .40 .4V. 844
In C 03 VII 41)) .-4 &gt; 14
.: CC 0) v .0 0
*8 130. .,â€˜Â°
O.&apos;.I.-I
0) 0 ..0 e0 i. 0
..
0.â–  â€¢0 Ila 4
..&amp;quot;&apos;... [a g V3-4 036. 0) .0 4) 1
01 0.
4.) 01 44
.4 ..4 4.â€¢
44 0 4, 0. 3. 0 1.) 01 0 In .4 .0 .
.4 A ).â€¢ 41 0 IF â€¢ .444 1â– .
.14 0 41.444 414-&apos; V. 01 LI
0 v, .34- ..... 0 44
CA 0 &gt;. I. 0 Z .0 1+ F O.
laM ......&amp;quot; V. â€º. fal&apos;&apos; â€¢ â€¢ .. U .0 4.1
U 7 0 0..
V .4 01 ,-1 kw ... 0 0. (..,
â€ž...131 0.2 i 4.1 ..., .0i,
u a F oos.â€¢ 09
F ou e â€¢â€¢ 0) co V0 .4 03 V T. V
44 03 to
</figure>
<page confidence="0.934252">
.4
</page>
<equation confidence="0.842603666666667">
J., F F4 Fl
V. &apos;0 F 0 In
.4 13 0 I C
000300)
03
.0 .0 ()I 0 V 44 11 &apos;... &lt;
t-4 ..4
V.
4) I 0 =
E. A 3 4, E. 0 .4 .Z1 A U U â€¢-. cal
nouns or
.0 40 U I VI V. C.D
</equation>
<page confidence="0.961821">
163
</page>
<figure confidence="0.983489918918919">
.....
Z.).... ....... Ca. .... a. 4. 4
... â€¢ 5.4 0 r-â€¢ F F 4
-.
-51 4 .L. *&gt;, Cl) 4
EIJ coâ€¢ = 4) â€¢
4 01 6, Ca) 2. 01 Cl)
,...03 LC
I. â€¢ 01 ..) al C..1 F a &gt; E. ...
O &lt;0 .0 7 Ed =
Co CoCo0 Er Cl) P.â€¢=la Cl) o â€¢=0)
al â€¢-â€¢ 0, 4 03 Cl) = Co
: câ€¢-â€¢ V .. &apos;Co 00.... 0. LE.1 &apos;Co a
P. a. 0 F 0 F &gt; 0 4. a. Co
-Co, a 0100 Cl) 0 F RI
F ... â€¢-â€¢â€¢ 00 Cl) 0+ V)
o r.i; .0 csâ€¢ c r o
.
o.
a00
as ,.â€¢ .J 4 F
Ms ...
a = o
En .0 EA Er. 0 0 0
u = 0 0. Fs RI Z â€¢ â€¢-â€¢
6 0 F 04 Co C nuca Le; a; o: â– A
5, &apos;A I Fg. r, L&apos;t 0, 0, - .c
4 a. Ci. g Cd 0 0
F 0 e- Z
F .0 .... J.. la O.. 1.4
â€¢ F (0)01 = 4.1
Cl)
C.) rs. 0
CO
C . a V) Co)4 v)
CO 3 . al 4 e 4 al 4 -a
Cl) ao
00..
a. &lt; -
I. 2C &lt; E 00-0 -.Val) Z
0
.f. 2 c .0 .02 .t1 g .- .. O.
-1 4 41 Cl) C cg &gt; cn ..1
C) Ca Z 0) a) 0 = 7 La F al F &lt;
00
6 F F 0 .41 0 al al Z 0
. .... ...... .4 = al 0 Z
rs =
Cr. C c..1 v) a f...
CC ,, = 0 Cl)0 ilt La i
.0 W la .* .14 1.. &lt; col CL Z L
. F EN 4.1 .
.400
C u 0 . 3 0. 011) = Z&apos;Â° 1 4
1 .., 0.1 0.
0 0. = esi 4)
0 F ---. e a) a. Cl) =
00-C ...â€¢ c 4
41 .0 01
Col
O Z En â€¢11. 44 &lt;&apos;C a...&apos; Cn
....., 0. 0... C..) 0)
0. ... a ..... c...) -1 0 F Cl) I. Cl)
&lt;
c.) .Ca EIE 4 ca
E. 0/ ca F Cl) F 0 01 I.- 0 C.) .4 00 ....1 00 -1
O ., = a = a = rt1 Cl) 0â€¢â€¢ =
01 Ca C/3 4 cfc = &lt;0
C Cl) a C5 le -
0 = &apos;C.-&apos; Cal = C.) F L. 0.Z Z
4. 0-10 0 11) 0- 00-. 00
rl al 2)1 .2 aÂ°. c,
c.c â€¢.-&amp;quot;, 0- - 41 co) 2
C0 3 .0 4 L. ...
E. E.
41 00 00 Co I. &lt; -â€¢ 0 â€¢ &lt; &lt;
Cl) I. &apos;&apos;&apos;&apos;141 : .......
Cr
6. â€¢â– â– â€¢ I.
a 0 VI 0
Z on 0. 41 co ca: &lt; &lt; 4 .5 ....1
...a -1
7 .0 a = C.) Cl)
03 al E. RC 0 U 0. ..c...). 2 2 ..).1 f_.=
c 5 1.1 c..1
cel Ca -2 5. G-
oa ..â€¢ =
a .-, cezzocn
Cu al 3 00 CÂ±&apos; 0 V col 0.10.10.3ZZ
&gt;, A .0 Cl) Z Cl) A = C IC .1 33
E. F 500 -7 30)&apos;.-
S
0
Cl) ..... = E. 00
= 0( 0. rn a
01). 1-â–  a. 444
Cl) 4 = 41 0) P. 4
= 0.1)) *01 ..... a.
E. F â€¢ F 0 .4
=0 000 ... =
Cl. cn La 3 it. CO
O 41 F Ca L i 4
V 40 C G1A v
Ca 0 .1 11 .
. 011.) 00 = CO
= co Cl) ..-, ..... Col P. Cl)
Cl) 01.3 e- 4 Cl) &apos;CC
&lt; Ca CO ,.....2
0 GI Ca a 0. r&amp;quot;.â€¢ 8 00
Cl) .0 .0 F .-. .. of ,0 F ..â€¢
E. C ...) .0
)0 a - ,,, 31 2.1 &apos;.&apos;S Â§ f, -
O 0 0 - = .0 - .0
C.) - Co0 w
0, 0. - 0
Cl) 4). .-1 105
4 a al
Ca 0.0 3o0
= .. CR 00
E.. = 01 C).*
Cl) 4/
0.. a).) 100
C &apos;-&apos;00 &apos;8
C.) Cl)Z
CD 010
&lt; X
&lt; ..0 03 C
....
Ca 0010 0
=
F .5 r
41 ta EA
.0 0. 4 Ca P.
Cl) L ..... ..... -. 6
.4 0( 00
41 F a &lt;
E. ). * 4 4.)
&lt; 03 0. 0... &apos;CO
= F I. ;a C=
M a/ = =00
RI cof 03 &apos;k&apos;
A .0 4 11 = &lt;
111 3..&amp;quot;-&apos;
Cl. En3 7
O EZ al 0.
4) â€¢â€¢â€¢ &gt; â€¢-â€¢â€¢ 41
Ca .0 c0 - cm
O Co al g ,-/ â€¢â€¢
</figure>
<equation confidence="0.9201526">
EC .. ma a) a
Co 0 CA a â€¢-â€¢ ..
Cl) 0 0 n. 0. 441 a
C., 17 1.4 1. 4 0
g Cl) 4) = = 0. cr
C.) Cl) U)0-1 4)
La &lt; 1 * =
&gt; &gt;. â€¢-â€¢ Cl) C.
.6 Z al a z
&lt; z m...... c.)
La Cl) Ca 10.
= Z RI .., -1 -01.) a
0..â€¢ = 01 F
F CO CI
co) .2 10z I.
</equation>
<figure confidence="0.915799855072464">
F Li 4) &lt; 0100 4.1
3 = .00 3
L. a) al 100) a
S . 05 0
4 C-3. 4
= c =
A .0 = A 01.) .0
..0 2 F j... C.).) F
o&apos;â€¢â€¢â€¢
.t
CC) -. a Co V
-. - 0110 â€¢ I. al F L Co 1000 e.4
a a c) 4) ..-E. 40 0.) F F 0 41 , eI 0 C 01 â€¢
4C 4 Co 11 &gt; P. -C 7 al 4.1 Cl 0 .0 â€¢-â€¢ 0. LI
â€¢ z . 0)0 o za Co Quo c-ni. 4., C.) â€¢
&gt; 0 F &gt; 0 F a a 4) 0. 4. u â€¢ -CC 7 V 4) 01 0 .2 I
a e LC 01 .... 0 .0 . - -, I. 4) .0 ,I = C.4 =
0 â€¢â€¢â€¢â–  . . â€¢â€¢â€¢I Co u a Co a) .vc ... w cn â€¢ Z
XI u a) f-.7. A a 01 .. 44 0 Cr .0 C 0 0 0. &apos;).1) C .
C ..0 Cl) â€¢-â€¢ a a 41 V Cl)Q ---, a 4) .... 01 4.1 â€¢ = 4) C F u
a a a ,.&apos; CO I. ... 2. 0 .14 a .. a Co o., a .... .0 al Co A
F al 4) 0 .0 4) 0 CI C.) F -01 u 0 ..0 1410 F Cl) 41
-â€¢ 0. LA ..4 a = El al ,./ C 7000â€¢4 al 1 col .C. F u 0 .4-1 II
41 0. V 0 0. 11 0-, a w .e (I) Co Co .6.1 %Li CU Ca .0 e &lt;.-
X 7 * 3 4) a CO Ca &lt;0 â€¢ E.-, Co Co al) .0 F 0. 41 0 Cl) 7 0 Co
= 11 â– -. Cl) . 0 4) a 0 a) F &gt;. C a,/ a F .0 7% V La to C ..c
0 7.3 0 C.) .... Cl) C..) 10 ,... â€¢ 4) ... F al = u 4. -C 0) 4)
4/ 1. &gt; F .. 0 V 0) 0 Co Co E. F ... 00 0 Co) 0 F Co SI a V a)
4) 0 ea) 0 F â€¢ V al F E. is .-1 a â€¢â€¢â€¢â€¢ u .0 Co 11) .-1 .0 ..1 Co
0) Co 4). C ..I V CO a ao a, e e 4/ 4) u 0) F
0. Ca .. 4) .. 0 61 4) CTI 0 7.4 â€¢ :a. F Y a a a 0 CI: ...I
â€¢ .&apos;:12 ::: a &apos;0&apos; Q -
0 41 4.0 9
O 10 .. 0 Cl) a C.
â€¢.â€¢ a 0 e4 C ... VI al
a co ... 44
0 0 V câ€¢ 0 4.. 0 Eu 0
0J F Ja
âœ“ a F. F 0 .0 C..) .0 .0 .0 C a . Co a F. . 4 0
I. 0 a â€¢ NI. a o .
a. o co a c o Co a) 4) .0 7.1 -0
O 0 .â€¢ 4) &apos; L F 00 Co Co Co = Ea 0-1 O. 7 .0 CO 0 Co a .0 Co Co col 41 C
Co 1.. 0.)- 0. 04 a Cl) .-.1 Lo 0 Cl) â€¢â€¢â€¢â€¢ = = ../ 0. V .0 . 41 0. ..4
el 0) F Co 4 4) Co 0 C/3 Co So 4) .. .0 V u al La Co .0 31 .
CU CO 4) V IsJ 0)10 IC . aa .0 4 L 0 C)&gt; .. = F -a .0 0 U â€¢
G. = -. .0 â€¢ .
I, u 0 51 F 00 F . co 41 4) co) I. a a Co 4) .0 Co&apos; Co
4) C .1 0 0 41 4) .0 I. â€¢ 0 a . . &gt; .0 41
* * 0 = 0 -C al u .0 4) F c0 . 0 ea F .0 a 0 a) .. Co .. 3 F .0
.-. .... F F. 0 u a â€¢â€¢â€¢ Co 0 -â€¢ C) co &amp;quot;4 4 Ca 4) col Co 0 44 a 4) Co
I. 1 Cl) .-.
E., 4)
oâ€¢ &gt;. 0 Cl) 41 44 J.,,, 0,
0 10 04 .. 0 1. a F 17 .-.
0. GC CI 4.1 7 Co 7 0
ca 0 0
a F 0 F 0
111 3 L. 0 C -.1 A 2 0 a â€¢â€¢â€¢â€¢ al .= CC. ca. 0) .0 = F 1-1 0 4) CU .0 U = 0 4. &lt;0 RI
/EI 44 0. C a F .0 a {a = u C.1 +.â€¢ C u &gt; &gt;
C) 01 e. Co Co 2 - 0. Cl) Cl) .. C 4) a, 4)
&gt; -1 a) 000 .... a a a r.&apos; : 1..7,&apos; g g &amp;quot;.. a * A 4 Cl) Co 41 Co 7 . a .. al &gt;
0 = 41 a 0 CO a a Cl) 0 F .4 a a. ...â€¢ 4, F. 1. 0 0. .... ...I Co a
.0 Co .0 F 1 1 01 Cl) . co a aâ€¢ .e = 1. 0 -4 ... .1 0 4) c..) Cl a Cl) Cl&apos;. Yr ...I 0
a u eL C.. .. a &gt;. Ci Col u 0 1.1.11 . .. . 0 0 Co ...... a .0
.. 5. a 0 c :4 . ,c c Co Cl) a 4 11)...1.0 Co . 0 .0 V 0 Cf. cu a) 4
Co. F ca ... 0 .3 03. 10 41 v Lo 0. V â€¢-â€¢ 14 Co 4. Co 14 MI a 0-1 V ..0 al Cl.
Li 0 ..., Co = .. 00 .0 W 4.1 0 a ca 0 Ca F = 0) Co ....,
A A a RI 0 a 0....2 Co Cl â€¢ 0 = .-. &lt;1 0) 41 = V 0 (5 . a a Cl) F &gt; ..
â€¢ c.) &gt; .c a) &lt; co 0 .c a c..) v, ... e e Co â€˜a .., 0 Cl) ... ..e .. - . a. Co Co Cl)
</figure>
<reference confidence="0.7641995">
... ... .r, .. Co co C.; ... z Co 4.1 CA 4 44 F 4) .4 Co 0 Cl) Co 0 Cl) Co 3. 0. 0 ... 0 al 41 Z
F. 3, .. C. CO 0 1. a) 0 .0 Ca E. F Cl) Co .. Co &gt;
Cl) la 4) 5. * 11 0 0. 4/ A Co ,./ 41 0 â€¢ 4) 0 Co .. â€¢ Co Cl) 00 10 â€¢-â€¢ = 00 C = 0 a A
â€¢ Co .. E. .0 4) Cl) 1-1 7 V .4 .0 â€¢-â€¢ &apos;Co &amp;quot;. 41 0 0,1 4) 0 &lt; 00 C 0 Cl) C 4) I. .= ..
Cl. C Co Co 1.6 4) = = .. ... I. Co A ..o Co Cl) a ..e Cl) 0. 40 0.. .. EL 4J â€¢ ... &apos;V C wall â€¢â€¢â€¢â€¢â€¢
. 4) a 0.&apos; 01 CO 0 a a 4. L C4 Co V &gt;, a 0 0 .0 Co 0 , i 0 F 0,1 F. Co 0
&lt; 11 â€¢ F 55 â€¢ 500 . os 0 Oa CO 0 10 0 E. V CI .. V 013 Cl) F 4) /-â€¢ Z
...... a 1010 .. CD 4.) ca 0 01I.â€¢ a al .... F a 001F Fcca cu.... F Law.. a
CO 5 o! 2..&amp;quot;; t - 2 it&apos; .._1 Co ti 0 g f, -0 FA 1 24 .1 &apos;4 :2 - &amp;quot;&apos; w Â°&apos; f&apos;,1 8 `-i, - C., 3 f. 1,&apos;3&apos;
- Co ,0 .. â€¢ c., . Co- ..c. 0 Co 8 = 0 ,.. ,.... ... CD Co 0 4., .= ..0 .0
</reference>
<figure confidence="0.978308644268775">
(o) = &gt; S &gt;4
.01 00 C.)
â€¢
0.
4)
.0 â€¢ 01
0.1
Co
U .1 -â€¢
4.1 a â€¢
&gt;Ca
al 4
o
Co 01
4) 0 It
41 1010
0. C â€¢
3. 01 &apos;90 4)
10 ea 1.
00.001
â€¢ C
A 0110
1. OS 41
&gt;. 0 4) a)
O .40010
400)0â€¢ 00100)
10
47
Co 4)
Co 1.3 1.
*-aa
O 0 0
â€¢
.0 0 Co
C 0
a I) 2
g 44 11.1
U lOOlO
00.0
F
I.
â€¢ =
4001
C 4 LE 0)
-2 :41 -F.
Re
0-
01 â– -â– 
cz
...â€¢ g )..1G a./ Co 9 0 0 C/1 Co c* 01 0 Co a a u .10 .0 -0 0. 01 .0 u 4/ -â€¢ 0 Cl) I 4) Cl)
0 a 00 0 as 4)C C.) Ca) 4) a al EJ 0 &gt;, c.) V a C 11 U al .1 Ca -. a a) C.)I Ca
O 0 0 .0 00 - In a 04 4. ... I. 0 Cl -C &lt;0 41 40 .0 4/ â€¢â€¢â€¢ .. 0 C .= = C .0 C â€¢â€¢â€¢ 0 &gt;.â€¢ 4 3% A
= 2, .c ... 3 ... Co A Cl) C.) F a. 0. a 0 Co Co a .0 0 /1 00 -4 ao 03 F E. En A F 2 F Co 03 â€¢â€¢â€¢â€¢â€¢ 11 E. e4
164
the subjects
..w. ....
a ..t 4 * .0 C 4
CO 0. 441. CA * In 6) CII 0 0
+. .* a) * C) co 44 . Cl] .1 â€¢
41 13 CO 5
O 4) CA 4 .0 .1.4 0)
4) .0 â€¢ =
.-4
a) 7 1 co t&apos;s t
...&apos;
I. 6. .... *c CA 4 ..... .4 oda. O 0 ad lw
A.. WI WI Z A 44 03 0 0 04 sO CA 4) CU
. sr 6. 0
= 43 41 1 0 06
P3 Cl] o. to C.) 0.â€¢ â€¢-, ct.t ../ 03
0 4) .0
10 .... 44
A.1 Z 4
CA ..lt .1.&apos; V; 8
N.044 .0 cn 6. a.
4 CA 0 p., * .4 A &apos; . + N CA CA 3 a.&amp;quot; 0 0.
0 CA C.) 0
;- 7 -.)
0. 44. Z
0) I VÂ° = a
it LI 1 cn WI
1â– 1 t.) CA .4 4 V 0 . CA U 1 &apos;4,7 .2 ..9 73
64 03 03. .. 4) CI. 03 Cl In 0 * O N ddd dâ€¢I
I.. â€¢C E. -2. , We 117 Z
O WI 4) 0 7. 04 * Ir o. 41.
Cl]an 0 P. 17 C 47 &apos;-41 44 4. â€¢ P.
O 44 .4 At 6 CA . 413 C.) C 0.0&gt;Ellit
.0 0 C A 1), 1 4.1
6.4 .1 03 0
r. 6.â€¢ wd
0 0 es Cl] ...
Cl] = â€¢-â€¢ 0 ... 0
4) 0
U Ow 0 . e- I.. cj ...â–  :A W 1, A &lt; 0 0 .. CO
64 43 . â€¢â€¢â€¢â€¢ CO 0 144 C o : 0 . . 16 4 4 AV 7.â€¢ CO
.0 1 = to to * .-i
3 CA 0 4.4 PI, U â€¢ â€¢ 010
. 0 .4 0 CO 131 4, .4 â€¢â€¢â€¢
. C0
76 0 to .... I.I
dil 04&apos;&amp;quot;, = C.) 6...â€¢ 41. 1.4 m ....
e 41
C &apos;05 C 03 0. C,I CA 44 0 0 CA 7 41 14
CA â€¢ â€žc a. 4.) = .0 41 14 0 41&apos;O 41 0. 4) M. It .0 04 CA Ce .0 0
Cl] 0 U IA CA 64 m CA 4 0.â€¢ . )11C 4) A) 3
n 0.3 0 43 .0 41 46 . . 1.1 0 0 C) ..... (A 0 = 4 CO
412 4) 0. 00 .... . U 4) 01 .0 0 4. 17 h4 In .0 ,,,,,c.).661.1 C
U LZ 0041 CO 4) 4.1 I. 61 1.) 4 C thl .5 ..) 0
0 .0 i. 0 . 0 00 .0 0. 14 41 40 4 01 6, Câ€¢4 04
04 Z . 0. 14 . 0 C
0 . .0 444 . .1 3., 2 .2 .4 g - 2. .;., g â€¢... 0... ... ...
3 .0 ..) 0 I d&amp;quot; 4.1 .. PA . v., 03 CA ,0 u 4 4) 7
N Cl] c .0
co z c) 13 4) 0 11 2 03 PA = C 06 Z â€¢101 44 CA .
4) In 0 . = 0 14 . 7 â€¢ 40 â€¢ = 44 Cl] 0 .. 44 0 ti) 0 6 1 ; .&amp;quot;
- .00,00,... 0.-. 0
...I . 3 I.1 Y.i .0 Iâ€¢I 0 1 i&apos; to 4 A&apos; A E. 4.,
0 .4 C . . .0 00 C/1 CA U 0 CO
4) 0 . â€¢ 1. 4 4) a 0 .
U . 2 t &apos;;&apos; In &apos;C 4) 2 &amp;&apos; 4 1 &apos;&apos; .2 * &apos; .3
,... ,,, - - .... 5
0. 03 U 4) A. C 4) 61 e a
In 44.4 LI 46) . (.7 a/ 6.1
O 14 0 V 0 .. . .0 Cle 0 0 0 0 0 * .0 C.) 0 42 â€¢-â–  *C.) 54103
I.. â€¢â€¢ $1. 0 In C = .-1 J.) c.) 41 Cl] v L0 &apos;-&apos;.4 z 0. 0 4) ,...â€¢ 0 CA . C
0. 41 413 03 In 64 Cl] o 47 Cl] da U 4) 41 . CA 0. 4) ta 6 I. ..
. 0 6 4/ II4 I.. 0 .4 = .-. as 47 0 0. 0
1.â€¢ .... 03 ..e C.) )., 4) . 0
CV .1 ...1 43 â€¢C1 .0 0 04 0 41..]
4t t7 0 ft 2 .f * In I . .... -. .0 4.1
V IdW 411 4.1 41) 0
O 0. C * 0 4.) .0 C It * C 01 -2- 0 &lt; &gt; 7 ... .0 0
,,,,,, (.., ,..&amp;quot; 0 ...... ... â€¢.) .... @
43 0 U 41
.
0 â€¢â€¢â€¢â€¢
. .
0 = Z .. 0 rhl = FC7 1-&apos; 2 r, ) r u
2 _ _. _
7 u, . it u .7 to i 4+ ...I .... Z (-. 1.â€¢ 4., &amp;quot;&apos;41
... .4 ... â€¢-â–  Cl] 0 C 3 C 41 CO CA .2 - , 0 .- ce .0 -, ..- ..., -
-, , id 4.4 a-1 0 4, W. -7
3 .7 7 â€˜,.. 4/1 0 0
0 C.3 0J â€¢C 0 . 0 4)
Cr
11
7
t7 6... CU Ma .
s - 41 N Ad
N 40. 8 - 2 &apos;,Z, :Z1
4, N Cl] 0 12,4 4
...I Z Ei 0 t...) â€¢â– â– 1 WI E.
O 4) U 7 * CO = 13, RI g r3 11. `,2, 5. #4 â€ž , m...
LL. 03 1.1 co * CA
41 ,8
o.. .0 U N ..0 V 0) 0) I 5 CO = 03 r. 6
...I 0.3 0) 1.1 0 .4 0. I 4) 01 a) 6) &apos;^&apos;â€¢â€¢ n an
o 4) 64 . C 76 06 O. A 0 -C.;&amp;quot;3 C.) A t&apos;13 CT) .C.7
= 4..0 4 .4 &amp;quot;4 C .4 5&apos;3. A 3.0 .0 * * Z â– -â€¢ 0. .0 Z * *
go 5&apos; (.) . 0 WI .. Wâ€¢ 4-, Os . . 5 ...... ..... -o C.) 6, 0.)
ESCORTED.SHIP
0.113641130
4 .4
0 0 0 0
A. 0&apos;
. C r
0
-41414141 41 0 0 4 .461 CO . â–ª &apos;V
4 * * * it * 4 4 4 * 41 00 4) .1.4 .7&apos;
4141
0 0 0 0 o
* 0. * â€¢â€¢â€¢â–  â€¢ 17 &apos;SU â€¢â€¢ .4 c
.41 1 41
Â° &amp;quot;&amp;quot;.1 V 0
0) 4 IC 1.1 0.0.44)44.44) CO 1 0) 0 0 .... 4)
.4 41 CA 00 * C13 0 1.1 .4 .0 C ow . C CA or . .4
.-t
- * 0 it 0. *1 4.) ... 41 . .1 . . 0 CA 0 4.1 C6
0 TA&apos; 1 0 i 7g 7.1 1L -,
- , - 41 0 . . 17 ..0 4) 161 4) . 0. 44
* l 4 * 5, 0 0 h. 4. . . 03 .f) &apos;a&apos; IV 8 0 &apos;4&apos; =
3 . 0 , 0 . .0 - 5 CO 1. In .
4) * ICG â€¢-4 4t .0 â€¢J â€¢ &amp;quot;I 0 0 â€¢C 0 0 Id. (a 0 4 0
C 4 03 4C 0.â€¢ 0 CIA 03 %I WI C.) W4
4 10 4 4 â€¢ 4) C.) . 0. 7 .5 0 4) . 0 CO 2 It Cl] se Cl]
4) * 4,/z 44, 4â€ž.44. .â€ž,1.4 ..â€ž:, ,,) .0 ,,,, .,..) 05 0 0 64 . $44 0 ... .
0 C .... . = Cl) .-. Cl]
.... 4.4 â€¢â€¢â€¢â€¢ 0 4.1
U 4. 6 hi .4 .c â€¢ 0 44 .4 4c
z .4 7E tA Oh Ch e0 * ,.4 .0 Cl] 0 0 D., . 0 L, u a) 4
-a 4 o â€¢ 4, 01 03 o) A ... .o 03 c c3 o â€¢â€¢â–  U 0.44 0â€¢00.1 C.)
041 3 .-14)4C 03030406.002 WI ,..4)&amp;quot; odi1CÂ° t40. C..1.4 &apos;&amp;quot;e
I. it CA 0 U * 4.) 000. .0
74 I 01&apos; &gt;.11 &apos;..2. ..e
- a . - Cl)0.
a.) * 6 &gt; 2 &gt; â€¢â€¢ ..4 4) A 2 i &apos; V&amp;quot;, 4 Â° 2 . 5 Â°
C 4. .10 41 It CO .004)145 .0 ...4 Cl] 0 0 0.
CLI
... 4t * 0 â€¢ 7&gt;filel...
I. Â°&apos; 2 1 .3 al .C.: E &apos;...,&apos; . 64
04 0)403C....UO3). .
* CA 03 .4 #4 0 C er 4 WI 4 . 0 .0 CO .0 0
.4 4) Os C.3 .0 14 4.1 Cl] 40 ... .131 â€˜64
0 4t LA 03 â€¢ â€¢ â€¢ 0 4) * U C) 0.4 0. CY Z 01
4) 4 I fli.3 N â€¢. .2 . 414 0 1, 00 TI44 0 0 0 WI CA 0
Cl] &amp;quot; I. 2 . Cl] g 0 .0 0 .. .0
4.,
* en en en 1.1 0 4 46.4 0 4) C/I 14
...., 5 * 4141 â€¢ .0 Sâ–  CA 0 2 4) C.) 0 4)
CO 4 C..)
31.
.0 4 .â€¢ a CA 0 da 0 &amp;quot;. 0 . 4) CA AA 03 ..0 U S. 2. 8 &amp;quot;2 ::
8 : 0 di) O.
4. C.7 4 0
0 P. I-3 sl Z IC .61 o) â€¢-â€¢ e co .o .4 Cil .
C.) 0 â€¢14 C 4.1 C.) 03 .0 ..0 ...CO ,;â–  p.....1 u ...g
C CA 0 ..0 It 7 C CI. C0 .0 44
...â–  VI 0 U 0 97
* 0 .-.1 1... 000 . CY 4J * 3.41 0 ...3 â€¢â€¢â– â–  41&gt;&apos; 0 0 0 0 7 U 0
&apos;441 64 . U
O 4 4C 0 .0 C 0 11) .. 4) 4) El â€¢C . 4
0) It 0. 4 . .â€¢ 43 =
VW 0.14 N .Â°3 UÂ° 03
of It 0 * ...t 14 0 I. ... 1.4 0. 0 CA ..0 3 * 2 ...t
0 .0 .0
,g 4) or 4t 4) * .0 044 .4 0, 1.. 0
..c 0 * 7. In ...1 0 ... 0 44 C-4 â€˜... * ..5&apos;n 2 t. .5 Cl)&apos;ci. a&apos; .t: VI E.,&gt;. *cw * oc
It 4 4 o
* aa
6) at 41 CA 44 1.1 . 41 6, OA ...a O. ..., ... 2 6 3 .... .-1 10. 0 CO
-41 41 C.) . 17. to
4 43â€¢.. &apos;a : &amp;quot; 1 : g : u 2 : g g &apos;.7? g og &apos;id0 0
, .0 01 CA 4.1 . Â° Â° 11 C&apos; DA V â€¢ 0 r) .. ; 4&apos; r. - ,8 In
, 0 , 0 0 0 OW U 4 Cl]
.... z
3 ca 7, 8
,
, 0 1 .., 5.) * CA 44 ,2 A., A w4) ..C., ....4) Cl] ..Câ€ž, ,_,4) un ,,,
it -4 Z 0 I. 43 0 .0 4t 6 4) C 0 01 44 44 . .... 2 z 4 0
, - t., &lt; ,,, ...2 so ... 4,4t t.1 ...... 44 1r ..4 C) 0 Nu ..e. CO l&apos;n
.1t o.. ..) .4 0.
4d WI 4 4 w 6) e â€¢ 4 4) .C1 C 1 &apos;....4 &amp;quot;)4! al .....1 &amp;quot; &apos;241 4.1 &amp;quot;
O 0 44 T. 0
4t 3 4.) 0 * . All (7 8 t.â€¢ to . .1 OW 40 la v.. ..0 &apos;4 44 ..0 6. .. â€¢â€¢â€¢ at 2
4 4) 11 C 1: 4 2 Z5 2 0 S 8 2 &amp;quot; &apos;&amp;quot; 5 .0 2 0 &amp;quot; 2 Â° &amp;quot; C)
* C 4! i&apos;l i: 4Â° -.., 44
O 00 0 00
4 0 . 4 .4.4 03 0) .1 00 CO CA C o A
4 0 0 4 . In 4. 7 . 1+ 6. C 6141 .1 &apos;&apos;&apos;0 C .. .0 C 47Â° n &apos;&apos;&apos; &amp;quot;12) 44 V 03
:1 g CV 00 0 C C/3 0 01 0 t) . .0
3 0 * 1, -I *C al Cl 41 CO 0 * 4.1 &amp;quot;I LI .4 N 14 .
â€¢â€¢ 0 .4 0 .4 .UCA.4
4 * ..0 4 0 LI 0 0 C 4 CM 4) 4) LI 0 061 0.1 4 4 ...4) 411,4 C: â€˜,.....1.3, .....;
</figure>
<reference confidence="0.56684425">
3 4 IC . .0 C.) &apos;V XI U 4) â€¢17 4) CA CA .0 V 4) . 0) . .
43 14 61 10 14 CA 40 a! 14 1. U 14 C./ W ...) 140 d. .: ,
= . 0 - 0 C ...4 El ).) 4) &apos;(.4 ..) 0 0
4)00001.0043o. ...1 u s.
^ o aâ€¢ a CO -C 0 6. ..0 0) U 0 0 03 .21 WO 0W WO .&apos; 4)
.0 0 C.) 0 03
CO 0 lâ€¢ a. la ... co ...1 LI W 4 V 0. .... LI 0 .4 0 A [. . 4 A . 4
0
</reference>
<page confidence="0.997971">
165
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.487875">
<title confidence="0.998262">TRANSPORTABLE NATURAL-LANGUAGE INTERFACES TO DATABASES</title>
<author confidence="0.998845">by Gary G Hendrix</author>
<author confidence="0.998845">William H Lewis</author>
<affiliation confidence="0.999989">SRI International</affiliation>
<address confidence="0.997777">333 Ravenswood Avenue Menlo Park, California 94025</address>
<abstract confidence="0.998495879056046">Over the last few years a number of application systems have been constructed that allow users to access databases by posing questions in natural languages, much as English. When used in the restricted domains for which they have been especially designed, these systems have achieved reasonably high levels of performance. Such systems as LADDER [2], PLANES [10], ROBOT [1], and REL [9] require the encoding of knowledge about the domain of application in such constructs as database schemata, lexicons, pragmatic grammars, and the like. The creation of these data structures typically requires considerable effort on the part of a computer professional who has had special training in computational linguistics and the use of databases. Thus, the utility of these systems is severely limited by the high cost involved in developing an interface to any particular database. This paper describes initial work on a methodology for creating natural-language processing capabilities for new domains without the need for intervention by specially trained experts. Our approach is to acquire logical schemata and lexical information through simple interactive dialogues with someone who is familiar with the form and content of the database, but unfamiliar with the technology of natural-language interfaces. To test our approach in an actual computer environment, we have developed a prototype system called TED (Transportable English Datamanager). As a result of our experience with TED, the NL group at SRI is now undertaking the development of a much more ambitious system based on the same philosophy [4]. II RESEARCH PROBLEMS Given the demonstrated feasibility of language-access systems, such as LADDER, major research issues to be dealt with in achieving transportabledatabase interfaces include the following: * Information used by transportable systems be cleanly divided into databaseindependent and database-dependent portions. * Knowledge representations must be established for the database-dependent part in such a way that their form is fixed and applicable to all databases and their contentreadily acquirable. * Mechanisms must be developed to enable the system to acquire, information about a particular application from nonlinguists. THE TED We have developed our prototype system (TED) to explore one possible approach to these problems. In essence, TED is a LADDER-like natural-language processing system for accessing databases, combined with an &amp;quot;automated interface expert&amp;quot; that interviews users to learn the language and logical structure associated with a particular database and that automatically tailors the system for use with the particular application. TED allows users to create, populate, and edit their own new local databases, to describe existing local databases, or even to describe and subsequently access (as in databases. Most of TED is based on and built from components of LADDER. In particular, TED uses the LIFER parser and its associated support packages [3], the SODA data access planner [5], and the FAH file access manager [6]. All of these support packages are independent of the particular database used. In LADDER, the data structures used by these components were hand-generated for a particular database by computer scientists. In TED, however, they are created by TED&apos;s automated interface expert. Like LADDER, TED uses a pragmatic grammar; but TED&apos;s pragmatic grammar does not make any assumptions about the particular database being accessed. It assumes only that interactions with the system will concern data access or update, and that information regarding the particular database will be encoded in data structures of a prescribed form, which are created by the automated interface expert. The executive level of TED accepts three kinds of input: questions stated in English about the data in files that have been previously described to the system; questions posed in the SODA query language; single-word commands that Initiate dialogues with the automated interface expert. THE INTERFACEEXPERT TED&apos;s mechanism for acquiring information about a particular database application is to conduct interviews with users. For such interviews to be successful, The work reported herein was supported by the Advanced Research Projects Agency of the Department of Defense under contracts N00039-79-C-0118 and N00039-80-C-0645 with the Naval Electronic Systems Command. The views and conclusions contained in this document are those of the authors and should not be interpreted as representative of the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency of the U.S. Government. 159 * There must be a range of readily understood questions that elicit all the information needed about a new database. * The questions must be both brief and easy to understand. * The system must appear coherent, eliciting required information in an order comfortable to the user. * The system must provide substantial assistance, when needed, to enable a user to understand the kinds of responses that are expected. All these points cannot be covered herein, but the sample transcript shown at the end of this paper, in conjunction with the following discussion, suggests the manner of our approach. Strategy A key Strategy of TED is to first acquire information about the structure of files. Because the semantics of files is relatively well understood, the system thereby lays the foundation for subsequently acquiring information about the linguistic constructions likely to be used .in questions about the data contained in the file. One of the singleâ€”word commands accepted by the TED executive system is the command NEW, which initiates a dialogue prompting the user to supply information about the structure of a new data file. The NEW dialogue allows the user to think of the file as a table of information and asks relatively simple questions about each of the fields (columns) in the file (table). For example, TED asks for the heading names of the columns, for possible synonyms for the heading names, and for information about the types of values (numeric, Boolean, or symbolic) that each column can contain. The heading names generally act like relational nouns, while the information about the type of values in each column provides a clue to the column&apos;s semantics. The heading name of a symbolic column tends to be the generic name for the class of objects referred to by the values of that column. Heading names for Boolean columns tend to be the names of properties that database objects can possess. If a column contains numbers, this suggests that there may be some scale with associated adjectives of degree. To allow the system to answer questions requiring the integration of information from multiple files, the user is also asked about the interconnections between the file currently being defined and other files described previously. C. Examplesfrom a In the sample transcript at the end of this paper, the user initiates a NEW dialogue at Point A. The automated interface expert then takes the initiative in the conversation, asking first for the name of the new file, then for the names of the file&apos;s fields. The file name will be used to distinguish the new file from others during the acquisition process. The field names are entered into the lexicon as the names of attributes and are put on an agenda so that further questions about the fields may be asked subsequently of the user. At this point, TED still does not know what type of objects the data in the new file concern. as its next task, for words that might be used as generic names for the subjects of the file. Then, at Point E, TED acquires information about how to identify one of these subjects to the user and, at Point F, determines what kinds of pronouns might be used to refer to one of the subjects. (As regards ships, TED is fooled, because ships may be referred to by &amp;quot;she.&amp;quot;) TED is programmed with the knowledge that the identifier of an object must be some kind of name, rather than a numeric quantity or Boolean value. Thus, TED can assume a priori that the NAME field given in Interaction E is symbolic in nature. At Point G, TED acquires possible synonyms for NAME. TED then cycles through all the other fields, acquiring information about their individual semantics. At Point H, TED asks about the CLASS field, but the user doesn&apos;t understand the question. By typing a question mark, the user causes TED to give a more detailed explanation of what it needs. Every question TED asks has at least two levels of explanation that a user may call upon for clarification. For example, the user again has trouble at J, whereupon he receives an extended explanation with an example. See T also. Depending upon whether a field is symbolic, arithmetic or Boolean, TED makes different forms of entries in its lexicon and seeks .to acquire different types of information about the field. For example, as at Points J, K and Y, TED asks whether symbolic field values can be used as modifiers (usually in nounâ€”noun combinations). For arithmetic fields, TED looks for adjectives associated with scales, as is illustrated by the sequence OPqR. Once TED has a word such as OLD, it assumes MORE OLD, OLDER and OLDEST may also be used. (GOODâ€”BETTERâ€”BEST requires special intervention.) Note the aggressive use of previously acquired information in formulating new questions to the user (as in the use of AGE, and SHIP at Point P). We have found that this aids considerably in keeping the user focused on the current items of interest to the system and helps to keep interactions brief. Once TED has acquired local information about a new file, it seeks to relate it to all known files, including the new file itself. At Points Z through &amp;+, TED discovers that the *SHIP* file may be joined with itself. That is, one of the attributes of a ship is yet another ship (the escorted ship), which may itself be described in the same file. The need for this information is illustrated by the query the user poses at Point G+. To better illustrate linkages between files, the transcript includes the acquisition of a second file about ship classes, beginning at Point J+. Much of this dialogue is omitted but, at L+, TED learns there is a link between the *SHIP* and files. At learns the direction of 160 this link; at N+ and 0+ it learns the fields upon which the join must be made; at P+ it learns the attributes inherited through the link. This intonation is used, for example, in answering the query at S+. TED converts the user&apos;s question &amp;quot;What is the speed of the hod?&amp;quot; into &amp;quot;What is the speed of the class whose CNAME is equal to the CLASS of the hoe!?.&amp;quot; Of course, the whole purpose of the NEW dialogues is to make it possible for users to ask questions of their databases in English. Examples of English inputs accepted by TED are shown at Points E+ through I+, and S+ and T+ in the transcript. Note the use of nounâ€”noun combinations, superlatives and arithmetic. Although not illustrated, TED also supports all the available LADDER facilities of ellipsis, spelling correction, runâ€”time grammar extension and introspection. THE GRAMMAR The pragmatic grammar used by TED includes special syntactic/semantic categories that are acquired by the NEW dialogues. In our actual implementation, these have rather awkward names, but they correspond approximately to the following: * &lt;GENERIC&gt; is the category for the generic names of the objects in files. Lexical properties for this category include the name of the relevant file(s) and the names of the fields that can be used to identify one of the objects to the user. See transcript Points D and E. * &lt;ID.VALUE&gt; is the category for the identifiers of subjects of individual records (i.e., keyâ€”field values). For example, for the *SHIP* file, it contains the values of the NAME field. See transcript Point E. * &lt;MOD.VALUE&gt; is the category for the values of database fields that can serve as modifiers. See Points J and K. * &lt;NUM.ATTR&gt;, &lt;SYM.ATTR&gt;, and &lt;BOOL.ATTR&gt; are numeric, symbolic and Boolean attributes, respectively. They include the names of all database fields and their synonyms. * &lt;+NUM.ADJ&gt; is the category for adjectives (e.g. OLD) associated with numeric fields. Lexical properties include the name of the associated field and files, as well as information regarding whether the adjective is associated with greater (as in OLD) or lesser (as in YOUNG) values in the field. See Points P, Q and R. * &lt;COMP.ADJ&gt; and &lt;SUPERLATIVE&gt; are derived from ONUM.ADJ&gt;. Shown below are some illustrative pragmatic production rules for nonlexical categories. As in the foregoing examples, these are not exactly the rules used by TED, but they do convey the nature of the approach. &lt;S&gt; â€”&gt; &lt;PRESENT&gt; THE &lt;ATTR&gt; OF &lt;ITEM&gt; what is the age of the reeves HOW &lt;+NUM.ADJ&gt; &lt;BE&gt; &lt;ITEM&gt; how old is the youngest ship &lt;WHDET&gt; &lt;ITEM&gt; &lt;RAVE&gt; &lt;FEATURE&gt; what leahy ships have a doctor &lt;WHDET&gt; &lt;ITEM&gt; &lt;BE&gt; &lt;COMPLEMENT&gt; which ships are older than reeves &lt;PRESENT&gt; â€”&gt; WHAT &lt;BE&gt; PRINT &lt;ATTR&gt; â€”&gt; &lt;NUM.ATTR&gt; &lt;SYM.ATTR&gt; &lt;BOOL.ATTR&gt; &lt;ITEM&gt; â€”&gt; &lt;GENERIC&gt; ships &lt;ID.VALUE&gt; reeves THE &lt;ITEM&gt; the oldest ship &lt;MOD.VALUE&gt; &lt;ITEM&gt; leahy ships &lt;SUPERLATIVE&gt; &lt;ITEM&gt; fastest ship with a doctor &lt;ITEM&gt; &lt;WITH&gt; &lt;FEATURE&gt; ship with a speed greater than 12 &lt;FEATURE&gt; â€”&gt; &lt;BOOL.ATTR&gt; doctor / poisonous &lt;NUM.ATTR&gt; &lt;NUM.COMP&gt; &lt;NUMBER&gt; age of 15 &lt;NUM.ATTR&gt; &lt;NUM.COMP&gt; (ITEM) age greater than reeves &lt;NUM.COMP&gt; â€”&gt; &lt;COMP.ADJ&gt; THAN OF &lt;GREATER&gt; THAN &lt;COMPLEMENT&gt; â€”&gt; &lt;COMP.ADJ&gt; THAN &lt;ITEM&gt; &lt;COMP.ADJ&gt; THAN &lt;NUMBER&gt; These pragmatic grammar rules are very much like the ones used in LADDER [2], but they differ from those of LADDER in two critical ways. (1) They capture the pragmatics of accessing databases without forcibly including information about the pragmatics of any one particular set of data. (2) They use syntactic/semantic categories that support the processes of accessing databases, but that are domainâ€” independent and easily acquirable.</abstract>
<intro confidence="0.751194">It is worth noting that, even when a particular</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>L R Harris</author>
</authors>
<title>User Oriented Data Base Query with the ROBOT Natural Language Query System,&amp;quot;</title>
<date>1977</date>
<booktitle>Proc. Third International Conference on Very Large Data Bases,</booktitle>
<location>Tokyo</location>
<marker>Harris, 1977</marker>
<rawString>1. L. R. Harris, &amp;quot;User Oriented Data Base Query with the ROBOT Natural Language Query System,&amp;quot; Proc. Third International Conference on Very Large Data Bases, Tokyo (October 1977).</rawString>
</citation>
<citation valid="true">
<authors>
<author>G G Hendrix</author>
<author>E D Sacerdoti</author>
<author>D Sagalowicz</author>
<author>J Slocum</author>
</authors>
<title>Developing a Natural Language Interface to Complex Data,&amp;quot;</title>
<date>1978</date>
<journal>ACM Transactions on Database Systems,</journal>
<volume>3</volume>
<marker>Hendrix, Sacerdoti, Sagalowicz, Slocum, 1978</marker>
<rawString>2. G. G. Hendrix, E. D. Sacerdoti, D. Sagalowicz, and J. Slocum, &amp;quot;Developing a Natural Language Interface to Complex Data,&amp;quot; ACM Transactions on Database Systems, Vol. 3, No. 2 June 1978).</rawString>
</citation>
<citation valid="true">
<authors>
<author>G G Hendrix</author>
</authors>
<title>Human Engineering for Applied Natural Language Processing,&amp;quot;</title>
<date>1977</date>
<booktitle>Proc. 5th &apos; International Joint Conference on Artificial Intelligence,</booktitle>
<location>Cambridge, Massachusetts</location>
<marker>Hendrix, 1977</marker>
<rawString>3. G. G. Hendrix, &amp;quot;Human Engineering for Applied Natural Language Processing,&amp;quot; Proc. 5th &apos; International Joint Conference on Artificial Intelligence, Cambridge, Massachusetts (August 1977).</rawString>
</citation>
<citation valid="true">
<authors>
<author>G G Hendrix</author>
<author>D Sagalawicz</author>
<author>E D Sacerdoti</author>
</authors>
<title>Research on Transportable Englishâ€” Access Media to Distributed and Local Data Bases,&amp;quot;</title>
<date>1979</date>
<booktitle>Proposal ECU 79-103, Artificial Intelligence Center, SRI International,</booktitle>
<location>Menlo Park, California</location>
<marker>Hendrix, Sagalawicz, Sacerdoti, 1979</marker>
<rawString>4. G. G. Hendrix, D. Sagalawicz and E. D. Sacerdoti, &amp;quot;Research on Transportable Englishâ€” Access Media to Distributed and Local Data Bases,&amp;quot; Proposal ECU 79-103, Artificial Intelligence Center, SRI International, Menlo Park, California (November 1979).</rawString>
</citation>
<citation valid="true">
<authors>
<author>R C Moore</author>
</authors>
<title>Handling Complex Queries in a Distributed Data Base,&amp;quot;</title>
<date>1979</date>
<booktitle>Technical Note 170, Artificial Intelligence Center, SRI International Menlo Park,</booktitle>
<location>California</location>
<marker>Moore, 1979</marker>
<rawString>5. R. C. Moore, &amp;quot;Handling Complex Queries in a Distributed Data Base,&amp;quot; Technical Note 170, Artificial Intelligence Center, SRI International Menlo Park, California (October 1979).</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Morris</author>
<author>D Sagalovicz</author>
</authors>
<title>Managing Network Access to a Distributed Data Base,&amp;quot;</title>
<date>1977</date>
<booktitle>Proc. Second Berkeley Workshop on Distributed Data Management and Computer Networks,</booktitle>
<location>Berkeley, California71.11y</location>
<marker>Morris, Sagalovicz, 1977</marker>
<rawString>6. P. Morris and D. Sagalovicz, &amp;quot;Managing Network Access to a Distributed Data Base,&amp;quot; Proc. Second Berkeley Workshop on Distributed Data Management and Computer Networks, Berkeley, California71.11y 1977).</rawString>
</citation>
<citation valid="true">
<authors>
<author>J J Robinson</author>
</authors>
<title>DIAGRAM: A Grammar for Dialogues,&amp;quot;</title>
<date>1980</date>
<tech>Technical Note 205,</tech>
<institution>Artificial Intelligence Center, SRI International Menlo Park,</institution>
<location>California</location>
<marker>Robinson, 1980</marker>
<rawString>7. J. J. Robinson, &amp;quot;DIAGRAM: A Grammar for Dialogues,&amp;quot; Technical Note 205, Artificial Intelligence Center, SRI International Menlo Park, California (February 1980).</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Tennant</author>
</authors>
<title>Experience with the Evaluation of Natural Language Question Answerers,&amp;quot;</title>
<date>1979</date>
<booktitle>Proc. Sixth International Joint Conference on Artificial Intelligence,</booktitle>
<location>Tokyo, Japan</location>
<marker>Tennant, 1979</marker>
<rawString>8. H. Tennant, &amp;quot;Experience with the Evaluation of Natural Language Question Answerers,&amp;quot; Proc. Sixth International Joint Conference on Artificial Intelligence, Tokyo, Japan (August 1979).</rawString>
</citation>
<citation valid="true">
<authors>
<author>F B Thompson</author>
<author>B H Thompson</author>
</authors>
<title>Practical Natural Language Processing: The REL System as Prototype,&amp;quot;</title>
<date>1975</date>
<booktitle>Advances in Computers 13</booktitle>
<pages>109--168</pages>
<editor>M. Rubinoff and M. C. Yovits, eds.,</editor>
<publisher>Academic Press,</publisher>
<location>New York,</location>
<marker>Thompson, Thompson, 1975</marker>
<rawString>9. F. B. Thompson and B. H. Thompson, &amp;quot;Practical Natural Language Processing: The REL System as Prototype,&amp;quot; pp. 109-168, M. Rubinoff and M. C. Yovits, eds., Advances in Computers 13 (Academic Press, New York, 1975).</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Waltz</author>
</authors>
<title>Natural Language Access to a Large Data Base: An Engineering Approach,&amp;quot;</title>
<date>1975</date>
<booktitle>Proc. 4th International Joint Conference on Artificial Intelligence,</booktitle>
<pages>868--872</pages>
<location>Tbilisi, USSR,</location>
<marker>Waltz, 1975</marker>
<rawString>10. D. Waltz, &amp;quot;Natural Language Access to a Large Data Base: An Engineering Approach,&amp;quot; Proc. 4th International Joint Conference on Artificial Intelligence, Tbilisi, USSR, pp:â€”.868 â€”872 (September 1975).</rawString>
</citation>
<citation valid="false">
<authors>
<author>Co co C</author>
</authors>
<journal>z Co</journal>
<volume>4</volume>
<marker>C, </marker>
<rawString>... ... .r, .. Co co C.; ... z Co 4.1 CA 4 44 F 4) .4 Co 0 Cl) Co 0 Cl) Co 3. 0. 0 ... 0 al 41 Z F. 3, .. C. CO 0 1. a) 0 .0 Ca E. F Cl) Co .. Co &gt; Cl) la 4) 5. * 11 0 0. 4/ A Co ,./ 41 0 â€¢ 4) 0 Co .. â€¢ Co Cl) 00 10 â€¢-â€¢ = 00 C = 0 a A â€¢ Co .. E. .0 4) Cl) 1-1 7 V .4 .0 â€¢-â€¢ &apos;Co &amp;quot;. 41 0 0,1 4) 0 &lt; 00 C 0 Cl) C 4) I. .= ..</rawString>
</citation>
<citation valid="false">
<authors>
<author>Cl</author>
</authors>
<title>Co A ..o Co Cl) a ..e Cl) 0. 40 0.. .. EL 4J â€¢ ... &apos;V C wall â€¢â€¢â€¢â€¢â€¢ . 4) a 0.&apos; 01 CO 0 a a 4. L C4 Co V &gt;,</title>
<journal>C Co Co</journal>
<booktitle>Co 0 , i 0 F 0,1 F. Co 0 &lt; 11 â€¢ F 55 â€¢ 500 . os 0 Oa CO</booktitle>
<volume>1</volume>
<pages>1--3</pages>
<marker>Cl, </marker>
<rawString>Cl. C Co Co 1.6 4) = = .. ... I. Co A ..o Co Cl) a ..e Cl) 0. 40 0.. .. EL 4J â€¢ ... &apos;V C wall â€¢â€¢â€¢â€¢â€¢ . 4) a 0.&apos; 01 CO 0 a a 4. L C4 Co V &gt;, a 0 0 .0 Co 0 , i 0 F 0,1 F. Co 0 &lt; 11 â€¢ F 55 â€¢ 500 . os 0 Oa CO 0 10 0 E. V CI .. V 013 Cl) F 4) /-â€¢ Z ...... a 1010 .. CD 4.) ca 0 01I.â€¢ a al .... F a 001F Fcca cu.... F Law.. a CO 5 o! 2..&amp;quot;; t - 2 it&apos; .._1 Co ti 0 g f, -0 FA 1 24 .1 &apos;4 :2 - &amp;quot;&apos; w Â°&apos; f&apos;,1 8 `-i, - C., 3 f. 1,&apos;3&apos;</rawString>
</citation>
<citation valid="false">
<journal>CD Co</journal>
<booktitle>d. .: , = . 0 - 0 C ...4 El ).) 4) &apos;(.4 ..) 0 0 4)00001.0043o. ...1 u s. ^ o aâ€¢ a CO -C</booktitle>
<volume>0</volume>
<pages>03</pages>
<marker></marker>
<rawString>- Co ,0 .. â€¢ c., . Co- ..c. 0 Co 8 = 0 ,.. ,.... ... CD Co 0 4., .= ..0 .0 3 4 IC . .0 C.) &apos;V XI U 4) â€¢17 4) CA CA .0 V 4) . 0) . . 43 14 61 10 14 CA 40 a! 14 1. U 14 C./ W ...) 140 d. .: , = . 0 - 0 C ...4 El ).) 4) &apos;(.4 ..) 0 0 4)00001.0043o. ...1 u s. ^ o aâ€¢ a CO -C 0 6. ..0 0) U 0 0 03 .21 WO 0W WO .&apos; 4) .0 0 C.) 0 03</rawString>
</citation>
<citation valid="false">
<journal>A [. . 4 A .</journal>
<booktitle>CO 0 lâ€¢ a. la ... co ...1 LI W 4 V 0. .... LI</booktitle>
<volume>0</volume>
<marker></marker>
<rawString>CO 0 lâ€¢ a. la ... co ...1 LI W 4 V 0. .... LI 0 .4 0 A [. . 4 A . 4</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>