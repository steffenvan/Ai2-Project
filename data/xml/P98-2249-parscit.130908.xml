<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000012">
<title confidence="0.997276">
A Cognitive Model of Coherence-Driven Story Comprehension
</title>
<author confidence="0.997302">
Elliot Smith
</author>
<affiliation confidence="0.997891">
School of Computer Science, University of Birmingham,
</affiliation>
<address confidence="0.513765">
Edgbaston, Birmingham B15 2TT. United Kingdom.
</address>
<email confidence="0.856776">
email: e.smithacs.bham.ac.uk
</email>
<sectionHeader confidence="0.987898" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999706846153846">
Current models of story comprehension have
three major deficiencies: (1) lack of experimen-
tal support for the inference processes they in-
volve (e.g. reliance on prediction); (2) indif-
ference to &apos;kinds&apos; of coherence (e.g. local and
global); and (3) inability to find interpretations
at variable depths. I propose that comprehen-
sion is driven by the need to find a representa-
tion that reaches a &apos;coherence threshold&apos;. Vari-
able inference processes are a reflection of differ-
ent thresholds, and the skepticism of an individ-
ual inference process determines how thresholds
are reached.
</bodyText>
<sectionHeader confidence="0.998991" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99985828125">
Recent research in psychology maintains that
comprehension is &apos;explanation-driven&apos; (Gra,esser
et al., 1994) and guided by the &apos;need for coher-
ence&apos; (van den Broek et al., 1995). The com-
prehender&apos;s goal is construction of a more-or-
less coherent representation which includes ex-
planations for and relations between the story&apos;s
eventualities. This representation is generated
via inferences, which enrich the representation
until it reaches the threshold specified by the
comprehender&apos;s coherence need (van den Broek
et al., 1995).
By contrast, early models of comprehension
emphasised its expectation-driven nature: pre-
diction of future eventualities, followed by sub-
stantiation of these predictions (DeJong, 1979).
The inference processes described in these early
models are still implemented in many contem-
porary systems.
One problem with these models is their fail-
ure to account for experimental evidence about
inferences: predictive inferences are not gener-
ated at point x in the story, unless strongly sup-
ported by the story up to point x (Trabasso and
Magliano, 1996); in addition, predictive infer-
ences not immediately confirmed by the story
after point x are not incorporated into the rep-
resentation (Murray et al., 1993). While it is
difficult to define &apos;strong support&apos; or &apos;confirma-
tion&apos;, it is clear that an overly-assumptive model
does not reflect mundane comprehension.
A second problem is the failure of these mod-
els to account for differential establishment of
local and global coherence. Local coherence
holds between &apos;short sequences of clauses&apos;, while
global coherence is measured in terms of &apos;over-
arching themes&apos; (Graesser et al., 1994). McK-
oon and Ratcliff (1992) maintain that only local
coherence is normally established during com-
prehension (the minimalist hypothesis). Others
state that readers &apos;attempt to construct a mean-
ing representation that is coherent at both local
and global levels&apos; (the constructionist hypothe-
sis) (Gra,esser et al., 1994). Script-based mod-
els allow globally-coherent structures to be con-
structed automatically, contradicting the mini-
malist hypothesis; the inclusion of promiscuous
predictive inferences also contradicts the con-
structionist hypothesis.
A third problem is that previous models deny
comprehension&apos;s flexibility. This issue is some-
times side-stepped by assuming that compre-
hension concludes with the instantiation of one
or more &apos;primitive&apos; or &apos;top-lever patterns. An-
other approach is to apply lower-level patterns
which account for smaller subsets of the input,
but the aim is still to connect a story&apos;s first even-
tuality to its last (van den Broek et al., 1995).
This paper describes a model which treats
inferences as coherence generators, where an
inference&apos;s occurrence depends on its coher-
ence contribution. Unusual inference-making,
establishment of local and global coherence,
and variable-precision comprehension can be
</bodyText>
<page confidence="0.996257">
1499
</page>
<bodyText confidence="0.961428">
described within this framework.
</bodyText>
<sectionHeader confidence="0.70918" genericHeader="introduction">
2 Coherence and Satisficing
</sectionHeader>
<bodyText confidence="0.999815944444445">
A schema is any function which maps inputs
onto mental representations. It contains slots
which can be instantiated using explicit in-
put statements, or implicit statements derived
via proof or assumption. Instantiated schemas
form the building blocks of the comprehender&apos;s
representation. A comprehender has available
both &apos;weak&apos; schemas, which locally link small
amounts of input (e.g. causal schemas); and
&apos;strong&apos; schemas, which globally link larger sec-
tions of input (e.g. scripts).
All schemas generate &apos;connections of intelligi-
bility&apos; which affect the coherence of a represen-
tation (Harman, 1986). Coherence is a common
&apos;currency&apos; with which to measure the benefit of
applying a schema. Instead of requiring that a
top-level structure be instantiated, the system
instead applies schemas to produce a represen-
tation of sufficient &apos;value&apos;. This process can be
naturally described as abduction, or &apos;inference
to the best explanation&apos; (Ng and Mooney, 1990).
Previous natural-language abduction systems
can form more-or-less coherent representations:
for example, by halting comprehension when
assumptions start to reduce coherence (ibid.).
However, these systems still have a fixed &apos;cut-
off&apos; point: there is no way to change the criteria
for a good representation, for example, by re-
quiring high coherence, even if this means mak-
ing poorly-supported assumptions. By treating
coherence as the currency of comprehension, the
emphasis shifts from creating a &apos;complete&apos; rep-
resentation, to creating a satisficing one. (A
satisficing representation is not necessarily op-
timal, but one which satisfies some minimal con-
straint: in this case, a coherence threshold.)
</bodyText>
<sectionHeader confidence="0.998521" genericHeader="method">
3 Coherence-Driven Comprehension
</sectionHeader>
<bodyText confidence="0.9676605625">
In this section, I outline some general princi-
ples which may attenuate the performance of a
comprehension system. I begin with the general
definition of a schema:
—&gt; I.
where Cl, ..., cn are the elements connected by
I. The left-hand side of a schema is its condition
set, and the right-hand side represents the inter-
pretation of those conditions in terms of other
concepts (e.g. a temporal relation, or a corn-
pound event sequence). During each processing
cycle, condition sets are matched against the set
of observations.
At present, I am developing a metric which
measures coherence contribution with respect to
a schema and a set of observations:
</bodyText>
<equation confidence="0.988307">
C = (V x U) — (P x S)
</equation>
<bodyText confidence="0.999978333333333">
where C = coherence contribution; V = Cov-
erage; U = Utility; P = Completion; and S =
Skepticism. This metric is based on work in
categorisation and diagnosis, and measures the
similarity between the observations and a con-
dition set (Tversky, 1977).
</bodyText>
<subsectionHeader confidence="0.999177">
3.1 Coverage and Completion
</subsectionHeader>
<bodyText confidence="0.999994533333333">
Coverage captures the principle of conflict res-
olution in production systems. The more ele-
ments matched by a schema, the more coherence
that schema imparts on the representation, and
the higher the Coverage. By contrast, Com-
pletion represents the percentage of the schema
that is matched by the input (i.e. the complete-
ness of the match). Coverage and Completion
thus measure different aspects of the applica-
bility of a schema. A schema with high Cov-
erage may match all of the observations; how-
ever, there may be schema conditions that are
unmatched. In this case, a schema with lower
Coverage but higher Completion may generate
more coherence.
</bodyText>
<subsectionHeader confidence="0.99936">
3.2 Utility
</subsectionHeader>
<bodyText confidence="0.999994705882353">
The more observations a schema can explain,
the greater its coherence contribution. Utility
measures this inherent usefulness: schemas with
many conditions are considered to contribute
more coherence than schemas with few. Util-
ity is independent of the number of observa-
tions matched, and reflects the structure of the
knowledge base (KB). In previous comprehen-
sion models, the importance of schema size is
often ignored: for example, an explanation re-
quiring a long chain of small steps may be less
costly than a proof requiring a single large step.
To alleviate this problem, I have made a com-
mitment to schema &apos;size&apos;, in line with the no-
tion of &apos;chunking&apos; (Laird et al., 1987). Chunked
schemas are more efficient as they require fewer
processing cycles to arrive at explanations.
</bodyText>
<page confidence="0.908237">
1500
</page>
<subsectionHeader confidence="0.994507">
3.3 Skepticism
</subsectionHeader>
<bodyText confidence="0.999673">
This parameter represents the unwillingness of
the comprehender to &apos;jump to conclusions&apos;. For
example, a credulous comprehender (with low
Skepticism) may make a thematic inference that
a trip to a restaurant is being described, when
the observations lend only scant support to this
inference. By raising the Skepticism parameter,
the system may be forced to prove that such
an inference is valid, as missing evidence now
decreases coherence more drastically.&apos;
</bodyText>
<sectionHeader confidence="0.997268" genericHeader="method">
4 Example
</sectionHeader>
<bodyText confidence="0.765483666666667">
Skepticism can have a significant impact on the
coherence contribution of a schema. Let the set
of observations consist of two statements:
</bodyText>
<construct confidence="0.882468833333333">
enter(john,restaurant), order(john,burger)
Let the KB consist of the schema (with Utility
of 1, as it is the longest schema in the KB):
enter (Per, Rest), order(Per, Meal),
leave(Per, Rest) -&gt;
restaurantvisit(Per, Meal, Rest).
</construct>
<bodyText confidence="0.601064">
In this case, C = (V x U) - (P x S), where:
</bodyText>
<equation confidence="0.979707">
NombsgerrvigronbsscerovvaeTied ons = 3
Coverage(V) =
Utility(U) =1
Completion(P) = cN•oldibteiroxfucnannicalit:ihed,
Skepticism(S) =
</equation>
<bodyText confidence="0.975552">
Therefore, C = 1, with leave(john, restau-
rant) being the assumption. If S is raised to
1, C now equals 1, with the same assumption.
Raising S makes the system more skeptical, and
may prevent hasty thematic inferences.
</bodyText>
<sectionHeader confidence="0.999579" genericHeader="method">
5 Future Work
</sectionHeader>
<bodyText confidence="0.989182230769231">
Previous models of comprehension have relied
on an &apos;all-or-nothing&apos; approach which denies
partial representations. I believe that chang-
ing the goal of comprehension from top-level-
pattern instantiation to coherence-need satis-
faction may produce models capable of produc-
ing partial representations.
One issue to be addressed is how coherence
is incrementally derived. The current metric,
and many previous ones, derive coherence from
a static set of observations. This seems im-
plausible, as interpretations are available at any
point during comprehension. A second issue is
&apos;Skepticism is a global parameter which &apos;weights&apos; all
schema applications. Local weights could also be at-
tached to individual conditions (see section 5).
the cost of assuming various conditions. Some
models use weighted conditions, which differ-
entially impact on the quality of the represen-
tation (Hobbs et al., 1993). A problem with
these schemes is the sometimes ad hoc charac-
ter of weight assignment: as an antidote to this,
I am currently constructing a method for de-
riving weights from condition distributions over
the KB. This moves the onus from subjective
decisions to structural criteria.
</bodyText>
<sectionHeader confidence="0.973255" genericHeader="method">
References
</sectionHeader>
<listItem confidence="0.684668107142857">
G.F. DeJong. 1979. Prediction and substanti-
ation: A new approach to natural language
processing. Cognitive Science, 3:251-273.
A.C. Graesser, M. Singer, and T. Trabasso.
1994. Constructing inferences during narra-
tive text comprehension. Psychological Re-
view, 101(3):371-395.
G. Harman. 1986. Change in View. MIT Press,
Cambridge, MA.
J.R. Hobbs, M.E. Stickel, D.E. Appelt, and
P. Martin. 1993. Interpretation as abduction.
Artificial Intelligence, 63(1-2):69-142.
J.E. Laird, A. Newell, and P.S. Rosenbloom.
1987. Soar: An architecture for general in-
telligence. Artificial Intelligence, 33:1-64.
G. McKoon and R. Ratcliff. 1992. Infer-
ence during reading. Psychological Review,
99(3):440-466.
J.D. Murray, C.M. Klin, and J.L. Myers. 1993.
Forward inferences in narrative text. Journal
of Memory and Language, 32:464-473.
H.T. Ng and R.J. Mooney. 1990. On the role
of coherence in abductive explanation. In
Proceedings of the 8th AAAI, pages 337-342,
Boston, MA, July-August.
T. Trabasso and J.P. Magliano. 1996. Con-
scious understanding during comprehension.
Discourse Processes, 21:255-287.
</listItem>
<bodyText confidence="0.939478111111111">
A. Tversky. 1977. Features of similarity. Psy-
chological Review, 84:327-352.
P. van den Broek, K. Risden, and E. Husebye-
Hartmann. 1995. The role of readers&apos; stan-
dards for coherence in the generation of infer-
ences during reading. In R.F. Lorch, Jr., and
E.J. O&apos;Brien, editors, Sources of Coherence in
Reading, pages 353-373. Lawrence Erlbaum,
Hillsdale, NJ.
</bodyText>
<page confidence="0.987606">
1501
</page>
<title confidence="0.379893">
Tree-based Analysis of Simple Recurrent Network Learning
</title>
<table confidence="0.91555075">
Ivelin Stoianov
Dept. Alfa-Informatica, Faculty of Arts, Groningen University, POBox 716, 9700 AS Groningen,
The Netherlands, Email:stoianov@letrug.n1
1 Simple recurrent networks for natural
</table>
<subsectionHeader confidence="0.847229">
language phonotactics analysis.
</subsectionHeader>
<bodyText confidence="0.94493772368421">
In searching for a connectionist paradigm capable of
natural language processing, many researchers have
explored the Simple Recurrent Network (SRN) such
as Elman(1990), Cleermance(1993), Reilly(1995)
and Lawrence(1996). SRNs have a context layer
that keeps track of the past hidden neuron
activations and enables them to deal with sequential
data. The events in Natural Language span time so
SRNs are needed to deal with them.
Among the various levels of language proce-
ssing, a phonological level can be distinguished. The
Phonology deals with phonemes or graphemes — the
latter in the case when one works with orthographic
word representations. The principles governing the
combinations of these symbols is called phonotactics
(Laver&apos;1994). It is a good starting point for
connectionist language analysis because there are
not too many basic entities. The number of the
symbols varies between 26 (for the Latin
graphemes) and 50 *(for the phonemes).
Recently, some experiments considering
phonotactics modelling with SRNs have been carried
out by Stoianov(1997), Rodd(1997). The neural
network in Stoianov(1997) was trained to study the
phonotactics of a large Dutch word corpus. This
problem was implemented as an SRN learning task —
to predict the symbol following the left context given
to the input layer so far. Words were applied to the
network, symbol by symbol, which in turn were
encoded orthogonally, that is, one node standing for
one symbol (Fig.1). An extra symbol (&apos;#&apos;) was used
as a delimiter. After the training, the network
responded to the input with different neuron
activations at the output layer. The more active a
given output neuron is, the higher the probability is
that it is a successor. The authors used a so-called
optimal threshold method for establishing the
threshold which determines the possible successors.
This method was based on examining the network
for Dutch, and up to at most 100 in other languages.
response to a test corpus of words belonging to the
trained language and a random corpus, built up from
random strings. Two error functions dependent on a
threshold were computed, for the test and the
random corpora, respectively. The threshold at
which both errors had minimal value was selected as
an optimal threshold. Using this approach, an SRN,
trained to the phonotactics of a Dutch monosyllabic
corpus containing 4500 words, was reported to
distinguish words from non-words with 7% error.
Since the phonotactics of a given language is
represented by the constraints allowing a given
sequence to be a word or not, and the SRN managed
to distinguish words from random strings with
tolerable error, the authors claim that SRNs are able
to learn the phonotactics of Dutch language.
NIEITIWJOIRIKI#
SRN
NIEI 1,W1,00(1(
Fig. 1 . SRN and mechanism of sequence
processing. A character is provided to the input
and the next one is used for training. In turn, it
has to be predicted during the test phase.
In the present report, alternative evaluation
procedures are proposed. The network evaluation
methods introduced are based on examining the
network response to each left context, available in
the training corpus. An effective way to represent
and use the complete set of context strings is a tree-
based data structure. Therefore, these methods are
termed tree-based analysis. Two possible
approaches are proposed for measuring the SRN
response accuracy to each left context. The first uses
the idea mentioned above of searching a threshold
that distinguishes permitted successors from
impossible ones. An error as a function of the
</bodyText>
<page confidence="0.992499">
1502
</page>
<bodyText confidence="0.9994011">
threshold is computed. Its minimum value
corresponds to the SRN learning error rate. The
second approach computes the local proximity
between the network response and a vector
containing the empirical symbol probabilities that a
given symbol would follow the current left context.
Two measures are used: 1.2 norm and normalised
vector multiplication. The mean of these local
proximities measures how close the network
responses are to the desired responses.
</bodyText>
<sectionHeader confidence="0.556428" genericHeader="method">
2 Tree-based corpus representation.
</sectionHeader>
<bodyText confidence="0.999923533333333">
There are diverse methods to represent a given set of
words (corpus). Lists is the simplest, but they are
not optimal with regard to the memory complexity
and the time complexity of the operations working
with the data. A more effective method is the tree-
based representation. Each node in this tree has a
maximum of 26 possible children (successors), if we
work with orthographic word representations. The
root is empty, it does not represent a symbol. It is
the beginning of a word. The leaves do not have
successors and they always represent the end of a
word. A word can end somewhere between the root
and the leaves as well. This manner of corpus
representation, termed trie, is one of the most
compact representations and is very effective for
different operations with words from the corpus.
In addition to the symbol at each node, we can
keep additional information, for example the
frequency of a word, if this node is the end of a
word. Another useful piece of information is the
frequency of each node C, that is, the frequency of
each left context. It is computed recursively as a
sum of the frequencies of all successors and the
frequency of the word ending at this node, provided
that such a word exists. These frequencies give us an
instant evaluation of the empirical distribution for
each successor. In order to compute the successors&apos;
empirical distribution vector r.), we have to
normalise the successors&apos; frequencies with respect to
their sum.
</bodyText>
<sectionHeader confidence="0.978514" genericHeader="method">
3 Tree-based evaluation of SRN learning.
</sectionHeader>
<bodyText confidence="0.989185269230769">
During the training of a word, only one output
neuron is forced to be active in response to the
context presented so far. But usually, in the entire
corpus there are several successors following a given
context. Therefore, the training should result in
output neurons, reproducing the successors&apos;
probability distribution. Following this reasoning,
we can derive a test procedure that verifies whether
the SRN output activations correspond to these local
distributions. Another approach related to the
practical implementation of a trained SRN is to
search for a cue, giving an answer to the question
whether given symbol can follow the context
provided to the input layer so far. As in the optimal
threshold method we can search for a threshold that
distinguishes these neurons.
The tree-based learning examination methods
are recursive procedures that process each tree node,
performing an in-order (or depth-first) tree
traversal. This kind of traversal algorithms start
from the root and process each sub-tree completely.
At each node, a comparison between the SRNs
reaction to the input, and the empirical characters
distribution is made. Apart from this evaluation, the
SRN state, that is, the context layer, has to be kept
before moving to one of the sub-trees, in order for it
to be reused after traversing this sub-tree.
On the basis of above ideas, two methods for
network evaluation are performed at each tree node
C. The first one computes an error function f(t)
dependent on a threshold t. This function gives the
error rate for each threshold t, that is, the ratio of
erroneous predictions given t. The values of fc(t) are
high for close to zero and close to one thresholds,
since almost all neurons would permit the
correspondent symbols to be successors in the first
case, and would not allow any successor in the
second case. The minimum will occur somewhere in
the middle, where only a few neurons would have an
activation higher than this threshold. The training
adjusts the weights of the network so that only
neurons corresponding to actual successors are
active. The SRN evaluation is based on the mean
F(t) of these local error functions (Fig.2a).
The second evaluation method computes the
proximity Ir = I WO ,r.) I between the network
response WO and the local empirical distributions
vector r.) at each tree node. The final evaluation
of the SRN training is the mean D of DC for all tree
nodes. Two measures are used to compute Dc. The
first one is 1.2 norm (1):
(1)11s1c(.) ,Tc(.) IL2 =11v1-1r...t.rd usic(x)-Tc(x))2 fa
</bodyText>
<page confidence="0.944492">
1503
</page>
<bodyText confidence="0.9425498">
The second is a vector multiplication, normali-
sed with respect to the vector&apos;s length (cosine) (2):
(2)1Nc(.) ,Tc(.) I v.(INc011Tc01)*IL.Lm (Nc(x)Tc(x))
where M is the vector size, that is, the number of
possible successors (e.g. 27) (see Fig. 2b).
</bodyText>
<sectionHeader confidence="0.999412" genericHeader="method">
4 Results.
</sectionHeader>
<bodyText confidence="0.997399916666667">
Well-trained SRNs were examined with both the
optimal threshold method and the tree-based
approaches. A network with 30 hidden neurons
predicted about 11% of the characters erroneously.
The same network had mean L2 distance 0.056 and
mean vector-multiplication proximity 0.851. At the
same time, the optimal threshold method rated the
learning at 7% error. Not surprisingly, the tree-
based evaluations methods gave higher error rate —
they do not examine the SRN response to non-
existent left contexts, which in turn are used in the
optimal threshold method.
</bodyText>
<sectionHeader confidence="0.993229" genericHeader="conclusions">
Discussion and conclusions.
</sectionHeader>
<bodyText confidence="0.999686785714286">
Alternative evaluation methods for SRN learning are
proposed. They examine the network response only
to the training input data, which in turn is
represented in a tree-based structure. In contrast,
previous methods examined trained SRNs with test
and random corpora. Both methods give a good idea
about the learning attained. Methods used previously
estimate the SRN recognition capabilities, while the
methods presented here evaluate how close the
network response is to the desired response — but for
familiar input sequences. The desired response is
considered to be the successors&apos; empirical
probability distribution. Hence, one of the methods
proposed compares the local empirical probabilities
</bodyText>
<figure confidence="0.904290625">
30
25
20
(a)
15
10
5
0o
</figure>
<bodyText confidence="0.999914222222222">
to the network response. The other approach
searches for a threshold that minimises the
prediction error function. The proposed methods
have been employed in the evaluation of
phonotactics learning, but they can be used in
various other tasks as well, wherever the data can be
organised hierarchically. I hope, that the proposed
analysis will contribute to our understanding of
learning carried out in SRNs.
</bodyText>
<sectionHeader confidence="0.993242" genericHeader="references">
References.
</sectionHeader>
<reference confidence="0.987874259259259">
Cleeremans, Axel (1993). Mechanisms of Implicit
Learning .MIT Press.
Elman, J.L. (1990). Finding structure in time. Cognitive
Science, 14, pp.179-211.
Elman, J.L., et al. (1996). Rethinking Innates. A
Bradford Book, The Mit Press.
Haylcin, Simon. (1994). Neural Networks, Macmillan
College Publisher.
Laver,John.(1994).Principles of phonetics,Cambr.Un.Pr.
Lawrence, S., et al.(1996).NL Gramatical Inference A
Comparison of RNN and ML Methods. Con-
nectionist, statistical and symbolic approaches to
learning for NLP, Springer-Verlag,pp.33-47
Nerbonne, John, et al (1996). Phonetic Distance between
Dutch Dialects. In G.Dureux, W.Daelle-mans &amp;
S.Gillis(eds) Proc.of CLIN, pp.185-202
Reilly, Ronan G.(1995).Sandy Ideas and Coloured Days:
Some Computational Implications of Embodiment.
Art. Intellig. Review,9: 305-322.,Kluver Ac. Publ.,NL.
Rodd, Jenifer. (1997). Recurrent Neural-Network
Learning of Phonological Regula-rities in Turkish,
ACL&apos;97 Workshop: Computational Natural language
learning, pp. 97-106.
Stoianov, I.P., John Nerbonne and Huub Bouma (1997).
Modelling the phonotactic structure of natural
language words with Simple Recurrent Networks,
Proc. of 7-th CLIN&apos;97 (in press)
</reference>
<figure confidence="0.9896286">
(b)
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Distance
2 4 6 8 10 12 14 1.6 18 20
Threshold
0.45
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0o
</figure>
<figureCaption confidence="0.8043625">
Fig.2. SRN evaluation by: (a.) minimising the error function F(t). (b.) measuring the SRN matching to the
empirical successor distributions. The distributions of L2 distance and cosine are given (see the text).
</figureCaption>
<page confidence="0.993258">
1504
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.993182">
<title confidence="0.999926">A Cognitive Model of Coherence-Driven Story Comprehension</title>
<author confidence="0.99996">Elliot Smith</author>
<affiliation confidence="0.999997">School of Computer Science, University of Birmingham,</affiliation>
<address confidence="0.999945">Edgbaston, Birmingham B15 2TT. United Kingdom.</address>
<email confidence="0.999263">e.smithacs.bham.ac.uk</email>
<abstract confidence="0.999568142857143">Current models of story comprehension have three major deficiencies: (1) lack of experimental support for the inference processes they involve (e.g. reliance on prediction); (2) indifference to &apos;kinds&apos; of coherence (e.g. local and global); and (3) inability to find interpretations at variable depths. I propose that comprehension is driven by the need to find a representation that reaches a &apos;coherence threshold&apos;. Variable inference processes are a reflection of different thresholds, and the skepticism of an individual inference process determines how thresholds are reached.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Axel Cleeremans</author>
</authors>
<title>Mechanisms of Implicit Learning</title>
<date>1993</date>
<publisher>MIT Press.</publisher>
<marker>Cleeremans, 1993</marker>
<rawString>Cleeremans, Axel (1993). Mechanisms of Implicit Learning .MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J L Elman</author>
</authors>
<title>Finding structure in time.</title>
<date>1990</date>
<journal>Cognitive Science,</journal>
<volume>14</volume>
<pages>179--211</pages>
<marker>Elman, 1990</marker>
<rawString>Elman, J.L. (1990). Finding structure in time. Cognitive Science, 14, pp.179-211.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J L Elman</author>
</authors>
<title>Rethinking Innates.</title>
<date>1996</date>
<publisher>A Bradford Book, The Mit Press.</publisher>
<marker>Elman, 1996</marker>
<rawString>Elman, J.L., et al. (1996). Rethinking Innates. A Bradford Book, The Mit Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Simon Haylcin</author>
</authors>
<title>Neural Networks, Macmillan College Publisher. Laver,John.(1994).Principles of phonetics,Cambr.Un.Pr.</title>
<date>1994</date>
<marker>Haylcin, 1994</marker>
<rawString>Haylcin, Simon. (1994). Neural Networks, Macmillan College Publisher. Laver,John.(1994).Principles of phonetics,Cambr.Un.Pr.</rawString>
</citation>
<citation valid="false">
<authors>
<author>S Lawrence</author>
</authors>
<title>et al.(1996).NL Gramatical Inference A Comparison of RNN and ML Methods. Connectionist, statistical and symbolic approaches to learning for NLP,</title>
<pages>33--47</pages>
<marker>Lawrence, </marker>
<rawString>Lawrence, S., et al.(1996).NL Gramatical Inference A Comparison of RNN and ML Methods. Connectionist, statistical and symbolic approaches to learning for NLP, Springer-Verlag,pp.33-47</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Nerbonne</author>
</authors>
<title>Phonetic Distance between Dutch Dialects.</title>
<date>1996</date>
<booktitle>In G.Dureux, W.Daelle-mans &amp; S.Gillis(eds) Proc.of CLIN,</booktitle>
<pages>185--202</pages>
<marker>Nerbonne, 1996</marker>
<rawString>Nerbonne, John, et al (1996). Phonetic Distance between Dutch Dialects. In G.Dureux, W.Daelle-mans &amp; S.Gillis(eds) Proc.of CLIN, pp.185-202</rawString>
</citation>
<citation valid="false">
<authors>
<author>Reilly</author>
</authors>
<booktitle>Ronan G.(1995).Sandy Ideas and Coloured Days: Some Computational Implications of Embodiment. Art. Intellig. Review,9: 305-322.,Kluver Ac.</booktitle>
<publisher>Publ.,NL.</publisher>
<marker>Reilly, </marker>
<rawString>Reilly, Ronan G.(1995).Sandy Ideas and Coloured Days: Some Computational Implications of Embodiment. Art. Intellig. Review,9: 305-322.,Kluver Ac. Publ.,NL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jenifer Rodd</author>
</authors>
<title>Recurrent Neural-Network Learning of Phonological Regula-rities</title>
<date>1997</date>
<booktitle>in Turkish, ACL&apos;97 Workshop: Computational Natural language learning,</booktitle>
<pages>97--106</pages>
<marker>Rodd, 1997</marker>
<rawString>Rodd, Jenifer. (1997). Recurrent Neural-Network Learning of Phonological Regula-rities in Turkish, ACL&apos;97 Workshop: Computational Natural language learning, pp. 97-106.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I P Stoianov</author>
<author>John Nerbonne</author>
<author>Huub Bouma</author>
</authors>
<title>Modelling the phonotactic structure of natural language words with Simple Recurrent Networks,</title>
<date>1997</date>
<booktitle>Proc. of 7-th CLIN&apos;97</booktitle>
<note>(in press)</note>
<marker>Stoianov, Nerbonne, Bouma, 1997</marker>
<rawString>Stoianov, I.P., John Nerbonne and Huub Bouma (1997). Modelling the phonotactic structure of natural language words with Simple Recurrent Networks, Proc. of 7-th CLIN&apos;97 (in press)</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>