<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.081328">
<title confidence="0.862381">
Pomset mcfgs
</title>
<author confidence="0.982739">
Michael J Pan
</author>
<affiliation confidence="0.994337">
University of California Los Angeles
</affiliation>
<email confidence="0.993081">
mjpan@cs.ucla.edu
</email>
<sectionHeader confidence="0.997335" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999978">
This paper identifies two orthogonal dimen-
sions of context sensitivity, the first being
context sensitivity in concurrency and the
second being structural context sensitivity.
We present an example from natural lan-
guage which seems to require both types of
context sensitivity, and introduce partially
ordered multisets (pomsets) mcfgs as a for-
malism which succintly expresses both.
</bodyText>
<sectionHeader confidence="0.975576" genericHeader="introduction">
Introduction
</sectionHeader>
<bodyText confidence="0.999745173913044">
Researchers in computer science and formal lan-
guage theory have separately investigated context
sensitivity of languages, addressing disjoint dimen-
sions of context sensitivity. Researchers in paral-
lel computing have explored the addition of con-
currency and free word order to context free lan-
guages, i.e. a concurrency context sensitivity (Gis-
cher, 1981; Warmuth and Haussler, 1984; Pratt,
1985; Pratt, 1986; Lodaya and Weil, 2000). Com-
putational linguistis have explored adding cross-
ing dependency and discontinuous constituency, i.e.
a structural context sensitivity (Seki et al., 1991;
Vijay-Shanker et al., 1987; Stabler, 1996).
Research considering the combination of two di-
mensions of expressing context sensitivity have been
sparse, e.g. (Becker et al., 1991), with research ded-
icated to this topic virtually nonexistent. Natural
languages are not well expressed by either form of
context sensitivity alone. For example, in Table 1,
sentences 1-8 are valid, but 9, 10 are invalid con-
structions of Norwegian. In addition to the cross-
ing dependency between the determiner and adverb
phrase, this example can be described by either
</bodyText>
<footnote confidence="0.933389636363636">
Derfor ga Jens Kari kyllingen tydeligvis ikke lenger kald
Therefore gave Jens Kari the chicken evidently not longer cold
Derfor ga Jens Kari tydeligvis kyllingen ikke lenger kald
Derfor ga Jens tydeligvis Kari kyllingen ikke lenger kald
Derfor ga Jens tydeligvis Kari ikke kyllingen lenger kald
Derfor ga Jens tydeligvis Kari ikke lenger kyllingen kald
Derfor ga Jens tydeligvis ikke lenger Kari kyllingen kald
Derfor ga tydeligvis Jens ikke lenger Kari kyllingen kald
Derfor ga tydeligvis ikke Jens lenger Kari kyllingen kald
* Derfor ga Jens ikke tydeligvis Kari lenger kyllingen kald
* Derfor ga Jens ikke tydeligvis kyllingen lenger Kari kald
</footnote>
<tableCaption confidence="0.998106">
Table 1: Bobaljik’s paradox/shape conservation example
</tableCaption>
<bodyText confidence="0.999688722222222">
Bobaljik’s paradox (Bobaljik, 1999), which asserts
that relative ordering of clausal constituents are not
unambiguously determined by the phrase structure,
or shape conservation (M¨uller, 2000), i.e. that lin-
ear precedence is preserved despite movement op-
erations. In other words, the two structurally con-
text sensitive components (due to the crossing de-
pendency between them) can be shuffled arbitrarily,
leading to concurrent context sensitivity.
This paper proposes pomset mcfgs as a formal-
ism for perspicuously expressing both types of con-
text sensitivity. 1 The rest of the paper is organized
as follows. Section 1 introduces pomsets, pomset
operations, and pomset properties. Section 2 pro-
vides a definition of pomset mcfgs by extending the
standard definition of mcfgs, defined over tuples of
strings, to tuples of pomsets. Section 3 discusses
pomset mcfg parsing.
</bodyText>
<footnote confidence="0.984807666666667">
1Other pomset based formalisms (Lecomte and Retore,
1995; Basten, 1997; Nederhof et al., 2003) have been limited
to the use of pomsets in context free grammars only.
</footnote>
<page confidence="0.925173">
106
</page>
<note confidence="0.4573765">
Proceedings of the 10th Conference on Parsing Technologies, pages 106–108,
Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics
</note>
<sectionHeader confidence="0.975345" genericHeader="method">
1 Pomsets
</sectionHeader>
<bodyText confidence="0.999928666666666">
In this section, we define pomsets as a model for de-
scribing concurrency. A labelled partial order (LPO)
is a 4 tuple (V, E, --&lt;, p) where V is a set of ver-
tices, E is the alphabet, -&lt; is the partial order on the
vertices, and p is the labelling function µ:V→ E.
A pomset is a LPO up to isomorphism. The con-
catenation of pomsets p and q is defined as ;(p,q)
= (Vp∪Vq,Ep ∪ Eq,:p ∪ -q ∪Vp×Vq,Pp ∪ Aq).
The concurrency of pomsets p and q is defined
as k(p,q) = (Vp∪Vq,Ep ∪ Eq,:�p ∪ _q,J1p ∪ µq).
Pomset isolation (t) is observed only in the con-
text of concurrency. The concurrence of an isolated
pomset with another pomset is defined as k(tp,q) =
({vp}∪Vq,pλ ∪ Eq,:q,{(pλ,vp)}∪Aq), where Ap is
the set of linearizations for p, and pλ is a function
which returns an element of Ap. Let ki be a pomset
concurrency operator restricted to an arity of i. Be-
cause concurrency is both associative and commu-
tative, without isolation, kmkn = knkm = km+n, de-
feating any arity restrictions. Isolation allows us to
restrict the arity of the concurrency operator, guaran-
teeing that in all linearizations of the pomset, the lin-
earizations of the isolated subpomsets are contigu-
ous.2 A mildly concurrent operator t kn, i.e. an n-
concurrent operator, is a composite operator whose
concurrency is isolated and restricted to an arity of n,
such that it operates on at most n items concurrently.
</bodyText>
<sectionHeader confidence="0.988318" genericHeader="method">
2 Pomset mcfgs
</sectionHeader>
<bodyText confidence="0.999985214285714">
There are many (structural) mildly context sensitive
grammar formalisms, e.g. mcfg, lcfrs, mg, and they
have been shown to be equivalent (Vijay-Shanker et
al., 1987). In this section we construct mcfgs over
pomsets (instead of strings) to define grammars with
both types of context sensitivity.
A pomset mcfg G is a 7-tuple (E,N,O,P,F,R,S)
such that E is a finite non-empty set of atoms, i.e.
terminal symbols, N is a finite non-empty set of non-
terminal symbols, where N∩E=∅, O is a set of valid
pomset operators, P is a set of i-tuples of pomsets
labelled by E∪N, F is a finite set of pomset rewrit-
ing functions from tuples of elements of P into ele-
ments in P, F⊆{ g:Pn →P  |n&gt;0 }, R is a finite set
</bodyText>
<footnote confidence="0.84881275">
2Pomset isolation is similar to proposals in for string iso-
lation in linear specification language (Goetz and Penn, 2000),
locking in idl-expressions (Nederhof and Satta, 2004), and in-
tegrity constraints in fo-tag (Becker et al., 1991).
</footnote>
<bodyText confidence="0.998697142857143">
of rewrite rules which pair n-ary elements of F with
n+1 nonterminals, and S∈N is the start symbol, and
d(S) = 1.
This definition extends the standard mcfg defini-
tion (Seki et al., 1991), with two main differences.
First, strings have been generalized to pomsets, i.e.
P is a set of i-tuples of pomsets instead of i-tuples of
strings. It follows that F, the set of functions, oper-
ate on tuples of pomsets instead of tuples of strings,
and so forth. Second, pomset mcfgs explicitly spec-
ify O, the set of possible operators over the pomsets,
e.g. {;, t k2}; string mcfgs have an implied operator
set O={;} (i.e. just string concatenation).
Additionally, just as in mcfgs, where the arity of
string components are limited, we can limit the ar-
ity of the concurrency of pomsets. A n-concurrent
pomset mcfg is a pomset mcfg such that for all con-
currency operators ki in the grammar, i≤n. A pom-
set mcfg with no concurrency among its components
is a 1-concurrent pomset mcfg, just as a cfg is a 1-
mcfg.
</bodyText>
<sectionHeader confidence="0.994504" genericHeader="method">
3 Parsing
</sectionHeader>
<bodyText confidence="0.999908833333333">
In this section we propose a strategy for parsing
pomset mcfgs, based on IDL parsing (Nederhof and
Satta, 2004). We define pomset graphs, which ex-
tend IDL graphs and pom-automata and are defined
over tuples of pomsets (or tuples of idl expressions),
rather than single pomsets or idl expressions. An in-
formal analysis of the computational complexity for
parsing pomset mcfgs follows.
Pomset graphs The construction is quite straight
forward, as pomsets themselves can already be con-
sidered as DAGs. However, in the pomset graph,
we add two vertices, the start and end vertices. We
then add precedence relations such that the start ver-
tex precedes all minimal vertices of the pomset, and
that the end vertex succeeds all maximal vertices of
the pomset. For any nonempty pomset, we define
Vmin ⊆V and Vmax ⊆V to be the minimal and
maximal, respectively, vertices of V. Informally, no
vertex in a pomset precede Vmin and none succeed
any in Vmax. Formally, ∀ v∈V, v’∈V,v’6�v, Vmin =
{ v  |(v’,v) 6∈:� } and Vmax = { v  |(v,v’) 6∈:� }. The
start vertex is then labelled with the empty string, c,
and the end vertex is labelled with Q’, a symbol not
in E.
</bodyText>
<page confidence="0.997504">
107
</page>
<bodyText confidence="0.999977416666667">
Given a pomset p= (Vp,E,�,µp), a pomset
graph for p is a vertex labelled graph γ(p) =
(Vy,E,µy) where Vy and E are a finite set of ver-
tices and edges, where Vy=Vp∪{vs,ve} and E= -&lt;
∪vs×Vmin∪Vmax×ve, Ey=E∪{ ’}, where σ’ is
a symbol not in E, and µy=µp∪{(vs,E),(ve,σ’)} is
the vertex labelling function. Having defined the
pomset graph, we can apply the IDL parsing algo-
rithm to the graph.
Complexity While the complexity of the mem-
bership problem for pomset languages in general
is NP-complete (Feigenbaum et al., 1993), by re-
stricting the context sensitivity of the pomset gram-
mars, polynomial time complexity is achievable.
The complexity of the parsing of IDL graphs is
O(n3k) (Nederhof and Satta, 2004) where k is the
width of the graph, and the width is a measurement
of the number of paths being traversed in parallel,
i.e. the arity of the concurrent context sensitivity.
Our intuition is that the parameterization of the com-
plexity according to the number of parallel paths
applies even when structural context sensitivity is
added. Thus for a k-concurrent m-structural mcfg,
we conjecture that the complexity is O(n3km).
</bodyText>
<sectionHeader confidence="0.997464" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.99827">
In this paper we identified two types of context sen-
sitivity, and provided a natural language example
which exhibits both types of context sensitivity. We
introduced pomset mcfgs as a formalism for describ-
ing grammars with both types of context sensitivity,
and outlined an informal proof of the its polynomial-
time parsing complexity.
</bodyText>
<sectionHeader confidence="0.998855" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999746929824561">
Twan Basten. 1997. Parsing partially ordered multisets.
International Journal of Foundations of Computer Sci-
ence, 8(4):379–407.
Tilman Becker, Aravind K. Joshi, and Owen Rambow.
1991. Long distance scrambling and tree adjoining
grammars. In Proceedings of EACL-91, the 5th Con-
ference of the European Chapter of the Association for
Computational Linguistics.
Jonathan David Bobaljik. 1999. Adverbs: The hierarchy
paradox. Glot International, 4.
Joan Feigenbaum, Jeremy A. Kahn, and Carsten Lund.
1993. Complexity results for pomset languages. SIAM
Journal of Discrete Mathematics, 6(3):432–442.
Jay Gischer. 1981. Shuffle languages, Petri nets, and
context-sensitive grammars. Communications of the
ACM, 24(9):597–605, September.
Thilo Goetz and Gerald Penn. 2000. A proposed lin-
ear specification language. Technical Report 134, Ar-
beitspapiere des SFB 340.
A. Lecomte and C. Retore. 1995. Pomset logic as an
alternative categorial grammar. In Glyn Morrill and
Richard Oehrle, editors, Formal Grammar, pages 181–
196.
K. Lodaya and P. Weil. 2000. Series-parallel languages
and the bounded-width property. Theoretical Com-
puter Science, 237(1–2):347–380.
Gereon M¨uller. 2000. Shape conservation and remnant
movement. In Proceedings of NELS 30.
Mark-Jan Nederhof and Giorgio Satta. 2004. IDL-
expressions: A formalism for representing and parsing
finite languages in natural language processing. Jour-
nal of Artificial Intelligence Research, 21:287–317.
Mark-Jan Nederhof, Giorgio Satta, and Stuart M.
Shieber. 2003. Partially ordered multiset context-free
grammars and ID/LP parsing. In Proceedings of the
Eighth International Workshop on Parsing Technolo-
gies, pages 171–182, Nancy, France, April.
Vaughan R. Pratt. 1985. The pomset model of paral-
lel processes : Unifying the temporal and the spatial.
Technical report, Stanford University, January.
Vaughan R. Pratt. 1986. Modelling concurrency with
partial orders. International Journal of Parallel Pro-
gramming, 15(1):33–71.
Hiroyuki Seki, Takashi Matsumura, Mamoru Fujii, and
Tadao Kasami. 1991. On multiple context free gram-
mars. Theoretical Computer Science, 88:191–229.
Edward P. Stabler. 1996. Derivational minimalism.
In Christian Retor´e, editor, LACL, volume 1328 of
Lecture Notes in Computer Science, pages 68–95.
Springer.
K. Vijay-Shanker, D. J. Weir, and A. K. Joshi. 1987.
Characterizing structural descriptions produced by
various grammatical formalisms. In Proceedings of
the ACL, pages 104–111, Stanford, CA.
Manfred K. Warmuth and David Haussler. 1984. On the
complexity of iterated shuffle. J. Comput. Syst. Sci.,
28(3):345–358.
</reference>
<page confidence="0.998367">
108
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.949120">
<title confidence="0.998599">Pomset mcfgs</title>
<author confidence="0.999997">Michael J Pan</author>
<affiliation confidence="0.999732">University of California Los Angeles</affiliation>
<email confidence="0.999752">mjpan@cs.ucla.edu</email>
<abstract confidence="0.9949005">This paper identifies two orthogonal dimensions of context sensitivity, the first being context sensitivity in concurrency and the second being structural context sensitivity. We present an example from natural language which seems to require both types of context sensitivity, and introduce partially ordered multisets (pomsets) mcfgs as a formalism which succintly expresses both.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Twan Basten</author>
</authors>
<title>Parsing partially ordered multisets.</title>
<date>1997</date>
<journal>International Journal of Foundations of Computer Science,</journal>
<volume>8</volume>
<issue>4</issue>
<contexts>
<context position="3267" citStr="Basten, 1997" startWordPosition="487" endWordPosition="488"> (due to the crossing dependency between them) can be shuffled arbitrarily, leading to concurrent context sensitivity. This paper proposes pomset mcfgs as a formalism for perspicuously expressing both types of context sensitivity. 1 The rest of the paper is organized as follows. Section 1 introduces pomsets, pomset operations, and pomset properties. Section 2 provides a definition of pomset mcfgs by extending the standard definition of mcfgs, defined over tuples of strings, to tuples of pomsets. Section 3 discusses pomset mcfg parsing. 1Other pomset based formalisms (Lecomte and Retore, 1995; Basten, 1997; Nederhof et al., 2003) have been limited to the use of pomsets in context free grammars only. 106 Proceedings of the 10th Conference on Parsing Technologies, pages 106–108, Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics 1 Pomsets In this section, we define pomsets as a model for describing concurrency. A labelled partial order (LPO) is a 4 tuple (V, E, --&lt;, p) where V is a set of vertices, E is the alphabet, -&lt; is the partial order on the vertices, and p is the labelling function µ:V→ E. A pomset is a LPO up to isomorphism. The concatenation of pomsets p </context>
</contexts>
<marker>Basten, 1997</marker>
<rawString>Twan Basten. 1997. Parsing partially ordered multisets. International Journal of Foundations of Computer Science, 8(4):379–407.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tilman Becker</author>
<author>Aravind K Joshi</author>
<author>Owen Rambow</author>
</authors>
<title>Long distance scrambling and tree adjoining grammars.</title>
<date>1991</date>
<booktitle>In Proceedings of EACL-91, the 5th Conference of the European Chapter of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="1253" citStr="Becker et al., 1991" startWordPosition="176" endWordPosition="179">nsions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are invalid constructions of Norwegian. In addition to the crossing dependency between the determiner and adverb phrase, this example can be described by either Derfor ga Jens Kari kyllingen tydeligvis ikke lenger kald Therefore gave Jens Kari the chicken evidently not longer cold Derfor ga Jens Kari tydeligvis kyllingen ikke lenger kald Derfor ga Jens tydeligvis Kari kyllingen ikke lenge</context>
<context position="5858" citStr="Becker et al., 1991" startWordPosition="943" endWordPosition="946"> 7-tuple (E,N,O,P,F,R,S) such that E is a finite non-empty set of atoms, i.e. terminal symbols, N is a finite non-empty set of nonterminal symbols, where N∩E=∅, O is a set of valid pomset operators, P is a set of i-tuples of pomsets labelled by E∪N, F is a finite set of pomset rewriting functions from tuples of elements of P into elements in P, F⊆{ g:Pn →P |n&gt;0 }, R is a finite set 2Pomset isolation is similar to proposals in for string isolation in linear specification language (Goetz and Penn, 2000), locking in idl-expressions (Nederhof and Satta, 2004), and integrity constraints in fo-tag (Becker et al., 1991). of rewrite rules which pair n-ary elements of F with n+1 nonterminals, and S∈N is the start symbol, and d(S) = 1. This definition extends the standard mcfg definition (Seki et al., 1991), with two main differences. First, strings have been generalized to pomsets, i.e. P is a set of i-tuples of pomsets instead of i-tuples of strings. It follows that F, the set of functions, operate on tuples of pomsets instead of tuples of strings, and so forth. Second, pomset mcfgs explicitly specify O, the set of possible operators over the pomsets, e.g. {;, t k2}; string mcfgs have an implied operator set </context>
</contexts>
<marker>Becker, Joshi, Rambow, 1991</marker>
<rawString>Tilman Becker, Aravind K. Joshi, and Owen Rambow. 1991. Long distance scrambling and tree adjoining grammars. In Proceedings of EACL-91, the 5th Conference of the European Chapter of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jonathan David Bobaljik</author>
</authors>
<title>Adverbs: The hierarchy paradox.</title>
<date>1999</date>
<journal>Glot International,</journal>
<volume>4</volume>
<contexts>
<context position="2360" citStr="Bobaljik, 1999" startWordPosition="350" endWordPosition="351">erfor ga Jens Kari tydeligvis kyllingen ikke lenger kald Derfor ga Jens tydeligvis Kari kyllingen ikke lenger kald Derfor ga Jens tydeligvis Kari ikke kyllingen lenger kald Derfor ga Jens tydeligvis Kari ikke lenger kyllingen kald Derfor ga Jens tydeligvis ikke lenger Kari kyllingen kald Derfor ga tydeligvis Jens ikke lenger Kari kyllingen kald Derfor ga tydeligvis ikke Jens lenger Kari kyllingen kald * Derfor ga Jens ikke tydeligvis Kari lenger kyllingen kald * Derfor ga Jens ikke tydeligvis kyllingen lenger Kari kald Table 1: Bobaljik’s paradox/shape conservation example Bobaljik’s paradox (Bobaljik, 1999), which asserts that relative ordering of clausal constituents are not unambiguously determined by the phrase structure, or shape conservation (M¨uller, 2000), i.e. that linear precedence is preserved despite movement operations. In other words, the two structurally context sensitive components (due to the crossing dependency between them) can be shuffled arbitrarily, leading to concurrent context sensitivity. This paper proposes pomset mcfgs as a formalism for perspicuously expressing both types of context sensitivity. 1 The rest of the paper is organized as follows. Section 1 introduces poms</context>
</contexts>
<marker>Bobaljik, 1999</marker>
<rawString>Jonathan David Bobaljik. 1999. Adverbs: The hierarchy paradox. Glot International, 4.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joan Feigenbaum</author>
<author>Jeremy A Kahn</author>
<author>Carsten Lund</author>
</authors>
<title>Complexity results for pomset languages.</title>
<date>1993</date>
<journal>SIAM Journal of Discrete Mathematics,</journal>
<volume>6</volume>
<issue>3</issue>
<contexts>
<context position="8537" citStr="Feigenbaum et al., 1993" startWordPosition="1417" endWordPosition="1420">is then labelled with the empty string, c, and the end vertex is labelled with Q’, a symbol not in E. 107 Given a pomset p= (Vp,E,�,µp), a pomset graph for p is a vertex labelled graph γ(p) = (Vy,E,µy) where Vy and E are a finite set of vertices and edges, where Vy=Vp∪{vs,ve} and E= -&lt; ∪vs×Vmin∪Vmax×ve, Ey=E∪{ ’}, where σ’ is a symbol not in E, and µy=µp∪{(vs,E),(ve,σ’)} is the vertex labelling function. Having defined the pomset graph, we can apply the IDL parsing algorithm to the graph. Complexity While the complexity of the membership problem for pomset languages in general is NP-complete (Feigenbaum et al., 1993), by restricting the context sensitivity of the pomset grammars, polynomial time complexity is achievable. The complexity of the parsing of IDL graphs is O(n3k) (Nederhof and Satta, 2004) where k is the width of the graph, and the width is a measurement of the number of paths being traversed in parallel, i.e. the arity of the concurrent context sensitivity. Our intuition is that the parameterization of the complexity according to the number of parallel paths applies even when structural context sensitivity is added. Thus for a k-concurrent m-structural mcfg, we conjecture that the complexity i</context>
</contexts>
<marker>Feigenbaum, Kahn, Lund, 1993</marker>
<rawString>Joan Feigenbaum, Jeremy A. Kahn, and Carsten Lund. 1993. Complexity results for pomset languages. SIAM Journal of Discrete Mathematics, 6(3):432–442.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jay Gischer</author>
</authors>
<title>Shuffle languages, Petri nets, and context-sensitive grammars.</title>
<date>1981</date>
<journal>Communications of the ACM,</journal>
<volume>24</volume>
<issue>9</issue>
<contexts>
<context position="840" citStr="Gischer, 1981" startWordPosition="118" endWordPosition="120">d being structural context sensitivity. We present an example from natural language which seems to require both types of context sensitivity, and introduce partially ordered multisets (pomsets) mcfgs as a formalism which succintly expresses both. Introduction Researchers in computer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8</context>
</contexts>
<marker>Gischer, 1981</marker>
<rawString>Jay Gischer. 1981. Shuffle languages, Petri nets, and context-sensitive grammars. Communications of the ACM, 24(9):597–605, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thilo Goetz</author>
<author>Gerald Penn</author>
</authors>
<title>A proposed linear specification language.</title>
<date>2000</date>
<booktitle>Arbeitspapiere des SFB 340.</booktitle>
<tech>Technical Report 134,</tech>
<contexts>
<context position="5744" citStr="Goetz and Penn, 2000" startWordPosition="926" endWordPosition="929">s over pomsets (instead of strings) to define grammars with both types of context sensitivity. A pomset mcfg G is a 7-tuple (E,N,O,P,F,R,S) such that E is a finite non-empty set of atoms, i.e. terminal symbols, N is a finite non-empty set of nonterminal symbols, where N∩E=∅, O is a set of valid pomset operators, P is a set of i-tuples of pomsets labelled by E∪N, F is a finite set of pomset rewriting functions from tuples of elements of P into elements in P, F⊆{ g:Pn →P |n&gt;0 }, R is a finite set 2Pomset isolation is similar to proposals in for string isolation in linear specification language (Goetz and Penn, 2000), locking in idl-expressions (Nederhof and Satta, 2004), and integrity constraints in fo-tag (Becker et al., 1991). of rewrite rules which pair n-ary elements of F with n+1 nonterminals, and S∈N is the start symbol, and d(S) = 1. This definition extends the standard mcfg definition (Seki et al., 1991), with two main differences. First, strings have been generalized to pomsets, i.e. P is a set of i-tuples of pomsets instead of i-tuples of strings. It follows that F, the set of functions, operate on tuples of pomsets instead of tuples of strings, and so forth. Second, pomset mcfgs explicitly spe</context>
</contexts>
<marker>Goetz, Penn, 2000</marker>
<rawString>Thilo Goetz and Gerald Penn. 2000. A proposed linear specification language. Technical Report 134, Arbeitspapiere des SFB 340.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Lecomte</author>
<author>C Retore</author>
</authors>
<title>Pomset logic as an alternative categorial grammar.</title>
<date>1995</date>
<booktitle>Formal Grammar,</booktitle>
<pages>181--196</pages>
<editor>In Glyn Morrill and Richard Oehrle, editors,</editor>
<contexts>
<context position="3253" citStr="Lecomte and Retore, 1995" startWordPosition="483" endWordPosition="486">ntext sensitive components (due to the crossing dependency between them) can be shuffled arbitrarily, leading to concurrent context sensitivity. This paper proposes pomset mcfgs as a formalism for perspicuously expressing both types of context sensitivity. 1 The rest of the paper is organized as follows. Section 1 introduces pomsets, pomset operations, and pomset properties. Section 2 provides a definition of pomset mcfgs by extending the standard definition of mcfgs, defined over tuples of strings, to tuples of pomsets. Section 3 discusses pomset mcfg parsing. 1Other pomset based formalisms (Lecomte and Retore, 1995; Basten, 1997; Nederhof et al., 2003) have been limited to the use of pomsets in context free grammars only. 106 Proceedings of the 10th Conference on Parsing Technologies, pages 106–108, Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics 1 Pomsets In this section, we define pomsets as a model for describing concurrency. A labelled partial order (LPO) is a 4 tuple (V, E, --&lt;, p) where V is a set of vertices, E is the alphabet, -&lt; is the partial order on the vertices, and p is the labelling function µ:V→ E. A pomset is a LPO up to isomorphism. The concatenation</context>
</contexts>
<marker>Lecomte, Retore, 1995</marker>
<rawString>A. Lecomte and C. Retore. 1995. Pomset logic as an alternative categorial grammar. In Glyn Morrill and Richard Oehrle, editors, Formal Grammar, pages 181– 196.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Lodaya</author>
<author>P Weil</author>
</authors>
<title>Series-parallel languages and the bounded-width property.</title>
<date>2000</date>
<journal>Theoretical Computer Science,</journal>
<pages>237--1</pages>
<contexts>
<context position="918" citStr="Lodaya and Weil, 2000" startWordPosition="129" endWordPosition="132">tural language which seems to require both types of context sensitivity, and introduce partially ordered multisets (pomsets) mcfgs as a formalism which succintly expresses both. Introduction Researchers in computer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are invalid constructions of Norwegian. In addition to t</context>
</contexts>
<marker>Lodaya, Weil, 2000</marker>
<rawString>K. Lodaya and P. Weil. 2000. Series-parallel languages and the bounded-width property. Theoretical Computer Science, 237(1–2):347–380.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gereon M¨uller</author>
</authors>
<title>Shape conservation and remnant movement.</title>
<date>2000</date>
<booktitle>In Proceedings of NELS 30.</booktitle>
<marker>M¨uller, 2000</marker>
<rawString>Gereon M¨uller. 2000. Shape conservation and remnant movement. In Proceedings of NELS 30.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark-Jan Nederhof</author>
<author>Giorgio Satta</author>
</authors>
<title>IDLexpressions: A formalism for representing and parsing finite languages in natural language processing.</title>
<date>2004</date>
<journal>Journal of Artificial Intelligence Research,</journal>
<pages>21--287</pages>
<contexts>
<context position="5799" citStr="Nederhof and Satta, 2004" startWordPosition="933" endWordPosition="936">ars with both types of context sensitivity. A pomset mcfg G is a 7-tuple (E,N,O,P,F,R,S) such that E is a finite non-empty set of atoms, i.e. terminal symbols, N is a finite non-empty set of nonterminal symbols, where N∩E=∅, O is a set of valid pomset operators, P is a set of i-tuples of pomsets labelled by E∪N, F is a finite set of pomset rewriting functions from tuples of elements of P into elements in P, F⊆{ g:Pn →P |n&gt;0 }, R is a finite set 2Pomset isolation is similar to proposals in for string isolation in linear specification language (Goetz and Penn, 2000), locking in idl-expressions (Nederhof and Satta, 2004), and integrity constraints in fo-tag (Becker et al., 1991). of rewrite rules which pair n-ary elements of F with n+1 nonterminals, and S∈N is the start symbol, and d(S) = 1. This definition extends the standard mcfg definition (Seki et al., 1991), with two main differences. First, strings have been generalized to pomsets, i.e. P is a set of i-tuples of pomsets instead of i-tuples of strings. It follows that F, the set of functions, operate on tuples of pomsets instead of tuples of strings, and so forth. Second, pomset mcfgs explicitly specify O, the set of possible operators over the pomsets,</context>
<context position="8724" citStr="Nederhof and Satta, 2004" startWordPosition="1447" endWordPosition="1450">(p) = (Vy,E,µy) where Vy and E are a finite set of vertices and edges, where Vy=Vp∪{vs,ve} and E= -&lt; ∪vs×Vmin∪Vmax×ve, Ey=E∪{ ’}, where σ’ is a symbol not in E, and µy=µp∪{(vs,E),(ve,σ’)} is the vertex labelling function. Having defined the pomset graph, we can apply the IDL parsing algorithm to the graph. Complexity While the complexity of the membership problem for pomset languages in general is NP-complete (Feigenbaum et al., 1993), by restricting the context sensitivity of the pomset grammars, polynomial time complexity is achievable. The complexity of the parsing of IDL graphs is O(n3k) (Nederhof and Satta, 2004) where k is the width of the graph, and the width is a measurement of the number of paths being traversed in parallel, i.e. the arity of the concurrent context sensitivity. Our intuition is that the parameterization of the complexity according to the number of parallel paths applies even when structural context sensitivity is added. Thus for a k-concurrent m-structural mcfg, we conjecture that the complexity is O(n3km). 4 Conclusion In this paper we identified two types of context sensitivity, and provided a natural language example which exhibits both types of context sensitivity. We introduc</context>
</contexts>
<marker>Nederhof, Satta, 2004</marker>
<rawString>Mark-Jan Nederhof and Giorgio Satta. 2004. IDLexpressions: A formalism for representing and parsing finite languages in natural language processing. Journal of Artificial Intelligence Research, 21:287–317.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark-Jan Nederhof</author>
<author>Giorgio Satta</author>
<author>Stuart M Shieber</author>
</authors>
<title>Partially ordered multiset context-free grammars and ID/LP parsing.</title>
<date>2003</date>
<booktitle>In Proceedings of the Eighth International Workshop on Parsing Technologies,</booktitle>
<pages>171--182</pages>
<location>Nancy, France,</location>
<contexts>
<context position="3291" citStr="Nederhof et al., 2003" startWordPosition="489" endWordPosition="492">rossing dependency between them) can be shuffled arbitrarily, leading to concurrent context sensitivity. This paper proposes pomset mcfgs as a formalism for perspicuously expressing both types of context sensitivity. 1 The rest of the paper is organized as follows. Section 1 introduces pomsets, pomset operations, and pomset properties. Section 2 provides a definition of pomset mcfgs by extending the standard definition of mcfgs, defined over tuples of strings, to tuples of pomsets. Section 3 discusses pomset mcfg parsing. 1Other pomset based formalisms (Lecomte and Retore, 1995; Basten, 1997; Nederhof et al., 2003) have been limited to the use of pomsets in context free grammars only. 106 Proceedings of the 10th Conference on Parsing Technologies, pages 106–108, Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics 1 Pomsets In this section, we define pomsets as a model for describing concurrency. A labelled partial order (LPO) is a 4 tuple (V, E, --&lt;, p) where V is a set of vertices, E is the alphabet, -&lt; is the partial order on the vertices, and p is the labelling function µ:V→ E. A pomset is a LPO up to isomorphism. The concatenation of pomsets p and q is defined as ;(p,</context>
</contexts>
<marker>Nederhof, Satta, Shieber, 2003</marker>
<rawString>Mark-Jan Nederhof, Giorgio Satta, and Stuart M. Shieber. 2003. Partially ordered multiset context-free grammars and ID/LP parsing. In Proceedings of the Eighth International Workshop on Parsing Technologies, pages 171–182, Nancy, France, April.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vaughan R Pratt</author>
</authors>
<title>The pomset model of parallel processes : Unifying the temporal and the spatial.</title>
<date>1985</date>
<tech>Technical report,</tech>
<institution>Stanford University,</institution>
<contexts>
<context position="881" citStr="Pratt, 1985" startWordPosition="125" endWordPosition="126">present an example from natural language which seems to require both types of context sensitivity, and introduce partially ordered multisets (pomsets) mcfgs as a formalism which succintly expresses both. Introduction Researchers in computer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are invalid constru</context>
</contexts>
<marker>Pratt, 1985</marker>
<rawString>Vaughan R. Pratt. 1985. The pomset model of parallel processes : Unifying the temporal and the spatial. Technical report, Stanford University, January.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vaughan R Pratt</author>
</authors>
<title>Modelling concurrency with partial orders.</title>
<date>1986</date>
<journal>International Journal of Parallel Programming,</journal>
<volume>15</volume>
<issue>1</issue>
<contexts>
<context position="894" citStr="Pratt, 1986" startWordPosition="127" endWordPosition="128">ample from natural language which seems to require both types of context sensitivity, and introduce partially ordered multisets (pomsets) mcfgs as a formalism which succintly expresses both. Introduction Researchers in computer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are invalid constructions of Nor</context>
</contexts>
<marker>Pratt, 1986</marker>
<rawString>Vaughan R. Pratt. 1986. Modelling concurrency with partial orders. International Journal of Parallel Programming, 15(1):33–71.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hiroyuki Seki</author>
<author>Takashi Matsumura</author>
<author>Mamoru Fujii</author>
<author>Tadao Kasami</author>
</authors>
<title>On multiple context free grammars.</title>
<date>1991</date>
<journal>Theoretical Computer Science,</journal>
<pages>88--191</pages>
<contexts>
<context position="1074" citStr="Seki et al., 1991" startWordPosition="150" endWordPosition="153"> expresses both. Introduction Researchers in computer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are invalid constructions of Norwegian. In addition to the crossing dependency between the determiner and adverb phrase, this example can be described by either Derfor ga Jens Kari kyllingen tydeligvis ikke lenge</context>
<context position="6046" citStr="Seki et al., 1991" startWordPosition="977" endWordPosition="980">erators, P is a set of i-tuples of pomsets labelled by E∪N, F is a finite set of pomset rewriting functions from tuples of elements of P into elements in P, F⊆{ g:Pn →P |n&gt;0 }, R is a finite set 2Pomset isolation is similar to proposals in for string isolation in linear specification language (Goetz and Penn, 2000), locking in idl-expressions (Nederhof and Satta, 2004), and integrity constraints in fo-tag (Becker et al., 1991). of rewrite rules which pair n-ary elements of F with n+1 nonterminals, and S∈N is the start symbol, and d(S) = 1. This definition extends the standard mcfg definition (Seki et al., 1991), with two main differences. First, strings have been generalized to pomsets, i.e. P is a set of i-tuples of pomsets instead of i-tuples of strings. It follows that F, the set of functions, operate on tuples of pomsets instead of tuples of strings, and so forth. Second, pomset mcfgs explicitly specify O, the set of possible operators over the pomsets, e.g. {;, t k2}; string mcfgs have an implied operator set O={;} (i.e. just string concatenation). Additionally, just as in mcfgs, where the arity of string components are limited, we can limit the arity of the concurrency of pomsets. A n-concurre</context>
</contexts>
<marker>Seki, Matsumura, Fujii, Kasami, 1991</marker>
<rawString>Hiroyuki Seki, Takashi Matsumura, Mamoru Fujii, and Tadao Kasami. 1991. On multiple context free grammars. Theoretical Computer Science, 88:191–229.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Edward P Stabler</author>
</authors>
<title>Derivational minimalism.</title>
<date>1996</date>
<booktitle>of Lecture Notes in Computer Science,</booktitle>
<volume>1328</volume>
<pages>68--95</pages>
<editor>In Christian Retor´e, editor, LACL,</editor>
<publisher>Springer.</publisher>
<contexts>
<context position="1118" citStr="Stabler, 1996" startWordPosition="158" endWordPosition="159">mputer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are invalid constructions of Norwegian. In addition to the crossing dependency between the determiner and adverb phrase, this example can be described by either Derfor ga Jens Kari kyllingen tydeligvis ikke lenger kald Therefore gave Jens Kari the chicken </context>
</contexts>
<marker>Stabler, 1996</marker>
<rawString>Edward P. Stabler. 1996. Derivational minimalism. In Christian Retor´e, editor, LACL, volume 1328 of Lecture Notes in Computer Science, pages 68–95. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>D J Weir</author>
<author>A K Joshi</author>
</authors>
<title>Characterizing structural descriptions produced by various grammatical formalisms.</title>
<date>1987</date>
<booktitle>In Proceedings of the ACL,</booktitle>
<pages>104--111</pages>
<location>Stanford, CA.</location>
<contexts>
<context position="1102" citStr="Vijay-Shanker et al., 1987" startWordPosition="154" endWordPosition="157">troduction Researchers in computer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are invalid constructions of Norwegian. In addition to the crossing dependency between the determiner and adverb phrase, this example can be described by either Derfor ga Jens Kari kyllingen tydeligvis ikke lenger kald Therefore gave Jens K</context>
<context position="5088" citStr="Vijay-Shanker et al., 1987" startWordPosition="804" endWordPosition="807">n = knkm = km+n, defeating any arity restrictions. Isolation allows us to restrict the arity of the concurrency operator, guaranteeing that in all linearizations of the pomset, the linearizations of the isolated subpomsets are contiguous.2 A mildly concurrent operator t kn, i.e. an nconcurrent operator, is a composite operator whose concurrency is isolated and restricted to an arity of n, such that it operates on at most n items concurrently. 2 Pomset mcfgs There are many (structural) mildly context sensitive grammar formalisms, e.g. mcfg, lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987). In this section we construct mcfgs over pomsets (instead of strings) to define grammars with both types of context sensitivity. A pomset mcfg G is a 7-tuple (E,N,O,P,F,R,S) such that E is a finite non-empty set of atoms, i.e. terminal symbols, N is a finite non-empty set of nonterminal symbols, where N∩E=∅, O is a set of valid pomset operators, P is a set of i-tuples of pomsets labelled by E∪N, F is a finite set of pomset rewriting functions from tuples of elements of P into elements in P, F⊆{ g:Pn →P |n&gt;0 }, R is a finite set 2Pomset isolation is similar to proposals in for string isolation</context>
</contexts>
<marker>Vijay-Shanker, Weir, Joshi, 1987</marker>
<rawString>K. Vijay-Shanker, D. J. Weir, and A. K. Joshi. 1987. Characterizing structural descriptions produced by various grammatical formalisms. In Proceedings of the ACL, pages 104–111, Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manfred K Warmuth</author>
<author>David Haussler</author>
</authors>
<title>On the complexity of iterated shuffle.</title>
<date>1984</date>
<journal>J. Comput. Syst. Sci.,</journal>
<volume>28</volume>
<issue>3</issue>
<contexts>
<context position="868" citStr="Warmuth and Haussler, 1984" startWordPosition="121" endWordPosition="124">ral context sensitivity. We present an example from natural language which seems to require both types of context sensitivity, and introduce partially ordered multisets (pomsets) mcfgs as a formalism which succintly expresses both. Introduction Researchers in computer science and formal language theory have separately investigated context sensitivity of languages, addressing disjoint dimensions of context sensitivity. Researchers in parallel computing have explored the addition of concurrency and free word order to context free languages, i.e. a concurrency context sensitivity (Gischer, 1981; Warmuth and Haussler, 1984; Pratt, 1985; Pratt, 1986; Lodaya and Weil, 2000). Computational linguistis have explored adding crossing dependency and discontinuous constituency, i.e. a structural context sensitivity (Seki et al., 1991; Vijay-Shanker et al., 1987; Stabler, 1996). Research considering the combination of two dimensions of expressing context sensitivity have been sparse, e.g. (Becker et al., 1991), with research dedicated to this topic virtually nonexistent. Natural languages are not well expressed by either form of context sensitivity alone. For example, in Table 1, sentences 1-8 are valid, but 9, 10 are in</context>
</contexts>
<marker>Warmuth, Haussler, 1984</marker>
<rawString>Manfred K. Warmuth and David Haussler. 1984. On the complexity of iterated shuffle. J. Comput. Syst. Sci., 28(3):345–358.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>