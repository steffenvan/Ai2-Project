<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.9979175">
Deriving the Predicate-Argument Structure for a Free Word Order
Language *
</title>
<author confidence="0.990713">
Cern Bozsahin
</author>
<affiliation confidence="0.9682275">
Department of Computer Engineering
Middle East Technical University
</affiliation>
<address confidence="0.549229">
06531 Ankara, Turkey
</address>
<email confidence="0.999017">
bozsahin@ceng.metu.edu.tr
</email>
<sectionHeader confidence="0.997391" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99998825">
In relatively free word order languages, grammat-
ical functions are intricately related to case mark-
ing. Assuming an ordered representation of the
predicate-argument structure, this work proposes a
Combinatory Categorial Grammar formulation of
relating surface case cues to categories and types
for correctly placing the arguments in the predicate-
argument structure. This is achieved by treat-
ing case markers as type shifters. Unlike other
CG formulations, type shifting does not prolifer-
ate or cause spurious ambiguity. Categories of
all argument-encoding grammatical functions fol-
low from the same principle of category assignment.
Normal order evaluation of the combinatory form
reveals the predicate-argument structure. The appli-
cation of the method to Turkish is shown.
</bodyText>
<sectionHeader confidence="0.999515" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999089615384616">
Recent theorizing in linguistics brought forth a level
of representation called the Predicate-Argument
Structure (PAS). PAS acts as the interface be-
tween lexical semantics and d-structure in GB
(Grimshaw, 1990), functional structure in LFG
(Alsina, 1996), and complement structure in HPSG
(Wechsler, 1995). PAS is the sole level of rep-
resentation in Combinatory Categorial Grammar
(CCG) (Steedman, 1996). All formulations as-
sume a prominence-based structured representation
for PAS, although they differ in the terms used
for defining prominence. For instance, Grimshaw
(1990) defines the thematic hierarchy as:
</bodyText>
<listItem confidence="0.769428">
Agent &gt; Experiencer &gt; Goal / Location / Source
&gt; Theme
• Thanks to Mark Steedman for discussion and material, and
to the anonymous reviewer of an extended version whose com-
ments led to significant revisions. This research is supported
by TUBITAK (EEEAG-90) and NATO Science Division (TU-
LANGUAGE).
</listItem>
<bodyText confidence="0.979153857142857">
whereas LFG accounts make use of the following
(Bresnan and Kanerva, 1989):
Agent &gt; Beneficiary &gt; Goal / Experiencer &gt; Inst
&gt; Patient / Theme &gt; Locative.
As an illustration, the predicate-argument struc-
tures of the agentive verb murder and the psycho-
logical verb fear are (Grimshaw, 1990, p.8):
</bodyText>
<equation confidence="0.40216675">
murder (x
(y))
Agent Theme
fear (x (y))
</equation>
<bodyText confidence="0.9524118">
Exp Theme
To abstract away from language-particular case
systems and mapping of thematic roles to grammati-
cal functions, I assume the Applicative Hierarchy of
Shaumyan (1987) for the definition of prominence:
</bodyText>
<equation confidence="0.8699085">
Primary Term &gt; Secondary Term &gt;
Tertiary Term &gt; Oblique Term.
</equation>
<bodyText confidence="0.999032235294118">
Primacy of a term over another is defined by the for-
mer having a wider range of syntactic features than
the latter. In an accusative language, subjects are
less marked (hence primary) than objects; all verbs
take subjects but only transitive verbs take objects.
Terms (=arguments) can be denoted by the genotype
indices on NPs, such as NP,, NP2 for primary and
secondary terms.&apos; An NP2 would be a direct object
(NPa„) in an accusative language, or an ergative-
marked NP (NPerg) in an ergative language. This
level of description also simplifies the formulation
of grammatical function changing; the primary term
of a passivized predicate (PAss p) is the secondary
term of the active p. I follow Shaumyan and Steed-
man (1996) also in the ordered representation of the
PAS (1). The reader is referred to (Shaumyan, 1987)
for linguistic justification of this ordering.
</bodyText>
<listItem confidence="0.933815">
(1) Pred... &lt;Sec. Term&gt; &lt;Primary Term&gt;
</listItem>
<bodyText confidence="0.485562">
Given this representation, the surface order of
</bodyText>
<footnote confidence="0.915952">
1Shaumyan uses T1, T2, but we prefer NP1, NP2 for easier
exposition in later formulations.
</footnote>
<page confidence="0.997389">
167
</page>
<bodyText confidence="0.998901333333333">
constituents is often in conflict with the order in the
PAS. For instance, English as a configurational SVO
language has the mapping:
</bodyText>
<listItem confidence="0.6438845">
(2) SS: S V 0
PAS: P NP2 NPi
</listItem>
<bodyText confidence="0.99326225">
However, in a non-configurational language, per-
mutations of word order are possible, and grammat-
ical functions are often indicated not by configura-
tions but by case marking. For instance, in Turkish,
all six permutations of the basic SOV order are pos-
sible, and Japanese allows two verb-final permuta-
tions of underlying SOV. The relationship between
case marking and scrambling is crucial in languages
with flexible word order. A computational solution
to the problem must rely on some principles of par-
simony for representing categories and types of ar-
guments and predicates, and efficiency of process-
ing.
In a categorial formulation, grammatical
functions of preverbal and postverbal NPs in
(2) can be made explicit by type shifting2
the subject to S/(S\NP1) and the object to
(S\NP1)\((S\NP1 )/NP2). These categories follow
from the order-preserving type shifting scheme
(Dowty, 1988):
</bodyText>
<listItem confidence="0.992516">
(3) NP T/(T\NP) or TVT/NP)
</listItem>
<bodyText confidence="0.9966275">
To resolve the opposition between surface order
and the PAS in a free word order language, one can
let the type shifted categories of terms proliferate,
or reformulate CCG in such a way that arguments of
the verbs are sets, rather than lists whose arguments
are made available one at a time. The former alter-
native makes the spurious ambiguity problem of CG
parsing (Karttunen, 1989) even more severe. Multi-
set CCG (Hoffman, 1995) is an example of the set-
oriented approach. It is known to be computation-
ally tractable but less efficient than the polynomial
time CCG algorithm of Vijay-Shanker and Weir
(1993). I try to show in this paper that the tradi-
tional curried notation of CG with type shifting can
be maintained to account for Surface Form44PAS
mapping without leading to proliferation of argu-
ment categories or to spurious ambiguity.
Categorial framework is particularly suited for
this mapping due to its lexicalism. Grammatical
functions of the nouns in the lexicon are assigned
2aka. type raising, lifting, or type change
by case markers, which are also in the lexicon.
Thus, grammatical function marking follows nat-
urally from the general CCG schema comprising
rules of application (A) and composition (B). The
functor-argument distinction in CG helps to model
prominence relations without extra levels of repre-
sentation. CCG schema (Steedman (1988; 1990))
is summarized in (4). Combinator notation is pre-
ferred here because they are the formal primitives
operating on the PAS (cf. (Curry and Feys, 1958)
for Combinatory Logic). Application is the only
primitive of the combinatory system; it is indicated
by juxtaposition in the examples and denoted by in
the normal order evaluator (§4). B has the reduction
rule Bf ga&gt; f (ga).
</bodyText>
<equation confidence="0.990553333333333">
(4) X/ Y: f Y: a X: fa
Y: a X\Y: f .,k&lt; X: fa
X/ Y: f Y/Z: g 8&gt; X/Z: Bfg
Y\Z: g X\Y: f Bf g
X / Y: f Y\Z: g .13x Bf g
Y / Z: g X\Y: f B&lt; X/Z: Bfg
</equation>
<sectionHeader confidence="0.953864" genericHeader="method">
2 Grammatical Functions, Type Shifting,
</sectionHeader>
<subsectionHeader confidence="0.749759">
and Composition
</subsectionHeader>
<bodyText confidence="0.996510277777778">
In order to derive all permutations of a ditransi-
tive construction in Turkish using (3), the dative-
marked indirect object (NP3) must be type shifted
in 48 (4!2) different ways so that coordination with
the left-adjacent and the right-adjacent constituent
is possible. This is due to the fact that the result
category T is always a conjoinable type, and the ar-
gument category T/ NP3 (and T\NP3) must be al-
lowed to compose with the result category of the
adjacent functor. However, categories of arguments
can be made more informative about grammatical
functions and word order. The basic principle is as
follows: The category assigned for argument n must
contain all and only the term information about NP,
for all i &lt; n. An NP2 type must contain in its cat-
egory word order information about NPi and NP2
but not NP3. This can be generalized as in (5):
(5) Category assignment for argument n:
</bodyText>
<equation confidence="0.81322475">
C(n)
Tr/T. or Tr\Ta
=
NP n
</equation>
<page confidence="0.968489">
168
</page>
<bodyText confidence="0.996102727272727">
Ta = Lexical category of an NP-
governing
-
governing element (e.g., a verb) in the lan-
guage whose highest genotype argument is
NP.
Tr = The category obtained from Ta by re-
moving NP.
Case markers in Turkish are suffixes attached to
noun groups.3 The types of case markers in the lex-
icon can be defined as:
</bodyText>
<listItem confidence="0.87413">
(6) Lexical type assignment for the case
</listItem>
<equation confidence="0.65731">
marker (-case) encoding argument n:
-case: = C(n):T(C(n))x\N: x
</equation>
<bodyText confidence="0.883533">
where T(C) denotes the semantic type for cate-
gory C:
</bodyText>
<listItem confidence="0.9856746">
(7) a. T(NP) = I (lower type for NP)
b. T(C) = T (if C is a type shifted category
as in (3))
c. T(C) = BBT (if C is a type shifted and
composed category)
</listItem>
<bodyText confidence="0.8613258">
(5) and (6) are schemas that yield three lexical
categories per -case: one for lower type, and two for
higher types which differ only in the directionality
of the main function due to (5). For instance, for the
accusative case suffix encoding NP2, we have:
</bodyText>
<equation confidence="0.995777">
-ACC : = NP 2: lx\N: x
: = ((SINP1)1(SINP1INP2)):Tx\N: x
: = ((SINP1)\(SINP1INP2)):Tx\N: x
</equation>
<bodyText confidence="0.970857789473684">
Type shifting alone is too constraining if the verbs
take their arguments in an order different from the
Applicative Hierarchy (§1). For instance, the cat-
egory of Turkish ditransitives is SINPi NP3 NP2.
Thus the verb has the wrapping semantics Ct/
where C is the permutator with the reduction
rule Cfga&gt; fag. Type shifting an NP3 yields
(SINPi INP2)/(SINPi INP2INP3) in which the argu-
ment category is not lexically licensed. (5) is order-
preserving in a language-particular way; the result
category always corresponds to a lexical category
in the language if the argument category does too.
For arguments requiring a non-canonical order,
we need type shifting and composition (hence the
third clause in (7)):
3As suggested in (Bozsahin and Gocmen, 1995), morpho-
logical and syntactic composition can be distinguished by asso-
ciating several attachment calculi with functors and arguments
(e.g., affixation, concatenation, clitics, etc.)
</bodyText>
<equation confidence="0.687831">
NP3: x (SINP1)/(SINPi INP3): Tx g
(SINPi INP2)/(SINPi INP3INP2): B(Tx) = BBTx
</equation>
<bodyText confidence="0.99901768">
Once syntactic category of the argument is fixed,
its semantics is uniquely determined by (7).
The combinatory primitives operating on the PAS
are I (7a), T (7b—c), and B (7c). T has the reduction
rule Taf&gt; f a, and If. &gt; f . The use of T or B signifies
that the term&apos;s category is a functor; its correct place
in the PAS is yet to be determined. I indicates that
the term is in the right place in the partially derived
PAS.
According to (5), there is a unique result-
argument combination for a higher type NP3, com-
pared to 24 using (3). (5) differs from (3) in another
significant aspect: Tr and Ta may contain direction-
ally underspecified categories if licensed by the lex-
icon. Directional underspecification is needed when
arguments of a verb can scramble to either side of
the verb. It is necessary in Turkish and Warlpiri
but not in Japanese or Korean. The neutral slash
is a lexical operator; it is instantiated to either \ or
/ during parsing. A crucial use of underspecifica-
tion is shown in (8). SV composition could not fol-
low through if the verbs had backward-looking cat-
egories; composition of the type shifted subject and
the verb in this case would only yield a backward-
looking 5\ NP2 by the schema (4).
</bodyText>
<figure confidence="0.936915571428571">
(8) Adam kurmul ama peak topladt masa-yl
man.NOM set but cluld.NOM gather table-ACC
B&gt;
S/(SINPOSINPi INP2 S/NP2 NP2
B&gt;
A
&apos;The man had set the table but the child is cleaning it.&apos;
</figure>
<bodyText confidence="0.999876916666667">
The schema in (5) makes the arguments available
in higher types, and allows lower (NP) types only
if higher types fail (as in NP2 in (8)). There are
two reasons for this: Higher types carry more in-
formation about surface order of the language, and
they are sufficient to cover bounded phenomena. §3
shows how higher types correctly derive the PAS in
various word orders. Lower types are indispensable
for unbounded constructions such as relativization
and coordination. The choice is due to a concern
for economy. If lower types were allowed freely,
they would yield the correct PAS as well:
</bodyText>
<figure confidence="0.948038888888889">
S/NP2
S/NP2
A&gt;
169
(9) S IO DO V
DV: Ce
A&lt;
SINPi INP3: (CV&apos; )(Io&apos;)
A&lt;
(Ce )(101 )(Ii&apos; ) A&lt;
S : (CV&apos; )(101 Wit )(Ist )?_Vt &lt;
NPi: Is&apos; NP3:Ii&apos; NP2: lo&apos;
(10) a. Mehmet kitab-t oku-du
M.NOM book-ACC read-PAST
S//V:Tm&apos; IV ITV: Tb&apos; TV: r&apos;
A&gt;
IV: Tb&apos; r&apos;
A&gt;
</figure>
<bodyText confidence="0.91940584">
S:Tm&apos; (Tb&apos; r&apos; )&gt;r&apos; b&apos;
&apos;Mehmet read the book.&apos;
In parsing this is achieved as follows: An NPk
can only be the argument in a rule of application,
and schema (5) is the only way to obtain NPk from
a noun group. Thus it suffices to check in the ap-
plication rules that if the argument category is NPk,
then the functor&apos;s result category (e.g., X in X/ Y)
has none of the terms with genotype indices lower
than k. NP2 in (8) is licensed because the adjacent
functor is S/NP2. NP2 in (9) is not licensed because
the adjacent functor has NPI.
For noun-governed grammatical functions such
as the genitive (NP5), (5) licenses result categories
that are underspecified with respect to the geno-
type index. This is indeed necessary because the
resulting NP can be further inflected on case and
assume a genotype index. For Turkish, the type
shifted category is C(5) =NPag, (NPagr\NP5).
Hence the genitive suffix bears the category
C(5)\N. Agreement features enforce the possessor-
possessed agreement on person and number via uni-
fication (as in UCG (Calder et al., 1988)):
-in uc -u
-GEN.3s tip -POSS.3s
</bodyText>
<sectionHeader confidence="0.747952" genericHeader="method">
3 Word Order and Scrambling
</sectionHeader>
<bodyText confidence="0.9871105">
Due to space limitations, the following abbre-
viated categories are employed in derivations:
</bodyText>
<equation confidence="0.981065333333333">
IV = SINPi
TV = SINP1INP2
DV = SINP1INP3INP2
</equation>
<bodyText confidence="0.967398166666667">
The categories licensed by (5) can then be written
as IV ITV and IV\TV for NP2, TV/DV and TV\DV
for NP3, etc. (10a-b) show the verb-final variations
in the word order. The bracketings in the PAS and
juxtaposition are left-associative; (fa)b is same as
lab.
</bodyText>
<figure confidence="0.685645">
b. kitab-r Mehmet oku-du
/V/TV:Tb&apos; SVV:Tm&apos; TV: r&apos;
Bx&lt;
S I TV : B(Tm&apos; )(Tb&apos; )
A&gt;
S : B(Tm&apos; )(Tb&apos; )r&apos; &gt;7-1 m&apos;
</figure>
<bodyText confidence="0.992619413793103">
(10a) exhibits spurious ambiguity. Forward com-
position of S//V and /V/ TV is possible, yielding
exactly the same PAS. This problem is resolved
by grammar rewriting in the sense proposed by
Eisner4 (1996). Grammar rewriting can be done
using predictive combinators (Wittenburg, 1987),
but they cannot handle crossing compositions that
are essential to our method. Other normal form
parsers, e.g. that of Hepple and Morrill (1989),
have the same problem. All grammar rules in (4)
in fact check the labels of the constituent cate-
gories, which show how the category is derived.
The labels are as in (Eisner, 1996). -FC: Output
of forward composition, of which forward cross-
ing composition is a special case. —BC: Output of
backward composition, of which backward cross-
ing composition is a special case. -OT: Lexical
or type shifted category. The goal is to block
e.g., X/Y-FC YIZ-{FC , BC , OT} =B&gt; X/Z and
X/Y—Fc Y—{Fc, BC, OT} A&gt;X in (10a). S/TV
composition would have the label —FC, which can-
not be an input to forward application. In (10b),
the backward composition follows through since it
has the category-label S/7&apos;V-BC, which the forward
application rule does not block. We use Eisner&apos;s
method to rewrite all rules in (4).
(11a-b) show the normal form parses for post-
verbal scrambling, and (11c-d) for verb-medial
cases.
</bodyText>
<footnote confidence="0.995272">
4Eisner (1996, p,81) in fact suggested that the labeling sys-
tem can be implemented in the grammar by templates, or in the
processor by labeling the chart entries.
</footnote>
<figure confidence="0.984540361111111">
kalem
pencil
N:
C(5)\N:T N:e (NPagr\NP5)\N: poss
AI A&lt;
N1).„ l(NP&amp;quot;,\NP5):Tp NP&amp;quot;,\NP5: poss e
A&gt;
NPag, :Tp&apos; (posse )&gt;(posse )p&apos;
&apos;The up of the pencil&apos;
170
(11) a. oku-du Mehmet kitab-t
read-PAST M.NOM book-ACC
TV: r&apos; SI IV: Tm&apos; IV\TV: Tb&apos;
Bx&gt;
S\TV : B (Tm&apos; )(Tb&apos;)
A&lt;
S : B(Tm&apos; ) (Tb&apos; )r&apos; &gt;r&apos; b&apos; m&apos;
&apos;Mehmet read the-book.&apos;
b. oku-du kitab-t Mehmet
TV: r&apos; IV\TV: Tb&apos; S\IV: TM/
A&lt;
IV : Tb&apos; r&apos;
A&lt;
S : Tm&apos; (Tb&apos; r&apos; )&gt;ri b&apos; m&apos;
c. kitab-z oku-du Mehmet
IV I TV:Tb&apos; TV: r&apos; S\IV: TM/
A&gt;
IV : Tb&apos; r&apos;
A&lt;
S : Tm&apos; (Tb&apos; r&apos; )&gt;ri b&apos; m&apos;
d. Mehmet oku-du kitab-1
S//V: Tm&apos; TV: r&apos; IV\TV: Tb&apos;
A&lt;
IV : Tb&apos; r&apos;
A&gt;
S : Tm&apos; (Tb&apos; r&apos; )&gt;r1 b&apos; m&apos;
</figure>
<bodyText confidence="0.997675052631579">
Controlled lexical redundancy of higher types,
e.g., having both (and only) IV ITV and IV\TV li-
censed by the lexicon for an NP2, does not lead to
alternative derivations in (10-11). Assume that AI B
B\C, where A/B and B\C are categories produced
by (5), gives a successful parse using the output
A \C. A\B B\C and A\B BIC are not composable
types according to (4). The other possible configu-
ration, AIB BIC, yields an AIC which looks for C
in the other direction. Multiple derivations appear
to be possible if there is an order-changing com-
position over C, such as C/C (e.g., a VP modifier
/V//V). (12) shows two possible configurations with
a C on the right. (12b) is blocked by label check be-
cause A/C-FC C =A&gt; A is not licensed by the
grammar. If C were to the left, only (12a) would
succeed. Similar reasoning can be used to show the
uniqueness of derivation in other patterns of direc-
tions.
</bodyText>
<figure confidence="0.927172181818182">
(12) a. C/C A I B B\C C
------Bx&gt;
A\C-FC
Bx &lt;
A/C-BC
A&gt;
A -OT
b. CICAIB BIC C
B&gt;
A/C-FC
--***--A&gt;
</figure>
<bodyText confidence="0.999693740740741">
Constrained type shifting avoids the problem
with freely available categories in Eisner&apos;s normal
form parsing scheme. However, some surface char-
acteristics of the language, such as lack of case
marking in certain constructions, puts the burden
of type shifting on the processor (Bozsahin, 1997).
Lower type arguments such as NP2 pose a different
kind of ambiguity problem. Although they are re-
quired in unbounded constructions, they may yield
alternative derivations of local scrambling cases in a
labelled CCG. For instance, when NP2 is peripheral
in a ditransitive construction and the verb can form
a constituent with all the other arguments (5\NP2 or
S/NP2), the parser allows NP2. This is unavoidable
unless the parser is made aware of the local and non-
local context. In other words, this method solves the
spurious ambiguity problem between higher types,
but not among higher and lower types. One can try
to remedy this problem by making the availability of
types dependent on some measures of prominence,
e.g., allowing subjects only in higher types to ac-
count for subject-complement asymmetries. But, as
pointed out by Eisner (1996, p.85), this is not spu-
rious ambiguity in the technical sense, just multi-
ple derivations due to alternative lexical category
assignments. Eliminating ambiguity in such cases
remains to be solved.
</bodyText>
<sectionHeader confidence="0.949564" genericHeader="method">
4 Revealing the PAS
</sectionHeader>
<bodyText confidence="0.999975333333333">
The output of the parser is a combinatory form. The
combinators in this form may arise from the CCG
schema, i.e., the compositor B, and the substitutor
S (Steedman, 1987). They may also be projected
from the PAS of a lexical item, such as the dupli-
cator W (with the reduction rule Wf a&gt; faa) for re-
flexives, and Bn+1C for predicate composition with
the causative suffix. For instance, the combinatory
form for (13a) is the expression (13b).
</bodyText>
<figure confidence="0.6189870625">
(13) a. Adam cocug-a kitab-t
man.NOM child-DAT book-ACC
.
t I
.971 :c&apos;
oku-t-tu
read-CAUS-PAST
:B3cAusCr&apos;
&apos;The man had the child read the book.&apos;
b. T.m&apos; -(13.(T.b&apos; )•(T.c&apos; )•(B3.cAusE.C.ri )) -.
:b&apos;
171
T ri
B • T c&apos;
-tor
T b&apos; B3 CAUSE
</figure>
<bodyText confidence="0.994420317073171">
Although B works in a binary manner in CCG
to achieve abstraction, it requires 3 arguments for
full evaluation (its order is 3). Revealing the PAS
amounts to stripping off all combinators from the
combinatory form by evaluating the reducible ex-
pressions (redexes). Bf g is not a redex but Bfga is.
In other words, the derivations by the parser must
saturate the combinators in order to reveal the PAS,
which should contain no combinators. PAS is the
semantic normal form of a derivation.
The sequence of evaluation is the normal or-
der, which corresponds to reducing the leftmost-
outermost redex first (Peyton Jones, 1987). In tree-
theoretic terms, this is depth-first reduction of the
combinator tree in which the rearrangement is con-
trolled by the reduction rule of the leftmost com-
binator, e.g., Tml X&gt;Xml where X is the paren-
thesized subexpression in (13b). Reduction by T
yields:
B3.CAUSE.C.ri .c/ .b&apos; .m&apos; &gt;
CAUSE.(C.? •c&apos; •b&apos; ).m&apos; &gt;
CAUSE-(r&apos; .b&apos; .c&apos; ).m&apos;
By the second Church-Rosser theorem, normal
order evaluation will terminate if the combinatory
form has a normal form. But Combinatory Logic
has the same power as A—calculus, and suffers
from the same undecidability results. For instance,
WWW has no normal form because the reductions
will never terminate. Some terminating reductions,
such as CI I b&gt;bl, has no normal form either. It is
an open question as to whether such forms can be
projected from a natural language lexicon. In an ex-
pression X•Y where X is not a redex, the evalua-
tor recursively evaluates to reduce as much as pos-
sible because X may contain other redexes, as in (5)
above. Recursion is terminated either by obtaining
the normal form, as in (6) above, or by equivalence
check. For instance, (C.(1.a).b).Y recurses on the
left subexpression to obtain (C•a-b) then gives up
on this subexpression since the evaluator returns the
same expression without further evaluation.
</bodyText>
<sectionHeader confidence="0.999348" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999572041666667">
If an ordered representation of the PAS is assumed
as many theories do nowadays, its derivation from
the surface string requires that the category assign-
ment for case cues be rich enough in word order
and grammatical function information to correctly
place the arguments in the PAS. This work shows
that these categories and their types can be uniquely
characterized in the lexicon and tightly controlled in
parsing. Spurious ambiguity problem is kept under
control by normal form parsing on the syntactic side
with the use of labelled categories in the grammar.
Thus, the PAS of a derivation can be determined
uniquely even in the presence of type shifting. The
same strategy can account for deriving the PAS in
unbounded constructions and non-constituent coor-
dination (Bozsahin, 1997).
Parser&apos;s output (the combinatory form) is reduced
to a PAS by normal order evaluation. Model-
theoretic interpretation can proceed in parallel with
derivations, or as a post-evaluation stage which
takes the PAS as input. Quantification and scram-
bling in free word order languages interact in many
ways, and future work will concentrate on this as-
pect of semantics.
</bodyText>
<figure confidence="0.683795285714286">
B •
T c&apos;
T b&apos; B3 CAUSE
Further reductions eventually reveal the PAS:
B• (T•b&apos; )-(T-c&apos; ).(B3-cAusE•C•ri )•m&apos; &gt; (1)
T•b&apos; • (T•c&apos; • (B3•cAusE•C•r&apos; ))•m&apos; &gt; (2)
Tc&apos; •(B3 .cAusE.C.r&apos; ).b&apos; -m&apos; &gt; (3)
</figure>
<page confidence="0.98889">
172
</page>
<sectionHeader confidence="0.997781" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99971171641791">
Alex Alsina. 1996. The Role of Argument Structure
in Grammar. CSLI, Stanford, CA.
Cern Bozsahin and Elvan Gocmen. 1995. A cate-
gorial framework for composition in multiple lin-
guistic domains. In Proceedings of the Fourth In-
ternational Conference on Cognitive Science of
NLP, Dublin.
Cern Bozsahin. 1997. Grammatical functions and
word order in Combinatory Grammar. ms.
Joan Bresnan and Jonni M. Kanerva. 1989. Loca-
tive inversion in Chichewa: A case study of fac-
torization in grammar. Linguistic Inquiry, 20:1-
50.
Jonathan Calder, Ewan Klein, and Henk Zeevat.
1988. Unification categorial grammar. In Pro-
ceedings of the 12th International Conference on
Computational Linguistics, Budapest.
Haskell B. Curry and Robert Feys. 1958. Combina-
tory Logic I. North-Holland, Amsterdam.
David Dowty. 1988. Type raising, functional com-
position, and non-constituent conjunction. In
Richard T Oehrle, Emmon Bach, and Deirdre
Wheeler, editors, Categorial Grammars and Nat-
ural Language Structures. D. Reidel, Dordrecht.
Jason Eisner. 1996. Efficient normal-form pars-
ing for combinatory categorial grammar. In Pro-
ceedings of the 34th Annual Meeting of the ACL,
pages 79-86.
Jane Grimshaw. 1990. Argument Structure. MIT
Press, Cambridge, MA.
Mark Hepple and Glyn Morrill. 1989. Parsing and
derivational equivalence. In Proceedings of the
4th EACL, Manchester.
Beryl Hoffman. 1995. The Computational Anal-
ysis of the Syntax and Interpretation of &amp;quot;Free&amp;quot;
Word Order in Turkish. Ph.D. thesis, University
of Pennsylvania.
Lauri Karttunen. 1989. Radical lexicalism. In
Mark Baltin and Anthony Kroch, editors, Alter-
native Conceptions of Phrase Structure. Chicago
University Press.
Simon L. Peyton Jones. 1987. The Implementation
of Functional Programing Languages. Prentice-
Hall, New York.
Sebastian Shaumyan. 1987. A Semiotic Theory of
Language. Indiana University Press.
Mark Steedman. 1987. Combinatory grammars
and parasitic gaps. Natural Language and Lin-
guistic Theory, 5:403-439.
Mark Steedman. 1988. Combinators and gram-
mars. In Richard T. Oehrle, Emmon Bach, and
Deirdre Wheeler, editors, Categorial Grammars
and Natural Language Structures. D. Reidel,
Dordrecht.
Mark Steedman. 1990. Gapping as constituent co-
ordination. Linguistics and Philosophy, 13:207-
263.
Mark Steedman. 1996. Surface Structure and In-
terpretation. MIT Press, Cambridge, MA.
K. Vijay-Shanker and David J. Weir. 1993. Parsing
some constrained grammar formalisms. Compu-
tational Linguistics, 19:591-636.
Stephen Wechsler. 1995. The Semantic Basis of Ar-
gument Structure. CSLI, Stanford, CA.
Kent Wittenburg. 1987. Predictive combinators. In
Proceedings of the 25th Annual Meeting of the
ACL, pages 73-79.
</reference>
<page confidence="0.999104">
173
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.936160">
<title confidence="0.997481">Deriving the Predicate-Argument Structure for a Free Word Order Language *</title>
<author confidence="0.991778">Cern Bozsahin</author>
<affiliation confidence="0.9894375">Department of Computer Engineering Middle East Technical University</affiliation>
<address confidence="0.999993">06531 Ankara, Turkey</address>
<email confidence="0.994189">bozsahin@ceng.metu.edu.tr</email>
<abstract confidence="0.998459235294118">In relatively free word order languages, grammatical functions are intricately related to case marking. Assuming an ordered representation of the predicate-argument structure, this work proposes a Combinatory Categorial Grammar formulation of relating surface case cues to categories and types for correctly placing the arguments in the predicateargument structure. This is achieved by treating case markers as type shifters. Unlike other CG formulations, type shifting does not proliferate or cause spurious ambiguity. Categories of all argument-encoding grammatical functions follow from the same principle of category assignment. Normal order evaluation of the combinatory form reveals the predicate-argument structure. The application of the method to Turkish is shown.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Alex Alsina</author>
</authors>
<date>1996</date>
<booktitle>The Role of Argument Structure in Grammar. CSLI,</booktitle>
<location>Stanford, CA.</location>
<contexts>
<context position="1256" citStr="Alsina, 1996" startWordPosition="174" endWordPosition="175">ke other CG formulations, type shifting does not proliferate or cause spurious ambiguity. Categories of all argument-encoding grammatical functions follow from the same principle of category assignment. Normal order evaluation of the combinatory form reveals the predicate-argument structure. The application of the method to Turkish is shown. 1 Introduction Recent theorizing in linguistics brought forth a level of representation called the Predicate-Argument Structure (PAS). PAS acts as the interface between lexical semantics and d-structure in GB (Grimshaw, 1990), functional structure in LFG (Alsina, 1996), and complement structure in HPSG (Wechsler, 1995). PAS is the sole level of representation in Combinatory Categorial Grammar (CCG) (Steedman, 1996). All formulations assume a prominence-based structured representation for PAS, although they differ in the terms used for defining prominence. For instance, Grimshaw (1990) defines the thematic hierarchy as: Agent &gt; Experiencer &gt; Goal / Location / Source &gt; Theme • Thanks to Mark Steedman for discussion and material, and to the anonymous reviewer of an extended version whose comments led to significant revisions. This research is supported by TUBI</context>
</contexts>
<marker>Alsina, 1996</marker>
<rawString>Alex Alsina. 1996. The Role of Argument Structure in Grammar. CSLI, Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cern Bozsahin</author>
<author>Elvan Gocmen</author>
</authors>
<title>A categorial framework for composition in multiple linguistic domains.</title>
<date>1995</date>
<booktitle>In Proceedings of the Fourth International Conference on Cognitive Science of NLP,</booktitle>
<location>Dublin.</location>
<contexts>
<context position="9224" citStr="Bozsahin and Gocmen, 1995" startWordPosition="1520" endWordPosition="1523"> (§1). For instance, the category of Turkish ditransitives is SINPi NP3 NP2. Thus the verb has the wrapping semantics Ct/ where C is the permutator with the reduction rule Cfga&gt; fag. Type shifting an NP3 yields (SINPi INP2)/(SINPi INP2INP3) in which the argument category is not lexically licensed. (5) is orderpreserving in a language-particular way; the result category always corresponds to a lexical category in the language if the argument category does too. For arguments requiring a non-canonical order, we need type shifting and composition (hence the third clause in (7)): 3As suggested in (Bozsahin and Gocmen, 1995), morphological and syntactic composition can be distinguished by associating several attachment calculi with functors and arguments (e.g., affixation, concatenation, clitics, etc.) NP3: x (SINP1)/(SINPi INP3): Tx g (SINPi INP2)/(SINPi INP3INP2): B(Tx) = BBTx Once syntactic category of the argument is fixed, its semantics is uniquely determined by (7). The combinatory primitives operating on the PAS are I (7a), T (7b—c), and B (7c). T has the reduction rule Taf&gt; f a, and If. &gt; f . The use of T or B signifies that the term&apos;s category is a functor; its correct place in the PAS is yet to be deter</context>
</contexts>
<marker>Bozsahin, Gocmen, 1995</marker>
<rawString>Cern Bozsahin and Elvan Gocmen. 1995. A categorial framework for composition in multiple linguistic domains. In Proceedings of the Fourth International Conference on Cognitive Science of NLP, Dublin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cern Bozsahin</author>
</authors>
<title>Grammatical functions and word order in Combinatory Grammar.</title>
<date>1997</date>
<note>ms.</note>
<contexts>
<context position="16732" citStr="Bozsahin, 1997" startWordPosition="2861" endWordPosition="2862">ked by label check because A/C-FC C =A&gt; A is not licensed by the grammar. If C were to the left, only (12a) would succeed. Similar reasoning can be used to show the uniqueness of derivation in other patterns of directions. (12) a. C/C A I B B\C C ------Bx&gt; A\C-FC Bx &lt; A/C-BC A&gt; A -OT b. CICAIB BIC C B&gt; A/C-FC --***--A&gt; Constrained type shifting avoids the problem with freely available categories in Eisner&apos;s normal form parsing scheme. However, some surface characteristics of the language, such as lack of case marking in certain constructions, puts the burden of type shifting on the processor (Bozsahin, 1997). Lower type arguments such as NP2 pose a different kind of ambiguity problem. Although they are required in unbounded constructions, they may yield alternative derivations of local scrambling cases in a labelled CCG. For instance, when NP2 is peripheral in a ditransitive construction and the verb can form a constituent with all the other arguments (5\NP2 or S/NP2), the parser allows NP2. This is unavoidable unless the parser is made aware of the local and nonlocal context. In other words, this method solves the spurious ambiguity problem between higher types, but not among higher and lower ty</context>
</contexts>
<marker>Bozsahin, 1997</marker>
<rawString>Cern Bozsahin. 1997. Grammatical functions and word order in Combinatory Grammar. ms.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joan Bresnan</author>
<author>Jonni M Kanerva</author>
</authors>
<title>Locative inversion in Chichewa: A case study of factorization in grammar. Linguistic Inquiry,</title>
<date>1989</date>
<pages>20--1</pages>
<contexts>
<context position="1985" citStr="Bresnan and Kanerva, 1989" startWordPosition="284" endWordPosition="287">tory Categorial Grammar (CCG) (Steedman, 1996). All formulations assume a prominence-based structured representation for PAS, although they differ in the terms used for defining prominence. For instance, Grimshaw (1990) defines the thematic hierarchy as: Agent &gt; Experiencer &gt; Goal / Location / Source &gt; Theme • Thanks to Mark Steedman for discussion and material, and to the anonymous reviewer of an extended version whose comments led to significant revisions. This research is supported by TUBITAK (EEEAG-90) and NATO Science Division (TULANGUAGE). whereas LFG accounts make use of the following (Bresnan and Kanerva, 1989): Agent &gt; Beneficiary &gt; Goal / Experiencer &gt; Inst &gt; Patient / Theme &gt; Locative. As an illustration, the predicate-argument structures of the agentive verb murder and the psychological verb fear are (Grimshaw, 1990, p.8): murder (x (y)) Agent Theme fear (x (y)) Exp Theme To abstract away from language-particular case systems and mapping of thematic roles to grammatical functions, I assume the Applicative Hierarchy of Shaumyan (1987) for the definition of prominence: Primary Term &gt; Secondary Term &gt; Tertiary Term &gt; Oblique Term. Primacy of a term over another is defined by the former having a wid</context>
</contexts>
<marker>Bresnan, Kanerva, 1989</marker>
<rawString>Joan Bresnan and Jonni M. Kanerva. 1989. Locative inversion in Chichewa: A case study of factorization in grammar. Linguistic Inquiry, 20:1-50.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jonathan Calder</author>
<author>Ewan Klein</author>
<author>Henk Zeevat</author>
</authors>
<title>Unification categorial grammar.</title>
<date>1988</date>
<booktitle>In Proceedings of the 12th International Conference on Computational Linguistics,</booktitle>
<location>Budapest.</location>
<contexts>
<context position="12776" citStr="Calder et al., 1988" startWordPosition="2147" endWordPosition="2150">use the adjacent functor is S/NP2. NP2 in (9) is not licensed because the adjacent functor has NPI. For noun-governed grammatical functions such as the genitive (NP5), (5) licenses result categories that are underspecified with respect to the genotype index. This is indeed necessary because the resulting NP can be further inflected on case and assume a genotype index. For Turkish, the type shifted category is C(5) =NPag, (NPagr\NP5). Hence the genitive suffix bears the category C(5)\N. Agreement features enforce the possessorpossessed agreement on person and number via unification (as in UCG (Calder et al., 1988)): -in uc -u -GEN.3s tip -POSS.3s 3 Word Order and Scrambling Due to space limitations, the following abbreviated categories are employed in derivations: IV = SINPi TV = SINP1INP2 DV = SINP1INP3INP2 The categories licensed by (5) can then be written as IV ITV and IV\TV for NP2, TV/DV and TV\DV for NP3, etc. (10a-b) show the verb-final variations in the word order. The bracketings in the PAS and juxtaposition are left-associative; (fa)b is same as lab. b. kitab-r Mehmet oku-du /V/TV:Tb&apos; SVV:Tm&apos; TV: r&apos; Bx&lt; S I TV : B(Tm&apos; )(Tb&apos; ) A&gt; S : B(Tm&apos; )(Tb&apos; )r&apos; &gt;7-1 m&apos; (10a) exhibits spurious ambiguity. F</context>
</contexts>
<marker>Calder, Klein, Zeevat, 1988</marker>
<rawString>Jonathan Calder, Ewan Klein, and Henk Zeevat. 1988. Unification categorial grammar. In Proceedings of the 12th International Conference on Computational Linguistics, Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Haskell B Curry</author>
<author>Robert Feys</author>
</authors>
<title>Combinatory Logic I.</title>
<date>1958</date>
<publisher>North-Holland,</publisher>
<location>Amsterdam.</location>
<contexts>
<context position="6158" citStr="Curry and Feys, 1958" startWordPosition="964" endWordPosition="967">mapping due to its lexicalism. Grammatical functions of the nouns in the lexicon are assigned 2aka. type raising, lifting, or type change by case markers, which are also in the lexicon. Thus, grammatical function marking follows naturally from the general CCG schema comprising rules of application (A) and composition (B). The functor-argument distinction in CG helps to model prominence relations without extra levels of representation. CCG schema (Steedman (1988; 1990)) is summarized in (4). Combinator notation is preferred here because they are the formal primitives operating on the PAS (cf. (Curry and Feys, 1958) for Combinatory Logic). Application is the only primitive of the combinatory system; it is indicated by juxtaposition in the examples and denoted by in the normal order evaluator (§4). B has the reduction rule Bf ga&gt; f (ga). (4) X/ Y: f Y: a X: fa Y: a X\Y: f .,k&lt; X: fa X/ Y: f Y/Z: g 8&gt; X/Z: Bfg Y\Z: g X\Y: f Bf g X / Y: f Y\Z: g .13x Bf g Y / Z: g X\Y: f B&lt; X/Z: Bfg 2 Grammatical Functions, Type Shifting, and Composition In order to derive all permutations of a ditransitive construction in Turkish using (3), the dativemarked indirect object (NP3) must be type shifted in 48 (4!2) different w</context>
</contexts>
<marker>Curry, Feys, 1958</marker>
<rawString>Haskell B. Curry and Robert Feys. 1958. Combinatory Logic I. North-Holland, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Dowty</author>
</authors>
<title>Type raising, functional composition, and non-constituent conjunction.</title>
<date>1988</date>
<booktitle>Categorial Grammars and Natural Language Structures.</booktitle>
<editor>In Richard T Oehrle, Emmon Bach, and Deirdre Wheeler, editors,</editor>
<location>Dordrecht.</location>
<contexts>
<context position="4613" citStr="Dowty, 1988" startWordPosition="714" endWordPosition="715">ws two verb-final permutations of underlying SOV. The relationship between case marking and scrambling is crucial in languages with flexible word order. A computational solution to the problem must rely on some principles of parsimony for representing categories and types of arguments and predicates, and efficiency of processing. In a categorial formulation, grammatical functions of preverbal and postverbal NPs in (2) can be made explicit by type shifting2 the subject to S/(S\NP1) and the object to (S\NP1)\((S\NP1 )/NP2). These categories follow from the order-preserving type shifting scheme (Dowty, 1988): (3) NP T/(T\NP) or TVT/NP) To resolve the opposition between surface order and the PAS in a free word order language, one can let the type shifted categories of terms proliferate, or reformulate CCG in such a way that arguments of the verbs are sets, rather than lists whose arguments are made available one at a time. The former alternative makes the spurious ambiguity problem of CG parsing (Karttunen, 1989) even more severe. Multiset CCG (Hoffman, 1995) is an example of the setoriented approach. It is known to be computationally tractable but less efficient than the polynomial time CCG algor</context>
</contexts>
<marker>Dowty, 1988</marker>
<rawString>David Dowty. 1988. Type raising, functional composition, and non-constituent conjunction. In Richard T Oehrle, Emmon Bach, and Deirdre Wheeler, editors, Categorial Grammars and Natural Language Structures. D. Reidel, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Eisner</author>
</authors>
<title>Efficient normal-form parsing for combinatory categorial grammar.</title>
<date>1996</date>
<booktitle>In Proceedings of the 34th Annual Meeting of the ACL,</booktitle>
<pages>79--86</pages>
<contexts>
<context position="13949" citStr="Eisner, 1996" startWordPosition="2350" endWordPosition="2351"> m&apos; (10a) exhibits spurious ambiguity. Forward composition of S//V and /V/ TV is possible, yielding exactly the same PAS. This problem is resolved by grammar rewriting in the sense proposed by Eisner4 (1996). Grammar rewriting can be done using predictive combinators (Wittenburg, 1987), but they cannot handle crossing compositions that are essential to our method. Other normal form parsers, e.g. that of Hepple and Morrill (1989), have the same problem. All grammar rules in (4) in fact check the labels of the constituent categories, which show how the category is derived. The labels are as in (Eisner, 1996). -FC: Output of forward composition, of which forward crossing composition is a special case. —BC: Output of backward composition, of which backward crossing composition is a special case. -OT: Lexical or type shifted category. The goal is to block e.g., X/Y-FC YIZ-{FC , BC , OT} =B&gt; X/Z and X/Y—Fc Y—{Fc, BC, OT} A&gt;X in (10a). S/TV composition would have the label —FC, which cannot be an input to forward application. In (10b), the backward composition follows through since it has the category-label S/7&apos;V-BC, which the forward application rule does not block. We use Eisner&apos;s method to rewrite </context>
<context position="17577" citStr="Eisner (1996" startWordPosition="2999" endWordPosition="3000">hen NP2 is peripheral in a ditransitive construction and the verb can form a constituent with all the other arguments (5\NP2 or S/NP2), the parser allows NP2. This is unavoidable unless the parser is made aware of the local and nonlocal context. In other words, this method solves the spurious ambiguity problem between higher types, but not among higher and lower types. One can try to remedy this problem by making the availability of types dependent on some measures of prominence, e.g., allowing subjects only in higher types to account for subject-complement asymmetries. But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. Eliminating ambiguity in such cases remains to be solved. 4 Revealing the PAS The output of the parser is a combinatory form. The combinators in this form may arise from the CCG schema, i.e., the compositor B, and the substitutor S (Steedman, 1987). They may also be projected from the PAS of a lexical item, such as the duplicator W (with the reduction rule Wf a&gt; faa) for reflexives, and Bn+1C for predicate composition with the causative suffix. For instance</context>
</contexts>
<marker>Eisner, 1996</marker>
<rawString>Jason Eisner. 1996. Efficient normal-form parsing for combinatory categorial grammar. In Proceedings of the 34th Annual Meeting of the ACL, pages 79-86.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jane Grimshaw</author>
</authors>
<title>Argument Structure.</title>
<date>1990</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="1212" citStr="Grimshaw, 1990" startWordPosition="168" endWordPosition="169">y treating case markers as type shifters. Unlike other CG formulations, type shifting does not proliferate or cause spurious ambiguity. Categories of all argument-encoding grammatical functions follow from the same principle of category assignment. Normal order evaluation of the combinatory form reveals the predicate-argument structure. The application of the method to Turkish is shown. 1 Introduction Recent theorizing in linguistics brought forth a level of representation called the Predicate-Argument Structure (PAS). PAS acts as the interface between lexical semantics and d-structure in GB (Grimshaw, 1990), functional structure in LFG (Alsina, 1996), and complement structure in HPSG (Wechsler, 1995). PAS is the sole level of representation in Combinatory Categorial Grammar (CCG) (Steedman, 1996). All formulations assume a prominence-based structured representation for PAS, although they differ in the terms used for defining prominence. For instance, Grimshaw (1990) defines the thematic hierarchy as: Agent &gt; Experiencer &gt; Goal / Location / Source &gt; Theme • Thanks to Mark Steedman for discussion and material, and to the anonymous reviewer of an extended version whose comments led to significant r</context>
</contexts>
<marker>Grimshaw, 1990</marker>
<rawString>Jane Grimshaw. 1990. Argument Structure. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Hepple</author>
<author>Glyn Morrill</author>
</authors>
<title>Parsing and derivational equivalence.</title>
<date>1989</date>
<booktitle>In Proceedings of the 4th EACL,</booktitle>
<location>Manchester.</location>
<contexts>
<context position="13768" citStr="Hepple and Morrill (1989)" startWordPosition="2315" endWordPosition="2318">The bracketings in the PAS and juxtaposition are left-associative; (fa)b is same as lab. b. kitab-r Mehmet oku-du /V/TV:Tb&apos; SVV:Tm&apos; TV: r&apos; Bx&lt; S I TV : B(Tm&apos; )(Tb&apos; ) A&gt; S : B(Tm&apos; )(Tb&apos; )r&apos; &gt;7-1 m&apos; (10a) exhibits spurious ambiguity. Forward composition of S//V and /V/ TV is possible, yielding exactly the same PAS. This problem is resolved by grammar rewriting in the sense proposed by Eisner4 (1996). Grammar rewriting can be done using predictive combinators (Wittenburg, 1987), but they cannot handle crossing compositions that are essential to our method. Other normal form parsers, e.g. that of Hepple and Morrill (1989), have the same problem. All grammar rules in (4) in fact check the labels of the constituent categories, which show how the category is derived. The labels are as in (Eisner, 1996). -FC: Output of forward composition, of which forward crossing composition is a special case. —BC: Output of backward composition, of which backward crossing composition is a special case. -OT: Lexical or type shifted category. The goal is to block e.g., X/Y-FC YIZ-{FC , BC , OT} =B&gt; X/Z and X/Y—Fc Y—{Fc, BC, OT} A&gt;X in (10a). S/TV composition would have the label —FC, which cannot be an input to forward applicatio</context>
</contexts>
<marker>Hepple, Morrill, 1989</marker>
<rawString>Mark Hepple and Glyn Morrill. 1989. Parsing and derivational equivalence. In Proceedings of the 4th EACL, Manchester.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Beryl Hoffman</author>
</authors>
<title>The Computational Analysis of the Syntax and Interpretation of &amp;quot;Free&amp;quot; Word Order in Turkish.</title>
<date>1995</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="5072" citStr="Hoffman, 1995" startWordPosition="793" endWordPosition="794">ng2 the subject to S/(S\NP1) and the object to (S\NP1)\((S\NP1 )/NP2). These categories follow from the order-preserving type shifting scheme (Dowty, 1988): (3) NP T/(T\NP) or TVT/NP) To resolve the opposition between surface order and the PAS in a free word order language, one can let the type shifted categories of terms proliferate, or reformulate CCG in such a way that arguments of the verbs are sets, rather than lists whose arguments are made available one at a time. The former alternative makes the spurious ambiguity problem of CG parsing (Karttunen, 1989) even more severe. Multiset CCG (Hoffman, 1995) is an example of the setoriented approach. It is known to be computationally tractable but less efficient than the polynomial time CCG algorithm of Vijay-Shanker and Weir (1993). I try to show in this paper that the traditional curried notation of CG with type shifting can be maintained to account for Surface Form44PAS mapping without leading to proliferation of argument categories or to spurious ambiguity. Categorial framework is particularly suited for this mapping due to its lexicalism. Grammatical functions of the nouns in the lexicon are assigned 2aka. type raising, lifting, or type chan</context>
</contexts>
<marker>Hoffman, 1995</marker>
<rawString>Beryl Hoffman. 1995. The Computational Analysis of the Syntax and Interpretation of &amp;quot;Free&amp;quot; Word Order in Turkish. Ph.D. thesis, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lauri Karttunen</author>
</authors>
<title>Radical lexicalism.</title>
<date>1989</date>
<booktitle>In Mark Baltin and Anthony Kroch, editors, Alternative Conceptions of Phrase Structure.</booktitle>
<publisher>Chicago University Press.</publisher>
<contexts>
<context position="5025" citStr="Karttunen, 1989" startWordPosition="785" endWordPosition="786">al NPs in (2) can be made explicit by type shifting2 the subject to S/(S\NP1) and the object to (S\NP1)\((S\NP1 )/NP2). These categories follow from the order-preserving type shifting scheme (Dowty, 1988): (3) NP T/(T\NP) or TVT/NP) To resolve the opposition between surface order and the PAS in a free word order language, one can let the type shifted categories of terms proliferate, or reformulate CCG in such a way that arguments of the verbs are sets, rather than lists whose arguments are made available one at a time. The former alternative makes the spurious ambiguity problem of CG parsing (Karttunen, 1989) even more severe. Multiset CCG (Hoffman, 1995) is an example of the setoriented approach. It is known to be computationally tractable but less efficient than the polynomial time CCG algorithm of Vijay-Shanker and Weir (1993). I try to show in this paper that the traditional curried notation of CG with type shifting can be maintained to account for Surface Form44PAS mapping without leading to proliferation of argument categories or to spurious ambiguity. Categorial framework is particularly suited for this mapping due to its lexicalism. Grammatical functions of the nouns in the lexicon are ass</context>
</contexts>
<marker>Karttunen, 1989</marker>
<rawString>Lauri Karttunen. 1989. Radical lexicalism. In Mark Baltin and Anthony Kroch, editors, Alternative Conceptions of Phrase Structure. Chicago University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Simon L Peyton Jones</author>
</authors>
<title>The Implementation of Functional Programing Languages.</title>
<date>1987</date>
<publisher>PrenticeHall,</publisher>
<location>New York.</location>
<contexts>
<context position="19091" citStr="Jones, 1987" startWordPosition="3260" endWordPosition="3261"> B works in a binary manner in CCG to achieve abstraction, it requires 3 arguments for full evaluation (its order is 3). Revealing the PAS amounts to stripping off all combinators from the combinatory form by evaluating the reducible expressions (redexes). Bf g is not a redex but Bfga is. In other words, the derivations by the parser must saturate the combinators in order to reveal the PAS, which should contain no combinators. PAS is the semantic normal form of a derivation. The sequence of evaluation is the normal order, which corresponds to reducing the leftmostoutermost redex first (Peyton Jones, 1987). In treetheoretic terms, this is depth-first reduction of the combinator tree in which the rearrangement is controlled by the reduction rule of the leftmost combinator, e.g., Tml X&gt;Xml where X is the parenthesized subexpression in (13b). Reduction by T yields: B3.CAUSE.C.ri .c/ .b&apos; .m&apos; &gt; CAUSE.(C.? •c&apos; •b&apos; ).m&apos; &gt; CAUSE-(r&apos; .b&apos; .c&apos; ).m&apos; By the second Church-Rosser theorem, normal order evaluation will terminate if the combinatory form has a normal form. But Combinatory Logic has the same power as A—calculus, and suffers from the same undecidability results. For instance, WWW has no normal form</context>
</contexts>
<marker>Jones, 1987</marker>
<rawString>Simon L. Peyton Jones. 1987. The Implementation of Functional Programing Languages. PrenticeHall, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sebastian Shaumyan</author>
</authors>
<title>A Semiotic Theory of Language.</title>
<date>1987</date>
<publisher>Indiana University Press.</publisher>
<contexts>
<context position="2420" citStr="Shaumyan (1987)" startWordPosition="357" endWordPosition="358">icant revisions. This research is supported by TUBITAK (EEEAG-90) and NATO Science Division (TULANGUAGE). whereas LFG accounts make use of the following (Bresnan and Kanerva, 1989): Agent &gt; Beneficiary &gt; Goal / Experiencer &gt; Inst &gt; Patient / Theme &gt; Locative. As an illustration, the predicate-argument structures of the agentive verb murder and the psychological verb fear are (Grimshaw, 1990, p.8): murder (x (y)) Agent Theme fear (x (y)) Exp Theme To abstract away from language-particular case systems and mapping of thematic roles to grammatical functions, I assume the Applicative Hierarchy of Shaumyan (1987) for the definition of prominence: Primary Term &gt; Secondary Term &gt; Tertiary Term &gt; Oblique Term. Primacy of a term over another is defined by the former having a wider range of syntactic features than the latter. In an accusative language, subjects are less marked (hence primary) than objects; all verbs take subjects but only transitive verbs take objects. Terms (=arguments) can be denoted by the genotype indices on NPs, such as NP,, NP2 for primary and secondary terms.&apos; An NP2 would be a direct object (NPa„) in an accusative language, or an ergativemarked NP (NPerg) in an ergative language. T</context>
</contexts>
<marker>Shaumyan, 1987</marker>
<rawString>Sebastian Shaumyan. 1987. A Semiotic Theory of Language. Indiana University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Combinatory grammars and parasitic gaps.</title>
<date>1987</date>
<booktitle>Natural Language and Linguistic Theory,</booktitle>
<pages>5--403</pages>
<contexts>
<context position="17964" citStr="Steedman, 1987" startWordPosition="3063" endWordPosition="3064">to remedy this problem by making the availability of types dependent on some measures of prominence, e.g., allowing subjects only in higher types to account for subject-complement asymmetries. But, as pointed out by Eisner (1996, p.85), this is not spurious ambiguity in the technical sense, just multiple derivations due to alternative lexical category assignments. Eliminating ambiguity in such cases remains to be solved. 4 Revealing the PAS The output of the parser is a combinatory form. The combinators in this form may arise from the CCG schema, i.e., the compositor B, and the substitutor S (Steedman, 1987). They may also be projected from the PAS of a lexical item, such as the duplicator W (with the reduction rule Wf a&gt; faa) for reflexives, and Bn+1C for predicate composition with the causative suffix. For instance, the combinatory form for (13a) is the expression (13b). (13) a. Adam cocug-a kitab-t man.NOM child-DAT book-ACC . t I .971 :c&apos; oku-t-tu read-CAUS-PAST :B3cAusCr&apos; &apos;The man had the child read the book.&apos; b. T.m&apos; -(13.(T.b&apos; )•(T.c&apos; )•(B3.cAusE.C.ri )) -. :b&apos; 171 T ri B • T c&apos; -tor T b&apos; B3 CAUSE Although B works in a binary manner in CCG to achieve abstraction, it requires 3 arguments fo</context>
</contexts>
<marker>Steedman, 1987</marker>
<rawString>Mark Steedman. 1987. Combinatory grammars and parasitic gaps. Natural Language and Linguistic Theory, 5:403-439.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Combinators and grammars.</title>
<date>1988</date>
<booktitle>Categorial Grammars and Natural Language Structures.</booktitle>
<editor>In Richard T. Oehrle, Emmon Bach, and Deirdre Wheeler, editors,</editor>
<location>Dordrecht.</location>
<contexts>
<context position="6002" citStr="Steedman (1988" startWordPosition="940" endWordPosition="941">44PAS mapping without leading to proliferation of argument categories or to spurious ambiguity. Categorial framework is particularly suited for this mapping due to its lexicalism. Grammatical functions of the nouns in the lexicon are assigned 2aka. type raising, lifting, or type change by case markers, which are also in the lexicon. Thus, grammatical function marking follows naturally from the general CCG schema comprising rules of application (A) and composition (B). The functor-argument distinction in CG helps to model prominence relations without extra levels of representation. CCG schema (Steedman (1988; 1990)) is summarized in (4). Combinator notation is preferred here because they are the formal primitives operating on the PAS (cf. (Curry and Feys, 1958) for Combinatory Logic). Application is the only primitive of the combinatory system; it is indicated by juxtaposition in the examples and denoted by in the normal order evaluator (§4). B has the reduction rule Bf ga&gt; f (ga). (4) X/ Y: f Y: a X: fa Y: a X\Y: f .,k&lt; X: fa X/ Y: f Y/Z: g 8&gt; X/Z: Bfg Y\Z: g X\Y: f Bf g X / Y: f Y\Z: g .13x Bf g Y / Z: g X\Y: f B&lt; X/Z: Bfg 2 Grammatical Functions, Type Shifting, and Composition In order to deri</context>
</contexts>
<marker>Steedman, 1988</marker>
<rawString>Mark Steedman. 1988. Combinators and grammars. In Richard T. Oehrle, Emmon Bach, and Deirdre Wheeler, editors, Categorial Grammars and Natural Language Structures. D. Reidel, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Gapping as constituent coordination.</title>
<date>1990</date>
<journal>Linguistics and Philosophy,</journal>
<pages>13--207</pages>
<marker>Steedman, 1990</marker>
<rawString>Mark Steedman. 1990. Gapping as constituent coordination. Linguistics and Philosophy, 13:207-263.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Surface Structure and Interpretation.</title>
<date>1996</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="1405" citStr="Steedman, 1996" startWordPosition="196" endWordPosition="197"> follow from the same principle of category assignment. Normal order evaluation of the combinatory form reveals the predicate-argument structure. The application of the method to Turkish is shown. 1 Introduction Recent theorizing in linguistics brought forth a level of representation called the Predicate-Argument Structure (PAS). PAS acts as the interface between lexical semantics and d-structure in GB (Grimshaw, 1990), functional structure in LFG (Alsina, 1996), and complement structure in HPSG (Wechsler, 1995). PAS is the sole level of representation in Combinatory Categorial Grammar (CCG) (Steedman, 1996). All formulations assume a prominence-based structured representation for PAS, although they differ in the terms used for defining prominence. For instance, Grimshaw (1990) defines the thematic hierarchy as: Agent &gt; Experiencer &gt; Goal / Location / Source &gt; Theme • Thanks to Mark Steedman for discussion and material, and to the anonymous reviewer of an extended version whose comments led to significant revisions. This research is supported by TUBITAK (EEEAG-90) and NATO Science Division (TULANGUAGE). whereas LFG accounts make use of the following (Bresnan and Kanerva, 1989): Agent &gt; Beneficiar</context>
<context position="3239" citStr="Steedman (1996)" startWordPosition="494" endWordPosition="496"> latter. In an accusative language, subjects are less marked (hence primary) than objects; all verbs take subjects but only transitive verbs take objects. Terms (=arguments) can be denoted by the genotype indices on NPs, such as NP,, NP2 for primary and secondary terms.&apos; An NP2 would be a direct object (NPa„) in an accusative language, or an ergativemarked NP (NPerg) in an ergative language. This level of description also simplifies the formulation of grammatical function changing; the primary term of a passivized predicate (PAss p) is the secondary term of the active p. I follow Shaumyan and Steedman (1996) also in the ordered representation of the PAS (1). The reader is referred to (Shaumyan, 1987) for linguistic justification of this ordering. (1) Pred... &lt;Sec. Term&gt; &lt;Primary Term&gt; Given this representation, the surface order of 1Shaumyan uses T1, T2, but we prefer NP1, NP2 for easier exposition in later formulations. 167 constituents is often in conflict with the order in the PAS. For instance, English as a configurational SVO language has the mapping: (2) SS: S V 0 PAS: P NP2 NPi However, in a non-configurational language, permutations of word order are possible, and grammatical functions ar</context>
</contexts>
<marker>Steedman, 1996</marker>
<rawString>Mark Steedman. 1996. Surface Structure and Interpretation. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>David J Weir</author>
</authors>
<title>Parsing some constrained grammar formalisms.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<pages>19--591</pages>
<contexts>
<context position="5250" citStr="Vijay-Shanker and Weir (1993)" startWordPosition="821" endWordPosition="824"> T/(T\NP) or TVT/NP) To resolve the opposition between surface order and the PAS in a free word order language, one can let the type shifted categories of terms proliferate, or reformulate CCG in such a way that arguments of the verbs are sets, rather than lists whose arguments are made available one at a time. The former alternative makes the spurious ambiguity problem of CG parsing (Karttunen, 1989) even more severe. Multiset CCG (Hoffman, 1995) is an example of the setoriented approach. It is known to be computationally tractable but less efficient than the polynomial time CCG algorithm of Vijay-Shanker and Weir (1993). I try to show in this paper that the traditional curried notation of CG with type shifting can be maintained to account for Surface Form44PAS mapping without leading to proliferation of argument categories or to spurious ambiguity. Categorial framework is particularly suited for this mapping due to its lexicalism. Grammatical functions of the nouns in the lexicon are assigned 2aka. type raising, lifting, or type change by case markers, which are also in the lexicon. Thus, grammatical function marking follows naturally from the general CCG schema comprising rules of application (A) and compos</context>
</contexts>
<marker>Vijay-Shanker, Weir, 1993</marker>
<rawString>K. Vijay-Shanker and David J. Weir. 1993. Parsing some constrained grammar formalisms. Computational Linguistics, 19:591-636.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen Wechsler</author>
</authors>
<title>The Semantic Basis of Argument Structure.</title>
<date>1995</date>
<location>CSLI, Stanford, CA.</location>
<contexts>
<context position="1307" citStr="Wechsler, 1995" startWordPosition="181" endWordPosition="182">proliferate or cause spurious ambiguity. Categories of all argument-encoding grammatical functions follow from the same principle of category assignment. Normal order evaluation of the combinatory form reveals the predicate-argument structure. The application of the method to Turkish is shown. 1 Introduction Recent theorizing in linguistics brought forth a level of representation called the Predicate-Argument Structure (PAS). PAS acts as the interface between lexical semantics and d-structure in GB (Grimshaw, 1990), functional structure in LFG (Alsina, 1996), and complement structure in HPSG (Wechsler, 1995). PAS is the sole level of representation in Combinatory Categorial Grammar (CCG) (Steedman, 1996). All formulations assume a prominence-based structured representation for PAS, although they differ in the terms used for defining prominence. For instance, Grimshaw (1990) defines the thematic hierarchy as: Agent &gt; Experiencer &gt; Goal / Location / Source &gt; Theme • Thanks to Mark Steedman for discussion and material, and to the anonymous reviewer of an extended version whose comments led to significant revisions. This research is supported by TUBITAK (EEEAG-90) and NATO Science Division (TULANGUAG</context>
</contexts>
<marker>Wechsler, 1995</marker>
<rawString>Stephen Wechsler. 1995. The Semantic Basis of Argument Structure. CSLI, Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kent Wittenburg</author>
</authors>
<title>Predictive combinators.</title>
<date>1987</date>
<booktitle>In Proceedings of the 25th Annual Meeting of the ACL,</booktitle>
<pages>73--79</pages>
<contexts>
<context position="13622" citStr="Wittenburg, 1987" startWordPosition="2294" endWordPosition="2295"> can then be written as IV ITV and IV\TV for NP2, TV/DV and TV\DV for NP3, etc. (10a-b) show the verb-final variations in the word order. The bracketings in the PAS and juxtaposition are left-associative; (fa)b is same as lab. b. kitab-r Mehmet oku-du /V/TV:Tb&apos; SVV:Tm&apos; TV: r&apos; Bx&lt; S I TV : B(Tm&apos; )(Tb&apos; ) A&gt; S : B(Tm&apos; )(Tb&apos; )r&apos; &gt;7-1 m&apos; (10a) exhibits spurious ambiguity. Forward composition of S//V and /V/ TV is possible, yielding exactly the same PAS. This problem is resolved by grammar rewriting in the sense proposed by Eisner4 (1996). Grammar rewriting can be done using predictive combinators (Wittenburg, 1987), but they cannot handle crossing compositions that are essential to our method. Other normal form parsers, e.g. that of Hepple and Morrill (1989), have the same problem. All grammar rules in (4) in fact check the labels of the constituent categories, which show how the category is derived. The labels are as in (Eisner, 1996). -FC: Output of forward composition, of which forward crossing composition is a special case. —BC: Output of backward composition, of which backward crossing composition is a special case. -OT: Lexical or type shifted category. The goal is to block e.g., X/Y-FC YIZ-{FC , </context>
</contexts>
<marker>Wittenburg, 1987</marker>
<rawString>Kent Wittenburg. 1987. Predictive combinators. In Proceedings of the 25th Annual Meeting of the ACL, pages 73-79.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>