<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.272211">
<note confidence="0.7722495">
PERSPECTIVES ON PARSING ISSUES
Jane J. Robinson, Chair
</note>
<sectionHeader confidence="0.606359" genericHeader="method">
Artificial Intelligence Center
SRI International
</sectionHeader>
<bodyText confidence="0.997455711111111">
Nowhere is the tension between the two areas of our
field--computation and linguistics--more apparent than
in the issues that arise in connection with parsing
natural language input. This panel addresses those
issues from both computational and linguistic
perspectives. Each panelist has submitted a position
paper on some of the questions that appear below. The
questions are loosely grouped in three sections. The
first concentrates on the computational aspect, the
second on the linguistic aspect, and the third on their
interactions.
A preliminary definition:
For purposes of providing common ground or possibly a
common point of departure at the outset, I will define
parsing as the assigning of labelled syntactic structure
to an input by applying a grammar that defines
syntactically well-formed sentences and phrases. Note
that the question of whether the grammar does other
things as well is left open. In this sense, parsing is
distinguished from interpretation, which may take many
forms, such as assigning representations in an
unambiguous formal language and integrating those
representations into a data base or into a hearer&apos;s
belief system.
The questions:
I. The Computational Perspective:
What useful purposes, if any, are served by
distinguishing parsing from interpretation? Is
computational efficiency increased? Is system building
made easier? Or is an insistence on parsing a
hindrance? (Can we compute an interpretation better
without assigning labelled syntactic structures?)
Computational linguists, using available computational
equipment that is almost exclusively serial in design,
have devised parsing algorithms that involve serial
search. Yet it is obvious that many parts of the
parsing process could be done in parallel. How might
notions of parallel processing, VLSI, and the like
change our views on parsing?
What might motivate our trying to make parsing
procedures simulate human behavior, e.g., by intermixing
syntactic with semantic and pragmatic processing? And
for that matter, how do we know what human processing is
like? Do our intuitions agree and are they to be
trusted?
</bodyText>
<sectionHeader confidence="0.792567" genericHeader="method">
2. The Linguistic, Perspective:
</sectionHeader>
<bodyText confidence="0.9993055">
Have our tools (computers and formal grammars) warped
our views of what human languages and human language
processing may be like? What legitimate inferences
about human linguistic competence and performance can we
draw from our experiences with mechanical parsing of
formal grammars?
Our most efficient parsing algorithms are for context
free (and even regular) grammars. Does this suggest
that the core of grammars for natural languages is
context free or even regular?
</bodyText>
<sectionHeader confidence="0.976268" genericHeader="method">
3. The Interactions:
</sectionHeader>
<bodyText confidence="0.999733166666667">
Why do we usually have one grammar and procedure for
sentence recognition and another grammar and procedure
for sentence generation? Do we need a different pair
for each direction?
What is the nature of the relationship between a grammar
and a procedure for applying it? Are we influenced in
the way we devise computational grammars by the
algorithms we expect to apply to them? Can a grammar be
psychologically valid (validated) independently of the
parsing algorithm that works with it? Can a parsing
algorithm be psychologically valid (validated)
independently of the grammar?
The discussion to follow:
The position papers will serve to focus the discussion.
That discussion may take the form of a debate about the
best methods for language processing, but it can also be
viewed as a gathering of diverse experiences with
orocessing natural language.
</bodyText>
<page confidence="0.998397">
95
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.696599">
<title confidence="0.998334">PERSPECTIVES ON PARSING ISSUES</title>
<author confidence="0.999988">Jane J Robinson</author>
<author confidence="0.999988">Chair</author>
<affiliation confidence="0.999455">Artificial Intelligence Center SRI International</affiliation>
<abstract confidence="0.99416816">Nowhere is the tension between the two areas of our field--computation and linguistics--more apparent than in the issues that arise in connection with parsing natural language input. This panel addresses those issues from both computational and linguistic perspectives. Each panelist has submitted a position paper on some of the questions that appear below. The questions are loosely grouped in three sections. The first concentrates on the computational aspect, the second on the linguistic aspect, and the third on their interactions. A preliminary definition: For purposes of providing common ground or possibly a common point of departure at the outset, I will define parsingas the assigning of labelled syntactic structure to an input by applying a grammar that defines syntactically well-formed sentences and phrases. Note that the question of whether the grammar does other things as well is left open. In this sense, parsing is from interpretation,which may take many forms, such as assigning representations in an unambiguous formal language and integrating those representations into a data base or into a hearer&apos;s belief system. The questions: The Perspective: What useful purposes, if any, are served by distinguishing parsing from interpretation? Is computational efficiency increased? Is system building made easier? Or is an insistence on parsing a hindrance? (Can we compute an interpretation better without assigning labelled syntactic structures?) Computational linguists, using available computational equipment that is almost exclusively serial in design, have devised parsing algorithms that involve serial search. Yet it is obvious that many parts of the parsing process could be done in parallel. How might notions of parallel processing, VLSI, and the like change our views on parsing? What might motivate our trying to make parsing procedures simulate human behavior, e.g., by intermixing syntactic with semantic and pragmatic processing? And that matter, how do we know what human processing like? Do our intuitions agree and are they to be trusted? The Perspective: Have our tools (computers and formal grammars) warped our views of what human languages and human language processing may be like? What legitimate inferences about human linguistic competence and performance can we draw from our experiences with mechanical parsing of formal grammars? Our most efficient parsing algorithms are for context free (and even regular) grammars. Does this suggest that the core of grammars for natural languages is context free or even regular? The Interactions: Why do we usually have one grammar and procedure for sentence recognition and another grammar and procedure for sentence generation? Do we need a different pair for each direction? What is the nature of the relationship between a grammar and a procedure for applying it? Are we influenced in the way we devise computational grammars by the algorithms we expect to apply to them? Can a grammar be psychologically valid (validated) independently of the parsing algorithm that works with it? Can a parsing algorithm be psychologically valid (validated) independently of the grammar? The discussion to follow: The position papers will serve to focus the discussion. That discussion may take the form of a debate about the best methods for language processing, but it can also be viewed as a gathering of diverse experiences with orocessing natural language.</abstract>
<intro confidence="0.870586">95</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>