<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.013555">
<title confidence="0.996073">
Lessons Learned in Building
Spoken Language Collaborative Interface Agents
</title>
<author confidence="0.66622">
Charles Rich
</author>
<affiliation confidence="0.631263">
Mitsubishi Electric Research Laboratory
</affiliation>
<address confidence="0.773845">
Cambridge, MA 02139 USA
</address>
<email confidence="0.975011">
rich@merl.com
</email>
<author confidence="0.7586235">
Candace L. Sidner
Carolyn Boettner
</author>
<affiliation confidence="0.797632">
Lotus Development Corporation
</affiliation>
<address confidence="0.5713695">
Cambridge, MA 02142 USA
csidnerIcarolyn_boettnertlotus. corn
</address>
<sectionHeader confidence="0.876371" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999689125">
This paper reports on the development of two
spoken language collaborative interface agents
built with the Collagen system. It presents
sample dialogues with the agents working with
email applications and meeting planning appli-
cations, and discusses how these applications
were created. It also discusses limitations and
benefits of this approach.
</bodyText>
<sectionHeader confidence="0.972596" genericHeader="method">
1 Collaborative Agents
</sectionHeader>
<bodyText confidence="0.999289307692308">
The underlying premise of the CollagenTM (for
Collaborative agent) project is that software
agents, when they interact with people, should
be governed by the same principles that govern
human-to-human collaboration. To determine
the principles governing human collaboration,
we have relied on research in computational lin-
guistics on collaborative discourse, specifically
within the SharedPlan framework of Grosz and
Sidner (1986, 1990) (Grosz and Kraus, 1996,
Lochbaum, 1998). This work has provided us
with a computationally-specified theory that
has been empirically validated across a range of
</bodyText>
<subsectionHeader confidence="0.955155">
User Agent
</subsectionHeader>
<bodyText confidence="0.592526">
interact interact
</bodyText>
<figureCaption confidence="0.999125">
Figure 1: Collaborative interface agent paradigm.
</figureCaption>
<bodyText confidence="0.995909652173913">
human tasks. We have implemented the algo-
rithms and information structures of this theory
in the form of a Java middleware component,
a collaboratton manager called Collagen, which
software developers can use to implement a col-
laborative interface agent for any Java applica-
tion.
In the collaborative interface agent paradigm,
illustrated abstractly in Figure 1, a software
agent is able to both communicate with and
observe the actions of a user on a shared ap-
plication interface, and vice versa. The soft-
ware agent in this paradigm takes an active role
in joint problem solving, including advising the
user when he gets stuck, suggesting what to do
next when he gets lost, and taking care of low-
level details after a high-level decision is made.
The screenshot in Figure 2 shows how the
collaborative interface agent paradigm is con-
cretely realized on a user&apos;s display. The large
window in the background is the shared appli-
cation, in this case, the Lotus eSuiterm email
program. The two smaller overlapping windows
</bodyText>
<figureCaption confidence="0.986669">
Figure 2: Interface for Collagen email agent.
</figureCaption>
<figure confidence="0.804443">
ola.serve olase-rie
communicate
.1■1....111.••.••-■KM• &amp;quot;IN .1.1ftl•r142.1. IX •
••■•••••.■•
</figure>
<bodyText confidence="0.9999145625">
in the corners of the screen are the agent&apos;s and
user&apos;s home windows, through which they com-
municate with each other.
A key benefit of using Collagen to build an in-
terface agent is that the collaboration manager
automatically constructs a structured history of
the user&apos;s and agent&apos;s activities. This segmented
interaction history is hierarchically organized
according to the goal structure of the applica-
tion tasks. Among other things, this history can
help re-orient the user when he gets confused
or after an extended absence. It also supports
high-level, task-oriented transformations, such
as returning to an earlier goal. Figure 3 shows
a sample segmented interaction history for the
an email interaction.
To apply Collagen to a particular application,
the application developer must provide an ab-
stract model of the tasks for which the appli-
cation software will be used. This knowledge
is formalized in a recipe library, which is then
automatically compiled for use by the interface
agent. This approach also allows us to easily
vary an agent&apos;s level of initiative from very pas-
sive to very active, using the same task model.
For more details on the internal architecture of
Collagen, see (Rich and Sidner, 1998).
We have developed prototype interface agents
using Collagen for several applications, includ-
ing air travel planning (Rich and Sidner, 1998),
resource allocation, industrial control, and com-
mon PC desktop activities.
</bodyText>
<sectionHeader confidence="0.973314" genericHeader="method">
2 A Collaborative Email Agent
</sectionHeader>
<bodyText confidence="0.99997054">
The email agent (Gruen et al., 1999) is the first
Collagen-based agent we have built that sup-
ports spoken-language interaction. Our other
agents avoided the need for natural language
understanding by presenting the user with a
dynamically-changing menu of expected utter-
ances, which was generated from the current
discourse state according to the predictions of
the SharedPlan theory. Sample menus are dis-
played in Figure 2. The email agent, how-
ever, incorporates a speech and natural lan-
guage understanding system developed by IBM
Research, allowing users to collaborate either
entirely in speech or with a mixture of speech
and interface actions, such as selecting a mes-
sage. More recently we have developed the
Lotus NotesTm meeting planning agent, which
incorporates speech and sentence level under-
standing using the Java Speech API, as imple-
mented by IBM. The JSAPI toolkit provides
a parser, which we use with a vocabulary and
grammar we developed for the domain of meet-
ing planning. The tags produced by the Java
Speech parser are interpreted with a set of se-
mantic rules that produce internal structures
used by the Collagen agent.
With the email application, the user can read,
compose and send messages as one typically
does with email. The Collagen email agent,
called Daffy, performs actions requested by the
user with speech and watches user interface ac-
tions. It can perform a few email actions on its
own (such as opening and closing windows, and
filling in the user&apos;s signature on email) and can
also undertake actions that the user requests in
spoken utterances. In the sample session shown
in Figure 4, the agent keeps a todo list for the
user, explains how to accomplish email tasks for
a user who is new to email, answers user ques-
tions about what actions were taken in the in-
teraction and offers suggestions about what to
do next in the interaction as well as forming user
requests.
To create the email agent, we built a recipe
library about email, as required for the Colla-
gen architecture, of about 55 actions and 32
recipes for doing those actions; the actions in-
cluded GUI primitives such as sending a mes-
sage, and high level actions such as reacting to
a message.
</bodyText>
<sectionHeader confidence="0.8057715" genericHeader="method">
3 A Collaborative Agent for
Planning Meetings
</sectionHeader>
<bodyText confidence="0.999835866666667">
Our experience with Daffy convinced us that
collaborative agents would be more useful if
they not only understood what the user was do-
ing in the interface but could undertake more
of the user&apos;s sub-goals and thus off-load some
of the burden from the user. To explore this
notion, we built Dotty, a Collagen agent, that
works with a user who is planning a meeting
with a customer, using Lotus Notes. As the di-
alogue in Figure 5 demonstrates, Dotty is able
to take over many of the details of planning the
meeting. Dotty uses a library that is far smaller
than Daffy&apos;s: 19 actions and 5 recipes.
This dialogue begins with an overall goals of
managing sales contacts and several sub-goals,
</bodyText>
<page confidence="0.98979">
2
</page>
<table confidence="0.998076848484849">
USER: &amp;quot;Your turn.&amp;quot;
Done checking our to-do list.
AGENT: &amp;quot;Let&apos;s check our to-do list.&amp;quot;
USER: &amp;quot;Ok.&amp;quot;
AGENT: The following items are on our to-do list.&amp;quot;
AGENT: &amp;quot;Work on email.&amp;quot;
AGENT: &amp;quot;Prepare a presentation about Java Beans.&amp;quot;
AGENT: &apos;That&apos;s all.&amp;quot;
USER: &amp;quot;Ok.&amp;quot;
Done working on email.
AGENT: &amp;quot;Let&apos;s work on email.&amp;quot;
Done explaining how to work on email.
USER: &amp;quot;What should I do?&apos;
AGENT: &amp;quot;First, you reed a message.&amp;quot;
USER: &amp;quot;Ok.&amp;quot;
AGENT: &amp;quot;Then, you might store, print or delete the message.&amp;quot;
Done reading message from Brian Corwin &lt;brgadewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP ....
Done explaining how to read a message.
Done agent selecting message from Brian Corwin &lt;brgedewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP ....
USER: &amp;quot;Select message from Brian Conlin &lt;brgilldewey.watson.ibm.com&gt; about WEEKLY SPEECH CROUP ....&amp;quot;
AGENT: Select message from Brian Gorwin &lt;brgOdewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP
AGENT: Open message from Brian Corwin &lt;brgOdewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP SEMINAR.
Done using the contents of message from Brian Corwin &lt;brgadewey.watson.ibm.com, about WEEKLY SPEECH
AGENT: &apos;Shall we use the contents of message from Brian Corwin &lt;bredewey.watson.ibm.com&gt; about WEEKLY —7&amp;quot;
Done scheduling meeting with Brian at three P.M. Thursday by scheduling._
Done agent setting up meeting with Brian.
USER: &amp;quot;Set up meeting with Brian.&amp;quot;
AGENT: Set up meeting with Brian.
Done agent scheduling event tentatively at three P.M. Thursday.
AGENT: &amp;quot;Let&apos;s schedule event tentatively at a time.&apos;
USER: &amp;quot;Schedule event tentatively at three P.M. Thursday.&amp;quot;
AGENT: Schedule event tentatively at three P.M. Thursday.
AGENT: &amp;quot;There is a conflict of meeting with Brian at three P.M. Thursday with
meeting with Irene Landoz at three P.M. Thursday.&amp;quot;
AGENT: &amp;quot;Let&apos;s remember to reschedule meeting with Irene Landoz at three P.M. Thursday.&amp;quot;
USER: &amp;quot;Ok.&amp;quot;
AGENT: Finalize meeting with Brian at three P.M. Thursday.
AGENT: Close message from Brian Gorwin &lt;bredewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP SEMINAR.
Done reacting to message from Brian Corwin &lt;brOdewey.watson.ibm.com&gt; about WEEKLY SPEECH ....
AGENT: &amp;quot;Shall we react to message from Brian Gorwin &lt;brgOdewey.watson.ibm.com&gt; about WEEKLY ...?&amp;quot;
Done agent forwarding message from Brian Corwin &lt;brgedewey.watson.ibm.com&gt; about WEEKLY ... to Steve Krantz.
USER: &amp;quot;Forward message from Brian Corwin &lt;brOdewey.watson.ibm.com&gt; about to Steve Krantz.&amp;quot;
Done user saying identify the recipient as Steve Kraetz.
AGENT: &amp;quot;Who is the recipient?&amp;quot;
USER: &amp;quot;The recipient is Steve Krantz.&amp;quot;
AGENT: Forward message from Brian Gorwin &lt;brgOdewey.watsoe.ibm.com&gt; about ... to Steve Krantz.
Done filling in message from Candy Sidner &lt;csidnerClotus.com&gt; about Fwd:WEEKLY SPEECH GROUP SEMINAR.
AGENT: &amp;quot;Shall we fill in message from Candy Sidner &lt;csidnerllotus.com&gt; about Fwd:WEEKLY ...?&amp;quot;
USER: &amp;quot;Ok.&amp;quot;
AGENT: Add text to message from Candy Sidner &lt;csidner@lotus.com&gt; about Fwd:WEEKLY
Stopped ccing message from Candy Sidner &lt;csidner@lotus.com&gt; about Fwd:WEEKLY SPEECH
AGENT: &amp;quot;Shall we cc message from Candy Sidner &lt;csidnerelotus.com&gt; about Fwd:WEEKLY SPEECH GROUP SEMINAR?&amp;quot;
USER: &amp;quot;No.&amp;quot;
AGENT: &amp;quot;Ok, your turn.&amp;quot;
Done sending, canceling or saving this message as a draft.
Done agent sending message from Candy Sidner &lt;csidnerelotus.com&gt; about Fwd:WEEKLY SPEECH
USER: &amp;quot;Send message from Candy Sidner &lt;csidner2lotus.com&gt; about Fwd:WEEKLY SPEECH GROUP ...
AGENT: Send message from Candy Sidner &lt;csidnerClotus.com&gt; about Fwd:WEEKLY SPEECH
Done storing, printing or deleting this message.
AGENT: &amp;quot;Shall we store, print or delete this message?&amp;quot;
USER: &amp;quot;Did I forward message to Steve Krantz.&amp;quot;
AGENT: &amp;quot;Yes, you did forward message from Brian Corwin tbrgadewey.watson.ibm.com&gt; about ... to Steve Krantz.&amp;quot;
USER: &amp;quot;Done.&amp;quot;
Done interruption agent checking history.
USER: &amp;quot;Please check history.&amp;quot;
USER: &amp;quot;Done.&amp;quot;
</table>
<figureCaption confidence="0.911203">
Figure 3: Sample segmented interaction history for an email interaction.
</figureCaption>
<page confidence="0.986773">
3
</page>
<table confidence="0.996779489795919">
AGENT: &amp;quot;Let&apos;s manage sales contacts.&amp;quot;
USER: &amp;quot;Let&apos;s create profile for Miles White from Abbott Laboratories.&amp;quot;
AGENT: &amp;quot;What is the eemail address?&amp;quot;
USER: &amp;quot;The emailAddress is mileswhitegabl.com.&amp;quot;
AGENT: &amp;quot;What is the workPhone?&amp;quot;
USER: &amp;quot;The workPhone is 6173329280.&amp;quot;
AGENT: Coto profile for Abbott Laboratories.
AGENT: Create profile for Miles White.
AGENT: &amp;quot;Do you want to schedule a presentation for Miles White?&amp;quot;
USER: &amp;quot;Schedule the meeting for December 9 from 2 to 4 pm.&amp;quot;
AGENT: Make meeting entry for Miles White on December 9.
AGENT: &amp;quot;Is the meeting here or at the customer site?&amp;quot;
USER: &amp;quot;The site is here.&amp;quot;
AGENT: &amp;quot;Which building?&amp;quot;
USER: &amp;quot;The building is Rogers Street.&amp;quot;
AGENT: Locate room 5003 Center in Rogers Street.
AGENT: &amp;quot;I&apos;m going to reserve room 5003 Center in Rogers Street.&amp;quot;
USER: &amp;quot;Ok.&amp;quot;
AGENT: Reserve room 5003 Center in Rogers Street.
AGENT: &amp;quot;Do you need any special equipment?&amp;quot;
USER: &amp;quot;No.&amp;quot;
AGENT: &amp;quot;Okay.&amp;quot;
AGENT: &amp;quot;Who will attend the meeting?&amp;quot;
USER: &amp;quot;Invite Fred Smith and Jerry Johnson.&amp;quot;
AGENT: Invite Fred Smith and Jerry Johnson.
AGENT: &amp;quot;Will the customer need consulting services?&amp;quot;
USER: &amp;quot;Ok.&amp;quot;
AGENT: &amp;quot;Identifying the consulting staff.&amp;quot;
USER; &amp;quot;Invite Pam Bridges from Lotus Consulting and Jimmy Barnes from IGS.&amp;quot;
AGENT: Invite Pam Bridges and Jimmy Barnes.
AGENT: &amp;quot;The following people: Pam Bridges have a conflict with the meeting time..&amp;quot;
USER: &amp;quot;Instead invite Julie Knox.&amp;quot;
AGENT: Invite Julie Knox instead of Pam Bridges.
AGENT: &amp;quot;I will get back to you to confirm this meeting.&amp;quot;
USER; &amp;quot;Ok.&amp;quot;
AGENT: Send invitations to Fred Smith, Jerry Johnson, Julie Knox, and Jimmy Barnes.
AGENT: &amp;quot;Do you want to see company information?&amp;quot;
USER: &amp;quot;Show me information about Dover Hospital.&amp;quot;
AGENT: Coto profile for Dover Hospital.
AGENT: &amp;quot;You need to plan a presentation for Miles White.&amp;quot;
AGENT: &amp;quot;Shall we find presentations about a subject?&amp;quot;
USER: &amp;quot;No.&amp;quot;
AGENT: &amp;quot;Okay.&amp;quot;
AGENT: &amp;quot;I&apos;m going to get back to you about meeting.&amp;quot;
AGENT: &amp;quot;The following people: Jimmy Barnes have a conflict with the meeting time.
AGENT: &amp;quot;This is message from Jimmy Barnes: I have to be in Cleveland on December 9. Jonathan Parks is available.&amp;quot;
USER: &amp;quot;Invite Jonathan Parks instead.&amp;quot;
AGENT: Invite Jonathan Parks instead of Jimmy Barnes.
AGENT: &amp;quot;I will get back to you to confirm this meeting.&amp;quot;
</table>
<figureCaption confidence="0.908101">
Figure 5: Sample session of Collagen agent using Lotus Notes for meeting planning (unsegmented).
</figureCaption>
<page confidence="0.983623">
5
</page>
<bodyText confidence="0.99998025">
including creating a profile for Miles White
(which is displayed to the user as a Notes doc-
ument), scheduling a meeting with Miles White
(which the agent undertakes by itself using facil-
ities in Lotus Notes), finding information about
Dover Hospital (which is displayed as a Notes
document), and a brief discussion about plan-
ning a presentation.
</bodyText>
<sectionHeader confidence="0.992593" genericHeader="conclusions">
4 Current Limitations
</sectionHeader>
<bodyText confidence="0.999992208333334">
The spoken interaction of our two Collagen
agents is limited by the range of utterances
that the utterance understanding components
can interpret.. More significantly, we feel these
agents are limited in dealing with spoken con-
versational errors, i.e. errors that arise either
because the recognition system produces an er-
ror, or the semantic interpretation is faulty
(even given the correct choice of words). Er-
rors resulting from semantic mis-interpretation
are especially important because often the con-
tent of the faulty interpretation is something
that the agent can respond to and does, which
results in the conversation going awry. In
such cases we have in mind using the history
based transformations possible in Collagen (c.f.
(Rich and Sidner, 1998)) to allow the user to
turn the conversation back to before where the
error occurred.
Whether communicating by speech or menus,
our agents are limited by their inability to ne-
gotiate with their human partner. For example,
whenever one of our agents propose an action
to perform that the user rejects (as in the email
conversation in Figure 4, where the agent pro-
poses filling in the cclist and the user says no),
the agent currently does not have any strategies
for responding in the conversation other than to
accept the rejection and turn the conversation
back to the user. We are in present exploring
how to use a set of strategies for negotiation
of activities and beliefs that we have identified
from corpora of human-human collaborations.
Using these strategies in the Collagen system
will give interface agents a richer set of negoti-
ation capabilities critical for collaboration.
Finally, our agents need a better model
of conversational initiative. We have experi-
mented in the Collagen system with three initia-
tive modes, one dominated by the user, one by
the agent and one that gives each some control
of the conversation. The dialogues presented in
this paper are all from agent initiative. None of
these modes is quite right. The user dominated
mode is characterized by an agent that only acts
when specifically directed to or when explicitly
told to take a turn in the conversation, while the
agent dominated mode has a very chatty agent
that constantly offers next possible actions rel-
evant to the collaboration. We are currently
investigating additional modes of initiative.
The collaborative agent paradigm that we
have implemented has several original features.
The conversation and collaboration model is
general and does not require tuning or the im-
plementation of special dialogue steps for the
agent to participate. The model tracks the in-
teraction and treats both the utterances of both
participants and the GUI level actions as com-
munications for the discourse; it relates these to
the actions and recipes for actions. The model
has facilities for richer interpretation of dis-
course level phenomena, such as reference and
anaphora, through the use of the focus stack.
&apos;Finally, when we began this research, we were
not certain that the Collagen system could be
used to create agents that would interact with
users for many different applications. Our expe-
rience with five different applications indicates
that the model has the flexibility and richness to
make human and computer collaboration possi-
ble in many circumstances.
</bodyText>
<sectionHeader confidence="0.998204" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99773419047619">
B. J. Grosz and S. Kraus. 1996. Collaborative plans
for complex group action. Artificial Intelligence,
86(4269-357, October.
B. J. Grosz and C. L. Sidner. 1986. Attention, in-
tentions, and the structure of discourse. Compu-
tational Linguistics, 12(3):175-204.
B. J. Grosz and C. L. Sidner. 1990. Plans for dis-
course. In P. R. Cohen, J. L. Morgan, and M. E.
Pollack, editors, Intentions and Communication,
pages 417-444. MIT Press, Cambridge, MA.
D. Gruen, C. Sidner, C. Boettner, and C. Rich.
1999. A collaborative assistant for email. In Proc.
ACM SIGCHI Conference on Human Factors in
Computing Systems, Austin, TX, May.
K. E. Lochbamn. 1998. A collaborative planning
model of intentional structure. Computational
Linguistics, 24(4), December.
C. Rich and C. Sidner. 1998. COLLAGEN: A col-
laboration manager for software interface agents.
User Modeling and User-Adapted Interaction,
8(3/4):315-350.
</reference>
<page confidence="0.998724">
6
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000057">
<title confidence="0.9991585">Lessons Learned in Building Spoken Language Collaborative Interface Agents</title>
<author confidence="0.768514">Charles</author>
<affiliation confidence="0.919962">Mitsubishi Electric Research</affiliation>
<address confidence="0.999923">Cambridge, MA 02139</address>
<email confidence="0.999793">rich@merl.com</email>
<author confidence="0.914454">L Candace</author>
<affiliation confidence="0.8223725">Carolyn Lotus Development</affiliation>
<address confidence="0.999918">Cambridge, MA 02142</address>
<author confidence="0.585289">corn</author>
<abstract confidence="0.997918610294117">This paper reports on the development of two spoken language collaborative interface agents built with the Collagen system. It presents sample dialogues with the agents working with email applications and meeting planning applications, and discusses how these applications were created. It also discusses limitations and benefits of this approach. 1 Collaborative Agents underlying premise of the CollagenTM Collaborative agent) project is that software they with people, should be governed by the same principles that govern human-to-human collaboration. To determine the principles governing human collaboration, we have relied on research in computational linguistics on collaborative discourse, specifically within the SharedPlan framework of Grosz and (1986, 1990) and Kraus, 1996, Lochbaum, 1998). This work has provided us with a computationally-specified theory that has been empirically validated across a range of User Agent interact interact Figure 1: Collaborative interface agent paradigm. human tasks. We have implemented the algorithms and information structures of this theory in the form of a Java middleware component, manager Collagen, which software developers can use to implement a collaborative interface agent for any Java application. the interface agent abstractly in Figure software agent is able to both communicate with and observe the actions of a user on a shared application interface, and vice versa. The softagent paradigm takes an active role in joint problem solving, including advising the when he gets stuck, suggesting what to when he gets and taking care of lowlevel details after a high-level decision is made. The screenshot in Figure 2 shows how the collaborative interface agent paradigm is concretely realized on a user&apos;s display. The large window in the background is the shared appliin this case, the Lotus email program. The two smaller overlapping windows Figure 2: Interface for Collagen email agent. communicate .1■1....111.••.••-■KM• &amp;quot;IN .1.1ftl•r142.1. IX • ••■•••••.■• in the corners of the screen are the agent&apos;s and windows, which they communicate with each other. A key benefit of using Collagen to build an interface agent is that the collaboration manager automatically constructs a structured history of user&apos;s and agent&apos;s activities. This history is organized according to the goal structure of the application tasks. Among other things, this history can help re-orient the user when he gets confused or after an extended absence. It also supports high-level, task-oriented transformations, such as returning to an earlier goal. Figure 3 shows a sample segmented interaction history for the an email interaction. To apply Collagen to a particular application, the application developer must provide an abstract model of the tasks for which the application software will be used. This knowledge formalized in a library, is then automatically compiled for use by the interface agent. This approach also allows us to easily vary an agent&apos;s level of initiative from very passive to very active, using the same task model. For more details on the internal architecture of Collagen, see (Rich and Sidner, 1998). We have developed prototype interface agents using Collagen for several applications, including air travel planning (Rich and Sidner, 1998), resource allocation, industrial control, and common PC desktop activities. 2 A Collaborative Email Agent The email agent (Gruen et al., 1999) is the first Collagen-based agent we have built that supports spoken-language interaction. Our other agents avoided the need for natural language understanding by presenting the user with a dynamically-changing menu of expected utterances, which was generated from the current discourse state according to the predictions of the SharedPlan theory. Sample menus are displayed in Figure 2. The email agent, however, incorporates a speech and natural language understanding system developed by IBM Research, allowing users to collaborate either entirely in speech or with a mixture of speech and interface actions, such as selecting a message. More recently we have developed the Lotus NotesTm meeting planning agent, which incorporates speech and sentence level understanding using the Java Speech API, as impleby JSAPI toolkit provides a parser, which we use with a vocabulary and grammar we developed for the domain of meeting planning. The tags produced by the Java Speech parser are interpreted with a set of semantic rules that produce internal structures used by the Collagen agent. With the email application, the user can read, compose and send messages as one typically does with email. The Collagen email agent, called Daffy, performs actions requested by the user with speech and watches user interface actions. It can perform a few email actions on its own (such as opening and closing windows, and filling in the user&apos;s signature on email) and can also undertake actions that the user requests in spoken utterances. In the sample session shown in Figure 4, the agent keeps a todo list for the user, explains how to accomplish email tasks for a user who is new to email, answers user questions about what actions were taken in the interaction and offers suggestions about what to do next in the interaction as well as forming user requests. To create the email agent, we built a recipe library about email, as required for the Collagen architecture, of about 55 actions and 32 recipes for doing those actions; the actions included GUI primitives such as sending a message, and high level actions such as reacting to a message.</abstract>
<title confidence="0.5524615">3 A Collaborative Agent for Planning Meetings</title>
<abstract confidence="0.964691962264151">Our experience with Daffy convinced us that collaborative agents would be more useful if they not only understood what the user was doing in the interface but could undertake more of the user&apos;s sub-goals and thus off-load some of the burden from the user. To explore this notion, we built Dotty, a Collagen agent, that works with a user who is planning a meeting with a customer, using Lotus Notes. As the dialogue in Figure 5 demonstrates, Dotty is able to take over many of the details of planning the meeting. Dotty uses a library that is far smaller than Daffy&apos;s: 19 actions and 5 recipes. This dialogue begins with an overall goals of managing sales contacts and several sub-goals, 2 USER: &amp;quot;Your turn.&amp;quot; Done checking our to-do list. AGENT: &amp;quot;Let&apos;s check our to-do list.&amp;quot; USER: &amp;quot;Ok.&amp;quot; AGENT: The following items are on our to-do list.&amp;quot; AGENT: &amp;quot;Work on email.&amp;quot; AGENT: &amp;quot;Prepare a presentation about Java Beans.&amp;quot; AGENT: &apos;That&apos;s all.&amp;quot; USER: &amp;quot;Ok.&amp;quot; Done working on email. AGENT: &amp;quot;Let&apos;s work on email.&amp;quot; Done explaining how to work on email. USER: &amp;quot;What should I do?&apos; AGENT: &amp;quot;First, you reed a message.&amp;quot; USER: &amp;quot;Ok.&amp;quot; AGENT: &amp;quot;Then, you might store, print or delete the message.&amp;quot; Done reading message from Brian Corwin &lt;brgadewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP .... Done explaining how to read a message. Done agent selecting message from Brian Corwin &lt;brgedewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP .... USER: &amp;quot;Select message from Brian Conlin &lt;brgilldewey.watson.ibm.com&gt; about WEEKLY SPEECH CROUP ....&amp;quot; message from Brian Gorwin &lt;brgOdewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP AGENT: Open message from Brian Corwin &lt;brgOdewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP SEMINAR. using the contents of message from Brian Corwin about WEEKLY SPEECH &apos;Shall we use the contents of message from Brian Corwin &lt;bredewey.watson.ibm.com&gt; about WEEKLY Done scheduling meeting with Brian at three P.M. Thursday by scheduling._ Done agent setting up meeting with Brian. USER: &amp;quot;Set up meeting with Brian.&amp;quot; AGENT: Set up meeting with Brian. Done agent scheduling event tentatively at three P.M. Thursday. AGENT: &amp;quot;Let&apos;s schedule event tentatively at a time.&apos; USER: &amp;quot;Schedule event tentatively at three P.M. Thursday.&amp;quot; AGENT: Schedule event tentatively at three P.M. Thursday. AGENT: &amp;quot;There is a conflict of meeting with Brian at three P.M. Thursday with meeting with Irene Landoz at three P.M. Thursday.&amp;quot; AGENT: &amp;quot;Let&apos;s remember to reschedule meeting with Irene Landoz at three P.M. Thursday.&amp;quot; USER: &amp;quot;Ok.&amp;quot; AGENT: Finalize meeting with Brian at three P.M. Thursday.</abstract>
<note confidence="0.743743428571428">Close from Brian Gorwin &lt;bredewey.watson.ibm.com&gt; about WEEKLY SPEECH GROUP SEMINAR. Done reacting to message from Brian Corwin &lt;brOdewey.watson.ibm.com&gt; about WEEKLY SPEECH .... AGENT: &amp;quot;Shall we react to message from Brian Gorwin &lt;brgOdewey.watson.ibm.com&gt; about WEEKLY ...?&amp;quot; Done agent forwarding message from Brian Corwin &lt;brgedewey.watson.ibm.com&gt; about WEEKLY ... to Steve Krantz. USER: &amp;quot;Forward message from Brian Corwin &lt;brOdewey.watson.ibm.com&gt; about to Steve Krantz.&amp;quot; Done user saying identify the recipient as Steve Kraetz. AGENT: &amp;quot;Who is the recipient?&amp;quot; recipient is Steve Krantz.&amp;quot; AGENT: Forward message from Brian Gorwin &lt;brgOdewey.watsoe.ibm.com&gt; about ... to Steve Krantz. Done filling in message from Candy Sidner &lt;csidnerClotus.com&gt; about Fwd:WEEKLY SPEECH GROUP SEMINAR. &amp;quot;Shall we fill in message from Candy Sidner Fwd:WEEKLY ...?&amp;quot; USER: &amp;quot;Ok.&amp;quot; AGENT: Add text to message from Candy Sidner &lt;csidner@lotus.com&gt; about Fwd:WEEKLY Stopped ccing message from Candy Sidner &lt;csidner@lotus.com&gt; about Fwd:WEEKLY SPEECH AGENT: &amp;quot;Shall we cc message from Candy Sidner &lt;csidnerelotus.com&gt; about Fwd:WEEKLY SPEECH GROUP SEMINAR?&amp;quot; USER: &amp;quot;No.&amp;quot; &amp;quot;Ok, turn.&amp;quot; Done sending, canceling or saving this message as a draft. Done agent sending message from Candy Sidner &lt;csidnerelotus.com&gt; about Fwd:WEEKLY SPEECH USER: &amp;quot;Send message from Candy Sidner &lt;csidner2lotus.com&gt; about Fwd:WEEKLY SPEECH GROUP ... message from Candy Sidner &lt;csidnerClotus.com&gt; about Fwd:WEEKLY SPEECH Done storing, printing or deleting this message. AGENT: &amp;quot;Shall we store, print or delete this message?&amp;quot; USER: &amp;quot;Did I forward message to Steve Krantz.&amp;quot; AGENT: &amp;quot;Yes, you did forward message from Brian Corwin tbrgadewey.watson.ibm.com&gt; about ... to Steve Krantz.&amp;quot; USER: &amp;quot;Done.&amp;quot; Done interruption agent checking history. USER: &amp;quot;Please check history.&amp;quot; USER: &amp;quot;Done.&amp;quot; Figure 3: Sample segmented interaction history for an email interaction. 3 AGENT: &amp;quot;Let&apos;s manage sales contacts.&amp;quot; USER: &amp;quot;Let&apos;s create profile for Miles White from Abbott Laboratories.&amp;quot; AGENT: &amp;quot;What is the eemail address?&amp;quot; USER: &amp;quot;The emailAddress is mileswhitegabl.com.&amp;quot; AGENT: &amp;quot;What is the workPhone?&amp;quot; USER: &amp;quot;The workPhone is 6173329280.&amp;quot; AGENT: Coto profile for Abbott Laboratories. AGENT: Create profile for Miles White. AGENT: &amp;quot;Do you want to schedule a presentation for Miles White?&amp;quot; USER: &amp;quot;Schedule the meeting for December 9 from 2 to 4 pm.&amp;quot; AGENT: Make meeting entry for Miles White on December 9. AGENT: &amp;quot;Is the meeting here or at the customer site?&amp;quot; USER: &amp;quot;The site is here.&amp;quot; AGENT: &amp;quot;Which building?&amp;quot; USER: &amp;quot;The building is Rogers Street.&amp;quot; Locate room in Rogers Street. AGENT: &amp;quot;I&apos;m going to reserve room 5003 Center in Rogers Street.&amp;quot; USER: &amp;quot;Ok.&amp;quot; AGENT: Reserve room 5003 Center in Rogers Street. AGENT: &amp;quot;Do you need any special equipment?&amp;quot; USER: &amp;quot;No.&amp;quot; AGENT: &amp;quot;Okay.&amp;quot; AGENT: &amp;quot;Who will attend the meeting?&amp;quot; USER: &amp;quot;Invite Fred Smith and Jerry Johnson.&amp;quot; AGENT: Invite Fred Smith and Jerry Johnson.</note>
<abstract confidence="0.934071672897197">AGENT: &amp;quot;Will the customer need consulting services?&amp;quot; USER: &amp;quot;Ok.&amp;quot; AGENT: &amp;quot;Identifying the consulting staff.&amp;quot; USER; &amp;quot;Invite Pam Bridges from Lotus Consulting and Jimmy Barnes from IGS.&amp;quot; AGENT: Invite Pam Bridges and Jimmy Barnes. AGENT: &amp;quot;The following people: Pam Bridges have a conflict with the meeting time..&amp;quot; USER: &amp;quot;Instead invite Julie Knox.&amp;quot; AGENT: Invite Julie Knox instead of Pam Bridges. AGENT: &amp;quot;I will get back to you to confirm this meeting.&amp;quot; USER; &amp;quot;Ok.&amp;quot; AGENT: Send invitations to Fred Smith, Jerry Johnson, Julie Knox, and Jimmy Barnes. AGENT: &amp;quot;Do you want to see company information?&amp;quot; USER: &amp;quot;Show me information about Dover Hospital.&amp;quot; AGENT: Coto profile for Dover Hospital. AGENT: &amp;quot;You need to plan a presentation for Miles White.&amp;quot; AGENT: &amp;quot;Shall we find presentations about a subject?&amp;quot; USER: &amp;quot;No.&amp;quot; AGENT: &amp;quot;Okay.&amp;quot; AGENT: &amp;quot;I&apos;m going to get back to you about meeting.&amp;quot; AGENT: &amp;quot;The following people: Jimmy Barnes have a conflict with the meeting time. AGENT: &amp;quot;This is message from Jimmy Barnes: I have to be in Cleveland on December 9. Jonathan Parks is available.&amp;quot; USER: &amp;quot;Invite Jonathan Parks instead.&amp;quot; AGENT: Invite Jonathan Parks instead of Jimmy Barnes. AGENT: &amp;quot;I will get back to you to confirm this meeting.&amp;quot; Figure 5: Sample session of Collagen agent using Lotus Notes for meeting planning (unsegmented). 5 including creating a profile for Miles White (which is displayed to the user as a Notes document), scheduling a meeting with Miles White (which the agent undertakes by itself using facilities in Lotus Notes), finding information about Dover Hospital (which is displayed as a Notes document), and a brief discussion about planning a presentation. 4 Current Limitations interaction of our two Collagen limited by the range of utterances that the utterance understanding components can interpret.. More significantly, we feel these agents are limited in dealing with spoken conversational errors, i.e. errors that arise either because the recognition system produces an error, or the semantic interpretation is faulty (even given the correct choice of words). Errors resulting from semantic mis-interpretation are especially important because often the content of the faulty interpretation is something that the agent can respond to and does, which results in the conversation going awry. In such cases we have in mind using the history based transformations possible in Collagen (c.f. 1998)) to allow the user to turn the conversation back to before where the error occurred. Whether communicating by speech or menus, our agents are limited by their inability to negotiate with their human partner. For example, whenever one of our agents propose an action perform that the user rejects the email conversation in Figure 4, where the agent proposes filling in the cclist and the user says no), the agent currently does not have any strategies for responding in the conversation other than to accept the rejection and turn the conversation back to the user. We are in present exploring how to use a set of strategies for negotiation of activities and beliefs that we have identified from corpora of human-human collaborations. Using these strategies in the Collagen system will give interface agents a richer set of negotiation capabilities critical for collaboration. Finally, our agents need a better model of conversational initiative. We have experimented in the Collagen system with three initiamodes, one dominated by user, one by and one that gives each some control of the conversation. The dialogues presented in are from agent initiative. None of these modes is quite right. The user dominated mode is characterized by an agent that only acts when specifically directed to or when explicitly told to take a turn in the conversation, while the agent dominated mode has a very chatty agent that constantly offers next possible actions relevant to the collaboration. We are currently investigating additional modes of initiative. The collaborative agent paradigm that we have implemented has several original features. The conversation and collaboration model is general and does not require tuning or the implementation of special dialogue steps for the agent to participate. The model tracks the interaction and treats both the utterances of both participants and the GUI level actions as communications for the discourse; it relates these to the actions and recipes for actions. The model has facilities for richer interpretation of discourse level phenomena, such as reference and anaphora, through the use of the focus stack. &apos;Finally, when we began this research, we were not certain that the Collagen system could be to create agents that would interact users for many different applications. Our experience with five different applications indicates that the model has the flexibility and richness to make human and computer collaboration possible in many circumstances.</abstract>
<note confidence="0.953274">References J. Grosz and S. Kraus. 1996. Collaborative complex group action. Intelligence, B. J. Grosz and C. L. Sidner. 1986. Attention, inand the structure of discourse. Compu- Linguistics, B. J. Grosz and C. L. Sidner. 1990. Plans for discourse. In P. R. Cohen, J. L. Morgan, and M. E. editors, and Communication, pages 417-444. MIT Press, Cambridge, MA. D. Gruen, C. Sidner, C. Boettner, and C. Rich. A collaborative assistant for email. In ACM SIGCHI Conference on Human Factors in Systems, TX, May. K. E. Lochbamn. 1998. A collaborative planning of intentional structure. December. C. Rich and C. Sidner. 1998. COLLAGEN: A colfor software interface agents. User Modeling and User-Adapted Interaction, 8(3/4):315-350. 6</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>B J Grosz</author>
<author>S Kraus</author>
</authors>
<title>Collaborative plans for complex group action.</title>
<date>1996</date>
<journal>Artificial Intelligence,</journal>
<pages>86--4269</pages>
<contexts>
<context position="1131" citStr="Grosz and Kraus, 1996" startWordPosition="148" endWordPosition="151">ing planning applications, and discusses how these applications were created. It also discusses limitations and benefits of this approach. 1 Collaborative Agents The underlying premise of the CollagenTM (for Collaborative agent) project is that software agents, when they interact with people, should be governed by the same principles that govern human-to-human collaboration. To determine the principles governing human collaboration, we have relied on research in computational linguistics on collaborative discourse, specifically within the SharedPlan framework of Grosz and Sidner (1986, 1990) (Grosz and Kraus, 1996, Lochbaum, 1998). This work has provided us with a computationally-specified theory that has been empirically validated across a range of User Agent interact interact Figure 1: Collaborative interface agent paradigm. human tasks. We have implemented the algorithms and information structures of this theory in the form of a Java middleware component, a collaboratton manager called Collagen, which software developers can use to implement a collaborative interface agent for any Java application. In the collaborative interface agent paradigm, illustrated abstractly in Figure 1, a software agent is</context>
</contexts>
<marker>Grosz, Kraus, 1996</marker>
<rawString>B. J. Grosz and S. Kraus. 1996. Collaborative plans for complex group action. Artificial Intelligence, 86(4269-357, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B J Grosz</author>
<author>C L Sidner</author>
</authors>
<title>Attention, intentions, and the structure of discourse.</title>
<date>1986</date>
<journal>Computational Linguistics,</journal>
<pages>12--3</pages>
<contexts>
<context position="1101" citStr="Grosz and Sidner (1986" startWordPosition="143" endWordPosition="146">ith email applications and meeting planning applications, and discusses how these applications were created. It also discusses limitations and benefits of this approach. 1 Collaborative Agents The underlying premise of the CollagenTM (for Collaborative agent) project is that software agents, when they interact with people, should be governed by the same principles that govern human-to-human collaboration. To determine the principles governing human collaboration, we have relied on research in computational linguistics on collaborative discourse, specifically within the SharedPlan framework of Grosz and Sidner (1986, 1990) (Grosz and Kraus, 1996, Lochbaum, 1998). This work has provided us with a computationally-specified theory that has been empirically validated across a range of User Agent interact interact Figure 1: Collaborative interface agent paradigm. human tasks. We have implemented the algorithms and information structures of this theory in the form of a Java middleware component, a collaboratton manager called Collagen, which software developers can use to implement a collaborative interface agent for any Java application. In the collaborative interface agent paradigm, illustrated abstractly in</context>
</contexts>
<marker>Grosz, Sidner, 1986</marker>
<rawString>B. J. Grosz and C. L. Sidner. 1986. Attention, intentions, and the structure of discourse. Computational Linguistics, 12(3):175-204.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B J Grosz</author>
<author>C L Sidner</author>
</authors>
<title>Plans for discourse.</title>
<date>1990</date>
<booktitle>Intentions and Communication,</booktitle>
<pages>417--444</pages>
<editor>In P. R. Cohen, J. L. Morgan, and M. E. Pollack, editors,</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<marker>Grosz, Sidner, 1990</marker>
<rawString>B. J. Grosz and C. L. Sidner. 1990. Plans for discourse. In P. R. Cohen, J. L. Morgan, and M. E. Pollack, editors, Intentions and Communication, pages 417-444. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Gruen</author>
<author>C Sidner</author>
<author>C Boettner</author>
<author>C Rich</author>
</authors>
<title>A collaborative assistant for email.</title>
<date>1999</date>
<booktitle>In Proc. ACM SIGCHI Conference on Human Factors in Computing Systems,</booktitle>
<location>Austin, TX,</location>
<contexts>
<context position="4008" citStr="Gruen et al., 1999" startWordPosition="602" endWordPosition="605">nowledge is formalized in a recipe library, which is then automatically compiled for use by the interface agent. This approach also allows us to easily vary an agent&apos;s level of initiative from very passive to very active, using the same task model. For more details on the internal architecture of Collagen, see (Rich and Sidner, 1998). We have developed prototype interface agents using Collagen for several applications, including air travel planning (Rich and Sidner, 1998), resource allocation, industrial control, and common PC desktop activities. 2 A Collaborative Email Agent The email agent (Gruen et al., 1999) is the first Collagen-based agent we have built that supports spoken-language interaction. Our other agents avoided the need for natural language understanding by presenting the user with a dynamically-changing menu of expected utterances, which was generated from the current discourse state according to the predictions of the SharedPlan theory. Sample menus are displayed in Figure 2. The email agent, however, incorporates a speech and natural language understanding system developed by IBM Research, allowing users to collaborate either entirely in speech or with a mixture of speech and interf</context>
</contexts>
<marker>Gruen, Sidner, Boettner, Rich, 1999</marker>
<rawString>D. Gruen, C. Sidner, C. Boettner, and C. Rich. 1999. A collaborative assistant for email. In Proc. ACM SIGCHI Conference on Human Factors in Computing Systems, Austin, TX, May.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K E Lochbamn</author>
</authors>
<title>A collaborative planning model of intentional structure.</title>
<date>1998</date>
<journal>Computational Linguistics,</journal>
<volume>24</volume>
<issue>4</issue>
<marker>Lochbamn, 1998</marker>
<rawString>K. E. Lochbamn. 1998. A collaborative planning model of intentional structure. Computational Linguistics, 24(4), December.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Rich</author>
<author>C Sidner</author>
</authors>
<title>COLLAGEN: A collaboration manager for software interface agents. User Modeling and User-Adapted Interaction,</title>
<date>1998</date>
<pages>8--3</pages>
<contexts>
<context position="3724" citStr="Rich and Sidner, 1998" startWordPosition="560" endWordPosition="563"> returning to an earlier goal. Figure 3 shows a sample segmented interaction history for the an email interaction. To apply Collagen to a particular application, the application developer must provide an abstract model of the tasks for which the application software will be used. This knowledge is formalized in a recipe library, which is then automatically compiled for use by the interface agent. This approach also allows us to easily vary an agent&apos;s level of initiative from very passive to very active, using the same task model. For more details on the internal architecture of Collagen, see (Rich and Sidner, 1998). We have developed prototype interface agents using Collagen for several applications, including air travel planning (Rich and Sidner, 1998), resource allocation, industrial control, and common PC desktop activities. 2 A Collaborative Email Agent The email agent (Gruen et al., 1999) is the first Collagen-based agent we have built that supports spoken-language interaction. Our other agents avoided the need for natural language understanding by presenting the user with a dynamically-changing menu of expected utterances, which was generated from the current discourse state according to the predi</context>
<context position="14312" citStr="Rich and Sidner, 1998" startWordPosition="2203" endWordPosition="2206">nterpret.. More significantly, we feel these agents are limited in dealing with spoken conversational errors, i.e. errors that arise either because the recognition system produces an error, or the semantic interpretation is faulty (even given the correct choice of words). Errors resulting from semantic mis-interpretation are especially important because often the content of the faulty interpretation is something that the agent can respond to and does, which results in the conversation going awry. In such cases we have in mind using the history based transformations possible in Collagen (c.f. (Rich and Sidner, 1998)) to allow the user to turn the conversation back to before where the error occurred. Whether communicating by speech or menus, our agents are limited by their inability to negotiate with their human partner. For example, whenever one of our agents propose an action to perform that the user rejects (as in the email conversation in Figure 4, where the agent proposes filling in the cclist and the user says no), the agent currently does not have any strategies for responding in the conversation other than to accept the rejection and turn the conversation back to the user. We are in present explor</context>
</contexts>
<marker>Rich, Sidner, 1998</marker>
<rawString>C. Rich and C. Sidner. 1998. COLLAGEN: A collaboration manager for software interface agents. User Modeling and User-Adapted Interaction, 8(3/4):315-350.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>