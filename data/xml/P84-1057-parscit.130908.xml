<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.396833333333333">
Analysis Grammar of Japanese in the Mu-Project
- A Procedural Approach to Analysis Grammar -
Jun-ichi TSUJII. Jun-ichi NAKAMURA and Makoto NAGAÂ°
</note>
<affiliation confidence="0.6127585">
Department of Electrical Engineering
Kyoto University
</affiliation>
<sectionHeader confidence="0.714036" genericHeader="abstract">
Kyoto, JAPAN
Abstract
</sectionHeader>
<subsectionHeader confidence="0.940211">
Analysis grammar of Japanese in the Mu-project
</subsectionHeader>
<bodyText confidence="0.999871">
is presented. It is emphasized that rules
expressing constraints on single linguistic
structures and rules for selecting the most
preferable readings are completely different in
nature, and that rules for selecting preferale
readings should be utilized in analysis grammars of
practical MT systems. It is also claimed that
procedural control is essential in integrating such
rules into a unified grammar. Some sample rules
are given to make the points of discussion clear
and concrete.
</bodyText>
<sectionHeader confidence="0.987176" genericHeader="introduction">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999882652173913">
The Mu-Project is a Japanese national project
supported by grants from the Special Coordination
Funds for Promoting Science &amp; Technology of
STA(Science and Technology Agency), which aims to
develop Japanese-English and English-Japanese
machine translation systems. We currently restrict
the domain of translation to abstracts of
scientific and technological papers. The systems
are based on the transfer approach[1], and consist
of three phases: analysis, transfer and generation.
In this paper, we focus on the analysis grammar of
Japanese in the Japanese-English system. The
grammar has been developed by using GRADE which is
a programming language specially designed for this
project[2]. The grammar now consists of about 900
GRADE rules. The experiments so far show that the
grammar works very well and is comprehensive enough
to treat various linguistic phenomena in abstracts.
In this paper we will discuss some of the basic
design principles of the grammar together with its
detailed construction. Some examples of grammar
rules and analysis results will be shown to make
the points of our discussion clear and concrete.
</bodyText>
<sectionHeader confidence="0.980515" genericHeader="method">
2. Procedural Grammar
</sectionHeader>
<bodyText confidence="0.998055583333333">
There has been a prominent tendency in recent
computational linguistics to re-evaluate CFG and
use it directly or augment it to analyze
sentences[3.4.5]. In these systems(frameworks).
CFG rules independently describe constraints on
single linguistic structures, and a universal rule
application mechanism automatically produces a set
of possible structures which satisfy the given
constraints. It is well-known, however, that such
sets of possible structures often become
unmanageably large.
Because two separate rules such as
</bodyText>
<sectionHeader confidence="0.9997865" genericHeader="method">
&gt; NP PREP-P
&gt; VP PREP-P
</sectionHeader>
<bodyText confidence="0.998484333333333">
are usually prepared in CFG grammars in order to
analyze noun and verb phrases modified by
prepositional phrases. CFG grammars provide two
</bodyText>
<sectionHeader confidence="0.517917" genericHeader="method">
syntactic analyses for
</sectionHeader>
<bodyText confidence="0.999056851851852">
She was given flowers by her uncle.
Furthermore, the ambiguity of the sentence is
doubled by the lexical ambiguity of &amp;quot;by&amp;quot;, which can
be read as either a locative or an agentive
preposition. Since the two syntactic structures
are recognized by completely independent rules and
the semantic interpretations of &amp;quot;by&amp;quot; are given by
independent processes in the later stages.it is
difficult to compare these four readings during the
analysis to give a preference to one of these four
readings.
A rule such as
&amp;quot;If a sentence is passive and there is a
&amp;quot;by&amp;quot;-prepositional phrase, it is often the case
that the prepositional phrase fills the deep
agentive case. (try this analysis first)&amp;quot;
seems reasonable and quite useful for choosing the
most preferable interpretation, but it cannot be
expressed by refining the ordinary CFG rules. This
kind of rule is quite different in nature from a
CFG rule. It is not a rule of constraint on a
single linguistic structure(in fact, the above four
readings are all linguistically possible), but it
is a &amp;quot;heuristic&amp;quot; rule concerned with preference of
readings, which compares several alternative
analysis paths and chooses the most feasible one.
Human translaters (or humans in general) have many
</bodyText>
<note confidence="0.497727">
NP
VP
</note>
<page confidence="0.994471">
267
</page>
<bodyText confidence="0.999545568965518">
such preference rules based on various sorts of cue
such as morphological forms of words, collocations
of words, text styles, word semantics. etc. These
heuristic rules are quite useful not only for
increasing efficiency but also for preventing
proliferation of analysis results. As Wilks[6]
pointed out, we cannot use semantic information as
constraints on single linguistic structures, but
just as preference cues to choose the most feasible
interpretations among linguistically possible
interpretations. We claim that many sorts of
preference cues other than semantic ones exist in
real texts which cannot be captured by CFG rules.
We will show in this paper that, by utilizing
various sorts of preference cues, our analysis
grammar of Japanese can work almost
deterministically to give the most preferable
interpretation as the first output, without any
extensive semantic processing (note that even
&amp;quot;semantic&amp;quot; processing cannot disambiguate the above
sentence. The four readings are semantically
possible. It requires deep understanding of
contexts or situations, which we cannot expect in a
practical MT system).
In order to integrate heuristic rules based on
various levels of cues into a unified analysis
grammar, we have developed a programming langauage.
GRADE. GRADE provides us with the following
facilities.
- Explicit Control of Rule Applications :
Heuristic rules can be ordered according to their
strength(See 4-2).
- Multiple Relation Representation : Various
levels of information including morphological,
syntactic, semantic, logical etc. are expressed in
a single annotated tree and can be manipulated at
any time during the analysis. This is required not
only because many heuristic rules are based on
heterogeneous levels of cues, but also because the
analysis grammar should perform semantic/logical
interpretation of sentences at the same time and
the rules for these phases should be written in the
same framework as syntactic analysis rules (See
4-2. 4-4).
- Lexicon Driven Processing : We can write
heuristic rules specific to a single or a limited
number of words such as rules concerned with
collocations among words. These rules are strong
in the sense that they almost always succeed. They
are stored in the lexicon and invoked at
appropriate times during the analysis without
decreasing efficiency (See 4-1).
- Explicit Definition of Analysis Strategies :
The whole analysis phase can be divided into steps.
This makes the whole grammar efficient, natural and
easy to read. Furthermore, strategic consideration
plays an essential role in preventing undesirable
interpretations from being generated (See 4-3).
</bodyText>
<sectionHeader confidence="0.904575" genericHeader="method">
3 Organization of Grammar
</sectionHeader>
<bodyText confidence="0.99961575">
In this section. we will give the organization
of the grammar necessary for understanding the
discussion in the following sections. The main
components of the grammar are as follows.
</bodyText>
<listItem confidence="0.999363272727273">
(1) Post-Morphological Analysis
(2) Determination of Scopes
(3) Analysis of Simple Noun Phrases
(4) Analysis of Simple Sentences
(5) Analysis of Embedded Sentences (Relative
Clauses)
(6) Analysis of Relationships of Sentences
(7) Analysis of Outer Cases
(8) Contextual Processing (Processing of Omitted
case elements, Interpretation of &apos;Ha&apos; . etc.)
(9) Reduction of Structures for Transfer Phase
</listItem>
<bodyText confidence="0.997162692307692">
Each component consists of from 80 to 120
GRADE rules.
47 morpho-syntactic categories are provided
for Japanese analysis, each of which has its own
lexical description format. 12.000 lexical entries
have already been prepared according to the
formats. In this classification. Japanese nouns
are categorized into 8 sub-classes according to
their morpho-syntactic behaviour. and 53 semantic
markers are used to characterize their semantic
behaviour. Each verb has a set of case frame
descriptions (CFD) which correspond to different
usages of the verb. A CFD gives mapping rules
between surface case markers (SCM - postpositional
case particles are used as SCM&apos;s in Japanese) and
their deep case interpretations (DCI - 33 deep
cases are used). DCI of an SCM often depends on
verbs so that the mapping rules are given to CFO&apos;s
of individual verbs. A CFD also gives a normal
collocation between the verb and
SCM&apos;s(postpositonal case particles). Detailed
lexical descriptions are given and discussed in
another paper[7].
The analysis results are dependency trees
which show the semantic relationships among input
words.
</bodyText>
<sectionHeader confidence="0.930691" genericHeader="method">
4. Typical Steps of Analysis Grammar
</sectionHeader>
<bodyText confidence="0.9950175">
In the following, we will take some sample
rules to illustrate our points of discussion.
</bodyText>
<sectionHeader confidence="0.755596" genericHeader="method">
4-1 Relative Clauses
</sectionHeader>
<bodyText confidence="0.9925335">
Relative clause constructions in Japanese
express several different relationships between
modifying clauses (relative clauses) and their
antecedents. Some relative clause constructions
</bodyText>
<page confidence="0.992705">
268
</page>
<figure confidence="0.9883982">
Antecedent
[ex-1] [Type 2]
--&gt;(English Translation)
A computer whose processing speed is high
(Rule 3) Nouns such as &amp;quot;MOKUTEKI&amp;quot;(purpose).
</figure>
<bodyText confidence="0.69761">
&amp;quot;GEN_IN&amp;quot;(reason). &amp;quot;SHUDAN&amp;quot;(method) etc. express
deep case relationships by themselves, and, when
these nouns appear as antecedents, it is often the
case that they fill the gaps of the corresponding
deep cases in the relative clauses.
</bodyText>
<figure confidence="0.99507425">
[ex-2] [Type 1]
&amp;quot;KONO&amp;quot; &amp;quot;SOUCHI&amp;quot; &amp;quot;0&amp;quot; &amp;quot;TSUKAT&amp;quot; &amp;quot;TA&amp;quot; &amp;quot;MOKUTEKI&amp;quot;
(this)I(device (case t4to use) (tense (purpose)
particle: formative:
object past)
case)
Relative Clause Antecedent
--&gt; (English Translation)
</figure>
<bodyText confidence="0.993802833333333">
The purpose for which (someone) used this device
The purpose of using this device
(Rule 4) There is a limited number of nouns which
are often used as antecedents in Type 4 relative
clauses. Each of such nouns requires a specific
phrase or clause to be interpolated in English.
</bodyText>
<figure confidence="0.9829256">
[ex-3] [Type 4]
&amp;quot;KONO&amp;quot; &amp;quot;SOUCHI&amp;quot; &amp;quot;0&amp;quot; i &amp;quot;TSUKAT&amp;quot; &amp;quot;TA&amp;quot;
(this)I(device)1 (case `â  (to use) tense
particle: formative:
object past)
case)
Relative Clause
&amp;quot;KEKKA&amp;quot;
(result)
--&gt; (English Translation)
</figure>
<bodyText confidence="0.948735">
The result which was obtained by using this device
In the above example, the clause &amp;quot;the result which
someone obtained (the result : gap)&amp;quot; is ommited in
Japanese. which relates the antecedent
&amp;quot;KEKKA&amp;quot;(result) and the relative clause &amp;quot;KONO
SOUCHI 0 TSUKAT_TA&amp;quot;(someone used this device).
</bodyText>
<figure confidence="0.995453090909091">
&amp;quot;SHORISOKUDO&amp;quot;
(processing speed)
&amp;quot;GA&amp;quot;
(case
particle:
subject
case)
&amp;quot;HAYAI&amp;quot; &amp;quot;KEISANKI&amp;quot;
(high) (computer)I
Antecedent
RelativeiClause
</figure>
<bodyText confidence="0.996301">
cannot be translated as relative clauses in
English. We classified Japanese relative clauses
into the following four types, according to the
relationships between clauses and their
antecedents.
</bodyText>
<listItem confidence="0.862733">
(1) Type 1 : Gaps in Cases
</listItem>
<bodyText confidence="0.9885235">
One of the case elements of the relative
clause is deleted and the antecedent fills the gap.
</bodyText>
<listItem confidence="0.617325">
(2) Type 2 : Gaps in Case Elements
</listItem>
<bodyText confidence="0.998851">
The antecedent modifies a case element in the
clause. That is, a gap exists in a noun phrase in
the clause.
</bodyText>
<listItem confidence="0.933109">
(3) Type 3 : Apposition
</listItem>
<bodyText confidence="0.999940333333333">
The clause describes the content of the
antecedent as the English &amp;quot;that&amp;quot;-clause in &apos;the
idea that the earth is round&apos;.
</bodyText>
<listItem confidence="0.748586">
(4) Type 4 : Partial Apposition
</listItem>
<bodyText confidence="0.998235285714286">
The antecedent and the clause are related by
certain semantic/pragmatic relationships. The
relative clause of this type doesn&apos;t have any gaps.
This type cannot be translated directly into
English relative clauses. We have to interpolate
in English appropriate phrases or clauses which are
implicit in Japanese, in order to express the
semantic/pragmatic relationships between the
antecedents and relative clauses explicitly. In
other words, gaps exist in the interpolated phrases
or clauses.
Because the above four types of relative
clauses have the same surface forms in Japanese
(verb ) (noun).
</bodyText>
<subsectionHeader confidence="0.786215">
RelativeClause Antecedent
</subsectionHeader>
<bodyText confidence="0.999932266666667">
careful processing is required to distinguish them
(note that the &apos;antecedents&apos; -modified nouns- are
located after the relative clauses in Japanese). A
sophisticated analysis procedure has already been
developed, which fully utilizes various levels of
heuristic cues as follows.
(Rule 1) There are a limited number of nouns which
are often used as antecedents of Type 3 clauses.
(Rule 2) When nouns with certain semantic markers
appear in the relative clauses and those nouns are
followed by one of specific postpositional case
particles, there is a high possibility that the
relative clauses are Type 2. In the following
example, the word &amp;quot;SHORISOKUDO&amp;quot;(processing speed)
has the semantic marker AO (attribute).
</bodyText>
<page confidence="0.988441">
269
</page>
<bodyText confidence="0.9999031">
A set of lexical rules is defined for
&amp;quot;KEKKA&amp;quot;(result), which basically works as follows :
it examines first whether the deep object case has
already been filled by a noun phrase in the
relative clause. If so. the relative clause is
taken as type 4 and an appropriate phrase is
interpolated as in [ex-3]. If not, the relative
clause is taken as type 1 as in the following
example where the noun &amp;quot;KEKKA&amp;quot; (result) fills the
gap of object case in the relative clause.
</bodyText>
<figure confidence="0.557354">
[ex-4] [Type 1]
&amp;quot;TSUKAT&amp;quot; &amp;quot;TA&amp;quot; &amp;quot;KEKKA&amp;quot;
(to use)(tense (result)
formative:
past)
Antecedent
--&gt;(English Translation)
</figure>
<bodyText confidence="0.988458277777778">
The result which this experiment used
Such lexical rules are invoked at the beginning of
the relative clause analysis by a rule in the main
flow of processing. The noun &amp;quot;KEKKA&amp;quot; (result) is
given a mark as a lexical property which indicates
the noun has special rules to be invoked when it
appears as an antecedent of a relative clause. All
the nouns which require special treatments in the
relative clause analysis are given the same marker.
The rule in the main flow only checks this mark and
invokes the lexical rules defined in the lexicon.
(Rule 5) Only the cases marked by postpositional
case particles &apos;GA&apos;. &apos;WO&apos; and &apos;NI&apos; can be deleted
in Type 1 relative clauses, when the antecedents
are ordinary nouns. Gaps in Type 1 relative clauses
can have other surface case marks, only when the
antecedents are special nouns such as described in
Rule (3).
</bodyText>
<subsectionHeader confidence="0.474476">
4-2 Conjuncted Noun Phrases
</subsectionHeader>
<bodyText confidence="0.95052154054054">
Conjuncted noun phrases often appear in
abstracts of scientific and technological papers.
It is important to analyze them correctly,
especially to determine scopes of conjunctions
correctly, because they often lead to proliferation
of analysis results. The particle &amp;quot;TO&amp;quot; plays
almost the same role as the English &amp;quot;and&amp;quot; to
conjunct noun phrases. There are several heuristic
rules based on various levels of information to
determine the scopes.
&lt;Scope Decision Rules of Conjuncted Noun Phrases
by Particle &apos;TO&apos;&gt;.
(Rule 1) Since particle &amp;quot;TO&amp;quot; is also used as a case
particle, if it appears in the position:
Noun &apos;TO&apos; verb Noun.
Noun &apos;TO&apos; adjective Noun,
there are two possible interpretations. one in
which &amp;quot;TO&amp;quot; is a case particle and &apos;noun TO
adjective(verb)&apos; forms a relative clause that
modifies the second noun, and the other one in
which &amp;quot;TO&amp;quot; is a conjunctive particle to form a
conjuncted noun phrase. However, it is very likely
that the particle &apos;TO&apos; is not a conjunctive
particle but a post-positional case particle, if
the adjective (verb) is one of adjectives (verbs)
which require case elements with surface case mark
&apos;TO&apos; and there are no extra words between &amp;quot;TO&amp;quot; and
the adjective (verb). In the following example.
&amp;quot;KOTONARU(to be different)&amp;quot; is an adjective which
is often collocated with a noun phrase followed by
case particle &amp;quot;TO&amp;quot;.
[ex-5]
YOSOKU-CHI &amp;quot;TO&amp;quot; KOTONARU ATAI
(predicted value) (to be different) (value)
[dominant interpretation]
YOSOKU-CHI &amp;quot;TO&amp;quot; KOTONARU ATAI
relative lause antecedent
</bodyText>
<listItem confidence="0.880457">
â¢ the value which is different from the
predicted value
</listItem>
<table confidence="0.738974111111111">
[less dominant interpretation]
YOSOKU-CHI &amp;quot;TO&amp;quot; KOTONARU ATAI
NP NIP
conjuncts&apos; noun phrase
âª the predicted value and the different value
(Rule 2) If two &apos;TO&apos; particles appear in the
position:
Noun-1 &apos;TO&apos; Noun-2 &apos;TO&apos; NO&apos; NOUN-3
the right boundary of the scope of the conjuction
</table>
<bodyText confidence="0.9971092">
is almost always Noun-2. The second &apos;TO&apos; plays a
role of a delimiter which delimits the right
boundary of the conjunction. This &apos;TO&apos; is
optional, but in real texts one often places it to
make the scope unambiguous. especially when the
second conjunct is a long noun phrase and the scope
is highly ambiguous without it. Because the second
&apos;TO&apos; can be interpreted as a case particle (not as
a delimiter of the conjunction) and &apos;NO&apos; following
a case particle turns the preceding phrase to a
</bodyText>
<figure confidence="0.990488333333333">
&amp;quot;KONO&amp;quot; &amp;quot;JIKKEN&amp;quot; &amp;quot;GA&amp;quot;
(this)I(experiment (case
particle:
subject
case)
Relative Clause
</figure>
<page confidence="0.975768">
270
</page>
<bodyText confidence="0.999479857142857">
modifier of a noun, an interpretation in which
&amp;quot;NOUN-2 TO NO&amp;quot; is taken as a modifier of NOUN-3 and
NOUN-3 is taken as the head noun of the second
conjunt is also linguistically possible. However.
in most cases, when two &apos;TO&apos; particles appear in
the above position, the second &apos;TO&apos; is just a
delimiter of the scope(see [ex-6]).
</bodyText>
<figure confidence="0.93723384375">
[ex-8]
YOSOKU-CHI TO JIKKEN DE NO JISSOKU-CHI 12 NO SA
(predicted experiment)(case kactual valiie&amp;quot;)
I
value) &apos; particle: (difference)
place)
[dominant interpretation]
YOSOKU-CHI TO JIKKEN DE NO JISSOKU-CHI I2 NO SA
4
NP MP
Conjuncted NP
NP
â¢ the difference between the predicted value
and the actual value in the experiment
[less dominant interpretations]
(A)
YOSOKU-CHI TO JIKKEN DE NO JISSOKU-CHI TO NO SA
NP NP
(
4
Conjuncted NP
- the difference with the actual value in the
predicted value and the experiment
(B)
YOS1KU-CHI TO JIKKEN DE NO JISSOKU-CHI TO NO SA
IMMO i
I
4
NP NP
I 1
I
Conjuncted NP
</figure>
<bodyText confidence="0.9900633">
âª the predicted value and the difference with
the actual value in the experiment
(Rule 3) If a special noun which is often
collocated with conjunctive noun phrases appear in
the position:
Noun-1 &apos;TO&apos; Noun-2 &apos;NO&apos;&lt;special-noun&gt;,
the right boundary of the conjunction is almost
always Noun-2. Such special nouns are marked in
the lexicon. In the following example, &amp;quot;KANKEI&amp;quot; is
such a special noun.
</bodyText>
<figure confidence="0.959004551724138">
â¢
[ex-7]
JISSOKU-CHI &amp;quot;TO&amp;quot; RIRON-DE E-TA YOSOKU-CHI NO KANKEI
(actual value) 1(theorylo (to)(predictelelatiol
btain) value) ship)
special noun
[dominant interpretation]
JISSOKU-CHI &amp;quot;TO&amp;quot; YOSOKU-CHI NO KANKEI
(relative antecedent
clause)
ItP
conjulcted NP
â¢ the relationship between the actual value
and the predicted value obtained by the
theory
[less dominant interpretations]
(A)
JISSOKU-CHI &amp;quot;TO&amp;quot; RIRON-DE YOSOKU-CHI NO KANKEI
NP NP
1 t
conjun ted NP
relativeiclause
. the relationship of the predicted value which
was obtained by the actual value and the theory
(B)
JISSOKU-CHI &amp;quot;TO&amp;quot; YOSOKU-CHI NO KANKEI
NP NP
4
conjuncted NP
</figure>
<listItem confidence="0.836749">
â¢ the actual value and the relationship of
the predicted value which was obtained by
the theory
</listItem>
<sectionHeader confidence="0.392421" genericHeader="method">
(Rule 4) In
Noun-1 &apos;TO&apos; Noun-2.
</sectionHeader>
<bodyText confidence="0.997932">
if Noun-1 and Noun-2 are the same nouns, the right
boundary of the conjunction is almost always
Noun-2.
</bodyText>
<sectionHeader confidence="0.5559255" genericHeader="method">
(Rule 5) In
Noun-1 &apos;TO&apos; Noun-2,
</sectionHeader>
<bodyText confidence="0.9925235">
if Noun-1 and Noun-2 are not exactly the same but
nouns with the same morphemes. the right boundary
</bodyText>
<figure confidence="0.753426">
NP
antecedent
</figure>
<page confidence="0.992151">
271
</page>
<bodyText confidence="0.9998215">
is often Noun-2. In [ex-7] above, both of the head
nouns of the conjuncts. JISSOKU-CHI(actual value)
and YOSOKU-CHI(predicted value), have the same
morpheme &amp;quot;CHI&amp;quot; (which meams &amp;quot;value&amp;quot;). Thus, this
rule can correctly determine the scope, even if the
special word &amp;quot;KANKEI&amp;quot;(relationship) does not exist.
Note that most of these rules cannot be
naturally expressed by ordinary CFG rules. Rule
(2), for example, is a rule which blocks the
application of the ordinary CFG rule such as
</bodyText>
<equation confidence="0.474384">
NP ---&gt; NP &lt;case-particle&gt; NO N
</equation>
<bodyText confidence="0.777628375">
(Rule 8) If some special words (like &apos;SONO&apos;
&apos;SORE-NO&apos; etc. which roughly correspond to &apos;the&apos;.
&apos;its&apos; in English) appear in the position:
Phrases which Noun-1 &apos;TO&apos; &lt;special word&gt; Noun-2,
modify noun
phrases
the modifiers preceding Noun-1 modify only Noun-1
but not the whole conjuncted noun phrase.
</bodyText>
<note confidence="0.3587325">
(Rule 7) In
Noun-1 &apos;TO&apos; Noun-2.
</note>
<bodyText confidence="0.999094727272727">
if Noun-1 and Noun-2 belong to the same specific
semantic categories, like action nouns, abstract
nouns etc. the right boundary is often Noun-2.
(Rule 8) In most conjuncted noun phrases, the
structures of conjuncts are well-balanced.
Therefore, if a relative clause precedes the first
conjunct and the length of the second conjunct (the
number of words between &apos;TO&apos; and Noun-2) is short
like
when the &lt;case-particle&gt; is &apos;TO&apos; and a conjunctive
particle &apos;TO&apos; precedes this sequence of words.
</bodyText>
<subsectionHeader confidence="0.918042">
4-3 Determination of Scopes
</subsectionHeader>
<bodyText confidence="0.965510222222222">
Scopes of conjuncted noun phrases often
overlap with scopes of relative clauses, which
makes the problem of scope determination more
complicated. For the surface sequence of phrases
like
NP-1 &apos;TO&apos; NP-2 &lt;case-particle&gt; &lt;verb&gt; NP-3
there are two possible relationships between the
scopes of conjuncted noun phrase and the relative
clause like
</bodyText>
<figure confidence="0.783457923076923">
(1) NP -1 &apos;TO&apos; NP -2 &lt;case-particle&gt; .... &lt;verb&gt; N!-3
conjuncted
noun phrase
Relative Clause Antecedent
NP
(2)NP-2 &apos;TO&apos; NP-2 &lt;case-particle&gt; &lt;verb&gt; NP-3
t
Relative Clause Antecelent
4
N,P
klength of theil
2nd conjunct
[Relative Clause] Noun-1 &apos;TO&apos; Noun-2
</figure>
<subsectionHeader confidence="0.543945">
Conjuncted Noun Phrase
</subsectionHeader>
<bodyText confidence="0.999496355555555">
the relative clause modifies both conjuncts. that
is, the antecedent of the relative clause is the
whole conjuncted phrase.
These heuristic rules are based on different
levels of information (some are based on surface
lexical items, some are based on morphemes of
words, some on semantic information) and may lead
to different decisions about scopes. However, we
can distinguish strong heuristic rules (i.e. rules
which almost always give correct scopes when they
are applied) from others. In fact, there exists
some ordering of heuristic rules according to their
strength. Rules (1). (2), (3), (4) and (8), for
example, almost always succeed, and rules like (7)
and (8) often lead to wrong decisions. Rules like
(7) and (8) should be treated as default rules
which are applied only when the other stronger
rules cannot decide the scopes. We can define in
GRADE an arbitrary ordering of rule applications.
This capability of controlling the sequences of
rule applications is essential in integrating
heuristic rules based on heterogeneous levels of
information into a unified set of rules.
This ambiguity together with genuine ambiguities in
scopes of conjuncted noun phrases in 4-2 produces
combinatorial interpretations in CFG grammars. most
of which are linguistically possible but
practically unthinkable. It is not only
inefficient but also almost impossible to compare
such an enormous number of linguistically possible
structures after they have been generated. In our
analysis grammar. a set of scope decision rules are
applied in the early stages of processing in order
to block the generation of combinatorial
interpretations. In fact, the structure (2) in
which a relative clause exists within the scope of
a conjuncted noun phrase is relatively rare in real
texts, especially when the relative clause is
rather long. Such constructions with long relative
clauses are a kind of garden path sentence.
Therefore, unless strong heuristic rules like (2).
(3) and (4) in 4-2 suggest the structure (2). the
structure (1) is adopted as the first choice (Note
that, in [ex-7] in 4-2, the strong heuristic
rule[rule (3)] suggests the structure (2)). Since
</bodyText>
<page confidence="0.991462">
272
</page>
<bodyText confidence="0.991393666666667">
the result of such a decision is explicitly
expressed in the tree:
&lt;sequence-of-words&gt;
and the grammar rules in the later stages of
processing work on this structure, the other
interpretations of scopes will not be tried unless
the first choice fails at a later stage for some
reason or alternative interpretations are
explicitly requested by a human operator. Note
that a structure like
which is linguistically possible but extremely rare
in real texts, is naturally blocked.
</bodyText>
<subsectionHeader confidence="0.934998">
4-4 Sentence Relationships and Outer Case Analysis
</subsectionHeader>
<bodyText confidence="0.9987805">
Corresponding to English sub-ordinators and
co-ordinators like &apos;although&apos;. &apos;in order to&apos;. &apos;and&apos;
etc.. we have several different syntactic
constructions as follows.
</bodyText>
<figure confidence="0.770407285714286">
(1) (Verb with a specific
inflection form) t 1
I I
Si $2
(2) (Verb)(a postpositional particle)
SI S2
(Verb)(a conjunctive noun)
</figure>
<figureCaption confidence="0.21251">
(1) roughly corresponds to English co-ordinate
constructions, and (2) and (3) to English
</figureCaption>
<bodyText confidence="0.999938533333333">
sub-ordinate constructions. However, the
correspondence between the forms of Japanese and
English sentence connections is not so
straightforward. Some postpositional particles in
(2), for example, are used to express several
different semantic relationships between sentences,
and therefore, should be translated into different
sub-ordinators in English according to the semantic
relationships. The postpositional particle &apos;TAME&apos;
expresses either &apos;purpose-action&apos; relationships or
&apos;cause-effect&apos; relationships. In order to
disambiguate the semantic relationships expressed
by &apos;TAME&apos;, a set of lexical rules is defined in the
dictionary of &apos;TAME&apos;. The rules are roughly as
follows.
</bodyText>
<listItem confidence="0.459164">
(1) If Si expresses a completed action or a
</listItem>
<bodyText confidence="0.997089333333333">
stative assertion, the relationship is
&apos;cause-effect&apos;.
(2) If Si expresses neither a completed
event nor a stative assertion and S2 expresses a
controllable action, the relationship is &apos;purpose-
action&apos;.
</bodyText>
<figure confidence="0.633597588235294">
[ex-8]
(A) Si: TOKYO-NI IT- TEITA TAME
(Tokyo) (to go) (aspect
formative)
S2: KAIGI-NI SHUSSEKI DEKINAKA- TA
(meeting) (to attend) (cannot)(tense format-
ive : past)
SI: completed action
(the aspect formative &amp;quot;TEITA&amp;quot; means
completion of an action)
---&gt; [cause-effect]
- Because I was in Tokyo. I couldn&apos;t
attend the meeting.
(B) Sl: TOKYO-NI IKU TAME
(Tokyo) (to go)
S2: KAIGI-NI SHUSSEKI DEKINAI
(meeting) (to attend) (cannot)
</figure>
<bodyText confidence="0.953821428571429">
Si: neither a completed action nor
a stative assertion
S2: &amp;quot;whether I can attend the meeting
or not&amp;quot; is not controllable.
---&gt; [cause-effect]
Because I go to Tokyo. I cannot attend
the meeting.
</bodyText>
<listItem confidence="0.535733">
(C) Si: TOKYO-NI IKU TAME
</listItem>
<bodyText confidence="0.993993818181818">
(Tokyo) (to go)
$2: KIPPU-0 KAT- TA
(ticket) (to buy) (tense formative: past)
Si: neither a completed action nor
a stative assertion
S2: volitional action
---&gt; [purpose-action]
In order to go to Tokyo. I bought a
ticket.
Note that whether Si expresses a completed
action or not is determined in the preceding phases
</bodyText>
<figure confidence="0.982275">
SCOPE-OF-CON UNCTED
-NOUN-PHRASE sequence-of-wor
NP-1 &apos;TO&apos; &lt;verb&gt; NP-2 &lt;verb&gt; NP-3
relative Clauseantecedent
4
relativeI clause
1------1
conjuncad noun phrase
antecedent
(3)
Sc
52
</figure>
<page confidence="0.997317">
273
</page>
<bodyText confidence="0.99994375">
by using rules which utilize aspectual features of
verbs described in the dictionary and aspect
formatives following the verbs (The classification
of Japanese verbs based on their aspectual features
and related topics are discussed in [8]). We have
already written rules (some of which are heuristic
ones) for 57 postpositional particles for
conjuctions of sentences like &apos;TAME&apos;.
Postpositional particles for cases, which
follow noun phrases and express case relationships.
are also very ambiguous in the sense that they
express several different deep cases. While the
interpretation of inner case elements are directly
given in the verb dictionary as the form of mapping
between surface case particles and their deep case
interpretations, the outer case elements should be
semantically interpreted by referring to semantic
categories of noun phrases and properties of verbs.
Lexical rules for 82 case particles have also been
implemented and tested.
</bodyText>
<sectionHeader confidence="0.999815" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.997785959183674">
Analysis Grammar of Japanese in the Mu-project
is discussed in this paper. By integrating various
levels of heuristic information, the grammar can
work very efficiently to produce the most natural
and preferable reading as the first output result.
without any extensive semantic processings.
The concept of procedural grammars was
originally proposed by Winograd[9] and
Independently persued by other research groups[10].
However, their claims have not been well
appreciated by other researchers (or even by
themselves). One often argues against procedural
grammars, saying that: the linguistic facts
Winograd&apos;s grammar captures can also be expressed
by ATN, and the expressive power of ATN is
equivalent with that of the augmented CFG.
Therefore, procedural grammars have no advantages
over the augmented CFG. They just make the whole
grammars complicated and hard to maintain.
The above argument, however, misses an
important point and confuses procedural grammar
with the representation of grammars in the form of
programs (as shown in Winograd[9]). We showed in
this paper that: the rules which give structural
constraints on final analysis results and the rules
which choose the most preferable linguistic
structures (or the rules which block &amp;quot;garden path&amp;quot;
structures) are different in nature. In order to
Integrate the latter type of rules in a unified
analysis grammar. it is essential to control the
sequence of rule applications explicitly and
introduce strategic knowledge into grammar
organizations. Furthermore, introduction of
control specifications doesn&apos;t necessarily lead to
the grammar in the form of programs. Our grammar
writing system GRADE allows us a rule based
specification of grammar. and the grammar developed
by using GRADE is easy to maintain.
We also discuss the usefulness of lexicon
driven processing in treating idiosyncratic
phenomena in natural languages. Lexicon driven
prcessing is extremely useful in the transfer phase
of machine translation systems, because the
transfer of lexical items (selection of appropriate
target lexical items) is highly dependent on each
lexical item[11].
The current version of our analysis grammar works
quite well on 1,000 sample sentences in real
abstracts without any pre-editing.
</bodyText>
<sectionHeader confidence="0.99772" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.675287272727273">
Appreciations go to the members of the
Mu-Project. especially to the members of the
Japanese analysis group [Mr. E.Sumita (Japan IBM).
Mr. M.Kato (Sord Co.). Mr. S.Taniguchi (Kyosera
Co.). Mr. A.Kosaka (NEC Co.). Mr. H.Sakamoto (Oki
Electric Co.). Miss M.Kume (JCS), Mr. M.Ishikawa
(Kyoto Univ.)] who are engaged in implementing the
comprehensive Japanese analysis grammar, and also
to Or. B.Vauquois. Or. C.Boitet (Grenoble Univ..
France) and Dr. P.Sabatier (CNRS. France) for
their fruitful discussions and comments.
</bodyText>
<sectionHeader confidence="0.96655" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999991064516129">
[1] B.Vauquois: La Traduction Automatique a
Grenoble, Documents de Linguistique Quantitative.
No. 24. Paris, Dunod. 1975
[2] J.Nakamura et.al.: Grammar Writing System
(GRADE) of Mu-Machine Translation Project and its
Characteristics. Proc. of COLING 84. 1984
[3] J.Slocum: A Status Report on the LRC Machine
Translation System. Working Paper LRC-82-3.
Linguistic Research Center. Univ. of Texas. 1982
[4] F.Pereira et.al.: Definite Clause GRammars of
Natural Language Analysis, Artificial Intelligence.
Vol. 13. 1980
[5] G.Gazdar: Phrase Structure Grammars and Natural
Languages. Proc. of 8th IJCAI. 1983
[6] Y.Wilks: Preference Semantics, in The Formal
Semantics of Natural Language (ed: E.L.Keenan),
Cambridge University Press, 1975
[7] Y.Sakamoto et.al.: Lexicon Features for
Japanese Syntactic Analysis in Mu-Project-JE, Proc.
of COLING 84, 1984
[8] J.Tsujii: The Transfer Phase in an
English-Japanese Translation System. Proc. of
COLING 82. 1982
[9] T.Winograd: Understanding Natural Language.
Academic Press. 1975
[10] C.Boitet et.al.: Recent Developments in
Russian-French Machine Translation at Grenoble.
Linguistics, Vol. 19. 1981
[11] M.Nagao, et.al.: Dealing with Incompleteness
of Linguistic Knowledge on Language Translation.
Proc. of COLING 84. 1984
</reference>
<page confidence="0.998302">
274
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.925619">
<title confidence="0.9874265">Analysis Grammar of Japanese in the Mu-Project - A Procedural Approach to Analysis Grammar -</title>
<author confidence="0.98804">Jun-ichi NAKAMURA</author>
<author confidence="0.98804">Makoto NAGAÂ°</author>
<affiliation confidence="0.999564">Department of Electrical Engineering Kyoto University</affiliation>
<address confidence="0.990957">Kyoto, JAPAN</address>
<abstract confidence="0.997315307692308">Analysis grammar of Japanese in the Mu-project is presented. It is emphasized that rules expressing constraints on single linguistic structures and rules for selecting the most preferable readings are completely different in nature, and that rules for selecting preferale readings should be utilized in analysis grammars of practical MT systems. It is also claimed that procedural control is essential in integrating such rules into a unified grammar. Some sample rules are given to make the points of discussion clear and concrete.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>B.Vauquois: La Traduction Automatique a Grenoble, Documents de Linguistique Quantitative.</title>
<date>1975</date>
<booktitle>No. 24.</booktitle>
<location>Paris, Dunod.</location>
<contexts>
<context position="1185" citStr="[1]" startWordPosition="170" endWordPosition="170">med that procedural control is essential in integrating such rules into a unified grammar. Some sample rules are given to make the points of discussion clear and concrete. 1. Introduction The Mu-Project is a Japanese national project supported by grants from the Special Coordination Funds for Promoting Science &amp; Technology of STA(Science and Technology Agency), which aims to develop Japanese-English and English-Japanese machine translation systems. We currently restrict the domain of translation to abstracts of scientific and technological papers. The systems are based on the transfer approach[1], and consist of three phases: analysis, transfer and generation. In this paper, we focus on the analysis grammar of Japanese in the Japanese-English system. The grammar has been developed by using GRADE which is a programming language specially designed for this project[2]. The grammar now consists of about 900 GRADE rules. The experiments so far show that the grammar works very well and is comprehensive enough to treat various linguistic phenomena in abstracts. In this paper we will discuss some of the basic design principles of the grammar together with its detailed construction. Some examp</context>
</contexts>
<marker>[1]</marker>
<rawString>B.Vauquois: La Traduction Automatique a Grenoble, Documents de Linguistique Quantitative. No. 24. Paris, Dunod. 1975</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Nakamura et al</author>
</authors>
<title>Grammar Writing System (GRADE) of Mu-Machine Translation Project and its Characteristics.</title>
<date>1984</date>
<booktitle>Proc. of COLING 84.</booktitle>
<contexts>
<context position="1459" citStr="[2]" startWordPosition="212" endWordPosition="212">rdination Funds for Promoting Science &amp; Technology of STA(Science and Technology Agency), which aims to develop Japanese-English and English-Japanese machine translation systems. We currently restrict the domain of translation to abstracts of scientific and technological papers. The systems are based on the transfer approach[1], and consist of three phases: analysis, transfer and generation. In this paper, we focus on the analysis grammar of Japanese in the Japanese-English system. The grammar has been developed by using GRADE which is a programming language specially designed for this project[2]. The grammar now consists of about 900 GRADE rules. The experiments so far show that the grammar works very well and is comprehensive enough to treat various linguistic phenomena in abstracts. In this paper we will discuss some of the basic design principles of the grammar together with its detailed construction. Some examples of grammar rules and analysis results will be shown to make the points of our discussion clear and concrete. 2. Procedural Grammar There has been a prominent tendency in recent computational linguistics to re-evaluate CFG and use it directly or augment it to analyze sen</context>
</contexts>
<marker>[2]</marker>
<rawString>J.Nakamura et.al.: Grammar Writing System (GRADE) of Mu-Machine Translation Project and its Characteristics. Proc. of COLING 84. 1984</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Slocum</author>
</authors>
<title>A Status Report on the LRC Machine Translation System. Working Paper LRC-82-3. Linguistic Research Center. Univ. of Texas.</title>
<date>1982</date>
<marker>[3]</marker>
<rawString>J.Slocum: A Status Report on the LRC Machine Translation System. Working Paper LRC-82-3. Linguistic Research Center. Univ. of Texas. 1982</rawString>
</citation>
<citation valid="true">
<title>F.Pereira et.al.: Definite Clause GRammars of Natural Language Analysis,</title>
<date>1980</date>
<journal>Artificial Intelligence.</journal>
<volume>13</volume>
<marker>[4]</marker>
<rawString>F.Pereira et.al.: Definite Clause GRammars of Natural Language Analysis, Artificial Intelligence. Vol. 13. 1980</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Gazdar Phrase</author>
</authors>
<title>Structure Grammars and Natural Languages.</title>
<date>1983</date>
<booktitle>Proc. of 8th IJCAI.</booktitle>
<marker>[5]</marker>
<rawString>G.Gazdar: Phrase Structure Grammars and Natural Languages. Proc. of 8th IJCAI. 1983</rawString>
</citation>
<citation valid="true">
<title>Y.Wilks: Preference Semantics, in The Formal Semantics of Natural Language (ed: E.L.Keenan),</title>
<date>1975</date>
<publisher>Cambridge University Press,</publisher>
<contexts>
<context position="4158" citStr="[6]" startWordPosition="637" endWordPosition="637"> a single linguistic structure(in fact, the above four readings are all linguistically possible), but it is a &amp;quot;heuristic&amp;quot; rule concerned with preference of readings, which compares several alternative analysis paths and chooses the most feasible one. Human translaters (or humans in general) have many NP VP 267 such preference rules based on various sorts of cue such as morphological forms of words, collocations of words, text styles, word semantics. etc. These heuristic rules are quite useful not only for increasing efficiency but also for preventing proliferation of analysis results. As Wilks[6] pointed out, we cannot use semantic information as constraints on single linguistic structures, but just as preference cues to choose the most feasible interpretations among linguistically possible interpretations. We claim that many sorts of preference cues other than semantic ones exist in real texts which cannot be captured by CFG rules. We will show in this paper that, by utilizing various sorts of preference cues, our analysis grammar of Japanese can work almost deterministically to give the most preferable interpretation as the first output, without any extensive semantic processing (no</context>
</contexts>
<marker>[6]</marker>
<rawString>Y.Wilks: Preference Semantics, in The Formal Semantics of Natural Language (ed: E.L.Keenan), Cambridge University Press, 1975</rawString>
</citation>
<citation valid="true">
<title>Y.Sakamoto et.al.: Lexicon Features for Japanese Syntactic Analysis in Mu-Project-JE,</title>
<date>1984</date>
<booktitle>Proc. of COLING 84,</booktitle>
<contexts>
<context position="8127" citStr="[7]" startWordPosition="1240" endWordPosition="1240">aracterize their semantic behaviour. Each verb has a set of case frame descriptions (CFD) which correspond to different usages of the verb. A CFD gives mapping rules between surface case markers (SCM - postpositional case particles are used as SCM&apos;s in Japanese) and their deep case interpretations (DCI - 33 deep cases are used). DCI of an SCM often depends on verbs so that the mapping rules are given to CFO&apos;s of individual verbs. A CFD also gives a normal collocation between the verb and SCM&apos;s(postpositonal case particles). Detailed lexical descriptions are given and discussed in another paper[7]. The analysis results are dependency trees which show the semantic relationships among input words. 4. Typical Steps of Analysis Grammar In the following, we will take some sample rules to illustrate our points of discussion. 4-1 Relative Clauses Relative clause constructions in Japanese express several different relationships between modifying clauses (relative clauses) and their antecedents. Some relative clause constructions 268 Antecedent [ex-1] [Type 2] --&gt;(English Translation) A computer whose processing speed is high (Rule 3) Nouns such as &amp;quot;MOKUTEKI&amp;quot;(purpose). &amp;quot;GEN_IN&amp;quot;(reason). &amp;quot;SHUDAN</context>
</contexts>
<marker>[7]</marker>
<rawString>Y.Sakamoto et.al.: Lexicon Features for Japanese Syntactic Analysis in Mu-Project-JE, Proc. of COLING 84, 1984</rawString>
</citation>
<citation valid="true">
<title>J.Tsujii: The Transfer Phase in an English-Japanese Translation System.</title>
<date>1982</date>
<booktitle>Proc. of COLING 82.</booktitle>
<contexts>
<context position="25569" citStr="[8]" startWordPosition="3987" endWordPosition="3987">: volitional action ---&gt; [purpose-action] In order to go to Tokyo. I bought a ticket. Note that whether Si expresses a completed action or not is determined in the preceding phases SCOPE-OF-CON UNCTED -NOUN-PHRASE sequence-of-wor NP-1 &apos;TO&apos; &lt;verb&gt; NP-2 &lt;verb&gt; NP-3 relative Clauseantecedent 4 relativeI clause 1------1 conjuncad noun phrase antecedent (3) Sc 52 273 by using rules which utilize aspectual features of verbs described in the dictionary and aspect formatives following the verbs (The classification of Japanese verbs based on their aspectual features and related topics are discussed in [8]). We have already written rules (some of which are heuristic ones) for 57 postpositional particles for conjuctions of sentences like &apos;TAME&apos;. Postpositional particles for cases, which follow noun phrases and express case relationships. are also very ambiguous in the sense that they express several different deep cases. While the interpretation of inner case elements are directly given in the verb dictionary as the form of mapping between surface case particles and their deep case interpretations, the outer case elements should be semantically interpreted by referring to semantic categories of </context>
</contexts>
<marker>[8]</marker>
<rawString>J.Tsujii: The Transfer Phase in an English-Japanese Translation System. Proc. of COLING 82. 1982</rawString>
</citation>
<citation valid="true">
<title>T.Winograd: Understanding Natural Language.</title>
<date>1975</date>
<publisher>Academic Press.</publisher>
<contexts>
<context position="26661" citStr="[9]" startWordPosition="4149" endWordPosition="4149">rpretations, the outer case elements should be semantically interpreted by referring to semantic categories of noun phrases and properties of verbs. Lexical rules for 82 case particles have also been implemented and tested. 5 Conclusions Analysis Grammar of Japanese in the Mu-project is discussed in this paper. By integrating various levels of heuristic information, the grammar can work very efficiently to produce the most natural and preferable reading as the first output result. without any extensive semantic processings. The concept of procedural grammars was originally proposed by Winograd[9] and Independently persued by other research groups[10]. However, their claims have not been well appreciated by other researchers (or even by themselves). One often argues against procedural grammars, saying that: the linguistic facts Winograd&apos;s grammar captures can also be expressed by ATN, and the expressive power of ATN is equivalent with that of the augmented CFG. Therefore, procedural grammars have no advantages over the augmented CFG. They just make the whole grammars complicated and hard to maintain. The above argument, however, misses an important point and confuses procedural grammar</context>
</contexts>
<marker>[9]</marker>
<rawString>T.Winograd: Understanding Natural Language. Academic Press. 1975</rawString>
</citation>
<citation valid="true">
<title>C.Boitet et.al.: Recent Developments in Russian-French Machine Translation at</title>
<date>1981</date>
<journal>Grenoble. Linguistics,</journal>
<volume>19</volume>
<contexts>
<context position="26716" citStr="[10]" startWordPosition="4156" endWordPosition="4156">cally interpreted by referring to semantic categories of noun phrases and properties of verbs. Lexical rules for 82 case particles have also been implemented and tested. 5 Conclusions Analysis Grammar of Japanese in the Mu-project is discussed in this paper. By integrating various levels of heuristic information, the grammar can work very efficiently to produce the most natural and preferable reading as the first output result. without any extensive semantic processings. The concept of procedural grammars was originally proposed by Winograd[9] and Independently persued by other research groups[10]. However, their claims have not been well appreciated by other researchers (or even by themselves). One often argues against procedural grammars, saying that: the linguistic facts Winograd&apos;s grammar captures can also be expressed by ATN, and the expressive power of ATN is equivalent with that of the augmented CFG. Therefore, procedural grammars have no advantages over the augmented CFG. They just make the whole grammars complicated and hard to maintain. The above argument, however, misses an important point and confuses procedural grammar with the representation of grammars in the form of pro</context>
</contexts>
<marker>[10]</marker>
<rawString>C.Boitet et.al.: Recent Developments in Russian-French Machine Translation at Grenoble. Linguistics, Vol. 19. 1981</rawString>
</citation>
<citation valid="true">
<authors>
<author>et al M Nagao</author>
</authors>
<title>Dealing with Incompleteness of Linguistic Knowledge on Language Translation.</title>
<date>1984</date>
<booktitle>Proc. of COLING 84.</booktitle>
<contexts>
<context position="28415" citStr="[11]" startWordPosition="4411" endWordPosition="4411">hermore, introduction of control specifications doesn&apos;t necessarily lead to the grammar in the form of programs. Our grammar writing system GRADE allows us a rule based specification of grammar. and the grammar developed by using GRADE is easy to maintain. We also discuss the usefulness of lexicon driven processing in treating idiosyncratic phenomena in natural languages. Lexicon driven prcessing is extremely useful in the transfer phase of machine translation systems, because the transfer of lexical items (selection of appropriate target lexical items) is highly dependent on each lexical item[11]. The current version of our analysis grammar works quite well on 1,000 sample sentences in real abstracts without any pre-editing. Acknowledgements Appreciations go to the members of the Mu-Project. especially to the members of the Japanese analysis group [Mr. E.Sumita (Japan IBM). Mr. M.Kato (Sord Co.). Mr. S.Taniguchi (Kyosera Co.). Mr. A.Kosaka (NEC Co.). Mr. H.Sakamoto (Oki Electric Co.). Miss M.Kume (JCS), Mr. M.Ishikawa (Kyoto Univ.)] who are engaged in implementing the comprehensive Japanese analysis grammar, and also to Or. B.Vauquois. Or. C.Boitet (Grenoble Univ.. France) and Dr. P.S</context>
</contexts>
<marker>[11]</marker>
<rawString>M.Nagao, et.al.: Dealing with Incompleteness of Linguistic Knowledge on Language Translation. Proc. of COLING 84. 1984</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>