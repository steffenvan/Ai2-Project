<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.8756835">
An Optimal and Portable Parsing Method for
Romanian, French, and German Large Dictionaries
</title>
<note confidence="0.606037666666667">
Neculai Curteanu
Institute of Computer
Science,
Romanian Academy,
Iaşi Branch
ncurteanu@yahoo.com
</note>
<author confidence="0.983719">
Alex Moruz
</author>
<affiliation confidence="0.981676666666667">
Institute of Computer
Science, Romanian Academy;
Faculty of Computer
</affiliation>
<note confidence="0.4054005">
Science,
“Al. I. Cuza” University, Iaşi
</note>
<email confidence="0.861027">
mmoruz@info.uaic.ro
</email>
<author confidence="0.9777">
Diana Trandabăţ
</author>
<affiliation confidence="0.961106666666667">
Institute for Computer Science,
Romanian Academy;
Faculty of Computer
</affiliation>
<note confidence="0.4038535">
Science,
“Al. I. Cuza” University, Iaşi
</note>
<email confidence="0.851248">
dtrandabat@info.uaic.ro
</email>
<sectionHeader confidence="0.992209" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999968190476191">
This paper presents a cross-linguistic
analysis of the largest dictionaries cur-
rently existing for Romanian, French, and
German, and a new, robust and portable
method for Dictionary Entry Parsing
(DEP), based on Segmentation-
Cohesion-Dependency (SCD) configura-
tions. The SCD configurations are ap-
plied successively on each dictionary en-
try to identify its lexicographic segments
(the first SCD configuration), to extract
its sense tree (the second configuration),
and to parse its atomic sense definitions
(the third one). Using previous results on
DLR (The Romanian Thesaurus – new
format), the present paper adapts and ap-
plies the SCD-based technology to other
four large and complex thesauri: DAR
(The Romanian Thesaurus – old format),
TLF (Le Trésor de la Langue Française),
DWB (Deutsches Wörterbuch –
GRIMM), and GWB (Göthe-
Wörterbuch). This experiment is illu-
strated on significantly large parsed en-
tries of these thesauri, and proved the fol-
lowing features: (1) the SCD-based me-
thod is a completely formal grammar-
free approach for dictionary parsing, with
efficient (weeks-time adaptable) model-
ing through sense hierarchies and parsing
portability for a new dictionary. (2) SCD-
configurations separate and run sequen-
tially and independently the processes of
lexicographic segment recognition, sense
tree extraction, and atomic definition
parsing. (3) The whole DEP process with
SCD-configurations is optimal. (4) SCD-
configurations, through sense marker
classes and their dependency hyper-
graphs, offer an unique instrument of lex-
icon construction comparison, sense con-
cept design and DEP standardization.
</bodyText>
<sectionHeader confidence="0.99812" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999900346153846">
The general idea behind parsing a large dictio-
nary can be reduced to transforming a raw text
entry into an indexable linguistic resource. Thus,
for each dictionary entry, a structured representa-
tion of its senses has to be created, together with
a detailed description of the entry’s form: i.e.
morphology, syntax, orthography, phonetics, lex-
ical semantics, etymology, usage, variants etc.
The aim of this paper is to present an efficient
dictionary entry parsing (DEP) method, based on
Segmentation-Cohesion-Dependency (SCD) con-
figurations (Curteanu, 2006), applied on a set of
five large and complex dictionaries: DLR (The
Romanian Thesaurus – new format), DAR (The
Romanian Thesaurus – old format), TLF (Le
Trésor de la Langue Française), DWB
(Deutsches Wörterbuch – GRIMM), and GWB
(Göthe-Wörterbuch).
The paper is structured in 8 sections: Section 2
presents the state of the art in DEP, with an em-
phasis on the comparison between the proposed
method and other dictionary parsing strategies,
before detailing the SCD-based proposed method
in Section 3. The following sections present the
application of the proposed method to the five
dictionaries. The paper ends with a discussion on
</bodyText>
<page confidence="0.470137">
38
</page>
<note confidence="0.964933">
Proceedings of the 2nd Workshop on Cognitive Aspects of the Lexicon (CogALex 2010), pages 38–47,
Beijing, August 2010
</note>
<bodyText confidence="0.991469666666667">
comparative results and development directions
concerning optimality, portability, standardiza-
tion, and dictionary networks.
</bodyText>
<sectionHeader confidence="0.97746" genericHeader="introduction">
2 Dictionary Entry Parsing
</sectionHeader>
<bodyText confidence="0.999823111111111">
Natural language text parsing is a complex
process whose prerequisite essential stage is a
thorough modeling of the linguistic process to be
developed, i.e. the structures and relations aimed
to constitute the final result of the analysis. Simi-
larly, for DEP, the semantics of the lexical struc-
tures, the sense markers, and the hierarchies (de-
pendencies) between sense structures must be
specified.
Standard approaches to dictionary entry pars-
ing (referred to from now on as standard DEP),
such as the one used by (Neff and Boguraev,
1989), the LexParse system presented in (Hauser
and Storrer, 1993; Kammerer, 2000; Lemnitzer
and Kunze, 2005), or lexicographic grammars, as
those presented in (Curteanu &amp; Amihaesei, 2004;
Tufis et al., 1999), recognize the sense / subsense
definitions in a strictly sequential manner, along
with the incremental building of the entry sense
tree. The interleaving of the two running
processes is the main source of errors and ineffi-
ciency for the whole DEP process.
Both the standard DEP (Figure 1) and our
proposed method based on SCD-configurations
(Figure 2) involve the following three running
cycles and four essential phases for extracting the
sense-tree structure from a dictionary:
</bodyText>
<listItem confidence="0.7071605">
[A1], [B1] – parsing the lexicographic seg-
ments of an entry;
[A2], [B2] – parsing the sense-description
segment of the dictionary entry, at the level of
explicitly defined senses, until and not including
the contents of the atomic definitions / senses; at
this stage, the sense-tree of the sense-description
segment is built having (sets of) atomic senses /
definitions in their leaf-nodes.
[A3], [B3] – parsing the atomic definitions /
</listItem>
<equation confidence="0.788107">
senses.
Phase_1 := Sense-i Marker Recognition;
Phase_2 := Sense-i Definition Parsing;
Phase_3 := Attach Parsed Sense-i Definition
to Node-i;
Phase_4 := Add Node-i to EntrySense-Tree.
</equation>
<bodyText confidence="0.928539571428571">
The parsing cycles and phases of existing ap-
proaches, called standard DEP, are summarized
by the pseudo-code in Fig. 1, where Marker-
Number is the number of markers in the dictio-
nary-entry marker sequence and EntrySegment-
Number is the number of lexicographic segments
of the parsed entry.
</bodyText>
<figure confidence="0.880920714285714">
[A1]. For s from 1 to EntrySegmentNumber
If(Segment-s = Sense-Segment)
[A2]. For i from 0 to MarkerNumber
Phase_1 Sense-i Marker Recognition;
Phase_2 Sense-i Definition Parsing;
[A3]. If(Success)
Phase_3 Attach Parsed Sense-i
Defi nition to Node-i;
Phase_4 Add Node-i to Entry
Sense Tree;
[/A3]. Else Fail and Stop.
[/A2]. EndFor
Output: EntrySenseTree with
Parsed Sense Definitions
(only if all sense definitions are parsed).
Else Segment-s Parsing;
Continue
[/A1]. EndFor
Output: Entry parsed segments, including the
Sense-Segment (only if all definitions in the
Sense-Segment are parsed).
</figure>
<figureCaption confidence="0.995558">
Fig. 1. Standard dictionary entry parsing
</figureCaption>
<bodyText confidence="0.998882222222222">
The main drawback of the classical, standard
DEP, is the embedding of the parsing cycles,
[A1] [A2] [A3] ... [/A3] [/A2] [/A1], derived
from the intuitive, but highly inefficient parsing
strategy based on the general Depth-First search-
ing. After presenting the SCD-based dictionary
parsing method, section 3.2. compares the pars-
ing cycles and phases of standard DEP to the
ones of SCD-based DEP.
</bodyText>
<sectionHeader confidence="0.676555" genericHeader="method">
3 Parsing with SCD Configurations
</sectionHeader>
<bodyText confidence="0.996900294117647">
The SCD configuration(s) method is a
procedural, recognition-generation computa-
tional device, that is distinct from the traditional
and cumbersome formal grammars, being able to
successfully replace them for several tasks of
natural language parsing, including text free
parsing (Curteanu, 2006) and thesauri parsing
(Curteanu et al., 2008). For SCD-based parsing,
the semantics and the linguistic modeling of the
text to be analyzed should be clearly specified at
each parsing level, and implemented within the
following components of each SCD
configuration (hereafter, SCD-config):
 A set of marker classes: a marker is a
boundary for a specific linguistic category
(e.g. A., I., 1., a)., etc.). Markers are
joined into marker classes, with respect to
</bodyText>
<page confidence="0.911716">
39
</page>
<bodyText confidence="0.940959">
their functional similarity (e.g. {A., B., C.,
...}, {1., 2., 3., ...}, {a)., b)., ...});
</bodyText>
<listItem confidence="0.99996175">
• A hypergraph-like hierarchy that estab-
lishes the dependencies among the marker
classes;
• A searching (parsing) algorithm.
</listItem>
<bodyText confidence="0.998662909090909">
Once an SCD configuration is defined, parsing
with the SCD configuration implies identifying
the markers in the text to be parsed, constructing
the sequences of markers and categories, recog-
nizing the marked text structures (spans within
the bounding markers) corresponding to the SCD
configuration semantics, and classifying them
according to the marker sequences within the
pre-established hierarchy assigned to that SCD
configuration. The last step settles the dependen-
cies and correlations among the parsed textual
structures. Identifying the lexicographic seg-
ments of an entry, the syntactic and semantic
structure of each segment, the senses, definitions
and their corresponding markers, is the result of
an in-depth lexical semantics analysis. Designing
the classes and the hypergraph structure of their
dependencies are essential cognitive aspects of
working with SCD configurations, and need to
be pre-established for each dictionary.
Within the parsing process, each SCD confi-
guration, i.e. marker classes, hierarchy, and
searching algorithm, is completely commanded
by its attached semantics. The semantically-
driven parsing process, either for free or specia-
lized texts, consists in a number of SCD configu-
rations applied sequentially (in cascade), each
one on a different semantic level. The semantic
levels (each one driving an SCD configuration)
are subsuming each other in a top-down, mono-
tonic manner, starting with the most general se-
mantics of the largest text span, until the most
specific level.
</bodyText>
<subsectionHeader confidence="0.997079">
3.1 SCD Configurations for DEP
</subsectionHeader>
<bodyText confidence="0.999974166666667">
The SCD-based process for DEP consists in three
SCD configurations, applied sequentially on the
levels and sublevels of the dictionary entry,
where each level should be monotonic at the lex-
ical-semantics subsumption relation.
The task of applying the SCD configurations
to DEP requires knowing the semantics of the
corresponding classes of sense and definition
markers, together with their hierarchical repre-
sentation.
The first SCD configuration (SCD-config1) is
devoted to the task of obtaining the partition of
the entry lexicographic segments (Hauser &amp;
Storrer, 1993). Since usually there are no depen-
dency relations between lexicographic segments,
SCD-config1 is not planned to establish the de-
pendency relations (cycle [A1] in Fig. 1, or cycle
[B1] in Fig. 2).
The second important task of DEP is to parse
each lexicographic segment according to its spe-
cific semantics and linguistic structure. The most
prominent lexicographic segment of each entry is
the sense-description one, the central operation
being the process of extracting the sense tree
from the segment. This is the purpose of the
second SCD configuration (denoted
SCD-config2), corresponding exactly to the
DSSD parsing algorithm in (Curteanu et al.,
2008), which, for the DLR sense trees, has a pre-
cision of 91.18%. In order to refine the lexical-
semantics of primary senses, one has to descend,
under secondary senses, into the definitions and
definition examples, which constitute the text
spans situated between two sequentially-related
nodes of the parsed sense tree. This SCD confi-
guration is represented as cycle [B2] in Fig. 2.
The third step of DEP parsing (cycle [B3] in
Fig. 2) is represented by the configuration
SCD-config3, needed to complete the DEP.
SCD-config3 consists in a specific set of marker
classes for the segmentation at dictionary defini-
tions, the hypergraph-like hierarchy of the
classes of markers for these sense definitions,
and the parsing algorithm to establish the depen-
dencies among atomic senses / definitions. As a
prerequisite groundwork, an adequate modeling
of the sense definitions is needed and the seg-
mentation of definitions is implemented as an
essential step to establish the dependency-by-
subsumption among the sense types of the consi-
dered thesaurus. The final result of the entry
parsing process should be the sequential applica-
tion of the SCD-config1, SCD-config2, and
SCD-config3 configurations.
</bodyText>
<subsectionHeader confidence="0.998542">
3.2 A Structural Analysis: Standard DEP vs.
SCD Configurations
</subsectionHeader>
<bodyText confidence="0.9999825">
A pilot experiment of parsing with SCD configu-
rations was its application to the DLR thesaurus
parsing (Curteanu et al., 2008); the process of
sense tree building has been completely detached
</bodyText>
<page confidence="0.606323">
40
</page>
<bodyText confidence="0.9998194">
and extracted from the process of sense definition
parsing.
The sense-tree parsing with SCD-based DEP
cycles and phases is summarized in pseudo-code
in Fig. 2 and comparative Table 1 below.
</bodyText>
<figure confidence="0.969547545454546">
[B1]. For s from 1 to EntrySegmentNumber
Segment-s Parsing;
If(Segment-s = Sense-Segment)
Standby on Sense-Segment Parsing;
Else Continue
[/B1]. EndFor
Output: Entry parsed segments, not including the
Sense-Segment;
[B2]. For i from 0 to MarkerNumber
Phase_1 Sense-i Marker Recognition;
Assign (Unparsed) Sense-i Definition to
Node-i;
Phase_4 Add Node-i to EntrySenseTree;
Standby on Sense-i Definition Parsing;
[/B2]. EndFor
Output: EntrySenseTree (with unparsed sense
definitions).
Node-k = Root(EntrySenseTree);
[B3]. While not all nodes in EntrySenseTree are
visited
Phase_2 Sense-k Definition Parsing;
If(Success)
Phase_3 Attach Parsed Sense-k Definition to
Node-k;
Else Attach Sense-k Parsing Result to Node-k;
Node-k = getNextDepth
FirstNode(EntrySenseTree)
Continue
[/B3]. EndWhile.
Output: EntrySenseTree (with parsed or unparsed
definitions).
Output: Entry parsed segments, including the
Sense-Segment.
</figure>
<figureCaption confidence="0.995654">
Fig. 2. SCD-based dictionary entry parsing
</figureCaption>
<table confidence="0.999502666666667">
Standard DEP SCD-based DEP
(Phase_1; (Phase_1;
Phase_2 Phase_4)
(Phase_3; (Phase_2;
Phase_4) Phase_3)
)
</table>
<tableCaption confidence="0.980639">
Table 1: Dictionary parsing phases in
standard DEP and SCD-based DEP
</tableCaption>
<bodyText confidence="0.9974426">
Table 1 presents the ordering of the dictionary
parsing phases in the standard DEP strategy (the
four phases are embedded) and the SCD-based
DEP strategy (the phases are organized in a li-
nearly sequential order).
Since the process of sense tree construction
(cycle Phase_1 + Phase_4) has been made com-
pletely detachable from the parsing of the (atom-
ic) sense definitions (cycle Phase_2 + Phase_3),
the whole SCD-based DEP process is much more
efficient and robust. An efficiency feature of the
SCD-based parsing technique is that, working
exclusively on sense marker sequences, outputs
of [B2] and [B3] cycles in Fig. 2 (i.e. sense trees)
are obtained either the sense definition parsing
process succeeds or not, either correct or not!
These properties of the new parsing method
with SCD configurations have been effectively
supported by the parsing experiments on large
Romanian, French, and German dictionaries.
</bodyText>
<sectionHeader confidence="0.996239" genericHeader="method">
4 Romanian DLR Parsing
</sectionHeader>
<bodyText confidence="0.997415">
The study of the application of SCD-
configuration to DEP started with the analysis of
the DLR parsing (Curteanu et al., 2008). Fig. 3
presents the hierarchy of SCD-config2 for DLR
sense marker classes,
</bodyText>
<figureCaption confidence="0.915658">
Fig. 3. Hierarchy of DLR marker classes
</figureCaption>
<bodyText confidence="0.999798222222222">
devoted to sense tree parsing. The dashed ar-
rows point to the upper or lower levels of DLR
sense marker hierarchy, from the literal enume-
ration layer-embedded level. The continuous-
dashed arrows in Fig. 3 point downwards from
the higher to the lower priority levels of DLR
marker class hypergraph. Because of its special
representation characteristics, the literal enume-
ration is illustrated on a layer attached to the hie-
</bodyText>
<equation confidence="0.869116875">
a), b), c), ...
1., 2., 3.,
DLR Entry
I., II., III., ...
BoldDefMark,
ItalDefMark
A., B., C., ...
a), b), c), ...
a), b), c), ...
a), b), c), ...
a), b), c), ...
♦
◊
a), b), c), ...
a), b), c), ...
41
</equation>
<bodyText confidence="0.999181">
rarchy level (dashed line) to which it belongs, on
each of the sense levels.
A detailed description of the DLR sense tree
extraction with SCD-config2 (denoted as DSSD
algorithm) is found in (Curteanu et al., 2008).
</bodyText>
<subsectionHeader confidence="0.957578">
4.1 DLR Parsing: Problems and Results
</subsectionHeader>
<bodyText confidence="0.999164857142857">
The three SCD-configurations establish the de-
pendencies among DLR senses (SCD-config1-2)
and definitions (SCD-config3). However, DLR is
encoded by default inheritance rules of senses
(definitions), acting on all the node levels of the
sense / definition trees.
The sense tree parser (output of SCD-config2)
was tested on more than 500 dictionary entries of
large and medium sizes. The success rate was
91.18%, being computed as a perfect match be-
tween the output of the program and the gold
standard. Furthermore, it is worth noting that an
entry with only one incorrect parse (i.e. one node
in the sense tree attached incorrectly) was consi-
dered to be erroneously parsed in its entirety, an
approach which disregards all the other correctly
attached nodes in that entry.
A first source of parsing errors is the non-
monotony of the marker values: “A. [B. missing]
... C. ...“; “2. [instead of 1.]... 2. ...”; “...a)... b)
... c) ... b) [instead of d)] ...”. Another major
source of parsing errors comes from the inherent
ambiguity in deciding which is the regent and
which is the dependent (sub)sense in marker se-
quences as “1. a) b) c) 0 [0]...”.
For evaluating SCD-config3, 52 dictionary en-
tries of various sizes were used as a gold stan-
dard, totaling a number of approximately 2000
chunks and 22,000 words. The results are given
in Table 2. Upon further analysis of the evalua-
tion results, the most frequent errors were found
to be due to faulty sigle (abbreviation of the
source of examples) segmentation. A detailed
analysis of the error types for the DLR dictionary
is discussed in (Curteanu et al., 2009).
</bodyText>
<table confidence="0.99985425">
Evaluation Precision Recall F-
Type measure
Exact Match 84.32% 72.09% 77.73%
Overlap 92.18% 91.97% 92.07%
</table>
<tableCaption confidence="0.9754805">
Table 2: Evaluation results for segmentation of
DLR atomic sense elements
</tableCaption>
<bodyText confidence="0.999876466666667">
Correcting the acquisition of sigles leads to a
94.43% f-measure for exact match (the number
of correctly identified sense and definition units)
and a 98.01% f-measure for overlap (the number
of correctly classified words in each entry). To
achieve the DLR parsing process completely, the
last operation to be executed is to establish the
dependency relations between atomic senses /
definitions, under all the sense nodes in the com-
puted sense-tree of the entry. Currently, the DLR
is parsed almost completely, including at atomic
senses / definitions, the lexicographic segments
and sense-trees being obtained with a correctness
rate above 90% for explicitly marked sense defi-
nitions.
</bodyText>
<sectionHeader confidence="0.998321" genericHeader="method">
5 Romanian DAR Parsing
</sectionHeader>
<bodyText confidence="0.999654741935484">
The structure of the main lexicographical seg-
ments in DAR is outlined below:
I. The French Translation segment, denoted
FreSeg, contains the French translations of the
lemma and the main sense hierarchy of the entry
word. The translation of the sense structure into
Romanian and the complete description of the
sense tree in DAR are in a subsumption relation.
In some cases, the French translation may not
exist for specific Romanian lemmas.
II. The general description segment (RomSeg)
is composed of several paragraphs and contains
morphologic, syntactic, semantic, or usage in-
formation on the entry word. RomSeg usually
starts with the entry word in italics (otherwise,
the entry word occurs in the first row of the first
paragraph).
III. The third segment of a DAR entry, called
SenseSeg, is the lexical-semantic description of
the entry word. SenseSeg is the main objective of
the lexicographic analysis of the entry parsing in
order to obtain its sense tree.
IV. The fourth segment of a DAR, NestSeg,
contains one or more “nests”, which are seg-
ments of text describing morphological, syntac-
tic, phonological, regional, etc. variants of an
entry, sometimes with an attached description of
the specific senses. The structure of the DAR
nest segment is similar to that of a typical DAR
entry, and the recursive nature of DAR entries
comes from the sense parsing of nest segments.
</bodyText>
<page confidence="0.870802">
42
</page>
<bodyText confidence="0.999761">
V. The fifth segment of DAR entries, denoted
EtymSeg, contains etymological descriptions of
the entry word and is introduced by an etymolo-
gy-dash (long dash “–”). Among the five seg-
ments of a DAR entry, the only compulsory ones
are FreSeg and SenseSeg. The other three seg-
ments are optional in the entry description, de-
pending on each entry word.
</bodyText>
<subsectionHeader confidence="0.988364">
5.1 DAR Marker Classes and Hierarchy
</subsectionHeader>
<bodyText confidence="0.998724">
The priority ordering of DAR marker classes is:
</bodyText>
<listItem confidence="0.997067444444445">
1. Capital letters (LatCapLett_Enum): A., B., ...
2. Capital roman numerals (LatCap-
Numb_Enum): I., II., ...
3. Arabic numerals (ArabNumb_Enum): 10., 20.
These markers introduce the primary senses, in a
similar manner to those in DLR.
4. For introducing secondary senses, DAR uses
the same sense markers used in DLR for defini-
tions of type MorfDef, RegDef, BoldDef, ItalDef,
SpecDef, SpSpecDef, and DefExem, and a set of
markers specific to DAR: ||, |, #, †.
5. According to the level of the lexical-semantic
description, DAR uses literal enumeration on
two levels: (5.a) lowercase Latin letters (LatS-
mallLett_Enum): a.), b.), ... (5.b) a LatSmal
lLett_Enum can have another enumeration, using
lowercase Greek letters (GreSmallLett_Enum):
α.), β.), Y.), ...
</listItem>
<bodyText confidence="0.999823">
The hierarchies for sense markers in DAR are
given in Fig. 4.
</bodyText>
<subsectionHeader confidence="0.999259">
5.2 Special problems in DAR parsing
</subsectionHeader>
<bodyText confidence="0.993570333333333">
A first difficulty for parsing the DAR lexico-
graphic segments is the occurrence of the
New_Paragraph (NewPrg). For NewPrg marker
</bodyText>
<figureCaption confidence="0.934022">
Fig. 4: Dependency hypergraph for DAR
</figureCaption>
<bodyText confidence="0.999952">
recognition we used an implicit level of enumera-
tion, LatSmaNum_Enum discriminating the cases
when NewPrg is (or not) accompanied by anoth-
er type of DAR sense marker.
The second difficult problem in DAR parsing
is the process of refining the NewPrg marker
with literal enumerations (LatSmallLett_Enum),
which can be in turn refined by an implicit enu-
meration using NewPrg. This has been solved by
interpreting the sense levels for enumerations
according to their context.
Using SCD configurations, we have parsed 37
DAR entries of large and medium sizes. The re-
sults of the DAR parsing have been evaluated
manually, and we estimated the parsing precision
as really promising, taking into account the diffi-
cult problems raised by DAR. The lack of a gold
standard for DAR entries did not allow perform-
ing an automatic evaluation at this moment.
</bodyText>
<figure confidence="0.941871303797468">
DAR Entry Parsing (Excerpt):
- &lt;entry&gt;
- &lt;lexsegm value=&amp;quot;FreSeg.&amp;quot; class=&amp;quot;0&amp;quot;&gt;
- &lt;sense value=&amp;quot;LARG, -Ă&amp;quot; class=&amp;quot;1&amp;quot;&gt;
&lt;definition&gt;adj., s. a. şi f. I. 1°. {i}Large, vaste.{/i} 2°. (Fig.)
{i}Large, ample, majestueux. Largement. {/i}3°. {i}Au large, à
...{i}Femme légère, dessalée{/i}.&lt;/definition&gt;
- &lt;/sense &gt;
- &lt;/lexsegm &gt;
NewPrg + LatSmaNumb_Enum NewPrg + LatSmaLett_Enum
LatSmaLett_Enum
GreSmaLett_Enum
NewPrg + LatSmaNumb_Enum
Non-NewPrg * SmaLett_Enum
Labeled hypernode
Labeled hypernode
SmaLett_Enum
NewPrg + Lett_Numb_Enum
NewPrg + Lett_Numb_Enum
NewPrg + Lett_Numb_Enum
NewPrg + Lett_Numb_Enum
NewPrg + Lett_Numb_Enum
||, |, #, † + DAR markers
ArabNumb_Enum
LatCapLett_Enum
SpecDefMark
Sp SpecDefMark
MorfDefMark
RegDefMark
BoldDefMark
ItalDefMark
ExemDefMark
DAR Entry
43
- &lt;segm value=&amp;quot;SenseSeg.&amp;quot; class=&amp;quot;0&amp;quot;&gt;
- &lt;sense value=&amp;quot;I.&amp;quot; class=&amp;quot;8&amp;quot;&gt;
- &lt;definition&gt; A d j. şi a d v. &lt;/definition&gt;
- &lt;sense value=&amp;quot;1°.&amp;quot; class=&amp;quot;12&amp;quot;&gt;
- &lt;definition&gt;
A d j. (În opoziţie cu î n g u s t) Extins în toate direcţiile;
...{i}Larg {/i}{i}= {/i}largus.
&lt;SRCCITE source=&amp;quot;ANON. CAR.&amp;quot;&gt;ANON.
CAR.&lt;/SRCCITE&gt; {i}Calea ceaia largă.{/i}
&lt;AUTHCITE source=&amp;quot;EV.&amp;quot; author=&amp;quot;CORESI&amp;quot; sigla=&amp;quot;CORESI,
EV.&amp;quot; ...
&lt;/definition&gt;
&lt;/sense&gt;
- &lt;sense value=&amp;quot;2°.&amp;quot; class=&amp;quot;12&amp;quot;&gt;
- &lt;definition&gt; F i g. (Literar, după fr.) Mare, amplu, ...
&lt;AUTHCITE source=&amp;quot;C. I.&amp;quot; volume=&amp;quot;II&amp;quot; ...&lt;/AUTHCITE&gt; ...
&lt;/definition&gt;
- &lt;sense value=&amp;quot;||&amp;quot; class=&amp;quot;20&amp;quot;&gt;
&lt;definition&gt;Adv. {i}Musafirul... se urca ...&lt;/definition&gt;
&lt;/sense&gt;
&lt;/sense&gt;
- &lt;sense value=&amp;quot;3°.&amp;quot; class=&amp;quot;12&amp;quot;&gt;
- &lt;definition&gt; (În funcţiune predicativă,...)
... ... ...
&lt;/definition&gt;
&lt;/sense&gt;
&lt;/sense&gt;
- &lt;sense value=&amp;quot;II.&amp;quot; class=&amp;quot;8&amp;quot;&gt;
- &lt;definition&gt; S u b s t. &lt;/definition&gt;
- &lt;sense value=&amp;quot;1°. &amp;quot; class=&amp;quot;12&amp;quot;&gt;
- &lt;definition&gt; S. a. Lărgime. {b}Inimii închise... &lt;/definition&gt;
&lt;/sense&gt;
... ... ...
- &lt;sense value=&amp;quot;2°.&amp;quot; class=&amp;quot;12&amp;quot;&gt;
- &lt;sense value=&amp;quot; NewPrg &amp;quot; class=&amp;quot;13&amp;quot;&gt;
&lt;definition&gt;{i}LĂRGÍME{/i} s f. v. {b}larg{/b}.&lt;/definition&gt;
&lt;/sense&gt;
- &lt;sense value=&amp;quot;NewPrg&amp;quot; class=&amp;quot;13&amp;quot;&gt;
&lt;definition&gt;{i}LĂRGĂMÃNT{/i} † S. A. V.
{i}larg{/i}.&lt;/definition&gt;
... ... ...
&lt;/sense&gt;
&lt;/sense&gt;
&lt;/lexsegm&gt;
&lt;/entry&gt;
</figure>
<sectionHeader confidence="0.642089" genericHeader="method">
6 French TLF Parsing
</sectionHeader>
<bodyText confidence="0.9996926">
The French TLF, a very well-organized and
structured thesaurus, provides both similarities
and distinctive characteristics in comparison to
the Romanian DLR. The structure of TLF lex-
icographic segments, obtained with the
SCD-config1, is relatively simple. A TLF entry
commences with the sense-description segment,
optionally (but very frequently) followed by a
package of “final” segments, introduced by spe-
cific labels, as in the pattern:
</bodyText>
<equation confidence="0.440691166666667">
REM. 1.  2.  3. 
PRONONC. ET ORTH. –  Eng.: 
ÉTYMOL. ET HIST. I. ... 1. a)  b)  2. 
3.  II. 
STAT. Fréq. abs. littér.:  Fréq. rel.
littér.: 
</equation>
<bodyText confidence="0.955315375">
DÉR. 1. 2. 3. a)  b)  Rem. a)  b) 
BBG. ...
As one may notice, some final segments can
enclose particular sense descriptions, similarly to
those met in the proper sense-description seg-
ment. The sense markers in TLF resemble to
those in DLR, but there are also significant dif-
ferences. The dependency hypergraph of the
TLF marker classes is the following:
Cross-linguistic hints involving TLF entry
parsing with SCD configurations: (a) A new
sense marker (compared to DLR) is “–“ (inherit-
ance- dash), aiming to signal the presence of an
inherited sense. (b) When “–“ occurs after anoth-
er TLF marker, the “–“ role is to inherit a parent
sense (either regent or not) from the sense-tree.
</bodyText>
<listItem confidence="0.991087153846154">
(c) When “–“ begins at new paragraph (NewPrg),
its role is of a intermediary subsense, inheriting
the meaning of the regent (sub)sense.
(d) Another new TLF marker is “1., 2., ”
(indexed, small red-ball), defining the new TLF
sense concept: Indexed Examples to Definitions
for the whole entry (denoted IdxDefExem).
(e) The literal enumeration with Latin small let-
ters (LatSmaLett_Enum) is refined with Greek
small letters (GreSmaLett_Enum). (f) In TLF,
only the filled diamond “♦” marker is present (as
secondary sense); the empty diamond “◊” is
missing. (g) Some primary senses (“I.”, “A.”) in
</listItem>
<table confidence="0.772625105263158">
−
Optional hypernode
Fig. 5. Dependency hypergraph of TLF
sense marker classes
Optional hypernode
Optional hypernode
Optional hypernode
Optional hypernode
Optional hypernode
Optional hypernode
Entry – Root
I., II., III., ...
A., B., C., ...
a), b), c), ...
1., 2., 3., ...
α, P, Y, ...
Optional hypernode
• 1., •2.,•3., ...
♦
</table>
<page confidence="0.847143">
44
</page>
<bodyText confidence="0.9632905">
TLF receive reversed priorities (Fig. 5) in the
marker class hierarchy as compared to DLR.
</bodyText>
<subsectionHeader confidence="0.996241">
6.1 TLF Parsing Results
</subsectionHeader>
<bodyText confidence="0.99886825">
For TLF, we processed 31 significant entries
(TLFi, 2010) of medium and large dimensions
(entries of 5 pages each, A4 format, in average)
with the parser based on SCD configurations.
The parsing results have been evaluated manual-
ly, the correctness rate being above 90%. One of
the reasons of these very promising results for
TLF parsing may be the regularity and standar-
dization of the TLF entry texts. An automatic,
precise evaluation of the SCD-based parser was
not possible since we are missing currently a
gold-corpus of TLF entries.
</bodyText>
<table confidence="0.905292666666667">
TLF Entry Parsing (Excerpt):
- &lt;entry&gt;
- &lt;lexsegm value=&amp;quot; SenseSeg.&amp;quot; class=&amp;quot;0&amp;quot;&gt;
- &lt;sense value=&amp;quot;ANNONCER&amp;quot; class=&amp;quot;1&amp;quot;&gt;
+ &lt;definition&gt; - &lt;sense value=&amp;quot;I.&amp;quot; class=&amp;quot;2&amp;quot;&gt;
- &lt;definition&gt; &lt;i&gt;Emploi trans.&lt;/i&gt; ... ...
&lt;/definition&gt;
- &lt;sense value=&amp;quot;A.&amp;quot; class=&amp;quot;3&amp;quot;&gt;
&lt;definition&gt;[Le suj. désigne une pers.]&lt;/definition&gt;
- &lt;sense value=&amp;quot;1.&amp;quot; class=&amp;quot;4&amp;quot;&gt;
- &lt;definition&gt;
[L&apos;obj. d6signe un 6v6nement] Faire connaître ...
&lt;/definition&gt;
- &lt;sense value=&amp;quot;a)&amp;quot; class=&amp;quot;5&amp;quot;&gt;
- &lt;definition&gt;
</table>
<figure confidence="0.973694869565217">
[L&apos;6v6nement concerne la vie quotidienne] ...
&lt;i&gt;Annoncer qqc. à qqn, annoncer une bonne&lt;/i&gt; ... ...
&lt;/definition&gt;
- &lt;sense value=&amp;quot;circle&amp;quot; class=&amp;quot;10&amp;quot;&gt;
- &lt;definition&gt;
1. À la mi-novembre, Costals ...
&lt;b&gt;annonça&lt;/b&gt; son retour pour le 25. Dans la lettre ...
&lt;/definition&gt;
&lt;/sense&gt;
- &lt;sense value=&amp;quot;circle&amp;quot; class=&amp;quot;10&amp;quot;&gt;
- &lt;definition&gt;
2. Électre, fille d&apos;un père puissant, r6duite...
&lt;b&gt;annonce&lt;/b&gt; ... ... ...
&lt;/definition&gt;
&lt;/sense&gt;
&lt;/sense&gt;
- &lt;sense value=&amp;quot;b)&amp;quot; class=&amp;quot;5&amp;quot;&gt;
- &lt;definition&gt;
&lt;i&gt;JEUX (de cartes). Faire une annonce.&lt;/i&gt; ...
&lt;/definition&gt;
- &lt;sense value=&amp;quot;circle&amp;quot; class=&amp;quot;10&amp;quot;&gt;
- &lt;definition&gt;
3. Celui qui la d6tient la belote ...
&lt;b&gt;annonce&lt;/b&gt; alors : &lt;i&gt;belote,&lt;/i&gt;
... ...
&lt;/definition&gt;
&lt;/sense&gt;
&lt;/sense&gt;
... ... ...
&lt;/lexsegm&gt;
- &lt;lexsegm value=&amp;quot;FinSeg.&amp;quot; class=&amp;quot;0&amp;quot;&gt;
- &lt;sense value=&amp;quot;-&amp;quot; class=&amp;quot;5&amp;quot;&gt;
- &lt;definition&gt; &lt;b&gt;ÉTYMOL. ET HIST.&lt;/b&gt; ... ...
&lt;i&gt;Ca&lt;/i&gt; 1080 &lt;i&gt;anuncier&lt;/i&gt;
... ... ...
&lt;/definition&gt;
&lt;/sense&gt;
.... ... ...
- &lt;definition&gt;
&lt;b&gt;BBG.&lt;/b&gt; ALLMEN 1956. BRUANT 1901. ...
&lt;b&gt;ARRIVÉE, subst. fém.&lt;/b&gt;
&lt;/definition&gt;
... ... ...
&lt;/sense&gt;
&lt;/lexsegm&gt;
&lt;/entry&gt;
</figure>
<sectionHeader confidence="0.666568" genericHeader="method">
7 Lexicographic Segments and Sense
Markers in German DWB and GWB
</sectionHeader>
<bodyText confidence="0.901535851851852">
The German DWB entries comprise a complex
structure of the lexicographic segments, which
provide a non-uniform and non-unitary composi-
tion (Das Woerterbuch-Netz, 2010). One special
feature is that DWB and GWB lexicographic
segments are composed of two parts: a first (op-
tional) root-sense subsegment, and the segment
body, which contain the explicit sense markers,
easily recognizable. For DWB, the parsing of
lexicographic segments is not at all a comfortable
task since they are defined by three distinct
means:
(A) After the root-sense of a DWB entry, or
after the root-sense of a lexicographic segment,
(a list of) italicized-and-spaced key-words are
placed to constitute the label of the lexicographic
segment that follows. Samples of such key-word
labels for DWB lexicographic segments are:
“Form, Ausbildung und Ursprung”, “Formen”,
“Ableitungen”,
“Verwandtschaft”,“Verwandtschaft und Form”,
“Formelles und Etymologisches”, “Gebrauch”,
“Herkunft”, “Grammatisches”, etc., or, for DWB
sense-description segment: “Bedeutung und
Gebrauch” (or just “Bedeutung”). In the example
below, they are marked in grey.
GRUND, m., dialektisch auch f. gemeingerm.
</bodyText>
<construct confidence="0.61848925">
wort; fraglich ist ... poln. russ. slov. nlaus. grunt m.
f o r m u n d h e r k u n f t .
1) für das verständnis der vorgeschichte des
wortes ist die z w i e g e s c h l e c h t i g k e i t ...
H. V. SACHSENHEIM spiegel 177, 30;
städtechron. 3, 51, 14. ... ... ... drey starcke grund
6, 290. b e d e u t u n g . die bedeutungsgeschichte
des wortes ... ...
</construct>
<figure confidence="0.746940333333333">
I. grund bezeichnet die feste untere begrenzung eines
dinges.
A. grund von gewässern; seit ältester zeit belegbar:
profundum (sc. mare) crunt ahd. gl. 1, 232, 18;
45
1) am häufigsten vom meer (in übereinstimmung mit
</figure>
<figureCaption confidence="0.27512">
dem anord. gebrauch): ...
</figureCaption>
<bodyText confidence="0.998152">
(B) The second way to specify the DWB cur-
rent lexicographic segments is to use their labels
as key-words immediately after the primary
sense markers.
(C) The third (and most frequent) way to iden-
tify the lexical description segment(s) of a DWB
entry is simply the lack of a segment label at the
beginning of the sense description segment. By
default, after the entry root-sense segment (which
can be reduced to the Latin translation of the
German lemma) the sense-description segment
comes, without any “Bedeutung” label, introduc-
ing explicit sense markers and definitions.
</bodyText>
<subsectionHeader confidence="0.9931695">
7.1 German DWB and GWB Dependency
Hypergraphs. Parsing Results
</subsectionHeader>
<bodyText confidence="0.999544">
Without coming into details (see the marker class
dependency hypergraphs in Fig.6 and Fig.7), one
can say with a good measure of truth that a gen-
eral resemblance hold between DAR
</bodyText>
<note confidence="0.519384">
αα, ββ, γγ, ...
</note>
<figureCaption confidence="0.888135">
Fig. 6. DWB dependency hypergraph
</figureCaption>
<bodyText confidence="0.857091">
and DWB, and TLF and GWB, respectively.
The sense markers in DWB are usual, with the
remark that sense refinement by literal enumera-
tion is realized on three levels:
LatSmaLett_Enum ( a), b), ...), GreSma-
Lett_Enum ( ), ), ...), and GreDoubleSma-
Lett_Enum ( ), ), ...).
</bodyText>
<figureCaption confidence="0.950345">
Fig. 7. GWB dependency hypergraph
</figureCaption>
<bodyText confidence="0.9579626">
I , II , III , ...
A , B , C , ...
1 , 2 , 3 , ...
a , b , c , ...
A number of 17 very large DWB entries have
been parsed only with SCD-config1 and SCD-
config2. We appreciate on this small but signifi-
cant excerpt of DWB entries that parsing of the
sense description segment at sense trees is per-
formed with a high precision, but delimitation of
the lexicographic (sub-)segments and labels is a
more difficult problem. The lack of a DWB entry
gold corpus did not allow a precise, automated
evaluation of the parser.
α , β , γ , ...
</bodyText>
<sectionHeader confidence="0.9939225" genericHeader="method">
8 Directions: Optimal Lexicon Design,
Standardization, Lexicon Networks
</sectionHeader>
<bodyText confidence="0.999775421052632">
The special features of parsing with SCD confi-
gurations (SCD-configs) are:  SCD-configs is a
completely formal grammar-free approach which
involves simple, efficient (weeks-time adapta-
ble), thus portable modeling and programs.  In
all currently existing DEP methods, the sense
tree construction of each entry is, more or less,
recursively embedded and mixed within the defi-
nition parsing procedures.  SCD-configs pro-
vides a lexical-semantics refinement level on
each SCD-config.  SCD-configs separate and
run sequentially, on independent levels (viz. con-
figurations), the processes of lexicographic seg-
ment recognition, sense tree extraction, and
atomic definition parsing.  This makes the
whole DEP process with SCD-configs to be op-
timal.  The sense marker classes and their de-
pendency hypergraphs, specific to each thesau-
rus, offer an unique instrument of lexicon con-
</bodyText>
<equation confidence="0.8934008">
Entry – Root
I., II., III., ...
A., B., C., ...
1., 2., 3., ...
a), b), c), ...
α, β, γ, ...
Definitions
DefExems
−
Entry – Root
</equation>
<page confidence="0.692997">
46
</page>
<bodyText confidence="0.999956133333333">
struction comparison, sense concept design and
standardization. With the SCD parsing technique,
one can easily compare the sense categories,
their marking devices, the complexity and recur-
siveness measure of the sense dependency
hypergraphs for each thesaurus.
The cross-linguistic analysis of the five large
thesauri showed the necessity of a careful lexi-
cal-semantics modeling of each dictionary.
Equally important, many semantic and lexico-
graphic concepts such as sense markers and defi-
nitions, (indexed) examples to definitions, sense
and source references etc. can be similar, adapta-
ble, and transferable between corresponding
SCD-configurations of different thesauri.
The SCD-configs analysis pointed out the
need of a more general and adequate terminology
for the lexical-semantics notions. E.g., compar-
ing the Romanian and French thesauri with the
German ones, we decided that, while preserving
the definition type labels MorfDef, DefExem,
SpecDef and SpSpecDef, we should change the
RegDef into GlossDef, BoldDef into IdiomDef,
ItalDef into CollocDef, and add the TLF IdxDe-
fExem (an indexed DefExem) to the sense con-
cept set.
The future experiments will continue with new
thesauri parsing: Russian, Spanish, Italian, but
the true challenge shall be oriented towards Chi-
nese / Japanese thesauri, aiming to establish a
thorough lexical-semantics comparison and a
language-independent, portable DEP technology
based on SCD configurations. A further devel-
opment would be to align the Romanian thesauri
sense and definition types to TEI P5 standards
(XCES, 2007), and to design an optimal and
cross-linguistic compatible network of Romanian
electronic dictionaries, similar to a very good
project of dictionary network, i.e. the German
Woerterbuch-Netz (with links to TLFi entries
too), whose twelve component lexicons include
DWB and GWB.
Acknowledgement. The present research was
partly financed within the eDTLR grant, PNCDI
II Project No. 91_013/18.09.2007.
</bodyText>
<sectionHeader confidence="0.998457" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99929258">
DLR revision committee. (1952). Coding rules for
DLR (in Romanian). Romanian Academy, Institute
of Philology, Bucharest.
Cristea, D., Răschip, M., Forăscu, C., Haja, G., Flo-
rescu, C., Aldea, B., Dănilă, E. (2007). The Digital
Form of the Thesaurus Dictionary of the Romanian
Language. In Proc. of the 4th SpeD 2007.
Curteanu, N., and E. Amihăesei. (2004). Grammar-
based Java Parsers for DEX and DTLR Romanian
Dictionaries. ECIT-2004, Iasi, Romania.
Curteanu, N. (2006). Local and Global Parsing with
Functional (F)X-bar Theory and SCD Linguistic
Strategy. (I.+II.), Computer Science Journal of
Moldova, Academy of Science of Moldova, Vol.
14 no. 1 (40):74-102; no. 2 (41):155-182.
Curteanu, N., D. Trandabăţ, A. M. Moruz. (2008).
Extracting Sense Trees from the Romanian The-
saurus by Sense Segmentation &amp; Dependency
Parsing, Proceedings of CogAlex Workshop,
COLING 2008, ISBN 978-1-905593-56-9, :55-63.
Curteanu, N., Moruz, A., Trandabăţ, D., Bolea, C.,
Spătaru, M., Husarciuc, M. (2009). Sense tree
parsing and definition segmentation in eDTLR
Thesaurus, in Trandabăţ et al. (Eds.), Proc. of the
Workshop &amp;quot;Linguistic Resources and Instruments
for Romanian Language Processing&amp;quot;, Iasi, Roma-
nia, &amp;quot;Al.I.Cuza&amp;quot; University Publishing House,
ISSN 1843-911X, pp. 65-74, (in Romanian).
Das Woerterbuch-Netz (2010): http://germazope.uni-
trier.de/Projects/WBB/woerterbuecher/
Hauser, R., and A. Storrer. (1993). Dictionary Entry
Parsing Using the LexParse System.
Lexikographica (9): 174-219.
Kammerer, M. (2000). Wöterbuchparsing
Grundsiitzliche Oberlegungen und ein Kurzbericht
fiber praktische Erfahrungen, http://www.matthias-
kammerer.de/content/WBParsing.pdf
Le Trésor de la Langue Française informatisé (2010).
http://atilf.atilf.fr/tlf.htm
Lemnitzer, L., and C. Kunze. (2005). Dictionary En-
try Parsing, ESSLLI 2005.
Neff, M., and B. Boguraev. (1989). Dictionaries, Dic-
tionary Grammars and Dictionary Entry Parsing,
Proc. of the 27th ACL Vancouver, British Colum-
bia, Canada, :91 – 101.
Tufiş, Dan. (2001). From Machine Readable Dictio-
naries to Lexical Databases, RACAI, Romanian
Academy, Bucharest, Romania.
XCES TEI Standard, Variant P5. (2007).
http://www.tei-c.org/Guidelines/P5/
</reference>
<page confidence="0.968506">
47
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.032562">
<title confidence="0.99518">An Optimal and Portable Parsing Method Romanian, French, and German Large Dictionaries</title>
<author confidence="0.715132">Neculai</author>
<affiliation confidence="0.682891333333333">Institute of Romanian Iaşi</affiliation>
<email confidence="0.998319">ncurteanu@yahoo.com</email>
<author confidence="0.95792">Alex</author>
<affiliation confidence="0.84233575">Institute of Science, Romanian Faculty of I. Cuza” University,</affiliation>
<email confidence="0.837591">mmoruz@info.uaic.ro</email>
<author confidence="0.322662">Diana</author>
<title confidence="0.762675">Institute for Computer Romanian Faculty of</title>
<author confidence="0.864074">I Cuza”</author>
<email confidence="0.946052">dtrandabat@info.uaic.ro</email>
<abstract confidence="0.997921372093023">This paper presents a cross-linguistic analysis of the largest dictionaries currently existing for Romanian, French, and German, and a new, robust and portable method for Dictionary Entry Parsing (DEP), based on Segmentation- Cohesion-Dependency (SCD) configurations. The SCD configurations are applied successively on each dictionary entry to identify its lexicographic segments (the first SCD configuration), to extract its sense tree (the second configuration), and to parse its atomic sense definitions (the third one). Using previous results on Romanian Thesaurus format), the present paper adapts and applies the SCD-based technology to other large and complex thesauri: Romanian Thesaurus format), Trésor de la Langue Française), Wörterbuch and (Göthe- Wörterbuch). This experiment is illustrated on significantly large parsed entries of these thesauri, and proved the folfeatures: the meis a completely grammarfor dictionary parsing, with efficient (weeks-time adaptable) modeling through sense hierarchies and parsing portability for a new dictionary. (2) SCDconfigurations separate and run sequentially and independently the processes of lexicographic segment recognition, sense tree extraction, and atomic definition parsing. (3) The whole DEP process with is (4) SCDconfigurations, through sense marker classes and their dependency hypergraphs, offer an unique instrument of lexicon construction comparison, sense concept design and DEP standardization.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>DLR revision committee</author>
</authors>
<title>Coding rules for DLR (in Romanian). Romanian Academy, Institute of Philology,</title>
<date>1952</date>
<location>Bucharest.</location>
<marker>committee, 1952</marker>
<rawString>DLR revision committee. (1952). Coding rules for DLR (in Romanian). Romanian Academy, Institute of Philology, Bucharest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Cristea</author>
<author>M Răschip</author>
<author>C Forăscu</author>
<author>G Haja</author>
<author>C Florescu</author>
<author>B Aldea</author>
<author>E Dănilă</author>
</authors>
<date>2007</date>
<booktitle>The Digital Form of the Thesaurus Dictionary of the Romanian Language. In Proc. of the 4th SpeD</booktitle>
<marker>Cristea, Răschip, Forăscu, Haja, Florescu, Aldea, Dănilă, 2007</marker>
<rawString>Cristea, D., Răschip, M., Forăscu, C., Haja, G., Florescu, C., Aldea, B., Dănilă, E. (2007). The Digital Form of the Thesaurus Dictionary of the Romanian Language. In Proc. of the 4th SpeD 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Curteanu</author>
<author>E Amihăesei</author>
</authors>
<date>2004</date>
<booktitle>Grammarbased Java Parsers for DEX and DTLR Romanian Dictionaries. ECIT-2004, Iasi,</booktitle>
<location>Romania.</location>
<marker>Curteanu, Amihăesei, 2004</marker>
<rawString>Curteanu, N., and E. Amihăesei. (2004). Grammarbased Java Parsers for DEX and DTLR Romanian Dictionaries. ECIT-2004, Iasi, Romania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Curteanu</author>
</authors>
<title>Local and Global Parsing with Functional (F)X-bar Theory and SCD Linguistic Strategy.</title>
<date>2006</date>
<journal>(I.+II.), Computer Science Journal of Moldova, Academy of Science of Moldova,</journal>
<volume>14</volume>
<pages>40--74</pages>
<contexts>
<context position="2669" citStr="Curteanu, 2006" startWordPosition="382" endWordPosition="383">se concept design and DEP standardization. 1 Introduction The general idea behind parsing a large dictionary can be reduced to transforming a raw text entry into an indexable linguistic resource. Thus, for each dictionary entry, a structured representation of its senses has to be created, together with a detailed description of the entry’s form: i.e. morphology, syntax, orthography, phonetics, lexical semantics, etymology, usage, variants etc. The aim of this paper is to present an efficient dictionary entry parsing (DEP) method, based on Segmentation-Cohesion-Dependency (SCD) configurations (Curteanu, 2006), applied on a set of five large and complex dictionaries: DLR (The Romanian Thesaurus – new format), DAR (The Romanian Thesaurus – old format), TLF (Le Trésor de la Langue Française), DWB (Deutsches Wörterbuch – GRIMM), and GWB (Göthe-Wörterbuch). The paper is structured in 8 sections: Section 2 presents the state of the art in DEP, with an emphasis on the comparison between the proposed method and other dictionary parsing strategies, before detailing the SCD-based proposed method in Section 3. The following sections present the application of the proposed method to the five dictionaries. The</context>
<context position="7066" citStr="Curteanu, 2006" startWordPosition="1052" endWordPosition="1053">/A3] [/A2] [/A1], derived from the intuitive, but highly inefficient parsing strategy based on the general Depth-First searching. After presenting the SCD-based dictionary parsing method, section 3.2. compares the parsing cycles and phases of standard DEP to the ones of SCD-based DEP. 3 Parsing with SCD Configurations The SCD configuration(s) method is a procedural, recognition-generation computational device, that is distinct from the traditional and cumbersome formal grammars, being able to successfully replace them for several tasks of natural language parsing, including text free parsing (Curteanu, 2006) and thesauri parsing (Curteanu et al., 2008). For SCD-based parsing, the semantics and the linguistic modeling of the text to be analyzed should be clearly specified at each parsing level, and implemented within the following components of each SCD configuration (hereafter, SCD-config):  A set of marker classes: a marker is a boundary for a specific linguistic category (e.g. A., I., 1., a)., etc.). Markers are joined into marker classes, with respect to 39 their functional similarity (e.g. {A., B., C., ...}, {1., 2., 3., ...}, {a)., b)., ...}); • A hypergraph-like hierarchy that establishes </context>
</contexts>
<marker>Curteanu, 2006</marker>
<rawString>Curteanu, N. (2006). Local and Global Parsing with Functional (F)X-bar Theory and SCD Linguistic Strategy. (I.+II.), Computer Science Journal of Moldova, Academy of Science of Moldova, Vol. 14 no. 1 (40):74-102; no. 2 (41):155-182.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Curteanu</author>
<author>D Trandabăţ</author>
<author>A M Moruz</author>
</authors>
<title>Extracting Sense Trees from the Romanian Thesaurus by Sense Segmentation &amp; Dependency Parsing,</title>
<date>2008</date>
<booktitle>Proceedings of CogAlex Workshop, COLING 2008, ISBN</booktitle>
<pages>978--1</pages>
<contexts>
<context position="7111" citStr="Curteanu et al., 2008" startWordPosition="1057" endWordPosition="1060">uitive, but highly inefficient parsing strategy based on the general Depth-First searching. After presenting the SCD-based dictionary parsing method, section 3.2. compares the parsing cycles and phases of standard DEP to the ones of SCD-based DEP. 3 Parsing with SCD Configurations The SCD configuration(s) method is a procedural, recognition-generation computational device, that is distinct from the traditional and cumbersome formal grammars, being able to successfully replace them for several tasks of natural language parsing, including text free parsing (Curteanu, 2006) and thesauri parsing (Curteanu et al., 2008). For SCD-based parsing, the semantics and the linguistic modeling of the text to be analyzed should be clearly specified at each parsing level, and implemented within the following components of each SCD configuration (hereafter, SCD-config):  A set of marker classes: a marker is a boundary for a specific linguistic category (e.g. A., I., 1., a)., etc.). Markers are joined into marker classes, with respect to 39 their functional similarity (e.g. {A., B., C., ...}, {1., 2., 3., ...}, {a)., b)., ...}); • A hypergraph-like hierarchy that establishes the dependencies among the marker classes; • </context>
<context position="10517" citStr="Curteanu et al., 2008" startWordPosition="1572" endWordPosition="1575">ndency relations between lexicographic segments, SCD-config1 is not planned to establish the dependency relations (cycle [A1] in Fig. 1, or cycle [B1] in Fig. 2). The second important task of DEP is to parse each lexicographic segment according to its specific semantics and linguistic structure. The most prominent lexicographic segment of each entry is the sense-description one, the central operation being the process of extracting the sense tree from the segment. This is the purpose of the second SCD configuration (denoted SCD-config2), corresponding exactly to the DSSD parsing algorithm in (Curteanu et al., 2008), which, for the DLR sense trees, has a precision of 91.18%. In order to refine the lexicalsemantics of primary senses, one has to descend, under secondary senses, into the definitions and definition examples, which constitute the text spans situated between two sequentially-related nodes of the parsed sense tree. This SCD configuration is represented as cycle [B2] in Fig. 2. The third step of DEP parsing (cycle [B3] in Fig. 2) is represented by the configuration SCD-config3, needed to complete the DEP. SCD-config3 consists in a specific set of marker classes for the segmentation at dictionary</context>
<context position="11895" citStr="Curteanu et al., 2008" startWordPosition="1788" endWordPosition="1791">mong atomic senses / definitions. As a prerequisite groundwork, an adequate modeling of the sense definitions is needed and the segmentation of definitions is implemented as an essential step to establish the dependency-bysubsumption among the sense types of the considered thesaurus. The final result of the entry parsing process should be the sequential application of the SCD-config1, SCD-config2, and SCD-config3 configurations. 3.2 A Structural Analysis: Standard DEP vs. SCD Configurations A pilot experiment of parsing with SCD configurations was its application to the DLR thesaurus parsing (Curteanu et al., 2008); the process of sense tree building has been completely detached 40 and extracted from the process of sense definition parsing. The sense-tree parsing with SCD-based DEP cycles and phases is summarized in pseudo-code in Fig. 2 and comparative Table 1 below. [B1]. For s from 1 to EntrySegmentNumber Segment-s Parsing; If(Segment-s = Sense-Segment) Standby on Sense-Segment Parsing; Else Continue [/B1]. EndFor Output: Entry parsed segments, not including the Sense-Segment; [B2]. For i from 0 to MarkerNumber Phase_1 Sense-i Marker Recognition; Assign (Unparsed) Sense-i Definition to Node-i; Phase_</context>
<context position="14344" citStr="Curteanu et al., 2008" startWordPosition="2144" endWordPosition="2147">ore efficient and robust. An efficiency feature of the SCD-based parsing technique is that, working exclusively on sense marker sequences, outputs of [B2] and [B3] cycles in Fig. 2 (i.e. sense trees) are obtained either the sense definition parsing process succeeds or not, either correct or not! These properties of the new parsing method with SCD configurations have been effectively supported by the parsing experiments on large Romanian, French, and German dictionaries. 4 Romanian DLR Parsing The study of the application of SCDconfiguration to DEP started with the analysis of the DLR parsing (Curteanu et al., 2008). Fig. 3 presents the hierarchy of SCD-config2 for DLR sense marker classes, Fig. 3. Hierarchy of DLR marker classes devoted to sense tree parsing. The dashed arrows point to the upper or lower levels of DLR sense marker hierarchy, from the literal enumeration layer-embedded level. The continuousdashed arrows in Fig. 3 point downwards from the higher to the lower priority levels of DLR marker class hypergraph. Because of its special representation characteristics, the literal enumeration is illustrated on a layer attached to the hiea), b), c), ... 1., 2., 3., DLR Entry I., II., III., ... BoldD</context>
</contexts>
<marker>Curteanu, Trandabăţ, Moruz, 2008</marker>
<rawString>Curteanu, N., D. Trandabăţ, A. M. Moruz. (2008). Extracting Sense Trees from the Romanian Thesaurus by Sense Segmentation &amp; Dependency Parsing, Proceedings of CogAlex Workshop, COLING 2008, ISBN 978-1-905593-56-9, :55-63.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Curteanu</author>
<author>A Moruz</author>
<author>D Trandabăţ</author>
<author>C Bolea</author>
<author>M Spătaru</author>
<author>M Husarciuc</author>
</authors>
<title>Sense tree parsing and definition segmentation in eDTLR Thesaurus,</title>
<date>2009</date>
<booktitle>in Trandabăţ et al. (Eds.), Proc. of the Workshop</booktitle>
<pages>65--74</pages>
<publisher>University Publishing</publisher>
<location>(in Romanian).</location>
<contexts>
<context position="16946" citStr="Curteanu et al., 2009" startWordPosition="2593" endWordPosition="2596"> errors comes from the inherent ambiguity in deciding which is the regent and which is the dependent (sub)sense in marker sequences as “1. a) b) c) 0 [0]...”. For evaluating SCD-config3, 52 dictionary entries of various sizes were used as a gold standard, totaling a number of approximately 2000 chunks and 22,000 words. The results are given in Table 2. Upon further analysis of the evaluation results, the most frequent errors were found to be due to faulty sigle (abbreviation of the source of examples) segmentation. A detailed analysis of the error types for the DLR dictionary is discussed in (Curteanu et al., 2009). Evaluation Precision Recall FType measure Exact Match 84.32% 72.09% 77.73% Overlap 92.18% 91.97% 92.07% Table 2: Evaluation results for segmentation of DLR atomic sense elements Correcting the acquisition of sigles leads to a 94.43% f-measure for exact match (the number of correctly identified sense and definition units) and a 98.01% f-measure for overlap (the number of correctly classified words in each entry). To achieve the DLR parsing process completely, the last operation to be executed is to establish the dependency relations between atomic senses / definitions, under all the sense nod</context>
</contexts>
<marker>Curteanu, Moruz, Trandabăţ, Bolea, Spătaru, Husarciuc, 2009</marker>
<rawString>Curteanu, N., Moruz, A., Trandabăţ, D., Bolea, C., Spătaru, M., Husarciuc, M. (2009). Sense tree parsing and definition segmentation in eDTLR Thesaurus, in Trandabăţ et al. (Eds.), Proc. of the Workshop &amp;quot;Linguistic Resources and Instruments for Romanian Language Processing&amp;quot;, Iasi, Romania, &amp;quot;Al.I.Cuza&amp;quot; University Publishing House, ISSN 1843-911X, pp. 65-74, (in Romanian).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Das Woerterbuch-Netz</author>
</authors>
<date>2010</date>
<note>http://germazope.unitrier.de/Projects/WBB/woerterbuecher/</note>
<contexts>
<context position="28241" citStr="Woerterbuch-Netz, 2010" startWordPosition="4316" endWordPosition="4317">. &lt;/definition&gt; &lt;/sense&gt; &lt;/sense&gt; ... ... ... &lt;/lexsegm&gt; - &lt;lexsegm value=&amp;quot;FinSeg.&amp;quot; class=&amp;quot;0&amp;quot;&gt; - &lt;sense value=&amp;quot;-&amp;quot; class=&amp;quot;5&amp;quot;&gt; - &lt;definition&gt; &lt;b&gt;ÉTYMOL. ET HIST.&lt;/b&gt; ... ... &lt;i&gt;Ca&lt;/i&gt; 1080 &lt;i&gt;anuncier&lt;/i&gt; ... ... ... &lt;/definition&gt; &lt;/sense&gt; .... ... ... - &lt;definition&gt; &lt;b&gt;BBG.&lt;/b&gt; ALLMEN 1956. BRUANT 1901. ... &lt;b&gt;ARRIVÉE, subst. fém.&lt;/b&gt; &lt;/definition&gt; ... ... ... &lt;/sense&gt; &lt;/lexsegm&gt; &lt;/entry&gt; 7 Lexicographic Segments and Sense Markers in German DWB and GWB The German DWB entries comprise a complex structure of the lexicographic segments, which provide a non-uniform and non-unitary composition (Das Woerterbuch-Netz, 2010). One special feature is that DWB and GWB lexicographic segments are composed of two parts: a first (optional) root-sense subsegment, and the segment body, which contain the explicit sense markers, easily recognizable. For DWB, the parsing of lexicographic segments is not at all a comfortable task since they are defined by three distinct means: (A) After the root-sense of a DWB entry, or after the root-sense of a lexicographic segment, (a list of) italicized-and-spaced key-words are placed to constitute the label of the lexicographic segment that follows. Samples of such key-word labels for DW</context>
</contexts>
<marker>Woerterbuch-Netz, 2010</marker>
<rawString>Das Woerterbuch-Netz (2010): http://germazope.unitrier.de/Projects/WBB/woerterbuecher/</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Hauser</author>
<author>A Storrer</author>
</authors>
<title>Dictionary Entry Parsing Using the LexParse System.</title>
<date>1993</date>
<journal>Lexikographica</journal>
<volume>9</volume>
<pages>174--219</pages>
<contexts>
<context position="4174" citStr="Hauser and Storrer, 1993" startWordPosition="614" endWordPosition="617">Dictionary Entry Parsing Natural language text parsing is a complex process whose prerequisite essential stage is a thorough modeling of the linguistic process to be developed, i.e. the structures and relations aimed to constitute the final result of the analysis. Similarly, for DEP, the semantics of the lexical structures, the sense markers, and the hierarchies (dependencies) between sense structures must be specified. Standard approaches to dictionary entry parsing (referred to from now on as standard DEP), such as the one used by (Neff and Boguraev, 1989), the LexParse system presented in (Hauser and Storrer, 1993; Kammerer, 2000; Lemnitzer and Kunze, 2005), or lexicographic grammars, as those presented in (Curteanu &amp; Amihaesei, 2004; Tufis et al., 1999), recognize the sense / subsense definitions in a strictly sequential manner, along with the incremental building of the entry sense tree. The interleaving of the two running processes is the main source of errors and inefficiency for the whole DEP process. Both the standard DEP (Figure 1) and our proposed method based on SCD-configurations (Figure 2) involve the following three running cycles and four essential phases for extracting the sense-tree stru</context>
<context position="9862" citStr="Hauser &amp; Storrer, 1993" startWordPosition="1470" endWordPosition="1473">most specific level. 3.1 SCD Configurations for DEP The SCD-based process for DEP consists in three SCD configurations, applied sequentially on the levels and sublevels of the dictionary entry, where each level should be monotonic at the lexical-semantics subsumption relation. The task of applying the SCD configurations to DEP requires knowing the semantics of the corresponding classes of sense and definition markers, together with their hierarchical representation. The first SCD configuration (SCD-config1) is devoted to the task of obtaining the partition of the entry lexicographic segments (Hauser &amp; Storrer, 1993). Since usually there are no dependency relations between lexicographic segments, SCD-config1 is not planned to establish the dependency relations (cycle [A1] in Fig. 1, or cycle [B1] in Fig. 2). The second important task of DEP is to parse each lexicographic segment according to its specific semantics and linguistic structure. The most prominent lexicographic segment of each entry is the sense-description one, the central operation being the process of extracting the sense tree from the segment. This is the purpose of the second SCD configuration (denoted SCD-config2), corresponding exactly t</context>
</contexts>
<marker>Hauser, Storrer, 1993</marker>
<rawString>Hauser, R., and A. Storrer. (1993). Dictionary Entry Parsing Using the LexParse System. Lexikographica (9): 174-219.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kammerer</author>
</authors>
<title>Wöterbuchparsing Grundsiitzliche Oberlegungen und ein Kurzbericht fiber praktische Erfahrungen,</title>
<date>2000</date>
<location>http://www.matthiaskammerer.de/content/WBParsing.pdf</location>
<contexts>
<context position="4190" citStr="Kammerer, 2000" startWordPosition="618" endWordPosition="619">atural language text parsing is a complex process whose prerequisite essential stage is a thorough modeling of the linguistic process to be developed, i.e. the structures and relations aimed to constitute the final result of the analysis. Similarly, for DEP, the semantics of the lexical structures, the sense markers, and the hierarchies (dependencies) between sense structures must be specified. Standard approaches to dictionary entry parsing (referred to from now on as standard DEP), such as the one used by (Neff and Boguraev, 1989), the LexParse system presented in (Hauser and Storrer, 1993; Kammerer, 2000; Lemnitzer and Kunze, 2005), or lexicographic grammars, as those presented in (Curteanu &amp; Amihaesei, 2004; Tufis et al., 1999), recognize the sense / subsense definitions in a strictly sequential manner, along with the incremental building of the entry sense tree. The interleaving of the two running processes is the main source of errors and inefficiency for the whole DEP process. Both the standard DEP (Figure 1) and our proposed method based on SCD-configurations (Figure 2) involve the following three running cycles and four essential phases for extracting the sense-tree structure from a dic</context>
</contexts>
<marker>Kammerer, 2000</marker>
<rawString>Kammerer, M. (2000). Wöterbuchparsing Grundsiitzliche Oberlegungen und ein Kurzbericht fiber praktische Erfahrungen, http://www.matthiaskammerer.de/content/WBParsing.pdf</rawString>
</citation>
<citation valid="true">
<title>Le Trésor de la Langue Française informatisé</title>
<date>2010</date>
<note>http://atilf.atilf.fr/tlf.htm</note>
<marker>2010</marker>
<rawString>Le Trésor de la Langue Française informatisé (2010). http://atilf.atilf.fr/tlf.htm</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Lemnitzer</author>
<author>C Kunze</author>
</authors>
<title>Dictionary Entry Parsing,</title>
<date>2005</date>
<location>ESSLLI</location>
<contexts>
<context position="4218" citStr="Lemnitzer and Kunze, 2005" startWordPosition="620" endWordPosition="623">text parsing is a complex process whose prerequisite essential stage is a thorough modeling of the linguistic process to be developed, i.e. the structures and relations aimed to constitute the final result of the analysis. Similarly, for DEP, the semantics of the lexical structures, the sense markers, and the hierarchies (dependencies) between sense structures must be specified. Standard approaches to dictionary entry parsing (referred to from now on as standard DEP), such as the one used by (Neff and Boguraev, 1989), the LexParse system presented in (Hauser and Storrer, 1993; Kammerer, 2000; Lemnitzer and Kunze, 2005), or lexicographic grammars, as those presented in (Curteanu &amp; Amihaesei, 2004; Tufis et al., 1999), recognize the sense / subsense definitions in a strictly sequential manner, along with the incremental building of the entry sense tree. The interleaving of the two running processes is the main source of errors and inefficiency for the whole DEP process. Both the standard DEP (Figure 1) and our proposed method based on SCD-configurations (Figure 2) involve the following three running cycles and four essential phases for extracting the sense-tree structure from a dictionary: [A1], [B1] – parsin</context>
</contexts>
<marker>Lemnitzer, Kunze, 2005</marker>
<rawString>Lemnitzer, L., and C. Kunze. (2005). Dictionary Entry Parsing, ESSLLI 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Neff</author>
<author>B Boguraev</author>
</authors>
<date>1989</date>
<booktitle>Dictionaries, Dictionary Grammars and Dictionary Entry Parsing, Proc. of the 27th ACL Vancouver, British Columbia, Canada, :91 –</booktitle>
<pages>101</pages>
<contexts>
<context position="4114" citStr="Neff and Boguraev, 1989" startWordPosition="605" endWordPosition="608">y, portability, standardization, and dictionary networks. 2 Dictionary Entry Parsing Natural language text parsing is a complex process whose prerequisite essential stage is a thorough modeling of the linguistic process to be developed, i.e. the structures and relations aimed to constitute the final result of the analysis. Similarly, for DEP, the semantics of the lexical structures, the sense markers, and the hierarchies (dependencies) between sense structures must be specified. Standard approaches to dictionary entry parsing (referred to from now on as standard DEP), such as the one used by (Neff and Boguraev, 1989), the LexParse system presented in (Hauser and Storrer, 1993; Kammerer, 2000; Lemnitzer and Kunze, 2005), or lexicographic grammars, as those presented in (Curteanu &amp; Amihaesei, 2004; Tufis et al., 1999), recognize the sense / subsense definitions in a strictly sequential manner, along with the incremental building of the entry sense tree. The interleaving of the two running processes is the main source of errors and inefficiency for the whole DEP process. Both the standard DEP (Figure 1) and our proposed method based on SCD-configurations (Figure 2) involve the following three running cycles </context>
</contexts>
<marker>Neff, Boguraev, 1989</marker>
<rawString>Neff, M., and B. Boguraev. (1989). Dictionaries, Dictionary Grammars and Dictionary Entry Parsing, Proc. of the 27th ACL Vancouver, British Columbia, Canada, :91 – 101.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Tufiş</author>
</authors>
<title>From Machine Readable Dictionaries to Lexical Databases, RACAI, Romanian Academy,</title>
<date>2001</date>
<location>Bucharest, Romania.</location>
<marker>Tufiş, 2001</marker>
<rawString>Tufiş, Dan. (2001). From Machine Readable Dictionaries to Lexical Databases, RACAI, Romanian Academy, Bucharest, Romania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>XCES TEI Standard</author>
</authors>
<date>2007</date>
<location>Variant</location>
<marker>Standard, 2007</marker>
<rawString>XCES TEI Standard, Variant P5. (2007).</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>