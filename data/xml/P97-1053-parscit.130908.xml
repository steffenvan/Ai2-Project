<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000109">
<title confidence="0.997859">
A Uniform Approach to Underspecification and Parallelism
</title>
<author confidence="0.87027">
Joachim Niehren
</author>
<affiliation confidence="0.611818">
Programming Systems Lab
Universitat des Saarlandes
</affiliation>
<address confidence="0.457929">
Saarbriicken, Germany
</address>
<email confidence="0.683772">
niehrenOps.uni-sb.de
</email>
<author confidence="0.961294">
Manfred Pinkal
</author>
<affiliation confidence="0.914674666666667">
Department of
Computational Linguistics
Universitat des Saarlandes
</affiliation>
<address confidence="0.60463">
Saarbriicken, Germany
</address>
<email confidence="0.783192">
pinkalOcoli.uni-sb.de
</email>
<author confidence="0.983989">
Peter Ruhrberg
</author>
<affiliation confidence="0.921768">
Department of
Computational Linguistics
Universitat des Saarlandes
</affiliation>
<address confidence="0.636766">
Saarbriicken, Germany
</address>
<email confidence="0.840637">
peruOcoli.uni-sb.de
</email>
<sectionHeader confidence="0.995237" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999729615384615">
We propose a unified framework in which
to treat semantic underspecification and
parallelism phenomena in discourse. The
framework employs a constraint language
that can express equality and subtree rela-
tions between finite trees. In addition, our
constraint language can express the equal-
ity up-to relation over trees which cap-
tures parallelism between them. The con-
straints are solved by context unification.
We demonstrate the use of our framework
at the examples of quantifier scope, ellipsis,
and their interaction.&apos;
</bodyText>
<sectionHeader confidence="0.999395" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999904666666667">
Traditional model-theoretic semantics of natural
languages (Montague, 1974) has assumed that se-
mantic information, processed by composition and
reasoning processes, is available in a completely
specified form. During the last few years, the phe-
nomenon of semantic underspecification, i.e. the
incomplete availability of semantic information in
processing, has received increasing attention. Sev-
eral aspects of underspecification have been fo-
cussed upon, motivated mainly by computational
considerations: the ambiguity and openness of lex-
ical meaning (Pustejovsky, 1995; Copestake and
Briscoe, 1995), referential underspecification (Asher,
1993), structural semantic underspecification caused
by syntactic ambiguities (Egg and Lebeth, 1995),
and by the underdetermination of scope relations
(Alshawi and Crouch, 1992; Reyle, 1993). In ad-
dition, external factors such as insufficient coverage
</bodyText>
<footnote confidence="0.900975333333333">
&apos;The research reported in this paper has been sup-
ported by the SFB 378 at the Universitit des Saarlandes
and the Esprit Working Group CCL II (EP 22457).
</footnote>
<bodyText confidence="0.9998204375">
of the grammar, time-constraints for parsing, and
most importantly the kind of incompleteness, uncer-
tainty, and inconsistency, coming with spoken input
are coming more into the focus of semantic process-
ing (Bos et al., 1996; Pinkal, 1995).
The aim of semantic underspecification is to pro-
duce compact representations of the set of possible
readings of a discourse. While the readings of a dis-
course may be only partially known, the interpre-
tations of its components are often strongly corre-
lated. In this paper, we are concerned with a uni-
form treatment of underspecification and of phenom-
ena of discourse-semantic parallelism. Some typical
parallelism phenomena are ellipsis, corrections, and
variations. We illustrate them here by some exam-
ples (focus-bearing phrases are underlined):
</bodyText>
<listItem confidence="0.999085">
(1) John speaks Chinese. Bill too.
(2) John speaks Japanese. - No, he speaks
Chinese.
(3) ??? - Bill speaks Chinese, too.
</listItem>
<bodyText confidence="0.999083714285714">
Parallelism guides the interpretation process for the
above discourses. This is most obvious in the case of
ellipsis interpretation (1), but is also evident for the
resolution of the anaphor in the correction in (2),
and in the variation case (3) where the context is
unknown and has to be inferred.
The challenge is to integrate a treatment of paral-
lelism with underspecification, such as in cases of
the interaction of scope and ellipsis. Problematic
examples like (4) have been brought to attention by
(Hirschbuehler, 1982). The example demonstrated
that earlier treatments of ellipsis based on copying
of the content of constituents are insufficient for such
kinds of parallelism.
</bodyText>
<listItem confidence="0.937195333333333">
(4) Two European languages are spoken by many
linguists, and two Asian ones (are spoken by
many linguists), too.
</listItem>
<page confidence="0.996527">
410
</page>
<bodyText confidence="0.99999080952381">
The first clause of (4) is scope-ambiguous between
two readings. The second, elliptic one, is too. Its
interpretation is indicated by the part in parenthe-
ses. The parallelism imposed by ellipsis requires the
scope of the quantifiers in the elliptical clause to
be analogous to the scope of the quantifiers in the
antecedent clause. Thus, the conjunction of both
clauses has only two readings: Either the interpre-
tation is the wide scope existential one in both cases
(two specific European languages as well as two spe-
cific Asian languages are widely known among lin-
guists), or it is the narrow scope existential one
(many linguists speak two European languages, and
many linguists speak two Asian languages).
A natural approach for describing underspecified se-
mantic information is to use an appropriate con-
straint language. We use constraints interpreted
over finite trees. A tree itself represents a formula
of some semantic representation language. This ap-
proach is very flexible in allowing various choices
for the particular semantic representation language,
such as first-order logic, intensional logic (Dowty,
Wall, and Peters, 1981), or Discourse Representa-
tion Theory, DRT, (Kamp and Reyle, 1993). The
constraint approach contrasts with theories such as
Reyles UDRT (1993) which stresses the integration
of the levels of semantic representation language and
underspecified descriptions.
For a description language we propose the use of con-
text constraints over finite trees which have been in-
vestigated in (Niehren, Pinkal, and Ruhrberg, 1997).
This constraint language can express equality and
subtree relations between finite trees. More gen-
erally it can express the &amp;quot;equality up-to&amp;quot; relation
over trees, which captures (non-local) parallelism be-
tween trees. The general case of equality up-to con-
straints cannot be handled by a system using subtree
plus equality constraints only. The problem of solv-
ing context constraints is known as context unifica-
tion, which is a subcase of linear second-order unifi-
cation (Levy, 1996; Pinkal, 1995). There is a com-
plete and correct semi-decision procedure for solving
context constraints.
Context unification allows to treat the interaction
of scope and ellipsis. Note that in example (4) the
trees representing the semantics of the source and
target clause must be equal up to the positions cor-
responding to the contrasting elements (two Euro-
pean languages / two Asian languages). Thus, this
is a case where the additional expressive power of
context constraints is crucial. In this paper, we elab-
orate on the example of scope and ellipsis interac-
tion. The framework appears to extend, however, to
all kinds of cases where structural underspecification
and discourse-semantic parallelism interact.
In Section 2, we will describe context unification,
and present some results about its formal proper-
ties and its relation to other formalisms. Section 3
demonstrates the application to scope underspeci-
fication, to ellipsis, and to the combined cases. In
Section 4, the proposed treatment is compared to re-
lated approaches in computational semantics. Sec-
tion 5 gives an outlook on future work.
</bodyText>
<sectionHeader confidence="0.967031" genericHeader="method">
2 Context Unification
</sectionHeader>
<bodyText confidence="0.999599962962963">
Context unification is the problem of solving con-
text constraints over finite trees. The notion of con-
text unification stems from (Levy, 1996) whereas
the problem originates from (Comon, 1992) and
(Schmidt-Schauf3, 1994). Context unification has
been formally defined and investigated by the au-
thors in (Niehren, Pinkal, and Ruhrberg, 1997).
Here, we select and summarize relevant results on
context unification from the latter.
Context unification subsumes string unification (see
(Baader and Siekmann, 1993) for an overview) and
is subsumed by linear second-order unification which
has been independently proposed by (Levy, 1996)
and (Pinkal, 1995). The decidability of context uni-
fication is an open problem. String unification has
been proved decidable by (Makanin, 1977). The
decidability of linear second-order unification is an
open problem too whereas second-order unification
is known to be undecidable (Goldfarb, 1981).
The syntax and semantics of context constraints are
defined as follows. We assume an infinite set of first-
order variables ranged over by X ,Y, Z, an infinite set
of second-order variables ranged over by C, and a
set of function symbols ranged over by f, that are
equipped with an arity n &gt; 0. Nullary function
symbols are called constants. Context constraints
co are defined by the following abstract syntax:
</bodyText>
<equation confidence="0.9761285">
t ::= X I f(i , . • • , tn) I C(t)
so t = I so A so&apos;
</equation>
<bodyText confidence="0.984762555555556">
A (second-order) term t is either a first-order vari-
able X, a construction ALI , , tn) where the arity
of f is n, or an application C(t). A context constraint
so is a conjunction of equations between second-order
terms.
Semantically, we interpret first-order variables X as
finite constructor trees, which are first-order terms
without variables, and second-order variables C as
context functions that we define next. A context with
</bodyText>
<page confidence="0.989079">
411
</page>
<figure confidence="0.612472">
and
</figure>
<figureCaption confidence="0.999893">
Figure 1: The equality up-to relation
</figureCaption>
<bodyText confidence="0.9729966">
hole X is a term t that does not contain any other
variable than X and has exactly one occurrence of
X. A context function 7 is a function from trees
to trees such that there exists a variable X and a
context t with hole X satisfying the equation:
</bodyText>
<equation confidence="0.915476">
7(0-) = t[cr I X] for all trees a-.
</equation>
<bodyText confidence="0.9996235">
Note that context functions can be described by lin-
ear second-order lambda terms of the form AX.t
where X occurs exactly once in the second-order
term I. Let a be a variable assignment that maps
first-order variables to finite trees and second-order
variables to context functions. The interpretation
a(t) of a term I under a is the finite tree defined as
follows:
</bodyText>
<equation confidence="0.9992575">
a(a(ti, • • • &apos;in)) = a(a(ti), a(tn))
a(C(t)) = a(C)(a(t))
</equation>
<bodyText confidence="0.987557653846154">
A solution of a context constraint co is a variable as-
signment a such that a(t) = a(e) for all equations
I = t&apos; in co. A context constraint is called satisfi-
able if it has a solution. Context unification is the
satisfiability problem of context constraints.
Context constraints (plus existential quantification)
can express subtree constraints over finite trees. A
subtree constraint has the form XX&apos; and is inter-
preted with respect to the subtree relation on finite
trees. A subtree relation cr&lt;o-&apos; holds if 0. is a subtree
of a&apos;, i.e. if there exists a context function -y such
that o-&apos; = 7(4 Thus, the following equivalence is
valid over finite trees:
XX&apos; 3C (X&apos; = C(X))
Context constraints are also more general than
equality up-to constraints over finite trees, which al-
low to describe parallel tree structures. An equality
up-to constraint has the form Xi Pg=--Yi/Y1 and is
interpreted with respect to the equality up-to rela-
tion on finite trees. Given finite trees
the equality up-to relation 0.1/0-&apos;1=0-2/0-12 holds if 0.1
is equal to 0.2 up-to one position p where 0.1 has the
subtree al and 0.2 the subtree 0.12. This is depicted in
Figure 1. In this case, there exists a context function
-y such that 0.1 = 7(cr&apos;i) and 0.2 = 7(0.&apos;2). In other
words, the following equivalence holds:
</bodyText>
<equation confidence="0.856476">
XIX&apos;=Y1171 3C(X=C(X&apos;) A Y=C(r))
</equation>
<bodyText confidence="0.999755">
Indeed, the satisfiability problems of context con-
straints and equality up-to constraints over finite
trees are equivalent. In other words, context uni-
fication can be considered as the problem of solving
equality up-to constraints over finite trees.
</bodyText>
<subsectionHeader confidence="0.986308">
2.1 Solving Context Constraints
</subsectionHeader>
<bodyText confidence="0.998878833333333">
There exists a correct and complete semi-decision
procedure for context unification. This algorithm
computes a representation of all solutions of a con-
text constraint, in case there are any. We illustrate
the algorithm in figure 2. There, we consider the
constraint
</bodyText>
<equation confidence="0.937343">
X,=@(@(s, c), j) A X, =C(X„) A X„=j
</equation>
<bodyText confidence="0.999858347826087">
which is also discussed in example (11)(i) as part of
an elliptical construction.
Our algorithm proceeds on pairs consisting of a con-
straint and a set of variable bindings. At the begin-
ning the set of variable bindings is empty. In case
of termination with an empty constraint, the set of
variable bindings describes a set of solutions of the
initial constraint.
Consider the run of our algorithm in figure 2. In the
first step, X,=@(@(s, c), j) is removed from the con-
straint and the variable binding X, 1—&gt; (4(©(s, c), j)
is added. This variable binding is applied to the
remaining constraint where X, is substituted by
c), j). The second computation step is simi-
lar. It replace the to constraint Xcs=j by a variable
binding X3 1-4 j and eliminates X„ in the remain-
ing constraint.
The resulting constraint @(@(s, c), j) = C(j)
presents an equation between a term with a con-
stant @ as its (&amp;quot;rigid&amp;quot;) head symbol and a term with
a context variable C as its (&amp;quot;flexible&amp;quot;) head sym-
bol. In such a case one can either apply a projection
rule that binds C to the identity context AY.Y or an
</bodyText>
<page confidence="0.900922">
412
</page>
<equation confidence="0.913404454545455">
X3=@(©(s, c), j) A Xs =C(Xes) A Xes=j
X,
@(@(s, c), j)=C (X es) A Xcs=j
If X„ j
c), j)=C(j) AY.0_(@(s, c), C&amp;quot;(Y))
C AY.Y
C
false 0(s, c)=C&apos; (j) i=0:7)
1 AYY
false
true
</equation>
<figureCaption confidence="0.990808">
Figure 2: Solving the context constraints of example (11)(i)
</figureCaption>
<bodyText confidence="0.999864909090909">
imitation rule. Projection produces a clash of two
rigid head symbols @ and j. Imitation presents two
possibilities for locating the argument j of the con-
text variable C as a subtree of the two arguments
of the rigid head symbol O. Both alternatives lead
to new rigid—flexible situations. The first alternative
leads to failure (via further projection or imitation)
as @(s, c) does not contain j as a subtree. The sec-
ond leads to success by another projection step.
The unique solution of the constraint in figure 2 can
be described as follows:
</bodyText>
<equation confidence="0.982351">
X,
X cs •—+ j,
C AY.@(@(s, c), Y)
</equation>
<bodyText confidence="0.999805">
The full version of (Niehren, Pinkal, and Ruhrberg,
1997) contains discussions of two algorithms for con-
text unification. For a discussion on decidable frag-
ments of context constraints, we also refer to this
paper.
</bodyText>
<sectionHeader confidence="0.972332" genericHeader="method">
3 Underspecification and Parallelism
</sectionHeader>
<bodyText confidence="0.999932962962963">
In this section, we discuss the use of context unifica-
tion for treating underspecification and parallelism
by some concrete examples. The set of solutions of
a context constraint represents the set of possible
readings of a given discourse. The trees assigned by
the solutions represent expressions of some seman-
tic representation language. Here, we choose (ex-
tensional) typed higher-order logic, HOL, (Dowty,
Wall, and Peters, 1981). However, any other logical
language can be used in principle, so long as we can
represent its syntax in terms of finite trees.
It is important to keep our semantic representation
language (HOL) clearly separate from our descrip-
tion language (context constraints over finite trees).
We assume an infinite set of HOL-variables ranged
over by x and y. The signature of context constraints
contains a unary function symbol lam and a con-
stant var. per HOL-variable x. Futhermore, we as-
sume a binary function symbol @ that we write in
left associative infix notation and constants like john,
language, etc. For example the tree
(ma ny@la nguage)@(la mx((spoken_by@john)©var.))
represents the HOL formula
(many(language))(Ax.(spokenby(john)(x))).
Note that the function symbol @ represents the ap-
plication in HOL and the function symbols lam the
abstraction over x in HOL.
</bodyText>
<page confidence="0.996368">
413
</page>
<subsectionHeader confidence="0.918048">
3.1 Scope
</subsectionHeader>
<bodyText confidence="0.996061">
Scope underspecification for a sentence like (5) is
expressed by the equations in (6):
</bodyText>
<listItem confidence="0.521592">
(5) Two languages are spoken by many linguists.
(6) Xs = Ci((two@language)@lam.(C3(X&apos;s))) A
</listItem>
<equation confidence="0.817822">
Xs = C2((rnanyOlinguist)©larny(C4(X&apos;s))) A
X&apos;s = spoken_by@vary@var.
</equation>
<bodyText confidence="0.999707333333333">
The algorithm for context unification leads to a dis-
junction of two solved constraints given in (7) (i)
and (ii).
</bodyText>
<equation confidence="0.99950375">
Xs =
C1 ((two@l a nguage)@I a m. (
C5((many@linguist)Alarny(
C4(spoken _by@vary@varz)))))
Xs =
C2((many@linguist)@lamy(
C6((twoOlanguage)@lamx(
C3(spoken_by@vary@varx)))))
</equation>
<bodyText confidence="0.999790125">
The algorithm does in fact compute a third kind of
solved constraint for (6), where none of the quan-
tifiers two@language and many@linguist are required
to be within the scope of each other. This possibility
can be excluded within the given framework by us-
ing a stronger set of equations between second-order
terms as in (6&apos;). Such equations can be reduced to
context constraints via Skolemisation.
</bodyText>
<equation confidence="0.99018">
(6&apos;) Cs = AX.Ci(two@language@lam.(C3(X))) A
Cs = AX.C2(many@linguist@lamy(C4(X))) A
Xs = Cs(spoken_by@vary@var.)
</equation>
<bodyText confidence="0.999708333333333">
Both solved constraints in (7) describe infinite sets of
solutions which arise from freely instantiating the re-
maining context variables by arbitrary contexts. We
need to apply a closure operation consisting in pro-
jecting the remaining free context variables to the
indentity context AX.X. This gives us in some sense
the minimal solutions to the original constraint. It
is clear that performing the closure operation must
be based on the information that the semantic ma-
terial assembled so far is complete. Phenomena of
incomplete input, or coercion, require a withholding,
or at least a delaying of the closure operation. The
closure operation on (7) (i) and (ii) leads to the two
possible scope readings of (5) given in (8) (i) and
(ii) respectively.
</bodyText>
<equation confidence="0.995309875">
(8) (i) X5:.&apos;
(two@language)@larn.(
(many@linguist)@lamy(
spoken_by@vary@var.))
(ii) Xs )--+
(many@linguist)@lamy(
(two@language)@lamx(
spoken_by@vary@var.))
</equation>
<bodyText confidence="0.9999055">
A constraint set specifying the scope-neutral mean-
ing information as in (6&apos;) can be obtained in a rather
simple compositional fashion. Let each node P in
the syntactic structure be associated with three se-
mantic meta-variables Xp, Xp, and Cp, and let
I(P) be the scope boundary for each node P. Rules
for obtaining semantic constraints from binary syn-
tax trees are:
</bodyText>
<listItem confidence="0.968558625">
(9) (i) For every S-node P add Xp = Cp(4),
for any other node add Xp = Xip
(ii) If [p Q Q and R are not NP nodes,
add X&amp;quot;F. = XQ@XR or Xip = XR©XQ,
according to HOL type.
(iii) If [p Q R] or [p R Q], and R is an
NP node, then add Xip = XQ@var. and
Ci(p) AX.00(XR@Iam.(Ci(X))).
</listItem>
<bodyText confidence="0.999947444444444">
For example, the first two constraints in example (6&apos;)
result from applying rule (iii), where the values for
the quantifiers two@language and many@finguist are
already substituted in for the variables XR in both
cases. The quantifiers themselves are put together
by rule (ii). The third constraint results from rule
(i) when the semantics of X&apos;s is filled in. The latter
is a byproduct of the applications of rule (iii) to the
two NPs.
</bodyText>
<subsectionHeader confidence="0.98922">
3.2 Ellipsis
</subsectionHeader>
<bodyText confidence="0.998524166666667">
We now look into the interpretation of examples (1)
to (4), which exhibit forms of parallelism. Let us
take X, and Xt to represent the semantics of the
source and the target clause (i.e., the first and the
second clause of a parallel construction; the termi-
nology is taken over from the ellipsis literature), and
X„ and Xct to refer to the semantic values of the
contrast pair. The constraint set of the whole con-
struction is the union of the constraint sets obtained
by interpreting source and target clause independent
of each other plus the pair of constraints given in
(10).
</bodyText>
<equation confidence="0.717632">
(10) X, = C(X,$) A Xt = C(X)
</equation>
<page confidence="0.991719">
414
</page>
<bodyText confidence="0.999930333333333">
The equations in (10) determine that the semantics
of the source clause and the semantics of the tar-
get clause are obtained by embedding the represen-
tations of the respective contrasting elements into
the same context. In other words: Source semantics
and target semantics must be identical up to the
positions of the contrasting elements.
As an example, consider the ellipsis construction of
Sentence (1), where for simplicity we assume that
proper names are interpreted by constants and not
as quantifiers. It makes no difference for our treat-
ment of parallelism.
</bodyText>
<equation confidence="0.997030666666667">
(11) (i) X = speak@chinese@john A
X„ = john A X, = C(X3) A
(ii) Xe, = bill A X, = C(X)
</equation>
<bodyText confidence="0.985950625">
By applying the algorithm for context unification to
this constraint, in particular to part (i) as demon-
strated in figure 2, we can compute the context C
to be AY.(speak@chinese@Y). This yields the inter-
pretation of the elliptical clause, which is given by
Xt speak@chinese@bill.
Note that the treatment of parallelism refers to con-
trasted and non-contrasted portions of the clause
pairs rather than to overt and phonetically unreal-
ized elements. Thus it is not specific for the treat-
ment of ellipsis, but can be applied to other kinds
of parallel constructions, as well. In the correction
pair of Sentence (2), it provides a certain unam-
biguous reading for the pronoun, in (3), it gives
X, = speak@chinese@X„ as a partial description
of the (overheard or unuttered) source clause.
</bodyText>
<subsectionHeader confidence="0.990934">
3.3 Scope and Ellipsis
</subsectionHeader>
<bodyText confidence="0.9998876">
Finally, let us look at the problem case of par-
allelism constraints for structurally underspecified
clause pairs. We get a combination of constraints for
a scope underspecified source clause (12) and paral-
lelism constraints between source and target (13).
</bodyText>
<equation confidence="0.992644857142857">
(12) C, = AX.Ci((two@e_language)@larn.(C3(X)))
A
C, = AX.C2((rnany@linguist)@lamy(C4(X)))
A
X, = Cs(spoken_by@vary@varx)
(13) X, = C(two@e_language) A
X, = C(two@a_language)
</equation>
<bodyText confidence="0.99035575">
The conjunction of the constraints in (12) and (13)
correctly allows for the two solutions (14) and (15),
with corresponding scopings in X, and Xt after
closure.2
</bodyText>
<equation confidence="0.968276">
(14) X,
(two@e_language)Olarnx(
(many@linguist)@lamy(
spoken_by@vary@varx)) A
xi-
(two@a_language)@lamx(
(many@linguist)@lamy(
spoken_by@vary@varx)) A
C
AY. Y @lamx(
(many@linguist)@lamy(
spoken_by@vary@varx))
(15) X.
(rnany@linguist)@larny(
(two@e_language)@lam.(
spoken_by@vary@varx)) A
X1)-+
(many@linguist)@lamy(
(two@alanguage)@lamx(
spoken_by@vary@varx)) A
AY. (rnany@linguist)@lamy(
Y ©lam(
spoken_by@vary@varx))
</equation>
<bodyText confidence="0.997329">
Mixed solutions, where the two quantifiers take dif-
ferent relative scope in the source and target clause
are not permitted by our constraints. For example,
</bodyText>
<equation confidence="0.9309575">
(16) provides no solution to the above constraints.
(16) X, 1--+
(two(ie_language)@lam.(
(rnany@linguist)@larny(
spoken_by@vary@varx))
(many@linguist)@lamy(
(two@a_language)@lamx(
spoken_by@vary@var.))
</equation>
<bodyText confidence="0.997351166666666">
2Notice that closure is applied to the solved form of
the combined constraints (i.e. (14) and (15) respectively)
of the two sentences here, rather than to solved forms of
(12) and (13) separately. This reflects the dependency
of the interpretation of the second sentence on material
in the first one.
</bodyText>
<page confidence="0.997367">
415
</page>
<bodyText confidence="0.999806333333333">
From the trees in (16) one cannot construct a con-
text function to be assigned to C which solves the
parallelism constraints in (13).
</bodyText>
<sectionHeader confidence="0.945292" genericHeader="method">
4 Comparison to other Theories
</sectionHeader>
<bodyText confidence="0.999988">
Standard theories for scope underspecification make
use of subtree relations and equality relations only.
Such relationships may be expressed on a level of a
separate constraint language, as in our case, or be in-
corporated into the semantic formalism itself, as it is
done for DRT by the system of UDRT (Reyle, 1993).
In UDRT one introduces &amp;quot;labels&amp;quot; that behave very
much like variables for DRSes. These labels figure
in equations as well as subordination constraints to
express scope relations between quantifiers. Equa-
tions and subordination constraints alone do not
provide us with a treatment of parallelism. An idea
that seems to come close to our notion of equal-
ity up-to constraints is the co-indexing technique in
(Reyle, 1995), where non-local forms of parallelism
are treated by dependency marking on labels. We
believe that our use of a separate constraint language
is more transparent.
A treatment for ellipsis interpretation which uses a
form of higher-order unification has been proposed
in (Dalrymple, Shieber, and Pereira, 1991) and ex-
tended to other kinds of parallel constructions by
(Gardent, Kohlhase, and van Leusen, 1996; Gardent
and Kohlhase, 1996). Though related in some re-
spects, there are formal differences and differences in
coverage between this approach and the one we pro-
pose. They use an algorithm for higher-order match-
ing rather than context unification and they do not
distinguish an object and meta language level. As
a consequence they need to resort to additional ma-
chinery for the treatment of scope relations, such
as Pereira&apos;s scoping calculus, described in (Shieber,
Pereira, and Dalrymple, 1996).
On the other hand, their approach treats a large
number of problems of the interaction of anaphora
and ellipsis, especially strict/sloppy ambiguities.
Our use of context unification does not allow us to
adopt their strategy of capturing such ambiguities
by admitting non-linear solutions to parallelism con-
straints.
</bodyText>
<sectionHeader confidence="0.999671" genericHeader="conclusions">
5 Outlook
</sectionHeader>
<bodyText confidence="0.999937">
Extensions of context unification may be useful for
our applications. For gapping constructions, con-
texts with multiple holes need to be considered. The
algorithm for context unification described in the
complete version of (Niehren, Pinkal, and Ruhrberg,
1997) makes use of contexts with multiple holes in
any case.
So far our treatment of ellipsis does not capture
strict—sloppy ambiguities if that ambiguity is not
postulated for the source clause of the ellipsis con-
struction. We believe that the ambiguity can be
integrated into the framework of context unifica-
tion without making such a problematic assump-
tion. This requires modifying the parallelism re-
quirements in an appropriate way. We hope that
while sticking to linear solutions only, one may be
able to introduce such ambiguities in a very con-
trolled way, thus avoiding the overgeneration prob-
lems that come from freely abstracting multiple vari-
able occurrences. This work is currently in progress,
and a deeper comparison between the approaches
has yet to be carried out.
An implementation of a semi-decision procedure for
context unification has been carried out by Jordi
Levy, and we applied it successfully to some sim-
ple ellipsis examples. Further experimentation is
needed. Hopefully there are decidable fragments of
the context unification problem that are empirically
adequate for the phenomena we wish to model.
</bodyText>
<sectionHeader confidence="0.997426" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.983242173913044">
Alshawi, H. and D. Crouch. 1992. Monotonic se-
mantic interpretation. In 30th Annual Meeting of
the Association of Computational Linguistics, pages
32-38.
Asher, Nick. 1993. Reference to abstract objects in
discourse. Kluwer, Dordrecht.
Baader, F. and J. Siekmann. 1993. Unification the-
ory. In D. Gabbay, C.J. Hogger, and J.A. Robinson,
editors, Handbook of Logic in Artificial Intelligence
and Logic Programming. Oxford University Press.
Bos, Johan, Bjorn Gamback, Christian Lieske,
Yoshiki Mori, Manfred Pinkal, and Karsten Worm.
1996. Compositional semantics in Verbmobil. In
Proceedings of the 16th International Conference on
Computational Linguistics, volume 1, pages 131-
136, Kobenhavn, Denmark, August. ACL.
Comon, Hubert. 1992. Completion of rewrite sys-
tems with membership constraints. In W. Kuich, ed-
itor, Proc. 19th Int. Coll. on Automata, Languages
and Programming, LNCS 623, Vienna. Springer-
Verlag.Copestake, A. and E. J. Briscoe. 1995. Semi pro-
ductive polysemy and sense extension. Journal of
Semantics, 12:15-67.
</reference>
<page confidence="0.988547">
416
</page>
<reference confidence="0.998356584615385">
Dalrymple, Mary, Stuart Shieber, and Fernando
Pereira. 1991. Ellipsis and higher order unification.
Linguistics and Philosophy, 14:399-452.
Dowty, D., R. Wall, and S. Peters. 1981. Introduc-
tion to Montague semantics. Reidel, Dordrecht.
Egg, M. and K. Lebeth. 1995. Semantic un-
derspecification and modifier attachment ambigui-
ties. In J. Kilbury and R. Wiese, editors, Inte-
grative Ansaetze in der Computerlinguistik. Duessel-
dorf, pages 19-24.
Gardent, CLire and Michael Kohlhase. 1996. Fo-
cus and higher—order unification. In Proceedings of
COLING-96, Copenhagen.
Gardent, Claire, Michael Kohlhase, and Noor van
Leusen. 1996. Corrections and Higher-Order
Unification. In Proceedings of KONVENS-96. De
Gruyter, Bielefeld, Germany, pages 268-279.
Goldfarb, W. D. 1981. The undecidability of the
second-order unification problem. Theoretical Com-
puter Science, 13:225-230.
Hirschbuehler, Paul. 1982. Vp deletion and across
the board quantifier scope. In J. Pustejovsky and
P. Sells, editors, NELS 12, University of Massachus-
setts, Amherst.
Kamp, H. and U. Reyle. 1993. From Discourse to
Logic. Kluwer, Dordrecht.
Levy, Jordi. 1996. Linear second order unification.
In Proceedings of the Conference on Rewriting Tech-
niques and Applications. Springer-Verlag.
Makanin, G.S. 1977. The problem of solvability of
equations in a free semigroup. Soviet Akad. Nauk
SSSR, 223(2).
Montague, R. 1974. The proper treatment of quan-
tification in ordinary english. In R. Thomason, ed-
itor, Formal Philosophy. Selected Papers of Richard
Montague. Yale University Press, New Haven and
London, pages 247-271.
Niehren, Joachim, Manfred Pinkal, and Peter
Ruhrberg. 1997. On equality up-to constraints over
finite trees, context unification and one-step rewrit-
ing. In Proceedings of the 14th International Confer-
ence on Automated Deduction. A complete verison is
available from http://www.ps.uni-sb.de/Thiehren.
In Press.
Pinkal, Manfred. 1995. Radical underspecification.
In Paul Dekker and Martin Stokhof, editors, Pro-
ceedings of the 10th Amsterdam Colloquium, Uni-
versity of Amsterdam.
Pustejovsky, J. 1995. The Generative Lexicon. MIT
press, Mambridge MA.
Reyle, Uwe. 1993. Dealing with ambiguities by un-
derspecification: construction, representation, and
deduction. Journal of Semantics, 10:123-179.
Reyle, Uwe. 1995. Co-indexing labelled DRSs to
represent and reason with ambiguities. In S. Pe-
ters and K. van Deemter, editors, Semantic Am-
biguity and Underspecification. CSLI Publications,
Stanford.
Schmidt-Schauf3, Manfred. 1994. Unification of
stratified second-order terms. Technical Report
internal report 12/94, J. W. Goethe Universitat,
Frankfurt, Germany.
Shieber, Stuart, Fernando Pereira, and Mary Dal-
rymple. 1996. Interactions of scope and ellipsis.
Linguistics and Philosophy, 19:527-552.
</reference>
<page confidence="0.99745">
417
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.716744">
<title confidence="0.999691">A Uniform Approach to Underspecification and Parallelism</title>
<author confidence="0.999762">Joachim Niehren</author>
<affiliation confidence="0.9898385">Programming Systems Lab Universitat des Saarlandes</affiliation>
<address confidence="0.948555">Saarbriicken, Germany</address>
<author confidence="0.984104">Manfred Pinkal</author>
<affiliation confidence="0.995549333333333">Department of Computational Linguistics Universitat des Saarlandes</affiliation>
<address confidence="0.965429">Saarbriicken, Germany</address>
<email confidence="0.997874">pinkalOcoli.uni-sb.de</email>
<author confidence="0.999522">Peter Ruhrberg</author>
<affiliation confidence="0.99597">Department of Computational Linguistics Universitat des Saarlandes</affiliation>
<address confidence="0.964995">Saarbriicken, Germany</address>
<email confidence="0.999126">peruOcoli.uni-sb.de</email>
<abstract confidence="0.9889535">We propose a unified framework in which to treat semantic underspecification and parallelism phenomena in discourse. The framework employs a constraint language that can express equality and subtree relations between finite trees. In addition, our constraint language can express the equality up-to relation over trees which captures parallelism between them. The constraints are solved by context unification. We demonstrate the use of our framework at the examples of quantifier scope, ellipsis, and their interaction.&apos;</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>H Alshawi</author>
<author>D Crouch</author>
</authors>
<title>Monotonic semantic interpretation.</title>
<date>1992</date>
<booktitle>In 30th Annual Meeting of the Association of Computational Linguistics,</booktitle>
<pages>32--38</pages>
<contexts>
<context position="1778" citStr="Alshawi and Crouch, 1992" startWordPosition="225" endWordPosition="228">ly specified form. During the last few years, the phenomenon of semantic underspecification, i.e. the incomplete availability of semantic information in processing, has received increasing attention. Several aspects of underspecification have been focussed upon, motivated mainly by computational considerations: the ambiguity and openness of lexical meaning (Pustejovsky, 1995; Copestake and Briscoe, 1995), referential underspecification (Asher, 1993), structural semantic underspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistency, coming with spoken input are coming more into the focus of semantic processing (Bos et al., 1996; Pinkal, 1995). The aim of semantic underspecification is to produce compact representations of the set of possible readings of a discourse. While </context>
</contexts>
<marker>Alshawi, Crouch, 1992</marker>
<rawString>Alshawi, H. and D. Crouch. 1992. Monotonic semantic interpretation. In 30th Annual Meeting of the Association of Computational Linguistics, pages 32-38.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nick Asher</author>
</authors>
<title>Reference to abstract objects in discourse.</title>
<date>1993</date>
<publisher>Kluwer,</publisher>
<location>Dordrecht.</location>
<contexts>
<context position="1607" citStr="Asher, 1993" startWordPosition="205" endWordPosition="206">ntics of natural languages (Montague, 1974) has assumed that semantic information, processed by composition and reasoning processes, is available in a completely specified form. During the last few years, the phenomenon of semantic underspecification, i.e. the incomplete availability of semantic information in processing, has received increasing attention. Several aspects of underspecification have been focussed upon, motivated mainly by computational considerations: the ambiguity and openness of lexical meaning (Pustejovsky, 1995; Copestake and Briscoe, 1995), referential underspecification (Asher, 1993), structural semantic underspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistency, coming with spoken input are coming more into the focus of semantic proce</context>
</contexts>
<marker>Asher, 1993</marker>
<rawString>Asher, Nick. 1993. Reference to abstract objects in discourse. Kluwer, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Baader</author>
<author>J Siekmann</author>
</authors>
<title>Unification theory. In</title>
<date>1993</date>
<booktitle>Handbook of Logic in Artificial Intelligence and Logic Programming.</booktitle>
<editor>D. Gabbay, C.J. Hogger, and J.A. Robinson, editors,</editor>
<publisher>Oxford University Press.</publisher>
<contexts>
<context position="7393" citStr="Baader and Siekmann, 1993" startWordPosition="1101" endWordPosition="1104">d to related approaches in computational semantics. Section 5 gives an outlook on future work. 2 Context Unification Context unification is the problem of solving context constraints over finite trees. The notion of context unification stems from (Levy, 1996) whereas the problem originates from (Comon, 1992) and (Schmidt-Schauf3, 1994). Context unification has been formally defined and investigated by the authors in (Niehren, Pinkal, and Ruhrberg, 1997). Here, we select and summarize relevant results on context unification from the latter. Context unification subsumes string unification (see (Baader and Siekmann, 1993) for an overview) and is subsumed by linear second-order unification which has been independently proposed by (Levy, 1996) and (Pinkal, 1995). The decidability of context unification is an open problem. String unification has been proved decidable by (Makanin, 1977). The decidability of linear second-order unification is an open problem too whereas second-order unification is known to be undecidable (Goldfarb, 1981). The syntax and semantics of context constraints are defined as follows. We assume an infinite set of firstorder variables ranged over by X ,Y, Z, an infinite set of second-order v</context>
</contexts>
<marker>Baader, Siekmann, 1993</marker>
<rawString>Baader, F. and J. Siekmann. 1993. Unification theory. In D. Gabbay, C.J. Hogger, and J.A. Robinson, editors, Handbook of Logic in Artificial Intelligence and Logic Programming. Oxford University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Johan Bos</author>
<author>Bjorn Gamback</author>
<author>Christian Lieske</author>
<author>Yoshiki Mori</author>
<author>Manfred Pinkal</author>
<author>Karsten Worm</author>
</authors>
<title>Compositional semantics in Verbmobil.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th International Conference on Computational Linguistics,</booktitle>
<volume>1</volume>
<pages>131--136</pages>
<publisher>ACL.</publisher>
<location>Kobenhavn, Denmark,</location>
<contexts>
<context position="2230" citStr="Bos et al., 1996" startWordPosition="299" endWordPosition="302">tural semantic underspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistency, coming with spoken input are coming more into the focus of semantic processing (Bos et al., 1996; Pinkal, 1995). The aim of semantic underspecification is to produce compact representations of the set of possible readings of a discourse. While the readings of a discourse may be only partially known, the interpretations of its components are often strongly correlated. In this paper, we are concerned with a uniform treatment of underspecification and of phenomena of discourse-semantic parallelism. Some typical parallelism phenomena are ellipsis, corrections, and variations. We illustrate them here by some examples (focus-bearing phrases are underlined): (1) John speaks Chinese. Bill too. (</context>
</contexts>
<marker>Bos, Gamback, Lieske, Mori, Pinkal, Worm, 1996</marker>
<rawString>Bos, Johan, Bjorn Gamback, Christian Lieske, Yoshiki Mori, Manfred Pinkal, and Karsten Worm. 1996. Compositional semantics in Verbmobil. In Proceedings of the 16th International Conference on Computational Linguistics, volume 1, pages 131-136, Kobenhavn, Denmark, August. ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hubert Comon</author>
</authors>
<title>Completion of rewrite systems with membership constraints.</title>
<date>1992</date>
<booktitle>Proc. 19th Int. Coll. on Automata, Languages and Programming, LNCS 623,</booktitle>
<editor>In W. Kuich, editor,</editor>
<publisher>Springer-</publisher>
<location>Vienna.</location>
<contexts>
<context position="7076" citStr="Comon, 1992" startWordPosition="1059" endWordPosition="1060">act. In Section 2, we will describe context unification, and present some results about its formal properties and its relation to other formalisms. Section 3 demonstrates the application to scope underspecification, to ellipsis, and to the combined cases. In Section 4, the proposed treatment is compared to related approaches in computational semantics. Section 5 gives an outlook on future work. 2 Context Unification Context unification is the problem of solving context constraints over finite trees. The notion of context unification stems from (Levy, 1996) whereas the problem originates from (Comon, 1992) and (Schmidt-Schauf3, 1994). Context unification has been formally defined and investigated by the authors in (Niehren, Pinkal, and Ruhrberg, 1997). Here, we select and summarize relevant results on context unification from the latter. Context unification subsumes string unification (see (Baader and Siekmann, 1993) for an overview) and is subsumed by linear second-order unification which has been independently proposed by (Levy, 1996) and (Pinkal, 1995). The decidability of context unification is an open problem. String unification has been proved decidable by (Makanin, 1977). The decidabilit</context>
</contexts>
<marker>Comon, 1992</marker>
<rawString>Comon, Hubert. 1992. Completion of rewrite systems with membership constraints. In W. Kuich, editor, Proc. 19th Int. Coll. on Automata, Languages and Programming, LNCS 623, Vienna. Springer-</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Verlag Copestake</author>
<author>E J Briscoe</author>
</authors>
<title>Semi productive polysemy and sense extension.</title>
<date>1995</date>
<journal>Journal of Semantics,</journal>
<pages>12--15</pages>
<contexts>
<context position="1561" citStr="Copestake and Briscoe, 1995" startWordPosition="199" endWordPosition="202"> interaction.&apos; 1 Introduction Traditional model-theoretic semantics of natural languages (Montague, 1974) has assumed that semantic information, processed by composition and reasoning processes, is available in a completely specified form. During the last few years, the phenomenon of semantic underspecification, i.e. the incomplete availability of semantic information in processing, has received increasing attention. Several aspects of underspecification have been focussed upon, motivated mainly by computational considerations: the ambiguity and openness of lexical meaning (Pustejovsky, 1995; Copestake and Briscoe, 1995), referential underspecification (Asher, 1993), structural semantic underspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistency, coming with spoken input ar</context>
</contexts>
<marker>Copestake, Briscoe, 1995</marker>
<rawString>Verlag.Copestake, A. and E. J. Briscoe. 1995. Semi productive polysemy and sense extension. Journal of Semantics, 12:15-67.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>Stuart Shieber</author>
<author>Fernando Pereira</author>
</authors>
<title>Ellipsis and higher order unification. Linguistics and Philosophy,</title>
<date>1991</date>
<pages>14--399</pages>
<contexts>
<context position="22835" citStr="Dalrymple, Shieber, and Pereira, 1991" startWordPosition="3617" endWordPosition="3621">bels figure in equations as well as subordination constraints to express scope relations between quantifiers. Equations and subordination constraints alone do not provide us with a treatment of parallelism. An idea that seems to come close to our notion of equality up-to constraints is the co-indexing technique in (Reyle, 1995), where non-local forms of parallelism are treated by dependency marking on labels. We believe that our use of a separate constraint language is more transparent. A treatment for ellipsis interpretation which uses a form of higher-order unification has been proposed in (Dalrymple, Shieber, and Pereira, 1991) and extended to other kinds of parallel constructions by (Gardent, Kohlhase, and van Leusen, 1996; Gardent and Kohlhase, 1996). Though related in some respects, there are formal differences and differences in coverage between this approach and the one we propose. They use an algorithm for higher-order matching rather than context unification and they do not distinguish an object and meta language level. As a consequence they need to resort to additional machinery for the treatment of scope relations, such as Pereira&apos;s scoping calculus, described in (Shieber, Pereira, and Dalrymple, 1996). On</context>
</contexts>
<marker>Dalrymple, Shieber, Pereira, 1991</marker>
<rawString>Dalrymple, Mary, Stuart Shieber, and Fernando Pereira. 1991. Ellipsis and higher order unification. Linguistics and Philosophy, 14:399-452.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Dowty</author>
<author>R Wall</author>
<author>S Peters</author>
</authors>
<title>Introduction to Montague semantics.</title>
<date>1981</date>
<location>Reidel, Dordrecht.</location>
<contexts>
<context position="4858" citStr="Dowty, Wall, and Peters, 1981" startWordPosition="713" endWordPosition="717">two specific Asian languages are widely known among linguists), or it is the narrow scope existential one (many linguists speak two European languages, and many linguists speak two Asian languages). A natural approach for describing underspecified semantic information is to use an appropriate constraint language. We use constraints interpreted over finite trees. A tree itself represents a formula of some semantic representation language. This approach is very flexible in allowing various choices for the particular semantic representation language, such as first-order logic, intensional logic (Dowty, Wall, and Peters, 1981), or Discourse Representation Theory, DRT, (Kamp and Reyle, 1993). The constraint approach contrasts with theories such as Reyles UDRT (1993) which stresses the integration of the levels of semantic representation language and underspecified descriptions. For a description language we propose the use of context constraints over finite trees which have been investigated in (Niehren, Pinkal, and Ruhrberg, 1997). This constraint language can express equality and subtree relations between finite trees. More generally it can express the &amp;quot;equality up-to&amp;quot; relation over trees, which captures (non-loc</context>
<context position="13953" citStr="Dowty, Wall, and Peters, 1981" startWordPosition="2230" endWordPosition="2234">7) contains discussions of two algorithms for context unification. For a discussion on decidable fragments of context constraints, we also refer to this paper. 3 Underspecification and Parallelism In this section, we discuss the use of context unification for treating underspecification and parallelism by some concrete examples. The set of solutions of a context constraint represents the set of possible readings of a given discourse. The trees assigned by the solutions represent expressions of some semantic representation language. Here, we choose (extensional) typed higher-order logic, HOL, (Dowty, Wall, and Peters, 1981). However, any other logical language can be used in principle, so long as we can represent its syntax in terms of finite trees. It is important to keep our semantic representation language (HOL) clearly separate from our description language (context constraints over finite trees). We assume an infinite set of HOL-variables ranged over by x and y. The signature of context constraints contains a unary function symbol lam and a constant var. per HOL-variable x. Futhermore, we assume a binary function symbol @ that we write in left associative infix notation and constants like john, language, e</context>
</contexts>
<marker>Dowty, Wall, Peters, 1981</marker>
<rawString>Dowty, D., R. Wall, and S. Peters. 1981. Introduction to Montague semantics. Reidel, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Egg</author>
<author>K Lebeth</author>
</authors>
<title>Semantic underspecification and modifier attachment ambiguities.</title>
<date>1995</date>
<booktitle>Integrative Ansaetze in der Computerlinguistik. Duesseldorf,</booktitle>
<pages>19--24</pages>
<editor>In J. Kilbury and R. Wiese, editors,</editor>
<contexts>
<context position="1702" citStr="Egg and Lebeth, 1995" startWordPosition="214" endWordPosition="217">cessed by composition and reasoning processes, is available in a completely specified form. During the last few years, the phenomenon of semantic underspecification, i.e. the incomplete availability of semantic information in processing, has received increasing attention. Several aspects of underspecification have been focussed upon, motivated mainly by computational considerations: the ambiguity and openness of lexical meaning (Pustejovsky, 1995; Copestake and Briscoe, 1995), referential underspecification (Asher, 1993), structural semantic underspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistency, coming with spoken input are coming more into the focus of semantic processing (Bos et al., 1996; Pinkal, 1995). The aim of semantic underspecification is to produce co</context>
</contexts>
<marker>Egg, Lebeth, 1995</marker>
<rawString>Egg, M. and K. Lebeth. 1995. Semantic underspecification and modifier attachment ambiguities. In J. Kilbury and R. Wiese, editors, Integrative Ansaetze in der Computerlinguistik. Duesseldorf, pages 19-24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>CLire Gardent</author>
<author>Michael Kohlhase</author>
</authors>
<title>Focus and higher—order unification.</title>
<date>1996</date>
<booktitle>In Proceedings of COLING-96,</booktitle>
<location>Copenhagen.</location>
<contexts>
<context position="22963" citStr="Gardent and Kohlhase, 1996" startWordPosition="3638" endWordPosition="3641">constraints alone do not provide us with a treatment of parallelism. An idea that seems to come close to our notion of equality up-to constraints is the co-indexing technique in (Reyle, 1995), where non-local forms of parallelism are treated by dependency marking on labels. We believe that our use of a separate constraint language is more transparent. A treatment for ellipsis interpretation which uses a form of higher-order unification has been proposed in (Dalrymple, Shieber, and Pereira, 1991) and extended to other kinds of parallel constructions by (Gardent, Kohlhase, and van Leusen, 1996; Gardent and Kohlhase, 1996). Though related in some respects, there are formal differences and differences in coverage between this approach and the one we propose. They use an algorithm for higher-order matching rather than context unification and they do not distinguish an object and meta language level. As a consequence they need to resort to additional machinery for the treatment of scope relations, such as Pereira&apos;s scoping calculus, described in (Shieber, Pereira, and Dalrymple, 1996). On the other hand, their approach treats a large number of problems of the interaction of anaphora and ellipsis, especially strict</context>
</contexts>
<marker>Gardent, Kohlhase, 1996</marker>
<rawString>Gardent, CLire and Michael Kohlhase. 1996. Focus and higher—order unification. In Proceedings of COLING-96, Copenhagen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claire Gardent</author>
<author>Michael Kohlhase</author>
<author>Noor van Leusen</author>
</authors>
<title>Corrections and Higher-Order Unification.</title>
<date>1996</date>
<booktitle>In Proceedings of KONVENS-96. De Gruyter,</booktitle>
<pages>268--279</pages>
<location>Bielefeld, Germany,</location>
<marker>Gardent, Kohlhase, van Leusen, 1996</marker>
<rawString>Gardent, Claire, Michael Kohlhase, and Noor van Leusen. 1996. Corrections and Higher-Order Unification. In Proceedings of KONVENS-96. De Gruyter, Bielefeld, Germany, pages 268-279.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W D Goldfarb</author>
</authors>
<title>The undecidability of the second-order unification problem.</title>
<date>1981</date>
<journal>Theoretical Computer Science,</journal>
<pages>13--225</pages>
<contexts>
<context position="7812" citStr="Goldfarb, 1981" startWordPosition="1164" endWordPosition="1165">Pinkal, and Ruhrberg, 1997). Here, we select and summarize relevant results on context unification from the latter. Context unification subsumes string unification (see (Baader and Siekmann, 1993) for an overview) and is subsumed by linear second-order unification which has been independently proposed by (Levy, 1996) and (Pinkal, 1995). The decidability of context unification is an open problem. String unification has been proved decidable by (Makanin, 1977). The decidability of linear second-order unification is an open problem too whereas second-order unification is known to be undecidable (Goldfarb, 1981). The syntax and semantics of context constraints are defined as follows. We assume an infinite set of firstorder variables ranged over by X ,Y, Z, an infinite set of second-order variables ranged over by C, and a set of function symbols ranged over by f, that are equipped with an arity n &gt; 0. Nullary function symbols are called constants. Context constraints co are defined by the following abstract syntax: t ::= X I f(i , . • • , tn) I C(t) so t = I so A so&apos; A (second-order) term t is either a first-order variable X, a construction ALI , , tn) where the arity of f is n, or an application C(t)</context>
</contexts>
<marker>Goldfarb, 1981</marker>
<rawString>Goldfarb, W. D. 1981. The undecidability of the second-order unification problem. Theoretical Computer Science, 13:225-230.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Hirschbuehler</author>
</authors>
<title>Vp deletion and across the board quantifier scope.</title>
<date>1982</date>
<editor>In J. Pustejovsky and P. Sells, editors, NELS 12,</editor>
<institution>University of Massachussetts,</institution>
<location>Amherst.</location>
<contexts>
<context position="3442" citStr="Hirschbuehler, 1982" startWordPosition="495" endWordPosition="496">l too. (2) John speaks Japanese. - No, he speaks Chinese. (3) ??? - Bill speaks Chinese, too. Parallelism guides the interpretation process for the above discourses. This is most obvious in the case of ellipsis interpretation (1), but is also evident for the resolution of the anaphor in the correction in (2), and in the variation case (3) where the context is unknown and has to be inferred. The challenge is to integrate a treatment of parallelism with underspecification, such as in cases of the interaction of scope and ellipsis. Problematic examples like (4) have been brought to attention by (Hirschbuehler, 1982). The example demonstrated that earlier treatments of ellipsis based on copying of the content of constituents are insufficient for such kinds of parallelism. (4) Two European languages are spoken by many linguists, and two Asian ones (are spoken by many linguists), too. 410 The first clause of (4) is scope-ambiguous between two readings. The second, elliptic one, is too. Its interpretation is indicated by the part in parentheses. The parallelism imposed by ellipsis requires the scope of the quantifiers in the elliptical clause to be analogous to the scope of the quantifiers in the antecedent </context>
</contexts>
<marker>Hirschbuehler, 1982</marker>
<rawString>Hirschbuehler, Paul. 1982. Vp deletion and across the board quantifier scope. In J. Pustejovsky and P. Sells, editors, NELS 12, University of Massachussetts, Amherst.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Kamp</author>
<author>U Reyle</author>
</authors>
<title>From Discourse to Logic.</title>
<date>1993</date>
<publisher>Kluwer,</publisher>
<location>Dordrecht.</location>
<contexts>
<context position="4924" citStr="Kamp and Reyle, 1993" startWordPosition="724" endWordPosition="727">he narrow scope existential one (many linguists speak two European languages, and many linguists speak two Asian languages). A natural approach for describing underspecified semantic information is to use an appropriate constraint language. We use constraints interpreted over finite trees. A tree itself represents a formula of some semantic representation language. This approach is very flexible in allowing various choices for the particular semantic representation language, such as first-order logic, intensional logic (Dowty, Wall, and Peters, 1981), or Discourse Representation Theory, DRT, (Kamp and Reyle, 1993). The constraint approach contrasts with theories such as Reyles UDRT (1993) which stresses the integration of the levels of semantic representation language and underspecified descriptions. For a description language we propose the use of context constraints over finite trees which have been investigated in (Niehren, Pinkal, and Ruhrberg, 1997). This constraint language can express equality and subtree relations between finite trees. More generally it can express the &amp;quot;equality up-to&amp;quot; relation over trees, which captures (non-local) parallelism between trees. The general case of equality up-to </context>
</contexts>
<marker>Kamp, Reyle, 1993</marker>
<rawString>Kamp, H. and U. Reyle. 1993. From Discourse to Logic. Kluwer, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jordi Levy</author>
</authors>
<title>Linear second order unification.</title>
<date>1996</date>
<booktitle>In Proceedings of the Conference on Rewriting Techniques and Applications.</booktitle>
<publisher>Springer-Verlag.</publisher>
<contexts>
<context position="5753" citStr="Levy, 1996" startWordPosition="852" endWordPosition="853">e propose the use of context constraints over finite trees which have been investigated in (Niehren, Pinkal, and Ruhrberg, 1997). This constraint language can express equality and subtree relations between finite trees. More generally it can express the &amp;quot;equality up-to&amp;quot; relation over trees, which captures (non-local) parallelism between trees. The general case of equality up-to constraints cannot be handled by a system using subtree plus equality constraints only. The problem of solving context constraints is known as context unification, which is a subcase of linear second-order unification (Levy, 1996; Pinkal, 1995). There is a complete and correct semi-decision procedure for solving context constraints. Context unification allows to treat the interaction of scope and ellipsis. Note that in example (4) the trees representing the semantics of the source and target clause must be equal up to the positions corresponding to the contrasting elements (two European languages / two Asian languages). Thus, this is a case where the additional expressive power of context constraints is crucial. In this paper, we elaborate on the example of scope and ellipsis interaction. The framework appears to exte</context>
<context position="7026" citStr="Levy, 1996" startWordPosition="1052" endWordPosition="1053">fication and discourse-semantic parallelism interact. In Section 2, we will describe context unification, and present some results about its formal properties and its relation to other formalisms. Section 3 demonstrates the application to scope underspecification, to ellipsis, and to the combined cases. In Section 4, the proposed treatment is compared to related approaches in computational semantics. Section 5 gives an outlook on future work. 2 Context Unification Context unification is the problem of solving context constraints over finite trees. The notion of context unification stems from (Levy, 1996) whereas the problem originates from (Comon, 1992) and (Schmidt-Schauf3, 1994). Context unification has been formally defined and investigated by the authors in (Niehren, Pinkal, and Ruhrberg, 1997). Here, we select and summarize relevant results on context unification from the latter. Context unification subsumes string unification (see (Baader and Siekmann, 1993) for an overview) and is subsumed by linear second-order unification which has been independently proposed by (Levy, 1996) and (Pinkal, 1995). The decidability of context unification is an open problem. String unification has been pr</context>
</contexts>
<marker>Levy, 1996</marker>
<rawString>Levy, Jordi. 1996. Linear second order unification. In Proceedings of the Conference on Rewriting Techniques and Applications. Springer-Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G S Makanin</author>
</authors>
<title>The problem of solvability of equations in a free semigroup. Soviet Akad. Nauk SSSR,</title>
<date>1977</date>
<pages>223--2</pages>
<contexts>
<context position="7659" citStr="Makanin, 1977" startWordPosition="1143" endWordPosition="1144">m originates from (Comon, 1992) and (Schmidt-Schauf3, 1994). Context unification has been formally defined and investigated by the authors in (Niehren, Pinkal, and Ruhrberg, 1997). Here, we select and summarize relevant results on context unification from the latter. Context unification subsumes string unification (see (Baader and Siekmann, 1993) for an overview) and is subsumed by linear second-order unification which has been independently proposed by (Levy, 1996) and (Pinkal, 1995). The decidability of context unification is an open problem. String unification has been proved decidable by (Makanin, 1977). The decidability of linear second-order unification is an open problem too whereas second-order unification is known to be undecidable (Goldfarb, 1981). The syntax and semantics of context constraints are defined as follows. We assume an infinite set of firstorder variables ranged over by X ,Y, Z, an infinite set of second-order variables ranged over by C, and a set of function symbols ranged over by f, that are equipped with an arity n &gt; 0. Nullary function symbols are called constants. Context constraints co are defined by the following abstract syntax: t ::= X I f(i , . • • , tn) I C(t) s</context>
</contexts>
<marker>Makanin, 1977</marker>
<rawString>Makanin, G.S. 1977. The problem of solvability of equations in a free semigroup. Soviet Akad. Nauk SSSR, 223(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Montague</author>
</authors>
<title>The proper treatment of quantification in ordinary english. In</title>
<date>1974</date>
<pages>247--271</pages>
<editor>R. Thomason, editor,</editor>
<publisher>Yale University Press,</publisher>
<location>New</location>
<contexts>
<context position="1038" citStr="Montague, 1974" startWordPosition="129" endWordPosition="130">ct We propose a unified framework in which to treat semantic underspecification and parallelism phenomena in discourse. The framework employs a constraint language that can express equality and subtree relations between finite trees. In addition, our constraint language can express the equality up-to relation over trees which captures parallelism between them. The constraints are solved by context unification. We demonstrate the use of our framework at the examples of quantifier scope, ellipsis, and their interaction.&apos; 1 Introduction Traditional model-theoretic semantics of natural languages (Montague, 1974) has assumed that semantic information, processed by composition and reasoning processes, is available in a completely specified form. During the last few years, the phenomenon of semantic underspecification, i.e. the incomplete availability of semantic information in processing, has received increasing attention. Several aspects of underspecification have been focussed upon, motivated mainly by computational considerations: the ambiguity and openness of lexical meaning (Pustejovsky, 1995; Copestake and Briscoe, 1995), referential underspecification (Asher, 1993), structural semantic underspec</context>
</contexts>
<marker>Montague, 1974</marker>
<rawString>Montague, R. 1974. The proper treatment of quantification in ordinary english. In R. Thomason, editor, Formal Philosophy. Selected Papers of Richard Montague. Yale University Press, New Haven and London, pages 247-271.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joachim Niehren</author>
<author>Manfred Pinkal</author>
<author>Peter Ruhrberg</author>
</authors>
<title>On equality up-to constraints over finite trees, context unification and one-step rewriting.</title>
<date>1997</date>
<booktitle>In Proceedings of the 14th International Conference on Automated</booktitle>
<publisher>In Press.</publisher>
<contexts>
<context position="5270" citStr="Niehren, Pinkal, and Ruhrberg, 1997" startWordPosition="774" endWordPosition="778">e semantic representation language. This approach is very flexible in allowing various choices for the particular semantic representation language, such as first-order logic, intensional logic (Dowty, Wall, and Peters, 1981), or Discourse Representation Theory, DRT, (Kamp and Reyle, 1993). The constraint approach contrasts with theories such as Reyles UDRT (1993) which stresses the integration of the levels of semantic representation language and underspecified descriptions. For a description language we propose the use of context constraints over finite trees which have been investigated in (Niehren, Pinkal, and Ruhrberg, 1997). This constraint language can express equality and subtree relations between finite trees. More generally it can express the &amp;quot;equality up-to&amp;quot; relation over trees, which captures (non-local) parallelism between trees. The general case of equality up-to constraints cannot be handled by a system using subtree plus equality constraints only. The problem of solving context constraints is known as context unification, which is a subcase of linear second-order unification (Levy, 1996; Pinkal, 1995). There is a complete and correct semi-decision procedure for solving context constraints. Context uni</context>
<context position="7223" citStr="Niehren, Pinkal, and Ruhrberg, 1997" startWordPosition="1077" endWordPosition="1081">on to other formalisms. Section 3 demonstrates the application to scope underspecification, to ellipsis, and to the combined cases. In Section 4, the proposed treatment is compared to related approaches in computational semantics. Section 5 gives an outlook on future work. 2 Context Unification Context unification is the problem of solving context constraints over finite trees. The notion of context unification stems from (Levy, 1996) whereas the problem originates from (Comon, 1992) and (Schmidt-Schauf3, 1994). Context unification has been formally defined and investigated by the authors in (Niehren, Pinkal, and Ruhrberg, 1997). Here, we select and summarize relevant results on context unification from the latter. Context unification subsumes string unification (see (Baader and Siekmann, 1993) for an overview) and is subsumed by linear second-order unification which has been independently proposed by (Levy, 1996) and (Pinkal, 1995). The decidability of context unification is an open problem. String unification has been proved decidable by (Makanin, 1977). The decidability of linear second-order unification is an open problem too whereas second-order unification is known to be undecidable (Goldfarb, 1981). The synta</context>
<context position="13325" citStr="Niehren, Pinkal, and Ruhrberg, 1997" startWordPosition="2135" endWordPosition="2139">imitation rule. Projection produces a clash of two rigid head symbols @ and j. Imitation presents two possibilities for locating the argument j of the context variable C as a subtree of the two arguments of the rigid head symbol O. Both alternatives lead to new rigid—flexible situations. The first alternative leads to failure (via further projection or imitation) as @(s, c) does not contain j as a subtree. The second leads to success by another projection step. The unique solution of the constraint in figure 2 can be described as follows: X, X cs •—+ j, C AY.@(@(s, c), Y) The full version of (Niehren, Pinkal, and Ruhrberg, 1997) contains discussions of two algorithms for context unification. For a discussion on decidable fragments of context constraints, we also refer to this paper. 3 Underspecification and Parallelism In this section, we discuss the use of context unification for treating underspecification and parallelism by some concrete examples. The set of solutions of a context constraint represents the set of possible readings of a given discourse. The trees assigned by the solutions represent expressions of some semantic representation language. Here, we choose (extensional) typed higher-order logic, HOL, (D</context>
<context position="24019" citStr="Niehren, Pinkal, and Ruhrberg, 1997" startWordPosition="3799" endWordPosition="3803">ibed in (Shieber, Pereira, and Dalrymple, 1996). On the other hand, their approach treats a large number of problems of the interaction of anaphora and ellipsis, especially strict/sloppy ambiguities. Our use of context unification does not allow us to adopt their strategy of capturing such ambiguities by admitting non-linear solutions to parallelism constraints. 5 Outlook Extensions of context unification may be useful for our applications. For gapping constructions, contexts with multiple holes need to be considered. The algorithm for context unification described in the complete version of (Niehren, Pinkal, and Ruhrberg, 1997) makes use of contexts with multiple holes in any case. So far our treatment of ellipsis does not capture strict—sloppy ambiguities if that ambiguity is not postulated for the source clause of the ellipsis construction. We believe that the ambiguity can be integrated into the framework of context unification without making such a problematic assumption. This requires modifying the parallelism requirements in an appropriate way. We hope that while sticking to linear solutions only, one may be able to introduce such ambiguities in a very controlled way, thus avoiding the overgeneration problems</context>
</contexts>
<marker>Niehren, Pinkal, Ruhrberg, 1997</marker>
<rawString>Niehren, Joachim, Manfred Pinkal, and Peter Ruhrberg. 1997. On equality up-to constraints over finite trees, context unification and one-step rewriting. In Proceedings of the 14th International Conference on Automated Deduction. A complete verison is available from http://www.ps.uni-sb.de/Thiehren. In Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manfred Pinkal</author>
</authors>
<title>Radical underspecification.</title>
<date>1995</date>
<booktitle>Proceedings of the 10th</booktitle>
<editor>In Paul Dekker and Martin Stokhof, editors,</editor>
<institution>Amsterdam Colloquium, University of Amsterdam.</institution>
<contexts>
<context position="2245" citStr="Pinkal, 1995" startWordPosition="303" endWordPosition="304">erspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistency, coming with spoken input are coming more into the focus of semantic processing (Bos et al., 1996; Pinkal, 1995). The aim of semantic underspecification is to produce compact representations of the set of possible readings of a discourse. While the readings of a discourse may be only partially known, the interpretations of its components are often strongly correlated. In this paper, we are concerned with a uniform treatment of underspecification and of phenomena of discourse-semantic parallelism. Some typical parallelism phenomena are ellipsis, corrections, and variations. We illustrate them here by some examples (focus-bearing phrases are underlined): (1) John speaks Chinese. Bill too. (2) John speaks </context>
<context position="5768" citStr="Pinkal, 1995" startWordPosition="854" endWordPosition="855">e use of context constraints over finite trees which have been investigated in (Niehren, Pinkal, and Ruhrberg, 1997). This constraint language can express equality and subtree relations between finite trees. More generally it can express the &amp;quot;equality up-to&amp;quot; relation over trees, which captures (non-local) parallelism between trees. The general case of equality up-to constraints cannot be handled by a system using subtree plus equality constraints only. The problem of solving context constraints is known as context unification, which is a subcase of linear second-order unification (Levy, 1996; Pinkal, 1995). There is a complete and correct semi-decision procedure for solving context constraints. Context unification allows to treat the interaction of scope and ellipsis. Note that in example (4) the trees representing the semantics of the source and target clause must be equal up to the positions corresponding to the contrasting elements (two European languages / two Asian languages). Thus, this is a case where the additional expressive power of context constraints is crucial. In this paper, we elaborate on the example of scope and ellipsis interaction. The framework appears to extend, however, to</context>
<context position="7534" citStr="Pinkal, 1995" startWordPosition="1124" endWordPosition="1125"> solving context constraints over finite trees. The notion of context unification stems from (Levy, 1996) whereas the problem originates from (Comon, 1992) and (Schmidt-Schauf3, 1994). Context unification has been formally defined and investigated by the authors in (Niehren, Pinkal, and Ruhrberg, 1997). Here, we select and summarize relevant results on context unification from the latter. Context unification subsumes string unification (see (Baader and Siekmann, 1993) for an overview) and is subsumed by linear second-order unification which has been independently proposed by (Levy, 1996) and (Pinkal, 1995). The decidability of context unification is an open problem. String unification has been proved decidable by (Makanin, 1977). The decidability of linear second-order unification is an open problem too whereas second-order unification is known to be undecidable (Goldfarb, 1981). The syntax and semantics of context constraints are defined as follows. We assume an infinite set of firstorder variables ranged over by X ,Y, Z, an infinite set of second-order variables ranged over by C, and a set of function symbols ranged over by f, that are equipped with an arity n &gt; 0. Nullary function symbols ar</context>
</contexts>
<marker>Pinkal, 1995</marker>
<rawString>Pinkal, Manfred. 1995. Radical underspecification. In Paul Dekker and Martin Stokhof, editors, Proceedings of the 10th Amsterdam Colloquium, University of Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
</authors>
<title>The Generative Lexicon.</title>
<date>1995</date>
<publisher>MIT press,</publisher>
<location>Mambridge MA.</location>
<contexts>
<context position="1531" citStr="Pustejovsky, 1995" startWordPosition="197" endWordPosition="198">ellipsis, and their interaction.&apos; 1 Introduction Traditional model-theoretic semantics of natural languages (Montague, 1974) has assumed that semantic information, processed by composition and reasoning processes, is available in a completely specified form. During the last few years, the phenomenon of semantic underspecification, i.e. the incomplete availability of semantic information in processing, has received increasing attention. Several aspects of underspecification have been focussed upon, motivated mainly by computational considerations: the ambiguity and openness of lexical meaning (Pustejovsky, 1995; Copestake and Briscoe, 1995), referential underspecification (Asher, 1993), structural semantic underspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistenc</context>
</contexts>
<marker>Pustejovsky, 1995</marker>
<rawString>Pustejovsky, J. 1995. The Generative Lexicon. MIT press, Mambridge MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Uwe Reyle</author>
</authors>
<title>Dealing with ambiguities by underspecification: construction, representation, and deduction.</title>
<date>1993</date>
<journal>Journal of Semantics,</journal>
<pages>10--123</pages>
<contexts>
<context position="1792" citStr="Reyle, 1993" startWordPosition="229" endWordPosition="230">the last few years, the phenomenon of semantic underspecification, i.e. the incomplete availability of semantic information in processing, has received increasing attention. Several aspects of underspecification have been focussed upon, motivated mainly by computational considerations: the ambiguity and openness of lexical meaning (Pustejovsky, 1995; Copestake and Briscoe, 1995), referential underspecification (Asher, 1993), structural semantic underspecification caused by syntactic ambiguities (Egg and Lebeth, 1995), and by the underdetermination of scope relations (Alshawi and Crouch, 1992; Reyle, 1993). In addition, external factors such as insufficient coverage &apos;The research reported in this paper has been supported by the SFB 378 at the Universitit des Saarlandes and the Esprit Working Group CCL II (EP 22457). of the grammar, time-constraints for parsing, and most importantly the kind of incompleteness, uncertainty, and inconsistency, coming with spoken input are coming more into the focus of semantic processing (Bos et al., 1996; Pinkal, 1995). The aim of semantic underspecification is to produce compact representations of the set of possible readings of a discourse. While the readings o</context>
<context position="4924" citStr="Reyle, 1993" startWordPosition="726" endWordPosition="727"> scope existential one (many linguists speak two European languages, and many linguists speak two Asian languages). A natural approach for describing underspecified semantic information is to use an appropriate constraint language. We use constraints interpreted over finite trees. A tree itself represents a formula of some semantic representation language. This approach is very flexible in allowing various choices for the particular semantic representation language, such as first-order logic, intensional logic (Dowty, Wall, and Peters, 1981), or Discourse Representation Theory, DRT, (Kamp and Reyle, 1993). The constraint approach contrasts with theories such as Reyles UDRT (1993) which stresses the integration of the levels of semantic representation language and underspecified descriptions. For a description language we propose the use of context constraints over finite trees which have been investigated in (Niehren, Pinkal, and Ruhrberg, 1997). This constraint language can express equality and subtree relations between finite trees. More generally it can express the &amp;quot;equality up-to&amp;quot; relation over trees, which captures (non-local) parallelism between trees. The general case of equality up-to </context>
<context position="22108" citStr="Reyle, 1993" startWordPosition="3508" endWordPosition="3509">2) and (13) separately. This reflects the dependency of the interpretation of the second sentence on material in the first one. 415 From the trees in (16) one cannot construct a context function to be assigned to C which solves the parallelism constraints in (13). 4 Comparison to other Theories Standard theories for scope underspecification make use of subtree relations and equality relations only. Such relationships may be expressed on a level of a separate constraint language, as in our case, or be incorporated into the semantic formalism itself, as it is done for DRT by the system of UDRT (Reyle, 1993). In UDRT one introduces &amp;quot;labels&amp;quot; that behave very much like variables for DRSes. These labels figure in equations as well as subordination constraints to express scope relations between quantifiers. Equations and subordination constraints alone do not provide us with a treatment of parallelism. An idea that seems to come close to our notion of equality up-to constraints is the co-indexing technique in (Reyle, 1995), where non-local forms of parallelism are treated by dependency marking on labels. We believe that our use of a separate constraint language is more transparent. A treatment for el</context>
</contexts>
<marker>Reyle, 1993</marker>
<rawString>Reyle, Uwe. 1993. Dealing with ambiguities by underspecification: construction, representation, and deduction. Journal of Semantics, 10:123-179.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Uwe Reyle</author>
</authors>
<title>Co-indexing labelled DRSs to represent and reason with ambiguities.</title>
<date>1995</date>
<booktitle>Semantic Ambiguity and Underspecification.</booktitle>
<editor>In S. Peters and K. van Deemter, editors,</editor>
<publisher>CSLI Publications, Stanford.</publisher>
<contexts>
<context position="22527" citStr="Reyle, 1995" startWordPosition="3574" endWordPosition="3575">s may be expressed on a level of a separate constraint language, as in our case, or be incorporated into the semantic formalism itself, as it is done for DRT by the system of UDRT (Reyle, 1993). In UDRT one introduces &amp;quot;labels&amp;quot; that behave very much like variables for DRSes. These labels figure in equations as well as subordination constraints to express scope relations between quantifiers. Equations and subordination constraints alone do not provide us with a treatment of parallelism. An idea that seems to come close to our notion of equality up-to constraints is the co-indexing technique in (Reyle, 1995), where non-local forms of parallelism are treated by dependency marking on labels. We believe that our use of a separate constraint language is more transparent. A treatment for ellipsis interpretation which uses a form of higher-order unification has been proposed in (Dalrymple, Shieber, and Pereira, 1991) and extended to other kinds of parallel constructions by (Gardent, Kohlhase, and van Leusen, 1996; Gardent and Kohlhase, 1996). Though related in some respects, there are formal differences and differences in coverage between this approach and the one we propose. They use an algorithm for </context>
</contexts>
<marker>Reyle, 1995</marker>
<rawString>Reyle, Uwe. 1995. Co-indexing labelled DRSs to represent and reason with ambiguities. In S. Peters and K. van Deemter, editors, Semantic Ambiguity and Underspecification. CSLI Publications, Stanford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manfred Schmidt-Schauf3</author>
</authors>
<title>Unification of stratified second-order terms.</title>
<date>1994</date>
<journal>J. W. Goethe Universitat,</journal>
<tech>Technical Report internal report 12/94,</tech>
<location>Frankfurt, Germany.</location>
<marker>Schmidt-Schauf3, 1994</marker>
<rawString>Schmidt-Schauf3, Manfred. 1994. Unification of stratified second-order terms. Technical Report internal report 12/94, J. W. Goethe Universitat, Frankfurt, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart Shieber</author>
<author>Fernando Pereira</author>
<author>Mary Dalrymple</author>
</authors>
<title>Interactions of scope and ellipsis. Linguistics and Philosophy,</title>
<date>1996</date>
<pages>19--527</pages>
<contexts>
<context position="23430" citStr="Shieber, Pereira, and Dalrymple, 1996" startWordPosition="3712" endWordPosition="3716"> in (Dalrymple, Shieber, and Pereira, 1991) and extended to other kinds of parallel constructions by (Gardent, Kohlhase, and van Leusen, 1996; Gardent and Kohlhase, 1996). Though related in some respects, there are formal differences and differences in coverage between this approach and the one we propose. They use an algorithm for higher-order matching rather than context unification and they do not distinguish an object and meta language level. As a consequence they need to resort to additional machinery for the treatment of scope relations, such as Pereira&apos;s scoping calculus, described in (Shieber, Pereira, and Dalrymple, 1996). On the other hand, their approach treats a large number of problems of the interaction of anaphora and ellipsis, especially strict/sloppy ambiguities. Our use of context unification does not allow us to adopt their strategy of capturing such ambiguities by admitting non-linear solutions to parallelism constraints. 5 Outlook Extensions of context unification may be useful for our applications. For gapping constructions, contexts with multiple holes need to be considered. The algorithm for context unification described in the complete version of (Niehren, Pinkal, and Ruhrberg, 1997) makes use</context>
</contexts>
<marker>Shieber, Pereira, Dalrymple, 1996</marker>
<rawString>Shieber, Stuart, Fernando Pereira, and Mary Dalrymple. 1996. Interactions of scope and ellipsis. Linguistics and Philosophy, 19:527-552.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>