<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000001">
<title confidence="0.617401">
Optimising text quality in generation from relational databases
</title>
<author confidence="0.7318505">
Michael O&apos;Donnellt(micko@dai.ed.ac.uk),
Alistair Knottt(alik@hermes.otago.ac.nz),
Jon Oberlandert(jonOcogsci.ed.ac.uk),
Chris Mellisht(chrism@dai.ed.ac.uk)
</author>
<affiliation confidence="0.762035">
t Division of Informatics, University of Edinburgh.
.I.:Depaxtment; .ADICompater...Science,:.0tago University.
</affiliation>
<sectionHeader confidence="0.932668" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999837111111111">
This paper outlines a text generation system suited
to a large class of information sources, relational
databases. We focus on one aspect of the problem:
the additional information which needs to be spe-
cified to produce reasonable text quality when gen-
erating from relational databases. We outline how
databases need to be prepared, and then describe
various types of domain semantics which can be used
to improve text quality.
</bodyText>
<sectionHeader confidence="0.919759" genericHeader="categories and subject descriptors">
I Introduction
</sectionHeader>
<bodyText confidence="0.999501033333333">
As the problems of how we generate text are gradu-
ally solved, a new problem is gaining prominence
- where do we obtain the information which feeds
the generation. Many domain models for existing
generation systems are hand-crafted for the specific
system. Other systems take advantage of existing
information sources.
A good information source for text generation
resides in the vast number of relational databases
which are in use around the world. These resources
have usually been provided for some reason other
than text generation, such as inventory manage-
ment, accounting, etc. However, given that the in-
formation is on hand, it can be of value to connect
these databases to text generation facilities.
The benefits include natural language access to in-
formation which is usually accessed in tabular form,
which can be difficult to interpret. Natural Lan-
guage descriptions are easier to read, can be tailored
to user types, and can be expressed in different lan-
guages if properly represented.
This paper outlines the domain specification lan-
guage for the ILEX text generation system, (for
Intelligent Labelling Explorer)).
ILEX is a tool for .dyn&apos; arnie browsing of .databas-e-
defined information: it allows a user to browse
through the information in a database using hyper-
&apos;Earlier ILEX papers have been based on lies 2.0, which
was relatively domain-dependunt. This paper is based around
version 3,0 of ILEX, a re-draft LO make the system domain-
independent., and domain acquisition far easier. The ILEX
project was supported by EPSRC grant GR/K5332I.
text. ILEX generates descriptions of database ob-
jects on the fly, taking into account the user&apos;s con-
text of browsing. Figure 1 shows the ILEX web in-
terface, as applied to a museum domain, in this case
the Twentieth Century Jewellery exhibition at the
the National Museum of Scotland.2 The links to
related database objects are also automatically gen-
erated. ILEX has been applied to other domains, in-
cluding personnel (Nowson, 1999), and a sales cata-
logue for computer systems and peripherals (Ander-
son and Bradshaw, 1998).
One of the advantages of using NLG for database
browsing is that the system can keep track of what
has already been said about objects, and not repeat
that information on later pages. Appropriate refer-
ring expressions can also be selected on the basis
of the discourse history. The object descriptions can
be tailored to the informational interests of the user.
See Knott et al. (1997) and Mellish et al. (1998) for
more information on these aspects of ILEX.
In section 2, we consider some systems related to
the ILEX system. Section 3 describes the form of
relational database that ILEX accepts as input. Sec-
tion 4 outlines what additional information - domain
semantics - needs to be provided for coherent text
production from the database, while section 5 de-
scribes additional information which can he provided
to improve the quality of the text produced.
</bodyText>
<sectionHeader confidence="0.999282" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.99663125">
It should be clear that the task we are discussing is
very distinct from the task of response generation in
a natural language interface to a database (e.g., see
Androutsopoulos et al. (1995)). In such. systems,
the role of text planning is quite simple or absent,
usually dealing with single sentences, or in the most
complex systems.;: a-single sentence :answer wtth an
additional clause or two of supporting information.
ILEX is not a query response generation system,
it is an object description system. It composes a full
text, at whatever size, with the goal of making that
text a coherent discourse.
</bodyText>
<footnote confidence="0.9920135">
2The authors thank the museum for making their database
available:
</footnote>
<page confidence="0.997986">
133
</page>
<figure confidence="0.864381090909091">
• Vueiad GOesi 2,0
•
Silver And iEnamel
Pendant Necklace
Saves flowers, with hke-green eneutiel t
ha ckground- Jessie DeL 1905 Place of
This Jewel is a Pendant—necklane and was
. made bp a British designer callediessie IY1,
King; [kis on4 tout 4140n:this. case ;:•:.
x-Pitir4W-Ozetnl#44.0;440ttlx:P2;4110.,4
&amp;quot;blie;tgrOn enamel bgicit,- wfth siker
</figure>
<tableCaption confidence="0.770849333333333">
ftowers sered against it It is in the. Arts and
Crafts style and was made in 19115. It has an
.. elaborate design; specifically ft ha.s floral motifs.
King was not Just a jewellery designer, she was
&amp;quot;.; :an &amp;Stator too, In fact, she did quite allot of -
different types of creative wdrit. JewelleiP is -
jostpart of it • :2 &apos;
„
-.0ticrjeWrs design.d by King Include.
</tableCaption>
<figure confidence="0.974503083333333">
7.. .
. .
an Arts&apos; and rafts site Watit--bliacle •
a&amp;quot; an Arts and CraftS &apos;style
Pendant:..neeklace&apos;
a -in Arts and Crafts,siyle`rie4dice -
Other jewels in the, style include:
a a Slbyl Dunlop pe.ndarit-:Crass&apos; • , -
ii•jak.Arthni and Gerirtie C4iskin necklace
s C4 islciasneklac
-
Getitrated lee/1/24 17:1019
</figure>
<figureCaption confidence="0.999145">
Figure 1: Browsing Object Descriptions
</figureCaption>
<bodyText confidence="0.98659902631579">
zeCm4-nr7
In this regard. ILEX should be more fruit-
fully compared with text generation systems such
as GOSSIP (Carcagno and Iordanskaja, 1993),
PEBA (Milosavljevic, 1997; Milosavljevic, 1999), or
POWER. (Dale et al.. 1998), systems which build an
extended text from an underlying database.
ILEX 3.0 has been developed to be domain in-
dependent, to handle relational databases from any
domain, as long as the information is provided in the
required format_ The first two of the systems above
are single domain systems. The third, POWER, is
an extension of FEBA to handle a new domain. It
is not clear however whether the resulting system is
itself domain-dependent or not.
This last system is perhaps the best comparison
for the ILEX system, since it also generates de-
scriptions of museum objects from an underlying
database. In that paper, the main focus is on the
problem of extracting out usable information from
badly structured databases (as often provided by
museums). and on generating texts using only only
this information (plus some linguistic knowledge).
The present paper differs from this approach by as-
suming that information is already available in a nor-
malised relational database. We observe, as do Dale
et al. (1998), that texts generated from this inform-
ation alone are quite poor in quality. We go one
step further by examining what additional informa-
tion can be provided to improve the quality of the
text to a reasonable level.
The ILEX system has been implemented to be
flexible in regards to the available domain inform-
ation. With a bare minimum, the system provides
poor quality texts, but as the domain developer ex-
tends the. domain semantics, _ the quality of texts im-
proves, up to a point where users sometimes mistake
ILEX-generated texts for human-authored texts.
</bodyText>
<sectionHeader confidence="0.691864" genericHeader="method">
3 The Structure of a Relational
Database
</sectionHeader>
<bodyText confidence="0.497973">
Databases vary widely in form, so we have assumed
a fairly standard relational database format.
</bodyText>
<page confidence="0.997012">
134
</page>
<subsectionHeader confidence="0.990484">
3.1 Entity Files
</subsectionHeader>
<bodyText confidence="0.942305153846154">
The database consists of a number:of entity files,
each file providing the records for a different entity
type. Each record (row) in the entity file defines a
unique entity. The columns define attributes of the
entities. In a museum domain, we might have an
entity file for museum artifacts, another for people
involved with the artifacts (designers, owners, etc.),
another for locations, etc. See figure 2 for a sample
entity file for the Jewellery domain. Given the wide
range of database formats..available, ILEX assumes
a tab-delimited format for database files.
ILEX imposes two requirements on the entity files
it uses:
1. Single field key: while relational databases of-
ten use multiple attributes to form a unique key
(e.g., name and birthdate), ILEX requires that
each entity have a unique identifier in a single
attribute. This identifier must be under a field
labelled ID.
2. Typing of entities: ILEX depends strongly on a
type system. We require that each entity record
provides a type for the entity in a field labelled
Class.
Some other attribute labels are reserved by the
system, allowing ILEX to deal intelligently with
them, including Name, Short-Name and Gender.
</bodyText>
<subsectionHeader confidence="0.999709">
3.2 Link Files
</subsectionHeader>
<bodyText confidence="0.998824555555556">
In some cases, an entity will have multiple fillers of
an attribute, for instance, a jewellery piece may be
made of any number of materials. Entity files, with
fixed record structure, cannot handle such cases.
The standard approach in relational databases is to
provide a link file for each case where multiple fillers
are possible. A link file consists of two columns only,
one identifying the entity, the other identifying the
filler (the name of the attribute is provided in the
first line of the file, see figure 3).
We are aware that the above specification repres-
ents an impoverished view of relational databases.
Many relational databases provide far more than
simple entity and link files. However, by no means
all relational databases provide more than this, so
• we have adopted the lowest common denominator.
Most relational databases can be exported in a form
which meets our requirements.
</bodyText>
<subsectionHeader confidence="0.993093">
3.3 Terminology
</subsectionHeader>
<bodyText confidence="0.987577">
In the following discussion, we will use the following
terminology:
Predicate: each column of an entity file defines
a predicate. Class, Designer and Date are thus
predicates introduced in figure 2. Each link file
also defines a predicate.
</bodyText>
<listItem confidence="0.9943545">
• Record: each row of an entity table provides the
attributes of a single.entity.. The row is termed
a record in database terminology.
• Fact: each entry in a record defines what we
call a fact about that entity.3 A fact consists of.
three parts: its predicate name, and two argu-
ments, being the entity of the record, and the
filler of the slot.
• ARG1: the first argument of a fact, the entity
the fact is about.
• ARG2: the second argument of a fact, the filler
of the attribute for the entity.
</listItem>
<bodyText confidence="0.95726275">
4 Specifying the Semantics of the
Database
A database itself says nothing about the nature of
the contents of each field in the database. It might
be a name, a date, a price, etc. Similarly for the
field label: the field label names a relation between
the entity represented by the record and the entity
represented by the filler. However, without further
specification, we do not know what this relationship
entails, apart from the label itself, e.g., &apos;Designer&apos;.
Before we can begin to process a database intelli-
gently, we need to define the &apos;semantics&apos; of the data-
base. This section will outline how this is done in the
ILEX case. There has been some work on automatic
acquisition of database semantics, such as in the con-
struction of taxonomies of domain entity types (see
Dale et al. (1998) for instance). However, it is diffi-
cult to perform this process reliably and in a domain-
independent manner, so we have not attempted to
in this case. The specification of domain semantics
is still a manual process which has to be undertaken
to link a database to the text generator.
To use a database for generation, additional in-
formation of several kinds needs to be provided:
</bodyText>
<listItem confidence="0.9663653">
1. Taxonomic organisation: supplying of types for
each database entity, and organisation of these
types into ta.xonornies;
2. Taxonomic lexification: specifying how each do-
main type is lexified;
3. Data type of attribute fillers: telling the system
to expect the filler of a record slot to be an
entity-id, a string, a date, etc.
4. Domain type specification: specifying What do-
main type the slot filler can he assumed to he.
</listItem>
<bodyText confidence="0.6890575">
Each of these aspects of domain specification will
be briefly described below.
</bodyText>
<footnote confidence="0.8459975">
3Excepting the first column, which provides the entity-id
for the record.
</footnote>
<page confidence="0.974724">
135
</page>
<table confidence="0.9929732">
ID Class Designer Date Style Place Sponsor
J-997 brooch King01 1905 Art-Deco London Liberty01
P998 -necklace King01 1906 Art-Deco &apos; London
J-999 necklace Chane101 1910 Art-Noveux Paris
etc.
</table>
<figureCaption confidence="0.713339">
Figure 2: A Sample from an Entity file
</figureCaption>
<figure confidence="0.69550475">
Entity Material
J-997 silver
J-997 enamel
J-997 gold
</figure>
<figureCaption confidence="0.989701">
Figure 3: A Sample from a Link file
</figureCaption>
<figure confidence="0.911050090909091">
(def-basic-type
:domain jewellery-domain
:head jewellery
:um-link 3D-PHYS-OBJECT)
(clef-taxonomy
:type jewellery
:subtypes (neck-jewellery wrist-jewellery
pin-jewellery pendant buckle
earring earring-pair finger-ring
ringset watch button dress-clip
hat-pin))
</figure>
<figureCaption confidence="0.999276">
Figure 4: Defining Taxonomic Knowledge
</figureCaption>
<subsectionHeader confidence="0.895109">
4.1 Taxonomic Organisation
</subsectionHeader>
<bodyText confidence="0.980794906976744">
ILEX requires that the entities of the domain are or-
ganised under a domain taxonomy. The user defines
a basic type (e.g., jewellery), and then defines the
sub-types of the basic-type, and perhaps further sub-
classification. Figure 4 shows the lisp forms defining
a basic type in the jewellery domain, and the sub-
classification of this type. The basic type is also
mapped onto a type (or set of types) in the concept
ontology used for sentence generation, a version of
Penman&apos;s Upper Model (Bateman, 1990). This al-
lows the sentence generator to reason about the ob-
jects it expresses.
Taxonomic organisation is important for several
reasons, including among others:
1. Expressing Entities: each type can be related to
lexical items- to use,to-express that type (e.g.,
linking the type brooch to a the lexical item for
&amp;quot;brooch&amp;quot;. If no lexical item is defined for a type,
a lexical item associated with some super-type
can he used instead. Other aspects of the ex-
pression of entities may depend on the concep-
tual type, for instance pronominalisation. deixis
(e.g., mass or count entities). etc.
2. Supporting Inferences and Generalisations:
ILEX allows the user to assert generalisations
about types, e.g., that Arts and Crafts jewellery
tends to be made using enamel (see section 5.4).
The type hierarchy is used to check whether a
particular generalisation is appropriate for any
given instance.
The earlier version of ILEX, Ilex2.0, allowed the
full representational power of the Systemic formal-
ism for representing domain taxonomies, including
cross-classification, and multiple inheritance (both
disjunctive and conjunctive). However, our exper-
iences with non-linguists trying to define domain
models showed us that the more scope for expres-
sion, the more direction was needed. We thus sim-
plified the formalism, by requiring taxonomies to be
simple, with no cross-classification or multiple inher-
itance. We felt that the minor loss of expressivity
was well balanced by the gain in simplicity for do-
main developers.
</bodyText>
<subsectionHeader confidence="0.615336">
4.2 Type Lexification
</subsectionHeader>
<bodyText confidence="0.974199">
To express each database entity, it is essential to he
able to map from its defined type, to a noun to use
in a referring expression, e.g., this brooch.
Ilex comes with a basic lexicon already provided.
covering the commonly occurring words. Each entry
defines the syntactic and morphological information
required for sentence generation. For these items,
the domain developer needs to provide a simple map-
ping from domain type to lexical item, for instan.ce,
the following lisp form specifies that the domain type
location should be lexified by the lexical item whose
id is locationnoun:
(lexify location location-noun)
For those lexical items not already defined, the do-
main developer needs to provide in addition lexical
item definitions for the nouns expressing the types
in their domain. A typical entry has the form shown
in figure 5.
</bodyText>
<page confidence="0.993913">
136
</page>
<figure confidence="0.961581">
(def-lexical-item .(def-predicate. Class_
:name professor-noun
:spelling &amp;quot;professor&amp;quot; :expression (:verb be-verb)
:grammatical-features (common-noun count-noun)
</figure>
<figureCaption confidence="0.9999445">
Figure 8: Simple Fact Expression
Figure 5: A Sample Lexical item Specification
</figureCaption>
<figure confidence="0.997008444444444">
.--(defobject-structurejevellery
:class :generic-type
:subclass :generic-type
:designer :entity-id
:style :entity-id
:material :generic-type
:date :date
:place :string
:dimension :dimension)
</figure>
<figureCaption confidence="0.999661">
Figure 6: Specifying Field Semantics
</figureCaption>
<subsectionHeader confidence="0.973658">
4.3 Data Type of Slot Fillers
</subsectionHeader>
<bodyText confidence="0.999952571428572">
Each field in a database record contains a string of
characters. It is not clear whether this string is an
identifier for another domain entity, a string (e.g.,
someone&apos;s surname), a date, a number, a type in
the type hierarchy, etc.
ILEX requires, for each entity file, a statement as
to how the field fillers should be interpreted. See
figure 6 for an example_
Some special filler types have been provided to
facilitate the import of structured data types. This
includes both :date and :dimension in the current
example. Special code has been written to convert
the fillers of these slots into ILEX objects. Other
special filler types are being added as needed.
</bodyText>
<subsectionHeader confidence="0.99441">
4.4 Domain Type of Slot Fillers
</subsectionHeader>
<bodyText confidence="0.99985925">
The def-predicate form allows the domain developer
to state what type the fillers of a particular field
should be. This not only allows for type checking,
but also allows the type of an entity to be inferred
if not otherwise provided. For instance, by assert-
ing that fillers of the Place field should of type city,
the system can infer that &amp;quot;London&amp;quot; is a city even if
London itself has no database record. See figure 7.
</bodyText>
<footnote confidence="0.952856666666667">
(def-predicate Place
:argl jewellery
:arg2 city
</footnote>
<figureCaption confidence="0.998295">
Figure 7: Specif■,&apos;inir, Predicate Fillers
</figureCaption>
<subsectionHeader confidence="0.95026">
4.5 Summary
</subsectionHeader>
<bodyText confidence="0.9999835">
With just ,thisvancir semantics-specified, ILEX can
generate very poor texts, but texts which convey
the content of the database records. In the next
section, we will outline the extensions to the domain
semantics which are needed to improve the quality
of the text produced by ILEX.
</bodyText>
<sectionHeader confidence="0.966084" genericHeader="method">
5 Extending Domain Semantics for
Improved Text Quality
</sectionHeader>
<bodyText confidence="0.9999812">
So far we have discussed only the simplest level of
domain semantics, which allows a fairly direct ex-
pression of domain information. ILEX allows the
domain developer to provide additional domain se-
mantics to improve the quality of the text.
</bodyText>
<subsectionHeader confidence="0.996037">
5.1 Expression of Facts
</subsectionHeader>
<bodyText confidence="0.992979">
Unless told otherwise, ILEX will express each fact in
a simple regular form, such as The designer of this
brooch is Jessie M. King, using a template form4:
The &lt;predicate&gt; of (entity-expression)
is (filler—expression).
However, a text consisting solely of clauses of this
form is unnatural, and depends on the predicate la-
bel being appropriate to the task (labels like given-by
will produce nonsense sentences).
To produce better text, ILEX can be told how
to express facts. The domain developer can provide
an optional slot to the def-predicate form as shown
in figure 8. The expression specification first of all
defines which verb to use in the expression. By de-
fault, the ARGI element is mapped onto the Sub-
ject, and the ARG2 onto the Object. Default val-
ues are assumed for tense, modality, polarity, voice.
finiteness, quantification, etc., unless otherwise spe-
cified. So, using the above expression specification,
the Class fact of a jewel would be expressed by a
clause like: This item is a brooch.
To ,produce less .standard expressions, we need to
modify some of the defaults_ A more complex ex-
pression specification is shown in figure 9, which
would result in the expression such as: For further
information, see Liberty Style Guide No. 326:
</bodyText>
<footnote confidence="0.9988485">
4ILE.A3.0 borrowed this use of a default expression tem-
plate from the POWER system (Dale et al., 1998). In previ-
ous versions of ILEX, all facts were expressed by full NI.C; as
explained below.
</footnote>
<page confidence="0.98994">
137
</page>
<figure confidence="0.7587896">
.kdef7predicate Designer
:importance ((expert 10)(default 6)(child 5))
:interest ((expert 10)(default 6)(child 4))
:assimilation ((expert 0)(default 0)(child 0))
:assim-rate ((expert 1)(default 1)(child 0.5))
</figure>
<figureCaption confidence="0.856481">
Figure 10: Specifying User Parameters
</figureCaption>
<figure confidence="0.990762571428571">
(def -predicate Bib-Note
:argl jevellery
:expression (
:adjunctl for further information&amp;quot;
:mood imperative
:verb see-verb
:voice active)
</figure>
<figureCaption confidence="0.999852">
Figure 9: More Complex Fact Expression
</figureCaption>
<bodyText confidence="0.9999077">
The expression form is used to construct a par-
tial syntactic specification, which is then completed
using the sentence generation module of the WAG
sentence generator (O&apos;Donnell, 1996).
With the level of domain semantics specified so
far, ILEX is able to produce texts such as the two be-
low, which provides an initial page describing data-
base entity BUNDY01, and then a subsequent page
when more information was requested (this from the
Personnel domain (Nowson, 1999)):
</bodyText>
<listItem confidence="0.994299625">
* Page 1: Alan Bundy is located in room F.1,
which is in South Bridge. He lectures a course
called Advanced Automated Reasoning and is in
the Institute for Representation and Reasoning.
He is the Head of Division and is a professor.
• Page 2: As already mentioned, Alan Bundy lec-
tures Advanced Automated Reasoning. AAR is
lectured to MSc and A14.
</listItem>
<bodyText confidence="0.999906714285714">
This expression specification form has been de-
signed to limit the linguistic skills needed for domain
developers working with the system. Given that the
domain developers may be museum staff, not com-
putational linguists, this is necessary. The notation
however allows for a wide range of linguistic expres-
sions if the full range of parameters are used.
</bodyText>
<subsectionHeader confidence="0.996014">
5.2 User Adaption
</subsectionHeader>
<bodyText confidence="0.999613857142857">
To enable the system to adapt. its content to the
type of user, the domain developers can associate
information with each predicate indicating the sys-
tem&apos;s view of the predicate&apos;s interest, importance,
etc., to the user. This information is added to the
def-predicate form, as shown in figure 10.
The user annotations allowed by ILEX include:
</bodyText>
<listItem confidence="0.881276555555556">
1. Interest: how interesting does the system judge
the information to be to the user;
9. Importance: how important is it to the system
that. the user reads the information;
3. Assimilation: to what, degree does the system
judge the user to already know the information:
4. Assimilation Rate: How quickly does the sys-
tem believe the user will absorb the information
when presented (is one presentation enough?).
</listItem>
<bodyText confidence="0.999984764705882">
This information influences what content will be
expressed to a particular user, and in what or-
der (more relevant on earlier pages). Information
already assimilated will not be delivered, except
when relevant for other purposes (e.g., when refer-
ring to the entity). If no annotations are provided,
no user customisation will occur.
The values in ILEX&apos;s user models have been set
intuitively by the implementers. While ideally these
values would be derived through user studies, our
purpose was purely to test the adaptive mechanism,
and demonstrate that it works. We leave the devel-
opment of real user models for later work.
ILEX has opted out of using adaptive user model-
ling, whereby the user model attributes are adapted
as a result of observed user choices in the web inter-
face. We leave this for future research.
</bodyText>
<subsectionHeader confidence="0.936392">
5.3 Comparisons
</subsectionHeader>
<bodyText confidence="0.99730680952381">
When describing an object, it seems sometimes use-
ful to compare it to similar articles already seen.
With small addition to the domain specification,
ILEX can compare items (an extension by Maria Mi-
losavljevic), as demonstrated in the following text:
This item is also a brooch. Like the previ-
ous item, it was designed by King. How-
ever, it differs from the previous item in
that it is made of gold and enamel, while
the precious brooch was made of silver and
enamel,
For ILEX to properly compare two entities, it.
needs to know how the various..attributes of the en-
tity can be compared (nominal, ordinal, scalar, etc.).
Again, information can be added to the def-predicate
for each predicate to define its scale of comparabil-
ity. See Milosavljevic (1997) and (1999) for more de-
tail. Figure 11 shows the additions for the Designer
predicate. Comparisons introduce several RST re-
lations to the text structure, including rst-contrast,
rst-similarity and rst-whereas.
</bodyText>
<page confidence="0.982746">
138
</page>
<figure confidence="0.863987333333333">
(def-predicate Designer
:variation (string 1)
:scale nominal
</figure>
<figureCaption confidence="0.863081">
Figure 11: Specifying Predicate Comparability
</figureCaption>
<table confidence="0.71911375">
- Taxonomies OBLIGATORY
- Lexification of Types
- Filler Domain Type Information
- Filler Data Type Information
- Predicate Expression OPTIONAL
- Comparison Information
- Generalisations
- User Annotations
</table>
<figure confidence="0.956617">
(def-defeasible-rule
:qv ($jewel jewellery)--
:lhs (some ($X (style $jewel $X))
(arts-and-crafts $X)))
:rhs (some ($X (made-of $jewel $X))
(enamel $X)))
</figure>
<figureCaption confidence="0.996829">
Figure 12: Specifying Generalisations
</figureCaption>
<subsectionHeader confidence="0.738869">
5.4 Generalisations
</subsectionHeader>
<bodyText confidence="0.999296541666666">
We found it useful to allow facts about general types•
of entities to be asserted, for instance, that Arts and
Crafts jewellery tend to be made of enamel. These
generalisations can then be used to improve the qual-
ity of text, producing object descriptions as in the
following:
This brooch is in the Arts and Crafts .style.
Arts and Crafts jewels tend to be made of
enamel. However, this one is not.
These generalisations are defined using defeasible
implication - similar to the usual implication, but
working in terms of few, many, or most rather than
all or none. &apos;They are entered in a form derived
from first order predicate calculus, for instance, see
figure 12 which specifies that most Arts and Crafts
jewellery uses enamel.
ILEX find each instance which matches the gen-
eral type (in this case, instances of type jewellery
which have Arts and Crafts in the Style role). If
the fact about the generic object has a correspond-
ing fact on the instantial object, an exemplification
relation is asserted between the facts. Otherwise,
a concession relation is asserted. See Knott et al.
(1997) for more details on this procedure.
</bodyText>
<sectionHeader confidence="0.999424" genericHeader="conclusions">
6 Summary
</sectionHeader>
<bodyText confidence="0.996923857142857">
While observing people trying to convert an earlier
ILEX system to a new domain, we noted the diffi-
culty they had. To avoid these problems, we under-
took to re-implement the domain specification as-
pects of ILEX to simplify the task.
Towards this end, we have followed a number of
steps. Firstly, we reconstructed ILEX to be domain
</bodyText>
<figureCaption confidence="0.8878528">
Figure 13: Obligatory and Optional Steps in Domain
Specification
independent, with all domain information defined in
declarative resource files. This means that domain
developers do not have to deal with code.
</figureCaption>
<bodyText confidence="0.998058740740741">
Secondly, we built into ILEX the ability to import
entity definitions directly from a relational database
(although with some restrictions as to its form).
A database by itself does not provide enough in-
formation to produce text. Domain semantics is re-
quired. We have provided a system of incremental
specification of this semantics which allows a domain
developer to hook up a.dynamic hypertext interface
to a relational database quickly, although producing
poor quality text. Minimally, the system requires
a domain taxonomy, information on lexification of
types, and specification of the data type of each re-
cord field.
Additional effort can then improve the quality of
text up to a quite reasonable level. The additional
information can include: specification of predicate
expression, and specifications supporting comparis-
ons, user adaption, and generalisations.
Figure 13 summarises the obligatory and optional
steps in domain specification in ILEX.
Simplifying the domain specification task is a ne-
cessity as text generation systems move outside of
research labs and into the real world, where the
domain developer may not be a computational lin-
guist, but a museum curator, personnel officer or
wine salesman. We have tried to take a step towards
making their task easier.
</bodyText>
<sectionHeader confidence="0.999359" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.98394675">
Gail Anderson and Tim Bradshaw. 1998. ILEX:
The intelligent labelling explorer: Experience of
Building a Demonstrator for the Workstation Do-
main. Internal Report, Artificial Intelligence Ap-
plicatioxis Institute,•University of Edinburgh.
I. Androutsopoulos, G.D. Ritchie, and P. Thanisch.
1995. Natural language interfaces to databases -
an introduction. Natural Language Engineering,1
{1).29-81.
John Bateman. 1990. Upper modeling: organiz-
ing knowledge for natural language processing.
In Proceedings of the Fifth International Work-
</reference>
<page confidence="0.98913">
139
</page>
<reference confidence="0.991846609756098">
shop on Natural Language Generation, Pitts-
burgh, June.
Denis Carcagno and Lidija Iordanskaja. 1993. Con-
tent determination and text structuring: two in-
terrelated processes. In Helmut Horocek and Mi-
chael Zock, editors, New Concepts in Natural Lan-
guage Generation, Communication in Artificial
Intelligence Series, pages 10 — 26. Pinter: London.
Robert Dale, Stephen J Green, Maria Milosavljevic,
Cecile Paris, Cornelia Verspoor, and Sandra Wil-
liams. 1998. The realities of generating natural
language from databases. In Proceedings of the
11th Australian Joint Conference on Artificial. In-
telligence, Brisbane, Australia, 13-17 July.
Alistair Knott, Michael O&apos;Donnell, Jon Oberlander,
and Chris Mellish. 1997. Defeasible rules in con-
tent selection and text structuring. In Proceedings
of the 6th European Workshop on Natural Lan-
guage Generation, Gerhard-Mercator University,
Duisburg, Germany, March 24 - 26.
Chris Mellish, Mick O&apos;Donnell, Jon Oberlander, and
Alistair Knott. 1998. An architecture for oppor-
tunistic text generation. In Proceedings of the
Ninth International Workshop on Natural Lan-
guage Generation, Niagara-on-the-Lake, Ontario,
Canada.
Maria Milosavljevic. 1997. Augmenting the user&apos;s
knowledge via comparison. In Proceedings of the
6th International Conference on User Modelling,
pages 119-130, Sardinia, 2-5 June.
Maria Milosavljevic. 1999. Maximising the Co-
herence of Descriptions via Comparison. Ph.D.
thesis, Macquarie University, Sydney, Australia.
Scott Nowson. 1999. Acquiring ILEX for a Per-
sonnel Domain. Honours Thesis, Artificial Intel-
ligence, University of Edinburgh.
Michael O&apos;Donnell. 1996. Input specification in the
wag sentence generation system. In Proceedings of
the 8th International Workshop on Natural Lan-
guage Generation, Herstmonceux Castle, UK, 13-
15 June.
</reference>
<page confidence="0.997382">
140
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.091924">
<title confidence="0.998819">Optimising text quality in generation from relational databases</title>
<author confidence="0.5894995">Michael Alistair Jon Chris Mellisht</author>
<abstract confidence="0.911372583333333">t Division of Informatics, University of .I.:Depaxtment; .ADICompater...Science,:.0tago University. Abstract This paper outlines a text generation system suited to a large class of information sources, relational databases. We focus on one aspect of the problem: the additional information which needs to be specified to produce reasonable text quality when generating from relational databases. We outline how databases need to be prepared, and then describe various types of domain semantics which can be used to improve text quality.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Gail Anderson</author>
<author>Tim Bradshaw</author>
</authors>
<title>ILEX: The intelligent labelling explorer: Experience of Building a Demonstrator for the Workstation Domain. Internal Report, Artificial Intelligence Applicatioxis Institute,•University of Edinburgh.</title>
<date>1998</date>
<contexts>
<context position="2862" citStr="Anderson and Bradshaw, 1998" startWordPosition="429" endWordPosition="433">nindependent., and domain acquisition far easier. The ILEX project was supported by EPSRC grant GR/K5332I. text. ILEX generates descriptions of database objects on the fly, taking into account the user&apos;s context of browsing. Figure 1 shows the ILEX web interface, as applied to a museum domain, in this case the Twentieth Century Jewellery exhibition at the the National Museum of Scotland.2 The links to related database objects are also automatically generated. ILEX has been applied to other domains, including personnel (Nowson, 1999), and a sales catalogue for computer systems and peripherals (Anderson and Bradshaw, 1998). One of the advantages of using NLG for database browsing is that the system can keep track of what has already been said about objects, and not repeat that information on later pages. Appropriate referring expressions can also be selected on the basis of the discourse history. The object descriptions can be tailored to the informational interests of the user. See Knott et al. (1997) and Mellish et al. (1998) for more information on these aspects of ILEX. In section 2, we consider some systems related to the ILEX system. Section 3 describes the form of relational database that ILEX accepts as</context>
</contexts>
<marker>Anderson, Bradshaw, 1998</marker>
<rawString>Gail Anderson and Tim Bradshaw. 1998. ILEX: The intelligent labelling explorer: Experience of Building a Demonstrator for the Workstation Domain. Internal Report, Artificial Intelligence Applicatioxis Institute,•University of Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Androutsopoulos</author>
<author>G D Ritchie</author>
<author>P Thanisch</author>
</authors>
<title>Natural language interfaces to databases -an introduction.</title>
<date>1995</date>
<journal>Natural Language Engineering,1</journal>
<pages>1--29</pages>
<contexts>
<context position="3929" citStr="Androutsopoulos et al. (1995)" startWordPosition="611" endWordPosition="614">these aspects of ILEX. In section 2, we consider some systems related to the ILEX system. Section 3 describes the form of relational database that ILEX accepts as input. Section 4 outlines what additional information - domain semantics - needs to be provided for coherent text production from the database, while section 5 describes additional information which can he provided to improve the quality of the text produced. 2 Related Work It should be clear that the task we are discussing is very distinct from the task of response generation in a natural language interface to a database (e.g., see Androutsopoulos et al. (1995)). In such. systems, the role of text planning is quite simple or absent, usually dealing with single sentences, or in the most complex systems.;: a-single sentence :answer wtth an additional clause or two of supporting information. ILEX is not a query response generation system, it is an object description system. It composes a full text, at whatever size, with the goal of making that text a coherent discourse. 2The authors thank the museum for making their database available: 133 • Vueiad GOesi 2,0 • Silver And iEnamel Pendant Necklace Saves flowers, with hke-green eneutiel t ha ckground- Je</context>
</contexts>
<marker>Androutsopoulos, Ritchie, Thanisch, 1995</marker>
<rawString>I. Androutsopoulos, G.D. Ritchie, and P. Thanisch. 1995. Natural language interfaces to databases -an introduction. Natural Language Engineering,1 {1).29-81.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Bateman</author>
</authors>
<title>Upper modeling: organizing knowledge for natural language processing.</title>
<date>1990</date>
<booktitle>In Proceedings of the Fifth International Workshop on Natural Language Generation,</booktitle>
<location>Pittsburgh,</location>
<contexts>
<context position="13183" citStr="Bateman, 1990" startWordPosition="2135" endWordPosition="2136">ng ringset watch button dress-clip hat-pin)) Figure 4: Defining Taxonomic Knowledge 4.1 Taxonomic Organisation ILEX requires that the entities of the domain are organised under a domain taxonomy. The user defines a basic type (e.g., jewellery), and then defines the sub-types of the basic-type, and perhaps further subclassification. Figure 4 shows the lisp forms defining a basic type in the jewellery domain, and the subclassification of this type. The basic type is also mapped onto a type (or set of types) in the concept ontology used for sentence generation, a version of Penman&apos;s Upper Model (Bateman, 1990). This allows the sentence generator to reason about the objects it expresses. Taxonomic organisation is important for several reasons, including among others: 1. Expressing Entities: each type can be related to lexical items- to use,to-express that type (e.g., linking the type brooch to a the lexical item for &amp;quot;brooch&amp;quot;. If no lexical item is defined for a type, a lexical item associated with some super-type can he used instead. Other aspects of the expression of entities may depend on the conceptual type, for instance pronominalisation. deixis (e.g., mass or count entities). etc. 2. Supporting</context>
</contexts>
<marker>Bateman, 1990</marker>
<rawString>John Bateman. 1990. Upper modeling: organizing knowledge for natural language processing. In Proceedings of the Fifth International Workshop on Natural Language Generation, Pittsburgh, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Denis Carcagno</author>
<author>Lidija Iordanskaja</author>
</authors>
<title>Content determination and text structuring: two interrelated processes.</title>
<date>1993</date>
<booktitle>In Helmut Horocek and Michael Zock, editors, New Concepts in Natural Language Generation, Communication in Artificial Intelligence Series,</booktitle>
<pages>10--26</pages>
<publisher>Pinter: London.</publisher>
<contexts>
<context position="5620" citStr="Carcagno and Iordanskaja, 1993" startWordPosition="887" endWordPosition="890">t, she did quite allot of - different types of creative wdrit. JewelleiP is - jostpart of it • :2 &apos; „ -.0ticrjeWrs design.d by King Include. 7.. . . . an Arts&apos; and rafts site Watit--bliacle • a&amp;quot; an Arts and CraftS &apos;style Pendant:..neeklace&apos; a -in Arts and Crafts,siyle`rie4dice - Other jewels in the, style include: a a Slbyl Dunlop pe.ndarit-:Crass&apos; • , - ii•jak.Arthni and Gerirtie C4iskin necklace s C4 islciasneklac - Getitrated lee/1/24 17:1019 Figure 1: Browsing Object Descriptions zeCm4-nr7 In this regard. ILEX should be more fruitfully compared with text generation systems such as GOSSIP (Carcagno and Iordanskaja, 1993), PEBA (Milosavljevic, 1997; Milosavljevic, 1999), or POWER. (Dale et al.. 1998), systems which build an extended text from an underlying database. ILEX 3.0 has been developed to be domain independent, to handle relational databases from any domain, as long as the information is provided in the required format_ The first two of the systems above are single domain systems. The third, POWER, is an extension of FEBA to handle a new domain. It is not clear however whether the resulting system is itself domain-dependent or not. This last system is perhaps the best comparison for the ILEX system, si</context>
</contexts>
<marker>Carcagno, Iordanskaja, 1993</marker>
<rawString>Denis Carcagno and Lidija Iordanskaja. 1993. Content determination and text structuring: two interrelated processes. In Helmut Horocek and Michael Zock, editors, New Concepts in Natural Language Generation, Communication in Artificial Intelligence Series, pages 10 — 26. Pinter: London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Dale</author>
<author>Stephen J Green</author>
<author>Maria Milosavljevic</author>
<author>Cecile Paris</author>
<author>Cornelia Verspoor</author>
<author>Sandra Williams</author>
</authors>
<title>The realities of generating natural language from databases.</title>
<date>1998</date>
<booktitle>In Proceedings of the 11th Australian Joint Conference on Artificial. Intelligence,</booktitle>
<location>Brisbane, Australia,</location>
<contexts>
<context position="6710" citStr="Dale et al. (1998)" startWordPosition="1065" endWordPosition="1068"> the resulting system is itself domain-dependent or not. This last system is perhaps the best comparison for the ILEX system, since it also generates descriptions of museum objects from an underlying database. In that paper, the main focus is on the problem of extracting out usable information from badly structured databases (as often provided by museums). and on generating texts using only only this information (plus some linguistic knowledge). The present paper differs from this approach by assuming that information is already available in a normalised relational database. We observe, as do Dale et al. (1998), that texts generated from this information alone are quite poor in quality. We go one step further by examining what additional information can be provided to improve the quality of the text to a reasonable level. The ILEX system has been implemented to be flexible in regards to the available domain information. With a bare minimum, the system provides poor quality texts, but as the domain developer extends the. domain semantics, _ the quality of texts improves, up to a point where users sometimes mistake ILEX-generated texts for human-authored texts. 3 The Structure of a Relational Database</context>
<context position="11074" citStr="Dale et al. (1998)" startWordPosition="1802" endWordPosition="1805">c. Similarly for the field label: the field label names a relation between the entity represented by the record and the entity represented by the filler. However, without further specification, we do not know what this relationship entails, apart from the label itself, e.g., &apos;Designer&apos;. Before we can begin to process a database intelligently, we need to define the &apos;semantics&apos; of the database. This section will outline how this is done in the ILEX case. There has been some work on automatic acquisition of database semantics, such as in the construction of taxonomies of domain entity types (see Dale et al. (1998) for instance). However, it is difficult to perform this process reliably and in a domainindependent manner, so we have not attempted to in this case. The specification of domain semantics is still a manual process which has to be undertaken to link a database to the text generator. To use a database for generation, additional information of several kinds needs to be provided: 1. Taxonomic organisation: supplying of types for each database entity, and organisation of these types into ta.xonornies; 2. Taxonomic lexification: specifying how each domain type is lexified; 3. Data type of attribute</context>
<context position="19236" citStr="Dale et al., 1998" startWordPosition="3094" endWordPosition="3097">he Object. Default values are assumed for tense, modality, polarity, voice. finiteness, quantification, etc., unless otherwise specified. So, using the above expression specification, the Class fact of a jewel would be expressed by a clause like: This item is a brooch. To ,produce less .standard expressions, we need to modify some of the defaults_ A more complex expression specification is shown in figure 9, which would result in the expression such as: For further information, see Liberty Style Guide No. 326: 4ILE.A3.0 borrowed this use of a default expression template from the POWER system (Dale et al., 1998). In previous versions of ILEX, all facts were expressed by full NI.C; as explained below. 137 .kdef7predicate Designer :importance ((expert 10)(default 6)(child 5)) :interest ((expert 10)(default 6)(child 4)) :assimilation ((expert 0)(default 0)(child 0)) :assim-rate ((expert 1)(default 1)(child 0.5)) Figure 10: Specifying User Parameters (def -predicate Bib-Note :argl jevellery :expression ( :adjunctl for further information&amp;quot; :mood imperative :verb see-verb :voice active) Figure 9: More Complex Fact Expression The expression form is used to construct a partial syntactic specification, which </context>
</contexts>
<marker>Dale, Green, Milosavljevic, Paris, Verspoor, Williams, 1998</marker>
<rawString>Robert Dale, Stephen J Green, Maria Milosavljevic, Cecile Paris, Cornelia Verspoor, and Sandra Williams. 1998. The realities of generating natural language from databases. In Proceedings of the 11th Australian Joint Conference on Artificial. Intelligence, Brisbane, Australia, 13-17 July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alistair Knott</author>
<author>Michael O&apos;Donnell</author>
<author>Jon Oberlander</author>
<author>Chris Mellish</author>
</authors>
<title>Defeasible rules in content selection and text structuring.</title>
<date>1997</date>
<booktitle>In Proceedings of the 6th European Workshop on Natural Language Generation,</booktitle>
<pages>26</pages>
<institution>Gerhard-Mercator University,</institution>
<location>Duisburg, Germany,</location>
<contexts>
<context position="3249" citStr="Knott et al. (1997)" startWordPosition="496" endWordPosition="499">links to related database objects are also automatically generated. ILEX has been applied to other domains, including personnel (Nowson, 1999), and a sales catalogue for computer systems and peripherals (Anderson and Bradshaw, 1998). One of the advantages of using NLG for database browsing is that the system can keep track of what has already been said about objects, and not repeat that information on later pages. Appropriate referring expressions can also be selected on the basis of the discourse history. The object descriptions can be tailored to the informational interests of the user. See Knott et al. (1997) and Mellish et al. (1998) for more information on these aspects of ILEX. In section 2, we consider some systems related to the ILEX system. Section 3 describes the form of relational database that ILEX accepts as input. Section 4 outlines what additional information - domain semantics - needs to be provided for coherent text production from the database, while section 5 describes additional information which can he provided to improve the quality of the text produced. 2 Related Work It should be clear that the task we are discussing is very distinct from the task of response generation in a n</context>
<context position="25116" citStr="Knott et al. (1997)" startWordPosition="4035" endWordPosition="4038"> the usual implication, but working in terms of few, many, or most rather than all or none. &apos;They are entered in a form derived from first order predicate calculus, for instance, see figure 12 which specifies that most Arts and Crafts jewellery uses enamel. ILEX find each instance which matches the general type (in this case, instances of type jewellery which have Arts and Crafts in the Style role). If the fact about the generic object has a corresponding fact on the instantial object, an exemplification relation is asserted between the facts. Otherwise, a concession relation is asserted. See Knott et al. (1997) for more details on this procedure. 6 Summary While observing people trying to convert an earlier ILEX system to a new domain, we noted the difficulty they had. To avoid these problems, we undertook to re-implement the domain specification aspects of ILEX to simplify the task. Towards this end, we have followed a number of steps. Firstly, we reconstructed ILEX to be domain Figure 13: Obligatory and Optional Steps in Domain Specification independent, with all domain information defined in declarative resource files. This means that domain developers do not have to deal with code. Secondly, we </context>
</contexts>
<marker>Knott, O&apos;Donnell, Oberlander, Mellish, 1997</marker>
<rawString>Alistair Knott, Michael O&apos;Donnell, Jon Oberlander, and Chris Mellish. 1997. Defeasible rules in content selection and text structuring. In Proceedings of the 6th European Workshop on Natural Language Generation, Gerhard-Mercator University, Duisburg, Germany, March 24 - 26.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Mellish</author>
<author>Mick O&apos;Donnell</author>
<author>Jon Oberlander</author>
<author>Alistair Knott</author>
</authors>
<title>An architecture for opportunistic text generation.</title>
<date>1998</date>
<booktitle>In Proceedings of the Ninth International Workshop on Natural Language Generation,</booktitle>
<location>Niagara-on-the-Lake, Ontario, Canada.</location>
<contexts>
<context position="3275" citStr="Mellish et al. (1998)" startWordPosition="501" endWordPosition="504">e objects are also automatically generated. ILEX has been applied to other domains, including personnel (Nowson, 1999), and a sales catalogue for computer systems and peripherals (Anderson and Bradshaw, 1998). One of the advantages of using NLG for database browsing is that the system can keep track of what has already been said about objects, and not repeat that information on later pages. Appropriate referring expressions can also be selected on the basis of the discourse history. The object descriptions can be tailored to the informational interests of the user. See Knott et al. (1997) and Mellish et al. (1998) for more information on these aspects of ILEX. In section 2, we consider some systems related to the ILEX system. Section 3 describes the form of relational database that ILEX accepts as input. Section 4 outlines what additional information - domain semantics - needs to be provided for coherent text production from the database, while section 5 describes additional information which can he provided to improve the quality of the text produced. 2 Related Work It should be clear that the task we are discussing is very distinct from the task of response generation in a natural language interface </context>
</contexts>
<marker>Mellish, O&apos;Donnell, Oberlander, Knott, 1998</marker>
<rawString>Chris Mellish, Mick O&apos;Donnell, Jon Oberlander, and Alistair Knott. 1998. An architecture for opportunistic text generation. In Proceedings of the Ninth International Workshop on Natural Language Generation, Niagara-on-the-Lake, Ontario, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maria Milosavljevic</author>
</authors>
<title>Augmenting the user&apos;s knowledge via comparison.</title>
<date>1997</date>
<booktitle>In Proceedings of the 6th International Conference on User Modelling,</booktitle>
<pages>119--130</pages>
<contexts>
<context position="5647" citStr="Milosavljevic, 1997" startWordPosition="892" endWordPosition="893">ypes of creative wdrit. JewelleiP is - jostpart of it • :2 &apos; „ -.0ticrjeWrs design.d by King Include. 7.. . . . an Arts&apos; and rafts site Watit--bliacle • a&amp;quot; an Arts and CraftS &apos;style Pendant:..neeklace&apos; a -in Arts and Crafts,siyle`rie4dice - Other jewels in the, style include: a a Slbyl Dunlop pe.ndarit-:Crass&apos; • , - ii•jak.Arthni and Gerirtie C4iskin necklace s C4 islciasneklac - Getitrated lee/1/24 17:1019 Figure 1: Browsing Object Descriptions zeCm4-nr7 In this regard. ILEX should be more fruitfully compared with text generation systems such as GOSSIP (Carcagno and Iordanskaja, 1993), PEBA (Milosavljevic, 1997; Milosavljevic, 1999), or POWER. (Dale et al.. 1998), systems which build an extended text from an underlying database. ILEX 3.0 has been developed to be domain independent, to handle relational databases from any domain, as long as the information is provided in the required format_ The first two of the systems above are single domain systems. The third, POWER, is an extension of FEBA to handle a new domain. It is not clear however whether the resulting system is itself domain-dependent or not. This last system is perhaps the best comparison for the ILEX system, since it also generates descr</context>
<context position="23285" citStr="Milosavljevic (1997)" startWordPosition="3752" endWordPosition="3753"> specification, ILEX can compare items (an extension by Maria Milosavljevic), as demonstrated in the following text: This item is also a brooch. Like the previous item, it was designed by King. However, it differs from the previous item in that it is made of gold and enamel, while the precious brooch was made of silver and enamel, For ILEX to properly compare two entities, it. needs to know how the various..attributes of the entity can be compared (nominal, ordinal, scalar, etc.). Again, information can be added to the def-predicate for each predicate to define its scale of comparability. See Milosavljevic (1997) and (1999) for more detail. Figure 11 shows the additions for the Designer predicate. Comparisons introduce several RST relations to the text structure, including rst-contrast, rst-similarity and rst-whereas. 138 (def-predicate Designer :variation (string 1) :scale nominal Figure 11: Specifying Predicate Comparability - Taxonomies OBLIGATORY - Lexification of Types - Filler Domain Type Information - Filler Data Type Information - Predicate Expression OPTIONAL - Comparison Information - Generalisations - User Annotations (def-defeasible-rule :qv ($jewel jewellery)-- :lhs (some ($X (style $jewe</context>
</contexts>
<marker>Milosavljevic, 1997</marker>
<rawString>Maria Milosavljevic. 1997. Augmenting the user&apos;s knowledge via comparison. In Proceedings of the 6th International Conference on User Modelling, pages 119-130, Sardinia, 2-5 June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maria Milosavljevic</author>
</authors>
<title>Maximising the Coherence of Descriptions via Comparison.</title>
<date>1999</date>
<tech>Ph.D. thesis,</tech>
<institution>Macquarie University,</institution>
<location>Sydney, Australia.</location>
<contexts>
<context position="5669" citStr="Milosavljevic, 1999" startWordPosition="894" endWordPosition="895">t. JewelleiP is - jostpart of it • :2 &apos; „ -.0ticrjeWrs design.d by King Include. 7.. . . . an Arts&apos; and rafts site Watit--bliacle • a&amp;quot; an Arts and CraftS &apos;style Pendant:..neeklace&apos; a -in Arts and Crafts,siyle`rie4dice - Other jewels in the, style include: a a Slbyl Dunlop pe.ndarit-:Crass&apos; • , - ii•jak.Arthni and Gerirtie C4iskin necklace s C4 islciasneklac - Getitrated lee/1/24 17:1019 Figure 1: Browsing Object Descriptions zeCm4-nr7 In this regard. ILEX should be more fruitfully compared with text generation systems such as GOSSIP (Carcagno and Iordanskaja, 1993), PEBA (Milosavljevic, 1997; Milosavljevic, 1999), or POWER. (Dale et al.. 1998), systems which build an extended text from an underlying database. ILEX 3.0 has been developed to be domain independent, to handle relational databases from any domain, as long as the information is provided in the required format_ The first two of the systems above are single domain systems. The third, POWER, is an extension of FEBA to handle a new domain. It is not clear however whether the resulting system is itself domain-dependent or not. This last system is perhaps the best comparison for the ILEX system, since it also generates descriptions of museum obje</context>
</contexts>
<marker>Milosavljevic, 1999</marker>
<rawString>Maria Milosavljevic. 1999. Maximising the Coherence of Descriptions via Comparison. Ph.D. thesis, Macquarie University, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Scott Nowson</author>
</authors>
<title>Acquiring ILEX for a Personnel Domain. Honours Thesis,</title>
<date>1999</date>
<institution>Artificial Intelligence, University of Edinburgh.</institution>
<contexts>
<context position="2772" citStr="Nowson, 1999" startWordPosition="417" endWordPosition="418">er is based around version 3,0 of ILEX, a re-draft LO make the system domainindependent., and domain acquisition far easier. The ILEX project was supported by EPSRC grant GR/K5332I. text. ILEX generates descriptions of database objects on the fly, taking into account the user&apos;s context of browsing. Figure 1 shows the ILEX web interface, as applied to a museum domain, in this case the Twentieth Century Jewellery exhibition at the the National Museum of Scotland.2 The links to related database objects are also automatically generated. ILEX has been applied to other domains, including personnel (Nowson, 1999), and a sales catalogue for computer systems and peripherals (Anderson and Bradshaw, 1998). One of the advantages of using NLG for database browsing is that the system can keep track of what has already been said about objects, and not repeat that information on later pages. Appropriate referring expressions can also be selected on the basis of the discourse history. The object descriptions can be tailored to the informational interests of the user. See Knott et al. (1997) and Mellish et al. (1998) for more information on these aspects of ILEX. In section 2, we consider some systems related to</context>
<context position="20222" citStr="Nowson, 1999" startWordPosition="3239" endWordPosition="3240">jevellery :expression ( :adjunctl for further information&amp;quot; :mood imperative :verb see-verb :voice active) Figure 9: More Complex Fact Expression The expression form is used to construct a partial syntactic specification, which is then completed using the sentence generation module of the WAG sentence generator (O&apos;Donnell, 1996). With the level of domain semantics specified so far, ILEX is able to produce texts such as the two below, which provides an initial page describing database entity BUNDY01, and then a subsequent page when more information was requested (this from the Personnel domain (Nowson, 1999)): * Page 1: Alan Bundy is located in room F.1, which is in South Bridge. He lectures a course called Advanced Automated Reasoning and is in the Institute for Representation and Reasoning. He is the Head of Division and is a professor. • Page 2: As already mentioned, Alan Bundy lectures Advanced Automated Reasoning. AAR is lectured to MSc and A14. This expression specification form has been designed to limit the linguistic skills needed for domain developers working with the system. Given that the domain developers may be museum staff, not computational linguists, this is necessary. The notati</context>
</contexts>
<marker>Nowson, 1999</marker>
<rawString>Scott Nowson. 1999. Acquiring ILEX for a Personnel Domain. Honours Thesis, Artificial Intelligence, University of Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael O&apos;Donnell</author>
</authors>
<title>Input specification in the wag sentence generation system.</title>
<date>1996</date>
<booktitle>In Proceedings of the 8th International Workshop on Natural Language Generation,</booktitle>
<pages>13--15</pages>
<location>Herstmonceux Castle, UK,</location>
<contexts>
<context position="19938" citStr="O&apos;Donnell, 1996" startWordPosition="3191" endWordPosition="3192">low. 137 .kdef7predicate Designer :importance ((expert 10)(default 6)(child 5)) :interest ((expert 10)(default 6)(child 4)) :assimilation ((expert 0)(default 0)(child 0)) :assim-rate ((expert 1)(default 1)(child 0.5)) Figure 10: Specifying User Parameters (def -predicate Bib-Note :argl jevellery :expression ( :adjunctl for further information&amp;quot; :mood imperative :verb see-verb :voice active) Figure 9: More Complex Fact Expression The expression form is used to construct a partial syntactic specification, which is then completed using the sentence generation module of the WAG sentence generator (O&apos;Donnell, 1996). With the level of domain semantics specified so far, ILEX is able to produce texts such as the two below, which provides an initial page describing database entity BUNDY01, and then a subsequent page when more information was requested (this from the Personnel domain (Nowson, 1999)): * Page 1: Alan Bundy is located in room F.1, which is in South Bridge. He lectures a course called Advanced Automated Reasoning and is in the Institute for Representation and Reasoning. He is the Head of Division and is a professor. • Page 2: As already mentioned, Alan Bundy lectures Advanced Automated Reasoning</context>
</contexts>
<marker>O&apos;Donnell, 1996</marker>
<rawString>Michael O&apos;Donnell. 1996. Input specification in the wag sentence generation system. In Proceedings of the 8th International Workshop on Natural Language Generation, Herstmonceux Castle, UK, 13-15 June.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>