<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000541">
<title confidence="0.990455">
Parsing Parallel Grammatical Representations
</title>
<author confidence="0.999271">
Derrick Higgins
</author>
<affiliation confidence="0.9983495">
Department of Linguistics
University of Chicago
</affiliation>
<address confidence="0.9412055">
1050 East 59th Street
Chicago, IL 60626
</address>
<email confidence="0.933571">
dchigginÂ©midway.uchicago.edu
</email>
<sectionHeader confidence="0.991309" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999798133333333">
Traditional accounts of quantifier scope em-
ploy qualitative constraints or rules to account
for scoping preferences. This paper outlines
a feature-based parsing algorithm for a gram-
mar with multiple simultaneous levels of repre-
sentation, one of which corresponds to a par-
tial ordering among quantifiers according to
scope. The optimal such ordering (as well as
the ranking of other orderings) is determined
in this grammar not by absolute constraints,
but by stochastic heuristics based on the de-
gree of alignment among the representational
levels. A Prolog implementation is described
and its accuracy is compared with that of other
accounts.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999916354166667">
It has long been recognized that the possibility
and preference rankings of scope readings de-
pend to a great degree on the position of scope-
taking elements in the surface string (Chomsky,
1975; Hobbs and Shieber, 1987). Yet most tra-
ditional accounts of semantic scopal phenomena
in natural language have not directly tied these
two factors together. Instead, they allow only
certain derivations to link the surface structure
of a sentence with the representational level
at which scope relations are determined, place
constraints upon the semantic feature-passing
mechanism, or otherwise emulate a constraint
which requires some degree of congruence be-
tween the surface syntax of a sentence and its
preferred scope reading(s).
A simpler and more direct approach is sug-
gested by constraint-based, multistratal theo-
ries of grammar (Grimshaw, 1997; Jackendoff,
1997; Sadock, 1991; Van Valin, 1993). In these
models, it is possible to posit multiple represen-
tational levels for a sentence without according
ontological primacy to any one of them, as in
all varieties of transformational grammar. This
allows constraints to be formulated which place
limits on structural discrepancies between lev-
els, yet need not be assimilated into an overrid-
ing derivational mechanism.
This paper will examine the model of one of
these theories, Autolexical Grammar (Sadock,
1991; Sadock, 1996; Schiller et al., 1996), as it
is implemented in a computational scope gen-
erator and critic. This left-corner chart parser
generates surface syntactic structures for each
sentence (as the only level of syntactic represen-
tation), as well as Function-Argument seman-
tic structures and Quantifier/Operator-Scope
structures. These latter two structures together
determine the semantic interpretation of a sen-
tence.
It will be shown that this model is both
categorical enough to handle standard gener-
alizations about quantifier scope, such as bans
on extraction from certain domains, and fuzzy
enough to present reasonable preference rank-
ings among scopings and account for lexical
differences in quantifier strength (Hobbs and
Shieber, 1987; Moran, 1988).
</bodyText>
<sectionHeader confidence="0.89318" genericHeader="method">
2 A Multidimensional Approach to
</sectionHeader>
<subsectionHeader confidence="0.8263415">
Quantifier Scoping
2.1 The Autolexical Model
</subsectionHeader>
<bodyText confidence="0.9969034">
The framework of Autolexical Grammar treats
a language as the intersection of numerous inde-
pendent CF-PSGs, or hierarchies, each of which
corresponds to a specific structural or functional
aspect of the language. Semantic, syntactic,
morphological, discourse-functional and many
other hierarchies have been introduced in the
literature, but this project focuses on the in-
teractions among only three major hierarchies:
Surface Syntax, Function-Argument Structure,
</bodyText>
<page confidence="0.997204">
545
</page>
<bodyText confidence="0.999435333333334">
and Operator Scope Structure.
The surface syntactic hierarchy is a feature-
based grammar expressing those generalizations
about a sentence which are most clearly syn-
tactic in nature, such as agreement, case, and
syntactic valency. The function-argument hi-
erarchy expresses that (formal) semantic infor-
mation about a sentence which does not involve
scope resolution, e.g., semantic valency and as-
sociation of referential terms with argument po-
sitions, as in Park (1995). The operator scope
hierarchy, naturally, imposes a scope ordering
on the quantifiers and operators found in the
expression. Two other, minor hierarchies are
employed in this implementation. The linear or-
dering of words in the surface string is treated
as a hierarchy, and a lexical hierarchy is intro-
duced in order to express the differing lexical
&amp;quot;strength&amp;quot; of quantifiers.
Each hierarchy can be represented as a tree
in which the terminal nodes are not ordered
with respect to one another. This implies that,
for example, [John [saw Mary]] and [Mary [saw
John]] will both be acceptable syntactic rep-
resentations for the surface string Mary saw
John. The optimal set of hierarchies for a string
consists of the candidate hierarchies for each
level of representation which together are most
structurally congruous. The structural similar-
ity between hierarchies is determined in Au-
tolexical Grammar by means of an Alignment
Constraint, which in the implementation de-
scribed here counts the number of overlapping
constituents in the two trees. Thus, while struc-
tures similar to [Mary [saw John]] and [John
[saw Mary]] will both be acceptable as syntac-
tic and function-argument structure representa-
tions, the alignment constraint will strongly fa-
vor a pairing in which both hierarchies share the
same representation. Structural hierarchies are
additionally evaluated by means of a Contigu-
ity Constraint, which requires that the terminal
nodes of each constituent of a hierarchy should
be together in the surface string, or at least as
close together as possible.
</bodyText>
<subsectionHeader confidence="0.999098">
2.2 Quantifier Ordering Heuristics
</subsectionHeader>
<bodyText confidence="0.991655321428571">
The main constraints which this model places
on the relative scope of quantifiers and opera-
tors are the alignment of the operator scope hi-
erarchy with syntax, function-argument struc-
ture, and the lexical hierarchy of quantifier
strength. The first of these constraints reflects
&amp;quot;the principle that left-to-right order at the
same syntactic level is preserved in the quan-
tifier order&amp;quot; and accounts for syntactic extrac-
tion restrictions. The second will favor operator
scope structures in which scope-taking elements
are raised as little as possible from their base ar-
gument positions. The last takes account of the
scope preferences of individual quantifiers, such
as the fact that each tends to have wider scope
than all other quantifiers (Hobbs and Shieber,
1987; Moran, 1988).
As an example of the sort of syntactically-
based restrictions on quantifier ordering which
this model can implement, consider the general-
ization listed in Moran (1988), that &amp;quot;a quanti-
fier cannot be raised across more than one ma-
jor clause boundary.&amp;quot; Because the approach
pursued here already has a general constraint
which penalizes candidate parses according to
the degree of discrepancy between their syntax
and scope hierarchies, we do not need to accord
a privileged theoretical status to &amp;quot;major clause
boundaries.&amp;quot;
Figure 1 illustrates the approximate optimal
structure accorded to the sentence Some pa-
tients believe all doctors are competent on the
syntactic and scopal hierarchies, in which an
extracted quantifier crosses one major clause
boundary. It will be given a misalignment index
of 4 (considering for the moment only the inter-
action of these two levels), because of the four
overlapping constituents on the two hierarchies.
This example would be misaligned only to de-
gree 2 if the other quantifier order were chosen,
and depending on the exact sentence type con-
sidered, an example with a scope-taking element
crossing two major clause boundaries should be
misaligned to about degree 8.
The fact that the difference between the pri-
mary and secondary scopings of this sentence
is 2 degrees of alignment, while the difference
between crossing one clause boundary and two
clause boundaries is 4 degrees of alignment, cor-
responds with generally accepted assumptions
about the acceptability of this example. While
the reading in which the scope of quantifiers
mirrors their order in surface structure is cer-
tainly preferred, the other ordering is possible
as well. If the extraction crosses another clause
&apos;Hobbs and Shieber (1987), p. 49
</bodyText>
<page confidence="0.994404">
546
</page>
<figureCaption confidence="0.9655915">
Figure 1: Illustration of the Alignment Constraint. The four highlighted nodes count against this
combination of structures, because they overlap with constituents in the other tree.
</figureCaption>
<figure confidence="0.997929">
NP
Some patients
-------------
believe
NP
/N
all doctors
P
QP
Formula
are competent
</figure>
<bodyText confidence="0.621938333333333">
boundary, however, as in Some patients believe
Mary thinks all doctors are competent, the re-
versed scoping is considerably more unlikely.
</bodyText>
<subsectionHeader confidence="0.987189">
2.3 Lexical Properties of Quantifiers
</subsectionHeader>
<bodyText confidence="0.999830551724138">
In addition to ranking the possible scopings of
a sentence based on the surface syntactic posi-
tions of its quantifiers and operators, the pars-
ing and alignment algorithm employed in this
project takes into account the &amp;quot;strength&amp;quot; of dif-
ferent scope-taking elements. By introducing a
lexical hierarchy of quantifier strength, in which
those elements more likely to take wide scope
are found higher in the tree, we are able to use
the same mechanism of the alignment constraint
to model the facts which other approaches treat
with stipulative heuristics.
For example, in Some patient paid each doc-
tor, the preferred reading is the one in which
each takes wide scope, contrary to our expecta-
tions based on the generalization that the pri-
mary scoping tends to mirror surface syntactic
order. An approach employing some variant of
Cooper storage would have to account for this
by assigning to each pair of quantifiers a like-
lihood that one will be raised past the other.
In this case, it would be highly likely for each
to be raised past some. The autolexical ap-
proach, however, allows us to achieve the same
effect without introducing an additional device.
Given a proper weighting of the result of align-
ing the scope hierarchy with this lexical hierar-
chy, it is a simple matter to settle on the correct
candidates.
</bodyText>
<sectionHeader confidence="0.992716" genericHeader="method">
3 The Algorithm
</sectionHeader>
<subsectionHeader confidence="0.999588">
3.1 Parsing Strategy
</subsectionHeader>
<bodyText confidence="0.999765230769231">
This implementation of the Autolexical account
of quantifier scoping is written for SWI-Prolog,
and inherits much of its feature-based grammat-
ical formalism from the code listings of Gazdar
and Mellish (1989), including dagunify.pl, by
Bob Carpenter. The general strategy employed
by the program is first to find all parses which
each hierarchy&apos;s grammar permits for the string,
and then to pass these lists of structures to func-
tions which implement the alignment and con-
tiguity constraints. These functions perform a
pairwise evaluation of the agreement between
structures, eventually converging on the opti-
mal set of hierarchies.
The same parsing engine is used to generate
structures for each of the major hierarchies con-
tributing to the representation of a string. It is
based on the left-corner parser of pro_patr .p1
in Gazdar and Mellish (1989), attributed origi-
nally to Pereira and Shieber (1987). This parser
has been extended to store intermediate results
for lookup in a hash table.
At present, the parsing of each hierarchy is in-
dependent of that of the other hierarchies, but
ultimately it would be preferable to allow, e.g.,
edges from the syntactic parse to contribute to
</bodyText>
<page confidence="0.994116">
547
</page>
<bodyText confidence="0.999985166666667">
the function-argument parsing process. Such a
development would allow us to express catego-
rial prototypes in a natural way. For example,
the proposition that &amp;quot;syntactic NPs tend to de-
note semantic arguments&amp;quot; could be modeled as
a default rule for incorporating syntactic edges
into a function-argument structure parse.
The &amp;quot;generate and test&amp;quot; mechanism em-
ployed here to maximize the congruity of repre-
sentations on different levels is certainly some-
what inefficient. Some of the structures which
it considers will be bizarre by all accounts. To
a certain degree, this profligacy is held in check
by heuristic cutoffs which exclude a combina-
tion from consideration as soon as it becomes
apparent that is misaligned to an unacceptable
degree. Ultimately, however, the solution may
lie in some sort of parallel approach. A develop-
ment of this program designed either for parallel
Prolog or for a truly parallel architecture could
effect a further restriction on the candidate set
of representations by implementing constraints
on parallel parsing processes, rather than (or in
addition to) on the output of such processes.
</bodyText>
<subsectionHeader confidence="0.999456">
3.2 Alignment
</subsectionHeader>
<bodyText confidence="0.999974777777778">
The alignment constraint (applied by the
align/3 predicate here) compares two trees
(Prolog lists), returning the total number of
overlapping constituents in both trees as a mea-
sure of their misalignent. Constituents are said
to overlap if the sets of terminal nodes which
they dominate intersect, but neither is a subset
of the other.
The code fragment below provides a rough
outline of the operation of this predicate. First,
both trees being compared are &amp;quot;pruned&amp;quot; so that
neither contains any terminal nodes not found
in the other. The terminal elements of each
of the tree&apos;s constituents are then recorded in
lists. Once those constituents which occur in
both trees are removed, the sum of the length
of these two lists is the total number of overlap-
ping constituents.
</bodyText>
<equation confidence="0.3879515">
align(L1,L2,Num)
flatten(L1,F1), flatten(L2,F2),
</equation>
<page confidence="0.361201333333333">
union(F1,F2,AllTerms),
intersection(F1,F2,GoodTerms),
subtract(AllTerms,GoodTerms,BadTerms)
</page>
<figure confidence="0.821495642857143">
% Delete constits without correlates
rmbad(L1,BadTerms,Good1),
rmbad(L2,BadTerms,Good2),
V. Get list of constits in each tree
constits(Goodl,CList1),
constits(Good2,CList2),
% Delete duplicates
intersection(CListl,CList2,CList3),
subtract(CListl,CList3,Final1),
subtract(CList2,CList3,Final2),
% Count mismatches
length(Final1,Size1),
length(Final2,Size2),
Num is Sizel + Size2.
</figure>
<subsectionHeader confidence="0.989353">
3.3 Contiguity
</subsectionHeader>
<bodyText confidence="0.918943032258064">
While the alignment constraint evaluates the
similarity of two trees, the contiguity constraint
(contig/3 in this project) calculates the degree
of fit between a hierarchy and a string (in this
case, the surface string). The relevant measure
of &amp;quot;goodness of fit&amp;quot; is taken here to be the min-
imal number of crossing branches the structure
entails. It is true that this approach makes the
contiguity constraint dependent on the partic-
ular grammatical rules of each representational
level. However, since an Autolexical model does
not attempt to handle syntax directly in the
semantic representation, or morphology in the
syntactic representation, there is no real dan-
ger of proliferating nonterminal nodes on any
particular level.
The definition of the contig predicate is
somewhat more complex than that for align,
because it must find the minimum number of
crossing branches in a structure. It works by
maintaining a chart (based on the contval
predicate) of the number of branches &amp;quot;covering&amp;quot;
each constituent, as it works its way up the tree.
The contmin predicate keeps track of the cur-
rent lowest contiguity violation for the struc-
ture, so that worse alternatives can be aban-
doned as soon as they cross this threshold.
contig([] ,_,O).
contig(A,_,O) :-
not(is_list(A)),
contig([A],Flat,Num)
</bodyText>
<page confidence="0.989554">
548
</page>
<bodyText confidence="0.9791257">
is_list(A),
contig (A , Flat ,Num) ,
!.
contig([A,B],Flat,Num) :-
contig(A,Flat,Num1),
contig(B,Flat,Num2),
contval(A,Left1,Right1,Num3),
contval(B,Left2,Right2,Num4),
Num() is Numl + Num2 + Num3 + Num4,
forall(contmin(Min),
</bodyText>
<equation confidence="0.926425666666667">
(NumÂ° &gt;= Min) *-&gt; fail ; true),
Num is Num0,
forall(contval(X,L,R,N),
(L &gt; min(Leftl,Left2),
R &lt; max(Rightl,Right2)) *-&gt;
(retract(contval(X,L,R,N)),
asserta(contval(X,L,R,N+1)))
; true),
asserta(
</equation>
<bodyText confidence="0.811406">
contval([A,B],min(Leftl,Left2),
max(Rightl,Right2),0)).
contig(D,ALFlat,Num) :-
contig(A,Flat,Num1),
contig(B,Flat,Num2),
contval(A,Leftl,Rightl,Num3),
contval(B,Left2,Right2,Num4),
Num0 is Numl + Num2 + Num3 + Num4 ,
forall(contmin(Min),
</bodyText>
<equation confidence="0.903506444444445">
(NumÂ° &gt;= Min) *-&gt; fail ; true),
Num is Num0,
forall(contval(X,L,R,N),
(L &gt; min(Left1,Left2),
R &lt; max(Right1,Right2)) *-&gt;
(retract(contval(X,L,R,N)),
asserta(contval(X,L,R,N+1)))
; true),
asserta(
</equation>
<bodyText confidence="0.921693">
contval([A,B],min(Leftl,Left2),
max(Right1,Right2),0)).
</bodyText>
<sectionHeader confidence="0.998146" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999927894736842">
Multistratal theories of grammar are not often
chosen as guidelines for computational linguis-
tics, because of performance and manageability
concerns. This project, however, should at least
demonstrate that even in a high-level language
like Prolog a multistratal parsing model can be
made to produce consistent results in a reason-
able length of time.
Furthermore, the project described here does
more than simply emulate the output of a stan-
dard, monostratal CF-PSG parser; it yields a
preference ranking of readings for each string,
rather than a single right answer. While the
Autolexical model may not now be correct for
applications in which speed is of primary con-
cern, it has only begun to be implemented com-
putationally, and any serious attempt at infer-
encing from natural language input will have to
produce similar, graded output (Moran, 1988).
</bodyText>
<sectionHeader confidence="0.998411" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999633025641026">
Noam Chomsky. 1975. Deep structure, sur-
face structure, and semantic interpretation.
In Studies on Semantics in Generative Gram-
mar, pages 62-119. Mouton.
Gerald Gazdar and Chris Mellish. 1989. Natu-
ral Language Processing in PROLOG. Addi-
son Wesley.
Jane Grimshaw. 1997. Projection, heads, and
optimality. Linguistic Inquiry, 28(3):373-
422.
Jerry R. Hobbs and Stuart M. Shieber. 1987.
An algorithm for generating quantifier scop-
ings. Computational Linguistics, 13:47-63.
Ray Jackendoff. 1997. The Architecture of the
Language Faculty. Number 28 in Linguistic
Inquiry Monographs. The MIT Press.
Douglas B. Moran. 1988. Quantifier scoping in
the SRI core language engine. In ACL Pro-
ceedings, 26th Annual Meeting, pages 33-40.
Jong C. Park. 1995. Quantifier scope and con-
stituency. In ACL Proceedings, 33rd Annual
Meeting.
Fernando C.N. Pereira and Stuart M. Shieber.
1987. Prolog and Natural-Language Analysis,
volume 10 of CSLI Lecture Notes. Center for
the Study of Language and Information.
Jerrold M. Sadock. 1991. Autolexical Syntax: a
Theory of Parallel Grammatical Representa-
tions. University of Chicago Press.
Jerrold M. Sadock. 1996. Reflexive reference in
west greenlandic. Contemporary Linguistics,
1:137-160.
Eric Schiller, Elisa Steinberg, and Barbara
Need, editors. 1996. Autolexical Theory:
Ideas and Methods. Mouton de Gruyter.
Robert D. Van Valin, editor. 1993. Advances
in Role and Reference Grammar. Number 82
in Current Issues in Linguistic Theory. John
Benjamins Publishing Company.
</reference>
<page confidence="0.998734">
549
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.958861">
<title confidence="0.999953">Parsing Parallel Grammatical Representations</title>
<author confidence="0.999908">Derrick Higgins</author>
<affiliation confidence="0.9999115">Department of Linguistics University of Chicago</affiliation>
<address confidence="0.9979485">1050 East 59th Street Chicago, IL 60626</address>
<email confidence="0.999745">dchigginÂ©midway.uchicago.edu</email>
<abstract confidence="0.9976603125">Traditional accounts of quantifier scope employ qualitative constraints or rules to account for scoping preferences. This paper outlines a feature-based parsing algorithm for a grammar with multiple simultaneous levels of representation, one of which corresponds to a partial ordering among quantifiers according to scope. The optimal such ordering (as well as the ranking of other orderings) is determined in this grammar not by absolute constraints, but by stochastic heuristics based on the degree of alignment among the representational levels. A Prolog implementation is described and its accuracy is compared with that of other accounts.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Noam Chomsky</author>
</authors>
<title>Deep structure, surface structure, and semantic interpretation.</title>
<date>1975</date>
<booktitle>In Studies on Semantics in Generative Grammar,</booktitle>
<pages>62--119</pages>
<publisher>Mouton.</publisher>
<contexts>
<context position="1038" citStr="Chomsky, 1975" startWordPosition="153" endWordPosition="154">one of which corresponds to a partial ordering among quantifiers according to scope. The optimal such ordering (as well as the ranking of other orderings) is determined in this grammar not by absolute constraints, but by stochastic heuristics based on the degree of alignment among the representational levels. A Prolog implementation is described and its accuracy is compared with that of other accounts. 1 Introduction It has long been recognized that the possibility and preference rankings of scope readings depend to a great degree on the position of scopetaking elements in the surface string (Chomsky, 1975; Hobbs and Shieber, 1987). Yet most traditional accounts of semantic scopal phenomena in natural language have not directly tied these two factors together. Instead, they allow only certain derivations to link the surface structure of a sentence with the representational level at which scope relations are determined, place constraints upon the semantic feature-passing mechanism, or otherwise emulate a constraint which requires some degree of congruence between the surface syntax of a sentence and its preferred scope reading(s). A simpler and more direct approach is suggested by constraint-bas</context>
</contexts>
<marker>Chomsky, 1975</marker>
<rawString>Noam Chomsky. 1975. Deep structure, surface structure, and semantic interpretation. In Studies on Semantics in Generative Grammar, pages 62-119. Mouton.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gerald Gazdar</author>
<author>Chris Mellish</author>
</authors>
<title>Natural Language Processing in PROLOG.</title>
<date>1989</date>
<publisher>Addison Wesley.</publisher>
<contexts>
<context position="10111" citStr="Gazdar and Mellish (1989)" startWordPosition="1561" endWordPosition="1564">ne will be raised past the other. In this case, it would be highly likely for each to be raised past some. The autolexical approach, however, allows us to achieve the same effect without introducing an additional device. Given a proper weighting of the result of aligning the scope hierarchy with this lexical hierarchy, it is a simple matter to settle on the correct candidates. 3 The Algorithm 3.1 Parsing Strategy This implementation of the Autolexical account of quantifier scoping is written for SWI-Prolog, and inherits much of its feature-based grammatical formalism from the code listings of Gazdar and Mellish (1989), including dagunify.pl, by Bob Carpenter. The general strategy employed by the program is first to find all parses which each hierarchy&apos;s grammar permits for the string, and then to pass these lists of structures to functions which implement the alignment and contiguity constraints. These functions perform a pairwise evaluation of the agreement between structures, eventually converging on the optimal set of hierarchies. The same parsing engine is used to generate structures for each of the major hierarchies contributing to the representation of a string. It is based on the left-corner parser </context>
</contexts>
<marker>Gazdar, Mellish, 1989</marker>
<rawString>Gerald Gazdar and Chris Mellish. 1989. Natural Language Processing in PROLOG. Addison Wesley.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jane Grimshaw</author>
</authors>
<date>1997</date>
<booktitle>Projection, heads, and optimality. Linguistic Inquiry,</booktitle>
<pages>28--3</pages>
<contexts>
<context position="1690" citStr="Grimshaw, 1997" startWordPosition="250" endWordPosition="251">raditional accounts of semantic scopal phenomena in natural language have not directly tied these two factors together. Instead, they allow only certain derivations to link the surface structure of a sentence with the representational level at which scope relations are determined, place constraints upon the semantic feature-passing mechanism, or otherwise emulate a constraint which requires some degree of congruence between the surface syntax of a sentence and its preferred scope reading(s). A simpler and more direct approach is suggested by constraint-based, multistratal theories of grammar (Grimshaw, 1997; Jackendoff, 1997; Sadock, 1991; Van Valin, 1993). In these models, it is possible to posit multiple representational levels for a sentence without according ontological primacy to any one of them, as in all varieties of transformational grammar. This allows constraints to be formulated which place limits on structural discrepancies between levels, yet need not be assimilated into an overriding derivational mechanism. This paper will examine the model of one of these theories, Autolexical Grammar (Sadock, 1991; Sadock, 1996; Schiller et al., 1996), as it is implemented in a computational scop</context>
</contexts>
<marker>Grimshaw, 1997</marker>
<rawString>Jane Grimshaw. 1997. Projection, heads, and optimality. Linguistic Inquiry, 28(3):373-422.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jerry R Hobbs</author>
<author>Stuart M Shieber</author>
</authors>
<title>An algorithm for generating quantifier scopings.</title>
<date>1987</date>
<journal>Computational Linguistics,</journal>
<pages>13--47</pages>
<contexts>
<context position="1064" citStr="Hobbs and Shieber, 1987" startWordPosition="155" endWordPosition="158">rresponds to a partial ordering among quantifiers according to scope. The optimal such ordering (as well as the ranking of other orderings) is determined in this grammar not by absolute constraints, but by stochastic heuristics based on the degree of alignment among the representational levels. A Prolog implementation is described and its accuracy is compared with that of other accounts. 1 Introduction It has long been recognized that the possibility and preference rankings of scope readings depend to a great degree on the position of scopetaking elements in the surface string (Chomsky, 1975; Hobbs and Shieber, 1987). Yet most traditional accounts of semantic scopal phenomena in natural language have not directly tied these two factors together. Instead, they allow only certain derivations to link the surface structure of a sentence with the representational level at which scope relations are determined, place constraints upon the semantic feature-passing mechanism, or otherwise emulate a constraint which requires some degree of congruence between the surface syntax of a sentence and its preferred scope reading(s). A simpler and more direct approach is suggested by constraint-based, multistratal theories </context>
<context position="2956" citStr="Hobbs and Shieber, 1987" startWordPosition="437" endWordPosition="440">art parser generates surface syntactic structures for each sentence (as the only level of syntactic representation), as well as Function-Argument semantic structures and Quantifier/Operator-Scope structures. These latter two structures together determine the semantic interpretation of a sentence. It will be shown that this model is both categorical enough to handle standard generalizations about quantifier scope, such as bans on extraction from certain domains, and fuzzy enough to present reasonable preference rankings among scopings and account for lexical differences in quantifier strength (Hobbs and Shieber, 1987; Moran, 1988). 2 A Multidimensional Approach to Quantifier Scoping 2.1 The Autolexical Model The framework of Autolexical Grammar treats a language as the intersection of numerous independent CF-PSGs, or hierarchies, each of which corresponds to a specific structural or functional aspect of the language. Semantic, syntactic, morphological, discourse-functional and many other hierarchies have been introduced in the literature, but this project focuses on the interactions among only three major hierarchies: Surface Syntax, Function-Argument Structure, 545 and Operator Scope Structure. The surfa</context>
<context position="6344" citStr="Hobbs and Shieber, 1987" startWordPosition="954" endWordPosition="957">archy with syntax, function-argument structure, and the lexical hierarchy of quantifier strength. The first of these constraints reflects &amp;quot;the principle that left-to-right order at the same syntactic level is preserved in the quantifier order&amp;quot; and accounts for syntactic extraction restrictions. The second will favor operator scope structures in which scope-taking elements are raised as little as possible from their base argument positions. The last takes account of the scope preferences of individual quantifiers, such as the fact that each tends to have wider scope than all other quantifiers (Hobbs and Shieber, 1987; Moran, 1988). As an example of the sort of syntacticallybased restrictions on quantifier ordering which this model can implement, consider the generalization listed in Moran (1988), that &amp;quot;a quantifier cannot be raised across more than one major clause boundary.&amp;quot; Because the approach pursued here already has a general constraint which penalizes candidate parses according to the degree of discrepancy between their syntax and scope hierarchies, we do not need to accord a privileged theoretical status to &amp;quot;major clause boundaries.&amp;quot; Figure 1 illustrates the approximate optimal structure accorded t</context>
<context position="8100" citStr="Hobbs and Shieber (1987)" startWordPosition="1232" endWordPosition="1235">element crossing two major clause boundaries should be misaligned to about degree 8. The fact that the difference between the primary and secondary scopings of this sentence is 2 degrees of alignment, while the difference between crossing one clause boundary and two clause boundaries is 4 degrees of alignment, corresponds with generally accepted assumptions about the acceptability of this example. While the reading in which the scope of quantifiers mirrors their order in surface structure is certainly preferred, the other ordering is possible as well. If the extraction crosses another clause &apos;Hobbs and Shieber (1987), p. 49 546 Figure 1: Illustration of the Alignment Constraint. The four highlighted nodes count against this combination of structures, because they overlap with constituents in the other tree. NP Some patients ------------- believe NP /N all doctors P QP Formula are competent boundary, however, as in Some patients believe Mary thinks all doctors are competent, the reversed scoping is considerably more unlikely. 2.3 Lexical Properties of Quantifiers In addition to ranking the possible scopings of a sentence based on the surface syntactic positions of its quantifiers and operators, the parsing</context>
</contexts>
<marker>Hobbs, Shieber, 1987</marker>
<rawString>Jerry R. Hobbs and Stuart M. Shieber. 1987. An algorithm for generating quantifier scopings. Computational Linguistics, 13:47-63.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ray Jackendoff</author>
</authors>
<title>The Architecture of the Language Faculty. Number 28 in Linguistic Inquiry Monographs.</title>
<date>1997</date>
<publisher>The MIT Press.</publisher>
<contexts>
<context position="1708" citStr="Jackendoff, 1997" startWordPosition="252" endWordPosition="253">nts of semantic scopal phenomena in natural language have not directly tied these two factors together. Instead, they allow only certain derivations to link the surface structure of a sentence with the representational level at which scope relations are determined, place constraints upon the semantic feature-passing mechanism, or otherwise emulate a constraint which requires some degree of congruence between the surface syntax of a sentence and its preferred scope reading(s). A simpler and more direct approach is suggested by constraint-based, multistratal theories of grammar (Grimshaw, 1997; Jackendoff, 1997; Sadock, 1991; Van Valin, 1993). In these models, it is possible to posit multiple representational levels for a sentence without according ontological primacy to any one of them, as in all varieties of transformational grammar. This allows constraints to be formulated which place limits on structural discrepancies between levels, yet need not be assimilated into an overriding derivational mechanism. This paper will examine the model of one of these theories, Autolexical Grammar (Sadock, 1991; Sadock, 1996; Schiller et al., 1996), as it is implemented in a computational scope generator and cr</context>
</contexts>
<marker>Jackendoff, 1997</marker>
<rawString>Ray Jackendoff. 1997. The Architecture of the Language Faculty. Number 28 in Linguistic Inquiry Monographs. The MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Douglas B Moran</author>
</authors>
<title>Quantifier scoping in the SRI core language engine.</title>
<date>1988</date>
<booktitle>In ACL Proceedings, 26th Annual Meeting,</booktitle>
<pages>33--40</pages>
<contexts>
<context position="2970" citStr="Moran, 1988" startWordPosition="441" endWordPosition="442">ace syntactic structures for each sentence (as the only level of syntactic representation), as well as Function-Argument semantic structures and Quantifier/Operator-Scope structures. These latter two structures together determine the semantic interpretation of a sentence. It will be shown that this model is both categorical enough to handle standard generalizations about quantifier scope, such as bans on extraction from certain domains, and fuzzy enough to present reasonable preference rankings among scopings and account for lexical differences in quantifier strength (Hobbs and Shieber, 1987; Moran, 1988). 2 A Multidimensional Approach to Quantifier Scoping 2.1 The Autolexical Model The framework of Autolexical Grammar treats a language as the intersection of numerous independent CF-PSGs, or hierarchies, each of which corresponds to a specific structural or functional aspect of the language. Semantic, syntactic, morphological, discourse-functional and many other hierarchies have been introduced in the literature, but this project focuses on the interactions among only three major hierarchies: Surface Syntax, Function-Argument Structure, 545 and Operator Scope Structure. The surface syntactic h</context>
<context position="6358" citStr="Moran, 1988" startWordPosition="958" endWordPosition="959">on-argument structure, and the lexical hierarchy of quantifier strength. The first of these constraints reflects &amp;quot;the principle that left-to-right order at the same syntactic level is preserved in the quantifier order&amp;quot; and accounts for syntactic extraction restrictions. The second will favor operator scope structures in which scope-taking elements are raised as little as possible from their base argument positions. The last takes account of the scope preferences of individual quantifiers, such as the fact that each tends to have wider scope than all other quantifiers (Hobbs and Shieber, 1987; Moran, 1988). As an example of the sort of syntacticallybased restrictions on quantifier ordering which this model can implement, consider the generalization listed in Moran (1988), that &amp;quot;a quantifier cannot be raised across more than one major clause boundary.&amp;quot; Because the approach pursued here already has a general constraint which penalizes candidate parses according to the degree of discrepancy between their syntax and scope hierarchies, we do not need to accord a privileged theoretical status to &amp;quot;major clause boundaries.&amp;quot; Figure 1 illustrates the approximate optimal structure accorded to the sentence</context>
</contexts>
<marker>Moran, 1988</marker>
<rawString>Douglas B. Moran. 1988. Quantifier scoping in the SRI core language engine. In ACL Proceedings, 26th Annual Meeting, pages 33-40.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jong C Park</author>
</authors>
<title>Quantifier scope and constituency.</title>
<date>1995</date>
<booktitle>In ACL Proceedings, 33rd Annual Meeting.</booktitle>
<contexts>
<context position="3984" citStr="Park (1995)" startWordPosition="586" endWordPosition="587">e literature, but this project focuses on the interactions among only three major hierarchies: Surface Syntax, Function-Argument Structure, 545 and Operator Scope Structure. The surface syntactic hierarchy is a featurebased grammar expressing those generalizations about a sentence which are most clearly syntactic in nature, such as agreement, case, and syntactic valency. The function-argument hierarchy expresses that (formal) semantic information about a sentence which does not involve scope resolution, e.g., semantic valency and association of referential terms with argument positions, as in Park (1995). The operator scope hierarchy, naturally, imposes a scope ordering on the quantifiers and operators found in the expression. Two other, minor hierarchies are employed in this implementation. The linear ordering of words in the surface string is treated as a hierarchy, and a lexical hierarchy is introduced in order to express the differing lexical &amp;quot;strength&amp;quot; of quantifiers. Each hierarchy can be represented as a tree in which the terminal nodes are not ordered with respect to one another. This implies that, for example, [John [saw Mary]] and [Mary [saw John]] will both be acceptable syntactic </context>
</contexts>
<marker>Park, 1995</marker>
<rawString>Jong C. Park. 1995. Quantifier scope and constituency. In ACL Proceedings, 33rd Annual Meeting.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fernando C N Pereira</author>
<author>Stuart M Shieber</author>
</authors>
<title>Prolog and Natural-Language Analysis,</title>
<date>1987</date>
<volume>10</volume>
<contexts>
<context position="10808" citStr="Pereira and Shieber (1987)" startWordPosition="1672" endWordPosition="1675">d by the program is first to find all parses which each hierarchy&apos;s grammar permits for the string, and then to pass these lists of structures to functions which implement the alignment and contiguity constraints. These functions perform a pairwise evaluation of the agreement between structures, eventually converging on the optimal set of hierarchies. The same parsing engine is used to generate structures for each of the major hierarchies contributing to the representation of a string. It is based on the left-corner parser of pro_patr .p1 in Gazdar and Mellish (1989), attributed originally to Pereira and Shieber (1987). This parser has been extended to store intermediate results for lookup in a hash table. At present, the parsing of each hierarchy is independent of that of the other hierarchies, but ultimately it would be preferable to allow, e.g., edges from the syntactic parse to contribute to 547 the function-argument parsing process. Such a development would allow us to express categorial prototypes in a natural way. For example, the proposition that &amp;quot;syntactic NPs tend to denote semantic arguments&amp;quot; could be modeled as a default rule for incorporating syntactic edges into a function-argument structure p</context>
</contexts>
<marker>Pereira, Shieber, 1987</marker>
<rawString>Fernando C.N. Pereira and Stuart M. Shieber. 1987. Prolog and Natural-Language Analysis, volume 10 of CSLI Lecture Notes. Center for the Study of Language and Information.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jerrold M Sadock</author>
</authors>
<title>Autolexical Syntax: a Theory of Parallel Grammatical Representations.</title>
<date>1991</date>
<publisher>University of Chicago Press.</publisher>
<contexts>
<context position="1722" citStr="Sadock, 1991" startWordPosition="254" endWordPosition="255">opal phenomena in natural language have not directly tied these two factors together. Instead, they allow only certain derivations to link the surface structure of a sentence with the representational level at which scope relations are determined, place constraints upon the semantic feature-passing mechanism, or otherwise emulate a constraint which requires some degree of congruence between the surface syntax of a sentence and its preferred scope reading(s). A simpler and more direct approach is suggested by constraint-based, multistratal theories of grammar (Grimshaw, 1997; Jackendoff, 1997; Sadock, 1991; Van Valin, 1993). In these models, it is possible to posit multiple representational levels for a sentence without according ontological primacy to any one of them, as in all varieties of transformational grammar. This allows constraints to be formulated which place limits on structural discrepancies between levels, yet need not be assimilated into an overriding derivational mechanism. This paper will examine the model of one of these theories, Autolexical Grammar (Sadock, 1991; Sadock, 1996; Schiller et al., 1996), as it is implemented in a computational scope generator and critic. This lef</context>
</contexts>
<marker>Sadock, 1991</marker>
<rawString>Jerrold M. Sadock. 1991. Autolexical Syntax: a Theory of Parallel Grammatical Representations. University of Chicago Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jerrold M Sadock</author>
</authors>
<title>Reflexive reference in west greenlandic.</title>
<date>1996</date>
<journal>Contemporary Linguistics,</journal>
<pages>1--137</pages>
<contexts>
<context position="2220" citStr="Sadock, 1996" startWordPosition="331" endWordPosition="332">is suggested by constraint-based, multistratal theories of grammar (Grimshaw, 1997; Jackendoff, 1997; Sadock, 1991; Van Valin, 1993). In these models, it is possible to posit multiple representational levels for a sentence without according ontological primacy to any one of them, as in all varieties of transformational grammar. This allows constraints to be formulated which place limits on structural discrepancies between levels, yet need not be assimilated into an overriding derivational mechanism. This paper will examine the model of one of these theories, Autolexical Grammar (Sadock, 1991; Sadock, 1996; Schiller et al., 1996), as it is implemented in a computational scope generator and critic. This left-corner chart parser generates surface syntactic structures for each sentence (as the only level of syntactic representation), as well as Function-Argument semantic structures and Quantifier/Operator-Scope structures. These latter two structures together determine the semantic interpretation of a sentence. It will be shown that this model is both categorical enough to handle standard generalizations about quantifier scope, such as bans on extraction from certain domains, and fuzzy enough to p</context>
</contexts>
<marker>Sadock, 1996</marker>
<rawString>Jerrold M. Sadock. 1996. Reflexive reference in west greenlandic. Contemporary Linguistics, 1:137-160.</rawString>
</citation>
<citation valid="true">
<date>1996</date>
<booktitle>Autolexical Theory: Ideas and Methods. Mouton de Gruyter.</booktitle>
<editor>Eric Schiller, Elisa Steinberg, and Barbara Need, editors.</editor>
<marker>1996</marker>
<rawString>Eric Schiller, Elisa Steinberg, and Barbara Need, editors. 1996. Autolexical Theory: Ideas and Methods. Mouton de Gruyter.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert D Van Valin</author>
<author>editor</author>
</authors>
<date>1993</date>
<booktitle>Advances in Role and Reference Grammar. Number 82 in Current Issues in Linguistic Theory.</booktitle>
<publisher>John Benjamins Publishing Company.</publisher>
<marker>Van Valin, editor, 1993</marker>
<rawString>Robert D. Van Valin, editor. 1993. Advances in Role and Reference Grammar. Number 82 in Current Issues in Linguistic Theory. John Benjamins Publishing Company.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>