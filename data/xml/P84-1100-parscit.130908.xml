<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000149">
<note confidence="0.5697846">
EXPERT SYSTEMS AND OTHER NEW TECHNIQUES IN MT SYSTEMS
Christian BOITET - Ren√© GERBER
Groupe d&apos;Etudes pour la Traduction Automatique
BP no 68
Universita de Grenoble
</note>
<sectionHeader confidence="0.557202666666667" genericHeader="abstract">
38402 Saint-Martin d&apos;Hares
FRANCE
ABSTRACT
</sectionHeader>
<bodyText confidence="0.988437621621622">
Our MT systems integrate many advanced con-
cepts from the fields of computer science, linguis-
tics, and Al : specialized languages for linguistic
programming based on production systems, complete
linguistic programming environment, multilevel
representations, organization of the lexicons
around &amp;quot;lexical units&amp;quot;, units of translation of the
size of several paragraphs, possibility of using
text-driven heuristic strategies.
We are now beginning to integrate new techni-
ques : unified design of an &amp;quot;integrated&amp;quot; lexical
data-base containing the lexicon in &amp;quot;natural&amp;quot; and
&amp;quot;coded&amp;quot; form, use of the &amp;quot;static grammars&amp;quot; forma-
lism as a specification language, addition of
expert systems equipped with &amp;quot;extralinguistic&amp;quot; or
&amp;quot;metalinguistic&amp;quot; knowledge, and design of a kind
of structural metaeditor (driven by a static
grammar) allowing the interactive construction of
a document in the same way as syntactic editors
are used for developing programs. We end the paper
by mentioning some projects for long-term research.
INTRODUCTION
In this paper, we assume some basic knowledge
of CAT (Computer Aided Translation) terminology
(MT, MAHT, RANT, etc.). The starting point of our
research towards &amp;quot;better&amp;quot; CAT systems is briefly
reviewed in I. In II, we present 3 lines of current
work : improving current second-generation metho-
dology by incorporating advanced techniques from
software engineering, moving toward third-genera-
tion systems by incorporating expert systems, and
returning to interactive techniques for the
creation of a document.
I - IMPORTANT CONCEPTS FROM EXISTING SYSTEMS
For lack of space, we only list our major
points, and refer the reader to (3,4,5,6,15) for
further details.
</bodyText>
<listItem confidence="0.9871188">
1 - Computer science aspects
1) Use of Specialized Languages for Linguistic
Programming (SLLP), like ATEF, ROBRA, Q-systems,
REZO, etc.
2) Integration in some &amp;quot;user-friendly&amp;quot; envi-
</listItem>
<bodyText confidence="0.918498428571429">
ronment, controlled by a conversational interface,
and managing a specialized data-base composed of
what we call &amp;quot;lingware&amp;quot; (grammars, dictionaries,
procedures, formats, variables) and
corpuses of texts (source, translated, revised,
plus intermediate results and possibly
&amp;quot;hors-textes&amp;quot; -- figures, etc.).
</bodyText>
<listItem confidence="0.984120333333333">
3) Analogy with compiler-compiler systems :
rough translation is realized by a monolingual
analysis, followed by a bilingual transfer, and
then by a monolingual generation (synthesis).
2 - Linguistic aspects
1) Only linguistic levels (of morphology,
syntax, logico-semantics, modality, actualisation,
...) are used, leading to some implicit understan-
ding, characteristic of second-generation MT
systems.
2) Hence, the extralinguistic levels (of
expertise and pragmatics) which furnish some
degree of explicit understanding are beyond the
limits of second-generation CAT systems.
3) During analysis of a unit of translation,
computation of these (linguistic) levels is not
done sequentially, but in a cooperative way.
Analysis produces the analog of an &amp;quot;abstract tree&amp;quot;,
namely a multilevel interface structure to repre-
sent all the computed levels on the same graph
(a &amp;quot;decorated tree&amp;quot;).
4) Lexical knowledge is organized around the
notion of lexical unit (LU), allowing for powerful
paraphrasing capability.
5) The texts are segmented into translation
units of one or more paragraphs. This allows for
intersentential resolution of anaphora in some
not too difficult cases.
3 - Al aspects
1) During the structural steps, the unit of
</listItem>
<bodyText confidence="0.973104818181818">
translation is represented by the current &amp;quot;object
tree&amp;quot;, which may encode several competinginterpre-
tations,like the &amp;quot;blackboard&amp;quot; of some Al systems.
2)This and the SLLPs&apos; control structures
allow for some heuristic programming : it is
possible to explicitly describe and process ambi-
guous situations in the production rules.
This is in contrast to systems based on combi-
natorial algorithms which construct each interpre-
tation independently, even if they represent them
in a factorized way.
</bodyText>
<page confidence="0.99511">
468
</page>
<bodyText confidence="0.991816416000001">
II - DIRECTIONS OF CURRENT WORK
1 - Linguistic knowledge processing
The experience gained by the development of a
Russian-French translation unit of a realistic size
over the last three years (6) has shown that main-
taining and upgrading the lingware, even in an
admittedly limited second generation CAT system,
requiresa good deal of expertise. Techniques are
now being developed to maintain the linguistic
knowledge base. Some of them deal with the lexical
data-base, others with the definition and use of
specification formalisms (&amp;quot;static grammars&amp;quot;) and
verification tools.
Lexical knowledge processing
In the long run, dictionaries turn out to be
the costliest components of CAT systems. Hence, we
are working towards the reconciliation of &amp;quot;natural&amp;quot;
and &amp;quot;coded&amp;quot; dictionaries, and towards the construc-
tion of automated verification and indexing tools.
Natural dictionaries are usually accessed by
lemmas (normal forms). Coded dictionaries of CAT
systems, on the other hand, are accessed by morphs
or by lexical units. Moreover, the information the
two types of dictionaries contain is not the same.
However, it is highly desirable to maintain some
degree of coherency between the coded dictionaries
of a CAT system and the natural dictionaries which
constitute their source, for documentation purposes,
and also because these computerized natural dictio-
naries should be made accessible to the revisors.
Let us briefly present the kind of structure
proposed by N. Nedobejkine and Ch. Boitet at an
ATALA meeting in Paris in 1983. The central idea
here is to start from the structure of modern
dictionaries, which are accessed by the lemmas, but
use the notion of lexical unit. Each item may be
considered as a tree structure. Starting from the
top, selections of a &amp;quot;local&amp;quot; nature (on the
syntactico-semantic behavior in a phrase or in a
sentence) give access to the &amp;quot;constructions&amp;quot;. Then,
more &amp;quot;global&amp;quot; constraints lead to &amp;quot;word senses&amp;quot;.
At each node, codes of one or more formalized
models may be grafted on. Hence, it is in principle
possible to index directly in this structure, and
then to design programs to construct the coded
dictionaries in the formats expected by the various
SLLP. Up to this level, the information is monolin-
gual and usable for analysis as well as for genera-
tion. If the considered language is source in one
or more language pairs, each word sense may be
further refined, for each target language, and lead
to equivalents expressed as constructions of the
target language, with all other information contai-
ned in the dictionary constructed in a similar way
for the target language. For lack of space, we
cannot include examples.
This part of the work thus aims at finding
a good way of representing lexical knowledge
But there is another problem, perhaps even more
important. Because of the cost of building machine
dictionaries, we need some way to transform and
transport lexical knowledge from one CAT system to
another. This is obviously a problem of translation.
Hence, we consider this type of &amp;quot;integrated struc-
ture&amp;quot; as a possible lexical interface structure.
Research has recently begun on the possibility of
using classical or advanced data base systems to
store this lexical knowledge and to implement the
various tools required for addition and verifica-
tion. VISULEX and ATLAS (1) are first versions of
such tools.
Grammatical knowledge processing
Just as in current software engineering, we
have long felt the need for some level of &amp;quot;static&amp;quot;
(algebraic) specification of the functions to be
realized by algorithms expressed in procedural
programming languages. In the case of CAT systems,
there is no a priori correct grammar of the
language, and natural language is inherently ambi-
guous. Hence, any usable specification must specify
a relation (not a function) between strings and
trees, or trees and trees : many trees may corres-
pond to one string, and, conversely, many strings
may correspond to one tree.
Working with B. Vauquois in this direction,
S. Chappuy has developed a formalism of static
grammars (7), presented in charts expressing the
relation between strings of terminal elements
(usually decorations expressing the result of some
morphological analysis) and multilevel structural
descriptors. This formalism is currently being
used for all new linguistic developments at GETA.
Of course, this is not a completely new idea. For
example, M. Kay (13) proposed the formalism of
unification grammars for quite the same purpose.
But his formalism is more algebraic and less
geometric in nature, and we prefer to use a speci-
fication in terms of the kind of structures we are
accustomed to manipulating.
2 - Grafting on expert systems
Seeing that linguistic expertise is already
quite well represented and handled in current
(&amp;quot;closed&amp;quot;) systems, we are orienting our research
towards the possibility of adding extralinguistic
knowledge (knowledge about some technical or scien-
tific field, for instance) to existing CAT systems.
Also, because current systems are based on trans-
ducers rather than on analyzers, it is perfectly
possible that the result of analysis or of transfer
(the &amp;quot;structural descriptors&amp;quot;) are partially
incorrect and need correction. Knowledge about the
types of errors made by linguistic systems may be
called metalinguistic.
In his recent thesis (9), R. Gerber has
attempted to design such a system, and to propose
an initial implementation. The expertise to be
incorporated in this system includes linguistic,
metalinguistic, and extralinguistic knowledge. The
system is constructed by combining a &amp;quot;closed&amp;quot;
system, based only on linguistic knowledge (a ling-
ware written in ARIANE-78), and two &amp;quot;open&amp;quot;
systems, called &amp;quot;expert corrector systems&amp;quot;. The
first is inserted at the junction between analysis
and transfer, and the second between transfer and
generation.
</bodyText>
<page confidence="0.99845">
469
</page>
<bodyText confidence="0.99572">
The control structure of a corrector system
is as follows :
</bodyText>
<listItem confidence="0.9892436">
(1) transform the result of analysis into a
suitable form ;
(2) while there is some error configuration do
solve (using meta- or extralinguistic
knowledge) ;
if solving has failed then exit endif ;
(4) perform a partial reconstruction of the
structure, according to the solution found ;
endwhile ;
(5) output the final structure in ARIANE-78format.
</listItem>
<bodyText confidence="0.874028">
(2) relies on metalinguistic knowledge only.
The implementation has been done in Foll-PROLOG
(8). The lingware used corresponds to a small
English-French system developed for teaching pur-
poses. Here are some examples.
Example 1 : ADJ + N N
</bodyText>
<listItem confidence="0.758154">
(1) Standard free-energy change is calculated by
this equation.
</listItem>
<bodyText confidence="0.971709978723404">
The analyzer proposes that &amp;quot;standard&amp;quot; modifies
&amp;quot;change&amp;quot;, while &amp;quot;free-energy&amp;quot; is juxtaposed to
&amp;quot;change&amp;quot;, hence the erroneous translation :
&amp;quot;La variable standard egnergie libre est calculge
par cette formule&amp;quot;.
In order to correct the structure, some
knowledge of chemistry is required, namely that
&amp;quot;standard free-energy change&amp;quot; is a ... standard
notion. With this grouping, (1) translates as :
&amp;quot;La variation d&apos;gnergie libre standard estcalculge
par cette formule&amp;quot;.
Example 2 : (ADJ) N and N N
(2) The mixture gives off dangerous cyanide and
chlorine fumes.
(2&apos;) The experiment requires carbon and nitrogen
tetraoxyde.
Let us develop this example a little more.
Sentence (2) presents the problem of determining
the scope of the coordination. The result of ana-
lysis (tree n¬∞ 2) groups &amp;quot;dangerous cyanide&amp;quot; and
chlorine fumes&amp;quot;, &amp;quot;chlorine&amp;quot; being juxtaposed to
&amp;quot;fumes&amp;quot; (SF(JUXT) on node 12). Hence the
translation :
&amp;quot;La preparation dggage le cyanure et la vapeur de
chlore dangereux&amp;quot;.
But, if we know that cyanide is dangerous as
fumes, and not as crystals, we can correct the
structure by grouping &amp;quot;(cyanide and chlorine)
fumes&amp;quot; (see subtree n¬∞ 2). The translation
produced will then be :
&amp;quot;La preparation dggage la vapeur dangereuse de
cyanure et de chlore&amp;quot;.
Of course, some more sophisticated analyzers
would (and some actually do) use the semantic mar-
ker &amp;quot;chemical element&amp;quot; present on both &amp;quot;chlorine&amp;quot;
and &amp;quot;cyanide&amp;quot;, and then group them on the basis of
the &amp;quot;semantic density&amp;quot; (e.g., number of features
shared). But this technique will fail on (2&apos;),
because there is no &amp;quot;carbon tetraoxyde&amp;quot; in normal
chemistry ! Hence, without extralinguistic
knowledge, this more sophisticated (linguistic)
strategy will produce :
&amp;quot;L&apos;expgrience demande du tetraoxyde de carbone et
d&apos;azote&amp;quot;.
instead of :
&amp;quot;L&apos;expgrience demande du carbone et du tetraoxyde
d azote&amp;quot;.
</bodyText>
<figure confidence="0.87571145">
RESULTAT DE L&apos;EXECUTION, TUTU RENES PHRASE2
ANALYSE STRUCTURALE
ULTXT
1
Tree n¬∞ 2 ULFRA
2
2VCL
3
I
I I 1 I
OP 2VK OP
4 7 9
I 1
I I 1 I I I
THE MIXTURE GIVE RAP CYANIDE MP
5 6 a 10 12 13
DANGERO AND CHLORIN FUMES
14 E. .15 16
SONNET 9 &apos; UL(OP&apos;),RL(ARG1),K(NP),SF(0BJ1),GAT(N),SUB5(CN).
NUM(SIN),SEM(CONC),SENCo(suBST),VLI(N).
</figure>
<table confidence="0.93216464">
SONNET 10 UL(&apos;iAP&apos;),RS(QUAL).K(AP),SF(ATG),GAT(A),SUBA(AD7).
IMPERS(INFED),SUBJR(INF).
SONNET II &apos;DANGEROUS&apos;: UL(&apos;DANGEROUS&apos;),SF(GOV),CAT(A),SUBA(ADJ).
SUBJR(INF).
SONNET 12 &apos;CYANIDE&apos;: UL(&apos;GYANIDE&apos;),SF(GOV),GAT(N),SUBN(CN),NUM(SIN).
SEN(CONC),SENCO(SUBST).
SONNET 13 &amp;quot;: UL(*NF&apos;),RL(ID),K(NP).SF(COORD),CAT(N),SUBN(CN).
NUM(PLU),SEM(CONC),SEMCO(SUBST),VL1(N).
SONNET 14 &apos;AND&apos;: UL(AND&apos;),CAT(C).
SONNET 15 &apos;CHLORINE&apos;: UL(&apos;CHLORINE&apos;),RS(QUAL),UNSAFE(RS),SF(JUXT).
CAT(N),SUBN(CN),NUM(SIN),SEM(CONC),SEMCO(SUBST).
SONNET 16 &apos;FUNESUL(FUMES&apos;),SF(COV),CAT(N),SUBN(CN),NUM(PLU),
SEM(CONC),SEMCO(SUBST).
TEXTERENEGPHRASE2
Analyse structural. corrigie
*NP
9
sub-tree n¬∞ 2
SAP :MP PUKES
10 9&apos; 16
DANGERO CYANIDE SNP
U.. .11 12 13
AND CHLORINE
14 15
Example 3 : Antecedent of &amp;quot;which&amp;quot;
</table>
<bodyText confidence="0.862397272727273">
(3) The water in the beaker with which the chlorine
combines will the poisonous.
The analyzer takes &amp;quot;beaker&amp;quot; instead of &amp;quot;water&amp;quot;
as antecedent of &amp;quot;which&amp;quot;. The corrector may know
that chlorine combines with water, and not with a
beaker.
Examples 4 &amp; 5 : Antecedent of &amp;quot;it&amp;quot; within or
beyond the same sentence
(4) The state in which a substance is depends on
the energy that it contains.When a substance is
heated the energy of the substance is increased.
</bodyText>
<listItem confidence="0.8207915">
(5) The particles vibrate more vigorously, and it
becomes a liquid. (5&apos;) Itmelts.
</listItem>
<page confidence="0.996255">
470
</page>
<bodyText confidence="0.999066433333333">
In order to choose between &amp;quot;substance&amp;quot; and
&amp;quot;state&amp;quot; (4), one must make some type of complex
reasoning using detailed knowledge of physics --
and one may easily fail in a given context : it is
not correct to simply state (as we did to solve
this particular case), that a substance may possess
energy, while a state cannot. Here, perhaps it is
better to rely on some (metalinguistic) information
on the typology, which may be included in a (spe-
cialized) linguistic analyzer, or in the expert cor-
rector system. For (5), there are simple, but
powerful rules like : if the antecedent cannot be
found in the sentence, look for the nearest
possible main clause subject to the left.
3 - Aiding the creation of the source documents
Lingware engineering may be compared with
modern software engineering, because it requires
the design and implementation of complete program-
ming systems, uses specification tools, and leads
to research in automatic program generation. Star-
ting from this analogy, a group of researchers at
GETA have recently embarked on a project which
could converge with still another line of software
engineering, in a very interesting way. The final
aim is to design and implement a syntactico-semantic
structural metaeditor that uses a static grammar
given as parameter in order to guide an author who
is writing a document, in much the same manner as
metaeditors like MENTOR are used for writing pro-
grams in classical programming languages.
This could offer an attractive alternative to
interactive CAT systems like ITS, which require a
specialist to assist the system during the transla-
tion process. As a matter of fact, this principle
ig a sophisticated variant of the &amp;quot;controlled
syntax&amp;quot; idea, like that implemented in the TITUS
system. Its essential advantage is to guarantee the
correctness of the intermediate structure, without
the need for a large domain-specific knowledge base.
It may be added that, in many cases, the documents
being written are in effect contributing some new
knowledge to the domain of discourse, which hence
cannot already be present in the computerized
knowledge base, even if one exists.
III - CONCLUSION : SOME LONG TERM PERSPECTIVES
There are many areas open for future research.
The introduction of &amp;quot;static grammars&amp;quot; suggests a
new kind of design, where the &amp;quot;dynamic grammars&amp;quot;
would be generated from the specifications and from
some strategies, possibly expressed as &amp;quot;metarules&amp;quot;.
&amp;quot;Multisliced decorated trees&amp;quot; (16) have been
introduced as a data structure for the explicit
factorization of decorated trees. However, there
remains to develop a full implementation of the
associated parallel rewriting rule system, STAR-
PALE, and to test its linguistic practicability.
Last but not least, the development of true
&amp;quot;translation expert systems&amp;quot; requires an intensive
(psycholinguistic) study of the expertise used by
human translators and revisors.
</bodyText>
<sectionHeader confidence="0.991198" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.999383315789474">
(1) Bachut D. - Verastegui N. &amp;quot;Software tools for
the environment of a computer aided translation
system&amp;quot;. COLING-84.
(2) Barr A. - Feigenbaum E., eds. &amp;quot;The Handbook of
Artificial Intelligence (vol 1,2). Pitman, 1981.
(3) Boitet Ch. &amp;quot;Research and development on MT and
related techniques at Grenoble University
(GETA)&amp;quot;. Tutorial on MT, Lugano, April 1984,
17 p.
(4) Boitet Ch. - Guillaume P. - Quezel-Ambrunaz M.
&amp;quot;Implementation and conversational environment
of ARIANE 78.4, an integrated system for trans-
lation and human revision&amp;quot;. Proc. of COLING-82,
Prag, July 1982, North-Holland, 19-27.
(5) Boitet Ch. - Nedobejkine N. &amp;quot;Recent develop-
ments in Russian-French Machine Translation at
Grenoble. Linguistics 19, 199-271, 1981.
(6) Boitet Ch. - Nedobejkine N. &amp;quot;Illustration sur
le developpement d&apos;un atelier de traduction
automatisee&amp;quot;. Colloque &amp;quot;L&apos;informatique au ser-
vice de la linguistique&amp;quot;, Universite de Metz,
juin 1983.
(7) Chappuy S. &amp;quot;Formalisation de la description
des niveaux d&apos;interpretation des langues natu-
relles&amp;quot;. Etude menee en vue de l&apos;analyse et de
la generation au moyen de transducteurs. These
de 3ame cycle, USMG, Grenoble, juillet 1983.
(8) Donz Ph. &amp;quot;Foll, une extension au langage
PROLOG&amp;quot;. Document CRISS, Grenoble, Universite
II, fevrier 1983.
(9) Gerber R. &amp;quot;Etude des possibilites de coopera-
tion entre un systame fonde sur des techniques
de comprehension implicite (systame logico-
semantique) et un systame fonde sur des techni-
ques de comprehension explicite (systame ex-
pert). These de 3ame cycle, Grenoble, USMG,
janvier 1984.
(10) Hayes-Roth F. - Waterman D.A. - Lenat D.B. eds.
&amp;quot;Building expert systems&amp;quot;. Reading MA, London
Addison-Wesley, 1983.
(11) Hobbs J.R. &amp;quot;Coherence and co-reference&amp;quot;.
Cognitive sciences 3, 67-90, 1979.
(12) Isabelle P. &amp;quot;Perspectives d&apos;avenir du groupe
TAUM et du systame TAUM-AVIATION&amp;quot;. TAUM,
Universite de Montr√©al, mai 1981.
(13) Kay M.
&amp;quot;Unification grammars&amp;quot;. Doc. Xerox, 1982.
(14) Lauriare J.L. &amp;quot;Representation et utilisation
des connaissances&amp;quot;. TSI 1(1,2), 1982.
(15) Vauquois B. &amp;quot;La traduction automatique
Grenoble&amp;quot;. Document de Linguistique Quantita-
tive n¬∞ 29, Dunod, 1975.
(16) Verastegui N. &amp;quot;Etude du parallelisme appliqu√©
A la traduction automatisee par ordinateur.
STAR-PALE : un systame parallale&amp;quot;. These de
Docteur-Ingenieur, USMG &amp; INPG, Grenoble,
mai 1982.
</reference>
<page confidence="0.99873">
471
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.216835">
<title confidence="0.999667">EXPERT SYSTEMS AND OTHER NEW TECHNIQUES IN MT SYSTEMS</title>
<author confidence="0.998935">Christian BOITET</author>
<affiliation confidence="0.731655">Groupe d&apos;Etudes pour la Traduction Automatique</affiliation>
<address confidence="0.488772">68</address>
<affiliation confidence="0.950507">Universita de Grenoble</affiliation>
<address confidence="0.6076015">38402 Saint-Martin d&apos;Hares FRANCE</address>
<abstract confidence="0.999430818181818">Our MT systems integrate many advanced concepts from the fields of computer science, linguistics, and Al : specialized languages for linguistic programming based on production systems, complete linguistic programming environment, multilevel representations, organization of the lexicons around &amp;quot;lexical units&amp;quot;, units of translation of the size of several paragraphs, possibility of using text-driven heuristic strategies. We are now beginning to integrate new techniques : unified design of an &amp;quot;integrated&amp;quot; lexical data-base containing the lexicon in &amp;quot;natural&amp;quot; and &amp;quot;coded&amp;quot; form, use of the &amp;quot;static grammars&amp;quot; formalism as a specification language, addition of expert systems equipped with &amp;quot;extralinguistic&amp;quot; or &amp;quot;metalinguistic&amp;quot; knowledge, and design of a kind of structural metaeditor (driven by a static grammar) allowing the interactive construction of a document in the same way as syntactic editors are used for developing programs. We end the paper by mentioning some projects for long-term research.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>D Bachut</author>
</authors>
<title>Software tools for the environment of a computer aided translation system&amp;quot;.</title>
<pages>84</pages>
<contexts>
<context position="7411" citStr="(1)" startWordPosition="1131" endWordPosition="1131">epresenting lexical knowledge But there is another problem, perhaps even more important. Because of the cost of building machine dictionaries, we need some way to transform and transport lexical knowledge from one CAT system to another. This is obviously a problem of translation. Hence, we consider this type of &amp;quot;integrated structure&amp;quot; as a possible lexical interface structure. Research has recently begun on the possibility of using classical or advanced data base systems to store this lexical knowledge and to implement the various tools required for addition and verification. VISULEX and ATLAS (1) are first versions of such tools. Grammatical knowledge processing Just as in current software engineering, we have long felt the need for some level of &amp;quot;static&amp;quot; (algebraic) specification of the functions to be realized by algorithms expressed in procedural programming languages. In the case of CAT systems, there is no a priori correct grammar of the language, and natural language is inherently ambiguous. Hence, any usable specification must specify a relation (not a function) between strings and trees, or trees and trees : many trees may correspond to one string, and, conversely, many string</context>
<context position="9989" citStr="(1)" startWordPosition="1530" endWordPosition="1530">n his recent thesis (9), R. Gerber has attempted to design such a system, and to propose an initial implementation. The expertise to be incorporated in this system includes linguistic, metalinguistic, and extralinguistic knowledge. The system is constructed by combining a &amp;quot;closed&amp;quot; system, based only on linguistic knowledge (a lingware written in ARIANE-78), and two &amp;quot;open&amp;quot; systems, called &amp;quot;expert corrector systems&amp;quot;. The first is inserted at the junction between analysis and transfer, and the second between transfer and generation. 469 The control structure of a corrector system is as follows : (1) transform the result of analysis into a suitable form ; (2) while there is some error configuration do solve (using meta- or extralinguistic knowledge) ; if solving has failed then exit endif ; (4) perform a partial reconstruction of the structure, according to the solution found ; endwhile ; (5) output the final structure in ARIANE-78format. (2) relies on metalinguistic knowledge only. The implementation has been done in Foll-PROLOG (8). The lingware used corresponds to a small English-French system developed for teaching purposes. Here are some examples. Example 1 : ADJ + N N (1) Standard f</context>
</contexts>
<marker>(1)</marker>
<rawString>Bachut D. - Verastegui N. &amp;quot;Software tools for the environment of a computer aided translation system&amp;quot;. COLING-84.</rawString>
</citation>
<citation valid="true">
<date>1981</date>
<booktitle>The Handbook of Artificial Intelligence (vol 1,2).</booktitle>
<editor>Barr A. - Feigenbaum E., eds.</editor>
<publisher>Pitman,</publisher>
<contexts>
<context position="10049" citStr="(2)" startWordPosition="1541" endWordPosition="1541">uch a system, and to propose an initial implementation. The expertise to be incorporated in this system includes linguistic, metalinguistic, and extralinguistic knowledge. The system is constructed by combining a &amp;quot;closed&amp;quot; system, based only on linguistic knowledge (a lingware written in ARIANE-78), and two &amp;quot;open&amp;quot; systems, called &amp;quot;expert corrector systems&amp;quot;. The first is inserted at the junction between analysis and transfer, and the second between transfer and generation. 469 The control structure of a corrector system is as follows : (1) transform the result of analysis into a suitable form ; (2) while there is some error configuration do solve (using meta- or extralinguistic knowledge) ; if solving has failed then exit endif ; (4) perform a partial reconstruction of the structure, according to the solution found ; endwhile ; (5) output the final structure in ARIANE-78format. (2) relies on metalinguistic knowledge only. The implementation has been done in Foll-PROLOG (8). The lingware used corresponds to a small English-French system developed for teaching purposes. Here are some examples. Example 1 : ADJ + N N (1) Standard free-energy change is calculated by this equation. The analyz</context>
<context position="11310" citStr="(2)" startWordPosition="1736" endWordPosition="1736">-energy&amp;quot; is juxtaposed to &amp;quot;change&amp;quot;, hence the erroneous translation : &amp;quot;La variable standard egnergie libre est calculge par cette formule&amp;quot;. In order to correct the structure, some knowledge of chemistry is required, namely that &amp;quot;standard free-energy change&amp;quot; is a ... standard notion. With this grouping, (1) translates as : &amp;quot;La variation d&apos;gnergie libre standard estcalculge par cette formule&amp;quot;. Example 2 : (ADJ) N and N N (2) The mixture gives off dangerous cyanide and chlorine fumes. (2&apos;) The experiment requires carbon and nitrogen tetraoxyde. Let us develop this example a little more. Sentence (2) presents the problem of determining the scope of the coordination. The result of analysis (tree n¬∞ 2) groups &amp;quot;dangerous cyanide&amp;quot; and chlorine fumes&amp;quot;, &amp;quot;chlorine&amp;quot; being juxtaposed to &amp;quot;fumes&amp;quot; (SF(JUXT) on node 12). Hence the translation : &amp;quot;La preparation dggage le cyanure et la vapeur de chlore dangereux&amp;quot;. But, if we know that cyanide is dangerous as fumes, and not as crystals, we can correct the structure by grouping &amp;quot;(cyanide and chlorine) fumes&amp;quot; (see subtree n¬∞ 2). The translation produced will then be : &amp;quot;La preparation dggage la vapeur dangereuse de cyanure et de chlore&amp;quot;. Of course, some mor</context>
</contexts>
<marker>(2)</marker>
<rawString>Barr A. - Feigenbaum E., eds. &amp;quot;The Handbook of Artificial Intelligence (vol 1,2). Pitman, 1981.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Boitet Ch</author>
</authors>
<title>Research and development on MT and related techniques at</title>
<institution>Grenoble University</institution>
<contexts>
<context position="1863" citStr="(3,4,5,6,15)" startWordPosition="274" endWordPosition="274">me basic knowledge of CAT (Computer Aided Translation) terminology (MT, MAHT, RANT, etc.). The starting point of our research towards &amp;quot;better&amp;quot; CAT systems is briefly reviewed in I. In II, we present 3 lines of current work : improving current second-generation methodology by incorporating advanced techniques from software engineering, moving toward third-generation systems by incorporating expert systems, and returning to interactive techniques for the creation of a document. I - IMPORTANT CONCEPTS FROM EXISTING SYSTEMS For lack of space, we only list our major points, and refer the reader to (3,4,5,6,15) for further details. 1 - Computer science aspects 1) Use of Specialized Languages for Linguistic Programming (SLLP), like ATEF, ROBRA, Q-systems, REZO, etc. 2) Integration in some &amp;quot;user-friendly&amp;quot; environment, controlled by a conversational interface, and managing a specialized data-base composed of what we call &amp;quot;lingware&amp;quot; (grammars, dictionaries, procedures, formats, variables) and corpuses of texts (source, translated, revised, plus intermediate results and possibly &amp;quot;hors-textes&amp;quot; -- figures, etc.). 3) Analogy with compiler-compiler systems : rough translation is realized by a monolingual ana</context>
<context position="13579" citStr="(3)" startWordPosition="2046" endWordPosition="2046">12 &apos;CYANIDE&apos;: UL(&apos;GYANIDE&apos;),SF(GOV),GAT(N),SUBN(CN),NUM(SIN). SEN(CONC),SENCO(SUBST). SONNET 13 &amp;quot;: UL(*NF&apos;),RL(ID),K(NP).SF(COORD),CAT(N),SUBN(CN). NUM(PLU),SEM(CONC),SEMCO(SUBST),VL1(N). SONNET 14 &apos;AND&apos;: UL(AND&apos;),CAT(C). SONNET 15 &apos;CHLORINE&apos;: UL(&apos;CHLORINE&apos;),RS(QUAL),UNSAFE(RS),SF(JUXT). CAT(N),SUBN(CN),NUM(SIN),SEM(CONC),SEMCO(SUBST). SONNET 16 &apos;FUNESUL(FUMES&apos;),SF(COV),CAT(N),SUBN(CN),NUM(PLU), SEM(CONC),SEMCO(SUBST). TEXTERENEGPHRASE2 Analyse structural. corrigie *NP 9 sub-tree n¬∞ 2 SAP :MP PUKES 10 9&apos; 16 DANGERO CYANIDE SNP U.. .11 12 13 AND CHLORINE 14 15 Example 3 : Antecedent of &amp;quot;which&amp;quot; (3) The water in the beaker with which the chlorine combines will the poisonous. The analyzer takes &amp;quot;beaker&amp;quot; instead of &amp;quot;water&amp;quot; as antecedent of &amp;quot;which&amp;quot;. The corrector may know that chlorine combines with water, and not with a beaker. Examples 4 &amp; 5 : Antecedent of &amp;quot;it&amp;quot; within or beyond the same sentence (4) The state in which a substance is depends on the energy that it contains.When a substance is heated the energy of the substance is increased. (5) The particles vibrate more vigorously, and it becomes a liquid. (5&apos;) Itmelts. 470 In order to choose between &amp;quot;substance&amp;quot; and &amp;quot;state&amp;quot; (4), one must </context>
</contexts>
<marker>(3)</marker>
<rawString>Boitet Ch. &amp;quot;Research and development on MT and related techniques at Grenoble University</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tutorial on MT</author>
<author>Lugano</author>
</authors>
<date>1984</date>
<pages>17</pages>
<marker>(GETA)</marker>
<rawString>&amp;quot;. Tutorial on MT, Lugano, April 1984, 17 p.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Guillaume</author>
</authors>
<title>Implementation and conversational environment of ARIANE 78.4, an integrated system for translation and human revision&amp;quot;.</title>
<date>1982</date>
<booktitle>Proc. of COLING-82,</booktitle>
<location>Prag,</location>
<contexts>
<context position="1863" citStr="(3,4,5,6,15)" startWordPosition="274" endWordPosition="274">me basic knowledge of CAT (Computer Aided Translation) terminology (MT, MAHT, RANT, etc.). The starting point of our research towards &amp;quot;better&amp;quot; CAT systems is briefly reviewed in I. In II, we present 3 lines of current work : improving current second-generation methodology by incorporating advanced techniques from software engineering, moving toward third-generation systems by incorporating expert systems, and returning to interactive techniques for the creation of a document. I - IMPORTANT CONCEPTS FROM EXISTING SYSTEMS For lack of space, we only list our major points, and refer the reader to (3,4,5,6,15) for further details. 1 - Computer science aspects 1) Use of Specialized Languages for Linguistic Programming (SLLP), like ATEF, ROBRA, Q-systems, REZO, etc. 2) Integration in some &amp;quot;user-friendly&amp;quot; environment, controlled by a conversational interface, and managing a specialized data-base composed of what we call &amp;quot;lingware&amp;quot; (grammars, dictionaries, procedures, formats, variables) and corpuses of texts (source, translated, revised, plus intermediate results and possibly &amp;quot;hors-textes&amp;quot; -- figures, etc.). 3) Analogy with compiler-compiler systems : rough translation is realized by a monolingual ana</context>
<context position="10187" citStr="(4)" startWordPosition="1564" endWordPosition="1564">c, and extralinguistic knowledge. The system is constructed by combining a &amp;quot;closed&amp;quot; system, based only on linguistic knowledge (a lingware written in ARIANE-78), and two &amp;quot;open&amp;quot; systems, called &amp;quot;expert corrector systems&amp;quot;. The first is inserted at the junction between analysis and transfer, and the second between transfer and generation. 469 The control structure of a corrector system is as follows : (1) transform the result of analysis into a suitable form ; (2) while there is some error configuration do solve (using meta- or extralinguistic knowledge) ; if solving has failed then exit endif ; (4) perform a partial reconstruction of the structure, according to the solution found ; endwhile ; (5) output the final structure in ARIANE-78format. (2) relies on metalinguistic knowledge only. The implementation has been done in Foll-PROLOG (8). The lingware used corresponds to a small English-French system developed for teaching purposes. Here are some examples. Example 1 : ADJ + N N (1) Standard free-energy change is calculated by this equation. The analyzer proposes that &amp;quot;standard&amp;quot; modifies &amp;quot;change&amp;quot;, while &amp;quot;free-energy&amp;quot; is juxtaposed to &amp;quot;change&amp;quot;, hence the erroneous translation : &amp;quot;La variab</context>
<context position="13885" citStr="(4)" startWordPosition="2099" endWordPosition="2099">UM(SIN),SEM(CONC),SEMCO(SUBST). SONNET 16 &apos;FUNESUL(FUMES&apos;),SF(COV),CAT(N),SUBN(CN),NUM(PLU), SEM(CONC),SEMCO(SUBST). TEXTERENEGPHRASE2 Analyse structural. corrigie *NP 9 sub-tree n¬∞ 2 SAP :MP PUKES 10 9&apos; 16 DANGERO CYANIDE SNP U.. .11 12 13 AND CHLORINE 14 15 Example 3 : Antecedent of &amp;quot;which&amp;quot; (3) The water in the beaker with which the chlorine combines will the poisonous. The analyzer takes &amp;quot;beaker&amp;quot; instead of &amp;quot;water&amp;quot; as antecedent of &amp;quot;which&amp;quot;. The corrector may know that chlorine combines with water, and not with a beaker. Examples 4 &amp; 5 : Antecedent of &amp;quot;it&amp;quot; within or beyond the same sentence (4) The state in which a substance is depends on the energy that it contains.When a substance is heated the energy of the substance is increased. (5) The particles vibrate more vigorously, and it becomes a liquid. (5&apos;) Itmelts. 470 In order to choose between &amp;quot;substance&amp;quot; and &amp;quot;state&amp;quot; (4), one must make some type of complex reasoning using detailed knowledge of physics -- and one may easily fail in a given context : it is not correct to simply state (as we did to solve this particular case), that a substance may possess energy, while a state cannot. Here, perhaps it is better to rely on some (metali</context>
</contexts>
<marker>(4)</marker>
<rawString>Boitet Ch. - Guillaume P. - Quezel-Ambrunaz M. &amp;quot;Implementation and conversational environment of ARIANE 78.4, an integrated system for translation and human revision&amp;quot;. Proc. of COLING-82, Prag, July 1982, North-Holland, 19-27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Nedobejkine</author>
</authors>
<title>Recent developments in Russian-French Machine Translation at Grenoble.</title>
<date>1981</date>
<journal>Linguistics</journal>
<volume>19</volume>
<pages>199--271</pages>
<contexts>
<context position="1863" citStr="(3,4,5,6,15)" startWordPosition="274" endWordPosition="274">me basic knowledge of CAT (Computer Aided Translation) terminology (MT, MAHT, RANT, etc.). The starting point of our research towards &amp;quot;better&amp;quot; CAT systems is briefly reviewed in I. In II, we present 3 lines of current work : improving current second-generation methodology by incorporating advanced techniques from software engineering, moving toward third-generation systems by incorporating expert systems, and returning to interactive techniques for the creation of a document. I - IMPORTANT CONCEPTS FROM EXISTING SYSTEMS For lack of space, we only list our major points, and refer the reader to (3,4,5,6,15) for further details. 1 - Computer science aspects 1) Use of Specialized Languages for Linguistic Programming (SLLP), like ATEF, ROBRA, Q-systems, REZO, etc. 2) Integration in some &amp;quot;user-friendly&amp;quot; environment, controlled by a conversational interface, and managing a specialized data-base composed of what we call &amp;quot;lingware&amp;quot; (grammars, dictionaries, procedures, formats, variables) and corpuses of texts (source, translated, revised, plus intermediate results and possibly &amp;quot;hors-textes&amp;quot; -- figures, etc.). 3) Analogy with compiler-compiler systems : rough translation is realized by a monolingual ana</context>
<context position="10287" citStr="(5)" startWordPosition="1580" endWordPosition="1580">ly on linguistic knowledge (a lingware written in ARIANE-78), and two &amp;quot;open&amp;quot; systems, called &amp;quot;expert corrector systems&amp;quot;. The first is inserted at the junction between analysis and transfer, and the second between transfer and generation. 469 The control structure of a corrector system is as follows : (1) transform the result of analysis into a suitable form ; (2) while there is some error configuration do solve (using meta- or extralinguistic knowledge) ; if solving has failed then exit endif ; (4) perform a partial reconstruction of the structure, according to the solution found ; endwhile ; (5) output the final structure in ARIANE-78format. (2) relies on metalinguistic knowledge only. The implementation has been done in Foll-PROLOG (8). The lingware used corresponds to a small English-French system developed for teaching purposes. Here are some examples. Example 1 : ADJ + N N (1) Standard free-energy change is calculated by this equation. The analyzer proposes that &amp;quot;standard&amp;quot; modifies &amp;quot;change&amp;quot;, while &amp;quot;free-energy&amp;quot; is juxtaposed to &amp;quot;change&amp;quot;, hence the erroneous translation : &amp;quot;La variable standard egnergie libre est calculge par cette formule&amp;quot;. In order to correct the structure, some </context>
<context position="14031" citStr="(5)" startWordPosition="2125" endWordPosition="2125">uctural. corrigie *NP 9 sub-tree n¬∞ 2 SAP :MP PUKES 10 9&apos; 16 DANGERO CYANIDE SNP U.. .11 12 13 AND CHLORINE 14 15 Example 3 : Antecedent of &amp;quot;which&amp;quot; (3) The water in the beaker with which the chlorine combines will the poisonous. The analyzer takes &amp;quot;beaker&amp;quot; instead of &amp;quot;water&amp;quot; as antecedent of &amp;quot;which&amp;quot;. The corrector may know that chlorine combines with water, and not with a beaker. Examples 4 &amp; 5 : Antecedent of &amp;quot;it&amp;quot; within or beyond the same sentence (4) The state in which a substance is depends on the energy that it contains.When a substance is heated the energy of the substance is increased. (5) The particles vibrate more vigorously, and it becomes a liquid. (5&apos;) Itmelts. 470 In order to choose between &amp;quot;substance&amp;quot; and &amp;quot;state&amp;quot; (4), one must make some type of complex reasoning using detailed knowledge of physics -- and one may easily fail in a given context : it is not correct to simply state (as we did to solve this particular case), that a substance may possess energy, while a state cannot. Here, perhaps it is better to rely on some (metalinguistic) information on the typology, which may be included in a (specialized) linguistic analyzer, or in the expert corrector system. For (5), t</context>
</contexts>
<marker>(5)</marker>
<rawString>Boitet Ch. - Nedobejkine N. &amp;quot;Recent developments in Russian-French Machine Translation at Grenoble. Linguistics 19, 199-271, 1981.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Nedobejkine</author>
</authors>
<title>Illustration sur le developpement d&apos;un atelier de traduction automatisee&amp;quot;. Colloque &amp;quot;L&apos;informatique au service de la linguistique&amp;quot;, Universite de Metz,</title>
<date>1983</date>
<location>juin</location>
<contexts>
<context position="1863" citStr="(3,4,5,6,15)" startWordPosition="274" endWordPosition="274">me basic knowledge of CAT (Computer Aided Translation) terminology (MT, MAHT, RANT, etc.). The starting point of our research towards &amp;quot;better&amp;quot; CAT systems is briefly reviewed in I. In II, we present 3 lines of current work : improving current second-generation methodology by incorporating advanced techniques from software engineering, moving toward third-generation systems by incorporating expert systems, and returning to interactive techniques for the creation of a document. I - IMPORTANT CONCEPTS FROM EXISTING SYSTEMS For lack of space, we only list our major points, and refer the reader to (3,4,5,6,15) for further details. 1 - Computer science aspects 1) Use of Specialized Languages for Linguistic Programming (SLLP), like ATEF, ROBRA, Q-systems, REZO, etc. 2) Integration in some &amp;quot;user-friendly&amp;quot; environment, controlled by a conversational interface, and managing a specialized data-base composed of what we call &amp;quot;lingware&amp;quot; (grammars, dictionaries, procedures, formats, variables) and corpuses of texts (source, translated, revised, plus intermediate results and possibly &amp;quot;hors-textes&amp;quot; -- figures, etc.). 3) Analogy with compiler-compiler systems : rough translation is realized by a monolingual ana</context>
<context position="4289" citStr="(6)" startWordPosition="629" endWordPosition="629">etinginterpretations,like the &amp;quot;blackboard&amp;quot; of some Al systems. 2)This and the SLLPs&apos; control structures allow for some heuristic programming : it is possible to explicitly describe and process ambiguous situations in the production rules. This is in contrast to systems based on combinatorial algorithms which construct each interpretation independently, even if they represent them in a factorized way. 468 II - DIRECTIONS OF CURRENT WORK 1 - Linguistic knowledge processing The experience gained by the development of a Russian-French translation unit of a realistic size over the last three years (6) has shown that maintaining and upgrading the lingware, even in an admittedly limited second generation CAT system, requiresa good deal of expertise. Techniques are now being developed to maintain the linguistic knowledge base. Some of them deal with the lexical data-base, others with the definition and use of specification formalisms (&amp;quot;static grammars&amp;quot;) and verification tools. Lexical knowledge processing In the long run, dictionaries turn out to be the costliest components of CAT systems. Hence, we are working towards the reconciliation of &amp;quot;natural&amp;quot; and &amp;quot;coded&amp;quot; dictionaries, and towards the </context>
</contexts>
<marker>(6)</marker>
<rawString>Boitet Ch. - Nedobejkine N. &amp;quot;Illustration sur le developpement d&apos;un atelier de traduction automatisee&amp;quot;. Colloque &amp;quot;L&apos;informatique au service de la linguistique&amp;quot;, Universite de Metz, juin 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Chappuy</author>
</authors>
<title>Formalisation de la description des niveaux d&apos;interpretation des langues naturelles&amp;quot;. Etude menee en vue de l&apos;analyse et de la generation au moyen de transducteurs. These de 3ame cycle, USMG,</title>
<date>1983</date>
<location>Grenoble, juillet</location>
<contexts>
<context position="8144" citStr="(7)" startWordPosition="1249" endWordPosition="1249"> need for some level of &amp;quot;static&amp;quot; (algebraic) specification of the functions to be realized by algorithms expressed in procedural programming languages. In the case of CAT systems, there is no a priori correct grammar of the language, and natural language is inherently ambiguous. Hence, any usable specification must specify a relation (not a function) between strings and trees, or trees and trees : many trees may correspond to one string, and, conversely, many strings may correspond to one tree. Working with B. Vauquois in this direction, S. Chappuy has developed a formalism of static grammars (7), presented in charts expressing the relation between strings of terminal elements (usually decorations expressing the result of some morphological analysis) and multilevel structural descriptors. This formalism is currently being used for all new linguistic developments at GETA. Of course, this is not a completely new idea. For example, M. Kay (13) proposed the formalism of unification grammars for quite the same purpose. But his formalism is more algebraic and less geometric in nature, and we prefer to use a specification in terms of the kind of structures we are accustomed to manipulating. </context>
</contexts>
<marker>(7)</marker>
<rawString>Chappuy S. &amp;quot;Formalisation de la description des niveaux d&apos;interpretation des langues naturelles&amp;quot;. Etude menee en vue de l&apos;analyse et de la generation au moyen de transducteurs. These de 3ame cycle, USMG, Grenoble, juillet 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donz Ph</author>
</authors>
<title>Foll, une extension au langage PROLOG&amp;quot;.</title>
<date>1983</date>
<location>Document CRISS, Grenoble, Universite II, fevrier</location>
<contexts>
<context position="10431" citStr="(8)" startWordPosition="1600" endWordPosition="1600">t the junction between analysis and transfer, and the second between transfer and generation. 469 The control structure of a corrector system is as follows : (1) transform the result of analysis into a suitable form ; (2) while there is some error configuration do solve (using meta- or extralinguistic knowledge) ; if solving has failed then exit endif ; (4) perform a partial reconstruction of the structure, according to the solution found ; endwhile ; (5) output the final structure in ARIANE-78format. (2) relies on metalinguistic knowledge only. The implementation has been done in Foll-PROLOG (8). The lingware used corresponds to a small English-French system developed for teaching purposes. Here are some examples. Example 1 : ADJ + N N (1) Standard free-energy change is calculated by this equation. The analyzer proposes that &amp;quot;standard&amp;quot; modifies &amp;quot;change&amp;quot;, while &amp;quot;free-energy&amp;quot; is juxtaposed to &amp;quot;change&amp;quot;, hence the erroneous translation : &amp;quot;La variable standard egnergie libre est calculge par cette formule&amp;quot;. In order to correct the structure, some knowledge of chemistry is required, namely that &amp;quot;standard free-energy change&amp;quot; is a ... standard notion. With this grouping, (1) translates as : </context>
</contexts>
<marker>(8)</marker>
<rawString>Donz Ph. &amp;quot;Foll, une extension au langage PROLOG&amp;quot;. Document CRISS, Grenoble, Universite II, fevrier 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Gerber</author>
</authors>
<title>Etude des possibilites de cooperation entre un systame fonde sur des techniques de comprehension implicite (systame logicosemantique) et un systame fonde sur des techniques de comprehension explicite (systame expert). These de 3ame cycle,</title>
<date>1984</date>
<location>Grenoble, USMG, janvier</location>
<contexts>
<context position="9409" citStr="(9)" startWordPosition="1442" endWordPosition="1442">e is already quite well represented and handled in current (&amp;quot;closed&amp;quot;) systems, we are orienting our research towards the possibility of adding extralinguistic knowledge (knowledge about some technical or scientific field, for instance) to existing CAT systems. Also, because current systems are based on transducers rather than on analyzers, it is perfectly possible that the result of analysis or of transfer (the &amp;quot;structural descriptors&amp;quot;) are partially incorrect and need correction. Knowledge about the types of errors made by linguistic systems may be called metalinguistic. In his recent thesis (9), R. Gerber has attempted to design such a system, and to propose an initial implementation. The expertise to be incorporated in this system includes linguistic, metalinguistic, and extralinguistic knowledge. The system is constructed by combining a &amp;quot;closed&amp;quot; system, based only on linguistic knowledge (a lingware written in ARIANE-78), and two &amp;quot;open&amp;quot; systems, called &amp;quot;expert corrector systems&amp;quot;. The first is inserted at the junction between analysis and transfer, and the second between transfer and generation. 469 The control structure of a corrector system is as follows : (1) transform the resul</context>
</contexts>
<marker>(9)</marker>
<rawString>Gerber R. &amp;quot;Etude des possibilites de cooperation entre un systame fonde sur des techniques de comprehension implicite (systame logicosemantique) et un systame fonde sur des techniques de comprehension explicite (systame expert). These de 3ame cycle, Grenoble, USMG, janvier 1984.</rawString>
</citation>
<citation valid="true">
<title>Building expert systems&amp;quot;.</title>
<date>1983</date>
<editor>Hayes-Roth F. - Waterman D.A. - Lenat D.B. eds.</editor>
<publisher>Addison-Wesley,</publisher>
<location>Reading MA, London</location>
<marker>(10)</marker>
<rawString>Hayes-Roth F. - Waterman D.A. - Lenat D.B. eds. &amp;quot;Building expert systems&amp;quot;. Reading MA, London Addison-Wesley, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J R Hobbs</author>
</authors>
<title>Coherence and co-reference&amp;quot;.</title>
<date>1979</date>
<journal>Cognitive</journal>
<volume>3</volume>
<pages>67--90</pages>
<marker>(11)</marker>
<rawString>Hobbs J.R. &amp;quot;Coherence and co-reference&amp;quot;. Cognitive sciences 3, 67-90, 1979.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Isabelle</author>
</authors>
<title>Perspectives d&apos;avenir du groupe TAUM et du systame TAUM-AVIATION&amp;quot;. TAUM, Universite de Montr√©al,</title>
<date>1981</date>
<location>mai</location>
<marker>(12)</marker>
<rawString>Isabelle P. &amp;quot;Perspectives d&apos;avenir du groupe TAUM et du systame TAUM-AVIATION&amp;quot;. TAUM, Universite de Montr√©al, mai 1981.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kay</author>
</authors>
<title>Unification grammars&amp;quot;.</title>
<date>1982</date>
<publisher>Doc. Xerox,</publisher>
<contexts>
<context position="8495" citStr="(13)" startWordPosition="1300" endWordPosition="1300">n) between strings and trees, or trees and trees : many trees may correspond to one string, and, conversely, many strings may correspond to one tree. Working with B. Vauquois in this direction, S. Chappuy has developed a formalism of static grammars (7), presented in charts expressing the relation between strings of terminal elements (usually decorations expressing the result of some morphological analysis) and multilevel structural descriptors. This formalism is currently being used for all new linguistic developments at GETA. Of course, this is not a completely new idea. For example, M. Kay (13) proposed the formalism of unification grammars for quite the same purpose. But his formalism is more algebraic and less geometric in nature, and we prefer to use a specification in terms of the kind of structures we are accustomed to manipulating. 2 - Grafting on expert systems Seeing that linguistic expertise is already quite well represented and handled in current (&amp;quot;closed&amp;quot;) systems, we are orienting our research towards the possibility of adding extralinguistic knowledge (knowledge about some technical or scientific field, for instance) to existing CAT systems. Also, because current system</context>
</contexts>
<marker>(13)</marker>
<rawString>Kay M. &amp;quot;Unification grammars&amp;quot;. Doc. Xerox, 1982.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J L Lauriare</author>
</authors>
<title>Representation et utilisation des connaissances&amp;quot;.</title>
<date>1982</date>
<journal>TSI</journal>
<volume>1</volume>
<issue>1</issue>
<marker>(14)</marker>
<rawString>Lauriare J.L. &amp;quot;Representation et utilisation des connaissances&amp;quot;. TSI 1(1,2), 1982.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Vauquois</author>
</authors>
<title>La traduction automatique Grenoble&amp;quot;. Document de Linguistique Quantitative n¬∞ 29, Dunod,</title>
<date>1975</date>
<contexts>
<context position="1863" citStr="(3,4,5,6,15)" startWordPosition="274" endWordPosition="274">me basic knowledge of CAT (Computer Aided Translation) terminology (MT, MAHT, RANT, etc.). The starting point of our research towards &amp;quot;better&amp;quot; CAT systems is briefly reviewed in I. In II, we present 3 lines of current work : improving current second-generation methodology by incorporating advanced techniques from software engineering, moving toward third-generation systems by incorporating expert systems, and returning to interactive techniques for the creation of a document. I - IMPORTANT CONCEPTS FROM EXISTING SYSTEMS For lack of space, we only list our major points, and refer the reader to (3,4,5,6,15) for further details. 1 - Computer science aspects 1) Use of Specialized Languages for Linguistic Programming (SLLP), like ATEF, ROBRA, Q-systems, REZO, etc. 2) Integration in some &amp;quot;user-friendly&amp;quot; environment, controlled by a conversational interface, and managing a specialized data-base composed of what we call &amp;quot;lingware&amp;quot; (grammars, dictionaries, procedures, formats, variables) and corpuses of texts (source, translated, revised, plus intermediate results and possibly &amp;quot;hors-textes&amp;quot; -- figures, etc.). 3) Analogy with compiler-compiler systems : rough translation is realized by a monolingual ana</context>
</contexts>
<marker>(15)</marker>
<rawString>Vauquois B. &amp;quot;La traduction automatique Grenoble&amp;quot;. Document de Linguistique Quantitative n¬∞ 29, Dunod, 1975.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Verastegui</author>
</authors>
<title>Etude du parallelisme appliqu√© A la traduction automatisee par ordinateur. STAR-PALE : un systame parallale&amp;quot;.</title>
<date>1982</date>
<booktitle>These de Docteur-Ingenieur, USMG &amp; INPG,</booktitle>
<location>Grenoble, mai</location>
<marker>(16)</marker>
<rawString>Verastegui N. &amp;quot;Etude du parallelisme appliqu√© A la traduction automatisee par ordinateur. STAR-PALE : un systame parallale&amp;quot;. These de Docteur-Ingenieur, USMG &amp; INPG, Grenoble, mai 1982.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>