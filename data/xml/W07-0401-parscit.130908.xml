<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000708">
<title confidence="0.9985245">
Chunk-Level Reordering of Source Language Sentences with
Automatically Learned Rules for Statistical Machine Translation
</title>
<author confidence="0.995874">
Yuqi Zhang and Richard Zens and Hermann Ney
</author>
<affiliation confidence="0.959972333333333">
Human Language Technology and Pattern Recognition
Lehrstuhl f¨ur Informatik 6 – Computer Science Department
RWTH Aachen University, D-52056 Aachen, Germany
</affiliation>
<email confidence="0.998059">
{yzhang,zens,ney}@cs.rwth-aachen.de
</email>
<sectionHeader confidence="0.998593" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999215">
In this paper, we describe a source-
side reordering method based on syntac-
tic chunks for phrase-based statistical ma-
chine translation. First, we shallow parse
the source language sentences. Then, re-
ordering rules are automatically learned
from source-side chunks and word align-
ments. During translation, the rules are
used to generate a reordering lattice for
each sentence. Experimental results are
reported for a Chinese-to-English task,
showing an improvement of 0.5%–1.8%
BLEU score absolute on various test sets
and better computational efficiency than
reordering during decoding. The exper-
iments also show that the reordering at
the chunk-level performs better than at the
POS-level.
</bodyText>
<sectionHeader confidence="0.999471" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999836454545455">
In machine translation, reordering is one of the ma-
jor problems, since different languages have differ-
ent word order requirements. Many reordering con-
straints have been used for word reorderings, such
as ITG constraints (Wu, 1996), IBM constraints
(Berger et al., 1996) and local constraints (Kanthak
et al., 2005). These approaches do not make use of
any linguistic knowledge.
Several methods have been proposed to use syn-
tactic information to handle the reordering problem,
e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea,
</bodyText>
<page confidence="0.84435">
1
</page>
<bodyText confidence="0.997500392857143">
2003; Melamed, 2004; Graehl and Knight, 2004;
Galley et al., 2006). One approach makes use of
bitext grammars to parse both the source and tar-
get languages. Another approach makes use of syn-
tactic information only in the target language. Note
that these models have radically different structures
and parameterizations than phrase-based models for
SMT.
Another kind of approaches is to use syntactic in-
formation in rescoring methods. (Koehn and Knight,
2003) apply a reranking approach to the sub-task
of noun-phrase translation. (Och et al., 2004) and
(Shen et al., 2004) describe the use of syntactic fea-
tures in reranking the output of a full translation sys-
tem, but the syntactic features give very small gains.
In this paper, we present a strategy to reorder
a source sentence using rules based on syntactic
chunks. It is possible to integrate reordering rules di-
rectly into the search process, but here, we consider
a more modular approach: easy to exchange reorder-
ing strategy. To avoid hard decisions before SMT,
we generate a source-reordering lattice instead of a
single reordered source sentence as input to the SMT
system. Then, the decoder uses the reordered source
language model as an additional feature function. A
language model trained on the reordered source-side
chunks gives a score for each path in the lattice. The
novel ideas in this paper are:
</bodyText>
<listItem confidence="0.995435">
• reordering of the source sentence at the chunk
level,
• representing linguistic chunks-reorderings in a
lattice.
</listItem>
<affiliation confidence="0.443294">
Proceedings of SSST, NAACL-HLT 2007 / AMTA Workshop on Syntax and Structure in Statistical Translation, pages 1–8,
Rochester, New York, April 2007. c�2007 Association for Computational Linguistics
</affiliation>
<bodyText confidence="0.999847384615385">
The rest of this paper is organized as follows. Sec-
tion 2 presents a review of related work. In Sec-
tions 3, we review the phrase-based translation sys-
tem used in this work and propose the framework
of the new reordering method. In Section 4, we in-
troduce the details of the reordering rules, how they
are defined and how to extract them. In Section 5,
we explain how to apply the rules and how to gen-
erate reordering lattice. In Section 6, we present
some results that show that the chunk-level source
reordering is helpful for phrase-based statistical ma-
chine translation. Finally, we conclude this paper
and discuss future work in Section 7.
</bodyText>
<sectionHeader confidence="0.999918" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999627097560976">
Beside the reordering methods during decoding, an
alternative approach is to reorder the input source
sentence to match the word order of the target sen-
tence.
Some reordering methods are carried out on syn-
tactic source trees. (Collins et al., 2005) describe
a method for reordering German for German-to-
English translation, where six transformations are
applied to the surface string of the parsed source
sentence. (Xia and McCord, 2004) propose an ap-
proach for translation from French-to-English. This
approach automatically extracts rewrite patterns by
parsing the source and target sides of the training
corpus. These rewrite patterns can be applied to any
input source sentence so that the rewritten source
and target sentences have similar word order. Both
methods need a parser to generate trees of source
sentences and are applied only as a preprocessing
step.
Another kind of source reordering methods be-
sides full parsing is based on Part-Of-Speech (POS)
tags or word classes. (Costa-juss`a and Fonollosa,
2006) view the source reordering as a translation
task that translate the source language into a re-
ordered source language. Then, the reordered source
sentence is taken as the single input to the standard
SMT system.
(Chen et al., 2006) automatically extract rules
from word alignments. These rules are defined at
the POS level and the scores of matching rules are
used as additional feature functions during rescor-
ing. (Crego and Mari˜no, 2006) integrate source-side
reordering into SMT decoding. They automatically
learn rewrite patterns from word alignment and rep-
resent the patterns with POS tags. To our knowledge
no work is reported on the reordering with shallow
parsing.
Decoding lattices were already used in (Zens et
al., 2002; Kanthak et al., 2005). Those approaches
used linguistically uninformed word-level reorder-
ings.
</bodyText>
<sectionHeader confidence="0.977759" genericHeader="method">
3 System Overview
</sectionHeader>
<bodyText confidence="0.99991925">
In this section, we will describe the phrase-based
SMT system which we use for the experiments.
Then, we will give an outline of the extentions with
the chunk-level source reordering model.
</bodyText>
<subsectionHeader confidence="0.999633">
3.1 The Baseline Phrase-based SMT System
</subsectionHeader>
<bodyText confidence="0.999857666666667">
In statistical machine translation, we are given a
source language sentence fJ1 = f1 ... fj ... fJ,
which is to be translated into a target language sen-
tence eI1 = e1 ... ei ... eI. Among all possible tar-
get language sentences, we will choose the sentence
with the highest probability:
</bodyText>
<subsectionHeader confidence="0.585166">
I,ei
</subsectionHeader>
<bodyText confidence="0.9924115">
This decomposition into two knowledge sources
is known as the source-channel approach to sta-
tistical machine translation (Brown et al., 1990).
It allows an independent modeling of the target
language model Pr(eI1) and the translation model
Pr(fJ1 |eI1). The target language model describes
the well-formedness of the target language sentence.
The translation model links the source language sen-
tence to the target language sentence. The argmax
operation denotes the search problem, i.e., the gen-
eration of the output sentence in the target language.
A generalization of the classical source-channel
approach is the direct modeling of the posterior
probability Pr(eI1|fJ1 ). Using a log-linear model
</bodyText>
<equation confidence="0.941416066666667">
ˆI �e1 = argmax
IPr(eI1|fJ1 )1 (1)
I,ei
= argmax
IPr(eI1) · Pr(fJ1 |eI1)1 (2)
2
(Och and Ney, 2002), we obtain:
(PM �
exp m=1 λmhm(eI 1,fJ 1 )
P �PM �
exp m=1 λmhm(e′I′
1 , fJ 1 )
I′,e′�′
1
(3)
</equation>
<bodyText confidence="0.995547">
The denominator represents a normalization factor
that depends only on the source sentence fJ1 . There-
fore, we can omit it during the search process. As a
decision rule, we obtain:
</bodyText>
<equation confidence="0.999550666666667">
�e1 = argmax (XM )
ˆI λmhm(eI1, fJ1 ) (4)
I,ei m=1
</equation>
<bodyText confidence="0.9995099">
The log-linear model has the advantage that addi-
tional models h(·) can be easily integrated into the
overall system. The model scaling factors λM1 are
trained according to the maximum entropy principle,
e.g., using the GIS algorithm. Alternatively, one can
train them with respect to the final translation quality
measured by an error criterion (Och, 2003).
The log-linear model is a natural framework to in-
tegrate many models. The baseline system uses the
following models:
</bodyText>
<listItem confidence="0.992553714285714">
• phrase translation model
• phrase count features
• word-based translation model
• word and phrase penalty
• target language model (6-gram)
• distortion model (assigning costs based on the
jump width)
</listItem>
<bodyText confidence="0.836563">
All the experiments in the paper are evaluated with-
out rescoring. More details about the baseline sys-
tem can be found in (Mauser et al., 2006)
</bodyText>
<subsectionHeader confidence="0.999674">
3.2 Source Sentence Reordering Framework
</subsectionHeader>
<bodyText confidence="0.999918857142857">
Encouraged by the work of (Xia and McCord, 2004)
and (Crego and Mari˜no, 2006), we also reorder the
source language side. Compared to reordering on
the target language side, one advantage is the effi-
ciency since the reordering lattice can be translated
monotonically as in (Zens et al., 2002). Another ad-
vantage is that there is correct sentence information
</bodyText>
<subsectionHeader confidence="0.522646">
Standard Translation Proces
</subsectionHeader>
<figureCaption confidence="0.99333">
Figure 1: Illustration of the translation process with
and without source reordering.
</figureCaption>
<bodyText confidence="0.99977845">
for the reordering methods, because the source sen-
tences are always given. Syntactic reordering on tar-
get language is difficult, since the methods will de-
grade much because of the errors in hypothesis.
We apply reordering at the syntactic chunk level
which can been seen as an intermediate level be-
tween full parsing and POS tagging. Figure 1 shows
the differences between the new translation frame-
work and the standard translation process. A re-
ordering lattice replaces the original source sentence
as the input to the translation system. The use of a
lattice avoids hard decisions before translation. To
generate the reordering lattice, the source sentence is
first POS tagged and chunk parsed. Then, reorder-
ing rules are applied to the chunks to generate the
reordering lattice.
Reordering rules are the key information for
source reordering. They are automatically learned
from the training data. The details of these two mod-
ules will be introduced in Section 5.
</bodyText>
<sectionHeader confidence="0.982133" genericHeader="method">
4 Reordering Rules
</sectionHeader>
<bodyText confidence="0.999916125">
There has been much work on learning and apply-
ing reordering rules on source language, such as
(NieBen and Ney, 2001; Xia and McCord, 2004;
Collins et al., 2005; Chen et al., 2006; Crego and
Mari˜no, 2006; Popovi´c and Ney, 2006). The re-
ordering rules could be composed of words, POS
tags or syntactic tags of phrases. In our work, a rule
is composed of chunk tags and POS tags. There is
</bodyText>
<figure confidence="0.996368">
Translation Process
source text sentences
with Source Reordering
source text sentences
POS tagging
shallow chunking
reordering rules
source reordering lattice
SMT system
SMT system
translation output translation output
Pr(eI1�fJ1 ) =
</figure>
<page confidence="0.971247">
3
</page>
<tableCaption confidence="0.9676055">
Table 1: Examples of reordering rules. (lhs: chunk
and POS tag sequence, rhs: permutation )
</tableCaption>
<figure confidence="0.9447175">
no. lhs rhs
1. NP0 PP1 u2 n3 0 1 2 3
2. NP0 PP1 u2 n3 3 0 1 2
3. DNP0 NP1 V P2 0 1 2
4. DNP0 NP1 V P2 1 0 2
5. DNP0 NP1 m2 0 1 2
6. DNP0 NP1 m2 ad3 3 0 1 2
7. DNP0 NP1 m2 ad3 v4 4 3 0 1 2
</figure>
<figureCaption confidence="0.875821">
Figure 2: Illustration of three kinds of phrases:
(a)monotone phrase, (b)reordering phrase, (c)cross
</figureCaption>
<bodyText confidence="0.857415333333333">
phrase. The black box is a word-to-word alignment.
The gray box is a chunk-to-word alignment.
no hierarchical structure in a rule.
</bodyText>
<subsectionHeader confidence="0.997089">
4.1 Definition of Reordering Rules
</subsectionHeader>
<bodyText confidence="0.999228333333333">
First, we show some rule examples in Table 1. A re-
ordering rule consists of a left-hand-side (lhs) and a
right-hand-side (rhs). The left-hand-side is a syn-
tactic rule (chunk or POS tags), while the right-
hand-side is the reordering positions of the rule. Dif-
ferent rules can share the same left-hand-side, such
as rules no. 1, 2 and no. 3, 4. The rules record
not only the real reordered chunk sequence, but also
the monotone chunk sequences, like no. 1, 3 and
5. Note that the same tag sequence can appear mul-
tiple times according to different contexts, such as
DNP0 NP1 m2 # 0 1 2 in rules no. 5, 6, 7.
</bodyText>
<subsectionHeader confidence="0.998183">
4.2 Extraction of Reordering Rules
</subsectionHeader>
<bodyText confidence="0.999873692307692">
The extraction of reordering rules is based on the
word alignment and the source sentence chunks.
Here, we train word alignments in both directions
with GIZA++ (Och and Ney, 2003). To get align-
ment with high accuracy, we use the intersection
alignment here.
For a given word-aligned sentence pair
(fi , ei, ai ), the source word sequence fi is
first parsed into a chunk sequence F1K. Accord-
ingly, the word-to-word alignment ai is changed
to a chunk-to-word alignment aK 1 which is the
combination of the target words aligned to the
source words in a chunk. It is defined as:
</bodyText>
<equation confidence="0.909311">
�ak = {i|i = aj n j E Dk,jk+1 − 1]}
</equation>
<bodyText confidence="0.999871692307692">
Here, jk denotes the position of the first source word
in kth chunk. The new alignment is 1 : m from
source chunks to target words. It also means ak is a
set of positions of target words.
We apply the standard phrase extraction algorithm
(Zens et al., 2002) to (F1K, e�1, iiK1). Discarding the
cross phrases, we keep the other phrases as rules. In
a cross phrase, at least two chunk-word alignments
overlap on the target language side. An example
of a cross phrase is illustrated in Figure 2(c). Fig-
ure 2(a) and (b) illustrate the phrases for reordering
rules, which could be monotone phrases or reorder-
ing phrases.
</bodyText>
<sectionHeader confidence="0.865318" genericHeader="method">
5 Reordering Lattice Generation
</sectionHeader>
<subsectionHeader confidence="0.764981">
5.1 Parsing the Source Sentence
</subsectionHeader>
<bodyText confidence="0.990655357142857">
The first step of chunk parsing is word segmentation.
Then, a POS tagger is usually needed for further
syntactic analysis. In our experiments, we use the
tool of “Inst. of Computing Tech., Chinese Lexical
Analysis System (ICTCLAS)” (Zhang et al., 2003),
which does the two tasks in one pass.
Referring to the description of the chunking task
in CoNLL-20001, instead of English, a Chinese
chunker is processed and evaluated. Each word is
assigned a chunk tag, which contains the name of the
chunk type and ”B” for the first word of the chunk
and ”I” for each other word in the chunk. The ”O”
chunk tag is used for tokens which are not part of
any chunk. We use the maximum entropy tool YAS-
</bodyText>
<footnote confidence="0.991874">
1http://www.cnts.ua.ac.be/conll2000/chunking/
</footnote>
<page confidence="0.988389">
4
</page>
<figureCaption confidence="0.99632">
Figure 3: Example of applying rules. The left part is the used rules. The right part is the generated new
orders of source words.
</figureCaption>
<bodyText confidence="0.997435285714286">
MET2 to learn the chunking model. The model is
based on a combination of word and POS tags. Since
specific training and test data are not available for
Chinese chunking, we convert subtrees of the Chi-
nese treebank (LDC2005T01) into chunks. As there
are many ways to choose a subtree, we uses the min-
imum subtree with the following constraints:
</bodyText>
<listItem confidence="0.9993735">
• a subtree has more than one child,
• the children of a subtree are all leaves.
</listItem>
<bodyText confidence="0.995724357142857">
ble reordering S′ and is given a weight W. In this
paper, the weight is computed using a source lan-
guage model p(S′). The weight is used directly in
the decoder, integrated into Equation (4). There is
also a scaling factor for this weight, which is op-
timized together with other scaling factors on the
development data. The probability of the reordered
source sentence is calculated as follows: for a re-
ordered source sentence w1w2...wn, the trigram lan-
guage model is:
Compared to chunking of English as in CoNLL- p(S′) _ N p(wn|wn−2,wn−1) (5)
2000, there are more chunk types (24 instead of 6) H
and no single-word chunks. These two aspects make n=1
chunking for Chinese harder.
</bodyText>
<subsectionHeader confidence="0.999797">
5.2 Applying Reordering Rules
</subsectionHeader>
<bodyText confidence="0.999941333333333">
First, we search the reordering rules, in which the
chunk sequence matches any tag sequence in the in-
put sentence. A source sentence has many paths
generated by the rules . For a word uncovered by any
rules, its POS tag is used. Each path corresponds to
one sentence permutation.
The left part of the Figure 3 shows seven possible
coverages, the right part is the reordering for each
coverage. Some of the reorderings are identical, like
the permutations in line 1, 3 and 5. That is because
one word sequence is memorized by several rules in
different contexts.
</bodyText>
<subsectionHeader confidence="0.998497">
5.3 Lattice Weighting
</subsectionHeader>
<bodyText confidence="0.95421">
All reorderings of an input sentence S are com-
pressed and stored in a lattice. Each path is a possi-
</bodyText>
<footnote confidence="0.5252475">
2http://www-i6.informatik.rwth-aachen.de/web/Software
/index.html
</footnote>
<bodyText confidence="0.999861833333333">
Beside a word N-gram language model, a POS tag
N-gram model or a chunk tag N-gram model could
be used as well.
In this paper, we use a word trigram model. The
model is trained on reordered training source sen-
tences. A training source sentence is parsed into
chunks. In the same way as described in Section
4.2, word-to-word alignments is converted to chunk-
to-word alignments. We reorder the source chunks
to monotonize the chunk-to-word alignments. The
chunk boundaries are kept when this reordering is
done.
</bodyText>
<sectionHeader confidence="0.999945" genericHeader="evaluation">
6 Experiments
</sectionHeader>
<subsectionHeader confidence="0.999907">
6.1 Chunking Result
</subsectionHeader>
<bodyText confidence="0.99997825">
In this section, we report results for chunk parsing.
The annotation of the data is derived from the Chi-
nese treebank (LDC2005T01). The corpus is split
into two parts: 1000 sentences are randomly se-
</bodyText>
<page confidence="0.998359">
5
</page>
<tableCaption confidence="0.988218">
Table 2: Statistics of training and test corpus for
chunk parsing.
</tableCaption>
<table confidence="0.998822">
train test
sentences 17 785 1 000
words 486 468 21 851
chunks 105 773 4 680
words out of chunks 244 416 10 282
</table>
<tableCaption confidence="0.999523">
Table 3: Chunk parsing result on 1000 sentences.
</tableCaption>
<bodyText confidence="0.986784125">
accuracy precision recall F-measure
74.51% 65.2% 61.5% 63.3
lected as test data. The remaining part is used for
training. The corpus is from the newswire domain.
Table 2 shows the corpus statistics. For the 4 680
chunks in the test set, the chunker has found 4 414
chunks, of which 2 879 are correct. Following the
criteria of CoNLL-2000, the chunker is evaluated
using the F-score, which is a combination of pre-
cision and recall. The result is shown in Table 3.
The accuracy is evaluated at the word level, the
other three metrics are evaluated at the chunk level.
The results at the chunk level are worse than at the
word level, because a chunk is counted as correct
only if the chunk tag and the chunk boundaries are
both correct.
</bodyText>
<subsectionHeader confidence="0.999178">
6.2 Translation Results
</subsectionHeader>
<bodyText confidence="0.9965556875">
For the translation experiments, we report the two
accuracy measures BLEU (Papineni et al., 2002)
and NIST (Doddington, 2002) as well as the two
error rates word error rate (WER) and position-
independent word error rate (PER).
We perform translation experiments on the Ba-
sic Traveling Expression Corpus (BTEC) for the
Chinese-English task. It is a speech translation task
in the domain of tourism-related information. We
report results on the IWSLT 2004, 2005 and 2006
evaluation test sets. There are 16 reference trans-
lations for the IWSLT 2004 and 2005 tasks and 7
reference translations for the IWSLT 2006 task.
Table 4 shows the corpus statistics of the task. A
training corpus is used to train the translation model,
the language model and to obtain the reordering
</bodyText>
<tableCaption confidence="0.946456">
Table 4: Statistics of training and test corpora for the
IWSLT tasks.
</tableCaption>
<table confidence="0.9987299375">
Chinese English
Train Sentences 40k
Words
308k 377k
Dev Sentences 489
Words
5 478 6 008
Test Sentences 500
IWSLT04 Words
3 866 3 581
Test Sentences 506
IWSLT05 Words
3 652 3 579
Test Sentences 500
IWSLT06 Words
5 846 –
</table>
<bodyText confidence="0.999776586206897">
rules. A development corpus is used to optimize the
scaling factors for the BLEU score. The English text
is processed using a tokenizer. The Chinese text pro-
cessing uses word segmentation with the ICTCLAS
segmenter (Zhang et al., 2003). The translation is
evaluated case-insensitive and without punctuation
marks.
The translation results are presented in Table 5.
The baseline system is a non-monotone translation
system, in which the decoder does reordering on
the target language side. Compared to the base-
line system, the source reordering method improves
the BLEU score by 0.5% − 1.8% absolute. It also
achieves a better WER. Note that the used chun-
ker here is out-of-domain 3. An improvement is
achieved even with a low F-measure for chunking.
So, we could hope that larger improvement is possi-
ble using a high-accuracy chunker.
Though the input is a lattice, the source reordering
is still faster than the reordering during decoding,
e.g. for the IWSLT 2006 test set, the baseline system
took 17.5 minutes and the source reordering system
took 12.3 minutes. The result also indicates that the
non-monotone decoding hurts the performance in a
source reordering framework. A similar conclusion
is also presented in (Xia and McCord, 2004).
Additional experiments we carried out to compare
POS-level and chunk-level reorderings. We delete
the chunk information and keep the POS tags. Then,
</bodyText>
<footnote confidence="0.9986955">
3The chunker is trained on newswire data, but the test data
is from the tourism domain.
</footnote>
<page confidence="0.999232">
6
</page>
<tableCaption confidence="0.999825">
Table 5: Translation performance for the Chinese-English IWSLT task
</tableCaption>
<table confidence="0.999971125">
WER[%] PER[%] NIST BLEU[%]
IWSLT04 baseline 47.3 38.2 7.78 39.1
source reordering 46.3 37.2 7.70 40.9
IWSLT05 baseline 45.0 37.3 7.40 41.8
source reordering 44.6 36.8 7.51 42.3
IWSLT06 baseline 67.4 50.0 6.65 22.4
source reordering 65.6 50.4 6.46 23.3
source reordering+non-monotone decoder 66.5 50.3 6.52 22.4
</table>
<tableCaption confidence="0.9735935">
Table 6: Translation performance of reordering
methods on IWSLT 2004 test set
</tableCaption>
<table confidence="0.999956">
WER PER NIST BLEU
[%] [%] [%]
Baseline 47.3 38.2 7.78 39.1
POS 46.9 37.5 7.38 39.7
Chunk 46.3 37.2 7.70 40.9
</table>
<tableCaption confidence="0.8024475">
Table 7: Lattice information for the Chinese-English
IWSLT 2004 test data
</tableCaption>
<table confidence="0.99344025">
avg. density used translation
pro sent rules time [min/sec]
POS 15.7 6 868 7:08
Chunk 8.2 3 685 3:47
</table>
<bodyText confidence="0.999846875">
we rerun the source reordering system on the IWSLT
2004 test set. The translation results are shown in
Table 6. Though the accuracy of chunking is low,
the chunk-level method gets better results than POS-
level method. With POS tags, we get more reorder-
ing rules and more paths in the lattice, since the sen-
tence length is longer than with chunks. The statis-
tics are shown in Table 7.
</bodyText>
<sectionHeader confidence="0.9985" genericHeader="conclusions">
7 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.999992">
This paper presents a source-side reordering method
which is based on syntactic chunks. The reordering
rules are automatically learned from bilingual data.
To avoid hard decision before decoding, a reorder-
ing lattice representing all possible reorderings is
used instead of single source sentence for decoding.
The experiments demonstrate that even with a very
poor chunker, the chunk-level source reordering is
still helpful for a state-of-the-art statistical transla-
tion system and it has better performance than the
POS-level source reordering and target-side reorder-
ing.
There are some directions for future work. First,
we would like to try this method on larger data sets
and other language pairs. Second, we are going to
improve the chunking accuracy. Third, we would
reduce the number of rules and prune the lattice.
</bodyText>
<sectionHeader confidence="0.998385" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.997669333333333">
This material is partly based upon work sup-
ported by the Defense Advanced Research Projects
Agency (DARPA) under Contract No. HR0011-06-
C-0023, and was partially funded by the Deutsche
Forschungsgemeinschaft (DFG) under the project
“Statistische Text¨ubersetzung” (Ne572/5)
</bodyText>
<sectionHeader confidence="0.998959" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9831305625">
A. L. Berger, S. A. Della Pietra, and V. J. Della Pietra. 1996. A
maximum entropy approach to natural language processing.
Computational Linguistics, 22(1):39–72, March.
P. F. Brown, J. Cocke, S. A. Della Pietra, V. J. Della Pietra,
F. Jelinek, J. D. Lafferty, R. L. Mercer, and P. S. Roossin.
1990. A statistical approach to machine translation. Com-
putational Linguistics, 16(2):79–85, June.
B. Chen, M. Cettolo, and M. Federico. 2006. Reordering
rules for phrase-based statistical machine translation. In
Int. Workshop on Spoken Language Translation Evaluation
Campaign on Spoken Language Translation, pages 1–15,
Kyoto, Japan, November.
M. Collins, P. Koehn, and I. Kucerova. 2005. Clause restructur-
ing for statistical machine translation. In Proc. of the 43rd
Annual Meeting of the Association for Computational Lin-
guistics (ACL), pages 531–540, Ann Arbor, Michigan, June.
</reference>
<page confidence="0.996436">
7
</page>
<reference confidence="0.998721425925926">
M. R. Costa-juss`a and J. A. R. Fonollosa. 2006. Statistical ma-
chine reordering. In Proc. of the Conf. on Empirical Meth-
ods in Natural Language Processing, pages 70–76, Sydney,
Australia, July.
J. M. Crego and J. B. Mari˜no. 2006. Integration of postag-
based source reordering into SMT decoding by an extended
search graph. In Proc. of AMTA06, pages 29–36, Mas-
sachusetts, USA, August.
G. Doddington. 2002. Automatic evaluation of machine trans-
lation quality using n-gram co-occurrence statistics. In Proc.
ARPA Workshop on Human Language Technology.
M. Galley, J. Graehl, K. Knight, D. Marcu, S. DeNeefe,
W. Wang, and I. Thayer. 2006. Scalable inference and train-
ing of context-rich syntactic translation models. In Proc. of
the 21st Int. Conf. on Computational Linguistics and 44th
Annual Meeting of the Association for Computational Lin-
guistics, pages 961–968, Sydney, Australia, July.
D. Gildea. 2003. Loosely tree-based alignment for machine
translation. In Proc. of the 41th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL), pages 80–87,
Sapporo, Japan, July.
J. Graehl and K. Knight. 2004. Training tree transducers.
In HLT-NAACL 2004: Main Proc., pages 105–112, Boston,
Massachusetts, USA, May 2 - May 7.
S. Kanthak, D. Vilar, E. Matusov, R. Zens, and H. Ney. 2005.
Novel reordering approaches in phrase-based statistical ma-
chine translation. In 43rd Annual Meeting of the Assoc. for
Computational Linguistics: Proc. Workshop on Building and
Using Parallel Texts: Data-Driven Machine Translation and
Beyond, pages 167–174, Ann Arbor, Michigan, June.
P. Koehn and K. Knight. 2003. Empirical methods for com-
pound splitting. In Proc. 10th Conf. of the Europ. Chapter
of the Assoc. for Computational Linguistics (EACL), pages
347–354, Budapest, Hungary, April.
A. Mauser, R. Zens, E. Matusov, S. Hasan, and H. Ney. 2006.
The RWTH Statistical Machine Translation System for the
IWSLT 2006 Evaluation. In Proc. of the Int. Workshop
on Spoken Language Translation, pages 103–110, Kyoto,
Japan.
I. Melamed. 2004. Statistical machine translation by parsing.
In The Companion Volume to the Proc. of 42nd Annual Meet-
ing of the Association for Computational Linguistics, pages
653–660.
S. Nießen and H. Ney. 2001. Morpho-syntactic analysis for
reordering in statistical machine translation. In Proc. of MT
Summit VIII, pages 247–252.
F. J. Och and H. Ney. 2002. Discriminative training and max-
imum entropy models for statistical machine translation. In
Proc. of the 40th Annual Meeting of the Associationfor Com-
putational Linguistics (ACL), pages 295–302, Philadelphia,
PA, July.
F. J. Och and H. Ney. 2003. A systematic comparison of vari-
ous statistical alignment models. Computational Linguistics,
29(1):19–51, March.
F. J. Och, D. Gildea, S. Khudanpur, A. Sarkar, K. Yamada,
A. Fraser, S. Kumar, L. Shen, D. Smith, K. Eng, V. Jain,
Z. Jin, and D. Radev. 2004. A smorgasbord of features for
statistical machine translation. In Proc. 2004 Human Lan-
guage Technology Conf. /North American Chapter of the
Association for Computational Linguistics Annual Meeting
(HLT-NAACL), pages 161–168, Boston,MA.
F. J. Och. 2003. Minimum error rate training in statistical ma-
chine translation. In Proc. of the 41th Annual Meeting of
the Association for Computational Linguistics (ACL), pages
160–167, Sapporo, Japan, July.
K. Papineni, S. Roukos, T. Ward, and W. J. Zhu. 2002. Bleu: a
method for automatic evaluation of machine translation. In
Proc. of the 40th Annual Meeting of the Associationfor Com-
putational Linguistics (ACL), pages 311–318, Philadelphia,
PA, July.
M. Popovi´c and H. Ney. 2006. POS-based word reorderings
for statistical machine translation. In Proc. of the Fifth Int.
Conf. on Language Resources and Evaluation (LREC).
L. Shen, A. Sarkar, and F. J. Och. 2004. Discriminative rerank-
ing for machine translation. In HLT-NAACL 2004: Main
Proc., pages 177–184, Boston, Massachusetts, USA, May 2
-May 7.
C. Tillmann, S. Vogel, H. Ney, and A. Zubiaga. 1997. A DP-
based search using monotone alignments in statistical trans-
lation. In Proc. 35th Annual Conf. of the Association for
Computational Linguistics, pages 289–296, Madrid, Spain,
July.
D. Wu. 1996. A polynomial-time algorithm for statistical ma-
chine translation. In Proc. 34th Annual Meeting of the As-
soc. for Computational Linguistics, pages 152–158, Santa
Cruz, CA, June.
D. Wu. 1997. Stochastic inversion transduction grammars and
bilingual parsing of parallel corpora. Computational Lin-
guistics, 23(3):377–403, September.
F. Xia and M. McCord. 2004. Improving a statistical MT sys-
tem with automatically learned rewrite patterns. In Proc. of
COLING04, pages 508–514, Geneva, Switzerland, Aug 23–
Aug 27.
K. Yamada and K. Knight. 2001. A syntax-based statistical
translation model. In Proc. of the 39th Annual Meeting of
the Association for Computational Linguistics (ACL), pages
523–530, Toulouse, France, July.
R. Zens, F. J. Och, and H. Ney. 2002. Phrase-based statistical
machine translation. In M. Jarke, J. Koehler, and G. Lake-
meyer, editors, 25th German Conf. on Artificial Intelligence
(KI2002), volume 2479 of Lecture Notes in Artificial Intel-
ligence (LNAI), pages 18–32, Aachen, Germany, September.
Springer Verlag.
H. P. Zhang, Q. Liu, X. Q. Cheng, H. Zhang, and H. K. Yu.
2003. Chinese lexical analysis using hierarchical hidden
markov model. In Proc. of the second SIGHAN workshop
on Chinese language processing, pages 63–70, Morristown,
NJ, USA.
</reference>
<page confidence="0.998459">
8
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.205544">
<title confidence="0.997136">Chunk-Level Reordering of Source Language Sentences Automatically Learned Rules for Statistical Machine Translation</title>
<author confidence="0.990483">Yuqi Zhang</author>
<author confidence="0.990483">Richard Zens</author>
<author confidence="0.990483">Hermann Ney</author>
<affiliation confidence="0.505647">Human Language Technology and Pattern</affiliation>
<note confidence="0.6547635">Lehrstuhl f¨ur Informatik 6 – Computer Science RWTH Aachen University, D-52056 Aachen,</note>
<abstract confidence="0.995195631578948">In this paper, we describe a sourceside reordering method based on syntactic chunks for phrase-based statistical machine translation. First, we shallow parse the source language sentences. Then, reordering rules are automatically learned from source-side chunks and word alignments. During translation, the rules are used to generate a reordering lattice for each sentence. Experimental results are reported for a Chinese-to-English task, showing an improvement of 0.5%–1.8% BLEU score absolute on various test sets and better computational efficiency than reordering during decoding. The experiments also show that the reordering at the chunk-level performs better than at the POS-level.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A L Berger</author>
<author>S A Della Pietra</author>
<author>V J Della Pietra</author>
</authors>
<title>A maximum entropy approach to natural language processing.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<volume>22</volume>
<issue>1</issue>
<contexts>
<context position="1339" citStr="Berger et al., 1996" startWordPosition="186" endWordPosition="189">e for each sentence. Experimental results are reported for a Chinese-to-English task, showing an improvement of 0.5%–1.8% BLEU score absolute on various test sets and better computational efficiency than reordering during decoding. The experiments also show that the reordering at the chunk-level performs better than at the POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based model</context>
</contexts>
<marker>Berger, Pietra, Pietra, 1996</marker>
<rawString>A. L. Berger, S. A. Della Pietra, and V. J. Della Pietra. 1996. A maximum entropy approach to natural language processing. Computational Linguistics, 22(1):39–72, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P F Brown</author>
<author>J Cocke</author>
<author>S A Della Pietra</author>
<author>V J Della Pietra</author>
<author>F Jelinek</author>
<author>J D Lafferty</author>
<author>R L Mercer</author>
<author>P S Roossin</author>
</authors>
<title>A statistical approach to machine translation.</title>
<date>1990</date>
<journal>Computational Linguistics,</journal>
<volume>16</volume>
<issue>2</issue>
<contexts>
<context position="6465" citStr="Brown et al., 1990" startWordPosition="1014" endWordPosition="1017">-based SMT system which we use for the experiments. Then, we will give an outline of the extentions with the chunk-level source reordering model. 3.1 The Baseline Phrase-based SMT System In statistical machine translation, we are given a source language sentence fJ1 = f1 ... fj ... fJ, which is to be translated into a target language sentence eI1 = e1 ... ei ... eI. Among all possible target language sentences, we will choose the sentence with the highest probability: I,ei This decomposition into two knowledge sources is known as the source-channel approach to statistical machine translation (Brown et al., 1990). It allows an independent modeling of the target language model Pr(eI1) and the translation model Pr(fJ1 |eI1). The target language model describes the well-formedness of the target language sentence. The translation model links the source language sentence to the target language sentence. The argmax operation denotes the search problem, i.e., the generation of the output sentence in the target language. A generalization of the classical source-channel approach is the direct modeling of the posterior probability Pr(eI1|fJ1 ). Using a log-linear model ˆI �e1 = argmax IPr(eI1|fJ1 )1 (1) I,ei = </context>
</contexts>
<marker>Brown, Cocke, Pietra, Pietra, Jelinek, Lafferty, Mercer, Roossin, 1990</marker>
<rawString>P. F. Brown, J. Cocke, S. A. Della Pietra, V. J. Della Pietra, F. Jelinek, J. D. Lafferty, R. L. Mercer, and P. S. Roossin. 1990. A statistical approach to machine translation. Computational Linguistics, 16(2):79–85, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Chen</author>
<author>M Cettolo</author>
<author>M Federico</author>
</authors>
<title>Reordering rules for phrase-based statistical machine translation.</title>
<date>2006</date>
<booktitle>In Int. Workshop on Spoken Language Translation Evaluation Campaign on Spoken Language Translation,</booktitle>
<pages>1--15</pages>
<location>Kyoto, Japan,</location>
<contexts>
<context position="5187" citStr="Chen et al., 2006" startWordPosition="810" endWordPosition="813">erns can be applied to any input source sentence so that the rewritten source and target sentences have similar word order. Both methods need a parser to generate trees of source sentences and are applied only as a preprocessing step. Another kind of source reordering methods besides full parsing is based on Part-Of-Speech (POS) tags or word classes. (Costa-juss`a and Fonollosa, 2006) view the source reordering as a translation task that translate the source language into a reordered source language. Then, the reordered source sentence is taken as the single input to the standard SMT system. (Chen et al., 2006) automatically extract rules from word alignments. These rules are defined at the POS level and the scores of matching rules are used as additional feature functions during rescoring. (Crego and Mari˜no, 2006) integrate source-side reordering into SMT decoding. They automatically learn rewrite patterns from word alignment and represent the patterns with POS tags. To our knowledge no work is reported on the reordering with shallow parsing. Decoding lattices were already used in (Zens et al., 2002; Kanthak et al., 2005). Those approaches used linguistically uninformed word-level reorderings. 3 S</context>
<context position="9947" citStr="Chen et al., 2006" startWordPosition="1589" endWordPosition="1592">of a lattice avoids hard decisions before translation. To generate the reordering lattice, the source sentence is first POS tagged and chunk parsed. Then, reordering rules are applied to the chunks to generate the reordering lattice. Reordering rules are the key information for source reordering. They are automatically learned from the training data. The details of these two modules will be introduced in Section 5. 4 Reordering Rules There has been much work on learning and applying reordering rules on source language, such as (NieBen and Ney, 2001; Xia and McCord, 2004; Collins et al., 2005; Chen et al., 2006; Crego and Mari˜no, 2006; Popovi´c and Ney, 2006). The reordering rules could be composed of words, POS tags or syntactic tags of phrases. In our work, a rule is composed of chunk tags and POS tags. There is Translation Process source text sentences with Source Reordering source text sentences POS tagging shallow chunking reordering rules source reordering lattice SMT system SMT system translation output translation output Pr(eI1�fJ1 ) = 3 Table 1: Examples of reordering rules. (lhs: chunk and POS tag sequence, rhs: permutation ) no. lhs rhs 1. NP0 PP1 u2 n3 0 1 2 3 2. NP0 PP1 u2 n3 3 0 1 2 3</context>
</contexts>
<marker>Chen, Cettolo, Federico, 2006</marker>
<rawString>B. Chen, M. Cettolo, and M. Federico. 2006. Reordering rules for phrase-based statistical machine translation. In Int. Workshop on Spoken Language Translation Evaluation Campaign on Spoken Language Translation, pages 1–15, Kyoto, Japan, November.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Collins</author>
<author>P Koehn</author>
<author>I Kucerova</author>
</authors>
<title>Clause restructuring for statistical machine translation.</title>
<date>2005</date>
<booktitle>In Proc. of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>531--540</pages>
<location>Ann Arbor, Michigan,</location>
<contexts>
<context position="4185" citStr="Collins et al., 2005" startWordPosition="653" endWordPosition="656">ules, how they are defined and how to extract them. In Section 5, we explain how to apply the rules and how to generate reordering lattice. In Section 6, we present some results that show that the chunk-level source reordering is helpful for phrase-based statistical machine translation. Finally, we conclude this paper and discuss future work in Section 7. 2 Related Work Beside the reordering methods during decoding, an alternative approach is to reorder the input source sentence to match the word order of the target sentence. Some reordering methods are carried out on syntactic source trees. (Collins et al., 2005) describe a method for reordering German for German-toEnglish translation, where six transformations are applied to the surface string of the parsed source sentence. (Xia and McCord, 2004) propose an approach for translation from French-to-English. This approach automatically extracts rewrite patterns by parsing the source and target sides of the training corpus. These rewrite patterns can be applied to any input source sentence so that the rewritten source and target sentences have similar word order. Both methods need a parser to generate trees of source sentences and are applied only as a p</context>
<context position="9928" citStr="Collins et al., 2005" startWordPosition="1585" endWordPosition="1588">ation system. The use of a lattice avoids hard decisions before translation. To generate the reordering lattice, the source sentence is first POS tagged and chunk parsed. Then, reordering rules are applied to the chunks to generate the reordering lattice. Reordering rules are the key information for source reordering. They are automatically learned from the training data. The details of these two modules will be introduced in Section 5. 4 Reordering Rules There has been much work on learning and applying reordering rules on source language, such as (NieBen and Ney, 2001; Xia and McCord, 2004; Collins et al., 2005; Chen et al., 2006; Crego and Mari˜no, 2006; Popovi´c and Ney, 2006). The reordering rules could be composed of words, POS tags or syntactic tags of phrases. In our work, a rule is composed of chunk tags and POS tags. There is Translation Process source text sentences with Source Reordering source text sentences POS tagging shallow chunking reordering rules source reordering lattice SMT system SMT system translation output translation output Pr(eI1�fJ1 ) = 3 Table 1: Examples of reordering rules. (lhs: chunk and POS tag sequence, rhs: permutation ) no. lhs rhs 1. NP0 PP1 u2 n3 0 1 2 3 2. NP0 </context>
</contexts>
<marker>Collins, Koehn, Kucerova, 2005</marker>
<rawString>M. Collins, P. Koehn, and I. Kucerova. 2005. Clause restructuring for statistical machine translation. In Proc. of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL), pages 531–540, Ann Arbor, Michigan, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M R Costa-juss`a</author>
<author>J A R Fonollosa</author>
</authors>
<title>Statistical machine reordering.</title>
<date>2006</date>
<booktitle>In Proc. of the Conf. on Empirical Methods in Natural Language Processing,</booktitle>
<pages>70--76</pages>
<location>Sydney, Australia,</location>
<marker>Costa-juss`a, Fonollosa, 2006</marker>
<rawString>M. R. Costa-juss`a and J. A. R. Fonollosa. 2006. Statistical machine reordering. In Proc. of the Conf. on Empirical Methods in Natural Language Processing, pages 70–76, Sydney, Australia, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J M Crego</author>
<author>J B Mari˜no</author>
</authors>
<title>Integration of postagbased source reordering into SMT decoding by an extended search graph.</title>
<date>2006</date>
<booktitle>In Proc. of AMTA06,</booktitle>
<pages>29--36</pages>
<location>Massachusetts, USA,</location>
<marker>Crego, Mari˜no, 2006</marker>
<rawString>J. M. Crego and J. B. Mari˜no. 2006. Integration of postagbased source reordering into SMT decoding by an extended search graph. In Proc. of AMTA06, pages 29–36, Massachusetts, USA, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Doddington</author>
</authors>
<title>Automatic evaluation of machine translation quality using n-gram co-occurrence statistics.</title>
<date>2002</date>
<booktitle>In Proc. ARPA Workshop on Human Language Technology.</booktitle>
<contexts>
<context position="17472" citStr="Doddington, 2002" startWordPosition="2927" endWordPosition="2928">hunks, of which 2 879 are correct. Following the criteria of CoNLL-2000, the chunker is evaluated using the F-score, which is a combination of precision and recall. The result is shown in Table 3. The accuracy is evaluated at the word level, the other three metrics are evaluated at the chunk level. The results at the chunk level are worse than at the word level, because a chunk is counted as correct only if the chunk tag and the chunk boundaries are both correct. 6.2 Translation Results For the translation experiments, we report the two accuracy measures BLEU (Papineni et al., 2002) and NIST (Doddington, 2002) as well as the two error rates word error rate (WER) and positionindependent word error rate (PER). We perform translation experiments on the Basic Traveling Expression Corpus (BTEC) for the Chinese-English task. It is a speech translation task in the domain of tourism-related information. We report results on the IWSLT 2004, 2005 and 2006 evaluation test sets. There are 16 reference translations for the IWSLT 2004 and 2005 tasks and 7 reference translations for the IWSLT 2006 task. Table 4 shows the corpus statistics of the task. A training corpus is used to train the translation model, the </context>
</contexts>
<marker>Doddington, 2002</marker>
<rawString>G. Doddington. 2002. Automatic evaluation of machine translation quality using n-gram co-occurrence statistics. In Proc. ARPA Workshop on Human Language Technology.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Galley</author>
<author>J Graehl</author>
<author>K Knight</author>
<author>D Marcu</author>
<author>S DeNeefe</author>
<author>W Wang</author>
<author>I Thayer</author>
</authors>
<title>Scalable inference and training of context-rich syntactic translation models.</title>
<date>2006</date>
<booktitle>In Proc. of the 21st Int. Conf. on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>961--968</pages>
<location>Sydney, Australia,</location>
<contexts>
<context position="1663" citStr="Galley et al., 2006" startWordPosition="238" endWordPosition="241"> POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et al., 2004) describe the use of syntactic features in reranking the output of a full translation system, </context>
</contexts>
<marker>Galley, Graehl, Knight, Marcu, DeNeefe, Wang, Thayer, 2006</marker>
<rawString>M. Galley, J. Graehl, K. Knight, D. Marcu, S. DeNeefe, W. Wang, and I. Thayer. 2006. Scalable inference and training of context-rich syntactic translation models. In Proc. of the 21st Int. Conf. on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics, pages 961–968, Sydney, Australia, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Gildea</author>
</authors>
<title>Loosely tree-based alignment for machine translation.</title>
<date>2003</date>
<booktitle>In Proc. of the 41th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>80--87</pages>
<location>Sapporo, Japan,</location>
<marker>Gildea, 2003</marker>
<rawString>D. Gildea. 2003. Loosely tree-based alignment for machine translation. In Proc. of the 41th Annual Meeting of the Association for Computational Linguistics (ACL), pages 80–87, Sapporo, Japan, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Graehl</author>
<author>K Knight</author>
</authors>
<title>Training tree transducers.</title>
<date>2004</date>
<booktitle>In HLT-NAACL 2004: Main Proc.,</booktitle>
<pages>105--112</pages>
<location>Boston, Massachusetts, USA,</location>
<contexts>
<context position="1641" citStr="Graehl and Knight, 2004" startWordPosition="234" endWordPosition="237">rforms better than at the POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et al., 2004) describe the use of syntactic features in reranking the output of a ful</context>
</contexts>
<marker>Graehl, Knight, 2004</marker>
<rawString>J. Graehl and K. Knight. 2004. Training tree transducers. In HLT-NAACL 2004: Main Proc., pages 105–112, Boston, Massachusetts, USA, May 2 - May 7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Kanthak</author>
<author>D Vilar</author>
<author>E Matusov</author>
<author>R Zens</author>
<author>H Ney</author>
</authors>
<title>Novel reordering approaches in phrase-based statistical machine translation.</title>
<date>2005</date>
<booktitle>In 43rd Annual Meeting of the Assoc. for Computational Linguistics: Proc. Workshop on Building and Using Parallel Texts: Data-Driven Machine Translation and Beyond,</booktitle>
<pages>167--174</pages>
<location>Ann Arbor, Michigan,</location>
<contexts>
<context position="1384" citStr="Kanthak et al., 2005" startWordPosition="193" endWordPosition="196">e reported for a Chinese-to-English task, showing an improvement of 0.5%–1.8% BLEU score absolute on various test sets and better computational efficiency than reordering during decoding. The experiments also show that the reordering at the chunk-level performs better than at the POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to u</context>
<context position="5710" citStr="Kanthak et al., 2005" startWordPosition="892" endWordPosition="895">dered source sentence is taken as the single input to the standard SMT system. (Chen et al., 2006) automatically extract rules from word alignments. These rules are defined at the POS level and the scores of matching rules are used as additional feature functions during rescoring. (Crego and Mari˜no, 2006) integrate source-side reordering into SMT decoding. They automatically learn rewrite patterns from word alignment and represent the patterns with POS tags. To our knowledge no work is reported on the reordering with shallow parsing. Decoding lattices were already used in (Zens et al., 2002; Kanthak et al., 2005). Those approaches used linguistically uninformed word-level reorderings. 3 System Overview In this section, we will describe the phrase-based SMT system which we use for the experiments. Then, we will give an outline of the extentions with the chunk-level source reordering model. 3.1 The Baseline Phrase-based SMT System In statistical machine translation, we are given a source language sentence fJ1 = f1 ... fj ... fJ, which is to be translated into a target language sentence eI1 = e1 ... ei ... eI. Among all possible target language sentences, we will choose the sentence with the highest prob</context>
</contexts>
<marker>Kanthak, Vilar, Matusov, Zens, Ney, 2005</marker>
<rawString>S. Kanthak, D. Vilar, E. Matusov, R. Zens, and H. Ney. 2005. Novel reordering approaches in phrase-based statistical machine translation. In 43rd Annual Meeting of the Assoc. for Computational Linguistics: Proc. Workshop on Building and Using Parallel Texts: Data-Driven Machine Translation and Beyond, pages 167–174, Ann Arbor, Michigan, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>K Knight</author>
</authors>
<title>Empirical methods for compound splitting.</title>
<date>2003</date>
<booktitle>In Proc. 10th Conf. of the Europ. Chapter of the Assoc. for Computational Linguistics (EACL),</booktitle>
<pages>347--354</pages>
<location>Budapest, Hungary,</location>
<contexts>
<context position="2055" citStr="Koehn and Knight, 2003" startWordPosition="299" endWordPosition="302">stic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et al., 2004) describe the use of syntactic features in reranking the output of a full translation system, but the syntactic features give very small gains. In this paper, we present a strategy to reorder a source sentence using rules based on syntactic chunks. It is possible to integrate reordering rules directly into the search process, but here, we consider a more modular approach: easy to exchange reordering strategy. To avoid hard decisions before SMT, we generate a source-reordering latti</context>
</contexts>
<marker>Koehn, Knight, 2003</marker>
<rawString>P. Koehn and K. Knight. 2003. Empirical methods for compound splitting. In Proc. 10th Conf. of the Europ. Chapter of the Assoc. for Computational Linguistics (EACL), pages 347–354, Budapest, Hungary, April.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Mauser</author>
<author>R Zens</author>
<author>E Matusov</author>
<author>S Hasan</author>
<author>H Ney</author>
</authors>
<title>Evaluation.</title>
<date>2006</date>
<booktitle>The RWTH Statistical Machine Translation System for the IWSLT</booktitle>
<pages>103--110</pages>
<location>Kyoto, Japan.</location>
<contexts>
<context position="8268" citStr="Mauser et al., 2006" startWordPosition="1317" endWordPosition="1320">le, e.g., using the GIS algorithm. Alternatively, one can train them with respect to the final translation quality measured by an error criterion (Och, 2003). The log-linear model is a natural framework to integrate many models. The baseline system uses the following models: • phrase translation model • phrase count features • word-based translation model • word and phrase penalty • target language model (6-gram) • distortion model (assigning costs based on the jump width) All the experiments in the paper are evaluated without rescoring. More details about the baseline system can be found in (Mauser et al., 2006) 3.2 Source Sentence Reordering Framework Encouraged by the work of (Xia and McCord, 2004) and (Crego and Mari˜no, 2006), we also reorder the source language side. Compared to reordering on the target language side, one advantage is the efficiency since the reordering lattice can be translated monotonically as in (Zens et al., 2002). Another advantage is that there is correct sentence information Standard Translation Proces Figure 1: Illustration of the translation process with and without source reordering. for the reordering methods, because the source sentences are always given. Syntactic r</context>
</contexts>
<marker>Mauser, Zens, Matusov, Hasan, Ney, 2006</marker>
<rawString>A. Mauser, R. Zens, E. Matusov, S. Hasan, and H. Ney. 2006. The RWTH Statistical Machine Translation System for the IWSLT 2006 Evaluation. In Proc. of the Int. Workshop on Spoken Language Translation, pages 103–110, Kyoto, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Melamed</author>
</authors>
<title>Statistical machine translation by parsing.</title>
<date>2004</date>
<booktitle>In The Companion Volume to the Proc. of 42nd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>653--660</pages>
<contexts>
<context position="1616" citStr="Melamed, 2004" startWordPosition="232" endWordPosition="233"> chunk-level performs better than at the POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et al., 2004) describe the use of syntactic features in rera</context>
</contexts>
<marker>Melamed, 2004</marker>
<rawString>I. Melamed. 2004. Statistical machine translation by parsing. In The Companion Volume to the Proc. of 42nd Annual Meeting of the Association for Computational Linguistics, pages 653–660.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Nießen</author>
<author>H Ney</author>
</authors>
<title>Morpho-syntactic analysis for reordering in statistical machine translation.</title>
<date>2001</date>
<booktitle>In Proc. of MT Summit VIII,</booktitle>
<pages>247--252</pages>
<marker>Nießen, Ney, 2001</marker>
<rawString>S. Nießen and H. Ney. 2001. Morpho-syntactic analysis for reordering in statistical machine translation. In Proc. of MT Summit VIII, pages 247–252.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>H Ney</author>
</authors>
<title>Discriminative training and maximum entropy models for statistical machine translation.</title>
<date>2002</date>
<booktitle>In Proc. of the 40th Annual Meeting of the Associationfor Computational Linguistics (ACL),</booktitle>
<pages>295--302</pages>
<location>Philadelphia, PA,</location>
<contexts>
<context position="7122" citStr="Och and Ney, 2002" startWordPosition="1117" endWordPosition="1120">the target language model Pr(eI1) and the translation model Pr(fJ1 |eI1). The target language model describes the well-formedness of the target language sentence. The translation model links the source language sentence to the target language sentence. The argmax operation denotes the search problem, i.e., the generation of the output sentence in the target language. A generalization of the classical source-channel approach is the direct modeling of the posterior probability Pr(eI1|fJ1 ). Using a log-linear model ˆI �e1 = argmax IPr(eI1|fJ1 )1 (1) I,ei = argmax IPr(eI1) · Pr(fJ1 |eI1)1 (2) 2 (Och and Ney, 2002), we obtain: (PM � exp m=1 λmhm(eI 1,fJ 1 ) P �PM � exp m=1 λmhm(e′I′ 1 , fJ 1 ) I′,e′�′ 1 (3) The denominator represents a normalization factor that depends only on the source sentence fJ1 . Therefore, we can omit it during the search process. As a decision rule, we obtain: �e1 = argmax (XM ) ˆI λmhm(eI1, fJ1 ) (4) I,ei m=1 The log-linear model has the advantage that additional models h(·) can be easily integrated into the overall system. The model scaling factors λM1 are trained according to the maximum entropy principle, e.g., using the GIS algorithm. Alternatively, one can train them with </context>
</contexts>
<marker>Och, Ney, 2002</marker>
<rawString>F. J. Och and H. Ney. 2002. Discriminative training and maximum entropy models for statistical machine translation. In Proc. of the 40th Annual Meeting of the Associationfor Computational Linguistics (ACL), pages 295–302, Philadelphia, PA, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>H Ney</author>
</authors>
<title>A systematic comparison of various statistical alignment models.</title>
<date>2003</date>
<journal>Computational Linguistics,</journal>
<volume>29</volume>
<issue>1</issue>
<contexts>
<context position="11757" citStr="Och and Ney, 2003" startWordPosition="1927" endWordPosition="1930">ghthand-side is the reordering positions of the rule. Different rules can share the same left-hand-side, such as rules no. 1, 2 and no. 3, 4. The rules record not only the real reordered chunk sequence, but also the monotone chunk sequences, like no. 1, 3 and 5. Note that the same tag sequence can appear multiple times according to different contexts, such as DNP0 NP1 m2 # 0 1 2 in rules no. 5, 6, 7. 4.2 Extraction of Reordering Rules The extraction of reordering rules is based on the word alignment and the source sentence chunks. Here, we train word alignments in both directions with GIZA++ (Och and Ney, 2003). To get alignment with high accuracy, we use the intersection alignment here. For a given word-aligned sentence pair (fi , ei, ai ), the source word sequence fi is first parsed into a chunk sequence F1K. Accordingly, the word-to-word alignment ai is changed to a chunk-to-word alignment aK 1 which is the combination of the target words aligned to the source words in a chunk. It is defined as: �ak = {i|i = aj n j E Dk,jk+1 − 1]} Here, jk denotes the position of the first source word in kth chunk. The new alignment is 1 : m from source chunks to target words. It also means ak is a set of positio</context>
</contexts>
<marker>Och, Ney, 2003</marker>
<rawString>F. J. Och and H. Ney. 2003. A systematic comparison of various statistical alignment models. Computational Linguistics, 29(1):19–51, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>D Gildea</author>
<author>S Khudanpur</author>
<author>A Sarkar</author>
<author>K Yamada</author>
<author>A Fraser</author>
<author>S Kumar</author>
<author>L Shen</author>
<author>D Smith</author>
<author>K Eng</author>
<author>V Jain</author>
<author>Z Jin</author>
<author>D Radev</author>
</authors>
<title>A smorgasbord of features for statistical machine translation.</title>
<date>2004</date>
<booktitle>In Proc. 2004 Human Language Technology Conf. /North American Chapter of the Association for Computational Linguistics Annual Meeting (HLT-NAACL),</booktitle>
<pages>161--168</pages>
<location>Boston,MA.</location>
<contexts>
<context position="2145" citStr="Och et al., 2004" startWordPosition="313" endWordPosition="316">ordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et al., 2004) describe the use of syntactic features in reranking the output of a full translation system, but the syntactic features give very small gains. In this paper, we present a strategy to reorder a source sentence using rules based on syntactic chunks. It is possible to integrate reordering rules directly into the search process, but here, we consider a more modular approach: easy to exchange reordering strategy. To avoid hard decisions before SMT, we generate a source-reordering lattice instead of a single reordered source sentence as input to the SMT system. Then, the dec</context>
</contexts>
<marker>Och, Gildea, Khudanpur, Sarkar, Yamada, Fraser, Kumar, Shen, Smith, Eng, Jain, Jin, Radev, 2004</marker>
<rawString>F. J. Och, D. Gildea, S. Khudanpur, A. Sarkar, K. Yamada, A. Fraser, S. Kumar, L. Shen, D. Smith, K. Eng, V. Jain, Z. Jin, and D. Radev. 2004. A smorgasbord of features for statistical machine translation. In Proc. 2004 Human Language Technology Conf. /North American Chapter of the Association for Computational Linguistics Annual Meeting (HLT-NAACL), pages 161–168, Boston,MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
</authors>
<title>Minimum error rate training in statistical machine translation.</title>
<date>2003</date>
<booktitle>In Proc. of the 41th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>160--167</pages>
<location>Sapporo, Japan,</location>
<contexts>
<context position="7805" citStr="Och, 2003" startWordPosition="1242" endWordPosition="1243"> fJ 1 ) I′,e′�′ 1 (3) The denominator represents a normalization factor that depends only on the source sentence fJ1 . Therefore, we can omit it during the search process. As a decision rule, we obtain: �e1 = argmax (XM ) ˆI λmhm(eI1, fJ1 ) (4) I,ei m=1 The log-linear model has the advantage that additional models h(·) can be easily integrated into the overall system. The model scaling factors λM1 are trained according to the maximum entropy principle, e.g., using the GIS algorithm. Alternatively, one can train them with respect to the final translation quality measured by an error criterion (Och, 2003). The log-linear model is a natural framework to integrate many models. The baseline system uses the following models: • phrase translation model • phrase count features • word-based translation model • word and phrase penalty • target language model (6-gram) • distortion model (assigning costs based on the jump width) All the experiments in the paper are evaluated without rescoring. More details about the baseline system can be found in (Mauser et al., 2006) 3.2 Source Sentence Reordering Framework Encouraged by the work of (Xia and McCord, 2004) and (Crego and Mari˜no, 2006), we also reorder</context>
</contexts>
<marker>Och, 2003</marker>
<rawString>F. J. Och. 2003. Minimum error rate training in statistical machine translation. In Proc. of the 41th Annual Meeting of the Association for Computational Linguistics (ACL), pages 160–167, Sapporo, Japan, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Papineni</author>
<author>S Roukos</author>
<author>T Ward</author>
<author>W J Zhu</author>
</authors>
<title>Bleu: a method for automatic evaluation of machine translation.</title>
<date>2002</date>
<booktitle>In Proc. of the 40th Annual Meeting of the Associationfor Computational Linguistics (ACL),</booktitle>
<pages>311--318</pages>
<location>Philadelphia, PA,</location>
<contexts>
<context position="17444" citStr="Papineni et al., 2002" startWordPosition="2921" endWordPosition="2924">et, the chunker has found 4 414 chunks, of which 2 879 are correct. Following the criteria of CoNLL-2000, the chunker is evaluated using the F-score, which is a combination of precision and recall. The result is shown in Table 3. The accuracy is evaluated at the word level, the other three metrics are evaluated at the chunk level. The results at the chunk level are worse than at the word level, because a chunk is counted as correct only if the chunk tag and the chunk boundaries are both correct. 6.2 Translation Results For the translation experiments, we report the two accuracy measures BLEU (Papineni et al., 2002) and NIST (Doddington, 2002) as well as the two error rates word error rate (WER) and positionindependent word error rate (PER). We perform translation experiments on the Basic Traveling Expression Corpus (BTEC) for the Chinese-English task. It is a speech translation task in the domain of tourism-related information. We report results on the IWSLT 2004, 2005 and 2006 evaluation test sets. There are 16 reference translations for the IWSLT 2004 and 2005 tasks and 7 reference translations for the IWSLT 2006 task. Table 4 shows the corpus statistics of the task. A training corpus is used to train</context>
</contexts>
<marker>Papineni, Roukos, Ward, Zhu, 2002</marker>
<rawString>K. Papineni, S. Roukos, T. Ward, and W. J. Zhu. 2002. Bleu: a method for automatic evaluation of machine translation. In Proc. of the 40th Annual Meeting of the Associationfor Computational Linguistics (ACL), pages 311–318, Philadelphia, PA, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Popovi´c</author>
<author>H Ney</author>
</authors>
<title>POS-based word reorderings for statistical machine translation.</title>
<date>2006</date>
<booktitle>In Proc. of the Fifth Int. Conf. on Language Resources and Evaluation (LREC).</booktitle>
<marker>Popovi´c, Ney, 2006</marker>
<rawString>M. Popovi´c and H. Ney. 2006. POS-based word reorderings for statistical machine translation. In Proc. of the Fifth Int. Conf. on Language Resources and Evaluation (LREC).</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Shen</author>
<author>A Sarkar</author>
<author>F J Och</author>
</authors>
<title>Discriminative reranking for machine translation.</title>
<date>2004</date>
<booktitle>In HLT-NAACL 2004: Main Proc.,</booktitle>
<pages>177--184</pages>
<location>Boston, Massachusetts, USA,</location>
<contexts>
<context position="2169" citStr="Shen et al., 2004" startWordPosition="318" endWordPosition="321">(Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et al., 2004) describe the use of syntactic features in reranking the output of a full translation system, but the syntactic features give very small gains. In this paper, we present a strategy to reorder a source sentence using rules based on syntactic chunks. It is possible to integrate reordering rules directly into the search process, but here, we consider a more modular approach: easy to exchange reordering strategy. To avoid hard decisions before SMT, we generate a source-reordering lattice instead of a single reordered source sentence as input to the SMT system. Then, the decoder uses the reordered </context>
</contexts>
<marker>Shen, Sarkar, Och, 2004</marker>
<rawString>L. Shen, A. Sarkar, and F. J. Och. 2004. Discriminative reranking for machine translation. In HLT-NAACL 2004: Main Proc., pages 177–184, Boston, Massachusetts, USA, May 2 -May 7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Tillmann</author>
<author>S Vogel</author>
<author>H Ney</author>
<author>A Zubiaga</author>
</authors>
<title>A DPbased search using monotone alignments in statistical translation.</title>
<date>1997</date>
<booktitle>In Proc. 35th Annual Conf. of the Association for Computational Linguistics,</booktitle>
<pages>289--296</pages>
<location>Madrid, Spain,</location>
<marker>Tillmann, Vogel, Ney, Zubiaga, 1997</marker>
<rawString>C. Tillmann, S. Vogel, H. Ney, and A. Zubiaga. 1997. A DPbased search using monotone alignments in statistical translation. In Proc. 35th Annual Conf. of the Association for Computational Linguistics, pages 289–296, Madrid, Spain, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Wu</author>
</authors>
<title>A polynomial-time algorithm for statistical machine translation.</title>
<date>1996</date>
<booktitle>In Proc. 34th Annual Meeting of the Assoc. for Computational Linguistics,</booktitle>
<pages>152--158</pages>
<location>Santa Cruz, CA,</location>
<contexts>
<context position="1300" citStr="Wu, 1996" startWordPosition="182" endWordPosition="183">generate a reordering lattice for each sentence. Experimental results are reported for a Chinese-to-English task, showing an improvement of 0.5%–1.8% BLEU score absolute on various test sets and better computational efficiency than reordering during decoding. The experiments also show that the reordering at the chunk-level performs better than at the POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and pa</context>
</contexts>
<marker>Wu, 1996</marker>
<rawString>D. Wu. 1996. A polynomial-time algorithm for statistical machine translation. In Proc. 34th Annual Meeting of the Assoc. for Computational Linguistics, pages 152–158, Santa Cruz, CA, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Wu</author>
</authors>
<title>Stochastic inversion transduction grammars and bilingual parsing of parallel corpora.</title>
<date>1997</date>
<journal>Computational Linguistics,</journal>
<volume>23</volume>
<issue>3</issue>
<contexts>
<context position="1560" citStr="Wu, 1997" startWordPosition="223" endWordPosition="224">he experiments also show that the reordering at the chunk-level performs better than at the POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et a</context>
</contexts>
<marker>Wu, 1997</marker>
<rawString>D. Wu. 1997. Stochastic inversion transduction grammars and bilingual parsing of parallel corpora. Computational Linguistics, 23(3):377–403, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Xia</author>
<author>M McCord</author>
</authors>
<title>Improving a statistical MT system with automatically learned rewrite patterns.</title>
<date>2004</date>
<booktitle>In Proc. of COLING04,</booktitle>
<pages>508--514</pages>
<location>Geneva, Switzerland,</location>
<contexts>
<context position="4373" citStr="Xia and McCord, 2004" startWordPosition="681" endWordPosition="684">that the chunk-level source reordering is helpful for phrase-based statistical machine translation. Finally, we conclude this paper and discuss future work in Section 7. 2 Related Work Beside the reordering methods during decoding, an alternative approach is to reorder the input source sentence to match the word order of the target sentence. Some reordering methods are carried out on syntactic source trees. (Collins et al., 2005) describe a method for reordering German for German-toEnglish translation, where six transformations are applied to the surface string of the parsed source sentence. (Xia and McCord, 2004) propose an approach for translation from French-to-English. This approach automatically extracts rewrite patterns by parsing the source and target sides of the training corpus. These rewrite patterns can be applied to any input source sentence so that the rewritten source and target sentences have similar word order. Both methods need a parser to generate trees of source sentences and are applied only as a preprocessing step. Another kind of source reordering methods besides full parsing is based on Part-Of-Speech (POS) tags or word classes. (Costa-juss`a and Fonollosa, 2006) view the source </context>
<context position="8358" citStr="Xia and McCord, 2004" startWordPosition="1331" endWordPosition="1334">final translation quality measured by an error criterion (Och, 2003). The log-linear model is a natural framework to integrate many models. The baseline system uses the following models: • phrase translation model • phrase count features • word-based translation model • word and phrase penalty • target language model (6-gram) • distortion model (assigning costs based on the jump width) All the experiments in the paper are evaluated without rescoring. More details about the baseline system can be found in (Mauser et al., 2006) 3.2 Source Sentence Reordering Framework Encouraged by the work of (Xia and McCord, 2004) and (Crego and Mari˜no, 2006), we also reorder the source language side. Compared to reordering on the target language side, one advantage is the efficiency since the reordering lattice can be translated monotonically as in (Zens et al., 2002). Another advantage is that there is correct sentence information Standard Translation Proces Figure 1: Illustration of the translation process with and without source reordering. for the reordering methods, because the source sentences are always given. Syntactic reordering on target language is difficult, since the methods will degrade much because of </context>
<context position="9906" citStr="Xia and McCord, 2004" startWordPosition="1581" endWordPosition="1584">he input to the translation system. The use of a lattice avoids hard decisions before translation. To generate the reordering lattice, the source sentence is first POS tagged and chunk parsed. Then, reordering rules are applied to the chunks to generate the reordering lattice. Reordering rules are the key information for source reordering. They are automatically learned from the training data. The details of these two modules will be introduced in Section 5. 4 Reordering Rules There has been much work on learning and applying reordering rules on source language, such as (NieBen and Ney, 2001; Xia and McCord, 2004; Collins et al., 2005; Chen et al., 2006; Crego and Mari˜no, 2006; Popovi´c and Ney, 2006). The reordering rules could be composed of words, POS tags or syntactic tags of phrases. In our work, a rule is composed of chunk tags and POS tags. There is Translation Process source text sentences with Source Reordering source text sentences POS tagging shallow chunking reordering rules source reordering lattice SMT system SMT system translation output translation output Pr(eI1�fJ1 ) = 3 Table 1: Examples of reordering rules. (lhs: chunk and POS tag sequence, rhs: permutation ) no. lhs rhs 1. NP0 PP1</context>
<context position="19646" citStr="Xia and McCord, 2004" startWordPosition="3287" endWordPosition="3290">tter WER. Note that the used chunker here is out-of-domain 3. An improvement is achieved even with a low F-measure for chunking. So, we could hope that larger improvement is possible using a high-accuracy chunker. Though the input is a lattice, the source reordering is still faster than the reordering during decoding, e.g. for the IWSLT 2006 test set, the baseline system took 17.5 minutes and the source reordering system took 12.3 minutes. The result also indicates that the non-monotone decoding hurts the performance in a source reordering framework. A similar conclusion is also presented in (Xia and McCord, 2004). Additional experiments we carried out to compare POS-level and chunk-level reorderings. We delete the chunk information and keep the POS tags. Then, 3The chunker is trained on newswire data, but the test data is from the tourism domain. 6 Table 5: Translation performance for the Chinese-English IWSLT task WER[%] PER[%] NIST BLEU[%] IWSLT04 baseline 47.3 38.2 7.78 39.1 source reordering 46.3 37.2 7.70 40.9 IWSLT05 baseline 45.0 37.3 7.40 41.8 source reordering 44.6 36.8 7.51 42.3 IWSLT06 baseline 67.4 50.0 6.65 22.4 source reordering 65.6 50.4 6.46 23.3 source reordering+non-monotone decoder </context>
</contexts>
<marker>Xia, McCord, 2004</marker>
<rawString>F. Xia and M. McCord. 2004. Improving a statistical MT system with automatically learned rewrite patterns. In Proc. of COLING04, pages 508–514, Geneva, Switzerland, Aug 23– Aug 27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Yamada</author>
<author>K Knight</author>
</authors>
<title>A syntax-based statistical translation model.</title>
<date>2001</date>
<booktitle>In Proc. of the 39th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>523--530</pages>
<location>Toulouse, France,</location>
<contexts>
<context position="1585" citStr="Yamada and Knight, 2001" startWordPosition="225" endWordPosition="228">ents also show that the reordering at the chunk-level performs better than at the POS-level. 1 Introduction In machine translation, reordering is one of the major problems, since different languages have different word order requirements. Many reordering constraints have been used for word reorderings, such as ITG constraints (Wu, 1996), IBM constraints (Berger et al., 1996) and local constraints (Kanthak et al., 2005). These approaches do not make use of any linguistic knowledge. Several methods have been proposed to use syntactic information to handle the reordering problem, e.g. (Wu, 1997; Yamada and Knight, 2001; Gildea, 1 2003; Melamed, 2004; Graehl and Knight, 2004; Galley et al., 2006). One approach makes use of bitext grammars to parse both the source and target languages. Another approach makes use of syntactic information only in the target language. Note that these models have radically different structures and parameterizations than phrase-based models for SMT. Another kind of approaches is to use syntactic information in rescoring methods. (Koehn and Knight, 2003) apply a reranking approach to the sub-task of noun-phrase translation. (Och et al., 2004) and (Shen et al., 2004) describe the us</context>
</contexts>
<marker>Yamada, Knight, 2001</marker>
<rawString>K. Yamada and K. Knight. 2001. A syntax-based statistical translation model. In Proc. of the 39th Annual Meeting of the Association for Computational Linguistics (ACL), pages 523–530, Toulouse, France, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Zens</author>
<author>F J Och</author>
<author>H Ney</author>
</authors>
<title>Phrase-based statistical machine translation.</title>
<date>2002</date>
<booktitle>25th German Conf. on Artificial Intelligence (KI2002),</booktitle>
<volume>2479</volume>
<pages>18--32</pages>
<editor>In M. Jarke, J. Koehler, and G. Lakemeyer, editors,</editor>
<publisher>Springer Verlag.</publisher>
<location>Aachen, Germany,</location>
<contexts>
<context position="5687" citStr="Zens et al., 2002" startWordPosition="888" endWordPosition="891">age. Then, the reordered source sentence is taken as the single input to the standard SMT system. (Chen et al., 2006) automatically extract rules from word alignments. These rules are defined at the POS level and the scores of matching rules are used as additional feature functions during rescoring. (Crego and Mari˜no, 2006) integrate source-side reordering into SMT decoding. They automatically learn rewrite patterns from word alignment and represent the patterns with POS tags. To our knowledge no work is reported on the reordering with shallow parsing. Decoding lattices were already used in (Zens et al., 2002; Kanthak et al., 2005). Those approaches used linguistically uninformed word-level reorderings. 3 System Overview In this section, we will describe the phrase-based SMT system which we use for the experiments. Then, we will give an outline of the extentions with the chunk-level source reordering model. 3.1 The Baseline Phrase-based SMT System In statistical machine translation, we are given a source language sentence fJ1 = f1 ... fj ... fJ, which is to be translated into a target language sentence eI1 = e1 ... ei ... eI. Among all possible target language sentences, we will choose the sentenc</context>
<context position="8602" citStr="Zens et al., 2002" startWordPosition="1371" endWordPosition="1374">sed translation model • word and phrase penalty • target language model (6-gram) • distortion model (assigning costs based on the jump width) All the experiments in the paper are evaluated without rescoring. More details about the baseline system can be found in (Mauser et al., 2006) 3.2 Source Sentence Reordering Framework Encouraged by the work of (Xia and McCord, 2004) and (Crego and Mari˜no, 2006), we also reorder the source language side. Compared to reordering on the target language side, one advantage is the efficiency since the reordering lattice can be translated monotonically as in (Zens et al., 2002). Another advantage is that there is correct sentence information Standard Translation Proces Figure 1: Illustration of the translation process with and without source reordering. for the reordering methods, because the source sentences are always given. Syntactic reordering on target language is difficult, since the methods will degrade much because of the errors in hypothesis. We apply reordering at the syntactic chunk level which can been seen as an intermediate level between full parsing and POS tagging. Figure 1 shows the differences between the new translation framework and the standard </context>
<context position="12446" citStr="Zens et al., 2002" startWordPosition="2058" endWordPosition="2061">t here. For a given word-aligned sentence pair (fi , ei, ai ), the source word sequence fi is first parsed into a chunk sequence F1K. Accordingly, the word-to-word alignment ai is changed to a chunk-to-word alignment aK 1 which is the combination of the target words aligned to the source words in a chunk. It is defined as: �ak = {i|i = aj n j E Dk,jk+1 − 1]} Here, jk denotes the position of the first source word in kth chunk. The new alignment is 1 : m from source chunks to target words. It also means ak is a set of positions of target words. We apply the standard phrase extraction algorithm (Zens et al., 2002) to (F1K, e�1, iiK1). Discarding the cross phrases, we keep the other phrases as rules. In a cross phrase, at least two chunk-word alignments overlap on the target language side. An example of a cross phrase is illustrated in Figure 2(c). Figure 2(a) and (b) illustrate the phrases for reordering rules, which could be monotone phrases or reordering phrases. 5 Reordering Lattice Generation 5.1 Parsing the Source Sentence The first step of chunk parsing is word segmentation. Then, a POS tagger is usually needed for further syntactic analysis. In our experiments, we use the tool of “Inst. of Compu</context>
</contexts>
<marker>Zens, Och, Ney, 2002</marker>
<rawString>R. Zens, F. J. Och, and H. Ney. 2002. Phrase-based statistical machine translation. In M. Jarke, J. Koehler, and G. Lakemeyer, editors, 25th German Conf. on Artificial Intelligence (KI2002), volume 2479 of Lecture Notes in Artificial Intelligence (LNAI), pages 18–32, Aachen, Germany, September. Springer Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H P Zhang</author>
<author>Q Liu</author>
<author>X Q Cheng</author>
<author>H Zhang</author>
<author>H K Yu</author>
</authors>
<title>Chinese lexical analysis using hierarchical hidden markov model.</title>
<date>2003</date>
<booktitle>In Proc. of the second SIGHAN workshop on Chinese language processing,</booktitle>
<pages>63--70</pages>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="13121" citStr="Zhang et al., 2003" startWordPosition="2169" endWordPosition="2172">eep the other phrases as rules. In a cross phrase, at least two chunk-word alignments overlap on the target language side. An example of a cross phrase is illustrated in Figure 2(c). Figure 2(a) and (b) illustrate the phrases for reordering rules, which could be monotone phrases or reordering phrases. 5 Reordering Lattice Generation 5.1 Parsing the Source Sentence The first step of chunk parsing is word segmentation. Then, a POS tagger is usually needed for further syntactic analysis. In our experiments, we use the tool of “Inst. of Computing Tech., Chinese Lexical Analysis System (ICTCLAS)” (Zhang et al., 2003), which does the two tasks in one pass. Referring to the description of the chunking task in CoNLL-20001, instead of English, a Chinese chunker is processed and evaluated. Each word is assigned a chunk tag, which contains the name of the chunk type and ”B” for the first word of the chunk and ”I” for each other word in the chunk. The ”O” chunk tag is used for tokens which are not part of any chunk. We use the maximum entropy tool YAS1http://www.cnts.ua.ac.be/conll2000/chunking/ 4 Figure 3: Example of applying rules. The left part is the used rules. The right part is the generated new orders of </context>
<context position="18640" citStr="Zhang et al., 2003" startWordPosition="3126" endWordPosition="3129">corpus is used to train the translation model, the language model and to obtain the reordering Table 4: Statistics of training and test corpora for the IWSLT tasks. Chinese English Train Sentences 40k Words 308k 377k Dev Sentences 489 Words 5 478 6 008 Test Sentences 500 IWSLT04 Words 3 866 3 581 Test Sentences 506 IWSLT05 Words 3 652 3 579 Test Sentences 500 IWSLT06 Words 5 846 – rules. A development corpus is used to optimize the scaling factors for the BLEU score. The English text is processed using a tokenizer. The Chinese text processing uses word segmentation with the ICTCLAS segmenter (Zhang et al., 2003). The translation is evaluated case-insensitive and without punctuation marks. The translation results are presented in Table 5. The baseline system is a non-monotone translation system, in which the decoder does reordering on the target language side. Compared to the baseline system, the source reordering method improves the BLEU score by 0.5% − 1.8% absolute. It also achieves a better WER. Note that the used chunker here is out-of-domain 3. An improvement is achieved even with a low F-measure for chunking. So, we could hope that larger improvement is possible using a high-accuracy chunker. T</context>
</contexts>
<marker>Zhang, Liu, Cheng, Zhang, Yu, 2003</marker>
<rawString>H. P. Zhang, Q. Liu, X. Q. Cheng, H. Zhang, and H. K. Yu. 2003. Chinese lexical analysis using hierarchical hidden markov model. In Proc. of the second SIGHAN workshop on Chinese language processing, pages 63–70, Morristown, NJ, USA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>