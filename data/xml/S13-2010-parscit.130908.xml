<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.006324">
<title confidence="0.950297">
FSS-TimEx for TempEval-3: Extracting Temporal Information from Text
</title>
<author confidence="0.967696">
Vanni Zavarella
</author>
<affiliation confidence="0.736242">
Joint Research Centre
European Commission
</affiliation>
<address confidence="0.741013">
21027 Ispra, Italy
</address>
<email confidence="0.828543">
vanni.zavarella
@jrc.ec.europa.eu
</email>
<author confidence="0.927653">
Hristo Tanev
</author>
<affiliation confidence="0.7777575">
Joint Research Centre
European Commission
</affiliation>
<address confidence="0.686492">
21027 Ispra, Italy
</address>
<email confidence="0.824659">
hristo.tanev
@jrc.ec.europa.eu
</email>
<sectionHeader confidence="0.995334" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999741875">
We describe FSS-TimEx, a module for the
recognition and normalization of temporal ex-
pressions we submitted to Task A and B of
the TempEval-3 challenge. FSS-TimEx was
developed as part of a multilingual event ex-
traction system, Nexus, which runs on top of
the EMM news processing engine. It consists
of finite-state rule cascades, using minimalis-
tic text processing stages and simple heuris-
tics to model the relations between events and
temporal expressions. Although FSS-TimEx
is already deployed within an IE application
in the medical domain, we found it useful to
customize its output to the TimeML standard
in order to have an independent performance
measure and guide further developments.
</bodyText>
<sectionHeader confidence="0.998982" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.991378416666667">
The FSS-TimEx (Finite State-based Shallow Time
Extractor) system participating in TempEval-3 is in-
tegrated in the event extraction engine Nexus (Tanev
et al., 2008), developed at the EC’s Joint Research
Center for extracting event information from on-line
news articles gathered by the Europe Media Mon-
itor (EMM) news aggregation and analysis family
of applications(Steinberger et al., 2009). Nexus is
highly multilingual1 and easily portable across do-
mains through semi-automatic learning of lexical re-
sources. In the domain of epidemiological surveil-
lance, the event extraction task required a particu-
larly deep temporal information analysis, in order to
1Currently, it covers English, French, Italian, Spanish, Por-
tuguese, Turkish, Russian, Arabic.
detect temporal relations among event reports and
mitigate the classical event duplication problem. As
an example, from a report like:
The overall death toll has risen to 160
since the beginning of the year, after 2
patients in Gulu and 2 in Masindi died on
Tue 5 Dec 2000.
a system might be prevented to wrongly sum up the
two victim counts (160+4) only if it is made aware of
the inclusion relation between the first time interval
and the date, which in turn implies normalizing the
two temporal expressions.
Currently, FSS-TimEx is deployed for French,
English and Italian and extensions are foreseen for
further languages. Given such requirements for mul-
tilinguality, we developed FSS-TimEx using a lin-
guistically light-weight approach, applying shallow
processing modules only. On the other hand, as we
need to extract highly structured information out of
the detected temporal expressions, to be used in the
subsequent normalization phase, we mostly opted
for a rule-based approach, using finite-state gram-
mar cascades, rather than machine learning meth-
ods. Nonetheless, some of the required lexicons
were semi-automatically learned.
In our participation in Tasks A and B of the
TempEval-3, we experimented with adapting an ex-
isting timex recognition module for the English lan-
guage, to Spanish.
We first describe our system in 2,3 and 4, then in
5 we show and shortly discuss the results for Task
A and Task B, and conclude with some thoughts on
prospective developments.
</bodyText>
<page confidence="0.993576">
58
</page>
<bodyText confidence="0.809886">
Second Joint Conference on Lexical and Computational Semantics (*SEM), Volume 2: Seventh International Workshop on Semantic
Evaluation (SemEval 2013), pages 58–63, Atlanta, Georgia, June 14-15, 2013. c�2013 Association for Computational Linguistics
</bodyText>
<sectionHeader confidence="0.969572" genericHeader="method">
2 System Modules
</sectionHeader>
<bodyText confidence="0.811635076923077">
The system makes use of cascades of finite-state
grammar rules applied to the output of a set of shal-
low text processing modules.
Text Processing Modules. These include tok-
enization, sentence splitting, domain-specific dictio-
nary look-up and morphological analysis, which are
all part of the CORLEONE (Core Linguistic Entity
Online Extraction) engine (Piskorski, 2008). Mor-
phological analysis purely consists of matching text
tokens over full-form entries of a dictionary from the
MULTEXT project (Erjavec, 2004), which encodes
rich morphological features in a cross-lingual stan-
dard. Consequently, no PoS-tagging or parsing is
performed upstream of the extraction grammars.
Finite-State Grammar Engine. We use the Ex-
PRESS finite-state grammar engine (Piskorski,
2007). Grammars in the ExPRESS formalism con-
sist of cascades of pattern-action rules, whose left-
hand side (LHS) are regular expressions over flat
feature structures (FFS) and the right-hand side
(RHS) consists of a list of FFS (see Figure 1 be-
low for an example). Variable binding from LHS to
RHS, as well as string processing and Boolean op-
erators on the RHS, allow to impose relatively com-
plex constraints in the form of Boolean-valued pred-
icates.
</bodyText>
<subsectionHeader confidence="0.928571">
Weakly-supervised Learning of Lexical Re-
</subsectionHeader>
<bodyText confidence="0.999824307692308">
sources. In order to determine the Class feature
for the event extraction task, we experimented with
using a language-independent method for weakly-
supervised lexical acquisition. The algorithm takes
as input a small set of seed terms, an unannotated
text corpus and a parameter for the number of boot-
strapping iterations: it then learns a ranked list of
further terms, which are likely to belong to the same
class, based on distributional n-gram features and
term clustering (Tanev et al., in press). Although
manual post-filtering is required, output term accu-
racy is reasonably high, and very high for top ranked
terms.
</bodyText>
<sectionHeader confidence="0.7598225" genericHeader="method">
3 Event and Event Feature Detection
(Task B)
</sectionHeader>
<bodyText confidence="0.99988684375">
Although Nexus is a high precision event extraction
system, we have not deployed it to model the event
detection task. The reason is that Nexus is cus-
tomized to recognize a number of highly domain-
specific event types (e.g. Armed Conflict,
Earthquake,Terrorist Attack) and will
necessarily perform low in recall given the general,
domain-independent definition of events in Task
B. Instead, we tentatively used a small set of
language-dependent finite-state rules to model verb
phrase structure. Rules take as input MULTEXT
morphological tokens and detect verb phrases along
with a number of VP features, including Tense,
which is used by the temporal normalizer to ground
event modifying temporal expressions (see 4.2).
Class attribute was encoded in the morphologi-
cal dictionary by using the output of the machine
learning method sketched above: for each TimeML
Event Class (Pustejovsky et al., 2003), we provided
seed verb forms for all of its sub-classes, performed
multi-class learning, and used the main Class label
to annotate the union of output forms in the lexicon,
after some manual cleaning.
The OCCURRENCE class was used as the default
Class value for event verb forms, and it was overrid-
den whenever a more specific event Class value was
present2.
We do not cover event nominal forms, as after
some tests event referring and non-event referring
noun classes appeared too difficult to tell apart by
machine learning methods. Consequently, we ex-
pect system recall in Task B to be heavily limited.
</bodyText>
<sectionHeader confidence="0.992555" genericHeader="method">
4 Temporal Expressions (Task A)
</sectionHeader>
<bodyText confidence="0.983600272727273">
FSS-TimEx’s temporal expression processing con-
sists of two stages.
In the Recognition phase, temporal expressions
are detected and segmented in text and a more ab-
stract representation of them is filled for further
processing. Local parsing of timexes is performed
by a cascade of hand-coded, partially language-
dependent finite-state grammar rules using the Ex-
PRESS engine, resulting in an intermediate fea-
2Otherwise, we chose randomly among alternative values of
Class-ambiguous event expressions.
</bodyText>
<page confidence="0.995892">
59
</page>
<table confidence="0.9547074">
rule :&gt; ( (lex &amp; [TYPE:&amp;quot;temp_signal&amp;quot;, SURFACE:#signal, NORMALIZED:&amp;quot;INCLUDED&amp;quot;]
 |lex &amp; [TYPE:&amp;quot;temp_signal&amp;quot;, NORMALIZED:&amp;quot;DURING&amp;quot;])
lex &amp; [TYPE:&amp;quot;quantifier&amp;quot;, NORMALIZED:#mod]? determiner?
lex &amp; [TYPE:&amp;quot;temp_mod&amp;quot;, OP:#op, REF_TYPE:#ref_type]
( (lex &amp; [TYPE: &amp;quot;numeral&amp;quot;, NORMALIZED:#amount1]
lex &amp; [TYPE: &amp;quot;numeral&amp;quot;, NORMALIZED:#amount2]?)
 |token &amp; [TYPE: &amp;quot;any_natural_number&amp;quot;, SURFACE:#amount1]
lex &amp; [TYPE:&amp;quot;time_unit&amp;quot;, NUM:&amp;quot;p&amp;quot;, GRAN:#gran]):x
-&gt; x: period &amp; [DIR:#op,REF_TYPE:#ref_type,MOD:#mod,GRAN:#gran,QUANT:#amount,SIGNAL:#signal]
&amp; #amount := ConcForSum(#amount1,#amount2).
</table>
<figureCaption confidence="0.990861">
Figure 1: Sample recognition rule
</figureCaption>
<bodyText confidence="0.99993675">
ture structure-like representation, which is subse-
quently used by a language-independent Normaliza-
tion stage to compute exact values of the time ex-
pressions, according to the TimeML standard.
We judge that such a strict coupling of recognition
and normalization is better achieved through feature
extraction rules than by deploying two separate pro-
cesses3.
</bodyText>
<subsectionHeader confidence="0.996901">
4.1 Recognizing Temporal Expressions
</subsectionHeader>
<bodyText confidence="0.9993536">
A cascade of around 90 rules is deployed for the En-
glish language. These comprise lower-level rules, in
charge of modelling language constructions in the
target language, and typization rules that check the
attribute configuration of lower-level rule output and
return a corresponding structure, typed according to
an intermediate annotation type set, exporting all at-
tribute values relevant for normalization.
As an example, the rule shown in Figure1 detects
single-boundary period expressions (e.g. in the pre-
vious four weeks or during the next five days).
Notice that the rule output type is the non
TimeML-compliant period (i.e. an anchored time
duration). This is an intermediate annotation type
which is subsequently converted into a TimeML
type (Duration) during the Normalization phase.
The temporal lexicon referenced by the gram-
mar contains around 300 entries for the English lan-
guage, classified into as many as 24 types, each de-
scribed by a small attribute list. Sample entries from
the English lexicon are listed in Figure 2.
This lexicon structure (types and attributes) was
applied as such to the Spanish language; lexicon
population was manually done in one day of work,
by first translating lexical triggers (e.g. day, month
</bodyText>
<footnote confidence="0.882381">
3This architecture is very close to the one proposed by the
ITA-Chronos system (Negri, 2007).
</footnote>
<equation confidence="0.879624857142857">
monday  |TYPE:day_name  |NORMALIZED:Monday
weeks  |TYPE:time_unit  |GRAN:week  |NUM:p
night  |TYPE:day_period_name  |NORMALIZED:NI
ago  |TYPE:temp_adv  |OP:-  |REF_TYPE:speaker
last  |TYPE:temp_mod  |OP:-  |REF_TYPE:speaker
since  |TYPE:temp_signal  |NORMALIZED:BEGIN
early  |TYPE:mod  |NORMALIZED:START
</equation>
<figureCaption confidence="0.993734">
Figure 2: Sample lexicon entries
</figureCaption>
<bodyText confidence="0.999977">
names, numerals) and then gathering more func-
tional entries (temporal adverbs, modifiers, etc.) by
running test rules on large corpora. It turned out that,
by using a parallel lexicon structure, we could re-
duce the cross-lingual re-arrangement of extraction
rules for the Spanish grammar, minimizing the work
cost to only 2 days, excluding fine tuning.
</bodyText>
<subsectionHeader confidence="0.919035">
4.2 Normalization
</subsectionHeader>
<bodyText confidence="0.999967764705882">
Normalization is a fully language-independent pro-
cess, working with calendar representations of tem-
poral expressions4 built out of the output feature
structures from the Recognition phase. It comprises
two sub-processes:
Anchor selection. First, anchor selection deter-
mines and maintains a reference time for relative
timex resolution, starting by using the Article Cre-
ation Date and updating it along the resolution pro-
cess according to a simple search heuristic: select
the closest preceding resolved timex with a compat-
ible level of granularity. We experimented with two
alternative settings for this, one restricting the search
to timexes within the same sentence, the other span-
ning over the whole article text: we noticed a sys-
tematic gain in normalization accuracy with the for-
mer setting and we used it for Task A.
</bodyText>
<footnote confidence="0.95522">
4The normalization is entirely implemented in Java code.
</footnote>
<page confidence="0.998133">
60
</page>
<bodyText confidence="0.999728636363636">
Timex-Event mapping. For certain timex
classes5 we need to resort to Tense information
from event-referring verb phrases in order to dis-
ambiguate between future and past interpretation.
For this purpose, a simple, syntax-free heuristic is
implemented to compute a mapping from each time
expression onto the event it modifies, which just
uses a weighted token distance metric, promoting
events preceding the timex over those following it.
Finally, calendar arithmetic is used to resolve and
normalize the value of relative timexes.
</bodyText>
<sectionHeader confidence="0.983359" genericHeader="method">
5 Results6
</sectionHeader>
<subsectionHeader confidence="0.996408">
5.1 Temporal Expression Extraction
</subsectionHeader>
<bodyText confidence="0.996440523809524">
For English, our system scored in the middle range
over all participant systems on relaxed match F1
measure. Strict match figures are not indicative: in-
deed, temporal signals (like on in on Friday) were
systematically included in the extracted extent, con-
trary to the TIMEX3 tag specification, because this
is required by finite-state parsing of the IE system
with which FSS-TimEx was integrated.
Compared to the best performing system (BestEN
in Table1), our approach mainly suffered from rela-
tively low recall. Although such a rate of false neg-
atives can be expected from a rule-based approach,
in our case it was mostly due to two main “bugs” in
the normalization code: first, in the process of tun-
ing system output types to TimeML, we erroneously
discarded date expressions introduced by temporal
signals, like in from now; secondly, we do not nor-
malize single adverbial expressions (currently), al-
though they are detected by grammar rules.
We outperformed in Precision the best F1 system.
Many false positives were all coming from a single
article, where the word season in flu season was sys-
tematically annotated as an event in the gold stan-
dard. This kind of context-based inference seems to
be out of reach for our rule-based, local parsing ap-
proach.
The major flaw in porting the system to Span-
ish language was a 28% Recall drop. Main types
5E.g. what we refer to as relativeTime or
relativeOffset, like on Thursday and this weekend, re-
spectively.
6Results were obtained in 1.89 and 1.97 seconds of com-
putation time respectively for English and Spanish data, on an
Intel Core i3 M380 2.53GHz processor.
of false negatives included fuzzy expressions (e.g.
hace tiempo), and compositional expressions.
Performance in timex classification and normal-
ization still falls behind top scoring systems. Finite-
state techniques can only parse local constructions,
greedily consuming as long text spans as possible:
therefore we systematically miss clausal relations
like in: The day before Raymond Roth was pulled
where we wrongly parsed a fully specified, relative
timex The day before. Similar cases resulted at the
same time in incorrect Type assignment, like in
Two years after his brain-cancer diagnosis where
we wrongly detect a Date type expression (Two
years after).
Inaccurate event Tense attribute extraction
sometimes caused wrong timex Value normaliza-
tion. One noticeable source of such an error is re-
ported speech, which temporarily changes the dis-
course utterance time and that we do not attempt
to model in our anchor selection procedure. Inter-
estingly, we noticed that even in cases when both
timex-event mapping, and event Tense were cor-
rect,Value normalization was not. For example, in:
Northern Ireland’s World Cup qualifier with Russia
has been postponed until 15:00 GMT Saturday, one
can see that a shallow approach like ours, with no ac-
cess to lexico-semantic knowledge, cannot pick up
the implicit future tense interpretation of the event
verb.
</bodyText>
<subsectionHeader confidence="0.997661">
5.2 Event and Event Attribute Extraction
</subsectionHeader>
<bodyText confidence="0.999677117647059">
Results for Spanish (Table 2) show that a small set
of rules were sufficient to detect event verbal expres-
sions with high precision. The task was much harder
for English, where morphological derivation is less
often marked and given that we were not performing
any PoS disambiguation.
Our main aim for Task B exercise was evaluating
the performance of semi-automatic methods for verb
classification, and to see how much verb tense in-
formation could help normalizing time expressions.
Class attribute performance is rather poor, even
considering that 7% of false hits in English were due
to a bug in the MULTEXT lexicon causing the fre-
quent form said not to be annotated as REPORTING
event. A high rate of overlapping occurs among
verb classes, causing our attempt to “lexicalize” the
Class attribute, rather than trying to compute it
</bodyText>
<page confidence="0.997407">
61
</page>
<table confidence="0.999885571428571">
Recognition Normalization
Relaxed Strict Value Type
System F1 P R F1 P R F1 A F1 A
EN 0.85 0.90 0.80 0.49 0.52 0.46 0.58 0.68 0.69 0.81
BestEN 0.90 0.89 0.91 0.79 0.78 0.80 0.78 0.86 0.80 0.88
ES 0.65 0.86 0.52 0.49 0.65 0.39 0.50 0.77 0.62 0.95
BestES 0.90 0.96 0.84 0.85 0.90 0.80 0.85 0.94 0.87 0.97
</table>
<tableCaption confidence="0.997804">
Table 1: Performance of Temporal Expression Extraction and Normalization.
</tableCaption>
<table confidence="0.999874333333333">
Recognition Class Tense
System F1 P R F1 A F1 A
EN 0.65 0.63 0.67 0.43 0.66 0.39 0.60
BestEN 0.81 0.81 0.81 0.72 0.89 0.60 0.73
ES 0.58 0.90 0.42 0.26 0.45 0.49 0.84
BestES 0.89 0.92 0.86 0.85 0.96 0.87 0.98
</table>
<tableCaption confidence="0.999656">
Table 2: Performance of Event and Event Attribute Extraction.
</tableCaption>
<bodyText confidence="0.9991655">
from context features of verb instances, to be unfea-
sible. Tense attribute performance7 was too low to
draw any conclusion on its impact on the Normal-
ization task. However, for Spanish its accuracy (A
in Figure 2) was higher and yet this did not result in
increased timex Value scores8.
</bodyText>
<sectionHeader confidence="0.999233" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999975733333333">
The main positive outcome of our participation in
TempEval-3 was that we were able to build a system
with acceptable performance on Task A for Span-
ish, after a relatively quick adaptation from an ex-
isting English system. Recall was the bottleneck
of such an experiment, while precision figures did
not drop significantly, and Normalization accuracy
even increased for Spanish9, suggesting that a devel-
oper may be able to iteratively add language-specific
rules so as to reduce false negatives, without endan-
gering overall system precision.
A major flaw of our finite-state, local parsing ap-
proach is in recognizing event-anchored time ex-
pressions. In order to address this, our timex recog-
nition rules must be further tuned to the TimeML
</bodyText>
<footnote confidence="0.988821125">
7Tense figures are unofficial, as we did not manage to ex-
port this attribute value because of a bug in the submitted sys-
tem. However, we were able to reproduce the evaluation on a
fixed system.
8We do not have independent performance figures of the
timex-event mapping, although this mechanism was invariable
across the two languages.
9Due to low F1 for timex entity extraction.
</footnote>
<bodyText confidence="0.999835181818182">
standard in order to fully isolate temporal signals,
and event detection recall must be significantly in-
creased so as to cover event nominalizations. The
detection of event referring expressions according
to the general, context-independent definition in
TimeML is not our main research target, however
we plan to use statistical classification methods to
increase the performance on this task as this is a
prerequisite to achieve a reliable evaluation of our
event-timex mapping heuristic. Event Tense extrac-
tion should be increased with the same purpose.
</bodyText>
<sectionHeader confidence="0.99764" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999679666666667">
Many thanks to Maud Ehrmann for several useful
discussions on the ontology of temporal entities and
the TimeML standard.
</bodyText>
<sectionHeader confidence="0.999221" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99924275">
Tomaz Erjavec. 2004. MULTEXT -
East Morphosyntactic Specifications.
URL:http://nl.ijs.si/ME/V3/msd/html/.
Silja Huttunen, Roman Yangarber, and Ralph Grishman.
2002. Diversity of Scenarios in Information Extrac-
tion. Proceedings of the Third International Confer-
ence On Language Resources And Evaluation, Las
Palmas.
Matteo Negri. 2007. Dealing with Italian Temporal Ex-
pressions: The ITA-Chronos System. Proceedings of
EVALITA 2007, Workshop held in conjunction with
AI*IA 2007.
</reference>
<page confidence="0.980818">
62
</page>
<reference confidence="0.998922558139535">
Piskorski, Jakub. 2007. ExPRESS Extraction Pat-
tern Recognition Engine and Specification Suite. In
In Proceedings of the International Workshop Finite-
State Methods and Natural language Processing 2007
(FSMNLP2007), Postdam, Germany.
Piskorski, Jakub. 2008. CORLEONE Core Linguis-
tic Entity Online Extraction. Technical Report, EN
23393, Joint Research Center of the European Com-
mission, Ispra, Italy.
James Pustejovsky, Jos M. Castao, Robert Ingria, Roser
Sauri, Robert J. Gaizauskas, Andrea Setzer, Graham
Katz, and Dragomir R. Radev. 2003. TimeML: Ro-
bust Specification of Event and Temporal Expressions
in Text. In Mark T. Maybury, editor New Directions in
Question Answering, pages 2834. AAAI Press, 2003.
Pustejovsky, J., P. Hanks, R. Sauri, A. See, R.
Gaizauskas, A. Setzer, D. Radev, B. Sundheim, D.
Day, L. Ferro, et al. 2003. The TimeBank corpus.
In Corpus Linguisticsvolume 2003, 40.
Steinberger Ralf, Bruno Pouliquen &amp; Erik van der Goot.
2009. An introduction to the Europe Media Monitor
Family of Applications. In Fredric Gey, Noriko Kando
&amp; Jussi Karlgren (eds.): Information Access in a Mul-
tilingual World - Proceedings of the SIGIR 2009 Work-
shop (SIGIR-CLIR’2009), pp.1-8.
Tanev Hristo, Piskorski Jakub, Atkinson Martin.
2008. Real-Time News Event Extraction for
Global Crisis Monitoring. In Proceedings of NLDB
2008,2008:207218.
Hristo Tanev and Vanni Zavarella. in press. Multilin-
gual Learning and Population of Event Ontologies. A
Case Study for Social Media. In Paul Buitelaar and
Philipp Cimiano editors Towards the Multilingual Se-
mantic Web, Springer.
Naushad UzZaman, Hector Llorens, James F. Allen,
Leon Derczynski, Marc Verhagen, James Pustejovsky.
2012. TempEval-3: Evaluating Events, Time Expres-
sions, and Temporal Relations. arXiv:1206.5333v1.
Verhagen, M., R. Sauri, T. Caselli, and J. Pustejovsky
2010. SemEval-2010 task 13: TempEval-2. In Pro-
ceedings of the 5th International Workshop on Seman-
tic Evaluation, 5762, Association for Computational
Linguistics.
</reference>
<page confidence="0.999454">
63
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.493490">
<title confidence="0.985842">FSS-TimEx for TempEval-3: Extracting Temporal Information from Text</title>
<author confidence="0.996508">Vanni</author>
<affiliation confidence="0.9946535">Joint Research European Commission</affiliation>
<address confidence="0.965185">21027 Ispra,</address>
<email confidence="0.993994">@jrc.ec.europa.eu</email>
<author confidence="0.614582">Hristo</author>
<affiliation confidence="0.8918425">Joint Research European</affiliation>
<address confidence="0.934757">21027 Ispra,</address>
<email confidence="0.993374">@jrc.ec.europa.eu</email>
<abstract confidence="0.999442411764706">We describe FSS-TimEx, a module for the recognition and normalization of temporal expressions we submitted to Task A and B of the TempEval-3 challenge. FSS-TimEx was developed as part of a multilingual event extraction system, Nexus, which runs on top of the EMM news processing engine. It consists of finite-state rule cascades, using minimalistic text processing stages and simple heuristics to model the relations between events and temporal expressions. Although FSS-TimEx is already deployed within an IE application in the medical domain, we found it useful to customize its output to the TimeML standard in order to have an independent performance measure and guide further developments.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Tomaz Erjavec</author>
</authors>
<title>MULTEXT -East Morphosyntactic Specifications.</title>
<date>2004</date>
<contexts>
<context position="4015" citStr="Erjavec, 2004" startWordPosition="601" endWordPosition="602">Atlanta, Georgia, June 14-15, 2013. c�2013 Association for Computational Linguistics 2 System Modules The system makes use of cascades of finite-state grammar rules applied to the output of a set of shallow text processing modules. Text Processing Modules. These include tokenization, sentence splitting, domain-specific dictionary look-up and morphological analysis, which are all part of the CORLEONE (Core Linguistic Entity Online Extraction) engine (Piskorski, 2008). Morphological analysis purely consists of matching text tokens over full-form entries of a dictionary from the MULTEXT project (Erjavec, 2004), which encodes rich morphological features in a cross-lingual standard. Consequently, no PoS-tagging or parsing is performed upstream of the extraction grammars. Finite-State Grammar Engine. We use the ExPRESS finite-state grammar engine (Piskorski, 2007). Grammars in the ExPRESS formalism consist of cascades of pattern-action rules, whose lefthand side (LHS) are regular expressions over flat feature structures (FFS) and the right-hand side (RHS) consists of a list of FFS (see Figure 1 below for an example). Variable binding from LHS to RHS, as well as string processing and Boolean operators </context>
</contexts>
<marker>Erjavec, 2004</marker>
<rawString>Tomaz Erjavec. 2004. MULTEXT -East Morphosyntactic Specifications. URL:http://nl.ijs.si/ME/V3/msd/html/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Silja Huttunen</author>
<author>Roman Yangarber</author>
<author>Ralph Grishman</author>
</authors>
<title>Diversity of Scenarios in Information Extraction.</title>
<date>2002</date>
<booktitle>Proceedings of the Third International Conference On Language Resources And Evaluation,</booktitle>
<location>Las Palmas.</location>
<marker>Huttunen, Yangarber, Grishman, 2002</marker>
<rawString>Silja Huttunen, Roman Yangarber, and Ralph Grishman. 2002. Diversity of Scenarios in Information Extraction. Proceedings of the Third International Conference On Language Resources And Evaluation, Las Palmas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matteo Negri</author>
</authors>
<title>Dealing with Italian Temporal Expressions: The ITA-Chronos System.</title>
<date>2007</date>
<booktitle>Proceedings of EVALITA 2007, Workshop held in conjunction with AI*IA</booktitle>
<contexts>
<context position="9799" citStr="Negri, 2007" startWordPosition="1469" endWordPosition="1470"> converted into a TimeML type (Duration) during the Normalization phase. The temporal lexicon referenced by the grammar contains around 300 entries for the English language, classified into as many as 24 types, each described by a small attribute list. Sample entries from the English lexicon are listed in Figure 2. This lexicon structure (types and attributes) was applied as such to the Spanish language; lexicon population was manually done in one day of work, by first translating lexical triggers (e.g. day, month 3This architecture is very close to the one proposed by the ITA-Chronos system (Negri, 2007). monday |TYPE:day_name |NORMALIZED:Monday weeks |TYPE:time_unit |GRAN:week |NUM:p night |TYPE:day_period_name |NORMALIZED:NI ago |TYPE:temp_adv |OP:- |REF_TYPE:speaker last |TYPE:temp_mod |OP:- |REF_TYPE:speaker since |TYPE:temp_signal |NORMALIZED:BEGIN early |TYPE:mod |NORMALIZED:START Figure 2: Sample lexicon entries names, numerals) and then gathering more functional entries (temporal adverbs, modifiers, etc.) by running test rules on large corpora. It turned out that, by using a parallel lexicon structure, we could reduce the cross-lingual re-arrangement of extraction rules for the Spanis</context>
</contexts>
<marker>Negri, 2007</marker>
<rawString>Matteo Negri. 2007. Dealing with Italian Temporal Expressions: The ITA-Chronos System. Proceedings of EVALITA 2007, Workshop held in conjunction with AI*IA 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jakub Piskorski</author>
</authors>
<title>ExPRESS Extraction Pattern Recognition Engine and Specification Suite. In</title>
<date>2007</date>
<booktitle>In Proceedings of the International Workshop FiniteState Methods and Natural language Processing</booktitle>
<location>Postdam, Germany.</location>
<contexts>
<context position="4271" citStr="Piskorski, 2007" startWordPosition="636" endWordPosition="637">s. These include tokenization, sentence splitting, domain-specific dictionary look-up and morphological analysis, which are all part of the CORLEONE (Core Linguistic Entity Online Extraction) engine (Piskorski, 2008). Morphological analysis purely consists of matching text tokens over full-form entries of a dictionary from the MULTEXT project (Erjavec, 2004), which encodes rich morphological features in a cross-lingual standard. Consequently, no PoS-tagging or parsing is performed upstream of the extraction grammars. Finite-State Grammar Engine. We use the ExPRESS finite-state grammar engine (Piskorski, 2007). Grammars in the ExPRESS formalism consist of cascades of pattern-action rules, whose lefthand side (LHS) are regular expressions over flat feature structures (FFS) and the right-hand side (RHS) consists of a list of FFS (see Figure 1 below for an example). Variable binding from LHS to RHS, as well as string processing and Boolean operators on the RHS, allow to impose relatively complex constraints in the form of Boolean-valued predicates. Weakly-supervised Learning of Lexical Resources. In order to determine the Class feature for the event extraction task, we experimented with using a langua</context>
</contexts>
<marker>Piskorski, 2007</marker>
<rawString>Piskorski, Jakub. 2007. ExPRESS Extraction Pattern Recognition Engine and Specification Suite. In In Proceedings of the International Workshop FiniteState Methods and Natural language Processing 2007 (FSMNLP2007), Postdam, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jakub Piskorski</author>
</authors>
<title>CORLEONE Core Linguistic Entity Online Extraction.</title>
<date>2008</date>
<booktitle>Joint Research Center of the European Commission,</booktitle>
<tech>Technical Report, EN 23393,</tech>
<location>Ispra, Italy.</location>
<contexts>
<context position="3871" citStr="Piskorski, 2008" startWordPosition="580" endWordPosition="581">rence on Lexical and Computational Semantics (*SEM), Volume 2: Seventh International Workshop on Semantic Evaluation (SemEval 2013), pages 58–63, Atlanta, Georgia, June 14-15, 2013. c�2013 Association for Computational Linguistics 2 System Modules The system makes use of cascades of finite-state grammar rules applied to the output of a set of shallow text processing modules. Text Processing Modules. These include tokenization, sentence splitting, domain-specific dictionary look-up and morphological analysis, which are all part of the CORLEONE (Core Linguistic Entity Online Extraction) engine (Piskorski, 2008). Morphological analysis purely consists of matching text tokens over full-form entries of a dictionary from the MULTEXT project (Erjavec, 2004), which encodes rich morphological features in a cross-lingual standard. Consequently, no PoS-tagging or parsing is performed upstream of the extraction grammars. Finite-State Grammar Engine. We use the ExPRESS finite-state grammar engine (Piskorski, 2007). Grammars in the ExPRESS formalism consist of cascades of pattern-action rules, whose lefthand side (LHS) are regular expressions over flat feature structures (FFS) and the right-hand side (RHS) cons</context>
</contexts>
<marker>Piskorski, 2008</marker>
<rawString>Piskorski, Jakub. 2008. CORLEONE Core Linguistic Entity Online Extraction. Technical Report, EN 23393, Joint Research Center of the European Commission, Ispra, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
<author>Jos M Castao</author>
<author>Robert Ingria</author>
<author>Roser Sauri</author>
<author>Robert J Gaizauskas</author>
<author>Andrea Setzer</author>
<author>Graham Katz</author>
<author>Dragomir R Radev</author>
</authors>
<date>2003</date>
<booktitle>TimeML: Robust Specification of Event and Temporal Expressions in Text. In Mark T. Maybury, editor New Directions in Question Answering,</booktitle>
<pages>2834</pages>
<publisher>AAAI Press,</publisher>
<contexts>
<context position="6324" citStr="Pustejovsky et al., 2003" startWordPosition="963" endWordPosition="966"> necessarily perform low in recall given the general, domain-independent definition of events in Task B. Instead, we tentatively used a small set of language-dependent finite-state rules to model verb phrase structure. Rules take as input MULTEXT morphological tokens and detect verb phrases along with a number of VP features, including Tense, which is used by the temporal normalizer to ground event modifying temporal expressions (see 4.2). Class attribute was encoded in the morphological dictionary by using the output of the machine learning method sketched above: for each TimeML Event Class (Pustejovsky et al., 2003), we provided seed verb forms for all of its sub-classes, performed multi-class learning, and used the main Class label to annotate the union of output forms in the lexicon, after some manual cleaning. The OCCURRENCE class was used as the default Class value for event verb forms, and it was overridden whenever a more specific event Class value was present2. We do not cover event nominal forms, as after some tests event referring and non-event referring noun classes appeared too difficult to tell apart by machine learning methods. Consequently, we expect system recall in Task B to be heavily li</context>
</contexts>
<marker>Pustejovsky, Castao, Ingria, Sauri, Gaizauskas, Setzer, Katz, Radev, 2003</marker>
<rawString>James Pustejovsky, Jos M. Castao, Robert Ingria, Roser Sauri, Robert J. Gaizauskas, Andrea Setzer, Graham Katz, and Dragomir R. Radev. 2003. TimeML: Robust Specification of Event and Temporal Expressions in Text. In Mark T. Maybury, editor New Directions in Question Answering, pages 2834. AAAI Press, 2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
<author>P Hanks</author>
<author>R Sauri</author>
<author>A See</author>
<author>R Gaizauskas</author>
<author>A Setzer</author>
<author>D Radev</author>
<author>B Sundheim</author>
<author>D Day</author>
<author>L Ferro</author>
</authors>
<title>The TimeBank corpus.</title>
<date>2003</date>
<booktitle>In Corpus Linguisticsvolume</booktitle>
<pages>40</pages>
<contexts>
<context position="6324" citStr="Pustejovsky et al., 2003" startWordPosition="963" endWordPosition="966"> necessarily perform low in recall given the general, domain-independent definition of events in Task B. Instead, we tentatively used a small set of language-dependent finite-state rules to model verb phrase structure. Rules take as input MULTEXT morphological tokens and detect verb phrases along with a number of VP features, including Tense, which is used by the temporal normalizer to ground event modifying temporal expressions (see 4.2). Class attribute was encoded in the morphological dictionary by using the output of the machine learning method sketched above: for each TimeML Event Class (Pustejovsky et al., 2003), we provided seed verb forms for all of its sub-classes, performed multi-class learning, and used the main Class label to annotate the union of output forms in the lexicon, after some manual cleaning. The OCCURRENCE class was used as the default Class value for event verb forms, and it was overridden whenever a more specific event Class value was present2. We do not cover event nominal forms, as after some tests event referring and non-event referring noun classes appeared too difficult to tell apart by machine learning methods. Consequently, we expect system recall in Task B to be heavily li</context>
</contexts>
<marker>Pustejovsky, Hanks, Sauri, See, Gaizauskas, Setzer, Radev, Sundheim, Day, Ferro, 2003</marker>
<rawString>Pustejovsky, J., P. Hanks, R. Sauri, A. See, R. Gaizauskas, A. Setzer, D. Radev, B. Sundheim, D. Day, L. Ferro, et al. 2003. The TimeBank corpus. In Corpus Linguisticsvolume 2003, 40.</rawString>
</citation>
<citation valid="true">
<authors>
<author>der Goot</author>
</authors>
<title>An introduction to the Europe Media Monitor Family of Applications.</title>
<date>2009</date>
<booktitle>In Fredric Gey, Noriko Kando &amp; Jussi Karlgren (eds.): Information Access in a Multilingual World - Proceedings of the SIGIR 2009 Workshop (SIGIR-CLIR’2009),</booktitle>
<pages>1--8</pages>
<editor>Steinberger Ralf, Bruno Pouliquen &amp; Erik van</editor>
<marker>der Goot, 2009</marker>
<rawString>Steinberger Ralf, Bruno Pouliquen &amp; Erik van der Goot. 2009. An introduction to the Europe Media Monitor Family of Applications. In Fredric Gey, Noriko Kando &amp; Jussi Karlgren (eds.): Information Access in a Multilingual World - Proceedings of the SIGIR 2009 Workshop (SIGIR-CLIR’2009), pp.1-8.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tanev Hristo</author>
<author>Piskorski Jakub</author>
<author>Atkinson Martin</author>
</authors>
<title>Real-Time News Event Extraction for Global Crisis Monitoring.</title>
<date>2008</date>
<booktitle>In Proceedings of NLDB</booktitle>
<pages>2008--2008</pages>
<marker>Hristo, Jakub, Martin, 2008</marker>
<rawString>Tanev Hristo, Piskorski Jakub, Atkinson Martin. 2008. Real-Time News Event Extraction for Global Crisis Monitoring. In Proceedings of NLDB 2008,2008:207218.</rawString>
</citation>
<citation valid="false">
<title>Hristo Tanev and Vanni Zavarella. in press. Multilingual Learning and Population of Event Ontologies. A Case Study for Social Media.</title>
<booktitle>In Paul Buitelaar and Philipp Cimiano editors Towards the Multilingual Semantic</booktitle>
<publisher>Web, Springer.</publisher>
<marker></marker>
<rawString>Hristo Tanev and Vanni Zavarella. in press. Multilingual Learning and Population of Event Ontologies. A Case Study for Social Media. In Paul Buitelaar and Philipp Cimiano editors Towards the Multilingual Semantic Web, Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Naushad UzZaman</author>
<author>Hector Llorens</author>
<author>James F Allen</author>
<author>Leon Derczynski</author>
<author>Marc Verhagen</author>
<author>James Pustejovsky</author>
</authors>
<title>TempEval-3: Evaluating Events, Time Expressions, and Temporal Relations.</title>
<date>2012</date>
<marker>UzZaman, Llorens, Allen, Derczynski, Verhagen, Pustejovsky, 2012</marker>
<rawString>Naushad UzZaman, Hector Llorens, James F. Allen, Leon Derczynski, Marc Verhagen, James Pustejovsky. 2012. TempEval-3: Evaluating Events, Time Expressions, and Temporal Relations. arXiv:1206.5333v1.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Verhagen</author>
<author>R Sauri</author>
<author>T Caselli</author>
<author>J Pustejovsky</author>
</authors>
<date>2010</date>
<booktitle>SemEval-2010 task 13: TempEval-2. In Proceedings of the 5th International Workshop on Semantic Evaluation, 5762, Association for Computational Linguistics.</booktitle>
<marker>Verhagen, Sauri, Caselli, Pustejovsky, 2010</marker>
<rawString>Verhagen, M., R. Sauri, T. Caselli, and J. Pustejovsky 2010. SemEval-2010 task 13: TempEval-2. In Proceedings of the 5th International Workshop on Semantic Evaluation, 5762, Association for Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>