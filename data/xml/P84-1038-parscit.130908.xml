<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000232">
<title confidence="0.507579">
A GENERAL COMPUTATIONAL MODEL FOR WORD-FORM RECOGNITION AND PRODUCTION
</title>
<author confidence="0.653631">
Kimmo Koskenniemi
</author>
<affiliation confidence="0.9788415">
Department of General Linguistics
Univeristy of Helsinki
</affiliation>
<address confidence="0.721701">
Hallituskatu 11-13, Helsinki 10, Finland
</address>
<sectionHeader confidence="0.622642" genericHeader="abstract">
ABSTRACT
</sectionHeader>
<bodyText confidence="0.99919875">
A language independent model for
recognition and production of word forms
is presented. This &amp;quot;two-level model&amp;quot; is
based on a new way of describing morpho-
logical alternations. All rules describing
the morphophonological variations are par-
allel and relatively independent of each
other. Individual rules are implemented as
finite state automata, as in an earlier
model due to Martin Kay and Ron Kaplan.
The two-level model has been implemented
as an operational computer programs in
several places. A number of operational
two-level descriptions have been written
or are in progress (Finnish, English,
Japanese, Rumanian, French, Swedish, Old
Church Slavonic, Greek, Lappish, Arabic,
Icelandic). The model is bidirectional and
it is capable of both analyzing and syn-
thesizing word-forms.
</bodyText>
<sectionHeader confidence="0.976666" genericHeader="keywords">
1. Generative phonology
</sectionHeader>
<bodyText confidence="0.999775857142857">
The formalism of generative phonology
has been widely used since its introduc-
tion in the 1960&apos;s. The morphology of any
language may be described with the formal-
ism by constructing a set of rewriting
rules. The rules start from an underlying
lexical representation, and transform it
step by step until the surface representa-
tion is reached.
The generative formalism is unidirec-
tional and it has proven to be computa-
tionally difficult, and therefore it has
found little use in practical morphologi-
cal programs.
</bodyText>
<sectionHeader confidence="0.978111" genericHeader="introduction">
2. The model of Kay and Kaplan
</sectionHeader>
<bodyText confidence="0.9927695">
Martin Kay and Ron Kaplan from Xerox
PARC noticed that each of the generative
rewriting rules can be represented by a
finite state automaton (or transducer)
(Kay 1982). Such an automaton would com-
pare two successive levels of the genera-
tive framework: the level immediately
The work described in this paper is a part
of the project 593 sponsored by the Acade-
my of Finland.
before application of the rule, and the
level after application of the rule. The
whole morphological grammar would then be
a cascade of such levels and automata:
</bodyText>
<equation confidence="0.955764285714286">
I
FSA 1
• • •
#
i
FSA n
I
</equation>
<bodyText confidence="0.999857833333333">
A cascade of automata is not opera-
tional as such, but Kay and Kaplan noted
that the automata could be merged into a
single, larger automaton by using the
techniques of automata theory. The large
automaton would be functionally identical
to the cascade, although single rules
could no more be identified within it. The
merged automaton would be both operation-
al, efficient and bidirectional. Given a
lexical representation, it would produce
the surface form, and, vice versa, given a
surface form it would guide lexical search
and locate the appropriate endings in the
lexicon.
In principle, the approach seems
ideal. But there is one vital problem: the
size of the merged automaton. Descriptions
of languages with complex morphology, such
as Finnish, seem to result in very large
merged automata. Although there are no
conclusive numerical estimates yet, it
seems probable that the size may grow
prohibitively large.
</bodyText>
<sectionHeader confidence="0.781888" genericHeader="method">
3. The two-level approach
</sectionHeader>
<bodyText confidence="0.94234">
My approach is computationally close
to that of Kay and Kaplan, but it is based
on a different morphological theory. In-
</bodyText>
<figure confidence="0.88728175">
lexical
representation
after 1st rule
after 2nd rule
after (n-1)st
rule
surface
representation
</figure>
<page confidence="0.993074">
178
</page>
<bodyText confidence="0.999889578947369">
stead of abstract phonology, I follow the
lines of concrete or natural morphology
(e.g. Linell, Jackendoff, Zager, Dressler,
Wurzel). Using this alternative orienta-
tion I arrive at a theory, where there is
no need for merging the automata in order
to reach an operational system.
The two-level model rejects abstract
lexical representations, i.e. there need
not always be a single invariant under-
lying representation. Some variations are
considered suppletion-like and are not
described with rules. The role of rules is
restricted to one-segment variations,
which are fairly natural. Alternations
which affect more than one segment, or
where the alternating segments are unre-
lated, are considered suppletion-like and
handled by the lexicon system.
</bodyText>
<sectionHeader confidence="0.985502" genericHeader="method">
4. Two-level rules
</sectionHeader>
<bodyText confidence="0.998007375">
There are only two representations in
the two-level model: the lexical represen-
tation and the surface representation. No
intermediate stages &amp;quot;exist&amp;quot;, even in prin-
ciple. To demonstrate this, we take an
example from Finnish morphology. The noun
lasi &apos;glass&apos; represents the productive and
most common type of nouns ending in i. The
lexical representation of the partitive
plural form consists of the stem lasi, the
plural morpheme I, and the partitive end-
ing A. In the two-level framework we write
the lexical representation lasiIA above
the surface form laseja:
Lexical
representation: lasiIA
Surface
representation: laseja
This configuration exhibits three morpho-
phonological variations:
a) Stem final i is realized as e in
front of typical plural forms, i.e. when I
follows on the lexical level, schemati-
cally:
</bodyText>
<equation confidence="0.834045">
(1)
</equation>
<bodyText confidence="0.9155388">
b) The plural I itself is realized as j
if it occurs between vowels on the sur-
face, schematically:
(2)
c) The partitive ending, like other end-
ings, agrees with the stem with respect to
vowel harmony. An archiphoneme A is used
instead of two distinct partitive endings.
It is realized as A or a according to the
harmonic value of the stem, schematically:
</bodyText>
<listItem confidence="0.594728">
(3)
back -V ...
</listItem>
<bodyText confidence="0.990525976190476">
The task of the two-level rules is to
specify how lexical and surface represen-
tations may correspond to each other. For
each lexical segment one must define the
various possible surface realizations. The
rule component should state the necessary
and sufficient conditions for each alter-
native. A rule formalism has been designed
for expressing such statements.
A typical two-level rule states that
a lexical segment may be realized in a
certain way if and only if a context con-
dition is met. The alternation (1) in the
above example can be expressed as the
following two-level rule:
&lt;=&gt; (1&apos;)
This rule states that a lexical i may be
realized as an e only if it is followed by
a plural I, and if we have a lexical i in
such an environment, it must be realized
as e (and as nothing else). Both state-
ments are needed: the former to exlude i-e
correspondences occurring elsewhere, and
the latter to prevent the default i-i
correspondence in this context.
Rule (1&apos;) referred to a lexical seg-
ment I, and it did not matter what was the
surface character corresponding to it
(thus the pair I-=). The following rule
governs the realization of I:
&lt;=&gt; = = (2&apos;)
j V V
This rule requires that the plural I must
be between vowels on the surface. Because
certain stem final vowels are realized as
zero in front of plural I, the generative
phonology orders the rule for plural I to
be applied after the rules for stem final
vowels. In the two-level framework there
is no such ordering. The rules only state
a static correspondence relation, and they
are nondirectional and parallel.
</bodyText>
<sectionHeader confidence="0.838983" genericHeader="method">
5. Rules as automata
</sectionHeader>
<bodyText confidence="0.998074538461538">
In the following we construct an
automaton which performs the checking
needed for the i-e alternation discussed
above. Instead of single characters, the
automaton accepts character pairs. This
automaton (and the automata for other
rules) must accept the following sequence
of pairs:
1-1, a-a, s-s, i-e, I-j, A-a
The task of the rule-automaton is to
permit the pair i-e if and only if the
plural I follows. The following automaton
with three states (1, 2, 3) performs this:
</bodyText>
<page confidence="0.925781">
179
</page>
<equation confidence="0.742373571428571">
i i I =
= e = =
2 3 1 1
2 3 0 1
3. 0 0 1 0
(1&amp;quot;)
&amp;quot;i - e in front of plural I&amp;quot; 3 4
</equation>
<figureCaption confidence="0.788979318181818">
State 1 is the initial state of the autom-
aton. If the automaton receives pairs
without lexical i it will remain in state
1 (the symbol =-= denotes &amp;quot;any other
pair&amp;quot;). Receiving a pair i-e causes a
transition to state 3. States 1 and 2 are
final states (denoted by double circles),
i.e. if the automaton is in one of them at
the end of the input, the automaton ac-
cepts the input. State 3 is, however, a
nonfinal state, and the automaton should
leave it before the input ends (or else
the input is rejected). If the next char-
acter pair has plural I as its lexical
character (which is denoted by I-=), the
automaton returns to state 1. Any other
pair will cause the input to be rejected
because there is no appropriate transition
arc. This part of the automaton accom-
plishes the &amp;quot;only if&amp;quot; part of the corre-
spondence: the pair i-e is allowed only if
it is followed by the plural I.
</figureCaption>
<bodyText confidence="0.998853285714286">
The state 2 is needed for the &amp;quot;if&amp;quot;
part. If a lexical i is followed by plural
I, we must have the correspondence i-e.
Thus, if we encounter a correspondence of
lexical i other than i-e (i-=) it must not
be followed by the plural I. Anything else
(=-=) will return the automaton to state
</bodyText>
<sectionHeader confidence="0.854155" genericHeader="method">
1.
</sectionHeader>
<bodyText confidence="0.99986055">
Each rule of a two-level description
model corresponds to a finite state autom-
aton as in the model of Kay and Kaplan. In
the two-level model the rules or the au-
tomata operate, however, in parallel in-
stead of being cascaded:
The rule-automata compare the two repre-
sentations, and a configuration must be
accepted by each of them in order to be
valid.
The two-level model (and the program)
operates in both directions: the same
description is utilized as such for pro-
ducing surface word-forms from lexical
representations, and for analyzing surface
forms.
As it stands now, two-level programs
read the rules as tabular automata, e.g.
the automaton (1&amp;quot;) is coded as:
This entry format is, in fact, More prac-
tical than the state transition diagrams.
The tabular representation remains more
readable even when there are half a dozen
states or more. It has also proven to be
quite feasible even for those who are lin-
guists rather than computer professionals.
Although it is feasible to write
morphological descriptions directly as
automata, this is far from ideal. The two-
level rule formalism is a much more read-
able way of documenting two-level descrip-
tions, even if hand compiled automata are
used in the actual implementation. A com-
piler which would accept rules directly in
some two-level rule formalism would be of
great value. The compiler could automati-
cally transform the rules into finite
state automata, and thus facilitate the
creation of new descriptions and further
development of existing ones.
</bodyText>
<sectionHeader confidence="0.85734" genericHeader="method">
5. Two-level lexicon system
</sectionHeader>
<bodyText confidence="0.9382632">
Single two-level rules are at least
as powerful as single rules of generative
phonology. The two-level rule component as
a whole (at least in practical descrip-
tions) appears to be less powerful, be-
cause of the lack of extrinsic rule order-
ing.
Variations affecting longer sequences
of phonemes, or where the relation between
the alternatives is phonologically other-
wise nonnatural, are described by giving
distinct lexical representations. General-
izations are not lost since insofar as the
variation pertains to many lexemes, the
alternatives are given as a minilexicon
referred to by all entries possessing the
same alternation.
The alternation in words of the fol-
lowing types are described using the mini-
lexicon method:
hevonen - hevosen &apos;horse&apos;
vapaus - vapautena
- vapauksia &apos;freedom&apos;
The lexical entries of such words gives
only the nonvarying part of the stem and
refers to a common alternation pattern
nen/S or s-t-ks/S:
hevo nen/S &amp;quot;Horse S&amp;quot;;
vapau s-t-ks/S &amp;quot;Freedom S&amp;quot;;
The minilexicons for the alternation pat-
</bodyText>
<table confidence="0.66035975">
Lexical
representation
Surface
representation
</table>
<page confidence="0.984235">
180
</page>
<bodyText confidence="0.992609666666667">
terns list the alternative lexical repre-
sentations and associate them with the
appropriate sets of endings:
</bodyText>
<equation confidence="0.9444286">
LEXICON nen/S nen SO &amp;quot;&amp;quot;;
SE S123
LEXICON s-t-ks/S SO &amp;quot;&amp;quot;;
TE S13 &amp;quot;&amp;quot;;
ksE S2
</equation>
<sectionHeader confidence="0.977652" genericHeader="method">
ACKNOWLEDGEMENTS
</sectionHeader>
<bodyText confidence="0.9989454">
My sincere thanks are due to my in-
structor, professor Fred Karlsson, and to
Martin Kay, Ron Kaplan and Lauri Karttunen
for fruitful ideas and for acquainting me
with their research.
</bodyText>
<sectionHeader confidence="0.9962985" genericHeader="method">
REFERENCES
6. Current status
</sectionHeader>
<bodyText confidence="0.99491">
The two-level program has been imple-
mented first in PASCAL language and is
running at least on the Burroughs B7800,
DEC-20, and large IBM systems. The program
is fully operational and reasonably fast
(about 0.05 CPU seconds per word although
hardly any effort has been spent to opti-
mize the execution speed). It could be
used run on 128 kB micro-computeres as
well. Lauri Karttunen and his students at
the University of Texas have implemented
the model in INTERLISP (Karttunen 1983,
Gajek &amp; al. 1983, Khan &amp; al. 1983). The
execution speed of their version is com-
parable to that of the PASCAL version. The
two-level model has also been rewritten in
Zetalisp (Ken Church at Bell) and in NIL
(Hank Bromley in Helsinki and UmeA).
The model has been tested by writing
a comprehensive description of Finnish
morphology covering all types of nominal
and verbal inflection including compound-
ing (Koskenniemi, 1983a,b). Karttunen and
his students have made two-level descrip-
tions of Japanese, Rumanian, English and
French (see articles in TLF 22). At the
University of Helsinki, two comprehensive
descriptions have been completed: one of
Swedish by 011i BlAberg (1984) and one of
Old Church Slavonic by Jouko Lindstedt
(forthcoming). Further work is in progress
in Helsinki for making descriptions for
Arabic (Jaakko Hameen-Anttila) and for
Modern Greek (Martti Nyman). The system is
also used the University of Oulu, where a
description for Lappish is in progress
(Pekka Sammallahti), in Uppsala, where a
more comprehensive French description is
in progress (Anette Ostling), and in Goth-
enburg.
The two-level model could be part of
any natural language processing system.
Especially the ability both to analyze and
to generate is useful. Systems dealing
with many languages, such as machine
translation systems, could benefit from
the uniform language-independent formal-
ism. The accuracy of information retrieval
systems can be enhanced by using the two-
level model for discarding hits which are
not true inflected forms of the search
key. The algorithm could be also used for
detecting spelling errors.
</bodyText>
<reference confidence="0.999637040816326">
Alam, Y., 1983. A Two-Level Morphological
Analysis of Japanese. In TLF 22.
BlAberg, O., 1984. Svensk bojningsmorfo-
log : en tillampning av tvaniv6-
modellen. Unpublished seminar paper.
Department of General Linguistics,
University of Helsinki.
Gajek, O., H. Beck, D. Elder, and G. Whit-
temore, 1983. KIMMO: LISP Implementa-
tion. In TLF 22.
Karlsson, F. &amp; Koskenniemi, K., forth-
coming. A process model of morphology
and lexicon. Folia Linguistica.
Karttunen, L., 1983. KIMMO: A General
Morphological Processor. In TLF 22.
Karttunen, L. &amp; Root, R. &amp; Uszkoreit, H.,
1981. TEXFIN: Morphological analysis
of Finnish by computer. A paper read
at 71st Meeting of the SASS, Albu-
querque, New Mexico.
Karttunen, L. &amp; Wittenburg, K., 1983. A
Two-Level Morphological Description
of English. In TLF 22.
Kay, M., 1982. When meta-rules are not
meta-rules. In Sparck-Jones &amp; Wilks
(eds.) Automatic natural language
processing. University of Essex, Cog-
nitive Studies Centre. (CSM-100
Khan, R., 1983. A Two-Level Morphological
Analysis of Rumanian. In TLF 22.
Khan, R. &amp; Liu, J. &amp; Ito, T. &amp; Shuldberg,
K., 1983. KIMMO User&apos;s Manual. In TLF
22
Koskenniemi, K., 1983a. Two-level Model
for Morphological Analysis. Proceed-
ings of IJCAI-83, pp. 683-685.
1983b. Two-level Morphology: A Gen-
eral Computational Model for Word-
Form Recognition and Production. Uni-
versity of Helsinki, Dept. of General
Linguistics, Publications, No. 11.
Lindstedt, J., forthcoming. A two-level
description of Old Church Slavonic
morphology. Scando-Slavica.
Lun, S., 1983. A Two-Level Analysis of
French. In TLF 22.
TLF: Texas Linguistic Forum. Department
of Linguistics, University of Texas,
Austin, TX 78712.
</reference>
<page confidence="0.998382">
181
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000005">
<title confidence="0.999678">A GENERAL COMPUTATIONAL MODEL FOR WORD-FORM RECOGNITION AND PRODUCTION</title>
<author confidence="0.999335">Kimmo Koskenniemi</author>
<affiliation confidence="0.9999155">Department of General Linguistics Univeristy of Helsinki</affiliation>
<address confidence="0.984498">Hallituskatu 11-13, Helsinki 10, Finland</address>
<abstract confidence="0.9865574173028">A language independent model for recognition and production of word forms is presented. This &amp;quot;two-level model&amp;quot; is based on a new way of describing morphological alternations. All rules describing the morphophonological variations are parallel and relatively independent of each other. Individual rules are implemented as finite state automata, as in an earlier model due to Martin Kay and Ron Kaplan. The two-level model has been implemented as an operational computer programs in several places. A number of operational two-level descriptions have been written or are in progress (Finnish, English, Japanese, Rumanian, French, Swedish, Old Church Slavonic, Greek, Lappish, Arabic, Icelandic). The model is bidirectional and it is capable of both analyzing and synthesizing word-forms. 1. Generative phonology The formalism of generative phonology has been widely used since its introduction in the 1960&apos;s. The morphology of any language may be described with the formalism by constructing a set of rewriting rules. The rules start from an underlying lexical representation, and transform it step by step until the surface representation is reached. The generative formalism is unidirectional and it has proven to be computationally difficult, and therefore it has found little use in practical morphological programs. The model of Kayand Kaplan Martin Kay and Ron Kaplan from Xerox PARC noticed that each of the generative rewriting rules can be represented by a finite state automaton (or transducer) (Kay 1982). Such an automaton would compare two successive levels of the generative framework: the level immediately The work described in this paper is a part of the project 593 sponsored by the Academy of Finland. before application of the rule, and the level after application of the rule. The whole morphological grammar would then be a cascade of such levels and automata: I FSA 1 • • • i FSA n I A cascade of automata is not operational as such, but Kay and Kaplan noted that the automata could be merged into a single, larger automaton by using the techniques of automata theory. The large automaton would be functionally identical to the cascade, although single rules could no more be identified within it. The merged automaton would be both operational, efficient and bidirectional. Given a lexical representation, it would produce the surface form, and, vice versa, given a surface form it would guide lexical search and locate the appropriate endings in the lexicon. In principle, the approach seems ideal. But there is one vital problem: the size of the merged automaton. Descriptions of languages with complex morphology, such as Finnish, seem to result in very large merged automata. Although there are no conclusive numerical estimates yet, it seems probable that the size may grow prohibitively large. The approach My approach is computationally close to that of Kay and Kaplan, but it is based a different morphological theory. Inlexical representation after 1st rule after 2nd rule after (n-1)st rule surface representation 178 stead of abstract phonology, I follow the lines of concrete or natural morphology (e.g. Linell, Jackendoff, Zager, Dressler, Wurzel). Using this alternative orientation I arrive at a theory, where there is no need for merging the automata in order to reach an operational system. The two-level model rejects abstract lexical representations, i.e. there need not always be a single invariant underlying representation. Some variations are considered suppletion-like and are not described with rules. The role of rules is to variations, which are fairly natural. Alternations which affect more than one segment, or where the alternating segments are unrelated, are considered suppletion-like and handled by the lexicon system. Two-levelrules There are only two representations in the two-level model: the lexical representation and the surface representation. No intermediate stages &amp;quot;exist&amp;quot;, even in principle. To demonstrate this, we take an example from Finnish morphology. The noun represents the productive and common type of nouns ending in lexical representation of the partitive form consists of the stem morpheme the partitive endthe two-level framework we write lexical representation surface form Lexical lasiIA Surface This configuration exhibits three morphophonological variations: Stem final realized e of typical plural forms, i.e. when follows on the lexical level, schematically: (1) The plural is realized as it between vowels on the surface, schematically: (2) c) The partitive ending, like other endings, agrees with the stem with respect to harmony. An archiphoneme used instead of two distinct partitive endings. is realized as A or to the harmonic value of the stem, schematically: (3) back -V ... The task of the two-level rules is to specify how lexical and surface representations may correspond to each other. For lexical segment must define the possible surface The rule component should state the necessary and sufficient conditions for each alterrule formalism has designed for expressing such statements. A typical two-level rule states that a lexical segment may be realized in a certain way if and only if a context condition is met. The alternation (1) in the above example can be expressed as the following two-level rule: &lt;=&gt; (1&apos;) rule states that a lexical may as e onlyif it is followed by plural I, and if we have a lexical an it be realized as e (and as nothing else). Both statements are needed: the former to exlude i-e correspondences occurring elsewhere, and latter to prevent the default correspondence in this context. Rule (1&apos;) referred to a lexical segment I, and it did not matter what was the surface character corresponding to it the pair following rule governs the realization of I: &lt;=&gt; = = (2&apos;) j V V This rule requires that the plural I must be between vowels on the surface. Because certain stem final vowels are realized as zero in front of plural I, the generative orders the rule for plural be applied after the rules for stem final vowels. In the two-level framework there is no such ordering. The rules only state a static correspondence relation, and they nondirectionaland parallel. Rulesas In the following we construct an automaton which performs the checking needed for the i-e alternation discussed above. Instead of single characters, the automaton accepts character pairs. This automaton (and the automata for other rules) must accept the following sequence 1-1, a-a, s-s, i-e, I-j, A-a The task of the rule-automaton is to the pair if and only if the The following automaton three states 2, 3) this: 179 i i I = = e = = 2 3 1 1 2 3 0 1 3. 0 0 1 0 (1&amp;quot;) e in front of plural I&amp;quot; 3 the initial state of the automaton. If the automaton receives pairs lexical will remain in state (the =-= denotes &amp;quot;any other Receiving a pair a to state final states (denoted by double circles), i.e. if the automaton is in one of them at the end of the input, the automaton acthe input. State however, a nonfinal state, and the automaton should leave it before the input ends (or else the input is rejected). If the next charpair has plural its lexical (which is denoted by returns to state other pair will cause the input to be rejected because there is no appropriate transition arc. This part of the automaton accomplishes the &amp;quot;only if&amp;quot; part of the correthe pair allowed only if is followed by the plural state needed for the &amp;quot;if&amp;quot; If a lexical followed by plural must have the correspondence Thus, if we encounter a correspondence of than i-e (i-=) it must not followed by the plural else (=-=) will return the automaton to state 1. Each rule of a two-level description model corresponds to a finite state automaton as in the model of Kay and Kaplan. In the two-level model the rules or the automata operate, however, in parallel instead of being cascaded: The rule-automata compare the two representations, and a configuration must be accepted by each of them in order to be valid. The two-level model (and the program) operates in both directions: the same description is utilized as such for producing surface word-forms from lexical representations, and for analyzing surface forms. As it stands now, two-level programs read the rules as tabular automata, e.g. the automaton (1&amp;quot;) is coded as: entry format is, in fact, practhe state transition diagrams. The tabular representation remains more readable even when there are half a dozen states or more. It has also proven to be quite feasible even for those who are linguists rather than computer professionals. Although it is feasible to write morphological descriptions directly as automata, this is far from ideal. The twolevel rule formalism is a much more readable way of documenting two-level descriptions, even if hand compiled automata are used in the actual implementation. A compiler which would accept rules directly in some two-level rule formalism would be of great value. The compiler could automatically transform the rules into finite state automata, and thus facilitate the creation of new descriptions and further development of existing ones. lexicon system Single two-level rules are at least as powerful as single rules of generative phonology. The two-level rule component as a whole (at least in practical descriptions) appears to be less powerful, because of the lack of extrinsic rule ordering. Variations affecting longer sequences of phonemes, or where the relation between the alternatives is phonologically otherwise nonnatural, are described by giving distinct lexical representations. Generalizations are not lost since insofar as the variation pertains to many lexemes, the alternatives are given as a minilexicon referred to by all entries possessing the same alternation. The alternation in words of the following types are described using the minilexicon method: hevonen hevosen &apos;horse&apos; vapaus vapautena vapauksia &apos;freedom&apos; The lexical entries of such words gives only the nonvarying part of the stem and refers to a common alternation pattern nen/S or s-t-ks/S: hevo nen/S &amp;quot;Horse S&amp;quot;; vapau s-t-ks/S &amp;quot;Freedom S&amp;quot;; minilexicons for the alternation pat- Lexical representation Surface representation 180 terns list the alternative lexical representations and associate them with the appropriate sets of endings: LEXICON nen/S nen SO &amp;quot;&amp;quot;; SE S123 s-t-ks/S SO TE S13 &amp;quot;&amp;quot;; ksE S2 ACKNOWLEDGEMENTS My sincere thanks are due to my instructor, professor Fred Karlsson, and to Martin Kay, Ron Kaplan and Lauri Karttunen for fruitful ideas and for acquainting me with their research. REFERENCES status The two-level program has been implemented first in PASCAL language and is running at least on the Burroughs B7800, DEC-20, and large IBM systems. The program is fully operational and reasonably fast (about 0.05 CPU seconds per word although hardly any effort has been spent to optimize the execution speed). It could be used run on 128 kB micro-computeres as well. Lauri Karttunen and his students at the University of Texas have implemented the model in INTERLISP (Karttunen 1983, Gajek &amp; al. 1983, Khan &amp; al. 1983). The execution speed of their version is comparable to that of the PASCAL version. The two-level model has also been rewritten in Zetalisp (Ken Church at Bell) and in NIL (Hank Bromley in Helsinki and UmeA). The model has been tested by writing a comprehensive description of Finnish morphology covering all types of nominal and verbal inflection including compounding (Koskenniemi, 1983a,b). Karttunen and his students have made two-level descriptions of Japanese, Rumanian, English and French (see articles in TLF 22). At the University of Helsinki, two comprehensive descriptions have been completed: one of Swedish by 011i BlAberg (1984) and one of Old Church Slavonic by Jouko Lindstedt (forthcoming). Further work is in progress in Helsinki for making descriptions for Arabic (Jaakko Hameen-Anttila) and for Modern Greek (Martti Nyman). The system is also used the University of Oulu, where a description for Lappish is in progress (Pekka Sammallahti), in Uppsala, where a more comprehensive French description is in progress (Anette Ostling), and in Gothenburg. The two-level model could be part of any natural language processing system. Especially the ability both to analyze and to generate is useful. Systems dealing with many languages, such as machine translation systems, could benefit from the uniform language-independent formalism. The accuracy of information retrieval systems can be enhanced by using the twolevel model for discarding hits which are not true inflected forms of the search key. The algorithm could be also used for detecting spelling errors. Alam, Y., 1983. A Two-Level Morphological Analysis of Japanese. In TLF 22. BlAberg, O., 1984. Svensk bojningsmorfo- : en tillampning av seminar paper.</abstract>
<affiliation confidence="0.9996455">Department of General Linguistics, University of Helsinki.</affiliation>
<address confidence="0.7623775">Gajek, O., H. Beck, D. Elder, and G. Whittemore, 1983. KIMMO: LISP Implementa-</address>
<abstract confidence="0.70325125">tion. In TLF 22. Karlsson, F. &amp; Koskenniemi, K., forthcoming. A process model of morphology and lexicon. Folia Linguistica.</abstract>
<note confidence="0.594167875">Karttunen, L., 1983. KIMMO: A General Morphological Processor. In TLF 22. Karttunen, L. &amp; Root, R. &amp; Uszkoreit, H., 1981. TEXFIN: Morphological analysis of Finnish by computer. A paper read at 71st Meeting of the SASS, Albuquerque, New Mexico. Karttunen, L. &amp; Wittenburg, K., 1983. A Two-Level Morphological Description of English. In TLF 22. Kay, M., 1982. When meta-rules are not meta-rules. In Sparck-Jones &amp; Wilks (eds.) Automatic natural language processing. University of Essex, Cognitive Studies Centre. (CSM-100 Khan, R., 1983. A Two-Level Morphological Analysis of Rumanian. In TLF 22. Khan, R. &amp; Liu, J. &amp; Ito, T. &amp; Shuldberg, K., 1983. KIMMO User&apos;s Manual. In TLF 22 Koskenniemi, K., 1983a. Two-level Model for Morphological Analysis. Proceedings of IJCAI-83, pp. 683-685. 1983b. Two-level Morphology: A Gen-</note>
<affiliation confidence="0.868399333333333">eral Computational Model for Word- Form Recognition and Production. University of Helsinki, Dept. of General</affiliation>
<address confidence="0.364231">Linguistics, Publications, No. 11.</address>
<author confidence="0.256541">A two-level</author>
<affiliation confidence="0.5607035">description of Old Church Slavonic morphology. Scando-Slavica.</affiliation>
<address confidence="0.5455585">Lun, S., 1983. A Two-Level Analysis of French. In TLF 22.</address>
<affiliation confidence="0.6385635">TLF: Texas Linguistic Forum. Department of Linguistics, University of Texas,</affiliation>
<address confidence="0.611322">Austin, TX 78712.</address>
<intro confidence="0.466223">181</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Y Alam</author>
</authors>
<title>A Two-Level Morphological Analysis of Japanese. In</title>
<date>1983</date>
<journal>TLF</journal>
<volume>22</volume>
<marker>Alam, 1983</marker>
<rawString>Alam, Y., 1983. A Two-Level Morphological Analysis of Japanese. In TLF 22.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O BlAberg</author>
</authors>
<title>Svensk bojningsmorfolog : en tillampning av tvaniv6-modellen. Unpublished seminar paper.</title>
<date>1984</date>
<institution>Department of General Linguistics, University of Helsinki.</institution>
<contexts>
<context position="12701" citStr="BlAberg (1984)" startWordPosition="2123" endWordPosition="2124">ir version is comparable to that of the PASCAL version. The two-level model has also been rewritten in Zetalisp (Ken Church at Bell) and in NIL (Hank Bromley in Helsinki and UmeA). The model has been tested by writing a comprehensive description of Finnish morphology covering all types of nominal and verbal inflection including compounding (Koskenniemi, 1983a,b). Karttunen and his students have made two-level descriptions of Japanese, Rumanian, English and French (see articles in TLF 22). At the University of Helsinki, two comprehensive descriptions have been completed: one of Swedish by 011i BlAberg (1984) and one of Old Church Slavonic by Jouko Lindstedt (forthcoming). Further work is in progress in Helsinki for making descriptions for Arabic (Jaakko Hameen-Anttila) and for Modern Greek (Martti Nyman). The system is also used the University of Oulu, where a description for Lappish is in progress (Pekka Sammallahti), in Uppsala, where a more comprehensive French description is in progress (Anette Ostling), and in Gothenburg. The two-level model could be part of any natural language processing system. Especially the ability both to analyze and to generate is useful. Systems dealing with many lan</context>
</contexts>
<marker>BlAberg, 1984</marker>
<rawString>BlAberg, O., 1984. Svensk bojningsmorfolog : en tillampning av tvaniv6-modellen. Unpublished seminar paper. Department of General Linguistics, University of Helsinki.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Gajek</author>
<author>H Beck</author>
<author>D Elder</author>
<author>G Whittemore</author>
</authors>
<title>KIMMO: LISP Implementation.</title>
<date>1983</date>
<booktitle>In TLF 22.</booktitle>
<marker>Gajek, Beck, Elder, Whittemore, 1983</marker>
<rawString>Gajek, O., H. Beck, D. Elder, and G. Whittemore, 1983. KIMMO: LISP Implementation. In TLF 22.</rawString>
</citation>
<citation valid="false">
<authors>
<author>F Karlsson</author>
<author>K Koskenniemi</author>
<author>forthcoming</author>
</authors>
<title>A process model of morphology and lexicon. Folia Linguistica.</title>
<marker>Karlsson, Koskenniemi, forthcoming, </marker>
<rawString>Karlsson, F. &amp; Koskenniemi, K., forthcoming. A process model of morphology and lexicon. Folia Linguistica.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Karttunen</author>
</authors>
<title>KIMMO: A General Morphological Processor.</title>
<date>1983</date>
<booktitle>In TLF 22.</booktitle>
<contexts>
<context position="12023" citStr="Karttunen 1983" startWordPosition="2014" endWordPosition="2015">rtin Kay, Ron Kaplan and Lauri Karttunen for fruitful ideas and for acquainting me with their research. REFERENCES 6. Current status The two-level program has been implemented first in PASCAL language and is running at least on the Burroughs B7800, DEC-20, and large IBM systems. The program is fully operational and reasonably fast (about 0.05 CPU seconds per word although hardly any effort has been spent to optimize the execution speed). It could be used run on 128 kB micro-computeres as well. Lauri Karttunen and his students at the University of Texas have implemented the model in INTERLISP (Karttunen 1983, Gajek &amp; al. 1983, Khan &amp; al. 1983). The execution speed of their version is comparable to that of the PASCAL version. The two-level model has also been rewritten in Zetalisp (Ken Church at Bell) and in NIL (Hank Bromley in Helsinki and UmeA). The model has been tested by writing a comprehensive description of Finnish morphology covering all types of nominal and verbal inflection including compounding (Koskenniemi, 1983a,b). Karttunen and his students have made two-level descriptions of Japanese, Rumanian, English and French (see articles in TLF 22). At the University of Helsinki, two compreh</context>
</contexts>
<marker>Karttunen, 1983</marker>
<rawString>Karttunen, L., 1983. KIMMO: A General Morphological Processor. In TLF 22.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Karttunen</author>
<author>R Root</author>
<author>H Uszkoreit</author>
</authors>
<title>TEXFIN: Morphological analysis of Finnish by computer. A paper read at 71st Meeting of the SASS,</title>
<date>1981</date>
<location>Albuquerque, New Mexico.</location>
<marker>Karttunen, Root, Uszkoreit, 1981</marker>
<rawString>Karttunen, L. &amp; Root, R. &amp; Uszkoreit, H., 1981. TEXFIN: Morphological analysis of Finnish by computer. A paper read at 71st Meeting of the SASS, Albuquerque, New Mexico.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Karttunen</author>
<author>K Wittenburg</author>
</authors>
<title>A Two-Level Morphological Description of English. In</title>
<date>1983</date>
<journal>TLF</journal>
<volume>22</volume>
<marker>Karttunen, Wittenburg, 1983</marker>
<rawString>Karttunen, L. &amp; Wittenburg, K., 1983. A Two-Level Morphological Description of English. In TLF 22.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kay</author>
</authors>
<title>When meta-rules are not meta-rules.</title>
<date>1982</date>
<booktitle>In Sparck-Jones &amp; Wilks (eds.) Automatic natural language processing. University of Essex, Cognitive Studies Centre. (CSM-100</booktitle>
<contexts>
<context position="1713" citStr="Kay 1982" startWordPosition="260" endWordPosition="261">he morphology of any language may be described with the formalism by constructing a set of rewriting rules. The rules start from an underlying lexical representation, and transform it step by step until the surface representation is reached. The generative formalism is unidirectional and it has proven to be computationally difficult, and therefore it has found little use in practical morphological programs. 2. The model of Kay and Kaplan Martin Kay and Ron Kaplan from Xerox PARC noticed that each of the generative rewriting rules can be represented by a finite state automaton (or transducer) (Kay 1982). Such an automaton would compare two successive levels of the generative framework: the level immediately The work described in this paper is a part of the project 593 sponsored by the Academy of Finland. before application of the rule, and the level after application of the rule. The whole morphological grammar would then be a cascade of such levels and automata: I FSA 1 • • • # i FSA n I A cascade of automata is not operational as such, but Kay and Kaplan noted that the automata could be merged into a single, larger automaton by using the techniques of automata theory. The large automaton w</context>
</contexts>
<marker>Kay, 1982</marker>
<rawString>Kay, M., 1982. When meta-rules are not meta-rules. In Sparck-Jones &amp; Wilks (eds.) Automatic natural language processing. University of Essex, Cognitive Studies Centre. (CSM-100</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Khan</author>
</authors>
<title>A Two-Level Morphological Analysis of Rumanian. In</title>
<date>1983</date>
<journal>TLF</journal>
<volume>22</volume>
<marker>Khan, 1983</marker>
<rawString>Khan, R., 1983. A Two-Level Morphological Analysis of Rumanian. In TLF 22.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Khan</author>
<author>J Liu</author>
<author>T Ito</author>
<author>K Shuldberg</author>
</authors>
<date>1983</date>
<journal>KIMMO User&apos;s Manual. In TLF</journal>
<volume>22</volume>
<marker>Khan, Liu, Ito, Shuldberg, 1983</marker>
<rawString>Khan, R. &amp; Liu, J. &amp; Ito, T. &amp; Shuldberg, K., 1983. KIMMO User&apos;s Manual. In TLF 22</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Koskenniemi</author>
</authors>
<title>Two-level Model for Morphological Analysis.</title>
<date>1983</date>
<booktitle>Proceedings of IJCAI-83,</booktitle>
<pages>683--685</pages>
<contexts>
<context position="12447" citStr="Koskenniemi, 1983" startWordPosition="2085" endWordPosition="2086">he execution speed). It could be used run on 128 kB micro-computeres as well. Lauri Karttunen and his students at the University of Texas have implemented the model in INTERLISP (Karttunen 1983, Gajek &amp; al. 1983, Khan &amp; al. 1983). The execution speed of their version is comparable to that of the PASCAL version. The two-level model has also been rewritten in Zetalisp (Ken Church at Bell) and in NIL (Hank Bromley in Helsinki and UmeA). The model has been tested by writing a comprehensive description of Finnish morphology covering all types of nominal and verbal inflection including compounding (Koskenniemi, 1983a,b). Karttunen and his students have made two-level descriptions of Japanese, Rumanian, English and French (see articles in TLF 22). At the University of Helsinki, two comprehensive descriptions have been completed: one of Swedish by 011i BlAberg (1984) and one of Old Church Slavonic by Jouko Lindstedt (forthcoming). Further work is in progress in Helsinki for making descriptions for Arabic (Jaakko Hameen-Anttila) and for Modern Greek (Martti Nyman). The system is also used the University of Oulu, where a description for Lappish is in progress (Pekka Sammallahti), in Uppsala, where a more com</context>
</contexts>
<marker>Koskenniemi, 1983</marker>
<rawString>Koskenniemi, K., 1983a. Two-level Model for Morphological Analysis. Proceedings of IJCAI-83, pp. 683-685.</rawString>
</citation>
<citation valid="true">
<title>Two-level Morphology: A General Computational Model for WordForm Recognition and Production.</title>
<date>1983</date>
<volume>11</volume>
<publisher>Publications,</publisher>
<institution>University of Helsinki, Dept. of General Linguistics,</institution>
<marker>1983</marker>
<rawString>1983b. Two-level Morphology: A General Computational Model for WordForm Recognition and Production. University of Helsinki, Dept. of General Linguistics, Publications, No. 11.</rawString>
</citation>
<citation valid="false">
<authors>
<author>J Lindstedt</author>
<author>forthcoming</author>
</authors>
<title>A two-level description of Old Church Slavonic morphology.</title>
<journal>Scando-Slavica.</journal>
<marker>Lindstedt, forthcoming, </marker>
<rawString>Lindstedt, J., forthcoming. A two-level description of Old Church Slavonic morphology. Scando-Slavica.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Lun</author>
</authors>
<title>A Two-Level Analysis of French. In</title>
<date>1983</date>
<journal>TLF</journal>
<volume>22</volume>
<marker>Lun, 1983</marker>
<rawString>Lun, S., 1983. A Two-Level Analysis of French. In TLF 22.</rawString>
</citation>
<citation valid="false">
<pages>78712</pages>
<institution>TLF: Texas Linguistic Forum. Department of Linguistics, University of Texas,</institution>
<location>Austin, TX</location>
<marker></marker>
<rawString>TLF: Texas Linguistic Forum. Department of Linguistics, University of Texas, Austin, TX 78712.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>