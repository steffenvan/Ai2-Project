<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001600">
<note confidence="0.986495">
Proceedings of the Workshop on Effective Tools and Methodologies for Teaching
Natural Language Processing and Computational Linguistics, Philadelphia,
July 2002, pp. 39-45. Association for Computational Linguistics.
</note>
<bodyText confidence="0.999667157894737">
enhance their skills for employment in language-
related technology fields. As a result, the MS
program did not include any breadth require-
ments — students could concentrate their course
work on a particular application area. We de-
signed the MS curriculum in such a way that
students could graduate after one year of inten-
sive coursework, if desired, although the normal
(expected) pace was 1.5 to 2 years. In contrast,
the PhD degree was envisioned as preparation
for a career in academia or industrial research,
and included a breadth requirement as a way
to ensure well-rounded graduates. This breadth
requirement is defined in terms of sets of courses
called &amp;quot;Focus Areas&amp;quot;; these are called the Lin-
guistic Focus, Computer Science Focus, Learn-
ing/Statistical Focus, and Task Focus. Each
PhD student must take at least one course from
each of these Focus Areas.
</bodyText>
<subsectionHeader confidence="0.986494">
2.2 Initial Curriculum
</subsectionHeader>
<bodyText confidence="0.999823">
The LTI&apos;s first incoming class of students en-
tered in Fall of 1996. Based on the design goals
listed above, we created the set of core courses
shown in Figure 1. (Note that labs count for
1/2 course credit.) Figures 2 and 3 present the
initial set of degree requirements for the MS and
PhD, respectively.
</bodyText>
<subsectionHeader confidence="0.888269">
2.3 Initial Course Descriptions
</subsectionHeader>
<bodyText confidence="0.988586666666667">
We will very briefly describe here the main focus
of each of our initial courses; we list them in
numerical order:
</bodyText>
<listItem confidence="0.986906846153846">
• 11-711 Algorithms for NLP: An intro-
ductory graduate-level course on the com-
putational properties of natural languages
and the fundamental algorithms for pro-
cessing natural languages.
• 11-712 Laboratory in NLP: This lab is
intended to complement the 11-711 lecture
course by providing a chance for hands-
on, in-depth exploration of various NLP
paradigms.
• 11-713 Principles of Translation: Fo-
cuses on the principles and methodology
of accurate human translation, including
</listItem>
<table confidence="0.989315153846154">
Type/Number Name
Linguistic Focus: Algorithms for NLP
11-711 Grammar and Lexicon
11-721 Formal Semantics
11-723
CS Focus: Machine Learning
15-681 Algorithms
15-750 Artificial Intelligence
15-780
Learning Focus: Language and Statistics
11-761 Machine Learning
15-681 Neural Networks
15-88x
Task Focus: Machine Translation
11-731 Information Retrieval
11-741 Speech Recognition
11-751
Labs: Laboratory in NLP
11-712 Laboratory in MT
11-732 Laboratory in IR
11-742 Speech Laboratory
11-754
Other courses: Principles of Translation
11-713 Soft. Eng. for LT I
11-791 Soft. Eng. for LT II
11-792
</table>
<figureCaption confidence="0.996128">
Figure 1: Initial set of LTI courses
</figureCaption>
<bodyText confidence="0.8826225">
machine-aided translation, with practical
examples.
</bodyText>
<listItem confidence="0.9996069375">
• 11-721 Grammar and Lexicon: An in-
troductory graduate-level course on linguis-
tic data analysis and theory, focusing on
methodologies that are suitable for compu-
tational implementations. The course cov-
ers major syntactic and morphological phe-
nomena in a variety of languages. The em-
phasis is on examining both the diversity of
linguistic structures and the constraints on
variation across languages.
• 11-723 Formal Semantics: An introduc-
tory graduate-level course on formal lin-
guistic semantics: Given a syntactic analy-
sis of a natural language utterance, how can
one assign the correct meaning representa-
• Ten (10) senior or graduate courses
</listItem>
<bodyText confidence="0.5945486">
Eight (8) of the 10 must be LTJ core
courses
One (1) of the 10 can be directed re-
search
One (1) elective
</bodyText>
<figureCaption confidence="0.930256">
Figure 2: Initial LTJ MS requirements
</figureCaption>
<listItem confidence="0.9998785">
• Courses:
— Eight (8) LTJ graduate core courses
— At least one in each Focus Area
— At least two labs (count as 1/2 each)
• Proficiencies:
— Writing
— Presentation
— Programming
— Teaching
• Thesis Proposal and Defense
</listItem>
<figureCaption confidence="0.971096">
Figure 3: Initial LTJ PhD requirements
</figureCaption>
<bodyText confidence="0.902739">
tion to it, using a formal logical system?
</bodyText>
<listItem confidence="0.95801">
• 11-731 Machine Translation: An intro-
ductory graduate-level course surveying the
history, techniques, and research topics in
the field of Machine Translation.
• 11-732 Laboratory in MT: This lab is
intended to complement the 11-731 lecture
course by providing a chance for hands-
on, in-depth exploration of various MT
paradigms.
• 11-741 Information Retrieval: This
course studies the theory, design, and im-
plementation of text-based information sys-
tems.
• 11-742 Laboratory in IR: This lab is in-
tended to complement the 11-741 lecture
course by providing a chance for hands-on,
in-depth exploration of various IR research
topics.
• 11-751 Speech Recognition: This
course provides an introduction to the the-
oretical foundations, essential algorithms,
major approaches, experimental strategies
and current state-of-the-art systems in
speech recognition.
• 11-754 Speech Laboratory: This course
teaches participants how to implement a
complete spoken language system while
providing opportunities to explore research
topics of interest in the context of a func-
tioning system.
• 11-761 Language and Statistics: This
course introduces some of the central
themes and techniques that have emerged
in statistical methods for language tech-
nologies and natural language processing.
• 11-791/792 Software Engineering for
Language Technologies I/II: This two
course sequence combines classroom mate-
rial and assignments in the fundamentals of
software engineering (11-791) with a self-
paced, faculty-supervised directed project
(11-792). The two courses cover all ele-
ments of project design, implementation,
evaluation, and documentation.
• 15-681 Machine Learning: This is
the core Computer Science Department
(CSD) course concerned with the theory
and practice of computer programs that
automatically improve their performance
through experience. We cover topics such
as learning decision trees, neural network
learning, statistical learning methods, ge-
netic algorithms, Bayesian learning meth-
ods, explanation-based learning, and rein-
forcement learning.
• 15-750 Algorithms: This is the core CSD
graduate-level course on algorithm analysis
and design.
• 15-780 Artificial Intelligence: This is
the core CSD graduate-level course on arti-
ficial intelligence: The course will focus on
the AT algorithms and techniques to build a
full intelligent agent with cognition, action,
and perception.
• 15-88x Neural Networks: This is one
of a set of three rotating courses involving
different aspects of real neural systems from
a computer science perspective.
3 Evolution of the Curriculum
</listItem>
<bodyText confidence="0.978027571428571">
Having presented the initial design of our set of
courses and requirements, we will now describe
several significant changes to the LTI&apos;s curricu-
lum over its first seven years. These changes
have resulted in the current curriculum and re-
quirements, which are shown in Figures 4, 5, and
6.
</bodyText>
<subsectionHeader confidence="0.951708">
3.1 Optional Masters Thesis
</subsectionHeader>
<bodyText confidence="0.999980606060606">
The actual population of MS students that we
have acquired has differed in at least one signifi-
cant respect from that which we had envisioned.
As mentioned above, we had planned our MS de-
gree as a professional degree, with professionals
in the language technology field taking one or
two years to enhance their careers with a Mas-
ters degree.
However, the large majority of our MS stu-
dents are in fact academically-oriented, planning
to go on to a PhD, either here or elsewhere. One
concrete effect of this difference is that there
was student demand for a Masters Thesis, to
produce and document a tangible, individual re-
search effort, in order to enhance the students&apos;
applications to PhD programs.
Accordingly, we added a Masters Thesis op-
tion to our MS program. One concern we had
was to ensure that the Masters Thesis was more
significant than a one semester project, but not
as large in scope as a PhD thesis. We there-
fore structured it as a two course sequence: a
Directed Research course (typically in the Fall
of the second year) that should culminate in a
written proposal being approved by the Masters
Thesis committee, followed by a course called
&amp;quot;Masters Thesis&amp;quot; (11-929). The student selects
a committee consisting of three faculty mem-
bers, one of whom is typically the student&apos;s ad-
visor. Although the Masters Thesis is listed as
a course, it is more open-ended than a normal
course; the student revises the Masters Thesis
until the committee judges it to be finished.
</bodyText>
<sectionHeader confidence="0.5199965" genericHeader="abstract">
3.2 Changes to MS Degree
Requirements
</sectionHeader>
<bodyText confidence="0.999746125">
Other changes to the MS degree resulted from
new school-wide rules adopted within the School
of Computer Science (SCS). To ensure a consis-
tent level of achievement in a set of &amp;quot;core compe-
tencies&amp;quot;, each MS program in SCS was required
to ensure (via a set of required courses) that stu-
dents graduating from the program can demon-
strate a set of &amp;quot;core competencies&amp;quot;:
</bodyText>
<listItem confidence="0.9997095">
• Analytical Competency
• Requirements Competency
• Design Competency
• Implementation Competency
• Correctness Competency
• Extra-technical Competency
</listItem>
<bodyText confidence="0.987682238095238">
Following our principle of trying to leave the
MS program as unconstrained as possible, we
mapped these competencies2 into three essen-
tial requirements, as shown in Figure 5. &amp;quot;Algo-
rithms for NLP&amp;quot; and &amp;quot;Software Engineering for
IT 1&amp;quot; were already being taken by most of our
MS students, and between them accounted for
most of the core competencies. So all our MS
students must now take both of these courses.
In addition, there is a need to make certain the
MS student acquires some hands-on implemen-
tation experience; we satisfied this by requiring
either a lab course, &amp;quot;Software Engineering for IT
2&amp;quot; (where the design from &amp;quot;SE/IT 1&amp;quot; is imple-
mented), or a project-oriented Masters Thesis.
2 See the following URL for a detailed
draft definition of these Competencies:
http://www.lti.cs.cmu.edu/MS/scs-requirements.html
Finally, to ensure that some specific subject area
is understood in depth, there is a requirement
for one &amp;quot;Task Focus&amp;quot; course.
</bodyText>
<subsectionHeader confidence="0.998546">
3.3 Core course concept removed
</subsectionHeader>
<bodyText confidence="0.999979195121951">
As described above, and shown in Figures 1-
3, when the curriculum was initially designed,
there was a concept of a list of &amp;quot;LTI Core
Courses&amp;quot;. Students were required to select
courses from this list, which included relevant
courses in the Computer Science Department
(CSD) (courses with a 15-xxx number), and did
not include some LTI courses that were seen as
more elective or special-purpose in nature.
One concern driving this distinction was that
if the students were spread between too many
different courses, there would not be a large
enough student population in any one course
(this was especially important in the first sev-
eral years of the program). Another concern
was to ensure that our students took courses
that were really relevant to language technolo-
gies, but were also able to take relevant courses
in CSD. (While taking elective courses is a per-
fectly acceptable possibility, some students felt
that the required courses were already a suffi-
cient course load.)
Individual students would occasionally re-
quest that some course that they were interested
in be added to the list of core courses. This
would usually result in the Chair of the pro-
grams explaining the nature of the core course
list, and the possibility of taking the course in
question as an elective. But eventually the stu-
dents as a group raised the issue of whether the
distinction caused more problems than it solved.
The students were asked by the faculty to draft
a proposed modification, and in fact produced
two alternative proposals.
In the course of the ensuing discussion, a new
possibility emerged: simply discard the concept
of a core course. Given the increased size of the
LTI student body (currently about 50 students
total, of whom about 35 are taking classes3), the
minimum-class-size issue was no longer so crit-
ical. To ensure appropriate language technolo-
</bodyText>
<footnote confidence="0.7463715">
3Current class-taking students consist of 11 MS stu-
dents, 14 first-year PhDs, and 9 second-year PhDs.
</footnote>
<table confidence="0.999515272727273">
Type/Number Name
Masters Courses: Language Technologies
11-682
Linguistic Focus: Principles of Translation
11-713 Grammar and Lexicon
11-721 Formal Semantics
11-723
CS Focus: Algorithms for NLP
11-711 Soft. Eng. for IT I
11-791 Machine Learning
15-681 Algorithms
15-750 Art. Intelligence
15-780
Learning Focus: Language Sz Statistics
11-761 Machine Learning
15-681 Neural Networks
15-88x
Task Focus: Machine Translation
11-731 Information Retrieval
11-741 Speech Recognition
11-751 Speech: PPPS
11-752 Soft. Eng. for IT II
11-792
Labs: Laboratory in NLP
11-712 Laboratory in MT
11-732 Laboratory in IR
11-742 Speech Laboratory
11-754
Other courses: Dialogue Processing
11-716 LT for Computer-Aided
11-717 Language Learning
11-743 Adv. IR Seminar/Lab
11-929 Masters Thesis
</table>
<figureCaption confidence="0.936852">
Figure 4: Current set of LTI courses
</figureCaption>
<listItem confidence="0.998723142857143">
• Ten (10) senior or graduate courses
— Six (6) of the 10 must be LTI courses
— Two (2) of the 10 must be SCS courses
— One (1) of the 10 may be directed re-
search
— One (1) elective
• School-level MS requirements:
</listItem>
<bodyText confidence="0.962128666666667">
Both 11-711 and 11-791
Either lab, 11-792, or Thesis project
One Task Focus course
</bodyText>
<figureCaption confidence="0.641203">
Figure 5: Current LTI MS requirements
</figureCaption>
<listItem confidence="0.996943166666667">
• Courses:
Six (6) LTI graduate courses
* At least one in each Focus Area
* At least two labs (count as 1/2
each)
Two (2) SCS graduate courses
• Proficiencies:
— Writing
— Presentation
— Programming
— Teaching
• Thesis Proposal and Defense
</listItem>
<figureCaption confidence="0.991215">
Figure 6: Current LTI PhD requirements
</figureCaption>
<bodyText confidence="0.9998685">
gies focus, while allowing for relevant courses in
CSD (and other SCS departments), the new re-
quirement was for six (6) LTI courses and two
(2) SCS courses. The definition of an LTI course
is simply any course with a number in the LTI
(&amp;quot;11-xxx&amp;quot;), while the definition of an SCS course
is similarly a course in any department in the
SCS. (Thus the &amp;quot;SCS courses&amp;quot; could also be LTI
courses, if a student so chose.) Note that the
PhD Focus Area courses are still defined by a
list of specific courses4. This final change in re-
quirements resulted in the current requirements
for the Masters and PhD degrees, as shown in
Figures 5 and 6, respectively.
</bodyText>
<subsectionHeader confidence="0.960765">
3.4 Evolution of the Self-Paced Labs
</subsectionHeader>
<bodyText confidence="0.9999687">
The original concept of an LTI lab course was
a sequence of planned, well-structured exercises
to be undertaken by individual students work-
ing on their own. For example, the original
NLP Lab course included tasks such as: build-
ing a bottom-up chart parser; adding semantic
constraints to a syntactic unification grammar;
and writing a simple generation grammar. Such
structured courses have certain desirable prop-
erties — primarily, they are easy to administer
from semester to semester, and it is easier to
create a supportive infrastructure (software en-
vironments, tools, etc.) for well-defined content.
Nevertheless, there has been a recent trend to-
ward more flexible, less structured lab courses.
Many students find the structured approach less
appealing, especially when the exercises are ab-
stract and not related to solving a real-world
problem. In many cases, a structured approach
requires a pre-defined problem and a given par-
tial solution, which students find artificially lim-
iting. It was also felt that a certain amount of
group-oriented work would improve the realism
of the lab courses. Recent offerings of the lab
courses have included a &amp;quot;team project&amp;quot; option
— students may elect either the standard, struc-
tured exercises or an open-ended group project
(e.g., &amp;quot;build an elementary question-answering
system using available tools&amp;quot;). While the latter
option tends to stimulate creativity and gener-
</bodyText>
<footnote confidence="0.9124035">
4Careful readers may notice that several courses
changed Focus Areas in the intervening years.
</footnote>
<bodyText confidence="0.996062">
ate more enthusiasm among the students, the
instructor must take care to advise the students
appropriately, so that the nature and scope of
the project are realistically bounded.
</bodyText>
<subsectionHeader confidence="0.852183">
3.5 Current Curriculum
</subsectionHeader>
<bodyText confidence="0.88657065">
Figure 4 lists the current (Fall 2001/Spring
2002) set of LTI courses. (The figure omits a
few courses that may not be taught again.)
Figures 5 and 6 present the current require-
ments for the Masters and PhD degrees, respec-
tively. In addition to refinements to the gradu-
ate curriculum, we have added several courses:
• 11-682 Language Technologies: This
introductory course is also open to under-
graduates; it is intended as a &amp;quot;gateway&amp;quot; to
LTI for upperclass undergrads, and also for
LTI MS students without much LT back-
ground. The course will include specific
computational techniques for different LT
tasks, such as vector-spaces for IR, Web-
spidering for IR and text mining, Hidden-
Markoff-Models for speech, chart parsing
and so on. There is also a synthesis task,
such as combining parsing, generation and
disambiguation for MT.
</bodyText>
<listItem confidence="0.870988">
• 11-752 Speech: Phonetics, Prosody,
Perception and Synthesis: The goal
of this course is to give the student basic
knowledge from several different fields that
is necessary in order to pursue research in
automatic speech processing.
• 11-716 Dialogue Processing: Dialog
systems and processes are becoming an in-
creasingly vital area of interest both in re-
search and in practical applications. The
purpose of this course is to examine, in a
structured way, the literature in this area
as well as learn about ongoing work.
• 11-717 LT for Computer-Aided Lan-
guage Learning: This course studies the
</listItem>
<reference confidence="0.970516285714286">
design and implementation of CALL sys-
tems that use Language Technologies such
as Speech Synthesis and Recognition, Ma-
chine Translation, and Information Re-
trieval. (It serves primarily as part of a new
Masters in CALL offered jointly by LTI and
our Modern Languages department.)
• 11-743 Advanced IR Seminar/Lab:
This is a seminar that focuses on current
research in Information Retrieval. The sem-
inar covers recent research on subjects such
as retrieval models, text classification, in-
formation gathering, fact extraction, infor-
mation visualization, summarization, text
datamining, information filtering, collabo-
rative filtering, question answering systems,
and portable information systems.
• 11-929 Masters Thesis: This course pro-
vides a record in the student&apos;s transcript of
the Optional Masters Thesis, as described
above.
</reference>
<sectionHeader confidence="0.980982" genericHeader="introduction">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999865">
We have presented here the initial design and
subsequent evolution of the MS and PhD pro-
grams of the Language Technologies Institute at
Carnegie Mellon University. The main lesson to
be drawn is perhaps that listening to the con-
cerns of the program&apos;s students, engaging them
in frank discussions, and finding a reasonable
balance between their concerns and the concerns
of the faculty, has led to what we feel are defi-
nite improvements in the shape of the program.
We call the final set of figures our &amp;quot;current&amp;quot; pro-
gram to acknowledge the near certainty that fu-
ture changes to the curriculum will occur, based
on changing faculty concerns, student demands,
or external factors. We hope that sharing our
design process and evolutionary experience will
be helpful to those interested in designing pro-
grams with similar goals in other universities.
</bodyText>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.006864">
<title confidence="0.6047555">Proceedings of the Workshop on Effective Tools and Methodologies for Teaching Natural Language Processing and Computational Linguistics, Philadelphia,</title>
<abstract confidence="0.985386869565217">July 2002, pp. 39-45. Association for Computational Linguistics. enhance their skills for employment in languagerelated technology fields. As a result, the MS program did not include any breadth requirements — students could concentrate their course work on a particular application area. We designed the MS curriculum in such a way that students could graduate after one year of intensive coursework, if desired, although the normal (expected) pace was 1.5 to 2 years. In contrast, the PhD degree was envisioned as preparation for a career in academia or industrial research, and included a breadth requirement as a way to ensure well-rounded graduates. This breadth requirement is defined in terms of sets of courses called &amp;quot;Focus Areas&amp;quot;; these are called the Linguistic Focus, Computer Science Focus, Learning/Statistical Focus, and Task Focus. Each PhD student must take at least one course from each of these Focus Areas. 2.2 Initial Curriculum The LTI&apos;s first incoming class of students entered in Fall of 1996. Based on the design goals listed above, we created the set of core courses shown in Figure 1. (Note that labs count for 1/2 course credit.) Figures 2 and 3 present the initial set of degree requirements for the MS and PhD, respectively. 2.3 Initial Course Descriptions We will very briefly describe here the main focus of each of our initial courses; we list them in numerical order: 11-711 Algorithms for NLP: introductory graduate-level course on the computational properties of natural languages and the fundamental algorithms for processing natural languages. 11-712 Laboratory in NLP: lab is intended to complement the 11-711 lecture course by providing a chance for handson, in-depth exploration of various NLP paradigms. 11-713 Principles of Translation: Focuses on the principles and methodology accurate including Type/Number Name</abstract>
<note confidence="0.967908571428571">Linguistic Focus: 11-711 11-721 11-723 Algorithms for NLP Grammar and Lexicon Formal Semantics CS Focus: 15-681 15-750 15-780 Machine Learning Algorithms Artificial Intelligence Learning Focus: 11-761 15-681 15-88x Language and Statistics Machine Learning Neural Networks Task Focus: 11-731 11-741 11-751 Machine Translation Information Retrieval Speech Recognition Labs: 11-712 11-732 11-742 11-754 Laboratory in NLP Laboratory in MT Laboratory in IR Speech Laboratory Other courses: 11-713 11-791 11-792 Principles of Translation Soft. Eng. for LT I Soft. Eng. for LT II</note>
<abstract confidence="0.985148291666667">1: of LTI courses machine-aided translation, with practical examples. 11-721 Grammar and Lexicon: introductory graduate-level course on linguistic data analysis and theory, focusing on methodologies that are suitable for computational implementations. The course covers major syntactic and morphological phenomena in a variety of languages. The emphasis is on examining both the diversity of linguistic structures and the constraints on variation across languages. 11-723 Formal Semantics: introductory graduate-level course on formal linguistic semantics: Given a syntactic analysis of a natural language utterance, how can assign the correct meaning representa- • Ten (10) senior or graduate courses Eight (8) of the 10 must be LTJ core courses One (1) of the 10 can be directed research One (1) elective</abstract>
<note confidence="0.865024">2: MS requirements • Courses: — Eight (8) LTJ graduate core courses — At least one in each Focus Area — At least two labs (count as 1/2 each) • Proficiencies:</note>
<title confidence="0.875509">Writing — Presentation — Programming — Teaching</title>
<abstract confidence="0.971812285714286">Thesis Proposal and Defense 3: PhD requirements tion to it, using a formal logical system? 11-731 Machine Translation: introductory graduate-level course surveying the history, techniques, and research topics in the field of Machine Translation. 11-732 Laboratory in MT: lab is intended to complement the 11-731 lecture course by providing a chance for handson, in-depth exploration of various MT paradigms. 11-741 Information Retrieval: course studies the theory, design, and implementation of text-based information systems. 11-742 Laboratory in IR: lab is intended to complement the 11-741 lecture course by providing a chance for hands-on, in-depth exploration of various IR research topics.</abstract>
<intro confidence="0.65174">11-751 Speech Recognition:</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<title>design and implementation of CALL systems that use Language Technologies such as Speech Synthesis and Recognition, Machine Translation, and Information Retrieval. (It serves primarily as part of a new Masters in CALL offered jointly by LTI and our Modern Languages department.) • 11-743 Advanced IR Seminar/Lab: This is a seminar that focuses on current research in Information Retrieval. The seminar covers recent research on subjects such as retrieval models, text classification, information gathering, fact extraction, information visualization, summarization, text datamining, information filtering, collaborative filtering, question answering systems, and portable information systems.</title>
<marker></marker>
<rawString>design and implementation of CALL systems that use Language Technologies such as Speech Synthesis and Recognition, Machine Translation, and Information Retrieval. (It serves primarily as part of a new Masters in CALL offered jointly by LTI and our Modern Languages department.) • 11-743 Advanced IR Seminar/Lab: This is a seminar that focuses on current research in Information Retrieval. The seminar covers recent research on subjects such as retrieval models, text classification, information gathering, fact extraction, information visualization, summarization, text datamining, information filtering, collaborative filtering, question answering systems, and portable information systems.</rawString>
</citation>
<citation valid="false">
<title>Thesis: This course provides a record in the student&apos;s transcript of the Optional Masters Thesis, as described above.</title>
<marker></marker>
<rawString>• 11-929 Masters Thesis: This course provides a record in the student&apos;s transcript of the Optional Masters Thesis, as described above.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>