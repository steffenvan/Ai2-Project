<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001801">
<title confidence="0.969059">
UCH-UPV English–Spanish system for WMT10
</title>
<author confidence="0.924898">
Francisco Zamora-Martinez
</author>
<affiliation confidence="0.639268666666667">
Dep. de F´ısica, Matem´aticas y Computaci´on
Universidad CEU-Cardenal Herrera
Alfara del Patriarca (Valencia), Spain
</affiliation>
<email confidence="0.983344">
fzamora@dsic.upv.es
</email>
<note confidence="0.45129775">
Germ´an Sanchis-Trilles
Instituto Tecnol´ogico de Inform´atica
Universidad Polit´ecnica de Valencia
Valencia, Spain
</note>
<email confidence="0.993389">
gsanchis@dsic.upv.es
</email>
<sectionHeader confidence="0.993728" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999860666666667">
This paper describes the system developed
in collabaration between UCH and UPV
for the 2010 WMT. For this year’s work-
shop, we present a system for English-
Spanish translation. Output N-best lists
were rescored via a target Neural Network
Language Model, yielding improvements
in the final translation quality as measured
by BLEU and TER.
</bodyText>
<sectionHeader confidence="0.998768" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999016">
In Statistical Machine Translation (SMT), the goal
is to translate a sentence f from a given source lan-
guage into an equivalent sentence eˆ from a certain
target language. Such statement is typically for-
malised by means of the so-called log-linear mod-
els (Papineni et al., 1998; Och and Ney, 2002) as
follows:
</bodyText>
<equation confidence="0.998437666666667">
K
eˆ = argmax Akhk(f,e) (1)
e k=1
</equation>
<bodyText confidence="0.999976066666667">
where hk(f, e) is a score function representing
an important feature for the translation of f into
e, K is the number of models (or features) and
Ak are the weights of the log-linear combination.
Typically, the weights Ak are optimised during
the tuning stage with the use of a development
set. Such features typically include the target lan-
guage model p(e), which is one of the core com-
ponents of an SMT system. In fact, most of the
times it is assigned a relatively high weight in the
log-linear combination described above. Tradi-
tionally, language modelling techniques have been
classified into two main groups, the first one in-
cluding traditional grammars such as context-free
grammars, and the second one comprising more
statistical, corpus-based models, such as n-gram
models. In order to assign a probability to a given
word, such models rely on the assumption that
such probability depends on the previous history,
i.e. the n − 1 preceding words in the utterance.
Nowadays, n-gram models have become a “de
facto” standard for language modelling in state-of-
the-art SMT systems.
In the present work, we present a system which
follows a coherent and natural evolution of prob-
abilistic Language Models. Specifically, we pro-
pose the use of a continuous space language model
trained in the form of a Neural Network Language
Model (NN LM).
The use of continuous space representation of
language has been successfully applied in recent
NN approaches to language modelling (Bengio et
al., 2003; Schwenk and Gauvain, 2002; Castro-
Bleda and Prat, 2003; Schwenk et al., 2006).
However, the use of Neural Network Language
Models (NN LMs) (Bengio, 2008) in state-of-the-
art SMT systems is not so popular. The only com-
prehensive work refers to (Schwenk, 2010), where
the target LM is presented in the form of a fully-
connected Multilayer Perceptron.
The presented system combines a standard,
state-of-the-art SMT system with a NN LM via
log-linear combination and N-best output re-
scoring. We chose to participate in the English-
Spanish direction.
</bodyText>
<sectionHeader confidence="0.964266" genericHeader="method">
2 Neural Network Language Models
</sectionHeader>
<bodyText confidence="0.999491">
In SMT the most extended language models are
n-grams (Bahl et al., 1983; Jelinek, 1997; Bahl et
al., 1983). They compute the probability of each
word given the context of the n−1 previous words:
</bodyText>
<equation confidence="0.9992845">
p(s1 ... s|S|) � � |S |p(si|si−n+1 ... si−1) . (2)
i=1
</equation>
<bodyText confidence="0.995914">
where 5 is the sequence of words for which we
want compute the probability, and si E 5, from a
vocabulary Ω.
</bodyText>
<page confidence="0.969023">
207
</page>
<note confidence="0.451657">
Proceedings of the Joint 5th Workshop on Statistical Machine Translation and MetricsMATR, pages 207–211,
Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics
</note>
<bodyText confidence="0.99979188">
A NN LM is a statistical LM which follows
equation (2) as n-grams do, but where the proba-
bilities that appear in that expression are estimated
with a NN (Bengio et al., 2003; Castro-Bleda and
Prat, 2003; Schwenk, 2007; Bengio, 2008). The
model naturally fits under the probabilistic inter-
pretation of the outputs of the NNs: if a NN, in this
case a MLP, is trained as a classifier, the outputs
associated to each class are estimations of the pos-
terior probabilities of the defined classes (Bishop,
1995).
The training set for a LM is a sequence
s1s2 ... s|S |of words from a vocabulary Q. In or-
der to train a NN to predict the next word given
a history of length n − 1, each input word must
be encoded. A natural representation is a local en-
coding following a “1-of-|Q|” scheme. The prob-
lem of this encoding for tasks with large vocab-
ularies (as is typically the case) is the huge size
of the resulting NN. We have solved this prob-
lem following the ideas of (Bengio et al., 2003;
Schwenk, 2007), learning a distributed represen-
tation for each word. Figure 1 illustrates the archi-
tecture of the feed-forward NN used to estimate
the NN LM:
</bodyText>
<listItem confidence="0.719933833333333">
• The input is composed of words
si−n+1, ... , si−1 of equation (2). Each
word is represented using a local encoding.
• P is the projection layer of the input words,
formed by Pi−n+1, ... , Pi−1 subsets of pro-
jection units. The subset of projection units
Pj represents the distributed encoding of in-
put word sj. The weights of this projection
layer are linked, that is, the weights from
each local encoding of input word sj to the
corresponding subset of projection units Pj
are the same for all input words. After train-
ing, the codification layer is removed from
the network by pre-computing a table of size
|Q |which serves as a distributed encoding.
• H denotes the hidden layer.
• The output layer O has |Q |units, one for each
word of the vocabulary.
</listItem>
<bodyText confidence="0.9507588">
This n-gram NN LM predicts the posterior
probability of each word of the vocabulary given
the n − 1 previous words. A single forward pass
of the MLP gives p(w|si−n+1 ... si−1) for every
word w E Q.
</bodyText>
<figureCaption confidence="0.731398">
Figure 1: Architecture of the continuous space
NN LM during training. The input words are
</figureCaption>
<bodyText confidence="0.963662117647059">
si−n+1, ... , si−1 (in this example, the input words
are si−3, si−2, and si−1 for a 4-gram). I, P, H,
and O are the input, projection, hidden, and output
layer, respectively, of the MLP.
The major advantage of the connectionist ap-
proach is the automatic smoothing performed by
the neural network estimators. This smoothing is
done via a continuous space representation of the
input words. Learning the probability of n-grams,
together with their representation in a continous
space (Bengio et al., 2003), is an appropriate ap-
proximation for large vocabulary tasks. However,
one of the drawbacks of such approach is the high
computational cost entailed whenever the NN LM
is computed directly, with no simplification what-
soever. For this reason, in this paper we will be
restricting vocabulary size.
</bodyText>
<sectionHeader confidence="0.999604" genericHeader="method">
3 Experiments
</sectionHeader>
<subsectionHeader confidence="0.996311">
3.1 Baseline system
</subsectionHeader>
<bodyText confidence="0.994266545454546">
For building the baseline SMT system, we used
the open-source SMT toolkit Moses (Koehn et
al., 2007), in its standard setup. The decoder in-
cludes a log-linear model comprising a phrase-
based translation model, a language model, a lex-
icalised distortion model and word and phrase
penalties. The weights of the log-linear interpo-
lation were optimised by means of MERT (Och,
2003).
For the baseline LM, we computed a regular
n-gram LM with Kneser-Ney smoothing (Kneser
</bodyText>
<page confidence="0.992182">
208
</page>
<bodyText confidence="0.9998345">
and Ney, 1995) and interpolation by means of the
SRILM (Stolcke, 2002) toolkit. Specifically, we
trained a 6-gram LM on the larger Spanish corpora
available (i.e. UN, News-Shuffled and Europarl),
and a 5-gram LM on the News-Commentary cor-
pus. Once these LMs had been built, they were
finally interpolated so as to maximise the perplex-
ity of the News-Commentary test set of the 2008
shared task. This was done so according to pre-
liminary investigation.
</bodyText>
<subsectionHeader confidence="0.994291">
3.2 NN LM system architecture
</subsectionHeader>
<bodyText confidence="0.999991894736842">
The presented systems follow previous works
of (Schwenk et al., 2006; Khalilov et al., 2008;
Schwenk and Koehn, 2008; Schwenk, 2010)
where the use of a NN LM helps achieving better
performance in the final system.
The NN LM was incorporated to the baseline
system via log-linear combination, adding a new
feature to the output N-best list generated by the
baseline system (in this case N = 1000). Specif-
ically, the NN LM was used to compute the log-
probability of each sentence within the N-best list.
Then, the scores of such list were extended with
our new, NN LM-based feature. This being done,
we optimised the coefficients of the log-linear in-
terpolation by means of MERT, taking into ac-
count the newly introduced feature. Finally the
list was re-scored and the best hypothesis was
extracted and returned as final output. Figure 2
shows a diagram of the system structure.
</bodyText>
<subsectionHeader confidence="0.999015">
3.3 Experimental setup and results
</subsectionHeader>
<bodyText confidence="0.999889722222222">
NN LM was trained with the concatenation of the
News-shuffled and News-Commentary10 Span-
ish corpora. Other language resources were dis-
carded due to the large amount of computational
resources that would have been needed for train-
ing a NN LM with such material. Table 1 shows
some statistics of the corpora. In order to reduce
the complexity of the model, the vocabulary was
restricted to the 20K more frequent words in the
concatenation of news corpora. Using this re-
stricted vocabulary implies that 6.4% of the run-
ning words of the news-test2008 set, and 7.3% of
the running words within the official 2010 test set,
will be considered as unknown for our system. In
addition, the vocabulary includes a special token
for unknown words used for compute probabili-
ties when an unknown word appears, as described
in Equation 2.
</bodyText>
<tableCaption confidence="0.859002">
Table 1: Spanish corpora statistics. NC stands for
</tableCaption>
<table confidence="0.920948888888889">
News-Commentary and UN for United Nations,
while |Q |stands for vocabulary size, and M/K for
millions/thousands of elements.
Set # Lines # Words S2
NC 108K 2.96M 67K
News-Shuffled 3.86M 107M 512K
Europarl 1.82M 51M 172K
UN 6.22M 214M 411K
Total 3.96M 110M 521K
</table>
<bodyText confidence="0.999463487179487">
A 6-gram NN LM was trained for this task,
based in previous works (Khalilov et al., 2008).
The distributed encoding input layer consists of
640 units (128 for each word), the hidden layer
has 500 units, and the output layer has 20K units,
one for each word in the restricted vocabulary.
The total number of weights in the network was
10 342 003. The training procedure was conducted
by means of the stochastic back-propagation al-
gorithm with weight decay, with a replacement of
300K training samples and 200K validation sam-
ples in each training epoch. The training and vali-
dation sets were randomly extracted from the con-
catenation of news corpora. The training set con-
sisted of 102M words (3M sentences) and valida-
tion set 8M words (300K sentences). The network
needed 129 epochs for achieving convergence, re-
sulting in 38.7M and 25.8M training and valida-
tion samples respectively. For training the NN LM
we used the April toolkit (Espa˜na-Boquera et al.,
2007; Zamora-Martinez et al., 2009), which im-
plements a pattern recognition and neural net-
works toolkit. The perplexity achieved by the 6-
gram NN LM in the Spanish news-test08 devel-
opment set was 116, versus 94 obtained with a
standard 6-gram language model with interpola-
tion and Kneser-Ney smoothing (Kneser and Ney,
1995).
The number of sentences in the N-best list was
set to 1000 unique output sentences. Results can
be seen in Table 2. In order to assess the reliability
of such results, we computed pairwise improve-
ment intervals as described in (Koehn, 2004), by
means of bootstrapping with 1000 bootstrap itera-
tions and at a 95% confidence level. Such confi-
dence test reported the improvements to be statis-
tically significant.
Four more experiments have done in order to
study the influence of the N-best list size in the
</bodyText>
<page confidence="0.99853">
209
</page>
<figureCaption confidence="0.997633">
Figure 2: Architecture of the system.
</figureCaption>
<tableCaption confidence="0.99512">
Table 2: English-Spanish translation quality for
development and official test set. Results are given
in BLEU/TER.
</tableCaption>
<table confidence="0.999290666666667">
test08 (dev) test10 (test)
Baseline 24.8/60.0 26.7/55.1
NN LM 25.2/59.6 27.8/54.0
</table>
<tableCaption confidence="0.869203">
Table 3: Test set BLEU/TER performance for each
N-best list size.
</tableCaption>
<table confidence="0.999494333333333">
N-best list size BLEU TER
200 27.5 54.2
400 27.6 54.2
600 27.7 54.1
800 27.6 54.2
1000 27.8 54.0
</table>
<bodyText confidence="0.999896916666667">
performance achieved by the NN LM rescoring.
For each N-best list size (200, 400, 600 and 800)
the weights of the log-linear interpolation were op-
timised by means of MERT over the test08 set. Ta-
ble 3 shows the test results for each N-best list size
using the correspondent optimised weights. As it
can be seen, the size of the N-best list seems to
have an impact on the final translation quality pro-
duced. Although in this case the results are not
statistically significant for each size step, the final
difference (from 27.5 to 27.8) is already signifi-
cant.
</bodyText>
<sectionHeader confidence="0.998118" genericHeader="conclusions">
4 Conclusions
</sectionHeader>
<bodyText confidence="0.999901833333333">
In this paper, an improved SMT system by using a
NN LM was presented. Specifically, it has been
shown that the final translation quality, as mea-
sured by BLEU and TER, is improved over the
quality obtained with a state-of-the-art SMT sys-
tem. Such improvements, of 1.1 BLEU points,
were found to be statistically significant. The sys-
tem presented uses a neural network only for com-
puting the language model probabilities. As an
immediate future work, we intend to compute the
language model by means of a linear interpola-
tion of several neural networks. Another interest-
ing idea is to integrate the NN LM within the de-
coder itself, instead of performing a subsequent re-
scoring step. This can be done extending the ideas
presented in a previous work (Zamora-Martinez et
al., 2009), in which the evaluation of NN LM is
significantly sped-up.
</bodyText>
<sectionHeader confidence="0.997639" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999614833333333">
This paper was partially supported by the EC
(FEDER/FSE) and by the Spanish Government
(MICINN and MITyC) under the MIPRCV
“Consolider Ingenio 2010” program (CSD2007-
00018), iTrans2 (TIN2009-14511) project and the
erudito.com (TSI-020110-2009-439) project.
</bodyText>
<sectionHeader confidence="0.998797" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.983562125">
L. R. Bahl, F. Jelinek, and R. L. Mercer. 1983. A Max-
imum Likelihood Approach to Continuous Speech
Recognition. IEEE Trans. on Pat. Anal. and Mach.
Intel., 5(2):179–190.
Y. Bengio, R. Ducharme, P. Vincent, and C. Jauvin.
2003. A Neural Probabilistic Language Model.
Journal of Machine Learning Research, 3(2):1137–
1155.
</reference>
<page confidence="0.992772">
210
</page>
<reference confidence="0.999407671232877">
Y. Bengio. 2008. Neural net language models. Schol-
arpedia, 3(1):3881.
C. M. Bishop. 1995. Neural networks for pattern
recognition. Oxford University Press.
M.J. Castro-Bleda and F. Prat. 2003. New Directions
in Connectionist Language Modeling. In Computa-
tional Methods in Neural Modeling, volume 2686 of
LNCS, pages 598–605. Springer-Verlag.
S. Espa˜na-Boquera, F. Zamora-Martinez, M.J. Castro-
Bleda, and J. Gorbe-Moya. 2007. Efficient BP Al-
gorithms for General Feedforward Neural Networks.
In Bio-inspired Modeling of Cognitive Tasks, vol-
ume 4527 of LNCS, pages 327–336. Springer.
F. Jelinek. 1997. Statistical Methods for Speech
Recognition. Language, Speech, and Communica-
tion. The MIT Press.
M. Khalilov, J. A. R. Fonollosa, F. Zamora-Martinez,
M. J. Castro-Bleda, and S. Espa˜na-Boquera. 2008.
Neural network language models for translation with
limited data. In 20th International Conference on
Tools with Artificial Intelligence, ICTAI’08, pages
445–451, november.
R. Kneser and H. Ney. 1995. Improved backing-off
for m-gram language modeling. IEEE Int. Conf.
on Acoustics, Speech and Signal Processing, II:181–
184, May.
P. Koehn et al. 2007. Moses: Open Source Toolkit for
Statistical Machine Translation. In Proc. of the ACL
Demo and Poster Sessions, pages 177–180, Prague,
Czech Republic.
P. Koehn. 2004. Statistical significance tests for ma-
chine translation evaluation. In Proc. of EMNLP,
pages 388–395.
F. Och and H. Ney. 2002. Discriminative training
and maximum entropy models for statistical ma-
chine translation. In Proc. of ACL’02, pages 295–
302.
F.J. Och. 2003. Minimum Error Rate Training in Sta-
tistical Machine Translation. In Proc. of ACL, pages
160–167, Sapporo, Japan.
K. Papineni, S. Roukos, and T. Ward. 1998. Maxi-
mum likelihood and discriminative training of direct
translation models. In Proc. of ICASSP, pages 189–
192.
H. Schwenk and J. L. Gauvain. 2002. Connectionist
language modeling for large vocabulary continuous
speech recognition. In Proceedings of the Interna-
tional Conference on Acoustics, Speech, and Signal
Processing (ICASSP’02), pages 765–768, Orlando,
Florida (USA), May.
H. Schwenk and P. Koehn. 2008. Large and diverse
language models for statistical machine translation.
In International Joint Conference on Natural Lan-
guage Processing, pages 661–668.
H. Schwenk, D. D´echelotte, and J. L. Gauvain. 2006.
Continuous space language models for statistical
machine translation. In Proceedings of the COL-
ING/ACL 2006 Main Conference Poster Sessions,
pages 723–730.
H. Schwenk. 2007. Continuous space language mod-
els. Computer Speech and Language, 21(3):492–
518.
H. Schwenk. 2010. Continuous space language mod-
els for statistical machine translation. The Prague
Bulletin of Mathematical Linguistics, 93.
A. Stolcke. 2002. SRILM – an extensible language
modeling toolkit. In Proc. of ICSLP’02, pages 901–
904, September.
F. Zamora-Martinez, M.J. Castro-Bleda, and
S. Espa˜na-Boquera. 2009. Fast Evaluation of
Connectionist Language Models. In International
Work-Conference on Artificial Neural Networks,
volume 5517 of LNCS, pages 33–40. Springer.
</reference>
<page confidence="0.998786">
211
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.229750">
<title confidence="0.933852">UCH-UPV English–Spanish system for WMT10</title>
<author confidence="0.799422">Francisco</author>
<affiliation confidence="0.751673333333333">Dep. de F´ısica, Matem´aticas y Universidad CEU-Cardenal Alfara del Patriarca (Valencia),</affiliation>
<email confidence="0.936959">fzamora@dsic.upv.es</email>
<author confidence="0.905054">Germ´an</author>
<affiliation confidence="0.8878795">Instituto Tecnol´ogico de Universidad Polit´ecnica de</affiliation>
<address confidence="0.654478">Valencia,</address>
<email confidence="0.992684">gsanchis@dsic.upv.es</email>
<abstract confidence="0.9789772">This paper describes the system developed in collabaration between UCH and UPV for the 2010 WMT. For this year’s workshop, we present a system for Englishtranslation. Output lists were rescored via a target Neural Network Language Model, yielding improvements in the final translation quality as measured by BLEU and TER.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>L R Bahl</author>
<author>F Jelinek</author>
<author>R L Mercer</author>
</authors>
<title>A Maximum Likelihood Approach to Continuous Speech Recognition.</title>
<date>1983</date>
<journal>IEEE Trans. on Pat. Anal. and Mach. Intel.,</journal>
<volume>5</volume>
<issue>2</issue>
<contexts>
<context position="3186" citStr="Bahl et al., 1983" startWordPosition="502" endWordPosition="505">stroBleda and Prat, 2003; Schwenk et al., 2006). However, the use of Neural Network Language Models (NN LMs) (Bengio, 2008) in state-of-theart SMT systems is not so popular. The only comprehensive work refers to (Schwenk, 2010), where the target LM is presented in the form of a fullyconnected Multilayer Perceptron. The presented system combines a standard, state-of-the-art SMT system with a NN LM via log-linear combination and N-best output rescoring. We chose to participate in the EnglishSpanish direction. 2 Neural Network Language Models In SMT the most extended language models are n-grams (Bahl et al., 1983; Jelinek, 1997; Bahl et al., 1983). They compute the probability of each word given the context of the n−1 previous words: p(s1 ... s|S|) � � |S |p(si|si−n+1 ... si−1) . (2) i=1 where 5 is the sequence of words for which we want compute the probability, and si E 5, from a vocabulary Ω. 207 Proceedings of the Joint 5th Workshop on Statistical Machine Translation and MetricsMATR, pages 207–211, Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics A NN LM is a statistical LM which follows equation (2) as n-grams do, but where the probabilities that appear in that ex</context>
</contexts>
<marker>Bahl, Jelinek, Mercer, 1983</marker>
<rawString>L. R. Bahl, F. Jelinek, and R. L. Mercer. 1983. A Maximum Likelihood Approach to Continuous Speech Recognition. IEEE Trans. on Pat. Anal. and Mach. Intel., 5(2):179–190.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Bengio</author>
<author>R Ducharme</author>
<author>P Vincent</author>
<author>C Jauvin</author>
</authors>
<title>A Neural Probabilistic Language Model.</title>
<date>2003</date>
<journal>Journal of Machine Learning Research,</journal>
<volume>3</volume>
<issue>2</issue>
<pages>1155</pages>
<contexts>
<context position="2538" citStr="Bengio et al., 2003" startWordPosition="396" endWordPosition="399">such probability depends on the previous history, i.e. the n − 1 preceding words in the utterance. Nowadays, n-gram models have become a “de facto” standard for language modelling in state-ofthe-art SMT systems. In the present work, we present a system which follows a coherent and natural evolution of probabilistic Language Models. Specifically, we propose the use of a continuous space language model trained in the form of a Neural Network Language Model (NN LM). The use of continuous space representation of language has been successfully applied in recent NN approaches to language modelling (Bengio et al., 2003; Schwenk and Gauvain, 2002; CastroBleda and Prat, 2003; Schwenk et al., 2006). However, the use of Neural Network Language Models (NN LMs) (Bengio, 2008) in state-of-theart SMT systems is not so popular. The only comprehensive work refers to (Schwenk, 2010), where the target LM is presented in the form of a fullyconnected Multilayer Perceptron. The presented system combines a standard, state-of-the-art SMT system with a NN LM via log-linear combination and N-best output rescoring. We chose to participate in the EnglishSpanish direction. 2 Neural Network Language Models In SMT the most extende</context>
<context position="3839" citStr="Bengio et al., 2003" startWordPosition="615" endWordPosition="618">). They compute the probability of each word given the context of the n−1 previous words: p(s1 ... s|S|) � � |S |p(si|si−n+1 ... si−1) . (2) i=1 where 5 is the sequence of words for which we want compute the probability, and si E 5, from a vocabulary Ω. 207 Proceedings of the Joint 5th Workshop on Statistical Machine Translation and MetricsMATR, pages 207–211, Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics A NN LM is a statistical LM which follows equation (2) as n-grams do, but where the probabilities that appear in that expression are estimated with a NN (Bengio et al., 2003; Castro-Bleda and Prat, 2003; Schwenk, 2007; Bengio, 2008). The model naturally fits under the probabilistic interpretation of the outputs of the NNs: if a NN, in this case a MLP, is trained as a classifier, the outputs associated to each class are estimations of the posterior probabilities of the defined classes (Bishop, 1995). The training set for a LM is a sequence s1s2 ... s|S |of words from a vocabulary Q. In order to train a NN to predict the next word given a history of length n − 1, each input word must be encoded. A natural representation is a local encoding following a “1-of-|Q|” sc</context>
<context position="6351" citStr="Bengio et al., 2003" startWordPosition="1065" endWordPosition="1068">i−1) for every word w E Q. Figure 1: Architecture of the continuous space NN LM during training. The input words are si−n+1, ... , si−1 (in this example, the input words are si−3, si−2, and si−1 for a 4-gram). I, P, H, and O are the input, projection, hidden, and output layer, respectively, of the MLP. The major advantage of the connectionist approach is the automatic smoothing performed by the neural network estimators. This smoothing is done via a continuous space representation of the input words. Learning the probability of n-grams, together with their representation in a continous space (Bengio et al., 2003), is an appropriate approximation for large vocabulary tasks. However, one of the drawbacks of such approach is the high computational cost entailed whenever the NN LM is computed directly, with no simplification whatsoever. For this reason, in this paper we will be restricting vocabulary size. 3 Experiments 3.1 Baseline system For building the baseline SMT system, we used the open-source SMT toolkit Moses (Koehn et al., 2007), in its standard setup. The decoder includes a log-linear model comprising a phrasebased translation model, a language model, a lexicalised distortion model and word and</context>
</contexts>
<marker>Bengio, Ducharme, Vincent, Jauvin, 2003</marker>
<rawString>Y. Bengio, R. Ducharme, P. Vincent, and C. Jauvin. 2003. A Neural Probabilistic Language Model. Journal of Machine Learning Research, 3(2):1137– 1155.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Bengio</author>
</authors>
<title>Neural net language models.</title>
<date>2008</date>
<journal>Scholarpedia,</journal>
<volume>3</volume>
<issue>1</issue>
<contexts>
<context position="2692" citStr="Bengio, 2008" startWordPosition="423" endWordPosition="424"> language modelling in state-ofthe-art SMT systems. In the present work, we present a system which follows a coherent and natural evolution of probabilistic Language Models. Specifically, we propose the use of a continuous space language model trained in the form of a Neural Network Language Model (NN LM). The use of continuous space representation of language has been successfully applied in recent NN approaches to language modelling (Bengio et al., 2003; Schwenk and Gauvain, 2002; CastroBleda and Prat, 2003; Schwenk et al., 2006). However, the use of Neural Network Language Models (NN LMs) (Bengio, 2008) in state-of-theart SMT systems is not so popular. The only comprehensive work refers to (Schwenk, 2010), where the target LM is presented in the form of a fullyconnected Multilayer Perceptron. The presented system combines a standard, state-of-the-art SMT system with a NN LM via log-linear combination and N-best output rescoring. We chose to participate in the EnglishSpanish direction. 2 Neural Network Language Models In SMT the most extended language models are n-grams (Bahl et al., 1983; Jelinek, 1997; Bahl et al., 1983). They compute the probability of each word given the context of the n−</context>
</contexts>
<marker>Bengio, 2008</marker>
<rawString>Y. Bengio. 2008. Neural net language models. Scholarpedia, 3(1):3881.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C M Bishop</author>
</authors>
<title>Neural networks for pattern recognition.</title>
<date>1995</date>
<publisher>Oxford University Press.</publisher>
<contexts>
<context position="4169" citStr="Bishop, 1995" startWordPosition="672" endWordPosition="673">etricsMATR, pages 207–211, Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics A NN LM is a statistical LM which follows equation (2) as n-grams do, but where the probabilities that appear in that expression are estimated with a NN (Bengio et al., 2003; Castro-Bleda and Prat, 2003; Schwenk, 2007; Bengio, 2008). The model naturally fits under the probabilistic interpretation of the outputs of the NNs: if a NN, in this case a MLP, is trained as a classifier, the outputs associated to each class are estimations of the posterior probabilities of the defined classes (Bishop, 1995). The training set for a LM is a sequence s1s2 ... s|S |of words from a vocabulary Q. In order to train a NN to predict the next word given a history of length n − 1, each input word must be encoded. A natural representation is a local encoding following a “1-of-|Q|” scheme. The problem of this encoding for tasks with large vocabularies (as is typically the case) is the huge size of the resulting NN. We have solved this problem following the ideas of (Bengio et al., 2003; Schwenk, 2007), learning a distributed representation for each word. Figure 1 illustrates the architecture of the feed-forw</context>
</contexts>
<marker>Bishop, 1995</marker>
<rawString>C. M. Bishop. 1995. Neural networks for pattern recognition. Oxford University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M J Castro-Bleda</author>
<author>F Prat</author>
</authors>
<title>New Directions in Connectionist Language Modeling.</title>
<date>2003</date>
<booktitle>In Computational Methods in Neural Modeling,</booktitle>
<volume>2686</volume>
<pages>598--605</pages>
<publisher>Springer-Verlag.</publisher>
<contexts>
<context position="3868" citStr="Castro-Bleda and Prat, 2003" startWordPosition="619" endWordPosition="622">robability of each word given the context of the n−1 previous words: p(s1 ... s|S|) � � |S |p(si|si−n+1 ... si−1) . (2) i=1 where 5 is the sequence of words for which we want compute the probability, and si E 5, from a vocabulary Ω. 207 Proceedings of the Joint 5th Workshop on Statistical Machine Translation and MetricsMATR, pages 207–211, Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics A NN LM is a statistical LM which follows equation (2) as n-grams do, but where the probabilities that appear in that expression are estimated with a NN (Bengio et al., 2003; Castro-Bleda and Prat, 2003; Schwenk, 2007; Bengio, 2008). The model naturally fits under the probabilistic interpretation of the outputs of the NNs: if a NN, in this case a MLP, is trained as a classifier, the outputs associated to each class are estimations of the posterior probabilities of the defined classes (Bishop, 1995). The training set for a LM is a sequence s1s2 ... s|S |of words from a vocabulary Q. In order to train a NN to predict the next word given a history of length n − 1, each input word must be encoded. A natural representation is a local encoding following a “1-of-|Q|” scheme. The problem of this enc</context>
</contexts>
<marker>Castro-Bleda, Prat, 2003</marker>
<rawString>M.J. Castro-Bleda and F. Prat. 2003. New Directions in Connectionist Language Modeling. In Computational Methods in Neural Modeling, volume 2686 of LNCS, pages 598–605. Springer-Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Espa˜na-Boquera</author>
<author>F Zamora-Martinez</author>
<author>M J CastroBleda</author>
<author>J Gorbe-Moya</author>
</authors>
<title>Efficient BP Algorithms for General Feedforward Neural Networks.</title>
<date>2007</date>
<booktitle>In Bio-inspired Modeling of Cognitive Tasks,</booktitle>
<volume>4527</volume>
<pages>327--336</pages>
<publisher>Springer.</publisher>
<marker>Espa˜na-Boquera, Zamora-Martinez, CastroBleda, Gorbe-Moya, 2007</marker>
<rawString>S. Espa˜na-Boquera, F. Zamora-Martinez, M.J. CastroBleda, and J. Gorbe-Moya. 2007. Efficient BP Algorithms for General Feedforward Neural Networks. In Bio-inspired Modeling of Cognitive Tasks, volume 4527 of LNCS, pages 327–336. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Jelinek</author>
</authors>
<title>Statistical Methods for Speech Recognition. Language, Speech, and Communication.</title>
<date>1997</date>
<publisher>The MIT Press.</publisher>
<contexts>
<context position="3201" citStr="Jelinek, 1997" startWordPosition="506" endWordPosition="507"> 2003; Schwenk et al., 2006). However, the use of Neural Network Language Models (NN LMs) (Bengio, 2008) in state-of-theart SMT systems is not so popular. The only comprehensive work refers to (Schwenk, 2010), where the target LM is presented in the form of a fullyconnected Multilayer Perceptron. The presented system combines a standard, state-of-the-art SMT system with a NN LM via log-linear combination and N-best output rescoring. We chose to participate in the EnglishSpanish direction. 2 Neural Network Language Models In SMT the most extended language models are n-grams (Bahl et al., 1983; Jelinek, 1997; Bahl et al., 1983). They compute the probability of each word given the context of the n−1 previous words: p(s1 ... s|S|) � � |S |p(si|si−n+1 ... si−1) . (2) i=1 where 5 is the sequence of words for which we want compute the probability, and si E 5, from a vocabulary Ω. 207 Proceedings of the Joint 5th Workshop on Statistical Machine Translation and MetricsMATR, pages 207–211, Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics A NN LM is a statistical LM which follows equation (2) as n-grams do, but where the probabilities that appear in that expression are es</context>
</contexts>
<marker>Jelinek, 1997</marker>
<rawString>F. Jelinek. 1997. Statistical Methods for Speech Recognition. Language, Speech, and Communication. The MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Khalilov</author>
<author>J A R Fonollosa</author>
<author>F Zamora-Martinez</author>
<author>M J Castro-Bleda</author>
<author>S Espa˜na-Boquera</author>
</authors>
<title>Neural network language models for translation with limited data.</title>
<date>2008</date>
<booktitle>In 20th International Conference on Tools with Artificial Intelligence, ICTAI’08,</booktitle>
<pages>445--451</pages>
<marker>Khalilov, Fonollosa, Zamora-Martinez, Castro-Bleda, Espa˜na-Boquera, 2008</marker>
<rawString>M. Khalilov, J. A. R. Fonollosa, F. Zamora-Martinez, M. J. Castro-Bleda, and S. Espa˜na-Boquera. 2008. Neural network language models for translation with limited data. In 20th International Conference on Tools with Artificial Intelligence, ICTAI’08, pages 445–451, november.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Kneser</author>
<author>H Ney</author>
</authors>
<title>Improved backing-off for m-gram language modeling.</title>
<date>1995</date>
<booktitle>IEEE Int. Conf. on Acoustics, Speech and Signal Processing, II:181– 184,</booktitle>
<contexts>
<context position="10960" citStr="Kneser and Ney, 1995" startWordPosition="1835" endWordPosition="1838"> set consisted of 102M words (3M sentences) and validation set 8M words (300K sentences). The network needed 129 epochs for achieving convergence, resulting in 38.7M and 25.8M training and validation samples respectively. For training the NN LM we used the April toolkit (Espa˜na-Boquera et al., 2007; Zamora-Martinez et al., 2009), which implements a pattern recognition and neural networks toolkit. The perplexity achieved by the 6- gram NN LM in the Spanish news-test08 development set was 116, versus 94 obtained with a standard 6-gram language model with interpolation and Kneser-Ney smoothing (Kneser and Ney, 1995). The number of sentences in the N-best list was set to 1000 unique output sentences. Results can be seen in Table 2. In order to assess the reliability of such results, we computed pairwise improvement intervals as described in (Koehn, 2004), by means of bootstrapping with 1000 bootstrap iterations and at a 95% confidence level. Such confidence test reported the improvements to be statistically significant. Four more experiments have done in order to study the influence of the N-best list size in the 209 Figure 2: Architecture of the system. Table 2: English-Spanish translation quality for de</context>
</contexts>
<marker>Kneser, Ney, 1995</marker>
<rawString>R. Kneser and H. Ney. 1995. Improved backing-off for m-gram language modeling. IEEE Int. Conf. on Acoustics, Speech and Signal Processing, II:181– 184, May.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
</authors>
<title>Moses: Open Source Toolkit for Statistical Machine Translation.</title>
<date>2007</date>
<booktitle>In Proc. of the ACL Demo and Poster Sessions,</booktitle>
<pages>177--180</pages>
<location>Prague, Czech Republic.</location>
<marker>Koehn, 2007</marker>
<rawString>P. Koehn et al. 2007. Moses: Open Source Toolkit for Statistical Machine Translation. In Proc. of the ACL Demo and Poster Sessions, pages 177–180, Prague, Czech Republic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
</authors>
<title>Statistical significance tests for machine translation evaluation.</title>
<date>2004</date>
<booktitle>In Proc. of EMNLP,</booktitle>
<pages>388--395</pages>
<contexts>
<context position="11202" citStr="Koehn, 2004" startWordPosition="1879" endWordPosition="1880">d the April toolkit (Espa˜na-Boquera et al., 2007; Zamora-Martinez et al., 2009), which implements a pattern recognition and neural networks toolkit. The perplexity achieved by the 6- gram NN LM in the Spanish news-test08 development set was 116, versus 94 obtained with a standard 6-gram language model with interpolation and Kneser-Ney smoothing (Kneser and Ney, 1995). The number of sentences in the N-best list was set to 1000 unique output sentences. Results can be seen in Table 2. In order to assess the reliability of such results, we computed pairwise improvement intervals as described in (Koehn, 2004), by means of bootstrapping with 1000 bootstrap iterations and at a 95% confidence level. Such confidence test reported the improvements to be statistically significant. Four more experiments have done in order to study the influence of the N-best list size in the 209 Figure 2: Architecture of the system. Table 2: English-Spanish translation quality for development and official test set. Results are given in BLEU/TER. test08 (dev) test10 (test) Baseline 24.8/60.0 26.7/55.1 NN LM 25.2/59.6 27.8/54.0 Table 3: Test set BLEU/TER performance for each N-best list size. N-best list size BLEU TER 200 </context>
</contexts>
<marker>Koehn, 2004</marker>
<rawString>P. Koehn. 2004. Statistical significance tests for machine translation evaluation. In Proc. of EMNLP, pages 388–395.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Och</author>
<author>H Ney</author>
</authors>
<title>Discriminative training and maximum entropy models for statistical machine translation.</title>
<date>2002</date>
<booktitle>In Proc. of ACL’02,</booktitle>
<pages>295--302</pages>
<contexts>
<context position="999" citStr="Och and Ney, 2002" startWordPosition="139" endWordPosition="142"> developed in collabaration between UCH and UPV for the 2010 WMT. For this year’s workshop, we present a system for EnglishSpanish translation. Output N-best lists were rescored via a target Neural Network Language Model, yielding improvements in the final translation quality as measured by BLEU and TER. 1 Introduction In Statistical Machine Translation (SMT), the goal is to translate a sentence f from a given source language into an equivalent sentence eˆ from a certain target language. Such statement is typically formalised by means of the so-called log-linear models (Papineni et al., 1998; Och and Ney, 2002) as follows: K eˆ = argmax Akhk(f,e) (1) e k=1 where hk(f, e) is a score function representing an important feature for the translation of f into e, K is the number of models (or features) and Ak are the weights of the log-linear combination. Typically, the weights Ak are optimised during the tuning stage with the use of a development set. Such features typically include the target language model p(e), which is one of the core components of an SMT system. In fact, most of the times it is assigned a relatively high weight in the log-linear combination described above. Traditionally, language mo</context>
</contexts>
<marker>Och, Ney, 2002</marker>
<rawString>F. Och and H. Ney. 2002. Discriminative training and maximum entropy models for statistical machine translation. In Proc. of ACL’02, pages 295– 302.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
</authors>
<title>Minimum Error Rate Training in Statistical Machine Translation.</title>
<date>2003</date>
<booktitle>In Proc. of ACL,</booktitle>
<pages>160--167</pages>
<location>Sapporo, Japan.</location>
<contexts>
<context position="7057" citStr="Och, 2003" startWordPosition="1181" endWordPosition="1182">uch approach is the high computational cost entailed whenever the NN LM is computed directly, with no simplification whatsoever. For this reason, in this paper we will be restricting vocabulary size. 3 Experiments 3.1 Baseline system For building the baseline SMT system, we used the open-source SMT toolkit Moses (Koehn et al., 2007), in its standard setup. The decoder includes a log-linear model comprising a phrasebased translation model, a language model, a lexicalised distortion model and word and phrase penalties. The weights of the log-linear interpolation were optimised by means of MERT (Och, 2003). For the baseline LM, we computed a regular n-gram LM with Kneser-Ney smoothing (Kneser 208 and Ney, 1995) and interpolation by means of the SRILM (Stolcke, 2002) toolkit. Specifically, we trained a 6-gram LM on the larger Spanish corpora available (i.e. UN, News-Shuffled and Europarl), and a 5-gram LM on the News-Commentary corpus. Once these LMs had been built, they were finally interpolated so as to maximise the perplexity of the News-Commentary test set of the 2008 shared task. This was done so according to preliminary investigation. 3.2 NN LM system architecture The presented systems fol</context>
</contexts>
<marker>Och, 2003</marker>
<rawString>F.J. Och. 2003. Minimum Error Rate Training in Statistical Machine Translation. In Proc. of ACL, pages 160–167, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Papineni</author>
<author>S Roukos</author>
<author>T Ward</author>
</authors>
<title>Maximum likelihood and discriminative training of direct translation models.</title>
<date>1998</date>
<booktitle>In Proc. of ICASSP,</booktitle>
<pages>189--192</pages>
<contexts>
<context position="979" citStr="Papineni et al., 1998" startWordPosition="135" endWordPosition="138">er describes the system developed in collabaration between UCH and UPV for the 2010 WMT. For this year’s workshop, we present a system for EnglishSpanish translation. Output N-best lists were rescored via a target Neural Network Language Model, yielding improvements in the final translation quality as measured by BLEU and TER. 1 Introduction In Statistical Machine Translation (SMT), the goal is to translate a sentence f from a given source language into an equivalent sentence eˆ from a certain target language. Such statement is typically formalised by means of the so-called log-linear models (Papineni et al., 1998; Och and Ney, 2002) as follows: K eˆ = argmax Akhk(f,e) (1) e k=1 where hk(f, e) is a score function representing an important feature for the translation of f into e, K is the number of models (or features) and Ak are the weights of the log-linear combination. Typically, the weights Ak are optimised during the tuning stage with the use of a development set. Such features typically include the target language model p(e), which is one of the core components of an SMT system. In fact, most of the times it is assigned a relatively high weight in the log-linear combination described above. Tradit</context>
</contexts>
<marker>Papineni, Roukos, Ward, 1998</marker>
<rawString>K. Papineni, S. Roukos, and T. Ward. 1998. Maximum likelihood and discriminative training of direct translation models. In Proc. of ICASSP, pages 189– 192.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Schwenk</author>
<author>J L Gauvain</author>
</authors>
<title>Connectionist language modeling for large vocabulary continuous speech recognition.</title>
<date>2002</date>
<booktitle>In Proceedings of the International Conference on Acoustics, Speech, and Signal Processing (ICASSP’02),</booktitle>
<pages>765--768</pages>
<location>Orlando, Florida (USA),</location>
<contexts>
<context position="2565" citStr="Schwenk and Gauvain, 2002" startWordPosition="400" endWordPosition="403">nds on the previous history, i.e. the n − 1 preceding words in the utterance. Nowadays, n-gram models have become a “de facto” standard for language modelling in state-ofthe-art SMT systems. In the present work, we present a system which follows a coherent and natural evolution of probabilistic Language Models. Specifically, we propose the use of a continuous space language model trained in the form of a Neural Network Language Model (NN LM). The use of continuous space representation of language has been successfully applied in recent NN approaches to language modelling (Bengio et al., 2003; Schwenk and Gauvain, 2002; CastroBleda and Prat, 2003; Schwenk et al., 2006). However, the use of Neural Network Language Models (NN LMs) (Bengio, 2008) in state-of-theart SMT systems is not so popular. The only comprehensive work refers to (Schwenk, 2010), where the target LM is presented in the form of a fullyconnected Multilayer Perceptron. The presented system combines a standard, state-of-the-art SMT system with a NN LM via log-linear combination and N-best output rescoring. We chose to participate in the EnglishSpanish direction. 2 Neural Network Language Models In SMT the most extended language models are n-gra</context>
</contexts>
<marker>Schwenk, Gauvain, 2002</marker>
<rawString>H. Schwenk and J. L. Gauvain. 2002. Connectionist language modeling for large vocabulary continuous speech recognition. In Proceedings of the International Conference on Acoustics, Speech, and Signal Processing (ICASSP’02), pages 765–768, Orlando, Florida (USA), May.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Schwenk</author>
<author>P Koehn</author>
</authors>
<title>Large and diverse language models for statistical machine translation.</title>
<date>2008</date>
<booktitle>In International Joint Conference on Natural Language Processing,</booktitle>
<pages>661--668</pages>
<contexts>
<context position="7748" citStr="Schwenk and Koehn, 2008" startWordPosition="1293" endWordPosition="1296">ey smoothing (Kneser 208 and Ney, 1995) and interpolation by means of the SRILM (Stolcke, 2002) toolkit. Specifically, we trained a 6-gram LM on the larger Spanish corpora available (i.e. UN, News-Shuffled and Europarl), and a 5-gram LM on the News-Commentary corpus. Once these LMs had been built, they were finally interpolated so as to maximise the perplexity of the News-Commentary test set of the 2008 shared task. This was done so according to preliminary investigation. 3.2 NN LM system architecture The presented systems follow previous works of (Schwenk et al., 2006; Khalilov et al., 2008; Schwenk and Koehn, 2008; Schwenk, 2010) where the use of a NN LM helps achieving better performance in the final system. The NN LM was incorporated to the baseline system via log-linear combination, adding a new feature to the output N-best list generated by the baseline system (in this case N = 1000). Specifically, the NN LM was used to compute the logprobability of each sentence within the N-best list. Then, the scores of such list were extended with our new, NN LM-based feature. This being done, we optimised the coefficients of the log-linear interpolation by means of MERT, taking into account the newly introduce</context>
</contexts>
<marker>Schwenk, Koehn, 2008</marker>
<rawString>H. Schwenk and P. Koehn. 2008. Large and diverse language models for statistical machine translation. In International Joint Conference on Natural Language Processing, pages 661–668.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Schwenk</author>
<author>D D´echelotte</author>
<author>J L Gauvain</author>
</authors>
<title>Continuous space language models for statistical machine translation.</title>
<date>2006</date>
<booktitle>In Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions,</booktitle>
<pages>723--730</pages>
<marker>Schwenk, D´echelotte, Gauvain, 2006</marker>
<rawString>H. Schwenk, D. D´echelotte, and J. L. Gauvain. 2006. Continuous space language models for statistical machine translation. In Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 723–730.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Schwenk</author>
</authors>
<title>Continuous space language models.</title>
<date>2007</date>
<journal>Computer Speech and Language,</journal>
<volume>21</volume>
<issue>3</issue>
<pages>518</pages>
<contexts>
<context position="3883" citStr="Schwenk, 2007" startWordPosition="623" endWordPosition="624"> the context of the n−1 previous words: p(s1 ... s|S|) � � |S |p(si|si−n+1 ... si−1) . (2) i=1 where 5 is the sequence of words for which we want compute the probability, and si E 5, from a vocabulary Ω. 207 Proceedings of the Joint 5th Workshop on Statistical Machine Translation and MetricsMATR, pages 207–211, Uppsala, Sweden, 15-16 July 2010. c�2010 Association for Computational Linguistics A NN LM is a statistical LM which follows equation (2) as n-grams do, but where the probabilities that appear in that expression are estimated with a NN (Bengio et al., 2003; Castro-Bleda and Prat, 2003; Schwenk, 2007; Bengio, 2008). The model naturally fits under the probabilistic interpretation of the outputs of the NNs: if a NN, in this case a MLP, is trained as a classifier, the outputs associated to each class are estimations of the posterior probabilities of the defined classes (Bishop, 1995). The training set for a LM is a sequence s1s2 ... s|S |of words from a vocabulary Q. In order to train a NN to predict the next word given a history of length n − 1, each input word must be encoded. A natural representation is a local encoding following a “1-of-|Q|” scheme. The problem of this encoding for tasks</context>
</contexts>
<marker>Schwenk, 2007</marker>
<rawString>H. Schwenk. 2007. Continuous space language models. Computer Speech and Language, 21(3):492– 518.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Schwenk</author>
</authors>
<title>Continuous space language models for statistical machine translation.</title>
<date>2010</date>
<journal>The Prague Bulletin of Mathematical Linguistics,</journal>
<volume>93</volume>
<contexts>
<context position="2796" citStr="Schwenk, 2010" startWordPosition="441" endWordPosition="442">ows a coherent and natural evolution of probabilistic Language Models. Specifically, we propose the use of a continuous space language model trained in the form of a Neural Network Language Model (NN LM). The use of continuous space representation of language has been successfully applied in recent NN approaches to language modelling (Bengio et al., 2003; Schwenk and Gauvain, 2002; CastroBleda and Prat, 2003; Schwenk et al., 2006). However, the use of Neural Network Language Models (NN LMs) (Bengio, 2008) in state-of-theart SMT systems is not so popular. The only comprehensive work refers to (Schwenk, 2010), where the target LM is presented in the form of a fullyconnected Multilayer Perceptron. The presented system combines a standard, state-of-the-art SMT system with a NN LM via log-linear combination and N-best output rescoring. We chose to participate in the EnglishSpanish direction. 2 Neural Network Language Models In SMT the most extended language models are n-grams (Bahl et al., 1983; Jelinek, 1997; Bahl et al., 1983). They compute the probability of each word given the context of the n−1 previous words: p(s1 ... s|S|) � � |S |p(si|si−n+1 ... si−1) . (2) i=1 where 5 is the sequence of word</context>
<context position="7764" citStr="Schwenk, 2010" startWordPosition="1297" endWordPosition="1298">and Ney, 1995) and interpolation by means of the SRILM (Stolcke, 2002) toolkit. Specifically, we trained a 6-gram LM on the larger Spanish corpora available (i.e. UN, News-Shuffled and Europarl), and a 5-gram LM on the News-Commentary corpus. Once these LMs had been built, they were finally interpolated so as to maximise the perplexity of the News-Commentary test set of the 2008 shared task. This was done so according to preliminary investigation. 3.2 NN LM system architecture The presented systems follow previous works of (Schwenk et al., 2006; Khalilov et al., 2008; Schwenk and Koehn, 2008; Schwenk, 2010) where the use of a NN LM helps achieving better performance in the final system. The NN LM was incorporated to the baseline system via log-linear combination, adding a new feature to the output N-best list generated by the baseline system (in this case N = 1000). Specifically, the NN LM was used to compute the logprobability of each sentence within the N-best list. Then, the scores of such list were extended with our new, NN LM-based feature. This being done, we optimised the coefficients of the log-linear interpolation by means of MERT, taking into account the newly introduced feature. Final</context>
</contexts>
<marker>Schwenk, 2010</marker>
<rawString>H. Schwenk. 2010. Continuous space language models for statistical machine translation. The Prague Bulletin of Mathematical Linguistics, 93.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Stolcke</author>
</authors>
<title>SRILM – an extensible language modeling toolkit.</title>
<date>2002</date>
<booktitle>In Proc. of ICSLP’02,</booktitle>
<pages>901--904</pages>
<contexts>
<context position="7220" citStr="Stolcke, 2002" startWordPosition="1208" endWordPosition="1209"> we will be restricting vocabulary size. 3 Experiments 3.1 Baseline system For building the baseline SMT system, we used the open-source SMT toolkit Moses (Koehn et al., 2007), in its standard setup. The decoder includes a log-linear model comprising a phrasebased translation model, a language model, a lexicalised distortion model and word and phrase penalties. The weights of the log-linear interpolation were optimised by means of MERT (Och, 2003). For the baseline LM, we computed a regular n-gram LM with Kneser-Ney smoothing (Kneser 208 and Ney, 1995) and interpolation by means of the SRILM (Stolcke, 2002) toolkit. Specifically, we trained a 6-gram LM on the larger Spanish corpora available (i.e. UN, News-Shuffled and Europarl), and a 5-gram LM on the News-Commentary corpus. Once these LMs had been built, they were finally interpolated so as to maximise the perplexity of the News-Commentary test set of the 2008 shared task. This was done so according to preliminary investigation. 3.2 NN LM system architecture The presented systems follow previous works of (Schwenk et al., 2006; Khalilov et al., 2008; Schwenk and Koehn, 2008; Schwenk, 2010) where the use of a NN LM helps achieving better perform</context>
</contexts>
<marker>Stolcke, 2002</marker>
<rawString>A. Stolcke. 2002. SRILM – an extensible language modeling toolkit. In Proc. of ICSLP’02, pages 901– 904, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Zamora-Martinez</author>
<author>M J Castro-Bleda</author>
<author>S Espa˜na-Boquera</author>
</authors>
<title>Fast Evaluation of Connectionist Language Models.</title>
<date>2009</date>
<booktitle>In International Work-Conference on Artificial Neural Networks,</booktitle>
<volume>5517</volume>
<pages>33--40</pages>
<publisher>Springer.</publisher>
<marker>Zamora-Martinez, Castro-Bleda, Espa˜na-Boquera, 2009</marker>
<rawString>F. Zamora-Martinez, M.J. Castro-Bleda, and S. Espa˜na-Boquera. 2009. Fast Evaluation of Connectionist Language Models. In International Work-Conference on Artificial Neural Networks, volume 5517 of LNCS, pages 33–40. Springer.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>