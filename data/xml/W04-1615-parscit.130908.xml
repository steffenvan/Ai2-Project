<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.014182">
<title confidence="0.980892">
FarsiSum - A Persian text summarizer
</title>
<author confidence="0.966471">
Martin Hassel
</author>
<affiliation confidence="0.855695">
KTH NADA
Royal Institute of Technology
</affiliation>
<address confidence="0.790461">
100 44 Stockholm, Sweden
</address>
<email confidence="0.990962">
xmartin@nada.kth.se
</email>
<author confidence="0.984986">
Nima Mazdak
</author>
<affiliation confidence="0.98548">
Department of Linguistics
Stockholm University
</affiliation>
<address confidence="0.833501">
106 91 Stockholm, Sweden
</address>
<email confidence="0.992042">
nima.mazdak@comhem.se
</email>
<sectionHeader confidence="0.992281" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99989925">
FarsiSum is an attempt to create an automatic
text summarization system for Persian. The
system is implemented as a HTTP
client/server application written in Perl. It uses
modules implemented in an existing
summarizer geared towards the Germanic
languages, a Persian stop-list in Unicode
format and a small set of heuristic rules.
</bodyText>
<sectionHeader confidence="0.998488" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999697769230769">
FarsiSum is an attempt to create an automatic
text summarization system for Persian (Mazdak,
2004). The system is implemented as a HTTP
client/server application written in Perl. It uses
modules implemented in SweSum (Dalianis 2000),
a Persian stop-list in Unicode format and a small
set of heuristic rules. The stop-list is a file
including the most common verbs, pronouns,
adverbs, conjunctions, prepositions and articles in
Persian. The words not included in the stop-list are
supposed to be nouns or adjectives. The idea is that
nouns and adjectives are meaning-carrying words
and should be regarded as keywords.
The current implementation of FarsiSum is still a
prototype. It uses a very simple stop-list in order to
filter and identify the important keywords in the
text. Persian acronyms and abbreviations are not
detected by the current tokenizer.
In addition, Persian syntax is quite ambiguous in
its written form (Megerdoomian and Rémi 2000),
which raises certain difficulties in automatic
parsing of written text and automatic text
summarization for Persian.
For example, selection of important keywords
in the topic identification process will be affected
by the following word boundary ambiguities:
</bodyText>
<listItem confidence="0.95720425">
• Compound words may appear as two different
words.
• Bound morphemes may appear as free
morphemes or vice versa.
</listItem>
<bodyText confidence="0.953674">
These ambiguities are not resolved in the current
implementation.
</bodyText>
<sectionHeader confidence="0.976266" genericHeader="introduction">
2 SweSum
</sectionHeader>
<bodyText confidence="0.999653142857143">
SweSum1 (Dalianis 2000) is a web-based
automatic text summarizer developed at the Royal
Institute of Technology (KTH) in Sweden. It uses
text extraction based on statistical and linguistic as
well as heuristic methods to obtain text
summarization and its main domain is Swedish
HTML-tagged newspaper text2.
</bodyText>
<subsectionHeader confidence="0.987932">
2.1 SweSum’s architecture
</subsectionHeader>
<bodyText confidence="0.9988264">
SweSum is a client/server application. The
summarizer is located on the web server. It takes a
Swedish text as input and performs summarization
in three phases to create the final output (the
summarized text).
</bodyText>
<figureCaption confidence="0.8309675">
Figure 1: SweSum architecture
Pass 1: The sentence and word boundaries are
</figureCaption>
<bodyText confidence="0.988609714285714">
identified by searching for periods, exclamation
and question marks etc (with the exception of
when periods occur in known abbreviations). The
sentences are then scored by using statistical,
linguistic and heuristic methods. The scoring
depends on, for example, the position of the
sentence in the text, numerical values in and
</bodyText>
<footnote confidence="0.9873732">
1 An online demo is available at
http://swesum.nada.kth.se/index.html
2 SweSum is also available for English, Danish,
Norwegian, Spanish, French, German, and now with the
implementation described in this paper, Farsi.
</footnote>
<figure confidence="0.9823755">
Web Client
Web Server
HTTP
Summarizer
Pass I
Tokenizing
Scoring
Keyword extraction
2
3
Original Text
HTTP Client (Win Explorer/Netscape/Mac)
1
Lexicon
4 Sentence Ranking
Apache HTTP Server
Pass II
5
Summarized
Text
6 Summary Extraction
8
Pass III
7
</figure>
<bodyText confidence="0.936860666666667">
various formatting of the sentence such as bold,
headings, etc.
Pass 2: In the second pass, the score of each
word in the sentence is calculated and added to the
sentence score. Sentences containing common
content words get higher scores.
</bodyText>
<listItem confidence="0.822814125">
Pass 3: In the third pass, the final summary file
(HTML format) is created. This file includes:
• The highest ranking sentences up to a pre-
set threshold.
• Optionally, statistical information about
the summary, i.e. the number of words,
number of lines, the most frequent
keywords, actual compression rate etc.
</listItem>
<bodyText confidence="0.999730857142857">
For most languages SweSum uses a static
lexicon containing many high frequent open class
words. The lexicon is a data structure for storing
key/value pairs where the key is the inflected word
and the value is the stem/root of the word. For
example boy and boys have different inflections
but the same root (lemma).
</bodyText>
<sectionHeader confidence="0.998631" genericHeader="method">
3 FarsiSum
</sectionHeader>
<bodyText confidence="0.999717428571429">
FarsiSum is a web-based text summarizer for
Persian based upon SweSum. It summarizes
Persian newspaper text/HTML in Unicode format.
FarsiSum uses the same structure used by SweSum
(see Figure 2), with exception of the lexicons, but
some modifications have been made in SweSum in
order to support Persian texts in Unicode format.
</bodyText>
<subsectionHeader confidence="0.995149">
3.1 User Interface
</subsectionHeader>
<bodyText confidence="0.995683">
The user interface includes:
</bodyText>
<listItem confidence="0.98537525">
• The first page of FarsiSum on WWW
presented in Persian3.
• A Persian online editor for writing in
Persian.
</listItem>
<bodyText confidence="0.9998635">
The final summary including statistical
information to the user, presented in Persian.
</bodyText>
<subsectionHeader confidence="0.998607">
3.2 Stop List
</subsectionHeader>
<bodyText confidence="0.999892866666667">
The current implementation uses a simple stop
list rather than a full-fledged Persian lexicon. The
stop-list is a HTML file (UTF-8 encoding)
containing about 200 high-frequency Persian
words including the most common verbs,
pronouns, adverbs, conjunctions, prepositions and
articles.
The stop-list has been successively built
during the implementation phase by iteratively
running FarsiSum in order to find the most
common words in Persian.
The assumption is that words not included in the
stop-list are nouns or adjectives (content words)
and should be counted as such in the word
frequency list.
</bodyText>
<subsectionHeader confidence="0.986417">
3.3 Tokenizer
</subsectionHeader>
<bodyText confidence="0.999636">
The tokenizer is modified in order to recognize
Persian comma, semi colon and question mark.
</bodyText>
<listItem confidence="0.885934">
• Sentence boundaries are found by
searching for periods, exclamation and
question marks as well as &lt;BR&gt; (the
HTML new line) and the Persian question
mark (؟).
• The tokenizer finds the word boundaries
by searching for characters such as “.”, “,”,
“!”, “?”, “&lt;”, “&gt;”, “:”, spaces, tabs and
new lines. Persian semi colon, comma and
question mark can also be recognized.
• All words in the document are converted
from ASCII to UTF-8. These words are
then compared with the words in the stop-
list. Words not included in the stop list are
regarded as content words and will be
counted as keywords.
</listItem>
<bodyText confidence="0.99414375">
The word order in Persian is SOV4, i.e. the last
word in a sentence is a verb. This knowledge is
used to prevent verbs from being stored in the
Word frequency table.
</bodyText>
<subsectionHeader confidence="0.993293">
3.4 Architecture
</subsectionHeader>
<bodyText confidence="0.9972044">
FarsiSum is implemented as a HTTP
client/server application as shown in Figure 2. The
summarization program is located on the server
side and the client is a browser such as Internet
Explorer or Netscape Navigator.
</bodyText>
<figure confidence="0.996023575757576">
Alphabet Roman/Persian
Encoding ASCII/Unicode
Data Lexicon/Stop List
User Interface
Summarized
text
Original text
Unicode
Unicode
ASCII
HTTP
1
ASCII
6
Pass 2
Pass 3
Pass 1
Summary extraction
Tokenizing
Scoring
Keyword Extraction
Sentence ranking
3
5
Architecture
FarsiSum
Uni e
cod
Unicode
2
4
Stop-list
Unicode
</figure>
<figureCaption confidence="0.999824">
Figure 1: FarsiSum architecture
</figureCaption>
<footnote confidence="0.866301">
3 http://www.nada.kth.se/iplab/hlt/farsisum/index-
farsi.html
4 SOV stands for Subject, Object and Verb.
</footnote>
<bodyText confidence="0.99003980952381">
The summarization process starts when the user
(client) clicks on a hyperlink (summarize) on the
FarsiSum Web site:
• The browser (Web client) sends a
summarization request (marked 1 in
Figure 2) to the Web server where
FarsiSum is located. The document/ (URL
of the document) to be summarized is
attached to the request. (The original text
is in Unicode format).
• The document is summarized in three
phases including tokenizing, scoring and
keyword extraction. Words in the
document are converted from ASCII to
UTF-8. These words are then compared
with the words in the stop-list (2-5).
• The summary is returned back to the
HTTP server that returns the summarized
document to the client (6).
The browser then renders the summarized text to
the screen.
</bodyText>
<sectionHeader confidence="0.999777" genericHeader="conclusions">
4 Conclusions
</sectionHeader>
<bodyText confidence="0.9999154">
The system would most certainly benefit from
deeper language specific analysis, but with no
access to Persian resources, in this system fairly
language independent methods have proven to
come a long way.
</bodyText>
<sectionHeader confidence="0.999046" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.996064636363636">
Dalianis, H. 2000. SweSum - A Text Summarizer
for Swedish, Technical report, TRITA-NA-
P0015, IPLab-174, NADA, KTH, October 2000.
Mazdak, N. 2004. FarsiSum - a Persian text
summarizer, Master thesis, Department of
Linguistics, Stockholm University, (PDF)
Megerdoomian, Karine and Rémi, Zajac 2000.
Processing Persian Text: Tokenization in the
Shiraz Project. NMSU, CRL, Memoranda in
Computer and Cognitive Science (MCCS-00-
322).
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.261748">
<title confidence="0.998727">FarsiSum - A Persian text summarizer</title>
<author confidence="0.982205">Martin</author>
<email confidence="0.605829">KTH</email>
<affiliation confidence="0.980316">Royal Institute of</affiliation>
<address confidence="0.963402">100 44 Stockholm,</address>
<email confidence="0.990462">xmartin@nada.kth.se</email>
<author confidence="0.662494">Nima</author>
<affiliation confidence="0.999593">Department of Linguistics</affiliation>
<address confidence="0.8647055">Stockholm 106 91 Stockholm,</address>
<email confidence="0.992747">nima.mazdak@comhem.se</email>
<abstract confidence="0.996987777777778">FarsiSum is an attempt to create an automatic text summarization system for Persian. The system is implemented as a HTTP client/server application written in Perl. It uses modules implemented in an existing summarizer geared towards the Germanic languages, a Persian stop-list in Unicode format and a small set of heuristic rules.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>H Dalianis</author>
</authors>
<title>SweSum - A Text Summarizer for Swedish,</title>
<date>2000</date>
<tech>Technical report, TRITA-NAP0015, IPLab-174,</tech>
<location>NADA, KTH,</location>
<contexts>
<context position="828" citStr="Dalianis 2000" startWordPosition="118" endWordPosition="119">eden nima.mazdak@comhem.se Abstract FarsiSum is an attempt to create an automatic text summarization system for Persian. The system is implemented as a HTTP client/server application written in Perl. It uses modules implemented in an existing summarizer geared towards the Germanic languages, a Persian stop-list in Unicode format and a small set of heuristic rules. 1 Introduction FarsiSum is an attempt to create an automatic text summarization system for Persian (Mazdak, 2004). The system is implemented as a HTTP client/server application written in Perl. It uses modules implemented in SweSum (Dalianis 2000), a Persian stop-list in Unicode format and a small set of heuristic rules. The stop-list is a file including the most common verbs, pronouns, adverbs, conjunctions, prepositions and articles in Persian. The words not included in the stop-list are supposed to be nouns or adjectives. The idea is that nouns and adjectives are meaning-carrying words and should be regarded as keywords. The current implementation of FarsiSum is still a prototype. It uses a very simple stop-list in order to filter and identify the important keywords in the text. Persian acronyms and abbreviations are not detected by</context>
</contexts>
<marker>Dalianis, 2000</marker>
<rawString>Dalianis, H. 2000. SweSum - A Text Summarizer for Swedish, Technical report, TRITA-NAP0015, IPLab-174, NADA, KTH, October 2000.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Mazdak</author>
</authors>
<title>FarsiSum - a Persian text summarizer,</title>
<date>2004</date>
<tech>Master thesis,</tech>
<institution>Department of Linguistics, Stockholm University, (PDF)</institution>
<contexts>
<context position="694" citStr="Mazdak, 2004" startWordPosition="98" endWordPosition="99">chnology 100 44 Stockholm, Sweden xmartin@nada.kth.se Nima Mazdak Department of Linguistics Stockholm University 106 91 Stockholm, Sweden nima.mazdak@comhem.se Abstract FarsiSum is an attempt to create an automatic text summarization system for Persian. The system is implemented as a HTTP client/server application written in Perl. It uses modules implemented in an existing summarizer geared towards the Germanic languages, a Persian stop-list in Unicode format and a small set of heuristic rules. 1 Introduction FarsiSum is an attempt to create an automatic text summarization system for Persian (Mazdak, 2004). The system is implemented as a HTTP client/server application written in Perl. It uses modules implemented in SweSum (Dalianis 2000), a Persian stop-list in Unicode format and a small set of heuristic rules. The stop-list is a file including the most common verbs, pronouns, adverbs, conjunctions, prepositions and articles in Persian. The words not included in the stop-list are supposed to be nouns or adjectives. The idea is that nouns and adjectives are meaning-carrying words and should be regarded as keywords. The current implementation of FarsiSum is still a prototype. It uses a very simpl</context>
</contexts>
<marker>Mazdak, 2004</marker>
<rawString>Mazdak, N. 2004. FarsiSum - a Persian text summarizer, Master thesis, Department of Linguistics, Stockholm University, (PDF)</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karine Megerdoomian</author>
<author>Zajac Rémi</author>
</authors>
<title>Processing Persian Text: Tokenization</title>
<date>2000</date>
<booktitle>in the Shiraz Project. NMSU, CRL, Memoranda in Computer and Cognitive Science</booktitle>
<pages>00--322</pages>
<contexts>
<context position="1547" citStr="Megerdoomian and Rémi 2000" startWordPosition="230" endWordPosition="233"> a file including the most common verbs, pronouns, adverbs, conjunctions, prepositions and articles in Persian. The words not included in the stop-list are supposed to be nouns or adjectives. The idea is that nouns and adjectives are meaning-carrying words and should be regarded as keywords. The current implementation of FarsiSum is still a prototype. It uses a very simple stop-list in order to filter and identify the important keywords in the text. Persian acronyms and abbreviations are not detected by the current tokenizer. In addition, Persian syntax is quite ambiguous in its written form (Megerdoomian and Rémi 2000), which raises certain difficulties in automatic parsing of written text and automatic text summarization for Persian. For example, selection of important keywords in the topic identification process will be affected by the following word boundary ambiguities: • Compound words may appear as two different words. • Bound morphemes may appear as free morphemes or vice versa. These ambiguities are not resolved in the current implementation. 2 SweSum SweSum1 (Dalianis 2000) is a web-based automatic text summarizer developed at the Royal Institute of Technology (KTH) in Sweden. It uses text extracti</context>
</contexts>
<marker>Megerdoomian, Rémi, 2000</marker>
<rawString>Megerdoomian, Karine and Rémi, Zajac 2000. Processing Persian Text: Tokenization in the Shiraz Project. NMSU, CRL, Memoranda in Computer and Cognitive Science (MCCS-00-322).</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>