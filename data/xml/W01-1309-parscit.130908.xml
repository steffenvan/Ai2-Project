<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000323">
<title confidence="0.998569">
From Temporal Expressions to Temporal Information:
Semantic Tagging of News Messages
</title>
<author confidence="0.998375">
Frank Schilder and Christopher Habel
</author>
<affiliation confidence="0.9957985">
Department for Informatics
University of Hamburg
</affiliation>
<address confidence="0.899543666666667">
Vogt-K¨olln-Str. 30
22527 Hamburg
Germany
</address>
<email confidence="0.996705">
schilderhabel @informatik.uni-hamburg.de
</email>
<sectionHeader confidence="0.995588" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999965428571429">
We present a semantic tagging system
for temporal expressions and discuss
how the temporal information conveyed
by these expressions can be extracted.
The performance of the system was
evaluated wrt. a small hand-annotated
corpus of news messages.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999855888888889">
This paper describes a semantic tagging sys-
tem that extracts temporal information from news
messages. Temporal expressions are defined for
this system as chunks of text that express some
sort of direct or inferred temporal information.
The set of these expressions investigated in the
present paper includes dates (e.g. 08.04.2001),
prepositional phrases (PPs) containing some time
expression (e.g. on Friday), and verbs referring
to a situation (e.g. opened). Related work by
Mani and Wilson (2000) focuses only on the core
temporal expressions neglecting the temporal in-
formation conveyed by prepositions (e.g. Friday
vs. by Friday).
The main part of the system is a temporal ex-
pression tagger that employs finite state trans-
ducers based on hand-written rules. The tag-
ger was trained on economic news articles ob-
tained from two German news papers and an on-
line news agency (Financial Times Deutschland,
die tageszeitung and www.comdirect.de).
Based on the syntactic classification of tempo-
ral expressions a semantic representation of the
extracted chunks is proposed. A clear-cut distinc-
tion between the syntactic tagging process and the
semantic interpretation is maintained. The advan-
tage of this approach is that a second level is cre-
ated that represents the meaning of the extracted
chunks. Having defined the semantic represen-
tation of the temporal expressions, further infer-
ences, in particular on temporal relations, can be
drawn. Establishing the temporal relations be-
tween all events mentioned by a news article is the
ultimate goal of this enterprise. However, at the
current stage of this work the semantic analysis is
still in progress. For the time being, we focus on
the anchoring of the temporal expressions in the
absolute time line and present an already substan-
tial subset of a full semantics that will eventually
cover the entire set of temporal expressions ex-
tracted.
Finally, the evaluation of the temporal expres-
sion tagger provides precision and recall rates for
tagging temporal expressions and drawing tempo-
ral inferences.
</bodyText>
<sectionHeader confidence="0.569013" genericHeader="method">
2 Representing time in news articles
</sectionHeader>
<bodyText confidence="0.999742">
Since we focus on a particular text domain
(i.e. news articles), the classification of temporal
expressions can be kept to a manageable set of
classes.
</bodyText>
<subsectionHeader confidence="0.986465">
2.1 Classification of temporal expressions
</subsectionHeader>
<bodyText confidence="0.99997575">
The main distinction we make is between time-
denoting and event-denoting expressions. The
first group comprises chunks expressing temporal
information that can be stated with reference to a
calendar or clock system. Syntactically speaking,
these expressions are mainly expressed by prepo-
sitional, adverbial or noun phrases (e.g. on Friday
or today or the fourth quarter).
The second group, event-denoting expressions,
refers to events. These expressions have an im-
plicit temporal dimension, since all situations
possess a temporal component. For these expres-
sions, however, there is no direct or indirect link
to the calendar or clock system. These expres-
sions are verb or noun phrases (e.g. increased or
the election).
</bodyText>
<subsectionHeader confidence="0.888385">
2.1.1 Time-denoting expressions
</subsectionHeader>
<bodyText confidence="0.991740433333333">
Temporal reference can be expressed in three
different ways:
Explicit reference. Date expressions such as
08.04.2001 refer explicitly to entries of a calen-
dar system. Also time expressions such as 3 p.m.
or Midnight denote a precise moment in our tem-
poral representation system.
Indexical reference. All temporal expressions
that can only be evaluated via a given index time
are called indexical. Expressions such as today,
by last week or next Saturday need to be evaluated
wrt. the article’s time stamp.
Vague reference. Some temporal expressions
express only vague temporal information and it
is rather difficult to precisely place the informa-
tion expressed on a time line. Expressions such
as in several weeks, in the evening or by Saturday
the latest cannot be represented by points or exact
intervals in time.
For the given domain of news article, the ex-
traction of a time stamp for the given article is
very important. This time stamp represents the
production time of the news information and is
used by the other temporal expressions as an in-
dex time to compute the correct temporal mean-
ing of the expression. Note that an explicit date
expression such as 24.12. can only be evaluated
wrt. the year that the article was written. This
means that even an explicit temporal expression
can contain some degree of indexicality.
</bodyText>
<subsectionHeader confidence="0.640781">
2.1.2 Event-denoting expressions
</subsectionHeader>
<bodyText confidence="0.999955863636363">
Two types of event-denoting expressions have
to be distinguished, on the one hand, sentences,
and, on the other, specific noun phrases. In the
former case, the verb is the lexical bearer of in-
formation about the event in question, in the lat-
ter case, specific nouns, especially those created
by nominalisation, refer to an event.
Since temporal information is the topic of the
system described in this paper, only a subset
of event-denoting nouns have to be considered.
These expressions — as election in the phrase af-
ter the election — which serve as temporal ref-
erence pointers in building the temporal structure
of a news, can be marked by a specific attribute in
their lexical entry. Furthermore, in the text classes
we have investigated, there is a small number of
event nouns, which are used as domain dependent
pointers to elements of temporal structures. For
the domain of business and stock market news,
phrases such as opening of the stock exchange,
opening bell, or the close are examples of domain
specific event expressions.
</bodyText>
<subsectionHeader confidence="0.880771">
2.2 Representation of temporal information:
the time domain
</subsectionHeader>
<bodyText confidence="0.999981214285714">
The primary purpose of the present paper is to
anchor the temporal information obtained from
natural language expressions in news messages
in absolute time, i.e. in a linearly ordered set of
abstract time-entities, which we call time-set in
the following. One of the major tasks in this an-
choring process is to augment the temporal in-
formation in case of indexical and vague tempo-
ral descriptions (see section 4.3 for more details).
Since these expressions do not specify an individ-
ual time-entity of the time-set, it is necessary to
add temporal information until the temporal en-
tity build up from natural language is fully speci-
fied, i.e. can be anchored in the time-set.
</bodyText>
<subsectionHeader confidence="0.85322">
2.2.1 The granular system of temporal
entities
</subsectionHeader>
<bodyText confidence="0.9958076">
The temporal information obtained from news
messages is organised in a granular system of
temporal entities including such granularity lev-
els as GL-day, GL-week, GL-month and GL-
year.1 Individual days are anchored by a
</bodyText>
<footnote confidence="0.968915666666667">
1In the present paper we focus on the conception ofgran-
ularity level in semantic and pragmatic inferences. There-
fore, we do not discuss the formal notions of granular sys-
tems for temporal entities here. Compare, e.g. Bettini et
al. (2000), for a framework of temporal granularity, which
could be used for the purposes we discuss here.
</footnote>
<bodyText confidence="0.991801823529412">
date, e.g. date(2001,3,23), on the time line,
i.e. the time-set. Further information, for exam-
ple, the day of the week, can also be included
by an additional slot of the time entity: time
= [’Fri’, date(2001,3,23)]. Time en-
tities of coarser granularity levels, e.g. weeks, are
represented on the basis of intervals, which can be
determined by a start, that is an entity of GL-day,
and a specific duration: time = [’Mon’,
date(2001,4,2), ’7 days’ ]. 2
The concept of temporal granularity is reflected
linguistically, for example, in the use of demon-
stratives as determiners of time expressions in
German: dieser Freitag (‘this Friday’) refers to
that Friday which is located in the current week
(i.e. the time entity of the next coarser level of
temporal granularity). The same phenomenon
holds with dieser Monatserste (‘this first day of
the month’)
In the following we will apply the granular-
ity structure of temporal expressions only with
respect to the finer than - coarser than relation
between levels of granularity, which is differ-
ent from the is part of relation between tempo-
ral entities. For example, whereas between days
and weeks there is a unique functional relation-
ship, namely that there is exactly one week (as
standard calendar unit) that an individual day is
a part of, a week can temporally overlap with
one or two months (Technically, overlap can
be realized by temporal relations of Allen-style;
see Allen (1983)). Nevertheless, GL-week
finer than GL-month holds in the granular-
ity system.3
2Whether the GL-week information remains implicit,
i.e. is inferable from duration, or is made explicit, i.e. coded
by a GL-week-stamp, depends on some design decisions
dependent on the conceptual richness of domain modelling.
For example, in a standardised world of ISO-weeks, which
start on Monday, only, it is not necessary to use GL-week-
stamps. On the other hand, if ISO-weeks, and business
weeks—of five-day length— are conceptual alternatives,
then it is appropriate to use explicit granularity-level stamps.
3The phenomena of overlapping temporal entities of dif-
ferent granularity systems, for example the system of calen-
dar time-entities vs. the system of business time-entities, or
the astronomical system of seasons of the year vs. the me-
teorological seasons of the year are especially relevant for
processing vague and ambiguous temporal expressions. Due
to the temporal and spatial limitations of this paper, we can
not go into the details here.
</bodyText>
<subsectionHeader confidence="0.851787">
2.2.2 Definition of temporal relations
</subsectionHeader>
<bodyText confidence="0.999349727272727">
Temporal relations are explicitely marked
by temporal prepositions (e.g. before, on or
by). We use the following seven tempo-
ral relation: before, after, incl, at,
starts, finishes, excl. The preposi-
tion on as in on Friday, for instance, denotes the
inclusion relation incl, whereas the preposition
by as in by Friday is represented as finishes.
Note that the seven temporal relations em-
ployed by the current version are equivalent to
sets of Allen’s interval relations (Allen, 1983).4
</bodyText>
<tableCaption confidence="0.978233">
Table 1: the temporal relations used
</tableCaption>
<sectionHeader confidence="0.85216" genericHeader="method">
3 Extraction of temporal information
</sectionHeader>
<bodyText confidence="0.999870833333333">
Similar to other approaches to information extrac-
tion or tagging, a cascade of Finite State Trans-
ducers (FST) was employed. The following sec-
tions provides a brief introduction to this tech-
nique before the overall system architecture is de-
scribed in more detail.5
</bodyText>
<subsectionHeader confidence="0.996323">
3.1 Preliminaries
</subsectionHeader>
<bodyText confidence="0.999885416666667">
The temporal expression chunks are extracted via
an FST. FSTs are basically automata that have
transitions labelled with a translation instruction.
A label of the form a:b indicates such an transla-
tion from a to b. Take as an example the simple
FST in figure 1. If the input contains the sequence
of the three subsequent characters , , and ,
the same output is produced with the sequence of
these three characters put into brackets. The input
stream “FSTs are basically automata” is, for in-
stance, translated, into “[FST]s are basically au-
tomata”.
</bodyText>
<footnote confidence="0.991759285714286">
4Allen (1983) proposes a temporal reasoning system
that contains all 13 conceivable relations between inter-
vals: b(efore), m(eets), o(verlaps), s(tarts),
d(uring), f(inishes), the 6 reverse relations bi, mi,
oi, si, di and fi and eq(ual).
5The semantic tagging system is written in SWI-
PROLOG 4.0.2
</footnote>
<table confidence="0.894329774193548">
before
after
incl
at
starts
finishes
excl
on Monday &lt;CHUNK
(time-denoting expression) id = t43
type = time
sem = [incl,[E,t42]]
time = [’Mon’,date(2001,4,2),
time(, , ), gl( ,day, )] &gt;
by Friday
&lt;/CHUNK&gt;
ftd.de, Fr, 16.3.2001, 11:00 &lt;CHUNK &gt;
(document time stamp) id = t1
type = time
ag = ’FTD’
sem = now
time = [’Fri’,date(2001,3,16),
time(11,00, ), gl( ,second,now)]
ftd.de, Fr, 16.3.2001, 11:00
&lt;/CHUNK&gt;
closed &lt;CHUNK
(event-denoting expression) id = e23
type = event
sem = close(e23)
temp = [ ,[t(e23), ]]
said
&lt;/CHUNK&gt;
</table>
<tableCaption confidence="0.997037">
Table 2: Examples of tagged temporal expressions
</tableCaption>
<figureCaption confidence="0.998655">
Figure 1: A simple FST
</figureCaption>
<subsectionHeader confidence="0.997771">
3.2 Classes of temporal information
</subsectionHeader>
<bodyText confidence="0.999126727272727">
The FSTs defined are fed by the output of a Part
of Speech (POS) tagger.6 The POS tagger speci-
fies the syntactic categories and a lemma for ev-
ery word of the input text. The syntactic infor-
mation is then stored in an XML file.7 Given the
derived syntactic categories and the lemma infor-
mation for every word of the text, several FSTs
specialised into different classes of temporal ex-
pressions are run.
Temporal Expressions. One FST consisting of
15 states and 61 arcs tags all occurrences of time-
</bodyText>
<footnote confidence="0.999023166666667">
6A decision-tree-based POS tagger developed by
(Schmid, 1994) was integrated into the system.
7Some of the XML and HTML handling predicates
the system uses stem from the PiLLoW package devel-
oped by Manuel Hermenegildo and Daniel Cabeza (URL
www.clip.dia.fi.upm.es/miscdocs/pillow/pillow.html).
</footnote>
<bodyText confidence="0.99991128">
denoting temporal expressions. The POS infor-
mation stored in an XML file as well as a prede-
fined class of temporal lemmas are used by this
FST. The class of temporal lemmas used include
days of the week (e.g. Friday), months (e.g. April)
as well as general temporal descriptions such as
midday, week or year. Since German is a very
productive language regarding compound nouns,
a simple morphological analysing tool was inte-
grated into this FST as well. This tool captures
expressions such as Rekordjahr (’record year’) or
Osterferien (’Easter holiday’).
The extracted temporal expression chunks are
marked by the CHUNK tag and an attribute type
= time. Seethe first row of table 2 for an exam-
ple. Note that the attributes sem and time carry
semantic information. The meaning of these val-
ues are explained in section 4. detail.
Document time stamp. The document time
stamp for a given article is crucial for the
computation of almost all temporal expressions
(e.g. now). In particular, this index time is indis-
pensable for the computation of all temporal ex-
pressions that express an indexical reference (see
the second row of table 2).8
</bodyText>
<footnote confidence="0.630482666666667">
8This FST consists of 7 states and 15 arcs. It also extracts
the name of the newspaper or agency as indicated by the at-
tribute ag. So far only the newspaper names and agencies
</footnote>
<bodyText confidence="0.9021092">
:
:
:
:
Verbal descriptions. Another FST that con-
tains 4 states and 27 arcs marks all verbs as
previously tagged by the POS tagger. As al-
ready pointed out these temporal expressions de-
note an event. The tag for such expressions is
&lt;CHUNK type = event&gt; &lt;/CHUNK&gt; (see
table2; third row).
Nominal descriptions. So far there is only an
experimental FST that extracts also nominal de-
scriptions of events such as the election. More
tests have to be carried out to determine a sub-
set of nouns for the given domain. These nouns
should then also be used to denote events men-
tioned in the text which can be combined with
time-denoting expressions, as in after the election
in May.
</bodyText>
<subsectionHeader confidence="0.997996">
3.3 System output
</subsectionHeader>
<bodyText confidence="0.9954525">
After all expressions have been tagged, an HTML
file is produced highlighting the respective ex-
pressions. See the snapshot in figure 2.9 While
reading the output stream from the FSTs tempo-
ral inferences are drawn by the system. In partic-
ular, expressions bearing indexical references are
resolved and the event descriptions are matched
with the time denoting temporal expressions.
Note that the values for CHUNK attributes sem,
time, and temp as indicated by the three exam-
ples in table 2 are PROLOG expressions. While
translating the tagged text a PROLOG predicate
triggers other predicates that compute the correct
temporal information. An additional HTML file
is also generated that contains the derived tempo-
ral information in standard ISO format, provided
an explicit reference was given or was resolved.
In the case of vague reference (e.g. afternoon) the
semantic description is kept (e.g. 20:01:04:03:af-
ternoon).10 In addition, the temporal relations
holding between the events and times expressed
mentioned by the article of the training set can be extracted.
A future version of the temporal expressions tagger should
also be capable of tagging previously unknown names. How-
ever, note that this is rather a named entity recognition task
and therefore goes beyond the scope of this paper.
</bodyText>
<footnote confidence="0.973912714285714">
9Time-denoting expressions are indicated by a dark (or
magenta) background, while event-denoting expressions are
indicated by a lighter (or yellow) background. The document
time stamp is tagged by a very dark (or green) background.
10Future research will focus on the temporal inferences
that can be drawn with these vague descriptions taking into
account the different granularity levels.
</footnote>
<bodyText confidence="0.721109">
by the text are stored as well.
</bodyText>
<sectionHeader confidence="0.960015" genericHeader="method">
4 Semantic descriptions and temporal
inferences
</sectionHeader>
<subsectionHeader confidence="0.983418">
4.1 Semantics for temporal expressions
</subsectionHeader>
<bodyText confidence="0.999981266666667">
With respect to processing temporal information,
the crucial distinction between time-denoting and
event-denoting expressions is that event-denoting
expressions lack the direct link to temporal enti-
ties. An event-denoting expression (e.g. a verb)
refers to an event of a certain type. The verb to
meet, for instance, can be formalised as .
In order to add the temporal information to the
event, a function temp is defined that gives back
the time when the event occurred (i.e. run-time of
the event). A time-denoting expression such as
on Monday that is combined with the event de-
scription carries some temporal information that
can further specify the run time temp(e1) of
the event e1.
</bodyText>
<subsectionHeader confidence="0.855484">
4.2 Semantics for temporal prepositions
</subsectionHeader>
<bodyText confidence="0.999980909090909">
PPs are the carrier of temporal relations. The se-
mantics for a preposition is, therefore, as follows:
. For each preposition a temporal relation
was defined. The preposition by expresses, for
instance, the finishes relation, as in by Friday.
Temporal expressions that do not contain a prepo-
sition are assumed to express an inclusion rela-
tion, as in Die PNegeversicherung war 1995 [... J
in Kraft getreten (‘the statutory health insurance
coverage of nursing care for the infirm took effect
in 1995’).
</bodyText>
<subsectionHeader confidence="0.999684">
4.3 Derivation of meaning
</subsectionHeader>
<bodyText confidence="0.999489">
The temporal information expressed by a sen-
tence as in example sequence (1) is derived via
unification of the semantic attributes derived for
the temporal expression chunks.
</bodyText>
<listItem confidence="0.893031">
(1) Die US-Technologieb¨orse Nasdaq
</listItem>
<bodyText confidence="0.965409">
The US-technology stock market Nasdaq
von 3,11 Prozent bei 1782 Punkten
of 3.11 percent at 1782 points
[geschlossen].
closed.
</bodyText>
<footnote confidence="0.872072">
Montag
Monday
mit einem
with a
Minus
minus
hatte
had
am
on
</footnote>
<figureCaption confidence="0.999614">
Figure 2: A snapshot of the temporal expressions tagger
</figureCaption>
<bodyText confidence="0.991235715789474">
‘The Nasdaq closed with a minus of 3.11
percent at 1782 points on Monday.’
Two temporal expressions are marked by the tag-
ger: am Montag (’on Monday’) and geschlossen
(’closed’). The former expression is a time-
denoting expression that consists of a preposition
and a time-denoting expression that is stored by
the FST. The derivation of the semantics for this
expression is done during the tagging process for
the temporal expressions.
First, the preposition am (‘on’) denoting
an inclusion relation between an event and
a time is processed. The expressed tempo-
ral relation is represented by a PROLOG list
(i.e. [incl,[E,T]]). After having pro-
cessed the following noun referring to a time
(i.e. Monday), the following semantic repre-
sentation is obtained via unification: sem =
[incl,[E,t1]], where t1 refers to the
following time stamp time = [’Mon’,
date(, , ), time( , , ), gl([ ,’1
day’, ])].11
11Note that the underscore “ ” refers to an anonymous
variable in PROLOG.
In the next step, the verbal expression tag-
ger combines the temporal information de-
rived for am Montag with the event repre-
sentation for geschlossen. The following se-
mantic representation is assign to the verb
geschlossen during the tagging of the verbal
expressions: sem = close(e23) temp =
[ , [t(e23), ]]. This means that event
e23 is of type closing and the run-time t(e23)
of this event stands in some to-be-specified re-
lation with another expression. Next, the tem-
poral information extracted by the FST spe-
cialised in time-denoting expression is unified
with the value of the temp-attribute. The result
is [incl,[t(e23),t1]].
So far, only the temporal relation that the event
of closing happened within a time frame of one
day has been determined. Since Montag con-
tains an indexical reference, this reference has
to be resolved. The document time stamp is
needed here. All references regarding this in-
dex time are resolved during the generation of
the HTML output file. Accordingly, the fol-
lowing time stamp is generated for am Mon-
tag: time = [’Mon’, date(2001,4,2),
time( , , ), gl([ ,’1 day’, ])]. The
time information is left open because the current
granularity level is GL-day.
However, this information could be further
specified by modifiers such as in n¨achstes Jahr
(’next year’). The third slot in gl is reserved for
these modifiers. The first slot can be filled by tem-
poral modifier that refer to a subpart of the ex-
pressed temporal entity, as in Beginn des Jahres
(’beginning of the year’). The resulting repre-
sentation of an expression such as Beginn letzten
Jahres (’beginning of last year’) is gl([begin,
year, last]).
4.4 Pragmatic inferences for anchoring
indezicals: The case of ’last’
Temporal expressions of the type last Friday are
similar to the phenomena discussed in the section
above. German has three lexemes, namely letzt,
vergangen and vorig that express this idea. The
differences in meaning are— in referring to a spe-
cific day—more of the type of individual prefer-
ences than of real alternatives in meaning. Which
day is referred to by using vorigen Montag? This
depends on the time of utterance. In general, there
seems to be a tendency to interpret this expression
as synonymous to Monday of the previous week,
i.e. to make use of the previous-operation on the
coarser level GL-week, instead of using this op-
eration on the level GL-day. But, if uttered on
Friday, our informants would give the Monday of
the same week a preference in their interpretation.
Thus the granularity-level up strategy is not al-
ways successful. As an alternative strategy we
propose the strategy of the gliding time window.
Similar to the first proposal a granularity of week-
size is relevant, but the relevant time entity in
question is centered around the focused day of the
week. In other words, looking forward and back-
ward in time from the perspective of a Friday, the
next Monday is nearer—or more activated—than
the last Monday, although it is in the same calen-
dar week. Thus, this Monday, i.e. the last Mon-
day, has to be marked explictly by vorige, and
therefore, the Monday before this, has to be spec-
ified as Montag der vorigen Roche (‘Monday of
last week’).
</bodyText>
<sectionHeader confidence="0.997922" genericHeader="evaluation">
5 Evaluation
</sectionHeader>
<bodyText confidence="0.999986125">
We evaluated the temporal expression tagger
wrt. a small corpus consisting of 10 news arti-
cles taken from Financial Times Deutschland. We
can report precision and recall rates regarding the
recognition of simple temporal expressions and
complex temporal expression phrases. Based on
the extracted temporal expression chunks the tem-
poral information was derived and evaluated.
</bodyText>
<subsectionHeader confidence="0.996944">
5.1 Tagging results
</subsectionHeader>
<bodyText confidence="0.999295222222222">
First, the class of simple temporal expressions
was tagged and analysed. Mani and Wil-
son (2000) call this class TIMEX expression (of
type TIME or DATE). We computed the precision
and recall values for our data regarding this type
of expressions in order to obtain a better compa-
rability with the results obtained by this earlier
study. However, as pointed out earlier, we con-
sider PPs carrying information regarding tempo-
ral relations as quite crucial for the derivation of
temporal information. This class of complex tem-
poral expressions provides more detailed infor-
mation about the temporal information expressed
by a text.
Table 3 contains the results of the evalua-
tion wrt. the two classes of temporal expressions.
There was a total of 186 simple and 182 complex
temporal expressions previously annotated.
</bodyText>
<table confidence="0.9953945">
Simple Complex
temp. Expr. temp. Expr.
Precision 92.11 87.30
Recall 94.09 90.66
</table>
<tableCaption confidence="0.7990015">
Table 3: Performance of the temporal expressions
tagger
</tableCaption>
<bodyText confidence="0.9993272">
An error analysis showed that the main source
of missed temporal expressions was the occur-
rence of a combined temporal expression, as in
2000/01. There were 6 cases when the tagger did
not correctly analyse this type of expression.
</bodyText>
<subsectionHeader confidence="0.962892">
5.2 Temporal information
</subsectionHeader>
<bodyText confidence="0.999869705882353">
The analysis of the temporal expressions included
an evaluation of the temporal relations derived.
Since all temporal prepositions and the class of
temporal expressions that can be recognised by
the FSTs come with a predefined semantics, pre-
cision and recall rates are the same. The overall
performance showed a precision and recall rate
of 84.49. As indicated by table 4, errors were
only made for expressions that express an index-
ical reference. These errors were in most cases
due to a missing semantics assigned to the respec-
tive expression. Since this part of the system is
still work in progress, we have not yet defined a
complete semantics for all temporal expression.
Hence the performance of the system regarding
temporal inference is likely to improve in the fu-
ture.
</bodyText>
<table confidence="0.8598274">
Reference expressed
explicit implicit vague
Total 49 109 7
Wrong 0 25 0
Precision 84.49
</table>
<tableCaption confidence="0.805553">
Table 4: performance of the temporal inference
derivation
</tableCaption>
<sectionHeader confidence="0.987045" genericHeader="conclusions">
6 Conclusion and outlook
</sectionHeader>
<bodyText confidence="0.999994354166667">
We presented a semantic tagging system that au-
tomatically tags the occurrence of temporal ex-
pressions such as 3. June, on Monday and last
month for German news messages. In addition,
a semantics for most of the temporal expressions
was defined so that temporal inferences were
drawn regarding dates and events described. A
more complex set of temporal expressions as ex-
tracted by recent systems (e.g. (Mani and Wilson,
2000)) was tagged. Our definition of temporal
expressions also includes PPs capturing temporal
relations. The system achieved an overall preci-
sion rate of 84.49 which is likely to go up as soon
as the semantic definition of all temporal expres-
sions will be completed.
Our system also covers indexical and vague
temporal expressions. Temporal reasoning and
pragmatic inferences drawn on the basis of these
expression is the focus of on-going and future
work.
The system we described in the present paper
is intended to become a part of an experimental
multi-document summarisation system currently
under development. Our studies focus on finan-
cial news messages obtained from on-line infor-
mation services in Germany. The task the sys-
tem has to solve is the production of summaries
of the most recent — and especially, most re-
ferred to — topics. Our experience in this domain
shows that there is one topic which leads to five
to twenty news messages almost every day. These
news messages are mostly unrelated, and they of-
ten only focus on the last one or two hours. Thus
a bare collection of such messages is nearly use-
less for a reader who wants to be informed at the
end of the day. For a user of an on-line infor-
mation service summarisations of several articles
on the same hot topics would have an enormous
advantage compared to unsummarised collections
of news messages.
The processing of temporal expressions plays
a major role in building up these summaries, be-
cause temporal information is ubiquitous in this
class of news. In addition, developing stories are
reported via a stream of in-coming news mes-
sages. Producing coherent news depends heavily
on the correct extraction of temporal information
expressed by these messages.12
</bodyText>
<sectionHeader confidence="0.999116" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.995745153846154">
James F. Allen. 1983. Maintaining Knowledge about
Temporal Intervals. Comunications of the ACM,
26(1):832–843.
Regina Barzilay, Kathleen McKeown, and Michael El-
hadad. 1999. Information fusion in the context of
multi-document summarization. In Proceedings of
the 37 Annual Meeting of the ACL, pages 550–
557, Maryland, MD, USA.
Claudio Bettini, Sushil Jajodia, and Sean X. Wang.
2000. Time granularities in databases, data min-
ing, and temporal reasoning. Springer-Verlag,
Berlin.
Inderjet Mani and George Wilson. 2000. Robust tem-
poral processing of news. In Proceedings of the
38 Annual Meeting of the Association for Com-
putational Linguistics (ACL 2000), Hong Kong,
China.
Dragomir R. Radev and Kathleen R. McKeown. 1998.
Generating natural language summaries from mul-
tiple on-line sources. Computational Linguistics,
24(3):469–500.
Helmut Schmid. 1994. Probabilistic part-of-speech
tagging using decision trees. In Proceedings of In-
ternational Conference on New Methods in Lan-
guage Processing.
12Cf. (Radev and McKeown, 1998; Barzilay et al., 1999)
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.634175">
<title confidence="0.993019">From Temporal Expressions to Temporal Semantic Tagging of News Messages</title>
<author confidence="0.999467">Frank Schilder</author>
<author confidence="0.999467">Christopher</author>
<affiliation confidence="0.909302">Department for University of Vogt-K¨olln-Str.</affiliation>
<address confidence="0.918497">22527</address>
<email confidence="0.856318">schilderhabel@informatik.uni-hamburg.de</email>
<abstract confidence="0.99877025">We present a semantic tagging system for temporal expressions and discuss how the temporal information conveyed by these expressions can be extracted. The performance of the system was evaluated wrt. a small hand-annotated corpus of news messages.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>James F Allen</author>
</authors>
<title>Maintaining Knowledge about Temporal Intervals.</title>
<date>1983</date>
<journal>Comunications of the ACM,</journal>
<volume>26</volume>
<issue>1</issue>
<contexts>
<context position="8728" citStr="Allen (1983)" startWordPosition="1390" endWordPosition="1391">this first day of the month’) In the following we will apply the granularity structure of temporal expressions only with respect to the finer than - coarser than relation between levels of granularity, which is different from the is part of relation between temporal entities. For example, whereas between days and weeks there is a unique functional relationship, namely that there is exactly one week (as standard calendar unit) that an individual day is a part of, a week can temporally overlap with one or two months (Technically, overlap can be realized by temporal relations of Allen-style; see Allen (1983)). Nevertheless, GL-week finer than GL-month holds in the granularity system.3 2Whether the GL-week information remains implicit, i.e. is inferable from duration, or is made explicit, i.e. coded by a GL-week-stamp, depends on some design decisions dependent on the conceptual richness of domain modelling. For example, in a standardised world of ISO-weeks, which start on Monday, only, it is not necessary to use GL-weekstamps. On the other hand, if ISO-weeks, and business weeks—of five-day length— are conceptual alternatives, then it is appropriate to use explicit granularity-level stamps. 3The p</context>
<context position="10286" citStr="Allen, 1983" startWordPosition="1630" endWordPosition="1631">o the temporal and spatial limitations of this paper, we can not go into the details here. 2.2.2 Definition of temporal relations Temporal relations are explicitely marked by temporal prepositions (e.g. before, on or by). We use the following seven temporal relation: before, after, incl, at, starts, finishes, excl. The preposition on as in on Friday, for instance, denotes the inclusion relation incl, whereas the preposition by as in by Friday is represented as finishes. Note that the seven temporal relations employed by the current version are equivalent to sets of Allen’s interval relations (Allen, 1983).4 Table 1: the temporal relations used 3 Extraction of temporal information Similar to other approaches to information extraction or tagging, a cascade of Finite State Transducers (FST) was employed. The following sections provides a brief introduction to this technique before the overall system architecture is described in more detail.5 3.1 Preliminaries The temporal expression chunks are extracted via an FST. FSTs are basically automata that have transitions labelled with a translation instruction. A label of the form a:b indicates such an translation from a to b. Take as an example the sim</context>
</contexts>
<marker>Allen, 1983</marker>
<rawString>James F. Allen. 1983. Maintaining Knowledge about Temporal Intervals. Comunications of the ACM, 26(1):832–843.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Regina Barzilay</author>
<author>Kathleen McKeown</author>
<author>Michael Elhadad</author>
</authors>
<title>Information fusion in the context of multi-document summarization.</title>
<date>1999</date>
<booktitle>In Proceedings of the 37 Annual Meeting of the ACL,</booktitle>
<pages>550--557</pages>
<location>Maryland, MD, USA.</location>
<marker>Barzilay, McKeown, Elhadad, 1999</marker>
<rawString>Regina Barzilay, Kathleen McKeown, and Michael Elhadad. 1999. Information fusion in the context of multi-document summarization. In Proceedings of the 37 Annual Meeting of the ACL, pages 550– 557, Maryland, MD, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claudio Bettini</author>
<author>Sushil Jajodia</author>
<author>Sean X Wang</author>
</authors>
<title>Time granularities in databases, data mining, and temporal reasoning.</title>
<date>2000</date>
<publisher>Springer-Verlag,</publisher>
<location>Berlin.</location>
<contexts>
<context position="7199" citStr="Bettini et al. (2000)" startWordPosition="1134" endWordPosition="1137">on until the temporal entity build up from natural language is fully specified, i.e. can be anchored in the time-set. 2.2.1 The granular system of temporal entities The temporal information obtained from news messages is organised in a granular system of temporal entities including such granularity levels as GL-day, GL-week, GL-month and GLyear.1 Individual days are anchored by a 1In the present paper we focus on the conception ofgranularity level in semantic and pragmatic inferences. Therefore, we do not discuss the formal notions of granular systems for temporal entities here. Compare, e.g. Bettini et al. (2000), for a framework of temporal granularity, which could be used for the purposes we discuss here. date, e.g. date(2001,3,23), on the time line, i.e. the time-set. Further information, for example, the day of the week, can also be included by an additional slot of the time entity: time = [’Fri’, date(2001,3,23)]. Time entities of coarser granularity levels, e.g. weeks, are represented on the basis of intervals, which can be determined by a start, that is an entity of GL-day, and a specific duration: time = [’Mon’, date(2001,4,2), ’7 days’ ]. 2 The concept of temporal granularity is reflected lin</context>
</contexts>
<marker>Bettini, Jajodia, Wang, 2000</marker>
<rawString>Claudio Bettini, Sushil Jajodia, and Sean X. Wang. 2000. Time granularities in databases, data mining, and temporal reasoning. Springer-Verlag, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inderjet Mani</author>
<author>George Wilson</author>
</authors>
<title>Robust temporal processing of news.</title>
<date>2000</date>
<booktitle>In Proceedings of the 38 Annual Meeting of the Association for Computational Linguistics (ACL</booktitle>
<location>Hong Kong, China.</location>
<contexts>
<context position="1025" citStr="Mani and Wilson (2000)" startWordPosition="140" endWordPosition="143">extracted. The performance of the system was evaluated wrt. a small hand-annotated corpus of news messages. 1 Introduction This paper describes a semantic tagging system that extracts temporal information from news messages. Temporal expressions are defined for this system as chunks of text that express some sort of direct or inferred temporal information. The set of these expressions investigated in the present paper includes dates (e.g. 08.04.2001), prepositional phrases (PPs) containing some time expression (e.g. on Friday), and verbs referring to a situation (e.g. opened). Related work by Mani and Wilson (2000) focuses only on the core temporal expressions neglecting the temporal information conveyed by prepositions (e.g. Friday vs. by Friday). The main part of the system is a temporal expression tagger that employs finite state transducers based on hand-written rules. The tagger was trained on economic news articles obtained from two German news papers and an online news agency (Financial Times Deutschland, die tageszeitung and www.comdirect.de). Based on the syntactic classification of temporal expressions a semantic representation of the extracted chunks is proposed. A clear-cut distinction betwe</context>
<context position="23085" citStr="Mani and Wilson (2000)" startWordPosition="3732" endWordPosition="3736">rige, and therefore, the Monday before this, has to be specified as Montag der vorigen Roche (‘Monday of last week’). 5 Evaluation We evaluated the temporal expression tagger wrt. a small corpus consisting of 10 news articles taken from Financial Times Deutschland. We can report precision and recall rates regarding the recognition of simple temporal expressions and complex temporal expression phrases. Based on the extracted temporal expression chunks the temporal information was derived and evaluated. 5.1 Tagging results First, the class of simple temporal expressions was tagged and analysed. Mani and Wilson (2000) call this class TIMEX expression (of type TIME or DATE). We computed the precision and recall values for our data regarding this type of expressions in order to obtain a better comparability with the results obtained by this earlier study. However, as pointed out earlier, we consider PPs carrying information regarding temporal relations as quite crucial for the derivation of temporal information. This class of complex temporal expressions provides more detailed information about the temporal information expressed by a text. Table 3 contains the results of the evaluation wrt. the two classes o</context>
<context position="25566" citStr="Mani and Wilson, 2000" startWordPosition="4136" endWordPosition="4139"> to improve in the future. Reference expressed explicit implicit vague Total 49 109 7 Wrong 0 25 0 Precision 84.49 Table 4: performance of the temporal inference derivation 6 Conclusion and outlook We presented a semantic tagging system that automatically tags the occurrence of temporal expressions such as 3. June, on Monday and last month for German news messages. In addition, a semantics for most of the temporal expressions was defined so that temporal inferences were drawn regarding dates and events described. A more complex set of temporal expressions as extracted by recent systems (e.g. (Mani and Wilson, 2000)) was tagged. Our definition of temporal expressions also includes PPs capturing temporal relations. The system achieved an overall precision rate of 84.49 which is likely to go up as soon as the semantic definition of all temporal expressions will be completed. Our system also covers indexical and vague temporal expressions. Temporal reasoning and pragmatic inferences drawn on the basis of these expression is the focus of on-going and future work. The system we described in the present paper is intended to become a part of an experimental multi-document summarisation system currently under de</context>
</contexts>
<marker>Mani, Wilson, 2000</marker>
<rawString>Inderjet Mani and George Wilson. 2000. Robust temporal processing of news. In Proceedings of the 38 Annual Meeting of the Association for Computational Linguistics (ACL 2000), Hong Kong, China.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dragomir R Radev</author>
<author>Kathleen R McKeown</author>
</authors>
<title>Generating natural language summaries from multiple on-line sources.</title>
<date>1998</date>
<journal>Computational Linguistics,</journal>
<volume>24</volume>
<issue>3</issue>
<marker>Radev, McKeown, 1998</marker>
<rawString>Dragomir R. Radev and Kathleen R. McKeown. 1998. Generating natural language summaries from multiple on-line sources. Computational Linguistics, 24(3):469–500.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Helmut Schmid</author>
</authors>
<title>Probabilistic part-of-speech tagging using decision trees.</title>
<date>1994</date>
<booktitle>In Proceedings of International Conference on New Methods in Language Processing.</booktitle>
<contexts>
<context position="12680" citStr="Schmid, 1994" startWordPosition="2026" endWordPosition="2027">ure 1: A simple FST 3.2 Classes of temporal information The FSTs defined are fed by the output of a Part of Speech (POS) tagger.6 The POS tagger specifies the syntactic categories and a lemma for every word of the input text. The syntactic information is then stored in an XML file.7 Given the derived syntactic categories and the lemma information for every word of the text, several FSTs specialised into different classes of temporal expressions are run. Temporal Expressions. One FST consisting of 15 states and 61 arcs tags all occurrences of time6A decision-tree-based POS tagger developed by (Schmid, 1994) was integrated into the system. 7Some of the XML and HTML handling predicates the system uses stem from the PiLLoW package developed by Manuel Hermenegildo and Daniel Cabeza (URL www.clip.dia.fi.upm.es/miscdocs/pillow/pillow.html). denoting temporal expressions. The POS information stored in an XML file as well as a predefined class of temporal lemmas are used by this FST. The class of temporal lemmas used include days of the week (e.g. Friday), months (e.g. April) as well as general temporal descriptions such as midday, week or year. Since German is a very productive language regarding compo</context>
</contexts>
<marker>Schmid, 1994</marker>
<rawString>Helmut Schmid. 1994. Probabilistic part-of-speech tagging using decision trees. In Proceedings of International Conference on New Methods in Language Processing.</rawString>
</citation>
<citation valid="true">
<title>Barzilay et al.,</title>
<date>1998</date>
<marker>1998</marker>
<rawString>12Cf. (Radev and McKeown, 1998; Barzilay et al., 1999)</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>