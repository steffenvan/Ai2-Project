<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.023340">
<title confidence="0.980926">
The Narrator: NLG for digital storytelling
</title>
<author confidence="0.926768">
Mari¨et Theune
</author>
<affiliation confidence="0.966949">
Human Media Interaction
University of Twente
Enschede, The Netherlands
</affiliation>
<email confidence="0.979991">
m.theune@utwente.nl
</email>
<author confidence="0.962428">
Nanda Slabbers
</author>
<affiliation confidence="0.976214666666667">
Human Media Interaction
University of Twente
Enschede, The Netherlands
</affiliation>
<email confidence="0.980719">
nandaslabbers@hotmail.com
</email>
<author confidence="0.988891">
Feikje Hielkema∗
</author>
<affiliation confidence="0.9981465">
Department of Computing Science
University of Aberdeen
</affiliation>
<address confidence="0.777359">
Scotland, UK
</address>
<email confidence="0.996938">
fhielkem@csd.abdn.ac.uk
</email>
<sectionHeader confidence="0.995616" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999957">
We present the Narrator, an NLG component used
for the generation of narratives in a digital story-
telling system. We describe how the Narrator works
and show some examples of generated stories.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999966370370371">
The automatic generation of narratives is still a
largely unexplored field in NLG. Some exceptions
are STORYBOOK (Callaway, 2000), a narrative
prose generation system that can generate many dif-
ferent retellings of the same story (Little Red Rid-
ing Hood) and the architecture for a “narratologi-
cally enhanced NLG system” proposed by L¨onneker
(2005). An NLG system that is actually used in a
digital storytelling application is PRINCE (Herv´as
et al., 2006).
Here we present the Narrator: the NLG compo-
nent of the Virtual Storyteller, a multi-agent system
that automatically creates fairy tales based on the
actions of autonomous character agents in a sim-
ulated story world, where they can perform goal-
oriented actions and experience emotions (Theune
et al., 2004). The emerging story is captured in a
formal representation and fed to the Narrator, which
expresses it in natural language (in our case, Dutch).
In the rest of this paper, we give a brief overview
of the subsequent tasks the Narrator carries out to
generate a fluent, well-formed narrative. We focus
on the generation of referring expressions; a more
detailed description of the entire generation process
can be found in Theune et al. (2007). For more in-
formation concerning various design decisions see
Theune et al. (2006).
</bodyText>
<affiliation confidence="0.758977">
∗ Feikje Hielkema carried out this work while she was at the
University of Groningen, The Netherlands.
</affiliation>
<sectionHeader confidence="0.954932" genericHeader="method">
2 Document planning
</sectionHeader>
<bodyText confidence="0.9999894">
The input for the Narrator is a Fabula (Swartjes and
Theune, 2006): a story representation in the form
of a causal network linking the following plot ele-
ments: actions, events, perceptions, goals, goal out-
comes, and characters’ “internal elements” such as
emotions and beliefs. Possible links between these
elements are motivation, enablement, mental and
physical cause relations. Also, each plot element is
associated with a time stamp (in terms of time steps
in the story world). The (simplified) example Fab-
ula in Figure 1 represents a very short story about
a dwarf who is hungry and believes there is an ap-
ple in the house, leading to the goal to eat the apple.
To achieve this, the dwarf carries out a simple plan:
taking the apple and then eating it, which leads to
the perception and the belief that the apple has been
eaten, signifying a positive goal outcome.
As a first step in turning a Fabula into a Document
Plan, all information that is not relevant for narra-
tion must be pruned away. An example is the stan-
dard perception-belief-positive outcome chain that
follows a successful action: for the narrative, it is
sufficient to mention only that the action was carried
out. Currently, this process is not yet implemented
in the Narrator; however, we assume that in the ex-
ample Fabula, the nodes following the ‘Eat Apple’
action will be pruned away. The next step is to con-
vert the pruned Fabula to a binary tree, replacing the
causal links with appropriate rhetorical relations be-
tween plot elements. The basic rhetorical relations
used in the Narrator are Cause, Contrast, Tempo-
ral and Additive, with more specific subclasses such
as Purpose and Elaboration. When mapping the
links in the Fabula to rhetorical relations, consecu-
tive steps of a plan are connected using a Temporal
</bodyText>
<page confidence="0.997887">
109
</page>
<figureCaption confidence="0.999677">
Figure 1: Fabula (left) and corresponding Document Plan (right).
</figureCaption>
<bodyText confidence="0.999911105263158">
relation. Motivation and psychological cause rela-
tions are mapped to Volitional Cause relations, and
enablement and physical cause relations are mapped
to Non-volitional Cause relations. Additive is the
most general relation. It is used if two plot elements
cause another plot element together, and more in
general to connect two plot elements that do not
have a more specific relation holding between them.
We are currently investigating the automatic deriva-
tion of Contrast relations. The final step is to extend
the Document Plan with a setting and background
information about characters and objects. The ex-
ample Document Plan in Figure 1 shows these ex-
tensions in grey: a Setting element introducing the
protagonist, and an element specifying the name of
the protagonist, connected via an Elaboration rela-
tion. They are in a Temporal-once (Once upon a
time...) relation to the rest of the plot; this relation
was added specifically for the fairy tale domain.
</bodyText>
<sectionHeader confidence="0.7712555" genericHeader="method">
3 Sentence planning, lexicalisation and
syntactic aggregation
</sectionHeader>
<bodyText confidence="0.99991">
Next, the leaves of the Document Plan are mapped
to Dependency Trees. For each type of plot el-
ement a template is available telling exactly how
its arguments should appear in the corresponding
Dependency Tree. For example, actions are ex-
pressed using a straightforward active voice con-
struction, with an optional PP argument to express
instruments, e.g., The knight opened the gate (with
a key).1 For internal states, there are templates for
standard sentences such as The princess was scared
but also for storytelling-style constructions such as
Oh, how happy she was! and She had never been so
happy!, to be used for emotions with a high inten-
sity. After the Dependency Trees are selected, their
nodes are mapped to Dutch words (except the nodes
referring to entities, which are lexicalised as part of
</bodyText>
<footnote confidence="0.97822">
1For reading ease, Narrator output is translated to English.
</footnote>
<figureCaption confidence="0.999748">
Figure 2: Aggregated Dependency Tree.
</figureCaption>
<bodyText confidence="0.99998256">
referring expression generation). The lexical choice
algorithm uses a discourse history, to achieve some
variation in wording by taking into account which
words have been used recently. The words added to
the Dependency Trees are still uninflected, as mor-
phology is taken care of during Surface Realization.
The Narrator uses a syntactic aggregation algo-
rithm that combines pairs of Dependency Trees and
adds an appropriate cue phrase to signal their rhetor-
ical relation. The properties of this cue phrase deter-
mine which syntactic construction is used to com-
bine the Dependency Trees. If the resulting tree
contains repeated elements, these can be ellipted.
Figure 2 shows an example where the subject of the
second clause is deleted (Conjunction Reduction).
A corresponding surface string could be The dwarf
was hungry and believed there was an apple in the
house, expressing the Additive relation in the Docu-
ment Plan of Figure 1. To keep the aggregated sen-
tences from getting too complex, at most three sim-
ple Dependency Trees can be combined. In cases
where this restriction prohibits aggregation, rhetor-
ical relations are expressed using adverbs such as
then, however etc. For a more detailed description
of the aggregation process, see Theune et al. (2006).
</bodyText>
<sectionHeader confidence="0.958443" genericHeader="method">
4 The generation of referring expressions
</sectionHeader>
<bodyText confidence="0.99511275">
To determine whether a pronoun or a noun should
be used to refer to a certain entity, we use a vari-
ant of the algorithms of McCoy and Strube (1999)
and Henschel et al. (2000). Based on an analysis of
</bodyText>
<page confidence="0.989616">
110
</page>
<bodyText confidence="0.999981276595745">
human-written fairy tales we determined that pro-
nouns are dispreferred (1) at the beginning of a para-
graph, (2) if the antecedent has not been mentioned
for two sentences, (3) if a pronoun has been used
four times and the referring expression is the first
one in the sentence. Also, pronouns cannot be used
when the referring expression should express addi-
tional information (e.g., about a character’s emo-
tional state) in the form of an adjective or a relative
clause. If the above conditions do not hold, a pro-
noun is used if there is either strong parallelism or a
causal relationship with the previous clause or sen-
tence (Chambers and Smyth, 1998; Kehler, 2002);
otherwise the decision is based on the salience of
the referent (Lappin and Leass, 1994).
If a noun phrase is to be generated, the referent’s
name (if available) is used in 25% of the cases, ei-
ther on its own or in a construction such as princess
Amalia if the noun describes a function, such as
princess, king or knight. If a description is to be
generated, first a noun has to be selected. Some con-
cepts have both a preferred lexicon entry (the most
common word for that concept) and one or more ad-
ditional entries that are used occasionally for varia-
tion. After having selected the noun, different types
of adjectives can be added. Distinguishing adjec-
tives, necessary to create an unambiguous referring
expression, are selected only for subsequent refer-
ences using a modified version of the algorithm of
Krahmer and Theune (2002). When introducing a
new entity all its properties are mentioned, because
they can be used as distinguishing properties later in
the story. Non-distinguishing adjectives include ad-
jectives describing a character’s internal state, and
‘decorational’ adjectives used to spice up the de-
scriptions of entities that have no specific properties
except their type (e.g., a heavy gate). Finally, an in-
definite article is added when the entity has not been
mentioned before, and a definite article otherwise.
Simple inference rules are used to generate bridg-
ing descriptions. If the referent (e.g., a gate) is re-
lated to a discourse-old entity (e.g., a castle), the
algorithm checks if there is a rule saying “all cas-
tles have gates”. If there are no other salient entities
for which the same rule holds (i.e., that they always
have gates), then a bridging description like the gate
can be used instead of the gate of the castle.
</bodyText>
<sectionHeader confidence="0.967496" genericHeader="method">
5 Surface form generation
</sectionHeader>
<bodyText confidence="0.993418625">
When referring expression generation is finished,
the Surface Realiser linearises the now fully lexi-
calised Dependency Trees. It traverses them depth-
first, ordering the children of each node by gram-
mar rules such as SMAIN → SU + HD + OBJ, which
states that if a parent node has syntactic category
‘SMAIN’ (sentence) and three children with depen-
dency labels ‘SU’ (subject), ‘OBJ’ (direct object)
and ‘HD’ (main verb), then those children should
be ordered in the above way. This particular rule
would for instance be applied to produce the sen-
tence The prince loved Amalia. Any nouns, adjec-
tives and verbs are inflected at the moment they are
linearised. Punctuation is added once linearisation
is complete. This concludes our description of the
Narrator; for more details see (Theune et al., 2007).
</bodyText>
<sectionHeader confidence="0.997429" genericHeader="method">
6 Examples
</sectionHeader>
<bodyText confidence="0.998678315789474">
Our simple example story about the hungry dwarf
is narrated as follows:
Once upon a time there was a dwarf called Plop. He
was hungry and believed there was an apple in a house.2
Therefore he wanted to eat the apple. After Plop had
taken the apple, he ate it.
This story is well-formed and coherent, but
also quite simple. The next story better illustrates
the Narrator’s potential, including examples of
Document Plan extension, aggregation, pronomi-
nalization, and the use of ‘decorational’ adjectives
(a high tree). It was generated from a hand-made
Document Plan (shown in Figure 3), which contains
Contrast relations and paragraph boundaries that
cannot currently be generated automatically by
the Document Planner. So the story illustrates
the output quality that could be achieved by the
Narrator once these remaining Document Planning
problems are resolved:
</bodyText>
<construct confidence="0.581921272727273">
Once upon a time there was a beautiful princess called
Amalia. A knight from afar away country was in love
with her, but she was in love with a young prince. The
knight was jealous, so he wanted to abduct her.
After the knight had climbed a high tree, he jumped
into the princess’ bedroom. She was so scared that she
screamed loudly, but nobody heard her.
The knight grabbed the princess and then he placed
her on his horse. After that he took her to an old and
narrow bridge. On the other side she saw the prince she
was in love with. Oh, how relieved princess Amalia was!
</construct>
<footnote confidence="0.8745975">
2Assuming that the house belongs to Plop, the bridging de-
scription the house would be more appropriate here. However,
in this case the Narrator lacked knowledge about the owner of
the house, so a general indefinite description was produced.
</footnote>
<page confidence="0.995536">
111
</page>
<figureCaption confidence="0.997583">
Figure 3: Initial Document Plan for the second example story.
</figureCaption>
<sectionHeader confidence="0.957856" genericHeader="conclusions">
7 Concluding remarks
</sectionHeader>
<bodyText confidence="0.999984857142857">
The Narrator has been implemented (in Java), but
so far has only been tested with hand-made input
structures, because parts of the Document Planner
and of the Virtual Storyteller’s plot generation com-
ponent are still under construction. So far, the only
evaluations have been informal comparisons with
earlier versions. The Narrator does not employ
the kind of narratological knowledge proposed by
L¨onneker (2005), and unlike STORYBOOK it can-
not handle narrative aspects such as multiple view-
points or character dialogue. However, it can gener-
ate well-formed and fluent stories containing some
typical narrative constructions. Currently being in-
vestigated are the automatic placement of paragraph
boundaries, detection of contrast relations and lex-
icalisation of emotions, taking their intensity into
account. In addition, as pointed out by one of our
reviewers, it would be beneficial to add a form of se-
mantic aggregation to the system, grouping related
plot elements together during document planning.
Our main long-term challenge is to generate texts
that are not only grammatical and coherent, but that
can also really affect the reader by employing nar-
rative techniques such as the use of subjective per-
spectives to heighten identification, and foreshad-
owing to increase suspense. Ablation tests in the
style of Callaway (2000) could then be used to eval-
uate the effect of such techniques.
</bodyText>
<sectionHeader confidence="0.997991" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.934678023809524">
C. Callaway. 2000. Narrative Prose Generation.
Ph.D. thesis, North Carolina State University,
Raleigh, NC.
G.C. Chambers and R. Smyth. 1998. Structural
parallelism and discourse coherence: A test of
Centering Theory. Journal of Memory and Lan-
guage, 39:593–608.
R. Henschel, H. Cheng, and M. Poesio. 2000.
Pronominalization revisited. In Proceedings of
COLING, pages 306–312.
R. Herv´as, F. Pereira, P. Gerv´as, and A. Cardoso.
2006. Cross-domain analogy in automated text
generation. In Proceedings of the Third joint
workshop on Computational Creativity, ECAI’06.
A. Kehler. 2002. Coherence, Reference, and the
Theory of Grammar. CSLI Publications.
E. Krahmer and M. Theune. 2002. Efficient
context-sensitive generation of referring expres-
sions. In K. van Deemter and R. Kibble, editors,
Information Sharing: Reference and Presupposi-
tion in Language Generation and Interpretation,
pages 223–264. CSLI Publications.
S. Lappin and H. Leass. 1994. An algorithm for
pronominal anaphora resolution. Computational
Linguistics, 20(4):535–561.
B. L¨onneker. 2005. Narratological knowledge for
natural language generation. In Proceedings of
the 10th European Workshop on Natural Lan-
guage Generation (ENLG-05), pages 91–100.
K.E. McCoy and M. Strube. 1999. Generating
anaphoric expressions: Pronoun or definite de-
scription? In Proceedings of the ACL Workshop
on The Relation of Discourse/Dialogue Structure
and Reference, pages 63–71.
I. Swartjes and M. Theune. 2006. A Fabula model
for emergent narrative. In Technologies for In-
teractive Digital Storytelling and Entertainment
(TIDSE), LNCS 4326, pages 95–100.
M. Theune, S. Rensen, R. op den Akker, D. Heylen,
and A. Nijholt. 2004. Emotional characters for
automatic plot creation. In Technologies for In-
teractive Digital Storytelling and Entertainment
</reference>
<bodyText confidence="0.879080625">
(TIDSE), LNCS 3105, pages 95–100.
M. Theune, F. Hielkema, and P. Hendriks. 2006.
Performing aggregation and ellipsis using dis-
course structures. Research on Language and
Computation, 4(4):353–375.
M. Theune, N. Slabbers, and F. Hielkema. 2007.
The automatic generation of narratives. In Pro-
ceedings of CLIN-17. to appear.
</bodyText>
<page confidence="0.997303">
112
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.078686">
<title confidence="0.808123">The Narrator: NLG for digital storytelling Mari¨et</title>
<author confidence="0.59465">Human Media</author>
<affiliation confidence="0.9075505">University of Enschede, The</affiliation>
<email confidence="0.861759">m.theune@utwente.nl</email>
<author confidence="0.489001">Nanda</author>
<affiliation confidence="0.898001666666667">Human Media University of Enschede, The</affiliation>
<email confidence="0.999118">nandaslabbers@hotmail.com</email>
<affiliation confidence="0.850212">Department of Computing University of Scotland,</affiliation>
<email confidence="0.999793">fhielkem@csd.abdn.ac.uk</email>
<abstract confidence="0.9992718">We present the Narrator, an NLG component used for the generation of narratives in a digital storytelling system. We describe how the Narrator works and show some examples of generated stories.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C Callaway</author>
</authors>
<title>Narrative Prose Generation.</title>
<date>2000</date>
<tech>Ph.D. thesis,</tech>
<institution>North Carolina State University,</institution>
<location>Raleigh, NC.</location>
<contexts>
<context position="717" citStr="Callaway, 2000" startWordPosition="94" endWordPosition="95"> Enschede, The Netherlands m.theune@utwente.nl Nanda Slabbers Human Media Interaction University of Twente Enschede, The Netherlands nandaslabbers@hotmail.com Feikje Hielkema∗ Department of Computing Science University of Aberdeen Scotland, UK fhielkem@csd.abdn.ac.uk Abstract We present the Narrator, an NLG component used for the generation of narratives in a digital storytelling system. We describe how the Narrator works and show some examples of generated stories. 1 Introduction The automatic generation of narratives is still a largely unexplored field in NLG. Some exceptions are STORYBOOK (Callaway, 2000), a narrative prose generation system that can generate many different retellings of the same story (Little Red Riding Hood) and the architecture for a “narratologically enhanced NLG system” proposed by L¨onneker (2005). An NLG system that is actually used in a digital storytelling application is PRINCE (Herv´as et al., 2006). Here we present the Narrator: the NLG component of the Virtual Storyteller, a multi-agent system that automatically creates fairy tales based on the actions of autonomous character agents in a simulated story world, where they can perform goaloriented actions and experie</context>
</contexts>
<marker>Callaway, 2000</marker>
<rawString>C. Callaway. 2000. Narrative Prose Generation. Ph.D. thesis, North Carolina State University, Raleigh, NC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G C Chambers</author>
<author>R Smyth</author>
</authors>
<title>Structural parallelism and discourse coherence: A test of Centering Theory.</title>
<date>1998</date>
<journal>Journal of Memory and Language,</journal>
<pages>39--593</pages>
<contexts>
<context position="7953" citStr="Chambers and Smyth, 1998" startWordPosition="1287" endWordPosition="1290"> we determined that pronouns are dispreferred (1) at the beginning of a paragraph, (2) if the antecedent has not been mentioned for two sentences, (3) if a pronoun has been used four times and the referring expression is the first one in the sentence. Also, pronouns cannot be used when the referring expression should express additional information (e.g., about a character’s emotional state) in the form of an adjective or a relative clause. If the above conditions do not hold, a pronoun is used if there is either strong parallelism or a causal relationship with the previous clause or sentence (Chambers and Smyth, 1998; Kehler, 2002); otherwise the decision is based on the salience of the referent (Lappin and Leass, 1994). If a noun phrase is to be generated, the referent’s name (if available) is used in 25% of the cases, either on its own or in a construction such as princess Amalia if the noun describes a function, such as princess, king or knight. If a description is to be generated, first a noun has to be selected. Some concepts have both a preferred lexicon entry (the most common word for that concept) and one or more additional entries that are used occasionally for variation. After having selected th</context>
</contexts>
<marker>Chambers, Smyth, 1998</marker>
<rawString>G.C. Chambers and R. Smyth. 1998. Structural parallelism and discourse coherence: A test of Centering Theory. Journal of Memory and Language, 39:593–608.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Henschel</author>
<author>H Cheng</author>
<author>M Poesio</author>
</authors>
<title>Pronominalization revisited.</title>
<date>2000</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>306--312</pages>
<contexts>
<context position="7274" citStr="Henschel et al. (2000)" startWordPosition="1168" endWordPosition="1171"> house, expressing the Additive relation in the Document Plan of Figure 1. To keep the aggregated sentences from getting too complex, at most three simple Dependency Trees can be combined. In cases where this restriction prohibits aggregation, rhetorical relations are expressed using adverbs such as then, however etc. For a more detailed description of the aggregation process, see Theune et al. (2006). 4 The generation of referring expressions To determine whether a pronoun or a noun should be used to refer to a certain entity, we use a variant of the algorithms of McCoy and Strube (1999) and Henschel et al. (2000). Based on an analysis of 110 human-written fairy tales we determined that pronouns are dispreferred (1) at the beginning of a paragraph, (2) if the antecedent has not been mentioned for two sentences, (3) if a pronoun has been used four times and the referring expression is the first one in the sentence. Also, pronouns cannot be used when the referring expression should express additional information (e.g., about a character’s emotional state) in the form of an adjective or a relative clause. If the above conditions do not hold, a pronoun is used if there is either strong parallelism or a cau</context>
</contexts>
<marker>Henschel, Cheng, Poesio, 2000</marker>
<rawString>R. Henschel, H. Cheng, and M. Poesio. 2000. Pronominalization revisited. In Proceedings of COLING, pages 306–312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Herv´as</author>
<author>F Pereira</author>
<author>P Gerv´as</author>
<author>A Cardoso</author>
</authors>
<title>Cross-domain analogy in automated text generation.</title>
<date>2006</date>
<booktitle>In Proceedings of the Third joint workshop on Computational Creativity, ECAI’06.</booktitle>
<marker>Herv´as, Pereira, Gerv´as, Cardoso, 2006</marker>
<rawString>R. Herv´as, F. Pereira, P. Gerv´as, and A. Cardoso. 2006. Cross-domain analogy in automated text generation. In Proceedings of the Third joint workshop on Computational Creativity, ECAI’06.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kehler</author>
</authors>
<title>Coherence, Reference, and the Theory of Grammar.</title>
<date>2002</date>
<publisher>CSLI Publications.</publisher>
<contexts>
<context position="7968" citStr="Kehler, 2002" startWordPosition="1291" endWordPosition="1292">ns are dispreferred (1) at the beginning of a paragraph, (2) if the antecedent has not been mentioned for two sentences, (3) if a pronoun has been used four times and the referring expression is the first one in the sentence. Also, pronouns cannot be used when the referring expression should express additional information (e.g., about a character’s emotional state) in the form of an adjective or a relative clause. If the above conditions do not hold, a pronoun is used if there is either strong parallelism or a causal relationship with the previous clause or sentence (Chambers and Smyth, 1998; Kehler, 2002); otherwise the decision is based on the salience of the referent (Lappin and Leass, 1994). If a noun phrase is to be generated, the referent’s name (if available) is used in 25% of the cases, either on its own or in a construction such as princess Amalia if the noun describes a function, such as princess, king or knight. If a description is to be generated, first a noun has to be selected. Some concepts have both a preferred lexicon entry (the most common word for that concept) and one or more additional entries that are used occasionally for variation. After having selected the noun, differe</context>
</contexts>
<marker>Kehler, 2002</marker>
<rawString>A. Kehler. 2002. Coherence, Reference, and the Theory of Grammar. CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Krahmer</author>
<author>M Theune</author>
</authors>
<title>Efficient context-sensitive generation of referring expressions.</title>
<date>2002</date>
<booktitle>Information Sharing: Reference and Presupposition in Language Generation and Interpretation,</booktitle>
<pages>223--264</pages>
<editor>In K. van Deemter and R. Kibble, editors,</editor>
<publisher>CSLI Publications.</publisher>
<contexts>
<context position="8803" citStr="Krahmer and Theune (2002)" startWordPosition="1434" endWordPosition="1437"> or in a construction such as princess Amalia if the noun describes a function, such as princess, king or knight. If a description is to be generated, first a noun has to be selected. Some concepts have both a preferred lexicon entry (the most common word for that concept) and one or more additional entries that are used occasionally for variation. After having selected the noun, different types of adjectives can be added. Distinguishing adjectives, necessary to create an unambiguous referring expression, are selected only for subsequent references using a modified version of the algorithm of Krahmer and Theune (2002). When introducing a new entity all its properties are mentioned, because they can be used as distinguishing properties later in the story. Non-distinguishing adjectives include adjectives describing a character’s internal state, and ‘decorational’ adjectives used to spice up the descriptions of entities that have no specific properties except their type (e.g., a heavy gate). Finally, an indefinite article is added when the entity has not been mentioned before, and a definite article otherwise. Simple inference rules are used to generate bridging descriptions. If the referent (e.g., a gate) is</context>
</contexts>
<marker>Krahmer, Theune, 2002</marker>
<rawString>E. Krahmer and M. Theune. 2002. Efficient context-sensitive generation of referring expressions. In K. van Deemter and R. Kibble, editors, Information Sharing: Reference and Presupposition in Language Generation and Interpretation, pages 223–264. CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Lappin</author>
<author>H Leass</author>
</authors>
<title>An algorithm for pronominal anaphora resolution.</title>
<date>1994</date>
<journal>Computational Linguistics,</journal>
<volume>20</volume>
<issue>4</issue>
<contexts>
<context position="8058" citStr="Lappin and Leass, 1994" startWordPosition="1304" endWordPosition="1307">as not been mentioned for two sentences, (3) if a pronoun has been used four times and the referring expression is the first one in the sentence. Also, pronouns cannot be used when the referring expression should express additional information (e.g., about a character’s emotional state) in the form of an adjective or a relative clause. If the above conditions do not hold, a pronoun is used if there is either strong parallelism or a causal relationship with the previous clause or sentence (Chambers and Smyth, 1998; Kehler, 2002); otherwise the decision is based on the salience of the referent (Lappin and Leass, 1994). If a noun phrase is to be generated, the referent’s name (if available) is used in 25% of the cases, either on its own or in a construction such as princess Amalia if the noun describes a function, such as princess, king or knight. If a description is to be generated, first a noun has to be selected. Some concepts have both a preferred lexicon entry (the most common word for that concept) and one or more additional entries that are used occasionally for variation. After having selected the noun, different types of adjectives can be added. Distinguishing adjectives, necessary to create an una</context>
</contexts>
<marker>Lappin, Leass, 1994</marker>
<rawString>S. Lappin and H. Leass. 1994. An algorithm for pronominal anaphora resolution. Computational Linguistics, 20(4):535–561.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B L¨onneker</author>
</authors>
<title>Narratological knowledge for natural language generation.</title>
<date>2005</date>
<booktitle>In Proceedings of the 10th European Workshop on Natural Language Generation (ENLG-05),</booktitle>
<pages>91--100</pages>
<marker>L¨onneker, 2005</marker>
<rawString>B. L¨onneker. 2005. Narratological knowledge for natural language generation. In Proceedings of the 10th European Workshop on Natural Language Generation (ENLG-05), pages 91–100.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K E McCoy</author>
<author>M Strube</author>
</authors>
<title>Generating anaphoric expressions: Pronoun or definite description?</title>
<date>1999</date>
<booktitle>In Proceedings of the ACL Workshop on The Relation of Discourse/Dialogue Structure and Reference,</booktitle>
<pages>63--71</pages>
<contexts>
<context position="7247" citStr="McCoy and Strube (1999)" startWordPosition="1163" endWordPosition="1166">ed there was an apple in the house, expressing the Additive relation in the Document Plan of Figure 1. To keep the aggregated sentences from getting too complex, at most three simple Dependency Trees can be combined. In cases where this restriction prohibits aggregation, rhetorical relations are expressed using adverbs such as then, however etc. For a more detailed description of the aggregation process, see Theune et al. (2006). 4 The generation of referring expressions To determine whether a pronoun or a noun should be used to refer to a certain entity, we use a variant of the algorithms of McCoy and Strube (1999) and Henschel et al. (2000). Based on an analysis of 110 human-written fairy tales we determined that pronouns are dispreferred (1) at the beginning of a paragraph, (2) if the antecedent has not been mentioned for two sentences, (3) if a pronoun has been used four times and the referring expression is the first one in the sentence. Also, pronouns cannot be used when the referring expression should express additional information (e.g., about a character’s emotional state) in the form of an adjective or a relative clause. If the above conditions do not hold, a pronoun is used if there is either </context>
</contexts>
<marker>McCoy, Strube, 1999</marker>
<rawString>K.E. McCoy and M. Strube. 1999. Generating anaphoric expressions: Pronoun or definite description? In Proceedings of the ACL Workshop on The Relation of Discourse/Dialogue Structure and Reference, pages 63–71.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Swartjes</author>
<author>M Theune</author>
</authors>
<title>A Fabula model for emergent narrative.</title>
<date>2006</date>
<booktitle>In Technologies for Interactive Digital Storytelling and Entertainment (TIDSE), LNCS 4326,</booktitle>
<pages>95--100</pages>
<contexts>
<context position="2067" citStr="Swartjes and Theune, 2006" startWordPosition="313" endWordPosition="316"> expresses it in natural language (in our case, Dutch). In the rest of this paper, we give a brief overview of the subsequent tasks the Narrator carries out to generate a fluent, well-formed narrative. We focus on the generation of referring expressions; a more detailed description of the entire generation process can be found in Theune et al. (2007). For more information concerning various design decisions see Theune et al. (2006). ∗ Feikje Hielkema carried out this work while she was at the University of Groningen, The Netherlands. 2 Document planning The input for the Narrator is a Fabula (Swartjes and Theune, 2006): a story representation in the form of a causal network linking the following plot elements: actions, events, perceptions, goals, goal outcomes, and characters’ “internal elements” such as emotions and beliefs. Possible links between these elements are motivation, enablement, mental and physical cause relations. Also, each plot element is associated with a time stamp (in terms of time steps in the story world). The (simplified) example Fabula in Figure 1 represents a very short story about a dwarf who is hungry and believes there is an apple in the house, leading to the goal to eat the apple.</context>
</contexts>
<marker>Swartjes, Theune, 2006</marker>
<rawString>I. Swartjes and M. Theune. 2006. A Fabula model for emergent narrative. In Technologies for Interactive Digital Storytelling and Entertainment (TIDSE), LNCS 4326, pages 95–100.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Theune</author>
<author>S Rensen</author>
<author>R op den Akker</author>
<author>D Heylen</author>
<author>A Nijholt</author>
</authors>
<title>Emotional characters for automatic plot creation.</title>
<date>2004</date>
<booktitle>In Technologies for Interactive Digital Storytelling and Entertainment</booktitle>
<marker>Theune, Rensen, den Akker, Heylen, Nijholt, 2004</marker>
<rawString>M. Theune, S. Rensen, R. op den Akker, D. Heylen, and A. Nijholt. 2004. Emotional characters for automatic plot creation. In Technologies for Interactive Digital Storytelling and Entertainment</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>