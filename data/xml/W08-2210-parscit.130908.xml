<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.99845475">
Analyzing the Explanation
Structure of Procedural Texts:
Dealing with Advice and
Warnings
</title>
<author confidence="0.974818">
Lionel Fontan
Patrick Saint-Dizier
</author>
<affiliation confidence="0.802228">
IRIT, Toulouse (France)
</affiliation>
<email confidence="0.993116">
email: stdizier@irit.fr
</email>
<sectionHeader confidence="0.989342" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999927692307692">
We present the explanation structure of procedural texts, focusing on the
analysis of argumentation, in particular advice and warnings. Their role is
to support and motivate the goal-instruction structure, which is the skele-
ton of procedural texts. Procedural texts consist of a sequence of instruc-
tions, designed with some accuracy in order to reach a goal (e.g. assemble
a computer). Procedural texts may also include subgoals. Goals and sub-
goals are most of the time realized by means of titles and subtitles. The
user must carefully follow step by step the given instructions in order to
reach the goal. We introduce the notion of instructional compound, which
is a complex structure that articulates instructions with various discourse
elements. We then show how arguments can be extracted with the help of
patterns. We finally investigate their contribution to the structure and the
understanding of procedural texts.
</bodyText>
<page confidence="0.997958">
115
</page>
<note confidence="0.949965">
116 Fontan and Saint-Dizier
</note>
<sectionHeader confidence="0.994008" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.994241346938775">
The main goal of our project is to analyze the structure of procedural texts in order to
efficiently and accurately respond to How-to-do-X? questions. This means identifying
titles (which convey the main goals of the procedure), sequences of instructions serv-
ing these goals, and a number of additional structures such as prerequisites, warnings,
advice, illustrations, etc. (Takechi et al. 2003, Adam, 2001). A response to an How-to
question is then the well-formed text portion within the scope of the title that matches
the question.
In our perspective, procedural texts range from apparently simple cooking recipes
to large maintenance manuals. They also include documents as diverse as teaching
texts, medical notices, social behavior recommendations, directions for use, assembly
notices, do-it-yourself notices, itinerary guides, advice texts, savoir-faire guides etc.
(Aouladomar et al., 2005). Procedural texts follow a number of structural criteria,
whose realization may depend on the author’s writing abilities, on the target user,
and on traditions associated with a given domain. Procedural texts can be regulatory,
procedural, programmatory, prescriptive or injunctive. The work we report here was
carried out on a development corpus of 1,700 French texts taken from the Web from
most of the areas cited above, and extracted randomly from our more global corpus of
8,000 texts.
We have developed a detailed analysis of procedural texts from a manual corpus
analysis, identifying their main basic components as well as their global structure.
For that purpose, we have defined two levels: a segmentation level that basically iden-
tifies structures considered as terminal structures (titles, instructions, prerequisites,
connectors, etc.) and a grammar level that binds these terminal structures to give a
global structure to procedural texts (Delpech et al. 2008). This structure is textual and
dedicated only to elements relevant to procedurality. To design the grammar, we have
borrowed a few considerations from Minimalist syntax, in particular recent develop-
ments of X-bar syntax and notions like merge. This point will not be developed here
(but see Delpech et al. 2007). Note that text grammars are generally in a relatively
early development stage (Webber 2004, Gardent 1997).
Procedural texts are complex structures, they often exhibit a quite complex rational
(the instructions) and ’irrational’ structure which is mainly composed out of pieces of
advice, conditions, preferences, evaluations, user stimulations, etc. They form what
we call the explanation structure, which motivates and justifies the goal-instructions
structure, viewed as the backbone of procedural texts. A number of these elements
are forms of argumentation, they appear to be very useful, sometimes as important as
instructions, they provide a strong and essential internal cohesion and coherence to
procedural texts.
An important aspect of this project is the accurate identification of the explana-
tion structure as found in procedural texts in order to better understand explanation
strategies deployed by humans in precise, concrete and operational situations and to
transpose it to the generation of explanations in general and in cooperative question-
answering systems in particular. We have already studied the instructional aspects
of procedural texts and implemented a quite efficient prototype within the TextCoop
project (Delpech et al. 2008) that tags titles and instructions with dedicated XML
tags. In this paper, after a categorization of explanation structure as found in our cor-
Analyzing the Explanation Structure of Procedural Texts 117
pus of procedural texts, and the presentation of instructional compounds, we focus on
the recognition of warnings and advice. The work is realized for French, examples in
English are just glosses.
</bodyText>
<sectionHeader confidence="0.9515" genericHeader="method">
2 The explanation structure in procedural texts
</sectionHeader>
<bodyText confidence="0.999923">
We will introduce two independent structures: the general organization of the expla-
nation structure, and the notion of instructional compound.
</bodyText>
<subsectionHeader confidence="0.99744">
2.1 A global view of the explanation structure
</subsectionHeader>
<bodyText confidence="0.999857733333333">
Procedural texts have a very rich semantic structure, with a large number of facets.
From our development corpus (1,700 web texts of 1–3 pages), we established a clas-
sification of the different forms explanations may take. The explanation structure is
meant to guide the user in two ways: (1) by making sure that he will effectively real-
ize actions as they are specified, via arguments (Amgoud et al. 2001, 2005) such as
threats, rewards, advice and warnings which are ’coercitive’ in a certain sense, and (2)
help considerations such as evaluation of work realized so far and encouragements of
different kinds.
The main structures we have identified in this type of text are facilitation and argu-
mentation structures. They are either global (adjoined to goals, and having scope over
the whole procedure) or local, included into instructional compounds, with a scope
local to the instructional compound (see next section). The latter is by far the most
frequently encountered case.
Explanation structures can be organized as follows (the terminology is borrowed
from existing work on rhetorical relations or introduced by ourselves):
</bodyText>
<listItem confidence="0.9921706">
• facilitation structures, which are rhetorical in essence (Kosseim et al. 2000,
Vander Linden 1993), correspond to How to do X? questions, these include two
subcategories:
1. user help, with: hints, evaluations and encouragements;
2. controls on instruction realization, with two cases:
(a) controls on actions: guidance, focusing, expected result and elabora-
tion;
(b) controls on user interpretations: definitions, reformulations, illustra-
tions and also elaborations.
• argumentation structures, corresponding to Why do X? questions. These have
either:
1. positive orientation with the author involvement (promises) or not (advice
and justifications), or
2. negative orientation with the author involvement (threats) or not (warn-
ings).
</listItem>
<bodyText confidence="0.921432125">
In what follows, we will mainly concentrate on this second point, and in partic-
ular on warnings and advice which are the most frequently encountered arguments
(since there are rarely involvements from the author). Roughly, we have about 25%
118 Fontan and Saint-Dizier
of instructions which have arguments in do-it-yourself texts, and up to 60% in social
procedural texts. Argumentation structures are relatively general to an application do-
main, while facilitation structures are much more specific to the text and the targeted
audiences.
</bodyText>
<subsectionHeader confidence="0.991799">
2.2 From instructions to instructional compounds
</subsectionHeader>
<bodyText confidence="0.9992983">
In most types of texts, we do not just find sequences of simple instructions but more
complex compounds composed of clusters of instructions, that exhibit a number of se-
mantic contextual dependencies between each other, that we call instructional com-
pounds. These compounds are organized around a few main instructions, to which
a number of subordinate instructions, warnings, arguments, and explanations of var-
ious sorts may possibly be adjoined. All these elements are, in fact, essential in a
compound for a good understanding of the procedure at stake.
An instructional compound has a very rich, but relatively well organized, discourse
structure, composed of several layers, which correspond to the different aspects in-
structions may have. The structure is the following:
</bodyText>
<listItem confidence="0.775178333333333">
• The goal and justification level, which has in general wider scope over the re-
mainder of the compound. It indicates motivations for doing actions that follow
in the compound (e.g. You must regularly clean the curtains of your bedroom:
to do this ...; To change your mother card, you must..., which here motivates
actions to undertake). It gives the fundamental motivation of the compound.
Compared to titles, these introduce very local goals. These are not considered
in the goal hierarchy introduced by titles, and they will not be considered for
question answering.
• The instruction core (or kernel) structure, which contains the main instruc-
</listItem>
<bodyText confidence="0.8630098">
tions. These are more or less explicitly temporally organized (see below). In
general simple sequentiality prevails, the goal being to limit the intellectual load
imposed to the user. Actions are identified most frequently via the presence of
action verbs (in relation to the domain) in the imperative form, or in the infinitive
form introduced by a modal (Delpech et al. 2008). We observed also a number
of subordinated instructions forms adjoined to the main instructions. These are
in general organized within the compound by means of rhetorical relations, as
the examples below will illustrate.
• The deontic and illocutionary force structures: consist of marks that oper-
ate over instructions, outlining different parameters. These linguistic structures
play a major role in argumentation:
– deontic: obligatory, optional, forbidden or impossible, alternates (or),
– illocutionary and related aspects: stresses the importance of actions: nec-
essary, advised, recommended, to be avoided, etc. These marks are crucial
to identify the weight of an argument.
</bodyText>
<listItem confidence="0.949567888888889">
• a temporal structure that organizes sequences of instructions (and, at a higher
level, instructional compounds). In general, the temporal structure is simple,
Analyzing the Explanation Structure of Procedural Texts 119
sequentiality prevails. In some cases, parallel actions are specified, which par-
tially overlap. Action verbs may indicate some form of parallelism of actions
(incorporate and stir). In other cases it is the user’s experience that determines
the exact temporal interpretation.
• The conditional structure: introduces conditions over instructions within the
compound or even over the whole instructional compound. We encounter quite
a lot of structures organizing mutually exclusive cases If you are pregant, take
medicine X ..., if you are not pregnant and between 19 and 65, it is advised that
you take medecine Y, ...
• The rhetorical structure whose goal is to enrich the core instructions by means
of a number of subordinated aspects (realized as propositions, possibly instruc-
tions) among which, most notably: enablement, basic forms of motivation, cir-
cumstance, elaboration, instrument, precaution, manner. A group of relations
of particular interest in this paper are arguments, developed hereafter.
• The causal structure indicating the goal of an action. We identified in pro-
</listItem>
<bodyText confidence="0.940942638888889">
cedural texts four types of causal relations, following (Talmy 2001): intend-to
(direct objective of an action: push the button to start the engine), Instrumented
(use a 2 inch key to dismount the door), Facilitation (enlarge the hole to bet-
ter empty the tank) and Continue (keep the liquid warm till its color changes).
These are local to a single instruction, with no a priori interaction with the goal
or justification level advocated above.
Explanations and arguments help the reader understand why an instruction must be
followed and what are the risks or the drawbacks if he does not do it properly. We
will illustrate this with two instructional compound examples. In the first example, we
have three main instructions, and an elaboration is adjoined to the second one. The
temporal relations are simple (realized by then, and) and are not represented:
[instructional−compound
[instruction The first step consists in opening the computer box,]
[instruction then to place it on a large, clean surface,
[elaboration or precaution where you make sure there is no risk to
damage electronic components,]]
[instruction and then to withdraw all the caches at the PC front.]]
In the second example, an argument of type advice is introduced; it is composed of
two instructions (later called conclusions) and a conjunction of three supports which
motivate the two instructions.
[instructional−compound
[goal To clean leather armchairs,]
[argument:advice
[instruction choose specialized products dedicated to furniture],
[instruction and prefer them colorless,]
[support they will play a protection role, add beauty, and repair
some small damages.]]]
120 Fontan and Saint-Dizier
Identifying rhetorical relations in this type of text is not straightforward. Some rela-
tions have a few marks associated whereas others are largely pragmatic and need some
knowledge of the domain to be identified by a reader. We observed a few, partial, hi-
erarchical relations between the items that build up an instructional compound. Scope
priorities come in three groups. The first group is composed of goals and conditions,
then, at a second level come causal, deontic and illucotionary elements operating over
instructions. At the lower level, we have subordinated instructions, attached to the
core instructions.
</bodyText>
<subsectionHeader confidence="0.999683">
2.3 Implementation of instructional compounds
</subsectionHeader>
<bodyText confidence="0.999515333333333">
The actual schema for recognizing instructional compounds is quite simple at the mo-
ment, but results are quite satisfactory. Basically, such a compound contains at least
one instruction. It is then delimited as follows:
</bodyText>
<listItem confidence="0.913644">
• any element in an enumeration (typographically marked) is an instructional
compound,
• in a paragraph which is not an enumeration, an instructional compound is de-
limited by expressions which induce an idea of strong break (even though this
</listItem>
<bodyText confidence="0.977128333333333">
term is quite fuzzy). Such marks are for example: goal or conditional expres-
sion, end of paragraph, strong temporal mark (after two hours, when this is over,
at the end of, and so on).
We have manually annotated 160 procedural texts. This is not an easy task due
to the complexity of the structures at stake. Then these were compared with results
obtained automatically. These will be used fully or in part to test the system. We
selected texts we understand so that the risk of errors is limited as much as possible.
This is presented in detail in (Delpech et al. 2008) where Kappa tests are realized to
evaluate the homogeneity of human judgements.
For instructional compounds, for the three domains with best title and instruction
recognition rate (do it yourself, cooking, and social life), we obtained the following
results, based on a small corpus of data (60 texts):
</bodyText>
<table confidence="0.996718">
Domain Recall Precision
cooking receipes 0.95 1.00
do it Yourself 0.89 0.98
social life 0.88 0.98
</table>
<bodyText confidence="0.9994475">
We have not yet attempted to implement an efficient system, but we are able to fully
tag about 500 million web pages per hour, on a Pentium 4 3GhZ dual core machine
with 4 Gigabyte RAM. This process includes cleaning web pages, running TreeTagger,
and tagging titles, instructions and instructional compounds.
</bodyText>
<sectionHeader confidence="0.976823" genericHeader="method">
3 Identifying arguments in procedures
</sectionHeader>
<bodyText confidence="0.939691">
In this section let us first give a quite informal definition of what an argument is, and
how it interacts with the goal-instructions structure. Let us then focus on warnings and
advice which are, by far, the most frequently encountered structures. Most warnings
and advice are included into instructional compounds.
Analyzing the Explanation Structure of Procedural Texts 121
</bodyText>
<subsectionHeader confidence="0.998644">
3.1 Argumentation and Action theories
</subsectionHeader>
<bodyText confidence="0.974238285714286">
Roughly, argumentation is a process that allows speakers to construct statements for
or against another statement called the conclusion. These former statements are called
supports. The general form of an argument is: Conclusion ’because’ Support (noted
as C because S). In natural language, conclusions usually appear before the support,
but they may also appear after, to stress the support. A conclusion may receive sev-
eral supports, possibly of different natures (advice and warnings): don’t add natural
fertilizer, this may attract insects, which will damage your young plants. Arguments
may be more or less strong, they bear in general a certain weight, mostly induced from
the words they contain or from their syntactic construction (Anscombre et al. 1981,
Moeschler 1985, Amgoud et al. 2001). In natural contexts, this weight is somewhat
vague.
In the case of procedural texts, the representation and the role of arguments in a
text can be modeled roughly as follows. Let G be a goal which can be reached by the
sequence of instructions Ai, i ∈ [1,n], whatever their exact temporal structure is. Any
instruction Ai is associated with a pair (gi, pi) where gi is the gain associated with Ai
(there is a gain only in case where Ai is a piece of advice, improving G) and pi is the
penalty in case where the user (partly of fully) fails to realize Ai.
A subset of Ai are interpreted as explicit arguments (Ai, is a conclusion) when they
are explicitly paired with a support Si that stresses the importance of Ai (Carefully
plug in your mother card vertically, otherwise you will damage the connectors) or
when advice is given. Their general form is: Aj because Sj (we use here the term
’because’ which is more vague than the implication symbol used in formal argumen-
tation, because natural language is not so radical). Supports Sk which are negatively
oriented are warnings whereas those which are positively oriented are pieces of ad-
vice. Neutral supports simply introduce explanations which are not arguments. For
the other instructions, the support is just implicit (do the action otherwise you will run
into problems).
Similarly to the principles of argumentation theory, but within the framework of
action theory (e.g. Davidson 1963), it is a priori possible to evaluate for a given
realization of the instructions, the gains w.r.t. the goal G (when advice is followed,
improving G) and the penalties (when actions are not well performed, with or without
warnings). In an abstract model, we can assign each instruction a gain and a penalty,
however in practice this is a little bit difficult. At the moment, let’s say that gains are
a priori null, except when we have an instruction of type advice which is realized,
in that case the gain is greater or equal to 1. Penalties are numbers greater than 0,
high penalties corresponding to very crucial instructions. If an instruction is correctly
realized, penalty is 0, if there is a complete failure, penalty is the assigned number,
which may be infinite if the instruction is absolutely crucial.
Given a certain realization by a user, the success of a goal G is the sum of the gains
on the one hand, and the sum of the penalties on the other. Gains and penalties do not
compensate each other but operate at different levels. Since any Ai is in fact realized
successfully to a certain degree by the user, gains and penalties (which are values
given a priori) need to be weighted, i.e. paired with a success measure, respectively
µ and τ, each of these weights being included in [0,1]. Then, for a given execution of
the goal G, we have:
122 Fontan and Saint-Dizier
gain(G) = ∑ni=1 gi × µi penalty(G) = ∑ni=1 pi × τi
As can be noted, our definitions include terms which are gradual: ’more difficult’,
’easier’, because in practice, failing to realize an instruction properly does not neces-
sarily means that the goal cannot be reached, but the user will just be less successful,
for various reasons. In the natural language expressions of conclusions (the Aj) as
well as of supports, there are many modals or classes of verbs (like risk verbs) that
modulate the consequences on G, contrast for example:
use professional products to clean your leathers, they will give them a
brighter aspect.
with:
</bodyText>
<construct confidence="0.8154">
carefully plug in your mother card vertically, otherwise you will most
likely damage its connectors.
</construct>
<bodyText confidence="0.999936">
In the latter case, the goal ’mounting your own PC’ is likely to fail (the instruction
at stake will be assigned a high penalty), whereas in the former, the goal ’cleaning
your leathers’ will just be less successful, but there is a gain gi associated.
</bodyText>
<subsectionHeader confidence="0.999893">
3.2 Processing arguments
</subsectionHeader>
<bodyText confidence="0.999982421052632">
From the above observations, we have investigated the different forms arguments may
take and how they are realized in French. We noted that, in a very large number
of cases, arguments in procedural texts can be identified by means of specific terms,
i.e. there is no need to make complex parses or inferences. For most of them, they
are embedded into instructional compounds, it is therefore quite easy to delimit them.
Their scope is in general the compound, and their delimitation is quite simple. Most of
the time, arguments are introduced by a goal or a cause connector. They are quite often
either a complete, independent sentence following an instruction, or a subordinated
clause ending a sentence. As a result, their recognition is relatively well portable from
one procedural domain to another, with only mainly generic vocabulary involved.
We have defined a set of patterns that recognize instructions which are conclusions
and their related supports. We defined those patterns from a development corpus of
about 1,700 texts from various domains (cooking, do it yourself, gardening, video
games, social advice, etc.). The study is made on French, English glosses are given
here for ease of reading. The recognition problem is twofold: identifying propositions
as conclusions or supports by means of specific linguistic marks and a few typographic
marks, and then delimiting these elements. In general, boundaries are either sentences
or, by default, instructional compound boundaries. In procedural texts, roughly, the
proportion of advice and warnings is almost equivalent.
</bodyText>
<subsectionHeader confidence="0.825566">
Processing warnings
</subsectionHeader>
<bodyText confidence="0.9949295">
Warnings are basically organized around a unique structure composed of an ’avoid
expression’ combined with a proposition. The variations in the ’avoid expressions’
capture the illocutionary force of the argument via several devices, ordered here by
increasing force:
</bodyText>
<listItem confidence="0.95454625">
1. ’prevention verbs like avoid’ NP / to VP (avoid hot water)
Analyzing the Explanation Structure of Procedural Texts 123
2. do not / never / ... VP(infinitive) ... (never put this cloth in the sun)
3. it is essential, vital, ... to never VP(infinitive).
</listItem>
<bodyText confidence="0.999631541666667">
In cases where the conclusion is relatively weak in terms of consequences, it may not
have any specific mark, its recognition is then based on the observation that it is the
instruction that immediately precedes an already identified support.
Supports are propositions which are identified from various marks: (a) via connec-
tors such as: otherwise, under the risk of, etc., in French: sinon, car, sous peine de, au
risque de or via verbs expressing consequence; (b) via negative expressions: in order
not to, in order to avoid, etc.; (c) via specific verbs such as risk verbs introducing
events (you risk to break) — in general the embedded verb has a negative polarity; (d)
via the presence of very negative terms, such as: nouns: death, disease, etc., adjec-
tives, and some verbs and adverbs. We have a lexicon of ca. 200 negative terms found
in our corpora.
Some supports have a more neutral formulation: they may be a portion of a sen-
tence where a conclusion has been identified. For example, a proposition in the future
tense or conditional following a conclusion is identified as a support. However, some
supports may be empty, because they can easily be inferred by the reader. In that case,
the argument is said to be truncated.
Patterns are implemented in Perl and are included into the global system (the
TextCoop software). From the above observations, with some generalizations and
the construction of lexicons of marks, we have summarized the extraction process
in only eight patterns for supports and three patterns for conclusions. Arguments are
tagged by XML tags. We carried out an indicative evaluation (e.g. to get improvement
directions) on a corpus of 66 texts over various domains, containing 262 arguments.
We get the following results for warnings: (supports well delimited are with respect
to warnings correctly identified):
</bodyText>
<table confidence="0.9250915">
Conclusion Support Conclusions Supports
recognition recognition well delimited well delimited
88% 91% 95% 95%
Processing advice
</table>
<listItem confidence="0.834204375">
Conclusions of type advice are identified essentially by means of two types of pattern
(in French):
1. advice or preference expression followed by an instruction. The preference
expression may be a verb or a more complex expression: is advised to, prefer, it
is better, preferable to, etc.;
2. expression of optionality or of preference followed by an instruction: our sug-
gestions:..., or expression of optionality within the instruction (use preferably
a sharp knife).
</listItem>
<bodyText confidence="0.984067333333333">
In addition, as for warnings, any instruction preceding a support of type advice is
a conclusion. Supports of type advice are identified on the basis of 3 distinct types of
pattern:
</bodyText>
<note confidence="0.702127">
124 Fontan and Saint-Dizier
</note>
<tableCaption confidence="0.382736">
1. Goal exp + (adverb) + positively oriented term. Goal expressions are e.g.: in
order to, for, whereas adverb includes: better, more (in French: mieux, plus,
davantage), and positively oriented term includes: nouns (savings, perfection,
gain, etc.), adjectives (efficient, easy, useful, etc.), or adverbs (well, simply, etc.).
For this latter class of positively oriented terms we constructed a lexicon that
contains about 50 terms.
2. Goal expressions with a positive consequence verb (favor, encourage, save,
etc.), or a facilitation verb (improve, optimize, facilitate, embellish, help, con-
tribute, etc.),
3. The goal expression in (1) and (2) above can be replaced by the verb ’to be’ in
the future: it will be easier to locate your keys.
A short example of an annotated text is given in Figure 1 below. Similarly as above,
we carried out an indicative evaluation on the same corpus with 68 texts containing
240 manually identified pieces of advice (again, delimitation results are calculated
with respect to advice correctly identified):
</tableCaption>
<table confidence="0.854640333333333">
Conclusion Support Conclusions Supports Support/Conclusion
recognition recognition well delimited well delimited correctly related
79% 84% 92% 91% 91%
</table>
<bodyText confidence="0.919469777777778">
As the reader may note, results are less satisfactory than for warnings. This is
mainly due to the fact that advice is expressed in a much ’softer’ way than warnings,
with less emphasis and strength, therefore, terms typical of advice are not necessarily
strongly marked, when present.
[procedure
[title How to embellish your balcony
[Prerequisites 1 lattice, window boxes, etc.] ...
[instructional−compound In order to train a plant to grow up a wall, select first a sunny area,
clean the floor and make sure it is flat...
</bodyText>
<subsectionHeader confidence="0.735004">
[Argument [Conclusion:Advice You should better let a 10 cm interval between the wall and the
</subsectionHeader>
<bodyText confidence="0.694367">
lattice.]
</bodyText>
<subsectionHeader confidence="0.911739">
[Support:Advice This space will allow the air to move around, which is beneficial for the
</subsectionHeader>
<bodyText confidence="0.65679">
health of your plant.] ... ]]]]
</bodyText>
<figureCaption confidence="0.976713">
Figure 1: An annotated procedure
</figureCaption>
<bodyText confidence="0.9998557">
The terms involved in advice as well as warning patterns are mostly domain inde-
pendent, they are also quite limited in number. Their variations are mainly due to the
author’s style and the target audience. Finally, it seems that our extraction mechanism
can be used to extract arguments in a large number of non-procedural texts such as
news. This is very tentative but a few tests on French news indicates an accuracy of
about 75%, but these also contain a few rewards and threats. We get really good results
with teaching texts, which may be felt to be at the boarder line of procedural texts, but
which contain quite a lot of reward expressions since interactions are more prominent
(with the teacher). In terms of multilinguality, we are at the moment developing the
same approach for Thai (at Kasetsart univ., Bangkok) applied to the treatment of rice.
</bodyText>
<table confidence="0.312437833333333">
Analyzing the Explanation Structure of Procedural Texts 125
[instructional−compound En decembre-janvier, effectuer la taille d’6quilibrage et de net-
toyage de vos arbres.
[Argument [Conclusion:warning La première ann6e de fructification, 6liminer tous les
fruits au moment où ils se d6veloppent,]
[Support:warning Cela 6vite d’6puiser l’arbre.] ... ]]
</table>
<figureCaption confidence="0.994986">
Figure 2: Annotated warning (gloss: In December-January, make the first pruning
and cleaning of your trees. The first year with fruits, eliminate all fruits, this avoids
the tree to run out.)
</figureCaption>
<figure confidence="0.784328333333333">
[instructional−compound [goal Les 6tagères de votre meuble doivent être lisses.
[Argument [Conclusion:advice Utilisez si possible une ponceuse 6lectrique,]
[Support:advice Ce sera beaucoup plus rapide et vraiment moins fatigant.] ...]]
</figure>
<figureCaption confidence="0.729215">
Figure 3: Anotated advice (gloss: The shelves of your furniture must be very smooth.
Use ifpossible an electric sander, this will be faster and less tiring.)
</figureCaption>
<subsectionHeader confidence="0.999173">
3.3 Dealing with empty supports
</subsectionHeader>
<bodyText confidence="0.999981777777778">
Considering do-it-yourself and gardening texts, we noted that about 2/3 of the argu-
ments are not supported. This very large number of unsupported arguments, in such
typically procedural texts, can be explained by several factors: (1) procedural texts are
more oriented towards action than control, (2) some supports, possibly complex, could
in fact introduce doubts or confusions, (3) some explanations (supports) may be too
complex to be understood by a casual user, and (4) supports are sometimes sufficiently
explicit in the conclusions (do not scatter seeds by high winds! = they won’t go where
you want them to go). In socially-oriented procedural texts, supports are often much
more explicit, but this may differ depending on the author’s style.
We noted that realized supports correspond to two main trends: (1) supports that
express general requirements such as: efficiency of actions, security, ease of execution,
adequate execution, speed, aesthetics, lower cost, etc. and (2) supports that cover more
precise, domain dependent situations (avoid pruning trees when temperature drops
below zero).
Reconstructing empty support is still under research, let us note here the still very
tentative directions we are investigating, which require different forms of inference.
For empty supports corresponding to general requirements, we infer a generic support
based on those requirements, e.g.: mounting your computer: use a flat and clean sur-
face. induced support: ’for a better ease of execution’. From our observations (which
need further confirmation), generic supports are in general triggered by adjectives or
by general purpose verbs used in the conclusion.
The second situation (empty support in a domain dependent situation) is more del-
icate and requires domain or lexical knowledge. We are investigating the use of prin-
ciples of the Generative Lexicon (Pustejovsky 1991) for that purpose. Very briefly,
wind has in its telic role several predicates like push, take away, scatter, disperse,
break, damage, .... When applied e.g. to gardening, such as planting new flowers,
since these are not so mobile when planted, a predicate like break or damage can be
</bodyText>
<note confidence="0.702687">
126 Fontan and Saint-Dizier
</note>
<bodyText confidence="0.993729333333333">
selected (selection principles in the Generative lexicon remain however an open and
very delicate problem). Then, from a statement such as: avoid planting flowers by
high winds the support: because wind will damage or break flowers can be inferred.
</bodyText>
<sectionHeader confidence="0.9995" genericHeader="method">
4 Perspectives
</sectionHeader>
<bodyText confidence="0.993896552631579">
The work presented here complements the tagging of titles and instructional com-
pounds in procedural texts of various domains, as reported in (Delpech et al. 2007,
2008). It allows us to have a quite comprehensive analysis of procedural texts, which
turn out to have a very rich structure. Annotated corpus is available on request. We
plan to include in our system the treatment of conditional expressions realized in
(Bouffier et al. 2007), since we have not studied this phenomenon (and the associ-
ated scoping problems). We will then examine how illocutionary force is expressed.
Finally, we plan to investigate the main lines of the facilitation structure.
We analyzed the forms arguments of type advice and warning may take, and have
implemented and tested a system that tags those structures and attempts at reconstruct-
ing empty supports. At this level, there is still linguistic and formal work to be carried
out, for example to evaluate the illocutionary force of arguments and to better settle
this work within action theory. We believe we have a very useful corpus of examples
of arguments, of much interest for research in argumentation theory. An important
result is that arguments can be recognized on the basis of relatively simple parameter-
ized patterns. The terms involved in those patterns are mostly domain independent.
They may just vary depending on the author’s style and the target audience. Finally,
it seems that our extraction mechanism can be used to extract arguments in a large
number of non-procedural texts such as news.
Besides studying the textual structure of procedural texts and responding to How-
to questions from the analysis of these texts, a major application of this work is the
construction of domain know-how knowledge base, quite basic but which could be
subject to interesting generalizations. Obviously, to make this knowledge optimal, it
would be useful to associate with every statement a formal representation that supports
inference, data fusion, etc. This domain know-how knowledge base of advice, hints
and warnings is of much importance for different types of users who have a procedure
to realize a task but who want to know more before starting. Some psychological
experiments have shown that, besides instructions given in procedural texts, users are
very much interested in what remains implicit in those texts: what you are supposed to
know or care about (but have no means to ask). Although there are already available,
but manually constructed, such bases of advice, it is of much interest to construct it
automatically, using the instructional compound as an advice unit.
Acknowledgements This paper relates work realized within the French ANR project
TextCoop. We thank its partners for stimulating discussions. We also thank Leila
Amgoud and Daniel Kayser for very useful discussions on this work. Finally, we are
very grateful to three reviewers for their detailed comments which helped improve and
clarify this paper.
Analyzing the Explanation Structure of Procedural Texts 127
</bodyText>
<sectionHeader confidence="0.993184" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999399162162162">
Adam, J.M., Types de Textes ou genres de Discours? Comment Classer les Textes qui
Disent De et Comment Faire, Langages, 141, pp. 10–27, 2001.
Amgoud, L., Bonnefon, J.F., Prade, H., An Argumentation-based Approach to Mul-
tiple Criteria Decision, in 8th European Conference on Symbolic and Quantitative
Approaches to Reasoning with Uncertainty, ECSQARU’2005, Barcelona, 2005.
Amgoud, L., Parsons, S., Maudet, N., Arguments, Dialogue, and Negotiation, in: 14th
European Conference on Artificial Intelligence, Berlin, 2001.
Anscombre, J.-Cl. Ducrot, O., Interrogation et Argumentation, in Langue francaise,
no 52, L’interrogation, 5 - 22, 1981.
Aouladomar, F., Saint-Dizier, P., An Exploration of the Diversity of Natural Argumen-
tation in Instructional Texts, 5th International Workshop on Computational Models of
Natural Argument, IJCAI, Edinburgh, 2005.
Bouffier, A., Poibeau, T., Re-engineering free texts to obtain XML documents: a dis-
course based approach, RANLP 2007.
Delin, J., Hartley, A., Paris, C., Scott, D., Vander Linden, K., Expressing Procedural
Relationships in Multilingual Instructions, Proceedings of the Seventh International
Workshop on Natural Language Generation, pp. 61-70, Maine, USA, 1994.
Davidson, D., Actions, Reasons, and Causes, Journal of Philosophy, 60, 1963
Delpech, E., Murguia, E., Saint-Dizier, P., A Two-Level Strategy for Parsing Procedu-
ral Texts, VSST07, Marrakech, October 2007.
Delpech, E., Saint-Dizier, P., Anonymous, Investigating the Structure of Procedural
Texts for Answering How-to Questions, LREC 2008, Marrakech.
Gardent, C., Discourse tree adjoining grammars, report nb. 89, Univ. Saarlandes,
Saarbrucken, 1997.
Kosseim, L., Lapalme, G., Choosing Rhetorical Structures to Plan Instructional Texts,
Computational Intelligence, Blackwell, Boston, 2000.
Moeschler, J., Argumentation et Conversation, Eléments pour une Analyse Pragma-
tique du Discours, Hatier - Crédif, 1985.
Pustejovsky, J., The Generative Lexicon, Computational Linguistics, 17(4), 1991.
Takechi, M., Tokunaga, T., Matsumoto, Y., Tanaka, H., Feature Selection in Cate-
gorizing Procedural Expressions, The Sixth International Workshop on Information
Retrieval with Asian Languages (IRAL2003), pp. 49–56, 2003.
Talmy, L., Towards a Cognitive Semantics, vol. 1 and 2, MIT Press, 2001.
Vander Linden, K., Speaking ofActions Choosing Rhetorical Status and Grammatical
Form in Instructional Text Generation Thesis, University of Colorado, 1993.
Webber, B., D-LTAG: extending lexicalized TAGs to Discourse, Cognitive Science
28, pp. 751–779, Elsevier, 2004.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.205178">
<title confidence="0.99835375">Analyzing the Explanation Structure of Procedural Texts: Dealing with Advice and Warnings</title>
<author confidence="0.9922175">Lionel Fontan Patrick Saint-Dizier</author>
<affiliation confidence="0.85545">IRIT, Toulouse (France)</affiliation>
<abstract confidence="0.953618866666667">We present the explanation structure of procedural texts, focusing on the analysis of argumentation, in particular advice and warnings. Their role is to support and motivate the goal-instruction structure, which is the skeleton of procedural texts. Procedural texts consist of a sequence of instructions, designed with some accuracy in order to reach a goal (e.g. assemble a computer). Procedural texts may also include subgoals. Goals and subgoals are most of the time realized by means of titles and subtitles. The user must carefully follow step by step the given instructions in order to the goal. We introduce the notion of which is a complex structure that articulates instructions with various discourse elements. We then show how arguments can be extracted with the help of patterns. We finally investigate their contribution to the structure and the understanding of procedural texts. 115</abstract>
<intro confidence="0.622125">116 Fontan and Saint-Dizier</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J M Adam</author>
</authors>
<title>Types de Textes ou genres de Discours? Comment Classer les Textes qui</title>
<date>2001</date>
<journal>Disent De et Comment Faire, Langages,</journal>
<volume>141</volume>
<pages>10--27</pages>
<contexts>
<context position="1561" citStr="Adam, 2001" startWordPosition="234" endWordPosition="235">arguments can be extracted with the help of patterns. We finally investigate their contribution to the structure and the understanding of procedural texts. 115 116 Fontan and Saint-Dizier 1 Introduction The main goal of our project is to analyze the structure of procedural texts in order to efficiently and accurately respond to How-to-do-X? questions. This means identifying titles (which convey the main goals of the procedure), sequences of instructions serving these goals, and a number of additional structures such as prerequisites, warnings, advice, illustrations, etc. (Takechi et al. 2003, Adam, 2001). A response to an How-to question is then the well-formed text portion within the scope of the title that matches the question. In our perspective, procedural texts range from apparently simple cooking recipes to large maintenance manuals. They also include documents as diverse as teaching texts, medical notices, social behavior recommendations, directions for use, assembly notices, do-it-yourself notices, itinerary guides, advice texts, savoir-faire guides etc. (Aouladomar et al., 2005). Procedural texts follow a number of structural criteria, whose realization may depend on the author’s wri</context>
</contexts>
<marker>Adam, 2001</marker>
<rawString>Adam, J.M., Types de Textes ou genres de Discours? Comment Classer les Textes qui Disent De et Comment Faire, Langages, 141, pp. 10–27, 2001.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Amgoud</author>
<author>J F Bonnefon</author>
<author>H Prade</author>
</authors>
<title>An Argumentation-based Approach to Multiple Criteria Decision,</title>
<date>2005</date>
<booktitle>in 8th European Conference on Symbolic and Quantitative Approaches to Reasoning with Uncertainty, ECSQARU’2005,</booktitle>
<location>Barcelona,</location>
<marker>Amgoud, Bonnefon, Prade, 2005</marker>
<rawString>Amgoud, L., Bonnefon, J.F., Prade, H., An Argumentation-based Approach to Multiple Criteria Decision, in 8th European Conference on Symbolic and Quantitative Approaches to Reasoning with Uncertainty, ECSQARU’2005, Barcelona, 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Amgoud</author>
<author>S Parsons</author>
<author>N Maudet</author>
<author>Arguments</author>
</authors>
<title>Dialogue, and Negotiation, in:</title>
<date>2001</date>
<booktitle>14th European Conference on Artificial Intelligence,</booktitle>
<location>Berlin,</location>
<contexts>
<context position="5640" citStr="Amgoud et al. 2001" startWordPosition="847" endWordPosition="850">re in procedural texts We will introduce two independent structures: the general organization of the explanation structure, and the notion of instructional compound. 2.1 A global view of the explanation structure Procedural texts have a very rich semantic structure, with a large number of facets. From our development corpus (1,700 web texts of 1–3 pages), we established a classification of the different forms explanations may take. The explanation structure is meant to guide the user in two ways: (1) by making sure that he will effectively realize actions as they are specified, via arguments (Amgoud et al. 2001, 2005) such as threats, rewards, advice and warnings which are ’coercitive’ in a certain sense, and (2) help considerations such as evaluation of work realized so far and encouragements of different kinds. The main structures we have identified in this type of text are facilitation and argumentation structures. They are either global (adjoined to goals, and having scope over the whole procedure) or local, included into instructional compounds, with a scope local to the instructional compound (see next section). The latter is by far the most frequently encountered case. Explanation structures </context>
<context position="16818" citStr="Amgoud et al. 2001" startWordPosition="2569" endWordPosition="2572">. The general form of an argument is: Conclusion ’because’ Support (noted as C because S). In natural language, conclusions usually appear before the support, but they may also appear after, to stress the support. A conclusion may receive several supports, possibly of different natures (advice and warnings): don’t add natural fertilizer, this may attract insects, which will damage your young plants. Arguments may be more or less strong, they bear in general a certain weight, mostly induced from the words they contain or from their syntactic construction (Anscombre et al. 1981, Moeschler 1985, Amgoud et al. 2001). In natural contexts, this weight is somewhat vague. In the case of procedural texts, the representation and the role of arguments in a text can be modeled roughly as follows. Let G be a goal which can be reached by the sequence of instructions Ai, i ∈ [1,n], whatever their exact temporal structure is. Any instruction Ai is associated with a pair (gi, pi) where gi is the gain associated with Ai (there is a gain only in case where Ai is a piece of advice, improving G) and pi is the penalty in case where the user (partly of fully) fails to realize Ai. A subset of Ai are interpreted as explicit </context>
</contexts>
<marker>Amgoud, Parsons, Maudet, Arguments, 2001</marker>
<rawString>Amgoud, L., Parsons, S., Maudet, N., Arguments, Dialogue, and Negotiation, in: 14th European Conference on Artificial Intelligence, Berlin, 2001.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Ducrot</author>
</authors>
<title>Interrogation et Argumentation,</title>
<date>1981</date>
<booktitle>in Langue francaise, no 52, L’interrogation, 5 - 22,</booktitle>
<marker>Ducrot, 1981</marker>
<rawString>Anscombre, J.-Cl. Ducrot, O., Interrogation et Argumentation, in Langue francaise, no 52, L’interrogation, 5 - 22, 1981.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Aouladomar</author>
<author>P Saint-Dizier</author>
</authors>
<title>An Exploration of the Diversity of Natural Argumentation</title>
<date>2005</date>
<booktitle>in Instructional Texts, 5th International Workshop on Computational Models of Natural Argument, IJCAI,</booktitle>
<location>Edinburgh,</location>
<marker>Aouladomar, Saint-Dizier, 2005</marker>
<rawString>Aouladomar, F., Saint-Dizier, P., An Exploration of the Diversity of Natural Argumentation in Instructional Texts, 5th International Workshop on Computational Models of Natural Argument, IJCAI, Edinburgh, 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Bouffier</author>
<author>T Poibeau</author>
</authors>
<title>Re-engineering free texts to obtain XML documents: a discourse based approach,</title>
<date>2007</date>
<location>RANLP</location>
<marker>Bouffier, Poibeau, 2007</marker>
<rawString>Bouffier, A., Poibeau, T., Re-engineering free texts to obtain XML documents: a discourse based approach, RANLP 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Delin</author>
<author>A Hartley</author>
<author>C Paris</author>
<author>D Scott</author>
<author>Vander Linden</author>
<author>K</author>
</authors>
<title>Expressing Procedural Relationships in Multilingual Instructions,</title>
<date>1994</date>
<booktitle>Proceedings of the Seventh International Workshop on Natural Language Generation,</booktitle>
<pages>61--70</pages>
<location>Maine, USA,</location>
<marker>Delin, Hartley, Paris, Scott, Linden, K, 1994</marker>
<rawString>Delin, J., Hartley, A., Paris, C., Scott, D., Vander Linden, K., Expressing Procedural Relationships in Multilingual Instructions, Proceedings of the Seventh International Workshop on Natural Language Generation, pp. 61-70, Maine, USA, 1994.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Davidson</author>
<author>Actions</author>
</authors>
<title>Reasons, and Causes,</title>
<date>1963</date>
<journal>Journal of Philosophy,</journal>
<volume>60</volume>
<location>VSST07, Marrakech,</location>
<marker>Davidson, Actions, 1963</marker>
<rawString>Davidson, D., Actions, Reasons, and Causes, Journal of Philosophy, 60, 1963 Delpech, E., Murguia, E., Saint-Dizier, P., A Two-Level Strategy for Parsing Procedural Texts, VSST07, Marrakech, October 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Delpech</author>
<author>P Saint-Dizier</author>
<author>Anonymous</author>
</authors>
<title>Investigating the Structure of Procedural Texts for Answering How-to Questions,</title>
<date>2008</date>
<location>LREC</location>
<contexts>
<context position="3029" citStr="Delpech et al. 2008" startWordPosition="449" endWordPosition="452">0 French texts taken from the Web from most of the areas cited above, and extracted randomly from our more global corpus of 8,000 texts. We have developed a detailed analysis of procedural texts from a manual corpus analysis, identifying their main basic components as well as their global structure. For that purpose, we have defined two levels: a segmentation level that basically identifies structures considered as terminal structures (titles, instructions, prerequisites, connectors, etc.) and a grammar level that binds these terminal structures to give a global structure to procedural texts (Delpech et al. 2008). This structure is textual and dedicated only to elements relevant to procedurality. To design the grammar, we have borrowed a few considerations from Minimalist syntax, in particular recent developments of X-bar syntax and notions like merge. This point will not be developed here (but see Delpech et al. 2007). Note that text grammars are generally in a relatively early development stage (Webber 2004, Gardent 1997). Procedural texts are complex structures, they often exhibit a quite complex rational (the instructions) and ’irrational’ structure which is mainly composed out of pieces of advice</context>
<context position="4598" citStr="Delpech et al. 2008" startWordPosition="681" endWordPosition="684">ey provide a strong and essential internal cohesion and coherence to procedural texts. An important aspect of this project is the accurate identification of the explanation structure as found in procedural texts in order to better understand explanation strategies deployed by humans in precise, concrete and operational situations and to transpose it to the generation of explanations in general and in cooperative questionanswering systems in particular. We have already studied the instructional aspects of procedural texts and implemented a quite efficient prototype within the TextCoop project (Delpech et al. 2008) that tags titles and instructions with dedicated XML tags. In this paper, after a categorization of explanation structure as found in our corAnalyzing the Explanation Structure of Procedural Texts 117 pus of procedural texts, and the presentation of instructional compounds, we focus on the recognition of warnings and advice. The work is realized for French, examples in English are just glosses. 2 The explanation structure in procedural texts We will introduce two independent structures: the general organization of the explanation structure, and the notion of instructional compound. 2.1 A glob</context>
<context position="9497" citStr="Delpech et al. 2008" startWordPosition="1436" endWordPosition="1439">itles, these introduce very local goals. These are not considered in the goal hierarchy introduced by titles, and they will not be considered for question answering. • The instruction core (or kernel) structure, which contains the main instructions. These are more or less explicitly temporally organized (see below). In general simple sequentiality prevails, the goal being to limit the intellectual load imposed to the user. Actions are identified most frequently via the presence of action verbs (in relation to the domain) in the imperative form, or in the infinitive form introduced by a modal (Delpech et al. 2008). We observed also a number of subordinated instructions forms adjoined to the main instructions. These are in general organized within the compound by means of rhetorical relations, as the examples below will illustrate. • The deontic and illocutionary force structures: consist of marks that operate over instructions, outlining different parameters. These linguistic structures play a major role in argumentation: – deontic: obligatory, optional, forbidden or impossible, alternates (or), – illocutionary and related aspects: stresses the importance of actions: necessary, advised, recommended, to</context>
<context position="14854" citStr="Delpech et al. 2008" startWordPosition="2264" endWordPosition="2267"> induce an idea of strong break (even though this term is quite fuzzy). Such marks are for example: goal or conditional expression, end of paragraph, strong temporal mark (after two hours, when this is over, at the end of, and so on). We have manually annotated 160 procedural texts. This is not an easy task due to the complexity of the structures at stake. Then these were compared with results obtained automatically. These will be used fully or in part to test the system. We selected texts we understand so that the risk of errors is limited as much as possible. This is presented in detail in (Delpech et al. 2008) where Kappa tests are realized to evaluate the homogeneity of human judgements. For instructional compounds, for the three domains with best title and instruction recognition rate (do it yourself, cooking, and social life), we obtained the following results, based on a small corpus of data (60 texts): Domain Recall Precision cooking receipes 0.95 1.00 do it Yourself 0.89 0.98 social life 0.88 0.98 We have not yet attempted to implement an efficient system, but we are able to fully tag about 500 million web pages per hour, on a Pentium 4 3GhZ dual core machine with 4 Gigabyte RAM. This process</context>
</contexts>
<marker>Delpech, Saint-Dizier, Anonymous, 2008</marker>
<rawString>Delpech, E., Saint-Dizier, P., Anonymous, Investigating the Structure of Procedural Texts for Answering How-to Questions, LREC 2008, Marrakech. Gardent, C., Discourse tree adjoining grammars, report nb. 89, Univ. Saarlandes, Saarbrucken, 1997.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Kosseim</author>
<author>G Lapalme</author>
</authors>
<title>Choosing Rhetorical Structures to Plan Instructional Texts, Computational Intelligence,</title>
<date>2000</date>
<location>Blackwell, Boston,</location>
<marker>Kosseim, Lapalme, 2000</marker>
<rawString>Kosseim, L., Lapalme, G., Choosing Rhetorical Structures to Plan Instructional Texts, Computational Intelligence, Blackwell, Boston, 2000.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Moeschler</author>
</authors>
<title>Argumentation et Conversation, Eléments pour une Analyse Pragmatique du Discours, Hatier - Crédif,</title>
<date>1985</date>
<contexts>
<context position="16797" citStr="Moeschler 1985" startWordPosition="2567" endWordPosition="2568"> called supports. The general form of an argument is: Conclusion ’because’ Support (noted as C because S). In natural language, conclusions usually appear before the support, but they may also appear after, to stress the support. A conclusion may receive several supports, possibly of different natures (advice and warnings): don’t add natural fertilizer, this may attract insects, which will damage your young plants. Arguments may be more or less strong, they bear in general a certain weight, mostly induced from the words they contain or from their syntactic construction (Anscombre et al. 1981, Moeschler 1985, Amgoud et al. 2001). In natural contexts, this weight is somewhat vague. In the case of procedural texts, the representation and the role of arguments in a text can be modeled roughly as follows. Let G be a goal which can be reached by the sequence of instructions Ai, i ∈ [1,n], whatever their exact temporal structure is. Any instruction Ai is associated with a pair (gi, pi) where gi is the gain associated with Ai (there is a gain only in case where Ai is a piece of advice, improving G) and pi is the penalty in case where the user (partly of fully) fails to realize Ai. A subset of Ai are int</context>
</contexts>
<marker>Moeschler, 1985</marker>
<rawString>Moeschler, J., Argumentation et Conversation, Eléments pour une Analyse Pragmatique du Discours, Hatier - Crédif, 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
</authors>
<title>The Generative Lexicon,</title>
<date>1991</date>
<journal>Computational Linguistics,</journal>
<booktitle>in Categorizing Procedural Expressions, The Sixth International Workshop on Information Retrieval with Asian Languages (IRAL2003),</booktitle>
<volume>17</volume>
<issue>4</issue>
<pages>49--56</pages>
<contexts>
<context position="31122" citStr="Pustejovsky 1991" startWordPosition="4871" endWordPosition="4872"> inference. For empty supports corresponding to general requirements, we infer a generic support based on those requirements, e.g.: mounting your computer: use a flat and clean surface. induced support: ’for a better ease of execution’. From our observations (which need further confirmation), generic supports are in general triggered by adjectives or by general purpose verbs used in the conclusion. The second situation (empty support in a domain dependent situation) is more delicate and requires domain or lexical knowledge. We are investigating the use of principles of the Generative Lexicon (Pustejovsky 1991) for that purpose. Very briefly, wind has in its telic role several predicates like push, take away, scatter, disperse, break, damage, .... When applied e.g. to gardening, such as planting new flowers, since these are not so mobile when planted, a predicate like break or damage can be 126 Fontan and Saint-Dizier selected (selection principles in the Generative lexicon remain however an open and very delicate problem). Then, from a statement such as: avoid planting flowers by high winds the support: because wind will damage or break flowers can be inferred. 4 Perspectives The work presented her</context>
</contexts>
<marker>Pustejovsky, 1991</marker>
<rawString>Pustejovsky, J., The Generative Lexicon, Computational Linguistics, 17(4), 1991. Takechi, M., Tokunaga, T., Matsumoto, Y., Tanaka, H., Feature Selection in Categorizing Procedural Expressions, The Sixth International Workshop on Information Retrieval with Asian Languages (IRAL2003), pp. 49–56, 2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Talmy</author>
</authors>
<title>Towards a Cognitive Semantics,</title>
<date>2001</date>
<volume>1</volume>
<publisher>MIT Press,</publisher>
<institution>University of Colorado,</institution>
<contexts>
<context position="11550" citStr="Talmy 2001" startWordPosition="1742" endWordPosition="1743">ot pregnant and between 19 and 65, it is advised that you take medecine Y, ... • The rhetorical structure whose goal is to enrich the core instructions by means of a number of subordinated aspects (realized as propositions, possibly instructions) among which, most notably: enablement, basic forms of motivation, circumstance, elaboration, instrument, precaution, manner. A group of relations of particular interest in this paper are arguments, developed hereafter. • The causal structure indicating the goal of an action. We identified in procedural texts four types of causal relations, following (Talmy 2001): intend-to (direct objective of an action: push the button to start the engine), Instrumented (use a 2 inch key to dismount the door), Facilitation (enlarge the hole to better empty the tank) and Continue (keep the liquid warm till its color changes). These are local to a single instruction, with no a priori interaction with the goal or justification level advocated above. Explanations and arguments help the reader understand why an instruction must be followed and what are the risks or the drawbacks if he does not do it properly. We will illustrate this with two instructional compound exampl</context>
</contexts>
<marker>Talmy, 2001</marker>
<rawString>Talmy, L., Towards a Cognitive Semantics, vol. 1 and 2, MIT Press, 2001. Vander Linden, K., Speaking ofActions Choosing Rhetorical Status and Grammatical Form in Instructional Text Generation Thesis, University of Colorado, 1993.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Webber</author>
</authors>
<title>D-LTAG: extending lexicalized TAGs to Discourse,</title>
<date>2004</date>
<journal>Cognitive Science</journal>
<volume>28</volume>
<pages>751--779</pages>
<location>Elsevier,</location>
<contexts>
<context position="3433" citStr="Webber 2004" startWordPosition="515" endWordPosition="516">ed as terminal structures (titles, instructions, prerequisites, connectors, etc.) and a grammar level that binds these terminal structures to give a global structure to procedural texts (Delpech et al. 2008). This structure is textual and dedicated only to elements relevant to procedurality. To design the grammar, we have borrowed a few considerations from Minimalist syntax, in particular recent developments of X-bar syntax and notions like merge. This point will not be developed here (but see Delpech et al. 2007). Note that text grammars are generally in a relatively early development stage (Webber 2004, Gardent 1997). Procedural texts are complex structures, they often exhibit a quite complex rational (the instructions) and ’irrational’ structure which is mainly composed out of pieces of advice, conditions, preferences, evaluations, user stimulations, etc. They form what we call the explanation structure, which motivates and justifies the goal-instructions structure, viewed as the backbone of procedural texts. A number of these elements are forms of argumentation, they appear to be very useful, sometimes as important as instructions, they provide a strong and essential internal cohesion and</context>
</contexts>
<marker>Webber, 2004</marker>
<rawString>Webber, B., D-LTAG: extending lexicalized TAGs to Discourse, Cognitive Science 28, pp. 751–779, Elsevier, 2004.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>