<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000111">
<title confidence="0.991779">
Dependency-based paraphrasing for recognizing textual entailment
</title>
<author confidence="0.915111">
Erwin Marsi, Emiel Krahmer Wauter Bosma
</author>
<affiliation confidence="0.656178333333333">
Communication &amp; Cognition Human Media Interaction
Tilburg University University of Twente
The Netherlands The Netherlands
</affiliation>
<email confidence="0.7922125">
e.c.marsi@uvt.nl w.e.bosma@ewi.utwente.nl
e.j.krahmer@uvt.nl
</email>
<sectionHeader confidence="0.994132" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9933625">
This paper addresses syntax-based para-
phrasing methods for Recognizing Textual
Entailment (RTE). In particular, we de-
scribe a dependency-based paraphrasing al-
gorithm, using the DIRT data set, and its
application in the context of a straightfor-
ward RTE system based on aligning depen-
dency trees. We find a small positive effect
of dependency-based paraphrasing on both
the RTE3 development and test sets, but the
added value of this type of paraphrasing de-
serves further analysis.
</bodyText>
<sectionHeader confidence="0.998996" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99964585">
Coping with paraphrases appears to be an essential
subtask in Recognizing Textual Entailment (RTE).
Most RTE systems incorporate some form of lex-
ical paraphrasing, usually relying on WordNet to
identify synonym, hypernym and hyponym rela-
tions among word pairs from text and hypothesis
(Bar-Haim et al., 2006, Table 2). Many systems
also address paraphrasing above the lexical level.
This can take the form of identifying or substitut-
ing equivalent multi-word strings, e.g., (Bosma and
Callison-Burch, 2006). A drawback of this approach
is that it is hard to cope with discontinuous para-
phrases containing one or more gaps. Other ap-
proaches exploit syntactic knowledge in the form
of parse trees. Hand-crafted transformation rules
can account for systematic syntactic alternation like
active-passive form, e.g., (Marsi et al., 2006). Al-
ternatively, such paraphrase rules may be automati-
cally derived from huge text corpora (Lin and Pan-
tel, 2001). There are at least two key advantages of
</bodyText>
<page confidence="0.982828">
83
</page>
<bodyText confidence="0.998480037037037">
syntax-based over string-based paraphrasing which
are relevant for RTE: (1) it can cope with discontin-
uous paraphrases; (2) syntactic information such as
dominance relations, phrasal syntactic labels and de-
pendency relations, can be used to refine the coarse
matching on words only.
Here we investigate paraphrasing on the basis of
of syntactic dependency analyses. Our sole resource
is the DIRT data set (Lin and Pantel, 2001), an exten-
sive collection of automatically derived paraphrases.
These have been used for RTE before (de Salvo Braz
et al., 2005; Raina et al., 2005), and similar ap-
proaches to paraphrase mining have been applied
as well (Nielsen et al., 2006; Hickl et al., 2006).
However, in these approaches paraphrasing is al-
ways one factor in a complex system, and as a result
little is known of the contribution of paraphrasing
for the RTE task. In this paper, we focus entirely
on dependency-based paraphrasing in order to get a
better understanding of its usefulness for RTE. In the
next Section, we describe the DIRT data and present
an algorithm for dependency-based paraphrasing in
order to bring a pair’s text closer to its hypothesis.
We present statistics on coverage as well as qual-
itative discussion of the results. Section 3 then de-
scribes our RTE system and results with and without
dependency-based paraphrasing.
</bodyText>
<sectionHeader confidence="0.983792" genericHeader="method">
2 Dependency-based paraphrasing
</sectionHeader>
<subsectionHeader confidence="0.996011">
2.1 Preprocessing RTE data
</subsectionHeader>
<bodyText confidence="0.9601295625">
Starting from the text-hypothesis pairs in the RTE
XML format, we first preprocess the data. As the
text part may consist of more than one sentence,
we first perform sentence splitting using Mxtermi-
nator (Reynar and Ratnaparkhi, 1997), a maximum
Proceedings of the Workshop on Textual Entailment and Paraphrasing, pages 83–88,
Prague, June 2007. @2007 Association for Computational Linguistics
entropy-based end of sentence classifier trained on
the Penn Treebank data. Next, each sentence is to-
kenized and syntactically parsed using the Minipar
parser (Lin, 1998). From the parser’s tabular output
we extract the word forms, lemmas, part-of-speech
tags and dependency relations. This information is
then stored in an ad-hoc XML format which repre-
sents the trees as an hierarchy of node elements in
order to facilitate tree matching.
</bodyText>
<subsectionHeader confidence="0.99781">
2.2 DIRT data
</subsectionHeader>
<bodyText confidence="0.99979875">
The DIRT (Discovering Inference Rules from Text)
method is based on extending Harris Distributional
Hypothesis, which states that words that occurred in
the same contexts tend to be similar, to dependency
paths in parse trees (Lin and Pantel, 2001). Each
dependency path consists of at least three nodes: a
root node, and two non-root terminal nodes, which
are nouns. The DIRT data set we used consists of
over 182k paraphrase clusters derived from 1GB of
newspaper text. Each cluster consists of a unique
dependency path, which we will call the paraphrase
source, and a list of equivalent dependency paths,
which we will refer to as the paraphrase transla-
tions, ordered in decreasing value of point-wise mu-
tual information. A small sample in the original for-
mat is
</bodyText>
<equation confidence="0.938317">
(N:by:V&lt;buy&gt;V:obj:N (sims
N:to:V&lt;sell&gt;V:obj:N 0.211704
N:subj:V&lt;buy&gt;V:obj:N 0.198728
...
))
</equation>
<bodyText confidence="0.98762425">
The first two lines represent the inference rule: X
bought by Y entails X sold to Y.
We preprocess the DIRT data by restoring prepo-
sitions, which were originally folded into a depen-
dency relation, to individual nodes, as this eases
alignment with the parsed RTE data. For the same
reason, paths are converted to the same ad-hoc XML
format as the parsed RTE data.
</bodyText>
<subsectionHeader confidence="0.999661">
2.3 Paraphrase substitution
</subsectionHeader>
<bodyText confidence="0.999992954545455">
Conceptually, our paraphrase substitution algorithm
takes a straightforward approach. For the purpose of
explanation only, Figure 1 presents pseudo-code for
a naive implementation. The main function takes
two arguments (cf. line 1). The first is a prepro-
cessed RTE data set in which all sentences from text
and hypothesis are dependency parsed. The second
is a collection of DIRT paraphrases, each one map-
ping a source path to one or more translation paths.
For each text/hypothesis pair (cf. line 2), we look
at all the subtrees of the text parses (cf. line 3-4)
and attempt to find a suitable paraphrase of this sub-
tree (cf. line 5). We search the DIRT paraphrases
(cf. line 8) for a source path that matches the text
subtree at hand (cf. line 9). If found, we check
if any of the corresponding paraphrase translation
paths (cf. line 10) matches a subtree of the hypoth-
esis parse (cf. line 11-12). If so, we modify the
text tree by substituting this translation path (cf. line
13). The intuition behind this is that we only accept
paraphrases that bring the text closer to the hypothe-
sis. The DIRT paraphrases are ordered in decreasing
likelihood, so after a successful paraphrase substitu-
tion, we discard the remaining possibilities and con-
tinue with the next text subtree (cf. line 14).
The Match function, which is used for matching
the source path to a text subtree and the translation
path to an hypothesis subtree, requires the path to
occur in the subtree. That is, all lemmas, part-of-
speech tags and dependency relations from the path
must have identical counterparts in the subtree; skip-
ping nodes is not allowed. As the path’s terminals
specify no lemma, the only requirement is that their
counterparts are nouns.
The Substitute function replaces the matched path
in the text tree by the paraphrase’s translation path.
Intuitively, the path “overlays” a part of the sub-
tree, changing lemmas and dependency relations,
but leaving most of the daughter nodes unaffected.
Note that the new path may be longer or shorter than
the original one, thus introducing or removing nodes
from the text tree.
As an example, we will trace our algorithm as ap-
plied to the first pair of the RTE3 dev set (id=1).
</bodyText>
<construct confidence="0.974226833333333">
Text: The sale was made to pay Yukos’ US$ 27.5 billion tax
bill, Yuganskneftegaz was originally sold for US$ 9.4 bil-
lion to a little known company Baikalfinansgroup which
was later bought by the Russian state-owned oil company
Rosneft.
Hypothesis: Baikalfinansgroup was sold to Rosneft.
</construct>
<subsectionHeader confidence="0.546571">
Entailment: Yes
</subsectionHeader>
<bodyText confidence="0.9999846">
While traversing the parse tree of the text, our
algorithm encounters a node with POS tag V and
lemma buy. The relevant part of the parse tree is
shown at the right top of Figure 2. The logical argu-
ments inferred by Minipar are shown between curly
</bodyText>
<page confidence="0.982266">
84
</page>
<listItem confidence="0.996627846153846">
(1) def Paraphrase(parsed-rte-data, dirt-paraphrases):
(2) for pair in parsed-rte-data:
(3) for text-tree in pair.text-parses:
(4) for text-subtree in text-tree:
(5) Paraphrase-subtree(text-subtree, dirt-paraphrases, pair.hyp-parse)
(7) def Paraphrase-subtree(text-subtree, dirt-paraphrases, hyp-tree):
(8) for (source-path, translations) in dirt-paraphrases:
(9) if Match(source-path, text-subtree):
(10) for trans-path in translations:
(11) for hyp-subtree in hyp-tree:
(12) if Match(trans-path, hyp-subtree):
(13) text-subtree = Substitute(trans-path, text-subtree)
(14) return
</listItem>
<figureCaption confidence="0.989511">
Figure 1: Pseudo-code for a naive implementation of the dependency-based paraphrase substitution algo-
rithm
</figureCaption>
<bodyText confidence="0.999993032258064">
brackets, e.g., US$ 9.4 billion. For this combination
of verb and lemma, the DIRT data contains 340 para-
phrase sets, with a total of 26950 paraphrases. The
algorithm starts searching for a paraphrase source
which matches the text. It finds the path shown
at the left top of Figure 2: buy with a PP modi-
fier headed by preposition by, and a nominal object.
This paraphrase source has 108 alternative transla-
tions. It searches for paraphrase translations which
match the hypothesis. The first, and therefore most
likely (probability is 0.22) path it finds is rooted in
sell, with a PP-modifier headed by to and a nominal
object. This translation path, as well as its alignment
to the hypothesis parse tree, is shown in the mid-
dle part of Figure 2. Finally, the source path in the
text tree is substituted by the translation path. The
bottom part of Figure 2 shows the updated text tree
as well as its improved alignment to the hypothesis
tree. The paraphrasing procedure can in effect be
viewed as making the inference that Baikalfinans-
group was bought by Rosneft, therefore Baikalfi-
nansgroup was sold to Rosneft.
The naive implementation of the algorithm is of
course not very efficient. Our actual implementa-
tion uses a number of shortcuts to reduce process-
ing time. For instance, the DIRT paraphrases are
indexed on the lemma of their root in order to speed
up retrieval. As another example, text nodes with
less than two child nodes (i.e. terminal and unary-
branching nodes) are immediately skipped, as they
will never match a paraphrase path.
</bodyText>
<subsectionHeader confidence="0.99753">
2.4 Paraphrasing results
</subsectionHeader>
<bodyText confidence="0.999967285714286">
We applied our paraphrasing algorithm to the RTE3
development set. Table 1 gives an impression of how
many paraphrases were substituted. The first row
lists the total number of nodes in the dependency
trees of the text parts. The second row shows that
for roughly 15% of these nodes, the DIRT data con-
tains a paraphrase with the same lemma. The next
two rows show in how many cases the source path
matches the text and the translation path matches the
hypothesis (i.e. giving rise to a paraphrase substitu-
tion). Clearly, the number of actual paraphrase sub-
stitutions is relatively small: on average about 0.5%
of all text subtrees are subject to paraphrasing. Still,
about one in six sentences is subject to paraphras-
ing, and close to half of all pairs is paraphrased at
least once. Sentences triggering more than one para-
phrase do occur. Also note that paraphrasing occurs
more frequently in true entailment pairs than in false
entailment pairs. This is to be expected, given that
text and hypothesis are more similar when an entail-
ment relation holds.
</bodyText>
<subsectionHeader confidence="0.977441">
2.5 Discussion on paraphrasing
</subsectionHeader>
<bodyText confidence="0.9980378">
Type of paraphrases A substantial number of the
paraphrases applied are single word synonyms or
verb plus particle combinations which might as well
be obtained from string-based substitution on the ba-
sis of a lexical resource like WordNet. Some ran-
domly chosen examples include X announces Y en-
tails X supports Y, X makes Y entails X sells Y, and
locates X at Y, discovers X at Y. Nevertheless, more
interesting paraphrases do occur. In the pair below
(id=452), we find the paraphrase X wins Y entails X
</bodyText>
<page confidence="0.999691">
85
</page>
<tableCaption confidence="0.999686">
Table 1: Frequency of (partial) paraphrase matches on the RTE3 dev set
</tableCaption>
<table confidence="0.997879">
IE: IR: QA: SUM: Total:
Text nodes: 8899 10610 10502 8196 38207
Matching paraphrase lemma: 1439 1724 1581 1429 6173
Matching paraphrase source: 566 584 543 518 2211
Matching paraphrase translation: 71 55 23 79 228
Text sentences: 272 350 306 229 1157
Paraphrased text sentences: 63 51 20 66 200
Paraphrased true-entailment pairs: 32 25 12 39 108
Paraphrased false-entailment pairs: 26 21 5 23 75
</table>
<figure confidence="0.639847">
(is) Y champion.
Text: Boris Becker is a true legend in the sport of tennis. Aged
just seventeen, he won Wimbledon for the first time and
went on to become the most prolific tennis player.
Hypothesis: Boris Becker is a Wimbledon champion.
Entailment: True
Another intriguing paraphrase, which appears to be
false on first sight, is X flies from Y entails X makes
(a) flight to Y. However, in the context of the next
pair (id=777), it turns out to be correct.
Text: The Hercules transporter plane which flew straight here
from the first round of the trip in Pakistan, touched down
and it was just a brisk 100m stroll to the handshakes.
Hypothesis: The Hercules transporter plane made a flight to
Pakistan.
Entailment: True
</figure>
<bodyText confidence="0.841701957446808">
Coverage Although the DIRT data constitutes a
relatively large collection of paraphrases, it is clear
that many paraphrases required for the RTE3 data
are missing. We tried to improve coverage to some
extent by relaxing the Match function: instead of
an exact match, we allowed for small mismatches
in POS tag and dependency relation, reversing the
order of a path’s left and right side, and even for
skipping nodes. However, subjective evaluation sug-
gested that the results deteriorated. Alternatively,
the coverage might be increased by deducing para-
phrases on the fly using the web as a corpus, e.g.,
(Hickl et al., 2006).
Somewhat surprisingly, the vast majority of para-
phrases concerns verbs. Even though the DIRT data
contains paraphrases for nouns, adjectives and com-
plementizers, the coverage of these word classes is
apparently not nearly as extensive as that of verbs.
Another observation is that fewer paraphrases oc-
cur in pairs from the QA task. We have no explana-
tion for this.
False paraphrases Since the DIRT data was au-
tomatically derived and was not manually checked,
it contains noise in the form of questionable or even
false paraphrases. While some of these surface in
paraphrased RTE3 data (e.g. X leaves for Y entails
X departs Y, and X feeds Y entails Y feeds X), their
number appears to be limited. We conjecture this is
because of the double constraint that a paraphrase
must match both text and hypothesis.
Relevance Not all paraphrase substitutions are rel-
evant for the purpose of recognizing textual entail-
ment. Evidently, paraphrases in false entailment
pairs are counterproductive. However, even in true
entailment pairs paraphrases might occur in parts
of the text that are irrelevant to the task at hand.
Consider the following pair from the RTE3 dev set
(id=417).
Text: When comparing Michele Granger and Brian Goodell,
Brian has to be the clear winner. In 1976, while still a
student at Mission Viejo High, Brian won two Olympic
gold medals at Montreal, breaking his own world records
in both the 400 - and 1,500 - meter freestyle events. He
went on to win three gold medals in he 1979 Pan Ameri-
can Games.
Hypothesis: Brian Goodell won three gold medals in the 1979
Pan American Games.
</bodyText>
<subsectionHeader confidence="0.377296">
Entailment: True
</subsectionHeader>
<bodyText confidence="0.9993368">
The second text sentence and hypothesis match
the paraphrases: (1) X medal at Y entails X medal in
Y, and (2) X record in Y entails X medal in Y. Even
so, virtually all of the important information is in the
third text sentence.
</bodyText>
<sectionHeader confidence="0.998279" genericHeader="method">
3 Results on RTE3 data
</sectionHeader>
<bodyText confidence="0.987655">
Since our contribution focuses on syntactic para-
phrasing, our RTE3 system is a simplified version
</bodyText>
<page confidence="0.999214">
86
</page>
<tableCaption confidence="0.973505">
Table 2: Percent accuracy on RTE3 set without
paraphrasing (−) and with paraphrasing (+)
</tableCaption>
<table confidence="0.998909">
Task Dev− Dev+ Test− Test+
IE 59.5 61.0 53.0 53.5
IR 67.0 68.0 58.5 61.5
QA 76.0 76.5 69.0 68.0
SUM 66.0 67.5 53.0 53.5
Overall 66.9 68.2 58.6 59.1
</table>
<bodyText confidence="0.985788333333333">
of our RTE2 system as described in (ref supressed
for blind reviewing) The core of the system is still
the tree alignment algorithm from (Meyers et al.,
1996), but without normalization of node weights
and applied to Minipar instead of Maltparser out-
put. To keep things simple, we do not apply syntac-
tic normalization, nor do we use WordNet or other
resources to improve node matching. Instead, we
simply align each text tree to the corresponding hy-
pothesis tree and calculate the coverage, which is
defined as the proportion of aligned content words
in the hypothesis. If the coverage is above a task-
specific threshold, we say entailment is true, other-
wise it is false.
The results are summarized in Table 2. Overall
results on the test set are considerably worse than
on the development set, which is most likely due to
overfitting task-specific parameters for node match-
ing and coverage. Our main interest is to what extent
dependency-based paraphrasing improves our base-
line prediction. The improvement on the develop-
ment set is more than 1%. This is reduced to 0.5%
in the case of the test set.
Our preliminary results indicate a small positive
effect of dependency-based paraphrasing on the re-
sults of our RTE system. Unlike most earlier work,
we did not add resources other than Minipar depen-
dency trees and DIRT paraphrase trees, in order to
isolate the contribution of syntactic paraphrases to
RTE. Nevertheless, our RTE3 system may be im-
proved by using WordNet or other lexical resources
to improve node matching, both in the paraphrasing
step and in the tree-alignment step. In future work,
we hope to improve both the paraphrasing method
(along the lines discussed in Section 2.5) and the
RTE system itself.
Acknowledgments We would like to thank Dekang Lin and
Patrick Pantel for allowing us to use the DIRT data. This work
was jointly conducted within the DAESO project funded by the
Stevin program (De Nederlandse Taalunie) and the IMOGEN
project funded by the Netherlands Organization for Scientific
Research (NWO).
</bodyText>
<sectionHeader confidence="0.991103" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.993312591836735">
R. Bar-Haim, I. Dagan, B. Dolan, L. Ferro, D. Giampic-
colo, B. Magnini, and I. Szpektor. 2006. The second
pascal recognising textual entailment challenge. In
Proceedings of the Second PASCAL Challenges Work-
shop on Recognising Textual Entailment, pages 1–9,
Venice, Italy.
W. Bosma and C. Callison-Burch. 2006. Paraphrase sub-
stitution for recognizing textual entailment. In Pro-
ceedings of CLEF.
R. de Salvo Braz, R. Girju, V. Punyakanok, D. Roth, and
M. Sammons. 2005. An inference model for seman-
tic entailemnt in natural language. In Proceedings of
the First Pascal Challenge Workshop on Recognizing
Textual Entailment, pages 29–32.
A. Hickl, J. Williams, J. Bensley, K. Roberts, B. Rink,
and Y. Shi. 2006. Recognizing textual entailment
with lccs groundhog system. In Proceedings of the
Second PASCAL Challenges Workshop on Recognis-
ing Textual Entailment, pages 80–85, Venice, Italy.
Dekang Lin and Patrick Pantel. 2001. Discovery of infer-
ence rules for question answering. Natural Language
Engineering, 7(4):343–360.
Dekang Lin. 1998. Dependency-based evaluation of
minipar. In Proceedings of the Workshop on Evalua-
tion of Parsing Systems at LREC 1998, pages 317–330,
Granada, Spain.
E. Marsi, E. Krahmer, W. Bosma, and M. Theune. 2006.
Normalized alignment of dependency trees for detect-
ing textual entailment. In Proceedings of the Second
PASCAL Challenges Workshop on Recognising Tex-
tual Entailment, pages 56–61, venice, Italy.
Adam Meyers, Roman Yangarber, and Ralph Grisham.
1996. Alignment of shared forests for bilingual cor-
pora. In Proceedings of 16th International Conference
on Computational Linguistics (COLING-96), pages
460–465, Copenhagen, Denmark.
R. Nielsen, W. Ward, and J.H. Martin. 2006. Toward
dependency path based entailment. In Proceedings of
the Second PASCAL Challenges Workshop on Recog-
nising Textual Entailment, pages 44–49, Venice, Italy.
R. Raina, A. Haghighi, C. Cox, J. Finkel, J. Michels,
K. Toutanova, B. MacCartney, M.C. de Marneffe, C.D.
Manning, and A.Y. Ng. 2005. Robust textual infer-
ence using diverse knowledge sources. In Proceedings
of PASCAL Recognising Textual Entailment Workshop.
J. C. Reynar and A. Ratnaparkhi. 1997. A maximum en-
tropy approach to identifying sentence boundaries. In
Proceedings of the Fifth Conference on Applied Natu-
ral Language Processing, Washington, D.C.
</reference>
<page confidence="0.999311">
87
</page>
<figureCaption confidence="0.998221">
Figure 2: Alignment of paraphrase source to text (top), alignment of paraphrase translation to hypothesis
(mid), and alignment of hypothesis to paraphrased text (bottom) for pair 1 from RTE3 dev set
</figureCaption>
<page confidence="0.875686">
88
</page>
<figure confidence="0.999862073394495">
later
state
-
oil
later
state
-
oil
which
Russian
oil company
be
the
state-owned
by
...
pcomp-n
buy
mod
...
obj
known
Baikalfinansgroup
mod
company
nn
whn
i
rel
s mod obj
by
{fin}
buy
det
{US$ 9.4 billion}
pcomp-n
Rosneft
mod
mod
subj
{Baikalfinansgroup}
nn
pred
lex-mod
lex-mod
lex-mod
subj
{which}
sell
mod
obj
sell
to
...
be mod obj
pcomp-n
{Baikalfinansgroup}
to
...
pcomp-n
Rosneft
s
Baikalfinansgroup be
subj
sell
mod
obj
subj
s
to
{US$ 9.4 billion}
Baikalfinansgroup
{Baikalfinansgroup}
sell
rel
mod
be
be
mod
obj
nn
pcomp-n
known
{fin}
Rosneft
{Baikalfinansgroup}
to
company
whn
det
mod
mod
nn
pcomp-n
i
which
Russian
oil company
Rosneft
be
the
state-owned
pred
lex-mod
lex-mod
lex-mod
s
Baikalfinansgroup
{which}
</figure>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.434740">
<title confidence="0.988479">Dependency-based paraphrasing for recognizing textual entailment</title>
<author confidence="0.985884">Erwin Marsi</author>
<author confidence="0.985884">Emiel Wauter</author>
<affiliation confidence="0.824665333333333">Communication &amp; Human Media Tilburg University of The The</affiliation>
<email confidence="0.745297">e.j.krahmer@uvt.nlw.e.bosma@ewi.utwente.nl</email>
<abstract confidence="0.995747">This paper addresses syntax-based paraphrasing methods for Recognizing Textual Entailment (RTE). In particular, we describe a dependency-based paraphrasing algorithm, using the DIRT data set, and its application in the context of a straightforward RTE system based on aligning dependency trees. We find a small positive effect of dependency-based paraphrasing on both the RTE3 development and test sets, but the added value of this type of paraphrasing deserves further analysis.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R Bar-Haim</author>
<author>I Dagan</author>
<author>B Dolan</author>
<author>L Ferro</author>
<author>D Giampiccolo</author>
<author>B Magnini</author>
<author>I Szpektor</author>
</authors>
<title>The second pascal recognising textual entailment challenge.</title>
<date>2006</date>
<booktitle>In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment,</booktitle>
<pages>1--9</pages>
<location>Venice, Italy.</location>
<contexts>
<context position="1099" citStr="Bar-Haim et al., 2006" startWordPosition="151" endWordPosition="154"> data set, and its application in the context of a straightforward RTE system based on aligning dependency trees. We find a small positive effect of dependency-based paraphrasing on both the RTE3 development and test sets, but the added value of this type of paraphrasing deserves further analysis. 1 Introduction Coping with paraphrases appears to be an essential subtask in Recognizing Textual Entailment (RTE). Most RTE systems incorporate some form of lexical paraphrasing, usually relying on WordNet to identify synonym, hypernym and hyponym relations among word pairs from text and hypothesis (Bar-Haim et al., 2006, Table 2). Many systems also address paraphrasing above the lexical level. This can take the form of identifying or substituting equivalent multi-word strings, e.g., (Bosma and Callison-Burch, 2006). A drawback of this approach is that it is hard to cope with discontinuous paraphrases containing one or more gaps. Other approaches exploit syntactic knowledge in the form of parse trees. Hand-crafted transformation rules can account for systematic syntactic alternation like active-passive form, e.g., (Marsi et al., 2006). Alternatively, such paraphrase rules may be automatically derived from hug</context>
</contexts>
<marker>Bar-Haim, Dagan, Dolan, Ferro, Giampiccolo, Magnini, Szpektor, 2006</marker>
<rawString>R. Bar-Haim, I. Dagan, B. Dolan, L. Ferro, D. Giampiccolo, B. Magnini, and I. Szpektor. 2006. The second pascal recognising textual entailment challenge. In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment, pages 1–9, Venice, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Bosma</author>
<author>C Callison-Burch</author>
</authors>
<title>Paraphrase substitution for recognizing textual entailment.</title>
<date>2006</date>
<booktitle>In Proceedings of CLEF.</booktitle>
<contexts>
<context position="1298" citStr="Bosma and Callison-Burch, 2006" startWordPosition="180" endWordPosition="183">e RTE3 development and test sets, but the added value of this type of paraphrasing deserves further analysis. 1 Introduction Coping with paraphrases appears to be an essential subtask in Recognizing Textual Entailment (RTE). Most RTE systems incorporate some form of lexical paraphrasing, usually relying on WordNet to identify synonym, hypernym and hyponym relations among word pairs from text and hypothesis (Bar-Haim et al., 2006, Table 2). Many systems also address paraphrasing above the lexical level. This can take the form of identifying or substituting equivalent multi-word strings, e.g., (Bosma and Callison-Burch, 2006). A drawback of this approach is that it is hard to cope with discontinuous paraphrases containing one or more gaps. Other approaches exploit syntactic knowledge in the form of parse trees. Hand-crafted transformation rules can account for systematic syntactic alternation like active-passive form, e.g., (Marsi et al., 2006). Alternatively, such paraphrase rules may be automatically derived from huge text corpora (Lin and Pantel, 2001). There are at least two key advantages of 83 syntax-based over string-based paraphrasing which are relevant for RTE: (1) it can cope with discontinuous paraphras</context>
</contexts>
<marker>Bosma, Callison-Burch, 2006</marker>
<rawString>W. Bosma and C. Callison-Burch. 2006. Paraphrase substitution for recognizing textual entailment. In Proceedings of CLEF.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R de Salvo Braz</author>
<author>R Girju</author>
<author>V Punyakanok</author>
<author>D Roth</author>
<author>M Sammons</author>
</authors>
<title>An inference model for semantic entailemnt in natural language.</title>
<date>2005</date>
<booktitle>In Proceedings of the First Pascal Challenge Workshop on Recognizing Textual Entailment,</booktitle>
<pages>29--32</pages>
<contexts>
<context position="2336" citStr="Braz et al., 2005" startWordPosition="345" endWordPosition="348">and Pantel, 2001). There are at least two key advantages of 83 syntax-based over string-based paraphrasing which are relevant for RTE: (1) it can cope with discontinuous paraphrases; (2) syntactic information such as dominance relations, phrasal syntactic labels and dependency relations, can be used to refine the coarse matching on words only. Here we investigate paraphrasing on the basis of of syntactic dependency analyses. Our sole resource is the DIRT data set (Lin and Pantel, 2001), an extensive collection of automatically derived paraphrases. These have been used for RTE before (de Salvo Braz et al., 2005; Raina et al., 2005), and similar approaches to paraphrase mining have been applied as well (Nielsen et al., 2006; Hickl et al., 2006). However, in these approaches paraphrasing is always one factor in a complex system, and as a result little is known of the contribution of paraphrasing for the RTE task. In this paper, we focus entirely on dependency-based paraphrasing in order to get a better understanding of its usefulness for RTE. In the next Section, we describe the DIRT data and present an algorithm for dependency-based paraphrasing in order to bring a pair’s text closer to its hypothesi</context>
</contexts>
<marker>Braz, Girju, Punyakanok, Roth, Sammons, 2005</marker>
<rawString>R. de Salvo Braz, R. Girju, V. Punyakanok, D. Roth, and M. Sammons. 2005. An inference model for semantic entailemnt in natural language. In Proceedings of the First Pascal Challenge Workshop on Recognizing Textual Entailment, pages 29–32.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Hickl</author>
<author>J Williams</author>
<author>J Bensley</author>
<author>K Roberts</author>
<author>B Rink</author>
<author>Y Shi</author>
</authors>
<title>Recognizing textual entailment with lccs groundhog system.</title>
<date>2006</date>
<booktitle>In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment,</booktitle>
<pages>80--85</pages>
<location>Venice, Italy.</location>
<contexts>
<context position="2471" citStr="Hickl et al., 2006" startWordPosition="369" endWordPosition="372">: (1) it can cope with discontinuous paraphrases; (2) syntactic information such as dominance relations, phrasal syntactic labels and dependency relations, can be used to refine the coarse matching on words only. Here we investigate paraphrasing on the basis of of syntactic dependency analyses. Our sole resource is the DIRT data set (Lin and Pantel, 2001), an extensive collection of automatically derived paraphrases. These have been used for RTE before (de Salvo Braz et al., 2005; Raina et al., 2005), and similar approaches to paraphrase mining have been applied as well (Nielsen et al., 2006; Hickl et al., 2006). However, in these approaches paraphrasing is always one factor in a complex system, and as a result little is known of the contribution of paraphrasing for the RTE task. In this paper, we focus entirely on dependency-based paraphrasing in order to get a better understanding of its usefulness for RTE. In the next Section, we describe the DIRT data and present an algorithm for dependency-based paraphrasing in order to bring a pair’s text closer to its hypothesis. We present statistics on coverage as well as qualitative discussion of the results. Section 3 then describes our RTE system and resu</context>
<context position="13701" citStr="Hickl et al., 2006" startWordPosition="2207" endWordPosition="2210">age Although the DIRT data constitutes a relatively large collection of paraphrases, it is clear that many paraphrases required for the RTE3 data are missing. We tried to improve coverage to some extent by relaxing the Match function: instead of an exact match, we allowed for small mismatches in POS tag and dependency relation, reversing the order of a path’s left and right side, and even for skipping nodes. However, subjective evaluation suggested that the results deteriorated. Alternatively, the coverage might be increased by deducing paraphrases on the fly using the web as a corpus, e.g., (Hickl et al., 2006). Somewhat surprisingly, the vast majority of paraphrases concerns verbs. Even though the DIRT data contains paraphrases for nouns, adjectives and complementizers, the coverage of these word classes is apparently not nearly as extensive as that of verbs. Another observation is that fewer paraphrases occur in pairs from the QA task. We have no explanation for this. False paraphrases Since the DIRT data was automatically derived and was not manually checked, it contains noise in the form of questionable or even false paraphrases. While some of these surface in paraphrased RTE3 data (e.g. X leave</context>
</contexts>
<marker>Hickl, Williams, Bensley, Roberts, Rink, Shi, 2006</marker>
<rawString>A. Hickl, J. Williams, J. Bensley, K. Roberts, B. Rink, and Y. Shi. 2006. Recognizing textual entailment with lccs groundhog system. In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment, pages 80–85, Venice, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
<author>Patrick Pantel</author>
</authors>
<title>Discovery of inference rules for question answering.</title>
<date>2001</date>
<journal>Natural Language Engineering,</journal>
<volume>7</volume>
<issue>4</issue>
<contexts>
<context position="1736" citStr="Lin and Pantel, 2001" startWordPosition="248" endWordPosition="252"> systems also address paraphrasing above the lexical level. This can take the form of identifying or substituting equivalent multi-word strings, e.g., (Bosma and Callison-Burch, 2006). A drawback of this approach is that it is hard to cope with discontinuous paraphrases containing one or more gaps. Other approaches exploit syntactic knowledge in the form of parse trees. Hand-crafted transformation rules can account for systematic syntactic alternation like active-passive form, e.g., (Marsi et al., 2006). Alternatively, such paraphrase rules may be automatically derived from huge text corpora (Lin and Pantel, 2001). There are at least two key advantages of 83 syntax-based over string-based paraphrasing which are relevant for RTE: (1) it can cope with discontinuous paraphrases; (2) syntactic information such as dominance relations, phrasal syntactic labels and dependency relations, can be used to refine the coarse matching on words only. Here we investigate paraphrasing on the basis of of syntactic dependency analyses. Our sole resource is the DIRT data set (Lin and Pantel, 2001), an extensive collection of automatically derived paraphrases. These have been used for RTE before (de Salvo Braz et al., 2005</context>
<context position="4278" citStr="Lin and Pantel, 2001" startWordPosition="653" endWordPosition="656"> each sentence is tokenized and syntactically parsed using the Minipar parser (Lin, 1998). From the parser’s tabular output we extract the word forms, lemmas, part-of-speech tags and dependency relations. This information is then stored in an ad-hoc XML format which represents the trees as an hierarchy of node elements in order to facilitate tree matching. 2.2 DIRT data The DIRT (Discovering Inference Rules from Text) method is based on extending Harris Distributional Hypothesis, which states that words that occurred in the same contexts tend to be similar, to dependency paths in parse trees (Lin and Pantel, 2001). Each dependency path consists of at least three nodes: a root node, and two non-root terminal nodes, which are nouns. The DIRT data set we used consists of over 182k paraphrase clusters derived from 1GB of newspaper text. Each cluster consists of a unique dependency path, which we will call the paraphrase source, and a list of equivalent dependency paths, which we will refer to as the paraphrase translations, ordered in decreasing value of point-wise mutual information. A small sample in the original format is (N:by:V&lt;buy&gt;V:obj:N (sims N:to:V&lt;sell&gt;V:obj:N 0.211704 N:subj:V&lt;buy&gt;V:obj:N 0.1987</context>
</contexts>
<marker>Lin, Pantel, 2001</marker>
<rawString>Dekang Lin and Patrick Pantel. 2001. Discovery of inference rules for question answering. Natural Language Engineering, 7(4):343–360.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>Dependency-based evaluation of minipar.</title>
<date>1998</date>
<booktitle>In Proceedings of the Workshop on Evaluation of Parsing Systems at LREC</booktitle>
<pages>317--330</pages>
<location>Granada,</location>
<contexts>
<context position="3746" citStr="Lin, 1998" startWordPosition="570" endWordPosition="571">based paraphrasing 2.1 Preprocessing RTE data Starting from the text-hypothesis pairs in the RTE XML format, we first preprocess the data. As the text part may consist of more than one sentence, we first perform sentence splitting using Mxterminator (Reynar and Ratnaparkhi, 1997), a maximum Proceedings of the Workshop on Textual Entailment and Paraphrasing, pages 83–88, Prague, June 2007. @2007 Association for Computational Linguistics entropy-based end of sentence classifier trained on the Penn Treebank data. Next, each sentence is tokenized and syntactically parsed using the Minipar parser (Lin, 1998). From the parser’s tabular output we extract the word forms, lemmas, part-of-speech tags and dependency relations. This information is then stored in an ad-hoc XML format which represents the trees as an hierarchy of node elements in order to facilitate tree matching. 2.2 DIRT data The DIRT (Discovering Inference Rules from Text) method is based on extending Harris Distributional Hypothesis, which states that words that occurred in the same contexts tend to be similar, to dependency paths in parse trees (Lin and Pantel, 2001). Each dependency path consists of at least three nodes: a root node</context>
</contexts>
<marker>Lin, 1998</marker>
<rawString>Dekang Lin. 1998. Dependency-based evaluation of minipar. In Proceedings of the Workshop on Evaluation of Parsing Systems at LREC 1998, pages 317–330, Granada, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Marsi</author>
<author>E Krahmer</author>
<author>W Bosma</author>
<author>M Theune</author>
</authors>
<title>Normalized alignment of dependency trees for detecting textual entailment.</title>
<date>2006</date>
<booktitle>In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment,</booktitle>
<pages>56--61</pages>
<location>venice, Italy.</location>
<contexts>
<context position="1623" citStr="Marsi et al., 2006" startWordPosition="230" endWordPosition="233">hypernym and hyponym relations among word pairs from text and hypothesis (Bar-Haim et al., 2006, Table 2). Many systems also address paraphrasing above the lexical level. This can take the form of identifying or substituting equivalent multi-word strings, e.g., (Bosma and Callison-Burch, 2006). A drawback of this approach is that it is hard to cope with discontinuous paraphrases containing one or more gaps. Other approaches exploit syntactic knowledge in the form of parse trees. Hand-crafted transformation rules can account for systematic syntactic alternation like active-passive form, e.g., (Marsi et al., 2006). Alternatively, such paraphrase rules may be automatically derived from huge text corpora (Lin and Pantel, 2001). There are at least two key advantages of 83 syntax-based over string-based paraphrasing which are relevant for RTE: (1) it can cope with discontinuous paraphrases; (2) syntactic information such as dominance relations, phrasal syntactic labels and dependency relations, can be used to refine the coarse matching on words only. Here we investigate paraphrasing on the basis of of syntactic dependency analyses. Our sole resource is the DIRT data set (Lin and Pantel, 2001), an extensive</context>
</contexts>
<marker>Marsi, Krahmer, Bosma, Theune, 2006</marker>
<rawString>E. Marsi, E. Krahmer, W. Bosma, and M. Theune. 2006. Normalized alignment of dependency trees for detecting textual entailment. In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment, pages 56–61, venice, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Meyers</author>
<author>Roman Yangarber</author>
<author>Ralph Grisham</author>
</authors>
<title>Alignment of shared forests for bilingual corpora.</title>
<date>1996</date>
<booktitle>In Proceedings of 16th International Conference on Computational Linguistics (COLING-96),</booktitle>
<pages>460--465</pages>
<location>Copenhagen, Denmark.</location>
<contexts>
<context position="16062" citStr="Meyers et al., 1996" startWordPosition="2616" endWordPosition="2619">ils X medal in Y. Even so, virtually all of the important information is in the third text sentence. 3 Results on RTE3 data Since our contribution focuses on syntactic paraphrasing, our RTE3 system is a simplified version 86 Table 2: Percent accuracy on RTE3 set without paraphrasing (−) and with paraphrasing (+) Task Dev− Dev+ Test− Test+ IE 59.5 61.0 53.0 53.5 IR 67.0 68.0 58.5 61.5 QA 76.0 76.5 69.0 68.0 SUM 66.0 67.5 53.0 53.5 Overall 66.9 68.2 58.6 59.1 of our RTE2 system as described in (ref supressed for blind reviewing) The core of the system is still the tree alignment algorithm from (Meyers et al., 1996), but without normalization of node weights and applied to Minipar instead of Maltparser output. To keep things simple, we do not apply syntactic normalization, nor do we use WordNet or other resources to improve node matching. Instead, we simply align each text tree to the corresponding hypothesis tree and calculate the coverage, which is defined as the proportion of aligned content words in the hypothesis. If the coverage is above a taskspecific threshold, we say entailment is true, otherwise it is false. The results are summarized in Table 2. Overall results on the test set are considerably</context>
</contexts>
<marker>Meyers, Yangarber, Grisham, 1996</marker>
<rawString>Adam Meyers, Roman Yangarber, and Ralph Grisham. 1996. Alignment of shared forests for bilingual corpora. In Proceedings of 16th International Conference on Computational Linguistics (COLING-96), pages 460–465, Copenhagen, Denmark.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Nielsen</author>
<author>W Ward</author>
<author>J H Martin</author>
</authors>
<title>Toward dependency path based entailment.</title>
<date>2006</date>
<booktitle>In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment,</booktitle>
<pages>44--49</pages>
<location>Venice, Italy.</location>
<contexts>
<context position="2450" citStr="Nielsen et al., 2006" startWordPosition="365" endWordPosition="368">h are relevant for RTE: (1) it can cope with discontinuous paraphrases; (2) syntactic information such as dominance relations, phrasal syntactic labels and dependency relations, can be used to refine the coarse matching on words only. Here we investigate paraphrasing on the basis of of syntactic dependency analyses. Our sole resource is the DIRT data set (Lin and Pantel, 2001), an extensive collection of automatically derived paraphrases. These have been used for RTE before (de Salvo Braz et al., 2005; Raina et al., 2005), and similar approaches to paraphrase mining have been applied as well (Nielsen et al., 2006; Hickl et al., 2006). However, in these approaches paraphrasing is always one factor in a complex system, and as a result little is known of the contribution of paraphrasing for the RTE task. In this paper, we focus entirely on dependency-based paraphrasing in order to get a better understanding of its usefulness for RTE. In the next Section, we describe the DIRT data and present an algorithm for dependency-based paraphrasing in order to bring a pair’s text closer to its hypothesis. We present statistics on coverage as well as qualitative discussion of the results. Section 3 then describes ou</context>
</contexts>
<marker>Nielsen, Ward, Martin, 2006</marker>
<rawString>R. Nielsen, W. Ward, and J.H. Martin. 2006. Toward dependency path based entailment. In Proceedings of the Second PASCAL Challenges Workshop on Recognising Textual Entailment, pages 44–49, Venice, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Raina</author>
<author>A Haghighi</author>
<author>C Cox</author>
<author>J Finkel</author>
<author>J Michels</author>
<author>K Toutanova</author>
<author>B MacCartney</author>
<author>M C de Marneffe</author>
<author>C D Manning</author>
<author>A Y Ng</author>
</authors>
<title>Robust textual inference using diverse knowledge sources.</title>
<date>2005</date>
<booktitle>In Proceedings of PASCAL Recognising Textual Entailment Workshop.</booktitle>
<marker>Raina, Haghighi, Cox, Finkel, Michels, Toutanova, MacCartney, de Marneffe, Manning, Ng, 2005</marker>
<rawString>R. Raina, A. Haghighi, C. Cox, J. Finkel, J. Michels, K. Toutanova, B. MacCartney, M.C. de Marneffe, C.D. Manning, and A.Y. Ng. 2005. Robust textual inference using diverse knowledge sources. In Proceedings of PASCAL Recognising Textual Entailment Workshop.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J C Reynar</author>
<author>A Ratnaparkhi</author>
</authors>
<title>A maximum entropy approach to identifying sentence boundaries.</title>
<date>1997</date>
<booktitle>In Proceedings of the Fifth Conference on Applied Natural Language Processing,</booktitle>
<location>Washington, D.C.</location>
<contexts>
<context position="3416" citStr="Reynar and Ratnaparkhi, 1997" startWordPosition="521" endWordPosition="524">Section, we describe the DIRT data and present an algorithm for dependency-based paraphrasing in order to bring a pair’s text closer to its hypothesis. We present statistics on coverage as well as qualitative discussion of the results. Section 3 then describes our RTE system and results with and without dependency-based paraphrasing. 2 Dependency-based paraphrasing 2.1 Preprocessing RTE data Starting from the text-hypothesis pairs in the RTE XML format, we first preprocess the data. As the text part may consist of more than one sentence, we first perform sentence splitting using Mxterminator (Reynar and Ratnaparkhi, 1997), a maximum Proceedings of the Workshop on Textual Entailment and Paraphrasing, pages 83–88, Prague, June 2007. @2007 Association for Computational Linguistics entropy-based end of sentence classifier trained on the Penn Treebank data. Next, each sentence is tokenized and syntactically parsed using the Minipar parser (Lin, 1998). From the parser’s tabular output we extract the word forms, lemmas, part-of-speech tags and dependency relations. This information is then stored in an ad-hoc XML format which represents the trees as an hierarchy of node elements in order to facilitate tree matching. </context>
</contexts>
<marker>Reynar, Ratnaparkhi, 1997</marker>
<rawString>J. C. Reynar and A. Ratnaparkhi. 1997. A maximum entropy approach to identifying sentence boundaries. In Proceedings of the Fifth Conference on Applied Natural Language Processing, Washington, D.C.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>