<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000012">
<title confidence="0.990808">
Noun-Phrase Analysis in Unrestricted Text for Information Retrieval
</title>
<author confidence="0.984399">
David A. Evans, Chengxiang Zhai
</author>
<affiliation confidence="0.9116425">
Laboratory for Computational Linguistics
Carnegie Mellon Univeristy
</affiliation>
<address confidence="0.654975">
Pittsburgh, PA 15213
</address>
<email confidence="0.998274">
dae@cmu.edu, cz25@andrew.cmu.edu
</email>
<sectionHeader confidence="0.997377" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999965333333333">
Information retrieval is an important ap-
plication area of natural-language pro-
cessing where one encounters the gen-
uine challenge of processing large quanti-
ties of unrestricted natural-language text.
This paper reports on the application of a
few simple, yet robust and efficient noun-
phrase analysis techniques to create bet-
ter indexing phrases for information re-
trieval. In particular, we describe a hy-
brid approach to the extraction of mean-
ingful (continuous or discontinuous) sub-
compounds from complex noun phrases
using both corpus statistics and linguistic
heuristics. Results of experiments show
that indexing based on such extracted sub-
compounds improves both recall and pre-
cision in an information retrieval system.
The noun-phrase analysis techniques are
also potentially useful for book indexing
and automatic thesaurus extraction.
</bodyText>
<sectionHeader confidence="0.999882" genericHeader="keywords">
1 Introduction
</sectionHeader>
<subsectionHeader confidence="0.997457">
1.1 Information Retrieval
</subsectionHeader>
<bodyText confidence="0.9999632">
Information retrieval (IR) is an important applica-
tion area of natural-language processing (NLP).1
The IR (or perhaps more accurately &amp;quot;text retrieval&amp;quot;)
task may be characterized as the problem of select-
ing a subset of documents (from a document col-
lection) whose content is relevant to the informa-
tion need of a user as expressed by a query. The
document collections involved in IR are often gi-
gabytes of unrestricted natural-language text. A
user&apos;s query may be expressed in a controlled lan-
guage (e.g., a boolean expression of keywords) or,
more desirably, a natural language, such as English.
A typical IR system works as follows. The doc-
uments to be retrieved are processed to extract in-
dexing terms or content carriers, which are usually
</bodyText>
<note confidence="0.9645155">
1(Evans, 1990; Evans et al., 1993; Smeaton, 1992; Lewis
&amp; Sparck Jones, 1996)
</note>
<bodyText confidence="0.999959814814815">
single words or (less typically) phrases. The index-
ing terms provide a description of the document&apos;s
content. Weights are often assigned to terms to in-
dicate how well they describe the document. A
(natural-language) query is processed in a similar
way to extract query terms. Query terms are then
matched against the indexing terms of a document
to determine the relevance of each document to the
query.
The ultimate goal of an IR system is to increase
both precision, the proportion of retrieved docu-
ments that are relevant, as well as recall, the propor-
tion of relevant document that are retrieved. How-
ever, the real challenge is to understand and rep-
resent appropriately the content of a document and
query, so that the relevance decision can be made ef-
ficiently, without degrading precision and recall. A
typical solution to the problem of making relevance
decisions efficient is to require exact matching of in-
dexing terms and query terms, with an evaluation
of the &apos;hits&apos; based on a scoring metric. Thus, for
instance, in vector-space models of relevance rank-
ing, both the indexing terms of a document and the
query terms are treated as vectors (with individual
term weights) and the similarity between the two
vectors is given by a cosine-distance measure, es-
sentially the angle between any two vectors.2
</bodyText>
<subsectionHeader confidence="0.942163">
1.2 Natural-Language Processing for IR
</subsectionHeader>
<bodyText confidence="0.999865384615385">
One can regard almost any IR system as perform-
ing an NLP task: text is &apos;parsed&apos; for terms and
terms are used to express &apos;meaning&apos;—to capture
document content. Clearly, most traditional IR sys-
tems do not attempt to find structure in the natural-
language text in the &apos;parsing&apos; process; they merely
extract word-like strings to use in indexing. Ide-
ally, however, extracted structure would directly re-
flect the encoded linguistic relations among terms—
captuing the conceptual content of the text better
than simple word-strings.
There are several prerequisites for effective NLP
in an IR application, including the following.
</bodyText>
<page confidence="0.7825175">
2 (Salton &amp; McGill, 1983)
17
</page>
<listItem confidence="0.81834">
1. Ability to process large amounts of text
</listItem>
<bodyText confidence="0.999502142857143">
The amount of text in the databases accessed by
modem IR systems is typically measured in gi-
gabytes. This requires that the NLP used must
be extraordinarily efficient in both its time and
space requirements. It would be impractical
to use a parser with the speed of one or two
sentences per second.
</bodyText>
<listItem confidence="0.592882">
2. Ability to process unrestricted text
</listItem>
<bodyText confidence="0.9996925">
The text database for an IR task is generally
unrestricted natural-language text possibly en-
compassing many different domains and top-
ics. A parser must be able to manage the many
kinds of problems one sees in natural-language
corpora, including the processing of unknown
words, proper names, and unrecognized struc-
tures. Often more is required, as when spelling,
transcription, or OCR errors occur. Thus, the
NLP used must be especially robust.
</bodyText>
<sectionHeader confidence="0.817899" genericHeader="introduction">
3. Need for shallow understanding
</sectionHeader>
<bodyText confidence="0.999842642857143">
While the large amount of unrestricted text
makes NLP more difficult for IR, the fact that
a deep and complete understanding of the text
may not be necessary for IR makes NLP for IR
relatively easier than other NLP tasks such as
machine translation. The goal of an IR system
is essentially to classify documents (as relevant
or irrelevant) vis-a-vis a query. Thus, it may
suffice to have a shallow and partial represen-
tation of the content of documents.
Information retrieval thus poses the genuine chal-
lenge of processing large volumes of unrestricted
natural-language text but not necessarily at a deep
level.
</bodyText>
<subsectionHeader confidence="0.954848">
1.3 Our Work
</subsectionHeader>
<bodyText confidence="0.999877">
This paper reports on our evaluation of the use of
simple, yet robust and efficient noun-phrase analy-
sis techniques to enhance phrase-based IR. In par-
ticular, we explored an extension of the phrase-
based indexing in the CLARIT Tm systems using
a hybrid approach to the extraction of meaning-
ful (continuous or discontinuous) subcompounds
from complex noun phrases exploiting both corpus-
statistics and linguistic heuristics. Using such sub-
compounds rather than whole noun phrases as in-
dexing terms helps a phrase-based IR system solve
the phrase normalization problem, that is, the prob-
lem of matching syntactically different, but semanti-
cally similar phrases. The results of our experiments
show that both recall and precision are improved by
using extracted subcompounds for indexing.
</bodyText>
<footnote confidence="0.848444">
3(Evans et al., 1991; Evans et al., 1993; Evans et al.,
1995; Evans et al., 1996)
</footnote>
<sectionHeader confidence="0.971295" genericHeader="method">
2 Phrase-Based Indexing
</sectionHeader>
<bodyText confidence="0.999870893617022">
The selection of appropriate indexing terms is criti-
cal to the improvement of both precision and recall
in an IR task. The ideal indexing terms would di-
rectly represent the concepts in a document. Since
&apos;concepts&apos; are difficult to represent and extract (as
well as to define), concept-based indexing is an
elusive goal. Virtually all commercial IR systems
(with the exception of the CLARIT system) index
only on &apos;words&apos;, since the identification of words in
texts is typically easier and more efficient than the
identification of more complex structures. How-
ever, single words are rarely specific enough to sup-
port accurate discrimination and their groupings
are often accidental. An often cited example is the
contrast between &amp;quot;junior college&amp;quot; and &amp;quot;college ju-
nior&amp;quot;. Word-based indexing cannot distinguish the
phrases, though their meanings are quite different.
Phrase-based indexing, on the other hand, as a step
toward the ideal of concept-based indexing, can ad-
dress such a case directly.
Indeed, it is interesting to note that the use
of phrases as index terms has increased dramat-
ically among the systems that participate in the
TREC evaluations.4 Even relatively traditional
word-based systems are exploring the use of multi-
word terms by supplementing words with sta-
tistical phrases—selected high frequency adjacent
word pairs (bigrams). And a few systems, such
as CLARIT—which uses simplex noun phrases,
attested subphrases, and contained words as in-
dex terms—and New York University&apos;s TREC
system5—which uses &amp;quot;head-modifier pairs&amp;quot; de-
rived from identified noun phrases—have demon-
strated the practicality and effectiveness of thor-
ough NLP in IR tasks.
The experiences of the CLAM system are in-
structive. By using selective NLP to identify sim-
plex NPs, CLARIT generates phrases, subphrases,
and individual words to use in indexing documents
and queries. Such a first-order analysis of the lin-
guistic structures in texts approximates concepts
and affords us alternative methods for calculating
the fit between documents and queries. In particu-
lar, we can choose to treat some phrasal structures
as atomic units and others as additional informa-
tion about (or representations of) content. There are
immediate effects in improving precision:
</bodyText>
<footnote confidence="0.962067888888889">
1. Phrases can replace individual indexing words.
For example, if both &amp;quot;dog&amp;quot; and &amp;quot;hot&amp;quot; are used
for indexing, they will match any query in
which both words occur. But if only the phrase
&amp;quot;hot dog&amp;quot; is used as an index term, then it will
only match the same phrase, not any of the in-
dividual words.
4 (Harman, 1995; Harman, 1996)
(Strzalkowski, 1994)
</footnote>
<page confidence="0.999066">
18
</page>
<sectionHeader confidence="0.497889" genericHeader="method">
2. Phrases can supplement word-level matches.
</sectionHeader>
<bodyText confidence="0.983086706896552">
For example, if only the individual words &amp;quot;ju-
nior&amp;quot; and &amp;quot;college&amp;quot; are used for indexing, both
&amp;quot;junior college&amp;quot; and &amp;quot;college junior&amp;quot; will match
a query with the phrase &amp;quot;junior college&amp;quot; equally
well. But if we also use the phrase &amp;quot;junior col-
lege&amp;quot; for indexing, then &amp;quot;junior college&amp;quot; will
match better than &amp;quot;college junior&amp;quot;, even though
the latter also will receive some credit as a
match at the word level.
We can see, then, that it is desirable to distinguish—
and, if possible, extract—two kinds of phrases:
those that behave as lexical atoms and those that re-
flect more general linguistic relations.
Lexical atoms help us by obviating the possibility
of extraneous word matches that have nothing to
do with true relevance. We do not want &amp;quot;hot&amp;quot; or
&amp;quot;dog&amp;quot; to match on &amp;quot;hot dog&amp;quot;. In essence, we want to
eliminate the effect of the independence assumption
at the word level by creating new words—the lexical
atoms—in which the individual word dependencies
are explicit (structural).
More general phrases help us by adding detail.
Indeed, all possible phrases (or paraphrases) of ac-
tual content in a document are potentially valuable
in indexing. In practice, of course, the indexing
term space has to be limited, so it is necessary to se-
lect a subset of phrases for indexing. Short phrases
(often nominal compounds) are preferred over long
complex phrases, because short phrases have bet-
ter chances for matching short phrases in queries
and will still match longer phrases owing to the
short phrases they have in common. Using only
short phrases also helps solve the phrase normal-
ization problem of matching syntactically different
long phrases (when they share similar meaning).6
Thus, lexical atoms and small nominal com-
pounds should make good indexing phrases.
While the CLARIT system does index at the level
of phrases and subphrases, it does not currently
index on lexical atoms or on the small compounds
that can be derived from complex NPs, in particular,
reflecting cross-simplex NP dependency relations.
Thus, for example, under normal CLARIT process-
ing the phrase &amp;quot;the quality of surface of treated
stainless steel strip&amp;quot;&apos; would yield index terms such
as &amp;quot;treated stainless steel strip&amp;quot;, &amp;quot;treated stainless
steel&amp;quot;, &amp;quot;stainless steel strip&amp;quot;, and &amp;quot;stainless steel&amp;quot;
(as a phrase, not lexical atom), along with all the
relevant single-word terms in the phrase. But the
process would not identify &amp;quot;stainless steel&amp;quot; as a po-
tential lexical atom or find terms such as &amp;quot;surface
quality&amp;quot;, &amp;quot;strip surface&amp;quot;, and &amp;quot;treated strip&amp;quot;.
To achieve more complete (and accurate) phrase-
based indexing, we propose to use the following
(Smeaton, 1992)
&apos;This is an actual example from a U.S. patent
document.
four kinds of phrases as indexing terms:
</bodyText>
<listItem confidence="0.999516875">
1. Lexical atoms (e.g., &amp;quot;hot dog&amp;quot; or perhaps
&amp;quot;stainless steel&amp;quot; in the example above)
2. Head modifier pairs (e.g., &amp;quot;treated strip&amp;quot; and
&amp;quot;steel strip&amp;quot; in the example above)
3. Subcompounds (e.g., &amp;quot;stainless steel strip&amp;quot; in
the example above)
4. Cross-preposition modification pairs (e.g.,
&amp;quot;surface quality&amp;quot; in the example above)
</listItem>
<bodyText confidence="0.999922">
In effect, we aim to augment CLARIT indexing with
lexical atoms and phrases capturing additional (dis-
continuous) modification relations than those that
can be found within simplex NPs.
It is clear that a certain level of robust and effi-
cient noun-phrase analysis is needed to extract the
above four kinds of small compounds from a large
unrestricted corpus. In fact, the set of small com-
pounds extracted from a noun phrase can be re-
garded as a weak representation of the meaning of
the noun phrase, since each meaningful small com-
pound captures a part of the meaning of the noun
phrase. In this sense, extraction of such small com-
pounds is a step toward a shallow interpretation
of noun phrases. Such weak interpretation is use-
ful for tasks like information retrieval, document
classification, and thesaurus extraction, and indeed
forms the basis in the CLARIT system for automated
thesaurus discovery
</bodyText>
<sectionHeader confidence="0.998635" genericHeader="method">
3 Methodology
</sectionHeader>
<bodyText confidence="0.999964692307692">
Our task is to parse text into NPs, analyze the noun
phrases, and extract the four kinds of small com-
pounds given above. Our emphasis is on robust
and efficient NLP techniques to support large-scale
applications.
For our purposes, we need to be able to identify
all simplex and complex NPs in a text. Complex
NPs are defined as a sequence of simplex NPs that
are associated with one another via prepositional
phrases. We do not consider simplex NPs joined by
relative clauses.
Our approach to NLP involves a hybrid use of
corpus statistics supplemented by linguistic heuris-
tics. We assume that there is no training data (mak-
ing the approach more practically useful) and, thus,
rely only on statistical information in the document
database itself. This is different from many cur-
rent statistical NLP techniques that require a train-
ing corpus. The volume of data we see in IR tasks
also makes it impractical to use sophisticated statis-
tical computations.
The use of linguistic heuristics can assist statis-
tical analysis in several ways. First, it can focus
the use of statistics by helping to eliminate irrele-
vant structures from consideration. For example,
syntactic category analysis can filter out impossible
</bodyText>
<page confidence="0.99541">
19
</page>
<bodyText confidence="0.999503090909091">
word modification pairs, such as [adjective, adjec-
tive] and [noun, adjective]. Second, it may improve
the reliability of statistical decisions. For example,
the counting of bigrams that occur only within noun
phrases is more reliable for lexical atom discovery
than the counting of all possible bigrams that occur
in the corpus. In addition, syntactic category anal-
ysis is also helpful in adjusting cutoff parameters
for statistics. For example, one useful heuristic is
that we should use a higher threshold of reliability
(evidence) for accepting the pair [adjective, noun]
as a lexical atom than for the pair [noun, noun]: a
noun-noun pair is much more likely to be a lexical
atom than an adjective-noun one.
The general process of phrase generation is illus-
trated in Figure 1. We used the CLARIT NLP mod-
ule as a preprocessor to produce NPs with syntactic
categories attached to words. We did not attempt
to utilize CLAM&apos; complex-NP generation or sub-
phrase analysis, since we wanted to focus on the
specific techniques for subphrase discovery that we
describe in this paper.
</bodyText>
<table confidence="0.67093575">
1 Raw Text
CLARIT
NP Extractor
NPs
Simplex
NP Parser
Lexical Atoms
Structured Attested Terms
NPs
Subcompound
Generator
1, Meaningful Subcompounds
</table>
<figureCaption confidence="0.99836">
Figure 1: General Processing for Phrase Generation
</figureCaption>
<bodyText confidence="0.999972933333333">
After preprocessing, the system works in two
stages—parsing and generation. In the parsing
stage, each simplex noun phrase in the corpus is
parsed. In the generation stage, the structured noun
phrase is used to generate candidates for all four
kinds of small compounds, which are further tested
for occurrence (validity) in the corpus.
Parsing of simplex noun phrases is done in mul-
tiple phases. At each phase, noun phrases are par-
tially parsed, then the partially parsed structures are
used as input to start another phase of partial pars-
ing. Each phase of partial parsing is completed by
concatenating those most reliable modification pairs
together to form a single unit. The reliability of a
modification pair is determined by a score based
on frequency statistics and category analysis and
is further tested via local optimum phrase analysis
(described below). Lexical atoms are discovered at
the same time, during simplex noun phrase parsing.
Phrase generation is quite simple. Once the struc-
ture of a noun phrase (with marked lexical atoms)
is known, the four kinds of small compounds can
be easily produced. Lexical atoms are already avail-
able. Head-modifier pairs can be extracted based on
the modification relations implied by the structure.
Subcompounds are just the substructures of the NP.
Cross-preposition pairs are generated by enumerat-
ing all possible pairs of the heads of each simplex
NP within a complex NP in backward order.8
To validate discontinuous compounds such as
non-sequential head-modifier pairs and cross-
preposition pairs, we use a standard technique of
CLARIT processing, viz., we test any nominated
compounds against the corpus itself. If we find
independently attested (whole) simplex NPs that
match the candidate compounds, we accept the
candidates as index terms. Thus for the NP &amp;quot;the
quality of surface of treated stainless steel strip&amp;quot;,
the head-modifier pairs &amp;quot;treated strip&amp;quot;, &amp;quot;stain-
less steel&amp;quot;, &amp;quot;stainless strip&amp;quot;, and &amp;quot;steel strip&amp;quot;, and
the cross-preposition pairs &amp;quot;strip surface&amp;quot;, &amp;quot;surface
quality&amp;quot;, and &amp;quot;strip quality&amp;quot;, would be generated
as index terms only if we found independent evi-
dence of such phrases in the corpus in the form of
free-standing simplex NPs.
</bodyText>
<subsectionHeader confidence="0.995673">
3.1 Lexical Atom Discovery
</subsectionHeader>
<bodyText confidence="0.999972">
A lexical atom is a semantically coherent phrase
unit. Lexical atoms may be found among proper
names, idioms, and many noun-noun compounds.
Usually they are two-word phrases, but sometimes
they can consist of three or even more words, as
in the case of proper names and technical terms.
Examples of lexical atoms (in general English) are
&amp;quot;hot dog&amp;quot;, &amp;quot;tear gas&amp;quot;, &amp;quot;part of speech&amp;quot;, and &amp;quot;von
Neumann&amp;quot;.
However, recognition of lexical atoms in free text
is difficult. In particular, the relevant lexical atoms
for a corpus of text will reflect the various discourse
domains encompassed by the text. In a collection
of medical documents, for example, &amp;quot;Wilson&apos;s dis-
ease&amp;quot; (an actual rheumatological disorder) may be
used as a lexical atom, whereas in a collection of
general news stories, &amp;quot;Wilson&apos;s disease&amp;quot; (reference
to the disease that Wilson has) may not be a lexi-
cal atom. Note that in the case of the medical us-
age, we would commonly find &amp;quot;Wilson&apos;s disease&amp;quot;
as a bigram and we would not find, for example,
</bodyText>
<page confidence="0.731688">
8 (Schwarz, 1990) reports a similar strategy.
20
</page>
<bodyText confidence="0.975667333333333">
&amp;quot;Wilson&apos;s severe disease&amp;quot; as a phrase, though the
latter might well occur in the general news corpus.
This example serves to illustrate the essential obser-
vation that motivates our heuristics for identitying
lexical atoms in a corpus: (1) words in lexical atoms
have strong association, and thus tend to co-occur
as a phrase and (2) when the words in a lexical atom
co-occur in a noun phrase, they are never or rarely
separated.
The detection of lexical atoms, like the parsing
of simplex noun phrases, is also done in multiple
phases. At each phase, only two adjacent units
are considered. So, initially, only two-word lexical
atoms can be detected. But, once a pair is deter-
mined to be a lexical atom, it will behave exactly
like a single word in subsequent processing, so, in
later phases, atoms with more than two words can
be detected.
Suppose the pair to test is [W1, W21. The first
heuristic is implemented by requiring the frequency
of the pair to be higher than the frequency of any
other pair that is formed by either word with other
words in common contexts (within a simplex noun
phrase). The intuition behind the test is that (1) in
general, the high frequency of a bigram in a simple
noun phrase indicates strong association and (2) we
want to avoid the case where [W1, W2] has a high
frequency, but [W1, W2, W] (or [W, W1, W2]) has an
even higher frequency, which implies that W2 (or
W1) has a stronger association with W than with
(or W2, respectively). More precisely, we re-
quire the following:
F(Wi, W2) &gt; MaxLDF(Wi,W2)
and
F(Wi, W2) &gt; MaxRDF(Wi,W2)
Where,
</bodyText>
<equation confidence="0.9905824">
MaxLDF(Wi,W2) =
Maxw(Min(F(W,W1), DF(W, W2)))
and
MaxRDF(Wi,W2) =
Maxw(Min(DF(Wi,W), F(W2,W)))
</equation>
<bodyText confidence="0.993874515151515">
W is any context word in a noun phrase and F(X,Y)
and DF(X, Y) are the continuous and discontin-
uous frequencies of [X ,Y], respectively, within a
simple noun phrase, i.e., the frequency of patterns
[...X, Y...] and patterns [...X, ...,Y...], respectively.
The second heuristic requires that we record all
cases where two words occur in simplex NPs and
compare the number of times the words occur as
a strictly adjacent pair with the number of times
they are separated. The second heuristic is simply
implemented by requiring that F(Wi , W2) be much
higher than DF (W1 W2) (where &apos;higher&apos; is deter-
mined by some threshold).
Syntactic category analysis also helps filter out
impossible lexical atoms and establish the thresh-
old for passing the second test. Only the follow-
ing category combinations are allowed for lexical
atoms: [noun, noun], [noun, lexatom], [lexatom,
noun], [adjective, noun], and [adjective, lexatom],
where &amp;quot;lexatom&amp;quot; is the category for a detected lexi-
cal atom. For combinations other than [noun, noun],
the threshold for passing the second test is high.
In practice, the process effectively nominates
phrases that are true atomic concepts (in a par-
ticular domain of discourse) or are being used
so consistently as unit concepts that they can be
safely taken to be lexical atoms. For example, the
lexical atoms extracted by this process from the
CACM corpus (about 1 MB) include &amp;quot;operating
system&amp;quot;, &amp;quot;data structure&amp;quot;, &amp;quot;decision table&amp;quot;, &amp;quot;data
base&amp;quot;, &amp;quot;real time&amp;quot;, &amp;quot;natural language&amp;quot;, &amp;quot;on line&amp;quot;,
&amp;quot;least squares&amp;quot;, &amp;quot;numerical integration&amp;quot;, and &amp;quot;fi-
nite state automaton&amp;quot;, among others.
</bodyText>
<subsectionHeader confidence="0.997614">
3.2 Bottom-Up Association-Based Parsing
</subsectionHeader>
<bodyText confidence="0.992521689655173">
Extended simplex noun-phrase parsing as devel-
oped in the CLARIT system, which we exploit in our
process, works in multiple phases. At each phase,
the corpus is parsed using the most specific (i.e.,
recently created) lexicon of lexical atoms. New lex-
ical atoms (results) are added to the lexicon and are
reused as input to start another phase of parsing
until a complete parse is obtained for all the noun
phrases.
The idea of association-based parsing is that by
grouping words together (based on association)
many times, we will eventually discover the most
restrictive (and informative) structure of a noun
phrase. For example, if we have evidence from the
corpus that &amp;quot;high performance&amp;quot; is a more reliable
association and &amp;quot;general purpose&amp;quot; a less reliable
one, then the noun phrase &amp;quot;general purpose high
performance computer&amp;quot; (an actual example from
the CACM corpus) would undergo the following
grouping process:
general purpose high performance computer
general purpose [high=performance] computer
[general=purpose] [high=performance] computer
[general=purposel Rhigh=performancel=computer]
ffgeneral=purposel=f[high=performance]=computed
Word pairs are given an association score (S) ac-
cording to the following rules. Scores provide ev-
idence for groupings in our parsing process. Note
that a smaller score means a stronger association.
</bodyText>
<listItem confidence="0.977761571428571">
1. Lexical atoms are given score 0. This gives the
highest priority to lexical atoms.
2. The combination of an adverb with an adjec-
tive, past participle, or progressive verb is given
score 0.
3. Syntactically impossible pairs a re given score
100. This assigns the lowest priority to those
</listItem>
<page confidence="0.998886">
21
</page>
<bodyText confidence="0.926452454545454">
pairs filtered out by syntactic category analysis.
The &apos;impossible&apos; combinations include pairs
such as [noun, adjective], [noun, adverb], [ad-
jective, adjective], [past-participle, adjective],
[past-participle, adverb], and [past-participle,
past-participle], among others.
4. Other pairs are scored according to the formu-
las given in Figure 2. Note the following effects
of the formulas:
When F(Wi, W2) increases, S(Wi , W2) de-
creases;
</bodyText>
<figure confidence="0.450600357142857">
When DF( W1, W2) increases, S(Wi , W2) de-
creases;
When Avg LDF(Wi , W2) or Avg RDF (Wi , W2)
increases, S(Wi , W2) increases; and
When F(W1) – F(Wi , W2) or F(W2) –
F(W1, W2) increases, S(Wi , W2) decreases.
of TAT rxr L D F(WI ,W2)-F RD F(Wi ,W2) X A(Wi W2)
Ok&amp;quot; 1 &amp;quot; 2 ) = xF(Wi,W2)+DF(Wi,W2)
Av9LDF(Wi,W2)= minmw,w,),DF(w,w2»
EWELD
ILD
A2
A(W1, W2) - F(1/170+ F(VV2)--2 X F(WI,W2)-1- A2
Where
</figure>
<listItem confidence="0.989865928571428">
• F(W) is frequency of word W
• F(Wi, W2) is frequency of adjacent bigram [W1,W2]
(i.e., ...W1 W2 --)
• DF(Wi , W2) is frequency of discontinuous bigram
[W1,W2]
• LD is all left dependents, i.e.,
{Wimin(F(W, W1),DF(W, W2)) # 0)
• RD is all right dependents, i.e.,
{Wimin(DF(Wi, W), F(W2,W)) 0)
• A1 is the parameter indicating the relative contribu-
tion of F(Wi , W2) to the score (e.g., 5 in the actual
experiment)
• A2 is the parameter to control the contribution of
word frequency (e.g., 1000 in the actual experiment)
</listItem>
<figureCaption confidence="0.991529">
Figure 2: Formulas for Scoring
</figureCaption>
<bodyText confidence="0.98313943902439">
The association score (based principally on fre-
quency) can sometimes be unreliable. For example,
if the phrase &amp;quot;computer aided design&amp;quot; occurs fre-
quently in a corpus, &amp;quot;aided design&amp;quot; may be judged
a good association pair, even though &amp;quot;computer
aided&amp;quot; might be a better pair. A problem may arise
when processing a phrase such as &amp;quot;program aided
design&amp;quot;: if &amp;quot;program aided&amp;quot; does not occur fre-
quently in the corpus and we use frequency as the
principal statistic, we may (incorrectly) be led to
parse the phrase as &amp;quot;[program (aided design)]&amp;quot;.
One solution to such a problem is to recompute
the bigram occurrence statistics after making each
round of preferred associations. Thus, using the ex-
ample above, if we first make the association &amp;quot;com-
puter aided&amp;quot; everywhere it occurs, many instances
of &amp;quot;aided design&amp;quot; will be removed from the corpus.
Upon recalculation of the (free) bigram statistics,
&amp;quot;aided design&amp;quot; will be demoted in value and the
false evidence for &amp;quot;aided design&amp;quot; as a preferred as-
sociation in some contexts will be eliminated.
The actual implementation of such a scheme re-
quires multiple passes over the corpus to generate
phrases. The first phrases chosen must always be
the most reliable. To aid us in making such decisions
we have developed a metric for scoring preferred
associations in their local NP contexts.
To establish a preference metric, we use two statis-
tics: (1) the frequency of the pair in the corpus,
F (13/4 , W2), and (2) the number of the times that
the pair is locally dominant in any NP in which the
pair occurs. A pair is locally dominant in an NP
if it has a higher association score than either of
the pairs that can be formed from contiguous other
words in the NP. For example, in an NP with the se-
quence [X ,Y, Z], we compare S(X, Y) with S(Y, Z);
whichever is higher is locally dominant. The prefer-
ence score (PS) for a pair is determined by the ratio
of its local dominance count (LDC)—the total num-
ber of cases in which the pair is locally dominant—to
its frequency:
</bodyText>
<equation confidence="0.958927">
ps(wi w2 ) = L DF (CIMITV2)2)
</equation>
<bodyText confidence="0.9999839">
By definition all two-word NPs score their pairs
as locally dominant.
In general, in each processing phase we make only
those associations in the corpus where a pair&apos;s PS
is above a specified threshold. If more than one as-
sociation is possible (above theshold) in a particular
NP, we make all possible associations, but in order
of PS: the first grouping goes to the pair with high-
est PS, and so on. In practice, we have used 0.7 as
the threshold for most processing phases.9
</bodyText>
<sectionHeader confidence="0.995757" genericHeader="method">
4 Experiment
</sectionHeader>
<bodyText confidence="0.920479357142857">
We tested the phrase extraction system (PES) by us-
ing it to index documents in an actual retrieval task.
In particular, we substituted the PES for the default
NLP module in the CLARIT system and then in-
dexed a large corpus using the terms nominated by
the PES, essentially the extracted small compounds
and single words (but not words within a lexi-
cal atom). All other normal CLARIT processing—
weighting of terms, division of documents into
subdocuments (passages), vector-space modeling,
etc.—was used in its default mode. As a baseline
&apos;When the phrase data becomes sparse, e.g., after six
or seven iterations of processing, it is desirable to reduce
the threshold.
</bodyText>
<figure confidence="0.91410375">
A RDF W W
vg ( 1, 2) — IRD I
EWERD
Min(F(W2,W),DF(Wi,W))
</figure>
<page confidence="0.994652">
22
</page>
<bodyText confidence="0.999982869565217">
for comparison, we used standard CLARIT process-
ing of the same corpus, with the NLP module set to
return full NPs and their contained words (and no
further subphrase analysis).1°
The corpus used is a 240-megabyte collection
of Associated Press newswire stories from 1989
(AP89), taken from the set of TREC corpora. There
are about 3-million simplex NPs in the corpus and
about 1.5-million complex NPs. For evaluation,
we used TREC queries 51-100,11 each of which
is a relatively long description of an information
need. Queries were processed by the PES and nor-
mal CLAM NLP modules, respectively, to gener-
ate query terms, which were then used for CLARIT
retrieval.
To quantify the effects of PES processing, we used
the standard IR evaluation measures of recall and
precision. Recall measures how many of the rele-
vant documents have been actually retrieved. Pre-
cision measures how many of the retrieved docu-
ments are indeed relevant. For example, if the total
number of relevant documents is N and the system
returns M documents of which K are relevant, then,
</bodyText>
<equation confidence="0.792544666666667">
Recall = *(1
and
Precision =
</equation>
<bodyText confidence="0.999817">
We used the judged-relevant documents from the
TREC evaluations as the gold standard in scoring
the performance of the two processes.
</bodyText>
<sectionHeader confidence="0.999983" genericHeader="evaluation">
5 Results
</sectionHeader>
<bodyText confidence="0.997952366666667">
The results of the experiment are given in Tables 1,
2, and 3. In general, we see improvement in both
recall and precision.
Recall improves slightly (about 1%), as shown in
Table 1. While the actual improvement is not sig-
nificant for the run of fifty queries, the increase in
absolute numbers of relevant documents returned
indicates that the small compounds supported bet-
ter matches in some cases.
Interpolated precision improves significantly, as
shown in Table 2. The general improvement in
precision indicates that small compounds provide
more accurate (and effective) indexing terms than
full NPs.
Precision improves at various returned-docu-
ment levels, as well, as shown in Table 3. Initial
precision, in particular, improves significantly. This
&amp;quot;Note that the CLARIT process used as a baseline does
not reflect optimum CLARIT performance, e.g., as ob-
tained in actual TREC evaluations, since we did not use a
variety of standard CLARIT techniques that significantly
improve performance, such as automatic query expan-
sion, distractor space generation, subterm indexing, or
differential query-term weighting. Cf. (Evans et al., 1996)
for details.
11(Harman, 1993)
suggests that the PES could be used to support other
IR enhancements, such as automatic feedback of the
top-returned documents to expand the initial query
for a second retrieval step.&amp;quot;
</bodyText>
<table confidence="0.99799">
CLARIT Retrieved-Rel Total-Rel Recall
Baseline 2,668 3,304 80.8%
PES 2,695 3,304 81.6%
</table>
<tableCaption confidence="0.979194">
Table 1: Recall Results
</tableCaption>
<table confidence="0.999918666666667">
Recall Baseline PES Rel.Improvement
0.00 0.6819 0.7099 4%
0.10 0.5535 0.5730 3.5%
0.20 0.4626 0.4927 6.5%
0.30 0.4098 0.4329 5.6%
0.40 0.3524 0.3782 7.0%
0.50 0.3289 0.3317 0.5%
0.60 0.2999 0.3026 0.9%
0.70 0.2481 0.2458 -0.9%
0.80 0.1860 0.1966 5.7%
0.90 0.1190 0.1448 21.7%
1.00 0.0688 0.0653 -5.0%
</table>
<tableCaption confidence="0.635471">
Table 2: Interpolated Precision Results
</tableCaption>
<table confidence="0.9999601">
Doc-Level Baseline PES Rel.Improvement
5 docs 0.4255 0.4809 13%
10 docs 0.4170 0.4426 6%
15 docs 0.3943 0.4227 7%
20 docs 0.3819 0.3957 4%
30 docs 0.3539 0.3603 2%
100 docs 0.2526 0.2553 1%
200 docs 0.1770 0.1844 4%
500 docs 0.0973 0.0994 2%
1000 docs 0.0568 0.0573 1%
</table>
<tableCaption confidence="0.999927">
Table 3: Precision at Various Document Levels
</tableCaption>
<bodyText confidence="0.9945034">
The PES, which was not optimized for pro-
cessing, required approximately 3.5 hours per 20-
megabyte subset of AP89 on a 133-MHz DEC alpha
processor.13 Most processing time (more than 2 of
every 3.5 hours) was spent on simplex NP parsing.
Such speed might be acceptable in some, smaller-
scale IR applications, but it is considerably slower
than the baseline speed of CLARIT noun-phrase
identification (viz., 200 megabytes per hour on a
100-MIPS processor).
</bodyText>
<page confidence="0.399656">
12 (Evans et al., 1995; Evans et al., 1996)
</page>
<bodyText confidence="0.880404">
&amp;quot;Note that the machine was not dedicated to the PES
processing; other processes were running simultaneously.
</bodyText>
<page confidence="0.997386">
23
</page>
<sectionHeader confidence="0.99979" genericHeader="conclusions">
6 Conclusions
</sectionHeader>
<bodyText confidence="0.999988588235294">
The notion of association-based parsing dates at
least from (Marcus, 1980) and has been explored
again recently by a number of researchers.14 The
method we have developed differs from previous
work in that it uses linguistic heuristics and local-
ity scoring along with corpus statistics to generate
phrase associations.
The experiment contrasting the PES with baseline
processing in a commercial IR system demonstrates
a direct, positive effect of the use of lexical atoms,
subphrases, and other pharase associations across
simplex NPs. We believe the use of NP-substructure
analysis can lead to more effective information man-
agement, including more precise IR, text summa-
rization, and concept clustering. Our future work
will explore such applications of the techniques we
have described in this paper.
</bodyText>
<sectionHeader confidence="0.999619" genericHeader="acknowledgments">
7 Acknowledgements
</sectionHeader>
<bodyText confidence="0.999978444444444">
We received helpful comments from Bob Carpen-
ter, Christopher Manning, Xiang Tong, and Steve
Handerson, who also provided us with a hash table
manager that made the implementation easier. The
evaluation of the experimental results would have
been impossible without the help of Robert Lefferts
and Nata§a Milk-Frayling at CLARITECH Corpo-
ration. Finally, we thank the anonymous reviewers
for their useful comments.
</bodyText>
<sectionHeader confidence="0.999554" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99990968">
David A. Evans. 1990. Concept management in text via
natural-language processing: The CLARIT approach.
In: Working Notes of the 1990 AAAI Symposium on &amp;quot;Text-
Based Intelligent Systems&amp;quot;, Stanford University, March,
27-29,1990,93-95.
David A. Evans, Kimberly Ginther-Webster, Mary Hart,
Robert G. Lefferts, Ira A. Monarch. 1991. Automatic
indexing using selective NLP and first-order thesauri.
In: A. Lichnerowicz (ed.), Intelligent Text and Image Han-
dling. Proceedings of a Conference, RIAO &apos;91. Amsterdam,
NL: Elsevier, pp. 624-644.
David A. Evans, Robert G. Lefferts, Gregory Grefenstette,
Steven K. Handerson, William R. Hersh, and Armar A.
Archbold. 1993. CLARIT TREC design, experiments,
and results. In: Donna K. Harman (ed.), The First Text
REtrieval Conference (TREC-1). NIST Special Publication
500-207. Washington, DC: U.S. Government Printing
Office, pp. 251-286; 494-501.
David A. Evans, and Robert G. Lefferts. 1995. CLARIT-
TREC experiments Information Processing and Manage-
ment, Vol. 31, No. 3,385-395.
David A. Evans, Nataga Milie-Frayling, Robert G. Lef-
ferts. 1996. CLARIT TREC-4 experiments. In: Donna
14 (Liberman et al., 1992; Pustejovsky et al., 1993; Resnik
et al., 1993; Lauer, 1995)
K. Harman (ed.), The Fourth Text REtrieval Conference
(TREC-4). NIST Special Publication. Washington, DC:
U.S. Government Printing Office.
Donna K. Harman, ed. 1993. The First Text REtrieval
Conference (TREC-1) NIST Special Publication 500-207.
Washington, DC: U.S. Government Printing Office.
Donna K. Harman, ed. 1995. Overview of the Third Text
REtrieval Conference (TREC-3), NIST Special Publication
500-225. Washington, DC: U.S. Government Printing
Office.
Donna K. Harman, ed. 1996. Overview of the Fourth Text
REtrieval Conference (TREC-4), NIST Special Publica-
tion. Washington, DC: U.S. Government Printing Of-
fice.
Mark Lauer. 1995. Corpus statistics meet with the noun
compound: Some empirical results. In: Proceedings of
the 33th Annual Meeting of the Association for Computa-
tional Linguistics.
David Lewis and K. Sparck Jones. 1996. Natural language
processing for information retrieval. Communications of
the ACM, January, Vol. 39, No. 1,92-101.
Mark Liberman and Richard Sproat. 1992. The stress and
structure of modified noun phrases in English. In: I.
Sag and A. Szabolcsi (eds.), Lexical Matters, CSLI Lec-
ture Notes No. 24. Chicago, IL: University of Chicago
Press, pp. 131-181.
Mitchell Maucus. 1980. A Theory of Syntactic Recognition
for Natural Language. Cambridge, MA: MIT Press.
J. Pustejovsky, S. Bergler, and P. Anick. 1993. Lexical
semantic techniques for corpus analysis. In: Compu-
tational Linguistics, Vol. 19(2), Special Issue on Using
Large Corpora II, pp. 331-358.
P. Resnik, and M. Hearst. 1993. Structural Ambiguity and
Conceptual Relations. In: Proceedings of the Workshop on
Very Large Corpora: Academic and Industrial Perspectives,
June 22, Ohio State University, pp. 58-64.
Gerard Salton and Michael McGill. 1983. Introduction to
Modern Information Retrieval, New York, NY: McGraw-
Hill.
Christoph Schwarz. 1990. Content based text handling.
Information Processing and Management, Vol. 26(2),
pp. 219-226.
Alan F. Smeaton. 1992. Progress in application of natu-
ral language processing to information retrieval. The
Computer Journal, Vol. 35, No. 3, pp. 268-278.
T. Strzalkowski and J. Carballo. 1994. Recent develop-
ments in natural language text retrieval. In: Donna
K. Harman (ed.), The Second Text REtrieval Conference
(TREC-2). NIST Special Publication 500-215. Washing-
ton, DC: U.S. Government Printing Office, pp. 123-136.
</reference>
<page confidence="0.999178">
24
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.978744">
<title confidence="0.999857">Noun-Phrase Analysis in Unrestricted Text for Information Retrieval</title>
<author confidence="0.999749">David A Evans</author>
<author confidence="0.999749">Chengxiang Zhai</author>
<affiliation confidence="0.9989095">Laboratory for Computational Linguistics Carnegie Mellon Univeristy</affiliation>
<address confidence="0.999942">Pittsburgh, PA 15213</address>
<email confidence="0.995849">dae@cmu.edu,cz25@andrew.cmu.edu</email>
<abstract confidence="0.999331772727273">Information retrieval is an important application area of natural-language processing where one encounters the genuine challenge of processing large quantities of unrestricted natural-language text. This paper reports on the application of a few simple, yet robust and efficient nounphrase analysis techniques to create better indexing phrases for information retrieval. In particular, we describe a hybrid approach to the extraction of meaningful (continuous or discontinuous) subcompounds from complex noun phrases using both corpus statistics and linguistic heuristics. Results of experiments show that indexing based on such extracted subcompounds improves both recall and precision in an information retrieval system. The noun-phrase analysis techniques are also potentially useful for book indexing and automatic thesaurus extraction.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>David A Evans</author>
</authors>
<title>Concept management in text via natural-language processing: The CLARIT approach. In:</title>
<date>1990</date>
<booktitle>Working Notes of the</booktitle>
<pages>27--29</pages>
<institution>Stanford University,</institution>
<contexts>
<context position="1869" citStr="Evans, 1990" startWordPosition="278" endWordPosition="279">eval&amp;quot;) task may be characterized as the problem of selecting a subset of documents (from a document collection) whose content is relevant to the information need of a user as expressed by a query. The document collections involved in IR are often gigabytes of unrestricted natural-language text. A user&apos;s query may be expressed in a controlled language (e.g., a boolean expression of keywords) or, more desirably, a natural language, such as English. A typical IR system works as follows. The documents to be retrieved are processed to extract indexing terms or content carriers, which are usually 1(Evans, 1990; Evans et al., 1993; Smeaton, 1992; Lewis &amp; Sparck Jones, 1996) single words or (less typically) phrases. The indexing terms provide a description of the document&apos;s content. Weights are often assigned to terms to indicate how well they describe the document. A (natural-language) query is processed in a similar way to extract query terms. Query terms are then matched against the indexing terms of a document to determine the relevance of each document to the query. The ultimate goal of an IR system is to increase both precision, the proportion of retrieved documents that are relevant, as well a</context>
</contexts>
<marker>Evans, 1990</marker>
<rawString>David A. Evans. 1990. Concept management in text via natural-language processing: The CLARIT approach. In: Working Notes of the 1990 AAAI Symposium on &amp;quot;TextBased Intelligent Systems&amp;quot;, Stanford University, March, 27-29,1990,93-95.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Evans</author>
<author>Kimberly Ginther-Webster</author>
<author>Mary Hart</author>
<author>Robert G Lefferts</author>
<author>Ira A Monarch</author>
</authors>
<title>Automatic indexing using selective NLP and first-order thesauri.</title>
<date>1991</date>
<booktitle>Intelligent Text and Image Handling. Proceedings of a Conference, RIAO &apos;91.</booktitle>
<pages>624--644</pages>
<editor>In: A. Lichnerowicz (ed.),</editor>
<publisher>Elsevier,</publisher>
<location>Amsterdam, NL:</location>
<contexts>
<context position="6227" citStr="Evans et al., 1991" startWordPosition="987" endWordPosition="990"> the phrasebased indexing in the CLARIT Tm systems using a hybrid approach to the extraction of meaningful (continuous or discontinuous) subcompounds from complex noun phrases exploiting both corpusstatistics and linguistic heuristics. Using such subcompounds rather than whole noun phrases as indexing terms helps a phrase-based IR system solve the phrase normalization problem, that is, the problem of matching syntactically different, but semantically similar phrases. The results of our experiments show that both recall and precision are improved by using extracted subcompounds for indexing. 3(Evans et al., 1991; Evans et al., 1993; Evans et al., 1995; Evans et al., 1996) 2 Phrase-Based Indexing The selection of appropriate indexing terms is critical to the improvement of both precision and recall in an IR task. The ideal indexing terms would directly represent the concepts in a document. Since &apos;concepts&apos; are difficult to represent and extract (as well as to define), concept-based indexing is an elusive goal. Virtually all commercial IR systems (with the exception of the CLARIT system) index only on &apos;words&apos;, since the identification of words in texts is typically easier and more efficient than the id</context>
</contexts>
<marker>Evans, Ginther-Webster, Hart, Lefferts, Monarch, 1991</marker>
<rawString>David A. Evans, Kimberly Ginther-Webster, Mary Hart, Robert G. Lefferts, Ira A. Monarch. 1991. Automatic indexing using selective NLP and first-order thesauri. In: A. Lichnerowicz (ed.), Intelligent Text and Image Handling. Proceedings of a Conference, RIAO &apos;91. Amsterdam, NL: Elsevier, pp. 624-644.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Evans</author>
<author>Robert G Lefferts</author>
<author>Gregory Grefenstette</author>
<author>Steven K Handerson</author>
<author>William R Hersh</author>
<author>Armar A Archbold</author>
</authors>
<date>1993</date>
<booktitle>The First Text REtrieval Conference (TREC-1). NIST Special Publication 500-207.</booktitle>
<pages>251--286</pages>
<editor>CLARIT TREC design, experiments, and results. In: Donna K. Harman (ed.),</editor>
<location>Washington, DC:</location>
<contexts>
<context position="1889" citStr="Evans et al., 1993" startWordPosition="280" endWordPosition="283">ay be characterized as the problem of selecting a subset of documents (from a document collection) whose content is relevant to the information need of a user as expressed by a query. The document collections involved in IR are often gigabytes of unrestricted natural-language text. A user&apos;s query may be expressed in a controlled language (e.g., a boolean expression of keywords) or, more desirably, a natural language, such as English. A typical IR system works as follows. The documents to be retrieved are processed to extract indexing terms or content carriers, which are usually 1(Evans, 1990; Evans et al., 1993; Smeaton, 1992; Lewis &amp; Sparck Jones, 1996) single words or (less typically) phrases. The indexing terms provide a description of the document&apos;s content. Weights are often assigned to terms to indicate how well they describe the document. A (natural-language) query is processed in a similar way to extract query terms. Query terms are then matched against the indexing terms of a document to determine the relevance of each document to the query. The ultimate goal of an IR system is to increase both precision, the proportion of retrieved documents that are relevant, as well as recall, the propor</context>
<context position="6247" citStr="Evans et al., 1993" startWordPosition="991" endWordPosition="994">exing in the CLARIT Tm systems using a hybrid approach to the extraction of meaningful (continuous or discontinuous) subcompounds from complex noun phrases exploiting both corpusstatistics and linguistic heuristics. Using such subcompounds rather than whole noun phrases as indexing terms helps a phrase-based IR system solve the phrase normalization problem, that is, the problem of matching syntactically different, but semantically similar phrases. The results of our experiments show that both recall and precision are improved by using extracted subcompounds for indexing. 3(Evans et al., 1991; Evans et al., 1993; Evans et al., 1995; Evans et al., 1996) 2 Phrase-Based Indexing The selection of appropriate indexing terms is critical to the improvement of both precision and recall in an IR task. The ideal indexing terms would directly represent the concepts in a document. Since &apos;concepts&apos; are difficult to represent and extract (as well as to define), concept-based indexing is an elusive goal. Virtually all commercial IR systems (with the exception of the CLARIT system) index only on &apos;words&apos;, since the identification of words in texts is typically easier and more efficient than the identification of more</context>
</contexts>
<marker>Evans, Lefferts, Grefenstette, Handerson, Hersh, Archbold, 1993</marker>
<rawString>David A. Evans, Robert G. Lefferts, Gregory Grefenstette, Steven K. Handerson, William R. Hersh, and Armar A. Archbold. 1993. CLARIT TREC design, experiments, and results. In: Donna K. Harman (ed.), The First Text REtrieval Conference (TREC-1). NIST Special Publication 500-207. Washington, DC: U.S. Government Printing Office, pp. 251-286; 494-501.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Evans</author>
<author>Robert G Lefferts</author>
</authors>
<date>1995</date>
<booktitle>CLARITTREC experiments Information Processing and Management,</booktitle>
<volume>31</volume>
<pages>3--385</pages>
<marker>Evans, Lefferts, 1995</marker>
<rawString>David A. Evans, and Robert G. Lefferts. 1995. CLARITTREC experiments Information Processing and Management, Vol. 31, No. 3,385-395.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Evans</author>
<author>Nataga Milie-Frayling</author>
<author>Robert G Lefferts</author>
</authors>
<title>CLARIT TREC-4 experiments.</title>
<date>1996</date>
<journal>In: Donna</journal>
<volume>14</volume>
<location>Lauer,</location>
<contexts>
<context position="6288" citStr="Evans et al., 1996" startWordPosition="999" endWordPosition="1002">ybrid approach to the extraction of meaningful (continuous or discontinuous) subcompounds from complex noun phrases exploiting both corpusstatistics and linguistic heuristics. Using such subcompounds rather than whole noun phrases as indexing terms helps a phrase-based IR system solve the phrase normalization problem, that is, the problem of matching syntactically different, but semantically similar phrases. The results of our experiments show that both recall and precision are improved by using extracted subcompounds for indexing. 3(Evans et al., 1991; Evans et al., 1993; Evans et al., 1995; Evans et al., 1996) 2 Phrase-Based Indexing The selection of appropriate indexing terms is critical to the improvement of both precision and recall in an IR task. The ideal indexing terms would directly represent the concepts in a document. Since &apos;concepts&apos; are difficult to represent and extract (as well as to define), concept-based indexing is an elusive goal. Virtually all commercial IR systems (with the exception of the CLARIT system) index only on &apos;words&apos;, since the identification of words in texts is typically easier and more efficient than the identification of more complex structures. However, single word</context>
<context position="30642" citStr="Evans et al., 1996" startWordPosition="4974" endWordPosition="4977"> small compounds provide more accurate (and effective) indexing terms than full NPs. Precision improves at various returned-document levels, as well, as shown in Table 3. Initial precision, in particular, improves significantly. This &amp;quot;Note that the CLARIT process used as a baseline does not reflect optimum CLARIT performance, e.g., as obtained in actual TREC evaluations, since we did not use a variety of standard CLARIT techniques that significantly improve performance, such as automatic query expansion, distractor space generation, subterm indexing, or differential query-term weighting. Cf. (Evans et al., 1996) for details. 11(Harman, 1993) suggests that the PES could be used to support other IR enhancements, such as automatic feedback of the top-returned documents to expand the initial query for a second retrieval step.&amp;quot; CLARIT Retrieved-Rel Total-Rel Recall Baseline 2,668 3,304 80.8% PES 2,695 3,304 81.6% Table 1: Recall Results Recall Baseline PES Rel.Improvement 0.00 0.6819 0.7099 4% 0.10 0.5535 0.5730 3.5% 0.20 0.4626 0.4927 6.5% 0.30 0.4098 0.4329 5.6% 0.40 0.3524 0.3782 7.0% 0.50 0.3289 0.3317 0.5% 0.60 0.2999 0.3026 0.9% 0.70 0.2481 0.2458 -0.9% 0.80 0.1860 0.1966 5.7% 0.90 0.1190 0.1448 21.</context>
<context position="32122" citStr="Evans et al., 1996" startWordPosition="5216" endWordPosition="5219"> docs 0.1770 0.1844 4% 500 docs 0.0973 0.0994 2% 1000 docs 0.0568 0.0573 1% Table 3: Precision at Various Document Levels The PES, which was not optimized for processing, required approximately 3.5 hours per 20- megabyte subset of AP89 on a 133-MHz DEC alpha processor.13 Most processing time (more than 2 of every 3.5 hours) was spent on simplex NP parsing. Such speed might be acceptable in some, smallerscale IR applications, but it is considerably slower than the baseline speed of CLARIT noun-phrase identification (viz., 200 megabytes per hour on a 100-MIPS processor). 12 (Evans et al., 1995; Evans et al., 1996) &amp;quot;Note that the machine was not dedicated to the PES processing; other processes were running simultaneously. 23 6 Conclusions The notion of association-based parsing dates at least from (Marcus, 1980) and has been explored again recently by a number of researchers.14 The method we have developed differs from previous work in that it uses linguistic heuristics and locality scoring along with corpus statistics to generate phrase associations. The experiment contrasting the PES with baseline processing in a commercial IR system demonstrates a direct, positive effect of the use of lexical atoms, </context>
</contexts>
<marker>Evans, Milie-Frayling, Lefferts, 1996</marker>
<rawString>David A. Evans, Nataga Milie-Frayling, Robert G. Lefferts. 1996. CLARIT TREC-4 experiments. In: Donna 14 (Liberman et al., 1992; Pustejovsky et al., 1993; Resnik et al., 1993; Lauer, 1995)</rawString>
</citation>
<citation valid="false">
<booktitle>The Fourth Text REtrieval Conference (TREC-4). NIST Special Publication.</booktitle>
<editor>K. Harman (ed.),</editor>
<location>Washington, DC:</location>
<marker></marker>
<rawString>K. Harman (ed.), The Fourth Text REtrieval Conference (TREC-4). NIST Special Publication. Washington, DC: U.S. Government Printing Office.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donna K Harman</author>
<author>ed</author>
</authors>
<date>1993</date>
<booktitle>The First Text REtrieval Conference (TREC-1) NIST Special Publication 500-207.</booktitle>
<editor>U.S. Government Printing Office.</editor>
<location>Washington, DC:</location>
<marker>Harman, ed, 1993</marker>
<rawString>Donna K. Harman, ed. 1993. The First Text REtrieval Conference (TREC-1) NIST Special Publication 500-207. Washington, DC: U.S. Government Printing Office.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donna K Harman</author>
<author>ed</author>
</authors>
<date>1995</date>
<booktitle>Overview of the Third Text REtrieval Conference (TREC-3), NIST Special Publication 500-225.</booktitle>
<editor>U.S. Government Printing Office.</editor>
<location>Washington, DC:</location>
<marker>Harman, ed, 1995</marker>
<rawString>Donna K. Harman, ed. 1995. Overview of the Third Text REtrieval Conference (TREC-3), NIST Special Publication 500-225. Washington, DC: U.S. Government Printing Office.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donna K Harman</author>
<author>ed</author>
</authors>
<date>1996</date>
<booktitle>Overview of the Fourth Text REtrieval Conference (TREC-4), NIST Special Publication.</booktitle>
<editor>U.S. Government Printing Office.</editor>
<location>Washington, DC:</location>
<marker>Harman, ed, 1996</marker>
<rawString>Donna K. Harman, ed. 1996. Overview of the Fourth Text REtrieval Conference (TREC-4), NIST Special Publication. Washington, DC: U.S. Government Printing Office.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Lauer</author>
</authors>
<title>Corpus statistics meet with the noun compound: Some empirical results. In:</title>
<date>1995</date>
<booktitle>Proceedings of the 33th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<marker>Lauer, 1995</marker>
<rawString>Mark Lauer. 1995. Corpus statistics meet with the noun compound: Some empirical results. In: Proceedings of the 33th Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Lewis</author>
<author>K Sparck Jones</author>
</authors>
<title>Natural language processing for information retrieval.</title>
<date>1996</date>
<journal>Communications of the ACM, January,</journal>
<volume>39</volume>
<pages>1--92</pages>
<marker>Lewis, Jones, 1996</marker>
<rawString>David Lewis and K. Sparck Jones. 1996. Natural language processing for information retrieval. Communications of the ACM, January, Vol. 39, No. 1,92-101.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Liberman</author>
<author>Richard Sproat</author>
</authors>
<title>The stress and structure of modified noun phrases</title>
<date>1992</date>
<booktitle>Lexical Matters, CSLI Lecture Notes No. 24.</booktitle>
<pages>131--181</pages>
<editor>in English. In: I. Sag and A. Szabolcsi (eds.),</editor>
<publisher>University of Chicago Press,</publisher>
<location>Chicago, IL:</location>
<marker>Liberman, Sproat, 1992</marker>
<rawString>Mark Liberman and Richard Sproat. 1992. The stress and structure of modified noun phrases in English. In: I. Sag and A. Szabolcsi (eds.), Lexical Matters, CSLI Lecture Notes No. 24. Chicago, IL: University of Chicago Press, pp. 131-181.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mitchell Maucus</author>
</authors>
<title>A Theory of Syntactic Recognition for Natural Language.</title>
<date>1980</date>
<publisher>MIT Press.</publisher>
<location>Cambridge, MA:</location>
<marker>Maucus, 1980</marker>
<rawString>Mitchell Maucus. 1980. A Theory of Syntactic Recognition for Natural Language. Cambridge, MA: MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Pustejovsky</author>
<author>S Bergler</author>
<author>P Anick</author>
</authors>
<title>Lexical semantic techniques for corpus analysis.</title>
<date>1993</date>
<journal>In: Computational Linguistics,</journal>
<booktitle>Special Issue on Using Large Corpora II,</booktitle>
<volume>19</volume>
<issue>2</issue>
<pages>331--358</pages>
<marker>Pustejovsky, Bergler, Anick, 1993</marker>
<rawString>J. Pustejovsky, S. Bergler, and P. Anick. 1993. Lexical semantic techniques for corpus analysis. In: Computational Linguistics, Vol. 19(2), Special Issue on Using Large Corpora II, pp. 331-358.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Resnik</author>
<author>M Hearst</author>
</authors>
<title>Structural Ambiguity and Conceptual Relations. In:</title>
<date>1993</date>
<booktitle>Proceedings of the Workshop on Very Large Corpora: Academic and Industrial Perspectives,</booktitle>
<pages>58--64</pages>
<institution>Ohio State University,</institution>
<marker>Resnik, Hearst, 1993</marker>
<rawString>P. Resnik, and M. Hearst. 1993. Structural Ambiguity and Conceptual Relations. In: Proceedings of the Workshop on Very Large Corpora: Academic and Industrial Perspectives, June 22, Ohio State University, pp. 58-64.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gerard Salton</author>
<author>Michael McGill</author>
</authors>
<title>Introduction to Modern Information Retrieval,</title>
<date>1983</date>
<publisher>McGrawHill.</publisher>
<location>New York, NY:</location>
<contexts>
<context position="3932" citStr="Salton &amp; McGill, 1983" startWordPosition="614" endWordPosition="617"> IR system as performing an NLP task: text is &apos;parsed&apos; for terms and terms are used to express &apos;meaning&apos;—to capture document content. Clearly, most traditional IR systems do not attempt to find structure in the naturallanguage text in the &apos;parsing&apos; process; they merely extract word-like strings to use in indexing. Ideally, however, extracted structure would directly reflect the encoded linguistic relations among terms— captuing the conceptual content of the text better than simple word-strings. There are several prerequisites for effective NLP in an IR application, including the following. 2 (Salton &amp; McGill, 1983) 17 1. Ability to process large amounts of text The amount of text in the databases accessed by modem IR systems is typically measured in gigabytes. This requires that the NLP used must be extraordinarily efficient in both its time and space requirements. It would be impractical to use a parser with the speed of one or two sentences per second. 2. Ability to process unrestricted text The text database for an IR task is generally unrestricted natural-language text possibly encompassing many different domains and topics. A parser must be able to manage the many kinds of problems one sees in natu</context>
</contexts>
<marker>Salton, McGill, 1983</marker>
<rawString>Gerard Salton and Michael McGill. 1983. Introduction to Modern Information Retrieval, New York, NY: McGrawHill.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christoph Schwarz</author>
</authors>
<title>Content based text handling.</title>
<date>1990</date>
<journal>Information Processing and Management,</journal>
<volume>26</volume>
<issue>2</issue>
<pages>219--226</pages>
<contexts>
<context position="18665" citStr="Schwarz, 1990" startWordPosition="2992" endWordPosition="2993">recognition of lexical atoms in free text is difficult. In particular, the relevant lexical atoms for a corpus of text will reflect the various discourse domains encompassed by the text. In a collection of medical documents, for example, &amp;quot;Wilson&apos;s disease&amp;quot; (an actual rheumatological disorder) may be used as a lexical atom, whereas in a collection of general news stories, &amp;quot;Wilson&apos;s disease&amp;quot; (reference to the disease that Wilson has) may not be a lexical atom. Note that in the case of the medical usage, we would commonly find &amp;quot;Wilson&apos;s disease&amp;quot; as a bigram and we would not find, for example, 8 (Schwarz, 1990) reports a similar strategy. 20 &amp;quot;Wilson&apos;s severe disease&amp;quot; as a phrase, though the latter might well occur in the general news corpus. This example serves to illustrate the essential observation that motivates our heuristics for identitying lexical atoms in a corpus: (1) words in lexical atoms have strong association, and thus tend to co-occur as a phrase and (2) when the words in a lexical atom co-occur in a noun phrase, they are never or rarely separated. The detection of lexical atoms, like the parsing of simplex noun phrases, is also done in multiple phases. At each phase, only two adjacent</context>
</contexts>
<marker>Schwarz, 1990</marker>
<rawString>Christoph Schwarz. 1990. Content based text handling. Information Processing and Management, Vol. 26(2), pp. 219-226.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan F Smeaton</author>
</authors>
<title>Progress in application of natural language processing to information retrieval.</title>
<date>1992</date>
<journal>The Computer Journal,</journal>
<volume>35</volume>
<pages>268--278</pages>
<contexts>
<context position="1904" citStr="Smeaton, 1992" startWordPosition="284" endWordPosition="285">as the problem of selecting a subset of documents (from a document collection) whose content is relevant to the information need of a user as expressed by a query. The document collections involved in IR are often gigabytes of unrestricted natural-language text. A user&apos;s query may be expressed in a controlled language (e.g., a boolean expression of keywords) or, more desirably, a natural language, such as English. A typical IR system works as follows. The documents to be retrieved are processed to extract indexing terms or content carriers, which are usually 1(Evans, 1990; Evans et al., 1993; Smeaton, 1992; Lewis &amp; Sparck Jones, 1996) single words or (less typically) phrases. The indexing terms provide a description of the document&apos;s content. Weights are often assigned to terms to indicate how well they describe the document. A (natural-language) query is processed in a similar way to extract query terms. Query terms are then matched against the indexing terms of a document to determine the relevance of each document to the query. The ultimate goal of an IR system is to increase both precision, the proportion of retrieved documents that are relevant, as well as recall, the proportion of relevan</context>
<context position="11583" citStr="Smeaton, 1992" startWordPosition="1846" endWordPosition="1847">r example, under normal CLARIT processing the phrase &amp;quot;the quality of surface of treated stainless steel strip&amp;quot;&apos; would yield index terms such as &amp;quot;treated stainless steel strip&amp;quot;, &amp;quot;treated stainless steel&amp;quot;, &amp;quot;stainless steel strip&amp;quot;, and &amp;quot;stainless steel&amp;quot; (as a phrase, not lexical atom), along with all the relevant single-word terms in the phrase. But the process would not identify &amp;quot;stainless steel&amp;quot; as a potential lexical atom or find terms such as &amp;quot;surface quality&amp;quot;, &amp;quot;strip surface&amp;quot;, and &amp;quot;treated strip&amp;quot;. To achieve more complete (and accurate) phrasebased indexing, we propose to use the following (Smeaton, 1992) &apos;This is an actual example from a U.S. patent document. four kinds of phrases as indexing terms: 1. Lexical atoms (e.g., &amp;quot;hot dog&amp;quot; or perhaps &amp;quot;stainless steel&amp;quot; in the example above) 2. Head modifier pairs (e.g., &amp;quot;treated strip&amp;quot; and &amp;quot;steel strip&amp;quot; in the example above) 3. Subcompounds (e.g., &amp;quot;stainless steel strip&amp;quot; in the example above) 4. Cross-preposition modification pairs (e.g., &amp;quot;surface quality&amp;quot; in the example above) In effect, we aim to augment CLARIT indexing with lexical atoms and phrases capturing additional (discontinuous) modification relations than those that can be found within sim</context>
</contexts>
<marker>Smeaton, 1992</marker>
<rawString>Alan F. Smeaton. 1992. Progress in application of natural language processing to information retrieval. The Computer Journal, Vol. 35, No. 3, pp. 268-278.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Strzalkowski</author>
<author>J Carballo</author>
</authors>
<title>Recent developments in natural language text retrieval.</title>
<date>1994</date>
<booktitle>The Second Text REtrieval Conference (TREC-2). NIST Special Publication 500-215.</booktitle>
<pages>123--136</pages>
<editor>In: Donna K. Harman (ed.),</editor>
<location>Washington, DC:</location>
<marker>Strzalkowski, Carballo, 1994</marker>
<rawString>T. Strzalkowski and J. Carballo. 1994. Recent developments in natural language text retrieval. In: Donna K. Harman (ed.), The Second Text REtrieval Conference (TREC-2). NIST Special Publication 500-215. Washington, DC: U.S. Government Printing Office, pp. 123-136.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>