This doc describes how to preprocess new files xml and add them to the database.
In order to first easily retrieve similar files (regardless on the point of view over their common subject), a Pandas DataFrame is built.
It contains a Matrix where the element at index i,j is a value which reflects the "similarity" between doc i and j. This dataFrame is saved
as data/similarities.pkl.
If you want to add new xml files to the database, just add them to the data/new_xml folder, and then run src/xml_to_txt_pipeline.py

This script  :

 - Extracts the text from each .xml, and adds it to new text files in the data/txt folder.
 - Moves the original .xml files from data/new_xml to data/xml
 - Adds a new line / column to the dataFrame's matrix for each new files, and computes the similarity
   between the new file(s) and each of the already existing text files. This value is stored at the corresponding index in the matrix.

Note : if you want to start from scratch, just delete all files from data/txt, data/xml, and the data/similarities.pkl file.

Problem to solve :
The similarity function currently used for comparision is Spacy's built-in one. It doesn't seem to be efficient for us, since it outputs values very
close to 1 for almost every pair of text. I will be focusing today on how to address it by building a custom comparision function,
feel free to help if you have ideas :)


If you want a heatmap showing the similarity between all of the already processed files, just call src/display.py


Requirements (python libraries) :
- spacy
- pandas
- numpy
- seaborn (only for src/display.py)
