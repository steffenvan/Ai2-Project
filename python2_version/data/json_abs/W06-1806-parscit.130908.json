[{"frames":[{"target":{"name":"Becoming_aware","spans":[{"start":3,"end":4,"text":"Abstract"}]},"annotationSets":[{"rank":0,"score":80.02631038556669,"frameElements":[{"name":"Cognizer","spans":[{"start":0,"end":2,"text":"< newSection"}]},{"name":"Phenomenon","spans":[{"start":4,"end":6,"text":"We consider"}]}]}]},{"target":{"name":"Categorization","spans":[{"start":5,"end":6,"text":"consider"}]},"annotationSets":[{"rank":0,"score":36.44680365332562,"frameElements":[{"name":"Cognizer","spans":[{"start":4,"end":5,"text":"We"}]},{"name":"Item","spans":[{"start":0,"end":2,"text":"< newSection"}]},{"name":"Category","spans":[{"start":6,"end":35,"text":"a logicist approach to natural language understanding based on the translation of a quasi-logical form into a temporal logic , explicitly constructed for the representation of action and change"}]}]}]},{"target":{"name":"Means","spans":[{"start":8,"end":9,"text":"approach"}]},"annotationSets":[{"rank":0,"score":18.793786805939952,"frameElements":[{"name":"Means","spans":[{"start":8,"end":9,"text":"approach"}]}]}]},{"target":{"name":"Awareness","spans":[{"start":12,"end":13,"text":"understanding"}]},"annotationSets":[{"rank":0,"score":47.441938664586985,"frameElements":[{"name":"Content","spans":[{"start":13,"end":25,"text":"based on the translation of a quasi-logical form into a temporal logic"}]}]}]},{"target":{"name":"Translating","spans":[{"start":16,"end":17,"text":"translation"}]},"annotationSets":[{"rank":0,"score":6.3423159666656375,"frameElements":[]}]},{"target":{"name":"Type","spans":[{"start":20,"end":21,"text":"form"}]},"annotationSets":[{"rank":0,"score":18.005801248962896,"frameElements":[{"name":"Subtype","spans":[{"start":20,"end":21,"text":"form"}]},{"name":"Type_Property","spans":[{"start":19,"end":20,"text":"quasi-logical"}]}]}]},{"target":{"name":"Building","spans":[{"start":27,"end":28,"text":"constructed"}]},"annotationSets":[{"rank":0,"score":72.65925904750524,"frameElements":[{"name":"Created_entity","spans":[{"start":28,"end":35,"text":"for the representation of action and change"}]},{"name":"Time","spans":[{"start":26,"end":27,"text":"explicitly"}]}]}]},{"target":{"name":"Communicate_categorization","spans":[{"start":30,"end":31,"text":"representation"}]},"annotationSets":[{"rank":0,"score":38.63141462367134,"frameElements":[{"name":"Item","spans":[{"start":31,"end":35,"text":"of action and change"}]}]}]},{"target":{"name":"Intentionally_act","spans":[{"start":32,"end":33,"text":"action"}]},"annotationSets":[{"rank":0,"score":58.92499915004777,"frameElements":[]}]},{"target":{"name":"Undergo_change","spans":[{"start":34,"end":35,"text":"change"}]},"annotationSets":[{"rank":0,"score":54.806373683351985,"frameElements":[]}]},{"target":{"name":"Relative_time","spans":[{"start":38,"end":39,"text":"subsequent"}]},"annotationSets":[{"rank":0,"score":18.54238681386274,"frameElements":[]}]},{"target":{"name":"Buildings","spans":[{"start":43,"end":44,"text":"structure"}]},"annotationSets":[{"rank":0,"score":45.455282559224734,"frameElements":[{"name":"Building","spans":[{"start":43,"end":44,"text":"structure"}]}]}]},{"target":{"name":"Awareness","spans":[{"start":50,"end":51,"text":"knowledge"}]},"annotationSets":[{"rank":0,"score":48.85883511828528,"frameElements":[{"name":"Cognizer","spans":[{"start":49,"end":50,"text":"background"}]}]}]},{"target":{"name":"Using","spans":[{"start":52,"end":53,"text":"using"}]},"annotationSets":[{"rank":0,"score":98.60916068946337,"frameElements":[{"name":"Instrument","spans":[{"start":53,"end":57,"text":"automated theorem proving techniques"}]}]}]},{"target":{"name":"Evidence","spans":[{"start":55,"end":56,"text":"proving"}]},"annotationSets":[{"rank":0,"score":31.056628504447765,"frameElements":[{"name":"Proposition","spans":[{"start":56,"end":57,"text":"techniques"}]}]}]},{"target":{"name":"Means","spans":[{"start":56,"end":57,"text":"techniques"}]},"annotationSets":[{"rank":0,"score":20.16194198895599,"frameElements":[{"name":"Means","spans":[{"start":56,"end":57,"text":"techniques"}]}]}]}],"tokens":["<","newSection",">","Abstract","We","consider","a","logicist","approach","to","natural","language","understanding","based","on","the","translation","of","a","quasi-logical","form","into","a","temporal","logic",",","explicitly","constructed","for","the","representation","of","action","and","change",",","and","the","subsequent","reasoning","about","this","semantic","structure","in","the","context","of","a","background","knowledge","theory","using","automated","theorem","proving","techniques","."]},{"frames":[{"target":{"name":"Means","spans":[{"start":1,"end":2,"text":"approach"}]},"annotationSets":[{"rank":0,"score":22.273031352181444,"frameElements":[{"name":"Means","spans":[{"start":4,"end":68,"text":"through a proof-ofconcept question answering system implementation that uses a head-driven phrase structure grammar developed in the Linguistic Knowledge Builder to construct minimal recursion semantics structures which are translated into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]}]}]},{"target":{"name":"Evidence","spans":[{"start":3,"end":4,"text":"substantiated"}]},"annotationSets":[{"rank":0,"score":40.23259573404296,"frameElements":[{"name":"Proposition","spans":[{"start":4,"end":68,"text":"through a proof-ofconcept question answering system implementation that uses a head-driven phrase structure grammar developed in the Linguistic Knowledge Builder to construct minimal recursion semantics structures which are translated into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]},{"name":"Support","spans":[{"start":0,"end":2,"text":"The approach"}]}]}]},{"target":{"name":"Point_of_dispute","spans":[{"start":7,"end":8,"text":"question"}]},"annotationSets":[{"rank":0,"score":17.485698853329946,"frameElements":[{"name":"Question","spans":[{"start":8,"end":68,"text":"answering system implementation that uses a head-driven phrase structure grammar developed in the Linguistic Knowledge Builder to construct minimal recursion semantics structures which are translated into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]},{"name":"Descriptor","spans":[{"start":6,"end":7,"text":"proof-ofconcept"}]}]}]},{"target":{"name":"Communication_response","spans":[{"start":8,"end":9,"text":"answering"}]},"annotationSets":[{"rank":0,"score":41.73531240661613,"frameElements":[{"name":"Message","spans":[{"start":12,"end":68,"text":"uses a head-driven phrase structure grammar developed in the Linguistic Knowledge Builder to construct minimal recursion semantics structures which are translated into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]}]}]},{"target":{"name":"Gizmo","spans":[{"start":9,"end":10,"text":"system"}]},"annotationSets":[{"rank":0,"score":21.90311331081581,"frameElements":[]}]},{"target":{"name":"Execute_plan","spans":[{"start":10,"end":11,"text":"implementation"}]},"annotationSets":[{"rank":0,"score":46.88960914979598,"frameElements":[]}]},{"target":{"name":"Using","spans":[{"start":12,"end":13,"text":"uses"}]},"annotationSets":[{"rank":0,"score":111.72465876650814,"frameElements":[{"name":"Instrument","spans":[{"start":13,"end":18,"text":"a head-driven phrase structure grammar"}]},{"name":"Agent","spans":[{"start":11,"end":12,"text":"that"}]},{"name":"Purpose","spans":[{"start":24,"end":68,"text":"to construct minimal recursion semantics structures which are translated into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]}]}]},{"target":{"name":"Encoding","spans":[{"start":15,"end":16,"text":"phrase"}]},"annotationSets":[{"rank":0,"score":17.64209643378463,"frameElements":[{"name":"Message","spans":[{"start":24,"end":68,"text":"to construct minimal recursion semantics structures which are translated into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]}]}]},{"target":{"name":"Buildings","spans":[{"start":16,"end":17,"text":"structure"}]},"annotationSets":[{"rank":0,"score":46.557186356899344,"frameElements":[{"name":"Building","spans":[{"start":16,"end":17,"text":"structure"}]}]}]},{"target":{"name":"Cause_to_make_progress","spans":[{"start":18,"end":19,"text":"developed"}]},"annotationSets":[{"rank":0,"score":78.15085563668792,"frameElements":[{"name":"Project","spans":[{"start":19,"end":24,"text":"in the Linguistic Knowledge Builder"}]}]}]},{"target":{"name":"Awareness","spans":[{"start":22,"end":23,"text":"Knowledge"}]},"annotationSets":[{"rank":0,"score":50.52036465144933,"frameElements":[{"name":"Content","spans":[{"start":24,"end":68,"text":"to construct minimal recursion semantics structures which are translated into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]}]}]},{"target":{"name":"Building","spans":[{"start":25,"end":26,"text":"construct"}]},"annotationSets":[{"rank":0,"score":75.99929446314871,"frameElements":[{"name":"Created_entity","spans":[{"start":26,"end":30,"text":"minimal recursion semantics structures"}]},{"name":"Agent","spans":[{"start":11,"end":12,"text":"that"}]}]}]},{"target":{"name":"Buildings","spans":[{"start":29,"end":30,"text":"structures"}]},"annotationSets":[{"rank":0,"score":49.34834983858352,"frameElements":[{"name":"Building","spans":[{"start":29,"end":30,"text":"structures"}]},{"name":"Function","spans":[{"start":28,"end":29,"text":"semantics"}]}]}]},{"target":{"name":"Categorization","spans":[{"start":32,"end":33,"text":"translated"}]},"annotationSets":[{"rank":0,"score":47.63666937929444,"frameElements":[{"name":"Item","spans":[{"start":30,"end":31,"text":"which"}]},{"name":"Category","spans":[{"start":33,"end":68,"text":"into a Temporal Action Logic where both the SNARK automated theorem prover and the Allegro Prolog logic programming environment can be used for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]}]}]},{"target":{"name":"Intentionally_act","spans":[{"start":36,"end":37,"text":"Action"}]},"annotationSets":[{"rank":0,"score":59.312121441726624,"frameElements":[]}]},{"target":{"name":"Locative_relation","spans":[{"start":38,"end":39,"text":"where"}]},"annotationSets":[{"rank":0,"score":23.899232842901693,"frameElements":[{"name":"Figure","spans":[{"start":34,"end":38,"text":"a Temporal Action Logic"}]},{"name":"Ground","spans":[{"start":39,"end":40,"text":"both"}]}]}]},{"target":{"name":"Likelihood","spans":[{"start":52,"end":53,"text":"can"}]},"annotationSets":[{"rank":0,"score":33.82356530585196,"frameElements":[{"name":"Hypothetical_event","spans":[{"start":43,"end":52,"text":"theorem prover and the Allegro Prolog logic programming environment"}]}]}]},{"target":{"name":"Using","spans":[{"start":54,"end":55,"text":"used"}]},"annotationSets":[{"rank":0,"score":113.92099626330426,"frameElements":[{"name":"Instrument","spans":[{"start":43,"end":52,"text":"theorem prover and the Allegro Prolog logic programming environment"}]},{"name":"Purpose","spans":[{"start":55,"end":68,"text":"for reasoning through an interchangeable compilation into first-order logic or logic programs respectively"}]}]}]},{"target":{"name":"Reasoning","spans":[{"start":56,"end":57,"text":"reasoning"}]},"annotationSets":[{"rank":0,"score":44.759161544883256,"frameElements":[]}]},{"target":{"name":"Project","spans":[{"start":66,"end":67,"text":"programs"}]},"annotationSets":[{"rank":0,"score":51.60110861063052,"frameElements":[{"name":"Project","spans":[{"start":66,"end":67,"text":"programs"}]}]}]}],"tokens":["The","approach","is","substantiated","through","a","proof-ofconcept","question","answering","system","implementation","that","uses","a","head-driven","phrase","structure","grammar","developed","in","the","Linguistic","Knowledge","Builder","to","construct","minimal","recursion","semantics","structures","which","are","translated","into","a","Temporal","Action","Logic","where","both","the","SNARK","automated","theorem","prover","and","the","Allegro","Prolog","logic","programming","environment","can","be","used","for","reasoning","through","an","interchangeable","compilation","into","first-order","logic","or","logic","programs","respectively","."]}]