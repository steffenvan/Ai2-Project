<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000137">
<title confidence="0.997661">
A Hybrid Model for Urdu Hindi Transliteration
</title>
<author confidence="0.908208">
Abbas Malik Laurent Besacier Christian Boitet
</author>
<affiliation confidence="0.727733">
GETALP, Laboratoire d’Informatique Grenoble (LIG)
Université Joseph Fourier
</affiliation>
<address confidence="0.581281">
Abbas.Malik, Laurent.Besacier,
</address>
<email confidence="0.964556">
Christian.Boitet@imag.fr
</email>
<note confidence="0.601908">
Pushpak Bhattacharyya
IIT Bombay
</note>
<email confidence="0.938704">
pb@cse.iitb.ac.in
</email>
<sectionHeader confidence="0.993641" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999969210526316">
We report in this paper a novel hybrid ap-
proach for Urdu to Hindi transliteration that
combines finite-state machine (FSM) based
techniques with statistical word language
model based approach. The output from the
FSM is filtered with the word language model
to produce the correct Hindi output. The main
problem handled is the case of omission of di-
acritical marks from the input Urdu text. Our
system produces the correct Hindi output even
when the crucial information in the form of di-
acritic marks is absent. The approach improves
the accuracy of the transducer-only approach
from 50.7% to 79.1%. The results reported
show that performance can be improved using
a word language model to disambiguate the
output produced by the transducer-only ap-
proach, especially when diacritic marks are not
present in the Urdu input.
</bodyText>
<sectionHeader confidence="0.998992" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999320580645161">
Transliteration is a process to transcribe a word
written in one language, in another language by
preserving its articulation. It is crucial for han-
dling out-of-vocabulary (OOV) words in differ-
ent domains of Natural Language Processing
(NLP), especially in Machine Translation
(Knight and Graehl, 1998; Knight and Stall,
1998; Paola and Sanjeev, 2003), Cross-Lingual
Information Retrieval (Pirkola et al., 2003), the
development of multi-lingual resources (Yan et
al., 2003) and multi-lingual text and speech
processing. It is also useful for Inter-dialectal
translation without lexical changes and some-
times it is mandatory when the dialects in ques-
tion use mutually incomprehensible writing sys-
tems. Such cases exists in Malay (written in 2
different scripts), Turkish (2 scripts), Kurdish (3
scripts), Hindi/Urdu (2 scripts), Punjabi (2
scripts), etc., where words are transliterated from
one script to the other, irrespective of their type
(noun, verb, etc., and not only proper nouns and
unknown words). In this study, we will focus on
Hindi/Urdu example.
Hindi and Urdu are written in two mutually
incomprehensible scripts, Devanagari and Urdu
script – a derivative of Persio-Arabic script re-
spectively. Hindi and Urdu are the official lan-
guages of India and the later is also the National
language of Pakistan (Rahman, 2004). Table 1
gives an idea about the number of speakers of
Hindi and Urdu.
</bodyText>
<table confidence="0.991717833333333">
Native 2nd Lang. Total
Speaker Speaker
Hindi 366 487 853
Urdu 60.29 104 164.29
Total 426.29 591 1,017.29
Source: (Grimes, 2000) all numbers are in millions
</table>
<tableCaption confidence="0.999652">
Table 1: Hindi and Urdu Speakers
</tableCaption>
<bodyText confidence="0.999803222222222">
Notwithstanding the transcriptional differences,
Hindi and Urdu share phonology, grammar,
morphology, literature, cultural heritage, etc.
People from Hindi and Urdu communities can
understand the verbal expressions of each other
but the written expression of one community is
alien to the other community.
A finite-state transliteration model for Hindi
and Urdu transliteration using the Universal In-
termediate Transcription (UIT – a pivot between
the two scripts) was proposed by Malik et al.
(2008). The non-probabilistic finite-state model
is not powerful enough to solve all problems of
Hindi ↔ Urdu transliteration. We visit and ana-
lyze Hindi ↔ Urdu transliteration problems in
the next section and show that the solution of
these problems is beyond the scope of a non-
probabilistic finite-state transliteration model.
</bodyText>
<page confidence="0.966052">
177
</page>
<note confidence="0.988128">
Proceedings of the 2009 Named Entities Workshop, ACL-IJCNLP 2009, pages 177–185,
Suntec, Singapore, 7 August 2009. c�2009 ACL and AFNLP
</note>
<bodyText confidence="0.999950357142857">
Following this, we show how a statistical model
can be used to solve some of these problems,
thereby enhancing the capabilities of the finite-
state model.
Thus, we propose a hybrid transliteration
model by combining the finite-state model and
the statistical word language model for solving
Hindi ↔ Urdu transliteration problems, dis-
cussed in section 2. Section 3 will throw light on
the proposed model, its different components and
various steps involved in its construction. In sec-
tion 4, we will report and various aspects of dif-
ferent experiments and their results. Finally, we
will conclude this study in section 5.
</bodyText>
<sectionHeader confidence="0.974294" genericHeader="method">
2 Hindi Urdu Transliteration
</sectionHeader>
<bodyText confidence="0.999787714285714">
In this section, we will analyze Hindi ↔ Urdu
transliteration problems and will concentrate on
Urdu to Hindi transliteration only due to shortage
of space and will discuss the reverse translitera-
tion later. Thus, the remainder of the section ana-
lyzes the problems from Urdu to Hindi translite-
ration.
</bodyText>
<subsectionHeader confidence="0.975189">
2.1 Vowel, Yeh (ﯼ) and Waw (و)
</subsectionHeader>
<bodyText confidence="0.9970405">
Urdu is written in a derivation of Persio-Arabic
script. Urdu vowels are represented with the help
of four long vowels Alef-madda (ﺁ), Alef (ا),
Waw (و), Yeh (ﯼ) and diacritical marks. One
vowel can be represented in many ways depend-
ing upon its context or on the origin of the word,
e.g. the vowel [ɑ] is represented by Alef-madda
(ﺁ) at the beginning of a word, by Alef (ا) in the
middle of a word and in some Persio-Arabic loan
word, it is represented by the diacritical mark
Khari Zabar (G◌). Thus Urdu has very complex
vowel system, for more details see Malik et al.
(2008). Urdu contains 10 vowels, and 7 of them
also have their nasalization forms (Hussain,
2004; Khan, 1997) and 15 diacritical marks.
Thou diacritical marks form the cornerstone of
the Urdu vowel system, but are sparingly used
(Zia, 1999). They are vital for the correct Urdu to
Hindi transliteration using the finite-state transli-
teration model. The accuracy of the finite-state
transliteration model decreases from above 80%
to 50% in the absence of diacritical marks. Fig-
ure 1 shows two example Urdu phrases (i) with
and (ii) without the diacritical marks and their
Hindi transliteration using the finite-state transli-
teration model. Due to the absence of Zabar (F◌)
in the first and the last words in (1)(ii) and in the
5th word in (2)(ii), vowels ◌ै [æ] and औ [ɔ] are
transliterated into vowels ◌े [e] and ओ [o] re-
spectively. Similarly, due to the absence of Pesh
(E◌) and Zer (G◌) in 3rd and 4th words respectively
in (1)(ii), both vowels ◌ु [ʊ] and ि◌ [ɪ] are con-
verted into the vowel [ə]. All wrongly converted
words are underlined.
</bodyText>
<figureCaption confidence="0.999268">
Figure 1: Example Urdu Phrases
</figureCaption>
<bodyText confidence="0.9740672">
In Hindi, each vowel is represented by a cha-
racter and a vowel sign except the vowel [ə],
which is only represented by the character अ and
do not have a vowel sign (Malik et al., 2008).
Table 2 gives all vowel conversion problems.
</bodyText>
<figure confidence="0.583793666666667">
Sr. IPA Vowel Hindi
Conversion
Problems
1 ɪ ɪ → ə इ or ि◌ → अ or 0*
2 ʊ ʊ → ə उ or ◌ु → अ or 0*
3 i i → e ई or ◌ी → ए or ◌े
4 æ æ → e ऐ or ◌ै → ए or ◌े
5 u u → o ऊ or ◌ू → ओ or ◌ो
6 ɔ ɔ → o औ or ◌ौ → ओ or ◌ो
7 j j → e य → ◌े
8 v v → o व → ◌ो
* Zero (0) means deleted.
</figure>
<tableCaption confidence="0.968434">
Table 2: Vowel Problems from Urdu to Hindi
</tableCaption>
<bodyText confidence="0.995572833333333">
Long vowels Yeh (ﯼ) [j] and Waw (و) [v] are
also used as consonants and certain contextual
rules help us to decide whether they are used as a
consonant or as a vowel, e.g., Yeh (ﯼ) and Waw
(و) are used as consonants at the start of a word
and after the long vowel Alef-madda (ﺁ), etc. Fi-
</bodyText>
<equation confidence="0.981206272727273">
(i) मैं ने बहुत अिधक काम नहीं िकया ैह
(ii) में ने बहत अधक काम नहें कया हे
I have not done a lot of work
(i) के न्िीय ःतर पर भी और राज्य ःतर पर भी
(ii) केंदरय सतर पर भी ओर राजय सतर पर भी
Both at the central level and at the state level
ﮯَﮨ ﺎﻴِﮐ ﮟﻴِﮩﻧ مﺎﮐ ﮏِهدا ﺖُﮩﺑ ﮯﻧ ﮟﻴَﻣ (i)
ﮯﮨ ﺎﻴﮐ ﮟﻴﮩﻧ مﺎﮐ ﮏهدا ﺖﮩﺑ ﮯﻧ ﮟﻴﻣ (ii)
(1)
ﯽﻬﺑ ﺮﭘ ﺮﻄْﺳ ہﻴ ْﺟار روَا ﯽ ﻬﺑ ﺮﭘ ﺮﻄْﺳ ہّﻳِرْﺪْﻨﻴ ﮐ (i) (2)
ﯽﻬﺑ ﺮﭘ ﺮﻄﺳ ہﻴﺟار روا ﯽﻬﺑ ﺮﭘ ﺮﻄﺳ ہﻳرﺪﻨﻴﮐ (ii)
</equation>
<page confidence="0.979377">
178
</page>
<bodyText confidence="0.98052125">
nite-state transliteration model can exploit such
contextual rules but it is not possible to decide
Yeh (Ls) and Waw (و) as consonants in the ab-
sence of diacritics. Thus a finite-state translitera-
tion model wrongly converts consonant Yeh (ﯼ)
and Waw (و) into vowels ◌े [e] and ◌ो [o], also
given in Table 2, instead of consonants Ya (य)
and Wa (व) respectively, e.g., in the word رﻮﻨُﮐ
(prince) [kʊpvr], Waw is wrongly converted into
the vowel [o] due to the absence of Zabar (F◌)
after it and the word becomes [kʊnor], which is
not a valid word of Hindi/Urdu.
</bodyText>
<subsectionHeader confidence="0.990024">
2.2 Native Sounds
</subsectionHeader>
<bodyText confidence="0.998975375">
The Hindi writing system contains some native
sounds/characters, e.g., vocalic R (ऋ) [r̥], retrof-
lex form of Na (ण) [R], etc. On the other hand
Urdu does not have their equivalents. Thus
words containing such sounds are transcribed in
Urdu with their approximate phonetic equiva-
lents. All such cases are problematic for Urdu to
Hindi transliteration and are given in Table 3.
</bodyText>
<table confidence="0.9590482">
Sr. IPA Hindi Urdu
1 ̥r ऋ or ◌ृ ر [r]
2 R ण ن [n]
3 f ष ش [f]
4 Half h ◌ः ﮦ [h]
</table>
<tableCaption confidence="0.999485">
Table 3: Sounds of Sanskrit Origin
</tableCaption>
<subsectionHeader confidence="0.999047">
2.3 Conjunct Form
</subsectionHeader>
<bodyText confidence="0.997615964285714">
The Hindi alphabet is partly syllabic because
each consonant inherits the vowel [a]. Two or
more consonants may be combined together to
form a cluster called Conjunct that marks the
absence of the inherited vowel [a] between con-
sonants (Kellogg, 1872; Montaut, 2004). Con-
junction is also used to represent the gemination
of a consonant, e.g., क[k]+◌्+क[k]=क्क[kk]
where ◌् is the conjunct marker and aspiration of
some consonants like न [n], म [m], र [r] and ल
[l] when used as conjunction with ह [h], e.g.,
न[n] + ◌् + ह[h] = न्ह[nh]. Conjunction has a spe-
cial meaning but native speakers use conjunct
forms without any explicit rule (Montaut, 2004).
On the other hand, Urdu uses Jazam (H◌ – a
diacritic) and Shadda (`◌) to mark the absence of
a vowel between two consonants and gemination
of a consonant respectively. In the absence of
these diacritics in the input Urdu text, it is not
possible to decide on the conjunct form of con-
sonants except in the case of aspiration. In Urdu,
aspiration of a consonant is marked with the spe-
cial character Heh-Doachashmee (ه) (Malik et
al., 2008), thus a finite-state transducer can easi-
ly decide about the conjunction for aspiration
with a simple contextual rule, e.g. the word ﻦﻬﻟُد
(bride) [ḓʊlhn] is correctly transliterated by our
finite-state transliteration model into दुल्हन.
</bodyText>
<subsectionHeader confidence="0.654047">
2.4 Native Hindi Spellings and Sanskritized
Vocabulary
</subsectionHeader>
<bodyText confidence="0.985851181818182">
Sanskrit highly influences Hindi and especially
its vocabulary. In some words of Sanskrit origin,
the vowel ◌ी [i] and ◌ू [u] are transcribed as ि◌
[ɪ] and ◌ु [ʊ] respectively at the end of a word.
Javaid and Ahmed (2009) have pointed to this
issue in these words “Hindi language can have
words that end on short vowel...”. Table 4 gives
some examples of such native words. On the
other hand in Urdu, short vowels can never come
at the end of a word (Javaid and Ahmed, 2009;
Malik et al., 2008).
</bodyText>
<table confidence="0.906718714285714">
Vowel Examples
◌ी [i] व्यिक्त – ﯽﺘﮑﻳو (person) [vjakti]
संःकृ ित – ﯽﺗﺮﮑﺴﻨﺳ (culture) [sapskraṱi]
उच्चकोिट – ﯽﭨﻮﮑﭼُا (high) [ʊʧʧkoʈi]
◌ू [u] हेतु – ﻮُﺘﻴﮨ (for) [heṱu]
िकन्तु – ﻮُﺘﻨﮐ (but) [kɪnṱu]
धातु – A&amp;quot; (metal) [ḓɑṱu]
</table>
<tableCaption confidence="0.990341">
Table 4: Hindi Word with Short vowel at End
</tableCaption>
<bodyText confidence="0.999926857142857">
It is clear from above examples that short vowels
at the end of a Hindi word can easily be translite-
rated in Urdu using a contextual rule of a finite-
state transducer, but it is not possible to do so for
Urdu to Hindi transliteration using a non-
probabilistic finite-state transliteration model.
Thus Urdu to Hindi transliteration can also be
</bodyText>
<page confidence="0.99357">
179
</page>
<bodyText confidence="0.999806625">
considered as a special case of Back Translitera-
tion.
In some words, the vowel ◌ू [u] is written as
the vowel ◌ु [ʊ], e.g., हुए – Vi_ �+ or हुआ – 1_ ; (to be)
[hue], राजनपुर (name of a city) [rɑd3ənpur].
Some of these cases are regular and can be im-
plemented as contextual rules in a finite-state
transducer but it is not possible in every case.
</bodyText>
<subsectionHeader confidence="0.99388">
2.5 Ain (ع)
</subsectionHeader>
<bodyText confidence="0.996950478260869">
Ain (ع – glottal stop) exists in the Arabic alpha-
bet and native Arabic speakers pronounce it
properly. Urdu also has adopted Ain (ع) in its
alphabet as well as Arabic loan words but native
speakers of the sub-continent cannot produce its
sound properly, rather they produce a vowel
sound by replacing Ain (ع) with Alef (ا). The
Hindi alphabet follows one character for one
sound rule and it does not have any equivalent of
Ain (ع). Then, Ain (ع) in Urdu words is tran-
scribed in Hindi by some vowel representing the
pronunciation of the word by native sub-
continent speakers. Thus it is always translite-
rated in some vowel in Hindi. For example, Ain
(ع) gives the sound of the vowel [ə] in ﺐﻴﺠ ﻋ –
अजीब (strange) [əd3ib] and the vowel [ɑ] with
and without Alef (ا) in words مﺎﻋ – आम (com-
mon) [ɑm] and ﺪﻌﺑ – बाद (after) [bɑḓ] respective-
ly. In some words, Ain (ع) is not pronounced at
all and should be deleted while transliterating
from Urdu to Hindi, e.g., عوُﺮُﺷ – शुरू (to start)
[JUru], etc. Conversion of Ain (ع) is a big prob-
lem for transliteration.
</bodyText>
<subsectionHeader confidence="0.938327">
2.6 Nasalization
</subsectionHeader>
<bodyText confidence="0.9949977">
Noonghunna (ں) [ɲ] is the nasalization marker of
vowels in Urdu. Interestingly, it is only used to
nasalize a vowel at the end of a word. In the
middle of a word, Noon (ن) [n] is used to mark
the nasalization of a vowel and it is also used as
a consonant. It is difficult to differentiate be-
tween nasalized and consonant Noon (ن). There
are certain contextual rules that help to decide
that Noon (ن) is used as a consonant or a nasali-
zation marker, but it not possible in all cases.
</bodyText>
<subsectionHeader confidence="0.893029">
2.7 Persio-Arabic Vocabulary
</subsectionHeader>
<bodyText confidence="0.81867425">
Urdu borrows a considerable portion of it voca-
bulary from Persian and Arabic and translitera-
tion of these words in Hindi is not regular. Table
5 explains it with few examples.
</bodyText>
<table confidence="0.999609333333333">
Urdu Hindi
FST Conversion Correct
ﻞﮑُ ﻟﺎﺑ बालकु ल िबलकु ल
(surely) [bɪlkUl]
ہﺘﺳاﻮﻟﺎﺑ बालवासता िबलवासता
(with reference of) [bɪlvɑsṱɑ]
ﺖﻘﻴِﻘﺤﻟا ﯽﻓ फ़ीअलहक़ीक़त िफ़लहक़ीक़त
[fɪlhəqiqət]
(in fact)
</table>
<tableCaption confidence="0.996427">
Table 5: Persio-Arabic Vocabulary in Urdu
</tableCaption>
<sectionHeader confidence="0.986536" genericHeader="method">
3 Hybrid Transliteration Model
</sectionHeader>
<bodyText confidence="0.99873">
The analysis of the previous section clearly
shows that solution of these problems is beyond
the scope of the non-probabilistic Hindi Urdu
Finite-state transliteration model (Malik et al.,
2008). We propose a hybrid transliteration model
that takes the input Urdu text and converts it in
Hindi using the Finite-state Transliteration Mod-
el (Malik et al, 2008). After that, it tries to cor-
rect the orthographic errors in the transducer-
only Hindi output string using a statistical word
language model for Hindi with the help of a
Hindi Word Map described later. The approach
used is rather similar to what is done in text re-
capitalization (Stolcke et al. 1998) for instance.
</bodyText>
<figureCaption confidence="0.991817">
Figure 2: Hybrid Transliteration Model for Urdu
</figureCaption>
<bodyText confidence="0.9580542">
Hindi
Normally, the Urdu text does not contain neces-
sary diacritical marks that are mandatory for the
correct transliteration by the finite-state compo-
nent Urdu Hindi Transliteration
</bodyText>
<page confidence="0.986633">
180
</page>
<bodyText confidence="0.9913988">
Finite-state Machine (UHT-FSM),
described by Malik et al. (2008). The proposed
hybrid model focuses on the correct translitera-
tion of Urdu texts without diacritical marks. Fig-
ure 2 gives the proposed Model architecture.
</bodyText>
<subsectionHeader confidence="0.998513">
3.1 Preprocessing UHT-FSM Output
</subsectionHeader>
<bodyText confidence="0.988638576923077">
The goal of this pre-processing is to generate a
more “normalized” (and consequently more am-
biguous) form of Hindi, e.g. pre-processing
transforms both corpus words इस (this) [ɪs] and
उस (that) [Us] (if encountered in the UHT-FSM
Hindi output) into the default input Hindi word
अस* [as] (not a valid Hindi word but is a finite-
state transliteration of the input Urdu word L&gt;J, a
word without diacritical marks). Thus pre-
processing is vital for establishing connections
between the UHT-FSM Hindi output words
(from the Urdu input without diacritical marks)
and the Hindi corpus words. In the example
above, the word अस* [as] is aligned to two Hin-
di corpus words. All such alignments are record-
ed in the Hindi Word Map. This ambiguity will
be solved by the Hindi word language
model, trained on a large amount of Hindi data.
Thus pre-processing is a process that establishes
connections between the most likely expected
input Hindi word forms (UHT-FSM Hindi output
from the Urdu input without diacritical marks)
and the correct Hindi word forms (words that are
present in the Hindi corpus).
The Preprocessing component is a finite-
state transducer that normalizes the Hindi output
of UHT-FSM component for the Hindi word
language model. The transducer converts all
cases of gemination of consonants into a simple
consonant. For example, the UHT-FSM converts
the Urdu word �-) (God) [rabb] into रब्ब and the
Preprocessing converts it into रब [rb]. The
transducer also removes the conjunct marker (◌्)
from the output of the UHT-FSM except when it
is preceded by one of the consonant from the set
{र [r], ल [l], म [m], न [n]} and also followed by
the consonant ह [h] (first 3 lines of Figure 3),
e.g., UHT-FSM converts the Urdu words csﺪْﻨِﮨ
(Hindi) [hɪndi] and &amp;���� (bride) [ḓUlhn] into िहन्दी
and दुल्हन respectively and the Preprocess-
ing component converts them into िहनदी (re-
moves ◌्) and दुल्हन (no change). Actually, Pre-
processing deteriorates the accuracy of the output
of the UHT-FSM component. We will come back
to this point with exact figures in the next sec-
tion.
The code of the finite-state transducer is given
in XFST (Beesley and Karttunen, 2003) style in
Figure 3. In XFST, the rules are applied in re-
verse order due to XFST’s transducer stack, i.e. a
rule written at the end of the XFST script file
will apply first and so on.
</bodyText>
<figureCaption confidence="0.998411">
Figure 3: Preprocessing Transducer
</figureCaption>
<subsectionHeader confidence="0.99644">
3.2 Hindi Word Language Model
</subsectionHeader>
<bodyText confidence="0.999679866666667">
The Hindi Word Language Model is an
important component of the hybrid transliteration
model. For the development of our statistical
word language model, we have used the Hindi
Corpus freely available from the Center for In-
dian Language Technology1, Indian Institute of
Technology Bombay (IITB), India.
First, we extracted all Hindi sentences from
the Hindi corpus. Then we removed all punctua-
tion marks from each sentence. Finally, we add-
ed ‘&lt;s&gt;’ and ‘&lt;/s&gt;’ tags at the start and at the
end of each sentence. We trained a tri-gram
Hindi Word Language Model with the
SRILM (Stolcke, 2002) tool. The processed Hin-
di corpus data contains total 173,087 unique sen-
</bodyText>
<equation confidence="0.985798117647059">
1 http://www.cfilt.iitb.ac.in/
read regex [◌् -&gt; 0  ||[? - [र  |ल  |म  |न]] _ [? -
ह]];
read regex [◌् -&gt; 0  ||[र  |ल  |म  |न] _ [? - ह]];
read regex [◌् -&gt; 0  ||[? - [र  |ल  |म  |न]] _ [ह]];
read regex [[क ◌् क] -&gt; क, [क ◌् ख] -&gt; ख,
[ग ◌् ग] -&gt; ग, [ग ◌् घ] -&gt; घ, [च ◌् च] -&gt; च,
[च ◌् छ] -&gt; छ, [ज ◌् ज] -&gt; ज, [ज ◌् झ] -&gt; झ,
[ट ◌् ट] -&gt; ट, [ट ◌् ठ] -&gt; ठ, [ड ◌् ड] -&gt; ड, [ड ◌्
ढ] -&gt; ढ, [त ◌् त] -&gt; त, [त ◌् थ] -&gt; थ, [द ◌् द]
-&gt; द, [द ◌् ध] -&gt; ध, [प ◌् प] -&gt; प, [प ◌् फ] -&gt;
फ, [ब ◌् ब] -&gt; ब, [ब ◌् भ] -&gt; भ, [म ◌् म] -&gt; म,
[य ◌् य] -&gt; य, [र ◌् र] -&gt; र, [ल ◌् ल] -&gt; ल,
[व ◌् व] -&gt; व, [श ◌् श] -&gt; श, [ष ◌् ष] -&gt; ष,
[स ◌् स] -&gt; स, [ह ◌् ह] -&gt; ह, [क़ ◌् क़] -&gt; क़,
[ख़ ◌् ख़] -&gt; ख़, [ग़ ◌् ग़] -&gt; ग़, [ज़ ◌् ज़] -&gt; ज़,
[ड़ ◌् ड़] -&gt; ड़, [ढ़ ◌् ढ़] -&gt; ढ़, [फ़ ◌् फ़] -&gt; फ़];
</equation>
<page confidence="0.986978">
181
</page>
<bodyText confidence="0.9993256">
tences and more than 3.5 million words. The
SRILM toolkit command ‘disambig’ is used to
generate the final Hindi output using the statis-
tical word language model for Hindi and the
Hindi Word Map described in the next section.
</bodyText>
<subsectionHeader confidence="0.998436">
3.3 Hindi Word Map
</subsectionHeader>
<bodyText confidence="0.993564928571429">
The Hindi Word Map is another very important
component of the proposed hybrid transliteration
model. It describes how each “normalized” Hindi
word that can be seen after the Preprocess-
ing step and can be converted to one or several
correct Hindi words, the final decision being
made by the statistical word language model for
Hindi. We have developed it from the same
processed Hindi corpus data that was used to
build the Hindi Word Language Model.
We extracted all unique Hindi words (120,538
unique words in total).
The hybrid transliteration model is an effort to
correctly transliterate the input Urdu text without
diacritical marks in Hindi. Thus we take each
unique Hindi word and try to generate all possi-
ble Hindi word options that can be given as input
to the Hindi Word Language Model
component for the said word. Consider the Urdu
word ّبv (God) [robb]; its correct Hindi spel-
lings are रब्ब. If we remove the diacritical mark
Shadda (`◌) after the last character of the word,
then the word becomes بv and UHT-FSM trans-
literates it in रब*. Thus the Hindi Word
Language Model will encounter either रब्ब or
रब* for the Hindi word रब्ब (two possible word
options). In other words, the Hindi Word Map is
a computational model that records all possible
alignments between the “normalized” or pre-
processed words (most likely input word forms)
and the correct Hindi words from the corpus.
We have applied a finite-state transducer that
generates all possible word options for each
unique Hindi word. We cannot give the full
XFST code of the ‘Default Input Creator’ due to
space shortage, but a sample XFST code is given
in Figure 4. If the Urdu input contains all neces-
sary diacritical marks, then pre-processing of the
output of the UHT-FSM tries to remove the effect
of some of these diacritical marks from the Hindi
output. In the next section, we will show that
actually it increases the accuracy at the end.
</bodyText>
<figureCaption confidence="0.996204">
Figure 4: Default Input Creator Transducer
</figureCaption>
<bodyText confidence="0.999378125">
Practically, the Hindi Word Map is a file in
which each line contains a possible input word to
Hindi Word Language Model, followed
by a list of one (see line 3 of Figure 5) or more
(see line 1 of Figure 5) words from the corpus
that are associated with this possible input word.
The ‘Default Input Creator’ transducer has
generated in total 961,802 possible input words
for 120,538 unique Hindi words. For implemen-
tation reasons, we also added non-ambiguous
pair entries in the word map (see line 2 of Figure
5), thus the initial word map contains in total
1,082,340 entries. We extract unique option
words and finally, Hindi Word Map contains in
total 962,893 entries. Some examples from Hindi
Word Map file are given in Table 5.
</bodyText>
<listItem confidence="0.7764894">
(1) कीजे कीिज कीजै
(2) कीजो कीजो
(3) रब रब्ब
(4) कीमयागरी कीिमयागरी कीिमयािगरी
(5) अस इस उस
</listItem>
<figureCaption confidence="0.968048">
Figure 5: Sample Hindi Word Map
</figureCaption>
<sectionHeader confidence="0.788538" genericHeader="method">
4 Test and Results
</sectionHeader>
<bodyText confidence="0.999833625">
For testing purposes, we extracted 200 Hindi
sentences from the Hindi corpus before removing
punctuation marks. These sentences were of
course removed from the training corpus used to
build the statistical word language model for
Hindi. First we converted these 200 Hindi sen-
tences in Urdu using Hindi Urdu Finite-state
transliteration model (Malik et al., 2008). Trans-
</bodyText>
<figure confidence="0.960468846153846">
define CONSONANTS [क  |ख  |ग  |घ  |ङ  |च |
छ  |ज  |झ  |ञ  |ट  |ठ  |ड  |ढ  |ण  |त  |थ  |द  |ध |
न  |प  |फ  |ब  |भ  |म  |य  |र  |ल  |व  |श  |ष  |स |
ह  |क़  |ख़  |ग़  |ज़  |ड़  |ढ़  |फ़];
...
read regex [◌ै (-&gt;) ◌े, ◌ी (-&gt;) ◌े, ◌ू (-&gt;) ◌ो, ◌ौ
(-&gt;) ◌ो, ि◌ (-&gt;) 0, ◌ु (-&gt;) 0  ||[CONSONANTS]
_ ];
read regex [◌ी (-&gt;) ◌े  ||[CONSONANTS] _ [? -
.#.]];
read regex [ि◌ -&gt; ◌ी, ◌ु -&gt; ◌ो, ◌ु -&gt; ◌ू ||
[CONSONANTS] _ .#.];
...
</figure>
<page confidence="0.992236">
182
</page>
<bodyText confidence="0.999941769230769">
literated Urdu sentences were post edited ma-
nually for any error and we also made sure that
the Urdu text contained all diacritical marks. 200
original Hindi sentences served as Hindi refer-
ence for evaluation purposes.
From the post-edited Urdu sentences, we de-
veloped two test corpora. The first test corpus
was the Urdu test with all diacritical marks. In
the second test corpus, all diacritical marks were
removed. We calculated both word level and
character level accuracy and error rates using the
SCLITE2 tool. Our 200 sentence test contains
4,250 words and 16,677 characters in total.
</bodyText>
<subsectionHeader confidence="0.986322">
4.1 Test: UHT-FSM
</subsectionHeader>
<bodyText confidence="0.999295333333333">
First we converted both Urdu test data using
UHT-FSM only and compared the transliterated
Hindi texts with the Hindi reference. UHT-FSM
shows a word error rate of 21.5% and 51.5% for
the Urdu test data with and without diacritics
respectively. Results are given in Table 6, row 1.
</bodyText>
<table confidence="0.9997985">
Urdu Test Data With Without
diacritics diacritics
UHT-FSM 80.7% / 50.7% /
Accuracy/Error 21.5% 51.5%
UHT-FSM + 82.6% / 79.1% /
HLM 19.6% 23.1%
UHT-FSM + 67.5% / 50.7% /
PrePro 32.4% 51.5%
UHT-FSM + 85.8% / 79.1% /
PrePro + HLM 16.4% 23.1%
</table>
<tableCaption confidence="0.998004">
Table 6: Word Level Results
</tableCaption>
<bodyText confidence="0.999227666666667">
These results support our claims that the absence
of diacritical marks considerably increases the
error rate.
</bodyText>
<subsectionHeader confidence="0.505473">
4.2 Test: UHT-FSM + Hindi Language
Model
</subsectionHeader>
<bodyText confidence="0.976817545454546">
Both outputs of UHT-FSM are first passed direct-
ly to Hindi Word Language Model with-
out preprocessing. The Hindi Word Lan-
guage Model converts UHT-FSM Hindi out-
put in the final Hindi output with the help of
Hindi Word Map.
Two final outputs were again compared with
the Hindi reference and results are given in Table
6, row 2. For Urdu test data without diacritics,
error rate decreased by 28.4% due to the Hindi
Word Language Model and Hindi Word
</bodyText>
<footnote confidence="0.628263">
2 http://www.itl.nist.gov/iad/mig//tools/
</footnote>
<bodyText confidence="0.9997075">
Map as compared to the UHT-FSM error rate.
The Hindi Word Language Model also decreases
the error rate by 1.9% for the Urdu test data with
diacritics.
</bodyText>
<subsectionHeader confidence="0.967961">
4.3 Test: UHT-FSM + Preprocessing
</subsectionHeader>
<bodyText confidence="0.999953625">
In this test, both outputs of UHT-FSM were pre-
processed and the intermediate Hindi outputs
were compared with the Hindi reference. Results
are given in Table 6, row 3. After the comparison
of results of row 1 and row 3, it is clear that pre-
processing deteriorates the accuracy of Urdu test
data with diacritics and does not have any effect
on Urdu test data without diacritics.
</bodyText>
<sectionHeader confidence="0.739863" genericHeader="method">
4.4 Test: UHT-FSM + Preprocessing +
Hindi Language Model
</sectionHeader>
<bodyText confidence="0.999772">
Preprocessed UHT-FSM Hindi outputs of the test
of Section 4.3 were passed to the Hindi Word
Language Model that produced final Hindi
outputs with the help of the Hindi Word Map.
Results are given in Table 6, row 4. They show
that the Hindi Word Language Model
increases the accuracy by 5.1% and 18.3% when
compared with the accuracy of UHT-FSM and
UHT-FSM + Preprocessing tests respectively, for
the Urdu test data with diacritical marks.
For the Urdu test data without diacritical
marks, the Hindi Word Language Model
increases the accuracy rate by 28.3% in compari-
son to the accuracy of the UHT-FSM output
(whether pre-processed or not).
</bodyText>
<subsectionHeader confidence="0.938207">
4.5 Character Level Results
</subsectionHeader>
<bodyText confidence="0.9948425">
All outputs of tests of Sections 4.1, 4.2, 4.3 and
4.4 and the Hindi reference are processed to cal-
culate the character level accuracy and error
rates. Results are given in Table 7.
</bodyText>
<table confidence="0.999215666666667">
Urdu Test With Without
Data diacritics diacritics
UHT-FSM 94.1% / 6.5% 77.5% / 22.6%
UHT-FSM + 94.6% / 6.1% 89.8% / 10.7
HLM
UHT-FSM + 87.5% / 13.0% 77.5% / 22.6
PreP
UHT-FSM + 94.5% / 6.1% 89.8% / 10.7
PreP + HLM
</table>
<tableCaption confidence="0.998189">
Table 7: Character Level Results
</tableCaption>
<page confidence="0.998266">
183
</page>
<sectionHeader confidence="0.574165" genericHeader="evaluation">
4.6 Results and Examples
</sectionHeader>
<bodyText confidence="0.999615875">
The Hindi Word Language Model in-
creases the accuracy of Urdu Hindi translitera-
tion, especially for the Urdu input without dia-
critical marks.
Consider the examples of Figure 7. Figure 1 is
reproduced here by adding the Hindi translitera-
tion of example sentences using the proposed
hybrid transliteration model and Hindi reference.
</bodyText>
<table confidence="0.982289285714286">
ﮯَﮨ ﺎﻴِﮐ ﮟﻴِﮩﻧ مﺎﮐ ﮏِهدا ﺖُﮩﺑ ﮯﻧ ﮟﻴَﻣ (i) (1)
ﮯﮨ ﺎﻴﮐ ﮟﻴﮩﻧ مﺎﮐ ﮏهدا ﺖﮩﺑ ﮯﻧ ﮟﻴﻣ (ii)
(i) मैं ने बहुत अिधक काम नहीं िकया ैह
(ii) में ने बहत अधक काम नहें कया हे
I have not done a lot of work
Output of Hybrid Transliteration Model
(i) मैं ने बहुत अिधक काम नहीं िकया है
(ii) मैं ने बहुत अिधक काम नहीं िकया है
Hindi Reference
मैंने बहुत अिधक काम नहीं िकया ैह
ﯽﻬﺑ ﺮﭘ ﺮﻄْﺳ ہﻴ ْﺟار روَا ﯽﻬﺑ ﺮﭘ ﺮﻄْﺳ ہّﻳِرْﺪْﻨﻴﮐ (i) (2)
ﯽﻬﺑ ﺮﭘ ﺮﻄﺳ ہﻴﺟار روا ﯽﻬﺑ ﺮﭘ ﺮﻄﺳ ہﻳرﺪﻨﻴﮐ (ii)
(i) के न्िीय ःतर पर भी और राज्य ःतर पर भी
(ii) केंदरय सतर पर भी ओर राजय सतर पर
भी
Both at the central level and at the state level
Output of Hybrid Transliteration Model
(i) के न्िीय ःतर पर भी और राज्य ःतर पर भी
(ii) केंििय ःतर पर भी और राज्य ःतर पर भी
Hindi Reference
केन्िीय ःतर पर भी और राज्य ःतर पर भी
</table>
<figureCaption confidence="0.999052">
Figure 7: Examples
</figureCaption>
<bodyText confidence="0.999901">
By comparing Hindi outputs of Hindi Word
Language Model with the Hindi reference,
only the first word of (2)(ii) is wrong and other
errors due to the absence of diacritical marks in
the source Urdu sentences are corrected properly.
</bodyText>
<sectionHeader confidence="0.999462" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999906230769231">
From the test results of the previous section we
can conclude that the statistical word language
model increases the accuracy of Urdu to Hindi
transliteration, especially for Urdu input text
without diacritical marks. The proposed Hybrid
Transliteration Model improves the accuracy and
produces the correct Hindi output even when the
crucial information in the form of diacritical
marks is absent. It increases the accuracy by
28.3% in comparison to our previous Finite-state
Transliteration Model. This study also shows that
diacritical marks are crucial and necessary for
Hindi Urdu transliteration.
</bodyText>
<sectionHeader confidence="0.996419" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999858695652174">
Beesley, Kenneth R. and Karttunen, Lauri. 2003. Fi-
nite State Morphology, CSLI Publication, USA.
Grimes, Barbara F. (ed). 2000. Pakistan, in Ethnolo-
gue: Languages of the World, 14th Edition Dallas,
Texas; Summer Institute of Linguistics, pp: 588-
598.
Hussain, Sarmad. 2004. Letter to Sound Rules for
Urdu Text to Speech System, proceedings of Work-
shop on Computational Aproaches to Arabic
Script-based Languages, COLING 2004, Geneva,
Switzerland.
Jawaid, Bushra and Tafseer Ahmed. 2009. Hindi to
Urdu Conversion: Beyond Simple Transliteration,
in proceedings of Conference on Language &amp;
Technology, Lahore, Pakistan.
Kellogg, Rev. S. H. 1872. A Grammar of Hindi Lan-
guage, Delhi, Oriental Book reprints.
Khan, Mehboob Alam. 1997. مﺎﻈﻧ ﯽﺗﻮﺻ ﺎﮐ ودرُا (Sound
System in Urdu), National Language Authority,
Pakistan
Knight, K. and Graehl, J. 1998. Machine Translitera-
tion, Computational Linguistics, 24(4).
Knight, K. and Stall, B. G. 1998. Transliterating
Names and Technical Terms in Arabic Text, pro-
ceedings of COLING/ACL Workshop on Compu-
tational Approaches to Semitic Languages.
Malik, M. G. Abbas. Boitet, Christian. Bhattcharyya,
Pushpak. 2008. Hindi Urdu Machine Translitera-
tion using Finite-state Transducers, proceedings of
COLING 2008, Manchester, UK.
Montaut, A. 2004. A Linguistic Grammar of Hindi,
Studies in Indo-European Linguistics Series, Mun-
chen, Lincom Europe.
Paola, V. and Sanjeev, K. 2003. Transliteration of
Proper Names in Cross-language Application, pro-
ceedings of 26th Annual International ACM SIGIR
Conference on Research and Development in In-
formation Retrieval, Toronto, Canada.
Pirkola, A. Toivonen, J. Keshustalo, H. Visala, K. and
Jarvelin, K. 2003. Fuzzy Translation of Cross-
lingual Spelling Variants, proceedings of 26th An-
nual International ACM SIGIR Conference on Re-
search and Development in Information Retrieval,
Toronto, Canada.
Rahman, Tariq. 2004. Language Policy and Localiza-
tion in Pakistan: Proposal for a Paradigmatic
</reference>
<page confidence="0.987381">
184
</page>
<reference confidence="0.999370904761905">
Shift, Crossing the Digital Divide, SCALLA Con-
ference on Computational Linguistics.
Stolcke, A. 2002. SRILM – An Extensible Language
Modeling Toolkit, in proceedings of International
Conference on Spoken Language Processing.
Stolcke, A. Shriberg, E. Bates, R. Ostendorf, M. Hak-
kani, D. Plauche, M. Tur, G. and Lu, Y. 1998. Au-
tomatic Detection of Sentence Boundaries and Dis-
fluencies based on Recognized Words. Proceedings
of International Conference on Spoken Language
Processing (ICSLP), Sydney, Australia.
Yan, Qu. Gregory, Grefenstette. and David A. Evans.
2003. Automatic Transliteration for Japanese-to-
English Text Retrieval. In proceedings of the 26th
annual international ACM SIGIR conference on
Research and Development in Information Retriev-
al, pp: 353 – 360.
Zia, Khaver. 1999. Standard Code Table for Urdu.
Proceedings of 4th Symposium on Multilingual In-
formation Processing (MILIT-4), Yangon, Myan-
mar, CICC, Japan.
</reference>
<page confidence="0.998851">
185
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.082522">
<title confidence="0.999863">A Hybrid Model for Urdu Hindi Transliteration</title>
<author confidence="0.981377">Abbas Malik Laurent Besacier Christian</author>
<affiliation confidence="0.6597075">GETALP, Laboratoire d’Informatique Grenoble Université Joseph Fourier</affiliation>
<address confidence="0.234788">Abbas.Malik,</address>
<email confidence="0.432479">Christian.Boitet@imag.fr</email>
<author confidence="0.92997">Pushpak Bhattacharyya</author>
<affiliation confidence="0.871936">IIT Bombay</affiliation>
<email confidence="0.947085">pb@cse.iitb.ac.in</email>
<abstract confidence="0.9971454">We report in this paper a novel hybrid approach for Urdu to Hindi transliteration that machine (FSM) with word language approach. The output from the FSM is filtered with the word language model to produce the correct Hindi output. The main problem handled is the case of omission of diacritical marks from the input Urdu text. Our system produces the correct Hindi output even when the crucial information in the form of diacritic marks is absent. The approach improves the accuracy of the transducer-only approach from 50.7% to 79.1%. The results reported show that performance can be improved using a word language model to disambiguate the output produced by the transducer-only approach, especially when diacritic marks are not present in the Urdu input.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Kenneth R Beesley</author>
<author>Lauri Karttunen</author>
</authors>
<title>Finite State Morphology,</title>
<date>2003</date>
<location>CSLI Publication, USA.</location>
<contexts>
<context position="16835" citStr="Beesley and Karttunen, 2003" startWordPosition="2924" endWordPosition="2927">cept when it is preceded by one of the consonant from the set {र [r], ल [l], म [m], न [n]} and also followed by the consonant ह [h] (first 3 lines of Figure 3), e.g., UHT-FSM converts the Urdu words csﺪْﻨِﮨ (Hindi) [hɪndi] and &amp;���� (bride) [ḓUlhn] into िहन्दी and दुल्हन respectively and the Preprocessing component converts them into िहनदी (removes ◌्) and दुल्हन (no change). Actually, Preprocessing deteriorates the accuracy of the output of the UHT-FSM component. We will come back to this point with exact figures in the next section. The code of the finite-state transducer is given in XFST (Beesley and Karttunen, 2003) style in Figure 3. In XFST, the rules are applied in reverse order due to XFST’s transducer stack, i.e. a rule written at the end of the XFST script file will apply first and so on. Figure 3: Preprocessing Transducer 3.2 Hindi Word Language Model The Hindi Word Language Model is an important component of the hybrid transliteration model. For the development of our statistical word language model, we have used the Hindi Corpus freely available from the Center for Indian Language Technology1, Indian Institute of Technology Bombay (IITB), India. First, we extracted all Hindi sentences from the H</context>
</contexts>
<marker>Beesley, Karttunen, 2003</marker>
<rawString>Beesley, Kenneth R. and Karttunen, Lauri. 2003. Finite State Morphology, CSLI Publication, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Barbara F Grimes</author>
</authors>
<title>Pakistan,</title>
<date>2000</date>
<booktitle>in Ethnologue: Languages of the World, 14th Edition Dallas, Texas; Summer Institute of Linguistics,</booktitle>
<pages>588--598</pages>
<contexts>
<context position="2652" citStr="Grimes, 2000" startWordPosition="403" endWordPosition="404">irrespective of their type (noun, verb, etc., and not only proper nouns and unknown words). In this study, we will focus on Hindi/Urdu example. Hindi and Urdu are written in two mutually incomprehensible scripts, Devanagari and Urdu script – a derivative of Persio-Arabic script respectively. Hindi and Urdu are the official languages of India and the later is also the National language of Pakistan (Rahman, 2004). Table 1 gives an idea about the number of speakers of Hindi and Urdu. Native 2nd Lang. Total Speaker Speaker Hindi 366 487 853 Urdu 60.29 104 164.29 Total 426.29 591 1,017.29 Source: (Grimes, 2000) all numbers are in millions Table 1: Hindi and Urdu Speakers Notwithstanding the transcriptional differences, Hindi and Urdu share phonology, grammar, morphology, literature, cultural heritage, etc. People from Hindi and Urdu communities can understand the verbal expressions of each other but the written expression of one community is alien to the other community. A finite-state transliteration model for Hindi and Urdu transliteration using the Universal Intermediate Transcription (UIT – a pivot between the two scripts) was proposed by Malik et al. (2008). The non-probabilistic finite-state m</context>
</contexts>
<marker>Grimes, 2000</marker>
<rawString>Grimes, Barbara F. (ed). 2000. Pakistan, in Ethnologue: Languages of the World, 14th Edition Dallas, Texas; Summer Institute of Linguistics, pp: 588-598.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sarmad Hussain</author>
</authors>
<title>Letter to Sound Rules for Urdu Text to Speech System,</title>
<date>2004</date>
<booktitle>proceedings of Workshop on Computational Aproaches to Arabic Script-based Languages, COLING 2004,</booktitle>
<location>Geneva, Switzerland.</location>
<contexts>
<context position="5325" citStr="Hussain, 2004" startWordPosition="839" endWordPosition="840">. Urdu vowels are represented with the help of four long vowels Alef-madda (ﺁ), Alef (ا), Waw (و), Yeh (ﯼ) and diacritical marks. One vowel can be represented in many ways depending upon its context or on the origin of the word, e.g. the vowel [ɑ] is represented by Alef-madda (ﺁ) at the beginning of a word, by Alef (ا) in the middle of a word and in some Persio-Arabic loan word, it is represented by the diacritical mark Khari Zabar (G◌). Thus Urdu has very complex vowel system, for more details see Malik et al. (2008). Urdu contains 10 vowels, and 7 of them also have their nasalization forms (Hussain, 2004; Khan, 1997) and 15 diacritical marks. Thou diacritical marks form the cornerstone of the Urdu vowel system, but are sparingly used (Zia, 1999). They are vital for the correct Urdu to Hindi transliteration using the finite-state transliteration model. The accuracy of the finite-state transliteration model decreases from above 80% to 50% in the absence of diacritical marks. Figure 1 shows two example Urdu phrases (i) with and (ii) without the diacritical marks and their Hindi transliteration using the finite-state transliteration model. Due to the absence of Zabar (F◌) in the first and the las</context>
</contexts>
<marker>Hussain, 2004</marker>
<rawString>Hussain, Sarmad. 2004. Letter to Sound Rules for Urdu Text to Speech System, proceedings of Workshop on Computational Aproaches to Arabic Script-based Languages, COLING 2004, Geneva, Switzerland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bushra Jawaid</author>
<author>Tafseer Ahmed</author>
</authors>
<title>Hindi to Urdu Conversion: Beyond Simple Transliteration,</title>
<date>2009</date>
<booktitle>in proceedings of Conference on Language &amp; Technology,</booktitle>
<location>Lahore, Pakistan.</location>
<marker>Jawaid, Ahmed, 2009</marker>
<rawString>Jawaid, Bushra and Tafseer Ahmed. 2009. Hindi to Urdu Conversion: Beyond Simple Transliteration, in proceedings of Conference on Language &amp; Technology, Lahore, Pakistan.</rawString>
</citation>
<citation valid="false">
<authors>
<author>S H</author>
</authors>
<title>A Grammar of Hindi Language,</title>
<location>Delhi, Oriental Book reprints.</location>
<marker>H, </marker>
<rawString>Kellogg, Rev. S. H. 1872. A Grammar of Hindi Language, Delhi, Oriental Book reprints.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehboob Alam Khan</author>
</authors>
<title>(Sound System in Urdu), National Language Authority,</title>
<date>1997</date>
<location>Pakistan</location>
<contexts>
<context position="5338" citStr="Khan, 1997" startWordPosition="841" endWordPosition="842">re represented with the help of four long vowels Alef-madda (ﺁ), Alef (ا), Waw (و), Yeh (ﯼ) and diacritical marks. One vowel can be represented in many ways depending upon its context or on the origin of the word, e.g. the vowel [ɑ] is represented by Alef-madda (ﺁ) at the beginning of a word, by Alef (ا) in the middle of a word and in some Persio-Arabic loan word, it is represented by the diacritical mark Khari Zabar (G◌). Thus Urdu has very complex vowel system, for more details see Malik et al. (2008). Urdu contains 10 vowels, and 7 of them also have their nasalization forms (Hussain, 2004; Khan, 1997) and 15 diacritical marks. Thou diacritical marks form the cornerstone of the Urdu vowel system, but are sparingly used (Zia, 1999). They are vital for the correct Urdu to Hindi transliteration using the finite-state transliteration model. The accuracy of the finite-state transliteration model decreases from above 80% to 50% in the absence of diacritical marks. Figure 1 shows two example Urdu phrases (i) with and (ii) without the diacritical marks and their Hindi transliteration using the finite-state transliteration model. Due to the absence of Zabar (F◌) in the first and the last words in (1</context>
</contexts>
<marker>Khan, 1997</marker>
<rawString>Khan, Mehboob Alam. 1997. مﺎﻈﻧ ﯽﺗﻮﺻ ﺎﮐ ودرُا (Sound System in Urdu), National Language Authority, Pakistan</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Knight</author>
<author>J Graehl</author>
</authors>
<date>1998</date>
<journal>Machine Transliteration, Computational Linguistics,</journal>
<volume>24</volume>
<issue>4</issue>
<contexts>
<context position="1423" citStr="Knight and Graehl, 1998" startWordPosition="207" endWordPosition="210">approach improves the accuracy of the transducer-only approach from 50.7% to 79.1%. The results reported show that performance can be improved using a word language model to disambiguate the output produced by the transducer-only approach, especially when diacritic marks are not present in the Urdu input. 1 Introduction Transliteration is a process to transcribe a word written in one language, in another language by preserving its articulation. It is crucial for handling out-of-vocabulary (OOV) words in different domains of Natural Language Processing (NLP), especially in Machine Translation (Knight and Graehl, 1998; Knight and Stall, 1998; Paola and Sanjeev, 2003), Cross-Lingual Information Retrieval (Pirkola et al., 2003), the development of multi-lingual resources (Yan et al., 2003) and multi-lingual text and speech processing. It is also useful for Inter-dialectal translation without lexical changes and sometimes it is mandatory when the dialects in question use mutually incomprehensible writing systems. Such cases exists in Malay (written in 2 different scripts), Turkish (2 scripts), Kurdish (3 scripts), Hindi/Urdu (2 scripts), Punjabi (2 scripts), etc., where words are transliterated from one scrip</context>
</contexts>
<marker>Knight, Graehl, 1998</marker>
<rawString>Knight, K. and Graehl, J. 1998. Machine Transliteration, Computational Linguistics, 24(4).</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Knight</author>
<author>B G Stall</author>
</authors>
<date>1998</date>
<booktitle>Transliterating Names and Technical Terms in Arabic Text, proceedings of COLING/ACL Workshop on Computational Approaches to Semitic Languages.</booktitle>
<contexts>
<context position="1447" citStr="Knight and Stall, 1998" startWordPosition="211" endWordPosition="214">uracy of the transducer-only approach from 50.7% to 79.1%. The results reported show that performance can be improved using a word language model to disambiguate the output produced by the transducer-only approach, especially when diacritic marks are not present in the Urdu input. 1 Introduction Transliteration is a process to transcribe a word written in one language, in another language by preserving its articulation. It is crucial for handling out-of-vocabulary (OOV) words in different domains of Natural Language Processing (NLP), especially in Machine Translation (Knight and Graehl, 1998; Knight and Stall, 1998; Paola and Sanjeev, 2003), Cross-Lingual Information Retrieval (Pirkola et al., 2003), the development of multi-lingual resources (Yan et al., 2003) and multi-lingual text and speech processing. It is also useful for Inter-dialectal translation without lexical changes and sometimes it is mandatory when the dialects in question use mutually incomprehensible writing systems. Such cases exists in Malay (written in 2 different scripts), Turkish (2 scripts), Kurdish (3 scripts), Hindi/Urdu (2 scripts), Punjabi (2 scripts), etc., where words are transliterated from one script to the other, irrespec</context>
</contexts>
<marker>Knight, Stall, 1998</marker>
<rawString>Knight, K. and Stall, B. G. 1998. Transliterating Names and Technical Terms in Arabic Text, proceedings of COLING/ACL Workshop on Computational Approaches to Semitic Languages.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christian Bhattcharyya Boitet</author>
<author>Pushpak</author>
</authors>
<title>Hindi Urdu Machine Transliteration using Finite-state Transducers, proceedings of COLING</title>
<date>2008</date>
<location>Manchester, UK.</location>
<marker>Boitet, Pushpak, 2008</marker>
<rawString>Malik, M. G. Abbas. Boitet, Christian. Bhattcharyya, Pushpak. 2008. Hindi Urdu Machine Transliteration using Finite-state Transducers, proceedings of COLING 2008, Manchester, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Montaut</author>
</authors>
<title>A Linguistic Grammar of Hindi,</title>
<date>2004</date>
<booktitle>Studies in Indo-European Linguistics Series,</booktitle>
<location>Munchen, Lincom Europe.</location>
<contexts>
<context position="8912" citStr="Montaut, 2004" startWordPosition="1561" endWordPosition="1562">e their equivalents. Thus words containing such sounds are transcribed in Urdu with their approximate phonetic equivalents. All such cases are problematic for Urdu to Hindi transliteration and are given in Table 3. Sr. IPA Hindi Urdu 1 ̥r ऋ or ◌ृ ر [r] 2 R ण ن [n] 3 f ष ش [f] 4 Half h ◌ः ﮦ [h] Table 3: Sounds of Sanskrit Origin 2.3 Conjunct Form The Hindi alphabet is partly syllabic because each consonant inherits the vowel [a]. Two or more consonants may be combined together to form a cluster called Conjunct that marks the absence of the inherited vowel [a] between consonants (Kellogg, 1872; Montaut, 2004). Conjunction is also used to represent the gemination of a consonant, e.g., क[k]+◌्+क[k]=क्क[kk] where ◌् is the conjunct marker and aspiration of some consonants like न [n], म [m], र [r] and ल [l] when used as conjunction with ह [h], e.g., न[n] + ◌् + ह[h] = न्ह[nh]. Conjunction has a special meaning but native speakers use conjunct forms without any explicit rule (Montaut, 2004). On the other hand, Urdu uses Jazam (H◌ – a diacritic) and Shadda (`◌) to mark the absence of a vowel between two consonants and gemination of a consonant respectively. In the absence of these diacritics in the inpu</context>
</contexts>
<marker>Montaut, 2004</marker>
<rawString>Montaut, A. 2004. A Linguistic Grammar of Hindi, Studies in Indo-European Linguistics Series, Munchen, Lincom Europe.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V Paola</author>
<author>K Sanjeev</author>
</authors>
<date>2003</date>
<booktitle>Transliteration of Proper Names in Cross-language Application, proceedings of 26th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval,</booktitle>
<location>Toronto, Canada.</location>
<contexts>
<context position="1473" citStr="Paola and Sanjeev, 2003" startWordPosition="215" endWordPosition="218">only approach from 50.7% to 79.1%. The results reported show that performance can be improved using a word language model to disambiguate the output produced by the transducer-only approach, especially when diacritic marks are not present in the Urdu input. 1 Introduction Transliteration is a process to transcribe a word written in one language, in another language by preserving its articulation. It is crucial for handling out-of-vocabulary (OOV) words in different domains of Natural Language Processing (NLP), especially in Machine Translation (Knight and Graehl, 1998; Knight and Stall, 1998; Paola and Sanjeev, 2003), Cross-Lingual Information Retrieval (Pirkola et al., 2003), the development of multi-lingual resources (Yan et al., 2003) and multi-lingual text and speech processing. It is also useful for Inter-dialectal translation without lexical changes and sometimes it is mandatory when the dialects in question use mutually incomprehensible writing systems. Such cases exists in Malay (written in 2 different scripts), Turkish (2 scripts), Kurdish (3 scripts), Hindi/Urdu (2 scripts), Punjabi (2 scripts), etc., where words are transliterated from one script to the other, irrespective of their type (noun, </context>
</contexts>
<marker>Paola, Sanjeev, 2003</marker>
<rawString>Paola, V. and Sanjeev, K. 2003. Transliteration of Proper Names in Cross-language Application, proceedings of 26th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, Toronto, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Toivonen Pirkola</author>
<author>J Keshustalo</author>
<author>H Visala</author>
<author>K</author>
<author>K Jarvelin</author>
</authors>
<title>Fuzzy Translation of Crosslingual Spelling Variants,</title>
<date>2003</date>
<booktitle>proceedings of 26th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval,</booktitle>
<location>Toronto, Canada.</location>
<contexts>
<context position="1533" citStr="Pirkola et al., 2003" startWordPosition="222" endWordPosition="225">at performance can be improved using a word language model to disambiguate the output produced by the transducer-only approach, especially when diacritic marks are not present in the Urdu input. 1 Introduction Transliteration is a process to transcribe a word written in one language, in another language by preserving its articulation. It is crucial for handling out-of-vocabulary (OOV) words in different domains of Natural Language Processing (NLP), especially in Machine Translation (Knight and Graehl, 1998; Knight and Stall, 1998; Paola and Sanjeev, 2003), Cross-Lingual Information Retrieval (Pirkola et al., 2003), the development of multi-lingual resources (Yan et al., 2003) and multi-lingual text and speech processing. It is also useful for Inter-dialectal translation without lexical changes and sometimes it is mandatory when the dialects in question use mutually incomprehensible writing systems. Such cases exists in Malay (written in 2 different scripts), Turkish (2 scripts), Kurdish (3 scripts), Hindi/Urdu (2 scripts), Punjabi (2 scripts), etc., where words are transliterated from one script to the other, irrespective of their type (noun, verb, etc., and not only proper nouns and unknown words). In</context>
</contexts>
<marker>Pirkola, Keshustalo, Visala, K, Jarvelin, 2003</marker>
<rawString>Pirkola, A. Toivonen, J. Keshustalo, H. Visala, K. and Jarvelin, K. 2003. Fuzzy Translation of Crosslingual Spelling Variants, proceedings of 26th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, Toronto, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tariq Rahman</author>
</authors>
<title>Language Policy and Localization in Pakistan: Proposal for a Paradigmatic Shift,</title>
<date>2004</date>
<booktitle>Crossing the Digital Divide, SCALLA Conference on Computational Linguistics.</booktitle>
<contexts>
<context position="2453" citStr="Rahman, 2004" startWordPosition="368" endWordPosition="369">s in Malay (written in 2 different scripts), Turkish (2 scripts), Kurdish (3 scripts), Hindi/Urdu (2 scripts), Punjabi (2 scripts), etc., where words are transliterated from one script to the other, irrespective of their type (noun, verb, etc., and not only proper nouns and unknown words). In this study, we will focus on Hindi/Urdu example. Hindi and Urdu are written in two mutually incomprehensible scripts, Devanagari and Urdu script – a derivative of Persio-Arabic script respectively. Hindi and Urdu are the official languages of India and the later is also the National language of Pakistan (Rahman, 2004). Table 1 gives an idea about the number of speakers of Hindi and Urdu. Native 2nd Lang. Total Speaker Speaker Hindi 366 487 853 Urdu 60.29 104 164.29 Total 426.29 591 1,017.29 Source: (Grimes, 2000) all numbers are in millions Table 1: Hindi and Urdu Speakers Notwithstanding the transcriptional differences, Hindi and Urdu share phonology, grammar, morphology, literature, cultural heritage, etc. People from Hindi and Urdu communities can understand the verbal expressions of each other but the written expression of one community is alien to the other community. A finite-state transliteration mo</context>
</contexts>
<marker>Rahman, 2004</marker>
<rawString>Rahman, Tariq. 2004. Language Policy and Localization in Pakistan: Proposal for a Paradigmatic Shift, Crossing the Digital Divide, SCALLA Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Stolcke</author>
</authors>
<title>SRILM – An Extensible Language Modeling Toolkit,</title>
<date>2002</date>
<booktitle>in proceedings of International Conference on Spoken Language Processing.</booktitle>
<contexts>
<context position="17670" citStr="Stolcke, 2002" startWordPosition="3069" endWordPosition="3070"> Hindi Word Language Model The Hindi Word Language Model is an important component of the hybrid transliteration model. For the development of our statistical word language model, we have used the Hindi Corpus freely available from the Center for Indian Language Technology1, Indian Institute of Technology Bombay (IITB), India. First, we extracted all Hindi sentences from the Hindi corpus. Then we removed all punctuation marks from each sentence. Finally, we added ‘&lt;s&gt;’ and ‘&lt;/s&gt;’ tags at the start and at the end of each sentence. We trained a tri-gram Hindi Word Language Model with the SRILM (Stolcke, 2002) tool. The processed Hindi corpus data contains total 173,087 unique sen1 http://www.cfilt.iitb.ac.in/ read regex [◌् -&gt; 0 ||[? - [र |ल |म |न]] _ [? - ह]]; read regex [◌् -&gt; 0 ||[र |ल |म |न] _ [? - ह]]; read regex [◌् -&gt; 0 ||[? - [र |ल |म |न]] _ [ह]]; read regex [[क ◌् क] -&gt; क, [क ◌् ख] -&gt; ख, [ग ◌् ग] -&gt; ग, [ग ◌् घ] -&gt; घ, [च ◌् च] -&gt; च, [च ◌् छ] -&gt; छ, [ज ◌् ज] -&gt; ज, [ज ◌् झ] -&gt; झ, [ट ◌् ट] -&gt; ट, [ट ◌् ठ] -&gt; ठ, [ड ◌् ड] -&gt; ड, [ड ◌् ढ] -&gt; ढ, [त ◌् त] -&gt; त, [त ◌् थ] -&gt; थ, [द ◌् द] -&gt; द, [द ◌् ध] -&gt; ध, [प ◌् प] -&gt; प, [प ◌् फ] -&gt; फ, [ब ◌् ब] -&gt; ब, [ब ◌् भ] -&gt; भ, [म ◌् म] -&gt; म, [य ◌् य] -&gt; य, [र ◌् </context>
</contexts>
<marker>Stolcke, 2002</marker>
<rawString>Stolcke, A. 2002. SRILM – An Extensible Language Modeling Toolkit, in proceedings of International Conference on Spoken Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Shriberg Stolcke</author>
<author>E Bates</author>
<author>R Ostendorf</author>
<author>M Hakkani</author>
<author>D Plauche</author>
<author>M Tur</author>
<author>G</author>
<author>Y Lu</author>
</authors>
<title>Automatic Detection of Sentence Boundaries and Disfluencies based on Recognized Words.</title>
<date>1998</date>
<booktitle>Proceedings of International Conference on Spoken Language Processing (ICSLP),</booktitle>
<location>Sydney, Australia.</location>
<contexts>
<context position="14175" citStr="Stolcke et al. 1998" startWordPosition="2487" endWordPosition="2490">clearly shows that solution of these problems is beyond the scope of the non-probabilistic Hindi Urdu Finite-state transliteration model (Malik et al., 2008). We propose a hybrid transliteration model that takes the input Urdu text and converts it in Hindi using the Finite-state Transliteration Model (Malik et al, 2008). After that, it tries to correct the orthographic errors in the transduceronly Hindi output string using a statistical word language model for Hindi with the help of a Hindi Word Map described later. The approach used is rather similar to what is done in text recapitalization (Stolcke et al. 1998) for instance. Figure 2: Hybrid Transliteration Model for Urdu Hindi Normally, the Urdu text does not contain necessary diacritical marks that are mandatory for the correct transliteration by the finite-state component Urdu Hindi Transliteration 180 Finite-state Machine (UHT-FSM), described by Malik et al. (2008). The proposed hybrid model focuses on the correct transliteration of Urdu texts without diacritical marks. Figure 2 gives the proposed Model architecture. 3.1 Preprocessing UHT-FSM Output The goal of this pre-processing is to generate a more “normalized” (and consequently more ambiguo</context>
</contexts>
<marker>Stolcke, Bates, Ostendorf, Hakkani, Plauche, Tur, G, Lu, 1998</marker>
<rawString>Stolcke, A. Shriberg, E. Bates, R. Ostendorf, M. Hakkani, D. Plauche, M. Tur, G. and Lu, Y. 1998. Automatic Detection of Sentence Boundaries and Disfluencies based on Recognized Words. Proceedings of International Conference on Spoken Language Processing (ICSLP), Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Grefenstette Gregory</author>
<author>David A Evans</author>
</authors>
<title>Automatic Transliteration for Japanese-toEnglish Text Retrieval.</title>
<date>2003</date>
<booktitle>In proceedings of the 26th annual international ACM SIGIR conference on Research and Development in Information Retrieval,</booktitle>
<pages>353--360</pages>
<marker>Gregory, Evans, 2003</marker>
<rawString>Yan, Qu. Gregory, Grefenstette. and David A. Evans. 2003. Automatic Transliteration for Japanese-toEnglish Text Retrieval. In proceedings of the 26th annual international ACM SIGIR conference on Research and Development in Information Retrieval, pp: 353 – 360.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Khaver Zia</author>
</authors>
<title>Standard Code Table for Urdu.</title>
<date>1999</date>
<booktitle>Proceedings of 4th Symposium on Multilingual Information Processing (MILIT-4),</booktitle>
<location>Yangon, Myanmar, CICC,</location>
<contexts>
<context position="5469" citStr="Zia, 1999" startWordPosition="862" endWordPosition="863">represented in many ways depending upon its context or on the origin of the word, e.g. the vowel [ɑ] is represented by Alef-madda (ﺁ) at the beginning of a word, by Alef (ا) in the middle of a word and in some Persio-Arabic loan word, it is represented by the diacritical mark Khari Zabar (G◌). Thus Urdu has very complex vowel system, for more details see Malik et al. (2008). Urdu contains 10 vowels, and 7 of them also have their nasalization forms (Hussain, 2004; Khan, 1997) and 15 diacritical marks. Thou diacritical marks form the cornerstone of the Urdu vowel system, but are sparingly used (Zia, 1999). They are vital for the correct Urdu to Hindi transliteration using the finite-state transliteration model. The accuracy of the finite-state transliteration model decreases from above 80% to 50% in the absence of diacritical marks. Figure 1 shows two example Urdu phrases (i) with and (ii) without the diacritical marks and their Hindi transliteration using the finite-state transliteration model. Due to the absence of Zabar (F◌) in the first and the last words in (1)(ii) and in the 5th word in (2)(ii), vowels ◌ै [æ] and औ [ɔ] are transliterated into vowels ◌े [e] and ओ [o] respectively. Similar</context>
</contexts>
<marker>Zia, 1999</marker>
<rawString>Zia, Khaver. 1999. Standard Code Table for Urdu. Proceedings of 4th Symposium on Multilingual Information Processing (MILIT-4), Yangon, Myanmar, CICC, Japan.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>