<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.309760">
<title confidence="0.785324">
Domain-Dependent and Domain-Independent
Rhetorical Relations
</title>
<author confidence="0.830952">
Jong-Gyun Lim
</author>
<affiliation confidence="0.990079666666667">
Department of Computer Science
450 Computer Science Building
Columbia University
</affiliation>
<address confidence="0.948489">
New York, N.Y. 10027
</address>
<email confidence="0.992459">
lim@cs.columbia.edu
</email>
<sectionHeader confidence="0.916908" genericHeader="method">
1. Rhetorical Relations as Text Planning Operators
</sectionHeader>
<bodyText confidence="0.956849">
Rhetorical relations have been used for text planning in many text generation sys-
tems ([McK82] [Hov88] [Moo89], among others), but how they are used vary rather
significantly from one text planner to another. While studying them in detail side by
side ([Lim92]), I have observed the following:
</bodyText>
<listItem confidence="0.9979945">
1. A plan operator in a typical Al planner is to carry out an action whereas that in
a text planner is to inform rhetorical relations among the actions and objects.
2. A goal (or intention) in an Al planner is to change the state of the world whereas
that in a text planner is to change the mental state of the hearer.
</listItem>
<bodyText confidence="0.993844">
More precisely, I was led to believe in the analogy between an text planning and
a typical Al planning task as shown in Table 1.
Intentions are goals of the text planner that can be realized by planning a text
in terms of the rhetorical relations. Thus, the role of the rhetorical relations is to
manipulate the mental objects in the mind of the hearer by creating or altering the
relations among them.
With this analogy, I view rhetorical relations as realization of intentions. Further-
more, this analogy leads me to believe that rhetorical relations should be as numerous
and varied as there are relations among actions and objects in the domain. This view
seems to be in conflict with Dale&apos;s view (in this proceedings) which argues that
rhetorical relation should only include textual relations rather than mirroring domain
relations. Assuming many-to-many relation between intentional and informational
</bodyText>
<page confidence="0.996242">
56
</page>
<table confidence="0.9877432">
Al Planning Text Planning
operators (actions) rhetorical relations
state of the world mental states
goals intentions
plan (network of actions) texts (network of rhetorical relations)
</table>
<tableCaption confidence="0.999973">
Table 1: Comparison Between Text Planning and A Typical Al Planning
</tableCaption>
<bodyText confidence="0.999948190476191">
levels (see [MP92] and Korelsky and Kittredge in this proceeding), however, I think
the number of rhetorical relations should depend on the number of relations in the
domain. For example, if there is a domain relation R, then depending on who his
hearer is and what his intentions are, a speaker may choose different method M to
inform R to the hearer. The method M may be planned in terms of several rhetorical
relations or a single rhetorical relation may be used for more than one method like
M. More on this is discussed later.
This analogy is in line with Traum&apos;s position of viewing rhetorical relation as
speech acts or actions in general (in this proceedings). In particular, this view agrees
with his point that a relation can be planned, performed, and recognized. Since
actions are unbounded so should be the relations, which concurs with his criticism
that it is meaningless to find the boundary for the right set of rhetorical relations.
Traum, however, tends to emphasize the importance of intentions so much as to
indicate that the role of rhetorical relations is only secondary and may not even be
necessary in communicating intentions. Very often (especially in casual conversation),
rhetorical relations are implied and thus hidden from the surface form (e.g. (2a) and
(2b) in Traum&apos;s) . However, it is clear that a coherent text is structured with some
meaningful rhetorical relations among its segments. Therefore, without identifying
those relations (hidden or otherwise) planned by the speaker, we cannot say that the
hearer understood the speaker. Thus, I take the position that in both text planning
and recognition, rhetorical relations play a primary role in communicating intentions.
</bodyText>
<sectionHeader confidence="0.999786" genericHeader="method">
2. Need for Domain-Dependent Rhetorical Relations
</sectionHeader>
<bodyText confidence="0.999158222222222">
Typical Al planner represents actions and objects in a hierarchical knowledge base
where both domain-dependent and domain-independent concepts are represented.
Hence, it is possible to plan at abstract level and generate plans in terms of the
abstract plan operators. Similarly, rhetorical relations and intentions in text planning
may include domain-independent types as well as domain-dependent ones.
Without the domain-dependent counterpart, however, abstract rhetorical relations
by themselves are not very useful except for the limited use of meta conversation
(talking about abstract relations among abstract concepts.) For example, rhetorical
relations in TEXT [McK82], Hovy&apos;s RST plan operators [Hov88], and Moore&apos;s RST
</bodyText>
<page confidence="0.992908">
57
</page>
<bodyText confidence="0.999855277777778">
plan operators [Moo89] are all domain-independent rhetorical relations. Thus, they
all apply some facilities to the domain-independent relations to generate information
about domain-dependent relations.
In TEXT, a domain-independent rhetorical predicate of a schema is implemented
with a detailed predicate function that contains directions to search through the
knowledge base to retrieve the domain-dependent relations. Unfortunately, this makes
it hard to write new schemas. Hovy&apos;s RST plan operators, on the other hand, are
easier to write because no domain-dependent plan operators need to be implemented.
However, the burden is swifted to the text structuring process where selected pool of
propositions must be interpreated and matched to some RST plan operators. This
necessitates the encoding of knowledge that maps a domain specific proposition to
a domain-independent rhetorical relation which in my opinion is as hard as writing
domain-dependent RST relations.
Unlike Hovy&apos;s, Moore&apos;s plan operators contain intentional goals which make it
possible to generate structured network of RST relations using hierarchical planning.
However, an instantiated domain-independent relation typically does not capture
the specific relations of the instantiated information. For example, the plan oper-
ator PERSUADE-USER-TO-DO-ACT will be instantiated to (PERSUADED ?user
(GOAL ?user (DO ?user ?act))) but same strategy will be used to persuade an ?user
to do an ?act regardless of who the ?user or what the ?act might be. In reality,
different persuading strategy might be needed for persuading John to replace SETQ
to SETF and persuading John to jump off from an airplane.
To solve this problem, Elhadad takes another extreme approach and introduces
RST-like plan operators called topoi [E1h921. Topoi are functionally equivalent to
Moore&apos;s RST plan operators except that they are completely domain-dependent plan
operators. The main advantages of using all domain-dependent rhetorical relations
in text planning is that one does not need to struggle with naming and matching
a specific relation to a generic level relation (like Evidence and Justifications) while
still being able to build a text structure that reflects the rhetorical structure among
the discourse units. The disadvantage is that the recursively embedded structural
relations that are captured by RST relations among the various levels of discourse
units can not be captured by topoi. As far as text planning is concerned, however,
that doesn&apos;t seem like a disadvantage because such an information is not necessary for
generating coherent text nor for responding to follow-up questions. Also, coherence
of a text seems to depend more on the underlying domain plans than on the abstract
rhetorical relations.
</bodyText>
<sectionHeader confidence="0.656165" genericHeader="method">
3. Where Are the Domain-Dependent Rhetorical Relations?
</sectionHeader>
<bodyText confidence="0.997929833333333">
These observations lead me to conclude that the types of rhetorical relations and
intentions that are most useful for text planning are those that are needed by the
text planner the most, and it seems that the most needed rhetorical relations are
the domain-dependent relations that capture the specific relations between the two
discourse units. How then do we collect these domain-dependent rhetorical relations?
My research is to collect these domain-dependent relations from a multi-agent pro-
</bodyText>
<page confidence="0.993482">
58
</page>
<bodyText confidence="0.999958">
grarnming environment [KP88] and make them available to different kind of text
planners that use them to generate explanations to the agents in that environment.
From this domain, I have learned two things. One is that the domain-dependent
relations have to be collected from a hybrid sources including rules in expert sys-
tem, constraints in a scheduler, programs, and variables in the programs. The other
observation is that one planning method is not sufficient to handle the various text
planning tasks. Therefore, my system allows both the application programs and the
users to define domain-dependent rhetorical relations and strategies to generate ex-
planation for those relations. Depending on the nature of planning task, one planning
method might be better suited than another. Thus, my system has the flexibility to
choose among the different planning strategies. So far, domain-dependent rhetorical
relations have been sufficient for this text planning needs.
</bodyText>
<sectionHeader confidence="0.998941" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99977835">
[E1h92] M. Elhadad. Using Argumentation to Control Lexical Choice: A Unification-
based Approach. PhD thesis, Columbia University, New York, NY, July
1992.
[Hov88] E. H. Hovy. Two types of planning in language generation. In Proceedings
of the 26th ACL Conference, pages 179-186, Buffalo, June 1988. ACL.
[KP88] P. H. Kaiser, G. E. Feiler and S. S. Popovich. Intelligent Assistance for
Software Development and Maintenance. IEEE Software, pages 40-49, May
1988.
[Lim92] J. G. Lim. Planning in Al and Text Planning in Natural Language Genera-
tion. Technical Report CUCS-038-92, Columbia University, New York, NY,
July 1992. area paper.
[McK82] K. R. McKeown. Generating Natural Language Text in Response to Ques-
tions About Database Structure. PhD thesis, University of Pennsylvania,
New York, NY, May 1982. Also a Technical report, No MS-CIS-82-05,
University of Pennsylvania, 1982.
[Moo89] J. D. Moore. A Reactive Approach to Explanation in Expert and Advice-
Giving Systems. PhD thesis, University of California, Los Angeles, Los
Angeles, CA, 1989.
[MP92] J. Moore and M. Pollack. A problem for RST: The Need for Multi-level
Discourse Analysis. Computational Linguistics, 18(4):534-544, 1992.
</reference>
<page confidence="0.999262">
59
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.057036">
<title confidence="0.9991945">Domain-Dependent and Domain-Independent Rhetorical Relations</title>
<author confidence="0.999734">Jong-Gyun Lim</author>
<affiliation confidence="0.999968">Department of Computer</affiliation>
<address confidence="0.885439333333333">450 Computer Science Columbia New York, N.Y.</address>
<email confidence="0.996497">lim@cs.columbia.edu</email>
<abstract confidence="0.99931925">1. Rhetorical Relations as Text Planning Operators Rhetorical relations have been used for text planning in many text generation systems ([McK82] [Hov88] [Moo89], among others), but how they are used vary rather significantly from one text planner to another. While studying them in detail side by side ([Lim92]), I have observed the following: A plan operator in a Al planner is to carry out an action whereas that in a text planner is to inform rhetorical relations among the actions and objects. 2. A goal (or intention) in an Al planner is to change the state of the world whereas that in a text planner is to change the mental state of the hearer. More precisely, I was led to believe in the analogy between an text planning and a typical Al planning task as shown in Table 1. Intentions are goals of the text planner that can be realized by planning a text in terms of the rhetorical relations. Thus, the role of the rhetorical relations is to manipulate the mental objects in the mind of the hearer by creating or altering the relations among them. With this analogy, I view rhetorical relations as realization of intentions. Furthermore, this analogy leads me to believe that rhetorical relations should be as numerous and varied as there are relations among actions and objects in the domain. This view seems to be in conflict with Dale&apos;s view (in this proceedings) which argues that rhetorical relation should only include textual relations rather than mirroring domain relations. Assuming many-to-many relation between intentional and informational 56 Al Planning Text Planning operators (actions) rhetorical relations state of the world mental states goals intentions plan (network of actions) texts (network of rhetorical relations) Table 1: Comparison Between Text Planning and A Typical Al Planning levels (see [MP92] and Korelsky and Kittredge in this proceeding), however, I think the number of rhetorical relations should depend on the number of relations in the domain. For example, if there is a domain relation R, then depending on who his hearer is and what his intentions are, a speaker may choose different method M to inform R to the hearer. The method M may be planned in terms of several rhetorical relations or a single rhetorical relation may be used for more than one method like M. More on this is discussed later. This analogy is in line with Traum&apos;s position of viewing rhetorical relation as speech acts or actions in general (in this proceedings). In particular, this view agrees with his point that a relation can be planned, performed, and recognized. Since actions are unbounded so should be the relations, which concurs with his criticism that it is meaningless to find the boundary for the right set of rhetorical relations. Traum, however, tends to emphasize the importance of intentions so much as to indicate that the role of rhetorical relations is only secondary and may not even be necessary in communicating intentions. Very often (especially in casual conversation), rhetorical relations are implied and thus hidden from the surface form (e.g. (2a) and (2b) in Traum&apos;s) . However, it is clear that a coherent text is structured with some meaningful rhetorical relations among its segments. Therefore, without identifying those relations (hidden or otherwise) planned by the speaker, we cannot say that the hearer understood the speaker. Thus, I take the position that in both text planning and recognition, rhetorical relations play a primary role in communicating intentions. 2. Need for Domain-Dependent Rhetorical Relations Typical Al planner represents actions and objects in a hierarchical knowledge base where both domain-dependent and domain-independent concepts are represented. Hence, it is possible to plan at abstract level and generate plans in terms of the abstract plan operators. Similarly, rhetorical relations and intentions in text planning may include domain-independent types as well as domain-dependent ones. Without the domain-dependent counterpart, however, abstract rhetorical relations by themselves are not very useful except for the limited use of meta conversation (talking about abstract relations among abstract concepts.) For example, rhetorical relations in TEXT [McK82], Hovy&apos;s RST plan operators [Hov88], and Moore&apos;s RST 57 plan operators [Moo89] are all domain-independent rhetorical relations. Thus, they all apply some facilities to the domain-independent relations to generate information about domain-dependent relations. In TEXT, a domain-independent rhetorical predicate of a schema is implemented with a detailed predicate function that contains directions to search through the knowledge base to retrieve the domain-dependent relations. Unfortunately, this makes it hard to write new schemas. Hovy&apos;s RST plan operators, on the other hand, are easier to write because no domain-dependent plan operators need to be implemented. However, the burden is swifted to the text structuring process where selected pool of propositions must be interpreated and matched to some RST plan operators. This necessitates the encoding of knowledge that maps a domain specific proposition to a domain-independent rhetorical relation which in my opinion is as hard as writing domain-dependent RST relations. Unlike Hovy&apos;s, Moore&apos;s plan operators contain intentional goals which make it possible to generate structured network of RST relations using hierarchical planning. However, an instantiated domain-independent relation typically does not capture the specific relations of the instantiated information. For example, the plan operator PERSUADE-USER-TO-DO-ACT will be instantiated to (PERSUADED ?user (GOAL ?user (DO ?user ?act))) but same strategy will be used to persuade an ?user to do an ?act regardless of who the ?user or what the ?act might be. In reality, different persuading strategy might be needed for persuading John to replace SETQ to SETF and persuading John to jump off from an airplane. To solve this problem, Elhadad takes another extreme approach and introduces RST-like plan operators called topoi [E1h921. Topoi are functionally equivalent to Moore&apos;s RST plan operators except that they are completely domain-dependent plan operators. The main advantages of using all domain-dependent rhetorical relations in text planning is that one does not need to struggle with naming and matching a specific relation to a generic level relation (like Evidence and Justifications) while still being able to build a text structure that reflects the rhetorical structure among the discourse units. The disadvantage is that the recursively embedded structural relations that are captured by RST relations among the various levels of discourse units can not be captured by topoi. As far as text planning is concerned, however, that doesn&apos;t seem like a disadvantage because such an information is not necessary for generating coherent text nor for responding to follow-up questions. Also, coherence of a text seems to depend more on the underlying domain plans than on the abstract rhetorical relations. 3. Where Are the Domain-Dependent Rhetorical Relations? These observations lead me to conclude that the types of rhetorical relations and intentions that are most useful for text planning are those that are needed by the text planner the most, and it seems that the most needed rhetorical relations are the domain-dependent relations that capture the specific relations between the two discourse units. How then do we collect these domain-dependent rhetorical relations? research is to collect these domain-dependent relations from a multi-agent pro- 58 grarnming environment [KP88] and make them available to different kind of text planners that use them to generate explanations to the agents in that environment. From this domain, I have learned two things. One is that the domain-dependent relations have to be collected from a hybrid sources including rules in expert system, constraints in a scheduler, programs, and variables in the programs. The other observation is that one planning method is not sufficient to handle the various text planning tasks. Therefore, my system allows both the application programs and the users to define domain-dependent rhetorical relations and strategies to generate explanation for those relations. Depending on the nature of planning task, one planning method might be better suited than another. Thus, my system has the flexibility to choose among the different planning strategies. So far, domain-dependent rhetorical relations have been sufficient for this text planning needs.</abstract>
<note confidence="0.8979105">References M. Elhadad. Argumentation to Control Lexical Choice: A Unification- Approach. thesis, Columbia University, New York, NY, July 1992. E. H. Hovy. Two types of planning in language generation. In the 26th ACL Conference, 179-186, Buffalo, June 1988. ACL. [KP88] P. H. Kaiser, G. E. Feiler and S. S. Popovich. Intelligent Assistance for Development and Maintenance. Software, 40-49, May 1988. J. G. Lim. in Al and Text Planning in Natural Language Genera- Report CUCS-038-92, Columbia University, New York, NY, July 1992. area paper.</note>
<author confidence="0.661452">Natural Language Text in Response to Ques-</author>
<affiliation confidence="0.796537">About Database Structure. thesis, University of Pennsylvania,</affiliation>
<address confidence="0.804887">New York, NY, May 1982. Also a Technical report, No MS-CIS-82-05,</address>
<note confidence="0.918297428571429">University of Pennsylvania, 1982. J. D. Moore. Reactive Approach to Explanation in Expert and Advice- Systems. thesis, University of California, Los Angeles, Los Angeles, CA, 1989. [MP92] J. Moore and M. Pollack. A problem for RST: The Need for Multi-level Analysis. Linguistics, 1992. 59</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>M Elhadad</author>
</authors>
<title>Using Argumentation to Control Lexical Choice: A Unificationbased Approach.</title>
<date>1992</date>
<tech>PhD thesis,</tech>
<institution>Columbia University,</institution>
<location>New York, NY,</location>
<marker>[E1h92]</marker>
<rawString>M. Elhadad. Using Argumentation to Control Lexical Choice: A Unificationbased Approach. PhD thesis, Columbia University, New York, NY, July 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E H Hovy</author>
</authors>
<title>Two types of planning in language generation.</title>
<date>1988</date>
<booktitle>In Proceedings of the 26th ACL Conference,</booktitle>
<pages>179--186</pages>
<publisher>ACL.</publisher>
<location>Buffalo,</location>
<contexts>
<context position="4493" citStr="[Hov88]" startWordPosition="704" endWordPosition="704">pendent and domain-independent concepts are represented. Hence, it is possible to plan at abstract level and generate plans in terms of the abstract plan operators. Similarly, rhetorical relations and intentions in text planning may include domain-independent types as well as domain-dependent ones. Without the domain-dependent counterpart, however, abstract rhetorical relations by themselves are not very useful except for the limited use of meta conversation (talking about abstract relations among abstract concepts.) For example, rhetorical relations in TEXT [McK82], Hovy&apos;s RST plan operators [Hov88], and Moore&apos;s RST 57 plan operators [Moo89] are all domain-independent rhetorical relations. Thus, they all apply some facilities to the domain-independent relations to generate information about domain-dependent relations. In TEXT, a domain-independent rhetorical predicate of a schema is implemented with a detailed predicate function that contains directions to search through the knowledge base to retrieve the domain-dependent relations. Unfortunately, this makes it hard to write new schemas. Hovy&apos;s RST plan operators, on the other hand, are easier to write because no domain-dependent plan op</context>
</contexts>
<marker>[Hov88]</marker>
<rawString>E. H. Hovy. Two types of planning in language generation. In Proceedings of the 26th ACL Conference, pages 179-186, Buffalo, June 1988. ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P H Kaiser</author>
<author>G E Feiler</author>
<author>S S Popovich</author>
</authors>
<date>1988</date>
<booktitle>Intelligent Assistance for Software Development and Maintenance. IEEE Software,</booktitle>
<pages>40--49</pages>
<contexts>
<context position="7873" citStr="[KP88]" startWordPosition="1206" endWordPosition="1206"> rhetorical relations. 3. Where Are the Domain-Dependent Rhetorical Relations? These observations lead me to conclude that the types of rhetorical relations and intentions that are most useful for text planning are those that are needed by the text planner the most, and it seems that the most needed rhetorical relations are the domain-dependent relations that capture the specific relations between the two discourse units. How then do we collect these domain-dependent rhetorical relations? My research is to collect these domain-dependent relations from a multi-agent pro58 grarnming environment [KP88] and make them available to different kind of text planners that use them to generate explanations to the agents in that environment. From this domain, I have learned two things. One is that the domain-dependent relations have to be collected from a hybrid sources including rules in expert system, constraints in a scheduler, programs, and variables in the programs. The other observation is that one planning method is not sufficient to handle the various text planning tasks. Therefore, my system allows both the application programs and the users to define domain-dependent rhetorical relations a</context>
</contexts>
<marker>[KP88]</marker>
<rawString>P. H. Kaiser, G. E. Feiler and S. S. Popovich. Intelligent Assistance for Software Development and Maintenance. IEEE Software, pages 40-49, May 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J G Lim</author>
</authors>
<title>Planning in Al and Text Planning in Natural Language Generation.</title>
<date>1992</date>
<tech>Technical Report CUCS-038-92,</tech>
<institution>Columbia University,</institution>
<location>New York, NY,</location>
<note>area paper.</note>
<marker>[Lim92]</marker>
<rawString>J. G. Lim. Planning in Al and Text Planning in Natural Language Generation. Technical Report CUCS-038-92, Columbia University, New York, NY, July 1992. area paper.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K R McKeown</author>
</authors>
<title>Generating Natural Language Text in Response to Questions About Database Structure.</title>
<date>1982</date>
<tech>PhD thesis,</tech>
<institution>University of Pennsylvania,</institution>
<location>New York, NY,</location>
<note>Also a</note>
<contexts>
<context position="4458" citStr="[McK82]" startWordPosition="699" endWordPosition="699">knowledge base where both domain-dependent and domain-independent concepts are represented. Hence, it is possible to plan at abstract level and generate plans in terms of the abstract plan operators. Similarly, rhetorical relations and intentions in text planning may include domain-independent types as well as domain-dependent ones. Without the domain-dependent counterpart, however, abstract rhetorical relations by themselves are not very useful except for the limited use of meta conversation (talking about abstract relations among abstract concepts.) For example, rhetorical relations in TEXT [McK82], Hovy&apos;s RST plan operators [Hov88], and Moore&apos;s RST 57 plan operators [Moo89] are all domain-independent rhetorical relations. Thus, they all apply some facilities to the domain-independent relations to generate information about domain-dependent relations. In TEXT, a domain-independent rhetorical predicate of a schema is implemented with a detailed predicate function that contains directions to search through the knowledge base to retrieve the domain-dependent relations. Unfortunately, this makes it hard to write new schemas. Hovy&apos;s RST plan operators, on the other hand, are easier to write </context>
</contexts>
<marker>[McK82]</marker>
<rawString>K. R. McKeown. Generating Natural Language Text in Response to Questions About Database Structure. PhD thesis, University of Pennsylvania, New York, NY, May 1982. Also a Technical report, No MS-CIS-82-05, University of Pennsylvania, 1982.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J D Moore</author>
</authors>
<title>A Reactive Approach to Explanation in Expert and AdviceGiving Systems.</title>
<date>1989</date>
<tech>PhD thesis,</tech>
<institution>University of California,</institution>
<location>Los Angeles, Los Angeles, CA,</location>
<contexts>
<context position="4536" citStr="[Moo89]" startWordPosition="711" endWordPosition="711"> represented. Hence, it is possible to plan at abstract level and generate plans in terms of the abstract plan operators. Similarly, rhetorical relations and intentions in text planning may include domain-independent types as well as domain-dependent ones. Without the domain-dependent counterpart, however, abstract rhetorical relations by themselves are not very useful except for the limited use of meta conversation (talking about abstract relations among abstract concepts.) For example, rhetorical relations in TEXT [McK82], Hovy&apos;s RST plan operators [Hov88], and Moore&apos;s RST 57 plan operators [Moo89] are all domain-independent rhetorical relations. Thus, they all apply some facilities to the domain-independent relations to generate information about domain-dependent relations. In TEXT, a domain-independent rhetorical predicate of a schema is implemented with a detailed predicate function that contains directions to search through the knowledge base to retrieve the domain-dependent relations. Unfortunately, this makes it hard to write new schemas. Hovy&apos;s RST plan operators, on the other hand, are easier to write because no domain-dependent plan operators need to be implemented. However, th</context>
</contexts>
<marker>[Moo89]</marker>
<rawString>J. D. Moore. A Reactive Approach to Explanation in Expert and AdviceGiving Systems. PhD thesis, University of California, Los Angeles, Los Angeles, CA, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Moore</author>
<author>M Pollack</author>
</authors>
<title>A problem for RST: The Need for Multi-level Discourse Analysis. Computational Linguistics,</title>
<date>1992</date>
<contexts>
<context position="2040" citStr="[MP92]" startWordPosition="325" endWordPosition="325"> and varied as there are relations among actions and objects in the domain. This view seems to be in conflict with Dale&apos;s view (in this proceedings) which argues that rhetorical relation should only include textual relations rather than mirroring domain relations. Assuming many-to-many relation between intentional and informational 56 Al Planning Text Planning operators (actions) rhetorical relations state of the world mental states goals intentions plan (network of actions) texts (network of rhetorical relations) Table 1: Comparison Between Text Planning and A Typical Al Planning levels (see [MP92] and Korelsky and Kittredge in this proceeding), however, I think the number of rhetorical relations should depend on the number of relations in the domain. For example, if there is a domain relation R, then depending on who his hearer is and what his intentions are, a speaker may choose different method M to inform R to the hearer. The method M may be planned in terms of several rhetorical relations or a single rhetorical relation may be used for more than one method like M. More on this is discussed later. This analogy is in line with Traum&apos;s position of viewing rhetorical relation as speech</context>
</contexts>
<marker>[MP92]</marker>
<rawString>J. Moore and M. Pollack. A problem for RST: The Need for Multi-level Discourse Analysis. Computational Linguistics, 18(4):534-544, 1992.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>