<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000093">
<title confidence="0.600807">
FLUSH: A Flexible Lexicon Design
</title>
<note confidence="0.8201335">
David J. Besemer and Paul S. Jacobs
Artificial Intelligence Branch
GE Corporate Research and Development
Schenectady, NY 12301 USA
</note>
<sectionHeader confidence="0.984398" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.992599222222222">
Approaches to natural language processing that use a
phrasal lexicon have the advantage of easily handling
linguistic constructions that might otherwise be ex-
tragrammatical. However, current phrasal lexicons
are often too rigid: their phrasal entries fail to cover
the more flexible constructions. FLUSH, for Flexible
Lexicon Utilizing Specialized and Hierarchical knowl-
edge, is a knowledge-based lexicon design that allows
broad phrasal coverage.
</bodyText>
<sectionHeader confidence="0.968114" genericHeader="keywords">
I. Introduction
</sectionHeader>
<bodyText confidence="0.999850809523809">
Natural language processing systems must use a broad
range of lexical knowledge to account for the syntactic use
and meaning of words and constructs. The problem of un-
derstanding is compounded by the fact that language is
full of nonproductive constructs—expressions whose mean-
ing is not fully determined by examining their parts. To
handle these constructs, some systems use a phrasal lex-
icon [Becker, 1975, Wilensky and Arens, 1980b, Jacobs,
,1985b, Steinacker and Buchberger, 1983, Dyer and Zernik,
1986], a dictionary designed to make the representation of
these specialized constructs easier.
The problem that phrasal lexicons have is that they
are too rigid: the phrasal knowledge is entered in a way
that makes it difficult to represent the many forms some
expressions may take without treating each form as a dis-
tinct &amp;quot;phrase&amp;quot;. For example, expressions such as &amp;quot;send
a message&amp;quot;, &amp;quot;give a hug&amp;quot;, &amp;quot;working directory&amp;quot;, and &amp;quot;pick
up&amp;quot; may be handled as specialized phrases, but this over-
looks similar expressions such as &amp;quot;give a message&amp;quot;, &amp;quot;get
a kiss&amp;quot;, &amp;quot;working area&amp;quot;, and &amp;quot;take up&amp;quot;. Specialized con-
structs must be recognized, but much of their meaning as
well as their flexible linguistic behavior may come from a
more general level.
A solution to this problem of rigidity is to have a hier-
archy of linguistic constructions, with the most specialized
phrases grouped in categories with other phrases that be-
have similarly. The idea of a linguistic hierarchy is not
novel, having roots in both linguistics [Lockwood, 1972,
Halliday, 1978] and Artificial Intelligence [Sondheimer et
al., 1984]. Incorporating phrasal knowledge into such a
hierarchy was suggested in some Al work [Wilensky and
Arens, 1980a], but the actual implementation of a hier-
archical phrasal lexicon requires substantial extensions to
the phrasal representation of such work.
The Flexible Lexicon Utilizing Specific and Hierar-
chical knowledge (FLUSH) is one component in a suite of
natural language processing tools being developed at the
GE Research and Development Center to facilitate rapid
assimilation of natural language processing technology to a
wide variety of domains. FLUSH has characteristics of both
traditional and phrasal lexicons, and the phrasal portion
is partitioned into four classes of phrasal entries:
</bodyText>
<listItem confidence="0.99968725">
• word sequences
• lexical relations
• linguistic relations
• linguistic/conceptual relations
</listItem>
<bodyText confidence="0.99374675">
FLUSH&apos;S mechanisms for dealing with these four classes of
specialized phrases make use of both general and specific
knowledge to support extensibility.
FLUSH is the lexical component of a system called
TRUMP (TRansportable Understanding Mechanism Pack-
age) [Jacobs, 1986b], used for language analysis in multiple
domains. This paper will describe the phrasal knowledge
base of FLUSH and its use in TRUMP.
</bodyText>
<sectionHeader confidence="0.938448" genericHeader="introduction">
II. Compound Lexical
Knowledge in FLUSH
</sectionHeader>
<bodyText confidence="0.999295705882353">
Because the knowledge embodied in single word lexemes
is not enough to account for nonproductive expressions,
FLUSH contains phrasal entries called compound lexemes.
This section first illustrates how each of the four classes of
compound lexemes is represented in FLUSH and then de-
scribes the algorithm for accessing the compound lexemes.
So that the reader is better equipped to understand the fig-
ures in the rest of this paper, the next paragraph briefly in-
troduces the knowledge representation scheme that is em-
ployed by FLUSH.
Knowledge representation in FLUSH is uses Ace [Ja-
cobs and Rau, 1984, Jacobs, 1985a], a hierarchical knowl-
edge representation framework based on structured inher-
itance. Most of Ace&apos;s basic elements can be found in other
knowledge representation schemes (e.g., isa links, slots,
and inheritance)[Bobrow and Winograd, 1977, Brachman
and Schmolze, 1985, Wilensky, 1986], but Ace has the
</bodyText>
<page confidence="0.998854">
186
</page>
<figureCaption confidence="0.999906">
Figure 1: The compound lexeme verb-pardicle-xxx-up
</figureCaption>
<figure confidence="0.9942312">
verb-particle
v- ick-u
v-look-u
compound-lexeme
p-xxx-up
•11
verb-pick
verb-throw I verb-look
:V07.titro1v.710::
prep-up
</figure>
<bodyText confidence="0.996137789473684">
unique ability to represent referential and metaphorical
mappings among categories (see descriptions of ref and
view below). The primitive semantic connections in an
Ace hierarchy include the following:
dominate — defines an isa link between two categories.
This relation is labeled with a &amp;quot;D&amp;quot; in the figures.
(dominate action running) means that running is
an action—i.e., action dominates running.
manifest — defines a constituent of a category. Unless a
role-play applies (see below), this relation is labeled
&amp;quot;m&amp;quot; in the figures.
(manifest action actor) means that an action has
an actor associated with it. This is analogous to a slot
in other knowledge representations.
role-play — establishes a relationship between a con-
stituent (slot) of a dominating category and a con-
stituent (slot) of a dominated category. In the figures,
this relation is labeled with the appropriate role name
for the constituent.
</bodyText>
<equation confidence="0.5506995">
(dominate action running
(role-play actor runner))
</equation>
<bodyText confidence="0.972064333333333">
means that in running, the role of actor (inherited
from action) is played by the runner.
ref — defines a mapping between an entity in the linguis-
tic hierarchy and an entity in the conceptual hierarchy.
This relation is labeled &amp;quot;ref in the figures.
(ref lex-run running) means that when the lexical
category lex-run is invoked, the concept of running
should be invoked as well. This is the main chan-
nel through which semantic interpretation is accom-
plished.
view — defines a metaphorical mapping between two cat-
egories in the conceptual hierarchy.
(view transfer-event action
(role-play source actor))
means that in certain cases, an action can be
metaphorically viewed as a transfer-event, with the
actor viewed as the source of the transfer.
This brief introduction to Ace will help the reader un-
derstand the descriptions of the representation and access
of compound lexemes that are presented in the next two
subsections.
</bodyText>
<subsectionHeader confidence="0.5020015">
A. Compound Lexemes
1. Word Sequences
</subsectionHeader>
<bodyText confidence="0.9994174">
Word sequences are phrases such as &amp;quot;by and large&amp;quot;
and &amp;quot;let alone&amp;quot; that must be treated as compound words
because there is little hope in trying to determine their
meaning by examining their components. Internally, these
word sequences may or may not be grammatical (e.g., &amp;quot;kick
the bucket&amp;quot; is internally grammatical, but &amp;quot;by and large&amp;quot;
is not).
Because type of compound lexeme is very specific, a
separate category exists for each word sequence under the
general category of word-sequence. Lexical constraints are
placed on the different constituents of the word-sequence
relation by dominating them by the appropriate simple
lexeme. This is one method that can be used to establish
constraints on compound lexemes, and it is used through-
out the compound lexeme hierarchy.
</bodyText>
<sectionHeader confidence="0.936461" genericHeader="method">
2. Lexical Relations
</sectionHeader>
<bodyText confidence="0.999938692307692">
Lexical relations include compound lexical entities
such as &amp;quot;pick up&amp;quot; and &amp;quot;sell out&amp;quot; that can appear in a va-
riety of surface forms, but have some general relationship
among their simple lexeme constituents. Compound lex-
ernes such as verb-particles (&amp;quot;pick up&amp;quot;), verb-prepositions
(&amp;quot;take to&amp;quot;), and helper-verbs (&amp;quot;get going&amp;quot;) all fall into
the category of lexical relations. In contrast to the indi-
vidual subcategories of word sequences, there are many
entries that fall underneath each individual subcategory
of lexical relations. Most of the entries under these sub-
categories, however, share constituents with other entries,
which makes generalizations possible. For example, Fig-
ure 1 shows how all verb-particles that have up as the par-
</bodyText>
<page confidence="0.960781">
187
</page>
<figure confidence="0.996884888888889">
whole-verb
mod-va
compound-lexeme
mod-rel
prep-phrase
base
mod-rel-xxx-from
mod re,_
prep-root
</figure>
<figureCaption confidence="0.999982">
Figure 2: The modifying-relation compound-lexeme hierarchy.
</figureCaption>
<bodyText confidence="0.999595333333334">
tide (e.g., &amp;quot;pick up&amp;quot;, &amp;quot;throw up&amp;quot;, &amp;quot;look up&amp;quot;) are repre-
sented.
This generalization in representing seemingly specific
phrases is what makes FLUSH extensible. If a new verb-
particle with up as the particle is added to the system (e.g.,
&amp;quot;hang up&amp;quot;), it inherits everything except the verb from the
structure above it—that is, the general properties of verb-
particle relations are inherited (such as the transposition
of the particle with the object &amp;quot;it&amp;quot;), and the specific prop-
erties of verb-particles having the preposition &amp;quot;up&amp;quot; (the
constraint on the preposition itself, and possibly some de-
fault semantics for the particle) are inherited.
</bodyText>
<sectionHeader confidence="0.934762" genericHeader="method">
3. Linguistic Relations
</sectionHeader>
<bodyText confidence="0.999975975609756">
Linguistic relations are invoked according to con-
straints on their constituents, where the constituents may
be simple lexemes, compound lexemes, or syntactic struc-
tures. An example occurs in the sentence &amp;quot;John was sold
a book by Mary&amp;quot; where the object of the preposition is
the main actor of the event described by the verb. This
condition occurs only when the whole verb-is in the passive
form (constraint 1) and the preposition in the modifying
prepositional phrase is by (constraint 2).
Linguistic relations are difficult to represent for two
reasons: their constituents are not always simple lexemes
and usually there are additional constraints on each con-
stituent. It has been found, however, that a great deal of
generality can be extracted from most of the linguistic re-
lations to make accessing them easier. The best example
of a linguistic relation is the class of the modifying prepo-
sitional phrases. In some instances, prepositional phrases
modify noun phrases and verb phrases in almost the same
way (e.g., &amp;quot;The man on the hill is a skier&amp;quot; and &amp;quot;We had
a picnic on the hill&apos;). In other cases prepositional phrases
modify noun phrases and verb phrases in completely dif-
ferent ways (e.g., &amp;quot;The man by the car is my father.&amp;quot; and
&amp;quot;The boy was hit by the car.&amp;quot;). FLUSH is able to represent
both types of linguistic relation by having more than one
level of generic representation. Figure 2 shows the gen-
eral modifying relation (mod-rel) at the first level below
cornpound-lexeme. Prepositional phrases that are homo-
geneous across noun phrases and verb phrases are repre-
sented underneath this category. Below mod-rel in Figure 2
are the verb-adjunct (va) and noun-post-modifier (npm)
categories, which make up the second level of generic repre-
sentation. Prepositional phrases that modify verb phrases
and noun phrases differently are represented underneath
these categories.
As an example, in Figure 2 the mod-rd category has
the more specific modifying relation mod-rel-rxx-from un-
derneath it, which is a modifying relation where the prepo-
sition in the modifier is prep-from. Example uses of this
prepositional phrase are found in the sentences: &amp;quot;The man
arrived from New York&amp;quot; and &amp;quot;The woman from Boston is
my aunt&amp;quot;.
</bodyText>
<sectionHeader confidence="0.996096" genericHeader="method">
4. Linguistic/Conceptual Relations
</sectionHeader>
<bodyText confidence="0.999974307692308">
These are expressions that cannot be easily handled
as exclusively linguistic constructs, such as &amp;quot;giving per-
mission&amp;quot;, &amp;quot;getting permission&amp;quot;, and &amp;quot;having permission&amp;quot;.
These expressions can be represented as an abstract pos-
session concept where the possessed is &apos;noun-permission&amp;quot;,
thus combining a class of concepts with a lexical category.
These compound lexemes have the unique character-
istic of allowing linguistic relations to have explicit con-
ceptual constraints. In the phrase &amp;quot;give a hug&amp;quot; there is
an abstract relationship between the concept of giving and
the simple lexeme noun-hug that implies the concept of
hugging. Figure 3 shows the representation of this linguis-
tic/conceptual relation. This kind of compound lexeme is
invoked by the semantic interpreter, rather than by the
parser, during a process called concretion—making con-
cepts more concrete. The scope of this paper does not per-
mit a discussion of concretion, but refer to [Jacobs, 1986b]
for more information.
The descriptions in this section illustrate how FLUSH
is able to represent a wide range of lexical phenomena in
a hierarchical and uniform manner. The four classes of
compound lexemes that are described encompass many of
the usually problematic expressions in natural language,
yet they are represented in a way that supports extension
and adaptation. The next section describes how these rep-
resentations are accessed by FLUSH.
</bodyText>
<page confidence="0.90634">
188
</page>
<bodyText confidence="0.996872860465116">
a second step in the search process looks at the sibling cat-
egories. This process continues until either the top of the
compound-lexeme hierarchy is reached (which happens im-
mediately for most relations) or until a suitable compound
lexeme is found.
The process of finding a compound lexeme below
the given relation is a matching problem. In response
to the example call to find-compound above, the lexi-
con proceeds to look at the defined categories underneath
verb-part, which include verb-part-xxx-up, verb-part-xxx-
out, verb-part-xxx-of, etc., to see which one(s) satisfies the
constraints. verb-part-xxx-up is found as a possibility, re-
sulting in the same function being called recursively with
the remaining constraints to find an appropriate category
below it:
(find-compound verb-part-xxx-up
(v-verb-part pt-verb-pick))
This process is repeated until one of two conditions oc-
curs: either the given constraints are exhausted, in which
case a category that satisfies all of them has been found;
or there are no more categories to search but there are still
constraints left, in which case no match has been found
and it may be appropriate to search the ancestors&apos; sub-
categories. In this example, the verb-part-pick-up category
is found and returned on the second recursion, therefore,
there is no need to search the hierarchy at a higher level.
If instead the parser is working in the sentence &amp;quot;The
man arrived from New York&amp;quot;, it encounters a possible
verb-adjunct (va) relation between the verb &amp;quot;arrived&amp;quot; and
the prepositional phrase &amp;quot;from New York&amp;quot;. The lexicon is
called with the va relation, but the first step in the search
process (i.e., looking below the given relation) does not
yield a compound lexeme because mod-rel-xxx-from is de-
fined in terms of the mod-rel relation rather than in terms
of the va relation (see Figure 2). So even though the re-
lation that the parser encounters in the pattern is a verb-
adjunct relation, the lexicon is flexible enough that it can
apply more general knowledge to the retrieval problem.
The meanings of compound lexemes are represented
and accessed using a reference pointer that links the lin-
guistic category to a conceptual structure. Some of the
conceptual reference pointers for compound lexemes are
more complicated than simple lexical access because of-
</bodyText>
<figureCaption confidence="0.939705866666667">
ten there are several components that need to be mapped,
but they are still defined in terms of the ref association
[Jacobs, 1986a]. The example form below defines a refer-
ence from the compound lexeme mod-rel-xxx-from to the
transfer-event concept:
(ref transfer-event &lt;-&gt; mod-rel-xxx-from
(source &lt;-&gt; m-mod-rel-xxx-from))
This reference establishes that the modifying relation
mod-rel-xxx-from should invoke the transfer-event concept,
and the modifier part of mod-rel-xxx-from, namely m-mod-
rel-xxx-from, should fill the role of source in this transfer-
event. In the sentence &amp;quot;The man arrived from New York&amp;quot;,
189
Figure 3: The linguistic/conceptual relation kr-give-hug.
B. Access
</figureCaption>
<bodyText confidence="0.798854361702128">
Although the compound lexeme representations illustrated
in the previous section differ, FLUSH is able to employ a
fairly flexible algorithm for accessing them. When the
parser encounters a relation that may constitute a com-
pound lexeme, it passes the name of the relation and the
constituents that fill the appropriate roles to FLUSH. If
FLUSH finds a compound lexeme that satisfies the con-
straints, it passes the lexeme back to the parser.
For example, if TRUMP is working on the sentence
&amp;quot;John picked up the book&amp;quot;, it encounters a possible verb-
particle relationship between the verb &amp;quot;picked&amp;quot; and the
preposition &amp;quot;up&amp;quot;. When this relationship is apparent to
the parser, FLUSH is called with the verb-part relation with
the constituents of pt-verb-pick as the verb and prep-up as
the particle:
(find-compound verb-part
(v-verb-part pt-verb-pick)
(p-verb-part prep-up))
In this example, the compound lexeme verb-part-pick-
up is found by FLUSH and is returned to the parser. If
instead the sentence is &amp;quot;John meditated up the hill&amp;quot;, the
parser takes the same action, but no compound lexeme is
found by FLUSH because &amp;quot;meditated up&amp;quot; has no special
meaning.
FLUSH uses a two step procedure to locate specific
compound lexemes. First, entries below the given relation
in the hierarchy are checked to see if any of them sat-
isfy the given constraints. If a compound lexeme exists, it
is usually found during this step. There are some cases,
however, in which the desired compound lexeme exists as
a subcategory of an ancestor of the given relation. This
situation was seen in the description of the modifying rela-
tion (mod-re!), verb-adjunct (va), and noun-post-modifier
(npm) in the previous section (see Figure 2). In this case,
the prepositional phrase &amp;quot;from New York&amp;quot; invokes mod-
rel-xxx-from. In turn, the transfer-event concept is invoked
with &amp;quot;New York&amp;quot; as the source of the transfer.
The explanations above illustrate that FLUSH is capa-
ble of representing and accessing most of the different types
of lexical knowledge that natural language processing sys-
tems need to have. They also show how FLUSH can do
most of it in a general manner, making extensions fairly
straightforward. FLUSH is equipped also with a mecha-
nism for automatic acquisition of new lexemes, described in
[Besemer, 1986]. The discussion that follows concentrates
on the application of the hierarchical lexicon to semantic
interpretation in TRUMP.
</bodyText>
<sectionHeader confidence="0.9816675" genericHeader="method">
III. Semantic Interpretation
using FLUSH
</sectionHeader>
<bodyText confidence="0.999960258064516">
Section II. described the organization of the FLUSH lexi-
con, distinguishing several classes of lexical knowledge and
showing the use of a hierarchical knowledge representation
in representing examples of each class. One goal of this
hierarchical organization is parsimony: because categories
of compound lexemes inherit their constraints from more
general categories, the number of linguistic constraints en-
coded explicitly can be reduced. A second function of the
hierarchical representation, perhaps more important, is to
facilitate the interpretation of the meaning of a compound
lexeme.
Semantic interpretation is facilitated by each of the
classes of compound lexemes discussed in section II.. The
simple example of word sequences allows the semantic in-
terpreter to set aside the meanings of the individual words
to interpret phrases such as &amp;quot;by and large&amp;quot; and &amp;quot;kick the
bucket&amp;quot; correctly. Lexical relations, such as &amp;quot;pick up&amp;quot;
and &amp;quot;working directory&amp;quot;, permit the association of spe-
cialized meanings as well as the contribution of certain
flexible lexical classes to the meaning of a phrase. For ex-
ample, the phrase &amp;quot;branch manager&amp;quot; is interpreted using
knowledge that it belongs to a lexical category common
with &amp;quot;lab manager&amp;quot; and &amp;quot;program manager&amp;quot;. Linguistic
relations such as mod-rel-xxx-from permit general lexical
knowledge to apply to the filling of conceptual roles. Lin-
guistic/conceptual relations such as lcr-give-hug permit the
specialized interpretation of expressions such as &amp;quot;give a
hug&amp;quot; in a broad range of surface forms.
The following examples illustrate the operation of the
TRUMP semantic interpreter and its use of the FLUSH lexi-
con.
</bodyText>
<subsectionHeader confidence="0.64315">
Example 1:
</subsectionHeader>
<bodyText confidence="0.99334976">
Send the laser printer characteristics to the branch
manager.
Processing the above sentence stimulates a steady flow
of information between TRUMP&apos;S parser and semantic in-
terpreter and the FLUSH lexical access mechanism. The
lexical analyzer recognizes &amp;quot;laser&amp;quot;, &amp;quot;printer&amp;quot; and &amp;quot;charac-
teristics&amp;quot; as nouns, but the search for compound lexical
entries is activated only as the parser recognizes that the
nouns form a compound. The specific entry for &amp;quot;laser
printer&amp;quot; in the FLUSH lexicon, returned using the com-
pound access method described in the previous section,
provides two important pieces of information to TRUMP:
First, it gives the semantic interpreter the correct meaning
of the phrase, permitting TRUMP to forbear consideration
of interpretations such as &amp;quot;a printer that prints lasers&amp;quot;.
Second, it enables the parser to favor the grouping [[laser
printer] characteristics] over [laser [printer characteristics]]
and thus come up with a viable meaning for the entire
phrase.
The handling of the relationship between &amp;quot;charac-
teristics&amp;quot; and &amp;quot;laser printer&amp;quot; makes use of the middle-
level category cn-xxx-characteristic, much like the verb-
particle-xxx-up category described in section II. The cn-
xxx-characteristic category, representing compound nomi-
nals whose second noun is &amp;quot;characteristic&amp;quot;, is associated
with its meaning via a REF link in the following way:
(ref characteristic &lt;-&gt; cn-xxx-characteristic
(manifester &lt;-&gt; in-cn-xxx-characteristic))
The above
association, in which in-cn-rxx-characteristic denotes the
first noun of a particular nominal compound, suggests the
interpretation &amp;quot;characteristics of the laser printer&amp;quot;. The
treatment of this association as a middle-level node in the
hierarchical lexicon, rather than as an independent lexi-
cal entry, has two features: First, it is often overridden
by a more specific entry, as in &amp;quot;performance characteris-
tics&amp;quot;. Second, it may cooperate with more specific lexical
or conceptual information. For example, the conceptual
role manifester is a general one that, when applied to a
more specific category, can lead to a specific interpretation
without requiring a separate conceptual entry. This would
happen with &amp;quot;laser printer performance characteristics&amp;quot;.
The phrase &amp;quot;branch manager&amp;quot;, like &amp;quot;laser printer
characteristics&amp;quot;, is interpreted using an intermediate en-
try cn-xxx-manager. While FLUSH has the capability, like
PHRAN [Wilensky and Arens, 1980b], to constrain this
category with the semantic constraint that the first noun
must describe a bureaucratic unit, it is at present left to
the semantic interpreter to determine whether the preced-
ing noun can play such an organizational role.
</bodyText>
<subsectionHeader confidence="0.577208">
Example 2:
</subsectionHeader>
<bodyText confidence="0.946732">
Cancel the transmission to the printer.
In this example, the lexical access mechanism must
determine that &amp;quot;to the printer&amp;quot; invoked the mod-rel-xxx-
to linguistic relation, which can be attached either to the
verb &amp;quot;cancel&amp;quot; or the nominal &amp;quot;transmission&amp;quot;. The seman-
tic interpreter then finds the following association:
(ref transfer-event &lt;-&gt; mod-rel-xxx-to
190
</bodyText>
<equation confidence="0.67921">
(destination &lt;-&gt; m_mod-rel-xxx-to))
</equation>
<bodyText confidence="0.999987222222222">
The REF association above indicates that the object
of the preposition &amp;quot;to&amp;quot; is related to the destination role of
some generalized transfer event. Since &amp;quot;cancel&amp;quot; describes
no such event, but &amp;quot;transmission&amp;quot; does, TRUMP correctly
interprets &amp;quot;printer&amp;quot; as being the destination of the trans-
mission. This allows the semantic interpreter to handle
this example much in the same way as it would handle
&amp;quot;Transmit the job to the printer&amp;quot;, because the mod-rel re-
lation class includes both postnominal modifiers and ad-
verbial prepositional phrases. As in the previous example,
the semantic interpreter can make use of the interaction
between this general interpretation rule and more specific
knowledge; for example, &amp;quot;the sale of the the book to Mar?
invokes the same mod-rel-xxx-to relation, but the role of
Mary is determined to be customer because that role is
the conceptual specialization of the destination of a trans-
fer. The process of correctly determining a conceptual role
using linguistic relations is described in [Jacobs, 1987].
</bodyText>
<sectionHeader confidence="0.856029" genericHeader="method">
Example 3:
</sectionHeader>
<subsectionHeader confidence="0.717648">
How many arguments does the command take?
</subsectionHeader>
<bodyText confidence="0.999921905660378">
There are two major differences between this example
and the previous two: First, the lexicon is driven by in-
formation passed from TRUMP&apos;S semantic interpreter, not
only from the parser. In the previous example, the parser
recognizes a potential relationship between a verb or nom-
inal and a prepositional phrase. In this case, the semantic
interpreter must determine if the conceptual relationship
between the concept of taking and the term &amp;quot;arguments&amp;quot;
invokes any special lexical knowledge. Second, the inter-
pretation of &amp;quot;take arguments&amp;quot; is not a specialization of an
abstract concept such as transfer-event, but rather is a re-
sult of a metaphorical view mapping from this concept to
the concept of command-execution.
The interpretation of this sentence thus proceeds as
follows: At the completion of the syntactic parse, the se-
mantic interpreter produces an instantiation of the con-
cept taking with the object arguments. The lexical access
system of FLUSH, using the same discrimination process
that determines a specialized linguistic relation, identifies
lcr-transfer-arguments as a linguistic/conceptual relation
invoked by the concept of a transfer with the lexical term
&amp;quot;argument&amp;quot; attached to the conceptual object role. The
same linguistic/conceptual relation is invoked by &amp;quot;giving
arguments&amp;quot; or &amp;quot;getting arguments&amp;quot;. The semantic inter-
preter continues by determining the metaphorical map-
ping between the transfer-event concept and the command-
execution concept, a mapping that derives from the same
conceptual relationships as other similar metaphors such
as &amp;quot;The recipe takes three cups of sugar.&amp;quot; In this way
the amount of specialized information used for &amp;quot;take ar-
guments&amp;quot; is kept to a minimum; effectively, FLUSH in this
case is merely recognizing a linguistic/conceptual trigger
for a general metaphor.
This section has described the application of the
FLUSH lexicon to the process of semantic interpretation in
the TRUMP system. The examples illustrate some charac-
teristics of the flexible lexicon design that differ from other
phrasal systems: (1) There are a broad range of categories
to which specialized information may be associated. The
treatment of &amp;quot;branch manager&amp;quot; and &amp;quot;transmission to&amp;quot; il-
lustrates the use of compound lexical knowledge at a more
abstract level than other programs such as PHRAN. (2)
The hierarchical lexicon reduces the number of phrasal en-
tries that would be required in a more rigid system. Ex-
pressions such as &amp;quot;take arguments&amp;quot; and &amp;quot;get arguments&amp;quot;
share a common entry. (3) The quantity of information
in each phrasal entry is minimized. Linguistic constraints
are often inherited from general categories, and the amount
of semantic information required for a specialized entry is
controlled by the method of determining an appropriate
conceptual role. The &amp;quot;take arguments&amp;quot; expression thus
does not require explicit representation of the relationships
between linguistic and conceptual roles.
</bodyText>
<sectionHeader confidence="0.862741" genericHeader="conclusions">
IV. Conclusion
</sectionHeader>
<bodyText confidence="0.99997875">
FLUSH is a flexible lexicon designed to represent linguistic
constructs for natural language processing in an extensi-
ble manner. The hierarchical organization of FLUSH, along
with the provision for a number of types of phrasal con-
structs, makes it easy to use knowledge at various levels
in the lexical hierarchy. This design has the advantage
of handling specialized linguistic constructs without being
too rigid to deal with the range of forms in which these
constructs may appear, and facilitates the addition of new
constructs to the lexicon. FLUSH permits the correct se-
mantic interpretation of a broad range of expressions with-
out excessive knowledge at the level of specific phrases.
</bodyText>
<sectionHeader confidence="0.999242" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998111271428571">
[Becker, 1975] J. Becker. The phrasal lexicon. In Theo-
retical Issues in Natural Language Processing, Cam-
bridge, Massachusetts, 1975.
[Besemer, 1986] D. Besemer. FLUSH: Beyond the Phrasal
Lexicon. Technical Report 086CRD181, General Elec-
tric Corporate Research and Development, 1986.
[Bobrow and Winograd, 1977] D. Bobrow and T. Wino-
grad. An overview of KRL, a knowledge representa-
tion language. Cognitive Science, 1(1), 1977.
[Brachman and Schmolze, 1985] R. Brachman and J.
Schmolze. An overview of the KL-ONE knowledge
representation system. Cognitive Science, 9(2), 1985.
[Dyer and Zernik, 1986] M. Dyer and U. Zernik. Encod-
ing and acquiring meanings for figurative phrases. In
Proceedings of the 24th Annual Meeting of the Associ-
ation for Computational Linguistics, New York, 1986.
191
[Halliday, 1978] M. A. K. Halliday. Language as Social
Semiotic. University Park Press, Baltimore, Mary-
land, 1978.
[Jacobs, 1985a] P. Jacobs. A Knowledge-Based Approach
to Language Production. PhD thesis, University of
California, Berkeley, 1985. Computer Science Divi-
sion Report UCB/CSD86/254.
[Jacobs, 1985b] P. Jacobs. PHR,ED: a generator for nat-
ural language interfaces. Computational Linguistics,
11(4), 1985.
[Jacobs, 1986a] P. Jacobs. Knowledge structures for nat-
ural language generation. In Proceedings of the
Eleventh International Conference on Computational
Linguistics, Bonn, Germany, 1986.
[Jacobs, 1986b] P. Jacobs. Language analysis in not-so-
limited domains. In Proceedings of the Fall Joint
Computer Conference, Dallas, Texas, 1986.
[Jacobs, 1987] P. Jacobs. A knowledge framework for nat-
ural language analysis. In Proceedings of the Tenth
International Joint Conference on Artificial Intelli-
gence, Milan, Italy, 1987.
[Jacobs and Rau, 1984] P. Jacobs and L. Rau. Ace: asso-
ciating language with meaning. In Proceedings of the
Sixth European Conference on Artificial Intelligence,
Pisa, Italy, 1984.
[Lockwood, 1972] D. Lockwood. Introduction to Strat-
ificational Linguistics. Harcourt, Brace, and Jo-
vanovich, New York, 1972.
[Sondheimer et al., 1984] N. Sondheimer, R. Weischedel,
and R. Bobrow. Semantic interpretation using KL-
ONE. In Proceedings of the Tenth International
Conference on Computational Linguistics, Palo Alto,
1984.
[Steinacker and Buchberger, 1983] I. Steinacker and E.
Buchberger. Relating syntax and semantics: the
syntactico-semantic lexicon of the system VIE-LANG.
In Proceedings of the First European Meeting of the
ACL, Pisa, Italy, 1983.
[Wilensky, 1986] R. Wilensky. Knowledge representation -
a critique and a proposal. In J. Kolodner and C. Ries-
beck, editors, Experience, Memory, and Reasoning,
Lawrence Erlbaum Associates, Hillsdale, New Jersey,
1986.
[Wilensky and Arens, 1980a] R. Wilensky and Y. Arens.
PHRAN—A Knowledge-based Approach to Natural
Language Analysis. Electronics Research Laboratory
Memorandum UCB/ERL M80/34, University of Cal-
ifornia, Berkeley, 1980.
[Wilensky and Arens, 1980b] R. Wilensky and Y. Arens.
PHRAN—a knowledge-based natural language under-
stander. In Proceedings of the 18th Annual Meet-
ing of the Association for Computational Linguistics,
Philadelphia, 1980.
</reference>
<page confidence="0.998176">
192
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.945113">
<title confidence="0.999968">FLUSH: A Flexible Lexicon Design</title>
<author confidence="0.999996">David J Besemer</author>
<author confidence="0.999996">Paul S Jacobs</author>
<affiliation confidence="0.988914">Artificial Intelligence Branch GE Corporate Research and Development</affiliation>
<address confidence="0.993981">Schenectady, NY 12301 USA</address>
<abstract confidence="0.9968825">Approaches to natural language processing that use a phrasal lexicon have the advantage of easily handling linguistic constructions that might otherwise be extragrammatical. However, current phrasal lexicons are often too rigid: their phrasal entries fail to cover the more flexible constructions. FLUSH, for Flexible Lexicon Utilizing Specialized and Hierarchical knowledge, is a knowledge-based lexicon design that allows broad phrasal coverage.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Becker</author>
</authors>
<title>The phrasal lexicon.</title>
<date>1975</date>
<booktitle>In Theoretical Issues in Natural Language Processing,</booktitle>
<location>Cambridge, Massachusetts,</location>
<marker>[Becker, 1975]</marker>
<rawString>J. Becker. The phrasal lexicon. In Theoretical Issues in Natural Language Processing, Cambridge, Massachusetts, 1975.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Besemer</author>
</authors>
<title>FLUSH: Beyond the Phrasal Lexicon.</title>
<date>1986</date>
<booktitle>General Electric Corporate Research and Development,</booktitle>
<tech>Technical Report 086CRD181,</tech>
<marker>[Besemer, 1986]</marker>
<rawString>D. Besemer. FLUSH: Beyond the Phrasal Lexicon. Technical Report 086CRD181, General Electric Corporate Research and Development, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Bobrow</author>
<author>T Winograd</author>
</authors>
<title>An overview of KRL, a knowledge representation language.</title>
<date>1977</date>
<journal>Cognitive Science,</journal>
<volume>1</volume>
<issue>1</issue>
<marker>[Bobrow and Winograd, 1977]</marker>
<rawString>D. Bobrow and T. Winograd. An overview of KRL, a knowledge representation language. Cognitive Science, 1(1), 1977.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Brachman</author>
<author>J Schmolze</author>
</authors>
<title>An overview of the KL-ONE knowledge representation system.</title>
<date>1985</date>
<journal>Cognitive Science,</journal>
<volume>9</volume>
<issue>2</issue>
<marker>[Brachman and Schmolze, 1985]</marker>
<rawString>R. Brachman and J. Schmolze. An overview of the KL-ONE knowledge representation system. Cognitive Science, 9(2), 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Dyer</author>
<author>U Zernik</author>
</authors>
<title>Encoding and acquiring meanings for figurative phrases.</title>
<date>1986</date>
<booktitle>In Proceedings of the 24th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>New York,</location>
<marker>[Dyer and Zernik, 1986]</marker>
<rawString>M. Dyer and U. Zernik. Encoding and acquiring meanings for figurative phrases. In Proceedings of the 24th Annual Meeting of the Association for Computational Linguistics, New York, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M A K Halliday</author>
</authors>
<title>Language as Social Semiotic.</title>
<date>1978</date>
<publisher>University Park Press,</publisher>
<location>Baltimore, Maryland,</location>
<marker>[Halliday, 1978]</marker>
<rawString>M. A. K. Halliday. Language as Social Semiotic. University Park Press, Baltimore, Maryland, 1978.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Jacobs</author>
</authors>
<title>A Knowledge-Based Approach to Language Production.</title>
<date>1985</date>
<booktitle>Computer Science Division Report UCB/CSD86/254.</booktitle>
<tech>PhD thesis,</tech>
<institution>University of California, Berkeley,</institution>
<marker>[Jacobs, 1985a]</marker>
<rawString>P. Jacobs. A Knowledge-Based Approach to Language Production. PhD thesis, University of California, Berkeley, 1985. Computer Science Division Report UCB/CSD86/254.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Jacobs</author>
</authors>
<title>PHR,ED: a generator for natural language interfaces.</title>
<date>1985</date>
<journal>Computational Linguistics,</journal>
<volume>11</volume>
<issue>4</issue>
<marker>[Jacobs, 1985b]</marker>
<rawString>P. Jacobs. PHR,ED: a generator for natural language interfaces. Computational Linguistics, 11(4), 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Jacobs</author>
</authors>
<title>Knowledge structures for natural language generation.</title>
<date>1986</date>
<booktitle>In Proceedings of the Eleventh International Conference on Computational Linguistics,</booktitle>
<location>Bonn, Germany,</location>
<marker>[Jacobs, 1986a]</marker>
<rawString>P. Jacobs. Knowledge structures for natural language generation. In Proceedings of the Eleventh International Conference on Computational Linguistics, Bonn, Germany, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Jacobs</author>
</authors>
<title>Language analysis in not-solimited domains.</title>
<date>1986</date>
<booktitle>In Proceedings of the Fall Joint Computer Conference,</booktitle>
<location>Dallas, Texas,</location>
<marker>[Jacobs, 1986b]</marker>
<rawString>P. Jacobs. Language analysis in not-solimited domains. In Proceedings of the Fall Joint Computer Conference, Dallas, Texas, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Jacobs</author>
</authors>
<title>A knowledge framework for natural language analysis.</title>
<date>1987</date>
<booktitle>In Proceedings of the Tenth International Joint Conference on Artificial Intelligence,</booktitle>
<location>Milan, Italy,</location>
<marker>[Jacobs, 1987]</marker>
<rawString>P. Jacobs. A knowledge framework for natural language analysis. In Proceedings of the Tenth International Joint Conference on Artificial Intelligence, Milan, Italy, 1987.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Jacobs</author>
<author>L Rau</author>
</authors>
<title>Ace: associating language with meaning.</title>
<date>1984</date>
<booktitle>In Proceedings of the Sixth European Conference on Artificial Intelligence,</booktitle>
<location>Pisa, Italy,</location>
<marker>[Jacobs and Rau, 1984]</marker>
<rawString>P. Jacobs and L. Rau. Ace: associating language with meaning. In Proceedings of the Sixth European Conference on Artificial Intelligence, Pisa, Italy, 1984.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Lockwood</author>
</authors>
<title>Introduction to Stratificational Linguistics.</title>
<date>1972</date>
<publisher>Harcourt,</publisher>
<location>Brace, and Jovanovich, New York,</location>
<marker>[Lockwood, 1972]</marker>
<rawString>D. Lockwood. Introduction to Stratificational Linguistics. Harcourt, Brace, and Jovanovich, New York, 1972.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Sondheimer</author>
<author>R Weischedel</author>
<author>R Bobrow</author>
</authors>
<title>Semantic interpretation using KLONE.</title>
<date>1984</date>
<booktitle>In Proceedings of the Tenth International Conference on Computational Linguistics,</booktitle>
<location>Palo Alto,</location>
<marker>[Sondheimer et al., 1984]</marker>
<rawString>N. Sondheimer, R. Weischedel, and R. Bobrow. Semantic interpretation using KLONE. In Proceedings of the Tenth International Conference on Computational Linguistics, Palo Alto, 1984.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Steinacker</author>
<author>E Buchberger</author>
</authors>
<title>Relating syntax and semantics: the syntactico-semantic lexicon of the system VIE-LANG.</title>
<date>1983</date>
<booktitle>In Proceedings of the First European Meeting of the ACL,</booktitle>
<location>Pisa, Italy,</location>
<marker>[Steinacker and Buchberger, 1983]</marker>
<rawString>I. Steinacker and E. Buchberger. Relating syntax and semantics: the syntactico-semantic lexicon of the system VIE-LANG. In Proceedings of the First European Meeting of the ACL, Pisa, Italy, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Wilensky</author>
</authors>
<title>Knowledge representation -a critique and a proposal.</title>
<date>1986</date>
<booktitle>Reasoning, Lawrence Erlbaum Associates,</booktitle>
<editor>In J. Kolodner and C. Riesbeck, editors, Experience, Memory, and</editor>
<location>Hillsdale, New Jersey,</location>
<marker>[Wilensky, 1986]</marker>
<rawString>R. Wilensky. Knowledge representation -a critique and a proposal. In J. Kolodner and C. Riesbeck, editors, Experience, Memory, and Reasoning, Lawrence Erlbaum Associates, Hillsdale, New Jersey, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Wilensky</author>
<author>Y Arens</author>
</authors>
<title>PHRAN—A Knowledge-based Approach to Natural Language Analysis.</title>
<date>1980</date>
<booktitle>Electronics Research Laboratory Memorandum UCB/ERL M80/34,</booktitle>
<institution>University of California, Berkeley,</institution>
<marker>[Wilensky and Arens, 1980a]</marker>
<rawString>R. Wilensky and Y. Arens. PHRAN—A Knowledge-based Approach to Natural Language Analysis. Electronics Research Laboratory Memorandum UCB/ERL M80/34, University of California, Berkeley, 1980.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Wilensky</author>
<author>Y Arens</author>
</authors>
<title>PHRAN—a knowledge-based natural language understander.</title>
<date>1980</date>
<booktitle>In Proceedings of the 18th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>Philadelphia,</location>
<marker>[Wilensky and Arens, 1980b]</marker>
<rawString>R. Wilensky and Y. Arens. PHRAN—a knowledge-based natural language understander. In Proceedings of the 18th Annual Meeting of the Association for Computational Linguistics, Philadelphia, 1980.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>