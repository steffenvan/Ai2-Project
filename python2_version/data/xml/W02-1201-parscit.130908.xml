<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000002">
<title confidence="0.985793">
A Study in Urdu Corpus Construction
</title>
<author confidence="0.892272">
Dara Becker
</author>
<affiliation confidence="0.872431">
Graduate Program in Software Engineering
University of St. Thomas
</affiliation>
<address confidence="0.90885">
St. Paul, MN, 55105, U.S.A.
</address>
<email confidence="0.983838">
dmbecker@stthomas.edu
</email>
<author confidence="0.612244">
Kashif Riaz
</author>
<affiliation confidence="0.848432333333333">
Department of Computer Science
University of Minnesota-Twin Cities
Minneapolis, MN, 55455, U.S.A.
</affiliation>
<email confidence="0.992909">
riaz@cs.umn.edu
</email>
<sectionHeader confidence="0.992345" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999937">
We are interested in contributing a small, publicly
available Urdu corpus of written text to the natu-
ral language processing community. The Urdu
text is stored in the Unicode character set, in its
native Arabic script, and marked up according to
the Corpus Encoding Standard (CES) XML Docu-
ment Type Definition (DTD). All the tags and
metadata are in English. To date, the corpus is
made entirely of data from British Broadcasting
Company’s (BBC) Urdu Web site, although we
plan to add data from other Urdu newspapers.
Upon completion, the corpus will consist mostly
of raw Urdu text marked up only to the paragraph
level so it can be used as input for natural lan-
guage processing (NLP) tasks. In addition, it will
be hand-tagged for parts of speech so the data can
be used to train and test NLP tools.
</bodyText>
<sectionHeader confidence="0.962474" genericHeader="introduction">
Introduction
</sectionHeader>
<bodyText confidence="0.999950263157895">
We are interested in contributing a small, publicly
available Urdu corpus of written text to the natu-
ral language processing community. In pursuit of
natural language processing research in Urdu, we
could not find a publicly available Urdu corpus
with which to work, so we had to start our own to
train and test machine learning algorithms.
The language engineering community seems
anxious to move forward fast in research of South
Asian languages, but cannot because corpora of
South Asian languages are not ample. “There is a
dearth of work on Indic languages. The need to
focus on Indic languages was further strengthened
by our major review (with over 80 research cen-
tres world wide responding) of the needs of the
[language engineering] community. Indic lan-
guages are the ones that most researchers want to
work with but cannot because lack of corpus re-
sources” [1].
</bodyText>
<sectionHeader confidence="0.889757" genericHeader="method">
1 Urdu corpus
</sectionHeader>
<bodyText confidence="0.999852771428571">
Our corpus is currently made up of newspaper
articles and columns from the Urdu Internet site
of the British Broadcasting Company (BBC Urdu).
News story data is easy to gather because it is
readily available on the Internet and already in
electronic form, although Web sites in Urdu tend
to be published in graphics (a point we will return
to later).
It is important for the users of corpus data to
know from where the data came. Software trained
on a written text corpus will perform poorly on
spoken data and vice versa.
Something to keep in mind when using this
Urdu data is that vocabulary and the stylistics of
news stories in Urdu are very different than in
everyday speech. For example, in Urdu news sto-
ries, “militants” are described as “people who like
violence”,.ots a;.y a. ; . Such a phrase is hardly
ever used in everyday speech. Headings of news
stories have different stylistics. For example, a
common way to associate a statement to the per-
son who made the statement is to write the state-
ment followed by a colon or dash and then the
person’s name. This trend has been observed in
Urdu news stories published in Pakistan, India,
the UK, and in the United States.
The first version of the Urdu corpus to be pub-
lished will be relatively small (20,000–50,000
words), but we will regularly be adding to the
corpus as time passes. It will publicly available at
http://personal1.stthomas.edu/dmbecker/.
All the Urdu documents will appear in a mini-
mally tagged format (i.e., only paragraph tags)
and, in addition, will be hand-tagged for parts of
speech.
</bodyText>
<sectionHeader confidence="0.982597" genericHeader="method">
2 XML
</sectionHeader>
<bodyText confidence="0.999966970149254">
The natural choice these days for storing a corpus
is in an XML format. An XML format provides
needed standardization so that a user who is un-
familiar with the corpus data, but familiar with a
given XML DTD, can interface with the corpus
fairly efficiently. At its best, software that has
been previously designed to handle a corpus
marked up in a given XML structure can handle a
new corpus marked up in the same structure. This
is advantageous because someone does not have
to comb through the new corpus trying to under-
stand its design in order to redesign the software
that interfaces with the corpus. The designer of a
corpus is always familiar with his/her own design,
so one advantage of using an XML language to
mark up a corpus is to make the corpus readily
available to other researchers.
We chose the Corpus Encoding Standard (CES)
XML DTD to mark up our corpus [2]. The main
enclosing tag in this DTD is &lt;cesCorpus&gt; which
is broken into main parts, &lt;cesHeader&gt; and
&lt;cesDoc&gt;.
The header &lt;cesHeader&gt; contains meta in-
formation about the corpus data such as, date cre-
ated, creator’s name and contact information, de-
scription of the source, categories of the content,
the writing system of the language being stored,
how hyphenation in the source text is handled,
and much more information (Figure 1).
The document tag &lt;cesDoc&gt; is where the ac-
tual text of the language of interest is stored. Each
document is itself marked up with metadata spe-
cific to each document, like topic and source in-
formation for every separate document in the cor-
pus.
The language data inside the &lt;cesDoc&gt; tags
can be marked up simply with a paragraph tag
&lt;p&gt; (Figure 2) or they can be more elaborately
marked up with tags of semantic value (e.g., date,
number, measure, name, term, time, foreign
word) and formatting value (e.g., figure, table, p,
sp, div, caption) (Figure 3). Tags that indicate
formatting features such as ‘caption’ are impor-
tant because they can be used, for example, to
automatically determine the topic of a story.
The actual implementation of tagging Urdu
script at a detailed level presents a display prob-
lem for our XML editor of choice, XML Spy. Upon
looking at Figure 3, which is an excerpt from XML
Spy, one may think that the word order of the
paragraph is out of order. At the display level, the
word order is out of order—it is barely human-
readable, but at the storage level, the text is per-
fectly tagged and will process correctly. In Figure
4, we show, in a human-readable format, the or-
der in which the Urdu text and English tags are
stored. If an XML editor were optimized to display
a right-to-left language with left-to-right tags, this
is how we imagine the text would look. More im-
portantly though, this is the order in which XML
Spy currently stores the Urdu corpus.
We began the corpus building process by stor-
ing Urdu documents at the paragraph level with
no other tags peppering the data. However, we
intend to hand tag the data for parts of speech so
the data can be used to train and test natural lan-
guage processing algorithms.
</bodyText>
<figure confidence="0.953365357142857">
&lt;cesHeader type=&amp;quot;corpus&amp;quot; creator=&amp;quot;Dara Becker&amp;quot; version=&amp;quot;1.0&amp;quot; status=&amp;quot;update&amp;quot;
date.created=&amp;quot;2/2/02&amp;quot; date.updated=&amp;quot;4/17/02&amp;quot;&gt;
&lt;fileDesc&gt;
&lt;titleStmt&gt;&lt;h.title&gt;Urdu Corpus&lt;/h.title&gt;&lt;/titleStmt&gt;
&lt;editionStmt version=&amp;quot;1.0a&amp;quot;/&gt;
&lt;publicationStmt&gt;
&lt;distributor&gt;Dara Becker&lt;/distributor&gt;
&lt;telephone&gt;&lt;/telephone&gt;
&lt;eAddress type=&amp;quot;email&amp;quot;&gt;dmbecker@stthomas.edu&lt;/eAddress&gt;
&lt;eAddress type=&amp;quot;www&amp;quot;&gt;http://personal1.stthomas.edu/DMBECKER/&lt;/eAddress&gt;
&lt;availability status=&amp;quot;free&amp;quot;/&gt;
&lt;/publicationStmt&gt;
&lt;/fileDesc&gt;
&lt;/cesHeader&gt;
</figure>
<figureCaption confidence="0.995212">
Figure 1: An excerpt from the corpus header
</figureCaption>
<figure confidence="0.963029047619048">
(It is not well-formed because we deleted some required tags.)
&lt;cesDoc version=&amp;quot;1.0&amp;quot;&gt;
&lt;cesHeader type=&amp;quot;text&amp;quot; creator=&amp;quot;Dara Becker&amp;quot; version=&amp;quot;1.0&amp;quot; status=&amp;quot;new&amp;quot;
date.created=&amp;quot;2/18/02&amp;quot; date.updated=&amp;quot;&amp;quot; lang=&amp;quot;ur&amp;quot;&gt;
&lt;/cesHeader&gt;
&lt;text&gt;
&lt;body&gt;
&lt;p&gt;
&lt;title&gt;�oS.� �t, 9S �Ir,I ��, ��5 � ~~~&lt;title&gt;
&lt;/p&gt;
&lt;p&gt;
��� ����� � � S ,;%!&amp;quot;j blJ;) Ja? ��s; #$ Esc L%S I&amp; &apos; () z^°f&apos; jl� *&apos;L+ �^-&apos;�s+ ,%&amp;quot;s&apos;_ #5 �.-�1�.. /~ 0 1� #SZj�.I
WLR /+ /-2 #3I� I4. ,�. /�.�+ 56 /!� 7 l 8 3l9. : ;L% /~ &lt;3 Wil&amp; /~l&amp; vw ,i) 7 l =j #&gt;?�S %.1@A&amp;quot;l #� #$
Gl9.)��� (/!� ACDE /AB~ ����� � � ��� � �� �� F~43~ ~~~G3 �!� � =� ����� #� ,%.?�+ �� ~~HI~ %.~@A&amp;quot;~ /� 0 1 � J~%&gt;~~~~~
��� /�&lt;3 KLLA+I )~~~ � � M &amp; � ����� �� ~~N~ ) � =� ~~~3~O /� 0 1 � P~~4. J�QR� �� �&amp; ����� P���I �� &apos;� �!� =�
~~~3~O ~~ K��S�� PA~ ���/� .-, At� �S T � #UE () V~~ W L~ X&gt;��Y �� K~%~ ) � ����� � � ��� � �� /� 0 1 � F��Z� ���.� /�
: �[ ~~A~~ /� ~L~ /%� (� �
&lt;/p&gt;
&lt;/body&gt;
&lt;/text&gt;
&lt;/cesDoc&gt;
</figure>
<figureCaption confidence="0.70087">
Figure 2: An excerpt from a corpus document
</figureCaption>
<figure confidence="0.711881833333333">
(It is not well-formed because we deleted some required tags.)
&lt;text&gt;
&lt;body&gt;
&lt;p&gt;
&lt;title&gt;,-- . _)t? 9S0Ir,I _)-; ��5-,, &lt;/title&gt;
&lt;/p&gt;
</figure>
<equation confidence="0.892916666666667">
&lt;p&gt;,jj) �r&apos;r&apos;, L ~ Lf !&amp;quot;~ 0Ir,l � #$ Sl
�� l&amp; &apos;� () &lt;name&gt; ��� �t?
❑&lt;/name&gt; �. * ,1+&lt;name&gt;� ���+ ,%&amp;quot;�� &lt;/name&gt; #� � -���. /� 0 1 � #���.� � ���� /+ /-2 #3~~
� ~~~4. � . /�.�+ 5 6 /!� 7 � 83~9. : ;�%� /� &lt;3 :LL&amp; /~L&amp; �, � ��I 7 I =j #&gt;?~~ %.~@A&amp;quot;~ #j #$ -B319.
)~~~ (/!~ ACDE /AB~ &lt;name&gt;z,Ir,l&lt;/name&gt; ,� &lt;name&gt;,--� &lt;/name&gt; � FI43 I LK l!� � =j&lt;name&gt;
OIr,l&lt;/name&gt; #� ,%.?r+ 9� OWI %.�@A&amp;quot;l / 1� Jt%&gt;I»� �s&apos; /� &lt;3 KL.LA+l )��S vw M&amp; ~&lt;name&gt;
OIr,I&lt;/name&gt; IS��N� ) S =j &lt;name&gt;OI�3IO&lt;/name&gt; /� 0 1� P��4. J�QR� �� �&amp; � ���� P���I �� &apos;� l!�
=j &lt;name&gt;ZI�3IO&lt;/name&gt; IS Kj,S�� PA� ��� /� ~L~ ��� �� T � #UE ()Vt; W L� X&gt;I-)Y US K�%� ) S
&lt;name&gt;oIr,l&lt;/name&gt; ,�&lt;name&gt; _)h&lt;/name&gt; /~ 0 1h. Fljl &lt;name&gt; �r,�.I&lt;/name&gt; /� : �[ ~~A~~
/~ ~L~ /%� (� ~&lt;/p&gt;
&lt;/body&gt;
&lt;/text&gt;
</equation>
<figureCaption confidence="0.994597">
Figure 3: An illustration of how detailed tagging rearranges the display of the text in XML Spy
</figureCaption>
<figure confidence="0.98427">
*~l+ ~&amp; &lt;/name&gt; ,l, �.�„ &lt;name&gt; () &apos;� �&amp; �%� ��� #$ �� ��� ��� ����� � !&amp;quot;� � � � ����� ���
/!~ 5 6 /�.�+ � . � ~~~4. #3~~ /-2 /+ � ���� #���.� 0 1 � /� � -���. #�&lt;/name
&gt;
JIJ&apos;) &lt;name&gt; /AB� ACDE (/!7 ),,s t9. #$ #� %.~@A&amp;quot;~ #&gt;?�� =�7 l ,Jl vW /~L&amp; ��&amp; &lt;3 /� : ;�%� 8 3~9. 7 �
=� � �!� ~~~G3 F~43~ �� &lt;/name&gt; ,L, `.;,- &lt;name&gt; � &lt;/name&gt;
</figure>
<figureCaption confidence="0.9785495">
Figure 4: A human-readable rendition of what tagged Urdu would look like in an XML editor
optimized to display a right-to-left language with left-to-right tags
</figureCaption>
<bodyText confidence="0.474204">
,%&amp;quot;�� � ���+&lt;name&gt;
</bodyText>
<sectionHeader confidence="0.977966" genericHeader="method">
3 Unicode
</sectionHeader>
<bodyText confidence="0.999909461538462">
Another natural choice for storing data is to use
the Unicode character set. The Unicode character
set is another needed standard that we take ad-
vantage of in order to make our corpus data
readily available to other researchers.
The only reason for choosing to initially store
text from BBC Urdu, and not other news agen-
cies, is that the BBC publishes in the Unicode
character set. Other news sites that publish in
Urdu have gotten in the habit of publishing in
graphics, presumably to avoid the hassles of ar-
ranging compatible fonts and character sets in
the publishing software, systems, and client
browsers. We think too it could be that Urdu
publishers prefer Nastaliq-style font. There are
probably a host of wonderful Nastaliq-style fonts
available that work on legacy character sets, and,
perhaps, publishers prefer to keep using these
fonts.
The choice to publish in graphics though
makes it difficult for data harvesters to snag data
from the Web. If one really wants the data that
are published in graphic form, one has to rekey
the text, scan it using optical character recogni-
tion technology, or contact the publisher for elec-
tronic copies of text, in which case one needs to
be able to handle or convert from the character
set in which the text was originally typed. In a
previous project, we developed an application
that can convert between 120 legacy character
sets and can be customized to convert any other
font or character set, so we should have minimal
obstacles when it comes time to harvest non-
Unicode data.
Storing Urdu data in the Unicode character
set eliminates some problems—however, we
have found other problems related to different
approaches to mapping Unicode-based fonts to
the Arabic subset of Unicode.
Unicode-based fonts seem to have been opti-
mized for Arabic display, not for Urdu, so we
have experienced difficulty displaying various
forms of heh, noon ghunna, and hamza. We
found the best Unicode-based font for properly
displaying Urdu is Urdu Naskh Asiatype, avail-
able from the BBC Urdu Web site, at least among
free fonts.
We compared this font (presumably opti-
mized for Urdu) and Arial Unicode MS (pre-
sumably not optimized for Urdu) and found that
the letter heh and its variations are mapped dif-
ferently in these two Unicode-based fonts
</bodyText>
<tableCaption confidence="0.805668666666667">
(Table 1).
Table 1: How fonts display
variations of the letter heh
</tableCaption>
<table confidence="0.47613825">
Urdu Naskh
Asiatype display
06C1 FBA6 o or FEE9 o
� FEEA 0.
</table>
<equation confidence="0.4311625">
FBA8 4
FBA9 4-
06BE FBAA .&amp; or FEEB .&amp;
� FEEC $
</equation>
<bodyText confidence="0.255542">
0647 not found in corpus FBA6 o or FEE9 o
</bodyText>
<sectionHeader confidence="0.525799" genericHeader="method">
a FEEA a
FEEC $
</sectionHeader>
<bodyText confidence="0.814378947368421">
For this reason, the metadata of the Urdu text
in the corpus will contain the name of the Uni-
Arial Unicode MS
display
FBA8 4
FBA9 4-
FBAA .&amp; or FEEB .&amp;
code-based font in which the text is stored. Any
text processor that uses the data will have to
normalize the usages of heh and its variations. In
order to view the Urdu text properly in its surface
form the font in which the data was harvested
will have to be applied.
Differences in font mappings are not much of
a problem when handling English and other Ro-
man-based orthographies, especially when using
the Unicode character set, so special attention
has to be paid to the different ways fonts display
surface forms of Urdu letters.
</bodyText>
<sectionHeader confidence="0.997482" genericHeader="method">
4 Urdu input method
</sectionHeader>
<bodyText confidence="0.999832185185185">
In order to add an Urdu document to our corpus
that we only have in graphic form or hard copy,
we spent significant time setting up our computer
for Urdu Unicode input in order to be able to
type into the corpus.
Using the Arabic support on our computer,
Microsoft Windows 2000 5.0 Service Pack 2, we
were easily able to install right-to-left script sup-
port. Since Windows 2000 uses the Unicode
character set internally, we did not have to do
anything special to get Unicode support for our
efforts.
Devising a plan for inputting Urdu on the
keyboard was the biggest challenge. We ended
up using Tavultesoft Keyman software to map
our own keyboard—it was very easy to use. Ex-
isting keyboard mappings for Arabic script-based
languages, we found, are generally not phoneti-
cally mapped, meaning we would like Urdu letter
feh to be mapped to the letter f on the keyboard
and so forth. We did find one phonetically
mapped keyboard that we liked for Persian [3],
CRL Phonetic Layout, so we used that mapping
as a basis for developing our own. It is not im-
portant that our keyboard mapping be standard-
ized—it only need work for the one person typ-
ing our text.
</bodyText>
<sectionHeader confidence="0.892091" genericHeader="conclusions">
Conclusion
</sectionHeader>
<bodyText confidence="0.999909583333333">
In this paper, we presented the methodology we
used to build an Urdu corpus. The process of
corpora construction for South Asian languages,
specifically Urdu, involves extra work because
these languages are not written in a Roman-
based script. The use of the Unicode character
set and software that supports it makes building
needed corpora in these languages possible and
relatively easy. Once corpora in these languages
become readily available, natural language proc-
essing work in these languages can move for-
ward.
</bodyText>
<sectionHeader confidence="0.998743" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9996632">
[1] P. Baker and A. McEnery, “Needs of Lan-
guage-Engineering Communities; Corpus
Building and Translation Resources,”
MILLE working paper 7, Lancaster Univer-
sity, 1999.
[2] N. Ide and G. Priest-Dorman, Eds., “Cor-
pus Encoding Standard,” [Online docu-
ment], 2000 March 20, [cited 2002 Feb
28], Available:
http://www.cs.vassar.edu/CES
[3] “Persian Keyboard Layouts,” Computing
Research Laboratory, [Online document],
[cited 2002 May 5], Available:
http://crl.nmsu.edu/~mleisher/keyboards/
persian.html
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.425173">
<title confidence="0.99982">A Study in Urdu Corpus Construction</title>
<author confidence="0.966011">Dara</author>
<affiliation confidence="0.9685905">Graduate Program in Software University of St.</affiliation>
<address confidence="0.999622">St. Paul, MN, 55105,</address>
<email confidence="0.999831">dmbecker@stthomas.edu</email>
<author confidence="0.69809">Kashif</author>
<affiliation confidence="0.9999435">Department of Computer University of Minnesota-Twin</affiliation>
<address confidence="0.999384">Minneapolis, MN, 55455,</address>
<email confidence="0.999886">riaz@cs.umn.edu</email>
<abstract confidence="0.980435333333333">We are interested in contributing a small, publicly available Urdu corpus of written text to the natural language processing community. The Urdu text is stored in the Unicode character set, in its native Arabic script, and marked up according to Corpus Encoding Standard Docu- Type Definition All the tags and metadata are in English. To date, the corpus is made entirely of data from British Broadcasting Urdu Web site, although we plan to add data from other Urdu newspapers. Upon completion, the corpus will consist mostly of raw Urdu text marked up only to the paragraph level so it can be used as input for natural lanprocessing tasks. In addition, it will be hand-tagged for parts of speech so the data can used to train and test</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>P Baker</author>
<author>A McEnery</author>
</authors>
<title>Needs of Language-Engineering Communities; Corpus Building and Translation Resources,” MILLE working paper 7,</title>
<date>1999</date>
<institution>Lancaster University,</institution>
<contexts>
<context position="1984" citStr="[1]" startWordPosition="326" endWordPosition="326">so we had to start our own to train and test machine learning algorithms. The language engineering community seems anxious to move forward fast in research of South Asian languages, but cannot because corpora of South Asian languages are not ample. “There is a dearth of work on Indic languages. The need to focus on Indic languages was further strengthened by our major review (with over 80 research centres world wide responding) of the needs of the [language engineering] community. Indic languages are the ones that most researchers want to work with but cannot because lack of corpus resources” [1]. 1 Urdu corpus Our corpus is currently made up of newspaper articles and columns from the Urdu Internet site of the British Broadcasting Company (BBC Urdu). News story data is easy to gather because it is readily available on the Internet and already in electronic form, although Web sites in Urdu tend to be published in graphics (a point we will return to later). It is important for the users of corpus data to know from where the data came. Software trained on a written text corpus will perform poorly on spoken data and vice versa. Something to keep in mind when using this Urdu data is that v</context>
</contexts>
<marker>[1]</marker>
<rawString>P. Baker and A. McEnery, “Needs of Language-Engineering Communities; Corpus Building and Translation Resources,” MILLE working paper 7, Lancaster University, 1999.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Ide</author>
<author>G Priest-Dorman</author>
</authors>
<title>Eds., “Corpus Encoding Standard,” [Online document],</title>
<date>2000</date>
<note>Available: http://www.cs.vassar.edu/CES</note>
<contexts>
<context position="4446" citStr="[2]" startWordPosition="761" endWordPosition="761">ftware that has been previously designed to handle a corpus marked up in a given XML structure can handle a new corpus marked up in the same structure. This is advantageous because someone does not have to comb through the new corpus trying to understand its design in order to redesign the software that interfaces with the corpus. The designer of a corpus is always familiar with his/her own design, so one advantage of using an XML language to mark up a corpus is to make the corpus readily available to other researchers. We chose the Corpus Encoding Standard (CES) XML DTD to mark up our corpus [2]. The main enclosing tag in this DTD is &lt;cesCorpus&gt; which is broken into main parts, &lt;cesHeader&gt; and &lt;cesDoc&gt;. The header &lt;cesHeader&gt; contains meta information about the corpus data such as, date created, creator’s name and contact information, description of the source, categories of the content, the writing system of the language being stored, how hyphenation in the source text is handled, and much more information (Figure 1). The document tag &lt;cesDoc&gt; is where the actual text of the language of interest is stored. Each document is itself marked up with metadata specific to each document, li</context>
</contexts>
<marker>[2]</marker>
<rawString>N. Ide and G. Priest-Dorman, Eds., “Corpus Encoding Standard,” [Online document], 2000 March 20, [cited 2002 Feb 28], Available: http://www.cs.vassar.edu/CES</rawString>
</citation>
<citation valid="false">
<institution>Persian Keyboard Layouts,” Computing Research Laboratory,</institution>
<note>[Online document],</note>
<contexts>
<context position="13815" citStr="[3]" startWordPosition="2421" endWordPosition="2421">pport. Since Windows 2000 uses the Unicode character set internally, we did not have to do anything special to get Unicode support for our efforts. Devising a plan for inputting Urdu on the keyboard was the biggest challenge. We ended up using Tavultesoft Keyman software to map our own keyboard—it was very easy to use. Existing keyboard mappings for Arabic script-based languages, we found, are generally not phonetically mapped, meaning we would like Urdu letter feh to be mapped to the letter f on the keyboard and so forth. We did find one phonetically mapped keyboard that we liked for Persian [3], CRL Phonetic Layout, so we used that mapping as a basis for developing our own. It is not important that our keyboard mapping be standardized—it only need work for the one person typing our text. Conclusion In this paper, we presented the methodology we used to build an Urdu corpus. The process of corpora construction for South Asian languages, specifically Urdu, involves extra work because these languages are not written in a Romanbased script. The use of the Unicode character set and software that supports it makes building needed corpora in these languages possible and relatively easy. On</context>
</contexts>
<marker>[3]</marker>
<rawString>“Persian Keyboard Layouts,” Computing Research Laboratory, [Online document],</rawString>
</citation>
<citation valid="false">
<note>Available: http://crl.nmsu.edu/~mleisher/keyboards/ persian.html</note>
<marker>[cited 2002 May 5]</marker>
<rawString>, Available: http://crl.nmsu.edu/~mleisher/keyboards/ persian.html</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>