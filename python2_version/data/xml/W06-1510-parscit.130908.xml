<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.986008">
Quantifier Scope in German: An MCTAG Analysis
</title>
<author confidence="0.99887">
Laura Kallmeyer Maribel Romero
</author>
<affiliation confidence="0.857924">
University of Tübingen University of Pennsylvania
Collaborative Research Center 441 Department of Linguistics
</affiliation>
<email confidence="0.998681">
lk@sfs.uni-tuebingen.de romero@ling.upenn.edu
</email>
<sectionHeader confidence="0.995631" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999619454545455">
Relative quantifier scope in German de-
pends, in contrast to English, very much
on word order. The scope possibilities of a
quantifier are determined by its surface po-
sition, its base position and the type of the
quantifier. In this paper we propose a mul-
ticomponent analysis for German quanti-
fiers computing the scope of the quantifier,
in particular its minimal nuclear scope, de-
pending on the syntactic configuration it
occursin.
</bodyText>
<sectionHeader confidence="0.625182" genericHeader="method">
1 Introduction: The data
</sectionHeader>
<listItem confidence="0.9972705">
(1) A man loves every woman.
∃ &gt; ∀, ∀ &gt; ∃
</listItem>
<bodyText confidence="0.91097664">
In English, in sentences with several quantifica-
tional NPs, in principle all scope orders are pos-
sible independent from word order. (1) for exam-
ple has two readings, the ∃ &gt; ∀ reading and the
inverse scope ∀ &gt; ∃ reading. This is different in
German where word order is crucial for scope pos-
sibilities.
(2) a. Viele Männer haben mindestens eine
many mennom have at least one
Frau hofiert.
womanacc flattered.
‘Many men have flattered at least one woman.’
viele &gt; eine, *eine &gt; viele
b. Mindestens eine Frau haben viele
at least one womanacc have many
Männer hofiert.
mennom flattered.
‘Many men have flattered at least one woman.’
viele &gt; eine, eine &gt; viele
In German, for quantifiers in base order, the sur-
face order determines scope.1 (2a) has only the
scope order viele &gt; eine corresponding to sur-
face order, that is, the inverse order eine &gt; viele
is not available. In contrast to this, if the word
order differs from the base order, ambiguities are
possible. (2b) for example displays both scope or-
ders, viele &gt; eine and eine &gt; viele.
In the literature, the following generalizations
have been noticed for German: For two quantifiers
Q1, Q2 with Q1 preceding Q2 in the surface order
of a sentence, the scope order Q1 &gt; Q2 is always
possible. Furthermore, the inverse reading Q2 &gt;
Q1 is possible if
(Q1) Q1 has been moved so that Q2 c-commands
the trace of Q1 ((Frey, 1993)), and
(Q2) Q1 is a weak quantifier (e.g., irgendein
‘some’, viele ‘many’, cardinals) ((Lechner,
1998)).
Evidence for (Q2) –and further evidence for
(Q1)– are the examples in (3)–(4). In (3), the (a)-
example is in base order and thus has only surface
scope, but moving the weak quantifier over the da-
tive quantifier in the (b)-version results in scope
ambiguity. This contrasts with (4). In (4), the (a)-
version with base order has only surface scope, as
before. But now we move the strong quantifier
over the dative quantifier, and this does not yield
ambiguity. That is, even though the dative quan-
tifier c-commands the trace of the moved quanti-
fier both in (3b) and in (4b), only when the moved
</bodyText>
<footnote confidence="0.985653166666667">
1Throughout the paper we assume an unmarked intona-
tion. With a different intonation, other scope orders become
available because of the change in information structure. But
this lies outside the scope of this paper.
The base order depends on the verb; in most cases it is Sub-
ject - (Indirect Object) - Direct Object.
</footnote>
<page confidence="0.98448">
73
</page>
<note confidence="0.5978605">
Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 73–80,
Sydney, July 2006. c�2006 Association for Computational Linguistics
</note>
<bodyText confidence="0.702479">
element is a weak quantifier do we obtain scope
ambiguity.
</bodyText>
<listItem confidence="0.837912">
(3) a.... dass er [fast jedem Verlag]
... that he almost every publisher
[mindestens ein Gedicht] anbot.
</listItem>
<figure confidence="0.736969777777778">
at least one poem proposed_to.
‘... that he proposed some poem to almost every
publisher.’
jedem &gt; ein, *ein &gt; jedem
b.... dass er [mindestens ein Gedicht]1
... that he some poem
[fast jedem Verlag] t1 anbot.
almost every publisher proposed_to.
jedem &gt; ein, ein &gt; jedem
</figure>
<listItem confidence="0.549624333333333">
(4) a.... dass er [mindestens einem Verleger]
... that he at least one publisher
[fast jedes Gedicht] anbot.
</listItem>
<bodyText confidence="0.937225666666667">
almost every poem proposed_to
‘... that he proposed almost every poem to at least
one publisher.’
</bodyText>
<figure confidence="0.6981555">
jedes &gt; einem, *einem &gt; jedes
b.... dass er [fast jedes Gedicht]1
... that he almost every poem
[mindestens einem Verleger] t1
at least one publisher
anbot.
proposed_to.
jedes &gt; einem, *einem &gt; jedes
</figure>
<bodyText confidence="0.937132">
(Kiss, 2000) claims that if two quantifiers have
been moved such that among themselves they re-
main in base order, inverse scope is not possible
between them. Because of this, he argues for a
non-movement-based theory of German quantifier
scope. However, Kiss’ claim is not true as can be
seen with the example (5) from (Frey, 1993):
</bodyText>
<listItem confidence="0.94907275">
(5) a. weil der freundliche Museumsdirektor
because the friendly curatornom
[mindestens einer Frau]1
at least one womandat
</listItem>
<bodyText confidence="0.73657275">
[fast jedes Gemälde]2 gezeigt hat
almost every paintinga,, has shown
‘because the friendly curator has shown almost ev-
ery painting to at least one woman’
Q1 &gt; Q2, *Q2 &gt; Q1
b. weil [mindestens einer Frau]1 [fast jedes
Gemälde]2 der freundliche Museumsdi-
rektor t1 t2 gezeigt hat
</bodyText>
<equation confidence="0.884992">
Q1 &gt; Q2, Q2 &gt; Q1
</equation>
<bodyText confidence="0.999791533333333">
In both cases, (5a) and (5b), the two quanti-
fiers are in base order. According to Kiss there
should be, contrary to fact, no ambiguity in (5b).
The difference between the two is that in (5a) the
quantifiers are in base position while in (5b) both
of them have been scrambled with the result that
Q2 c-commands the trace of Q1. We assume with
(Frey, 1993) that this is why the inverse scope or-
der becomes available.
We therefore stick to the above-mentioned gen-
eralizations (Q1) and (Q2) and try to capture them
in our LTAG analysis. This means that, in order to
capture (Q1), we need a syntactic analysis of Ger-
man NPs that takes into account movement and
base positions.
</bodyText>
<sectionHeader confidence="0.672243" genericHeader="method">
2 English quantifier scope in LTAG
</sectionHeader>
<bodyText confidence="0.99992094117647">
We use the LTAG semantics framework from
(Kallmeyer and Romero, 2004; Kallmeyer and
Romero, 2005). Semantic computation is done on
the derivation tree. Each elementary tree is linked
to a semantic representation (a set of Ty2 formu-
las and scope constraints). Ty2 formulas (Gallin,
1975) are typed A-terms with individuals and situ-
ations as basic types. The scope constraints of the
form x &gt; y specify subordination relations be-
tween Ty2 expressions. In other words, x &gt; y
indicates that y is a component of x.
A semantic representation is equipped with a
semantic feature structure description. Semantic
computation consists of certain feature value iden-
tifications between mother and daughter nodes in
the derivation tree. The feature structure descrip-
tions do not encode the semantic expressions one
is interested in. They only encode their contribu-
tions to functional applications by restricting the
argument slots of certain predicates in the seman-
tic representations: They state which elements are
contributed as possible arguments for other se-
mantic expressions and which arguments need to
be filled. They thereby simulate lambda abstrac-
tion and functional application. A sample feature
for this simulation of functional application is the
feature I that serves to pass the individual con-
tributed by an NP to the predicate taking it as an
argument. Besides this functional application as-
pects, the feature structure descriptions also con-
tain features that determine the scope semantics,
i.e., features specifying boundaries for the scope
of different operators. Sample features for scope
are MINS and MAXS encoding the minimal and
</bodyText>
<page confidence="0.924788">
74
</page>
<equation confidence="0.9995662">
l1 : laugh( 1 ),
2 &gt; 3
np
l2 : every(x, 4 , 5 ),
l3 : person(x),
4 &gt; l3,
6 &gt; 5 , 5 &gt; 7
 rMINS l1
11
 GL MAXS 2
 hB ~P 3 ~i
  S
 &amp;quot;T ~P 3 �#
   VP
B ~P l1 �
  h GL ~I 1 ~i
NP
GL�I x~
 &amp;quot; �#
 �MINS 7  
 
NP GL
MAXS 6

          
</equation>
<bodyText confidence="0.999512">
maximal scope of attaching quantifiers.
Features can be global (feature GLOBAL, here
abbreviated with GL) or they can be linked to spe-
cific node positions (features S, VP, ... ). The latter
are divided into top (T) and bottom (B) features.
The equations of top and bottom features linked
to specific node positions in the elementary trees
are parallel to the syntactic unifications in FTAG
(Vijay-Shanker and Joshi, 1988). The global fea-
tures that are not linked to specific nodes can be
passed from mothers to daughters and vice versa
in the derivation tree.
</bodyText>
<listItem confidence="0.825939">
(6) Everybody laughs.
</listItem>
<bodyText confidence="0.999887235294117">
As a sample derivation let us sketch the anal-
ysis of quantificational NPs in English from
(Kallmeyer, 2005). Fig. 1 shows the LTAG anal-
ysis of (6). More precisely, it shows the deriva-
tion tree with the semantic representations and fea-
ture structure descriptions of laughs and every-
body as node labels. The feature identifications
are depicted by dotted lines. The semantic repre-
sentation of the NP everybody contains the gen-
eralized quantifier every that binds the variable x
and that has a restrictive scope 4 and a nuclear
scope 5. Furthermore, it contains the proposi-
tion person(x) that must be part of the restrictive
scope (constraint 4 ≥ l3). Concerning functional
application, the NP provides the individual vari-
able x in the global feature I as a possible argu-
ment for the verb predicate laugh.
</bodyText>
<figureCaption confidence="0.994444">
Figure 1: LTAG analysis of (6) everybody laughs
</figureCaption>
<bodyText confidence="0.99967475">
Quantificational NPs in English can in princi-
ple scope freely; an analysis of quantifier scope
must guarantee only two things: 1. the proposition
corresponding to the predicate to which a quanti-
fier attaches must be in its nuclear scope, and 2. a
quantifier cannot scope higher than the first finite
clause. (Kallmeyer and Romero, 2005) model this
by defining a scope window delimited by some
maximal scope (global feature MAXS and some
minimal scope (global feature MINS) for a quanti-
fier. In Fig. 1, the nuclear scope 5 of the quantifier
is delimited by the maximal and minimal scope
boundaries provided by the verb the quantifier at-
taches to (constraints 6 ≥ 5, 5 ≥ 7). The feature
identifications in Fig. 1 lead then to the constraints
2 ≥ 5, 5 ≥ l1.
Applying the assignments following from the
feature identifications and building the union of
the semantic representations leads to the under-
specified representation (7):
</bodyText>
<equation confidence="0.865909">
(7)
</equation>
<bodyText confidence="0.939750333333333">
As the only possible disambiguation, we obtain
2 → l2, 4 → l3, 5 → l1 which yields the seman-
tics every(x, person(x), laugh(x)).
</bodyText>
<sectionHeader confidence="0.71262" genericHeader="method">
3 Syntax of German quantificational NPs
</sectionHeader>
<bodyText confidence="0.8830938">
Recall that, according to criterion (Q1), not only
the position of an NP but also -if the NP was
moved- the position of its trace are crucial for the
scope properties. In order to capture this, our anal-
ysis needs to take into account movements (scram-
bling, topicalization, etc.) of NPs including traces
at base positions. We therefore cannot adopt the
analyses proposed by (Rambow, 1994) in V-TAG
where the slot for the NP is generated at the sur-
face position and there is only one initial tree for
NPs, whether moved or not.2
(8) a.... dass jeder/irgendeiner
... that everybody/someone
irgendein Buch/jedes Buch liest
some book/every book reads
</bodyText>
<figure confidence="0.547173">
‘. . . that everybody/someone reads some
book/every book’
SUBJ &gt; DOBJ
b.... dass Dedes Buch]1 irgendeiner t1 liest
... that every book someone reads
DOBJ &gt; SUBJ
</figure>
<footnote confidence="0.329329">
2To avoid misunderstandings, let us emphasize that in
LTAG, there is no movement outside the lexicon. Therefore,
either the NP or the slot of the NP must be localized together
with the corresponding trace inside one elementary structure.
This elementary structure can be a tree or, in MCTAG, a set
of trees.
</footnote>
<equation confidence="0.997829">
l1 : laugh(x),
l2 : every(x, 4, 5), l3 : person(x)
2 ≥ l1,
4 ≥ l3, 2 ≥ 5, 5 ≥ l1
</equation>
<page confidence="0.79464">
75
</page>
<figure confidence="0.73111775">
VP
NP VP
NP V
liest
</figure>
<bodyText confidence="0.98342272">
c.... dass [irgendein Buch]1 jeder t1 liest
... that some book everybody reads
SUBJ &gt; DOBJ, DOBJ &gt; SUBJ
To illustrate our analysis, in this and the follow-
ing section, we restrict ourselves to the sentences
in (8). For the syntax, we adopt a multicompo-
nent analysis for NPs that have been moved con-
sisting of an auxiliary tree for the moved mate-
rial and an initial tree for the trace. Our analysis
can be adopted using V-TAG (Rambow, 1994) or
something in the style of SN-MCTAG (Kallmeyer,
2005). Note that, in order to account for scram-
bling, we need some type of MCTAG anyway, in-
dependent from quantifier scope.
}
The elementary trees for (8) are in Fig. 2. α1
is used for NPs in base position, while the set
{α2, Q} is used for moved NPs. We assume that,
if possible, α1 is used. I.e., starting from the verb,
trees of type α1 are substituted to its left as long
as possible. {α2, Q} sets are used when α1 could
not possibly yield the desired surface word order.
Fig. 3 shows a derivation of a sentence of type (8a)
(with no movement). Fig. 4 shows the derivation
of (8b). ((8c) is similar to (8b).)
</bodyText>
<figure confidence="0.47284">
derivation liest
tree: np1 np2
irgendeiner jedes_Buch
</figure>
<figureCaption confidence="0.998574">
Figure 3: Derivation for (8a)
</figureCaption>
<figure confidence="0.9519336">
NP
irgendeiner
derivation liest
tree: np1 np2 vp1
irgendeiner tjedes_Buch jedes_Buch
</figure>
<figureCaption confidence="0.999905">
Figure 4: Derivation for (8b)
</figureCaption>
<bodyText confidence="0.9999133">
Note that, in the derivation trees, each node rep-
resents a single elementary tree, not a set of el-
ementary trees from the grammar. An MCTAG
derivation tree as defined in (Weir, 1988) with each
node representing a set is available only for tree-
local or set-local MCTAG, not for the MCTAG
variants we need (SN-MCTAG or V-TAG). There-
fore we take the undelying TAG derivation tree
as the derivation structure semantics will be com-
puted on.
</bodyText>
<sectionHeader confidence="0.9344875" genericHeader="method">
4 Semantics of German quantificational
NPs
</sectionHeader>
<bodyText confidence="0.999974347826087">
Because of the generalizations above, the fol-
lowing must be guaranteed: i) Strong quantifiers
scope over the next element in surface order (take
scope where they attach).3 ii) The minimal nu-
clear scope of a weak quantifier is the closest “un-
moved” element following its base position. Con-
sequently, we need different lexical entries for
weak and strong quantifiers.
We characterize the scope possibilities of a
quantifier in terms of its minimal scope. Consider
first the verb tree for liest ’read’ in Fig. 5. In con-
trast to English, MINS is not a global feature since,
depending on the position where the quantifier at-
taches, its minimal scope is different. In the liest-
tree, MINS appears in the feature structure of dif-
ferent nodes, with each MINS value determined in
the following way: the value of MINS at the NP2
address is the label l1 of the verb; the value of
MINS at the NP1 address depends on what is at-
tached at NP2 (see variables 4 and 0, which in
this case will be identified with each other); and
the value of MINS at the top VP address depends
on what is attached at NP1 (5).
</bodyText>
<footnote confidence="0.714614">
3But see section 5, where more complex examples show
that this generalization needs to be refined.
</footnote>
<figure confidence="0.993780888888889">
NP
irgendeiner
NP
jedes Buch
VP
NP VP
NP V
liest
for each NP, e.g., irgendein Buch:
</figure>
<figureCaption confidence="0.840184">
Figure 2: Elementary trees for (8)
</figureCaption>
<figure confidence="0.999170463414634">
α1
NP
irgendein Buch
Q VP
NP VP*
irgendein Buch
α2 NP
E
{
VP
NP VP
NP V
liest
�
�VP
NP VP*
jedes Buch
NP
��� E
}
76
 GL [MAXS 12 ]
 MINS 14 �

B
NEXT 14
NP
 hB �MINS l4�i
 VP,.
 h B �MINS 13 ~i
VPf
ǫ
their trace position (see variable 18).

 



 


</figure>
<figureCaption confidence="0.972551">
Figure 7: Strong quantifiers that have been moved
</figureCaption>
<figure confidence="0.855652774193548">
VP
NP1 VP
VP
NP VP*
NP
NP2 V 
liest 
 GL[MAXS 3 ] h 5~i     
 B �MINS 0 �
 VP1
 &amp;quot;
�MINS
 NP1 T

 NEXT 5     
 0~
T �MINS #

&amp;quot;
  VP2 4]
B [MINS     
  l1
 �MINS 4
 NP2 T �
NEXT 
l1 : read( 1, 2 )
3 &gt; l1
l4 : quant(x, 10 , 11 )
l5 : restriction(x)
10 &gt; l5,
12 &gt; 11 ,11 &gt; 13
</figure>
<figureCaption confidence="0.99106">
Figure 5: Semantics for liest
</figureCaption>
<bodyText confidence="0.986614204081633">
NP
The idea is that, when an NP (part) is attached
at a given address, the label of that NP is the new
MINS to be passed up the verb tree; when a trace
(part) is attached instead, the MINS of the verb ad-
dress is passed up unmodified. This feature pass-
ing is technically achieved by articulating the VP
spine with the feature MINS (much like the use
of the P feature in English for adverbial scope in
Kallmeyer and Romero, 2005), and by adding the
feature NEXT for passing between NP substitution
nodes (since substitution nodes do not have T and
B features that allow feature percolations between
mothers and daughters).
The lexical entries for the three types of quanti-
fiers we must distinguish (non-moved quantifiers,
weak moved quantifiers and strong moved quanti-
fiers) are shown in Fig. 6–8. Quantificational NPs
that have not been moved (Fig. 6) receive their
MINS boundary (variable 9) simply from their at-
tachment position. Weak and strong quantifiers
that have been moved differ in how their own
MINS is determined: Strong quantifiers (see Fig. 7)
get their MINS from the VP node they attach to,
i.e., from their surface position (see variable 13).
In contrast to this, weak quantifiers (see Fig. 8) get
their MINS from the base order position, i.e., from
As sample analyses consider Fig. 9 and Fig. 10
showing the analyses of (8b) and (8c) where the
accusative object quantifier has been moved. (The
features of the internal VP node are omitted since
they are not relevant here.) In the first case, it is a
strong quantifier, in the second case a weak quanti-
fier. For Fig. 9, we obtain the identifications 12 =
l1 = 4 = 8, 5 = l2 = 11 (depicted with dotted
lines). Consequently, the only scope order is wide
scope of jedes Buch: l4 &gt; 10 &gt; l2 &gt; 7 &gt; l1.
In Fig. 10, we obtain 11 = l1 = 4 = 8, 5 = l2
which leads to the scope constraints l2 &gt; 7 &gt; l1
and l4 &gt; 10 &gt; l1. Consequently, we have
an underspecified representation allowing for both
scope orders.
The analysis proposed in this section has
demonstrated that some features –in this case
MINS– are global in some languages (e.g. English)
while being local in other languages (e.g. Ger-
man). We take this as further evidence that the
distinction between the two kinds of features, ad-
vocated in (Kallmeyer and Romero, 2005) is em-
</bodyText>
<figureCaption confidence="0.997971">
Figure 8: Weak quantifiers that have been moved
</figureCaption>
<figure confidence="0.989206692307692">
l6 : quant(x, 15 , 16 )
l7 : restriction(x)
15 &gt; l7,
17 &gt; 16 , 16 &gt; 18
� h ~i~
VP,. B �MINS l6
 GL [MAXS 17 ]
 B IMINS 18
NEXT 18



NP


 
VP
NP VP*
NP
ǫ
l2 : quant(x, 6 , 7 )
l3 : restriction(x)
6 &gt; l3,
8 &gt; 7 , 7 &gt; 9
 GL [[MAXS 8 ]  
 NPB LNEXT l21
</figure>
<figureCaption confidence="0.99917">
Figure 6: Quantifiers in base position
</figureCaption>
<page confidence="0.935963">
77
</page>
<equation confidence="0.926678555555556">
 hB �MINS l4�i
 VPr
 h B �MINS 11 ~i
VPf
l4 : every(x, 9 , 10 )
l5 : book(x)
9 1 l5, 10 1 11
vp np1 np2


&amp;quot; &amp;quot; �MINS 8 �## &amp;quot; &amp;quot; �MINS 12 �##
NP B NP B
NEXT l2 NEXT 12
l1 : read( 1 , 2 )
l2 : some(x, 6, 7 )
l3 : person(x)
6 1 l3, 7 1 8
 hB �MINS 5 ~i
</equation>
<figure confidence="0.682758818181818">
 VP
 &amp;quot;
 �MINS 4
 T
 NP1 NEXT 5

&amp;quot; �MINS l1 �#
NP2 T
NEXT 4

 
</figure>
<figureCaption confidence="0.9980425">
Figure 9: Analysis of dass [jedes Buch]1 irgendeiner t1 liest
Figure 10: Semantic analysis of dass [irgendein Buch]1 jeder t1 liest
</figureCaption>
<equation confidence="0.982606347826087">
� h &amp;quot;
VPr B �MINS l4�i� &amp;quot; �MINS 8 �## &amp;quot; &amp;quot; �MINS 11 �##
NP B NP B
NEXT l2 NEXT 11
l4 : some(x, 9 , 10 )
l5 : book(x)
9 1 l5, 10 1 11
vp np1 np2
l1 : read(1, 2 )
l2 : every(x, 6 , 7 )
l3 : person(x)
6 1 l3, 7 1 8

&amp;quot; �MINS 4 �#
NP1 T
NEXT 5
&amp;quot;NP2 T
hB �MINS 5 ~i
VP
rMINS l1~#
NEXT 4

       
</equation>
<bodyText confidence="0.744423">
pirically justified.
</bodyText>
<subsectionHeader confidence="0.805544">
5 Long-distance scrambling and
quantifier scope
</subsectionHeader>
<bodyText confidence="0.99927625">
So far we have examined cases where local scram-
bling affects quantifier scope order. In this section,
we will demonstrate how our analysis carries over
to long-distance scrambling.
</bodyText>
<listItem confidence="0.5318">
(9) ... dass [irgendein Lied]1 Maria
</listItem>
<bodyText confidence="0.786855714285714">
... that some songa,, Mariano.
[fast jedem]2 [ t1 zu singen]
almost everybodydat to sing
versprochen hat
promised has
‘that Maria has promised almost everybody to sing
some song’
</bodyText>
<equation confidence="0.659121">
Q1 &gt; Q2, Q2 &gt; Q1
</equation>
<bodyText confidence="0.983603777777778">
In (9) both scope orders are possible.
Fig. 11 shows the syntactic analysis for (9). Ac-
cording to the treatment of weak quantifiers pro-
posed above, the minimal nuclear scope of irgen-
dein Lied is determined by the position of the
trace; it is therefore the proposition of singen. As
for fast jedem, its minimal nuclear scope is re-
quired to include the proposition of versprochen
hat. Nothing else is required, and consequently
irgendein can scope over or under fast jedem.
A problematic configuration that can occur with
scrambling concerns cases where two weak quan-
tifiers Q2 and Q3 have been moved with a third
quantifier Q1 preceding them where Q1 is either a
strong quantifier or a weak quantifier in base posi-
tion. Then Q1 has scope over Q2 and Q3 but the
scope order between Q2 and Q3 is unspecified. An
example is (10):
</bodyText>
<page confidence="0.988431">
78
</page>
<figure confidence="0.992213571428571">
VP
NP VP
NP VP
VP* V
versprochen hat
NP
Maria
</figure>
<figureCaption confidence="0.866178">
Figure 11: Derivation for (9)
</figureCaption>
<figure confidence="0.964558714285714">
VP
PRO VP
NP V
zu singen



irgendein Lied
VP
NP VP*
NP
ǫ


 
NP
fast jedem
(10) ... dass [jeder Mitarbeiter]1
... that [every colleague]
[vielen Besuchern]2 [mindestens ein Bild]3
[many visitors]dat [at least one picture]acc
</figure>
<bodyText confidence="0.92343825">
gerne [t2 t3 zu zeigen] bereit war
with pleasure to show willing was
’... that every colleague is happy to show at
least one picture to many visitors.’
</bodyText>
<equation confidence="0.983243">
Q1 &gt; Q2 &gt; Q3, Q1 &gt; Q3 &gt; Q2
</equation>
<bodyText confidence="0.999909433333333">
The syntactic derivation is shown in Fig. 12.
Such examples are problematic for our analysis:
our approach predicts that Q2 and Q3 have the
same minimal scope, namely the zeigen proposi-
tion, and that the minimal scope of Q1 is the quan-
tifier it precedes, namely Q2. But nothing in the
analysis prevents Q3 from having scope over Q1,
contrary to fact.
This example indicates that the generalization
(i) in section 4 -that the minimal scope of a strong
quantifier is the proposition of the next quantifier
in surface order- needs to be refined. More accu-
rately, the minimal scope of a strong quantifier is
the highest proposition following in surface order.
We propose to model this using the feature NEXT
also in VP nodes. Here NEXT stands for the max-
imal scope of all quantifiers following in surface
order. An attaching weak quantifier has to do two
things: 1. equate the current NEXT feature with
the new MINS that provides the minimal scope for
higher strong quantifiers, and 2. state that NEXT
is its own maximal scope. The corresponding re-
vised lexical entry for moved weak quantifiers is
shown in Fig. 13.
Fig. 14 shows the way the minimal scope for
the unmoved quantifier in (10) is computed from
combining the auxiliary trees of the moved weak
quantifiers with bereit. (The adverb is left aside.)
In the tree of a verb and also in the auxiliary trees
of moved strong quantifiers, an additional feature
</bodyText>
<figureCaption confidence="0.988198">
Figure 13: Moved weak quantifiers (revised)
</figureCaption>
<bodyText confidence="0.999787285714286">
NEXT is added, linked to the bottom of VP nodes.
The value of this feature is required to be higher
than the value of the bottom MINS at that position.
Whenever a moved strong quantifier adjoins, noth-
ing happens with this NEXT feature. Moved weak
quantifiers take the NEXT feature as their maximal
scope and pass it as the new MINS. This is how
in Fig. 14, the final MINS at the top of the root
of the leftmost moved weak quantifier contains all
moved quantifiers and is passed to the NP node
as new MINS limit. A (weak or strong) quantifier
substituting into the NP slot takes this new MINS
as its minimal scope. Consequently, it scopes over
both moved weak quantifiers.
</bodyText>
<sectionHeader confidence="0.999486" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.99977675">
It has been shown that, although quantifier scope
is usually read off surface word order in German,
ambiguities can arise from movement of weak
quantifiers. We have developed an MCTAG anal-
ysis using traces. In our approach, the scope pos-
sibilities of a quantifier are characterized in terms
of its minimal scope. In contrast to English, MINS
in German is not global but depends on the po-
</bodyText>
<figure confidence="0.996730365079365">
ǫ
 &amp;quot;B
V P,.

 h T
VPf
MINS 17
NEXT 
~NEXT 17

17 ~i

 



 
VP
NP VP*
NP
&amp;quot; &amp;quot; �MINS 18 �##
NP B
NEXT 18
l6 : quant(x, 15 , 16 )
l7 : restriction(x)
15 1 l7,
17 1 16 , 16 1 18
79



mindestens ein Bild
VP
NP VP*
jeder Mitarbeiter
VP
gerne VP*
NP
NP
E



VP
NP VP
VP* V



VP
NP VP*
vielen Besuchern
bereit war
VP
PRO VP
NP VP
NP V
NP
E



zu zeigen
</figure>
<figureCaption confidence="0.980723">
Figure 12: Derivation for (10)
</figureCaption>
<figure confidence="0.99914796875">
 &amp;quot; �MINS 3~#
 VPr B
 NEXT 4
 &amp;quot; �MINS 5~#
  T
 NP1
NEXT 3
  T [MINS 5] 
   �MINS 6 � 
 VP  
 B
 NEXT 7
~T . . . �
VPf
 &amp;quot;MINS 12 �#
 VPr B
 NEXT 12
 h T ~NEXT 12 ~i
VPf
 &amp;quot;MINS 16
�#
 VPr B
 NEXT 16
 h T ~NEXT 16 ~i
VPf






q2 = many, q3 = at_least_one
</figure>
<figureCaption confidence="0.9530945">
Figure 14: Attaching the moved weak quantifiers
in (10)
</figureCaption>
<bodyText confidence="0.999744833333333">
sition of the quantifier. The minimal scope of
weak and strong quantifiers is determined differ-
ently: The minimal scope of a moved weak quan-
tifier depends on its trace; the minimal scope of a
moved strong quantifier depends on the position of
the moved material.
</bodyText>
<sectionHeader confidence="0.998843" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999803">
For fruitful discussions of the work presented in
this paper, we want to thank Timm Lichte and
Wolfgang Maier. Furthermore, we are grateful to
three anonymous reviewers for helpful comments.
</bodyText>
<sectionHeader confidence="0.999183" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999914540540541">
Tilman Becker, Aravind K. Joshi, and Owen Rambow.
1991. Long-distance scrambling and tree adjoining
grammars. In Proceedings ofACL-Europe.
Werner Frey. 1993. Syntaktische Bedingungen für
die semantische Interpretation: Über Bindung, im-
plizite Argumente und Skopus. studia grammatica.
Akademie Verlag, Berlin.
Daniel Gallin. 1975. Intensional and Higher-Order
Modal Logic with Applications to Montague Seman-
tics. North Holland mathematics studies 19. North-
Holland Publ. Co., Amsterdam.
Laura Kallmeyer and Maribel Romero. 2004. LTAG
Semantics with Semantic Unification. In Proceed-
ings of TAG+7, pages 155–162, Vancouver.
Laura Kallmeyer and Maribel Romero. 2005. Scope
and Situation Binding in LTAG using Semantic Uni-
fication. Submitted to Research on Language and
Computation. 57 pages., December.
Laura Kallmeyer. 2005. Tree-local multicomponent
tree adjoining grammars with shared nodes. Com-
putational Linguistics, 31(2):187–225.
Tibor Kiss. 2000. Configurational and Relational
Scope Determination in German. In Tibor Kiss
and Detmar Meurers, editors, Constraint-Based
Approaches to Germanic Syntax, pages 141–176.
CSLI.
Winfried Lechner. 1998. Two Kinds of Reconstruc-
tion. Studia Linguistica, 52(3):276–310.
Owen Rambow. 1994. Formal and Computational
Aspects of Natural Language Syntax. Ph.D. thesis,
University of Pennsylvania.
K. Vijay-Shanker and Aravind K. Joshi. 1988. Feature
structures based tree adjoining grammar. In Pro-
ceedings of COLING, pages 714–719, Budapest.
David J. Weir. 1988. Characterizing mildly context-
sensitive grammar formalisms. Ph.D. thesis, Uni-
versity of Pennsylvania.
</reference>
<equation confidence="0.92479425">
vp
vp&apos;
l1 : willing( 1 , 2 )
4 &gt; 3 , 7 &gt; 6
l4 : q2(y, 13 , 14 )
l5 : visitor(y)
13 &gt; l5,
16 &gt; 14 , 14 &gt; 15
l2 : q3(x, 9 , 10 )
l3 : picture(x)
9 &gt; l3,
12 &gt; 10 , 10 &gt; 11
</equation>
<page confidence="0.982093">
80
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.670055">
<title confidence="0.999501">Quantifier Scope in German: An MCTAG Analysis</title>
<author confidence="0.999978">Laura Kallmeyer Maribel Romero</author>
<affiliation confidence="0.8738115">University of Tübingen University of Pennsylvania Collaborative Research Center 441 Department of Linguistics</affiliation>
<email confidence="0.992194">lk@sfs.uni-tuebingen.deromero@ling.upenn.edu</email>
<abstract confidence="0.991358583333333">Relative quantifier scope in German depends, in contrast to English, very much on word order. The scope possibilities of a quantifier are determined by its surface position, its base position and the type of the quantifier. In this paper we propose a multicomponent analysis for German quantifiers computing the scope of the quantifier, in particular its minimal nuclear scope, depending on the syntactic configuration it occursin.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Tilman Becker</author>
<author>Aravind K Joshi</author>
<author>Owen Rambow</author>
</authors>
<title>Long-distance scrambling and tree adjoining grammars.</title>
<date>1991</date>
<booktitle>In Proceedings ofACL-Europe.</booktitle>
<marker>Becker, Joshi, Rambow, 1991</marker>
<rawString>Tilman Becker, Aravind K. Joshi, and Owen Rambow. 1991. Long-distance scrambling and tree adjoining grammars. In Proceedings ofACL-Europe.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Werner Frey</author>
</authors>
<title>Syntaktische Bedingungen für die semantische Interpretation: Über Bindung, implizite Argumente und Skopus. studia grammatica.</title>
<date>1993</date>
<publisher>Akademie Verlag,</publisher>
<location>Berlin.</location>
<contexts>
<context position="2117" citStr="Frey, 1993" startWordPosition="358" endWordPosition="359"> viele &gt; eine corresponding to surface order, that is, the inverse order eine &gt; viele is not available. In contrast to this, if the word order differs from the base order, ambiguities are possible. (2b) for example displays both scope orders, viele &gt; eine and eine &gt; viele. In the literature, the following generalizations have been noticed for German: For two quantifiers Q1, Q2 with Q1 preceding Q2 in the surface order of a sentence, the scope order Q1 &gt; Q2 is always possible. Furthermore, the inverse reading Q2 &gt; Q1 is possible if (Q1) Q1 has been moved so that Q2 c-commands the trace of Q1 ((Frey, 1993)), and (Q2) Q1 is a weak quantifier (e.g., irgendein ‘some’, viele ‘many’, cardinals) ((Lechner, 1998)). Evidence for (Q2) –and further evidence for (Q1)– are the examples in (3)–(4). In (3), the (a)- example is in base order and thus has only surface scope, but moving the weak quantifier over the dative quantifier in the (b)-version results in scope ambiguity. This contrasts with (4). In (4), the (a)- version with base order has only surface scope, as before. But now we move the strong quantifier over the dative quantifier, and this does not yield ambiguity. That is, even though the dative qu</context>
<context position="4486" citStr="Frey, 1993" startWordPosition="756" endWordPosition="757">proposed_to ‘... that he proposed almost every poem to at least one publisher.’ jedes &gt; einem, *einem &gt; jedes b.... dass er [fast jedes Gedicht]1 ... that he almost every poem [mindestens einem Verleger] t1 at least one publisher anbot. proposed_to. jedes &gt; einem, *einem &gt; jedes (Kiss, 2000) claims that if two quantifiers have been moved such that among themselves they remain in base order, inverse scope is not possible between them. Because of this, he argues for a non-movement-based theory of German quantifier scope. However, Kiss’ claim is not true as can be seen with the example (5) from (Frey, 1993): (5) a. weil der freundliche Museumsdirektor because the friendly curatornom [mindestens einer Frau]1 at least one womandat [fast jedes Gemälde]2 gezeigt hat almost every paintinga,, has shown ‘because the friendly curator has shown almost every painting to at least one woman’ Q1 &gt; Q2, *Q2 &gt; Q1 b. weil [mindestens einer Frau]1 [fast jedes Gemälde]2 der freundliche Museumsdirektor t1 t2 gezeigt hat Q1 &gt; Q2, Q2 &gt; Q1 In both cases, (5a) and (5b), the two quantifiers are in base order. According to Kiss there should be, contrary to fact, no ambiguity in (5b). The difference between the two is tha</context>
</contexts>
<marker>Frey, 1993</marker>
<rawString>Werner Frey. 1993. Syntaktische Bedingungen für die semantische Interpretation: Über Bindung, implizite Argumente und Skopus. studia grammatica. Akademie Verlag, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Gallin</author>
</authors>
<title>Intensional and Higher-Order Modal Logic with Applications to Montague Semantics. North Holland mathematics studies 19. NorthHolland Publ.</title>
<date>1975</date>
<publisher>Co.,</publisher>
<location>Amsterdam.</location>
<contexts>
<context position="5898" citStr="Gallin, 1975" startWordPosition="999" endWordPosition="1000">rse scope order becomes available. We therefore stick to the above-mentioned generalizations (Q1) and (Q2) and try to capture them in our LTAG analysis. This means that, in order to capture (Q1), we need a syntactic analysis of German NPs that takes into account movement and base positions. 2 English quantifier scope in LTAG We use the LTAG semantics framework from (Kallmeyer and Romero, 2004; Kallmeyer and Romero, 2005). Semantic computation is done on the derivation tree. Each elementary tree is linked to a semantic representation (a set of Ty2 formulas and scope constraints). Ty2 formulas (Gallin, 1975) are typed A-terms with individuals and situations as basic types. The scope constraints of the form x &gt; y specify subordination relations between Ty2 expressions. In other words, x &gt; y indicates that y is a component of x. A semantic representation is equipped with a semantic feature structure description. Semantic computation consists of certain feature value identifications between mother and daughter nodes in the derivation tree. The feature structure descriptions do not encode the semantic expressions one is interested in. They only encode their contributions to functional applications by</context>
</contexts>
<marker>Gallin, 1975</marker>
<rawString>Daniel Gallin. 1975. Intensional and Higher-Order Modal Logic with Applications to Montague Semantics. North Holland mathematics studies 19. NorthHolland Publ. Co., Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Laura Kallmeyer</author>
<author>Maribel Romero</author>
</authors>
<title>LTAG Semantics with Semantic Unification.</title>
<date>2004</date>
<booktitle>In Proceedings of TAG+7,</booktitle>
<pages>155--162</pages>
<location>Vancouver.</location>
<contexts>
<context position="5680" citStr="Kallmeyer and Romero, 2004" startWordPosition="963" endWordPosition="966">ifference between the two is that in (5a) the quantifiers are in base position while in (5b) both of them have been scrambled with the result that Q2 c-commands the trace of Q1. We assume with (Frey, 1993) that this is why the inverse scope order becomes available. We therefore stick to the above-mentioned generalizations (Q1) and (Q2) and try to capture them in our LTAG analysis. This means that, in order to capture (Q1), we need a syntactic analysis of German NPs that takes into account movement and base positions. 2 English quantifier scope in LTAG We use the LTAG semantics framework from (Kallmeyer and Romero, 2004; Kallmeyer and Romero, 2005). Semantic computation is done on the derivation tree. Each elementary tree is linked to a semantic representation (a set of Ty2 formulas and scope constraints). Ty2 formulas (Gallin, 1975) are typed A-terms with individuals and situations as basic types. The scope constraints of the form x &gt; y specify subordination relations between Ty2 expressions. In other words, x &gt; y indicates that y is a component of x. A semantic representation is equipped with a semantic feature structure description. Semantic computation consists of certain feature value identifications be</context>
</contexts>
<marker>Kallmeyer, Romero, 2004</marker>
<rawString>Laura Kallmeyer and Maribel Romero. 2004. LTAG Semantics with Semantic Unification. In Proceedings of TAG+7, pages 155–162, Vancouver.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Laura Kallmeyer</author>
<author>Maribel Romero</author>
</authors>
<title>Scope and Situation Binding in LTAG using Semantic Unification.</title>
<date>2005</date>
<journal>Language and Computation.</journal>
<volume>57</volume>
<pages>pages.,</pages>
<note>Submitted to Research on</note>
<contexts>
<context position="5709" citStr="Kallmeyer and Romero, 2005" startWordPosition="967" endWordPosition="970"> that in (5a) the quantifiers are in base position while in (5b) both of them have been scrambled with the result that Q2 c-commands the trace of Q1. We assume with (Frey, 1993) that this is why the inverse scope order becomes available. We therefore stick to the above-mentioned generalizations (Q1) and (Q2) and try to capture them in our LTAG analysis. This means that, in order to capture (Q1), we need a syntactic analysis of German NPs that takes into account movement and base positions. 2 English quantifier scope in LTAG We use the LTAG semantics framework from (Kallmeyer and Romero, 2004; Kallmeyer and Romero, 2005). Semantic computation is done on the derivation tree. Each elementary tree is linked to a semantic representation (a set of Ty2 formulas and scope constraints). Ty2 formulas (Gallin, 1975) are typed A-terms with individuals and situations as basic types. The scope constraints of the form x &gt; y specify subordination relations between Ty2 expressions. In other words, x &gt; y indicates that y is a component of x. A semantic representation is equipped with a semantic feature structure description. Semantic computation consists of certain feature value identifications between mother and daughter nod</context>
<context position="9278" citStr="Kallmeyer and Romero, 2005" startWordPosition="1598" endWordPosition="1601">he proposition person(x) that must be part of the restrictive scope (constraint 4 ≥ l3). Concerning functional application, the NP provides the individual variable x in the global feature I as a possible argument for the verb predicate laugh. Figure 1: LTAG analysis of (6) everybody laughs Quantificational NPs in English can in principle scope freely; an analysis of quantifier scope must guarantee only two things: 1. the proposition corresponding to the predicate to which a quantifier attaches must be in its nuclear scope, and 2. a quantifier cannot scope higher than the first finite clause. (Kallmeyer and Romero, 2005) model this by defining a scope window delimited by some maximal scope (global feature MAXS and some minimal scope (global feature MINS) for a quantifier. In Fig. 1, the nuclear scope 5 of the quantifier is delimited by the maximal and minimal scope boundaries provided by the verb the quantifier attaches to (constraints 6 ≥ 5, 5 ≥ 7). The feature identifications in Fig. 1 lead then to the constraints 2 ≥ 5, 5 ≥ l1. Applying the assignments following from the feature identifications and building the union of the semantic representations leads to the underspecified representation (7): (7) As the</context>
<context position="15504" citStr="Kallmeyer and Romero, 2005" startWordPosition="2776" endWordPosition="2779">�MINS #  &amp;quot;   VP2 4] B [MINS        l1  �MINS 4  NP2 T � NEXT  l1 : read( 1, 2 ) 3 &gt; l1 l4 : quant(x, 10 , 11 ) l5 : restriction(x) 10 &gt; l5, 12 &gt; 11 ,11 &gt; 13 Figure 5: Semantics for liest NP The idea is that, when an NP (part) is attached at a given address, the label of that NP is the new MINS to be passed up the verb tree; when a trace (part) is attached instead, the MINS of the verb address is passed up unmodified. This feature passing is technically achieved by articulating the VP spine with the feature MINS (much like the use of the P feature in English for adverbial scope in Kallmeyer and Romero, 2005), and by adding the feature NEXT for passing between NP substitution nodes (since substitution nodes do not have T and B features that allow feature percolations between mothers and daughters). The lexical entries for the three types of quantifiers we must distinguish (non-moved quantifiers, weak moved quantifiers and strong moved quantifiers) are shown in Fig. 6–8. Quantificational NPs that have not been moved (Fig. 6) receive their MINS boundary (variable 9) simply from their attachment position. Weak and strong quantifiers that have been moved differ in how their own MINS is determined: Str</context>
<context position="17358" citStr="Kallmeyer and Romero, 2005" startWordPosition="3108" endWordPosition="3111">with dotted lines). Consequently, the only scope order is wide scope of jedes Buch: l4 &gt; 10 &gt; l2 &gt; 7 &gt; l1. In Fig. 10, we obtain 11 = l1 = 4 = 8, 5 = l2 which leads to the scope constraints l2 &gt; 7 &gt; l1 and l4 &gt; 10 &gt; l1. Consequently, we have an underspecified representation allowing for both scope orders. The analysis proposed in this section has demonstrated that some features –in this case MINS– are global in some languages (e.g. English) while being local in other languages (e.g. German). We take this as further evidence that the distinction between the two kinds of features, advocated in (Kallmeyer and Romero, 2005) is emFigure 8: Weak quantifiers that have been moved l6 : quant(x, 15 , 16 ) l7 : restriction(x) 15 &gt; l7, 17 &gt; 16 , 16 &gt; 18 � h ~i~ VP,. B �MINS l6  GL [MAXS 17 ]  B IMINS 18 NEXT 18    NP     VP NP VP* NP ǫ l2 : quant(x, 6 , 7 ) l3 : restriction(x) 6 &gt; l3, 8 &gt; 7 , 7 &gt; 9  GL [[MAXS 8 ]    NPB LNEXT l21 Figure 6: Quantifiers in base position 77  hB �MINS l4�i  VPr  h B �MINS 11 ~i VPf l4 : every(x, 9 , 10 ) l5 : book(x) 9 1 l5, 10 1 11 vp np1 np2   &amp;quot; &amp;quot; �MINS 8 �## &amp;quot; &amp;quot; �MINS 12 �## NP B NP B NEXT l2 </context>
</contexts>
<marker>Kallmeyer, Romero, 2005</marker>
<rawString>Laura Kallmeyer and Maribel Romero. 2005. Scope and Situation Binding in LTAG using Semantic Unification. Submitted to Research on Language and Computation. 57 pages., December.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Laura Kallmeyer</author>
</authors>
<title>Tree-local multicomponent tree adjoining grammars with shared nodes.</title>
<date>2005</date>
<journal>Computational Linguistics,</journal>
<volume>31</volume>
<issue>2</issue>
<contexts>
<context position="8198" citStr="Kallmeyer, 2005" startWordPosition="1419" endWordPosition="1420">LOBAL, here abbreviated with GL) or they can be linked to specific node positions (features S, VP, ... ). The latter are divided into top (T) and bottom (B) features. The equations of top and bottom features linked to specific node positions in the elementary trees are parallel to the syntactic unifications in FTAG (Vijay-Shanker and Joshi, 1988). The global features that are not linked to specific nodes can be passed from mothers to daughters and vice versa in the derivation tree. (6) Everybody laughs. As a sample derivation let us sketch the analysis of quantificational NPs in English from (Kallmeyer, 2005). Fig. 1 shows the LTAG analysis of (6). More precisely, it shows the derivation tree with the semantic representations and feature structure descriptions of laughs and everybody as node labels. The feature identifications are depicted by dotted lines. The semantic representation of the NP everybody contains the generalized quantifier every that binds the variable x and that has a restrictive scope 4 and a nuclear scope 5. Furthermore, it contains the proposition person(x) that must be part of the restrictive scope (constraint 4 ≥ l3). Concerning functional application, the NP provides the ind</context>
<context position="11753" citStr="Kallmeyer, 2005" startWordPosition="2040" endWordPosition="2041">, a set of trees. l1 : laugh(x), l2 : every(x, 4, 5), l3 : person(x) 2 ≥ l1, 4 ≥ l3, 2 ≥ 5, 5 ≥ l1 75 VP NP VP NP V liest c.... dass [irgendein Buch]1 jeder t1 liest ... that some book everybody reads SUBJ &gt; DOBJ, DOBJ &gt; SUBJ To illustrate our analysis, in this and the following section, we restrict ourselves to the sentences in (8). For the syntax, we adopt a multicomponent analysis for NPs that have been moved consisting of an auxiliary tree for the moved material and an initial tree for the trace. Our analysis can be adopted using V-TAG (Rambow, 1994) or something in the style of SN-MCTAG (Kallmeyer, 2005). Note that, in order to account for scrambling, we need some type of MCTAG anyway, independent from quantifier scope. } The elementary trees for (8) are in Fig. 2. α1 is used for NPs in base position, while the set {α2, Q} is used for moved NPs. We assume that, if possible, α1 is used. I.e., starting from the verb, trees of type α1 are substituted to its left as long as possible. {α2, Q} sets are used when α1 could not possibly yield the desired surface word order. Fig. 3 shows a derivation of a sentence of type (8a) (with no movement). Fig. 4 shows the derivation of (8b). ((8c) is similar to</context>
</contexts>
<marker>Kallmeyer, 2005</marker>
<rawString>Laura Kallmeyer. 2005. Tree-local multicomponent tree adjoining grammars with shared nodes. Computational Linguistics, 31(2):187–225.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tibor Kiss</author>
</authors>
<title>Configurational and Relational Scope Determination in German.</title>
<date>2000</date>
<booktitle>In Tibor Kiss and Detmar Meurers, editors, Constraint-Based Approaches to Germanic Syntax,</booktitle>
<pages>141--176</pages>
<publisher>CSLI.</publisher>
<contexts>
<context position="4167" citStr="Kiss, 2000" startWordPosition="701" endWordPosition="702"> publisher.’ jedem &gt; ein, *ein &gt; jedem b.... dass er [mindestens ein Gedicht]1 ... that he some poem [fast jedem Verlag] t1 anbot. almost every publisher proposed_to. jedem &gt; ein, ein &gt; jedem (4) a.... dass er [mindestens einem Verleger] ... that he at least one publisher [fast jedes Gedicht] anbot. almost every poem proposed_to ‘... that he proposed almost every poem to at least one publisher.’ jedes &gt; einem, *einem &gt; jedes b.... dass er [fast jedes Gedicht]1 ... that he almost every poem [mindestens einem Verleger] t1 at least one publisher anbot. proposed_to. jedes &gt; einem, *einem &gt; jedes (Kiss, 2000) claims that if two quantifiers have been moved such that among themselves they remain in base order, inverse scope is not possible between them. Because of this, he argues for a non-movement-based theory of German quantifier scope. However, Kiss’ claim is not true as can be seen with the example (5) from (Frey, 1993): (5) a. weil der freundliche Museumsdirektor because the friendly curatornom [mindestens einer Frau]1 at least one womandat [fast jedes Gemälde]2 gezeigt hat almost every paintinga,, has shown ‘because the friendly curator has shown almost every painting to at least one woman’ Q1</context>
</contexts>
<marker>Kiss, 2000</marker>
<rawString>Tibor Kiss. 2000. Configurational and Relational Scope Determination in German. In Tibor Kiss and Detmar Meurers, editors, Constraint-Based Approaches to Germanic Syntax, pages 141–176. CSLI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Winfried Lechner</author>
</authors>
<title>Two Kinds of Reconstruction.</title>
<date>1998</date>
<journal>Studia Linguistica,</journal>
<volume>52</volume>
<issue>3</issue>
<contexts>
<context position="2219" citStr="Lechner, 1998" startWordPosition="373" endWordPosition="374">ble. In contrast to this, if the word order differs from the base order, ambiguities are possible. (2b) for example displays both scope orders, viele &gt; eine and eine &gt; viele. In the literature, the following generalizations have been noticed for German: For two quantifiers Q1, Q2 with Q1 preceding Q2 in the surface order of a sentence, the scope order Q1 &gt; Q2 is always possible. Furthermore, the inverse reading Q2 &gt; Q1 is possible if (Q1) Q1 has been moved so that Q2 c-commands the trace of Q1 ((Frey, 1993)), and (Q2) Q1 is a weak quantifier (e.g., irgendein ‘some’, viele ‘many’, cardinals) ((Lechner, 1998)). Evidence for (Q2) –and further evidence for (Q1)– are the examples in (3)–(4). In (3), the (a)- example is in base order and thus has only surface scope, but moving the weak quantifier over the dative quantifier in the (b)-version results in scope ambiguity. This contrasts with (4). In (4), the (a)- version with base order has only surface scope, as before. But now we move the strong quantifier over the dative quantifier, and this does not yield ambiguity. That is, even though the dative quantifier c-commands the trace of the moved quantifier both in (3b) and in (4b), only when the moved 1T</context>
</contexts>
<marker>Lechner, 1998</marker>
<rawString>Winfried Lechner. 1998. Two Kinds of Reconstruction. Studia Linguistica, 52(3):276–310.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Owen Rambow</author>
</authors>
<title>Formal and Computational Aspects of Natural Language Syntax.</title>
<date>1994</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="10427" citStr="Rambow, 1994" startWordPosition="1798" endWordPosition="1799">tions leads to the underspecified representation (7): (7) As the only possible disambiguation, we obtain 2 → l2, 4 → l3, 5 → l1 which yields the semantics every(x, person(x), laugh(x)). 3 Syntax of German quantificational NPs Recall that, according to criterion (Q1), not only the position of an NP but also -if the NP was moved- the position of its trace are crucial for the scope properties. In order to capture this, our analysis needs to take into account movements (scrambling, topicalization, etc.) of NPs including traces at base positions. We therefore cannot adopt the analyses proposed by (Rambow, 1994) in V-TAG where the slot for the NP is generated at the surface position and there is only one initial tree for NPs, whether moved or not.2 (8) a.... dass jeder/irgendeiner ... that everybody/someone irgendein Buch/jedes Buch liest some book/every book reads ‘. . . that everybody/someone reads some book/every book’ SUBJ &gt; DOBJ b.... dass Dedes Buch]1 irgendeiner t1 liest ... that every book someone reads DOBJ &gt; SUBJ 2To avoid misunderstandings, let us emphasize that in LTAG, there is no movement outside the lexicon. Therefore, either the NP or the slot of the NP must be localized together with</context>
<context position="11697" citStr="Rambow, 1994" startWordPosition="2031" endWordPosition="2032"> This elementary structure can be a tree or, in MCTAG, a set of trees. l1 : laugh(x), l2 : every(x, 4, 5), l3 : person(x) 2 ≥ l1, 4 ≥ l3, 2 ≥ 5, 5 ≥ l1 75 VP NP VP NP V liest c.... dass [irgendein Buch]1 jeder t1 liest ... that some book everybody reads SUBJ &gt; DOBJ, DOBJ &gt; SUBJ To illustrate our analysis, in this and the following section, we restrict ourselves to the sentences in (8). For the syntax, we adopt a multicomponent analysis for NPs that have been moved consisting of an auxiliary tree for the moved material and an initial tree for the trace. Our analysis can be adopted using V-TAG (Rambow, 1994) or something in the style of SN-MCTAG (Kallmeyer, 2005). Note that, in order to account for scrambling, we need some type of MCTAG anyway, independent from quantifier scope. } The elementary trees for (8) are in Fig. 2. α1 is used for NPs in base position, while the set {α2, Q} is used for moved NPs. We assume that, if possible, α1 is used. I.e., starting from the verb, trees of type α1 are substituted to its left as long as possible. {α2, Q} sets are used when α1 could not possibly yield the desired surface word order. Fig. 3 shows a derivation of a sentence of type (8a) (with no movement). </context>
</contexts>
<marker>Rambow, 1994</marker>
<rawString>Owen Rambow. 1994. Formal and Computational Aspects of Natural Language Syntax. Ph.D. thesis, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>Aravind K Joshi</author>
</authors>
<title>Feature structures based tree adjoining grammar.</title>
<date>1988</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>714--719</pages>
<location>Budapest.</location>
<contexts>
<context position="7930" citStr="Vijay-Shanker and Joshi, 1988" startWordPosition="1371" endWordPosition="1374"> l3 : person(x), 4 &gt; l3, 6 &gt; 5 , 5 &gt; 7  rMINS l1 11  GL MAXS 2  hB ~P 3 ~i   S  &amp;quot;T ~P 3 �#    VP B ~P l1 �   h GL ~I 1 ~i NP GL�I x~  &amp;quot; �#  �MINS 7     NP GL MAXS 6             maximal scope of attaching quantifiers. Features can be global (feature GLOBAL, here abbreviated with GL) or they can be linked to specific node positions (features S, VP, ... ). The latter are divided into top (T) and bottom (B) features. The equations of top and bottom features linked to specific node positions in the elementary trees are parallel to the syntactic unifications in FTAG (Vijay-Shanker and Joshi, 1988). The global features that are not linked to specific nodes can be passed from mothers to daughters and vice versa in the derivation tree. (6) Everybody laughs. As a sample derivation let us sketch the analysis of quantificational NPs in English from (Kallmeyer, 2005). Fig. 1 shows the LTAG analysis of (6). More precisely, it shows the derivation tree with the semantic representations and feature structure descriptions of laughs and everybody as node labels. The feature identifications are depicted by dotted lines. The semantic representation of the NP everybody contains the generalized quanti</context>
</contexts>
<marker>Vijay-Shanker, Joshi, 1988</marker>
<rawString>K. Vijay-Shanker and Aravind K. Joshi. 1988. Feature structures based tree adjoining grammar. In Proceedings of COLING, pages 714–719, Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David J Weir</author>
</authors>
<title>Characterizing mildly contextsensitive grammar formalisms.</title>
<date>1988</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="12742" citStr="Weir, 1988" startWordPosition="2218" endWordPosition="2219">ible. {α2, Q} sets are used when α1 could not possibly yield the desired surface word order. Fig. 3 shows a derivation of a sentence of type (8a) (with no movement). Fig. 4 shows the derivation of (8b). ((8c) is similar to (8b).) derivation liest tree: np1 np2 irgendeiner jedes_Buch Figure 3: Derivation for (8a) NP irgendeiner derivation liest tree: np1 np2 vp1 irgendeiner tjedes_Buch jedes_Buch Figure 4: Derivation for (8b) Note that, in the derivation trees, each node represents a single elementary tree, not a set of elementary trees from the grammar. An MCTAG derivation tree as defined in (Weir, 1988) with each node representing a set is available only for treelocal or set-local MCTAG, not for the MCTAG variants we need (SN-MCTAG or V-TAG). Therefore we take the undelying TAG derivation tree as the derivation structure semantics will be computed on. 4 Semantics of German quantificational NPs Because of the generalizations above, the following must be guaranteed: i) Strong quantifiers scope over the next element in surface order (take scope where they attach).3 ii) The minimal nuclear scope of a weak quantifier is the closest “unmoved” element following its base position. Consequently, we n</context>
</contexts>
<marker>Weir, 1988</marker>
<rawString>David J. Weir. 1988. Characterizing mildly contextsensitive grammar formalisms. Ph.D. thesis, University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>