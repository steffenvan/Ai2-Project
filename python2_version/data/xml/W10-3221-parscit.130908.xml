<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000180">
<title confidence="0.998554">
A Current Status of Thai Categorial Grammars and
Their Applications
</title>
<author confidence="0.926974">
Taneth Ruangrajitpakorn and Thepchai Supnithi
</author>
<affiliation confidence="0.9191985">
Human Language Technology Laboratory
National Electronics and Computer Technology Center
</affiliation>
<email confidence="0.5897175">
{taneth.ruangrajitpakorn,thepchai.supnithi}@nec-
tec.or.th
</email>
<sectionHeader confidence="0.981588" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9997925">
This paper presents a current status of
Thai resources and tools for CG devel-
opment. We also proposed a Thai cat-
egorial dependency grammar (CDG), an
extended version of CG which includes
dependency analysis into CG notation.
Beside, an idea of how to group a word
that has the same functions are presen-
ted to gain a certain type of category per
word. We also discuss about a difficulty
of building treebank and mention a
toolkit for assisting on a Thai CGs tree
building and a tree format representa-
tions. In this paper, we also give a sum-
mary of applications related to Thai
CGs.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999964739130435">
Recently, CG formalism was applied to several
Thai NLP applications such as syntactic inform-
ation for Thai to English RBMT (Ruangrajit-
pakorn et al., 2007), a CG treebank (Ruangrajit-
pakorn et al., 2009), and an automatic CG tag-
ger (Supnithi et al., 2010). CG shows promises
to handle Thai syntax expeditiously since it can
widely control utilisations of function words
which are the main grammatical expression of
Thai.
In the previous research, CG was employed
as a feature for an English to Thai SMT and it
resulted better accuracy in term of BLEU score
for 1.05% (Porkaew and Supnithi, 2009). CG
was also used in a research of translation of
noun phrase from English to Thai using phrase-
based SMT with CG reordering rules, and it re-
turned 75% of better and smoother translation
from human evaluation (Porkaew et al., 2009).
Though CG has a high potential in immediate
constituency analysis for Thai, it sill lacks of a
dependency analysis which is also important in
syntactical parsing. In this paper, we propose a
category dependency grammar which is an up-
graded version of CG to express a dependency
relation alongside an immediate constituency
bracketing. Moreover, some Thai dependency
banks such as NAIST dependency bank
(Satayamas and Kawtrakul, 2004) have been de-
veloped. It is better to be able to interchange
data between a Thai CG treebank and a Thai de-
pendency bank in order to increase an amount
of data since building treebank from scratch has
high cost.
In the point of resources and applications,
Thai CG and CDG still have a few number of
supported tools. Our CG treebank still contains
insufficient data and they are syntactically
simple and do not reflect a natural Thai usage.
To add complex Thai tree, we found that Thai
practical usage such as news domain contains a
number of word and very complex.
An example of natural Thai text from news,
which contains 25 words including nine under-
lined function words, is instanced with transla-
tion in Figure 1.
</bodyText>
<equation confidence="0.819606">
�������|���|���|������|���|��|�����|��� ||���|��|���|
���|��������|���|�������|������ ||���|�������|��� ||���
����|���|������|���|������|����|����
</equation>
<bodyText confidence="0.551143">
lit: The red-shirts have put bunkers around the as-
sembly area and poured oil and worn-out tires.
</bodyText>
<figureCaption confidence="0.990692">
Figure 1. An example of Thai usage in natural
</figureCaption>
<bodyText confidence="0.71885">
language
</bodyText>
<page confidence="0.97293">
161
</page>
<note confidence="0.99527">
Proceedings of the 8th Workshop on Asian Language Resources, pages 161–168,
Beijing, China, 21-22 August 2010. c�2010 Asian Federation for Natural Language Processing
</note>
<bodyText confidence="0.999741109589041">
We parsed the example in Figure 1 with CG
and our parser returned 1,469 trees. The result is
in a large number because many Thai structural
issues in a syntactic level cause ambiguity.
The first issue is many Thai words can have
multiple functions including employing gram-
matical usage and representing a meaning. For
instance, a word “Y&apos;ll” /tee/ can be a noun, a relat-
ive clause marker, a classifier, a preposition, and
an adjective marker. A word “nu” /kon/ can
refer to a person, a classifier of human being
and it can denote an action. A word “&amp;4,3”
/kumlung/ can serve as an auxiliary verb to ex-
press progressive aspect and also refers a mean-
ing as a noun. A function word is a main gram-
matical representation and it hints an analyser to
clarify an overall context structure. Regretfully,
it is difficult for system to instantly indicate the
Thai function words by focusing on the lexical
surface and their surrounding lexicons. This cir-
cumstance is stimulates an over generation of
many improper trees.
The second issue is a problem of Thai verb
utilisations. Thai ordinarily allows to omit either
a subject or an object of a verb. Moreover, a
Thai intransitive verb is occasionally attached
its indirect object without a preposition. Fur-
thermore, Thai adjective allows to perform as a
predicate without a marker. With an allowance
of verb serialisation, these complexify linguists
to design a category into well-crafted category
set for verb. Therefore, many Thai verbs contain
several syntactic categories to serve their many
functions.
The last issues is a lack of an explicit bound-
ary for a word, a phrase and a sentence in Thai.
A Thai word and phrase boundary is implicit
and a space is not significantly signified a
boundary in the context. In addition, most of
modifiers are attached after a core element. This
leads to ambiguity of finding an ending of a
subject with an attached adjective and relative
clause since the verbs in attachment can be seri-
alised and consequently placed with following
main verb phrase (which is likely to be serial-
ised either) without a signified indicator.
With these issues, a parser with only syntactic
information merely returns a large number of all
possible trees. It becomes difficulty and time
consuming for linguists to select the correct one
among them. Moreover, with many lexical ele-
ments, using a statistical parser has a very low
chance to generate a correct tree and a manual
tree construction is also required as a gold
standard. Thus, we recently implemented an as-
sistant toolkit for tree construction and tree rep-
resentation to reduce linguists&apos; work load and
time consumption.
This paper aims to explain the current status
of resource and tool for CG and CDG develop-
ment for Thai language. We also listed open
tools and applications that relate to CGs in this
paper.
The rest of the paper is organised as follows.
Section 2 presents a Thai categorial grammar
and its related formalism. Section 3 explains
status of CGs resources including syntactic dic-
tionary and treebank. Section 4 shows details of
a toolkit which assists linguist to manage and
construct CGs derivation tree and tree represent-
ations. Section 5 provides information of applic-
ations that involve Thai CGs. Lastly, Section 6
concludes this paper and lists future works.
</bodyText>
<sectionHeader confidence="0.935866" genericHeader="method">
2 Thai Categorial Grammars
</sectionHeader>
<subsectionHeader confidence="0.989557">
2.1 Categorial Grammar
</subsectionHeader>
<bodyText confidence="0.999927304347826">
Categorial grammar (Aka. CG or classical
categorial grammar) (Ajdukiewicz, 1935;
Carpenter, 1992; Buszkowski, 1998) is a
formalism in natural language syntax motivated
by the principle of constitutionality and
organised according to the syntactic elements.
The syntactic elements are categorised in terms
of their ability to combine with one another to
form larger constituents as functions or
according to a function-argument relationship.
CG captures the same information by associ-
ating a functional type or category with all
grammatical entities. Each word is assigned
with at least one syntactic category, denoted by
an argument symbol (such as np and num) or a
functional symbol X/Y and XIY that require Y
from the right and the left respectively to form
X.
The basic concept is to find the core of the
combination and replace the grammatical modi-
fier and complement with set of categories
based on the same concept of the rule of frac-
tion cancellation as follow:
</bodyText>
<page confidence="0.989615">
162
</page>
<bodyText confidence="0.996572879310345">
Upon applying to Thai, we have modified ar-
gument set and designed eight arguments shown
in Table 1.
From the last version, two arguments were
additionally designed. “ut” argument was added
to denote utterance that is followed after a word
“ว่ำ”. The word “ว่ำ” has a special function to let
the word after it perform as an exemplified ut-
terance and ignore its appropriate category as it
is signified an example in context. Comparing
to “ws” argument, the word “ว่ำ” is functioned
in a different sense which is used to denote a be-
ginner of subordinate clause.
For “X” category, it is used for punctuation or
symbol which takes the same categories from
the left or right sides and produces the taken
category. For instance, “ๆ” is a marker to denote
after many types of content word. In details, this
symbol signifies plurality while it is after noun
but it intensifies a degree of meaning while it is
placed after adjective.
Upon CG design, we allowed only binary
bracketing of two immediate constituents. To
argu- definition example
ment
category
np a noun phrase ช้ำง (elephant),
ผม (I, me)
num a digit and a spelled-out หนึ่ง (one),
number
2 (two)
spnum a number which is suc- นึง (one),
ceeding to classifier เดียว (one)
pp a prepositional phrase ในรถ (in car),
บนโต๊ะ (on table)
s a sentence ช้ำงกินกล้วย
(an elephant eats
a banana)
ws a specific category for * ว่ำเขำจะมำสำย
Thai which is assigned to
a sentence or a phrase that
begins with Thai word ว่ำ
(that : sub-ordinate clause
marker).
&apos;that he will
come late&apos;
* ว่ำจะมำสำย
&apos;that (he) will
come late&apos;
ut an utterance using to ex- คำำ ว่ำ ดี
emplify a specific word
after a word ว่ำ
the word “good ”&apos;
X an undefined category that เ็
takes the same categories ดก ๆ
from the left or right sides (plural marker)
and produces the taken สะอำด ๆ
category. (intensifier)
</bodyText>
<tableCaption confidence="0.996065">
Table 1. A list of Thai CDG arguments
</tableCaption>
<bodyText confidence="0.9987114">
handle serial construction in Thai including seri-
al verb construction, we permitted the exactly
same categories which are consequent to be
combined. For example, Thai noun phrase
&apos;มติ(np)|คณะรัฐมนตรี(np)&apos; (lit: a consensus of the
government) contains two consequent nouns
without a joint word to form a noun phrase. Un-
fortunately, there still remain limits of syntactic
parsing in CG that can not handle long depend-
ency and word omission in this state.
</bodyText>
<subsectionHeader confidence="0.999">
2.2 Categorial Dependency Grammar
</subsectionHeader>
<bodyText confidence="0.995308666666667">
Categorial dependency grammar (CDG) is an
extension of CG. CDG differs from CG in that a
dependency direction motivated by Collins
(1999) is additionally annotated to each slash
notation in syntactic category. The derivation
rules of CDG are listed as follow:
</bodyText>
<equation confidence="0.99974725">
X/&lt;Y : d1 Y : d2 =&gt; X : h(d1) → h(d2)
X/&gt;Y : d1 Y : d2 =&gt; X : h(d1) ← h(d2)
Y : d1 X\&lt;Y : d2 =&gt; X : h(d1) → h(d2)
Y : d1 X\&gt;Y : d2 =&gt; X : h(d1) ← h(d2)
</equation>
<bodyText confidence="0.999975074074074">
where the notations h(d1) → h(d2) and h(d1) ←
h(d2) mean a dependency linking from the head
of the dependency structure d1 to the head of d2,
and that linking from the head of d2 to the head
of d1, respectively. Throughout this paper, a con-
stituent type of the syntactic category c and the
dependency structure d is represented by c:d.
Let us exemplify a dependency driven deriva-
tion of CDG of sentence &apos;Mary drinks fresh
milk&apos; in Figure 2. In Figure 2(a), each pair of
constituents is combined to form a larger con-
stituent with its head word. Figure 2(b) shows a
dependency structure equivalent to the deriva-
tion in Figure 2(a).
Comparing to PF-CCG (Koller and Kuhl-
mann, 2009), there is different in that their PF-
CCG dependency markers are fixed to the direc-
tion of slashes while CDG dependency markers
are customised based on behaviour of a con-
stituent.
CDG offers an efficient way to represent de-
pendency structures alongside syntactic deriva-
tions. Apart from immediate constituency ana-
lysis, we can also investigate the correspond-
ence between the syntactic derivations and the
dependency structures. It benefits linguists in
details a grammar for a specific language be-
</bodyText>
<page confidence="0.997812">
163
</page>
<figureCaption confidence="0.999768">
Figure 2. Syntactic derivation of ‘Mary drinks fresh milk’ based on CDG
</figureCaption>
<bodyText confidence="0.999937857142857">
cause we can restrain the grammar in lexical
level.
In this paper, our Thai CG was applied to
CDG. For the case of serial construction, we set
the left word as a head of dependency since
Thai modifiers and dependents are ordinarily at-
tached on right side.
</bodyText>
<subsectionHeader confidence="0.993228">
2.3 Categorial Set
</subsectionHeader>
<bodyText confidence="0.999504857142857">
A categorial set is a group of lexicons that ex-
actly contains the same function(s) in terms of
their category amount and all their same syn-
tactic categories. With a specific surface, each
word certainly is in one categorial set. For ex-
ample, suppose that we have following words
and categories:
</bodyText>
<equation confidence="0.9322085">
word category POS
ทัศน์,ขโมย,ล้อ,เกำะ ├ np
ล้อ,เกำะ,ขโมย,กิน,ซื้อ ├ s\np/np
ล้อ,เกำะ,ขวบ ├ np\np/num
</equation>
<bodyText confidence="0.826934">
based on the concept of categori
al set shown in
</bodyText>
<tableCaption confidence="0.999325">
Table 2.
</tableCaption>
<table confidence="0.97168">
index y member Word member
1 np Set- Categor np
2 s\np/np กิน,ซื้อ
3 ขโมย
s\np/np
np
4 s\np/np ล้อ,เกำะ
np\np/num
5 np\np/num ขวบ
sets in total an
</table>
<bodyText confidence="0.574629666666667">
d the maximum amount of cat-
egory member in a categorial set is 22 categor-
ies.
</bodyText>
<table confidence="0.999878206896552">
Lexicon CG CDG Cset no.
สมุด np np 0
เกำะ np,s\np/np,np\n np,s\&lt;np/&gt;np,np\&gt; 15
p/num np/&lt;num
กิน s\np/np,s\np 13
s\&lt;np/&gt;np,s\&lt;np
ถ้ำ s\s/s,s/s/s 43
s\&lt;s/&gt;s,s/&gt;s/&gt;s
พูด 164 3 Categorial Grammars Resources s\&lt;np/&gt;pp,s\&lt;np,s\ 19
s\np/pp,s\np,s\
np/ws
&lt;np/&gt;wsเขียว
To apply categorial grammars to Thai NLP, syn-
tactic dictionary and treebank are a mandatory.
np\np,s\np np\&gt;np,s\&lt;np 3
วิ่ง 3.1 Categorial Grammars Dictionary For using in other work and researches, we col-
s\np s\&lt;np 1
กล้ำหำญ lected all CGs information into one syntactic
dictionary. An example of CGs dictionary is
shown in Table 3. In a summary, our Thai CGs
np\np,s\np np\&gt;np,s\&lt;np 3
นอน s\np s\&lt;np 1 dictionary currently contain 70,193 lexical
entries with 82 categories for both CG and CDG
and 183 categori s\np/np,s\np 13
ขำย s\&lt;np/&gt;np,s\&lt;np
เสื้อ np np 0
ว่ำ s\np/np,s\np/ws s\&lt;np/&gt;np,s\&lt;np/&gt; 136
,np\np/ut ws,np\&gt;np/&gt;ut
เพรำะ s\s/s,s/s/s s\&lt;s/&gt;s,s/&gt;s/&gt;s 43
</table>
<tableCaption confidence="0.999721">
Table 3. An example of Thai CGs dictionary
</tableCaption>
<subsectionHeader confidence="0.982449">
3.2 Thai CDGTreebank
</subsectionHeader>
<bodyText confidence="0.986468117647059">
We can group the given words into five groups
Table 2. An example of categorial set
For current status, we attain 183 categorial
al sets.
Our CG treebank was recently transformed into
dependency-driven derivation tree with CDG.
An example of derivation tree of sentence
|กำร|
ิ
ภูม
noun
verb
classifier
ล่ำ|เสือ|เป็น|กำร|ผจญภัย |&apos;lit: Tiger hunting is an
adventure&apos; comparing between CG and CDG is
illustrated in Figure 3.
Figure 3. An example of a derivation tree in
treebank comparing between CG and CDG
A status of transformed CDG treebank is
30,340 text lines which include 14,744 sen-
tences, 9,651 verb phrases or subject-omitted
sentences and 5,945 noun phrases. However, the
average word amount of this treebank is 3.41
words per tree which is obviously short.
Upon an attempt to increase a number of
trees, we considered that the existing trees are
simple and not signify all utilisations of natural
Thai text. Therefore, news domain of BEST
(Kosawat et al., 2009) corpus was chosen to ful-
fil such issues because of its practical usage.
From our observation, we found that most of
data are ranged from 25 to 68 words and the
longest line contains 415 words which is ex-
tremely long for parser to handle it efficiently.
After a prior experiment, we found that our
GLR parser with CDG information resulted
514.62 tree alternatives in average from the
range of three to fifteen words per sentence
from news domain in BEST. With problems
from ambiguous syntax of Thai, to automatic-
ally select a correct tree is extremely difficult
since several resulted trees are grammatically
correct and semantically sound but they are not
proper for their context. It becomes difficulty
for linguists to select an appropriate one among
them. In order to solve that problem, we imple-
mented a toolkit to assist linguists on construct-
ing treebank with such a long and complicated
sentence. The manual annotated tree will be
used as a gold standard and confidentially apply
for statistical parser development.
</bodyText>
<sectionHeader confidence="0.902814" genericHeader="method">
4 CGs Tree Supported Tool
</sectionHeader>
<bodyText confidence="0.999246384615385">
Building a resource is a laboured work espe-
cially a treebank construction. For Thai lan-
guage which uses several function words to ex-
press grammatical function in context, an imme-
diate constituency analysis and a dependency
analysis become difficult since many word pair
can cause ambiguity and complexity among
them. Additionally, a representation of a deriva-
tion tree in textual format is excessively com-
plex to be analysed or approved. To reduce a
burden of linguists, we developed a toolkit to
help a linguists with graphical user-interface in
manual tree construction.
</bodyText>
<subsectionHeader confidence="0.995848">
4.1 CGs Toolkit
</subsectionHeader>
<bodyText confidence="0.9999188">
The proposed toolkit supports multi-tasks which
are annotating CG tag to a word, bracketing in-
termediate constituents, generating dependency-
driven derivation tree in multiple formats, and
visualising graphical tree.
</bodyText>
<subsubsectionHeader confidence="0.497318">
4.1.1 Category Annotator
</subsubsectionHeader>
<bodyText confidence="0.999956727272727">
Category annotator supports users to select an
appropriate CDG category for each word. The
system takes word-segmented input text. It
starts with checking possible categories with the
given CDG dictionary and lists all of them to
each word. Users only select a correct category
for each. Unless the word is known or the re-
quired category for the word is present, user has
to add a new category for the word and the sys-
tem contiguously updates the dictionary with
the given data for further usage.
</bodyText>
<sectionHeader confidence="0.7009875" genericHeader="method">
4.1.2 Dependency-driven Derivation Tree
Generator
</sectionHeader>
<bodyText confidence="0.9981555">
This system is implemented for manual annotat-
ing tree information and dependency relation to
a text that is difficult for parser to generate tree
such as a text with multiple serial verb construc-
tions, a complex head-dependent relation word
pairs, etc. A captured picture of user-interface
</bodyText>
<figure confidence="0.999777852941177">
s
(np
(np/(s\np)[กำร]
s\np(
(s\np)/np[ล่ำ]
np[เสือ]
)
)
s\np(
(s\np)/np[เป็น]
np(
np/(s\np)[กำร]
s\np[ผจญภัย]
)
)
)
(a) CG derivation tree
s
(np
(np/&gt;(s\&lt;np)[กำร]
s\&lt;np(
(s\&lt;np)/&gt;np[ล่ำ]
np[เสือ]
)
)
s\&lt;np(
(s\&lt;np)/&gt;np[เป็น]
np(
np/&gt;(s\&lt;np)[กำร]
s\&lt;np[ผจญภัย]
)
)
)
(b) CDG derivation tree
</figure>
<page confidence="0.884714">
165
</page>
<figureCaption confidence="0.999709">
Figure 4. A snapshot of dependency-driven derivation tree generator
</figureCaption>
<bodyText confidence="0.999819058823529">
working on immediate constituency and de-
pendency annotation is illustrated in Figure 4.
We provide a user-interface for linguists and
experts to easily annotate brackets covering.
Users begin a process by selecting a pair of
words that are a terminal of leaf node. The sys-
tem apparently shows only categories of the
word that can be possibly combined within the
bracket for selecting. After choosing categories
of those two constituents, the system automatic-
ally generates a result category. Next, users will
continue the process for other constituents until
one top result category is left.
After users finish the bracketing process, de-
pendency relation will be generated from annot-
ated dependency marker within categories
without manual assignment.
</bodyText>
<subsectionHeader confidence="0.938939">
4.1.3 Tree Visualiser
</subsectionHeader>
<bodyText confidence="0.9999868">
The system includes a function to create a
graphical tree from a file in textual formats. It
provides a function to modify a tree by editing a
word spelling and its syntactic category and
shifting a branch of syntactic tree to another.
</bodyText>
<subsectionHeader confidence="0.997371">
4.2 Tree Representation
</subsectionHeader>
<bodyText confidence="0.991350857142857">
The CGs toolkit allows users to export a tree
output in two representations; traditional textual
tree format and XML format.
Throughout all tree format examples, we ex-
emplify a Thai sentence &apos;นักวิชำกำร ตรวจ พบ
ไวรัส โคโรน่ำ&apos; (lit: an expert discovers corona vir-
us.) with the following categories:
</bodyText>
<equation confidence="0.989894">
Word CDG category
ชำกำร (expert)
ไวรัส (virus) ├ np
โคโรน่ำ (corona)
ตรวจ (diagnose) ├ s\&lt;np
พบ (discover) ├ s\&lt;np/&gt;np
</equation>
<subsubsectionHeader confidence="0.574101">
4.2.1 Traditional Textual Tree Format
</subsubsectionHeader>
<bodyText confidence="0.999589857142857">
A traditional textual tree format represents a ter-
minal (w) with its category (c) in form of c[w].
The brackets are enclosed two constituents split
by space with parentheses and the result cat-
egory (cr) is placed before the open parenthesis
in format cr(c[w] c[w]). Figure 5 shows an ex-
ample of a traditional textual tree format.
</bodyText>
<figure confidence="0.464623">
s(np[นักวิชำกำร] s\&lt;np(s\&lt;np[ตรวจ]
s\&lt;np(s\&lt;np(s\&lt;np/&gt;np[พบ] np(np[ไวรัส] np[โคโร
น่ำ])))
</figure>
<figureCaption confidence="0.954515">
Figure 5. An example of a traditional textual
tree format of &apos;นักวิชำกำร ตรวจ พบ ไวรัส โคโรน่ำ&apos;
</figureCaption>
<subsectionHeader confidence="0.581572">
4.2.2 XML Tree Format
</subsectionHeader>
<bodyText confidence="0.998583">
For XML tree format, we design three tag sets,
i.e., word tag, tree tag and input tag. The word
</bodyText>
<figure confidence="0.7489645">
ั
ิ
น
กว
</figure>
<page confidence="0.994609">
166
</page>
<bodyText confidence="0.9999245">
tag bounds a terminal to mark a word. In a start-
tag of word tag, there are two attributes which
are cat to assign a category in a value and text
to assign a given text in a value. For tree tag, it
marks a combination of either word tags or tree
tags to form another result category. It contains
two previous attributes with an additional attrib-
ute, i.e., a head attribute to fill in a notation that
which word has a head-outward relation value
where &apos;0&apos; value indicates head from left constitu-
ent and &apos;1&apos; value indicates head from right con-
stituent. The input tag shows a boundary of all
input and it has attributes to show line number,
raw input text and status of tree building pro-
cess. Figure 6 illustrates an XML tree represent-
ation.
</bodyText>
<sectionHeader confidence="0.98457" genericHeader="method">
5 Thai CGs Related Applications
</sectionHeader>
<bodyText confidence="0.99996125">
Several applications related to Thai CGs or used
Thai CGs as their syntactic information have
been implemented recently. Below is a sum-
mary of their methodology and result.
</bodyText>
<subsectionHeader confidence="0.985801">
5.1 CG AutoTagger for Thai
</subsectionHeader>
<bodyText confidence="0.999986166666667">
To reduce an amount of trees generated from a
parser with all possible categories, an automatic
syntactic category tagger (Supnithi et al., 2010)
was developed to disambiguate unappropriated
combinations of impossible categories. The sys-
tem was developed based on CRF and Statistic-
al Alignment Model based on information the-
ory (SAM) algorithm. The accuracy 89.25% in
word level was acquired. This system also has a
function to predict a syntactic category for an
unknown word and 79.67% of unknown word
are predicted correctly.
</bodyText>
<subsectionHeader confidence="0.976993">
5.2 Chunker
</subsectionHeader>
<bodyText confidence="0.999979428571429">
With a problem of a long sentence in Thai,
chunker was implemented to group a con-
sequent of words to larger unit in order to re-
duce a difficulty on parsing too many lexical
elements. CRD method with syntactic informa-
tion from CG and categorial set was applied in
the system to chunk a text into noun phrase,
verb phrase, prepositional phrase, and adverbial
phrase. Moreover, the system also attempts to
handle a compound word that has a form like
sentence. The result was impressive as it im-
proved 74.17% of accuracy on sentence level
chunking and 58.65% on sentence-form like
compound noun.
</bodyText>
<subsectionHeader confidence="0.972249">
5.3 GLR parser for Thai CG and CDG
</subsectionHeader>
<bodyText confidence="0.99996815">
Our implemented LALR parser (Aho and John-
son, 1974) was improved to GLR parser for
syntactically parse Thai text. This parser was
developed to return all possible trees form input
to show a baseline that covers all syntactic pos-
sibilities. For our GLR parser, a grammar rule is
not manually determined, but it is automatically
produced by any given syntactic notations
aligned with lexicons in a dictionary. Hence,
this GLR parser has a coverage including CG
and CDG formalism parsing. Furthermore, our
GLR parser accepts a sentence, a noun phrase, a
verb phrase and prepositional phrase. However,
the parser does not only return the best first tree,
but also all parsable trees to gather all ambigu-
ous trees since Thai language tends to be am-
biguous because of lacking explicit sentence,
phrase and word boundary. This parser includes
a pre-process to handle named-entities, numer-
ical expression and time expression.
</bodyText>
<figureCaption confidence="0.75974">
Figure 6. An example of XML tree format of &apos;นักวิชำกำร ตรวจ พบ ไวรัส โคโรน่ำ&apos;
</figureCaption>
<page confidence="0.994697">
167
</page>
<sectionHeader confidence="0.99044" genericHeader="conclusions">
6 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.9999905">
In this paper, we update our Thai CG informa-
tion and a status of its resources. We also pro-
pose CDG for Thai, an extended version of CG.
CDG offers an efficient way to represent de-
pendency structures with syntactic derivations.
It benefits linguists in terms of they can restrain
Thai grammar in lexical level. With CDG de-
pendency-driven derivation tree, both bracket-
ing information and dependency relation are an-
notated to every lexical units. In the current
state, we transformed our CG dictionary and CG
treebank into CDG formalism.
With an attempt to increase an amount of our
treebank with a complex text, CDG tree toolkit
was developed for linguists to manual managing
a derivation tree. This toolkit includes a CDG
category tagger tool, dependency-driven deriva-
tion tree generator, and tree visualiser. This
toolkit can generate an output in two formats
which are traditional textual tree and XML tree.
The XML tree format is an option for standard-
ised format or further usage such as applying
tree for ontology.
We also summarised CGs related works and
their accuracy. They included an automatic CG
tagger and a Thai phrase chunker.
In the future, we plan to increase an amount
of CGs derivation trees of complex sentence
and practical language. Moreover, we will im-
plement a system to transform an existing Thai
dependency bank to CDG format to gain more
number of trees. We also plan to include se-
mantic meaning into derivation tree and repres-
ent such trees in an RDF format. In addition,
statistical parser will be implemented based on
the CDG derivation trees.
</bodyText>
<sectionHeader confidence="0.999274" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99985479661017">
Ajdukiewicz Kazimierz. 1935. Die Syntaktische
Konnexitat, Polish Logic.
Aho Alfred, and Johnson Stephen. 1974. LR Parsing,
Proceedings of Computing Surveys, Vol. 6, No. 2.
Bar-Hillel Yehoshua. 1953. A quasi-arithmetical
notation for syntactic description. 29(1): 47-58.
Carpenter Bob. 1992. Categorial Grammars, Lexical
Rules,and the English Predicative, In R. Levine,
ed., Formal Grammar: Theory and Implementa-
tion. OUP.
Collins Micheal. 1999. Head-Driven Statistical Mod-
els for Natural Language Parsing. Ph.D. Thesis,
University of Pennsylvania.
Koller Alexander, and Kuhlmann Marco. 2009. De-
pendency trees and the strong generative capacity
of ccg, Proceedings of the 12th Conference of the
European Chapter of the Association for Compu-
tational Linguistics: 460-468.
Kosawat Krit, Boriboon Monthika, Chootrakool
Patcharika, Chotimongkol Ananlada, Klaithin
Supon, Kongyoung Sarawoot, Kriengket Kanya-
nut, Phaholphinyo Sitthaa, Purodakananda
Sumonmas, Thanakulwarapas Tipraporn, and
Wutiwiwatchai Chai. 2009. BEST 2009: Thai
Word Segmentation Software Contest. The 8th In-
ternational Symposium on Natural Language Pro-
cessing: 83-88.
Porkaew Peerachet, Ruangrajitpakorn Taneth, Trak-
ultaweekoon Kanokorn, and Supnithi Thepchai..
2009. Translation of Noun Phrase from English to
Thai using Phrase-based SMT with CCG Reorder-
ing Rules, Proceedings of the 11th conference of
the Pacific Association for Computational Lin-
guistics (PACLING).
Porkaew Peerachet, and Supnithi Thepchai. 2009.
Factored Translation Model in English-to-Thai
Translation, Proceedings of the 8th International
Symposium on Natural Language Processing.
Ruangrajitpakorn Taneth, Na Chai Wasan , Boonk-
wan Prachya, Boriboon Monthika, Supnithi Thep-
chai. 2007. The Design of Lexical Information for
Thai to English MT, Proceedings of the 7th Inter-
national Symposium on Natural Language Pro-
cessing.
Ruangrajitpakorn Taneth, Trakultaweekoon Kan-
okorn, and Supnithi Thepchai. 2009. A Syntactic
Resource for Thai: CG Treebank, Proceedings of
the 7th Workshop on Asian Language Resources,
(ACL-IJCNLP): 96–102.
Satayamas Vee, and Kawtrakul Asanee . 2004. Wide-
Coverage Grammar Extraction from Thai Tree-
bank. Proceedings of Papillon 2004 Workshops on
Multilingual Lexical Databases, Grenoble, France.
Supnithi Thepchai, Ruangrajitpakorn Taneth, Trak-
ultaweekoon Kanokorn, and Porkaew Peerachet.
2010. AutoTagTCG : A Framework for Automatic
Thai CG Tagging, Proceedings of the 7th interna-
tional conference on Language Resources and
Evaluation (LREC).
</reference>
<page confidence="0.997287">
168
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.351910">
<title confidence="0.9979245">A Current Status of Thai Categorial Grammars Their Applications</title>
<author confidence="0.640938">Taneth Ruangrajitpakorn</author>
<author confidence="0.640938">Thepchai</author>
<affiliation confidence="0.8102535">Human Language Technology National Electronics and Computer Technology Center</affiliation>
<email confidence="0.8543355">taneth.ruangrajitpakorn@nectec.or.th</email>
<email confidence="0.8543355">thepchai.supnithi@nectec.or.th</email>
<abstract confidence="0.988692176470588">This paper presents a current status of Thai resources and tools for CG development. We also proposed a Thai categorial dependency grammar (CDG), an extended version of CG which includes dependency analysis into CG notation. Beside, an idea of how to group a word that has the same functions are presented to gain a certain type of category per word. We also discuss about a difficulty of building treebank and mention a toolkit for assisting on a Thai CGs tree building and a tree format representations. In this paper, we also give a summary of applications related to Thai CGs.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Ajdukiewicz Kazimierz</author>
</authors>
<title>Die Syntaktische Konnexitat, Polish Logic.</title>
<date>1935</date>
<marker>Kazimierz, 1935</marker>
<rawString>Ajdukiewicz Kazimierz. 1935. Die Syntaktische Konnexitat, Polish Logic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aho Alfred</author>
<author>Johnson Stephen</author>
</authors>
<date>1974</date>
<journal>LR Parsing, Proceedings of Computing Surveys,</journal>
<volume>6</volume>
<marker>Alfred, Stephen, 1974</marker>
<rawString>Aho Alfred, and Johnson Stephen. 1974. LR Parsing, Proceedings of Computing Surveys, Vol. 6, No. 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bar-Hillel Yehoshua</author>
</authors>
<title>A quasi-arithmetical notation for syntactic description.</title>
<date>1953</date>
<volume>29</volume>
<issue>1</issue>
<pages>47--58</pages>
<marker>Yehoshua, 1953</marker>
<rawString>Bar-Hillel Yehoshua. 1953. A quasi-arithmetical notation for syntactic description. 29(1): 47-58.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carpenter Bob</author>
</authors>
<title>Categorial Grammars, Lexical Rules,and the English Predicative, In</title>
<date>1992</date>
<booktitle>Formal Grammar: Theory and Implementation. OUP.</booktitle>
<editor>R. Levine, ed.,</editor>
<marker>Bob, 1992</marker>
<rawString>Carpenter Bob. 1992. Categorial Grammars, Lexical Rules,and the English Predicative, In R. Levine, ed., Formal Grammar: Theory and Implementation. OUP.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Collins Micheal</author>
</authors>
<title>Head-Driven Statistical Models for Natural Language Parsing.</title>
<date>1999</date>
<tech>Ph.D. Thesis,</tech>
<institution>University of Pennsylvania.</institution>
<marker>Micheal, 1999</marker>
<rawString>Collins Micheal. 1999. Head-Driven Statistical Models for Natural Language Parsing. Ph.D. Thesis, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Koller Alexander</author>
<author>Kuhlmann Marco</author>
</authors>
<title>Dependency trees and the strong generative capacity of ccg,</title>
<date>2009</date>
<booktitle>Proceedings of the 12th Conference of the European Chapter of the Association for Computational Linguistics:</booktitle>
<pages>460--468</pages>
<marker>Alexander, Marco, 2009</marker>
<rawString>Koller Alexander, and Kuhlmann Marco. 2009. Dependency trees and the strong generative capacity of ccg, Proceedings of the 12th Conference of the European Chapter of the Association for Computational Linguistics: 460-468.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kosawat Krit</author>
</authors>
<title>Boriboon Monthika, Chootrakool Patcharika, Chotimongkol Ananlada, Klaithin Supon, Kongyoung Sarawoot, Kriengket Kanyanut, Phaholphinyo Sitthaa, Purodakananda Sumonmas, Thanakulwarapas Tipraporn, and Wutiwiwatchai Chai.</title>
<date>2009</date>
<booktitle>BEST 2009: Thai Word Segmentation Software Contest. The 8th International Symposium on Natural Language Processing:</booktitle>
<pages>83--88</pages>
<marker>Krit, 2009</marker>
<rawString>Kosawat Krit, Boriboon Monthika, Chootrakool Patcharika, Chotimongkol Ananlada, Klaithin Supon, Kongyoung Sarawoot, Kriengket Kanyanut, Phaholphinyo Sitthaa, Purodakananda Sumonmas, Thanakulwarapas Tipraporn, and Wutiwiwatchai Chai. 2009. BEST 2009: Thai Word Segmentation Software Contest. The 8th International Symposium on Natural Language Processing: 83-88.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Porkaew Peerachet</author>
<author>Ruangrajitpakorn Taneth</author>
<author>Trakultaweekoon Kanokorn</author>
<author>Supnithi Thepchai</author>
</authors>
<date>2009</date>
<booktitle>Translation of Noun Phrase from English to Thai using Phrase-based SMT with CCG Reordering Rules, Proceedings of the 11th conference of the Pacific Association for Computational Linguistics (PACLING).</booktitle>
<marker>Peerachet, Taneth, Kanokorn, Thepchai, 2009</marker>
<rawString>Porkaew Peerachet, Ruangrajitpakorn Taneth, Trakultaweekoon Kanokorn, and Supnithi Thepchai.. 2009. Translation of Noun Phrase from English to Thai using Phrase-based SMT with CCG Reordering Rules, Proceedings of the 11th conference of the Pacific Association for Computational Linguistics (PACLING).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Porkaew Peerachet</author>
<author>Supnithi Thepchai</author>
</authors>
<title>Factored Translation Model in English-to-Thai Translation,</title>
<date>2009</date>
<booktitle>Proceedings of the 8th International Symposium on Natural Language Processing.</booktitle>
<marker>Peerachet, Thepchai, 2009</marker>
<rawString>Porkaew Peerachet, and Supnithi Thepchai. 2009. Factored Translation Model in English-to-Thai Translation, Proceedings of the 8th International Symposium on Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ruangrajitpakorn Taneth</author>
<author>Na Chai Wasan</author>
</authors>
<title>Boriboon Monthika, Supnithi Thepchai.</title>
<date>2007</date>
<booktitle>The Design of Lexical Information for Thai to English MT, Proceedings of the 7th International Symposium on Natural Language Processing.</booktitle>
<marker>Taneth, Wasan, 2007</marker>
<rawString>Ruangrajitpakorn Taneth, Na Chai Wasan , Boonkwan Prachya, Boriboon Monthika, Supnithi Thepchai. 2007. The Design of Lexical Information for Thai to English MT, Proceedings of the 7th International Symposium on Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ruangrajitpakorn Taneth</author>
<author>Trakultaweekoon Kanokorn</author>
<author>Supnithi Thepchai</author>
</authors>
<title>A Syntactic Resource for Thai: CG Treebank,</title>
<date>2009</date>
<booktitle>Proceedings of the 7th Workshop on Asian Language Resources, (ACL-IJCNLP):</booktitle>
<pages>96--102</pages>
<marker>Taneth, Kanokorn, Thepchai, 2009</marker>
<rawString>Ruangrajitpakorn Taneth, Trakultaweekoon Kanokorn, and Supnithi Thepchai. 2009. A Syntactic Resource for Thai: CG Treebank, Proceedings of the 7th Workshop on Asian Language Resources, (ACL-IJCNLP): 96–102.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Satayamas Vee</author>
<author>Kawtrakul Asanee</author>
</authors>
<title>WideCoverage Grammar Extraction from Thai Treebank.</title>
<date>2004</date>
<booktitle>Proceedings of Papillon 2004 Workshops on Multilingual Lexical Databases,</booktitle>
<location>Grenoble, France.</location>
<marker>Vee, Asanee, 2004</marker>
<rawString>Satayamas Vee, and Kawtrakul Asanee . 2004. WideCoverage Grammar Extraction from Thai Treebank. Proceedings of Papillon 2004 Workshops on Multilingual Lexical Databases, Grenoble, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Supnithi Thepchai</author>
<author>Ruangrajitpakorn Taneth</author>
<author>Trakultaweekoon Kanokorn</author>
<author>Porkaew Peerachet</author>
</authors>
<title>AutoTagTCG : A Framework for Automatic Thai CG Tagging,</title>
<date>2010</date>
<booktitle>Proceedings of the 7th international conference on Language Resources and Evaluation (LREC).</booktitle>
<marker>Thepchai, Taneth, Kanokorn, Peerachet, 2010</marker>
<rawString>Supnithi Thepchai, Ruangrajitpakorn Taneth, Trakultaweekoon Kanokorn, and Porkaew Peerachet. 2010. AutoTagTCG : A Framework for Automatic Thai CG Tagging, Proceedings of the 7th international conference on Language Resources and Evaluation (LREC).</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>