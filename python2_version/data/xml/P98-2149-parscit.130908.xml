<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.944908">
Dealing with distinguishing descriptions
in a guided composition system
</title>
<author confidence="0.833871">
Pascal Mouret Monique Rolbert
</author>
<bodyText confidence="0.929584">
Laboratoire d&apos;Informatique de Marseille
Universite de la Mediterranee
Faculte des Sciences de Luminy
Case 901, 163 Avenue de Luminy
</bodyText>
<address confidence="0.712364">
13288 Marseille, France
</address>
<email confidence="0.761344">
{Pascal.Mouret,Monique.Rolbert)@lim.univ-mrs.frj
</email>
<bodyText confidence="0.966680828125">
Abstract: The goal of this paper is to provide computable account for some definite
descriptions. To this end, we define in terms of inclusion the notion of distinguishing description
and of distinguishable entities introduced by [Dale 89]. These defmitions allow us to give
conditions of wellformedness for incomplete distinguishing descriptions. We also extend the
notion of distinguishing description to take into account cases of synonymy and hyponymy.
We describe a real application of a guided composition system where this sort of expressions
arise.
1.Introduction
Many studies in natural language
processing are concerned with how to
generate or understand defmite descriptions
that evoke a discourse entity already
introduced in the context. An interesting
solution to this problem was proposed by
[Dale 89] in terms of distinguishing
descriptions and distinguishable entities.
Informally, a distinguishing description
is a definite description which designates one
and only one entity among others in a context
set. Many natural language interfaces need to
deal with this sort of NPs. We develop an
application where these NPs occur in a
particular way: the application works in a
guided composition mode where correct
sentences have to be produced word by word
by the system. So, the problem of the
(contextual) correctness of an incomplete
distinguishing description arises. Moreover,
the system has to understand (complete or
incomplete) distinguishing descriptions in
wider cases of references than those intended
by [Dale 89], including cases of hyponymy
and so on. We are going to show that the
way we refme the notions introduced by Dale
allows us to treat these two points in a rather
simple and efficient manner.
In §2, we present our definitions of
distinguishing descriptions and
distinguishable entities and we use them to
deal with incomplete distinguishing
descriptions and wider cases of reference.
An algorithm for incomplete distinguishing
description production is given. §3 presents
the application, §4 related works and §5
concludes.
2.Dealing with distinguishing
descriptions
Following [Dale 96], let us consider that
the context contains a set of entities ED, {q,
e2, ...,en} and that each entity ei is described
by the set of its properties Pei.
[Dale 89] introduced the notion of
distinguishing description (id) which is the
linguistic realisation of a set of properties
which are together true of an entity ei, but of
no other entity in E. [Dale 89] also mentions
the notion of distinguishable entity, which is
intuitively an entity that can be distinguished
from the others by the use of a distinguishing
description made from its set of properties.
Using inclusion between sets of
properties, we can say that:
1. an entity ei in E is distinguishable if
there is no entity jin E such that Pei g
</bodyText>
<page confidence="0.996336">
905
</page>
<bodyText confidence="0.992382168674699">
Similarly to the process of generating a di
from the set of properties of an entity to
designate it, we will consider that to every
definite description corresponds the set of
properties (noted Pea) that it contains
(informally the set of properties of which the
definite description is the linguistic
realisation). We will say that a definite
description designates every entity ei of E
such that Tag Pei (the entity agrees with the
description).
Then, according to the definition given in
[Dale 891 and the uniqueness requirement,
we can say that
2. a definite description is a
distinguishing description if {eil Pac Pei)
is a singleton.
These two definitions will help us to deal
with incomplete descriptions and to extend
the notion of distinguishing description.
2.1Treating distinguishing des-
criptions in a guided com-
position system
Guided composition is a paradigm for
NLP which is an answer to various
limitations to NLP interfaces, especially
limitations due to coverage of lexicons and
grammars ([Rincel &amp; al 89]). The basic idea
is to inform the user, at every step, about the
abilities of the system: for example, such a
system can allow the user to ask what
word(s) can appear at a time in a sentence.
Then, the user chooses among the words
proposed and so on. Therefore, the system
must provide only expected words, i.e.
words that can lead to a correct whole
sentence.
In particular, the system must generate
partially (word by word) definite
descriptions which have to be correct from a
contextual point of view when they form
complete NPs. In a guided composition point
of view, the problem is then to fmd how to
know as early as possible if a string of
words (an incomplete distinguishing
description or lifd) may or may not lead to a
correct distinguishing description.
In order to treat //4 we have to define
conditions so as to decide when it will lead to
a correct definite description. For example,
if there are two kings on a chessboard, one
black and one white, the defmite description
&apos;le roi&apos; (&apos;the king&apos;) is a correct definite
description from a syntactical point of view,
but not from a contextual point of view
because two entities of the context can be
designated by it. However, it is a
contextually correct incomplete definite
description because it can lead to a correct
distinguishing description if completed by
&apos;noir&apos; (&apos;black&apos;) or &apos;blanc&apos; (&apos;white&apos;).
Conversely, if there is no bishop on the
chessboard, the definite description &apos;le fou&apos;
(&apos;the bishop&apos;) is neither a distinguishing
description nor a (contextually) correct
incomplete ddbecause it doesn&apos;t designate
any entity of the context and, moreover,
can&apos;t be completed to designate one.
So, an III is considered as correct if it
can lead to a definite description which is a
dd. As seen in this example, an III can
designate more than one entity (as for the dx4
we note Pia the set of properties from
which an kidis made and the Idd designates
every entity ei such that Piag Pe); so it is
clear that the uniqueness requirement is not
adequate to caracterise correct idd
Let DE be the set of distinguishable
entities of E. In order to be sure that an kid
can always be completed to be a dd, a
necessary and sufficient property is that
some of the entities designated by the Idd are
in DE, i.e
</bodyText>
<listItem confidence="0.907799">
3. an Idd is correct iff {ei I PIdIC Pei}
</listItem>
<bodyText confidence="0.971319454545455">
Actually, an id/which designates entities
in DE can be continued into a dd by using
properties which lead to designate one and
only one of these entities.
Finally,
4. an III can be a dd if there exists one
and only one entity ei in E that agrees with it.
Notice that the uniqueness requirement
must be met on E and not DE. Actually, there
may be only one entity in DE that agrees with
an Wand several others in E that agree with
</bodyText>
<page confidence="0.99255">
906
</page>
<bodyText confidence="0.947869957446808">
it (see example below). In this case, the ///
is correct but is not yet a dd. It is also
interesting to note that the only entity that
agrees with the dd is the referent of the
defmite description. That is to say that the
process of verifying if an Mefis correct leads
to solve the definite description in the end.
Let us have a look at an example:
Suppose we have a set of entities
E— e2, e3, e4, e5, e6), the properties
of which are:
ei is a dog,
e2 is a dog that barks,
e3 is a dog that barks,
e4 is a red bird that sings,
e5 is a red bird,
e6is a bird that flies.
In this example, e2 and e3 are not
distinguishable, because their sets of
properties are identical (and so Pe3 g Pe 2 and
Pe2 g Pe3 ). ei is not distinguishable because
Pei g
T. Finally, e5 is not distinguishable
because Pec Pe4. Therefore, only e4 and e6
are distinguishable entities. So, the set DE is
not empty and, in the guided composition
mode, the III &apos;le&apos; (&apos;the&apos;) can be proposed.
What words can be proposed after?
According to this context, &apos;le chien&apos; (&apos;the
dog&apos;) is not a correct id/because there is no
distinguishable entity agreeing with it. On the
contrary, &apos;l&apos;oiseau&apos; (&apos;the bird&apos;) is correct and
can lead to at least three different id &apos;l&apos;oiseau
qui chante&apos; (the bird that sings&apos;) which
designate e4 and is minimal, &apos;l&apos;oiseau rouge
qui chante&apos; (&apos;the red bird that sings&apos;) which
designates e4 but is not minimal and &apos;l&apos;oiseau
qui vole&apos; (&apos;the bird that flies&apos;) which
designates e6.
Notice that, for instance, &apos;l&apos;oiseau rouge&apos;
(The red bird&apos;) is not a 14 although there is
exactly one distinguishable entity (e4) that
agrees with it: this //designates also e5. The
uniqueness requirement must be met on the
whole set of entities from the context, and
not only on the set of all distinguishable
entities.
</bodyText>
<subsectionHeader confidence="0.9660165">
2.2 Refining the notion of dis-
tinguishing description
</subsectionHeader>
<bodyText confidence="0.99150085106383">
Using the definition of distinguishing
description based on inclusion given above,
we are going to show that this notion can be
refmed to take into account more subtle cases
of reference. We define a more discerning
inclusion between surface descriptions and
sets of properties in order to treat cases of
synonymy, nominalisation, hyponymy and
so on: we want to generalize the notion of
agreement to every case where a description
is able to &amp;quot;evoke&amp;quot; an entity. Actually, it is
well known (see for example [Corblin 95])
that an entity can be designated not only in
terms strictly equal to those which served to
introduce it. For example, a dog can be
designated by &apos;the animal&apos; or a child who
robs something by &apos;the robber&apos;.
To take these cases into account, we
define the —inclusion (noted ) between sets
of properties as follow:
- some —inclusion are given (these are
the basic one) like for instance (animal) E
(dog) or (robber) a (child, rob) i.e
representations of relations of hyponymy,
synonymy, and so on. These inclusions have
to be known by the system;
- for all P, P&apos;, P&amp;quot; sets of properties, if
PE P g P&amp;quot; then PE P&amp;quot;;
- for all P, P&apos; sets of properties, if P
P&apos;, then P-P&apos; can be partionned into sub-
sets which are —included in P&apos;.
Basic —inclusion representing relations of
hyponymy is not too hard to define, and is
useful for a lot of treatments in NLP
(conceptual aspects of NLP, for example).
Other basic —inclusions need more
knowledge (about the world and the
language), not so easy to implement, but also
necessary in other parts of the treatment of
natural language.
The ~inclusion is transitive and works as
expected on unions of sets. We use it
(instead of simple inclusion) to compare a set
of properties of an Mer(or a //) and a set of
properties of an entity and we say that the set
of entities designated by a a (or a lid) is
then {ei 1 Pea a Pei}.
</bodyText>
<page confidence="0.988013">
907
</page>
<bodyText confidence="0.999908930232558">
So, this inclusion allows to use the
distinguishing description &apos;the robber&apos; to
designate an entity that is a child who robs
something. So it&apos;s a nice extension of the
inclusion, when used to define the sets of
entity an Idd(or a Id) designates.
It is also interesting to see if —inclusion
can be used between sets of entities&apos;
properties to define the notion of
distinguishable entity. Suppose we have two
entities in the context, one which is a robber
and the other which is a child who has
robbed something. If we use —inclusion to
find distinguishable entities, then the set of
properties of the entity which is a robber is
—included in the set of properties of the
other, and so the entity which is a robber is
not distinguishable. But we know that in an
example like &apos;A robber meets a child who
robs something. The robber ...&apos;, the defmite
description &apos;the robber&apos; rather designates the
first entity introduced as &apos;a roober&apos; than the
second one. And this implies that the first
entity is distinguishable. So, we must not
use the —inclusion to distinguish entities (but
only the simple inclusion).
The remaining problem is then that, in
this case, the defmite description &apos;the robber&apos;
is —included in two distinguishable entities
(&apos;a robber&apos; and &apos;a child who robs
something&apos;), and then can&apos;t be a dd, in the
sense introduced in § 2.1. To take into
account an example like the one above and
the effect of the —inclusion, we must refine
the defmition of what can be a id a //must
designate (in the sense of the —inclusion)
only one entity of the context. But if there is
more than one, but only one entity e such that
Pac Pe (with the simple inclusion), then the
ddis correct and the entity designated is e.
As shown below, we have used this
inclusion while dealing with incomplete
distinguishing description.
</bodyText>
<subsectionHeader confidence="0.854172333333333">
2.3 Algorithm for Idd pro-
duction using simple inclusion
or —inclusion
</subsectionHeader>
<bodyText confidence="0.977172882352941">
Idd as defined in 2.1 do not depend on
how they are produced. Here we give an
algorithm which builds Idd from left to right,
word by word, in order to be used in a
guided composition system.
First of all, it can be seen that if a given
Iddis not correct, any III starting with this
Iddcannot be correct. Hence, we just need to
examine one word strings first, then two
word strings, and so on, which fits perfectly
to the guided composition mode that we used
in our applications (see §3).
So, the only words that the system must
propose are those which continue a correct
Miinto a correct kid At the beginning, the
word &apos;le&apos; (the&apos;) can be proposed if and only
if DE is not empty (Pile&apos; — 0). Thus, we
have a set of distinguishable entities. A word
w / can be proposed if and only if there
exists at least one entity in this set that agrees
with &apos;le wi&apos;. And so on.
The implemented algorithm works as
follow:
Let us consider wi ..wn an Idd. At each
step, two sets are built: one corresponding to
all the entities that agree with w 1 ..wn (we
call itPRal the set of the possible
referents of the kid), one corresponding to
the distinguishable entities that agree with it
the distinguishable possible
referents of wi..wn). IfDPItu,/ ..wn is not
empty, the III is correct and can be
continued. Ifis a singleton (and if
the kid is an NP syntactically correct) then
the Idd can be considered as a dd, and its
referent is the element of the set. If
94w/..wn
is not a singleton, the system must propose
words to continue the NP (which is always
possible). The words w which are
contextually correct are those for which the
setremains not empty.
1)1;1/1 .. wnw
As seen above, the setis built
Y35)14o/..wn
using simple inclusion.
The set PR,w can be constructed
/ ..wn
according to simple inclusion or —inclusion.
In the second case, to test if an Miwi..wn is
a 14 the algorithm has to test ifn is
</bodyText>
<equation confidence="0.541232">
w/
</equation>
<bodyText confidence="0.973961">
a singleton or if a subset of it according to
simple inclusion is a singleton.
We have the following properties:
</bodyText>
<page confidence="0.994834">
908
</page>
<table confidence="0.731292">
P9Zthe&apos; E DM&amp; — DE
For each correct A(
wi..wn:
DP1401 ..wn Pl&lt;w/ ..wn
and for each word w:
9144,/..wnw
DPA-wi..wnw Pftw/..wnw DPRwi..Wyt
and so,
D1944)./..wn
</table>
<tableCaption confidence="0.259563">
These are fine properties which ensure
that the algorithm stops. Computing
PRw/..wn and TYPR is achieved easily
for n&gt;1: is composed of all those
/..wn
elements of 04 that also agree with
w ..wn. The same applies to DPRwi..wn.
</tableCaption>
<bodyText confidence="0.9101215">
The only somewhat time-consuming task
relies in computing DP9Z.le&apos;•
</bodyText>
<sectionHeader confidence="0.540939" genericHeader="abstract">
3.An application
</sectionHeader>
<bodyText confidence="0.999208">
The questions tackled in this paper have
appeared while developping the system
EREL1 ([Godbert 98]) built on ILLICO. The
generic lLLICO software ([Milhaud 92])
belongs to the category of guided
composition systems we have presented
above. It has been used to develop several
natural language interfaces (see for example
[Guenthner &amp; al. 92], [Pasero &amp; al. 94]). In
this system, if a string proposed by the user
is incorrect, then the system keeps the largest
correct sub-string (from the beginning of the
string) and proposes all the possible words
that can continue this sub-string. If the
sentence is empty, then the system can
propose all the possible first words, and so
on. It is important to notice that the
generative process is driven by the syntactic
parser.
EREL is a software for language
rehabilitation that we have designed in a
collaboration with medical staffs specialised
in the treatment of autistic-like children. The
system provides a set of user-friendly
</bodyText>
<note confidence="0.4617275">
1 The project EREL is partially funded by the
Conseil General des Bouches-du-Rhone.
</note>
<tableCaption confidence="0.988261428571429">
educational play activities designed to help
users to employ common language.
So, it is very important in this kind of
applications to offer a sophisticated guided
composition mode, and in particular to
produce only correct sentences at every level
(syntactical, conceptual but also contextual).
At the moment, there are two main types of
games in EREL: in the first one, chidren
speak about or ask questions about a picture
they see on the screen. The context which
contains objects about which the chidren can
talk about is preliminary computed and it
does not change along with the discourse.
So, the set of distinguishable entities DE is
built at one time.
The second activity concerns a dialog on a
logic game in which users compose orders in
natural language to achieve a goal. One of the
exercises consists in putting and moving
objects on a board. A child has an initial
stock of objects that he can put on a checker
board, permute, move, or stow away. He
gives orders to the system using natural
languages sentences and he can see
immediately on the board the effects the
sentences have. The interface looks like
this:
</tableCaption>
<table confidence="0.474017">
Son ilttlielto 011ueou Contraintoe
CUMNI■11. PREMIER 011141111
</table>
<subsectionHeader confidence="0.703765">
Sults* possible.:
</subsectionHeader>
<bodyText confidence="0.961302466666667">
Eenenee le corr. noir avec Is rend ...
Here, in the French version, the user has
begun a sentence oEchange le carre noir avec
le rond...» (Permute the black square with
the circle...) and the system, according to the
contextual situation, proposes the possible
words to be selected: blanc, gris, noir
(white, grey, black). If there had been no
white circle on the board, the word white
would not have been proposed.
We have also implemented part of the
—inclusion presented above so the child can
use the hyponym pawn to designate a
triangle or a square or a circle. The hyponym
relations are already represented in the
</bodyText>
<figure confidence="0.996768818181818">
1 1 1 4
Reserve
(Continind
•
0
0
•
•
•
•
•
</figure>
<page confidence="0.996283">
909
</page>
<bodyText confidence="0.982784386138614">
system by a conceptual graph which is used
in other parts of the system.
In this game, it is clear that contextually
correct definite descriptions must designate
objects in the context (the system has to act
on them, so it has to find them). So, in the
guided composition mode, the system has to
compute kfias they have been defined in §2.
The objects are moving during the game so,
as opposed to the first type of activity, the
context changes and the set of
distinguishable entities has to be computed at
every step. Moreover, the children can create
new pawns (made from a predefined set of
shapes and colors). These objects are added
in the context and must be taken into account
for later mentions.
The set of distinguishable entities is not
the set of all the objects because some objects
may not be distinguishable. For example, if
two objects have the same shape and color
and are in the stock (Reserve&apos; on the figure
above), then they can not be distinguished
(we assume there is no relative position in
the reserve). The user can act on them by
using sentences like &apos;put one of the red
triangles which are in the reserve in the case
A4&apos; but not like &apos;put the red triangle which is
in the reserve...&apos;. If there is no other triangle
on the chessboard, then the system must not
propose beginnings of definite NP like &apos;the
triangle...&apos;
EREL is under development and a
medical team who works with autistic
children is testing a preliminary version.
4.Related works
The work presented here uses notions
firstly introduced by [Dale 89] and
mentioned in many works in the field. We
have presented here new applications and
extensions. Actually, the problem treated
here raises the general question of generating
definite descriptions. Generally, these works
deal rather with the problem of what to say
and how to say it. [Novak 88] deals with the
problem (among others) of when and how
restrictives relative clause have to be used in
definite NP. The system that he describes is
able to produced definite NP like the first
yellow BMW, the second yellow BMW if
necessary. [Kronfeld 89] talks about
&apos;conversionally relevant descriptions&apos; which
is typically the problem of how to say
something according to the context of
discourse or the user&apos;s goal like in [Appelt
85]. The relations between Gricean maxims
and the generation of definite NP are studied
in [Passonneau 95] and [Dale &amp; al. 96] for
example.
[Horacek 97] gives a good comparison of
the previous works; his analyses make
appear the problem of the linguistic
realisation of a set of properties of an entity
to generate a description that designates it
and he proposes an algorithm which takes
into account this problem during the choice
of the property which will be used to build a
deL
Concerning the production of .idt4 we are
not really confronted with the problems
mentioned in [Horacek 97] because the
guided composition system doesn&apos;t generate
NPs from entity representation; its parser
generates partial syntactically correct
sentences which are filtered by contextual
criteria (the processes are driven in parallel
thanks to coroutined methods). Moreover,
concerning what to say and how to say it, it
is the user who chooses what word (among
the possibilities offered by the system) will
be kept to build the sentence, at every step.
Concerning the extension of the notion of
agreement that we make (and so of the notion
of distinguishing description), many
linguists mention the phenomenon we want
to take into account. A more computational
point of view is discussed in [Groenendijk &amp;
al 96, pp 25-27] (the example of &apos;the doctor&apos;
and &apos;the man&apos;). The authors do not give
really computable solutions to this problem.
It seems that the use of simple inclusion and
—inclusion to find distinguishable entity and
to identify a referent for a (complete or
incomplete) distinguishing description (as
described in §2.2) deals rather efficiently
with the problem
5.Conclusion
We showed here how the uniqueness
requirement, when dealing with incomplete
defmite descriptions, turns into a requirement
of that particular sort of entities from the
</bodyText>
<page confidence="0.986976">
910
</page>
<bodyText confidence="0.9999015">
context, the distinguishable entities. Then we
showed how the notion of distinguishing
description can be extended using inclusion
and what we called —inclusion. An algorithm
that uses these ideas and allows to know as
early as possible incomplete definite
description that can lead to correct defmite
description from those that cannot is given.
The algorithm is incremental, which is
particulary useful in a guided composition
system and allows also to solve complete
definite description (finding the referent). So
far, an instance of it has been implemented
under the system EREL.
</bodyText>
<sectionHeader confidence="0.958211" genericHeader="references">
Bibliography
</sectionHeader>
<reference confidence="0.998824164556962">
[Appelt 85] Douglas E. Appelt.
&amp;quot;Planning English Referring Expressions&amp;quot;,
Artificial Intelligence, Vol. 26, n° 1, April
1985.
[Corblin 95] Francis Corblin. Les formes
de reprises dans le discours. Anaphores et
chalnes de reference, Presses Universitaires
de Rennes, 1995.
[Dale 89] Robert Dale. &amp;quot;Cooking Up
Referring Expressions.&amp;quot;, Proceedings of the
27th Annual Meeting of the Association for
Computational Linguistics, Vancouver BC,
1989.
[Dale &amp; al 96] Robert Dale and Ehud
Reiter. &amp;quot;The Role of the Gricean Maxims in
the Generation of Referring Expressions&amp;quot;,
AAAI Spring Symposium on Computational
Model of Conversational Implicature, 1996.
[Danlos 85] Laurence Danlos. Generation
Automatique de Texte en Langage Naturel,
Masson, 1985.
[Godbert 98] Elisabeth Godbert. &amp;quot;EREL:
a multimedia CALL system devoted to
children with language disorders&amp;quot;, In
Multimedia CALL: Theory and Practice, K.
Cameron, Ed. Elm Bank Publications,
Exeter, England, 1998, pp. 207-216.
[Groenendijk &amp; al 96] Jeroen
Groenendijc and Martin Stokhof &amp;quot;Changez le
Contexte!&amp;quot;, Research report,
ILLC/Departement of Philosophy,
University of Amsterdam, March 1996.
[Guenthner &amp; al 92] Frantz Guenthner,
Karin Kruger-Thielmann, Robert Pasero and
Paul Sabatier, &amp;quot;Communications Aids for
ALS Patients&amp;quot;, Proceedings of the 3rd
International Conference on Computers for
Handicapped Persons, pp. 303-307, 1992.
[Horacek 97] Helmut Horacek, &amp;quot;An
Algorithm For Generating Referential
Descriptions With Flexible Interfaces&amp;quot;,
Proceedings of the 35th Annual Meeting of
ACL and 8th Annual Meeting of EACL,
Madrid, Spain, 1997.
[Kronfeld 89] Amichai Kronfeld
&amp;quot;Conversationally Relevant Descriptions&amp;quot;,
Proceedings of the 27th Annual Meeting of
the Association for Computational
Linguistics, Vancouver BC, 1989.
[Milhaud 92] Gerard Milhaud, Robert
Pasero and Paul Sabatier &apos;Partial Synthesis
of Sentences by Coroutining Constraints on
Different Levels of Well-Formedness&amp;quot;,
Proceedings of the 15th International
Conference on Computational Linguistics
(Coling 92), pp 926-929, Nantes, France,
1992.
[Novak 88] Hans-Joachim Novak
&amp;quot;Generating Referring Phrases in a Dynamic
Environment&amp;quot;, Chapter 5 in M. Zock and G.
Sabah (eds), Advances in Natural Language
Generation, Volume 2, pp76-85, Pinter
Publishers, 1988.
[Pasero 94] Robert Pasero, Nathalie
Richardet and Paul Sabatier, &amp;quot;Guided
Sentences Composition for Disabled
People&amp;quot;, Proceedings of the Fourth
Conference on Applied Natural Language
Processing, pp.205-206, 1994.
[Passonneau 95] Rebecca J. Passonneau,
&amp;quot;Integrating Gricean and Attentional
Constraints&amp;quot;, Proceedings of the
International Joint Conference on Artificial
Intelligence, Montréal, Quebec, 1995.
[Rincel &amp; al 89] Paul Rincel and Paul
Sabatier, &amp;quot;LEADER : Un generateur
d&apos;interfaces en langage naturel pour bases de
donn6es relationnelles&amp;quot;, Proceedings of the
AFCET RFIA Conference, Paris, 1989.
</reference>
<page confidence="0.998107">
911
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.557215">
<title confidence="0.998882">Dealing with distinguishing descriptions in a guided composition system</title>
<author confidence="0.998812">Pascal Mouret Monique Rolbert</author>
<affiliation confidence="0.938438333333333">Laboratoire d&apos;Informatique de Marseille Universite de la Mediterranee Faculte des Sciences de Luminy</affiliation>
<address confidence="0.8615005">Case 901, 163 Avenue de Luminy 13288 Marseille, France</address>
<email confidence="0.900946">{Pascal.Mouret,Monique.Rolbert)@lim.univ-mrs.frj</email>
<abstract confidence="0.987863285714286">The goal of this paper is to provide computable account for some definite descriptions. To this end, we define in terms of inclusion the notion of distinguishing description and of distinguishable entities introduced by [Dale 89]. These defmitions allow us to give of wellformedness for descriptions. We also extend the notion of distinguishing description to take into account cases of synonymy and hyponymy. We describe a real application of a guided composition system where this sort of expressions arise.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Douglas E Appelt</author>
</authors>
<title>Planning English Referring Expressions&amp;quot;,</title>
<date>1985</date>
<journal>Artificial Intelligence,</journal>
<volume>26</volume>
<marker>[Appelt 85]</marker>
<rawString>Douglas E. Appelt. &amp;quot;Planning English Referring Expressions&amp;quot;, Artificial Intelligence, Vol. 26, n° 1, April 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Francis Corblin</author>
</authors>
<title>Les formes de reprises dans le discours. Anaphores et chalnes de reference, Presses Universitaires de Rennes,</title>
<date>1995</date>
<marker>[Corblin 95]</marker>
<rawString>Francis Corblin. Les formes de reprises dans le discours. Anaphores et chalnes de reference, Presses Universitaires de Rennes, 1995.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Dale</author>
</authors>
<title>Cooking Up Referring Expressions.&amp;quot;,</title>
<date>1989</date>
<booktitle>Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>Vancouver BC,</location>
<marker>[Dale 89]</marker>
<rawString>Robert Dale. &amp;quot;Cooking Up Referring Expressions.&amp;quot;, Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics, Vancouver BC, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Dale</author>
<author>Ehud Reiter</author>
</authors>
<title>The Role of the Gricean Maxims in the Generation of Referring Expressions&amp;quot;,</title>
<date>1996</date>
<booktitle>Symposium on Computational Model of Conversational Implicature,</booktitle>
<publisher>AAAI Spring</publisher>
<marker>[Dale &amp; al 96]</marker>
<rawString>Robert Dale and Ehud Reiter. &amp;quot;The Role of the Gricean Maxims in the Generation of Referring Expressions&amp;quot;, AAAI Spring Symposium on Computational Model of Conversational Implicature, 1996.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Laurence Danlos</author>
</authors>
<title>Generation Automatique de Texte en Langage Naturel,</title>
<date>1985</date>
<location>Masson,</location>
<marker>[Danlos 85]</marker>
<rawString>Laurence Danlos. Generation Automatique de Texte en Langage Naturel, Masson, 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Elisabeth Godbert</author>
</authors>
<title>EREL: a multimedia CALL system devoted to children with language disorders&amp;quot;,</title>
<date>1998</date>
<booktitle>In Multimedia CALL: Theory</booktitle>
<pages>207--216</pages>
<publisher>Elm Bank Publications,</publisher>
<location>Exeter, England,</location>
<marker>[Godbert 98]</marker>
<rawString>Elisabeth Godbert. &amp;quot;EREL: a multimedia CALL system devoted to children with language disorders&amp;quot;, In Multimedia CALL: Theory and Practice, K. Cameron, Ed. Elm Bank Publications, Exeter, England, 1998, pp. 207-216.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeroen Groenendijc</author>
<author>Martin Stokhof</author>
</authors>
<title>Changez le Contexte!&amp;quot;, Research report,</title>
<date>1996</date>
<institution>ILLC/Departement of Philosophy, University of Amsterdam,</institution>
<marker>[Groenendijk &amp; al 96]</marker>
<rawString>Jeroen Groenendijc and Martin Stokhof &amp;quot;Changez le Contexte!&amp;quot;, Research report, ILLC/Departement of Philosophy, University of Amsterdam, March 1996.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frantz Guenthner</author>
<author>Karin Kruger-Thielmann</author>
<author>Robert Pasero</author>
<author>Paul Sabatier</author>
</authors>
<title>Communications Aids for ALS Patients&amp;quot;,</title>
<date>1992</date>
<booktitle>Proceedings of the 3rd International Conference on Computers for Handicapped Persons,</booktitle>
<pages>303--307</pages>
<marker>[Guenthner &amp; al 92]</marker>
<rawString>Frantz Guenthner, Karin Kruger-Thielmann, Robert Pasero and Paul Sabatier, &amp;quot;Communications Aids for ALS Patients&amp;quot;, Proceedings of the 3rd International Conference on Computers for Handicapped Persons, pp. 303-307, 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Helmut Horacek</author>
</authors>
<title>An Algorithm For Generating Referential Descriptions With Flexible Interfaces&amp;quot;,</title>
<date>1997</date>
<booktitle>Proceedings of the 35th Annual Meeting of ACL and 8th Annual Meeting of EACL,</booktitle>
<location>Madrid,</location>
<marker>[Horacek 97]</marker>
<rawString>Helmut Horacek, &amp;quot;An Algorithm For Generating Referential Descriptions With Flexible Interfaces&amp;quot;, Proceedings of the 35th Annual Meeting of ACL and 8th Annual Meeting of EACL, Madrid, Spain, 1997.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Amichai Kronfeld</author>
</authors>
<title>Conversationally Relevant Descriptions&amp;quot;,</title>
<date>1989</date>
<booktitle>Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>Vancouver BC,</location>
<marker>[Kronfeld 89]</marker>
<rawString>Amichai Kronfeld &amp;quot;Conversationally Relevant Descriptions&amp;quot;, Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics, Vancouver BC, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gerard Milhaud</author>
</authors>
<title>Robert Pasero and Paul Sabatier &apos;Partial Synthesis of Sentences by Coroutining Constraints on Different Levels of Well-Formedness&amp;quot;,</title>
<date>1992</date>
<booktitle>Proceedings of the 15th International Conference on Computational Linguistics (Coling 92),</booktitle>
<pages>926--929</pages>
<location>Nantes, France,</location>
<marker>[Milhaud 92]</marker>
<rawString>Gerard Milhaud, Robert Pasero and Paul Sabatier &apos;Partial Synthesis of Sentences by Coroutining Constraints on Different Levels of Well-Formedness&amp;quot;, Proceedings of the 15th International Conference on Computational Linguistics (Coling 92), pp 926-929, Nantes, France, 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans-Joachim Novak</author>
</authors>
<title>Generating Referring Phrases in a Dynamic Environment&amp;quot;,</title>
<date>1988</date>
<booktitle>Chapter 5 in M. Zock and G. Sabah (eds), Advances in Natural Language Generation,</booktitle>
<volume>2</volume>
<pages>76--85</pages>
<publisher>Pinter Publishers,</publisher>
<marker>[Novak 88]</marker>
<rawString>Hans-Joachim Novak &amp;quot;Generating Referring Phrases in a Dynamic Environment&amp;quot;, Chapter 5 in M. Zock and G. Sabah (eds), Advances in Natural Language Generation, Volume 2, pp76-85, Pinter Publishers, 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Pasero</author>
<author>Nathalie Richardet</author>
<author>Paul Sabatier</author>
</authors>
<title>Guided Sentences Composition for Disabled People&amp;quot;,</title>
<date>1994</date>
<booktitle>Proceedings of the Fourth Conference on Applied Natural Language Processing,</booktitle>
<pages>205--206</pages>
<marker>[Pasero 94]</marker>
<rawString>Robert Pasero, Nathalie Richardet and Paul Sabatier, &amp;quot;Guided Sentences Composition for Disabled People&amp;quot;, Proceedings of the Fourth Conference on Applied Natural Language Processing, pp.205-206, 1994.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rebecca J Passonneau</author>
</authors>
<title>Integrating Gricean and Attentional Constraints&amp;quot;,</title>
<date>1995</date>
<booktitle>Proceedings of the International Joint Conference on Artificial Intelligence,</booktitle>
<location>Montréal, Quebec,</location>
<marker>[Passonneau 95]</marker>
<rawString>Rebecca J. Passonneau, &amp;quot;Integrating Gricean and Attentional Constraints&amp;quot;, Proceedings of the International Joint Conference on Artificial Intelligence, Montréal, Quebec, 1995.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Rincel</author>
<author>Paul Sabatier</author>
</authors>
<title>LEADER : Un generateur d&apos;interfaces en langage naturel pour bases de donn6es relationnelles&amp;quot;,</title>
<date>1989</date>
<booktitle>Proceedings of the AFCET RFIA Conference,</booktitle>
<location>Paris,</location>
<marker>[Rincel &amp; al 89]</marker>
<rawString>Paul Rincel and Paul Sabatier, &amp;quot;LEADER : Un generateur d&apos;interfaces en langage naturel pour bases de donn6es relationnelles&amp;quot;, Proceedings of the AFCET RFIA Conference, Paris, 1989.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>