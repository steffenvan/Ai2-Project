<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003343">
<title confidence="0.9514665">
AN LR CATEGORY-NEUTRAL PARSER WITH LEFT CORNER
PREDICTION
</title>
<author confidence="0.748537">
Paola Merlo
</author>
<affiliation confidence="0.607343">
University of Maryland/ Universite de Geneve
Faculte des Lettres
</affiliation>
<address confidence="0.373326">
CH-1211 Geneve 4
</address>
<email confidence="0.904134">
merlo@divsun.unige.cb
</email>
<sectionHeader confidence="0.996632" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.993914555555556">
In this paper we present a new parsing model of
linguistic and computational interest. Linguisti-
cally, the relation between the parser and the the-
ory of grammar adopted (Government and Bind-
ing (GB) theory as presented in Chomsky(1981,
1986a,b) is clearly specified. Computationally,
this model adopts a mixed parsing procedure,
by using left corner prediction in a modified LR
parser.
</bodyText>
<sectionHeader confidence="0.986667" genericHeader="method">
ON LINGUISTIC THEORY
</sectionHeader>
<bodyText confidence="0.999589875">
For a parser to be linguistically motivated, it must
be transparent to a linguistic theory, under some
precise notion of transparency (see Abney 1987).
GB theory is a modular theory of abstract prin-
ciples. A parser which encodes a modular theory
of grammar must fulfill apparently contradictory
demands: for the parser to be explanatory it must
maintain the modularity of the theory, while for
the parser to be efficient, modularization must be
minimized so that all potentially necessary infor-
mation is available at all times.1 We explore a
possible solution to this contradiction. We observe
that linguistic information can be classified into 5
different classes, as shown in (1), on the basis of
their informational content. These we will call IC
Classes.
</bodyText>
<listItem confidence="0.9663181">
(1) a. Configurations: sisterhood, c-command,
m-command, ±maximal projection ...
b. Lexical features: ±N, ±V, ±Funct,
±c-selected, ±Strong Agr
c. Syntactic features: ±Case, ±9, ±7,
±barrier.
d. Locality information: minimality, binding,
antecedent government.
e. Referential information: ±D-linked,
±anaphor, ±pronominal.
</listItem>
<tableCaption confidence="0.761432">
&apos;On efficiency of GB-based systems see Ris-
tad(1990), Kashkett(1991).
</tableCaption>
<bodyText confidence="0.9976985">
This classification can be used to specify pre-
cisely the amount of modularity in the parser.
Berwick(1982:400ff) shows that a modular system
is efficient only if modules that depend on each
other are compiled, while independent modules
are not. We take the notion of dependent and
independent to correspond to IC Classes, in that
primitives that belong to the same IC Class are
dependent on each other, while primitives that be-
long to different IC Classes are independent from
each other. We impose a modularity requirement
that makes precise predictions for the design of the
parser.
Modularity Requirement (MR) Only primi-
tives that belong to the same IC Class can be
compiled in the parser.
</bodyText>
<sectionHeader confidence="0.997674" genericHeader="method">
RECOVERING PHRASE
STRUCTURE
</sectionHeader>
<bodyText confidence="0.99898152173913">
According to the MR, notions such as headedness,
directionality, sisterhood, and maximal projection
can be compiled and stored in a data structure, be-
cause these notions belong to the same IC Class,
configurations. These features are compiled into
context-free rules in our parser. These basic X
rules are augmented by A rules licensed by the
part of Trace theory that deals with configura-
tions. The crucial feature of this grammar is that
nonterminals specify only the X projection level,
and not the category. The full context-free gram-
mar is shown in Figure 1.
The recovery of phrase structure is a crucial
component of a parser, as it builds the skeleton
which is needed for feature annotation. It must
be efficient and it must fail as soon as an error is
encountered, in order to limit backtracking. An
LR(k) parser (Knuth 1965) has these properties,
since it is deterministic on unambiguous input,
and it has been proved to recognize only. valid
prefixes. In our parser, we compile the grammar
shown above into an LALR(1) (Aho and Ullman
1972) parse table. The table has been modified
</bodyText>
<page confidence="0.995335">
288
</page>
<figureCaption confidence="0.999635">
Figure 1: Category-Neutral Grammar
</figureCaption>
<bodyText confidence="0.999813">
in order to have more than one action for each
table entry.2 Three stacks are used: a stack for
the states traversed so far; a stack for the seman-
tic attributes associated with each of the nodes;
a tree stack of partial trees. The LR algorithm
is encoded in a parse predicate, which establishes
a relation between two sets of 5-tuples, as shown
in (2).2
</bodyText>
<equation confidence="0.517668">
(2) Ti x x Ai x x PTi Ti x S; x A; x C; x PT;
</equation>
<bodyText confidence="0.999954277777778">
Our parser is more elaborate and less restric-
tive than a standard LR parser, because it im-
poses conditions on the attributes of the states
and it is nondeterministic. In order to reduce the
amount of nondeterminism, some predictive power
has been introduced. The cooccurence restrictions
between categories, and subcategorization infor-
mation of verbs is compiled in a table, which we
call Left Corner Prediction Table (LC Table). By
looking at the current token, at its category la-
bel, and its subcategorization frame, the number
of choices of possible next states can be restricted.
For instance, if the current token is a verb, and
the LR table allows the parser either to project one
level up to V&apos;, or it requires to create an empty ob-
ject NP, then, on consulting the subcategorization
information, the parser can eliminate the second
option as incorrect if the verb is intransitive.
</bodyText>
<sectionHeader confidence="0.999959" genericHeader="evaluation">
RESULTS AND COMMENTS
</sectionHeader>
<bodyText confidence="0.984902769230769">
The design presented so far embodies the MR,
since it compiles only dependent features in two
tables off-line. Compared to the use of partially
or fully instantiated context-free grammars, this
&apos;This modification is necessary because the gram-
mar compiled into the LR table is not an LR grammar.
&apos;In (2) Tk is an element of the set of input tokens,
Sk is an element of the set of states in the LR table, Ak
is an element of the set of attributes associated with
each state in the table, Ck is an element of the set of
chains, i.e. displaced element, and PTk is an element
of the set of tokens predicted by the left corner table
(see below).
</bodyText>
<table confidence="0.9932134">
Grammar Instantiated X
Number of Rules 51 16
Number of States 46 14
Shift/reduce confficts 224 24
Reduce/reduce conflicts 270 36
</table>
<figureCaption confidence="0.89585">
Figure 2: Numbers
</figureCaption>
<bodyText confidence="0.883090632653061">
organization of the parsing algorithms has been
found to be better on several grounds.
Consider again the X grammar that we use in
the parser, shown in Figure 1. One of the crucial
features of this grammar is that the nonterminals
are specified only for level and headedness. This
version of the grammar is a recent result. In previ-
ous implementations of the parser, the projections
of the head in a rule were instantiated: for in-
stance NP --+ YP . Empirically, we find that
on compiling the partially instantiated grammar
the number of rules is increased proportionately
to the number of categories, and so is the num-
ber of conflicts in the table. Figure 2 shows the
relative sizes of the LALR(1) tables and the num-
ber of conflicts. Moreover, on closer inspection
of the entries in the table, categories that belong
to the same level of projection show the same re-
duce/reduce conflicts. This means that introduc-
ing unrestricted categorial information increases
the size of the table without decreasing the num-
ber of conflicts in each entry, i.e. without reducing
the nondeterminism in the table.
These findings confirm that categorial infor-
mation can be factored out of the compiled table,
as predicted by the MR. The information about
cooccurrence restrictions, category and subcatego-
rization frame is compiled in the Left Corner (LC)
table, as described above. Using two compiled ta-
bles that interact on-line is better than compiling
all the information into a fully instantiated, stan-
dard context-free grammar for several reasons.4
Computationally, it is more efficient.5 Practically,
manipulating a small, highly abstract grammar is
4Fully instantiated grammars have been used,
among others, by Tomita(1985) in an LR parser, and
by Dorr(1990), Fong(1991) in GB-based parsers.
&apos;It has been argued elsewhere that for context-free
parsing algorithms, the size of the grammar (which is
a constant factor) can easily become the predominant
factor for all useful inputs (see Berwick and Weinberg
1982). Work on compilation of parsers that use GPSG
seems to point in the same direction. The separation of
structural information from cooccurence restrictions is
advocated in Kilbury(1986); both Shieber(1986) and
Phillips(1987) argue that the combinatorial explosion
(Barton 1985) of a fully expanded ED/LP formalism
can be avoided by using feature variables in the com-
piled grammar. See also Thompson 1982.
</bodyText>
<table confidence="0.955518375">
- Y&amp;quot; X&apos;
X&apos; Y&amp;quot;
X Y&amp;quot;
- Y&amp;quot; X
- Y&amp;quot; X&apos;
—+ X&apos; Y&amp;quot;
Y&amp;quot; X&amp;quot;
- X&amp;quot; Y&amp;quot;
- empty
- empty
specification
complementation
modification
adjunction
empty heads
empty Xmaxs
</table>
<page confidence="0.997846">
289
</page>
<bodyText confidence="0.999767666666667">
much easier. It is easy to maintain and to embed
in a full-fledged parsing system. Linguistically, a
fully-instantiated parser would not be transparent
to the theory and it would be language dependent.
Finally, it could not model some experimental psy-
cholinguistic evidence, which we present below.
</bodyText>
<subsectionHeader confidence="0.552467">
PSYCHOLINGUISTIC SUPPORT
</subsectionHeader>
<bodyText confidence="0.9999786">
A reading task is presented in Frazier and Rayner
1987 where eye movements are monitored: they
find that in locally ambiguous contexts, the am-
biguous region takes less time than an unambigu-
ous counterpart, while a slow down in process-
ing time is registered in the disambiguating re-
gion. This suggests that selection of major catego-
rial information in lexically ambiguous sentences is
delayed.6 This delay means that the parser must
be able to operate in absence of categorial infor-
mation, making use of a set of category-neutral
phrase structure rules. This separation of item-
dependent and item-independent information is
encoded in the grammar used in our parser. A
parser that uses instantiated categories would have
to store categorial cooccurence restrictions in a dif-
ferent data structure, to be consulted in case of
lexically ambiguous inputs. Such design would be
redundant, because categorial information would
be encoded twice.
</bodyText>
<sectionHeader confidence="0.989673" genericHeader="conclusions">
CONCLUSION
</sectionHeader>
<bodyText confidence="0.9997871">
The module described in this paper is imple-
mented and embedded in a parser for English of
limited coverage, but it has some shortcomings,
which axe currently under investigation. Refine-
ments are needed to compile the LC table auto-
matically, to define IC Classes predictively instead
of by exhaustive listing. Finally, a formal proof
is needed to show that our definition of indepen-
dent and dependent is always going to increase
efficiency.
</bodyText>
<sectionHeader confidence="0.998365" genericHeader="acknowledgments">
ACKNOWLEDGEMENTS
</sectionHeader>
<bodyText confidence="0.9996895">
This work has benefited from suggestions by Bon-
nie Dorr, Paul Gorrell, Eric Wehrli and Amy
Weinberg. The author is supported by a Fellow-
ship from the Swiss-Italian Foundation.
</bodyText>
<footnote confidence="0.5901895">
6For instance, in the sentences in (3), (from Frazier
and Rayner 1987) the ambiguous target item, shown
</footnote>
<tableCaption confidence="0.668739857142857">
in capitals in (3)a, takes less time than the unambigu-
ous control in (3)b, while there is a slow down in the
disambiguating material (in italics).
(3) a. The warehouse FIRES numerous employees
each year.
b. That warehouse fires numerous employees each
year.
</tableCaption>
<sectionHeader confidence="0.979709" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.999201588235294">
Abney Steven 1987, &amp;quot;GB Parsing and Psycholog-
ical Reality&amp;quot; in MIT Parsing Volume, Cognitive
Science Center.
Aho A.V. and J.D. Ullman 1972, The Theory
of Parsing, Translation and Compiling, Prentice-
Hall, Englewood Cliffs, NJ.
Barton Edward 1985, &amp;quot;The Computational
Difficulty of ID/LP Parsing&amp;quot; in Proc. of the ACL.
Berwick Robert 1982, Locality Principles and
the Acquisition of Syntactic Knowledge, Ph.D
Diss., MIT.
Berwick Robert and Amy Weinberg 1982,
&amp;quot; Parsing Efficiency, Computational Complexity
and the Evaluation of Grammatical Theories &amp;quot; ,
Linguistic Inquiry, 13:165-191.
Chomsky Noam 1981, Lectures on Govern-
ment and Binding, Foris, Dordrecht.
Chomsky Noam 1986a, Knowledge of Lan-
guage: Its Nature, Origin and Use, Praeger, New
York.
Chomsky Noam 1986b, Barriers,MIT Press,
Cambridge MA.
Dorr Bonnie J. 1990,Lezical Conceptual Struc-
ture and Machine Translation, Ph.D Diss., MIT.
Fong Sandiway 1991, Computational Prop-
erties of Principle-based Grammatical Theories,
Ph.D Diss., MIT.
Frazier Lyn and Keith Rayner 1987, &amp;quot;Res-
olution of Syntactic Category Ambiguities: Eye
Movements in Parsing Lexically Ambiguous Sen-
tences&amp;quot; in Journal of Memory and Language,
26:505-526.
Kashkett Michael 1991, A Parameterised
Parser for English and Warlpiri, Ph.D Diss.,
MIT.
Kilbury James 1986, &amp;quot;Category Cooccurrence
Restrictions and the Elimination of Metarules&amp;quot;, in
Proc. of COLING, 50-55.
Knuth Donald 1965, &amp;quot;On the Translation of
Languages from Left to Right&amp;quot;, Information and
Control, 8.
Phillips John 1987, &amp;quot;A Computational Repre-
sentation for GPSG&amp;quot;, DAI Research Paper 316.
Ristad Eric 1990 ,Computational Structure of
Human Language, MIT Al Lab, TR 1260.
Shieber Stuart 1986, &amp;quot;A Simple Reconstruc-
tion of GPSG&amp;quot; in Proc. of COLING, 211-215.
Thompson Henry 1982, &amp;quot;Handling Metarules
in a Parser for GPSG&amp;quot; in Proc. of COLING.
Tomita Masaru 1985, Efficient Parsing for
Natural Language, Kluwer, Hingham, MA.
</reference>
<page confidence="0.997138">
290
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.002896">
<title confidence="0.996998">AN LR CATEGORY-NEUTRAL PARSER WITH LEFT CORNER PREDICTION</title>
<author confidence="0.999927">Paola Merlo</author>
<affiliation confidence="0.9509175">University of Maryland/ Universite de Geneve Faculte des Lettres</affiliation>
<address confidence="0.790905">CH-1211 Geneve 4</address>
<email confidence="0.916476">merlo@divsun.unige.cb</email>
<abstract confidence="0.996673204918033">In this paper we present a new parsing model of linguistic and computational interest. Linguistically, the relation between the parser and the theory of grammar adopted (Government and Binding (GB) theory as presented in Chomsky(1981, 1986a,b) is clearly specified. Computationally, this model adopts a mixed parsing procedure, by using left corner prediction in a modified LR parser. ON LINGUISTIC THEORY For a parser to be linguistically motivated, it must a linguistic theory, under some precise notion of transparency (see Abney 1987). GB theory is a modular theory of abstract principles. A parser which encodes a modular theory of grammar must fulfill apparently contradictory demands: for the parser to be explanatory it must maintain the modularity of the theory, while for the parser to be efficient, modularization must be minimized so that all potentially necessary inforis available at all We explore a possible solution to this contradiction. We observe that linguistic information can be classified into 5 different classes, as shown in (1), on the basis of content. we will call IC Classes. (1) a. Configurations: sisterhood, c-command, m-command, ±maximal projection ... b. Lexical features: ±N, ±V, ±Funct, ±c-selected, ±Strong Agr Syntactic features: ±Case, ±7, ±barrier. d. Locality information: minimality, binding, antecedent government. e. Referential information: ±D-linked, ±anaphor, ±pronominal. &apos;On efficiency of GB-based systems see Ristad(1990), Kashkett(1991). This classification can be used to specify precisely the amount of modularity in the parser. Berwick(1982:400ff) shows that a modular system is efficient only if modules that depend on each other are compiled, while independent modules not. We take the notion of correspond to IC Classes, in that primitives that belong to the same IC Class are dependent on each other, while primitives that belong to different IC Classes are independent from each other. We impose a modularity requirement that makes precise predictions for the design of the parser. Requirement (MR) primitives that belong to the same IC Class can be compiled in the parser. RECOVERING PHRASE STRUCTURE According to the MR, notions such as headedness, directionality, sisterhood, and maximal projection can be compiled and stored in a data structure, because these notions belong to the same IC Class, features are compiled into context-free rules in our parser. These basic X rules are augmented by A rules licensed by the part of Trace theory that deals with configurations. The crucial feature of this grammar is that nonterminals specify only the X projection level, and not the category. The full context-free grammar is shown in Figure 1. The recovery of phrase structure is a crucial component of a parser, as it builds the skeleton which is needed for feature annotation. It must be efficient and it must fail as soon as an error is encountered, in order to limit backtracking. An LR(k) parser (Knuth 1965) has these properties, since it is deterministic on unambiguous input, and it has been proved to recognize only. valid prefixes. In our parser, we compile the grammar above into an LALR(1) (Aho and 1972) parse table. The table has been modified 288 Figure 1: Category-Neutral Grammar in order to have more than one action for each Three stacks are used: a stack for the states traversed so far; a stack for the semantic attributes associated with each of the nodes; a tree stack of partial trees. The LR algorithm encoded in a which establishes a relation between two sets of 5-tuples, as shown x x x x x x x x Our parser is more elaborate and less restrictive than a standard LR parser, because it imposes conditions on the attributes of the states and it is nondeterministic. In order to reduce the amount of nondeterminism, some predictive power has been introduced. The cooccurence restrictions between categories, and subcategorization information of verbs is compiled in a table, which we call Left Corner Prediction Table (LC Table). By looking at the current token, at its category label, and its subcategorization frame, the number of choices of possible next states can be restricted. For instance, if the current token is a verb, and the LR table allows the parser either to project one level up to V&apos;, or it requires to create an empty object NP, then, on consulting the subcategorization information, the parser can eliminate the second option as incorrect if the verb is intransitive. RESULTS AND COMMENTS The design presented so far embodies the MR, since it compiles only dependent features in two tables off-line. Compared to the use of partially or fully instantiated context-free grammars, this modification necessary because the grammar compiled into the LR table is not an LR grammar. (2) is an of the set of input tokens, an of the set of states in the LR table, is an element of the set of attributes associated with state in the table, an element of the set of i.e. displaced element, and an element of the set of tokens predicted by the left corner table (see below).</abstract>
<note confidence="0.599198666666667">Grammar Instantiated X Number of Rules 51 16 Number of States 46 14 Shift/reduce confficts 224 24 Reduce/reduce conflicts 270 36 Figure 2: Numbers</note>
<abstract confidence="0.986214262711865">organization of the parsing algorithms has been found to be better on several grounds. Consider again the X grammar that we use in the parser, shown in Figure 1. One of the crucial features of this grammar is that the nonterminals are specified only for level and headedness. This version of the grammar is a recent result. In previous implementations of the parser, the projections the head in a rule were instantiated: for in- --+ YP . we find that on compiling the partially instantiated grammar the number of rules is increased proportionately to the number of categories, and so is the number of conflicts in the table. Figure 2 shows the relative sizes of the LALR(1) tables and the number of conflicts. Moreover, on closer inspection of the entries in the table, categories that belong to the same level of projection show the same reduce/reduce conflicts. This means that introducing unrestricted categorial information increases size of the table the numof conflicts in each entry, reducing the nondeterminism in the table. These findings confirm that categorial information can be factored out of the compiled table, as predicted by the MR. The information about cooccurrence restrictions, category and subcategorization frame is compiled in the Left Corner (LC) table, as described above. Using two compiled tables that interact on-line is better than compiling all the information into a fully instantiated, stancontext-free grammar for several it is more Practically, manipulating a small, highly abstract grammar is instantiated grammars have used, among others, by Tomita(1985) in an LR parser, and by Dorr(1990), Fong(1991) in GB-based parsers. &apos;It has been argued elsewhere that for context-free parsing algorithms, the size of the grammar (which is a constant factor) can easily become the predominant factor for all useful inputs (see Berwick and Weinberg 1982). Work on compilation of parsers that use GPSG seems to point in the same direction. The separation of structural information from cooccurence restrictions is advocated in Kilbury(1986); both Shieber(1986) and Phillips(1987) argue that the combinatorial explosion (Barton 1985) of a fully expanded ED/LP formalism can be avoided by using feature variables in the compiled grammar. See also Thompson 1982. - Y&amp;quot; X&apos; X&apos; Y&amp;quot; X Y&amp;quot; - Y&amp;quot; X - Y&amp;quot; X&apos; —+ X&apos; Y&amp;quot; Y&amp;quot; X&amp;quot; - X&amp;quot; Y&amp;quot; empty empty specification complementation modification adjunction empty heads empty Xmaxs 289 much easier. It is easy to maintain and to embed in a full-fledged parsing system. Linguistically, a fully-instantiated parser would not be transparent to the theory and it would be language dependent. Finally, it could not model some experimental psycholinguistic evidence, which we present below. PSYCHOLINGUISTIC SUPPORT A reading task is presented in Frazier and Rayner 1987 where eye movements are monitored: they find that in locally ambiguous contexts, the amregion takes than an unambiguous counterpart, while a slow down in processing time is registered in the disambiguating region. This suggests that selection of major categorial information in lexically ambiguous sentences is This delay means that the parser must be able to operate in absence of categorial information, making use of a set of category-neutral phrase structure rules. This separation of itemdependent and item-independent information is encoded in the grammar used in our parser. A parser that uses instantiated categories would have to store categorial cooccurence restrictions in a different data structure, to be consulted in case of lexically ambiguous inputs. Such design would be redundant, because categorial information would be encoded twice. CONCLUSION The module described in this paper is implemented and embedded in a parser for English of limited coverage, but it has some shortcomings, which axe currently under investigation. Refinements are needed to compile the LC table automatically, to define IC Classes predictively instead of by exhaustive listing. Finally, a formal proof needed to show that our definition of indepenalways going to increase efficiency. ACKNOWLEDGEMENTS This work has benefited from suggestions by Bonnie Dorr, Paul Gorrell, Eric Wehrli and Amy Weinberg. The author is supported by a Fellowship from the Swiss-Italian Foundation. instance, in the sentences in (3), (from Frazier and Rayner 1987) the ambiguous target item, shown in capitals in (3)a, takes less time than the unambiguous control in (3)b, while there is a slow down in the disambiguating material (in italics). a. The warehouse FIRES numerous each year. That warehouse fires numerous each year.</abstract>
<note confidence="0.796189115384615">REFERENCES Abney Steven 1987, &amp;quot;GB Parsing and Psychological Reality&amp;quot; in MIT Parsing Volume, Cognitive Science Center. A.V. and J.D. Ullman 1972, Theory Parsing, Translation and Compiling, Prentice- Hall, Englewood Cliffs, NJ. Barton Edward 1985, &amp;quot;The Computational of ID/LP Parsing&amp;quot; in of the ACL. Robert 1982, Principles and Acquisition of Syntactic Knowledge, Diss., MIT. Berwick Robert and Amy Weinberg 1982, &amp;quot; Parsing Efficiency, Computational Complexity and the Evaluation of Grammatical Theories &amp;quot; , Inquiry, Noam 1981, on Governand Binding, Dordrecht. Noam 1986a, of Lan- Its Nature, Origin and Use, New York. Noam 1986b, Cambridge MA. Bonnie J. 1990,Lezical Strucand Machine Translation, Diss., MIT. Sandiway 1991, Properties of Principle-based Grammatical Theories, Ph.D Diss., MIT. Frazier Lyn and Keith Rayner 1987, &amp;quot;Resolution of Syntactic Category Ambiguities: Eye Movements in Parsing Lexically Ambiguous Senin of Memory and Language, 26:505-526. Michael 1991, A for English and Warlpiri, Diss., MIT. Kilbury James 1986, &amp;quot;Category Cooccurrence Restrictions and the Elimination of Metarules&amp;quot;, in of COLING, Knuth Donald 1965, &amp;quot;On the Translation of from Left to Right&amp;quot;, and Phillips John 1987, &amp;quot;A Computational Representation for GPSG&amp;quot;, DAI Research Paper 316. Eric 1990 Structure of Language, Lab, TR 1260. Shieber Stuart 1986, &amp;quot;A Simple Reconstrucof GPSG&amp;quot; in of COLING, Thompson Henry 1982, &amp;quot;Handling Metarules a Parser for GPSG&amp;quot; in of COLING. Masaru 1985, Parsing for Language, Hingham, MA. 290</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Abney Steven</author>
</authors>
<title>GB Parsing and Psychological Reality&amp;quot;</title>
<date>1987</date>
<institution>MIT Parsing Volume, Cognitive Science Center.</institution>
<note>in</note>
<marker>Steven, 1987</marker>
<rawString>Abney Steven 1987, &amp;quot;GB Parsing and Psychological Reality&amp;quot; in MIT Parsing Volume, Cognitive Science Center.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A V Aho</author>
<author>J D Ullman</author>
</authors>
<date>1972</date>
<booktitle>The Theory of Parsing, Translation and Compiling, PrenticeHall,</booktitle>
<location>Englewood Cliffs, NJ.</location>
<contexts>
<context position="3509" citStr="Aho and Ullman 1972" startWordPosition="547" endWordPosition="550">ar is that nonterminals specify only the X projection level, and not the category. The full context-free grammar is shown in Figure 1. The recovery of phrase structure is a crucial component of a parser, as it builds the skeleton which is needed for feature annotation. It must be efficient and it must fail as soon as an error is encountered, in order to limit backtracking. An LR(k) parser (Knuth 1965) has these properties, since it is deterministic on unambiguous input, and it has been proved to recognize only. valid prefixes. In our parser, we compile the grammar shown above into an LALR(1) (Aho and Ullman 1972) parse table. The table has been modified 288 Figure 1: Category-Neutral Grammar in order to have more than one action for each table entry.2 Three stacks are used: a stack for the states traversed so far; a stack for the semantic attributes associated with each of the nodes; a tree stack of partial trees. The LR algorithm is encoded in a parse predicate, which establishes a relation between two sets of 5-tuples, as shown in (2).2 (2) Ti x x Ai x x PTi Ti x S; x A; x C; x PT; Our parser is more elaborate and less restrictive than a standard LR parser, because it imposes conditions on the attri</context>
</contexts>
<marker>Aho, Ullman, 1972</marker>
<rawString>Aho A.V. and J.D. Ullman 1972, The Theory of Parsing, Translation and Compiling, PrenticeHall, Englewood Cliffs, NJ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Barton Edward</author>
</authors>
<title>The Computational Difficulty of ID/LP Parsing&amp;quot;</title>
<date>1985</date>
<booktitle>in Proc. of the ACL.</booktitle>
<marker>Edward, 1985</marker>
<rawString>Barton Edward 1985, &amp;quot;The Computational Difficulty of ID/LP Parsing&amp;quot; in Proc. of the ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Berwick Robert</author>
</authors>
<title>Locality Principles and the Acquisition of Syntactic Knowledge,</title>
<date>1982</date>
<location>Ph.D Diss., MIT.</location>
<marker>Robert, 1982</marker>
<rawString>Berwick Robert 1982, Locality Principles and the Acquisition of Syntactic Knowledge, Ph.D Diss., MIT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Berwick Robert</author>
<author>Amy Weinberg</author>
</authors>
<title>Parsing Efficiency,</title>
<date>1982</date>
<booktitle>Computational Complexity and the Evaluation of Grammatical Theories &amp;quot; , Linguistic Inquiry,</booktitle>
<pages>13--165</pages>
<marker>Robert, Weinberg, 1982</marker>
<rawString>Berwick Robert and Amy Weinberg 1982, &amp;quot; Parsing Efficiency, Computational Complexity and the Evaluation of Grammatical Theories &amp;quot; , Linguistic Inquiry, 13:165-191.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chomsky Noam</author>
</authors>
<date>1981</date>
<booktitle>Lectures on Government and Binding, Foris,</booktitle>
<location>Dordrecht.</location>
<marker>Noam, 1981</marker>
<rawString>Chomsky Noam 1981, Lectures on Government and Binding, Foris, Dordrecht.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Chomsky Noam</author>
</authors>
<title>1986a, Knowledge of Language: Its Nature, Origin and Use, Praeger,</title>
<location>New York.</location>
<marker>Noam, </marker>
<rawString>Chomsky Noam 1986a, Knowledge of Language: Its Nature, Origin and Use, Praeger, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chomsky Noam</author>
</authors>
<date>1986</date>
<publisher>Barriers,MIT Press,</publisher>
<location>Cambridge MA.</location>
<marker>Noam, 1986</marker>
<rawString>Chomsky Noam 1986b, Barriers,MIT Press, Cambridge MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dorr Bonnie J</author>
</authors>
<title>Conceptual Structure and Machine Translation,</title>
<date>1990</date>
<location>Ph.D Diss., MIT.</location>
<marker>J, 1990</marker>
<rawString>Dorr Bonnie J. 1990,Lezical Conceptual Structure and Machine Translation, Ph.D Diss., MIT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fong Sandiway</author>
</authors>
<date>1991</date>
<booktitle>Computational Properties of Principle-based Grammatical Theories, Ph.D</booktitle>
<location>Diss., MIT.</location>
<marker>Sandiway, 1991</marker>
<rawString>Fong Sandiway 1991, Computational Properties of Principle-based Grammatical Theories, Ph.D Diss., MIT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frazier Lyn</author>
<author>Keith Rayner</author>
</authors>
<title>Resolution of Syntactic Category Ambiguities: Eye Movements in Parsing Lexically Ambiguous Sentences&amp;quot;</title>
<date>1987</date>
<journal>in Journal of Memory and Language,</journal>
<pages>26--505</pages>
<marker>Lyn, Rayner, 1987</marker>
<rawString>Frazier Lyn and Keith Rayner 1987, &amp;quot;Resolution of Syntactic Category Ambiguities: Eye Movements in Parsing Lexically Ambiguous Sentences&amp;quot; in Journal of Memory and Language, 26:505-526.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kashkett Michael</author>
</authors>
<title>A Parameterised Parser for English and Warlpiri,</title>
<date>1991</date>
<location>Ph.D Diss., MIT.</location>
<marker>Michael, 1991</marker>
<rawString>Kashkett Michael 1991, A Parameterised Parser for English and Warlpiri, Ph.D Diss., MIT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kilbury James</author>
</authors>
<title>Category Cooccurrence Restrictions and the Elimination of Metarules&amp;quot;,</title>
<date>1986</date>
<booktitle>in Proc. of COLING,</booktitle>
<pages>50--55</pages>
<marker>James, 1986</marker>
<rawString>Kilbury James 1986, &amp;quot;Category Cooccurrence Restrictions and the Elimination of Metarules&amp;quot;, in Proc. of COLING, 50-55.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Knuth Donald</author>
</authors>
<title>On the Translation of Languages from Left to Right&amp;quot;,</title>
<date>1965</date>
<journal>Information and Control,</journal>
<volume>8</volume>
<marker>Donald, 1965</marker>
<rawString>Knuth Donald 1965, &amp;quot;On the Translation of Languages from Left to Right&amp;quot;, Information and Control, 8.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Phillips John</author>
</authors>
<title>A Computational Representation for GPSG&amp;quot;,</title>
<date>1987</date>
<journal>DAI Research Paper</journal>
<volume>316</volume>
<marker>John, 1987</marker>
<rawString>Phillips John 1987, &amp;quot;A Computational Representation for GPSG&amp;quot;, DAI Research Paper 316.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ristad Eric</author>
</authors>
<date>1990</date>
<journal>Computational Structure of Human Language, MIT Al Lab, TR</journal>
<pages>1260</pages>
<marker>Eric, 1990</marker>
<rawString>Ristad Eric 1990 ,Computational Structure of Human Language, MIT Al Lab, TR 1260.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shieber Stuart</author>
</authors>
<title>A Simple Reconstruction of GPSG&amp;quot; in</title>
<date>1986</date>
<booktitle>Proc. of COLING,</booktitle>
<pages>211--215</pages>
<marker>Stuart, 1986</marker>
<rawString>Shieber Stuart 1986, &amp;quot;A Simple Reconstruction of GPSG&amp;quot; in Proc. of COLING, 211-215.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thompson Henry</author>
</authors>
<title>Handling Metarules in a Parser for GPSG&amp;quot; in</title>
<date>1982</date>
<booktitle>Proc. of COLING.</booktitle>
<marker>Henry, 1982</marker>
<rawString>Thompson Henry 1982, &amp;quot;Handling Metarules in a Parser for GPSG&amp;quot; in Proc. of COLING.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tomita Masaru</author>
</authors>
<date>1985</date>
<institution>Efficient Parsing for Natural Language, Kluwer,</institution>
<location>Hingham, MA.</location>
<marker>Masaru, 1985</marker>
<rawString>Tomita Masaru 1985, Efficient Parsing for Natural Language, Kluwer, Hingham, MA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>