<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000007">
<title confidence="0.9899315">
Real-Time Detection, Tracking, and Monitoring of Automatically
Discovered Events in Social Media
</title>
<author confidence="0.919545">
Miles Osborne∗ Sean Moran Richard McCreadie
</author>
<affiliation confidence="0.886828">
Edinburgh Edinburgh Glasgow
</affiliation>
<author confidence="0.867456">
Alexander Von Lunen Martin Sykora Elizabeth Cano
</author>
<affiliation confidence="0.694146">
Loughborough Loughborough Aston
</affiliation>
<author confidence="0.901976">
Neil Ireson Craig Macdonald Iadh Ounis Yulan He
</author>
<affiliation confidence="0.528226">
Sheffield Glasgow Glasgow Aston
</affiliation>
<author confidence="0.960968">
Tom Jackson Fabio Ciravegna Ann O’Brien
</author>
<affiliation confidence="0.888059">
Loughborough Sheffield Loughborough
</affiliation>
<sectionHeader confidence="0.977764" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999542">
We introduce ReDites, a system for real-
time event detection, tracking, monitoring
and visualisation. It is designed to as-
sist Information Analysts in understand-
ing and exploring complex events as they
unfold in the world. Events are automat-
ically detected from the Twitter stream.
Then those that are categorised as be-
ing security-relevant are tracked, geolo-
cated, summarised and visualised for the
end-user. Furthermore, the system tracks
changes in emotions over events, sig-
nalling possible flashpoints or abatement.
We demonstrate the capabilities of ReD-
ites using an extended use case from the
September 2013 Westgate shooting inci-
dent. Through an evaluation of system la-
tencies, we also show that enriched events
are made available for users to explore
within seconds of that event occurring.
</bodyText>
<sectionHeader confidence="0.989625" genericHeader="categories and subject descriptors">
1 Introduction and Challenges
</sectionHeader>
<bodyText confidence="0.9980178">
Social Media (and especially Twitter) has become
an extremely important source of real-time infor-
mation about a massive number of topics, ranging
from the mundane (what I had for breakfast) to the
profound (the assassination of Osama Bin Laden).
</bodyText>
<note confidence="0.364237">
∗Corresponding author: miles@inf.ed.ac.uk
</note>
<bodyText confidence="0.999526689655172">
Detecting events of interest, interpreting and mon-
itoring them has clear economic, security and hu-
manitarian importance.
The use of social media message streams for
event detection poses a number of opportunities
and challenges as these streams are: very high in
volume, often contain duplicated, incomplete, im-
precise and incorrect information, are written in
informal style (i.e. short, unedited and conver-
sational), generally concern the short-term zeit-
geist; and finally relate to unbounded domains.
These characteristics mean that while massive and
timely information sources are available, domain-
relevant information may be mentioned very infre-
quently. The scientific challenge is therefore the
detection of the signal within that noise. This chal-
lenge is exacerbated by the typical requirement
that documents must be processed in (near) real-
time, such that events can be promptly acted upon.
The ReDites system meets these requirements
and performs event detection, tracking, summari-
sation, categorisation and visualisation. To the
best of our understanding, it is the first published,
large-scale, (near) real-time Topic Detection and
Tracking system that is tailored to the needs of in-
formation analysts in the security sector. Novel as-
pects of ReDites include the first large-scale treat-
ment of spuriously discovered events and tailoring
the event stream to the security domain.
</bodyText>
<page confidence="0.994664">
37
</page>
<note confidence="0.778869">
Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations, pages 37–42,
Baltimore, Maryland USA, June 23-24, 2014. c�2014 Association for Computational Linguistics
</note>
<figureCaption confidence="0.997967">
Figure 1: System Diagram
</figureCaption>
<sectionHeader confidence="0.998942" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999598714285715">
A variety of event exploration systems have previ-
ously been proposed within the literature. For in-
stance, Trend Miner1 enables the plotting of term
times series, drawn from Social Media (Preoiiuc-
Pietro and Cohn, 2013). It has a summarisation
component and is also multilingual. In contrast,
our system is focussed instead upon documents
(Tweets) and is more strongly driven by real-
time considerations. The Social Sensor (Aiello et
al., 2013) system facilitates the tracking of pre-
defined events using social streams.
In contrast, we track all automatically discov-
ered events we find in the stream. The Twitci-
dent (Abel et al., 2012) project deals with user-
driven searching through Social Media with re-
spect to crisis management. However, unlike
ReDites, these crises are not automatically dis-
covered. The LRA Crisis Tracker2 has a similar
purpose as ReDites. However, while LRA uses
crowdsourcing, our ReDites system is fully auto-
matic.
</bodyText>
<sectionHeader confidence="0.791107" genericHeader="method">
3 System Overview and Architecture
</sectionHeader>
<bodyText confidence="0.9055975">
Figure 1 gives a high-level system description.
The system itself is loosely coupled, with ser-
vices from different development teams coordi-
nating via a Thrift interface. An important as-
pect of this decoupled design is that it enables ge-
ographically dispersed teams to coordinate with
each other. Event processing is comprised of the
following main 4 steps:
1) New events are detected. An event is described
by the first Tweet that we find discussing it and
is defined as something that is captured within a
single Tweet (Petrovic et al., 2010).
</bodyText>
<footnote confidence="0.999941">
1http://www.trendminer-project.eu/
2http://www.lracrisistracker.com/
</footnote>
<listItem confidence="0.8296273125">
2) When an event is first discovered it may initially
have little information associated with it. Further-
more, events evolve over time. Hence, the sec-
ond step involves tracking the event – finding new
posts relating to it as they appear and maintaining
a concise updated summary of them.
3) Not all events are of interest to our intended
audience, so we organise them. In particular, we
determine whether an event is security-related (or
otherwise), geolocate it, and detect how prominent
emotions relating to that event evolve.
4) Finally, we visualise the produced stream of
summarised, categorised and geolocated events
for the analyst(s), enabling them to better make
sense of the mass of raw information present
within the original Twitter stream.
</listItem>
<bodyText confidence="0.955846">
Section 6 further describes these four steps.
</bodyText>
<sectionHeader confidence="0.983669" genericHeader="method">
4 Data and Statistics
</sectionHeader>
<bodyText confidence="0.99983288">
For the deployment of ReDites, we use the Twit-
ter 1% streaming sample. This provides approx-
imately four million Tweets per day, at a rate of
about 50 Tweets a second. Table 1 gives some
illustrative statistics on a sample of data from
September 2013 to give a feel for the rate of data
and generated events we produce. Table 2 gives
timing information, corresponding with the major
components of our system: time to process and
time to transfer to the next component, which is
usually a service on another machine on the in-
ternet. The latency of each step is measured in
seconds over a 1000 event sample. ’Transfer’ la-
tencies is the time between one step completing
and the output arriving at the next step to be pro-
cessed (Thrift transfer time). Variance is the aver-
age deviation from the mean latency over the event
sample.
When processing the live stream, we ingest data
at an average rate of 50 Tweets per second and de-
tect an event (having geolocated and filtered out
non-English or spam Tweets) with a per-Tweet la-
tency of 0.6±0.55 seconds. Figure 2 gives laten-
cies for the various major components of the sys-
tem. All processing uses commodity machines.
</bodyText>
<sectionHeader confidence="0.946778" genericHeader="method">
5 The Westgate Shopping Mall Attack
</sectionHeader>
<bodyText confidence="0.9999715">
As an illustrative example of a complex recent
event, we considered a terrorist attack on the 21st
of September, 2013.3 This event is used to demon-
strate how our system can be used to understand it.
</bodyText>
<footnote confidence="0.974295">
3https://en.wikipedia.org/wiki/Westgate shopping mall shooting
</footnote>
<page confidence="0.996622">
38
</page>
<table confidence="0.9995795">
Measure Event Detection Tracking and Summ Emotion Ident Security Class
Detection Transfer Ranking Summ Transfer Ident Transfer Class
Latency (sec.) 0.6226 0.7929 2.2892 0.0409 0.0519 0.2881 0.1032 0.1765
Variance (sec.) 0.5518 0.2987 1.3079 0.0114 0.0264 0.1593 0.0195 0.0610
</table>
<tableCaption confidence="0.967563">
Table 2: Event exploration timing and timing variance (seconds)
</tableCaption>
<table confidence="0.83668775">
Data Rate
Tweets 35 Million
Detected events 533k
Categorised (security-related) events 5795
</table>
<tableCaption confidence="0.9390245">
Table 1: Data statistics, 1st September - 30th
September 2013
</tableCaption>
<bodyText confidence="0.9999092">
In summary, a shopping Mall in Kenya was at-
tacked from the 21st of September until the 24th
of September. This event was covered by tradi-
tional newswire, by victims caught up in it as well
as by terrorist sympathisers, often in real-time.
As we later show, even though we only operate
over 1% of the Twitter Stream, we are still able to
find many (sub) events connected with this attack.
There were 6657 mentions of Westgate in Septem-
ber 2013 in our 1% of sample Tweets.
</bodyText>
<sectionHeader confidence="0.97665" genericHeader="method">
6 Major Components
</sectionHeader>
<subsectionHeader confidence="0.996815">
6.1 Event Detection
</subsectionHeader>
<bodyText confidence="0.999993857142857">
Building upon an established Topic Detection and
Tracking (TDT) methodology, which assumes that
each new event corresponds with seeing some
novel document. the event detection component
uses a hashing approach that finds novel events4
in constant time (Petrovic et al., 2010). To make
it scale and process thousands of documents each
second, it can optionally be distributed over a clus-
ter of machines (via Storm5) (McCreadie et al.,
2013). The system favours recall over precision
and has been shown to have high recall, but a low
precision (Petrovic et al., 2013). Given that we are
presenting discovered events to a user and we do
not want to overload them with false positives, we
need to take steps to increase precision (ie present
fewer false positives).
We use a content categoriser to determine
whether a discovered event is worth reporting.
Using more than 100k automatically discovered
events from the Summer of 2011, we created a
training set and manually labelled each Tweet:
</bodyText>
<footnote confidence="0.96218325">
4An event is defined as something happening at a given
time and place. Operationally, this means something that can
be described within a Tweet.
5http://storm.incubator.apache.org/
</footnote>
<bodyText confidence="0.994412543478261">
was it content bearing (what you might want to
read about in traditional newswire) or irrelevant
/ not useful. With this labelled data, we used
a Passive-Aggressive algorithm to build a con-
tent classifier. Features were simply unigrams in
Tweets. This dramatically improves precision, to
70%, with a drop in recall to 25% (when tested
on 73k unseen events, manually labelled by two
annotators). We can change the precision-recall
boundary as needed by adjusting the associated
decision boundary. We do not consider non-
English language Tweets in this work and they are
filtered out (Lui and Baldwin, 2012).
Geolocation is important, as we are particu-
larly interested in events that occur at a spe-
cific location. We therefore additionally geolo-
cate any Tweets that were not originally ge-
olocated. To geotag those Tweets that do not
have any geo-location information we use the
Tweet text and additional Tweet metadata (lan-
guage, city/state/country name, user description
etc), to learn a Li penalised least squares regres-
sor (LASSO) to predict the latitude and longitude.
The model is learnt on nearly 20 million geo-
located Tweets collected from 2010-2014. Exper-
iments on a held-out test dataset show we can lo-
calise Tweets to within a mean distance of 433 km
of their true location. This performance is based
on the prediction of individual tweet location and
not, as in most previous work, on the location of a
user who is represented by a set of tweets. Further-
more we are not restricted to a single, well-defined
area (such as London) and we also evaluate over a
very large set of unfiltered tweets.
Turning to the Westgate example, the first men-
tion of it in our data was at 10:02 UTC. There were
57 mentions of Westgate in discovered events,
of which 42 mentioned Kenya and 44 mentioned
Nairobi. The first mention itself in Twitter was at
09:38 UTC. We declared it an event (having seen
enough evidence and post-processing it) less than
one second later:
Westgate under siege. Armed thugs. Gun-
shots reported. Called the managers, phones are
off/busy. Are cops on the way?
We also captured numerous informative sub-
</bodyText>
<page confidence="0.997225">
39
</page>
<bodyText confidence="0.909094666666667">
events covering different aspects and sides of the
central Westgate siege event, four of these are il-
lustrated below:
</bodyText>
<table confidence="0.864701846153846">
Post Time Tweet
10:05am RT @ItsMainaKageni: My friend Ruhila Adatia
passed away together with her unborn child. Please
keep her family and new husband in your thou
10:13am RT howden africa: Kenya police firing tear gas and
warning shots at Kenyan onlookers. Crowd getting
angry #westgate
10:10am RT @BreakingNews: Live video: Local news cov-
erage of explosions, gunfire as smoke billows from
Nairobi, Kenya, mall - @KTNKenya
10:10am ”Purportedly official Twitter account for al-Shabaab
Tweeting on the Kenyan massacre HSM Press
(http://t.co/XnCz9BulGj)
</table>
<subsectionHeader confidence="0.996458">
6.2 Tracking and Summarisation
</subsectionHeader>
<bodyText confidence="0.99988172">
The second component of the event exploration
system is Tracking and Summarisation (TaS). The
aim of this component is to use the underlying
Tweet stream to produce an overview for each
event produced by the event detection stage, up-
dating this overview as the event evolves. Track-
ing events is important when dealing with live, on-
going disasters, since new information can rapidly
emerge over time.
TaS takes as input a Tweet representing an event
and emits a list of Tweets summarising that event
in more detail. TaS is comprised of two dis-
tinct sub-components, namely: real-time tracking;
and event summarisation. The real-time track-
ing component maintains a sliding window of
Tweets from the underlying Tweet stream. As
an event arrives, the most informative terms con-
tained6 form a search query that is used to retrieve
new Tweets about the event. For example, tak-
ing the Tweet about the Westgate terrorist attack
used in the previous section as input on September
21st 2013 at 10:15am, the real-time tracking sub-
component retrieved the following related Tweets
from the Twitter Spritzer (1%) steam7 (only 5/100
are shown):
</bodyText>
<subsectionHeader confidence="0.789348">
ID Post Time Tweet Score
</subsectionHeader>
<footnote confidence="0.573236133333333">
1 10:05am Westgate under siege. Armed thugs. Gun- 123.7
shots reported. Called the managers, phones are
off/busy. Are cops on the way?
2 10:13am DO NOT go to Westgate Mall. Gunshots and 22.9
mayhem, keep away until further notice.
3 10:13am RT DO NOT go to Westgate Mall. Gunshots 22.9
and mayhem, keep away until further notice.
4 10:10am Good people please avoid Westgate Mall. @Po- 22.2
liceKE @IGkimaiyo please act ASAP, reports
of armed attack at #WestgateMall
5 10:07am RT @steve enzo: @kirimiachieng these thugs 11.5
won’t let us be
6Nouns, adjectives, verbs and cardinal numbers
7https://dev.twitter.com/docs/streaming-
apis/streams/public
</footnote>
<bodyText confidence="0.99992448">
The second TaS sub-component is event sum-
marisation. This sub-component takes as input the
Tweet ranking produced above and performs ex-
tractive summarisation (Nenkova and McKeown,
2012) upon it, i.e. it selects a subset of the ranked
Tweets to form a summary of the event. The goals
of event summarisation are two-fold. First, to re-
move any Tweets from the above ranking that are
not relevant to the event (e.g. Tweet 5 in the exam-
ple above). Indeed when an event is first detected,
there may be few relevant Tweets yet posted. The
second goal is to remove redundancy from within
the selected Tweets, such as Tweets 2 and 3 in the
above example, thereby focussing the produced
summary on novelty. To tackle the first of these
goals, we leverage the score distribution of Tweets
within the ranking to identify those Tweets that are
likely background noise. When an event is first
detected, few relevant Tweets will be retrieved,
hence the mean score over the Tweets is indicative
of non-relevant Tweets. Tweets within the rank-
ing whose scores diverge from the mean score in
the positive direction are likely to be on-topic. We
therefore, make an include/exclude decision for
each Tweet t in the ranking R:
</bodyText>
<equation confidence="0.9727026">
1 if score(t) − SD(R) &gt; 0
and |SD(R) − score(t) |&gt;
θ &apos; |R |EVER |SD(R) − score(e)|
0 otherwise
(1)
</equation>
<bodyText confidence="0.79323008">
where SD(R) is the standard deviation of scores
in R, score(t) is the retrieval score for Tweet t and
θ is a threshold parameter that describes the mag-
nitude of the divergence from the mean score that
a Tweet must have before it is included within the
summary. Then, to tackle the issue of redundancy,
we select Tweets in a greedy time-ordered man-
ner (earliest first). A similarity (cosine) threshold
between the current Tweet and each Tweet previ-
ously selected is used to remove those that are tex-
tually similar, resulting in the following extractive
summary:
ID Post Time Tweet Score
1 10:05am Westgate under siege. Armed thugs. 123.7
Gunshots reported. Called the man-
agers, phones are off/busy. Are cops
on the way?
2 10:13am DO NOT go to Westgate Mall. Gun- 22.9
shots and mayhem, keep away until
further notice.
4 10:10am Good people please avoid Westgate 22.2
Mall. @PoliceKE @IGkimaiyo please
act ASAP, reports of armed attack at
#WestgateMall
Finally, the TaS component can be used to track
</bodyText>
<equation confidence="0.7244585">
⎧
⎪ ⎪⎨⎪⎪
⎪⎪⎪⎪⎩
include(t, R) =
</equation>
<page confidence="0.97384">
40
</page>
<bodyText confidence="0.999921">
events over time. In this case, instead of tak-
ing a new event as input from the event detec-
tion component, a previously summarised event
can be used as a surrogate. For instance, a user
might identify an event that they want to track.
The real-time search sub-component retrieves new
Tweets about the event posted since that event was
last summarised. The event summarisation sub-
component then removes non-relevant and redun-
dant Tweets with respect to those contained within
the previous summary, producing a new updated
summary.
</bodyText>
<subsectionHeader confidence="0.999866">
6.3 Organising Discovered Events
</subsectionHeader>
<bodyText confidence="0.999973916666667">
The events we discover are not targeted at infor-
mation analysts. For example, they contain sports
updates, business acquisitions as well as those that
are genuinely relevant and can bear various opin-
ions and degrees of emotional expression. We
therefore take steps to filter and organise them for
our intended audience: we predict whether they
have a specific security-focus and finally predict
an emotional label for events (which can be useful
when judging changing viewpoints on events and
highlighting extreme emotions that could possibly
motivate further incidents).
</bodyText>
<subsectionHeader confidence="0.9422">
6.3.1 Security-Related Event Detection
</subsectionHeader>
<bodyText confidence="0.999095581395349">
We are particularly interested in security-related
events such as violent events, natural disasters, or
emergency situations. Given a lack of in-domain
labelled data, we resort to a weakly supervised
Bayesian modelling approach based on the previ-
ously proposed Violence Detection Model (VDM)
(Cano et al., 2013) for identifying security events.
In order to differentiate between security and
non-security related events, we extract words re-
lating to security events from existing knowledge
sources such as DBpedia and incorporate them as
priors into the VDM model learning. It should be
noted that such a word lexicon only provides ini-
tial prior knowledge into the model. The model
will automatically discover new words describing
security-related events.
We trained the VDM model on a randomly
sampled 10,581 Tweets from the TREC Mi-
croblog 2011 corpus (McCreadie et al., 2012)
and tested the model on 1,759 manually labelled
Tweets which consist of roughly the same num-
ber of security-related and non-security related
Tweets. Our results show that the VDM model
achieved 85.8% in F-measure for the identification
of security-related Tweets, which is not far from
the F-measure of 90% obtained using the super-
vised Naive Bayes classifier despite using no la-
belled data in the model.
Here, we derived word priors from a total
of 32,174 documents from DBpedia and ex-
tracted 1,612 security-related words and 1,345
non-security-related words based on the measure-
ment of relative word entropy. We then trained
the VDM model by setting the topic number to
50 and using 7,613 event Tweets extracted from
the Tweets collected during July-August 2011 and
September 2013 in addition to 10,581 Tweets from
the TREC Microblog 2011 corpus. In the afore-
mentioned Westgate example, we classify 24% of
Tweets as security-related out of a total of 7,772
summary Tweets extracted by the TaS component.
Some of the security-related Tweets are listed be-
low8:
</bodyText>
<figure confidence="0.734120666666667">
ID Post Time Tweet
1 9:46am Like Bin Laden kind of explosion?
”@The realBIGmeat:
There is an explosion at westgate!”
2 10:08am RT @SmritiVidyarthi: DO NOT go to Westgate
Mall. Gunshots and mayhem, keep away till further no-
tice.
3 10:10am RT @juliegichuru: Good people please avoid
Westgate. @PoliceKE @IGkimaiyo please act
ASAP, reports of armed attack at #WestgateMall.
4 10:13am there has bn shooting @ Westgate which is suspected
to b of gangs there is tension rt nw....
</figure>
<subsectionHeader confidence="0.608584">
6.3.2 Emotion
</subsectionHeader>
<bodyText confidence="0.9999431">
Security-related events can be fraught, with emo-
tionally charged posts possibly evolving over time,
reflecting ongoing changes in underlying events.
Eight basic emotions, as identified in the psychol-
ogy literature (see (Sykora et al., 2013a) for a de-
tailed review of this literature) are covered, specif-
ically; anger, confusion, disgust, fear, happiness,
sadness, shame and surprise. Extreme values –as
well as their evolution– can be useful to an ana-
lyst (Sykora et al., 2013b). We detect enotions in
Tweets and support faceted browing. The emotion
component assigns labels to Tweets representing
these emotions. It is based upon a manually con-
structed ontology, which captures the relationships
between these emotions and terms (Sykora et al.,
2013a).
We sampled the summarised Tweets of the
Westgate attack, starting from the event detection
and following the messages over a course of seven
days. In the relevant Tweets, we detected that
</bodyText>
<footnote confidence="0.976865">
8Note some Tweets happen on following days.
</footnote>
<page confidence="0.999235">
41
</page>
<bodyText confidence="0.992095333333333">
8.6% had emotive terms in them, which is in line
with the aforementioned literature. Some example
expressions of emotion include:
</bodyText>
<note confidence="0.7034542">
Time Tweet Emotions
03:34 -) Ya so were those gunshots outside Fear
of gables?! I’m terrified ?
06:27 -) I’m so impressed @ d way. Kenyans r handling d siege. Surprise
14:32 -) All you xenophobic idiots spewing anti-Muslim Fear
</note>
<bodyText confidence="0.959847333333333">
bullshit need to -get in one of these donation lines Disgust
and see how wrong you ?
For Westgate, the emotions of sadness, fear and
surprise dominated. Very early on the emotions of
fear and sadness were expressed, as Twitter users
were terrified by the event and saddened by the
loss of lives. Sadness and fear were – over time –
the emotions that were stated most frequently and
constantly, with expressions of surprise, as users
were shocked about what was going on, and some
happiness relating to when people managed to
escape or were rescued from the mall. Generally
speaking, factual statements in the Tweets were
more prominent than emotive ones. This coincides
with the emotive Tweets that represented fear and
surprise in the beginning, as it was not clear what
had happened and Twitter users were upset and
tried to get factual information about the event.
</bodyText>
<subsectionHeader confidence="0.975553">
6.4 Visual Analytics
</subsectionHeader>
<bodyText confidence="0.999992117647059">
The visualisation component is designed to facili-
tate the understanding and exploration of detected
events. It offers faceted browsing and multiple vi-
sualisation tools to allow an information analyst
to gain a rapid understanding of ongoing events.
An analyst can constrain the detected events us-
ing information both from the original Tweets (e.g.
hashtags, locations, user details) and from the up-
dated summaries derived by ReDites. The ana-
lyst can also view events using facet values, loca-
tions/keywords in topic maps and time/keywords
in multiple timelines. By combining informa-
tion dimensions, the analyst can determine pat-
terns across dimensions to determine if an event
should be acted upon – e.g the analyst can choose
to view Tweets, which summarise highly emotive
events, concerning middle eastern countries.
</bodyText>
<sectionHeader confidence="0.999761" genericHeader="discussions">
7 Discussion
</sectionHeader>
<bodyText confidence="0.999984769230769">
We have presented ReDites, the first published
system that carries out large-scale event detection,
tracking summarisation and visualisation for the
security sector. Events are automatically identified
and those that are relevant to information analysts
are quickly made available for ongoing monitor-
ing. We showed how the system could be used
to help understand a complex, large-scale security
event. Although our system is initially specialised
to the security sector, it is easy to repurpose it to
other domains, such as natural disasters or smart
cities. Key aspects of our approach include scala-
bility and a rapid response to incoming data.
</bodyText>
<sectionHeader confidence="0.996473" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.963525">
This work was funded by EPSRC grant
EP/L010690/1. MO also acknowledges sup-
port from grant ERC Advanced Fellowship
249520 GRAMPLUS.
</bodyText>
<sectionHeader confidence="0.996363" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999969055555555">
F. Abel, C. Hauff, G.-J. Houben, R. Stronkman, and K. T.
Semantics + filtering + search = twitcident. exploring in-
formation in social web streams. In Proc. of HT, 2012.
L. M. Aiello et al. L. Aiello, G. Petkos, C. Martin, D. Corney,
S. Papadopoulos, R. Skraba, A. Goker, Y. Kompatsiaris,
A. Jaimes Sensing trending topics in Twitter. Transac-
tions on Multimedia Journal, 2012.
A.E. Cano, Y. He, K. Liu, and J. Zhao. A weakly supervised
bayesian model for violence detection in social media. In
Proc. of IJCNLP, 2013.
M. Lui and T. Baldwin. Langid.py: An off-the-shelf lan-
guage identification tool. In Proc. of ACL, 2012.
R. McCreadie, C. Macdonald, I. Ounis, M. Osborne, and S.
Petrovic. Scalable distributed event detection for twitter.
In Proc. of Big Data, 2013.
R. McCreadie, I. Soboroff, J. Lin, C. Macdonald, I. Ounis and
D. McCullough. On building a reusable Twitter corpus. In
Proc. of SIGIR, 2012.
A. Nenkova and K. McKeown. A survey of text summariza-
tion techniques. In Mining Text Data Journal, 2012.
S. Petrovic, M. Osborne, and V. Lavrenko. Streaming first
story detection with application to Twitter. In Proc. of
NAACL, 2010.
S. Petrovic, M. Osborne, R. McCreadie, C. Macdonald, I.
Ounis, and L. Shrimpton. Can Twitter replace newswire
for breaking news? In Proc. of WSM, 2012.
D. Preot¸iuc-Pietro and T. Cohn. A temporal model of text pe-
riodicities using gaussian processes. In Proc. of EMNLP,
2012.
M. D. Sykora, T. W. Jackson, A. O’Brien, and S. Elayan.
Emotive ontology: Extracting fine-grained emotions from
terse, informal messages. Computer Science and Informa-
tion Systems Journal, 2013.
M. D. Sykora, T. W. Jackson, A. O’Brien, and S. Elayan.
National security and social media monitoring. In Proc.
of EISIC, 2013.
</reference>
<page confidence="0.999298">
42
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.343490">
<title confidence="0.9885265">Real-Time Detection, Tracking, and Monitoring of Discovered Events in Social Media</title>
<author confidence="0.99211">Moran Richard McCreadie</author>
<affiliation confidence="0.612203">Edinburgh Edinburgh Glasgow</affiliation>
<author confidence="0.9043475">Alexander Von_Lunen Martin Sykora Elizabeth Cano Loughborough Loughborough Aston Neil Ireson Craig Macdonald Iadh Ounis Yulan He Sheffield Glasgow Glasgow Aston Tom Jackson Fabio Ciravegna Ann O’Brien Loughborough Sheffield Loughborough</author>
<abstract confidence="0.999291380952381">introduce a system for realtime event detection, tracking, monitoring and visualisation. It is designed to assist Information Analysts in understanding and exploring complex events as they unfold in the world. Events are automatically detected from the Twitter stream. Then those that are categorised as being security-relevant are tracked, geolocated, summarised and visualised for the end-user. Furthermore, the system tracks changes in emotions over events, signalling possible flashpoints or abatement. demonstrate the capabilities of ReDan extended use case from the September 2013 Westgate shooting incident. Through an evaluation of system latencies, we also show that enriched events are made available for users to explore within seconds of that event occurring.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>F Abel</author>
<author>C Hauff</author>
<author>G-J Houben</author>
<author>R Stronkman</author>
<author>K T</author>
</authors>
<title>Semantics + filtering + search = twitcident. exploring information in social web streams.</title>
<date>2012</date>
<booktitle>In Proc. of HT,</booktitle>
<contexts>
<context position="3808" citStr="Abel et al., 2012" startWordPosition="562" endWordPosition="565">vent exploration systems have previously been proposed within the literature. For instance, Trend Miner1 enables the plotting of term times series, drawn from Social Media (PreoiiucPietro and Cohn, 2013). It has a summarisation component and is also multilingual. In contrast, our system is focussed instead upon documents (Tweets) and is more strongly driven by realtime considerations. The Social Sensor (Aiello et al., 2013) system facilitates the tracking of predefined events using social streams. In contrast, we track all automatically discovered events we find in the stream. The Twitcident (Abel et al., 2012) project deals with userdriven searching through Social Media with respect to crisis management. However, unlike ReDites, these crises are not automatically discovered. The LRA Crisis Tracker2 has a similar purpose as ReDites. However, while LRA uses crowdsourcing, our ReDites system is fully automatic. 3 System Overview and Architecture Figure 1 gives a high-level system description. The system itself is loosely coupled, with services from different development teams coordinating via a Thrift interface. An important aspect of this decoupled design is that it enables geographically dispersed t</context>
</contexts>
<marker>Abel, Hauff, Houben, Stronkman, T, 2012</marker>
<rawString>F. Abel, C. Hauff, G.-J. Houben, R. Stronkman, and K. T. Semantics + filtering + search = twitcident. exploring information in social web streams. In Proc. of HT, 2012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L M Aiello</author>
</authors>
<title>Jaimes Sensing trending topics in Twitter. Transactions on Multimedia Journal,</title>
<date>2012</date>
<marker>Aiello, 2012</marker>
<rawString>L. M. Aiello et al. L. Aiello, G. Petkos, C. Martin, D. Corney, S. Papadopoulos, R. Skraba, A. Goker, Y. Kompatsiaris, A. Jaimes Sensing trending topics in Twitter. Transactions on Multimedia Journal, 2012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A E Cano</author>
<author>Y He</author>
<author>K Liu</author>
<author>J Zhao</author>
</authors>
<title>A weakly supervised bayesian model for violence detection in social media.</title>
<date>2013</date>
<booktitle>In Proc. of IJCNLP,</booktitle>
<contexts>
<context position="17661" citStr="Cano et al., 2013" startWordPosition="2826" endWordPosition="2829">ended audience: we predict whether they have a specific security-focus and finally predict an emotional label for events (which can be useful when judging changing viewpoints on events and highlighting extreme emotions that could possibly motivate further incidents). 6.3.1 Security-Related Event Detection We are particularly interested in security-related events such as violent events, natural disasters, or emergency situations. Given a lack of in-domain labelled data, we resort to a weakly supervised Bayesian modelling approach based on the previously proposed Violence Detection Model (VDM) (Cano et al., 2013) for identifying security events. In order to differentiate between security and non-security related events, we extract words relating to security events from existing knowledge sources such as DBpedia and incorporate them as priors into the VDM model learning. It should be noted that such a word lexicon only provides initial prior knowledge into the model. The model will automatically discover new words describing security-related events. We trained the VDM model on a randomly sampled 10,581 Tweets from the TREC Microblog 2011 corpus (McCreadie et al., 2012) and tested the model on 1,759 man</context>
</contexts>
<marker>Cano, He, Liu, Zhao, 2013</marker>
<rawString>A.E. Cano, Y. He, K. Liu, and J. Zhao. A weakly supervised bayesian model for violence detection in social media. In Proc. of IJCNLP, 2013.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Lui</author>
<author>T Baldwin</author>
</authors>
<title>Langid.py: An off-the-shelf language identification tool.</title>
<date>2012</date>
<booktitle>In Proc. of ACL,</booktitle>
<contexts>
<context position="9822" citStr="Lui and Baldwin, 2012" startWordPosition="1538" endWordPosition="1541">bator.apache.org/ was it content bearing (what you might want to read about in traditional newswire) or irrelevant / not useful. With this labelled data, we used a Passive-Aggressive algorithm to build a content classifier. Features were simply unigrams in Tweets. This dramatically improves precision, to 70%, with a drop in recall to 25% (when tested on 73k unseen events, manually labelled by two annotators). We can change the precision-recall boundary as needed by adjusting the associated decision boundary. We do not consider nonEnglish language Tweets in this work and they are filtered out (Lui and Baldwin, 2012). Geolocation is important, as we are particularly interested in events that occur at a specific location. We therefore additionally geolocate any Tweets that were not originally geolocated. To geotag those Tweets that do not have any geo-location information we use the Tweet text and additional Tweet metadata (language, city/state/country name, user description etc), to learn a Li penalised least squares regressor (LASSO) to predict the latitude and longitude. The model is learnt on nearly 20 million geolocated Tweets collected from 2010-2014. Experiments on a held-out test dataset show we ca</context>
</contexts>
<marker>Lui, Baldwin, 2012</marker>
<rawString>M. Lui and T. Baldwin. Langid.py: An off-the-shelf language identification tool. In Proc. of ACL, 2012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R McCreadie</author>
<author>C Macdonald</author>
<author>I Ounis</author>
<author>M Osborne</author>
<author>S Petrovic</author>
</authors>
<title>Scalable distributed event detection for twitter.</title>
<date>2013</date>
<booktitle>In Proc. of Big Data,</booktitle>
<contexts>
<context position="8487" citStr="McCreadie et al., 2013" startWordPosition="1323" endWordPosition="1326">ll able to find many (sub) events connected with this attack. There were 6657 mentions of Westgate in September 2013 in our 1% of sample Tweets. 6 Major Components 6.1 Event Detection Building upon an established Topic Detection and Tracking (TDT) methodology, which assumes that each new event corresponds with seeing some novel document. the event detection component uses a hashing approach that finds novel events4 in constant time (Petrovic et al., 2010). To make it scale and process thousands of documents each second, it can optionally be distributed over a cluster of machines (via Storm5) (McCreadie et al., 2013). The system favours recall over precision and has been shown to have high recall, but a low precision (Petrovic et al., 2013). Given that we are presenting discovered events to a user and we do not want to overload them with false positives, we need to take steps to increase precision (ie present fewer false positives). We use a content categoriser to determine whether a discovered event is worth reporting. Using more than 100k automatically discovered events from the Summer of 2011, we created a training set and manually labelled each Tweet: 4An event is defined as something happening at a g</context>
</contexts>
<marker>McCreadie, Macdonald, Ounis, Osborne, Petrovic, 2013</marker>
<rawString>R. McCreadie, C. Macdonald, I. Ounis, M. Osborne, and S. Petrovic. Scalable distributed event detection for twitter. In Proc. of Big Data, 2013.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R McCreadie</author>
<author>I Soboroff</author>
<author>J Lin</author>
<author>C Macdonald</author>
<author>I Ounis</author>
<author>D McCullough</author>
</authors>
<title>On building a reusable Twitter corpus.</title>
<date>2012</date>
<booktitle>In Proc. of SIGIR,</booktitle>
<contexts>
<context position="18227" citStr="McCreadie et al., 2012" startWordPosition="2915" endWordPosition="2918">oposed Violence Detection Model (VDM) (Cano et al., 2013) for identifying security events. In order to differentiate between security and non-security related events, we extract words relating to security events from existing knowledge sources such as DBpedia and incorporate them as priors into the VDM model learning. It should be noted that such a word lexicon only provides initial prior knowledge into the model. The model will automatically discover new words describing security-related events. We trained the VDM model on a randomly sampled 10,581 Tweets from the TREC Microblog 2011 corpus (McCreadie et al., 2012) and tested the model on 1,759 manually labelled Tweets which consist of roughly the same number of security-related and non-security related Tweets. Our results show that the VDM model achieved 85.8% in F-measure for the identification of security-related Tweets, which is not far from the F-measure of 90% obtained using the supervised Naive Bayes classifier despite using no labelled data in the model. Here, we derived word priors from a total of 32,174 documents from DBpedia and extracted 1,612 security-related words and 1,345 non-security-related words based on the measurement of relative wo</context>
</contexts>
<marker>McCreadie, Soboroff, Lin, Macdonald, Ounis, McCullough, 2012</marker>
<rawString>R. McCreadie, I. Soboroff, J. Lin, C. Macdonald, I. Ounis and D. McCullough. On building a reusable Twitter corpus. In Proc. of SIGIR, 2012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Nenkova</author>
<author>K McKeown</author>
</authors>
<title>A survey of text summarization techniques.</title>
<date>2012</date>
<booktitle>In Mining Text Data Journal,</booktitle>
<contexts>
<context position="14024" citStr="Nenkova and McKeown, 2012" startWordPosition="2219" endWordPosition="2222">way until further notice. 3 10:13am RT DO NOT go to Westgate Mall. Gunshots 22.9 and mayhem, keep away until further notice. 4 10:10am Good people please avoid Westgate Mall. @Po- 22.2 liceKE @IGkimaiyo please act ASAP, reports of armed attack at #WestgateMall 5 10:07am RT @steve enzo: @kirimiachieng these thugs 11.5 won’t let us be 6Nouns, adjectives, verbs and cardinal numbers 7https://dev.twitter.com/docs/streamingapis/streams/public The second TaS sub-component is event summarisation. This sub-component takes as input the Tweet ranking produced above and performs extractive summarisation (Nenkova and McKeown, 2012) upon it, i.e. it selects a subset of the ranked Tweets to form a summary of the event. The goals of event summarisation are two-fold. First, to remove any Tweets from the above ranking that are not relevant to the event (e.g. Tweet 5 in the example above). Indeed when an event is first detected, there may be few relevant Tweets yet posted. The second goal is to remove redundancy from within the selected Tweets, such as Tweets 2 and 3 in the above example, thereby focussing the produced summary on novelty. To tackle the first of these goals, we leverage the score distribution of Tweets within </context>
</contexts>
<marker>Nenkova, McKeown, 2012</marker>
<rawString>A. Nenkova and K. McKeown. A survey of text summarization techniques. In Mining Text Data Journal, 2012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Petrovic</author>
<author>M Osborne</author>
<author>V Lavrenko</author>
</authors>
<title>Streaming first story detection with application to Twitter.</title>
<date>2010</date>
<booktitle>In Proc. of NAACL,</booktitle>
<contexts>
<context position="4691" citStr="Petrovic et al., 2010" startWordPosition="705" endWordPosition="708">ing, our ReDites system is fully automatic. 3 System Overview and Architecture Figure 1 gives a high-level system description. The system itself is loosely coupled, with services from different development teams coordinating via a Thrift interface. An important aspect of this decoupled design is that it enables geographically dispersed teams to coordinate with each other. Event processing is comprised of the following main 4 steps: 1) New events are detected. An event is described by the first Tweet that we find discussing it and is defined as something that is captured within a single Tweet (Petrovic et al., 2010). 1http://www.trendminer-project.eu/ 2http://www.lracrisistracker.com/ 2) When an event is first discovered it may initially have little information associated with it. Furthermore, events evolve over time. Hence, the second step involves tracking the event – finding new posts relating to it as they appear and maintaining a concise updated summary of them. 3) Not all events are of interest to our intended audience, so we organise them. In particular, we determine whether an event is security-related (or otherwise), geolocate it, and detect how prominent emotions relating to that event evolve. </context>
<context position="8323" citStr="Petrovic et al., 2010" startWordPosition="1295" endWordPosition="1298">s caught up in it as well as by terrorist sympathisers, often in real-time. As we later show, even though we only operate over 1% of the Twitter Stream, we are still able to find many (sub) events connected with this attack. There were 6657 mentions of Westgate in September 2013 in our 1% of sample Tweets. 6 Major Components 6.1 Event Detection Building upon an established Topic Detection and Tracking (TDT) methodology, which assumes that each new event corresponds with seeing some novel document. the event detection component uses a hashing approach that finds novel events4 in constant time (Petrovic et al., 2010). To make it scale and process thousands of documents each second, it can optionally be distributed over a cluster of machines (via Storm5) (McCreadie et al., 2013). The system favours recall over precision and has been shown to have high recall, but a low precision (Petrovic et al., 2013). Given that we are presenting discovered events to a user and we do not want to overload them with false positives, we need to take steps to increase precision (ie present fewer false positives). We use a content categoriser to determine whether a discovered event is worth reporting. Using more than 100k aut</context>
</contexts>
<marker>Petrovic, Osborne, Lavrenko, 2010</marker>
<rawString>S. Petrovic, M. Osborne, and V. Lavrenko. Streaming first story detection with application to Twitter. In Proc. of NAACL, 2010.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Petrovic</author>
<author>M Osborne</author>
<author>R McCreadie</author>
<author>C Macdonald</author>
<author>I Ounis</author>
<author>L Shrimpton</author>
</authors>
<title>Can Twitter replace newswire for breaking news?</title>
<date>2012</date>
<booktitle>In Proc. of WSM,</booktitle>
<marker>Petrovic, Osborne, McCreadie, Macdonald, Ounis, Shrimpton, 2012</marker>
<rawString>S. Petrovic, M. Osborne, R. McCreadie, C. Macdonald, I. Ounis, and L. Shrimpton. Can Twitter replace newswire for breaking news? In Proc. of WSM, 2012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Preot¸iuc-Pietro</author>
<author>T Cohn</author>
</authors>
<title>A temporal model of text periodicities using gaussian processes.</title>
<date>2012</date>
<booktitle>In Proc. of EMNLP,</booktitle>
<marker>Preot¸iuc-Pietro, Cohn, 2012</marker>
<rawString>D. Preot¸iuc-Pietro and T. Cohn. A temporal model of text periodicities using gaussian processes. In Proc. of EMNLP, 2012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M D Sykora</author>
<author>T W Jackson</author>
<author>A O’Brien</author>
<author>S Elayan</author>
</authors>
<title>Emotive ontology: Extracting fine-grained emotions from terse, informal messages.</title>
<date>2013</date>
<booktitle>Computer Science and Information Systems Journal,</booktitle>
<marker>Sykora, Jackson, O’Brien, Elayan, 2013</marker>
<rawString>M. D. Sykora, T. W. Jackson, A. O’Brien, and S. Elayan. Emotive ontology: Extracting fine-grained emotions from terse, informal messages. Computer Science and Information Systems Journal, 2013.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M D Sykora</author>
<author>T W Jackson</author>
<author>A O’Brien</author>
<author>S Elayan</author>
</authors>
<title>National security and social media monitoring.</title>
<date>2013</date>
<booktitle>In Proc. of EISIC,</booktitle>
<marker>Sykora, Jackson, O’Brien, Elayan, 2013</marker>
<rawString>M. D. Sykora, T. W. Jackson, A. O’Brien, and S. Elayan. National security and social media monitoring. In Proc. of EISIC, 2013.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>