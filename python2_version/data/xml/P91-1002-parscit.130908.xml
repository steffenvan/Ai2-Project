<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.4436035">
INCLUSION, DISJOINTNESS AND CHOICE:
THE LOGIC OF LINGUISTIC CLASSIFICATION
</note>
<author confidence="0.926021">
Bob Carpenter
</author>
<affiliation confidence="0.899538333333333">
Computational Linguistics Program
Philosophy Department
Carnegie Mellon University
</affiliation>
<address confidence="0.642412">
Pittsburgh, PA 15213
</address>
<email confidence="0.995947">
carp@caesar.lcl.cmu.edu
</email>
<author confidence="0.956346">
Carl Pollard
</author>
<affiliation confidence="0.9420755">
Linguistics Department
Ohio Sate University
</affiliation>
<address confidence="0.863635">
Columbus, OH 43210
</address>
<email confidence="0.91722">
pollardahpuxa.ircc.ohio-state.edu
</email>
<sectionHeader confidence="0.995569" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999745818181818">
We investigate the logical structure of concepts
generated by conjunction and disjunction over
a monotonic multiple inheritance network where
concept nodes represent linguistic categories and
links indicate basic inclusion (isA) and disjoint-
ness (IsNoTA) relations. We model the distinction
between primitive and defined concepts as well as
between closed- and open-world reasoning. We ap-
ply our logical analysis to the sort inheritance and
unification system of HPSG and also to classifica-
tion in systemic choice systems.
</bodyText>
<sectionHeader confidence="0.962467" genericHeader="introduction">
Introduction
</sectionHeader>
<bodyText confidence="0.999957120689656">
Our focus in this paper is a stripped-down mono-
tonic inheritance-based knowledge representation
system which can be applied directly to provide
a clean declarative semantics for Halliday&apos;s sys-
temic choice systems (see Winograd 1983, Mel-
lish 1988, Kress 1976) and the inheritance module
of head-driven phrase-structure grammar (HPSG)
(Pollard and Sag 1987, Pollard in press). Our in-
heritance networks are constructed from only the
most rudimentary primitives: basic concepts and
ISA and ISNOTA links. By applying general al-
gebraic techniques, we show how to generate a
meet semilattice whose nodes correspond to con-
sistent conjunctions of basic concepts and where
meet corresponds to conjunction. We also show
how to embed this result in a distributive lattice
where the elements correspond to arbitrary con-
junctions and disjunctions of basic concepts and
where meet and join correspond to conjunction
and disjunction, respectively. While we do not
consider either role- or attribute-based reasoning
in this paper, our constructions are directly appli-
cable as a front-end for the combined attribute-
and concept-based formalisms of Ait-Kaci (1986),
Nebel and Smolka (1989), Carpenter (1990), Car-
penter, Pollard and Franz (1991) and Pollard (in
press).
The fact that terms in distributive lattices have
disjunctive normal forms allows us to factor our
construction into two stages: we begin with the
consistent conjunctive concepts generated from
our primitive concepts and then form arbitrary
disjunctions of these conjunctions. The conjunc-
tive construction is useful on its own as its result is
a semilattice where meet corresponds to conjunc-
tion. In particular, the conjunctive semilattice is
ideally suited to conjunctive logics such as those
employed for unification, as in HPSG.
We will consider the distinction between prim-
itive and defined concepts, a well-known distinc-
tion expressible in terminological reasoning sys-
tems such as KL-ONE (Brachman 1979, Brach-
man and Schmolze 1985), and its descendants
(such as LOOM (MacGregor 1988) or CLASSIC
(Borgida et al. 1989)). We also tackle the va-
riety of closed-world reasoning that is necessary
for modeling constraint-based grammars such as
HPSG. A similar form of closed-world reasoning
is supported by LOOM with the disjoint-covering
construction.
One of the benefits of our notion of inheritance
is that it allows us to express the natural seman-
tics of both systemic choice systems and HPSG in-
heritance hierarchies using basic concepts and ISA
and ISNOTA links. In particular, we will see how
choice systems correspond to ISNOTA reasoning,
multiple choices can be captured in our conjunc-
tive construction and how dependent choices can
</bodyText>
<page confidence="0.995146">
9
</page>
<bodyText confidence="0.999736333333333">
be represented by inheritance. One result of our
construction will be a demonstration that the sys-
temic classification and HPSG systems are variant
graphical representations of the same kind of un-
derlying information regarding inclusion, disjoint-
ness and choice.
</bodyText>
<subsectionHeader confidence="0.840778">
Inheritance Networks
</subsectionHeader>
<bodyText confidence="0.996004">
Our inheritance networks are particularly simple,
being constructed from basic concepts and two
kinds of &amp;quot;inheritance&amp;quot; links.
</bodyText>
<construct confidence="0.599664333333333">
Definition 1 (Inheritance Network) An
inheritance net is a tuple (BasConc,IsA,IsNoTA)
where:
</construct>
<listItem confidence="0.9968194">
• BasConc: a finite set of basic concepts
• ISA C BasConc x BasConc: the basic inclu-
sion relation
• ISNOTA C BasConc x BasConc: the basic dis-
jointness relation
</listItem>
<bodyText confidence="0.999325533333333">
The interpretation of a net is straightforward:
each basic concept is thought of as representing
a set of empirical objects, where P ISA Q means
that all P&apos;s axe Q&apos;s and P ISNOTA Q means that
no P&apos;s are Q&apos;s. Our primary interest is in the
logical relationships between concepts rather than
in the actual extensions of the concepts them-
selves. This is in accord with standard linguis-
tic practice, where the focus is on types of utter-
ances rather than utterance tokens. An example
of an inheritance network is given in Figure 1. We
have followed the standard convention of placing
the more specific elements toward the bottom of
the network, with arrows indicating the direction-
ality of the ISA links (for instance, d ISA f and
</bodyText>
<figure confidence="0.992190333333333">
b ISNOTA C).
d e
a b
</figure>
<figureCaption confidence="0.999983">
Figure 1: Inheritance Hierarchy
</figureCaption>
<bodyText confidence="0.896040833333334">
We can automatically deduce all of the inclusion
and disjointness relations that follow from the ba-
sic ones (Carpenter and Thomason 1990).
Definition 2 (Inclusion/Disjointness) The
inclusion relation ISA* C BasConc x BasConc is
the smallest such that:
</bodyText>
<listItem confidence="0.901775333333333">
• P ISA* P (Reflexive)
• if P ISA Q and Q ISA* R
then P ISA* R (Transitive)
</listItem>
<bodyText confidence="0.6758475">
The disjointness relation ISNOTA* C BasConc x
BasConc is the smallest such that:
</bodyText>
<listItem confidence="0.9233075">
• if P ISNOTA Q Or Q ISNOTA P
then P ISNOTA* Q (Symmetry)
• if P ISA* Q and Q ISNOTA* R
then P ISNOTA* R (Chaining)
</listItem>
<bodyText confidence="0.999178363636364">
These derived inclusion and disjointness relations
express all of the information that follows from the
basic relations. In particular, ISA* is the smallest
pre-order extending ISA. For convenience, we al-
low concepts P such that P ISNOTAs P; any such
inconsistent concepts are automatically filtered
out by the conjunctive construction. Similarly,
we allow concepts P and Q such that P ISA* Q
and Q ISA* P. In this case, P and Q are merged
during the conjunctive construction so that they
behave identically.
</bodyText>
<subsectionHeader confidence="0.405473">
Conjunctions
</subsectionHeader>
<bodyText confidence="0.738672071428571">
A conjunctive concept is modeled as a set P C
BasConc of basic concepts. A conjunctive concept
P corresponds to the conjunction of the concepts
P E P; an object is a P if and only if it is a P for
every P E P. But arbitrary sets of basic concepts
are not good models for conjunctive concepts; we
need to identify conjunctive concepts which con-
vey identical information and also remove those
conjunctive concepts which are inconsistent. We
address the first issue by requiring conjunctive
concepts to be closed under inheritance and the
second by removing any concepts which contain a
pair of disjoint basic concepts.
Definition 3 (Conjunctive Concept) A set
</bodyText>
<listItem confidence="0.8461765">
P C BasConc is a conjunctive concept if
• if P E P and P ISA* P&apos; then P&apos; E P
• no P, P&apos; E P are such that P ISNOTA* P&apos;
Let ConjConc be the set of conjunctive concepts.
</listItem>
<page confidence="0.992208">
10
</page>
<bodyText confidence="0.999954285714286">
There is a natural inclusion or specificity order-
ing on our conjunctive concepts; if P C Q then
every object which can be classified as a Q can
also be classified as a P. The conjunctive concepts
derived from the inheritance net in Figure 1 are
displayed in Figure 2, where we have P C Q for
every derived &amp;quot;ISA&amp;quot; arc Q —+ P.
</bodyText>
<figure confidence="0.580007666666667">
fl
{f}
&amp;quot;&apos;&amp;quot;■
</figure>
<construct confidence="0.8096725">
{d, f} {e, f}
{a, d, f} {d, e, f} {c,e, f}
{a, d, e, f} {b,d,e, f} {c,d,e, f}
{a,b,d,e, f} fa, c, d, e, f}
</construct>
<figureCaption confidence="0.995494">
Figure 2: Conjunctive Concept Ordering
</figureCaption>
<bodyText confidence="0.9971733">
{b, d, e, f} , {b, c, d, e, f} and {a, b, d, e, f} respec-
tively. In the primitive case, being a d and an e is
a necessary condition for being a b; in the defined
case, being a d and e is also a sufficient condition
for being a b.
In general, suppose that DefConc C BasConc is
the subset of defined concepts. To account for this
new information, we add the following additional
clause to the conditions that P must satisfy to be
a conjunctive concept:
</bodyText>
<equation confidence="0.683347333333333">
(1) If P E DefConc and
{P&apos; I P P&apos; and P ISA* P&apos;} C P
then P E P.
</equation>
<bodyText confidence="0.999786857142857">
With the example in Figure 1 and the assumption
that DefConc = {b, f}, we generate the conjunc-
tive concepts in Figure 3. We have adopted the
condition of only displaying the maximally specific
primitive concepts of a conjunctive concept, as
the other basic concepts can be determined from
these. Note that the assumption that 1, the most
</bodyText>
<equation confidence="0.7299675">
{}
{d} fel
t
{a} {d,e} {c}
t
{a,e} {a,c}
</equation>
<subsectionHeader confidence="0.852079">
Defined Concepts
</subsectionHeader>
<bodyText confidence="0.999922857142857">
So far, we have considered only primitive basic
concepts. A defined basic concept is taken to be
fully determined by its set of superconcepts (in the
general terminological case with roles, restrictions
on role values can also contribute to the definition
of a concept (Brachman and Schmolze 1985)). In
particular, a defined basic concept P is assumed
to carry the same information as the conjunction
of all of the concepts P&apos; such that P ISA P&apos;. For
example, consider the basic concept b in Figure 1.
The conjunctive concept {6, d, e, f} is strictly more
informative than {d, e, f}; the primitiveness of b
allows for the possibility that there is information
to be gained from knowing that an object is a b
that can not be gained from knowing that it is
both a d and an e. On the other hand, if we
assume that b is defined, then the presence of d
and e in a conjunctive concept should ensure the
presence of b, thus eliminating the sets {d, e, f},
{c, d, e, f} and {a, d, e, f} from consideration, as
they are equivalent to the conjunctive concepts
</bodyText>
<figureCaption confidence="0.834258">
Figure 3: Conjunctive Construction with Defined
Concepts
</figureCaption>
<bodyText confidence="0.999300833333333">
general basic concept, is defined means that ev-
ery conjunctive concept must contain f, because
the set fir&apos; I f0PandfIsA P} is empty and
thus a subset of every conjunctive concept. Thus
{} is equivalent to {1} in terms of conjunctive in-
formation so that every object is classified as an
</bodyText>
<equation confidence="0.404817">
1.
</equation>
<bodyText confidence="0.999839181818182">
The set of conjunctive concepts ordered by re-
verse set inclusion has the pleasant property of be-
ing closed under consistent meets, where the meet
operation represents conjunction (&amp;quot;unification&amp;quot;).
More precisely, a set P C ConjConc of conjunc-
tive concepts is consistent if there is a conjunctive
concept P which contains all of the concepts con-
tained in the conjunctive concepts in P so that
UP C P. The following theorem states that for
every consistent set P of concepts, there is a least
P such that P D UI&apos;. This least P is written UP
</bodyText>
<page confidence="0.986751">
11
</page>
<figure confidence="0.9878532">
pin
sng
gen
3rd /
1st
</figure>
<figureCaption confidence="0.979349">
Figure 4: Systemic Choice Network
</figureCaption>
<figure confidence="0.666325666666667">
agr
num
per
111SC
fern
neu
and called the meet of P.
Theorem 4 The meet in (ConjConc, D) for a con-
sistent set 7) C ConjConc of conjunctive concepts
is given by:
nr
▪ n{p, E ConjConc I P&apos; J P for each P E
--= (){P&apos; E ConjConc I 13&apos; D UP}
=-- {P E BasConc I for every P&apos; E ConjConc, }
P&apos; D UP implies P E P&apos;
</figure>
<bodyText confidence="0.912912111111111">
Proof: This is an immediate consequence of the
fact that ConjConc is closed under arbitrary in-
tersections. El
Another way to generate the meet of a collection of
conjunctive concepts is to close their union under
inheritance and concept definition. It should be
observed that joins (intersections), while always
existing, in general represent only informational
generalizations, not necessarily disjunctions.
</bodyText>
<subsectionHeader confidence="0.98001">
Systemic Choice Systems
</subsectionHeader>
<bodyText confidence="0.999902725">
Mellish (1988) showed how the concepts express-
ible using a systemic choice network such as that
found in Figure 4 can be embedded into the lat-
tice of first-order terms with conjunction repre-
sented by unification. Our characterization of the
concepts expressible in a systemic net instead re-
lies on the translation of systemic notation into
an inheritance network with isAand ISNOTA links.
The resulting conjunctive concepts correspond to
the concepts that can be expressed in the systemic
net. An example of a systemic choice network in
the notation of Mellish (1988), is Figure 4. The
connective I, of which there are three in the di-
agram, signals disjoint alternatives; for instance,
the connective for gender is taken to indicate that
a gender must be exactly one of masculine, femi-
nine or neuter. The connective 1, of which there
is one before gender, indicates necessary precon-
ditions for a choice; in this case, a gender is only
chosen if the number is singular and the person
is third. Finally, the connective {, of which there
is one labeled agr, indicates that a choice for an
agreement value requires a choice for both number
and person.
We construct an inheritance hierarchy from a
systemic network by taking a basic primitive con-
cept for every choice in the network. The choices
in Figure 4 are those items in bold face; the itali-
cized items simply label connectives and are only
for convenience (alternatively, we could take the
italicized elements to be defined basic concepts).
The ISNOTA relation between basic concepts is de-
fined so that P ISNOTA Q if P and Q are connected
by the choice connective I. For example, we have
3rd ISNOTA 1St and msc ISNOTA neu. Finally,
the ISA relation is defined so that if P is one of the
choices for a connective which has a precondition
P&apos; attached to it, then we include P ISA P&apos;. For
instance, we have MSC ISA sng and MSC ISA 3rd.
In Figure 5, we disply the conjunctive concepts
</bodyText>
<page confidence="0.968252">
12
</page>
<figure confidence="0.740071">
{1st} {3rd} {sng} {plu}
{1st,sng} {3rd,sng} {lst,plu} {3rd,plu}
{3rd,sng,mse} {3rd,sng,fem} {3rd,sng,neu}
</figure>
<figureCaption confidence="0.999491">
Figure 5: Systemic Choices
</figureCaption>
<bodyText confidence="0.9947316">
generated by the inheritance net stemming from
the choice system in Figure 4. A fully determined
choice in a choice system corresponds to a maxi-
mally specific conjunctive concept, of which there
are six in Figure 5.
</bodyText>
<subsectionHeader confidence="0.844185">
Sort Inheritance in HPSG
</subsectionHeader>
<bodyText confidence="0.999989186046512">
An example of an HPSG sort inheritance hierarchy
which represents the same information as the sys-
temic choice system in Figure 4, in the notation of
Pollard and Sag (1987), is given in Figure 6. The
basic principle behind the HPSG notation is that
the bold elements correspond to basic concepts,
while the boxed elements correspond to partitions,
so-called because the concepts in a partition are
both pairwise disjoint and exhaustive. In terms of
an inheritance network, the elements of a partition
(those concepts directly below the partition in the
diagram) are related by basic ISNOTA links. For
instance, we would have plu ISNOTA sing. Each
partition may also have dependencies which must
be fulfilled for the choice to be made; in our case,
before an element of the gender partition is chosen,
singular must be chosen for number and third for
person. These dependencies generate our basic ISA
relation. For instance, we must have plu ISA agr
and fern ISA sng. Carrying out this translation
of the HPSG notation into an inheritance net pro-
duces to the same result as the translation of the
systemic choice system in Figure 4, thus generat-
ing the conjunctive concept hierarchy in Figure 5.
In HPSG, it is useful to allow sorts to be de-
fined by conjunction. An example is main A
base A strict-trans, which classifies the inputs
to the passivization lexical rule (Pollard and Sag
1987:211). Translating the example to our sys-
tem produces a defined conjunctive concept cor-
responding to the conjunction of those three ba-
sic concepts. On the other hand, a primitive sort
such as aux cannot be defined as the conjunction
of the sorts from which it inherits, namely verb
and intrans-raising, because auxiliaries are not
the only intransitive raising verbs. In the hierar-
chy in Figure 6, it is most natural to consider the
basic concept agr to be defined rather than prim-
itive; it could simply be eliminated with the same
effect. However, in the context of a grammar, agr
would be one of many possible basic sorts (others
being boolean, verb-form, etc.) and would thus
not be eliminable.
</bodyText>
<subsectionHeader confidence="0.774143">
Disjunctive Concepts
</subsectionHeader>
<bodyText confidence="0.9999614">
While meets in the conjunctive concept order-
ing represent conjunction, joins (intersections) do
not represent disjunction. For instance, {ruse} U
{fem} = {msc} U {neu} = {3rd, sng}, but the
information that an object is masculine or fem-
inine is different than the information that it is
masculine or neuter, and more specific than the
information that it is simply third-singular. The
granularity of the original network dramatically
affects the disjunctive concepts which can be rep-
</bodyText>
<page confidence="0.996211">
13
</page>
<figure confidence="0.955651">
agr
num pers
pin sng 3rd 1st
gen
/f■..
DISC fern neu
</figure>
<figureCaption confidence="0.99978">
Figure 6: HPSG Inheritance Network Notation
</figureCaption>
<bodyText confidence="0.996776464285714">
resented (see Borgida and Etherington 1989). For
example, we could have partitioned gender into
animate and neu concepts and then partitioned
the animate concept into msc and fern. This
move would distinguish the join of msc and fern
from the join of msc and neu.
To complete our study of the logic of sim-
ple inheritance, we employ a well-known lattice-
theoretic technique for embedding a partial order
into a distributive lattice; when applied to con-
junctive concept hierarchies, the result is a dis-
tributive lattice where concepts correspond to ar-
bitrary conjunctions and disjunctions of basic con-
cepts with joins and meets representing disjunc-
tion and conjunction.
We model a disjunctive concept as a set P C
ConjConc of conjunctive concepts interpreted dis-
junctively; an object is classified as a P just in case
it can be classified as a P for some P E P. As with
the conjunctive concepts, we identify disjunctive
concepts which convey the same information. In
this case, we can add more specific concepts to a
disjunctive concept P without affecting its infor-
mation content.
Definition 5 (Disjunctive Concepts) A sub-
set P C ConjConc of conjunctive concepts is said
to be a disjunctive concept if whenever P, Q E
ConjConc are such that Q D P and P E P then
</bodyText>
<sectionHeader confidence="0.433937" genericHeader="method">
Q E P
</sectionHeader>
<bodyText confidence="0.9980840625">
Let DisjConc be the collection of disjunctive con-
cepts.
The inclusion ordering between disjunctive con-
cepts represents specificity, but this time if P C Q
then P is at least as specific as Q, as Q admits
as many possibilities as P. Note that the upper-
closed sets of a partial ordering form a distributive
lattice when ordered by inclusion, since it is a sub-
lattice of a powerset lattice.
Proposition 6 The structure (DisjConc, C) is a
distributive lattice.
Unions (joins) represent disjunctions in in
DisjConc. Likewise, intersections (meets) repre-
sent conjunctions. Furthermore, the function 0
that maps a conjunctive concept P to the dis-
junctive concept 0(P) = {P&apos; I P&apos; J P} is an
embedding of ConjConc into DisjConc that pre-
serves existing meets, so that 0(P n P&apos;) = cb(P) n
0(P&apos;). Note that this embedding coincides with
the standard embedding of a domain into its up-
per (Smyth) powerdomain (Gunter and Scott in
press), with the only difference being that we have
reversed the orders of both domains (with the in-
formationally more specific elements toward the
bottom), as is conventional in inheritance net-
works.
More than 30 disjunctive concepts result from
the conjunctive concepts in Figure 3, so we will
not provide a graphic display of the results of the
disjunctive construction applied to a realistic ex-
ample (for examples of the general construction,
see Davey and Priestley 1990).
</bodyText>
<subsectionHeader confidence="0.966495">
Closed World Reasoning
</subsectionHeader>
<bodyText confidence="0.997328">
In HPSG, Pollard and Sag (1987) partition the
concept sign into two sub-concepts, phrase and
</bodyText>
<page confidence="0.997765">
14
</page>
<bodyText confidence="0.996284237288136">
word. This arrangement generates the conjunc-
tive concepts {sign}, {phrase} and {word}.
Applying the disjunctive construction to this
result, though, gives us a disjunctive concept
{{word}, {phrase}} which is strictly more infor-
mative than {{sign}}. This distinction demon-
strates the open-world nature of our construction;
it allows for the possibility of signs which are
neither words nor phrases. This form of open-
world reasoning is the standard in terminologi-
cal reasoning systems such as KL-ONE or CLAS-
SIC, though LOOM provides a notion of disjoint-
covering which provides the kind of closed-world
reasoning we require.
In dealing with linguistic grammars, on the
other hand, we clearly wish to exclude any expres-
sion from signhood that is neither a phrase nor a
word; these choices are meant to be exhaustive in a
grammar. The fact that signs can be either words
or phrases is explicit; what we need is a way to
say that nothing else can be a sign.
In general, we require a set ClosConc C BasConc
of closed concepts to be specified. When con-
structing the disjunctive concepts, we identify a
closed concept with the disjunction of its imme-
diate subconcepts. In particular, we can replace
every occurence of a closed concept with the dis-
junction of its immediate subconcepts, so that {P}
and {P` P` ISA PI are identified. Closed con-
cepts are treated dually to defined concepts; a de-
fined concept is taken to be the conjunction of its
immediate superconcepts, while a closed concept
is identified with the disjunction of its immediate
subconcepts. The simplest way to achieve this ef-
fect is to generate the disjunctive concepts from
the subset of conjunctive concepts which contain
at least one subconcept of every closed concept
which they contain. This leads to the following
restriction:
(2) P E DisjConc only if for every P E P and
PEPn ClosConc there is some P` E
such that P&apos; ISA P
Thus if sign E ClosConc, we would only consider
the conjunctive concepts {phrase} and {word};
the concept {sign} contains a closed concept sign,
but none of its subconcepts. Consequently, the set
{{sign}} is no longer a disjunctive concept, while
{{phrase}, {word}} would be allowed (assuming
for this example that phrase and word are not
themselves closed).
In grammar development, it will often be the
case that all but the maximally specific concepts
are closed. In this case, the disjunctive construc-
tion will produce the boolean algebra with maxi-
mally specific conjunctive concepts as atoms. Such
maximally specific conjunctive concepts were sim-
ply taken as primitive by King (1989), who gener-
ated a boolean algebra of types corresponding to
disjunctions of maximal concepts.
</bodyText>
<sectionHeader confidence="0.994008" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9998105">
We would like to thank Bob Kasper for invaluable
suggestions.
</bodyText>
<sectionHeader confidence="0.982952" genericHeader="references">
References
</sectionHeader>
<bodyText confidence="0.84172125">
Ait-Kaci, Hassan (1986). An algebraic seman-
tics approach to the effective resolution of
type equations. Theoretical Computer Sci-
ence, 45:293-351.
</bodyText>
<reference confidence="0.984787333333333">
Borgida, Alexander; Brachman, Ronald J.;
McGuinness, Deborah L. and Resnick, Lori
A. (1989). CLASSIC: A structural data
model for objects. In Proceedings of
the SIGMOD International Conference on
Management of Data, Portland, Oregon.
Borgida, Alex and Etherington, David W.
(1989). Disjunction in inheritance hierar-
chies. In Proceedings of the First Interna-
tional Conference on Principles of Knowl-
edge Representation and Reasoning, pages
33-43. Morgan Kaufmann.
Brachman, Ronald J. (1979). On the episte-
mological status of semantic networks. In
Findler, N., editor, Associative Networks:
Representation and Use of Knowledge by
Computers, pages 3-50. Academic Press.
Brachman, Ronald J. and Schmolze, James G.
(1985). An overview of the KL-ONE knowl-
edge representation system. Cognitive Sci-
ence, 9:171-216.
Carpenter, Bob (1990). Typed feature struc-
tures: Inheritance, (in)equations and exten-
sionality. In Proceedings of the First Inter-
national Workshop on Inheritance in Nat-
ural Language Processing, 9-13, Tilburg,
The Netherlands.
</reference>
<page confidence="0.959935">
15
</page>
<reference confidence="0.999522166666667">
Carpenter, Bob; Pollard, Carl and Franz, Alex
(1991). The specification and implementa-
tion of constraint-based unification gram-
mars. In Proceedings of the Second Inter-
national Workshop on Parsing Technology,
Cancun, Mexico.
Carpenter, Bob and Thomason, Richmond
(1990). Inheritance theory and path-based
reasoning: An introduction. In Kyburg,
Jr., Henry E.; Loui, Ronald P. and Carl-
son, Greg N., (ed.), Defeasible Reasoning
and Knowledge Representation, volume 5
of Studies in Cognitive Systems, 309-344.
Kluwer.
Davey, B.A. and Priestley, H.A. (1990). Intro-
duction to Lattices and Order. Cambridge
University Press.
Flickinger, Daniel; Pollard, Carl J. and Wa-
sow, Thomas (1985). Structure-sharing in
lexical representation. In Proceedings of the
23rd Annual Conference of the Association
for Computational Linguistics.
Gunter, Carl and Scott, Dana S. (in press). Se-
mantic domains. In Theoretical Computer
Science. North-Holland.
Kasper, Robert T. (1989). Unification
and classification: An experiment in
information-based parsing. In First Inter-
national Workshop on Parsing Technolo-
gies, 1-7. Pittsburgh.
King, Paul (1989). A Logical Formalism for
Head-Driven Phrase Structure Grammar.
PhD thesis, University of Manchester.
Kress, Gunther (ed.) (1976) Halliday: System
and Function in Language. University of
Oxford Press.
MacGregor, Robert (1988). A deductive pat-
tern matcher. In Proceedings of the 1988
National Conference on Artificial Intelli-
gence, pages 403-408, St. Paul, Minnesota.
Mellish, Christopher S. (1988). Implement-
ing systemic classification via unification.
Computational Linguistics, 14:40-51.
Nebel, Bernhard and Smolka, Gert (1989).
Representationa dn reasoning with attribu-
tive descriptions. IWBS Report 81, IBM -
Deutschland GmbH, Stuttgart.
Pollard, Carl J. (in press). Sorts in unification-
based grammar and what they mean. In
Pinkal, M. and Gregor, B., editors, Unifi-
cation in Natural Language Analysis. MIT
Press.
Pollard, Carl J. and Sag, Ivan A. (1987).
Information-Based Syntax and Semantics:
Volume I - Fundamentals, volume 13 of
CSLI Lecture Notes. Chicago University
Press.
Winograd, Terry (1983). Language as a Cogni-
tive Process: Volume I - Syntax. Addison-
Wesley.
</reference>
<page confidence="0.998344">
16
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.870748">
<title confidence="0.998546">INCLUSION, DISJOINTNESS AND CHOICE: THE LOGIC OF LINGUISTIC CLASSIFICATION</title>
<author confidence="0.998263">Bob Carpenter</author>
<affiliation confidence="0.959174666666667">Computational Linguistics Program Philosophy Department Carnegie Mellon University</affiliation>
<address confidence="0.999819">Pittsburgh, PA 15213</address>
<email confidence="0.998964">carp@caesar.lcl.cmu.edu</email>
<author confidence="0.998397">Carl Pollard</author>
<affiliation confidence="0.9987385">Linguistics Department Ohio Sate University</affiliation>
<address confidence="0.999962">Columbus, OH 43210</address>
<email confidence="0.989649">pollardahpuxa.ircc.ohio-state.edu</email>
<abstract confidence="0.998189">We investigate the logical structure of concepts generated by conjunction and disjunction over a monotonic multiple inheritance network where concept nodes represent linguistic categories and links indicate basic inclusion (isA) and disjointness (IsNoTA) relations. We model the distinction between primitive and defined concepts as well as between closedand open-world reasoning. We apply our logical analysis to the sort inheritance and unification system of HPSG and also to classification in systemic choice systems.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Alexander Borgida</author>
<author>Ronald J Brachman</author>
<author>Deborah L McGuinness</author>
<author>Lori A Resnick</author>
</authors>
<title>CLASSIC: A structural data model for objects.</title>
<date>1989</date>
<booktitle>In Proceedings of the SIGMOD International Conference on Management of Data,</booktitle>
<location>Portland, Oregon.</location>
<contexts>
<context position="2942" citStr="Borgida et al. 1989" startWordPosition="422" endWordPosition="425">mitive concepts and then form arbitrary disjunctions of these conjunctions. The conjunctive construction is useful on its own as its result is a semilattice where meet corresponds to conjunction. In particular, the conjunctive semilattice is ideally suited to conjunctive logics such as those employed for unification, as in HPSG. We will consider the distinction between primitive and defined concepts, a well-known distinction expressible in terminological reasoning systems such as KL-ONE (Brachman 1979, Brachman and Schmolze 1985), and its descendants (such as LOOM (MacGregor 1988) or CLASSIC (Borgida et al. 1989)). We also tackle the variety of closed-world reasoning that is necessary for modeling constraint-based grammars such as HPSG. A similar form of closed-world reasoning is supported by LOOM with the disjoint-covering construction. One of the benefits of our notion of inheritance is that it allows us to express the natural semantics of both systemic choice systems and HPSG inheritance hierarchies using basic concepts and ISA and ISNOTA links. In particular, we will see how choice systems correspond to ISNOTA reasoning, multiple choices can be captured in our conjunctive construction and how depe</context>
</contexts>
<marker>Borgida, Brachman, McGuinness, Resnick, 1989</marker>
<rawString>Borgida, Alexander; Brachman, Ronald J.; McGuinness, Deborah L. and Resnick, Lori A. (1989). CLASSIC: A structural data model for objects. In Proceedings of the SIGMOD International Conference on Management of Data, Portland, Oregon.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alex Borgida</author>
<author>David W Etherington</author>
</authors>
<title>Disjunction in inheritance hierarchies.</title>
<date>1989</date>
<booktitle>In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning,</booktitle>
<pages>33--43</pages>
<publisher>Morgan Kaufmann.</publisher>
<contexts>
<context position="16048" citStr="Borgida and Etherington 1989" startWordPosition="2727" endWordPosition="2730">ts While meets in the conjunctive concept ordering represent conjunction, joins (intersections) do not represent disjunction. For instance, {ruse} U {fem} = {msc} U {neu} = {3rd, sng}, but the information that an object is masculine or feminine is different than the information that it is masculine or neuter, and more specific than the information that it is simply third-singular. The granularity of the original network dramatically affects the disjunctive concepts which can be rep13 agr num pers pin sng 3rd 1st gen /f■.. DISC fern neu Figure 6: HPSG Inheritance Network Notation resented (see Borgida and Etherington 1989). For example, we could have partitioned gender into animate and neu concepts and then partitioned the animate concept into msc and fern. This move would distinguish the join of msc and fern from the join of msc and neu. To complete our study of the logic of simple inheritance, we employ a well-known latticetheoretic technique for embedding a partial order into a distributive lattice; when applied to conjunctive concept hierarchies, the result is a distributive lattice where concepts correspond to arbitrary conjunctions and disjunctions of basic concepts with joins and meets representing disju</context>
</contexts>
<marker>Borgida, Etherington, 1989</marker>
<rawString>Borgida, Alex and Etherington, David W. (1989). Disjunction in inheritance hierarchies. In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, pages 33-43. Morgan Kaufmann.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ronald J Brachman</author>
</authors>
<title>On the epistemological status of semantic networks.</title>
<date>1979</date>
<booktitle>Associative Networks: Representation and Use of Knowledge by Computers,</booktitle>
<pages>3--50</pages>
<editor>In Findler, N., editor,</editor>
<publisher>Academic Press.</publisher>
<contexts>
<context position="2828" citStr="Brachman 1979" startWordPosition="405" endWordPosition="406"> our construction into two stages: we begin with the consistent conjunctive concepts generated from our primitive concepts and then form arbitrary disjunctions of these conjunctions. The conjunctive construction is useful on its own as its result is a semilattice where meet corresponds to conjunction. In particular, the conjunctive semilattice is ideally suited to conjunctive logics such as those employed for unification, as in HPSG. We will consider the distinction between primitive and defined concepts, a well-known distinction expressible in terminological reasoning systems such as KL-ONE (Brachman 1979, Brachman and Schmolze 1985), and its descendants (such as LOOM (MacGregor 1988) or CLASSIC (Borgida et al. 1989)). We also tackle the variety of closed-world reasoning that is necessary for modeling constraint-based grammars such as HPSG. A similar form of closed-world reasoning is supported by LOOM with the disjoint-covering construction. One of the benefits of our notion of inheritance is that it allows us to express the natural semantics of both systemic choice systems and HPSG inheritance hierarchies using basic concepts and ISA and ISNOTA links. In particular, we will see how choice sys</context>
</contexts>
<marker>Brachman, 1979</marker>
<rawString>Brachman, Ronald J. (1979). On the epistemological status of semantic networks. In Findler, N., editor, Associative Networks: Representation and Use of Knowledge by Computers, pages 3-50. Academic Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ronald J Brachman</author>
<author>James G Schmolze</author>
</authors>
<title>An overview of the KL-ONE knowledge representation system.</title>
<date>1985</date>
<journal>Cognitive Science,</journal>
<pages>9--171</pages>
<contexts>
<context position="2857" citStr="Brachman and Schmolze 1985" startWordPosition="407" endWordPosition="411">on into two stages: we begin with the consistent conjunctive concepts generated from our primitive concepts and then form arbitrary disjunctions of these conjunctions. The conjunctive construction is useful on its own as its result is a semilattice where meet corresponds to conjunction. In particular, the conjunctive semilattice is ideally suited to conjunctive logics such as those employed for unification, as in HPSG. We will consider the distinction between primitive and defined concepts, a well-known distinction expressible in terminological reasoning systems such as KL-ONE (Brachman 1979, Brachman and Schmolze 1985), and its descendants (such as LOOM (MacGregor 1988) or CLASSIC (Borgida et al. 1989)). We also tackle the variety of closed-world reasoning that is necessary for modeling constraint-based grammars such as HPSG. A similar form of closed-world reasoning is supported by LOOM with the disjoint-covering construction. One of the benefits of our notion of inheritance is that it allows us to express the natural semantics of both systemic choice systems and HPSG inheritance hierarchies using basic concepts and ISA and ISNOTA links. In particular, we will see how choice systems correspond to ISNOTA rea</context>
<context position="8571" citStr="Brachman and Schmolze 1985" startWordPosition="1426" endWordPosition="1429"> f}, we generate the conjunctive concepts in Figure 3. We have adopted the condition of only displaying the maximally specific primitive concepts of a conjunctive concept, as the other basic concepts can be determined from these. Note that the assumption that 1, the most {} {d} fel t {a} {d,e} {c} t {a,e} {a,c} Defined Concepts So far, we have considered only primitive basic concepts. A defined basic concept is taken to be fully determined by its set of superconcepts (in the general terminological case with roles, restrictions on role values can also contribute to the definition of a concept (Brachman and Schmolze 1985)). In particular, a defined basic concept P is assumed to carry the same information as the conjunction of all of the concepts P&apos; such that P ISA P&apos;. For example, consider the basic concept b in Figure 1. The conjunctive concept {6, d, e, f} is strictly more informative than {d, e, f}; the primitiveness of b allows for the possibility that there is information to be gained from knowing that an object is a b that can not be gained from knowing that it is both a d and an e. On the other hand, if we assume that b is defined, then the presence of d and e in a conjunctive concept should ensure the </context>
</contexts>
<marker>Brachman, Schmolze, 1985</marker>
<rawString>Brachman, Ronald J. and Schmolze, James G. (1985). An overview of the KL-ONE knowledge representation system. Cognitive Science, 9:171-216.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bob Carpenter</author>
</authors>
<title>Typed feature structures: Inheritance, (in)equations and extensionality.</title>
<date>1990</date>
<booktitle>In Proceedings of the First International Workshop on Inheritance in Natural Language Processing,</booktitle>
<pages>9--13</pages>
<location>Tilburg, The Netherlands.</location>
<contexts>
<context position="2059" citStr="Carpenter (1990)" startWordPosition="288" endWordPosition="289">t semilattice whose nodes correspond to consistent conjunctions of basic concepts and where meet corresponds to conjunction. We also show how to embed this result in a distributive lattice where the elements correspond to arbitrary conjunctions and disjunctions of basic concepts and where meet and join correspond to conjunction and disjunction, respectively. While we do not consider either role- or attribute-based reasoning in this paper, our constructions are directly applicable as a front-end for the combined attributeand concept-based formalisms of Ait-Kaci (1986), Nebel and Smolka (1989), Carpenter (1990), Carpenter, Pollard and Franz (1991) and Pollard (in press). The fact that terms in distributive lattices have disjunctive normal forms allows us to factor our construction into two stages: we begin with the consistent conjunctive concepts generated from our primitive concepts and then form arbitrary disjunctions of these conjunctions. The conjunctive construction is useful on its own as its result is a semilattice where meet corresponds to conjunction. In particular, the conjunctive semilattice is ideally suited to conjunctive logics such as those employed for unification, as in HPSG. We wil</context>
</contexts>
<marker>Carpenter, 1990</marker>
<rawString>Carpenter, Bob (1990). Typed feature structures: Inheritance, (in)equations and extensionality. In Proceedings of the First International Workshop on Inheritance in Natural Language Processing, 9-13, Tilburg, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bob Carpenter</author>
<author>Carl Pollard</author>
<author>Alex Franz</author>
</authors>
<title>The specification and implementation of constraint-based unification grammars.</title>
<date>1991</date>
<booktitle>In Proceedings of the Second International Workshop on Parsing Technology,</booktitle>
<location>Cancun, Mexico.</location>
<marker>Carpenter, Pollard, Franz, 1991</marker>
<rawString>Carpenter, Bob; Pollard, Carl and Franz, Alex (1991). The specification and implementation of constraint-based unification grammars. In Proceedings of the Second International Workshop on Parsing Technology, Cancun, Mexico.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bob Carpenter</author>
<author>Richmond Thomason</author>
</authors>
<title>Inheritance theory and path-based reasoning: An introduction.</title>
<date>1990</date>
<booktitle>Defeasible Reasoning and Knowledge Representation, volume 5 of Studies in Cognitive Systems,</booktitle>
<pages>309--344</pages>
<editor>In Kyburg, Jr., Henry E.; Loui, Ronald P. and Carlson, Greg N., (ed.),</editor>
<publisher>Kluwer.</publisher>
<contexts>
<context position="5141" citStr="Carpenter and Thomason 1990" startWordPosition="782" endWordPosition="785">n in the actual extensions of the concepts themselves. This is in accord with standard linguistic practice, where the focus is on types of utterances rather than utterance tokens. An example of an inheritance network is given in Figure 1. We have followed the standard convention of placing the more specific elements toward the bottom of the network, with arrows indicating the directionality of the ISA links (for instance, d ISA f and b ISNOTA C). d e a b Figure 1: Inheritance Hierarchy We can automatically deduce all of the inclusion and disjointness relations that follow from the basic ones (Carpenter and Thomason 1990). Definition 2 (Inclusion/Disjointness) The inclusion relation ISA* C BasConc x BasConc is the smallest such that: • P ISA* P (Reflexive) • if P ISA Q and Q ISA* R then P ISA* R (Transitive) The disjointness relation ISNOTA* C BasConc x BasConc is the smallest such that: • if P ISNOTA Q Or Q ISNOTA P then P ISNOTA* Q (Symmetry) • if P ISA* Q and Q ISNOTA* R then P ISNOTA* R (Chaining) These derived inclusion and disjointness relations express all of the information that follows from the basic relations. In particular, ISA* is the smallest pre-order extending ISA. For convenience, we allow conc</context>
</contexts>
<marker>Carpenter, Thomason, 1990</marker>
<rawString>Carpenter, Bob and Thomason, Richmond (1990). Inheritance theory and path-based reasoning: An introduction. In Kyburg, Jr., Henry E.; Loui, Ronald P. and Carlson, Greg N., (ed.), Defeasible Reasoning and Knowledge Representation, volume 5 of Studies in Cognitive Systems, 309-344. Kluwer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B A Davey</author>
<author>H A Priestley</author>
</authors>
<title>Introduction to Lattices and Order.</title>
<date>1990</date>
<publisher>Cambridge University Press.</publisher>
<contexts>
<context position="18663" citStr="Davey and Priestley 1990" startWordPosition="3177" endWordPosition="3180"> = cb(P) n 0(P&apos;). Note that this embedding coincides with the standard embedding of a domain into its upper (Smyth) powerdomain (Gunter and Scott in press), with the only difference being that we have reversed the orders of both domains (with the informationally more specific elements toward the bottom), as is conventional in inheritance networks. More than 30 disjunctive concepts result from the conjunctive concepts in Figure 3, so we will not provide a graphic display of the results of the disjunctive construction applied to a realistic example (for examples of the general construction, see Davey and Priestley 1990). Closed World Reasoning In HPSG, Pollard and Sag (1987) partition the concept sign into two sub-concepts, phrase and 14 word. This arrangement generates the conjunctive concepts {sign}, {phrase} and {word}. Applying the disjunctive construction to this result, though, gives us a disjunctive concept {{word}, {phrase}} which is strictly more informative than {{sign}}. This distinction demonstrates the open-world nature of our construction; it allows for the possibility of signs which are neither words nor phrases. This form of openworld reasoning is the standard in terminological reasoning syst</context>
</contexts>
<marker>Davey, Priestley, 1990</marker>
<rawString>Davey, B.A. and Priestley, H.A. (1990). Introduction to Lattices and Order. Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Flickinger</author>
<author>Carl J Pollard</author>
<author>Thomas Wasow</author>
</authors>
<title>Structure-sharing in lexical representation.</title>
<date>1985</date>
<booktitle>In Proceedings of the 23rd Annual Conference of the Association for Computational Linguistics.</booktitle>
<marker>Flickinger, Pollard, Wasow, 1985</marker>
<rawString>Flickinger, Daniel; Pollard, Carl J. and Wasow, Thomas (1985). Structure-sharing in lexical representation. In Proceedings of the 23rd Annual Conference of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Carl Gunter</author>
<author>Dana S Scott</author>
</authors>
<title>(in press). Semantic domains. In Theoretical Computer Science.</title>
<publisher>North-Holland.</publisher>
<marker>Gunter, Scott, </marker>
<rawString>Gunter, Carl and Scott, Dana S. (in press). Semantic domains. In Theoretical Computer Science. North-Holland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert T Kasper</author>
</authors>
<title>Unification and classification: An experiment in information-based parsing.</title>
<date>1989</date>
<booktitle>In First International Workshop on Parsing Technologies,</booktitle>
<pages>1--7</pages>
<location>Pittsburgh.</location>
<marker>Kasper, 1989</marker>
<rawString>Kasper, Robert T. (1989). Unification and classification: An experiment in information-based parsing. In First International Workshop on Parsing Technologies, 1-7. Pittsburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul King</author>
</authors>
<title>A Logical Formalism for Head-Driven Phrase Structure Grammar.</title>
<date>1989</date>
<tech>PhD thesis,</tech>
<institution>University of Manchester.</institution>
<marker>King, 1989</marker>
<rawString>King, Paul (1989). A Logical Formalism for Head-Driven Phrase Structure Grammar. PhD thesis, University of Manchester.</rawString>
</citation>
<citation valid="true">
<title>Halliday: System and Function in Language.</title>
<date>1976</date>
<editor>Kress, Gunther (ed.)</editor>
<publisher>University of Oxford Press.</publisher>
<marker>1976</marker>
<rawString>Kress, Gunther (ed.) (1976) Halliday: System and Function in Language. University of Oxford Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert MacGregor</author>
</authors>
<title>A deductive pattern matcher.</title>
<date>1988</date>
<booktitle>In Proceedings of the 1988 National Conference on Artificial Intelligence,</booktitle>
<pages>403--408</pages>
<location>St. Paul, Minnesota.</location>
<contexts>
<context position="2909" citStr="MacGregor 1988" startWordPosition="418" endWordPosition="419">cepts generated from our primitive concepts and then form arbitrary disjunctions of these conjunctions. The conjunctive construction is useful on its own as its result is a semilattice where meet corresponds to conjunction. In particular, the conjunctive semilattice is ideally suited to conjunctive logics such as those employed for unification, as in HPSG. We will consider the distinction between primitive and defined concepts, a well-known distinction expressible in terminological reasoning systems such as KL-ONE (Brachman 1979, Brachman and Schmolze 1985), and its descendants (such as LOOM (MacGregor 1988) or CLASSIC (Borgida et al. 1989)). We also tackle the variety of closed-world reasoning that is necessary for modeling constraint-based grammars such as HPSG. A similar form of closed-world reasoning is supported by LOOM with the disjoint-covering construction. One of the benefits of our notion of inheritance is that it allows us to express the natural semantics of both systemic choice systems and HPSG inheritance hierarchies using basic concepts and ISA and ISNOTA links. In particular, we will see how choice systems correspond to ISNOTA reasoning, multiple choices can be captured in our conj</context>
</contexts>
<marker>MacGregor, 1988</marker>
<rawString>MacGregor, Robert (1988). A deductive pattern matcher. In Proceedings of the 1988 National Conference on Artificial Intelligence, pages 403-408, St. Paul, Minnesota.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christopher S Mellish</author>
</authors>
<title>Implementing systemic classification via unification.</title>
<date>1988</date>
<journal>Computational Linguistics,</journal>
<pages>14--40</pages>
<contexts>
<context position="1117" citStr="Mellish 1988" startWordPosition="146" endWordPosition="148">guistic categories and links indicate basic inclusion (isA) and disjointness (IsNoTA) relations. We model the distinction between primitive and defined concepts as well as between closed- and open-world reasoning. We apply our logical analysis to the sort inheritance and unification system of HPSG and also to classification in systemic choice systems. Introduction Our focus in this paper is a stripped-down monotonic inheritance-based knowledge representation system which can be applied directly to provide a clean declarative semantics for Halliday&apos;s systemic choice systems (see Winograd 1983, Mellish 1988, Kress 1976) and the inheritance module of head-driven phrase-structure grammar (HPSG) (Pollard and Sag 1987, Pollard in press). Our inheritance networks are constructed from only the most rudimentary primitives: basic concepts and ISA and ISNOTA links. By applying general algebraic techniques, we show how to generate a meet semilattice whose nodes correspond to consistent conjunctions of basic concepts and where meet corresponds to conjunction. We also show how to embed this result in a distributive lattice where the elements correspond to arbitrary conjunctions and disjunctions of basic con</context>
<context position="11021" citStr="Mellish (1988)" startWordPosition="1877" endWordPosition="1878">concepts is given by: nr ▪ n{p, E ConjConc I P&apos; J P for each P E --= (){P&apos; E ConjConc I 13&apos; D UP} =-- {P E BasConc I for every P&apos; E ConjConc, } P&apos; D UP implies P E P&apos; Proof: This is an immediate consequence of the fact that ConjConc is closed under arbitrary intersections. El Another way to generate the meet of a collection of conjunctive concepts is to close their union under inheritance and concept definition. It should be observed that joins (intersections), while always existing, in general represent only informational generalizations, not necessarily disjunctions. Systemic Choice Systems Mellish (1988) showed how the concepts expressible using a systemic choice network such as that found in Figure 4 can be embedded into the lattice of first-order terms with conjunction represented by unification. Our characterization of the concepts expressible in a systemic net instead relies on the translation of systemic notation into an inheritance network with isAand ISNOTA links. The resulting conjunctive concepts correspond to the concepts that can be expressed in the systemic net. An example of a systemic choice network in the notation of Mellish (1988), is Figure 4. The connective I, of which there</context>
</contexts>
<marker>Mellish, 1988</marker>
<rawString>Mellish, Christopher S. (1988). Implementing systemic classification via unification. Computational Linguistics, 14:40-51.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bernhard Nebel</author>
<author>Gert Smolka</author>
</authors>
<title>Representationa dn reasoning with attributive descriptions.</title>
<date>1989</date>
<tech>IWBS Report 81,</tech>
<institution>IBM -Deutschland GmbH,</institution>
<location>Stuttgart.</location>
<contexts>
<context position="2041" citStr="Nebel and Smolka (1989)" startWordPosition="284" endWordPosition="287">how how to generate a meet semilattice whose nodes correspond to consistent conjunctions of basic concepts and where meet corresponds to conjunction. We also show how to embed this result in a distributive lattice where the elements correspond to arbitrary conjunctions and disjunctions of basic concepts and where meet and join correspond to conjunction and disjunction, respectively. While we do not consider either role- or attribute-based reasoning in this paper, our constructions are directly applicable as a front-end for the combined attributeand concept-based formalisms of Ait-Kaci (1986), Nebel and Smolka (1989), Carpenter (1990), Carpenter, Pollard and Franz (1991) and Pollard (in press). The fact that terms in distributive lattices have disjunctive normal forms allows us to factor our construction into two stages: we begin with the consistent conjunctive concepts generated from our primitive concepts and then form arbitrary disjunctions of these conjunctions. The conjunctive construction is useful on its own as its result is a semilattice where meet corresponds to conjunction. In particular, the conjunctive semilattice is ideally suited to conjunctive logics such as those employed for unification, </context>
</contexts>
<marker>Nebel, Smolka, 1989</marker>
<rawString>Nebel, Bernhard and Smolka, Gert (1989). Representationa dn reasoning with attributive descriptions. IWBS Report 81, IBM -Deutschland GmbH, Stuttgart.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Carl J Pollard</author>
</authors>
<title>(in press). Sorts in unificationbased grammar and what they mean.</title>
<editor>In Pinkal, M. and Gregor, B., editors,</editor>
<publisher>MIT Press.</publisher>
<marker>Pollard, </marker>
<rawString>Pollard, Carl J. (in press). Sorts in unificationbased grammar and what they mean. In Pinkal, M. and Gregor, B., editors, Unification in Natural Language Analysis. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carl J Pollard</author>
<author>Ivan A Sag</author>
</authors>
<title>Information-Based Syntax and Semantics: Volume I - Fundamentals,</title>
<date>1987</date>
<volume>13</volume>
<publisher>Chicago University Press.</publisher>
<contexts>
<context position="1226" citStr="Pollard and Sag 1987" startWordPosition="160" endWordPosition="163">odel the distinction between primitive and defined concepts as well as between closed- and open-world reasoning. We apply our logical analysis to the sort inheritance and unification system of HPSG and also to classification in systemic choice systems. Introduction Our focus in this paper is a stripped-down monotonic inheritance-based knowledge representation system which can be applied directly to provide a clean declarative semantics for Halliday&apos;s systemic choice systems (see Winograd 1983, Mellish 1988, Kress 1976) and the inheritance module of head-driven phrase-structure grammar (HPSG) (Pollard and Sag 1987, Pollard in press). Our inheritance networks are constructed from only the most rudimentary primitives: basic concepts and ISA and ISNOTA links. By applying general algebraic techniques, we show how to generate a meet semilattice whose nodes correspond to consistent conjunctions of basic concepts and where meet corresponds to conjunction. We also show how to embed this result in a distributive lattice where the elements correspond to arbitrary conjunctions and disjunctions of basic concepts and where meet and join correspond to conjunction and disjunction, respectively. While we do not consid</context>
<context position="13488" citStr="Pollard and Sag (1987)" startWordPosition="2299" endWordPosition="2302"> ISA sng and MSC ISA 3rd. In Figure 5, we disply the conjunctive concepts 12 {1st} {3rd} {sng} {plu} {1st,sng} {3rd,sng} {lst,plu} {3rd,plu} {3rd,sng,mse} {3rd,sng,fem} {3rd,sng,neu} Figure 5: Systemic Choices generated by the inheritance net stemming from the choice system in Figure 4. A fully determined choice in a choice system corresponds to a maximally specific conjunctive concept, of which there are six in Figure 5. Sort Inheritance in HPSG An example of an HPSG sort inheritance hierarchy which represents the same information as the systemic choice system in Figure 4, in the notation of Pollard and Sag (1987), is given in Figure 6. The basic principle behind the HPSG notation is that the bold elements correspond to basic concepts, while the boxed elements correspond to partitions, so-called because the concepts in a partition are both pairwise disjoint and exhaustive. In terms of an inheritance network, the elements of a partition (those concepts directly below the partition in the diagram) are related by basic ISNOTA links. For instance, we would have plu ISNOTA sing. Each partition may also have dependencies which must be fulfilled for the choice to be made; in our case, before an element of the</context>
<context position="18719" citStr="Pollard and Sag (1987)" startWordPosition="3186" endWordPosition="3189">he standard embedding of a domain into its upper (Smyth) powerdomain (Gunter and Scott in press), with the only difference being that we have reversed the orders of both domains (with the informationally more specific elements toward the bottom), as is conventional in inheritance networks. More than 30 disjunctive concepts result from the conjunctive concepts in Figure 3, so we will not provide a graphic display of the results of the disjunctive construction applied to a realistic example (for examples of the general construction, see Davey and Priestley 1990). Closed World Reasoning In HPSG, Pollard and Sag (1987) partition the concept sign into two sub-concepts, phrase and 14 word. This arrangement generates the conjunctive concepts {sign}, {phrase} and {word}. Applying the disjunctive construction to this result, though, gives us a disjunctive concept {{word}, {phrase}} which is strictly more informative than {{sign}}. This distinction demonstrates the open-world nature of our construction; it allows for the possibility of signs which are neither words nor phrases. This form of openworld reasoning is the standard in terminological reasoning systems such as KL-ONE or CLASSIC, though LOOM provides a no</context>
</contexts>
<marker>Pollard, Sag, 1987</marker>
<rawString>Pollard, Carl J. and Sag, Ivan A. (1987). Information-Based Syntax and Semantics: Volume I - Fundamentals, volume 13 of CSLI Lecture Notes. Chicago University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Winograd</author>
</authors>
<title>Language as a Cognitive Process: Volume I -</title>
<date>1983</date>
<publisher>Syntax. AddisonWesley.</publisher>
<contexts>
<context position="1103" citStr="Winograd 1983" startWordPosition="144" endWordPosition="145">s represent linguistic categories and links indicate basic inclusion (isA) and disjointness (IsNoTA) relations. We model the distinction between primitive and defined concepts as well as between closed- and open-world reasoning. We apply our logical analysis to the sort inheritance and unification system of HPSG and also to classification in systemic choice systems. Introduction Our focus in this paper is a stripped-down monotonic inheritance-based knowledge representation system which can be applied directly to provide a clean declarative semantics for Halliday&apos;s systemic choice systems (see Winograd 1983, Mellish 1988, Kress 1976) and the inheritance module of head-driven phrase-structure grammar (HPSG) (Pollard and Sag 1987, Pollard in press). Our inheritance networks are constructed from only the most rudimentary primitives: basic concepts and ISA and ISNOTA links. By applying general algebraic techniques, we show how to generate a meet semilattice whose nodes correspond to consistent conjunctions of basic concepts and where meet corresponds to conjunction. We also show how to embed this result in a distributive lattice where the elements correspond to arbitrary conjunctions and disjunction</context>
</contexts>
<marker>Winograd, 1983</marker>
<rawString>Winograd, Terry (1983). Language as a Cognitive Process: Volume I - Syntax. AddisonWesley.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>