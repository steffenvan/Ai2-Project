<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.033616">
<title confidence="0.852363">
Suregen-2: a shell system for the generation of clinical documents
</title>
<author confidence="0.976388">
Dirk Hilske-Kraus
</author>
<affiliation confidence="0.844808">
University for Health Informatics and Technology Tyrol (UMIT)
Institute for Health Information Systems
</affiliation>
<note confidence="0.554531">
postal address: Georgstrasse 11, 32545 Bad Oeynhausen, Germany
</note>
<email confidence="0.971379">
Dirk.Hueske-Kraus@suregen.de
</email>
<sectionHeader confidence="0.997043" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.998446166666667">
Suregen-2 applications are intended for
use as add-on modules for clinical infor-
mation systems. Currently, Suregen-2
permits refinement of the predefined
medical ontology, specification of text
plans and description knowledge for ob-
jects of the ontology. It has built-in con-
structs for referential expressions,
aggregation, enumeration and recurrent
semantic constellations. A first applica-
tion built with Suregen-2, which currently
supports German only, is in routine use.
</bodyText>
<sectionHeader confidence="0.999392" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999825787234042">
In 2000 we were faced with the situation that our
existing systems for generating medical findings
had a very high user acceptance but, being
programmed conventionally, had become almost
unmaintainable. We needed a system linking to
existing clinical information systems and
generating appropriate (German) text for
findings, procedure reports and referral letters.
The text should be as close as possible to con-
ventionally dictated text with regard to used
lexemes, common formulations, conciseness and
even the stylistic preferences of individual physi-
cians. The system should be flexible enough to
keep pace with the rapid progress of medical
technology in a university hospital. We
performed a text-linguistic analysis of medical
documents (outlined in (Htiske-Kraus, 2003))
identifying additional requirements for our
system: It should incorporate an extendible
ontology of clinical medicine, i.e. not only signs,
symptoms, diseases and bodily locations but also
rather elaborate process structures of clinical
actions, and even seemingly trivialitems such as
syringes, drugs or persons (medical personnel,
patients&apos; relatives). It should also be able to
handle referential expressions, especially
anaphora and deicticals, Tgregation of various
kinds and ellipsis, and the quite frequent &amp;quot;enu-
merative expressions&amp;quot;. Due to the vital im-
portance of the generated text, the system
designer should have maximum control over
lexical choice, sentence formation and supra-
sentential structures. In order to give a user
instant feedback of the resulting text, the
generation should be done in under one second.
With these criteria in mind we undertook an
extensive review of the literature (see (Htiske-
Kraus, 2003)) but, not surprisingly, such a system
was nowhere to be found. So we decided to build
one in Allegro CommonLisp, using insights and,
wherever possible, techniques from the NLG
domain and in so doing deliberately valuing
practicability over algorithmic elegance or scien-
tific generality.
The Suregen-2 kernel consists of several
modules described below, organised in a pipeline
architecture (Reiter and Dale, 1997).
</bodyText>
<sectionHeader confidence="0.898053" genericHeader="introduction">
2 The ontology
</sectionHeader>
<bodyText confidence="0.995236272727273">
Suregen-2 already has a base ontology of medi-
cine which may be augmented with concepts of
the respective application domain. One of the key
concepts behind Suregen-2 is the idea of defining
description knowledge (via ToDescrlbe) at the
class level in the ontology. In an ideal situation it
would therefore be sufficient to define the
concepts of the domain as subclasses of the
Suregen-2 base classes in order to build a new
application. In practise, however, it will no doubt
be necessary to tailor some of the descriptions to
</bodyText>
<page confidence="0.998177">
215
</page>
<bodyText confidence="0.9997169">
specific application requirements. As the
description clauses for a class may contain
references to other objects&apos; descriptions
(Describes), complex texts may be built up from
the description of a single object. The text plan
could even consist of a single (complex) object&apos;s
description. Please note that the ontology is not
merely a means of organizing description
knowledge but also of conveying implicit
information used for generation.
</bodyText>
<sectionHeader confidence="0.983176" genericHeader="method">
3 The generation algorithm
</sectionHeader>
<bodyText confidence="0.999952272727273">
The algorithm essentially substitutes occurrences
Of DescribeS in the text plan with the
corresponding description clauses, then inserts
pointers for nominal references, and evaluates the
text plan. In the next step calls to Aggregate are
evaluated, referential pointers are resolved and
word and phrase order is modified. In these
successive modifications to the text plan a
constituent tree is built up where each node may
hold information regarding syntactical form,
syntactical role and base lexemes of the subtree.
</bodyText>
<sectionHeader confidence="0.989458" genericHeader="method">
4 Description templates
</sectionHeader>
<bodyText confidence="0.945089090909091">
The function ToDescribe is used to define
description templates for classes. There may be
several templates for a given class, varying with
regard to the (syntactical) form of generation
result, the style to which the description belongs
and the facet of the object to be described.
Consider the class CAD, inheriting from its
superclass SuregenDiseaseEntity the attrib-
utes degree and affectedBodyStructures
(ToDescribe :a CAD :as :noun
:use (Case my :degree)
</bodyText>
<equation confidence="0.9083615">
(:unspecified &amp;quot;CAD&amp;quot;)
(1 &amp;quot;single vessel disease&amp;quot;)
(2 &amp;quot;two vessel disease&amp;quot;)
(3 &amp;quot;three vessel disease&amp;quot;)))
</equation>
<bodyText confidence="0.942368666666667">
Wherever a description of an instance of CAD as
a noun is now referred to, the above clause (after
:use) is inserted. Consider now:
</bodyText>
<construct confidence="0.917183714285714">
(ToDescribe :a CAD :as :NP
:use (Noun-phrase
:noun (DescribeS it :as :noun)
:adjective &amp;quot;coronary&amp;quot;
:attribute (Parenthesized
(DescribeS (affectedBodyStructures it)
:its :stenoses :as :NP)))
</construct>
<bodyText confidence="0.9961135">
This illustrates how to describe CAD instances as
noun phrases making use of the previous
description (as a noun) and the description of the
: stenoses-facet of the affected body structures.
The : use-clause may contain an arbitrary mix of
&amp;quot;canned text&amp;quot; strings, calls to Suregen-2 utilities,
descriptions of other objects and calls to
morphosyntactic functions. Designed to be
configurable by trained end users, Suregen-2
offers elementary grammatical constructs with
sensible defaults:
(Main-Clause :subject &amp;quot;heart&amp;quot;
:predicate &amp;quot;to beat&amp;quot;)
gives &amp;quot;heart beats&amp;quot; since :singular, 3 (:person)
:present (:tempus), :active and :indicative are
defaults. Suregen-2 offers inflection of lexemes,
complex phrases clauses and supraclausal or
suprasentential constructs.
</bodyText>
<sectionHeader confidence="0.997195" genericHeader="method">
5 Semantic functions
</sectionHeader>
<bodyText confidence="0.9999487">
In the building of the first tentative applications
with Suregen-2 it became obvious that certain
constellations tend to reoccur frequently in the
intended domains. For instance, the quantifica-
tion of a medical parameter is very common and
so is the description of a certain pathological
condition at a certain body location. To avoid
defining structurally identical descriptions of,
say, body temperature, heart rate or LVEDD,
Suregen-2 offers the possibility of defining the
constellation &amp;quot;parameter with value, dimension
and unit&amp;quot; as a semantic function, a kind of
&amp;quot;macro&amp;quot;-construct.&amp;quot; Unlike other approaches
(e.g. TECHDOC (Stede, 1999)) these functions
do not operate on relations specified declaratively
in a formalism such as LOOM (MacGregor and
Bates, 1987) but operate on instances&apos; attributes.
This surely trades flexibility and expressivity of a
standard formalism for simplicity and perform-
ance.
</bodyText>
<sectionHeader confidence="0.997497" genericHeader="method">
6 Aggregation
</sectionHeader>
<bodyText confidence="0.998398142857143">
As has already been observed (Shaw, 1998a), the
sublanguage of clinical medicine uses much
aggregation. Suregen-2 therefore supports two
types of aggregation, conjunction reduction
(&amp;quot;segregatory coordination&amp;quot; (Shaw, 1998b)) and
conceptual Tgregation (Wilkinson, 1995). The
former is mainly used to aggregate noun phrases
</bodyText>
<page confidence="0.994814">
216
</page>
<bodyText confidence="0.999976090909091">
with identical or coreferential components.
Conceptual aggregation, in our case paraphrased
as &amp;quot;finding a single term for a collection of
terms&amp;quot;, is necessarily connected with relations
holding in the domain. The most common case of
conceptual aggregation is that from subparts of
the body to the encompassing body structure.
Unfortunately aggregation along relations in the
ontology is not trivial, since not all relations are
transitive along the part-of relation (Bernauer,
1996). Moreover, speech habits in medicine
permit aggregation even where it is unjustified by
part-whole reasoning. To account for this,
Suregen-2 offers the possibility of defining
&amp;quot;aggregator objects&amp;quot;, in the above example an
object which performs the possible aggregations
given the presence or absence of a certain
condition for the left and right atria and
ventricles. The necessity of defining ad-hoc
aggregator objects is somewhat unsatisfactory
but it is due to idiosyncrasies of the medical
sublanguage rather than to the chosen approach.
</bodyText>
<sectionHeader confidence="0.983447" genericHeader="method">
7 Lexical choice
</sectionHeader>
<bodyText confidence="0.940378125">
The problem of lexical choice, for which there
are plenty of approaches (Cahill, 1999; Edmonds,
1997; Elhadad, 1996; Nogier and Zock, 1992),
has more been circumnavigated than solved in
Suregen-2. Firstly, there are many proper names
in the Suregen-2 target application domain,
standardized in the UMLS (McCray and Nelson,
1995) and a large body of names and acronyms
common to a medical sub-specialty. Together
with the lexemes which are &amp;quot;hard coded&amp;quot; in the
Describes-clauses all these have one-to-one
associations of concepts to lexemes.
Additionally, using a nanofunctionality of lexical
semantics, Suregen-2 is able to deal with
synonyms, antonyms and hyperonyms,
permitting the aggregation of two adjacent NPs
such as &amp;quot;Einbringen des Kameratrokars&amp;quot; and
&amp;quot;Einfiihren der Optik&amp;quot;, with different but
synonymous heads.
The process for the production of referential
expressions is based on a quite simple algorithm
which is nevertheless sufficient for clinical
documents. Due to the rather clear-cut thematic -
rhematic structure, simple pronouns and an
occasional reference using a hyperonym for the
object in focus is appropriate. Lexical choice is
also involved in the generation of &amp;quot;preferred
terms&amp;quot;. Declarative statements such as
(AssertThat :a &amp;quot;inflammation&amp;quot;
:which (Is-Located o-appendix)
:is-called &amp;quot;appendicitis&amp;quot;)
allow for the selection of common terms.
</bodyText>
<sectionHeader confidence="0.991044" genericHeader="evaluation">
8 Evaluation
</sectionHeader>
<bodyText confidence="0.999579875">
For a shell system such as Suregen-2, evaluation
has two different meanings. The first would
address the question of how easy it is to build an
NLG application using Suregen-2. The second
would focus on a prototypical Suregen-2
application considering text quality. We did not
perform any formal evaluation in either direction,
but a few remarks can nevertheless be made.
</bodyText>
<subsectionHeader confidence="0.998402">
8.1 Suregen-2 as an NLG shell
</subsectionHeader>
<bodyText confidence="0.999993315789474">
Although development of Suregen-2 and the
building of the cardiology application were
intricately connected, it is possible to estimate the
efforts for designing an application in, say,
gastroenterology to be approximately within one
person year. Of course, each new application will
add functionality to the generic body of Suregen-
2, for instance new classes such as &amp;quot;ulcer&amp;quot; or
&amp;quot;endoscopy&amp;quot; or even new semantic functions,
such that subsequent applications may benefit
from earlier work. The wish for individual text
for each physician may, in the reverse extreme,
multiply the efforts required. Having
programmed several (conventional) systems with
text generation functionality we can say that
Suregen-2 means less effort and better text
quality. It is, however, still an open question
whether this benefit will be accessible to other
developers as well.
</bodyText>
<subsectionHeader confidence="0.999941">
8.2 Evaluation of an application
</subsectionHeader>
<bodyText confidence="0.999952">
Integration of the cardiology application into our
hospital information system was seamless, robust
and performant. With regard to text quality a few
options seem feasible:
With a modified CLOZE procedure (where
persons are asked to fill in artificial gaps with
missing morphemes, lexemes or even entire
phrases (Taylor, 1953)) it would be possible to
measure the accuracy of, and time used for this
process, giving estimations of correctness for
</bodyText>
<page confidence="0.994118">
217
</page>
<bodyText confidence="0.977151210526316">
lexical choice and inflection, as well as aggregate
measures of the coherence/cohesion of the
generated text. Another approach would be
&amp;quot;reverse entry&amp;quot;. Here a physician, having read a
Suregen-2 generated text, would re-enter the
information into the system which had generated
the text in the first place. The corresponding
states of the ontologies&apos; instances, Q and Q,
could then be compared, giving a measure of
how accurately the output text reflected 01.
Moreover, the time required by the physician to
re-enter the information would hint at the
&amp;quot;communicative efficiency&amp;quot; of the output.
We did neither of these, relying for the time
being on the rather informal method of
displaying generated text as a response to each
physician&apos;s mouse click in the structured data
entry dialog. The following sample generated by
the cardiology application (Huske-Kraus, 2002)
may illustrate the text quality:
&amp;quot;Frau Test arbeite als IT-Leiterin, momentan ist sie
arbeitsunfahig. Aktuell gibt die Patientin gelegentliche
Obelkeit an. Sic klagt iiber giirtelformige, retrosternale
Schmerzen, die in den linken Arm ausstrahlen, formal CCS
III. Diese Beschwerden treten unter Ruhebedingungen und
bei Belastungen auf. [...] Gelegentlich sowohl pratibiale als
auch Knochel- und Sakraliideme ilberwiegend links&amp;quot;
The text in this example is syntactically
correct, uses &amp;quot;standard&amp;quot; terms like &amp;quot;CCS&amp;quot;,
referential expressions and ellipsis. It contains an
enumerative expression, in turn containing two
&amp;quot;preferred terms&amp;quot; (&amp;quot;Knochelodem&amp;quot; and
&amp;quot;Sakralodem&amp;quot;), sorted in a way that enables the
first of the two to be hyphenated in the correct
manner for compound nouns in German. In short,
it does not in any way look &amp;quot;computer-
generated&amp;quot;, which our hospital would regard as
unacceptable.
</bodyText>
<sectionHeader confidence="0.997387" genericHeader="conclusions">
9 Conclusions
</sectionHeader>
<bodyText confidence="0.999983055555555">
The main motive for developing Suregen-2 was
to arrive at al operational system. Concededly
this entailed some decisions in favor of simple,
but workable solutions rather than those with
more elegance or generality. With regard to
referential expressions the approach chosen was
sufficient; with respect to lexical choice reliance
on one-to-one associations of concepts to
lexemes may prove too rigid. The results we have
obtained so far - with regard to coverage of
linguistic phenomena in the medical
sublanguage, flexibility and performance of the
generation component - seem to warrant the
statement not only that the architectural design of
Suregen-2 is well adapted to the needs of medical
document generation, but also that further efforts,
especially to refine the ontology and the generic
semantic functions, will be worthwhile.
</bodyText>
<sectionHeader confidence="0.998878" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999855347826087">
Bernauer, J., 1996. Analysis of part-whole relation an
subsumption in the medical domain. DATA
KNOWL ENG, 20: 405-415.
Cahill, L., 1999. Lexicalisation in applied NLG
systems. ITRI-99-04, Information Technology
Research Institute, Brighton.
Edmonds, P., 1997. Choosing the Word Most Typical
in Context Using a Lexical Co-occurence Network.
In: Estival, Lavelli, Netter and Pianesi (Eds), 35th
Annual Meeting of the Association of
Computational Linguistics, Madrid, pp. 507-509.
Elhadad, M., 1996. Lexical Choice for Complex Noun
Phrases. Machine Translation, 11: 159-184.
Hiiske-Kraus, D., 2002. Suregen-2. www.suregen.de
Hiiske-Kraus, D., 2003. Text Generation in Clinical
Medicine - a Review. METHODS INF MED, 1.
MacGregor, R. and Bates, R., 1987. The LOOM
representation language. ISI/RS-87-188, USC
Information Sciences Institute.
McCray, A.T. and Nelson, S.J., 1995. The
representation of meaning in the UMLS. Methods of
Information in Medicine, 34 (1-2): 193-201.
Nogier, J.-F. and Zock, M., 1992. Lexical choice as
pattern matching, Knowledge Based Systems, 5 (3),
pp. 200-212.
Reiter, E. and Dale. R., 2000. Building Natural
Language Generation Systems, Cambridge:
Cambridge University Press.
Shaw, J., 1998a. Clause Aggregation Using Linguistic
Knowledge, 9th International Workshop on Natural
Language Generation, Niagara -on-the-Lake,
Canada.
Shaw, J., 1998b. Segregatory coordination and Ellipsis
in Text Generation, 36th Annual Meeting of the
Association for Computational Linguistics and the
17th International Conference on Computational
linguistics, pp. 1220-1226.
Stede, M., 1999. Lexical semantics and knowledge
representation in multilingual text generation.
Kluwer Academic Publishers.
Taylor, W.L., 1953. Cloze Procedure: A new tool for
measuring readability. JOURNALISM QUART, 30
(4): 415-433.
Wilkinson, J., 1995. Aggregation in Natural Language
Generation: Another look. M. Sc. Thesis, University
of Waterloo, Canada, Waterloo.
</reference>
<page confidence="0.997178">
218
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.824402">
<title confidence="0.981226">Suregen-2: a shell system for the generation of clinical documents</title>
<author confidence="0.998812">Dirk Hilske-Kraus</author>
<affiliation confidence="0.994258">University for Health Informatics and Technology Tyrol (UMIT) Institute for Health Information Systems</affiliation>
<address confidence="0.871248">postal address: Georgstrasse 11, 32545 Bad Oeynhausen, Germany</address>
<email confidence="0.976716">Dirk.Hueske-Kraus@suregen.de</email>
<abstract confidence="0.998187384615384">Suregen-2 applications are intended for use as add-on modules for clinical information systems. Currently, Suregen-2 permits refinement of the predefined medical ontology, specification of text plans and description knowledge for objects of the ontology. It has built-in constructs for referential expressions, aggregation, enumeration and recurrent semantic constellations. A first application built with Suregen-2, which currently supports German only, is in routine use.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Bernauer</author>
</authors>
<title>Analysis of part-whole relation an subsumption in the medical domain.</title>
<date>1996</date>
<journal>DATA KNOWL ENG,</journal>
<volume>20</volume>
<pages>405--415</pages>
<contexts>
<context position="7854" citStr="Bernauer, 1996" startWordPosition="1146" endWordPosition="1147">ry coordination&amp;quot; (Shaw, 1998b)) and conceptual Tgregation (Wilkinson, 1995). The former is mainly used to aggregate noun phrases 216 with identical or coreferential components. Conceptual aggregation, in our case paraphrased as &amp;quot;finding a single term for a collection of terms&amp;quot;, is necessarily connected with relations holding in the domain. The most common case of conceptual aggregation is that from subparts of the body to the encompassing body structure. Unfortunately aggregation along relations in the ontology is not trivial, since not all relations are transitive along the part-of relation (Bernauer, 1996). Moreover, speech habits in medicine permit aggregation even where it is unjustified by part-whole reasoning. To account for this, Suregen-2 offers the possibility of defining &amp;quot;aggregator objects&amp;quot;, in the above example an object which performs the possible aggregations given the presence or absence of a certain condition for the left and right atria and ventricles. The necessity of defining ad-hoc aggregator objects is somewhat unsatisfactory but it is due to idiosyncrasies of the medical sublanguage rather than to the chosen approach. 7 Lexical choice The problem of lexical choice, for which</context>
</contexts>
<marker>Bernauer, 1996</marker>
<rawString>Bernauer, J., 1996. Analysis of part-whole relation an subsumption in the medical domain. DATA KNOWL ENG, 20: 405-415.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Cahill</author>
</authors>
<title>Lexicalisation in applied NLG systems.</title>
<date>1999</date>
<pages>99--04</pages>
<institution>Information Technology Research Institute,</institution>
<location>Brighton.</location>
<contexts>
<context position="8499" citStr="Cahill, 1999" startWordPosition="1244" endWordPosition="1245">cine permit aggregation even where it is unjustified by part-whole reasoning. To account for this, Suregen-2 offers the possibility of defining &amp;quot;aggregator objects&amp;quot;, in the above example an object which performs the possible aggregations given the presence or absence of a certain condition for the left and right atria and ventricles. The necessity of defining ad-hoc aggregator objects is somewhat unsatisfactory but it is due to idiosyncrasies of the medical sublanguage rather than to the chosen approach. 7 Lexical choice The problem of lexical choice, for which there are plenty of approaches (Cahill, 1999; Edmonds, 1997; Elhadad, 1996; Nogier and Zock, 1992), has more been circumnavigated than solved in Suregen-2. Firstly, there are many proper names in the Suregen-2 target application domain, standardized in the UMLS (McCray and Nelson, 1995) and a large body of names and acronyms common to a medical sub-specialty. Together with the lexemes which are &amp;quot;hard coded&amp;quot; in the Describes-clauses all these have one-to-one associations of concepts to lexemes. Additionally, using a nanofunctionality of lexical semantics, Suregen-2 is able to deal with synonyms, antonyms and hyperonyms, permitting the ag</context>
</contexts>
<marker>Cahill, 1999</marker>
<rawString>Cahill, L., 1999. Lexicalisation in applied NLG systems. ITRI-99-04, Information Technology Research Institute, Brighton.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Edmonds</author>
</authors>
<title>Choosing the Word Most Typical in Context Using a Lexical Co-occurence Network. In:</title>
<date>1997</date>
<booktitle>Estival, Lavelli, Netter and Pianesi (Eds), 35th Annual Meeting of the Association of Computational Linguistics,</booktitle>
<pages>507--509</pages>
<location>Madrid,</location>
<contexts>
<context position="8514" citStr="Edmonds, 1997" startWordPosition="1246" endWordPosition="1247">gregation even where it is unjustified by part-whole reasoning. To account for this, Suregen-2 offers the possibility of defining &amp;quot;aggregator objects&amp;quot;, in the above example an object which performs the possible aggregations given the presence or absence of a certain condition for the left and right atria and ventricles. The necessity of defining ad-hoc aggregator objects is somewhat unsatisfactory but it is due to idiosyncrasies of the medical sublanguage rather than to the chosen approach. 7 Lexical choice The problem of lexical choice, for which there are plenty of approaches (Cahill, 1999; Edmonds, 1997; Elhadad, 1996; Nogier and Zock, 1992), has more been circumnavigated than solved in Suregen-2. Firstly, there are many proper names in the Suregen-2 target application domain, standardized in the UMLS (McCray and Nelson, 1995) and a large body of names and acronyms common to a medical sub-specialty. Together with the lexemes which are &amp;quot;hard coded&amp;quot; in the Describes-clauses all these have one-to-one associations of concepts to lexemes. Additionally, using a nanofunctionality of lexical semantics, Suregen-2 is able to deal with synonyms, antonyms and hyperonyms, permitting the aggregation of tw</context>
</contexts>
<marker>Edmonds, 1997</marker>
<rawString>Edmonds, P., 1997. Choosing the Word Most Typical in Context Using a Lexical Co-occurence Network. In: Estival, Lavelli, Netter and Pianesi (Eds), 35th Annual Meeting of the Association of Computational Linguistics, Madrid, pp. 507-509.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Elhadad</author>
</authors>
<title>Lexical Choice for Complex Noun Phrases.</title>
<date>1996</date>
<journal>Machine Translation,</journal>
<volume>11</volume>
<pages>159--184</pages>
<contexts>
<context position="8529" citStr="Elhadad, 1996" startWordPosition="1248" endWordPosition="1249">where it is unjustified by part-whole reasoning. To account for this, Suregen-2 offers the possibility of defining &amp;quot;aggregator objects&amp;quot;, in the above example an object which performs the possible aggregations given the presence or absence of a certain condition for the left and right atria and ventricles. The necessity of defining ad-hoc aggregator objects is somewhat unsatisfactory but it is due to idiosyncrasies of the medical sublanguage rather than to the chosen approach. 7 Lexical choice The problem of lexical choice, for which there are plenty of approaches (Cahill, 1999; Edmonds, 1997; Elhadad, 1996; Nogier and Zock, 1992), has more been circumnavigated than solved in Suregen-2. Firstly, there are many proper names in the Suregen-2 target application domain, standardized in the UMLS (McCray and Nelson, 1995) and a large body of names and acronyms common to a medical sub-specialty. Together with the lexemes which are &amp;quot;hard coded&amp;quot; in the Describes-clauses all these have one-to-one associations of concepts to lexemes. Additionally, using a nanofunctionality of lexical semantics, Suregen-2 is able to deal with synonyms, antonyms and hyperonyms, permitting the aggregation of two adjacent NPs </context>
</contexts>
<marker>Elhadad, 1996</marker>
<rawString>Elhadad, M., 1996. Lexical Choice for Complex Noun Phrases. Machine Translation, 11: 159-184.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Hiiske-Kraus</author>
</authors>
<title>Text Generation in Clinical Medicine - a Review.</title>
<date>2002</date>
<journal>METHODS INF MED,</journal>
<volume>1</volume>
<note>Suregen-2. www.suregen.de</note>
<marker>Hiiske-Kraus, 2002</marker>
<rawString>Hiiske-Kraus, D., 2002. Suregen-2. www.suregen.de Hiiske-Kraus, D., 2003. Text Generation in Clinical Medicine - a Review. METHODS INF MED, 1. MacGregor, R. and Bates, R., 1987. The LOOM representation language. ISI/RS-87-188, USC Information Sciences Institute.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A T McCray</author>
<author>S J Nelson</author>
</authors>
<title>The representation of meaning in the UMLS.</title>
<date>1995</date>
<journal>Methods of Information in Medicine,</journal>
<volume>34</volume>
<pages>1--2</pages>
<contexts>
<context position="8742" citStr="McCray and Nelson, 1995" startWordPosition="1278" endWordPosition="1281">ations given the presence or absence of a certain condition for the left and right atria and ventricles. The necessity of defining ad-hoc aggregator objects is somewhat unsatisfactory but it is due to idiosyncrasies of the medical sublanguage rather than to the chosen approach. 7 Lexical choice The problem of lexical choice, for which there are plenty of approaches (Cahill, 1999; Edmonds, 1997; Elhadad, 1996; Nogier and Zock, 1992), has more been circumnavigated than solved in Suregen-2. Firstly, there are many proper names in the Suregen-2 target application domain, standardized in the UMLS (McCray and Nelson, 1995) and a large body of names and acronyms common to a medical sub-specialty. Together with the lexemes which are &amp;quot;hard coded&amp;quot; in the Describes-clauses all these have one-to-one associations of concepts to lexemes. Additionally, using a nanofunctionality of lexical semantics, Suregen-2 is able to deal with synonyms, antonyms and hyperonyms, permitting the aggregation of two adjacent NPs such as &amp;quot;Einbringen des Kameratrokars&amp;quot; and &amp;quot;Einfiihren der Optik&amp;quot;, with different but synonymous heads. The process for the production of referential expressions is based on a quite simple algorithm which is never</context>
</contexts>
<marker>McCray, Nelson, 1995</marker>
<rawString>McCray, A.T. and Nelson, S.J., 1995. The representation of meaning in the UMLS. Methods of Information in Medicine, 34 (1-2): 193-201. Nogier, J.-F. and Zock, M., 1992. Lexical choice as pattern matching, Knowledge Based Systems, 5 (3), pp. 200-212.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R</author>
</authors>
<title>Building Natural Language Generation Systems, Cambridge:</title>
<date>2000</date>
<publisher>Cambridge University Press.</publisher>
<marker>R, 2000</marker>
<rawString>Reiter, E. and Dale. R., 2000. Building Natural Language Generation Systems, Cambridge: Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Shaw</author>
</authors>
<title>Clause Aggregation Using Linguistic Knowledge,</title>
<date>1998</date>
<booktitle>9th International Workshop on Natural Language Generation,</booktitle>
<location>Niagara -on-the-Lake, Canada.</location>
<contexts>
<context position="7087" citStr="Shaw, 1998" startWordPosition="1039" endWordPosition="1040">rally identical descriptions of, say, body temperature, heart rate or LVEDD, Suregen-2 offers the possibility of defining the constellation &amp;quot;parameter with value, dimension and unit&amp;quot; as a semantic function, a kind of &amp;quot;macro&amp;quot;-construct.&amp;quot; Unlike other approaches (e.g. TECHDOC (Stede, 1999)) these functions do not operate on relations specified declaratively in a formalism such as LOOM (MacGregor and Bates, 1987) but operate on instances&apos; attributes. This surely trades flexibility and expressivity of a standard formalism for simplicity and performance. 6 Aggregation As has already been observed (Shaw, 1998a), the sublanguage of clinical medicine uses much aggregation. Suregen-2 therefore supports two types of aggregation, conjunction reduction (&amp;quot;segregatory coordination&amp;quot; (Shaw, 1998b)) and conceptual Tgregation (Wilkinson, 1995). The former is mainly used to aggregate noun phrases 216 with identical or coreferential components. Conceptual aggregation, in our case paraphrased as &amp;quot;finding a single term for a collection of terms&amp;quot;, is necessarily connected with relations holding in the domain. The most common case of conceptual aggregation is that from subparts of the body to the encompassing body </context>
</contexts>
<marker>Shaw, 1998</marker>
<rawString>Shaw, J., 1998a. Clause Aggregation Using Linguistic Knowledge, 9th International Workshop on Natural Language Generation, Niagara -on-the-Lake, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Shaw</author>
</authors>
<title>Segregatory coordination and Ellipsis</title>
<date>1998</date>
<booktitle>in Text Generation, 36th Annual Meeting of the Association for Computational Linguistics and the 17th International Conference on Computational linguistics,</booktitle>
<pages>1220--1226</pages>
<contexts>
<context position="7087" citStr="Shaw, 1998" startWordPosition="1039" endWordPosition="1040">rally identical descriptions of, say, body temperature, heart rate or LVEDD, Suregen-2 offers the possibility of defining the constellation &amp;quot;parameter with value, dimension and unit&amp;quot; as a semantic function, a kind of &amp;quot;macro&amp;quot;-construct.&amp;quot; Unlike other approaches (e.g. TECHDOC (Stede, 1999)) these functions do not operate on relations specified declaratively in a formalism such as LOOM (MacGregor and Bates, 1987) but operate on instances&apos; attributes. This surely trades flexibility and expressivity of a standard formalism for simplicity and performance. 6 Aggregation As has already been observed (Shaw, 1998a), the sublanguage of clinical medicine uses much aggregation. Suregen-2 therefore supports two types of aggregation, conjunction reduction (&amp;quot;segregatory coordination&amp;quot; (Shaw, 1998b)) and conceptual Tgregation (Wilkinson, 1995). The former is mainly used to aggregate noun phrases 216 with identical or coreferential components. Conceptual aggregation, in our case paraphrased as &amp;quot;finding a single term for a collection of terms&amp;quot;, is necessarily connected with relations holding in the domain. The most common case of conceptual aggregation is that from subparts of the body to the encompassing body </context>
</contexts>
<marker>Shaw, 1998</marker>
<rawString>Shaw, J., 1998b. Segregatory coordination and Ellipsis in Text Generation, 36th Annual Meeting of the Association for Computational Linguistics and the 17th International Conference on Computational linguistics, pp. 1220-1226.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Stede</author>
</authors>
<title>Lexical semantics and knowledge representation in multilingual text generation.</title>
<date>1999</date>
<publisher>Kluwer Academic Publishers.</publisher>
<contexts>
<context position="6765" citStr="Stede, 1999" startWordPosition="991" endWordPosition="992">t tentative applications with Suregen-2 it became obvious that certain constellations tend to reoccur frequently in the intended domains. For instance, the quantification of a medical parameter is very common and so is the description of a certain pathological condition at a certain body location. To avoid defining structurally identical descriptions of, say, body temperature, heart rate or LVEDD, Suregen-2 offers the possibility of defining the constellation &amp;quot;parameter with value, dimension and unit&amp;quot; as a semantic function, a kind of &amp;quot;macro&amp;quot;-construct.&amp;quot; Unlike other approaches (e.g. TECHDOC (Stede, 1999)) these functions do not operate on relations specified declaratively in a formalism such as LOOM (MacGregor and Bates, 1987) but operate on instances&apos; attributes. This surely trades flexibility and expressivity of a standard formalism for simplicity and performance. 6 Aggregation As has already been observed (Shaw, 1998a), the sublanguage of clinical medicine uses much aggregation. Suregen-2 therefore supports two types of aggregation, conjunction reduction (&amp;quot;segregatory coordination&amp;quot; (Shaw, 1998b)) and conceptual Tgregation (Wilkinson, 1995). The former is mainly used to aggregate noun phras</context>
</contexts>
<marker>Stede, 1999</marker>
<rawString>Stede, M., 1999. Lexical semantics and knowledge representation in multilingual text generation. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W L Taylor</author>
</authors>
<title>Cloze Procedure: A new tool for measuring readability.</title>
<date>1953</date>
<journal>JOURNALISM QUART,</journal>
<volume>30</volume>
<issue>4</issue>
<pages>415--433</pages>
<contexts>
<context position="11409" citStr="Taylor, 1953" startWordPosition="1679" endWordPosition="1680">programmed several (conventional) systems with text generation functionality we can say that Suregen-2 means less effort and better text quality. It is, however, still an open question whether this benefit will be accessible to other developers as well. 8.2 Evaluation of an application Integration of the cardiology application into our hospital information system was seamless, robust and performant. With regard to text quality a few options seem feasible: With a modified CLOZE procedure (where persons are asked to fill in artificial gaps with missing morphemes, lexemes or even entire phrases (Taylor, 1953)) it would be possible to measure the accuracy of, and time used for this process, giving estimations of correctness for 217 lexical choice and inflection, as well as aggregate measures of the coherence/cohesion of the generated text. Another approach would be &amp;quot;reverse entry&amp;quot;. Here a physician, having read a Suregen-2 generated text, would re-enter the information into the system which had generated the text in the first place. The corresponding states of the ontologies&apos; instances, Q and Q, could then be compared, giving a measure of how accurately the output text reflected 01. Moreover, the t</context>
</contexts>
<marker>Taylor, 1953</marker>
<rawString>Taylor, W.L., 1953. Cloze Procedure: A new tool for measuring readability. JOURNALISM QUART, 30 (4): 415-433.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Wilkinson</author>
</authors>
<title>Aggregation in Natural Language Generation: Another look.</title>
<date>1995</date>
<tech>M. Sc. Thesis,</tech>
<institution>University of Waterloo,</institution>
<location>Canada, Waterloo.</location>
<contexts>
<context position="7314" citStr="Wilkinson, 1995" startWordPosition="1065" endWordPosition="1066">ro&amp;quot;-construct.&amp;quot; Unlike other approaches (e.g. TECHDOC (Stede, 1999)) these functions do not operate on relations specified declaratively in a formalism such as LOOM (MacGregor and Bates, 1987) but operate on instances&apos; attributes. This surely trades flexibility and expressivity of a standard formalism for simplicity and performance. 6 Aggregation As has already been observed (Shaw, 1998a), the sublanguage of clinical medicine uses much aggregation. Suregen-2 therefore supports two types of aggregation, conjunction reduction (&amp;quot;segregatory coordination&amp;quot; (Shaw, 1998b)) and conceptual Tgregation (Wilkinson, 1995). The former is mainly used to aggregate noun phrases 216 with identical or coreferential components. Conceptual aggregation, in our case paraphrased as &amp;quot;finding a single term for a collection of terms&amp;quot;, is necessarily connected with relations holding in the domain. The most common case of conceptual aggregation is that from subparts of the body to the encompassing body structure. Unfortunately aggregation along relations in the ontology is not trivial, since not all relations are transitive along the part-of relation (Bernauer, 1996). Moreover, speech habits in medicine permit aggregation eve</context>
</contexts>
<marker>Wilkinson, 1995</marker>
<rawString>Wilkinson, J., 1995. Aggregation in Natural Language Generation: Another look. M. Sc. Thesis, University of Waterloo, Canada, Waterloo.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>