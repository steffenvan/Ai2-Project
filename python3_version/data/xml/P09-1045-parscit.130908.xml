<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001705">
<title confidence="0.979039">
Reducing semantic drift with bagging and distributional similarity
</title>
<author confidence="0.990558">
Tara McIntosh and James R. Curran
</author>
<affiliation confidence="0.9794695">
School of Information Technologies
University of Sydney
</affiliation>
<note confidence="0.521283">
NSW 2006, Australia
</note>
<email confidence="0.997031">
{tara,james}@it.usyd.edu.au
</email>
<sectionHeader confidence="0.994747" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9997799375">
Iterative bootstrapping algorithms are typ-
ically compared using a single set of hand-
picked seeds. However, we demonstrate
that performance varies greatly depend-
ing on these seeds, and favourable seeds
for one algorithm can perform very poorly
with others, making comparisons unreli-
able. We exploit this wide variation with
bagging, sampling from automatically ex-
tracted seeds to reduce semantic drift.
However, semantic drift still occurs in
later iterations. We propose an integrated
distributional similarity filter to identify
and censor potential semantic drifts, en-
suring over 10% higher precision when ex-
tracting large semantic lexicons.
</bodyText>
<sectionHeader confidence="0.998782" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999900274193549">
Iterative bootstrapping algorithms have been pro-
posed to extract semantic lexicons for NLP tasks
with limited linguistic resources. Bootstrapping
was initially proposed by Riloff and Jones (1999),
and has since been successfully applied to extract-
ing general semantic lexicons (Riloff and Jones,
1999; Thelen and Riloff, 2002), biomedical enti-
ties (Yu and Agichtein, 2003), facts (Pas¸ca et al.,
2006), and coreference data (Yang and Su, 2007).
Bootstrapping approaches are attractive because
they are domain and language independent, re-
quire minimal linguistic pre-processing and can be
applied to raw text, and are efficient enough for
tera-scale extraction (Pas¸ca et al., 2006).
Bootstrapping is minimally supervised, as it is
initialised with a small number of seed instances
of the information to extract. For semantic lexi-
cons, these seeds are terms from the category of in-
terest. The seeds identify contextual patterns that
express a particular semantic category, which in
turn recognise new terms (Riloff and Jones, 1999).
Unfortunately, semantic drift often occurs when
ambiguous or erroneous terms and/or patterns are
introduced into and then dominate the iterative
process (Curran et al., 2007).
Bootstrapping algorithms are typically com-
pared using only a single set of hand-picked seeds.
We first show that different seeds cause these al-
gorithms to generate diverse lexicons which vary
greatly in precision. This makes evaluation un-
reliable – seeds which perform well on one algo-
rithm can perform surprisingly poorly on another.
In fact, random gold-standard seeds often outper-
form seeds carefully chosen by domain experts.
Our second contribution exploits this diversity
we have identified. We present an unsupervised
bagging algorithm which samples from the ex-
tracted lexicon rather than relying on existing
gazetteers or hand-selected seeds. Each sample is
then fed back as seeds to the bootstrapper and the
results combined using voting. This both improves
the precision of the lexicon and the robustness of
the algorithms to the choice of initial seeds.
Unfortunately, semantic drift still dominates in
later iterations, since erroneous extracted terms
and/or patterns eventually shift the category’s di-
rection. Our third contribution focuses on detect-
ing and censoring the terms introduced by seman-
tic drift. We integrate a distributional similarity
filter directly into WMEB (McIntosh and Curran,
2008). This filter judges whether a new term is
more similar to the earlier or most recently ex-
tracted terms, a sign of potential semantic drift.
We demonstrate these methods for extracting
biomedical semantic lexicons using two bootstrap-
ping algorithms. Our unsupervised bagging ap-
proach outperforms carefully hand-picked seeds
by — 10% in later iterations. Our distributional
similarity filter gives a similar performance im-
provement. This allows us to produce large lexi-
cons accurately and efficiently for domain-specific
language processing.
</bodyText>
<page confidence="0.98277">
396
</page>
<note confidence="0.99962">
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 396–404,
Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP
</note>
<sectionHeader confidence="0.970864" genericHeader="introduction">
2 Background
</sectionHeader>
<bodyText confidence="0.998626895833334">
Hearst (1992) exploited patterns for information
extraction, to acquire is-a relations using manually
devised patterns like such Z as X and/or Y where X
and Y are hyponyms of Z. Riloff and Jones (1999)
extended this with an automated bootstrapping al-
gorithm, Multi-level Bootstrapping (MLB), which
iteratively extracts semantic lexicons from text.
In MLB, bootstrapping alternates between two
stages: pattern extraction and selection, and term
extraction and selection. MB is seeded with a small
set of user selected seed terms. These seeds are
used to identify contextual patterns they appear in,
which in turn identify new lexicon entries. This
process is repeated with the new lexicon terms
identifying new patterns. In each iteration, the top-
n candidates are selected, based on a metric scor-
ing their membership in the category and suitabil-
ity for extracting additional terms and patterns.
Bootstrapping eventually extracts polysemous
terms and patterns which weakly constrain the
semantic class, causing the lexicon’s meaning to
shift, called semantic drift by Curran et al. (2007).
For example, female firstnames may drift into
flowers when Iris and Rose are extracted. Many
variations on bootstrapping have been developed
to reduce semantic drift.1
One approach is to extract multiple semantic
categories simultaneously, where the individual
bootstrapping instances compete with one another
in an attempt to actively direct the categories away
from each other. Multi-category algorithms out-
perform MLB (Thelen and Riloff, 2002), and we
focus on these algorithms in our experiments.
In BASILISK, MEB, and WMEB, each compet-
ing category iterates simultaneously between the
term and pattern extraction and selection stages.
These algorithms differ in how terms and patterns
selected by multiple categories are handled, and
their scoring metrics. In BASILISK (Thelen and
Riloff, 2002), candidate terms are ranked highly if
they have strong evidence for a category and little
or no evidence for other categories. This typically
favours less frequent terms, as they will match far
fewer patterns and are thus more likely to belong
to one category. Patterns are selected similarly,
however patterns may also be selected by differ-
ent categories in later iterations.
Curran et al. (2007) introduced Mutual Exclu-
</bodyText>
<footnote confidence="0.9498255">
1Komachi et al. (2008) used graph-based algorithms to
reduce semantic drift for Word Sense Disambiguation.
</footnote>
<bodyText confidence="0.999872166666667">
sion Bootstrapping (MEB) which forces stricter
boundaries between the competing categories than
BASILISK. In MEB, the key assumptions are that
terms only belong to a category and that patterns
only extract terms of a single category. Semantic
drift is reduced by eliminating patterns that collide
with multiple categories in an iteration and by ig-
noring colliding candidate terms (for the current
iteration). This excludes generic patterns that can
occur frequently with multiple categories, and re-
duces the chance of assigning ambiguous terms to
their less dominant sense.
</bodyText>
<subsectionHeader confidence="0.962148">
2.1 Weighted NMB
</subsectionHeader>
<bodyText confidence="0.999624916666667">
The scoring of candidate terms and patterns in
MEB is naive. Candidates which 1) match the most
input instances; and 2) have the potential to gen-
erate the most new candidates, are preferred (Cur-
ran et al., 2007). This second criterion aims to in-
crease recall. However, the selected instances are
highly likely to introduce drift.
Our Weighted MEB algorithm (McIntosh and
Curran, 2008), extends MEB by incorporating term
and pattern weighting, and a cumulative pattern
pool. WMEB uses the x2 statistic to identify pat-
terns and terms that are strongly associated with
the growing lexicon terms and their patterns re-
spectively. The terms and patterns are then ranked
first by the number of input instances they match
(as in MEB), but then by their weighted score.
In MEB and BASILISK2, the top-k patterns for
each iteration are used to extract new candidate
terms. As the lexicons grow, general patterns can
drift into the top-k and as a result the earlier pre-
cise patterns lose their extracting influence. In
WMEB, the pattern pool accumulates all top-k pat-
terns from previous iterations, to ensure previous
patterns can contribute.
</bodyText>
<subsectionHeader confidence="0.999187">
2.2 Distributional Similarity
</subsectionHeader>
<bodyText confidence="0.999549333333333">
Distributional similarity has been used to ex-
tract semantic lexicons (Grefenstette, 1994), based
on the distributional hypothesis that semantically
similar words appear in similar contexts (Harris,
1954). Words are represented by context vectors,
and words are considered similar if their context
vectors are similar.
Patterns and distributional methods have been
combined previously. Pantel and Ravichandran
</bodyText>
<footnote confidence="0.987925">
2In BASILISK, k is increased by one in each iteration, to
ensure at least one new pattern is introduced.
</footnote>
<page confidence="0.993921">
397
</page>
<table confidence="0.999256">
TYPE (#) MEDLINE
Terms 1347 002
Contexts 4 090 412
5-grams 72 796 760
Unfiltered tokens 6 642 802 776
</table>
<tableCaption confidence="0.999836">
Table 1: Filtered 5-gram dataset statistics.
</tableCaption>
<bodyText confidence="0.99813625">
(2004) used lexical-syntactic patterns to label
clusters of distributionally similar terms. Mirkin et
al. (2006) used 11 patterns, and the distributional
similarity score of each pair of terms, to construct
features for lexical entailment. Pas¸ca et al. (2006)
used distributional similarity to find similar terms
for verifying the names in date-of-birth facts for
their tera-scale bootstrapping system.
</bodyText>
<subsectionHeader confidence="0.999449">
2.3 Selecting seeds
</subsectionHeader>
<bodyText confidence="0.999904761904762">
For the majority of bootstrapping tasks, there is
little or no guidance on how to select seeds which
will generate the most accurate lexicons. Most
previous works used seeds selected based on a
user’s or domain expert’s intuition (Curran et al.,
2007), which may then have to meet a frequency
criterion (Riloff et al., 2003).
Eisner and Karakos (2005) focus on this issue
by considering an approach called strapping for
word sense disambiguation. In strapping, semi-
supervised bootstrapping instances are used to
train a meta-classifier, which given a bootstrap-
ping instance can predict the usefulness (fertility)
of its seeds. The most fertile seeds can then be
used in place of hand-picked seeds.
The design of a strapping algorithm is more
complex than that of a supervised learner (Eisner
and Karakos, 2005), and it is unclear how well
strapping will generalise to other bootstrapping
tasks. In our work, we build upon bootstrapping
using unsupervised approaches.
</bodyText>
<sectionHeader confidence="0.993689" genericHeader="method">
3 Experimental setup
</sectionHeader>
<bodyText confidence="0.999275">
In our experiments we consider the task of extract-
ing biomedical semantic lexicons from raw text
using BASILISK and WMEB.
</bodyText>
<subsectionHeader confidence="0.995092">
3.1 Data
</subsectionHeader>
<bodyText confidence="0.9999094">
We compared the performance of BASILISK and
WMEB using 5-grams (t1, t2, t3, t4, t5) from raw
MEDLINE abstracts3. In our experiments, the can-
didate terms are the middle tokens (t3), and the
patterns are a tuple of the surrounding tokens (t1,
</bodyText>
<footnote confidence="0.891406">
3The set contains all MEDLINE abstracts available up to
Oct 2007 (16 140 000 abstracts).
</footnote>
<table confidence="0.293899551724138">
CAT DESCRIPTION
ANTI Antibodies: Immunoglobulin molecules that react
with a specific antigen that induced its synthesis
MAb IgG IgM rituximab infliximab (κ1:0.89, κ2:1.0)
CELL Cells: A morphological or functional form of a cell
RBC HUVEC BAEC VSMC SMC (κ1:0.91, κ2:1.0)
CLNE Cell lines: A population of cells that are totally de-
rived from a single common ancestor cell
PC12 CHO HeLa Jurkat COS (κ1:0.93, κ2: 1.0)
DISE Diseases: A definite pathological process that affects
humans, animals and or plants
asthma hepatitis tuberculosis HIV malaria
(κ1:0.98, κ2:1.0)
DRUG Drugs: A pharmaceutical preparation
acetylcholine carbachol heparin penicillin tetracy-
clin (κ1:0.86, κ2:0.99)
FUNC Molecular functions and processes
kinase ligase acetyltransferase helicase binding
(κ1:0.87, κ2:0.99)
MUTN Mutations: Gene and protein mutations, and mutants
Leiden C677T C282Y 35delG null (κ1:0.89, κ2:1.0)
PROT Proteins and genes
p53 actin collagen albumin IL-6 (κ1:0.99, κ2:1.0)
SIGN Signs and symptoms of diseases
anemia hypertension hyperglycemia fever cough
(κ1:0.96, κ2:0.99)
TUMR Tumors: Types of tumors
lymphoma sarcoma melanoma neuroblastoma
osteosarcoma (κ1:0.89, κ2:0.95)
</table>
<tableCaption confidence="0.963702">
Table 2: The MEDLINE semantic categories.
</tableCaption>
<bodyText confidence="0.999939636363636">
t2, t4, t5). Unlike Riloff and Jones (1999) and
Yangarber (2003), we do not use syntactic knowl-
edge, as we aim to take a language independent
approach.
The 5-grams were extracted from the MEDLINE
abstracts following McIntosh and Curran (2008).
The abstracts were tokenised and split into sen-
tences using bio-specific NLP tools (Grover et al.,
2006). The 5-grams were filtered to remove pat-
terns appearing with less than 7 terms4. The statis-
tics of the resulting dataset are shown in Table 1.
</bodyText>
<subsectionHeader confidence="0.999488">
3.2 Semantic Categories
</subsectionHeader>
<bodyText confidence="0.9996573">
The semantic categories we extract from MED-
LINE are shown in Table 2. These are a subset
of the TREC Genomics 2007 entities (Hersh et al.,
2007). Categories which are predominately multi-
term entities, e.g. Pathways and Toxicities, were
excluded.5 Genes and Proteins were merged into
PROT as they have a high degree of metonymy,
particularly out of context. The Cell or Tissue Type
category was split into two fine grained classes,
CELL and CLNE (cell line).
</bodyText>
<footnote confidence="0.9975856">
4This frequency was selected as it resulted in the largest
number of patterns and terms loadable by BASILISK
5Note that polysemous terms in these categories may be
correctly extracted by another category. For example, all
Pathways also belong to FUNC.
</footnote>
<page confidence="0.99703">
398
</page>
<bodyText confidence="0.966514">
The five hand-picked seeds used for each cat-
egory are shown in italics in Table 2. These were
carefully chosen based on the evaluators’ intuition,
and are as unambiguous as possible with respect to
the other categories.
We also utilised terms in stop categories which
are known to cause semantic drift in specific
classes. These extra categories bound the lexi-
cal space and reduce ambiguity (Yangarber, 2003;
Curran et al., 2007). We used four stop cate-
gories introduced in McIntosh and Curran (2008):
AMINO ACID, ANIMAL, BODY and ORGANISM.
</bodyText>
<subsectionHeader confidence="0.999789">
3.3 Lexicon evaluation
</subsectionHeader>
<bodyText confidence="0.999991767441861">
The evaluation involves manually inspecting each
extracted term and judging whether it was a mem-
ber of the semantic class. This manual evaluation
is extremely time consuming and is necessary due
to the limited coverage of biomedical resources.
To make later evaluations more efficient, all eval-
uators’ decisions for each category are cached.
Unfamiliar terms were checked using online
resources including MEDLINE, Medical Subject
Headings (MeSH), Wikipedia. Each ambiguous
term was counted as correct if it was classified into
one of its correct categories, such as lymphoma
which is a TUMR and DISE. If a term was un-
ambiguously part of a multi-word term we consid-
ered it correct. Abbreviations, acronyms and typo-
graphical variations were included. We also con-
sidered obvious spelling mistakes to be correct,
such as nuetrophils instead of neutrophils (a type
of CELL). Non-specific modifiers are marked as
incorrect, for example, gastrointestinal may be in-
correctly extracted for TUMR, as part of the entity
gastrointestinal carcinoma. However, the modi-
fier may also be used for DISE (gastrointestinal
infection) and CELL.
The terms were evaluated by two domain ex-
perts. Inter-annotator agreement was measured
on the top-100 terms extracted by BASILISK and
WMEB with the hand-picked seeds for each cat-
egory. All disagreements were discussed, and the
kappa scores, before (K1) and after (K2) the discus-
sions, are shown in Table 2. Each score is above
0.8 which reflects an agreement strength of “al-
most perfect” (Landis and Koch, 1977).
For comparing the accuracy of the systems we
evaluated the precision of samples of the lexicons
extracted for each category. We report average
precision over the 10 semantic categories on the
1-200, 401-600 and 801-1000 term samples, and
over the first 1000 terms. In each algorithm, each
category is initialised with 5 seed terms, and the
number of patterns, k, is set to 5. In each itera-
tion, 5 lexicon terms are extracted by each cate-
gory. Each algorithm is run for 200 iterations.
</bodyText>
<sectionHeader confidence="0.970856" genericHeader="method">
4 Seed diversity
</sectionHeader>
<bodyText confidence="0.999971571428571">
The first step in bootstrapping is to select a set of
seeds by hand. These hand-picked seeds are typi-
cally chosen by a domain expert who selects a rea-
sonably unambiguous representative sample of the
category with high coverage by introspection.
To improve the seeds, the frequency of the po-
tential seeds in the corpora is often considered, on
the assumption that highly frequent seeds are bet-
ter (Thelen and Riloff, 2002). Unfortunately, these
seeds may be too general and extract many non-
specific patterns. Another approach is to identify
seeds using hyponym patterns like, * is a [NAMED
ENTITY] (Meij and Katrenko, 2007).
This leads us to our first investigation of seed
variability and the methodology used to compare
bootstrapping algorithms. Typically algorithms
are compared using one set of hand-picked seeds
for each category (Pennacchiotti and Pantel, 2006;
McIntosh and Curran, 2008). This approach does
not provide a fair comparison or any detailed anal-
ysis of the algorithms under investigation. As
we shall see, it is possible that the seeds achieve
the maximum precision for one algorithm and the
minimum for another, and thus the single compar-
ison is inappropriate. Even evaluating on multiple
categories does not ensure the robustness of the
evaluation. Secondly, it provides no insight into
the sensitivity of an algorithm to different seeds.
</bodyText>
<subsectionHeader confidence="0.999812">
4.1 Analysis with random gold seeds
</subsectionHeader>
<bodyText confidence="0.999931769230769">
Our initial analysis investigated the sensitivity and
variability of the lexicons generated using differ-
ent seeds. We instantiated each algorithm 10 times
with different random gold seeds (Sgold) for each
category. We randomly sample Sgold from two
sets of correct terms extracted from the evalua-
tion cache. UNION: the correct terms extracted by
BASILISK and WMEB; and UNIQUE: the correct
terms uniquely identified by only one algorithm.
The degree of ambiguity of each seed is unknown
and term frequency is not considered during the
random selection.
Firstly, we investigated the variability of the
</bodyText>
<page confidence="0.989057">
399
</page>
<figure confidence="0.8250995">
50 60 70 80 90 100
WMEB (precision)
</figure>
<figureCaption confidence="0.970393">
Figure 1: Performance relationship between
WMEB and BASILISK on Sgold UNION
</figureCaption>
<bodyText confidence="0.999749189189189">
extracted lexicons using UNION. Each extracted
lexicon was compared with the other 9 lexicons
for each category and the term overlap calcu-
lated. For the top 100 terms, BASILISK had an
overlap of 18% and WMEB 44%. For the top
500 terms, BASILISK had an overlap of 39% and
WMEB 47%. Clearly BASILISK is far more sensi-
tive to the choice of seeds – this also makes the
cache a lot less valuable for the manual evaluation
of BASILISK. These results match our annotators’
intuition that BASILISK retrieved far more of the
esoteric, rare and misspelt results. The overlap be-
tween algorithms was even worse: 6.3% for the
top 100 terms and 9.1% for the top 500 terms.
The plot in Figure 1 shows the variation in pre-
cision between WMEB and BASILISK with the 10
seed sets from UNION. Precision is measured on
the first 100 terms and averaged over the 10 cate-
gories. The Shand is marked with a square, as well
as each algorithms’ average precision with 1 stan-
dard deviation (S.D.) error bars. The axes start
at 50% precision. Visually, the scatter is quite
obvious and the S.D. quite large. Note that on
our Shand evaluation, BASILISK performed signif-
icantly better than average.
We applied a linear regression analysis to iden-
tify any correlation between the algorithm’s per-
formances. The resulting regression line is shown
in Figure 1. The regression analysis identified no
correlation between WMEB and BASILISK (R2 =
0.13). It is almost impossible to predict the per-
formance of an algorithm with a given set of seeds
from another’s performance, and thus compar-
isons using only one seed set are unreliable.
Table 3 summarises the results on Sgold, in-
cluding the minimum and maximum averages over
the 10 categories. At only 100 terms, lexicon
</bodyText>
<table confidence="0.999294285714286">
Sgold Shand Avg. Min. Max. S.D.
UNION
BASILISK 80.5 68.3 58.3 78.8 7.31
WMEB 88.1 87.1 79.3 93.5 5.97
UNIQUE
BASILISK 80.5 67.1 56.7 83.5 9.75
WMEB 88.1 91.6 82.4 95.4 3.71
</table>
<tableCaption confidence="0.991288">
Table 3: Variation in precision with random gold
seed sets
</tableCaption>
<bodyText confidence="0.993508130434783">
variations are already obvious. As noted above,
Shand on BASILISK performed better than average,
whereas WMEB Sgold UNIQUE performed signifi-
cantly better on average than Shand. This clearly
indicates the difficulty of picking the best seeds
for an algorithm, and that comparing algorithms
with only one set has the potential to penalise an
algorithm. These results do show that WMEB is
significantly better than BASILISK.
In the UNIQUE experiments, we hypothesized
that each algorithm would perform well on its
own set, but BASILISK performs significantly
worse than WMEB, with a S.D. greater than 9.7.
BASILISK’s poor performance may be a direct re-
sult of it preferring low frequency terms, which are
unlikely to be good seeds.
These experiments have identified previously
unreported performance variations of these sys-
tems and their sensitivity to different seeds. The
standard evaluation paradigm, using one set of
hand-picked seeds over a few categories, does not
provide a robust and informative basis for compar-
ing bootstrapping algorithms.
</bodyText>
<sectionHeader confidence="0.979698" genericHeader="method">
5 Supervised Bagging
</sectionHeader>
<bodyText confidence="0.999616058823529">
While the wide variation we reported in the pre-
vious section is an impediment to reliable evalua-
tion, it presents an opportunity to improve the per-
formance of bootstrapping algorithms. In the next
section, we present a novel unsupervised bagging
approach to reducing semantic drift. In this sec-
tion, we consider the standard bagging approach
introduced by Breiman (1996). Bagging was used
by Ng and Cardie (2003) to create committees of
classifiers for labelling unseen data for retraining.
Here, a bootstrapping algorithm is instantiated
n = 50 times with random seed sets selected from
the UNION evaluation cache. This generates n new
lexicons L1, L2, ... , Ln for each category. The
next phase involves aggregating the predictions in
L1−n to form the final lexicon for each category,
using a weighted voting function.
</bodyText>
<figure confidence="0.987018571428571">
Hand-picked
Average
BASILISK (precision) 90
80
70
60
50
</figure>
<page confidence="0.964436">
400
</page>
<table confidence="0.995230285714286">
1-200 401-600 801-1000 1-1000
Shand
BASILISK 76.3 67.8 58.3 66.7
WMEB 90.3 82.3 62.0 78.6
Sgold BAG
BASILISK 84.2 80.2 58.2 78.2
WMEB 95.1 79.7 65.0 78.6
</table>
<tableCaption confidence="0.999904">
Table 4: Bagging with 50 gold seed sets
</tableCaption>
<bodyText confidence="0.9999689">
Our weighting function is based on two related
hypotheses of terms in highly accurate lexicons: 1)
the more category lexicons in L1−n a term appears
in, the more likely the term is a member of the
category; 2) terms ranked higher in lexicons are
more reliable category members. Firstly, we rank
the aggregated terms by the number of lexicons
they appear in, and to break ties, we take the term
that was extracted in the earliest iteration across
the lexicons.
</bodyText>
<subsectionHeader confidence="0.986759">
5.1 Supervised results
</subsectionHeader>
<bodyText confidence="0.9998490625">
Table 4 compares the average precisions of the
lexicons for BASILISK and WMEB using just the
hand-picked seeds (Shand) and 50 sample super-
vised bagging (Sgold BAG).
Bagging with samples from Sgold successfully
increased the performance of both BASILISK and
WMEB in the top 200 terms. While the improve-
ment continued for BASILISK in later sections, it
had a more variable effect for WMEB. Overall,
BASILISK gets the greater improvement in perfor-
mance (a 12% gain), almost reaching the perfor-
mance of WMEB across the top 1000 terms, while
WMEB’s performance is the same for both Shand
and Sgold BAG. We believe the greater variability
in BASILISK meant it benefited from bagging with
gold seeds.
</bodyText>
<sectionHeader confidence="0.974427" genericHeader="method">
6 Unsupervised bagging
</sectionHeader>
<bodyText confidence="0.999935307692308">
A significant problem for supervised bagging ap-
proaches is that they require a larger set of gold-
standard seed terms to sample from – either an
existing gazetteer or a large hand-picked set. In
our case, we used the evaluation cache which took
considerable time to accumulate. This saddles
the major application of bootstrapping, the quick
construction of accurate semantic lexicons, with a
chicken-and-egg problem.
However, we propose a novel solution – sam-
pling from the terms extracted with the hand-
picked seeds (Lhand). WMEB already has very
high precision for the top extracted terms (88.1%
</bodyText>
<table confidence="0.999346538461539">
BAGGING 1-200 401-600 801-1000 1-1000
Top-100 72.3 63.5 58.8 65.1
BASILISK 90.2 78.5 66.3 78.5
WMEB
Top-200
BASILISK 70.7 60.7 45.5 59.8
WMEB 91.0 78.4 62.2 77.0
Top-500
BASILISK 63.5 60.5 45.4 56.3
WMEB 92.5 80.9 59.1 77.2
PDF-500
BASILISK 69.6 68.3 49.6 62.3
WMEB 92.9 80.7 72.1 81.0
</table>
<tableCaption confidence="0.999922">
Table 5: Bagging with 50 unsupervised seed sets
</tableCaption>
<bodyText confidence="0.999954545454545">
for the top 100 terms) and may provide an accept-
able source of seed terms. This approach now
only requires the original 50 hand-picked seed
terms across the 10 categories, rather than the
2100 terms used above. The process now uses two
rounds of bootstrapping: first to create Lhand to
sample from and then another round with the 50
sets of randomly unsupervised seeds, Srand.
The next decision is how to sample Srand from
Lhand. One approach is to use uniform random
sampling from restricted sections of Lhand. We
performed random sampling from the top 100,
200 and 500 terms of Lhand. The seeds from the
smaller samples will have higher precision, but
less diversity.
In a truly unsupervised approach, it is impossi-
ble to know if and when semantic drift occurs and
thus using arbitrary cut-offs can reduce the diver-
sity of the selected seeds. To increase diversity we
also sampled from the top n=500 using a proba-
bility density function (PDF) using rejection sam-
pling, where r is the rank of the term in Lhand:
</bodyText>
<equation confidence="0.9985885">
�n Z−1
PDF(r) = E 1iEj −1 (1)
</equation>
<subsectionHeader confidence="0.998208">
6.1 Unsupervised results
</subsectionHeader>
<bodyText confidence="0.999742166666666">
Table 5 shows the average precision of the lex-
icons after bagging on the unsupervised seeds,
sampled from the top 100 – 500 terms from Lhand.
Using the top 100 seed sample is much less effec-
tive than Sgold BAG for BASILISK but nearly as ef-
fective for WMEB. As the sample size increases,
WMEB steadily improves with the increasing vari-
ability, however BASILISK is more effective when
the more precise seeds are sampled from higher
ranking terms in the lexicons.
Sampling with PDF-500 results in more accurate
lexicons over the first 1000 terms than the other
</bodyText>
<page confidence="0.996015">
401
</page>
<figure confidence="0.988364">
0 100 200 300 400 500 600 700 800 900 1000
Number of terms
</figure>
<figureCaption confidence="0.99975">
Figure 2: Semantic drift in CELL (n=20, m=20)
</figureCaption>
<bodyText confidence="0.999947916666667">
sampling methods for WMEB. In particular, WMEB
is more accurate with the unsupervised seeds than
the Sgold and Shand (81.0% vs 78.6% and 78.6%).
WMEB benefits from the larger variability intro-
duced by the more diverse sets of seeds, and the
greater variability available out-weighs the poten-
tial noise from incorrect seeds. The PDF-500 dis-
tribution allows some variability whilst still prefer-
ring the most reliable unsupervised seeds. In the
critical later iterations, WMEB PDF-500 improves
over supervised bagging (Sgold BAG) by 7% and
the original hand-picked seeds (Shand) by 10%.
</bodyText>
<sectionHeader confidence="0.850652" genericHeader="method">
7 Detecting semantic drift
</sectionHeader>
<bodyText confidence="0.999913666666667">
As shown above, semantic drift still dominates the
later iterations of bootstrapping even after bag-
ging. In this section, we propose distributional
similarity measurements over the extracted lexi-
con to detect semantic drift during the bootstrap-
ping process. Our hypothesis is that semantic drift
has occurred when a candidate term is more sim-
ilar to recently added terms than to the seed and
high precision terms added in the earlier iterations.
We experiment with a range of values of both.
Given a growing lexicon of size N, LN, let
L1...n correspond to the first n terms extracted into
L, and L(N−m)...N correspond to the last m terms
added to LN. In an iteration, let t be the next can-
didate term to be added to the lexicon.
We calculate the average distributional similar-
ity (sim) of t with all terms in L1...n and those in
L(N−m)...N and call the ratio the drift for term t:
</bodyText>
<equation confidence="0.988611333333333">
sim(L1...n, t)
drift(t, n, m) = (2)
sim(L(N−m) ... N, t)
</equation>
<bodyText confidence="0.99952540625">
Smaller values of drift(t, n, m) correspond to
the current term moving further away from the
first terms. A drift(t, n, m) of 0.2 corresponds
to a 20% difference in average similarity between
L1...n and L(N−m)...N for term t.
Drift can be used as a post-processing step to fil-
ter terms that are a possible consequence of drift.
However, our main proposal is to incorporate the
drift measure directly within the WMEB bootstrap-
ping algorithm, to detect and then prevent drift oc-
curing. In each iteration, the set of candidate terms
to be added to the lexicon are scored and ranked
for their suitability. We now additionally deter-
mine the drift of each candidate term before it is
added to the lexicon. If the term’s drift is below a
specified threshold, it is discarded from the extrac-
tion process. If the term has zero similarity with
the last m terms, but is similar to at least one of
the first n terms, the term is selected. Preventing
the drifted term from entering the lexicon during
the bootstrapping process, has a flow on effect as
it will not be able to extract additional divergent
patterns which would lead to accelerated drift.
For calculating drift we use the distributional
similarity approach described in Curran (2004).
We extracted window-based features from the
filtered 5-grams to form context vectors for
each term. We used the standard t-test weight
and weighted Jaccard measure functions (Curran,
2004). This system produces a distributional score
for each pair of terms presented by the bootstrap-
ping system.
</bodyText>
<subsectionHeader confidence="0.990933">
7.1 Drift detection results
</subsectionHeader>
<bodyText confidence="0.999783526315789">
To evaluate our semantic drift detection we incor-
porate our process in WMEB. Candidate terms are
still weighted in WMEB using the x2 statistic as de-
scribed in (McIntosh and Curran, 2008). Many of
the MEDLINE categories suffer from semantic drift
in WMEB in the later stages. Figure 2 shows the
distribution of correct and incorrect terms appear-
ing in the CELL lexicon extracted using Shand with
the term’s ranks plotted against their drift scores.
Firstly, it is evident that incorrect terms begin to
dominate in later iterations. Encouragingly, there
is a trend where low values of drift correspond to
incorrect terms being added. Drift also occurs in
ANTI and MUTN, with an average precision at 801-
1000 terms of 41.5% and 33.0% respectively.
We utilise drift in two ways with WMEB;
as a post-processing filter (WMEB+POST) and
internally during the term selection phase
(WMEB+DIST). Table 6 shows the performance
</bodyText>
<figure confidence="0.999416333333333">
Correct
Incorrect
Drift 3
2.5
2
1.5
1
0.5
0
</figure>
<page confidence="0.989194">
402
</page>
<table confidence="0.999181">
1-200 401-600 801-1000 1000
WMEB 90.3 82.3 62.0 78.6
WMEB+POST 90.3 82.3 62.1 78.6
n:20 m:5
n:20 m:20 90.3 81.5 62.0 76.9
n:100 m:5 90.2 82.3 62.1 78.6
n:100 m:20 90.3 82.1 62.1 78.1
WMEB+DIST 90.8 79.7 72.1 80.2
n:20 m:5
n:20 m:20 90.6 80.1 76.3 81.4
n:100 m:5 90.5 82.0 79.3 82.8
n:100 m:20 90.5 81.5 77.5 81.9
</table>
<tableCaption confidence="0.999549">
Table 6: Semantic drift detection results
</tableCaption>
<bodyText confidence="0.999947102564103">
of drift detection with WMEB, using Shand. We
use a drift threshold of 0.2 which was selected
empirically. A higher value substantially reduced
the lexicons’ size, while a lower value resulted
in little improvements. We experimented with
various sizes of initial terms L1...,,, (n=20, n=100)
and L(N−m)...N (m=5, m=20).
There is little performance variation observed
in the various WMEB+POST experiments. Over-
all, WMEB+POST was outperformed slightly by
WMEB. The post-filtering removed many incor-
rect terms, but did not address the underlying drift
problem. This only allowed additional incorrect
terms to enter the top 1000, resulting in no appre-
ciable difference.
Slight variations in precision are obtained using
WMEB+DIST in the first 600 terms, but noticeable
gains are achieved in the 801-1000 range. This is
not surprising as drift in many categories does not
start until later (cf. Figure 2).
With respect to the drift parameters n and m, we
found values of n below 20 to be inadequate. We
experimented initially with n=5 terms, but this is
equivalent to comparing the new candidate terms
to the initial seeds. Setting m to 5 was also less
useful than a larger sample, unless n was also
large. The best performance gain of 4.2% over-
all for 1000 terms and 17.3% at 801-1000 terms
was obtained using n=100 and m=5. In different
phases of WMEB+DIST we reduce semantic drift
significantly. In particular, at 801-1000, ANTI in-
crease by 46% to 87.5% and MUTN by 59% to
92.0%.
For our final experiments, we report the perfor-
mance of our best performing WMEB+DIST sys-
tem (n=100 m=5) using the 10 random GOLD seed
sets from section 4.1, in Table 7. On average
WMEB+DIST performs above WMEB, especially in
the later iterations where the difference is 6.3%.
</bodyText>
<table confidence="0.984421714285714">
Shand Avg. Min. Max. S.D.
1-200
WMEB 90.3 82.2 73.3 91.5 6.43
WMEB+DIST 90.7 84.8 78.0 91.0 4.61
401-600
WMEB 82.3 66.8 61.4 74.5 4.67
WMEB+DIST 82.0 73.1 65.2 79.3 4.52
</table>
<tableCaption confidence="0.996738">
Table 7: Final accuracy with drift detection
</tableCaption>
<sectionHeader confidence="0.979698" genericHeader="conclusions">
8 Conclusion
</sectionHeader>
<bodyText confidence="0.999975875">
In this paper, we have proposed unsupervised
bagging and integrated distributional similarity to
minimise the problem of semantic drift in itera-
tive bootstrapping algorithms, particularly when
extracting large semantic lexicons.
There are a number of avenues that require fur-
ther examination. Firstly, we would like to take
our two-round unsupervised bagging further by
performing another iteration of sampling and then
bootstrapping, to see if we can get a further im-
provement. Secondly, we also intend to experi-
ment with machine learning methods for identify-
ing the correct cutoff for the drift score. Finally,
we intend to combine the bagging and distribu-
tional approaches to further improve the lexicons.
Our initial analysis demonstrated that the output
and accuracy of bootstrapping systems can be very
sensitive to the choice of seed terms and therefore
robust evaluation requires results averaged across
randomised seed sets. We exploited this variability
to create both supervised and unsupervised bag-
ging algorithms. The latter requires no more seeds
than the original algorithm but performs signifi-
cantly better and more reliably in later iterations.
Finally, we incorporated distributional similarity
measurements directly into WMEB which detect
and censor terms which could lead to semantic
drift. This approach significantly outperformed
standard WMEB, with a 17.3% improvement over
the last 200 terms extracted (801-1000). The result
is an efficient, reliable and accurate system for ex-
tracting large-scale semantic lexicons.
</bodyText>
<sectionHeader confidence="0.998027" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.983330142857143">
We would like to thank Dr Cassie Thornley, our
second evaluator who also helped with the eval-
uation guidelines; and the anonymous reviewers
for their helpful feedback. This work was sup-
ported by the CSIRO ICT Centre and the Aus-
tralian Research Council under Discovery project
DP0665973.
</bodyText>
<page confidence="0.999061">
403
</page>
<sectionHeader confidence="0.993899" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99981895145631">
Leo Breiman. 1996. Bagging predictors. Machine Learning,
26(2):123–140.
James R. Curran, Tara Murphy, and Bernhard Scholz. 2007.
Minimising semantic drift with mutual exclusion boot-
strapping. In Proceedings of the 10th Conference of the
Pacific Association for Computational Linguistics, pages
172–180, Melbourne, Australia.
James R. Curran. 2004. From Distributional to Semantic
Similarity. Ph.D. thesis, University of Edinburgh.
Jason Eisner and Damianos Karakos. 2005. Bootstrapping
without the boot. In Proceedings of the Conference on
Human Language Technology and Conference on Empiri-
cal Methods in Natural Language Processing, pages 395–
402, Vancouver, British Columbia, Canada.
Gregory Grefenstette. 1994. Explorations in Automatic The-
saurus Discovery. Kluwer Academic Publishers, USA.
Claire Grover, Michael Matthews, and Richard Tobin. 2006.
Tools to address the interdependence between tokeni-
sation and standoff annotation. In Proceedings of the
Multi-dimensional Markup in Natural Language Process-
ing Workshop, Trento, Italy.
Zellig Harris. 1954. Distributional structure. Word,
10(2/3):146–162.
Marti A. Hearst. 1992. Automatic acquisition of hyponyms
from large text corpora. In Proceedings of the 14th Inter-
national Conference on Computational Linguistics, pages
539–545, Nantes, France.
William Hersh, Aaron M. Cohen, Lynn Ruslen, and
Phoebe M. Roberts. 2007. TREC 2007 Genomics Track
Overview. In Proceedings of the 16th Text REtrieval Con-
ference, Gaithersburg, MD, USA.
Mamoru Komachi, Taku Kudo, Masashi Shimbo, and Yuji
Matsumoto. 2008. Graph-based analysis of semantic drift
in Espresso-like bootstrapping algorithms. In Proceedings
of the Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1011–1020, Honolulu, USA.
J. Richard Landis and Gary G. Koch. 1977. The measure-
ment of observer agreement in categorical data. Biomet-
rics, 33(1):159–174.
Tara McIntosh and James R. Curran. 2008. Weighted mu-
tual exclusion bootstrapping for domain independent lex-
icon and template acquisition. In Proceedings of the Aus-
tralasian Language Technology Association Workshop,
pages 97–105, Hobart, Australia.
Edgar Meij and Sophia Katrenko. 2007. Bootstrapping lan-
guage associated with biomedical entities. The AID group
at TREC Genomics 2007. In Proceedings of The 16th Text
REtrieval Conference, Gaithersburg, MD, USA.
Shachar Mirkin, Ido Dagan, and Maayan Geffet. 2006. In-
tegrating pattern-based and distributional similarity meth-
ods for lexical entailment acquistion. In Proceedings of
the 21st International Conference on Computational Lin-
guisitics and the 44th Annual Meeting of the Association
for Computational Linguistics, pages 579–586, Sydney,
Australia.
Vincent Ng and Claire Cardie. 2003. Weakly supervised
natural language learning without redundant views. In
Proceedings of the Human Language Technology Confer-
ence of the North American Chapter of the Association
for Computational Linguistics, pages 94–101, Edmonton,
USA.
Marius Pas¸ca, Dekang Lin, Jeffrey Bigham, Andrei Lifchits,
and Alpa Jain. 2006. Names and similarities on the web:
Fact extraction in the fast lane. In Proceedings of the 21st
International Conference on Computational Linguisitics
and the 44th Annual Meeting of the Association for Com-
putational Linguistics, pages 809–816, Sydney, Australia.
Patrick Pantel and Deepak Ravichandran. 2004. Automati-
cally labelling semantic classes. In Proceedings of the Hu-
man Language Technology Conference of the North Amer-
ican Chapter of the Association for Computational Lin-
guistics, pages 321–328, Boston, MA, USA.
Marco Pennacchiotti and Patrick Pantel. 2006. A bootstrap-
ping algorithm for automatically harvesting semantic re-
lations. In Proceedings ofInference in Computational Se-
mantics (ICoS-06), pages 87–96, Buxton, England.
Ellen Riloff and Rosie Jones. 1999. Learning dictionaries
for information extraction by multi-level bootstrapping. In
Proceedings of the 16th National Conference on Artificial
Intelligence and the 11th Innovative Applications of Ar-
tificial Intelligence Conference, pages 474–479, Orlando,
FL, USA.
Ellen Riloff, Janyce Wiebe, and Theresa Wilson. 2003.
Learning subjective nouns using extraction pattern boot-
strapping. In Proceedings of the Seventh Conference on
Natural Language Learning (CoNLL-2003), pages 25–32.
Michael Thelen and Ellen Riloff. 2002. A bootstrapping
method for learning semantic lexicons using extraction
pattern contexts. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing, pages
214–221, Philadelphia, USA.
Xiaofeng Yang and Jian Su. 2007. Coreference resolu-
tion using semantic relatedness information from automat-
ically discovered patterns. In Proceedings of the 45th An-
nual Meeting of the Association for Computational Lin-
guistics, pages 528–535, Prague, Czech Republic.
Roman Yangarber. 2003. Counter-training in discovery of
semantic patterns. In Proceedings of the 41st Annual
Meeting of the Association for Computational Linguistics,
pages 343–350, Sapporo, Japan.
Hong Yu and Eugene Agichtein. 2003. Extracting synony-
mous gene and protein terms from biological literature.
Bioinformatics, 19(1):i340–i349.
</reference>
<page confidence="0.999019">
404
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.964370">
<title confidence="0.997772">Reducing semantic drift with bagging and distributional similarity</title>
<author confidence="0.999997">McIntosh R Curran</author>
<affiliation confidence="0.999708">School of Information Technologies University of Sydney</affiliation>
<address confidence="0.983872">NSW 2006, Australia</address>
<abstract confidence="0.998959294117647">Iterative bootstrapping algorithms are typically compared using a single set of handpicked seeds. However, we demonstrate that performance varies greatly depending on these seeds, and favourable seeds for one algorithm can perform very poorly with others, making comparisons unreliable. We exploit this wide variation with bagging, sampling from automatically extracted seeds to reduce semantic drift. However, semantic drift still occurs in later iterations. We propose an integrated distributional similarity filter to identify and censor potential semantic drifts, ensuring over 10% higher precision when extracting large semantic lexicons.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Leo Breiman</author>
</authors>
<title>Bagging predictors.</title>
<date>1996</date>
<booktitle>Machine Learning,</booktitle>
<volume>26</volume>
<issue>2</issue>
<contexts>
<context position="21269" citStr="Breiman (1996)" startWordPosition="3332" endWordPosition="3333"> and their sensitivity to different seeds. The standard evaluation paradigm, using one set of hand-picked seeds over a few categories, does not provide a robust and informative basis for comparing bootstrapping algorithms. 5 Supervised Bagging While the wide variation we reported in the previous section is an impediment to reliable evaluation, it presents an opportunity to improve the performance of bootstrapping algorithms. In the next section, we present a novel unsupervised bagging approach to reducing semantic drift. In this section, we consider the standard bagging approach introduced by Breiman (1996). Bagging was used by Ng and Cardie (2003) to create committees of classifiers for labelling unseen data for retraining. Here, a bootstrapping algorithm is instantiated n = 50 times with random seed sets selected from the UNION evaluation cache. This generates n new lexicons L1, L2, ... , Ln for each category. The next phase involves aggregating the predictions in L1−n to form the final lexicon for each category, using a weighted voting function. Hand-picked Average BASILISK (precision) 90 80 70 60 50 400 1-200 401-600 801-1000 1-1000 Shand BASILISK 76.3 67.8 58.3 66.7 WMEB 90.3 82.3 62.0 78.6</context>
</contexts>
<marker>Breiman, 1996</marker>
<rawString>Leo Breiman. 1996. Bagging predictors. Machine Learning, 26(2):123–140.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James R Curran</author>
<author>Tara Murphy</author>
<author>Bernhard Scholz</author>
</authors>
<title>Minimising semantic drift with mutual exclusion bootstrapping.</title>
<date>2007</date>
<booktitle>In Proceedings of the 10th Conference of the Pacific Association for Computational Linguistics,</booktitle>
<pages>172--180</pages>
<location>Melbourne, Australia.</location>
<contexts>
<context position="2079" citStr="Curran et al., 2007" startWordPosition="298" endWordPosition="301">e applied to raw text, and are efficient enough for tera-scale extraction (Pas¸ca et al., 2006). Bootstrapping is minimally supervised, as it is initialised with a small number of seed instances of the information to extract. For semantic lexicons, these seeds are terms from the category of interest. The seeds identify contextual patterns that express a particular semantic category, which in turn recognise new terms (Riloff and Jones, 1999). Unfortunately, semantic drift often occurs when ambiguous or erroneous terms and/or patterns are introduced into and then dominate the iterative process (Curran et al., 2007). Bootstrapping algorithms are typically compared using only a single set of hand-picked seeds. We first show that different seeds cause these algorithms to generate diverse lexicons which vary greatly in precision. This makes evaluation unreliable – seeds which perform well on one algorithm can perform surprisingly poorly on another. In fact, random gold-standard seeds often outperform seeds carefully chosen by domain experts. Our second contribution exploits this diversity we have identified. We present an unsupervised bagging algorithm which samples from the extracted lexicon rather than re</context>
<context position="5095" citStr="Curran et al. (2007)" startWordPosition="757" endWordPosition="760">on. MB is seeded with a small set of user selected seed terms. These seeds are used to identify contextual patterns they appear in, which in turn identify new lexicon entries. This process is repeated with the new lexicon terms identifying new patterns. In each iteration, the topn candidates are selected, based on a metric scoring their membership in the category and suitability for extracting additional terms and patterns. Bootstrapping eventually extracts polysemous terms and patterns which weakly constrain the semantic class, causing the lexicon’s meaning to shift, called semantic drift by Curran et al. (2007). For example, female firstnames may drift into flowers when Iris and Rose are extracted. Many variations on bootstrapping have been developed to reduce semantic drift.1 One approach is to extract multiple semantic categories simultaneously, where the individual bootstrapping instances compete with one another in an attempt to actively direct the categories away from each other. Multi-category algorithms outperform MLB (Thelen and Riloff, 2002), and we focus on these algorithms in our experiments. In BASILISK, MEB, and WMEB, each competing category iterates simultaneously between the term and </context>
<context position="7226" citStr="Curran et al., 2007" startWordPosition="1084" endWordPosition="1088">t patterns only extract terms of a single category. Semantic drift is reduced by eliminating patterns that collide with multiple categories in an iteration and by ignoring colliding candidate terms (for the current iteration). This excludes generic patterns that can occur frequently with multiple categories, and reduces the chance of assigning ambiguous terms to their less dominant sense. 2.1 Weighted NMB The scoring of candidate terms and patterns in MEB is naive. Candidates which 1) match the most input instances; and 2) have the potential to generate the most new candidates, are preferred (Curran et al., 2007). This second criterion aims to increase recall. However, the selected instances are highly likely to introduce drift. Our Weighted MEB algorithm (McIntosh and Curran, 2008), extends MEB by incorporating term and pattern weighting, and a cumulative pattern pool. WMEB uses the x2 statistic to identify patterns and terms that are strongly associated with the growing lexicon terms and their patterns respectively. The terms and patterns are then ranked first by the number of input instances they match (as in MEB), but then by their weighted score. In MEB and BASILISK2, the top-k patterns for each </context>
<context position="9516" citStr="Curran et al., 2007" startWordPosition="1440" endWordPosition="1443">s of distributionally similar terms. Mirkin et al. (2006) used 11 patterns, and the distributional similarity score of each pair of terms, to construct features for lexical entailment. Pas¸ca et al. (2006) used distributional similarity to find similar terms for verifying the names in date-of-birth facts for their tera-scale bootstrapping system. 2.3 Selecting seeds For the majority of bootstrapping tasks, there is little or no guidance on how to select seeds which will generate the most accurate lexicons. Most previous works used seeds selected based on a user’s or domain expert’s intuition (Curran et al., 2007), which may then have to meet a frequency criterion (Riloff et al., 2003). Eisner and Karakos (2005) focus on this issue by considering an approach called strapping for word sense disambiguation. In strapping, semisupervised bootstrapping instances are used to train a meta-classifier, which given a bootstrapping instance can predict the usefulness (fertility) of its seeds. The most fertile seeds can then be used in place of hand-picked seeds. The design of a strapping algorithm is more complex than that of a supervised learner (Eisner and Karakos, 2005), and it is unclear how well strapping wi</context>
<context position="13581" citStr="Curran et al., 2007" startWordPosition="2077" endWordPosition="2080"> of patterns and terms loadable by BASILISK 5Note that polysemous terms in these categories may be correctly extracted by another category. For example, all Pathways also belong to FUNC. 398 The five hand-picked seeds used for each category are shown in italics in Table 2. These were carefully chosen based on the evaluators’ intuition, and are as unambiguous as possible with respect to the other categories. We also utilised terms in stop categories which are known to cause semantic drift in specific classes. These extra categories bound the lexical space and reduce ambiguity (Yangarber, 2003; Curran et al., 2007). We used four stop categories introduced in McIntosh and Curran (2008): AMINO ACID, ANIMAL, BODY and ORGANISM. 3.3 Lexicon evaluation The evaluation involves manually inspecting each extracted term and judging whether it was a member of the semantic class. This manual evaluation is extremely time consuming and is necessary due to the limited coverage of biomedical resources. To make later evaluations more efficient, all evaluators’ decisions for each category are cached. Unfamiliar terms were checked using online resources including MEDLINE, Medical Subject Headings (MeSH), Wikipedia. Each am</context>
</contexts>
<marker>Curran, Murphy, Scholz, 2007</marker>
<rawString>James R. Curran, Tara Murphy, and Bernhard Scholz. 2007. Minimising semantic drift with mutual exclusion bootstrapping. In Proceedings of the 10th Conference of the Pacific Association for Computational Linguistics, pages 172–180, Melbourne, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James R Curran</author>
</authors>
<title>From Distributional to Semantic Similarity.</title>
<date>2004</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Edinburgh.</institution>
<contexts>
<context position="28621" citStr="Curran (2004)" startWordPosition="4587" endWordPosition="4588">y determine the drift of each candidate term before it is added to the lexicon. If the term’s drift is below a specified threshold, it is discarded from the extraction process. If the term has zero similarity with the last m terms, but is similar to at least one of the first n terms, the term is selected. Preventing the drifted term from entering the lexicon during the bootstrapping process, has a flow on effect as it will not be able to extract additional divergent patterns which would lead to accelerated drift. For calculating drift we use the distributional similarity approach described in Curran (2004). We extracted window-based features from the filtered 5-grams to form context vectors for each term. We used the standard t-test weight and weighted Jaccard measure functions (Curran, 2004). This system produces a distributional score for each pair of terms presented by the bootstrapping system. 7.1 Drift detection results To evaluate our semantic drift detection we incorporate our process in WMEB. Candidate terms are still weighted in WMEB using the x2 statistic as described in (McIntosh and Curran, 2008). Many of the MEDLINE categories suffer from semantic drift in WMEB in the later stages.</context>
</contexts>
<marker>Curran, 2004</marker>
<rawString>James R. Curran. 2004. From Distributional to Semantic Similarity. Ph.D. thesis, University of Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Eisner</author>
<author>Damianos Karakos</author>
</authors>
<title>Bootstrapping without the boot.</title>
<date>2005</date>
<booktitle>In Proceedings of the Conference on Human Language Technology and Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>395--402</pages>
<location>Vancouver, British Columbia, Canada.</location>
<contexts>
<context position="9616" citStr="Eisner and Karakos (2005)" startWordPosition="1457" endWordPosition="1460">nal similarity score of each pair of terms, to construct features for lexical entailment. Pas¸ca et al. (2006) used distributional similarity to find similar terms for verifying the names in date-of-birth facts for their tera-scale bootstrapping system. 2.3 Selecting seeds For the majority of bootstrapping tasks, there is little or no guidance on how to select seeds which will generate the most accurate lexicons. Most previous works used seeds selected based on a user’s or domain expert’s intuition (Curran et al., 2007), which may then have to meet a frequency criterion (Riloff et al., 2003). Eisner and Karakos (2005) focus on this issue by considering an approach called strapping for word sense disambiguation. In strapping, semisupervised bootstrapping instances are used to train a meta-classifier, which given a bootstrapping instance can predict the usefulness (fertility) of its seeds. The most fertile seeds can then be used in place of hand-picked seeds. The design of a strapping algorithm is more complex than that of a supervised learner (Eisner and Karakos, 2005), and it is unclear how well strapping will generalise to other bootstrapping tasks. In our work, we build upon bootstrapping using unsupervi</context>
</contexts>
<marker>Eisner, Karakos, 2005</marker>
<rawString>Jason Eisner and Damianos Karakos. 2005. Bootstrapping without the boot. In Proceedings of the Conference on Human Language Technology and Conference on Empirical Methods in Natural Language Processing, pages 395– 402, Vancouver, British Columbia, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gregory Grefenstette</author>
</authors>
<title>Explorations in Automatic Thesaurus Discovery.</title>
<date>1994</date>
<publisher>Kluwer Academic Publishers, USA.</publisher>
<contexts>
<context position="8265" citStr="Grefenstette, 1994" startWordPosition="1251" endWordPosition="1252">rms and patterns are then ranked first by the number of input instances they match (as in MEB), but then by their weighted score. In MEB and BASILISK2, the top-k patterns for each iteration are used to extract new candidate terms. As the lexicons grow, general patterns can drift into the top-k and as a result the earlier precise patterns lose their extracting influence. In WMEB, the pattern pool accumulates all top-k patterns from previous iterations, to ensure previous patterns can contribute. 2.2 Distributional Similarity Distributional similarity has been used to extract semantic lexicons (Grefenstette, 1994), based on the distributional hypothesis that semantically similar words appear in similar contexts (Harris, 1954). Words are represented by context vectors, and words are considered similar if their context vectors are similar. Patterns and distributional methods have been combined previously. Pantel and Ravichandran 2In BASILISK, k is increased by one in each iteration, to ensure at least one new pattern is introduced. 397 TYPE (#) MEDLINE Terms 1347 002 Contexts 4 090 412 5-grams 72 796 760 Unfiltered tokens 6 642 802 776 Table 1: Filtered 5-gram dataset statistics. (2004) used lexical-synt</context>
</contexts>
<marker>Grefenstette, 1994</marker>
<rawString>Gregory Grefenstette. 1994. Explorations in Automatic Thesaurus Discovery. Kluwer Academic Publishers, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claire Grover</author>
<author>Michael Matthews</author>
<author>Richard Tobin</author>
</authors>
<title>Tools to address the interdependence between tokenisation and standoff annotation.</title>
<date>2006</date>
<booktitle>In Proceedings of the Multi-dimensional Markup in Natural Language Processing Workshop,</booktitle>
<location>Trento, Italy.</location>
<contexts>
<context position="12270" citStr="Grover et al., 2006" startWordPosition="1859" endWordPosition="1862">umin IL-6 (κ1:0.99, κ2:1.0) SIGN Signs and symptoms of diseases anemia hypertension hyperglycemia fever cough (κ1:0.96, κ2:0.99) TUMR Tumors: Types of tumors lymphoma sarcoma melanoma neuroblastoma osteosarcoma (κ1:0.89, κ2:0.95) Table 2: The MEDLINE semantic categories. t2, t4, t5). Unlike Riloff and Jones (1999) and Yangarber (2003), we do not use syntactic knowledge, as we aim to take a language independent approach. The 5-grams were extracted from the MEDLINE abstracts following McIntosh and Curran (2008). The abstracts were tokenised and split into sentences using bio-specific NLP tools (Grover et al., 2006). The 5-grams were filtered to remove patterns appearing with less than 7 terms4. The statistics of the resulting dataset are shown in Table 1. 3.2 Semantic Categories The semantic categories we extract from MEDLINE are shown in Table 2. These are a subset of the TREC Genomics 2007 entities (Hersh et al., 2007). Categories which are predominately multiterm entities, e.g. Pathways and Toxicities, were excluded.5 Genes and Proteins were merged into PROT as they have a high degree of metonymy, particularly out of context. The Cell or Tissue Type category was split into two fine grained classes, C</context>
</contexts>
<marker>Grover, Matthews, Tobin, 2006</marker>
<rawString>Claire Grover, Michael Matthews, and Richard Tobin. 2006. Tools to address the interdependence between tokenisation and standoff annotation. In Proceedings of the Multi-dimensional Markup in Natural Language Processing Workshop, Trento, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Zellig Harris</author>
</authors>
<date>1954</date>
<booktitle>Distributional structure. Word,</booktitle>
<pages>10--2</pages>
<contexts>
<context position="8379" citStr="Harris, 1954" startWordPosition="1266" endWordPosition="1267">ed score. In MEB and BASILISK2, the top-k patterns for each iteration are used to extract new candidate terms. As the lexicons grow, general patterns can drift into the top-k and as a result the earlier precise patterns lose their extracting influence. In WMEB, the pattern pool accumulates all top-k patterns from previous iterations, to ensure previous patterns can contribute. 2.2 Distributional Similarity Distributional similarity has been used to extract semantic lexicons (Grefenstette, 1994), based on the distributional hypothesis that semantically similar words appear in similar contexts (Harris, 1954). Words are represented by context vectors, and words are considered similar if their context vectors are similar. Patterns and distributional methods have been combined previously. Pantel and Ravichandran 2In BASILISK, k is increased by one in each iteration, to ensure at least one new pattern is introduced. 397 TYPE (#) MEDLINE Terms 1347 002 Contexts 4 090 412 5-grams 72 796 760 Unfiltered tokens 6 642 802 776 Table 1: Filtered 5-gram dataset statistics. (2004) used lexical-syntactic patterns to label clusters of distributionally similar terms. Mirkin et al. (2006) used 11 patterns, and the</context>
</contexts>
<marker>Harris, 1954</marker>
<rawString>Zellig Harris. 1954. Distributional structure. Word, 10(2/3):146–162.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marti A Hearst</author>
</authors>
<title>Automatic acquisition of hyponyms from large text corpora.</title>
<date>1992</date>
<booktitle>In Proceedings of the 14th International Conference on Computational Linguistics,</booktitle>
<pages>539--545</pages>
<location>Nantes, France.</location>
<contexts>
<context position="4022" citStr="Hearst (1992)" startWordPosition="595" endWordPosition="596">f potential semantic drift. We demonstrate these methods for extracting biomedical semantic lexicons using two bootstrapping algorithms. Our unsupervised bagging approach outperforms carefully hand-picked seeds by — 10% in later iterations. Our distributional similarity filter gives a similar performance improvement. This allows us to produce large lexicons accurately and efficiently for domain-specific language processing. 396 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 396–404, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background Hearst (1992) exploited patterns for information extraction, to acquire is-a relations using manually devised patterns like such Z as X and/or Y where X and Y are hyponyms of Z. Riloff and Jones (1999) extended this with an automated bootstrapping algorithm, Multi-level Bootstrapping (MLB), which iteratively extracts semantic lexicons from text. In MLB, bootstrapping alternates between two stages: pattern extraction and selection, and term extraction and selection. MB is seeded with a small set of user selected seed terms. These seeds are used to identify contextual patterns they appear in, which in turn i</context>
</contexts>
<marker>Hearst, 1992</marker>
<rawString>Marti A. Hearst. 1992. Automatic acquisition of hyponyms from large text corpora. In Proceedings of the 14th International Conference on Computational Linguistics, pages 539–545, Nantes, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Hersh</author>
<author>Aaron M Cohen</author>
<author>Lynn Ruslen</author>
<author>Phoebe M Roberts</author>
</authors>
<title>TREC</title>
<date>2007</date>
<booktitle>In Proceedings of the 16th Text REtrieval Conference,</booktitle>
<location>Gaithersburg, MD, USA.</location>
<contexts>
<context position="12582" citStr="Hersh et al., 2007" startWordPosition="1915" endWordPosition="1918">9) and Yangarber (2003), we do not use syntactic knowledge, as we aim to take a language independent approach. The 5-grams were extracted from the MEDLINE abstracts following McIntosh and Curran (2008). The abstracts were tokenised and split into sentences using bio-specific NLP tools (Grover et al., 2006). The 5-grams were filtered to remove patterns appearing with less than 7 terms4. The statistics of the resulting dataset are shown in Table 1. 3.2 Semantic Categories The semantic categories we extract from MEDLINE are shown in Table 2. These are a subset of the TREC Genomics 2007 entities (Hersh et al., 2007). Categories which are predominately multiterm entities, e.g. Pathways and Toxicities, were excluded.5 Genes and Proteins were merged into PROT as they have a high degree of metonymy, particularly out of context. The Cell or Tissue Type category was split into two fine grained classes, CELL and CLNE (cell line). 4This frequency was selected as it resulted in the largest number of patterns and terms loadable by BASILISK 5Note that polysemous terms in these categories may be correctly extracted by another category. For example, all Pathways also belong to FUNC. 398 The five hand-picked seeds use</context>
</contexts>
<marker>Hersh, Cohen, Ruslen, Roberts, 2007</marker>
<rawString>William Hersh, Aaron M. Cohen, Lynn Ruslen, and Phoebe M. Roberts. 2007. TREC 2007 Genomics Track Overview. In Proceedings of the 16th Text REtrieval Conference, Gaithersburg, MD, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mamoru Komachi</author>
<author>Taku Kudo</author>
<author>Masashi Shimbo</author>
<author>Yuji Matsumoto</author>
</authors>
<title>Graph-based analysis of semantic drift in Espresso-like bootstrapping algorithms.</title>
<date>2008</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>1011--1020</pages>
<location>Honolulu, USA.</location>
<contexts>
<context position="6339" citStr="Komachi et al. (2008)" startWordPosition="945" endWordPosition="949">selection stages. These algorithms differ in how terms and patterns selected by multiple categories are handled, and their scoring metrics. In BASILISK (Thelen and Riloff, 2002), candidate terms are ranked highly if they have strong evidence for a category and little or no evidence for other categories. This typically favours less frequent terms, as they will match far fewer patterns and are thus more likely to belong to one category. Patterns are selected similarly, however patterns may also be selected by different categories in later iterations. Curran et al. (2007) introduced Mutual Exclu1Komachi et al. (2008) used graph-based algorithms to reduce semantic drift for Word Sense Disambiguation. sion Bootstrapping (MEB) which forces stricter boundaries between the competing categories than BASILISK. In MEB, the key assumptions are that terms only belong to a category and that patterns only extract terms of a single category. Semantic drift is reduced by eliminating patterns that collide with multiple categories in an iteration and by ignoring colliding candidate terms (for the current iteration). This excludes generic patterns that can occur frequently with multiple categories, and reduces the chance </context>
</contexts>
<marker>Komachi, Kudo, Shimbo, Matsumoto, 2008</marker>
<rawString>Mamoru Komachi, Taku Kudo, Masashi Shimbo, and Yuji Matsumoto. 2008. Graph-based analysis of semantic drift in Espresso-like bootstrapping algorithms. In Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 1011–1020, Honolulu, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Richard Landis</author>
<author>Gary G Koch</author>
</authors>
<title>The measurement of observer agreement in categorical data.</title>
<date>1977</date>
<journal>Biometrics,</journal>
<volume>33</volume>
<issue>1</issue>
<contexts>
<context position="15251" citStr="Landis and Koch, 1977" startWordPosition="2341" endWordPosition="2344">ect, for example, gastrointestinal may be incorrectly extracted for TUMR, as part of the entity gastrointestinal carcinoma. However, the modifier may also be used for DISE (gastrointestinal infection) and CELL. The terms were evaluated by two domain experts. Inter-annotator agreement was measured on the top-100 terms extracted by BASILISK and WMEB with the hand-picked seeds for each category. All disagreements were discussed, and the kappa scores, before (K1) and after (K2) the discussions, are shown in Table 2. Each score is above 0.8 which reflects an agreement strength of “almost perfect” (Landis and Koch, 1977). For comparing the accuracy of the systems we evaluated the precision of samples of the lexicons extracted for each category. We report average precision over the 10 semantic categories on the 1-200, 401-600 and 801-1000 term samples, and over the first 1000 terms. In each algorithm, each category is initialised with 5 seed terms, and the number of patterns, k, is set to 5. In each iteration, 5 lexicon terms are extracted by each category. Each algorithm is run for 200 iterations. 4 Seed diversity The first step in bootstrapping is to select a set of seeds by hand. These hand-picked seeds are</context>
</contexts>
<marker>Landis, Koch, 1977</marker>
<rawString>J. Richard Landis and Gary G. Koch. 1977. The measurement of observer agreement in categorical data. Biometrics, 33(1):159–174.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tara McIntosh</author>
<author>James R Curran</author>
</authors>
<title>Weighted mutual exclusion bootstrapping for domain independent lexicon and template acquisition.</title>
<date>2008</date>
<booktitle>In Proceedings of the Australasian Language Technology Association Workshop,</booktitle>
<pages>97--105</pages>
<location>Hobart, Australia.</location>
<contexts>
<context position="3296" citStr="McIntosh and Curran, 2008" startWordPosition="482" endWordPosition="485">r than relying on existing gazetteers or hand-selected seeds. Each sample is then fed back as seeds to the bootstrapper and the results combined using voting. This both improves the precision of the lexicon and the robustness of the algorithms to the choice of initial seeds. Unfortunately, semantic drift still dominates in later iterations, since erroneous extracted terms and/or patterns eventually shift the category’s direction. Our third contribution focuses on detecting and censoring the terms introduced by semantic drift. We integrate a distributional similarity filter directly into WMEB (McIntosh and Curran, 2008). This filter judges whether a new term is more similar to the earlier or most recently extracted terms, a sign of potential semantic drift. We demonstrate these methods for extracting biomedical semantic lexicons using two bootstrapping algorithms. Our unsupervised bagging approach outperforms carefully hand-picked seeds by — 10% in later iterations. Our distributional similarity filter gives a similar performance improvement. This allows us to produce large lexicons accurately and efficiently for domain-specific language processing. 396 Proceedings of the 47th Annual Meeting of the ACL and t</context>
<context position="7399" citStr="McIntosh and Curran, 2008" startWordPosition="1111" endWordPosition="1114">ring colliding candidate terms (for the current iteration). This excludes generic patterns that can occur frequently with multiple categories, and reduces the chance of assigning ambiguous terms to their less dominant sense. 2.1 Weighted NMB The scoring of candidate terms and patterns in MEB is naive. Candidates which 1) match the most input instances; and 2) have the potential to generate the most new candidates, are preferred (Curran et al., 2007). This second criterion aims to increase recall. However, the selected instances are highly likely to introduce drift. Our Weighted MEB algorithm (McIntosh and Curran, 2008), extends MEB by incorporating term and pattern weighting, and a cumulative pattern pool. WMEB uses the x2 statistic to identify patterns and terms that are strongly associated with the growing lexicon terms and their patterns respectively. The terms and patterns are then ranked first by the number of input instances they match (as in MEB), but then by their weighted score. In MEB and BASILISK2, the top-k patterns for each iteration are used to extract new candidate terms. As the lexicons grow, general patterns can drift into the top-k and as a result the earlier precise patterns lose their ex</context>
<context position="12164" citStr="McIntosh and Curran (2008)" startWordPosition="1842" endWordPosition="1845">ons, and mutants Leiden C677T C282Y 35delG null (κ1:0.89, κ2:1.0) PROT Proteins and genes p53 actin collagen albumin IL-6 (κ1:0.99, κ2:1.0) SIGN Signs and symptoms of diseases anemia hypertension hyperglycemia fever cough (κ1:0.96, κ2:0.99) TUMR Tumors: Types of tumors lymphoma sarcoma melanoma neuroblastoma osteosarcoma (κ1:0.89, κ2:0.95) Table 2: The MEDLINE semantic categories. t2, t4, t5). Unlike Riloff and Jones (1999) and Yangarber (2003), we do not use syntactic knowledge, as we aim to take a language independent approach. The 5-grams were extracted from the MEDLINE abstracts following McIntosh and Curran (2008). The abstracts were tokenised and split into sentences using bio-specific NLP tools (Grover et al., 2006). The 5-grams were filtered to remove patterns appearing with less than 7 terms4. The statistics of the resulting dataset are shown in Table 1. 3.2 Semantic Categories The semantic categories we extract from MEDLINE are shown in Table 2. These are a subset of the TREC Genomics 2007 entities (Hersh et al., 2007). Categories which are predominately multiterm entities, e.g. Pathways and Toxicities, were excluded.5 Genes and Proteins were merged into PROT as they have a high degree of metonymy</context>
<context position="13652" citStr="McIntosh and Curran (2008)" startWordPosition="2089" endWordPosition="2092"> terms in these categories may be correctly extracted by another category. For example, all Pathways also belong to FUNC. 398 The five hand-picked seeds used for each category are shown in italics in Table 2. These were carefully chosen based on the evaluators’ intuition, and are as unambiguous as possible with respect to the other categories. We also utilised terms in stop categories which are known to cause semantic drift in specific classes. These extra categories bound the lexical space and reduce ambiguity (Yangarber, 2003; Curran et al., 2007). We used four stop categories introduced in McIntosh and Curran (2008): AMINO ACID, ANIMAL, BODY and ORGANISM. 3.3 Lexicon evaluation The evaluation involves manually inspecting each extracted term and judging whether it was a member of the semantic class. This manual evaluation is extremely time consuming and is necessary due to the limited coverage of biomedical resources. To make later evaluations more efficient, all evaluators’ decisions for each category are cached. Unfamiliar terms were checked using online resources including MEDLINE, Medical Subject Headings (MeSH), Wikipedia. Each ambiguous term was counted as correct if it was classified into one of it</context>
<context position="16648" citStr="McIntosh and Curran, 2008" startWordPosition="2571" endWordPosition="2574">the frequency of the potential seeds in the corpora is often considered, on the assumption that highly frequent seeds are better (Thelen and Riloff, 2002). Unfortunately, these seeds may be too general and extract many nonspecific patterns. Another approach is to identify seeds using hyponym patterns like, * is a [NAMED ENTITY] (Meij and Katrenko, 2007). This leads us to our first investigation of seed variability and the methodology used to compare bootstrapping algorithms. Typically algorithms are compared using one set of hand-picked seeds for each category (Pennacchiotti and Pantel, 2006; McIntosh and Curran, 2008). This approach does not provide a fair comparison or any detailed analysis of the algorithms under investigation. As we shall see, it is possible that the seeds achieve the maximum precision for one algorithm and the minimum for another, and thus the single comparison is inappropriate. Even evaluating on multiple categories does not ensure the robustness of the evaluation. Secondly, it provides no insight into the sensitivity of an algorithm to different seeds. 4.1 Analysis with random gold seeds Our initial analysis investigated the sensitivity and variability of the lexicons generated using</context>
<context position="29133" citStr="McIntosh and Curran, 2008" startWordPosition="4666" endWordPosition="4669"> accelerated drift. For calculating drift we use the distributional similarity approach described in Curran (2004). We extracted window-based features from the filtered 5-grams to form context vectors for each term. We used the standard t-test weight and weighted Jaccard measure functions (Curran, 2004). This system produces a distributional score for each pair of terms presented by the bootstrapping system. 7.1 Drift detection results To evaluate our semantic drift detection we incorporate our process in WMEB. Candidate terms are still weighted in WMEB using the x2 statistic as described in (McIntosh and Curran, 2008). Many of the MEDLINE categories suffer from semantic drift in WMEB in the later stages. Figure 2 shows the distribution of correct and incorrect terms appearing in the CELL lexicon extracted using Shand with the term’s ranks plotted against their drift scores. Firstly, it is evident that incorrect terms begin to dominate in later iterations. Encouragingly, there is a trend where low values of drift correspond to incorrect terms being added. Drift also occurs in ANTI and MUTN, with an average precision at 801- 1000 terms of 41.5% and 33.0% respectively. We utilise drift in two ways with WMEB; </context>
</contexts>
<marker>McIntosh, Curran, 2008</marker>
<rawString>Tara McIntosh and James R. Curran. 2008. Weighted mutual exclusion bootstrapping for domain independent lexicon and template acquisition. In Proceedings of the Australasian Language Technology Association Workshop, pages 97–105, Hobart, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Edgar Meij</author>
<author>Sophia Katrenko</author>
</authors>
<title>Bootstrapping language associated with biomedical entities. The AID group at TREC Genomics</title>
<date>2007</date>
<booktitle>In Proceedings of The 16th Text REtrieval Conference,</booktitle>
<location>Gaithersburg, MD, USA.</location>
<contexts>
<context position="16377" citStr="Meij and Katrenko, 2007" startWordPosition="2532" endWordPosition="2535">y The first step in bootstrapping is to select a set of seeds by hand. These hand-picked seeds are typically chosen by a domain expert who selects a reasonably unambiguous representative sample of the category with high coverage by introspection. To improve the seeds, the frequency of the potential seeds in the corpora is often considered, on the assumption that highly frequent seeds are better (Thelen and Riloff, 2002). Unfortunately, these seeds may be too general and extract many nonspecific patterns. Another approach is to identify seeds using hyponym patterns like, * is a [NAMED ENTITY] (Meij and Katrenko, 2007). This leads us to our first investigation of seed variability and the methodology used to compare bootstrapping algorithms. Typically algorithms are compared using one set of hand-picked seeds for each category (Pennacchiotti and Pantel, 2006; McIntosh and Curran, 2008). This approach does not provide a fair comparison or any detailed analysis of the algorithms under investigation. As we shall see, it is possible that the seeds achieve the maximum precision for one algorithm and the minimum for another, and thus the single comparison is inappropriate. Even evaluating on multiple categories do</context>
</contexts>
<marker>Meij, Katrenko, 2007</marker>
<rawString>Edgar Meij and Sophia Katrenko. 2007. Bootstrapping language associated with biomedical entities. The AID group at TREC Genomics 2007. In Proceedings of The 16th Text REtrieval Conference, Gaithersburg, MD, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shachar Mirkin</author>
<author>Ido Dagan</author>
<author>Maayan Geffet</author>
</authors>
<title>Integrating pattern-based and distributional similarity methods for lexical entailment acquistion.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st International Conference on Computational Linguisitics and the 44th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>579--586</pages>
<location>Sydney, Australia.</location>
<contexts>
<context position="8953" citStr="Mirkin et al. (2006)" startWordPosition="1353" endWordPosition="1356">ords appear in similar contexts (Harris, 1954). Words are represented by context vectors, and words are considered similar if their context vectors are similar. Patterns and distributional methods have been combined previously. Pantel and Ravichandran 2In BASILISK, k is increased by one in each iteration, to ensure at least one new pattern is introduced. 397 TYPE (#) MEDLINE Terms 1347 002 Contexts 4 090 412 5-grams 72 796 760 Unfiltered tokens 6 642 802 776 Table 1: Filtered 5-gram dataset statistics. (2004) used lexical-syntactic patterns to label clusters of distributionally similar terms. Mirkin et al. (2006) used 11 patterns, and the distributional similarity score of each pair of terms, to construct features for lexical entailment. Pas¸ca et al. (2006) used distributional similarity to find similar terms for verifying the names in date-of-birth facts for their tera-scale bootstrapping system. 2.3 Selecting seeds For the majority of bootstrapping tasks, there is little or no guidance on how to select seeds which will generate the most accurate lexicons. Most previous works used seeds selected based on a user’s or domain expert’s intuition (Curran et al., 2007), which may then have to meet a frequ</context>
</contexts>
<marker>Mirkin, Dagan, Geffet, 2006</marker>
<rawString>Shachar Mirkin, Ido Dagan, and Maayan Geffet. 2006. Integrating pattern-based and distributional similarity methods for lexical entailment acquistion. In Proceedings of the 21st International Conference on Computational Linguisitics and the 44th Annual Meeting of the Association for Computational Linguistics, pages 579–586, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vincent Ng</author>
<author>Claire Cardie</author>
</authors>
<title>Weakly supervised natural language learning without redundant views.</title>
<date>2003</date>
<booktitle>In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>94--101</pages>
<location>Edmonton, USA.</location>
<contexts>
<context position="21311" citStr="Ng and Cardie (2003)" startWordPosition="3338" endWordPosition="3341">seeds. The standard evaluation paradigm, using one set of hand-picked seeds over a few categories, does not provide a robust and informative basis for comparing bootstrapping algorithms. 5 Supervised Bagging While the wide variation we reported in the previous section is an impediment to reliable evaluation, it presents an opportunity to improve the performance of bootstrapping algorithms. In the next section, we present a novel unsupervised bagging approach to reducing semantic drift. In this section, we consider the standard bagging approach introduced by Breiman (1996). Bagging was used by Ng and Cardie (2003) to create committees of classifiers for labelling unseen data for retraining. Here, a bootstrapping algorithm is instantiated n = 50 times with random seed sets selected from the UNION evaluation cache. This generates n new lexicons L1, L2, ... , Ln for each category. The next phase involves aggregating the predictions in L1−n to form the final lexicon for each category, using a weighted voting function. Hand-picked Average BASILISK (precision) 90 80 70 60 50 400 1-200 401-600 801-1000 1-1000 Shand BASILISK 76.3 67.8 58.3 66.7 WMEB 90.3 82.3 62.0 78.6 Sgold BAG BASILISK 84.2 80.2 58.2 78.2 WM</context>
</contexts>
<marker>Ng, Cardie, 2003</marker>
<rawString>Vincent Ng and Claire Cardie. 2003. Weakly supervised natural language learning without redundant views. In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics, pages 94–101, Edmonton, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marius Pas¸ca</author>
<author>Dekang Lin</author>
<author>Jeffrey Bigham</author>
<author>Andrei Lifchits</author>
<author>Alpa Jain</author>
</authors>
<title>Names and similarities on the web: Fact extraction in the fast lane.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st International Conference on Computational Linguisitics and the 44th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>809--816</pages>
<location>Sydney, Australia.</location>
<marker>Pas¸ca, Lin, Bigham, Lifchits, Jain, 2006</marker>
<rawString>Marius Pas¸ca, Dekang Lin, Jeffrey Bigham, Andrei Lifchits, and Alpa Jain. 2006. Names and similarities on the web: Fact extraction in the fast lane. In Proceedings of the 21st International Conference on Computational Linguisitics and the 44th Annual Meeting of the Association for Computational Linguistics, pages 809–816, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Patrick Pantel</author>
<author>Deepak Ravichandran</author>
</authors>
<title>Automatically labelling semantic classes.</title>
<date>2004</date>
<booktitle>In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>321--328</pages>
<location>Boston, MA, USA.</location>
<marker>Pantel, Ravichandran, 2004</marker>
<rawString>Patrick Pantel and Deepak Ravichandran. 2004. Automatically labelling semantic classes. In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics, pages 321–328, Boston, MA, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marco Pennacchiotti</author>
<author>Patrick Pantel</author>
</authors>
<title>A bootstrapping algorithm for automatically harvesting semantic relations.</title>
<date>2006</date>
<booktitle>In Proceedings ofInference in Computational Semantics (ICoS-06),</booktitle>
<pages>87--96</pages>
<location>Buxton, England.</location>
<contexts>
<context position="16620" citStr="Pennacchiotti and Pantel, 2006" startWordPosition="2567" endWordPosition="2570">spection. To improve the seeds, the frequency of the potential seeds in the corpora is often considered, on the assumption that highly frequent seeds are better (Thelen and Riloff, 2002). Unfortunately, these seeds may be too general and extract many nonspecific patterns. Another approach is to identify seeds using hyponym patterns like, * is a [NAMED ENTITY] (Meij and Katrenko, 2007). This leads us to our first investigation of seed variability and the methodology used to compare bootstrapping algorithms. Typically algorithms are compared using one set of hand-picked seeds for each category (Pennacchiotti and Pantel, 2006; McIntosh and Curran, 2008). This approach does not provide a fair comparison or any detailed analysis of the algorithms under investigation. As we shall see, it is possible that the seeds achieve the maximum precision for one algorithm and the minimum for another, and thus the single comparison is inappropriate. Even evaluating on multiple categories does not ensure the robustness of the evaluation. Secondly, it provides no insight into the sensitivity of an algorithm to different seeds. 4.1 Analysis with random gold seeds Our initial analysis investigated the sensitivity and variability of </context>
</contexts>
<marker>Pennacchiotti, Pantel, 2006</marker>
<rawString>Marco Pennacchiotti and Patrick Pantel. 2006. A bootstrapping algorithm for automatically harvesting semantic relations. In Proceedings ofInference in Computational Semantics (ICoS-06), pages 87–96, Buxton, England.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ellen Riloff</author>
<author>Rosie Jones</author>
</authors>
<title>Learning dictionaries for information extraction by multi-level bootstrapping.</title>
<date>1999</date>
<booktitle>In Proceedings of the 16th National Conference on Artificial Intelligence and the 11th Innovative Applications of Artificial Intelligence Conference,</booktitle>
<pages>474--479</pages>
<location>Orlando, FL, USA.</location>
<contexts>
<context position="1068" citStr="Riloff and Jones (1999)" startWordPosition="145" endWordPosition="148">very poorly with others, making comparisons unreliable. We exploit this wide variation with bagging, sampling from automatically extracted seeds to reduce semantic drift. However, semantic drift still occurs in later iterations. We propose an integrated distributional similarity filter to identify and censor potential semantic drifts, ensuring over 10% higher precision when extracting large semantic lexicons. 1 Introduction Iterative bootstrapping algorithms have been proposed to extract semantic lexicons for NLP tasks with limited linguistic resources. Bootstrapping was initially proposed by Riloff and Jones (1999), and has since been successfully applied to extracting general semantic lexicons (Riloff and Jones, 1999; Thelen and Riloff, 2002), biomedical entities (Yu and Agichtein, 2003), facts (Pas¸ca et al., 2006), and coreference data (Yang and Su, 2007). Bootstrapping approaches are attractive because they are domain and language independent, require minimal linguistic pre-processing and can be applied to raw text, and are efficient enough for tera-scale extraction (Pas¸ca et al., 2006). Bootstrapping is minimally supervised, as it is initialised with a small number of seed instances of the informa</context>
<context position="4210" citStr="Riloff and Jones (1999)" startWordPosition="625" endWordPosition="628">orms carefully hand-picked seeds by — 10% in later iterations. Our distributional similarity filter gives a similar performance improvement. This allows us to produce large lexicons accurately and efficiently for domain-specific language processing. 396 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 396–404, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background Hearst (1992) exploited patterns for information extraction, to acquire is-a relations using manually devised patterns like such Z as X and/or Y where X and Y are hyponyms of Z. Riloff and Jones (1999) extended this with an automated bootstrapping algorithm, Multi-level Bootstrapping (MLB), which iteratively extracts semantic lexicons from text. In MLB, bootstrapping alternates between two stages: pattern extraction and selection, and term extraction and selection. MB is seeded with a small set of user selected seed terms. These seeds are used to identify contextual patterns they appear in, which in turn identify new lexicon entries. This process is repeated with the new lexicon terms identifying new patterns. In each iteration, the topn candidates are selected, based on a metric scoring th</context>
<context position="11965" citStr="Riloff and Jones (1999)" startWordPosition="1810" endWordPosition="1813">heparin penicillin tetracyclin (κ1:0.86, κ2:0.99) FUNC Molecular functions and processes kinase ligase acetyltransferase helicase binding (κ1:0.87, κ2:0.99) MUTN Mutations: Gene and protein mutations, and mutants Leiden C677T C282Y 35delG null (κ1:0.89, κ2:1.0) PROT Proteins and genes p53 actin collagen albumin IL-6 (κ1:0.99, κ2:1.0) SIGN Signs and symptoms of diseases anemia hypertension hyperglycemia fever cough (κ1:0.96, κ2:0.99) TUMR Tumors: Types of tumors lymphoma sarcoma melanoma neuroblastoma osteosarcoma (κ1:0.89, κ2:0.95) Table 2: The MEDLINE semantic categories. t2, t4, t5). Unlike Riloff and Jones (1999) and Yangarber (2003), we do not use syntactic knowledge, as we aim to take a language independent approach. The 5-grams were extracted from the MEDLINE abstracts following McIntosh and Curran (2008). The abstracts were tokenised and split into sentences using bio-specific NLP tools (Grover et al., 2006). The 5-grams were filtered to remove patterns appearing with less than 7 terms4. The statistics of the resulting dataset are shown in Table 1. 3.2 Semantic Categories The semantic categories we extract from MEDLINE are shown in Table 2. These are a subset of the TREC Genomics 2007 entities (He</context>
</contexts>
<marker>Riloff, Jones, 1999</marker>
<rawString>Ellen Riloff and Rosie Jones. 1999. Learning dictionaries for information extraction by multi-level bootstrapping. In Proceedings of the 16th National Conference on Artificial Intelligence and the 11th Innovative Applications of Artificial Intelligence Conference, pages 474–479, Orlando, FL, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ellen Riloff</author>
<author>Janyce Wiebe</author>
<author>Theresa Wilson</author>
</authors>
<title>Learning subjective nouns using extraction pattern bootstrapping.</title>
<date>2003</date>
<booktitle>In Proceedings of the Seventh Conference on Natural Language Learning (CoNLL-2003),</booktitle>
<pages>25--32</pages>
<contexts>
<context position="9589" citStr="Riloff et al., 2003" startWordPosition="1453" endWordPosition="1456">s, and the distributional similarity score of each pair of terms, to construct features for lexical entailment. Pas¸ca et al. (2006) used distributional similarity to find similar terms for verifying the names in date-of-birth facts for their tera-scale bootstrapping system. 2.3 Selecting seeds For the majority of bootstrapping tasks, there is little or no guidance on how to select seeds which will generate the most accurate lexicons. Most previous works used seeds selected based on a user’s or domain expert’s intuition (Curran et al., 2007), which may then have to meet a frequency criterion (Riloff et al., 2003). Eisner and Karakos (2005) focus on this issue by considering an approach called strapping for word sense disambiguation. In strapping, semisupervised bootstrapping instances are used to train a meta-classifier, which given a bootstrapping instance can predict the usefulness (fertility) of its seeds. The most fertile seeds can then be used in place of hand-picked seeds. The design of a strapping algorithm is more complex than that of a supervised learner (Eisner and Karakos, 2005), and it is unclear how well strapping will generalise to other bootstrapping tasks. In our work, we build upon bo</context>
</contexts>
<marker>Riloff, Wiebe, Wilson, 2003</marker>
<rawString>Ellen Riloff, Janyce Wiebe, and Theresa Wilson. 2003. Learning subjective nouns using extraction pattern bootstrapping. In Proceedings of the Seventh Conference on Natural Language Learning (CoNLL-2003), pages 25–32.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Thelen</author>
<author>Ellen Riloff</author>
</authors>
<title>A bootstrapping method for learning semantic lexicons using extraction pattern contexts.</title>
<date>2002</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>214--221</pages>
<location>Philadelphia, USA.</location>
<contexts>
<context position="1199" citStr="Thelen and Riloff, 2002" startWordPosition="165" endWordPosition="168">xtracted seeds to reduce semantic drift. However, semantic drift still occurs in later iterations. We propose an integrated distributional similarity filter to identify and censor potential semantic drifts, ensuring over 10% higher precision when extracting large semantic lexicons. 1 Introduction Iterative bootstrapping algorithms have been proposed to extract semantic lexicons for NLP tasks with limited linguistic resources. Bootstrapping was initially proposed by Riloff and Jones (1999), and has since been successfully applied to extracting general semantic lexicons (Riloff and Jones, 1999; Thelen and Riloff, 2002), biomedical entities (Yu and Agichtein, 2003), facts (Pas¸ca et al., 2006), and coreference data (Yang and Su, 2007). Bootstrapping approaches are attractive because they are domain and language independent, require minimal linguistic pre-processing and can be applied to raw text, and are efficient enough for tera-scale extraction (Pas¸ca et al., 2006). Bootstrapping is minimally supervised, as it is initialised with a small number of seed instances of the information to extract. For semantic lexicons, these seeds are terms from the category of interest. The seeds identify contextual patterns</context>
<context position="5543" citStr="Thelen and Riloff, 2002" startWordPosition="821" endWordPosition="824">entually extracts polysemous terms and patterns which weakly constrain the semantic class, causing the lexicon’s meaning to shift, called semantic drift by Curran et al. (2007). For example, female firstnames may drift into flowers when Iris and Rose are extracted. Many variations on bootstrapping have been developed to reduce semantic drift.1 One approach is to extract multiple semantic categories simultaneously, where the individual bootstrapping instances compete with one another in an attempt to actively direct the categories away from each other. Multi-category algorithms outperform MLB (Thelen and Riloff, 2002), and we focus on these algorithms in our experiments. In BASILISK, MEB, and WMEB, each competing category iterates simultaneously between the term and pattern extraction and selection stages. These algorithms differ in how terms and patterns selected by multiple categories are handled, and their scoring metrics. In BASILISK (Thelen and Riloff, 2002), candidate terms are ranked highly if they have strong evidence for a category and little or no evidence for other categories. This typically favours less frequent terms, as they will match far fewer patterns and are thus more likely to belong to </context>
<context position="16176" citStr="Thelen and Riloff, 2002" startWordPosition="2500" endWordPosition="2503">s initialised with 5 seed terms, and the number of patterns, k, is set to 5. In each iteration, 5 lexicon terms are extracted by each category. Each algorithm is run for 200 iterations. 4 Seed diversity The first step in bootstrapping is to select a set of seeds by hand. These hand-picked seeds are typically chosen by a domain expert who selects a reasonably unambiguous representative sample of the category with high coverage by introspection. To improve the seeds, the frequency of the potential seeds in the corpora is often considered, on the assumption that highly frequent seeds are better (Thelen and Riloff, 2002). Unfortunately, these seeds may be too general and extract many nonspecific patterns. Another approach is to identify seeds using hyponym patterns like, * is a [NAMED ENTITY] (Meij and Katrenko, 2007). This leads us to our first investigation of seed variability and the methodology used to compare bootstrapping algorithms. Typically algorithms are compared using one set of hand-picked seeds for each category (Pennacchiotti and Pantel, 2006; McIntosh and Curran, 2008). This approach does not provide a fair comparison or any detailed analysis of the algorithms under investigation. As we shall s</context>
</contexts>
<marker>Thelen, Riloff, 2002</marker>
<rawString>Michael Thelen and Ellen Riloff. 2002. A bootstrapping method for learning semantic lexicons using extraction pattern contexts. In Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 214–221, Philadelphia, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaofeng Yang</author>
<author>Jian Su</author>
</authors>
<title>Coreference resolution using semantic relatedness information from automatically discovered patterns.</title>
<date>2007</date>
<booktitle>In Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>528--535</pages>
<location>Prague, Czech Republic.</location>
<contexts>
<context position="1316" citStr="Yang and Su, 2007" startWordPosition="184" endWordPosition="187"> distributional similarity filter to identify and censor potential semantic drifts, ensuring over 10% higher precision when extracting large semantic lexicons. 1 Introduction Iterative bootstrapping algorithms have been proposed to extract semantic lexicons for NLP tasks with limited linguistic resources. Bootstrapping was initially proposed by Riloff and Jones (1999), and has since been successfully applied to extracting general semantic lexicons (Riloff and Jones, 1999; Thelen and Riloff, 2002), biomedical entities (Yu and Agichtein, 2003), facts (Pas¸ca et al., 2006), and coreference data (Yang and Su, 2007). Bootstrapping approaches are attractive because they are domain and language independent, require minimal linguistic pre-processing and can be applied to raw text, and are efficient enough for tera-scale extraction (Pas¸ca et al., 2006). Bootstrapping is minimally supervised, as it is initialised with a small number of seed instances of the information to extract. For semantic lexicons, these seeds are terms from the category of interest. The seeds identify contextual patterns that express a particular semantic category, which in turn recognise new terms (Riloff and Jones, 1999). Unfortunate</context>
</contexts>
<marker>Yang, Su, 2007</marker>
<rawString>Xiaofeng Yang and Jian Su. 2007. Coreference resolution using semantic relatedness information from automatically discovered patterns. In Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics, pages 528–535, Prague, Czech Republic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roman Yangarber</author>
</authors>
<title>Counter-training in discovery of semantic patterns.</title>
<date>2003</date>
<booktitle>In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>343--350</pages>
<location>Sapporo, Japan.</location>
<contexts>
<context position="11986" citStr="Yangarber (2003)" startWordPosition="1815" endWordPosition="1816">in (κ1:0.86, κ2:0.99) FUNC Molecular functions and processes kinase ligase acetyltransferase helicase binding (κ1:0.87, κ2:0.99) MUTN Mutations: Gene and protein mutations, and mutants Leiden C677T C282Y 35delG null (κ1:0.89, κ2:1.0) PROT Proteins and genes p53 actin collagen albumin IL-6 (κ1:0.99, κ2:1.0) SIGN Signs and symptoms of diseases anemia hypertension hyperglycemia fever cough (κ1:0.96, κ2:0.99) TUMR Tumors: Types of tumors lymphoma sarcoma melanoma neuroblastoma osteosarcoma (κ1:0.89, κ2:0.95) Table 2: The MEDLINE semantic categories. t2, t4, t5). Unlike Riloff and Jones (1999) and Yangarber (2003), we do not use syntactic knowledge, as we aim to take a language independent approach. The 5-grams were extracted from the MEDLINE abstracts following McIntosh and Curran (2008). The abstracts were tokenised and split into sentences using bio-specific NLP tools (Grover et al., 2006). The 5-grams were filtered to remove patterns appearing with less than 7 terms4. The statistics of the resulting dataset are shown in Table 1. 3.2 Semantic Categories The semantic categories we extract from MEDLINE are shown in Table 2. These are a subset of the TREC Genomics 2007 entities (Hersh et al., 2007). Ca</context>
<context position="13559" citStr="Yangarber, 2003" startWordPosition="2075" endWordPosition="2076">he largest number of patterns and terms loadable by BASILISK 5Note that polysemous terms in these categories may be correctly extracted by another category. For example, all Pathways also belong to FUNC. 398 The five hand-picked seeds used for each category are shown in italics in Table 2. These were carefully chosen based on the evaluators’ intuition, and are as unambiguous as possible with respect to the other categories. We also utilised terms in stop categories which are known to cause semantic drift in specific classes. These extra categories bound the lexical space and reduce ambiguity (Yangarber, 2003; Curran et al., 2007). We used four stop categories introduced in McIntosh and Curran (2008): AMINO ACID, ANIMAL, BODY and ORGANISM. 3.3 Lexicon evaluation The evaluation involves manually inspecting each extracted term and judging whether it was a member of the semantic class. This manual evaluation is extremely time consuming and is necessary due to the limited coverage of biomedical resources. To make later evaluations more efficient, all evaluators’ decisions for each category are cached. Unfamiliar terms were checked using online resources including MEDLINE, Medical Subject Headings (MeS</context>
</contexts>
<marker>Yangarber, 2003</marker>
<rawString>Roman Yangarber. 2003. Counter-training in discovery of semantic patterns. In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics, pages 343–350, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hong Yu</author>
<author>Eugene Agichtein</author>
</authors>
<title>Extracting synonymous gene and protein terms from biological literature.</title>
<date>2003</date>
<journal>Bioinformatics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="1245" citStr="Yu and Agichtein, 2003" startWordPosition="172" endWordPosition="175">r, semantic drift still occurs in later iterations. We propose an integrated distributional similarity filter to identify and censor potential semantic drifts, ensuring over 10% higher precision when extracting large semantic lexicons. 1 Introduction Iterative bootstrapping algorithms have been proposed to extract semantic lexicons for NLP tasks with limited linguistic resources. Bootstrapping was initially proposed by Riloff and Jones (1999), and has since been successfully applied to extracting general semantic lexicons (Riloff and Jones, 1999; Thelen and Riloff, 2002), biomedical entities (Yu and Agichtein, 2003), facts (Pas¸ca et al., 2006), and coreference data (Yang and Su, 2007). Bootstrapping approaches are attractive because they are domain and language independent, require minimal linguistic pre-processing and can be applied to raw text, and are efficient enough for tera-scale extraction (Pas¸ca et al., 2006). Bootstrapping is minimally supervised, as it is initialised with a small number of seed instances of the information to extract. For semantic lexicons, these seeds are terms from the category of interest. The seeds identify contextual patterns that express a particular semantic category, </context>
</contexts>
<marker>Yu, Agichtein, 2003</marker>
<rawString>Hong Yu and Eugene Agichtein. 2003. Extracting synonymous gene and protein terms from biological literature. Bioinformatics, 19(1):i340–i349.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>