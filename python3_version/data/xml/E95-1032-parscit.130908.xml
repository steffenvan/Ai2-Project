<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.959056">
Ellipsis and Quantification: A Substitutional Approach
</title>
<author confidence="0.996656">
Richard Crouch
</author>
<affiliation confidence="0.987827">
SRI International, Cambridge Computer Science Research Centre
</affiliation>
<address confidence="0.9954385">
23 Millers Yard, Mill Lane,
Cambridge, CB2 1RQ, UK
</address>
<email confidence="0.829644">
rctcam.sri.com
</email>
<sectionHeader confidence="0.99765" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999964818181818">
The paper describes a substitutional ap-
proach to ellipsis resolution giving compa-
rable results to (Dalrymple et al., 1991),
but without the need for order-sensitive in-
terleaving of quantifier scoping and ellip-
sis resolution. It is argued that the order-
independence results from viewing seman-
tic interpretation as building a description
of a semantic composition, instead of the
more common view of interpretation as ac-
tually performing the composition.
</bodyText>
<sectionHeader confidence="0.999516" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999790736842105">
Dalrymple, Shieber and Pereira (1991) (hence-
forth, DSP) give an equational treatment of ellip-
sis via higher-order unification which, amongst other
things, provides an insightful analysis of the interac-
tions between ellipsis and quantification. But it suf-
fers a number of drawbacks, especially when viewed
from a computational perspective.
First, the precise order in which quantifiers are
scoped and ellipses resolved determines the final in-
terpretation of elliptical sentences. It is hard to see
how DSP&apos;s analysis could be implemented within a
system employing a pipelined architecture that, say,
separates quantifier scoping out from other reference
resolution operationsâ€”this would seem to preclude
the generation of some legitimate readings. Yet
many systems, for good practical reasons, employ
this kind of architecture.
Second, without additional constraints, DSP
slightly overgenerate readings for sentences like
</bodyText>
<listItem confidence="0.965262">
(1) John revised his paper before the teacher did,
and so did Bill.
</listItem>
<bodyText confidence="0.999681098039216">
Kehler (1993a) has convincingly argued that this
problem arises because DSP do not distinguish be-
tween merely co-referential and co-indexed (in his
terminology, role-linked) expressions.
Third, though perhaps less importantly, higher-
order unification going beyond second-order match-
ing is required for resolving ellipses involving quan-
tification. This increases the computational com-
plexity of the ellipsis resolution task.
This paper presents a treatment of ellipsis which
avoids these difficulties, while having essentially the
same coverage as DSP. The treatment is easily im-
plementable, and forms the basis of the ellipsis res-
olution component currently used within the Core
Language Engine (Alshawi et al., 1992).
Ellipsis interpretations are represented as simple
sets of substitutions on semantic representations of
the antecedent. The substitutions can be built up
in an order-independent way (i.e. before, after or
during scoping), and without recourse to higher-
order unification. The treatment is similar to the
discourse copying analysis of (Kehler, 1993a), and
to the substitutional treatment suggested by Kamp
within Discourse Representation Theory, described
in (Gawron and Peters, 1990). However, we extend
the notion of strict and sloppy identity to deal with
more than just pronouns. In doing so, we readily
deal with phenomena like scope parallelism.
While the treatment of ellipsis is hopefully of
some value in its own right, a more general con-
clusion can be drawn concerning the requirements
for a computational theory of semantics. Briefly,
the standard view within formal semantics, which
DSP inherit, identifies semantic interpretation with
composition: interpretation is the process of taking
the meanings of various constituents and composing
them together to form the meaning of the whole.
This makes semantic interpretation a highly order-
dependent affair; e.g. the order in which a functor
is composed with its arguments can substantially af-
fect the resulting meaning. This is reflected in the
order-sensitive interleaving of scope and ellipsis res-
olution in DSP&apos;s account. In addition, composition
is only sensitive to the meanings of its components.
Typically there is a many-one mapping from com-
positions onto meanings. So, for example, whether
two terms with identical meanings are merely co-
referential or are co-indexed is the kind of informa-
tion that may get lost: the difference amounts to
two ways of composing the same meaning.
The alternative proposed here is to view seman-
</bodyText>
<page confidence="0.997121">
229
</page>
<bodyText confidence="0.99996244">
tic interpretation as a process of building a (possibly
partial) description of the intended semantic compo-
sition; i.e. (partial) descriptions of what the mean-
ings of various constituents are, and how they should
be composed together.&apos; While the order in which
composition operations are performed can radically
affect the outcome, the order in which descriptions
are built up is unimportant. In the case of ellip-
sis, this extra layer of descriptive indirection per-
mits an equational treatment of ellipsis that (i) is
order-independent, (ii) can take account composi-
tional distinctions that do not result in meaning dif-
ferences, and also (iii) does not require the use of
higher-order unification for dealing with quantifiers.
The paper is organised as follows. Section 2 de-
scribes the substitutional treatment of ellipsis by
way of a few examples presented in a simplified ver-
sion of Quasi Logical Form (QLF) (Alshawi and
Crouch, 1992; Alshawi et al., 1992). Section 3
gives the semantics for the notation, and argues that
QLF is best understood as providing descriptions
of semantic compositions. Section 4 raises some
open questions concerning the determination of par-
allelism between ellipsis and antecedent, and other
issues. Section 5 concludes.
</bodyText>
<sectionHeader confidence="0.982087" genericHeader="introduction">
2 Ellipsis Substitutions
</sectionHeader>
<bodyText confidence="0.9998226">
This section illustrates the substitutional treatment
of ellipsis through a small number of examples. For
presentation purposes we only sketch the intended
semantics of the simplified QLF notation used, and
a more detailed discussion is deferred until section 3.
</bodyText>
<subsectionHeader confidence="0.990917">
2.1 Simple VP Ellipsis
</subsectionHeader>
<bodyText confidence="0.9979755">
A simple, uninteresting example to fix some nota-
tion:
</bodyText>
<listItem confidence="0.902713">
(2) John slept. So did Mary
</listItem>
<bodyText confidence="0.5762475">
We represent the first sentence, ignoring tense, as a
(resolved) QLF
</bodyText>
<listItem confidence="0.8929855">
(3) [+j] : sleep( term(1-j, 3, Ay.name(y, &apos;John&apos;),
Ay.y = j_smith))
</listItem>
<bodyText confidence="0.997539227272727">
The noun phrase John gives rise to an existentially
quantified term, uniquely identified by the index
+j. The term expression has four arguments: an
index, a determiner/quantifier, an explicit restric-
tion, and an additional contextually derived restric-
tion. In this case, the quantifier ranges over objects
that are named &apos;John&apos; and are further restricted to
be identical to some (contextually salient) individ-
ual, denoted by j.smith. Prior to reference resolu-
tion, the contextual restriction on the term would
be an uninstantiated meta-variable; resolution con-
sists of instantiating meta-variables to contextually
&apos;This is similar to Nerbonne&apos;s (1991) constraint-
based semantics, except that he builds descriptions of
logical forms, not semantic compositions.
appropriate values. The scope of the term is in-
dicated by the scope node [-FA : prefixing the for-
mula sleep( term(-Ej, ...)). Again, prior to reso-
lution this scope node would be an uninstantiated
meta-variable.
A generalized quantifier representation equivalent
to the above is
</bodyText>
<listItem confidence="0.6908495">
(4) 3(Ay.(name(y, &apos;John&apos;) Ay = ismith),
Az.sleep(x))
</listItem>
<bodyText confidence="0.999808363636364">
The index in the scope node means that to semanti-
cally evaluate the QLF, you get hold of the quanti-
fier, restriction and contextual restriction of the cor-
responding term. This forms a (generalized) quanti-
fier expression, whose body is obtained by discharg-
ing all occurrences of the term and it index to a
variable, and abstracting over the variable. Terms
and indices not dischargeable in this manner lead to
uninterpretable QLFs (Alshawi and Crouch, 1992).
We represent the elliptical sentence, again abbre-
viated, as a (partially resolved) QLF:
</bodyText>
<listItem confidence="0.5424765">
(5) ?P(terat(+m, 3, )ty.name(y, &apos;Mary&apos;),
Ay.y = m_jones))
</listItem>
<bodyText confidence="0.9977272">
?P is an unresolved meta-variable. To resolve the
ellipsis, it needs to be instantiated to some contex-
tually salient predicate.
Along similar lines to DSP, we can set up an equa-
tion to determine possible values for ?P2:
</bodyText>
<listItem confidence="0.470353">
(6) ?P(terra(-1-j, ...)) = [-I-ksleep(term(-1-j, ...))
</listItem>
<bodyText confidence="0.997620777777778">
That is, we are looking for a predicate that when
applied to the subject term of the ellipsis antecedent
returns the antecedent. The interpretation of the
ellipsis is then given by applying this predicate to
the subject of the ellipsis.
The equation (6) is solved by setting ?P to some-
thing that takes a term T as an argument and sub-
stitutes T for term(+j, ...) and the index of T for +j
throughout the ellipsis antecedent (the RHS of (6)):
</bodyText>
<equation confidence="0.480668">
(7) ?P =TA ([+j]:sleep(term(+j, ...))
fterm(+j, +j/idx_of(T)})
</equation>
<bodyText confidence="0.987810571428571">
Here TA(...) is a form of abstraction; for now
it will do no harm view it as a form of A-
abstraction, though this is not strictly accurate.
The substitutions are represented using the notation
{old/new,...).
Applying this value for ?P in the ellipsis (5), we
get
</bodyText>
<listItem confidence="0.7179025">
(8) FF.ii:sleeP(terin(+i, â€¢ â€¢ â€¢))
fternt(-1-j, ...)/tenn(-1-m, ...),
</listItem>
<bodyText confidence="0.997235857142857">
Ellipsis resolution thus amounts to selecting an an-
tecedent and determining a set of substitutions to
apply to it. For reasons that will be explained
shortly, it is important that resolution does not ac-
tually carry out the application of the substitutions.
&apos;Terms shown abbreviated, i.e. tern(-H,...) instead
of tern(-11, 3, Ay.name(y, &apos;John&apos;), Ay.y = j_anith).
</bodyText>
<page confidence="0.989253">
230
</page>
<bodyText confidence="0.9989225">
However, were we to do this in this particular case,
where the antecedent (3) is fully resolved, we would
successfiffly capture the intended interpretation of
the ellipsis, namely:
</bodyText>
<equation confidence="0.911079">
(9) [+m] : sleep( term(+m, 3, Ay.name(y, &apos;Mary&apos;),
Ay.y = m_jones))
</equation>
<bodyText confidence="0.9999875">
Note that the substitutions are not applied in the
conventional order; viz, first replace +j by +m
throughout (3) and then replace term(+j, ...) by
tax-11(+m, ...). The first substitution would ensure
that there was no term(-1-j, ...) for the second sub-
stitution to replace. The order in which substitu-
tions apply instead depends on the order in which
the expressions occur when making a top down pass
through (3), such as one would do when applying
semantic evaluation rules to the formula.
Note also that the term index substitution applies
to the scope node, so that [Al : is replaced by [+m]
This ensures that the term for Mary in the ellipsis
gets a parallel scope to the term for John in the an-
tecedent. Scope parallelism may not be significant
where proper names are concerned, but is impor-
tant when it comes to more obviously quantifica-
tional terms (section 2.3).
</bodyText>
<subsectionHeader confidence="0.997417">
2.2 Evaluative Substitutions
</subsectionHeader>
<bodyText confidence="0.999929617021277">
The meaning of an ellipsis is composed in essentially
the same way, and from the same components, as the
meaning of its antecedent. However, some changes
need to be made in order to accommodate new ma-
terial introduced by the ellipsis. The substitutions
specify what these changes are. In the example dis-
cussed above, the meaning of the ellipsis is built
up in the same way as for the antecedent, except
that whenever you encounter a term corresponding
to &apos;John&apos; or something dependent/co-indexed with
it, you it is treated as though it were the term for
&apos;Mary&apos; or dependent/co-indexed with it.
This means that the substitutions act as directives
controlling the way in which QLF expressions within
their scope are evaluated. They are not syntactic
operations on QLF expressions â€” they are part of
the QLF object language.
The reason that substitutions are not &apos;applied&apos; im-
mediately upon ellipsis resolution is as follows. At
the time of deciding on the ellipsis substitutions,
the precise composition of the antecedent may not
yet have been determined. (For instance the scopes
of quantifiers or the contextual restrictions on pro-
nouns in the antecedent may not have been resolved;
this will correspond to the presence of uninstantiated
meta-variables in the antecedent QLF.) The ellipsis
should follow, modulo the substitutions, the same
composition as the antecedent, whatever that com-
position is eventually determined to be. It makes
no sense to apply the substitutions before the an-
tecedent is fully resolved, though it does make sense
to decide what the appropriate substitutions should
be.
In practical terms what this amounts to is ex-
ploiting re-entrancy in QLFs. The elliptical QLF
will contain a predicate formed from the antecedent
QLF plus substitutions. Any uninstantiated meta-
variables in the antecedent are thus re-entrant in the
ellipsis. Consequently, any further resolutions to the
antecedent are automatically imposed on the ellipsis.
This would not be the case if the substitutions were
treated as syntactic operations on QLF to be applied
immediately: some re-entrant meta-variables would
be substituted out of the ellipsis, and those remain-
ing would not be subject to the substitutions (which
would have already been applied) when they were
eventually instantiated.
</bodyText>
<subsectionHeader confidence="0.999632">
2.3 Scope Parallelism
</subsectionHeader>
<bodyText confidence="0.9947405">
It was noted above that substitutions on term in-
dices in scope nodes ensures scope parallelism. This
is now illustrated with a more interesting example
(adapted from Hirshbiihler as cited by DSP).
</bodyText>
<listItem confidence="0.933969">
(10) A Canadian flag hung in front of every house,
and an American flag did too.
</listItem>
<bodyText confidence="0.9994395">
The antecedent has two possible scopings: a single
Canadian flag in front of all the houses, or each house
with its own flag. Whichever scoping is given to the
antecedent, a parallel scoping should be given to the
ellipsis.
A simplified QLF for (10) is
</bodyText>
<listItem confidence="0.940406">
(11) ?Sl: and(?S2: hang(term(+c, 3, ...),
?P(term(+a,3,...)))
</listItem>
<bodyText confidence="0.9986625">
where the indices +c, +a and +h are mnemonic for
Canadian flag, American flag and house. Taking the
first conjunct as the antecedent, we can set up an
equation
</bodyText>
<listItem confidence="0.90728825">
(12) ?S2:hang(term(+c ...), term(+h...))
= ?P(term(+c...))
the solution to which is3
(13) ?P = V(?S2:hang(term(+c...),term(+h...))
</listItem>
<subsectionHeader confidence="0.295974">
I ft erm(+c +c/iclx_of(T)}
</subsectionHeader>
<bodyText confidence="0.949894">
This make the elliptical conjunct equivalent to
</bodyText>
<listItem confidence="0.8673415">
(14) ?S2:hang(tens(+c ...), term(+h ...))
fterm(+c ...)/term(+a, ...), +c/+a}
</listItem>
<bodyText confidence="0.9976656">
The scope node, ?S2 can be resolved to [+h, +c]
(&apos;every house&apos; takes wide scope), or [+c, +hi ea
Canadian flag&apos; takes wide scope). Whichever resolu-
tion is made, the substitution of +a for +c ensures
parallel scoping in the ellipsis for &apos;an American flag&apos;.
Cashing out the substitutions for the first case, we
have
3In the next section we place some extra constraints
on possible solutions, but these aren&apos;t strictly relevant
here.
</bodyText>
<page confidence="0.990128">
231
</page>
<bodyText confidence="0.886981714285715">
(15) 0:and([+h, 1-4:hang(tera(+c, 3, ...),
term(+h, V, . .)),
+a.]:hang(t erm(+a, 3, .. .),
t erm(4-h, V, . .)))
There is another scoping option which instantiates
?SI to [-I-11], i.e. gives &apos;every house&apos; wide scope over
both antecedent and ellipsis. In this case the two
terms, term(l-h ...) in ellipsis and antecedent are
both discharged (i.e. bound) at the scope node ?SI.,
rather than being separately bound at the two copies
of ?S2
(16) [+11]:anda+c]:hang(term(+c, 3,. .),
term(-Fh,V,...)),
[+a]lang(term(+a,3, ...),
terg+h,V, ...)))
(This has equivalent truth-conditions to (15)).4
Besides illustrating scope parallelism, this is an
example where DSP have to resort to higher-order
unification beyond second-order matching. But no
such increase in complexity is required under the
present treatment.
</bodyText>
<subsectionHeader confidence="0.978858">
2.4 Strict and Sloppy Identity
</subsectionHeader>
<bodyText confidence="0.9989115">
The notion of strict and sloppy identity is usu-
ally confined to pronominal items occurring in an-
tecedents and (implicitly) in ellipses.5 A standard
example is
</bodyText>
<listItem confidence="0.802187">
(17) John loves his mother, and Simon does too.
</listItem>
<bodyText confidence="0.989839948275862">
On the strict reading, Simon and John both love
John&apos;s mother. The implicit pronoun has been
strictly identified with the pronoun in the antecedent
to pick out the same referent, John. On the sloppy
reading Simon loves Simon&apos;s mother. The implicit
pronoun has been sloppily identified with its an-
tecedent to refer to something matching a similar
description, i.e. the subject or agent of the loving
relation, Simon.
The sentence
(18) John read a book he owned, and so did Simon.
has three readings: John and Simon read the same
book; John and Simon both read a book belonging
to John, though not necessarily the same one; John
reads one of John&apos;s books and Simon reads one of
Simon&apos;s books.
Intuitively, the first reading arises from strictly
identifying the elliptical book with the antecedent
book. The second arises from strictly identifying
the pronouns, while sloppily identifying the books.
&apos;If +c is given wide scope over antecedent and el-
lipsis, the QLF is rendered uninterpretable, which is as
required. As detailed in section 3, scoping +c discharges
the term and its index by substituting a variable for it.
But the ellipsis substitution overrides this, substituting
a new term and index, +a. But there is no way of dis-
charging them.
&apos;Also to pronouns of laziness.
The third from sloppily identifying both the books
and the pronouns. In the literature, the first reading
would not be viewed as a case of strict identity. But
this view emerges naturally from our treatment of
substitutions, and is arguably a more natural char-
acterisation of the phenomena.
We need to distinguish between parallel and non-
parallel terms in ellipsis antecedents. Parallel terms,
like John in the example above, are those that cor-
respond terms appearing explicitly in the ellipsis.
Non-parallel terms are those that do not have an
explicit parallel in the ellipsis. (Determining which
terms are parallel/non-parallel is touched on in sec-
tion 4.)
For parallel terms, we have no choice about the
ellipsis substitution. We replace both the term and
its index by the corresponding term and index from
the ellipsis. But for all non-parallel terms we have a
choice between a strict or a sloppy substitution.6
A sloppy substitution involves substituting a new
term index for the old one. This has the effect of
reindexing the version of the term occurring in the
ellipsis, so that it refers to the same kind of thing as
the antecedent term but is not otherwise linked to
it.
A strict substitution substitutes the term by its
index. In this way, the version of the term occurring
in the ellipsis is directly linked to antecedent term.
To illustrate, an abbreviated QLF for the an-
tecedent John read a book he owned is
</bodyText>
<figure confidence="0.711777571428571">
(19) 95:
read(
term(+j...)
term(-1-b, 3,
)y.book(y)A
own(term(+h rft(-I-j)), y),
â€¢ â€¢ .))
</figure>
<bodyText confidence="0.978501368421053">
Here, we have left the scope node as an uninstan-
tiated meta-variable ?S. The pronominal term +h
occurs in the restriction of the book term +b. The
pronoun has been resolved to have a contextual re-
striction, rft(A-j), that co-indexes it with the subject
term. Here, `rft(X is a function that when applied
to an entity-denoting expression (e.g. a variable or
constant) returns the property of being identical to
that entity; when it applies to a term index, it re-
turns an E-type property contextually linked to the
term.
The ellipsis can be represented as
(20) ?P(term(Â±s, 3, Ay.name(y, &apos;Simon% ...))
which is conjoined with the antecedent.
The three readings of (18) are illustrated below,
listing substitutions to be applied to the antecedent
&apos;This is true of the non-parallel tern(-1-h,...) in ex-
ample (11); but this added complication does not affect
the basic account of scope parallelism given earlier.
</bodyText>
<page confidence="0.971754">
232
</page>
<bodyText confidence="0.8989262">
and cashing out the results of their application,
though omitting scope.
(21) Strict book
{+j/+s, term(+j, ...)/term(+s, ...),
term(+b, ...)/+b, ...}
read( term( +s,...), +b)
(a) Since all reference to the term +h is removed by
the strict substitution on the term in which it occurs,
it makes no difference whether the pronoun is given
a strict or a sloppy substitution. (b) Strict substi-
tution for the book leaves behind an occurrence of
the index +b in the ellipsis. For the QLF to be
interpretable, it is necessary to give the antecedent
book term wide scope over the ellipsis in order to
discharge the index.
</bodyText>
<figure confidence="0.947613444444445">
(22) Sloppy book, strict pronoun
{-3-j/+s, term(i-j, ...)/term(+s, ...),
+b/+b1, term(+h, ...)/+14
read(
term(+s ...)
term(+bl, 3,
)y.book(y)A
own(+h, y)
â€¢ â€¢ â€¢))
</figure>
<bodyText confidence="0.999432">
As above, the antecedent pronoun is constrained to
be given wide scope over the ellipsis, on pain of
the index +h being undischargeable. (Pronouns,
like proper names, are treated as contextually re-
stricted quantifiers, where the contextual restriction
may limit the domain of quantification to one indi-
vidual.)
</bodyText>
<subsubsectionHeader confidence="0.424399">
(23) Sloppy book, sloppy pronoun
</subsubsectionHeader>
<bodyText confidence="0.878089285714286">
{-0/+s, term(+j, ...)/term(+s, ...),
+b/+bl, +h/+hll
read(
t erm(+s ...)
term(+b1, 3,
Ay .book(y)A
own(t erm(+111 rft(+s)), y),
</bodyText>
<listItem confidence="0.770593">
â€¢ â€¢ â€¢))
</listItem>
<bodyText confidence="0.999908833333333">
The index substitution from the primary term re-
indexes the contextual restriction of the pronoun. It
becomes coindexed with +s instead of +j.
DSP&apos;s account of the first reading of (18) is sig-
nificantly different from their account of the last
two readings. The first reading involves scoping the
book quantifier before ellipsis resolution. The other
two readings only scope the quantifier after resolu-
tion, and differ in giving the pronoun a strict or
a sloppy interpretation. In our account the choice
of strict or sloppy substitutions for secondary terms
can constrain permissible quantifier scopings7 But
the making of these choices does not have to be in-
terleaved in a precise order with the scoping of quan-
tifiers.
Moreover, the difference between strict and sloppy
readings does not depend on somehow being able to
distinguish between primary and secondary occur-
rences of terms with the same meaning. In DSP&apos;s
representation of the antecedent of (18), both NPs
&apos;John&apos; and &apos;he&apos; give rise to two occurrences of the
same term (a constant, 5). The QLF representation
is able to distinguish between the primary and the
secondary, pronominal, reference to John.
</bodyText>
<subsectionHeader confidence="0.982104">
2.5 Other Phenomena
</subsectionHeader>
<bodyText confidence="0.999452931818182">
Space precludes illustrating the substitutional ap-
proach through further examples, though more are
discussed in (Alshawi et al., 1992; Cooper et al.,
1994b). The coverage is basically the same as DSP&apos;s:
Antecedent Contained Deletion: A sloppy
substitution for every person that Simon did in the
sentence John greeted every person that Simon did
results in re-introducing the ellipsis in its own reso-
lution. This leads to an uninterpretable cyclic QLF
in much the same way that DSP obtain a violation
of the occurs check on sound unification.
Cascaded Ellipsis: The number of readings ob-
tained for John revised his paper before the teacher
did, and then Simon did was used as a benchmark
by DSP. The approach here gets the four readings
identified by them as most plausible. With slight
modification, it gets a fifth reading of marginal plau-
sibility. The modification is to allow (strict) substi-
tutions on terms not explicitly appearing in the el-
lipsis antecedent â€” i.e. the implicit his paper in the
second ellipsis when resolving the third ellipsis.
We do not get a sixth, implausible reading, pro-
vided that in the first clause his is resolved as being
coindexed with the term for John; i.e. that John
and his do not both independently refer to the same
individual. Kehler blocks this reading in a similar
manner. DSP block the reading by a more artificial
restriction on the depth of embedding of expressions
in logical forms; they lack the means for distinguish-
ing between coindexed and merely co-referential ex-
pressions.
Multiple VP Ellipsis Multiple VP ellipsis (Gar-
dent, 1993) poses problems at the level of determin-
ing which VP is the antecedent of which ellipsis. But
at the level of incorporating elliptical material once
&apos;The converse also holds. Giving an antecedent term
wide scope over the ellipsis renders the choice of a strict
or a sloppy substitution for it in the ellipsis immate-
rial. During semantic evaluation of the QLF, discharg-
ing the antecedent through scoping will substitute out
all occurrence of the term and its index before ellipsis
substitutions are applied. Note though that this order
dependence applies at the level of evaluating QLFs, not
constructing and resolving them.
</bodyText>
<page confidence="0.99636">
233
</page>
<bodyText confidence="0.9986097">
the antecedents have been determined, it appears to
offer no special problems.
Other Forms of Ellipsis: Other forms of el-
lipsis, besides VP-ellipsis can be handled substitu-
tionally. For example, NP-ellipsis (e.g. Who slept?
John.) is straightforwardly accommodated. PP-
ellipsis (e.g. Who left on Tuesday? And on Wednes-
day?) requires substitutions for form constructions
in QLF (not described here) representing preposi-
tional phrases.
</bodyText>
<subsectionHeader confidence="0.993299">
2.6 Comparisons
</subsectionHeader>
<bodyText confidence="0.999528703703704">
The use of terms and indices has parallels to propos-
als due to Kehler and Kamp (Kehler, 1993a; Gawron
and Peters, 1990). Kehler adopts an analysis where
(referential) arguments to verbs are represented as
related to a Davidsonian event via thematic role
functions, e.g. agent(e)=john). Pronouns typically
refer to these functions, e.g. he=agent(e). In VP
ellipsis, strict identity corresponds to copying the
entire role assignment from the antecedent. Sloppy
identity corresponds to copying the function, but ap-
plying it to the event of the ellided clause.
For Kamp, strict identity involves copying the dis-
course referent of the antecedent and identifying it
with that of the ellided pronoun. Sloppy identity
copies the conditions on the antecedent discourse ref-
erent, and applies them to the discourse referent of
the ellided pronoun.
Neither Kamp nor Kehler extend their copy-
ing/substitution mechanism to anything besides
pronouns, as we have done. In Kehler&apos;s case, it is
hard to see how his role assignment functions can
be extended to deal with non-referential terms in the
desired manner. DRT&apos;s use of discourse referents to
indicate scope suggests that Kamp&apos;s treatment may
be more readily extended in this manner; lists of dis-
course referents at the top of DRS boxes are highly
reminiscent of the index lists in scope nodes.
</bodyText>
<sectionHeader confidence="0.979413" genericHeader="method">
3 Semantic Evaluation
</sectionHeader>
<bodyText confidence="0.999880588235294">
Figure 1 defines a valuation relation for the QLF
fragment used above, derived from (Alshawi and
Crouch, 1992; Cooper et al., 1994a). If a QLF ex-
pression contains uninstantiated meta-variables, the
valuation relation can associate more than one value
with the expression. In the case of formulas, they
may be given both the values true and false, corre-
sponding to the formula being true under one possi-
ble resolution and false under another. A subsump-
tion ordering over QLFS, D, is employed in the eval-
uation rules, in effect to propose possible instantia-
tions for meta-variables (the rule fragment only al-
lows for scope meta-variables, but (Cooper et al.,
1994a) describes the more general case where other
kinds of meta-variable are permitted). A partially
instantiated QLF therefore effectively specifies a set
of possible evaluations (or semantic compositions).
</bodyText>
<subsectionHeader confidence="0.61066">
Definition of V(QLF, M, g, Subs, v)
</subsectionHeader>
<bodyText confidence="0.759085">
where QLF is a QLF expression
M is a model, (0, F)
g is an assignment of values to variables
Subs is a set of substitutions
er is a value assigned to the QLF expression
</bodyText>
<listItem confidence="0.851702">
1. Constant symbols, c: V(c, M, g, Subs, v) if F(c) = v
(where F is the interpretation function for non-
logical constants provided by M)
2. Variables, x: V(x, M, g, Subs, v) if g(x) = v
3. Reinterpretation:
</listItem>
<reference confidence="0.7693083">
V(QLF1, M, g, Subs, v) if V( QLF2, M, g, Subs, v)
where QLF2/ QLF2 E Subs
4. Merging reinterpretations:
V(QLF1Subs1, M, g, Subs2, v) if
V(QLF, M, g, Subsi Subs2,
5. Abstraction:
V(Ax , M, g, Subs, h) if
0&apos; and h is such that V(e, At, 4, Subs, v) if
h(k, v)
6. Application:
V(p(ai , .. â€¢ , an), M, g, Subs, P(Al, , An)) if
p(ai,...,an) Pi(al,â€¢ â€¢ â€¢ ,4),
V(p1, M, g, Subs, P),
V(al, M, g, Subs, Al),
and
V(4, M, g, Subs, An)
7. ^-Application:
V(XA (T), M, g, Subs, v) if
V(4) I {X /T}, M, g, Subs, v)
8. Scoped formula:
</reference>
<construct confidence="0.766889">
V(S cope:0, M, g, Subs, v) if
V(0.111, 01), M, g, Subs, v)
</construct>
<bodyText confidence="0.881692">
where
a)0 is a formula containing the term, To,
</bodyText>
<equation confidence="0.5916288">
t erm(/0, Qo, Ro, Po)
b) newexpr(To, Subs) = T = term(/, C, R, Q 11)
c) Scope n [I,...]
d) R&apos; is Az.(and(R(x), P1(x)) I {I /x})
e) 0&apos; is Ax.a...]:0 IT / x , I /x})
</equation>
<subsectionHeader confidence="0.61458975">
Operations on substitutions:
â€¢ Subsi kti Subs2 combines two sets of substitutions.
This is like set union, except that where Subsi and
Subs2 both substitute for a particular item, the sub-
</subsectionHeader>
<bodyText confidence="0.768439">
stitutionubn from Subsi is retained and not that in
Subs2.
</bodyText>
<listItem confidence="0.808906">
â€¢ newexpr(Old, Subs) returns New if Old/ New E
</listItem>
<subsectionHeader confidence="0.434948">
Subs and otherwise Old.
</subsectionHeader>
<figureCaption confidence="0.989185">
Figure 1: QLF Evaluation Rules
</figureCaption>
<page confidence="0.99272">
234
</page>
<bodyText confidence="0.999814238095238">
As the QLF becomes more instantiated, the set of
possible evaluations narrows towards a singleton.
It is also possible for a QLF to be uninterpretable;
to specify no possible evaluation. Thus, no rules are
given for evaluating terms or their indices in isola-
tion. They must first be discharged by the scop-
ing rule, which substitutes the terms and indices
by A-bound variables. Inappropriate scoping may
leave undischarged and hence uninterpretable terms
and indices (which accounts for the so-called free-
variable and vacuous quantification constraints on
scope (Alshawi and Crouch, 1992)). The substi-
tutions employed by the evaluation rule for scop-
ing achieve a similar effect to the introduction and
discharging of quantifier assumptions in Pereira&apos;s
(1990) categorial semantics.
The non-deterministic nature of evaluation and
the role of substitutions draws us to conclude that
ellipsis substitutions operate on (descriptions of) the
semantic compositions, not the results of such com-
positions.
</bodyText>
<sectionHeader confidence="0.995587" genericHeader="method">
4 Parallelism and Inference
</sectionHeader>
<bodyText confidence="0.99422696875">
Selecting ellipsis antecedents and parallel elements
within them is an open problem (Priist, 1992; Priist
et al., 1994; Kehler, 1993b; Grover et al., 1994). Our
approach to parallelism is perhaps heavy-handed,
but in the absence of a clear solutions, possibly more
flexible. The QLFs shown above omitted category
information present in terms and forms.8 Categories
are sets of feature value equations containing syntac-
tic information relevant to determining how unin-
stantiated meta-variables can be resolved.
Tense in VP-ellipsis illustrates how categories can
be put to work. In
(24) I enjoyed it. And so will you
the ellipsis is contained within a form expression
whose category is
vp_ellips is [t ens e=inf ,modal=vill,perfect=_,
progressive=_,pol=pos , ...]
This states the syntactic tense, aspect and polarity
marked on the ellipsis (underscores indicate lack of
specification). The category constrains resolution to
look for verb phrase/sentence sources, which come
wrapped in forms with categories like
vp[tense=past,nodal=no,perfect=no,
progressive=no,pol=pos,...]
Heuristics similar to those described by Hardt (1992)
may be used for this. The category also says that,
for this kind of VP match&apos;, the term in the an-
tecedent whose category identifies it as being the
subject should be treated as parallel to the explicit
term in the ellipsis.
As this example illustrates, tense and aspect on
ellipsis and antecedent do not have to agree. When
</bodyText>
<footnote confidence="0.689198">
8f orns are described in (Alshawi and Crouch, 1992).
9Not all VP ellipses have VP antecedents.
</footnote>
<bodyText confidence="0.998748181818182">
this is so, the antecedent and ellipsis categories are
both used to determine what form should be sub-
stituted for the antecedent form. This comprises
the restriction of the antecedent form and a new
category constructed by taking the features of the
antecedent category, unless overridden by those on
the ellipsisâ€”a kind of (monotonic) priority union
(Grover et al., 1994) except using skeptical as op-
posed to credulous default unification (Carpenter,
1993). When a new category is constructed for the
antecedent, any tense resolutions also need to be un-
done, since the original ones may no longer be appro-
priate for the revised category. One thus merges the
category information from source and antecedent to
determine what verb phrase form should be substi-
tuted for the original. In this case, it will have a
category
vp[tense=inf,modal=vill,perfect=no,
progressive=no,pol=neg,...]
A more general question is whether all ellipses in-
volve recompositions, with variants, of linguistic an-
tecedents. There are cases where a degree of infer-
ence seems to be required:
(25) We spent six weeks living in France, eating
French food and speaking French, as we did in
Austria the year before.
(one must apply the knowledge that Austrians speak
German to correctly interpret the ellipsis). Pulman&apos;s
(1994) equational treatment of context-dependency
suggests one method of dealing with such cases. But
it remains to be seen how readily the equations used
for ellipsis here can be integrated into Pulman&apos;s
framework.
</bodyText>
<sectionHeader confidence="0.9981745" genericHeader="method">
5 Conclusions: Interpretation as
Description
</sectionHeader>
<bodyText confidence="0.9999435">
The substitutional treatment of ellipsis presented
here has broadly the same coverage as DSP&apos;s higher-
order unification treatment, but has the computa-
tional advantages of (i) not requiring order-sensitive
interleaving of different resolution operations, and
(ii) not requiring greater than second-order match-
ing for dealing with quantifiers. In addition, it cures
a slight overgeneration problem in DSP&apos;s account.
It has been claimed that these advantages arise
from viewing semantic interpretation as a process
of building descriptions of semantic compositions.
To conclude, a few further arguments for this view,
that are independent of any particular proposals for
dealing with ellipsis.
Order-Independence: One of the reasons
for the computational success of unification-based
syntactic formalisms is the order-independence of
parser/generator operations they permit. If one
looks at the order-sensitive nature of the operations
of semantic compositions, they provide a poor start-
ing point for a treatment of semantics enjoying simi-
lar computational success. But semantic interpreta-
</bodyText>
<page confidence="0.99287">
235
</page>
<bodyText confidence="0.998926875">
tion, viewed as building a description of the intended
composition, is a better prospect.
Context-Sensitivity: The truth values of many
(all?) sentences undeniably depend on context.
Context-dependence may enter either at the inter-
pretive mapping from sentence to meaning and/or
the evaluative mapping from meaning (and the
world) to truth-values.
</bodyText>
<sectionHeader confidence="0.804468333333333" genericHeader="method">
Intrepretation Evaluation
value
CONTEXT
</sectionHeader>
<bodyText confidence="0.999778842105263">
The more that context-dependence enters into the
interpretive mapping (so that meanings are corre-
spondingly more context-independent), the harder
it is to maintain a principle of strict composition-
ality in interpretation. The syntactic structure un-
derspecifies the intended composition, so that the
meanings of some constituents (e.g. pronouns) and
the mode of combination of other (e.g. quantifiers)
are not fully specified. Further contextual informa-
tion is required to fill the gaps. Again, interpretation
seen as description building sits easily with this.
Preserving Information: Focusing exclusively
on the results of semantic composition, i.e. mean-
ings, can ignore differences in how those meanings
were derived that can be linguistically significant
(e.g. co-referential vs co-indexed terms). If this in-
formation is not to be lost, some way of referring to
the structure of the compositions, as well as to their
results, seems to be required.
</bodyText>
<sectionHeader confidence="0.996004" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999793222222222">
The initial implementation of the work described
here was carried out as part of the CLARE project,
DTI IED4/1/1165. The writing of this paper was
supported in part by the FraCaS project, LRE 62-
051. I would especially like to thank Hiyan Alshawi
and Steve Pulman for help and advice on topics re-
lating to this paper. I have also benefited from con-
versations with Claire Grover, Ian Lewin and Mas-
simo Poesio.
</bodyText>
<sectionHeader confidence="0.999455" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998697892307692">
Hiyan Alshawi and Richard Crouch. 1992. Monotonic
semantic interpretation. In Proceedings 30th Annual
Meeting of the Association for Computational Linguis-
tics, pages 32-38.
Hiyan Alshawi, David Carter, Richard Crouch, Stephen
Pulman, Manny Rayner, and Arnold Smith. 1992.
Clare: A contextual reasoning and cooperative re-
sponse framework for the core language engine. Tech-
nical Report CRC-028, SRI International, Cam-
bridge Computer Science Research Centre. Avail-
able by anonymous ftp from ftp.ai.sri.com, pub/sri-
cam/reports/crc028.ps.Z; also crap-lg.
Bob Carpenter. 1993. Skeptical and credulous default
unification with applications to templates and inheri-
tance. In E. Briscoe, V. de Paiva, and A. Copestake,
editors, Inheritance, Defaults and the Lexicon, pages
13-37. Cambridge University Press.
Robin Cooper, Richard Crouch, Jan van Eijck, Chris
Fox, Josef van Genabith, Jan Jaspars, Hans Kamp,
Manfred Pinkal, Massimo Poesio, and Stephen Pul-
man. 1994a. Describing the approaches. FraCaS
deliverable, D8. Available by anonymous ftp from
ftp.cogscLecLac.uk, pub/FRACAS/de18.ps.gz.
Robin Cooper et al. 1994b. Evaluating the de-
scriptive capabilities of semantic theories. FraCaS
deliverable, D9. Available by anonymous ftp from
ftp.cogsci.ed.ac.uk, pub/FRACAS/de19.ps.gz.
Mary Dalrymple, Stuart M. Shieber, and Fernando C. N.
Pereira. 1991. Ellipsis and higher-order unification.
Linguistics and Philosophy, 14:399-452.
Claire Gardent. 1993. A unification-based approach to
multiple vp ellipsis resolution. In Proceedings 6th Eu-
ropean ACL, pages 139-148.
Mark Gawron and Stanley Peters. 1990. Anaphora and
Quantification in Situation Semantics. Number 19 in
CSLI Lecture Notes. CSLI, Stanford, CA.
Claire Grover, Chris Brew, Suresh Manandhar, and
Marc Moens. 1994. Priority union and generalization
in discourse grammars. In Proceedings 32nd Annual
Meeting of the Association for Computational Linguis-
tics, pages 17-24.
Daniel Hardt. 1992. An algorithm for vp ellipsis. In
Proceedings 30th Annual Meeting of the Association
for Computational Linguistics, pages 9-14.
Andrew Kehler. 1993a. A discourse copying algorithm
for ellipsis and anaphora resolution. In Proceedings
6th European ACL, pages 203-212.
Andrew Kehler. 1993b. The effect of establishing co-
herence in ellipsis and anaphora resolution. In Pro-
ceedings 31st Annual Meeting of the Association for
Computational Linguistics, pages 62-69.
John Nerbonne. 1991. Constraint-based semantics. In
Proceedings 8th Amsterdam Colloquium, pages 425-
443.
Fernando C. N. Pereira. 1990: Categorial semantics and
scoping. Computational Linguistics, 16:1-10.
Hub Priist, Remko Scha, and Martin van den Berg.
1994. Discourse grammar and verb phrase anaphora.
Linguistics and Philosophy, 17:261-327.
Hub Priist. 1992. On Discourse Structure, VP Anaphora
and Gapping. Ph.D. thesis, University of Amsterdam.
Stephen Pulman. 1994. A computational theory of con-
text dependency. In Proceedings of the International
Workshop on Computational Semantics, pages 161-
171, Tilburg.
</reference>
<figure confidence="0.992539">
sentence
â€¢ meaning
</figure>
<page confidence="0.981572">
236
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.893199">
<title confidence="0.999271">Ellipsis and Quantification: A Substitutional Approach</title>
<author confidence="0.999987">Richard Crouch</author>
<affiliation confidence="0.999948">SRI International, Cambridge Computer Science Research Centre</affiliation>
<address confidence="0.963944">23 Millers Yard, Mill Lane, Cambridge, CB2 1RQ, UK</address>
<email confidence="0.99975">rctcam.sri.com</email>
<abstract confidence="0.996927833333333">The paper describes a substitutional approach to ellipsis resolution giving comparable results to (Dalrymple et al., 1991), but without the need for order-sensitive interleaving of quantifier scoping and ellipsis resolution. It is argued that the orderindependence results from viewing semantic interpretation as building a description of a semantic composition, instead of the more common view of interpretation as actually performing the composition.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>V</author>
</authors>
<title>g, Subs, v) if V(</title>
<booktitle>QLF2, M, g, Subs, v) where QLF2/ QLF2 E Subs</booktitle>
<marker>V, </marker>
<rawString>V(QLF1, M, g, Subs, v) if V( QLF2, M, g, Subs, v) where QLF2/ QLF2 E Subs</rawString>
</citation>
<citation valid="false">
<title>Merging reinterpretations: V(QLF1Subs1, M, g, Subs2, v) if V(QLF, M, g, Subsi Subs2, 5. Abstraction: V(Ax , M, g, Subs, h) if 0&apos; and h is such that</title>
<booktitle>V(e, At, 4, Subs, v) if h(k, v) 6. Application: V(p(ai , .. â€¢ , an), M, g, Subs, P(Al, , An)) if p(ai,...,an) Pi(al,â€¢ â€¢ â€¢ ,4),</booktitle>
<marker></marker>
<rawString>4. Merging reinterpretations: V(QLF1Subs1, M, g, Subs2, v) if V(QLF, M, g, Subsi Subs2, 5. Abstraction: V(Ax , M, g, Subs, h) if 0&apos; and h is such that V(e, At, 4, Subs, v) if h(k, v) 6. Application: V(p(ai , .. â€¢ , an), M, g, Subs, P(Al, , An)) if p(ai,...,an) Pi(al,â€¢ â€¢ â€¢ ,4),</rawString>
</citation>
<citation valid="false">
<authors>
<author>V</author>
</authors>
<note>g, Subs, P),</note>
<marker>V, </marker>
<rawString>V(p1, M, g, Subs, P),</rawString>
</citation>
<citation valid="false">
<authors>
<author>V</author>
<author>V</author>
</authors>
<title>An) 7. ^-Application:</title>
<journal>V(XA (T), M, g, Subs, v) if V(4) I {X /T}, M, g, Subs,</journal>
<volume>8</volume>
<note>Scoped formula:</note>
<marker>V, V, </marker>
<rawString>V(al, M, g, Subs, Al), and V(4, M, g, Subs, An) 7. ^-Application: V(XA (T), M, g, Subs, v) if V(4) I {X /T}, M, g, Subs, v) 8. Scoped formula:</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hiyan Alshawi</author>
<author>Richard Crouch</author>
</authors>
<title>Monotonic semantic interpretation.</title>
<date>1992</date>
<booktitle>In Proceedings 30th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>32--38</pages>
<contexts>
<context position="5114" citStr="Alshawi and Crouch, 1992" startWordPosition="766" endWordPosition="769"> affect the outcome, the order in which descriptions are built up is unimportant. In the case of ellipsis, this extra layer of descriptive indirection permits an equational treatment of ellipsis that (i) is order-independent, (ii) can take account compositional distinctions that do not result in meaning differences, and also (iii) does not require the use of higher-order unification for dealing with quantifiers. The paper is organised as follows. Section 2 describes the substitutional treatment of ellipsis by way of a few examples presented in a simplified version of Quasi Logical Form (QLF) (Alshawi and Crouch, 1992; Alshawi et al., 1992). Section 3 gives the semantics for the notation, and argues that QLF is best understood as providing descriptions of semantic compositions. Section 4 raises some open questions concerning the determination of parallelism between ellipsis and antecedent, and other issues. Section 5 concludes. 2 Ellipsis Substitutions This section illustrates the substitutional treatment of ellipsis through a small number of examples. For presentation purposes we only sketch the intended semantics of the simplified QLF notation used, and a more detailed discussion is deferred until sectio</context>
<context position="7508" citStr="Alshawi and Crouch, 1992" startWordPosition="1134" endWordPosition="1137">e node would be an uninstantiated meta-variable. A generalized quantifier representation equivalent to the above is (4) 3(Ay.(name(y, &apos;John&apos;) Ay = ismith), Az.sleep(x)) The index in the scope node means that to semantically evaluate the QLF, you get hold of the quantifier, restriction and contextual restriction of the corresponding term. This forms a (generalized) quantifier expression, whose body is obtained by discharging all occurrences of the term and it index to a variable, and abstracting over the variable. Terms and indices not dischargeable in this manner lead to uninterpretable QLFs (Alshawi and Crouch, 1992). We represent the elliptical sentence, again abbreviated, as a (partially resolved) QLF: (5) ?P(terat(+m, 3, )ty.name(y, &apos;Mary&apos;), Ay.y = m_jones)) ?P is an unresolved meta-variable. To resolve the ellipsis, it needs to be instantiated to some contextually salient predicate. Along similar lines to DSP, we can set up an equation to determine possible values for ?P2: (6) ?P(terra(-1-j, ...)) = [-I-ksleep(term(-1-j, ...)) That is, we are looking for a predicate that when applied to the subject term of the ellipsis antecedent returns the antecedent. The interpretation of the ellipsis is then given</context>
<context position="25366" citStr="Alshawi and Crouch, 1992" startWordPosition="4033" endWordPosition="4036">her Kamp nor Kehler extend their copying/substitution mechanism to anything besides pronouns, as we have done. In Kehler&apos;s case, it is hard to see how his role assignment functions can be extended to deal with non-referential terms in the desired manner. DRT&apos;s use of discourse referents to indicate scope suggests that Kamp&apos;s treatment may be more readily extended in this manner; lists of discourse referents at the top of DRS boxes are highly reminiscent of the index lists in scope nodes. 3 Semantic Evaluation Figure 1 defines a valuation relation for the QLF fragment used above, derived from (Alshawi and Crouch, 1992; Cooper et al., 1994a). If a QLF expression contains uninstantiated meta-variables, the valuation relation can associate more than one value with the expression. In the case of formulas, they may be given both the values true and false, corresponding to the formula being true under one possible resolution and false under another. A subsumption ordering over QLFS, D, is employed in the evaluation rules, in effect to propose possible instantiations for meta-variables (the rule fragment only allows for scope meta-variables, but (Cooper et al., 1994a) describes the more general case where other k</context>
</contexts>
<marker>Alshawi, Crouch, 1992</marker>
<rawString>Hiyan Alshawi and Richard Crouch. 1992. Monotonic semantic interpretation. In Proceedings 30th Annual Meeting of the Association for Computational Linguistics, pages 32-38.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hiyan Alshawi</author>
<author>David Carter</author>
<author>Richard Crouch</author>
<author>Stephen Pulman</author>
<author>Manny Rayner</author>
<author>Arnold Smith</author>
</authors>
<title>Clare: A contextual reasoning and cooperative response framework for the core language engine.</title>
<date>1992</date>
<tech>Technical Report CRC-028,</tech>
<institution>SRI International, Cambridge Computer Science</institution>
<contexts>
<context position="2381" citStr="Alshawi et al., 1992" startWordPosition="340" endWordPosition="343">etween merely co-referential and co-indexed (in his terminology, role-linked) expressions. Third, though perhaps less importantly, higherorder unification going beyond second-order matching is required for resolving ellipses involving quantification. This increases the computational complexity of the ellipsis resolution task. This paper presents a treatment of ellipsis which avoids these difficulties, while having essentially the same coverage as DSP. The treatment is easily implementable, and forms the basis of the ellipsis resolution component currently used within the Core Language Engine (Alshawi et al., 1992). Ellipsis interpretations are represented as simple sets of substitutions on semantic representations of the antecedent. The substitutions can be built up in an order-independent way (i.e. before, after or during scoping), and without recourse to higherorder unification. The treatment is similar to the discourse copying analysis of (Kehler, 1993a), and to the substitutional treatment suggested by Kamp within Discourse Representation Theory, described in (Gawron and Peters, 1990). However, we extend the notion of strict and sloppy identity to deal with more than just pronouns. In doing so, we </context>
<context position="5137" citStr="Alshawi et al., 1992" startWordPosition="770" endWordPosition="773">rder in which descriptions are built up is unimportant. In the case of ellipsis, this extra layer of descriptive indirection permits an equational treatment of ellipsis that (i) is order-independent, (ii) can take account compositional distinctions that do not result in meaning differences, and also (iii) does not require the use of higher-order unification for dealing with quantifiers. The paper is organised as follows. Section 2 describes the substitutional treatment of ellipsis by way of a few examples presented in a simplified version of Quasi Logical Form (QLF) (Alshawi and Crouch, 1992; Alshawi et al., 1992). Section 3 gives the semantics for the notation, and argues that QLF is best understood as providing descriptions of semantic compositions. Section 4 raises some open questions concerning the determination of parallelism between ellipsis and antecedent, and other issues. Section 5 concludes. 2 Ellipsis Substitutions This section illustrates the substitutional treatment of ellipsis through a small number of examples. For presentation purposes we only sketch the intended semantics of the simplified QLF notation used, and a more detailed discussion is deferred until section 3. 2.1 Simple VP Elli</context>
<context position="21375" citStr="Alshawi et al., 1992" startWordPosition="3388" endWordPosition="3391"> scoping of quantifiers. Moreover, the difference between strict and sloppy readings does not depend on somehow being able to distinguish between primary and secondary occurrences of terms with the same meaning. In DSP&apos;s representation of the antecedent of (18), both NPs &apos;John&apos; and &apos;he&apos; give rise to two occurrences of the same term (a constant, 5). The QLF representation is able to distinguish between the primary and the secondary, pronominal, reference to John. 2.5 Other Phenomena Space precludes illustrating the substitutional approach through further examples, though more are discussed in (Alshawi et al., 1992; Cooper et al., 1994b). The coverage is basically the same as DSP&apos;s: Antecedent Contained Deletion: A sloppy substitution for every person that Simon did in the sentence John greeted every person that Simon did results in re-introducing the ellipsis in its own resolution. This leads to an uninterpretable cyclic QLF in much the same way that DSP obtain a violation of the occurs check on sound unification. Cascaded Ellipsis: The number of readings obtained for John revised his paper before the teacher did, and then Simon did was used as a benchmark by DSP. The approach here gets the four readin</context>
</contexts>
<marker>Alshawi, Carter, Crouch, Pulman, Rayner, Smith, 1992</marker>
<rawString>Hiyan Alshawi, David Carter, Richard Crouch, Stephen Pulman, Manny Rayner, and Arnold Smith. 1992. Clare: A contextual reasoning and cooperative response framework for the core language engine. Technical Report CRC-028, SRI International, Cambridge Computer Science Research Centre. Available by anonymous ftp from ftp.ai.sri.com, pub/sricam/reports/crc028.ps.Z; also crap-lg.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bob Carpenter</author>
</authors>
<title>Skeptical and credulous default unification with applications to templates and inheritance.</title>
<date>1993</date>
<booktitle>Inheritance, Defaults and the Lexicon,</booktitle>
<pages>13--37</pages>
<editor>In E. Briscoe, V. de Paiva, and A. Copestake, editors,</editor>
<publisher>Cambridge University Press.</publisher>
<marker>Carpenter, 1993</marker>
<rawString>Bob Carpenter. 1993. Skeptical and credulous default unification with applications to templates and inheritance. In E. Briscoe, V. de Paiva, and A. Copestake, editors, Inheritance, Defaults and the Lexicon, pages 13-37. Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robin Cooper</author>
<author>Richard Crouch</author>
<author>Jan van Eijck</author>
<author>Chris Fox</author>
<author>Josef van Genabith</author>
<author>Jan Jaspars</author>
<author>Hans Kamp</author>
<author>Manfred Pinkal</author>
<author>Massimo Poesio</author>
<author>Stephen Pulman</author>
</authors>
<title>Describing the approaches. FraCaS deliverable, D8. Available by anonymous ftp from ftp.cogscLecLac.uk,</title>
<date>1994</date>
<pages>18</pages>
<marker>Cooper, Crouch, van Eijck, Fox, van Genabith, Jaspars, Kamp, Pinkal, Poesio, Pulman, 1994</marker>
<rawString>Robin Cooper, Richard Crouch, Jan van Eijck, Chris Fox, Josef van Genabith, Jan Jaspars, Hans Kamp, Manfred Pinkal, Massimo Poesio, and Stephen Pulman. 1994a. Describing the approaches. FraCaS deliverable, D8. Available by anonymous ftp from ftp.cogscLecLac.uk, pub/FRACAS/de18.ps.gz.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robin Cooper</author>
</authors>
<title>Evaluating the descriptive capabilities of semantic theories. FraCaS deliverable, D9. Available by anonymous ftp from ftp.cogsci.ed.ac.uk,</title>
<date>1994</date>
<pages>19</pages>
<marker>Cooper, 1994</marker>
<rawString>Robin Cooper et al. 1994b. Evaluating the descriptive capabilities of semantic theories. FraCaS deliverable, D9. Available by anonymous ftp from ftp.cogsci.ed.ac.uk, pub/FRACAS/de19.ps.gz.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>Stuart M Shieber</author>
<author>Fernando C N Pereira</author>
</authors>
<title>Ellipsis and higher-order unification. Linguistics and Philosophy,</title>
<date>1991</date>
<pages>14--399</pages>
<marker>Dalrymple, Shieber, Pereira, 1991</marker>
<rawString>Mary Dalrymple, Stuart M. Shieber, and Fernando C. N. Pereira. 1991. Ellipsis and higher-order unification. Linguistics and Philosophy, 14:399-452.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claire Gardent</author>
</authors>
<title>A unification-based approach to multiple vp ellipsis resolution.</title>
<date>1993</date>
<booktitle>In Proceedings 6th European ACL,</booktitle>
<pages>139--148</pages>
<contexts>
<context position="22824" citStr="Gardent, 1993" startWordPosition="3633" endWordPosition="3635">. the implicit his paper in the second ellipsis when resolving the third ellipsis. We do not get a sixth, implausible reading, provided that in the first clause his is resolved as being coindexed with the term for John; i.e. that John and his do not both independently refer to the same individual. Kehler blocks this reading in a similar manner. DSP block the reading by a more artificial restriction on the depth of embedding of expressions in logical forms; they lack the means for distinguishing between coindexed and merely co-referential expressions. Multiple VP Ellipsis Multiple VP ellipsis (Gardent, 1993) poses problems at the level of determining which VP is the antecedent of which ellipsis. But at the level of incorporating elliptical material once &apos;The converse also holds. Giving an antecedent term wide scope over the ellipsis renders the choice of a strict or a sloppy substitution for it in the ellipsis immaterial. During semantic evaluation of the QLF, discharging the antecedent through scoping will substitute out all occurrence of the term and its index before ellipsis substitutions are applied. Note though that this order dependence applies at the level of evaluating QLFs, not construct</context>
</contexts>
<marker>Gardent, 1993</marker>
<rawString>Claire Gardent. 1993. A unification-based approach to multiple vp ellipsis resolution. In Proceedings 6th European ACL, pages 139-148.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Gawron</author>
<author>Stanley Peters</author>
</authors>
<title>Anaphora and Quantification in Situation Semantics.</title>
<date>1990</date>
<journal>Number</journal>
<booktitle>in CSLI Lecture Notes. CSLI,</booktitle>
<volume>19</volume>
<location>Stanford, CA.</location>
<contexts>
<context position="2865" citStr="Gawron and Peters, 1990" startWordPosition="408" endWordPosition="411">mplementable, and forms the basis of the ellipsis resolution component currently used within the Core Language Engine (Alshawi et al., 1992). Ellipsis interpretations are represented as simple sets of substitutions on semantic representations of the antecedent. The substitutions can be built up in an order-independent way (i.e. before, after or during scoping), and without recourse to higherorder unification. The treatment is similar to the discourse copying analysis of (Kehler, 1993a), and to the substitutional treatment suggested by Kamp within Discourse Representation Theory, described in (Gawron and Peters, 1990). However, we extend the notion of strict and sloppy identity to deal with more than just pronouns. In doing so, we readily deal with phenomena like scope parallelism. While the treatment of ellipsis is hopefully of some value in its own right, a more general conclusion can be drawn concerning the requirements for a computational theory of semantics. Briefly, the standard view within formal semantics, which DSP inherit, identifies semantic interpretation with composition: interpretation is the process of taking the meanings of various constituents and composing them together to form the meanin</context>
<context position="24020" citStr="Gawron and Peters, 1990" startWordPosition="3821" endWordPosition="3824">aluating QLFs, not constructing and resolving them. 233 the antecedents have been determined, it appears to offer no special problems. Other Forms of Ellipsis: Other forms of ellipsis, besides VP-ellipsis can be handled substitutionally. For example, NP-ellipsis (e.g. Who slept? John.) is straightforwardly accommodated. PPellipsis (e.g. Who left on Tuesday? And on Wednesday?) requires substitutions for form constructions in QLF (not described here) representing prepositional phrases. 2.6 Comparisons The use of terms and indices has parallels to proposals due to Kehler and Kamp (Kehler, 1993a; Gawron and Peters, 1990). Kehler adopts an analysis where (referential) arguments to verbs are represented as related to a Davidsonian event via thematic role functions, e.g. agent(e)=john). Pronouns typically refer to these functions, e.g. he=agent(e). In VP ellipsis, strict identity corresponds to copying the entire role assignment from the antecedent. Sloppy identity corresponds to copying the function, but applying it to the event of the ellided clause. For Kamp, strict identity involves copying the discourse referent of the antecedent and identifying it with that of the ellided pronoun. Sloppy identity copies th</context>
</contexts>
<marker>Gawron, Peters, 1990</marker>
<rawString>Mark Gawron and Stanley Peters. 1990. Anaphora and Quantification in Situation Semantics. Number 19 in CSLI Lecture Notes. CSLI, Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claire Grover</author>
<author>Chris Brew</author>
<author>Suresh Manandhar</author>
<author>Marc Moens</author>
</authors>
<title>Priority union and generalization in discourse grammars.</title>
<date>1994</date>
<booktitle>In Proceedings 32nd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>17--24</pages>
<marker>Grover, Brew, Manandhar, Moens, 1994</marker>
<rawString>Claire Grover, Chris Brew, Suresh Manandhar, and Marc Moens. 1994. Priority union and generalization in discourse grammars. In Proceedings 32nd Annual Meeting of the Association for Computational Linguistics, pages 17-24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Hardt</author>
</authors>
<title>An algorithm for vp ellipsis.</title>
<date>1992</date>
<booktitle>In Proceedings 30th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>9--14</pages>
<marker>Hardt, 1992</marker>
<rawString>Daniel Hardt. 1992. An algorithm for vp ellipsis. In Proceedings 30th Annual Meeting of the Association for Computational Linguistics, pages 9-14.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehler</author>
</authors>
<title>A discourse copying algorithm for ellipsis and anaphora resolution.</title>
<date>1993</date>
<booktitle>In Proceedings 6th European ACL,</booktitle>
<pages>203--212</pages>
<contexts>
<context position="1676" citStr="Kehler (1993" startWordPosition="241" endWordPosition="242">scoped and ellipses resolved determines the final interpretation of elliptical sentences. It is hard to see how DSP&apos;s analysis could be implemented within a system employing a pipelined architecture that, say, separates quantifier scoping out from other reference resolution operationsâ€”this would seem to preclude the generation of some legitimate readings. Yet many systems, for good practical reasons, employ this kind of architecture. Second, without additional constraints, DSP slightly overgenerate readings for sentences like (1) John revised his paper before the teacher did, and so did Bill. Kehler (1993a) has convincingly argued that this problem arises because DSP do not distinguish between merely co-referential and co-indexed (in his terminology, role-linked) expressions. Third, though perhaps less importantly, higherorder unification going beyond second-order matching is required for resolving ellipses involving quantification. This increases the computational complexity of the ellipsis resolution task. This paper presents a treatment of ellipsis which avoids these difficulties, while having essentially the same coverage as DSP. The treatment is easily implementable, and forms the basis o</context>
<context position="23993" citStr="Kehler, 1993" startWordPosition="3819" endWordPosition="3820">the level of evaluating QLFs, not constructing and resolving them. 233 the antecedents have been determined, it appears to offer no special problems. Other Forms of Ellipsis: Other forms of ellipsis, besides VP-ellipsis can be handled substitutionally. For example, NP-ellipsis (e.g. Who slept? John.) is straightforwardly accommodated. PPellipsis (e.g. Who left on Tuesday? And on Wednesday?) requires substitutions for form constructions in QLF (not described here) representing prepositional phrases. 2.6 Comparisons The use of terms and indices has parallels to proposals due to Kehler and Kamp (Kehler, 1993a; Gawron and Peters, 1990). Kehler adopts an analysis where (referential) arguments to verbs are represented as related to a Davidsonian event via thematic role functions, e.g. agent(e)=john). Pronouns typically refer to these functions, e.g. he=agent(e). In VP ellipsis, strict identity corresponds to copying the entire role assignment from the antecedent. Sloppy identity corresponds to copying the function, but applying it to the event of the ellided clause. For Kamp, strict identity involves copying the discourse referent of the antecedent and identifying it with that of the ellided pronoun</context>
</contexts>
<marker>Kehler, 1993</marker>
<rawString>Andrew Kehler. 1993a. A discourse copying algorithm for ellipsis and anaphora resolution. In Proceedings 6th European ACL, pages 203-212.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehler</author>
</authors>
<title>The effect of establishing coherence in ellipsis and anaphora resolution.</title>
<date>1993</date>
<booktitle>In Proceedings 31st Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>62--69</pages>
<contexts>
<context position="1676" citStr="Kehler (1993" startWordPosition="241" endWordPosition="242">scoped and ellipses resolved determines the final interpretation of elliptical sentences. It is hard to see how DSP&apos;s analysis could be implemented within a system employing a pipelined architecture that, say, separates quantifier scoping out from other reference resolution operationsâ€”this would seem to preclude the generation of some legitimate readings. Yet many systems, for good practical reasons, employ this kind of architecture. Second, without additional constraints, DSP slightly overgenerate readings for sentences like (1) John revised his paper before the teacher did, and so did Bill. Kehler (1993a) has convincingly argued that this problem arises because DSP do not distinguish between merely co-referential and co-indexed (in his terminology, role-linked) expressions. Third, though perhaps less importantly, higherorder unification going beyond second-order matching is required for resolving ellipses involving quantification. This increases the computational complexity of the ellipsis resolution task. This paper presents a treatment of ellipsis which avoids these difficulties, while having essentially the same coverage as DSP. The treatment is easily implementable, and forms the basis o</context>
<context position="23993" citStr="Kehler, 1993" startWordPosition="3819" endWordPosition="3820">the level of evaluating QLFs, not constructing and resolving them. 233 the antecedents have been determined, it appears to offer no special problems. Other Forms of Ellipsis: Other forms of ellipsis, besides VP-ellipsis can be handled substitutionally. For example, NP-ellipsis (e.g. Who slept? John.) is straightforwardly accommodated. PPellipsis (e.g. Who left on Tuesday? And on Wednesday?) requires substitutions for form constructions in QLF (not described here) representing prepositional phrases. 2.6 Comparisons The use of terms and indices has parallels to proposals due to Kehler and Kamp (Kehler, 1993a; Gawron and Peters, 1990). Kehler adopts an analysis where (referential) arguments to verbs are represented as related to a Davidsonian event via thematic role functions, e.g. agent(e)=john). Pronouns typically refer to these functions, e.g. he=agent(e). In VP ellipsis, strict identity corresponds to copying the entire role assignment from the antecedent. Sloppy identity corresponds to copying the function, but applying it to the event of the ellided clause. For Kamp, strict identity involves copying the discourse referent of the antecedent and identifying it with that of the ellided pronoun</context>
</contexts>
<marker>Kehler, 1993</marker>
<rawString>Andrew Kehler. 1993b. The effect of establishing coherence in ellipsis and anaphora resolution. In Proceedings 31st Annual Meeting of the Association for Computational Linguistics, pages 62-69.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Nerbonne</author>
</authors>
<title>Constraint-based semantics.</title>
<date>1991</date>
<booktitle>In Proceedings 8th Amsterdam Colloquium,</booktitle>
<pages>425--443</pages>
<marker>Nerbonne, 1991</marker>
<rawString>John Nerbonne. 1991. Constraint-based semantics. In Proceedings 8th Amsterdam Colloquium, pages 425-443.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fernando C N Pereira</author>
</authors>
<title>Categorial semantics and scoping.</title>
<date>1990</date>
<journal>Computational Linguistics,</journal>
<pages>16--1</pages>
<marker>Pereira, 1990</marker>
<rawString>Fernando C. N. Pereira. 1990: Categorial semantics and scoping. Computational Linguistics, 16:1-10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hub Priist</author>
<author>Remko Scha</author>
<author>Martin van den Berg</author>
</authors>
<title>Discourse grammar and verb phrase anaphora. Linguistics and Philosophy,</title>
<date>1994</date>
<pages>17--261</pages>
<marker>Priist, Scha, van den Berg, 1994</marker>
<rawString>Hub Priist, Remko Scha, and Martin van den Berg. 1994. Discourse grammar and verb phrase anaphora. Linguistics and Philosophy, 17:261-327.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hub Priist</author>
</authors>
<date>1992</date>
<booktitle>On Discourse Structure, VP Anaphora and Gapping. Ph.D. thesis,</booktitle>
<institution>University of Amsterdam.</institution>
<marker>Priist, 1992</marker>
<rawString>Hub Priist. 1992. On Discourse Structure, VP Anaphora and Gapping. Ph.D. thesis, University of Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen Pulman</author>
</authors>
<title>A computational theory of context dependency.</title>
<date>1994</date>
<booktitle>In Proceedings of the International Workshop on Computational Semantics,</booktitle>
<pages>161--171</pages>
<location>Tilburg.</location>
<marker>Pulman, 1994</marker>
<rawString>Stephen Pulman. 1994. A computational theory of context dependency. In Proceedings of the International Workshop on Computational Semantics, pages 161-171, Tilburg.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>