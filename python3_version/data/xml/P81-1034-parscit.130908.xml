<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.002037">
<note confidence="0.61912625">
Madele inc Bates
Bolt Beranek and Newman, Inc.
Bober t Ingria
Department of Linguistics, MIT
</note>
<sectionHeader confidence="0.991369" genericHeader="abstract">
1. INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999964387755102">
This paper describes a sentence generator that
was built primarily to focus on syntactic form
and syntactic relationships. Our main goal was
to produce a tutorial system for the English
language; the intended users of the system are
people with language delaying handicaps such as
deafness, and people learning English as a
foreign language. For these populations,
extensive exposure to standard English
constructions (negatives, questions,
relativization, etc.) and their interactions
is necessary. . The purpose of the generator was
to serve as a powerful resource for tutorial
programs that need examples of particular
constructions and/or related sentences to embed
in exercises or examples for the student. The
focus of the generator is thus not so much on
what to express as on how to express it in
acceptable English. This is quite different
from the focus of most other language
generation systems. Nonetheless, our system
could be interfaced to a more goal-directed
semantic component.
The mechanism of transformational grammar was
chosen because it offered both a way to
exercise tight control over the surface
syntactic form of a sentence and a good model
for the production of groups of sentences that
are syntactically related (e.g. the active and
passive forms of a transitive sentence). By
controlling (at a very high level) the rules
that are applied and by examining the detailed
syntactic relationships in the tree structures
at each end of the derivation, the tutorial
part of the system accesses a great deal of
information about the syntax of the sentences
that are produced by the generator; this
knowledge is used to give explanations and
hints to the user in the context of the
particular exercise that the student is
attempting.
The transformational generator is composed of
three major parts: a base component that
produces base trees, a transformer that applies
transformational rules to the trees to derive a
surface tree, and a set of mechanisms to
control the operation of the first two
components. We will discuss each of the
components of this system separately.
</bodyText>
<sectionHeader confidence="0.998802" genericHeader="method">
2. THE BASE COMPONENT
</sectionHeader>
<bodyText confidence="0.979364666666667">
The base component is a set of functions that
implicitly embody context free rules for
creating a tree structure (phrase marker) in
the X-bar framework (as discussed by Chomsky
(1970), Jackendoff (1974), Bresnan (1975) and
others.) In this system, the major syntactic
categories (N(oun), V(erb), A(djective) and
P(reposition)) are treated as complex symbols
which are decomposable into the features f+NI
and (+V]. This yields the following cross-
classification of these categories:
This work was sponsored by BEH grant kG007904514.
</bodyText>
<figureCaption confidence="0.996716">
Figure 1. Features in the X-bar System
</figureCaption>
<bodyText confidence="0.999938375">
The feature &amp;quot;N&amp;quot; marks a given category as
&amp;quot;nounlike&amp;quot; (and thus corresponds to the
traditional grammatical notion of
&amp;quot;substantive&amp;quot;) while &amp;quot;V&amp;quot; marks a category as
&amp;quot;verblike.&amp;quot; Nouns and Adjectives are (+N)
because they share certain properties (e.g.
Adjectives can be used in nominal contexts; in
highly inflected languages, Adjectives and
Nouns typically share the same inflectional
paradigms, etc.) Adjectives and Verbs are (+V]
because they share (among other things) various
morphological traits (e.g. certain verbal
forms, such as participles, have adjectival
properties). Verbs and Prepositions are (-N)
because they display common complement
selection attributes (e.g. they both regularly
take Nominal complements that bear Accusative
Case.) (For further discussion of the issue of
feature decomposition, and for some alternative
proposals, see Jackendoff (1978) and George
(1980a, Section 2; 1980b, Section 2).)
In addition, each syntactic category contains a
specification of its rank (given in terms of
number of bars, hence the term &amp;quot;X-bar&amp;quot; system).
For instance, a Noun (N) is of rank 0 and is
marked with no bars whereas the Noun Phrase
which it heads is of the same category but
different (higher) rank. Intermediate
structures are also permitted; for instance, V&apos;
(read &amp;quot;V bar&amp;quot;) is that portion of the Verb
Phrase which consists of a Verb and its
complements (e.g. direct and indirect objects,
clausal complements, prepositional phrases,
etc.) while V&amp;quot; (read &amp;quot;V double bar&amp;quot;) includes
V&apos; as well as Auxiliary elements. For our
purposes, we have adopted a uniform two-level
structure across categories; that is, each
category X is taken to have X&amp;quot; as its highest
rank, so that Noun Phrase (NP) in our system is
N&amp;quot;, Verb Phrase is V&amp;quot;, etc. Minor categories
(such as DET(erminer), AUX(iliary), NEG(ative),
etc.) stand outside this system, as do
S(entence) and S (a sort of super sentence,
which contains S and clause introducing
elements (or &amp;quot;subordinating conjunctions&amp;quot;) such
as that). These categories are not
decomposable into the features (+N) and (+V],
and, except for S and S&apos;, they do not save
different ranks. (/t should be noted that the
adoption of a uniform two-level hypothesis and
the placing of S and S&apos; outside of the normal
X-bar system are not uncontroversial--see e.g.
Jackendoff (1978) and George (1980a, Section 2;
1980b, Section 2). However, these assumptions
are found in many variants of the X-bar
framework and are adequate for our purposes.)
</bodyText>
<page confidence="0.998639">
153
</page>
<bodyText confidence="0.995772">
An example of the internal structure of the P&amp;quot;
corresponding to the phrase &amp;quot;to the sad boys&amp;quot;
is given below:
</bodyText>
<equation confidence="0.980494333333333">
P&amp;quot; [ -V -N ]
P&apos; ( -V -N
P [ -V -N ]
to
N&amp;quot; ( +N -V PER.3 +DEF wELPL
. +HUMAN GENDER.MALE )
</equation>
<figure confidence="0.838093090909091">
DET [ +DEF
the
A&amp;quot; [ +N +V I
A [ +N +v ]
A [ +N +V
sad
NÂ° +N -V PER.3 +DEF NU.PL
+HUMAN GENDER.MALE ]
N [ +N -V PER.3 +DEF NU.PL
+HUMAN GENDER.MALE 1
boy
</figure>
<figureCaption confidence="0.999749">
Figure 2. Part of A Sample Base Structure
</figureCaption>
<bodyText confidence="0.998705571428572">
This system of cross-classification by features
and by rank permits the creation of
transformations which can refer to a specific
rank or feature without referring to a specific
major category. (See Bresnan (1975) for
further discussion of this point.) For
example, the transformation which fronts WH-
words to form WE-Questions treats any X&amp;quot;
category as its target and, hence, can be used
to question any of the major categories (e.g.
A&amp;quot;--&amp;quot;how big is it?&amp;quot;; N&amp;quot;--&amp;quot;what did they do?&amp;quot;
&amp;quot;which men left?&amp;quot;; P&amp;quot;--&amp;quot;to whom did you give
it?&amp;quot;). Similarly, the transformation which
marks Accusative Case on pronouns applies only
to those 1,1&amp;quot;s which follow a [-NI category;
i.e. only to those 14&amp;quot;s which are the objects
of Verbs or Prepositions. This allows us to
create extremely versatile transformations
which apply in a variety of contexts, and frees
us .from the necessity of creating several
transformations, each of which essentially
replicates the Structural Description and
Structural Change of the others, differing only
in the category of the affected term.
A set of constraints (discussed further below)
is the input to the base component and
determines the type of base structure which is
produced. A base structure has both the usual
features on the nodes (category features such
as [+N] and [-V], and selectional features such
as (+PROPER]) and some additional diacritic
features (such as [-C1, for case marking) which
are used to ,govern the application of certain
transformations.
Lexical insertion is an integral part of the
construction of the tree by the base component.
It is not essential that words be chosen for
the sentence at this time, but it is convenient
because additional features in the structure
(such as (+HUMAN], (+MALE]) are needed to guide
some transformations (for instance, the
insertion of the correct form of Pronouns.)
In our current system, the choice of words to
be inserted in the base structure is controlled
by a dictionary and a semantic network which
embodies a limited number of semantic class
relationships and case restrictions to Prohibit
the production of utterances like &amp;quot;The answer
saw the angry cookie.&amp;quot; The network nodes are
chosen at random for each sentence that is
generated, but a more Powerful semantic
component could be used to convey particular
&amp;quot;messages,&amp;quot; provided only that it could find
lexical items to be inserted in the small
number of positions required by the base
constraints.
</bodyText>
<sectionHeader confidence="0.944106" genericHeader="method">
3. THE TRANSFORMATIONAL COMPONENT
</sectionHeader>
<bodyText confidence="0.979416603174603">
Each transformational rule has a Structural
Description, Structural Change, and (optional)
Condition; however rules are not marked as
optional or obligatory, as they were in
traditional transformational theory (e.g.
Chomsky (1955)). Obligatory transformations
whose structural descriptions were met would
apply necessarily; optional transformations
would apply at random. Moreover, various
versions of transformational grammar have
employed transformations as &amp;quot;filters&amp;quot; on
possible derivations. In older work (e.g. the
so-called &amp;quot;Standard Theory&amp;quot; (ST) of Chomsky
(1965)) derivations in which a transformation
required in a given syntactic configuration
failed to apply would block, causing the result
to be ruled out as ungrammatical (op. cit.,
p. 138).
In more recent theories (e.g. the &amp;quot;Extended
Standard Theory&amp;quot; (EST) of Chomsky (1977) and
Chomsky and Lasnik (1977)) all transformations
are optional, freely ordered and may apply at
random. Those derivations in which a
transformation misapplies are ruled out by
independent conditions on the structures
produced by the operation of the
transformational component (Chomsky (1977,
p. 76)). These frameworks adopt a &amp;quot;generate
and test&amp;quot; approach, wherein the misapplication
of transformations during the course of a
derivation (e.g. the failure of a required
transformation to apply (ST, EST) or the
application of a transformation in a prohibited
syntactic configuration (EST)) will result in a
rejection of this possible derivation. The
application of different optional
transformations results in the production of a
variety of surface forms.
There are two reasons why we do not use this
generate and test approach. The first is that
it is computationally inefficient to allow the
transformations to apply at random and to check
the result to make sure that it is grammatical.
More importantly, we view the transformations
as tools to be used by a process outside the
sentence generator . itself. That is, an
external process determines what the surface
syntactic form of a given base structure should
be; the transformations are not independent
entities which make this decision on their own.
For example, a focus mechanism should be able
to select or prohibit passive sentences, a
dialogue mechanism should be able to cause
agent-deletion, and so on. In our application,
tutorial programs select the characteristics of
the sentences to be produced on the basis of
the syntactic rule or rules being exercised in
the particular tutorial.
The Structural Change of each transformation
consists of one or more functions, analogous to
the transformational elementaries of
traditional transformational theory (Chomsky
(1955, pp. 402-407, Section 93.1)). We have
</bodyText>
<page confidence="0.998822">
154
</page>
<bodyText confidence="0.9999368125">
not adopted the restriction on the Structural
Change of transformations proposed by more
recent work in generative grammar (e.g. Chomsky
(1980, p. 4)) which prohibits &amp;quot;compounding of
elementaries&amp;quot;; i.e. which limits the Structural
Change of a transformation to a single
operation. This would require breaking up many
transformations into several transformations,
each of which would have to apply in the
derivation of a particular syntactic
construction rather than having one
transformation that performs the required
operations. Inasmuch as we are interested in
utilizing the generative capacity of
transformational grammar to produce specific
constructions, this break up of more general,
overarching transformations into smaller, more
specific operations is undesirable.
The operations that are performed by the rules
are a combination of classic transformational
operations (substitution, adjunction, deletion,
insertion of non-lexical elements such as
&amp;quot;there&amp;quot; and &amp;quot;do&amp;quot;) and operations that linguists
sometimes relegate to the base or post-
transformational processes (insertion of
pronouns, morphing of inflected forms). By
making these operations rule-specific, many
related forms can be produced from the same
base tree and the control mechanisms outside
the generator itself can specify which forms
are to he produced. (Figure 3 shows some of
the transformations currently in the system.)
</bodyText>
<table confidence="0.8152229">
SUBJECT-AUX-INVERSION
SD: (S (FEATS (TRANS.1)) COMP (FEATS (WH.+))
2
(S N&apos;&apos; TNS (OPT NODE (FEATS (M.+)))))
34 5 6
SC: (DeleteNode 6)
(DeleteNode 5)
(LChomsky 2 6)
(LChomsky 2 5)
Condition: [NOT (EQ (QUOTE +)
(FeatureValue (QUOTE WH)
(RootFeats 4)
RELATIVE-PRONOUN-SPELL-OUT [REPEATABLE]
SD: (S&apos; XX (N&apos;&apos; N&apos;&apos; (S&apos; (COMP X
1 2 3 4 5
(FEATS (WH +))
SC: (DeleteSons 6)
(LSon 6 (if (EQ &apos;+(GetFeat 6 &apos; HUMAN))
then who
else &apos;which))
</table>
<figureCaption confidence="0.992093">
Figure 3. Sample Transformations
</figureCaption>
<bodyText confidence="0.999848268292683">
Those transformations which affect the
syntactic form of sentences are applied
cyclically (see (Chomsky (1965, p. 143) for
more details). Thus transformations apply from
the &amp;quot;bottom up&amp;quot; during the course of a
derivation, applying first in the most embedded
clause and then working upwards until the
matrix clause is reached. Within each cycle
the transformations are strictly (and
extrinsically) ordered. In addition to the
cyclic syntactic transformations there exists a
set of post-cyclic transformations, which apply
after all the cyclic syntactic transformations
have applied. These post-cyclic
transformations, whose domain of operation
ranges over the entire syntactic tree, supply
the correct morphological forms of all lexical
and grammatical items. This includes giving
the correct plural forms of nouns, the
inflected forms of verbs, the proper forms of
pronouns (e.g. &amp;quot;he,&amp;quot; &amp;quot;she&amp;quot; and &amp;quot;they&amp;quot; in
subject position and &amp;quot;him,&amp;quot; &amp;quot;her,&amp;quot; and &amp;quot;them&amp;quot;
in object position), etc. While it has been
relatively rare in recent transformational
analyses to utilize transformations to effect
this type of morphological &amp;quot;spell-out,&amp;quot; this
mechanism was first proposed in the earliest
work in generative grammar (Chomsky (1955)).
Moreover, recent work by George (1980a; 1980b)
and Ingria (in preparation) suggests that this
is indeed the correct way of handling such
morphological processes.
The transformations as a whole are divided up
into &amp;quot;families&amp;quot; of related transformations.
For example, there is a family of
transformations which apply in the derivation
of questions (all beginning with the prefix
WH-); there is a family of morphing
transformations (similarly beginning with the
flagged mnemonic prefix MORPH-). These
&amp;quot;families&amp;quot; of transformations provide detailed
control over the generation process. For
example, all transformations of the WH- family
will apply to a single syntactic position that
may be questioned (e.g. subject, direct object,
object of preposition, etc.), resulting in
questions of the form &amp;quot;Who died&amp;quot; and &amp;quot;To whom
did she speak.&amp;quot; This familial characterization
of transformations is similar to the classical
transformational approach (Chomsky (1955,
p. 381, Section 90.1)) wherein families of
transformations were first postulated, because
of the condition imposed within that framework
that each transformation must be a single-
valued mapping.
Our current sentence generator produces
declarative sentences, passive sentences (with
and without agent deletion), dative movement
sentences, yes-no questions and wh-questions
(including multiple-wh questions such as &amp;quot;Who
gave what to whom?&amp;quot;), there-insertion
sentences, negated sentences (including both
contracted and emphatic forms), relative
clauses, finite and infinitival complements
(e.g., &amp;quot;The teacher wanted Kathy to hurry.&amp;quot;),
imperative sentences, various complex
auxiliaries (progressive, perfective, and
modals), predicate adjectives, and predicate
nominals. Although not all of these
constructions are handled in complete
generality, the generator produces a very large
and natural subset of English. It is important
to note that the interactions among all these
transformations have been taken into account,
so that any meaningful combination of them will
produce a meaningful, grammatical sentence.
(Appendix A lists some of the sentences which
have been produced by the interaction of
various transformations.)
In our application, there is a need to generate
ungrammatical utterances occasionally (for
example, in a tutorial exercising the student&apos;s
</bodyText>
<page confidence="0.998174">
155
</page>
<bodyText confidence="0.999939157894737">
ability to judge the grammaticality of
utterances). To this end, we have developed an
additional set of transformations that can be
used to generate utterances which mimic the
ungrammatical forms found in the writing of the
language delayed populations for which this
system is intended. For example, deaf and
hearing-impaired children often have difficulty
with negative sentences, and replace the not of
Standard English negation with no and/or place
the negative element in positions in which it
does not occur in Standard English (e.g. &amp;quot;The
mouse is no a big animal,&amp;quot; &amp;quot;The girl no has
gone,&amp;quot; &amp;quot;Dogs not can build trees&amp;quot;). The fact
that these ungrammatical forms may be modelled
with transformations is highly significant, and
lends support to the claim (Chapman (1974),
Fromkin (1973)) that ungrammatical utterances
are rule-driven.
</bodyText>
<sectionHeader confidence="0.971107" genericHeader="method">
4. HIGHER LEVELS OF CONTROL
</sectionHeader>
<bodyText confidence="0.999844810810811">
In order to manage the creation of the base
trees and the application of the
transformational rules, we have developed
several layers of control mechanisms. The
first of these is a set of constraints that
directs the operation of the base comoonent and
indicates which transformations to try. A
transformational constraint merely turns a
particular transformation on or off. The fact
that a transformation is turned on does not
guarantee that it will apply; it merely
indicates that the Structural Description and
Condition of that transformation are to be
tried. Base constraints can have either atomic
indicators or a list of constraints as their
values. For example, the direct object
constraint (DIROBJ (PER 3)(NU PL) â¢ â¢ â¢)
specifies all the base constraints necessary to
produce the N&apos;&apos; subtree for the direct object
position in the base structure.
There are a number of dependencies which exist
among constraints. For example, if the
transformational constraint for the passive
transformation is turned on, then the base
component must be instructed to produce a
direct object and to choose a main verb that
may be passivized; if the base constraint for a
direct object is turned off, then the base
constraint for an indirect object must be
turned off as well. A data base of
implications controls the application of
constraints so that whenever a constraint is
set (or turned off), the base and/or
transformational constraints that its value
implies are also set.
The notion of a particular syntactic
construction transcends the distinction between
base and transformational constraints. The
&amp;quot;natural&amp;quot; specification of a syntactic
construction such as passive or relative clause
should be made without requiring detailed
knowledge of the constraints or &apos;their
implications. In addition, one might want to
request, say, a relative clause on the subject,
without specifying whether the target of
relativization is to be the subject or object
of the embedded clause.
We have developed a data base of structures
called synspecs (for &amp;quot;syntactic
specifications&amp;quot;) which embody, at a very high
level, the notion of a syntactic construction.
These constructions cannot be identified with a
single constraint or its implied constraints.
(Implications specify necessary dependencies;
synspecs specify possible but not necessary
choices on the part of the system designers
about what combinations of constraints should
be invoked under a general name.) A synspec
can contain an element of choice. The choice
can be made by any user-defined function,
though in our practice most of the choices are
made at random. One example of this is a
synspec called wh-question which decides which
of the synspecs that actually set up the
constraints for a wh-question (question-on-
subject, question-on-object, question-on-
dative, etc.) should be used. The synspecs
also provide convenient hooks on which to hang
other information associated with a syntactic
construction: sentences exemplifying the
construction, a description of the construction
for purposes of documentation, etc. Figure 4
snows how several of the synspecs look when
printed for the user.
</bodyText>
<figure confidence="0.9068892">
wh -question
Compute : (PickOne &apos;(question-on-subject
question-on-object
question-on-dative))
Description : (This SynSpec will create any
one of the questions with
WB-words.)
second-person-imperative
BaseConstraints : ((IMPERATIVE . 2)
(TNS))
TransConstraints :
((REQUEST-VOCATIVE-DELETION . +)
(REQUEST-EXCLAMATION-INSERTION . +)
(REQUEST-YOU-DELETION . +))
Examples : (&amp;quot;Open the door!&amp;quot;)
</figure>
<figureCaption confidence="0.99989">
Figure 4. Sample SynSpecs
</figureCaption>
<bodyText confidence="0.999814875">
Synspecs are invoked through a simple mechanism
that is available to the tutorial component of
the system. Each tutorial specifies the range
of constructions relevant to its topic and
chooses among them for each sentence that is to
be generated. To produce related sentences,
the generator is restarted at the
transformational component (using the previous
base tree) after the synspecs specifying the
relationship have been processed.)
Just as constraints have implications, so do
synspecs. The relationships that hold among
synspecs include exclusion (e.g. transitive-
sentence excludes predicate-nominal-sentence),
requirement (e.g. extraposed-relative requires
relative-clause-on-subject or relative-clause-
on-object), and permission (e.g. predicate-
adverb-sentence allows there-insertion). A
mechanism similar to the implications for
constraints refines a set of candidate synspecs
so that the user (or the tutorials) can make
choices which are consistent. Thus the user
does not have to know, understand, or remember
which combinations of choices are allowed.
</bodyText>
<page confidence="0.9972695">
156
157
</page>
<bodyText confidence="0.998340277777778">
Once some constraints have been set (either
directly or through synspecs), a command can be
given to generate a sentence. The generator
first assigns values to the constraints that
the user did not specify; the values chosen are
guaranteed to be compatible with the previous
choices, and the implications of these choices
ensure that contradictory specifications cannot
be made. Once all constraints have been set, a
base tree is generated and saved before the
transformations are applied. Because the base
structure has been saved, the transformational
constraints can be reset and the generator
called to start at the transformational
component, producing a different surface
sentence from the same base tree. As many
sentences as are wanted can be produced in this
way.
</bodyText>
<sectionHeader confidence="0.995142" genericHeader="method">
5. DEVELOPMENT TOOLS
</sectionHeader>
<bodyText confidence="0.999688891304348">
As one side effect of the development of the
generative system, we have built a debugging
environment called the syntactic playground in
which a user can develop and test various
components of the generator. This environment
has become more important than the tutorials in
testing syntactic hypotheses and exploring the
power of the language generator. In it,
dictionary entries, transformations,
implications and synspecs can be created,
edited, and saved using interactive routines
that ensure the correct format of those data
types. It is also possible here to give
commands to activate synspecs; this operation
uses exactly the same interface as programs
(e.g. tutorials) that use the generator.
Commands exist in the playground to set base
constraints to specific values and to turn
individual transformations on and off without
activating the implications of those
operations. This allows the system programmer
or linguist to have complete control over all
aspects of the generation process.
Because the full power of the Interlisp system
is available to the playground user, the base
tree can be edited directly, as can any version
of the tree during the derivation process.
Transformations can also be &amp;quot;broken&amp;quot; like
functions, so that when a transformation is
about to be tried the generator goes into a
&amp;quot;break&amp;quot; and conducts an interactive dialogue
with the user who can control the matching of
the Structural Description, examine the result
of the match, allow (or not) the application of
the Structural Change, edit the transformation
and try it again, and perform many of the
operations that are available in the general
playground. In addition to the
transformational break package there is a trace
option which, if used, prints the constraints
selected by the system, the words, and the
transformations that are tried as they apply or
fail. The playground has proved to be a
powerful tool for exploring the interaction of
various rules and the efficacy of the whole
generation package.
</bodyText>
<sectionHeader confidence="0.996074" genericHeader="method">
6. CONCLUSION
</sectionHeader>
<bodyText confidence="0.998485444444444">
This is the most syntactically powerful
generator that we know of. It oroduces sets of
related sentences maintaining detailed
knowledge of the choices that have been made
and the structure(s) that have been produced.
Because the notion of &amp;quot;syntactic construction&amp;quot;
is embodied in an appropriately high level of
syntactic specification, the generator can be
externally controlled. It is fast, efficient,
and very easy to modify and maintain; it has
been implemented in both Interlisp on a
DECSystem-20 and UCSD Pascal on the Cromemco
and Apple computers. It forms the core of a
set of tutorial programs for English now being
used by deaf children in a classroom setting,
and thus is one of the first applications of
computational linguistics to be used in an
actual educational environment.
</bodyText>
<sectionHeader confidence="0.998446" genericHeader="method">
References
</sectionHeader>
<reference confidence="0.982753403225806">
Bresnan, Joan (1975) &amp;quot;Transformations and
Categories in Syntax,&amp;quot; in R. Butts and
J. Hintikka, eds. Proceedings of the Fifth
International Congress of Logic, KiERodcilary
and Philosophy of scrghce, University of
Oitern Ontario, London, Ontario.
Chapman, Robin S. (1974) The Interpretation of
Deviant Sentences 177 English: A
Transformational Approach, Janua Linguarum,
Series Minor, Volume 189, Mouton, The Hague.
Chomsky, Noam (1955) The Logical Structure of
Linguistic Theory, unpublished --Fira5iarc7apt,
microfilmed, MIT-IAbraries, partially published
by Plenum Press, New York, 1975.
Chomsky, Noam (1965) Aspects of the Theory of
Syntax, MIT Press, Cambridge, Massiausetts.
Chomsky, Noam (1970) &amp;quot;Remarks on
Nominalization&amp;quot;, in R. A. Jacobs and P. S.
Rosenbaum, eds., Readings in English
Transformational Grammar, Ginn and Co.,
Waltham, Mass.
Chomsky, Noam (1973) &amp;quot;Conditions on
Transformations&amp;quot;, in S. A. Anderson and
P. Kiparsky, eds., A Festschrift for Morris
Halle, Holt, Rinehart and Winston, New Yo0F7---
Chomsky, Noam (1977) &amp;quot;On EH-Movement&amp;quot;, in
P. Culicover, T. Wasow and A. Akmajian, eds.
Formal Syntax, Academic Press, Inc., New York.
Chomsky, Noam (1980) &amp;quot;On Binding,&amp;quot; Linguistic
Inquiry 11.
Chomsky, Noam and Howard Lasnik (1977) &amp;quot;Filters
and Control&amp;quot;, Linguistic ,Inquiry 8.
Fromkin, Victoria A. (1973) Speech Errors as
Linguistic Evidence, Janua L nuaruni,--gelies
major, Volume 77, Mouton, The Hague.
George, Leland M. (1980a) Analogical
Generalization in Natural Language Syntax,
unpublished Doctoral Dissertation, MIT.
George, Leland M. (1980b) Analogical
Generalizations of Natural Language Syntax,
unpublished manuscript, MIT.
/ngria, Robert (in preparation) Sentential
Complementation in Modern Greek, Doctoral
Dissertation, MIT.
Jackendoff, Ray S. (1974) &amp;quot;Introduction to the
X Convention&amp;quot;, distributed by Indiana
University Linguistics Club, Bloomington.
Jackendoff, Ray S. (1978) X&apos; Syntax: A Study of
Phrase Structure, Linguistic Inquiry Monograa
No. 2, MIT Press, Cambridge, Mass.
Appendix A: Sample Sentences
1. Transitive Sentences
1. The bullies chased the girl.
2. What did the bullies do to the
girl?
3. They chased her.
4. Who chased the girl?
5. The bullies chased her.
6. Who did they chase?
7. Whom did they chase?
8. They chased the girl.
9. How many bullies chased the
girl?
10. Eight bullies chased the girl.
11. How many bullies chased her?
12. Eight bullies chased her.
13. Who got chased?
14. The girl got chased.
15. She was chased by the bullies.
16. The girl was being chased by
the bullies.
2. Intransitive Sentences
1. What did the girl do?
2. She cried.
3. who cried?
4. The girl cried.
3. Indirect Discourse
1. Dan said that the girl is sad.
2. Dan said that she is sad.
3. Who said that the girl is sad?
4. Transitive Sentence with Indirect
Object
1. The generous boy gave a doll to
the girl.
2. The generous boy gave the girl
a doll.
3. The girl was given a doll.
4. A doll was given to the girl.
5. Who gave the girl a doll?
6. Who gave what to whom?
7. what did the generous boy give
the girl?
8. He gave her a doll.
9. What did the generous boy give
to the girl?
10. He gave a doll to her.
11. Who gave a doll to the girl?
12. Who gave the girl a doll?
13. Which boy gave the girl a doll?
14. The generous boy gave her a
doll.
15. Which boy gave a doll to the
girl?
16. The generous boy gave it to
her.
17. How many dolls did the generous
boy give the girl?
18. He gave her one doll.
S. Comparative Sentences
1. The soldier was better.
2. The gentleman will be more
unhappy.
3. Alicia is hungrier than Jake.
4. The children were angrier than
Andy.
6. Superlative Sentences
1. A policeman caught the nicest
butterflies.
2. A sheepdog was the sickest pet.
3. The fire chief looks most
generous.
4. The smartest man swore.
5. The oldest bulldog broke the
dolls.
</reference>
<bodyText confidence="0.893859333333333">
7. Sentences with Infinitives
The teacher wanted Kathy to
hurry.
The gentleman promised the lady
to close the door.
The girls were hard to
</bodyText>
<sectionHeader confidence="0.6408495" genericHeader="method">
ridicule.
8. Relative Clauses
</sectionHeader>
<reference confidence="0.997369780487805">
1. Whoever embraced the kids will
embrace the ladies.
2. The girl who was intelligent
cheated the adults.
3. The woman who greased the
tricycle mumbled.
4. The teacher who lost the
bulldogs swears.
9. Negative Sentences
1. Kim won&apos;t help.
2. Claire didn&apos;t help.
3. The children won&apos;t shout.
4. Do not slap the poodles.
5. Do not cry.
10. Varieties of Quantifiers
1. No toy breaks.
2. Some excited boys kissed the
women.
3. Some hungry people eat.
4. Two men cried.
5. Every new toy broke.
6. Not every man slips.
7. The boy won&apos;t give the dogs any
oranges.
8. The girl doesn&apos;t see any cats.
9. The old men didn&apos;t tell the
boys any thing.
10. The girl didn&apos;t love any body.
11. Varieties of Pronouns
1. Bette is the sad one.
2. Gloria is the happy one.
3. Kevin is the saddest.
4. Kathy is the most cheerful.
5. Varda liked the sweet apple.
6. Varda liked the sweet one.
12. THERE Sentences
1. There were some toys in the
dirt.
2. There were no toys in the dirt.
3. There weren&apos;t any toys in the
dirt.
</reference>
<page confidence="0.997088">
158
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.248854">
<title confidence="0.932897">Madele inc Bates</title>
<note confidence="0.455285333333333">Bolt Beranek and Newman, Inc. Bober t Ingria Department of Linguistics, MIT</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Joan Bresnan</author>
</authors>
<title>Transformations and Categories in Syntax,&amp;quot;</title>
<date>1975</date>
<journal>Linguistic Inquiry Monograa</journal>
<booktitle>Proceedings of the Fifth International Congress of Logic, KiERodcilary and Philosophy of scrghce, University of Oitern Ontario,</booktitle>
<volume>2</volume>
<editor>in R. Butts and J. Hintikka, eds.</editor>
<publisher>Plenum Press,</publisher>
<institution>Indiana University Linguistics Club, Bloomington.</institution>
<location>London, Ontario. Chapman, Robin</location>
<contexts>
<context position="2444" citStr="Bresnan (1975)" startWordPosition="389" endWordPosition="390"> that the student is attempting. The transformational generator is composed of three major parts: a base component that produces base trees, a transformer that applies transformational rules to the trees to derive a surface tree, and a set of mechanisms to control the operation of the first two components. We will discuss each of the components of this system separately. 2. THE BASE COMPONENT The base component is a set of functions that implicitly embody context free rules for creating a tree structure (phrase marker) in the X-bar framework (as discussed by Chomsky (1970), Jackendoff (1974), Bresnan (1975) and others.) In this system, the major syntactic categories (N(oun), V(erb), A(djective) and P(reposition)) are treated as complex symbols which are decomposable into the features f+NI and (+V]. This yields the following crossclassification of these categories: This work was sponsored by BEH grant kG007904514. Figure 1. Features in the X-bar System The feature &amp;quot;N&amp;quot; marks a given category as &amp;quot;nounlike&amp;quot; (and thus corresponds to the traditional grammatical notion of &amp;quot;substantive&amp;quot;) while &amp;quot;V&amp;quot; marks a category as &amp;quot;verblike.&amp;quot; Nouns and Adjectives are (+N) because they share certain properties (e.g. A</context>
<context position="5882" citStr="Bresnan (1975)" startWordPosition="957" endWordPosition="958">.) 153 An example of the internal structure of the P&amp;quot; corresponding to the phrase &amp;quot;to the sad boys&amp;quot; is given below: P&amp;quot; [ -V -N ] P&apos; ( -V -N P [ -V -N ] to N&amp;quot; ( +N -V PER.3 +DEF wELPL . +HUMAN GENDER.MALE ) DET [ +DEF the A&amp;quot; [ +N +V I A [ +N +v ] A [ +N +V sad NÂ° +N -V PER.3 +DEF NU.PL +HUMAN GENDER.MALE ] N [ +N -V PER.3 +DEF NU.PL +HUMAN GENDER.MALE 1 boy Figure 2. Part of A Sample Base Structure This system of cross-classification by features and by rank permits the creation of transformations which can refer to a specific rank or feature without referring to a specific major category. (See Bresnan (1975) for further discussion of this point.) For example, the transformation which fronts WHwords to form WE-Questions treats any X&amp;quot; category as its target and, hence, can be used to question any of the major categories (e.g. A&amp;quot;--&amp;quot;how big is it?&amp;quot;; N&amp;quot;--&amp;quot;what did they do?&amp;quot; &amp;quot;which men left?&amp;quot;; P&amp;quot;--&amp;quot;to whom did you give it?&amp;quot;). Similarly, the transformation which marks Accusative Case on pronouns applies only to those 1,1&amp;quot;s which follow a [-NI category; i.e. only to those 14&amp;quot;s which are the objects of Verbs or Prepositions. This allows us to create extremely versatile transformations which apply in a var</context>
</contexts>
<marker>Bresnan, 1975</marker>
<rawString> Bresnan, Joan (1975) &amp;quot;Transformations and Categories in Syntax,&amp;quot; in R. Butts and J. Hintikka, eds. Proceedings of the Fifth International Congress of Logic, KiERodcilary and Philosophy of scrghce, University of Oitern Ontario, London, Ontario. Chapman, Robin S. (1974) The Interpretation of Deviant Sentences 177 English: A Transformational Approach, Janua Linguarum, Series Minor, Volume 189, Mouton, The Hague. Chomsky, Noam (1955) The Logical Structure of Linguistic Theory, unpublished --Fira5iarc7apt, microfilmed, MIT-IAbraries, partially published by Plenum Press, New York, 1975. Chomsky, Noam (1965) Aspects of the Theory of Syntax, MIT Press, Cambridge, Massiausetts. Chomsky, Noam (1970) &amp;quot;Remarks on Nominalization&amp;quot;, in R. A. Jacobs and P. S. Rosenbaum, eds., Readings in English Transformational Grammar, Ginn and Co., Waltham, Mass. Chomsky, Noam (1973) &amp;quot;Conditions on Transformations&amp;quot;, in S. A. Anderson and P. Kiparsky, eds., A Festschrift for Morris Halle, Holt, Rinehart and Winston, New Yo0F7---Chomsky, Noam (1977) &amp;quot;On EH-Movement&amp;quot;, in P. Culicover, T. Wasow and A. Akmajian, eds. Formal Syntax, Academic Press, Inc., New York. Chomsky, Noam (1980) &amp;quot;On Binding,&amp;quot; Linguistic Inquiry 11. Chomsky, Noam and Howard Lasnik (1977) &amp;quot;Filters and Control&amp;quot;, Linguistic ,Inquiry 8. Fromkin, Victoria A. (1973) Speech Errors as Linguistic Evidence, Janua L nuaruni,--gelies major, Volume 77, Mouton, The Hague. George, Leland M. (1980a) Analogical Generalization in Natural Language Syntax, unpublished Doctoral Dissertation, MIT. George, Leland M. (1980b) Analogical Generalizations of Natural Language Syntax, unpublished manuscript, MIT. /ngria, Robert (in preparation) Sentential Complementation in Modern Greek, Doctoral Dissertation, MIT. Jackendoff, Ray S. (1974) &amp;quot;Introduction to the X Convention&amp;quot;, distributed by Indiana University Linguistics Club, Bloomington. Jackendoff, Ray S. (1978) X&apos; Syntax: A Study of Phrase Structure, Linguistic Inquiry Monograa No. 2, MIT Press, Cambridge, Mass. Appendix A: Sample Sentences</rawString>
</citation>
<citation valid="false">
<institution>Transitive Sentences</institution>
<marker>1.</marker>
<rawString>Transitive Sentences</rawString>
</citation>
<citation valid="false">
<title>The bullies chased the girl.</title>
<marker>1.</marker>
<rawString>The bullies chased the girl.</rawString>
</citation>
<citation valid="false">
<title>What did the bullies do to the girl?</title>
<marker>2.</marker>
<rawString>What did the bullies do to the girl?</rawString>
</citation>
<citation valid="false">
<note>They chased her.</note>
<marker>3.</marker>
<rawString>They chased her.</rawString>
</citation>
<citation valid="false">
<title>Who chased the girl?</title>
<marker>4.</marker>
<rawString>Who chased the girl?</rawString>
</citation>
<citation valid="false">
<title>The bullies chased her.</title>
<marker>5.</marker>
<rawString>The bullies chased her.</rawString>
</citation>
<citation valid="false">
<title>Who did they chase?</title>
<marker>6.</marker>
<rawString>Who did they chase?</rawString>
</citation>
<citation valid="false">
<title>Whom did they chase?</title>
<marker>7.</marker>
<rawString>Whom did they chase?</rawString>
</citation>
<citation valid="false">
<title>They chased the girl.</title>
<marker>8.</marker>
<rawString>They chased the girl.</rawString>
</citation>
<citation valid="false">
<title>How many bullies chased the girl?</title>
<marker>9.</marker>
<rawString>How many bullies chased the girl?</rawString>
</citation>
<citation valid="false">
<title>Eight bullies chased the girl.</title>
<marker>10.</marker>
<rawString>Eight bullies chased the girl.</rawString>
</citation>
<citation valid="false">
<note>How many bullies chased her?</note>
<marker>11.</marker>
<rawString>How many bullies chased her?</rawString>
</citation>
<citation valid="false">
<note>Eight bullies chased her.</note>
<marker>12.</marker>
<rawString>Eight bullies chased her.</rawString>
</citation>
<citation valid="false">
<note>Who got chased?</note>
<marker>13.</marker>
<rawString>Who got chased?</rawString>
</citation>
<citation valid="false">
<title>The girl got chased.</title>
<marker>14.</marker>
<rawString>The girl got chased.</rawString>
</citation>
<citation valid="false">
<title>She was chased by the bullies.</title>
<marker>15.</marker>
<rawString>She was chased by the bullies.</rawString>
</citation>
<citation valid="false">
<title>The girl was being chased by the bullies.</title>
<marker>16.</marker>
<rawString>The girl was being chased by the bullies.</rawString>
</citation>
<citation valid="false">
<institution>Intransitive Sentences</institution>
<marker>2.</marker>
<rawString>Intransitive Sentences</rawString>
</citation>
<citation valid="false">
<title>What did the girl do?</title>
<marker>1.</marker>
<rawString>What did the girl do?</rawString>
</citation>
<citation valid="false">
<authors>
<author>She cried</author>
</authors>
<marker>2.</marker>
<rawString>She cried.</rawString>
</citation>
<citation valid="false">
<note>who cried?</note>
<marker>3.</marker>
<rawString>who cried?</rawString>
</citation>
<citation valid="false">
<title>The girl cried.</title>
<marker>4.</marker>
<rawString>The girl cried.</rawString>
</citation>
<citation valid="false">
<institution>Indirect Discourse</institution>
<marker>3.</marker>
<rawString>Indirect Discourse</rawString>
</citation>
<citation valid="false">
<authors>
<author>Dan said</author>
</authors>
<title>that the girl is sad.</title>
<marker>1.</marker>
<rawString>Dan said that the girl is sad.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Dan said</author>
</authors>
<title>that she is sad.</title>
<marker>2.</marker>
<rawString>Dan said that she is sad.</rawString>
</citation>
<citation valid="false">
<title>Who said that the girl is sad?</title>
<marker>3.</marker>
<rawString>Who said that the girl is sad?</rawString>
</citation>
<citation valid="false">
<title>Transitive Sentence with Indirect Object</title>
<marker>4.</marker>
<rawString>Transitive Sentence with Indirect Object</rawString>
</citation>
<citation valid="false">
<title>The generous boy gave a doll to the girl.</title>
<marker>1.</marker>
<rawString>The generous boy gave a doll to the girl.</rawString>
</citation>
<citation valid="false">
<title>The generous boy gave the girl a doll.</title>
<marker>2.</marker>
<rawString>The generous boy gave the girl a doll.</rawString>
</citation>
<citation valid="false">
<title>The girl was given a doll.</title>
<marker>3.</marker>
<rawString>The girl was given a doll.</rawString>
</citation>
<citation valid="false">
<title>A doll was given to the girl.</title>
<marker>4.</marker>
<rawString>A doll was given to the girl.</rawString>
</citation>
<citation valid="false">
<title>Who gave the girl a doll?</title>
<marker>5.</marker>
<rawString>Who gave the girl a doll?</rawString>
</citation>
<citation valid="false">
<title>Who gave what to whom?</title>
<marker>6.</marker>
<rawString>Who gave what to whom?</rawString>
</citation>
<citation valid="false">
<title>what did the generous boy give the girl?</title>
<marker>7.</marker>
<rawString>what did the generous boy give the girl?</rawString>
</citation>
<citation valid="false">
<note>He gave her a doll.</note>
<marker>8.</marker>
<rawString>He gave her a doll.</rawString>
</citation>
<citation valid="false">
<title>What did the generous boy give to the girl?</title>
<marker>9.</marker>
<rawString>What did the generous boy give to the girl?</rawString>
</citation>
<citation valid="false">
<title>He gave a doll to her.</title>
<marker>10.</marker>
<rawString>He gave a doll to her.</rawString>
</citation>
<citation valid="false">
<title>Who gave a doll to the girl?</title>
<marker>11.</marker>
<rawString>Who gave a doll to the girl?</rawString>
</citation>
<citation valid="false">
<title>Who gave the girl a doll?</title>
<marker>12.</marker>
<rawString>Who gave the girl a doll?</rawString>
</citation>
<citation valid="false">
<authors>
<author>Which boy</author>
</authors>
<title>gave the girl a doll?</title>
<marker>13.</marker>
<rawString>Which boy gave the girl a doll?</rawString>
</citation>
<citation valid="false">
<title>The generous boy gave her a doll.</title>
<marker>14.</marker>
<rawString>The generous boy gave her a doll.</rawString>
</citation>
<citation valid="false">
<title>Which boy gave a doll to the girl?</title>
<marker>15.</marker>
<rawString>Which boy gave a doll to the girl?</rawString>
</citation>
<citation valid="false">
<title>The generous boy gave it to her.</title>
<marker>16.</marker>
<rawString>The generous boy gave it to her.</rawString>
</citation>
<citation valid="false">
<title>How many dolls did the generous boy give the girl?</title>
<marker>17.</marker>
<rawString>How many dolls did the generous boy give the girl?</rawString>
</citation>
<citation valid="false">
<title>He gave her one doll.</title>
<journal>S. Comparative Sentences</journal>
<marker>18.</marker>
<rawString>He gave her one doll. S. Comparative Sentences</rawString>
</citation>
<citation valid="false">
<title>The soldier was better.</title>
<marker>1.</marker>
<rawString>The soldier was better.</rawString>
</citation>
<citation valid="false">
<title>The gentleman will be more unhappy.</title>
<marker>2.</marker>
<rawString>The gentleman will be more unhappy.</rawString>
</citation>
<citation valid="false">
<title>Alicia is hungrier than Jake.</title>
<marker>3.</marker>
<rawString>Alicia is hungrier than Jake.</rawString>
</citation>
<citation valid="false">
<title>The children were angrier than Andy.</title>
<marker>4.</marker>
<rawString>The children were angrier than Andy.</rawString>
</citation>
<citation valid="false">
<institution>Superlative Sentences</institution>
<marker>6.</marker>
<rawString>Superlative Sentences</rawString>
</citation>
<citation valid="false">
<title>A policeman caught the nicest butterflies.</title>
<marker>1.</marker>
<rawString>A policeman caught the nicest butterflies.</rawString>
</citation>
<citation valid="false">
<title>A sheepdog was the sickest pet.</title>
<marker>2.</marker>
<rawString>A sheepdog was the sickest pet.</rawString>
</citation>
<citation valid="false">
<title>The fire chief looks most generous.</title>
<marker>3.</marker>
<rawString>The fire chief looks most generous.</rawString>
</citation>
<citation valid="false">
<title>The smartest man swore.</title>
<marker>4.</marker>
<rawString>The smartest man swore.</rawString>
</citation>
<citation valid="false">
<title>The oldest bulldog broke the dolls.</title>
<marker>5.</marker>
<rawString>The oldest bulldog broke the dolls.</rawString>
</citation>
<citation valid="false">
<title>Whoever embraced the kids will embrace the ladies.</title>
<marker>1.</marker>
<rawString>Whoever embraced the kids will embrace the ladies.</rawString>
</citation>
<citation valid="false">
<title>The girl who was intelligent cheated the adults.</title>
<marker>2.</marker>
<rawString>The girl who was intelligent cheated the adults.</rawString>
</citation>
<citation valid="false">
<title>The woman who greased the tricycle mumbled.</title>
<marker>3.</marker>
<rawString>The woman who greased the tricycle mumbled.</rawString>
</citation>
<citation valid="false">
<title>The teacher who lost the bulldogs swears.</title>
<marker>4.</marker>
<rawString>The teacher who lost the bulldogs swears.</rawString>
</citation>
<citation valid="false">
<institution>Negative Sentences</institution>
<marker>9.</marker>
<rawString>Negative Sentences</rawString>
</citation>
<citation valid="false">
<title>Kim won&apos;t help.</title>
<marker>1.</marker>
<rawString>Kim won&apos;t help.</rawString>
</citation>
<citation valid="false">
<title>Claire didn&apos;t help.</title>
<marker>2.</marker>
<rawString>Claire didn&apos;t help.</rawString>
</citation>
<citation valid="false">
<title>The children won&apos;t shout.</title>
<marker>3.</marker>
<rawString>The children won&apos;t shout.</rawString>
</citation>
<citation valid="false">
<title>Do not slap the poodles.</title>
<marker>4.</marker>
<rawString>Do not slap the poodles.</rawString>
</citation>
<citation valid="false">
<note>Do not cry.</note>
<marker>5.</marker>
<rawString>Do not cry.</rawString>
</citation>
<citation valid="false">
<institution>Varieties of Quantifiers</institution>
<marker>10.</marker>
<rawString>Varieties of Quantifiers</rawString>
</citation>
<citation valid="false">
<note>No toy breaks.</note>
<marker>1.</marker>
<rawString>No toy breaks.</rawString>
</citation>
<citation valid="false">
<note>Some excited boys kissed the women.</note>
<marker>2.</marker>
<rawString>Some excited boys kissed the women.</rawString>
</citation>
<citation valid="false">
<note>Some hungry people eat.</note>
<marker>3.</marker>
<rawString>Some hungry people eat.</rawString>
</citation>
<citation valid="false">
<note>Two men cried.</note>
<marker>4.</marker>
<rawString>Two men cried.</rawString>
</citation>
<citation valid="false">
<note>Every new toy broke.</note>
<marker>5.</marker>
<rawString>Every new toy broke.</rawString>
</citation>
<citation valid="false">
<title>Not every man slips.</title>
<marker>6.</marker>
<rawString>Not every man slips.</rawString>
</citation>
<citation valid="false">
<title>The boy won&apos;t give the dogs any oranges.</title>
<marker>7.</marker>
<rawString>The boy won&apos;t give the dogs any oranges.</rawString>
</citation>
<citation valid="false">
<title>The girl doesn&apos;t see any cats.</title>
<marker>8.</marker>
<rawString>The girl doesn&apos;t see any cats.</rawString>
</citation>
<citation valid="false">
<title>The old men didn&apos;t tell the boys any thing.</title>
<marker>9.</marker>
<rawString>The old men didn&apos;t tell the boys any thing.</rawString>
</citation>
<citation valid="false">
<title>The girl didn&apos;t love any body.</title>
<marker>10.</marker>
<rawString>The girl didn&apos;t love any body.</rawString>
</citation>
<citation valid="false">
<institution>Varieties of Pronouns</institution>
<marker>11.</marker>
<rawString>Varieties of Pronouns</rawString>
</citation>
<citation valid="false">
<title>Bette is the sad one.</title>
<marker>1.</marker>
<rawString>Bette is the sad one.</rawString>
</citation>
<citation valid="false">
<title>Gloria is the happy one.</title>
<marker>2.</marker>
<rawString>Gloria is the happy one.</rawString>
</citation>
<citation valid="false">
<title>Kevin is the saddest.</title>
<marker>3.</marker>
<rawString>Kevin is the saddest.</rawString>
</citation>
<citation valid="false">
<title>Kathy is the most cheerful.</title>
<marker>4.</marker>
<rawString>Kathy is the most cheerful.</rawString>
</citation>
<citation valid="false">
<title>Varda liked the sweet apple.</title>
<marker>5.</marker>
<rawString>Varda liked the sweet apple.</rawString>
</citation>
<citation valid="false">
<title>Varda liked the sweet one.</title>
<marker>6.</marker>
<rawString>Varda liked the sweet one.</rawString>
</citation>
<citation valid="false">
<institution>THERE Sentences</institution>
<marker>12.</marker>
<rawString>THERE Sentences</rawString>
</citation>
<citation valid="false">
<title>There were some toys in the dirt.</title>
<marker>1.</marker>
<rawString>There were some toys in the dirt.</rawString>
</citation>
<citation valid="false">
<title>There were no toys in the dirt.</title>
<marker>2.</marker>
<rawString>There were no toys in the dirt.</rawString>
</citation>
<citation valid="false">
<title>There weren&apos;t any toys in the dirt.</title>
<marker>3.</marker>
<rawString>There weren&apos;t any toys in the dirt.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>