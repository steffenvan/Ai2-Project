<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.999245">
A Logical Basis for the D Combinator and Normal Form in CCG
</title>
<author confidence="0.996993">
Frederick Hoyt and Jason Baldridge
</author>
<affiliation confidence="0.9935225">
The Department of Linguistics
The University of Texas at Austin
</affiliation>
<email confidence="0.997626">
{fmhoyt,jbaldrid}@mail.utexas.edu
</email>
<sectionHeader confidence="0.996654" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999162571428572">
The standard set of rules defined in Combina-
tory Categorial Grammar (CCG) fails to pro-
vide satisfactory analyses for a number of syn-
tactic structures found in natural languages.
These structures can be analyzed elegantly by
augmenting CCG with a class of rules based
on the combinator D (Curry and Feys, 1958).
We show two ways to derive the D rules:
one based on unary composition and the other
based on a logical characterization of CCG’s
rule base (Baldridge, 2002). We also show
how Eisner’s (1996) normal form constraints
follow from this logic, ensuring that the D
rules do not lead to spurious ambiguities.
</bodyText>
<sectionHeader confidence="0.998758" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999105608695652">
Combinatory Categorial Grammar (CCG, Steedman
(2000)) is a compositional, semantically transparent
formalism that is both linguistically expressive and
computationally tractable. It has been used for a va-
riety of tasks, such as wide-coverage parsing (Hock-
enmaier and Steedman, 2002; Clark and Curran,
2007), sentence realization (White, 2006), learning
semantic parsers (Zettlemoyer and Collins, 2007),
dialog systems (Kruijff et al., 2007), grammar engi-
neering (Beavers, 2004; Baldridge et al., 2007), and
modeling syntactic priming (Reitter et al., 2006).
A distinctive aspect of CCG is that it provides
a very flexible notion of constituency. This sup-
ports elegant analyses of several phenomena (e.g.,
coordination, long-distance extraction, and intona-
tion) and allows incremental parsing with the com-
petence grammar (Steedman, 2000). Here, we argue
that even with its flexibility, CCG as standardly de-
fined is not permissive enough for certain linguistic
constructions and greater incrementality. Following
Wittenburg (1987), we remedy this by adding a set
of rules based on the D combinator of combinatory
logic (Curry and Feys, 1958).
</bodyText>
<equation confidence="0.496151">
(1) x/(y/z):f y/w:g =:� x/(w/z):Ah.f(Ax.ghx)
</equation>
<bodyText confidence="0.999889066666667">
We show that CCG augmented with this rule im-
proves CCG’s empirical coverage by allowing better
analyses of modal verbs in English and causatives in
Spanish, and certain coordinate constructions.
The D rules are well-behaved; we show this by
deriving them both from unary composition and
from the logic defined by Baldridge (2002). Both
perspectives on D ensure that the new rules are com-
patible with normal form constraints (Eisner, 1996)
for controlling spurious ambiguity. The logic also
ensures that the new rules are subject to modalities
consistent with those defined by Baldridge and Krui-
jff (2003). Furthermore, we define a logic that pro-
duces Eisner’s constraints as grammar internal theo-
rems rather than parsing stipulations.
</bodyText>
<sectionHeader confidence="0.98986" genericHeader="method">
2 Combinatory Categorial Grammar
</sectionHeader>
<bodyText confidence="0.975659333333333">
CCG uses a universal set of syntactic rules based on
the B, T, and S combinators of combinatory logic
(Curry and Feys, 1958):
</bodyText>
<listItem confidence="0.98888">
(2) B: ((Bf)g)x = f(gx)
T: Txf = fx
S: ((Sf)g)x = fx(gx)
</listItem>
<bodyText confidence="0.995284333333333">
CCG functors are functions over strings of symbols,
so different linearized versions of each of the com-
binators have to be specified (ignoring S here):
</bodyText>
<page confidence="0.985895">
326
</page>
<note confidence="0.641358">
Proceedings of ACL-08: HLT, pages 326–334,
</note>
<affiliation confidence="0.438296">
Columbus, Ohio, USA, June 2008. c�2008 Association for Computational Linguistics
</affiliation>
<listItem confidence="0.790869">
(3) FA: (&gt;) x/?y y ⇒ x
</listItem>
<equation confidence="0.904826">
(&lt;) y x\?y ⇒ x
B: (&gt;B) x/oy y/oz ⇒ x/oz
(&lt;B) y\oz x\oy ⇒ x\.z
(&gt;B×) x/×y y\×z ⇒ x\×z
(&lt;B×) y/×z x\×y ⇒ x/×z
T: (&gt;T) x ⇒ t/i(t\ix)
(&lt;T) x ⇒ t\i(t/ix)
</equation>
<bodyText confidence="0.999803590909091">
The symbols {*, o, x, ·} are modalities that allow
subtypes of slashes to be defined; this in turn allows
the slashes on categories to be defined in a way that
allows them to be used (or not) with specific subsets
of the above rules. The rules of this multimodal ver-
sion of CCG (Baldridge, 2002; Baldridge and Krui-
jff, 2003) are derived as theorems of a Categorial
Type Logic (CTL, Moortgat (1997)).
This treats CCG as a compilation of CTL proofs,
providing a principled, grammar-internal basis for
restrictions on the CCG rules, transferring language-
particular restrictions on rule application to the lex-
icon, and allowing the CCG rules to be viewed
as grammatical universals (Baldridge and Kruijff,
2003; Steedman and Baldridge, To Appear).
These rules—especially the B rules—allow
derivations to be partially associative: given appro-
priate type assignments, a string ABC can be ana-
lyzed as either A(BC) or (AB)C. This associativity
leads to elegant analyses of phenomena that demand
more effort in less flexible frameworks. One of the
best known is “odd constituent” coordination:
</bodyText>
<listItem confidence="0.726777">
(4) Bob gave Stan a beer and Max a coke.
(5) I will buy and you will eat a cheeseburger.
</listItem>
<bodyText confidence="0.9996918">
The coordinated constituents are challenging be-
cause they are at odds with standardly assumed
phrase structure constituents. In CCG, such con-
stituents simply follow from the associativity added
by the B and T rules. For example, given the cate-
gory assignments in (6) and the abbreviations in (7),
(4) is analyzed as in (8) and (9). Each conjunct is
a pair of type-raised NPs combined by means of the
&gt;B-rule, deriving two composed constituents that
are arguments to the conjunction:1
</bodyText>
<page confidence="0.519284">
(6) i. Bob ` s/(s\np)
</page>
<footnote confidence="0.954856">
1We follow (Steedman, 2000) in assuming that type-raising
applies in the lexicon, and therefore that nominals such as Stan
</footnote>
<figure confidence="0.668149666666667">
ii. Stan, Max `
((s\np)/np)\(((s\np)/np)/np)
iii. a beer, a coke ` (s\np)\((s\np)/np)
iv. and ` (x\?x)/?x
v. gave ` ((s\np)/np)/np
(7) i. vp = s\np
ii. tv = (s\np)/np
iii. dtv = ((s\np)/np)/np
(8) Stan a beer and Max a coke
tv\dt vp\tv (x\?x)/?x tv\dt vp\tv
&lt;B &lt;B
vp\dt vp\dt
&gt;
vp\dt
(9) Bill gave Stan a beer and Max a coke
s/vp dt vp\dt
&lt;
&gt;
</figure>
<bodyText confidence="0.999369428571429">
Similarly, I will buy is derived with category s/np
by assuming the category (6i) for I and composing
that with both verbs in turn.
CCG’s approach is appealing because such con-
stituents are not odd at all: they simply follow from
the fact that CCG is a system of type-based gram-
matical inference that allows left associativity.
</bodyText>
<sectionHeader confidence="0.98729" genericHeader="method">
3 Linguistic Motivation for D
</sectionHeader>
<bodyText confidence="0.999845714285714">
CCG is only partially associative. Here, we discuss
several situations which require greater associativity
and thus cannot be given an adequate analysis with
CCG as standardly defined. These structures have
in common that a category of the form x|(y|z) must
combine with one of the form y|w—exactly the con-
figuration handled by the D schemata in (1).
</bodyText>
<subsectionHeader confidence="0.999191">
3.1 Cross-Conjunct Extraction
</subsectionHeader>
<bodyText confidence="0.9994735">
In the first situation, a question word is distributed
across auxiliary or subordinating verb categories:
</bodyText>
<listItem confidence="0.674923">
(10) ... what you can and what you must not base
your verdict on.
</listItem>
<bodyText confidence="0.942777">
We call this cross-conjunct extraction. It was noted
by Pickering and Barry (1993) for English, but to the
best of our knowledge it has not been treated in the
have type-raised lexical assignments. We also suppress seman-
tic representations in the derivations for the sake of space.
</bodyText>
<equation confidence="0.60718675">
(vp\dt)\(vp\dt)
&lt;
vp
s
</equation>
<page confidence="0.987307">
327
</page>
<bodyText confidence="0.999775125">
CCG literature, nor noted in other languages. The
problem it presents to CCG is clear in (11), which
shows the necessary derivation of (10) using stan-
dard multimodal category assignments. For the to-
kens of what to form constituents with you can and
you must not, they must must combine directly. The
problem is that these constituents (in bold) cannot be
created with the standard CCG combinators in (3).
</bodyText>
<figure confidence="0.8888275">
(11) s
vp/np
base your verdict on
(s/(vp/np))\(s/(vp/np))
(x\*x)/�x s/(vp/np)
and
s/(s/np) s/vp
what you must not
</figure>
<bodyText confidence="0.998936142857143">
The category for and is marked for non-associativity
with *, and thus combines with other expressions
only by function application (Baldridge, 2002). This
ensures that each conjunct is a discrete constituent.
Cross-conjunct extraction occurs in other lan-
guages as well, including Dutch (12), German (13),
Romanian (14), and Spanish (15):
</bodyText>
<equation confidence="0.402062888888889">
(12) dat
that
“... that I want to and that I can help her.”
(13) Wen
who
“Whom can I and whom may I still chose?”
(14) Gandeste-te cui Fe
consider.imper.2s-refl.2s who.dat what
¸si
</equation>
<bodyText confidence="0.6828358">
and
“Consider to whom you want and to whom you
are able to give what.”
me
me
</bodyText>
<subsectionHeader confidence="0.776598">
“You can and should explain it to me.”
</subsectionHeader>
<bodyText confidence="0.9999802">
It is thus a general phenomenon, not just a quirk
of English. While it could be handled with extra cat-
egories, such as (s/(vp/np))/(s/np) for what, this is
exactly the sort of strong-arm tactic that inclusion of
the standard B, T, and S rules is meant to avoid.
</bodyText>
<subsectionHeader confidence="0.999489">
3.2 English Auxiliary Verbs
</subsectionHeader>
<bodyText confidence="0.9990005">
The standard CCG analysis for English auxiliary
verbs is the type exemplified in (16) (Steedman,
2000, 68), interpreted as a unary operator over sen-
tence meanings (Gamut, 1991; Kratzer, 1991):
</bodyText>
<equation confidence="0.738379">
(16) can F- (s\np)/(s\np) : aPetax.QP(x)
</equation>
<bodyText confidence="0.9919">
However, this type is empirically underdetermined,
given a widely-noted set of generalizations suggest-
ing that auxiliaries and raising verbs take no subject
argument at all (Jacobson, 1990, a.o.).
</bodyText>
<listItem confidence="0.9519495">
(17) i. Lack of syntactic restrictions on the subject;
ii. Lack of semantic restrictions on the subject;
iii. Inheritance of selectional restrictions from the
subordinate predicate.
</listItem>
<bodyText confidence="0.700312">
Two arguments are made for (16). First, it is nec-
essary so that type-raised subjects can compose with
the auxiliary in extraction contexts, as in (18):
</bodyText>
<figure confidence="0.598335833333333">
(18) what I can eat
s/(s/np) s/vp vp/vp tv
s/vp &gt;B
&gt;B
s/np
&gt;
</figure>
<bodyText confidence="0.998865636363637">
Second, it is claimed to be necessary in order to ac-
count for subject-verb agreement, on the assumption
that agreement features are domain restrictions on
functors of type s\np (Steedman, 1992, 1996).
The first argument is the topic of this paper, and,
as we show below, is refuted by the use of the D-
combinator. The second argument is undermined by
examples like (19):
(19) There appear to have been [ neither [ any catas-
trophic consequences ], nor [ a drastic change in
the average age of retirement ] ] .
In (19), appear agrees with two negative-polarity-
sensitive NPs trapped inside a neither-nor coordi-
nate structure in which they are licensed. Ap-
pear therefore does not combine with them directly,
showing that the agreement relation need not be me-
diated by direct application of a subject argument.
We conclude, therefore, that the assignment of the
vp/vp type to English auxiliaries and modal verbs is
unsupported on both formal and linguistic grounds.
Following Jacobson (1990), a more empirically-
motivated assignment is (20):
</bodyText>
<figure confidence="0.927036032258065">
s/(vp/np)
s/(vp/np)
s/vp
s/(s/np)
what you can
ik
I
haar
her
wil
want
en
and
dat
that
ik
I
haar
her
moet
can
helpen.
help
kann
can
ich
I
und
and
wen
who
darf
may
ich
I
noch
still
wählen?
choose
vrei,
want.2s
cui
who.dat
Fe
what
po¸ti,
can.2s
s˘a dai.
to give.subj.2s
(15) Me
me
lo puedes
it can.2s
y
and
lo debes
it must.2s
explicar
ask
s
328
(20) can F- s/s : Apt.Qp
</figure>
<bodyText confidence="0.8696896">
Combining (20) with a type-raised subject presents
another instance of the structure in (1), where that
question words are represented as variable-binding
operators (Groenendijk and Stokhof, 1997):
(21) what I can
</bodyText>
<equation confidence="0.983727666666667">
s/(s/np) : AQet?yQy s/vp : APet.Pi0 s/s : Apt.Qp
� � �
&gt;s � ��
</equation>
<subsectionHeader confidence="0.992117">
3.3 The Spanish Causative Construction
</subsectionHeader>
<bodyText confidence="0.939984055555556">
The schema in (1) is also found in the widely-
studied Romance causative construction (Andrews
and Manning, 1999, a.m.o), illustrated in (22):
(22) Nos hizo leer El Señor de los Anillos.
cl.1p made.3s read the Lord of the Rings
“He made us read The Lord of the Rings.”
The aspect of the construction that is relevant here
is that the causative verb hacer appears to take an
object argument understood as the subject or agent
of the subordinate verb (the causee). However, it has
been argued that Spanish causative verbs do not in
fact take objects (Ackerman and Moore, 1999, and
refs therein). There are two arguments for this.
First, syntactic alternations that apply to object-
taking verbs, such as passivization and periphrasis
with subjunctive complements, do not apply to hacer
(Luján, 1980). Second, hacer specifies neither the
case form of the causee, nor any semantic entail-
ments with respect to it. These are instead deter-
mined by syntactic, semantic, and pragmatic factors,
such as transitivity, word order, animacy, gender, so-
cial prestige, and referential specificity (Finnemann,
1982, a.o). Thus, there is neither syntactic nor se-
mantic evidence that hacer takes an object argument.
On this basis, we assign hacer the category (23):
(23) hacer F- (s\np)/s : APAx.cause0Px
However, Spanish has examples of cross-conjunct
extraction in which hacer hosts clitics:
(24) No solo le ordenaron, sino que
not only cl.dat.3ms ordered.3p but
le hicieron Barrer la verada.
cl.dat.3ms made.3p sweep the sidewalk
“They not only ordered him to, but also made him
sweep the sidewalk.”
This shows another instance of the schema in (1),
which is undefined for any of the combinators in (3):
</bodyText>
<figure confidence="0.764762333333333">
(25) le hicieron barrer la verada
(*\*P)/((s\np)/np) (s\n&amp;*s (s|np)
&gt;s
</figure>
<subsectionHeader confidence="0.958893">
3.4 Analyses Based on D
</subsectionHeader>
<bodyText confidence="0.9996005">
The preceding data motivates adding D rules (we re-
turn to the distribution of the modalities below):
</bodyText>
<equation confidence="0.993762875">
(26) &gt;D x/o(y/oz) y/ow x/o(w/oz)
&gt;D× x/×(y/×z) y\×w x\×(w/×z)
&gt;Do× x/o(y\×z) y/·w x/o(w\×z)
&gt;D×o x/×(y\oz) y\·w x\×(w\�z)
(27) &lt;D y\�w x\o(y\oz) x\o(w\oz)
&lt;D× y/×w x\×(y\×z) x/×(w\×z)
&lt;Do× y\·w x\o(y/×z) x\.(w/×z)
&lt;D×* y/·w x\×(y/oz) x/×(w/oz)
</equation>
<bodyText confidence="0.9730116">
To illustrate with example (10), one application of
&gt;D allows you and can to combine when the auxil-
iary is given the principled type assignment s/s, and
another combines what with the result.
(28) what you can
</bodyText>
<equation confidence="0.99302975">
s/o(s/onp) s/o(s\×np) s/·s
&gt;D*×
s/o(s\×np)
s/o((s\×np)/onp)
</equation>
<bodyText confidence="0.999083">
The derivation then proceeds in the usual way.
Likewise, D handles the Spanish causative con-
structions (29) straightforwardly :
</bodyText>
<listItem confidence="0.400351">
(29) lo hice dormir
</listItem>
<equation confidence="0.860734666666667">
(s\np)/o((s\np)/onp) (s\np)/*s s/np
&gt;D
s\np
</equation>
<bodyText confidence="0.999703">
The D-rules thus provide straightforward analy-
ses of such constructions by delivering flexible con-
stituency while maintaining CCG’s committment to
low categorial ambiguity and semantic transparency.
</bodyText>
<sectionHeader confidence="0.985791" genericHeader="method">
4 Deriving Eisner Normal Form
</sectionHeader>
<bodyText confidence="0.9982875">
Adding new rules can have implications for parsing
efficiency. In this section, we show that the D rules
fit naturally within standard normal form constraints
for CCG parsing (Eisner, 1996), by providing both
</bodyText>
<equation confidence="0.562847">
&gt;D
(s\np)/o(s/onp)
&gt;
</equation>
<page confidence="0.991063">
329
</page>
<bodyText confidence="0.991454">
combinatory and logical bases for D. This addition-
ally allows Eisner’s normal form constraints to be
derived as grammar internal theorems.
</bodyText>
<subsectionHeader confidence="0.988627">
4.1 The Spurious Ambiguity Problem
</subsectionHeader>
<bodyText confidence="0.9773315">
CCG’s flexibility is useful for linguistic analy-
ses, but leads to spurious ambiguity (Wittenburg,
1987) due to the associativity introduced by the
B and T rules. This can incur a high compu-
tational cost which parsers must deal with. Sev-
eral techniques have been proposed for the prob-
lem (Wittenburg, 1987; Karttunen, 1989; Hepple
and Morrill, 1989; Eisner, 1996). The most com-
monly used are Karttunnen’s chart subsumption
check (White and Baldridge, 2003; Hockenmaier
and Steedman, 2002) and Eisner’s normal-form con-
straints (Bozsahin, 1998; Clark and Curran, 2007).
Eisner’s normal form, referred to here as Eisner
NF and paraphrased in (30), has the advantage of not
requiring comparisons of logical forms: it functions
purely on the syntactic types being combined.
</bodyText>
<listItem confidence="0.907673857142857">
(30) For a set S of semantically equivalent2 parse trees
for a string ABC, admit the unique parse tree such
that at least one of (i) or (ii) holds:
i. C is not the argument of (AB) resulting from
application of &gt;B1 +.
ii. A is not the argument of (BC) resulting from
application of &lt;B1+.
</listItem>
<bodyText confidence="0.98093825">
The implication is that outputs of B1+ rules are
inert, using the terminology of Baldridge (2002).
Inert slashes are Baldridge’s (2002) encoding in
OpenCCG3 of his CTL interpretation of Steedman’s
</bodyText>
<listItem confidence="0.737732">
(2000) antecedent-government feature.
</listItem>
<bodyText confidence="0.986401666666667">
Eisner derives (30) from two theorems about the
set of semantically equivalent parses that a CCG
parser will generate for a given string (see (Eisner,
</bodyText>
<listItem confidence="0.799639625">
1996) for proofs and discussion of the theorems):
(31) Theorem 1: For every parse tree α, there is a se-
mantically equivalent parse-tree NF(α) in which
no node resulting from application of B or S func-
tions as the primary functor in a rule application.
(32) Theorem 2: If NF(α) and NF(α&apos;) are distinct
parse trees, then their model-theoretic interpreta-
tions are distinct.
</listItem>
<footnote confidence="0.95830175">
2Two parse trees are semantically equivalent if: (i) their leaf
nodes have equivalent interpretations, and (ii) equivalent scope
relations hold between their respective leaf-node meanings.
3http://openccg.sourceforge.net
</footnote>
<bodyText confidence="0.8385735">
Eisner uses a generalized form Bn (n&gt;0) of compo-
sition that subsumes function application:4
</bodyText>
<figure confidence="0.449067727272727">
(33) &gt;B&apos;: x/y y$&apos; x$&apos;
(34) &lt;B&apos;: y$&apos; x\y x$&apos;
Based on these theorems, Eisner defines NF as fol-
lows (for R, S, T as Bn or S, and Q=Bn&gt;1):
(35) Given a parse tree α:
i. If α is a lexical item, then α is in Eisner-NF.
ii. If α is a parse tree (R, 0, Y) and NF(0),
NF(Y), then NF(α).
iii. If 0 is not in Eisner-NF, then
NF(0) = (Q, 01,02), and
NF(α) = (S, 01, NF((T, 02, Y))).
</figure>
<bodyText confidence="0.9996604">
As a parsing constraint, (30) is a filter on the set
of parses produced for a given string. It preserves all
the unique semantic forms generated for the string
while eliminating all spurious ambiguities: it is both
safe and complete.
Given the utility of Eisner NF for practical CCG
parsing, the D rules we propose should be compati-
ble with (30). This requires that the generalizations
underlying (30) apply to D as well. In the remainder
of this section, we show this in two ways.
</bodyText>
<subsectionHeader confidence="0.996542">
4.2 Deriving D from B
</subsectionHeader>
<bodyText confidence="0.999659">
The first is to derive the binary B rules from a unary
rule based on the unary combinator 6:5
</bodyText>
<equation confidence="0.69291">
(36) x/y : f,,y (x/z)/(y/z) : Ahzyaxz.f(hx)
</equation>
<bodyText confidence="0.999949">
We then derive D from B� and show that clause (iii)
of (35) holds of Q schematized over both B and D.
Applying D to an argument sequence is equiva-
lent to compound application of binary B:
</bodyText>
<equation confidence="0.990463">
(37) (((Df)g)h)x = (fg)(hx)
(38) ((((BB)f)g)h)x = ((B(fg))h)x = (fg)(hx)
</equation>
<bodyText confidence="0.9994875">
Syntactically, binary B is equivalent to application
of unary B� to the primary functor A, followed by
applying the secondary functor F to the output of B�
by means of function application (Jacobson, 1999):
</bodyText>
<footnote confidence="0.9953655">
4We use Steedman’s (Steedman, 1996) “$”-convention for
representing argument stacks of length n, for n &gt; 0.
5This is Lambek’s (1958) Division rule, also known as the
“Geach rule” (Jacobson, 1999).
</footnote>
<page confidence="0.979761">
330
</page>
<equation confidence="0.8164194">
(39) A r
x/y y/z
�ˆB
(x/z)/(y/z)
x/z
</equation>
<bodyText confidence="0.924170333333333">
Bn (n &gt; 1) is derived by applying B� to the primary
functor n times. For example, B2 is derived by 2
applications of B� to the primary functor:
</bodyText>
<equation confidence="0.8923762">
(40) A r
(x/w)/(y/w)
Bˆ
((x/w)/z)/((y/w)/z)
(x/w)/z
</equation>
<bodyText confidence="0.999827333333334">
The rules for D correspond to application of B� to
both the primary and secondary functors, followed
by function application:
</bodyText>
<equation confidence="0.9530666">
(41) A r
x/(y/z) y/w
�ˆB �ˆB
(x/(w/z))/((y/z)/(w/z)) (y/z)/(w/z)
x/(w/z)
</equation>
<bodyText confidence="0.999746">
As with Bn, Dnp1 can be derived by iterative appli-
cation of B� to both primary and secondary functors.
Because B can be derived from B, clause (iii) of
(35) is equivalent to the following:
</bodyText>
<equation confidence="0.847765">
(42) If 0 is not in Eisner-NF, then
NF(0) _ (FA, ( B, 01), 02), such that
NF(a) _ (S, 01, NF((T, 02,&apos;Y)))
</equation>
<bodyText confidence="0.997777777777778">
Interpreted in terms of B, both B and D involve ap-
plication of B� to the primary functor. It follows that
Theorem I applies directly to D simply by virtue of
the equivalence between binary B and unary-6+FA.
Eisner’s NF constraints can then be reinterpreted
as a constraint on B� requiring its output to be an inert
result category. We represent this in terms of the 6-
rules introducing an inert slash, indicated with “!”
(adopting the convention from OpenCCG):
</bodyText>
<listItem confidence="0.980098333333333">
(43) x/y : f�,;y =:� (x/!z)/(y/!z) : Ahzyaxzfhx
Hence, both binary B and D return inert functors:
(44) A r
</listItem>
<equation confidence="0.988135555555556">
x/y y/z
�ˆB
(x/!z)/(y/!z)
�
(45) A r
x/(y/z) y/w
�ˆB �ˆB
(x/!(w/z))/((y/z)/!(w/z)) (y/!z)/(w/!z)
�
</equation>
<bodyText confidence="0.9995912">
The binary substitution (S) combinator can be
similarly incorporated into the system. Unary sub-
stitution S is like B� except that it introduces a slash
on only the argument-side of the input functor. We
stipulate that S returns a category with inert slashes:
</bodyText>
<listItem confidence="0.542198">
(46) (S) (x/y)/z =:� (x/!z)/(y/!z)
</listItem>
<bodyText confidence="0.9935395">
T is by definition unary. It follows that all the binary
rules in CCG (including the D-rules) can be reduced
to (iterated) instantiations of the unary combinators
B, S, or T plus function application.
This provides a basis for CCG in which all com-
binatory rules are derived from unary B� S, and T.
</bodyText>
<subsectionHeader confidence="0.998358">
4.3 A Logical Basis for Eisner Normal Form
</subsectionHeader>
<bodyText confidence="0.99881475">
The previous section shows that deriving CCG rules
from unary combinators allows us to derive the D-
rules while preserving Eisner NF. In this section, we
present an alternate formulation of Eisner NF with
Baldridge’s (2002) CTL basis for CCG. This for-
mulation allows us to derive the D-rules as before,
and does so in a way that seamlessly integrates with
Baldridge’s system of modalized functors.
In CTL, Bo and B, are proofs derived via struc-
tural rules that allow associativity and permutation
of symbols within a sequent, in combination with
the slash introduction and elimination rules of the
base logic. To control application of these rules,
Baldridge keys them to binary modal operators o (for
associativity) and x (for permutation). Given these,
&gt;B is proven in (47):
</bodyText>
<listItem confidence="0.779151">
(47) A F- x/oy r F- y/oz [a F- z]
</listItem>
<equation confidence="0.977471125">
[/~E]
(r °� ai) F- y
[E]
(A °o (r °o ai)) F-�x
[RA]
((A °~ r) °� ai) F- x
[/OI]
(A °&amp;quot; r) F- x/oz
</equation>
<bodyText confidence="0.99221375">
In a CCG ruleset compiled from such logics, a
category must have an appropriately decorated slash
in order to be the input to a rule. This means that
rules apply universally, without language-specific
</bodyText>
<figure confidence="0.9782485">
�
x/y (y/w)/z
Bˆ
�
x/!z
x/!(w/z)
</figure>
<page confidence="0.996072">
331
</page>
<bodyText confidence="0.9963074">
restrictions. Instead, restrictions can only be de-
clared via modalities marked on lexical categories.
Unary B� and the D rules in 4.2 can be derived us-
ing the same logic. For example, &gt;�B can be derived
as in (48):
</bodyText>
<equation confidence="0.932024888888889">
(48) A ` x/oy [f ` y/oz]1 [a ` z]2
[/E]
(f1 ◦o a2) ` y
[/~E]
(A ◦o (f1 ◦o a2)) `x
[RA]
((A ◦� f1) ◦� a2) ` x
(A ◦&amp;quot; f1) ` x/oz [/OI]
A ` (x/oz)/o(y/oz) [/OI]
</equation>
<bodyText confidence="0.896600333333333">
The D rules are also theorems of this system. For
example, the proof for &gt;D applies (48) as a lemma
to each of the primary and secondary functors:
</bodyText>
<equation confidence="0.96149725">
(49) A ` x/o(y/oz) P ` y/ow
�ˆB �ˆB
A ` (x/�(w/�z))/�((y/�z)/�(w/�z)) P ` (y/�z)/�(w/�z)
(A ◦o P) ` x/o(w/oz)
</equation>
<bodyText confidence="0.996599333333333">
&gt;DoX involves an associative version of B� applied
to the primary functor (50), and a permutative ver-
sion to the secondary functor (51).
</bodyText>
<equation confidence="0.811380625">
(50) A ` x/o(y\×z) [f ` (y\×z)/·(w\×z)]1 [g ` w\×z]2
[/�E]
[/0E]
(A ◦o (f1 ◦. g2)) ` x
((A ◦o f1) ◦. g2) ` x [RA]
(A ◦o f1) ` x/·(w\×z) [/�I]
[/OI]
A ` (x/·(w\×z))/o((y\×z)/·(w\×z))
(51) P ` y/·w [a ` z]1 [f ` w\×z]2
[\×E]
(a1 ◦× f2) ` w
(P ◦· (a1 ◦× f2)) ` y [/�E]
(a1 ◦× (P ◦· f2)) ` y
[\×I]
(P ◦· f2) ` y\×z
P ` (y\×z)/·(w\×z)
</equation>
<bodyText confidence="0.999758230769231">
Rules for D with appropriate modalities can there-
fore be incorporated seamlessly into CCG.
In the preceding subsection, we encoded Eisner
NF with inert slashes. In Baldridge’s CTL basis
for CCG, inert slashes are represented as functors
seeking non-lexical arguments, represented as cate-
gories marked with an antecedent-governed feature,
reflecting the intuition that non-lexical arguments
have to be “bound” by a superordinate functor.
This is based on an interpretation of antecedent-
government as a unary modality ♦ant that allows
structures marked by it to permute to the left or right
periphery of a structure:6
</bodyText>
<equation confidence="0.94383925">
(52) ((Aa ◦× ♦antAb) ◦× Ac) ` x
((Aa ◦× Ac) ◦× ♦antAb) ` x
(Aa ◦× (♦antAb ◦× Ac)) ` x
(♦antAb ◦× (Aa ◦× Ac)) ` x
</equation>
<bodyText confidence="0.9729955">
Unlike permutation rules without ♦ant, these per-
mutation rules can only be used in a proof when
preceeded by a hypothetical category marked with
the ✷ant modality. The elimination rule for ✷i-
modalities introduces a corresponding ♦-marked
object in the resulting structure, feeding the rule:
</bodyText>
<equation confidence="0.928197230769231">
(53) [a ` ✷↓tz]1
an
[131E]
♦anta1 ` z P ` y\×z
[\×E]
A ` x/×y (♦anta1 ◦× P) ` y
[/×E]
(A ◦× (♦anta1 ◦× P)) ` x
[ALP]
[a ` ♦ant✷↓antz]2 (♦anta1 ◦× (A ◦× P)) ` x
(a ◦× (A ◦× P)) ` x
[\×I]2
(A ◦× P) ` x\×♦ant✷↓antz
</equation>
<bodyText confidence="0.996244142857143">
Re-introduction of the [a ` ♦ant✷antz]k hypothesis
results in a functor the argument of which is marked
with ♦ant✷ant. Because lexical categories are not
marked as such, the functor cannot take a lexical ar-
gument, and so is effectively an inert functor.
In Baldridge’s (2002) system, only proofs involv-
ing the ARP and ALP rules produce inert categories.
In Eisner NF, all instances of B-rules result in inert
categories. This can be reproduced in Baldridge’s
system simply by keying all structural rules to the
ant-modality, the result being that all proofs involv-
ing structural rules result in inert functors.
As desired, the D-rules result in inert categories as
well. For example, &gt;D is derived as follows (✷ant
and ♦ant are abbreviated as ✷� and ♦):
6Note that the diamond operator used here is a syntactic op-
erator, rather than a semantic operator as used in (16) above.
The unary modalities used in CTL describe accessibility rela-
tionships between subtypes and supertypes of particular cate-
gories: in effect, they define feature hierarchies. See Moortgat
(1997) and Oehrle (To Appear) for further explanation.
</bodyText>
<figure confidence="0.912876157894737">
[/E]
(f1 ◦· g2) ` y\×z
[LP]
[/�I]
[ARP]
[ALP]
[♦E]
332
(54) r ` y/ow [a ` ❑↓(w/oz)]1 [b ` ❑↓z]2
131E] [DIE]
♦a ` wfoz ♦b ` z
((A ◦* r) ◦* d) ` x
(A ◦o r) ` x/o♦❑↓(w/oz)
(54)-(55) can be used as a lemma corresponding to
the CCG rule in (57):
(56) A ` x/o(y/o♦❑↓z) r ` y/ow
(A ◦o r) ` x/o♦1(w/*z) ]
❑
(57) x/o(y/*!z) y/°w ⇒ x/o!(w/a)
</figure>
<bodyText confidence="0.999109125">
This means that all CCG rules compiled from the
logic—which requires ♦a,et to licence the structural
rules necessary to prove the rules—return inert func-
tors. Eisner NF thus falls out of the logic because all
instances of B, D, and S produce inert categories.
This in turns allows us to view Eisner NF as part of
a theory of grammatical competence, in addition to
being a useful technique for constraining parsing.
</bodyText>
<sectionHeader confidence="0.998799" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.99995368">
Including the D-combinator rules in the CCG rule
set lets us capture several linguistic generalizations
that lack satisfactory analyses in standard CCG.
Furthermore, CCG augmented with D is compat-
ible with Eisner NF (Eisner, 1996), a standard
technique for controlling derivational ambiguity in
CCG-parsers, and also with the modalized version
of CCG (Baldridge and Kruijff, 2003). A conse-
quence is that both the D rules and the NF con-
straints can be derived from a grammar-internal per-
spective. This extends CCG’s linguistic applicabil-
ity without sacrificing efficiency.
Wittenburg (1987) originally proposed using rules
based on D as a way to reduce spurious ambiguity,
which he achieved by eliminating B rules entirely
and replacing them with variations on D. Witten-
burg notes that doing so produces as many instances
of D as there are rules in the standard rule set. Our
proposal retains B and S, but, thanks to Eisner NF,
eliminates spurious ambiguity, a result that Witten-
burg was not able to realize at the time.
Our approach can be incorporated into Eisner NF
straightforwardly However, Eisner NF disprefers in-
cremental analyses by forcing right-corner analyses
of long-distance dependencies, such as in (58):
</bodyText>
<listItem confidence="0.493606">
(58) (What (does (Grommet (think (Tottie (said (Victor
(knows (Wallace ate)))))))))?
</listItem>
<bodyText confidence="0.959945">
For applications that call for increased incremental-
ity (e.g., aligning visual and spoken input incremen-
tally (Kruijff et al., 2007)), CCG rules that do not
produce inert categories can be derived a CTL ba-
sis that does not require ♦a,et for associativity and
permutation. The D-rules derived from this kind of
CTL specification would allow for left-corner analy-
ses of such dependencies with the competence gram-
mar. An extracted element can “wrap around” the
words intervening between it and its extraction site.
For example, D would allow the following bracket-
ing for the same example (while producing the same
logical form):
(59) (((((((((What does) Grommet) think) Tottie) said)
Victor) knows) Wallace) ate)?
Finally, the unary combinator basis for CCG pro-
vides an interesting additional specification for gen-
erating CCG rules. Like the CTL basis, the unary
combinator basis can produce a much wider range
of possible rules, such as D rules, that may be rel-
evant for linguistic applications. Whichever basis
is used, inclusion of the D-rules increases empirical
coverage, while at the same time preserving CCG’s
computational attractiveness.
</bodyText>
<sectionHeader confidence="0.998036" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9982616">
Thanks Mark Steedman for extensive comments and
suggestions, and particularly for noting the relation-
ship between the D-rules and unary B. Thanks
also to Emmon Bach, Cem Bozsahin, Jason Eisner,
Geert-Jan Kruijff and the ACL reviewers.
</bodyText>
<figure confidence="0.999277368421053">
(♦a ◦o ♦b) ` w
(r ◦o (♦a ◦o ♦b)) ` y
[c ` ♦❑↓z]3 ((r ◦o ♦a) ◦o ♦b) ` y
((r ◦o ♦a) ◦o c) ` y
[/0I]3
(r ◦o ♦a) ` y/o♦❑↓z
(55) (54)
.
A ` x/o(y/o♦❑↓z) (r ◦o ♦a) ` y/o♦❑↓z
[/0E]
[d ` ♦❑↓(w/oz)]4 ((A ◦o r) ◦o ♦a) ` x
[/0E]
[/~E]
[RA]
[♦E]2
(A ◦o (r ◦o ♦a)) ` x
[RA]
[♦E]1
[/4I]4
</figure>
<page confidence="0.997148">
333
</page>
<sectionHeader confidence="0.993583" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999943403846154">
Farrell Ackerman and John Moore. 1999. Syntagmatic
and Paradigmatic Dimensions of Causee Encodings.
Linguistics and Philosophy, 24:1–44.
Avery D. Andrews and Christopher D. Manning. 1999.
Complex Predicates and Information Spreading in
LFG. CSLI Publications, Palo Alto, California.
Jason Baldridge and Geert-Jan Kruijff. 2003. Multi-
Modal Combinatory Categorial Grammar. In Proceed-
ings of EACL 10, pages 211–218.
Jason Baldridge, Sudipta Chatterjee, Alexis Palmer, and
Ben Wing. 2007. DotCCG and VisCCG: Wiki and
Programming Paradigms for Improved Grammar En-
gineering with OpenCCG. In Proceedings of GEAF
2007.
Jason Baldridge. 2002. Lexically Specified Derivational
Control in Combinatory Categorial Grammar. Ph.D.
thesis, University of Edinburgh.
John Beavers. 2004. Type-inheritance Combinatory
Categorial Grammar. In Proceedings of COLING-04,
Geneva, Switzerland.
Robert Borsley and Kersti Börjars, editors. To Appear.
Non-Transformational Syntax: A Guide to Current
Models. Blackwell.
Cem Bozsahin. 1998. Deriving the Predicate-Argument
Structure for a Free Word Order Language. In Pro-
ceedings of COLING-ACL ’98.
Stephen Clark and James Curran. 2007. Wide-Coverage
Efficient Statistical Parsing with CCG and Log-Linear
Models. Computational Linguistics, 33(4).
Haskell B. Curry and Robert Feys. 1958. Combinatory
Logic, volume 1. North Holland, Amsterdam.
Jason Eisner. 1996. Efficient Normal-Form Parsing for
Combinatory Categorial Grammars. In Proceedings of
the ACL 34.
Michael D Finnemann. 1982. Aspects of the Spanish
Causative Construction. Ph.D. thesis, University of
Minnesota.
L. T. F. Gamut. 1991. Logic, Language, and Meaning,
volume II. Chicago University Press.
Jeroen Groenendijk and Martin Stokhof. 1997. Ques-
tions. In Johan van Benthem and Alice ter Meulen,
editors, Handbook of Logic and Language, chapter 19,
pages 1055–1124. Elsevier Science, Amsterdam.
Mark Hepple and Glyn Morrill. 1989. Parsing and
Derivational Equivalence. In Proceedings of EACL 4.
Julia Hockenmaier and Mark Steedman. 2002. Gen-
erative Models for Statistical Parsing with Combina-
tory Categorial Grammar. In Proceedings. of ACL 40,
pages 335–342, Philadelpha, PA.
Pauline Jacobson. 1990. Raising as Function Composi-
tion. Linguistics and Philosophy, 13:423–475.
Pauline Jacobson. 1999. Towards a Variable-Free Se-
mantics. Linguistics and Philosophy, 22:117–184.
Lauri Karttunen. 1989. Radical Lexicalism. In Mark
Baltin and Anthony Kroch, editors, Alternative Con-
ceptions of Phrase Structure. University of Chicago
Press, Chicago.
Angelika Kratzer. 1991. Modality. In Arnim von Ste-
chow and Dieter Wunderlich, editors, Semantics: An
International Handbook of Contemporary Semantic
Research, pages 639–650. Walter de Gruyter, Berlin.
Geert-Jan M. Kruijff, Pierre Lison, Trevor Benjamin,
Henrik Jacobsson, and Nick Hawes. 2007. Incremen-
tal, Multi-Level Processing for Comprehending Situ-
ated Dialogue in Human-Robot Interaction. In Lan-
guage and Robots: Proceedings from the Symposium
(LangRo’2007), Aveiro, Portugal.
Joachim Lambek. 1958. The mathematics of sentence
structure. American Mathematical Monthly, 65:154–
169.
Marta Luján. 1980. Clitic Promotion and Mood in Span-
ish Verbal Complements. Linguistics, 18:381–484.
Michael Moortgat. 1997. Categorial Type Logics. In Jo-
han van Benthem and Alice ter Meulen, editors, Hand-
book of Logic and Language, pages 93–177. North
Holland, Amsterdam.
Richard T Oehrle. To Appear. Multi-Modal Type Log-
ical Grammar. In Boersley and Börjars (Borsley and
Börjars, To Appear).
Martin Pickering and Guy Barry. 1993. Dependency
Categorial Grammar and Coordination. Linguistics,
31:855–902.
David Reitter, Julia Hockenmaier, and Frank Keller.
2006. Priming Effects in Combinatory Categorial
Grammar. In Proceedings of EMNLP-2006.
Mark Steedman and Jason Baldridge. To Appear. Com-
binatory Categorial Grammar. In Borsley and Börjars
(Borsley and Börjars, To Appear).
Mark Steedman. 1996. Surface Structure and Interpre-
tation. MIT Press.
Mark Steedman. 2000. The Syntactic Process. MIT
Press.
Michael White and Jason Baldridge. 2003. Adapting
Chart Realization to CCG. In Proceedings of ENLG.
Michael White. 2006. Efficient Realization of Coordi-
nate Structures in Combinatory Categorial Grammar.
Research on Language and Computation, 4(1):39–75.
Kent Wittenburg. 1987. Predictive Combinators: A
Method for Efficient Processing of Combinatory Cat-
egorial Grammars. In Proceedings of ACL 25.
Luke Zettlemoyer and Michael Collins. 2007. On-
line Learning of Relaxed CCG Grammars for Parsing
to Logical Form. In Proceedings of EMNLP-CoNLL
2007.
</reference>
<page confidence="0.999061">
334
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.992796">
<title confidence="0.999827">A Logical Basis for the D Combinator and Normal Form in CCG</title>
<author confidence="0.999997">Frederick Hoyt</author>
<author confidence="0.999997">Jason Baldridge</author>
<affiliation confidence="0.9988325">The Department of Linguistics The University of Texas at Austin</affiliation>
<email confidence="0.999565">fmhoyt@mail.utexas.edu</email>
<email confidence="0.999565">jbaldrid@mail.utexas.edu</email>
<abstract confidence="0.9996208">The standard set of rules defined in Combinatory Categorial Grammar (CCG) fails to provide satisfactory analyses for a number of syntactic structures found in natural languages. These structures can be analyzed elegantly by augmenting CCG with a class of rules based the combinator and Feys, 1958). show two ways to derive the one based on unary composition and the other based on a logical characterization of CCG’s rule base (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints from this logic, ensuring that the rules do not lead to spurious ambiguities.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Farrell Ackerman</author>
<author>John Moore</author>
</authors>
<date>1999</date>
<booktitle>Syntagmatic and Paradigmatic Dimensions of Causee Encodings. Linguistics and Philosophy,</booktitle>
<pages>24--1</pages>
<contexts>
<context position="11345" citStr="Ackerman and Moore, 1999" startWordPosition="1889" endWordPosition="1892">� � � &gt;s � �� 3.3 The Spanish Causative Construction The schema in (1) is also found in the widelystudied Romance causative construction (Andrews and Manning, 1999, a.m.o), illustrated in (22): (22) Nos hizo leer El Señor de los Anillos. cl.1p made.3s read the Lord of the Rings “He made us read The Lord of the Rings.” The aspect of the construction that is relevant here is that the causative verb hacer appears to take an object argument understood as the subject or agent of the subordinate verb (the causee). However, it has been argued that Spanish causative verbs do not in fact take objects (Ackerman and Moore, 1999, and refs therein). There are two arguments for this. First, syntactic alternations that apply to objecttaking verbs, such as passivization and periphrasis with subjunctive complements, do not apply to hacer (Luján, 1980). Second, hacer specifies neither the case form of the causee, nor any semantic entailments with respect to it. These are instead determined by syntactic, semantic, and pragmatic factors, such as transitivity, word order, animacy, gender, social prestige, and referential specificity (Finnemann, 1982, a.o). Thus, there is neither syntactic nor semantic evidence that hacer take</context>
</contexts>
<marker>Ackerman, Moore, 1999</marker>
<rawString>Farrell Ackerman and John Moore. 1999. Syntagmatic and Paradigmatic Dimensions of Causee Encodings. Linguistics and Philosophy, 24:1–44.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Avery D Andrews</author>
<author>Christopher D Manning</author>
</authors>
<date>1999</date>
<booktitle>Complex Predicates and Information Spreading in LFG. CSLI Publications,</booktitle>
<location>Palo Alto, California.</location>
<contexts>
<context position="10884" citStr="Andrews and Manning, 1999" startWordPosition="1807" endWordPosition="1810">och still wählen? choose vrei, want.2s cui who.dat Fe what po¸ti, can.2s s˘a dai. to give.subj.2s (15) Me me lo puedes it can.2s y and lo debes it must.2s explicar ask s 328 (20) can F- s/s : Apt.Qp Combining (20) with a type-raised subject presents another instance of the structure in (1), where that question words are represented as variable-binding operators (Groenendijk and Stokhof, 1997): (21) what I can s/(s/np) : AQet?yQy s/vp : APet.Pi0 s/s : Apt.Qp � � � &gt;s � �� 3.3 The Spanish Causative Construction The schema in (1) is also found in the widelystudied Romance causative construction (Andrews and Manning, 1999, a.m.o), illustrated in (22): (22) Nos hizo leer El Señor de los Anillos. cl.1p made.3s read the Lord of the Rings “He made us read The Lord of the Rings.” The aspect of the construction that is relevant here is that the causative verb hacer appears to take an object argument understood as the subject or agent of the subordinate verb (the causee). However, it has been argued that Spanish causative verbs do not in fact take objects (Ackerman and Moore, 1999, and refs therein). There are two arguments for this. First, syntactic alternations that apply to objecttaking verbs, such as passivizatio</context>
</contexts>
<marker>Andrews, Manning, 1999</marker>
<rawString>Avery D. Andrews and Christopher D. Manning. 1999. Complex Predicates and Information Spreading in LFG. CSLI Publications, Palo Alto, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Baldridge</author>
<author>Geert-Jan Kruijff</author>
</authors>
<title>MultiModal Combinatory Categorial Grammar.</title>
<date>2003</date>
<booktitle>In Proceedings of EACL 10,</booktitle>
<pages>211--218</pages>
<contexts>
<context position="2621" citStr="Baldridge and Kruijff (2003)" startWordPosition="398" endWordPosition="402">:� x/(w/z):Ah.f(Ax.ghx) We show that CCG augmented with this rule improves CCG’s empirical coverage by allowing better analyses of modal verbs in English and causatives in Spanish, and certain coordinate constructions. The D rules are well-behaved; we show this by deriving them both from unary composition and from the logic defined by Baldridge (2002). Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. The logic also ensures that the new rules are subject to modalities consistent with those defined by Baldridge and Kruijff (2003). Furthermore, we define a logic that produces Eisner’s constraints as grammar internal theorems rather than parsing stipulations. 2 Combinatory Categorial Grammar CCG uses a universal set of syntactic rules based on the B, T, and S combinators of combinatory logic (Curry and Feys, 1958): (2) B: ((Bf)g)x = f(gx) T: Txf = fx S: ((Sf)g)x = fx(gx) CCG functors are functions over strings of symbols, so different linearized versions of each of the combinators have to be specified (ignoring S here): 326 Proceedings of ACL-08: HLT, pages 326–334, Columbus, Ohio, USA, June 2008. c�2008 Association for</context>
<context position="4125" citStr="Baldridge and Kruijff, 2003" startWordPosition="661" endWordPosition="664">efined; this in turn allows the slashes on categories to be defined in a way that allows them to be used (or not) with specific subsets of the above rules. The rules of this multimodal version of CCG (Baldridge, 2002; Baldridge and Kruijff, 2003) are derived as theorems of a Categorial Type Logic (CTL, Moortgat (1997)). This treats CCG as a compilation of CTL proofs, providing a principled, grammar-internal basis for restrictions on the CCG rules, transferring languageparticular restrictions on rule application to the lexicon, and allowing the CCG rules to be viewed as grammatical universals (Baldridge and Kruijff, 2003; Steedman and Baldridge, To Appear). These rules—especially the B rules—allow derivations to be partially associative: given appropriate type assignments, a string ABC can be analyzed as either A(BC) or (AB)C. This associativity leads to elegant analyses of phenomena that demand more effort in less flexible frameworks. One of the best known is “odd constituent” coordination: (4) Bob gave Stan a beer and Max a coke. (5) I will buy and you will eat a cheeseburger. The coordinated constituents are challenging because they are at odds with standardly assumed phrase structure constituents. In CCG,</context>
<context position="25565" citStr="Baldridge and Kruijff, 2003" startWordPosition="4341" endWordPosition="4344">out of the logic because all instances of B, D, and S produce inert categories. This in turns allows us to view Eisner NF as part of a theory of grammatical competence, in addition to being a useful technique for constraining parsing. 5 Conclusion Including the D-combinator rules in the CCG rule set lets us capture several linguistic generalizations that lack satisfactory analyses in standard CCG. Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). A consequence is that both the D rules and the NF constraints can be derived from a grammar-internal perspective. This extends CCG’s linguistic applicability without sacrificing efficiency. Wittenburg (1987) originally proposed using rules based on D as a way to reduce spurious ambiguity, which he achieved by eliminating B rules entirely and replacing them with variations on D. Wittenburg notes that doing so produces as many instances of D as there are rules in the standard rule set. Our proposal retains B and S, but, thanks to Eisner NF, eliminates spurious ambiguity, a result that Wittenbu</context>
</contexts>
<marker>Baldridge, Kruijff, 2003</marker>
<rawString>Jason Baldridge and Geert-Jan Kruijff. 2003. MultiModal Combinatory Categorial Grammar. In Proceedings of EACL 10, pages 211–218.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Baldridge</author>
<author>Sudipta Chatterjee</author>
<author>Alexis Palmer</author>
<author>Ben Wing</author>
</authors>
<title>DotCCG and VisCCG: Wiki and Programming Paradigms for Improved Grammar Engineering with OpenCCG.</title>
<date>2007</date>
<booktitle>In Proceedings of GEAF</booktitle>
<contexts>
<context position="1332" citStr="Baldridge et al., 2007" startWordPosition="200" endWordPosition="203">al form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for certain linguistic constructions and greater incrementality. Following Wittenburg (1987), we remedy this by adding a set of rules based on the D combinator of co</context>
</contexts>
<marker>Baldridge, Chatterjee, Palmer, Wing, 2007</marker>
<rawString>Jason Baldridge, Sudipta Chatterjee, Alexis Palmer, and Ben Wing. 2007. DotCCG and VisCCG: Wiki and Programming Paradigms for Improved Grammar Engineering with OpenCCG. In Proceedings of GEAF 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Baldridge</author>
</authors>
<title>Lexically Specified Derivational Control in Combinatory Categorial Grammar.</title>
<date>2002</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Edinburgh.</institution>
<contexts>
<context position="670" citStr="Baldridge, 2002" startWordPosition="107" endWordPosition="108">n CCG Frederick Hoyt and Jason Baldridge The Department of Linguistics The University of Texas at Austin {fmhoyt,jbaldrid}@mail.utexas.edu Abstract The standard set of rules defined in Combinatory Categorial Grammar (CCG) fails to provide satisfactory analyses for a number of syntactic structures found in natural languages. These structures can be analyzed elegantly by augmenting CCG with a class of rules based on the combinator D (Curry and Feys, 1958). We show two ways to derive the D rules: one based on unary composition and the other based on a logical characterization of CCG’s rule base (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007</context>
<context position="2346" citStr="Baldridge (2002)" startWordPosition="357" endWordPosition="358">dly defined is not permissive enough for certain linguistic constructions and greater incrementality. Following Wittenburg (1987), we remedy this by adding a set of rules based on the D combinator of combinatory logic (Curry and Feys, 1958). (1) x/(y/z):f y/w:g =:� x/(w/z):Ah.f(Ax.ghx) We show that CCG augmented with this rule improves CCG’s empirical coverage by allowing better analyses of modal verbs in English and causatives in Spanish, and certain coordinate constructions. The D rules are well-behaved; we show this by deriving them both from unary composition and from the logic defined by Baldridge (2002). Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. The logic also ensures that the new rules are subject to modalities consistent with those defined by Baldridge and Kruijff (2003). Furthermore, we define a logic that produces Eisner’s constraints as grammar internal theorems rather than parsing stipulations. 2 Combinatory Categorial Grammar CCG uses a universal set of syntactic rules based on the B, T, and S combinators of combinatory logic (Curry and Feys, 1958): (2) B: ((Bf)g)x = f(gx) T: Txf = fx</context>
<context position="3714" citStr="Baldridge, 2002" startWordPosition="600" endWordPosition="601">d (ignoring S here): 326 Proceedings of ACL-08: HLT, pages 326–334, Columbus, Ohio, USA, June 2008. c�2008 Association for Computational Linguistics (3) FA: (&gt;) x/?y y ⇒ x (&lt;) y x\?y ⇒ x B: (&gt;B) x/oy y/oz ⇒ x/oz (&lt;B) y\oz x\oy ⇒ x\.z (&gt;B×) x/×y y\×z ⇒ x\×z (&lt;B×) y/×z x\×y ⇒ x/×z T: (&gt;T) x ⇒ t/i(t\ix) (&lt;T) x ⇒ t\i(t/ix) The symbols {*, o, x, ·} are modalities that allow subtypes of slashes to be defined; this in turn allows the slashes on categories to be defined in a way that allows them to be used (or not) with specific subsets of the above rules. The rules of this multimodal version of CCG (Baldridge, 2002; Baldridge and Kruijff, 2003) are derived as theorems of a Categorial Type Logic (CTL, Moortgat (1997)). This treats CCG as a compilation of CTL proofs, providing a principled, grammar-internal basis for restrictions on the CCG rules, transferring languageparticular restrictions on rule application to the lexicon, and allowing the CCG rules to be viewed as grammatical universals (Baldridge and Kruijff, 2003; Steedman and Baldridge, To Appear). These rules—especially the B rules—allow derivations to be partially associative: given appropriate type assignments, a string ABC can be analyzed as e</context>
<context position="7452" citStr="Baldridge, 2002" startWordPosition="1222" endWordPosition="1223">roblem it presents to CCG is clear in (11), which shows the necessary derivation of (10) using standard multimodal category assignments. For the tokens of what to form constituents with you can and you must not, they must must combine directly. The problem is that these constituents (in bold) cannot be created with the standard CCG combinators in (3). (11) s vp/np base your verdict on (s/(vp/np))\(s/(vp/np)) (x\*x)/�x s/(vp/np) and s/(s/np) s/vp what you must not The category for and is marked for non-associativity with *, and thus combines with other expressions only by function application (Baldridge, 2002). This ensures that each conjunct is a discrete constituent. Cross-conjunct extraction occurs in other languages as well, including Dutch (12), German (13), Romanian (14), and Spanish (15): (12) dat that “... that I want to and that I can help her.” (13) Wen who “Whom can I and whom may I still chose?” (14) Gandeste-te cui Fe consider.imper.2s-refl.2s who.dat what ¸si and “Consider to whom you want and to whom you are able to give what.” me me “You can and should explain it to me.” It is thus a general phenomenon, not just a quirk of English. While it could be handled with extra categories, su</context>
<context position="15150" citStr="Baldridge (2002)" startWordPosition="2489" endWordPosition="2490">998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical forms: it functions purely on the syntactic types being combined. (30) For a set S of semantically equivalent2 parse trees for a string ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C is not the argument of (AB) resulting from application of &gt;B1 +. ii. A is not the argument of (BC) resulting from application of &lt;B1+. The implication is that outputs of B1+ rules are inert, using the terminology of Baldridge (2002). Inert slashes are Baldridge’s (2002) encoding in OpenCCG3 of his CTL interpretation of Steedman’s (2000) antecedent-government feature. Eisner derives (30) from two theorems about the set of semantically equivalent parses that a CCG parser will generate for a given string (see (Eisner, 1996) for proofs and discussion of the theorems): (31) Theorem 1: For every parse tree α, there is a semantically equivalent parse-tree NF(α) in which no node resulting from application of B or S functions as the primary functor in a rule application. (32) Theorem 2: If NF(α) and NF(α&apos;) are distinct parse tree</context>
</contexts>
<marker>Baldridge, 2002</marker>
<rawString>Jason Baldridge. 2002. Lexically Specified Derivational Control in Combinatory Categorial Grammar. Ph.D. thesis, University of Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Beavers</author>
</authors>
<title>Type-inheritance Combinatory Categorial Grammar.</title>
<date>2004</date>
<booktitle>In Proceedings of COLING-04,</booktitle>
<location>Geneva, Switzerland.</location>
<contexts>
<context position="1307" citStr="Beavers, 2004" startWordPosition="198" endWordPosition="199">r’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for certain linguistic constructions and greater incrementality. Following Wittenburg (1987), we remedy this by adding a set of rules based </context>
</contexts>
<marker>Beavers, 2004</marker>
<rawString>John Beavers. 2004. Type-inheritance Combinatory Categorial Grammar. In Proceedings of COLING-04, Geneva, Switzerland.</rawString>
</citation>
<citation valid="false">
<title>Appear. Non-Transformational Syntax: A Guide to Current Models.</title>
<editor>Robert Borsley and Kersti Börjars, editors. To</editor>
<publisher>Blackwell.</publisher>
<marker></marker>
<rawString>Robert Borsley and Kersti Börjars, editors. To Appear. Non-Transformational Syntax: A Guide to Current Models. Blackwell.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cem Bozsahin</author>
</authors>
<title>Deriving the Predicate-Argument Structure for a Free Word Order Language.</title>
<date>1998</date>
<booktitle>In Proceedings of COLING-ACL ’98.</booktitle>
<contexts>
<context position="14537" citStr="Bozsahin, 1998" startWordPosition="2381" endWordPosition="2382"> derived as grammar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly used are Karttunnen’s chart subsumption check (White and Baldridge, 2003; Hockenmaier and Steedman, 2002) and Eisner’s normal-form constraints (Bozsahin, 1998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical forms: it functions purely on the syntactic types being combined. (30) For a set S of semantically equivalent2 parse trees for a string ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C is not the argument of (AB) resulting from application of &gt;B1 +. ii. A is not the argument of (BC) resulting from application of &lt;B1+. The implication is that outputs of B1+ rules are inert, using the terminology of Bal</context>
</contexts>
<marker>Bozsahin, 1998</marker>
<rawString>Cem Bozsahin. 1998. Deriving the Predicate-Argument Structure for a Free Word Order Language. In Proceedings of COLING-ACL ’98.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen Clark</author>
<author>James Curran</author>
</authors>
<title>Wide-Coverage Efficient Statistical Parsing with CCG and Log-Linear Models.</title>
<date>2007</date>
<journal>Computational Linguistics,</journal>
<volume>33</volume>
<issue>4</issue>
<contexts>
<context position="1137" citStr="Clark and Curran, 2007" startWordPosition="174" endWordPosition="177">e show two ways to derive the D rules: one based on unary composition and the other based on a logical characterization of CCG’s rule base (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly def</context>
<context position="14562" citStr="Clark and Curran, 2007" startWordPosition="2383" endWordPosition="2386">mar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly used are Karttunnen’s chart subsumption check (White and Baldridge, 2003; Hockenmaier and Steedman, 2002) and Eisner’s normal-form constraints (Bozsahin, 1998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical forms: it functions purely on the syntactic types being combined. (30) For a set S of semantically equivalent2 parse trees for a string ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C is not the argument of (AB) resulting from application of &gt;B1 +. ii. A is not the argument of (BC) resulting from application of &lt;B1+. The implication is that outputs of B1+ rules are inert, using the terminology of Baldridge (2002). Inert slas</context>
</contexts>
<marker>Clark, Curran, 2007</marker>
<rawString>Stephen Clark and James Curran. 2007. Wide-Coverage Efficient Statistical Parsing with CCG and Log-Linear Models. Computational Linguistics, 33(4).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Haskell B Curry</author>
<author>Robert Feys</author>
</authors>
<date>1958</date>
<journal>Combinatory Logic,</journal>
<volume>1</volume>
<publisher>North</publisher>
<location>Holland, Amsterdam.</location>
<contexts>
<context position="1970" citStr="Curry and Feys, 1958" startWordPosition="297" endWordPosition="300">ntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for certain linguistic constructions and greater incrementality. Following Wittenburg (1987), we remedy this by adding a set of rules based on the D combinator of combinatory logic (Curry and Feys, 1958). (1) x/(y/z):f y/w:g =:� x/(w/z):Ah.f(Ax.ghx) We show that CCG augmented with this rule improves CCG’s empirical coverage by allowing better analyses of modal verbs in English and causatives in Spanish, and certain coordinate constructions. The D rules are well-behaved; we show this by deriving them both from unary composition and from the logic defined by Baldridge (2002). Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. The logic also ensures that the new rules are subject to modalities consistent</context>
</contexts>
<marker>Curry, Feys, 1958</marker>
<rawString>Haskell B. Curry and Robert Feys. 1958. Combinatory Logic, volume 1. North Holland, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Eisner</author>
</authors>
<title>Efficient Normal-Form Parsing for Combinatory Categorial Grammars.</title>
<date>1996</date>
<booktitle>In Proceedings of the ACL</booktitle>
<pages>34</pages>
<contexts>
<context position="2455" citStr="Eisner, 1996" startWordPosition="375" endWordPosition="376">Wittenburg (1987), we remedy this by adding a set of rules based on the D combinator of combinatory logic (Curry and Feys, 1958). (1) x/(y/z):f y/w:g =:� x/(w/z):Ah.f(Ax.ghx) We show that CCG augmented with this rule improves CCG’s empirical coverage by allowing better analyses of modal verbs in English and causatives in Spanish, and certain coordinate constructions. The D rules are well-behaved; we show this by deriving them both from unary composition and from the logic defined by Baldridge (2002). Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for controlling spurious ambiguity. The logic also ensures that the new rules are subject to modalities consistent with those defined by Baldridge and Kruijff (2003). Furthermore, we define a logic that produces Eisner’s constraints as grammar internal theorems rather than parsing stipulations. 2 Combinatory Categorial Grammar CCG uses a universal set of syntactic rules based on the B, T, and S combinators of combinatory logic (Curry and Feys, 1958): (2) B: ((Bf)g)x = f(gx) T: Txf = fx S: ((Sf)g)x = fx(gx) CCG functors are functions over strings of symbols, so different linearized versions of</context>
<context position="13778" citStr="Eisner, 1996" startWordPosition="2264" endWordPosition="2265">p) The derivation then proceeds in the usual way. Likewise, D handles the Spanish causative constructions (29) straightforwardly : (29) lo hice dormir (s\np)/o((s\np)/onp) (s\np)/*s s/np &gt;D s\np The D-rules thus provide straightforward analyses of such constructions by delivering flexible constituency while maintaining CCG’s committment to low categorial ambiguity and semantic transparency. 4 Deriving Eisner Normal Form Adding new rules can have implications for parsing efficiency. In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both &gt;D (s\np)/o(s/onp) &gt; 329 combinatory and logical bases for D. This additionally allows Eisner’s normal form constraints to be derived as grammar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly</context>
<context position="15444" citStr="Eisner, 1996" startWordPosition="2532" endWordPosition="2533">ing ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C is not the argument of (AB) resulting from application of &gt;B1 +. ii. A is not the argument of (BC) resulting from application of &lt;B1+. The implication is that outputs of B1+ rules are inert, using the terminology of Baldridge (2002). Inert slashes are Baldridge’s (2002) encoding in OpenCCG3 of his CTL interpretation of Steedman’s (2000) antecedent-government feature. Eisner derives (30) from two theorems about the set of semantically equivalent parses that a CCG parser will generate for a given string (see (Eisner, 1996) for proofs and discussion of the theorems): (31) Theorem 1: For every parse tree α, there is a semantically equivalent parse-tree NF(α) in which no node resulting from application of B or S functions as the primary functor in a rule application. (32) Theorem 2: If NF(α) and NF(α&apos;) are distinct parse trees, then their model-theoretic interpretations are distinct. 2Two parse trees are semantically equivalent if: (i) their leaf nodes have equivalent interpretations, and (ii) equivalent scope relations hold between their respective leaf-node meanings. 3http://openccg.sourceforge.net Eisner uses a</context>
<context position="25415" citStr="Eisner, 1996" startWordPosition="4322" endWordPosition="4323">he logic—which requires ♦a,et to licence the structural rules necessary to prove the rules—return inert functors. Eisner NF thus falls out of the logic because all instances of B, D, and S produce inert categories. This in turns allows us to view Eisner NF as part of a theory of grammatical competence, in addition to being a useful technique for constraining parsing. 5 Conclusion Including the D-combinator rules in the CCG rule set lets us capture several linguistic generalizations that lack satisfactory analyses in standard CCG. Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). A consequence is that both the D rules and the NF constraints can be derived from a grammar-internal perspective. This extends CCG’s linguistic applicability without sacrificing efficiency. Wittenburg (1987) originally proposed using rules based on D as a way to reduce spurious ambiguity, which he achieved by eliminating B rules entirely and replacing them with variations on D. Wittenburg notes that doing so produces as many instances of D as t</context>
</contexts>
<marker>Eisner, 1996</marker>
<rawString>Jason Eisner. 1996. Efficient Normal-Form Parsing for Combinatory Categorial Grammars. In Proceedings of the ACL 34.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael D Finnemann</author>
</authors>
<title>Aspects of the Spanish Causative Construction.</title>
<date>1982</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Minnesota.</institution>
<contexts>
<context position="11867" citStr="Finnemann, 1982" startWordPosition="1969" endWordPosition="1970">een argued that Spanish causative verbs do not in fact take objects (Ackerman and Moore, 1999, and refs therein). There are two arguments for this. First, syntactic alternations that apply to objecttaking verbs, such as passivization and periphrasis with subjunctive complements, do not apply to hacer (Luján, 1980). Second, hacer specifies neither the case form of the causee, nor any semantic entailments with respect to it. These are instead determined by syntactic, semantic, and pragmatic factors, such as transitivity, word order, animacy, gender, social prestige, and referential specificity (Finnemann, 1982, a.o). Thus, there is neither syntactic nor semantic evidence that hacer takes an object argument. On this basis, we assign hacer the category (23): (23) hacer F- (s\np)/s : APAx.cause0Px However, Spanish has examples of cross-conjunct extraction in which hacer hosts clitics: (24) No solo le ordenaron, sino que not only cl.dat.3ms ordered.3p but le hicieron Barrer la verada. cl.dat.3ms made.3p sweep the sidewalk “They not only ordered him to, but also made him sweep the sidewalk.” This shows another instance of the schema in (1), which is undefined for any of the combinators in (3): (25) le h</context>
</contexts>
<marker>Finnemann, 1982</marker>
<rawString>Michael D Finnemann. 1982. Aspects of the Spanish Causative Construction. Ph.D. thesis, University of Minnesota.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L T F Gamut</author>
</authors>
<title>Logic, Language, and Meaning, volume II.</title>
<date>1991</date>
<publisher>Chicago University Press.</publisher>
<contexts>
<context position="8404" citStr="Gamut, 1991" startWordPosition="1389" endWordPosition="1390">r.2s-refl.2s who.dat what ¸si and “Consider to whom you want and to whom you are able to give what.” me me “You can and should explain it to me.” It is thus a general phenomenon, not just a quirk of English. While it could be handled with extra categories, such as (s/(vp/np))/(s/np) for what, this is exactly the sort of strong-arm tactic that inclusion of the standard B, T, and S rules is meant to avoid. 3.2 English Auxiliary Verbs The standard CCG analysis for English auxiliary verbs is the type exemplified in (16) (Steedman, 2000, 68), interpreted as a unary operator over sentence meanings (Gamut, 1991; Kratzer, 1991): (16) can F- (s\np)/(s\np) : aPetax.QP(x) However, this type is empirically underdetermined, given a widely-noted set of generalizations suggesting that auxiliaries and raising verbs take no subject argument at all (Jacobson, 1990, a.o.). (17) i. Lack of syntactic restrictions on the subject; ii. Lack of semantic restrictions on the subject; iii. Inheritance of selectional restrictions from the subordinate predicate. Two arguments are made for (16). First, it is necessary so that type-raised subjects can compose with the auxiliary in extraction contexts, as in (18): (18) what </context>
</contexts>
<marker>Gamut, 1991</marker>
<rawString>L. T. F. Gamut. 1991. Logic, Language, and Meaning, volume II. Chicago University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeroen Groenendijk</author>
<author>Martin Stokhof</author>
</authors>
<title>Questions.</title>
<date>1997</date>
<booktitle>In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language, chapter 19,</booktitle>
<pages>1055--1124</pages>
<publisher>Elsevier Science,</publisher>
<location>Amsterdam.</location>
<contexts>
<context position="10654" citStr="Groenendijk and Stokhof, 1997" startWordPosition="1765" endWordPosition="1768"> Jacobson (1990), a more empiricallymotivated assignment is (20): s/(vp/np) s/(vp/np) s/vp s/(s/np) what you can ik I haar her wil want en and dat that ik I haar her moet can helpen. help kann can ich I und and wen who darf may ich I noch still wählen? choose vrei, want.2s cui who.dat Fe what po¸ti, can.2s s˘a dai. to give.subj.2s (15) Me me lo puedes it can.2s y and lo debes it must.2s explicar ask s 328 (20) can F- s/s : Apt.Qp Combining (20) with a type-raised subject presents another instance of the structure in (1), where that question words are represented as variable-binding operators (Groenendijk and Stokhof, 1997): (21) what I can s/(s/np) : AQet?yQy s/vp : APet.Pi0 s/s : Apt.Qp � � � &gt;s � �� 3.3 The Spanish Causative Construction The schema in (1) is also found in the widelystudied Romance causative construction (Andrews and Manning, 1999, a.m.o), illustrated in (22): (22) Nos hizo leer El Señor de los Anillos. cl.1p made.3s read the Lord of the Rings “He made us read The Lord of the Rings.” The aspect of the construction that is relevant here is that the causative verb hacer appears to take an object argument understood as the subject or agent of the subordinate verb (the causee). However, it has bee</context>
</contexts>
<marker>Groenendijk, Stokhof, 1997</marker>
<rawString>Jeroen Groenendijk and Martin Stokhof. 1997. Questions. In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language, chapter 19, pages 1055–1124. Elsevier Science, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Hepple</author>
<author>Glyn Morrill</author>
</authors>
<title>Parsing and Derivational Equivalence.</title>
<date>1989</date>
<booktitle>In Proceedings of EACL 4.</booktitle>
<contexts>
<context position="14344" citStr="Hepple and Morrill, 1989" startWordPosition="2352" endWordPosition="2355">ard normal form constraints for CCG parsing (Eisner, 1996), by providing both &gt;D (s\np)/o(s/onp) &gt; 329 combinatory and logical bases for D. This additionally allows Eisner’s normal form constraints to be derived as grammar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly used are Karttunnen’s chart subsumption check (White and Baldridge, 2003; Hockenmaier and Steedman, 2002) and Eisner’s normal-form constraints (Bozsahin, 1998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical forms: it functions purely on the syntactic types being combined. (30) For a set S of semantically equivalent2 parse trees for a string ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C is not the argument of (AB</context>
</contexts>
<marker>Hepple, Morrill, 1989</marker>
<rawString>Mark Hepple and Glyn Morrill. 1989. Parsing and Derivational Equivalence. In Proceedings of EACL 4.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Julia Hockenmaier</author>
<author>Mark Steedman</author>
</authors>
<title>Generative Models for Statistical Parsing with Combinatory Categorial Grammar.</title>
<date>2002</date>
<booktitle>In Proceedings. of ACL 40,</booktitle>
<pages>335--342</pages>
<location>Philadelpha, PA.</location>
<contexts>
<context position="1112" citStr="Hockenmaier and Steedman, 2002" startWordPosition="169" endWordPosition="173">ator D (Curry and Feys, 1958). We show two ways to derive the D rules: one based on unary composition and the other based on a logical characterization of CCG’s rule base (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibili</context>
<context position="14484" citStr="Hockenmaier and Steedman, 2002" startWordPosition="2372" endWordPosition="2375">for D. This additionally allows Eisner’s normal form constraints to be derived as grammar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly used are Karttunnen’s chart subsumption check (White and Baldridge, 2003; Hockenmaier and Steedman, 2002) and Eisner’s normal-form constraints (Bozsahin, 1998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical forms: it functions purely on the syntactic types being combined. (30) For a set S of semantically equivalent2 parse trees for a string ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C is not the argument of (AB) resulting from application of &gt;B1 +. ii. A is not the argument of (BC) resulting from application of &lt;B1+. The implication is that outputs</context>
</contexts>
<marker>Hockenmaier, Steedman, 2002</marker>
<rawString>Julia Hockenmaier and Mark Steedman. 2002. Generative Models for Statistical Parsing with Combinatory Categorial Grammar. In Proceedings. of ACL 40, pages 335–342, Philadelpha, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pauline Jacobson</author>
</authors>
<title>Raising as Function Composition. Linguistics and Philosophy,</title>
<date>1990</date>
<pages>13--423</pages>
<contexts>
<context position="8651" citStr="Jacobson, 1990" startWordPosition="1424" endWordPosition="1425"> categories, such as (s/(vp/np))/(s/np) for what, this is exactly the sort of strong-arm tactic that inclusion of the standard B, T, and S rules is meant to avoid. 3.2 English Auxiliary Verbs The standard CCG analysis for English auxiliary verbs is the type exemplified in (16) (Steedman, 2000, 68), interpreted as a unary operator over sentence meanings (Gamut, 1991; Kratzer, 1991): (16) can F- (s\np)/(s\np) : aPetax.QP(x) However, this type is empirically underdetermined, given a widely-noted set of generalizations suggesting that auxiliaries and raising verbs take no subject argument at all (Jacobson, 1990, a.o.). (17) i. Lack of syntactic restrictions on the subject; ii. Lack of semantic restrictions on the subject; iii. Inheritance of selectional restrictions from the subordinate predicate. Two arguments are made for (16). First, it is necessary so that type-raised subjects can compose with the auxiliary in extraction contexts, as in (18): (18) what I can eat s/(s/np) s/vp vp/vp tv s/vp &gt;B &gt;B s/np &gt; Second, it is claimed to be necessary in order to account for subject-verb agreement, on the assumption that agreement features are domain restrictions on functors of type s\np (Steedman, 1992, 19</context>
<context position="10040" citStr="Jacobson (1990)" startWordPosition="1657" endWordPosition="1658">(19) There appear to have been [ neither [ any catastrophic consequences ], nor [ a drastic change in the average age of retirement ] ] . In (19), appear agrees with two negative-polaritysensitive NPs trapped inside a neither-nor coordinate structure in which they are licensed. Appear therefore does not combine with them directly, showing that the agreement relation need not be mediated by direct application of a subject argument. We conclude, therefore, that the assignment of the vp/vp type to English auxiliaries and modal verbs is unsupported on both formal and linguistic grounds. Following Jacobson (1990), a more empiricallymotivated assignment is (20): s/(vp/np) s/(vp/np) s/vp s/(s/np) what you can ik I haar her wil want en and dat that ik I haar her moet can helpen. help kann can ich I und and wen who darf may ich I noch still wählen? choose vrei, want.2s cui who.dat Fe what po¸ti, can.2s s˘a dai. to give.subj.2s (15) Me me lo puedes it can.2s y and lo debes it must.2s explicar ask s 328 (20) can F- s/s : Apt.Qp Combining (20) with a type-raised subject presents another instance of the structure in (1), where that question words are represented as variable-binding operators (Groenendijk and </context>
</contexts>
<marker>Jacobson, 1990</marker>
<rawString>Pauline Jacobson. 1990. Raising as Function Composition. Linguistics and Philosophy, 13:423–475.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pauline Jacobson</author>
</authors>
<title>Towards a Variable-Free Semantics. Linguistics and Philosophy,</title>
<date>1999</date>
<pages>22--117</pages>
<contexts>
<context position="17603" citStr="Jacobson, 1999" startWordPosition="2914" endWordPosition="2915">g D from B The first is to derive the binary B rules from a unary rule based on the unary combinator 6:5 (36) x/y : f,,y (x/z)/(y/z) : Ahzyaxz.f(hx) We then derive D from B� and show that clause (iii) of (35) holds of Q schematized over both B and D. Applying D to an argument sequence is equivalent to compound application of binary B: (37) (((Df)g)h)x = (fg)(hx) (38) ((((BB)f)g)h)x = ((B(fg))h)x = (fg)(hx) Syntactically, binary B is equivalent to application of unary B� to the primary functor A, followed by applying the secondary functor F to the output of B� by means of function application (Jacobson, 1999): 4We use Steedman’s (Steedman, 1996) “$”-convention for representing argument stacks of length n, for n &gt; 0. 5This is Lambek’s (1958) Division rule, also known as the “Geach rule” (Jacobson, 1999). 330 (39) A r x/y y/z �ˆB (x/z)/(y/z) x/z Bn (n &gt; 1) is derived by applying B� to the primary functor n times. For example, B2 is derived by 2 applications of B� to the primary functor: (40) A r (x/w)/(y/w) Bˆ ((x/w)/z)/((y/w)/z) (x/w)/z The rules for D correspond to application of B� to both the primary and secondary functors, followed by function application: (41) A r x/(y/z) y/w �ˆB �ˆB (x/(w/z))</context>
</contexts>
<marker>Jacobson, 1999</marker>
<rawString>Pauline Jacobson. 1999. Towards a Variable-Free Semantics. Linguistics and Philosophy, 22:117–184.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lauri Karttunen</author>
</authors>
<title>Radical Lexicalism.</title>
<date>1989</date>
<booktitle>Alternative Conceptions of Phrase Structure.</booktitle>
<editor>In Mark Baltin and Anthony Kroch, editors,</editor>
<publisher>University of Chicago Press,</publisher>
<location>Chicago.</location>
<contexts>
<context position="14318" citStr="Karttunen, 1989" startWordPosition="2350" endWordPosition="2351">ally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both &gt;D (s\np)/o(s/onp) &gt; 329 combinatory and logical bases for D. This additionally allows Eisner’s normal form constraints to be derived as grammar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly used are Karttunnen’s chart subsumption check (White and Baldridge, 2003; Hockenmaier and Steedman, 2002) and Eisner’s normal-form constraints (Bozsahin, 1998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical forms: it functions purely on the syntactic types being combined. (30) For a set S of semantically equivalent2 parse trees for a string ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C </context>
</contexts>
<marker>Karttunen, 1989</marker>
<rawString>Lauri Karttunen. 1989. Radical Lexicalism. In Mark Baltin and Anthony Kroch, editors, Alternative Conceptions of Phrase Structure. University of Chicago Press, Chicago.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Angelika Kratzer</author>
</authors>
<date>1991</date>
<booktitle>Modality. In Arnim von Stechow</booktitle>
<pages>639--650</pages>
<editor>and Dieter Wunderlich, editors,</editor>
<location>Berlin.</location>
<contexts>
<context position="8420" citStr="Kratzer, 1991" startWordPosition="1391" endWordPosition="1392">who.dat what ¸si and “Consider to whom you want and to whom you are able to give what.” me me “You can and should explain it to me.” It is thus a general phenomenon, not just a quirk of English. While it could be handled with extra categories, such as (s/(vp/np))/(s/np) for what, this is exactly the sort of strong-arm tactic that inclusion of the standard B, T, and S rules is meant to avoid. 3.2 English Auxiliary Verbs The standard CCG analysis for English auxiliary verbs is the type exemplified in (16) (Steedman, 2000, 68), interpreted as a unary operator over sentence meanings (Gamut, 1991; Kratzer, 1991): (16) can F- (s\np)/(s\np) : aPetax.QP(x) However, this type is empirically underdetermined, given a widely-noted set of generalizations suggesting that auxiliaries and raising verbs take no subject argument at all (Jacobson, 1990, a.o.). (17) i. Lack of syntactic restrictions on the subject; ii. Lack of semantic restrictions on the subject; iii. Inheritance of selectional restrictions from the subordinate predicate. Two arguments are made for (16). First, it is necessary so that type-raised subjects can compose with the auxiliary in extraction contexts, as in (18): (18) what I can eat s/(s/n</context>
</contexts>
<marker>Kratzer, 1991</marker>
<rawString>Angelika Kratzer. 1991. Modality. In Arnim von Stechow and Dieter Wunderlich, editors, Semantics: An International Handbook of Contemporary Semantic Research, pages 639–650. Walter de Gruyter, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Geert-Jan M Kruijff</author>
<author>Pierre Lison</author>
<author>Trevor Benjamin</author>
<author>Henrik Jacobsson</author>
<author>Nick Hawes</author>
</authors>
<title>Incremental, Multi-Level Processing for Comprehending Situated Dialogue in Human-Robot Interaction.</title>
<date>2007</date>
<booktitle>In Language and Robots: Proceedings from the Symposium (LangRo’2007),</booktitle>
<location>Aveiro, Portugal.</location>
<contexts>
<context position="1271" citStr="Kruijff et al., 2007" startWordPosition="191" endWordPosition="194">se (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for certain linguistic constructions and greater incrementality. Following Wittenburg (1987), we remedy </context>
<context position="26620" citStr="Kruijff et al., 2007" startWordPosition="4509" endWordPosition="4512">tances of D as there are rules in the standard rule set. Our proposal retains B and S, but, thanks to Eisner NF, eliminates spurious ambiguity, a result that Wittenburg was not able to realize at the time. Our approach can be incorporated into Eisner NF straightforwardly However, Eisner NF disprefers incremental analyses by forcing right-corner analyses of long-distance dependencies, such as in (58): (58) (What (does (Grommet (think (Tottie (said (Victor (knows (Wallace ate)))))))))? For applications that call for increased incrementality (e.g., aligning visual and spoken input incrementally (Kruijff et al., 2007)), CCG rules that do not produce inert categories can be derived a CTL basis that does not require ♦a,et for associativity and permutation. The D-rules derived from this kind of CTL specification would allow for left-corner analyses of such dependencies with the competence grammar. An extracted element can “wrap around” the words intervening between it and its extraction site. For example, D would allow the following bracketing for the same example (while producing the same logical form): (59) (((((((((What does) Grommet) think) Tottie) said) Victor) knows) Wallace) ate)? Finally, the unary co</context>
</contexts>
<marker>Kruijff, Lison, Benjamin, Jacobsson, Hawes, 2007</marker>
<rawString>Geert-Jan M. Kruijff, Pierre Lison, Trevor Benjamin, Henrik Jacobsson, and Nick Hawes. 2007. Incremental, Multi-Level Processing for Comprehending Situated Dialogue in Human-Robot Interaction. In Language and Robots: Proceedings from the Symposium (LangRo’2007), Aveiro, Portugal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joachim Lambek</author>
</authors>
<title>The mathematics of sentence structure.</title>
<date>1958</date>
<journal>American Mathematical Monthly,</journal>
<volume>65</volume>
<pages>169</pages>
<marker>Lambek, 1958</marker>
<rawString>Joachim Lambek. 1958. The mathematics of sentence structure. American Mathematical Monthly, 65:154– 169.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marta Luján</author>
</authors>
<date>1980</date>
<booktitle>Clitic Promotion and Mood in Spanish Verbal Complements. Linguistics,</booktitle>
<pages>18--381</pages>
<contexts>
<context position="11567" citStr="Luján, 1980" startWordPosition="1924" endWordPosition="1925">os. cl.1p made.3s read the Lord of the Rings “He made us read The Lord of the Rings.” The aspect of the construction that is relevant here is that the causative verb hacer appears to take an object argument understood as the subject or agent of the subordinate verb (the causee). However, it has been argued that Spanish causative verbs do not in fact take objects (Ackerman and Moore, 1999, and refs therein). There are two arguments for this. First, syntactic alternations that apply to objecttaking verbs, such as passivization and periphrasis with subjunctive complements, do not apply to hacer (Luján, 1980). Second, hacer specifies neither the case form of the causee, nor any semantic entailments with respect to it. These are instead determined by syntactic, semantic, and pragmatic factors, such as transitivity, word order, animacy, gender, social prestige, and referential specificity (Finnemann, 1982, a.o). Thus, there is neither syntactic nor semantic evidence that hacer takes an object argument. On this basis, we assign hacer the category (23): (23) hacer F- (s\np)/s : APAx.cause0Px However, Spanish has examples of cross-conjunct extraction in which hacer hosts clitics: (24) No solo le ordena</context>
</contexts>
<marker>Luján, 1980</marker>
<rawString>Marta Luján. 1980. Clitic Promotion and Mood in Spanish Verbal Complements. Linguistics, 18:381–484.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Moortgat</author>
</authors>
<title>Categorial Type Logics.</title>
<date>1997</date>
<booktitle>In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language,</booktitle>
<pages>93--177</pages>
<publisher>North</publisher>
<location>Holland, Amsterdam.</location>
<contexts>
<context position="3817" citStr="Moortgat (1997)" startWordPosition="617" endWordPosition="618">008 Association for Computational Linguistics (3) FA: (&gt;) x/?y y ⇒ x (&lt;) y x\?y ⇒ x B: (&gt;B) x/oy y/oz ⇒ x/oz (&lt;B) y\oz x\oy ⇒ x\.z (&gt;B×) x/×y y\×z ⇒ x\×z (&lt;B×) y/×z x\×y ⇒ x/×z T: (&gt;T) x ⇒ t/i(t\ix) (&lt;T) x ⇒ t\i(t/ix) The symbols {*, o, x, ·} are modalities that allow subtypes of slashes to be defined; this in turn allows the slashes on categories to be defined in a way that allows them to be used (or not) with specific subsets of the above rules. The rules of this multimodal version of CCG (Baldridge, 2002; Baldridge and Kruijff, 2003) are derived as theorems of a Categorial Type Logic (CTL, Moortgat (1997)). This treats CCG as a compilation of CTL proofs, providing a principled, grammar-internal basis for restrictions on the CCG rules, transferring languageparticular restrictions on rule application to the lexicon, and allowing the CCG rules to be viewed as grammatical universals (Baldridge and Kruijff, 2003; Steedman and Baldridge, To Appear). These rules—especially the B rules—allow derivations to be partially associative: given appropriate type assignments, a string ABC can be analyzed as either A(BC) or (AB)C. This associativity leads to elegant analyses of phenomena that demand more effort</context>
<context position="24376" citStr="Moortgat (1997)" startWordPosition="4132" endWordPosition="4133">idge’s system simply by keying all structural rules to the ant-modality, the result being that all proofs involving structural rules result in inert functors. As desired, the D-rules result in inert categories as well. For example, &gt;D is derived as follows (✷ant and ♦ant are abbreviated as ✷� and ♦): 6Note that the diamond operator used here is a syntactic operator, rather than a semantic operator as used in (16) above. The unary modalities used in CTL describe accessibility relationships between subtypes and supertypes of particular categories: in effect, they define feature hierarchies. See Moortgat (1997) and Oehrle (To Appear) for further explanation. [/E] (f1 ◦· g2) ` y\×z [LP] [/�I] [ARP] [ALP] [♦E] 332 (54) r ` y/ow [a ` ❑↓(w/oz)]1 [b ` ❑↓z]2 131E] [DIE] ♦a ` wfoz ♦b ` z ((A ◦* r) ◦* d) ` x (A ◦o r) ` x/o♦❑↓(w/oz) (54)-(55) can be used as a lemma corresponding to the CCG rule in (57): (56) A ` x/o(y/o♦❑↓z) r ` y/ow (A ◦o r) ` x/o♦1(w/*z) ] ❑ (57) x/o(y/*!z) y/°w ⇒ x/o!(w/a) This means that all CCG rules compiled from the logic—which requires ♦a,et to licence the structural rules necessary to prove the rules—return inert functors. Eisner NF thus falls out of the logic because all instances </context>
</contexts>
<marker>Moortgat, 1997</marker>
<rawString>Michael Moortgat. 1997. Categorial Type Logics. In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language, pages 93–177. North Holland, Amsterdam.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Richard T Oehrle</author>
</authors>
<title>To Appear. Multi-Modal Type Logical Grammar.</title>
<booktitle>In Boersley and Börjars (Borsley and Börjars, To Appear).</booktitle>
<marker>Oehrle, </marker>
<rawString>Richard T Oehrle. To Appear. Multi-Modal Type Logical Grammar. In Boersley and Börjars (Borsley and Börjars, To Appear).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Pickering</author>
<author>Guy Barry</author>
</authors>
<date>1993</date>
<booktitle>Dependency Categorial Grammar and Coordination. Linguistics,</booktitle>
<pages>31--855</pages>
<contexts>
<context position="6558" citStr="Pickering and Barry (1993)" startWordPosition="1073" endWordPosition="1076">ly partially associative. Here, we discuss several situations which require greater associativity and thus cannot be given an adequate analysis with CCG as standardly defined. These structures have in common that a category of the form x|(y|z) must combine with one of the form y|w—exactly the configuration handled by the D schemata in (1). 3.1 Cross-Conjunct Extraction In the first situation, a question word is distributed across auxiliary or subordinating verb categories: (10) ... what you can and what you must not base your verdict on. We call this cross-conjunct extraction. It was noted by Pickering and Barry (1993) for English, but to the best of our knowledge it has not been treated in the have type-raised lexical assignments. We also suppress semantic representations in the derivations for the sake of space. (vp\dt)\(vp\dt) &lt; vp s 327 CCG literature, nor noted in other languages. The problem it presents to CCG is clear in (11), which shows the necessary derivation of (10) using standard multimodal category assignments. For the tokens of what to form constituents with you can and you must not, they must must combine directly. The problem is that these constituents (in bold) cannot be created with the s</context>
</contexts>
<marker>Pickering, Barry, 1993</marker>
<rawString>Martin Pickering and Guy Barry. 1993. Dependency Categorial Grammar and Coordination. Linguistics, 31:855–902.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Reitter</author>
<author>Julia Hockenmaier</author>
<author>Frank Keller</author>
</authors>
<title>Priming Effects in Combinatory Categorial Grammar.</title>
<date>2006</date>
<booktitle>In Proceedings of EMNLP-2006.</booktitle>
<contexts>
<context position="1387" citStr="Reitter et al., 2006" startWordPosition="208" endWordPosition="211"> the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for certain linguistic constructions and greater incrementality. Following Wittenburg (1987), we remedy this by adding a set of rules based on the D combinator of combinatory logic (Curry and Feys, 1958). (1) x/(y/z):f y</context>
</contexts>
<marker>Reitter, Hockenmaier, Keller, 2006</marker>
<rawString>David Reitter, Julia Hockenmaier, and Frank Keller. 2006. Priming Effects in Combinatory Categorial Grammar. In Proceedings of EMNLP-2006.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Mark Steedman</author>
<author>Jason Baldridge</author>
</authors>
<title>To Appear. Combinatory Categorial Grammar.</title>
<booktitle>In Borsley and Börjars (Borsley and Börjars, To Appear).</booktitle>
<marker>Steedman, Baldridge, </marker>
<rawString>Mark Steedman and Jason Baldridge. To Appear. Combinatory Categorial Grammar. In Borsley and Börjars (Borsley and Börjars, To Appear).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Surface Structure and Interpretation.</title>
<date>1996</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="17640" citStr="Steedman, 1996" startWordPosition="2919" endWordPosition="2920"> binary B rules from a unary rule based on the unary combinator 6:5 (36) x/y : f,,y (x/z)/(y/z) : Ahzyaxz.f(hx) We then derive D from B� and show that clause (iii) of (35) holds of Q schematized over both B and D. Applying D to an argument sequence is equivalent to compound application of binary B: (37) (((Df)g)h)x = (fg)(hx) (38) ((((BB)f)g)h)x = ((B(fg))h)x = (fg)(hx) Syntactically, binary B is equivalent to application of unary B� to the primary functor A, followed by applying the secondary functor F to the output of B� by means of function application (Jacobson, 1999): 4We use Steedman’s (Steedman, 1996) “$”-convention for representing argument stacks of length n, for n &gt; 0. 5This is Lambek’s (1958) Division rule, also known as the “Geach rule” (Jacobson, 1999). 330 (39) A r x/y y/z �ˆB (x/z)/(y/z) x/z Bn (n &gt; 1) is derived by applying B� to the primary functor n times. For example, B2 is derived by 2 applications of B� to the primary functor: (40) A r (x/w)/(y/w) Bˆ ((x/w)/z)/((y/w)/z) (x/w)/z The rules for D correspond to application of B� to both the primary and secondary functors, followed by function application: (41) A r x/(y/z) y/w �ˆB �ˆB (x/(w/z))/((y/z)/(w/z)) (y/z)/(w/z) x/(w/z) As</context>
</contexts>
<marker>Steedman, 1996</marker>
<rawString>Mark Steedman. 1996. Surface Structure and Interpretation. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>The Syntactic Process.</title>
<date>2000</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="883" citStr="Steedman (2000)" startWordPosition="139" endWordPosition="140">r (CCG) fails to provide satisfactory analyses for a number of syntactic structures found in natural languages. These structures can be analyzed elegantly by augmenting CCG with a class of rules based on the combinator D (Curry and Feys, 1958). We show two ways to derive the D rules: one based on unary composition and the other based on a logical characterization of CCG’s rule base (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This s</context>
<context position="5126" citStr="Steedman, 2000" startWordPosition="829" endWordPosition="830"> gave Stan a beer and Max a coke. (5) I will buy and you will eat a cheeseburger. The coordinated constituents are challenging because they are at odds with standardly assumed phrase structure constituents. In CCG, such constituents simply follow from the associativity added by the B and T rules. For example, given the category assignments in (6) and the abbreviations in (7), (4) is analyzed as in (8) and (9). Each conjunct is a pair of type-raised NPs combined by means of the &gt;B-rule, deriving two composed constituents that are arguments to the conjunction:1 (6) i. Bob ` s/(s\np) 1We follow (Steedman, 2000) in assuming that type-raising applies in the lexicon, and therefore that nominals such as Stan ii. Stan, Max ` ((s\np)/np)\(((s\np)/np)/np) iii. a beer, a coke ` (s\np)\((s\np)/np) iv. and ` (x\?x)/?x v. gave ` ((s\np)/np)/np (7) i. vp = s\np ii. tv = (s\np)/np iii. dtv = ((s\np)/np)/np (8) Stan a beer and Max a coke tv\dt vp\tv (x\?x)/?x tv\dt vp\tv &lt;B &lt;B vp\dt vp\dt &gt; vp\dt (9) Bill gave Stan a beer and Max a coke s/vp dt vp\dt &lt; &gt; Similarly, I will buy is derived with category s/np by assuming the category (6i) for I and composing that with both verbs in turn. CCG’s approach is appealing b</context>
<context position="8330" citStr="Steedman, 2000" startWordPosition="1377" endWordPosition="1378">Whom can I and whom may I still chose?” (14) Gandeste-te cui Fe consider.imper.2s-refl.2s who.dat what ¸si and “Consider to whom you want and to whom you are able to give what.” me me “You can and should explain it to me.” It is thus a general phenomenon, not just a quirk of English. While it could be handled with extra categories, such as (s/(vp/np))/(s/np) for what, this is exactly the sort of strong-arm tactic that inclusion of the standard B, T, and S rules is meant to avoid. 3.2 English Auxiliary Verbs The standard CCG analysis for English auxiliary verbs is the type exemplified in (16) (Steedman, 2000, 68), interpreted as a unary operator over sentence meanings (Gamut, 1991; Kratzer, 1991): (16) can F- (s\np)/(s\np) : aPetax.QP(x) However, this type is empirically underdetermined, given a widely-noted set of generalizations suggesting that auxiliaries and raising verbs take no subject argument at all (Jacobson, 1990, a.o.). (17) i. Lack of syntactic restrictions on the subject; ii. Lack of semantic restrictions on the subject; iii. Inheritance of selectional restrictions from the subordinate predicate. Two arguments are made for (16). First, it is necessary so that type-raised subjects can</context>
</contexts>
<marker>Steedman, 2000</marker>
<rawString>Mark Steedman. 2000. The Syntactic Process. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael White</author>
<author>Jason Baldridge</author>
</authors>
<title>Adapting Chart Realization to CCG.</title>
<date>2003</date>
<booktitle>In Proceedings of ENLG.</booktitle>
<contexts>
<context position="14451" citStr="White and Baldridge, 2003" startWordPosition="2368" endWordPosition="2371">binatory and logical bases for D. This additionally allows Eisner’s normal form constraints to be derived as grammar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly used are Karttunnen’s chart subsumption check (White and Baldridge, 2003; Hockenmaier and Steedman, 2002) and Eisner’s normal-form constraints (Bozsahin, 1998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical forms: it functions purely on the syntactic types being combined. (30) For a set S of semantically equivalent2 parse trees for a string ABC, admit the unique parse tree such that at least one of (i) or (ii) holds: i. C is not the argument of (AB) resulting from application of &gt;B1 +. ii. A is not the argument of (BC) resulting from application of &lt;B1+</context>
</contexts>
<marker>White, Baldridge, 2003</marker>
<rawString>Michael White and Jason Baldridge. 2003. Adapting Chart Realization to CCG. In Proceedings of ENLG.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael White</author>
</authors>
<title>Efficient Realization of Coordinate Structures</title>
<date>2006</date>
<booktitle>in Combinatory Categorial Grammar. Research on Language and Computation,</booktitle>
<pages>4--1</pages>
<contexts>
<context position="1173" citStr="White, 2006" startWordPosition="180" endWordPosition="181">d on unary composition and the other based on a logical characterization of CCG’s rule base (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for ce</context>
</contexts>
<marker>White, 2006</marker>
<rawString>Michael White. 2006. Efficient Realization of Coordinate Structures in Combinatory Categorial Grammar. Research on Language and Computation, 4(1):39–75.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kent Wittenburg</author>
</authors>
<title>Predictive Combinators: A Method for Efficient Processing of Combinatory Categorial Grammars.</title>
<date>1987</date>
<booktitle>In Proceedings of ACL 25.</booktitle>
<contexts>
<context position="1859" citStr="Wittenburg (1987)" startWordPosition="278" endWordPosition="279">ystems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for certain linguistic constructions and greater incrementality. Following Wittenburg (1987), we remedy this by adding a set of rules based on the D combinator of combinatory logic (Curry and Feys, 1958). (1) x/(y/z):f y/w:g =:� x/(w/z):Ah.f(Ax.ghx) We show that CCG augmented with this rule improves CCG’s empirical coverage by allowing better analyses of modal verbs in English and causatives in Spanish, and certain coordinate constructions. The D rules are well-behaved; we show this by deriving them both from unary composition and from the logic defined by Baldridge (2002). Both perspectives on D ensure that the new rules are compatible with normal form constraints (Eisner, 1996) for</context>
<context position="14100" citStr="Wittenburg, 1987" startWordPosition="2312" endWordPosition="2313">ng CCG’s committment to low categorial ambiguity and semantic transparency. 4 Deriving Eisner Normal Form Adding new rules can have implications for parsing efficiency. In this section, we show that the D rules fit naturally within standard normal form constraints for CCG parsing (Eisner, 1996), by providing both &gt;D (s\np)/o(s/onp) &gt; 329 combinatory and logical bases for D. This additionally allows Eisner’s normal form constraints to be derived as grammar internal theorems. 4.1 The Spurious Ambiguity Problem CCG’s flexibility is useful for linguistic analyses, but leads to spurious ambiguity (Wittenburg, 1987) due to the associativity introduced by the B and T rules. This can incur a high computational cost which parsers must deal with. Several techniques have been proposed for the problem (Wittenburg, 1987; Karttunen, 1989; Hepple and Morrill, 1989; Eisner, 1996). The most commonly used are Karttunnen’s chart subsumption check (White and Baldridge, 2003; Hockenmaier and Steedman, 2002) and Eisner’s normal-form constraints (Bozsahin, 1998; Clark and Curran, 2007). Eisner’s normal form, referred to here as Eisner NF and paraphrased in (30), has the advantage of not requiring comparisons of logical f</context>
<context position="25774" citStr="Wittenburg (1987)" startWordPosition="4376" endWordPosition="4377">ining parsing. 5 Conclusion Including the D-combinator rules in the CCG rule set lets us capture several linguistic generalizations that lack satisfactory analyses in standard CCG. Furthermore, CCG augmented with D is compatible with Eisner NF (Eisner, 1996), a standard technique for controlling derivational ambiguity in CCG-parsers, and also with the modalized version of CCG (Baldridge and Kruijff, 2003). A consequence is that both the D rules and the NF constraints can be derived from a grammar-internal perspective. This extends CCG’s linguistic applicability without sacrificing efficiency. Wittenburg (1987) originally proposed using rules based on D as a way to reduce spurious ambiguity, which he achieved by eliminating B rules entirely and replacing them with variations on D. Wittenburg notes that doing so produces as many instances of D as there are rules in the standard rule set. Our proposal retains B and S, but, thanks to Eisner NF, eliminates spurious ambiguity, a result that Wittenburg was not able to realize at the time. Our approach can be incorporated into Eisner NF straightforwardly However, Eisner NF disprefers incremental analyses by forcing right-corner analyses of long-distance de</context>
</contexts>
<marker>Wittenburg, 1987</marker>
<rawString>Kent Wittenburg. 1987. Predictive Combinators: A Method for Efficient Processing of Combinatory Categorial Grammars. In Proceedings of ACL 25.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Luke Zettlemoyer</author>
<author>Michael Collins</author>
</authors>
<title>Online Learning of Relaxed CCG Grammars for Parsing to Logical Form.</title>
<date>2007</date>
<booktitle>In Proceedings of EMNLP-CoNLL</booktitle>
<contexts>
<context position="1232" citStr="Zettlemoyer and Collins, 2007" startWordPosition="185" endWordPosition="188">d on a logical characterization of CCG’s rule base (Baldridge, 2002). We also show how Eisner’s (1996) normal form constraints follow from this logic, ensuring that the D rules do not lead to spurious ambiguities. 1 Introduction Combinatory Categorial Grammar (CCG, Steedman (2000)) is a compositional, semantically transparent formalism that is both linguistically expressive and computationally tractable. It has been used for a variety of tasks, such as wide-coverage parsing (Hockenmaier and Steedman, 2002; Clark and Curran, 2007), sentence realization (White, 2006), learning semantic parsers (Zettlemoyer and Collins, 2007), dialog systems (Kruijff et al., 2007), grammar engineering (Beavers, 2004; Baldridge et al., 2007), and modeling syntactic priming (Reitter et al., 2006). A distinctive aspect of CCG is that it provides a very flexible notion of constituency. This supports elegant analyses of several phenomena (e.g., coordination, long-distance extraction, and intonation) and allows incremental parsing with the competence grammar (Steedman, 2000). Here, we argue that even with its flexibility, CCG as standardly defined is not permissive enough for certain linguistic constructions and greater incrementality. </context>
</contexts>
<marker>Zettlemoyer, Collins, 2007</marker>
<rawString>Luke Zettlemoyer and Michael Collins. 2007. Online Learning of Relaxed CCG Grammars for Parsing to Logical Form. In Proceedings of EMNLP-CoNLL 2007.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>