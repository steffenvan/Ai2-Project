<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001602">
<title confidence="0.724284666666667">
Book Reviews
Language at Work: Analyzing Communication Breakdown in the
Workplace to Inform Systems Design
</title>
<author confidence="0.821745">
Keith Devlin and Duska Rosenberg
</author>
<affiliation confidence="0.56104">
(Saint Mary&apos;s College of California and Brunel University)
</affiliation>
<construct confidence="0.22330225">
Stanford: CSLI Publications (CSLI
lecture notes, number 66), 1996,
vii+212 pp; distributed by Cambridge
University Press; hardbound, ISBN
1-57586-050-3, $59.95; paperbound,
ISBN 1-57586-051-1, $19.95
Reviewed by
John F. Sowa
</construct>
<bodyText confidence="0.9997764">
In this book, Devlin, the mathematician, and Rosenberg, the sociologist, describe their
collaboration in analyzing human communication and applying their techniques to
practical problems of classifying the way that business documents convey information.
As they say in their preface:
Our position felt like two people who have leapt toward each other
from opposite banks of a river. We had met in the middle and made
contact. But we realized that with nothing to support us, we were
rapidly sinking. Devlin&apos;s mathematics did not apply to the messy lan-
guage data we were trying to deal with. Rosenberg&apos;s trusted toolkit
of descriptive techniques were unable to produce enough precision in
the analysis to be of much use to the system designer who wanted to
build an information system.
We needed an island. But there was no island. So we did the next
best thing. We started to construct a pontoonâ€”a floating platform in
the middle of the river, neither mathematics on the one hand nor
sociological on the other, but something in between.
Their pontoon is a technique they call Layered Formalism and Zooming (LFZ), which
combines Rosenberg&apos;s sociology with Devlin&apos;s formalism.
The mathematical formalism of LFZ is based on situation semantics, as introduced
by Barwise and Perry (1983) and further codified by Devlin (1991). In the present book,
Devlin gives a self-contained 20-page summary of situation semantics that serves as the
foundation for the formal treatment. The sociology of LFZ is based on the techniques
of ethnomethodology, especially in the framework of the late Harvey Sacks (1992).
Rosenberg summarizes Sacks&apos;s approach by taking one of his examples:
The baby cried. The mommy picked it up.
These two sentences were uttered by a small child who was asked &amp;quot;to tell a story.&amp;quot;
Sacks analyzed the background knowledge that the story teller and the listener needed
to know in order to make sense of those two sentences and their expected implica-
tions. The authors then mapped Sacks&apos;s approach into the notation and terminology
of situation semantics. The result, which they call LFZ, is an iterative method of ana-
</bodyText>
<page confidence="0.990989">
649
</page>
<note confidence="0.423439">
Computational Linguistics Volume 24, Number 4
</note>
<bodyText confidence="0.981975102040816">
lyzing a subject, refining the analysis, and progressively &amp;quot;zooming in&amp;quot; to deepen the
analysis in areas where difficulties arise.
To test LFZ, the authors applied their techniques to actual data in problem report
forms (PRFs) from a British computer company. Each PRF is a highly abbreviated and
stylized summary of some engineer&apos;s response to a customer problem. The authors
used LFZ to develop an ontology of the categories represented in the reports, the
kinds of situations described by each report, and the communication processes that
take place between the engineers who write the PRFs and the experts who interpret
them. In the conclusion of the book, Devlin and Rosenberg claim that they had met
their personal goals of showing that situation theory and Sacks&apos;s methodology can be
used together to analyze actual data from industrial applications. The results were of
sufficient business interest that the authors have been employed by the company to
continue their work.
The original reason why the company asked the authors to begin this project is
that earlier attempts to systematize and automate the analysis and classification of
PRFs had failed. Each PRF is a brief, seemingly simple, and well-formatted summary.
Yet the analysis of a PRF required a highly trained engineer; it could not be analyzed
by a computer program or even by a clerk who had learned to read the PRF formats.
Although Devlin and Rosenberg did not succeed in automating the process, they did
acquire a better understanding of the complexity hidden behind apparently simple
data. I hope that better understanding will eventually lead to better software design.
The conclusions at the end of the book are painfully familiar to anyone who
has attempted to apply AT techniques to automate the analysis and understanding
of natural language. The highly formatted PRFs appear to be more structured, more
systematized, and more restricted than natural language sentences. Yet all the hard
problems of language understanding remain. What makes a PRF seem structured are
the easy parts at the beginning: fields such as &amp;quot;Site Number&amp;quot; and &amp;quot;Customer Name.&amp;quot;
But all the difficulties lie in the fields that allow the engineer to write a few English
phrases:
Call text: FP1500 LP02 TRACTOR SLIPPING
Clearance text: RESET TRACTORS TO ORIG POSITION
People who have not worked in NLP often think that the limited grammar of
such phrases simplifies the problem. In fact, grammar is one of the few aspects of
language that has been well understood and implemented in increasingly satisfactory
parsers for over 30 years. The difficulties are created by the enormous volume of world
knowledge that is required. In this application, every part of every machine has its
own peculiar way of interacting with every other part. The short phrases of a PRF can
be understood by an engineer who is familiar with the machine and its operation, but
they are meaningless to a computer or to a human who does not know the subject
matter.
In their survey of other approaches, the authors discuss the criticisms of situa-
tion theory by Terry Winograd, who had early success in analyzing language about
the blocks world, but later became disillusioned about the prospects of extending the
techniques to a more realistic use of language. The authors acknowledge that Wino-
grad and Flores (1986) &amp;quot;make a significant contribution to our understanding of design
as they emphasize the crucial role real language plays in what people do with com-
puters.&amp;quot; But they claim that their combination of situation theory with sociology is an
approach that begins to address the limitations of the Al approaches that Winograd
had abandoned. The emphasis here should be on the word &amp;quot;begin&amp;quot; because far more
</bodyText>
<page confidence="0.9939">
650
</page>
<subsectionHeader confidence="0.600311">
Book Reviews
</subsectionHeader>
<bodyText confidence="0.999722384615385">
needs to be done, especially in replacing Devlin and Rosenberg&apos;s temporary pontoon
with a much more substantial bridge between the formalism and the techniques of
sociology
This book is very much a preliminary report of work in progress. It is encouraging
to see such interdisciplinary collaboration that addresses real problems that people are
willing to pay money to solve, but the authors admit that they have not yet been able
to redesign the company&apos;s information systems to improve the way they use PRFs.
Although Devlin has taught Rosenberg enough of the formalism for her to work
independently, neither of them gives the reader enough information to be able to
duplicate that feat. More examples would have been useful, and more comparisons
with other projects in Al and computational linguistics would help provide some
perspective. A future book should also include the contributions of other paradigms
besides situation semantics.
</bodyText>
<sectionHeader confidence="0.975202" genericHeader="abstract">
References
</sectionHeader>
<reference confidence="0.9905480625">
Barwise, Jon, and John Perry 1983. Situations
and Attitudes. The MIT Press, Cambridge,
MA.
Devlin, Keith. 1991. Logic and Information.
Cambridge University Press, Cambridge.
Sacks, Harvey 1992. Lectures on
Conversation. Basil Blackwell, Oxford.
Winograd, Terry and Fernando Flores. 1986.
Understanding Computers and Cognition: A
New Foundation for Design. Ablex,
Norwood, NJ. Republished, 1995,
Addison-Wesley, Reading, MA.
John F. Sowa is a Fellow of the AAAI who has been working on knowledge representation
and computational linguistics. His theory of conceptual graphs has been proposed as a draft
ANSI standard. Sowa&apos;s address is 21 Palmer Avenue, Croton-on-Hudson, NY 10520; e-mail:
sowa@west.poly.edu
</reference>
<page confidence="0.998465">
651
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.124450">
<title confidence="0.922450666666667">Book Reviews Language at Work: Analyzing Communication Breakdown in the Workplace to Inform Systems Design</title>
<author confidence="0.998585">Keith Devlin</author>
<author confidence="0.998585">Duska Rosenberg</author>
<affiliation confidence="0.991384">(Saint Mary&apos;s College of California and Brunel University)</affiliation>
<address confidence="0.727113">Stanford: CSLI Publications (CSLI</address>
<note confidence="0.9621595">lecture notes, number 66), 1996, vii+212 pp; distributed by Cambridge University Press; hardbound, ISBN 1-57586-050-3, $59.95; paperbound, ISBN 1-57586-051-1, $19.95 Reviewed by</note>
<author confidence="0.97829">John F Sowa</author>
<abstract confidence="0.998658645833334">In this book, Devlin, the mathematician, and Rosenberg, the sociologist, describe their in analyzing and applying their techniques to practical problems of classifying the way that business documents convey information. As they say in their preface: position felt like two people who toward each other from opposite banks of a river. We had met in the middle and made contact. But we realized that with nothing to support us, we were rapidly sinking. Devlin&apos;s mathematics did not apply to the messy language data we were trying to deal with. Rosenberg&apos;s trusted toolkit of descriptive techniques were unable to produce enough precision in the analysis to be of much use to the system designer who wanted to build an information system. We needed an island. But there was no island. So we did the next best thing. We started to construct a pontoonâ€”a floating platform in the middle of the river, neither mathematics on the one hand nor sociological on the other, but something in between. Their pontoon is a technique they call Layered Formalism and Zooming (LFZ), which combines Rosenberg&apos;s sociology with Devlin&apos;s formalism. mathematical formalism of LFZ is based on semantics, introduced by Barwise and Perry (1983) and further codified by Devlin (1991). In the present book, Devlin gives a self-contained 20-page summary of situation semantics that serves as the for the formal treatment. The sociology of LFZ is based on techniques in the framework of the late Harvey Sacks (1992). Rosenberg summarizes Sacks&apos;s approach by taking one of his examples: The baby cried. The mommy picked it up. These two sentences were uttered by a small child who was asked &amp;quot;to tell a story.&amp;quot; Sacks analyzed the background knowledge that the story teller and the listener needed to know in order to make sense of those two sentences and their expected implications. The authors then mapped Sacks&apos;s approach into the notation and terminology situation semantics. The result, which they call LFZ, is an iterative method of ana- 649 Computational Linguistics Volume 24, Number 4 lyzing a subject, refining the analysis, and progressively &amp;quot;zooming in&amp;quot; to deepen the analysis in areas where difficulties arise. test LFZ, the authors applied their techniques to actual data in report from a British computer company. Each PRF is a highly abbreviated and stylized summary of some engineer&apos;s response to a customer problem. The authors used LFZ to develop an ontology of the categories represented in the reports, the kinds of situations described by each report, and the communication processes that take place between the engineers who write the PRFs and the experts who interpret them. In the conclusion of the book, Devlin and Rosenberg claim that they had met their personal goals of showing that situation theory and Sacks&apos;s methodology can be used together to analyze actual data from industrial applications. The results were of sufficient business interest that the authors have been employed by the company to continue their work. The original reason why the company asked the authors to begin this project is that earlier attempts to systematize and automate the analysis and classification of PRFs had failed. Each PRF is a brief, seemingly simple, and well-formatted summary. Yet the analysis of a PRF required a highly trained engineer; it could not be analyzed by a computer program or even by a clerk who had learned to read the PRF formats. Although Devlin and Rosenberg did not succeed in automating the process, they did acquire a better understanding of the complexity hidden behind apparently simple data. I hope that better understanding will eventually lead to better software design. The conclusions at the end of the book are painfully familiar to anyone who has attempted to apply AT techniques to automate the analysis and understanding of natural language. The highly formatted PRFs appear to be more structured, more systematized, and more restricted than natural language sentences. Yet all the hard problems of language understanding remain. What makes a PRF seem structured are the easy parts at the beginning: fields such as &amp;quot;Site Number&amp;quot; and &amp;quot;Customer Name.&amp;quot; all the difficulties lie in the fields that allow the engineer write a few phrases: Call text: FP1500 LP02 TRACTOR SLIPPING Clearance text: RESET TRACTORS TO ORIG POSITION People who have not worked in NLP often think that the limited grammar of such phrases simplifies the problem. In fact, grammar is one of the few aspects of language that has been well understood and implemented in increasingly satisfactory parsers for over 30 years. The difficulties are created by the enormous volume of world knowledge that is required. In this application, every part of every machine has its own peculiar way of interacting with every other part. The short phrases of a PRF can be understood by an engineer who is familiar with the machine and its operation, but they are meaningless to a computer or to a human who does not know the subject matter. In their survey of other approaches, the authors discuss the criticisms of situation theory by Terry Winograd, who had early success in analyzing language about the blocks world, but later became disillusioned about the prospects of extending the techniques to a more realistic use of language. The authors acknowledge that Winograd and Flores (1986) &amp;quot;make a significant contribution to our understanding of design as they emphasize the crucial role real language plays in what people do with computers.&amp;quot; But they claim that their combination of situation theory with sociology is an approach that begins to address the limitations of the Al approaches that Winograd had abandoned. The emphasis here should be on the word &amp;quot;begin&amp;quot; because far more 650 Book Reviews needs to be done, especially in replacing Devlin and Rosenberg&apos;s temporary pontoon with a much more substantial bridge between the formalism and the techniques of sociology This book is very much a preliminary report of work in progress. It is encouraging to see such interdisciplinary collaboration that addresses real problems that people are willing to pay money to solve, but the authors admit that they have not yet been able to redesign the company&apos;s information systems to improve the way they use PRFs. Although Devlin has taught Rosenberg enough of the formalism for her to work independently, neither of them gives the reader enough information to be able to duplicate that feat. More examples would have been useful, and more comparisons with other projects in Al and computational linguistics would help provide some perspective. A future book should also include the contributions of other paradigms besides situation semantics.</abstract>
<note confidence="0.9476480625">References Jon, and John Perry 1983. Attitudes. MIT Press, Cambridge, MA. Keith. 1991. and Information. Cambridge University Press, Cambridge. Harvey 1992. on Blackwell, Oxford. Winograd, Terry and Fernando Flores. 1986. Understanding Computers and Cognition: A Foundation for Design. Norwood, NJ. Republished, 1995, Addison-Wesley, Reading, MA. F. Sowa a Fellow of the AAAI who has been working on knowledge representation and computational linguistics. His theory of conceptual graphs has been proposed as a draft ANSI standard. Sowa&apos;s address is 21 Palmer Avenue, Croton-on-Hudson, NY 10520; e-mail:</note>
<email confidence="0.915872">sowa@west.poly.edu</email>
<intro confidence="0.413401">651</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Jon Barwise</author>
<author>John Perry</author>
</authors>
<title>Situations and Attitudes.</title>
<date>1983</date>
<publisher>The MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="1707" citStr="Barwise and Perry (1983)" startWordPosition="261" endWordPosition="264"> produce enough precision in the analysis to be of much use to the system designer who wanted to build an information system. We needed an island. But there was no island. So we did the next best thing. We started to construct a pontoonâ€”a floating platform in the middle of the river, neither mathematics on the one hand nor sociological on the other, but something in between. Their pontoon is a technique they call Layered Formalism and Zooming (LFZ), which combines Rosenberg&apos;s sociology with Devlin&apos;s formalism. The mathematical formalism of LFZ is based on situation semantics, as introduced by Barwise and Perry (1983) and further codified by Devlin (1991). In the present book, Devlin gives a self-contained 20-page summary of situation semantics that serves as the foundation for the formal treatment. The sociology of LFZ is based on the techniques of ethnomethodology, especially in the framework of the late Harvey Sacks (1992). Rosenberg summarizes Sacks&apos;s approach by taking one of his examples: The baby cried. The mommy picked it up. These two sentences were uttered by a small child who was asked &amp;quot;to tell a story.&amp;quot; Sacks analyzed the background knowledge that the story teller and the listener needed to kno</context>
</contexts>
<marker>Barwise, Perry, 1983</marker>
<rawString>Barwise, Jon, and John Perry 1983. Situations and Attitudes. The MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Keith Devlin</author>
</authors>
<title>Logic and Information.</title>
<date>1991</date>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge.</location>
<contexts>
<context position="1745" citStr="Devlin (1991)" startWordPosition="269" endWordPosition="270">f much use to the system designer who wanted to build an information system. We needed an island. But there was no island. So we did the next best thing. We started to construct a pontoonâ€”a floating platform in the middle of the river, neither mathematics on the one hand nor sociological on the other, but something in between. Their pontoon is a technique they call Layered Formalism and Zooming (LFZ), which combines Rosenberg&apos;s sociology with Devlin&apos;s formalism. The mathematical formalism of LFZ is based on situation semantics, as introduced by Barwise and Perry (1983) and further codified by Devlin (1991). In the present book, Devlin gives a self-contained 20-page summary of situation semantics that serves as the foundation for the formal treatment. The sociology of LFZ is based on the techniques of ethnomethodology, especially in the framework of the late Harvey Sacks (1992). Rosenberg summarizes Sacks&apos;s approach by taking one of his examples: The baby cried. The mommy picked it up. These two sentences were uttered by a small child who was asked &amp;quot;to tell a story.&amp;quot; Sacks analyzed the background knowledge that the story teller and the listener needed to know in order to make sense of those two </context>
</contexts>
<marker>Devlin, 1991</marker>
<rawString>Devlin, Keith. 1991. Logic and Information. Cambridge University Press, Cambridge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harvey Sacks</author>
</authors>
<title>Lectures on Conversation.</title>
<date>1992</date>
<publisher>Basil Blackwell,</publisher>
<location>Oxford.</location>
<contexts>
<context position="2021" citStr="Sacks (1992)" startWordPosition="312" endWordPosition="313">ociological on the other, but something in between. Their pontoon is a technique they call Layered Formalism and Zooming (LFZ), which combines Rosenberg&apos;s sociology with Devlin&apos;s formalism. The mathematical formalism of LFZ is based on situation semantics, as introduced by Barwise and Perry (1983) and further codified by Devlin (1991). In the present book, Devlin gives a self-contained 20-page summary of situation semantics that serves as the foundation for the formal treatment. The sociology of LFZ is based on the techniques of ethnomethodology, especially in the framework of the late Harvey Sacks (1992). Rosenberg summarizes Sacks&apos;s approach by taking one of his examples: The baby cried. The mommy picked it up. These two sentences were uttered by a small child who was asked &amp;quot;to tell a story.&amp;quot; Sacks analyzed the background knowledge that the story teller and the listener needed to know in order to make sense of those two sentences and their expected implications. The authors then mapped Sacks&apos;s approach into the notation and terminology of situation semantics. The result, which they call LFZ, is an iterative method of ana649 Computational Linguistics Volume 24, Number 4 lyzing a subject, refi</context>
</contexts>
<marker>Sacks, 1992</marker>
<rawString>Sacks, Harvey 1992. Lectures on Conversation. Basil Blackwell, Oxford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Winograd</author>
<author>Fernando Flores</author>
</authors>
<title>Understanding Computers and Cognition: A New Foundation for Design. Ablex,</title>
<date>1986</date>
<publisher>Addison-Wesley,</publisher>
<location>Norwood, NJ. Republished,</location>
<contexts>
<context position="5941" citStr="Winograd and Flores (1986)" startWordPosition="951" endWordPosition="955">y machine has its own peculiar way of interacting with every other part. The short phrases of a PRF can be understood by an engineer who is familiar with the machine and its operation, but they are meaningless to a computer or to a human who does not know the subject matter. In their survey of other approaches, the authors discuss the criticisms of situation theory by Terry Winograd, who had early success in analyzing language about the blocks world, but later became disillusioned about the prospects of extending the techniques to a more realistic use of language. The authors acknowledge that Winograd and Flores (1986) &amp;quot;make a significant contribution to our understanding of design as they emphasize the crucial role real language plays in what people do with computers.&amp;quot; But they claim that their combination of situation theory with sociology is an approach that begins to address the limitations of the Al approaches that Winograd had abandoned. The emphasis here should be on the word &amp;quot;begin&amp;quot; because far more 650 Book Reviews needs to be done, especially in replacing Devlin and Rosenberg&apos;s temporary pontoon with a much more substantial bridge between the formalism and the techniques of sociology This book is </context>
</contexts>
<marker>Winograd, Flores, 1986</marker>
<rawString>Winograd, Terry and Fernando Flores. 1986. Understanding Computers and Cognition: A New Foundation for Design. Ablex, Norwood, NJ. Republished, 1995, Addison-Wesley, Reading, MA.</rawString>
</citation>
<citation valid="false">
<authors>
<author>F John</author>
</authors>
<title>Sowa is a Fellow of the AAAI who has been working on knowledge representation and computational linguistics. His theory of conceptual graphs has been proposed as a draft ANSI standard. Sowa&apos;s address is 21 Palmer Avenue, Croton-on-Hudson, NY 10520; e-mail: sowa@west.poly.edu</title>
<marker>John, </marker>
<rawString>John F. Sowa is a Fellow of the AAAI who has been working on knowledge representation and computational linguistics. His theory of conceptual graphs has been proposed as a draft ANSI standard. Sowa&apos;s address is 21 Palmer Avenue, Croton-on-Hudson, NY 10520; e-mail: sowa@west.poly.edu</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>