<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000047">
<title confidence="0.8592595">
Squib
Prepositional Phrase Attachment without Oracles
</title>
<author confidence="0.992928">
Michaela Atterer*
</author>
<affiliation confidence="0.992453">
University of Stuttgart
</affiliation>
<author confidence="0.98163">
Hinrich Sch¨utze**
</author>
<affiliation confidence="0.988025">
University of Stuttgart
</affiliation>
<bodyText confidence="0.994098555555555">
Work on prepositional phrase (PP) attachment resolution generally assumes that there is an
oracle that provides the two hypothesized structures that we want to choose between. The
information that there are two possible attachment sites and the information about the lexical
heads of those phrases is usually extracted from gold-standard parse trees. We show that the
performance of reattachment methods is higher with such an oracle than without. Because oracles
are not available in NLP applications, this indicates that the current evaluation methodology for
PP attachment does not produce realistic performance numbers. We argue that PP attachment
should not be evaluated in isolation, but instead as an integral component of a parsing system,
without using information from the gold-standard oracle.
</bodyText>
<sectionHeader confidence="0.995115" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.9999834">
One of the main challenges in natural language parsing is the resolution of ambiguity.
One frequently studied type of ambiguity is prepositional phrase (PP) attachment.
Given the quadruple (v,n1,p,n2), where v is the head of a verb phrase, n1 is the head
of an NP1 dominated by v, p is the head of a prepositional phrase, and n2 the head of an
NP2 embedded in the PP, the task of PP attachment is to determine whether we should
attach the PP to the verb v or the noun n1 (Hindle and Rooth 1993).1
Work on PP attachment resolution generally assumes that there is an oracle that
provides the quadruple (v,n1,p,n2), where we define an oracle as a mechanism that pro-
vides information that is not present in the data in their naturally occurring form. In PP
attachment, the oracle is usually implemented by extracting the quadruple (v,n1,p,n2)
from the gold-standard parse trees. In an application, a PP attachment module would
be used to change the attachment of prepositional phrases in preliminary syntactic
analyses produced by a parser—or reattach them. The problem with oracle-based work
on PP attachment is that when the parser does not find the gold-standard NP1 or PP, for
instance, the attachment ambiguity is not recognized, and the correct solution cannot
</bodyText>
<footnote confidence="0.775728285714286">
* Institute for Natural Language Processing, University of Stuttgart, Azenbergstr.12, 70174 Stuttgart,
Germany. E-mail: atterer@ims.uni-stuttgart.de.
** Institute for Natural Language Processing, University of Stuttgart, Azenbergstr.12, 70174 Stuttgart,
Germany. E-mail: hinrich@hotmail.com.
1 PP attachment ambiguities also occur in constructions other than V NP PP (Mitchell 2004). These cases
are less frequent and in our opinion do not affect the main conclusions of this article.
Submission received: 13 January 2007, accepted for publication: 7 May 2007.
</footnote>
<note confidence="0.7811375">
© 2007 Association for Computational Linguistics
Computational Linguistics Volume 33, Number 4
</note>
<tableCaption confidence="0.992929">
Table 1
</tableCaption>
<note confidence="0.9642035">
Performance of Collins and Brooks (C&amp;B), Olteanu and Moldovan (O&amp;M) and Toutanova,
Manning, and Ng (TM&amp;N) on RRR when no resources other than the training set are used.
</note>
<figure confidence="0.62283925">
Algorithm Accuracy (%)
C&amp;B 84.18
O&amp;M 84.60
TM&amp;N 85.86
</figure>
<bodyText confidence="0.978673815789474">
be found by the PP attachment method. Likewise, it is harder for the reattachment
method to find the correct attachment if the heads n1 or n2 are not correctly identified
by the parser. The oracle approach to PP attachment differs from many other tasks in
NLP like part-of-speech tagging or parsing, in which usually no data based on manual
annotation are part of the input. Thus, published evaluation results for tagging and
parsing accurately reflect the performance we would expect in an application whereas
PP reattachment results arguably do not.
We will show in this article that the performance of reattachment methods is higher
when an oracle is available. This means that the current evaluation methodology for
PP attachment does not produce realistic performance numbers. In particular, it is not
clear whether reattachment methods improve the parses of state-of-the-art parsers. This
argues for a new evaluation methodology for PP attachment, one that does not assume
that an oracle is available.
To create a more realistic setup for PP reattachment, we replace the oracle with
Bikel’s parser (Bikel 2004). With the removal of the oracle and the introduction of the
parser, the baseline performance also changes. It is no longer the performance of always
choosing the most frequent attachment. Instead, it is the attachment performance of the
parser. In fact, we will see that it is surprisingly difficult for reattachment methods to
beat this baseline performance.
The fact that standard parsers perform well on PP attachment also prompted us
to investigate the performance of a standard parser on traditional oracle-based PP-
attachment. We find that standard parsers do well, further questioning the soundness
of the traditional evaluation methodology.
We compare our results with three other approaches: Collins and Brooks (1995;
henceforth C&amp;B), Olteanu and Moldovan (2005; henceforth O&amp;M), and Toutanova,
Manning, and Ng (2004; henceforth TM&amp;N). We call these three methods PP reattach-
ers. We selected these three methods because they perform best on the widely used PP
attachment evaluation set created by Ratnaparkhi, Reynar, and Roukos (1994). We call
this data set RRR. RRR consists of 20,801 training and 3,097 test quadruples of the form
(v,n1,p,n2). The performance of the three reattachers on RRR is shown in Table 1.2
This article is structured as follows. Section 2 compares the performance of the
reattachers on oracle-based reattachment with that of a standard parser (using artificial
sentences built from the RRR set) and finds no significant difference in performance.
In Section 3, we look at reattachment without oracles (using the Penn Treebank) and
argue that realistic performance numbers can only be produced in experiments without
oracles. Sections 4 and 5 discuss the experiments and related work. Section 6 concludes.
2 The table shows the performance of the algorithms when only treebank information is used and
no information from other resources, such as WordNet.
</bodyText>
<page confidence="0.995714">
470
</page>
<note confidence="0.852361">
Atterer and Sch¨utze PP Attachment Without Oracles
</note>
<sectionHeader confidence="0.956094" genericHeader="keywords">
2. Experiment 1
</sectionHeader>
<subsectionHeader confidence="0.836039">
2.1 Method
</subsectionHeader>
<bodyText confidence="0.9973396">
We use the Bikel parser (Bikel 2004) with default settings for training and parsing.
In Experiment 1, we convert the RRR set into artificial sentences. The data consist of
quadruples of the form (v,n1,p,n2): verb, noun, preposition, and embedded noun. To
create sentences, we add the generic subject they. For example, the quadruple join board
as director V becomes:
</bodyText>
<equation confidence="0.986844">
( (S (NP (PRP They)) (VP (VB join) (NP (NN board)) (PP (IN as)
(NN director) ) ) (..) ) )
</equation>
<bodyText confidence="0.997792875">
Note that these artificial sentences are not necessarily grammatically correct. For
example, subject and verb need not agree.
When we train on these artificial sentences, attachment decisions are independent
of the embedded noun n2 because the Bikel parser does not percolate non-head infor-
mation up the tree. We therefore call this experiment bilexical because we only use
standard lexical head–head relationships. To simulate a parser that takes into account
all four elements of the quadruple, we annotate the preposition with the embedded
noun:
</bodyText>
<equation confidence="0.4210945">
( (S (NP (PRP They)) (VP (VB has) (NP (NP (NN revenue) )
(PP (IN ofmillion) (NN million) ) ) ) (..) ) )
</equation>
<bodyText confidence="0.999878">
We call this mode trilexical because we effectively model three-word dependencies
(e.g., have-of-million vs. revenue-of-million). To avoid problems with sparseness, we re-
strict the annotation to the N most frequent n2 nouns of the RRR train data. We chose
N = 20 based on the performance on the development set.3
</bodyText>
<subsectionHeader confidence="0.825019">
2.2 Results
</subsectionHeader>
<bodyText confidence="0.998444333333333">
Table 2 shows the accuracy of Bikel’s parser in bilexical and trilexical mode. The parser
sometimes does not recognize the attachment ambiguity. For example, it may fail to
correctly identify the PP. We call these cases NAs (non-attachment cases) and compute
three different evaluation measures:
NA-error NAs are counted as errors.
NA-default Noun attachment (the more frequent attachment) is chosen for NAs.
NA-disc(ard) NAs are discarded from the evaluation.
We assume that a reattacher like C&amp;B could only be applied to sentences where the
ambiguity is recognized, namely, non-NA cases. It would then change the attachment
decision in these cases. After reattaching, for this particular set of cases, the accuracy
would correspond to the reattachment method’s accuracy. We are interested in whether
the reattacher is able to beat the performance of the parser we use.
</bodyText>
<footnote confidence="0.917402">
3 On the development set, performance dropped around 0.5 percentage points when using N = 10, 0.3
percentage points when using N = 30, and 0.9 percentage points when using N = 50, for instance.
</footnote>
<page confidence="0.992599">
471
</page>
<table confidence="0.443947">
Computational Linguistics Volume 33, Number 4
</table>
<tableCaption confidence="0.989146">
Table 2
</tableCaption>
<table confidence="0.6451206">
Accuracy (Acc) in percent of the Bikel parser on RRR. For NA-discard, the size of the test set
is indicated.
NA Acc C&amp;B O&amp;M TM&amp;N
Significantly different?
bilex error 83.18 no no yes∗
bilex default 83.44 no no yes∗
bilex disc; 3,082 trees 83.58 no no yes
trilex error 83.73 no no yes
trilex default 83.98 no no yes
trilex disc; 3,082 trees 84.13 no no no
</table>
<bodyText confidence="0.98291275">
Note: The last three columns show whether differences to C&amp;B, O&amp;M, and TM&amp;N are significant
at the 0.05 level (“yes”) or 0.01 level (“yes∗”) (χ2 test).
The Bikel parser’s performance (without changing attachments) is slightly lower
than C&amp;B’s, O&amp;M’s, and TM&amp;N’s. However, for the trilexical case, the difference is
not statistically significant for NA-discard. We consider NA-discard to be the most
realistic evaluation measure, because when integrated into a parser, reattachers can only
correct the attachment in those sentences where the attachment ambiguity was correctly
identified. The parser often identifies one of the possible attachments correctly, but not
the other. The reattacher cannot operate on these sentences.
The significance for the NA-discard case was calculated using the results of O&amp;M
and TM&amp;N on the same 3,082 sentences (which O&amp;M and TM&amp;N kindly provided to
us) and the results of our implementation of the C&amp;B-algorithm.
</bodyText>
<sectionHeader confidence="0.985077" genericHeader="introduction">
3. Experiment 2
</sectionHeader>
<bodyText confidence="0.9996114">
The setup in Experiment 1 is typical of work on PP attachment, but it is not a realistic
model of PP attachment in practice. In Experiment 2, we look at reattachment in natu-
rally occurring sentences if an oracle that identifies the two alternative attachments is
not available.
We first tried to convert RRR into a set of sentences by identifying for each quadru-
ple the sentence in the Penn Treebank (PTB) 0.5 it was extracted from. However, we
were not able to train the Bikel parser on this set because of inconsistencies and other
problems (truncated incomplete sentences, etc.) with the 0.5 treebank. On the other
hand, it was not straightforward to create training, test, and development sets from
PTB 3, which contains the corresponding sentences. Due to changes in the treebank
versions, a considerable number of the quadruples was missing in PTB 3.
For these reasons, we identified as our test data the 3,097 PTB 0.5 sentences the RRR
quadruples had been extracted from because for testing we only need string inputs (and
the gold-standard attachment annotations of the quadruples).
Our training data consist of those 45,156 PTB 3 sentences that remain of the total
number of 49,208 PTB 3 sentences after removing (i) the 3,097 test sentences and (ii)
PTB 3 sentences that correspond to RRR development set quadruples. (Note that some
test sentences had no corresponding sentence in PTB 3.)
We call this evaluation set (45,156 PTB 3 training sentences, 3,097 PTB 0.5 test
sentences) RRR-sent. The RRR-sent training set contains a mixture of sentences with
</bodyText>
<page confidence="0.987172">
472
</page>
<note confidence="0.783131">
Atterer and Sch¨utze PP Attachment Without Oracles
</note>
<bodyText confidence="0.994201">
and without PP attachment ambiguities. We believe that this is the optimal experimental
setup because parsers are usually not trained on a subset of sentences with a particular
construction. RRR-sent is available at http://ifnlp.org/∼schuetze/rrr-sent.
</bodyText>
<subsectionHeader confidence="0.998463">
3.1 Method
</subsectionHeader>
<bodyText confidence="0.999967">
In bilexical mode, we trained and tested the parser as before except that RRR-sent was
used instead of RRR-based artificial sentences. In trilexical mode, we first trained a
parser and ran it on the test data to identify the n2 heads of embedded noun phrases.
We then head-annotated the prepositions in RRR-sent (both train and test data) using
this parser (restricted to the N nouns selected previously). Other prepositions were
left unchanged. Note that prepositions also remain unannotated in sentences where
the parser does not recognize the embedding PP. We then trained and tested a second
instance of the Bikel parser on the head-annotated data.
</bodyText>
<subsectionHeader confidence="0.641373">
3.2 Results
</subsectionHeader>
<bodyText confidence="0.999919">
Table 3 shows results for Experiment 2. There are many more things that can go wrong
in a long natural sentence than in a 5-word artificial one. Thus, the parser recognizes
the PP ambiguity less often in this experiment without an oracle than in Experiment 1,
where an oracle was available.
There is only a significant difference for NA-error and NA-default (for the latter not
in all cases). For NA-discard there is no significant difference.
</bodyText>
<sectionHeader confidence="0.996492" genericHeader="background">
4. Discussion
</sectionHeader>
<bodyText confidence="0.999614555555555">
In Experiments 1 and 2 the cases in NA-discard are the only ones where an ambiguity
could be identified by the parser and hence the only ones where the reattachment
methods could actually be employed. But the reattachers fail to considerably improve
the parser on these sentences. It is only the absence of an oracle that makes the parser
seem worse in the NA-error and NA-default cases. This result shows that PP attachment
methods need to be evaluated with respect to whether they can improve a parser.
In the second experiment the results are worse for the trilexical case, that is, when
we use information about the noun in the PP. We believe that one reason for this is that
we cannot identify the head noun n2 with certainty due to incorrect preliminary parses.
</bodyText>
<tableCaption confidence="0.996462">
Table 3
</tableCaption>
<table confidence="0.974827777777778">
Accuracy (Acc) in percent of the Bikel parser on RRR-sent.
NA Acc C&amp;B O&amp;M TM&amp;N
bilex error 80.01 yes* yes* yes*
bilex default 82.75 no no yes*
bilex disc; 2,945 trees 84.14 no no no
trilex error 72.01 yes* yes* yes*
trilex default 79.85 yes* yes* yes*
trilex disc; 2,652 trees 84.09 no no no
Note: “yes∗” marks significance at the 0.01 level. See text for further explanations.
</table>
<page confidence="0.984772">
473
</page>
<note confidence="0.486326">
Computational Linguistics Volume 33, Number 4
</note>
<bodyText confidence="0.999873444444444">
This again points to the methodological problems in previous work on PP attachment:
it relies on an oracle that provides the two alternative attachments, including the four
heads involved. Results on the traditional task have a tenuous relation at best to perfor-
mance on PP attachment if no oracle is available.
The results of Experiments 1 and 2 are not directly comparable. A significant num-
ber of quadruples (more than 1,000) in the RRR training set do not occur in the RRR-sent
training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as
many of the quadruples we extracted from the training set in RRR-sent do not match
quadruples in RRR.
</bodyText>
<sectionHeader confidence="0.999358" genericHeader="related work">
5. Related Work
</sectionHeader>
<bodyText confidence="0.998373882352941">
Almost all prior work on PP attachment has adopted what we call the oracle-based
approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu
2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers
(Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and
Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic
parsing situation.
However, a few studies were published recently that do evaluate PP attachment
without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our
experimental results suggest that the evaluation strategy of integrating PP reattachers
into a baseline parser should be adopted more widely.
As we only use a parser and no additional resources such as WordNet, dictionaries,
Web data, or named-entity recognizers and stemmers, we restrict ourselves to com-
paring non-oracle reattachment to work that is evaluated using the training data only
(and no other resources) as input. Although we have not replicated experiments with
additional resources (e.g., Toutanova, Manning, and Ng 2004; Stetina and Nagao 1997),
the question as to the significance of oracle-based results for realistic NLP applications
arises independently of the use of resources.
</bodyText>
<sectionHeader confidence="0.990757" genericHeader="conclusions">
6. Conclusion
</sectionHeader>
<bodyText confidence="0.999654">
Our experiments show that oracle-based evaluation of PP attachment can be mislead-
ing. Comparing the bilexical and trilexical cases we note the following: when accurate
n2 information (i.e., oracle-based information about which word heads NP2) is added
in Experiment 1, disambiguation results improve. When noisy n2-information is added
in Experiment 2 (in the absence of an oracle), disambiguation results get worse. Simi-
larly, oracle-based disambiguation performance (84.14%) is much higher than unaided
performance (80.01%) in Experiment 2.
It is not clear from our results whether or not PP reattachers perform better than
state-of-the-art parsers. Although the differences between the best parsing results and
the best reattacher results are not significant in Experiments 1 and 2, the reattachers had
consistently higher performance. This makes it likely that PP reattachment (performed
either by a reattacher or by a reranker [Charniak and Johnson 2005; Collins and Koo
2005] that processes a feature representation with PP attachment information) would
improve the parsing results of state-of-the-art parsers. This is a promising direction for
future work on PP reattachment.
Our results suggest that the standard oracle-based method for evaluating PP attach-
ment is problematic. It computes numbers that are overly optimistic when compared to
</bodyText>
<page confidence="0.997063">
474
</page>
<note confidence="0.841694">
Atterer and Sch¨utze PP Attachment Without Oracles
</note>
<bodyText confidence="0.999933368421053">
the performance that is to be expected in realistic applications without oracles. Instead,
PP reattachers should be directly compared to state-of-the-art parsers to show that they
are able to exploit statistical information that current parsing methods ignore. Most
importantly, PP reattachers should be tested on the type of data they are intended to
process—output from a parser or another module that detects PP attachment ambigu-
ities. Evaluating reattachers on the output of an oracle allows no inferences as to their
real performance.
Many advances in NLP in the last decades have been driven by shared tasks, and
PP attachment is one of the tasks that has stimulated much interesting research. There
are no realistic scenarios in which an oracle for PP attachment ambiguity would be
available, however. Given the differences we have found between evaluations with and
without oracles, one should think carefully about the experimental framework for PP
attachment work one adopts and whether any oracle-based findings carry over to more
realistic scenarios without oracles.
Although we are only concerned with PP attachment in this article, similar consider-
ations likely apply to other disambiguation tasks such as attachment of relative clauses
and coordinated phrases. In our opinion the evaluation of disambiguation algorithms
on oracle-based data should always be justified by stating specifically what has been
learned for the non-oracle case.
</bodyText>
<sectionHeader confidence="0.98719" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99779">
We would like to thank Marian Olteanu and Kristina Toutanova for their evaluation results and
Helmut Schmid and the reviewers for valuable comments.
</bodyText>
<sectionHeader confidence="0.923558" genericHeader="references">
References
</sectionHeader>
<bodyText confidence="0.518469666666667">
Atterer, Michaela and Hinrich Sch¨utze. 2006.
The effect of corpus size in combining
supervised and unsupervised training for
</bodyText>
<reference confidence="0.994838875">
disambiguation. In Proceedings of the Joint
Conference of the International Committee on
Computational Linguistics and the Association
for Computational Linguistics (COLING/
ACL 2006) Main Conference Poster Sessions,
pages 25–32, Sydney, Australia.
Bharati, Akshar, U. Rohini, P. Vishnu,
Sushma Bendre, and Rajeev Sangal.
2005. A hybrid approach to single and
multiple PP attachment using WordNet.
In Proceedings of International Joint
Conference on Natural Language Processing
(IJCNLP) 2005, pages 211–222, Jeju
Island, Korea.
Bikel, Daniel M. 2004. Intricacies of Collins
parsing model. Computational Linguistics,
30(4):479–512.
Calvo, Hiram, Alexander Gelbukh, and
Adam Kilgarriff. 2005. Distributional
thesaurus vs. WordNet: A comparison
of backoff techniques for unsupervised
PP attachment. In Proceedings of the Sixth
International Conference on Intelligent Text
Processing and Computational Linguistics
(CICLing-2005), pages 177–188, Mexico
City, Mexico.
Charniak, Eugene and Mark Johnson. 2005.
Coarse-to-fine n-best parsing and MaxEnt
discriminative reranking. In Proceedings of
the 43rd Annual Meeting of the Association
for Computational Linguistics (ACL),
pages 173–180, Ann Arbor, MI.
Collins, Michael and James Brooks. 1995.
Prepositional phrase attachment through
a backed-off model. In Proceedings of the
Third Workshop on Very Large Corpora,
pages 27–38, Somerset, NJ.
Collins, Michael and Terry Koo. 2005.
Discriminative reranking for natural
language parsing. Computational
Linguistics, 31(1):25–70.
Foth, Kilian A. and Wolfgang Menzel. 2006.
The benefit of stochastic PP attachment
to a rule-based parser. In Proceedings
of the Joint Conference of the International
Committee on Computational Linguistics and
the Association for Computational Linguistics
(COLING/ACL) 2006 Main Conference Poster
Sessions, pages 223–230, Sydney, Australia.
Hindle, Donald and Mats Rooth. 1993.
Structural ambiguity and lexical relations.
Computational Linguistics, 19(1):103–120.
Merlo, Paola and Eva Esteve Ferrer. 2006.
The notion of argument in prepositional
phrase attachment. Computational
Linguistics, 32(3):341–378.
</reference>
<page confidence="0.995102">
475
</page>
<note confidence="0.528056">
Computational Linguistics Volume 33, Number 4
</note>
<reference confidence="0.9966953">
Mitchell, Brian. 2004. Prepositional Phrase
Attachment using Machine Learning
Algorithms. Ph.D. thesis, Natural
Language Processing Group,
Department of Computer Science,
University of Sheffield, UK.
Olteanu, Marian and Dan Moldovan.
2005. PP-attachment disambiguation
using large context. In Proceedings
of Human Language Technology
Conference/Conference on Empirical
Methods in Natural Language Processing
(HLT/EMNLP), pages 273–280,
Vancouver, Canada.
Olteanu, Marian G. 2004. Prepositional
phrase attachment ambiguity
resolution through a rich syntactic,
lexical and semantic set of features
applied in support vector machines
learner. Masters thesis, University of
Texas, Dallas.
Pantel, Patrick and Dekang Lin. 2000. An
unsupervised approach to prepositional
phrase attachment using contextually
similar words. In Proceedings of the 38th
Annual Meeting of the Association for
Computational Linguistics (ACL),
pages 101–108, Hong Kong, China.
Ratnaparkhi, Adwait. 1998. Unsupervised
statistical models for prepositional phrase
attachment. In Proceedings of International
Conference on Computational Linguistics and
the Association for Computational Linguistics
(COLING-ACL98), pages 1079–1085,
Montreal, Canada.
Ratnaparkhi, Adwait, Jeff Reynar, and
Salim Roukos.1994. A maximum entropy
model for prepositional phrase
attachment. In Workshop on Human
Language Technology, pages 250–255,
Plainsboro, NJ.
Srinivas, Medimi and Pushpak
Bhattacharyya. 2007. A flexible
unsupervised PP-attachment method
using semantic information. In Proceedings
of Internationl Joint Conference on Artificial
Intelligence (IJCAI 2007), pages 1677–1682,
Hyderabad, India.
Stetina, Jiri and Makoto Nagao. 1997.
Corpus based PP attachment ambiguity
resolution with a semantic dictionary.
In Proceedings of the Fifth Workshop on
Very Large Corpora, pages 66–80, Hong
Kong, China.
Toutanova, Kristina, Christopher D.
Manning, and Andrew Y. Ng. 2004.
Learning random walk models for
inducing word dependency distributions.
In Proceedings of the Twenty-first
International Conference on Machine
Learning (ICML ’04), pages 815–822,
Banff, Alberta, Canada.
Volk, Martin. 2006. How bad is the problem
of PP-attachment? A comparison of
English, German and Swedish. In
Proceedings of Association for Computational
Linguistics—Special Interest Group on
Computational Semantics (ACL-SIGSEM)
Workshop on Prepositions, pages 81–88,
Trento, Italy.
</reference>
<page confidence="0.999106">
476
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.304944">
<title confidence="0.6462845">Squib Prepositional Phrase Attachment without Oracles</title>
<affiliation confidence="0.9984315">University of Stuttgart University of Stuttgart</affiliation>
<abstract confidence="0.979382888888889">Work on prepositional phrase (PP) attachment resolution generally assumes that there is an oracle that provides the two hypothesized structures that we want to choose between. The information that there are two possible attachment sites and the information about the lexical heads of those phrases is usually extracted from gold-standard parse trees. We show that the performance of reattachment methods is higher with such an oracle than without. Because oracles are not available in NLP applications, this indicates that the current evaluation methodology for PP attachment does not produce realistic performance numbers. We argue that PP attachment should not be evaluated in isolation, but instead as an integral component of a parsing system, without using information from the gold-standard oracle.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>disambiguation</author>
</authors>
<booktitle>In Proceedings of the Joint Conference of the International Committee on Computational Linguistics and the Association for Computational Linguistics (COLING/ ACL 2006) Main Conference Poster Sessions,</booktitle>
<pages>25--32</pages>
<location>Sydney, Australia.</location>
<marker>disambiguation, </marker>
<rawString>disambiguation. In Proceedings of the Joint Conference of the International Committee on Computational Linguistics and the Association for Computational Linguistics (COLING/ ACL 2006) Main Conference Poster Sessions, pages 25–32, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Akshar Bharati</author>
<author>U Rohini</author>
<author>P Vishnu</author>
<author>Sushma Bendre</author>
<author>Rajeev Sangal</author>
</authors>
<title>A hybrid approach to single and multiple PP attachment using WordNet.</title>
<date>2005</date>
<booktitle>In Proceedings of International Joint Conference on Natural Language Processing (IJCNLP)</booktitle>
<pages>211--222</pages>
<location>Jeju Island,</location>
<marker>Bharati, Rohini, Vishnu, Bendre, Sangal, 2005</marker>
<rawString>Bharati, Akshar, U. Rohini, P. Vishnu, Sushma Bendre, and Rajeev Sangal. 2005. A hybrid approach to single and multiple PP attachment using WordNet. In Proceedings of International Joint Conference on Natural Language Processing (IJCNLP) 2005, pages 211–222, Jeju Island, Korea.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel M Bikel</author>
</authors>
<title>Intricacies of Collins parsing model.</title>
<date>2004</date>
<journal>Computational Linguistics,</journal>
<volume>30</volume>
<issue>4</issue>
<contexts>
<context position="4226" citStr="Bikel 2004" startWordPosition="652" endWordPosition="653">ereas PP reattachment results arguably do not. We will show in this article that the performance of reattachment methods is higher when an oracle is available. This means that the current evaluation methodology for PP attachment does not produce realistic performance numbers. In particular, it is not clear whether reattachment methods improve the parses of state-of-the-art parsers. This argues for a new evaluation methodology for PP attachment, one that does not assume that an oracle is available. To create a more realistic setup for PP reattachment, we replace the oracle with Bikel’s parser (Bikel 2004). With the removal of the oracle and the introduction of the parser, the baseline performance also changes. It is no longer the performance of always choosing the most frequent attachment. Instead, it is the attachment performance of the parser. In fact, we will see that it is surprisingly difficult for reattachment methods to beat this baseline performance. The fact that standard parsers perform well on PP attachment also prompted us to investigate the performance of a standard parser on traditional oracle-based PPattachment. We find that standard parsers do well, further questioning the soun</context>
<context position="6234" citStr="Bikel 2004" startWordPosition="965" endWordPosition="966">sentences built from the RRR set) and finds no significant difference in performance. In Section 3, we look at reattachment without oracles (using the Penn Treebank) and argue that realistic performance numbers can only be produced in experiments without oracles. Sections 4 and 5 discuss the experiments and related work. Section 6 concludes. 2 The table shows the performance of the algorithms when only treebank information is used and no information from other resources, such as WordNet. 470 Atterer and Sch¨utze PP Attachment Without Oracles 2. Experiment 1 2.1 Method We use the Bikel parser (Bikel 2004) with default settings for training and parsing. In Experiment 1, we convert the RRR set into artificial sentences. The data consist of quadruples of the form (v,n1,p,n2): verb, noun, preposition, and embedded noun. To create sentences, we add the generic subject they. For example, the quadruple join board as director V becomes: ( (S (NP (PRP They)) (VP (VB join) (NP (NN board)) (PP (IN as) (NN director) ) ) (..) ) ) Note that these artificial sentences are not necessarily grammatically correct. For example, subject and verb need not agree. When we train on these artificial sentences, attachme</context>
</contexts>
<marker>Bikel, 2004</marker>
<rawString>Bikel, Daniel M. 2004. Intricacies of Collins parsing model. Computational Linguistics, 30(4):479–512.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hiram Calvo</author>
<author>Alexander Gelbukh</author>
<author>Adam Kilgarriff</author>
</authors>
<title>Distributional thesaurus vs. WordNet: A comparison of backoff techniques for unsupervised PP attachment.</title>
<date>2005</date>
<booktitle>In Proceedings of the Sixth International Conference on Intelligent Text Processing and Computational Linguistics (CICLing-2005),</booktitle>
<pages>177--188</pages>
<location>Mexico City, Mexico.</location>
<marker>Calvo, Gelbukh, Kilgarriff, 2005</marker>
<rawString>Calvo, Hiram, Alexander Gelbukh, and Adam Kilgarriff. 2005. Distributional thesaurus vs. WordNet: A comparison of backoff techniques for unsupervised PP attachment. In Proceedings of the Sixth International Conference on Intelligent Text Processing and Computational Linguistics (CICLing-2005), pages 177–188, Mexico City, Mexico.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eugene Charniak</author>
<author>Mark Johnson</author>
</authors>
<title>Coarse-to-fine n-best parsing and MaxEnt discriminative reranking.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>173--180</pages>
<location>Ann Arbor, MI.</location>
<contexts>
<context position="17247" citStr="Charniak and Johnson 2005" startWordPosition="2744" endWordPosition="2747">ed in Experiment 2 (in the absence of an oracle), disambiguation results get worse. Similarly, oracle-based disambiguation performance (84.14%) is much higher than unaided performance (80.01%) in Experiment 2. It is not clear from our results whether or not PP reattachers perform better than state-of-the-art parsers. Although the differences between the best parsing results and the best reattacher results are not significant in Experiments 1 and 2, the reattachers had consistently higher performance. This makes it likely that PP reattachment (performed either by a reattacher or by a reranker [Charniak and Johnson 2005; Collins and Koo 2005] that processes a feature representation with PP attachment information) would improve the parsing results of state-of-the-art parsers. This is a promising direction for future work on PP reattachment. Our results suggest that the standard oracle-based method for evaluating PP attachment is problematic. It computes numbers that are overly optimistic when compared to 474 Atterer and Sch¨utze PP Attachment Without Oracles the performance that is to be expected in realistic applications without oracles. Instead, PP reattachers should be directly compared to state-of-the-art</context>
</contexts>
<marker>Charniak, Johnson, 2005</marker>
<rawString>Charniak, Eugene and Mark Johnson. 2005. Coarse-to-fine n-best parsing and MaxEnt discriminative reranking. In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL), pages 173–180, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
<author>James Brooks</author>
</authors>
<title>Prepositional phrase attachment through a backed-off model.</title>
<date>1995</date>
<booktitle>In Proceedings of the Third Workshop on Very Large Corpora,</booktitle>
<pages>27--38</pages>
<location>Somerset, NJ.</location>
<contexts>
<context position="4951" citStr="Collins and Brooks (1995" startWordPosition="761" endWordPosition="764">anges. It is no longer the performance of always choosing the most frequent attachment. Instead, it is the attachment performance of the parser. In fact, we will see that it is surprisingly difficult for reattachment methods to beat this baseline performance. The fact that standard parsers perform well on PP attachment also prompted us to investigate the performance of a standard parser on traditional oracle-based PPattachment. We find that standard parsers do well, further questioning the soundness of the traditional evaluation methodology. We compare our results with three other approaches: Collins and Brooks (1995; henceforth C&amp;B), Olteanu and Moldovan (2005; henceforth O&amp;M), and Toutanova, Manning, and Ng (2004; henceforth TM&amp;N). We call these three methods PP reattachers. We selected these three methods because they perform best on the widely used PP attachment evaluation set created by Ratnaparkhi, Reynar, and Roukos (1994). We call this data set RRR. RRR consists of 20,801 training and 3,097 test quadruples of the form (v,n1,p,n2). The performance of the three reattachers on RRR is shown in Table 1.2 This article is structured as follows. Section 2 compares the performance of the reattachers on ora</context>
</contexts>
<marker>Collins, Brooks, 1995</marker>
<rawString>Collins, Michael and James Brooks. 1995. Prepositional phrase attachment through a backed-off model. In Proceedings of the Third Workshop on Very Large Corpora, pages 27–38, Somerset, NJ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
<author>Terry Koo</author>
</authors>
<title>Discriminative reranking for natural language parsing.</title>
<date>2005</date>
<journal>Computational Linguistics,</journal>
<volume>31</volume>
<issue>1</issue>
<contexts>
<context position="17269" citStr="Collins and Koo 2005" startWordPosition="2748" endWordPosition="2751">absence of an oracle), disambiguation results get worse. Similarly, oracle-based disambiguation performance (84.14%) is much higher than unaided performance (80.01%) in Experiment 2. It is not clear from our results whether or not PP reattachers perform better than state-of-the-art parsers. Although the differences between the best parsing results and the best reattacher results are not significant in Experiments 1 and 2, the reattachers had consistently higher performance. This makes it likely that PP reattachment (performed either by a reattacher or by a reranker [Charniak and Johnson 2005; Collins and Koo 2005] that processes a feature representation with PP attachment information) would improve the parsing results of state-of-the-art parsers. This is a promising direction for future work on PP reattachment. Our results suggest that the standard oracle-based method for evaluating PP attachment is problematic. It computes numbers that are overly optimistic when compared to 474 Atterer and Sch¨utze PP Attachment Without Oracles the performance that is to be expected in realistic applications without oracles. Instead, PP reattachers should be directly compared to state-of-the-art parsers to show that </context>
</contexts>
<marker>Collins, Koo, 2005</marker>
<rawString>Collins, Michael and Terry Koo. 2005. Discriminative reranking for natural language parsing. Computational Linguistics, 31(1):25–70.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kilian A Foth</author>
<author>Wolfgang Menzel</author>
</authors>
<title>The benefit of stochastic PP attachment to a rule-based parser.</title>
<date>2006</date>
<booktitle>In Proceedings of the Joint Conference of the International Committee on Computational Linguistics and the Association for Computational Linguistics (COLING/ACL) 2006 Main Conference Poster Sessions,</booktitle>
<pages>223--230</pages>
<location>Sydney, Australia.</location>
<contexts>
<context position="15571" citStr="Foth and Menzel 2006" startWordPosition="2496" endWordPosition="2499">in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser should be adopted more widely. As we only use a parser and no additional resources such as WordNet, dictionaries, Web data, or named-entity recognizers and stemmers, we restrict ourselves to comparing non-oracle reattachment to work that is evaluated using the training data only (and no other resources) as input. Although we have not replicated experiments with additional resources (e.g., Toutanova, Manning, and Ng 2004; Stetina and Nagao 1997), the question as to the significan</context>
</contexts>
<marker>Foth, Menzel, 2006</marker>
<rawString>Foth, Kilian A. and Wolfgang Menzel. 2006. The benefit of stochastic PP attachment to a rule-based parser. In Proceedings of the Joint Conference of the International Committee on Computational Linguistics and the Association for Computational Linguistics (COLING/ACL) 2006 Main Conference Poster Sessions, pages 223–230, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donald Hindle</author>
<author>Mats Rooth</author>
</authors>
<title>Structural ambiguity and lexical relations.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="1454" citStr="Hindle and Rooth 1993" startWordPosition="227" endWordPosition="230"> instead as an integral component of a parsing system, without using information from the gold-standard oracle. 1. Introduction One of the main challenges in natural language parsing is the resolution of ambiguity. One frequently studied type of ambiguity is prepositional phrase (PP) attachment. Given the quadruple (v,n1,p,n2), where v is the head of a verb phrase, n1 is the head of an NP1 dominated by v, p is the head of a prepositional phrase, and n2 the head of an NP2 embedded in the PP, the task of PP attachment is to determine whether we should attach the PP to the verb v or the noun n1 (Hindle and Rooth 1993).1 Work on PP attachment resolution generally assumes that there is an oracle that provides the quadruple (v,n1,p,n2), where we define an oracle as a mechanism that provides information that is not present in the data in their naturally occurring form. In PP attachment, the oracle is usually implemented by extracting the quadruple (v,n1,p,n2) from the gold-standard parse trees. In an application, a PP attachment module would be used to change the attachment of prepositional phrases in preliminary syntactic analyses produced by a parser—or reattach them. The problem with oracle-based work on PP</context>
</contexts>
<marker>Hindle, Rooth, 1993</marker>
<rawString>Hindle, Donald and Mats Rooth. 1993. Structural ambiguity and lexical relations. Computational Linguistics, 19(1):103–120.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paola Merlo</author>
<author>Eva Esteve Ferrer</author>
</authors>
<title>The notion of argument in prepositional phrase attachment.</title>
<date>2006</date>
<journal>Computational Linguistics,</journal>
<volume>32</volume>
<issue>3</issue>
<contexts>
<context position="15284" citStr="Merlo and Ferrer 2006" startWordPosition="2452" endWordPosition="2455">significant number of quadruples (more than 1,000) in the RRR training set do not occur in the RRR-sent training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as many of the quadruples we extracted from the training set in RRR-sent do not match quadruples in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser should be adopted more widely. As we only use a parser and no additional resources such as WordNet, dictionaries, Web data, or named-entity recognizers and stemmers, we restrict ourselves to compa</context>
</contexts>
<marker>Merlo, Ferrer, 2006</marker>
<rawString>Merlo, Paola and Eva Esteve Ferrer. 2006. The notion of argument in prepositional phrase attachment. Computational Linguistics, 32(3):341–378.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brian Mitchell</author>
</authors>
<title>Prepositional Phrase Attachment using Machine Learning Algorithms.</title>
<date>2004</date>
<tech>Ph.D. thesis,</tech>
<institution>Natural Language Processing Group, Department of Computer Science, University of Sheffield, UK.</institution>
<contexts>
<context position="2605" citStr="Mitchell 2004" startWordPosition="394" endWordPosition="395">rser—or reattach them. The problem with oracle-based work on PP attachment is that when the parser does not find the gold-standard NP1 or PP, for instance, the attachment ambiguity is not recognized, and the correct solution cannot * Institute for Natural Language Processing, University of Stuttgart, Azenbergstr.12, 70174 Stuttgart, Germany. E-mail: atterer@ims.uni-stuttgart.de. ** Institute for Natural Language Processing, University of Stuttgart, Azenbergstr.12, 70174 Stuttgart, Germany. E-mail: hinrich@hotmail.com. 1 PP attachment ambiguities also occur in constructions other than V NP PP (Mitchell 2004). These cases are less frequent and in our opinion do not affect the main conclusions of this article. Submission received: 13 January 2007, accepted for publication: 7 May 2007. © 2007 Association for Computational Linguistics Computational Linguistics Volume 33, Number 4 Table 1 Performance of Collins and Brooks (C&amp;B), Olteanu and Moldovan (O&amp;M) and Toutanova, Manning, and Ng (TM&amp;N) on RRR when no resources other than the training set are used. Algorithm Accuracy (%) C&amp;B 84.18 O&amp;M 84.60 TM&amp;N 85.86 be found by the PP attachment method. Likewise, it is harder for the reattachment method to fin</context>
</contexts>
<marker>Mitchell, 2004</marker>
<rawString>Mitchell, Brian. 2004. Prepositional Phrase Attachment using Machine Learning Algorithms. Ph.D. thesis, Natural Language Processing Group, Department of Computer Science, University of Sheffield, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marian Olteanu</author>
<author>Dan Moldovan</author>
</authors>
<title>PP-attachment disambiguation using large context.</title>
<date>2005</date>
<booktitle>In Proceedings of Human Language Technology Conference/Conference on Empirical Methods in Natural Language Processing (HLT/EMNLP),</booktitle>
<pages>273--280</pages>
<location>Vancouver, Canada.</location>
<contexts>
<context position="4996" citStr="Olteanu and Moldovan (2005" startWordPosition="767" endWordPosition="770">lways choosing the most frequent attachment. Instead, it is the attachment performance of the parser. In fact, we will see that it is surprisingly difficult for reattachment methods to beat this baseline performance. The fact that standard parsers perform well on PP attachment also prompted us to investigate the performance of a standard parser on traditional oracle-based PPattachment. We find that standard parsers do well, further questioning the soundness of the traditional evaluation methodology. We compare our results with three other approaches: Collins and Brooks (1995; henceforth C&amp;B), Olteanu and Moldovan (2005; henceforth O&amp;M), and Toutanova, Manning, and Ng (2004; henceforth TM&amp;N). We call these three methods PP reattachers. We selected these three methods because they perform best on the widely used PP attachment evaluation set created by Ratnaparkhi, Reynar, and Roukos (1994). We call this data set RRR. RRR consists of 20,801 training and 3,097 test quadruples of the form (v,n1,p,n2). The performance of the three reattachers on RRR is shown in Table 1.2 This article is structured as follows. Section 2 compares the performance of the reattachers on oracle-based reattachment with that of a standar</context>
</contexts>
<marker>Olteanu, Moldovan, 2005</marker>
<rawString>Olteanu, Marian and Dan Moldovan. 2005. PP-attachment disambiguation using large context. In Proceedings of Human Language Technology Conference/Conference on Empirical Methods in Natural Language Processing (HLT/EMNLP), pages 273–280, Vancouver, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marian G Olteanu</author>
</authors>
<title>Prepositional phrase attachment ambiguity resolution through a rich syntactic, lexical and semantic set of features applied in support vector machines learner. Masters thesis,</title>
<date>2004</date>
<institution>University of Texas, Dallas.</institution>
<contexts>
<context position="15140" citStr="Olteanu 2004" startWordPosition="2434" endWordPosition="2435">n at best to performance on PP attachment if no oracle is available. The results of Experiments 1 and 2 are not directly comparable. A significant number of quadruples (more than 1,000) in the RRR training set do not occur in the RRR-sent training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as many of the quadruples we extracted from the training set in RRR-sent do not match quadruples in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser should be adopted more widely. As we only use a pars</context>
</contexts>
<marker>Olteanu, 2004</marker>
<rawString>Olteanu, Marian G. 2004. Prepositional phrase attachment ambiguity resolution through a rich syntactic, lexical and semantic set of features applied in support vector machines learner. Masters thesis, University of Texas, Dallas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Patrick Pantel</author>
<author>Dekang Lin</author>
</authors>
<title>An unsupervised approach to prepositional phrase attachment using contextually similar words.</title>
<date>2000</date>
<booktitle>In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>101--108</pages>
<location>Hong Kong, China.</location>
<contexts>
<context position="15126" citStr="Pantel and Lin 2000" startWordPosition="2430" endWordPosition="2433">ave a tenuous relation at best to performance on PP attachment if no oracle is available. The results of Experiments 1 and 2 are not directly comparable. A significant number of quadruples (more than 1,000) in the RRR training set do not occur in the RRR-sent training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as many of the quadruples we extracted from the training set in RRR-sent do not match quadruples in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser should be adopted more widely. As we o</context>
</contexts>
<marker>Pantel, Lin, 2000</marker>
<rawString>Pantel, Patrick and Dekang Lin. 2000. An unsupervised approach to prepositional phrase attachment using contextually similar words. In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics (ACL), pages 101–108, Hong Kong, China.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adwait Ratnaparkhi</author>
</authors>
<title>Unsupervised statistical models for prepositional phrase attachment.</title>
<date>1998</date>
<booktitle>In Proceedings of International Conference on Computational Linguistics and the Association for Computational Linguistics (COLING-ACL98),</booktitle>
<pages>1079--1085</pages>
<location>Montreal, Canada.</location>
<contexts>
<context position="15105" citStr="Ratnaparkhi 1998" startWordPosition="2428" endWordPosition="2429">traditional task have a tenuous relation at best to performance on PP attachment if no oracle is available. The results of Experiments 1 and 2 are not directly comparable. A significant number of quadruples (more than 1,000) in the RRR training set do not occur in the RRR-sent training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as many of the quadruples we extracted from the training set in RRR-sent do not match quadruples in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser should be adopted</context>
</contexts>
<marker>Ratnaparkhi, 1998</marker>
<rawString>Ratnaparkhi, Adwait. 1998. Unsupervised statistical models for prepositional phrase attachment. In Proceedings of International Conference on Computational Linguistics and the Association for Computational Linguistics (COLING-ACL98), pages 1079–1085, Montreal, Canada.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Adwait Ratnaparkhi</author>
<author>Jeff Reynar</author>
<author>Salim Roukos 1994</author>
</authors>
<title>A maximum entropy model for prepositional phrase attachment.</title>
<booktitle>In Workshop on Human Language Technology,</booktitle>
<pages>250--255</pages>
<location>Plainsboro, NJ.</location>
<marker>Ratnaparkhi, Reynar, 1994, </marker>
<rawString>Ratnaparkhi, Adwait, Jeff Reynar, and Salim Roukos.1994. A maximum entropy model for prepositional phrase attachment. In Workshop on Human Language Technology, pages 250–255, Plainsboro, NJ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Medimi Srinivas</author>
<author>Pushpak Bhattacharyya</author>
</authors>
<title>A flexible unsupervised PP-attachment method using semantic information.</title>
<date>2007</date>
<booktitle>In Proceedings of Internationl Joint Conference on Artificial Intelligence (IJCAI</booktitle>
<pages>1677--1682</pages>
<location>Hyderabad, India.</location>
<contexts>
<context position="15329" citStr="Srinivas and Bhattacharyya 2007" startWordPosition="2458" endWordPosition="2461">more than 1,000) in the RRR training set do not occur in the RRR-sent training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as many of the quadruples we extracted from the training set in RRR-sent do not match quadruples in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser should be adopted more widely. As we only use a parser and no additional resources such as WordNet, dictionaries, Web data, or named-entity recognizers and stemmers, we restrict ourselves to comparing non-oracle reattachment to work that is </context>
</contexts>
<marker>Srinivas, Bhattacharyya, 2007</marker>
<rawString>Srinivas, Medimi and Pushpak Bhattacharyya. 2007. A flexible unsupervised PP-attachment method using semantic information. In Proceedings of Internationl Joint Conference on Artificial Intelligence (IJCAI 2007), pages 1677–1682, Hyderabad, India.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jiri Stetina</author>
<author>Makoto Nagao</author>
</authors>
<title>Corpus based PP attachment ambiguity resolution with a semantic dictionary.</title>
<date>1997</date>
<booktitle>In Proceedings of the Fifth Workshop on Very Large Corpora,</booktitle>
<pages>66--80</pages>
<location>Hong Kong, China.</location>
<contexts>
<context position="15087" citStr="Stetina and Nagao 1997" startWordPosition="2424" endWordPosition="2427">nvolved. Results on the traditional task have a tenuous relation at best to performance on PP attachment if no oracle is available. The results of Experiments 1 and 2 are not directly comparable. A significant number of quadruples (more than 1,000) in the RRR training set do not occur in the RRR-sent training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as many of the quadruples we extracted from the training set in RRR-sent do not match quadruples in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser</context>
</contexts>
<marker>Stetina, Nagao, 1997</marker>
<rawString>Stetina, Jiri and Makoto Nagao. 1997. Corpus based PP attachment ambiguity resolution with a semantic dictionary. In Proceedings of the Fifth Workshop on Very Large Corpora, pages 66–80, Hong Kong, China.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kristina Toutanova</author>
<author>Christopher D Manning</author>
<author>Andrew Y Ng</author>
</authors>
<title>Learning random walk models for inducing word dependency distributions.</title>
<date>2004</date>
<booktitle>In Proceedings of the Twenty-first International Conference on Machine Learning (ICML ’04),</booktitle>
<pages>815--822</pages>
<location>Banff, Alberta, Canada.</location>
<marker>Toutanova, Manning, Ng, 2004</marker>
<rawString>Toutanova, Kristina, Christopher D. Manning, and Andrew Y. Ng. 2004. Learning random walk models for inducing word dependency distributions. In Proceedings of the Twenty-first International Conference on Machine Learning (ICML ’04), pages 815–822, Banff, Alberta, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Volk</author>
</authors>
<title>How bad is the problem of PP-attachment? A comparison of English, German and Swedish.</title>
<date>2006</date>
<booktitle>In Proceedings of Association for Computational Linguistics—Special Interest Group on Computational Semantics (ACL-SIGSEM) Workshop on Prepositions,</booktitle>
<pages>81--88</pages>
<location>Trento, Italy.</location>
<contexts>
<context position="15295" citStr="Volk 2006" startWordPosition="2456" endWordPosition="2457">uadruples (more than 1,000) in the RRR training set do not occur in the RRR-sent training set due to differences between the 0.5 and 3 treebanks. Conversely, at least as many of the quadruples we extracted from the training set in RRR-sent do not match quadruples in RRR. 5. Related Work Almost all prior work on PP attachment has adopted what we call the oracle-based approach (Stetina and Nagao 1997; Ratnaparkhi 1998; Pantel and Lin 2000; Olteanu 2004; Bharati, Rohini, Vishnu, Bendre, and Sangal 2005), including several recent papers (Calvo, Gelbukh, and Kilgarriff 2005; Merlo and Ferrer 2006; Volk 2006; Srinivas and Bhattacharyya 2007). None of these papers attempt to improve a parser in a realistic parsing situation. However, a few studies were published recently that do evaluate PP attachment without oracles (Olteanu 2004; Atterer and Sch¨utze 2006; Foth and Menzel 2006). Our experimental results suggest that the evaluation strategy of integrating PP reattachers into a baseline parser should be adopted more widely. As we only use a parser and no additional resources such as WordNet, dictionaries, Web data, or named-entity recognizers and stemmers, we restrict ourselves to comparing non-or</context>
</contexts>
<marker>Volk, 2006</marker>
<rawString>Volk, Martin. 2006. How bad is the problem of PP-attachment? A comparison of English, German and Swedish. In Proceedings of Association for Computational Linguistics—Special Interest Group on Computational Semantics (ACL-SIGSEM) Workshop on Prepositions, pages 81–88, Trento, Italy.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>