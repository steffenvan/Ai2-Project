<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.161465">
<title confidence="0.983432">
Automating NL Appointment Scheduling with COSMA*
</title>
<author confidence="0.701482333333333">
Stephan Busemann
DFKI GmbH
Stuhlsatzenhausweg 3, 66123 Saarbriicken, Germany
</author>
<affiliation confidence="0.324243">
busemannOdfki.uni-sb.de
</affiliation>
<sectionHeader confidence="0.949116" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.998219642857143">
Appointment scheduling is a problem faced
daily by many individuals and organiza-
tions. Cooperating agent systems have
been developed to partially automate this
task. In order to extend the circle of par-
ticipants as far as possible we advocate the
use of natural language transmitted by e-
mail. We demonstrate COSMA, a fully im-
plemented German language server for ex-
isting appointment scheduling agent sys-
tems. COSMA can cope with multiple di-
alogues in parallel, and accounts for differ-
ences in dialogue behaviour between human
and machine agents.
</bodyText>
<sectionHeader confidence="0.976923" genericHeader="keywords">
1 Motivation
</sectionHeader>
<bodyText confidence="0.98751425">
Appointment scheduling is a problem faced daily
by many individuals and organizations, and typi-
cally solved using communication in natural lan-
guage (NL) by phone, fax or by mail. In general,
cooperative interaction between several participants
is required.
Systems available on the market allow for calendar
and contact management. However, as (Busemann
and Merget, 1995) point out in a market survey, all
planning and scheduling activity remains with the
user. Cooperative agent systems developed in the
field of Distributed AI are designed to account for
the scheduling tasks. Using distributed rather than
centralized calendar systems, they not only guaran-
tee a maximum privacy of calendar information but
also offer their services to members or employees in
external organizations. Although agent systems al-
low users to automate their scheduling tasks to a con-
This work has been supported by a grant from the
German Federal Ministry of Education, Science, Re-
search and Technology (FKZ ITW-9402).
siderable degree, the circle of participants remains
restricted to users with compatible systems.
To overcome this drawback we have designed and
implemented COSMA, a novel kind of NL dialogue
system that serves as a German language front-end
to scheduling agents. Human language makes agent
services available to a much broader public. COSMA
allows human and machine agents to participate in
appointment scheduling dialogues via e-mail. We are
concerned with meetings all participants should at-
tend and the date of which is negotiable.
</bodyText>
<sectionHeader confidence="0.807373" genericHeader="introduction">
2 The Systems
</sectionHeader>
<bodyText confidence="0.998747074074074">
COSMA is organized as a client/server architecture.
The server offers NL dialogue service to multiple
client agent systems. The scheduling agent systems
act for their respective users. The agents systems
use a calendar management system for displaying to
their owners the results of the appointment negoti-
ations. The users can enter their appointment con-
straints via a graphical user interface and receive the
results either by e-mail or via their electronic calen-
dar. Agent systems are thus hooked up to e-mail, to
a calendar manager and to the dialogue server.
The server interface is command-driven. A client
may connect to the server and open up a dialogue
(see Figure 1 in (Busemann et al., 1997)). Dur-
ing the dialogue, the client may request texts to be
analyzed or semantic descriptions to be verbalized.
When given a text, the server returns the semantic
representation, and vice versa. The client ensures
that the server has available to it linguistically rel-
evant information about the interlocutors, such as
names, sexes etc.
The user agents may access the dialogue server
via Internet. They use the server as their NL front
end to human participants. Machine agents inter-
act with each other in their own formal language.
This interaction remains unnoticed by the dialogue
server. As a consequence, the dialogues modeled
</bodyText>
<page confidence="0.965907">
5
</page>
<bodyText confidence="0.99950319047619">
within the server represent only part of the complete
multi-participant negotiation. More precisely, only
utterances between a human and a machine agent
are modeled.
The agent system used is a further development of
the PASHA system (Schmeier and Schupeta, 1996).
NL analysis in the server is based on a shallow
parsing strategy implemented in the SMES system
(Neumann et al., 1997). The use of SMES in
COSMA, semantic analysis and inference, the dia-
logue model mapping between human and machine
dialogue structures, utterance generation, the archi-
tectural framework of the server, and the PASHA
agent system are described in (Busemann et al.,
1997). Both papers can be found in the ANLP &apos;97
conference proceedings.
We demonstrate extended versions of the systems
described in (Busemann et al., 1997). In particular,
the systems to be demonstrated can process counter-
proposals, which form an important part of efficient
and cooperative scheduling dialogues.
</bodyText>
<sectionHeader confidence="0.994159" genericHeader="method">
3 The Demonstration Scenario
</sectionHeader>
<bodyText confidence="0.999954827586207">
The demonstration scenario includes three partici-
pants. Two are using autonomous agent systems
that partially automate the negotiation of appoint-
ment scheduling and manage their users&apos; private elec-
tronic calendars. The third person plans his appoint-
ments himself and interacts with other participants
through NL e-mail messages. His calendar is man-
aged outside the scope of the systems.
Dialogues can be initiated by the human partici-
pant or by one of the agent systems. In the former
case, the users of the agent systems usually are not
involved in the negotiation. They see the result *hen
it is entered into their electronic calendars. In the
latter case, the user starts his agent by entering via
a graphical interface the appointment constraints to
be used in the negotiation. The basic constraints in-
clude the time interval within which the appointment
must be fixed, the duration of the meeting, and the
participants.
For demonstration purposes, e-mail is exchanged
between different accounts on a local host, which
the server is running on as well. In principle, each
participant and the server could reside on a different
site in the Internet.
The NL server is implemented in Common Lisp
and C with a graphical surface written in Tcl/Tk.
The PASHA agent system is implemented in DFKI-
Oz (Smolka, 1995). The systems are demonstrated
on a Sun workstation under Unix.
</bodyText>
<sectionHeader confidence="0.995491" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999980333333333">
The following persons have contributed significantly
to the development and the implementation of the NL
server system and its components: Thierry Declerck,
Abdel Kader Diagne, Luca Dini, Judith Klein, and
Giinter Neumann. The PASHA agent system has
been developed and extended by Sven Schmeier.
</bodyText>
<sectionHeader confidence="0.998191" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.996638833333333">
Stephan Busemann and Iris Merget. 1995. Eine
Untersuchung kommerzieller Terminverwaltungs-
Software im Hinblick auf die Kopplung mit
natiirlichsprachlichen Systemen. Technical Doc-
ument D-95-11, DFKI, Saarbriicken, September.
Stephan Busemann, Thierry Declerck, Abdel Kader
Diagne, Luca Dini, Judith Klein, and Sven
Schmeier. 1997. Natural language dialogue ser-
vice for appointment scheduling agents. In Proc.
5th Conference on Applied Natural Language Pro-
cessing, Washington, DC.
Giinter Neumann, Rolf Backofen, Judith Baur,
Markus Becker, and Christian Braun. 1997. An
information extraction core system for real world
german text processing. In Proc. 5th Conference
on Applied Natural Language Processing, Wash-
ington, DC.
Sven Schmeier and Achim Schupeta. 1996. PASHA
II â€” a personal assistant for scheduling appoint-
ments. In Proc. 1st Conference on Practical Ap-
plication of Multi Agent Systems, London, April.
Gert Smolka. 1995. The Oz Programming Model.
Research Report RR-95-10, DFKI, Saarbriicken,
Germany.
</reference>
<page confidence="0.998754">
6
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.009239">
<title confidence="0.999906">Automating NL Appointment Scheduling with COSMA*</title>
<author confidence="0.99995">Stephan Busemann</author>
<affiliation confidence="0.996846">DFKI GmbH</affiliation>
<address confidence="0.989755">Stuhlsatzenhausweg 3, 66123 Saarbriicken, Germany</address>
<abstract confidence="0.984900688888889">Appointment scheduling is a problem faced daily by many individuals and organizations. Cooperating agent systems have been developed to partially automate this task. In order to extend the circle of participants as far as possible we advocate the use of natural language transmitted by email. We demonstrate COSMA, a fully implemented German language server for existing appointment scheduling agent systems. COSMA can cope with multiple dialogues in parallel, and accounts for differences in dialogue behaviour between human and machine agents. 1 Motivation Appointment scheduling is a problem faced daily by many individuals and organizations, and typically solved using communication in natural language (NL) by phone, fax or by mail. In general, cooperative interaction between several participants is required. Systems available on the market allow for calendar and contact management. However, as (Busemann and Merget, 1995) point out in a market survey, all planning and scheduling activity remains with the user. Cooperative agent systems developed in the field of Distributed AI are designed to account for the scheduling tasks. Using distributed rather than centralized calendar systems, they not only guarantee a maximum privacy of calendar information but also offer their services to members or employees in external organizations. Although agent systems alusers to automate their scheduling tasks to a con- This work has been supported by a grant from the German Federal Ministry of Education, Science, Research and Technology (FKZ ITW-9402). siderable degree, the circle of participants remains restricted to users with compatible systems. To overcome this drawback we have designed and implemented COSMA, a novel kind of NL dialogue system that serves as a German language front-end to scheduling agents. Human language makes agent services available to a much broader public. COSMA allows human and machine agents to participate in appointment scheduling dialogues via e-mail. We are concerned with meetings all participants should attend and the date of which is negotiable. 2 The Systems organized as a architecture. The server offers NL dialogue service to multiple client agent systems. The scheduling agent systems act for their respective users. The agents systems use a calendar management system for displaying to their owners the results of the appointment negotiations. The users can enter their appointment constraints via a graphical user interface and receive the results either by e-mail or via their electronic calendar. Agent systems are thus hooked up to e-mail, to a calendar manager and to the dialogue server. The server interface is command-driven. A client may connect to the server and open up a dialogue (see Figure 1 in (Busemann et al., 1997)). During the dialogue, the client may request texts to be analyzed or semantic descriptions to be verbalized. When given a text, the server returns the semantic representation, and vice versa. The client ensures that the server has available to it linguistically relevant information about the interlocutors, such as names, sexes etc. The user agents may access the dialogue server via Internet. They use the server as their NL front end to human participants. Machine agents interact with each other in their own formal language. This interaction remains unnoticed by the dialogue server. As a consequence, the dialogues modeled 5 within the server represent only part of the complete multi-participant negotiation. More precisely, only utterances between a human and a machine agent are modeled. The agent system used is a further development of the PASHA system (Schmeier and Schupeta, 1996). NL analysis in the server is based on a shallow parsing strategy implemented in the SMES system (Neumann et al., 1997). The use of SMES in COSMA, semantic analysis and inference, the dialogue model mapping between human and machine dialogue structures, utterance generation, the architectural framework of the server, and the PASHA agent system are described in (Busemann et al., 1997). Both papers can be found in the ANLP &apos;97 conference proceedings. We demonstrate extended versions of the systems described in (Busemann et al., 1997). In particular, the systems to be demonstrated can process counterproposals, which form an important part of efficient and cooperative scheduling dialogues. 3 The Demonstration Scenario The demonstration scenario includes three participants. Two are using autonomous agent systems that partially automate the negotiation of appointment scheduling and manage their users&apos; private electronic calendars. The third person plans his appointments himself and interacts with other participants through NL e-mail messages. His calendar is managed outside the scope of the systems. Dialogues can be initiated by the human participant or by one of the agent systems. In the former case, the users of the agent systems usually are not involved in the negotiation. They see the result *hen it is entered into their electronic calendars. In the latter case, the user starts his agent by entering via a graphical interface the appointment constraints to be used in the negotiation. The basic constraints include the time interval within which the appointment must be fixed, the duration of the meeting, and the participants. For demonstration purposes, e-mail is exchanged between different accounts on a local host, which the server is running on as well. In principle, each participant and the server could reside on a different site in the Internet. The NL server is implemented in Common Lisp and C with a graphical surface written in Tcl/Tk. The PASHA agent system is implemented in DFKI- Oz (Smolka, 1995). The systems are demonstrated on a Sun workstation under Unix. Acknowledgments The following persons have contributed significantly to the development and the implementation of the NL server system and its components: Thierry Declerck, Abdel Kader Diagne, Luca Dini, Judith Klein, and Giinter Neumann. The PASHA agent system has been developed and extended by Sven Schmeier.</abstract>
<note confidence="0.708439875">References Stephan Busemann and Iris Merget. 1995. Eine Untersuchung kommerzieller Terminverwaltungs- Software im Hinblick auf die Kopplung mit natiirlichsprachlichen Systemen. Technical Document D-95-11, DFKI, Saarbriicken, September. Stephan Busemann, Thierry Declerck, Abdel Kader Diagne, Luca Dini, Judith Klein, and Sven Schmeier. 1997. Natural language dialogue serfor appointment scheduling agents. In 5th Conference on Applied Natural Language Pro- DC. Giinter Neumann, Rolf Backofen, Judith Baur, Markus Becker, and Christian Braun. 1997. An information extraction core system for real world text processing. In 5th Conference Applied Natural Language Processing, Washington, DC. Sven Schmeier and Achim Schupeta. 1996. PASHA II â€” a personal assistant for scheduling appoint- In 1st Conference on Practical Apof Multi Agent Systems, April. Gert Smolka. 1995. The Oz Programming Model. Research Report RR-95-10, DFKI, Saarbriicken,</note>
<address confidence="0.79365">Germany.</address>
<intro confidence="0.596943">6</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Stephan Busemann</author>
<author>Iris Merget</author>
</authors>
<title>Eine Untersuchung kommerzieller TerminverwaltungsSoftware im Hinblick auf die Kopplung mit natiirlichsprachlichen Systemen.</title>
<date>1995</date>
<tech>Technical Document D-95-11,</tech>
<location>DFKI, Saarbriicken,</location>
<contexts>
<context position="1089" citStr="Busemann and Merget, 1995" startWordPosition="158" endWordPosition="161">ate COSMA, a fully implemented German language server for existing appointment scheduling agent systems. COSMA can cope with multiple dialogues in parallel, and accounts for differences in dialogue behaviour between human and machine agents. 1 Motivation Appointment scheduling is a problem faced daily by many individuals and organizations, and typically solved using communication in natural language (NL) by phone, fax or by mail. In general, cooperative interaction between several participants is required. Systems available on the market allow for calendar and contact management. However, as (Busemann and Merget, 1995) point out in a market survey, all planning and scheduling activity remains with the user. Cooperative agent systems developed in the field of Distributed AI are designed to account for the scheduling tasks. Using distributed rather than centralized calendar systems, they not only guarantee a maximum privacy of calendar information but also offer their services to members or employees in external organizations. Although agent systems allow users to automate their scheduling tasks to a conThis work has been supported by a grant from the German Federal Ministry of Education, Science, Research an</context>
</contexts>
<marker>Busemann, Merget, 1995</marker>
<rawString>Stephan Busemann and Iris Merget. 1995. Eine Untersuchung kommerzieller TerminverwaltungsSoftware im Hinblick auf die Kopplung mit natiirlichsprachlichen Systemen. Technical Document D-95-11, DFKI, Saarbriicken, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephan Busemann</author>
<author>Thierry Declerck</author>
<author>Abdel Kader Diagne</author>
<author>Luca Dini</author>
<author>Judith Klein</author>
<author>Sven Schmeier</author>
</authors>
<title>Natural language dialogue service for appointment scheduling agents.</title>
<date>1997</date>
<booktitle>In Proc. 5th Conference on Applied Natural Language Processing,</booktitle>
<location>Washington, DC.</location>
<contexts>
<context position="2969" citStr="Busemann et al., 1997" startWordPosition="457" endWordPosition="460">ue service to multiple client agent systems. The scheduling agent systems act for their respective users. The agents systems use a calendar management system for displaying to their owners the results of the appointment negotiations. The users can enter their appointment constraints via a graphical user interface and receive the results either by e-mail or via their electronic calendar. Agent systems are thus hooked up to e-mail, to a calendar manager and to the dialogue server. The server interface is command-driven. A client may connect to the server and open up a dialogue (see Figure 1 in (Busemann et al., 1997)). During the dialogue, the client may request texts to be analyzed or semantic descriptions to be verbalized. When given a text, the server returns the semantic representation, and vice versa. The client ensures that the server has available to it linguistically relevant information about the interlocutors, such as names, sexes etc. The user agents may access the dialogue server via Internet. They use the server as their NL front end to human participants. Machine agents interact with each other in their own formal language. This interaction remains unnoticed by the dialogue server. As a cons</context>
<context position="4251" citStr="Busemann et al., 1997" startWordPosition="662" endWordPosition="665"> only part of the complete multi-participant negotiation. More precisely, only utterances between a human and a machine agent are modeled. The agent system used is a further development of the PASHA system (Schmeier and Schupeta, 1996). NL analysis in the server is based on a shallow parsing strategy implemented in the SMES system (Neumann et al., 1997). The use of SMES in COSMA, semantic analysis and inference, the dialogue model mapping between human and machine dialogue structures, utterance generation, the architectural framework of the server, and the PASHA agent system are described in (Busemann et al., 1997). Both papers can be found in the ANLP &apos;97 conference proceedings. We demonstrate extended versions of the systems described in (Busemann et al., 1997). In particular, the systems to be demonstrated can process counterproposals, which form an important part of efficient and cooperative scheduling dialogues. 3 The Demonstration Scenario The demonstration scenario includes three participants. Two are using autonomous agent systems that partially automate the negotiation of appointment scheduling and manage their users&apos; private electronic calendars. The third person plans his appointments himself</context>
</contexts>
<marker>Busemann, Declerck, Diagne, Dini, Klein, Schmeier, 1997</marker>
<rawString>Stephan Busemann, Thierry Declerck, Abdel Kader Diagne, Luca Dini, Judith Klein, and Sven Schmeier. 1997. Natural language dialogue service for appointment scheduling agents. In Proc. 5th Conference on Applied Natural Language Processing, Washington, DC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Giinter Neumann</author>
<author>Rolf Backofen</author>
<author>Judith Baur</author>
<author>Markus Becker</author>
<author>Christian Braun</author>
</authors>
<title>An information extraction core system for real world german text processing.</title>
<date>1997</date>
<booktitle>In Proc. 5th Conference on Applied Natural Language Processing,</booktitle>
<location>Washington, DC.</location>
<contexts>
<context position="3984" citStr="Neumann et al., 1997" startWordPosition="620" endWordPosition="623">t. They use the server as their NL front end to human participants. Machine agents interact with each other in their own formal language. This interaction remains unnoticed by the dialogue server. As a consequence, the dialogues modeled 5 within the server represent only part of the complete multi-participant negotiation. More precisely, only utterances between a human and a machine agent are modeled. The agent system used is a further development of the PASHA system (Schmeier and Schupeta, 1996). NL analysis in the server is based on a shallow parsing strategy implemented in the SMES system (Neumann et al., 1997). The use of SMES in COSMA, semantic analysis and inference, the dialogue model mapping between human and machine dialogue structures, utterance generation, the architectural framework of the server, and the PASHA agent system are described in (Busemann et al., 1997). Both papers can be found in the ANLP &apos;97 conference proceedings. We demonstrate extended versions of the systems described in (Busemann et al., 1997). In particular, the systems to be demonstrated can process counterproposals, which form an important part of efficient and cooperative scheduling dialogues. 3 The Demonstration Scen</context>
</contexts>
<marker>Neumann, Backofen, Baur, Becker, Braun, 1997</marker>
<rawString>Giinter Neumann, Rolf Backofen, Judith Baur, Markus Becker, and Christian Braun. 1997. An information extraction core system for real world german text processing. In Proc. 5th Conference on Applied Natural Language Processing, Washington, DC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sven Schmeier</author>
<author>Achim Schupeta</author>
</authors>
<title>PASHA II â€” a personal assistant for scheduling appointments.</title>
<date>1996</date>
<booktitle>In Proc. 1st Conference on Practical Application of Multi Agent Systems,</booktitle>
<location>London,</location>
<contexts>
<context position="3864" citStr="Schmeier and Schupeta, 1996" startWordPosition="599" endWordPosition="602">evant information about the interlocutors, such as names, sexes etc. The user agents may access the dialogue server via Internet. They use the server as their NL front end to human participants. Machine agents interact with each other in their own formal language. This interaction remains unnoticed by the dialogue server. As a consequence, the dialogues modeled 5 within the server represent only part of the complete multi-participant negotiation. More precisely, only utterances between a human and a machine agent are modeled. The agent system used is a further development of the PASHA system (Schmeier and Schupeta, 1996). NL analysis in the server is based on a shallow parsing strategy implemented in the SMES system (Neumann et al., 1997). The use of SMES in COSMA, semantic analysis and inference, the dialogue model mapping between human and machine dialogue structures, utterance generation, the architectural framework of the server, and the PASHA agent system are described in (Busemann et al., 1997). Both papers can be found in the ANLP &apos;97 conference proceedings. We demonstrate extended versions of the systems described in (Busemann et al., 1997). In particular, the systems to be demonstrated can process co</context>
</contexts>
<marker>Schmeier, Schupeta, 1996</marker>
<rawString>Sven Schmeier and Achim Schupeta. 1996. PASHA II â€” a personal assistant for scheduling appointments. In Proc. 1st Conference on Practical Application of Multi Agent Systems, London, April.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gert Smolka</author>
</authors>
<title>The Oz Programming Model.</title>
<date>1995</date>
<tech>Research Report RR-95-10,</tech>
<location>DFKI, Saarbriicken, Germany.</location>
<marker>Smolka, 1995</marker>
<rawString>Gert Smolka. 1995. The Oz Programming Model. Research Report RR-95-10, DFKI, Saarbriicken, Germany.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>