<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000020">
<title confidence="0.987322">
Using an incremental robust parser to automatically generate
semantic UNL graphs
</title>
<author confidence="0.710917">
Nuria Gala
</author>
<note confidence="0.651625">
GETA-CLIPS-IMAG
385 av. de la Biblioth`eque, BP 53
</note>
<address confidence="0.698932">
F-38041 Grenoble cedex 9, France
</address>
<email confidence="0.994588">
nuria.gala@imag.fr
</email>
<sectionHeader confidence="0.993766" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999756058823529">
The UNL project (Universal Networking Lan-
guage) proposes a standard for encoding the
meaning of natural language utterances as se-
mantic hypergraphs, intended to be used as
pivot in multilingual information and commu-
nication systems. Several deconverters permit
to automatically translate UNL utterances into
natural languages. However, a rough enconver-
tion from natural language texts to UNL expres-
sions is usually done interactively with editors
specially designed for the UNL project or by
hand (which is very time-consuming and diffi-
cult to extrapolate to huge amounts of data).
In this paper, we address the issue of using an
existing incremental robust parser as main re-
source to enconverting French utterances into
UNL expressions.
</bodyText>
<sectionHeader confidence="0.998991" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99997528125">
UNL is a project of multilingual personal
networking communication initiated by the Uni-
versity of United Nations based in Tokyo. The
representation of an utterance in the UNL inter-
lingua is a hypergraph where nodes bear uni-
versal words (interlingual acceptions) with se-
mantic attributes and arcs denote semantic re-
lations. Any natural language utterance can be
enconverted (encoded) into a UNL expression
that can then be used as a pivot in a variety of
possible applications (multilingual information
retrieval, automatic translation, etc.).
Enconverting into UNL is thus to be unders-
tood as the process by which a UNL expression
is generated from the analysis of a natural lan-
guage utterance. This process can be carried
out by different strategies, ranging from fully
automatic to fully human enconverting.
Within the UNL project, a number of soft-
ware tools exist for different languages, mainly
dictionnaries and deconverters (for French
(Serasset and Boitet, 2000), for Tamil (Dhan-
abalan and Geeta, 2003), etc.). However, there
are a few tools for enconversion (for German
(Hong and Streiter, 1999), for Spanish&apos;, etc.).
As they are not full automatic enconverters,
these systems have not yet proved to be suitable
for dealing with huge amounts of heterogeneous
data.
For French, there is currently a version un-
der development of an enconverter that uses the
Ariane-G5 platform (Boitet et al., 1982), an en-
vironment for multilingual machine translation,
for the analysis of the natural language input.
However, this approach has several drawbacks.
First, the size of the linguistic input that it can
process is limited to 200-250 words. Second, the
output produced contains all the possible com-
plete linguistic analysis for a sentence (multi-
ple syntactic and logico-semantic trees). This
implies an interactive disambiguation step to
choose the appropriate linguistic analysis for the
enconverter. Such an interactive disambigua-
tion step is not a drawback in itself (it is in-
deed very useful in the context of automatic
translation). The problem rather comes from
an efficient disambiguation of huge amounts of
analysis in a reasonable time. Finally, the sys-
tem is not yet multi-platform (the program cur-
rently runs only on Macintosh) and the connec-
ting procedures with Ariane-G5 are not very ef-
ficient at this time (efforts are currently being
done to address this issue).
To cope with all these difficulties and to de-
velop a French enconverter that can generate
UNL expressions for large collections of raw cor-
pora, we propose to use the ouputs produced
by an existing incremental parser which has al-
ready proved robust and efficient for parsing
huge amounts of data.
This article is organized as follows: after
introducing the UNL language and giving some
details on how it represents knowledge in a
language-neutral way, we present XIP, an in-
</bodyText>
<equation confidence="0.701932">
lhttp://www.unl.fi.upm.es
g
</equation>
<bodyText confidence="0.9997175">
cremental parser, that we will use as the central
tool for the enconversion. Then, we describe the
mechanism for transforming XIP’s outputs into
UNL expressions and finally we discuss a pre-
liminary evaluation of the enconverter and our
perspectives.
</bodyText>
<sectionHeader confidence="0.9748025" genericHeader="introduction">
2 The Universal Networking
Language (UNL)
</sectionHeader>
<subsectionHeader confidence="0.999729">
2.1 The language
</subsectionHeader>
<bodyText confidence="0.9989734">
UNL is an artificial language that describes
semantic networks. Sentence information is
represented by hypergraphs having universal
words (UWs) as nodes and relations as arcs. A
hypergraph can also be represented as a set of
directed binary relations, between UWs in the
sentence. Linguistic information is encoded by
means of the UWs, the relations that exist bet-
ween them and the attributes that are associ-
ated with them.
</bodyText>
<subsectionHeader confidence="0.999167">
2.2 Universal Words
</subsectionHeader>
<bodyText confidence="0.999851">
Universal Words represent simple or compound
concepts. They denote interlingual acceptions
(word senses) for a given lemma.
An entry in the dictionnary of Universal
Words contains, as illustrated in Figure 1, a
head word (the French lemma ”membre” in this
example) followed by a list of morpho-syntactic
constraints. The last part of the entry contains
the UW itself: a character string (an English-
language lemma) between double quotes, which
usually contains a list of semantic constraints
in brackets.
</bodyText>
<equation confidence="0.99695475">
[membre] { CAT(CATN),GNR(MAS,FEM),N(NC) }
&amp;quot;associate(icl&gt;member)&amp;quot;;
[membre] { CAT(CATN),GNR(MAS),N(NC) }
&amp;quot;member(icl&gt;human)&amp;quot;;
[membre] { CAT(CATN),GNR(MAS) }
&amp;quot;member(icl&gt;part)&amp;quot;;
[membre] { CAT(CATN),GNR(MAS),N(NC) }
&amp;quot;member&amp;quot;;
</equation>
<figureCaption confidence="0.9488235">
Figure 1: Semantic ambiguity in Universal
Words.
</figureCaption>
<bodyText confidence="0.9970388">
When present, the list of semantic constraints
describes conceptual restrictions. For example,
the first three entries in Figure 1 define three
different acceptions while the last one provides
only the lemma and is thus more general.
</bodyText>
<subsectionHeader confidence="0.996724">
2.3 Relations
</subsectionHeader>
<bodyText confidence="0.934958071428571">
Binary relations are the building blocks for UNL
expressions. They link together two UWs in
a linguistic utterance and have labels that de-
pend on the roles the UWs play in the sentence.
A UNL relation is represented by a headword
(the label of the semantic relation) followed by a
bracketed expression containing the UWs. The
UWs are separated by a comma and decorated
with different kinds of linguistic information.
Figure 2 shows the UNL enconversion for the
following French sentence:
“Lors de la 29e session de la Conf´erence
´en´erale de l’Unesco, les 186 Etats membres
ont ratifi´e a` l’unanimit´e ce projet.”2
</bodyText>
<equation confidence="0.997921055555556">
agt(ratify(agt&gt;thing,obj&gt;thing).@entry.@past,
state(icl&gt;nation).@def.@pl)
mod(state(icl&gt;nation).@def.@pl,
member(mod&lt;thing))
qua(state(icl&gt;nation).@def.@pl,186)
man(ratify(agt&gt;thing,obj&gt;thing).@entry.@past,
unanimously(icl&gt;how))
obj(ratify(agt&gt;thing,obj&gt;thing).@entry.@past,
project(icl&gt;plan(icl&gt;thing)))
mod(project(icl&gt;plan(icl&gt;thing)),this)
tim(ratify(agt&gt;thing,obj&gt;thing).@entry.@past,
session(icl&gt;meeting).@def)
mod(session(icl&gt;meeting).@def,29.@ordinal)
mod(session(icl&gt;meeting).@def,
conference(icl&gt;meeting).@def)
mod(conference(icl&gt;meeting).@def,
general(mod&lt;thing))
mod(conference(icl&gt;meeting).@def,UNESCO.@def)
</equation>
<figureCaption confidence="0.950812">
Figure 2: UNL expressions.
</figureCaption>
<bodyText confidence="0.961425363636364">
The UNL expressions in Figure 2 encode re-
lations such as agt (agent), qua (quantifier),
mod (modifier), tim (instant time), man (man-
ner) and obj (object).
As can be seen on the figure, the information
given by a UNL relation may be very semanti-
cally precise : for example, the notion of “time”
is composed of six labels, corresponding to an
instant time (tim), an initial time (tmf), a final
time (tmt), a period (dur), a sequence (seq) or
a simultaneous action (coo).
</bodyText>
<footnote confidence="0.850009333333333">
2In their 29th General Conference, the 186 member
states of the Unesco ratified their unanimous support of
the project.
</footnote>
<bodyText confidence="0.99932975">
The couple of UWs present in a relation have
different kinds of attributes : morphological in-
formation (def, pl, etc.), information about
tense (past), etc.
</bodyText>
<subsectionHeader confidence="0.999736">
2.4 Representation of UNL graphs
</subsectionHeader>
<bodyText confidence="0.999565">
The list of UNL relations for a linguistic ut-
terance is represented by a UNL hypergraph (a
graph where a node is simple or recursively con-
tains a hypergraph). The arcs bear semantic re-
lation labels and the nodes are UWs with their
attributes as showed in Figure 3.
</bodyText>
<figureCaption confidence="0.998161">
Figure 3: UNL Hypergraph.
</figureCaption>
<bodyText confidence="0.9995276">
UNL hypergraphs must contain one special
node, called the entry of the graph (usually the
finite verb). This information is encoded with
the label entry in the list of UNL relations re-
presenting the corresponding hypergraph.
</bodyText>
<sectionHeader confidence="0.954592" genericHeader="method">
3 An incremental robust parser
</sectionHeader>
<subsectionHeader confidence="0.999756">
3.1 Overview of the parser
</subsectionHeader>
<bodyText confidence="0.9999216">
XIP (Ait-Mokhtar et al., 2002; Hagege and
Roux, 2002) is a rule-based platform for buil-
ding robust incremental parsers. It is deve-
lopped at the Xerox Research Centre Europe
(XRCE) and shares the same computation-
nal paradigm as the PNLPL approach (Jensen,
1992) and the FDGP approach (Tapanainen
and Jarvinen, 1997).
At present, various grammars for XIP have
been built for English and French. The different
phases of linguistic processing are organized in-
crementally : syntactic analysis is done by first
chunking (Abney, 1991) a morphosyntactic an-
notated input text and then extracting func-
tionnal dependencies (links between the words).
The aim of the system is to produce a list of
syntactic dependencies which may be later used
in applications such as information retrieval, se-
mantic disambiguation, coreference resolution,
etc.
</bodyText>
<subsectionHeader confidence="0.999727">
3.2 Incremental approach
</subsectionHeader>
<bodyText confidence="0.999988857142857">
A XIP parser, like the French parser (that we
will call XIPF hereafter), is composed of diffe-
rent modules that transform and process incre-
mentally the linguistic information given as in-
put. XIPF contains three main modules: one
for morphological disambiguation (disambigua-
tion of POS tags depending on contextual in-
formation), another one for chunking (marking
structural groups) and a last one for dependency
calculus (identifying links between words).
Each module may have a number of gram-
mars which are applied one after the other
depending on the linguistic complexity of the
phenomena present. For example, for French,
the identification of verbal phrases comes after
the identification of nominal phrases. The dif-
ferent rules in the grammars also apply incre-
mentally. They are organized in levels so that
they apply sequentially to enrich stepwise the
linguistic analysis. This strategy favors linguis-
tic precision over recall.
</bodyText>
<subsectionHeader confidence="0.999624">
3.3 Data representation
</subsectionHeader>
<bodyText confidence="0.999964703703703">
Within the XIP formalism, information is re-
presented by means of syntactic trees with ter-
minal nodes or sequences of constituant nodes
(such as nominal phrases (NPs), finite verbal
phrases (FVs), etc.). The maximal node for each
tree (sentence) is a virtual node called GROUPS.
All nodes, lexical (membre) or not (NP),
have a list of features associated with them
and describing precise features : typogra-
phical (capital letter [maj:+]), lexical (proper
noun [proper:+]), morphological (number
[plu:+]), syntactic (subcategorization with the
preposition “a” [sfa:+]) or semantic (time
[tim:+]).
Since the complete linguistic information of
a node is always present, even if it is not dis-
played in the output, it is simple to manipulate
at any time during the analysis. Therefore, the
possibility of taking into account different kinds
of features at any step of the analysis is a con-
siderable advantage when building a semantic
application (the enconversion into UNL expres-
sions).
Indeed, semantic information can be enriched
by adding new particular features when neces-
sary (a feature title has been added to be ap-
plied in titles).
</bodyText>
<subsectionHeader confidence="0.965715">
3.4 XIPF output
</subsectionHeader>
<bodyText confidence="0.999915">
The final result of the parser (a list of syntac-
tic dependencies) is obtained from the linguistic
</bodyText>
<figure confidence="0.996561653846154">
ratify(agt&gt;thing,obj&gt;thing)
.@entry.@past
state(icl&gt;nation)
.@def.@pl
project(icl&gt;plan
(icl&gt;thing))
session(icl&gt;meeting)
.@def
unanimously(icl&gt;how)
this
186
29 .@ordinal
member(mod&gt;thing)
conference(icl&gt;meeting)
.@def
UNESCO
.@def
general(mod&lt;thing)
Qua mod
mod mod
mod
mod mod
obj
man
agt
tim
</figure>
<bodyText confidence="0.997691">
processing done by the different modules. Fi-
gure 4 shows the XIPF analysis for the French
sentence given as example in section 2.3.
</bodyText>
<table confidence="0.983623363636364">
SUBJ NOUN(ratifi´e,Etats)
VARG NOUN DIR(ratifi´e,projet)
VMOD LEFT NOUN INDIR(ratifi´e,Lors
de,session)
VMOD POSIT1 ADV(ratifi´e,`a, l’unanimit´e)
NMOD POSIT1 RIGHT ADJ(Conf´erence,g´en´erale)
NMOD POSIT1 LEFT ADJ NOUN(session,29e)
NMOD POSIT1 NOUN(session,de,Conf´erence)
NMOD POSIT1 NOUN(Conf´erence,de,Unesco)
NN(Etats,membres)
DETERM DEF NOUN DET(la,session)
DETERM DEF NOUN DET(la,Conf´erence)
DETERM DEF NOUN DET(l’,Unesco)
DETERM DEF NOUN DET(les,Etats)
DETERM DEM NOUN DET(ce,projet)
DETERM NUM NOUN(186,Etats)
AUXIL(ratifi´e,ont)
0&gt;GROUPE{SC{PP{Lors de NP{la AP{29e}
session}} PP{de NP{la Conf´erence}}
AP{g´en´erale} PP{de NP{l’ Unesco}} , NP{les
186 Etats} NP{membres} FV{ont ratifi´e}} a`
l’unanimit´e NP{ce projet} .}
</table>
<figureCaption confidence="0.99924">
Figure 4: XIPF output.
</figureCaption>
<bodyText confidence="0.999115826086957">
For this sentence, the parser extracts re-
lations such as subject (SUBJ), verbal subca-
tegorization (VARG), verbal and nominal mo-
dification (VMOD, NMOD and NN), determination
(DETERM) and verbal auxiliary (AUXIL). The
head of the dependency appears as the first ele-
ment except in the case of a determination re-
lation.
Relations usually have a list of morpho-
syntactic features associated with them : the
POS tag of the word linked to the head (NOUN in
a SUBJ relation, ADJ in a NMOD, etc.), morpholo-
gical precisions (NUM, DEM) or syntactic features
(the position of the adjective, POSIT1, RIGHT,
etc.).
The process of dependency extraction is de-
terministic: the most plausible relation accor-
ding to the system is extracted. The only excep-
tion is that of prepositionnal attachment (VMOD
and NMOD): the linguistic information that the
parser has is not enough to handle structural
ambiguities. In this case, all possible relations
appear in the result.
</bodyText>
<subsectionHeader confidence="0.969347">
3.5 Parser evaluation
</subsectionHeader>
<bodyText confidence="0.99989045">
Parsers built with the XIP engine (XIPF) are
able to process about 2.000 words/s using 10 Mo
of memory footprint (only grammars, without
lexicons)3 .
As for linguistic performance, an evalu-
ation of XIPF subject and object (VARG)
dependencies, conducted on French newspa-
pers (Ait-Mokhtar et al., 2001), showed the
following precision (P) and recall (R) rates:
SUBJECT, P = 93,45 %, R = 89,36 %; OBJECT,
P = 90,62 %, R = 86,56 %.
Another evaluation carried out with XIPF+
(Gala, 2003), a second French parser contai-
ning more specialized grammars to handle com-
plex phenomena such as punctuation, lists, ti-
tles etc., using varied raw corpora from different
types and domains4 gives P = 94 % for subject
even in sentences being or containing lists, enu-
merations etc. and P = 93 % and R = 89,6 %
for key words in titles (CLE relation).
</bodyText>
<sectionHeader confidence="0.994365" genericHeader="method">
4 A French UNL enconverter
</sectionHeader>
<subsectionHeader confidence="0.934348">
4.1 Overview
</subsectionHeader>
<bodyText confidence="0.999950217391304">
The principal motivation to create a French en-
converter is to easily obtain huge amounts of
UNL enconverted corpora which can be subse-
quently used in other applications (for example,
multilingual information retrieval). To achieve
this objective, one of the main requirements was
also the reusability of existing robust linguistic
resources.
The choice of a XIP parser was motivated by
several reasons. First, its robustness permits to
deal with huge amounts of text (a result is al-
ways produced whatever the complexity of the
input). Second, its modular architecture facili-
tates the articulation of different ressources (it
is easy to enrich the parser with new lexicons
and grammars and to desactivate a particular
module when necessary). Finally, the flexibi-
lity of the formalism permits to enrich the rules
and the features with no harm. We have pre-
fered XIPF+ over the standard XIPF because
of its broader linguistic coverage.
The French UNL enconverter is thus a proces-
sor that automatically transforms annotations
</bodyText>
<footnote confidence="0.6890805">
3Obtained with a Pentum III 1 GHz.
4About 108.000 words extracted from the Web (end
2000) concerning general newspaper (Le Monde) as well
as specialized domains such as economics (journal Les
Echos), science (medecine, physics), law (project of law),
etc.
</footnote>
<bodyText confidence="0.980752">
provided by the XIPF+ parser into UNL ex-
pressions.
</bodyText>
<subsectionHeader confidence="0.978434">
4.2 Remarks on terminology
</subsectionHeader>
<bodyText confidence="0.999942666666667">
To avoid ambiguity, we use the term “depen-
dency” to indicate XIPF+ syntactic links of the
form D(x,y) or D(x,y,z), as shown in Figure
4, and the term “feature” to indicate linguis-
tic information provided by the parser. XIPF+
provides twelve types of dependencies and more
than two hundred and fifty features, of the types
described in section 3.3 (typographical, mor-
phological, etc.).
As for UNL, we use the term “rela-
tion” to denote a semantic link of the form
label(UW1.attributes,UW2.attributes), as
shown in Figure 2, while an “attribute” corre-
sponds to a UNL annotation. Such an annota-
tion appears to the right of a UW and adds par-
ticular linguistic information. The UNL forma-
lism provides about fourty relations and eighty
attributes of different types.
</bodyText>
<subsectionHeader confidence="0.999732">
4.3 Generation of UNL expressions
</subsectionHeader>
<bodyText confidence="0.999973125">
The first step of the enconvertion consists in
identifying the information provided by XIPF+
that will be translated into UNL relations.
There are three kinds of mapping rules perfor-
ming this task, depending on the input and the
result of the transformation: a dependency gi-
ving an attribute, a dependency giving a rela-
tion, a feature giving a relation.
</bodyText>
<subsubsectionHeader confidence="0.699113">
4.3.1 Dependency to attribute.
</subsubsectionHeader>
<bodyText confidence="0.99983925">
The first kind of mapping rules transforms a
XIPF+ dependency into a UNL attribute. An
example is that of the relation CLE (the head of
a title). Within UNL it becomes @title and it
is included as an attribute of the UNL relation
containing the head word of the title.
The following example describes a title, its
analysis with XIPF+ and its UNL encoversion:
</bodyText>
<subsubsectionHeader confidence="0.628026">
Le Forum Universel des Cultures5
4.3.2 Dependency to relation.
</subsubsectionHeader>
<bodyText confidence="0.999945666666667">
The second kind of mapping rules transforms
a XIPF+ dependency into a UNL relation. In
some cases, this transformation is not straight-
forward since a number of lexical and semantic
features are to be taken into account (and they
are not always provided by the parser). This
</bodyText>
<figure confidence="0.7159245">
CLE(Forum)
NMOD POSIT1 RIGHT ADJ(Forum,Universel)
NMOD POSIT1 NOUN INDIR(Forum,des,Cultures)
DETERM CLOSED DEF NOUN DET(Le,Forum)
&lt;title&gt; 0&gt;GROUPE{NP{Le Forum} AP{Universel}
PP{des NP{Cultures}} &lt;/title&gt;
mod(forum.@def.@entry.@title,
universal(mod&lt;thing))
mod(forum.@def.@entry.@title,
culture(icl&gt;abstract thing).@def.@pl)
</figure>
<figureCaption confidence="0.9967695">
Figure 5: Example of dependency to attribute
transformation.
</figureCaption>
<bodyText confidence="0.963150090909091">
is the case of dependencies with the verb to be
and generally with all verbs denoting a state.
While in the UNL formalism the verb to be
is considered a copula and does not appear
in the semantic representation, the parser
produces the syntactic dependencies in which
the verb participates and marks the fact of
being a copula by means of features ([copula]
as lexical feature and SPRED -predicative- as
syntactic feature) as illustrated on the example
below :
</bodyText>
<figure confidence="0.77604625">
Le Forum est Universel.6
SUBJ(^etre,Forum)
VARG ADJ SPRED(^etre,Universel)
aoj(Universal,Forum)
</figure>
<figureCaption confidence="0.927581333333333">
Figure 6: Example of dependencies involving
the verb to be and their corresponding UNL re-
lation.
</figureCaption>
<bodyText confidence="0.999574818181818">
In this case, an aoj relation shows the link
between the noun in the subject and the adjec-
tive. The parser’s feature permitting the iden-
tification of a copula is thus crucial in order to
map precisely a SUBJ and a VARG into an agt
and a obj or into a single aoj.
Table 1 gives a summary of the principal
transformations performed by this second kind
of mapping rules (as it is shown, in the case
of modification, two types of XIPF+ relations
produce a UNL mod):
</bodyText>
<footnote confidence="0.703941">
5The Universal Forum of Cultures 6The Forum is Universal.
</footnote>
<table confidence="0.982392">
SUBJ(X[be-],Y) agt(X,Y)
VARG(X[be-],Y) obj(X,Y)
SUBJ(X[be+],Y) aoj(Z,Y)
VARG(X[be+],Z)
NMOD(X,Y) or NN(X,Y) mod(X,Y)
</table>
<tableCaption confidence="0.9803765">
Table 1: XIPF+ dependencies producing UNL
relations.
</tableCaption>
<subsectionHeader confidence="0.681183">
4.3.3 Feature to relation.
</subsectionHeader>
<bodyText confidence="0.999835947368421">
The last type of mapping rules identifies parti-
cular information encoded as features within the
parser’s output and transforms them into UNL
relations with the appropriate words. This is
the case for the notions of quantification and
time.
Regarding quantification, this feature, en-
coded within the dependency DETERM, is trans-
formed to produce a qua UNL relation between
a determiner and a noun.
As for the relations involving the notion of
time, the feature time encoded by XIPF+ is
too general. Therefore, it is not possible to
produce the semantically precise UNL relations
expressing variations of the concept of time
(duration, final time, sequence, etc.). In this
case, we have chosen to create an intermediate
UNL relation named time in order to keep this
semantic information.
</bodyText>
<table confidence="0.564903">
NMOD(X,Y,Z) qua(Z,W)
DETERM(W[quant+],Z)
NMOD(X,Y,Z[time+]) time(X,Z)
</table>
<tableCaption confidence="0.7351515">
Table 2: XIPF+ features producing UNL rela-
tions.
</tableCaption>
<subsectionHeader confidence="0.999769">
4.4 Accessing the UW base
</subsectionHeader>
<bodyText confidence="0.965674642857143">
After identifying the UNL relations, the encon-
verter retrieves the UWs corresponding to each
French word in a relation. UWs are contained
into a UW database of 37.901 French lemmas.
The major difficulty here concerns ambiguity,
that is, accessing the right acception, since the
database usually contains a list of UWs for a
given lemma. The ambiguity can be semantic,
when a French lemma corresponds to a single
English lemma with different acceptions (cf
Figure 1) or lexical, when a French lemma
corresponds to several English lemmas. Here
is an example of lexical ambiguity with the
pronoun it (”he” or ”it” in English) :
</bodyText>
<equation confidence="0.7464825">
[il] { CAT(CATR) } &amp;quot;he(icl&gt;human)&amp;quot;;
[il] { CAT(CATR) } &amp;quot;it(icl&gt;nonhuman)&amp;quot;;
</equation>
<figureCaption confidence="0.991966">
Figure 7: Lexical ambiguity in Universal Words.
</figureCaption>
<bodyText confidence="0.999987125">
To this date, as the lexico-semantic infor-
mation provided by the parser is not enough
to choose the appropriate UW, the enconverter
takes the most general acception (that is, the
word sense without a constraint list –the last
entry in the list showed in Figure 1). When all
acceptions of an entry have such list of cons-
traints, the enconverter chooses the first one.
</bodyText>
<subsectionHeader confidence="0.976745">
4.5 Enrichment with lexical
information
</subsectionHeader>
<bodyText confidence="0.999940863636364">
The final step of the enconversion enriches the
rough UNL expressions produced (UNL labels
with simplified UWs) with more complete mor-
phological information. A set of rules is thus
specialized in translating different linguistic fea-
tures from the parser into UNL descriptors com-
pleting the words in a relation.
Some of this morphological information can
also be extracted from the UW base (gender).
However, we have preferred to extract a maxi-
mum of information from the parser because it
produces a contextual analysis of the words ap-
pearing in a linguistic utterance.
The features which enrich the UNL output
concern definiteness (@def or @indef), num-
ber (@sg or @pl) and tense (@past, @present,
@fut). A few labels (@ordinal, @complete ...)
are absent on the XIPF+ output and therefore
not automatically enconverted in the UNL out-
put. Finally, the attribute @entry is systemati-
cally added to UWs head of their sentence (the
verb): agt, varg, aoj, etc.
</bodyText>
<sectionHeader confidence="0.996628" genericHeader="method">
5 Evaluation
</sectionHeader>
<bodyText confidence="0.998471">
A complete evaluation of a UNL enconverter
should take into account the following possible
kinds of errors:
</bodyText>
<listItem confidence="0.998674571428571">
• graphs with wrong linguistic information
(semantic relations, attributes, etc.),
• missing information (incomplete graph due
to missing relations, incomplete decora-
tions, etc.),
• graphs with wrong UWs (wrong acception
or wrong lemma).
</listItem>
<bodyText confidence="0.990813888888889">
Since in this article we want to emphasize the
use of an incremental robust parser for creating
an enconverter, we evaluated errors concerning
semantic relations7, thus the first and the se-
cond points which correspond, respectively, to
classic evaluation metrics of precision and recall
rates.
The enconverter was tested against the first
50 manually enconverted UNL graphs (1.059
words) from a corpus of legal text. The a-
verage length of the sentences was about 21
words (21,18). The semantic relations evalu-
ated in this preliminary experiment (322 UNL
expressions) were agt (44), obj (57) and mod
(221).
Table 3 gives the results obtained for the
evaluation of this first version of the encon-
verter :
</bodyText>
<table confidence="0.99212075">
Relation Precision Recall
agt(X,Y) 57 % 80 %
obj(X,Y) 51 % 48 %
mod(X,Y) 58 % 86 %
</table>
<tableCaption confidence="0.891157">
Table 3: Results of the evaluation of the first
version of the enconverter.
</tableCaption>
<bodyText confidence="0.995071136363637">
For agents, most errors come from syntac-
tic subjects correctly identified by the parser
but presenting semantic features that should
had been taken into account to create aoj rela-
tions. To give an example, in the sentence “La
culture acquiert des formes diff´erentes (...)”8,
the parser extracts correctly the dependency
subj(acquire,culture) although it is seman-
tically encoded as aoj(acquire,culture) in
UNL because the verb “acquire” is considered
in this utterance as a verb of state.
In the case of objects, errors on precision
concern wrong scope of coordination as well
as objects being a whole sentence. As for
recall, there are several constructions which
may be considered obj from a semantic point
of view but that the parser identifies as
modifiers due to their surface construction
with a preposition. For example, “source
de creativit´e”9 is analyzed by the parser as
mod(source,de,cr´eativit´e) although UNL
encodes obj(source,creativity). Likewise,
</bodyText>
<footnote confidence="0.98519625">
7The presence or absence of the different attributes
was not evaluated.
8Culture acquires different forms (...).
9Source of creativity.
</footnote>
<bodyText confidence="0.997343416666666">
“vers l’acc´es de la diversit´e culturelle”10 is en-
coded in UNL as obj(towards,access), a kind
of relation that the parser does not extract.
A final remark concerns modifiers. As said
before, the parser is not deterministic in mark-
ing modifiers: all possible combinations be-
tween a head word and its dependents are ex-
tracted. That is the main reason why precision
is low and recall is high.
The average of all these figures gives a global
evaluation of the enconverter corresponding to
P = 56 % and R = 69 %.
</bodyText>
<sectionHeader confidence="0.999737" genericHeader="method">
6 Discussion
</sectionHeader>
<bodyText confidence="0.987397291666667">
At this stage of the project, there are a number
of conclusions we can draw from the preceding
evaluation.
The first one is that the results are rather en-
couraging in terms of a first rough enconvertion
from syntactic XIPF+ information to UNL ex-
pressions (agt, obj and mod). However, we are
aware that certain cases present considerable
difficulties. For example, in addition to the ex-
amples presented in the evaluation for verbs of
state, subjects with a semantic feature of “pa-
tient” are to be enconverted as obj and not as
subj (unfortunately the semantic information
needed for this transformation is not yet avail-
able within the parser). Thus in “La r´eunion
continuera jusqu’`a ce soir.”11 the parser ex-
tracts a subj(continuer,r´eunion) that might
be enconverted as obj(continue,meeting) in
UNL. All these kinds of complex transforma-
tions including particular semantic features are
at this point an important bottleneck for the
enconverter.
The second conclusion coming from the eva-
luation (even if not quantitatively analyzed) is
that the choice of the UW remains a critical
point, as the enconverter has not the possibi-
lity of choosing the correct acception giving a
configuration. One possibility to consider might
be to introduce interactivity with a human to
choose the correct UW. The second possibility
is related to the improval of the parser: we can
consider adding more linguistic information, in
the form of semantic classes or semantic fea-
tures, in order to be able to disambiguate. Ha-
ving enriched the parser with these semantic
features, another possibility to improve the en-
converter might be to consider statistical infor-
mation about collocations.
10Towards accessing cultural diversity.
11The meeting will continue until this evening.
Finally, we are conscious that there would
still remain several aspects which would demand
to be improved within the parser itself : prepo-
sitionnal attachment disambiguation, scope of
coordination, complex coreference, etc. Parti-
cular strategies may be adapted to handle such
difficulties individually (using statistical infor-
mation, interactive disambiguation, etc.).
</bodyText>
<sectionHeader confidence="0.998906" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.99965345">
In this paper we have presented a mechanism
for automatically producing UNL expressions
using the ouput of a robust parser. After des-
cribing the UNL formalism and presenting an
incremental parser able to accurately process
huge amounts of data, we have shown how one
can transform the linguistic information pro-
vided by the parser into UNL expressions. We
have also presented a first evaluation in an at-
tempt to try to assess the performance of the
enconverter.
Our results show that there are still several
crucial problems that we need to solve. Ho-
wever, taking into account that this is prelimi-
nary work, the results already obtained are en-
couraging and confirm the possibility of using
the reliable linguistic information automatically
obtained from an incremental robust parser to
create a UNL semantic enconverter for huge
amounts of data.
</bodyText>
<sectionHeader confidence="0.996004" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.99996225">
The author wants to express her gratitude to
E. Blanc and A. Max, as well as to the three
anonymous reviewers, for their suggestions and
comments on a first draft of the paper.
</bodyText>
<sectionHeader confidence="0.999281" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.995677893617021">
S. Abney. 1991. Parsing by chunks. In
Principle-Based Parsing, edited by R.
Berwick, S. Abney and C. Tenny, 257–278.
Kluwer Academic Publishers. Boston.
S. A¨ıt-Mokhtar, J. P. Chanod, and C. Roux.
2001. A multi-input dependency parser. In
Proceedings of International Workshop on
Parsing Technologies, IWPT-2001, 201-204.
Beijing, China.
S. A¨ıt-Mokhtar, J. P. Chanod, and C. Roux.
2002. Robustness beyond shallowness : In-
cremental Deep Parsing. Special Issue of the
Natural Language Engineering Journal on
Robust Methods in Analysis of Natural Lan-
guage Data, vol. 8(3), 121–144, Cambridge
University Press.
C. Boitet, P. Guillaume, and M. Qu´ezel-
Ambrunaz. 1982. ARIANE-78, an integrated
environment for automated translation and
human revision. In Proceedings of Conference
on Computational Linguistics, COLING-82,
19–27, Prague.
T. Dhanabalan, and T. V. Geetha. 2003. UNL
Deconverter for Tamil. In International Con-
ference on the Convergence of Knowledge,
Culture, Language and Information Tech-
nologies. Alexandria, Egypt.
N. Gala. Un mod`ele d’analyseur syntaxique
robuste fond´e sur la modularit´e et la lexi-
calisation de ses grammaires. Th`ese de doc-
torat, Universit´e de Paris-Sud, UFR scien-
tifique d’Orsay, France.
C. Hag`ege, and C. Roux. 2002. A Robust
and Flexible Platform for Dependency Ex-
traction. In Proceedings of 3rd Conference on
Language Ressources and Evaluation, LREC-
2002, 520–523, Las Palmas de Gran Canaria,
Spain.
M. Hong, and O. Streiter. 1999. Overcom-
ing the language barriers in the Web : the
UNL-Approach. In Multilingual Corpora :
encoding, structuring, analysis. 11th Annual
Meeting of the German Society for Compu-
tational Linguistics and Language Technolo-
gies.. Frankfurt, Germany.
K. Jensen. 1992. PEG: the PLNLP English
Grammar. In Natural Language Processing :
</reference>
<bodyText confidence="0.836433714285714">
the PLNLP approach, edited by K. Jensen, G.
Heidorn and S. Richardson. Kluwer Academic
Publishers. Boston.
G. Serasset, and C. Boitet. 2000. On UNL as
the future “html of the linguistic content”
and the reuse of existing NLP components
in UNL-related applications with the example
</bodyText>
<reference confidence="0.977475285714286">
of a UNL-French deconverter. In Proceedings
of Conference on Computational Linguistics,
COLING-2000. Saarbruecken.
P. Tapanainen, and T. Jarvinen. 1997. A non-
projective dependency parser. In Proceedings
of Conference on Applied Natural Language
Processing, ANLP-97. Washington.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.820060">
<title confidence="0.9964745">Using an incremental robust parser to automatically semantic UNL graphs</title>
<author confidence="0.999412">Nuria Gala</author>
<affiliation confidence="0.980166">GETA-CLIPS-IMAG</affiliation>
<address confidence="0.984085">385 av. de la Biblioth`eque, BP 53 F-38041 Grenoble cedex 9, France</address>
<email confidence="0.994681">nuria.gala@imag.fr</email>
<abstract confidence="0.992590055555555">The UNL project (Universal Networking Language) proposes a standard for encoding the meaning of natural language utterances as semantic hypergraphs, intended to be used as pivot in multilingual information and communication systems. Several deconverters permit to automatically translate UNL utterances into natural languages. However, a rough enconvertion from natural language texts to UNL expressions is usually done interactively with editors specially designed for the UNL project or by hand (which is very time-consuming and difficult to extrapolate to huge amounts of data). In this paper, we address the issue of using an existing incremental robust parser as main resource to enconverting French utterances into UNL expressions.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Abney</author>
</authors>
<title>Parsing by chunks. In Principle-Based Parsing, edited by</title>
<date>1991</date>
<pages>257--278</pages>
<publisher>Kluwer Academic Publishers.</publisher>
<location>Boston.</location>
<contexts>
<context position="8761" citStr="Abney, 1991" startWordPosition="1301" endWordPosition="1302"> corresponding hypergraph. 3 An incremental robust parser 3.1 Overview of the parser XIP (Ait-Mokhtar et al., 2002; Hagege and Roux, 2002) is a rule-based platform for building robust incremental parsers. It is developped at the Xerox Research Centre Europe (XRCE) and shares the same computationnal paradigm as the PNLPL approach (Jensen, 1992) and the FDGP approach (Tapanainen and Jarvinen, 1997). At present, various grammars for XIP have been built for English and French. The different phases of linguistic processing are organized incrementally : syntactic analysis is done by first chunking (Abney, 1991) a morphosyntactic annotated input text and then extracting functionnal dependencies (links between the words). The aim of the system is to produce a list of syntactic dependencies which may be later used in applications such as information retrieval, semantic disambiguation, coreference resolution, etc. 3.2 Incremental approach A XIP parser, like the French parser (that we will call XIPF hereafter), is composed of different modules that transform and process incrementally the linguistic information given as input. XIPF contains three main modules: one for morphological disambiguation (disambi</context>
</contexts>
<marker>Abney, 1991</marker>
<rawString>S. Abney. 1991. Parsing by chunks. In Principle-Based Parsing, edited by R. Berwick, S. Abney and C. Tenny, 257–278. Kluwer Academic Publishers. Boston.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S A¨ıt-Mokhtar</author>
<author>J P Chanod</author>
<author>C Roux</author>
</authors>
<title>A multi-input dependency parser.</title>
<date>2001</date>
<booktitle>In Proceedings of International Workshop on Parsing Technologies, IWPT-2001,</booktitle>
<pages>201--204</pages>
<location>Beijing, China.</location>
<marker>A¨ıt-Mokhtar, Chanod, Roux, 2001</marker>
<rawString>S. A¨ıt-Mokhtar, J. P. Chanod, and C. Roux. 2001. A multi-input dependency parser. In Proceedings of International Workshop on Parsing Technologies, IWPT-2001, 201-204. Beijing, China.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S A¨ıt-Mokhtar</author>
<author>J P Chanod</author>
<author>C Roux</author>
</authors>
<title>Robustness beyond shallowness : Incremental Deep Parsing.</title>
<date>2002</date>
<journal>Special Issue of the Natural Language Engineering Journal on Robust Methods in Analysis of Natural Language Data,</journal>
<volume>8</volume>
<issue>3</issue>
<pages>121--144</pages>
<publisher>Cambridge University Press.</publisher>
<marker>A¨ıt-Mokhtar, Chanod, Roux, 2002</marker>
<rawString>S. A¨ıt-Mokhtar, J. P. Chanod, and C. Roux. 2002. Robustness beyond shallowness : Incremental Deep Parsing. Special Issue of the Natural Language Engineering Journal on Robust Methods in Analysis of Natural Language Data, vol. 8(3), 121–144, Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Boitet</author>
<author>P Guillaume</author>
<author>M Qu´ezelAmbrunaz</author>
</authors>
<title>ARIANE-78, an integrated environment for automated translation and human revision.</title>
<date>1982</date>
<booktitle>In Proceedings of Conference on Computational Linguistics, COLING-82, 19–27,</booktitle>
<location>Prague.</location>
<marker>Boitet, Guillaume, Qu´ezelAmbrunaz, 1982</marker>
<rawString>C. Boitet, P. Guillaume, and M. Qu´ezelAmbrunaz. 1982. ARIANE-78, an integrated environment for automated translation and human revision. In Proceedings of Conference on Computational Linguistics, COLING-82, 19–27, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Dhanabalan</author>
<author>T V Geetha</author>
</authors>
<title>UNL Deconverter for Tamil.</title>
<date>2003</date>
<booktitle>In International Conference on the Convergence of Knowledge, Culture, Language and Information Technologies.</booktitle>
<location>Alexandria, Egypt.</location>
<marker>Dhanabalan, Geetha, 2003</marker>
<rawString>T. Dhanabalan, and T. V. Geetha. 2003. UNL Deconverter for Tamil. In International Conference on the Convergence of Knowledge, Culture, Language and Information Technologies. Alexandria, Egypt.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Gala</author>
</authors>
<title>Un mod`ele d’analyseur syntaxique robuste fond´e sur la modularit´e et la lexicalisation de ses grammaires. Th`ese de doctorat, Universit´e de Paris-Sud, UFR scientifique d’Orsay,</title>
<date></date>
<marker>Gala, </marker>
<rawString>N. Gala. Un mod`ele d’analyseur syntaxique robuste fond´e sur la modularit´e et la lexicalisation de ses grammaires. Th`ese de doctorat, Universit´e de Paris-Sud, UFR scientifique d’Orsay, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Hag`ege</author>
<author>C Roux</author>
</authors>
<title>A Robust and Flexible Platform for Dependency Extraction.</title>
<date>2002</date>
<booktitle>In Proceedings of 3rd Conference on Language Ressources and Evaluation, LREC2002, 520–523, Las Palmas de Gran Canaria,</booktitle>
<marker>Hag`ege, Roux, 2002</marker>
<rawString>C. Hag`ege, and C. Roux. 2002. A Robust and Flexible Platform for Dependency Extraction. In Proceedings of 3rd Conference on Language Ressources and Evaluation, LREC2002, 520–523, Las Palmas de Gran Canaria, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Hong</author>
<author>O Streiter</author>
</authors>
<title>Overcoming the language barriers in the Web : the UNL-Approach.</title>
<date>1999</date>
<booktitle>In Multilingual Corpora : encoding, structuring, analysis. 11th Annual Meeting of the German Society for Computational Linguistics and Language Technologies..</booktitle>
<location>Frankfurt, Germany.</location>
<contexts>
<context position="2060" citStr="Hong and Streiter, 1999" startWordPosition="313" endWordPosition="316">ltilingual information retrieval, automatic translation, etc.). Enconverting into UNL is thus to be understood as the process by which a UNL expression is generated from the analysis of a natural language utterance. This process can be carried out by different strategies, ranging from fully automatic to fully human enconverting. Within the UNL project, a number of software tools exist for different languages, mainly dictionnaries and deconverters (for French (Serasset and Boitet, 2000), for Tamil (Dhanabalan and Geeta, 2003), etc.). However, there are a few tools for enconversion (for German (Hong and Streiter, 1999), for Spanish&apos;, etc.). As they are not full automatic enconverters, these systems have not yet proved to be suitable for dealing with huge amounts of heterogeneous data. For French, there is currently a version under development of an enconverter that uses the Ariane-G5 platform (Boitet et al., 1982), an environment for multilingual machine translation, for the analysis of the natural language input. However, this approach has several drawbacks. First, the size of the linguistic input that it can process is limited to 200-250 words. Second, the output produced contains all the possible complet</context>
</contexts>
<marker>Hong, Streiter, 1999</marker>
<rawString>M. Hong, and O. Streiter. 1999. Overcoming the language barriers in the Web : the UNL-Approach. In Multilingual Corpora : encoding, structuring, analysis. 11th Annual Meeting of the German Society for Computational Linguistics and Language Technologies.. Frankfurt, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Jensen</author>
</authors>
<title>PEG: the PLNLP English Grammar. In Natural Language Processing : of a UNL-French deconverter.</title>
<date>1992</date>
<booktitle>In Proceedings of Conference on Computational Linguistics, COLING-2000. Saarbruecken.</booktitle>
<contexts>
<context position="8494" citStr="Jensen, 1992" startWordPosition="1260" endWordPosition="1261">ith their attributes as showed in Figure 3. Figure 3: UNL Hypergraph. UNL hypergraphs must contain one special node, called the entry of the graph (usually the finite verb). This information is encoded with the label entry in the list of UNL relations representing the corresponding hypergraph. 3 An incremental robust parser 3.1 Overview of the parser XIP (Ait-Mokhtar et al., 2002; Hagege and Roux, 2002) is a rule-based platform for building robust incremental parsers. It is developped at the Xerox Research Centre Europe (XRCE) and shares the same computationnal paradigm as the PNLPL approach (Jensen, 1992) and the FDGP approach (Tapanainen and Jarvinen, 1997). At present, various grammars for XIP have been built for English and French. The different phases of linguistic processing are organized incrementally : syntactic analysis is done by first chunking (Abney, 1991) a morphosyntactic annotated input text and then extracting functionnal dependencies (links between the words). The aim of the system is to produce a list of syntactic dependencies which may be later used in applications such as information retrieval, semantic disambiguation, coreference resolution, etc. 3.2 Incremental approach A </context>
</contexts>
<marker>Jensen, 1992</marker>
<rawString>K. Jensen. 1992. PEG: the PLNLP English Grammar. In Natural Language Processing : of a UNL-French deconverter. In Proceedings of Conference on Computational Linguistics, COLING-2000. Saarbruecken.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Tapanainen</author>
<author>T Jarvinen</author>
</authors>
<title>A nonprojective dependency parser.</title>
<date>1997</date>
<booktitle>In Proceedings of Conference on Applied Natural Language Processing, ANLP-97.</booktitle>
<location>Washington.</location>
<contexts>
<context position="8548" citStr="Tapanainen and Jarvinen, 1997" startWordPosition="1266" endWordPosition="1269">ure 3. Figure 3: UNL Hypergraph. UNL hypergraphs must contain one special node, called the entry of the graph (usually the finite verb). This information is encoded with the label entry in the list of UNL relations representing the corresponding hypergraph. 3 An incremental robust parser 3.1 Overview of the parser XIP (Ait-Mokhtar et al., 2002; Hagege and Roux, 2002) is a rule-based platform for building robust incremental parsers. It is developped at the Xerox Research Centre Europe (XRCE) and shares the same computationnal paradigm as the PNLPL approach (Jensen, 1992) and the FDGP approach (Tapanainen and Jarvinen, 1997). At present, various grammars for XIP have been built for English and French. The different phases of linguistic processing are organized incrementally : syntactic analysis is done by first chunking (Abney, 1991) a morphosyntactic annotated input text and then extracting functionnal dependencies (links between the words). The aim of the system is to produce a list of syntactic dependencies which may be later used in applications such as information retrieval, semantic disambiguation, coreference resolution, etc. 3.2 Incremental approach A XIP parser, like the French parser (that we will call </context>
</contexts>
<marker>Tapanainen, Jarvinen, 1997</marker>
<rawString>P. Tapanainen, and T. Jarvinen. 1997. A nonprojective dependency parser. In Proceedings of Conference on Applied Natural Language Processing, ANLP-97. Washington.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>