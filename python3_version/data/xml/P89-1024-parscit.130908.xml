<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.922680833333333">
A HYBRID APPROACH TO REPRESENTATION IN THE
JANUS NATURAL LANGUAGE PROCESSOR
Ralph M. Weischedel
BBN Systems and Technologies Corporation
10 Moulton St.
Cambridge, MA 02138
</note>
<sectionHeader confidence="0.976098" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999912">
In BBN&apos;s natural language understanding and
generation system (Janus), we have used a hybrid
approach to representation, employing an intensional
logic for the representation of the semantics of ut-
terances and a taxonomic language with formal
semantics for specification of descriptive constants
and axioms relating them. Remarkably, 99.9% of
7,000 vocabulary items in our natural language ap-
plications could be adequately axiomatized in the
taxonomic language.
</bodyText>
<sectionHeader confidence="0.998596" genericHeader="keywords">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999907431372549">
Hybrid representation systems have been ex-
plored before (9,24, 31], but until now only one has
been used in an extensive natural language process-
ing system. KL-TWO [31], based on a propositional
logic, was at the core of the mapping from formulae to
lexical items in the Penman generation system [28].
In this paper we report some of the design decisions
made in creating a hybrid of an intensional logic with a
taxonomic language for use in Janus, BBN&apos;s natural
language system, consisting of the IRUS-II under-
standing components [5] and the Spokesman genera-
tion components. To our knowledge, this is the first
hybrid approach using an intensional logic, and the
first time a hybrid representation system has been
used for understanding.
In Janus, the meaning of an utterance is
represented as an expression in WML (World Model
Language) [15], which is an intensional logic.
However, a logic merely prescribes the framework of
semantics and of ontology. The descriptive
constants, that is the individual constants (functions
with no arguments), the other function symbols, and
the predicate symbols, are abstractions without any
detailed commitment to ontology. (We will abbreviate
descriptive constants throughout the remainder of this
paper as constants.)
Axioms stating the relationships between the con-
stants are defined in NIKL [8, 22]. We wished to ex-
plore whether a language with limited expressive
power but fast reasoning procedures is adequate for
core problems in natural language processing. The
NIKL axioms constrain the set of possible models for
the logic in a given domain.
Though we have found clear examples that argue
for more expressive power than NIKL provides, 99.9%
of the examples in our expert system and data base
applications have fit well within the constraints of
NIKL. Based on our experience and that of others,
the axioms and limited inference algorithms can be
used for classes of anaphora resolution, interpretation
of highly polysemous or vague words such as have
and with, finding omitted relations in novel nominal
compounds, and selecting modifier attachment based
on selection restrictions.
Sections 2 and 3 describe the rationale for our
choices in creating this hybrid. Section 4 illustrates
how the hybrid is used in Janus. Section 5 briefly
summarizes some experience with domain-
independent abstractions for organizing constants of
the domain. Section 6 identifies related hybrids, and
Section 7 summarizes our conclusions.
</bodyText>
<sectionHeader confidence="0.996821" genericHeader="introduction">
2. Commitments to Component
Representation Formalisms
</sectionHeader>
<bodyText confidence="0.999733923076923">
We those well-documented representation lan-
guages in order to focus on formally specifying
domains and using that specification in language
processing rather than on defining new domain-
independent representation languages.
A critical decision was our selection of intensional
logic as the semantic representation language. (Our
motivations for that choice are covered in Section
2.1.) Given an intensional logic, the fundamental
question was how to support inference for semantic
and discourse processing. The novel aspect of the
design was selecting a taxonomic language and as-
sociated inference techniques for that purpose.
</bodyText>
<subsectionHeader confidence="0.989048">
2.1. Why an Intensional Logic
</subsectionHeader>
<bodyText confidence="0.965761142857143">
First and foremost, though we had found first-
order representations adequate (and desirable) for NL
interfaces to relational data bases, we felt a richer
semantic representation was important for future ap-
plications. The following classes of representation
challenges motivated our choice.
• Explicit representations of time and world.
Object-oriented simulation systems were an ap-
plication that involved these, as were expert
systems supporting hypothetical worlds. The
underlying application systems involved a tree
of possible worlds. Typical questions about
these included What if the stop time were 20
hours? to set up a possible world and run a
</bodyText>
<page confidence="0.998547">
193
</page>
<bodyText confidence="0.995771545454545">
simulation, and In which situations is blue attri-
tion greater than 50%? where the whole tree of
worlds is to be examined. The potential of time-
varying entities existed in some of the applica-
tions as well, whether attribute values (as in
How often has USS Enterprise been C3?) or
entities (When was CV22 decommissioned?)
The time and world indices of WML provided
the opportunity to address such semantic
phenomena (though a modal temporal logic or
other logics might serve this prupose).
</bodyText>
<listItem confidence="0.933438875">
• Distributive/collective quantification. Collective
readings could arise, though they appear rare,
e.g., Do USS Frederick&apos;s capabilities include
anti-submarine warfare or When did the ships
collide? See [25] for a computational treatment
of distributive/collective readings in WML.
• Generics and Mass Terms. Mass terms and
generally true statements arise in these applica-
</listItem>
<bodyText confidence="0.9459566">
tions, such as in Do nuclear carriers carry JP51,
where JP5 is a kind of jet fuel. Term-forming
operators and operators on predicates are one
approach and can be accommodated in inten-
sional logics.
</bodyText>
<listItem confidence="0.966673">
• Propositional Attitudes. Statements of user
</listItem>
<bodyText confidence="0.863682428571429">
preference, e.g., / want to leave in the
afternoon, should be accommodated in inter-
faces to expert systems, as should statements
of belief, / believe I must fly with a U.S. carrier.
Since intensional logics allow operators on
predicates and on propositions, such state-
ments may be conveniently represented.
Our second motivation for choosing intensional
logic was our desire to capitalize on other advantages
we perceived for applying it to natural language
processing (NLP), such as the potential simplicity and
compositionality of mapping from syntactic form to
semantic representation and the many studies in lin-
guistic semantics that assume some form of inten-
sional logic.
However, the disadvantages of intensional logic
for NIP include:
• The complexity of logical expressions is great
even for relatively straightforward utterances
using Montague grammar [21]. However, by
adopting intensional logic while rejecting Mon-
tague grammar, we have made some inroads
toward matching the complexity of the proposi-
tion to the complexity of the utterance; that
simplicity is at the expense of using a more
powerful semantic interpreter and of sacrificing
compositionality in those cases where language
itself appears non-compositional.
</bodyText>
<listItem confidence="0.52855325">
• Real-time inference strategies are a challenge
for so rich a logic. However, our hypothesis is
that large classes of the linguistic examples re-
quiring common sense reasoning can be
</listItem>
<bodyText confidence="0.994026727272727">
handled using limited inference algorithms on a
taxonomic language. Arguments supporting
this hypothesis appear in [2, 13] for interpreting
nominal compounds; in [6, 7, 291, for common
sense reasoning about modifier attachment;
and in [32] for phenomena in definite reference
resolution.
This second disadvantage, the goal of tractable,
real-time inference strategies, is the basis for adding
taxonomic reasoning to WML, giving a hybrid
representation.
</bodyText>
<subsectionHeader confidence="0.997787">
2.2. Why a Taxonomic Language
</subsectionHeader>
<bodyText confidence="0.998306111111111">
Our hypothesis is that much of the reasoning
needed in semantic processing can be supported by a
taxonomy. The ability to pre-compile pre-specified
inferential chains, to index them via concept name
and role name, and to employ taxonomic inheritance
for organizing knowledge were critical in selecting
taxonomic representation to supplement WML.
The well-defined semantics of NIKL was the basis
for choosing it over other taxonomic systems. A fur-
ther benefit in choosing NIKL is the availability of
KREME [1], which can be used as a sophisticated
browsing, editing, and maintenance environment for
taxonomies such as those written in NIKL; KREME
has proven effective in a number of BBN expert sys-
tem efforts other than NLP and having a taxonomic
knowledge base.
In choosing NIKL to axiomatize the constants, one
could use its built-in, incomplete inference algorithm,
the classifier [27]. In Janus, the classifier is used only
for consistency checking when modifying or loading
the taxonomic network; any concepts or roles iden-
tified by the classifier as identical are candidates for
further axiomatization. Our semantic procedures do
not need even as sophisticated an algorithm as the
NIKL classifier; pre-compiled, pre-defined inference
chains in the network are simpler, faster, and have
proven adequate for NLP in our applications.
</bodyText>
<subsectionHeader confidence="0.879212">
2.3. Two Critical Choices in the Hybrid
2.3.1. Representing Predicates of Arbitrary Arity
</subsectionHeader>
<bodyText confidence="0.998685">
Choosing a taxonomic language, at least in cur-
rent implementations, means that one is restricted to
unary and binary predicates. However, this not a
limitation in expressive power. One can represent a
predicate P of n arguments via a unary predicate P&apos;
and n binary predicates, which is what we have done.
</bodyText>
<equation confidence="0.944117">
(P r1, m) will be true if the following expression is.
(3 b) (A (P&apos; b) (R1 b rl) (R2 b r2) (Rn b rn))
</equation>
<bodyText confidence="0.9976975">
Davidson [5] has argued for such a representation of
processes on semantic grounds, since many event
descriptors appear with a variable number of ar-
guments.
</bodyText>
<page confidence="0.997253">
194
</page>
<bodyText confidence="0.954714111111111">
2.3.2. Time and World Indices
Any concept name or role name in the network is
a constant in the logical language. We use concepts
only to represent sets of entities indexed by time and
world. Roles are used only to represent sets of pairs
of entities, i.e., binary relations. Given time and world
indices potentially on each constant in WML, we must
first state the role those indices play in the NIKL por-
tion of the hybrid.
</bodyText>
<figureCaption confidence="0.996156">
Figure 1: Two Typical Facts Stated in NIKL
</figureCaption>
<bodyText confidence="0.99938875">
In a first-order extensional logic, the normal
semantics of SUPERC and of roles in NIKL are well
defined [26]. For instance, the diagram in figure 1
would mean
</bodyText>
<equation confidence="0.9596945">
(V x)((B x) (A x))
(V x)((B x) (3y)(A(C y) (it x
</equation>
<bodyText confidence="0.9998153">
Due to a suggestion by David Stallard, we have
chosen to interpret SUPERC and the role link
similarly, but interpreted under modal necessity, i.e.,
as propositions true at all times in all worlds. Thus in
the diagram in Figure 1, (A z), (B z), (C z), and (R x y)
are intensions, i.e., functions with arguments of time
and world [t, w] to extensions. Rewriting the axioms
above by quantifying over all times and worlds, the
axioms for the diagram in Figure 1 in the hybrid
representation are
</bodyText>
<equation confidence="0.731341">
(V x)(V r)(V w)((B x)[r,w] (A x)[r,w])
(V x)(V t)(V w)((B x)[t,w]
(3 y)(A (C y)[t,w] (R x
</equation>
<bodyText confidence="0.996993272727273">
Though this handles the overwhelming majority of
constants we need to axiomatize, it does not allow for
representing constants taking intensional arguments
because the axioms above allow for quantification
over extensions only.1The semantics of predicates
which should have intensions as arguments are unfor-
tunately specified separately. Examples that have
arisen in our applications involve changes in a reading
on a scale, e.g., USS Stark&apos;s readiness downgraded
from Cl to C4.2 We would like to treat that sentence
as:
</bodyText>
<figure confidence="0.49229325">
(A (DOWNGRADE a)
(SCALE a (INTENSION Stark—readiness))
(PREVIOUS a Cl)
(NEW a C4)).
</figure>
<bodyText confidence="0.99910125">
That is, for the example we would like to treat the
scale as intensional, but have no way to do so in
NIKL. Therefore, we had to annotate the definition of
downgrade outside of the formal semantics of NIKL.
Only 0.1% of the 7,000 (root) word vocabulary in our
applications could not be handled with NIKL. (The
additional problematic vocabulary were upgrade,
project, report, change, and expect.)
</bodyText>
<sectionHeader confidence="0.96546" genericHeader="method">
3. Example Representational Decisions
</sectionHeader>
<bodyText confidence="0.96226056097561">
Here we mention some of the issues we focussed
on in developing Janus. The specification of WML
appears in [15]; specifications for NIKL appear in
[22, 26].
Few constants. One decision was to use as few
constants as possible, deriving as many entities as
possible using operators in the intensional logic. In
this section we illustrate this point by showing how
definitely referenced sets, information about kinds, in-
definitely identified sets, and generic information can
be stated by derivation from a single constant whose
extension is the set of all individuals of a particular
class.
Some of the expressive power of the hybrid is
illustrated below as it pertains to minimizing the con-
stants needed From the constants BLACK-ENTITIES,
GRAY-ENTITIES, CATS and MICE, the operators
THE, POWER, KIND, and SAMPLE are used to
derive the entities corresponding to definite sets,
generic classes, and indefinite sets. In a semantic
network without the hybrid, one might choose (or
need) to represent each of our derived entities by a
node in the network. Our use of the operator THE,
and the operator POWER for definite plurals follows
Scha [25]. The operators KIND and SAMPLE follow
Carlson&apos;s analysis [10] of the semantics of bare
plurals.
THE, as an operator, takes three arguments: a
variable, a sort (unary predicate), and a proposition.
Its denotation is the unique salient object in context
such that it is in the sort and such that if the variable is
bound to it, the proposition is true. POWER takes a
sort as argument and produces the predicate cor-
responding to the power set of the set denoted by the
sort. These operators are useful for representing
definite plurals; the black cats would be represented
as (THE x (POWER CATS) (BLACK-ENTITIES x)).
&apos;It is possible that one could extend NIKL semantics to allow for
intensional arguments, but this has not been done.
2An analogy in more common terminology would be His tempera-
ture dropped from 104 degrees to 99 degrees.
</bodyText>
<page confidence="0.996408">
195
</page>
<bodyText confidence="0.999932296296296">
SAMPLE takes the same arguments as THE, but
indicates some set of entities satisfying the sort and
proposition, not necessarily the largest set. KIND
takes a sort as argument, and produces an individual
representing the sort; its only use is for bare plurals
that are surface subjects of a generic statement. If we
are predicating something of a bare plural, KIND is
used; for instance, cats as in cats are ferocious is
represented as (KIND CATS). An indefinite set aris-
ing as a bare plural in a VP is represented using
SAMPLE; for instance, gray mice as in Cats eat gray
mice is represented as (SAMPLE x MICE (GRAY-
ENTITIES x)).
The examples above demonstrate that an inten-
sional logic enables derivation of many entities from
fewer constants than would be needed in NIKL or
other frame-based systems. The next example il-
lustrates how the intensional logic lets us express
some propositions that can be stated in many seman-
tic network systems, but not in NIKL.
Generic assertions. Generic statements such as
Cats eat mice are often encoded in a semantic net-
work or frame system. This is not possible in the
semantics of NIKL, but is possible in the hybrid. The
structure in Figure 2 would not give the desired
generic meaning, but rather would mean (ignoring
time and world) that
</bodyText>
<equation confidence="0.9346536">
(V x) ((CATS x) (3 y)(A (MICE y)(EAT x y))),
i.e., every cat eats some mouse.
EAT
CCATS)
(1, 00 )
</equation>
<figureCaption confidence="0.997892">
Figure 2: Illustration Distinguishing NIKL Networks
from other Semantic Nets
</figureCaption>
<bodyText confidence="0.99994375">
Again, following Carlson&apos;s linguistic analysis [10], in
the hybrid we would have a generic statement about
the kind corresponding to cats, that these eat in-
definitely specified sets of mice. GENERIC is an
operator which produces a predicate on kinds, intui-
tively meaning that the resulting predicate is typically
true of individuals of the kind that is its argument. Our
formal representation (ignoring tense for simplicity) is
</bodyText>
<equation confidence="0.3899495">
(GENERIC (LAMBDA (x)
(EAT x (SAMPLE y MICE)))) (KIND CATS).
</equation>
<bodyText confidence="0.9998625">
Next we illustrate a potential powerful feature of
the hybrid which we have chosen not to exploit.
Derivable definitions. The hybrid gives a powerful
means of defining lexical items. To define pilot, one
wants a predicate defining the set of people that typi-
cally are the actors in a flight, i.e.,
</bodyText>
<equation confidence="0.9933618">
(LAMBDA (x&apos;)
( A (PERSON x&apos;)
(GENERIC (LAMBDA (x)
(3 y)(A (FLYING—EVENT y)
(ACTOR y x)))) x&apos;)})
</equation>
<bodyText confidence="0.999907222222222">
Though the hybrid gives us the representational
capacity to make such definitions, we have chosen as
part of our design not to use it. For to use it, would
mean stepping outside of NIKL to specify constants,
and therefore, that the reasoning algorithms based on
taxonomic semantics would not be the simple, ef-
ficient strategies, but rather might require arbitrarily
complex theorem proving for expressions in inten-
sional logic.3
</bodyText>
<sectionHeader confidence="0.394875" genericHeader="method">
4. Use of the Taxonomy in Janus
</sectionHeader>
<bodyText confidence="0.999911733333333">
By domain model we mean the set of axioms en-
coded in NIKL regarding the constants. The domain
model serves several purposes in Janus. Of course,
in defining the constants of our semantic represen-
tation language, it provides the constants that can ap-
pear in formulae that lexical items map to. For in-
stance, vessel and ship map to VESSEL. In the ex-
ample above regarding pilot, the constants were PER-
SON, FLYING-EVENT, and ACTOR; in the formula
above stating that cats eat mice, the constants were
EAT, MICE, and CATS.
In this section, we divide the discussion in three
parts: current uses of the domain model in Janus; a
plausible, but rejected use; and proposals for its use,
but not yet implemented.
</bodyText>
<subsectionHeader confidence="0.977004">
4.1. Current Uses
</subsectionHeader>
<subsubsectionHeader confidence="0.524089">
4.1.1. Selection Restrictions
</subsubsectionHeader>
<bodyText confidence="0.997048">
The domain model provides the semantic classes
(or sorts of a sorted logic) that form the primitives for
selection restrictions. Its use for this purpose is nei-
ther novel nor surprising, merely illustrative. In the
case of deploy, a MILITARY-UNIT can be the logical
subject, and the object of a phrase marked by to must
be a LOCATION. Almost all selection restrictions are
based on the semantic class of the entities described
by a noun phrase. That is, almost all may be checked
by using taxonomic knowledge regarding constants.
A table of semantic classes for the operators dis-
cussed earlier is provided in Figure 3. Though the
logical form for the carriers, all carriers, some carriers,
a carrier, and carriers (both in the KIND and SAMPLE
case) varies, the selection restriction must check the
</bodyText>
<footnote confidence="0.8801874">
3USC/ISI (191 has proposed a first-order formula defining the set of
items that have ever been the actor in a flight. Their definition is
solely within NIKL using the QUA link (14], which is exactly the set of
fillers of a slot. While having ever flown could be a sense of pilot, it
seems less useful than the sense of normally flying a plane.
</footnote>
<page confidence="0.996942">
196
</page>
<bodyText confidence="0.99879894117647">
NIKL network for consistency between the constant
CARRIERS and the constraint of the selection restric-
tion. To see this, consider the case of command (in
the sense of a military command) which requires that
its direct object in active clauses be a MILITARY-
UNIT and that its surface subject in passive clauses
be a MILITARY-UNIT, i.e., its logical object must be a
MILITARY-UNIT. Suppose USS Enterprise, carrier,
and aircraft carrier all have semantic class CARRIER.
Since an ancestor of CARRIER in the taxonomy is
MILITARY-UNIT, each of those phrases satisfy the
aforementioned selection restriction on the verb
command. Phrases whose class does not have
MILITARY-UNIT as an ancestor or as a descendents
will not satisfy the selection restriction. That is,
definite evidence of consistency with the selection
restriction is normally required.
</bodyText>
<sectionHeader confidence="0.65334" genericHeader="method">
Expression Semantic Class
</sectionHeader>
<figure confidence="0.9688656">
(THE x P (R x))
(POWER P)
(KIND P)
(SAMPLE x P (R x))
(LAMBDA x P (R x))
</figure>
<figureCaption confidence="0.999085">
Figure 3: Relating Expressions to Classes5
</figureCaption>
<bodyText confidence="0.854270137931035">
There are three cases where more must be done.
For pronouns, Janus saves selection restrictions that
would apply to the pronoun&apos;s referent, later applying
those constraints to eliminate candidate referents.
Metonymy is an exception, discussed in Section 4.3.2.
There are cases of selection restrictions requiring in-
formation additional to the semantic class, but these
are checked against the type of the logical
expressions for a noun phrase, rather than its seman-
tic class only. Collide requires a set of agents. The
type of a plural, for instance, is (SET P), where P is its
semantic class. The selection restriction on collide
could be represented as (SET PHYSICAL-OBJECT).
4.1.2. Highly Polysemous Words
Have, with, and of, are highly polysemous. Some
of their senses are very specific, frozen, and predict-
able, e.g., to have a cold; these senses may be
itemized in the lexicon. However, other senses are
vague, if considered in a domain-independent way;
nevertheless, they must be resolved to precise mean-
ings if accessing a data base, expert system, etc.
USS Frederick has a speed of 30 knots has this
flavor, for the general sense is associating an attribute
with an entity.
°We check whether the constraint is a descendent of the class of
the noun phrase to determine whether consistency is possible. For
instance, if decomission requires a VESSEL as the object of the
decommisioning, those units and they satisfy the selection constraint
°The rules may need to be used recursively to get to a constant
°Every expression in WML has a type.
To handle such cases, we look for a relation R in
the domain model which could be the domain:
dependent interpretation. If A has B, the B of A, or A
with B are input, the semantic interpreter looks for a
role R from the class associated with A to the class
associated with B. If no such role exists, the search is
for a role relating the nearest ancestor of the class of
A to any ancestor of the class of B. The implicit as-
sumption is that items structured closely together in
the domain model can be related with such vague
words, and that items that can be related via such
vague words will naturally have been organized
closely together in the domain model.
While describing the procedure as a search, in
fact, an explicit run-time search may not be neces-
sary. All SUPERCs (ancestors) of a concept are com-
piled and stored when the taxonomy is loaded. All
roles from one concept to another are also pre-
compiled and stored, maintaining the distinction be-
tween roles that are explicit locally versus those that
are compiled. Furthermore, the ancestors and role
relations are indexed. One need only walk up the
chain of ancestors if no locally defined role relates the
two concepts, but some inherited (not locally defined)
role does; then one walks up the ancestor chain(s)
only to find the closest applicable role. Thus, in many
cases, &amp;quot;semantic reasoning&amp;quot; is reduced to efficient
table lookup.
</bodyText>
<subsubsectionHeader confidence="0.269826">
4.1.3. Relation to Underlying System
</subsubsectionHeader>
<bodyText confidence="0.999803818181818">
Adopting WML offers the potential of simplifying
the mapping from surface form to semantic represen-
tation, although it does increase the complexity of
mapping from WML to executable code, such as SOL
or expert system function calls. The mapping from
intensional logic to executable code is beyond the
scope of this paper; our first implementation was
reported in [30]; the current implementation will be
described elsewhere.
This process makes use of a model of underlying
system capabilities in which each element relates a
set of domain model constants to a method for ac-
cessing the related information in the database, ex-
pert system, simulation program, etc. For example,
the constant HARPOON-CAPABLE, which defines a
set of vessels equipped with harpoon missiles, is as-
sociated with an underlying system model element
which states how to select the subset of exactly those
vessels. In a Navy relational data base that we have
dealt with, the relevant code selects just those records
of a table of unit characteristics with a &amp;quot;Y&amp;quot; in the
HARP field.
</bodyText>
<subsubsectionHeader confidence="0.524959">
4.1.4. Knowledge Acquisition
</subsubsectionHeader>
<bodyText confidence="0.999971">
We have developed two complementary tools to
greatly increase our productivity in porting BBN&apos;s
Janus NL understanding and generation system to
new domains. IRACO (3] supports learning lexical
semantics from examples with only one unknown
</bodyText>
<page confidence="0.992119">
197
</page>
<bodyText confidence="0.999501666666667">
word. IRACQ is used for acquiring the diverse, com-
plex patterns of syntax and semantics arising from
verbs, by providing examples of the verb&apos;s usage,
Since IRACQ assumes that a large vocabulary is
available for use in the training examples; a way to
rapidly infer the knowledge bases for the overwhelm-
ing majority of words is an invaluable complement.
KNACQ [33] serves that purpose. The domain
model is used to organize, guide, and assist in acquir-
ing the syntax and semantics of domain-specific
vocabulary. Using the browsing facilities, graphical
views, and consistency checker of KREME [1] on
NIKL taxonomies, one may select any concept or role
for knowledge acquisition. KNACQ presents the user
with a few questions and menus to elicit the English
expressions used to refer to that concept or role.
To illustrate the kinds of information that must be
acquired consider the examples in Figure 4.
</bodyText>
<figure confidence="0.690284">
The vessel speed of Vinson
The vessels with speed above 20 knots
The vessel&apos;s speed is 5 knots
Vinson has speed less than 20 knots
Its speed
Which vessels have a CROVL of C3?
Which vessels are deployed C3?
</figure>
<figureCaption confidence="0.998389">
Figure 4: Examples for Knowledge Acquisition
</figureCaption>
<bodyText confidence="0.999966244444445">
To handle these one would have to acquire infor-
mation on lexical syntax, lexical semantics, and map-
ping to expert system structure for all words not in the
domain-independent dictionary. For purposes of this
exposition, assume that the words, vessel, speed,
Vinson, CROVL, C3, and deploy are to be defined. A
vessel has a speed of 20 knots or a vessel&apos;s speed is
20 knots would be understood from domain-
independent semantic rules regarding have and be,
once lexical information for vessel and speed is ac-
quired. In acquiring the definitions of vessel and
speed, the system should infer interpretations for
phrases such as the speed of a vessel, the vessel&apos;s
speed, and the vessel speed.
Given the current implementation, the required
knowledge for the words vessel, speed, and CROVL
is most efficiently acquired using KNACQ; names of
instances of classes, such as Vinson and C3 are
automatically inferred from instances; and knowledge
about deploy and its derivatives would be acquired via
IRACO.
To illustrate this acquistion centered around the
domain model, consider acquistion centered around
roles. Attributes are binary relations on classes that
can be phrased as the &lt;relation&gt; of a &lt;class&gt;. For
instance, suppose CURRENT-SPEED is a binary
relation relating vessels to SPEED, a subclass of
ONE-D-MEASUREMENT. An attribute treatment is
the most appropriate, for the speed of a vessel makes
perfect sense. KNACQ asks the user for one or more
English phrases associated with this functional role;
the user response in this case is speed. That answer
is sufficient to enable the system to understand the
kernel noun-phrases listed in Figure 5. Since ONE-D-
MEASUREMENT is the range of the relation, the
software knows that statistical operations such as
average and maximum apply to speed. The lexical
information inferred is used compositionally with the
syntactic rules, domain independent semantic rules,
and other lexical semantic rules. Therefore, the
generative capacity of the lexical semantic and syn-
tactic information is linguistically very great, as one
would require. A small subset of the examples il-
lustrating this without introducing new domain specific
lexical items appears in Figure 5.
</bodyText>
<sectionHeader confidence="0.959171" genericHeader="method">
KERNEL NOUN PHRASES
</sectionHeader>
<bodyText confidence="0.65562">
the speed of a vessel
the vessel&apos;s speed
the vessel speed
</bodyText>
<sectionHeader confidence="0.718831" genericHeader="method">
RESULTS from COMPOSITIONALITY
</sectionHeader>
<figure confidence="0.96217075">
The vessel speed of Vinson
Vinson has speed 1
The vessels with a speed of 20 knots
The vessel&apos;s speed is 5 knots
Vinson has speed less than 20 knots
Their greatest speed
Its speed
Which vessels have speed above 20 knots
Which vessels have speeds
Eisenhower has Vinson&apos;s speed
Carriers with speed 20 knots
Their average speeds
</figure>
<figureCaption confidence="0.999967">
Figure 5: Attribute Examples
</figureCaption>
<bodyText confidence="0.987268">
Some lexicalizations of roles do not fall within the
attribute category. For these, a more general class of
regularities is captured by the notion of caseframe
rules. Suppose we have a role UNIT-OF, relating
CASREP and MILITARY-UNIT. KNACQ asks the
user which subset of the following six patterns in
Figure 6 are appropriate plus the prepositions that are
appropriate.
</bodyText>
<listItem confidence="0.977378833333333">
1. &lt;CASREP&gt; is &lt;PREP&gt; &lt;MILITARY-UNIT&gt;
2. &lt;CASREP&gt; &lt;PREP&gt; &lt;MILITARY-UNIT&gt;
3. &lt;MILITARY-UNIT&gt; &lt;CASREP&gt;
4. &lt;MILITARY-UNIT&gt; is &lt;PREP&gt; &lt;CASREP&gt;
5. &lt;MILITARY-UNIT&gt; &lt;PREP&gt; &lt;CASREP&gt;
6. &lt;CASREP&gt; &lt;MILITARY-UNIT&gt;
</listItem>
<figureCaption confidence="0.971351">
Figure 6: Patterns for the Caseframe Rules
</figureCaption>
<bodyText confidence="0.964202">
For this example, the user would select patterns (1),
</bodyText>
<page confidence="0.997081">
198
</page>
<bodyText confidence="0.9838551">
(2), and (3) and select for, on. and of as prepositions.7
The information acquired through KNACO is used
both by the understanding components and by BBN&apos;s
Spokesman generation components for paraphrasing,
for providing clarification responses, and for answers
in English. Mapping from the WML structures to lex-
ical items is accomplished using rules acquired with
KNACO, as well as handcrafted mapping rules for
lexical items not directly associated with concepts or
roles.
</bodyText>
<subsectionHeader confidence="0.99273">
4.2. Where an Alternative Mechanism was
Selected
</subsectionHeader>
<bodyText confidence="0.999856428571429">
Though the domain model is central to the seman-
tic processing of Janus, we have not used it in all
possible ways, but only where there seems to be clear
benefit.
In telegraphic language, omitted prepositions, as
in List the creation date file B, may arise. Alter-
natively, if the NLP system is part of a speech under-
standing system, prepositions are among the most
difficult words to recognize reliably. Omitted preposi-
tions could be treated with the same heuristic as im-
plemented for interpreting the meaning of have, with,
and of. However, we have chosen a different in-
ference technique for omitted prepositions.
Though one could represent selection restrictions
directly in a taxonomy (as reported in [7, 29]), selec-
tion restrictions in Janus are stored separately, in-
dexed by the semantic class of the head word. We
believe it more likely that Janus will have the selec-
tonal pattern involving the omitted preposition, than
that the omitted preposition corresponds to a usage
unknown to Janus and inferable from the domain
model relations. Consequently, Janus applies the
selection restrictions corresponding to all senses of
the known head, to find what senses are consistent
with the proposed phrase and with what prepositions.
In practice, this gives rise to far fewer possibilities
than considering all relations possible whether or not
they can be expressed with a preposition.
</bodyText>
<subsectionHeader confidence="0.999336">
4.3. Proposals not yet Implemented (Possible
Future Directions)
</subsectionHeader>
<bodyText confidence="0.88439995">
In this section, we speculate regarding some pos-
sible future work based on further exploiting the
domain model and hybrid representation system
described in this paper.
7Normally, if pattern (1) is valid, pattern (2) will be as well and vice
versa. Similarly, if pattern (4) is valid, pattern (5) will normally be
also. As a result, the menu items are coupled by default (selecting
(1) automatically selects (2) and vice versa), but this default may be
simply overridden by selecting either and then deselecting the other.
The most frequent examples where one does not have the coupling
of those patterns is the preposition of.
4.3.1. An Approach to Bridging
It has long been observed [11] that mention of one
class of entities in a communication can bring into the
foreground other classes of entities which can be
referred to though not explicitly introduced. The
process of inferring the referent when such a refer-
ence occurs has been called bridging [12]. Some ex-
amples, taken from [12], appear below, where the ref-
erence requiring bridging is underlined.
</bodyText>
<figure confidence="0.8437715">
1. I looked into the room. The ceiling was very
high.
2. I walked into the room. The chandeliers
sparkled brightly.
3. I went shopping yesterday. The time I started
was 3 PM.
</figure>
<bodyText confidence="0.96164015">
We believe a taxonomic domain model provides
the basis for an efficient algorithm for a broad class of
examples of bridging, though we do not believe that it
will cover all cases. If A is the class of a discourse
entity arising from previous utterances, then any entity
of class B, such that the NIKL domain model has a
role from A to B (or from B to A) can be referred to by
a definite NP. This has not yet been integrated into
the Janus model of reference processing [4].
4.3.2. Metonymy
Unstated relations in a communication must be
inferred for full understanding of nominal compounds
and metonymy. Those that can be anticipated can be
built into the lexicon; the challenge is to deal with
those that are novel to Janus. Finding the omitted
relation in novel nominal compounds using a
taxonomy has been explored and reported elsewhere
[13].
We propose treating many novel cases of
metonymy in the following way:
</bodyText>
<listItem confidence="0.984369375">
1. Where patterns of metonymy can be identified,,
such as using a description of a part to refer to
the whole (and other patterns identified in
[17]), pre-compile chains of relations between
classes in the domain model, e.g., (PART-OF
A B) where A and B are concepts.
2. In processing an input, when a selection
restriction on an NP fails, record the failed
restriction with the partial interpretation for
possible future processing, after all attempts at
a literal interpretation of the input have failed.
3. If no literal interpretation of the input can be
found, look among the precompiled relations
of step 1 above for any class that could be so
related to the class of the NP that appears.
4. If a relation is applicable, attempt to resume
</listItem>
<bodyText confidence="0.522881333333333">
interpretation assuming the referent of the NP
is in the related class.
This has not been implemented, but offers an efficient
</bodyText>
<page confidence="0.997125">
199
</page>
<bodyText confidence="0.8246855">
alternative to the abductive theorem-proving approach
described in [16].
</bodyText>
<sectionHeader confidence="0.809536" genericHeader="method">
5. Top-Level Abstractions in the NIKL
Taxonomy
</sectionHeader>
<bodyText confidence="0.999657083333333">
WML and NIKL together provide a framework for
representation. The highest concepts and relations in
the NIKL network provide a representational style in
which more concrete constants. must fit. The first
abstraction structure used in Janus was the USC/ISI
&amp;quot;upper structure&amp;quot; [19]. Because it seemed tied to sys-
temic linguistics in critical ways, rather than to a more
general ontological style, we have replaced it with
another domain-independent set of concepts and
roles. For any application domain, all domain-
dependent constants must fit underneath the domain-
independent structure. The domain-independent
taxonomy consists of 70 concepts and 24 roles cur-
rently, but certainly could be further expanded as one
attempts to further axiomatize and model notions use-
ful in a broad class of application domains.
During the evolution of Janus, we explored
whether the domain-independent taxonomy could be
greatly expanded by a broad set of primitives used in
the Longman Dictionary of Contemporary English
[18] (LDOCE) to define domain-independent con-
stants. LDOCE defines approximately 56,000 words
in terms of a base vocabulary of roughly 2,000 items.8
We estimate that about 20,000 concepts and roles
should be defined corresponding to the 2,000 multi-
way ambiguous words in the base vocabulary. The
appeal, of course, is that if these basic notions were
sufficient to define 56,000 words, they are generally
applicable, providing a candidate for general-purpose
primitives.
The course of action we followed was to build a
taxonomy for all of the definitions of approximately
200 items from the base vocabulary using the defini-
dons of those vocabulary items themselves in the
dictionary. In this attempt, we encountered the follow-
ing difficulties:
</bodyText>
<listItem confidence="0.860066727272727">
• Definitions of the base vocabulary often in-
volved circularity.
• Definitions included assertional information
and/or knowledge appropriate in defeasible
reasoning, which are not fully supported by
NIKL. For example, the first definition of cat is
&amp;quot;a small four-legged animal with soft fur and
sharp claws, often kept as a pet or for catching
mice or rats.&amp;quot;
• Multiple views and/or vague definitions and
usage arose in LDOCE. For instance, the
</listItem>
<bodyText confidence="0.9990803125">
&apos;Though the authors of LOOCE definitions try to stay within the
base vocabulary, exceptions do arise such as diagrams and proper
nouns, e.g., Catholic Church.
second definition of cat (p. 150) is &amp;quot;an animal
related to this such as the lion or tiger&amp;quot; (italics
added). Such a vague definition helped us little
in axiomatizing the notion.
Thus, we decided that hand-crafted abstractions
would be needed to axiomatize by hand the LDOCE
base vocabulary if general-purpose primitives were to
result. On the other hand, concrete concepts cor-
responding to a lower level of abstraction seem ob-
tainable from LDOCE. In particular the LDOCE defini-
tions of units of measurement for the avoirdupois and
metric systems were very useful. A more detailed
analysis of our experience is presented in [23].
</bodyText>
<sectionHeader confidence="0.999953" genericHeader="related work">
6. Related Work
</sectionHeader>
<bodyText confidence="0.985505590909091">
Several hybrid representation schemes have been
created, although only ours seems to have explored a
hybrid of intensional logic with an axiomatizable frame
system. The most directly related efforts are the fol-
lowing:
• KL-TWO [31], which marries a frame system
(NIKL) with propositional logic (RUP [20]).
Limited inference in propositional logic is the
goal of KL-TWO. Limited aspects of universal
quantification are achieved via allowing demons
in the inference process. KL-TWO and its clas-
sification algorithm [27] are at the heart of the
lexicalization process of the text generator Pen-
man [28].
• KRYPTON [9], which marries a frame system
with first-order logic. The frame system is
designed to be less expressive than NIKL to
allow rapid checking for disjointness of two
class concepts in order to support efficient
resolution theorem proving. KRYPTON has not
as yet been used in any natural language
processor.
</bodyText>
<sectionHeader confidence="0.992755" genericHeader="conclusions">
7. Conclusions
</sectionHeader>
<bodyText confidence="0.824298111111111">
Our conclusions regarding the hybrid represen-
tation approach of intensional logic plus NIKL-based
axioms to define constants are based on three kinds
of efforts:
• Bringing Janus up on two large expert system
and data base applications within DARPA&apos;s
Battle Management Programs. The combined
lexicon in the effort is approximately 7,000
words (not counting morphological variations).
</bodyText>
<listItem confidence="0.682629166666667">
• The efforts synopsized in Section 5 towards
general purpose domain notions.
• Experience in developing IRACQ and KNACO,
acquisition tools integrated with the domain
model acquisition and maintenance facility
KREME.
</listItem>
<page confidence="0.984576">
200
</page>
<bodyText confidence="0.999787625">
First, a taxonomic language with a formal seman-
tics can supplement a higher order logic in support of
efficient, limited inferences needed in a natural lan-
guage processor. Based on our experience and that
of others, the axioms and limited inference algorithms
can be used for classes of anaphora resolution, inter-
pretation of have, with, and of, finding omitted rela-
tions in novel nominal compounds, applying selection
restrictions, and mapping from the semantic represen-
tation of the input to code to carry out the user&apos;s re-
quest.
Second, an intensional logic can supplement a
taxonomic language in trying to define word senses
formally. Our effort with LDOCE definitions showed
how little support is provided for defining word senses
in a taxonomic language. A positive contribution of
intensional logic is the ability to distinguish universal
statements from generic ones from existential ones;
definite sets from unspecified ones; and necessary
and sufficient information from assertional information,
allowing for a representation closer to the semantics
of English.
Third, the hybridization of axioms for taxonomic
knowledge with an intensional logic does not allow us
to represent all that we would like to, but does provide
a very effective engineering approach. Out of 7,000
lexical entries (not counting morphological variations),
only 0.1% represented concepts inappropriate for the
formal semantics of NIKL.
The ability to pre-compile pre-specified, inferential
chains, to index them via concept name and role
name, and to employ taxonomic inheritance for or-
ganizing knowledge were critical in selecting
taxonomic representation to supplement WML. These
techniques of pre-compiling pre-specified inferential
chains and of indexing them should also be applicable
to other knowledge representations than taxonomies.
At a later date, we hope to quantify the effec-
tiveness of the semantic heuristics described in this
paper.
</bodyText>
<sectionHeader confidence="0.995216" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.993411">
This research was supported by the Advanced
Research Projects Agency of the Department of
Defense and was monitored by ONR under Contracts
N00014-85-C-0079 and N00014-85-C-0016. The
views and conclusions contained in this document are
those of the author and should not be interpreted as
necessarily representing the official policies, either ex-
pressed or implied, of the Defense Advanced
Research Projects Agency or the U.S. Government.
This brief report represents a total team effort.
Significant contributions were made by Damaris
Ayuso, Rusty Bobrow, Ira Haimowitz, Erhard Hinrichs,
Thomas Reinhardt, Remko Scha, David Stallard, and
Cynthia Whipple. We also wish to acknowledge many
discussions with William Mann and Norman
Sondheimer in the early phases of the project.
</bodyText>
<sectionHeader confidence="0.99589" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999966166666667">
1. Abrett, G. and Burstein, M. &amp;quot;The KREME
Knowledge Editing Environment&amp;quot;. Int.
J. Man-Machine Studies 27 (1987), 103-126.
2. Ayuso Planes, D. The Logical Interpretation of
Noun Compounds. Master Th., Massachusetts In-
stitute of Technology,June 1985.
3. Ayuso, D.M., Shaked, V., and Weischedel, R.M.
An Environment for Acquiring Semantic Information.
Proceedings of the 25th Annual Meeting of the As-
sociation for Computational Linguistics, ACL, 1987,
pp. 32-40.
4. Ayuso, Damaris. Discourse Entities in Janus.
Proceedings of the 27th Annual Meeting of the As-
sociation for Computational Linguistics, 1989.
5. BBN Systems and Technologies Corp. A Guide to
IRUS-II Application Development in the FCCBMP.
BBN Report 6859, BBN Systems and Technologies
Corp., Cambridge, MA, 1988.
6. Bobrow, R. and Webber, B. PSI-KLONE: Parsing
and Semantic Interpretation in the BBN Natural Lan-
guage Understanding System. Proceedings of the
1980 Conference of the Canadian Society for Com-
putational Studies of Intelligence, CSCSUSCEIO,
May, 1980.
7. Bobrow, R. and Webber, B. Knowledge Represen-
tation for Syntactic./Semantic Processing. Proceed-
ings of the National Conference on Artificial Intel-
ligence, AAAI, August, 1980.
8. Brachman, R.J. and Schmolze, J.G. &amp;quot;An Overview
of the KL-ONE Knowledge Representation System&amp;quot;.
Cognitive Science 9, 2 (April 1985).
9. Brachman, R.J., Gilbert, V.P., and Levesque, H.J.
An Essential Hybrid Reasoning System: Knowledge
and Symbol Level Accounts of Krypton. Proceedings
of IJCAI85, International Joint Conferences on Artifi-
cial Intelligence, Inc., Los Angeles, CA, August, 1985,
pp. 532-539.
10. Carlson, G.. Reference to Kinds in English. Gar-
land Press, New York, 1979.
11. Chafe, W. Discourse Structure and Human
Knowledge. In Language Comprehension and the
Acquisition of Knowledge, Winston and Sons,
Washington, 1972.
12. Clark, H.H. Bridging. Theoretical Issues in
Natural Language Processing, 1975, pp. 169-174.
13. Finin, T.W. The Semantic Interpretation of
Nominal Compounds. Proceedings of The First An-
nual National Conference on Artificial Intelligence,
</reference>
<page confidence="0.970702">
201
</page>
<reference confidence="0.999650242105264">
The American Association for Artificial Intelligence,
August, 1980, pp. 310-312.
14. Freeman, M. The QUA Link. Proceedings of the
1981 KL-ONE Workshop, Bolt Beranek and Newman
Inc., 1982, pp. 55-65.
15. Hinrichs, E.W., Ayuso, D.M., and Scha, R. The
Syntax and Semantics of the JANUS Semantic Inter-
pretation Language. In Research and Development in
Natural Language Understanding as Part of the
Strategic Computing Program, Annual Technical
Report December 1985 - December 1986,
BBN Laboratories, Report No. 6522, 1987, pp. 27-31.
16. Hobbs, et. al. Interpretation as Abduction.
Proceedings of the 26th Annual Meeting of the As-
sociation for Computational Linguistics, 1988, pp.
95-103.
17. Lakoff, G. and Johnson, M.. Metaphors We Live
By. The University of Chicago Press, Chicago, 1980.
18. Longman Dictionary of Contemporary English.
Essex, England, 1987.
19. Mann, W.C., Arens, Y., Matthiessen, C.,
Naberschnig, S., and Sondheimer, N.K. Janus
Abstraction Structure -- Draft 2. USC/Information
Sciences Institute, 1985.
20. David A. McAllester. Reasoning Utility Package
User&apos;s Manual. Al Memo 667, Massachusetts In-
stitute of Technology, Artificial Intelligence Laboratory,
April, 1982.
21. Montague, Richard. The Proper Treatment of
Quantification in Ordinary English. In Approaches to
Natural Language, J. Hintikka, J. Moravcsik and
P. Suppes, Eds., Reidel, Dordrecht, 1973, pp.
221-242.
22. Moser, M.G. An Overview of NIKL, the New Im-
plementation of KL-ONE. In Research in Knowledge
Representation for Natural Language Understanding -
Annual Report, 1 September 1982- 31 August 1983,
Sidner, C. L., et al., Eds., BBN Laboratories Report
No. 5421, 1983, pp. 7-26.
23. Reinhardt, T. and Whipple, C. Summary of Con-
clusions from the Longman&apos;s Taxonomy Experiment.
In Goodman, B., Ed.„ BBN Systems and Tech-
nologies Corporation, Cambridge, MA, 1988, pp..
24. Rich, C. Knowledge Representation languages
and the Predicate Calculus: How to Have Your Cake
and Eat It Too. Proceedings of the Second National
Conference on Artificial Intelligence, AAAI, August,
1982, pp. 193-196.
25. Scha, R. and Stallard, D. Multi-level Plurals and
Distributivity. 26th Annual Meeting of the Association
for Computational Linguistics, Association for Com-
putational Linguistics, June, 1988, pp. 17-24.
26. Schmolze, J. G., and Israel, D. J. KL-ONE:
Semantics and Classification. In Research in
Knowledge Representation for Natural Language Un-
derstanding - Annual Report, 1 September 1982 - 31
August 1983, Sidner, C.L., et al., Eds., BBN
Laboratories Report No. 5421, 1983, pp. 27-39.
27. Schmolze, J.G., Lipkis, T.A. Classification in the
KL-ONE Knowledge Representation System.
Proceedings of the Eighth International Joint Con-
ference on Artificial Intelligence, 1983.
28. Sondheimer, N. K. and Nebel, B. A Logical-form
and Knowledge-base Design for Natural Language
Generation. Proceedings AAAI-86 Fifth National Con-
ference on Artificial Intelligence, The American As-
sociation for Artificial Intelligence, Los Altos, CA, Aug,
1986, pp. 612-618.
29. Sondheimer, N.K., Weischedel, R.M., and
Bobrow, R.J. Semantic Interpretation Using KL-ONE.
Proceedings of COLING-84 and the 22nd Annual
Meeting of the Association for Computational Linguis-
tics, Association for Computational Linguistics, Stan-
ford, CA, July, 1984, pp. 101-107.
30. Stallard, David. Answering Questions Posed in
an Intensional Logic: A Multilevel Semantics Ap-
proach. In Research and Development in Natural
Language Understanding as Part of the Strategic
Computing Program, R. Weischedel, D.Ayuso, -
A. Haas, E. Hinrichs, R. Scha, V. Shaked, D. Stallard,
Eds., BBN Laboratories, Cambridge, Mass., 1987, ch.
4, pp. 35-47. Report No. 6522.
31. Vilain, M. The Restricted Language Architecture
of a Hybrid Representation System. Proceedings of
IJCAI85, International Joint Conferences on Artificial
Intelligence, Inc., Los Angeles, CA, August, 1985, pp.
547-551.
32. Weischedel, R.M. &amp;quot;Knowledge Representation
and Natural Language Processing&amp;quot;. Proceedings of
the IEEE 74, 7 (July 1986), 905-920.
33. Weischedel, R.M., Bobrow, R., Ayuso, D.M., and
Ramshaw, L Portability in the Janus Natural Lan-
guage Interface. Notebook of Speech and Natural
Language Workshop, 1989. To be reprinted by Mor-
gan Kaufmann Publishers.
</reference>
<page confidence="0.998329">
202
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.949961">
<title confidence="0.9893595">A HYBRID APPROACH TO REPRESENTATION IN THE JANUS NATURAL LANGUAGE PROCESSOR</title>
<author confidence="0.999997">Ralph M Weischedel</author>
<affiliation confidence="0.999093">BBN Systems and Technologies Corporation</affiliation>
<address confidence="0.9926285">10 Moulton St. Cambridge, MA 02138</address>
<abstract confidence="0.998646">In BBN&apos;s natural language understanding and generation system (Janus), we have used a hybrid approach to representation, employing an intensional logic for the representation of the semantics of utterances and a taxonomic language with formal semantics for specification of descriptive constants and axioms relating them. Remarkably, 99.9% of 7,000 vocabulary items in our natural language applications could be adequately axiomatized in the taxonomic language.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>G Abrett</author>
<author>M Burstein</author>
</authors>
<title>The KREME Knowledge Editing Environment&amp;quot;.</title>
<date>1987</date>
<journal>Int. J. Man-Machine Studies</journal>
<volume>27</volume>
<pages>103--126</pages>
<contexts>
<context position="8002" citStr="[1]" startWordPosition="1216" endWordPosition="1216">ding taxonomic reasoning to WML, giving a hybrid representation. 2.2. Why a Taxonomic Language Our hypothesis is that much of the reasoning needed in semantic processing can be supported by a taxonomy. The ability to pre-compile pre-specified inferential chains, to index them via concept name and role name, and to employ taxonomic inheritance for organizing knowledge were critical in selecting taxonomic representation to supplement WML. The well-defined semantics of NIKL was the basis for choosing it over other taxonomic systems. A further benefit in choosing NIKL is the availability of KREME [1], which can be used as a sophisticated browsing, editing, and maintenance environment for taxonomies such as those written in NIKL; KREME has proven effective in a number of BBN expert system efforts other than NLP and having a taxonomic knowledge base. In choosing NIKL to axiomatize the constants, one could use its built-in, incomplete inference algorithm, the classifier [27]. In Janus, the classifier is used only for consistency checking when modifying or loading the taxonomic network; any concepts or roles identified by the classifier as identical are candidates for further axiomatization. </context>
<context position="24344" citStr="[1]" startWordPosition="3957" endWordPosition="3957">nown 197 word. IRACQ is used for acquiring the diverse, complex patterns of syntax and semantics arising from verbs, by providing examples of the verb&apos;s usage, Since IRACQ assumes that a large vocabulary is available for use in the training examples; a way to rapidly infer the knowledge bases for the overwhelming majority of words is an invaluable complement. KNACQ [33] serves that purpose. The domain model is used to organize, guide, and assist in acquiring the syntax and semantics of domain-specific vocabulary. Using the browsing facilities, graphical views, and consistency checker of KREME [1] on NIKL taxonomies, one may select any concept or role for knowledge acquisition. KNACQ presents the user with a few questions and menus to elicit the English expressions used to refer to that concept or role. To illustrate the kinds of information that must be acquired consider the examples in Figure 4. The vessel speed of Vinson The vessels with speed above 20 knots The vessel&apos;s speed is 5 knots Vinson has speed less than 20 knots Its speed Which vessels have a CROVL of C3? Which vessels are deployed C3? Figure 4: Examples for Knowledge Acquisition To handle these one would have to acquire </context>
</contexts>
<marker>1.</marker>
<rawString>Abrett, G. and Burstein, M. &amp;quot;The KREME Knowledge Editing Environment&amp;quot;. Int. J. Man-Machine Studies 27 (1987), 103-126.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ayuso Planes</author>
<author>D</author>
</authors>
<title>The Logical Interpretation of Noun Compounds.</title>
<date>1985</date>
<institution>Master Th., Massachusetts Institute of Technology,June</institution>
<contexts>
<context position="7133" citStr="[2, 13]" startWordPosition="1084" endWordPosition="1085"> grammar, we have made some inroads toward matching the complexity of the proposition to the complexity of the utterance; that simplicity is at the expense of using a more powerful semantic interpreter and of sacrificing compositionality in those cases where language itself appears non-compositional. • Real-time inference strategies are a challenge for so rich a logic. However, our hypothesis is that large classes of the linguistic examples requiring common sense reasoning can be handled using limited inference algorithms on a taxonomic language. Arguments supporting this hypothesis appear in [2, 13] for interpreting nominal compounds; in [6, 7, 291, for common sense reasoning about modifier attachment; and in [32] for phenomena in definite reference resolution. This second disadvantage, the goal of tractable, real-time inference strategies, is the basis for adding taxonomic reasoning to WML, giving a hybrid representation. 2.2. Why a Taxonomic Language Our hypothesis is that much of the reasoning needed in semantic processing can be supported by a taxonomy. The ability to pre-compile pre-specified inferential chains, to index them via concept name and role name, and to employ taxonomic i</context>
</contexts>
<marker>2.</marker>
<rawString>Ayuso Planes, D. The Logical Interpretation of Noun Compounds. Master Th., Massachusetts Institute of Technology,June 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D M Ayuso</author>
<author>V Shaked</author>
<author>R M Weischedel</author>
</authors>
<title>An Environment for Acquiring Semantic Information.</title>
<date>1987</date>
<booktitle>Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics, ACL,</booktitle>
<pages>32--40</pages>
<contexts>
<context position="28253" citStr="(3)" startWordPosition="4584" endWordPosition="4584">e, a more general class of regularities is captured by the notion of caseframe rules. Suppose we have a role UNIT-OF, relating CASREP and MILITARY-UNIT. KNACQ asks the user which subset of the following six patterns in Figure 6 are appropriate plus the prepositions that are appropriate. 1. &lt;CASREP&gt; is &lt;PREP&gt; &lt;MILITARY-UNIT&gt; 2. &lt;CASREP&gt; &lt;PREP&gt; &lt;MILITARY-UNIT&gt; 3. &lt;MILITARY-UNIT&gt; &lt;CASREP&gt; 4. &lt;MILITARY-UNIT&gt; is &lt;PREP&gt; &lt;CASREP&gt; 5. &lt;MILITARY-UNIT&gt; &lt;PREP&gt; &lt;CASREP&gt; 6. &lt;CASREP&gt; &lt;MILITARY-UNIT&gt; Figure 6: Patterns for the Caseframe Rules For this example, the user would select patterns (1), 198 (2), and (3) and select for, on. and of as prepositions.7 The information acquired through KNACO is used both by the understanding components and by BBN&apos;s Spokesman generation components for paraphrasing, for providing clarification responses, and for answers in English. Mapping from the WML structures to lexical items is accomplished using rules acquired with KNACO, as well as handcrafted mapping rules for lexical items not directly associated with concepts or roles. 4.2. Where an Alternative Mechanism was Selected Though the domain model is central to the semantic processing of Janus, we have not used i</context>
</contexts>
<marker>3.</marker>
<rawString>Ayuso, D.M., Shaked, V., and Weischedel, R.M. An Environment for Acquiring Semantic Information. Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics, ACL, 1987, pp. 32-40.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Damaris Ayuso</author>
</authors>
<title>Discourse Entities in Janus.</title>
<date>1989</date>
<booktitle>Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<contexts>
<context position="31919" citStr="[4]" startWordPosition="5193" endWordPosition="5193">ery high. 2. I walked into the room. The chandeliers sparkled brightly. 3. I went shopping yesterday. The time I started was 3 PM. We believe a taxonomic domain model provides the basis for an efficient algorithm for a broad class of examples of bridging, though we do not believe that it will cover all cases. If A is the class of a discourse entity arising from previous utterances, then any entity of class B, such that the NIKL domain model has a role from A to B (or from B to A) can be referred to by a definite NP. This has not yet been integrated into the Janus model of reference processing [4]. 4.3.2. Metonymy Unstated relations in a communication must be inferred for full understanding of nominal compounds and metonymy. Those that can be anticipated can be built into the lexicon; the challenge is to deal with those that are novel to Janus. Finding the omitted relation in novel nominal compounds using a taxonomy has been explored and reported elsewhere [13]. We propose treating many novel cases of metonymy in the following way: 1. Where patterns of metonymy can be identified,, such as using a description of a part to refer to the whole (and other patterns identified in [17]), pre-c</context>
</contexts>
<marker>4.</marker>
<rawString>Ayuso, Damaris. Discourse Entities in Janus. Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>BBN Systems</author>
<author>Technologies Corp</author>
</authors>
<title>A Guide to IRUS-II Application Development in the FCCBMP.</title>
<date>1988</date>
<booktitle>BBN Report 6859, BBN Systems and Technologies Corp.,</booktitle>
<location>Cambridge, MA,</location>
<contexts>
<context position="1193" citStr="[5]" startWordPosition="183" endWordPosition="183">be adequately axiomatized in the taxonomic language. 1. Introduction Hybrid representation systems have been explored before (9,24, 31], but until now only one has been used in an extensive natural language processing system. KL-TWO [31], based on a propositional logic, was at the core of the mapping from formulae to lexical items in the Penman generation system [28]. In this paper we report some of the design decisions made in creating a hybrid of an intensional logic with a taxonomic language for use in Janus, BBN&apos;s natural language system, consisting of the IRUS-II understanding components [5] and the Spokesman generation components. To our knowledge, this is the first hybrid approach using an intensional logic, and the first time a hybrid representation system has been used for understanding. In Janus, the meaning of an utterance is represented as an expression in WML (World Model Language) [15], which is an intensional logic. However, a logic merely prescribes the framework of semantics and of ontology. The descriptive constants, that is the individual constants (functions with no arguments), the other function symbols, and the predicate symbols, are abstractions without any deta</context>
<context position="9340" citStr="[5]" startWordPosition="1435" endWordPosition="1435">ns in the network are simpler, faster, and have proven adequate for NLP in our applications. 2.3. Two Critical Choices in the Hybrid 2.3.1. Representing Predicates of Arbitrary Arity Choosing a taxonomic language, at least in current implementations, means that one is restricted to unary and binary predicates. However, this not a limitation in expressive power. One can represent a predicate P of n arguments via a unary predicate P&apos; and n binary predicates, which is what we have done. (P r1, m) will be true if the following expression is. (3 b) (A (P&apos; b) (R1 b rl) (R2 b r2) (Rn b rn)) Davidson [5] has argued for such a representation of processes on semantic grounds, since many event descriptors appear with a variable number of arguments. 194 2.3.2. Time and World Indices Any concept name or role name in the network is a constant in the logical language. We use concepts only to represent sets of entities indexed by time and world. Roles are used only to represent sets of pairs of entities, i.e., binary relations. Given time and world indices potentially on each constant in WML, we must first state the role those indices play in the NIKL portion of the hybrid. Figure 1: Two Typical Fact</context>
</contexts>
<marker>5.</marker>
<rawString>BBN Systems and Technologies Corp. A Guide to IRUS-II Application Development in the FCCBMP. BBN Report 6859, BBN Systems and Technologies Corp., Cambridge, MA, 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Bobrow</author>
<author>B Webber</author>
</authors>
<title>PSI-KLONE: Parsing and Semantic Interpretation in the BBN Natural Language Understanding System.</title>
<date>1980</date>
<booktitle>Proceedings of the 1980 Conference of the Canadian Society for Computational Studies of Intelligence,</booktitle>
<location>CSCSUSCEIO,</location>
<marker>6.</marker>
<rawString>Bobrow, R. and Webber, B. PSI-KLONE: Parsing and Semantic Interpretation in the BBN Natural Language Understanding System. Proceedings of the 1980 Conference of the Canadian Society for Computational Studies of Intelligence, CSCSUSCEIO, May, 1980.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Bobrow</author>
<author>B Webber</author>
</authors>
<title>Knowledge Representation for Syntactic./Semantic Processing.</title>
<date>1980</date>
<booktitle>Proceedings of the National Conference on Artificial Intelligence, AAAI,</booktitle>
<contexts>
<context position="29473" citStr="[7, 29]" startWordPosition="4778" endWordPosition="4779">ible ways, but only where there seems to be clear benefit. In telegraphic language, omitted prepositions, as in List the creation date file B, may arise. Alternatively, if the NLP system is part of a speech understanding system, prepositions are among the most difficult words to recognize reliably. Omitted prepositions could be treated with the same heuristic as implemented for interpreting the meaning of have, with, and of. However, we have chosen a different inference technique for omitted prepositions. Though one could represent selection restrictions directly in a taxonomy (as reported in [7, 29]), selection restrictions in Janus are stored separately, indexed by the semantic class of the head word. We believe it more likely that Janus will have the selectonal pattern involving the omitted preposition, than that the omitted preposition corresponds to a usage unknown to Janus and inferable from the domain model relations. Consequently, Janus applies the selection restrictions corresponding to all senses of the known head, to find what senses are consistent with the proposed phrase and with what prepositions. In practice, this gives rise to far fewer possibilities than considering all r</context>
</contexts>
<marker>7.</marker>
<rawString>Bobrow, R. and Webber, B. Knowledge Representation for Syntactic./Semantic Processing. Proceedings of the National Conference on Artificial Intelligence, AAAI, August, 1980.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R J Brachman</author>
<author>J G Schmolze</author>
</authors>
<title>An Overview of the KL-ONE Knowledge Representation System&amp;quot;.</title>
<date>1985</date>
<journal>Cognitive Science</journal>
<volume>9</volume>
<contexts>
<context position="2000" citStr="[8, 22]" startWordPosition="304" endWordPosition="305">ing. In Janus, the meaning of an utterance is represented as an expression in WML (World Model Language) [15], which is an intensional logic. However, a logic merely prescribes the framework of semantics and of ontology. The descriptive constants, that is the individual constants (functions with no arguments), the other function symbols, and the predicate symbols, are abstractions without any detailed commitment to ontology. (We will abbreviate descriptive constants throughout the remainder of this paper as constants.) Axioms stating the relationships between the constants are defined in NIKL [8, 22]. We wished to explore whether a language with limited expressive power but fast reasoning procedures is adequate for core problems in natural language processing. The NIKL axioms constrain the set of possible models for the logic in a given domain. Though we have found clear examples that argue for more expressive power than NIKL provides, 99.9% of the examples in our expert system and data base applications have fit well within the constraints of NIKL. Based on our experience and that of others, the axioms and limited inference algorithms can be used for classes of anaphora resolution, inter</context>
</contexts>
<marker>8.</marker>
<rawString>Brachman, R.J. and Schmolze, J.G. &amp;quot;An Overview of the KL-ONE Knowledge Representation System&amp;quot;. Cognitive Science 9, 2 (April 1985).</rawString>
</citation>
<citation valid="true">
<authors>
<author>R J Brachman</author>
<author>V P Gilbert</author>
<author>H J Levesque</author>
</authors>
<title>An Essential Hybrid Reasoning System: Knowledge and Symbol Level Accounts of Krypton.</title>
<date>1985</date>
<booktitle>Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc.,</booktitle>
<pages>532--539</pages>
<location>Los Angeles, CA,</location>
<contexts>
<context position="36965" citStr="[9]" startWordPosition="5998" endWordPosition="5998">brid representation schemes have been created, although only ours seems to have explored a hybrid of intensional logic with an axiomatizable frame system. The most directly related efforts are the following: • KL-TWO [31], which marries a frame system (NIKL) with propositional logic (RUP [20]). Limited inference in propositional logic is the goal of KL-TWO. Limited aspects of universal quantification are achieved via allowing demons in the inference process. KL-TWO and its classification algorithm [27] are at the heart of the lexicalization process of the text generator Penman [28]. • KRYPTON [9], which marries a frame system with first-order logic. The frame system is designed to be less expressive than NIKL to allow rapid checking for disjointness of two class concepts in order to support efficient resolution theorem proving. KRYPTON has not as yet been used in any natural language processor. 7. Conclusions Our conclusions regarding the hybrid representation approach of intensional logic plus NIKL-based axioms to define constants are based on three kinds of efforts: • Bringing Janus up on two large expert system and data base applications within DARPA&apos;s Battle Management Programs. T</context>
</contexts>
<marker>9.</marker>
<rawString>Brachman, R.J., Gilbert, V.P., and Levesque, H.J. An Essential Hybrid Reasoning System: Knowledge and Symbol Level Accounts of Krypton. Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc., Los Angeles, CA, August, 1985, pp. 532-539.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Carlson</author>
</authors>
<title>Reference to Kinds in English.</title>
<date>1979</date>
<publisher>Garland Press,</publisher>
<location>New York,</location>
<contexts>
<context position="12988" citStr="[10]" startWordPosition="2047" endWordPosition="2047">he expressive power of the hybrid is illustrated below as it pertains to minimizing the constants needed From the constants BLACK-ENTITIES, GRAY-ENTITIES, CATS and MICE, the operators THE, POWER, KIND, and SAMPLE are used to derive the entities corresponding to definite sets, generic classes, and indefinite sets. In a semantic network without the hybrid, one might choose (or need) to represent each of our derived entities by a node in the network. Our use of the operator THE, and the operator POWER for definite plurals follows Scha [25]. The operators KIND and SAMPLE follow Carlson&apos;s analysis [10] of the semantics of bare plurals. THE, as an operator, takes three arguments: a variable, a sort (unary predicate), and a proposition. Its denotation is the unique salient object in context such that it is in the sort and such that if the variable is bound to it, the proposition is true. POWER takes a sort as argument and produces the predicate corresponding to the power set of the set denoted by the sort. These operators are useful for representing definite plurals; the black cats would be represented as (THE x (POWER CATS) (BLACK-ENTITIES x)). &apos;It is possible that one could extend NIKL sema</context>
<context position="15272" citStr="[10]" startWordPosition="2441" endWordPosition="2441"> stated in many semantic network systems, but not in NIKL. Generic assertions. Generic statements such as Cats eat mice are often encoded in a semantic network or frame system. This is not possible in the semantics of NIKL, but is possible in the hybrid. The structure in Figure 2 would not give the desired generic meaning, but rather would mean (ignoring time and world) that (V x) ((CATS x) (3 y)(A (MICE y)(EAT x y))), i.e., every cat eats some mouse. EAT CCATS) (1, 00 ) Figure 2: Illustration Distinguishing NIKL Networks from other Semantic Nets Again, following Carlson&apos;s linguistic analysis [10], in the hybrid we would have a generic statement about the kind corresponding to cats, that these eat indefinitely specified sets of mice. GENERIC is an operator which produces a predicate on kinds, intuitively meaning that the resulting predicate is typically true of individuals of the kind that is its argument. Our formal representation (ignoring tense for simplicity) is (GENERIC (LAMBDA (x) (EAT x (SAMPLE y MICE)))) (KIND CATS). Next we illustrate a potential powerful feature of the hybrid which we have chosen not to exploit. Derivable definitions. The hybrid gives a powerful means of defi</context>
</contexts>
<marker>10.</marker>
<rawString>Carlson, G.. Reference to Kinds in English. Garland Press, New York, 1979.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Chafe</author>
</authors>
<title>Discourse Structure and Human Knowledge. In Language Comprehension and the Acquisition of Knowledge, Winston and Sons,</title>
<date>1972</date>
<location>Washington,</location>
<contexts>
<context position="30901" citStr="[11]" startWordPosition="5008" endWordPosition="5008">ploiting the domain model and hybrid representation system described in this paper. 7Normally, if pattern (1) is valid, pattern (2) will be as well and vice versa. Similarly, if pattern (4) is valid, pattern (5) will normally be also. As a result, the menu items are coupled by default (selecting (1) automatically selects (2) and vice versa), but this default may be simply overridden by selecting either and then deselecting the other. The most frequent examples where one does not have the coupling of those patterns is the preposition of. 4.3.1. An Approach to Bridging It has long been observed [11] that mention of one class of entities in a communication can bring into the foreground other classes of entities which can be referred to though not explicitly introduced. The process of inferring the referent when such a reference occurs has been called bridging [12]. Some examples, taken from [12], appear below, where the reference requiring bridging is underlined. 1. I looked into the room. The ceiling was very high. 2. I walked into the room. The chandeliers sparkled brightly. 3. I went shopping yesterday. The time I started was 3 PM. We believe a taxonomic domain model provides the basis</context>
</contexts>
<marker>11.</marker>
<rawString>Chafe, W. Discourse Structure and Human Knowledge. In Language Comprehension and the Acquisition of Knowledge, Winston and Sons, Washington, 1972.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H H Bridging Clark</author>
</authors>
<title>Theoretical Issues</title>
<date>1975</date>
<booktitle>in Natural Language Processing,</booktitle>
<pages>169--174</pages>
<contexts>
<context position="31170" citStr="[12]" startWordPosition="5053" endWordPosition="5053">upled by default (selecting (1) automatically selects (2) and vice versa), but this default may be simply overridden by selecting either and then deselecting the other. The most frequent examples where one does not have the coupling of those patterns is the preposition of. 4.3.1. An Approach to Bridging It has long been observed [11] that mention of one class of entities in a communication can bring into the foreground other classes of entities which can be referred to though not explicitly introduced. The process of inferring the referent when such a reference occurs has been called bridging [12]. Some examples, taken from [12], appear below, where the reference requiring bridging is underlined. 1. I looked into the room. The ceiling was very high. 2. I walked into the room. The chandeliers sparkled brightly. 3. I went shopping yesterday. The time I started was 3 PM. We believe a taxonomic domain model provides the basis for an efficient algorithm for a broad class of examples of bridging, though we do not believe that it will cover all cases. If A is the class of a discourse entity arising from previous utterances, then any entity of class B, such that the NIKL domain model has a rol</context>
</contexts>
<marker>12.</marker>
<rawString>Clark, H.H. Bridging. Theoretical Issues in Natural Language Processing, 1975, pp. 169-174.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T W Finin</author>
</authors>
<title>The Semantic Interpretation of Nominal Compounds.</title>
<date>1980</date>
<booktitle>Proceedings of The First Annual National Conference on Artificial Intelligence, The American Association for Artificial Intelligence,</booktitle>
<pages>310--312</pages>
<contexts>
<context position="7133" citStr="[2, 13]" startWordPosition="1084" endWordPosition="1085"> grammar, we have made some inroads toward matching the complexity of the proposition to the complexity of the utterance; that simplicity is at the expense of using a more powerful semantic interpreter and of sacrificing compositionality in those cases where language itself appears non-compositional. • Real-time inference strategies are a challenge for so rich a logic. However, our hypothesis is that large classes of the linguistic examples requiring common sense reasoning can be handled using limited inference algorithms on a taxonomic language. Arguments supporting this hypothesis appear in [2, 13] for interpreting nominal compounds; in [6, 7, 291, for common sense reasoning about modifier attachment; and in [32] for phenomena in definite reference resolution. This second disadvantage, the goal of tractable, real-time inference strategies, is the basis for adding taxonomic reasoning to WML, giving a hybrid representation. 2.2. Why a Taxonomic Language Our hypothesis is that much of the reasoning needed in semantic processing can be supported by a taxonomy. The ability to pre-compile pre-specified inferential chains, to index them via concept name and role name, and to employ taxonomic i</context>
<context position="32290" citStr="[13]" startWordPosition="5252" endWordPosition="5252">us utterances, then any entity of class B, such that the NIKL domain model has a role from A to B (or from B to A) can be referred to by a definite NP. This has not yet been integrated into the Janus model of reference processing [4]. 4.3.2. Metonymy Unstated relations in a communication must be inferred for full understanding of nominal compounds and metonymy. Those that can be anticipated can be built into the lexicon; the challenge is to deal with those that are novel to Janus. Finding the omitted relation in novel nominal compounds using a taxonomy has been explored and reported elsewhere [13]. We propose treating many novel cases of metonymy in the following way: 1. Where patterns of metonymy can be identified,, such as using a description of a part to refer to the whole (and other patterns identified in [17]), pre-compile chains of relations between classes in the domain model, e.g., (PART-OF A B) where A and B are concepts. 2. In processing an input, when a selection restriction on an NP fails, record the failed restriction with the partial interpretation for possible future processing, after all attempts at a literal interpretation of the input have failed. 3. If no literal int</context>
</contexts>
<marker>13.</marker>
<rawString>Finin, T.W. The Semantic Interpretation of Nominal Compounds. Proceedings of The First Annual National Conference on Artificial Intelligence, The American Association for Artificial Intelligence, August, 1980, pp. 310-312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Freeman</author>
</authors>
<title>The QUA Link.</title>
<date>1982</date>
<booktitle>Proceedings of the 1981 KL-ONE Workshop, Bolt Beranek and Newman Inc.,</booktitle>
<pages>55--65</pages>
<marker>14.</marker>
<rawString>Freeman, M. The QUA Link. Proceedings of the 1981 KL-ONE Workshop, Bolt Beranek and Newman Inc., 1982, pp. 55-65.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E W Hinrichs</author>
<author>D M Ayuso</author>
<author>R Scha</author>
</authors>
<title>The Syntax and Semantics of the JANUS Semantic Interpretation Language.</title>
<date>1985</date>
<journal>BBN Laboratories, Report</journal>
<booktitle>In Research and Development in Natural Language Understanding as Part of the Strategic Computing Program, Annual Technical Report</booktitle>
<volume>6522</volume>
<pages>27--31</pages>
<contexts>
<context position="1502" citStr="[15]" startWordPosition="233" endWordPosition="233">ormulae to lexical items in the Penman generation system [28]. In this paper we report some of the design decisions made in creating a hybrid of an intensional logic with a taxonomic language for use in Janus, BBN&apos;s natural language system, consisting of the IRUS-II understanding components [5] and the Spokesman generation components. To our knowledge, this is the first hybrid approach using an intensional logic, and the first time a hybrid representation system has been used for understanding. In Janus, the meaning of an utterance is represented as an expression in WML (World Model Language) [15], which is an intensional logic. However, a logic merely prescribes the framework of semantics and of ontology. The descriptive constants, that is the individual constants (functions with no arguments), the other function symbols, and the predicate symbols, are abstractions without any detailed commitment to ontology. (We will abbreviate descriptive constants throughout the remainder of this paper as constants.) Axioms stating the relationships between the constants are defined in NIKL [8, 22]. We wished to explore whether a language with limited expressive power but fast reasoning procedures </context>
<context position="11897" citStr="[15]" startWordPosition="1872" endWordPosition="1872"> (INTENSION Stark—readiness)) (PREVIOUS a Cl) (NEW a C4)). That is, for the example we would like to treat the scale as intensional, but have no way to do so in NIKL. Therefore, we had to annotate the definition of downgrade outside of the formal semantics of NIKL. Only 0.1% of the 7,000 (root) word vocabulary in our applications could not be handled with NIKL. (The additional problematic vocabulary were upgrade, project, report, change, and expect.) 3. Example Representational Decisions Here we mention some of the issues we focussed on in developing Janus. The specification of WML appears in [15]; specifications for NIKL appear in [22, 26]. Few constants. One decision was to use as few constants as possible, deriving as many entities as possible using operators in the intensional logic. In this section we illustrate this point by showing how definitely referenced sets, information about kinds, indefinitely identified sets, and generic information can be stated by derivation from a single constant whose extension is the set of all individuals of a particular class. Some of the expressive power of the hybrid is illustrated below as it pertains to minimizing the constants needed From the</context>
</contexts>
<marker>15.</marker>
<rawString>Hinrichs, E.W., Ayuso, D.M., and Scha, R. The Syntax and Semantics of the JANUS Semantic Interpretation Language. In Research and Development in Natural Language Understanding as Part of the Strategic Computing Program, Annual Technical Report December 1985 - December 1986, BBN Laboratories, Report No. 6522, 1987, pp. 27-31.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hobbs</author>
</authors>
<title>Interpretation as Abduction.</title>
<date>1988</date>
<booktitle>Proceedings of the 26th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>95--103</pages>
<contexts>
<context position="33310" citStr="[16]" startWordPosition="5424" endWordPosition="5424">ord the failed restriction with the partial interpretation for possible future processing, after all attempts at a literal interpretation of the input have failed. 3. If no literal interpretation of the input can be found, look among the precompiled relations of step 1 above for any class that could be so related to the class of the NP that appears. 4. If a relation is applicable, attempt to resume interpretation assuming the referent of the NP is in the related class. This has not been implemented, but offers an efficient 199 alternative to the abductive theorem-proving approach described in [16]. 5. Top-Level Abstractions in the NIKL Taxonomy WML and NIKL together provide a framework for representation. The highest concepts and relations in the NIKL network provide a representational style in which more concrete constants. must fit. The first abstraction structure used in Janus was the USC/ISI &amp;quot;upper structure&amp;quot; [19]. Because it seemed tied to systemic linguistics in critical ways, rather than to a more general ontological style, we have replaced it with another domain-independent set of concepts and roles. For any application domain, all domaindependent constants must fit underneath </context>
</contexts>
<marker>16.</marker>
<rawString>Hobbs, et. al. Interpretation as Abduction. Proceedings of the 26th Annual Meeting of the Association for Computational Linguistics, 1988, pp. 95-103.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Lakoff</author>
<author>M Johnson</author>
</authors>
<title>Metaphors We Live By.</title>
<date>1980</date>
<publisher>The University of Chicago Press,</publisher>
<location>Chicago,</location>
<contexts>
<context position="32511" citStr="[17]" startWordPosition="5291" endWordPosition="5291">ocessing [4]. 4.3.2. Metonymy Unstated relations in a communication must be inferred for full understanding of nominal compounds and metonymy. Those that can be anticipated can be built into the lexicon; the challenge is to deal with those that are novel to Janus. Finding the omitted relation in novel nominal compounds using a taxonomy has been explored and reported elsewhere [13]. We propose treating many novel cases of metonymy in the following way: 1. Where patterns of metonymy can be identified,, such as using a description of a part to refer to the whole (and other patterns identified in [17]), pre-compile chains of relations between classes in the domain model, e.g., (PART-OF A B) where A and B are concepts. 2. In processing an input, when a selection restriction on an NP fails, record the failed restriction with the partial interpretation for possible future processing, after all attempts at a literal interpretation of the input have failed. 3. If no literal interpretation of the input can be found, look among the precompiled relations of step 1 above for any class that could be so related to the class of the NP that appears. 4. If a relation is applicable, attempt to resume int</context>
</contexts>
<marker>17.</marker>
<rawString>Lakoff, G. and Johnson, M.. Metaphors We Live By. The University of Chicago Press, Chicago, 1980.</rawString>
</citation>
<citation valid="true">
<title>Longman Dictionary of Contemporary English.</title>
<date>1987</date>
<location>Essex, England,</location>
<contexts>
<context position="34364" citStr="[18]" startWordPosition="5585" endWordPosition="5585"> replaced it with another domain-independent set of concepts and roles. For any application domain, all domaindependent constants must fit underneath the domainindependent structure. The domain-independent taxonomy consists of 70 concepts and 24 roles currently, but certainly could be further expanded as one attempts to further axiomatize and model notions useful in a broad class of application domains. During the evolution of Janus, we explored whether the domain-independent taxonomy could be greatly expanded by a broad set of primitives used in the Longman Dictionary of Contemporary English [18] (LDOCE) to define domain-independent constants. LDOCE defines approximately 56,000 words in terms of a base vocabulary of roughly 2,000 items.8 We estimate that about 20,000 concepts and roles should be defined corresponding to the 2,000 multiway ambiguous words in the base vocabulary. The appeal, of course, is that if these basic notions were sufficient to define 56,000 words, they are generally applicable, providing a candidate for general-purpose primitives. The course of action we followed was to build a taxonomy for all of the definitions of approximately 200 items from the base vocabula</context>
</contexts>
<marker>18.</marker>
<rawString>Longman Dictionary of Contemporary English. Essex, England, 1987.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W C Mann</author>
<author>Y Arens</author>
<author>C Matthiessen</author>
<author>S Naberschnig</author>
<author>N K Sondheimer</author>
</authors>
<date>1985</date>
<booktitle>Janus Abstraction Structure -- Draft 2. USC/Information Sciences Institute,</booktitle>
<contexts>
<context position="33637" citStr="[19]" startWordPosition="5473" endWordPosition="5473"> of the NP that appears. 4. If a relation is applicable, attempt to resume interpretation assuming the referent of the NP is in the related class. This has not been implemented, but offers an efficient 199 alternative to the abductive theorem-proving approach described in [16]. 5. Top-Level Abstractions in the NIKL Taxonomy WML and NIKL together provide a framework for representation. The highest concepts and relations in the NIKL network provide a representational style in which more concrete constants. must fit. The first abstraction structure used in Janus was the USC/ISI &amp;quot;upper structure&amp;quot; [19]. Because it seemed tied to systemic linguistics in critical ways, rather than to a more general ontological style, we have replaced it with another domain-independent set of concepts and roles. For any application domain, all domaindependent constants must fit underneath the domainindependent structure. The domain-independent taxonomy consists of 70 concepts and 24 roles currently, but certainly could be further expanded as one attempts to further axiomatize and model notions useful in a broad class of application domains. During the evolution of Janus, we explored whether the domain-independ</context>
</contexts>
<marker>19.</marker>
<rawString>Mann, W.C., Arens, Y., Matthiessen, C., Naberschnig, S., and Sondheimer, N.K. Janus Abstraction Structure -- Draft 2. USC/Information Sciences Institute, 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A McAllester</author>
</authors>
<title>Reasoning Utility Package User&apos;s Manual. Al Memo 667,</title>
<date>1982</date>
<institution>Massachusetts Institute of Technology, Artificial Intelligence Laboratory,</institution>
<contexts>
<context position="36655" citStr="[20]" startWordPosition="5949" endWordPosition="5949">ther hand, concrete concepts corresponding to a lower level of abstraction seem obtainable from LDOCE. In particular the LDOCE definitions of units of measurement for the avoirdupois and metric systems were very useful. A more detailed analysis of our experience is presented in [23]. 6. Related Work Several hybrid representation schemes have been created, although only ours seems to have explored a hybrid of intensional logic with an axiomatizable frame system. The most directly related efforts are the following: • KL-TWO [31], which marries a frame system (NIKL) with propositional logic (RUP [20]). Limited inference in propositional logic is the goal of KL-TWO. Limited aspects of universal quantification are achieved via allowing demons in the inference process. KL-TWO and its classification algorithm [27] are at the heart of the lexicalization process of the text generator Penman [28]. • KRYPTON [9], which marries a frame system with first-order logic. The frame system is designed to be less expressive than NIKL to allow rapid checking for disjointness of two class concepts in order to support efficient resolution theorem proving. KRYPTON has not as yet been used in any natural langu</context>
</contexts>
<marker>20.</marker>
<rawString>David A. McAllester. Reasoning Utility Package User&apos;s Manual. Al Memo 667, Massachusetts Institute of Technology, Artificial Intelligence Laboratory, April, 1982.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Montague</author>
</authors>
<title>The Proper Treatment of Quantification in Ordinary English. In Approaches to Natural Language,</title>
<date>1973</date>
<journal>J. Hintikka, J. Moravcsik</journal>
<pages>221--242</pages>
<location>Eds., Reidel, Dordrecht,</location>
<contexts>
<context position="6461" citStr="[21]" startWordPosition="984" endWordPosition="984">h statements may be conveniently represented. Our second motivation for choosing intensional logic was our desire to capitalize on other advantages we perceived for applying it to natural language processing (NLP), such as the potential simplicity and compositionality of mapping from syntactic form to semantic representation and the many studies in linguistic semantics that assume some form of intensional logic. However, the disadvantages of intensional logic for NIP include: • The complexity of logical expressions is great even for relatively straightforward utterances using Montague grammar [21]. However, by adopting intensional logic while rejecting Montague grammar, we have made some inroads toward matching the complexity of the proposition to the complexity of the utterance; that simplicity is at the expense of using a more powerful semantic interpreter and of sacrificing compositionality in those cases where language itself appears non-compositional. • Real-time inference strategies are a challenge for so rich a logic. However, our hypothesis is that large classes of the linguistic examples requiring common sense reasoning can be handled using limited inference algorithms on a ta</context>
</contexts>
<marker>21.</marker>
<rawString>Montague, Richard. The Proper Treatment of Quantification in Ordinary English. In Approaches to Natural Language, J. Hintikka, J. Moravcsik and P. Suppes, Eds., Reidel, Dordrecht, 1973, pp. 221-242.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M G Moser</author>
</authors>
<title>An Overview of NIKL, the New Implementation of KL-ONE. In Research in Knowledge Representation for Natural Language Understanding -Annual Report,</title>
<date>1982</date>
<journal>Sidner, C. L., et al., Eds., BBN Laboratories Report</journal>
<volume>1</volume>
<pages>31</pages>
<contexts>
<context position="2000" citStr="[8, 22]" startWordPosition="304" endWordPosition="305">ing. In Janus, the meaning of an utterance is represented as an expression in WML (World Model Language) [15], which is an intensional logic. However, a logic merely prescribes the framework of semantics and of ontology. The descriptive constants, that is the individual constants (functions with no arguments), the other function symbols, and the predicate symbols, are abstractions without any detailed commitment to ontology. (We will abbreviate descriptive constants throughout the remainder of this paper as constants.) Axioms stating the relationships between the constants are defined in NIKL [8, 22]. We wished to explore whether a language with limited expressive power but fast reasoning procedures is adequate for core problems in natural language processing. The NIKL axioms constrain the set of possible models for the logic in a given domain. Though we have found clear examples that argue for more expressive power than NIKL provides, 99.9% of the examples in our expert system and data base applications have fit well within the constraints of NIKL. Based on our experience and that of others, the axioms and limited inference algorithms can be used for classes of anaphora resolution, inter</context>
<context position="11941" citStr="[22, 26]" startWordPosition="1878" endWordPosition="1879">a Cl) (NEW a C4)). That is, for the example we would like to treat the scale as intensional, but have no way to do so in NIKL. Therefore, we had to annotate the definition of downgrade outside of the formal semantics of NIKL. Only 0.1% of the 7,000 (root) word vocabulary in our applications could not be handled with NIKL. (The additional problematic vocabulary were upgrade, project, report, change, and expect.) 3. Example Representational Decisions Here we mention some of the issues we focussed on in developing Janus. The specification of WML appears in [15]; specifications for NIKL appear in [22, 26]. Few constants. One decision was to use as few constants as possible, deriving as many entities as possible using operators in the intensional logic. In this section we illustrate this point by showing how definitely referenced sets, information about kinds, indefinitely identified sets, and generic information can be stated by derivation from a single constant whose extension is the set of all individuals of a particular class. Some of the expressive power of the hybrid is illustrated below as it pertains to minimizing the constants needed From the constants BLACK-ENTITIES, GRAY-ENTITIES, CA</context>
</contexts>
<marker>22.</marker>
<rawString>Moser, M.G. An Overview of NIKL, the New Implementation of KL-ONE. In Research in Knowledge Representation for Natural Language Understanding -Annual Report, 1 September 1982- 31 August 1983, Sidner, C. L., et al., Eds., BBN Laboratories Report No. 5421, 1983, pp. 7-26.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Reinhardt</author>
<author>C Whipple</author>
</authors>
<title>Summary of Conclusions from the Longman&apos;s Taxonomy Experiment.</title>
<date>1988</date>
<booktitle>In Goodman, B., Ed.„ BBN Systems and Technologies Corporation,</booktitle>
<pages>pp..</pages>
<location>Cambridge, MA,</location>
<contexts>
<context position="36334" citStr="[23]" startWordPosition="5899" endWordPosition="5899">at (p. 150) is &amp;quot;an animal related to this such as the lion or tiger&amp;quot; (italics added). Such a vague definition helped us little in axiomatizing the notion. Thus, we decided that hand-crafted abstractions would be needed to axiomatize by hand the LDOCE base vocabulary if general-purpose primitives were to result. On the other hand, concrete concepts corresponding to a lower level of abstraction seem obtainable from LDOCE. In particular the LDOCE definitions of units of measurement for the avoirdupois and metric systems were very useful. A more detailed analysis of our experience is presented in [23]. 6. Related Work Several hybrid representation schemes have been created, although only ours seems to have explored a hybrid of intensional logic with an axiomatizable frame system. The most directly related efforts are the following: • KL-TWO [31], which marries a frame system (NIKL) with propositional logic (RUP [20]). Limited inference in propositional logic is the goal of KL-TWO. Limited aspects of universal quantification are achieved via allowing demons in the inference process. KL-TWO and its classification algorithm [27] are at the heart of the lexicalization process of the text gener</context>
</contexts>
<marker>23.</marker>
<rawString>Reinhardt, T. and Whipple, C. Summary of Conclusions from the Longman&apos;s Taxonomy Experiment. In Goodman, B., Ed.„ BBN Systems and Technologies Corporation, Cambridge, MA, 1988, pp..</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Rich</author>
</authors>
<title>Knowledge Representation languages and the Predicate Calculus: How to Have Your Cake and Eat It Too.</title>
<date>1982</date>
<booktitle>Proceedings of the Second National Conference on Artificial Intelligence, AAAI,</booktitle>
<pages>193--196</pages>
<marker>24.</marker>
<rawString>Rich, C. Knowledge Representation languages and the Predicate Calculus: How to Have Your Cake and Eat It Too. Proceedings of the Second National Conference on Artificial Intelligence, AAAI, August, 1982, pp. 193-196.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Scha</author>
<author>D Stallard</author>
</authors>
<title>Multi-level Plurals and Distributivity.</title>
<date>1988</date>
<booktitle>26th Annual Meeting of the Association for Computational Linguistics, Association for Computational Linguistics,</booktitle>
<pages>17--24</pages>
<contexts>
<context position="5187" citStr="[25]" startWordPosition="789" endWordPosition="789"> of worlds is to be examined. The potential of timevarying entities existed in some of the applications as well, whether attribute values (as in How often has USS Enterprise been C3?) or entities (When was CV22 decommissioned?) The time and world indices of WML provided the opportunity to address such semantic phenomena (though a modal temporal logic or other logics might serve this prupose). • Distributive/collective quantification. Collective readings could arise, though they appear rare, e.g., Do USS Frederick&apos;s capabilities include anti-submarine warfare or When did the ships collide? See [25] for a computational treatment of distributive/collective readings in WML. • Generics and Mass Terms. Mass terms and generally true statements arise in these applications, such as in Do nuclear carriers carry JP51, where JP5 is a kind of jet fuel. Term-forming operators and operators on predicates are one approach and can be accommodated in intensional logics. • Propositional Attitudes. Statements of user preference, e.g., / want to leave in the afternoon, should be accommodated in interfaces to expert systems, as should statements of belief, / believe I must fly with a U.S. carrier. Since int</context>
<context position="12926" citStr="[25]" startWordPosition="2038" endWordPosition="2038">is the set of all individuals of a particular class. Some of the expressive power of the hybrid is illustrated below as it pertains to minimizing the constants needed From the constants BLACK-ENTITIES, GRAY-ENTITIES, CATS and MICE, the operators THE, POWER, KIND, and SAMPLE are used to derive the entities corresponding to definite sets, generic classes, and indefinite sets. In a semantic network without the hybrid, one might choose (or need) to represent each of our derived entities by a node in the network. Our use of the operator THE, and the operator POWER for definite plurals follows Scha [25]. The operators KIND and SAMPLE follow Carlson&apos;s analysis [10] of the semantics of bare plurals. THE, as an operator, takes three arguments: a variable, a sort (unary predicate), and a proposition. Its denotation is the unique salient object in context such that it is in the sort and such that if the variable is bound to it, the proposition is true. POWER takes a sort as argument and produces the predicate corresponding to the power set of the set denoted by the sort. These operators are useful for representing definite plurals; the black cats would be represented as (THE x (POWER CATS) (BLACK</context>
</contexts>
<marker>25.</marker>
<rawString>Scha, R. and Stallard, D. Multi-level Plurals and Distributivity. 26th Annual Meeting of the Association for Computational Linguistics, Association for Computational Linguistics, June, 1988, pp. 17-24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J G Schmolze</author>
<author>D J KL-ONE Israel</author>
</authors>
<title>Semantics and Classification. In Research in Knowledge Representation for Natural Language Understanding -</title>
<date>1982</date>
<journal>Annual Report,</journal>
<booktitle>Sidner, C.L., et al., Eds., BBN Laboratories Report No.</booktitle>
<volume>1</volume>
<pages>31</pages>
<contexts>
<context position="10066" citStr="[26]" startWordPosition="1563" endWordPosition="1563">e number of arguments. 194 2.3.2. Time and World Indices Any concept name or role name in the network is a constant in the logical language. We use concepts only to represent sets of entities indexed by time and world. Roles are used only to represent sets of pairs of entities, i.e., binary relations. Given time and world indices potentially on each constant in WML, we must first state the role those indices play in the NIKL portion of the hybrid. Figure 1: Two Typical Facts Stated in NIKL In a first-order extensional logic, the normal semantics of SUPERC and of roles in NIKL are well defined [26]. For instance, the diagram in figure 1 would mean (V x)((B x) (A x)) (V x)((B x) (3y)(A(C y) (it x Due to a suggestion by David Stallard, we have chosen to interpret SUPERC and the role link similarly, but interpreted under modal necessity, i.e., as propositions true at all times in all worlds. Thus in the diagram in Figure 1, (A z), (B z), (C z), and (R x y) are intensions, i.e., functions with arguments of time and world [t, w] to extensions. Rewriting the axioms above by quantifying over all times and worlds, the axioms for the diagram in Figure 1 in the hybrid representation are (V x)(V r</context>
<context position="11941" citStr="[22, 26]" startWordPosition="1878" endWordPosition="1879">a Cl) (NEW a C4)). That is, for the example we would like to treat the scale as intensional, but have no way to do so in NIKL. Therefore, we had to annotate the definition of downgrade outside of the formal semantics of NIKL. Only 0.1% of the 7,000 (root) word vocabulary in our applications could not be handled with NIKL. (The additional problematic vocabulary were upgrade, project, report, change, and expect.) 3. Example Representational Decisions Here we mention some of the issues we focussed on in developing Janus. The specification of WML appears in [15]; specifications for NIKL appear in [22, 26]. Few constants. One decision was to use as few constants as possible, deriving as many entities as possible using operators in the intensional logic. In this section we illustrate this point by showing how definitely referenced sets, information about kinds, indefinitely identified sets, and generic information can be stated by derivation from a single constant whose extension is the set of all individuals of a particular class. Some of the expressive power of the hybrid is illustrated below as it pertains to minimizing the constants needed From the constants BLACK-ENTITIES, GRAY-ENTITIES, CA</context>
</contexts>
<marker>26.</marker>
<rawString>Schmolze, J. G., and Israel, D. J. KL-ONE: Semantics and Classification. In Research in Knowledge Representation for Natural Language Understanding - Annual Report, 1 September 1982 - 31 August 1983, Sidner, C.L., et al., Eds., BBN Laboratories Report No. 5421, 1983, pp. 27-39.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J G Schmolze</author>
<author>T A Lipkis</author>
</authors>
<title>Classification in the KL-ONE Knowledge Representation System.</title>
<date>1983</date>
<booktitle>Proceedings of the Eighth International Joint Conference on Artificial Intelligence,</booktitle>
<contexts>
<context position="8381" citStr="[27]" startWordPosition="1276" endWordPosition="1276">tical in selecting taxonomic representation to supplement WML. The well-defined semantics of NIKL was the basis for choosing it over other taxonomic systems. A further benefit in choosing NIKL is the availability of KREME [1], which can be used as a sophisticated browsing, editing, and maintenance environment for taxonomies such as those written in NIKL; KREME has proven effective in a number of BBN expert system efforts other than NLP and having a taxonomic knowledge base. In choosing NIKL to axiomatize the constants, one could use its built-in, incomplete inference algorithm, the classifier [27]. In Janus, the classifier is used only for consistency checking when modifying or loading the taxonomic network; any concepts or roles identified by the classifier as identical are candidates for further axiomatization. Our semantic procedures do not need even as sophisticated an algorithm as the NIKL classifier; pre-compiled, pre-defined inference chains in the network are simpler, faster, and have proven adequate for NLP in our applications. 2.3. Two Critical Choices in the Hybrid 2.3.1. Representing Predicates of Arbitrary Arity Choosing a taxonomic language, at least in current implementa</context>
<context position="36869" citStr="[27]" startWordPosition="5980" endWordPosition="5980">eful. A more detailed analysis of our experience is presented in [23]. 6. Related Work Several hybrid representation schemes have been created, although only ours seems to have explored a hybrid of intensional logic with an axiomatizable frame system. The most directly related efforts are the following: • KL-TWO [31], which marries a frame system (NIKL) with propositional logic (RUP [20]). Limited inference in propositional logic is the goal of KL-TWO. Limited aspects of universal quantification are achieved via allowing demons in the inference process. KL-TWO and its classification algorithm [27] are at the heart of the lexicalization process of the text generator Penman [28]. • KRYPTON [9], which marries a frame system with first-order logic. The frame system is designed to be less expressive than NIKL to allow rapid checking for disjointness of two class concepts in order to support efficient resolution theorem proving. KRYPTON has not as yet been used in any natural language processor. 7. Conclusions Our conclusions regarding the hybrid representation approach of intensional logic plus NIKL-based axioms to define constants are based on three kinds of efforts: • Bringing Janus up on</context>
</contexts>
<marker>27.</marker>
<rawString>Schmolze, J.G., Lipkis, T.A. Classification in the KL-ONE Knowledge Representation System. Proceedings of the Eighth International Joint Conference on Artificial Intelligence, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N K Sondheimer</author>
<author>B Nebel</author>
</authors>
<title>A Logical-form and Knowledge-base Design for Natural Language Generation.</title>
<date>1986</date>
<booktitle>Proceedings AAAI-86 Fifth National Conference on Artificial Intelligence, The American Association for Artificial Intelligence,</booktitle>
<pages>612--618</pages>
<location>Los Altos, CA,</location>
<contexts>
<context position="959" citStr="[28]" startWordPosition="144" endWordPosition="144"> of the semantics of utterances and a taxonomic language with formal semantics for specification of descriptive constants and axioms relating them. Remarkably, 99.9% of 7,000 vocabulary items in our natural language applications could be adequately axiomatized in the taxonomic language. 1. Introduction Hybrid representation systems have been explored before (9,24, 31], but until now only one has been used in an extensive natural language processing system. KL-TWO [31], based on a propositional logic, was at the core of the mapping from formulae to lexical items in the Penman generation system [28]. In this paper we report some of the design decisions made in creating a hybrid of an intensional logic with a taxonomic language for use in Janus, BBN&apos;s natural language system, consisting of the IRUS-II understanding components [5] and the Spokesman generation components. To our knowledge, this is the first hybrid approach using an intensional logic, and the first time a hybrid representation system has been used for understanding. In Janus, the meaning of an utterance is represented as an expression in WML (World Model Language) [15], which is an intensional logic. However, a logic merely </context>
<context position="36950" citStr="[28]" startWordPosition="5995" endWordPosition="5995"> Work Several hybrid representation schemes have been created, although only ours seems to have explored a hybrid of intensional logic with an axiomatizable frame system. The most directly related efforts are the following: • KL-TWO [31], which marries a frame system (NIKL) with propositional logic (RUP [20]). Limited inference in propositional logic is the goal of KL-TWO. Limited aspects of universal quantification are achieved via allowing demons in the inference process. KL-TWO and its classification algorithm [27] are at the heart of the lexicalization process of the text generator Penman [28]. • KRYPTON [9], which marries a frame system with first-order logic. The frame system is designed to be less expressive than NIKL to allow rapid checking for disjointness of two class concepts in order to support efficient resolution theorem proving. KRYPTON has not as yet been used in any natural language processor. 7. Conclusions Our conclusions regarding the hybrid representation approach of intensional logic plus NIKL-based axioms to define constants are based on three kinds of efforts: • Bringing Janus up on two large expert system and data base applications within DARPA&apos;s Battle Managem</context>
</contexts>
<marker>28.</marker>
<rawString>Sondheimer, N. K. and Nebel, B. A Logical-form and Knowledge-base Design for Natural Language Generation. Proceedings AAAI-86 Fifth National Conference on Artificial Intelligence, The American Association for Artificial Intelligence, Los Altos, CA, Aug, 1986, pp. 612-618.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N K Sondheimer</author>
<author>R M Weischedel</author>
<author>R J Bobrow</author>
</authors>
<title>Semantic Interpretation Using KL-ONE.</title>
<date>1984</date>
<booktitle>Proceedings of COLING-84 and the 22nd Annual Meeting of the Association for Computational Linguistics, Association for Computational Linguistics,</booktitle>
<pages>101--107</pages>
<location>Stanford, CA,</location>
<contexts>
<context position="29473" citStr="[7, 29]" startWordPosition="4778" endWordPosition="4779">ible ways, but only where there seems to be clear benefit. In telegraphic language, omitted prepositions, as in List the creation date file B, may arise. Alternatively, if the NLP system is part of a speech understanding system, prepositions are among the most difficult words to recognize reliably. Omitted prepositions could be treated with the same heuristic as implemented for interpreting the meaning of have, with, and of. However, we have chosen a different inference technique for omitted prepositions. Though one could represent selection restrictions directly in a taxonomy (as reported in [7, 29]), selection restrictions in Janus are stored separately, indexed by the semantic class of the head word. We believe it more likely that Janus will have the selectonal pattern involving the omitted preposition, than that the omitted preposition corresponds to a usage unknown to Janus and inferable from the domain model relations. Consequently, Janus applies the selection restrictions corresponding to all senses of the known head, to find what senses are consistent with the proposed phrase and with what prepositions. In practice, this gives rise to far fewer possibilities than considering all r</context>
</contexts>
<marker>29.</marker>
<rawString>Sondheimer, N.K., Weischedel, R.M., and Bobrow, R.J. Semantic Interpretation Using KL-ONE. Proceedings of COLING-84 and the 22nd Annual Meeting of the Association for Computational Linguistics, Association for Computational Linguistics, Stanford, CA, July, 1984, pp. 101-107.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Stallard</author>
</authors>
<title>Answering Questions Posed in an Intensional Logic: A Multilevel Semantics Approach.</title>
<date>1987</date>
<booktitle>In Research and Development in Natural Language Understanding as Part of the Strategic Computing Program,</booktitle>
<tech>Report No. 6522.</tech>
<volume>4</volume>
<pages>35--47</pages>
<location>Cambridge, Mass.,</location>
<contexts>
<context position="22793" citStr="[30]" startWordPosition="3709" endWordPosition="3709">ited (not locally defined) role does; then one walks up the ancestor chain(s) only to find the closest applicable role. Thus, in many cases, &amp;quot;semantic reasoning&amp;quot; is reduced to efficient table lookup. 4.1.3. Relation to Underlying System Adopting WML offers the potential of simplifying the mapping from surface form to semantic representation, although it does increase the complexity of mapping from WML to executable code, such as SOL or expert system function calls. The mapping from intensional logic to executable code is beyond the scope of this paper; our first implementation was reported in [30]; the current implementation will be described elsewhere. This process makes use of a model of underlying system capabilities in which each element relates a set of domain model constants to a method for accessing the related information in the database, expert system, simulation program, etc. For example, the constant HARPOON-CAPABLE, which defines a set of vessels equipped with harpoon missiles, is associated with an underlying system model element which states how to select the subset of exactly those vessels. In a Navy relational data base that we have dealt with, the relevant code selects</context>
</contexts>
<marker>30.</marker>
<rawString>Stallard, David. Answering Questions Posed in an Intensional Logic: A Multilevel Semantics Approach. In Research and Development in Natural Language Understanding as Part of the Strategic Computing Program, R. Weischedel, D.Ayuso, -A. Haas, E. Hinrichs, R. Scha, V. Shaked, D. Stallard, Eds., BBN Laboratories, Cambridge, Mass., 1987, ch. 4, pp. 35-47. Report No. 6522.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Vilain</author>
</authors>
<title>The Restricted Language Architecture of a Hybrid Representation System.</title>
<date>1985</date>
<booktitle>Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc.,</booktitle>
<pages>547--551</pages>
<location>Los Angeles, CA,</location>
<contexts>
<context position="827" citStr="[31]" startWordPosition="121" endWordPosition="121">d generation system (Janus), we have used a hybrid approach to representation, employing an intensional logic for the representation of the semantics of utterances and a taxonomic language with formal semantics for specification of descriptive constants and axioms relating them. Remarkably, 99.9% of 7,000 vocabulary items in our natural language applications could be adequately axiomatized in the taxonomic language. 1. Introduction Hybrid representation systems have been explored before (9,24, 31], but until now only one has been used in an extensive natural language processing system. KL-TWO [31], based on a propositional logic, was at the core of the mapping from formulae to lexical items in the Penman generation system [28]. In this paper we report some of the design decisions made in creating a hybrid of an intensional logic with a taxonomic language for use in Janus, BBN&apos;s natural language system, consisting of the IRUS-II understanding components [5] and the Spokesman generation components. To our knowledge, this is the first hybrid approach using an intensional logic, and the first time a hybrid representation system has been used for understanding. In Janus, the meaning of an u</context>
<context position="36583" citStr="[31]" startWordPosition="5938" endWordPosition="5938">E base vocabulary if general-purpose primitives were to result. On the other hand, concrete concepts corresponding to a lower level of abstraction seem obtainable from LDOCE. In particular the LDOCE definitions of units of measurement for the avoirdupois and metric systems were very useful. A more detailed analysis of our experience is presented in [23]. 6. Related Work Several hybrid representation schemes have been created, although only ours seems to have explored a hybrid of intensional logic with an axiomatizable frame system. The most directly related efforts are the following: • KL-TWO [31], which marries a frame system (NIKL) with propositional logic (RUP [20]). Limited inference in propositional logic is the goal of KL-TWO. Limited aspects of universal quantification are achieved via allowing demons in the inference process. KL-TWO and its classification algorithm [27] are at the heart of the lexicalization process of the text generator Penman [28]. • KRYPTON [9], which marries a frame system with first-order logic. The frame system is designed to be less expressive than NIKL to allow rapid checking for disjointness of two class concepts in order to support efficient resolutio</context>
</contexts>
<marker>31.</marker>
<rawString>Vilain, M. The Restricted Language Architecture of a Hybrid Representation System. Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc., Los Angeles, CA, August, 1985, pp. 547-551.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Weischedel</author>
</authors>
<title>Knowledge Representation and Natural Language Processing&amp;quot;.</title>
<date>1986</date>
<journal>Proceedings of the IEEE</journal>
<volume>74</volume>
<pages>905--920</pages>
<contexts>
<context position="7250" citStr="[32]" startWordPosition="1103" endWordPosition="1103">; that simplicity is at the expense of using a more powerful semantic interpreter and of sacrificing compositionality in those cases where language itself appears non-compositional. • Real-time inference strategies are a challenge for so rich a logic. However, our hypothesis is that large classes of the linguistic examples requiring common sense reasoning can be handled using limited inference algorithms on a taxonomic language. Arguments supporting this hypothesis appear in [2, 13] for interpreting nominal compounds; in [6, 7, 291, for common sense reasoning about modifier attachment; and in [32] for phenomena in definite reference resolution. This second disadvantage, the goal of tractable, real-time inference strategies, is the basis for adding taxonomic reasoning to WML, giving a hybrid representation. 2.2. Why a Taxonomic Language Our hypothesis is that much of the reasoning needed in semantic processing can be supported by a taxonomy. The ability to pre-compile pre-specified inferential chains, to index them via concept name and role name, and to employ taxonomic inheritance for organizing knowledge were critical in selecting taxonomic representation to supplement WML. The well-d</context>
</contexts>
<marker>32.</marker>
<rawString>Weischedel, R.M. &amp;quot;Knowledge Representation and Natural Language Processing&amp;quot;. Proceedings of the IEEE 74, 7 (July 1986), 905-920.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Weischedel</author>
<author>R Bobrow</author>
<author>D M Ayuso</author>
<author>L Ramshaw</author>
</authors>
<title>Portability in the Janus Natural Language Interface.</title>
<date>1989</date>
<journal>Notebook of Speech and Natural Language Workshop,</journal>
<publisher>Morgan Kaufmann Publishers.</publisher>
<note>To be reprinted by</note>
<contexts>
<context position="24113" citStr="[33]" startWordPosition="3922" endWordPosition="3922"> have developed two complementary tools to greatly increase our productivity in porting BBN&apos;s Janus NL understanding and generation system to new domains. IRACO (3] supports learning lexical semantics from examples with only one unknown 197 word. IRACQ is used for acquiring the diverse, complex patterns of syntax and semantics arising from verbs, by providing examples of the verb&apos;s usage, Since IRACQ assumes that a large vocabulary is available for use in the training examples; a way to rapidly infer the knowledge bases for the overwhelming majority of words is an invaluable complement. KNACQ [33] serves that purpose. The domain model is used to organize, guide, and assist in acquiring the syntax and semantics of domain-specific vocabulary. Using the browsing facilities, graphical views, and consistency checker of KREME [1] on NIKL taxonomies, one may select any concept or role for knowledge acquisition. KNACQ presents the user with a few questions and menus to elicit the English expressions used to refer to that concept or role. To illustrate the kinds of information that must be acquired consider the examples in Figure 4. The vessel speed of Vinson The vessels with speed above 20 kno</context>
</contexts>
<marker>33.</marker>
<rawString>Weischedel, R.M., Bobrow, R., Ayuso, D.M., and Ramshaw, L Portability in the Janus Natural Language Interface. Notebook of Speech and Natural Language Workshop, 1989. To be reprinted by Morgan Kaufmann Publishers.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>