<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.728034">
A Polynomial Parsing algorithm for the toPological model
Synchronizing Constituent and DePendency Grammars,
Illustrated by German Word •rder Phenomena
</title>
<author confidence="0.363780666666667">
Kim Gerdes
ERSS (CNRS) &amp; Signes (Inria),
Universit6 Bordeaux 3
</author>
<affiliation confidence="0.179275">
kim.gerdes@u-bordeaux3.fr
</affiliation>
<address confidence="0.617676666666667">
Sylvain Kahane
odyco (CNRS),
Universit6 Paris 10
</address>
<email confidence="0.995955">
sk@ccr.jussieu.fr
</email>
<sectionHeader confidence="0.9932345" genericHeader="abstract">
Abstract
1 Introduction
</sectionHeader>
<bodyText confidence="0.999714647058824">
In this PaPer we investigate the comPutational
Problems resulting from the discrePancy between
the surface organization of a sentence and its
syntactic structure exPressing functional relations
between words. hese syntactic Phenomena are
addressed under terms like unbounded dePend-
encies or scrambling. his discrePancy is the
source of comPlex mechanisms such as move-
ment in Chomskyan models, functional uncer-
tainty in the functional e uations of G, or non
local features (like slash) in HPSG. Algorithms
for these mechanisms are NP-comPlete, but in-
troducing uPPer bounds on simultaneous mis-
matches makes these Phenomena Parsable in
Polynomial time. We show that the resulting
comPlexity is of (nK ) with K being this uPPer
bound.1
We consider the so-called toPological gram-
mars characterized by the synchronization of two
algebraic grammars (e uivalent C G), one gen-
erating the surface structure (the toPological
Phrase structure), the other generating the deePer
structure (the functional or dePendency struc-
ture). he Parallel construction of the surface and
the deePer structure minimally handles the Prob-
lem of the discrePancy encountered in all formal
descriPtions of non-local word order Phenomena.
he lexicalized version of toPological gram-
mars Presented in this PaPer lends itself well to
be used in a CKY tyPe algorithm. he descriP-
tion of this algorithm sheds light on the Proce-
dural role of the concePt underlying the slash
feature and the dual role of the visitor feature
introduced here (following Hudson 000).
ormal toPological grammars have been intro-
duced indePendently by Debusmann &amp; Duchier
001 and Gerdes &amp; Kahane 001. ReaPe 1
and Kathol 1 have formalized the classical
concePt of toPology in HPSG without, however,
exPlicitly considering an indePendent toPological
Phrase structure. ore or less comPlete toPologi-
cal grammars have been develoPed for Czech,
Dutch, German, odern Greek, Korean, Arabic,
and rench (Boar 00 , Yoo 003, Yoo &amp;
Gerdes 00 , El Kassas 00 , Gerdes &amp; Kahane
00 ). Different imPlementations for toPological
grammars exist: DG (Debusmann et al. 003)
uses the unsPecialized z constraint based lan-
guage, making DG Parsing NP-hard as show
Koller &amp; Striegnitz 00 (although one obtains
Polynomial time in the average case, Duchier
</bodyText>
<note confidence="0.45395675">
1 he linguistic relevance of this uPPer bound has been dis-
cussed for examPle in Becker et al. 11, arguing that ree
Ad✆ oining Grammar caPture the Performance limit on ex-
tractions in German.
</note>
<bodyText confidence="0.999800533333333">
his PaPer describes a minimal toPol-
ogy driven Parsing algorithm for toPo-
logical grammars that synchronizes a
rewriting grammar and a dePendency
grammar, obtaining two linguistically
motivated syntactic structures. he use
of non-local slash and visitor features
can be restricted to obtain a CKY tyPe
analysis in Polynomial time. German
long distance Phenomena illustrate the
algorithm, bringing to the fore the Pro-
cedural needs of the analyses of syn-
tax-toPology mismatches in constraint
based aPProaches like for examPle
HPSG.
</bodyText>
<page confidence="0.95292">
1097
</page>
<note confidence="0.5383834">
Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 1097–1104,
Sydney, July 2006. c�2006 Association for Computational Linguistics
003); DeP in is a generation system based on a
Procedural linearization grammar (Gerdes &amp; Yoo
003), and Clement et al. 00 and rank 003
</note>
<bodyText confidence="0.999076604651163">
translate toPological grammars into the G oP-
Position between c- and f-structures allowing the
use of G analyzers (for which exist NP hard-
ness results). o our knowledge, the HPSG aP-
Proach has not been imPlemented. None of these
aPProaches has exPlored the theoretical algo-
rithmic ProPerties of an exact toPological analy-
sis (leaving aside stochastic aPProaches). How-
ever, the theoretical Problems of the uPPer
bounds for the number of extractions have been
studied in neighboring dePendency-based for-
malisms by Kahane et al. 1 and Br ker 000.
ur contribution shows how the toPology-
syntax discrePancy can minimally be seen as two
grammars that synchronously construct two in-
dePendent structures. We believe that the intro-
duction of the dual slash and visitor features al-
lows for a better comPrehension of the Proce-
dural mechanisms at stake in the unbounded de-
Pendencies handling and the (not necessarily aP-
Parent) similarities between formalisms such as
G, HPSG, or dePendency grammars.
Section Presents the grammar formalism,
exemPlifying it by a German toy grammar and
Section 3 is devoted to the Parsing algorithm we
ProPose.
he grammar formalism
ur grammar contains three modules: a syntactic
grammar, a toPological grammar, and the toPol-
ogy-syntax interface. We will Present these three
modules, exemPlifying each of them by a toy
grammar for German. Although very simPle, this
grammar covers a great Part of the verbal syntax
of German (Bech 1 ), including the main
scrambling Phenomena. or a more comPlete
grammar of German and for grammars of other
languages in the same theoretical framework, see
the references in our introduction.
It should be noted that the formalism we Pro-
Pose here differs slightly from the Previous for-
mal Presentation of the toPological model, bring-
ing to the fore the synchronization of two gram-
mars and the interface grammar.
</bodyText>
<sectionHeader confidence="0.502012" genericHeader="method">
.1 he syntactic grammar
</sectionHeader>
<bodyText confidence="0.999502545454546">
he syntactic module is a classic dePendency
grammar and generates unordered dePendency
trees. he Parameters to instantiate are the vo-
cabulary V, the set of (lexical) categories C, the
initial category IC, the set of syntactic roles R,
and the set of lexical rules. A lexical rule assigns
a category and a valence list to a word. A va-
lence slot is a couPle (r,C) where r is a syntactic
role and C a category. he initial category IC
gives the category of the root of the dePendency
tree.
</bodyText>
<figure confidence="0.2963984">
ExamPle
V = the German words
C = { Vfin, Vzu, Vinf, VPP, N}
(Vfin = finite verb, Vzu = infinitive with zu, Vinf
= bare infinitive, VPP = Past ParticiPle)3
R = { subj, obj, vcom✁}
IC = Vfin
DePendency rules
hat `has :Vfin,val:&lt;(subj,Nnom),(vcom✁,VPP)&gt;
gelesen `read : VPP, val:&lt;(obj,Nacc)&gt;
</figure>
<bodyText confidence="0.99894925">
he last rule says that gelesen is a Past ParticiPle
governing a nominal ob ect at the accusative
case. ur grammar generates dePendency trees
such as ig. 1 for the sentence (1):
</bodyText>
<subsubsectionHeader confidence="0.362742">
(1) Den Roman hat diesem Mann niemand
</subsubsectionHeader>
<bodyText confidence="0.656286">
the novel has to-this man nobody
vers✂
</bodyText>
<subsectionHeader confidence="0.529502">
zu lesen rochen
</subsectionHeader>
<bodyText confidence="0.930456642857143">
to read Promised
`Nobody Promised to this man to read
the novel .
We do not Present the treatment of modifiers when the
governor is selected by the dePendent. his does not Pose
any technical Problems but it necessitates Particular rules
that we will not Present here (for the treatment of modifier
in a dePendency grammar see for examPle Nasr 1 ; vari-
ous ProPositions in HPSG can also be adaPted here). Nei-
ther do we exPatiate uPon the oPtionality of some syntactic
arguments.
3 or the sake of simPlicity we give a very rough Presenta-
tion of the category. or nouns, cases are added in their
names (Nnom, Ngen, Ndat, and Nacc).
</bodyText>
<figure confidence="0.9744495625">
vcom
obj
(Nnom) niemand
`nobody✟
(Vzu) zu lesen
`to read
(Nacc) den Roman
`the novel
(Ndat) diesem ann
`to this man
obj
(Vfin) hat `has
vcom✡
subj (VPP) versProchen
`Promised
ig. 1. A dePendency tree
</figure>
<page confidence="0.988373">
1098
</page>
<bodyText confidence="0.985014414634147">
fields and the main verb occuPies the second
field, the first field vf containing exactly one
element. In the embedded domain, the head oc-
cuPies the right bracket, which is then the head
field. A verb in the right bracket offers a Place to
its left called the berfeld (of) for a verbal de-
Pendent. ig. is a graPhical rePresentation of
the toPological structure of the non marked sen-
tence (,). Boxes are rePresented by circles and
fields by s uares.
oPological rules only describe the field struc-
ture of the boxes. Rules stating which word can
head which box in which field are Part of the in-
terface grammar. Without these rules our toPo-
logical grammar overgenerates, allowing every
box to go into any field.
.3 he toPology-syntax interface
he toPology-syntax interface synchronizes the
syntactic grammar and the toPological grammar.
An interface rule associates the Positioning of a
dePendency node with the Positioning of the cor-
resPonding toPological box.
Each box bºB is associated to an integer P(b),
called its Permeability, controlling which con-
stituent can emanciPate from it.
(C,,r,C,b,,f,b,☎
An interface rule is a 7-tuPle ),
where C,,CºC, rºR, b,,bºB, fºF, and is an
integer called the Permeability level. he rule
can be read in two e uivalent ways: ,) if a word
w of category (cat) C dePends on a word w, of
cat C, by a syntactic relation r, then w can head
a box b Placed in a field f of a box b, containing
w, and seParated from b, by boxes of Permeabil-
ity &lt; (synthesis reading); ) if a word w of cat
C heads a box b Placed in a field f of a box b,
containing a word w, of cat C, and seParated
from b, by boxes of Permeability &lt; , then w
can dePend on w, by a syntactic relation r
(analysis reading). he rule is schematized in the
following figure:
</bodyText>
<subsectionHeader confidence="0.365811">
b,
</subsectionHeader>
<bodyText confidence="0.930157666666667">
f
b✟
Dotted lines rePresent synchronizing links. If a
word w labeling a dePendency node synchro-
nizes with a box b, we say that w heads b.
ur three grammars con ointly Produce a de-
Pendency tree and a toPological tree whose
nodes are synchronized. he two structures are
generated Parallelly, each one constraining the
</bodyText>
<figure confidence="0.966117842105263">
nP
vc
nP
nP
md
vf • mf rb
of
�
vc
den
Roman
diesem
Mann
niemand
zu
desen
vers✂ rochen
hat
.he toPological grammar
</figure>
<bodyText confidence="0.999778454545455">
he toPological grammar ProPer generates the
toPological structures, which are ordered con-
stituent trees. Such a grammar differs slightly
from traditional C Gs by distinguishing con-
stituents from Positions for constituents, i.e.
boxes (= toPological constituent) and fields
(= Positions in a box). A grammar rule indicates
for each box its list of fields and how many
boxes it can contain for each field. hree values
for the filling Parameter of a field are Possible:
exactly one element (!), at most one element (&apos;)
and any number of elements (u). A field is called
obligatory if its filling Parameter is L
he Parameters to instantiate are the set of box
names B, the set of field names F, the initial box
(ib), and the set of rules.
or the sake of simPlicity, in this Presentation,
we adoPt a flat structure, with exactly one box
headed by each word of the sentence. We lose a
Part of the economy of the system (that reuses
the same boxes at different levels) but the Pres-
entation of the Parsing algorithm will be clearer.
</bodyText>
<equation confidence="0.754606307692308">
ExamPle
B = { md, ed, vc, nP }
(md = main domain, ed = embedded domain, vc =
verb cluster, nP = nominal Phrase)
F = I vf, mf, nf, rb, of, • }
(vf = Vorfeld, mf = ittelfeld, nf = Nachfeld, rb =
right bracket, of = berfeld, • = head field)
ib = md
oPological rules
md £ vf� • mf� rb&apos; nf�
ed £ mf� of&apos; • nf�
vc £ of&apos; •
ig. . he toPological structure of (,)
</equation>
<bodyText confidence="0.78846">
ur first rule is the classical toPological model of
German: a main domain is comPosed of five
</bodyText>
<equation confidence="0.568201666666667">
C,
r
C
</equation>
<page confidence="0.882602">
1099
</page>
<table confidence="0.522492333333333">
other. Synchronizing links are Part of the gener-
ated language (Kahane 00 ).
ExamPle
Permeability
P(vc)=1, P(ed)=P(xP)= , P(md)=3.
Interface rules
</table>
<bodyText confidence="0.951213176470588">
or a noun we have one basic rule: a noun de-
Pending on a verb can head an NP in any ma or
field (vf/mf/nf) wherever is the verb; it can cross
over vc and ed boxes:
(V, subj/obj, N, md/ed/vc, vf/mf/nf, nP, )
Note that in German, contrarily to English, the
Placement of a NP does not actually dePend on
its syntactic role.
or a non-finite verb we have two rules:
- one is similar to the rule for nouns: a verb
can head an embedded domain in any ma or
field:
vcom✂
(V, , V—fin, md/ed/vc, vf/mf/nf, ed, )
- the other is sPecific to the German(ic) syn-
tax: a non-finite verb can be Placed in the
right bracket (rb) or at the left of its verbal
governor (in the of field) if this governor is
already in the right bracket:
vcom✄
(V, , V—fin, md/ed/vc, of/rb, vc, 0)
his last rule can be aPPlied recursively, forming
a string of verbs called a verb cluster. he de-
Pendents of verbs of a same cluster can be freely
shared out in the ma or fields of the same do-
main. his ProPerty Produces what is called
scrambling. In our model this re uires an exten-
sive use of emanciPation, allowing any dePend-
ent of a verb to be Placed in a domain headed by
a verbal ancestor. EmanciPation is also Possible
outside the embedded domain, although this
would re uire sPecific strong information Pack-
aging constraints (not reflected in this toy gram-
mar).
</bodyText>
<sectionHeader confidence="0.93405" genericHeader="method">
3. he Parsing algorithm
</sectionHeader>
<bodyText confidence="0.991825166666667">
We begin with a Presentation of the algorithm
when there is no emanciPation. In this case the
toPological structure and the dePendency struc-
ture are built in Parallel, i.e. each combination of
linear segments corresPonds to a functional com-
We do not develoP the nominal toPology in this examPle
grammar.
An initial rule states that the root Vfin heads the initial box
md.
bination. When emanciPations are allowed the
Parsing will be driven by the toPological struc-
ture only.
</bodyText>
<subsectionHeader confidence="0.996925">
3.1 he algorithm without emanciPation
</subsectionHeader>
<bodyText confidence="0.975691108695652">
he PhilosoPhy of a CKY algorithm is to begin
Parsing one word segments of the sentence, to
store the minimum of information in a Parse ma-
trix, and to Parse bigger and bigger segments by
concatenation of segments Previously Parsed.
In the algorithm for C G, if we have two con-
secutive segments from i to j and from j 1 to k of
cat C1 and C and if we have a rule C—&gt;C1C,
then we Postulate a segment from i to k of cat C.
he recurrence steP is then:
[i,j,cat:C1] (D [j 1,k,cat:C] ® (C—&gt;C1C)
= [i,k,cat:C]
In our case, the entries of our Parse matrix are of
the form [i,j,cat:C,val:X,box:b,fieldsY] where i
and j delimit the segment, C is the category of
the head, X is the list of free valence slots, b is
the toPological box name of the segment, and Y
the list of non-saturated fields of b (including the
head field •, indicating which fields are on the
left or on the right)
Initialization steP
If the i-th word of the sentence we want to Parse
can have 1) the cat C, ) the valence X and 3) a
word of cat C can head a box b and if ) there is
a toPological rule b—&gt;Y, then we store the seg-
ment [i,i,cat:C,val:X,box:b,fields:Y].
Recurrence steP
We combine two consecutive segments by aPPly-
ing an interface rule. ne of the two segments
must be saturated which means: 1) all the va-
lence slots of the head have been filled (and thus
val is an emPty list) ; ) all the fields of the box
are Potentially saturated, that is, there is no field
with the value ! left.
In the following recurrence steP, we suPPose that
the second segment is saturated and we note elist
the emPty valence list and sat any saturated field
list.
his distinguishes our aPProach from similar aPProaches
such as Kahane et al. 1 , which do not exPlicitly consider
a seParate toPological structure. Contrarily to this work,
where each emanciPation is handled by a dedicated lifting
Pro✑
rule, we do not really consider ectivity as the more nor-
mal case and we treat emanciPated and non-emanciPated
elements more or less in the same manner.
</bodyText>
<page confidence="0.965737">
1100
</page>
<figure confidence="0.6008725">
[i,j,cat:C1,val:X,box:b1,fields:Y]
G) [j 1,k,cat:C,val:elist,box:b,fields:sat]
® (C1, r, C, b1, f, b, )
=[i,k,cat:C1,val:Xe&lt;(r,C)&gt;,box:b1,fields:Yef]
</figure>
<bodyText confidence="0.999637846153846">
his steP is Possible if X contains a valence slot
(r,C) and then Xe&lt;(r,C)&gt; is the list X reduced
by (r,C). In the same way, Y must contain a
field f at the left of the head field; the fields be-
tween • and f must be non obligatory and are
suPPressed in Yef; moreover, the filling Parame-
ter of f is ad usted according to the fact that f
now contains a box.
he Parsing succeeds if our Parse matrix contains
at least one segment [1,n,cat:IC,val:elist,
box:ib,fields:sat]. If we keeP backPointers at
each steP in the algorithm, we have a comPact
rePresentation of the Parse forest.
</bodyText>
<sectionHeader confidence="0.667553" genericHeader="method">
3. he algorithm with emanciPation
</sectionHeader>
<bodyText confidence="0.99966885106383">
An emanciPated constituent is not in the maxi-
mal Pro ection of its governor, i.e. it is not in the
box headed by its governor. Consider the follow-
ing examPle of Partial VP-fronting:
( ) Gelesen hat Maria den Roman.
read has aria the novel
` aria read the novel
In ( ), the Past ParticiPle gelesen heads an em-
bedded domain in vf. Its ob ect den Roman is
emanciPated and Placed in the field mf of the
main domain. SuPPose we want to aPPly our
Previous algorithm (the CKY Parsing without
emanciPation). We can easily Parse the segments
gelesen, hat Maria, and den Roman, but neither
gelesen and hat Maria (gelesen not saturated),
nor hat Maria and den Roman (no valence for
den Roman) can be combined.
ur Parsing will be driven by the toPological
structure and the condition of the toPological
saturation of the dePendent is maintained. wo
cases of combination of segments are Possible.
he first case is illustrated by the combination
between hat Maria and gelesen, where gelesen
still exPects a dePendent. herefore we do not
re uire the valence of the toPological Phrase to
be saturated and we must Percolate it in a sPecial
feature similar to the slash feature of G/HPSG
(Gazdar et al. 1 , Pollard &amp; Sag 1 )
he second case is illustrated by the combina-
tion between den Roman and hat Maria. In this
case we do not trigger a corresPondence rule be-
cause no dePendency must be built. We must
store den Roman in a sPecial feature we call visi-
tor (see Hudson 000 for a similar device),
which is the converse of the slash feature. he
slash feature allows us to lift uP a need (a va-
lence slot to be filled), while the visitor feature
allows handing down a resource (that will fill a
valence slot). r more Precisely in our case: he
visitor allows a governor to keeP a non-solicited
segment while waiting for an element that can
take this element in its valence.
Note however that, with our conditions on the
saturation of toPological constituents, the two
strategies are not interchangeable and they are
both necessary. et us consider two new exam-
Ples.
</bodyText>
<listItem confidence="0.831252">
(3) Maria hat den Roman gelesen.
</listItem>
<bodyText confidence="0.976314647058823">
aria has the novel read
` aria read the novel
Although the sentence (3) is Pro ective, den Ro-
man must be analyzed as an emanciPated con-
stituent. Indeed, gelesen is in the right bracket of
the main domain and the maximal Pro ection of
gelesen, the verb cluster, does not contain its de-
Pendent den Roman, which is in the ittelfeld of
the main domain headed by hat. rom a toPo-
logical Point of view, den Roman can only com-
bine with hat but it is not in the valence of hat
and it must be considered a visitor.
( ) Ich glaube, dass den Roman Maria
I think that the novel aria
gelesen hat.
read has
`I think that aria read the novel
In ( ), gelesen hat forms a verb cluster in the
right bracket of a comPlementizer Phrase. he
NP den Roman is still emanciPated and, from the
toPological viewPoint, it cannot combine with its
governor gelesen. It also cannot combine with
hat because they are seParated by Maria and ge-
lesen. he smallest toPological Phrase containing
den Roman and gelesen also contains hat. here-
fore the slash strategy is needed and gelesen and
hat must combine before combining with den
Roman (and Maria).
We make two ma or changes in our Previous
algorithm. n the one hand we rePlace the val
feature by two new features:
• the vis(itor) feature, which stores triPles
(C,b,f) indicating that a box b of head C
has been Placed in the field f;
</bodyText>
<page confidence="0.986701">
1101
</page>
<bodyText confidence="0.9985095">
• the slash feature, which stores valence
slots of the head as well as the non satu-
rated slots of its dePendents.
n the other hand we Proceed in two stePs: first
we combine consecutive segments without trig-
gering interface rules, by storing all information
in our vis and slash features; second we trigger
interface rules to reduce the contents of vis and
slash features.
Initialization steP
he segment [i,i,cat:C,val:X,box:b,fields:Y] of
the Previous algorithm is rePlaced by [i,i,cat:C,
vis:elist,slash:X ,box:b,fields:Y] where each va-
lence slot (r,C ) of X gives a slash slot
(C,r,C ,0), with C the cat of the head and 0 indi-
cating that this slash slot has not emanciPated
across any box.
Combination steP
he combination is driven by the toPological
structure, so one of the two segments combined
must be toPologically saturated (fields:sat) but
we no longer re uire that the valence of this
segment is saturated: its free valence slot will be
slashed.
</bodyText>
<sectionHeader confidence="0.350557" genericHeader="method">
[i,j,cat:C,,vis:Z,slash:X,,box:b,,fields:Y] G)
</sectionHeader>
<bodyText confidence="0.999812461538462">
[j ,,k,cat:C,vis:elist,slash:X,box:b,fields:sat]
= [i,k,cat:C,,vis:ZG)&lt;(C,f,b)&gt;,slash:X,G)X,
box:b,,fields:Yef]
where each -tuPle (C,r, C , ) of X gives a -
tuPle (C,r,C , ) with the max of and P(b,),
the Permeability of b,.
In other words the second segment is Placed in
the field f and this is stored in the visitor feature
(cf. (C,f,b)). At the same time the slash content
X of the second segment is added to the slash
content of the first segment, but we must indicate
that these valence slots have crossed the box b,
and this is why the Permeability level is ad usted.
</bodyText>
<subsectionHeader confidence="0.576277">
Reduction steP
</subsectionHeader>
<bodyText confidence="0.9855">
[i, j, cat:C, vis:ZG)&lt;(C,f,b)&gt;, slash:XG)
&lt;(C,,r,C,� )&gt;, box:b,, fields:Y]
® (C,, r, C, b,, f, b, )
= [i, j, cat:C, vis:Z, val:X, box:b,, fields:Y]
Provided that &lt; .
A reduction is Possible if vis and slash contain
elements referring to the same category C: the
vis element (C,f,b) says that we have encoun-
tered a box b of head C in the field f , while the
</bodyText>
<subsectionHeader confidence="0.479472">
(C,,r,C,�
</subsectionHeader>
<bodyText confidence="0.952931833333333">
slash element ) indicates that a word
of cat C is re uired to fill the r valence slot of a
word of cat C,. If furthermore the slashed slot
has not crossed over boxes of Permeability
(�
greater than &lt; ), then the interface rule
(C,, r, C, b,, f, b, ) can aPPly and the segment
can be reduced.
he Parsing succeeds if the Parse matrix contains
a segment [,,n,cat:IC,vis:elist,slash:elist,
box:ib,fields:sat], where n is the length of the
sentence.
</bodyText>
<subsectionHeader confidence="0.976128">
ExamPle: Parsing of Den Roman hat Maria zu
vers
</subsectionHeader>
<bodyText confidence="0.91939025">
lesen rochen (cf. (,)). We focus on the
combination of the segment den Roman hat
Maria (where den Roman is a visitor) with the
vers
verb cluster zu lesen rochen.
den Roman hat Maria: S, = [,, , cat:Vfin,
vis:&lt;(Nacc,vf,nP)&gt;, slash:&lt;(Vfin,aux,VPP,0)&gt;,
box:md, fields: •mf`rb?nf`]
</bodyText>
<subsubsectionHeader confidence="0.50901">
vers
</subsubsectionHeader>
<bodyText confidence="0.9972252">
zu lesen rochen: S = [ , 7, cat:VPP,
vis:elist, slash:&lt;(Vzu,dob ,Nacc,,)&gt;, box:vc,
fields:-]
he segment S is toPologically saturated, so S,
and S can combine.
</bodyText>
<equation confidence="0.7716495">
S = S,G)S =
[,,7, cat:Vfin, vis:&lt;(Nacc,vf,nP), (VPP,rb,vc)&gt;,
</equation>
<bodyText confidence="0.848279666666667">
slash:&lt;(Vfin,aux,VPP,0), (Vzu,ob ,Nacc,,)&gt;,
box:md, fields: -nf`]
S can be reduced twice
- by merging (aux,Vfin,VPP,0) and (VPP,rb,vc)
using the interface rule (V,aux,V—fin, md, rb,
vc, 0)
- and by merging (Vzu,dob ,Nacc,vc) and
(Nacc,vf,nP) using the interface rule
(V,dob ,N,md,vf,vc, ).
After reduction, S = [,,7,cat:Vfin, vis:elist,
slash:elist, box:md, fields: -nf`], Proving that (,)
is a grammatical sentence of German.
</bodyText>
<subsectionHeader confidence="0.999047">
3.3 ComPlexity
</subsectionHeader>
<bodyText confidence="0.9998365">
he Parse matrix of a CKY algorithm has less
than n entries, where n is the length of the sen-
tence Parsed. In the C G case, the number of
Possible segment descriPtions is bounded by the
number of categories, which we call C. o fill a
new entry in the Parse matrix at least n combina-
tions of two entries must be considered and the
number of oPerations is bounded by GC n3,
where G is the number of rules (each combina-
tion involves a grammar rule).
In the algorithm without emanciPation the num-
ber of Possible descriPtions of segments is still
</bodyText>
<page confidence="0.99204">
1102
</page>
<bodyText confidence="0.999977125">
bounded and the comPlexity remains (n3).
However if we want to retrieve the dePendency
forest (Nasr 003) we need to store backPointers,
that is the Place of the head in each segment
descriPtion; the number of segment descriPtions
goes uP by a factor n and the comPlexity be-
comes (n )7.
he slash and visitor features are more exPen-
sive: We assume the slash and visitor sets to be
bounded by K, i.e. we suPPose that we do not
need to keeP more than K entries in the slash and
visitor sets at a time. Conse uently the number
of segment descriPtions remains bounded by
CVK, where V is the number of valence slot de-
scriPtions, and the algorithm comPlexity is still
of tyPe (n3). But if we introduce backPointers
to retrieve the dePendency forest, we need to
keeP them in valence slot descriPtions in order to
remember which word has a valence slot to fill.
he number of segment descriPtions is thus
bounded by CVKnK1 and the time comPlexity of
the algorithm is in (nK ). We avoid exPonen-
tial growth only because we restrict the number
of slash and visitor entries of each configuration.
</bodyText>
<sectionHeader confidence="0.765384" genericHeader="conclusions">
Conclusion
</sectionHeader>
<bodyText confidence="0.998999580645161">
We have ProPosed a Parsing algorithm for the
toPological model that is minimal in the sense
that its additional exPonential growth (the factor
K) corresPonds exactly to the number of mis-
matches between functional dePendency and
toPological constituency. In different terms,
given we want to construct the toPological and
the dePendency structures, two indePendent and
linguistically significant structures, and given
two seParate grammars exPressing the con-
straints on the construction of these structures,
then the cost of adding the interface constraints is
exPonential Precisely in the number of memory
Positions needed in order to keeP track of the
differences between the two structures. Precise
Parsing of these three grammars cannot do with
less.
We could hyPothesize that the need of differenti-
ating more or less indePendent levels of syntactic
analysis (e.g. surface vs. deeP structure, ...),
which is at the origin of formalisms like G or
HPSG, algorithmically boils down to this exPo-
nentiality, at least concerning the syntax/surface
7 We do not attemPt to further oPtimize our algorithm. ol-
lowing Eisner 000&apos;s ideas it seems to be Possible to con-
strain the comPlexity to (n3).
exPressive needs. It might be interesting to com-
Pare these results with efficiency considerations
for HPSG as in Nishida et al. 001 and for re-
stricted graPh grammars for dePendency-
orientated generation (Bohnet &amp; Wanner 001).
ur bottom-uP strategy driven by the toPological
structure forces us to introduce tools e uivalent
to the slash feature of G/HPSG. We hoPe that
this Presentation sheds light on the Procedural
role of the slash feature, and on the comPlemen-
tary Possibility of a linguistic analysis using a
visitor feature.
It should be noted that, in sPite of its simPlicity,
the German toPological grammar Presented as an
examPle allows the control of syntactic con-
straints on Phenomena like scrambling, Partial
VP fronting, and auxiliary fliP, which demon-
strates the exPressivity of the toPological aP-
Proach. he grammars of languages like Czech
and odern Greek show that the toPological aP-
Proach allows for a straightforward integration of
information structure in the interface constraints.
Work is in Progress on exPerimental imPlemen-
tations of the Presented algorithm and on choos-
ing useful and linguistically accessible inPut and
outPut formats. Real values on efficiency will not
be available as long as the grammar does not
surPass exPerimental size. A linguistic study on
corPora might determine what tyPes of elements
are actually emanciPated and in Particular what
tyPes of elements can be emanciPated simultane-
ously, i.e. what list of slashed element are Possi-
ble, given that this is the main factor of comPlex-
ity of the algorithm (see Kiefer et al. 1 for
similar heuristic considerations for HPSG Pars-
ing).
</bodyText>
<sectionHeader confidence="0.996487" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999904">
We would like to thank Renaud arlet and the
three anonymous reviewers for their vast com-
ments and constructive criticism.
</bodyText>
<sectionHeader confidence="0.99726" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.989812111111111">
Bech, Gunnar, 1 , Studien fiber das deutsche Ver-
bum infinitum, nd edition 1 3, inguistische Ar-
beiten 13 , Niemeyer, iibingen.
Becker, ilman, Aravind K. Joshi, wen Rambow,
1 1, ong-Distance Scrambling and ree Ad☞oin-
ing Grammars. EACL I I
Bohnet, Bernd and eo Wanner, 001, n Using a
Parallel GraPh Rewriting Grammar ormalism in
Generation. Proceedings of the th Euro✏ean Na-
</reference>
<page confidence="0.814067">
1103
</page>
<reference confidence="0.975233233333333">
Worksho� ACL✁
Natural Language Generation (at ,
oulouse.
Bo✄ nd�e✄
ar, , 00 , Problems of Inducing arge Co-
verage Constraint-Based DePendency Grammar for
Worksho�
Czech. International on Constraint
Solving and Language Processing, Universitet,
Roskilde, PP. -.
Br✠ker, Norbert, 1 , SeParating Surface rder and
Syntactic Relations in a DePendency Grammars,
C☛LING-ACL , 17 -1 0.
Debusmann, RalPh, Denys Duchier and Joachim Nie-
hren, 00 , he XDG Grammar DeveloPment Kit,
Mozart/☛z
Second International Conference, Char-
leroi
Drach, Erich, 1 37, Grundgedanken der deutschen
rankfurt/✏
Satzlehre, Diesterweg, ..
Duchier, Denys, RalPh Debusmann, 001, oPologi-
cal DePendency rees: A Constraint-Based Ac-
count of inear Precedence, ACL 2001, 1 0- 7.
Duchier, Denys, 003, Configuration of labelled trees
under lexicalized constraints and PrinciPles, Jour-
nal of Research on Language and Com utation.
El Kassas, Dina, Sylvain Kahane, 00 , odelisation
de lordre des mots en arabe standard, JEP-✒ALN,
Worksho on Arabic Language Processing, ez,
-
.
Eisner, Jason (✆000). Bilexical grammars and their
cubic-time Parsing algorithms. In Harry Bunt and
Anton Ni✄holt (eds.), Advances in Probabilistic and
ther Parsing ✒echnologies, Pages -. Kluwer.
Pro✄
rank, Anette, 003, ecting G -Structures
from Chunks. LFG 2003, Saratoga SPrings, New
York, 17-37.
Gazdar, Gerald, Ewan Klein, Geoffrey Pullum and
Ivan Sag, 1 , Generalized Phrase structure
grammar, Harvard University Press, Cambridge.
Gerdes, Kim, Sylvain Kahane, 001, Word rder in
German: A ormal DePendency Grammar Using a
oPological Hierarchy, ACL 2001, 0-7.
Gerdes, Kim, Sylvain Kahane, 00 , amas verbal
au coeur dune modelisation toPologi ue, Linguisti-
cae Investigationes, :1, 101-11 .
Gerdes, Kim &amp; Hi-Yon Yoo, 003, a toPologie
comme interface entre syntaxe et Prosodie, un sys-
teme de generation aPPli ue au grec moderne,
✒ALN 2003, Batz-sur- er, 1 -13 .
Hudson Richard, 000, &amp;quot;Discontinuity&apos;, De endenc
Grammars,✒.A.L., 1:1, Hermes, Paris, 1 - .
Kahane Sylvain, 00 , Polarized Unification Gram-
mars, Coling -ACL 0✗, Sydney, P.
Kahane, Sylvain, Alexis Nasr, wen Rambow, 1 ,
Pseudo-Pro✄ectivity: a Polynomially Parsable Non-
Pro✄ective DePendency Grammar, C☛LING-
ACL , ontreal, -✓.
Kathol Andreas, 1 Linearization-based German
S✖nta✘, PhD thesis, hio State University.
Kiefer, B., H.-U. Krieger, J. Carroll, and R. alouf,
techni✕
1 , A bag of useful ues for efficient and
73—✝
robust Parsing. ACL 1 , 0.
Alexander Koller and Kristina Striegnitz. 00. Gen-
eration as dePendency Parsing. ACL 2002.
Nasr Alexis, 1 , A formalism and a Parser for
exicalised DePendency Grammars. th Int. Work-
sho on Parsing✒echnologies, SUNY Press.
Nasr, Alexis, 003, actoring surface syntactic struc-
tures. First International Conference on Meaning-
✒e✘t✒heor✖, Paris, .
-
Nishida, Ken✄i, Kentaro orisawa and Jun&apos;ichi su✄ii,
001, ComPiling an HPSG-based grammar into
more than one C G. PACLING 2001,1 --✆0 .
Nivre, Joakim. Jens Nilsson, 00 , Pseudo-Pro✄ective
DePendency Parsing, ACL 200✚, -10✔.
Pollard, C. and I. Sag, 1 , Head-Driven Phrase
Structure Grammar, CSI Publications.
Yoo, Hiyon &amp; Kim Gerdes, 00 , A dePendency ac-
count of Korean Word rder, Linguistic Societ✖of
Korea 200✙, Seoul.
Yoo, Hiyon 003, rdre des mots et rosodie : Essai
de descri tion et de formalisation our le grec mo-
derne, PhD thesis, Universite Paris 7.
</reference>
<page confidence="0.997778">
1104
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.455380">
<title confidence="0.992981666666667">A Polynomial Parsing algorithm for the toPological model Synchronizing Constituent and DePendency Grammars, Illustrated by German Word •rder Phenomena</title>
<author confidence="0.999592">Kim Gerdes</author>
<affiliation confidence="0.998725">ERSS (CNRS) &amp; Signes (Inria),</affiliation>
<address confidence="0.981613">Universit6 Bordeaux 3</address>
<email confidence="0.963376">kim.gerdes@u-bordeaux3.fr</email>
<author confidence="0.927741">Sylvain Kahane</author>
<affiliation confidence="0.987913">odyco (CNRS),</affiliation>
<address confidence="0.97704">Universit6 Paris 10</address>
<email confidence="0.984618">sk@ccr.jussieu.fr</email>
<abstract confidence="0.544576"></abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Gunnar Bech</author>
</authors>
<title>1 , Studien fiber das deutsche Verbum infinitum,</title>
<journal>nd edition</journal>
<volume>1</volume>
<location>Niemeyer, iibingen.</location>
<marker>Bech, </marker>
<rawString>Bech, Gunnar, 1 , Studien fiber das deutsche Verbum infinitum, nd edition 1 3, inguistische Arbeiten 13 , Niemeyer, iibingen.</rawString>
</citation>
<citation valid="false">
<authors>
<author>ilman Becker</author>
<author>Aravind K Joshi</author>
<author>wen Rambow</author>
</authors>
<title>ong-Distance Scrambling and ree Ad☞oining Grammars.</title>
<journal>EACL I I</journal>
<volume>1</volume>
<marker>Becker, Joshi, Rambow, </marker>
<rawString>Becker, ilman, Aravind K. Joshi, wen Rambow, 1 1, ong-Distance Scrambling and ree Ad☞oining Grammars. EACL I I</rawString>
</citation>
<citation valid="false">
<authors>
<author>Bernd Bohnet</author>
<author>eo Wanner</author>
</authors>
<title>001, n Using a Parallel GraPh Rewriting Grammar ormalism in Generation.</title>
<booktitle>Proceedings of the th Euro✏ean NaWorksho� ACL✁ Natural Language Generation (at ,</booktitle>
<pages>oulouse.</pages>
<marker>Bohnet, Wanner, </marker>
<rawString>Bohnet, Bernd and eo Wanner, 001, n Using a Parallel GraPh Rewriting Grammar ormalism in Generation. Proceedings of the th Euro✏ean NaWorksho� ACL✁ Natural Language Generation (at , oulouse.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Bo✄ nd�e✄ ar</author>
</authors>
<title>Problems of Inducing arge Coverage Constraint-Based DePendency Grammar for Worksho�</title>
<marker>ar, </marker>
<rawString>Bo✄ nd�e✄ ar, , 00 , Problems of Inducing arge Coverage Constraint-Based DePendency Grammar for Worksho�</rawString>
</citation>
<citation valid="false">
<authors>
<author>Czech</author>
</authors>
<booktitle>International on Constraint Solving and Language Processing,</booktitle>
<publisher></publisher>
<location>Universitet, Roskilde, PP.</location>
<marker>Czech, </marker>
<rawString>Czech. International on Constraint Solving and Language Processing, Universitet, Roskilde, PP. -.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Norbert Br✠ker</author>
</authors>
<title>1 , SeParating Surface rder and Syntactic Relations in a DePendency Grammars,</title>
<journal>C☛LING-ACL ,</journal>
<volume>17</volume>
<pages>0</pages>
<marker>Br✠ker, </marker>
<rawString>Br✠ker, Norbert, 1 , SeParating Surface rder and Syntactic Relations in a DePendency Grammars, C☛LING-ACL , 17 -1 0.</rawString>
</citation>
<citation valid="true">
<authors>
<author>RalPh Debusmann</author>
<author>Denys Duchier</author>
<author>Joachim Niehren</author>
</authors>
<date></date>
<journal>he XDG Grammar DeveloPment Kit, Mozart/☛z</journal>
<marker>Debusmann, Duchier, Niehren, </marker>
<rawString>Debusmann, RalPh, Denys Duchier and Joachim Niehren, 00 , he XDG Grammar DeveloPment Kit, Mozart/☛z</rawString>
</citation>
<citation valid="false">
<institution>Second International Conference,</institution>
<location>Charleroi</location>
<marker></marker>
<rawString>Second International Conference, Charleroi</rawString>
</citation>
<citation valid="false">
<authors>
<author>Erich Drach</author>
</authors>
<title>1 37, Grundgedanken der deutschen rankfurt/✏ Satzlehre,</title>
<location>Diesterweg, ..</location>
<marker>Drach, </marker>
<rawString>Drach, Erich, 1 37, Grundgedanken der deutschen rankfurt/✏ Satzlehre, Diesterweg, ..</rawString>
</citation>
<citation valid="true">
<authors>
<author>Denys Duchier</author>
</authors>
<title>RalPh Debusmann, 001, oPological DePendency rees: A Constraint-Based Account of inear Precedence,</title>
<date>2001</date>
<volume>1</volume>
<pages>7</pages>
<location>ACL</location>
<marker>Duchier, 2001</marker>
<rawString>Duchier, Denys, RalPh Debusmann, 001, oPological DePendency rees: A Constraint-Based Account of inear Precedence, ACL 2001, 1 0- 7.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Denys Duchier</author>
</authors>
<title>003, Configuration of labelled trees under lexicalized constraints and PrinciPles,</title>
<journal>Journal of Research on Language and Com</journal>
<marker>Duchier, </marker>
<rawString>Duchier, Denys, 003, Configuration of labelled trees under lexicalized constraints and PrinciPles, Journal of Research on Language and Com utation.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Dina El Kassas</author>
</authors>
<title>Sylvain Kahane, 00 , odelisation de lordre des mots en arabe standard,</title>
<booktitle>JEP-✒ALN, Worksho on Arabic Language Processing,</booktitle>
<location>ez, -.</location>
<marker>El Kassas, </marker>
<rawString>El Kassas, Dina, Sylvain Kahane, 00 , odelisation de lordre des mots en arabe standard, JEP-✒ALN, Worksho on Arabic Language Processing, ez, -.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Jason Eisner</author>
</authors>
<title>Bilexical grammars and their cubic-time Parsing algorithms.</title>
<booktitle>In Harry Bunt and</booktitle>
<marker>Eisner, </marker>
<rawString>Eisner, Jason (✆000). Bilexical grammars and their cubic-time Parsing algorithms. In Harry Bunt and</rawString>
</citation>
<citation valid="false">
<booktitle>Advances in Probabilistic and ther Parsing ✒echnologies, Pages -.</booktitle>
<editor>Anton Ni✄holt (eds.),</editor>
<publisher>Kluwer. Pro✄</publisher>
<marker></marker>
<rawString>Anton Ni✄holt (eds.), Advances in Probabilistic and ther Parsing ✒echnologies, Pages -. Kluwer. Pro✄</rawString>
</citation>
<citation valid="false">
<authors>
<author>Anette rank</author>
</authors>
<title>003, ecting G -Structures from Chunks.</title>
<booktitle>LFG 2003,</booktitle>
<pages>17--37</pages>
<location>Saratoga SPrings, New York,</location>
<marker>rank, </marker>
<rawString>rank, Anette, 003, ecting G -Structures from Chunks. LFG 2003, Saratoga SPrings, New York, 17-37.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Gerald Gazdar</author>
<author>Ewan Klein</author>
<author>Geoffrey Pullum</author>
<author>Ivan Sag</author>
</authors>
<title>Generalized Phrase structure grammar,</title>
<volume>1</volume>
<publisher>Harvard University Press,</publisher>
<location>Cambridge.</location>
<marker>Gazdar, Klein, Pullum, Sag, </marker>
<rawString>Gazdar, Gerald, Ewan Klein, Geoffrey Pullum and Ivan Sag, 1 , Generalized Phrase structure grammar, Harvard University Press, Cambridge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kim Gerdes</author>
</authors>
<title>Sylvain Kahane, 001, Word rder in German: A ormal DePendency Grammar Using a oPological Hierarchy, ACL</title>
<date>2001</date>
<pages>0--7</pages>
<marker>Gerdes, 2001</marker>
<rawString>Gerdes, Kim, Sylvain Kahane, 001, Word rder in German: A ormal DePendency Grammar Using a oPological Hierarchy, ACL 2001, 0-7.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Kim Gerdes</author>
</authors>
<title>Sylvain Kahane, 00 , amas verbal au coeur dune modelisation toPologi ue,</title>
<journal>Linguisticae Investigationes,</journal>
<volume>1</volume>
<pages>101--11</pages>
<marker>Gerdes, </marker>
<rawString>Gerdes, Kim, Sylvain Kahane, 00 , amas verbal au coeur dune modelisation toPologi ue, Linguisticae Investigationes, :1, 101-11 .</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kim Gerdes</author>
<author>Hi-Yon Yoo</author>
</authors>
<title>003, a toPologie comme interface entre syntaxe et Prosodie, un systeme de generation aPPli ue au grec moderne, ✒ALN</title>
<date>2003</date>
<journal>Batz-sur- er,</journal>
<volume>1</volume>
<pages>13</pages>
<marker>Gerdes, Yoo, 2003</marker>
<rawString>Gerdes, Kim &amp; Hi-Yon Yoo, 003, a toPologie comme interface entre syntaxe et Prosodie, un systeme de generation aPPli ue au grec moderne, ✒ALN 2003, Batz-sur- er, 1 -13 .</rawString>
</citation>
<citation valid="false">
<authors>
<author>Hudson Richard</author>
</authors>
<title>000, &amp;quot;Discontinuity&apos;, De endenc</title>
<journal>Grammars,✒.A.L.,</journal>
<volume>1</volume>
<location>Hermes, Paris, 1 - .</location>
<marker>Richard, </marker>
<rawString>Hudson Richard, 000, &amp;quot;Discontinuity&apos;, De endenc Grammars,✒.A.L., 1:1, Hermes, Paris, 1 - .</rawString>
</citation>
<citation valid="false">
<authors>
<author>Kahane Sylvain</author>
</authors>
<title>00 , Polarized Unification Grammars, Coling -ACL 0✗,</title>
<location>Sydney, P.</location>
<marker>Sylvain, </marker>
<rawString>Kahane Sylvain, 00 , Polarized Unification Grammars, Coling -ACL 0✗, Sydney, P.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Sylvain Kahane</author>
</authors>
<title>Alexis Nasr, wen Rambow, 1 , Pseudo-Pro✄ectivity: a Polynomially Parsable NonPro✄ective DePendency Grammar,</title>
<journal>C☛LINGACL , ontreal, -✓.</journal>
<marker>Kahane, </marker>
<rawString>Kahane, Sylvain, Alexis Nasr, wen Rambow, 1 , Pseudo-Pro✄ectivity: a Polynomially Parsable NonPro✄ective DePendency Grammar, C☛LINGACL , ontreal, -✓.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Kathol Andreas</author>
</authors>
<title>1 Linearization-based German S✖nta✘,</title>
<tech>PhD thesis,</tech>
<institution>hio State University.</institution>
<marker>Andreas, </marker>
<rawString>Kathol Andreas, 1 Linearization-based German S✖nta✘, PhD thesis, hio State University.</rawString>
</citation>
<citation valid="false">
<authors>
<author>B Kiefer</author>
<author>H-U Krieger</author>
<author>J Carroll</author>
<author>R alouf</author>
</authors>
<title>robust Parsing.</title>
<journal>ACL</journal>
<volume>1</volume>
<marker>Kiefer, Krieger, Carroll, alouf, </marker>
<rawString>Kiefer, B., H.-U. Krieger, J. Carroll, and R. alouf, robust Parsing. ACL 1 , 0.</rawString>
</citation>
<citation valid="true">
<title>Generation as dePendency Parsing.</title>
<date>2002</date>
<publisher>ACL</publisher>
<marker>2002</marker>
<rawString>Alexander Koller and Kristina Striegnitz. 00. Generation as dePendency Parsing. ACL 2002.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Nasr Alexis</author>
</authors>
<title>1 , A formalism and a Parser for exicalised DePendency Grammars. th Int. Worksho on Parsing✒echnologies,</title>
<publisher>SUNY Press.</publisher>
<marker>Alexis, </marker>
<rawString>Nasr Alexis, 1 , A formalism and a Parser for exicalised DePendency Grammars. th Int. Worksho on Parsing✒echnologies, SUNY Press.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Alexis Nasr</author>
</authors>
<title>003, actoring surface syntactic structures.</title>
<booktitle>First International Conference on Meaning✒e✘t✒heor✖,</booktitle>
<location>Paris, . -</location>
<marker>Nasr, </marker>
<rawString>Nasr, Alexis, 003, actoring surface syntactic structures. First International Conference on Meaning✒e✘t✒heor✖, Paris, . -</rawString>
</citation>
<citation valid="false">
<authors>
<author>Ken✄i Nishida</author>
</authors>
<title>Kentaro orisawa and Jun&apos;ichi su✄ii, 001, ComPiling an HPSG-based grammar into more than one</title>
<journal>C G. PACLING</journal>
<volume>2001</volume>
<pages>0</pages>
<marker>Nishida, </marker>
<rawString>Nishida, Ken✄i, Kentaro orisawa and Jun&apos;ichi su✄ii, 001, ComPiling an HPSG-based grammar into more than one C G. PACLING 2001,1 --✆0 .</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jens Nilsson</author>
</authors>
<date></date>
<booktitle>Pseudo-Pro✄ective DePendency Parsing, ACL 200✚,</booktitle>
<pages>10</pages>
<marker>Nilsson, </marker>
<rawString>Nivre, Joakim. Jens Nilsson, 00 , Pseudo-Pro✄ective DePendency Parsing, ACL 200✚, -10✔.</rawString>
</citation>
<citation valid="false">
<authors>
<author>C Pollard</author>
<author>I Sag</author>
</authors>
<booktitle>Head-Driven Phrase Structure Grammar, CSI</booktitle>
<volume>1</volume>
<publisher>Publications.</publisher>
<marker>Pollard, Sag, </marker>
<rawString>Pollard, C. and I. Sag, 1 , Head-Driven Phrase Structure Grammar, CSI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hiyon Yoo</author>
<author>Kim Gerdes</author>
</authors>
<title>A dePendency account of Korean Word rder, Linguistic Societ✖of Korea</title>
<date></date>
<tech>200✙, Seoul.</tech>
<marker>Yoo, Gerdes, </marker>
<rawString>Yoo, Hiyon &amp; Kim Gerdes, 00 , A dePendency account of Korean Word rder, Linguistic Societ✖of Korea 200✙, Seoul.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yoo</author>
</authors>
<title>Hiyon 003, rdre des mots et rosodie : Essai de descri tion et de formalisation our le grec moderne,</title>
<date></date>
<tech>PhD thesis,</tech>
<institution>Universite Paris</institution>
<marker>Yoo, </marker>
<rawString>Yoo, Hiyon 003, rdre des mots et rosodie : Essai de descri tion et de formalisation our le grec moderne, PhD thesis, Universite Paris 7.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>