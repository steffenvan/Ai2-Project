<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.006123">
<note confidence="0.851068">
Computational Linguistics Volume 20, Number 1
</note>
<title confidence="0.973802">
Generating Referring Expressions
</title>
<author confidence="0.905376">
Robert Dale
</author>
<affiliation confidence="0.850905">
(University of Edinburgh)
</affiliation>
<address confidence="0.308853">
Cambridge, MA: The MIT Press (The
</address>
<table confidence="0.636865">
ACL—MIT Press Series in Natural
Language Processing, edited by
Aravind Joshi, Karen Sparck Jones, and
Mark Y. Liberman), 1992, ix + 277 pp.
Hardbound, ISBN 0-262-04128-6, $39.95
</table>
<figure confidence="0.499154">
Reviewed by
Donia Scott
</figure>
<affiliation confidence="0.55711">
University of Brighton
</affiliation>
<bodyText confidence="0.99980568">
This book describes the author&apos;s research on the automatic generation of referring
expressions in English. The work is encapsulated in EPICURE, a natural language gen-
eration system that produces cookery recipes from three basic sets of data structures:
a set of entities corresponding to the ingredients of the target recipe; a set of planning
operators that describe the necessary cooking actions and their effects on the dish; and
a model of the cook&apos;s capabilities.
The recipes produced by EPICURE are composed of two ordered structures: a list
of the required basic ingredients and another of the basic preparatory (e.g., soaking,
draining, peeling) and cooking actions (e.g., sauteing, simmering, boiling) to be carried
out on them. Given the focus of the work, the recipes themselves are rather simple in
that they do not, for example, contain explanations of why particular actions are to
be performed, and thus do not involve the types of complex sentences often found in
action-oriented discourses (e.g., sentences with means-, rationale-, or purpose-clauses).
The sophistication of the text lies squarely in the way in which pronouns, anaphoric
definite noun phrases, and one-anaphoric phrases are used to pick out complex entities
in the discourse.
The organization of the book closely follows what one would normally expect of
a doctoral thesis, from which it is drawn (Edinburgh 1989); contrary to what is usual
in such cases, this organization works well here.
Chapter 1 presents a brief description of the class of referring expressions under
consideration, the foundations of the work carried out, and an overview of EPICURE.
It provides an excellent introduction to the book, set in terms that are easily accessible
to nonlinguists or non—computer scientists.
Chapter 2 introduces the notions of entities and outlines the complexities that
underlie a typical ingredients list:
</bodyText>
<listItem confidence="0.999741875">
• the relation between the role of individual ingredients within a recipe
and their potential for appearing in conjunctive (e.g., four eggs and three
egg whites) and disjunctive specifications (e.g., one large or two small
potatoes);
• the determination of appropriate reference to ingredients with complex
names (e.g., the garlic for a garlic clove, but the apple as opposed to the
eating for an eating apple);
• the specification of quantity of an ingredient (e.g., in terms of the
</listItem>
<page confidence="0.98209">
128
</page>
<subsectionHeader confidence="0.72109">
Book Reviews
</subsectionHeader>
<bodyText confidence="0.698013666666667">
standard metrics for liquids and solids (with varying degrees of
exactness), or in rather vague units of measurement such as drops, dashes
or pinches);
</bodyText>
<listItem confidence="0.99926325">
• the specification of a property (e.g., a button mushroom or a ripe
avocado);
• implicit instructions for actions (e.g., three thinly sliced potatoes); and
• derived objects (e.g., grated orange rind).
</listItem>
<bodyText confidence="0.999432690476191">
The author presents a knowledge representation language capable of dealing with
these phenomena. The language makes use of two basic classes of entities: generalized
physical objects and eventualities, each with an associated index, a specification of all
the information known about it (including its substance and structure).
In Chapter 3, the author shows how the ontology can be applied to a wider
framework for discourse generation: deciding the content of the recipe to be generated;
modeling the discourse and domain structures, and the reader; and generating clauses.
Content determination makes use of tried and tested techniques in computational
linguistics, building on the work of Allen, Cohen, Levesque, and Perrault (e.g., Allen
and Perrault 1980; Cohen and Perrault 1979; Cohen and Levesque 1980; Sacerdoti
1977). Planning operators in EPICURE are underspecified events; these are used in
conjunction with a simple model of the reader (her knowledge of particular domain
actions and entities) to determine the required level for a given plan. The approach to
discourse modeling is based on the work of Grosz and Sidner (1986). Clause generation
applies mapping rules to domain eventualities to build an intermediate representation
of the recoverable semantic content of an utterance: recoverable semantic structures. These
structures are in turn submitted to rules, which results in a second intermediate level,
that of abstract syntactic structures, which are then unified with the grammar to produce
surface linguistic expressions.
The &apos;meat&apos; of the book lies in Chapters 4 and 5, which provide a detailed ac-
count of how EPICURE generates the range of referring expressions set out in Chapter
2. Referring expressions are generated by means of the same two-step process used
for clause generation. Recoverable semantic structures, which represent the reader&apos;s
knowledge of the intended referent and the uniqueness of its description in the context,
are built by means of property-addition rules. Rules for mapping these onto abstract
syntactic structures address issues of initial and subsequent reference, mass and count,
specified and unspecified cardinality, and sets specified by quantity. Algorithms for
immediate pronominalization are presented in Chapter 5, along with suggestions for
handling long-distance pronominalization. The author provides here a detailed ac-
count of the chosen approach for generating one-anaphora, which overcomes some of
the limitations of other approaches, in particular that of computational expense. Al-
though adequate for English, this approach appears unlikely to meet such success in
some other languages. Brief mention is made of its limitations with respect to Dutch.
The reader is presented in the final chapter (Chapter 6) with a worked example,
providing a detailed account of how EPICURE generates a simplified version of a recipe
for butter bean soup taken from Rose Elliot&apos;s Bean Book.
This book fulfills its promise of providing a detailed account of useful algorithms
and data structures for the generation of referring expressions in a dynamic domain.
The work is presented with admirable clarity and its limitations and possible exten-
sions are well articulated.
To date, books on natural language generation are either revisions of doctoral
theses or collections of papers from the European and International Series of Natural
</bodyText>
<page confidence="0.994741">
129
</page>
<note confidence="0.79542">
Computational Linguistics Volume 20, Number 1
</note>
<bodyText confidence="0.976821333333333">
Language Generation Workshops. Of these, this volume comes closest to what is a
much-needed textbook on generation, and is also much more affordable than most. I
shall certainly be recommending it to my students and colleagues.
</bodyText>
<sectionHeader confidence="0.871213" genericHeader="abstract">
References
</sectionHeader>
<reference confidence="0.993489041666667">
Allen, James F., and Perrault, C. Raymond
(1980). &amp;quot;Analyzing intention in dialogues.&amp;quot;
Artificial Intelligence, 15,143-178.
Cohen, Philip R., and Levesque, Hector J.
(1980). &amp;quot;Speech acts and the recognition of
shared plans.&amp;quot; Proceedings, Third Conference
of the Canadian Society for Computational
Studies of Intelligence, Victoria, B. C.
Cohen, Philip R., and Perrault, C. Raymond
(1979). &amp;quot;Elements of a plan-based theory
of speech acts.&amp;quot; Cognitive Science, 3,
177-212.
Grosz, Barbara J., and Sidner, Candace L.
(1986). &amp;quot;Attention, intentions, and the
structure of discourse.&amp;quot; Computational
Linguistics, 12,175-204.
Sacerdoti, Earl D. (1977). A structure for plans
and behavior. North Holland.
Donia Scott is Professor of Computational Linguistics and Head of the Information Technology
Research Institute at the University of Brighton. Her current research is focused on natural
language generation. She and her team at Brighton are engaged in a large research project on
the generation of congruent instructions in multiple languages. Scott&apos;s address is: Information
Technology Research Institute, University of Brighton, Lewes Road, Brighton BN2 4AT, U.K.;
e-mail: donia@itri.bton.ac.uk.
</reference>
<page confidence="0.997472">
130
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.537576">
<title confidence="0.9026025">Computational Linguistics Volume 20, Number 1 Generating Referring Expressions</title>
<author confidence="0.999996">Robert Dale</author>
<affiliation confidence="0.99619">(University of Edinburgh)</affiliation>
<address confidence="0.975592">Cambridge, MA: The MIT Press (The</address>
<note confidence="0.991550833333333">ACL—MIT Press Series in Natural Language Processing, edited by Aravind Joshi, Karen Sparck Jones, and Mark Y. Liberman), 1992, ix + 277 pp. Hardbound, ISBN 0-262-04128-6, $39.95 Reviewed by</note>
<author confidence="0.993906">Donia Scott</author>
<affiliation confidence="0.993963">University of Brighton</affiliation>
<abstract confidence="0.974946238095238">This book describes the author&apos;s research on the automatic generation of referring expressions in English. The work is encapsulated in EPICURE, a natural language generation system that produces cookery recipes from three basic sets of data structures: a set of entities corresponding to the ingredients of the target recipe; a set of planning operators that describe the necessary cooking actions and their effects on the dish; and a model of the cook&apos;s capabilities. The recipes produced by EPICURE are composed of two ordered structures: a list of the required basic ingredients and another of the basic preparatory (e.g., soaking, draining, peeling) and cooking actions (e.g., sauteing, simmering, boiling) to be carried out on them. Given the focus of the work, the recipes themselves are rather simple in that they do not, for example, contain explanations of why particular actions are to be performed, and thus do not involve the types of complex sentences often found in action-oriented discourses (e.g., sentences with means-, rationale-, or purpose-clauses). The sophistication of the text lies squarely in the way in which pronouns, anaphoric definite noun phrases, and one-anaphoric phrases are used to pick out complex entities in the discourse. The organization of the book closely follows what one would normally expect of a doctoral thesis, from which it is drawn (Edinburgh 1989); contrary to what is usual in such cases, this organization works well here. Chapter 1 presents a brief description of the class of referring expressions under consideration, the foundations of the work carried out, and an overview of EPICURE.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>James F Allen</author>
<author>C Raymond Perrault</author>
</authors>
<marker>Allen, Perrault, </marker>
<rawString> Allen, James F., and Perrault, C. Raymond</rawString>
</citation>
<citation valid="false">
<title>Analyzing intention in dialogues.&amp;quot;</title>
<journal>Artificial Intelligence,</journal>
<pages>15--143</pages>
<marker>(1980)</marker>
<rawString>. &amp;quot;Analyzing intention in dialogues.&amp;quot; Artificial Intelligence, 15,143-178. Cohen, Philip R., and Levesque, Hector J.</rawString>
</citation>
<citation valid="false">
<title>Speech acts and the recognition of shared plans.&amp;quot;</title>
<booktitle>Proceedings, Third Conference of the Canadian Society for Computational Studies of Intelligence,</booktitle>
<location>Victoria,</location>
<marker>(1980)</marker>
<rawString>. &amp;quot;Speech acts and the recognition of shared plans.&amp;quot; Proceedings, Third Conference of the Canadian Society for Computational Studies of Intelligence, Victoria, B. C. Cohen, Philip R., and Perrault, C. Raymond</rawString>
</citation>
<citation valid="false">
<title>Elements of a plan-based theory of speech acts.&amp;quot;</title>
<journal>Cognitive Science,</journal>
<volume>3</volume>
<pages>177--212</pages>
<marker>(1979)</marker>
<rawString>. &amp;quot;Elements of a plan-based theory of speech acts.&amp;quot; Cognitive Science, 3, 177-212. Grosz, Barbara J., and Sidner, Candace L.</rawString>
</citation>
<citation valid="false">
<authors>
<author>intentions Attention</author>
</authors>
<title>and the structure of discourse.&amp;quot;</title>
<date>1977</date>
<journal>Computational Linguistics,</journal>
<pages>12--175</pages>
<institution>Information Technology Research Institute, University of Brighton,</institution>
<location>Lewes Road, Brighton</location>
<note>BN2 4AT, U.K.; e-mail: donia@itri.bton.ac.uk.</note>
<contexts>
<context position="4266" citStr="(1986)" startWordPosition="661" endWordPosition="661">, and the reader; and generating clauses. Content determination makes use of tried and tested techniques in computational linguistics, building on the work of Allen, Cohen, Levesque, and Perrault (e.g., Allen and Perrault 1980; Cohen and Perrault 1979; Cohen and Levesque 1980; Sacerdoti 1977). Planning operators in EPICURE are underspecified events; these are used in conjunction with a simple model of the reader (her knowledge of particular domain actions and entities) to determine the required level for a given plan. The approach to discourse modeling is based on the work of Grosz and Sidner (1986). Clause generation applies mapping rules to domain eventualities to build an intermediate representation of the recoverable semantic content of an utterance: recoverable semantic structures. These structures are in turn submitted to rules, which results in a second intermediate level, that of abstract syntactic structures, which are then unified with the grammar to produce surface linguistic expressions. The &apos;meat&apos; of the book lies in Chapters 4 and 5, which provide a detailed account of how EPICURE generates the range of referring expressions set out in Chapter 2. Referring expressions are g</context>
</contexts>
<marker>(1986)</marker>
<rawString>. &amp;quot;Attention, intentions, and the structure of discourse.&amp;quot; Computational Linguistics, 12,175-204. Sacerdoti, Earl D. (1977). A structure for plans and behavior. North Holland. Donia Scott is Professor of Computational Linguistics and Head of the Information Technology Research Institute at the University of Brighton. Her current research is focused on natural language generation. She and her team at Brighton are engaged in a large research project on the generation of congruent instructions in multiple languages. Scott&apos;s address is: Information Technology Research Institute, University of Brighton, Lewes Road, Brighton BN2 4AT, U.K.; e-mail: donia@itri.bton.ac.uk.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>