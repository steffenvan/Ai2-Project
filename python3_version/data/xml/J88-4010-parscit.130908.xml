<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000294">
<note confidence="0.8687886">
Book Reviews Natural Language Understanding
REFERENCE
Feigenbaum, Edward A. and Pamela McCorduck 1983 The Fifth
Generation: Artificial Intelligence and Japan&apos;s Computer Chal-
lenge to the World. Addison-Wesley, Reading, MA.
</note>
<bodyText confidence="0.965910333333333">
Harold Somers is a lecturer at UMIST, and a member of the
machine translation research group there, with a special
interest in Japanese MT. He recently spent 15 months in Japan
as a visiting research fellow, first at NTT&apos;s Basic Research
Laboratory, and then at Toshiba Corporation&apos;s R&amp;D Center,
during which time he was able to closely investigate Japanese
NLP activities. Somers&apos;s address is: Centre for Computa-
tional Linguistics, UMIST, P.O. Box 88, Manchester M60
1QD, England. E-mail: hls@ccl.umist.ac.uk.
</bodyText>
<sectionHeader confidence="0.929916" genericHeader="abstract">
NATURAL LANGUAGE UNDERSTANDING
</sectionHeader>
<subsectionHeader confidence="0.561897">
James Allen
</subsectionHeader>
<figure confidence="0.918998333333333">
(University of Rochester)
Menlo Park, CA: Benjamin/Cummings, 1987, xvi + 574
PP.
ISBN 0-8053-0330-8; (hb)
Reviewed by
Michael Kac
</figure>
<affiliation confidence="0.447807">
University of Minnesota
</affiliation>
<bodyText confidence="0.999168022222222">
Since the appearance of Tennant (1981), there have
been a number of books intended to serve as introduc-
tions to computational linguistics., including Harris
(1985), Grishman (1986), and Winograd (1983). The
book under review is directed at much the same audi-
ence and is, in my opinion, the best so far. This is not to
say that it is flawless; but its weaknesses are due more
to the nature of the subject than to any failings of the
author. (I should note, however, that I have not used it
in a course, and so cannot report on student reactions to
it.) The book is in four parts, entitled &amp;quot;Syntactic
Processing&amp;quot;, &amp;quot;Semantic Interpretation&amp;quot;, &amp;quot;Context and
World Knowledge&amp;quot;, and &amp;quot;Response Generation&amp;quot;, sup-
plemented by two appendices, one on logic and one on
symbolic computation; each chapter ends with a set of
problems. It is broad enough in its coverage of a variety
of approaches to give the reader a sense of the field of
computational linguistics in its present state while man-
aging to avoid a mere &amp;quot;Cook&apos;s Tour&amp;quot; approach (Pullum
1984).
The author is conscientious about regularly going
into certain problems at a level of detail that makes for
more than just a superficial overview; at the same time,
the range of topics covered is sufficiently broad that
anyone wanting to base a course on a cover-to-cover
reading of the book had better have a full year in which
to do it. Allen does not discuss how to actually formu-
late algorithms in some selected language, though many
Lisp-like data structures appear throughout and the
overall perspective is quite clearly that of contemporary
Al. (The second appendix covers the essential ideas
underlying Lisp and Prolog, though without taking the
form of a primer for either language.) A nice theoretical
balance is maintained, and if there is any axe-grinding it
is exceedingly subtle.&apos;
The treatment of syntax takes context-free grammar
as the starting point and then considers both top-down
and bottom-up approaches to parsing. Two different
formalisms are pursued in some detail, namely transi-
tion networks and logic grammars, both with and with-
out augmentations that take them outside the class of
CFG-equivalent devices. One whole chapter is devoted
to handling movement, and includes discussion of how
(at the cost of increasing the size of the grammar) use of
a hold facility can be avoided by using Gazdar-style
slash categories. The problem of non-determinism is
also discussed, and there is an overview of Marcus&apos;s
parser.2
The section on semantics deals partly with represen-
tational issues (including what logical forms should look
like), partly with the specifics of designing algorithms
for semantic interpretation, and partly with a variety of
open questions (including the especially thorny problem
of correctly interpreting nominal compounds). A notion
of &amp;quot;merging&amp;quot;, closely akin to unification, is proposed as
a basic operation for semantic interpretation and a
detailed example showing the interaction of a syntactic
parser and semantic interpreter is presented.
The section on context and world knowledge deals
first with knowledge representation (a topic that is, of
course, of more than just linguistic relevance), with
problems in establishing reference, and with inferences
based on knowledge. Anaphora is dealt with in two
places, once in the chapter on reference (where the
focus is on intrasentential relations), and once in the
chapter on discourse structure (where the focus is on
&amp;quot;long-distance&amp;quot; anaphoric relations, such as the use of
a pronoun to refer to something mentioned some time
earlier in a dialog). Finally, the last part contains a
chapter on question-answering systems and one on
&amp;quot;generation&amp;quot; ,3 the latter of note in part because of the
attention it gives to systemic grammar.
I very much like the overall plan of the book (as
outlined above) and think that the level of detail into
which it goes is about right for a text of this kind. From
the organization, I infer that the presumed audience is
computer scientists with little background regarding
natural language rather than linguists with an interest in
applying what they know in a computational domain,
which seems reasonable enough: in my own introduc-
tory CL course, the former group vastly outnumbers the
latter (but then computer scientists as a group must
outnumber linguists by an astounding factor anyway). I
wonder, however, if the time is not fast approaching
when we are going to have to make some linguistics
beyond the introductory level a prerequisite for courses
in CL, which would eliminate the need for a lot of
background that Allen (and others, such as Harris) are
forced to try to cram in as best they can. My own
prejudices and disciplinary allegiances may be showing
</bodyText>
<page confidence="0.872659">
96 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<figure confidence="0.425488">
Book Reviews A Natural Language Interface for Computer-Aided Design
</figure>
<bodyText confidence="0.999885515151515">
here, but I am dubious of the effectiveness of trying to
incorporate a crash course in linguistic fundamentals
into a course in CL. To be fair, I also think that logic at
a level that Allen presupposes (and that linguists do not
automatically acquire as a part of their training) ought to
be required, too, plus some formal language and autom-
ata theory.
At a level of fine detail, there are a number of glitches
of various kinds, ranging from solecisms like confusion
of term and referent (e.g.: &amp;quot;For example, the NP the
fish is ambiguous between being a single fish and being
many fish&amp;quot; (p.11)) to badly chosen examples. As an
instance of the latter I offer the sentence It&apos;s impossible
for you to have seen the moon in our car, because it
wouldn&apos;t fit, given on p.256 as a case of an inherently
anomalous NP (the moon in our car) losing its anomaly
in context. I would have thought that the sentence in
question shows how world knowledge would enable one
to know that the sequence the moon in our car was not
an NP in this context, or at least not one in which the
prepositional phrase functions as a restrictive modifier
of the head (in which case the anomaly is not there to
begin with). I would add, less as a criticism than as a
suggestion for amplification in a later edition (which
may well come about), that the discussion on non-
intersective adjectives on p. 291f take into account the
extensive treatment of the semantics of such items to be
found in Keenan and Faltz (1985). Finally, I should
mention that numerous pages of the copy I received had
large black smudges in the margins.
The foregoing reservations aside, I think that this is a
good effort at a systematic and comprehensive introduc-
tion to the field of CL.
</bodyText>
<sectionHeader confidence="0.989613" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.969910733333333">
Grishman, R. 1986 Computational Linguistics. Cambridge University
Press.
Harris, M.D. 1985 Introduction to Natural Language Processing.
Reston Publishing Company, Reston, VA.
Heidorn, G.; Jensen, K.; Miller, L.A.; and Chodorow, M.S. 1982 The
EPISTLE Text-Critiquing System. IBM Systems Journal
21:305-326.
Keenan, E. and Faltz, L.M. 1985 Boolean Semantics for Natural
- Language. Reidel, Dordrecht, Netherlands.
Pullum, G.K. 1984 If It&apos;s Tuesday, This Must be Glossematics.
Natural Language and Linguistic Theory 2:151-156.
Tennant, Harry 1981 Natural Language Processing. Petrocelli
Books, New York, NY and Princeton, NJ.
Winograd, Terry 1983 Language as a Cognitive Process, Vol.]:
Syntax. Addison-Wesley, Reading, MA.
</reference>
<note confidence="0.340512">
NOTES
</note>
<tableCaption confidence="0.772825083333333">
I. I do, however, disagree with the following remark: &amp;quot;It is impor-
tant to realize that you do not store features and make agreement
checks just so that you can detect illegal sentences. Making
judgements on grammar is not a goal of computational linguistics&amp;quot;
p. 10. Systems like CRITIQUE, ne EPISTLE (Heidorn et al.
1982) are intended to do precisely that (among other things).
2. I have a stylistic quibble with Allen&apos;s reference on p. 178 to Mitch
[sic] Marcus; full names should be used in formal exposition.
3. I use quotes here since, strictly speaking, production would be a
better term. The word generate in its technical sense really means
nothing more than &amp;quot;define&amp;quot;, and its use as a synonym for produce
merely perpetuates ancient conceptual confusions.
</tableCaption>
<bodyText confidence="0.981327428571429">
Michael Kac is professor of linguistics at the University of
Minnesota, where he teaches an introductory course in com-
putational linguistics. His current research interests include
parsing and applications of formal language theory in linguis-
tics. His address is: Department of Linguistics, 142 Klaeber
Court, University of Minnesota, Minneapolis, MN 55455.
E-mail: kac@umn-cs.arpa.
</bodyText>
<sectionHeader confidence="0.9313565" genericHeader="method">
A NATURAL LANGUAGE INTERFACE FOR COMPUTER-
AIDED DESIGN
</sectionHeader>
<figure confidence="0.782297909090909">
Tariq Samad
(Carnegie-Mellon University)
(The Kluwer international series in engineering and
computer science; natural language processing and
machine translation)
Boston: Kluwer Academic Publishers, 1986, ix + 188
pp.
ISBN 0-89838-222-X; $38.95 (hb)
Reviewed by
Bruce Ballard
AT&amp;T Bell Laboratories
</figure>
<bodyText confidence="0.999562933333333">
This short book describes an implemented natural lan-
guage system called Cleopatra, which, in its 7,000 lines
of Franz Lisp, seeks to provide an interface for use in a
CAD system. Since the existing application involves
circuit design, the work is reminiscent of the SOPHIE
system (Brown and Burton 1975). An example sentence
that illustrates the level of sophistication toward which
Cleopatra strives is, &amp;quot;What is the voltage at n13 after
the voltage at n1 reaches 2 v and before the voltage at
n23 reaches 3 v?&amp;quot; Most of the book discusses the
system&apos;s treatment of syntax, in accordance with the
finding that &amp;quot;the pragmatics and the semantics required
for as limited a sub-domain as ours are very small
subsets of the pragmatics and semantics required gen-
erally&amp;quot;.
Cleopatra is predicated on the belief that &amp;quot;the design
of a natural language interface for CAD cannot be based
on prior assumptions about which English constructions
will be useful&amp;quot; and the further suggestion that &amp;quot;the
complexity and diversity of the CAD domain. . . render
previous approaches to natural language interfaces of
little practical utility for our purposes.&amp;quot; From the
evidence supplied in the book, however, I remain to be
convinced that the subset of the CAD domain addressed
to date is in fact more complex or more diverse than
what has been studied and reported on in the literature.
Neither do I believe the techniques presented, though
interesting in their own right, render the chosen domain
more approachable than a thoughtful attempt at using
existing techniques would have.
</bodyText>
<page confidence="0.287091">
Computational Linguistics, Volume 14, Number 4, December 1988 97
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000259">
<title confidence="0.972028">Book Reviews Natural Language Understanding REFERENCE</title>
<author confidence="0.930266">A Edward</author>
<author confidence="0.930266">Pamela McCorduck Fifth</author>
<affiliation confidence="0.383991">Generation: Artificial Intelligence and Japan&apos;s Computer Chal-</affiliation>
<abstract confidence="0.702096428571428">to the World. Reading, MA. Somers a lecturer at UMIST, and a member of the machine translation research group there, with a special interest in Japanese MT. He recently spent 15 months in Japan as a visiting research fellow, first at NTT&apos;s Basic Research Laboratory, and then at Toshiba Corporation&apos;s R&amp;D Center, during which time he was able to closely investigate Japanese</abstract>
<note confidence="0.790094333333333">NLP activities. Somers&apos;s address is: Centre for Computational Linguistics, UMIST, P.O. Box 88, Manchester M60 1QD, England. E-mail: hls@ccl.umist.ac.uk.</note>
<title confidence="0.966115">NATURAL LANGUAGE UNDERSTANDING</title>
<author confidence="0.999982">James Allen</author>
<affiliation confidence="0.999077">(University of Rochester)</affiliation>
<address confidence="0.998092">Menlo Park, CA: Benjamin/Cummings, 1987, xvi + 574</address>
<email confidence="0.463633">PP.</email>
<note confidence="0.9722675">ISBN 0-8053-0330-8; (hb) Reviewed by</note>
<author confidence="0.999731">Michael Kac</author>
<affiliation confidence="0.998097">University of Minnesota</affiliation>
<abstract confidence="0.998072725806451">Since the appearance of Tennant (1981), there have been a number of books intended to serve as introductions to computational linguistics., including Harris (1985), Grishman (1986), and Winograd (1983). The book under review is directed at much the same audience and is, in my opinion, the best so far. This is not to it is flawless; but its weaknesses are due more to the nature of the subject than to any failings of the author. (I should note, however, that I have not used it in a course, and so cannot report on student reactions to it.) The book is in four parts, entitled &amp;quot;Syntactic Processing&amp;quot;, &amp;quot;Semantic Interpretation&amp;quot;, &amp;quot;Context and World Knowledge&amp;quot;, and &amp;quot;Response Generation&amp;quot;, supplemented by two appendices, one on logic and one on symbolic computation; each chapter ends with a set of problems. It is broad enough in its coverage of a variety of approaches to give the reader a sense of the field of computational linguistics in its present state while managing to avoid a mere &amp;quot;Cook&apos;s Tour&amp;quot; approach (Pullum 1984). The author is conscientious about regularly going into certain problems at a level of detail that makes for more than just a superficial overview; at the same time, the range of topics covered is sufficiently broad that anyone wanting to base a course on a cover-to-cover reading of the book had better have a full year in which to do it. Allen does not discuss how to actually formulate algorithms in some selected language, though many Lisp-like data structures appear throughout and the overall perspective is quite clearly that of contemporary Al. (The second appendix covers the essential ideas underlying Lisp and Prolog, though without taking the form of a primer for either language.) A nice theoretical balance is maintained, and if there is any axe-grinding it is exceedingly subtle.&apos; The treatment of syntax takes context-free grammar as the starting point and then considers both top-down and bottom-up approaches to parsing. Two different formalisms are pursued in some detail, namely transinetworks and logic grammars, both with and without augmentations that take them outside the class of CFG-equivalent devices. One whole chapter is devoted to handling movement, and includes discussion of how (at the cost of increasing the size of the grammar) use of a hold facility can be avoided by using Gazdar-style slash categories. The problem of non-determinism is also discussed, and there is an overview of Marcus&apos;s The section on semantics deals partly with representational issues (including what logical forms should look like), partly with the specifics of designing algorithms and partly with a variety of open questions (including the especially thorny problem of correctly interpreting nominal compounds). A notion of &amp;quot;merging&amp;quot;, closely akin to unification, is proposed as a basic operation for semantic interpretation and a detailed example showing the interaction of a syntactic parser and semantic interpreter is presented. The section on context and world knowledge deals first with knowledge representation (a topic that is, of course, of more than just linguistic relevance), with problems in establishing reference, and with inferences based on knowledge. Anaphora is dealt with in two places, once in the chapter on reference (where the focus is on intrasentential relations), and once in the chapter on discourse structure (where the focus is on &amp;quot;long-distance&amp;quot; anaphoric relations, such as the use of a pronoun to refer to something mentioned some time earlier in a dialog). Finally, the last part contains a on question-answering one on the latter of note in part because of the attention it gives to systemic grammar. I very much like the overall plan of the book (as outlined above) and think that the level of detail into goes is right for a text of this kind. From the organization, I infer that the presumed audience is computer scientists with little background regarding natural language rather than linguists with an interest in applying what they know in a computational domain, seems reasonable enough: in my own introductory CL course, the former group vastly outnumbers the latter (but then computer scientists as a group must outnumber linguists by an astounding factor anyway). I wonder, however, if the time is not fast approaching when we are going to have to make some linguistics beyond the introductory level a prerequisite for courses in CL, which would eliminate the need for a lot of background that Allen (and others, such as Harris) are forced to try to cram in as best they can. My own prejudices and disciplinary allegiances may be showing Linguistics, Volume 14, Number 4, December 1988 Book Reviews A Natural Language Interface for Computer-Aided Design here, but I am dubious of the effectiveness of trying to incorporate a crash course in linguistic fundamentals a course in CL. To be fair, think that logic at a level that Allen presupposes (and that linguists do not automatically acquire as a part of their training) ought to be required, too, plus some formal language and automata theory. At a level of fine detail, there are a number of glitches of various kinds, ranging from solecisms like confusion term and referent (e.g.: &amp;quot;For example, the NP ambiguous between being a single fish and being many fish&amp;quot; (p.11)) to badly chosen examples. As an of the latter the sentence impossible for you to have seen the moon in our car, because it fit, on p.256 as a case of an inherently NP moon in our car) its anomaly in context. I would have thought that the sentence in question shows how world knowledge would enable one know that the sequence moon in our car an NP in this context, or at least not one in which the prepositional phrase functions as a restrictive modifier of the head (in which case the anomaly is not there to begin with). I would add, less as a criticism than as a suggestion for amplification in a later edition (which may well come about), that the discussion on nonintersective adjectives on p. 291f take into account the extensive treatment of the semantics of such items to be found in Keenan and Faltz (1985). Finally, I should mention that numerous pages of the copy I received had large black smudges in the margins. The foregoing reservations aside, I think that this is a good effort at a systematic and comprehensive introduction to the field of CL.</abstract>
<note confidence="0.877489470588235">REFERENCES R. 1986 Linguistics. University Press. M.D. 1985 to Natural Language Processing. Reston Publishing Company, Reston, VA. Heidorn, G.; Jensen, K.; Miller, L.A.; and Chodorow, M.S. 1982 The Text-Critiquing System. Journal 21:305-326. E. and Faltz, L.M. 1985 Semantics for Natural Language. Dordrecht, Netherlands. Pullum, G.K. 1984 If It&apos;s Tuesday, This Must be Glossematics. Language and Linguistic Theory Harry 1981 Language Processing. Books, New York, NY and Princeton, NJ. Terry 1983 as a Cognitive Process, Vol.]: Reading, MA. NOTES</note>
<abstract confidence="0.97586894117647">I however, disagree with the following remark: &amp;quot;It is important to realize that you do not store features and make agreement checks just so that you can detect illegal sentences. Making judgements on grammar is not a goal of computational linguistics&amp;quot; p. 10. Systems like CRITIQUE, ne EPISTLE (Heidorn et al. 1982) are intended to do precisely that (among other things). I stylistic quibble with Allen&apos;s reference on p. 178 to Mitch [sic] Marcus; full names should be used in formal exposition. I use quotes here since, strictly speaking, be a term. The word in technical sense really means more than &amp;quot;define&amp;quot;, and its use as a synonym for merely perpetuates ancient conceptual confusions. Kac professor of linguistics at the University of Minnesota, where he teaches an introductory course in computational linguistics. His current research interests include parsing and applications of formal language theory in linguistics. His address is: Department of Linguistics, 142 Klaeber</abstract>
<address confidence="0.992044">Court, University of Minnesota, Minneapolis, MN 55455.</address>
<email confidence="0.987092">E-mail:kac@umn-cs.arpa.</email>
<title confidence="0.887217">LANGUAGE INTERFACE FOR COMPUTER- AIDED DESIGN</title>
<author confidence="0.99669">Tariq Samad</author>
<affiliation confidence="0.956668">(Carnegie-Mellon University) (The Kluwer international series in engineering and</affiliation>
<abstract confidence="0.6557595">computer science; natural language processing and machine translation) Boston: Kluwer Academic Publishers, 1986, ix + 188 pp.</abstract>
<note confidence="0.9491195">ISBN 0-89838-222-X; $38.95 (hb) Reviewed by</note>
<author confidence="0.998473">Bruce Ballard</author>
<affiliation confidence="0.985376">AT&amp;T Bell Laboratories</affiliation>
<abstract confidence="0.9981781">This short book describes an implemented natural lansystem called in its 7,000 lines of Franz Lisp, seeks to provide an interface for use in a CAD system. Since the existing application involves circuit design, the work is reminiscent of the SOPHIE system (Brown and Burton 1975). An example sentence that illustrates the level of sophistication toward which Cleopatra strives is, &amp;quot;What is the voltage at n13 after the voltage at n1 reaches 2 v and before the voltage at n23 reaches 3 v?&amp;quot; Most of the book discusses the system&apos;s treatment of syntax, in accordance with the finding that &amp;quot;the pragmatics and the semantics required for as limited a sub-domain as ours are very small subsets of the pragmatics and semantics required generally&amp;quot;. Cleopatra is predicated on the belief that &amp;quot;the design of a natural language interface for CAD cannot be based on prior assumptions about which English constructions will be useful&amp;quot; and the further suggestion that &amp;quot;the complexity and diversity of the CAD domain. . . render previous approaches to natural language interfaces of little practical utility for our purposes.&amp;quot; From the supplied in the book, however, to be convinced that the subset of the CAD domain addressed to date is in fact more complex or more diverse than what has been studied and reported on in the literature. Neither do I believe the techniques presented, though interesting in their own right, render the chosen domain more approachable than a thoughtful attempt at using existing techniques would have.</abstract>
<intro confidence="0.873743">Computational Linguistics, Volume 14, Number 4, December 1988 97</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R Grishman</author>
</authors>
<title>Computational Linguistics.</title>
<date>1986</date>
<publisher>Cambridge University Press.</publisher>
<contexts>
<context position="1110" citStr="Grishman (1986)" startWordPosition="160" endWordPosition="161">poration&apos;s R&amp;D Center, during which time he was able to closely investigate Japanese NLP activities. Somers&apos;s address is: Centre for Computational Linguistics, UMIST, P.O. Box 88, Manchester M60 1QD, England. E-mail: hls@ccl.umist.ac.uk. NATURAL LANGUAGE UNDERSTANDING James Allen (University of Rochester) Menlo Park, CA: Benjamin/Cummings, 1987, xvi + 574 PP. ISBN 0-8053-0330-8; (hb) Reviewed by Michael Kac University of Minnesota Since the appearance of Tennant (1981), there have been a number of books intended to serve as introductions to computational linguistics., including Harris (1985), Grishman (1986), and Winograd (1983). The book under review is directed at much the same audience and is, in my opinion, the best so far. This is not to say that it is flawless; but its weaknesses are due more to the nature of the subject than to any failings of the author. (I should note, however, that I have not used it in a course, and so cannot report on student reactions to it.) The book is in four parts, entitled &amp;quot;Syntactic Processing&amp;quot;, &amp;quot;Semantic Interpretation&amp;quot;, &amp;quot;Context and World Knowledge&amp;quot;, and &amp;quot;Response Generation&amp;quot;, supplemented by two appendices, one on logic and one on symbolic computation; each </context>
</contexts>
<marker>Grishman, 1986</marker>
<rawString>Grishman, R. 1986 Computational Linguistics. Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harris</author>
</authors>
<title>Introduction to Natural Language Processing.</title>
<date>1985</date>
<publisher>Reston Publishing Company,</publisher>
<location>Reston, VA.</location>
<contexts>
<context position="1093" citStr="Harris (1985)" startWordPosition="158" endWordPosition="159"> at Toshiba Corporation&apos;s R&amp;D Center, during which time he was able to closely investigate Japanese NLP activities. Somers&apos;s address is: Centre for Computational Linguistics, UMIST, P.O. Box 88, Manchester M60 1QD, England. E-mail: hls@ccl.umist.ac.uk. NATURAL LANGUAGE UNDERSTANDING James Allen (University of Rochester) Menlo Park, CA: Benjamin/Cummings, 1987, xvi + 574 PP. ISBN 0-8053-0330-8; (hb) Reviewed by Michael Kac University of Minnesota Since the appearance of Tennant (1981), there have been a number of books intended to serve as introductions to computational linguistics., including Harris (1985), Grishman (1986), and Winograd (1983). The book under review is directed at much the same audience and is, in my opinion, the best so far. This is not to say that it is flawless; but its weaknesses are due more to the nature of the subject than to any failings of the author. (I should note, however, that I have not used it in a course, and so cannot report on student reactions to it.) The book is in four parts, entitled &amp;quot;Syntactic Processing&amp;quot;, &amp;quot;Semantic Interpretation&amp;quot;, &amp;quot;Context and World Knowledge&amp;quot;, and &amp;quot;Response Generation&amp;quot;, supplemented by two appendices, one on logic and one on symbolic c</context>
</contexts>
<marker>Harris, 1985</marker>
<rawString>Harris, M.D. 1985 Introduction to Natural Language Processing. Reston Publishing Company, Reston, VA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Heidorn</author>
<author>K Jensen</author>
<author>L A Miller</author>
<author>M S Chodorow</author>
</authors>
<date>1982</date>
<booktitle>The EPISTLE Text-Critiquing System. IBM Systems Journal</booktitle>
<pages>21--305</pages>
<marker>Heidorn, Jensen, Miller, Chodorow, 1982</marker>
<rawString>Heidorn, G.; Jensen, K.; Miller, L.A.; and Chodorow, M.S. 1982 The EPISTLE Text-Critiquing System. IBM Systems Journal 21:305-326.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Keenan</author>
<author>L M Faltz</author>
</authors>
<title>Boolean Semantics for Natural - Language.</title>
<date>1985</date>
<location>Reidel, Dordrecht, Netherlands.</location>
<marker>Keenan, Faltz, 1985</marker>
<rawString>Keenan, E. and Faltz, L.M. 1985 Boolean Semantics for Natural - Language. Reidel, Dordrecht, Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G K Pullum</author>
</authors>
<title>If It&apos;s Tuesday, This Must be Glossematics. Natural Language and Linguistic Theory</title>
<date>1984</date>
<pages>2--151</pages>
<contexts>
<context position="1966" citStr="Pullum 1984" startWordPosition="313" endWordPosition="314"> of the author. (I should note, however, that I have not used it in a course, and so cannot report on student reactions to it.) The book is in four parts, entitled &amp;quot;Syntactic Processing&amp;quot;, &amp;quot;Semantic Interpretation&amp;quot;, &amp;quot;Context and World Knowledge&amp;quot;, and &amp;quot;Response Generation&amp;quot;, supplemented by two appendices, one on logic and one on symbolic computation; each chapter ends with a set of problems. It is broad enough in its coverage of a variety of approaches to give the reader a sense of the field of computational linguistics in its present state while managing to avoid a mere &amp;quot;Cook&apos;s Tour&amp;quot; approach (Pullum 1984). The author is conscientious about regularly going into certain problems at a level of detail that makes for more than just a superficial overview; at the same time, the range of topics covered is sufficiently broad that anyone wanting to base a course on a cover-to-cover reading of the book had better have a full year in which to do it. Allen does not discuss how to actually formulate algorithms in some selected language, though many Lisp-like data structures appear throughout and the overall perspective is quite clearly that of contemporary Al. (The second appendix covers the essential idea</context>
</contexts>
<marker>Pullum, 1984</marker>
<rawString>Pullum, G.K. 1984 If It&apos;s Tuesday, This Must be Glossematics. Natural Language and Linguistic Theory 2:151-156.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harry Tennant</author>
</authors>
<title>Natural Language Processing.</title>
<date>1981</date>
<publisher>Petrocelli Books,</publisher>
<location>New York, NY and Princeton, NJ.</location>
<contexts>
<context position="968" citStr="Tennant (1981)" startWordPosition="139" endWordPosition="140">ese MT. He recently spent 15 months in Japan as a visiting research fellow, first at NTT&apos;s Basic Research Laboratory, and then at Toshiba Corporation&apos;s R&amp;D Center, during which time he was able to closely investigate Japanese NLP activities. Somers&apos;s address is: Centre for Computational Linguistics, UMIST, P.O. Box 88, Manchester M60 1QD, England. E-mail: hls@ccl.umist.ac.uk. NATURAL LANGUAGE UNDERSTANDING James Allen (University of Rochester) Menlo Park, CA: Benjamin/Cummings, 1987, xvi + 574 PP. ISBN 0-8053-0330-8; (hb) Reviewed by Michael Kac University of Minnesota Since the appearance of Tennant (1981), there have been a number of books intended to serve as introductions to computational linguistics., including Harris (1985), Grishman (1986), and Winograd (1983). The book under review is directed at much the same audience and is, in my opinion, the best so far. This is not to say that it is flawless; but its weaknesses are due more to the nature of the subject than to any failings of the author. (I should note, however, that I have not used it in a course, and so cannot report on student reactions to it.) The book is in four parts, entitled &amp;quot;Syntactic Processing&amp;quot;, &amp;quot;Semantic Interpretation&amp;quot;,</context>
</contexts>
<marker>Tennant, 1981</marker>
<rawString>Tennant, Harry 1981 Natural Language Processing. Petrocelli Books, New York, NY and Princeton, NJ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Winograd</author>
</authors>
<title>Language as a Cognitive Process, Vol.]: Syntax.</title>
<date>1983</date>
<publisher>Addison-Wesley,</publisher>
<location>Reading, MA.</location>
<contexts>
<context position="1131" citStr="Winograd (1983)" startWordPosition="163" endWordPosition="164">, during which time he was able to closely investigate Japanese NLP activities. Somers&apos;s address is: Centre for Computational Linguistics, UMIST, P.O. Box 88, Manchester M60 1QD, England. E-mail: hls@ccl.umist.ac.uk. NATURAL LANGUAGE UNDERSTANDING James Allen (University of Rochester) Menlo Park, CA: Benjamin/Cummings, 1987, xvi + 574 PP. ISBN 0-8053-0330-8; (hb) Reviewed by Michael Kac University of Minnesota Since the appearance of Tennant (1981), there have been a number of books intended to serve as introductions to computational linguistics., including Harris (1985), Grishman (1986), and Winograd (1983). The book under review is directed at much the same audience and is, in my opinion, the best so far. This is not to say that it is flawless; but its weaknesses are due more to the nature of the subject than to any failings of the author. (I should note, however, that I have not used it in a course, and so cannot report on student reactions to it.) The book is in four parts, entitled &amp;quot;Syntactic Processing&amp;quot;, &amp;quot;Semantic Interpretation&amp;quot;, &amp;quot;Context and World Knowledge&amp;quot;, and &amp;quot;Response Generation&amp;quot;, supplemented by two appendices, one on logic and one on symbolic computation; each chapter ends with a s</context>
</contexts>
<marker>Winograd, 1983</marker>
<rawString>Winograd, Terry 1983 Language as a Cognitive Process, Vol.]: Syntax. Addison-Wesley, Reading, MA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>