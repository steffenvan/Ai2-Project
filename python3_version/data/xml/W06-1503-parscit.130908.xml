<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000037">
<title confidence="0.99757">
The Metagrammar Goes Multilingual:
A Cross-Linguistic Look at the V2-Phenomenon
</title>
<author confidence="0.997184">
Alexandra Kinyon
</author>
<affiliation confidence="0.9982755">
Department of CIS
University of Pennsylvania
</affiliation>
<email confidence="0.991702">
kinyon@linc.cis.upenn.edu
</email>
<author confidence="0.993589">
Tatjana SchefBer
</author>
<affiliation confidence="0.9988065">
Department of Linguistics
University of Pennsylvania
</affiliation>
<email confidence="0.99648">
tatjana@ling.upenn.edu
</email>
<author confidence="0.863995">
Owen Rambow
</author>
<affiliation confidence="0.7919655">
CCLS
Columbia University
</affiliation>
<email confidence="0.985595">
rambow@cs.columbia.edu
</email>
<author confidence="0.917115">
SinWon Yoon
</author>
<affiliation confidence="0.763545">
UFRL
</affiliation>
<address confidence="0.666145">
Universit´e Paris 7
</address>
<email confidence="0.99398">
swyoon@linguist.jussieu.fr
</email>
<author confidence="0.993938">
Aravind K. Joshi
</author>
<affiliation confidence="0.998182">
Department of CIS
University of Pennsylvania
</affiliation>
<email confidence="0.994966">
joshi@linc.cis.upenn.edu
</email>
<sectionHeader confidence="0.995608" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999902785714286">
We present an initial investigation into
the use of a metagrammar for explic-
itly sharing abstract grammatical specifi-
cations among languages. We define a
single class hierarchy for a metagrammar
which allows us to automatically gener-
ate grammars for different languages from
a single compact metagrammar hierarchy.
We use as our linguistic example the verb-
second phenomenon, which shows con-
siderable variation while retaining a ba-
sic property, namely the fact that the verb
can appear in one of two positions in the
clause.
</bodyText>
<sectionHeader confidence="0.905987" genericHeader="method">
1 An Overview of Metagrammars
</sectionHeader>
<bodyText confidence="0.934550946428571">
A metagrammar (MG) factors common properties
of TAG elementary trees to avoid redundancy, ease
grammar development, and expand coverage with
minimal effort: typically, from a compact man-
ually encoded MG of a few dozen classes, one
or more TAGs with several hundreds of elemen-
tary trees are automatically generated. This is
appealing from a grammar engineering point of
view, and also from a linguistic point of view:
cross-linguistic generalizations are expressed di-
rectly in the MG. In this paper, we extend some
earlier work on multilingual MGs (Candito, 1998;
Kinyon and Rambow, 2003) by proposing cross-
linguistic and framework-neutral syntactic invari-
ants, which we apply to TAG. We focus on the
verb-second phenomenon as a prototypical exam-
ple of cross-language variation.
The notion of Metagrammar Metagrammars
were first introduced by Candito (1996) to manu-
ally encode syntactic knowledge in a compact and
abstract class hierarchy which supports multiple
inheritance, and from which a TAG is automati-
cally generated offline. Candito’s class hierarchy
imposes a general organization of syntax into three
dimensions:
Dimension 1: to encode initial subcategoriza-
tion frames i.e. TAG tree families
Dimension 2: to encode valency alternations
/ redistribution of syntactic functions
Dimension 3: to encode the surface realiza-
tion of arguments.
Each class in the MG hierarchy is associated
with a partial tree description The tool computes
a set of well-formed classes by combining exactly
one terminal class from dimension 1, one termi-
nal class from dimension 2, and terminal classes
from dimensions 3 ( being the number of argu-
ments subcategorized by the lexical head anchor-
ing the elementary tree(s) generated). The con-
junction of the tree descriptions associated with
each well-formed class in the set yields a minimal
satisfying description, which results in the gener-
ation of one or more elementary trees. Candito’s
tool was used to develop a large TAG for French
as well as a medium-size TAG for Italian Candito
(1999), so multilinguality was addressed from the
start, but each language had its dedicated hierar-
chy, with no sharing of classes despite the obvious
similarities between Italian and French. A related
approach was proposed by (Xia, 2001); the work
of Evans, Gazdar, and Weir (2000) also has some
common elements with MG.
Framework- and language-neutral syntactic
invariants Using a MG, and following Can-
dito, we can postulate cross-linguistic and cross-
framework syntactic invariants such as:
</bodyText>
<page confidence="0.98815">
17
</page>
<bodyText confidence="0.980847603773585">
Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 17–24,
Sydney, July 2006. c�2006 Association for Computational Linguistics
The notion of subcategorization
The existence of a finite number of syntactic
functions (subject, object etc.)
The existence of a finite number of syntactic
categories (NP, PP, etc.)
The existence of valency alternations (Can-
dito’s dimension 2)
The existence, orthogonal to valency alterna-
tions, of syntactic phenomena which do not
alter valency, such as wh-movement (Can-
dito’s dimension 3).
These invariants — unlike other framework-
specific syntactic assumptions such as the exis-
tence of “movement” or “wh-traces” — are ac-
cepted by most if not all existing frameworks, even
though the machinery of a given framework may
not necessarily account explicitly for each invari-
ant. For instance, TAG does not have an explicit
notion of syntactic function: although by conven-
tion node indices tend to reflect a function, it is not
enforced by the framework’s machinery.1
Hypertags Based on such framework- and
language-neutral syntactic properties, Kinyon
(2000) defined the notion of Hypertag (HT), a
combination of Supertags (ST) Srinivas (1997)
and of the MG. A ST is a TAG elementary tree,
which provides richer information than standard
POS tagging, but in a framework-specific man-
ner (TAG), and also in a grammar-specific manner
since a ST tagset can’t be ported from one TAG
to another TAG. A HT is an abstraction of STs,
where the main syntactic properties of any given
ST is encoded in a general readable Feature Struc-
ture (FS), by recording which MG classes a ST in-
herited from when it was generated. Figure 1 illus-
trates theST, HTpair for Par qui sera accom-
pagn´ee Marie ‘By whom will Mary be accompa-
nied’. We see that a HT feature structure directly
reflects the MG organization, by having 3 features
“Dimension 1”, “Dimension 2” and “Dimension
3”, where each feature takes its value from the MG
terminal classes used to generate a given ST.
The XMG Tool Candito’s tool brought a sig-
nificant linguistic insight, therefore we essentially
retain the above-mentioned syntactic invariants.
However, more recent MG implementations have
been developed since, each adding its significant
contribution to the underlying metagrammatical
hypothesis.
In this paper, we use the eXtensible MetaGram-
mar (XMG) tool which was developed by Crabb´e
</bodyText>
<footnote confidence="0.7074064">
1But several attempts have been made to explicitly add
functions to TAG, e.g. by Kameyama (1986) to retain the
benefits of both TAG and LFG, or by Prolo (2006) to account
for the coordination of constituents of different categories,
yet sharing the same function.
</footnote>
<figure confidence="0.7714435">
S
PP S
</figure>
<figureCaption confidence="0.995207">
Figure 1: ASuperTag, HyperTagpair for ac-
compagn´ee (‘accompanied’) obtained with Can-
dito’s MetaGrammar compiler
</figureCaption>
<bodyText confidence="0.9994605">
(2005). In XMG, an MG consists of a set of
classes similar to those in object-oriented pro-
gramming, which are structured into a multiple
inheritance hierarchy. Each class specifies a par-
tial tree description (expressed by dominance and
precedence constraints). The nodes of these tree
fragment descriptions may be annotated with fea-
tures. Classes may instantiate each other, and they
may be parametrized (e.g., to hand down features
like the grammatical function of a substitution
node). The compiler unifies the instantiations of
tree descriptions that are called. This unification
is additionally guided by node colors, constraints
that specify that a node must not be unified with
any other node (red), must be unified (white), or
may be unified, but only with a white node (black).
XMG allows us to implement a hierarchy similar
to that of Candito, but it also allows us to modify
and extend it, as no structural assumptions about
the class hierarchy are hard-coded.
</bodyText>
<sectionHeader confidence="0.65203" genericHeader="method">
2 The V2 Phenomenon
</sectionHeader>
<bodyText confidence="0.9988382">
The Verb-Second (V2) phenomenon is a well-
known set of data that demonstrates small-scale
cross-linguistic variation. The examples in (1)
show German, a language with a V2-constraint:
(1a) is completely grammatical, while (1b) is not.
This is considered to be due to the fact that the
finite verb is required to be located in “second po-
sition” (V2) in German. Other languages with a
V2 constraint include Dutch, Yiddish, Frisian, Ice-
landic, Mainland Scandinavian, and Kashmiri.
</bodyText>
<listItem confidence="0.536603">
(1) a. Auf dem Weg sieht der Junge eine Ente.
</listItem>
<bodyText confidence="0.6677695">
on the path sees the boy a duck
‘On the path, the boy sees a duck.’
</bodyText>
<figure confidence="0.995860083333334">
NWh
(qui)
Aux V
sera accompagn´ee
N
(Marie)
P
par
DIMENSION3 COMPLEMENT WHQUESTIONEDBYCOMPLEMENT
DIMENSION1 STRICTTRANSITIVE
DIMENSION2 PERSONALFULLPASSIVE
SUBJECT INVERTEDSUBJECT
</figure>
<page confidence="0.673371">
18
</page>
<bodyText confidence="0.697662">
b. * Auf dem Weg der Junge sieht eine Ente.
on the path the boy sees a duck
Int.: ‘On the path, the boy sees a duck.’
Interestingly, these languages differ with re-
spect to how exactly the constraint is realized.
Rambow and Santorini (1995) present data from
the mentioned languages and provide a set of pa-
rameters that account for the exhibited variation.
In the following, for the sake of brevity, we will
confine the discussion to two languages: German,
and Yiddish. The German data is as follows (we
do not repeat (1a) from above):
(2) a. Der Junge sieht eine Ente auf dem Weg.
the boy sees a duck on the path
‘On the path, the boy sees a duck.’
b. ..., dass der Junge auf dem Weg eine Ente
. . . , that the boy on the path a duck
sieht.
sees
‘..., that the boy sees a duck on the path.’
c. Eine Ente sieht der Junge.
a duck sees the boy
‘The boy sees a duck.’
The Yiddish data:
</bodyText>
<listItem confidence="0.487277">
(3) a. Dos yingl zet oyfn veg a katshke.
</listItem>
<bodyText confidence="0.913951555555556">
the boy sees on-the path a duck
‘On the path, the boy sees a duck.’
c. ..., az dos yingl zet a katshke
. . . , that the boy sees a duck
‘. . . ,that the boy sees a duck.’
While main clauses exhibit V2 in German, embed-
ded clauses with complementizers are verb-final
(2b). In contrast, Yiddish embedded clauses must
also be V2 (3c).
</bodyText>
<sectionHeader confidence="0.696047" genericHeader="method">
3 Handling V2 in the Metagrammar
</sectionHeader>
<bodyText confidence="0.999987607142857">
It is striking that the basic V2 phenomenon is the
same in all of these languages: the verb can ap-
pear in either its underlying position, or in sec-
ond position (or, in some cases, third). We claim
that what governs the appearance of the verb
in these different positions (and thus the cross-
linguistic differences) is that the heads—the verbal
head and functional heads such as auxiliaries and
complementizers—interact in specific ways. For
example, in German a complementizer is not com-
patible with a verbal V2 head, while in Yiddish it
is. We express the interaction among heads by as-
signing the heads different values for a set of fea-
tures. Which heads can carry which feature values
is a language-specific parameter. Our implementa-
tion is based on the previous pen-and-pencil anal-
ysis of Rambow and Santorini (1995), which we
have modified and extended.
The work we present in this paper thus has
a threefold interest: (1) we show how to han-
dle an important syntactic phenomenon cross-
linguistically in a MG framework; (2) we partially
validate, correct, and extend a previously proposed
linguistically-motivated analysis; and (3) we pro-
vide an initial fragment of a MG implementa-
tion from which we generate TAGs for languages
which are relatively less-studied and for which no
TAG currently exists (Yiddish).
</bodyText>
<sectionHeader confidence="0.849805" genericHeader="method">
4 Elements of Our Implementation
</sectionHeader>
<bodyText confidence="0.999595666666666">
In this paper, we only address verbal elementary
trees. We define a verbal realization to be a com-
bination of three classes (or “dimensions” in Can-
dito’s terminology): a subcategorization frame,
a redistribution of arguments/valency alternation
(in our case, voice, which we do not further dis-
cuss), and a topology, which encodes the posi-
tion and characteristics of the verbal head. Thus,
we reinterpret Candito’s “Dimension 3” to con-
centrate on the position of the verbal heads, with
the different argument realizations (topicalized,
base position) depending on the available heads,
rather than defined as first-class citizens. The sub-
cat and argument redistributions result in a set of
structures for arguments which are left- or right-
branching (depending on language and grammat-
ical function). Figure 2 shows some argument
structures for German. The topology reflects the
basic clause structure, that is, the distribution of ar-
guments and adjuncts, and the position of the verb
(initial, V2, final, etc.). Our notion of sentence
topology is thus similar to the notion formalized
by Gerdes (2002). Specifically, we see positions
of arguments and adjuncts as defined by the posi-
tions of their verbal heads. However, while Gerdes
(2002) assumes as basic underlying notions the
fields created by the heads (the traditional Vorfeld
for the topicalized element and the Mittelfeld be-
tween the verb in second position and the verb in
clause-final position), we only use properties of
the heads. The fields are epiphenomenal for us.As
mentioned above, we use the following set of fea-
tures to define our MG topology:
I (finite tense and subject-verb agreement):
creates a specifier position for agreement
which must be filled in a derivation, but al-
lows recursion (i.e., adjunction at IP).
Top (topic): a feature which creates a spec-
ifier position for the topic (semantically rep-
resented in a lambda abstraction) which must
be filled in a derivation, and which does not
allow recursion.
M (mood): a feature with semantic content
(to be defined), but no specifier.
C (complementizer): a lexical feature intro-
duced only by complementizers.
We can now define our topology in more detail.
It consists of two main parts:
</bodyText>
<figure confidence="0.915074">
‘On the path, the boy sees a duck.’
b. Oyfn veg zet dos yingl
on-the path sees the boy
a katshke.
a duck.
</figure>
<page confidence="0.958884">
19
</page>
<table confidence="0.97908475">
German:
What Features Introduced Directionality
1 Verb (clause-final) +I head-final
2 Verb (V2, subject-inital) +M, +Top, +I head-initial
3 Verb (V2, non-subject-initial) +M, +Top head-initial
4 Complementizer +C, +M head-initial
Yiddish:
What Features Introduced Directionality
1 Verb +I head-initial
2 Verb (V2, subject-inital) +M, +Top, +I head-initial
3 Verb (V2, non-subject-initial) +M, +Top head-initial
4 Complementizer +C head-initial
</table>
<figureCaption confidence="0.992418">
Figure 4: Head inventories for German and Yiddish.
</figureCaption>
<figure confidence="0.999918946428572">
1:
CAT V
I +
TOP
M
C
black
2:
CAT V
I +
TOP +
M +
C
black
3:
CAT V
I +
TOP +
M +
C
black
4:
CAT V
I +
TOP
M +
C +
black
V
V
V
CAT V
I
TOP
M
C
white
cOMP
CAT V
I
TOP
M
C
white
CAT V
I +
TOP
M
C
white
CAT V
I +
TOP
M
C
white
</figure>
<figureCaption confidence="0.987323">
Figure 5: Head structures for German corresponding to the table in Figure 4 (above)
</figureCaption>
<figure confidence="0.999459690909091">
4: CAT V
I +
TOP +
M +
C +
black
CAT V
I +
TOP +
M +
C
black
3:
2:
1:
CAT V
I +
TOP +
M +
C
black
CAT V
I +
TOP
M
C
black
V
V
V
CAT V
I
TOP
M
C
white
CAT V
I +
TOP
M
C
white
CAT V
I
TOP
M
C
white
CAT V
I +
TOP +
M +
C
white
cOMP
</figure>
<figureCaption confidence="0.998478">
Figure 6: Head structures for Yiddish corresponding to the table in Figure 4 (below)
</figureCaption>
<page confidence="0.852777">
20
</page>
<figureCaption confidence="0.84230725">
Figure 2: The argument structures
Figure 3: The projection structure; feature values
can be filled in at the top feature structure to con-
trol the derivation.
</figureCaption>
<bodyText confidence="0.999930763157895">
The projection includes the origin of the
verb in the phrase structure (with an empty
head since we assume it is no longer there)
and its maximal projection. It is shown in
Figure 3. The maximal projection expresses
the expected feature content. For example,
if we want to model non-finite clauses, the
maximal projection will have [I], while root
V2 clauses will have [+Top], and embedded
finite clauses with complementizers will have
[+I,+C].
Structures for heads, which can be head-
initial or head-final. They introduce catego-
rial features. Languages differ in what sort of
heads they have. Which heads are available
for a given language is captured in a head in-
ventory, i.e., a list of possible heads for that
language (which use the head structure just
mentioned). Two such lists are shown in Fig-
ure 4, for German and Yiddish. The corre-
sponding head structures are shown in Fig-
ures 5 and 6.
A topology is a combination of the projection
and any combination of heads allowed by the
language-specific head inventory. This is hard
to express in XMG, so instead we list the spe-
cific combinations allowed. One might ask how
we derive trees for language without the V2 phe-
nomenon. Languages without V2 will usually
have a smaller set of possible heads. We are work-
ing on a metagrammar for Korean in parallel with
our work on the V2 languages. Korean is very
much like German without the V2 phenomenon:
the verbal head can only be in clause-final position
(i.e., head 1 from Figure 5. However, passiviza-
tion and scrambling can be treated the same way
in Korean and German, since these phenomena are
independent of V2.
</bodyText>
<sectionHeader confidence="0.954651" genericHeader="method">
5 Sample Derivation
</sectionHeader>
<bodyText confidence="0.999937333333333">
Given a feature ordering (CMTopI) and
language-specific head inventories as in Figure 4,
we compile out MGs for German (Figure 5) and
Yiddish (Figure 6).2 The projection and the ar-
gument realizations do not differ between the two
languages: thus, these parts of the MG can be
reused. The features, which were introduced for
descriptive reasons, now guide the TAG compila-
tion: only certain heads can be combined. Further-
more, subjects and non-subjects are distinguished,
as well as topicalized and non-topicalized NPs
(producing 4 kinds of arguments so far). The com-
piler picks out any number of compatible elements
from the Metagrammar and performs the unifica-
tions of nodes that are permitted (or required) by
</bodyText>
<footnote confidence="0.950984">
2All terminal nodes are “red”; spine nodes have been an-
notated with their color.
</footnote>
<figure confidence="0.999037272727273">
✡CAT V
I +
TOP +
black
✡CAT V
I +
TOP +
white
CAT V
I
TOP +
black
CAT V
I +
TOP
black
CAT V
I +
TOP
white
CAT V
I
TOP
black
NP
NP
CAT V
I
TOP +
white
CAT V
I
TOP
white
NP
NP
CAT V
white ✟
CAT V
I
TOP
M
C
black
</figure>
<page confidence="0.998825">
21
</page>
<bodyText confidence="0.9999616">
the node descriptions and the colors. By way of
example, the derivations of elementary trees which
can be used in a TAG analysis of German (2c) and
Yiddish (3c) are shown in Figures 7 and 8, respec-
tively.
</bodyText>
<sectionHeader confidence="0.954218" genericHeader="conclusions">
6 Conclusion and Future work
</sectionHeader>
<bodyText confidence="0.99870675">
This paper showed how cross-linguistic general-
izations (in this case, V2) can be incorporated into
a multilingual MG. This allows not only the reuse
of MG parts for new (often, not well-studied) lan-
guages, but it also enables us to study small-scale
parametric variation between languages in a con-
trolled and formal way. We are currently modify-
ing and extending our implementation in several
ways.
The Notion of Projection In our current ap-
proach, the verb is never at the basis of the pro-
jection, it has always been removed into a new
location. This may seem unmotivated in certain
cases, such as German verb-final sentences. We
are looking into using the XMG unification to ac-
tually place the verb at the bottom of the projection
in these cases.
Generating Top and Bottom Features The
generated TAG grammar currently does not have
top and bottom feature sets, as one would expect
in a feature-based TAG. These are important for
us so we can force adjunction in adjunct-initial V2
sentences (where the element in clause-initial po-
sition is not an argument of the verb). We intend
to follow the approach laid out in Crabb´e (2005) in
order to generate top and bottom feature structures
on the nodes of the TAG grammar.
Generating test-suites to document our
grammars Since XMG offers more complex
object-oriented functionalities, including in-
stances, and therefore recursion, it is now
straightforward to directly generate parallel mul-
tilingual sentences directly from XMG, without
any intermediate grammar generation step. The
only obstacle remains the explicit encoding of
Hypertags into XMG.
</bodyText>
<sectionHeader confidence="0.997481" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.998733777777778">
We thank Yannick Parmentier, Joseph Leroux,
Bertrand Gaiffe, Benoit Crabb´e, the LORIA XMG
team, and Julia Hockenmaier for their invaluable
help; Eric de la Clergerie, Carlos Prolo and the
Xtag group for their helpful feedback, comments
and suggestions on different aspects of this work;
and Marie-H´el`ene Candito for her insights. This
work was supported by NSF Grant 0414409 to the
University of Pennsylvania.
</bodyText>
<sectionHeader confidence="0.990142" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.995299309523809">
Candito, M. H. 1998. Building parallel LTAG for French and
Italian. In Proc. ACL-98. Montreal.
Candito, M.H. 1996. A principle-based hierarchical repre-
sentation of LTAGs. In Proc. COLING-96. Copenhagen.
Candito, M.H. 1999. Repr´esentation modulaire et
param´etrable de grammaires ´electroniques lexicalis´ees.
Doctoral Dissertation, Univ. Paris 7.
Cl´ement, L., and A. Kinyon. 2003. Generating parallel mul-
tilingual LFG-TAG grammars using a MetaGrammar. In
Proc. ACL-03. Sapporo.
Clergerie, E. De La. 2005. From metagrammars to factorized
TAG/TIG parsers. In IWPT-05. Trento.
Crabb´e, B. 2005. Repr´esentation informatique de grammaires
fortement lexicalis´ees. Doctoral Dissertation, Univ. Nancy
2.
Evans, R., G. Gazdar, and D. Weir. 2000. Lexical rules
are just lexical rules. In Tree Adjoining Grammars, ed.
A. Abeill´e and O. Rambow. CSLI.
Gerdes, K. 2002. DTAG. attempt to generate a useful TAG for
German using a metagrammar. In Proc. TAG+6. Venice.
Kameyama, M. 1986. Characterising LFG in terms of TAG.
In Unpublished report. Univ. of Pennsylvania.
Kinyon, A. 2000. Hypertags. In Proc. COLING-00. Sar-
rebrucken.
Kinyon, A., and O. Rambow. 2003. Generating cross-
language and cross-framework annotated test-suites using
a MetaGrammar. In Proc. LINC-EACL-03. Budapest.
Prolo, C. 2006. Handling unlike coordinated phrases in TAG
by mixing Syntactic Category and Grammatical Function.
In Proc. TAG+8. Sidney.
Rambow, Owen, and Beatrice Santorini. 1995. Incremental
phrase structure generation and a universal theory of V2.
In Proceedings of NELS 25, ed. J.N. Beckman, 373–387.
Amherst, MA: GSLA.
Srinivas, B. 1997. Complexity of lexical descriptions and its
relevance for partial parsing. Doctoral Dissertation, Univ.
of Pennsylvania.
Xia, F. 2001. Automatic grammar generation from two per-
spectives. Doctoral Dissertation, Univ. of Pennsylvania.
XTAG Research Group. 2001. A lexicalized tree adjoin-
ing grammar for English. Technical Report IRCS-01-03,
IRCS, University of Pennsylvania.
</reference>
<page confidence="0.99557">
22
</page>
<figure confidence="0.999623660377359">
CAT V
I +
TOP
M
C
black
CAT V
I
TOP
M
C
white
CAT V
I
TOP
M
C
black
CAT V
white ✟
CAT V
I
TOP +
black
CAT V
I
TOP +
white
CAT V
I +
TOP +
M +
C
black
NP
CAT V
I +
TOP
M
C
white
v
CAT V
I +
TOP
black
CAT V
I +
TOP
white
NP
Object-Topicalized + Head 3 + Subject-Non-Topicalized + Head 1 + Projection
(White and Black nodes next to each other are unified.)
</figure>
<figureCaption confidence="0.999959">
Figure 7: Derivation of the German elementary tree NPV NP(2d).
</figureCaption>
<page confidence="0.9904345">
23
24
</page>
<figure confidence="0.999895169811321">
CAT V
I +
TOP
M +
C +
black
CAT V
I
TOP
M
C
white
v
CAT V
I
TOP
M
C
black
Head 4 (Comp) + Subject-Topicalized + Head 2 + Object-Non-Topicalized + Projection
CAT V
I +
TOP
M +
C
white
NP
CAT V
I +
TOP +
white
CAT V
I +
TOP +
M +
C
black
CAT V
I
TOP
black
CAT V
I
TOP
white
NP
CAT V
white ✟
comp
CAT V
I +
TOP +
black
</figure>
<figureCaption confidence="0.999942">
Figure 8: Derivation of the Yiddish elementary tree Comp NPV NP(3c).
</figureCaption>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000008">
<title confidence="0.99619">The Metagrammar Goes Multilingual: A Cross-Linguistic Look at the V2-Phenomenon</title>
<author confidence="0.995273">Alexandra</author>
<affiliation confidence="0.999357">Department of University of</affiliation>
<email confidence="0.998562">kinyon@linc.cis.upenn.edu</email>
<author confidence="0.799277">Tatjana</author>
<affiliation confidence="0.999203">Department of University of</affiliation>
<email confidence="0.997606">tatjana@ling.upenn.edu</email>
<author confidence="0.912629">Owen</author>
<affiliation confidence="0.972483">Columbia</affiliation>
<email confidence="0.999564">rambow@cs.columbia.edu</email>
<affiliation confidence="0.5531375">SinWon Universit´e Paris</affiliation>
<email confidence="0.926562">swyoon@linguist.jussieu.fr</email>
<author confidence="0.940628">K Aravind</author>
<affiliation confidence="0.999395">Department of University of</affiliation>
<email confidence="0.999019">joshi@linc.cis.upenn.edu</email>
<abstract confidence="0.998263868243244">We present an initial investigation into the use of a metagrammar for explicitly sharing abstract grammatical specifications among languages. We define a single class hierarchy for a metagrammar which allows us to automatically generate grammars for different languages from a single compact metagrammar hierarchy. We use as our linguistic example the verbsecond phenomenon, which shows considerable variation while retaining a basic property, namely the fact that the verb can appear in one of two positions in the clause. 1 An Overview of Metagrammars A metagrammar (MG) factors common properties of TAG elementary trees to avoid redundancy, ease grammar development, and expand coverage with minimal effort: typically, from a compact manually encoded MG of a few dozen classes, one or more TAGs with several hundreds of elementary trees are automatically generated. This is appealing from a grammar engineering point of view, and also from a linguistic point of view: cross-linguistic generalizations are expressed directly in the MG. In this paper, we extend some earlier work on multilingual MGs (Candito, 1998; Kinyon and Rambow, 2003) by proposing crosslinguistic and framework-neutral syntactic invariants, which we apply to TAG. We focus on the verb-second phenomenon as a prototypical example of cross-language variation. notion of Metagrammar were first introduced by Candito (1996) to manually encode syntactic knowledge in a compact and abstract class hierarchy which supports multiple inheritance, and from which a TAG is automatically generated offline. Candito’s class hierarchy imposes a general organization of syntax into three dimensions: Dimension 1: to encode initial subcategorization frames i.e. TAG tree families Dimension 2: to encode valency alternations / redistribution of syntactic functions Dimension 3: to encode the surface realization of arguments. Each class in the MG hierarchy is associated with a partial tree description The tool computes a set of well-formed classes by combining exactly one terminal class from dimension 1, one terminal class from dimension 2, and terminal classes from dimensions 3 ( being the number of arguments subcategorized by the lexical head anchoring the elementary tree(s) generated). The conjunction of the tree descriptions associated with each well-formed class in the set yields a minimal satisfying description, which results in the generation of one or more elementary trees. Candito’s tool was used to develop a large TAG for French as well as a medium-size TAG for Italian Candito (1999), so multilinguality was addressed from the start, but each language had its dedicated hierarchy, with no sharing of classes despite the obvious similarities between Italian and French. A related approach was proposed by (Xia, 2001); the work of Evans, Gazdar, and Weir (2000) also has some common elements with MG. Frameworkand language-neutral syntactic a MG, and following Candito, we can postulate cross-linguistic and crossframework syntactic invariants such as: 17 of the 8th International Workshop on Tree Adjoining Grammar and Related pages July 2006. Association for Computational Linguistics The notion of subcategorization The existence of a finite number of syntactic functions (subject, object etc.) The existence of a finite number of syntactic categories (NP, PP, etc.) The existence of valency alternations (Candito’s dimension 2) The existence, orthogonal to valency alternations, of syntactic phenomena which do not valency, such as (Candito’s dimension 3). These invariants — unlike other frameworkspecific syntactic assumptions such as the exisof “movement” or — are accepted by most if not all existing frameworks, even though the machinery of a given framework may not necessarily account explicitly for each invariant. For instance, TAG does not have an explicit notion of syntactic function: although by convention node indices tend to reflect a function, it is not by the framework’s on such frameworkand language-neutral syntactic properties, Kinyon defined the notion of a combination of Supertags (ST) Srinivas (1997) and of the MG. A ST is a TAG elementary tree, which provides richer information than standard POS tagging, but in a framework-specific manner (TAG), and also in a grammar-specific manner since a ST tagset can’t be ported from one TAG to another TAG. A HT is an abstraction of STs, where the main syntactic properties of any given ST is encoded in a general readable Feature Structure (FS), by recording which MG classes a ST inherited from when it was generated. Figure 1 illustheST, HTpair for qui sera accom- Marie whom will Mary be accompanied’. We see that a HT feature structure directly reflects the MG organization, by having 3 features “Dimension 1”, “Dimension 2” and “Dimension 3”, where each feature takes its value from the MG terminal classes used to generate a given ST. XMG Tool tool brought a significant linguistic insight, therefore we essentially retain the above-mentioned syntactic invariants. However, more recent MG implementations have been developed since, each adding its significant contribution to the underlying metagrammatical hypothesis. In this paper, we use the eXtensible MetaGrammar (XMG) tool which was developed by Crabb´e several attempts have been made to explicitly add functions to TAG, e.g. by Kameyama (1986) to retain the benefits of both TAG and LFG, or by Prolo (2006) to account for the coordination of constituents of different categories, yet sharing the same function. S PP S 1: ASuperTag, HyperTagpair for acobtained with Candito’s MetaGrammar compiler (2005). In XMG, an MG consists of a set of to those in object-oriented programming, which are structured into a multiple inheritance hierarchy. Each class specifies a partial tree description (expressed by dominance and precedence constraints). The nodes of these tree fragment descriptions may be annotated with features. Classes may instantiate each other, and they may be parametrized (e.g., to hand down features like the grammatical function of a substitution node). The compiler unifies the instantiations of tree descriptions that are called. This unification additionally guided by constraints that specify that a node must not be unified with any other node (red), must be unified (white), or may be unified, but only with a white node (black). XMG allows us to implement a hierarchy similar to that of Candito, but it also allows us to modify and extend it, as no structural assumptions about the class hierarchy are hard-coded. 2 The V2 Phenomenon The Verb-Second (V2) phenomenon is a wellknown set of data that demonstrates small-scale cross-linguistic variation. The examples in (1) show German, a language with a V2-constraint: (1a) is completely grammatical, while (1b) is not. This is considered to be due to the fact that the finite verb is required to be located in “second position” (V2) in German. Other languages with a V2 constraint include Dutch, Yiddish, Frisian, Icelandic, Mainland Scandinavian, and Kashmiri. a. Auf dem Weg siehtder Junge eine Ente. on the path sees the boy a duck ‘On the path, the boy sees a duck.’ NWh (qui) Aux V sera accompagn´ee N (Marie) P par 18 * Auf dem Weg der Junge siehteine Ente. on the path the boy sees a duck Int.: ‘On the path, the boy sees a duck.’ Interestingly, these languages differ with respect to how exactly the constraint is realized. Rambow and Santorini (1995) present data from the mentioned languages and provide a set of parameters that account for the exhibited variation. In the following, for the sake of brevity, we will confine the discussion to two languages: German, and Yiddish. The German data is as follows (we do not repeat (1a) from above): a. Der Junge siehteine Ente auf dem Weg. the boy sees a duck on the path ‘On the path, the boy sees a duck.’ b. ..., dass der Junge auf dem Weg eine Ente . . . , that the boy on the path a sieht. sees ‘..., that the boy sees a duck on the path.’ Eine Ente siehtder Junge. a duck sees the boy ‘The boy sees a duck.’ The Yiddish data: (3) a. Dos yingl zet oyfn veg a katshke. the boy sees on-the path a duck ‘On the path, the boy sees a duck.’ c. ..., az dos yingl zet a katshke . . . , that the boy sees a duck ‘. . . ,that the boy sees a duck.’ While main clauses exhibit V2 in German, embedded clauses with complementizers are verb-final (2b). In contrast, Yiddish embedded clauses must also be V2 (3c). 3 Handling V2 in the Metagrammar It is striking that the basic V2 phenomenon is the same in all of these languages: the verb can appear in either its underlying position, or in second position (or, in some cases, third). We claim that what governs the appearance of the verb in these different positions (and thus the crosslinguistic differences) is that the heads—the verbal head and functional heads such as auxiliaries and complementizers—interact in specific ways. For example, in German a complementizer is not compatible with a verbal V2 head, while in Yiddish it is. We express the interaction among heads by assigning the heads different values for a set of features. Which heads can carry which feature values is a language-specific parameter. Our implementation is based on the previous pen-and-pencil analysis of Rambow and Santorini (1995), which we have modified and extended. The work we present in this paper thus has a threefold interest: (1) we show how to handle an important syntactic phenomenon crosslinguistically in a MG framework; (2) we partially validate, correct, and extend a previously proposed linguistically-motivated analysis; and (3) we provide an initial fragment of a MG implementation from which we generate TAGs for languages which are relatively less-studied and for which no TAG currently exists (Yiddish). 4 Elements of Our Implementation In this paper, we only address verbal elementary trees. We define a verbal realization to be a combination of three classes (or “dimensions” in Canterminology): a of arguments/valency alternation (in our case, voice, which we do not further disand a which encodes the position and characteristics of the verbal head. Thus, we reinterpret Candito’s “Dimension 3” to concentrate on the position of the verbal heads, with the different argument realizations (topicalized, base position) depending on the available heads, rather than defined as first-class citizens. The subcat and argument redistributions result in a set of for are leftor rightbranching (depending on language and grammatical function). Figure 2 shows some argument structures for German. The topology reflects the basic clause structure, that is, the distribution of arguments and adjuncts, and the position of the verb (initial, V2, final, etc.). Our notion of sentence topology is thus similar to the notion formalized by Gerdes (2002). Specifically, we see positions of arguments and adjuncts as defined by the positions of their verbal heads. However, while Gerdes (2002) assumes as basic underlying notions the created by the heads (the traditional the topicalized element and the between the verb in second position and the verb in clause-final position), we only use properties of the heads. The fields are epiphenomenal for us.As mentioned above, we use the following set of features to define our MG topology: I (finite tense and subject-verb agreement): creates a specifier position for agreement which must be filled in a derivation, but allows recursion (i.e., adjunction at IP). Top (topic): a feature which creates a specifier position for the topic (semantically represented in a lambda abstraction) which must be filled in a derivation, and which does not allow recursion. M (mood): a feature with semantic content (to be defined), but no specifier. C (complementizer): a lexical feature introduced only by complementizers. We can now define our topology in more detail. It consists of two main parts: ‘On the path, the boy sees a duck.’ b. Oyfn veg zet dos yingl on-the path sees the boy a katshke. a duck.</abstract>
<date confidence="0.764696">19</date>
<title confidence="0.447554">German: What Features Introduced Directionality</title>
<note confidence="0.883590083333333">1 Verb (clause-final) +I head-final 2 Verb (V2, subject-inital) +M, +Top, +I head-initial 3 Verb (V2, non-subject-initial) +M, +Top head-initial 4 Complementizer +C, +M head-initial Yiddish: What Features Introduced Directionality 1 Verb +I head-initial 2 Verb (V2, subject-inital) +M, +Top, +I head-initial 3 Verb (V2, non-subject-initial) +M, +Top head-initial 4 Complementizer +C head-initial Figure 4: Head inventories for German and Yiddish. 1:</note>
<title confidence="0.435646">M</title>
<abstract confidence="0.980266714285714">C black 2: C black 3: C black 4: black V V V I M C white cOMP I M C white M C white M C white Figure 5: Head structures for German corresponding to the table in Figure 4 (above) 4: CAT V I + + M + C black + C black 3: 2: 1: C black M C black V V V I M C white M C white I M C white C white cOMP Figure 6: Head structures for Yiddish corresponding to the table in Figure 4 (below) 20 Figure 2: The argument structures Figure 3: The projection structure; feature values can be filled in at the top feature structure to control the derivation. the origin of the verb in the phrase structure (with an empty head since we assume it is no longer there) and its maximal projection. It is shown in Figure 3. The maximal projection expresses the expected feature content. For example, if we want to model non-finite clauses, the maximal projection will have [I], while root V2 clauses will have [+Top], and embedded finite clauses with complementizers will have [+I,+C]. for which can be headinitial or head-final. They introduce categorial features. Languages differ in what sort of heads they have. Which heads are available a given language is captured in a ini.e., a list of possible heads for that language (which use the head structure just mentioned). Two such lists are shown in Figure 4, for German and Yiddish. The corresponding head structures are shown in Figures 5 and 6. A topology is a combination of the projection and any combination of heads allowed by the language-specific head inventory. This is hard to express in XMG, so instead we list the specific combinations allowed. One might ask how we derive trees for language without the V2 phenomenon. Languages without V2 will usually have a smaller set of possible heads. We are working on a metagrammar for Korean in parallel with our work on the V2 languages. Korean is very much like German without the V2 phenomenon: the verbal head can only be in clause-final position (i.e., head 1 from Figure 5. However, passivization and scrambling can be treated the same way in Korean and German, since these phenomena are independent of V2. 5 Sample Derivation Given a feature ordering (CMTopI) and language-specific head inventories as in Figure 4, we compile out MGs for German (Figure 5) and (Figure The projection and the argument realizations do not differ between the two languages: thus, these parts of the MG can be reused. The features, which were introduced for descriptive reasons, now guide the TAG compilation: only certain heads can be combined. Furthermore, subjects and non-subjects are distinguished, as well as topicalized and non-topicalized NPs (producing 4 kinds of arguments so far). The compiler picks out any number of compatible elements from the Metagrammar and performs the unifications of nodes that are permitted (or required) by terminal nodes are “red”; spine nodes have been annotated with their color. black white I black black white I black NP NP I white I white NP NP I M C black 21 the node descriptions and the colors. By way of example, the derivations of elementary trees which can be used in a TAG analysis of German (2c) and Yiddish (3c) are shown in Figures 7 and 8, respectively. 6 Conclusion and Future work This paper showed how cross-linguistic generalizations (in this case, V2) can be incorporated into a multilingual MG. This allows not only the reuse of MG parts for new (often, not well-studied) languages, but it also enables us to study small-scale parametric variation between languages in a controlled and formal way. We are currently modifying and extending our implementation in several ways. Notion of Projection our current approach, the verb is never at the basis of the projection, it has always been removed into a new location. This may seem unmotivated in certain cases, such as German verb-final sentences. We are looking into using the XMG unification to actually place the verb at the bottom of the projection in these cases. Top and Bottom Features generated TAG grammar currently does not have top and bottom feature sets, as one would expect in a feature-based TAG. These are important for us so we can force adjunction in adjunct-initial V2 sentences (where the element in clause-initial position is not an argument of the verb). We intend to follow the approach laid out in Crabb´e (2005) in order to generate top and bottom feature structures on the nodes of the TAG grammar. Generating test-suites to document our XMG offers more complex object-oriented functionalities, including instances, and therefore recursion, it is now straightforward to directly generate parallel multilingual sentences directly from XMG, without any intermediate grammar generation step. The only obstacle remains the explicit encoding of Hypertags into XMG. Acknowledgments We thank Yannick Parmentier, Joseph Leroux, Bertrand Gaiffe, Benoit Crabb´e, the LORIA XMG team, and Julia Hockenmaier for their invaluable help; Eric de la Clergerie, Carlos Prolo and the Xtag group for their helpful feedback, comments and suggestions on different aspects of this work; and Marie-H´el`ene Candito for her insights. This work was supported by NSF Grant 0414409 to the University of Pennsylvania.</abstract>
<note confidence="0.782297833333333">References Candito, M. H. 1998. Building parallel LTAG for French and In Montreal. Candito, M.H. 1996. A principle-based hierarchical repreof LTAGs. In Copenhagen. Candito, M.H. 1999. Repr´esentation modulaire et param´etrable de grammaires ´electroniques lexicalis´ees. Doctoral Dissertation, Univ. Paris 7. Cl´ement, L., and A. Kinyon. 2003. Generating parallel multilingual LFG-TAG grammars using a MetaGrammar. In Sapporo. Clergerie, E. De La. 2005. From metagrammars to factorized parsers. In Trento. Crabb´e, B. 2005. Repr´esentation informatique de grammaires fortement lexicalis´ees. Doctoral Dissertation, Univ. Nancy 2. Evans, R., G. Gazdar, and D. Weir. 2000. Lexical rules just lexical rules. In Adjoining ed. A. Abeill´e and O. Rambow. CSLI. Gerdes, K. 2002. DTAG. attempt to generate a useful TAG for using a metagrammar. In Venice. Kameyama, M. 1986. Characterising LFG in terms of TAG. Univ. of Pennsylvania. A. 2000. Hypertags. In Sarrebrucken. Kinyon, A., and O. Rambow. 2003. Generating crosslanguage and cross-framework annotated test-suites using MetaGrammar. In Budapest. Prolo, C. 2006. Handling unlike coordinated phrases in TAG by mixing Syntactic Category and Grammatical Function. Sidney. Rambow, Owen, and Beatrice Santorini. 1995. Incremental phrase structure generation and a universal theory of V2. of NELS ed. J.N. Beckman, 373–387. Amherst, MA: GSLA. Srinivas, B. 1997. Complexity of lexical descriptions and its relevance for partial parsing. Doctoral Dissertation, Univ. of Pennsylvania. Xia, F. 2001. Automatic grammar generation from two perspectives. Doctoral Dissertation, Univ. of Pennsylvania. XTAG Research Group. 2001. A lexicalized tree adjoining grammar for English. Technical Report IRCS-01-03,</note>
<affiliation confidence="0.924241">IRCS, University of Pennsylvania.</affiliation>
<address confidence="0.805044">22</address>
<email confidence="0.691644">M</email>
<abstract confidence="0.963363716981132">C black I M C white I M C black I black I white C black NP M C white v black white NP Object-Topicalized + Head 3 + Subject-Non-Topicalized + Head 1 + Projection (White and Black nodes next to each other are unified.) Figure 7: Derivation of the German elementary tree NPV NP(2d). 23 24 black I M C white v I M C black Head 4 (Comp) + Subject-Topicalized + Head 2 + Object-Non-Topicalized + Projection C white NP white C black I black I white NP comp black</abstract>
<note confidence="0.508443">Figure 8: Derivation of the Yiddish elementary tree Comp NPV NP(3c).</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>M H Candito</author>
</authors>
<title>Building parallel LTAG for French and Italian.</title>
<date>1998</date>
<booktitle>In Proc. ACL-98.</booktitle>
<location>Montreal.</location>
<contexts>
<context position="1596" citStr="Candito, 1998" startWordPosition="228" endWordPosition="229">itions in the clause. 1 An Overview of Metagrammars A metagrammar (MG) factors common properties of TAG elementary trees to avoid redundancy, ease grammar development, and expand coverage with minimal effort: typically, from a compact manually encoded MG of a few dozen classes, one or more TAGs with several hundreds of elementary trees are automatically generated. This is appealing from a grammar engineering point of view, and also from a linguistic point of view: cross-linguistic generalizations are expressed directly in the MG. In this paper, we extend some earlier work on multilingual MGs (Candito, 1998; Kinyon and Rambow, 2003) by proposing crosslinguistic and framework-neutral syntactic invariants, which we apply to TAG. We focus on the verb-second phenomenon as a prototypical example of cross-language variation. The notion of Metagrammar Metagrammars were first introduced by Candito (1996) to manually encode syntactic knowledge in a compact and abstract class hierarchy which supports multiple inheritance, and from which a TAG is automatically generated offline. Candito’s class hierarchy imposes a general organization of syntax into three dimensions: Dimension 1: to encode initial subcateg</context>
</contexts>
<marker>Candito, 1998</marker>
<rawString>Candito, M. H. 1998. Building parallel LTAG for French and Italian. In Proc. ACL-98. Montreal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M H Candito</author>
</authors>
<title>A principle-based hierarchical representation of LTAGs.</title>
<date>1996</date>
<booktitle>In Proc. COLING-96.</booktitle>
<location>Copenhagen.</location>
<contexts>
<context position="1891" citStr="Candito (1996)" startWordPosition="271" endWordPosition="272">s with several hundreds of elementary trees are automatically generated. This is appealing from a grammar engineering point of view, and also from a linguistic point of view: cross-linguistic generalizations are expressed directly in the MG. In this paper, we extend some earlier work on multilingual MGs (Candito, 1998; Kinyon and Rambow, 2003) by proposing crosslinguistic and framework-neutral syntactic invariants, which we apply to TAG. We focus on the verb-second phenomenon as a prototypical example of cross-language variation. The notion of Metagrammar Metagrammars were first introduced by Candito (1996) to manually encode syntactic knowledge in a compact and abstract class hierarchy which supports multiple inheritance, and from which a TAG is automatically generated offline. Candito’s class hierarchy imposes a general organization of syntax into three dimensions: Dimension 1: to encode initial subcategorization frames i.e. TAG tree families Dimension 2: to encode valency alternations / redistribution of syntactic functions Dimension 3: to encode the surface realization of arguments. Each class in the MG hierarchy is associated with a partial tree description The tool computes a set of well-f</context>
</contexts>
<marker>Candito, 1996</marker>
<rawString>Candito, M.H. 1996. A principle-based hierarchical representation of LTAGs. In Proc. COLING-96. Copenhagen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M H Candito</author>
</authors>
<title>Repr´esentation modulaire et param´etrable de grammaires ´electroniques lexicalis´ees. Doctoral Dissertation,</title>
<date>1999</date>
<location>Univ. Paris</location>
<contexts>
<context position="3061" citStr="Candito (1999)" startWordPosition="457" endWordPosition="458">escription The tool computes a set of well-formed classes by combining exactly one terminal class from dimension 1, one terminal class from dimension 2, and terminal classes from dimensions 3 ( being the number of arguments subcategorized by the lexical head anchoring the elementary tree(s) generated). The conjunction of the tree descriptions associated with each well-formed class in the set yields a minimal satisfying description, which results in the generation of one or more elementary trees. Candito’s tool was used to develop a large TAG for French as well as a medium-size TAG for Italian Candito (1999), so multilinguality was addressed from the start, but each language had its dedicated hierarchy, with no sharing of classes despite the obvious similarities between Italian and French. A related approach was proposed by (Xia, 2001); the work of Evans, Gazdar, and Weir (2000) also has some common elements with MG. Framework- and language-neutral syntactic invariants Using a MG, and following Candito, we can postulate cross-linguistic and crossframework syntactic invariants such as: 17 Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 17–24, S</context>
</contexts>
<marker>Candito, 1999</marker>
<rawString>Candito, M.H. 1999. Repr´esentation modulaire et param´etrable de grammaires ´electroniques lexicalis´ees. Doctoral Dissertation, Univ. Paris 7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Cl´ement</author>
<author>A Kinyon</author>
</authors>
<title>Generating parallel multilingual LFG-TAG grammars using a MetaGrammar. In</title>
<date>2003</date>
<booktitle>Proc. ACL-03.</booktitle>
<location>Sapporo.</location>
<marker>Cl´ement, Kinyon, 2003</marker>
<rawString>Cl´ement, L., and A. Kinyon. 2003. Generating parallel multilingual LFG-TAG grammars using a MetaGrammar. In Proc. ACL-03. Sapporo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E De La Clergerie</author>
</authors>
<title>From metagrammars to factorized TAG/TIG parsers.</title>
<date>2005</date>
<booktitle>In IWPT-05.</booktitle>
<location>Trento.</location>
<marker>Clergerie, 2005</marker>
<rawString>Clergerie, E. De La. 2005. From metagrammars to factorized TAG/TIG parsers. In IWPT-05. Trento.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Crabb´e</author>
</authors>
<title>Repr´esentation informatique de grammaires fortement lexicalis´ees.</title>
<date>2005</date>
<journal>Doctoral Dissertation, Univ. Nancy</journal>
<volume>2</volume>
<marker>Crabb´e, 2005</marker>
<rawString>Crabb´e, B. 2005. Repr´esentation informatique de grammaires fortement lexicalis´ees. Doctoral Dissertation, Univ. Nancy 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Evans</author>
<author>G Gazdar</author>
<author>D Weir</author>
</authors>
<title>Lexical rules are just lexical rules.</title>
<date>2000</date>
<booktitle>In Tree Adjoining Grammars,</booktitle>
<editor>ed. A. Abeill´e and O. Rambow.</editor>
<publisher>CSLI.</publisher>
<marker>Evans, Gazdar, Weir, 2000</marker>
<rawString>Evans, R., G. Gazdar, and D. Weir. 2000. Lexical rules are just lexical rules. In Tree Adjoining Grammars, ed. A. Abeill´e and O. Rambow. CSLI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Gerdes</author>
</authors>
<title>DTAG. attempt to generate a useful TAG for German using a metagrammar.</title>
<date>2002</date>
<booktitle>In Proc. TAG+6.</booktitle>
<location>Venice.</location>
<contexts>
<context position="11842" citStr="Gerdes (2002)" startWordPosition="1910" endWordPosition="1911">the different argument realizations (topicalized, base position) depending on the available heads, rather than defined as first-class citizens. The subcat and argument redistributions result in a set of structures for arguments which are left- or rightbranching (depending on language and grammatical function). Figure 2 shows some argument structures for German. The topology reflects the basic clause structure, that is, the distribution of arguments and adjuncts, and the position of the verb (initial, V2, final, etc.). Our notion of sentence topology is thus similar to the notion formalized by Gerdes (2002). Specifically, we see positions of arguments and adjuncts as defined by the positions of their verbal heads. However, while Gerdes (2002) assumes as basic underlying notions the fields created by the heads (the traditional Vorfeld for the topicalized element and the Mittelfeld between the verb in second position and the verb in clause-final position), we only use properties of the heads. The fields are epiphenomenal for us.As mentioned above, we use the following set of features to define our MG topology: I (finite tense and subject-verb agreement): creates a specifier position for agreement </context>
</contexts>
<marker>Gerdes, 2002</marker>
<rawString>Gerdes, K. 2002. DTAG. attempt to generate a useful TAG for German using a metagrammar. In Proc. TAG+6. Venice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kameyama</author>
</authors>
<title>Characterising LFG in terms of TAG. In Unpublished report.</title>
<date>1986</date>
<institution>Univ. of Pennsylvania.</institution>
<contexts>
<context position="6060" citStr="Kameyama (1986)" startWordPosition="930" endWordPosition="931">1”, “Dimension 2” and “Dimension 3”, where each feature takes its value from the MG terminal classes used to generate a given ST. The XMG Tool Candito’s tool brought a significant linguistic insight, therefore we essentially retain the above-mentioned syntactic invariants. However, more recent MG implementations have been developed since, each adding its significant contribution to the underlying metagrammatical hypothesis. In this paper, we use the eXtensible MetaGrammar (XMG) tool which was developed by Crabb´e 1But several attempts have been made to explicitly add functions to TAG, e.g. by Kameyama (1986) to retain the benefits of both TAG and LFG, or by Prolo (2006) to account for the coordination of constituents of different categories, yet sharing the same function. S PP S Figure 1: ASuperTag, HyperTagpair for accompagn´ee (‘accompanied’) obtained with Candito’s MetaGrammar compiler (2005). In XMG, an MG consists of a set of classes similar to those in object-oriented programming, which are structured into a multiple inheritance hierarchy. Each class specifies a partial tree description (expressed by dominance and precedence constraints). The nodes of these tree fragment descriptions may be</context>
</contexts>
<marker>Kameyama, 1986</marker>
<rawString>Kameyama, M. 1986. Characterising LFG in terms of TAG. In Unpublished report. Univ. of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kinyon</author>
</authors>
<title>Hypertags.</title>
<date>2000</date>
<booktitle>In Proc. COLING-00. Sarrebrucken.</booktitle>
<contexts>
<context position="4683" citStr="Kinyon (2000)" startWordPosition="702" endWordPosition="703">ncy, such as wh-movement (Candito’s dimension 3). These invariants — unlike other frameworkspecific syntactic assumptions such as the existence of “movement” or “wh-traces” — are accepted by most if not all existing frameworks, even though the machinery of a given framework may not necessarily account explicitly for each invariant. For instance, TAG does not have an explicit notion of syntactic function: although by convention node indices tend to reflect a function, it is not enforced by the framework’s machinery.1 Hypertags Based on such framework- and language-neutral syntactic properties, Kinyon (2000) defined the notion of Hypertag (HT), a combination of Supertags (ST) Srinivas (1997) and of the MG. A ST is a TAG elementary tree, which provides richer information than standard POS tagging, but in a framework-specific manner (TAG), and also in a grammar-specific manner since a ST tagset can’t be ported from one TAG to another TAG. A HT is an abstraction of STs, where the main syntactic properties of any given ST is encoded in a general readable Feature Structure (FS), by recording which MG classes a ST inherited from when it was generated. Figure 1 illustrates theST, HTpair for Par qui sera</context>
</contexts>
<marker>Kinyon, 2000</marker>
<rawString>Kinyon, A. 2000. Hypertags. In Proc. COLING-00. Sarrebrucken.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kinyon</author>
<author>O Rambow</author>
</authors>
<title>Generating crosslanguage and cross-framework annotated test-suites using a MetaGrammar. In</title>
<date>2003</date>
<booktitle>Proc. LINC-EACL-03.</booktitle>
<location>Budapest.</location>
<contexts>
<context position="1622" citStr="Kinyon and Rambow, 2003" startWordPosition="230" endWordPosition="233">lause. 1 An Overview of Metagrammars A metagrammar (MG) factors common properties of TAG elementary trees to avoid redundancy, ease grammar development, and expand coverage with minimal effort: typically, from a compact manually encoded MG of a few dozen classes, one or more TAGs with several hundreds of elementary trees are automatically generated. This is appealing from a grammar engineering point of view, and also from a linguistic point of view: cross-linguistic generalizations are expressed directly in the MG. In this paper, we extend some earlier work on multilingual MGs (Candito, 1998; Kinyon and Rambow, 2003) by proposing crosslinguistic and framework-neutral syntactic invariants, which we apply to TAG. We focus on the verb-second phenomenon as a prototypical example of cross-language variation. The notion of Metagrammar Metagrammars were first introduced by Candito (1996) to manually encode syntactic knowledge in a compact and abstract class hierarchy which supports multiple inheritance, and from which a TAG is automatically generated offline. Candito’s class hierarchy imposes a general organization of syntax into three dimensions: Dimension 1: to encode initial subcategorization frames i.e. TAG </context>
</contexts>
<marker>Kinyon, Rambow, 2003</marker>
<rawString>Kinyon, A., and O. Rambow. 2003. Generating crosslanguage and cross-framework annotated test-suites using a MetaGrammar. In Proc. LINC-EACL-03. Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Prolo</author>
</authors>
<title>Handling unlike coordinated phrases in TAG by mixing Syntactic Category and Grammatical Function.</title>
<date>2006</date>
<booktitle>In Proc. TAG+8.</booktitle>
<location>Sidney.</location>
<contexts>
<context position="6123" citStr="Prolo (2006)" startWordPosition="943" endWordPosition="944">value from the MG terminal classes used to generate a given ST. The XMG Tool Candito’s tool brought a significant linguistic insight, therefore we essentially retain the above-mentioned syntactic invariants. However, more recent MG implementations have been developed since, each adding its significant contribution to the underlying metagrammatical hypothesis. In this paper, we use the eXtensible MetaGrammar (XMG) tool which was developed by Crabb´e 1But several attempts have been made to explicitly add functions to TAG, e.g. by Kameyama (1986) to retain the benefits of both TAG and LFG, or by Prolo (2006) to account for the coordination of constituents of different categories, yet sharing the same function. S PP S Figure 1: ASuperTag, HyperTagpair for accompagn´ee (‘accompanied’) obtained with Candito’s MetaGrammar compiler (2005). In XMG, an MG consists of a set of classes similar to those in object-oriented programming, which are structured into a multiple inheritance hierarchy. Each class specifies a partial tree description (expressed by dominance and precedence constraints). The nodes of these tree fragment descriptions may be annotated with features. Classes may instantiate each other, a</context>
</contexts>
<marker>Prolo, 2006</marker>
<rawString>Prolo, C. 2006. Handling unlike coordinated phrases in TAG by mixing Syntactic Category and Grammatical Function. In Proc. TAG+8. Sidney.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Owen Rambow</author>
<author>Beatrice Santorini</author>
</authors>
<title>Incremental phrase structure generation and a universal theory of V2.</title>
<date>1995</date>
<booktitle>In Proceedings of NELS 25,</booktitle>
<pages>373--387</pages>
<editor>ed. J.N. Beckman,</editor>
<publisher>GSLA.</publisher>
<location>Amherst, MA:</location>
<contexts>
<context position="8351" citStr="Rambow and Santorini (1995)" startWordPosition="1301" endWordPosition="1304">onstraint include Dutch, Yiddish, Frisian, Icelandic, Mainland Scandinavian, and Kashmiri. (1) a. Auf dem Weg sieht der Junge eine Ente. on the path sees the boy a duck ‘On the path, the boy sees a duck.’ NWh (qui) Aux V sera accompagn´ee N (Marie) P par DIMENSION3 COMPLEMENT WHQUESTIONEDBYCOMPLEMENT DIMENSION1 STRICTTRANSITIVE DIMENSION2 PERSONALFULLPASSIVE SUBJECT INVERTEDSUBJECT 18 b. * Auf dem Weg der Junge sieht eine Ente. on the path the boy sees a duck Int.: ‘On the path, the boy sees a duck.’ Interestingly, these languages differ with respect to how exactly the constraint is realized. Rambow and Santorini (1995) present data from the mentioned languages and provide a set of parameters that account for the exhibited variation. In the following, for the sake of brevity, we will confine the discussion to two languages: German, and Yiddish. The German data is as follows (we do not repeat (1a) from above): (2) a. Der Junge sieht eine Ente auf dem Weg. the boy sees a duck on the path ‘On the path, the boy sees a duck.’ b. ..., dass der Junge auf dem Weg eine Ente . . . , that the boy on the path a duck sieht. sees ‘..., that the boy sees a duck on the path.’ c. Eine Ente sieht der Junge. a duck sees the bo</context>
<context position="10217" citStr="Rambow and Santorini (1995)" startWordPosition="1652" endWordPosition="1655">claim that what governs the appearance of the verb in these different positions (and thus the crosslinguistic differences) is that the heads—the verbal head and functional heads such as auxiliaries and complementizers—interact in specific ways. For example, in German a complementizer is not compatible with a verbal V2 head, while in Yiddish it is. We express the interaction among heads by assigning the heads different values for a set of features. Which heads can carry which feature values is a language-specific parameter. Our implementation is based on the previous pen-and-pencil analysis of Rambow and Santorini (1995), which we have modified and extended. The work we present in this paper thus has a threefold interest: (1) we show how to handle an important syntactic phenomenon crosslinguistically in a MG framework; (2) we partially validate, correct, and extend a previously proposed linguistically-motivated analysis; and (3) we provide an initial fragment of a MG implementation from which we generate TAGs for languages which are relatively less-studied and for which no TAG currently exists (Yiddish). 4 Elements of Our Implementation In this paper, we only address verbal elementary trees. We define a verba</context>
</contexts>
<marker>Rambow, Santorini, 1995</marker>
<rawString>Rambow, Owen, and Beatrice Santorini. 1995. Incremental phrase structure generation and a universal theory of V2. In Proceedings of NELS 25, ed. J.N. Beckman, 373–387. Amherst, MA: GSLA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Srinivas</author>
</authors>
<title>Complexity of lexical descriptions and its relevance for partial parsing.</title>
<date>1997</date>
<institution>Doctoral Dissertation, Univ. of Pennsylvania.</institution>
<contexts>
<context position="4768" citStr="Srinivas (1997)" startWordPosition="715" endWordPosition="716">rameworkspecific syntactic assumptions such as the existence of “movement” or “wh-traces” — are accepted by most if not all existing frameworks, even though the machinery of a given framework may not necessarily account explicitly for each invariant. For instance, TAG does not have an explicit notion of syntactic function: although by convention node indices tend to reflect a function, it is not enforced by the framework’s machinery.1 Hypertags Based on such framework- and language-neutral syntactic properties, Kinyon (2000) defined the notion of Hypertag (HT), a combination of Supertags (ST) Srinivas (1997) and of the MG. A ST is a TAG elementary tree, which provides richer information than standard POS tagging, but in a framework-specific manner (TAG), and also in a grammar-specific manner since a ST tagset can’t be ported from one TAG to another TAG. A HT is an abstraction of STs, where the main syntactic properties of any given ST is encoded in a general readable Feature Structure (FS), by recording which MG classes a ST inherited from when it was generated. Figure 1 illustrates theST, HTpair for Par qui sera accompagn´ee Marie ‘By whom will Mary be accompanied’. We see that a HT feature stru</context>
</contexts>
<marker>Srinivas, 1997</marker>
<rawString>Srinivas, B. 1997. Complexity of lexical descriptions and its relevance for partial parsing. Doctoral Dissertation, Univ. of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Xia</author>
</authors>
<title>Automatic grammar generation from two perspectives.</title>
<date>2001</date>
<institution>Doctoral Dissertation, Univ. of Pennsylvania.</institution>
<contexts>
<context position="3293" citStr="Xia, 2001" startWordPosition="493" endWordPosition="494">ed by the lexical head anchoring the elementary tree(s) generated). The conjunction of the tree descriptions associated with each well-formed class in the set yields a minimal satisfying description, which results in the generation of one or more elementary trees. Candito’s tool was used to develop a large TAG for French as well as a medium-size TAG for Italian Candito (1999), so multilinguality was addressed from the start, but each language had its dedicated hierarchy, with no sharing of classes despite the obvious similarities between Italian and French. A related approach was proposed by (Xia, 2001); the work of Evans, Gazdar, and Weir (2000) also has some common elements with MG. Framework- and language-neutral syntactic invariants Using a MG, and following Candito, we can postulate cross-linguistic and crossframework syntactic invariants such as: 17 Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 17–24, Sydney, July 2006. c�2006 Association for Computational Linguistics The notion of subcategorization The existence of a finite number of syntactic functions (subject, object etc.) The existence of a finite number of syntactic categori</context>
</contexts>
<marker>Xia, 2001</marker>
<rawString>Xia, F. 2001. Automatic grammar generation from two perspectives. Doctoral Dissertation, Univ. of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>XTAG Research Group</author>
</authors>
<title>A lexicalized tree adjoining grammar for English.</title>
<date>2001</date>
<tech>Technical Report IRCS-01-03,</tech>
<institution>IRCS, University of Pennsylvania.</institution>
<marker>Group, 2001</marker>
<rawString>XTAG Research Group. 2001. A lexicalized tree adjoining grammar for English. Technical Report IRCS-01-03, IRCS, University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>