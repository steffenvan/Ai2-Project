<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.114257">
<title confidence="0.887098">
Briefly Noted
Essential Programming for Linguistics
</title>
<author confidence="0.980235">
Martin Weisser
</author>
<affiliation confidence="0.990818">
(University of Bayreuth)
Edinburgh University Press (Edinburgh
</affiliation>
<bodyText confidence="0.958246879310345">
Advanced Textbooks in Linguistics,
edited by Peter Ackema and
Mitsuhiko Ota); x+174 pp; hardbound
ISBN 978-0-7486-3855-0, $115.00, £70.00;
paperbound, ISBN 978-0-7486-3856-7,
$29.50, £19.99
This book is of only marginal use as a Perl
primer for linguists or as a university text-
book. Thick with explicatory text in 10-point
Minion font, some chapters, such as that
on references and modules, are consequently
very difficult to work through, and are writ-
ten in sometimes abstruse language (“The
other thing is something to do with how we
use functions,” p. 55), which further impedes
full comprehension.
The book’s exercises become increasingly
arduous (number 24, for example, asks the
reader to build a basic concordancer using the
localizer “my,” which is not explained until
20 pages later), and readers must therefore re-
sort to downloading Weisser’s solutions and
trying to decipher the code themselves. Fur-
thermore, these solutions provide programs
that are usually too basic for genuine linguis-
tic research, such as a dictionary-compiler
into which the user must type every entry by
hand. Because Weisser makes little reference
to other work, readers leave this book with
the discouraging feeling that no usable Perl
code exists for linguists, and that they are still
unable to write their own.
The book’s greatest shortcomings are in the
areas of subroutines, modules, and objects.
Making only a single passing reference to
CPAN in his chapter on modularity, Weisser
refers to only three modules (pp. 110–112)
but never provides a functioning program
that uses them. Because one of Perl’s greatest
strengths is in the reusability of its modules,
it is disappointing to find so little on them in
this book.
Objects are also a great strength of Perl,
but Weisser dismisses them in a dense four-
page chapter which ends, as usual, with the
acknowledgment that the examples he has
provided can only be made useful by writing
a program “which, however, I shall leave to
you as a further exercise” (p. 120).
Linguists seeking a primer or classroom
textbook on Perl are probably still best served
by Michael Hammond’s Programming for Lin-
guists (Blackwell, 2003), which, although it
has slightly fewer examples of linguistically
relevant code, brings readers to about the
same skill level that Weisser’s book does, and
with greater clarity.—Brian O´ Broin, William
Paterson University
</bodyText>
<page confidence="0.997605">
789
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.037466">
<title confidence="0.99733">Briefly Noted Essential Programming for Linguistics</title>
<author confidence="0.999993">Martin Weisser</author>
<affiliation confidence="0.935209">(University of Bayreuth) Edinburgh University Press (Edinburgh</affiliation>
<abstract confidence="0.902232157894737">Advanced Textbooks in Linguistics, edited by Peter Ackema and Mitsuhiko Ota); x+174 pp; hardbound ISBN 978-0-7486-3855-0, $115.00, £70.00; paperbound, ISBN 978-0-7486-3856-7, $29.50, £19.99 This book is of only marginal use as a Perl primer for linguists or as a university textbook. Thick with explicatory text in 10-point Minion font, some chapters, such as that on references and modules, are consequently very difficult to work through, and are written in sometimes abstruse language (“The other thing is something to do with how we use functions,” p. 55), which further impedes full comprehension. The book’s exercises become increasingly arduous (number 24, for example, asks the reader to build a basic concordancer using the localizer “my,” which is not explained until 20 pages later), and readers must therefore resort to downloading Weisser’s solutions and trying to decipher the code themselves. Furthermore, these solutions provide programs that are usually too basic for genuine linguistic research, such as a dictionary-compiler into which the user must type every entry by hand. Because Weisser makes little reference to other work, readers leave this book with the discouraging feeling that no usable Perl code exists for linguists, and that they are still unable to write their own. The book’s greatest shortcomings are in the areas of subroutines, modules, and objects. Making only a single passing reference to CPAN in his chapter on modularity, Weisser refers to only three modules (pp. 110–112) but never provides a functioning program that uses them. Because one of Perl’s greatest strengths is in the reusability of its modules, it is disappointing to find so little on them in this book. Objects are also a great strength of Perl, but Weisser dismisses them in a dense fourpage chapter which ends, as usual, with the acknowledgment that the examples he has provided can only be made useful by writing a program “which, however, I shall leave to you as a further exercise” (p. 120). Linguists seeking a primer or classroom textbook on Perl are probably still best served Michael Hammond’s for Lin- 2003), which, although it has slightly fewer examples of linguistically relevant code, brings readers to about the same skill level that Weisser’s book does, and greater O´ Broin, William</abstract>
<affiliation confidence="0.999125">Paterson University</affiliation>
<address confidence="0.941849">789</address>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>