<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001510">
<title confidence="0.893922">
Polarity sensitivity and evaluation order in type-logical grammar
</title>
<author confidence="0.965325">
Chung-chieh Shan
</author>
<affiliation confidence="0.969647">
Division of Engineering and Applied Sciences
Harvard University
</affiliation>
<address confidence="0.918159">
Cambridge, MA 02138
</address>
<email confidence="0.99885">
ccshan@post.harvard.edu
</email>
<sectionHeader confidence="0.99666" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999941">
We present a novel, type-logical analysis of po-
larity sensitivity: how negative polarity items
(like any and ever) or positive ones (like some)
are licensed or prohibited. It takes not just
scopal relations but also linear order into ac-
count, using the programming-language no-
tions of delimited continuations and evaluation
order, respectively. It thus achieves greater em-
pirical coverage than previous proposals.
</bodyText>
<sectionHeader confidence="0.998428" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999210952380952">
Polarity sensitivity (Ladusaw, 1979) has been a popu-
lar linguistic phenomenon to analyze in the categorial
(Dowty, 1994), lexical-functional (Fry, 1997, 1999), and
type-logical (Bernardi, 2002; Bernardi and Moot, 2001)
approaches to grammar. The multitude of these analy-
ses is in part due to the more explicit emphasis that these
traditions place on the syntax-semantics interface—be it
in the form of Montague-style semantic rules, the Curry-
Howard isomorphism, or linear logic as glue—and the
fact that polarity sensitivity is a phenomenon that spans
syntax and semantics.
On one hand, which polarity items are licensed or pro-
hibited in a given linguistic environment depends, by and
large, on semantic properties of that environment (Ladu-
saw, 1979; Krifka, 1995, inter alia). For example, to
a first approximation, negative polarity items can occur
only in downward-entailing contexts, such as under the
scope of a monotonically decreasing quantifier. A quan-
tifier q, of type (e —� t) —� t where e is the type of indi-
viduals and t is the type of truth values, is monotonically
decreasing just in case
</bodyText>
<listItem confidence="0.871007">
(1) bs1. bs2. (bx. s2(x) =* s1(x)) =* q(s1) =* q(s2).
</listItem>
<bodyText confidence="0.897183">
Thus (2a) is acceptable because the scope of nobody is
downward-entailing, whereas (2b–c) are unacceptable.
</bodyText>
<listItem confidence="0.985979333333333">
(2) a. Nobody saw anybody.
b. *Everybody saw anybody.
c. *Alice saw anybody.
</listItem>
<bodyText confidence="0.99989875">
On the other hand, a restriction on surface syntactic
form, such as that imposed by polarity sensitivity, is by
definition a matter of syntax. Besides, there are syntac-
tic restrictions on the configuration relating the licensor
to the licensee. For example, (2a) above is acceptable—
nobody manages to license anybody—but (3) below is
not. As the contrast in (4) further illustrates, the licen-
sor usually needs to precede the licensee.
</bodyText>
<listItem confidence="0.999676">
(3) *Anybody saw nobody.
(4) a. Nobody’s mother saw anybody’s father.
b. *Anybody’s mother saw nobody’s father.
</listItem>
<bodyText confidence="0.999402222222222">
The syntactic relations allowed between licensor and li-
censee for polarity sensitivity purposes are similar to
those allowed between antecedent and pronoun for vari-
able binding purposes. To take one example, just as an
antecedent’s ability to bind a (c-commanded) pronoun
percolates up to a containing phrase (such as in (5), what
B¨uring (2001) calls “binding out of DP”), a licensor’s
ability to license a (c-commanded) polarity item perco-
lates up to a containing phrase (such as in (4a)).
</bodyText>
<listItem confidence="0.729482">
(5) [Every boyi’s mother] saw hisi father.
</listItem>
<bodyText confidence="0.999817333333333">
Moreover, just as a bindee can precede a binder in a sen-
tence when the bindee sits in a clause that excludes the
binder (as in (6); see Williams, 1997, §2.1), a licensee
can precede a licensor in a sentence when the licensee
sits in a clause that excludes the licensor (as in (7); see
Ladusaw, 1979, page 112).
</bodyText>
<listItem confidence="0.974669">
(6) That hei would be arrested for speeding came as a
surprise to everyi motorist.
(7) That anybody would be arrested for speeding came
as a surprise to the district attorney.
</listItem>
<bodyText confidence="0.999718285714286">
This paper presents a new, type-logical account of po-
larity sensitivity that encompasses the semantic proper-
ties exemplified in (2) and the syntactic properties exem-
plified in (3–4). Taking advantage of the Curry-Howard
isomorphism, it is the first account of polarity sensitivity
in the grammatical frameworks mentioned above to cor-
rectly fault (3) for the failure of nobody to appear before
</bodyText>
<figure confidence="0.723870571428571">
Axiom
For each unary mode α (blank, u, or p in this paper):
^αI ` A ❑↓ I
I ` ❑↓αA α
A ` ^αA I[^αA] ` B ^αE
I[A] ` B
For each binary mode β (blank or c in this paper):
A ` B ◦ C I[B ◦β C] ` A ◦βE
I[A] ` A
A ◦β B ` C A ` B/βA I ` A
A ` C/βB /βI A ◦β I ` B /βE
B ◦β A ` C \βI I ` A A ` \�
A\OB E
A ` B\βC I ◦β A ` B
</figure>
<figureCaption confidence="0.888225">
Figure 1: Natural deduction rules for multimodal cate-
gorial grammar (Bernardi, 2002, pages 9 and 50). To
reduce notation, we do not distinguish structural punc-
tuation from logical connectives.
</figureCaption>
<equation confidence="0.992535833333334">
(Root) A a` A ◦c 1
(Left) (B ◦ C) ◦c K a` B ◦c (C ◦ K)
(Right) (^B ◦ C) ◦c K a` C ◦c (K ◦ ^B)
(T) A ` ^A
(K0) ^A ◦ ^B ` ^(A ◦ B)
(Unquote) ^^uA ` ^uA
</equation>
<figureCaption confidence="0.998054">
Figure 2: Structural postulates
</figureCaption>
<bodyText confidence="0.999950769230769">
anybody. The analysis makes further correct predictions,
as we will see at the end of §3.
The analysis here borrows the concepts of delim-
ited continuations (Felleisen, 1988; Danvy and Filinski,
1990) and evaluation order from the study of program-
ming languages. Thus this paper is about computational
linguistics, in the sense of applying insights from com-
puter science to linguistics. The basic idea transfers to
other formalisms, but type-logical grammar—more pre-
cisely, multimodal categorial grammar—offers a frag-
ment NL^R− whose parsing problem is decidable using
proof-net technology (Moot, 2002, §9.2), which is of
great help while developing and testing the theory.
</bodyText>
<sectionHeader confidence="0.976874" genericHeader="method">
2 Delimited continuations
</sectionHeader>
<bodyText confidence="0.999790682926829">
Figure 1 shows natural deduction rules for multimodal
categorial grammar, a member of the type-logical fam-
ily of grammar formalisms (Moortgat, 1996a; Bernardi,
2002). Figure 2 lists our structural postulates. These two
figures form the logic underlying our account.
We use two binary modes: the default mode (blank)
for surface syntactic composition, and the continuation
mode c. As usual, a formula of the form A ◦ B can be
read as “A followed by B”. By contrast, a formula of
the form A ◦c B can be read as “A in the context B”. In
programming-language terms, the formula A ◦c B plugs
a subexpression A into a delimited continuation B. The
Root rule creates a trivial continuation: it says that 1 is
a right identity for the c mode, where 1 can be thought
of as a nullary connective, effectively enabling empty an-
tecedents for the c mode. The binary modes, along with
the first three postulates in Figure 2, provide a new way
to encode Moortgat’s ternary connective q (1996b) for in-
situ quantification. For intuition, it may help to draw log-
ical formulas as binary trees, distinguishing graphically
between the two modes.
To further capture the interaction between scope inver-
sion and polarity sensitivity exemplified in (3–4), we use
three unary modes: the value mode (blank), the unquota-
tion mode u, and the polarity mode p. The value mode
marks when an expression is devoid of in-situ quantifi-
cation, or, in programming-language terms, when it is a
pure value rather than a computation with control effects.
As a special case, any formula can be turned pure by em-
bedding it under a diamond using the T postulate, analo-
gous to quotation or staging in programming languages.
Quotations can be concatenated using the K0 postulate.
The unquotation mode u marks when a diamond can be
canceled using the Unquote postulate. Unquotation is
also known as eval or run in programming languages.
The polarity mode p, and the empirical utility of these
unary modes, are explained in §3.
A derivation is considered complete if it culminates in
a sequent whose antecedent is built using the default bi-
nary mode ◦ only, and whose conclusion is a type of the
form ^uA. Below is a derivation of Alice saw Bob.
</bodyText>
<listItem confidence="0.907668">
(8) Alice ` np
</listItem>
<bodyText confidence="0.990605">
Alice ◦ (saw ◦ Bob) ` ^us
Note that clauses take the type ^us rather than the usual s,
so the Unquote rule can operate on clauses. We abbrevi-
ate ^us to s◦ below.
To illustrate in-situ quantification, Figure 3 on the fol-
lowing page shows a derivation of Alice saw a man’s
mother. For brevity, we treat a man as a single lexical
item. It is a quantificational noun phrase whose polarity
is neutral in a sense that contrasts with other quantifiers
considered below. The crucial part of this derivation is
the use of the structural postulates Root, Left, and Right
to divide the sentence into two parts: the subexpression
a man and its context Alice saw ’s mother. The type of
a man, s◦/c(np\cs◦), can be read as “a subexpression that
produces a clause when placed in a context that can en-
close an np to make a clause”.
</bodyText>
<figure confidence="0.999862975609756">
A ` A
I ` ❑↓αA ↓
^αI ` A ❑αE
I ` A
^αI ` ^αA ^αI
I ` B A ` C
I ◦β A ` B ◦β C ◦βI
saw ` (np\^us)/np Bob ` np /E
saw ◦ Bob ` np\^us \E
np ◦ ’s mother ` np /E
saw ◦ (np ◦ ’s mother) ` np\s◦ \E
Alice ◦ (saw ◦ (np ◦ ’s mother)) ` s◦
*(Alice ◦ (saw ◦ (np ◦ ’s mother))) ` *s◦ *I
Unquote
*(Alice ◦ (saw ◦ (np ◦ ’s mother))) ` s◦
*Alice ◦ (*saw ◦ (*np ◦ *’s mother)) ` s◦ K0 thriceT
*Alice ◦ (*saw ◦ (np ◦ *’s mother)) ` s◦
Root
(*Alice ◦ (*saw ◦ (np ◦ *’s mother))) ◦c 1 ` s◦ ht
Right
(*saw ◦ (np ◦ *’s mother)) ◦c (1 ◦ *Alice) ` s◦ Right
(np ◦ *’s mother) ◦c ((1 ◦ *Alice) ◦ *saw) ` s◦
np ◦c (*’s mother ◦ ((1 ◦ *Alice) ◦ *saw)) ` s◦ L
eft
*’s mother ◦ ((1 ◦ *Alice) ◦ *saw) ` np\cs◦ cI
/\
cE
Axiom
np ` np ’s mother ` np\np \E
Alice ` np
a man ` s◦/c(np\cs◦)
saw ` (np\s◦)/np
a man ◦ (*’s mother ◦ ((1 ◦ *Alice) ◦ *saw)) ` s◦
Left
(a man ◦ *’s mother) ◦c ((1 ◦ *Alice) ◦ *saw) ` s◦ Right
(*saw ◦ (a man ◦ *’s mother)) ◦c (1 ◦ *Alice) ` s◦ t
(*Alice ◦ (*saw ◦ (a man ◦ *’s mother))) ◦c 1 ` s◦ Righ
Root
*Alice ◦ (*saw ◦ (a man ◦ *’s mother)) ` s◦
T thrice
Alice ◦ (saw ◦ (a man ◦ ’s mother)) ` s◦
</figure>
<figureCaption confidence="0.977211">
Figure 3: In-situ quantification: deriving Alice saw a man’s mother
</figureCaption>
<figure confidence="0.9992120625">
Quantifier Type
a man s◦/c(np\cs◦)
nobody s◦/c(np\cs−)
anybody s−/c(np\cs−)
somebody s+/c(np\cs+)
everybody s◦/c(np\cs+)
somebody anybody
�� ��
s+ everybody ��
���
s �� ��
�� nobody
u s◦ u
ε
��
a man
</figure>
<figureCaption confidence="0.984644333333333">
Figure 4: Quantifier type assign-
ments, and a corresponding finite-
state machine
</figureCaption>
<sectionHeader confidence="0.502153" genericHeader="method">
3 Polarity sensitivity and evaluation order
</sectionHeader>
<bodyText confidence="0.9999364">
The p mode mediates polarity sensitivity. For every unary
mode α, we can derive A ` ❑↓α*αA from the rules in Fig-
ure 1. This fact is particularly useful when α = p, be-
cause we assign the types *u❑↓p*ps and ❑↓p*p*us to pos-
itive and negative clauses, respectively, and can derive
</bodyText>
<listItem confidence="0.62239">
(9) s◦ ` *u❑↓p*ps, s◦ ` ❑↓p*p*us.
</listItem>
<bodyText confidence="0.99977445">
In words, a neutral clause can be silently converted into a
positive or negative one. We henceforth write s+ and s−
for *uo↓p*ps and ❑↓p*p*us. By (9), both types are “sub-
types” of s◦ (that is to say, entailed by s◦).
The p mode is used in Figure 5 on the next page to
derive Nobody saw anybody. Unlike a man, the quan-
tifier anybody has the type s−/c(np\cs−), showing that it
takes scope over a negative clause to make another neg-
ative clause. Meanwhile, the quantifier nobody has the
type s◦/c(np\cs−), showing that it takes scope over a neg-
ative clause to make a neutral clause. Thus nobody can
take scope over the negative clause returned by anybody
to make a neutral clause, which is complete.
The contrast between (2a) and (3) boils down to the
Right (but not Left) postulate’s requirement that the left-
most constituent be of the form *B. (In programming-
language terms, a subexpression can be evaluated only if
all other subexpressions to its left are pure.) For nobody
to take scope over (and license) anybody in (3) requires
the context *Anybody saw . In other words, the sequent
</bodyText>
<listItem confidence="0.462231">
(10) np ◦c ((1 ◦ *anybody) ◦ *saw) ` s−
</listItem>
<bodyText confidence="0.999922">
must be derived, in which the Right rule forces the con-
stituents anybody and saw to be embedded under dia-
monds. Figure 6 shows an attempt at deriving (10), which
fails because the type s− for negative clauses cannot be
Unquoted (shown with question marks). The sequent
in (10) cannot be derived, and the sentence *Anybody saw
nobody is not admitted. Nevertheless, Somebody saw ev-
erybody is correctly predicted to have ambiguous scope,
because neutral and positive clauses can be Unquoted.
The quantifiers a man, nobody, and anybody in Figures
3 and 5 exemplify a general pattern of analysis: every
polarity-sensitive item, be it traditionally considered a li-
censor or a licensee, specifies in its type an input polarity
(of the clause it takes scope over) and an output polarity
(of the clause it produces). Figure 4 lists more quantifiers
and their input and output polarities. As shown there,
these type assignments can be visualized as a finite-state
machine. The states are the three clause types. The ε-
transitions are the two derivability relations in (9). The
non-ε transitions are the quantifiers. The start states are
the clausal types that can be Unquoted. The final state is
the clausal type returned by verbs, namely neutral.
The precise pattern of predictions made by this the-
ory can be stated in two parts. First, due to the lexical
types in Figure 4 and the “subtyping” relations in (9), the
quantifiers in a sentence must form a valid transition se-
quence, from widest to narrowest scope. This constraint
is standard in type-logical accounts of polarity sensitiv-
ity. Second, thanks to the unary modes in the structural
</bodyText>
<equation confidence="0.75804">
··· ···
^anybody ◦ (^saw ◦ np) ` s−
(^anybody ◦ (^saw ◦ np)) ◦c 1 ` s− RootRi ht
(^saw ◦ np) ◦c (1 ◦ ^anybody) ` s− Right
np ◦c ((1 ◦ ^anybody) ◦ ^saw) ` s− g
</equation>
<figureCaption confidence="0.913756333333333">
Figure 6: Linear order in polarity licensing: ruling
out Anybody saw nobody using left-to-right eval-
uation order
</figureCaption>
<figure confidence="0.998913083333333">
(np\
)
`s−s−/c
c
anybody ◦c ((1 ◦ ^np) ◦ ^saw) ` s−
Right, Right, Left
s
^np ◦c ((^saw ◦ anybody) ◦ 1) `
T twice
nobody ` s◦/c(np\cs−)
Left, Root
nobody ◦ (saw ◦ anybody) ` s◦
</figure>
<figureCaption confidence="0.984493">
Figure 5: Polarity licensing: deriving Nobody saw anybody
</figureCaption>
<figure confidence="0.996777428571429">
❑↓pI
np ◦c ((1 ◦ ^np) ◦ ^saw) ` s−
\cI
(1 ◦ ^np) ◦ ^saw ` np\cs−
/cE
nobody ◦c ((saw ◦ anybody) ◦ 1) ` s
np ◦c ((saw ◦ anybody) ◦ 1) ` s− \cI
(saw ◦ anybody) ◦ 1 ` np\cs− /cE
anybody ◦ (saw ◦ np) ` s−
^(anybody ◦ (saw ◦ np)) ` ^s− ^I
··???
^(anybody ◦ (saw ◦ np)) ` s− ·
^anybody ◦ (^saw ◦ ^np) ` s− K0 twice
T
</figure>
<bodyText confidence="0.998604235294118">
postulates in Figure 2, whenever two quantifiers take in-
verse rather than linear scope with respect to each other,
the transitions must pass through a start state (that is, a
clause type that can be Unquoted) in between. This con-
straint is an empirical advance over previous accounts,
which are oblivious to linear order.
The input and output polarities of quantifiers are highly
mutually constrained. Take everybody for example. If
we hold the polarity assignments of the other quantifiers
fixed, then the existence of a linear-scope reading for
A man introduced everybody to somebody forces every-
body to be input-positive and output-neutral. But then
our account predicts that Nobody introduced everybody to
somebody has a linear-scope reading, unlike the simpler
sentence Nobody introduced Alice to somebody. This pre-
diction is borne out, as observed by Kroch (1974, pages
121–122) and discussed by Szabolcsi (2004).
</bodyText>
<sectionHeader confidence="0.996991" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9982412">
Thanks to Chris Barker, Raffaella Bernardi, William
Ladusaw, Richard Moot, Chris Potts, Stuart Shieber, Dy-
lan Thurston, and three anonymous referees. This work
is supported by the United States National Science Foun-
dation Grant BCS-0236592.
</bodyText>
<sectionHeader confidence="0.998225" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.996453416666667">
Raffaella Bernardi and Richard Moot. 2001. Generalized quan-
tifiers in declarative and interrogative sentences. Journal of
Language and Computation, 1(3):1–19.
Raffaella Bernardi. 2002. Reasoning with Polarity in Catego-
rial Type Logic. Ph.D. thesis, Utrecht Institute of Linguistics
(OTS), Utrecht University.
Daniel B¨uring. 2001. A situation semantics for binding out of
DP. In Rachel Hastings, Brendan Jackson, and Zsofia Zv-
olensky, editors, SALT XI: Semantics and Linguistic Theory,
pages 56–75, Ithaca. Cornell University Press.
Olivier Danvy and Andrzej Filinski. 1990. Abstracting con-
trol. In Proceedings of the 1990 ACM Conference on Lisp
</reference>
<figure confidence="0.555656833333333">
^np ◦ (^saw ◦ np) ` s◦
((1 ◦ ^np) ◦ ^saw) ` s◦ Root, Right, Right
np ◦c
(np ◦c ((1 ◦ ^np) ◦ ^saw)) ` ^ps◦ ^pI
^p
anybody
</figure>
<reference confidence="0.999606">
and Functional Programming, pages 151–160, New York,
March. ACM Press.
David R. Dowty. 1994. The role of negative polarity and con-
cord marking in natural language reasoning. In Mandy Har-
vey and Lynn Santelmann, editors, SALT IV: Semantics and
Linguistic Theory, Ithaca. Cornell University Press.
Matthias Felleisen. 1988. The theory and practice of first-class
prompts. In POPL ’88: Conference Record of the Annual
ACM Symposium on Principles of Programming Languages,
pages 180–190, New York. ACM Press.
John Fry. 1997. Negative polarity licensing at the syntax-
semantics interface. In Philip R. Cohen and Wolfgang
Wahlster, editors, Proceedings of the 35th Annual Meeting of
the Association for Computational Linguistics and 8th Con-
ference of the European Chapter of the Association for Com-
putational Linguistics, pages 144–150, San Francisco. Mor-
gan Kaufmann.
John Fry. 1999. Proof nets and negative polarity licensing.
In Mary Dalrymple, editor, Semantics and Syntax in Lexical
Functional Grammar: The Resource Logic Approach, chap-
ter 3, pages 91–116. MIT Press, Cambridge.
Manfred Krifka. 1995. The semantics and pragmatics of polar-
ity items. Linguistic Analysis, 25:209–257.
Anthony S. Kroch. 1974. The Semantics of Scope in En-
glish. Ph.D. thesis, Massachusetts Institute of Technology.
Reprinted by New York: Garland, 1979.
William A. Ladusaw. 1979. Polarity Sensitivity as Inherent
Scope Relations. Ph.D. thesis, Department of Linguistics,
University of Massachusetts, August. Reprinted by New
York: Garland, 1980.
Michael Moortgat. 1996a. Categorial type logics. In Johan van
Benthem and Alice ter Meulen, editors, Handbook of Logic
and Language, chapter 2. Elsevier Science, Amsterdam.
Michael Moortgat. 1996b. Generalized quantification and dis-
continuous type constructors. In Harry C. Bunt and Arthur
van Horck, editors, Discontinuous Constituency, pages 181–
207. de Gruyter, Berlin.
Richard Moot. 2002. Proof Nets for Linguistic Analysis. Ph.D.
thesis, Utrecht Institute of Linguistics (OTS), Utrecht Uni-
versity.
Anna Szabolcsi. 2004. Positive polarity—negative polarity.
Natural Language and Linguistic Theory, 22(2):409–452,
May.
Edwin Williams. 1997. Blocking and anaphora. Linguistic
Inquiry, 28(4):577–628.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.237962">
<title confidence="0.945289">Polarity sensitivity and evaluation order in type-logical grammar</title>
<author confidence="0.419337">Chung-chieh</author>
<affiliation confidence="0.6889395">Division of Engineering and Applied Harvard</affiliation>
<address confidence="0.984881">Cambridge, MA</address>
<email confidence="0.999132">ccshan@post.harvard.edu</email>
<abstract confidence="0.9948085">present a novel, type-logical analysis of pohow negative polarity items or positive ones (like are licensed or prohibited. It takes not just scopal relations but also linear order into account, using the programming-language notions of delimited continuations and evaluation order, respectively. It thus achieves greater empirical coverage than previous proposals.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Raffaella Bernardi</author>
<author>Richard Moot</author>
</authors>
<title>Generalized quantifiers in declarative and interrogative sentences.</title>
<date>2001</date>
<journal>Journal of Language and Computation,</journal>
<volume>1</volume>
<issue>3</issue>
<contexts>
<context position="847" citStr="Bernardi and Moot, 2001" startWordPosition="113" endWordPosition="116">e-logical analysis of polarity sensitivity: how negative polarity items (like any and ever) or positive ones (like some) are licensed or prohibited. It takes not just scopal relations but also linear order into account, using the programming-language notions of delimited continuations and evaluation order, respectively. It thus achieves greater empirical coverage than previous proposals. 1 Introduction Polarity sensitivity (Ladusaw, 1979) has been a popular linguistic phenomenon to analyze in the categorial (Dowty, 1994), lexical-functional (Fry, 1997, 1999), and type-logical (Bernardi, 2002; Bernardi and Moot, 2001) approaches to grammar. The multitude of these analyses is in part due to the more explicit emphasis that these traditions place on the syntax-semantics interface—be it in the form of Montague-style semantic rules, the CurryHoward isomorphism, or linear logic as glue—and the fact that polarity sensitivity is a phenomenon that spans syntax and semantics. On one hand, which polarity items are licensed or prohibited in a given linguistic environment depends, by and large, on semantic properties of that environment (Ladusaw, 1979; Krifka, 1995, inter alia). For example, to a first approximation, n</context>
</contexts>
<marker>Bernardi, Moot, 2001</marker>
<rawString>Raffaella Bernardi and Richard Moot. 2001. Generalized quantifiers in declarative and interrogative sentences. Journal of Language and Computation, 1(3):1–19.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Raffaella Bernardi</author>
</authors>
<title>Reasoning with Polarity in Categorial Type Logic.</title>
<date>2002</date>
<tech>Ph.D. thesis,</tech>
<institution>Utrecht Institute of Linguistics (OTS), Utrecht University.</institution>
<contexts>
<context position="821" citStr="Bernardi, 2002" startWordPosition="111" endWordPosition="112">ent a novel, type-logical analysis of polarity sensitivity: how negative polarity items (like any and ever) or positive ones (like some) are licensed or prohibited. It takes not just scopal relations but also linear order into account, using the programming-language notions of delimited continuations and evaluation order, respectively. It thus achieves greater empirical coverage than previous proposals. 1 Introduction Polarity sensitivity (Ladusaw, 1979) has been a popular linguistic phenomenon to analyze in the categorial (Dowty, 1994), lexical-functional (Fry, 1997, 1999), and type-logical (Bernardi, 2002; Bernardi and Moot, 2001) approaches to grammar. The multitude of these analyses is in part due to the more explicit emphasis that these traditions place on the syntax-semantics interface—be it in the form of Montague-style semantic rules, the CurryHoward isomorphism, or linear logic as glue—and the fact that polarity sensitivity is a phenomenon that spans syntax and semantics. On one hand, which polarity items are licensed or prohibited in a given linguistic environment depends, by and large, on semantic properties of that environment (Ladusaw, 1979; Krifka, 1995, inter alia). For example, t</context>
<context position="4330" citStr="Bernardi, 2002" startWordPosition="737" endWordPosition="738"> (3–4). Taking advantage of the Curry-Howard isomorphism, it is the first account of polarity sensitivity in the grammatical frameworks mentioned above to correctly fault (3) for the failure of nobody to appear before Axiom For each unary mode α (blank, u, or p in this paper): ^αI ` A ❑↓ I I ` ❑↓αA α A ` ^αA I[^αA] ` B ^αE I[A] ` B For each binary mode β (blank or c in this paper): A ` B ◦ C I[B ◦β C] ` A ◦βE I[A] ` A A ◦β B ` C A ` B/βA I ` A A ` C/βB /βI A ◦β I ` B /βE B ◦β A ` C \βI I ` A A ` \� A\OB E A ` B\βC I ◦β A ` B Figure 1: Natural deduction rules for multimodal categorial grammar (Bernardi, 2002, pages 9 and 50). To reduce notation, we do not distinguish structural punctuation from logical connectives. (Root) A a` A ◦c 1 (Left) (B ◦ C) ◦c K a` B ◦c (C ◦ K) (Right) (^B ◦ C) ◦c K a` C ◦c (K ◦ ^B) (T) A ` ^A (K0) ^A ◦ ^B ` ^(A ◦ B) (Unquote) ^^uA ` ^uA Figure 2: Structural postulates anybody. The analysis makes further correct predictions, as we will see at the end of §3. The analysis here borrows the concepts of delimited continuations (Felleisen, 1988; Danvy and Filinski, 1990) and evaluation order from the study of programming languages. Thus this paper is about computational linguis</context>
</contexts>
<marker>Bernardi, 2002</marker>
<rawString>Raffaella Bernardi. 2002. Reasoning with Polarity in Categorial Type Logic. Ph.D. thesis, Utrecht Institute of Linguistics (OTS), Utrecht University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel B¨uring</author>
</authors>
<title>A situation semantics for binding out of DP.</title>
<date>2001</date>
<booktitle>Semantics and Linguistic Theory,</booktitle>
<pages>56--75</pages>
<editor>In Rachel Hastings, Brendan Jackson, and Zsofia Zvolensky, editors, SALT XI:</editor>
<publisher>Cornell University Press.</publisher>
<location>Ithaca.</location>
<marker>B¨uring, 2001</marker>
<rawString>Daniel B¨uring. 2001. A situation semantics for binding out of DP. In Rachel Hastings, Brendan Jackson, and Zsofia Zvolensky, editors, SALT XI: Semantics and Linguistic Theory, pages 56–75, Ithaca. Cornell University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Olivier Danvy</author>
<author>Andrzej Filinski</author>
</authors>
<title>Abstracting control.</title>
<date>1990</date>
<booktitle>In Proceedings of the 1990 ACM Conference on Lisp and Functional Programming,</booktitle>
<pages>151--160</pages>
<publisher>ACM Press.</publisher>
<location>New York,</location>
<contexts>
<context position="4821" citStr="Danvy and Filinski, 1990" startWordPosition="834" endWordPosition="837"> A ` C \βI I ` A A ` \� A\OB E A ` B\βC I ◦β A ` B Figure 1: Natural deduction rules for multimodal categorial grammar (Bernardi, 2002, pages 9 and 50). To reduce notation, we do not distinguish structural punctuation from logical connectives. (Root) A a` A ◦c 1 (Left) (B ◦ C) ◦c K a` B ◦c (C ◦ K) (Right) (^B ◦ C) ◦c K a` C ◦c (K ◦ ^B) (T) A ` ^A (K0) ^A ◦ ^B ` ^(A ◦ B) (Unquote) ^^uA ` ^uA Figure 2: Structural postulates anybody. The analysis makes further correct predictions, as we will see at the end of §3. The analysis here borrows the concepts of delimited continuations (Felleisen, 1988; Danvy and Filinski, 1990) and evaluation order from the study of programming languages. Thus this paper is about computational linguistics, in the sense of applying insights from computer science to linguistics. The basic idea transfers to other formalisms, but type-logical grammar—more precisely, multimodal categorial grammar—offers a fragment NL^R− whose parsing problem is decidable using proof-net technology (Moot, 2002, §9.2), which is of great help while developing and testing the theory. 2 Delimited continuations Figure 1 shows natural deduction rules for multimodal categorial grammar, a member of the type-logic</context>
</contexts>
<marker>Danvy, Filinski, 1990</marker>
<rawString>Olivier Danvy and Andrzej Filinski. 1990. Abstracting control. In Proceedings of the 1990 ACM Conference on Lisp and Functional Programming, pages 151–160, New York, March. ACM Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David R Dowty</author>
</authors>
<title>The role of negative polarity and concord marking in natural language reasoning.</title>
<date>1994</date>
<booktitle>In Mandy Harvey and Lynn Santelmann, editors, SALT IV: Semantics and Linguistic Theory,</booktitle>
<publisher>Cornell University Press.</publisher>
<location>Ithaca.</location>
<contexts>
<context position="749" citStr="Dowty, 1994" startWordPosition="103" endWordPosition="104">niversity Cambridge, MA 02138 ccshan@post.harvard.edu Abstract We present a novel, type-logical analysis of polarity sensitivity: how negative polarity items (like any and ever) or positive ones (like some) are licensed or prohibited. It takes not just scopal relations but also linear order into account, using the programming-language notions of delimited continuations and evaluation order, respectively. It thus achieves greater empirical coverage than previous proposals. 1 Introduction Polarity sensitivity (Ladusaw, 1979) has been a popular linguistic phenomenon to analyze in the categorial (Dowty, 1994), lexical-functional (Fry, 1997, 1999), and type-logical (Bernardi, 2002; Bernardi and Moot, 2001) approaches to grammar. The multitude of these analyses is in part due to the more explicit emphasis that these traditions place on the syntax-semantics interface—be it in the form of Montague-style semantic rules, the CurryHoward isomorphism, or linear logic as glue—and the fact that polarity sensitivity is a phenomenon that spans syntax and semantics. On one hand, which polarity items are licensed or prohibited in a given linguistic environment depends, by and large, on semantic properties of th</context>
</contexts>
<marker>Dowty, 1994</marker>
<rawString>David R. Dowty. 1994. The role of negative polarity and concord marking in natural language reasoning. In Mandy Harvey and Lynn Santelmann, editors, SALT IV: Semantics and Linguistic Theory, Ithaca. Cornell University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthias Felleisen</author>
</authors>
<title>The theory and practice of first-class prompts.</title>
<date>1988</date>
<booktitle>In POPL ’88: Conference Record of the Annual ACM Symposium on Principles of Programming Languages,</booktitle>
<pages>180--190</pages>
<publisher>ACM Press.</publisher>
<location>New York.</location>
<contexts>
<context position="4794" citStr="Felleisen, 1988" startWordPosition="832" endWordPosition="833">◦β I ` B /βE B ◦β A ` C \βI I ` A A ` \� A\OB E A ` B\βC I ◦β A ` B Figure 1: Natural deduction rules for multimodal categorial grammar (Bernardi, 2002, pages 9 and 50). To reduce notation, we do not distinguish structural punctuation from logical connectives. (Root) A a` A ◦c 1 (Left) (B ◦ C) ◦c K a` B ◦c (C ◦ K) (Right) (^B ◦ C) ◦c K a` C ◦c (K ◦ ^B) (T) A ` ^A (K0) ^A ◦ ^B ` ^(A ◦ B) (Unquote) ^^uA ` ^uA Figure 2: Structural postulates anybody. The analysis makes further correct predictions, as we will see at the end of §3. The analysis here borrows the concepts of delimited continuations (Felleisen, 1988; Danvy and Filinski, 1990) and evaluation order from the study of programming languages. Thus this paper is about computational linguistics, in the sense of applying insights from computer science to linguistics. The basic idea transfers to other formalisms, but type-logical grammar—more precisely, multimodal categorial grammar—offers a fragment NL^R− whose parsing problem is decidable using proof-net technology (Moot, 2002, §9.2), which is of great help while developing and testing the theory. 2 Delimited continuations Figure 1 shows natural deduction rules for multimodal categorial grammar,</context>
</contexts>
<marker>Felleisen, 1988</marker>
<rawString>Matthias Felleisen. 1988. The theory and practice of first-class prompts. In POPL ’88: Conference Record of the Annual ACM Symposium on Principles of Programming Languages, pages 180–190, New York. ACM Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Fry</author>
</authors>
<title>Negative polarity licensing at the syntaxsemantics interface.</title>
<date>1997</date>
<booktitle>Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics and 8th Conference of the European Chapter of the Association for Computational Linguistics,</booktitle>
<pages>144--150</pages>
<editor>In Philip R. Cohen and Wolfgang Wahlster, editors,</editor>
<publisher>Morgan Kaufmann.</publisher>
<location>San Francisco.</location>
<contexts>
<context position="780" citStr="Fry, 1997" startWordPosition="106" endWordPosition="107">an@post.harvard.edu Abstract We present a novel, type-logical analysis of polarity sensitivity: how negative polarity items (like any and ever) or positive ones (like some) are licensed or prohibited. It takes not just scopal relations but also linear order into account, using the programming-language notions of delimited continuations and evaluation order, respectively. It thus achieves greater empirical coverage than previous proposals. 1 Introduction Polarity sensitivity (Ladusaw, 1979) has been a popular linguistic phenomenon to analyze in the categorial (Dowty, 1994), lexical-functional (Fry, 1997, 1999), and type-logical (Bernardi, 2002; Bernardi and Moot, 2001) approaches to grammar. The multitude of these analyses is in part due to the more explicit emphasis that these traditions place on the syntax-semantics interface—be it in the form of Montague-style semantic rules, the CurryHoward isomorphism, or linear logic as glue—and the fact that polarity sensitivity is a phenomenon that spans syntax and semantics. On one hand, which polarity items are licensed or prohibited in a given linguistic environment depends, by and large, on semantic properties of that environment (Ladusaw, 1979; </context>
</contexts>
<marker>Fry, 1997</marker>
<rawString>John Fry. 1997. Negative polarity licensing at the syntaxsemantics interface. In Philip R. Cohen and Wolfgang Wahlster, editors, Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics and 8th Conference of the European Chapter of the Association for Computational Linguistics, pages 144–150, San Francisco. Morgan Kaufmann.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Fry</author>
</authors>
<title>Proof nets and negative polarity licensing.</title>
<date>1999</date>
<booktitle>Semantics and Syntax in Lexical Functional Grammar: The Resource Logic Approach, chapter 3,</booktitle>
<pages>91--116</pages>
<editor>In Mary Dalrymple, editor,</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge.</location>
<marker>Fry, 1999</marker>
<rawString>John Fry. 1999. Proof nets and negative polarity licensing. In Mary Dalrymple, editor, Semantics and Syntax in Lexical Functional Grammar: The Resource Logic Approach, chapter 3, pages 91–116. MIT Press, Cambridge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manfred Krifka</author>
</authors>
<title>The semantics and pragmatics of polarity items. Linguistic Analysis,</title>
<date>1995</date>
<pages>25--209</pages>
<contexts>
<context position="1392" citStr="Krifka, 1995" startWordPosition="202" endWordPosition="203">, 1999), and type-logical (Bernardi, 2002; Bernardi and Moot, 2001) approaches to grammar. The multitude of these analyses is in part due to the more explicit emphasis that these traditions place on the syntax-semantics interface—be it in the form of Montague-style semantic rules, the CurryHoward isomorphism, or linear logic as glue—and the fact that polarity sensitivity is a phenomenon that spans syntax and semantics. On one hand, which polarity items are licensed or prohibited in a given linguistic environment depends, by and large, on semantic properties of that environment (Ladusaw, 1979; Krifka, 1995, inter alia). For example, to a first approximation, negative polarity items can occur only in downward-entailing contexts, such as under the scope of a monotonically decreasing quantifier. A quantifier q, of type (e —� t) —� t where e is the type of individuals and t is the type of truth values, is monotonically decreasing just in case (1) bs1. bs2. (bx. s2(x) =* s1(x)) =* q(s1) =* q(s2). Thus (2a) is acceptable because the scope of nobody is downward-entailing, whereas (2b–c) are unacceptable. (2) a. Nobody saw anybody. b. *Everybody saw anybody. c. *Alice saw anybody. On the other hand, a </context>
</contexts>
<marker>Krifka, 1995</marker>
<rawString>Manfred Krifka. 1995. The semantics and pragmatics of polarity items. Linguistic Analysis, 25:209–257.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anthony S Kroch</author>
</authors>
<title>The Semantics of Scope in English.</title>
<date>1974</date>
<tech>Ph.D. thesis,</tech>
<institution>Massachusetts Institute of Technology.</institution>
<location>New York: Garland,</location>
<note>Reprinted by</note>
<marker>Kroch, 1974</marker>
<rawString>Anthony S. Kroch. 1974. The Semantics of Scope in English. Ph.D. thesis, Massachusetts Institute of Technology. Reprinted by New York: Garland, 1979.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William A Ladusaw</author>
</authors>
<title>Polarity Sensitivity as Inherent Scope Relations.</title>
<date>1979</date>
<tech>Ph.D. thesis,</tech>
<institution>Department of Linguistics, University of Massachusetts,</institution>
<location>New York: Garland,</location>
<note>Reprinted by</note>
<contexts>
<context position="665" citStr="Ladusaw, 1979" startWordPosition="89" endWordPosition="90">ogical grammar Chung-chieh Shan Division of Engineering and Applied Sciences Harvard University Cambridge, MA 02138 ccshan@post.harvard.edu Abstract We present a novel, type-logical analysis of polarity sensitivity: how negative polarity items (like any and ever) or positive ones (like some) are licensed or prohibited. It takes not just scopal relations but also linear order into account, using the programming-language notions of delimited continuations and evaluation order, respectively. It thus achieves greater empirical coverage than previous proposals. 1 Introduction Polarity sensitivity (Ladusaw, 1979) has been a popular linguistic phenomenon to analyze in the categorial (Dowty, 1994), lexical-functional (Fry, 1997, 1999), and type-logical (Bernardi, 2002; Bernardi and Moot, 2001) approaches to grammar. The multitude of these analyses is in part due to the more explicit emphasis that these traditions place on the syntax-semantics interface—be it in the form of Montague-style semantic rules, the CurryHoward isomorphism, or linear logic as glue—and the fact that polarity sensitivity is a phenomenon that spans syntax and semantics. On one hand, which polarity items are licensed or prohibited i</context>
<context position="3352" citStr="Ladusaw, 1979" startWordPosition="531" endWordPosition="532">ntecedent’s ability to bind a (c-commanded) pronoun percolates up to a containing phrase (such as in (5), what B¨uring (2001) calls “binding out of DP”), a licensor’s ability to license a (c-commanded) polarity item percolates up to a containing phrase (such as in (4a)). (5) [Every boyi’s mother] saw hisi father. Moreover, just as a bindee can precede a binder in a sentence when the bindee sits in a clause that excludes the binder (as in (6); see Williams, 1997, §2.1), a licensee can precede a licensor in a sentence when the licensee sits in a clause that excludes the licensor (as in (7); see Ladusaw, 1979, page 112). (6) That hei would be arrested for speeding came as a surprise to everyi motorist. (7) That anybody would be arrested for speeding came as a surprise to the district attorney. This paper presents a new, type-logical account of polarity sensitivity that encompasses the semantic properties exemplified in (2) and the syntactic properties exemplified in (3–4). Taking advantage of the Curry-Howard isomorphism, it is the first account of polarity sensitivity in the grammatical frameworks mentioned above to correctly fault (3) for the failure of nobody to appear before Axiom For each una</context>
</contexts>
<marker>Ladusaw, 1979</marker>
<rawString>William A. Ladusaw. 1979. Polarity Sensitivity as Inherent Scope Relations. Ph.D. thesis, Department of Linguistics, University of Massachusetts, August. Reprinted by New York: Garland, 1980.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Moortgat</author>
</authors>
<title>Categorial type logics.</title>
<date>1996</date>
<booktitle>In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language, chapter 2. Elsevier Science,</booktitle>
<location>Amsterdam.</location>
<contexts>
<context position="5468" citStr="Moortgat, 1996" startWordPosition="931" endWordPosition="932">udy of programming languages. Thus this paper is about computational linguistics, in the sense of applying insights from computer science to linguistics. The basic idea transfers to other formalisms, but type-logical grammar—more precisely, multimodal categorial grammar—offers a fragment NL^R− whose parsing problem is decidable using proof-net technology (Moot, 2002, §9.2), which is of great help while developing and testing the theory. 2 Delimited continuations Figure 1 shows natural deduction rules for multimodal categorial grammar, a member of the type-logical family of grammar formalisms (Moortgat, 1996a; Bernardi, 2002). Figure 2 lists our structural postulates. These two figures form the logic underlying our account. We use two binary modes: the default mode (blank) for surface syntactic composition, and the continuation mode c. As usual, a formula of the form A ◦ B can be read as “A followed by B”. By contrast, a formula of the form A ◦c B can be read as “A in the context B”. In programming-language terms, the formula A ◦c B plugs a subexpression A into a delimited continuation B. The Root rule creates a trivial continuation: it says that 1 is a right identity for the c mode, where 1 can </context>
</contexts>
<marker>Moortgat, 1996</marker>
<rawString>Michael Moortgat. 1996a. Categorial type logics. In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language, chapter 2. Elsevier Science, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Moortgat</author>
</authors>
<title>Generalized quantification and discontinuous type constructors.</title>
<date>1996</date>
<booktitle>Discontinuous Constituency, pages 181– 207. de Gruyter,</booktitle>
<editor>In Harry C. Bunt and Arthur van Horck, editors,</editor>
<location>Berlin.</location>
<contexts>
<context position="5468" citStr="Moortgat, 1996" startWordPosition="931" endWordPosition="932">udy of programming languages. Thus this paper is about computational linguistics, in the sense of applying insights from computer science to linguistics. The basic idea transfers to other formalisms, but type-logical grammar—more precisely, multimodal categorial grammar—offers a fragment NL^R− whose parsing problem is decidable using proof-net technology (Moot, 2002, §9.2), which is of great help while developing and testing the theory. 2 Delimited continuations Figure 1 shows natural deduction rules for multimodal categorial grammar, a member of the type-logical family of grammar formalisms (Moortgat, 1996a; Bernardi, 2002). Figure 2 lists our structural postulates. These two figures form the logic underlying our account. We use two binary modes: the default mode (blank) for surface syntactic composition, and the continuation mode c. As usual, a formula of the form A ◦ B can be read as “A followed by B”. By contrast, a formula of the form A ◦c B can be read as “A in the context B”. In programming-language terms, the formula A ◦c B plugs a subexpression A into a delimited continuation B. The Root rule creates a trivial continuation: it says that 1 is a right identity for the c mode, where 1 can </context>
</contexts>
<marker>Moortgat, 1996</marker>
<rawString>Michael Moortgat. 1996b. Generalized quantification and discontinuous type constructors. In Harry C. Bunt and Arthur van Horck, editors, Discontinuous Constituency, pages 181– 207. de Gruyter, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Moot</author>
</authors>
<title>Proof Nets for Linguistic Analysis.</title>
<date>2002</date>
<tech>Ph.D. thesis,</tech>
<institution>Utrecht Institute of Linguistics (OTS), Utrecht University.</institution>
<contexts>
<context position="5222" citStr="Moot, 2002" startWordPosition="894" endWordPosition="895">ostulates anybody. The analysis makes further correct predictions, as we will see at the end of §3. The analysis here borrows the concepts of delimited continuations (Felleisen, 1988; Danvy and Filinski, 1990) and evaluation order from the study of programming languages. Thus this paper is about computational linguistics, in the sense of applying insights from computer science to linguistics. The basic idea transfers to other formalisms, but type-logical grammar—more precisely, multimodal categorial grammar—offers a fragment NL^R− whose parsing problem is decidable using proof-net technology (Moot, 2002, §9.2), which is of great help while developing and testing the theory. 2 Delimited continuations Figure 1 shows natural deduction rules for multimodal categorial grammar, a member of the type-logical family of grammar formalisms (Moortgat, 1996a; Bernardi, 2002). Figure 2 lists our structural postulates. These two figures form the logic underlying our account. We use two binary modes: the default mode (blank) for surface syntactic composition, and the continuation mode c. As usual, a formula of the form A ◦ B can be read as “A followed by B”. By contrast, a formula of the form A ◦c B can be </context>
</contexts>
<marker>Moot, 2002</marker>
<rawString>Richard Moot. 2002. Proof Nets for Linguistic Analysis. Ph.D. thesis, Utrecht Institute of Linguistics (OTS), Utrecht University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anna Szabolcsi</author>
</authors>
<title>Positive polarity—negative polarity.</title>
<date>2004</date>
<journal>Natural Language and Linguistic Theory,</journal>
<volume>22</volume>
<issue>2</issue>
<marker>Szabolcsi, 2004</marker>
<rawString>Anna Szabolcsi. 2004. Positive polarity—negative polarity. Natural Language and Linguistic Theory, 22(2):409–452, May.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Edwin Williams</author>
</authors>
<title>Blocking and anaphora.</title>
<date>1997</date>
<journal>Linguistic Inquiry,</journal>
<volume>28</volume>
<issue>4</issue>
<contexts>
<context position="3204" citStr="Williams, 1997" startWordPosition="504" endWordPosition="505">ity sensitivity purposes are similar to those allowed between antecedent and pronoun for variable binding purposes. To take one example, just as an antecedent’s ability to bind a (c-commanded) pronoun percolates up to a containing phrase (such as in (5), what B¨uring (2001) calls “binding out of DP”), a licensor’s ability to license a (c-commanded) polarity item percolates up to a containing phrase (such as in (4a)). (5) [Every boyi’s mother] saw hisi father. Moreover, just as a bindee can precede a binder in a sentence when the bindee sits in a clause that excludes the binder (as in (6); see Williams, 1997, §2.1), a licensee can precede a licensor in a sentence when the licensee sits in a clause that excludes the licensor (as in (7); see Ladusaw, 1979, page 112). (6) That hei would be arrested for speeding came as a surprise to everyi motorist. (7) That anybody would be arrested for speeding came as a surprise to the district attorney. This paper presents a new, type-logical account of polarity sensitivity that encompasses the semantic properties exemplified in (2) and the syntactic properties exemplified in (3–4). Taking advantage of the Curry-Howard isomorphism, it is the first account of pol</context>
</contexts>
<marker>Williams, 1997</marker>
<rawString>Edwin Williams. 1997. Blocking and anaphora. Linguistic Inquiry, 28(4):577–628.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>