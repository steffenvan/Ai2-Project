<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000007">
<note confidence="0.804422">
AN ATN TREATMENT WH-MOVEMENT
Hans Haugeneder
Siemens AG
ZT ZTI
Otto-Hahn-Ring 6
8 Munchen 83, West Germany
</note>
<sectionHeader confidence="0.64742" genericHeader="abstract">
ABSTRACT
</sectionHeader>
<bodyText confidence="0.999705133333333">
An ATN-Parser is presented with emphasis on
the treatment of those phenomena which in the
framework of transformational grammar are sub-
sumed under the concept of WH-movement. The
approach taken tries to embed these constructions
into an ATN grammar in a general, linguistically
motivated and in terms of the ATN grammar
formalism descriptive way. To accomplish this goal
the approach described incorporates the basic
principles governing such constructions as
formulated in the framework of the trace theory
proposed in the development of the Extended
Standard Theory (EST). Thus a unified treatment
for both relative clauses and wh-questions is
achieved.
</bodyText>
<sectionHeader confidence="0.996931" genericHeader="keywords">
1 Overview
</sectionHeader>
<subsectionHeader confidence="0.999964">
1.1 The Grammar
</subsectionHeader>
<bodyText confidence="0.998372447368421">
The ATN-Language used is - except for some
minor deviations which are not of importance here -
in accordance with the one specified in [BATES 78]
and covers the following subset of English:
the most frequent verb types for declarative
and imperative sentences and questions
direct and indirect WH-questions
(for NPs, PPs, ADJPs, ADVPs)
direct and indirect YIN-questions
sentential complements for verbs
and nouns
various types of relative clauses
(complete, reduced...)
infintive construction (including control verbs
with subject and nonsubject control)
conjunction of complete constituents of every
syntactic category
subordinate clauses
The grammar is written in very compact way,
making extensively use of merging techniques; it
comprises about 75 states and 170 arcs.
The structure built by the grammar is quite
similar to the phrase structure trees used in
transformational grammar on the S-structure level.
(See appendix for some examples!)
Structures of that type seem to us very suited for
further semantic interpretation, since they offer a
level of syntactic structure which both expresses
grammatical functions (which are defined
configurationally) and constituent structure
features which are important for certain aspects of
logical form as e.g. quantifier scoping. Especially the
use of the device of traces (as a phonologically empty
phrase) allows for displaced elements to appear in
the phrase marker in their surface postion and at
the same time expresses the role which this
element&apos;s original position plays in the
corresponding predicate-argument structure.
</bodyText>
<subsectionHeader confidence="0.998154">
1.2 The Parser
</subsectionHeader>
<bodyText confidence="0.998990275862069">
The parser itself is an active chart parser as
described in [KAPLAN 73] and [KAY 731; a detailed
desciption of our implementation can be found in
[ENDERS et al 82].
By combining an active chart, which represents
all fully analyzed (sub)constituents (the passive
edges) and all incomplete partial derivations (the
active edges) with an agenda, which contains an
explicit representation of all further tasks to be
processed, the chart parsing framework is especially
suited for mul-ti-way analyses on syntacticly and
lexically highly ambiguous input.
Furthermore it offers a high degree of flexibility
in the use of various control-structures beyond the
uniform ones like depth-first and breadth-first. This
can be achieved by means of heuristic measures of
various types which are used for the weighting of the
single tasks, thus being responsible for the ordering
of the agenda. Thereby several features of the
parser such as closure and attachment features and
preference of certain readings not induced by
attachment ambiguities can be varied effectively
by simply modifying this weigthing function.
There exist three versions of the parser differing
in the strategy by which the grammar is processed:
- a top-down version (which is the standard
case with ATNs)
- a top-down version augmented with an auto-
matic one-word look-ahead on PUSH-arcs
</bodyText>
<page confidence="0.99889">
41
</page>
<bodyText confidence="0.983131636363636">
- a mixed bottom-up/top-down version
The latter two versions which both demand some
pre-rocessing of the grammar are clearly better in
terms of performance than the pure top-down
version. They have about 75% of the memory
requirements and need 80% of the cpu-time of the
top-down version.
All three versions have been implemented in
Siemens-Interlisp running on Siemens main-
frames. An implementation on a lisp machine is on
the way.
</bodyText>
<sectionHeader confidence="0.907771" genericHeader="introduction">
2 Integrating WH-Movement into ATN
</sectionHeader>
<subsectionHeader confidence="0.807494">
Grammars
2.1 The Descriptive Adequacy of ATNs
</subsectionHeader>
<bodyText confidence="0.999976867924528">
ATNs, though being a (computationally)
powerful specification language for grammars are
not committed to a certain lingistic theory as stated
cleary in [WAHLSTER 79]. This often leads to
grammars in which various types of syntactic
phenomena are treated descriptively inadequate
and linguistically unfounded. In the case of the wh-
movement phenomena being discussed here, one
has to cope with the fact that the origin of the
displaced element can be embedded in some deeper
clausal constituent arbitrarily far away from its
surface position. (For an example see figure 2. in the
appendix D. Sticking to the standard facilities
offered by ATNs for constructions of that type
implies the use of SENDR actions on PUSH-arcs or
the HOLDNIR mechanism in order to allow the
involved subnets to communicate with each other. 1
But neither of the two possibilities can be viewed
as a satifactory solution. The former (pushing
certain register contents through possibly several
subnets) burdens the grammar writer with the
tasks of controlling the use of the pushed register
either by using it in some network or by pushing it
further down. It thus puts extreme emphasis on the
procedural aspect of the grammar thus making it
clumsy and hard to comprehend. Therefore this
approach can hardly be considered as a satisfactory
solution to the problem.
The second possibility, namely the use of a
global register environment and virtual arcs has
been introduced into the ATN framework in order to
handle displaced elements of the sort discussed here.
In this mechanism the HOLD-action offers the
facility to put an analyzed constituent on the HOLD-
list (a global additional stack). Later on a VIR-arc
can consume a constituent from the HOLD-list as if
it occured at the actual point in the input string.
I The necessity of the use of one of these two
mechanisms is thereby only under the ,
assumption, that the phrase structure to be
produced is thought to express the functional
role played by an displaced element in some way
or the other.
Thus the HOLD/VIR facility and extensions of it as
proposed in (FININ 83], though surely being
preferable to the first possibility still misses to
express the relevant syntactic restrictions and
permits violations of grammatical constraints
governing these constructions.
Thus to us it seems worthwhile to incorporate
wh-phenomena into ATN grammars on a
conceptually higher and syntactically motivated
level.
</bodyText>
<subsectionHeader confidence="0.9394695">
2.2 Description of the Approach
2.2.1 WH-Movement in EST
</subsectionHeader>
<bodyText confidence="0.999990789473684">
Before decribing the embedding of WH-
movement into an ATN grammar a short
presentation of the general principles of its
treatment in EST is given.
The fundamental feature of it is the use of an
transformation (move wh-phrase) which moves a
wh-phrase of a nonverbal phrasal category into an
sentence-initial non-argument position by adjoining
it to the COMP-node. The moved phrase leaves
behind an empty phrase (its trace), which is
coindexed with the fronted wh-phrase.
This fronting can be achieved in one step as in
the unbounded movement analysis or successivly as
in the COMP-to-COMP analysis, yielding the same
resulting structure in both cases (ignoring the
intermediate COMP-dominated traces). The version
reflected in our approach is the unbounded
movement analysis as only the COMP-node finally
dominating the wh-element is affected.
</bodyText>
<subsubsectionHeader confidence="0.7374155">
2.2.2 The ATN-Treatment
2.2.2.1 General Idea
</subsubsectionHeader>
<bodyText confidence="0.999265863636364">
The basic idea in the proposed treatment of wh-
construction is to let the parser build up phrase
structures containing unbound traces and bind these
traces to the fronted wh-phrase when the entire wh-
construction is accomplished.
This task itself is divided into the following two
steps:
1. The phrase structure trees built during the
parse may contain unbound traces. At the
grammar level this is achieved by adding JUMP-
arcs to the grammar, which can accept empty
constituents. This means that you have JUMP-
arcs parsing traces of type XP, which in the
grammar are alternative arcs to the
corresponding PUSH XP-arcs (with XP other
than ). Furthermore these arcs contain
certain register actions responsible for building
the structures for the empty phrases.
The possible locations of traces as
subconstituents in the wh-construction phrase
structure depend on the restrictions described by
these JUMP-arcs when the grammar is applied
</bodyText>
<page confidence="0.994937">
42
</page>
<bodyText confidence="0.9924995">
to the input.
2. On the level where the phrase structure trees for
wh-constructions are constructed a binding
procedure tries to bind (i.e. coindex) the fronted
wh-phrase with its trace.
Since this binding procedure is actually the
central part of the mechanism its features are
described in more detail in the following section.
</bodyText>
<subsectionHeader confidence="0.675738">
2.2.2.2 The Binding Procedure
</subsectionHeader>
<bodyText confidence="0.999889777777778">
What the binding procedure (BindWhTrace)
actually does is to establish a mapping of a phrase
structure tree into another phrase structure tree,
where the mapping is structure preserving in the
sense that it does not alter the phrases&apos; internal
structure. The effect of the mapping is to establish a
coindexing between a wh-phrase in COMP-position
and its trace in an argument position as shown in
the following diagram.
</bodyText>
<equation confidence="0.998188666666667">
(SACOMP(ADJP &lt; + wh &gt; )..)(s..(ADJP e)..))
= = &gt;
(s/(COMP(ADJpi &lt; + wh &gt; )..)(S..(ADJP; e)..))
</equation>
<bodyText confidence="0.99988">
The coindexing itself is restricted by various
constraining conditions. These concern the morpho-
syntactic,. functional and configurational features of
the two phrases to be bound.
So, for example the wh-NP &amp;quot;whom&amp;quot; in COMP.
position can only be coindexed with an empty NP
bearing the grammatical function of direct object or
prepositional object for example. Furthermore there
are configurational constraints between the two
candidate phrases that have to be fullfilled, in order
to establish a proper binding as e.g. the coordinate
structure constraint. This constraint does not allow
movement of a phrase out of a conjunctive structure
which, being applied to the binding procedure means
that the coindexing may not take place in a
structure where B is an empty constituent of the
category XP&apos;.
</bodyText>
<equation confidence="0.867170666666667">
(s/(comP (xp, &lt; + wh&gt; ).)..(xp(xp...B..) and (xp..).)
not = = &gt;
(MCOmP(xP&apos;i&lt; + wh&gt;).)..(xp(xp..Bi..) and (xp..).)
</equation>
<bodyText confidence="0.97410252">
Since the phrase structure built at the point
where the binding procedure is involved may
contain traces which are no suitable candidates for
a proper binding (since they do not fullfill these
restricting conditions) the procedure may not
succeed to establish a proper indexing. That&apos;s why
the procedure can also be viewed as a function
reporting success or failure respectively, thus fil-
tering out part of the structures built so far.
Furthermore even in the case of a proper binding
done by the binding procedure the resulting phrase
structure trees may still contain unbound traces.
Such structures however must be blocked according
to two constraints which do not allow constituents in
wh-question and relative clause structures to be
moved outside the entire phrase, which in terms of
the coindexing means that they may not be
coindexed with a constituent outside these
structures.
In the case of (headed) relative clauses this is
ruled out by the complex-NP constraint, which
(stated in a simplified form) does not allow a
constituent B to be moved out of the following
structure:
For questions an equivalent restriction is
expressed by the wh-island constraint, which does
not allow a phrase B to be moved out of the following
structure:
(MCOMP.. &lt; + wh &gt;
Since the binding procedure does its work just on
this sort of phrase structure, namely the structures
produced by the relative clause and the wh-
question subnets, it can easily test these two
constraints too, thus blocking all structures with no
proper binding of the displaced wh-element or with
leftover unbound traces.
Now the way in which this procedure is
embedded in the grammar should be clear. It has
been incorporated into each POP-arc of a wh-
construction subnet (i.e. the relative clause and the
wh-question subnet), where it is used as a test-
predicate reporting whether the structure built so
far contains a proper binding with no unbound
traces left. The actual binding is done as a side-effect
of that predicate. So the corresponding POP-arc look
like this:
(POP pm&apos; (BindWhTrace pm)) I
(With pm&apos; derived from the phrase marker pm by
1 In terms of the grammar used, a POP-arc for a
wh-construction network has the following form:
</bodyText>
<sectionHeader confidence="0.831384" genericHeader="method">
(0.7 POP (GETR R)(BindWhTrace R))
</sectionHeader>
<bodyText confidence="0.99760575">
(Here R is the register containing the phrase
structure tree on which the binding procedure
works. The first item in this arc is a weight
assigned to it.)
</bodyText>
<page confidence="0.999519">
43
</page>
<bodyText confidence="0.9297134">
successful application of BindWhTrace)
Thus POP-arcs with an additional test of the sort
described act as filters popping the form pm&apos; only if
this test has been sucessfully applied to the
structure pm.
</bodyText>
<subsubsectionHeader confidence="0.591856">
2.2.3 Interaction with the Treatment of Control
</subsubsectionHeader>
<subsectionHeader confidence="0.472404">
Verbs
</subsectionHeader>
<bodyText confidence="0.999990055555556">
As already mentioned our grammar also deals
with certain contol verb constructions. These are
also handled by a coindexing procedure which
functions similar to the binding procedure. It is
invoked on the POP-arc of the corresponding
network and tries - based on the lexical features of
the control verb in the matrix clause - to coindex the
abstract subject &amp;quot;Pro&amp;quot; with its controller, also
reporting success or failure.
In cases where this coindexing mechanism and
the binding procedure may affect the same
constituent (as an example see figure 2. of the
appendix) we have adopted the strategy of doing the
wh-element binding before the control-indexing.
This means that the controller-NP may already
have assigned an index that actually is used for the
control indexing of Pro. So in our example the final
structure is constructed in the following way:
</bodyText>
<equation confidence="0.829997">
SXCOMP(Np&lt; &gt;).)(S-VP(1, persuade)(Npe)(sgs(NP Pro).))))
wh-binding = =&gt;
SACOMP(Npi&lt; + wh&gt;).)(s.(vp(v persuade)(Npie)(sgs(Np Pro).))))
control binding = = &gt;
SACOMP(NPi&lt; +wli&gt;).)(s.(vp(v persuade)(Npie)(&amp;.(s(Npt Pro).))))
</equation>
<bodyText confidence="0.999964666666667">
The procedure is invoked at the same level,
namely when a wh-construction is actually parsed
(i.e. whenever the syntactic rule is applied, which
combines a wh-element with a phrase of the
category S.) This roughly corresponds to the POP-
arc of a wh-construction subnet in our case.
But in contrast to our approach where the
binding procedure acts on a constituent structure
already containing traces, Wehrli&apos;s binding
procedure is activated by the absence of an
obligatory slot in the functional structure. After
locating such a slot an empty element is inserted
both into the functional and the constituent
structure with a suitable index. So in his approach
the search for the argument position traces (which
in our approach is done by the parser by offering
different phrase structures already containing
traces) is part of the binding procedure.
This, on the one hand has the advantage of
focussing on the treatment solely in the binding
procedure. On the other hand, it makes the
procedure considerably more complex, since it must
be able to detect ambiguities 1 which in our
approach are dealt with in the grammar rules.
</bodyText>
<subsectionHeader confidence="0.877564">
2.3.2. PARSIFAL
</subsectionHeader>
<bodyText confidence="0.999983117647059">
The second approach discussed here is the work
by Marcus on wh-movement in his PARSIFAL
system [MARCUS 80]. There the cyclic analysis of
wh-movement is adopted which, besides its
linguistic motivation [CHOMSKY 77] is enforced by
the structure of the grammar interpreter. The
reason for this lies in the fact that during the
parsing of some embedded clause Se there is no
access to any structure beyond this Se as at that time
it is the current cyclic node in the active node stack.
So for example in a structure like
This reflects the ordering of these two
mechanisms in transformational grammar (namely
the move-wh transformation and the rules of
construal) ; thus the correct handling for a wide
variety of structures involving both wh-movement
and control constructions has been achieved.
</bodyText>
<subsectionHeader confidence="0.9987155">
2.3 Comparison to other Approaches
2.3.1 Wehrli&apos;s GB-Parser
</subsectionHeader>
<bodyText confidence="0.9998982">
In this section the comparison with other parsers
is limited to the discussion of the handling of wh-
constructions only; thus this is not intended an
overall comparision of the parsers per se.
One approach to the treatment of wh-
constructions that lends itself well to a comparison
can be found in Wehrlis&apos;s parser for French
[WEHRLI 83]. There a binding procedure is incor-
porated as a separate module in a parser which in
toto is based on the GB-framework [CHOMSKY 82].
</bodyText>
<equation confidence="0.638152">
(s(COmP (Nr&lt; + wh&gt;))...(S....(NP&amp;quot; e) ...)...)
</equation>
<bodyText confidence="0.9926695">
at the moment when the trace NP&amp;quot; is parsed (i.e.
created, dropped into the buffer and attached to Se)
there is no access to the headed wh-NP NP&apos; thus
preventing the trace NP&amp;quot; to be bound to it. This
There may be several unfilled slots in the
functional structure, in the matrix sentence as
well as in some embedded sentence. This is for
example the case if the headed wh-phrase is a PP
whose attachment is ambiguous, as in:
On which day will John hold a speech?
(with its &amp;quot;when&amp;quot;-reading &amp;quot;When will ....&amp;quot; and its
&amp;quot;topic&amp;quot;-reading &amp;quot;On which topic will .... &amp;quot;)
</bodyText>
<page confidence="0.998073">
44
</page>
<bodyText confidence="0.999660666666667">
problem is avoided, if the grammar rules create a
COW-Node with a bound trace attached to it before
analyzing Se. Thus the trace NP&amp;quot; can be bound to the
headed wh-NP via some intermediate COW-
attached traces, as for example via NP&apos;&amp;quot; in the
following structure:
</bodyText>
<equation confidence="0.619292">
(S(COMP (NP&apos;i&lt; + wh&gt; ))..(Se(COMP(NP&amp;quot;i e)..(NP- e).).)
</equation>
<sectionHeader confidence="0.916075" genericHeader="method">
ACKNOWLEDGEMENTS
</sectionHeader>
<bodyText confidence="0.988057">
The implementation of the various versions of
the parser and the grammar editor has been done in
cooperation with my (partly former) colleagues
Reinhard Enders, Ludwig Schmid and Bertram
Fronhofer.
</bodyText>
<sectionHeader confidence="0.991925" genericHeader="method">
REFERENCES
</sectionHeader>
<bodyText confidence="0.999745958333333">
This mechanism is implemented by means of a
special register, WH-comp, which in must be
handled explicitly the grammar rules when creating
and binding traces. Furthermore the status of that
register (which can be set in the grammar to
&amp;quot;utilized&amp;quot; and &amp;quot;not utilized&amp;quot;) serves as a condition
for triggering certain actions in the course of the
anlysis of wh-constructions (such as the
deactivation of certain rule packets). This from the
grammar writer&apos;s point of view seems to have some
of the flavour and disadvantages of the SENDR-
solution discussed before (section 2.1).
The approach described so far however causes
difficulties in a productive class of constructions,
where the trace to be analyzed is dominated by an
NP which also serves as the current cyclic node
making the headed wh-phrase inaccessible for the
binding of its trace as in constructions like:
(SACOmP(NP who Ms is that (NP a portrait of e)))
This problem is overcome by Marcus by means of
an ad hoc mechanism which exactly allows access to
a headed wh-element in such constructions, whereas
in our approach constuctions of both types are &apos;
handled in a uniform way.
</bodyText>
<sectionHeader confidence="0.995861" genericHeader="method">
3 Conclusion
</sectionHeader>
<bodyText confidence="0.990727166666667">
The approach described has from our experience
proved to be a useful step in the direction of
handling wh-movement constructions in an ATN
grammar in a linguistically motivated way. The
resulting grammar turned out to be more
perspicuous than a grammar dealing with these
phenomena with the standard ATN facilities (as
sketched in in section 2.1).
The work described will be continued in three
directions. First, we will incorporate this
treatment of wh-constructions and other
syntactically motivated mechanisms (as for
example NP-movement) in a grammar for a
substantial subset of German. Secondly, we will
include further binding-mechanisms for various
kinds of anaphoric relationships. Thirdly, we will
explore the possibility of embedding such concepts
into the ATN language formalism.
</bodyText>
<sectionHeader confidence="0.959714" genericHeader="method">
[BATES 78]
</sectionHeader>
<reference confidence="0.982963636363636">
Bates, Madelaine, &amp;quot;Theory and Practice of
Aug-mented Transition Network Grammars&amp;quot;, in
Bolc, Leonard (ed), Natural Language
Comunication with Computers, Berlin, 1978
[BENNIS &amp; GROOS 82]
Bennis, Hans, and Groos, Anneke, &amp;quot;Die
Rektions-Bindungs-Theorie: Neue Aspekte seit
den &apos;Aspekten&apos; &amp;quot;, Zeitschrift fur
Sprachwissenschaft, 2(1982)
[CHOMSKY 77]
Chomsky, Noam, &amp;quot;On Wh-Movement&amp;quot;, in
Culicover, P. W., Wasow, Thomas, and
Akmajian, Adrian (eds), Formal Syntax, New
York, 1977
[CHOMSKY 82]
Chomsky, Noam, Lectures on Government and
Binding, Dordrecht 1982
[ENDERS et al 82]
Enders, Reinhard, Fronhofer, Bertram, Hau-
g. eneder, Hans, and Schmid, Ludwig,
Uberlegungen zu einem ATN-Chart-Parser,
Internal Report (Siemens), 1982
[FININ 83]
Finin, Timothy W., &amp;quot;An ATN Programming
Environment&amp;quot;, in Bolc, Leonard (ed), The Design
of Interpreters, Compilers, and Editors for
Augmented Transition Networks, Berlin, 1983
[GORZ 79]
Gorz, Gunther, &amp;quot;ATN und Kontrollstrukturen&amp;quot;,
in Christaller, Thomas, and Metzing, Dieter
(eds), Augmented Transition Network
Grammatiken, Berlin, 1979
[KAPLAN 73]
Kaplan, Ronald, &amp;quot;A General Syntactic
Processor&amp;quot;, in Rustin, Randall (ed), Natural
Language Processing, New York, 1973
[KAY 73]
Kay, Martin, &amp;quot;The Mind System&amp;quot;, in Rustin,
Randall (ed), Natural Language Processing, New
York, 1973
[MARCUS 80]
Marcus, Michell P., A Theory of Syntactic
Recognition for Natural Language, Cam-
bridge/MA, 1980
</reference>
<page confidence="0.995745">
45
</page>
<sectionHeader confidence="0.722636" genericHeader="method">
[WAHLSTER 79]
</sectionHeader>
<reference confidence="0.9872579">
Wahlster, Wolfgang, &amp;quot;ATNs mid die
semantisch-pragmatische Steuerung der
Analyse und Generierung natiirlicher Sprache&amp;quot;,
in Christaller, Thomas, and Metzing, Dieter
(eds), Augmented Transition Network
Grammatiken, Berlin, 1979
[WEHRLI 831
Wehrli, Eric, &amp;quot;A Modular Parser For French&amp;quot;, in
Proc. 8th IJCAI Karlsruhe 1983, Los Altos/CA,
1983
</reference>
<sectionHeader confidence="0.617386" genericHeader="method">
APPENDIX A. Sample Parses
</sectionHeader>
<figure confidence="0.888605285714286">
COMP
.------------ -----------------h---------------
PP3 /+WH NP VP PP
/ \
PRP NP 1 AUX V PPS PRP NP
I ./...&apos;-&apos;s.---&apos;--,- I1 1
iIN1
</figure>
<sectionHeader confidence="0.7430826" genericHeader="method">
ABOUT QDET N/ JOHN /PERF TALK ON
WHICHADJP N SUNDAY
ZN I
DGR ADJ TOPIC
VERY IMPORTANT
</sectionHeader>
<figureCaption confidence="0.998371">
Figure 1. Parse tree for &amp;quot;About which very important topic has John talked on Sunday?&amp;quot;
</figureCaption>
<figure confidence="0.990056857142857">
3/
COMP
NP2 /+WH NP VP
NP
PROM AUX
\
QDET N WOMAN HE /FUT
I I
WHICH MAN
NP2
PERSUADE e
S/
„...,/—..\,,....
COMP S
I,,/-.---■,,,,,,.
/-WH NP2 VP
Pro AUX V NP
I 1 I
/-infl DATE PROM
I
HIM
</figure>
<figureCaption confidence="0.99888">
Figure 2. Parse tree for &amp;quot;Which man&apos;s woman will he persuade to date him?&amp;quot;
</figureCaption>
<page confidence="0.975827">
46
</page>
<figure confidence="0.991582157894737">
I
/-414 NP W
I-----7.---------&apos;---s-.
N PUN V NP NP
BILL /PRES GDR BET N BET N/
II I ..■----&apos;&amp;quot;---&amp;quot;-s--.&amp;quot;--s--,
THE WWI A N S/
I----*---.----------
BOOK COM&apos;
\
NP2 /-thi NP
RELPRON PRON V NP3 S/
144 ICH HE /PFtES /NEG ENPECT PROM COM&apos;
I I
HER /-14I4 NP3
V?\■
Pro PON V NP2
I I I
/- nf 1 READ e
</figure>
<figureCaption confidence="0.99796">
Figure 3. Parse tree for &amp;quot;Bill gives the woman a hook which he does not expect her to read.&amp;quot;
</figureCaption>
<page confidence="0.998382">
47
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.998936">AN ATN TREATMENT WH-MOVEMENT</title>
<author confidence="0.6764915">Hans Haugeneder Siemens AG</author>
<affiliation confidence="0.696872">ZT ZTI</affiliation>
<address confidence="0.462717">Otto-Hahn-Ring 6 8 Munchen 83, West Germany</address>
<abstract confidence="0.999167767184036">An ATN-Parser is presented with emphasis on the treatment of those phenomena which in the framework of transformational grammar are subsumed under the concept of WH-movement. The approach taken tries to embed these constructions into an ATN grammar in a general, linguistically motivated and in terms of the ATN grammar formalism descriptive way. To accomplish this goal the approach described incorporates the basic principles governing such constructions as formulated in the framework of the trace theory proposed in the development of the Extended Standard Theory (EST). Thus a unified treatment for both relative clauses and wh-questions is achieved. 1.1 The Grammar The ATN-Language used is except for some minor deviations which are not of importance here in accordance with the one specified in [BATES 78] and covers the following subset of English: the most frequent verb types for declarative and imperative sentences and questions direct and indirect WH-questions (for NPs, PPs, ADJPs, ADVPs) direct and indirect YIN-questions sentential complements for verbs and nouns various types of relative clauses (complete, reduced...) infintive construction (including control verbs with subject and nonsubject control) conjunction of complete constituents of every syntactic category subordinate clauses The grammar is written in very compact way, making extensively use of merging techniques; it comprises about 75 states and 170 arcs. The structure built by the grammar is quite similar to the phrase structure trees used in transformational grammar on the S-structure level. (See appendix for some examples!) Structures of that type seem to us very suited for further semantic interpretation, since they offer a level of syntactic structure which both expresses grammatical functions (which are defined configurationally) and constituent structure features which are important for certain aspects of logical form as e.g. quantifier scoping. Especially the use of the device of traces (as a phonologically empty phrase) allows for displaced elements to appear in the phrase marker in their surface postion and at the same time expresses the role which this element&apos;s original position plays in the corresponding predicate-argument structure. Parser The parser itself is an active chart parser as described in [KAPLAN 73] and [KAY 731; a detailed desciption of our implementation can be found in [ENDERS et al 82]. By combining an active chart, which represents all fully analyzed (sub)constituents (the passive edges) and all incomplete partial derivations (the active edges) with an agenda, which contains an explicit representation of all further tasks to be processed, the chart parsing framework is especially suited for mul-ti-way analyses on syntacticly and lexically highly ambiguous input. Furthermore it offers a high degree of flexibility in the use of various control-structures beyond the uniform ones like depth-first and breadth-first. This can be achieved by means of heuristic measures of various types which are used for the weighting of the single tasks, thus being responsible for the ordering of the agenda. Thereby several features of the parser such as closure and attachment features and preference of certain readings not induced by attachment ambiguities can be varied effectively by simply modifying this weigthing function. There exist three versions of the parser differing the strategy by grammar is processed: a top-down version (which is the standard case with ATNs) a top-down version augmented with an automatic one-word look-ahead on PUSH-arcs 41 a mixed bottom-up/top-down version The latter two versions which both demand some pre-rocessing of the grammar are clearly better in terms of performance than the pure top-down version. They have about 75% of the memory requirements and need 80% of the cpu-time of the top-down version. All three versions have been implemented in Siemens-Interlisp running on Siemens mainframes. An implementation on a lisp machine is on the way. WH-Movement into ATN Grammars 2.1 The Descriptive Adequacy of ATNs ATNs, though being a (computationally) powerful specification language for grammars are not committed to a certain lingistic theory as stated cleary in [WAHLSTER 79]. This often leads to grammars in which various types of syntactic phenomena are treated descriptively inadequate and linguistically unfounded. In the case of the whmovement phenomena being discussed here, one has to cope with the fact that the origin of the displaced element can be embedded in some deeper clausal constituent arbitrarily far away from its surface position. (For an example see figure 2. in the appendix D. Sticking to the standard facilities offered by ATNs for constructions of that type implies the use of SENDR actions on PUSH-arcs or the HOLDNIR mechanism in order to allow the subnets to communicate with each other. 1 But neither of the two possibilities can be viewed as a satifactory solution. The former (pushing certain register contents through possibly several subnets) burdens the grammar writer with the tasks of controlling the use of the pushed register either by using it in some network or by pushing it further down. It thus puts extreme emphasis on the procedural aspect of the grammar thus making it clumsy and hard to comprehend. Therefore this approach can hardly be considered as a satisfactory solution to the problem. The second possibility, namely the use of a global register environment and virtual arcs has been introduced into the ATN framework in order to handle displaced elements of the sort discussed here. In this mechanism the HOLD-action offers the facility to put an analyzed constituent on the HOLDlist (a global additional stack). Later on a VIR-arc can consume a constituent from the HOLD-list as if it occured at the actual point in the input string. I The necessity of the use of one of these two mechanisms is thereby only under the , assumption, that the phrase structure to be produced is thought to express the functional role played by an displaced element in some way or the other. Thus the HOLD/VIR facility and extensions of it as proposed in (FININ 83], though surely being preferable to the first possibility still misses to express the relevant syntactic restrictions and permits violations of grammatical constraints governing these constructions. Thus to us it seems worthwhile to incorporate wh-phenomena into ATN grammars on a conceptually higher and syntactically motivated level. 2.2 Description of the Approach 2.2.1 WH-Movement in EST Before decribing the embedding of WHmovement into an ATN grammar a short presentation of the general principles of its treatment in EST is given. The fundamental feature of it is the use of an transformation (move wh-phrase) which moves a wh-phrase of a nonverbal phrasal category into an sentence-initial non-argument position by adjoining it to the COMP-node. The moved phrase leaves behind an empty phrase (its trace), which is coindexed with the fronted wh-phrase. This fronting can be achieved in one step as in the unbounded movement analysis or successivly as in the COMP-to-COMP analysis, yielding the same resulting structure in both cases (ignoring the intermediate COMP-dominated traces). The version reflected in our approach is the unbounded movement analysis as only the COMP-node finally dominating the wh-element is affected. The 2.2.2.1 General Idea basic idea the proposed treatment of whconstruction is to let the parser build up phrase structures containing unbound traces and bind these traces to the fronted wh-phrase when the entire whconstruction is accomplished. This task itself is divided into the following two steps: 1. The phrase structure trees built during the may contain unbound traces. the grammar level this is achieved by adding JUMParcs to the grammar, which can accept empty constituents. This means that you have JUMPparsing traces of type XP, which grammar are alternative arcs to the corresponding PUSH XP-arcs (with XP other than ). Furthermore these arcs contain certain register actions responsible for building the structures for the empty phrases. The possible locations of traces as subconstituents in the wh-construction phrase structure depend on the restrictions described by JUMP-arcs when the grammar is 42 to the input. 2. On the level where the phrase structure trees for wh-constructions are constructed a binding procedure tries to bind (i.e. coindex) the fronted wh-phrase with its trace. Since this binding procedure is actually the central part of the mechanism its features are described in more detail in the following section. 2.2.2.2 The Binding Procedure What the binding procedure (BindWhTrace) actually does is to establish a mapping of a phrase structure tree into another phrase structure tree, where the mapping is structure preserving in the sense that it does not alter the phrases&apos; internal structure. The effect of the mapping is to establish a coindexing between a wh-phrase in COMP-position and its trace in an argument position as shown in the following diagram. &lt; + wh )..)(s..(ADJP e)..)) = = &gt; &lt; + &gt; e)..)) The coindexing itself is restricted by various constraining conditions. These concern the morphosyntactic,. functional and configurational features of the two phrases to be bound. So, for example the wh-NP &amp;quot;whom&amp;quot; in COMP. position can only be coindexed with an empty NP bearing the grammatical function of direct object or prepositional object for example. Furthermore there are configurational constraints between the two candidate phrases that have to be fullfilled, in order to establish a proper binding as e.g. the coordinate structure constraint. This constraint does not allow movement of a phrase out of a conjunctive structure which, being applied to the binding procedure means that the coindexing may not take place in a structure where B is an empty constituent of the category XP&apos;. &lt; + wh&gt; ).)..(xp(xp...B..) and (xp..).) not = = &gt; + wh&gt;).)..(xp(xp..Bi..) and (xp..).) Since the phrase structure built at the point where the binding procedure is involved may contain traces which are no suitable candidates for a proper binding (since they do not fullfill these restricting conditions) the procedure may not succeed to establish a proper indexing. That&apos;s why the procedure can also be viewed as a function reporting success or failure respectively, thus filtering out part of the structures built so far. Furthermore even in the case of a proper binding done by the binding procedure the resulting phrase structure trees may still contain unbound traces. Such structures however must be blocked according to two constraints which do not allow constituents in wh-question and relative clause structures to be moved outside the entire phrase, which in terms of the coindexing means that they may not be coindexed with a constituent outside these structures. In the case of (headed) relative clauses this is ruled out by the complex-NP constraint, which (stated in a simplified form) does not allow a constituent B to be moved out of the following structure: For questions an equivalent restriction is expressed by the wh-island constraint, which does allow a phrase B to out of the following structure: + wh &gt; Since the binding procedure does its work just on this sort of phrase structure, namely the structures produced by the relative clause and the whquestion subnets, it can easily test these two constraints too, thus blocking all structures with no proper binding of the displaced wh-element or with leftover unbound traces. Now the way in which this procedure is embedded in the grammar should be clear. It has been incorporated into each POP-arc of a whconstruction subnet (i.e. the relative clause and the wh-question subnet), where it is used as a testpredicate reporting whether the structure built so far contains a proper binding with no unbound traces left. The actual binding is done as a side-effect of that predicate. So the corresponding POP-arc look like this: (POP pm&apos; (BindWhTrace pm)) I (With pm&apos; derived from the phrase marker pm by 1 In terms of the grammar used, a POP-arc for a wh-construction network has the following form: (0.7 POP (GETR R)(BindWhTrace R)) (Here R is the register containing the phrase structure tree on which the binding procedure works. The first item in this arc is a weight assigned to it.) 43 successful application of BindWhTrace) Thus POP-arcs with an additional test of the sort described act as filters popping the form pm&apos; only if this test has been sucessfully applied to the structure pm. 2.2.3 Interaction with the Treatment of Control Verbs As already mentioned our grammar also deals with certain contol verb constructions. These are also handled by a coindexing procedure which functions similar to the binding procedure. It is invoked on the POP-arc of the corresponding network and tries based on the lexical features of the control verb in the matrix clause to coindex the abstract subject &amp;quot;Pro&amp;quot; with its controller, also reporting success or failure. In cases where this coindexing mechanism and the binding procedure may affect the same constituent (as an example see figure 2. of the appendix) we have adopted the strategy of doing the wh-element binding before the control-indexing. This means that the controller-NP may already have assigned an index that actually is used for the control indexing of Pro. So in our example the final structure is constructed in the following way: &gt;).)(S-VP(1, wh-binding = =&gt; persuade)(Npie)(sgs(Np Pro).)))) control binding = = &gt; SACOMP(NPi&lt; +wli&gt;).)(s.(vp(v persuade)(Npie)(&amp;.(s(Npt Pro).)))) The procedure is invoked at the same level, namely when a wh-construction is actually parsed (i.e. whenever the syntactic rule is applied, which combines a wh-element with a phrase of the category S.) This roughly corresponds to the POParc of a wh-construction subnet in our case. But in contrast to our approach where the binding procedure acts on a constituent structure already containing traces, Wehrli&apos;s binding procedure is activated by the absence of an obligatory slot in the functional structure. After locating such a slot an empty element is inserted both into the functional and the constituent structure with a suitable index. So in his approach the search for the argument position traces (which in our approach is done by the parser by offering different phrase structures already containing traces) is part of the binding procedure. This, on the one hand has the advantage of focussing on the treatment solely in the binding procedure. On the other hand, it makes the procedure considerably more complex, since it must able ambiguities 1 which in our approach are dealt with in the grammar rules. 2.3.2. PARSIFAL The second approach discussed here is the work by Marcus on wh-movement in his PARSIFAL system [MARCUS 80]. There the cyclic analysis of wh-movement is adopted which, besides its linguistic motivation [CHOMSKY 77] is enforced by the structure of the grammar interpreter. The reason for this lies in the fact that during the of some embedded clause there is no to any structure beyond this as at that time it is the current cyclic node in the active node stack. So for example in a structure like This reflects the ordering of these two mechanisms in transformational grammar (namely the move-wh transformation and the rules of construal) ; thus the correct handling for a wide variety of structures involving both wh-movement and control constructions has been achieved. Comparison other Approaches 2.3.1 Wehrli&apos;s GB-Parser In this section the comparison with other parsers is limited to the discussion of the handling of whconstructions only; thus this is not intended an overall comparision of the parsers per se. One approach to the treatment of whconstructions that lends itself well to a comparison can be found in Wehrlis&apos;s parser for French [WEHRLI 83]. There a binding procedure is incorporated as a separate module in a parser which in toto is based on the GB-framework [CHOMSKY 82]. (Nr&lt; + ...)...) at the moment when the trace NP&amp;quot; is parsed (i.e. dropped into the buffer and attached to there is no access to the headed wh-NP NP&apos; thus preventing the trace NP&amp;quot; to be bound to it. This There may be several unfilled slots in the functional structure, in the matrix sentence as well as in some embedded sentence. This is for example the case if the headed wh-phrase is a PP whose attachment is ambiguous, as in: On which day will John hold a speech? (with its &amp;quot;when&amp;quot;-reading &amp;quot;When will ....&amp;quot; and its &amp;quot;topic&amp;quot;-reading &amp;quot;On which topic will .... &amp;quot;) 44 problem is avoided, if the grammar rules create a COW-Node with a bound trace attached to it before Thus the trace NP&amp;quot; can be bound to the headed wh-NP via some intermediate COWattached traces, as for example via NP&apos;&amp;quot; in the following structure: + wh&gt; e).).) ACKNOWLEDGEMENTS The implementation of the various versions of the parser and the grammar editor has been done in cooperation with my (partly former) colleagues Reinhard Enders, Ludwig Schmid and Bertram Fronhofer. REFERENCES This mechanism is implemented by means of a special register, WH-comp, which in must be handled explicitly the grammar rules when creating and binding traces. Furthermore the status of that register (which can be set in the grammar to &amp;quot;utilized&amp;quot; and &amp;quot;not utilized&amp;quot;) serves as a condition for triggering certain actions in the course of the anlysis of wh-constructions (such as the deactivation of certain rule packets). This from the grammar writer&apos;s point of view seems to have some of the flavour and disadvantages of the SENDRsolution discussed before (section 2.1). The approach described so far however causes difficulties in a productive class of constructions, where the trace to be analyzed is dominated by an NP which also serves as the current cyclic node making the headed wh-phrase inaccessible for the binding of its trace as in constructions like: (SACOmP(NP who Ms is that (NP a portrait of e))) This problem is overcome by Marcus by means of an ad hoc mechanism which exactly allows access to a headed wh-element in such constructions, whereas in our approach constuctions of both types are &apos; handled in a uniform way. 3 Conclusion The approach described has from our experience proved to be a useful step in the direction of handling wh-movement constructions in an ATN grammar in a linguistically motivated way. The resulting grammar turned out to be more perspicuous than a grammar dealing with these phenomena with the standard ATN facilities (as sketched in in section 2.1). The work described will be continued in three directions. First, we will incorporate this treatment of wh-constructions and other syntactically motivated mechanisms (as for example NP-movement) in a grammar for a substantial subset of German. Secondly, we will include further binding-mechanisms for various kinds of anaphoric relationships. Thirdly, we will explore the possibility of embedding such concepts into the ATN language formalism.</abstract>
<note confidence="0.680641594594595">[BATES 78] Bates, Madelaine, &amp;quot;Theory and Practice of Aug-mented Transition Network Grammars&amp;quot;, in Leonard (ed), Language with Computers, 1978 [BENNIS &amp; GROOS 82] Bennis, Hans, and Groos, Anneke, &amp;quot;Die Rektions-Bindungs-Theorie: Neue Aspekte seit &apos;Aspekten&apos; &amp;quot;, fur [CHOMSKY 77] Chomsky, Noam, &amp;quot;On Wh-Movement&amp;quot;, in Culicover, P. W., Wasow, Thomas, and Adrian (eds), Syntax, York, 1977 [CHOMSKY 82] Noam, on Government and 1982 [ENDERS et al 82] Enders, Reinhard, Fronhofer, Bertram, Haug. eneder, Hans, and Schmid, Ludwig, Uberlegungen zu einem ATN-Chart-Parser, Internal Report (Siemens), 1982 [FININ 83] Finin, Timothy W., &amp;quot;An ATN Programming in Bolc, Leonard (ed), Design of Interpreters, Compilers, and Editors for Transition Networks, 1983 [GORZ 79] Gorz, Gunther, &amp;quot;ATN und Kontrollstrukturen&amp;quot;, Thomas, and Metzing, Dieter Network 1979 [KAPLAN 73] Kaplan, Ronald, &amp;quot;A General Syntactic in Rustin, Randall (ed), Processing, York, 1973 [KAY 73]</note>
<author confidence="0.634204">Martin Kay</author>
<author confidence="0.634204">The Mind System</author>
<author confidence="0.634204">in Rustin</author>
<affiliation confidence="0.739308">(ed), Language Processing,</affiliation>
<address confidence="0.849011">York, 1973</address>
<note confidence="0.750213857142857">[MARCUS 80] Michell P., A of Syntactic for Natural Language, Cambridge/MA, 1980 45 [WAHLSTER 79] Wahlster, Wolfgang, &amp;quot;ATNs mid die</note>
<title confidence="0.40011125">semantisch-pragmatische Steuerung der Analyse und Generierung natiirlicher Sprache&amp;quot;, in Christaller, Thomas, and Metzing, Dieter Transition Network</title>
<date confidence="0.939863">1979</date>
<note confidence="0.6813417">WEHRLI 831 Wehrli, Eric, &amp;quot;A Modular Parser For French&amp;quot;, in 8th IJCAI Karlsruhe 1983, Altos/CA, 1983 APPENDIX A. Sample Parses COMP PP3 /+WH NP VP PP / \ PRP NP 1 AUX V PPS PRP NP 1</note>
<title confidence="0.979535">ABOUT QDET N/ JOHN /PERF TALK ON N DGR ADJ TOPIC VERY IMPORTANT</title>
<author confidence="0.777597">Parse tree for About which very important topic has John talked on Sunday</author>
<affiliation confidence="0.744022">COMP</affiliation>
<address confidence="0.56922">NP2 /+WH NP VP</address>
<title confidence="0.70745775">NP PROM AUX \ QDET N WOMAN HE /FUT</title>
<author confidence="0.274613">I I</author>
<affiliation confidence="0.596101">WHICH MAN</affiliation>
<note confidence="0.636193033333333">NP2 S/ „...,/—..\,,.... COMP S /-WH NP2 VP Pro AUX V NP 1 /-infl DATE PROM I HIM Figure 2. Parse tree for &amp;quot;Which man&apos;s woman will he persuade to date him?&amp;quot; 46 I /-414 NP W N PUN V NP NP BILL /PRES GDR BET N BET N/ I THE WWI A N S/ BOOK COM&apos; \ NP2 /-thi NP RELPRON PRON V NP3 S/ 144 ICH HE /PFtES /NEG ENPECT PROM COM&apos; I I HER /-14I4 NP3 Pro PON V NP2 I I I /nf 1 READ e Figure 3. Parse tree for &amp;quot;Bill gives the woman a hook which he does not expect her to read.&amp;quot; 47</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Madelaine Bates</author>
</authors>
<title>Theory and Practice of Aug-mented Transition Network Grammars&amp;quot;,</title>
<date>1978</date>
<journal>BENNIS &amp; GROOS</journal>
<booktitle>in Bolc, Leonard (ed), Natural Language Comunication with Computers,</booktitle>
<volume>82</volume>
<location>Berlin,</location>
<marker>Bates, 1978</marker>
<rawString>Bates, Madelaine, &amp;quot;Theory and Practice of Aug-mented Transition Network Grammars&amp;quot;, in Bolc, Leonard (ed), Natural Language Comunication with Computers, Berlin, 1978 [BENNIS &amp; GROOS 82]</rawString>
</citation>
<citation valid="false">
<authors>
<author>Hans Bennis</author>
<author>Anneke Groos</author>
</authors>
<title>Die Rektions-Bindungs-Theorie: Neue Aspekte seit den &apos;Aspekten&apos; &amp;quot;, Zeitschrift fur Sprachwissenschaft,</title>
<volume>2</volume>
<issue>1982</issue>
<marker>Bennis, Groos, </marker>
<rawString>Bennis, Hans, and Groos, Anneke, &amp;quot;Die Rektions-Bindungs-Theorie: Neue Aspekte seit den &apos;Aspekten&apos; &amp;quot;, Zeitschrift fur Sprachwissenschaft, 2(1982) [CHOMSKY 77]</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noam Chomsky</author>
</authors>
<title>On Wh-Movement&amp;quot;,</title>
<date>1977</date>
<location>New York,</location>
<note>in</note>
<marker>Chomsky, 1977</marker>
<rawString>Chomsky, Noam, &amp;quot;On Wh-Movement&amp;quot;, in Culicover, P. W., Wasow, Thomas, and Akmajian, Adrian (eds), Formal Syntax, New York, 1977</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noam Chomsky</author>
</authors>
<date>1982</date>
<booktitle>Lectures on Government and Binding,</booktitle>
<location>Dordrecht</location>
<marker>Chomsky, 1982</marker>
<rawString>[CHOMSKY 82] Chomsky, Noam, Lectures on Government and Binding, Dordrecht 1982</rawString>
</citation>
<citation valid="false">
<note>[ENDERS et al 82]</note>
<marker></marker>
<rawString>[ENDERS et al 82]</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans eneder</author>
<author>Ludwig Schmid</author>
</authors>
<title>Uberlegungen zu einem ATN-Chart-Parser, Internal Report (Siemens),</title>
<date>1982</date>
<journal>FININ</journal>
<volume>83</volume>
<marker>eneder, Schmid, 1982</marker>
<rawString>Enders, Reinhard, Fronhofer, Bertram, Haug. eneder, Hans, and Schmid, Ludwig, Uberlegungen zu einem ATN-Chart-Parser, Internal Report (Siemens), 1982 [FININ 83]</rawString>
</citation>
<citation valid="true">
<authors>
<author>Timothy W Finin</author>
</authors>
<title>An ATN Programming Environment&amp;quot;, in Bolc, Leonard (ed), The Design of Interpreters, Compilers, and Editors for Augmented Transition Networks,</title>
<date>1983</date>
<journal>GORZ</journal>
<volume>79</volume>
<location>Berlin,</location>
<marker>Finin, 1983</marker>
<rawString>Finin, Timothy W., &amp;quot;An ATN Programming Environment&amp;quot;, in Bolc, Leonard (ed), The Design of Interpreters, Compilers, and Editors for Augmented Transition Networks, Berlin, 1983 [GORZ 79]</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gunther Gorz</author>
</authors>
<title>ATN und Kontrollstrukturen&amp;quot;, in Christaller, Thomas, and Metzing, Dieter (eds), Augmented Transition Network Grammatiken,</title>
<date>1979</date>
<location>Berlin,</location>
<marker>Gorz, 1979</marker>
<rawString>Gorz, Gunther, &amp;quot;ATN und Kontrollstrukturen&amp;quot;, in Christaller, Thomas, and Metzing, Dieter (eds), Augmented Transition Network Grammatiken, Berlin, 1979</rawString>
</citation>
<citation valid="false">
<journal>KAPLAN</journal>
<volume>73</volume>
<marker></marker>
<rawString>[KAPLAN 73]</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ronald Kaplan</author>
</authors>
<title>A General Syntactic Processor&amp;quot;,</title>
<date>1973</date>
<journal>KAY</journal>
<booktitle>in Rustin, Randall (ed), Natural Language Processing,</booktitle>
<volume>73</volume>
<location>New York,</location>
<marker>Kaplan, 1973</marker>
<rawString>Kaplan, Ronald, &amp;quot;A General Syntactic Processor&amp;quot;, in Rustin, Randall (ed), Natural Language Processing, New York, 1973 [KAY 73]</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Kay</author>
</authors>
<title>The Mind System&amp;quot;,</title>
<date>1973</date>
<booktitle>in Rustin, Randall (ed), Natural Language Processing,</booktitle>
<location>New York,</location>
<marker>Kay, 1973</marker>
<rawString>Kay, Martin, &amp;quot;The Mind System&amp;quot;, in Rustin, Randall (ed), Natural Language Processing, New York, 1973</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michell P Marcus</author>
</authors>
<title>A Theory of Syntactic Recognition for Natural Language, Cambridge/MA,</title>
<date>1980</date>
<marker>Marcus, 1980</marker>
<rawString>[MARCUS 80] Marcus, Michell P., A Theory of Syntactic Recognition for Natural Language, Cambridge/MA, 1980</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wolfgang Wahlster</author>
</authors>
<title>ATNs mid die semantisch-pragmatische Steuerung der Analyse und Generierung natiirlicher Sprache&amp;quot;, in Christaller, Thomas, and Metzing, Dieter (eds), Augmented Transition Network Grammatiken,</title>
<date>1979</date>
<location>Berlin,</location>
<marker>Wahlster, 1979</marker>
<rawString>Wahlster, Wolfgang, &amp;quot;ATNs mid die semantisch-pragmatische Steuerung der Analyse und Generierung natiirlicher Sprache&amp;quot;, in Christaller, Thomas, and Metzing, Dieter (eds), Augmented Transition Network Grammatiken, Berlin, 1979</rawString>
</citation>
<citation valid="false">
<tech>WEHRLI 831</tech>
<marker></marker>
<rawString>[WEHRLI 831</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eric Wehrli</author>
</authors>
<title>A Modular Parser For French&amp;quot;, in</title>
<date>1983</date>
<booktitle>Proc. 8th IJCAI</booktitle>
<location>Karlsruhe</location>
<marker>Wehrli, 1983</marker>
<rawString>Wehrli, Eric, &amp;quot;A Modular Parser For French&amp;quot;, in Proc. 8th IJCAI Karlsruhe 1983, Los Altos/CA, 1983</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>