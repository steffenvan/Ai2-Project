<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000158">
<title confidence="0.9998">
A Ranking Approach to Stress Prediction
for Letter-to-Phoneme Conversion
</title>
<author confidence="0.999768">
Qing Dou, Shane Bergsma, Sittichai Jiampojamarn and Grzegorz Kondrak
</author>
<affiliation confidence="0.9985325">
Department of Computing Science
University of Alberta
</affiliation>
<address confidence="0.921126">
Edmonton, AB, T6G 2E8, Canada
</address>
<email confidence="0.99942">
{qdou,bergsma,sj,kondrak}@cs.ualberta.ca
</email>
<sectionHeader confidence="0.997397" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999906954545455">
Correct stress placement is important in
text-to-speech systems, in terms of both
the overall accuracy and the naturalness of
pronunciation. In this paper, we formu-
late stress assignment as a sequence pre-
diction problem. We represent words as
sequences of substrings, and use the sub-
strings as features in a Support Vector Ma-
chine (SVM) ranker, which is trained to
rank possible stress patterns. The rank-
ing approach facilitates inclusion of arbi-
trary features over both the input sequence
and output stress pattern. Our system ad-
vances the current state-of-the-art, predict-
ing primary stress in English, German, and
Dutch with up to 98% word accuracy on
phonemes, and 96% on letters. The sys-
tem is also highly accurate in predicting
secondary stress. Finally, when applied in
tandem with an L2P system, it substan-
tially reduces the word error rate when
predicting both phonemes and stress.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999978160714286">
In many languages, certain syllables in words are
phonetically more prominent in terms of duration,
pitch, and loudness. This phenomenon is referred
to as lexical stress. In some languages, the loca-
tion of stress is entirely predictable. For example,
lexical stress regularly falls on the initial syllable
in Hungarian, and on the penultimate syllable in
Polish. In other languages, such as English and
Russian, any syllable in the word can be stressed.
Correct stress placement is important in text-
to-speech systems because it affects the accuracy
of human word recognition (Tagliapietra and Ta-
bossi, 2005; Arciuli and Cupples, 2006). How-
ever, the issue has often been ignored in previ-
ous letter-to-phoneme (L2P) systems. The sys-
tems that do generate stress markers often do not
report separate figures on stress prediction accu-
racy, or they only provide results on a single lan-
guage. Some only predict primary stress mark-
ers (Black et al., 1998; Webster, 2004; Demberg
et al., 2007), while those that predict both primary
and secondary stress generally achieve lower ac-
curacy (Bagshaw, 1998; Coleman, 2000; Pearson
et al., 2000).
In this paper, we formulate stress assignment as
a sequence prediction problem. We divide each
word into a sequence of substrings, and use these
substrings as features for a Support Vector Ma-
chine (SVM) ranker. For a given sequence length,
there is typically only a small number of stress
patterns in use. The task of the SVM is to rank
the true stress pattern above the small number of
acceptable alternatives. This is the first system
to predict stress within a powerful discriminative
learning framework. By using a ranking approach,
we enable the use of arbitrary features over the en-
tire (input) sequence and (output) stress pattern.
We show that the addition of a feature for the en-
tire output sequence improves prediction accuracy.
Our experiments on English, German, and
Dutch demonstrate that our ranking approach sub-
stantially outperforms previous systems. The
SVM ranker achieves exceptional 96.2% word ac-
curacy on the challenging task of predicting the
full stress pattern in English. Moreover, when
combining our stress predictions with a state-of-
the-art L2P system (Jiampojamarn et al., 2008),
we set a new standard for the combined prediction
of phonemes and stress.
The paper is organized as follows. Section 2
provides background on lexical stress and a task
definition. Section 3 presents our automatic stress
prediction algorithm. In Section 4, we confirm the
power of the discriminative approach with experi-
ments on three languages. Section 5 describes how
stress is integrated into L2P conversion.
</bodyText>
<page confidence="0.956532">
118
</page>
<note confidence="0.9996285">
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 118–126,
Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP
</note>
<sectionHeader confidence="0.815932" genericHeader="introduction">
2 Background and Task Definition
</sectionHeader>
<bodyText confidence="0.999975817073171">
There is a long history of research into the prin-
ciples governing lexical stress placement. Zipf
(1929) showed that stressed syllables are of-
ten those with low frequency in speech, while
unstressed syllables are usually very common.
Chomsky and Halle (1968) proposed a set of
context-sensitive rules for producing English
stress from underlying word forms. Due to its
importance in text-to-speech, there is also a long
history of computational stress prediction sys-
tems (Fudge, 1984; Church, 1985; Williams,
1987). While these early approaches depend
on human definitions of vowel tensity, syllable
weight, word etymology, etc., our work follows
a recent trend of purely data-driven approaches to
stress prediction (Black et al., 1998; Pearson et al.,
2000; Webster, 2004; Demberg et al., 2007).
In many languages, only two levels of stress
are distinguished: stressed and unstressed. How-
ever, some languages exhibit more than two levels
of stress. For example, in the English word eco-
nomic, the first and the third syllable are stressed,
with the former receiving weaker emphasis than
the latter. In this case, the initial syllable is said
to carry a secondary stress. Although each word
has only one primary stress, it may have any num-
ber of secondary stresses. Predicting the full stress
pattern is therefore inherently more difficult than
predicting the location of primary stress only.
Our objective is to automatically assign primary
and, where possible, secondary stress to out-of-
vocabulary words. Stress is an attribute of sylla-
bles, but syllabification is a non-trivial task in it-
self (Bartlett et al., 2008). Rather than assuming
correct syllabification of the input word, we in-
stead follow Webster (2004) in placing the stress
on the vowel which constitutes the nucleus of the
stressed syllable. If the syllable boundaries are
known, the mapping from the vowel to the cor-
responding syllable is straightforward.
We investigate the assignment of stress to two
related but different entities: the spoken word
(represented by its phonetic transcription), and
the written word (represented by its orthographic
form). Although stress is a prosodic feature, as-
signing stress to written words (“stressed orthog-
raphy”) has been utilized as a preprocessing stage
for the L2P task (Webster, 2004). This prepro-
cessing is motivated by two factors. First, stress
greatly influences the pronunciation of vowels in
English (c.f., allow vs. alloy). Second, since
phoneme predictors typically utilize only local
context around a letter, they do not incorporate the
global, long-range information that is especially
predictive of stress, such as penultimate syllable
emphasis associated with the suffix -ation. By tak-
ing stressed orthography as input, the L2P system
is able to implicitly leverage morphological infor-
mation beyond the local context.
Indicating stress on letters can also be help-
ful to humans, especially second-language learn-
ers. In some languages, such as Spanish, ortho-
graphic markers are obligatory in words with ir-
regular stress. The location of stress is often ex-
plicitly marked in textbooks for students of Rus-
sian. In both languages, the standard method of
indicating stress is to place an acute accent above
the vowel bearing primary stress, e.g., adi´os. The
secondary stress in English can be indicated with
a grave accent (Coleman, 2000), e.g., pr`ec´ede.
In summary, our task is to assign primary and
secondary stress markers to stress-bearing vowels
in an input word. The input word may be either
phonemes or letters. If a stressed vowel is repre-
sented by more than one letter, we adopt the con-
vention of marking the first vowel of the vowel se-
quence, e.g., m´eeting. In this way, we are able to
focus on the task of stress prediction, without hav-
ing to determine at the same time the exact sylla-
ble boundaries, or whether a vowel letter sequence
represents one or more spoken vowels (e.g., beat-
ing vs. be-at-i-fy).
</bodyText>
<sectionHeader confidence="0.983774" genericHeader="method">
3 Automatic Stress Prediction
</sectionHeader>
<bodyText confidence="0.96514675">
Our stress assignment system maps a word, w, to a
stressed-form of the word, W. We formulate stress
assignment as a sequence prediction problem. The
assignment is made in three stages:
</bodyText>
<listItem confidence="0.9975945">
(1) First, we map words to substrings (s), the ba-
sic units in our sequence (Section 3.1).
(2) Then, a particular stress pattern (t) is chosen
for each substring sequence. We use a sup-
port vector machine (SVM) to rank the possi-
ble patterns for each sequence (Section 3.2).
(3) Finally, the stress pattern is used to produce
the stressed-form of the word (Section 3.3).
</listItem>
<bodyText confidence="0.507054">
Table 1 gives examples of words at each stage of
the algorithm. We discuss each step in more detail.
</bodyText>
<page confidence="0.99594">
119
</page>
<table confidence="0.987470714285714">
Word Substrings Pattern Word’
w → s → t → w�
worker → wor-ker → 1-0 → w´orker
overdo → ov-ver-do → 2-0-1 → `overd´o
react → re-ac → 0-1 → re´act
æbstrækt → æb-ræk → 0-1 → æbstr´ækt
prisid → ri-sid → 2-1 → prisid
</table>
<tableCaption confidence="0.5966538">
Table 1: The steps in our stress prediction sys-
tem (with orthographic and phonetic prediction
examples): (1) word splitting, (2) support vector
ranking of stress patterns, and (3) pattern-to-vowel
mapping.
</tableCaption>
<subsectionHeader confidence="0.999607">
3.1 Word Splitting
</subsectionHeader>
<bodyText confidence="0.999861222222222">
The first step in our approach is to represent the
word as a sequence of N individual units: w →
s = {s1-s2-...-sN}. These units are used to define
the features and outputs used by the SVM ranker.
Although we are ultimately interested in assigning
stress to individual vowels in the phoneme and let-
ter sequence, it is beneficial to represent the task in
units larger than individual letters.
Our substrings are similar to syllables; they
have a vowel as their nucleus and include con-
sonant context. By approximating syllables, our
substring patterns will allow us to learn recur-
rent stress regularities, as well as dependencies
between neighboring substrings. Since determin-
ing syllable breaks is a non-trivial task, we in-
stead adopt the following simple splitting tech-
nique. Each vowel in the word forms the nucleus
of a substring. Any single preceding or follow-
ing consonant is added to the substring unit. Thus,
each substring consists of at most three symbols
(Table 1).
Using shorter substrings reduces the sparsity of
our training data; words like cryer, dryer and fryer
are all mapped to the same form: ry-er. The
SVM can thus generalize from observed words to
similarly-spelled, unseen examples.
Since the number of vowels equals the num-
ber of syllables in the phonetic form of the word,
applying this approach to phonemes will always
generate the correct number of syllables. For let-
ters, splitting may result in a different number of
units than the true syllabification, e.g., pronounce
→ ron-no-un-ce. This does not prevent the system
from producing the correct stress assignment after
the pattern-to-vowel mapping stage (Section 3.3)
is complete.
</bodyText>
<subsectionHeader confidence="0.995889">
3.2 Stress Prediction with SVM Ranking
</subsectionHeader>
<bodyText confidence="0.999846265306123">
After creating a sequence of substring units, s =
{s1-s2-...-sN}, the next step is to choose an out-
put sequence, t = {t1-t2-...-tN}, that encodes
whether each unit is stressed or unstressed. We
use the number ‘1’ to indicate that a substring re-
ceives primary stress, ‘2’ for secondary stress, and
‘0’ to indicate no stress. We call this output se-
quence the stress pattern for a word. Table 1 gives
examples of words, substrings, and stress patterns.
We use supervised learning to train a system to
predict the stress pattern. We generate training
(s, t) pairs in the obvious way from our stress-
marked training words, W. That is, we first ex-
tract the letter/phoneme portion, w, and use it
to create the substrings, s. We then create the
stress pattern, t, using W’s stress markers. Given
the training pairs, any sequence predictor can be
used, for example a Conditional Random Field
(CRF) (Lafferty et al., 2001) or a structured per-
ceptron (Collins, 2002). However, we can take
advantage of a unique property of our problem to
use a more expressive framework than is typically
used in sequence prediction.
The key observation is that the output space of
possible stress patterns is actually fairly limited.
Clopper (2002) shows that people have strong
preferences for particular sequences of stress, and
this is confirmed by our training data (Section 4.1).
In English, for example, we find that for each set
of spoken words with the same number of sylla-
bles, there are no more than fifteen different stress
patterns. In total, among 55K English training ex-
amples, there are only 70 different stress patterns.
In both German and Dutch there are only about
50 patterns in 250K examples.1 Therefore, for a
particular input sequence, we can safely limit our
consideration to only the small set of output pat-
terns of the same length.
Thus, unlike typical sequence predictors, we do
not have to search for the highest-scoring output
according to our model. We can enumerate the
full set of outputs and simply choose the highest-
scoring one. This enables a more expressive rep-
resentation. We can define arbitrary features over
the entire output sequence. In a typical CRF or
structured perceptron approach, only output fea-
tures that can be computed incrementally during
search are used (e.g. Markov transition features
that permit Viterbi search). Since search is not
</bodyText>
<footnote confidence="0.981248">
1See (Dou, 2009) for more details.
</footnote>
<page confidence="0.993478">
120
</page>
<bodyText confidence="0.999823125">
needed here, we can exploit longer-range features.
Choosing the highest-scoring output from a
fixed set is a ranking problem, and we provide the
full ranking formulation below. Unlike previous
ranking approaches (e.g. Collins and Koo (2005)),
we do not rely on a generative model to produce
a list of candidates. Candidates are chosen in ad-
vance from observed training patterns.
</bodyText>
<subsectionHeader confidence="0.903445">
3.2.1 Ranking Formulation
</subsectionHeader>
<bodyText confidence="0.999231764705882">
For a substring sequence, s, of length N, our task
is to select the correct output pattern from the set
of all length-N patterns observed in our training
data, a set we denote as TN. We score each possi-
ble input-output combination using a linear model.
Each substring sequence and possible output pat-
tern, (s, t), is represented with a set of features,
Φ(s, t). The score for a particular (s, t) combina-
tion is a weighted sum of these features, A·Φ(s, t).
The specific features we use are described in Sec-
tion 3.2.2.
Let tj be the stress pattern for the jth training
sequence sj, both of length N. At training time,
the weights, A, are chosen such that for each sj,
the correct output pattern receives a higher score
than other patterns of the same length: Vu E
TN, u =� tj,
</bodyText>
<equation confidence="0.829877">
A · Φ(sj, tj) &gt; A · Φ(sj, u) (1)
</equation>
<bodyText confidence="0.999938454545455">
The set of constraints generated by Equation 1
are called rank constraints. They are created sep-
arately for every (sj, tj) training pair. Essen-
tially, each training pair is matched with a set
of automatically-created negative examples. Each
negative has an incorrect, but plausible, stress pat-
tern, u.
We adopt a Support Vector Machine (SVM) so-
lution to these ranking constraints as described by
Joachims (2002). The learner finds the weights
that ensure a maximum (soft) margin separation
between the correct scores and the competitors.
We use an SVM because it has been successful in
similar settings (learning with thousands of sparse
features) for both ranking and classification tasks,
and because an efficient implementation is avail-
able (Joachims, 1999).
At test time we simply score each possible out-
put pattern using the learned weights. That is,
for an input sequence s of length N, we compute
A · Φ(s, t) for all t E TN, and we take the highest
scoring t as our output. Note that because we only
</bodyText>
<table confidence="0.998702625">
Substring si, ti
si, i, ti
Context si−1, ti
si−1si, ti
si+1, ti
sisi+1, ti
si−1sisi+1, ti
Stress Pattern t1t2 ... tN
</table>
<tableCaption confidence="0.990408">
Table 2: Feature Template
</tableCaption>
<bodyText confidence="0.999690714285714">
consider previously-observed output patterns, it is
impossible for our system to produce a nonsensi-
cal result, such as having two primary stresses in
one word. Standard search-based sequence pre-
dictors need to be specially augmented with hard
constraints in order to prevent such output (Roth
and Yih, 2005).
</bodyText>
<sectionHeader confidence="0.692052" genericHeader="method">
3.2.2 Features
</sectionHeader>
<bodyText confidence="0.999946714285714">
The power of our ranker to identify the correct
stress pattern depends on how expressive our fea-
tures are. Table 2 shows the feature templates used
to create the features Φ(s, t) for our ranker. We
use binary features to indicate whether each com-
bination occurs in the current (s,t) pair.
For example, if a substring tion is unstressed in
a (s, t) pair, the Substring feature {si, ti = tion,0}
will be true.2 In English, often the penultimate
syllable is stressed if the final syllable is tion.
We can capture such a regularity with the Con-
text feature si+1, ti. If the following syllable is
tion and the current syllable is stressed, the fea-
ture {si+1, ti = tion,1} will be true. This feature
will likely receive a positive weight, so that out-
put sequences with a stress before tion receive a
higher rank.
Finally, the full Stress Pattern serves as an im-
portant feature. Note that such a feature would
not be possible in standard sequence predictors,
where such information must be decomposed into
Markov transition features like ti−1ti. In a ranking
framework, we can score output sequences using
their full output pattern. Thus we can easily learn
the rules in languages with regular stress rules. For
languages that do not have a fixed stress rule, pref-
erences for particular patterns can be learned using
this feature.
</bodyText>
<footnote confidence="0.997652">
2tion is a substring composed of three phonemes but we
use its orthographic representation here for clarity.
</footnote>
<page confidence="0.987657">
121
</page>
<subsectionHeader confidence="0.951949">
3.3 Pattern-to-Vowel Mapping
</subsectionHeader>
<bodyText confidence="0.9999955">
The final stage of our system uses the predicted
pattern t to create the stress-marked form of the
word, ¯w. Note the number of substrings created
by our splitting method always equals the number
of vowels in the word. We can thus simply map
the indicator numbers in t to markers on their cor-
responding vowels to produce the stressed word.
For our example, pronounce → ron-no-un-ce,
if the SVM chooses the stress pattern, 0-1-0-
0, we produce the correct stress-marked word,
pron´ounce. If we instead stress the third vowel, 0-
0-1-0, we produce an incorrect output, prono´unce.
</bodyText>
<sectionHeader confidence="0.997323" genericHeader="method">
4 Stress Prediction Experiments
</sectionHeader>
<bodyText confidence="0.999752666666667">
In this section, we evaluate our ranking approach
to stress prediction by assigning stress to spoken
and written words in three languages: English,
German, and Dutch. We first describe the data and
the various systems we evaluate, and then provide
the results.
</bodyText>
<subsectionHeader confidence="0.96175">
4.1 Data
</subsectionHeader>
<bodyText confidence="0.99998812">
The data is extracted from CELEX (Baayen et al.,
1996). Following previous work on stress predic-
tion, we randomly partition the data into 85% for
training, 5% for development, and 10% for test-
ing. To make results on German and Dutch com-
parable with English, we reduce the training, de-
velopment, and testing set by 80% for each. Af-
ter removing all duplicated items as well as abbre-
viations, phrases, and diacritics, each training set
contains around 55K words.
In CELEX, stress is labeled on syllables in the
phonetic form of the words. Since our objec-
tive is to assign stress markers to vowels (as de-
scribed in Section 2) we automatically map the
stress markers from the stressed syllables in the
phonetic forms onto phonemes and letters rep-
resenting vowels. For phonemes, the process is
straightforward: we move the stress marker from
the beginning of a syllable to the phoneme which
constitutes the nucleus of the syllable. For let-
ters, we map the stress from the vowel phoneme
onto the orthographic forms using the ALINE al-
gorithm (Dwyer and Kondrak, 2009). The stress
marker is placed on the first letter within the sylla-
ble that represents a vowel sound.3
</bodyText>
<footnote confidence="0.997389333333333">
3Our stand-off stress annotations for English, German,
and Dutch CELEX orthographic data can be downloaded at:
http://www.cs.ualberta.ca/˜kondrak/celex.html.
</footnote>
<table confidence="0.9996128">
System Eng Ger Dut
P+S P P P
SUBSTRING 96.2 98.0 97.1 93.1
ORACLESYL 95.4 96.4 97.1 93.2
TOPPATTERN 66.8 68.9 64.1 60.8
</table>
<tableCaption confidence="0.86059725">
Table 3: Stress prediction word accuracy (%) on
phonemes for English, German, and Dutch. P:
predicting primary stress only. P+S: primary and
secondary.
</tableCaption>
<listItem confidence="0.5203684">
CELEX also provides secondary stress annota-
tion for English. We therefore evaluate on both
primary and secondary stress (P+S) in English and
on primary stress assignment alone (P) for En-
glish, German, and Dutch.
</listItem>
<subsectionHeader confidence="0.983372">
4.2 Comparison Approaches
</subsectionHeader>
<bodyText confidence="0.999951">
We evaluate three different systems on the letter
and phoneme sequences in the experimental data:
</bodyText>
<equation confidence="0.810499">
1) SUBSTRING is the system presented in Sec-
</equation>
<bodyText confidence="0.979138565217392">
tion 3. It uses the vowel-based splitting
method, followed by SVM ranking.
2) ORACLESYL splits the input word into sylla-
bles according to the CELEX gold-standard,
before applying SVM ranking. The output
pattern is evaluated directly against the gold-
standard, without pattern-to-vowel mapping.
3) TOPPATTERN is our baseline system. It uses
the vowel-based splitting method to produce a
substring sequence of length N. Then it simply
chooses the most common stress pattern among
all the stress patterns of length N.
SUBSTRING and ORACLESYL use scores pro-
duced by an SVM ranker trained on the training
data. We employ the ranking mode of the popular
learning package SVM&amp;quot;ght (Joachims, 1999). In
each case, we learn a linear kernel ranker on the
training set stress patterns and tune the parameter
that trades-off training error and margin on the de-
velopment set.
We evaluate the systems using word accuracy:
the percent of words for which the output form of
the word, ¯w, matches the gold standard.
</bodyText>
<subsectionHeader confidence="0.769379">
4.3 Results
</subsectionHeader>
<bodyText confidence="0.999358">
Table 3 provides results on English, German, and
Dutch phonemes. Overall, the performance of our
automatic stress predictor, SUBSTRING, is excel-
lent. It achieves 98.0% accuracy for predicting
</bodyText>
<page confidence="0.995516">
122
</page>
<table confidence="0.999598">
System Eng Ger Dut
P+S P P P
SUBSTRING 93.5 95.1 95.9 91.0
ORACLESYL 94.6 96.0 96.6 92.8
TOPPATTERN 65.5 67.6 64.1 60.8
</table>
<tableCaption confidence="0.770517">
Table 4: Stress prediction word accuracy (%) on
letters for English, German, and Dutch. P: pre-
dicting primary stress only. P+S: primary and sec-
ondary.
</tableCaption>
<bodyText confidence="0.99613825">
primary stress in English, 97.1% in German, and
93.1% in Dutch. It also predicts both primary and
secondary stress in English with high accuracy,
96.2%. Performance is much higher than our base-
line accuracy, which is between 60% and 70%.
ORACLESYL, with longer substrings and hence
sparser data, does not generally improve perfor-
mance. This indicates that perfect syllabification
is unnecessary for phonetic stress assignment.
Our system is a major advance over the pre-
vious state-of-the-art in phonetic stress assign-
ment. For predicting stressed/unstressed syllables
in English, Black et al. (1998) obtained a per-
syllable accuracy of 94.6%. We achieve 96.2%
per-word accuracy for predicting both primary and
secondary stress. Others report lower numbers
on English phonemes. Bagshaw (1998) obtained
65%-83.3% per-syllable accuracy using Church
(1985)’s rule-based system. For predicting both
primary and secondary stress, Coleman (2000)
and Pearson et al. (2000) report 69.8% and 81.0%
word accuracy, respectively.
The performance on letters (Table 4) is also
quite encouraging. SUBSTRING predicts primary
stress with accuracy above 95% for English and
German, and equal to 91% in Dutch. Performance
is 1-3% lower on letters than on phonemes. On
the other hand, the performance of ORACLESYL
drops much less on letters. This indicates that
most of SUBSTRING’s errors are caused by the
splitting method. Letter vowels may or may not
represent spoken vowels. By creating a substring
for every vowel letter we may produce an incorrect
number of syllables. Our pattern feature is there-
fore less effective.
Nevertheless, SUBSTRING’s accuracy on letters
also represents a clear improvement over previ-
ous work. Webster (2004) reports 80.3% word
accuracy on letters in English and 81.2% in Ger-
man. The most comparable work is Demberg et al.
</bodyText>
<figureCaption confidence="0.999249">
Figure 1: Stress prediction accuracy on letters.
</figureCaption>
<bodyText confidence="0.999972529411765">
(2007), which achieves 90.1% word accuracy on
letters in German CELEX, assuming perfect letter
syllabification. In order to reproduce their strict
experimental setup, we re-partition the full set of
German CELEX data to ensure that no overlap of
word stems exists between the training and test
sets. Using the new data sets, our system achieves
a word accuracy of 92.3%, a 2.2% improvement
over Demberg et al. (2007)’s result. Moreover, if
we also assume perfect syllabification, the accu-
racy is 94.3%, a 40% reduction in error rate.
We performed a detailed analysis to understand
the strong performance of our system. First of all,
note that an error could happen if a test-set stress
pattern was not observed in the training data; its
correct stress pattern would not be considered as
an output. In fact, no more than two test errors in
any test set were so caused. This strongly justi-
fies the reduced set of outputs used in our ranking
formulation.
We also tested all systems with the Stress Pat-
tern feature removed. Results were worse in all
cases. As expected, it is most valuable for pre-
dicting primary and secondary stress. On English
phonemes, accuracy drops from 96.2% to 95.3%
without it. On letters, it drops from 93.5% to
90.0%. The gain from this feature also validates
our ranking framework, as such arbitrary features
over the entire output sequence can not be used in
standard search-based sequence prediction.
Finally, we examined the relationship between
training data size and performance by plotting
learning curves for letter stress accuracy (Fig-
ure 1). Unlike the tables above, here we use the
</bodyText>
<figure confidence="0.997043533333333">
10000 100000
Number of training examples
Word Accuracy (%)
100
98
96
94
92
90
88
86
84
German
Dutch
English
</figure>
<page confidence="0.997555">
123
</page>
<bodyText confidence="0.99876275">
full set of data in Dutch and German CELEX to
create the largest-possible training sets (255K ex-
amples). None of the curves are levelling off; per-
formance grows log-linearly across the full range.
</bodyText>
<sectionHeader confidence="0.640055" genericHeader="method">
5 Lexical stress and L2P conversion
</sectionHeader>
<bodyText confidence="0.999923375">
In this section, we evaluate various methods of
combining stress prediction with phoneme gener-
ation. We first describe the specific system that we
use for letter-to-phoneme (L2P) conversion. We
then discuss the different ways stress prediction
can be integrated with L2P, and define the systems
used in our experiments. Finally, we provide the
results.
</bodyText>
<subsectionHeader confidence="0.998363">
5.1 The L2P system
</subsectionHeader>
<bodyText confidence="0.999972421052632">
We combine stress prediction with a state-of-the-
art L2P system (Jiampojamarn et al., 2008). Like
our stress ranker, their system is a data-driven se-
quence predictor that is trained with supervised
learning. The score for each output sequence is
a weighted combination of features. The feature
weights are trained using the Margin Infused Re-
laxed Algorithm (MIRA) (Crammer and Singer,
2003), a powerful online discriminative training
framework. Like other recent L2P systems (Bisani
and Ney, 2002; Marchand and Damper, 2007; Ji-
ampojamarn et al., 2007), this approach does not
generate stress, nor does it consider stress when it
generates phonemes.
For L2P experiments, we use the same training,
testing, and development data as was used in Sec-
tion 4. For all experiments, we use the develop-
ment set to determine at which iteration to stop
training in the online algorithm.
</bodyText>
<subsectionHeader confidence="0.9644205">
5.2 Combining stress and phoneme
generation
</subsectionHeader>
<bodyText confidence="0.999808024390244">
Various methods have been used for combining
stress and phoneme generation. Phonemes can be
generated without regard to stress, with stress as-
signed as a post-process (Bagshaw, 1998; Cole-
man, 2000). Both van den Bosch (1997) and
Black et al. (1998) argue that stress should be pre-
dicted at the same time as phonemes. They ex-
pand the output set to distinguish between stressed
and unstressed phonemes. Similarly, Demberg et
al. (2007) produce phonemes, stress, and syllable-
boundaries within a single joint n-gram model.
Pearson et al. (2000) generate phonemes and stress
together by jointly optimizing a decision-tree
phoneme-generator and a stress predictor based on
stress pattern counts. In contrast, Webster (2004)
first assigns stress to letters, creating an expanded
input set, and then predicts both phonemes and
stress jointly. The system marks stress on let-
ter vowels by determining the correspondence be-
tween affixes and stress in written words.
Following the above approaches, we can expand
the input or output symbols of our L2P system to
include stress. However, since both decision tree
systems and our L2P predictor utilize only local
context, they may produce invalid global output.
One option, used by Demberg et al. (2007), is to
add a constraint to the output generation, requiring
each output sequence to have exactly one primary
stress.
We enhance this constraint, based on the obser-
vation that the number of valid output sequences
is fairly limited (Section 3.2). The modified sys-
tem produces the highest-scoring sequence such
that the output’s corresponding stress pattern has
been observed in our training data. We call this
the stress pattern constraint. This is a tighter
constraint than having only one primary stress.4
Another advantage is that it provides some guid-
ance for the assignment of secondary stress.
Inspired by the aforementioned strategies, we
evaluate the following approaches:
</bodyText>
<listItem confidence="0.993970666666667">
1) JOINT: The L2P system’s input sequence is let-
ters, the output sequence is phonemes+stress.
2) JOINT+CONSTR: Same as JOINT, except it se-
lects the highest scoring output that obeys the
stress pattern constraint.
3) POSTPROCESS: The L2P system’s input is let-
</listItem>
<bodyText confidence="0.594021125">
ters, the output is phonemes. It then applies the
SVM stress ranker (Section 3) to the phonemes
to produce the full phoneme+stress output.
4) LETTERSTRESS: The L2P system’s input is
letters+stress, the output is phonemes+stress.
It creates the stress-marked letters by applying
the SVM ranker to the input letters as a pre-
process.
</bodyText>
<listItem confidence="0.701330666666667">
5) ORACLESTRESS: The same input/output as
LETTERSTRESS, except it uses the gold-
standard stress on letters (Section 4.1).
</listItem>
<footnote confidence="0.99739875">
4In practice, the L2P system generates a top-N list, and
we take the highest-scoring output on the list that satisfies
the constraint. If none satisfy the constraint, we take the top
output that has only one primary stress.
</footnote>
<page confidence="0.984649">
124
</page>
<table confidence="0.999636625">
System Eng Ger Dut
P+S P P P
JOINT 78.9 80.0 86.0 81.1
JOINT+CONSTR 84.6 86.0 90.8 88.7
POSTPROCESS 86.2 87.6 90.9 88.8
LETTERSTRESS 86.5 87.2 90.1 86.6
ORACLESTRESS 91.4 91.4 92.6 94.5
Festival 61.2 62.5 71.8 65.1
</table>
<tableCaption confidence="0.84516775">
Table 5: Combined phoneme and stress predic-
tion word accuracy (%) for English, German, and
Dutch. P: predicting primary stress only. P+S:
primary and secondary.
</tableCaption>
<bodyText confidence="0.9999136">
Note that while the first approach uses only
local information to make predictions (features
within a context window around the current let-
ter), systems 2 to 5 leverage global information in
some manner: systems 3 and 4 use the predictions
of our stress ranker, while 2 uses a global stress
pattern constraint.5
We also generated stress and phonemes using
the popular Festival Speech Synthesis System6
(version 1.96, 2004) and report its accuracy.
</bodyText>
<sectionHeader confidence="0.57467" genericHeader="evaluation">
5.3 Results
</sectionHeader>
<bodyText confidence="0.999955727272727">
Word accuracy results for predicting both
phonemes and stress are provided in Table 5.
First of all, note that the JOINT approach,
which simply expands the output set, is 4%-
8% worse than all other comparison systems
across the three languages. These results clearly
indicate the drawbacks of predicting stress us-
ing only local information. In English, both
LETTERSTRESS and POSTPROCESS perform
best, while POSTPROCESS and the constrained
system are highest on German and Dutch. Results
using the oracle letter stress show that given
perfect stress assignment on letters, phonemes
and stress can be predicted very accurately, in all
cases above 91%.
We also found that the phoneme prediction ac-
curacy alone (i.e., without stress) is quite simi-
lar for all the systems. The gains over JOINT
on combined stress and phoneme accuracy are
almost entirely due to more accurate stress as-
signment. Utilizing the oracle stress on letters
markedly improves phoneme prediction in English
</bodyText>
<footnote confidence="0.99368275">
5This constraint could also help the other systems. How-
ever, since they already use global information, it yields only
marginal improvements.
6http://www.cstr.ed.ac.uk/projects/festival/
</footnote>
<bodyText confidence="0.999885037037037">
(from 88.8% to 91.4%). This can be explained by
the fact that English vowels are often reduced to
schwa when unstressed (Section 2).
Predicting both phonemes and stress is a chal-
lenging task, and each of our globally-informed
systems represents a major improvement over pre-
vious work. The accuracy of Festival is much
lower even than our JOINT approach, but the rel-
ative performance on the different languages is
quite similar.
A few papers report accuracy on the combined
stress and phoneme prediction task. The most di-
rectly comparable work is van den Bosch (1997),
which also predicts primary and secondary stress
using English CELEX data. However, the re-
ported word accuracy is only 62.1%. Three other
papers report word accuracy on phonemes and
stress, using different data sets. Pearson et al.
(2000) report 58.5% word accuracy for predicting
phonemes and primary/secondary stress. Black et
al. (1998) report 74.6% word accuracy in English,
while Webster (2004) reports 68.2% on English
and 82.9% in German (all primary stress only).
Finally, Demberg et al. (2007) report word accu-
racy on predicting phonemes, stress, and syllab-
ification on German CELEX data. They achieve
86.3% word accuracy.
</bodyText>
<sectionHeader confidence="0.999541" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.9999456875">
We have presented a discriminative ranking ap-
proach to lexical stress prediction, which clearly
outperforms previously developed systems. The
approach is largely language-independent, appli-
cable to both orthographic and phonetic repre-
sentations, and flexible enough to handle multi-
ple stress levels. When combined with an exist-
ing L2P system, it achieves impressive accuracy
in generating pronunciations together with their
stress patterns. In the future, we will investigate
additional features to leverage syllabic and mor-
phological information, when available. Kernel
functions could also be used to automatically cre-
ate a richer feature space; preliminary experiments
have shown gains in performance using polyno-
mial and RBF kernels with our stress ranker.
</bodyText>
<sectionHeader confidence="0.999101" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.665741">
This research was supported by the Natural
Sciences and Engineering Research Council of
Canada, the Alberta Ingenuity Fund, and the Al-
berta Informatics Circle of Research Excellence.
</bodyText>
<page confidence="0.998598">
125
</page>
<sectionHeader confidence="0.998332" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999865539215686">
Joanne Arciuli and Linda Cupples. 2006. The pro-
cessing of lexical stress during visual word recog-
nition: Typicality effects and orthographic corre-
lates. Quarterly Journal of Experimental Psychol-
ogy, 59(5):920–948.
Harald Baayen, Richard Piepenbrock, and Leon Gu-
likers. 1996. The CELEX2 lexical database.
LDC96L14.
Paul C. Bagshaw. 1998. Phonemic transcription by
analogy in text-to-speech synthesis: Novel word
pronunciation and lexicon compression. Computer
Speech and Language, 12(2):119–142.
Susan Bartlett, Grzegorz Kondrak, and Colin Cherry.
2008. Automatic syllabification with structured
SVMs for letter-to-phoneme conversion. In ACL-
08: HLT, pages 568–576.
Maximilian Bisani and Hermann Ney. 2002. Investi-
gations on joint-multigram models for grapheme-to-
phoneme conversion. In ICSLP, pages 105–108.
Alan W Black, Kevin Lenzo, and Vincent Pagel. 1998.
Issues in building general letter to sound rules. In
The 3rd ESCA Workshop on Speech Synthesis, pages
77–80.
Noam Chomsky and Morris Halle. 1968. The sound
pattern of English. New York: Harper and Row.
Kenneth Church. 1985. Stress assignment in letter
to sound rules for speech synthesis. In ACL, pages
246–253.
Cynthia G. Clopper. 2002. Frequency of stress pat-
terns in English: A computational analysis. IULC
Working Papers Online.
John Coleman. 2000. Improved prediction of stress in
out-of-vocabulary words. In IEEE Seminar on the
State of the Art in Speech Synthesis.
Michael Collins and Terry Koo. 2005. Discriminative
reranking for natural language parsing. Computa-
tional Linguistics, 31(1):25–70.
Michael Collins. 2002. Discriminative training meth-
ods for Hidden Markov Models: Theory and ex-
periments with perceptron algorithms. In EMNLP,
pages 1–8.
Koby Crammer and Yoram Singer. 2003. Ultracon-
servative online algorithms for multiclass problems.
Journal ofMachine Learning Research, 3:951–991.
Vera Demberg, Helmut Schmid, and Gregor M¨ohler.
2007. Phonological constraints and morphologi-
cal preprocessing for grapheme-to-phoneme conver-
sion. In ACL, pages 96–103.
Qing Dou. 2009. An SVM ranking approach to stress
assignment. Master’s thesis, University of Alberta.
Kenneth Dwyer and Grzegorz Kondrak. 2009. Reduc-
ing the annotation effort for letter-to-phoneme con-
version. In ACL-IJCNLP.
Erik C. Fudge. 1984. English word-stress. London:
Allen and Unwin.
Sittichai Jiampojamarn, Grzegorz Kondrak, and Tarek
Sherif. 2007. Applying many-to-many alignments
and Hidden Markov Models to letter-to-phoneme
conversion. In NAACL-HLT 2007, pages 372–379.
Sittichai Jiampojamarn, Colin Cherry, and Grzegorz
Kondrak. 2008. Joint processing and discriminative
training for letter-to-phoneme conversion. In ACL-
08: HLT, pages 905–913.
Thorsten Joachims. 1999. Making large-scale Support
Vector Machine learning practical. In B. Sch¨olkopf
and C. Burges, editors, Advances in Kernel Meth-
ods: Support Vector Machines, pages 169–184.
MIT-Press.
Thorsten Joachims. 2002. Optimizing search engines
using clickthrough data. In KDD, pages 133–142.
John D. Lafferty, Andrew McCallum, and Fernando
C. N. Pereira. 2001. Conditional Random Fields:
Probabilistic models for segmenting and labeling se-
quence data. In ICML, pages 282–289.
Yannick Marchand and Robert I. Damper. 2007. Can
syllabification improve pronunciation by analogy of
English? Natural Language Engineering, 13(1):1–
24.
Steve Pearson, Roland Kuhn, Steven Fincke, and Nick
Kibre. 2000. Automatic methods for lexical stress
assignment and syllabification. In ICSLP, pages
423–426.
Dan Roth and Wen-tau Yih. 2005. Integer linear pro-
gramming inference for conditional random fields.
In ICML, pages 736–743.
Lara Tagliapietra and Patrizia Tabossi. 2005. Lexical
stress effects in Italian spoken word recognition. In
The XXVII Annual Conference of the Cognitive Sci-
ence Society, pages 2140–2144.
Antal van den Bosch. 1997. Learning to pronounce
written words: A study in inductive language learn-
ing. Ph.D. thesis, Universiteit Maastricht.
Gabriel Webster. 2004. Improving letter-
to-pronunciation accuracy with automatic
morphologically-based stress prediction. In
ICSLP, pages 2573–2576.
Briony Williams. 1987. Word stress assignment in a
text-to-speech synthesis system for British English.
Computer Speech and Language, 2:235–272.
George Kingsley Zipf. 1929. Relative frequency as a
determinant of phonetic change. Harvard Studies in
Classical Philology, 15:1–95.
</reference>
<page confidence="0.998529">
126
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.977389">
<title confidence="0.9988405">A Ranking Approach to Stress Prediction for Letter-to-Phoneme Conversion</title>
<author confidence="0.996616">Qing Dou</author>
<author confidence="0.996616">Shane Bergsma</author>
<author confidence="0.996616">Sittichai Jiampojamarn</author>
<author confidence="0.996616">Grzegorz Kondrak</author>
<affiliation confidence="0.9999775">Department of Computing Science University of Alberta</affiliation>
<address confidence="0.998367">Edmonton, AB, T6G 2E8, Canada</address>
<abstract confidence="0.999291739130435">Correct stress placement is important in text-to-speech systems, in terms of both the overall accuracy and the naturalness of pronunciation. In this paper, we formulate stress assignment as a sequence prediction problem. We represent words as sequences of substrings, and use the substrings as features in a Support Vector Machine (SVM) ranker, which is trained to rank possible stress patterns. The ranking approach facilitates inclusion of arbitrary features over both the input sequence and output stress pattern. Our system advances the current state-of-the-art, predicting primary stress in English, German, and Dutch with up to 98% word accuracy on phonemes, and 96% on letters. The system is also highly accurate in predicting secondary stress. Finally, when applied in tandem with an L2P system, it substantially reduces the word error rate when predicting both phonemes and stress.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Joanne Arciuli</author>
<author>Linda Cupples</author>
</authors>
<title>The processing of lexical stress during visual word recognition: Typicality effects and orthographic correlates.</title>
<date>2006</date>
<journal>Quarterly Journal of Experimental Psychology,</journal>
<volume>59</volume>
<issue>5</issue>
<contexts>
<context position="1816" citStr="Arciuli and Cupples, 2006" startWordPosition="274" endWordPosition="277">languages, certain syllables in words are phonetically more prominent in terms of duration, pitch, and loudness. This phenomenon is referred to as lexical stress. In some languages, the location of stress is entirely predictable. For example, lexical stress regularly falls on the initial syllable in Hungarian, and on the penultimate syllable in Polish. In other languages, such as English and Russian, any syllable in the word can be stressed. Correct stress placement is important in textto-speech systems because it affects the accuracy of human word recognition (Tagliapietra and Tabossi, 2005; Arciuli and Cupples, 2006). However, the issue has often been ignored in previous letter-to-phoneme (L2P) systems. The systems that do generate stress markers often do not report separate figures on stress prediction accuracy, or they only provide results on a single language. Some only predict primary stress markers (Black et al., 1998; Webster, 2004; Demberg et al., 2007), while those that predict both primary and secondary stress generally achieve lower accuracy (Bagshaw, 1998; Coleman, 2000; Pearson et al., 2000). In this paper, we formulate stress assignment as a sequence prediction problem. We divide each word in</context>
</contexts>
<marker>Arciuli, Cupples, 2006</marker>
<rawString>Joanne Arciuli and Linda Cupples. 2006. The processing of lexical stress during visual word recognition: Typicality effects and orthographic correlates. Quarterly Journal of Experimental Psychology, 59(5):920–948.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harald Baayen</author>
<author>Richard Piepenbrock</author>
<author>Leon Gulikers</author>
</authors>
<date>1996</date>
<booktitle>The CELEX2 lexical database. LDC96L14.</booktitle>
<contexts>
<context position="18273" citStr="Baayen et al., 1996" startWordPosition="3009" endWordPosition="3012">oduce the stressed word. For our example, pronounce → ron-no-un-ce, if the SVM chooses the stress pattern, 0-1-0- 0, we produce the correct stress-marked word, pron´ounce. If we instead stress the third vowel, 0- 0-1-0, we produce an incorrect output, prono´unce. 4 Stress Prediction Experiments In this section, we evaluate our ranking approach to stress prediction by assigning stress to spoken and written words in three languages: English, German, and Dutch. We first describe the data and the various systems we evaluate, and then provide the results. 4.1 Data The data is extracted from CELEX (Baayen et al., 1996). Following previous work on stress prediction, we randomly partition the data into 85% for training, 5% for development, and 10% for testing. To make results on German and Dutch comparable with English, we reduce the training, development, and testing set by 80% for each. After removing all duplicated items as well as abbreviations, phrases, and diacritics, each training set contains around 55K words. In CELEX, stress is labeled on syllables in the phonetic form of the words. Since our objective is to assign stress markers to vowels (as described in Section 2) we automatically map the stress </context>
</contexts>
<marker>Baayen, Piepenbrock, Gulikers, 1996</marker>
<rawString>Harald Baayen, Richard Piepenbrock, and Leon Gulikers. 1996. The CELEX2 lexical database. LDC96L14.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul C Bagshaw</author>
</authors>
<title>Phonemic transcription by analogy in text-to-speech synthesis: Novel word pronunciation and lexicon compression.</title>
<date>1998</date>
<journal>Computer Speech and Language,</journal>
<volume>12</volume>
<issue>2</issue>
<contexts>
<context position="2274" citStr="Bagshaw, 1998" startWordPosition="352" endWordPosition="353">is important in textto-speech systems because it affects the accuracy of human word recognition (Tagliapietra and Tabossi, 2005; Arciuli and Cupples, 2006). However, the issue has often been ignored in previous letter-to-phoneme (L2P) systems. The systems that do generate stress markers often do not report separate figures on stress prediction accuracy, or they only provide results on a single language. Some only predict primary stress markers (Black et al., 1998; Webster, 2004; Demberg et al., 2007), while those that predict both primary and secondary stress generally achieve lower accuracy (Bagshaw, 1998; Coleman, 2000; Pearson et al., 2000). In this paper, we formulate stress assignment as a sequence prediction problem. We divide each word into a sequence of substrings, and use these substrings as features for a Support Vector Machine (SVM) ranker. For a given sequence length, there is typically only a small number of stress patterns in use. The task of the SVM is to rank the true stress pattern above the small number of acceptable alternatives. This is the first system to predict stress within a powerful discriminative learning framework. By using a ranking approach, we enable the use of ar</context>
<context position="22455" citStr="Bagshaw (1998)" startWordPosition="3685" endWordPosition="3686">her than our baseline accuracy, which is between 60% and 70%. ORACLESYL, with longer substrings and hence sparser data, does not generally improve performance. This indicates that perfect syllabification is unnecessary for phonetic stress assignment. Our system is a major advance over the previous state-of-the-art in phonetic stress assignment. For predicting stressed/unstressed syllables in English, Black et al. (1998) obtained a persyllable accuracy of 94.6%. We achieve 96.2% per-word accuracy for predicting both primary and secondary stress. Others report lower numbers on English phonemes. Bagshaw (1998) obtained 65%-83.3% per-syllable accuracy using Church (1985)’s rule-based system. For predicting both primary and secondary stress, Coleman (2000) and Pearson et al. (2000) report 69.8% and 81.0% word accuracy, respectively. The performance on letters (Table 4) is also quite encouraging. SUBSTRING predicts primary stress with accuracy above 95% for English and German, and equal to 91% in Dutch. Performance is 1-3% lower on letters than on phonemes. On the other hand, the performance of ORACLESYL drops much less on letters. This indicates that most of SUBSTRING’s errors are caused by the split</context>
<context position="26978" citStr="Bagshaw, 1998" startWordPosition="4417" endWordPosition="4418"> Ney, 2002; Marchand and Damper, 2007; Jiampojamarn et al., 2007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same training, testing, and development data as was used in Section 4. For all experiments, we use the development set to determine at which iteration to stop training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generation. Phonemes can be generated without regard to stress, with stress assigned as a post-process (Bagshaw, 1998; Coleman, 2000). Both van den Bosch (1997) and Black et al. (1998) argue that stress should be predicted at the same time as phonemes. They expand the output set to distinguish between stressed and unstressed phonemes. Similarly, Demberg et al. (2007) produce phonemes, stress, and syllableboundaries within a single joint n-gram model. Pearson et al. (2000) generate phonemes and stress together by jointly optimizing a decision-tree phoneme-generator and a stress predictor based on stress pattern counts. In contrast, Webster (2004) first assigns stress to letters, creating an expanded input set</context>
</contexts>
<marker>Bagshaw, 1998</marker>
<rawString>Paul C. Bagshaw. 1998. Phonemic transcription by analogy in text-to-speech synthesis: Novel word pronunciation and lexicon compression. Computer Speech and Language, 12(2):119–142.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susan Bartlett</author>
<author>Grzegorz Kondrak</author>
<author>Colin Cherry</author>
</authors>
<title>Automatic syllabification with structured SVMs for letter-to-phoneme conversion.</title>
<date>2008</date>
<booktitle>In ACL08: HLT,</booktitle>
<pages>568--576</pages>
<contexts>
<context position="5642" citStr="Bartlett et al., 2008" startWordPosition="887" endWordPosition="890"> first and the third syllable are stressed, with the former receiving weaker emphasis than the latter. In this case, the initial syllable is said to carry a secondary stress. Although each word has only one primary stress, it may have any number of secondary stresses. Predicting the full stress pattern is therefore inherently more difficult than predicting the location of primary stress only. Our objective is to automatically assign primary and, where possible, secondary stress to out-ofvocabulary words. Stress is an attribute of syllables, but syllabification is a non-trivial task in itself (Bartlett et al., 2008). Rather than assuming correct syllabification of the input word, we instead follow Webster (2004) in placing the stress on the vowel which constitutes the nucleus of the stressed syllable. If the syllable boundaries are known, the mapping from the vowel to the corresponding syllable is straightforward. We investigate the assignment of stress to two related but different entities: the spoken word (represented by its phonetic transcription), and the written word (represented by its orthographic form). Although stress is a prosodic feature, assigning stress to written words (“stressed orthograph</context>
</contexts>
<marker>Bartlett, Kondrak, Cherry, 2008</marker>
<rawString>Susan Bartlett, Grzegorz Kondrak, and Colin Cherry. 2008. Automatic syllabification with structured SVMs for letter-to-phoneme conversion. In ACL08: HLT, pages 568–576.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maximilian Bisani</author>
<author>Hermann Ney</author>
</authors>
<title>Investigations on joint-multigram models for grapheme-tophoneme conversion. In</title>
<date>2002</date>
<booktitle>ICSLP,</booktitle>
<pages>105--108</pages>
<contexts>
<context position="26375" citStr="Bisani and Ney, 2002" startWordPosition="4317" endWordPosition="4320"> be integrated with L2P, and define the systems used in our experiments. Finally, we provide the results. 5.1 The L2P system We combine stress prediction with a state-of-theart L2P system (Jiampojamarn et al., 2008). Like our stress ranker, their system is a data-driven sequence predictor that is trained with supervised learning. The score for each output sequence is a weighted combination of features. The feature weights are trained using the Margin Infused Relaxed Algorithm (MIRA) (Crammer and Singer, 2003), a powerful online discriminative training framework. Like other recent L2P systems (Bisani and Ney, 2002; Marchand and Damper, 2007; Jiampojamarn et al., 2007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same training, testing, and development data as was used in Section 4. For all experiments, we use the development set to determine at which iteration to stop training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generation. Phonemes can be generated without regard to stress, with stress assigned as a post-process (Bagshaw, 1</context>
</contexts>
<marker>Bisani, Ney, 2002</marker>
<rawString>Maximilian Bisani and Hermann Ney. 2002. Investigations on joint-multigram models for grapheme-tophoneme conversion. In ICSLP, pages 105–108.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan W Black</author>
<author>Kevin Lenzo</author>
<author>Vincent Pagel</author>
</authors>
<title>Issues in building general letter to sound rules.</title>
<date>1998</date>
<booktitle>In The 3rd ESCA Workshop on Speech Synthesis,</booktitle>
<pages>77--80</pages>
<contexts>
<context position="2128" citStr="Black et al., 1998" startWordPosition="328" endWordPosition="331">he penultimate syllable in Polish. In other languages, such as English and Russian, any syllable in the word can be stressed. Correct stress placement is important in textto-speech systems because it affects the accuracy of human word recognition (Tagliapietra and Tabossi, 2005; Arciuli and Cupples, 2006). However, the issue has often been ignored in previous letter-to-phoneme (L2P) systems. The systems that do generate stress markers often do not report separate figures on stress prediction accuracy, or they only provide results on a single language. Some only predict primary stress markers (Black et al., 1998; Webster, 2004; Demberg et al., 2007), while those that predict both primary and secondary stress generally achieve lower accuracy (Bagshaw, 1998; Coleman, 2000; Pearson et al., 2000). In this paper, we formulate stress assignment as a sequence prediction problem. We divide each word into a sequence of substrings, and use these substrings as features for a Support Vector Machine (SVM) ranker. For a given sequence length, there is typically only a small number of stress patterns in use. The task of the SVM is to rank the true stress pattern above the small number of acceptable alternatives. Th</context>
<context position="4759" citStr="Black et al., 1998" startWordPosition="744" endWordPosition="747">stressed syllables are often those with low frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress prediction (Black et al., 1998; Pearson et al., 2000; Webster, 2004; Demberg et al., 2007). In many languages, only two levels of stress are distinguished: stressed and unstressed. However, some languages exhibit more than two levels of stress. For example, in the English word economic, the first and the third syllable are stressed, with the former receiving weaker emphasis than the latter. In this case, the initial syllable is said to carry a secondary stress. Although each word has only one primary stress, it may have any number of secondary stresses. Predicting the full stress pattern is therefore inherently more diffic</context>
<context position="22264" citStr="Black et al. (1998)" startWordPosition="3655" endWordPosition="3658">mary and secondary. primary stress in English, 97.1% in German, and 93.1% in Dutch. It also predicts both primary and secondary stress in English with high accuracy, 96.2%. Performance is much higher than our baseline accuracy, which is between 60% and 70%. ORACLESYL, with longer substrings and hence sparser data, does not generally improve performance. This indicates that perfect syllabification is unnecessary for phonetic stress assignment. Our system is a major advance over the previous state-of-the-art in phonetic stress assignment. For predicting stressed/unstressed syllables in English, Black et al. (1998) obtained a persyllable accuracy of 94.6%. We achieve 96.2% per-word accuracy for predicting both primary and secondary stress. Others report lower numbers on English phonemes. Bagshaw (1998) obtained 65%-83.3% per-syllable accuracy using Church (1985)’s rule-based system. For predicting both primary and secondary stress, Coleman (2000) and Pearson et al. (2000) report 69.8% and 81.0% word accuracy, respectively. The performance on letters (Table 4) is also quite encouraging. SUBSTRING predicts primary stress with accuracy above 95% for English and German, and equal to 91% in Dutch. Performanc</context>
<context position="27045" citStr="Black et al. (1998)" startWordPosition="4428" endWordPosition="4431">007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same training, testing, and development data as was used in Section 4. For all experiments, we use the development set to determine at which iteration to stop training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generation. Phonemes can be generated without regard to stress, with stress assigned as a post-process (Bagshaw, 1998; Coleman, 2000). Both van den Bosch (1997) and Black et al. (1998) argue that stress should be predicted at the same time as phonemes. They expand the output set to distinguish between stressed and unstressed phonemes. Similarly, Demberg et al. (2007) produce phonemes, stress, and syllableboundaries within a single joint n-gram model. Pearson et al. (2000) generate phonemes and stress together by jointly optimizing a decision-tree phoneme-generator and a stress predictor based on stress pattern counts. In contrast, Webster (2004) first assigns stress to letters, creating an expanded input set, and then predicts both phonemes and stress jointly. The system ma</context>
<context position="32561" citStr="Black et al. (1998)" startWordPosition="5302" endWordPosition="5305"> accuracy of Festival is much lower even than our JOINT approach, but the relative performance on the different languages is quite similar. A few papers report accuracy on the combined stress and phoneme prediction task. The most directly comparable work is van den Bosch (1997), which also predicts primary and secondary stress using English CELEX data. However, the reported word accuracy is only 62.1%. Three other papers report word accuracy on phonemes and stress, using different data sets. Pearson et al. (2000) report 58.5% word accuracy for predicting phonemes and primary/secondary stress. Black et al. (1998) report 74.6% word accuracy in English, while Webster (2004) reports 68.2% on English and 82.9% in German (all primary stress only). Finally, Demberg et al. (2007) report word accuracy on predicting phonemes, stress, and syllabification on German CELEX data. They achieve 86.3% word accuracy. 6 Conclusion We have presented a discriminative ranking approach to lexical stress prediction, which clearly outperforms previously developed systems. The approach is largely language-independent, applicable to both orthographic and phonetic representations, and flexible enough to handle multiple stress le</context>
</contexts>
<marker>Black, Lenzo, Pagel, 1998</marker>
<rawString>Alan W Black, Kevin Lenzo, and Vincent Pagel. 1998. Issues in building general letter to sound rules. In The 3rd ESCA Workshop on Speech Synthesis, pages 77–80.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noam Chomsky</author>
<author>Morris Halle</author>
</authors>
<title>The sound pattern of English.</title>
<date>1968</date>
<location>New York: Harper and Row.</location>
<contexts>
<context position="4282" citStr="Chomsky and Halle (1968)" startWordPosition="673" endWordPosition="676">ithm. In Section 4, we confirm the power of the discriminative approach with experiments on three languages. Section 5 describes how stress is integrated into L2P conversion. 118 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 118–126, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background and Task Definition There is a long history of research into the principles governing lexical stress placement. Zipf (1929) showed that stressed syllables are often those with low frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress prediction (Black et al., 1998; Pearson et al., 2000; Webster, 2004; Demberg et al., 2007). In many languages, only two levels of stress are distinguishe</context>
</contexts>
<marker>Chomsky, Halle, 1968</marker>
<rawString>Noam Chomsky and Morris Halle. 1968. The sound pattern of English. New York: Harper and Row.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth Church</author>
</authors>
<title>Stress assignment in letter to sound rules for speech synthesis.</title>
<date>1985</date>
<booktitle>In ACL,</booktitle>
<pages>246--253</pages>
<contexts>
<context position="4521" citStr="Church, 1985" startWordPosition="711" endWordPosition="712">the AFNLP, pages 118–126, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background and Task Definition There is a long history of research into the principles governing lexical stress placement. Zipf (1929) showed that stressed syllables are often those with low frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress prediction (Black et al., 1998; Pearson et al., 2000; Webster, 2004; Demberg et al., 2007). In many languages, only two levels of stress are distinguished: stressed and unstressed. However, some languages exhibit more than two levels of stress. For example, in the English word economic, the first and the third syllable are stressed, with the former receiving weaker emphasis than the latter</context>
<context position="22516" citStr="Church (1985)" startWordPosition="3692" endWordPosition="3693">ORACLESYL, with longer substrings and hence sparser data, does not generally improve performance. This indicates that perfect syllabification is unnecessary for phonetic stress assignment. Our system is a major advance over the previous state-of-the-art in phonetic stress assignment. For predicting stressed/unstressed syllables in English, Black et al. (1998) obtained a persyllable accuracy of 94.6%. We achieve 96.2% per-word accuracy for predicting both primary and secondary stress. Others report lower numbers on English phonemes. Bagshaw (1998) obtained 65%-83.3% per-syllable accuracy using Church (1985)’s rule-based system. For predicting both primary and secondary stress, Coleman (2000) and Pearson et al. (2000) report 69.8% and 81.0% word accuracy, respectively. The performance on letters (Table 4) is also quite encouraging. SUBSTRING predicts primary stress with accuracy above 95% for English and German, and equal to 91% in Dutch. Performance is 1-3% lower on letters than on phonemes. On the other hand, the performance of ORACLESYL drops much less on letters. This indicates that most of SUBSTRING’s errors are caused by the splitting method. Letter vowels may or may not represent spoken vo</context>
</contexts>
<marker>Church, 1985</marker>
<rawString>Kenneth Church. 1985. Stress assignment in letter to sound rules for speech synthesis. In ACL, pages 246–253.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cynthia G Clopper</author>
</authors>
<title>Frequency of stress patterns in English: A computational analysis. IULC Working Papers Online.</title>
<date>2002</date>
<contexts>
<context position="12006" citStr="Clopper (2002)" startWordPosition="1947" endWordPosition="1948">ing words, W. That is, we first extract the letter/phoneme portion, w, and use it to create the substrings, s. We then create the stress pattern, t, using W’s stress markers. Given the training pairs, any sequence predictor can be used, for example a Conditional Random Field (CRF) (Lafferty et al., 2001) or a structured perceptron (Collins, 2002). However, we can take advantage of a unique property of our problem to use a more expressive framework than is typically used in sequence prediction. The key observation is that the output space of possible stress patterns is actually fairly limited. Clopper (2002) shows that people have strong preferences for particular sequences of stress, and this is confirmed by our training data (Section 4.1). In English, for example, we find that for each set of spoken words with the same number of syllables, there are no more than fifteen different stress patterns. In total, among 55K English training examples, there are only 70 different stress patterns. In both German and Dutch there are only about 50 patterns in 250K examples.1 Therefore, for a particular input sequence, we can safely limit our consideration to only the small set of output patterns of the same</context>
</contexts>
<marker>Clopper, 2002</marker>
<rawString>Cynthia G. Clopper. 2002. Frequency of stress patterns in English: A computational analysis. IULC Working Papers Online.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Coleman</author>
</authors>
<title>Improved prediction of stress in out-of-vocabulary words.</title>
<date>2000</date>
<booktitle>In IEEE Seminar on the State of the Art in Speech Synthesis.</booktitle>
<contexts>
<context position="2289" citStr="Coleman, 2000" startWordPosition="354" endWordPosition="355"> textto-speech systems because it affects the accuracy of human word recognition (Tagliapietra and Tabossi, 2005; Arciuli and Cupples, 2006). However, the issue has often been ignored in previous letter-to-phoneme (L2P) systems. The systems that do generate stress markers often do not report separate figures on stress prediction accuracy, or they only provide results on a single language. Some only predict primary stress markers (Black et al., 1998; Webster, 2004; Demberg et al., 2007), while those that predict both primary and secondary stress generally achieve lower accuracy (Bagshaw, 1998; Coleman, 2000; Pearson et al., 2000). In this paper, we formulate stress assignment as a sequence prediction problem. We divide each word into a sequence of substrings, and use these substrings as features for a Support Vector Machine (SVM) ranker. For a given sequence length, there is typically only a small number of stress patterns in use. The task of the SVM is to rank the true stress pattern above the small number of acceptable alternatives. This is the first system to predict stress within a powerful discriminative learning framework. By using a ranking approach, we enable the use of arbitrary feature</context>
<context position="7382" citStr="Coleman, 2000" startWordPosition="1159" endWordPosition="1160"> the L2P system is able to implicitly leverage morphological information beyond the local context. Indicating stress on letters can also be helpful to humans, especially second-language learners. In some languages, such as Spanish, orthographic markers are obligatory in words with irregular stress. The location of stress is often explicitly marked in textbooks for students of Russian. In both languages, the standard method of indicating stress is to place an acute accent above the vowel bearing primary stress, e.g., adi´os. The secondary stress in English can be indicated with a grave accent (Coleman, 2000), e.g., pr`ec´ede. In summary, our task is to assign primary and secondary stress markers to stress-bearing vowels in an input word. The input word may be either phonemes or letters. If a stressed vowel is represented by more than one letter, we adopt the convention of marking the first vowel of the vowel sequence, e.g., m´eeting. In this way, we are able to focus on the task of stress prediction, without having to determine at the same time the exact syllable boundaries, or whether a vowel letter sequence represents one or more spoken vowels (e.g., beating vs. be-at-i-fy). 3 Automatic Stress </context>
<context position="22602" citStr="Coleman (2000)" startWordPosition="3703" endWordPosition="3704">performance. This indicates that perfect syllabification is unnecessary for phonetic stress assignment. Our system is a major advance over the previous state-of-the-art in phonetic stress assignment. For predicting stressed/unstressed syllables in English, Black et al. (1998) obtained a persyllable accuracy of 94.6%. We achieve 96.2% per-word accuracy for predicting both primary and secondary stress. Others report lower numbers on English phonemes. Bagshaw (1998) obtained 65%-83.3% per-syllable accuracy using Church (1985)’s rule-based system. For predicting both primary and secondary stress, Coleman (2000) and Pearson et al. (2000) report 69.8% and 81.0% word accuracy, respectively. The performance on letters (Table 4) is also quite encouraging. SUBSTRING predicts primary stress with accuracy above 95% for English and German, and equal to 91% in Dutch. Performance is 1-3% lower on letters than on phonemes. On the other hand, the performance of ORACLESYL drops much less on letters. This indicates that most of SUBSTRING’s errors are caused by the splitting method. Letter vowels may or may not represent spoken vowels. By creating a substring for every vowel letter we may produce an incorrect numbe</context>
<context position="26994" citStr="Coleman, 2000" startWordPosition="4419" endWordPosition="4421">chand and Damper, 2007; Jiampojamarn et al., 2007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same training, testing, and development data as was used in Section 4. For all experiments, we use the development set to determine at which iteration to stop training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generation. Phonemes can be generated without regard to stress, with stress assigned as a post-process (Bagshaw, 1998; Coleman, 2000). Both van den Bosch (1997) and Black et al. (1998) argue that stress should be predicted at the same time as phonemes. They expand the output set to distinguish between stressed and unstressed phonemes. Similarly, Demberg et al. (2007) produce phonemes, stress, and syllableboundaries within a single joint n-gram model. Pearson et al. (2000) generate phonemes and stress together by jointly optimizing a decision-tree phoneme-generator and a stress predictor based on stress pattern counts. In contrast, Webster (2004) first assigns stress to letters, creating an expanded input set, and then predi</context>
</contexts>
<marker>Coleman, 2000</marker>
<rawString>John Coleman. 2000. Improved prediction of stress in out-of-vocabulary words. In IEEE Seminar on the State of the Art in Speech Synthesis.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
<author>Terry Koo</author>
</authors>
<title>Discriminative reranking for natural language parsing.</title>
<date>2005</date>
<journal>Computational Linguistics,</journal>
<volume>31</volume>
<issue>1</issue>
<contexts>
<context position="13425" citStr="Collins and Koo (2005)" startWordPosition="2176" endWordPosition="2179">hestscoring one. This enables a more expressive representation. We can define arbitrary features over the entire output sequence. In a typical CRF or structured perceptron approach, only output features that can be computed incrementally during search are used (e.g. Markov transition features that permit Viterbi search). Since search is not 1See (Dou, 2009) for more details. 120 needed here, we can exploit longer-range features. Choosing the highest-scoring output from a fixed set is a ranking problem, and we provide the full ranking formulation below. Unlike previous ranking approaches (e.g. Collins and Koo (2005)), we do not rely on a generative model to produce a list of candidates. Candidates are chosen in advance from observed training patterns. 3.2.1 Ranking Formulation For a substring sequence, s, of length N, our task is to select the correct output pattern from the set of all length-N patterns observed in our training data, a set we denote as TN. We score each possible input-output combination using a linear model. Each substring sequence and possible output pattern, (s, t), is represented with a set of features, Φ(s, t). The score for a particular (s, t) combination is a weighted sum of these </context>
</contexts>
<marker>Collins, Koo, 2005</marker>
<rawString>Michael Collins and Terry Koo. 2005. Discriminative reranking for natural language parsing. Computational Linguistics, 31(1):25–70.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
</authors>
<title>Discriminative training methods for Hidden Markov Models: Theory and experiments with perceptron algorithms.</title>
<date>2002</date>
<booktitle>In EMNLP,</booktitle>
<pages>1--8</pages>
<contexts>
<context position="11740" citStr="Collins, 2002" startWordPosition="1904" endWordPosition="1905">put sequence the stress pattern for a word. Table 1 gives examples of words, substrings, and stress patterns. We use supervised learning to train a system to predict the stress pattern. We generate training (s, t) pairs in the obvious way from our stressmarked training words, W. That is, we first extract the letter/phoneme portion, w, and use it to create the substrings, s. We then create the stress pattern, t, using W’s stress markers. Given the training pairs, any sequence predictor can be used, for example a Conditional Random Field (CRF) (Lafferty et al., 2001) or a structured perceptron (Collins, 2002). However, we can take advantage of a unique property of our problem to use a more expressive framework than is typically used in sequence prediction. The key observation is that the output space of possible stress patterns is actually fairly limited. Clopper (2002) shows that people have strong preferences for particular sequences of stress, and this is confirmed by our training data (Section 4.1). In English, for example, we find that for each set of spoken words with the same number of syllables, there are no more than fifteen different stress patterns. In total, among 55K English training </context>
</contexts>
<marker>Collins, 2002</marker>
<rawString>Michael Collins. 2002. Discriminative training methods for Hidden Markov Models: Theory and experiments with perceptron algorithms. In EMNLP, pages 1–8.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Koby Crammer</author>
<author>Yoram Singer</author>
</authors>
<title>Ultraconservative online algorithms for multiclass problems.</title>
<date>2003</date>
<journal>Journal ofMachine Learning Research,</journal>
<pages>3--951</pages>
<contexts>
<context position="26269" citStr="Crammer and Singer, 2003" startWordPosition="4302" endWordPosition="4305">em that we use for letter-to-phoneme (L2P) conversion. We then discuss the different ways stress prediction can be integrated with L2P, and define the systems used in our experiments. Finally, we provide the results. 5.1 The L2P system We combine stress prediction with a state-of-theart L2P system (Jiampojamarn et al., 2008). Like our stress ranker, their system is a data-driven sequence predictor that is trained with supervised learning. The score for each output sequence is a weighted combination of features. The feature weights are trained using the Margin Infused Relaxed Algorithm (MIRA) (Crammer and Singer, 2003), a powerful online discriminative training framework. Like other recent L2P systems (Bisani and Ney, 2002; Marchand and Damper, 2007; Jiampojamarn et al., 2007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same training, testing, and development data as was used in Section 4. For all experiments, we use the development set to determine at which iteration to stop training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generati</context>
</contexts>
<marker>Crammer, Singer, 2003</marker>
<rawString>Koby Crammer and Yoram Singer. 2003. Ultraconservative online algorithms for multiclass problems. Journal ofMachine Learning Research, 3:951–991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vera Demberg</author>
<author>Helmut Schmid</author>
<author>Gregor M¨ohler</author>
</authors>
<title>Phonological constraints and morphological preprocessing for grapheme-to-phoneme conversion. In</title>
<date>2007</date>
<booktitle>ACL,</booktitle>
<pages>96--103</pages>
<marker>Demberg, Schmid, M¨ohler, 2007</marker>
<rawString>Vera Demberg, Helmut Schmid, and Gregor M¨ohler. 2007. Phonological constraints and morphological preprocessing for grapheme-to-phoneme conversion. In ACL, pages 96–103.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Qing Dou</author>
</authors>
<title>An SVM ranking approach to stress assignment. Master’s thesis,</title>
<date>2009</date>
<institution>University of Alberta.</institution>
<contexts>
<context position="13162" citStr="Dou, 2009" startWordPosition="2138" endWordPosition="2139">n to only the small set of output patterns of the same length. Thus, unlike typical sequence predictors, we do not have to search for the highest-scoring output according to our model. We can enumerate the full set of outputs and simply choose the highestscoring one. This enables a more expressive representation. We can define arbitrary features over the entire output sequence. In a typical CRF or structured perceptron approach, only output features that can be computed incrementally during search are used (e.g. Markov transition features that permit Viterbi search). Since search is not 1See (Dou, 2009) for more details. 120 needed here, we can exploit longer-range features. Choosing the highest-scoring output from a fixed set is a ranking problem, and we provide the full ranking formulation below. Unlike previous ranking approaches (e.g. Collins and Koo (2005)), we do not rely on a generative model to produce a list of candidates. Candidates are chosen in advance from observed training patterns. 3.2.1 Ranking Formulation For a substring sequence, s, of length N, our task is to select the correct output pattern from the set of all length-N patterns observed in our training data, a set we den</context>
</contexts>
<marker>Dou, 2009</marker>
<rawString>Qing Dou. 2009. An SVM ranking approach to stress assignment. Master’s thesis, University of Alberta.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth Dwyer</author>
<author>Grzegorz Kondrak</author>
</authors>
<title>Reducing the annotation effort for letter-to-phoneme conversion.</title>
<date>2009</date>
<booktitle>In ACL-IJCNLP.</booktitle>
<contexts>
<context position="19278" citStr="Dwyer and Kondrak, 2009" startWordPosition="3181" endWordPosition="3184">ntains around 55K words. In CELEX, stress is labeled on syllables in the phonetic form of the words. Since our objective is to assign stress markers to vowels (as described in Section 2) we automatically map the stress markers from the stressed syllables in the phonetic forms onto phonemes and letters representing vowels. For phonemes, the process is straightforward: we move the stress marker from the beginning of a syllable to the phoneme which constitutes the nucleus of the syllable. For letters, we map the stress from the vowel phoneme onto the orthographic forms using the ALINE algorithm (Dwyer and Kondrak, 2009). The stress marker is placed on the first letter within the syllable that represents a vowel sound.3 3Our stand-off stress annotations for English, German, and Dutch CELEX orthographic data can be downloaded at: http://www.cs.ualberta.ca/˜kondrak/celex.html. System Eng Ger Dut P+S P P P SUBSTRING 96.2 98.0 97.1 93.1 ORACLESYL 95.4 96.4 97.1 93.2 TOPPATTERN 66.8 68.9 64.1 60.8 Table 3: Stress prediction word accuracy (%) on phonemes for English, German, and Dutch. P: predicting primary stress only. P+S: primary and secondary. CELEX also provides secondary stress annotation for English. We ther</context>
</contexts>
<marker>Dwyer, Kondrak, 2009</marker>
<rawString>Kenneth Dwyer and Grzegorz Kondrak. 2009. Reducing the annotation effort for letter-to-phoneme conversion. In ACL-IJCNLP.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Erik C Fudge</author>
</authors>
<title>English word-stress. London: Allen and Unwin.</title>
<date>1984</date>
<contexts>
<context position="4507" citStr="Fudge, 1984" startWordPosition="709" endWordPosition="710">th IJCNLP of the AFNLP, pages 118–126, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background and Task Definition There is a long history of research into the principles governing lexical stress placement. Zipf (1929) showed that stressed syllables are often those with low frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress prediction (Black et al., 1998; Pearson et al., 2000; Webster, 2004; Demberg et al., 2007). In many languages, only two levels of stress are distinguished: stressed and unstressed. However, some languages exhibit more than two levels of stress. For example, in the English word economic, the first and the third syllable are stressed, with the former receiving weaker emphasis t</context>
</contexts>
<marker>Fudge, 1984</marker>
<rawString>Erik C. Fudge. 1984. English word-stress. London: Allen and Unwin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sittichai Jiampojamarn</author>
<author>Grzegorz Kondrak</author>
<author>Tarek Sherif</author>
</authors>
<title>Applying many-to-many alignments and Hidden Markov Models to letter-to-phoneme conversion. In NAACL-HLT</title>
<date>2007</date>
<pages>372--379</pages>
<contexts>
<context position="26430" citStr="Jiampojamarn et al., 2007" startWordPosition="4325" endWordPosition="4329">sed in our experiments. Finally, we provide the results. 5.1 The L2P system We combine stress prediction with a state-of-theart L2P system (Jiampojamarn et al., 2008). Like our stress ranker, their system is a data-driven sequence predictor that is trained with supervised learning. The score for each output sequence is a weighted combination of features. The feature weights are trained using the Margin Infused Relaxed Algorithm (MIRA) (Crammer and Singer, 2003), a powerful online discriminative training framework. Like other recent L2P systems (Bisani and Ney, 2002; Marchand and Damper, 2007; Jiampojamarn et al., 2007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same training, testing, and development data as was used in Section 4. For all experiments, we use the development set to determine at which iteration to stop training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generation. Phonemes can be generated without regard to stress, with stress assigned as a post-process (Bagshaw, 1998; Coleman, 2000). Both van den Bosch (1997) and Blac</context>
</contexts>
<marker>Jiampojamarn, Kondrak, Sherif, 2007</marker>
<rawString>Sittichai Jiampojamarn, Grzegorz Kondrak, and Tarek Sherif. 2007. Applying many-to-many alignments and Hidden Markov Models to letter-to-phoneme conversion. In NAACL-HLT 2007, pages 372–379.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sittichai Jiampojamarn</author>
<author>Colin Cherry</author>
<author>Grzegorz Kondrak</author>
</authors>
<title>Joint processing and discriminative training for letter-to-phoneme conversion.</title>
<date>2008</date>
<booktitle>In ACL08: HLT,</booktitle>
<pages>905--913</pages>
<contexts>
<context position="3420" citStr="Jiampojamarn et al., 2008" startWordPosition="534" endWordPosition="537">inative learning framework. By using a ranking approach, we enable the use of arbitrary features over the entire (input) sequence and (output) stress pattern. We show that the addition of a feature for the entire output sequence improves prediction accuracy. Our experiments on English, German, and Dutch demonstrate that our ranking approach substantially outperforms previous systems. The SVM ranker achieves exceptional 96.2% word accuracy on the challenging task of predicting the full stress pattern in English. Moreover, when combining our stress predictions with a state-ofthe-art L2P system (Jiampojamarn et al., 2008), we set a new standard for the combined prediction of phonemes and stress. The paper is organized as follows. Section 2 provides background on lexical stress and a task definition. Section 3 presents our automatic stress prediction algorithm. In Section 4, we confirm the power of the discriminative approach with experiments on three languages. Section 5 describes how stress is integrated into L2P conversion. 118 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 118–126, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background and Task Defini</context>
<context position="25970" citStr="Jiampojamarn et al., 2008" startWordPosition="4255" endWordPosition="4258">ible training sets (255K examples). None of the curves are levelling off; performance grows log-linearly across the full range. 5 Lexical stress and L2P conversion In this section, we evaluate various methods of combining stress prediction with phoneme generation. We first describe the specific system that we use for letter-to-phoneme (L2P) conversion. We then discuss the different ways stress prediction can be integrated with L2P, and define the systems used in our experiments. Finally, we provide the results. 5.1 The L2P system We combine stress prediction with a state-of-theart L2P system (Jiampojamarn et al., 2008). Like our stress ranker, their system is a data-driven sequence predictor that is trained with supervised learning. The score for each output sequence is a weighted combination of features. The feature weights are trained using the Margin Infused Relaxed Algorithm (MIRA) (Crammer and Singer, 2003), a powerful online discriminative training framework. Like other recent L2P systems (Bisani and Ney, 2002; Marchand and Damper, 2007; Jiampojamarn et al., 2007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same train</context>
</contexts>
<marker>Jiampojamarn, Cherry, Kondrak, 2008</marker>
<rawString>Sittichai Jiampojamarn, Colin Cherry, and Grzegorz Kondrak. 2008. Joint processing and discriminative training for letter-to-phoneme conversion. In ACL08: HLT, pages 905–913.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thorsten Joachims</author>
</authors>
<title>Making large-scale Support Vector Machine learning practical.</title>
<date>1999</date>
<booktitle>Advances in Kernel Methods: Support Vector Machines,</booktitle>
<pages>169--184</pages>
<editor>In B. Sch¨olkopf and C. Burges, editors,</editor>
<contexts>
<context position="15158" citStr="Joachims, 1999" startWordPosition="2478" endWordPosition="2479">ally, each training pair is matched with a set of automatically-created negative examples. Each negative has an incorrect, but plausible, stress pattern, u. We adopt a Support Vector Machine (SVM) solution to these ranking constraints as described by Joachims (2002). The learner finds the weights that ensure a maximum (soft) margin separation between the correct scores and the competitors. We use an SVM because it has been successful in similar settings (learning with thousands of sparse features) for both ranking and classification tasks, and because an efficient implementation is available (Joachims, 1999). At test time we simply score each possible output pattern using the learned weights. That is, for an input sequence s of length N, we compute A · Φ(s, t) for all t E TN, and we take the highest scoring t as our output. Note that because we only Substring si, ti si, i, ti Context si−1, ti si−1si, ti si+1, ti sisi+1, ti si−1sisi+1, ti Stress Pattern t1t2 ... tN Table 2: Feature Template consider previously-observed output patterns, it is impossible for our system to produce a nonsensical result, such as having two primary stresses in one word. Standard search-based sequence predictors need to </context>
<context position="20877" citStr="Joachims, 1999" startWordPosition="3433" endWordPosition="3434">. 2) ORACLESYL splits the input word into syllables according to the CELEX gold-standard, before applying SVM ranking. The output pattern is evaluated directly against the goldstandard, without pattern-to-vowel mapping. 3) TOPPATTERN is our baseline system. It uses the vowel-based splitting method to produce a substring sequence of length N. Then it simply chooses the most common stress pattern among all the stress patterns of length N. SUBSTRING and ORACLESYL use scores produced by an SVM ranker trained on the training data. We employ the ranking mode of the popular learning package SVM&amp;quot;ght (Joachims, 1999). In each case, we learn a linear kernel ranker on the training set stress patterns and tune the parameter that trades-off training error and margin on the development set. We evaluate the systems using word accuracy: the percent of words for which the output form of the word, ¯w, matches the gold standard. 4.3 Results Table 3 provides results on English, German, and Dutch phonemes. Overall, the performance of our automatic stress predictor, SUBSTRING, is excellent. It achieves 98.0% accuracy for predicting 122 System Eng Ger Dut P+S P P P SUBSTRING 93.5 95.1 95.9 91.0 ORACLESYL 94.6 96.0 96.6</context>
</contexts>
<marker>Joachims, 1999</marker>
<rawString>Thorsten Joachims. 1999. Making large-scale Support Vector Machine learning practical. In B. Sch¨olkopf and C. Burges, editors, Advances in Kernel Methods: Support Vector Machines, pages 169–184. MIT-Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thorsten Joachims</author>
</authors>
<title>Optimizing search engines using clickthrough data. In</title>
<date>2002</date>
<booktitle>KDD,</booktitle>
<pages>133--142</pages>
<contexts>
<context position="14809" citStr="Joachims (2002)" startWordPosition="2425" endWordPosition="2426">ining time, the weights, A, are chosen such that for each sj, the correct output pattern receives a higher score than other patterns of the same length: Vu E TN, u =� tj, A · Φ(sj, tj) &gt; A · Φ(sj, u) (1) The set of constraints generated by Equation 1 are called rank constraints. They are created separately for every (sj, tj) training pair. Essentially, each training pair is matched with a set of automatically-created negative examples. Each negative has an incorrect, but plausible, stress pattern, u. We adopt a Support Vector Machine (SVM) solution to these ranking constraints as described by Joachims (2002). The learner finds the weights that ensure a maximum (soft) margin separation between the correct scores and the competitors. We use an SVM because it has been successful in similar settings (learning with thousands of sparse features) for both ranking and classification tasks, and because an efficient implementation is available (Joachims, 1999). At test time we simply score each possible output pattern using the learned weights. That is, for an input sequence s of length N, we compute A · Φ(s, t) for all t E TN, and we take the highest scoring t as our output. Note that because we only Subs</context>
</contexts>
<marker>Joachims, 2002</marker>
<rawString>Thorsten Joachims. 2002. Optimizing search engines using clickthrough data. In KDD, pages 133–142.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John D Lafferty</author>
<author>Andrew McCallum</author>
<author>Fernando C N Pereira</author>
</authors>
<title>Conditional Random Fields: Probabilistic models for segmenting and labeling sequence data. In</title>
<date>2001</date>
<booktitle>ICML,</booktitle>
<pages>282--289</pages>
<contexts>
<context position="11697" citStr="Lafferty et al., 2001" startWordPosition="1895" endWordPosition="1898">ss, and ‘0’ to indicate no stress. We call this output sequence the stress pattern for a word. Table 1 gives examples of words, substrings, and stress patterns. We use supervised learning to train a system to predict the stress pattern. We generate training (s, t) pairs in the obvious way from our stressmarked training words, W. That is, we first extract the letter/phoneme portion, w, and use it to create the substrings, s. We then create the stress pattern, t, using W’s stress markers. Given the training pairs, any sequence predictor can be used, for example a Conditional Random Field (CRF) (Lafferty et al., 2001) or a structured perceptron (Collins, 2002). However, we can take advantage of a unique property of our problem to use a more expressive framework than is typically used in sequence prediction. The key observation is that the output space of possible stress patterns is actually fairly limited. Clopper (2002) shows that people have strong preferences for particular sequences of stress, and this is confirmed by our training data (Section 4.1). In English, for example, we find that for each set of spoken words with the same number of syllables, there are no more than fifteen different stress patt</context>
</contexts>
<marker>Lafferty, McCallum, Pereira, 2001</marker>
<rawString>John D. Lafferty, Andrew McCallum, and Fernando C. N. Pereira. 2001. Conditional Random Fields: Probabilistic models for segmenting and labeling sequence data. In ICML, pages 282–289.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yannick Marchand</author>
<author>Robert I Damper</author>
</authors>
<title>Can syllabification improve pronunciation by analogy of English?</title>
<date>2007</date>
<journal>Natural Language Engineering,</journal>
<volume>13</volume>
<issue>1</issue>
<pages>24</pages>
<contexts>
<context position="26402" citStr="Marchand and Damper, 2007" startWordPosition="4321" endWordPosition="4324">P, and define the systems used in our experiments. Finally, we provide the results. 5.1 The L2P system We combine stress prediction with a state-of-theart L2P system (Jiampojamarn et al., 2008). Like our stress ranker, their system is a data-driven sequence predictor that is trained with supervised learning. The score for each output sequence is a weighted combination of features. The feature weights are trained using the Margin Infused Relaxed Algorithm (MIRA) (Crammer and Singer, 2003), a powerful online discriminative training framework. Like other recent L2P systems (Bisani and Ney, 2002; Marchand and Damper, 2007; Jiampojamarn et al., 2007), this approach does not generate stress, nor does it consider stress when it generates phonemes. For L2P experiments, we use the same training, testing, and development data as was used in Section 4. For all experiments, we use the development set to determine at which iteration to stop training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generation. Phonemes can be generated without regard to stress, with stress assigned as a post-process (Bagshaw, 1998; Coleman, 2000). Both v</context>
</contexts>
<marker>Marchand, Damper, 2007</marker>
<rawString>Yannick Marchand and Robert I. Damper. 2007. Can syllabification improve pronunciation by analogy of English? Natural Language Engineering, 13(1):1– 24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steve Pearson</author>
<author>Roland Kuhn</author>
<author>Steven Fincke</author>
<author>Nick Kibre</author>
</authors>
<title>Automatic methods for lexical stress assignment and syllabification.</title>
<date>2000</date>
<booktitle>In ICSLP,</booktitle>
<pages>423--426</pages>
<contexts>
<context position="2312" citStr="Pearson et al., 2000" startWordPosition="356" endWordPosition="359">systems because it affects the accuracy of human word recognition (Tagliapietra and Tabossi, 2005; Arciuli and Cupples, 2006). However, the issue has often been ignored in previous letter-to-phoneme (L2P) systems. The systems that do generate stress markers often do not report separate figures on stress prediction accuracy, or they only provide results on a single language. Some only predict primary stress markers (Black et al., 1998; Webster, 2004; Demberg et al., 2007), while those that predict both primary and secondary stress generally achieve lower accuracy (Bagshaw, 1998; Coleman, 2000; Pearson et al., 2000). In this paper, we formulate stress assignment as a sequence prediction problem. We divide each word into a sequence of substrings, and use these substrings as features for a Support Vector Machine (SVM) ranker. For a given sequence length, there is typically only a small number of stress patterns in use. The task of the SVM is to rank the true stress pattern above the small number of acceptable alternatives. This is the first system to predict stress within a powerful discriminative learning framework. By using a ranking approach, we enable the use of arbitrary features over the entire (inpu</context>
<context position="4781" citStr="Pearson et al., 2000" startWordPosition="748" endWordPosition="751">re often those with low frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress prediction (Black et al., 1998; Pearson et al., 2000; Webster, 2004; Demberg et al., 2007). In many languages, only two levels of stress are distinguished: stressed and unstressed. However, some languages exhibit more than two levels of stress. For example, in the English word economic, the first and the third syllable are stressed, with the former receiving weaker emphasis than the latter. In this case, the initial syllable is said to carry a secondary stress. Although each word has only one primary stress, it may have any number of secondary stresses. Predicting the full stress pattern is therefore inherently more difficult than predicting th</context>
<context position="22628" citStr="Pearson et al. (2000)" startWordPosition="3706" endWordPosition="3709">ndicates that perfect syllabification is unnecessary for phonetic stress assignment. Our system is a major advance over the previous state-of-the-art in phonetic stress assignment. For predicting stressed/unstressed syllables in English, Black et al. (1998) obtained a persyllable accuracy of 94.6%. We achieve 96.2% per-word accuracy for predicting both primary and secondary stress. Others report lower numbers on English phonemes. Bagshaw (1998) obtained 65%-83.3% per-syllable accuracy using Church (1985)’s rule-based system. For predicting both primary and secondary stress, Coleman (2000) and Pearson et al. (2000) report 69.8% and 81.0% word accuracy, respectively. The performance on letters (Table 4) is also quite encouraging. SUBSTRING predicts primary stress with accuracy above 95% for English and German, and equal to 91% in Dutch. Performance is 1-3% lower on letters than on phonemes. On the other hand, the performance of ORACLESYL drops much less on letters. This indicates that most of SUBSTRING’s errors are caused by the splitting method. Letter vowels may or may not represent spoken vowels. By creating a substring for every vowel letter we may produce an incorrect number of syllables. Our patter</context>
<context position="27337" citStr="Pearson et al. (2000)" startWordPosition="4475" endWordPosition="4478">op training in the online algorithm. 5.2 Combining stress and phoneme generation Various methods have been used for combining stress and phoneme generation. Phonemes can be generated without regard to stress, with stress assigned as a post-process (Bagshaw, 1998; Coleman, 2000). Both van den Bosch (1997) and Black et al. (1998) argue that stress should be predicted at the same time as phonemes. They expand the output set to distinguish between stressed and unstressed phonemes. Similarly, Demberg et al. (2007) produce phonemes, stress, and syllableboundaries within a single joint n-gram model. Pearson et al. (2000) generate phonemes and stress together by jointly optimizing a decision-tree phoneme-generator and a stress predictor based on stress pattern counts. In contrast, Webster (2004) first assigns stress to letters, creating an expanded input set, and then predicts both phonemes and stress jointly. The system marks stress on letter vowels by determining the correspondence between affixes and stress in written words. Following the above approaches, we can expand the input or output symbols of our L2P system to include stress. However, since both decision tree systems and our L2P predictor utilize on</context>
<context position="32460" citStr="Pearson et al. (2000)" startWordPosition="5288" endWordPosition="5291"> task, and each of our globally-informed systems represents a major improvement over previous work. The accuracy of Festival is much lower even than our JOINT approach, but the relative performance on the different languages is quite similar. A few papers report accuracy on the combined stress and phoneme prediction task. The most directly comparable work is van den Bosch (1997), which also predicts primary and secondary stress using English CELEX data. However, the reported word accuracy is only 62.1%. Three other papers report word accuracy on phonemes and stress, using different data sets. Pearson et al. (2000) report 58.5% word accuracy for predicting phonemes and primary/secondary stress. Black et al. (1998) report 74.6% word accuracy in English, while Webster (2004) reports 68.2% on English and 82.9% in German (all primary stress only). Finally, Demberg et al. (2007) report word accuracy on predicting phonemes, stress, and syllabification on German CELEX data. They achieve 86.3% word accuracy. 6 Conclusion We have presented a discriminative ranking approach to lexical stress prediction, which clearly outperforms previously developed systems. The approach is largely language-independent, applicabl</context>
</contexts>
<marker>Pearson, Kuhn, Fincke, Kibre, 2000</marker>
<rawString>Steve Pearson, Roland Kuhn, Steven Fincke, and Nick Kibre. 2000. Automatic methods for lexical stress assignment and syllabification. In ICSLP, pages 423–426.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Roth</author>
<author>Wen-tau Yih</author>
</authors>
<title>Integer linear programming inference for conditional random fields.</title>
<date>2005</date>
<booktitle>In ICML,</booktitle>
<pages>736--743</pages>
<contexts>
<context position="15855" citStr="Roth and Yih, 2005" startWordPosition="2601" endWordPosition="2604">weights. That is, for an input sequence s of length N, we compute A · Φ(s, t) for all t E TN, and we take the highest scoring t as our output. Note that because we only Substring si, ti si, i, ti Context si−1, ti si−1si, ti si+1, ti sisi+1, ti si−1sisi+1, ti Stress Pattern t1t2 ... tN Table 2: Feature Template consider previously-observed output patterns, it is impossible for our system to produce a nonsensical result, such as having two primary stresses in one word. Standard search-based sequence predictors need to be specially augmented with hard constraints in order to prevent such output (Roth and Yih, 2005). 3.2.2 Features The power of our ranker to identify the correct stress pattern depends on how expressive our features are. Table 2 shows the feature templates used to create the features Φ(s, t) for our ranker. We use binary features to indicate whether each combination occurs in the current (s,t) pair. For example, if a substring tion is unstressed in a (s, t) pair, the Substring feature {si, ti = tion,0} will be true.2 In English, often the penultimate syllable is stressed if the final syllable is tion. We can capture such a regularity with the Context feature si+1, ti. If the following syl</context>
</contexts>
<marker>Roth, Yih, 2005</marker>
<rawString>Dan Roth and Wen-tau Yih. 2005. Integer linear programming inference for conditional random fields. In ICML, pages 736–743.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lara Tagliapietra</author>
<author>Patrizia Tabossi</author>
</authors>
<title>Lexical stress effects in Italian spoken word recognition.</title>
<date>2005</date>
<booktitle>In The XXVII Annual Conference of the Cognitive Science Society,</booktitle>
<pages>2140--2144</pages>
<contexts>
<context position="1788" citStr="Tagliapietra and Tabossi, 2005" startWordPosition="269" endWordPosition="273"> stress. 1 Introduction In many languages, certain syllables in words are phonetically more prominent in terms of duration, pitch, and loudness. This phenomenon is referred to as lexical stress. In some languages, the location of stress is entirely predictable. For example, lexical stress regularly falls on the initial syllable in Hungarian, and on the penultimate syllable in Polish. In other languages, such as English and Russian, any syllable in the word can be stressed. Correct stress placement is important in textto-speech systems because it affects the accuracy of human word recognition (Tagliapietra and Tabossi, 2005; Arciuli and Cupples, 2006). However, the issue has often been ignored in previous letter-to-phoneme (L2P) systems. The systems that do generate stress markers often do not report separate figures on stress prediction accuracy, or they only provide results on a single language. Some only predict primary stress markers (Black et al., 1998; Webster, 2004; Demberg et al., 2007), while those that predict both primary and secondary stress generally achieve lower accuracy (Bagshaw, 1998; Coleman, 2000; Pearson et al., 2000). In this paper, we formulate stress assignment as a sequence prediction pro</context>
</contexts>
<marker>Tagliapietra, Tabossi, 2005</marker>
<rawString>Lara Tagliapietra and Patrizia Tabossi. 2005. Lexical stress effects in Italian spoken word recognition. In The XXVII Annual Conference of the Cognitive Science Society, pages 2140–2144.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Antal van den Bosch</author>
</authors>
<title>Learning to pronounce written words: A study in inductive language learning.</title>
<date>1997</date>
<tech>Ph.D. thesis,</tech>
<institution>Universiteit Maastricht.</institution>
<marker>van den Bosch, 1997</marker>
<rawString>Antal van den Bosch. 1997. Learning to pronounce written words: A study in inductive language learning. Ph.D. thesis, Universiteit Maastricht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gabriel Webster</author>
</authors>
<title>Improving letterto-pronunciation accuracy with automatic morphologically-based stress prediction.</title>
<date>2004</date>
<booktitle>In ICSLP,</booktitle>
<pages>2573--2576</pages>
<contexts>
<context position="2143" citStr="Webster, 2004" startWordPosition="332" endWordPosition="333">ble in Polish. In other languages, such as English and Russian, any syllable in the word can be stressed. Correct stress placement is important in textto-speech systems because it affects the accuracy of human word recognition (Tagliapietra and Tabossi, 2005; Arciuli and Cupples, 2006). However, the issue has often been ignored in previous letter-to-phoneme (L2P) systems. The systems that do generate stress markers often do not report separate figures on stress prediction accuracy, or they only provide results on a single language. Some only predict primary stress markers (Black et al., 1998; Webster, 2004; Demberg et al., 2007), while those that predict both primary and secondary stress generally achieve lower accuracy (Bagshaw, 1998; Coleman, 2000; Pearson et al., 2000). In this paper, we formulate stress assignment as a sequence prediction problem. We divide each word into a sequence of substrings, and use these substrings as features for a Support Vector Machine (SVM) ranker. For a given sequence length, there is typically only a small number of stress patterns in use. The task of the SVM is to rank the true stress pattern above the small number of acceptable alternatives. This is the first</context>
<context position="4796" citStr="Webster, 2004" startWordPosition="752" endWordPosition="753">w frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress prediction (Black et al., 1998; Pearson et al., 2000; Webster, 2004; Demberg et al., 2007). In many languages, only two levels of stress are distinguished: stressed and unstressed. However, some languages exhibit more than two levels of stress. For example, in the English word economic, the first and the third syllable are stressed, with the former receiving weaker emphasis than the latter. In this case, the initial syllable is said to carry a secondary stress. Although each word has only one primary stress, it may have any number of secondary stresses. Predicting the full stress pattern is therefore inherently more difficult than predicting the location of p</context>
<context position="6321" citStr="Webster, 2004" startWordPosition="994" endWordPosition="995"> we instead follow Webster (2004) in placing the stress on the vowel which constitutes the nucleus of the stressed syllable. If the syllable boundaries are known, the mapping from the vowel to the corresponding syllable is straightforward. We investigate the assignment of stress to two related but different entities: the spoken word (represented by its phonetic transcription), and the written word (represented by its orthographic form). Although stress is a prosodic feature, assigning stress to written words (“stressed orthography”) has been utilized as a preprocessing stage for the L2P task (Webster, 2004). This preprocessing is motivated by two factors. First, stress greatly influences the pronunciation of vowels in English (c.f., allow vs. alloy). Second, since phoneme predictors typically utilize only local context around a letter, they do not incorporate the global, long-range information that is especially predictive of stress, such as penultimate syllable emphasis associated with the suffix -ation. By taking stressed orthography as input, the L2P system is able to implicitly leverage morphological information beyond the local context. Indicating stress on letters can also be helpful to hu</context>
<context position="23383" citStr="Webster (2004)" startWordPosition="3827" endWordPosition="3828">ry stress with accuracy above 95% for English and German, and equal to 91% in Dutch. Performance is 1-3% lower on letters than on phonemes. On the other hand, the performance of ORACLESYL drops much less on letters. This indicates that most of SUBSTRING’s errors are caused by the splitting method. Letter vowels may or may not represent spoken vowels. By creating a substring for every vowel letter we may produce an incorrect number of syllables. Our pattern feature is therefore less effective. Nevertheless, SUBSTRING’s accuracy on letters also represents a clear improvement over previous work. Webster (2004) reports 80.3% word accuracy on letters in English and 81.2% in German. The most comparable work is Demberg et al. Figure 1: Stress prediction accuracy on letters. (2007), which achieves 90.1% word accuracy on letters in German CELEX, assuming perfect letter syllabification. In order to reproduce their strict experimental setup, we re-partition the full set of German CELEX data to ensure that no overlap of word stems exists between the training and test sets. Using the new data sets, our system achieves a word accuracy of 92.3%, a 2.2% improvement over Demberg et al. (2007)’s result. Moreover,</context>
<context position="27514" citStr="Webster (2004)" startWordPosition="4501" endWordPosition="4502">ithout regard to stress, with stress assigned as a post-process (Bagshaw, 1998; Coleman, 2000). Both van den Bosch (1997) and Black et al. (1998) argue that stress should be predicted at the same time as phonemes. They expand the output set to distinguish between stressed and unstressed phonemes. Similarly, Demberg et al. (2007) produce phonemes, stress, and syllableboundaries within a single joint n-gram model. Pearson et al. (2000) generate phonemes and stress together by jointly optimizing a decision-tree phoneme-generator and a stress predictor based on stress pattern counts. In contrast, Webster (2004) first assigns stress to letters, creating an expanded input set, and then predicts both phonemes and stress jointly. The system marks stress on letter vowels by determining the correspondence between affixes and stress in written words. Following the above approaches, we can expand the input or output symbols of our L2P system to include stress. However, since both decision tree systems and our L2P predictor utilize only local context, they may produce invalid global output. One option, used by Demberg et al. (2007), is to add a constraint to the output generation, requiring each output seque</context>
<context position="32621" citStr="Webster (2004)" startWordPosition="5313" endWordPosition="5314"> but the relative performance on the different languages is quite similar. A few papers report accuracy on the combined stress and phoneme prediction task. The most directly comparable work is van den Bosch (1997), which also predicts primary and secondary stress using English CELEX data. However, the reported word accuracy is only 62.1%. Three other papers report word accuracy on phonemes and stress, using different data sets. Pearson et al. (2000) report 58.5% word accuracy for predicting phonemes and primary/secondary stress. Black et al. (1998) report 74.6% word accuracy in English, while Webster (2004) reports 68.2% on English and 82.9% in German (all primary stress only). Finally, Demberg et al. (2007) report word accuracy on predicting phonemes, stress, and syllabification on German CELEX data. They achieve 86.3% word accuracy. 6 Conclusion We have presented a discriminative ranking approach to lexical stress prediction, which clearly outperforms previously developed systems. The approach is largely language-independent, applicable to both orthographic and phonetic representations, and flexible enough to handle multiple stress levels. When combined with an existing L2P system, it achieves</context>
</contexts>
<marker>Webster, 2004</marker>
<rawString>Gabriel Webster. 2004. Improving letterto-pronunciation accuracy with automatic morphologically-based stress prediction. In ICSLP, pages 2573–2576.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Briony Williams</author>
</authors>
<title>Word stress assignment in a text-to-speech synthesis system for British English. Computer Speech and Language,</title>
<date>1987</date>
<pages>2--235</pages>
<contexts>
<context position="4538" citStr="Williams, 1987" startWordPosition="713" endWordPosition="714">es 118–126, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background and Task Definition There is a long history of research into the principles governing lexical stress placement. Zipf (1929) showed that stressed syllables are often those with low frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress prediction (Black et al., 1998; Pearson et al., 2000; Webster, 2004; Demberg et al., 2007). In many languages, only two levels of stress are distinguished: stressed and unstressed. However, some languages exhibit more than two levels of stress. For example, in the English word economic, the first and the third syllable are stressed, with the former receiving weaker emphasis than the latter. In this case, t</context>
</contexts>
<marker>Williams, 1987</marker>
<rawString>Briony Williams. 1987. Word stress assignment in a text-to-speech synthesis system for British English. Computer Speech and Language, 2:235–272.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George Kingsley Zipf</author>
</authors>
<title>Relative frequency as a determinant of phonetic change.</title>
<date>1929</date>
<booktitle>Harvard Studies in Classical Philology,</booktitle>
<pages>15--1</pages>
<contexts>
<context position="4128" citStr="Zipf (1929)" startWordPosition="651" endWordPosition="652">d as follows. Section 2 provides background on lexical stress and a task definition. Section 3 presents our automatic stress prediction algorithm. In Section 4, we confirm the power of the discriminative approach with experiments on three languages. Section 5 describes how stress is integrated into L2P conversion. 118 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 118–126, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP 2 Background and Task Definition There is a long history of research into the principles governing lexical stress placement. Zipf (1929) showed that stressed syllables are often those with low frequency in speech, while unstressed syllables are usually very common. Chomsky and Halle (1968) proposed a set of context-sensitive rules for producing English stress from underlying word forms. Due to its importance in text-to-speech, there is also a long history of computational stress prediction systems (Fudge, 1984; Church, 1985; Williams, 1987). While these early approaches depend on human definitions of vowel tensity, syllable weight, word etymology, etc., our work follows a recent trend of purely data-driven approaches to stress</context>
</contexts>
<marker>Zipf, 1929</marker>
<rawString>George Kingsley Zipf. 1929. Relative frequency as a determinant of phonetic change. Harvard Studies in Classical Philology, 15:1–95.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>