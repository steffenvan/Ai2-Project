<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000407">
<title confidence="0.959964">
Collocation Extraction beyond the Independence Assumption
</title>
<author confidence="0.920651">
Gerlof Bouma
</author>
<affiliation confidence="0.856799">
Universit¨at Potsdam, Department Linguistik
</affiliation>
<address confidence="0.702174333333333">
Campus Golm, Haus 24/35
Karl-Liebknecht-Straße 24–25
14476 Potsdam, Germany
</address>
<email confidence="0.803886">
gerlof.bouma@uni-potsdam.de
</email>
<sectionHeader confidence="0.99457" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99893075">
In this paper we start to explore two-part
collocation extraction association measures
that do not estimate expected probabili-
ties on the basis of the independence as-
sumption. We propose two new measures
based upon the well-known measures of
mutual information and pointwise mutual
information. Expected probabilities are de-
rived from automatically trained Aggregate
Markov Models. On three collocation gold
standards, we find the new association mea-
sures vary in their effectiveness.
</bodyText>
<sectionHeader confidence="0.999393" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999836714285714">
Collocation extraction typically proceeds by scor-
ing collocation candidates with an association mea-
sure, where high scores are taken to indicate likely
collocationhood. Two well-known such measures
are pointwise mutual information (PMI) and mu-
tual information (MI). In terms of observing a com-
bination of words w1, w2, these are:
</bodyText>
<equation confidence="0.964789666666667">
i(w1,w2) = log p(w1, w2)
p(w1)p(w2), (1)
�I(w1,w2) = p(x, y) i(x, y). (2)
xE{w1,—w11
yE{w2,—w21
PMI (1) is the logged ratio of the observed bi-
</equation>
<bodyText confidence="0.999756156862745">
gramme probability and the expected bigramme
probability under independence of the two words
in the combination. MI (2) is the expected outcome
of PMI, and measures how much information of the
distribution of one word is contained in the distribu-
tion of the other. PMI was introduced into the collo-
cation extraction field by Church and Hanks (1990).
Dunning (1993) proposed the use of the likelihood-
ratio test statistic, which is equivalent to MI up to
a constant factor.
Two aspects of (P)MI are worth highlighting.
First, the observed occurrence probability pobg is
compared to the expected occurrence probability
pexp. Secondly, the independence assumption un-
derlies the estimation of pexp.
The first aspect is motivated by the observa-
tion that interesting combinations are often those
that are unexpectedly frequent. For instance, the
bigramme of the is uninteresting from a colloca-
tion extraction perspective, although it probably is
amongst the most frequent bigrammes for any En-
glish corpus. However, we can expect to frequently
observe the combination by mere chance, simply
because its parts are so frequent. Looking at pobg
and pexp together allows us to recognize these cases
(Manning and Sch¨utze (1999) and Evert (2007) for
more discussion).
The second aspect, the independence assump-
tion in the estimation of pexp, is more problem-
atic, however, even in the context of collocation
extraction. As Evert (2007, p42) notes, the assump-
tion of “independence is extremely unrealistic,” be-
cause it ignores “a variety of syntactic, semantic
and lexical restrictions.” Consider an estimate for
pexp(the the). Under independence, this estimate
will be high, as the itself is very frequent. However,
with our knowledge of English syntax, we would
say pexp(the the) is low. The independence assump-
tion leads to overestimated expectation and the the
will need to be very frequent for it to show up as a
likely collocation. A less contrived example of how
the independence assumption might mislead collo-
cation extraction is when bigramme distribution is
influenced by compositional, non-collocational, se-
mantic dependencies. Investigating adjective-noun
combinations in a corpus, we might find that beige
cloth gets a high PMI, whereas beige thought does
not. This does not make the former a collocation or
multiword unit. Rather, what we would measure is
the tendency to use colours with visible things and
not with abstract objects. Syntactic and semantic
</bodyText>
<page confidence="0.987642">
109
</page>
<note confidence="0.5095475">
Proceedings of the ACL 2010 Conference Short Papers, pages 109–114,
Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics
</note>
<bodyText confidence="0.99889225">
associations between words are real dependencies,
but they need not be collocational in nature. Be-
cause of the independence assumption, PMI and
MI measure these syntactic and semantic associa-
tions just as much as they measure collocational
association. In this paper, we therefore experimen-
tally investigate the use of a more informed pexp in
the context of collocation extraction.
</bodyText>
<sectionHeader confidence="0.958985" genericHeader="method">
2 Aggregate Markov Models
</sectionHeader>
<bodyText confidence="0.999969888888889">
To replace pexp under independence, one might
consider models with explicit linguistic infor-
mation, such as a POS-tag bigramme model.
This would for instance give us a more realistic
pexp(the the). However, lexical semantic informa-
tion is harder to incorporate. We might not know
exactly what factors are needed to estimate pexp
and even if we do, we might lack the resources
to train the resulting models. The only thing we
know about estimating pexp is that we need more
information than a unigramme model but less than
a bigramme model (as this would make pobs/pexp
uninformative). Therefore, we propose to use Ag-
gregate Markov Models (Saul and Pereira, 1997;
Hofmann and Puzicha, 1998; Rooth et al., 1999;
Blitzer et al., 2005)1 for the task of estimating pexp.
In an AMM, bigramme probability is not directly
modeled, but mediated by a hidden class variable c:
</bodyText>
<equation confidence="0.97128">
Xpamm(w2|w1) = p(c|w1)p(w2|c). (3)
c
</equation>
<bodyText confidence="0.9979499">
The number of classes in an AMM determines the
amount of dependency that can be captured. In the
case of just one class, AMM is equivalent to a uni-
gramme model. AMMs become equivalent to the
full bigramme model when the number of classes
equals the size of the smallest of the vocabular-
ies of the parts of the combination. Between these
two extremes, AMMs can capture syntactic, lexical,
semantic and even pragmatic dependencies.
AMMs can be trained with EM, using no more
information than one would need for ML bigramme
probability estimates. Specifications of the E- and
M-steps can be found in any of the four papers cited
above – here we follow Saul and Pereira (1997). At
each iteration, the model components are updated
1These authors use very similar models, but with differing
terminology and with different goals. The term AMM is used
in the first and fourth paper. In the second paper, the models
are referred to as Separable Mixture Models. Their use in
collocation extraction is to our knowledge novel.
</bodyText>
<equation confidence="0.8989942">
according to:
Pw,c/ n(w1, w)p(cl|w1, w), (4)
P
w n(w, w2)p(c|w, w2)
p(w2|c) ← Pw,w� n(w, w�)p(c|w, w�), (5)
</equation>
<bodyText confidence="0.994141">
where n(w1, w2) are bigramme counts and the pos-
terior probability of a hidden category c is esti-
mated by:
</bodyText>
<equation confidence="0.99766">
p(c|w1, w2) = p(c|w1)p(w2|c) (6)
PcI p(c&apos;  |w1)p(w2 |c&apos;)
</equation>
<bodyText confidence="0.99921">
Successive updates converge to a local maximum
of the AMM’s log-likelihood.
The definition of the counterparts to (P)MI with-
out the independence assumption, the AMM-ratio
and AMM-divergence, is now straightforward:
</bodyText>
<equation confidence="0.9958914">
p(w1, w2)
ramm(w1,w2) = log p(w1)pamm(w2|w1), (7)
Xdamm(w1, w2) = p(x, y) ramm(x, y). (8)
xE{w1,—w11
yE{w2,—w21
</equation>
<bodyText confidence="0.999975666666666">
The free parameter in these association measures is
the number of hidden classes in the AMM, that is,
the amount of dependency between the bigramme
parts used to estimate pexp. Note that AMM-ratio
and AMM-divergence with one hidden class are
equivalent to PMI and MI, respectively. It can be
expected that in different corpora and for differ-
ent types of collocation, different settings of this
parameter are suitable.
</bodyText>
<sectionHeader confidence="0.999727" genericHeader="evaluation">
3 Evaluation
</sectionHeader>
<subsectionHeader confidence="0.999799">
3.1 Data and procedure
</subsectionHeader>
<bodyText confidence="0.999982285714286">
We apply AMM-ratio and AMM-divergence to
three collocation gold standards. The effectiveness
of association measures in collocation extraction is
measured by ranking collocation candidates after
the scores defined by the measures, and calculat-
ing average precision of these lists against the gold
standard annotation. We consider the newly pro-
posed AMM-based measures for a varying number
of hidden categories. The new measures are com-
pared against two baselines: ranking by frequency
(pobs) and random ordering. Because AMM-ratio
and -divergence with one hidden class boil down
to PMI and MI (and thus log-likelihood ratio), the
evaluation contains an implicit comparison with
</bodyText>
<equation confidence="0.998526666666667">
p(c|w1) ←
P
w n(w1, w)p(c|w1, w)
</equation>
<page confidence="0.94601">
110
</page>
<bodyText confidence="0.999921694444445">
these canonical measures, too. However, the re-
sults will not be state-of-the-art: for the datasets
investigated below, there are more effective extrac-
tion methods based on supervised machine learning
(Pecina, 2008).
The first gold standard used is the German
adjective-noun dataset (Evert, 2008). It contains
1212 A-N pairs taken from a German newspaper
corpus. We consider three subtasks, depending on
how strict we define true positives. We used the
bigramme frequency data included in the resource.
We assigned all types with a token count &lt;5 to one
type, resulting in AMM training data of 10k As,
20k Ns and 446k A-N pair types.
The second gold standard consists of 5102 Ger-
man PP-verb combinations, also sampled from
newspaper texts (Krenn, 2008). The data con-
tains annotation for support verb constructions
(FVGs) and figurative expressions. This resource
also comes with its own frequency data. After fre-
quency thresholding, AMMs are trained on 46k
PPs, 7.6k Vs, and 890k PP-V pair types.
Third and last is the English verb-particle con-
struction (VPC) gold standard (Baldwin, 2008),
consisting of 3078 verb-particle pairs and annota-
tion for transitive and intransitive idiomatic VPCs.
We extract frequency data from the BNC, follow-
ing the methods described in Baldwin (2005). This
results in two slightly different datasets for the two
types of VPC. For the intransitive VPCs, we train
AMMs on 4.5k Vs, 35 particles, and 43k pair types.
For the transitive VPCs, we have 5k Vs, 35 parti-
cles and 54k pair types.
All our EM runs start with randomly initialized
model vectors. In Section 3.3 we discuss the impact
of model variation due to this random factor.
</bodyText>
<subsectionHeader confidence="0.902413">
3.2 Results
</subsectionHeader>
<bodyText confidence="0.99912156923077">
German A-N collocations The top slice in Ta-
ble 1 shows results for the three subtasks of the
A-N dataset. We see that using AMM-based pexp
initially improves average precision, for each task
and for both the ratio and the divergence measure.
At their maxima, the informed measures outper-
form both baselines as well as PMI and MI/log-
likelihood ratio (# classes=1). The AMM-ratio per-
forms best for 16-class AMMs, the optimum for
AMM-divergence varies slightly.
It is likely that the drop in performance for the
larger AMM-based measures is due to the AMMs
learning the collocations themselves. That is, the
AMMs become rich enough to not only capture
the broadly applicative distributional influences of
syntax and semantics, but also provide accurate
pexps for individual, distributionally deviant combi-
nations – like collocations. An accurate pexp results
in a low association score.
One way of inspecting what kind of dependen-
cies the AMMs pick up is to cluster the data with
them. Following Blitzer et al. (2005), we take the
200 most frequent adjectives and assign them to
the category that maximizes p(c|w1); likewise for
nouns and p(w2|c). Four selected clusters (out of
16) are given in Table 2.2 The esoteric class 1 con-
tains ordinal numbers and nouns that one typically
uses those with, including references to temporal
concepts. Class 2 and 3 appear more semantically
motivated, roughly containing human and collec-
tive denoting nouns, respectively. Class 4 shows
a group of adjectives denoting colours and/or po-
litical affiliations and a less coherent set of nouns,
although the noun cluster can be understood if we
consider individual adjectives that are associated
with this class. Our informal impression from look-
ing at clusters is that this is a common situation: as
a whole, a cluster cannot be easily characterized,
although for subsets or individual pairs, one can
get an intuition for why they are in the same class.
Unfortunately, we also see that some actual collo-
cations are clustered in class 4, such as gelbe Karte
‘warning’ (lit.: ‘yellow card’) and dickes Auto ‘big
(lit.: fat) car’.
German PP-Verb collocations The second slice
in Table 1 shows that, for both subtypes of PP-V
collocation, better pexp-estimates lead to decreased
average precision. The most effective AMM-ratio
and -distance measures are those equivalent to
(P)MI. Apparently, the better pexps are unfortunate
for the extraction of the type of collocations in this
dataset.
The poor performance of PMI on these data –
clearly below frequency – has been noticed before
by Krenn and Evert (2001). A possible explanation
for the lack of improvement in the AMMs lies in
the relatively high performing frequency baselines.
The frequency baseline for FVGs is five times the
2An anonymous reviewer rightly warns against sketching
an overly positive picture of the knowledge captured in the
AMMs by only presenting a few clusters. However, the clus-
tering performed here is only secondary to our main goal
of improving collocation extraction. The model inspection
should thus not be taken as an evaluation of the quality of the
models as clustering models.
</bodyText>
<page confidence="0.998073">
111
</page>
<table confidence="0.984628263157895">
# classes
1 2 4 8 16 32 64 128 256 512 Rnd Frq
A-N Tamm 45.6 46.4 47.6 47.3 48.3 48.0 47.0 46.1 44.7 41.9 30.1 32.2
category 1
damm 42.3 42.9 44.4 45.2 46.1 46.5 45.0 46.3 45.5 45.5
category 1–2 Tamm 55.7 56.3 57.4 57.5 58.1 58.1 57.7 56.9 55.7 52.8 43.1 47.0
damm 56.3 57.0 58.1 58.4 59.8 60.1 59.3 60.6 59.2 59.3
category 1–3 Tamm 62.3 62.8 63.9 64.0 64.4 62.2 62.2 62.7 62.4 60.0 52.7 56.4
damm 64.3 64.7 65.9 66.6 66.7 66.3 66.3 65.4 66.0 64.7
PP-V Tamm 7.5 6.1 6.4 6.0 5.6 5.4 4.5 4.2 3.8 3.5 3.3 10.5
figurative
damm 14.4 13.0 13.3 13.1 12.2 11.2 9.0 7.7 6.9 5.7
FVG Tamm 4.1 3.4 3.4 3.0 2.9 2.7 2.2 2.1 2.0 2.0 3.0 14.7
damm 15.3 12.7 12.6 10.7 9.0 7.7 3.4 3.2 2.5 2.3
VPC Tamm 9.3 9.2 9.0 8.3 5.5 5.3 4.8 14.7
intransitive
damm 12.2 12.2 14.0 16.3 6.9 5.8
transitive Tamm 16.4 14.8 15.2 14.5 11.3 10.0 10.1 20.1
damm 19.6 17.3 20.7 23.8 12.8 10.1
</table>
<tableCaption confidence="0.995972">
Table 1: Average precision for AMM-based association measures and baselines on three datasets.
</tableCaption>
<table confidence="0.58675452">
Cl Adjective Noun
1 dritt ‘third’, erst ‘first’, f¨unft ‘fifth’, halb ‘half’, kommend
‘next’, laufend ‘current’, letzt ‘last’, nah ‘near’, paar ‘pair’,
vergangen ‘last’, viert ‘fourth’, wenig ‘few’, zweit ‘sec-
ond’
2 aktiv ‘active’, alt ‘old’, ausl¨andisch ‘foreign’, betroffen
‘concerned’, jung ‘young’, lebend ‘alive’, meist ‘most’,
unbekannt ‘unknown’, viel ‘many’
3 deutsch ‘German’, europ¨aisch ‘European’, ganz ‘whole’,
gesamt ‘whole’, international ‘international’, national ‘na-
tional’, ¨ortlich ‘local’, ostdeutsch ‘East-German’, privat
‘private’, rein ‘pure’, sogenannt ‘so-called’, sonstig ‘other’,
westlich ‘western’
4 blau ‘blue’, dick ‘fat’, gelb ‘yellow’, gr¨un ‘green’, linke
‘left’, recht ‘right’, rot ‘red’, schwarz ‘black’, white ‘weiß’
Jahr ‘year’, Klasse ‘class’, Linie ‘line’, Mal ‘time’, Monat
‘month’, Platz ‘place’, Rang ‘grade’, Runde ‘round’, Saison
‘season’, Satz ‘sentence’, Schritt ‘step’, Sitzung ‘session’, Son-
ntag ‘Sunday’, Spiel ‘game’, Stunde ‘hour’, Tag ‘day’, Woche
‘week’, Wochenende ‘weekend’
Besucher ‘visitor’, B¨urger ‘citizens’, Deutsche ‘German’, Frau
‘woman’, Gast ‘guest’, Jugendliche ‘youth’, Kind ‘child’, Leute
‘people’, M¨adchen ‘girl’, Mann ‘man’, Mensch ‘human’, Mit-
glied ‘member’
Betrieb ‘company’, Familie ‘family’, Firma ‘firm’, Gebiet
</table>
<tableCaption confidence="0.755314857142857">
‘area’, Gesellschaft ‘society’, Land ‘country’, Mannschaft
‘team’, Markt ‘market’, Organisation ‘organisation’, Staat
‘state’, Stadtteil ‘city district’, System ‘system’, Team ‘team’,
Unternehmen ‘enterprise’, Verein ‘club’, Welt ‘world’
Auge ‘eye’, Auto ‘car’, Haar ‘hair’, Hand ‘hand’, Karte ‘card’,
Stimme ‘voice/vote’
Table 2: Selected adjective-noun clusters from a 16-class AMM.
</tableCaption>
<bodyText confidence="0.999420757575758">
random baseline, and MI does not outperform it by
much. Since the AMMs provide a better fit for the
more frequent pairs in the training data, they might
end up providing too good pexp-estimates for the
true collocations from the beginning.
Further investigation is needed to find out
whether this situation can be ameliorated and, if
not, whether we can systematically identify for
what kind of collocation extraction tasks using bet-
ter pexps is simply not a good idea.
English Verb-Particle constructions The last
gold standard is the English VPC dataset, shown
in the bottom slice of Table 1. We have only used
class-sizes up to 32, as there are only 35 particle
types. We can clearly see the effect of the largest
AMMs approaching the full bigramme model as
average precision here approaches the random base-
line. The VPC extraction task shows a difference
between the two AMM-based measures: AMM-
ratio does not improve at all, remaining below the
frequency baseline. AMM-divergence, however,
shows a slight decrease in precision first, but ends
up performing above the frequency baseline for the
8-class AMMs in both subtasks.
Table 3 shows four clusters of verbs and par-
ticles. The large first cluster contains verbs that
involve motion/displacement of the subject or ob-
ject and associated particles, for instance walk
about or push away. Interestingly, the description
of the gold standard gives exactly such cases as
negatives, since they constitute compositional verb-
particle constructions (Baldwin, 2008). Classes 2
and 3 show syntactic dependencies, which helps
</bodyText>
<page confidence="0.992617">
112
</page>
<table confidence="0.328733">
Cl Verb Particle
</table>
<tableCaption confidence="0.651435125">
1 break, bring, come, cut, drive, fall, get, go, lay, look, move, pass, push, across, ahead, along, around, away, back, back-
put, run, sit, throw, turn, voice, walk ward, down, forward, into, over, through, together
2 accord, add, apply, give, happen, lead, listen, offer, pay, present, refer, astray, to
relate, return, rise, say, sell, send, speak, write
3 know, talk, tell, think about
4 accompany, achieve, affect, cause, create, follow, hit, increase, issue, by
mean, produce, replace, require, sign, support
Table 3: Selected verb-particle clusters from an 8-class AMM on transitive data.
</tableCaption>
<bodyText confidence="0.9758722">
collocation extraction by decreasing the impact of
verb-preposition associations that are due to PP-
selecting verbs. Class 4 shows a third type of distri-
butional generalization: the verbs in this class are
all frequently used in the passive.
</bodyText>
<subsectionHeader confidence="0.997201">
3.3 Variation due to local optima
</subsectionHeader>
<bodyText confidence="0.999198090909091">
We start each EM run with a random initializa-
tion of the model parameters. Since EM finds local
rather than global optima, each run may lead to
different AMMs, which in turn will affect AMM-
based collocation extraction. To gain insight into
this variation, we have trained 40 16-class AMMs
on the A-N dataset. Table 4 gives five point sum-
maries of the average precision of the resulting
40 ‘association measures’. Performance varies con-
siderably, spanning 2–3 percentage points in each
case. The models consistently outperform (P)MI in
Table 1, though.
Several techniques might help to address this
variation. One might try to find a good fixed way of
initializing EM or to use EM variants that reduce
the impact of the initial state (Smith and Eisner,
2004, a.o.), so that a run with the same data and
the same number of classes will always learn (al-
most) the same model. On the assumption that an
average over several runs will vary less than indi-
vidual runs, we have also constructed a combined
pexp by averaging over 40 pexps. The last column
</bodyText>
<table confidence="0.998199222222222">
Variation in avg precision
min q1 med q3 max Comb
A-N
cat 1 Tamm 46.5 47.3 47.9 48.4 49.1 48.4
damm 44.4 45.4 45.8 46.1 47.1 46.4
cat 1–2 Tamm 56.7 57.2 57.9 58.2 59.0 58.2
damm 58.1 58.8 59.2 59.4 60.4 60.0
cat 1–3 Tamm 63.0 63.7 64.2 64.6 65.3 64.6
damm 65.2 66.0 66.4 66.6 67.6 66.9
</table>
<tableCaption confidence="0.91704">
Table 4: Variation on A-N data over 40 EM runs
and result of combining peps.
</tableCaption>
<bodyText confidence="0.989304">
in Table 4 shows this combined estimator leads to
good extraction results.
</bodyText>
<sectionHeader confidence="0.999615" genericHeader="conclusions">
4 Conclusions
</sectionHeader>
<bodyText confidence="0.999965096774194">
In this paper, we have started to explore collocation
extraction beyond the assumption of independence.
We have introduced two new association measures
that do away with this assumption in the estima-
tion of expected probabilities. The success of using
these association measures varies. It remains to be
investigated whether they can be improved more.
A possible obstacle in the adoption of AMMs in
collocation extraction is that we have not provided
any heuristic for setting the number of classes for
the AMMs. We hope to be able to look into this
question in future research. Luckily, for the AN and
VPC data, the best models are not that large (in the
order of 8–32 classes), which means that model fit-
ting is fast enough to experiment with different set-
tings. In general, considering these smaller models
might suffice for tasks that have a fairly restricted
definition of collocation candidate, like the tasks
in our evaluation do. Because AMM fitting is un-
supervised, selecting a class size is in this respect
no different from selecting a suitable association
measure from the canon of existing measures.
Future research into association measures that
are not based on the independence assumption will
also include considering different EM variants and
other automatically learnable models besides the
AMMs used in this paper. Finally, the idea of us-
ing an informed estimate of expected probability
in an association measure need not be confined
to (P)MI, as there are many other measures that
employ expected probabilities.
</bodyText>
<sectionHeader confidence="0.997913" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.66213475">
This research was carried out in the context of
the SFB 632 Information Structure, subproject D4:
Methoden zur interaktiven linguistischen Korpus-
analyse von Informationsstruktur.
</bodyText>
<page confidence="0.998982">
113
</page>
<sectionHeader confidence="0.998342" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99975478125">
Timothy Baldwin. 2005. The deep lexical acquisition
of english verb-particle constructions. Computer
Speech and Language, Special Issue on Multiword
Expressions, 19(4):398–414.
Timothy Baldwin. 2008. A resource for evaluating the
deep lexical acquisition of English verb-particle con-
structions. In Proceedings of the LREC 2008 Work-
shop Towards a Shared Task for Multiword Expres-
sions (MWE 2008), pages 1–2, Marrakech.
John Blitzer, Amir Globerson, and Fernando Pereira.
2005. Distributed latent variable models of lexical
co-occurrences. In Tenth International Workshop on
Artificial Intelligence and Statistics.
Kenneth W. Church and Patrick Hanks. 1990. Word
association norms, mutual information, and lexicog-
raphy. Computational Linguistics, 16(1):22–29.
Ted Dunning. 1993. Accurate methods for the statis-
tics of surprise and coincidence. Computational Lin-
guistics, 19(1):61–74.
Stefan Evert. 2007. Corpora and collocations. Ex-
tended Manuscript of Chapter 58 of A. L¨udeling and
M. Kyt¨o, 2008, Corpus Linguistics. An International
Handbook, Mouton de Gruyter, Berlin.
Stefan Evert. 2008. A lexicographic evaluation of Ger-
man adjective-noun collocations. In Proceedings of
the LREC 2008 Workshop Towards a Shared Task
for Multiword Expressions (MWE 2008), pages 3–6,
Marrakech.
Thomas Hofmann and Jan Puzicha. 1998. Statisti-
cal models for co-occurrence data. Technical report,
MIT. AI Memo 1625, CBCL Memo 159.
Brigitte Krenn and Stefan Evert. 2001. Can we do
better than frequency? a case study on extracting PP-
verb collocations. In Proceedings of the ACL Work-
shop on Collocations, Toulouse.
Brigitte Krenn. 2008. Description of evaluation re-
source – German PP-verb data. In Proceedings of
the LREC 2008 Workshop Towards a Shared Task
for Multiword Expressions (MWE 2008), pages 7–
10, Marrakech.
Chris Manning and Hinrich Sch¨utze. 1999. Foun-
dations of Statistical Natural Language Processing.
MIT Press, Cambridge, MA.
Pavel Pecina. 2008. A machine learning approach to
multiword expression extraction. In Proceedings of
the LREC 2008 Workshop Towards a Shared Task
for Multiword Expressions (MWE 2008), pages 54–
57, Marrakech.
Mats Rooth, Stefan Riester, Detlef Prescher, Glenn Car-
rol, and Franz Beil. 1999. Inducing a semantically
annotated lexicon via em-based clustering. In Pro-
ceedings of the 37th Annual Meeting of the Associ-
ation for Computational Linguistics, College Park,
MD.
Lawrence Saul and Fernando Pereira. 1997. Aggre-
gate and mixed-order markov models for statistical
language processing. In Proceedings of the Second
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 81–89.
Noah A. Smith and Jason Eisner. 2004. Anneal-
ing techniques for unsupervised statistical language
learning. In Proceedings of the 42nd Annual Meet-
ing of the Association for Computational Linguis-
tics.
</reference>
<page confidence="0.998631">
114
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.929240">
<title confidence="0.999711">Collocation Extraction beyond the Independence Assumption</title>
<author confidence="0.989371">Gerlof Bouma</author>
<affiliation confidence="0.982833">Universit¨at Potsdam, Department Linguistik</affiliation>
<address confidence="0.990802333333333">Campus Golm, Haus 24/35 Karl-Liebknecht-Straße 24–25 14476 Potsdam, Germany</address>
<email confidence="0.999586">gerlof.bouma@uni-potsdam.de</email>
<abstract confidence="0.998289692307692">In this paper we start to explore two-part collocation extraction association measures that do not estimate expected probabilities on the basis of the independence assumption. We propose two new measures based upon the well-known measures of mutual information and pointwise mutual information. Expected probabilities are derived from automatically trained Aggregate Markov Models. On three collocation gold standards, we find the new association measures vary in their effectiveness.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Timothy Baldwin</author>
</authors>
<title>The deep lexical acquisition of english verb-particle constructions.</title>
<date>2005</date>
<journal>Computer Speech and Language, Special Issue on Multiword Expressions,</journal>
<volume>19</volume>
<issue>4</issue>
<contexts>
<context position="9185" citStr="Baldwin (2005)" startWordPosition="1444" endWordPosition="1445">of 5102 German PP-verb combinations, also sampled from newspaper texts (Krenn, 2008). The data contains annotation for support verb constructions (FVGs) and figurative expressions. This resource also comes with its own frequency data. After frequency thresholding, AMMs are trained on 46k PPs, 7.6k Vs, and 890k PP-V pair types. Third and last is the English verb-particle construction (VPC) gold standard (Baldwin, 2008), consisting of 3078 verb-particle pairs and annotation for transitive and intransitive idiomatic VPCs. We extract frequency data from the BNC, following the methods described in Baldwin (2005). This results in two slightly different datasets for the two types of VPC. For the intransitive VPCs, we train AMMs on 4.5k Vs, 35 particles, and 43k pair types. For the transitive VPCs, we have 5k Vs, 35 particles and 54k pair types. All our EM runs start with randomly initialized model vectors. In Section 3.3 we discuss the impact of model variation due to this random factor. 3.2 Results German A-N collocations The top slice in Table 1 shows results for the three subtasks of the A-N dataset. We see that using AMM-based pexp initially improves average precision, for each task and for both th</context>
</contexts>
<marker>Baldwin, 2005</marker>
<rawString>Timothy Baldwin. 2005. The deep lexical acquisition of english verb-particle constructions. Computer Speech and Language, Special Issue on Multiword Expressions, 19(4):398–414.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Timothy Baldwin</author>
</authors>
<title>A resource for evaluating the deep lexical acquisition of English verb-particle constructions.</title>
<date>2008</date>
<booktitle>In Proceedings of the LREC</booktitle>
<pages>1--2</pages>
<location>Marrakech.</location>
<contexts>
<context position="8992" citStr="Baldwin, 2008" startWordPosition="1415" endWordPosition="1416">a included in the resource. We assigned all types with a token count &lt;5 to one type, resulting in AMM training data of 10k As, 20k Ns and 446k A-N pair types. The second gold standard consists of 5102 German PP-verb combinations, also sampled from newspaper texts (Krenn, 2008). The data contains annotation for support verb constructions (FVGs) and figurative expressions. This resource also comes with its own frequency data. After frequency thresholding, AMMs are trained on 46k PPs, 7.6k Vs, and 890k PP-V pair types. Third and last is the English verb-particle construction (VPC) gold standard (Baldwin, 2008), consisting of 3078 verb-particle pairs and annotation for transitive and intransitive idiomatic VPCs. We extract frequency data from the BNC, following the methods described in Baldwin (2005). This results in two slightly different datasets for the two types of VPC. For the intransitive VPCs, we train AMMs on 4.5k Vs, 35 particles, and 43k pair types. For the transitive VPCs, we have 5k Vs, 35 particles and 54k pair types. All our EM runs start with randomly initialized model vectors. In Section 3.3 we discuss the impact of model variation due to this random factor. 3.2 Results German A-N co</context>
<context position="16859" citStr="Baldwin, 2008" startWordPosition="2674" endWordPosition="2675">Mratio does not improve at all, remaining below the frequency baseline. AMM-divergence, however, shows a slight decrease in precision first, but ends up performing above the frequency baseline for the 8-class AMMs in both subtasks. Table 3 shows four clusters of verbs and particles. The large first cluster contains verbs that involve motion/displacement of the subject or object and associated particles, for instance walk about or push away. Interestingly, the description of the gold standard gives exactly such cases as negatives, since they constitute compositional verbparticle constructions (Baldwin, 2008). Classes 2 and 3 show syntactic dependencies, which helps 112 Cl Verb Particle 1 break, bring, come, cut, drive, fall, get, go, lay, look, move, pass, push, across, ahead, along, around, away, back, backput, run, sit, throw, turn, voice, walk ward, down, forward, into, over, through, together 2 accord, add, apply, give, happen, lead, listen, offer, pay, present, refer, astray, to relate, return, rise, say, sell, send, speak, write 3 know, talk, tell, think about 4 accompany, achieve, affect, cause, create, follow, hit, increase, issue, by mean, produce, replace, require, sign, support Table 3</context>
</contexts>
<marker>Baldwin, 2008</marker>
<rawString>Timothy Baldwin. 2008. A resource for evaluating the deep lexical acquisition of English verb-particle constructions. In Proceedings of the LREC 2008 Workshop Towards a Shared Task for Multiword Expressions (MWE 2008), pages 1–2, Marrakech.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Blitzer</author>
<author>Amir Globerson</author>
<author>Fernando Pereira</author>
</authors>
<title>Distributed latent variable models of lexical co-occurrences.</title>
<date>2005</date>
<booktitle>In Tenth International Workshop on Artificial Intelligence and Statistics.</booktitle>
<contexts>
<context position="4951" citStr="Blitzer et al., 2005" startWordPosition="760" endWordPosition="763">POS-tag bigramme model. This would for instance give us a more realistic pexp(the the). However, lexical semantic information is harder to incorporate. We might not know exactly what factors are needed to estimate pexp and even if we do, we might lack the resources to train the resulting models. The only thing we know about estimating pexp is that we need more information than a unigramme model but less than a bigramme model (as this would make pobs/pexp uninformative). Therefore, we propose to use Aggregate Markov Models (Saul and Pereira, 1997; Hofmann and Puzicha, 1998; Rooth et al., 1999; Blitzer et al., 2005)1 for the task of estimating pexp. In an AMM, bigramme probability is not directly modeled, but mediated by a hidden class variable c: Xpamm(w2|w1) = p(c|w1)p(w2|c). (3) c The number of classes in an AMM determines the amount of dependency that can be captured. In the case of just one class, AMM is equivalent to a unigramme model. AMMs become equivalent to the full bigramme model when the number of classes equals the size of the smallest of the vocabularies of the parts of the combination. Between these two extremes, AMMs can capture syntactic, lexical, semantic and even pragmatic dependencies</context>
<context position="10593" citStr="Blitzer et al. (2005)" startWordPosition="1679" endWordPosition="1682">or 16-class AMMs, the optimum for AMM-divergence varies slightly. It is likely that the drop in performance for the larger AMM-based measures is due to the AMMs learning the collocations themselves. That is, the AMMs become rich enough to not only capture the broadly applicative distributional influences of syntax and semantics, but also provide accurate pexps for individual, distributionally deviant combinations – like collocations. An accurate pexp results in a low association score. One way of inspecting what kind of dependencies the AMMs pick up is to cluster the data with them. Following Blitzer et al. (2005), we take the 200 most frequent adjectives and assign them to the category that maximizes p(c|w1); likewise for nouns and p(w2|c). Four selected clusters (out of 16) are given in Table 2.2 The esoteric class 1 contains ordinal numbers and nouns that one typically uses those with, including references to temporal concepts. Class 2 and 3 appear more semantically motivated, roughly containing human and collective denoting nouns, respectively. Class 4 shows a group of adjectives denoting colours and/or political affiliations and a less coherent set of nouns, although the noun cluster can be unders</context>
</contexts>
<marker>Blitzer, Globerson, Pereira, 2005</marker>
<rawString>John Blitzer, Amir Globerson, and Fernando Pereira. 2005. Distributed latent variable models of lexical co-occurrences. In Tenth International Workshop on Artificial Intelligence and Statistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth W Church</author>
<author>Patrick Hanks</author>
</authors>
<title>Word association norms, mutual information, and lexicography.</title>
<date>1990</date>
<journal>Computational Linguistics,</journal>
<volume>16</volume>
<issue>1</issue>
<contexts>
<context position="1548" citStr="Church and Hanks (1990)" startWordPosition="226" endWordPosition="229"> are pointwise mutual information (PMI) and mutual information (MI). In terms of observing a combination of words w1, w2, these are: i(w1,w2) = log p(w1, w2) p(w1)p(w2), (1) �I(w1,w2) = p(x, y) i(x, y). (2) xE{w1,—w11 yE{w2,—w21 PMI (1) is the logged ratio of the observed bigramme probability and the expected bigramme probability under independence of the two words in the combination. MI (2) is the expected outcome of PMI, and measures how much information of the distribution of one word is contained in the distribution of the other. PMI was introduced into the collocation extraction field by Church and Hanks (1990). Dunning (1993) proposed the use of the likelihoodratio test statistic, which is equivalent to MI up to a constant factor. Two aspects of (P)MI are worth highlighting. First, the observed occurrence probability pobg is compared to the expected occurrence probability pexp. Secondly, the independence assumption underlies the estimation of pexp. The first aspect is motivated by the observation that interesting combinations are often those that are unexpectedly frequent. For instance, the bigramme of the is uninteresting from a collocation extraction perspective, although it probably is amongst t</context>
</contexts>
<marker>Church, Hanks, 1990</marker>
<rawString>Kenneth W. Church and Patrick Hanks. 1990. Word association norms, mutual information, and lexicography. Computational Linguistics, 16(1):22–29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Dunning</author>
</authors>
<title>Accurate methods for the statistics of surprise and coincidence.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="1564" citStr="Dunning (1993)" startWordPosition="230" endWordPosition="231">ormation (PMI) and mutual information (MI). In terms of observing a combination of words w1, w2, these are: i(w1,w2) = log p(w1, w2) p(w1)p(w2), (1) �I(w1,w2) = p(x, y) i(x, y). (2) xE{w1,—w11 yE{w2,—w21 PMI (1) is the logged ratio of the observed bigramme probability and the expected bigramme probability under independence of the two words in the combination. MI (2) is the expected outcome of PMI, and measures how much information of the distribution of one word is contained in the distribution of the other. PMI was introduced into the collocation extraction field by Church and Hanks (1990). Dunning (1993) proposed the use of the likelihoodratio test statistic, which is equivalent to MI up to a constant factor. Two aspects of (P)MI are worth highlighting. First, the observed occurrence probability pobg is compared to the expected occurrence probability pexp. Secondly, the independence assumption underlies the estimation of pexp. The first aspect is motivated by the observation that interesting combinations are often those that are unexpectedly frequent. For instance, the bigramme of the is uninteresting from a collocation extraction perspective, although it probably is amongst the most frequent</context>
</contexts>
<marker>Dunning, 1993</marker>
<rawString>Ted Dunning. 1993. Accurate methods for the statistics of surprise and coincidence. Computational Linguistics, 19(1):61–74.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stefan Evert</author>
</authors>
<title>Corpora and collocations.</title>
<date>2007</date>
<journal>Extended Manuscript of Chapter</journal>
<volume>58</volume>
<location>Berlin.</location>
<contexts>
<context position="2432" citStr="Evert (2007)" startWordPosition="365" endWordPosition="366">. Secondly, the independence assumption underlies the estimation of pexp. The first aspect is motivated by the observation that interesting combinations are often those that are unexpectedly frequent. For instance, the bigramme of the is uninteresting from a collocation extraction perspective, although it probably is amongst the most frequent bigrammes for any English corpus. However, we can expect to frequently observe the combination by mere chance, simply because its parts are so frequent. Looking at pobg and pexp together allows us to recognize these cases (Manning and Sch¨utze (1999) and Evert (2007) for more discussion). The second aspect, the independence assumption in the estimation of pexp, is more problematic, however, even in the context of collocation extraction. As Evert (2007, p42) notes, the assumption of “independence is extremely unrealistic,” because it ignores “a variety of syntactic, semantic and lexical restrictions.” Consider an estimate for pexp(the the). Under independence, this estimate will be high, as the itself is very frequent. However, with our knowledge of English syntax, we would say pexp(the the) is low. The independence assumption leads to overestimated expect</context>
</contexts>
<marker>Evert, 2007</marker>
<rawString>Stefan Evert. 2007. Corpora and collocations. Extended Manuscript of Chapter 58 of A. L¨udeling and M. Kyt¨o, 2008, Corpus Linguistics. An International Handbook, Mouton de Gruyter, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stefan Evert</author>
</authors>
<title>A lexicographic evaluation of German adjective-noun collocations.</title>
<date>2008</date>
<booktitle>In Proceedings of the LREC 2008 Workshop Towards a Shared Task for Multiword Expressions (MWE</booktitle>
<pages>3--6</pages>
<location>Marrakech.</location>
<contexts>
<context position="8199" citStr="Evert, 2008" startWordPosition="1284" endWordPosition="1285"> categories. The new measures are compared against two baselines: ranking by frequency (pobs) and random ordering. Because AMM-ratio and -divergence with one hidden class boil down to PMI and MI (and thus log-likelihood ratio), the evaluation contains an implicit comparison with p(c|w1) ← P w n(w1, w)p(c|w1, w) 110 these canonical measures, too. However, the results will not be state-of-the-art: for the datasets investigated below, there are more effective extraction methods based on supervised machine learning (Pecina, 2008). The first gold standard used is the German adjective-noun dataset (Evert, 2008). It contains 1212 A-N pairs taken from a German newspaper corpus. We consider three subtasks, depending on how strict we define true positives. We used the bigramme frequency data included in the resource. We assigned all types with a token count &lt;5 to one type, resulting in AMM training data of 10k As, 20k Ns and 446k A-N pair types. The second gold standard consists of 5102 German PP-verb combinations, also sampled from newspaper texts (Krenn, 2008). The data contains annotation for support verb constructions (FVGs) and figurative expressions. This resource also comes with its own frequency</context>
</contexts>
<marker>Evert, 2008</marker>
<rawString>Stefan Evert. 2008. A lexicographic evaluation of German adjective-noun collocations. In Proceedings of the LREC 2008 Workshop Towards a Shared Task for Multiword Expressions (MWE 2008), pages 3–6, Marrakech.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas Hofmann</author>
<author>Jan Puzicha</author>
</authors>
<title>Statistical models for co-occurrence data.</title>
<date>1998</date>
<journal>MIT. AI Memo 1625, CBCL Memo</journal>
<tech>Technical report,</tech>
<volume>159</volume>
<contexts>
<context position="4908" citStr="Hofmann and Puzicha, 1998" startWordPosition="752" endWordPosition="755">ith explicit linguistic information, such as a POS-tag bigramme model. This would for instance give us a more realistic pexp(the the). However, lexical semantic information is harder to incorporate. We might not know exactly what factors are needed to estimate pexp and even if we do, we might lack the resources to train the resulting models. The only thing we know about estimating pexp is that we need more information than a unigramme model but less than a bigramme model (as this would make pobs/pexp uninformative). Therefore, we propose to use Aggregate Markov Models (Saul and Pereira, 1997; Hofmann and Puzicha, 1998; Rooth et al., 1999; Blitzer et al., 2005)1 for the task of estimating pexp. In an AMM, bigramme probability is not directly modeled, but mediated by a hidden class variable c: Xpamm(w2|w1) = p(c|w1)p(w2|c). (3) c The number of classes in an AMM determines the amount of dependency that can be captured. In the case of just one class, AMM is equivalent to a unigramme model. AMMs become equivalent to the full bigramme model when the number of classes equals the size of the smallest of the vocabularies of the parts of the combination. Between these two extremes, AMMs can capture syntactic, lexica</context>
</contexts>
<marker>Hofmann, Puzicha, 1998</marker>
<rawString>Thomas Hofmann and Jan Puzicha. 1998. Statistical models for co-occurrence data. Technical report, MIT. AI Memo 1625, CBCL Memo 159.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brigitte Krenn</author>
<author>Stefan Evert</author>
</authors>
<title>Can we do better than frequency? a case study on extracting PPverb collocations.</title>
<date>2001</date>
<booktitle>In Proceedings of the ACL Workshop on Collocations,</booktitle>
<location>Toulouse.</location>
<contexts>
<context position="12165" citStr="Krenn and Evert (2001)" startWordPosition="1934" endWordPosition="1937">at some actual collocations are clustered in class 4, such as gelbe Karte ‘warning’ (lit.: ‘yellow card’) and dickes Auto ‘big (lit.: fat) car’. German PP-Verb collocations The second slice in Table 1 shows that, for both subtypes of PP-V collocation, better pexp-estimates lead to decreased average precision. The most effective AMM-ratio and -distance measures are those equivalent to (P)MI. Apparently, the better pexps are unfortunate for the extraction of the type of collocations in this dataset. The poor performance of PMI on these data – clearly below frequency – has been noticed before by Krenn and Evert (2001). A possible explanation for the lack of improvement in the AMMs lies in the relatively high performing frequency baselines. The frequency baseline for FVGs is five times the 2An anonymous reviewer rightly warns against sketching an overly positive picture of the knowledge captured in the AMMs by only presenting a few clusters. However, the clustering performed here is only secondary to our main goal of improving collocation extraction. The model inspection should thus not be taken as an evaluation of the quality of the models as clustering models. 111 # classes 1 2 4 8 16 32 64 128 256 512 Rn</context>
</contexts>
<marker>Krenn, Evert, 2001</marker>
<rawString>Brigitte Krenn and Stefan Evert. 2001. Can we do better than frequency? a case study on extracting PPverb collocations. In Proceedings of the ACL Workshop on Collocations, Toulouse.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brigitte Krenn</author>
</authors>
<title>Description of evaluation resource – German PP-verb data.</title>
<date>2008</date>
<booktitle>In Proceedings of the LREC</booktitle>
<pages>7--10</pages>
<location>Marrakech.</location>
<contexts>
<context position="8655" citStr="Krenn, 2008" startWordPosition="1362" endWordPosition="1363">tive extraction methods based on supervised machine learning (Pecina, 2008). The first gold standard used is the German adjective-noun dataset (Evert, 2008). It contains 1212 A-N pairs taken from a German newspaper corpus. We consider three subtasks, depending on how strict we define true positives. We used the bigramme frequency data included in the resource. We assigned all types with a token count &lt;5 to one type, resulting in AMM training data of 10k As, 20k Ns and 446k A-N pair types. The second gold standard consists of 5102 German PP-verb combinations, also sampled from newspaper texts (Krenn, 2008). The data contains annotation for support verb constructions (FVGs) and figurative expressions. This resource also comes with its own frequency data. After frequency thresholding, AMMs are trained on 46k PPs, 7.6k Vs, and 890k PP-V pair types. Third and last is the English verb-particle construction (VPC) gold standard (Baldwin, 2008), consisting of 3078 verb-particle pairs and annotation for transitive and intransitive idiomatic VPCs. We extract frequency data from the BNC, following the methods described in Baldwin (2005). This results in two slightly different datasets for the two types of</context>
</contexts>
<marker>Krenn, 2008</marker>
<rawString>Brigitte Krenn. 2008. Description of evaluation resource – German PP-verb data. In Proceedings of the LREC 2008 Workshop Towards a Shared Task for Multiword Expressions (MWE 2008), pages 7– 10, Marrakech.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Manning</author>
<author>Hinrich Sch¨utze</author>
</authors>
<date>1999</date>
<booktitle>Foundations of Statistical Natural Language Processing.</booktitle>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<marker>Manning, Sch¨utze, 1999</marker>
<rawString>Chris Manning and Hinrich Sch¨utze. 1999. Foundations of Statistical Natural Language Processing. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pavel Pecina</author>
</authors>
<title>A machine learning approach to multiword expression extraction.</title>
<date>2008</date>
<booktitle>In Proceedings of the LREC</booktitle>
<pages>54--57</pages>
<location>Marrakech.</location>
<contexts>
<context position="8118" citStr="Pecina, 2008" startWordPosition="1272" endWordPosition="1273">. We consider the newly proposed AMM-based measures for a varying number of hidden categories. The new measures are compared against two baselines: ranking by frequency (pobs) and random ordering. Because AMM-ratio and -divergence with one hidden class boil down to PMI and MI (and thus log-likelihood ratio), the evaluation contains an implicit comparison with p(c|w1) ← P w n(w1, w)p(c|w1, w) 110 these canonical measures, too. However, the results will not be state-of-the-art: for the datasets investigated below, there are more effective extraction methods based on supervised machine learning (Pecina, 2008). The first gold standard used is the German adjective-noun dataset (Evert, 2008). It contains 1212 A-N pairs taken from a German newspaper corpus. We consider three subtasks, depending on how strict we define true positives. We used the bigramme frequency data included in the resource. We assigned all types with a token count &lt;5 to one type, resulting in AMM training data of 10k As, 20k Ns and 446k A-N pair types. The second gold standard consists of 5102 German PP-verb combinations, also sampled from newspaper texts (Krenn, 2008). The data contains annotation for support verb constructions (</context>
</contexts>
<marker>Pecina, 2008</marker>
<rawString>Pavel Pecina. 2008. A machine learning approach to multiword expression extraction. In Proceedings of the LREC 2008 Workshop Towards a Shared Task for Multiword Expressions (MWE 2008), pages 54– 57, Marrakech.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mats Rooth</author>
<author>Stefan Riester</author>
<author>Detlef Prescher</author>
<author>Glenn Carrol</author>
<author>Franz Beil</author>
</authors>
<title>Inducing a semantically annotated lexicon via em-based clustering.</title>
<date>1999</date>
<booktitle>In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>College Park, MD.</location>
<contexts>
<context position="4928" citStr="Rooth et al., 1999" startWordPosition="756" endWordPosition="759">ormation, such as a POS-tag bigramme model. This would for instance give us a more realistic pexp(the the). However, lexical semantic information is harder to incorporate. We might not know exactly what factors are needed to estimate pexp and even if we do, we might lack the resources to train the resulting models. The only thing we know about estimating pexp is that we need more information than a unigramme model but less than a bigramme model (as this would make pobs/pexp uninformative). Therefore, we propose to use Aggregate Markov Models (Saul and Pereira, 1997; Hofmann and Puzicha, 1998; Rooth et al., 1999; Blitzer et al., 2005)1 for the task of estimating pexp. In an AMM, bigramme probability is not directly modeled, but mediated by a hidden class variable c: Xpamm(w2|w1) = p(c|w1)p(w2|c). (3) c The number of classes in an AMM determines the amount of dependency that can be captured. In the case of just one class, AMM is equivalent to a unigramme model. AMMs become equivalent to the full bigramme model when the number of classes equals the size of the smallest of the vocabularies of the parts of the combination. Between these two extremes, AMMs can capture syntactic, lexical, semantic and even</context>
</contexts>
<marker>Rooth, Riester, Prescher, Carrol, Beil, 1999</marker>
<rawString>Mats Rooth, Stefan Riester, Detlef Prescher, Glenn Carrol, and Franz Beil. 1999. Inducing a semantically annotated lexicon via em-based clustering. In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics, College Park, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lawrence Saul</author>
<author>Fernando Pereira</author>
</authors>
<title>Aggregate and mixed-order markov models for statistical language processing.</title>
<date>1997</date>
<booktitle>In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>81--89</pages>
<contexts>
<context position="4881" citStr="Saul and Pereira, 1997" startWordPosition="748" endWordPosition="751"> might consider models with explicit linguistic information, such as a POS-tag bigramme model. This would for instance give us a more realistic pexp(the the). However, lexical semantic information is harder to incorporate. We might not know exactly what factors are needed to estimate pexp and even if we do, we might lack the resources to train the resulting models. The only thing we know about estimating pexp is that we need more information than a unigramme model but less than a bigramme model (as this would make pobs/pexp uninformative). Therefore, we propose to use Aggregate Markov Models (Saul and Pereira, 1997; Hofmann and Puzicha, 1998; Rooth et al., 1999; Blitzer et al., 2005)1 for the task of estimating pexp. In an AMM, bigramme probability is not directly modeled, but mediated by a hidden class variable c: Xpamm(w2|w1) = p(c|w1)p(w2|c). (3) c The number of classes in an AMM determines the amount of dependency that can be captured. In the case of just one class, AMM is equivalent to a unigramme model. AMMs become equivalent to the full bigramme model when the number of classes equals the size of the smallest of the vocabularies of the parts of the combination. Between these two extremes, AMMs ca</context>
</contexts>
<marker>Saul, Pereira, 1997</marker>
<rawString>Lawrence Saul and Fernando Pereira. 1997. Aggregate and mixed-order markov models for statistical language processing. In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing, pages 81–89.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noah A Smith</author>
<author>Jason Eisner</author>
</authors>
<title>Annealing techniques for unsupervised statistical language learning.</title>
<date>2004</date>
<booktitle>In Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="18564" citStr="Smith and Eisner, 2004" startWordPosition="2949" endWordPosition="2952">y lead to different AMMs, which in turn will affect AMMbased collocation extraction. To gain insight into this variation, we have trained 40 16-class AMMs on the A-N dataset. Table 4 gives five point summaries of the average precision of the resulting 40 ‘association measures’. Performance varies considerably, spanning 2–3 percentage points in each case. The models consistently outperform (P)MI in Table 1, though. Several techniques might help to address this variation. One might try to find a good fixed way of initializing EM or to use EM variants that reduce the impact of the initial state (Smith and Eisner, 2004, a.o.), so that a run with the same data and the same number of classes will always learn (almost) the same model. On the assumption that an average over several runs will vary less than individual runs, we have also constructed a combined pexp by averaging over 40 pexps. The last column Variation in avg precision min q1 med q3 max Comb A-N cat 1 Tamm 46.5 47.3 47.9 48.4 49.1 48.4 damm 44.4 45.4 45.8 46.1 47.1 46.4 cat 1–2 Tamm 56.7 57.2 57.9 58.2 59.0 58.2 damm 58.1 58.8 59.2 59.4 60.4 60.0 cat 1–3 Tamm 63.0 63.7 64.2 64.6 65.3 64.6 damm 65.2 66.0 66.4 66.6 67.6 66.9 Table 4: Variation on A-</context>
</contexts>
<marker>Smith, Eisner, 2004</marker>
<rawString>Noah A. Smith and Jason Eisner. 2004. Annealing techniques for unsupervised statistical language learning. In Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>