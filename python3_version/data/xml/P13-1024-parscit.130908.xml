<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000484">
<title confidence="0.993905">
Linking Tweets to News: A Framework to Enrich Short Text Data in
Social Media
</title>
<author confidence="0.990264">
Weiwei Guo* and Hao Li† and Heng Ji† and Mona Diab$
</author>
<affiliation confidence="0.99921825">
*Department of Computer Science, Columbia University
†Computer Science Department and Linguistic Department,
Queens College and Graduate Center, City University of New York
$Department of Computer Science, George Washington University
</affiliation>
<email confidence="0.989679">
weiwei@cs.columbia.edu, {haoli.qc,hengjicuny}@gmail.com, mtdiab@gwu.edu
</email>
<sectionHeader confidence="0.99739" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999967727272727">
Many current Natural Language Process-
ing [NLP] techniques work well assum-
ing a large context of text as input data.
However they become ineffective when
applied to short texts such as Twitter feeds.
To overcome the issue, we want to find
a related newswire document to a given
tweet to provide contextual support for
NLP tasks. This requires robust model-
ing and understanding of the semantics of
short texts.
The contribution of the paper is two-fold:
1. we introduce the Linking-Tweets-to-
News task as well as a dataset of linked
tweet-news pairs, which can benefit many
NLP applications; 2. in contrast to previ-
ous research which focuses on lexical fea-
tures within the short texts (text-to-word
information), we propose a graph based
latent variable model that models the in-
ter short text correlations (text-to-text in-
formation). This is motivated by the ob-
servation that a tweet usually only cov-
ers one aspect of an event. We show that
using tweet specific feature (hashtag) and
news specific feature (named entities) as
well as temporal constraints, we are able to
extract text-to-text correlations, and thus
completes the semantic picture of a short
text. Our experiments show significant im-
provement of our new model over base-
lines with three evaluation metrics in the
new task.
</bodyText>
<sectionHeader confidence="0.999625" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999754761904762">
Recently there has been an increasing interest in
language understanding of Twitter messages. Re-
searchers (Speriosui et al., 2011; Brody and Di-
akopoulos, 2011; Jiang et al., 2011) were in-
terested in sentiment analysis on Twitter feeds,
and opinion mining towards political issues or
politicians (Tumasjan et al., 2010; Conover et al.,
2011). Others (Ramage et al., 2010; Jin et al.,
2011) summarized tweets using topic models. Al-
though these NLP techniques are mature, their
performance on tweets inevitably degrades, due to
the inherent sparsity in short texts. In the case
of sentiment analysis, while people are able to
achieve 87.5% accuracy (Maas et al., 2011) on a
movie review dataset (Pang and Lee, 2004), the
performance drops to 75% (Li et al., 2012) on
a sentence level movie review dataset (Pang and
Lee, 2005). The problem worsens when some
existing NLP systems cannot produce any results
given the short texts. Considering the following
tweet:
</bodyText>
<subsubsectionHeader confidence="0.742118">
Pray for Mali...
</subsubsectionHeader>
<bodyText confidence="0.996227142857143">
A typical event extraction/discovery system (Ji
and Grishman, 2008) fails to discover the war
event due to the lack of context information (Ben-
son et al., 2011), and thus fails to shed light on the
users focus/interests.
To enable the NLP tools to better understand
Twitter feeds, we propose the task of linking a
tweet to a news article that is relevant to the tweet,
thereby augmenting the context of the tweet. For
example, we want to supplement the implicit con-
text of the above tweet with a news article such as
the following entitled:
State of emergency declared in Mali
where abundant evidence can be fed into an off-
the-shelf event extraction/discovery system. To
create a gold standard dataset, we download tweets
spanning over 18 days, each with a url linking to a
news article of CNN or NYTIMES, as well as all
the news of CNN and NYTIMES published during
the period. The goal is to predict the url referred
news article based on the text in each tweet.1 We
</bodyText>
<footnote confidence="0.992321">
1The data and code is publicly available at www.cs.
</footnote>
<page confidence="0.940668">
239
</page>
<note confidence="0.91526">
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 239–249,
Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics
</note>
<bodyText confidence="0.994204096385543">
believe many NLP tasks will benefit from this task.
In fact, in the topic modeling research, previous
work (Jin et al., 2011) already showed that by in-
corporating webpages whose urls are contained
in tweets, the tweet clustering purity score was
boosted from 0.280 to 0.392.
Given the few number of words in a tweet (14
words on average in our dataset), the traditional
high dimensional surface word matching is lossy
and fails to pinpoint the news article. This con-
stitutes a classic short text semantics impediment
(Agirre et al., 2012). Latent variable models are
powerful by going beyond the surface word level
and mapping short texts into a low dimensional
dense vector (Socher et al., 2011; Guo and Diab,
2012b). Accordingly, we apply a latent variable
model, namely, the Weighted Textual Matrix Fac-
torization [WTMF] (Guo and Diab, 2012b; Guo
and Diab, 2012c) to both the tweets and the news
articles. WTMF is a state-of-the-art unsupervised
model that was tested on two short text similar-
ity datasets: (Li et al., 2006) and (Agirre et al.,
2012), which outperforms Latent Semantic Anal-
ysis [LSA] (Landauer et al., 1998) and Latent
Dirichelet Allocation [LDA] (Blei et al., 2003) by
a large margin. We employ it as a strong baseline
in this task as it exploits and effectively models the
missing words in a tweet, in practice adding thou-
sands of more features for the tweet, by contrast
LDA, for example, only leverages observed words
(14 features) to infer the latent vector for a tweet.
Apart from the data sparseness, our dataset pro-
poses another challenge: a tweet usually covers
only one aspect of an event. In our previous ex-
ample, the tweet only contains the location Mali
while the event is about French army participated
in Mali war. In this scenario, we would like to find
the missing elements of the tweet such as French,
war from other short texts, to complete the seman-
tic picture of Pray in Mali tweet. One drawback
of WTMF for our purposes is that it simply mod-
els the text-to-word information without leverag-
ing the correlation between short texts. While
this is acceptable on standard short text similarity
datasets (data points are independently generated),
it ignores some valuable information characteristi-
cally present in our dataset: (1) The tweet specific
features such as hashtags. Hashtags prove to be
a direct indication of the semantics of tweets (Ra-
mage et al., 2010); (2) The news specific features
columbia.edu/˜weiwei
such as named entities in a document. Named en-
tities acquired from a news document, typically
with high accuracy using Named Entity Recog-
nition [NER] tools, may be particularly informa-
tive. If two texts mention the same entities then
they might describe the same event; (3) The tem-
poral information in both genres (tweets and news
articles). We note that there is a higher chance
of event description overlap between two texts if
their time of publication is similar.
In this paper, we study the problem of min-
ing and exploiting correlations between texts us-
ing these features. Two texts may be considered
related or complementary if they share a hash-
tag/NE or satisfies the temporal constraints. Our
proposed latent variable model not only models
text-to-word information, but also is aware of the
text-to-text information (illustrated in Figure 1):
two linked texts should have similar latent vec-
tors, accordingly the semantic picture of a tweet is
completed by receiving semantics from its related
tweets. We incorporate this additional information
in the WTMF model. We also show the differ-
ent impact of the text-to-text relations in the tweet
genre and news genre. We are able to achieve sig-
nificantly better results than with a text-to-words
WTMF model. This work can be regarded as a
short text modeling approach that extends previ-
ous work however with a focus on combining the
mining of information within short texts coupled
with utilizing extra shared information across the
short texts.
</bodyText>
<sectionHeader confidence="0.935688" genericHeader="introduction">
2 Task and Data
</sectionHeader>
<bodyText confidence="0.999938588235294">
The task is given the text in a tweet, a system aims
to find the most relevant news article. For gold
standard data, we harvest all the tweets that have a
single url link to a CNN or NYTIMES news arti-
cle, dated from the 11th of Jan to the 27th of Jan,
2013. In evaluation, we consider this url-referred
news article as the gold standard – the most rele-
vant document for the tweet, and remove the url
from the text of the tweet. We also collect all the
news articles from both CNN and NYTIMES from
RSS feeds during the same timeframe. Each tweet
entry has the published time, author, text; each
news entry contains published time, title, news
summary, url. The tweet/news pairs are extracted
by matching urls. We manually filtered “trivial”
tweets where the tweet content is simply the news
title or news summary. The final dataset results in
</bodyText>
<page confidence="0.997164">
240
</page>
<figureCaption confidence="0.987495">
Figure 1: (a) WTMF. (b) WTMF-G: the tweet nodes t and news nodes n are connected by hashtags, named entities or
temporal edges (for simplicity, the missing tokens are not shown in the figure)
</figureCaption>
<equation confidence="0.9111402">
#healthcare Obama
t1 t2
t3
t1 t2
t3
w1 w2 w3 w4 w5 w6 w7 w8
w1 w2 w3 w4 w5 w6 w7 w8
n
1
n2
n
1
n2
temporal (b)
(a)
</equation>
<bodyText confidence="0.986136">
34,888 tweets and 12,704 news articles.
It is worth noting that the news corpus is not
restricted to current events. It covers various gen-
res and topics, such as travel guides. e.g. World’s
most beautiful lakes, and health issues, e.g. The
importance of a ‘stop day’, etc.
</bodyText>
<subsectionHeader confidence="0.965958">
2.1 Evaluation metric
</subsectionHeader>
<bodyText confidence="0.99997805">
For our task evaluation, ideally, we would like
the system to be able to identify the news arti-
cle specifically referred to by the url within each
tweet in the gold standard. However, this is very
difficult given the large number of potential can-
didates, especially those with slight variations.
Therefore, following the Concept Definition Re-
trieval task in (Guo and Diab, 2012b) and (Steck,
2010) we use a metric for evaluating the ranking
of the correct news article to evaluate the systems,
namely, ATOPt, area under the TOPKt(k) recall
curve for a tweet t. Basically, it is the normal-
ized ranking E [0, 1] of the correct news article
among all candidate news articles: ATOPt = 1
means the url-referred news article has the highest
similarity value with the tweet (a correct NARU);
ATOPt = 0.95 means the similarity value with
correct news article is larger than 95% of the can-
didates, i.e. within the top 5% of the candidates.
ATOPt is calculated as follows:
</bodyText>
<equation confidence="0.942970333333333">
in
1
ATOPt = TOPKt(k)dk
</equation>
<bodyText confidence="0.999816545454545">
where TOPKt(k) = 1 if the url referred news arti-
cle is in the “top k” list, otherwise TOPKt(k) = 0.
Here k E [0, 1] is the relative position (when
k = 1, it means all the candidates).
We also include other metrics to examine if the
system is able to rank the url referred news arti-
cle in the first few returned results: TOP10 recall
hit rate to evaluate whether the correct news is in
the top 10 results, and RR, Reciprocal Rank= 1/r
(i.e., RR= 1/3 when the correct news article is
ranked at the 3rd highest place).
</bodyText>
<sectionHeader confidence="0.990244" genericHeader="method">
3 Weighted Textual Matrix Factorization
</sectionHeader>
<bodyText confidence="0.999958">
The WTMF model (Guo and Diab, 2012a) has
been successfully applied to the short text simi-
larity task, achieving state-of-the-art unsupervised
performance. This can be attributed to the fact that
it models the missing tokens as features, thereby
adding many more features for a short text. The
missing words of a sentence are defined as all the
vocabulary of the training corpus minus the ob-
served words in a sentence. Missing words serve
as negative examples for the semantics of a short
text: the short text should not be related to the
missing words.
As per (Guo and Diab, 2012b), the corpus is
represented in a matrix X, where each cell stores
the TF-IDF values of words. The rows of X are
words and columns are short texts. As in Figure
2, matrix X is approximated by the product of a
K x M matrix P and a K x N matrix Q. Accord-
ingly, each sentence sj is represented by a K di-
mensional latent vector Q·,j. Similarly a word wi
is generalized by P·,i. Therefore, the inner product
of a word vector P·,i and a short text vector Q·,j is
to approximate the cell Xij (shaded part in Figure
2). In this way, the missing words are modeled by
requiring the inner product of a word vector and
short text vector to be close to 0 (the word and the
short text should be irrelevant).
Since 99% cells in X are missing tokens (0
value), the impact of observed words is signifi-
cantly diminished. Therefore a small weight wm
is assigned for each 0 cell (missing tokens) in the
matrix X in order to preserve the influence of ob-
served words. P and Q are optimized by minimize
the objective function:
</bodyText>
<page confidence="0.996397">
241
</page>
<figureCaption confidence="0.996765">
Figure 2: Weighted Textual Matrix Factorization
</figureCaption>
<equation confidence="0.9731792">
E Wij (P·,i · Q·,j − Xij)2 + λ||P||22 + λ||Q||22
j
� 1, if Xij =� 0
Wi,j = wM, if Xij = 0
(2)
</equation>
<bodyText confidence="0.972771">
where A is a regularization term.
</bodyText>
<sectionHeader confidence="0.994341" genericHeader="method">
4 Creating Text-to-text Relations via
Twitter/News Features
</sectionHeader>
<bodyText confidence="0.9999485">
WTMF exploits the text-to-word information in a
very nuanced way, while the dependency between
texts is ignored. In this Section, we introduce how
to create text-to-text relations.
</bodyText>
<subsectionHeader confidence="0.996695">
4.1 Hashtags and Named Entities
</subsectionHeader>
<bodyText confidence="0.999844256410256">
Hashtags highlight the topics in tweets, e.g., The
#flu season has started. We believe two tweets
sharing the same hashtag should be related, hence
we place a link between them to explicitly inform
the model that these two tweets should be similar.
We find only 8,701 tweets out of 34,888 include
hashtags. In fact, we observe many hashtag words
are mentioned in tweets without explicitly being
tagged with #. To overcome the hashtag sparse-
ness issue, one can resort to keywords recommen-
dation algorithms to mine hashtags for the tweets
(Yang et al., 2012). In this paper, we adopt a sim-
ple but effective approach: we collect all the hash-
tags in the dataset, and automatically hashtag any
word in a tweet if that word appears hashtagged in
any other tweets. This process resulted in 33,242
tweets automatically labeled with hashtags. For
each tweet, and for each hashtag it contains, we
extract k tweets that contain this hashtag, assum-
ing they are complementary to the target tweet,
and link the k tweets to the target tweet. If there
are more than k tweets found, we choose the top
k ones that are most chronologically close to the
target tweet. The statistics of links can be found in
table 2.
Named entities are some of the most salient fea-
tures in a news article. Directly applying Named
Entity Recognition (NER) tools on news titles or
tweets results in many errors (Liu et al., 2011) due
to the noise in the data, such as slang and capital-
ization. Accordingly, we first apply the NER tool
on news summaries, then label named entities in
the tweets in the same way as labeling the hash-
tags: if there is a string in the tweet that matches
a named entity from the summaries, then it is la-
beled as a named entity in the tweet. 25,132 tweets
are assigned at least one named entity.2 To create
the similar tweet set, we find k tweets that also
contain the named entity.
</bodyText>
<subsectionHeader confidence="0.99468">
4.2 Temporal Relations
</subsectionHeader>
<bodyText confidence="0.999994352941177">
Tweets published in the same time interval have
a larger chance of being similar than those are
not chronologically close (Wang and McCallum,
2006). However, we cannot simply assume any
two tweets are similar only based on the times-
tamp. Therefore, for a tweet we link it to the
k most similar tweets whose published time is
within 24 hours of the target tweet’s timestamp.
We use the similarity score returned by WTMF
model to measure the similarity of two tweets.
We experimented with other features such as au-
thorship. We note that it was not a helpful feature.
While authorship information helps in the task of
news/tweets recommendation for a user (Corso et
al., 2005; Yan et al., 2012), the authorship infor-
mation is too general for this task where we target
on “recommending” a news article for a tweet.
</bodyText>
<subsectionHeader confidence="0.999779">
4.3 Creating Relations on News
</subsectionHeader>
<bodyText confidence="0.917195045454545">
We extract the 3 subgraphs (based on hash-
tags, named entities and temporal) on news ar-
ticles. However, automatically tagging hashtags
or named entities leads to much worse perfor-
mance (around 93% ATOP values, a 3% decrease
from baseline WTMF). There are several reasons
for this: 1. When a hashtag-matched word ap-
pears in a tweet, it is often related to the central
meaning of the tweet, however news articles are
generally much longer than tweets, resulting in
many more hashtags/named entities matches even
though these named entities may not be closely re-
lated. 2. The noise introduced during automatic
NER accumulates much faster given the large
number of named entities in news data. There-
fore we only extract temporal relations for news
articles.
2Note that there are some false positive named entities
detected such as apple. We plan to address removing noisy
named entities and hashtags in future work
�
i
</bodyText>
<page confidence="0.992561">
242
</page>
<sectionHeader confidence="0.990162" genericHeader="method">
5 WTMF on Graphs
</sectionHeader>
<bodyText confidence="0.9999891">
We propose a novel model to incorporate the links
generated as described in the previous section.
If two texts are connected by a link, it means
they should be semantically similar. In the WTMF
model, we would like the latent vectors of two
text nodes Q·,j1, Q·,j2 to be as similar as possible,
namely that their cosine similarity to be close to 1.
To implement this, we add a regularization term in
the objective function of WTMF (equation 2) for
each linked pairs Q·,j1, Q·,j2:
</bodyText>
<equation confidence="0.992539">
6 · ( Q·,j1 · Q·,j2 − 1)2 (3)
|Q ·,j1 ||Q·,j2|
</equation>
<bodyText confidence="0.999695833333333">
where |Q·,j |denotes the length of vector Q·,j. The
coefficient 6 denotes the importance of the text-to-
text links. A larger 6 means we put more weights
on the text-to-text links and less on the text-to-
word links. We refer to this model as WTMF-G
(WTMF on graphs).
</bodyText>
<subsectionHeader confidence="0.669354">
5.1 Inference
</subsectionHeader>
<bodyText confidence="0.997506444444444">
Alternating Least Square [ALS] is used for in-
ference in weighted matrix factorization (Srebro
and Jaakkola, 2003). However, ALS is no longer
applicable here with the new regularization term
(equation 3) involving the length of text vectors
|Q·,j|, which is not in quadratic form. Therefore
we approximate the objective function by treating
the vector length |Q·,j |as fixed values during the
ALS iterations:
</bodyText>
<equation confidence="0.998487285714286">
( )−1 Q W˜ (i)X·,i
P·,i = Q W˜ (i)Q&gt; + λI
— (P W˜(j)P&gt; + λI + δL2 dia L2 T )−1
Q·,j —(j)Q&apos;,s(j) g� (s(j))�Q.,s(j)
( )
P W˜ (j)X&gt; j,· + δL(j)Q·,s(j)Ln(j)
(4)
</equation>
<bodyText confidence="0.9998794">
We define n(j) as the linked neighbors of short
text j, and Q·,n(j) as the set of latent vectors of
j’s neighbors. The reciprocal of length of these
vectors in the current iteration are stored in Ls(j).
Similarly, the reciprocal of the length of the short
text vector Q·,j is Lj. W˜(i) = diag(W·,i) is an
M × M diagonal matrix containing the ith row of
weight matrix W. Due to limited space, the details
of the optimization are not shown in this paper;
they can be found in (Steck, 2010).
</bodyText>
<sectionHeader confidence="0.999959" genericHeader="evaluation">
6 Experiments
</sectionHeader>
<subsectionHeader confidence="0.999288">
6.1 Experiment Setting
</subsectionHeader>
<bodyText confidence="0.99988284">
Corpora: We use the same corpora as in (Guo
and Diab, 2012b): Brown corpus (each sentence is
treated as a document), sense definitions of Wik-
tionary and Wordnet (Fellbaum, 1998). The tweets
and news articles are also included in the cor-
pus, generating 441,258 short texts and 5,149,122
words. The data is tokenized, POS-tagged by
Stanford POS tagger (Toutanova et al., 2003),
and lemmatized by WordNet::QueryData.pm. The
value of each word in matrix X is its TF-IDF value
in the short text.
Baselines: We present 4 baselines: 1. Informa-
tion Retrieval model [IR], which simply treats a
tweet as a document, and performs traditional sur-
face word matching. 2. LDA-0 with Gibbs Sam-
pling as inference method. We use the inferred
topic distribution 0 as a latent vector to represent
the tweet/news. 3. LDA-wvec. The problem with
LDA-0 is the inferred topic distribution latent vec-
tor is very sparse with only a few non-zero val-
ues, resulting in many tweet/news pairs receiving
a high similarity value as long as they are in the
same topic domain. Hence following (Guo and
Diab, 2012b), we first compute the latent vector
of a word by P(z|w) (topic distribution per word),
then average the word latent vectors weighted by
TF-IDF values to represent the short text, which
yields much better results. 4. WTMF. In these
baselines, hashtags and named entities are simply
treated as words.
To curtail variation in results due to random-
ness, each reported number is the average of 10
runs. For WTMF and WTMF-G, we assign the
same initial random values and run 20 iterations.
In both systems we fix the missing words weight
as wm = 0.01 and regularization coefficient at
A = 20, which is the best condition of WTMF
found in (Guo and Diab, 2012b; Guo and Diab,
2012c). For LDA-0 and LDA-wvec, we run Gibbs
Sampling based LDA for 2000 iterations and aver-
age the model over the last 10 iterations.
Evaluation: The similarity between a tweet and
a news article is measured by cosine similarity. A
news article is represented as the concatenation of
its title and its summary, which yields better per-
formance.3
As in (Guo and Diab, 2012b), for each tweet,
we collect the 1,000 news articles published prior
to the tweet whose dates of publication are clos-
est to that of the tweet. 4 The cosine similarity
</bodyText>
<footnote confidence="0.998127">
3While these are separated, WTMF receive ATOP
95.558% for representing news article as titles and 94.385%
for representing news article as summaries
4Ideally we want to include all the news articles published
</footnote>
<page confidence="0.982145">
243
</page>
<table confidence="0.999864555555555">
Models Parameters ATOP TOP10 RR
dev test dev test dev test
IR - 90.795% 90.743% 73.478% 74.103% 46.024% 46.281%
LDA-θ α = 0.05, β = 0.05 81.368% 81.251% 32.328% 31.207% 13.134% 12.469%
LDA-wvec α = 0.05, β = 0.05 94.148% 94.196% 53.500% 53.952% 28.743% 27.904%
WTMF - 95.964% 96.092% 75.327% 76.411% 45.310% 46.270%
WTMF-G k = 3, 6 = 3 96.450% 96.543% 76.485% 77.479% 47.516% 48.665%
WTMF-G k = 5, 6 = 3 96.613% 96.701% 76.029% 77.176% 47.197% 48.189%
WTMF-G k = 4, 6 = 3 96.510% 96.610% 77.782% 77.782% 47.917% 48.997%
</table>
<tableCaption confidence="0.999823">
Table 1: ATOP Performance (latent dimension D = 100 for LDA/WTMF/WTMF-G)
</tableCaption>
<figure confidence="0.9976165">
96.8
96.6
96
96.4
96.2
0 1 2 3 4
δ
(a) ATOP
0 1 2 3 4
δ
(b) TOP10
49
48
47
46
45
dev
test
0 1 2 3 4
δ
(c) RR
ATOP
</figure>
<figureCaption confidence="0.978054">
Figure 3: Impact of 6 (D = 100, k = 4)
</figureCaption>
<figure confidence="0.995729384615385">
78
77.5
77
TOP10
76.5
76
RR
75.5
75
dev
test
dev
test
</figure>
<figureCaption confidence="0.752712571428572">
score between the url referred news article and the
tweet is compared against the scores of these 1,000
news articles to calculate the metric scores. 1/10 of
the tweet/news pairs are used as development set,
based on which all the parameters are tuned. The
metrics ATOP, TOP10 and RR are used to evaluate
the performance of systems.
</figureCaption>
<subsectionHeader confidence="0.901177">
6.2 Results
</subsectionHeader>
<bodyText confidence="0.999764230769231">
Table 1 summarizes the performance of the base-
lines and WTMF-G at latent dimension D = 100.
All the parameters are chosen based on the de-
velopment set. For WTMF-G, we try different
values of k (the number of neighbors linked to a
tweet/news for a hashtag/NE/time constraint) and
6 (the weight of link information). We choose to
model the links in four subgraphs: (a) hashtags
in tweet; (b) named entities in tweet; (c) time in
tweet; (d) time in news article. For LDA we tune
the hyperparameter α (Dirichlet prior for topic dis-
tribution of a document) and β (Dirichlet prior for
word distribution given a topic). It is worth noting
that ATOP measures the overall ranking in 1000
samples while TOP10/RR focus on whether the
aligned news article is in the first few returned re-
sults.
Same as reported in (Guo and Diab, 2012b),
LDA-θ has the worst results due to directly using
prior to the tweet, however, that will give a bias to some
tweets, since the latter tweets have a larger candidate set than
the earlier ones
the inferred topic distribution of a text θ. The in-
ferred topic vector has only a few non-zero values,
hence a lot of information is missing. LDA-wvec
preserves more information by creating a dense la-
tent vector from the topic distribution of a word
P(z|w), and thus does much better in ATOP.
It is interesting to see that IR model has a
very low ATOP (90.795%) and an acceptable RR
(46.281%) score, in contrast to LDA-wvec with
a high ATOP (94.148%) and a low RR(27.904%)
score. This is caused by the nature of the two mod-
els. LDA-wvec is able to identify global coarse
grained topic information (such as politics vs. eco-
nomics), hence receiving a high ATOP by exclud-
ing the most irrelevant news articles, however it
does not distinguish fine grained difference such
as Hillary vs. Obama. IR model exerts the oppo-
site influence via word matching. It ranks a cor-
rect news article very high if overlapping words
exist (leading to a high RR), or the news article is
ranked very low if no overlapping words (hence a
low ATOP).
We can conclude WTMF is a very strong base-
line given that it achieves high scores with three
metrics. As a latent variable model, it is able to
capture global topics (+1.89% ATOP over LDA-
wvec); moreover, by explicitly modeling missing
words, the existence of a word is also encoded in
the latent vector (+2.31% TOP10 and −0.011%
RR over IR model).
</bodyText>
<page confidence="0.992441">
244
</page>
<figure confidence="0.997971517241379">
TOP10
RR
97
96.5
ATOP
95.5
96
95
WTMF
WTMF G
80
78
WTMF
WTMF−G
72
70
76
74
50
48
46
44
42
40
WTMF
WTMF−G
50 75 100 125 150 50 75 100 125 150 50 75 100 125 150
D D D
(a) ATOP (b) TOP10 (c) RR
</figure>
<figureCaption confidence="0.999968">
Figure 4: Impact of latent dimension D (k = 4)
</figureCaption>
<table confidence="0.998315833333333">
Conditions Links ATOP TOP10 RR
dev test dev test dev test
hashtags tweets 375,371 +0.397% +0.379% +1.015% +1.021% +0.504% +0.641%
NE tweets 164,412 +0.141% +0.130% +0.598% +0.479% +0.278% +0.294%
time tweet 139,488 +0.126% +0.136% +0.512% +0.503% +0.241% +0.327%
time news 50,008 +0.036% +0.026% +0.156% +0.256% +1.890% +1.924%
</table>
<tableCaption confidence="0.621413375">
full model (all 4 subgraphs) 573,999 +0.546% +0.518% +1.556% +1.371% +2.607% +2.727%
full model minus hashtags tweets 336,963 +0.288% +0.276% +1.129% +1.037% +2.488% +2.541%
full model minus NE tweets 536,333 +0.528% +0.503% +1.518% +1.393% +2.580% +2.680%
full model minus time tweet 466,207 +0.457% +0.426% +1.281% +1.145% +2.449% +2.554%
full model minus time news 523,991 +0.508% +0.490% +1.300% +1.190% +0.632% +0.785%
author tweet 21,318 +0.043% +0.042% +0.028% +0.057% −0.003% −0.017%
full model plus author tweet 593,483 +0.575% +0.545% +1.465% +1.336% +2.415% +2.547%
Table 2: Contribution of subgraphs when D = 100, k = 4, 6 = 3 (gain over baseline WTMF)
</tableCaption>
<bodyText confidence="0.999852535714286">
With WTMF being a very challenging baseline,
WTMF-G can still significantly improve all 3 met-
rics. In the case k = 4, 6 = 3 compared to WTMF,
WTMF-G receives +1.371% TOP10, +2.727%
RR, and +0.518% ATOP value (this is a signifi-
cant improvement of ATOP value considering that
it is averaged on 30,000 data points, at an already
high level of 96% reducing error rate by 13%). All
the improvement of WTMF-G over WTMF is sta-
tistically signicant at the 99% condence level with
a two-tailed paired t-test.
We also present results using different number
of links k in WTMF-G in table 1. We experi-
ment with k = {3, 4, 5}. k = 4 is found to
be the optimal value (although k = 5 has a bet-
ter ATOP). Figure 3 demonstrates the impact of
6 = {0, 1, 2, 3, 4} on each metric when k = 4.
Note when 6 = 0 no link is used, which is the
baseline WTMF. We can see using links is always
helpful. When 6 = 4, we receive a higher ATOP
value but lower TOP10 and RR.
Figure 4 illustrates the impact of dimension
D = {50, 75,100,125,150} on WTMF and
WTMF-G (k = 4) on the test set. The trends
hold in different D values with a consistent im-
provement. Generally a larger D leads to a better
performance. In all conditions WTMF-G outper-
forms WTMF.
</bodyText>
<subsectionHeader confidence="0.999961">
6.3 Contribution of Subgraphs
</subsectionHeader>
<bodyText confidence="0.999886428571428">
We are interested in the contribution of each fea-
ture subgraph. Therefore we list the impact of
individual components in table 2. The impact of
each subgraph is evaluated in two conditions: (a)
the subgraph-only; (b) the full-model-minus the
subgraph. The full model is the combination of the
4 subgraphs (which is also the best model k = 4
in table 1). In the last two rows of table 2 we also
present the results of using authorship only and the
full model plus authorship. The 2nd column lists
the number of links in the subgraph. To highlight
the difference, we report the gain of each model
over the baseline model WTMF.
We have several interesting observations from
table 2. It is clear that the hashtag sub-
graph on tweets is the most useful subgraph:
with hashtag tweet it has the best ATOP and
TOP10 values among subgraph-only condition
(ATOP: +0.379% vs. 2nd best +0.136%, TOP10:
+1.021% vs. 2nd best +0.503%), while in the
full-model-minus condition, minus hashtag has
the lowest ATOP and TOP10. Observing that it
also contains the most links, we believe the cover-
age is another important reason for the great per-
formance.
It seems the named entity subgraph helps the
least. Looking into the extracted named entities
and hashtags, we find many popular named enti-
</bodyText>
<page confidence="0.996179">
245
</page>
<bodyText confidence="0.999959833333333">
ties are covered by hashtags. That said, adding
named entity subgraph into final model has a pos-
itive contribution.
It is worth noting that the time news subgraph
has the most positive influence on RR. This is be-
cause temporal information is very salient in news
domain: usually there are several reports to de-
scribe an event within a short period, therefore the
news latent vector is strengthened by receiving se-
mantics from its neighbors.
At last, we analyze the influence of author-
ship of tweets. Adding authorship into the full
model greatly hurts the scores of TOP10 and RR,
whereas it is helpful to ATOP. This is understand-
able since by introducing author links between
tweets, to some degree we are averaging the la-
tent vectors of tweets written by the same per-
son. Therefore, for a tweet whose topic is vague
and hard to detect, it will get some prior knowl-
edge of topics through the author links (hence in-
crease ATOP), whereas this prior knowledge be-
comes noise for the tweets that are already handled
very well by the model (hence decrease TOP10
and RR).
</bodyText>
<subsectionHeader confidence="0.974261">
6.4 Error Analysis
</subsectionHeader>
<bodyText confidence="0.904308176470588">
We look closely into ATOP results to obtain an in-
tuitive feel for what is captured and what is not.
For example, the ATOP score of WTMF for the
tweet-news pair below is 89.9%:
Tweet: ...stoked growing speculation that Pak-
istan’s powerful military was quietly supporting
moves... @declanwalsh
News: Pakistan Supreme Court Orders Arrest of
Prime Minister
By identifying “Pakistan” and “Supreme Court”
as hashtags/named entity, WTMF-G is able to
propagate the semantics from the following two
informative tweets to the original tweet, hence
achieving a higher ATOP score of 91.9%.
#Pakistan Supreme Court orders the arrest of the
PM on corruption charges.
A discouraging sign from a tumultuous political
system: Pakistan’s Supreme Court ordered the ar-
rest of PM Ashraf today.
Below is an example that shows the deficiency of
both WTMF and WTMF-G:
Tweet: Another reason to contemplate moving: an
early death
News: America flunks its health exam
In this case WTMF and WTMF-G achieve a
low ATOP of 69.8% and 75.1%, respectively. The
only evidence the latent variable models rely on
is lexical items (WTMF-G extract additional text-
to-text correlation by word matching). To pin-
point the url referred news articles, other advanced
NLP features should be exploited. In this case, we
believe sentiment information could be helpful –
both tweet and the news article contain a negative
polarity.
</bodyText>
<sectionHeader confidence="0.999858" genericHeader="related work">
7 Related Work
</sectionHeader>
<bodyText confidence="0.99895335">
Short Text Semantics: The field of short text se-
mantics has progressed immensely in recent years.
Early work focus on word pair similarity in the
high dimensional space. The word pair similarity
is either knowledge based (Mihalcea et al., 2006;
Tsatsaronis et al., 2010) or corpus based (Li et
al., 2006; Islam and Inkpen, 2008), where co-
occurrence information cannot be efficiently ex-
ploited. Guo and Diab (2012b; 2012a; 2013) show
the superiority of the latent space approach in the
WTMF model achieving state-of-the-art perfor-
mance on two datasets. However, all of them only
reply on text-to-word information. In this paper,
we focus on modeling inter-text relations induced
by Twitter/news features. We extend the WTMF
model and adapt it into tweets modeling, achiev-
ing significantly better results.
Modeling Tweets in a Latent Space: Ramage
et al. (2010) also use hashtags to improve the la-
tent representation of tweets in a LDA framework,
Labeled-LDA (Ramage et al., 2009), treating each
hashtag as a label. Similar to the experiments pre-
sented in this paper, the result of using Labeled-
LDA alone is worse than the IR model, due to the
sparseness in the induced LDA latent vector. Jin et
al. (2011) apply an LDA based model on cluster-
ing by incorporating url referred documents. The
semantics of long documents are transferred to the
topic distribution of tweets.
News recommendation: A news recommen-
dation system aims to recommend news articles
to a user based on the features (e.g., key words,
tags, category) in the documents that the user likes
(hence these documents form a training set) (Clay-
pool et al., 1999; Corso et al., 2005; Lee and Park,
2007). Our paper resembles it in searching for a
related news article. However, we target on rec-
ommending news article only based on a tweet,
which is a much smaller context than the set of
favorite documents chosen by a user.
</bodyText>
<page confidence="0.994022">
246
</page>
<bodyText confidence="0.99824705">
Research on Tweets: In (Duan et al., 2010), url
availability is an important feature for tweets rank-
ing. However, the number of tweets with an ex-
plicit url is very limited. Huang et al. (2012) pro-
pose a graph-based framework to propagate tweet
ranking scores, where relevant web documents is
found to be helpful to discover informative tweets.
Both work can take advantage of our work to ei-
ther extract potential url features or retrieve topi-
cally similar web documents.
(Sankaranarayanan et al., 2009) aims at captur-
ing tweets that correspond to late breaking news.
However, they cluster tweets and simply choose
a url referred news in those tweets as the related
news for the whole cluster (the urls are visible
to the systems). (Abel et al., 2011) is most re-
lated work to our paper, however their focus is the
user profiling task, therefore they do not provide
a paired tweet/news data set and have to conduct
manual evaluation.
</bodyText>
<sectionHeader confidence="0.998661" genericHeader="conclusions">
8 Conclusion
</sectionHeader>
<bodyText confidence="0.999885">
We propose a Linking-Tweets-to-News task,
which potentially benefits many NLP applications
where off-the-shelf NLP tools can be applied to
the most relevant news. We also collect a gold
standard dataset by crawling tweets each with a url
referring to a news article. We formalize the link-
ing task as a short text modeling problem, and ex-
tract Twitter/news specific features to extract text-
to-text relations, which are incorporated into a la-
tent variable model. We achieve significant im-
provement over baselines.
</bodyText>
<sectionHeader confidence="0.997364" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9999622">
This work was supported by the U.S. Army Re-
search Laboratory under Cooperative Agreement
No. W911NF- 09-2-0053 (NS-CTA), the U.S.
NSF CAREER Award under Grant IIS-0953149,
the U.S. NSF EAGER Award under Grant No. IIS-
1144111, the U.S. DARPA FA8750-13-2-0041 -
Deep Exploration and Filtering of Text (DEFT)
Program and CUNY Junior Faculty Award. The
views and conclusions contained in this document
are those of the authors and should not be inter-
preted as representing the official policies, either
expressed or implied, of the U.S. Government.
The U.S. Government is authorized to reproduce
and distribute reprints for Government purposes
notwithstanding any copyright notation here on.
</bodyText>
<sectionHeader confidence="0.996048" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.969343596153846">
Fabian Abel, Qi Gao, Geert-Jan Houben, and Ke Tao.
2011. Semantic enrichment of twitter posts for user
profile construction on the social web. In Proceed-
ings of the 49th Annual Meeting of the Association
for Computational Linguistics.
Eneko Agirre, Daniel Cer, Mona Diab, and Aitor
Gonzalez-Agirre. 2012. Semeval-2012 task 6: A
pilot on semantic textual similarity. In First Joint
Conference on Lexical and Computational Seman-
tics (*SEM).
Edward Benson, Aria Haghighi, and Regina Barzilay.
2011. Event discovery in social media feeds. In
Proceedings of the 49th Annual Meeting of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies.
David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent dirichlet allocation. Journal of Ma-
chine Learning Research, 3.
Samuel Brody and Nicholas Diakopoulos. 2011.
Cooooooooooooooollllllllllllll! !!!!!!!!!!!!! using
word lengthening to detect sentiment in microblogs.
In Proceedings of the 2011 Conference on Empirical
Methods in Natural Language Processing.
Mark Claypool, Anuja Gokhale, Tim Miranda, Pavel
Murnikov, Dmitry Netes, and Matthew Sartin. 1999.
Combining content-based and collaborative filters in
an online newspaper. In In Proceedings of the ACM
SIGIR Workshop on Recommender Systems.
Michael Conover, Jacob Ratkiewicz, Matthew Fran-
cisco, Bruno Gonc¸alves, Filippo Menczer, and
Alessandro Flammini. 2011. Political polarization
on twitter. In ICWSM.
Gianna M. Del Corso, Antonio Gulli, and Francesco
Romani. 2005. Ranking a stream of news. In
WWW, pages 97–106.
Yajuan Duan, Long Jiang, Tao Qin, Ming Zhou, and
Heung-Yeung Shum. 2010. An empirical study on
learning to rank of tweets. In COLING.
Christiane Fellbaum. 1998. WordNet: An Electronic
Lexical Database. MIT Press.
Weiwei Guo and Mona Diab. 2012a. Learning the la-
tent semantics of a concept by its definition. In Pro-
ceedings of the 50th Annual Meeting of the Associa-
tion for Computational Linguistics.
Weiwei Guo and Mona Diab. 2012b. Modeling sen-
tences in the latent space. In Proceedings of the
50th Annual Meeting of the Association for Compu-
tational Linguistics.
Weiwei Guo and Mona Diab. 2012c. Weiwei: A sim-
ple unsupervised latent semantics based approach
for sentence similarity. In First Joint Conference on
Lexical and Computational Semantics (*SEM).
</reference>
<page confidence="0.990473">
247
</page>
<reference confidence="0.989769216216217">
Weiwei Guo and Mona Diab. 2013. Improving lexical
semantics for sentential semantics: Modeling selec-
tional preference and similar words in a latent vari-
able model. In The 2013 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies.
Hongzhao Huang, Arkaitz Zubiaga, Heng Ji, Hongbo
Deng, Dong Wang, Hieu Le, Tarek Abdelzather, Ji-
awei Han, Alice Leung, John Hancock, and Clare
Voss. 2012. Tweet ranking based on heterogeneous
networks. In Proceedings of the 24th International
Conference on Computational Linguistics.
Aminul Islam and Diana Inkpen. 2008. Semantic text
similarity using corpus-based word similarity and
string similarity. ACM Transactions on Knowledge
Discovery from Data, 2.
Heng Ji and Ralph Grishman. 2008. Refining event ex-
traction through cross-document inference. In Pro-
ceedings of ACL-08: HLT.
Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, and
Tiejun Zhao. 2011. Target-dependent twitter sen-
timent classification. In Proceedings of the 49th An-
nual Meeting ofAssociation for Computational Lin-
guistics.
Ou Jin, Nathan N. Liu, Kai Zhao, Yong Yu, and Qiang
Yang. 2011. Transferring topical knowledge from
auxiliary long texts for short text clustering. In Pro-
ceedings of the 20th ACM international conference
on Information and knowledge management.
Thomas K Landauer, Peter W. Foltz, and Darrell La-
ham. 1998. An introduction to latent semantic anal-
ysis. Discourse Processes, 25.
H. J. Lee and Sung Joo Park. 2007. Moners: A
news recommender for the mobile web. Expert Syst.
Appl., 32(1):143–150.
Yuhua Li, David McLean, Zuhair A. Bandar, James D.
O’Shea, and Keeley Crockett. 2006. Sentence simi-
larity based on semantic nets and corpus statistics.
IEEE Transaction on Knowledge and Data Engi-
neering, 18.
Hao Li, Yu Chen, Heng Ji, Smaranda Muresan, and
Dequan Zheng. 2012. Combining social cognitive
theories with linguistic features for multi-genre sen-
timent analysis. In In Proceedings of the 26th Pa-
cific Asia Conference on Language, Information and
Computation.
Xiaohua Liu, Shaodian Zhang, Furu Wei, and Ming
Zhou. 2011. Recognizing named entities in tweets.
In The Semanic Web: Research and Applications.
Andrew L. Maas, Raymond E. Daly, Peter T. Pham,
Dan Huang, Andrew Y. Ng, and Christopher Potts.
2011. Learning word vectors for sentiment analysis.
In Proceedings of the 49th Annual Meeting of the
Association for Computational Linguistics: Human
Language Technologies.
Rada Mihalcea, Courtney Corley, and Carlo Strappa-
rava. 2006. Corpus-based and knowledge-based
measures of text semantic similarity. In Proceed-
ings of the 21st National Conference on Articial In-
telligence.
Bo Pang and Lillian Lee. 2004. A sentimental educa-
tion: Sentiment analysis using subjectivity summa-
rization based on minimum cuts. In Proceedings of
the 42nd Meeting of the Association for Computa-
tional Linguistics.
Bo Pang and Lillian Lee. 2005. Seeing stars: Exploit-
ing class relationships for sentiment categorization
with respect to rating scales. In Proceedings of the
43rd Annual Meeting of the Association for Compu-
tational Linguistics.
Daniel Ramage, David Hall, Ramesh Nallapati, and
Christopher D. Manning. 2009. Labeled lda: A su-
pervised topic model for credit attribution in multi-
labeled corpora. In Proceedings of the 2009 Con-
ference on Empirical Methods in Natural Language
Processing.
Daniel Ramage, Susan Dumais, and Dan Liebling.
2010. Characterizing microblogs with topic mod-
els. In Proceedings of the Fourth International AAAI
Conference on Weblogs and Social Media.
Jagan Sankaranarayanan, Hanan Samet, Benjamin E.
Teitler, Michael D. Lieberman, and Jon Sperling.
2009. Twitterstand: news in tweets. In Proceedings
of the 17th ACM SIGSPATIAL International Confer-
ence on Advances in Geographic Information Sys-
tems.
Richard Socher, Eric H. Huang, Jeffrey Pennington,
Andrew Y. Ng, and Christopher D. Manning. 2011.
Dynamic pooling and unfolding recursive autoen-
coders for paraphrase detection. In Proceedings
of Advances in Neural Information Processing Sys-
tems.
Michael Speriosui, Nikita Sudan, Sid Upadhyay, and
Jason Baldridge. 2011. Twitter polarity classifica-
tion with label propagation over lexical links and the
follower graph. In Proceedings of the 2011 Con-
ference on Empirical Methods in Natural Language
Processing.
Nathan Srebro and Tommi Jaakkola. 2003. Weighted
low-rank approximations. In Proceedings of the
Twentieth International Conference on Machine
Learning.
Harald Steck. 2010. Training and testing of rec-
ommender systems on data missing not at random.
In Proceedings of the 16th ACM SIGKDD Inter-
national Conference on Knowledge Discovery and
Data Mining.
Kristina Toutanova, Dan Klein, Christopher D. Man-
ning, and Yoram Singer. 2003. Feature-rich part-of-
speech tagging with a cyclic dependency network.
In HLT-NAACL.
</reference>
<page confidence="0.96601">
248
</page>
<reference confidence="0.999700095238095">
George Tsatsaronis, Iraklis Varlamis, and Michalis
Vazirgiannis. 2010. Text relatedness based on a
word thesaurus. Journal of Articial Intelligence Re-
search, 37.
Andranik Tumasjan, Timm Oliver Sprenger, Philipp G.
Sandner, and Isabell M. Welpe. 2010. Predicting
elections with twitter: What 140 characters reveal
about political sentiment. In ICWSM.
Xuerui Wang and Andrew McCallum. 2006. Top-
ics over time: a non-markov continuous-time model
of topical trends. In In Proceedings of the 12th
ACM SIGKDD international conference on Knowl-
edge discovery and data mining.
Rui Yan, Mirella Lapata, and Xiaoming Li. 2012.
Tweet recommendation with graph co-ranking. In
Proceedings of the 24th International Conference on
Computational Linguistics.
Lei Yang, Tao Sun, Ming Zhang, and Qiaozhu Mei.
2012. We know what @you #tag: does the dual role
affect hashtag adoption? In Proceedings of the 21st
international conference on World Wide Web.
</reference>
<page confidence="0.99891">
249
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.516167">
<title confidence="0.820055">Linking Tweets to News: A Framework to Enrich Short Text Data in</title>
<affiliation confidence="0.917288333333333">Social Media and of Computer Science, Columbia Science Department and Linguistic Queens College and Graduate Center, City University of New of Computer Science, George Washington</affiliation>
<email confidence="0.999748">mtdiab@gwu.edu</email>
<abstract confidence="0.997415382352941">Many current Natural Language Processing [NLP] techniques work well assuming a large context of text as input data. However they become ineffective when applied to short texts such as Twitter feeds. To overcome the issue, we want to find a related newswire document to a given tweet to provide contextual support for NLP tasks. This requires robust modeling and understanding of the semantics of short texts. The contribution of the paper is two-fold: 1. we introduce the Linking-Tweets-to- News task as well as a dataset of linked tweet-news pairs, which can benefit many NLP applications; 2. in contrast to previous research which focuses on lexical features within the short texts (text-to-word information), we propose a graph based latent variable model that models the inter short text correlations (text-to-text information). This is motivated by the observation that a tweet usually only covers one aspect of an event. We show that using tweet specific feature (hashtag) and news specific feature (named entities) as well as temporal constraints, we are able to extract text-to-text correlations, and thus completes the semantic picture of a short text. Our experiments show significant improvement of our new model over baselines with three evaluation metrics in the new task.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Fabian Abel</author>
<author>Qi Gao</author>
<author>Geert-Jan Houben</author>
<author>Ke Tao</author>
</authors>
<title>Semantic enrichment of twitter posts for user profile construction on the social web.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="33406" citStr="Abel et al., 2011" startWordPosition="5803" endWordPosition="5806">ts with an explicit url is very limited. Huang et al. (2012) propose a graph-based framework to propagate tweet ranking scores, where relevant web documents is found to be helpful to discover informative tweets. Both work can take advantage of our work to either extract potential url features or retrieve topically similar web documents. (Sankaranarayanan et al., 2009) aims at capturing tweets that correspond to late breaking news. However, they cluster tweets and simply choose a url referred news in those tweets as the related news for the whole cluster (the urls are visible to the systems). (Abel et al., 2011) is most related work to our paper, however their focus is the user profiling task, therefore they do not provide a paired tweet/news data set and have to conduct manual evaluation. 8 Conclusion We propose a Linking-Tweets-to-News task, which potentially benefits many NLP applications where off-the-shelf NLP tools can be applied to the most relevant news. We also collect a gold standard dataset by crawling tweets each with a url referring to a news article. We formalize the linking task as a short text modeling problem, and extract Twitter/news specific features to extract textto-text relation</context>
</contexts>
<marker>Abel, Gao, Houben, Tao, 2011</marker>
<rawString>Fabian Abel, Qi Gao, Geert-Jan Houben, and Ke Tao. 2011. Semantic enrichment of twitter posts for user profile construction on the social web. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eneko Agirre</author>
<author>Daniel Cer</author>
<author>Mona Diab</author>
<author>Aitor Gonzalez-Agirre</author>
</authors>
<title>Semeval-2012 task 6: A pilot on semantic textual similarity.</title>
<date>2012</date>
<booktitle>In First Joint Conference on Lexical and Computational Semantics (*SEM).</booktitle>
<contexts>
<context position="4469" citStr="Agirre et al., 2012" startWordPosition="723" endWordPosition="726">ofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics believe many NLP tasks will benefit from this task. In fact, in the topic modeling research, previous work (Jin et al., 2011) already showed that by incorporating webpages whose urls are contained in tweets, the tweet clustering purity score was boosted from 0.280 to 0.392. Given the few number of words in a tweet (14 words on average in our dataset), the traditional high dimensional surface word matching is lossy and fails to pinpoint the news article. This constitutes a classic short text semantics impediment (Agirre et al., 2012). Latent variable models are powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accordingly, we apply a latent variable model, namely, the Weighted Textual Matrix Factorization [WTMF] (Guo and Diab, 2012b; Guo and Diab, 2012c) to both the tweets and the news articles. WTMF is a state-of-the-art unsupervised model that was tested on two short text similarity datasets: (Li et al., 2006) and (Agirre et al., 2012), which outperforms Latent Semantic Analysis [LSA] (Landauer et al., 1998) and Latent </context>
</contexts>
<marker>Agirre, Cer, Diab, Gonzalez-Agirre, 2012</marker>
<rawString>Eneko Agirre, Daniel Cer, Mona Diab, and Aitor Gonzalez-Agirre. 2012. Semeval-2012 task 6: A pilot on semantic textual similarity. In First Joint Conference on Lexical and Computational Semantics (*SEM).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Edward Benson</author>
<author>Aria Haghighi</author>
<author>Regina Barzilay</author>
</authors>
<title>Event discovery in social media feeds.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association</booktitle>
<contexts>
<context position="2880" citStr="Benson et al., 2011" startWordPosition="452" endWordPosition="456">s, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Mali... A typical event extraction/discovery system (Ji and Grishman, 2008) fails to discover the war event due to the lack of context information (Benson et al., 2011), and thus fails to shed light on the users focus/interests. To enable the NLP tools to better understand Twitter feeds, we propose the task of linking a tweet to a news article that is relevant to the tweet, thereby augmenting the context of the tweet. For example, we want to supplement the implicit context of the above tweet with a news article such as the following entitled: State of emergency declared in Mali where abundant evidence can be fed into an offthe-shelf event extraction/discovery system. To create a gold standard dataset, we download tweets spanning over 18 days, each with a url</context>
</contexts>
<marker>Benson, Haghighi, Barzilay, 2011</marker>
<rawString>Edward Benson, Aria Haghighi, and Regina Barzilay. 2011. Event discovery in social media feeds. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David M Blei</author>
<author>Andrew Y Ng</author>
<author>Michael I Jordan</author>
</authors>
<title>Latent dirichlet allocation.</title>
<date>2003</date>
<journal>Journal of Machine Learning Research,</journal>
<volume>3</volume>
<contexts>
<context position="5116" citStr="Blei et al., 2003" startWordPosition="829" endWordPosition="832">powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accordingly, we apply a latent variable model, namely, the Weighted Textual Matrix Factorization [WTMF] (Guo and Diab, 2012b; Guo and Diab, 2012c) to both the tweets and the news articles. WTMF is a state-of-the-art unsupervised model that was tested on two short text similarity datasets: (Li et al., 2006) and (Agirre et al., 2012), which outperforms Latent Semantic Analysis [LSA] (Landauer et al., 1998) and Latent Dirichelet Allocation [LDA] (Blei et al., 2003) by a large margin. We employ it as a strong baseline in this task as it exploits and effectively models the missing words in a tweet, in practice adding thousands of more features for the tweet, by contrast LDA, for example, only leverages observed words (14 features) to infer the latent vector for a tweet. Apart from the data sparseness, our dataset proposes another challenge: a tweet usually covers only one aspect of an event. In our previous example, the tweet only contains the location Mali while the event is about French army participated in Mali war. In this scenario, we would like to f</context>
</contexts>
<marker>Blei, Ng, Jordan, 2003</marker>
<rawString>David M. Blei, Andrew Y. Ng, and Michael I. Jordan. 2003. Latent dirichlet allocation. Journal of Machine Learning Research, 3.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Samuel Brody</author>
<author>Nicholas Diakopoulos</author>
</authors>
<title>Cooooooooooooooollllllllllllll! !!!!!!!!!!!!! using word lengthening to detect sentiment in microblogs.</title>
<date>2011</date>
<booktitle>In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="1903" citStr="Brody and Diakopoulos, 2011" startWordPosition="291" endWordPosition="295"> This is motivated by the observation that a tweet usually only covers one aspect of an event. We show that using tweet specific feature (hashtag) and news specific feature (named entities) as well as temporal constraints, we are able to extract text-to-text correlations, and thus completes the semantic picture of a short text. Our experiments show significant improvement of our new model over baselines with three evaluation metrics in the new task. 1 Introduction Recently there has been an increasing interest in language understanding of Twitter messages. Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 201</context>
</contexts>
<marker>Brody, Diakopoulos, 2011</marker>
<rawString>Samuel Brody and Nicholas Diakopoulos. 2011. Cooooooooooooooollllllllllllll! !!!!!!!!!!!!! using word lengthening to detect sentiment in microblogs. In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Claypool</author>
<author>Anuja Gokhale</author>
<author>Tim Miranda</author>
<author>Pavel Murnikov</author>
<author>Dmitry Netes</author>
<author>Matthew Sartin</author>
</authors>
<title>Combining content-based and collaborative filters in an online newspaper. In</title>
<date>1999</date>
<booktitle>In Proceedings of the ACM SIGIR Workshop on Recommender Systems.</booktitle>
<contexts>
<context position="32389" citStr="Claypool et al., 1999" startWordPosition="5625" endWordPosition="5629">g as a label. Similar to the experiments presented in this paper, the result of using LabeledLDA alone is worse than the IR model, due to the sparseness in the induced LDA latent vector. Jin et al. (2011) apply an LDA based model on clustering by incorporating url referred documents. The semantics of long documents are transferred to the topic distribution of tweets. News recommendation: A news recommendation system aims to recommend news articles to a user based on the features (e.g., key words, tags, category) in the documents that the user likes (hence these documents form a training set) (Claypool et al., 1999; Corso et al., 2005; Lee and Park, 2007). Our paper resembles it in searching for a related news article. However, we target on recommending news article only based on a tweet, which is a much smaller context than the set of favorite documents chosen by a user. 246 Research on Tweets: In (Duan et al., 2010), url availability is an important feature for tweets ranking. However, the number of tweets with an explicit url is very limited. Huang et al. (2012) propose a graph-based framework to propagate tweet ranking scores, where relevant web documents is found to be helpful to discover informati</context>
</contexts>
<marker>Claypool, Gokhale, Miranda, Murnikov, Netes, Sartin, 1999</marker>
<rawString>Mark Claypool, Anuja Gokhale, Tim Miranda, Pavel Murnikov, Dmitry Netes, and Matthew Sartin. 1999. Combining content-based and collaborative filters in an online newspaper. In In Proceedings of the ACM SIGIR Workshop on Recommender Systems.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Conover</author>
<author>Jacob Ratkiewicz</author>
<author>Matthew Francisco</author>
<author>Bruno Gonc¸alves</author>
<author>Filippo Menczer</author>
<author>Alessandro Flammini</author>
</authors>
<title>Political polarization on twitter.</title>
<date>2011</date>
<booktitle>In ICWSM.</booktitle>
<marker>Conover, Ratkiewicz, Francisco, Gonc¸alves, Menczer, Flammini, 2011</marker>
<rawString>Michael Conover, Jacob Ratkiewicz, Matthew Francisco, Bruno Gonc¸alves, Filippo Menczer, and Alessandro Flammini. 2011. Political polarization on twitter. In ICWSM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gianna M Del Corso</author>
<author>Antonio Gulli</author>
<author>Francesco Romani</author>
</authors>
<title>Ranking a stream of news.</title>
<date>2005</date>
<booktitle>In WWW,</booktitle>
<pages>97--106</pages>
<contexts>
<context position="15494" citStr="Corso et al., 2005" startWordPosition="2665" endWordPosition="2668">er chance of being similar than those are not chronologically close (Wang and McCallum, 2006). However, we cannot simply assume any two tweets are similar only based on the timestamp. Therefore, for a tweet we link it to the k most similar tweets whose published time is within 24 hours of the target tweet’s timestamp. We use the similarity score returned by WTMF model to measure the similarity of two tweets. We experimented with other features such as authorship. We note that it was not a helpful feature. While authorship information helps in the task of news/tweets recommendation for a user (Corso et al., 2005; Yan et al., 2012), the authorship information is too general for this task where we target on “recommending” a news article for a tweet. 4.3 Creating Relations on News We extract the 3 subgraphs (based on hashtags, named entities and temporal) on news articles. However, automatically tagging hashtags or named entities leads to much worse performance (around 93% ATOP values, a 3% decrease from baseline WTMF). There are several reasons for this: 1. When a hashtag-matched word appears in a tweet, it is often related to the central meaning of the tweet, however news articles are generally much l</context>
<context position="32409" citStr="Corso et al., 2005" startWordPosition="5630" endWordPosition="5633">o the experiments presented in this paper, the result of using LabeledLDA alone is worse than the IR model, due to the sparseness in the induced LDA latent vector. Jin et al. (2011) apply an LDA based model on clustering by incorporating url referred documents. The semantics of long documents are transferred to the topic distribution of tweets. News recommendation: A news recommendation system aims to recommend news articles to a user based on the features (e.g., key words, tags, category) in the documents that the user likes (hence these documents form a training set) (Claypool et al., 1999; Corso et al., 2005; Lee and Park, 2007). Our paper resembles it in searching for a related news article. However, we target on recommending news article only based on a tweet, which is a much smaller context than the set of favorite documents chosen by a user. 246 Research on Tweets: In (Duan et al., 2010), url availability is an important feature for tweets ranking. However, the number of tweets with an explicit url is very limited. Huang et al. (2012) propose a graph-based framework to propagate tweet ranking scores, where relevant web documents is found to be helpful to discover informative tweets. Both work</context>
</contexts>
<marker>Corso, Gulli, Romani, 2005</marker>
<rawString>Gianna M. Del Corso, Antonio Gulli, and Francesco Romani. 2005. Ranking a stream of news. In WWW, pages 97–106.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yajuan Duan</author>
<author>Long Jiang</author>
<author>Tao Qin</author>
<author>Ming Zhou</author>
<author>Heung-Yeung Shum</author>
</authors>
<title>An empirical study on learning to rank of tweets.</title>
<date>2010</date>
<booktitle>In COLING.</booktitle>
<contexts>
<context position="32698" citStr="Duan et al., 2010" startWordPosition="5683" endWordPosition="5686">ents are transferred to the topic distribution of tweets. News recommendation: A news recommendation system aims to recommend news articles to a user based on the features (e.g., key words, tags, category) in the documents that the user likes (hence these documents form a training set) (Claypool et al., 1999; Corso et al., 2005; Lee and Park, 2007). Our paper resembles it in searching for a related news article. However, we target on recommending news article only based on a tweet, which is a much smaller context than the set of favorite documents chosen by a user. 246 Research on Tweets: In (Duan et al., 2010), url availability is an important feature for tweets ranking. However, the number of tweets with an explicit url is very limited. Huang et al. (2012) propose a graph-based framework to propagate tweet ranking scores, where relevant web documents is found to be helpful to discover informative tweets. Both work can take advantage of our work to either extract potential url features or retrieve topically similar web documents. (Sankaranarayanan et al., 2009) aims at capturing tweets that correspond to late breaking news. However, they cluster tweets and simply choose a url referred news in those</context>
</contexts>
<marker>Duan, Jiang, Qin, Zhou, Shum, 2010</marker>
<rawString>Yajuan Duan, Long Jiang, Tao Qin, Ming Zhou, and Heung-Yeung Shum. 2010. An empirical study on learning to rank of tweets. In COLING.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christiane Fellbaum</author>
</authors>
<title>WordNet: An Electronic Lexical Database.</title>
<date>1998</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="18672" citStr="Fellbaum, 1998" startWordPosition="3226" endWordPosition="3227"> vectors of j’s neighbors. The reciprocal of length of these vectors in the current iteration are stored in Ls(j). Similarly, the reciprocal of the length of the short text vector Q·,j is Lj. W˜(i) = diag(W·,i) is an M × M diagonal matrix containing the ith row of weight matrix W. Due to limited space, the details of the optimization are not shown in this paper; they can be found in (Steck, 2010). 6 Experiments 6.1 Experiment Setting Corpora: We use the same corpora as in (Guo and Diab, 2012b): Brown corpus (each sentence is treated as a document), sense definitions of Wiktionary and Wordnet (Fellbaum, 1998). The tweets and news articles are also included in the corpus, generating 441,258 short texts and 5,149,122 words. The data is tokenized, POS-tagged by Stanford POS tagger (Toutanova et al., 2003), and lemmatized by WordNet::QueryData.pm. The value of each word in matrix X is its TF-IDF value in the short text. Baselines: We present 4 baselines: 1. Information Retrieval model [IR], which simply treats a tweet as a document, and performs traditional surface word matching. 2. LDA-0 with Gibbs Sampling as inference method. We use the inferred topic distribution 0 as a latent vector to represent </context>
</contexts>
<marker>Fellbaum, 1998</marker>
<rawString>Christiane Fellbaum. 1998. WordNet: An Electronic Lexical Database. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Weiwei Guo</author>
<author>Mona Diab</author>
</authors>
<title>Learning the latent semantics of a concept by its definition.</title>
<date>2012</date>
<booktitle>In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="4646" citStr="Guo and Diab, 2012" startWordPosition="753" endWordPosition="756">ious work (Jin et al., 2011) already showed that by incorporating webpages whose urls are contained in tweets, the tweet clustering purity score was boosted from 0.280 to 0.392. Given the few number of words in a tweet (14 words on average in our dataset), the traditional high dimensional surface word matching is lossy and fails to pinpoint the news article. This constitutes a classic short text semantics impediment (Agirre et al., 2012). Latent variable models are powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accordingly, we apply a latent variable model, namely, the Weighted Textual Matrix Factorization [WTMF] (Guo and Diab, 2012b; Guo and Diab, 2012c) to both the tweets and the news articles. WTMF is a state-of-the-art unsupervised model that was tested on two short text similarity datasets: (Li et al., 2006) and (Agirre et al., 2012), which outperforms Latent Semantic Analysis [LSA] (Landauer et al., 1998) and Latent Dirichelet Allocation [LDA] (Blei et al., 2003) by a large margin. We employ it as a strong baseline in this task as it exploits and effectively models the missing words in a tw</context>
<context position="9725" citStr="Guo and Diab, 2012" startWordPosition="1626" endWordPosition="1629">ting that the news corpus is not restricted to current events. It covers various genres and topics, such as travel guides. e.g. World’s most beautiful lakes, and health issues, e.g. The importance of a ‘stop day’, etc. 2.1 Evaluation metric For our task evaluation, ideally, we would like the system to be able to identify the news article specifically referred to by the url within each tweet in the gold standard. However, this is very difficult given the large number of potential candidates, especially those with slight variations. Therefore, following the Concept Definition Retrieval task in (Guo and Diab, 2012b) and (Steck, 2010) we use a metric for evaluating the ranking of the correct news article to evaluate the systems, namely, ATOPt, area under the TOPKt(k) recall curve for a tweet t. Basically, it is the normalized ranking E [0, 1] of the correct news article among all candidate news articles: ATOPt = 1 means the url-referred news article has the highest similarity value with the tweet (a correct NARU); ATOPt = 0.95 means the similarity value with correct news article is larger than 95% of the candidates, i.e. within the top 5% of the candidates. ATOPt is calculated as follows: in 1 ATOPt = T</context>
<context position="11470" citStr="Guo and Diab, 2012" startWordPosition="1940" endWordPosition="1943"> Weighted Textual Matrix Factorization The WTMF model (Guo and Diab, 2012a) has been successfully applied to the short text similarity task, achieving state-of-the-art unsupervised performance. This can be attributed to the fact that it models the missing tokens as features, thereby adding many more features for a short text. The missing words of a sentence are defined as all the vocabulary of the training corpus minus the observed words in a sentence. Missing words serve as negative examples for the semantics of a short text: the short text should not be related to the missing words. As per (Guo and Diab, 2012b), the corpus is represented in a matrix X, where each cell stores the TF-IDF values of words. The rows of X are words and columns are short texts. As in Figure 2, matrix X is approximated by the product of a K x M matrix P and a K x N matrix Q. Accordingly, each sentence sj is represented by a K dimensional latent vector Q·,j. Similarly a word wi is generalized by P·,i. Therefore, the inner product of a word vector P·,i and a short text vector Q·,j is to approximate the cell Xij (shaded part in Figure 2). In this way, the missing words are modeled by requiring the inner product of a word vec</context>
<context position="18553" citStr="Guo and Diab, 2012" startWordPosition="3206" endWordPosition="3209">(j)X&gt; j,· + δL(j)Q·,s(j)Ln(j) (4) We define n(j) as the linked neighbors of short text j, and Q·,n(j) as the set of latent vectors of j’s neighbors. The reciprocal of length of these vectors in the current iteration are stored in Ls(j). Similarly, the reciprocal of the length of the short text vector Q·,j is Lj. W˜(i) = diag(W·,i) is an M × M diagonal matrix containing the ith row of weight matrix W. Due to limited space, the details of the optimization are not shown in this paper; they can be found in (Steck, 2010). 6 Experiments 6.1 Experiment Setting Corpora: We use the same corpora as in (Guo and Diab, 2012b): Brown corpus (each sentence is treated as a document), sense definitions of Wiktionary and Wordnet (Fellbaum, 1998). The tweets and news articles are also included in the corpus, generating 441,258 short texts and 5,149,122 words. The data is tokenized, POS-tagged by Stanford POS tagger (Toutanova et al., 2003), and lemmatized by WordNet::QueryData.pm. The value of each word in matrix X is its TF-IDF value in the short text. Baselines: We present 4 baselines: 1. Information Retrieval model [IR], which simply treats a tweet as a document, and performs traditional surface word matching. 2. L</context>
<context position="20224" citStr="Guo and Diab, 2012" startWordPosition="3491" endWordPosition="3494">tor of a word by P(z|w) (topic distribution per word), then average the word latent vectors weighted by TF-IDF values to represent the short text, which yields much better results. 4. WTMF. In these baselines, hashtags and named entities are simply treated as words. To curtail variation in results due to randomness, each reported number is the average of 10 runs. For WTMF and WTMF-G, we assign the same initial random values and run 20 iterations. In both systems we fix the missing words weight as wm = 0.01 and regularization coefficient at A = 20, which is the best condition of WTMF found in (Guo and Diab, 2012b; Guo and Diab, 2012c). For LDA-0 and LDA-wvec, we run Gibbs Sampling based LDA for 2000 iterations and average the model over the last 10 iterations. Evaluation: The similarity between a tweet and a news article is measured by cosine similarity. A news article is represented as the concatenation of its title and its summary, which yields better performance.3 As in (Guo and Diab, 2012b), for each tweet, we collect the 1,000 news articles published prior to the tweet whose dates of publication are closest to that of the tweet. 4 The cosine similarity 3While these are separated, WTMF receive AT</context>
<context position="22960" citStr="Guo and Diab, 2012" startWordPosition="3990" endWordPosition="3993">r of neighbors linked to a tweet/news for a hashtag/NE/time constraint) and 6 (the weight of link information). We choose to model the links in four subgraphs: (a) hashtags in tweet; (b) named entities in tweet; (c) time in tweet; (d) time in news article. For LDA we tune the hyperparameter α (Dirichlet prior for topic distribution of a document) and β (Dirichlet prior for word distribution given a topic). It is worth noting that ATOP measures the overall ranking in 1000 samples while TOP10/RR focus on whether the aligned news article is in the first few returned results. Same as reported in (Guo and Diab, 2012b), LDA-θ has the worst results due to directly using prior to the tweet, however, that will give a bias to some tweets, since the latter tweets have a larger candidate set than the earlier ones the inferred topic distribution of a text θ. The inferred topic vector has only a few non-zero values, hence a lot of information is missing. LDA-wvec preserves more information by creating a dense latent vector from the topic distribution of a word P(z|w), and thus does much better in ATOP. It is interesting to see that IR model has a very low ATOP (90.795%) and an acceptable RR (46.281%) score, in co</context>
<context position="31180" citStr="Guo and Diab (2012" startWordPosition="5426" endWordPosition="5429">news articles, other advanced NLP features should be exploited. In this case, we believe sentiment information could be helpful – both tweet and the news article contain a negative polarity. 7 Related Work Short Text Semantics: The field of short text semantics has progressed immensely in recent years. Early work focus on word pair similarity in the high dimensional space. The word pair similarity is either knowledge based (Mihalcea et al., 2006; Tsatsaronis et al., 2010) or corpus based (Li et al., 2006; Islam and Inkpen, 2008), where cooccurrence information cannot be efficiently exploited. Guo and Diab (2012b; 2012a; 2013) show the superiority of the latent space approach in the WTMF model achieving state-of-the-art performance on two datasets. However, all of them only reply on text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Ramage et al. (2010) also use hashtags to improve the latent representation of tweets in a LDA framework, Labeled-LDA (Ramage et al., 2009), treating each hashtag as a label</context>
</contexts>
<marker>Guo, Diab, 2012</marker>
<rawString>Weiwei Guo and Mona Diab. 2012a. Learning the latent semantics of a concept by its definition. In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Weiwei Guo</author>
<author>Mona Diab</author>
</authors>
<title>Modeling sentences in the latent space.</title>
<date>2012</date>
<booktitle>In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="4646" citStr="Guo and Diab, 2012" startWordPosition="753" endWordPosition="756">ious work (Jin et al., 2011) already showed that by incorporating webpages whose urls are contained in tweets, the tweet clustering purity score was boosted from 0.280 to 0.392. Given the few number of words in a tweet (14 words on average in our dataset), the traditional high dimensional surface word matching is lossy and fails to pinpoint the news article. This constitutes a classic short text semantics impediment (Agirre et al., 2012). Latent variable models are powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accordingly, we apply a latent variable model, namely, the Weighted Textual Matrix Factorization [WTMF] (Guo and Diab, 2012b; Guo and Diab, 2012c) to both the tweets and the news articles. WTMF is a state-of-the-art unsupervised model that was tested on two short text similarity datasets: (Li et al., 2006) and (Agirre et al., 2012), which outperforms Latent Semantic Analysis [LSA] (Landauer et al., 1998) and Latent Dirichelet Allocation [LDA] (Blei et al., 2003) by a large margin. We employ it as a strong baseline in this task as it exploits and effectively models the missing words in a tw</context>
<context position="9725" citStr="Guo and Diab, 2012" startWordPosition="1626" endWordPosition="1629">ting that the news corpus is not restricted to current events. It covers various genres and topics, such as travel guides. e.g. World’s most beautiful lakes, and health issues, e.g. The importance of a ‘stop day’, etc. 2.1 Evaluation metric For our task evaluation, ideally, we would like the system to be able to identify the news article specifically referred to by the url within each tweet in the gold standard. However, this is very difficult given the large number of potential candidates, especially those with slight variations. Therefore, following the Concept Definition Retrieval task in (Guo and Diab, 2012b) and (Steck, 2010) we use a metric for evaluating the ranking of the correct news article to evaluate the systems, namely, ATOPt, area under the TOPKt(k) recall curve for a tweet t. Basically, it is the normalized ranking E [0, 1] of the correct news article among all candidate news articles: ATOPt = 1 means the url-referred news article has the highest similarity value with the tweet (a correct NARU); ATOPt = 0.95 means the similarity value with correct news article is larger than 95% of the candidates, i.e. within the top 5% of the candidates. ATOPt is calculated as follows: in 1 ATOPt = T</context>
<context position="11470" citStr="Guo and Diab, 2012" startWordPosition="1940" endWordPosition="1943"> Weighted Textual Matrix Factorization The WTMF model (Guo and Diab, 2012a) has been successfully applied to the short text similarity task, achieving state-of-the-art unsupervised performance. This can be attributed to the fact that it models the missing tokens as features, thereby adding many more features for a short text. The missing words of a sentence are defined as all the vocabulary of the training corpus minus the observed words in a sentence. Missing words serve as negative examples for the semantics of a short text: the short text should not be related to the missing words. As per (Guo and Diab, 2012b), the corpus is represented in a matrix X, where each cell stores the TF-IDF values of words. The rows of X are words and columns are short texts. As in Figure 2, matrix X is approximated by the product of a K x M matrix P and a K x N matrix Q. Accordingly, each sentence sj is represented by a K dimensional latent vector Q·,j. Similarly a word wi is generalized by P·,i. Therefore, the inner product of a word vector P·,i and a short text vector Q·,j is to approximate the cell Xij (shaded part in Figure 2). In this way, the missing words are modeled by requiring the inner product of a word vec</context>
<context position="18553" citStr="Guo and Diab, 2012" startWordPosition="3206" endWordPosition="3209">(j)X&gt; j,· + δL(j)Q·,s(j)Ln(j) (4) We define n(j) as the linked neighbors of short text j, and Q·,n(j) as the set of latent vectors of j’s neighbors. The reciprocal of length of these vectors in the current iteration are stored in Ls(j). Similarly, the reciprocal of the length of the short text vector Q·,j is Lj. W˜(i) = diag(W·,i) is an M × M diagonal matrix containing the ith row of weight matrix W. Due to limited space, the details of the optimization are not shown in this paper; they can be found in (Steck, 2010). 6 Experiments 6.1 Experiment Setting Corpora: We use the same corpora as in (Guo and Diab, 2012b): Brown corpus (each sentence is treated as a document), sense definitions of Wiktionary and Wordnet (Fellbaum, 1998). The tweets and news articles are also included in the corpus, generating 441,258 short texts and 5,149,122 words. The data is tokenized, POS-tagged by Stanford POS tagger (Toutanova et al., 2003), and lemmatized by WordNet::QueryData.pm. The value of each word in matrix X is its TF-IDF value in the short text. Baselines: We present 4 baselines: 1. Information Retrieval model [IR], which simply treats a tweet as a document, and performs traditional surface word matching. 2. L</context>
<context position="20224" citStr="Guo and Diab, 2012" startWordPosition="3491" endWordPosition="3494">tor of a word by P(z|w) (topic distribution per word), then average the word latent vectors weighted by TF-IDF values to represent the short text, which yields much better results. 4. WTMF. In these baselines, hashtags and named entities are simply treated as words. To curtail variation in results due to randomness, each reported number is the average of 10 runs. For WTMF and WTMF-G, we assign the same initial random values and run 20 iterations. In both systems we fix the missing words weight as wm = 0.01 and regularization coefficient at A = 20, which is the best condition of WTMF found in (Guo and Diab, 2012b; Guo and Diab, 2012c). For LDA-0 and LDA-wvec, we run Gibbs Sampling based LDA for 2000 iterations and average the model over the last 10 iterations. Evaluation: The similarity between a tweet and a news article is measured by cosine similarity. A news article is represented as the concatenation of its title and its summary, which yields better performance.3 As in (Guo and Diab, 2012b), for each tweet, we collect the 1,000 news articles published prior to the tweet whose dates of publication are closest to that of the tweet. 4 The cosine similarity 3While these are separated, WTMF receive AT</context>
<context position="22960" citStr="Guo and Diab, 2012" startWordPosition="3990" endWordPosition="3993">r of neighbors linked to a tweet/news for a hashtag/NE/time constraint) and 6 (the weight of link information). We choose to model the links in four subgraphs: (a) hashtags in tweet; (b) named entities in tweet; (c) time in tweet; (d) time in news article. For LDA we tune the hyperparameter α (Dirichlet prior for topic distribution of a document) and β (Dirichlet prior for word distribution given a topic). It is worth noting that ATOP measures the overall ranking in 1000 samples while TOP10/RR focus on whether the aligned news article is in the first few returned results. Same as reported in (Guo and Diab, 2012b), LDA-θ has the worst results due to directly using prior to the tweet, however, that will give a bias to some tweets, since the latter tweets have a larger candidate set than the earlier ones the inferred topic distribution of a text θ. The inferred topic vector has only a few non-zero values, hence a lot of information is missing. LDA-wvec preserves more information by creating a dense latent vector from the topic distribution of a word P(z|w), and thus does much better in ATOP. It is interesting to see that IR model has a very low ATOP (90.795%) and an acceptable RR (46.281%) score, in co</context>
<context position="31180" citStr="Guo and Diab (2012" startWordPosition="5426" endWordPosition="5429">news articles, other advanced NLP features should be exploited. In this case, we believe sentiment information could be helpful – both tweet and the news article contain a negative polarity. 7 Related Work Short Text Semantics: The field of short text semantics has progressed immensely in recent years. Early work focus on word pair similarity in the high dimensional space. The word pair similarity is either knowledge based (Mihalcea et al., 2006; Tsatsaronis et al., 2010) or corpus based (Li et al., 2006; Islam and Inkpen, 2008), where cooccurrence information cannot be efficiently exploited. Guo and Diab (2012b; 2012a; 2013) show the superiority of the latent space approach in the WTMF model achieving state-of-the-art performance on two datasets. However, all of them only reply on text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Ramage et al. (2010) also use hashtags to improve the latent representation of tweets in a LDA framework, Labeled-LDA (Ramage et al., 2009), treating each hashtag as a label</context>
</contexts>
<marker>Guo, Diab, 2012</marker>
<rawString>Weiwei Guo and Mona Diab. 2012b. Modeling sentences in the latent space. In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Weiwei Guo</author>
<author>Mona Diab</author>
</authors>
<title>Weiwei: A simple unsupervised latent semantics based approach for sentence similarity.</title>
<date>2012</date>
<booktitle>In First Joint Conference on Lexical and Computational Semantics (*SEM).</booktitle>
<contexts>
<context position="4646" citStr="Guo and Diab, 2012" startWordPosition="753" endWordPosition="756">ious work (Jin et al., 2011) already showed that by incorporating webpages whose urls are contained in tweets, the tweet clustering purity score was boosted from 0.280 to 0.392. Given the few number of words in a tweet (14 words on average in our dataset), the traditional high dimensional surface word matching is lossy and fails to pinpoint the news article. This constitutes a classic short text semantics impediment (Agirre et al., 2012). Latent variable models are powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accordingly, we apply a latent variable model, namely, the Weighted Textual Matrix Factorization [WTMF] (Guo and Diab, 2012b; Guo and Diab, 2012c) to both the tweets and the news articles. WTMF is a state-of-the-art unsupervised model that was tested on two short text similarity datasets: (Li et al., 2006) and (Agirre et al., 2012), which outperforms Latent Semantic Analysis [LSA] (Landauer et al., 1998) and Latent Dirichelet Allocation [LDA] (Blei et al., 2003) by a large margin. We employ it as a strong baseline in this task as it exploits and effectively models the missing words in a tw</context>
<context position="9725" citStr="Guo and Diab, 2012" startWordPosition="1626" endWordPosition="1629">ting that the news corpus is not restricted to current events. It covers various genres and topics, such as travel guides. e.g. World’s most beautiful lakes, and health issues, e.g. The importance of a ‘stop day’, etc. 2.1 Evaluation metric For our task evaluation, ideally, we would like the system to be able to identify the news article specifically referred to by the url within each tweet in the gold standard. However, this is very difficult given the large number of potential candidates, especially those with slight variations. Therefore, following the Concept Definition Retrieval task in (Guo and Diab, 2012b) and (Steck, 2010) we use a metric for evaluating the ranking of the correct news article to evaluate the systems, namely, ATOPt, area under the TOPKt(k) recall curve for a tweet t. Basically, it is the normalized ranking E [0, 1] of the correct news article among all candidate news articles: ATOPt = 1 means the url-referred news article has the highest similarity value with the tweet (a correct NARU); ATOPt = 0.95 means the similarity value with correct news article is larger than 95% of the candidates, i.e. within the top 5% of the candidates. ATOPt is calculated as follows: in 1 ATOPt = T</context>
<context position="11470" citStr="Guo and Diab, 2012" startWordPosition="1940" endWordPosition="1943"> Weighted Textual Matrix Factorization The WTMF model (Guo and Diab, 2012a) has been successfully applied to the short text similarity task, achieving state-of-the-art unsupervised performance. This can be attributed to the fact that it models the missing tokens as features, thereby adding many more features for a short text. The missing words of a sentence are defined as all the vocabulary of the training corpus minus the observed words in a sentence. Missing words serve as negative examples for the semantics of a short text: the short text should not be related to the missing words. As per (Guo and Diab, 2012b), the corpus is represented in a matrix X, where each cell stores the TF-IDF values of words. The rows of X are words and columns are short texts. As in Figure 2, matrix X is approximated by the product of a K x M matrix P and a K x N matrix Q. Accordingly, each sentence sj is represented by a K dimensional latent vector Q·,j. Similarly a word wi is generalized by P·,i. Therefore, the inner product of a word vector P·,i and a short text vector Q·,j is to approximate the cell Xij (shaded part in Figure 2). In this way, the missing words are modeled by requiring the inner product of a word vec</context>
<context position="18553" citStr="Guo and Diab, 2012" startWordPosition="3206" endWordPosition="3209">(j)X&gt; j,· + δL(j)Q·,s(j)Ln(j) (4) We define n(j) as the linked neighbors of short text j, and Q·,n(j) as the set of latent vectors of j’s neighbors. The reciprocal of length of these vectors in the current iteration are stored in Ls(j). Similarly, the reciprocal of the length of the short text vector Q·,j is Lj. W˜(i) = diag(W·,i) is an M × M diagonal matrix containing the ith row of weight matrix W. Due to limited space, the details of the optimization are not shown in this paper; they can be found in (Steck, 2010). 6 Experiments 6.1 Experiment Setting Corpora: We use the same corpora as in (Guo and Diab, 2012b): Brown corpus (each sentence is treated as a document), sense definitions of Wiktionary and Wordnet (Fellbaum, 1998). The tweets and news articles are also included in the corpus, generating 441,258 short texts and 5,149,122 words. The data is tokenized, POS-tagged by Stanford POS tagger (Toutanova et al., 2003), and lemmatized by WordNet::QueryData.pm. The value of each word in matrix X is its TF-IDF value in the short text. Baselines: We present 4 baselines: 1. Information Retrieval model [IR], which simply treats a tweet as a document, and performs traditional surface word matching. 2. L</context>
<context position="20224" citStr="Guo and Diab, 2012" startWordPosition="3491" endWordPosition="3494">tor of a word by P(z|w) (topic distribution per word), then average the word latent vectors weighted by TF-IDF values to represent the short text, which yields much better results. 4. WTMF. In these baselines, hashtags and named entities are simply treated as words. To curtail variation in results due to randomness, each reported number is the average of 10 runs. For WTMF and WTMF-G, we assign the same initial random values and run 20 iterations. In both systems we fix the missing words weight as wm = 0.01 and regularization coefficient at A = 20, which is the best condition of WTMF found in (Guo and Diab, 2012b; Guo and Diab, 2012c). For LDA-0 and LDA-wvec, we run Gibbs Sampling based LDA for 2000 iterations and average the model over the last 10 iterations. Evaluation: The similarity between a tweet and a news article is measured by cosine similarity. A news article is represented as the concatenation of its title and its summary, which yields better performance.3 As in (Guo and Diab, 2012b), for each tweet, we collect the 1,000 news articles published prior to the tweet whose dates of publication are closest to that of the tweet. 4 The cosine similarity 3While these are separated, WTMF receive AT</context>
<context position="22960" citStr="Guo and Diab, 2012" startWordPosition="3990" endWordPosition="3993">r of neighbors linked to a tweet/news for a hashtag/NE/time constraint) and 6 (the weight of link information). We choose to model the links in four subgraphs: (a) hashtags in tweet; (b) named entities in tweet; (c) time in tweet; (d) time in news article. For LDA we tune the hyperparameter α (Dirichlet prior for topic distribution of a document) and β (Dirichlet prior for word distribution given a topic). It is worth noting that ATOP measures the overall ranking in 1000 samples while TOP10/RR focus on whether the aligned news article is in the first few returned results. Same as reported in (Guo and Diab, 2012b), LDA-θ has the worst results due to directly using prior to the tweet, however, that will give a bias to some tweets, since the latter tweets have a larger candidate set than the earlier ones the inferred topic distribution of a text θ. The inferred topic vector has only a few non-zero values, hence a lot of information is missing. LDA-wvec preserves more information by creating a dense latent vector from the topic distribution of a word P(z|w), and thus does much better in ATOP. It is interesting to see that IR model has a very low ATOP (90.795%) and an acceptable RR (46.281%) score, in co</context>
<context position="31180" citStr="Guo and Diab (2012" startWordPosition="5426" endWordPosition="5429">news articles, other advanced NLP features should be exploited. In this case, we believe sentiment information could be helpful – both tweet and the news article contain a negative polarity. 7 Related Work Short Text Semantics: The field of short text semantics has progressed immensely in recent years. Early work focus on word pair similarity in the high dimensional space. The word pair similarity is either knowledge based (Mihalcea et al., 2006; Tsatsaronis et al., 2010) or corpus based (Li et al., 2006; Islam and Inkpen, 2008), where cooccurrence information cannot be efficiently exploited. Guo and Diab (2012b; 2012a; 2013) show the superiority of the latent space approach in the WTMF model achieving state-of-the-art performance on two datasets. However, all of them only reply on text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Ramage et al. (2010) also use hashtags to improve the latent representation of tweets in a LDA framework, Labeled-LDA (Ramage et al., 2009), treating each hashtag as a label</context>
</contexts>
<marker>Guo, Diab, 2012</marker>
<rawString>Weiwei Guo and Mona Diab. 2012c. Weiwei: A simple unsupervised latent semantics based approach for sentence similarity. In First Joint Conference on Lexical and Computational Semantics (*SEM).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Weiwei Guo</author>
<author>Mona Diab</author>
</authors>
<title>Improving lexical semantics for sentential semantics: Modeling selectional preference and similar words in a latent variable model.</title>
<date>2013</date>
<booktitle>In The 2013 Conference of the North American Chapter of</booktitle>
<marker>Guo, Diab, 2013</marker>
<rawString>Weiwei Guo and Mona Diab. 2013. Improving lexical semantics for sentential semantics: Modeling selectional preference and similar words in a latent variable model. In The 2013 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hongzhao Huang</author>
<author>Arkaitz Zubiaga</author>
<author>Heng Ji</author>
</authors>
<title>Hongbo Deng, Dong Wang, Hieu Le, Tarek Abdelzather,</title>
<date>2012</date>
<booktitle>In Proceedings of the 24th International Conference on Computational Linguistics.</booktitle>
<location>Jiawei Han, Alice Leung, John Hancock, and Clare Voss.</location>
<contexts>
<context position="32848" citStr="Huang et al. (2012)" startWordPosition="5710" endWordPosition="5713"> based on the features (e.g., key words, tags, category) in the documents that the user likes (hence these documents form a training set) (Claypool et al., 1999; Corso et al., 2005; Lee and Park, 2007). Our paper resembles it in searching for a related news article. However, we target on recommending news article only based on a tweet, which is a much smaller context than the set of favorite documents chosen by a user. 246 Research on Tweets: In (Duan et al., 2010), url availability is an important feature for tweets ranking. However, the number of tweets with an explicit url is very limited. Huang et al. (2012) propose a graph-based framework to propagate tweet ranking scores, where relevant web documents is found to be helpful to discover informative tweets. Both work can take advantage of our work to either extract potential url features or retrieve topically similar web documents. (Sankaranarayanan et al., 2009) aims at capturing tweets that correspond to late breaking news. However, they cluster tweets and simply choose a url referred news in those tweets as the related news for the whole cluster (the urls are visible to the systems). (Abel et al., 2011) is most related work to our paper, howeve</context>
</contexts>
<marker>Huang, Zubiaga, Ji, 2012</marker>
<rawString>Hongzhao Huang, Arkaitz Zubiaga, Heng Ji, Hongbo Deng, Dong Wang, Hieu Le, Tarek Abdelzather, Jiawei Han, Alice Leung, John Hancock, and Clare Voss. 2012. Tweet ranking based on heterogeneous networks. In Proceedings of the 24th International Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aminul Islam</author>
<author>Diana Inkpen</author>
</authors>
<title>Semantic text similarity using corpus-based word similarity and string similarity.</title>
<date>2008</date>
<journal>ACM Transactions on Knowledge Discovery from Data,</journal>
<volume>2</volume>
<contexts>
<context position="31096" citStr="Islam and Inkpen, 2008" startWordPosition="5413" endWordPosition="5416">tract additional textto-text correlation by word matching). To pinpoint the url referred news articles, other advanced NLP features should be exploited. In this case, we believe sentiment information could be helpful – both tweet and the news article contain a negative polarity. 7 Related Work Short Text Semantics: The field of short text semantics has progressed immensely in recent years. Early work focus on word pair similarity in the high dimensional space. The word pair similarity is either knowledge based (Mihalcea et al., 2006; Tsatsaronis et al., 2010) or corpus based (Li et al., 2006; Islam and Inkpen, 2008), where cooccurrence information cannot be efficiently exploited. Guo and Diab (2012b; 2012a; 2013) show the superiority of the latent space approach in the WTMF model achieving state-of-the-art performance on two datasets. However, all of them only reply on text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Ramage et al. (2010) also use hashtags to improve the latent representation of tweets in </context>
</contexts>
<marker>Islam, Inkpen, 2008</marker>
<rawString>Aminul Islam and Diana Inkpen. 2008. Semantic text similarity using corpus-based word similarity and string similarity. ACM Transactions on Knowledge Discovery from Data, 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Heng Ji</author>
<author>Ralph Grishman</author>
</authors>
<title>Refining event extraction through cross-document inference.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL-08: HLT.</booktitle>
<contexts>
<context position="2787" citStr="Ji and Grishman, 2008" startWordPosition="435" endWordPosition="438">odels. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Mali... A typical event extraction/discovery system (Ji and Grishman, 2008) fails to discover the war event due to the lack of context information (Benson et al., 2011), and thus fails to shed light on the users focus/interests. To enable the NLP tools to better understand Twitter feeds, we propose the task of linking a tweet to a news article that is relevant to the tweet, thereby augmenting the context of the tweet. For example, we want to supplement the implicit context of the above tweet with a news article such as the following entitled: State of emergency declared in Mali where abundant evidence can be fed into an offthe-shelf event extraction/discovery system.</context>
</contexts>
<marker>Ji, Grishman, 2008</marker>
<rawString>Heng Ji and Ralph Grishman. 2008. Refining event extraction through cross-document inference. In Proceedings of ACL-08: HLT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Long Jiang</author>
<author>Mo Yu</author>
<author>Ming Zhou</author>
<author>Xiaohua Liu</author>
<author>Tiejun Zhao</author>
</authors>
<title>Target-dependent twitter sentiment classification.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting ofAssociation for Computational Linguistics.</booktitle>
<contexts>
<context position="1924" citStr="Jiang et al., 2011" startWordPosition="296" endWordPosition="299">ervation that a tweet usually only covers one aspect of an event. We show that using tweet specific feature (hashtag) and news specific feature (named entities) as well as temporal constraints, we are able to extract text-to-text correlations, and thus completes the semantic picture of a short text. Our experiments show significant improvement of our new model over baselines with three evaluation metrics in the new task. 1 Introduction Recently there has been an increasing interest in language understanding of Twitter messages. Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence leve</context>
</contexts>
<marker>Jiang, Yu, Zhou, Liu, Zhao, 2011</marker>
<rawString>Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, and Tiejun Zhao. 2011. Target-dependent twitter sentiment classification. In Proceedings of the 49th Annual Meeting ofAssociation for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ou Jin</author>
<author>Nathan N Liu</author>
<author>Kai Zhao</author>
<author>Yong Yu</author>
<author>Qiang Yang</author>
</authors>
<title>Transferring topical knowledge from auxiliary long texts for short text clustering.</title>
<date>2011</date>
<booktitle>In Proceedings of the 20th ACM international conference on Information and knowledge management.</booktitle>
<contexts>
<context position="2133" citStr="Jin et al., 2011" startWordPosition="330" endWordPosition="333">tract text-to-text correlations, and thus completes the semantic picture of a short text. Our experiments show significant improvement of our new model over baselines with three evaluation metrics in the new task. 1 Introduction Recently there has been an increasing interest in language understanding of Twitter messages. Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Mali... A typical eve</context>
<context position="4056" citStr="Jin et al., 2011" startWordPosition="654" endWordPosition="657">ts spanning over 18 days, each with a url linking to a news article of CNN or NYTIMES, as well as all the news of CNN and NYTIMES published during the period. The goal is to predict the url referred news article based on the text in each tweet.1 We 1The data and code is publicly available at www.cs. 239 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 239–249, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics believe many NLP tasks will benefit from this task. In fact, in the topic modeling research, previous work (Jin et al., 2011) already showed that by incorporating webpages whose urls are contained in tweets, the tweet clustering purity score was boosted from 0.280 to 0.392. Given the few number of words in a tweet (14 words on average in our dataset), the traditional high dimensional surface word matching is lossy and fails to pinpoint the news article. This constitutes a classic short text semantics impediment (Agirre et al., 2012). Latent variable models are powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accord</context>
<context position="31972" citStr="Jin et al. (2011)" startWordPosition="5557" endWordPosition="5560">text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Ramage et al. (2010) also use hashtags to improve the latent representation of tweets in a LDA framework, Labeled-LDA (Ramage et al., 2009), treating each hashtag as a label. Similar to the experiments presented in this paper, the result of using LabeledLDA alone is worse than the IR model, due to the sparseness in the induced LDA latent vector. Jin et al. (2011) apply an LDA based model on clustering by incorporating url referred documents. The semantics of long documents are transferred to the topic distribution of tweets. News recommendation: A news recommendation system aims to recommend news articles to a user based on the features (e.g., key words, tags, category) in the documents that the user likes (hence these documents form a training set) (Claypool et al., 1999; Corso et al., 2005; Lee and Park, 2007). Our paper resembles it in searching for a related news article. However, we target on recommending news article only based on a tweet, which</context>
</contexts>
<marker>Jin, Liu, Zhao, Yu, Yang, 2011</marker>
<rawString>Ou Jin, Nathan N. Liu, Kai Zhao, Yong Yu, and Qiang Yang. 2011. Transferring topical knowledge from auxiliary long texts for short text clustering. In Proceedings of the 20th ACM international conference on Information and knowledge management.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas K Landauer</author>
<author>Peter W Foltz</author>
<author>Darrell Laham</author>
</authors>
<title>An introduction to latent semantic analysis.</title>
<date>1998</date>
<booktitle>Discourse Processes,</booktitle>
<volume>25</volume>
<contexts>
<context position="5057" citStr="Landauer et al., 1998" startWordPosition="820" endWordPosition="823">s impediment (Agirre et al., 2012). Latent variable models are powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accordingly, we apply a latent variable model, namely, the Weighted Textual Matrix Factorization [WTMF] (Guo and Diab, 2012b; Guo and Diab, 2012c) to both the tweets and the news articles. WTMF is a state-of-the-art unsupervised model that was tested on two short text similarity datasets: (Li et al., 2006) and (Agirre et al., 2012), which outperforms Latent Semantic Analysis [LSA] (Landauer et al., 1998) and Latent Dirichelet Allocation [LDA] (Blei et al., 2003) by a large margin. We employ it as a strong baseline in this task as it exploits and effectively models the missing words in a tweet, in practice adding thousands of more features for the tweet, by contrast LDA, for example, only leverages observed words (14 features) to infer the latent vector for a tweet. Apart from the data sparseness, our dataset proposes another challenge: a tweet usually covers only one aspect of an event. In our previous example, the tweet only contains the location Mali while the event is about French army par</context>
</contexts>
<marker>Landauer, Foltz, Laham, 1998</marker>
<rawString>Thomas K Landauer, Peter W. Foltz, and Darrell Laham. 1998. An introduction to latent semantic analysis. Discourse Processes, 25.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H J Lee</author>
<author>Sung Joo Park</author>
</authors>
<title>Moners: A news recommender for the mobile web. Expert Syst.</title>
<date>2007</date>
<journal>Appl.,</journal>
<volume>32</volume>
<issue>1</issue>
<contexts>
<context position="32430" citStr="Lee and Park, 2007" startWordPosition="5634" endWordPosition="5637">esented in this paper, the result of using LabeledLDA alone is worse than the IR model, due to the sparseness in the induced LDA latent vector. Jin et al. (2011) apply an LDA based model on clustering by incorporating url referred documents. The semantics of long documents are transferred to the topic distribution of tweets. News recommendation: A news recommendation system aims to recommend news articles to a user based on the features (e.g., key words, tags, category) in the documents that the user likes (hence these documents form a training set) (Claypool et al., 1999; Corso et al., 2005; Lee and Park, 2007). Our paper resembles it in searching for a related news article. However, we target on recommending news article only based on a tweet, which is a much smaller context than the set of favorite documents chosen by a user. 246 Research on Tweets: In (Duan et al., 2010), url availability is an important feature for tweets ranking. However, the number of tweets with an explicit url is very limited. Huang et al. (2012) propose a graph-based framework to propagate tweet ranking scores, where relevant web documents is found to be helpful to discover informative tweets. Both work can take advantage o</context>
</contexts>
<marker>Lee, Park, 2007</marker>
<rawString>H. J. Lee and Sung Joo Park. 2007. Moners: A news recommender for the mobile web. Expert Syst. Appl., 32(1):143–150.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yuhua Li</author>
<author>David McLean</author>
<author>Zuhair A Bandar</author>
<author>James D O’Shea</author>
<author>Keeley Crockett</author>
</authors>
<title>Sentence similarity based on semantic nets and corpus statistics.</title>
<date>2006</date>
<journal>IEEE Transaction on Knowledge and Data Engineering,</journal>
<volume>18</volume>
<marker>Li, McLean, Bandar, O’Shea, Crockett, 2006</marker>
<rawString>Yuhua Li, David McLean, Zuhair A. Bandar, James D. O’Shea, and Keeley Crockett. 2006. Sentence similarity based on semantic nets and corpus statistics. IEEE Transaction on Knowledge and Data Engineering, 18.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hao Li</author>
<author>Yu Chen</author>
<author>Heng Ji</author>
<author>Smaranda Muresan</author>
<author>Dequan Zheng</author>
</authors>
<title>Combining social cognitive theories with linguistic features for multi-genre sentiment analysis. In</title>
<date>2012</date>
<booktitle>In Proceedings of the 26th Pacific Asia Conference on Language, Information and Computation.</booktitle>
<contexts>
<context position="2505" citStr="Li et al., 2012" startWordPosition="392" endWordPosition="395">kopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Mali... A typical event extraction/discovery system (Ji and Grishman, 2008) fails to discover the war event due to the lack of context information (Benson et al., 2011), and thus fails to shed light on the users focus/interests. To enable the NLP tools to better understand Twitter feeds, we propose the task of linking a tweet to a news article that is relevant to the tweet, thereby augmenti</context>
</contexts>
<marker>Li, Chen, Ji, Muresan, Zheng, 2012</marker>
<rawString>Hao Li, Yu Chen, Heng Ji, Smaranda Muresan, and Dequan Zheng. 2012. Combining social cognitive theories with linguistic features for multi-genre sentiment analysis. In In Proceedings of the 26th Pacific Asia Conference on Language, Information and Computation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaohua Liu</author>
<author>Shaodian Zhang</author>
<author>Furu Wei</author>
<author>Ming Zhou</author>
</authors>
<title>Recognizing named entities in tweets. In The Semanic Web: Research and Applications.</title>
<date>2011</date>
<contexts>
<context position="14318" citStr="Liu et al., 2011" startWordPosition="2454" endWordPosition="2457">sulted in 33,242 tweets automatically labeled with hashtags. For each tweet, and for each hashtag it contains, we extract k tweets that contain this hashtag, assuming they are complementary to the target tweet, and link the k tweets to the target tweet. If there are more than k tweets found, we choose the top k ones that are most chronologically close to the target tweet. The statistics of links can be found in table 2. Named entities are some of the most salient features in a news article. Directly applying Named Entity Recognition (NER) tools on news titles or tweets results in many errors (Liu et al., 2011) due to the noise in the data, such as slang and capitalization. Accordingly, we first apply the NER tool on news summaries, then label named entities in the tweets in the same way as labeling the hashtags: if there is a string in the tweet that matches a named entity from the summaries, then it is labeled as a named entity in the tweet. 25,132 tweets are assigned at least one named entity.2 To create the similar tweet set, we find k tweets that also contain the named entity. 4.2 Temporal Relations Tweets published in the same time interval have a larger chance of being similar than those are </context>
</contexts>
<marker>Liu, Zhang, Wei, Zhou, 2011</marker>
<rawString>Xiaohua Liu, Shaodian Zhang, Furu Wei, and Ming Zhou. 2011. Recognizing named entities in tweets. In The Semanic Web: Research and Applications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew L Maas</author>
<author>Raymond E Daly</author>
<author>Peter T Pham</author>
<author>Dan Huang</author>
<author>Andrew Y Ng</author>
<author>Christopher Potts</author>
</authors>
<title>Learning word vectors for sentiment analysis.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of</booktitle>
<contexts>
<context position="2410" citStr="Maas et al., 2011" startWordPosition="374" endWordPosition="377">in language understanding of Twitter messages. Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Mali... A typical event extraction/discovery system (Ji and Grishman, 2008) fails to discover the war event due to the lack of context information (Benson et al., 2011), and thus fails to shed light on the users focus/interests. To enable the NLP tools to better understand Twitter feeds, we propos</context>
</contexts>
<marker>Maas, Daly, Pham, Huang, Ng, Potts, 2011</marker>
<rawString>Andrew L. Maas, Raymond E. Daly, Peter T. Pham, Dan Huang, Andrew Y. Ng, and Christopher Potts. 2011. Learning word vectors for sentiment analysis. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rada Mihalcea</author>
<author>Courtney Corley</author>
<author>Carlo Strapparava</author>
</authors>
<title>Corpus-based and knowledge-based measures of text semantic similarity.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st National Conference on Articial Intelligence.</booktitle>
<contexts>
<context position="31011" citStr="Mihalcea et al., 2006" startWordPosition="5398" endWordPosition="5401">y. The only evidence the latent variable models rely on is lexical items (WTMF-G extract additional textto-text correlation by word matching). To pinpoint the url referred news articles, other advanced NLP features should be exploited. In this case, we believe sentiment information could be helpful – both tweet and the news article contain a negative polarity. 7 Related Work Short Text Semantics: The field of short text semantics has progressed immensely in recent years. Early work focus on word pair similarity in the high dimensional space. The word pair similarity is either knowledge based (Mihalcea et al., 2006; Tsatsaronis et al., 2010) or corpus based (Li et al., 2006; Islam and Inkpen, 2008), where cooccurrence information cannot be efficiently exploited. Guo and Diab (2012b; 2012a; 2013) show the superiority of the latent space approach in the WTMF model achieving state-of-the-art performance on two datasets. However, all of them only reply on text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Rama</context>
</contexts>
<marker>Mihalcea, Corley, Strapparava, 2006</marker>
<rawString>Rada Mihalcea, Courtney Corley, and Carlo Strapparava. 2006. Corpus-based and knowledge-based measures of text semantic similarity. In Proceedings of the 21st National Conference on Articial Intelligence.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Pang</author>
<author>Lillian Lee</author>
</authors>
<title>A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts.</title>
<date>2004</date>
<booktitle>In Proceedings of the 42nd Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="2457" citStr="Pang and Lee, 2004" startWordPosition="383" endWordPosition="386"> Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Mali... A typical event extraction/discovery system (Ji and Grishman, 2008) fails to discover the war event due to the lack of context information (Benson et al., 2011), and thus fails to shed light on the users focus/interests. To enable the NLP tools to better understand Twitter feeds, we propose the task of linking a tweet to a news article</context>
</contexts>
<marker>Pang, Lee, 2004</marker>
<rawString>Bo Pang and Lillian Lee. 2004. A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts. In Proceedings of the 42nd Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Pang</author>
<author>Lillian Lee</author>
</authors>
<title>Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="2567" citStr="Pang and Lee, 2005" startWordPosition="403" endWordPosition="406">iment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Mali... A typical event extraction/discovery system (Ji and Grishman, 2008) fails to discover the war event due to the lack of context information (Benson et al., 2011), and thus fails to shed light on the users focus/interests. To enable the NLP tools to better understand Twitter feeds, we propose the task of linking a tweet to a news article that is relevant to the tweet, thereby augmenting the context of the tweet. For example, we want to supplemen</context>
</contexts>
<marker>Pang, Lee, 2005</marker>
<rawString>Bo Pang and Lillian Lee. 2005. Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales. In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Ramage</author>
<author>David Hall</author>
<author>Ramesh Nallapati</author>
<author>Christopher D Manning</author>
</authors>
<title>Labeled lda: A supervised topic model for credit attribution in multilabeled corpora.</title>
<date>2009</date>
<booktitle>In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="31746" citStr="Ramage et al., 2009" startWordPosition="5515" endWordPosition="5518">on cannot be efficiently exploited. Guo and Diab (2012b; 2012a; 2013) show the superiority of the latent space approach in the WTMF model achieving state-of-the-art performance on two datasets. However, all of them only reply on text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Ramage et al. (2010) also use hashtags to improve the latent representation of tweets in a LDA framework, Labeled-LDA (Ramage et al., 2009), treating each hashtag as a label. Similar to the experiments presented in this paper, the result of using LabeledLDA alone is worse than the IR model, due to the sparseness in the induced LDA latent vector. Jin et al. (2011) apply an LDA based model on clustering by incorporating url referred documents. The semantics of long documents are transferred to the topic distribution of tweets. News recommendation: A news recommendation system aims to recommend news articles to a user based on the features (e.g., key words, tags, category) in the documents that the user likes (hence these documents </context>
</contexts>
<marker>Ramage, Hall, Nallapati, Manning, 2009</marker>
<rawString>Daniel Ramage, David Hall, Ramesh Nallapati, and Christopher D. Manning. 2009. Labeled lda: A supervised topic model for credit attribution in multilabeled corpora. In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Ramage</author>
<author>Susan Dumais</author>
<author>Dan Liebling</author>
</authors>
<title>Characterizing microblogs with topic models.</title>
<date>2010</date>
<booktitle>In Proceedings of the Fourth International AAAI Conference on Weblogs and Social Media.</booktitle>
<contexts>
<context position="2114" citStr="Ramage et al., 2010" startWordPosition="326" endWordPosition="329">ts, we are able to extract text-to-text correlations, and thus completes the semantic picture of a short text. Our experiments show significant improvement of our new model over baselines with three evaluation metrics in the new task. 1 Introduction Recently there has been an increasing interest in language understanding of Twitter messages. Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short texts. Considering the following tweet: Pray for Ma</context>
<context position="6332" citStr="Ramage et al., 2010" startWordPosition="1036" endWordPosition="1040">to find the missing elements of the tweet such as French, war from other short texts, to complete the semantic picture of Pray in Mali tweet. One drawback of WTMF for our purposes is that it simply models the text-to-word information without leveraging the correlation between short texts. While this is acceptable on standard short text similarity datasets (data points are independently generated), it ignores some valuable information characteristically present in our dataset: (1) The tweet specific features such as hashtags. Hashtags prove to be a direct indication of the semantics of tweets (Ramage et al., 2010); (2) The news specific features columbia.edu/˜weiwei such as named entities in a document. Named entities acquired from a news document, typically with high accuracy using Named Entity Recognition [NER] tools, may be particularly informative. If two texts mention the same entities then they might describe the same event; (3) The temporal information in both genres (tweets and news articles). We note that there is a higher chance of event description overlap between two texts if their time of publication is similar. In this paper, we study the problem of mining and exploiting correlations betw</context>
<context position="31627" citStr="Ramage et al. (2010)" startWordPosition="5495" endWordPosition="5498">2006; Tsatsaronis et al., 2010) or corpus based (Li et al., 2006; Islam and Inkpen, 2008), where cooccurrence information cannot be efficiently exploited. Guo and Diab (2012b; 2012a; 2013) show the superiority of the latent space approach in the WTMF model achieving state-of-the-art performance on two datasets. However, all of them only reply on text-to-word information. In this paper, we focus on modeling inter-text relations induced by Twitter/news features. We extend the WTMF model and adapt it into tweets modeling, achieving significantly better results. Modeling Tweets in a Latent Space: Ramage et al. (2010) also use hashtags to improve the latent representation of tweets in a LDA framework, Labeled-LDA (Ramage et al., 2009), treating each hashtag as a label. Similar to the experiments presented in this paper, the result of using LabeledLDA alone is worse than the IR model, due to the sparseness in the induced LDA latent vector. Jin et al. (2011) apply an LDA based model on clustering by incorporating url referred documents. The semantics of long documents are transferred to the topic distribution of tweets. News recommendation: A news recommendation system aims to recommend news articles to a us</context>
</contexts>
<marker>Ramage, Dumais, Liebling, 2010</marker>
<rawString>Daniel Ramage, Susan Dumais, and Dan Liebling. 2010. Characterizing microblogs with topic models. In Proceedings of the Fourth International AAAI Conference on Weblogs and Social Media.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jagan Sankaranarayanan</author>
<author>Hanan Samet</author>
<author>Benjamin E Teitler</author>
<author>Michael D Lieberman</author>
<author>Jon Sperling</author>
</authors>
<title>Twitterstand: news in tweets.</title>
<date>2009</date>
<booktitle>In Proceedings of the 17th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems.</booktitle>
<contexts>
<context position="33158" citStr="Sankaranarayanan et al., 2009" startWordPosition="5759" endWordPosition="5762">ng news article only based on a tweet, which is a much smaller context than the set of favorite documents chosen by a user. 246 Research on Tweets: In (Duan et al., 2010), url availability is an important feature for tweets ranking. However, the number of tweets with an explicit url is very limited. Huang et al. (2012) propose a graph-based framework to propagate tweet ranking scores, where relevant web documents is found to be helpful to discover informative tweets. Both work can take advantage of our work to either extract potential url features or retrieve topically similar web documents. (Sankaranarayanan et al., 2009) aims at capturing tweets that correspond to late breaking news. However, they cluster tweets and simply choose a url referred news in those tweets as the related news for the whole cluster (the urls are visible to the systems). (Abel et al., 2011) is most related work to our paper, however their focus is the user profiling task, therefore they do not provide a paired tweet/news data set and have to conduct manual evaluation. 8 Conclusion We propose a Linking-Tweets-to-News task, which potentially benefits many NLP applications where off-the-shelf NLP tools can be applied to the most relevant </context>
</contexts>
<marker>Sankaranarayanan, Samet, Teitler, Lieberman, Sperling, 2009</marker>
<rawString>Jagan Sankaranarayanan, Hanan Samet, Benjamin E. Teitler, Michael D. Lieberman, and Jon Sperling. 2009. Twitterstand: news in tweets. In Proceedings of the 17th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Socher</author>
<author>Eric H Huang</author>
<author>Jeffrey Pennington</author>
<author>Andrew Y Ng</author>
<author>Christopher D Manning</author>
</authors>
<title>Dynamic pooling and unfolding recursive autoencoders for paraphrase detection.</title>
<date>2011</date>
<booktitle>In Proceedings of Advances in Neural Information Processing Systems.</booktitle>
<contexts>
<context position="4626" citStr="Socher et al., 2011" startWordPosition="749" endWordPosition="752">deling research, previous work (Jin et al., 2011) already showed that by incorporating webpages whose urls are contained in tweets, the tweet clustering purity score was boosted from 0.280 to 0.392. Given the few number of words in a tweet (14 words on average in our dataset), the traditional high dimensional surface word matching is lossy and fails to pinpoint the news article. This constitutes a classic short text semantics impediment (Agirre et al., 2012). Latent variable models are powerful by going beyond the surface word level and mapping short texts into a low dimensional dense vector (Socher et al., 2011; Guo and Diab, 2012b). Accordingly, we apply a latent variable model, namely, the Weighted Textual Matrix Factorization [WTMF] (Guo and Diab, 2012b; Guo and Diab, 2012c) to both the tweets and the news articles. WTMF is a state-of-the-art unsupervised model that was tested on two short text similarity datasets: (Li et al., 2006) and (Agirre et al., 2012), which outperforms Latent Semantic Analysis [LSA] (Landauer et al., 1998) and Latent Dirichelet Allocation [LDA] (Blei et al., 2003) by a large margin. We employ it as a strong baseline in this task as it exploits and effectively models the m</context>
</contexts>
<marker>Socher, Huang, Pennington, Ng, Manning, 2011</marker>
<rawString>Richard Socher, Eric H. Huang, Jeffrey Pennington, Andrew Y. Ng, and Christopher D. Manning. 2011. Dynamic pooling and unfolding recursive autoencoders for paraphrase detection. In Proceedings of Advances in Neural Information Processing Systems.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Speriosui</author>
<author>Nikita Sudan</author>
<author>Sid Upadhyay</author>
<author>Jason Baldridge</author>
</authors>
<title>Twitter polarity classification with label propagation over lexical links and the follower graph.</title>
<date>2011</date>
<booktitle>In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="1874" citStr="Speriosui et al., 2011" startWordPosition="287" endWordPosition="290">xt-to-text information). This is motivated by the observation that a tweet usually only covers one aspect of an event. We show that using tweet specific feature (hashtag) and news specific feature (named entities) as well as temporal constraints, we are able to extract text-to-text correlations, and thus completes the semantic picture of a short text. Our experiments show significant improvement of our new model over baselines with three evaluation metrics in the new task. 1 Introduction Recently there has been an increasing interest in language understanding of Twitter messages. Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance</context>
</contexts>
<marker>Speriosui, Sudan, Upadhyay, Baldridge, 2011</marker>
<rawString>Michael Speriosui, Nikita Sudan, Sid Upadhyay, and Jason Baldridge. 2011. Twitter polarity classification with label propagation over lexical links and the follower graph. In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nathan Srebro</author>
<author>Tommi Jaakkola</author>
</authors>
<title>Weighted low-rank approximations.</title>
<date>2003</date>
<booktitle>In Proceedings of the Twentieth International Conference on Machine Learning.</booktitle>
<contexts>
<context position="17517" citStr="Srebro and Jaakkola, 2003" startWordPosition="3016" endWordPosition="3019">e, namely that their cosine similarity to be close to 1. To implement this, we add a regularization term in the objective function of WTMF (equation 2) for each linked pairs Q·,j1, Q·,j2: 6 · ( Q·,j1 · Q·,j2 − 1)2 (3) |Q ·,j1 ||Q·,j2| where |Q·,j |denotes the length of vector Q·,j. The coefficient 6 denotes the importance of the text-totext links. A larger 6 means we put more weights on the text-to-text links and less on the text-toword links. We refer to this model as WTMF-G (WTMF on graphs). 5.1 Inference Alternating Least Square [ALS] is used for inference in weighted matrix factorization (Srebro and Jaakkola, 2003). However, ALS is no longer applicable here with the new regularization term (equation 3) involving the length of text vectors |Q·,j|, which is not in quadratic form. Therefore we approximate the objective function by treating the vector length |Q·,j |as fixed values during the ALS iterations: ( )−1 Q W˜ (i)X·,i P·,i = Q W˜ (i)Q&gt; + λI — (P W˜(j)P&gt; + λI + δL2 dia L2 T )−1 Q·,j —(j)Q&apos;,s(j) g� (s(j))�Q.,s(j) ( ) P W˜ (j)X&gt; j,· + δL(j)Q·,s(j)Ln(j) (4) We define n(j) as the linked neighbors of short text j, and Q·,n(j) as the set of latent vectors of j’s neighbors. The reciprocal of length of these</context>
</contexts>
<marker>Srebro, Jaakkola, 2003</marker>
<rawString>Nathan Srebro and Tommi Jaakkola. 2003. Weighted low-rank approximations. In Proceedings of the Twentieth International Conference on Machine Learning.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harald Steck</author>
</authors>
<title>Training and testing of recommender systems on data missing not at random.</title>
<date>2010</date>
<booktitle>In Proceedings of the 16th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining.</booktitle>
<contexts>
<context position="9745" citStr="Steck, 2010" startWordPosition="1631" endWordPosition="1632">is not restricted to current events. It covers various genres and topics, such as travel guides. e.g. World’s most beautiful lakes, and health issues, e.g. The importance of a ‘stop day’, etc. 2.1 Evaluation metric For our task evaluation, ideally, we would like the system to be able to identify the news article specifically referred to by the url within each tweet in the gold standard. However, this is very difficult given the large number of potential candidates, especially those with slight variations. Therefore, following the Concept Definition Retrieval task in (Guo and Diab, 2012b) and (Steck, 2010) we use a metric for evaluating the ranking of the correct news article to evaluate the systems, namely, ATOPt, area under the TOPKt(k) recall curve for a tweet t. Basically, it is the normalized ranking E [0, 1] of the correct news article among all candidate news articles: ATOPt = 1 means the url-referred news article has the highest similarity value with the tweet (a correct NARU); ATOPt = 0.95 means the similarity value with correct news article is larger than 95% of the candidates, i.e. within the top 5% of the candidates. ATOPt is calculated as follows: in 1 ATOPt = TOPKt(k)dk where TOPK</context>
<context position="18456" citStr="Steck, 2010" startWordPosition="3191" endWordPosition="3192">i)Q&gt; + λI — (P W˜(j)P&gt; + λI + δL2 dia L2 T )−1 Q·,j —(j)Q&apos;,s(j) g� (s(j))�Q.,s(j) ( ) P W˜ (j)X&gt; j,· + δL(j)Q·,s(j)Ln(j) (4) We define n(j) as the linked neighbors of short text j, and Q·,n(j) as the set of latent vectors of j’s neighbors. The reciprocal of length of these vectors in the current iteration are stored in Ls(j). Similarly, the reciprocal of the length of the short text vector Q·,j is Lj. W˜(i) = diag(W·,i) is an M × M diagonal matrix containing the ith row of weight matrix W. Due to limited space, the details of the optimization are not shown in this paper; they can be found in (Steck, 2010). 6 Experiments 6.1 Experiment Setting Corpora: We use the same corpora as in (Guo and Diab, 2012b): Brown corpus (each sentence is treated as a document), sense definitions of Wiktionary and Wordnet (Fellbaum, 1998). The tweets and news articles are also included in the corpus, generating 441,258 short texts and 5,149,122 words. The data is tokenized, POS-tagged by Stanford POS tagger (Toutanova et al., 2003), and lemmatized by WordNet::QueryData.pm. The value of each word in matrix X is its TF-IDF value in the short text. Baselines: We present 4 baselines: 1. Information Retrieval model [IR]</context>
</contexts>
<marker>Steck, 2010</marker>
<rawString>Harald Steck. 2010. Training and testing of recommender systems on data missing not at random. In Proceedings of the 16th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kristina Toutanova</author>
<author>Dan Klein</author>
<author>Christopher D Manning</author>
<author>Yoram Singer</author>
</authors>
<title>Feature-rich part-ofspeech tagging with a cyclic dependency network.</title>
<date>2003</date>
<booktitle>In HLT-NAACL.</booktitle>
<contexts>
<context position="18869" citStr="Toutanova et al., 2003" startWordPosition="3256" endWordPosition="3259">j. W˜(i) = diag(W·,i) is an M × M diagonal matrix containing the ith row of weight matrix W. Due to limited space, the details of the optimization are not shown in this paper; they can be found in (Steck, 2010). 6 Experiments 6.1 Experiment Setting Corpora: We use the same corpora as in (Guo and Diab, 2012b): Brown corpus (each sentence is treated as a document), sense definitions of Wiktionary and Wordnet (Fellbaum, 1998). The tweets and news articles are also included in the corpus, generating 441,258 short texts and 5,149,122 words. The data is tokenized, POS-tagged by Stanford POS tagger (Toutanova et al., 2003), and lemmatized by WordNet::QueryData.pm. The value of each word in matrix X is its TF-IDF value in the short text. Baselines: We present 4 baselines: 1. Information Retrieval model [IR], which simply treats a tweet as a document, and performs traditional surface word matching. 2. LDA-0 with Gibbs Sampling as inference method. We use the inferred topic distribution 0 as a latent vector to represent the tweet/news. 3. LDA-wvec. The problem with LDA-0 is the inferred topic distribution latent vector is very sparse with only a few non-zero values, resulting in many tweet/news pairs receiving a h</context>
</contexts>
<marker>Toutanova, Klein, Manning, Singer, 2003</marker>
<rawString>Kristina Toutanova, Dan Klein, Christopher D. Manning, and Yoram Singer. 2003. Feature-rich part-ofspeech tagging with a cyclic dependency network. In HLT-NAACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George Tsatsaronis</author>
</authors>
<title>Iraklis Varlamis, and Michalis Vazirgiannis.</title>
<date>2010</date>
<journal>Journal of Articial Intelligence Research,</journal>
<volume>37</volume>
<marker>Tsatsaronis, 2010</marker>
<rawString>George Tsatsaronis, Iraklis Varlamis, and Michalis Vazirgiannis. 2010. Text relatedness based on a word thesaurus. Journal of Articial Intelligence Research, 37.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andranik Tumasjan</author>
<author>Timm Oliver Sprenger</author>
<author>Philipp G Sandner</author>
<author>Isabell M Welpe</author>
</authors>
<title>Predicting elections with twitter: What 140 characters reveal about political sentiment.</title>
<date>2010</date>
<booktitle>In ICWSM.</booktitle>
<contexts>
<context position="2062" citStr="Tumasjan et al., 2010" startWordPosition="317" endWordPosition="320">feature (named entities) as well as temporal constraints, we are able to extract text-to-text correlations, and thus completes the semantic picture of a short text. Our experiments show significant improvement of our new model over baselines with three evaluation metrics in the new task. 1 Introduction Recently there has been an increasing interest in language understanding of Twitter messages. Researchers (Speriosui et al., 2011; Brody and Diakopoulos, 2011; Jiang et al., 2011) were interested in sentiment analysis on Twitter feeds, and opinion mining towards political issues or politicians (Tumasjan et al., 2010; Conover et al., 2011). Others (Ramage et al., 2010; Jin et al., 2011) summarized tweets using topic models. Although these NLP techniques are mature, their performance on tweets inevitably degrades, due to the inherent sparsity in short texts. In the case of sentiment analysis, while people are able to achieve 87.5% accuracy (Maas et al., 2011) on a movie review dataset (Pang and Lee, 2004), the performance drops to 75% (Li et al., 2012) on a sentence level movie review dataset (Pang and Lee, 2005). The problem worsens when some existing NLP systems cannot produce any results given the short</context>
</contexts>
<marker>Tumasjan, Sprenger, Sandner, Welpe, 2010</marker>
<rawString>Andranik Tumasjan, Timm Oliver Sprenger, Philipp G. Sandner, and Isabell M. Welpe. 2010. Predicting elections with twitter: What 140 characters reveal about political sentiment. In ICWSM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xuerui Wang</author>
<author>Andrew McCallum</author>
</authors>
<title>Topics over time: a non-markov continuous-time model of topical trends. In</title>
<date>2006</date>
<booktitle>In Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining.</booktitle>
<contexts>
<context position="14969" citStr="Wang and McCallum, 2006" startWordPosition="2573" endWordPosition="2576">ta, such as slang and capitalization. Accordingly, we first apply the NER tool on news summaries, then label named entities in the tweets in the same way as labeling the hashtags: if there is a string in the tweet that matches a named entity from the summaries, then it is labeled as a named entity in the tweet. 25,132 tweets are assigned at least one named entity.2 To create the similar tweet set, we find k tweets that also contain the named entity. 4.2 Temporal Relations Tweets published in the same time interval have a larger chance of being similar than those are not chronologically close (Wang and McCallum, 2006). However, we cannot simply assume any two tweets are similar only based on the timestamp. Therefore, for a tweet we link it to the k most similar tweets whose published time is within 24 hours of the target tweet’s timestamp. We use the similarity score returned by WTMF model to measure the similarity of two tweets. We experimented with other features such as authorship. We note that it was not a helpful feature. While authorship information helps in the task of news/tweets recommendation for a user (Corso et al., 2005; Yan et al., 2012), the authorship information is too general for this tas</context>
</contexts>
<marker>Wang, McCallum, 2006</marker>
<rawString>Xuerui Wang and Andrew McCallum. 2006. Topics over time: a non-markov continuous-time model of topical trends. In In Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rui Yan</author>
<author>Mirella Lapata</author>
<author>Xiaoming Li</author>
</authors>
<title>Tweet recommendation with graph co-ranking.</title>
<date>2012</date>
<booktitle>In Proceedings of the 24th International Conference on Computational Linguistics.</booktitle>
<contexts>
<context position="15513" citStr="Yan et al., 2012" startWordPosition="2669" endWordPosition="2672">imilar than those are not chronologically close (Wang and McCallum, 2006). However, we cannot simply assume any two tweets are similar only based on the timestamp. Therefore, for a tweet we link it to the k most similar tweets whose published time is within 24 hours of the target tweet’s timestamp. We use the similarity score returned by WTMF model to measure the similarity of two tweets. We experimented with other features such as authorship. We note that it was not a helpful feature. While authorship information helps in the task of news/tweets recommendation for a user (Corso et al., 2005; Yan et al., 2012), the authorship information is too general for this task where we target on “recommending” a news article for a tweet. 4.3 Creating Relations on News We extract the 3 subgraphs (based on hashtags, named entities and temporal) on news articles. However, automatically tagging hashtags or named entities leads to much worse performance (around 93% ATOP values, a 3% decrease from baseline WTMF). There are several reasons for this: 1. When a hashtag-matched word appears in a tweet, it is often related to the central meaning of the tweet, however news articles are generally much longer than tweets, </context>
</contexts>
<marker>Yan, Lapata, Li, 2012</marker>
<rawString>Rui Yan, Mirella Lapata, and Xiaoming Li. 2012. Tweet recommendation with graph co-ranking. In Proceedings of the 24th International Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lei Yang</author>
<author>Tao Sun</author>
<author>Ming Zhang</author>
<author>Qiaozhu Mei</author>
</authors>
<title>We know what @you #tag: does the dual role affect hashtag adoption?</title>
<date>2012</date>
<booktitle>In Proceedings of the 21st international conference on World Wide Web.</booktitle>
<contexts>
<context position="13484" citStr="Yang et al., 2012" startWordPosition="2305" endWordPosition="2308">reate text-to-text relations. 4.1 Hashtags and Named Entities Hashtags highlight the topics in tweets, e.g., The #flu season has started. We believe two tweets sharing the same hashtag should be related, hence we place a link between them to explicitly inform the model that these two tweets should be similar. We find only 8,701 tweets out of 34,888 include hashtags. In fact, we observe many hashtag words are mentioned in tweets without explicitly being tagged with #. To overcome the hashtag sparseness issue, one can resort to keywords recommendation algorithms to mine hashtags for the tweets (Yang et al., 2012). In this paper, we adopt a simple but effective approach: we collect all the hashtags in the dataset, and automatically hashtag any word in a tweet if that word appears hashtagged in any other tweets. This process resulted in 33,242 tweets automatically labeled with hashtags. For each tweet, and for each hashtag it contains, we extract k tweets that contain this hashtag, assuming they are complementary to the target tweet, and link the k tweets to the target tweet. If there are more than k tweets found, we choose the top k ones that are most chronologically close to the target tweet. The stat</context>
</contexts>
<marker>Yang, Sun, Zhang, Mei, 2012</marker>
<rawString>Lei Yang, Tao Sun, Ming Zhang, and Qiaozhu Mei. 2012. We know what @you #tag: does the dual role affect hashtag adoption? In Proceedings of the 21st international conference on World Wide Web.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>