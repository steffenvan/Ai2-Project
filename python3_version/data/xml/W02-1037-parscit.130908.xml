<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.009209">
<note confidence="0.492742333333333">
Proceedings of the Conference on Empirical Methods in Natural
Language Processing (EMNLP), Philadelphia, July 2002, pp. 289-295.
Association for Computational Linguistics.
</note>
<figure confidence="0.987070091370559">
Small
Bilingual
Lexicon
Nonâˆ’parallel
Target
Language
Corpus
Source
Language
Corpus
w
w
w
w
w w
Parallel Corpus
Additional Dictionary
Entries
x
z y
x y z y x z y $
y
z
y
y
z
y
x
z
y
x
x
z
y
z
y
$
$
y
z
y
x
z
Comparable Corpus
Alignment With
Bilingual Suffix Trees
x
z
y
Lexicon
0:
$
x
x y z y x z y
a
a
b
c
x
y
y
z
1:
$
z y y
d a b c d a c b
z y
y
x :a
:a,b
y
z:c
y
x
d
z
z
y
x
z
y
z
y
y
x
z
z
y
x
y
$
z:c
y:b
z
y:b
z:c
y
y
z:c
0 0 1
c
d
y
d
x
z
y
x
$
y:b
y
$
$
z
y
$
0 0 0 0 0,1 1
x
z $ y
y
Source Corpus Target Corpus
x y z y x z y
z y y
y:b
$
y:b
(iii)
x y z
a b c
d a c b
y x z y
x y z y x z y
d a b c d a c b
y z x y z y x
b c a d c b a d
x:a
(i) (ii)
z:c
:by
d
y
xz
y
y :b
z :c
x:a
zy
y
x
d
x:a
y:a
d
y
:a,b
z
:c
x y z
a b c
y x z y
d a c b
x y z y
a b c d
x z y
a c b
x:a
z
z:c
d
c
x y z
a b c
y:b
z:c
y
x
z
y
d
z
y
x
y:b
y
$
z y
$ c b
1. Build the forward and backward BSTs.
2. Traverse each BST and extract left
and right alignments for every node
that represents a divergence
For each word pair from the divergence set:
a. create context alignments out of
appropriate left and right alignments
b. filter out invalid context alignments
c. extract valid translation candidates
from the context alignments
</figure>
<bodyText confidence="0.9582095">
meme temps , le gouvernement reduit le
same time , the government reduced the
mon avis , cc est tres important
nw opinion , this is very important
et que nous sommes dispos&apos;es a prendre
and that we are prepared to take
en fait , le
in fact , the
</bodyText>
<equation confidence="0.7904325">
( 1 ) , le
( 1 ) the
</equation>
<bodyText confidence="0.941187">
par mes collegues et moi
by my colleagues and myself
</bodyText>
<figureCaption confidence="0.9130005">
Figure 7: Algorithm for learning translations of
unknown words
</figureCaption>
<bodyText confidence="0.998703888888889">
words 50.000 sentences for each language.
We obtained it by taking two non-parallel, non-
aligned segments from the Hansard corpus. We
also used GIZA1 to automatically build a small
bilingual lexicon of 6.900 entries using 5.000 sen-
tences pairs (150.000 words for each language).
The parallel corpus was taken from the Proceed-
ings of the European Parliament (EuroParl).
Note that the parallel corpus belongs to a differ-
ent domain than the comparable corpus. Also,
the parallel corpus is extremely small. For low-
density languages, such a corpus can be built
manually.
When given as input the comparable corpus
described above and the bilingual lexicon of
6.900 entries, the algorithm described in Section
3 found 33.926 parallel sequences, with lengths
between 3 and 7 words (we do not report here
aligned sequences of less than 3 words). Out
of 100 randomly selected sequences, 95% were
judged to be correct. Some examples of the dis-
covered alignments are shown in Figure 8.
The system also found translations for 30
unknown French words. Of these, 9 are cor-
rect, which means a precision of 30%. Figure 9
shows some proposed translations and the con-
text alignments on which they are based.
For each of the two corpora, building the
monolingual GST took only 1.5 minutes. The
matching operation that yields the BST is the
most time-consuming it lasted 38 hours for the
forward BST and 60 hours for the reverse BST.
The extractions of all parallel phrases and of
the translations took about 2 hours each. We
ran the experiments on a Linux system with a
Pentium 3 processor of 866Mhz.
</bodyText>
<page confidence="0.659503">
1
</page>
<figure confidence="0.898427545454546">
http://www.clspjhu.edu/ws99/projects/mt/
partout dans le monde
everywhere in the world
pression sur le gouvernement
pressure on the government
que ce qui
that for which
toutes les personnes
all the people
doute le
certainly , the
</figure>
<figureCaption confidence="0.998296166666667">
Figure 8: Examples of parallel phrases
CORRECT
communement = commonly al est communement accepte
it is commonly accepted
bien = also subventions ont bin ete
subsidies have also been
immensement . particularly il est immensement important
it is particularly significant
INCORRECT
plaintes - meetings ces plaintes ont deTa
these meetings have already
renseignements - units nouveau. renseignements sont disponibles
new units are available
exemptions - documents ces exemptions ont ete
these documents have been
exemptions - laws ces exemptions ont ete
these laws have been
Figure 9: Proposed translations
</figureCaption>
<sectionHeader confidence="0.933372" genericHeader="abstract">
6 Discussion and Future Work
</sectionHeader>
<bodyText confidence="0.974842956521739">
GST and BST construction
The most important limitation of our method
is that it can find and exploit only word align-
ments that are monotonic. This makes the
system applicable primarily on language pairs
which have similar word order, such as English-
French and English-Chinese.
A second, less severe limitation concerns the
scalability of the algorithms The GST and BST
derivation algorithms that we implemented to
date are not the most efficient. For example,
Kurtz (1999) shows how to reduce space require-
ments of suffix trees. And Farach (1997) and
Andersson et al. (1999) present construction
algorithms which, for trees defined over large al-
phabets such as words, are more efficient than
Ukkonen&apos;s algorithm (which we used in our im-
plementation). The matching operation can be
parallelized with linear speedup, since match-
ing of a pair of branches is independent of the
matching of any other pair. We plan to incor-
porate these improvements in future versions of
our system.
</bodyText>
<subsectionHeader confidence="0.992993">
Learning new translations
</subsectionHeader>
<bodyText confidence="0.99983125">
The translation precision that we obtained
is lower than that reported in previous ap-
proaches. However, we attempted to solve a
much harder problem: our algorithm does not
take as input the list of unknown words, but
learns automatically from the corpus both the
unknown words and their translations. There-
fore our results depend both on the degree of
parallelism of the two corpora, and on their size.
We expect that as we scale the algorithm to pro-
cess corpora of billions of words, our precision
will improve.
As mentioned in section 4, our algorithm for
learning new translations yields many context
alignments, most of them corresponding to in-
correct translations. Filtering out these incor-
rect translations is an important part of the al-
gorithm. Our current filtering method, which is
based on the length and content of the context
alignment, is rather simple. The co-occurence
methods used in the previous approaches could
be of help here, by providing additional sources
of evidence about the translations defined by
our context alignments.
</bodyText>
<subsectionHeader confidence="0.72377">
Bootstrapping
</subsectionHeader>
<bodyText confidence="0.999939769230769">
It is clear that our algorithm can bootstrap it-
self using the learned word translations. The
additional word alignments could allow us to
find more and longer parallel sequences, and
thus better context alignments out of which will
come yet more new translations. At the time of
submission we have not yet implemented this
bootstrapping procedure.
In general, we find BSTs to be an extremely
useful data structure that we believe will be of
great use to other natural language researchers
interested in aligning sequences defined over dif-
ferent alphabets.
</bodyText>
<sectionHeader confidence="0.992905" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999305927536232">
A. Andersson, N.J. Larsson, and K. Swanson.
1999. Suffix trees on words. Algorithmica,
23 (3) , September.
Paul Bieganski, John Riedl, John Carlis, and
Ernest Retzel. 1994. Generalized suffix trees
for biological sequence data: Applications
and implementation. In Proceedings of the
27th Annual Hawaii International Conference
on System Sciences, volume 5, pages 35-44.
IEEE.
Peter F. Brown, Stephen A. Della Pietra, Vin-
cent J. Della Pietra, and Robert L. Mercer.
1993. The mathematics of machine transla-
tion: Parameter estimation. Computational
Linguistics, 19(2):263-311, June.
Mona Diab and Steve Finch. 2000. A statisti-
cal word-level translation model for compa-
rable corpora. In Proceedings of the Confer-
ence on Content-Based Multimedia Informa-
tion Access.
Martin Farach. 1997. Optimal suffix tree con-
struction with large alphabets. 38th Annual
Symposium on Foundations of Computer Sci-
ence, pages 137-143, October.
Pascale Fung and Lo Yuen Yee. 1998. An IR
approach for translating new words from non-
parallel, comparable texts. In &amp;quot;Proceedings of
the Thirty-Sixth Annual Meeting of the Asso-
ciation for Computational Linguistics, pages
414-420.
Roberto Grossi and Giuseppe F. Italiano. 1993.
Suffix trees and their applications in string
algorithms. In Proc. 1st South American
Workshop on String Processing, pages 57-76,
September.
Dan Gusfield. 1997. Algorithms on Strings,
Trees, and Sequences. Cambridge University
Press, New York.
Genichiro Kikui. 1999. Resolving translation
ambiguity using non-parallel bilingual cor-
pora. In Proceedings of ACL99 Workshop on
Unsupervised Learning in Natural Language
Processing.
Philipp Koehn and Kevin Knight. 2000. Es-
timating word translation probabilities from
unrelated monolingual corpora using the EM
algorithm. In Proceedings of the National
Conference on Artificial Intelligence, pages
711-715.
Stefan Kurtz. 1999. Reducing the space re-
quirement of suffix trees. Software - Practice
and Experience, 29(13):1149-1171.
Mark Nelson. 1996. Fast string searching with
suffix trees. Dr. Dobb&apos;s Journal, August.
Reinhard Rapp. 1995. Identifying word trans-
lation in non-parallel texts. In Proceedings of
the Conference of the Association for Com-
putational Linguistics, pages 320-322.
Reinhard Rapp. 1999. Automatic identification
of word translations from unrelated English
and German corpora. In Proceedings of the
Conference of the Association for Computa-
tional Linguistics, pages 519-526.
Esko Ukkonen. 1995. On-line construction
of suffix trees. Algorithmica, 14(3):249-260,
September.
P. Weiner. 1973. Linear pattern matching al-
gorithm. In Proc. 14 IEEE Symposium on
Switching and Automata Theory, pages 1-11.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000004">
<note confidence="0.8704492">Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP), Philadelphia, July 2002, pp. 289-295. Association for Computational Linguistics. Small Bilingual</note>
<title confidence="0.872484625">Lexicon Nonâˆ’parallel Target Language Corpus Source Language Corpus</title>
<abstract confidence="0.990961288372093">w w w w w w Parallel Corpus Additional Dictionary Entries x z y y z y x z y y z y y z y x z y x x z y z y $ $ y z y x z Comparable Alignment Bilingual Suffix Trees x z y Lexicon 0: $ x x y z y x z y a a b c x y y z 1: $ z y y d a b c d a c b z y y x:a :a,b y y x d z z y x z y z y y x z z y x y $ z y y 0 0 1 c d y d x z y x $ y $ $ z y $ 0 0 0 0 0,1 1 x z $ y y Source Corpus Target Corpus x y z y x z y z y y $ (iii) x y z a b c d a c b y x z y x y z y x z y d a b c d a c b y z x y z y x b c a d c b a d (i) (ii) d y y y:b z:c y x d d y :a,b z :c x y z a b c y x z y d a c b x y z y b c d x z y a c b z d c x y z a b c y x z y d z y x y $ z y $c b 1. Build the forward and backward BSTs. 2. Traverse each BST and extract left and right alignments for every node that represents a divergence word pair from the divergence set: a. create context alignments out of appropriate left and right alignments b. filter out invalid context alignments c. extract valid translation candidates from the context alignments meme temps , le gouvernement reduit le same time , the government reduced the mon avis , cc est tres important , this is very important et que nous sommes dispos&apos;es a prendre and that we are prepared to take en fait , le in fact , the ( 1 ) , le ( 1 ) the par mes collegues et moi by my colleagues and myself Figure 7: Algorithm for learning translations of unknown words words 50.000 sentences for each language. We obtained it by taking two non-parallel, nonaligned segments from the Hansard corpus. We used to automatically build a small bilingual lexicon of 6.900 entries using 5.000 sentences pairs (150.000 words for each language). The parallel corpus was taken from the Proceedings of the European Parliament (EuroParl). Note that the parallel corpus belongs to a different domain than the comparable corpus. Also, the parallel corpus is extremely small. For lowdensity languages, such a corpus can be built manually. When given as input the comparable corpus described above and the bilingual lexicon of 6.900 entries, the algorithm described in Section 3 found 33.926 parallel sequences, with lengths between 3 and 7 words (we do not report here aligned sequences of less than 3 words). Out of 100 randomly selected sequences, 95% were judged to be correct. Some examples of the discovered alignments are shown in Figure 8. The system also found translations for 30 unknown French words. Of these, 9 are correct, which means a precision of 30%. Figure 9 shows some proposed translations and the context alignments on which they are based. For each of the two corpora, building the monolingual GST took only 1.5 minutes. The matching operation that yields the BST is the most time-consuming it lasted 38 hours for the forward BST and 60 hours for the reverse BST. The extractions of all parallel phrases and of the translations took about 2 hours each. We ran the experiments on a Linux system with a Pentium 3 processor of 866Mhz.</abstract>
<note confidence="0.532008">1</note>
<web confidence="0.848245">http://www.clspjhu.edu/ws99/projects/mt/</web>
<abstract confidence="0.999211263736264">partout dans le monde everywhere in the world pression sur le gouvernement pressure on the government que ce qui that for which toutes les personnes all the people doute le certainly , the Figure 8: Examples of parallel phrases CORRECT = commonly al est is = also subventions ont ete have . particularly il est is INCORRECT meetings ces deTa already units nouveau. available documents ces ete been laws ces been Figure 9: Proposed translations 6 Discussion and Future Work GST and BST construction The most important limitation of our method is that it can find and exploit only word alignments that are monotonic. This makes the system applicable primarily on language pairs which have similar word order, such as English- French and English-Chinese. A second, less severe limitation concerns the scalability of the algorithms The GST and BST derivation algorithms that we implemented to date are not the most efficient. For example, Kurtz (1999) shows how to reduce space requirements of suffix trees. And Farach (1997) and Andersson et al. (1999) present construction algorithms which, for trees defined over large alphabets such as words, are more efficient than Ukkonen&apos;s algorithm (which we used in our implementation). The matching operation can be parallelized with linear speedup, since matching of a pair of branches is independent of the matching of any other pair. We plan to incorporate these improvements in future versions of our system. Learning new translations The translation precision that we obtained is lower than that reported in previous approaches. However, we attempted to solve a much harder problem: our algorithm does not take as input the list of unknown words, but learns automatically from the corpus both the unknown words and their translations. Therefore our results depend both on the degree of parallelism of the two corpora, and on their size. We expect that as we scale the algorithm to process corpora of billions of words, our precision will improve. As mentioned in section 4, our algorithm for learning new translations yields many context alignments, most of them corresponding to incorrect translations. Filtering out these incorrect translations is an important part of the algorithm. Our current filtering method, which is based on the length and content of the context alignment, is rather simple. The co-occurence methods used in the previous approaches could be of help here, by providing additional sources of evidence about the translations defined by our context alignments. Bootstrapping It is clear that our algorithm can bootstrap itself using the learned word translations. The additional word alignments could allow us to find more and longer parallel sequences, and thus better context alignments out of which will come yet more new translations. At the time of submission we have not yet implemented this bootstrapping procedure. In general, we find BSTs to be an extremely useful data structure that we believe will be of great use to other natural language researchers interested in aligning sequences defined over different alphabets.</abstract>
<note confidence="0.976640909090909">References A. Andersson, N.J. Larsson, and K. Swanson. Suffix trees on words. 23 (3) , September. Paul Bieganski, John Riedl, John Carlis, and Ernest Retzel. 1994. Generalized suffix trees for biological sequence data: Applications implementation. In of the 27th Annual Hawaii International Conference System Sciences, 5, pages 35-44. IEEE.</note>
<author confidence="0.42784">Peter F Brown</author>
<author confidence="0.42784">Stephen A Della Pietra</author>
<author confidence="0.42784">Vin-</author>
<abstract confidence="0.668342352941176">cent J. Della Pietra, and Robert L. Mercer. 1993. The mathematics of machine transla- Parameter estimation. June. Mona Diab and Steve Finch. 2000. A statistical word-level translation model for compacorpora. In of the Conference on Content-Based Multimedia Information Access. Martin Farach. 1997. Optimal suffix tree conwith large alphabets. Annual Symposium on Foundations of Computer Sci- 137-143, October. Pascale Fung and Lo Yuen Yee. 1998. An IR approach for translating new words from noncomparable texts. In of the Thirty-Sixth Annual Meeting of the Asso-</abstract>
<note confidence="0.693882625">for Computational Linguistics, 414-420. Roberto Grossi and Giuseppe F. Italiano. 1993. Suffix trees and their applications in string In 1st South American on String Processing, 57-76, September. Gusfield. 1997. on Strings,</note>
<affiliation confidence="0.996743">and Sequences. University</affiliation>
<address confidence="0.939121">Press, New York.</address>
<note confidence="0.543271181818182">Genichiro Kikui. 1999. Resolving translation ambiguity using non-parallel bilingual cor- In of ACL99 Workshop on Unsupervised Learning in Natural Language Processing. Philipp Koehn and Kevin Knight. 2000. Estimating word translation probabilities from unrelated monolingual corpora using the EM In of the National on Artificial Intelligence, 711-715.</note>
<author confidence="0.566529">Reducing the space re-</author>
<affiliation confidence="0.319176">of suffix trees. - Practice Experience,</affiliation>
<address confidence="0.469364">Mark Nelson. 1996. Fast string searching with</address>
<author confidence="0.656038">Dobb&apos;s Journal</author>
<author confidence="0.656038">Reinhard Rapp</author>
<note confidence="0.855923285714286">in non-parallel texts. In of the Conference of the Association for Com- Linguistics, 320-322. Reinhard Rapp. 1999. Automatic identification of word translations from unrelated English German corpora. In of the Conference of the Association for Computa- Linguistics, 519-526. Esko Ukkonen. 1995. On-line construction suffix trees. September. P. Weiner. 1973. Linear pattern matching al- In 14 IEEE Symposium on and Automata Theory, 1-11.</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A Andersson</author>
<author>N J Larsson</author>
<author>K Swanson</author>
</authors>
<title>Suffix trees on words.</title>
<date>1999</date>
<journal>Algorithmica,</journal>
<volume>23</volume>
<issue>3</issue>
<contexts>
<context position="4785" citStr="Andersson et al. (1999)" startWordPosition="949" endWordPosition="952">oposed translations 6 Discussion and Future Work GST and BST construction The most important limitation of our method is that it can find and exploit only word alignments that are monotonic. This makes the system applicable primarily on language pairs which have similar word order, such as EnglishFrench and English-Chinese. A second, less severe limitation concerns the scalability of the algorithms The GST and BST derivation algorithms that we implemented to date are not the most efficient. For example, Kurtz (1999) shows how to reduce space requirements of suffix trees. And Farach (1997) and Andersson et al. (1999) present construction algorithms which, for trees defined over large alphabets such as words, are more efficient than Ukkonen&apos;s algorithm (which we used in our implementation). The matching operation can be parallelized with linear speedup, since matching of a pair of branches is independent of the matching of any other pair. We plan to incorporate these improvements in future versions of our system. Learning new translations The translation precision that we obtained is lower than that reported in previous approaches. However, we attempted to solve a much harder problem: our algorithm does no</context>
</contexts>
<marker>Andersson, Larsson, Swanson, 1999</marker>
<rawString>A. Andersson, N.J. Larsson, and K. Swanson. 1999. Suffix trees on words. Algorithmica, 23 (3) , September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Bieganski</author>
<author>John Riedl</author>
<author>John Carlis</author>
<author>Ernest Retzel</author>
</authors>
<title>Generalized suffix trees for biological sequence data: Applications and implementation.</title>
<date>1994</date>
<booktitle>In Proceedings of the 27th Annual Hawaii International Conference on System Sciences,</booktitle>
<volume>5</volume>
<pages>35--44</pages>
<publisher>IEEE.</publisher>
<marker>Bieganski, Riedl, Carlis, Retzel, 1994</marker>
<rawString>Paul Bieganski, John Riedl, John Carlis, and Ernest Retzel. 1994. Generalized suffix trees for biological sequence data: Applications and implementation. In Proceedings of the 27th Annual Hawaii International Conference on System Sciences, volume 5, pages 35-44. IEEE.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>Stephen A Della Pietra</author>
<author>Vincent J Della Pietra</author>
<author>Robert L Mercer</author>
</authors>
<title>The mathematics of machine translation: Parameter estimation.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<pages>19--2</pages>
<marker>Brown, Pietra, Pietra, Mercer, 1993</marker>
<rawString>Peter F. Brown, Stephen A. Della Pietra, Vincent J. Della Pietra, and Robert L. Mercer. 1993. The mathematics of machine translation: Parameter estimation. Computational Linguistics, 19(2):263-311, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mona Diab</author>
<author>Steve Finch</author>
</authors>
<title>A statistical word-level translation model for comparable corpora.</title>
<date>2000</date>
<booktitle>In Proceedings of the Conference on Content-Based Multimedia Information Access.</booktitle>
<marker>Diab, Finch, 2000</marker>
<rawString>Mona Diab and Steve Finch. 2000. A statistical word-level translation model for comparable corpora. In Proceedings of the Conference on Content-Based Multimedia Information Access.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Farach</author>
</authors>
<title>Optimal suffix tree construction with large alphabets.</title>
<date>1997</date>
<booktitle>38th Annual Symposium on Foundations of Computer Science,</booktitle>
<pages>137--143</pages>
<contexts>
<context position="4757" citStr="Farach (1997)" startWordPosition="946" endWordPosition="947"> been Figure 9: Proposed translations 6 Discussion and Future Work GST and BST construction The most important limitation of our method is that it can find and exploit only word alignments that are monotonic. This makes the system applicable primarily on language pairs which have similar word order, such as EnglishFrench and English-Chinese. A second, less severe limitation concerns the scalability of the algorithms The GST and BST derivation algorithms that we implemented to date are not the most efficient. For example, Kurtz (1999) shows how to reduce space requirements of suffix trees. And Farach (1997) and Andersson et al. (1999) present construction algorithms which, for trees defined over large alphabets such as words, are more efficient than Ukkonen&apos;s algorithm (which we used in our implementation). The matching operation can be parallelized with linear speedup, since matching of a pair of branches is independent of the matching of any other pair. We plan to incorporate these improvements in future versions of our system. Learning new translations The translation precision that we obtained is lower than that reported in previous approaches. However, we attempted to solve a much harder pr</context>
</contexts>
<marker>Farach, 1997</marker>
<rawString>Martin Farach. 1997. Optimal suffix tree construction with large alphabets. 38th Annual Symposium on Foundations of Computer Science, pages 137-143, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pascale Fung</author>
<author>Lo Yuen Yee</author>
</authors>
<title>An IR approach for translating new words from nonparallel, comparable texts.</title>
<date>1998</date>
<booktitle>In &amp;quot;Proceedings of the Thirty-Sixth Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>414--420</pages>
<marker>Fung, Yee, 1998</marker>
<rawString>Pascale Fung and Lo Yuen Yee. 1998. An IR approach for translating new words from nonparallel, comparable texts. In &amp;quot;Proceedings of the Thirty-Sixth Annual Meeting of the Association for Computational Linguistics, pages 414-420.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roberto Grossi</author>
<author>Giuseppe F Italiano</author>
</authors>
<title>Suffix trees and their applications in string algorithms.</title>
<date>1993</date>
<booktitle>In Proc. 1st South American Workshop on String Processing,</booktitle>
<pages>57--76</pages>
<marker>Grossi, Italiano, 1993</marker>
<rawString>Roberto Grossi and Giuseppe F. Italiano. 1993. Suffix trees and their applications in string algorithms. In Proc. 1st South American Workshop on String Processing, pages 57-76, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Gusfield</author>
</authors>
<title>Algorithms on Strings, Trees, and Sequences.</title>
<date>1997</date>
<publisher>Cambridge University Press,</publisher>
<location>New York.</location>
<marker>Gusfield, 1997</marker>
<rawString>Dan Gusfield. 1997. Algorithms on Strings, Trees, and Sequences. Cambridge University Press, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Genichiro Kikui</author>
</authors>
<title>Resolving translation ambiguity using non-parallel bilingual corpora.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL99 Workshop on Unsupervised Learning in Natural Language Processing.</booktitle>
<marker>Kikui, 1999</marker>
<rawString>Genichiro Kikui. 1999. Resolving translation ambiguity using non-parallel bilingual corpora. In Proceedings of ACL99 Workshop on Unsupervised Learning in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
<author>Kevin Knight</author>
</authors>
<title>Estimating word translation probabilities from unrelated monolingual corpora using the EM algorithm.</title>
<date>2000</date>
<booktitle>In Proceedings of the National Conference on Artificial Intelligence,</booktitle>
<pages>711--715</pages>
<marker>Koehn, Knight, 2000</marker>
<rawString>Philipp Koehn and Kevin Knight. 2000. Estimating word translation probabilities from unrelated monolingual corpora using the EM algorithm. In Proceedings of the National Conference on Artificial Intelligence, pages 711-715.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stefan Kurtz</author>
</authors>
<title>Reducing the space requirement of suffix trees.</title>
<date>1999</date>
<booktitle>Software - Practice and Experience,</booktitle>
<pages>29--13</pages>
<contexts>
<context position="4683" citStr="Kurtz (1999)" startWordPosition="933" endWordPosition="934">uments have been exemptions - laws ces exemptions ont ete these laws have been Figure 9: Proposed translations 6 Discussion and Future Work GST and BST construction The most important limitation of our method is that it can find and exploit only word alignments that are monotonic. This makes the system applicable primarily on language pairs which have similar word order, such as EnglishFrench and English-Chinese. A second, less severe limitation concerns the scalability of the algorithms The GST and BST derivation algorithms that we implemented to date are not the most efficient. For example, Kurtz (1999) shows how to reduce space requirements of suffix trees. And Farach (1997) and Andersson et al. (1999) present construction algorithms which, for trees defined over large alphabets such as words, are more efficient than Ukkonen&apos;s algorithm (which we used in our implementation). The matching operation can be parallelized with linear speedup, since matching of a pair of branches is independent of the matching of any other pair. We plan to incorporate these improvements in future versions of our system. Learning new translations The translation precision that we obtained is lower than that report</context>
</contexts>
<marker>Kurtz, 1999</marker>
<rawString>Stefan Kurtz. 1999. Reducing the space requirement of suffix trees. Software - Practice and Experience, 29(13):1149-1171.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Nelson</author>
</authors>
<title>Fast string searching with suffix trees.</title>
<date>1996</date>
<journal>Dr. Dobb&apos;s Journal,</journal>
<marker>Nelson, 1996</marker>
<rawString>Mark Nelson. 1996. Fast string searching with suffix trees. Dr. Dobb&apos;s Journal, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Reinhard Rapp</author>
</authors>
<title>Identifying word translation in non-parallel texts.</title>
<date>1995</date>
<booktitle>In Proceedings of the Conference of the Association for Computational Linguistics,</booktitle>
<pages>320--322</pages>
<marker>Rapp, 1995</marker>
<rawString>Reinhard Rapp. 1995. Identifying word translation in non-parallel texts. In Proceedings of the Conference of the Association for Computational Linguistics, pages 320-322.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Reinhard Rapp</author>
</authors>
<title>Automatic identification of word translations from unrelated English and German corpora.</title>
<date>1999</date>
<booktitle>In Proceedings of the Conference of the Association for Computational Linguistics,</booktitle>
<pages>519--526</pages>
<marker>Rapp, 1999</marker>
<rawString>Reinhard Rapp. 1999. Automatic identification of word translations from unrelated English and German corpora. In Proceedings of the Conference of the Association for Computational Linguistics, pages 519-526.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Esko Ukkonen</author>
</authors>
<title>On-line construction of suffix trees.</title>
<date>1995</date>
<journal>Algorithmica,</journal>
<pages>14--3</pages>
<marker>Ukkonen, 1995</marker>
<rawString>Esko Ukkonen. 1995. On-line construction of suffix trees. Algorithmica, 14(3):249-260, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Weiner</author>
</authors>
<title>Linear pattern matching algorithm.</title>
<date>1973</date>
<booktitle>In Proc. 14 IEEE Symposium on Switching and Automata Theory,</booktitle>
<pages>1--11</pages>
<marker>Weiner, 1973</marker>
<rawString>P. Weiner. 1973. Linear pattern matching algorithm. In Proc. 14 IEEE Symposium on Switching and Automata Theory, pages 1-11.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>