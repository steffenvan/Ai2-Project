<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003161">
<title confidence="0.985787">
Training Phrase Translation Models with Leaving-One-Out
</title>
<author confidence="0.911625">
Joern Wuebker and Arne Mauser and Hermann Ney
</author>
<affiliation confidence="0.8809045">
Human Language Technology and Pattern Recognition Group
RWTH Aachen University, Germany
</affiliation>
<email confidence="0.971058">
&lt;surname&gt;@cs.rwth-aachen.de
</email>
<sectionHeader confidence="0.993268" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.997212571428571">
Several attempts have been made to learn
phrase translation probabilities for phrase-
based statistical machine translation that
go beyond pure counting of phrases
in word-aligned training data. Most
approaches report problems with over-
fitting. We describe a novel leaving-
one-out approach to prevent over-fitting
that allows us to train phrase models that
show improved translation performance
on the WMT08 Europarl German-English
task. In contrast to most previous work
where phrase models were trained sepa-
rately from other models used in transla-
tion, we include all components such as
single word lexica and reordering mod-
els in training. Using this consistent
training of phrase models we are able to
achieve improvements of up to 1.4 points
in BLEU. As a side effect, the phrase table
size is reduced by more than 80%.
matter, whether the phrases are extracted from a
highly probable phrase alignment or from an un-
likely one.
Phrase model probabilities are typically defined
as relative frequencies of phrases extracted from
word-aligned parallel training data. The joint
counts C( ˜f, ˜e) of the source phrase
get phrase e˜ in the entire training data are normal-
ized by the marginal counts of source and target
phrase to obtain a conditional probability
The translation process is implemented as a
weighted log-linear combination of several mod-
els hm(eI1, sK1 , fi) ) including the logarithm of the
phrase probability in source-to-target as well as in
target-to-source direction. The phrase model is
combined with a language model, word lexicon
models, word and phrase penalty, and many oth-
ers. (Och and Ney, 2004) The best translation ˆeˆI1
as defined by the models then can be written as
˜
f and the tar-
</bodyText>
<equation confidence="0.991961428571429">
pH(
˜f|˜e) = C(˜f, ˜e)
C(˜
e) . (1)
1 Introduction ˆe1 = argmax � M
ˆI E λmhm(eI1, sK1 , fi ) (2)
I,ei m=1
</equation>
<bodyText confidence="0.999800148148148">
A phrase-based SMT system takes a source sen-
tence and produces a translation by segmenting the
sentence into phrases and translating those phrases
separately (Koehn et al., 2003). The phrase trans-
lation table, which contains the bilingual phrase
pairs and the corresponding translation probabil-
ities, is one of the main components of an SMT
system. The most common method for obtain-
ing the phrase table is heuristic extraction from
automatically word-aligned bilingual training data
(Och et al., 1999). In this method, all phrases of
the sentence pair that match constraints given by
the alignment are extracted. This includes over-
lapping phrases. At extraction time it does not
In this work, we propose to directly train our
phrase models by applying a forced alignment pro-
cedure where we use the decoder to find a phrase
alignment between source and target sentences of
the training data and then updating phrase transla-
tion probabilities based on this alignment. In con-
trast to heuristic extraction, the proposed method
provides a way of consistently training and using
phrase models in translation. We use a modified
version of a phrase-based decoder to perform the
forced alignment. This way we ensure that all
models used in training are identical to the ones
used at decoding time. An illustration of the basic
</bodyText>
<page confidence="0.98751">
475
</page>
<note confidence="0.987597">
Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 475–484,
Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics
</note>
<figureCaption confidence="0.9921895">
Figure 1: Illustration of phrase training with
forced alignment.
</figureCaption>
<bodyText confidence="0.998764217391304">
idea can be seen in Figure 1. In the literature this
method by itself has been shown to be problem-
atic because it suffers from over-fitting (DeNero
et al., 2006), (Liang et al., 2006). Since our ini-
tial phrases are extracted from the same training
data, that we want to align, very long phrases can
be found for segmentation. As these long phrases
tend to occur in only a few training sentences, the
EM algorithm generally overestimates their prob-
ability and neglects shorter phrases, which better
generalize to unseen data and thus are more useful
for translation. In order to counteract these effects,
our training procedure applies leaving-one-out on
the sentence level. Our results show, that this leads
to a better translation quality.
Ideally, we would produce all possible segmen-
tations and alignments during training. However,
this has been shown to be infeasible for real-world
data (DeNero and Klein, 2008). As training uses
a modified version of the translation decoder, it is
straightforward to apply pruning as in regular de-
coding. Additionally, we consider three ways of
approximating the full search space:
</bodyText>
<listItem confidence="0.993893">
1. the single-best Viterbi alignment,
2. the n-best alignments,
3. all alignments remaining in the search space
after pruning.
</listItem>
<bodyText confidence="0.999352470588235">
The performance of the different approaches is
measured and compared on the German-English
Europarl task from the ACL 2008 Workshop on
Statistical Machine Translation (WMT08). Our
results show that the proposed phrase model train-
ing improves translation quality on the test set by
0.9 BLEU points over our baseline. We find that
by interpolation with the heuristically extracted
phrases translation performance can reach up to
1.4 BLEU improvement over the baseline on the
test set.
After reviewing the related work in the fol-
lowing section, we give a detailed description
of phrasal alignment and leaving-one-out in Sec-
tion 3. Section 4 explains the estimation of phrase
models. The empirical evaluation of the different
approaches is done in Section 5.
</bodyText>
<sectionHeader confidence="0.999782" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999968909090909">
It has been pointed out in literature, that training
phrase models poses some difficulties. For a gen-
erative model, (DeNero et al., 2006) gave a de-
tailed analysis of the challenges and arising prob-
lems. They introduce a model similar to the one
we propose in Section 4.2 and train it with the EM
algorithm. Their results show that it can not reach
a performance competitive to extracting a phrase
table from word alignment by heuristics (Och et
al., 1999).
Several reasons are revealed in (DeNero et al.,
2006). When given a bilingual sentence pair, we
can usually assume there are a number of equally
correct phrase segmentations and corresponding
alignments. For example, it may be possible to
transform one valid segmentation into another by
splitting some of its phrases into sub-phrases or by
shifting phrase boundaries. This is different from
word-based translation models, where a typical as-
sumption is that each target word corresponds to
only one source word. As a result of this am-
biguity, different segmentations are recruited for
different examples during training. That in turn
leads to over-fitting which shows in overly deter-
minized estimates of the phrase translation prob-
abilities. In addition, (DeNero et al., 2006) found
that the trained phrase table shows a highly peaked
distribution in opposition to the more flat distribu-
tion resulting from heuristic extraction, leaving the
decoder only few translation options at decoding
time.
Our work differs from (DeNero et al., 2006)
in a number of ways, addressing those problems.
</bodyText>
<page confidence="0.998613">
476
</page>
<bodyText confidence="0.999974965517241">
To limit the effects of over-fitting, we apply the
leaving-one-out and cross-validation methods in
training. In addition, we do not restrict the train-
ing to phrases consistent with the word alignment,
as was done in (DeNero et al., 2006). This allows
us to recover from flawed word alignments.
In (Liang et al., 2006) a discriminative transla-
tion system is described. For training of the pa-
rameters for the discriminative features they pro-
pose a strategy they call bold updating. It is simi-
lar to our forced alignment training procedure de-
scribed in Section 3.
For the hierarchical phrase-based approach,
(Blunsom et al., 2008) present a discriminative
rule model and show the difference between using
only the viterbi alignment in training and using the
full sum over all possible derivations.
Forced alignment can also be utilized to train a
phrase segmentation model, as is shown in (Shen
et al., 2008). They report small but consistent
improvements by incorporating this segmentation
model, which works as an additional prior proba-
bility on the monolingual target phrase.
In (Ferrer and Juan, 2009), phrase models are
trained by a semi-hidden Markov model. They
train a conditional “inverse” phrase model of the
target phrase given the source phrase. Addition-
ally to the phrases, they model the segmentation
sequence that is used to produce a phrase align-
ment between the source and the target sentence.
They used a phrase length limit of 4 words with
longer phrases not resulting in further improve-
ments. To counteract over-fitting, they interpolate
the phrase model with IBM Model 1 probabilities
that are computed on the phrase level. We also in-
clude these word lexica, as they are standard com-
ponents of the phrase-based system.
It is shown in (Ferrer and Juan, 2009), that
Viterbi training produces almost the same results
as full Baum-Welch training. They report im-
provements over a phrase-based model that uses
an inverse phrase model and a language model.
Experiments are carried out on a custom subset of
the English-Spanish Europarl corpus.
Our approach is similar to the one presented in
(Ferrer and Juan, 2009) in that we compare Viterbi
and a training method based on the Forward-
Backward algorithm. But instead of focusing on
the statistical model and relaxing the translation
task by using monotone translation only, we use a
full and competitive translation system as starting
point with reordering and all models included.
In (Marcu and Wong, 2002), a joint probability
phrase model is presented. The learned phrases
are restricted to the most frequent n-grams up to
length 6 and all unigrams. Monolingual phrases
have to occur at least 5 times to be considered
in training. Smoothing is applied to the learned
models so that probabilities for rare phrases are
non-zero. In training, they use a greedy algorithm
to produce the Viterbi phrase alignment and then
apply a hill-climbing technique that modifies the
Viterbi alignment by merge, move, split, and swap
operations to find an alignment with a better prob-
ability in each iteration. The model shows im-
provements in translation quality over the single-
word-based IBM Model 4 (Brown et al., 1993) on
a subset of the Canadian Hansards corpus.
The joint model by (Marcu and Wong, 2002)
is refined by (Birch et al., 2006) who use
high-confidence word alignments to constrain the
search space in training. They observe that due to
several constraints and pruning steps, the trained
phrase table is much smaller than the heuristically
extracted one, while preserving translation quality.
The work by (DeNero et al., 2008) describes
a method to train the joint model described in
(Marcu and Wong, 2002) with a Gibbs sampler.
They show that by applying a prior distribution
over the phrase translation probabilities they can
prevent over-fitting. The prior is composed of
IBM1 lexical probabilities and a geometric distri-
bution over phrase lengths which penalizes long
phrases. The two approaches differ in that we ap-
ply the leaving-one-out procedure to avoid over-
fitting, as opposed to explicitly defining a prior
distribution.
</bodyText>
<sectionHeader confidence="0.992504" genericHeader="method">
3 Alignment
</sectionHeader>
<bodyText confidence="0.999972818181818">
The training process is divided into three parts.
First we obtain all models needed for a normal
translations system. We perform minimum error
rate training with the downhill simplex algorithm
(Nelder and Mead, 1965) on the development data
to obtain a set of scaling factors that achieve a
good BLEU score. We then use these models and
scaling factors to do a forced alignment, where
we compute a phrase alignment for the training
data. From this alignment we then estimate new
phrase models, while keeping all other models un-
</bodyText>
<page confidence="0.991995">
477
</page>
<bodyText confidence="0.998583666666667">
changed. In this section we describe our forced
alignment procedure that is the basic training pro-
cedure for the models proposed here.
</bodyText>
<subsectionHeader confidence="0.997115">
3.1 Forced Alignment
</subsectionHeader>
<bodyText confidence="0.999949642857143">
The idea of forced alignment is to perform a
phrase segmentation and alignment of each sen-
tence pair of the training data using the full transla-
tion system as in decoding. What we call segmen-
tation and alignment here corresponds to the “con-
cepts” used by (Marcu and Wong, 2002). We ap-
ply our normal phrase-based decoder on the source
side of the training data and constrain the transla-
tions to the corresponding target sentences from
the training data.
Given a source sentence f1 and target sentence
el, we search for the best phrase segmentation and
alignment that covers both sentences. A segmen-
tation of a sentence into K phrase is defined by
</bodyText>
<equation confidence="0.882687">
k — sk (ik, bk,jk), fork = 1, ... , K
</equation>
<bodyText confidence="0.999397666666667">
where for each segment ik is last position of kth
target phrase, and (bk, jk) are the start and end
positions of the source phrase aligned to the kth
target phrase. Consequently, we can modify Equa-
tion 2 to define the best segmentation of a sentence
pair as:
</bodyText>
<equation confidence="0.989800666666667">
� M
s�Kˆ1 = argmax λmhm(eI, sK1 , fi ) (3)
K,sl m=1
</equation>
<bodyText confidence="0.999983875">
The identical models as in search are used: condi-
tional phrase probabilities p(�fk|Ek) and p(ek |A),
within-phrase lexical probabilities, distance-based
reordering model as well as word and phrase
penalty. A language model is not used in this case,
as the system is constrained to the given target sen-
tence and thus the language model score has no
effect on the alignment.
In addition to the phrase matching on the source
sentence, we also discard all phrase translation
candidates, that do not match any sequence in the
given target sentence.
Sentences for which the decoder can not find
an alignment are discarded for the phrase model
training. In our experiments, this is the case for
roughly 5% of the training sentences.
</bodyText>
<subsectionHeader confidence="0.999652">
3.2 Leaving-one-out
</subsectionHeader>
<bodyText confidence="0.999980283018868">
As was mentioned in Section 2, previous ap-
proaches found over-fitting to be a problem in
phrase model training. In this section, we de-
scribe a leaving-one-out method that can improve
the phrase alignment in situations, where the prob-
ability of rare phrases and alignments might be
overestimated. The training data that consists of N
parallel sentence pairs fn and en for n = 1, ... , N
is used for both the initialization of the transla-
tion model p( 1|E) and the phrase model training.
While this way we can make full use of the avail-
able data and avoid unknown words during train-
ing, it has the drawback that it can lead to over-
fitting. All phrases extracted from a specific sen-
tence pair fn, en can be used for the alignment of
this sentence pair. This includes longer phrases,
which only match in very few sentences in the
data. Therefore those long phrases are trained to
fit only a few sentence pairs, strongly overesti-
mating their translation probabilities and failing to
generalize. In the extreme case, whole sentences
will be learned as phrasal translations. The aver-
age length of the used phrases is an indicator of
this kind of over-fitting, as the number of match-
ing training sentences decreases with increasing
phrase length. We can see an example in Figure
2. Without leaving-one-out the sentence is seg-
mented into a few long phrases, which are unlikely
to occur in data to be translated. Phrase boundaries
seem to be unintuitive and based on some hidden
structures. With leaving-one-out the phrases are
shorter and therefore better suited for generaliza-
tion to unseen data.
Previous attempts have dealt with the over-
fitting problem by limiting the maximum phrase
length (DeNero et al., 2006; Marcu and Wong,
2002) and by smoothing the phrase probabilities
by lexical models on the phrase level (Ferrer and
Juan, 2009). However, (DeNero et al., 2006) expe-
rienced similar over-fitting with short phrases due
to the fact that the same word sequence can be seg-
mented in different ways, leading to specific seg-
mentations being learned for specific training sen-
tence pairs. Our results confirm these findings. To
deal with this problem, instead of simple phrase
length restriction, we propose to apply the leaving-
one-out method, which is also used for language
modeling techniques (Kneser and Ney, 1995).
When using leaving-one-out, we modify the
phrase translation probabilities for each sentence
pair. For a training example fn, en, we have to
remove all phrases Cn( f, e) that were extracted
from this sentence pair from the phrase counts that
</bodyText>
<page confidence="0.996826">
478
</page>
<figureCaption confidence="0.9593">
Figure 2: Segmentation example from forced alignment. Top: without leaving-one-out. Bottom: with
leaving-one-out.
</figureCaption>
<bodyText confidence="0.999716277777778">
we used to construct our phrase translation table.
The same holds for the marginal counts Cn(˜e) and
Cn(˜f). Starting from Equation 1, the leaving-one-
out phrase probability for training sentence pair n
is
To be able to perform the re-computation in an
efficient way, we store the source and target phrase
marginal counts for each phrase in the phrase ta-
ble. A phrase extraction is performed for each
training sentence pair separately using the same
word alignment as for the initialization. It is then
straightforward to compute the phrase counts after
leaving-one-out using the phrase probabilities and
marginal counts stored in the phrase table.
While this works well for more frequent obser-
vations, singleton phrases are assigned a probabil-
ity of zero. We refer to singleton phrases as phrase
pairs that occur only in one sentence. For these
sentences, the decoder needs the singleton phrase
pairs to produce an alignment. Therefore we retain
those phrases by assigning them a positive proba-
bility close to zero. We evaluated with two differ-
ent strategies for this, which we call standard and
length-based leaving-one-out. Standard leaving-
one-out assigns a fixed probability α to singleton
phrase pairs. This way the decoder will prefer us-
ing more frequent phrases for the alignment, but is
able to resort to singletons if necessary. However,
we found that with this method longer singleton
phrases are preferred over shorter ones, because
fewer of them are needed to produce the target sen-
tence. In order to better generalize to unseen data,
we would like to give the preference to shorter
phrases. This is done by length-based leaving-
one-out, where singleton phrases are assigned the
probability β(|�1|+|e|) with the source and target
</bodyText>
<tableCaption confidence="0.983986666666667">
Table 1: Avg. source phrase lengths in forced
alignment without leaving-one-out and with stan-
dard and length-based leaving-one-out.
</tableCaption>
<table confidence="0.9717855">
avg. phrase length
without l1o 2.5
standard l1o 1.9
length-based l1o 1.6
</table>
<bodyText confidence="0.9959045">
phrase lengths  |˜f |and |˜e |and fixed β &lt; 1. In our
experiments we set α = e−20 and β = e−5. Ta-
ble 1 shows the decrease in average source phrase
length by application of leaving-one-out.
</bodyText>
<subsectionHeader confidence="0.999634">
3.3 Cross-validation
</subsectionHeader>
<bodyText confidence="0.999991416666667">
For the first iteration of the phrase training,
leaving-one-out can be implemented efficiently as
described in Section 3.2. For higher iterations,
phrase counts obtained in the previous iterations
would have to be stored on disk separately for each
sentence and accessed during the forced alignment
process. To simplify this procedure, we propose
a cross-validation strategy on larger batches of
data. Instead of recomputing the phrase counts for
each sentence individually, this is done for a whole
batch of sentences at a time. In our experiments,
we set this batch-size to 10000 sentences.
</bodyText>
<subsectionHeader confidence="0.940998">
3.4 Parallelization
</subsectionHeader>
<bodyText confidence="0.9999745">
To cope with the runtime and memory require-
ments of phrase model training that was pointed
out by previous work (Marcu and Wong, 2002;
Birch et al., 2006), we parallelized the forced
alignment by splitting the training corpus into
blocks of 10k sentence pairs. From the initial
phrase table, each of these blocks only loads the
phrases that are required for alignment. The align-
</bodyText>
<equation confidence="0.9726974">
p11o&amp;quot;n(
(4)
C(˜e) − Cn(˜e)
˜f|˜e) = C(
˜f, ˜e) − Cn(˜f, ˜e)
</equation>
<page confidence="0.989978">
479
</page>
<bodyText confidence="0.999838">
ment and the counting of phrases are done sep-
arately for each block and then accumulated to
build the updated phrase model.
</bodyText>
<sectionHeader confidence="0.99736" genericHeader="method">
4 Phrase Model Training
</sectionHeader>
<bodyText confidence="0.999837333333333">
The produced phrase alignment can be given as a
single best alignment, as the n-best alignments or
as an alignment graph representing all alignments
considered by the decoder. We have developed
two different models for phrase translation proba-
bilities which make use of the force-aligned train-
ing data. Additionally we consider smoothing by
different kinds of interpolation of the generative
model with the state-of-the-art heuristics.
</bodyText>
<subsectionHeader confidence="0.83603">
4.1 Viterbi
</subsectionHeader>
<bodyText confidence="0.960120285714286">
The simplest of our generative phrase models esti-
mates phrase translation probabilities by their rel-
ative frequencies in the Viterbi alignment of the
data, similar to the heuristic model but with counts
from the phrase-aligned data produced in training
rather than computed on the basis of a word align-
ment. The translation probability of a phrase pair
</bodyText>
<equation confidence="0.837931333333333">
(˜f, ˜e) is estimated as
pFA(˜f|˜e) = CFA(
CFA(
</equation>
<bodyText confidence="0.997169384615385">
where CFA( ˜f, ˜e) is the count of the phrase pair
(˜f, ˜e) in the phrase-aligned training data. This can
be applied to either the Viterbi phrase alignment
or an n-best list. For the simplest model, each
hypothesis in the n-best list is weighted equally.
We will refer to this model as the count model as
we simply count the number of occurrences of a
phrase pair. We also experimented with weight-
ing the counts with the estimated likelihood of the
corresponding entry in the the n-best list. The sum
of the likelihoods of all entries in an n-best list is
normalized to 1. We will refer to this model as the
weighted count model.
</bodyText>
<figure confidence="0.983088833333333">
4.2 Forward-backward
�
f&apos;
˜f, ˜e)
(5)
˜f�, ˜e)
</figure>
<figureCaption confidence="0.490216">
probability. As discussed earli
</figureCaption>
<bodyText confidence="0.952401125">
er, the run-time re-
quirements for computing all possible alignments
is prohibitive for large data tasks. However, we
can approximate the space of all possible hypothe-
ses by the search space that was used for the align-
ment. While this might not cover all phrase trans-
lation probabilities, it allows the search space and
pute expectations using the Forward-Backward al-
gorithm. We will refer to this alignment as the full
alignment. In contrast to the method described in
Section 4.1, phrases are weighted by their poste-
or probabilities.
translation times to be feasible and still contains
the most probable alignments. This search space
can be represented as a graph of partial hypothe-
ses (Ueffing et al., 2002) on which we can com-
The log-linear interpolations
of the
pint(˜f|˜e)
slation probabilities are estimated as
rior probability in the word graph. As suggested in
work on minimum Bayes-risk decoding for SMT
(Tromble et al., 2008; Ehling et al., 2007), we use
a global factor to scale the posteri
</bodyText>
<equation confidence="0.438292666666667">
( )��� ( )���
pint( ˜f|˜e) = pH( ˜f|˜e) · pyen( ˜f|˜e)
(6)
</equation>
<bodyText confidence="0.483173333333333">
Ideally, the training procedure would consider all
possible alignment and segmentation hypotheses.
When alternatives are weighted by their posterior
</bodyText>
<subsectionHeader confidence="0.579657">
4.3 Phrase Table Interpolation
</subsectionHeader>
<bodyText confidence="0.988425967741935">
As (DeNero et al., 2006) have reported improve-
ments in translation quality by interpolation of
phrase tables produced by the generative and the
heuristic model, we adopt this method and also re-
port results using log-linear interpolation of the es-
timated model with the original model.
phrase tran
where
is the interpolation weight, pH the
heuristically estimated phrase model and pyen the
count model. The interpolation weight
is ad-
justed on the development corpus. When inter-
polating phrase tables containing different sets of
phrase pairs, we retain the intersection of the two.
As a generalization of the fixed interpolation of
the two phrase tables we also experimented with
adding the two trained phrase probabilities as ad-
ditional features to the log-linear framework. This
way we allow different interpolation weights for
the two translation directions and can optimize
them automaticall
ω
ω
y along with the other feature
weights. We will refer to this method as feature-
wise combination. Again, we retain the intersec-
tion of the two phrase tables. With good log-
linear feature weights, feature-wise combination
should perform at least as well as fixed interpo-
lation. However, the results presented in Table 5
</bodyText>
<page confidence="0.999403">
480
</page>
<tableCaption confidence="0.95784925">
Table 2: Statistics for the Europarl German-
English data
Table 3: Comparison of different training setups
for the count model on DEV.
</tableCaption>
<table confidence="0.999300692307692">
German English
TRAIN Sentences 1311815
Run. Words 34 398 651 36 090 085
Vocabulary 336 347 118112
Singletons 168 686 47 507
DEV Sentences 2000
Run. Words 55118 58 761
Vocabulary 9 211 6 549
OOVs 284 77
TEST Sentences 2000
Run. Words 56 635 60188
Vocabulary 9 254 6 497
OOVs 266 89
</table>
<bodyText confidence="0.998517">
show a slightly lower performance. This illustrates
that a higher number of features results in a less
reliable optimization of the log-linear parameters.
</bodyText>
<sectionHeader confidence="0.988664" genericHeader="method">
5 Experimental Evaluation
</sectionHeader>
<subsectionHeader confidence="0.98179">
5.1 Experimental Setup
</subsectionHeader>
<bodyText confidence="0.999922791666667">
We conducted our experiments on the German-
English data published for the ACL 2008
Workshop on Statistical Machine Translation
(WMT08). Statistics for the Europarl data are
given in Table 2.
We are given the three data sets TRAIN, DEV
and TEST. For the heuristic phrase model, we
first use GIZA++ (Och and Ney, 2003) to compute
the word alignment on TRAIN. Next we obtain
a phrase table by extraction of phrases from the
word alignment. The scaling factors of the trans-
lation models have been optimized for BLEU on
the DEV data.
The phrase table obtained by heuristic extraction
is also used to initialize the training. The forced
alignment is run on the training data TRAIN
from which we obtain the phrase alignments.
Those are used to build a phrase table according
to the proposed generative phrase models. After-
ward, the scaling factors are trained on DEV for
the new phrase table. By feeding back the new
phrase table into forced alignment we can reiterate
the training procedure. When training is finished
the resulting phrase model is evaluated on DEV
</bodyText>
<table confidence="0.983603777777778">
leaving-one-out max phr.len. BLEU TER
baseline 6 25.7 61.1
none 2 25.2 61.3
3 25.7 61.3
4 25.5 61.4
5 25.5 61.4
6 25.4 61.7
standard 6 26.4 60.9
length-based 6 26.5 60.6
</table>
<bodyText confidence="0.9969475">
and TEST. Additionally, we can apply smooth-
ing by interpolation of the new phrase table with
the original one estimated heuristically, retrain the
scaling factors and evaluate afterwards.
The baseline system is a standard phrase-based
SMT system with eight features: phrase transla-
tion and word lexicon probabilities in both transla-
tion directions, phrase penalty, word penalty, lan-
guage model score and a simple distance-based re-
ordering model. The features are combined in a
log-linear way. To investigate the generative mod-
els, we replace the two phrase translation prob-
abilities and keep the other features identical to
the baseline. For the feature-wise combination
the two generative phrase probabilities are added
to the features, resulting in a total of 10 features.
We used a 4-gram language model with modified
Kneser-Ney discounting for all experiments. The
metrics used for evaluation are the case-sensitive
BLEU (Papineni et al., 2002) score and the trans-
lation edit rate (TER) (Snover et al., 2006) with
one reference translation.
</bodyText>
<subsectionHeader confidence="0.946356">
5.2 Results
</subsectionHeader>
<bodyText confidence="0.999838454545455">
In this section, we investigate the different as-
pects of the models and methods presented be-
fore. We will focus on the proposed leaving-one-
out technique and show that it helps in finding
good phrasal alignments on the training data that
lead to improved translation models. Our final
results show an improvement of 1.4 BLEU over
the heuristically extracted phrase model on the test
data set.
In Section 3.2 we have discussed several meth-
ods which aim to overcome the over-fitting prob-
</bodyText>
<page confidence="0.998488">
481
</page>
<figureCaption confidence="0.983174333333333">
Figure 3: Performance on DEV in BLEU of the
count model plotted against size n of n-best list
on a logarithmic scale.
</figureCaption>
<bodyText confidence="0.999914514285714">
lems described in (DeNero et al., 2006). Table 3
shows translation scores of the count model on the
development data after the first training iteration
for both leaving-one-out strategies we have in-
troduced and for training without leaving-one-out
with different restrictions on phrase length. We
can see that by restricting the source phrase length
to a maximum of 3 words, the trained model is
close to the performance of the heuristic phrase
model. With the application of leaving-one-out,
the trained model is superior to the baseline, the
length-based strategy performing slightly better
than standard leaving-one-out. For these experi-
ments the count model was estimated with a 100-
best list.
The count model we describe in Section 4.1 esti-
mates phrase translation probabilities using counts
from the n-best phrase alignments. For smaller n
the resulting phrase table contains fewer phrases
and is more deterministic. For higher values of
n more competing alignments are taken into ac-
count, resulting in a bigger phrase table and a
smoother distribution. We can see in Figure 3
that translation performance improves by moving
from the Viterbi alignment to n-best alignments.
The variations in performance with sizes between
n = 10 and n = 10000 are less than 0.2 BLEU.
The maximum is reached for n = 100, which we
used in all subsequent experiments. An additional
benefit of the count model is the smaller phrase
table size compared to the heuristic phrase extrac-
tion. This is consistent with the findings of (Birch
et al., 2006). Table 4 shows the phrase table sizes
for different n. With n = 100 we retain only 17%
of the original phrases. Even for the full model, we
</bodyText>
<tableCaption confidence="0.595116666666667">
Table 4: Phrase table size of the count model for
different n-best list sizes, the full model and for
heuristic phrase extraction.
</tableCaption>
<table confidence="0.9982355">
N # phrases % of full table
1 4.9M 5.3
10 8.4M 9.1
100 15.9M 17.2
1000 27.1M 29.2
10000 40.1M 43.2
full 59.6M 64.2
heuristic 92.7M 100.0
</table>
<bodyText confidence="0.999687162162162">
do not retain all phrase table entries. Due to prun-
ing in the forced alignment step, not all translation
options are considered. As a result experiments
can be done more rapidly and with less resources
than with the heuristically extracted phrase table.
Also, our experiments show that the increased per-
formance of the count model is partly derived from
the smaller phrase table size. In Table 5 we can see
that the performance of the heuristic phrase model
can be increased by 0.6 BLEU on TEST by fil-
tering the phrase table to contain the same phrases
as the count model and reoptimizing the log-linear
model weights. The experiments on the number of
different alignments taken into account were done
with standard leaving-one-out.
The final results are given in Table 5. We can
see that the count model outperforms the base-
line by 0.8 BLEU on DEV and 0.9 BLEU on
TEST after the first training iteration. The perfor-
mance of the filtered baseline phrase table shows
that part of that improvement derives from the
smaller phrase table size. Application of cross-
validation (cv) in the first iteration yields a perfor-
mance close to training with leaving-one-out (l1o),
which indicates that cross-validation can be safely
applied to higher training iterations as an alterna-
tive to leaving-one-out. The weighted count model
clearly under-performs the simpler count model.
A second iteration of the training algorithm shows
nearly no changes in BLEU score, but a small im-
provement in TER. Here, we used the phrase table
trained with leaving-one-out in the first iteration
and applied cross-validation in the second itera-
tion. Log-linear interpolation of the count model
with the heuristic yields a further increase, show-
ing an improvement of 1.3 BLEU on DEV and 1.4
BLEU on TEST over the baseline. The interpo-
</bodyText>
<page confidence="0.996016">
482
</page>
<bodyText confidence="0.9781021">
Table 5: Final results for the heuristic phrase table
filtered to contain the same phrases as the count
model (baseline filt.), the count model trained with
leaving-one-out (l1o) and cross-validation (cv),
the weighted count model and the full model. Fur-
ther, scores for fixed log-linear interpolation of the
count model trained with leaving-one-out with the
heuristic as well as a feature-wise combination are
shown. The results of the second training iteration
are given in the bottom row.
</bodyText>
<table confidence="0.984327363636364">
DEV TEST
BLEU TER BLEU TER
baseline 25.7 61.1 26.3 60.9
baseline filt. 26.0 61.6 26.9 61.2
count (l1o) 26.5 60.6 27.2 60.5
count (cv) 26.4 60.7 27.0 60.7
weight. count 25.9 61.4 26.4 61.3
full 26.3 60.0 27.0 60.2
fixed interpol. 27.0 59.4 27.7 59.2
feat. comb. 26.8 60.1 27.6 59.9
count, iter. 2 26.4 60.3 27.2 60.0
</table>
<bodyText confidence="0.999276727272727">
lation weight is adjusted on the development set
and was set to w = 0.6. Integrating both models
into the log-linear framework (feat. comb.) yields
a BLEU score slightly lower than with fixed inter-
polation on both DEV and TEST. This might
be attributed to deficiencies in the tuning proce-
dure. The full model, where we extract all phrases
from the search graph, weighted with their poste-
rior probability, performs comparable to the count
model with a slightly worse BLEU and a slightly
better TER.
</bodyText>
<sectionHeader confidence="0.999249" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.99997062962963">
We have shown that training phrase models can
improve translation performance on a state-of-
the-art phrase-based translation model. This is
achieved by training phrase translation probabil-
ities in a way that they are consistent with their
use in translation. A crucial aspect here is the use
of leaving-one-out to avoid over-fitting. We have
shown that the technique is superior to limiting
phrase lengths and smoothing with lexical prob-
abilities alone.
While models trained from Viterbi alignments
already lead to good results, we have demonstrated
that considering the 100-best alignments allows to
better model the ambiguities in phrase segmenta-
tion.
The proposed techniques are shown to be supe-
rior to previous approaches that only used lexical
probabilities to smooth phrase tables or imposed
limits on the phrase lengths. On the WMT08 Eu-
roparl task we show improvements of 0.9 BLEU
points with the trained phrase table and 1.4 BLEU
points when interpolating the newly trained model
with the original, heuristically extracted phrase ta-
ble. In TER, improvements are 0.4 and 1.7 points.
In addition to the improved performance, the
trained models are smaller leading to faster and
smaller translation systems.
</bodyText>
<sectionHeader confidence="0.99856" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999962444444444">
This work was partly realized as part of the
Quaero Programme, funded by OSEO, French
State agency for innovation, and also partly based
upon work supported by the Defense Advanced
Research Projects Agency (DARPA) under Con-
tract No. HR001-06-C-0023. Any opinions,
ndings and conclusions or recommendations ex-
pressed in this material are those of the authors and
do not necessarily reect the views of the DARPA.
</bodyText>
<sectionHeader confidence="0.999263" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999914954545455">
Alexandra Birch, Chris Callison-Burch, Miles Os-
borne, and Philipp Koehn. 2006. Constraining the
phrase-based, joint probability statistical translation
model. In smt2006, pages 154–157, Jun.
Phil Blunsom, Trevor Cohn, and Miles Osborne. 2008.
A discriminative latent variable model for statisti-
cal machine translation. In Proceedings of ACL-08:
HLT, pages 200–208, Columbus, Ohio, June. Asso-
ciation for Computational Linguistics.
P. F. Brown, V. J. Della Pietra, S. A. Della Pietra, and
R. L. Mercer. 1993. The mathematics of statistical
machine translation: parameter estimation. Compu-
tational Linguistics, 19(2):263–312, June.
John DeNero and Dan Klein. 2008. The complexity
of phrase alignment problems. In Proceedings of the
46th Annual Meeting of the Association for Compu-
tational Linguistics on Human Language Technolo-
gies: Short Papers, pages 25–28, Morristown, NJ,
USA. Association for Computational Linguistics.
John DeNero, Dan Gillick, James Zhang, and Dan
Klein. 2006. Why Generative Phrase Models Un-
derperform Surface Heuristics. In Proceedings of the
</reference>
<page confidence="0.99086">
483
</page>
<reference confidence="0.999808930232558">
Workshop on Statistical Machine Translation, pages
31–38, New York City, June.
John DeNero, Alexandre Buchard-Cˆot´e, and Dan
Klein. 2008. Sampling Alignment Structure under
a Bayesian Translation Model. In Proceedings of
the 2008 Conference on Empirical Methods in Natu-
ral Language Processing, pages 314–323, Honolulu,
October.
Nicola Ehling, Richard Zens, and Hermann Ney. 2007.
Minimum bayes risk decoding for bleu. In ACL ’07:
Proceedings of the 45th Annual Meeting of the ACL
on Interactive Poster and Demonstration Sessions,
pages 101–104, Morristown, NJ, USA. Association
for Computational Linguistics.
Jes´us-Andr´es Ferrer and Alfons Juan. 2009. A phrase-
based hidden semi-markov approach to machine
translation. In Procedings of European Association
for Machine Translation (EAMT), Barcelona, Spain,
May. European Association for Machine Translation.
Reinhard Kneser and Hermann Ney. 1995. Improved
Backing-Off for M-gram Language Modelling. In
IEEE Int. Conf. on Acoustics, Speech and Signal
Processing (ICASSP), pages 181–184, Detroit, MI,
May.
Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In Pro-
ceedings of the 2003 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics on Human Language Technology - Vol-
ume 1, pages 48–54, Morristown, NJ, USA. Associ-
ation for Computational Linguistics.
Percy Liang, Alexandre Buchard-Cˆot´e, Dan Klein, and
Ben Taskar. 2006. An End-to-End Discriminative
Approach to Machine Translation. In Proceedings of
the 21st International Conference on Computational
Linguistics and the 44th annual meeting of the As-
sociation for Computational Linguistics, pages 761–
768, Sydney, Australia.
Daniel Marcu and William Wong. 2002. A phrase-
based, joint probability model for statistical machine
translation. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing
(EMNLP-2002), July.
J.A. Nelder and R. Mead. 1965. A Simplex Method
for Function Minimization. The Computer Journal),
7:308–313.
Franz Josef Och and Hermann Ney. 2003. A sys-
tematic comparison of various statistical alignment
models. Computational Linguistics, 29(1):19–51,
March.
Franz Josef Och and Hermann Ney. 2004. The align-
ment template approach to statistical machine trans-
lation. Computational Linguistics, 30(4):417–449,
December.
F.J. Och, C. Tillmann, and H. Ney. 1999. Improved
alignment models for statistical machine translation.
In Proc. of the Joint SIGDAT Conf. on Empirical
Methods in Natural Language Processing and Very
Large Corpora (EMNLP99), pages 20–28, Univer-
sity of Maryland, College Park, MD, USA, June.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of the
40th Annual Meeting on Association for Computa-
tional Linguistics, pages 311–318, Morristown, NJ,
USA. Association for Computational Linguistics.
Wade Shen, Brian Delaney, Tim Anderson, and Ray
Slyh. 2008. The MIT-LL/AFRL IWSLT-2008 MT
System. In Proceedings of IWSLT 2008, pages 69–
76, Hawaii, U.S.A., October.
Matthew Snover, Bonnie Dorr, Rich Schwartz, Linnea
Micciulla, and John Makhoul. 2006. A study of
translation edit rate with targeted human annotation.
In Proc. of AMTA, pages 223–231, Aug.
Roy Tromble, Shankar Kumar, Franz Och, and Wolf-
gang Macherey. 2008. Lattice Minimum Bayes-
Risk decoding for statistical machine translation.
In Proceedings of the 2008 Conference on Empiri-
cal Methods in Natural Language Processing, pages
620–629, Honolulu, Hawaii, October. Association
for Computational Linguistics.
N. Ueffing, F.J. Och, and H. Ney. 2002. Genera-
tion of word graphs in statistical machine translation.
In Proc. of the Conference on Empirical Methods
for Natural Language Processing, pages 156–163,
Philadelphia, PA, USA, July.
</reference>
<page confidence="0.998962">
484
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.363519">
<title confidence="0.999721">Training Phrase Translation Models with Leaving-One-Out</title>
<author confidence="0.879428">Wuebker Mauser Ney</author>
<affiliation confidence="0.707069">Human Language Technology and Pattern Recognition Group RWTH Aachen University, Germany</affiliation>
<email confidence="0.998541"><surname>@cs.rwth-aachen.de</email>
<abstract confidence="0.991290555555556">Several attempts have been made to learn phrase translation probabilities for phrasebased statistical machine translation that go beyond pure counting of phrases in word-aligned training data. Most approaches report problems with overfitting. We describe a novel leavingone-out approach to prevent over-fitting that allows us to train phrase models that show improved translation performance on the WMT08 Europarl German-English task. In contrast to most previous work where phrase models were trained separately from other models used in translation, we include all components such as single word lexica and reordering models in training. Using this consistent training of phrase models we are able to achieve improvements of up to 1.4 points in BLEU. As a side effect, the phrase table size is reduced by more than 80%. matter, whether the phrases are extracted from a highly probable phrase alignment or from an unlikely one. Phrase model probabilities are typically defined as relative frequencies of phrases extracted from word-aligned parallel training data. The joint the source phrase phrase the entire training data are normalized by the marginal counts of source and target phrase to obtain a conditional probability The translation process is implemented as a weighted log-linear combination of several modthe logarithm of the phrase probability in source-to-target as well as in target-to-source direction. The phrase model is combined with a language model, word lexicon models, word and phrase penalty, and many oth- (Och and Ney, 2004) The best translation as defined by the models then can be written as ˜ the tar- = .</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Alexandra Birch</author>
<author>Chris Callison-Burch</author>
<author>Miles Osborne</author>
<author>Philipp Koehn</author>
</authors>
<title>Constraining the phrase-based, joint probability statistical translation model.</title>
<date>2006</date>
<booktitle>In smt2006,</booktitle>
<pages>154--157</pages>
<contexts>
<context position="10475" citStr="Birch et al., 2006" startWordPosition="1689" endWordPosition="1692">considered in training. Smoothing is applied to the learned models so that probabilities for rare phrases are non-zero. In training, they use a greedy algorithm to produce the Viterbi phrase alignment and then apply a hill-climbing technique that modifies the Viterbi alignment by merge, move, split, and swap operations to find an alignment with a better probability in each iteration. The model shows improvements in translation quality over the singleword-based IBM Model 4 (Brown et al., 1993) on a subset of the Canadian Hansards corpus. The joint model by (Marcu and Wong, 2002) is refined by (Birch et al., 2006) who use high-confidence word alignments to constrain the search space in training. They observe that due to several constraints and pruning steps, the trained phrase table is much smaller than the heuristically extracted one, while preserving translation quality. The work by (DeNero et al., 2008) describes a method to train the joint model described in (Marcu and Wong, 2002) with a Gibbs sampler. They show that by applying a prior distribution over the phrase translation probabilities they can prevent over-fitting. The prior is composed of IBM1 lexical probabilities and a geometric distributi</context>
<context position="19314" citStr="Birch et al., 2006" startWordPosition="3154" endWordPosition="3157">hrase counts obtained in the previous iterations would have to be stored on disk separately for each sentence and accessed during the forced alignment process. To simplify this procedure, we propose a cross-validation strategy on larger batches of data. Instead of recomputing the phrase counts for each sentence individually, this is done for a whole batch of sentences at a time. In our experiments, we set this batch-size to 10000 sentences. 3.4 Parallelization To cope with the runtime and memory requirements of phrase model training that was pointed out by previous work (Marcu and Wong, 2002; Birch et al., 2006), we parallelized the forced alignment by splitting the training corpus into blocks of 10k sentence pairs. From the initial phrase table, each of these blocks only loads the phrases that are required for alignment. The alignp11o&amp;quot;n( (4) C(˜e) − Cn(˜e) ˜f|˜e) = C( ˜f, ˜e) − Cn(˜f, ˜e) 479 ment and the counting of phrases are done separately for each block and then accumulated to build the updated phrase model. 4 Phrase Model Training The produced phrase alignment can be given as a single best alignment, as the n-best alignments or as an alignment graph representing all alignments considered by t</context>
<context position="28813" citStr="Birch et al., 2006" startWordPosition="4724" endWordPosition="4727">nistic. For higher values of n more competing alignments are taken into account, resulting in a bigger phrase table and a smoother distribution. We can see in Figure 3 that translation performance improves by moving from the Viterbi alignment to n-best alignments. The variations in performance with sizes between n = 10 and n = 10000 are less than 0.2 BLEU. The maximum is reached for n = 100, which we used in all subsequent experiments. An additional benefit of the count model is the smaller phrase table size compared to the heuristic phrase extraction. This is consistent with the findings of (Birch et al., 2006). Table 4 shows the phrase table sizes for different n. With n = 100 we retain only 17% of the original phrases. Even for the full model, we Table 4: Phrase table size of the count model for different n-best list sizes, the full model and for heuristic phrase extraction. N # phrases % of full table 1 4.9M 5.3 10 8.4M 9.1 100 15.9M 17.2 1000 27.1M 29.2 10000 40.1M 43.2 full 59.6M 64.2 heuristic 92.7M 100.0 do not retain all phrase table entries. Due to pruning in the forced alignment step, not all translation options are considered. As a result experiments can be done more rapidly and with less</context>
</contexts>
<marker>Birch, Callison-Burch, Osborne, Koehn, 2006</marker>
<rawString>Alexandra Birch, Chris Callison-Burch, Miles Osborne, and Philipp Koehn. 2006. Constraining the phrase-based, joint probability statistical translation model. In smt2006, pages 154–157, Jun.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Phil Blunsom</author>
<author>Trevor Cohn</author>
<author>Miles Osborne</author>
</authors>
<title>A discriminative latent variable model for statistical machine translation.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL-08: HLT,</booktitle>
<pages>200--208</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Columbus, Ohio,</location>
<contexts>
<context position="7812" citStr="Blunsom et al., 2008" startWordPosition="1252" endWordPosition="1255">it the effects of over-fitting, we apply the leaving-one-out and cross-validation methods in training. In addition, we do not restrict the training to phrases consistent with the word alignment, as was done in (DeNero et al., 2006). This allows us to recover from flawed word alignments. In (Liang et al., 2006) a discriminative translation system is described. For training of the parameters for the discriminative features they propose a strategy they call bold updating. It is similar to our forced alignment training procedure described in Section 3. For the hierarchical phrase-based approach, (Blunsom et al., 2008) present a discriminative rule model and show the difference between using only the viterbi alignment in training and using the full sum over all possible derivations. Forced alignment can also be utilized to train a phrase segmentation model, as is shown in (Shen et al., 2008). They report small but consistent improvements by incorporating this segmentation model, which works as an additional prior probability on the monolingual target phrase. In (Ferrer and Juan, 2009), phrase models are trained by a semi-hidden Markov model. They train a conditional “inverse” phrase model of the target phra</context>
</contexts>
<marker>Blunsom, Cohn, Osborne, 2008</marker>
<rawString>Phil Blunsom, Trevor Cohn, and Miles Osborne. 2008. A discriminative latent variable model for statistical machine translation. In Proceedings of ACL-08: HLT, pages 200–208, Columbus, Ohio, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P F Brown</author>
<author>V J Della Pietra</author>
<author>S A Della Pietra</author>
<author>R L Mercer</author>
</authors>
<title>The mathematics of statistical machine translation: parameter estimation.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>2</issue>
<contexts>
<context position="10353" citStr="Brown et al., 1993" startWordPosition="1666" endWordPosition="1669">ed to the most frequent n-grams up to length 6 and all unigrams. Monolingual phrases have to occur at least 5 times to be considered in training. Smoothing is applied to the learned models so that probabilities for rare phrases are non-zero. In training, they use a greedy algorithm to produce the Viterbi phrase alignment and then apply a hill-climbing technique that modifies the Viterbi alignment by merge, move, split, and swap operations to find an alignment with a better probability in each iteration. The model shows improvements in translation quality over the singleword-based IBM Model 4 (Brown et al., 1993) on a subset of the Canadian Hansards corpus. The joint model by (Marcu and Wong, 2002) is refined by (Birch et al., 2006) who use high-confidence word alignments to constrain the search space in training. They observe that due to several constraints and pruning steps, the trained phrase table is much smaller than the heuristically extracted one, while preserving translation quality. The work by (DeNero et al., 2008) describes a method to train the joint model described in (Marcu and Wong, 2002) with a Gibbs sampler. They show that by applying a prior distribution over the phrase translation p</context>
</contexts>
<marker>Brown, Pietra, Pietra, Mercer, 1993</marker>
<rawString>P. F. Brown, V. J. Della Pietra, S. A. Della Pietra, and R. L. Mercer. 1993. The mathematics of statistical machine translation: parameter estimation. Computational Linguistics, 19(2):263–312, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John DeNero</author>
<author>Dan Klein</author>
</authors>
<title>The complexity of phrase alignment problems.</title>
<date>2008</date>
<booktitle>In Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics on Human Language Technologies: Short Papers,</booktitle>
<pages>25--28</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="4533" citStr="DeNero and Klein, 2008" startWordPosition="725" endWordPosition="728">s can be found for segmentation. As these long phrases tend to occur in only a few training sentences, the EM algorithm generally overestimates their probability and neglects shorter phrases, which better generalize to unseen data and thus are more useful for translation. In order to counteract these effects, our training procedure applies leaving-one-out on the sentence level. Our results show, that this leads to a better translation quality. Ideally, we would produce all possible segmentations and alignments during training. However, this has been shown to be infeasible for real-world data (DeNero and Klein, 2008). As training uses a modified version of the translation decoder, it is straightforward to apply pruning as in regular decoding. Additionally, we consider three ways of approximating the full search space: 1. the single-best Viterbi alignment, 2. the n-best alignments, 3. all alignments remaining in the search space after pruning. The performance of the different approaches is measured and compared on the German-English Europarl task from the ACL 2008 Workshop on Statistical Machine Translation (WMT08). Our results show that the proposed phrase model training improves translation quality on th</context>
</contexts>
<marker>DeNero, Klein, 2008</marker>
<rawString>John DeNero and Dan Klein. 2008. The complexity of phrase alignment problems. In Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics on Human Language Technologies: Short Papers, pages 25–28, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John DeNero</author>
<author>Dan Gillick</author>
<author>James Zhang</author>
<author>Dan Klein</author>
</authors>
<title>Why Generative Phrase Models Underperform Surface Heuristics.</title>
<date>2006</date>
<booktitle>In Proceedings of the Workshop on Statistical Machine Translation,</booktitle>
<pages>31--38</pages>
<location>New York City,</location>
<contexts>
<context position="3778" citStr="DeNero et al., 2006" startWordPosition="605" endWordPosition="608">ified version of a phrase-based decoder to perform the forced alignment. This way we ensure that all models used in training are identical to the ones used at decoding time. An illustration of the basic 475 Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 475–484, Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics Figure 1: Illustration of phrase training with forced alignment. idea can be seen in Figure 1. In the literature this method by itself has been shown to be problematic because it suffers from over-fitting (DeNero et al., 2006), (Liang et al., 2006). Since our initial phrases are extracted from the same training data, that we want to align, very long phrases can be found for segmentation. As these long phrases tend to occur in only a few training sentences, the EM algorithm generally overestimates their probability and neglects shorter phrases, which better generalize to unseen data and thus are more useful for translation. In order to counteract these effects, our training procedure applies leaving-one-out on the sentence level. Our results show, that this leads to a better translation quality. Ideally, we would pr</context>
<context position="5773" citStr="DeNero et al., 2006" startWordPosition="921" endWordPosition="924">EU points over our baseline. We find that by interpolation with the heuristically extracted phrases translation performance can reach up to 1.4 BLEU improvement over the baseline on the test set. After reviewing the related work in the following section, we give a detailed description of phrasal alignment and leaving-one-out in Section 3. Section 4 explains the estimation of phrase models. The empirical evaluation of the different approaches is done in Section 5. 2 Related Work It has been pointed out in literature, that training phrase models poses some difficulties. For a generative model, (DeNero et al., 2006) gave a detailed analysis of the challenges and arising problems. They introduce a model similar to the one we propose in Section 4.2 and train it with the EM algorithm. Their results show that it can not reach a performance competitive to extracting a phrase table from word alignment by heuristics (Och et al., 1999). Several reasons are revealed in (DeNero et al., 2006). When given a bilingual sentence pair, we can usually assume there are a number of equally correct phrase segmentations and corresponding alignments. For example, it may be possible to transform one valid segmentation into ano</context>
<context position="7132" citStr="DeNero et al., 2006" startWordPosition="1140" endWordPosition="1143">ls, where a typical assumption is that each target word corresponds to only one source word. As a result of this ambiguity, different segmentations are recruited for different examples during training. That in turn leads to over-fitting which shows in overly determinized estimates of the phrase translation probabilities. In addition, (DeNero et al., 2006) found that the trained phrase table shows a highly peaked distribution in opposition to the more flat distribution resulting from heuristic extraction, leaving the decoder only few translation options at decoding time. Our work differs from (DeNero et al., 2006) in a number of ways, addressing those problems. 476 To limit the effects of over-fitting, we apply the leaving-one-out and cross-validation methods in training. In addition, we do not restrict the training to phrases consistent with the word alignment, as was done in (DeNero et al., 2006). This allows us to recover from flawed word alignments. In (Liang et al., 2006) a discriminative translation system is described. For training of the parameters for the discriminative features they propose a strategy they call bold updating. It is similar to our forced alignment training procedure described </context>
<context position="15424" citStr="DeNero et al., 2006" startWordPosition="2530" endWordPosition="2533"> of the used phrases is an indicator of this kind of over-fitting, as the number of matching training sentences decreases with increasing phrase length. We can see an example in Figure 2. Without leaving-one-out the sentence is segmented into a few long phrases, which are unlikely to occur in data to be translated. Phrase boundaries seem to be unintuitive and based on some hidden structures. With leaving-one-out the phrases are shorter and therefore better suited for generalization to unseen data. Previous attempts have dealt with the overfitting problem by limiting the maximum phrase length (DeNero et al., 2006; Marcu and Wong, 2002) and by smoothing the phrase probabilities by lexical models on the phrase level (Ferrer and Juan, 2009). However, (DeNero et al., 2006) experienced similar over-fitting with short phrases due to the fact that the same word sequence can be segmented in different ways, leading to specific segmentations being learned for specific training sentence pairs. Our results confirm these findings. To deal with this problem, instead of simple phrase length restriction, we propose to apply the leavingone-out method, which is also used for language modeling techniques (Kneser and Ney</context>
<context position="22573" citStr="DeNero et al., 2006" startWordPosition="3698" endWordPosition="3701">resented as a graph of partial hypotheses (Ueffing et al., 2002) on which we can comThe log-linear interpolations of the pint(˜f|˜e) slation probabilities are estimated as rior probability in the word graph. As suggested in work on minimum Bayes-risk decoding for SMT (Tromble et al., 2008; Ehling et al., 2007), we use a global factor to scale the posteri ( )��� ( )��� pint( ˜f|˜e) = pH( ˜f|˜e) · pyen( ˜f|˜e) (6) Ideally, the training procedure would consider all possible alignment and segmentation hypotheses. When alternatives are weighted by their posterior 4.3 Phrase Table Interpolation As (DeNero et al., 2006) have reported improvements in translation quality by interpolation of phrase tables produced by the generative and the heuristic model, we adopt this method and also report results using log-linear interpolation of the estimated model with the original model. phrase tran where is the interpolation weight, pH the heuristically estimated phrase model and pyen the count model. The interpolation weight is adjusted on the development corpus. When interpolating phrase tables containing different sets of phrase pairs, we retain the intersection of the two. As a generalization of the fixed interpolat</context>
<context position="27317" citStr="DeNero et al., 2006" startWordPosition="4481" endWordPosition="4484">tigate the different aspects of the models and methods presented before. We will focus on the proposed leaving-oneout technique and show that it helps in finding good phrasal alignments on the training data that lead to improved translation models. Our final results show an improvement of 1.4 BLEU over the heuristically extracted phrase model on the test data set. In Section 3.2 we have discussed several methods which aim to overcome the over-fitting prob481 Figure 3: Performance on DEV in BLEU of the count model plotted against size n of n-best list on a logarithmic scale. lems described in (DeNero et al., 2006). Table 3 shows translation scores of the count model on the development data after the first training iteration for both leaving-one-out strategies we have introduced and for training without leaving-one-out with different restrictions on phrase length. We can see that by restricting the source phrase length to a maximum of 3 words, the trained model is close to the performance of the heuristic phrase model. With the application of leaving-one-out, the trained model is superior to the baseline, the length-based strategy performing slightly better than standard leaving-one-out. For these exper</context>
</contexts>
<marker>DeNero, Gillick, Zhang, Klein, 2006</marker>
<rawString>John DeNero, Dan Gillick, James Zhang, and Dan Klein. 2006. Why Generative Phrase Models Underperform Surface Heuristics. In Proceedings of the Workshop on Statistical Machine Translation, pages 31–38, New York City, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John DeNero</author>
<author>Alexandre Buchard-Cˆot´e</author>
<author>Dan Klein</author>
</authors>
<title>Sampling Alignment Structure under a Bayesian Translation Model.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>314--323</pages>
<location>Honolulu,</location>
<marker>DeNero, Buchard-Cˆot´e, Klein, 2008</marker>
<rawString>John DeNero, Alexandre Buchard-Cˆot´e, and Dan Klein. 2008. Sampling Alignment Structure under a Bayesian Translation Model. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 314–323, Honolulu, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nicola Ehling</author>
<author>Richard Zens</author>
<author>Hermann Ney</author>
</authors>
<title>Minimum bayes risk decoding for bleu.</title>
<date>2007</date>
<booktitle>In ACL ’07: Proceedings of the 45th Annual Meeting of the ACL on Interactive Poster and Demonstration Sessions,</booktitle>
<pages>101--104</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="22264" citStr="Ehling et al., 2007" startWordPosition="3648" endWordPosition="3651"> using the Forward-Backward algorithm. We will refer to this alignment as the full alignment. In contrast to the method described in Section 4.1, phrases are weighted by their posteor probabilities. translation times to be feasible and still contains the most probable alignments. This search space can be represented as a graph of partial hypotheses (Ueffing et al., 2002) on which we can comThe log-linear interpolations of the pint(˜f|˜e) slation probabilities are estimated as rior probability in the word graph. As suggested in work on minimum Bayes-risk decoding for SMT (Tromble et al., 2008; Ehling et al., 2007), we use a global factor to scale the posteri ( )��� ( )��� pint( ˜f|˜e) = pH( ˜f|˜e) · pyen( ˜f|˜e) (6) Ideally, the training procedure would consider all possible alignment and segmentation hypotheses. When alternatives are weighted by their posterior 4.3 Phrase Table Interpolation As (DeNero et al., 2006) have reported improvements in translation quality by interpolation of phrase tables produced by the generative and the heuristic model, we adopt this method and also report results using log-linear interpolation of the estimated model with the original model. phrase tran where is the inter</context>
</contexts>
<marker>Ehling, Zens, Ney, 2007</marker>
<rawString>Nicola Ehling, Richard Zens, and Hermann Ney. 2007. Minimum bayes risk decoding for bleu. In ACL ’07: Proceedings of the 45th Annual Meeting of the ACL on Interactive Poster and Demonstration Sessions, pages 101–104, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jes´us-Andr´es Ferrer</author>
<author>Alfons Juan</author>
</authors>
<title>A phrasebased hidden semi-markov approach to machine translation.</title>
<date>2009</date>
<booktitle>In Procedings of European Association for Machine Translation (EAMT),</booktitle>
<location>Barcelona, Spain,</location>
<contexts>
<context position="8287" citStr="Ferrer and Juan, 2009" startWordPosition="1327" endWordPosition="1330">It is similar to our forced alignment training procedure described in Section 3. For the hierarchical phrase-based approach, (Blunsom et al., 2008) present a discriminative rule model and show the difference between using only the viterbi alignment in training and using the full sum over all possible derivations. Forced alignment can also be utilized to train a phrase segmentation model, as is shown in (Shen et al., 2008). They report small but consistent improvements by incorporating this segmentation model, which works as an additional prior probability on the monolingual target phrase. In (Ferrer and Juan, 2009), phrase models are trained by a semi-hidden Markov model. They train a conditional “inverse” phrase model of the target phrase given the source phrase. Additionally to the phrases, they model the segmentation sequence that is used to produce a phrase alignment between the source and the target sentence. They used a phrase length limit of 4 words with longer phrases not resulting in further improvements. To counteract over-fitting, they interpolate the phrase model with IBM Model 1 probabilities that are computed on the phrase level. We also include these word lexica, as they are standard comp</context>
<context position="15551" citStr="Ferrer and Juan, 2009" startWordPosition="2551" endWordPosition="2554">th increasing phrase length. We can see an example in Figure 2. Without leaving-one-out the sentence is segmented into a few long phrases, which are unlikely to occur in data to be translated. Phrase boundaries seem to be unintuitive and based on some hidden structures. With leaving-one-out the phrases are shorter and therefore better suited for generalization to unseen data. Previous attempts have dealt with the overfitting problem by limiting the maximum phrase length (DeNero et al., 2006; Marcu and Wong, 2002) and by smoothing the phrase probabilities by lexical models on the phrase level (Ferrer and Juan, 2009). However, (DeNero et al., 2006) experienced similar over-fitting with short phrases due to the fact that the same word sequence can be segmented in different ways, leading to specific segmentations being learned for specific training sentence pairs. Our results confirm these findings. To deal with this problem, instead of simple phrase length restriction, we propose to apply the leavingone-out method, which is also used for language modeling techniques (Kneser and Ney, 1995). When using leaving-one-out, we modify the phrase translation probabilities for each sentence pair. For a training exam</context>
</contexts>
<marker>Ferrer, Juan, 2009</marker>
<rawString>Jes´us-Andr´es Ferrer and Alfons Juan. 2009. A phrasebased hidden semi-markov approach to machine translation. In Procedings of European Association for Machine Translation (EAMT), Barcelona, Spain, May. European Association for Machine Translation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Reinhard Kneser</author>
<author>Hermann Ney</author>
</authors>
<title>Improved Backing-Off for M-gram Language Modelling.</title>
<date>1995</date>
<booktitle>In IEEE Int. Conf. on Acoustics, Speech and Signal Processing (ICASSP),</booktitle>
<pages>181--184</pages>
<location>Detroit, MI,</location>
<contexts>
<context position="16031" citStr="Kneser and Ney, 1995" startWordPosition="2628" endWordPosition="2631">o et al., 2006; Marcu and Wong, 2002) and by smoothing the phrase probabilities by lexical models on the phrase level (Ferrer and Juan, 2009). However, (DeNero et al., 2006) experienced similar over-fitting with short phrases due to the fact that the same word sequence can be segmented in different ways, leading to specific segmentations being learned for specific training sentence pairs. Our results confirm these findings. To deal with this problem, instead of simple phrase length restriction, we propose to apply the leavingone-out method, which is also used for language modeling techniques (Kneser and Ney, 1995). When using leaving-one-out, we modify the phrase translation probabilities for each sentence pair. For a training example fn, en, we have to remove all phrases Cn( f, e) that were extracted from this sentence pair from the phrase counts that 478 Figure 2: Segmentation example from forced alignment. Top: without leaving-one-out. Bottom: with leaving-one-out. we used to construct our phrase translation table. The same holds for the marginal counts Cn(˜e) and Cn(˜f). Starting from Equation 1, the leaving-oneout phrase probability for training sentence pair n is To be able to perform the re-comp</context>
</contexts>
<marker>Kneser, Ney, 1995</marker>
<rawString>Reinhard Kneser and Hermann Ney. 1995. Improved Backing-Off for M-gram Language Modelling. In IEEE Int. Conf. on Acoustics, Speech and Signal Processing (ICASSP), pages 181–184, Detroit, MI, May.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
<author>Franz Josef Och</author>
<author>Daniel Marcu</author>
</authors>
<title>Statistical phrase-based translation.</title>
<date>2003</date>
<booktitle>In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology -</booktitle>
<volume>1</volume>
<pages>48--54</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="2221" citStr="Koehn et al., 2003" startWordPosition="355" endWordPosition="358">luding the logarithm of the phrase probability in source-to-target as well as in target-to-source direction. The phrase model is combined with a language model, word lexicon models, word and phrase penalty, and many others. (Och and Ney, 2004) The best translation ˆeˆI1 as defined by the models then can be written as ˜ f and the tarpH( ˜f|˜e) = C(˜f, ˜e) C(˜ e) . (1) 1 Introduction ˆe1 = argmax � M ˆI E λmhm(eI1, sK1 , fi ) (2) I,ei m=1 A phrase-based SMT system takes a source sentence and produces a translation by segmenting the sentence into phrases and translating those phrases separately (Koehn et al., 2003). The phrase translation table, which contains the bilingual phrase pairs and the corresponding translation probabilities, is one of the main components of an SMT system. The most common method for obtaining the phrase table is heuristic extraction from automatically word-aligned bilingual training data (Och et al., 1999). In this method, all phrases of the sentence pair that match constraints given by the alignment are extracted. This includes overlapping phrases. At extraction time it does not In this work, we propose to directly train our phrase models by applying a forced alignment procedu</context>
</contexts>
<marker>Koehn, Och, Marcu, 2003</marker>
<rawString>Philipp Koehn, Franz Josef Och, and Daniel Marcu. 2003. Statistical phrase-based translation. In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology - Volume 1, pages 48–54, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Percy Liang</author>
<author>Alexandre Buchard-Cˆot´e</author>
<author>Dan Klein</author>
<author>Ben Taskar</author>
</authors>
<title>An End-to-End Discriminative Approach to Machine Translation.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics,</booktitle>
<pages>761--768</pages>
<location>Sydney, Australia.</location>
<marker>Liang, Buchard-Cˆot´e, Klein, Taskar, 2006</marker>
<rawString>Percy Liang, Alexandre Buchard-Cˆot´e, Dan Klein, and Ben Taskar. 2006. An End-to-End Discriminative Approach to Machine Translation. In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics, pages 761– 768, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Marcu</author>
<author>William Wong</author>
</authors>
<title>A phrasebased, joint probability model for statistical machine translation.</title>
<date>2002</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP-2002),</booktitle>
<contexts>
<context position="9653" citStr="Marcu and Wong, 2002" startWordPosition="1551" endWordPosition="1554">lch training. They report improvements over a phrase-based model that uses an inverse phrase model and a language model. Experiments are carried out on a custom subset of the English-Spanish Europarl corpus. Our approach is similar to the one presented in (Ferrer and Juan, 2009) in that we compare Viterbi and a training method based on the ForwardBackward algorithm. But instead of focusing on the statistical model and relaxing the translation task by using monotone translation only, we use a full and competitive translation system as starting point with reordering and all models included. In (Marcu and Wong, 2002), a joint probability phrase model is presented. The learned phrases are restricted to the most frequent n-grams up to length 6 and all unigrams. Monolingual phrases have to occur at least 5 times to be considered in training. Smoothing is applied to the learned models so that probabilities for rare phrases are non-zero. In training, they use a greedy algorithm to produce the Viterbi phrase alignment and then apply a hill-climbing technique that modifies the Viterbi alignment by merge, move, split, and swap operations to find an alignment with a better probability in each iteration. The model </context>
<context position="12255" citStr="Marcu and Wong, 2002" startWordPosition="1980" endWordPosition="1983">g factors to do a forced alignment, where we compute a phrase alignment for the training data. From this alignment we then estimate new phrase models, while keeping all other models un477 changed. In this section we describe our forced alignment procedure that is the basic training procedure for the models proposed here. 3.1 Forced Alignment The idea of forced alignment is to perform a phrase segmentation and alignment of each sentence pair of the training data using the full translation system as in decoding. What we call segmentation and alignment here corresponds to the “concepts” used by (Marcu and Wong, 2002). We apply our normal phrase-based decoder on the source side of the training data and constrain the translations to the corresponding target sentences from the training data. Given a source sentence f1 and target sentence el, we search for the best phrase segmentation and alignment that covers both sentences. A segmentation of a sentence into K phrase is defined by k — sk (ik, bk,jk), fork = 1, ... , K where for each segment ik is last position of kth target phrase, and (bk, jk) are the start and end positions of the source phrase aligned to the kth target phrase. Consequently, we can modify </context>
<context position="15447" citStr="Marcu and Wong, 2002" startWordPosition="2534" endWordPosition="2537">is an indicator of this kind of over-fitting, as the number of matching training sentences decreases with increasing phrase length. We can see an example in Figure 2. Without leaving-one-out the sentence is segmented into a few long phrases, which are unlikely to occur in data to be translated. Phrase boundaries seem to be unintuitive and based on some hidden structures. With leaving-one-out the phrases are shorter and therefore better suited for generalization to unseen data. Previous attempts have dealt with the overfitting problem by limiting the maximum phrase length (DeNero et al., 2006; Marcu and Wong, 2002) and by smoothing the phrase probabilities by lexical models on the phrase level (Ferrer and Juan, 2009). However, (DeNero et al., 2006) experienced similar over-fitting with short phrases due to the fact that the same word sequence can be segmented in different ways, leading to specific segmentations being learned for specific training sentence pairs. Our results confirm these findings. To deal with this problem, instead of simple phrase length restriction, we propose to apply the leavingone-out method, which is also used for language modeling techniques (Kneser and Ney, 1995). When using lea</context>
<context position="19293" citStr="Marcu and Wong, 2002" startWordPosition="3150" endWordPosition="3153">r higher iterations, phrase counts obtained in the previous iterations would have to be stored on disk separately for each sentence and accessed during the forced alignment process. To simplify this procedure, we propose a cross-validation strategy on larger batches of data. Instead of recomputing the phrase counts for each sentence individually, this is done for a whole batch of sentences at a time. In our experiments, we set this batch-size to 10000 sentences. 3.4 Parallelization To cope with the runtime and memory requirements of phrase model training that was pointed out by previous work (Marcu and Wong, 2002; Birch et al., 2006), we parallelized the forced alignment by splitting the training corpus into blocks of 10k sentence pairs. From the initial phrase table, each of these blocks only loads the phrases that are required for alignment. The alignp11o&amp;quot;n( (4) C(˜e) − Cn(˜e) ˜f|˜e) = C( ˜f, ˜e) − Cn(˜f, ˜e) 479 ment and the counting of phrases are done separately for each block and then accumulated to build the updated phrase model. 4 Phrase Model Training The produced phrase alignment can be given as a single best alignment, as the n-best alignments or as an alignment graph representing all align</context>
</contexts>
<marker>Marcu, Wong, 2002</marker>
<rawString>Daniel Marcu and William Wong. 2002. A phrasebased, joint probability model for statistical machine translation. In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP-2002), July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J A Nelder</author>
<author>R Mead</author>
</authors>
<title>A Simplex Method for Function Minimization.</title>
<date>1965</date>
<journal>The Computer Journal),</journal>
<pages>7--308</pages>
<contexts>
<context position="11507" citStr="Nelder and Mead, 1965" startWordPosition="1849" endWordPosition="1852"> that by applying a prior distribution over the phrase translation probabilities they can prevent over-fitting. The prior is composed of IBM1 lexical probabilities and a geometric distribution over phrase lengths which penalizes long phrases. The two approaches differ in that we apply the leaving-one-out procedure to avoid overfitting, as opposed to explicitly defining a prior distribution. 3 Alignment The training process is divided into three parts. First we obtain all models needed for a normal translations system. We perform minimum error rate training with the downhill simplex algorithm (Nelder and Mead, 1965) on the development data to obtain a set of scaling factors that achieve a good BLEU score. We then use these models and scaling factors to do a forced alignment, where we compute a phrase alignment for the training data. From this alignment we then estimate new phrase models, while keeping all other models un477 changed. In this section we describe our forced alignment procedure that is the basic training procedure for the models proposed here. 3.1 Forced Alignment The idea of forced alignment is to perform a phrase segmentation and alignment of each sentence pair of the training data using t</context>
</contexts>
<marker>Nelder, Mead, 1965</marker>
<rawString>J.A. Nelder and R. Mead. 1965. A Simplex Method for Function Minimization. The Computer Journal), 7:308–313.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Franz Josef Och</author>
<author>Hermann Ney</author>
</authors>
<title>A systematic comparison of various statistical alignment models.</title>
<date>2003</date>
<journal>Computational Linguistics,</journal>
<volume>29</volume>
<issue>1</issue>
<contexts>
<context position="24702" citStr="Och and Ney, 2003" startWordPosition="4047" endWordPosition="4050">1 6 549 OOVs 284 77 TEST Sentences 2000 Run. Words 56 635 60188 Vocabulary 9 254 6 497 OOVs 266 89 show a slightly lower performance. This illustrates that a higher number of features results in a less reliable optimization of the log-linear parameters. 5 Experimental Evaluation 5.1 Experimental Setup We conducted our experiments on the GermanEnglish data published for the ACL 2008 Workshop on Statistical Machine Translation (WMT08). Statistics for the Europarl data are given in Table 2. We are given the three data sets TRAIN, DEV and TEST. For the heuristic phrase model, we first use GIZA++ (Och and Ney, 2003) to compute the word alignment on TRAIN. Next we obtain a phrase table by extraction of phrases from the word alignment. The scaling factors of the translation models have been optimized for BLEU on the DEV data. The phrase table obtained by heuristic extraction is also used to initialize the training. The forced alignment is run on the training data TRAIN from which we obtain the phrase alignments. Those are used to build a phrase table according to the proposed generative phrase models. Afterward, the scaling factors are trained on DEV for the new phrase table. By feeding back the new phrase</context>
</contexts>
<marker>Och, Ney, 2003</marker>
<rawString>Franz Josef Och and Hermann Ney. 2003. A systematic comparison of various statistical alignment models. Computational Linguistics, 29(1):19–51, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Franz Josef Och</author>
<author>Hermann Ney</author>
</authors>
<title>The alignment template approach to statistical machine translation.</title>
<date>2004</date>
<journal>Computational Linguistics,</journal>
<volume>30</volume>
<issue>4</issue>
<contexts>
<context position="1845" citStr="Och and Ney, 2004" startWordPosition="282" endWordPosition="285">s of phrases extracted from word-aligned parallel training data. The joint counts C( ˜f, ˜e) of the source phrase get phrase e˜ in the entire training data are normalized by the marginal counts of source and target phrase to obtain a conditional probability The translation process is implemented as a weighted log-linear combination of several models hm(eI1, sK1 , fi) ) including the logarithm of the phrase probability in source-to-target as well as in target-to-source direction. The phrase model is combined with a language model, word lexicon models, word and phrase penalty, and many others. (Och and Ney, 2004) The best translation ˆeˆI1 as defined by the models then can be written as ˜ f and the tarpH( ˜f|˜e) = C(˜f, ˜e) C(˜ e) . (1) 1 Introduction ˆe1 = argmax � M ˆI E λmhm(eI1, sK1 , fi ) (2) I,ei m=1 A phrase-based SMT system takes a source sentence and produces a translation by segmenting the sentence into phrases and translating those phrases separately (Koehn et al., 2003). The phrase translation table, which contains the bilingual phrase pairs and the corresponding translation probabilities, is one of the main components of an SMT system. The most common method for obtaining the phrase table</context>
</contexts>
<marker>Och, Ney, 2004</marker>
<rawString>Franz Josef Och and Hermann Ney. 2004. The alignment template approach to statistical machine translation. Computational Linguistics, 30(4):417–449, December.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>C Tillmann</author>
<author>H Ney</author>
</authors>
<title>Improved alignment models for statistical machine translation.</title>
<date>1999</date>
<booktitle>In Proc. of the Joint SIGDAT Conf. on Empirical Methods in Natural Language Processing and Very Large Corpora (EMNLP99),</booktitle>
<pages>20--28</pages>
<institution>University of Maryland,</institution>
<location>College Park, MD, USA,</location>
<contexts>
<context position="2544" citStr="Och et al., 1999" startWordPosition="405" endWordPosition="408">d the tarpH( ˜f|˜e) = C(˜f, ˜e) C(˜ e) . (1) 1 Introduction ˆe1 = argmax � M ˆI E λmhm(eI1, sK1 , fi ) (2) I,ei m=1 A phrase-based SMT system takes a source sentence and produces a translation by segmenting the sentence into phrases and translating those phrases separately (Koehn et al., 2003). The phrase translation table, which contains the bilingual phrase pairs and the corresponding translation probabilities, is one of the main components of an SMT system. The most common method for obtaining the phrase table is heuristic extraction from automatically word-aligned bilingual training data (Och et al., 1999). In this method, all phrases of the sentence pair that match constraints given by the alignment are extracted. This includes overlapping phrases. At extraction time it does not In this work, we propose to directly train our phrase models by applying a forced alignment procedure where we use the decoder to find a phrase alignment between source and target sentences of the training data and then updating phrase translation probabilities based on this alignment. In contrast to heuristic extraction, the proposed method provides a way of consistently training and using phrase models in translation</context>
<context position="6091" citStr="Och et al., 1999" startWordPosition="978" endWordPosition="981">e-out in Section 3. Section 4 explains the estimation of phrase models. The empirical evaluation of the different approaches is done in Section 5. 2 Related Work It has been pointed out in literature, that training phrase models poses some difficulties. For a generative model, (DeNero et al., 2006) gave a detailed analysis of the challenges and arising problems. They introduce a model similar to the one we propose in Section 4.2 and train it with the EM algorithm. Their results show that it can not reach a performance competitive to extracting a phrase table from word alignment by heuristics (Och et al., 1999). Several reasons are revealed in (DeNero et al., 2006). When given a bilingual sentence pair, we can usually assume there are a number of equally correct phrase segmentations and corresponding alignments. For example, it may be possible to transform one valid segmentation into another by splitting some of its phrases into sub-phrases or by shifting phrase boundaries. This is different from word-based translation models, where a typical assumption is that each target word corresponds to only one source word. As a result of this ambiguity, different segmentations are recruited for different exa</context>
</contexts>
<marker>Och, Tillmann, Ney, 1999</marker>
<rawString>F.J. Och, C. Tillmann, and H. Ney. 1999. Improved alignment models for statistical machine translation. In Proc. of the Joint SIGDAT Conf. on Empirical Methods in Natural Language Processing and Very Large Corpora (EMNLP99), pages 20–28, University of Maryland, College Park, MD, USA, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kishore Papineni</author>
<author>Salim Roukos</author>
<author>Todd Ward</author>
<author>WeiJing Zhu</author>
</authors>
<title>Bleu: a method for automatic evaluation of machine translation.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics,</booktitle>
<pages>311--318</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="26563" citStr="Papineni et al., 2002" startWordPosition="4351" endWordPosition="4354">ranslation directions, phrase penalty, word penalty, language model score and a simple distance-based reordering model. The features are combined in a log-linear way. To investigate the generative models, we replace the two phrase translation probabilities and keep the other features identical to the baseline. For the feature-wise combination the two generative phrase probabilities are added to the features, resulting in a total of 10 features. We used a 4-gram language model with modified Kneser-Ney discounting for all experiments. The metrics used for evaluation are the case-sensitive BLEU (Papineni et al., 2002) score and the translation edit rate (TER) (Snover et al., 2006) with one reference translation. 5.2 Results In this section, we investigate the different aspects of the models and methods presented before. We will focus on the proposed leaving-oneout technique and show that it helps in finding good phrasal alignments on the training data that lead to improved translation models. Our final results show an improvement of 1.4 BLEU over the heuristically extracted phrase model on the test data set. In Section 3.2 we have discussed several methods which aim to overcome the over-fitting prob481 Fig</context>
</contexts>
<marker>Papineni, Roukos, Ward, Zhu, 2002</marker>
<rawString>Kishore Papineni, Salim Roukos, Todd Ward, and WeiJing Zhu. 2002. Bleu: a method for automatic evaluation of machine translation. In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics, pages 311–318, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wade Shen</author>
<author>Brian Delaney</author>
<author>Tim Anderson</author>
<author>Ray Slyh</author>
</authors>
<date>2008</date>
<booktitle>The MIT-LL/AFRL IWSLT-2008 MT System. In Proceedings of IWSLT 2008,</booktitle>
<pages>69--76</pages>
<location>Hawaii, U.S.A.,</location>
<contexts>
<context position="8090" citStr="Shen et al., 2008" startWordPosition="1298" endWordPosition="1301">ments. In (Liang et al., 2006) a discriminative translation system is described. For training of the parameters for the discriminative features they propose a strategy they call bold updating. It is similar to our forced alignment training procedure described in Section 3. For the hierarchical phrase-based approach, (Blunsom et al., 2008) present a discriminative rule model and show the difference between using only the viterbi alignment in training and using the full sum over all possible derivations. Forced alignment can also be utilized to train a phrase segmentation model, as is shown in (Shen et al., 2008). They report small but consistent improvements by incorporating this segmentation model, which works as an additional prior probability on the monolingual target phrase. In (Ferrer and Juan, 2009), phrase models are trained by a semi-hidden Markov model. They train a conditional “inverse” phrase model of the target phrase given the source phrase. Additionally to the phrases, they model the segmentation sequence that is used to produce a phrase alignment between the source and the target sentence. They used a phrase length limit of 4 words with longer phrases not resulting in further improveme</context>
</contexts>
<marker>Shen, Delaney, Anderson, Slyh, 2008</marker>
<rawString>Wade Shen, Brian Delaney, Tim Anderson, and Ray Slyh. 2008. The MIT-LL/AFRL IWSLT-2008 MT System. In Proceedings of IWSLT 2008, pages 69– 76, Hawaii, U.S.A., October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Snover</author>
<author>Bonnie Dorr</author>
<author>Rich Schwartz</author>
<author>Linnea Micciulla</author>
<author>John Makhoul</author>
</authors>
<title>A study of translation edit rate with targeted human annotation.</title>
<date>2006</date>
<booktitle>In Proc. of AMTA,</booktitle>
<pages>223--231</pages>
<contexts>
<context position="26627" citStr="Snover et al., 2006" startWordPosition="4363" endWordPosition="4366">l score and a simple distance-based reordering model. The features are combined in a log-linear way. To investigate the generative models, we replace the two phrase translation probabilities and keep the other features identical to the baseline. For the feature-wise combination the two generative phrase probabilities are added to the features, resulting in a total of 10 features. We used a 4-gram language model with modified Kneser-Ney discounting for all experiments. The metrics used for evaluation are the case-sensitive BLEU (Papineni et al., 2002) score and the translation edit rate (TER) (Snover et al., 2006) with one reference translation. 5.2 Results In this section, we investigate the different aspects of the models and methods presented before. We will focus on the proposed leaving-oneout technique and show that it helps in finding good phrasal alignments on the training data that lead to improved translation models. Our final results show an improvement of 1.4 BLEU over the heuristically extracted phrase model on the test data set. In Section 3.2 we have discussed several methods which aim to overcome the over-fitting prob481 Figure 3: Performance on DEV in BLEU of the count model plotted aga</context>
</contexts>
<marker>Snover, Dorr, Schwartz, Micciulla, Makhoul, 2006</marker>
<rawString>Matthew Snover, Bonnie Dorr, Rich Schwartz, Linnea Micciulla, and John Makhoul. 2006. A study of translation edit rate with targeted human annotation. In Proc. of AMTA, pages 223–231, Aug.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roy Tromble</author>
<author>Shankar Kumar</author>
<author>Franz Och</author>
<author>Wolfgang Macherey</author>
</authors>
<title>Lattice Minimum BayesRisk decoding for statistical machine translation.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>620--629</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Honolulu, Hawaii,</location>
<contexts>
<context position="22242" citStr="Tromble et al., 2008" startWordPosition="3644" endWordPosition="3647"> and pute expectations using the Forward-Backward algorithm. We will refer to this alignment as the full alignment. In contrast to the method described in Section 4.1, phrases are weighted by their posteor probabilities. translation times to be feasible and still contains the most probable alignments. This search space can be represented as a graph of partial hypotheses (Ueffing et al., 2002) on which we can comThe log-linear interpolations of the pint(˜f|˜e) slation probabilities are estimated as rior probability in the word graph. As suggested in work on minimum Bayes-risk decoding for SMT (Tromble et al., 2008; Ehling et al., 2007), we use a global factor to scale the posteri ( )��� ( )��� pint( ˜f|˜e) = pH( ˜f|˜e) · pyen( ˜f|˜e) (6) Ideally, the training procedure would consider all possible alignment and segmentation hypotheses. When alternatives are weighted by their posterior 4.3 Phrase Table Interpolation As (DeNero et al., 2006) have reported improvements in translation quality by interpolation of phrase tables produced by the generative and the heuristic model, we adopt this method and also report results using log-linear interpolation of the estimated model with the original model. phrase t</context>
</contexts>
<marker>Tromble, Kumar, Och, Macherey, 2008</marker>
<rawString>Roy Tromble, Shankar Kumar, Franz Och, and Wolfgang Macherey. 2008. Lattice Minimum BayesRisk decoding for statistical machine translation. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 620–629, Honolulu, Hawaii, October. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Ueffing</author>
<author>F J Och</author>
<author>H Ney</author>
</authors>
<title>Generation of word graphs in statistical machine translation.</title>
<date>2002</date>
<booktitle>In Proc. of the Conference on Empirical Methods for Natural Language Processing,</booktitle>
<pages>156--163</pages>
<location>Philadelphia, PA, USA,</location>
<contexts>
<context position="22017" citStr="Ueffing et al., 2002" startWordPosition="3608" endWordPosition="3611">arge data tasks. However, we can approximate the space of all possible hypotheses by the search space that was used for the alignment. While this might not cover all phrase translation probabilities, it allows the search space and pute expectations using the Forward-Backward algorithm. We will refer to this alignment as the full alignment. In contrast to the method described in Section 4.1, phrases are weighted by their posteor probabilities. translation times to be feasible and still contains the most probable alignments. This search space can be represented as a graph of partial hypotheses (Ueffing et al., 2002) on which we can comThe log-linear interpolations of the pint(˜f|˜e) slation probabilities are estimated as rior probability in the word graph. As suggested in work on minimum Bayes-risk decoding for SMT (Tromble et al., 2008; Ehling et al., 2007), we use a global factor to scale the posteri ( )��� ( )��� pint( ˜f|˜e) = pH( ˜f|˜e) · pyen( ˜f|˜e) (6) Ideally, the training procedure would consider all possible alignment and segmentation hypotheses. When alternatives are weighted by their posterior 4.3 Phrase Table Interpolation As (DeNero et al., 2006) have reported improvements in translation q</context>
</contexts>
<marker>Ueffing, Och, Ney, 2002</marker>
<rawString>N. Ueffing, F.J. Och, and H. Ney. 2002. Generation of word graphs in statistical machine translation. In Proc. of the Conference on Empirical Methods for Natural Language Processing, pages 156–163, Philadelphia, PA, USA, July.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>