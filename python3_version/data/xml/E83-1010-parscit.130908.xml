<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<bodyText confidence="0.795073333333333">
EXTENDED ACCESS TO THE LEFT CONTEXT IN AN ATN PARSER
Irina Prodanof and Giacomo Ferrari
Istituto di Linguistica Computazionale
Via della Faggiola 32
1-56100 Pisa, Italy
ABSTRACT
Some Italian sentences related to linguistic
phenomena largely known and recently discussed by
many computational linguists are discussed in the
framework of ATE. They offer certain difficulties
which seem to suggest a substantial revision of
the ATN formalism. The theoretical assumptions and
an experimental implementation of such a revision
are presented, together with examples. Nany
related theoretical points such as some
psycholinguistic implications and the relationship
between deterministic and non—deterministic
hypothesis are also briefly discussed.
</bodyText>
<sectionHeader confidence="0.966171" genericHeader="method">
I. INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999818222222222">
Certain types of sentences seem to defy the
abilities of several parsers, and some of them are
being now discussed by many computational
linguists, mostly within the deterministic
hypothesis.
An examination of their treatment within the
traditional ATE paradigm seems to suggest that the
real discussion is about how to acces the left
context and what its form should be.
</bodyText>
<sectionHeader confidence="0.699575" genericHeader="method">
II. ACCESS TO TflE LEFT CONTEXT
</sectionHeader>
<bodyText confidence="0.979582875">
A. ATE Grammars
An ATN grammar is a set of networks formed by
labelled states and directed arcs connecting them.
The arcs can ricognize terminal (words) and
non—terminal (lexical categories) symbols or
recursively call for a network identified by the
label of an initial state. When such a call
occurs, the parsing algorithm suspends the current
computation and starts a new level of computation.
Usually, each network recognizes some linguistic
unit such as Noun Phrase (NP), Prepositional
Phrase (PP), and Sentence (S) and any recursively
embedded call to one of them corresponds to a
level of computation.
The parsed parts of the input string are
stored (SETRed) into registers as they are
recognized. At the end of the network these
registers are combined (BUILDQed) into a parse
node and returned (POPed) to the calling net.
Appropriate functions can return the content of a
register (GETR) or transfer it to another register
(combination of SETR with a CETR). This last
operation is equivalent to i) the renaming of a
register, if the source register is successively
set to a different value, ii). the initialization
of a register at a lower or higher level, if SENOR
or LIFTR are used.
Initialization is commonly used to i) raise
lexical features to a higher level where they are
used for tests (ex.: subject—verb agreement), ii)
pass possible antecedents to lower levels where a
gap may be detected in an embedded clause.
</bodyText>
<listItem confidence="0.9073135">
B. Difficult access to registers
1. Filler—gap linking
</listItem>
<bodyText confidence="0.935350066666667">
The antecedent passing may cause a
theoretically unlimited increase in storage load.
By the standard procedure, the analysis of the
ambiguous sentence(1)
(1) Giovanni disse che aveva mentito
John said that (he) had lied
&apos;Giovanni is always SENDRed as possible SUBJect
of a complement, as soon as &apos;disse&apos; is recognized
as an STRANS verb. As no subject NP is met after
&apos;che&apos;, an interpretation is yielded with
&apos;Giovanni&apos; in subject position. The second
interpretation is produced sir,ply by successively
setting the SUBJ register to a dummy node, which
(1) The ambiguity of this sentence is the same as its English translation where &apos;he&apos; can be bound either
to &apos;John&apos; or to someone else mentioned in a previous sentence. Italian has a gap instead of a pronoun.
</bodyText>
<page confidence="0.997036">
58
</page>
<bodyText confidence="0.970945214285714">
remains unfilled. The same treatment is 2. Lexical features raising
recursively applied to sentences like
(2) Giovanni pensava che avrebbe raccontato
John thought that (he) would have told
a tutti che aveva fatto una
to everybody that (he) had done a
scoperta
discovery
where &apos;Giovanni must serve as subject of both the
first and the second (linearly) complement.
Instead, in the sentence
(3) Giovanni disse che i suoi colleghi avevano
John said that his colleagues had
mentito
lied
as the UP 1 suoi colleghi&apos; is analysed, it
replaces the SENDRed &amp;quot;Giovanni&apos; in the suaJ
register and the correct interpretation is popped.
A more complex treatment is required for the
sentence
(4) Giovanni pensava che i suoi colleghi avrebbero
John thought that his colleagues would
raccontato a tutti che aveva fatto
have told to everybody that (he) had done
una scoperta
a discovery
where &apos;Giovanni&apos; must get through the first
complement and reappear in the second (embedded)
one. If SENDR is used, a transit register R1 with
the same content as the initialized SUEJ register
is to be passed down together with it. When the
subject of the first complement (&apos;i suoi
colleghi&apos;) is found, it replaces &apos;Giovanni&apos; in
SUEJ but not in Rl. The new SUBJ i suoi
colleghi&apos; and R1 &apos;Giovanni&apos; are again SENDRed to
the embedded complement where the agreement with
the verb correctly selects, as subject, the
content of Rl. Now, as the number of levels which
to &apos;jump over is in principle illimited and each
one may have its own subject to be SENDRed, a
transit register for each new subject is needed.
Thus, for the sentence
</bodyText>
<listItem confidence="0.606929666666667">
(5) Giovanni era sicuro che i suoi nemici
avrebbero rivelato alla stampa che sua moglie
aveva detto un giorno che l&apos;aveva picchiata(2)
</listItem>
<bodyText confidence="0.99984975">
when processing the last com?lement three
reisters containing the three possible subjects
will be available and shall be visited in order to
find the right one(3).
A storage overload may also be caused by the
need for raising lexical features. Morphological
features are necessary at the least in the test of
subject—verb agreement. This is done by LIFTRing
In ad hoc registers gender and number from the NP
level to the S level. If the NP is popped in a
possible subject position the test for agreement
may take place by comparing the content of those
registers with the corresponding features of the
verb. However, there are cases such as ex.(1) in
which such information must be used again in the
course of the analysis for another (agreement)
test. Those features must be, therefore, copied
in appropriately labelled registers in order to i)
flag their relation to the subject and ii) prevent
them from being erased when the same features are
LIFTRed from the following NP.
The same need for ad hoc storing may be shown
for the object and few PP complements. For
example, in the sentence
</bodyText>
<listItem confidence="0.765828">
(6) Il capitano disse ai soldati che
</listItem>
<bodyText confidence="0.996816916666666">
The captain said to the soldiers that
marciavano pietosamente
(they) were marching peatifully
as the NP i soldati&apos; embedded in the &apos;a—PP&apos; is
the subject of the complement, its gender and
number must travel up through PP and S and down to
the complement, in order the subject—verb
agreement to be satisfied. This implies that at a
given moment other regiSterS containing
morphological features coexist at the S level with
those of the subject.
An obvious remedy to this proliferation of
registers consists in adding these features to the
NP or PP structure, POPing them, and extracting
them from those structures when needed. But
classical ATN does not provide a suitable
function, a form that should return only a part
of a stored tree after having searched through it.
Now, although such functions are not particularly
complex to design [5, 7], they are not perfectly
consistent with the ATN general formalism which
does not take into consideration the extraction of
pieces of already processed information from the
structure they have been inserted in.
</bodyText>
<listItem confidence="0.9537645">
C. A functional perspective
1. A generalized retrieving action
</listItem>
<bodyText confidence="0.983147666666667">
If we look at the discussed examples from an
entirely functional viewpoint we can describe them
as having in common the need for retrieving
</bodyText>
<listItem confidence="0.949935571428571">
(2) &apos;John was sure that his ennemies would have disclosed to the press that his wife had once told that
(he) had beated her&apos;. De give here, for clarity, the parenthesized form of this example:
(Giovanni era sicuro (che i suoi nemici avrebbero rivelato alla stampa (che sun moglie aveva detto un
giorno (che l&apos;aveva picchiata))).
Notice that in this example the subject—verb agreement is sufficient to select the right antecedent, but
this is not always the case.
(3) A possible alternative, equally tricky,is the use of the NOLD—VIRT couple.
</listItem>
<page confidence="0.998313">
59
</page>
<bodyText confidence="0.975520960784314">
information somewhere back in the already built
structures; the tricky solutions presented above
are, in fact, a way of accessing parts of the left
context. These sometimes correspond to the entire
content of a register and sometimes to a fragment
of it.
We will assume, then, that the left context is
stored in a space .of memory, equally accessible
from any level and that retrieving always concerns
fragments of it. At any point of the process this
structure contains the current hypothesis about
the analysis of the parsed segment of the input
from the beginning; hence we will refer to it as
Current Global Hypothesis (CGH).
The retrieving action will have two participants,
a symbol that triggers the action (trigger) and
the information to be retrieved (the target of the
action).
In this frame all the different procedures
discussed above may be reduced to a single general
algorithm of three steps,
i) identification of a trigger (a gap to be
filled, a verb which demands for the subject-verb
agreement test)
ii) extraction of constraints which must guide the
search for the target, and
iii) retrieving of the required information.
On this functional ground, the same
description fits to the binding of an anaphoric
pronoun to its antecedent [7] as in
(7) a) Giovanni disse a naria che voleva
John said to Mary that (he) wanted
sposarl-la
marry her
as opposed to
b) Giovanni disse a Haria che voleva
John said to :.lary that (he) wanted
sposarsi
to marry
The function that searches back may be
constrained by several types of restrictions,
including i) morphological features, i.e. the
.gender and number of the pronoun or those required
for agreement by the syntactic environment (e.g.
the verb), ii) syntactic idiosyncrasies of some
lexical item such as the ;TRANS verbs that
determine which of their arguments is to be the
subject of the complement, iii) semantic features
that may be introduced in the process, and iv)
syntactic deteri,ination of the scope of the
search.
</bodyText>
<listItem confidence="0.419864">
2. ianipulations of the left context
</listItem>
<bodyText confidence="0.998147545454545">
Retrieving of the antecedent may actually
correspond to two different operations depending
upon whether the antecedent to be bound linearly
preceeds or follows the symbol it is to be bound
to.
In the cases discussed above the gap or the
pronoun always follow there antecedent and it is
therefore possible to immediately insert the
binding pointer. loreover, in many coaon sentences
the antecedent linearly follows its dependent, as
in
</bodyText>
<listItem confidence="0.72149">
(3) Quando si arrabbia, Giovanni diventa rosso
When (he) gets angry, John becomes red
(9) Se lo vedi, salute Giovanni
</listItem>
<bodyText confidence="0.948153307692308">
If (you) see him, say hallo to John
da parte mia
on my behalf
In this case, the binding should take place in
two steps, the flagging of the need for a forward
binding and the moving of the pointer from the
antecedent, once detected, to the flag. Notice
that this class of sentences entirely lies beyond
the abilities of the classical ATI, framework.
Relative pronouns also need to be bound to an
antecedent and, besides, are the surface signal of
an embedding. No special processing difficulty is
proposed by sentences like
</bodyText>
<listItem confidence="0.413035">
(10) Il ragazzo che corre
</listItem>
<bodyText confidence="0.9158846">
The boy who runs
where the relative pronoun occurs exactly where
the embedding begins. In this case a scope
restriction can limit the search for an antecedent
to the immediately preceeding NP.
</bodyText>
<listItem confidence="0.79340225">
but in the sentences
(11) Il ragazzo del quale ti .parlavo
The boy about whom I was talking to you
(12) Il ragazzo del cui padre ti parlavo
</listItem>
<bodyText confidence="0.99826375">
The boy about whose father I was talking
to you
the relative clause boundery is set one word
before the relative pronoun, and in
</bodyText>
<listItem confidence="0.853278">
(13) Il ragazzo del padre del quale
</listItem>
<bodyText confidence="0.999372">
The boy about the father of whom
ti parlavo
I was talking to you
where the phenomenon known as pied-piping occurs,
such a bounder)&apos; may be located several words
before the relative pronoun.
In an ATN these cases meet the initial set of
arcs which recognize a PP embedded in an NP, as in
</bodyText>
<listItem confidence="0.612462">
(14) il ragazzo dell&apos;ascensore
</listItem>
<bodyText confidence="0.9643595">
the boy of the lift
and the correct interpretation is obtained only by
backtracking (for 11 and 12) and again using a set
of transit registers (for 12). No solution is
known for sentence (13).
In the framework we have been discussing an
action which structurally modifies the left
context can be proposed. It should embed the
component(s) being processed in a relative clause
as the relative pronoun in met.
</bodyText>
<page confidence="0.992563">
60
</page>
<bodyText confidence="0.999029142857143">
A third type of access to the left context is ii. functional grammar allows any depth of
the relabelling of a processed component, already linguistic representation through the left
used for the passive transformation. adjunction of labels;
iii. functional syntactic repesentation and
lexical features (also expressed in terms of
attribute— value pairs) I45y be treated in a
uniform way.
</bodyText>
<sectionHeader confidence="0.491325666666667" genericHeader="method">
III. 17.PdkIlEhlAL ImPLELIFHTATION
D. The parser
A. General assumptions
</sectionHeader>
<bodyText confidence="0.996221470588235">
:lost of the above discussion is based on our
own experience with an ATN parser, although valid
also for other parsers. Some of the linguistic
phenomena we are trying to functionally classify
have been recently discussed in the frame of the
deterministic parsing and some progress in the
treatment of those sentences has been done.
However we prefer to stick to the
non—deterministic hypothesis, because no valuable
argument seems to stand against the idea of ATN as
a collection of alternative heuristic strategies
representing those used in the human sentence
processing. On the contrary it is possible to
introduce in an ATN parser some mechanism for
selecting strategies in function of a text or a
sublanguaw,e [11].
Our assumption is, then, that the possibility
of backtracking must be kept, hut restricted by
i. introducing linguistic constraints to guide the
choice of alternatives;
ii. manipulating the left context in some cases in
which backtracking can be intuitively charged on
inadequacies of the parser rather than on points
of real linguistic ambiguity.
A second assumption more related to the
current implementation of the system refers to the
grammatical formalism. A functional representation
a la [14] is used. A detailed explanation
of this formalism is not necessary to the
understanding of this paper. It is enough to know
that its basic unit is the attribute—value pair,
where an attribute is a symbol (label) and a value
is a symbol or another functional description. In
the sentence
</bodyText>
<listItem confidence="0.48234">
(15) He killed her
</listItem>
<bodyText confidence="0.9704441875">
a possible pair is SURJ=he, or SLIDJ=HEAD=he
together with SUBJ=CAT=PHON etc. Any sequence of
symbols is a path leading to a value; thus the
value of SUUJ=JEAD is &apos;he&apos;.
The functions that access the data structure
are specifically designed to treat this type of
representation but we think that they could be
easily generalized. The term &apos;component will be
used to identify the set of paths starting&apos; from
the same label (radix).
The reasons of this choice are as follows:
i. addressing fragments of information is more
easily done by follm4ing a path of labels than by
visiting a unlabelled tree;
The basic features of the ATN parser used in
our previous experiments [19], i.e. the network
formalism and the parsing aLjoritirm, are kept,
while the data structure and the whole set of
actions and forms have been modified. Also the use
of the push—down mechanism has been modified to
some extent.
The data structure is a list which is mainly
accessed with a typical LIFO stack policy. It
represents a unique memory space non splitted into
registers. The state saving mechanism necessary
for the treatment of non—determinism is provided
by ND—LISP [2,17], the dialect of LISP in which
the system is written. At any point in which
non—determinism is called, the previous context,
in particular the data, is saved and only the new
values are set in the current context. Therefore,
there is no difference between the ,use of the
traditional register table and this special list
since both of them are handled in the same way.
This (LIFO) list contains at any point of the
process the CCU, i.e. the entire left context
literally represented in terms of attribute—value
pairs.
We give hereafter a list in Backus notation of the
functions which access the CM.
1.Actions
a. &lt;storing actions&gt;::=
ADD pair location 1
ASSIGN label path
&lt;location&gt;::= NIL 1 &lt;fona&gt;
&lt;label&gt;::= any label
&lt;pair&gt;::= label value
&lt;value&gt;::= * 1 &lt;form&gt;
</bodyText>
<figure confidence="0.970222785714286">
b. &lt;list manipulation&gt;::=
rusu 1
POP I
INSERT data item
&lt;data&gt;::= any data
&lt;item&gt;::= &lt;fona&gt;
2. Forms
FIND path test level dtype I
FINDVAL path test level dtype I
LOCATE path test level dtype
&lt;path&gt;::= &lt;label+&gt;
&lt;test&gt;::= T I any test
&lt;level&gt;::= T I CL
&lt;dtype&gt;::= T I ND I L
</figure>
<bodyText confidence="0.916125333333333">
The basic storing action is ADD which is used
to store any incoming piece of structure. The
string
</bodyText>
<footnote confidence="0.853071">
(16) il cane
the dog
recognized by the network
</footnote>
<page confidence="0.986303">
61
</page>
<figure confidence="0.5833206">
(FINDVAL (SULJ) (AND (LO, (FINDVAL (131PiJ NU:0 T T
ND)
(FL:OVAL (NE:.0 NU:;)T CL
(EQ (FINUVAL (SULJ GE1.) T T
(FINDVAL (DEAD GE::) I CL
</figure>
<bodyText confidence="0.656272">
is stored by the following actions
</bodyText>
<listItem confidence="0.719088">
1. (ADD (DET *))
2. (ADD MAD *))
</listItem>
<bodyText confidence="0.911461833333333">
If location is NIL, the current component is
meant, otherwise the form LOCATE specifies the
path leading to the radix to which the new pair is
to be ADDed.
Belabelline of a component is done by the action
ASSICC. In the sentences
</bodyText>
<listItem confidence="0.99126325">
(16a) Il cane mania
the do e eats
(16b) Il cane e mangiato
the doe is eaten
</listItem>
<bodyText confidence="0.988829">
the hp &apos;il cane&apos; will he first labelled FOCUS or
FieSTI:P. Then, after havine ricoenized the verb,
the action
</bodyText>
<equation confidence="0.9679498">
(ASSIGN SUisJ (LOCATE FOCUS T CL T)) or
(ASSING OBJ (LOCATE FOCUS T CL T))
will properly classify the :IP as
SUBJ or OBJ = FOCUS = OFT = IL
=NEAL = U = CANE
</equation>
<bodyText confidence="0.999953409090909">
Extraction of information is done by the forms
FIND, which returns a pair, and FINDVAL, which
returns only the value of a pair. LOCATE works
exactly in the same way, but returns a pointer to
a eiven radix. All the three functions can work in
different modes. They can search either only the
current level (CL) or throueh the entire list (T).
In this latter case the current level is excluded
an!, if no further options are specified, the
lower (the nearest to the top) occurrence is
returned. Another option (dtype) returns all the
occurrences either appended in a list (L) or one
by one, non—deterministically (hD). A third option
evaluates conditions in order to select the
component identified by the specified path.
in sentence (4) the antecedent retrievine is
.crfory2-: Ly Cre far,
which searches for a subject through all the
levels non detenainistically. Such an NP must
agree in number and gender with the current level
head, i.e. the verb(4). If this expression is
embedded in the function
</bodyText>
<sectionHeader confidence="0.514889" genericHeader="method">
(ADD SUBJ
</sectionHeader>
<bodyText confidence="0.99972580952381">
the correct subject(s) is (are) copied in the
complement (5).
The three last actions, PUSF, POP, and INSERT,
nanipulate the items in the list. PUSS adds a new
(empty) item in front of the list. The elements of
the component being analysed (prases or
sentences) arc ADDed in this top itee, which has
been therefore referred to as current level. POP
removes the current top—ite and e.li,ee:s it into
the new top—item, possibly essienine a label to
the corresponding component. Finally INSLUT
inserts an item, correspondin, to a new level,
somewhere back between %tee&apos; and the front part
of the list, and fills it with &apos;data&apos;.
List manipulation takes place independently from
the starting or the ending of the process
expressed in a subnet. Thus a component can be
POPed after the end of its recognition procedure,
when also its function is clarified.
The arc recognizing an object, for ex., can be
expressed as follows
</bodyText>
<equation confidence="0.96874325">
(START DP T
(GOND (FIND (SUBJ) T CL T)
(POP ODJ))
(TO qi))
</equation>
<bodyText confidence="0.992564769230769">
which means that if there already is a subject,
the current component must be popped with the
label OBJ.
The use of the INSERT function is primarily
motivated by the treatment of certain relative
clauses. Pelative pronouns are surface sienals
that triaeer the wbeddine into a relative clauce
of the currently processed component(s).
In the sentence
(17)I1 inn.) dolls trama del euale earlaveedo
The booh about the plot of whicf we taleed
such an eaheddine taleen after
&apos;libro&apos;, thus eroducine
</bodyText>
<listItem confidence="0.996825166666667">
(4) An &apos;anaeenric&apos; facility is also implemented not to repeat an embedded form with the saee areueent as
the embeddin, one.
(5) be do not intend to sueeest that the correct mechanism of trace/antecedent hindin, is the copyine of
tre antecedent in the trace position. A slinhtly modified version of this function :1i5kt produce the
insertion of the antecedent path, as in the orthodox functional erammar. The procedure, however, does not
sunstantially chanee.
</listItem>
<page confidence="0.98697">
62
</page>
<bodyText confidence="0.962217666666667">
(1n) (il libro (REIM, (della trama (del quale))
parlavamo))
The general rule may be formulated as follows:
&apos;a new level labelled RELATIVEGLAUSE is to be
inserted immediately after the antecedent of the
relative pronoun&apos;. Analysis of (17) will therefore
proceed as follows;
— when the relative pronoun &apos;quale is
encountered, the form
</bodyText>
<equation confidence="0.7432908">
(FIND (HEAD) (AND (EQ (FINOVAL (HEAD GEN) T T VD)
(FINDVAL (DET GEN) T CL T))
(EQ (FIDDVAL (HEAD NUN) T T ND)
(FINDVAL (DET NUM T CL T)))
TT)
</equation>
<bodyText confidence="0.944171714285714">
returns the lower head which agrees in number and
gender with the determiner of &apos;quale&apos; (&amp;quot;quale&apos; is
both masculine and feminine), i.e. &apos;libro&apos;. This
is the antecedent.
— The function
(LISERT anci, (LOCATE ...as for FIND))
inserts a new item with label SELCL.
</bodyText>
<listItem confidence="0.96141575">
— On the sane arc the function (POP DI—ARG) embeds
&apos;del quale&apos; in &apos;della trama&apos; and a second POP
embeds (della trama (del quale)) in the recently
inserted relative clause component.
— The recognition of a relative clause is
continued by a (STANT S....) arc. The control is
finally then returned to the rp process with the
complex Ni&apos; &apos;il libro...&apos;as the current component.
</listItem>
<bodyText confidence="0.977878467741936">
IV. ADVANTAGES
A. Efficiency
The parser we have been presenting is based on
the core algorithm of the ATN. Our modifications
affect the set of forms and actions and the data
structure. The parsing algorithm, therefore, keeps
the efficiency of traditional ATE. We have already
shown that the storing of the data structure does
not present any special difference from the
traditional registers system, even in relation to
the treatment of non—determinism. The memory load
is, therefore, strictly a function of the length
of the parsed se;ament of the input and no overhead
determined by manipulations of structures is added
US in the case of transit registers.
The actions and fonls are equivalent to the
traditional ones, but for the fact that most of
the,. :Just visit the whole left context for every
access. anyeay this effect hardly balances the
setting of transit reeisters. In fact, it is
earth notin that in the majority of common
sentences such accesses are very reduced, so that
no substantial difference exists in comparison
with the traditional register access. In the
discussed complex cases the access to the CGH is a
known function of the length of the list, i.e. of
the depth of embedding of the current level.
Within any item search proceeds linearly as for
any ordinary pattern—matching.
The only substantially new fact is the
possibility of embedding the current component;
this eliminates the need for backtracking, at
least for some sentences.
In conclusion, it seems that if there is a
difference from the traditional ATN it is in
favour of the version presented here.
B. Generalization and modularity
The set of actions and forms presented seem to
provide a functional description of many
linguistic phenomena. They can be regarded as
linguistic (procedural) generalizations, at least
on the functional ground. This supports our claim
that linguistic phenomena can be described,
independently from the formalism that expresses
them (the grammar), in terms of general
operations. This set of operations is open— ended
and can, therefore, be increased with functions
designed for the treatment of new phenomena, as
they are discussed and described. Furthermore,
those actions can be taken to represent mental
operations of the language user, thus providing a
valuable frame for psycholinguistic experiments.
It is obvious that this view strongly inclines
towards the idea of parser as a collection of
heuristic strategies and processes and also offers
a symmetric alternative to the HOLD hypothesis.
According to this hypothesis there are points in a
sentence in which comprehension needs a heavier
memory load; instead in our view an overhead of
operations is suggested. Anyway the distinguished
phenomena coincide, thus keeping the integrity of
the experimental data(6).
</bodyText>
<sectionHeader confidence="0.530805" genericHeader="method">
C. Naturality
</sectionHeader>
<bodyText confidence="0.956565764705883">
Our hypothesis seems more natural in two ways.
It embeds into a non—deterministic frame some
operations very similar to some of those designed
and discussed in the deterministic hypothesis [3,
4, 15, 16, 19]. The result is a strong limitation
of the effects of non—determinism, at least for
those cases they are designed to treat. It is
interesting that starting from two opposed
viewpoints comparable results arc obtained.
Nevertheless, as stated above, we think that
imposing constraints to a non—deterministic model
is more natural than being imposed elobal
constraints by the assumption of determinism. In
the first hypothesis, in fact, a deterministic
behaviour of the parser may me ultimately&apos;.
(u) In this paragraph we refer to the ideas and the experiments presented by Haplan [12, 13] and Nanner
Naratsos [211.
</bodyText>
<page confidence="0.998527">
63
</page>
<bodyText confidence="0.999978481481482">
obtained, in some points, as a result of
observation of real linguistic restrictions while
tballe phenomena such as ambiguity which can be
adequately treated only in a non-deterministic
frame, are not &apos;a priori&apos; ruled out. Then, a
model such as the non-deterministic one, in which
there is place for the study of human heuristic
constraints, seems more attractive and natural.
Our hypothesis seems intuitively natural also
in so much as it tries to propose a &apos;theory of
guess&apos;. During the comprehension of a sentence
guesses (CCU&apos;s) are progressively enriched and
stored in a space of memory. During this process
errors may be done. For some of them it is enough
to modify the previous guess while for others a
real backtracking and reanalysis is necessary.
Although the distinction between the two types of
errors is unclear, it provides a valuable frame
for further research in the domain of
computational linguistics as well as
psycholinguistics. In particular it seems to
distinguish in the activity of sentence
comprehension a phase of structuring from a phase
of perception. Errors occurring in the former are
remedied by modifying a guess, while those
occurring in the latter need backtracking and the
choice of another strategy.
</bodyText>
<sectionHeader confidence="0.553431" genericHeader="method">
V. PERSPECTIVES
</sectionHeader>
<bodyText confidence="0.999982047619048">
A more serious systematization of the proposed
functions, as well as the extension of the model
to more and more linguistic phenomena are obvious
extensions of the present project.
Another direction where investigation seems to
be particularly fruitfull is the relation between
syntax and semantics. On one hand, the fact that
the result of the analysis is progressively stored
in a unique space of memory lo not impose special
constraints on the structure of the analyzed
string. On the other hand, many of the presented
functions include parameter slots for conditions
which may be filled with any kind of test. This
model seems, therefore, to avoid &apos;physiological&apos;
bounderies between syntax and semantics. The
stored structure can be a semantic one and the
tests can also incorporate semantic descriptions.
This seems to eventually lead to an easier
integration of the two levels. hhe will present
shortly [10] a first approximation to a frame into
which such in integration can he realized.
</bodyText>
<sectionHeader confidence="0.541279" genericHeader="conclusions">
AhdOYLEECaENTS
</sectionHeader>
<bodyText confidence="0.99421225">
!e would li!.e to thank Pierpaolo 8e,,,ano, Luigi
Einzi, Franco Turini and Oliviero Stock who read
various early versions of this paper, and
contriinted to it with to-l&apos;z ltulle comments.
</bodyText>
<sectionHeader confidence="0.992313" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.999952446808511">
(1) Aho A., Ullmann J.D., The theory of parsing,
translation and compilin,,-, Prentice Hall, New
York, 1972.
(2) Asirelli P., Lami C., !Jontangero C., Pacini
C., Simi 11., Turini F., ;ii.0:1A-LISP Reference
ilanual, NT C75-13, TEl Cn, Pisa, 1975.
(3) Berwick P.C., Weinber;; A.S., Syntactic
Constraints nod efficient Parsability, in
Proceedings of the 21st Annual 3eetin3 of ACL,
Cambridge dA,15-17 June 1933, pp.11!:-122.
(4) herwick R., A deterministic parser with broad
coverage, in Proceedings of the Eighth
International Joint Conference on Artificial
Intelligence, Karlsruhe 9-12 August 1933, pp.
710-712.
(5) Cappelli A., Ferrari C., c.oretti L., Prodanof
I., Stock O., Parsing an Italian Text with an
ATE parser, NT ILC crtt, Pisa, 1973.
(6) Cappelli A., Ferrari G., t,oretti L., Prodanof -
I., Stock O., Automatic Analysis of Italian, in
Proceedings of the AISS-d0 Conference on
Artificial Intelligence, Amsterdam, 1 - 4 July,
1930.
(7) Cappelli A., Ferrari C., Foretti L., Prodanof
I., Stock O., Il trattamento di alcuni fenomeni
anaforici mediante un ATN, in Atti del
seminario &apos;Sull&apos;anafora&apos;, Firenze
14-16/12/1931, pp.275-289.
(3) Cappelli A., Ferrari G., :t)retti L., Prodanof
I., Stock O., Costruzione, sperimentazione ed
estensione di un ATd come modello di analisi
del linguaggio naturale, in Ricerche di
Psicolo.tja, VII, 25, 1983, p. 159-184.
(9) Cappelli A., Ferrari C., &apos;:&apos;oretti L., Prodanof
I., Towards an integrated model of sentence
comprehension, in A.Cappelli (ed.) Research in
Natural Language Processin:, in Italy (1981),
Giardini, Pisa, 1983, pp. 45-53.
(10) Cappelli A., Ferrari C., !oretti L., Prodanof
I., A framework for interating syntax and
semantics, in Lara 3. 5 Guida G. (eds.) Natural
Language Processing, North Nolland, (to
appear).
(11) Ferrari C., Stock 0., Strategic selection for
an ATU Syntactic Parser, in Proceedings of the
18th Annual meeting of i,CL, Philadelphia, June
19-22 1980, pp. 113-115.
</reference>
<page confidence="0.992023">
64
</page>
<figure confidence="0.59133125">
(12) Kaplan R., Augmented Transition Networks as International Conference on Computational
psychological nodels for Sentence Linguistics, Prague, 5-10 July 1922, pp.
Comprehension, Artificial Intelligence 3, 1972, 101-105.
pp. 77-100.
</figure>
<reference confidence="0.999929378378379">
(13) Kaplan R., On process Node&apos;s for sentence
Analysis, in Norman 0. &amp; Rumelhart D. (eds.)
Explorations in Cognition, Freeman, S.Francisco
1975, pp. 117-135.
(14) Kay II., Functional Grammar, in Proceedings of
the 5th neeting of the Berkeley Linguistic
Society, Berkeley 1979, pp. 142-158.
(15) narcus A Theory of Syntactic Recognition
for Natural Language, NIT Press, Cambridge 1:A,
1930.
(16) Narcus 3.P., Jindle 0., Fleck .1., 0-Theory:
Talking about Talking about Trees, in
Proceedings of the 21st Annual :ieetirth of
Cambridge 3A, 15-17 June 1923, pp. 129-133.
(17) ;:ontancro C., Pacini G., Turini F., &apos;00-LISP
Reference ::,anual, NT C76-3, IFI CUR, Pisa,
1976.
(18) Prodanof I., Ferrari G., Revising and ATU
parser, in COLING22, Proceedings of the 9th
(19) Shipman U.D., Narcus L., Towards minimal data
structure for deterministic parsing, in
Proceedings of the 6th International Joint
Conference on Artificial Intelligence, Tokyo,
August 20-23 1979, pp.815-017.
(20) Stock O., ALISYS: un sistema per l&apos;analisi
grammaticale automatica delle lingue naturali,
NI B76-29, IEI cm, Pisa, 1976.
(21) Wanner E., .kiaratsos IN, An ATN approach to
comprehension, in N. Lane, J.resnan, G.
Niller (eds.) Linguistic Theory and
Psycholoi;ical reality, IT Press, Ca:.ubridge
1078, pp.119-161.
(22) Winorad T., Lanuage as a Cognitive Process.
Syntax, Addison-&apos;Jesley, IA, 19b3.
(23) Woods N., Transition iletwork Gralut,ars for
Natural Lanuage Analysis, in CAC:: 13-10, 1970,
pp. 591-606.
</reference>
<page confidence="0.999616">
65
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.896085">
<title confidence="0.99522">EXTENDED ACCESS TO THE LEFT CONTEXT IN AN ATN PARSER</title>
<author confidence="0.999159">Irina Prodanof</author>
<author confidence="0.999159">Giacomo Ferrari</author>
<affiliation confidence="0.98431">Istituto di Linguistica Computazionale</affiliation>
<address confidence="0.965578">Via della Faggiola 32 1-56100 Pisa, Italy</address>
<abstract confidence="0.998084615384615">Some Italian sentences related to linguistic phenomena largely known and recently discussed by many computational linguists are discussed in the framework of ATE. They offer certain difficulties which seem to suggest a substantial revision of the ATN formalism. The theoretical assumptions and an experimental implementation of such a revision are presented, together with examples. Nany related theoretical points such as some psycholinguistic implications and the relationship between deterministic and non—deterministic hypothesis are also briefly discussed.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A Aho</author>
<author>J D Ullmann</author>
</authors>
<title>The theory of parsing, translation and compilin,,-,</title>
<date>1972</date>
<publisher>Prentice Hall,</publisher>
<location>New York,</location>
<contexts>
<context position="2798" citStr="(1)" startWordPosition="436" endWordPosition="436">f the source register is successively set to a different value, ii). the initialization of a register at a lower or higher level, if SENOR or LIFTR are used. Initialization is commonly used to i) raise lexical features to a higher level where they are used for tests (ex.: subject—verb agreement), ii) pass possible antecedents to lower levels where a gap may be detected in an embedded clause. B. Difficult access to registers 1. Filler—gap linking The antecedent passing may cause a theoretically unlimited increase in storage load. By the standard procedure, the analysis of the ambiguous sentence(1) (1) Giovanni disse che aveva mentito John said that (he) had lied &apos;Giovanni is always SENDRed as possible SUBJect of a complement, as soon as &apos;disse&apos; is recognized as an STRANS verb. As no subject NP is met after &apos;che&apos;, an interpretation is yielded with &apos;Giovanni&apos; in subject position. The second interpretation is produced sir,ply by successively setting the SUBJ register to a dummy node, which (1) The ambiguity of this sentence is the same as its English translation where &apos;he&apos; can be bound either to &apos;John&apos; or to someone else mentioned in a previous sentence. Italian has a gap instead of a pro</context>
<context position="5784" citStr="(1)" startWordPosition="945" endWordPosition="945">isters containing the three possible subjects will be available and shall be visited in order to find the right one(3). A storage overload may also be caused by the need for raising lexical features. Morphological features are necessary at the least in the test of subject—verb agreement. This is done by LIFTRing In ad hoc registers gender and number from the NP level to the S level. If the NP is popped in a possible subject position the test for agreement may take place by comparing the content of those registers with the corresponding features of the verb. However, there are cases such as ex.(1) in which such information must be used again in the course of the analysis for another (agreement) test. Those features must be, therefore, copied in appropriately labelled registers in order to i) flag their relation to the subject and ii) prevent them from being erased when the same features are LIFTRed from the following NP. The same need for ad hoc storing may be shown for the object and few PP complements. For example, in the sentence (6) Il capitano disse ai soldati che The captain said to the soldiers that marciavano pietosamente (they) were marching peatifully as the NP i soldati&apos; emb</context>
</contexts>
<marker>(1)</marker>
<rawString>Aho A., Ullmann J.D., The theory of parsing, translation and compilin,,-, Prentice Hall, New York, 1972.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Asirelli</author>
<author>C Lami</author>
<author>C Jontangero</author>
<author>C Pacini</author>
</authors>
<date>1975</date>
<booktitle>Simi 11., Turini F., ;ii.0:1A-LISP Reference ilanual, NT C75-13, TEl Cn,</booktitle>
<location>Pisa,</location>
<contexts>
<context position="3516" citStr="(2)" startWordPosition="557" endWordPosition="557">of a complement, as soon as &apos;disse&apos; is recognized as an STRANS verb. As no subject NP is met after &apos;che&apos;, an interpretation is yielded with &apos;Giovanni&apos; in subject position. The second interpretation is produced sir,ply by successively setting the SUBJ register to a dummy node, which (1) The ambiguity of this sentence is the same as its English translation where &apos;he&apos; can be bound either to &apos;John&apos; or to someone else mentioned in a previous sentence. Italian has a gap instead of a pronoun. 58 remains unfilled. The same treatment is 2. Lexical features raising recursively applied to sentences like (2) Giovanni pensava che avrebbe raccontato John thought that (he) would have told a tutti che aveva fatto una to everybody that (he) had done a scoperta discovery where &apos;Giovanni must serve as subject of both the first and the second (linearly) complement. Instead, in the sentence (3) Giovanni disse che i suoi colleghi avevano John said that his colleagues had mentito lied as the UP 1 suoi colleghi&apos; is analysed, it replaces the SENDRed &amp;quot;Giovanni&apos; in the suaJ register and the correct interpretation is popped. A more complex treatment is required for the sentence (4) Giovanni pensava che i suoi co</context>
<context position="5136" citStr="(2)" startWordPosition="834" endWordPosition="834">st complement (&apos;i suoi colleghi&apos;) is found, it replaces &apos;Giovanni&apos; in SUEJ but not in Rl. The new SUBJ i suoi colleghi&apos; and R1 &apos;Giovanni&apos; are again SENDRed to the embedded complement where the agreement with the verb correctly selects, as subject, the content of Rl. Now, as the number of levels which to &apos;jump over is in principle illimited and each one may have its own subject to be SENDRed, a transit register for each new subject is needed. Thus, for the sentence (5) Giovanni era sicuro che i suoi nemici avrebbero rivelato alla stampa che sua moglie aveva detto un giorno che l&apos;aveva picchiata(2) when processing the last com?lement three reisters containing the three possible subjects will be available and shall be visited in order to find the right one(3). A storage overload may also be caused by the need for raising lexical features. Morphological features are necessary at the least in the test of subject—verb agreement. This is done by LIFTRing In ad hoc registers gender and number from the NP level to the S level. If the NP is popped in a possible subject position the test for agreement may take place by comparing the content of those registers with the corresponding features of t</context>
<context position="7527" citStr="(2)" startWordPosition="1236" endWordPosition="1236">e a suitable function, a form that should return only a part of a stored tree after having searched through it. Now, although such functions are not particularly complex to design [5, 7], they are not perfectly consistent with the ATN general formalism which does not take into consideration the extraction of pieces of already processed information from the structure they have been inserted in. C. A functional perspective 1. A generalized retrieving action If we look at the discussed examples from an entirely functional viewpoint we can describe them as having in common the need for retrieving (2) &apos;John was sure that his ennemies would have disclosed to the press that his wife had once told that (he) had beated her&apos;. De give here, for clarity, the parenthesized form of this example: (Giovanni era sicuro (che i suoi nemici avrebbero rivelato alla stampa (che sun moglie aveva detto un giorno (che l&apos;aveva picchiata))). Notice that in this example the subject—verb agreement is sufficient to select the right antecedent, but this is not always the case. (3) A possible alternative, equally tricky,is the use of the NOLD—VIRT couple. 59 information somewhere back in the already built structures</context>
</contexts>
<marker>(2)</marker>
<rawString>Asirelli P., Lami C., !Jontangero C., Pacini C., Simi 11., Turini F., ;ii.0:1A-LISP Reference ilanual, NT C75-13, TEl Cn, Pisa, 1975.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P C Berwick</author>
<author>Weinber</author>
</authors>
<title>Syntactic Constraints nod efficient Parsability,</title>
<date>1933</date>
<booktitle>in Proceedings of the 21st Annual 3eetin3 of ACL, Cambridge dA,15-17</booktitle>
<pages>11--122</pages>
<contexts>
<context position="3799" citStr="(3)" startWordPosition="604" endWordPosition="604">(1) The ambiguity of this sentence is the same as its English translation where &apos;he&apos; can be bound either to &apos;John&apos; or to someone else mentioned in a previous sentence. Italian has a gap instead of a pronoun. 58 remains unfilled. The same treatment is 2. Lexical features raising recursively applied to sentences like (2) Giovanni pensava che avrebbe raccontato John thought that (he) would have told a tutti che aveva fatto una to everybody that (he) had done a scoperta discovery where &apos;Giovanni must serve as subject of both the first and the second (linearly) complement. Instead, in the sentence (3) Giovanni disse che i suoi colleghi avevano John said that his colleagues had mentito lied as the UP 1 suoi colleghi&apos; is analysed, it replaces the SENDRed &amp;quot;Giovanni&apos; in the suaJ register and the correct interpretation is popped. A more complex treatment is required for the sentence (4) Giovanni pensava che i suoi colleghi avrebbero John thought that his colleagues would raccontato a tutti che aveva fatto have told to everybody that (he) had done una scoperta a discovery where &apos;Giovanni&apos; must get through the first complement and reappear in the second (embedded) one. If SENDR is used, a transit</context>
<context position="5299" citStr="(3)" startWordPosition="860" endWordPosition="860">embedded complement where the agreement with the verb correctly selects, as subject, the content of Rl. Now, as the number of levels which to &apos;jump over is in principle illimited and each one may have its own subject to be SENDRed, a transit register for each new subject is needed. Thus, for the sentence (5) Giovanni era sicuro che i suoi nemici avrebbero rivelato alla stampa che sua moglie aveva detto un giorno che l&apos;aveva picchiata(2) when processing the last com?lement three reisters containing the three possible subjects will be available and shall be visited in order to find the right one(3). A storage overload may also be caused by the need for raising lexical features. Morphological features are necessary at the least in the test of subject—verb agreement. This is done by LIFTRing In ad hoc registers gender and number from the NP level to the S level. If the NP is popped in a possible subject position the test for agreement may take place by comparing the content of those registers with the corresponding features of the verb. However, there are cases such as ex.(1) in which such information must be used again in the course of the analysis for another (agreement) test. Those fea</context>
<context position="7990" citStr="(3)" startWordPosition="1314" endWordPosition="1314">we look at the discussed examples from an entirely functional viewpoint we can describe them as having in common the need for retrieving (2) &apos;John was sure that his ennemies would have disclosed to the press that his wife had once told that (he) had beated her&apos;. De give here, for clarity, the parenthesized form of this example: (Giovanni era sicuro (che i suoi nemici avrebbero rivelato alla stampa (che sun moglie aveva detto un giorno (che l&apos;aveva picchiata))). Notice that in this example the subject—verb agreement is sufficient to select the right antecedent, but this is not always the case. (3) A possible alternative, equally tricky,is the use of the NOLD—VIRT couple. 59 information somewhere back in the already built structures; the tricky solutions presented above are, in fact, a way of accessing parts of the left context. These sometimes correspond to the entire content of a register and sometimes to a fragment of it. We will assume, then, that the left context is stored in a space .of memory, equally accessible from any level and that retrieving always concerns fragments of it. At any point of the process this structure contains the current hypothesis about the analysis of the p</context>
<context position="10529" citStr="(3)" startWordPosition="1733" endWordPosition="1733">ent, iii) semantic features that may be introduced in the process, and iv) syntactic deteri,ination of the scope of the search. 2. ianipulations of the left context Retrieving of the antecedent may actually correspond to two different operations depending upon whether the antecedent to be bound linearly preceeds or follows the symbol it is to be bound to. In the cases discussed above the gap or the pronoun always follow there antecedent and it is therefore possible to immediately insert the binding pointer. loreover, in many coaon sentences the antecedent linearly follows its dependent, as in (3) Quando si arrabbia, Giovanni diventa rosso When (he) gets angry, John becomes red (9) Se lo vedi, salute Giovanni If (you) see him, say hallo to John da parte mia on my behalf In this case, the binding should take place in two steps, the flagging of the need for a forward binding and the moving of the pointer from the antecedent, once detected, to the flag. Notice that this class of sentences entirely lies beyond the abilities of the classical ATI, framework. Relative pronouns also need to be bound to an antecedent and, besides, are the surface signal of an embedding. No special processing di</context>
</contexts>
<marker>(3)</marker>
<rawString>Berwick P.C., Weinber;; A.S., Syntactic Constraints nod efficient Parsability, in Proceedings of the 21st Annual 3eetin3 of ACL, Cambridge dA,15-17 June 1933, pp.11!:-122.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R herwick</author>
</authors>
<title>A deterministic parser with broad coverage,</title>
<date>1933</date>
<booktitle>in Proceedings of the Eighth International Joint Conference on Artificial Intelligence, Karlsruhe 9-12</booktitle>
<pages>710--712</pages>
<contexts>
<context position="4085" citStr="(4)" startWordPosition="652" endWordPosition="652">vely applied to sentences like (2) Giovanni pensava che avrebbe raccontato John thought that (he) would have told a tutti che aveva fatto una to everybody that (he) had done a scoperta discovery where &apos;Giovanni must serve as subject of both the first and the second (linearly) complement. Instead, in the sentence (3) Giovanni disse che i suoi colleghi avevano John said that his colleagues had mentito lied as the UP 1 suoi colleghi&apos; is analysed, it replaces the SENDRed &amp;quot;Giovanni&apos; in the suaJ register and the correct interpretation is popped. A more complex treatment is required for the sentence (4) Giovanni pensava che i suoi colleghi avrebbero John thought that his colleagues would raccontato a tutti che aveva fatto have told to everybody that (he) had done una scoperta a discovery where &apos;Giovanni&apos; must get through the first complement and reappear in the second (embedded) one. If SENDR is used, a transit register R1 with the same content as the initialized SUEJ register is to be passed down together with it. When the subject of the first complement (&apos;i suoi colleghi&apos;) is found, it replaces &apos;Giovanni&apos; in SUEJ but not in Rl. The new SUBJ i suoi colleghi&apos; and R1 &apos;Giovanni&apos; are again SEND</context>
<context position="18260" citStr="(4)" startWordPosition="3063" endWordPosition="3063">TE works exactly in the same way, but returns a pointer to a eiven radix. All the three functions can work in different modes. They can search either only the current level (CL) or throueh the entire list (T). In this latter case the current level is excluded an!, if no further options are specified, the lower (the nearest to the top) occurrence is returned. Another option (dtype) returns all the occurrences either appended in a list (L) or one by one, non—deterministically (hD). A third option evaluates conditions in order to select the component identified by the specified path. in sentence (4) the antecedent retrievine is .crfory2-: Ly Cre far, which searches for a subject through all the levels non detenainistically. Such an NP must agree in number and gender with the current level head, i.e. the verb(4). If this expression is embedded in the function (ADD SUBJ the correct subject(s) is (are) copied in the complement (5). The three last actions, PUSF, POP, and INSERT, nanipulate the items in the list. PUSS adds a new (empty) item in front of the list. The elements of the component being analysed (prases or sentences) arc ADDed in this top itee, which has been therefore referred to</context>
<context position="20007" citStr="(4)" startWordPosition="3358" endWordPosition="3358">an object, for ex., can be expressed as follows (START DP T (GOND (FIND (SUBJ) T CL T) (POP ODJ)) (TO qi)) which means that if there already is a subject, the current component must be popped with the label OBJ. The use of the INSERT function is primarily motivated by the treatment of certain relative clauses. Pelative pronouns are surface sienals that triaeer the wbeddine into a relative clauce of the currently processed component(s). In the sentence (17)I1 inn.) dolls trama del euale earlaveedo The booh about the plot of whicf we taleed such an eaheddine taleen after &apos;libro&apos;, thus eroducine (4) An &apos;anaeenric&apos; facility is also implemented not to repeat an embedded form with the saee areueent as the embeddin, one. (5) be do not intend to sueeest that the correct mechanism of trace/antecedent hindin, is the copyine of tre antecedent in the trace position. A slinhtly modified version of this function :1i5kt produce the insertion of the antecedent path, as in the orthodox functional erammar. The procedure, however, does not sunstantially chanee. 62 (1n) (il libro (REIM, (della trama (del quale)) parlavamo)) The general rule may be formulated as follows: &apos;a new level labelled RELATIVEGLAU</context>
</contexts>
<marker>(4)</marker>
<rawString>herwick R., A deterministic parser with broad coverage, in Proceedings of the Eighth International Joint Conference on Artificial Intelligence, Karlsruhe 9-12 August 1933, pp. 710-712.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cappelli</author>
<author>C Ferrari</author>
<author>c oretti L</author>
<author>I Prodanof</author>
<author>O Stock</author>
</authors>
<date>1973</date>
<booktitle>Parsing an Italian Text with an ATE parser, NT ILC crtt,</booktitle>
<location>Pisa,</location>
<contexts>
<context position="5005" citStr="(5)" startWordPosition="813" endWordPosition="813">gister R1 with the same content as the initialized SUEJ register is to be passed down together with it. When the subject of the first complement (&apos;i suoi colleghi&apos;) is found, it replaces &apos;Giovanni&apos; in SUEJ but not in Rl. The new SUBJ i suoi colleghi&apos; and R1 &apos;Giovanni&apos; are again SENDRed to the embedded complement where the agreement with the verb correctly selects, as subject, the content of Rl. Now, as the number of levels which to &apos;jump over is in principle illimited and each one may have its own subject to be SENDRed, a transit register for each new subject is needed. Thus, for the sentence (5) Giovanni era sicuro che i suoi nemici avrebbero rivelato alla stampa che sua moglie aveva detto un giorno che l&apos;aveva picchiata(2) when processing the last com?lement three reisters containing the three possible subjects will be available and shall be visited in order to find the right one(3). A storage overload may also be caused by the need for raising lexical features. Morphological features are necessary at the least in the test of subject—verb agreement. This is done by LIFTRing In ad hoc registers gender and number from the NP level to the S level. If the NP is popped in a possible subj</context>
<context position="18595" citStr="(5)" startWordPosition="3119" endWordPosition="3119">) occurrence is returned. Another option (dtype) returns all the occurrences either appended in a list (L) or one by one, non—deterministically (hD). A third option evaluates conditions in order to select the component identified by the specified path. in sentence (4) the antecedent retrievine is .crfory2-: Ly Cre far, which searches for a subject through all the levels non detenainistically. Such an NP must agree in number and gender with the current level head, i.e. the verb(4). If this expression is embedded in the function (ADD SUBJ the correct subject(s) is (are) copied in the complement (5). The three last actions, PUSF, POP, and INSERT, nanipulate the items in the list. PUSS adds a new (empty) item in front of the list. The elements of the component being analysed (prases or sentences) arc ADDed in this top itee, which has been therefore referred to as current level. POP removes the current top—ite and e.li,ee:s it into the new top—item, possibly essienine a label to the corresponding component. Finally INSLUT inserts an item, correspondin, to a new level, somewhere back between %tee&apos; and the front part of the list, and fills it with &apos;data&apos;. List manipulation takes place indepe</context>
<context position="20131" citStr="(5)" startWordPosition="3379" endWordPosition="3379">if there already is a subject, the current component must be popped with the label OBJ. The use of the INSERT function is primarily motivated by the treatment of certain relative clauses. Pelative pronouns are surface sienals that triaeer the wbeddine into a relative clauce of the currently processed component(s). In the sentence (17)I1 inn.) dolls trama del euale earlaveedo The booh about the plot of whicf we taleed such an eaheddine taleen after &apos;libro&apos;, thus eroducine (4) An &apos;anaeenric&apos; facility is also implemented not to repeat an embedded form with the saee areueent as the embeddin, one. (5) be do not intend to sueeest that the correct mechanism of trace/antecedent hindin, is the copyine of tre antecedent in the trace position. A slinhtly modified version of this function :1i5kt produce the insertion of the antecedent path, as in the orthodox functional erammar. The procedure, however, does not sunstantially chanee. 62 (1n) (il libro (REIM, (della trama (del quale)) parlavamo)) The general rule may be formulated as follows: &apos;a new level labelled RELATIVEGLAUSE is to be inserted immediately after the antecedent of the relative pronoun&apos;. Analysis of (17) will therefore proceed as f</context>
</contexts>
<marker>(5)</marker>
<rawString>Cappelli A., Ferrari C., c.oretti L., Prodanof I., Stock O., Parsing an Italian Text with an ATE parser, NT ILC crtt, Pisa, 1973.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cappelli</author>
<author>G Ferrari</author>
<author>L t oretti</author>
<author>Prodanof -I</author>
<author>O Stock</author>
</authors>
<title>Automatic Analysis of Italian,</title>
<date>1930</date>
<booktitle>in Proceedings of the AISS-d0 Conference on Artificial Intelligence,</booktitle>
<volume>1</volume>
<location>Amsterdam,</location>
<contexts>
<context position="6232" citStr="(6)" startWordPosition="1023" endWordPosition="1023">r agreement may take place by comparing the content of those registers with the corresponding features of the verb. However, there are cases such as ex.(1) in which such information must be used again in the course of the analysis for another (agreement) test. Those features must be, therefore, copied in appropriately labelled registers in order to i) flag their relation to the subject and ii) prevent them from being erased when the same features are LIFTRed from the following NP. The same need for ad hoc storing may be shown for the object and few PP complements. For example, in the sentence (6) Il capitano disse ai soldati che The captain said to the soldiers that marciavano pietosamente (they) were marching peatifully as the NP i soldati&apos; embedded in the &apos;a—PP&apos; is the subject of the complement, its gender and number must travel up through PP and S and down to the complement, in order the subject—verb agreement to be satisfied. This implies that at a given moment other regiSterS containing morphological features coexist at the S level with those of the subject. An obvious remedy to this proliferation of registers consists in adding these features to the NP or PP structure, POPing th</context>
<context position="24363" citStr="(6)" startWordPosition="4063" endWordPosition="4063">actions can be taken to represent mental operations of the language user, thus providing a valuable frame for psycholinguistic experiments. It is obvious that this view strongly inclines towards the idea of parser as a collection of heuristic strategies and processes and also offers a symmetric alternative to the HOLD hypothesis. According to this hypothesis there are points in a sentence in which comprehension needs a heavier memory load; instead in our view an overhead of operations is suggested. Anyway the distinguished phenomena coincide, thus keeping the integrity of the experimental data(6). C. Naturality Our hypothesis seems more natural in two ways. It embeds into a non—deterministic frame some operations very similar to some of those designed and discussed in the deterministic hypothesis [3, 4, 15, 16, 19]. The result is a strong limitation of the effects of non—determinism, at least for those cases they are designed to treat. It is interesting that starting from two opposed viewpoints comparable results arc obtained. Nevertheless, as stated above, we think that imposing constraints to a non—deterministic model is more natural than being imposed elobal constraints by the assu</context>
</contexts>
<marker>(6)</marker>
<rawString>Cappelli A., Ferrari G., t,oretti L., Prodanof -I., Stock O., Automatic Analysis of Italian, in Proceedings of the AISS-d0 Conference on Artificial Intelligence, Amsterdam, 1 - 4 July, 1930.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cappelli</author>
<author>C Ferrari</author>
<author>L Foretti</author>
<author>I Prodanof</author>
<author>O Stock</author>
</authors>
<title>Il trattamento di alcuni fenomeni anaforici mediante un ATN,</title>
<date>1931</date>
<booktitle>in Atti del seminario &apos;Sull&apos;anafora&apos;,</booktitle>
<pages>275--289</pages>
<location>Firenze</location>
<contexts>
<context position="9333" citStr="(7)" startWordPosition="1537" endWordPosition="1537"> two participants, a symbol that triggers the action (trigger) and the information to be retrieved (the target of the action). In this frame all the different procedures discussed above may be reduced to a single general algorithm of three steps, i) identification of a trigger (a gap to be filled, a verb which demands for the subject-verb agreement test) ii) extraction of constraints which must guide the search for the target, and iii) retrieving of the required information. On this functional ground, the same description fits to the binding of an anaphoric pronoun to its antecedent [7] as in (7) a) Giovanni disse a naria che voleva John said to Mary that (he) wanted sposarl-la marry her as opposed to b) Giovanni disse a Haria che voleva John said to :.lary that (he) wanted sposarsi to marry The function that searches back may be constrained by several types of restrictions, including i) morphological features, i.e. the .gender and number of the pronoun or those required for agreement by the syntactic environment (e.g. the verb), ii) syntactic idiosyncrasies of some lexical item such as the ;TRANS verbs that determine which of their arguments is to be the subject of the complement, ii</context>
</contexts>
<marker>(7)</marker>
<rawString>Cappelli A., Ferrari C., Foretti L., Prodanof I., Stock O., Il trattamento di alcuni fenomeni anaforici mediante un ATN, in Atti del seminario &apos;Sull&apos;anafora&apos;, Firenze 14-16/12/1931, pp.275-289.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L retti</author>
<author>I Prodanof</author>
<author>O Stock</author>
<author>Costruzione</author>
</authors>
<title>sperimentazione ed estensione di un ATd come modello di analisi del linguaggio naturale,</title>
<date>1983</date>
<booktitle>in Ricerche di Psicolo.tja, VII,</booktitle>
<volume>25</volume>
<pages>159--184</pages>
<contexts>
<context position="3799" citStr="(3)" startWordPosition="604" endWordPosition="604">(1) The ambiguity of this sentence is the same as its English translation where &apos;he&apos; can be bound either to &apos;John&apos; or to someone else mentioned in a previous sentence. Italian has a gap instead of a pronoun. 58 remains unfilled. The same treatment is 2. Lexical features raising recursively applied to sentences like (2) Giovanni pensava che avrebbe raccontato John thought that (he) would have told a tutti che aveva fatto una to everybody that (he) had done a scoperta discovery where &apos;Giovanni must serve as subject of both the first and the second (linearly) complement. Instead, in the sentence (3) Giovanni disse che i suoi colleghi avevano John said that his colleagues had mentito lied as the UP 1 suoi colleghi&apos; is analysed, it replaces the SENDRed &amp;quot;Giovanni&apos; in the suaJ register and the correct interpretation is popped. A more complex treatment is required for the sentence (4) Giovanni pensava che i suoi colleghi avrebbero John thought that his colleagues would raccontato a tutti che aveva fatto have told to everybody that (he) had done una scoperta a discovery where &apos;Giovanni&apos; must get through the first complement and reappear in the second (embedded) one. If SENDR is used, a transit</context>
<context position="5299" citStr="(3)" startWordPosition="860" endWordPosition="860">embedded complement where the agreement with the verb correctly selects, as subject, the content of Rl. Now, as the number of levels which to &apos;jump over is in principle illimited and each one may have its own subject to be SENDRed, a transit register for each new subject is needed. Thus, for the sentence (5) Giovanni era sicuro che i suoi nemici avrebbero rivelato alla stampa che sua moglie aveva detto un giorno che l&apos;aveva picchiata(2) when processing the last com?lement three reisters containing the three possible subjects will be available and shall be visited in order to find the right one(3). A storage overload may also be caused by the need for raising lexical features. Morphological features are necessary at the least in the test of subject—verb agreement. This is done by LIFTRing In ad hoc registers gender and number from the NP level to the S level. If the NP is popped in a possible subject position the test for agreement may take place by comparing the content of those registers with the corresponding features of the verb. However, there are cases such as ex.(1) in which such information must be used again in the course of the analysis for another (agreement) test. Those fea</context>
<context position="7990" citStr="(3)" startWordPosition="1314" endWordPosition="1314">we look at the discussed examples from an entirely functional viewpoint we can describe them as having in common the need for retrieving (2) &apos;John was sure that his ennemies would have disclosed to the press that his wife had once told that (he) had beated her&apos;. De give here, for clarity, the parenthesized form of this example: (Giovanni era sicuro (che i suoi nemici avrebbero rivelato alla stampa (che sun moglie aveva detto un giorno (che l&apos;aveva picchiata))). Notice that in this example the subject—verb agreement is sufficient to select the right antecedent, but this is not always the case. (3) A possible alternative, equally tricky,is the use of the NOLD—VIRT couple. 59 information somewhere back in the already built structures; the tricky solutions presented above are, in fact, a way of accessing parts of the left context. These sometimes correspond to the entire content of a register and sometimes to a fragment of it. We will assume, then, that the left context is stored in a space .of memory, equally accessible from any level and that retrieving always concerns fragments of it. At any point of the process this structure contains the current hypothesis about the analysis of the p</context>
<context position="10529" citStr="(3)" startWordPosition="1733" endWordPosition="1733">ent, iii) semantic features that may be introduced in the process, and iv) syntactic deteri,ination of the scope of the search. 2. ianipulations of the left context Retrieving of the antecedent may actually correspond to two different operations depending upon whether the antecedent to be bound linearly preceeds or follows the symbol it is to be bound to. In the cases discussed above the gap or the pronoun always follow there antecedent and it is therefore possible to immediately insert the binding pointer. loreover, in many coaon sentences the antecedent linearly follows its dependent, as in (3) Quando si arrabbia, Giovanni diventa rosso When (he) gets angry, John becomes red (9) Se lo vedi, salute Giovanni If (you) see him, say hallo to John da parte mia on my behalf In this case, the binding should take place in two steps, the flagging of the need for a forward binding and the moving of the pointer from the antecedent, once detected, to the flag. Notice that this class of sentences entirely lies beyond the abilities of the classical ATI, framework. Relative pronouns also need to be bound to an antecedent and, besides, are the surface signal of an embedding. No special processing di</context>
</contexts>
<marker>(3)</marker>
<rawString>Cappelli A., Ferrari G., :t)retti L., Prodanof I., Stock O., Costruzione, sperimentazione ed estensione di un ATd come modello di analisi del linguaggio naturale, in Ricerche di Psicolo.tja, VII, 25, 1983, p. 159-184.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cappelli</author>
<author>C Ferrari</author>
</authors>
<title>Towards an integrated model of sentence comprehension,</title>
<date>1981</date>
<booktitle>in A.Cappelli (ed.) Research in Natural Language Processin:, in Italy</booktitle>
<pages>45--53</pages>
<location>Giardini, Pisa,</location>
<contexts>
<context position="10615" citStr="(9)" startWordPosition="1747" endWordPosition="1747">eteri,ination of the scope of the search. 2. ianipulations of the left context Retrieving of the antecedent may actually correspond to two different operations depending upon whether the antecedent to be bound linearly preceeds or follows the symbol it is to be bound to. In the cases discussed above the gap or the pronoun always follow there antecedent and it is therefore possible to immediately insert the binding pointer. loreover, in many coaon sentences the antecedent linearly follows its dependent, as in (3) Quando si arrabbia, Giovanni diventa rosso When (he) gets angry, John becomes red (9) Se lo vedi, salute Giovanni If (you) see him, say hallo to John da parte mia on my behalf In this case, the binding should take place in two steps, the flagging of the need for a forward binding and the moving of the pointer from the antecedent, once detected, to the flag. Notice that this class of sentences entirely lies beyond the abilities of the classical ATI, framework. Relative pronouns also need to be bound to an antecedent and, besides, are the surface signal of an embedding. No special processing difficulty is proposed by sentences like (10) Il ragazzo che corre The boy who runs wher</context>
</contexts>
<marker>(9)</marker>
<rawString>Cappelli A., Ferrari C., &apos;:&apos;oretti L., Prodanof I., Towards an integrated model of sentence comprehension, in A.Cappelli (ed.) Research in Natural Language Processin:, in Italy (1981), Giardini, Pisa, 1983, pp. 45-53.</rawString>
</citation>
<citation valid="false">
<authors>
<author>A Cappelli</author>
<author>C Ferrari</author>
<author>L oretti</author>
<author>I Prodanof</author>
</authors>
<title>A framework for interating syntax and semantics,</title>
<booktitle>in Lara 3. 5 Guida G. (eds.) Natural Language Processing,</booktitle>
<publisher>North Nolland,</publisher>
<note>(to appear).</note>
<contexts>
<context position="11172" citStr="(10)" startWordPosition="1845" endWordPosition="1845">osso When (he) gets angry, John becomes red (9) Se lo vedi, salute Giovanni If (you) see him, say hallo to John da parte mia on my behalf In this case, the binding should take place in two steps, the flagging of the need for a forward binding and the moving of the pointer from the antecedent, once detected, to the flag. Notice that this class of sentences entirely lies beyond the abilities of the classical ATI, framework. Relative pronouns also need to be bound to an antecedent and, besides, are the surface signal of an embedding. No special processing difficulty is proposed by sentences like (10) Il ragazzo che corre The boy who runs where the relative pronoun occurs exactly where the embedding begins. In this case a scope restriction can limit the search for an antecedent to the immediately preceeding NP. but in the sentences (11) Il ragazzo del quale ti .parlavo The boy about whom I was talking to you (12) Il ragazzo del cui padre ti parlavo The boy about whose father I was talking to you the relative clause boundery is set one word before the relative pronoun, and in (13) Il ragazzo del padre del quale The boy about the father of whom ti parlavo I was talking to you where the pheno</context>
</contexts>
<marker>(10)</marker>
<rawString>Cappelli A., Ferrari C., !oretti L., Prodanof I., A framework for interating syntax and semantics, in Lara 3. 5 Guida G. (eds.) Natural Language Processing, North Nolland, (to appear).</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Ferrari</author>
<author>Stock</author>
</authors>
<title>Strategic selection for an ATU Syntactic Parser,</title>
<date>1980</date>
<booktitle>in Proceedings of the 18th Annual meeting of i,CL,</booktitle>
<pages>113--115</pages>
<location>Philadelphia,</location>
<contexts>
<context position="11412" citStr="(11)" startWordPosition="1886" endWordPosition="1886">ng and the moving of the pointer from the antecedent, once detected, to the flag. Notice that this class of sentences entirely lies beyond the abilities of the classical ATI, framework. Relative pronouns also need to be bound to an antecedent and, besides, are the surface signal of an embedding. No special processing difficulty is proposed by sentences like (10) Il ragazzo che corre The boy who runs where the relative pronoun occurs exactly where the embedding begins. In this case a scope restriction can limit the search for an antecedent to the immediately preceeding NP. but in the sentences (11) Il ragazzo del quale ti .parlavo The boy about whom I was talking to you (12) Il ragazzo del cui padre ti parlavo The boy about whose father I was talking to you the relative clause boundery is set one word before the relative pronoun, and in (13) Il ragazzo del padre del quale The boy about the father of whom ti parlavo I was talking to you where the phenomenon known as pied-piping occurs, such a bounder)&apos; may be located several words before the relative pronoun. In an ATN these cases meet the initial set of arcs which recognize a PP embedded in an NP, as in (14) il ragazzo dell&apos;ascensore th</context>
</contexts>
<marker>(11)</marker>
<rawString>Ferrari C., Stock 0., Strategic selection for an ATU Syntactic Parser, in Proceedings of the 18th Annual meeting of i,CL, Philadelphia, June 19-22 1980, pp. 113-115.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Kaplan</author>
</authors>
<title>On process Node&apos;s for sentence Analysis,</title>
<date>1975</date>
<booktitle>Explorations in Cognition, Freeman, S.Francisco</booktitle>
<pages>117--135</pages>
<editor>in Norman 0. &amp; Rumelhart D. (eds.)</editor>
<contexts>
<context position="11660" citStr="(13)" startWordPosition="1934" endWordPosition="1934">besides, are the surface signal of an embedding. No special processing difficulty is proposed by sentences like (10) Il ragazzo che corre The boy who runs where the relative pronoun occurs exactly where the embedding begins. In this case a scope restriction can limit the search for an antecedent to the immediately preceeding NP. but in the sentences (11) Il ragazzo del quale ti .parlavo The boy about whom I was talking to you (12) Il ragazzo del cui padre ti parlavo The boy about whose father I was talking to you the relative clause boundery is set one word before the relative pronoun, and in (13) Il ragazzo del padre del quale The boy about the father of whom ti parlavo I was talking to you where the phenomenon known as pied-piping occurs, such a bounder)&apos; may be located several words before the relative pronoun. In an ATN these cases meet the initial set of arcs which recognize a PP embedded in an NP, as in (14) il ragazzo dell&apos;ascensore the boy of the lift and the correct interpretation is obtained only by backtracking (for 11 and 12) and again using a set of transit registers (for 12). No solution is known for sentence (13). In the framework we have been discussing an action which </context>
</contexts>
<marker>(13)</marker>
<rawString>Kaplan R., On process Node&apos;s for sentence Analysis, in Norman 0. &amp; Rumelhart D. (eds.) Explorations in Cognition, Freeman, S.Francisco 1975, pp. 117-135.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kay</author>
</authors>
<title>Functional Grammar,</title>
<date>1979</date>
<booktitle>in Proceedings of the 5th neeting of the Berkeley Linguistic Society,</booktitle>
<pages>142--158</pages>
<location>Berkeley</location>
<contexts>
<context position="11983" citStr="(14)" startWordPosition="1995" endWordPosition="1995">ing NP. but in the sentences (11) Il ragazzo del quale ti .parlavo The boy about whom I was talking to you (12) Il ragazzo del cui padre ti parlavo The boy about whose father I was talking to you the relative clause boundery is set one word before the relative pronoun, and in (13) Il ragazzo del padre del quale The boy about the father of whom ti parlavo I was talking to you where the phenomenon known as pied-piping occurs, such a bounder)&apos; may be located several words before the relative pronoun. In an ATN these cases meet the initial set of arcs which recognize a PP embedded in an NP, as in (14) il ragazzo dell&apos;ascensore the boy of the lift and the correct interpretation is obtained only by backtracking (for 11 and 12) and again using a set of transit registers (for 12). No solution is known for sentence (13). In the framework we have been discussing an action which structurally modifies the left context can be proposed. It should embed the component(s) being processed in a relative clause as the relative pronoun in met. 60 A third type of access to the left context is ii. functional grammar allows any depth of the relabelling of a processed component, already linguistic representati</context>
</contexts>
<marker>(14)</marker>
<rawString>Kay II., Functional Grammar, in Proceedings of the 5th neeting of the Berkeley Linguistic Society, Berkeley 1979, pp. 142-158.</rawString>
</citation>
<citation valid="true">
<title>narcus A Theory of Syntactic Recognition for Natural Language,</title>
<date>1930</date>
<publisher>NIT Press,</publisher>
<location>Cambridge</location>
<contexts>
<context position="14393" citStr="(15)" startWordPosition="2381" endWordPosition="2381">he left context in some cases in which backtracking can be intuitively charged on inadequacies of the parser rather than on points of real linguistic ambiguity. A second assumption more related to the current implementation of the system refers to the grammatical formalism. A functional representation a la [14] is used. A detailed explanation of this formalism is not necessary to the understanding of this paper. It is enough to know that its basic unit is the attribute—value pair, where an attribute is a symbol (label) and a value is a symbol or another functional description. In the sentence (15) He killed her a possible pair is SURJ=he, or SLIDJ=HEAD=he together with SUBJ=CAT=PHON etc. Any sequence of symbols is a path leading to a value; thus the value of SUUJ=JEAD is &apos;he&apos;. The functions that access the data structure are specifically designed to treat this type of representation but we think that they could be easily generalized. The term &apos;component will be used to identify the set of paths starting&apos; from the same label (radix). The reasons of this choice are as follows: i. addressing fragments of information is more easily done by follm4ing a path of labels than by visiting a unla</context>
</contexts>
<marker>(15)</marker>
<rawString>narcus A Theory of Syntactic Recognition for Natural Language, NIT Press, Cambridge 1:A, 1930.</rawString>
</citation>
<citation valid="true">
<authors>
<author>3 P Narcus</author>
</authors>
<title>Jindle 0., Fleck .1., 0-Theory: Talking about Talking about Trees,</title>
<date>1923</date>
<booktitle>in Proceedings of the 21st Annual :ieetirth of Cambridge 3A,</booktitle>
<pages>15--17</pages>
<contexts>
<context position="16701" citStr="(16)" startWordPosition="2776" endWordPosition="2776">a list in Backus notation of the functions which access the CM. 1.Actions a. &lt;storing actions&gt;::= ADD pair location 1 ASSIGN label path &lt;location&gt;::= NIL 1 &lt;fona&gt; &lt;label&gt;::= any label &lt;pair&gt;::= label value &lt;value&gt;::= * 1 &lt;form&gt; b. &lt;list manipulation&gt;::= rusu 1 POP I INSERT data item &lt;data&gt;::= any data &lt;item&gt;::= &lt;fona&gt; 2. Forms FIND path test level dtype I FINDVAL path test level dtype I LOCATE path test level dtype &lt;path&gt;::= &lt;label+&gt; &lt;test&gt;::= T I any test &lt;level&gt;::= T I CL &lt;dtype&gt;::= T I ND I L The basic storing action is ADD which is used to store any incoming piece of structure. The string (16) il cane the dog recognized by the network 61 (FINDVAL (SULJ) (AND (LO, (FINDVAL (131PiJ NU:0 T T ND) (FL:OVAL (NE:.0 NU:;)T CL (EQ (FINUVAL (SULJ GE1.) T T (FINDVAL (DEAD GE::) I CL is stored by the following actions 1. (ADD (DET *)) 2. (ADD MAD *)) If location is NIL, the current component is meant, otherwise the form LOCATE specifies the path leading to the radix to which the new pair is to be ADDed. Belabelline of a component is done by the action ASSICC. In the sentences (16a) Il cane mania the do e eats (16b) Il cane e mangiato the doe is eaten the hp &apos;il cane&apos; will he first labelled FOC</context>
</contexts>
<marker>(16)</marker>
<rawString>Narcus 3.P., Jindle 0., Fleck .1., 0-Theory: Talking about Talking about Trees, in Proceedings of the 21st Annual :ieetirth of Cambridge 3A, 15-17 June 1923, pp. 129-133.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C ontancro</author>
<author>G Pacini</author>
<author>F Turini</author>
</authors>
<date>1976</date>
<booktitle>00-LISP Reference ::,anual, NT C76-3, IFI CUR,</booktitle>
<location>Pisa,</location>
<contexts>
<context position="19864" citStr="(17)" startWordPosition="3334" endWordPosition="3334">in a subnet. Thus a component can be POPed after the end of its recognition procedure, when also its function is clarified. The arc recognizing an object, for ex., can be expressed as follows (START DP T (GOND (FIND (SUBJ) T CL T) (POP ODJ)) (TO qi)) which means that if there already is a subject, the current component must be popped with the label OBJ. The use of the INSERT function is primarily motivated by the treatment of certain relative clauses. Pelative pronouns are surface sienals that triaeer the wbeddine into a relative clauce of the currently processed component(s). In the sentence (17)I1 inn.) dolls trama del euale earlaveedo The booh about the plot of whicf we taleed such an eaheddine taleen after &apos;libro&apos;, thus eroducine (4) An &apos;anaeenric&apos; facility is also implemented not to repeat an embedded form with the saee areueent as the embeddin, one. (5) be do not intend to sueeest that the correct mechanism of trace/antecedent hindin, is the copyine of tre antecedent in the trace position. A slinhtly modified version of this function :1i5kt produce the insertion of the antecedent path, as in the orthodox functional erammar. The procedure, however, does not sunstantially chanee. 6</context>
</contexts>
<marker>(17)</marker>
<rawString>;:ontancro C., Pacini G., Turini F., &apos;00-LISP Reference ::,anual, NT C76-3, IFI CUR, Pisa, 1976.</rawString>
</citation>
<citation valid="false">
<authors>
<author>I Prodanof</author>
<author>G Ferrari</author>
</authors>
<title>Revising and ATU parser,</title>
<booktitle>in COLING22, Proceedings of the 9th</booktitle>
<marker>(18)</marker>
<rawString>Prodanof I., Ferrari G., Revising and ATU parser, in COLING22, Proceedings of the 9th</rawString>
</citation>
<citation valid="true">
<authors>
<author>U D Shipman</author>
<author>L Narcus</author>
</authors>
<title>Towards minimal data structure for deterministic parsing,</title>
<date>1979</date>
<booktitle>in Proceedings of the 6th International Joint Conference on Artificial Intelligence,</booktitle>
<pages>815--017</pages>
<location>Tokyo,</location>
<marker>(19)</marker>
<rawString>Shipman U.D., Narcus L., Towards minimal data structure for deterministic parsing, in Proceedings of the 6th International Joint Conference on Artificial Intelligence, Tokyo, August 20-23 1979, pp.815-017.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Stock</author>
</authors>
<title>ALISYS: un sistema per l&apos;analisi grammaticale automatica delle lingue naturali, NI B76-29, IEI cm,</title>
<date>1976</date>
<location>Pisa,</location>
<marker>(20)</marker>
<rawString>Stock O., ALISYS: un sistema per l&apos;analisi grammaticale automatica delle lingue naturali, NI B76-29, IEI cm, Pisa, 1976.</rawString>
</citation>
<citation valid="false">
<authors>
<author>E Wanner</author>
</authors>
<title>kiaratsos IN, An ATN approach to comprehension,</title>
<booktitle>Linguistic Theory and Psycholoi;ical reality, IT Press, Ca:.ubridge 1078,</booktitle>
<pages>119--161</pages>
<editor>in N. Lane, J.resnan, G. Niller (eds.)</editor>
<marker>(21)</marker>
<rawString>Wanner E., .kiaratsos IN, An ATN approach to comprehension, in N. Lane, J.resnan, G. Niller (eds.) Linguistic Theory and Psycholoi;ical reality, IT Press, Ca:.ubridge 1078, pp.119-161.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Winorad</author>
</authors>
<title>Lanuage as a Cognitive Process.</title>
<date></date>
<publisher>Syntax, Addison-&apos;Jesley,</publisher>
<location>IA,</location>
<marker>(22)</marker>
<rawString>Winorad T., Lanuage as a Cognitive Process. Syntax, Addison-&apos;Jesley, IA, 19b3.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Woods</author>
</authors>
<title>Transition iletwork Gralut,ars for Natural Lanuage Analysis,</title>
<date>1970</date>
<booktitle>in CAC::</booktitle>
<pages>13--10</pages>
<marker>(23)</marker>
<rawString>Woods N., Transition iletwork Gralut,ars for Natural Lanuage Analysis, in CAC:: 13-10, 1970, pp. 591-606.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>