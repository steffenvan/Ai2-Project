<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001448">
<title confidence="0.760683">
Book Reviews
</title>
<note confidence="0.4899254">
NETL: A System for Representing
and Using Real-World Knowledge
Scott E. Fahlman
The MIT Press, Cambridge, Mass., 1979,
285 pp., $17.50, ISBN 0-262-0609-8.
</note>
<bodyText confidence="0.98980240810811">
This is a &amp;quot;slightly edited version&amp;quot; of Fahlman&apos;s
1977 Ph.D. dissertation. Fahlman presents a knowl-
edge representation organized as &amp;quot;a pattern of inter-
connections of very simple parallel processing ele-
ments: node units which can store a dozen or so dis-
tinct marker-bits, and link units which can propagate
these markers from node to node, in parallel through
the network&amp;quot; [p. I]. Fahlman considers it to be impor-
tant that &amp;quot;using these marker-bit movements, the par-
allel network system can perform searches and many
common deductions very quickly: the time required is
essentially constant, regardless of the size of the
knowledge-base&amp;quot; [p. 1]. However, this timing result
depends on the existence of parallel network hard-
ware. An appendix unconvincingly presents a design
of such hardware, but the body of the book presents a
knowledge representation structure which can be con-
sidered on its own merits, independently of such tim-
ing considerations.
NETL is a paradigm example of what I have called
path-based reasoning [Shapiro, S.C. Path-based and
node-based inference in semantic networks. In D.
Waltz, ed., TINLAP-2, ACM, New York, 1978, 219-
225. Also in AJCL, Microfiche 80 (1978), 38-441,
but it is worth noting that what Fahlman calls &amp;quot;links&amp;quot;
would more properly, I feel, be called &amp;quot;nodes&amp;quot;, and his
true links are. what he calls &amp;quot;wires&amp;quot;. Fahlman says, &amp;quot;I
have spoken of the node and link units as separate
entities, and will continue to do so, but the difference
is largely one of emphasis ... every link has an associ-
ated handle-node that represents the statement that the
link implements ... The nodes, in turn, sometimes
need a few link-type wires for special-purpose connec-
tions to other nodes ... Since every true link has a
handle-node and every normal node has a few special
link-wires, it seems only natural to use the same piece
of hardware to represent them both. I call this piece
of hardware an element when I want to refer to it
without indicating whether it represents a node or a
link. An element has the marker-bit storage and the
single terminal of a node (the handle-node if it is rep-
resenting a link) and a set of connecting wires that it
uses in the manner of a link&amp;quot; [p. 35-36, italics in the
original].
The central organizing principle of NETL is a prop-
erty inheritance hierarchy using nodes representing
typical members of sets. For over ten years, I have
thought that the &amp;quot;typical-member&amp;quot; technique of repre-
senting information was very attractive, but that it
couldn&apos;t be made to work in general. Fahlman&apos;s is the
best attempt I have seen to use this technique, and he
discusses all the problems. Finally, however, he un-
covers problems which convince him that the tech-
nique is inadequate. Considering the attractiveness of
the idea, and Fahlman&apos;s valiant attempt to get it to
work, it is worthwhile to devote a substantial part of
this review to analyzing the technique, Fahlman&apos;s ap-
proach, and the problems he discusses, in the hope
that any future researchers tempted to try the tech-
nique will do so with a full knowledge of where the
problems lie.
The first problem, inadequately handled by many
researchers who discuss inheritance hierarchies, is that
sets and individuals (equivalently, the set membership
relation and the subset relation) must be distinguished.
As Fahlman points out, &amp;quot;The set of elephants has a
certain size, expressed as the number of elephants in
the world; the typical elephant has a certain size ex-
pressed in meters or kilograms&amp;quot; [p. 16]. Note, also,
that one set can be both an element of a second set
and a subset of a third set. Fahlman handles this
problem by having two types of nodes: *INDV-nodes
for individuals and *TYPE-nodes. A set is represented
by a *INDV-node with an associated *TYPE-node
representing the typical member of the set. An actual
member of the set is represented by a *INDV-node
with a *VC (for virtual-copy) link to the *TYPE-node.
Fahlman uses *VC rather than ISA, or the like, be-
cause he likes to think of the implicit information
about an individual as being virtual copies of the in-
formation stored about all *TYPE-nodes of those sets
the individual is a member of. To summarize, using
Fahlman&apos;s well known example, CLYDE is a *INDV-
node representing the elephant Clyde; CLYDE has a
*VC relation to TYPICAL-ELEPHANT, a *TYPE...
node representing the typical elephant; TYPICAL-
ELEPHANT is associated with (by having a set-wire
to) ELEPHANT-SET, a *INDV-node representing the
set of all elephants. The set of elephants may be
made an element of the set of sets by placing a *VC
link from ELEPHANT-SET to TYPICAL-SET, and
the set of elephants may be made a subset of the set
of mammals by placing a *VC link from TYPICAL-
ELEPHANT to TYPICAL-MAMMAL.
The next problem arises from the simplistic slogan
that nodes inherit properties from higher nodes in the
hierarchy. The problem is that if TYPICAL-
ELEPHANT has the relation R to node N, does
CLYDE inherit the relation R to N, or to some modi-
American Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 183
Book Reviews NETL: A System for Representing and Using Real-World Knowledge
fied copy of N? Consider &amp;quot;all elephants hate all aard-
varks.&amp;quot; This can be stored as the HATES relation
between TYPICAL-ELEPHANT and TYPICAL-
AARDVARK. If each elephant inherits the HATES
relation to TYPICAL-AARDVARK, it works correct-
ly, as does inheriting the RESPECTS relation to DAR-
WIN if we represent &amp;quot;all elephants respect Charles
Darwin&amp;quot; by a RESPECTS relation from TYPICAL-
ELEPHANT to DARWIN. However, we would not
want to handle &amp;quot;every elephant has a trunk&amp;quot; or &amp;quot;every
elephant has a mother&amp;quot; this way. This problem in-
volves both the representation and the way inheritance
is done. One would not want to give TYPICAL-
ELEPHANT either TYPICAL-TRUNK or a specific
individual trunk. Fahlman solves this problem by hav-
ing another kind of node, a role-node, which has an
EXISTENCE-link to a type-node. &amp;quot;A description,
then, consists of a base-node representing the thing
itself (TYPICAL-ELEPHANT is the base-node for its
description) and a set of role-nodes, connected to the
base-node by EXISTENCE-links and representing the
various things that every copy of the base-node has
one of. Most role-nodes specify individual entities,
but there are also set-roles (with attached type-nodes)
for representing such things as the typical elephant&apos;s
set of teeth and the typical member of this set&amp;quot;
[p. 26-27, italics in the original].
The typical-member technique may be thought to
allow a more economical representation than some
variant of predicate calculus. Note, however, that a
*TYPE-node is a universally quantified node ranging
over the set represented by its associated set-node,
and a role node is an existentially quantified node
whose EXISTENCE-link is a Skolem arc pointing to
the universally quantified node it depends on.
So now consider the role-node TYPICAL-
ELEPHANT&apos;S-LEG-SET, and its associated *TYPE.
node TYPICAL-ELEPHANT&apos;S-TYPICAL-LEG. If
we want to know something about Clyde&apos;s left front
leg that is inherited from TYPICAL-ELEPHANT and
TYPICAL-ELEPHANT&apos;S-TYPICAL-LEG, no addi-
tional structure need be built. Fahlman&apos;s virtual copy
technique allows us to view TYPICAL-ELEPHANT&apos;S-
TYPICAL-LEG virtually as Clyde&apos;s left front leg.
However, if exceptional information is to be stored
about Clyde&apos;s left front leg, a node is needed to repre-
sent it. There are now two choices: actually copy all
the non-exceptional information about TYPICAL-
ELEPHANT&apos;S-TYPICAL-LEG down to CLYDE&apos;S-
LEFT-FRONT-LEG, or let CLYDE&apos;S-LEFT-FRONT-
LEG continue to inherit non-exceptional information.
Fahlman goes with the latter approach, which is more
economical -- information needn&apos;t be copied -- and
allows new non-exceptional information to be stored
and inherited with no extra work. The problem now is
what is the relation between CLYDE&apos;S-LEFT-
FRONT-LEG and TYPICAL-ELEPHANT&apos;S-
TYPICAL-LEG? It cannot be *VC, because that
would make CLYDE&apos;S-LEFT-FRONT-LEG one of
the legs of the typical elephant, not one of Clyde&apos;s
legs. In fact, if general information is to be stored
about elephants&apos; left front legs, we need TYPICAL-
ELEPHANT&apos;S-LEFT-FRONT-LEG, an *INDV role-
node with *VC to TYPICAL-ELEPHANT&apos;S-
TYPICAL-LEG, and we cannot confuse this with
Clyde&apos;s left front leg. Fahlman&apos;s solution is to make
CLYDE&apos;S-LEFT-FRONT-LEG another kind of node,
a *MAP-node, with a map-wire to TYPICAL-
ELEPHANT&apos;S-LEFT-FRONT-LEG. Meanwhile,
CLYDE&apos;S-TYPICAL-LEG is a *TMAP-node with
map-wire to TYPICAL-ELEPHANT&apos;S-TYPICAL-
LEG. All *MAP and *TMAP nodes also have an
owner-wire to the individual which owns them, parallel-
ing the EXISTENCE-link of their parents. Because of
Fahlman&apos;s marking inheritance scheme, it is not neces-
sary to connect CLYDE&apos;S-LEFT-FRONT-LEG to
CLYDE&apos;S-TYPICAL-LEG as well. I leave it to the
reader to examine the following alternative proposal.
Give CLYDE&apos;S-LEFT-FRONT-LEG a *VC link to
TYPICAL-ELEPHANT&apos;S-LEFT-FRONT-LEG. This
requires TYPICAL-ELEPHANT&apos;S-LEFT-FRONT-
LEG to be a *TYPE-node, which is not the case in
NETL. The associated set-node would then be
ELEPHANT&apos;S-LEFT-FRONT-LEG-SET, a node rep-
resenting the set of all left front legs of elephants, and
quite distinct from the set of left front legs of the typi-
cal elephant, for which a node would not exist since it
is a singleton set. ELEPHANT&apos;S-LEFT-FRONT-
LEG-SET is not a subset of TYPICAL-
ELEPHANT&apos;S-LEG-SET, because the latter repre-
sents the set of legs of the typical elephant, whereas
the former represents the set of left front legs of all
elephants. They both must be subsets of the set of
legs of all elephants, represented by ELEPHANT-
LEG-SET, a set-node with associated type-node
TYPICAL-ELEPHANT-LEG. Certainly, one role-
node of the description based on TYPICAL-
ELEPHANT-LEG is TYPICAL-ELEPHANT-LEG&apos;S-
ELEPHANT. It would be nice if this were just our
old friend TYPICAL-ELEPHANT but this does not
seem to be the case since TYPICAL-ELEPHANT is a
base-node and TYPICAL-ELEPHANT-LEG&apos;S-
ELEPHANT is a role-node. From a predicate calculus
point of view, what we have done is construct formu-
las for &amp;quot;For every elephant there is a leg ...&amp;quot; and &amp;quot;For
every elephant leg there is an elephant ...&amp;quot;
If one of the advantages of the typical-member
technique seems to be the ability to collapse *VC
chains, and thus see an individual as a virtual copy of
its hierarchical ancestors, consider what Fahlman calls
the &amp;quot;copy-confusion&amp;quot; problem. This problem appears
in several guises. In one, we try to find the weight of
184 American Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980
Book Reviews NETL: A System for Representing and Using Real-World Knowledge
Clyde&apos;s trunk. CLYDE and CLYDE&apos;S-TRUNK are
both *VCs of TYPICAL-PHYSICAL-OBJECT, which
has a weight as one of its role-nodes. In the process
of collapsing *VC chains we lose the distinction be-
tween Clyde&apos;s trunk&apos;s weight and Clyde&apos;s weight. In
another version of the problem, the typical family has
both a father and a child. Since Clyde is the father in
one family and a child in another, copy-confusion
causes Clyde to be seen as his own father. Fahlman
considers four solutions to this problem. For the first
solution &amp;quot;I am not yet sure whether it is impossible to
do this, or just very difficult. A second possibility is
to abandon the virtual-copy semantics ... I feel that
this approach should be taken only as a last resort ...
A third approach ... seems a needlessly complex and
economically unattractive solution ... the fourth solu-
tion is the one that seems to me the most promising,
and is the one that I am using in the current version of
NETL ... A few possible relevant nodes will be missed
by this approach ... The parallel portions of the system
are not complete, in the logician&apos;s sense, but they were
never intended to be; we wanted to be able to do the
most important deductions very fast, and I believe that
NETL still does that&amp;quot; [p. 148-53]. Even the fourth
solution seems to compromise on some features earlier
considered beneficial, and even on the virtual-copy
idea itself, &amp;quot;In some cases, it is useful to create
pseudo-individuals to fill roles in the middle of long
role-chains; this tends to break up the chains into
more manageable sections&amp;quot; [p. 152].
Fahlman feels that &amp;quot;The copy-confusion problem,
in its various guises, is principally a problem of prop-
erly implementing an essentially correct semantic nota-
tion in a parallel manner; the binding-ambiguity prob-
lem, on the other hand, results from a shortcoming of
the semantic notation itself&amp;quot; [p. 153]. This problem
arises when, in a predicate calculus approach there
would be a statement with two or more universally
quantified variables ranging over the same set. Con-
sider the HATES relation between TYPICAL-
ELEPHANT and TYPICAL-ELEPHANT. Does this
mean that every elephant hates himself, or that every
elephant hates every elephant including himself? What
about &amp;quot;every elephant hates every elephant other than
himself&amp;quot;? Fahlman decides by fiat (there is no other
way) that it means the first. To get the third, he in-
troduces *OTHER-nodes. Every *OTHER-node has a
type-wire to a *TYPE-node and represents every other
element of the associated set. &amp;quot;Every elephant hates
himself&amp;quot; is represented by TYPICAL-ELEPHANT
HATES TYPICAL-ELEPHANT. &amp;quot;Every elephant
hates every other elephant&amp;quot; is represented by
TYPICAL-ELEPHANT HATES OTHER-TYPICAL-
ELEPHANT. The second, &amp;quot;every elephant hates ev-
ery elephant including himself,&amp;quot; is represented by the
conjunction of the two. If more than two are needed,
&amp;quot;We might, for instance, want to say that for any three
distinct elephants, X, Y, and Z, the combination of X
and Y can defeat Z at tug-of-war&amp;quot; [p. 158, italics in
original], there is a chain of *OTHER-nodes, each one
representing every member of the set except for any
earlier one. &amp;quot;The scans responsible for all of this can
become extremely complex as they try to consider all
possible bindings, but that seems reasonable: beyond
two or maybe three variables, people -- especially
children -- have trouble as well. The notation, at
least, seems clear and unambiguous, even if the associ-
ated processes are difficult to construct and use&amp;quot;
[p. 158]. From my point of view, it seems as though
the typical-member technique was pushed so far that it
simply broke down. It is thought to be elegant and
economical, but it needs patch upon patch. Perhaps
the alternatives are indeed better.
Fahlman, himself, goes on to introduce another
representational technique, the defined class. Consider
asserting &amp;quot;Every purple mushroom is poisonous.&amp;quot; Us-
ing a predicate calculus-like representation, there
would be no problem, but Fahlman, of course, wants a
more object oriented representation. One could create
a new subset of the set of mushrooms, and have its
typical member purple and poisonous. However, this
does not distinguish this set from the representation of
&amp;quot;every poisonous mushroom is purple&amp;quot; or even from
&amp;quot;a set of purple, poisonous mushrooms.&amp;quot; The defined
set uses a new node type, the *EVERY-node, a special
kind of *TYPE node A *EVERY node has two kinds
of information stored about it, a specification and some
incidental information. Clauses in the specification are
tied to their *EVERY-node by a spec-wire. There can
also be *INDV-nodes in the specification tied to the
*EVERY-node by a spec-wire. These nodes &amp;quot;serve as
additional variables to use during the matching proc-
ess&amp;quot; [p. 161] when a new individual node is being
tested to determine if it is in the defined class. We
can recognize this kind of spec-wire as another Skolem
arc, and analyze Fahlman&apos;s defined class as a repre-
sentation of the statement schema (Ax){(Ey)S(x,y) -&gt;
I(x)}, where S(x,y) is the specification, I(x) is the
incidental information, x is the *EVERY-node, and y
is a *INDV-node tied to x by a spec-wire. The rela-
tion of this object oriented representation to proposi-
tion oriented representations can now be seen by con-
sidering statements (deduction rules, production rules)
of the form (Ax)IS(x) -&gt; I(x)}. A proposition orient-
ed representation would use a node to represent the
statement, with arc types to differentiate the
antecedent(s) from the consequent(s), and to indicate
the universally quantified variable. An object oriented
representation such as Fahlman&apos;s has no node repre-
senting the statement as a whole, has a specially typed
node representing the universally quantified variable,
an arc type between the variable and the
American Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 185
Book Reviews Understanding Spoken Language
antecedent(s), and no special arc between the variable
and the consequent(s). Both representations have
nodes representing the propositions of the
antecedent(s) and the consequent(s). Looked at in
this way, Fahlman&apos;s restriction that &amp;quot;No clause may be
part of the specification of more than one *EVERY..
node&amp;quot; [p. 161] can be seen as eliminating the possibil-
ity of representing statements of the form (Ax)(Ay)
{S(x,y) -&gt; I(x,y)].
Before concluding, I must make one comment on a
passage which I fear illustrates a common attitude
among Al researchers. Fahlman points out that, &amp;quot;If
an object is said to exist within an area, that means
that it exists somewhere within the area; if a statement
is said to be valid within an area, it means that it is
valid everywhere within the area&amp;quot; [p. 114, italics in the
original]. He then comments that &amp;quot;This difference in
the behavior of existence and statement-scoping came
as something of a surprise to me -- I am told that the
logicians have known something of this sort all along,
but they tend not to express it in these terms. This
difference caused a lot of trouble until I understood
what was happening&amp;quot; [p. 1151. The first point is that
this is a _nice statement of the reason Al researchers
should study logic. Perhaps, if he had, Fahlman would
have been saved a lot of trouble. The other point is
that if a researcher discovers that he has rediscovered
a distinction or issue already discussed by others in
different terms, he should rewrite his own discussion
in the existing terms, giving the appropriate credit and
providing the connections to his readers, not dismiss
the older work in a couple of sentences and contribute
to the proliferation of jargon. The issue is no less
than the respectability of Al.
What makes these complaints more serious is that
this book represents a good piece of work, already
having an impact on the &amp;quot;knowledge representation&amp;quot;
community. It is certainly must reading for anyone
also involved in the inheritance hierarchy brand of
representation.
Stuart C. Shapiro, SUNY-Buffalo
</bodyText>
<subsectionHeader confidence="0.6294195">
Understanding Spoken Language
Donald E. Walker, Editor
</subsectionHeader>
<bodyText confidence="0.982009387096774">
Elsevier North-Holland, New York, 1978,
420 pp., Paperback, $9.95, ISBN 0-444-00287-1.
In 1970 the Advanced Research Projects Agency
decided to fund six research projects aimed at devel-
oping systems that were capable of understanding
connected speech. From 1971 to 1975, this research
was carried out. This book is a collection of articles
(most of which have been published separately) which
grew out of the final report of the speech understand-
ing group at SRI International. Despite its title, its
stated purpose is to describe SRI&apos;s speech understand-
ing system rather than speech understanding in gener-
al, and it contains much material pertinent to under-
standing written language as well as speech.
Although the introductory and concluding material
attempts to unify the book, it remains a collection of
very separate articles rather than a unified whole. As
a consequence it suffers from the common problems of
books of this type: inadequate cross referencing, poor
transitions between chapters, and no index. The ab-
sence of an index is a serious problem that is com-
pounded by the fact that the table of contents contains
only three levels of structure; more detailed outlines of
the contents are found at the beginning of each chap-
ter. Fortunately the references have been merged into
a single list. The reference list is very good, in part
because it is not too long to scan easily.
The signal processing part of speech understanding
is given the barest mention because SRI did not do
work in that area; the book concentrates on the higher
level aspects of the understanding process.
The first chapter is a nicely written introduction
and overview by Donald Walker. It describes the
organization of the ARPA speech understanding effort
and outlines the SRI system. The second chapter, by
William Paxton, quickly plunges the reader into a rath-
er detailed description of the language definition sys-
tem which was used to define the language that the
system would understand. These definitions were then
compiled into a form that the executive system, which
controlled the other components of the system, would
understand. The language definition consisted of a
lexicon (words and &amp;quot;multiwords&amp;quot; with grammatical
categories, grammatical features, and associated se-
mantic information) and composition rules (phrase
structure rules augmented by procedures to be execut-
ed whenever the rule constructs a phrase). The proce-
dures gave values to attributes of the phrase as a func-
tion of the attributes of its constituents and judged the
acceptability of the phrase on a number of grounds
such as acoustic properties, syntactic properties (such
as mood and number), semantic properties (using the
semantic network representation discussed further on),
and discourse information to handle anaphora and
ellipsis. Much of the complexity of the language defi-
nition derives from the fact that it must screen out bad
input rather than just recognize good input as many
grammars do.
In discussing the executive system itself, much
space is devoted to historical background, comparisons
with other speech understanding systems, and the ex-
perimentation (using analysis of variance) that was
</bodyText>
<page confidence="0.851756">
186 American Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.018134">
<title confidence="0.990099333333333">Book Reviews System for Representing and Using Real-World Knowledge</title>
<author confidence="0.999944">Scott E Fahlman</author>
<note confidence="0.666900666666667">The MIT Press, Cambridge, Mass., 1979, 285 pp., $17.50, ISBN 0-262-0609-8. This is a &amp;quot;slightly edited version&amp;quot; of Fahlman&apos;s</note>
<abstract confidence="0.99009697826087">1977 Ph.D. dissertation. Fahlman presents a knowledge representation organized as &amp;quot;a pattern of interconnections of very simple parallel processing elements: node units which can store a dozen or so distinct marker-bits, and link units which can propagate these markers from node to node, in parallel through the network&amp;quot; [p. I]. Fahlman considers it to be important that &amp;quot;using these marker-bit movements, the parallel network system can perform searches and many common deductions very quickly: the time required is essentially constant, regardless of the size of the knowledge-base&amp;quot; [p. 1]. However, this timing result depends on the existence of parallel network hardware. An appendix unconvincingly presents a design of such hardware, but the body of the book presents a knowledge representation structure which can be considered on its own merits, independently of such timing considerations. NETL is a paradigm example of what I have called path-based reasoning [Shapiro, S.C. Path-based and node-based inference in semantic networks. In D. ed., New York, 1978, 219- Also in 80 (1978), 38-441, but it is worth noting that what Fahlman calls &amp;quot;links&amp;quot; would more properly, I feel, be called &amp;quot;nodes&amp;quot;, and his true links are. what he calls &amp;quot;wires&amp;quot;. Fahlman says, &amp;quot;I have spoken of the node and link units as separate entities, and will continue to do so, but the difference is largely one of emphasis ... every link has an associrepresents the statement that the link implements ... The nodes, in turn, sometimes need a few link-type wires for special-purpose connections to other nodes ... Since every true link has a handle-node and every normal node has a few special link-wires, it seems only natural to use the same piece of hardware to represent them both. I call this piece hardware an I want to refer to it without indicating whether it represents a node or a link. An element has the marker-bit storage and the single terminal of a node (the handle-node if it is representing a link) and a set of connecting wires that it uses in the manner of a link&amp;quot; [p. 35-36, italics in the original]. The central organizing principle of NETL is a property inheritance hierarchy using nodes representing typical members of sets. For over ten years, I have thought that the &amp;quot;typical-member&amp;quot; technique of representing information was very attractive, but that it couldn&apos;t be made to work in general. Fahlman&apos;s is the best attempt I have seen to use this technique, and he discusses all the problems. Finally, however, he uncovers problems which convince him that the technique is inadequate. Considering the attractiveness of the idea, and Fahlman&apos;s valiant attempt to get it to work, it is worthwhile to devote a substantial part of this review to analyzing the technique, Fahlman&apos;s approach, and the problems he discusses, in the hope that any future researchers tempted to try the technique will do so with a full knowledge of where the problems lie. The first problem, inadequately handled by many researchers who discuss inheritance hierarchies, is that sets and individuals (equivalently, the set membership relation and the subset relation) must be distinguished. As Fahlman points out, &amp;quot;The set of elephants has a certain size, expressed as the number of elephants in the world; the typical elephant has a certain size expressed in meters or kilograms&amp;quot; [p. 16]. Note, also, that one set can be both an element of a second set and a subset of a third set. Fahlman handles this by having two types of nodes: individuals and set is represented by a *INDV-node with an associated *TYPE-node representing the typical member of the set. An actual member of the set is represented by a *INDV-node a *VC (for to the *TYPE-node. Fahlman uses *VC rather than ISA, or the like, because he likes to think of the implicit information about an individual as being virtual copies of the information stored about all *TYPE-nodes of those sets the individual is a member of. To summarize, using Fahlman&apos;s well known example, CLYDE is a *INDVnode representing the elephant Clyde; CLYDE has a *VC relation to TYPICAL-ELEPHANT, a *TYPE... node representing the typical elephant; TYPICAL- ELEPHANT is associated with (by having a set-wire to) ELEPHANT-SET, a *INDV-node representing the set of all elephants. The set of elephants may be made an element of the set of sets by placing a *VC link from ELEPHANT-SET to TYPICAL-SET, and the set of elephants may be made a subset of the set of mammals by placing a *VC link from TYPICAL- ELEPHANT to TYPICAL-MAMMAL. The next problem arises from the simplistic slogan that nodes inherit properties from higher nodes in the The problem is that if ELEPHANT has the relation R to node N, does inherit the relation R to N, or to some modi- Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 Book Reviews NETL: A System for Representing and Using Real-World Knowledge fied copy of N? Consider &amp;quot;all elephants hate all aardvarks.&amp;quot; This can be stored as the HATES relation between TYPICAL-ELEPHANT and TYPICAL- AARDVARK. If each elephant inherits the HATES relation to TYPICAL-AARDVARK, it works correctly, as does inheriting the RESPECTS relation to DAR- WIN if we represent &amp;quot;all elephants respect Charles Darwin&amp;quot; by a RESPECTS relation from TYPICAL- ELEPHANT to DARWIN. However, we would not want to handle &amp;quot;every elephant has a trunk&amp;quot; or &amp;quot;every elephant has a mother&amp;quot; this way. This problem involves both the representation and the way inheritance is done. One would not want to give TYPICAL- ELEPHANT either TYPICAL-TRUNK or a specific individual trunk. Fahlman solves this problem by havanother kind of node, a has an a type-node. &amp;quot;A description, consists of a the thing itself (TYPICAL-ELEPHANT is the base-node for its and a set of to the base-node by EXISTENCE-links and representing the various things that every copy of the base-node has one of. Most role-nodes specify individual entities, there are also attached type-nodes) for representing such things as the typical elephant&apos;s set of teeth and the typical member of this set&amp;quot; [p. 26-27, italics in the original]. The typical-member technique may be thought to allow a more economical representation than some variant of predicate calculus. Note, however, that a *TYPE-node is a universally quantified node ranging over the set represented by its associated set-node, and a role node is an existentially quantified node whose EXISTENCE-link is a Skolem arc pointing to the universally quantified node it depends on. So now consider the role-node TYPICAL- ELEPHANT&apos;S-LEG-SET, and its associated *TYPE. node TYPICAL-ELEPHANT&apos;S-TYPICAL-LEG. If we want to know something about Clyde&apos;s left front leg that is inherited from TYPICAL-ELEPHANT and TYPICAL-ELEPHANT&apos;S-TYPICAL-LEG, no additional structure need be built. Fahlman&apos;s virtual copy technique allows us to view TYPICAL-ELEPHANT&apos;S- TYPICAL-LEG virtually as Clyde&apos;s left front leg. However, if exceptional information is to be stored about Clyde&apos;s left front leg, a node is needed to represent it. There are now two choices: actually copy all the non-exceptional information about TYPICAL- ELEPHANT&apos;S-TYPICAL-LEG down to CLYDE&apos;S- LEFT-FRONT-LEG, or let CLYDE&apos;S-LEFT-FRONT- LEG continue to inherit non-exceptional information. Fahlman goes with the latter approach, which is more economical -information needn&apos;t be copied -and allows new non-exceptional information to be stored and inherited with no extra work. The problem now is is the relation between CLYDE&apos;S-LEFT- FRONT-LEG and TYPICAL-ELEPHANT&apos;S- TYPICAL-LEG? It cannot be *VC, because that would make CLYDE&apos;S-LEFT-FRONT-LEG one of the legs of the typical elephant, not one of Clyde&apos;s legs. In fact, if general information is to be stored about elephants&apos; left front legs, we need TYPICAL- ELEPHANT&apos;S-LEFT-FRONT-LEG, an *INDV rolenode with *VC to TYPICAL-ELEPHANT&apos;S- TYPICAL-LEG, and we cannot confuse this with Clyde&apos;s left front leg. Fahlman&apos;s solution is to make CLYDE&apos;S-LEFT-FRONT-LEG another kind of node, a TYPICAL- ELEPHANT&apos;S-LEFT-FRONT-LEG. is a map-wire to TYPICAL-ELEPHANT&apos;S-TYPICAL- LEG. All *MAP and *TMAP nodes also have an the individual which owns them, paralleling the EXISTENCE-link of their parents. Because of Fahlman&apos;s marking inheritance scheme, it is not necessary to connect CLYDE&apos;S-LEFT-FRONT-LEG to CLYDE&apos;S-TYPICAL-LEG as well. I leave it to the reader to examine the following alternative proposal. Give CLYDE&apos;S-LEFT-FRONT-LEG a *VC link to TYPICAL-ELEPHANT&apos;S-LEFT-FRONT-LEG. This requires TYPICAL-ELEPHANT&apos;S-LEFT-FRONT- LEG to be a *TYPE-node, which is not the case in NETL. The associated set-node would then be ELEPHANT&apos;S-LEFT-FRONT-LEG-SET, a node representing the set of all left front legs of elephants, and quite distinct from the set of left front legs of the typical elephant, for which a node would not exist since it is a singleton set. ELEPHANT&apos;S-LEFT-FRONT- LEG-SET is not a subset of TYPICAL- ELEPHANT&apos;S-LEG-SET, because the latter represents the set of legs of the typical elephant, whereas the former represents the set of left front legs of all elephants. They both must be subsets of the set of legs of all elephants, represented by ELEPHANT- LEG-SET, a set-node with associated type-node TYPICAL-ELEPHANT-LEG. Certainly, one rolenode of the description based on TYPICAL- ELEPHANT-LEG is TYPICAL-ELEPHANT-LEG&apos;S- ELEPHANT. It would be nice if this were just our old friend TYPICAL-ELEPHANT but this does not seem to be the case since TYPICAL-ELEPHANT is a base-node and TYPICAL-ELEPHANT-LEG&apos;S- ELEPHANT is a role-node. From a predicate calculus point of view, what we have done is construct formulas for &amp;quot;For every elephant there is a leg ...&amp;quot; and &amp;quot;For every elephant leg there is an elephant ...&amp;quot; If one of the advantages of the typical-member technique seems to be the ability to collapse *VC chains, and thus see an individual as a virtual copy of its hierarchical ancestors, consider what Fahlman calls the &amp;quot;copy-confusion&amp;quot; problem. This problem appears in several guises. In one, we try to find the weight of Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 Book Reviews NETL: A System for Representing and Using Real-World Knowledge Clyde&apos;s trunk. CLYDE and CLYDE&apos;S-TRUNK are both *VCs of TYPICAL-PHYSICAL-OBJECT, which has a weight as one of its role-nodes. In the process of collapsing *VC chains we lose the distinction between Clyde&apos;s trunk&apos;s weight and Clyde&apos;s weight. In another version of the problem, the typical family has both a father and a child. Since Clyde is the father in one family and a child in another, copy-confusion causes Clyde to be seen as his own father. Fahlman considers four solutions to this problem. For the first solution &amp;quot;I am not yet sure whether it is impossible to do this, or just very difficult. A second possibility is to abandon the virtual-copy semantics ... I feel that this approach should be taken only as a last resort ... A third approach ... seems a needlessly complex and economically unattractive solution ... the fourth solution is the one that seems to me the most promising, and is the one that I am using in the current version of NETL ... A few possible relevant nodes will be missed by this approach ... The parallel portions of the system are not complete, in the logician&apos;s sense, but they were never intended to be; we wanted to be able to do the most important deductions very fast, and I believe that NETL still does that&amp;quot; [p. 148-53]. Even the fourth solution seems to compromise on some features earlier considered beneficial, and even on the virtual-copy idea itself, &amp;quot;In some cases, it is useful to create pseudo-individuals to fill roles in the middle of long role-chains; this tends to break up the chains into more manageable sections&amp;quot; [p. 152]. Fahlman feels that &amp;quot;The copy-confusion problem, in its various guises, is principally a problem of properly implementing an essentially correct semantic notation in a parallel manner; the binding-ambiguity problem, on the other hand, results from a shortcoming of the semantic notation itself&amp;quot; [p. 153]. This problem arises when, in a predicate calculus approach there would be a statement with two or more universally quantified variables ranging over the same set. Consider the HATES relation between TYPICAL- ELEPHANT and TYPICAL-ELEPHANT. Does this mean that every elephant hates himself, or that every elephant hates every elephant including himself? What about &amp;quot;every elephant hates every elephant other than himself&amp;quot;? Fahlman decides by fiat (there is no other way) that it means the first. To get the third, he in- *OTHER-node has a a *TYPE-node and represents every other element of the associated set. &amp;quot;Every elephant hates himself&amp;quot; is represented by TYPICAL-ELEPHANT HATES TYPICAL-ELEPHANT. &amp;quot;Every elephant hates every other elephant&amp;quot; is represented by TYPICAL-ELEPHANT HATES OTHER-TYPICAL- ELEPHANT. The second, &amp;quot;every elephant hates every elephant including himself,&amp;quot; is represented by the conjunction of the two. If more than two are needed, might, for instance, want to say that for any distinct elephants, X, Y, and Z, the combination of X and Y can defeat Z at tug-of-war&amp;quot; [p. 158, italics in original], there is a chain of *OTHER-nodes, each one representing every member of the set except for any earlier one. &amp;quot;The scans responsible for all of this can become extremely complex as they try to consider all possible bindings, but that seems reasonable: beyond two or maybe three variables, people -especially children -have trouble as well. The notation, at least, seems clear and unambiguous, even if the associated processes are difficult to construct and use&amp;quot; [p. 158]. From my point of view, it seems as though the typical-member technique was pushed so far that it simply broke down. It is thought to be elegant and economical, but it needs patch upon patch. Perhaps the alternatives are indeed better. Fahlman, himself, goes on to introduce another technique, the class. asserting &amp;quot;Every purple mushroom is poisonous.&amp;quot; Using a predicate calculus-like representation, there would be no problem, but Fahlman, of course, wants a more object oriented representation. One could create a new subset of the set of mushrooms, and have its typical member purple and poisonous. However, this does not distinguish this set from the representation of &amp;quot;every poisonous mushroom is purple&amp;quot; or even from &amp;quot;a set of purple, poisonous mushrooms.&amp;quot; The defined uses a new node type, the special of *TYPEnode A *EVERYnode has two kinds information stored about it, a some information. in the specification are to their *EVERY-node by a can also be *INDV-nodes in the specification tied to the *EVERY-node by a spec-wire. These nodes &amp;quot;serve as additional variables to use during the matching process&amp;quot; [p. 161] when a new individual node is being tested to determine if it is in the defined class. We can recognize this kind of spec-wire as another Skolem arc, and analyze Fahlman&apos;s defined class as a representation of the statement schema (Ax){(Ey)S(x,y) -&gt; I(x)}, where S(x,y) is the specification, I(x) is the incidental information, x is the *EVERY-node, and y is a *INDV-node tied to x by a spec-wire. The relation of this object oriented representation to proposition oriented representations can now be seen by considering statements (deduction rules, production rules) of the form (Ax)IS(x) -&gt; I(x)}. A proposition oriented representation would use a node to represent the statement, with arc types to differentiate the antecedent(s) from the consequent(s), and to indicate the universally quantified variable. An object oriented representation such as Fahlman&apos;s has no node representing the statement as a whole, has a specially typed node representing the universally quantified variable, an arc type between the variable and the Journal of Computational Linguistics, Volume 6, Number 3-4, July-December 1980 Book Reviews Understanding Spoken Language antecedent(s), and no special arc between the variable and the consequent(s). Both representations have nodes representing the propositions of the antecedent(s) and the consequent(s). Looked at in this way, Fahlman&apos;s restriction that &amp;quot;No clause may be part of the specification of more than one *EVERY.. node&amp;quot; [p. 161] can be seen as eliminating the possibility of representing statements of the form (Ax)(Ay) {S(x,y) -&gt; I(x,y)]. Before concluding, I must make one comment on a passage which I fear illustrates a common attitude among Al researchers. Fahlman points out that, &amp;quot;If object is said to an area, that means it exists the area; if a statement said to be an area, it means that it is the area&amp;quot; [p. 114, italics in the original]. He then comments that &amp;quot;This difference in the behavior of existence and statement-scoping came as something of a surprise to me -- I am told that the logicians have known something of this sort all along, but they tend not to express it in these terms. This difference caused a lot of trouble until I understood what was happening&amp;quot; [p. 1151. The first point is that this is a _nice statement of the reason Al researchers should study logic. Perhaps, if he had, Fahlman would have been saved a lot of trouble. The other point is that if a researcher discovers that he has rediscovered a distinction or issue already discussed by others in different terms, he should rewrite his own discussion in the existing terms, giving the appropriate credit and providing the connections to his readers, not dismiss the older work in a couple of sentences and contribute to the proliferation of jargon. The issue is no less than the respectability of Al. What makes these complaints more serious is that this book represents a good piece of work, already having an impact on the &amp;quot;knowledge representation&amp;quot; It is certainly for anyone also involved in the inheritance hierarchy brand of representation.</abstract>
<author confidence="0.75078">C Shapiro</author>
<title confidence="0.608427">Understanding Spoken Language</title>
<author confidence="0.804383">Donald E Walker</author>
<author confidence="0.804383">Editor</author>
<note confidence="0.6781555">Elsevier North-Holland, New York, 1978, 420 pp., Paperback, $9.95, ISBN 0-444-00287-1. In 1970 the Advanced Research Projects Agency decided to fund six research projects aimed at devel-</note>
<abstract confidence="0.999299407407407">oping systems that were capable of understanding connected speech. From 1971 to 1975, this research was carried out. This book is a collection of articles (most of which have been published separately) which grew out of the final report of the speech understanding group at SRI International. Despite its title, its stated purpose is to describe SRI&apos;s speech understanding system rather than speech understanding in general, and it contains much material pertinent to understanding written language as well as speech. Although the introductory and concluding material attempts to unify the book, it remains a collection of very separate articles rather than a unified whole. As a consequence it suffers from the common problems of books of this type: inadequate cross referencing, poor transitions between chapters, and no index. The absence of an index is a serious problem that is compounded by the fact that the table of contents contains only three levels of structure; more detailed outlines of the contents are found at the beginning of each chapter. Fortunately the references have been merged into a single list. The reference list is very good, in part because it is not too long to scan easily. The signal processing part of speech understanding is given the barest mention because SRI did not do work in that area; the book concentrates on the higher level aspects of the understanding process.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>