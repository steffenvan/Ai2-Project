<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.017445">
<title confidence="0.989515">
SenseClusters: Unsupervised Clustering and Labeling of Similar Contexts
</title>
<author confidence="0.992995">
Anagha Kulkarni and Ted Pedersen
</author>
<affiliation confidence="0.9987895">
Department of Computer Science
University of Minnesota
</affiliation>
<address confidence="0.789256">
Duluth, MN 55812
</address>
<email confidence="0.9337075">
{kulka020,tpederse}@d.umn.edu
http://senseclusters.sourceforge.net
</email>
<sectionHeader confidence="0.992502" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999560083333333">
SenseClusters is a freely available system
that identifies similar contexts in text. It
relies on lexical features to build first and
second order representations of contexts,
which are then clustered using unsuper-
vised methods. It was originally devel-
oped to discriminate among contexts cen-
tered around a given target word, but can
now be applied more generally. It also
supports methods that create descriptive
and discriminating labels for the discov-
ered clusters.
</bodyText>
<sectionHeader confidence="0.998994" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999920925">
SenseClusters seeks to group together units of text
(referred to as contexts) that are similar to each other
using lexical features and unsupervised clustering.
Our initial work (Purandare and Pedersen, 2004)
focused on word sense discrimination, which takes
as input contexts that each contain a given target
word, and produces as output clusters that are pre-
sumed to correspond to the different senses of the
word. This follows the hypothesis of (Miller and
Charles, 1991) that words that occur in similar con-
texts will have similar meanings.
We have shown that these methods can be ex-
tended to proper name discrimination (Pedersen et
al., 2005). People, places, or companies often share
the same name, and this can cause a considerable
amount of confusion when carrying out Web search
or other information retrieval applications. Name
discrimination seeks to group together the contexts
that refer to a unique underlying individual, and al-
low the user to recognize that the same name is being
used to refer to multiple entities.
We have also extended SenseClusters to clus-
ter contexts that are not centered around any tar-
get word, which we refer to as headless clustering.
Automatic email categorization is an example of a
headless clustering task, since each message can be
considered a context. SenseClusters will group to-
gether messages if they are similar in content, with-
out requiring that they share any particular target
word between them.
We are also addressing a well known limitation to
unsupervised clustering approaches. After cluster-
ing contexts, it is often difficult to determine what
underlying concepts or entities each cluster repre-
sents without manually inspecting their contents.
Therefore, we are developing methods that automat-
ically assign descriptive and discriminating labels to
each discovered cluster that provide a characteriza-
tion of the contents of the clusters that a human can
easily understand.
</bodyText>
<sectionHeader confidence="0.904134" genericHeader="method">
2 Clustering Methodology
</sectionHeader>
<bodyText confidence="0.954455444444445">
We begin with the collection of contexts to be clus-
tered, referred to as the test data. These may all in-
clude a given target word, or they may be headless
contexts. We can select the lexical features from the
test data, or from a separate source of data. In either
case, the methodology proceeds in exactly the same
way.
SenseClusters is based on lexical features, in par-
ticular unigrams, bigrams, co–occurrences, and tar-
</bodyText>
<page confidence="0.981203">
105
</page>
<note confidence="0.382109">
Proceedings of the ACL Interactive Poster and Demonstration Sessions,
pages 105–108, Ann Arbor, June 2005. c�2005 Association for Computational Linguistics
</note>
<bodyText confidence="0.999967871794872">
get co–occurrences. Unigrams are single words that
occur more than five times, bigrams are ordered
pairs of words that may have intervening words be-
tween them, while co-occurrences are simply un-
ordered bigrams. Target co-occurrences are those
co–occurrences that include the given target word.
We select bigrams and co–occurrences that occur
more than five times, and that have a log–likelihood
ratio of more than 3.841, which signifies a 95% level
of certainty that the two words are not independent.
We do not allow unigrams to be stop words, and we
eliminate any bigram or co–occurrence feature that
includes one or more stop words.
Previous work in word sense discrimination has
shown that contexts of an ambiguous word can be ef-
fectively represented using first order (Pedersen and
Bruce, 1997) or second order (Sch¨utze, 1998) rep-
resentations. SenseClusters provides extensive sup-
port for both, and allows for them to be applied in a
wider range of problems.
In the first order case, we create a context (rows)
by lexical features (columns) matrix, where the fea-
tures may be any of the above mentioned types. The
cell values in this matrix record the frequencies of
each feature occurring in the context represented by
a given row. Since most lexical features only occur a
small number of times (if at all) in each context, the
resulting matrix tends to be very sparse and nearly
binary. Each row in this matrix forms a vector that
represents a context. We can (optionally) use Sin-
gular Value Decomposition (SVD) to reduce the di-
mensionality of this matrix. SVD has the effect of
compressing a sparse matrix by combining redun-
dant columns and eliminating noisy ones. This al-
lows the rows to be represented with a smaller num-
ber of hopefully more informative columns.
In the second order context representation we start
with creating a word by word co-occurrence ma-
trix where each row represent the first word and the
columns represent the second word of either bigram
or co–occurrence features previously identified. If
the features are bigrams then the word matrix is
asymmetric whereas for co-occurrences it is sym-
metric and the rows and columns do not suggest any
ordering. In either case, the cell values indicate how
often the two words occur together, or contains their
log–likelihood score of associativity. This matrix is
large and sparse, since most words do not co–occur
with each other. We may optionally apply SVD to
this co-occurrence matrix to reduce its dimension-
ality. Each row of this matrix is a vector that repre-
sents the given word at the row via its co–occurrence
characteristics. We create a second order represen-
tation of a context by replacing each word in that
context with its associated vector, and then averag-
ing together all these word vectors. This results in a
single vector that represents the overall context.
For contexts with target words we can restrict the
number of words around the target word that are av-
eraged for the creation of the context vector. In our
name discrimination experiments we limit this scope
to five words on either side of the target word which
is based on the theory that words nearer to the tar-
get word are more related to it than the ones that are
farther away.
The goal of the second order context represen-
tation is to capture indirect relationships between
words. For example, if the word Dictionary occurs
with Words but not with Meanings, and Words oc-
curs with Meanings, then the words Dictionary and
Meanings are second order co-occurrences via the
first order co-occurrence of Words.
In either the first or second order case, once we
have each context represented as a vector we pro-
ceed with clustering. We employ the hybrid clus-
tering method known as Repeated Bisections, which
offers nearly the quality of agglomerative clustering
at the speed of partitional clustering.
</bodyText>
<sectionHeader confidence="0.987406" genericHeader="method">
3 Labeling Methodology
</sectionHeader>
<bodyText confidence="0.9998848">
For each discovered cluster, we create a descriptive
and a discriminating label, each of which is made
up of some number of bigram features. These are
identified by treating the contexts in each cluster as
a separate corpora, and applying our bigram feature
selection methods as described previously on each
of them.
Descriptive labels are the top N bigrams accord-
ing to the log–likelihood ratio. Our goal is that these
labels will provide clues as to the general nature of
the contents of a cluster. The discriminating labels
are any descriptive labels for a cluster that are not
descriptive labels of another cluster. Thus, the dis-
criminating label may capture the content that sep-
arates one cluster from another and provide a more
</bodyText>
<page confidence="0.998162">
106
</page>
<tableCaption confidence="0.997008">
Table 1: Name Discrimination (F-measure)
</tableCaption>
<table confidence="0.9982664">
2-Way Name(M);+ MAJ. O1 O2
(N) k=2 k=2
AAIRLINES(1075); 50.0 66.6 58.8
TCRUISE(1075) (2150)
AAIRLINES(3966); 51.7 61.7 59.6
HPACKARD(3690) (7656)
BGATES(1981); 64.8 63.4 53.8
TCRUISE(1075) (3056)
BSPEARS(1380); 50.0 56.6 65.8
GBUSH(1380) (2760)
3-Way Name (M);+ k=3 k=3
AAIRLINES(2500); 33.3 41.4 45.1
HPACKARD(2500); (7500)
BMW(2500);
AAIRLINES(1300); 33.3 46.0 45.3
HPACKARD(1300); (3900)
BSPEARS(1300);
BGATES(1075); 33.3 53.7 53.6
TCRUISE(1075); (3225)
GBUSH(1075)
</table>
<tableCaption confidence="0.588544">
detailed level of information.
</tableCaption>
<sectionHeader confidence="0.995888" genericHeader="method">
4 Experimental Data
</sectionHeader>
<bodyText confidence="0.9768724">
We evaluate these methods on proper name discrim-
ination and email (newsgroup) categorization.
For name discrimination we use the 700 million
word New York Times portion of the English Giga-
Word corpus as the source of contexts. While there
are many ambiguous names in this data, it is difficult
to evaluate the results of our approach given the ab-
sence of a disambiguated version of the text. Thus,
we automatically create ambiguous names by con-
flating the occurrences associated with two or three
relatively unambiguous names into a single obfus-
cated name.
For example, we combine Britney Spears and
George Bush into an ambiguous name Britney Bush,
and then see how well SenseClusters is able to cre-
ate clusters that reflect the true underlying identity
of the conflated name.
Our email experiments are based on the 20-
NewsGroup Corpus of USENET articles. This is
a collection of approximately 20,000 articles that
</bodyText>
<tableCaption confidence="0.959886">
Table 2: Email Categorization (F-measure)
</tableCaption>
<table confidence="0.997013916666667">
Newsgroup(M);+ MAJ. O1 O2
(N) k=2 k=2
comp.graphics(389); 50.1 61.1 63.9
misc.forsale(390) (779)
comp.graphics(389); 50.8 73.6 54.8
talk.pol.mideast(376) (756)
rec.motorcycles(398); 50.13 83.1 60.5
sci.crypt(396) (794)
rec.sport.hockey(399); 50.1 77.6 58.5
soc.relig.christian(398) (797)
sci.electronics(393); 50.3 67.8 52.3
soc.relig.christian(398) (791)
</table>
<bodyText confidence="0.997955">
have been taken from 20 different newsgroups. As
such they are already classified, but since our meth-
ods are unsupervised we ignore this information un-
til it is time to evaluate our approach. We present
results that make two way distinctions between se-
lected pairs of newsgroups.
</bodyText>
<sectionHeader confidence="0.89462" genericHeader="evaluation">
5 Experimental Results and Discussion
</sectionHeader>
<bodyText confidence="0.999908130434783">
Table 1 presents the experimental results for 2-way
and 3-way name discrimination experiments, and
Table 2 presents results for a 2-way email cate-
gorization experiment. The results are reported in
terms of the F-measure, which is the harmonic mean
of precision and recall.
The first column in both tables indicates the possi-
ble names or newgroups, and the number of contexts
associated with each. The next column indicates the
percentage of the majority class (MAJ.) and count
(N) of the total number of contexts for the names
or newsgroups. The majority percentage provides a
simple baseline for level of performance, as this is
the F–measure that would be achieved if every con-
text were simply placed in a single cluster. We refer
to this as the unsupervised majority classifier.
The next two columns show the F–measure asso-
ciated with the order 1 and order 2 representations
of context, with all other options being held con-
stant. These experiments used bigram features, SVD
was performed as appropriate for each representa-
tion, and the method of Repeated Bisections was
used for clustering.
</bodyText>
<page confidence="0.99928">
107
</page>
<tableCaption confidence="0.998736">
Table 3: Cluster Labels (for Table 1)
</tableCaption>
<table confidence="0.99915888">
True Name Created Labels
CLUSTER 0: Flight 11, Flight 587, Sept 11,
AMERICAN Trade Center, World Trade,
AIRLINES Los Angeles, New York
CLUSTER 1: Jerry Maguire,
TOM Mission Impossible,
CRUISE Minority Report, Tom Cruise,
Penelope Cruz, Nicole Kidman,
United Airlines, Vanilla Sky,
Los Angeles, New York
CLUSTER 0: George Bush, George W,
GEORGE Persian Gulf, President, U S,
BUSH W Bush, former President,
lifting feeling, White House
CLUSTER 1: Chairman, Microsoft,
BILL Microsoft Chairman,
GATES co founder, News Service,
operating system,
chief executive, White House
CLUSTER 2: Jerry Maguire,
TOM Mission Impossible,
CRUISE Minority Report, Al Gore,
New York, Nicole Kidman,
Penelope Cruz, Vanilla Sky,
Ronald Reagan, White House
</table>
<bodyText confidence="0.999965121212121">
Finally, note that the number of clusters to be dis-
covered must be provided by the user. In these ex-
periments we have taken the best case approach and
asked for a number of clusters equal to that which
actually exists. We are currently working to develop
methods that will automatically stop at an optimal
number of clusters, to avoid setting this value man-
ually.
In general all of our results significantly improve
upon the majority classifier, which suggests that the
clustering of contexts is successfully discriminating
among ambiguous names and uncategorized email.
Table 3 shows the descriptive and discriminating
labels assigned to the 2–way experimental case of
American Airlines and Tom Cruise, as well as the
3–way case of George Bush, Bill Gates and Tom
Cruise. The bold face labels are those that serve
as both descriptive and discriminating labels. The
fact that most labels serve both roles suggests that
the highest ranked bigrams in each cluster were also
unique to that cluster. The normal font indicates
labels that are only descriptive, and are shared be-
tween multiple clusters. There are only a few such
cases, for example White House happens to be a sig-
nificant bigram in all three of the clusters in the 3–
way case. There were no labels that were exclu-
sively discriminating in these experiments, suggest-
ing that the clusters are fairly clearly distinguished.
Please note that some labels include unigrams
(e.g., President for George Bush). These are created
from bigrams where the other word is the conflated
form, which is not included in the labels since it is
by definition ambiguous.
</bodyText>
<sectionHeader confidence="0.999607" genericHeader="conclusions">
6 Acknowledgements
</sectionHeader>
<bodyText confidence="0.631443666666667">
This research is partially supported by a National
Science Foundation Faculty Early CAREER Devel-
opment Award (#0092784).
</bodyText>
<sectionHeader confidence="0.968435" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99994225">
G.A. Miller and W.G. Charles. 1991. Contextual corre-
lates of semantic similarity. Language and Cognitive
Processes, 6(1):1–28.
T. Pedersen and R. Bruce. 1997. Distinguishing word
senses in untagged text. In Proceedings of the Sec-
ond Conference on Empirical Methods in Natural Lan-
guage Processing, pages 197–207, Providence, RI,
August.
T. Pedersen, A. Purandare, and A. Kulkarni. 2005. Name
discrimination by clustering similar contexts. In Pro-
ceedings of the Sixth International Conference on In-
telligent Text Processing and Computational Linguis-
tics, pages 220–231, Mexico City, February.
A. Purandare and T. Pedersen. 2004. Word sense
discrimination by clustering contexts in vector and
similarity spaces. In Proceedings of the Conference
on Computational Natural Language Learning, pages
41–48, Boston, MA.
H. Sch¨utze. 1998. Automatic word sense discrimination.
Computational Linguistics, 24(1):97–123.
</reference>
<page confidence="0.998369">
108
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.806525">
<title confidence="0.999811">SenseClusters: Unsupervised Clustering and Labeling of Similar Contexts</title>
<author confidence="0.999965">Kulkarni Pedersen</author>
<affiliation confidence="0.999978">Department of Computer Science University of Minnesota</affiliation>
<address confidence="0.986627">Duluth, MN 55812</address>
<email confidence="0.997222">kulka020@d.umn.edu</email>
<email confidence="0.997222">tpederse@d.umn.edu</email>
<web confidence="0.996807">http://senseclusters.sourceforge.net</web>
<abstract confidence="0.986297230769231">SenseClusters is a freely available system that identifies similar contexts in text. It relies on lexical features to build first and second order representations of contexts, which are then clustered using unsupervised methods. It was originally developed to discriminate among contexts centered around a given target word, but can now be applied more generally. It also supports methods that create descriptive and discriminating labels for the discovered clusters.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>G A Miller</author>
<author>W G Charles</author>
</authors>
<title>Contextual correlates of semantic similarity.</title>
<date>1991</date>
<booktitle>Language and Cognitive Processes,</booktitle>
<pages>6--1</pages>
<contexts>
<context position="1210" citStr="Miller and Charles, 1991" startWordPosition="171" endWordPosition="174"> now be applied more generally. It also supports methods that create descriptive and discriminating labels for the discovered clusters. 1 Introduction SenseClusters seeks to group together units of text (referred to as contexts) that are similar to each other using lexical features and unsupervised clustering. Our initial work (Purandare and Pedersen, 2004) focused on word sense discrimination, which takes as input contexts that each contain a given target word, and produces as output clusters that are presumed to correspond to the different senses of the word. This follows the hypothesis of (Miller and Charles, 1991) that words that occur in similar contexts will have similar meanings. We have shown that these methods can be extended to proper name discrimination (Pedersen et al., 2005). People, places, or companies often share the same name, and this can cause a considerable amount of confusion when carrying out Web search or other information retrieval applications. Name discrimination seeks to group together the contexts that refer to a unique underlying individual, and allow the user to recognize that the same name is being used to refer to multiple entities. We have also extended SenseClusters to clu</context>
</contexts>
<marker>Miller, Charles, 1991</marker>
<rawString>G.A. Miller and W.G. Charles. 1991. Contextual correlates of semantic similarity. Language and Cognitive Processes, 6(1):1–28.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Pedersen</author>
<author>R Bruce</author>
</authors>
<title>Distinguishing word senses in untagged text.</title>
<date>1997</date>
<booktitle>In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>197--207</pages>
<location>Providence, RI,</location>
<contexts>
<context position="4072" citStr="Pedersen and Bruce, 1997" startWordPosition="628" endWordPosition="631">rences are simply unordered bigrams. Target co-occurrences are those co–occurrences that include the given target word. We select bigrams and co–occurrences that occur more than five times, and that have a log–likelihood ratio of more than 3.841, which signifies a 95% level of certainty that the two words are not independent. We do not allow unigrams to be stop words, and we eliminate any bigram or co–occurrence feature that includes one or more stop words. Previous work in word sense discrimination has shown that contexts of an ambiguous word can be effectively represented using first order (Pedersen and Bruce, 1997) or second order (Sch¨utze, 1998) representations. SenseClusters provides extensive support for both, and allows for them to be applied in a wider range of problems. In the first order case, we create a context (rows) by lexical features (columns) matrix, where the features may be any of the above mentioned types. The cell values in this matrix record the frequencies of each feature occurring in the context represented by a given row. Since most lexical features only occur a small number of times (if at all) in each context, the resulting matrix tends to be very sparse and nearly binary. Each </context>
</contexts>
<marker>Pedersen, Bruce, 1997</marker>
<rawString>T. Pedersen and R. Bruce. 1997. Distinguishing word senses in untagged text. In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing, pages 197–207, Providence, RI, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Pedersen</author>
<author>A Purandare</author>
<author>A Kulkarni</author>
</authors>
<title>Name discrimination by clustering similar contexts.</title>
<date>2005</date>
<booktitle>In Proceedings of the Sixth International Conference on Intelligent Text Processing and Computational Linguistics,</booktitle>
<pages>220--231</pages>
<location>Mexico City,</location>
<contexts>
<context position="1383" citStr="Pedersen et al., 2005" startWordPosition="201" endWordPosition="204">oup together units of text (referred to as contexts) that are similar to each other using lexical features and unsupervised clustering. Our initial work (Purandare and Pedersen, 2004) focused on word sense discrimination, which takes as input contexts that each contain a given target word, and produces as output clusters that are presumed to correspond to the different senses of the word. This follows the hypothesis of (Miller and Charles, 1991) that words that occur in similar contexts will have similar meanings. We have shown that these methods can be extended to proper name discrimination (Pedersen et al., 2005). People, places, or companies often share the same name, and this can cause a considerable amount of confusion when carrying out Web search or other information retrieval applications. Name discrimination seeks to group together the contexts that refer to a unique underlying individual, and allow the user to recognize that the same name is being used to refer to multiple entities. We have also extended SenseClusters to cluster contexts that are not centered around any target word, which we refer to as headless clustering. Automatic email categorization is an example of a headless clustering t</context>
</contexts>
<marker>Pedersen, Purandare, Kulkarni, 2005</marker>
<rawString>T. Pedersen, A. Purandare, and A. Kulkarni. 2005. Name discrimination by clustering similar contexts. In Proceedings of the Sixth International Conference on Intelligent Text Processing and Computational Linguistics, pages 220–231, Mexico City, February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Purandare</author>
<author>T Pedersen</author>
</authors>
<title>Word sense discrimination by clustering contexts in vector and similarity spaces.</title>
<date>2004</date>
<booktitle>In Proceedings of the Conference on Computational Natural Language Learning,</booktitle>
<pages>41--48</pages>
<location>Boston, MA.</location>
<contexts>
<context position="944" citStr="Purandare and Pedersen, 2004" startWordPosition="127" endWordPosition="130">ilar contexts in text. It relies on lexical features to build first and second order representations of contexts, which are then clustered using unsupervised methods. It was originally developed to discriminate among contexts centered around a given target word, but can now be applied more generally. It also supports methods that create descriptive and discriminating labels for the discovered clusters. 1 Introduction SenseClusters seeks to group together units of text (referred to as contexts) that are similar to each other using lexical features and unsupervised clustering. Our initial work (Purandare and Pedersen, 2004) focused on word sense discrimination, which takes as input contexts that each contain a given target word, and produces as output clusters that are presumed to correspond to the different senses of the word. This follows the hypothesis of (Miller and Charles, 1991) that words that occur in similar contexts will have similar meanings. We have shown that these methods can be extended to proper name discrimination (Pedersen et al., 2005). People, places, or companies often share the same name, and this can cause a considerable amount of confusion when carrying out Web search or other information</context>
</contexts>
<marker>Purandare, Pedersen, 2004</marker>
<rawString>A. Purandare and T. Pedersen. 2004. Word sense discrimination by clustering contexts in vector and similarity spaces. In Proceedings of the Conference on Computational Natural Language Learning, pages 41–48, Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Sch¨utze</author>
</authors>
<title>Automatic word sense discrimination.</title>
<date>1998</date>
<journal>Computational Linguistics,</journal>
<volume>24</volume>
<issue>1</issue>
<marker>Sch¨utze, 1998</marker>
<rawString>H. Sch¨utze. 1998. Automatic word sense discrimination. Computational Linguistics, 24(1):97–123.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>