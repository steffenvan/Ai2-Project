<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.867018">
NATURAL LANGUAGE QUERYING OF HISTORICAL DATABASES
</title>
<author confidence="0.783592">
James Clifford
</author>
<affiliation confidence="0.533032">
Information Systems Area
Graduate School of Business Administration
</affiliation>
<address confidence="0.3712155">
New York University
New York, NY
</address>
<bodyText confidence="0.9865132">
In this paper we examine the connection between two areas of semantics, namely the semantics of
historical databases and the semantics of natural language querying, and link them together via a
common view of the semantics of time. Since the target application domain is an historical database, we
present the essential features of the Historical Relational Database Model (HRDM), an extension to the
relational model motivated by the desire to incorporate more &amp;quot;real world&amp;quot; semantics into a database at
the conceptual level. We then present the essential features of QE-III, a formally defined English
database query language whose semantic and pragmatic theory, based on a Montague-type semantics,
makes explicit reference to the notion of denotation with respect to a moment of time. We demonstrate
the use of this language to query an example historical database, and discuss the issues of how to provide
both a semantic and a pragmatic interpretation for questions within a model-theoretic framework.
</bodyText>
<sectionHeader confidence="0.999291" genericHeader="abstract">
1 INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999977698113207">
The relational model of data (RM), first proposed in 1970
(Codd 1970), has by now become the standard for both
database practitioners and theoreticians alike. In spite
of this success, however, much recent database re-
search has focused on ways to extend RM to overcome
perceived shortcomings. Chief among the criticisms has
been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among
the many diverse efforts directed at this deficiency have
been a number of attempts to extend RM to incorporate
a temporal dimension at the model level. While such
efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass
(1984), Lum et al. (1984), Clifford (1985), Snodgrass and
Ahn (1985), and Gadia and Vaishnav (1985) have all
addressed this issue, the Historical Relational Database
Model (HRDM) ((Clifford 1982a), (Clifford and Warren
1983), (Clifford 1985), (Clifford and Croker 1987)) has
the advantage of being directly parallel to a formal
theory of natural language. In Section 2 we present an
overview of HRDM, as it serves as the environment in
which we wish to explore our query language. In
particular, HRDM views database attributes as func-
tions from moments in time to values (in the appropriate
domain), and the intensional logic ILs provides a mech-
anism for direct reference to these higher-order objects,
and for incorporating them into a general temporal
semantics for the database. We can therefore express
both static and dynamic queries in the same language,
by quantifying over variables of the appropriate types.
In a series of papers culminating in Montague (1973),
henceforth PTQ, Richard Montague embarked upon a
program of providing a formal syntax coupled with a
model-theoretic semantics for increasingly sophisti-
cated fragments of English. Section 3 argues that a
successful formal treatment can be given to a natural
language querying facility for a historical relational data
base (HRDB), through the medium of the intensional
logic ILs.
We view this work as important for two reasons.
First, it represents one of the initial attempts to adapt
the ideas of Montague Semantics (MS) (Montague 1974)
to a practical problem. (Landsbergen (1981) looks at the
issue of machine translation within an MS framework.)
The research that has been done since the PTQ paper
has primarily looked at extensions or modifications to
its linguistic or logical theory, or at implementations of
the theory on the computer. We will attempt to show
that this theory of language can serve as the formal
foundation of a useable computer system for querying
actual databases.
Second, in addition to approaching the problem of
NLQ formally, rather than from a purely engineering
approach, the theory presented provides a novel (but
see Gunji (1981) for a similar approach developed
</bodyText>
<footnote confidence="0.84658125">
Copyright 1988 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted provided
that the copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page. To
copy otherwise, or to republish, requires a fee and/or specific permission.
0362-613X/ 88 /010010-34$03.00
</footnote>
<page confidence="0.88402">
10 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<note confidence="0.981401555555556">
James Clifford Natural Language Querying of Historical Databases
EMP
EMP-NAME MGR DEPT SAL
John John Linen 25K
Mike John Linen .17K
Elsie Elsie Toy 26K
Liz Liz Hardware 30K
Rachel Liz Hardware 29K
Peter Liz Hardware 29K
</note>
<figureCaption confidence="0.999034">
Figure 2-1. Example Relation.
</figureCaption>
<bodyText confidence="0.997514593220339">
relation emp
concurrently with ours) approach to the interpretation
of queries that involves both a semantic and a pragmatic
account. This work represents only a first step in this
direction within a MS framework. The fragment of
English that we define herein is certainly not adequate
to express all of the queries that one would want to
present to an HRDB. It is intended only to lay the
groundwork for a formal theory of database querying
that is both extendible and implementable.
In this paper we present an informal overview of a
fragment of English for database querying that we call
QE-HI. We discuss the kinds of properties and abilities
that a database query language in English should pos-
sess; principal among these are (1) an account of
question semantics that possesses close analogs in
database theory, (2) an account of the semantics of
multiple-WH questions, (3) an account of the semantics
of time, and (4) a grammar that is conducive to a
computer implementation. After examining a number of
partial solutions to these problems, we introduce the
notion of a formalized pragmatics as an equal partner
with the syntax and semantics in the specification of the
QE-III language. We argue that assigning to the prag-
matic component the task of providing a representation
for the answer(s) to a question is both appropriate and
elegant. Finally, we discuss several other recent at-
tempts at developing a formal theory of questions.
QE-III is defined as a formal language, with syntax
paired with semantics, and with a pragmatics defined on
the two of these; the language as a whole is designed
with the database application in mind. QE-III is both a
simplification and an extension of the PTQ semantic
theory. Within the tradition of Montague Semantics,
QE-III is a formalized fragment of English allowing
questions, tenses, and temporal operators. The inclu-
sion of a formal pragmatics as an interpretive compo-
nent of QE-III is an interesting extension to the tradi-
tional conception of a Montague Grammar. Among the
other extensions to the PTQ fragment embodied in
QE-III are (1) the inclusion of time-denoting expres-
sions and temporal operators, (2) an analysis of verb
meanings into primitive meaning units derived from the
database schema, and, of course, (3) the inclusion of
certain forms of direct questions. These extensions, and
the semantic and pragmatic interpretations with which
they are provided, are motivated by the ultimate goal of
database access, but they are equally interesting in their
own right. The syntactic theory presented is in some
cases admittedly naive, for we have been primarily
interested in getting the interpretation right.
Section 4 provides an overview of the salient features
of the QE-III by means of a number of example deriva-
tions and translations. The complete definition of QE-
III is given in Clifford (1982b) and again in Clifford
(1987), where it appears with a fuller set of examples.
We conclude in Section 5 with a discussion of some of
the limitations of the fragment and of some possibilities
for further extensions.
</bodyText>
<sectionHeader confidence="0.982757" genericHeader="method">
2 THE HISTORICAL RELATIONAL DATABASE MODEL
</sectionHeader>
<bodyText confidence="0.987644337078652">
Analogous to the relationship between the relational
model of data and first-order logic (Gallaire and Minker
1978), we can view an HRDB as a model for ILs
(Clifford 1982b). The higher-order language ILs (with its
built-in concept of denotation with respect to an index)
provides a formal semantics for such data bases in a
natural way.
In the standard or &amp;quot;static&amp;quot; relational model, we
might see a relation such as emp on a scheme
EMP(EMP-NAME MGR SAL DEPT). A typical query
of such a relation, say, &amp;quot;What is employee John&apos;s
salary?&amp;quot;, would be expressed in the relational algebra
as IrSAL (CrEMP-NAME=John(emp)). A first-order language
would express this same query as something like {z I
3 x3 y emp(John,x,y,z)} where x,y, and z are individual
variables and John is an individual constant. To answer
such a query, a data manipulation language (DML)
would access the current relation instance emp on
EMP, such as the one in Figure 2-1.
More complex queries about the employees in this
company, such as: (1) &amp;quot;Has John&apos;s salary risen?&amp;quot;, (2)
&amp;quot;When was Peter rehired?&amp;quot;, (3) &amp;quot;Did Rachel work for
the toy department last year?&amp;quot;, (4) &amp;quot;Has John ever
earned the same as Peter?&amp;quot;, or (5) &amp;quot;Will the average
salary in the linen department surpass 30K within the
next 5 years, if current trends continue?&amp;quot; have typically
not been expressible in any query language, because
neither the structures nor the operations in the under-
lying data model provide for them.
Computational Linguistics, Volume 14, Number 4, December 1988 11
James Clifford Natural Language Querying of Historical Databases
In practice, database administrators have had to
resort to ad-hoc solutions, typically involving program-
ming in some host language, in order to handle queries
of this sort. The issue of modeling time in a DBMS has
recently attracted considerable attention within the da-
tabase community. The HRDM (and other historical or
temporal database models) attempts to satisfy the need
for access to the temporal dimension of information by
providing a unified and formal theory of database se-
mantics that includes time. In particular, HRDM and
QE-III, recognizing the need for maintaining a historical
record of changing data, and a language (English) that
makes explicit or implicit reference to the concept of
time, together provide a theory of database semantics
capable of interpreting sentences in the language cor-
rectly, i.e., in a way that corresponds with our intuitive
understanding of the relation of time to the semantics of
the real world.
Consider again the query &amp;quot;Has John&apos;s salary risen?&amp;quot;
Even with time represented explicitly in the database,
there is no apparent simple relational algebraic formu-
lation for this query. With the first-order representation
for John&apos;s salary given above, as a first guess we might
imagine that RISE* I 3x3y emp(John,x,y,z)}) would
represent this new query, where RISE is a predicate
symbol. However, even with the knowledge that John
has only one salary, say 25K, it clearly makes no sense
to ask whether 25K &amp;quot;rises.&amp;quot; To answer this question,
more data is needed than the current extension of
John&apos;s salary: the values of John&apos;s salary for some other
point(s) of time (in this specific instance, in the past) are
needed. The HRDM model presented in Clifford and
Croker (1987), built upon a formalization of the concept
of intension, provides a uniform way to view attributes
(such as SALaries) not as individual dollar amounts, but
as functions from moments in time to dollar amounts.
For the purposes of this paper we will present an
overview of HRDM and discuss some of the issues
involved.
Informally speaking, tuples in a relation represent
facts about some object (entity or relationship) identi-
fied by the value of the key attribute(s). For example, in
relation emp on scheme EMP (EMP-NAME MGR
DEPT SALARY), the attribute EMP-NAME is the key
attribute, and DEPT, MGR, and SALARY define prop-
erties of employees. A particular tuple, e.g., &lt;Peter,
Hardware, Maria 30K&gt; represents facts about the
employee Peter. A relation in the ordinary, or static,
relational data model would consist of a set of such
tuples representing the facts about a set of employees.
Each tuple would consist of exactly four atomic values,
one for each of the four attributes in the scheme.
By contrast, in HRDM a relation would provide
historical information about the changing values of the
attributes of the objects denoted by values of the key, in
this instance about EMPloyees. Each tuple would be a
complex, three-dimensional object whose size would be
based upon what we call the lifespan of that particular
</bodyText>
<equation confidence="0.993443727272727">
/I
/ 1
/ 1
I I
1 /
/1 1 /
1 1_1/
I 1
I 1
1/
A2 A3
/ /1 / /I / /I
/ / 1 / / 1 I 11
/ / 1 / / 1 I 11
/ / 1 I 1 1 / /I 11
/ / / I I / / / 1_1/
/ / / / /I I / / / 1
I 1 / I 1 1_1/ I 1 1
I 1 / I 1 1 I I /
I 1 / 1 I I I 1 /
I If I If I I/
tuple t in r
</equation>
<figureCaption confidence="0.994976">
Figure 2-2. The History of Two Similar Objects.
</figureCaption>
<bodyText confidence="0.995068605263158">
employee, i.e., the times when that employee was of
interest to the enterprise. Figure 2-2 depicts two tuples
in the same relation but with different lifespans.
Time is represented in the HRDM as a set T = { .
to, t1, . . . }, at most countably infinite, over which is
defined the linear (total) order &lt;T, where ti &lt;T tj means
t; occurs before (is earlier than) tj. (For the sake of
clarity we will assume that t; &lt;r tj if and only if i &lt;j.)
The set T is used as the basis for incorporating the
temporal dimension into the model. We assume that T is
isomorphic to the natural numbers, and therefore the
issue of whether to represent time as intervals or as
points is simply a matter of convenience. Using the
natural numbers allows us to restrict our attention to
closed intervals (a closed interval of T, written [t1, t2] is
simply the set ft; I t1 &lt;= t; &lt;=
D = {DI, D2, . . . , Dn } is the set of value domains,
where for each i, D; # O. Each value domain D; is
analogous to the traditional database notion of a domain
in that it is a set of atomic (non-decomposable) values.
In HRDM, however, attributes take their values not
from these simple domains, but rather from more com-
plex functions. U = {A 1 , A2, . . . , Ana} is a (universal)
set of attributes. Simplifying somewhat, we define over
the sets T and D a set of temporal mappings from the set
T into the set D. This set, TD = {TDI, TD2, . . . , TD,}
where for each i, TD; = ff; I f; : T —&gt; DJ, is the set of
all partial functions from T into the value domain Di.
The domain of each attributes in HRDM is some set
of partial temporal functions. Since key attributes are
intended to be time-invariant, they are constrained to
take a constant valued function (i.e., one which associ-
ates the same value with every time in its domain) as
their value. As we shall see, these mappings are the
counterparts to the notion of individual concepts in the
intensional logic ILs.
The notion of a tuple t on scheme R is expanded in
HRDM to be an ordered pair, t = &lt;v ,1&gt;, where
</bodyText>
<figure confidence="0.950015083333333">
/I
/ I
/ I
/ 1
/ /
/ /
1 /
I /
I /
1/
tuple t in r
Al
/I
/ I
/ 1
/ 1
/ /
/ /
1 /
1 /
/
I/
12 Computational Linguistics, Volume 14, Number 4, December 1988
James Clifford Natural Language Querying of Historical Databases
</figure>
<listItem confidence="0.999148333333333">
1. t.1, the lifespan of tuple t, is a subset of the set T,
and represents the set of times over which its
attributes are defined, and
2. t.v, the value of the tuple, is a mapping such that V
attributes A E R, t.v(A) is a mapping in t.1 —&gt;
DOM(A) (the value-domain of attribute A).
</listItem>
<subsectionHeader confidence="0.941983">
2.1 EXAMPLE DATABASE
</subsectionHeader>
<bodyText confidence="0.999862">
In the remainder of the paper we will discuss the
semantics and pragmatic theory of QE-III, illustrated
with example database queries to an HRDB. For this
purpose we now define the relation schemas for a
historical department store data base based upon an
example in Chang (1978).
</bodyText>
<sectionHeader confidence="0.9176875" genericHeader="method">
EMP_REL (EMP MGR DEPT SAL)
DEPT_REL (DEPT FLOOR)
ITEM REL (ITEM TYPE)
SALES REL (DEPT ITEM VOL)
</sectionHeader>
<bodyText confidence="0.998631">
This concludes our brief overview of HRDM. For
further details the reader is referred to Clifford (1985)
and Clifford and Croker (1987).
</bodyText>
<sectionHeader confidence="0.994842" genericHeader="method">
3 OVERVIEW OF ENGLISH QUERY LANGUAGE QE-III
</sectionHeader>
<subsectionHeader confidence="0.78643">
3.1 INTRODUCTION
</subsectionHeader>
<bodyText confidence="0.99648367">
HRDM serves to formally incorporate a temporal se-
mantics into an extended relational database model. In
order to query a historical database using English, we
define the semantics of queries expressed in English in
terms of the semantics of HRDM, by defining a small
query fragment as a Montague Grammar. The correla-
tion between the database semantics and this query
language is made explicit by providing the semantics of
the query fragment via an indirect translation into the
intensional logic IL.&apos; The translations provide for a
completely extensional treatment of verbs (i.e., there
are no verbs like seek, which can be nonextensional in
object position in the PTQ treatment). This treatment is
dictated by the application to a database environment,
in which existence is tantamount to existence in the
database (Reiter 1978). Through these translations,
then, the historical database essentially serves as a
model for ILs and therefore as the model for a formal
definition of the interpretation of the English queries. In
addition to providing a semantic interpretation, which in
model-theoretic terms is called its denotation, we also
provide for each expression a pragmatic interpretation
in a manner to be explained.
Our goal in this effort has not been to define an
English database query language that is, in any sense of
the term, complete. Rather, we have been motivated by
two complementary goals. First, we have wanted to
investigate the possibility of a formal, model-theoretic
query language for historical databases. This led to our
interest in Montague Semantics and to our second
goal—demonstrating that Montague&apos;s theories of natu-
ral language semantics are applicable to such a practical
task. Along the way we discovered that it was simpler
and more natural to define the interpretation of this
query language in two components, one semantic and
the other pragmatic.
Two overrriding principles have guided this work.
First was that whatever interpretation or meaning our
theory would give to a natural language database query
should be as close as possible to the interpretation given
to database queries in, say, the relational algebra or
calculus. This meant that the interpretation of a query
should somehow encompass its answer as represented
in the underlying data base. Second, the theory should
make sense computationally. This meant taking into
account what had already been learned about parsing
strategies for Montague Grammars (Friedman and War-
ren (1978), Warren (1979), Landsbergen (1981)), as well
as what database theory had to say about the semantics
of the modeled enterprise. These principles motivate
certain systematic simplifications to the PTQ transla-
tions from English to logic, wherever these are sug-
gested by the simplified view of the semantics of the
enterprise provided by the database model. Moreover,
since we are not attempting to develop a semantic
theory of questions for English in general, these simpli-
fications have been introduced into the translation pro-
cess as early as possible. We believe that this strategy
has the dual effect of making some of the PTQ theory a
little more accessible, and eliminating the need to resort
to the less computationally attractive technique of in-
troducing a large number of meaning postulates and
using logical equivalences to perform the reductions at
a later stage.
We have made little attempt to develop a sophisti-
cated syntax for our fragment. Numerous extensions to
the syntax of the PTQ fragment have been investigated
by researchers in the past decade that we have not
incorporated into our fragment. Since our primary con-
cern has been &amp;quot;getting the meaning right,&amp;quot; we felt that
a too broad syntactic coverage might obscure our major
points. For this reason, we have extended the PTQ
fragment only slightly. The treatment of questions that
we present is syntactically naive, although in its favor
we might point out that unlike most work on questions
in Montague Grammar, QE-III makes a stab at direct
questions. We believe that the semantic theory of
questions that we present, and particularly our proposal
to capture the answer in a pragmatic component, are an
important contribution to the formalization of the inter-
pretive component of natural language understanding
systems. Naturally, the true test of a natural language
query facility is in how useable it is; certainly the syntax
of QE-III would have to be extended before anyone
would think of using it.
In this section we discuss the major issues underlying
the definition of QE-III, which fall roughly into two
broad categories: aspects of the process of database
querying that we have incorporated into the fragment,
and modifications and additions to the PTQ fragment
Computational Linguistics, Volume 14, Number 4, December 1988 13
James Clifford Natural Language Querying of Historical Databases
that these, and the database semantics, have occa-
sioned. As in much of the work that has been done in
the area of Montague Semantics since Montague&apos;s
death in 1970, we have allowed the PTQ fragment to
stand pretty much intact as the heart of QE-III. How-
ever, we have redefined this fragment in terms of the
language IL, in order to allow direct reference to
moments in time.
</bodyText>
<subsectionHeader confidence="0.9381155">
3.2 PRELIMINARIES
3.2.1 INDIVIDUAL CONCEPTS VS. ENTITIES
</subsectionHeader>
<bodyText confidence="0.999899923076923">
Most recent research in the field of Montague Seman-
tics has incorporated the suggestion, first made in
Bennett (1974), that Montague&apos;s treatment of common
nouns (CNs) and intransitive verbs (IVs) as denoting
sets of individual concepts (ICs) is unduly complicated.
Under Bennett&apos;s suggestion, both CNs and IVs denote
sets of simple individuals, with the result that the entire
typing scheme of the English categories in these frag-
ments is considerably simplified. In Section 2 we
showed that attributes in an HRDB can be identified
with ICs. Accordingly we have not adopted the Bennett
type system, but have instead maintained the treatment
of PTQ.
</bodyText>
<subsectionHeader confidence="0.83423">
3.2.2 VERBS
</subsectionHeader>
<bodyText confidence="0.998088918367347">
Montague&apos;s semantic treatment of verbs leaves them
completely unanalyzed; thus, for example, the English
verb &amp;quot;walk&amp;quot; translates into the constant &amp;quot;walk&apos;&amp;quot; in IL,
&amp;quot;love&amp;quot; into &amp;quot;love&apos; &amp;quot;, etc. The interpretation of these
constants is some function in the model for the lan-
guage, a function about which Montague says nothing
except to specify its logical type (and in certain cases to
specify an extensional meaning postulate). Because we
are using a database as a representation of the logical
model we are in a position to provide an analysis of
English verbs that takes into account the meaning of the
verbs as encoded in the database. This analysis is given
in terms of the database schema. For example, instead
of translating the verb &amp;quot;manage&amp;quot; into the unanalyzed
predicate &amp;quot;manage&apos;, we take advantage of the data-
base semantics to incorporate directly into its transla-
tion the information that its subject must be an IC in the
role of a MGR, and that its object must be a constant IC
that is an EMP. We do not change the logical type of the
translation, i.e., a transitive verb in our fragment de-
notes the same kind of function as it does in Montague&apos;s
treatment; we simply analyze its meaning in terms of the
database primitives. This analysis in terms of a small set
of primitive meaning units is not very different from
some approaches taken in Al work in natural language
understanding (e.g., Schank 1972), or from the linguistic
theory of deep cases (Fillmore 1968). The difference, of
course, is that our primitives or cases are different,
motivated by the HRDM and the schema design, and
are no more absolute than any well-chosen database
design.
As an example, the translation of &amp;quot;manage&amp;quot; in our
fragment is given as: AWAxW(i)(AyAS-1(y(i),x) A
EMP*&apos;(i)(y(i)) A MGR&apos;(i)(x)). This expression is of the
same logical type as manage&apos; in a PTQ-like treatment,
and will combine with terms in the same way, but it
does not leave &amp;quot;managing&amp;quot; unanalyzed. Instead it
specifies what attribute class(es) its subject and object
must belong to, and how they must be related. Specif-
ically, the subject must be an entity (y(i)) that is an
EMP, the object an IC (x) that is a MGR, and the
MGR-IC must be ASsociated with the EMPloyees (AS-
1). In general the translation of any verb in our theory
will so specify the attribute of its subject (or the
disjunction of alternatives, if any). The translation of a
TV will further specify the attribute(s) of its direct
object, and of a DTV of both its objects. Moreover any
relationship(s) among these attributes will also be spec-
ified.
</bodyText>
<subsectionHeader confidence="0.909012">
3.3 THE PROBLEMS OF TENSE AND TIME
3.3.1 INTERVALS OR STATES?
</subsectionHeader>
<bodyText confidence="0.999950315789473">
David Dowty (1979) presents a discussion of a broad
spectrum of semantic and syntactic issues relevant to
the understanding of English, and in particular to pro-
viding a Montague Semantic analysis of these issues. In
the final chapter of this book he formalizes many of the
ideas he has discussed by defining a Montague fragment
of English that includes such features as temporal
adverbs, dative-taking verbs, a theory of word forma-
tion, and a treatment of several compound tense struc-
tures. In order to provide a semantics for this expansion
of the PTQ fragment Dowty argues for the necessity of
several significant extensions to the logic IL: a radically
different treatment of the phenomenon of tense is one of
his contributions. Because we are concerned with many
of the same issues as Dowty—in particular tenses and
direct temporal references—it seems appropriate to
discuss his work and to contrast two different solutions
to some of the same issues.
A major section of the book is concerned with
developing a rigorous taxonomy of verbs in English
based upon several syntactic and semantic criteria. The
problems with a number of different classification
schemes that have been proposed over the years are
discussed, in particular Vendler&apos;s scheme (Vendler
1967), which divides verbs into the four categories of
statives, activities, accomplishments, and achieve-
ments. Dowty judges all of these proposals by the two
criteria of syntactic and semantic uniformity: can all of
the verbs assigned to a given class appear in the same
syntactic constructs, and are the same inferences in
meaning justified for all like-classified verbs? Dowty&apos;s
final taxonomy, offered with many reservations, defines
eight different verb categories.
These aspectual verb distinctions, and particularly
the semantics of the progressive tenses. lead Dowty to
espouse a theory of interval semantics, earlier proposed
by Bennett and Partee (1972), wherein truth conditions
are given relative to an interval, rather than to a
</bodyText>
<page confidence="0.980635">
14 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<subsectionHeader confidence="0.312492">
James Clifford Natural Language Querying of Historical Databases
</subsectionHeader>
<bodyText confidence="0.994224029850746">
moment, of time. Unlike other proposed changes to
Montague&apos;s PTQ analysis of English, this proposal
causes major modifications to the most basic semantic
notion of IL, and indeed of most other temporal logics
that have been studied (e.g., Rescher and Urquhart
1971). We are not convinced of the necessity of taking
this step (indeed, Dowty himself says that &amp;quot;it results in
a system that is really too powerful for natural language
semantics&amp;quot; (Dowty 1979), p. 138). Certainly from the
perspective of database querying, the complications
that it introduces into the logic seem unnecessary.
The existence of an actual historical database as the
heart of our logical model is the major constraint within
which all of our work must be undertaken. This
&amp;quot;given,&amp;quot; which in essence already takes a stand on the
semantics of the real world, stands as the major differ-
ence between Dowty&apos;s enterprise and ours. The seman-
tic theory that we present is a theory of the semantics of
English when used as a database query language for an
HRDB, and not when used in ordinary discourse,
whatever that might be. If these two theories diverge, it
should be neither surprising nor disturbing, and it
should be of interest to compare and contrast them.
It is apparent that an HRDB is a gross abstraction of
the real world:entities are represented by unique iden-
tifiers, complex relationships are reduced to simple
tuples in relations, time is rather crudely represented as
a set of states of gross, perhaps even somewhat amor-
phous, granularity. And yet in spite of these limitations
these databases are found to be useful to a large and
growing number of people. What kind of constraints
does the abstraction of real-world semantics embodied
in the HRDB impose upon our enterprise? Precisely
this: the historical database embodies a semantics that
is based upon the notion of truth with respect to a state.
Every fact in the database is recorded with respect to a
state that &amp;quot;time stamps&amp;quot; it; this is interpreted as
asserting that the fact is true at that state. If intervals
come into play, they can be modeled as sets of time
points, since time in our database view is discrete.
The differences that Dowty examines certainly exist;
they do not, however, seem relevant in most database
applications. Unlike Dowty, our analysis treats the
progressive tenses synonymously with their simple
counterparts:
Did John earn 30K last week? and Was John earning
30K last week?
Does Peter work for the toy department? and Is Peter
working for the toy department?
Perhaps it is the case that database applications do not
lend themselves to handling achievements or accom-
plishments, but instead record stative information. In
any case it is difficult to conceive of many real database
examples where distinctions of the sort that Dowty&apos;s
analysis is concerned with actually make sense.
Dowty&apos;s analysis of the interaction of tenses and
temporal expressions accords exactly with our own.
Sentences with such interaction, such as &amp;quot;John worked
yesterday,&amp;quot; cannot be analyzed as resulting from two
separate temporal operators (&amp;quot;-ed&amp;quot; and &amp;quot;yesterday&amp;quot;)
acting on the proposition that John works, as the
following example should make clear:
John worked yesterday
/ \
yesterday John worked
/\
-ed John works
</bodyText>
<equation confidence="0.98694875">
John works —&gt; work&apos;(i)(John)
-ed = =&gt; &lt; i] A p(ii)]
John worked = =&gt; Ap3i,[[i1 &lt; i] A p(i,)](Ai work&apos;(i)(John))
&lt; i] A work&apos;(ii)(John)]
yesterday = =&gt; Ap12[yesterday&apos;(i2) A p(i2)]
John worked yesterday = =&gt; Ap3i2[yesterday&apos;(i2)
A p(i2)](Ai3i1[51 &lt; i] A work&apos;(i,)(John)])
—&gt; 3i23i1[yesterday&apos;(i2) A [i, &lt; i2] A work&apos;(ii)(John)]
</equation>
<bodyText confidence="0.967497421052632">
This analysis2 (or the reverse, which would first apply
&amp;quot;yesterday&amp;quot; and then &amp;quot;-ed&amp;quot;) causes the two time
operators to compete with each other, placing the event
in the wrong time frame. For example, the following
time line is consistent with this logical analysis, but
inconsistent with the intended meaning of the English:
i2 NOW
John works yesterday
Instead the two temporal operators must be treated as
operating in conjunction; the English -ed is, in a sense,
semantically superfluous in the presence of the other
time indicator. Thus the fragment has rules for applying
tense operators, and separate rules for applying tense
operators in conjunction with other temporal adver-
bials. These rules differ slightly from Dowty&apos;s in that we
treat all temporal operators as operating on entire
clauses, rather than simply on verb phrases. The next
section will explore some of the reasons for this deci-
sion.
</bodyText>
<subsectionHeader confidence="0.8100525">
3.3.2 SENTENTIAL VS. VERB-PHRASAL TEMPORAL
OPERATORS
</subsectionHeader>
<bodyText confidence="0.949327473684211">
Our analysis of tense differs from the PTQ analysis and
the one in Dowty in the manner in which tense is
incorporated into an English sentence. In PTQ, the Rule
S4 combines a term with an IV to form a present-tensed
sentence:
John walks S4
/\
John walk
The past and future tenses are accommodated in Rule
S17, which similarly combines the subject and predicate
to form a sentence in either of these tenses.
Computational Linguistics, Volume 14, Number 4, December 1988 15
James Clifford Natural Language Querying of Historical Databases
Dowty&apos;s analysis is somewhat different. In his frag-
ment a sentence is always formed first by using S4; if
the tense is other than present, he introduces this with
an additional rule that takes the present-tensed sentence
as input and forms its past-tense counterpart, as in the
following example:
</bodyText>
<figure confidence="0.547924666666667">
John walked S39 (Dowty&apos;s)
John walks S4
John walk
</figure>
<bodyText confidence="0.992155088235294">
Extensions to the PTQ fragment have had to deal with
this issue of tense and how it interacts with the other
components of a sentence. We agree with Dowty&apos;s
basic premise that tense is really a property of the
sentence (actually, clause) as a whole. This is particu-
larly important when, as in our fragment, there are
different kinds of sentences: declarative, wh-questions,
yes-no-questions, and when-questions. For under a
straightforward extension of the PTQ treatment the
number of rules would proliferate, since separate rules
would be needed for each kind and tense of the sentence
formed by conjoining a term and a VP. However, under
Dowty&apos;s treatment, the tense rules applied after S4 in
most cases must undo the syntactic work that it has
done, viz, the inflection of the verb as third-person
singular present tense. (Semantically, the treatment is
the same, i.e., the untensed version denotes exactly
what the present-tensed version does.) This syntactic
undoing is both inelegant and computationally unattrac-
tive. For this reason, we have incorporated into QE-III
the additional categories of tensed sentences of each
variety, and have modified S4 so that it creates an
untensed sentence from a term and an IV. The strings of
ultimate interest in the fragment, then, are the tensed
sentences (categories T-t, T-WHQ, T-YNQ, and
WHENQ). The following example from QE-III illus-
trates this for a simple declarative sentence.
John worked (T-t) S105
John #work (t) S5
/ \
John #work
In Section 4, when we discuss further examples of
tensed sentences, particularly tensed questions and
when-questions, we will discuss this issue further.
</bodyText>
<sectionHeader confidence="0.897145" genericHeader="method">
3.4 QUESTIONS
3.4.1 INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999977216666667">
Despite their obvious importance as a tool for gaining
knowledge of the world, both linguists and philosophers
have historically considered interrogative sentences the
poor relation of the declaratives, to which they have
paid the bulk of their attention. Among linguists there is
no generally accepted theory about the syntactic gener-
ation of English questions (Kuno and Robinson 1972,
Pope 1976), and philosophers and logicians have until
recently given little attention to the question of ques-
tions. More recently Engdahl (1986) explored the issue
of constituent questions in Swedish, and proposed a
semantic theory of questions similar to those of Ham-
blin (1973) and Karttunen (1977), which we shall discuss
in Section 3.6. Groenendijk and Stokhof (1983) address
the issue of the appropriateness of an answer in differ-
ent situations, an issue outside the scope of the present
work. Formal logic from its inception directed its atten-
tion to languages based upon the notion of formulas,
abstractions of declarative sentences in natural lan-
guages. Only recently have logicians begun to investi-
gate the semantics of questions in any depth and to
develop formal languages powerful enough to express
questions in order to carry out these investigations.
Hintikka (1974) discusses a number of interesting lin-
guistic and philosophical attempts to provide an analy-
sis of questions.
Although Montague, too, focused his attention on a
formal treatment of the syntax and semantics of declar-
ative sentences in natural language, the framework of
using a lambda calculus and the model theory of inten-
sional logic, developed in PTQ, is rich enough to
incorporate a view of natural language questions as
well. In what seems to be his only published remark on
the issue of questions, he says: &amp;quot;In connection with
imperatives and interrogatives truth and entailment
conditions are of course inappropriate, and would be
replaced by fulfillment conditions and a characteriza-
tion of the semantic content of a correct answer&amp;quot;
(Montague 1973).
Perhaps inspired by this comment, a number of
researchers have been investigating ways to incorporate
a formal account of the syntax and semantics of ques-
tions within the framework of Montague Semantics.
Hamblin (1973), Karttunen (1977), Bennett (1977, 1979),
Hausser and Zaefferer (1978), and Belnap (1982) are
perhaps the most important of these investigations, and
we will discuss their work in relation to ours in the
following section. Many of the aspects of our proposal
have been adapted from or influenced by the work of
these researchers.
Others not working within the MS framework have
also made important contributions to our understanding
of the issues involved. Approaching this issue from an
entirely different perspective, researchers in artificial
intelligence (AI) have over the years developed and
implemented automatic question-answering theories
and systems to varying degrees of success. These have
ranged from some early experimental programs (Green
et al. 1963) to database querying programs bound to a
particular database domain (Woods et al. 1972 and
</bodyText>
<page confidence="0.8881">
16 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<figure confidence="0.862561">
James Clifford Natural Language Querying of Historical Databases
1
</figure>
<bodyText confidence="0.992042142857143">
Waltz 1978) to some rather sophisticated DBQ systems
today that are designed to be general and easily portable
(Harris 1973, Hendrix et al. 1978). The research behind
these systems seems to share a goal common to much of
the work in Al (as distinct from cognitive science), i.e.,
an interest more in getting a system to &amp;quot;work&amp;quot; than in
developing a formal theory that explains its behavior.
</bodyText>
<subsectionHeader confidence="0.887204">
3.4.2 DATABASE QUESTIONS
</subsectionHeader>
<bodyText confidence="0.998494">
As guidelines to help us judge any proposed theory of
questions we have adopted a number of self-imposed
criteria that any solution acceptable to us should meet.
</bodyText>
<listItem confidence="0.9824452">
1. It must fall within the general confines of Montague&apos;s
framework: syntax and semantics defined in parallel,
with the semantics of a phrase defined composition-
ally in terms of the semantics of its components.
2. The interpretation of questions should be closely
</listItem>
<bodyText confidence="0.966234">
analogous to the interpretation of queries in the
relational database model. This means that their
interpretation should be objects in the logical model
which have direct analogs in the HRDM model
described in Section 2.
In the relational database model &amp;quot;a query is a
computation upon relations to yield other relations&amp;quot;
(Maier 1983). This is an operational view of a data-
base query; a denotational semantics view would
hold that a query denotes a relation that is its answer,
and would define just how, in fact, the query so
denoted. In order to provide for the closest possible
parallel between the interpretation of questions in
our theory and the query semantics of HRDM, we
hoped to define the semantics of our English query
language in just such a way, viz., such that each
query would denote the relation that is its answer
with respect to the database. In other words, if a
query in the relational database context denoted an
n-ary relation over entities (i.e., a set of n-tuples), we
felt that its expression as a question in our fragment
should be defined to denote a function of type
&lt;en,t&gt;. As we shall see we were able to accomplish
this easily and naturally not in the semantics, but by
extending the framework of Montague Semantics to
include a pragmatic component.
3. The theory should be computationally tractable.
Because we are interested in developing a theory for
natural language query systems that are ultimately
implementable, this criterion leads us to direct our
attention to solutions that fall within the general PTQ
framework. This is because there have been success-
ful results (Warren 1979 and Landsbergen 1981)
implementing parsers and semantic interpretation
routines for fragments defined within this frame-
work, and we wanted to build upon this work as
much as possible. While this work does not discuss a
computer implementation of its results, an extension
of Warren&apos;s PTQ parser (Warren 1979) to the QE-III
fragment has been implemented by Hasbrouck
(1982).
</bodyText>
<listItem confidence="0.972960705882353">
4. Proper treatment must be given to the interaction of
questions and quantifiers. The PTQ treatment suc-
cessfully accounts for multiple readings of sentences
with interacting quantifiers (&amp;quot;A woman loves every
man.&amp;quot;) Our solution should likewise allow for all of
the readings of questions involving quantified terms
(&amp;quot;Who manages every employee?&amp;quot;).
5. Y-N questions, wh-questions involving &amp;quot;who&amp;quot; and
&amp;quot;what,&amp;quot; and temporal questions (&amp;quot;when&amp;quot;) should
be provided for. This means that we do not treat
indirect questions (&amp;quot;Tell me whether . . .&amp;quot;), since
these do not generally arise within the database
framework and could nevertheless easily be para-
phrased as direct YNQs.
6. The theory should account for multiple wh-questions
(e.g., &amp;quot;Who sells what to whom?&amp;quot;) as these seem
indispensable in a database context.
</listItem>
<bodyText confidence="0.995931513513513">
The problem of providing a correct analysis of questions
that involve quantified terms is illustrated by a query
like &amp;quot;Who manages every employee?&amp;quot; An analysis
should only be considered adequate if it is able to find
such a query ambiguous between an interpretation of
&amp;quot;every&amp;quot; as &amp;quot;all&amp;quot; and also as &amp;quot;each.&amp;quot; In PTQ Monta-
gue provided a solution to the familiar problem of the
multiple readings of such sentences as &amp;quot;A woman loves
every man.&amp;quot; Under one reading there is a single woman
who (magnanimously) loves each and every man, while
under the other reading there is, for each man, some
woman or other who loves him. A similar problem
arises with respect to the interaction between ordinary
and question terms, as in &amp;quot;Who manages every em-
ployee?&amp;quot;
Under one reading the questioner wishes to know
what individual(s) manage all of the employees, where-
as under the other reading what is wanted is really a set
of ordered pairs, viz., for each employee, the set of
individuals who manage him/her. Our interpretation of
English questions must permit both readings, since
either one is possible; the problem of disambiguating
between the two is best left, as in PTQ, to a later stage
that has access to domain-dependent meaning postu-
ates.
In order to get these readings, we propose making a
change in the standard interpretation of the English
word &amp;quot;every&amp;quot;. It is well known that this work is
ambiguous—in some cases it means &amp;quot;all&amp;quot; and in others
&amp;quot;for each&amp;quot;. This is precisely the ambiguity in this case,
and we must provide for both readings.
The first reading, where &amp;quot;who&amp;quot; has wider scope than
&amp;quot;every,&amp;quot; presents no problems.
who manages every employee
who [it-NOM-0] manages every employee
Computational Linguistics, Volume 14, Number 4, December 1988 17
James Clifford Natural Language Querying of Historical Databases
</bodyText>
<equation confidence="0.9582072">
[it-NOM-0] manages every employee = ==&gt;
Vx[EMP&apos;(i)(x) —&gt; MGR&apos;(i)(x0) A manage&apos;(i)(x,,x)]
who --- =&gt; AP3y[y(i) = u A P(i)(y)]
who manages every employee —&gt; 3y[y(i) = u
A Vx1EMP&apos;(i)(x) MGR&apos;(i)(y) A manage&apos;(i)(y,x)]]
</equation>
<bodyText confidence="0.9992199">
The other reading requires the opposite scoping.
Who manages every employee
every employee who manages [it-ACC-0]
as well as a different meaning for &amp;quot;every employee.&amp;quot;
The desired reading is accomplished by allowing
&amp;quot;every&amp;quot; to be ambiguous between its standard meaning
&amp;quot;for all&amp;quot; and its interrogative meaning of &amp;quot;for each&amp;quot;, in
which it is essentially synonymous with &amp;quot;which&amp;quot;.
With this treatment of &amp;quot;every&amp;quot; we obtain the desired
second (and more likely) reading.
</bodyText>
<equation confidence="0.954577333333333">
who manages [it-ACC-0] —&gt; 3y[y(i) = u A MGR&apos;(i)(y)
A EMP&apos;(i)(x0) A manage&apos;(i)(y,x0)]
every employee --&gt; AP3z[z(i) = v A EMP&apos;(i)(z) A P(i)(z)]
who manages every employee?
—&gt; AP3z[z(i) = v A EMP&apos;(i)(z) A P(i)(z)]
(AiAx03y[y(i) = u A MGR&apos;(i)(y)
A EMP&apos;(i)(xo) A manage&apos;(i)(y,x0)])
—&gt; 3z3y[z(i) = v A EMP&apos;(i)(z)
A y(i) = u A MGR&apos;(i)(y) A manage&apos;(i)(y,z)]
</equation>
<bodyText confidence="0.999659942857143">
which denotes a set of ordered pairs &lt;u,v&gt; such that u
manages v.
The problem of multiple wh-questions has a rather
simple solution if one is willing to restrict one&apos;s atten-
tion to questions that involve only one wh-word; it is
well known, however, that multiple wh-words require a
considerably more complex treatment if the semantics
is to be defined compositionally as in a Montague
framework it must (Kuno and Robinson 1972). Further-
more, within the database context a restriction to single
wh-questions would be too severe a constraint—it
would limit the language to queries that return relations
over only a single attribute.
We will discuss a number of different possible solu-
tions to this issue of multiple wh-questions and ulti-
mately adopt one as our solution. We will see, however,
in the course of this presentation, that there are consid-
erable technical difficulties in defining the semantics in
such a way as to get it all to come out right for both
single and multiple wh-questions. The solution that we
adopt, involving the addition of a formally specified
pragmatics for the fragment, does have this property in
addition to meeting our other criteria; moreover, the
simplicity of our solution, as contrasted with the con-
siderable complexity in other proposals for a question
semantics, e.g., Bennett (1977, 1979) and Hausser and
Zaefferer (1978), makes it especially attractive. How-
ever, it is clear that many researchers have found the
same kinds of difficulties in extending Montague&apos;s work
in the direction of interpreting questions, and that
further work in this area is needed. We hope that our
proposal to treat the answering of a question as a
component of a formally specified pragmatics of the
language, apart from its semantics, is a step in the
proper direction.
</bodyText>
<sectionHeader confidence="0.5086565" genericHeader="method">
3.5 THE QE-III THEORY OF QUESTIONS
3.5.1 INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999990580645161">
We first present a general view of the substance of our
theory of the interpretation of questions and then dis-
cuss how this theory is carried out technically for the
various types of questions that we consider. Our goal is
a formal interpretation of questions as the set of their
correct answers with respect to an index and a model
(state and database.) This viewpoint is inspired by the
relational database querying paradigm, wherein a query
denotes the relation that is its answer in the current
state of the database. It will be important to keep in
mind the distinction between objects in a model for IL,
and objects in the relational database model. In the
relational model, particularly when dealing with the
relational algebra, one tends to think of all relations as
being the same kind of object. One projects and joins
relations at will, since these relational operators are
defined generically. However, models for IL, are
strongly typed: considerations of the domains and
ranges of functions are of critical importance. Within
IL,, e.g., a one-place relation of individuals is a function
from De to D, (denoted by expression of type &lt;e,t&gt;), a
two-place relation of individuals a function from De to
functions from De to D, (denoted by expressions of type
&lt;e,&lt;e,t&gt;&gt;), etc. Thus, under our theory, a question
such as &amp;quot;Who manages Peter?&amp;quot; is pragmatically inter-
preted (in a sense to be made clear below) as an object
of a completely different type from the interpretation of
a question such as &amp;quot;Who manages whom?&amp;quot; Later on we
will see that this theory does not fall within the main-
stream of the logical theories for question semantics
that have been proposed.
</bodyText>
<subsectionHeader confidence="0.715954">
3.5.2. YES-NO QUESTIONS
</subsectionHeader>
<bodyText confidence="0.999476764705883">
A semantic analysis of yes-no questions (YNQs) that
meets the criteria set forth in the introduction to this
section is not difficult to obtain. Since we want to
interpret YNQs as either &amp;quot;yes&amp;quot; or &amp;quot;no&amp;quot; (or equiva-
lently T or F, or 1 or 0), they can be defined to denote
objects in {0,1}. But this is just the denotation set of the
corresponding declarative sentence that expresses the
proposition that the YNQ asks. Thus we easily meet our
criteria by providing that a YNQ denote the same
proposition as that denoted by the declarative sentence
from which it was derived. For example,
3-1. John manages the shoe department.
would roughly be translated as: manage&apos;(i)(John, shoe
dept.)
This formula is true with respect to a state s just in
case John manages the shoe department in that state.
Our analysis of the corresponding question &amp;quot;Does John
</bodyText>
<page confidence="0.947924">
18 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<bodyText confidence="0.957568333333333">
James Clifford Natural Language Querying of Historical Databases
manage the shoe department?&amp;quot; provides that it is de-
rived syntactically from &amp;quot;John manages the shoe de-
partment&amp;quot; and that semantically it denotes the same
object in the model. The pragmatic interpretation of this
question is represented by the formula: manage&apos;
(now)(John, shoe dept.), which in effect &amp;quot;questions&amp;quot;
the model as to its truth or falsity in the same way that
a YNQ questions the database for the response &amp;quot;yes&amp;quot;
or &amp;quot;no.&amp;quot; This analysis is provided by the following pair
of syntactic and semantic rules for our fragment, and by
the pragmatic rules to be introduced in Section 3.5.6:
</bodyText>
<equation confidence="0.862004833333333">
S101. (YNQ Formation)
&lt;Floia,&lt;t&gt;,YNQ&gt; and &lt;Fioib,&lt;t&gt;,YNQ&gt;
FlOla( = #AUX0* where 0* is 0 with the &amp;quot;first
verbs&amp;quot; unmarked.
Fion,(0) = &amp;quot;Is it the case that&amp;quot; 0
T101. Floia(0) and Flolb(0) ==&gt; 0&apos;
</equation>
<bodyText confidence="0.987614461538461">
This == =&gt; notation is used in each translation rule that
is not an instance of the general rule of function appli-
cation. In this case it indicates that the translation of the
expression formed by performing the operation Floia (or
Flolb) on the input string 4) is exactly the same as the
translation that has already been assigned to 4), which
we denote with the notation 4)&apos;. This semantic account
works, since we want the interpretation of the yes-no
question to be the same as the interpretation of the
declarative sentence from which it is derived.
In what follows we examine the more difficult prob-
lem of defining compositionally a model-theoretic se-
mantics for general wh-questions.
</bodyText>
<subsectionHeader confidence="0.903122">
3.5.3 WH-QUESTIONS
</subsectionHeader>
<bodyText confidence="0.999868">
We first present a semantic solution that does provide
for a successful interpretation for questions involving
only one wh-word, e.g., &amp;quot;Who manages Peter?&amp;quot; This
solution has its simplicity to recommend it, but is
unfortunately unable to accommodate multiple wh-
questions. We then examine a number of alternative
solutions to illustrate some of the many problems in-
volved in attempting to accommodate these multiple
questions.
It is obvious linguistic fact that question words like
&amp;quot;who,&amp;quot; &amp;quot;what,&amp;quot; &amp;quot;whom,&amp;quot; etc. behave syntactically in
much the same way as terms like &amp;quot;Peter&amp;quot; or &amp;quot;an
employee&amp;quot; (e.g., Hamblin 1973). In subject position
there is virtually no difference.
</bodyText>
<subsectionHeader confidence="0.826177">
Interrogative Declarative
</subsectionHeader>
<bodyText confidence="0.910736">
who manages Peter manages
the shoe department the shoe department
who [it-0] manages Peter [it-0] manages
the shoe dept. the shoe dept.
while in object position there is so-called wh-Q-
movement:
</bodyText>
<figure confidence="0.871180142857143">
Interrogative Declarative
What does Peter manages
Peter manage? the shoe department.
Peter manages what the shoe Peter manages
[it-0]
/ \ department
what Peter manages [it-0]
</figure>
<bodyText confidence="0.806248208333334">
Nonetheless in both cases the question word takes the
role of a term syntactically. Semantically, however,
there is a difference. Whereas ordinary terms refer to an
individual or a set of individuals in the model (actually
in PTQ to the set of properties of these individuals, but
this point need not concern us here), question terms
seem in some way to refer to the set of all possible
individuals that, when substituted for the individual
variable in a matrix, makes the resulting formula true.
This observation leads to the consideration that ques-
tion words should denote, not sets of properties of sets
of individuals, but rather functions from sets of proper-
ties to sets of individuals that have those properties.
The following table makes this analogy clearer.
Term Logical Translation Logical Type
Peter AP3x[x(i) = Peter A P(i)(x)] «s,«s,e&gt;,t»,t&gt;
an employee AP3x[EMP(i)(x) A P(i)(x)] &lt;&lt;s,«s,e&gt;,t»,&lt;e,t»
who APAu3x[x(i) = u A P(i)(x)]
Because of the similarity of these wh-words to ordinary
terms, both syntactically and semantically, we shall
refer to them as wh-terms. The schematic essentials of
the translations of two of the above examples will show
how this analysis of the semantics of wh-terms provides
the desired analysis of the wh-question.
</bodyText>
<equation confidence="0.960521285714286">
Peter = =&gt; AP3x[x(i) = Peter A P(i)(x)]
[it-NOM-0] manages the shoe
department = =&gt; manage&apos;(i)(xo,shoe-dept)
Peter manages the shoe department = =&gt;
AP3x[x(i) = Peter A P(i)(x)](AiAxomanage&apos;(i)(xo,shoe-dept))
—&gt; 3x[x(i) = Peter A manage&apos;(i)(x,shoe-dept)
who = =&gt; APAu3x[x(i) = u A P(i)(x)]
</equation>
<bodyText confidence="0.592454">
who manages the shoe department = =&gt;
</bodyText>
<equation confidence="0.988965">
APAu3x[x(i) = u A P(i)(x)](AiAxomanage&apos;(i)(xo,shoe-dept))
—&gt; Au3x[x(i) = u A manage&apos;(i)(x,shoe-dept)
</equation>
<bodyText confidence="0.985390444444444">
The first example demonstrates the PTQ-like analysis of
a declarative sentence translating into a formula whose
interpretation in the model with respect to a given state
is a truth value. The second example provides an
analysis of an interrogative sentence containing a single
wh-term, using an analogous substitution rule. We
obtain an expression of type &lt;e,t&gt; whose denotation
with respect to an index is a set of entities, viz., the set
Computational Linguistics, Volume 14, Number 4, December 1988 19
James Clifford Natural Language Querying of Historical Databases
of entities who manage the shoe department in that
state.
This analysis, unfortunately, cannot be generalized.
Although it can also be made to provide the desired
analysis for single wh-terms in direct or indirect object
position, it will not allow for multiple wh-questions. To
see why this is the case, consider what the S and T rules
for the above analysis might look like.
</bodyText>
<subsectionHeader confidence="0.844036">
SwH•
</subsectionHeader>
<bodyText confidence="0.9963155">
If a is a WH-Term and 4) is a formula, then FwH_n
(a,4)) is a WH1-?, where Fw}4_,, (a,4)) would be
defined as some sort of substitution of a for the
first occurrence of xr,, and the appropriate pro-
noun for each subsequent occurrence, as in the
PTQ substitution rules.
</bodyText>
<subsectionHeader confidence="0.455203">
TwH•
</subsectionHeader>
<bodyText confidence="0.995976821428571">
FSWHfl (a,4)) ==&gt; a&apos;(AiAxr,[01).
Notice that this rule, unlike the analogous substitution
rules in the PTQ fragment, cannot be applied recur-
sively to its output. This is because the PTQ rules are of
the form Pa + Qo = =&gt; Ro (i.e., an expression of type
a combines with an expression of type s to yield
another expression of type 0) whereas this rule is of the
form Pa + Qo = =&gt; Ry (i.e., the output is of a different
type from either of the inputs).
A number of alternatives present themselves at this
point to allow for an analysis of multiple wh-questions
within this framework. The first requires that wh-terms
have different flavors (whoo, who,, who,, . . .) depend-
ing on the meaning of the expression into which they are
substituted for a free variable. The second requires
subcategorizing the category term, and substituting all
terms in for free variables at one time. The third, and
the one we have adopted, achieves the same semantic
effect as the Rule T-WH, but in a two-stage process
involving a separate pragmatic component. We will
examine each of these ideas in turn. First, however, a
word about substitution.
In the PTQ analysis, a term can become a constituent
part of a sentence either by directly combining with
some other constituent, or indirectly by means of sub-
stitution for a free variable that has been so directly
combined. For example, consider the following two
PTQ-like derivations of the sentence &amp;quot;John works&amp;quot;.
</bodyText>
<figure confidence="0.750619833333333">
John works S4 John works S14
/\ / I \
/ I \
John work John 0 he-0 works S4
/\
he-0 work
</figure>
<bodyText confidence="0.985887714285714">
Under the semantic analysis of PTQ it turns out that
these two derivations receive the same translation, and
hence the same &amp;quot;meaning.&amp;quot; But the substitution rules
are not gratuitous. They are introduced as a theory to
account for pronomial co-reference and quantifier scop-
ing. The following example illustrates how pronomial
co-reference is handled by means of one of the substi-
tution rules.
An employee manages and he works S104
An employee #manage and he #work S14,0
an employee [it-NOM-0] #manage and
[it-NOM-0] #work Si!
/\
a employee [it-NOM-0] [it-NOM-0]
#manage #work
In this derivation, the Substitution Rule S14,0 provides
for the reading in which the same individual is the
referent of the terms &amp;quot;an employee&amp;quot; and &amp;quot;he&amp;quot;. The
same problem of accounting for co-reference occurs in
the consideration of the semantics of questions, as the
following example illustrates3.
3-2. Who manages an employee such that he manages
him?
The PTQ theory of co-reference, extended to allow
substitution of wh-terms, is equally able to capture the
fact that &amp;quot;who&amp;quot; and &amp;quot;him&amp;quot; are co-referent, as are &amp;quot;an
employee&amp;quot; and &amp;quot;he&amp;quot;. Under our analysis, this sentence
would be derived as follows:
Who manages an employee such that he manages him?
Who #manage an employee such that he manages him?
who [it-NOM-0] #manage an employee such that
[it-NOM-0] manages him.
This idea of extending the PTQ theory of co-reference
to the case of interrogatives is not ours. It is used in
most of the work on question semantics in the Monta-
gue Grammar tradition (including Karttunen 1977, Ben-
nett 1977, 1979, and Belnap 1982). It is that theory that
we have incorporated into our fragment. Because ques-
tion words in our fragment are always assumed to have
the entire sentence as their scope (i.e., there are no
embedded question clauses), and because of the exten-
sional nature of our theory as dictated by the database,
question words can always be brought in indirectly by
means of substitution rules. The difference in our re-
spective treatments lies in our attempts to formalize the
meaning given to questions.
Let us take a look now at why the analysis we have
presented so far cannot be extended to multiple wh-
questions. According to that analysis, the derivation of
</bodyText>
<page confidence="0.613249">
20 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<note confidence="0.229924">
James Clifford Natural Language Querying of Historical Databases
</note>
<bodyText confidence="0.582777">
a question like &amp;quot;Who manages what?&amp;quot; is blocked after
the first wh-term is brought in.
</bodyText>
<equation confidence="0.8002029">
BLOCKED!
/ \
who [it-NOM-0] manages what
/ \
what [it-NOM-0] manages [it-ACC-1]
[it-NOM-0] manages [it-ACC-1] = =&gt;
manage&apos;(i)(x0,x1) (PTQ-rules)
what = =&gt; APAu3x[x(i) = u A P(i)(x)]
[it-NOM-0] manages what = =&gt; ApAu3x[x(i) = u A p(i)(x)]
Au3x[x(i) = u A manage&apos;(i)(x0,x)]
</equation>
<bodyText confidence="0.993752875">
Syntactically the derivation is blocked because the
proposed Rule S-WH only allows a wh-term to combine
with a string in the category sentence, and under the
analysis &amp;quot;[it-NOM-0] manages what&amp;quot; is not a sentence.
More to the point is the semantics. &amp;quot;Who&amp;quot; denotes a
function from sets of properties to sets of individuals
(having those properties), and the meaning of &amp;quot;[it-
NOM-0] manages what&amp;quot; is not an appropriate argument
for such a function.
But suppose that the &amp;quot;who&amp;quot; that combined with
formulas to form expressions denoting sets of individu-
als were a different function from the &amp;quot;who&amp;quot; that
combined with expressions denoting sets of individuals
to form expressions denoting sets of ordered pairs of
individuals, etc.? Suppose, that is, that the English
&amp;quot;who&amp;quot; were really a syntactic realization of a number
of different meanings, whoo, whoi, etc., as follows:
whoo combines with propositions to form a set of
individuals,
whoi combines with sets of individuals to form a set of
ordered pairs, and in general,
whoi combines with sets of ordered i-tuples to form sets
of ordered i+ 1-tuples
These different functions of the English &amp;quot;who&amp;quot; would
be captured by their different translations into the logic
(reflecting their interpretation as different semantic
functions).
who-word Translation Type
whop APAu3x[x(i) = u A P(i)(x)1 &lt;&lt;s,&lt;s,e&gt;,t&gt;,&lt;e,t&gt;&gt;
who, ARAvAw3z[z(i) = v A R(i)(z,w)) «s,«s,e&gt;,&lt;e,&gt;»,&lt;e,&lt;e,t&gt;»
With this analysis we could complete the above deriva-
tion, previously blocked, as follows:
</bodyText>
<equation confidence="0.981700428571428">
[it-NOM-0] manages what = =&gt;
Au3x[x(i) = u A manage&apos;(i)(x0,x)]
who (as who-1) ==&gt; ARAvAw3z[z(i) = v A R(i)(z,w)]
who manages what = =-&gt; ARAvAwaz[z(i) = v
A R(i)(z,w)](AiAx0Au3x[x(i) = u A manage&apos;(i)(x0,x)])
--) AvAw3z3x[z(i) = v A x(i) = w
A manage&apos;(i)(z,x)]
</equation>
<bodyText confidence="0.999961083333333">
In theory there would be an infinite number of such
(related) meanings to the word &amp;quot;who,&amp;quot; one for each
natural number n, and we could even give a rule for
generating these meanings inductively from the single
meaning of whoo. In practice (and computationally),
since ordinary English (and even &amp;quot;database-ese&amp;quot;) al-
lows for only a small number of terms in only a small
number of places (subject, direct and indirect objects,
object of preposition, &amp;quot;list. . .&amp;quot; requests, etc.) only a
small number would actually ever be used in any normal
English question. The S and T rules for this analysis
would be something like the following:
</bodyText>
<subsectionHeader confidence="0.417256">
SWH-n •
</subsectionHeader>
<bodyText confidence="0.96868275">
If a E PWH-Term-i and g E Pm? (i.e. g denotes a set
of i1 -tuples), then FwH,,i(a, E P?o, where
FwH,„(a, 13) is the result of replacing the first
occurrence of [it-CASE-n] in g with a, and replac-
ing all subsequent occurrences of [it-CASE-n] in 13
with he/she/it or him/her/it, respectively, accord-
ing to the gender of a and the CASE of [it-CASE-
n].
</bodyText>
<equation confidence="0.762858">
TWh-n •
Fwxn(a, ==&gt; ce(AiAxnp&apos;)
,
</equation>
<bodyText confidence="0.957903">
Moreover, to account for derived wh-terms like &amp;quot;which
employee&amp;quot; in &amp;quot;which employee sells shoes?&amp;quot;, we could
extend this analysis to the interrogative determiners
&amp;quot;which&amp;quot; and &amp;quot;what&amp;quot;. This would dictate that which°
combined with employee to form [which employee]°,
which, with employee to form [which employee]1, etc.,
of the appropriate types.
This analysis, while inelegant, is not really so far-
fetched. After all, in asking, &amp;quot;Who manages John?&amp;quot;
&amp;quot;who&amp;quot; is in some way asking for a set of individuals,
viz., those that manage John. In asking, &amp;quot;Who manages
whom?&amp;quot; however, rather than asking for a set of
individuals, &amp;quot;who&amp;quot; is asking in conjunction with
&amp;quot;whom&amp;quot; for a set of ordered pairs such that the first
component manages the second component. A theory
such as the above sketch would claim that English
allows for these many semantic functions of interroga-
tive terms to be performed by the same surface words
like &amp;quot;who&amp;quot;.
We might also point out here a closely related alter-
native to this approach. Instead of having an infinite
number of meanings for each wh-term, we could suffice
with one and allow an infinite number of syntactic and
semantic rules for performing the substitutions. These
rules would perform the necessary conversions of the
meanings, not of the wh-term, but of the sentential form
into which it is being substituted. Thus, e.g., the
T-WH-1 rule for combining &amp;quot;who&amp;quot; with &amp;quot;[it-NOM-0]
manages whom&amp;quot; would form the following expression
(where WHO* stands for the translation of &amp;quot;who&amp;quot;):
Aw[WHOIAiAx00*(w)l]
Computational Linguistics, Volume 14, Number 4, December 1988 21
James Clifford Natural Language Querying of Historical Databases
For example, combining &amp;quot;who&amp;quot; with &amp;quot;[it-NOM-0]
manages what&amp;quot;:
</bodyText>
<equation confidence="0.998721666666667">
who =- =&gt; APAv3y[y(i) = v A P(i)(y)]
[it-NOM-0] manages what = =&gt;
Au3x[x(i) = u A manage&apos;W(xo,x)]
who manages what = ==&gt;
Aw[APAv3y[y(i) = v A P(i)(y)]]([AiAx0[Au3x[x(i) = u
A manage&apos;(i)(x0,x)](w)])
Aw[APAv3y[y(i) = v A P(i)(y)]]
([AiAx0[3x[x(i) = w A manage&apos;(i)(x0,x)]]])
AwAv3y3x[y(i) = v A x(i) = w A manage&apos;(i)(y,x)]
</equation>
<bodyText confidence="0.983008898734178">
Notice that this rule schema essentially converts the
one-place relation denoted by one of its arguments
(&amp;quot;[it-NOM-O] sells what&amp;quot; in the example) into a formula
(by function application to the new individual variable
w) in order to allow the single meaning of &amp;quot;who&amp;quot; to
apply. Lastly, it A-abstracts this variable w over the
result in order to obtain a two-place relation. A slightly
unfortunate result of this rule is that the order of the
individuals in the relation is exactly opposite from the
order in which the wh-terms were quantified.
A second possible approach that would handle mul-
tiple wh-questions would dispense with this essentially
inductive treatment of i-place questions and attack the
problem all at once. Such a theory would derive all
questions in the same manner, by simultaneously sub-
stituting all wh-terms into the matrix sentence, keeping
track of which terms were substituted for which varia-
bles. For example, the question &amp;quot;Who supplies what to
which departments such that they sell shoes?&amp;quot; would be
analyzed as follows:
&amp;quot;Who supplies what to which departments such that
they sell shoes?&amp;quot;
who:0 [it-NOM-0] supplies [it-ACC-1] to
[it-DAT-2]
what:1 such that [it-NOM-2] sells shoes
which department:2
Either of these two basic theories is possible; we have
rejected them both for a number of reasons. First, the
use of an infinite number of meanings for wh-terms and
wh-determiners (or an infinite number of rules schemas
for their substitution) requires the same technique for
each of the tense rules, and for each of the tense rules
with time adverbials, and for each of the when-question
rules, the rules for when-questions with tenses, for
when-questions with tenses and time adverbials, etc. In
other words, accepting a solution that types all ques-
tions differently depending upon what they ask for
forces the inclusion of rule schemas for all of the other
semantic functions that in a simple theory would oper-
ate only on one type, the type given to sentences. (Later
we will discuss how the solutions of Bennett (1977,
1979), Belnap (1982), and of Hausser and Zaefferer
(1978) entail a similar rippling effect of complexity
throughout the rest of the semantic theory already
developed for declarative sentences.)
For an example of this effect in the theory under
consideration, consider what the rule for adding past
tense to a sentence would look like. (Recall our argu-
ments for the necessity of treating tense as a property of
the entire sentence.) Such a rule would have to be of the
form Pa + -ED = =&gt; Qa, where a could be the
category declarative sentence (type t), 1-term question
(type &lt;e,t&gt;), 2-term question (type &lt;e,&lt;e,t&gt;&gt;), etc.
Because of the strict typing system of ILs (and of the
categorial grammar of the PTQ theory of English syn-
tax), this would require an infinite number of such rules,
one for each of the possible input categories. While such
a scheme is possible, it seems to violate a concern for
simplicity and elegance.
An additional problem with a theory dependent upon
simultaneous substitution is a difficulty of conceiving of
it in semantic terms. While the translation rules for such
a theory can probably be described (they would be
somewhat complicated), they strongly suggest the view
that the translation rules themselves are the semantics,
when in fact they are nothing more than syntactic
operations on strings of logical symbols. (This is a
common problem for people working with Montague
Grammars, occasioned by the indirect way that the
semantics for English is specified. Dowty (1978) refers
to this problem when he reminds us that &amp;quot;the transla-
tion is a completely dispensable part of the [PTQ]
theory. The &apos;real&apos; semantic interpretation of an English
sentence is the model-theoretic interpretation of its
translation and nothing but the model-theoretic inter-
pretation of that translation.&amp;quot;) When examined in terms
of the semantic space of functions in the model, it is not
clear what simultaneous substitution in the syntax de-
notes model theoretically.
</bodyText>
<subsectionHeader confidence="0.726852">
3.5.4 TEMPORAL QUESTIONS
</subsectionHeader>
<bodyText confidence="0.99992115">
When-questions are different from any of the questions
we have considered so far for three reasons. First, they
ask about an object of a different logical type: all of the
questions we have considered have been treated as in
some way referring to sets of n-tuples of individuals (of
type e); when-questions, on the other hand, refer to
states (of type s).
Second, although sentences can and do make refer-
ence to more than one time (&amp;quot;I know that John was
here&amp;quot;), multiple when-questions are very infrequent. In
most situations &amp;quot;when&amp;quot; in English can generally only
be asked once in a given sentence. &amp;quot;When and when
. . .?&amp;quot; does not make sense, and questions like &amp;quot;When
did John come and when did he leave?&amp;quot; are really two
conjoined questions.4 We have not accounted for mul-
tiple when-questions of these sorts in our theory. An
interpretation for them could be formulated in a manner
analogously to our treatment of multiple wh-questions,
but this would require modifying the treatment of time
(modeled after Montague&apos;s) in the semantics. We will
</bodyText>
<page confidence="0.95054">
22 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<note confidence="0.401369">
James Clifford Natural Language Querying of Historical Databases
</note>
<bodyText confidence="0.9978635">
have more to say about this in our discussion of
pragmatics.
Finally, when combining with wh-terms, &amp;quot;when&amp;quot;
must be brought in last to have the widest scope, for
essentially the same reasons that led to the recognition
that tense had to have widest scope. Moreover, some
account must be given of how &amp;quot;when&amp;quot; interacts with
our treatment of tenses, the other major temporal
indicator in the surface structure of English. The fol-
lowing example indicates how &amp;quot;when&amp;quot; is introduced
into a sentence and captures the variable i in all of its
free occurrences.
</bodyText>
<figure confidence="0.974520428571429">
When did John work?
/ \
/
when (PAST) John #work
John #work —&gt; EMP,&apos;(i)(John)
When did John work? —* ApAil &lt; i]
A p(ii)](AiEMP,&apos;(i)(John))
</figure>
<construct confidence="0.656316">
—* Ai,[[i, &lt; i] A (AiEMP,&apos;(i)(John)(i1)]
—&gt; Ai,[[i, &lt; i] A EMP,&apos;(ii)(John)]
</construct>
<bodyText confidence="0.9841145">
Thus the question is interpreted as asking for the set of
times in the past at which John was an employee.
</bodyText>
<subsectionHeader confidence="0.558771">
3.5.5 PRAGMATICS OR SEMANTICS?
</subsectionHeader>
<bodyText confidence="0.999968">
Most theories of question semantics, including those
sketched above, and those of a number of other re-
searchers in the Montague framework to be discussed
shortly, make significant complications to the semantics
of other parts of the PTQ analysis in order to incorpo-
rate these new sentences. Perhaps we are overtaxing
the semantic component of our language theories, ask-
ing it to do for us more than it was intended to do. For
example, most theories of question semantics have
attempted to include some representation of the answer
of the question as part of its denotation. Is there not
something odd in a theory that holds that a question
denotes its answer, especially if one has tried (or tried
not) to think of denoting as a formal counterpart to the
intuitive notion of meaning? Yet in one form or another
(denoting the set of possible answers (Hamblin 1973),
the set of correct answers (Karttunen 1977), functions
from sequences of individuals to propositions (Bennett
1977, 1979 and Belnap 1982), and our sets of n-tuples of
individuals) many researchers have been investigating
ways to accomplish this in a formal semantics. The
similarity between wh-terms and unbound pronouns
(&amp;quot;Who loves whom?&amp;quot; versus &amp;quot;He loves him&amp;quot;) suggest
another approach, viz., one in which
</bodyText>
<listItem confidence="0.896248285714286">
1. the semantic component provides that questions
denote as declarative sentences (with unbound
pronouns) do, and
2. the pragmatic component provides that questions
are interpreted as requests for their answers.
Pragmatics is the least understood branch of the tripar-
tite division of the study of language that Morris (1938)
</listItem>
<bodyText confidence="0.987430385826772">
proposed in his theory of semiotics. This century has
seen tremendous successes in the development of for-
mal logical syntax and model-theoretic semantics, but
very little in the way of formal pragmatics. (Martin
(1959) is an early attempt in this direction.) Marcis-
zewski (1971) and more recently Levinson (1983) to-
gether contain a thorough analysis of the various ap-
proaches that have been taken to define the scope of
linguistic pragmatics, from its origin in Morris&apos;s defini-
tion of semiotics (Morris 1938) to the present day. It is
obvious from these accounts that there has been less
agreement as to the scope of this branch of the field.
Morris (1938) originally defined pragmatics as the study
of &amp;quot;the relation of signs to interpreters.&amp;quot; Later, at least
partly in response to Carnap&apos;s proposal that &amp;quot;if in an
investigation explicit reference is made to the . . . user
of a language, then we assign it to the field of pragmat-
ics&amp;quot; (Carnap 1947), Morris felt the need to expand upon
this definition. In Morris (1946), he says that pragmatics
is &amp;quot;that portion of semiotic which deals with the origins,
uses, and effects of signs within the behavior in which
they occur.&amp;quot;
Montague&apos;s conception of pragmatics (Montague
1968, 1970a, and 1973), based upon Bar-Hillel&apos;s (Bar-
Hillel 1954) discussion of indexical expressions, repre-
sents a departure from the traditional view. Hamblin
(1973) felt that Montague&apos;s incorporation of a pragmatic
component directly in the syntax and semantics was
unconventional, and felt the need &amp;quot;to defend pragmat-
ics from this weakened interpretation . . . . Pragmatics
is the study of the use (not just reference) of language of
all kinds; or, if it is not, we need a new name for the
study that complements syntax and semantics. Monta-
gue&apos;s &apos;pragmatics&apos; would be better classed as a special
part of semantics.&amp;quot; Dowty (1978), while admitting that
&amp;quot;the linguist&apos;s use of the term pragmatics is far from
standardized,&amp;quot; adopts the view that it should encom-
pass direct and indirect speech acts, presuppositions,
and implicatures, and explicitly rejects Montague&apos;s use
of the term to encompass a treatment of indexical
expressions.
What we propose in our theory of questions is that
the proper place for considering the answer(s) to a
question is in a separate theory of pragmatics for the
language. We do not propose a completely general
theory of pragmatics. But we believe that incorporating
into our fragment a formal pragmatic component that
treats the notion of a response to a question is defensi-
ble as at least one component of a theory of language
use. In the first place, Montague notwithstanding, it falls
within the confines of pragmatics as that term is gener-
ally understood. For whether one speaks of &amp;quot;the use
and effects&amp;quot; of language (Morris 1946), the &amp;quot;relation of
signs to their interpreters&amp;quot; (Morris 1938), the notion of
&amp;quot;speech acts&amp;quot; (Dowty 1978), or the &amp;quot;linguistic means
for effecting literal purposes&amp;quot; (Kasher 1977), it is clear
that the notion of responding to a question is encom-
passed. Our attempt to formalize a pragmatic compo-
Computational Linguistics, Volume 14, Number 4, December 1988 23
James Clifford Natural Language Querying of Historical Databases
nent to QE-III accords well with what Stalnaker (1972)
sees as the goals of &amp;quot;a formal semiotics no less rigorous
than present day logical syntax and semantics.&amp;quot; Those
goals, he goes on to say, include an analysis of such
linguistic acts as &amp;quot;assertions, commands, . . . , re-
quests . . . to find necessary and sufficient conditions
for the successful (or perhaps in some cases normal)
completion of the act.&amp;quot;
A second argument in favor of this approach comes
from looking at the way that linguists have described the
concept of a question. Linguists have traditionally clas-
sified sentences into four distinct types: declarative,
interrogative, imperative, and exclamatory. A glance
through some standard text or reference books on
English grammar reveals two separate approaches to
the rationale behind this scheme. According to one
school, as in Roberts (1954), it is based upon the
&amp;quot;different kinds of meaning&amp;quot; a sentence may have. The
other school, as in Quirk and Greenbaum (1974), con-
siders that the distinction is based upon such criteria as
word order in the sentence, presence or absence of a
subject, the presence of an interjection, etc. Clearly the
disagreement is over whether to consider this a syntac-
tic or a semantic distinction. Perhaps in some sense it is
mainly a pragmatic one, reflecting both the use and
effects of the utterance.
Finally, this approach in its technical details is both
simple and elegant. It removes from semantics the
burden of providing an account of the response to a
question, and allows it to do what semantics theories
have always done best—account for reference. Then,
just as the semantics of a language is based upon its
syntax, the pragmatics is based upon both the syntactic
and semantic analyses (or, in Hamblin&apos;s phrase, it
&amp;quot;complements syntax and semantics&amp;quot;). The simplicity
with which we can state the pragmatic rules for our
fragment, which take into account the notion of the
answer to a question, is based upon this ability to have
both the syntax and the semantics at hand upon which
to build a theory of pragmatics. An example should
make this clear.
In QE-III, questions denote (a semantic concept) just
as declarative sentences do. Thus QE-III gives the
following semantic analyses for &amp;quot;Who manages
whom?&amp;quot; in the syntactic category wh-question, and for
&amp;quot;He manages him&amp;quot; in the category declarative sen-
tence.
who manages whom? ---&gt; 3x[x(i) = u2 A EMIV(i)(u1)
A AS-1(u1,x)]
he manages him —&gt; 3x[x(i) = u2 A EMP.&apos;(i)(11.1)
A AS-1(u1,x)[
Both are treated as denoting the same object with
respect to an index, a variable assignment, and a model.
But they are interpreted differently in the pragmatics.
Pragmatics in QE-III is a function that, given a deriva-
tion for an expression of QE-III together with its
syntactic category and its (semantic) denotation, re-
turns a (possibly) new object in the same model as its
pragmatic interpretation. Thus, although we view prag-
matics as a separate component of a language theory, it
is closely allied to the semantics—both provide inter-
pretations of linguistic expressions within the context of
the same logical model. The formal definition of the
pragmatic component of IL, results in these two sen-
tences, interpreted pragmatically, denoting what the
following expressions of IL, denote:
who manages whom? Au2AuI3x[x(i) = u2
</bodyText>
<figure confidence="0.729738333333333">
A EMP*&apos; (i)(ui) A MGR&apos;(i)(x) A AS-1(u1,x)]
he manages him —&gt; 3x[x(i) = u2 A EMP.&apos;(i)(ui)
A MGR&apos;(i)(x) A AS-1(u1,x)]
</figure>
<figureCaption confidence="0.455214">
The pragmatic interpretation of the question is the set of
n-tuples that answer it, while of the declarative sentence
is the same as its denotation.
</figureCaption>
<sectionHeader confidence="0.556916" genericHeader="method">
3.5.6 THE PRAGMATICS OF QE-III
</sectionHeader>
<bodyText confidence="0.999911756756757">
The pragmatics that we give here for QE-III is a simple
theory of the effects of producing an expression in that
language within the assumed context of a question-
answering environment. That is, we assume that a user
of QE-III is using the language to produce some effect
within this context, and it is this effect which we
formalize as the pragmatic component of the language
definition. We could, of course, have defined the prag-
matics in the same manner as the semantics was de-
fined, i.e., inductively over the syntax. However, in
doing so we would have seemed to be giving some
status or importance to the pragmatic interpretation of
expressions in every category of QE-III. Because we
had no real intuition about what the pragmatic interpre-
tation of, say, the expression &amp;quot;in 1978&amp;quot; represented, we
decided upon a different form of the definition. Accord-
ingly, our definition provides a pragmatic interpretation
for expressions in any of the several sentential catego-
ries of the language, namely T-YNQ, T-WHQ,
WHENQ, and T-t. (Section 3.2 contains a discussion
both of some of the issues involved in our decision to
present a separate pragmatic component to the formal
theory of QE-III, as well as some of the considerations
for the present form of this theory.)
The following preliminary definitions are needed
before stating the pragmatic rules.
1 By /a\ is meant a derivation tree for the meaning-
ful expression a of QE-III, as informally under-
stood from our discussion of the syntax. We
further assume that nodes of derivation trees are
labeled with ordered triples &lt;A,B,C&gt;, such that
A is the meaningful expression derived at that
node, B is its syntactic category, and C is the rule
of syntax applied at that step in the derivation.
For simplicity, we shall refer to component A of
the root of /a\ as a, and to the component B as
CAT(/a\).
</bodyText>
<page confidence="0.97558">
24 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<note confidence="0.373643">
James Clifford Natural Language Querying of Historical Databases
</note>
<listItem confidence="0.678249111111111">
2. The translation rules guarantee that correspond-
ing to any derivation tree /a\ for a E MEQE-III
there is a unique translation into IL,. By T(/a\)
shall be understood this unique translation, and by
Valm the denotation of /a\ provided indirectly via
T(/a\) with respect to the model M.
3. There are two standard ways of defining a (Tars-
kian) model-theoretic semantics. One is to define
the notion of denotation with respect to a model M
</listItem>
<bodyText confidence="0.76367925">
only, in which case formulas, e.g., denote the set
of their satisfying variable assignments. The
other, and more usual, procedure is to define the
denotation with respect to a model M and a
variable assignment g, in which case a formula
denotes either True or False. The two notions are,
for all practical purposes, equivalent. Since for
the purposes of pragmatics we shall want to
consider that open formulas denote the set of their
satisfying variable assignments, we shall in this
section refer to the notion of denotation with
respect to a model M only.
</bodyText>
<listItem confidence="0.896457631578947">
4. If Valm is a function whose domain is As(M), the
set of all possible variable assignments over M,
and if further V= {v1, . . . , vk} is a set of variables
of IL,, then by IIv([/alm) is understood the re-
striction of Va\bn to the domain V. Note that if V
= 0, then Ilya/aim is defined to be just Valm.
5. If f is any function with domain As(M), then
now(f) is the restriction of f to the domain
Asnow(M), where As. (M) = {g I g E As(M) and
g(i) = F(now)}, that is, that subset of the possible
variable assignments for M for which the distin-
guished time variable i is interpreted as denoting
that state denoted by the constant now.
6. By FV(/a\) we shall understand the set {i1, i2,
. . . , in} of indices of the variables (expressions of
the form [it-CASE-i]) occurring free in a. This
notion will not be defined rigorously here, but
would be defined inductively over the structure of
/a\ in the usual manner, with particular attention
</listItem>
<bodyText confidence="0.984789352941177">
paid to which rules bind occurrences of variables
(all of the PTQ substitution rules) and which rules
leave them free (e.g., the rules that introduce
wh-terms.) This definition would be analogous to
the definition of the set FVe of variables of type e
occurring free in a logical expression, in particular
in the expression T(/a9. It is clear that if FV(/a9
= {i1, . . . , in} then FV(TQa9 = , . . . , uiel.
However, we emphasize that FV(/a9 is defined
over the derivation tree of a (i.e., over the syntax
of QE-III) and make no reference to the (interme-
diate) translation of this tree into IL,.
7. Finally, if 13 is a meaningful expression of IL,, and
if the free variables of type e in p, FVe (0) =
u12, . . . , uiel, are such that 111,, u12, . . . , uie are in
alphabetical order, then LCFve (0) is the unique
expression:Auie . . . Auip formed by first prefixing
0 with Auit, then prefixing Atli, to the result, and so
on.
In order to understand the form of some of the following
definitions we state the following fact (the proof follows
directly from the translation rules of QE-III): If p is the
translation of any meaningful expression a of QE-III,
then the free variables of a are all of type e, except for
the possible exception of the distinguished variable i of
type S.
The rules of pragmatics that we now state constitute
a definition of the pragmatic function, in a manner
analogous to the way in which the translation rules
constitute a translation relation. In particular they con-
stitute a definition of the function P: P : /QE-III\ --&gt; M
U {ERROR}, which assigns to any derivation tree of a
meaningful expression a of QE-III, either an object in
the model M or the distinguished symbol &amp;quot;ERROR&amp;quot; as
its pragmatic interpretation.
P1. If CAT(/a9 {WHENQ, T-WHQ, T-t,
T-YNQ}
then P(/a9 = ERROR.
P2. If CAT(/a9 E {WHENQ, T-WHQ, T-t, T-
YNQ} then P(/a\) = 11FA/ (now (Pa\b,i))
Rule P1 ensures that only sentences have a pragmatic
interpretation. Rule P2 ensures that all sentences are
interpreted with respect to the &amp;quot;current&amp;quot; state index,
and that in the case of questions, the infinite sequences
of variables that the question denotes is projected down
to include only the questioned variables.
It is clear that the set of sequences given by IIFve
(now (Valm)) is equivalently represented by the deno-
tation of the expression LCFve (AiT(/a\)(now)) of IL,
with respect to M and g. P2 is therefore alternatively
defined as:
</bodyText>
<equation confidence="0.974195">
P(/a9 = [LCFve (AiT(/a\) (now))1m,g.
</equation>
<bodyText confidence="0.999578444444445">
What this alternative definition allows us to do is to
utilize the semantic notion of denotation to define the
pragmatic interpretation of sentences in QE-III. For it
allows us to take a translation T(/a9 of any sentence a
and determine its pragmatic interpretation as the deno-
tation of the expression LCFve (AiT(/a\)(now)) and thus
evaluate the pragmatic interpretation of a in terms of
the semantics of IL, by means of this simple syntactic
transformation on T(/a9.
</bodyText>
<sectionHeader confidence="0.771399" genericHeader="method">
3.5.7 CONCLUSIONS
</sectionHeader>
<bodyText confidence="0.984676827586207">
The QE-III theory defines the denotation of a question
in exactly the same way as the denotation of the
corresponding declarative sentence that has pronouns
in place of the interrogatives, but defines its pragmatic
interpretation as the set of n-tuples that answer it. We
have discussed our initial attempts to accomplish this
result directly, by having wh-terms denote functions
from sets of properties to sets of individuals that had
those properties. Technically, we discovered that to
Computational Linguistics, Volume 14, Number 4, December 1988 25
James Clifford Natural Language Querying of Historical Databases
accomplish this directly required a considerable com-
plication of the semantics throughout the structure of
our fragment. And we discovered, as we shall see, that
others with similar goals had also been forced to intro-
duce more complexity into their logical model in order
to accomplish these goals in the semantic component of
their theory. Finally, we realized that by eliminating as
a goal of the semantics the capturing of the answer(s) of
questions, we could leave the basic semantic theory of
PTQ intact, and moreover, we could easily accomplish
this goal in the pragmatics.
This concludes our informal discussion of the syntax,
semantics, and pragmatics of QE-III. We now proceed
to discuss the theory in relation to some of the other
work in the field of Montague Semantics which has
attempted to extend the PTQ fragment to include a
theoretical account of the syntax and semantics of
questions.
</bodyText>
<sectionHeader confidence="0.5000655" genericHeader="related work">
3.6 RELATED WORK
3.6.1 INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999956736842106">
Two common threads run through much of the recent
work on formalizing a theory of questions. The first is
the idea that all questions should be defined so as to
denote objects of the same type. Generally, this has
meant propositions or sets of propositions, but it seems
that even before the choice of just what questions
denote was made, this &amp;quot;single semantics&amp;quot; viewpoint
had been adopted. The other, as we have already
pointed out, is that some account of the answer(s) to a
question should be included at least as a component of
its semantics. When combined with other factors these
two biases have led to somewhat different results. Thus
Hamblin (1973) suggests that a question denotes the set
of all &amp;quot;propositions that count as answers to it&amp;quot;;
Karttunen (1977), &amp;quot;the set of propositions expressed
by[its] true answers&amp;quot;; Bennett (1977, 1979) and Belnap
(1982), who worked with Bennett on the theory, &amp;quot;sets
of open propositions:functions from sequences of indi-
viduals to propositions.&amp;quot;
</bodyText>
<subsectionHeader confidence="0.942273">
3.6.2 KARTTUNEN
</subsectionHeader>
<bodyText confidence="0.999944666666667">
As we have said, Karttunen (1977) presents an analysis
of the semantics of questions that falls within the single
semantics tradition. (Hamblin (1973) earlier proposed a
treatment similar to Karttunen&apos;s, but his theory was not
worked out in as much detail.) In Karttunen&apos;s theory,
for example, the question &amp;quot;Who manages John?&amp;quot;
would roughly be translated as: Ap3x[p(i) A p = Ai
[manage&apos; (i)(x)(i) ,John]) . Semantically, this expression,
when interpreted with respect to a model and a state,
denotes the set which contains, for each person x that
manages John, the proposition that x manages John.
Such a treatment of the semantics of questions seems
inappropriate to us for two related reasons. First, it
seems to confuse propositions with the sentences that
express them. Whatever a proposition might be in our
informal use of the term, it is in the formal system
defined by LLs a function from indices to truth values, or
equivalently a set of indices. In order to see why this
seems an inappropriate choice for the semantic object
denoted by a question, consider a model in which the
constants manage&apos; and love&apos; are interpreted as follows:
</bodyText>
<equation confidence="0.995536166666667">
11978 —0 f&lt;Mary, John&gt;, &lt;Susan, John&gt;}
F(manage&apos;) = 11979 —0 f&lt;Mary, John&gt;, &lt;Bill, John&gt;}
11980 ---&gt; {&lt;Bill, John&gt;}
11978 —&gt; {&lt;Bill, John&gt;, &lt;Susan, John&gt;}
F(love&apos;) = 1 1979 —&gt; {&lt;Bill, John&gt;}
I1980—.i I
</equation>
<bodyText confidence="0.832325428571429">
Now consider the two queries Qi: &amp;quot;Who manages John
in 1978?&amp;quot;, which translates to Ap3x[manage&apos;(1978)
(x,John) A p = Aimanage&apos;(i)(x,John)]; and Q2: &amp;quot;Who
loves John in 1978?&amp;quot;, which translates to Ap3x[love&apos;
(1978)(x,John) A p = Ailove&apos;(i)(x,John)]. Given these
translations, the interpretation of these two queries in
this model, 1Q11 and [Q2], is:
</bodyText>
<equation confidence="0.7493305">
[Q1] = {1978,1979} /*Mary manages John */
{1978} 1 /Susan manages John*/
[Q2] = {1978,1979} /*Bill loves John */
{1978} 1 /*Susan loves John */
</equation>
<bodyText confidence="0.99984846875">
Under this interpretation, both queries, which are ob-
viously quite distinct, denote exactly the same set of
propositions in the model, the set containing the prop-
osition {1978,1979} and the proposition {1978}. Thus
under this interpretation we cannot distinguish between
these two questions—they are semantically equivalent
in the database under this theory.
The second and related objection is that under this
interpretation all direct mention of the entities (Mary,
Susan, John, . . .) involved disappears. Instead, the
theory claims that the question denotes a set that
contains sets of states (years). What this implies is that
there is no obvious way of going backwards from these
objects in the model (the sets of propositions) to some
useful expression in a language (English) that names
them. Since in this theory the denotation of questions
loses the people involved, we have no simple way to
recover their names and report them to the questioner.
The theory neglects considering the use and effects of
the question. Moreover, there seems to be no way even
to add a pragmatic component to such a theory in order
to account for a question&apos;s answer(s), for on the one
hand the syntax has no mention of the names of the
individuals involved, nor on the other hand does the
denotation involve any individuals at all. In the prag-
matics of our theory the two queries would instead be
interpreted, with respect to a given database, as follows
(where [Qi] now means the pragmatic interpretation of
Qi): [Q1] = {Mary,Susan}, and [Q2] =
With these interpretations we have not lost the
people involved, and there is an obvious relationship
between these objects and English expressions for them
</bodyText>
<page confidence="0.919928">
26 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<note confidence="0.486282">
James Clifford Natural Language Querying of Historical Databases
</note>
<bodyText confidence="0.9975502">
(&amp;quot;Mary and Susan&amp;quot; and &amp;quot;Bill and Susan&amp;quot;), as well as
the relations in the database that express the same
information.5
understand it, we provide the following table of the
types of the variables used.
</bodyText>
<table confidence="0.987952571428571">
Variable symbols Type of variable symbol
P &lt;e,t&gt; : sets of individuals
r,s &lt;n,e&gt; : sequences of individuals
0 &lt;&lt;n,e&gt;,&lt;s,t&gt;&gt; : open propositions
Qi Q2
Mary Bill
Susan Susan
</table>
<bodyText confidence="0.999953547945206">
As noted earlier, Bennett discussed the issue of the
logic of questions in two separate papers, and collabo-
rated with Belnap in the development. Their theory is
presented cumulatively in Bennett (1977, 1979) and
Belnap (1982). Motivated again by the goal of a single
semantics, and even more strongly by a desire to
account for the individuals that answer the question,
Belnap and Bennett develop a theory that incorporates
sequences of individuals into the model theory. Thus a
question like &amp;quot;Whom does John love?&amp;quot; is treated as
denoting a set of functions from sequences of individu-
als to propositions. Essentially all and only those se-
quences that close the open proposition &amp;quot;John loves
[it-ACC-O]&amp;quot; and make it true are included in this
denotation. What this is tantamount to is incorporating
the standard (Tarskian) notion of a variable assignment
into the model theory, instead of leaving it in the meta
theory of the logic. For technical reasons the entire
system must be altered to include these sequences, so
that even sentences are no longer translated into formu-
las, but rather into expressions denoting sets of such
sequences. This rippling effect of the complications to
the semantics is extraordinarily reminiscent of the prob-
lems we had in formulating a theory with inductive
wh-terms.
In order to accomplish this result, the set of types of
the IL is expanded to include as a basic type n,
expressions of type n denoting a natural number. Thus
the natural numbers must be included as objects in the
model, as well as functions constructed from them. Of
particular interest in their theory are the functions from
N to individuals, i.e., sequences. The ripple effect
necessitates that &amp;quot;all expressions of English [denote]
functions from sequences of individuals to their usual
extensions&amp;quot; (Bennett 1979). Even sentences are no
longer translated into formulas, but rather into expres-
sions of type &lt;&lt;n,e&gt;,t&gt; that denote sets of sequences.
Unfortunately, the results of this complication to the
logic and the English translations do not seem to justify
the cost. Certainly this theory represents a step closer
to the goal of capturing explicitly in the denotation the
individuals that answer the question, so it is an improve-
ment over the proposition proposal. But these individ-
uals are hidden somewhere inside infinite sequences of
individuals, with no indication of their position within
those sequences.
An example should clarify this point. In order to
In the Bennett/Belnap theory, an open sentence
like &amp;quot;John loves him&amp;quot; is translated as: [As[love&apos;
([ APP(s(1))])(John&apos;)], which denotes (ignoring inten-
sions) the set of sequences such that John loves the first
member of each of them. The corresponding question
&amp;quot;Whom does John love?&amp;quot;6 would be: [A0[0 =
[As[ love&apos;([^APP(s(1))])(John&apos;)]] A 3r[vO(r)]]], which
denotes a set of open propositions. But these again
involve infinite sequences of individuals, and there is no
indication of which projection of these sequences rep-
resents the individuals that John loves.
This problem of having the individuals that constitute
the answer embedded in infinite sequences without
knowing how to project them out is the same one that
we have in our semantic theory. For our semantics
translates questions into open formulas, which denote
the set of variable assignments that satisfy the formula.
Our relegating to pragmatics the task of projecting these
variable assignments could also be used to solve this
problem here. But if this is the case, then what is gained
by paying the price for the complication to the model
theory and the translation rules? This use of sequences
in effect duplicates the variable assignment of their
Tarskian meta-theory (albeit restricted to the domain
De) in the object language and in the logical model with
no noticeable advantages.
</bodyText>
<subsectionHeader confidence="0.99477">
3.6.3 HAUSSER AND ZAEFFERER
</subsectionHeader>
<bodyText confidence="0.9993985">
The proposal of Hausser and Zaefferer (Hausser and
Zaefferer (1978) and hereafter H-Z) is quite different
from the other theories we have discussed, and makes a
number of interesting points. The theory is motivated
early in the paper by a discussion of the range of
answers that are possible to any given question, and a
classification of these possibilities as ranging from
&amp;quot;minimal&amp;quot; to &amp;quot;redundant&amp;quot;. For example, in answer to
the question &amp;quot;Who dates Mary?&amp;quot; the following list of
possibilities is cited:
</bodyText>
<listItem confidence="0.9121456">
a. Bill.
b. Bill does.
c. Bill does so.
d. Bill dates her.
e. Bill dates Mary.
</listItem>
<bodyText confidence="0.966837765625">
Answer (e), of course, is just what the propositional
approach would say that the question denotes (as-
suming Mary is going steady with Bill.) H-Z goes on to
say, however, that &amp;quot;the truth value of the answer
Computational Linguistics, Volume 14, Number 4, December 1988 27
James Clifford Natural Language Querying of Historical Databases
expression will depend on the question in the context of
which it is uttered, except for [the completely redundant
answer]. This shows that redundant answers are not
very interesting from a semantica point of view since
their semantic representation is identical to that of
ordinary declarative sentences. Since both redundant
and non-redundant answers are possible, and since
non-redundant answers are generally much more natu-
ral, we hold that no serious theory of questions and
answers should restrict itself to a treatment of redun-
dant answers alone, and that it should be able to handle
both.&amp;quot;
H-Z then proceeds to develop a theory to account for
all of these possible answers, by extending the PTQ
grammar and the logic IL. This theory replaces the
model theory of IL by what they call a &amp;quot;context-
model.&amp;quot; In essence this model is an IL-model expanded
to include as model-theoretic objects the entire language
of IL itself. Minimal answers are then translated into
expressions that denote formulas when interpreted
within the context of a preceding question. This is
accomplished technically by including in the logic a set
of context variables, and by including an abstraction
over a context variable in the translation of the non-
redundant answers. A context variable denotes an
expression of IL, viz., the question that has set up the
context. This idea of a context allows H-Z to define a
semantics not just for questions like &amp;quot;Who dates
Mary?&amp;quot;, but also for each of the answers (a) through (e)
in such a way that each of them is equivalent in
extension.
H-Z&apos;s concern with the semantics of the answers to
the questions, which at first sight seems to be our
concern, is in fact another issue. For our theory, while
it takes the answers of questions into account, is
essentially not a theory of answers but a theory of
questions. Of course, in the context of a more complete
and user-friendly question-answering system, the ability
to keep track formally of the context of the discourse
and to express the answer in a number of different
ways, is very attractive. Such a system would need the
ability to go &amp;quot;backwards&amp;quot; from expressions in the logic
to expressions in English with the same interpretation;
Friedman (1981) discusses this issue from the point of
view of the PTQ fragment. But the development in H-Z
of the semantics of the questions themselves, although
motivated from this different concern with the equiva-
lence of redundant and non-redundant answers, does
also lead them to an analysis of question semantics
outside of the single semantics framework. Their anal-
ysis &amp;quot;lets questions denote different types of sets ac-
cording to the type of that expression which is the
critical one in any kind of answer.&amp;quot; In other words,
their semantic analysis of answers is quite similar to our
pragmatic analysis of questions. The following table
comparing the types assigned to various kinds of ques-
tions by their semantics and our pragmatics might help
to make this analogy clearer.
</bodyText>
<table confidence="0.98964825">
Question class Our typing H-Z typing
yes-no &lt;e,t&gt; t
I individual &lt;e,&lt;e,t&gt;&gt; &lt;&lt;s,f(T)&gt;,t&gt;
2 individual &lt;&lt;s,f(T)&gt;,&lt;&lt;s,f(T)&gt;,t»
</table>
<subsectionHeader confidence="0.589793">
3.6.4 SCHA AND GUNJI
</subsectionHeader>
<bodyText confidence="0.998933931818182">
The work of Scha (1983) on the PHLIQA1 project and
Gunji (1981), both being developed concurrently with
the development of QE-III (Clifford 1982b), are remark-
ably similar in spirit, though not in detail, to the present
work. The close parallels in the motivation of these
three works indicate a trend among many researchers
toward developing a formal foundation for computer
systems that do natural language processing.
The major theoretical difference between QE-III and
that of the PHLIQA1 project of Scha are that we make
a distinction between the semantics and pragmatics of
sentences in QE-III, so that the pragmatic interpretation
of questions in QE-III is closely analogous to Scha&apos;s
semantics for the same question. We continue to believe
that this separation between the denotation of a sen-
tence (given by the semantic component of the lan-
guage) and its interpretation (given by the pragmatic
component) is a simpler and more easily extendible
approach to the problem of providing a formal account
of meaning.
Much of the motivation for the work reported in
Gunji (1981), namely to provide a formal pragmatics to
a language specification by means of the computational
application of a &amp;quot;superinterpreter&amp;quot; after the completion
of the syntactic and semantic interpretation, is the same
as ours. Gunji&apos;s superinterpreter, in fact, is quite clearly
the computational realization of what we have termed
our pragmatic interpretation. The major difference be-
tween these two projects is in the scope of their lan-
guages, which reflect Gunji&apos;s focus on conversation
implicatures and ours on querying historical databases.
Whereas Gunji&apos;s work covers declarative and impera-
tive sentences, and true-false questions, QE-III resulted
from a concentration on wh-questions and an explicit
treatment of time-denoting expressions.
This concludes our informal discussion of the goals
and philosophy behind the definition of the fragment
QE-III, and its relation to other recent work in the area
of formal question semantics. The next section provides
an overview of QE-III through a series of examples and
discussions illustrating the major features of the lan-
guage. (The complete definition of the syntax, seman-
tics, and pragmatics of QE-III can be found in Clifford
(1987).)
</bodyText>
<sectionHeader confidence="0.994431" genericHeader="method">
4 EXAMPLES FROM THE QE-III FRAGMENT
</sectionHeader>
<subsectionHeader confidence="0.770905">
4.1 INTRODUCTION
</subsectionHeader>
<bodyText confidence="0.999949333333333">
This section presents and discusses examples of the
syntactic and translation rules of the QE-III fragment.
As we pointed out in Section 3, the PTQ fragment
</bodyText>
<page confidence="0.932022">
28 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<note confidence="0.490756">
James Clifford Natural Language Querying of Historical Databases
</note>
<bodyText confidence="0.971457587301587">
stands essentially intact as the core of QE-III. There
are, however, certain changes to this core. One major
change is our use of the logic IL, as the intermediate
translation language; this logic is a modification to
Montague&apos;s IL, and makes explicit the &amp;quot;hidden&amp;quot; ab-
straction over indices that is a part of the evaluation
process in Montague&apos;s PTQ analysis. With respect to
IL, the major change is that in IL, we evaluate any
expression a with respect to a state s by forming the
expression [Aia](s).
The other major aspect of QE-III is the inclusion of a
formal pragmatic component to the language, on an
equal standing with the syntactic and semantic compo-
nents. The formalized pragmatic component of QE-III
was primarily motivated by the desire to simplify the
provision of an interpretation for questions in a formal
way. As we showed in Section 3.5.6 the pragmatic
interpretation of any sentential expression was essen-
tially the denotation of the expression formed by
Aabstracting over all of the free individual variables and
also evaluating with respect to &amp;quot;now.&amp;quot;
In addition to these changes in the underlying logic
and method of evaluation, the following additional
modifications have been made to the rules of the PTQ
fragment.
1. Rule S4 has been modified to perform the single
function of combining a term with an IV to form a
sort of protosentence. It no longer performs the
verb inflection for third-person singular present
tense. The entire treatment of tense and time
adverbials is now performed more systematically
by rules S101-5106. (The tensing functions of S17
have therefore been totally eliminated.)
2. Montague&apos;s use of the variables heo and himo
amounted to a simple technique of case marking in
order to choose the appropriate personal pronoun
upon substitution of a term. We have expanded
this technique somewhat, using variables of the
form [it-CASE-i] where CASE ranges over
{NOM,DAT,ACC} and i over the natural num-
bers.
3. Rule S9 for combining a sentence adverbial
(&amp;quot;Necessarily&amp;quot;) with a sentence, has been elimi-
nated. This is because the only sentence adver-
bials in QE-III are time adverbials, which are
brought in together with the tense marker in rules
S104—S106.
4. It is well know that there are problems with the
PTQ treatment of conjunction and disjunction of
terms and IVs (see discussion in Friedman (1979)
and Bennett (1974)). While Friedman&apos;s bracketing
solution is ultimately more acceptable (both by
virtue of its generality and, of particular interest,
its natural correspondence to a LISP implementa-
tion), we have for simplicity of presentation
adopted Bennett&apos;s simple solution of marking all
basic verbs with a # marker, which is removed
when the verb is ultimately tensed. (We choose
this solution because the points we wish to make
have only to do with the verbs, and are easily
understood with this technique.
For ease of understanding the translations to follow, the
following table shows the types of the variables used.
</bodyText>
<table confidence="0.997032111111111">
Variable symbols Type of variable symbol
x, y, z, xo, xi, . . . W
13, Q, Q1, Q2, • • • &lt;s,e&gt; : individual concepts (ICs)
ID, (I, 91, C:12, • • • &lt;s,&lt;&lt;s,e&gt;,t&gt;&gt; : properties of ICs
i &lt;S,t&gt; : propositions
i1, i2, • • • s : distinguished state variable wrt,
which all expressions are evaluated
S : states
:properties of properties of ICs
</table>
<subsectionHeader confidence="0.913357">
4.2 PTQ-LIKE EXAMPLES FROM THE QE-III FRAGMENT
</subsectionHeader>
<bodyText confidence="0.972385">
Before illustrating some of the added features of the
QE-III database query fragment, we present a simple
example within the syntactic range of the PTQ fragment
(up to vocabulary differences) in order to contrast the
way these two fragments derive and translate it. For
example, under one analysis,
4-1. John manages Mary.
would have the following derivation tree in QE-III:
John manages Mary S104
John #manage Mary S4
John #manage Mary S5
/\
#manage Mary
The syntactic and translation rules illustrated in this
example are S4 to form an untensed clause from a
SUBJect and PREDicate, S5 to form a verb phrase from
a transverb and a direct object, and S104 to form a
present-tense clause.
Several points arise with this example. First, we note
that this analysis tree presents the derivational history
of non-basic expressions in the language in the obvious
way. Each node is labeled with a meaningful expression
in QE-III; in case the expression is non-basic, it is
further labeled by the syntactic rule by which it was
constructed, and is given children labeled with the
expressions from which it was obtained. Montague
(1970b) provides a more formal definition of analysis
trees; it should be sufficient to point out that the
language is defined in such a way that to each analysis
tree (though not necessarily to each meaningful expres-
sion) there corresponds a unique translation into the
intermediate logical language.
This analysis of Example 4-1 illustrates several de-
partures from the corresponding PTQ analysis. First,
we note that the basic verb is prefixed with #, and this
Computational Linguistics, Volume 14, Number 4, December 1988 29
James Clifford Natural Language Querying of Historical Databases
prefix remains even after S4 is applied to combine the
term &amp;quot;John&amp;quot; with the intransitive verb phrase
&amp;quot;#manage Mary&amp;quot;. Second, Rule S104 is new. It takes
an untensed sentence as input and gives a (present)
tensed sentence as output. Thus we have characterized
tense as a property not of verbs, but of clauses, al-
though this property in English is realized by the
inflection of the main verb of the clause. The impor-
tance of this characterization will be made clearer when
we consider the interaction of tense with interrogative
sentences.
This method of introducing tenses into a sentence
obviates the need for undoing the English verb inflec-
tions that would be required by a method (such as in
PTQ or in Dowty (1979) that always introduced present
tense first, subject to possible subsequent modifica-
tions. Dowty (1979) makes a similar point—though still
in terms of introducing the tense via a SUBJ + PRED
rule—but does not incorporate the idea into the frag-
ment presented there.
In a number of the PTQ rules Montague makes use of
the auxiliary notions of the gender of a CN or a T, and
the third-person singular form of a verb. These notions
are never defined with the same rigor that Montague
demanded of other characteristics of his logic and
grammar, presumably because he felt they were obvi-
ous and uninteresting. As in Bennett (1974) we make
use of a number of similar auxiliary notions in our rules.
This example points out two such notions, viz., that of
the tense of a clause and the case of a variable. In our
fragment a clause is either untensed or tensed, and
belongs to a different category (though of the same
logical type) in either case. A variable introduced into a
sentence is either uncased, or one of NOM, ACC, or
DAT.
The translation of Example 4-1 corresponding to the
above analysis tree is as follows:
</bodyText>
<figure confidence="0.9585099375">
Mary = =&gt; AP3x[P(i)(x) A x(i) = Mary]
#manage --= =&gt; AWAx[W(i)(AiAy[AS-1(y(i),x)
A EMP*&apos;(i)(y(i)) A MGR&apos;(i)(x)])]
#manage Mary = ==&gt; AWAx[W(i)(AiAyl AS-1(y(i),x)
A EMP,;(i)(y(i)) A MGR&apos;(i)(x)])1(AiAP3x[P(i)(x)
A x(i) = Mary])
Ax3 z[AS-1(z(i),x) A EMP*&apos;(i)(z(i))
A MGR&apos;(i)(x) A z(i) = Mary]
John = =&gt; AP3y[P(i)(y) A y(i) = John]
John #manage Mary =- =&gt; AP3y[P(i)(y) A y(i) = John]
(AiAx3z[AS-1(z(i),x) A EMP;(i)(z(i))
A MGR&apos;(i)(x) A z(i) = Mary])
---&gt; 3y[AS-1(Mary,y) A EMP*&apos;(i)(Mary)
A MGR&apos;(i)(y) A y(i) = John]
John manages Mary = =&gt; 3y[EMP*&apos;(i)(Mary)
A MGR&apos;(i)(y) A y(i) = John A AS-1(Mary,y)]
</figure>
<figureCaption confidence="0.438373333333333">
The pragmatic interpretation is represented by: 3y
[EMP*&apos; (now)(Mary) A MGR&apos; (now)(y) A y(now) =
John A AS-1(Mary,y)].
</figureCaption>
<bodyText confidence="0.9959211">
Our treatment of proper terms is slightly different
from the PTQ treatment, in that the translations include
an individual concept variable whose extension at the
state i is asserted to be the indicated individual. This is
done because in HRDM all individuals of interest must
be playing a role in the -database, and roles can only be
filled by individual concepts. Further, as we discussed
in Section 3, verbs are treated as objects of the same
type as in PTQ, but they are analyzed in terms of the
database schema.
</bodyText>
<subsectionHeader confidence="0.996187">
4.3 TEMPORAL REFERENCE IN QE-III
</subsectionHeader>
<bodyText confidence="0.990601">
In addition to its indication by means of the tense
system, temporal reference in English is also indicated
by certain time adverbials (today, last year, . . .) and
also by prepositional phrases (in 1978, on Monday . . .).
Care must be taken in order to analyze properly the
semantics of sentences that involve an interaction be-
tween tenses and these other temporal indicators. They
cannot be applied sequentially as operators to a clause,
or the semantics will be incorrect. (Dowty (1979) makes
the same observation.) The following derivation for
4-2. Peter earned 25K in 1978.
illustrates this aspect of QE-III.
Peter earned 25K in 1978 S108
in 1978 S113 Peter #earn 25K S4
/ \ (derived as in Example 4-1)
in 1978
This example illustrates Rule S108, which simulta-
neously adds a tense (past) and a time adverbial, and
S113, which forms a temporal prepositional phrase. The
pragmatic interpretation correctly indicates that there is
some state in the past that is also in the set of states 1978
at which the present-tense sentence &amp;quot;Peter earns 25K is
true&amp;quot;: 3i13y[1978&apos;(i1) A [i1 &lt; now] A EMP.&apos;(i1)(Peter)
A SAL&apos;(i1)(y) A y(ii) = 25K A AS-1(Peter,y)[.
If we had introduced the two temporal indicators (the
tense and &amp;quot;in 1978&amp;quot;) separately, in either order, the
resulting interpretations would be incorrect.
Peter earned 25K in 1978
(PAST) Peter #earn 25K in 1978
in 1978 Peter #earn 25K
interpreted as: 3i23i13yRi2 &lt; now] A 1978&apos;(i1) A
EMP.&apos;(i1)(Peter) A SAL&apos;(ii)(y) A y(ii) = 25K A AS-
l(Peter,y)]. This places the three times i1, i2, and now on
the time line as follows:
now
with i1 anywhere on the time line in 1978.
</bodyText>
<page confidence="0.90418">
i2
30 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
<note confidence="0.489254">
James Clifford Natural Language Querying of Historical Databases
</note>
<bodyText confidence="0.977696177777778">
The reverse order of sequential introduction is also
incorrect.
Peter earned 25K in 1978
/ \
in 1978 Peter earned 25K
(PAST) Peter #earn 25K
since it is interpreted as: 3i23i13y[1978&apos;(i2) A [ii &lt; i2] A
EMP,&apos;(ii)(Peter) A SAL&apos;(ii)(y) A y(ii) = 25K A AS-
l(Peter,y). Here the two times are located as follows:
i2, in 1978
The properties of Peter are asserted to be true in state
but i1 may or may not be in 1978, and may or may not be
in the past (with respect to now.) Only the simultaneous
introduction of these temporal operators provides the
correct interpretation.
Example 4-3 illustrates how tense is treated as a
property of clauses in compound sentences, and how
these tenses are independent of one another. It also
illustrates how relative clauses are maintained in the
QE-III fragment.
4-3. Peter manages an employee such that he earned
30K.
Under the most likely analysis, this sentence is inter-
preted in QE-III as: 3w3x3y3i1[EMP*&apos;(now)(x(now))
A MGR&apos;(now)(w) A w(now) = Peter A AS-1(x(now),w)
A EMP,&apos;(ii)(x(now)) A SAL&apos;(ii)(y) A y(ii) = 30K A
1978&apos;(i1) A [il &lt; now] A AS-1(x(now),w)].
Example 4-4 illustrates how propositions can be
treated in almost the same way as time constants for
denoting sets of states.
4-4. John worked before Mary worked.
This sentence is analyzed as asserting that there was
some state S1 before now at which John worked, and
that SI was also before some other state S2 before now
at which Mary worked.
«(Ai2EMP*&apos;(i2)(MarY))] A [i2 &lt; now]
A [i1 &lt; now] A EMP*&apos;(ii)(John)].
Similarly, we can combine simple time expressions with
prepositions to form temporal adverbials, as in Example
4-5.
4-5. Rachel worked before yesterday.
which is analyzed as: 3i1[[i1 &lt;&lt; yesterday&apos;(now)] A [ill
&lt; now] A EMP*&apos;(ii) (Rachel)]. Notice that this transla-
tion places two restrictions upon when the state i1 can
occur in time.
</bodyText>
<listItem confidence="0.92105225">
1. [i1 &lt;&lt; yesterday&apos;(now)] because of &amp;quot;before yes-
terday,&amp;quot; and
2. [il &lt; now] because of the past tense. Since a time
before yesterday must be before now (by the
</listItem>
<bodyText confidence="0.943599846153846">
meaning of &amp;quot;yesterday&amp;quot;), a meaning postulate for
words such as &amp;quot;yesterday&amp;quot; might well be in order
here to remove this redundancy and reduce the
final translation to 3i1 &lt;&lt; yesterday&apos;(now)] A
EMP*&apos;(i1)(Rachel)].
We now proceed to discuss the other additional rules of
the QE-III fragment. These rules either form expres-
sions that have particular relevance to the database
realm (possessives, role specifications, etc.) or form
interrogative sentences. We will look first at the ques-
tions; some of the considerations involved in the fram-
ing of these rules for database querying purposes was
given in Section 3.
</bodyText>
<subsectionHeader confidence="0.955949">
4.4 QUESTIONS IN QE-III
</subsectionHeader>
<bodyText confidence="0.876915030927835">
Consider the following query:
4-6. Who managed Rachel?
translated as 3i13yRi1 &lt; i] A EMP*&apos;(ii)(Rachel) A
MGR&apos;(ii)(y) A y(i1) = u A AS-1(Rachel,y)]. Recall that
the pragmatics provides a representation for the answer
to questions, and that the pragmatic interpretation of
this query is denoted by the expression Au 3i13yRi1 &lt;
now] A EMP*&apos;(ii)(Rachel) A MGR&apos;(i1)(y) A y(i1) = u A
AS-1(Rachel,y)] formed by binding all free occurrences
of the variable i to the constant now, and A-abstracting
over all of the free individual variables.
This example illustrates why the tense must be
considered a property of the entire clause, rather than
just of the verb phrase, if the semantics of the question
is to come out right. For suppose instead that we
derived (4-6) as follows:
Who managed Rachel?
who [it-NOM-0] managed Rachel
The translation would then be 3y2i1 [y(i) = u A [il &lt;i]
A EMP*&apos;(ii)(Rachel) A MGR&apos;(i1)(y) A AS-1(Rachel,y)].
The problem with this translation is that the manager-IC
y is not tensed properly. When evaluated, this query
will return the set of individuals u who are the extension
of Rachel&apos;s manager-IC, not at some time in the past,
but now. Because &amp;quot;who&amp;quot; has wider scope in this
derivation, the past-tense operator could not capture
the free i of the translation of &amp;quot;who&amp;quot;. The question,
under our treatment, is correctly analyzed as &amp;quot;Who
(past) managed (past) Rachel?}&amp;quot; rather than as &amp;quot;Who
(now) managed (past) Rachel?&amp;quot; In order to get this
reading, tenses (and tenses + TmADVerbials) must be
brought in last over all clauses, including interrogative
sentences.
Interrogative terms (WHT&apos;s) can also be derived
from common nouns and the interrogative determiners
such as &amp;quot;which,&amp;quot; as seen in Example 4-7.
4-7. Who manages which employees?
which is interpreted as: Au, Au23y[EMP*&apos;(now)(u2) A
MGR&apos;(now)(y) Ay (now) = ul A AS-1(u2,y)].
Example 4-8 illustrates a three-term interrogative,
using the three-place verb &amp;quot;#supply&amp;quot; and a rule (a
simple extension of the two-place case, essentially
Computational Linguistics, Volume 14, Number 4, December 1988 31
James Clifford Natural Language Querying of Historical Databases
taken from Dowty (1979)) for combining such a verb
with an indirect object to form a two-place verb.
4-8. What does who supply to whom?
The interpretation7 is Au3Au2Au1 [COMP*&apos;(now)(u3) A
DEPT*&apos;(now)(u2) A ITEM*&apos;(now)(u1) A REL-3
(u3,u2,u1)] .
Example 4-9 illustrates a more complicated question
that requires, in terms of the database representation, a
&amp;quot;join&amp;quot; of two relations.
4-9. Who works for a department such that it sells
shoes?
It is interpreted as Au3x[EMP*&apos;(now)(u) A DEPT*&apos;
(now) (x(now)) A AS-1(u,x) A ITEM*&apos;(now)(Shoes) A
REL-2(x(now),Shoes)].
Yes-no questions can take two forms in the frag-
ments
4-10. Is it the case that Peter earns 30K?
and
4-11. Does Peter earn 30K?
Both of these questions receive the same interpretation:
3x[EMP*&apos;(i)(Peter) A SAL&apos;(i)(x) A x(i) =30K A AS-1
(Peter,x)].
When-questions, very important in a historical data-
base context, are illustrated by the following example.
4-12. When did Peter earn 25K?
interpreted as Ai13yRi1 &lt; now] A EMP*&apos;(i1)(Peter) A
SAL&apos;(i1)(y) A y(ii) = 25K A AS-1(Peter,y)].
Finally, the next two examples illustrate the interac-
tion of when and an already-formed term question, and
the interaction of when with time phrases.
4-13. When did who manage whom?
interpreted as Au2Au1Ai13xRi1 &lt; now] A EMP*&apos;(i1)(u1)
A MGR&apos;(ii)(x) A x(ii) = u2 A AS-1(u1,x)], and
4-14. When and to whom did company A sell item B
yesterday?
interpreted as: Ai1Au2Au1 3xRi1 &lt; now] A yesterday&apos;(ii)
A DEPT*&apos;(i1)(u1) A x(ii) = u, A COMP*&apos;(ii)(A) A
ITEM*&apos;(i1)(B) A REL-3(A,B,u1)].
This concludes the examples of the kinds of queries
expressible in the language QE-III, and the semantics
and pragmatics that the fragment provides for them. We
now present some of the other additions we have made
to the PTQ fragment in order to express certain other
common query constructions.
database can also be accomplished by means of the
word &amp;quot;as&amp;quot;.
447. Who has Peter as manager?
interpreted as Au3z[MGR&apos;(now)(z) A z(now) = Peter A
AS-1(u,z)], or by the simple concatenation of the role
and a term.
4-18. Who sells Item 37?
interpreted as Au[DEPT*&apos;(now)(u) A ITEM*&apos;(now)(37)
A REL-2(u,37)].
</bodyText>
<sectionHeader confidence="0.994577" genericHeader="conclusions">
5 CONCLUSION
</sectionHeader>
<bodyText confidence="0.999996741935484">
The problem of modeling the semantics of time is one
which is beginning to be explored by researchers in a
number of different areas of computer science. We
believe that formal logic can make an important contri-
bution to our understanding and specification of the
properties of time that we can incorporate into our
models and systems. Using the logic IL, and the frame-
work of MS, we have presented in this paper an
overview of the HRDM, which is a formalization of the
concept of a historical database. HRDM provides for
the modeling of historical information in a DBMS, for
the specification of constraints on the way that infor-
mation can change over time, and for a query language
for accessing that information with specific reference to
its temporal dimension.
To complement the relational query language of
HRDM (Clifford and Croker 1987), we have in this
paper described a formal English database query lan-
guage, QE-III, which is defined in a MS framework.
QE-III incorporates a formal syntax, semantics, and
pragmatics to account for an interpretation of questions
that accord with the interpretation of HRDM, including
an account of multiple-wh questions, a semantics and
pragmatics of time, and a grammar that is conducive to
a computer implementation. In addition to its formal
syntax and parallel semantics, QE-III is provided with a
formal pragmatics that provides a representation for the
answer(s) to a question as a function of its syntax and
semantics. We believe that this approach, and the whole
area of formal pragmatics as a component of language
theory, is a fertile area for further research.
</bodyText>
<sectionHeader confidence="0.999258" genericHeader="acknowledgments">
ACKNOWLEDGEMENTS
</sectionHeader>
<subsectionHeader confidence="0.93824">
4.5 MISCELLANEOUS FEATURES OF QE-III
</subsectionHeader>
<bodyText confidence="0.999237166666667">
The use of possessives is very common in database
queries, and is easily incorporated into the fragment, as
in
4-15. Who is Peter&apos;s manager?
which is interpreted as Au3x[MGR&apos;(now)(x) A x(now) =
u A AS-1(Peter,x)]. An alternative way of phrasing the
same question uses &amp;quot;of&apos; instead of the possessive
marker.
4-16. Who is a manager of Peter?
and ultimately receives the same interpretation. Finally,
specification of the role played by an individual in the
This paper is based upon research done while I was a graduate student
in computer science at SUNY Stony Brook. I would like to thank my
advisor David Warren for introducing me to, and schooling me in, the
complexities of Montague Semantics, and also Professor Joyce Fried-
man for encouraging me to conduct this research. I would also like to
thank the referees for their many useful and constructive comments
on an earlier draft of this paper.
</bodyText>
<sectionHeader confidence="0.994878" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.994919395348837">
Ariav, , G.; Beller, A.; and Morgan, H.L. 1984 A Temporal Model
(Technical Report DS-WP 82-12-05). Department of Decision
Sciences University of Pennsylvania, Philadelphia, PA.
Bar-Hillel, Yehoshua 1954 Indexical Expressions. Mind 63: 359-379.
32 Computational Linguistics, Volume 14, Number 4, December 1988
James Clifford Natural Language Querying of Historical Databases
Belnap, Nuel D., Jr. 1982 Questions and Answers in Montague
Grammar. In Peters, S., and Saarinen, E. (eds.) Processes,
Beliefs, and Questions. D. Reidel Publishing Co., Dordrecht, The
Netherlands.
Ben-Zvi, J. 1982 The Time Relational Model. Ph.D. diss., Department
of Computer Science, University of California, Los Angeles, CA.
Bennett, M.R. 1974 Some Extensions of a Montague Fragment of
English. Ph.D. diss., UCLA.
Bennett, M.R. 1977 A Response to Karttunen on Questions. Linguis-
tics and Philosophy 1: 279-300.
Bennett, M.R. 1979 Questions in Montague Grammer (Technical
Report). Indiana University Linguistics Club, Bloomington, IN.
Bennett, M.R. and Partee, B.H. 1972 Toward the Logic of Tense and
Aspect in English (Technical Report). Indiana University Linguis-
tics Club, Bloomington, IN.
Carnap, R. 1947 Meaning and Necessity. University of Chicago
Press, Chicago, IL.
Chang, C.L. 1978 DEDUCE 2: Further Investigations of Deduction in
Relational Data Bases. In Gallaire, H. and Minker, J. (eds.) Logic
and Data Bases. Plenum Press, New York, NY.
Clifford, J. 1982 A Model for Historical Data Bases. In Proceedings of
Logical Bases for Data Bases. ONERA-CERT, Toulouse, France.
Clifford, J. 1982 A Logical Framework for the Temporal Semantics
and Natural-Language Querying of Historical Databases. Ph.D.
diss., Department of Computer Science, SUNY at Stony Brook.
Clifford, J. 1985 Towards an Algebra of Historical Relational Data
bases. In ACM-SIGMOD International Conference on Manage-
ment of Data. Austin, TX.
Clifford, J. 1987 Natural Language Querying of Historical Data
bases—The QE-Ill Language Definition and Examples (Technical
Reports CRIS-#164, GBA-WP#87-90). Department of Informa-
tion Systems, New York University, New York, NY.
Clifford, J., and Croker, A. 1987 The Historical Relational Data
Model (HRDM) and Algebra Based on Lifespans. In Proceedings
of the Third International Conference on Data Engineering. Los
Angeles, CA.
Clifford, J., and Warren, D.S. 1983 Formal Semantics for Time in
Data bases. ACM Transcript on Data base Systems 8(2): 214-254.
Codd, E.F. 1970 A Relational Model of Data For Large Shared Data
Banks. Communications of the ACM 13(6): 377-387.
Cooper, R. 1979 Variable Binding and Relative Clauses. In
Guenthner, F., and Schmidt, S.J. (eds.) Formal Semantics and
Pragmatics for Natural Languages. D. Reidel Publishing Co.,
Dordrecht, The Netherlands.
Dowty, D.R. 1978 A Guide to Montague&apos;s PTQ (Technical Report).
Indiana University Linguistics Club, Bloomington, IN.
Dowty, D.R. 1979 Word Meaning and Montague Grammer. D. Reidel
Publishing Co., Dordrecht, The Netherlands.
Engdahl, E. 1986 Constituent Questions—The Syntax and Semantics
of Questions with Special Reference to Swedish. D. Reidel Pub-
lishing Co. Dordrecht, The Netherlands.
Filmore, C. 1968 The Case for Case. In Bach, E. and Harris, R. (eds.)
Universals in Linguistic Theory. Rinehart &amp; Winston, New York,
NY.
Friedman, J. 1979 An Unlabeled Bracketing Solution to the Problem
of Conjoined Phrases in Montague&apos;s PTQ. Journal of Philosophi-
cal Logic, 8:151-169.
Friedman, J. 1981 Expressing Logical Formulas in Natural Language.
In Groenendijk, J.; Janssen, T.; and Stokhof, M. (eds.) Formal
Methods in the Study of Language. Mathematical Center, Amster-
dam, Holland.
Friedman, J. and Warren, D.S. 1978 A Parsing Method for Montague
Grammars. Linguistics and Philosophy, 347-372.
Gadia, S.K. and Vaishnav, J. 1985 A Query Language for a Homo-
geneous Temporal Data Base. In Proceedings of The Fourth
Annual ACM SIGACT-SIGMOD Symposium on Principles of
Database Systems.
Gallaire, H. and Minder, J. 1978 Logic and Data Bases. Plenum
Press, New York, NY.
Green, B.F.; Wolf, A.K.; Chomsky, C.; and Laughery, K. 1963
Baseball: An Automatic Question Answer. In Feigenbaum, E.A.,
and Feldman, J. (eds.) Computers and Thought. McGraw-Hill,
New York, NY.
Groenendijk, J. and Stokhof, M. 1983 On the Semantics of Questions
and the Pragmatics of Answers.
Gunji, Takao 1981 Toward a Computational Theory of Pragmatics—
Discourse, Presupposition, and Implicature. Ph.D. diss., The
Ohio State University, Columbus, OH.
Hamblin, C.L. 1973 Questions in Montague English. Foundations of
Language 10: 41-53.
Harris, L.R. 1973 The ROBOT System: Natural Language Processing
Applied to Database Query (Technical Report TR78-1). Depart-
ment of Mathematics, Dartmouth College, Hanover, NH.
Hasbrouck, B.L. 1982 Methods of Parsing English with Context-Free
Grammar. Master&apos;s thesis, Department of Computer Science,
SUNY at Stony Brook.
Hausser, R. and Zaefferer, D. 1978 Questions and Answers in a
Context-Dependent Montague Grammar. In Guenthner F., and
Schmidt, S.J. (eds.) Formal Semantics and Pragmatics for Natu-
ral Languages. D. Reidel Publishing Co., Dordrecht, The Neth-
erlands.
Hendrix, G.G.; Sacerdoti, E.D. and Sagalowicz, D.; and Slocum, J.
1978 Developing a Natural Language Interface to Complex Data.
ACM Transactions on Database Systems 3(2).
Hintikka, J. 1974 Questions About Questions. In Munitz, M.K. and
Unger, P.K. (eds.) Semantics and Philosophy. New York Univer-
sity Press, New York, NY.
Karttunen, L. 1977 Syntax and Semantics of Questions. Linguistics
and Philosophy 1: 3-44.
Kasher, A. 1977 What is a Theory of Use. Journal of Pragmatics 1:
105-120.
Kuno, S. and Robinson, J. 1973 Multiple WH-Questions. Linguistic
Inquiry 3(2): 463-487.
Landsbergen, S.P.J. 1981 Adaptation of Montague Grammar to the
Requirements of Parsing. In Proceedings of the Third Amsterdam
Colloquium on Formal Methods in the Study of Language. Math-
ematical Centre, Amsterdam, Holland.
Levinson, Stephen C. 1983 Pragmatics. Cambridge University Press,
Cambridge, England.
Lum, V., et al. 1984 Designing DBMS Support for the Temporal
Dimension. In ACM-SIGMOD International Conference on Man-
agement of Data. Boston, MA.
Maier, D. 1983 The Theory of Relational Data Bases. Computer
Science Press, Rockville, MD.
Marciszewski, W. 1971 Introduction to Appendix. In Pelc, Gerzy
(ed.) Studies in Functional Logical Semiotics of Natural Lan-
guage. Mouton, The Hague.
Martin, R.M. 1959 Toward a Systematic Pragmatics. North-Holland,
Amsterdam.
Montague, R. 1968 Pragmatics. In Klibansky, R. (ed.) Contemporary
Philosophy: A Survey. Florence: La Nuova Italia Editrice, Flor-
ence, Italy.
Montague, R. 1970 Pragmatics and Intensional Logic. Synthese, 22:
68-94.
Montague, R. 1970 English as a Formal Language. In Visentini, B. et
al (eds.) Linguaggi nella Societa e nella Tecnica. Edizioni di
Comunita, Milan, Italy.
Montague, R. 1973 The Proper Treatment of Quantification in En-
glish. In Hintikka, K.J.J. et al. (eds.) Approaches to Natural
Language. D. Reidel Publishing Co., Dordrecht, The Nether-
lands.
Montague, R. and Thomason, R. (ed.) 1974 Formal Philosophy:
Selected Papers of Richard Montague. Yale University Press,
New Haven, CT.
Computational Linguistics, Volume 14, Number 4, December 1988 33
James Clifford Natural Language Querying of Historical Databases
Morris, C. 1938 Foundations of the Theory of Signs. In International
Encyclopedia of Unified Science. University of Chicago Press,
Chicago, IL.
Morris, C. 1946 Signs, Language, and Behavior. Prentice Hall, New
York, NY.
Pope, E.N. 1976 Questions and Answers in English. In Janua
Linguarum Series Practica 226. Mouton, The Hague.
Quirk, R. and Greenbaum, S. 1974 A University Grammar of English.
Longman, London, England.
Reiter, R. 1978 On Closed World Data Bases. In Gallaire, H., and
Minker, J. (eds.) Logic and Data Bases. Plenum Press, New York,
NY.
Rescher, N. and Urquhart, A. 1971 Temporal Logic. Springer Verlag,
New York, NY.
Roberts, P. 1954 Understanding Grammar. Harper &amp; Row, New
York, NY.
Scha, Remko J.H. 1983 Logical Foundations for Question Answering.
Ph.D. diss., University of Groningen, The Netherlands.
Schank, R.C. 1972 Conceptual Dependence: A Theory of Natural
Language Understanding. Cognitive Psychology 3(4): 552-631.
Snodgrass, R. 1984 The Temporal Query Language TQuel. In Pro-
ceedings of the Third ACM SIGACT-SIGMOD Symposium on
Principles of Database Systems. Waterloo, Ontario, Canada.
Snodgrass, R., and Ahn, I. 1985 A Taxonomy of Time in Data Bases.
In ACM-SIGMOD International Conference on Management of
Data. Austin, TX.
Stalnaker. 1972 Pragmatics. In Davidson, Donald and Harman, Gil-
bert (eds.) Semantics of Natural Languages. D. Reidel Publishing
Co., Dordrecht, The Netherlands.
Tichy, P. 1978 Questions, Answers, and Logic. American Philosoph-
ical Quarterly 15(4): 275-284.
Vendler, Z. 1967 Linguistics in Philosophy. Cornell University Press,
Ithaca, NY.
Waltz, D.L. 1978 An English Language Question Answering System
for a Large Relational Data base. Communications of the ACM
21(7): 526-539.
Warren, D.S. 1979 Syntax and Semantics in Parsing: An Application
to Montague Grammar. Ph.D. diss., University of Michigan, Ann
Arbor, MI.
Woods, W.A.; Kaplan, R.M.; and Nash-Webber, B. 1972 The LU-
NAR Sciences Natural Language Information System: Final
Report (Technical Report BBN Report 2378) Bolt, Beranek and
Newman Inc., Cambridge, MA.
NOTES
I. See Clifford (1987) for the definition of IL, and a discussion of how
(and why) it differs from Montague&apos;s IL.
2. In all translation examples we follow Partee in using a double
arrow &amp;quot;= -=&gt;&amp;quot; to indicate the immediate result of applying a
translation rule of the fragment, and a single arrow &amp;quot;—&gt;&amp;quot; to indicate
the result of any of a number of logical simplifications (principally
A-reduction).
3. The &amp;quot;such that&amp;quot; construction for heading relative clauses is a
syntactic holdover from the PTQ fragment, which, because our
concern is primarily semantic, we have not attempted to replace
with a more sophisticated treatment. For a treatment of more usual
English relative clauses, the reader is referred to Cooper (1979).
4. Although David Warren suggests considering the following sort of
exchange:
[SHE]: &amp;quot;There are several Fire Island ferries each day.&amp;quot;
[HE]: &amp;quot;Oh, really! When do they arrive and when do they leave?&amp;quot;
It is natural to interpret this as a request for the set of ordered pairs
&lt;t1,t2&gt; representing the arrival and departure times of particular
ferry runs. Other sorts of multiple when-questions that ask for a
range (&amp;quot;Between when and when . . .&amp;quot;) seem to be of this same
type.
5. Tichy (1978) makes many of the same points that we make here
regarding the proposition idea.
6. Actually their syntax does not cover direct questions, and so this
is really their treatment of &amp;quot;John loves him&amp;quot; in the category of
Basic Question; it seems clear, however, that they intend the
semantics of the corresponding direct question to be the same.
7. REL-3 indicates that there is a tri-ary relationship among the
indicated three individuals.
</reference>
<page confidence="0.984011">
34 Computational Linguistics, Volume 14, Number 4, December 1988
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.823708">
<title confidence="0.99968">NATURAL LANGUAGE QUERYING OF HISTORICAL DATABASES</title>
<author confidence="0.999951">James Clifford</author>
<affiliation confidence="0.998193">Information Systems Graduate School of Business</affiliation>
<address confidence="0.9173015">New York New York, NY</address>
<abstract confidence="0.9983875">In this paper we examine the connection between two areas of semantics, namely the semantics of historical databases and the semantics of natural language querying, and link them together via a common view of the semantics of time. Since the target application domain is an historical database, we present the essential features of the Historical Relational Database Model (HRDM), an extension to the relational model motivated by the desire to incorporate more &amp;quot;real world&amp;quot; semantics into a database at the conceptual level. We then present the essential features of QE-III, a formally defined English database query language whose semantic and pragmatic theory, based on a Montague-type semantics, makes explicit reference to the notion of denotation with respect to a moment of time. We demonstrate the use of this language to query an example historical database, and discuss the issues of how to provide both a semantic and a pragmatic interpretation for questions within a model-theoretic framework.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>G Beller</author>
<author>A</author>
<author>H L Morgan</author>
</authors>
<title>A Temporal Model</title>
<date>1984</date>
<journal>Mind</journal>
<tech>(Technical Report DS-WP 82-12-05).</tech>
<volume>63</volume>
<pages>359--379</pages>
<institution>Department of Decision Sciences University of Pennsylvania,</institution>
<location>Philadelphia, PA. Bar-Hillel, Yehoshua</location>
<marker>Beller, A, Morgan, 1984</marker>
<rawString>Ariav, , G.; Beller, A.; and Morgan, H.L. 1984 A Temporal Model (Technical Report DS-WP 82-12-05). Department of Decision Sciences University of Pennsylvania, Philadelphia, PA. Bar-Hillel, Yehoshua 1954 Indexical Expressions. Mind 63: 359-379.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Computational Linguistics</author>
</authors>
<date>1988</date>
<journal>James Clifford Natural Language Querying of Historical Databases</journal>
<volume>14</volume>
<marker>Linguistics, 1988</marker>
<rawString>32 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nuel D Belnap</author>
</authors>
<title>Questions and Answers in Montague Grammar.</title>
<date>1982</date>
<editor>In Peters, S., and Saarinen, E. (eds.) Processes, Beliefs, and Questions. D. Reidel Publishing Co.,</editor>
<location>Dordrecht, The Netherlands.</location>
<contexts>
<context position="35961" citStr="Belnap (1982)" startWordPosition="5980" endWordPosition="5981">is only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are of course inappropriate, and would be replaced by fulfillment conditions and a characterization of the semantic content of a correct answer&amp;quot; (Montague 1973). Perhaps inspired by this comment, a number of researchers have been investigating ways to incorporate a formal account of the syntax and semantics of questions within the framework of Montague Semantics. Hamblin (1973), Karttunen (1977), Bennett (1977, 1979), Hausser and Zaefferer (1978), and Belnap (1982) are perhaps the most important of these investigations, and we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering theories and systems to varying degrees of success</context>
<context position="56436" citStr="Belnap 1982" startWordPosition="9332" endWordPosition="9333">w substitution of wh-terms, is equally able to capture the fact that &amp;quot;who&amp;quot; and &amp;quot;him&amp;quot; are co-referent, as are &amp;quot;an employee&amp;quot; and &amp;quot;he&amp;quot;. Under our analysis, this sentence would be derived as follows: Who manages an employee such that he manages him? Who #manage an employee such that he manages him? who [it-NOM-0] #manage an employee such that [it-NOM-0] manages him. This idea of extending the PTQ theory of co-reference to the case of interrogatives is not ours. It is used in most of the work on question semantics in the Montague Grammar tradition (including Karttunen 1977, Bennett 1977, 1979, and Belnap 1982). It is that theory that we have incorporated into our fragment. Because question words in our fragment are always assumed to have the entire sentence as their scope (i.e., there are no embedded question clauses), and because of the extensional nature of our theory as dictated by the database, question words can always be brought in indirectly by means of substitution rules. The difference in our respective treatments lies in our attempts to formalize the meaning given to questions. Let us take a look now at why the analysis we have presented so far cannot be extended to multiple whquestions. </context>
<context position="64449" citStr="Belnap (1982)" startWordPosition="10633" endWordPosition="10634">substitution) requires the same technique for each of the tense rules, and for each of the tense rules with time adverbials, and for each of the when-question rules, the rules for when-questions with tenses, for when-questions with tenses and time adverbials, etc. In other words, accepting a solution that types all questions differently depending upon what they ask for forces the inclusion of rule schemas for all of the other semantic functions that in a simple theory would operate only on one type, the type given to sentences. (Later we will discuss how the solutions of Bennett (1977, 1979), Belnap (1982), and of Hausser and Zaefferer (1978) entail a similar rippling effect of complexity throughout the rest of the semantic theory already developed for declarative sentences.) For an example of this effect in the theory under consideration, consider what the rule for adding past tense to a sentence would look like. (Recall our arguments for the necessity of treating tense as a property of the entire sentence.) Such a rule would have to be of the form Pa + -ED = =&gt; Qa, where a could be the category declarative sentence (type t), 1-term question (type &lt;e,t&gt;), 2-term question (type &lt;e,&lt;e,t&gt;&gt;), etc.</context>
<context position="69508" citStr="Belnap 1982" startWordPosition="11473" endWordPosition="11474">ore than it was intended to do. For example, most theories of question semantics have attempted to include some representation of the answer of the question as part of its denotation. Is there not something odd in a theory that holds that a question denotes its answer, especially if one has tried (or tried not) to think of denoting as a formal counterpart to the intuitive notion of meaning? Yet in one form or another (denoting the set of possible answers (Hamblin 1973), the set of correct answers (Karttunen 1977), functions from sequences of individuals to propositions (Bennett 1977, 1979 and Belnap 1982), and our sets of n-tuples of individuals) many researchers have been investigating ways to accomplish this in a formal semantics. The similarity between wh-terms and unbound pronouns (&amp;quot;Who loves whom?&amp;quot; versus &amp;quot;He loves him&amp;quot;) suggest another approach, viz., one in which 1. the semantic component provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as requests for their answers. Pragmatics is the least understood branch of the tripartite division of the study of language that Morris (1938) prop</context>
<context position="86207" citStr="Belnap (1982)" startWordPosition="14283" endWordPosition="14284">itions, but it seems that even before the choice of just what questions denote was made, this &amp;quot;single semantics&amp;quot; viewpoint had been adopted. The other, as we have already pointed out, is that some account of the answer(s) to a question should be included at least as a component of its semantics. When combined with other factors these two biases have led to somewhat different results. Thus Hamblin (1973) suggests that a question denotes the set of all &amp;quot;propositions that count as answers to it&amp;quot;; Karttunen (1977), &amp;quot;the set of propositions expressed by[its] true answers&amp;quot;; Bennett (1977, 1979) and Belnap (1982), who worked with Bennett on the theory, &amp;quot;sets of open propositions:functions from sequences of individuals to propositions.&amp;quot; 3.6.2 KARTTUNEN As we have said, Karttunen (1977) presents an analysis of the semantics of questions that falls within the single semantics tradition. (Hamblin (1973) earlier proposed a treatment similar to Karttunen&apos;s, but his theory was not worked out in as much detail.) In Karttunen&apos;s theory, for example, the question &amp;quot;Who manages John?&amp;quot; would roughly be translated as: Ap3x[p(i) A p = Ai [manage&apos; (i)(x)(i) ,John]) . Semantically, this expression, when interpreted wit</context>
<context position="90606" citStr="Belnap (1982)" startWordPosition="14999" endWordPosition="15000">rical Databases (&amp;quot;Mary and Susan&amp;quot; and &amp;quot;Bill and Susan&amp;quot;), as well as the relations in the database that express the same information.5 understand it, we provide the following table of the types of the variables used. Variable symbols Type of variable symbol P &lt;e,t&gt; : sets of individuals r,s &lt;n,e&gt; : sequences of individuals 0 &lt;&lt;n,e&gt;,&lt;s,t&gt;&gt; : open propositions Qi Q2 Mary Bill Susan Susan As noted earlier, Bennett discussed the issue of the logic of questions in two separate papers, and collaborated with Belnap in the development. Their theory is presented cumulatively in Bennett (1977, 1979) and Belnap (1982). Motivated again by the goal of a single semantics, and even more strongly by a desire to account for the individuals that answer the question, Belnap and Bennett develop a theory that incorporates sequences of individuals into the model theory. Thus a question like &amp;quot;Whom does John love?&amp;quot; is treated as denoting a set of functions from sequences of individuals to propositions. Essentially all and only those sequences that close the open proposition &amp;quot;John loves [it-ACC-O]&amp;quot; and make it true are included in this denotation. What this is tantamount to is incorporating the standard (Tarskian) notio</context>
</contexts>
<marker>Belnap, 1982</marker>
<rawString>Belnap, Nuel D., Jr. 1982 Questions and Answers in Montague Grammar. In Peters, S., and Saarinen, E. (eds.) Processes, Beliefs, and Questions. D. Reidel Publishing Co., Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Ben-Zvi</author>
</authors>
<title>The Time Relational Model.</title>
<date>1982</date>
<tech>Ph.D. diss.,</tech>
<institution>Department of Computer Science, University of California,</institution>
<location>Los Angeles, CA.</location>
<contexts>
<context position="1752" citStr="Ben-Zvi (1982)" startWordPosition="270" endWordPosition="271">thin a model-theoretic framework. 1 INTRODUCTION The relational model of data (RM), first proposed in 1970 (Codd 1970), has by now become the standard for both database practitioners and theoreticians alike. In spite of this success, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to val</context>
</contexts>
<marker>Ben-Zvi, 1982</marker>
<rawString>Ben-Zvi, J. 1982 The Time Relational Model. Ph.D. diss., Department of Computer Science, University of California, Los Angeles, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M R Bennett</author>
</authors>
<title>Some Extensions of a Montague Fragment of English. Ph.D.</title>
<date>1974</date>
<location>diss., UCLA.</location>
<contexts>
<context position="21217" citStr="Bennett (1974)" startWordPosition="3592" endWordPosition="3593">James Clifford Natural Language Querying of Historical Databases that these, and the database semantics, have occasioned. As in much of the work that has been done in the area of Montague Semantics since Montague&apos;s death in 1970, we have allowed the PTQ fragment to stand pretty much intact as the heart of QE-III. However, we have redefined this fragment in terms of the language IL, in order to allow direct reference to moments in time. 3.2 PRELIMINARIES 3.2.1 INDIVIDUAL CONCEPTS VS. ENTITIES Most recent research in the field of Montague Semantics has incorporated the suggestion, first made in Bennett (1974), that Montague&apos;s treatment of common nouns (CNs) and intransitive verbs (IVs) as denoting sets of individual concepts (ICs) is unduly complicated. Under Bennett&apos;s suggestion, both CNs and IVs denote sets of simple individuals, with the result that the entire typing scheme of the English categories in these fragments is considerably simplified. In Section 2 we showed that attributes in an HRDB can be identified with ICs. Accordingly we have not adopted the Bennett type system, but have instead maintained the treatment of PTQ. 3.2.2 VERBS Montague&apos;s semantic treatment of verbs leaves them compl</context>
<context position="103258" citStr="Bennett (1974)" startWordPosition="17047" endWordPosition="17048">e personal pronoun upon substitution of a term. We have expanded this technique somewhat, using variables of the form [it-CASE-i] where CASE ranges over {NOM,DAT,ACC} and i over the natural numbers. 3. Rule S9 for combining a sentence adverbial (&amp;quot;Necessarily&amp;quot;) with a sentence, has been eliminated. This is because the only sentence adverbials in QE-III are time adverbials, which are brought in together with the tense marker in rules S104—S106. 4. It is well know that there are problems with the PTQ treatment of conjunction and disjunction of terms and IVs (see discussion in Friedman (1979) and Bennett (1974)). While Friedman&apos;s bracketing solution is ultimately more acceptable (both by virtue of its generality and, of particular interest, its natural correspondence to a LISP implementation), we have for simplicity of presentation adopted Bennett&apos;s simple solution of marking all basic verbs with a # marker, which is removed when the verb is ultimately tensed. (We choose this solution because the points we wish to make have only to do with the verbs, and are easily understood with this technique. For ease of understanding the translations to follow, the following table shows the types of the variabl</context>
<context position="107301" citStr="Bennett (1974)" startWordPosition="17727" endWordPosition="17728">ys introduced present tense first, subject to possible subsequent modifications. Dowty (1979) makes a similar point—though still in terms of introducing the tense via a SUBJ + PRED rule—but does not incorporate the idea into the fragment presented there. In a number of the PTQ rules Montague makes use of the auxiliary notions of the gender of a CN or a T, and the third-person singular form of a verb. These notions are never defined with the same rigor that Montague demanded of other characteristics of his logic and grammar, presumably because he felt they were obvious and uninteresting. As in Bennett (1974) we make use of a number of similar auxiliary notions in our rules. This example points out two such notions, viz., that of the tense of a clause and the case of a variable. In our fragment a clause is either untensed or tensed, and belongs to a different category (though of the same logical type) in either case. A variable introduced into a sentence is either uncased, or one of NOM, ACC, or DAT. The translation of Example 4-1 corresponding to the above analysis tree is as follows: Mary = =&gt; AP3x[P(i)(x) A x(i) = Mary] #manage --= =&gt; AWAx[W(i)(AiAy[AS-1(y(i),x) A EMP*&apos;(i)(y(i)) A MGR&apos;(i)(x)])]</context>
</contexts>
<marker>Bennett, 1974</marker>
<rawString>Bennett, M.R. 1974 Some Extensions of a Montague Fragment of English. Ph.D. diss., UCLA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M R Bennett</author>
</authors>
<title>A Response to Karttunen on Questions.</title>
<date>1977</date>
<journal>Linguistics and Philosophy</journal>
<volume>1</volume>
<pages>279--300</pages>
<contexts>
<context position="35905" citStr="Bennett (1977" startWordPosition="5972" endWordPosition="5973">atural language questions as well. In what seems to be his only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are of course inappropriate, and would be replaced by fulfillment conditions and a characterization of the semantic content of a correct answer&amp;quot; (Montague 1973). Perhaps inspired by this comment, a number of researchers have been investigating ways to incorporate a formal account of the syntax and semantics of questions within the framework of Montague Semantics. Hamblin (1973), Karttunen (1977), Bennett (1977, 1979), Hausser and Zaefferer (1978), and Belnap (1982) are perhaps the most important of these investigations, and we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answ</context>
<context position="44663" citStr="Bennett (1977" startWordPosition="7388" endWordPosition="7389">ltiple wh-questions and ultimately adopt one as our solution. We will see, however, in the course of this presentation, that there are considerable technical difficulties in defining the semantics in such a way as to get it all to come out right for both single and multiple wh-questions. The solution that we adopt, involving the addition of a formally specified pragmatics for the fragment, does have this property in addition to meeting our other criteria; moreover, the simplicity of our solution, as contrasted with the considerable complexity in other proposals for a question semantics, e.g., Bennett (1977, 1979) and Hausser and Zaefferer (1978), makes it especially attractive. However, it is clear that many researchers have found the same kinds of difficulties in extending Montague&apos;s work in the direction of interpreting questions, and that further work in this area is needed. We hope that our proposal to treat the answering of a question as a component of a formally specified pragmatics of the language, apart from its semantics, is a step in the proper direction. 3.5 THE QE-III THEORY OF QUESTIONS 3.5.1 INTRODUCTION We first present a general view of the substance of our theory of the interpr</context>
<context position="56412" citStr="Bennett 1977" startWordPosition="9327" endWordPosition="9329">erence, extended to allow substitution of wh-terms, is equally able to capture the fact that &amp;quot;who&amp;quot; and &amp;quot;him&amp;quot; are co-referent, as are &amp;quot;an employee&amp;quot; and &amp;quot;he&amp;quot;. Under our analysis, this sentence would be derived as follows: Who manages an employee such that he manages him? Who #manage an employee such that he manages him? who [it-NOM-0] #manage an employee such that [it-NOM-0] manages him. This idea of extending the PTQ theory of co-reference to the case of interrogatives is not ours. It is used in most of the work on question semantics in the Montague Grammar tradition (including Karttunen 1977, Bennett 1977, 1979, and Belnap 1982). It is that theory that we have incorporated into our fragment. Because question words in our fragment are always assumed to have the entire sentence as their scope (i.e., there are no embedded question clauses), and because of the extensional nature of our theory as dictated by the database, question words can always be brought in indirectly by means of substitution rules. The difference in our respective treatments lies in our attempts to formalize the meaning given to questions. Let us take a look now at why the analysis we have presented so far cannot be extended t</context>
<context position="64427" citStr="Bennett (1977" startWordPosition="10630" endWordPosition="10631">les schemas for their substitution) requires the same technique for each of the tense rules, and for each of the tense rules with time adverbials, and for each of the when-question rules, the rules for when-questions with tenses, for when-questions with tenses and time adverbials, etc. In other words, accepting a solution that types all questions differently depending upon what they ask for forces the inclusion of rule schemas for all of the other semantic functions that in a simple theory would operate only on one type, the type given to sentences. (Later we will discuss how the solutions of Bennett (1977, 1979), Belnap (1982), and of Hausser and Zaefferer (1978) entail a similar rippling effect of complexity throughout the rest of the semantic theory already developed for declarative sentences.) For an example of this effect in the theory under consideration, consider what the rule for adding past tense to a sentence would look like. (Recall our arguments for the necessity of treating tense as a property of the entire sentence.) Such a rule would have to be of the form Pa + -ED = =&gt; Qa, where a could be the category declarative sentence (type t), 1-term question (type &lt;e,t&gt;), 2-term question </context>
<context position="69485" citStr="Bennett 1977" startWordPosition="11469" endWordPosition="11470">sking it to do for us more than it was intended to do. For example, most theories of question semantics have attempted to include some representation of the answer of the question as part of its denotation. Is there not something odd in a theory that holds that a question denotes its answer, especially if one has tried (or tried not) to think of denoting as a formal counterpart to the intuitive notion of meaning? Yet in one form or another (denoting the set of possible answers (Hamblin 1973), the set of correct answers (Karttunen 1977), functions from sequences of individuals to propositions (Bennett 1977, 1979 and Belnap 1982), and our sets of n-tuples of individuals) many researchers have been investigating ways to accomplish this in a formal semantics. The similarity between wh-terms and unbound pronouns (&amp;quot;Who loves whom?&amp;quot; versus &amp;quot;He loves him&amp;quot;) suggest another approach, viz., one in which 1. the semantic component provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as requests for their answers. Pragmatics is the least understood branch of the tripartite division of the study of language </context>
<context position="86182" citStr="Bennett (1977" startWordPosition="14279" endWordPosition="14280">sitions or sets of propositions, but it seems that even before the choice of just what questions denote was made, this &amp;quot;single semantics&amp;quot; viewpoint had been adopted. The other, as we have already pointed out, is that some account of the answer(s) to a question should be included at least as a component of its semantics. When combined with other factors these two biases have led to somewhat different results. Thus Hamblin (1973) suggests that a question denotes the set of all &amp;quot;propositions that count as answers to it&amp;quot;; Karttunen (1977), &amp;quot;the set of propositions expressed by[its] true answers&amp;quot;; Bennett (1977, 1979) and Belnap (1982), who worked with Bennett on the theory, &amp;quot;sets of open propositions:functions from sequences of individuals to propositions.&amp;quot; 3.6.2 KARTTUNEN As we have said, Karttunen (1977) presents an analysis of the semantics of questions that falls within the single semantics tradition. (Hamblin (1973) earlier proposed a treatment similar to Karttunen&apos;s, but his theory was not worked out in as much detail.) In Karttunen&apos;s theory, for example, the question &amp;quot;Who manages John?&amp;quot; would roughly be translated as: Ap3x[p(i) A p = Ai [manage&apos; (i)(x)(i) ,John]) . Semantically, this express</context>
<context position="90581" citStr="Bennett (1977" startWordPosition="14995" endWordPosition="14996">anguage Querying of Historical Databases (&amp;quot;Mary and Susan&amp;quot; and &amp;quot;Bill and Susan&amp;quot;), as well as the relations in the database that express the same information.5 understand it, we provide the following table of the types of the variables used. Variable symbols Type of variable symbol P &lt;e,t&gt; : sets of individuals r,s &lt;n,e&gt; : sequences of individuals 0 &lt;&lt;n,e&gt;,&lt;s,t&gt;&gt; : open propositions Qi Q2 Mary Bill Susan Susan As noted earlier, Bennett discussed the issue of the logic of questions in two separate papers, and collaborated with Belnap in the development. Their theory is presented cumulatively in Bennett (1977, 1979) and Belnap (1982). Motivated again by the goal of a single semantics, and even more strongly by a desire to account for the individuals that answer the question, Belnap and Bennett develop a theory that incorporates sequences of individuals into the model theory. Thus a question like &amp;quot;Whom does John love?&amp;quot; is treated as denoting a set of functions from sequences of individuals to propositions. Essentially all and only those sequences that close the open proposition &amp;quot;John loves [it-ACC-O]&amp;quot; and make it true are included in this denotation. What this is tantamount to is incorporating the </context>
</contexts>
<marker>Bennett, 1977</marker>
<rawString>Bennett, M.R. 1977 A Response to Karttunen on Questions. Linguistics and Philosophy 1: 279-300.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M R Bennett</author>
</authors>
<title>Questions in Montague Grammer (Technical Report).</title>
<date>1979</date>
<institution>Indiana University Linguistics Club,</institution>
<location>Bloomington, IN.</location>
<contexts>
<context position="92197" citStr="Bennett 1979" startWordPosition="15259" endWordPosition="15260">raordinarily reminiscent of the problems we had in formulating a theory with inductive wh-terms. In order to accomplish this result, the set of types of the IL is expanded to include as a basic type n, expressions of type n denoting a natural number. Thus the natural numbers must be included as objects in the model, as well as functions constructed from them. Of particular interest in their theory are the functions from N to individuals, i.e., sequences. The ripple effect necessitates that &amp;quot;all expressions of English [denote] functions from sequences of individuals to their usual extensions&amp;quot; (Bennett 1979). Even sentences are no longer translated into formulas, but rather into expressions of type &lt;&lt;n,e&gt;,t&gt; that denote sets of sequences. Unfortunately, the results of this complication to the logic and the English translations do not seem to justify the cost. Certainly this theory represents a step closer to the goal of capturing explicitly in the denotation the individuals that answer the question, so it is an improvement over the proposition proposal. But these individuals are hidden somewhere inside infinite sequences of individuals, with no indication of their position within those sequences.</context>
</contexts>
<marker>Bennett, 1979</marker>
<rawString>Bennett, M.R. 1979 Questions in Montague Grammer (Technical Report). Indiana University Linguistics Club, Bloomington, IN.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M R Bennett</author>
<author>B H Partee</author>
</authors>
<date>1972</date>
<booktitle>Toward the Logic of Tense and Aspect in English (Technical Report).</booktitle>
<institution>Indiana University Linguistics Club,</institution>
<location>Bloomington, IN.</location>
<contexts>
<context position="26315" citStr="Bennett and Partee (1972)" startWordPosition="4429" endWordPosition="4432">ur categories of statives, activities, accomplishments, and achievements. Dowty judges all of these proposals by the two criteria of syntactic and semantic uniformity: can all of the verbs assigned to a given class appear in the same syntactic constructs, and are the same inferences in meaning justified for all like-classified verbs? Dowty&apos;s final taxonomy, offered with many reservations, defines eight different verb categories. These aspectual verb distinctions, and particularly the semantics of the progressive tenses. lead Dowty to espouse a theory of interval semantics, earlier proposed by Bennett and Partee (1972), wherein truth conditions are given relative to an interval, rather than to a 14 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases moment, of time. Unlike other proposed changes to Montague&apos;s PTQ analysis of English, this proposal causes major modifications to the most basic semantic notion of IL, and indeed of most other temporal logics that have been studied (e.g., Rescher and Urquhart 1971). We are not convinced of the necessity of taking this step (indeed, Dowty himself says that &amp;quot;it results in a system that is r</context>
</contexts>
<marker>Bennett, Partee, 1972</marker>
<rawString>Bennett, M.R. and Partee, B.H. 1972 Toward the Logic of Tense and Aspect in English (Technical Report). Indiana University Linguistics Club, Bloomington, IN.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Carnap</author>
</authors>
<title>Meaning and Necessity.</title>
<date>1947</date>
<publisher>University of Chicago Press,</publisher>
<location>Chicago, IL.</location>
<contexts>
<context position="71052" citStr="Carnap 1947" startWordPosition="11725" endWordPosition="11726">ough analysis of the various approaches that have been taken to define the scope of linguistic pragmatics, from its origin in Morris&apos;s definition of semiotics (Morris 1938) to the present day. It is obvious from these accounts that there has been less agreement as to the scope of this branch of the field. Morris (1938) originally defined pragmatics as the study of &amp;quot;the relation of signs to interpreters.&amp;quot; Later, at least partly in response to Carnap&apos;s proposal that &amp;quot;if in an investigation explicit reference is made to the . . . user of a language, then we assign it to the field of pragmatics&amp;quot; (Carnap 1947), Morris felt the need to expand upon this definition. In Morris (1946), he says that pragmatics is &amp;quot;that portion of semiotic which deals with the origins, uses, and effects of signs within the behavior in which they occur.&amp;quot; Montague&apos;s conception of pragmatics (Montague 1968, 1970a, and 1973), based upon Bar-Hillel&apos;s (BarHillel 1954) discussion of indexical expressions, represents a departure from the traditional view. Hamblin (1973) felt that Montague&apos;s incorporation of a pragmatic component directly in the syntax and semantics was unconventional, and felt the need &amp;quot;to defend pragmatics from </context>
</contexts>
<marker>Carnap, 1947</marker>
<rawString>Carnap, R. 1947 Meaning and Necessity. University of Chicago Press, Chicago, IL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L Chang</author>
</authors>
<title>DEDUCE 2: Further Investigations of Deduction in Relational Data Bases.</title>
<date>1978</date>
<booktitle>Logic and Data Bases.</booktitle>
<editor>In Gallaire, H. and Minker, J. (eds.)</editor>
<publisher>Plenum Press,</publisher>
<location>New York, NY.</location>
<contexts>
<context position="15512" citStr="Chang (1978)" startWordPosition="2677" endWordPosition="2678">erying of Historical Databases 1. t.1, the lifespan of tuple t, is a subset of the set T, and represents the set of times over which its attributes are defined, and 2. t.v, the value of the tuple, is a mapping such that V attributes A E R, t.v(A) is a mapping in t.1 —&gt; DOM(A) (the value-domain of attribute A). 2.1 EXAMPLE DATABASE In the remainder of the paper we will discuss the semantics and pragmatic theory of QE-III, illustrated with example database queries to an HRDB. For this purpose we now define the relation schemas for a historical department store data base based upon an example in Chang (1978). EMP_REL (EMP MGR DEPT SAL) DEPT_REL (DEPT FLOOR) ITEM REL (ITEM TYPE) SALES REL (DEPT ITEM VOL) This concludes our brief overview of HRDM. For further details the reader is referred to Clifford (1985) and Clifford and Croker (1987). 3 OVERVIEW OF ENGLISH QUERY LANGUAGE QE-III 3.1 INTRODUCTION HRDM serves to formally incorporate a temporal semantics into an extended relational database model. In order to query a historical database using English, we define the semantics of queries expressed in English in terms of the semantics of HRDM, by defining a small query fragment as a Montague Grammar.</context>
</contexts>
<marker>Chang, 1978</marker>
<rawString>Chang, C.L. 1978 DEDUCE 2: Further Investigations of Deduction in Relational Data Bases. In Gallaire, H. and Minker, J. (eds.) Logic and Data Bases. Plenum Press, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clifford</author>
</authors>
<title>A Model for Historical Data Bases.</title>
<date>1982</date>
<booktitle>In Proceedings of Logical Bases for Data Bases. ONERA-CERT,</booktitle>
<location>Toulouse, France.</location>
<contexts>
<context position="1979" citStr="Clifford 1982" startWordPosition="304" endWordPosition="305">cess, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a mechanism for direct reference to these higher-order objects, and for incorporating them into a general temporal semantics for the database. We can there</context>
<context position="7522" citStr="Clifford (1982" startWordPosition="1199" endWordPosition="1200">schema, and, of course, (3) the inclusion of certain forms of direct questions. These extensions, and the semantic and pragmatic interpretations with which they are provided, are motivated by the ultimate goal of database access, but they are equally interesting in their own right. The syntactic theory presented is in some cases admittedly naive, for we have been primarily interested in getting the interpretation right. Section 4 provides an overview of the salient features of the QE-III by means of a number of example derivations and translations. The complete definition of QEIII is given in Clifford (1982b) and again in Clifford (1987), where it appears with a fuller set of examples. We conclude in Section 5 with a discussion of some of the limitations of the fragment and of some possibilities for further extensions. 2 THE HISTORICAL RELATIONAL DATABASE MODEL Analogous to the relationship between the relational model of data and first-order logic (Gallaire and Minker 1978), we can view an HRDB as a model for ILs (Clifford 1982b). The higher-order language ILs (with its built-in concept of denotation with respect to an index) provides a formal semantics for such data bases in a natural way. In </context>
<context position="98430" citStr="Clifford 1982" startWordPosition="16276" endWordPosition="16277">ression which is the critical one in any kind of answer.&amp;quot; In other words, their semantic analysis of answers is quite similar to our pragmatic analysis of questions. The following table comparing the types assigned to various kinds of questions by their semantics and our pragmatics might help to make this analogy clearer. Question class Our typing H-Z typing yes-no &lt;e,t&gt; t I individual &lt;e,&lt;e,t&gt;&gt; &lt;&lt;s,f(T)&gt;,t&gt; 2 individual &lt;&lt;s,f(T)&gt;,&lt;&lt;s,f(T)&gt;,t» 3.6.4 SCHA AND GUNJI The work of Scha (1983) on the PHLIQA1 project and Gunji (1981), both being developed concurrently with the development of QE-III (Clifford 1982b), are remarkably similar in spirit, though not in detail, to the present work. The close parallels in the motivation of these three works indicate a trend among many researchers toward developing a formal foundation for computer systems that do natural language processing. The major theoretical difference between QE-III and that of the PHLIQA1 project of Scha are that we make a distinction between the semantics and pragmatics of sentences in QE-III, so that the pragmatic interpretation of questions in QE-III is closely analogous to Scha&apos;s semantics for the same question. We continue to belie</context>
</contexts>
<marker>Clifford, 1982</marker>
<rawString>Clifford, J. 1982 A Model for Historical Data Bases. In Proceedings of Logical Bases for Data Bases. ONERA-CERT, Toulouse, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clifford</author>
</authors>
<title>A Logical Framework for the Temporal Semantics and Natural-Language Querying of Historical Databases.</title>
<date>1982</date>
<tech>Ph.D. diss.,</tech>
<institution>Department of Computer Science, SUNY at Stony Brook.</institution>
<contexts>
<context position="1979" citStr="Clifford 1982" startWordPosition="304" endWordPosition="305">cess, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a mechanism for direct reference to these higher-order objects, and for incorporating them into a general temporal semantics for the database. We can there</context>
<context position="7522" citStr="Clifford (1982" startWordPosition="1199" endWordPosition="1200">schema, and, of course, (3) the inclusion of certain forms of direct questions. These extensions, and the semantic and pragmatic interpretations with which they are provided, are motivated by the ultimate goal of database access, but they are equally interesting in their own right. The syntactic theory presented is in some cases admittedly naive, for we have been primarily interested in getting the interpretation right. Section 4 provides an overview of the salient features of the QE-III by means of a number of example derivations and translations. The complete definition of QEIII is given in Clifford (1982b) and again in Clifford (1987), where it appears with a fuller set of examples. We conclude in Section 5 with a discussion of some of the limitations of the fragment and of some possibilities for further extensions. 2 THE HISTORICAL RELATIONAL DATABASE MODEL Analogous to the relationship between the relational model of data and first-order logic (Gallaire and Minker 1978), we can view an HRDB as a model for ILs (Clifford 1982b). The higher-order language ILs (with its built-in concept of denotation with respect to an index) provides a formal semantics for such data bases in a natural way. In </context>
<context position="98430" citStr="Clifford 1982" startWordPosition="16276" endWordPosition="16277">ression which is the critical one in any kind of answer.&amp;quot; In other words, their semantic analysis of answers is quite similar to our pragmatic analysis of questions. The following table comparing the types assigned to various kinds of questions by their semantics and our pragmatics might help to make this analogy clearer. Question class Our typing H-Z typing yes-no &lt;e,t&gt; t I individual &lt;e,&lt;e,t&gt;&gt; &lt;&lt;s,f(T)&gt;,t&gt; 2 individual &lt;&lt;s,f(T)&gt;,&lt;&lt;s,f(T)&gt;,t» 3.6.4 SCHA AND GUNJI The work of Scha (1983) on the PHLIQA1 project and Gunji (1981), both being developed concurrently with the development of QE-III (Clifford 1982b), are remarkably similar in spirit, though not in detail, to the present work. The close parallels in the motivation of these three works indicate a trend among many researchers toward developing a formal foundation for computer systems that do natural language processing. The major theoretical difference between QE-III and that of the PHLIQA1 project of Scha are that we make a distinction between the semantics and pragmatics of sentences in QE-III, so that the pragmatic interpretation of questions in QE-III is closely analogous to Scha&apos;s semantics for the same question. We continue to belie</context>
</contexts>
<marker>Clifford, 1982</marker>
<rawString>Clifford, J. 1982 A Logical Framework for the Temporal Semantics and Natural-Language Querying of Historical Databases. Ph.D. diss., Department of Computer Science, SUNY at Stony Brook.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clifford</author>
</authors>
<title>Towards an Algebra of Historical Relational Data bases.</title>
<date>1985</date>
<booktitle>In ACM-SIGMOD International Conference on Management of Data.</booktitle>
<location>Austin, TX.</location>
<contexts>
<context position="1827" citStr="Clifford (1985)" startWordPosition="282" endWordPosition="283">ata (RM), first proposed in 1970 (Codd 1970), has by now become the standard for both database practitioners and theoreticians alike. In spite of this success, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a m</context>
<context position="15714" citStr="Clifford (1985)" startWordPosition="2711" endWordPosition="2712"> a mapping such that V attributes A E R, t.v(A) is a mapping in t.1 —&gt; DOM(A) (the value-domain of attribute A). 2.1 EXAMPLE DATABASE In the remainder of the paper we will discuss the semantics and pragmatic theory of QE-III, illustrated with example database queries to an HRDB. For this purpose we now define the relation schemas for a historical department store data base based upon an example in Chang (1978). EMP_REL (EMP MGR DEPT SAL) DEPT_REL (DEPT FLOOR) ITEM REL (ITEM TYPE) SALES REL (DEPT ITEM VOL) This concludes our brief overview of HRDM. For further details the reader is referred to Clifford (1985) and Clifford and Croker (1987). 3 OVERVIEW OF ENGLISH QUERY LANGUAGE QE-III 3.1 INTRODUCTION HRDM serves to formally incorporate a temporal semantics into an extended relational database model. In order to query a historical database using English, we define the semantics of queries expressed in English in terms of the semantics of HRDM, by defining a small query fragment as a Montague Grammar. The correlation between the database semantics and this query language is made explicit by providing the semantics of the query fragment via an indirect translation into the intensional logic IL.&apos; The </context>
</contexts>
<marker>Clifford, 1985</marker>
<rawString>Clifford, J. 1985 Towards an Algebra of Historical Relational Data bases. In ACM-SIGMOD International Conference on Management of Data. Austin, TX.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clifford</author>
</authors>
<title>Natural Language Querying of Historical Data bases—The QE-Ill Language Definition and Examples (Technical Reports CRIS-#164,</title>
<date>1987</date>
<pages>87--90</pages>
<institution>Department of Information Systems, New York University,</institution>
<location>New York, NY.</location>
<contexts>
<context position="7553" citStr="Clifford (1987)" startWordPosition="1204" endWordPosition="1205">e inclusion of certain forms of direct questions. These extensions, and the semantic and pragmatic interpretations with which they are provided, are motivated by the ultimate goal of database access, but they are equally interesting in their own right. The syntactic theory presented is in some cases admittedly naive, for we have been primarily interested in getting the interpretation right. Section 4 provides an overview of the salient features of the QE-III by means of a number of example derivations and translations. The complete definition of QEIII is given in Clifford (1982b) and again in Clifford (1987), where it appears with a fuller set of examples. We conclude in Section 5 with a discussion of some of the limitations of the fragment and of some possibilities for further extensions. 2 THE HISTORICAL RELATIONAL DATABASE MODEL Analogous to the relationship between the relational model of data and first-order logic (Gallaire and Minker 1978), we can view an HRDB as a model for ILs (Clifford 1982b). The higher-order language ILs (with its built-in concept of denotation with respect to an index) provides a formal semantics for such data bases in a natural way. In the standard or &amp;quot;static&amp;quot; relati</context>
<context position="100549" citStr="Clifford (1987)" startWordPosition="16605" endWordPosition="16606">declarative and imperative sentences, and true-false questions, QE-III resulted from a concentration on wh-questions and an explicit treatment of time-denoting expressions. This concludes our informal discussion of the goals and philosophy behind the definition of the fragment QE-III, and its relation to other recent work in the area of formal question semantics. The next section provides an overview of QE-III through a series of examples and discussions illustrating the major features of the language. (The complete definition of the syntax, semantics, and pragmatics of QE-III can be found in Clifford (1987).) 4 EXAMPLES FROM THE QE-III FRAGMENT 4.1 INTRODUCTION This section presents and discusses examples of the syntactic and translation rules of the QE-III fragment. As we pointed out in Section 3, the PTQ fragment 28 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases stands essentially intact as the core of QE-III. There are, however, certain changes to this core. One major change is our use of the logic IL, as the intermediate translation language; this logic is a modification to Montague&apos;s IL, and makes explicit the &amp;quot;</context>
</contexts>
<marker>Clifford, 1987</marker>
<rawString>Clifford, J. 1987 Natural Language Querying of Historical Data bases—The QE-Ill Language Definition and Examples (Technical Reports CRIS-#164, GBA-WP#87-90). Department of Information Systems, New York University, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clifford</author>
<author>A Croker</author>
</authors>
<title>The Historical Relational Data Model (HRDM) and Algebra Based on Lifespans.</title>
<date>1987</date>
<booktitle>In Proceedings of the Third International Conference on Data Engineering.</booktitle>
<location>Los Angeles, CA.</location>
<contexts>
<context position="2054" citStr="Clifford and Croker 1987" startWordPosition="312" endWordPosition="315">s to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a mechanism for direct reference to these higher-order objects, and for incorporating them into a general temporal semantics for the database. We can therefore express both static and dynamic queries in the same language, by quant</context>
<context position="11074" citStr="Clifford and Croker (1987)" startWordPosition="1777" endWordPosition="1780"> algebraic formulation for this query. With the first-order representation for John&apos;s salary given above, as a first guess we might imagine that RISE* I 3x3y emp(John,x,y,z)}) would represent this new query, where RISE is a predicate symbol. However, even with the knowledge that John has only one salary, say 25K, it clearly makes no sense to ask whether 25K &amp;quot;rises.&amp;quot; To answer this question, more data is needed than the current extension of John&apos;s salary: the values of John&apos;s salary for some other point(s) of time (in this specific instance, in the past) are needed. The HRDM model presented in Clifford and Croker (1987), built upon a formalization of the concept of intension, provides a uniform way to view attributes (such as SALaries) not as individual dollar amounts, but as functions from moments in time to dollar amounts. For the purposes of this paper we will present an overview of HRDM and discuss some of the issues involved. Informally speaking, tuples in a relation represent facts about some object (entity or relationship) identified by the value of the key attribute(s). For example, in relation emp on scheme EMP (EMP-NAME MGR DEPT SALARY), the attribute EMP-NAME is the key attribute, and DEPT, MGR, a</context>
<context position="15745" citStr="Clifford and Croker (1987)" startWordPosition="2714" endWordPosition="2717"> V attributes A E R, t.v(A) is a mapping in t.1 —&gt; DOM(A) (the value-domain of attribute A). 2.1 EXAMPLE DATABASE In the remainder of the paper we will discuss the semantics and pragmatic theory of QE-III, illustrated with example database queries to an HRDB. For this purpose we now define the relation schemas for a historical department store data base based upon an example in Chang (1978). EMP_REL (EMP MGR DEPT SAL) DEPT_REL (DEPT FLOOR) ITEM REL (ITEM TYPE) SALES REL (DEPT ITEM VOL) This concludes our brief overview of HRDM. For further details the reader is referred to Clifford (1985) and Clifford and Croker (1987). 3 OVERVIEW OF ENGLISH QUERY LANGUAGE QE-III 3.1 INTRODUCTION HRDM serves to formally incorporate a temporal semantics into an extended relational database model. In order to query a historical database using English, we define the semantics of queries expressed in English in terms of the semantics of HRDM, by defining a small query fragment as a Montague Grammar. The correlation between the database semantics and this query language is made explicit by providing the semantics of the query fragment via an indirect translation into the intensional logic IL.&apos; The translations provide for a comp</context>
<context position="118546" citStr="Clifford and Croker 1987" startWordPosition="19576" endWordPosition="19579">o our understanding and specification of the properties of time that we can incorporate into our models and systems. Using the logic IL, and the framework of MS, we have presented in this paper an overview of the HRDM, which is a formalization of the concept of a historical database. HRDM provides for the modeling of historical information in a DBMS, for the specification of constraints on the way that information can change over time, and for a query language for accessing that information with specific reference to its temporal dimension. To complement the relational query language of HRDM (Clifford and Croker 1987), we have in this paper described a formal English database query language, QE-III, which is defined in a MS framework. QE-III incorporates a formal syntax, semantics, and pragmatics to account for an interpretation of questions that accord with the interpretation of HRDM, including an account of multiple-wh questions, a semantics and pragmatics of time, and a grammar that is conducive to a computer implementation. In addition to its formal syntax and parallel semantics, QE-III is provided with a formal pragmatics that provides a representation for the answer(s) to a question as a function of </context>
</contexts>
<marker>Clifford, Croker, 1987</marker>
<rawString>Clifford, J., and Croker, A. 1987 The Historical Relational Data Model (HRDM) and Algebra Based on Lifespans. In Proceedings of the Third International Conference on Data Engineering. Los Angeles, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clifford</author>
<author>D S Warren</author>
</authors>
<title>Formal Semantics for Time in Data bases.</title>
<date>1983</date>
<journal>ACM Transcript on Data base Systems</journal>
<volume>8</volume>
<issue>2</issue>
<pages>214--254</pages>
<contexts>
<context position="2009" citStr="Clifford and Warren 1983" startWordPosition="306" endWordPosition="309">h recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a mechanism for direct reference to these higher-order objects, and for incorporating them into a general temporal semantics for the database. We can therefore express both static and d</context>
</contexts>
<marker>Clifford, Warren, 1983</marker>
<rawString>Clifford, J., and Warren, D.S. 1983 Formal Semantics for Time in Data bases. ACM Transcript on Data base Systems 8(2): 214-254.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E F Codd</author>
</authors>
<title>A Relational Model of Data For Large Shared Data Banks.</title>
<date>1970</date>
<journal>Communications of the ACM</journal>
<volume>13</volume>
<issue>6</issue>
<pages>377--387</pages>
<contexts>
<context position="1256" citStr="Codd 1970" startWordPosition="190" endWordPosition="191">tics into a database at the conceptual level. We then present the essential features of QE-III, a formally defined English database query language whose semantic and pragmatic theory, based on a Montague-type semantics, makes explicit reference to the notion of denotation with respect to a moment of time. We demonstrate the use of this language to query an example historical database, and discuss the issues of how to provide both a semantic and a pragmatic interpretation for questions within a model-theoretic framework. 1 INTRODUCTION The relational model of data (RM), first proposed in 1970 (Codd 1970), has by now become the standard for both database practitioners and theoreticians alike. In spite of this success, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), a</context>
</contexts>
<marker>Codd, 1970</marker>
<rawString>Codd, E.F. 1970 A Relational Model of Data For Large Shared Data Banks. Communications of the ACM 13(6): 377-387.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Cooper</author>
</authors>
<title>Variable Binding and Relative Clauses.</title>
<date>1979</date>
<booktitle>Formal Semantics and Pragmatics for Natural Languages. D. Reidel Publishing Co.,</booktitle>
<editor>In Guenthner, F., and Schmidt, S.J. (eds.)</editor>
<location>Dordrecht, The Netherlands.</location>
<marker>Cooper, 1979</marker>
<rawString>Cooper, R. 1979 Variable Binding and Relative Clauses. In Guenthner, F., and Schmidt, S.J. (eds.) Formal Semantics and Pragmatics for Natural Languages. D. Reidel Publishing Co., Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D R Dowty</author>
</authors>
<title>A Guide to Montague&apos;s PTQ (Technical Report).</title>
<date>1978</date>
<institution>Indiana University Linguistics Club,</institution>
<location>Bloomington, IN.</location>
<contexts>
<context position="65933" citStr="Dowty (1978)" startWordPosition="10879" endWordPosition="10880">ern for simplicity and elegance. An additional problem with a theory dependent upon simultaneous substitution is a difficulty of conceiving of it in semantic terms. While the translation rules for such a theory can probably be described (they would be somewhat complicated), they strongly suggest the view that the translation rules themselves are the semantics, when in fact they are nothing more than syntactic operations on strings of logical symbols. (This is a common problem for people working with Montague Grammars, occasioned by the indirect way that the semantics for English is specified. Dowty (1978) refers to this problem when he reminds us that &amp;quot;the translation is a completely dispensable part of the [PTQ] theory. The &apos;real&apos; semantic interpretation of an English sentence is the model-theoretic interpretation of its translation and nothing but the model-theoretic interpretation of that translation.&amp;quot;) When examined in terms of the semantic space of functions in the model, it is not clear what simultaneous substitution in the syntax denotes model theoretically. 3.5.4 TEMPORAL QUESTIONS When-questions are different from any of the questions we have considered so far for three reasons. First</context>
<context position="71954" citStr="Dowty (1978)" startWordPosition="11872" endWordPosition="11873">73), based upon Bar-Hillel&apos;s (BarHillel 1954) discussion of indexical expressions, represents a departure from the traditional view. Hamblin (1973) felt that Montague&apos;s incorporation of a pragmatic component directly in the syntax and semantics was unconventional, and felt the need &amp;quot;to defend pragmatics from this weakened interpretation . . . . Pragmatics is the study of the use (not just reference) of language of all kinds; or, if it is not, we need a new name for the study that complements syntax and semantics. Montague&apos;s &apos;pragmatics&apos; would be better classed as a special part of semantics.&amp;quot; Dowty (1978), while admitting that &amp;quot;the linguist&apos;s use of the term pragmatics is far from standardized,&amp;quot; adopts the view that it should encompass direct and indirect speech acts, presuppositions, and implicatures, and explicitly rejects Montague&apos;s use of the term to encompass a treatment of indexical expressions. What we propose in our theory of questions is that the proper place for considering the answer(s) to a question is in a separate theory of pragmatics for the language. We do not propose a completely general theory of pragmatics. But we believe that incorporating into our fragment a formal pragmat</context>
</contexts>
<marker>Dowty, 1978</marker>
<rawString>Dowty, D.R. 1978 A Guide to Montague&apos;s PTQ (Technical Report). Indiana University Linguistics Club, Bloomington, IN.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D R Dowty</author>
</authors>
<title>Word Meaning and</title>
<date>1979</date>
<publisher>Reidel Publishing Co.,</publisher>
<location>Dordrecht, The Netherlands.</location>
<contexts>
<context position="24408" citStr="Dowty (1979)" startWordPosition="4132" endWordPosition="4133"> and how they must be related. Specifically, the subject must be an entity (y(i)) that is an EMP, the object an IC (x) that is a MGR, and the MGR-IC must be ASsociated with the EMPloyees (AS1). In general the translation of any verb in our theory will so specify the attribute of its subject (or the disjunction of alternatives, if any). The translation of a TV will further specify the attribute(s) of its direct object, and of a DTV of both its objects. Moreover any relationship(s) among these attributes will also be specified. 3.3 THE PROBLEMS OF TENSE AND TIME 3.3.1 INTERVALS OR STATES? David Dowty (1979) presents a discussion of a broad spectrum of semantic and syntactic issues relevant to the understanding of English, and in particular to providing a Montague Semantic analysis of these issues. In the final chapter of this book he formalizes many of the ideas he has discussed by defining a Montague fragment of English that includes such features as temporal adverbs, dative-taking verbs, a theory of word formation, and a treatment of several compound tense structures. In order to provide a semantics for this expansion of the PTQ fragment Dowty argues for the necessity of several significant ex</context>
<context position="26978" citStr="Dowty 1979" startWordPosition="4535" endWordPosition="4536">interval, rather than to a 14 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases moment, of time. Unlike other proposed changes to Montague&apos;s PTQ analysis of English, this proposal causes major modifications to the most basic semantic notion of IL, and indeed of most other temporal logics that have been studied (e.g., Rescher and Urquhart 1971). We are not convinced of the necessity of taking this step (indeed, Dowty himself says that &amp;quot;it results in a system that is really too powerful for natural language semantics&amp;quot; (Dowty 1979), p. 138). Certainly from the perspective of database querying, the complications that it introduces into the logic seem unnecessary. The existence of an actual historical database as the heart of our logical model is the major constraint within which all of our work must be undertaken. This &amp;quot;given,&amp;quot; which in essence already takes a stand on the semantics of the real world, stands as the major difference between Dowty&apos;s enterprise and ours. The semantic theory that we present is a theory of the semantics of English when used as a database query language for an HRDB, and not when used in ordina</context>
<context position="106677" citStr="Dowty (1979)" startWordPosition="17620" endWordPosition="17621">manage Mary&amp;quot;. Second, Rule S104 is new. It takes an untensed sentence as input and gives a (present) tensed sentence as output. Thus we have characterized tense as a property not of verbs, but of clauses, although this property in English is realized by the inflection of the main verb of the clause. The importance of this characterization will be made clearer when we consider the interaction of tense with interrogative sentences. This method of introducing tenses into a sentence obviates the need for undoing the English verb inflections that would be required by a method (such as in PTQ or in Dowty (1979) that always introduced present tense first, subject to possible subsequent modifications. Dowty (1979) makes a similar point—though still in terms of introducing the tense via a SUBJ + PRED rule—but does not incorporate the idea into the fragment presented there. In a number of the PTQ rules Montague makes use of the auxiliary notions of the gender of a CN or a T, and the third-person singular form of a verb. These notions are never defined with the same rigor that Montague demanded of other characteristics of his logic and grammar, presumably because he felt they were obvious and uninteresti</context>
<context position="109542" citStr="Dowty (1979)" startWordPosition="18103" endWordPosition="18104">bjects of the same type as in PTQ, but they are analyzed in terms of the database schema. 4.3 TEMPORAL REFERENCE IN QE-III In addition to its indication by means of the tense system, temporal reference in English is also indicated by certain time adverbials (today, last year, . . .) and also by prepositional phrases (in 1978, on Monday . . .). Care must be taken in order to analyze properly the semantics of sentences that involve an interaction between tenses and these other temporal indicators. They cannot be applied sequentially as operators to a clause, or the semantics will be incorrect. (Dowty (1979) makes the same observation.) The following derivation for 4-2. Peter earned 25K in 1978. illustrates this aspect of QE-III. Peter earned 25K in 1978 S108 in 1978 S113 Peter #earn 25K S4 / \ (derived as in Example 4-1) in 1978 This example illustrates Rule S108, which simultaneously adds a tense (past) and a time adverbial, and S113, which forms a temporal prepositional phrase. The pragmatic interpretation correctly indicates that there is some state in the past that is also in the set of states 1978 at which the present-tense sentence &amp;quot;Peter earns 25K is true&amp;quot;: 3i13y[1978&apos;(i1) A [i1 &lt; now] A </context>
<context position="115597" citStr="Dowty (1979)" startWordPosition="19099" endWordPosition="19100">including interrogative sentences. Interrogative terms (WHT&apos;s) can also be derived from common nouns and the interrogative determiners such as &amp;quot;which,&amp;quot; as seen in Example 4-7. 4-7. Who manages which employees? which is interpreted as: Au, Au23y[EMP*&apos;(now)(u2) A MGR&apos;(now)(y) Ay (now) = ul A AS-1(u2,y)]. Example 4-8 illustrates a three-term interrogative, using the three-place verb &amp;quot;#supply&amp;quot; and a rule (a simple extension of the two-place case, essentially Computational Linguistics, Volume 14, Number 4, December 1988 31 James Clifford Natural Language Querying of Historical Databases taken from Dowty (1979)) for combining such a verb with an indirect object to form a two-place verb. 4-8. What does who supply to whom? The interpretation7 is Au3Au2Au1 [COMP*&apos;(now)(u3) A DEPT*&apos;(now)(u2) A ITEM*&apos;(now)(u1) A REL-3 (u3,u2,u1)] . Example 4-9 illustrates a more complicated question that requires, in terms of the database representation, a &amp;quot;join&amp;quot; of two relations. 4-9. Who works for a department such that it sells shoes? It is interpreted as Au3x[EMP*&apos;(now)(u) A DEPT*&apos; (now) (x(now)) A AS-1(u,x) A ITEM*&apos;(now)(Shoes) A REL-2(x(now),Shoes)]. Yes-no questions can take two forms in the fragments 4-10. Is it </context>
</contexts>
<marker>Dowty, 1979</marker>
<rawString>Dowty, D.R. 1979 Word Meaning and Montague Grammer. D. Reidel Publishing Co., Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Engdahl</author>
</authors>
<title>Constituent Questions—The Syntax and Semantics of Questions with Special Reference to Swedish. D. Reidel Publishing Co.</title>
<date>1986</date>
<location>Dordrecht, The Netherlands.</location>
<contexts>
<context position="34161" citStr="Engdahl (1986)" startWordPosition="5696" endWordPosition="5697">en-questions, we will discuss this issue further. 3.4 QUESTIONS 3.4.1 INTRODUCTION Despite their obvious importance as a tool for gaining knowledge of the world, both linguists and philosophers have historically considered interrogative sentences the poor relation of the declaratives, to which they have paid the bulk of their attention. Among linguists there is no generally accepted theory about the syntactic generation of English questions (Kuno and Robinson 1972, Pope 1976), and philosophers and logicians have until recently given little attention to the question of questions. More recently Engdahl (1986) explored the issue of constituent questions in Swedish, and proposed a semantic theory of questions similar to those of Hamblin (1973) and Karttunen (1977), which we shall discuss in Section 3.6. Groenendijk and Stokhof (1983) address the issue of the appropriateness of an answer in different situations, an issue outside the scope of the present work. Formal logic from its inception directed its attention to languages based upon the notion of formulas, abstractions of declarative sentences in natural languages. Only recently have logicians begun to investigate the semantics of questions in an</context>
</contexts>
<marker>Engdahl, 1986</marker>
<rawString>Engdahl, E. 1986 Constituent Questions—The Syntax and Semantics of Questions with Special Reference to Swedish. D. Reidel Publishing Co. Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Filmore</author>
</authors>
<title>The Case for Case.</title>
<date>1968</date>
<booktitle>Universals in Linguistic Theory. Rinehart</booktitle>
<editor>In Bach, E. and Harris, R. (eds.)</editor>
<publisher>Winston,</publisher>
<location>New York, NY.</location>
<marker>Filmore, 1968</marker>
<rawString>Filmore, C. 1968 The Case for Case. In Bach, E. and Harris, R. (eds.) Universals in Linguistic Theory. Rinehart &amp; Winston, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Friedman</author>
</authors>
<title>An Unlabeled Bracketing Solution to the Problem of Conjoined Phrases in Montague&apos;s PTQ.</title>
<date>1979</date>
<journal>Journal of Philosophical Logic,</journal>
<pages>8--151</pages>
<contexts>
<context position="103239" citStr="Friedman (1979)" startWordPosition="17044" endWordPosition="17045">hoose the appropriate personal pronoun upon substitution of a term. We have expanded this technique somewhat, using variables of the form [it-CASE-i] where CASE ranges over {NOM,DAT,ACC} and i over the natural numbers. 3. Rule S9 for combining a sentence adverbial (&amp;quot;Necessarily&amp;quot;) with a sentence, has been eliminated. This is because the only sentence adverbials in QE-III are time adverbials, which are brought in together with the tense marker in rules S104—S106. 4. It is well know that there are problems with the PTQ treatment of conjunction and disjunction of terms and IVs (see discussion in Friedman (1979) and Bennett (1974)). While Friedman&apos;s bracketing solution is ultimately more acceptable (both by virtue of its generality and, of particular interest, its natural correspondence to a LISP implementation), we have for simplicity of presentation adopted Bennett&apos;s simple solution of marking all basic verbs with a # marker, which is removed when the verb is ultimately tensed. (We choose this solution because the points we wish to make have only to do with the verbs, and are easily understood with this technique. For ease of understanding the translations to follow, the following table shows the t</context>
</contexts>
<marker>Friedman, 1979</marker>
<rawString>Friedman, J. 1979 An Unlabeled Bracketing Solution to the Problem of Conjoined Phrases in Montague&apos;s PTQ. Journal of Philosophical Logic, 8:151-169.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Friedman</author>
</authors>
<title>Expressing Logical Formulas in Natural Language.</title>
<date>1981</date>
<booktitle>Formal Methods in the Study of Language. Mathematical Center,</booktitle>
<editor>In Groenendijk, J.; Janssen, T.; and Stokhof, M. (eds.)</editor>
<location>Amsterdam, Holland.</location>
<contexts>
<context position="97375" citStr="Friedman (1981)" startWordPosition="16107" endWordPosition="16108">o the questions, which at first sight seems to be our concern, is in fact another issue. For our theory, while it takes the answers of questions into account, is essentially not a theory of answers but a theory of questions. Of course, in the context of a more complete and user-friendly question-answering system, the ability to keep track formally of the context of the discourse and to express the answer in a number of different ways, is very attractive. Such a system would need the ability to go &amp;quot;backwards&amp;quot; from expressions in the logic to expressions in English with the same interpretation; Friedman (1981) discusses this issue from the point of view of the PTQ fragment. But the development in H-Z of the semantics of the questions themselves, although motivated from this different concern with the equivalence of redundant and non-redundant answers, does also lead them to an analysis of question semantics outside of the single semantics framework. Their analysis &amp;quot;lets questions denote different types of sets according to the type of that expression which is the critical one in any kind of answer.&amp;quot; In other words, their semantic analysis of answers is quite similar to our pragmatic analysis of que</context>
</contexts>
<marker>Friedman, 1981</marker>
<rawString>Friedman, J. 1981 Expressing Logical Formulas in Natural Language. In Groenendijk, J.; Janssen, T.; and Stokhof, M. (eds.) Formal Methods in the Study of Language. Mathematical Center, Amsterdam, Holland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Friedman</author>
<author>D S Warren</author>
</authors>
<title>A Parsing Method for Montague Grammars. Linguistics and Philosophy,</title>
<date>1978</date>
<pages>347--372</pages>
<contexts>
<context position="18295" citStr="Friedman and Warren (1978)" startWordPosition="3113" endWordPosition="3117">ic and the other pragmatic. Two overrriding principles have guided this work. First was that whatever interpretation or meaning our theory would give to a natural language database query should be as close as possible to the interpretation given to database queries in, say, the relational algebra or calculus. This meant that the interpretation of a query should somehow encompass its answer as represented in the underlying data base. Second, the theory should make sense computationally. This meant taking into account what had already been learned about parsing strategies for Montague Grammars (Friedman and Warren (1978), Warren (1979), Landsbergen (1981)), as well as what database theory had to say about the semantics of the modeled enterprise. These principles motivate certain systematic simplifications to the PTQ translations from English to logic, wherever these are suggested by the simplified view of the semantics of the enterprise provided by the database model. Moreover, since we are not attempting to develop a semantic theory of questions for English in general, these simplifications have been introduced into the translation process as early as possible. We believe that this strategy has the dual effe</context>
</contexts>
<marker>Friedman, Warren, 1978</marker>
<rawString>Friedman, J. and Warren, D.S. 1978 A Parsing Method for Montague Grammars. Linguistics and Philosophy, 347-372.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S K Gadia</author>
<author>J Vaishnav</author>
</authors>
<title>A Query Language for a Homogeneous Temporal Data Base.</title>
<date>1985</date>
<booktitle>In Proceedings of The Fourth Annual ACM SIGACT-SIGMOD Symposium on Principles of Database Systems.</booktitle>
<contexts>
<context position="1884" citStr="Gadia and Vaishnav (1985)" startWordPosition="289" endWordPosition="292">as by now become the standard for both database practitioners and theoreticians alike. In spite of this success, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a mechanism for direct reference to these higher-order objec</context>
</contexts>
<marker>Gadia, Vaishnav, 1985</marker>
<rawString>Gadia, S.K. and Vaishnav, J. 1985 A Query Language for a Homogeneous Temporal Data Base. In Proceedings of The Fourth Annual ACM SIGACT-SIGMOD Symposium on Principles of Database Systems.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Gallaire</author>
<author>J Minder</author>
</authors>
<title>Logic and Data Bases.</title>
<date>1978</date>
<publisher>Plenum Press,</publisher>
<location>New York, NY.</location>
<marker>Gallaire, Minder, 1978</marker>
<rawString>Gallaire, H. and Minder, J. 1978 Logic and Data Bases. Plenum Press, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B F Green</author>
<author>A K Wolf</author>
<author>C Chomsky</author>
<author>K Laughery</author>
</authors>
<title>Baseball: An Automatic Question Answer.</title>
<date>1963</date>
<booktitle>Computers and Thought.</booktitle>
<editor>In Feigenbaum, E.A., and Feldman, J. (eds.)</editor>
<publisher>McGraw-Hill,</publisher>
<location>New York, NY.</location>
<contexts>
<context position="36638" citStr="Green et al. 1963" startWordPosition="6080" endWordPosition="6083">d we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering theories and systems to varying degrees of success. These have ranged from some early experimental programs (Green et al. 1963) to database querying programs bound to a particular database domain (Woods et al. 1972 and 16 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases 1 Waltz 1978) to some rather sophisticated DBQ systems today that are designed to be general and easily portable (Harris 1973, Hendrix et al. 1978). The research behind these systems seems to share a goal common to much of the work in Al (as distinct from cognitive science), i.e., an interest more in getting a system to &amp;quot;work&amp;quot; than in developing a formal theory that explains </context>
</contexts>
<marker>Green, Wolf, Chomsky, Laughery, 1963</marker>
<rawString>Green, B.F.; Wolf, A.K.; Chomsky, C.; and Laughery, K. 1963 Baseball: An Automatic Question Answer. In Feigenbaum, E.A., and Feldman, J. (eds.) Computers and Thought. McGraw-Hill, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Groenendijk</author>
<author>M Stokhof</author>
</authors>
<title>On the Semantics of Questions and the Pragmatics of Answers.</title>
<date>1983</date>
<contexts>
<context position="34388" citStr="Groenendijk and Stokhof (1983)" startWordPosition="5730" endWordPosition="5733"> considered interrogative sentences the poor relation of the declaratives, to which they have paid the bulk of their attention. Among linguists there is no generally accepted theory about the syntactic generation of English questions (Kuno and Robinson 1972, Pope 1976), and philosophers and logicians have until recently given little attention to the question of questions. More recently Engdahl (1986) explored the issue of constituent questions in Swedish, and proposed a semantic theory of questions similar to those of Hamblin (1973) and Karttunen (1977), which we shall discuss in Section 3.6. Groenendijk and Stokhof (1983) address the issue of the appropriateness of an answer in different situations, an issue outside the scope of the present work. Formal logic from its inception directed its attention to languages based upon the notion of formulas, abstractions of declarative sentences in natural languages. Only recently have logicians begun to investigate the semantics of questions in any depth and to develop formal languages powerful enough to express questions in order to carry out these investigations. Hintikka (1974) discusses a number of interesting linguistic and philosophical attempts to provide an anal</context>
</contexts>
<marker>Groenendijk, Stokhof, 1983</marker>
<rawString>Groenendijk, J. and Stokhof, M. 1983 On the Semantics of Questions and the Pragmatics of Answers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gunji</author>
</authors>
<date>1981</date>
<booktitle>Toward a Computational Theory of Pragmatics— Discourse, Presupposition, and Implicature. Ph.D.</booktitle>
<institution>The Ohio State University,</institution>
<location>Takao</location>
<contexts>
<context position="3919" citStr="Gunji (1981)" startWordPosition="614" endWordPosition="615">al problem. (Landsbergen (1981) looks at the issue of machine translation within an MS framework.) The research that has been done since the PTQ paper has primarily looked at extensions or modifications to its linguistic or logical theory, or at implementations of the theory on the computer. We will attempt to show that this theory of language can serve as the formal foundation of a useable computer system for querying actual databases. Second, in addition to approaching the problem of NLQ formally, rather than from a purely engineering approach, the theory presented provides a novel (but see Gunji (1981) for a similar approach developed Copyright 1988 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted provided that the copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page. To copy otherwise, or to republish, requires a fee and/or specific permission. 0362-613X/ 88 /010010-34$03.00 10 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases EMP EMP-NAME MGR DEPT SAL John John Linen</context>
<context position="98349" citStr="Gunji (1981)" startWordPosition="16265" endWordPosition="16266">&amp;quot;lets questions denote different types of sets according to the type of that expression which is the critical one in any kind of answer.&amp;quot; In other words, their semantic analysis of answers is quite similar to our pragmatic analysis of questions. The following table comparing the types assigned to various kinds of questions by their semantics and our pragmatics might help to make this analogy clearer. Question class Our typing H-Z typing yes-no &lt;e,t&gt; t I individual &lt;e,&lt;e,t&gt;&gt; &lt;&lt;s,f(T)&gt;,t&gt; 2 individual &lt;&lt;s,f(T)&gt;,&lt;&lt;s,f(T)&gt;,t» 3.6.4 SCHA AND GUNJI The work of Scha (1983) on the PHLIQA1 project and Gunji (1981), both being developed concurrently with the development of QE-III (Clifford 1982b), are remarkably similar in spirit, though not in detail, to the present work. The close parallels in the motivation of these three works indicate a trend among many researchers toward developing a formal foundation for computer systems that do natural language processing. The major theoretical difference between QE-III and that of the PHLIQA1 project of Scha are that we make a distinction between the semantics and pragmatics of sentences in QE-III, so that the pragmatic interpretation of questions in QE-III is </context>
</contexts>
<marker>Gunji, 1981</marker>
<rawString>Gunji, Takao 1981 Toward a Computational Theory of Pragmatics— Discourse, Presupposition, and Implicature. Ph.D. diss., The Ohio State University, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L Hamblin</author>
</authors>
<title>Questions in Montague English.</title>
<date>1973</date>
<journal>Foundations of Language</journal>
<volume>10</volume>
<pages>41--53</pages>
<contexts>
<context position="34296" citStr="Hamblin (1973)" startWordPosition="5717" endWordPosition="5719">ng knowledge of the world, both linguists and philosophers have historically considered interrogative sentences the poor relation of the declaratives, to which they have paid the bulk of their attention. Among linguists there is no generally accepted theory about the syntactic generation of English questions (Kuno and Robinson 1972, Pope 1976), and philosophers and logicians have until recently given little attention to the question of questions. More recently Engdahl (1986) explored the issue of constituent questions in Swedish, and proposed a semantic theory of questions similar to those of Hamblin (1973) and Karttunen (1977), which we shall discuss in Section 3.6. Groenendijk and Stokhof (1983) address the issue of the appropriateness of an answer in different situations, an issue outside the scope of the present work. Formal logic from its inception directed its attention to languages based upon the notion of formulas, abstractions of declarative sentences in natural languages. Only recently have logicians begun to investigate the semantics of questions in any depth and to develop formal languages powerful enough to express questions in order to carry out these investigations. Hintikka (1974</context>
<context position="35872" citStr="Hamblin (1973)" startWordPosition="5968" endWordPosition="5969"> enough to incorporate a view of natural language questions as well. In what seems to be his only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are of course inappropriate, and would be replaced by fulfillment conditions and a characterization of the semantic content of a correct answer&amp;quot; (Montague 1973). Perhaps inspired by this comment, a number of researchers have been investigating ways to incorporate a formal account of the syntax and semantics of questions within the framework of Montague Semantics. Hamblin (1973), Karttunen (1977), Bennett (1977, 1979), Hausser and Zaefferer (1978), and Belnap (1982) are perhaps the most important of these investigations, and we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and im</context>
<context position="49954" citStr="Hamblin 1973" startWordPosition="8267" endWordPosition="8268">ONS We first present a semantic solution that does provide for a successful interpretation for questions involving only one wh-word, e.g., &amp;quot;Who manages Peter?&amp;quot; This solution has its simplicity to recommend it, but is unfortunately unable to accommodate multiple whquestions. We then examine a number of alternative solutions to illustrate some of the many problems involved in attempting to accommodate these multiple questions. It is obvious linguistic fact that question words like &amp;quot;who,&amp;quot; &amp;quot;what,&amp;quot; &amp;quot;whom,&amp;quot; etc. behave syntactically in much the same way as terms like &amp;quot;Peter&amp;quot; or &amp;quot;an employee&amp;quot; (e.g., Hamblin 1973). In subject position there is virtually no difference. Interrogative Declarative who manages Peter manages the shoe department the shoe department who [it-0] manages Peter [it-0] manages the shoe dept. the shoe dept. while in object position there is so-called wh-Qmovement: Interrogative Declarative What does Peter manages Peter manage? the shoe department. Peter manages what the shoe Peter manages [it-0] / \ department what Peter manages [it-0] Nonetheless in both cases the question word takes the role of a term syntactically. Semantically, however, there is a difference. Whereas ordinary te</context>
<context position="69369" citStr="Hamblin 1973" startWordPosition="11453" endWordPosition="11454">rder to incorporate these new sentences. Perhaps we are overtaxing the semantic component of our language theories, asking it to do for us more than it was intended to do. For example, most theories of question semantics have attempted to include some representation of the answer of the question as part of its denotation. Is there not something odd in a theory that holds that a question denotes its answer, especially if one has tried (or tried not) to think of denoting as a formal counterpart to the intuitive notion of meaning? Yet in one form or another (denoting the set of possible answers (Hamblin 1973), the set of correct answers (Karttunen 1977), functions from sequences of individuals to propositions (Bennett 1977, 1979 and Belnap 1982), and our sets of n-tuples of individuals) many researchers have been investigating ways to accomplish this in a formal semantics. The similarity between wh-terms and unbound pronouns (&amp;quot;Who loves whom?&amp;quot; versus &amp;quot;He loves him&amp;quot;) suggest another approach, viz., one in which 1. the semantic component provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as reques</context>
<context position="71489" citStr="Hamblin (1973)" startWordPosition="11792" endWordPosition="11793">esponse to Carnap&apos;s proposal that &amp;quot;if in an investigation explicit reference is made to the . . . user of a language, then we assign it to the field of pragmatics&amp;quot; (Carnap 1947), Morris felt the need to expand upon this definition. In Morris (1946), he says that pragmatics is &amp;quot;that portion of semiotic which deals with the origins, uses, and effects of signs within the behavior in which they occur.&amp;quot; Montague&apos;s conception of pragmatics (Montague 1968, 1970a, and 1973), based upon Bar-Hillel&apos;s (BarHillel 1954) discussion of indexical expressions, represents a departure from the traditional view. Hamblin (1973) felt that Montague&apos;s incorporation of a pragmatic component directly in the syntax and semantics was unconventional, and felt the need &amp;quot;to defend pragmatics from this weakened interpretation . . . . Pragmatics is the study of the use (not just reference) of language of all kinds; or, if it is not, we need a new name for the study that complements syntax and semantics. Montague&apos;s &apos;pragmatics&apos; would be better classed as a special part of semantics.&amp;quot; Dowty (1978), while admitting that &amp;quot;the linguist&apos;s use of the term pragmatics is far from standardized,&amp;quot; adopts the view that it should encompass d</context>
<context position="86000" citStr="Hamblin (1973)" startWordPosition="14251" endWordPosition="14252"> recent work on formalizing a theory of questions. The first is the idea that all questions should be defined so as to denote objects of the same type. Generally, this has meant propositions or sets of propositions, but it seems that even before the choice of just what questions denote was made, this &amp;quot;single semantics&amp;quot; viewpoint had been adopted. The other, as we have already pointed out, is that some account of the answer(s) to a question should be included at least as a component of its semantics. When combined with other factors these two biases have led to somewhat different results. Thus Hamblin (1973) suggests that a question denotes the set of all &amp;quot;propositions that count as answers to it&amp;quot;; Karttunen (1977), &amp;quot;the set of propositions expressed by[its] true answers&amp;quot;; Bennett (1977, 1979) and Belnap (1982), who worked with Bennett on the theory, &amp;quot;sets of open propositions:functions from sequences of individuals to propositions.&amp;quot; 3.6.2 KARTTUNEN As we have said, Karttunen (1977) presents an analysis of the semantics of questions that falls within the single semantics tradition. (Hamblin (1973) earlier proposed a treatment similar to Karttunen&apos;s, but his theory was not worked out in as much de</context>
</contexts>
<marker>Hamblin, 1973</marker>
<rawString>Hamblin, C.L. 1973 Questions in Montague English. Foundations of Language 10: 41-53.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L R Harris</author>
</authors>
<title>The ROBOT System: Natural Language Processing Applied to Database Query</title>
<date>1973</date>
<tech>(Technical Report TR78-1).</tech>
<institution>Department of Mathematics, Dartmouth College,</institution>
<location>Hanover, NH.</location>
<contexts>
<context position="36985" citStr="Harris 1973" startWordPosition="6135" endWordPosition="6136">rent perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering theories and systems to varying degrees of success. These have ranged from some early experimental programs (Green et al. 1963) to database querying programs bound to a particular database domain (Woods et al. 1972 and 16 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases 1 Waltz 1978) to some rather sophisticated DBQ systems today that are designed to be general and easily portable (Harris 1973, Hendrix et al. 1978). The research behind these systems seems to share a goal common to much of the work in Al (as distinct from cognitive science), i.e., an interest more in getting a system to &amp;quot;work&amp;quot; than in developing a formal theory that explains its behavior. 3.4.2 DATABASE QUESTIONS As guidelines to help us judge any proposed theory of questions we have adopted a number of self-imposed criteria that any solution acceptable to us should meet. 1. It must fall within the general confines of Montague&apos;s framework: syntax and semantics defined in parallel, with the semantics of a phrase defi</context>
</contexts>
<marker>Harris, 1973</marker>
<rawString>Harris, L.R. 1973 The ROBOT System: Natural Language Processing Applied to Database Query (Technical Report TR78-1). Department of Mathematics, Dartmouth College, Hanover, NH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B L Hasbrouck</author>
</authors>
<title>Methods of Parsing English with Context-Free Grammar.</title>
<date>1982</date>
<tech>Master&apos;s thesis,</tech>
<institution>Department of Computer Science, SUNY at Stony Brook.</institution>
<contexts>
<context position="39695" citStr="Hasbrouck (1982)" startWordPosition="6584" endWordPosition="6585">eory for natural language query systems that are ultimately implementable, this criterion leads us to direct our attention to solutions that fall within the general PTQ framework. This is because there have been successful results (Warren 1979 and Landsbergen 1981) implementing parsers and semantic interpretation routines for fragments defined within this framework, and we wanted to build upon this work as much as possible. While this work does not discuss a computer implementation of its results, an extension of Warren&apos;s PTQ parser (Warren 1979) to the QE-III fragment has been implemented by Hasbrouck (1982). 4. Proper treatment must be given to the interaction of questions and quantifiers. The PTQ treatment successfully accounts for multiple readings of sentences with interacting quantifiers (&amp;quot;A woman loves every man.&amp;quot;) Our solution should likewise allow for all of the readings of questions involving quantified terms (&amp;quot;Who manages every employee?&amp;quot;). 5. Y-N questions, wh-questions involving &amp;quot;who&amp;quot; and &amp;quot;what,&amp;quot; and temporal questions (&amp;quot;when&amp;quot;) should be provided for. This means that we do not treat indirect questions (&amp;quot;Tell me whether . . .&amp;quot;), since these do not generally arise within the database fr</context>
</contexts>
<marker>Hasbrouck, 1982</marker>
<rawString>Hasbrouck, B.L. 1982 Methods of Parsing English with Context-Free Grammar. Master&apos;s thesis, Department of Computer Science, SUNY at Stony Brook.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Hausser</author>
<author>D Zaefferer</author>
</authors>
<title>Questions and Answers in a Context-Dependent Montague Grammar.</title>
<date>1978</date>
<booktitle>Formal Semantics and Pragmatics for Natural Languages.</booktitle>
<editor>In Guenthner F., and Schmidt, S.J. (eds.)</editor>
<location>Dordrecht, The Netherlands.</location>
<contexts>
<context position="35942" citStr="Hausser and Zaefferer (1978)" startWordPosition="5975" endWordPosition="5978">ons as well. In what seems to be his only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are of course inappropriate, and would be replaced by fulfillment conditions and a characterization of the semantic content of a correct answer&amp;quot; (Montague 1973). Perhaps inspired by this comment, a number of researchers have been investigating ways to incorporate a formal account of the syntax and semantics of questions within the framework of Montague Semantics. Hamblin (1973), Karttunen (1977), Bennett (1977, 1979), Hausser and Zaefferer (1978), and Belnap (1982) are perhaps the most important of these investigations, and we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering theories and systems to varying</context>
<context position="44703" citStr="Hausser and Zaefferer (1978)" startWordPosition="7392" endWordPosition="7395">ltimately adopt one as our solution. We will see, however, in the course of this presentation, that there are considerable technical difficulties in defining the semantics in such a way as to get it all to come out right for both single and multiple wh-questions. The solution that we adopt, involving the addition of a formally specified pragmatics for the fragment, does have this property in addition to meeting our other criteria; moreover, the simplicity of our solution, as contrasted with the considerable complexity in other proposals for a question semantics, e.g., Bennett (1977, 1979) and Hausser and Zaefferer (1978), makes it especially attractive. However, it is clear that many researchers have found the same kinds of difficulties in extending Montague&apos;s work in the direction of interpreting questions, and that further work in this area is needed. We hope that our proposal to treat the answering of a question as a component of a formally specified pragmatics of the language, apart from its semantics, is a step in the proper direction. 3.5 THE QE-III THEORY OF QUESTIONS 3.5.1 INTRODUCTION We first present a general view of the substance of our theory of the interpretation of questions and then discuss ho</context>
<context position="64486" citStr="Hausser and Zaefferer (1978)" startWordPosition="10637" endWordPosition="10640"> the same technique for each of the tense rules, and for each of the tense rules with time adverbials, and for each of the when-question rules, the rules for when-questions with tenses, for when-questions with tenses and time adverbials, etc. In other words, accepting a solution that types all questions differently depending upon what they ask for forces the inclusion of rule schemas for all of the other semantic functions that in a simple theory would operate only on one type, the type given to sentences. (Later we will discuss how the solutions of Bennett (1977, 1979), Belnap (1982), and of Hausser and Zaefferer (1978) entail a similar rippling effect of complexity throughout the rest of the semantic theory already developed for declarative sentences.) For an example of this effect in the theory under consideration, consider what the rule for adding past tense to a sentence would look like. (Recall our arguments for the necessity of treating tense as a property of the entire sentence.) Such a rule would have to be of the form Pa + -ED = =&gt; Qa, where a could be the category declarative sentence (type t), 1-term question (type &lt;e,t&gt;), 2-term question (type &lt;e,&lt;e,t&gt;&gt;), etc. Because of the strict typing system </context>
<context position="94297" citStr="Hausser and Zaefferer (1978)" startWordPosition="15588" endWordPosition="15591">te the set of variable assignments that satisfy the formula. Our relegating to pragmatics the task of projecting these variable assignments could also be used to solve this problem here. But if this is the case, then what is gained by paying the price for the complication to the model theory and the translation rules? This use of sequences in effect duplicates the variable assignment of their Tarskian meta-theory (albeit restricted to the domain De) in the object language and in the logical model with no noticeable advantages. 3.6.3 HAUSSER AND ZAEFFERER The proposal of Hausser and Zaefferer (Hausser and Zaefferer (1978) and hereafter H-Z) is quite different from the other theories we have discussed, and makes a number of interesting points. The theory is motivated early in the paper by a discussion of the range of answers that are possible to any given question, and a classification of these possibilities as ranging from &amp;quot;minimal&amp;quot; to &amp;quot;redundant&amp;quot;. For example, in answer to the question &amp;quot;Who dates Mary?&amp;quot; the following list of possibilities is cited: a. Bill. b. Bill does. c. Bill does so. d. Bill dates her. e. Bill dates Mary. Answer (e), of course, is just what the propositional approach would say that the qu</context>
</contexts>
<marker>Hausser, Zaefferer, 1978</marker>
<rawString>Hausser, R. and Zaefferer, D. 1978 Questions and Answers in a Context-Dependent Montague Grammar. In Guenthner F., and Schmidt, S.J. (eds.) Formal Semantics and Pragmatics for Natural Languages. D. Reidel Publishing Co., Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G G Hendrix</author>
<author>E D Sacerdoti</author>
<author>D Sagalowicz</author>
<author>J Slocum</author>
</authors>
<title>Developing a Natural Language Interface to Complex Data.</title>
<date>1978</date>
<journal>ACM Transactions on Database Systems</journal>
<volume>3</volume>
<issue>2</issue>
<contexts>
<context position="37007" citStr="Hendrix et al. 1978" startWordPosition="6137" endWordPosition="6140">ive, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering theories and systems to varying degrees of success. These have ranged from some early experimental programs (Green et al. 1963) to database querying programs bound to a particular database domain (Woods et al. 1972 and 16 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases 1 Waltz 1978) to some rather sophisticated DBQ systems today that are designed to be general and easily portable (Harris 1973, Hendrix et al. 1978). The research behind these systems seems to share a goal common to much of the work in Al (as distinct from cognitive science), i.e., an interest more in getting a system to &amp;quot;work&amp;quot; than in developing a formal theory that explains its behavior. 3.4.2 DATABASE QUESTIONS As guidelines to help us judge any proposed theory of questions we have adopted a number of self-imposed criteria that any solution acceptable to us should meet. 1. It must fall within the general confines of Montague&apos;s framework: syntax and semantics defined in parallel, with the semantics of a phrase defined compositionally in</context>
</contexts>
<marker>Hendrix, Sacerdoti, Sagalowicz, Slocum, 1978</marker>
<rawString>Hendrix, G.G.; Sacerdoti, E.D. and Sagalowicz, D.; and Slocum, J. 1978 Developing a Natural Language Interface to Complex Data. ACM Transactions on Database Systems 3(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Hintikka</author>
</authors>
<title>Questions About Questions.</title>
<date>1974</date>
<editor>In Munitz, M.K. and Unger, P.K. (eds.) Semantics and Philosophy.</editor>
<publisher>University Press,</publisher>
<location>New York</location>
<contexts>
<context position="34897" citStr="Hintikka (1974)" startWordPosition="5813" endWordPosition="5814">Hamblin (1973) and Karttunen (1977), which we shall discuss in Section 3.6. Groenendijk and Stokhof (1983) address the issue of the appropriateness of an answer in different situations, an issue outside the scope of the present work. Formal logic from its inception directed its attention to languages based upon the notion of formulas, abstractions of declarative sentences in natural languages. Only recently have logicians begun to investigate the semantics of questions in any depth and to develop formal languages powerful enough to express questions in order to carry out these investigations. Hintikka (1974) discusses a number of interesting linguistic and philosophical attempts to provide an analysis of questions. Although Montague, too, focused his attention on a formal treatment of the syntax and semantics of declarative sentences in natural language, the framework of using a lambda calculus and the model theory of intensional logic, developed in PTQ, is rich enough to incorporate a view of natural language questions as well. In what seems to be his only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are o</context>
</contexts>
<marker>Hintikka, 1974</marker>
<rawString>Hintikka, J. 1974 Questions About Questions. In Munitz, M.K. and Unger, P.K. (eds.) Semantics and Philosophy. New York University Press, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Karttunen</author>
</authors>
<title>Syntax and Semantics of Questions.</title>
<date>1977</date>
<journal>Linguistics and Philosophy</journal>
<volume>1</volume>
<pages>3--44</pages>
<contexts>
<context position="34317" citStr="Karttunen (1977)" startWordPosition="5721" endWordPosition="5722"> world, both linguists and philosophers have historically considered interrogative sentences the poor relation of the declaratives, to which they have paid the bulk of their attention. Among linguists there is no generally accepted theory about the syntactic generation of English questions (Kuno and Robinson 1972, Pope 1976), and philosophers and logicians have until recently given little attention to the question of questions. More recently Engdahl (1986) explored the issue of constituent questions in Swedish, and proposed a semantic theory of questions similar to those of Hamblin (1973) and Karttunen (1977), which we shall discuss in Section 3.6. Groenendijk and Stokhof (1983) address the issue of the appropriateness of an answer in different situations, an issue outside the scope of the present work. Formal logic from its inception directed its attention to languages based upon the notion of formulas, abstractions of declarative sentences in natural languages. Only recently have logicians begun to investigate the semantics of questions in any depth and to develop formal languages powerful enough to express questions in order to carry out these investigations. Hintikka (1974) discusses a number </context>
<context position="35890" citStr="Karttunen (1977)" startWordPosition="5970" endWordPosition="5971">porate a view of natural language questions as well. In what seems to be his only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are of course inappropriate, and would be replaced by fulfillment conditions and a characterization of the semantic content of a correct answer&amp;quot; (Montague 1973). Perhaps inspired by this comment, a number of researchers have been investigating ways to incorporate a formal account of the syntax and semantics of questions within the framework of Montague Semantics. Hamblin (1973), Karttunen (1977), Bennett (1977, 1979), Hausser and Zaefferer (1978), and Belnap (1982) are perhaps the most important of these investigations, and we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automati</context>
<context position="56398" citStr="Karttunen 1977" startWordPosition="9325" endWordPosition="9326">theory of co-reference, extended to allow substitution of wh-terms, is equally able to capture the fact that &amp;quot;who&amp;quot; and &amp;quot;him&amp;quot; are co-referent, as are &amp;quot;an employee&amp;quot; and &amp;quot;he&amp;quot;. Under our analysis, this sentence would be derived as follows: Who manages an employee such that he manages him? Who #manage an employee such that he manages him? who [it-NOM-0] #manage an employee such that [it-NOM-0] manages him. This idea of extending the PTQ theory of co-reference to the case of interrogatives is not ours. It is used in most of the work on question semantics in the Montague Grammar tradition (including Karttunen 1977, Bennett 1977, 1979, and Belnap 1982). It is that theory that we have incorporated into our fragment. Because question words in our fragment are always assumed to have the entire sentence as their scope (i.e., there are no embedded question clauses), and because of the extensional nature of our theory as dictated by the database, question words can always be brought in indirectly by means of substitution rules. The difference in our respective treatments lies in our attempts to formalize the meaning given to questions. Let us take a look now at why the analysis we have presented so far cannot</context>
<context position="69414" citStr="Karttunen 1977" startWordPosition="11460" endWordPosition="11461">rhaps we are overtaxing the semantic component of our language theories, asking it to do for us more than it was intended to do. For example, most theories of question semantics have attempted to include some representation of the answer of the question as part of its denotation. Is there not something odd in a theory that holds that a question denotes its answer, especially if one has tried (or tried not) to think of denoting as a formal counterpart to the intuitive notion of meaning? Yet in one form or another (denoting the set of possible answers (Hamblin 1973), the set of correct answers (Karttunen 1977), functions from sequences of individuals to propositions (Bennett 1977, 1979 and Belnap 1982), and our sets of n-tuples of individuals) many researchers have been investigating ways to accomplish this in a formal semantics. The similarity between wh-terms and unbound pronouns (&amp;quot;Who loves whom?&amp;quot; versus &amp;quot;He loves him&amp;quot;) suggest another approach, viz., one in which 1. the semantic component provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as requests for their answers. Pragmatics is the least</context>
<context position="86109" citStr="Karttunen (1977)" startWordPosition="14269" endWordPosition="14270">ed so as to denote objects of the same type. Generally, this has meant propositions or sets of propositions, but it seems that even before the choice of just what questions denote was made, this &amp;quot;single semantics&amp;quot; viewpoint had been adopted. The other, as we have already pointed out, is that some account of the answer(s) to a question should be included at least as a component of its semantics. When combined with other factors these two biases have led to somewhat different results. Thus Hamblin (1973) suggests that a question denotes the set of all &amp;quot;propositions that count as answers to it&amp;quot;; Karttunen (1977), &amp;quot;the set of propositions expressed by[its] true answers&amp;quot;; Bennett (1977, 1979) and Belnap (1982), who worked with Bennett on the theory, &amp;quot;sets of open propositions:functions from sequences of individuals to propositions.&amp;quot; 3.6.2 KARTTUNEN As we have said, Karttunen (1977) presents an analysis of the semantics of questions that falls within the single semantics tradition. (Hamblin (1973) earlier proposed a treatment similar to Karttunen&apos;s, but his theory was not worked out in as much detail.) In Karttunen&apos;s theory, for example, the question &amp;quot;Who manages John?&amp;quot; would roughly be translated as: A</context>
</contexts>
<marker>Karttunen, 1977</marker>
<rawString>Karttunen, L. 1977 Syntax and Semantics of Questions. Linguistics and Philosophy 1: 3-44.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kasher</author>
</authors>
<title>What is a Theory of Use.</title>
<date>1977</date>
<journal>Journal of Pragmatics</journal>
<volume>1</volume>
<pages>105--120</pages>
<contexts>
<context position="73062" citStr="Kasher 1977" startWordPosition="12052" endWordPosition="12053">etely general theory of pragmatics. But we believe that incorporating into our fragment a formal pragmatic component that treats the notion of a response to a question is defensible as at least one component of a theory of language use. In the first place, Montague notwithstanding, it falls within the confines of pragmatics as that term is generally understood. For whether one speaks of &amp;quot;the use and effects&amp;quot; of language (Morris 1946), the &amp;quot;relation of signs to their interpreters&amp;quot; (Morris 1938), the notion of &amp;quot;speech acts&amp;quot; (Dowty 1978), or the &amp;quot;linguistic means for effecting literal purposes&amp;quot; (Kasher 1977), it is clear that the notion of responding to a question is encompassed. Our attempt to formalize a pragmatic compoComputational Linguistics, Volume 14, Number 4, December 1988 23 James Clifford Natural Language Querying of Historical Databases nent to QE-III accords well with what Stalnaker (1972) sees as the goals of &amp;quot;a formal semiotics no less rigorous than present day logical syntax and semantics.&amp;quot; Those goals, he goes on to say, include an analysis of such linguistic acts as &amp;quot;assertions, commands, . . . , requests . . . to find necessary and sufficient conditions for the successful (or p</context>
</contexts>
<marker>Kasher, 1977</marker>
<rawString>Kasher, A. 1977 What is a Theory of Use. Journal of Pragmatics 1: 105-120.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Kuno</author>
<author>J Robinson</author>
</authors>
<title>Multiple WH-Questions.</title>
<date>1973</date>
<journal>Linguistic Inquiry</journal>
<volume>3</volume>
<issue>2</issue>
<pages>463--487</pages>
<marker>Kuno, Robinson, 1973</marker>
<rawString>Kuno, S. and Robinson, J. 1973 Multiple WH-Questions. Linguistic Inquiry 3(2): 463-487.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S P J Landsbergen</author>
</authors>
<title>Adaptation of Montague Grammar to the Requirements of Parsing.</title>
<date>1981</date>
<booktitle>In Proceedings of the Third Amsterdam Colloquium on Formal Methods in the Study of Language. Mathematical Centre,</booktitle>
<location>Amsterdam, Holland.</location>
<contexts>
<context position="3338" citStr="Landsbergen (1981)" startWordPosition="519" endWordPosition="520">ers culminating in Montague (1973), henceforth PTQ, Richard Montague embarked upon a program of providing a formal syntax coupled with a model-theoretic semantics for increasingly sophisticated fragments of English. Section 3 argues that a successful formal treatment can be given to a natural language querying facility for a historical relational data base (HRDB), through the medium of the intensional logic ILs. We view this work as important for two reasons. First, it represents one of the initial attempts to adapt the ideas of Montague Semantics (MS) (Montague 1974) to a practical problem. (Landsbergen (1981) looks at the issue of machine translation within an MS framework.) The research that has been done since the PTQ paper has primarily looked at extensions or modifications to its linguistic or logical theory, or at implementations of the theory on the computer. We will attempt to show that this theory of language can serve as the formal foundation of a useable computer system for querying actual databases. Second, in addition to approaching the problem of NLQ formally, rather than from a purely engineering approach, the theory presented provides a novel (but see Gunji (1981) for a similar appr</context>
<context position="18330" citStr="Landsbergen (1981)" startWordPosition="3120" endWordPosition="3121"> principles have guided this work. First was that whatever interpretation or meaning our theory would give to a natural language database query should be as close as possible to the interpretation given to database queries in, say, the relational algebra or calculus. This meant that the interpretation of a query should somehow encompass its answer as represented in the underlying data base. Second, the theory should make sense computationally. This meant taking into account what had already been learned about parsing strategies for Montague Grammars (Friedman and Warren (1978), Warren (1979), Landsbergen (1981)), as well as what database theory had to say about the semantics of the modeled enterprise. These principles motivate certain systematic simplifications to the PTQ translations from English to logic, wherever these are suggested by the simplified view of the semantics of the enterprise provided by the database model. Moreover, since we are not attempting to develop a semantic theory of questions for English in general, these simplifications have been introduced into the translation process as early as possible. We believe that this strategy has the dual effect of making some of the PTQ theory</context>
<context position="39344" citStr="Landsbergen 1981" startWordPosition="6529" endWordPosition="6530">uestion in our fragment should be defined to denote a function of type &lt;en,t&gt;. As we shall see we were able to accomplish this easily and naturally not in the semantics, but by extending the framework of Montague Semantics to include a pragmatic component. 3. The theory should be computationally tractable. Because we are interested in developing a theory for natural language query systems that are ultimately implementable, this criterion leads us to direct our attention to solutions that fall within the general PTQ framework. This is because there have been successful results (Warren 1979 and Landsbergen 1981) implementing parsers and semantic interpretation routines for fragments defined within this framework, and we wanted to build upon this work as much as possible. While this work does not discuss a computer implementation of its results, an extension of Warren&apos;s PTQ parser (Warren 1979) to the QE-III fragment has been implemented by Hasbrouck (1982). 4. Proper treatment must be given to the interaction of questions and quantifiers. The PTQ treatment successfully accounts for multiple readings of sentences with interacting quantifiers (&amp;quot;A woman loves every man.&amp;quot;) Our solution should likewise al</context>
</contexts>
<marker>Landsbergen, 1981</marker>
<rawString>Landsbergen, S.P.J. 1981 Adaptation of Montague Grammar to the Requirements of Parsing. In Proceedings of the Third Amsterdam Colloquium on Formal Methods in the Study of Language. Mathematical Centre, Amsterdam, Holland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen C Levinson</author>
</authors>
<title>Pragmatics.</title>
<date>1983</date>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge, England.</location>
<contexts>
<context position="70416" citStr="Levinson (1983)" startWordPosition="11612" endWordPosition="11613">ent provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as requests for their answers. Pragmatics is the least understood branch of the tripartite division of the study of language that Morris (1938) proposed in his theory of semiotics. This century has seen tremendous successes in the development of formal logical syntax and model-theoretic semantics, but very little in the way of formal pragmatics. (Martin (1959) is an early attempt in this direction.) Marciszewski (1971) and more recently Levinson (1983) together contain a thorough analysis of the various approaches that have been taken to define the scope of linguistic pragmatics, from its origin in Morris&apos;s definition of semiotics (Morris 1938) to the present day. It is obvious from these accounts that there has been less agreement as to the scope of this branch of the field. Morris (1938) originally defined pragmatics as the study of &amp;quot;the relation of signs to interpreters.&amp;quot; Later, at least partly in response to Carnap&apos;s proposal that &amp;quot;if in an investigation explicit reference is made to the . . . user of a language, then we assign it to th</context>
</contexts>
<marker>Levinson, 1983</marker>
<rawString>Levinson, Stephen C. 1983 Pragmatics. Cambridge University Press, Cambridge, England.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V Lum</author>
</authors>
<title>Designing DBMS Support for the Temporal Dimension. In</title>
<date>1984</date>
<booktitle>ACM-SIGMOD International Conference on Management of Data.</booktitle>
<location>Boston, MA.</location>
<marker>Lum, 1984</marker>
<rawString>Lum, V., et al. 1984 Designing DBMS Support for the Temporal Dimension. In ACM-SIGMOD International Conference on Management of Data. Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Maier</author>
</authors>
<title>The Theory of Relational Data Bases.</title>
<date>1983</date>
<publisher>Computer Science Press,</publisher>
<location>Rockville, MD.</location>
<contexts>
<context position="38036" citStr="Maier 1983" startWordPosition="6307" endWordPosition="6308"> should meet. 1. It must fall within the general confines of Montague&apos;s framework: syntax and semantics defined in parallel, with the semantics of a phrase defined compositionally in terms of the semantics of its components. 2. The interpretation of questions should be closely analogous to the interpretation of queries in the relational database model. This means that their interpretation should be objects in the logical model which have direct analogs in the HRDM model described in Section 2. In the relational database model &amp;quot;a query is a computation upon relations to yield other relations&amp;quot; (Maier 1983). This is an operational view of a database query; a denotational semantics view would hold that a query denotes a relation that is its answer, and would define just how, in fact, the query so denoted. In order to provide for the closest possible parallel between the interpretation of questions in our theory and the query semantics of HRDM, we hoped to define the semantics of our English query language in just such a way, viz., such that each query would denote the relation that is its answer with respect to the database. In other words, if a query in the relational database context denoted an</context>
</contexts>
<marker>Maier, 1983</marker>
<rawString>Maier, D. 1983 The Theory of Relational Data Bases. Computer Science Press, Rockville, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Marciszewski</author>
</authors>
<title>Introduction to Appendix.</title>
<date>1971</date>
<booktitle>Studies in Functional Logical Semiotics of Natural Language.</booktitle>
<editor>In Pelc, Gerzy (ed.)</editor>
<publisher>Mouton, The Hague.</publisher>
<contexts>
<context position="70382" citStr="Marciszewski (1971)" startWordPosition="11606" endWordPosition="11608">., one in which 1. the semantic component provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as requests for their answers. Pragmatics is the least understood branch of the tripartite division of the study of language that Morris (1938) proposed in his theory of semiotics. This century has seen tremendous successes in the development of formal logical syntax and model-theoretic semantics, but very little in the way of formal pragmatics. (Martin (1959) is an early attempt in this direction.) Marciszewski (1971) and more recently Levinson (1983) together contain a thorough analysis of the various approaches that have been taken to define the scope of linguistic pragmatics, from its origin in Morris&apos;s definition of semiotics (Morris 1938) to the present day. It is obvious from these accounts that there has been less agreement as to the scope of this branch of the field. Morris (1938) originally defined pragmatics as the study of &amp;quot;the relation of signs to interpreters.&amp;quot; Later, at least partly in response to Carnap&apos;s proposal that &amp;quot;if in an investigation explicit reference is made to the . . . user of a</context>
</contexts>
<marker>Marciszewski, 1971</marker>
<rawString>Marciszewski, W. 1971 Introduction to Appendix. In Pelc, Gerzy (ed.) Studies in Functional Logical Semiotics of Natural Language. Mouton, The Hague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Martin</author>
</authors>
<title>Toward a Systematic Pragmatics.</title>
<date>1959</date>
<publisher>North-Holland,</publisher>
<location>Amsterdam.</location>
<contexts>
<context position="70322" citStr="Martin (1959)" startWordPosition="11597" endWordPosition="11598">&amp;quot; versus &amp;quot;He loves him&amp;quot;) suggest another approach, viz., one in which 1. the semantic component provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as requests for their answers. Pragmatics is the least understood branch of the tripartite division of the study of language that Morris (1938) proposed in his theory of semiotics. This century has seen tremendous successes in the development of formal logical syntax and model-theoretic semantics, but very little in the way of formal pragmatics. (Martin (1959) is an early attempt in this direction.) Marciszewski (1971) and more recently Levinson (1983) together contain a thorough analysis of the various approaches that have been taken to define the scope of linguistic pragmatics, from its origin in Morris&apos;s definition of semiotics (Morris 1938) to the present day. It is obvious from these accounts that there has been less agreement as to the scope of this branch of the field. Morris (1938) originally defined pragmatics as the study of &amp;quot;the relation of signs to interpreters.&amp;quot; Later, at least partly in response to Carnap&apos;s proposal that &amp;quot;if in an inv</context>
</contexts>
<marker>Martin, 1959</marker>
<rawString>Martin, R.M. 1959 Toward a Systematic Pragmatics. North-Holland, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Montague</author>
</authors>
<title>Pragmatics.</title>
<date>1968</date>
<editor>In Klibansky, R. (ed.)</editor>
<location>Florence, Italy.</location>
<contexts>
<context position="71327" citStr="Montague 1968" startWordPosition="11769" endWordPosition="11770">ope of this branch of the field. Morris (1938) originally defined pragmatics as the study of &amp;quot;the relation of signs to interpreters.&amp;quot; Later, at least partly in response to Carnap&apos;s proposal that &amp;quot;if in an investigation explicit reference is made to the . . . user of a language, then we assign it to the field of pragmatics&amp;quot; (Carnap 1947), Morris felt the need to expand upon this definition. In Morris (1946), he says that pragmatics is &amp;quot;that portion of semiotic which deals with the origins, uses, and effects of signs within the behavior in which they occur.&amp;quot; Montague&apos;s conception of pragmatics (Montague 1968, 1970a, and 1973), based upon Bar-Hillel&apos;s (BarHillel 1954) discussion of indexical expressions, represents a departure from the traditional view. Hamblin (1973) felt that Montague&apos;s incorporation of a pragmatic component directly in the syntax and semantics was unconventional, and felt the need &amp;quot;to defend pragmatics from this weakened interpretation . . . . Pragmatics is the study of the use (not just reference) of language of all kinds; or, if it is not, we need a new name for the study that complements syntax and semantics. Montague&apos;s &apos;pragmatics&apos; would be better classed as a special part </context>
</contexts>
<marker>Montague, 1968</marker>
<rawString>Montague, R. 1968 Pragmatics. In Klibansky, R. (ed.) Contemporary Philosophy: A Survey. Florence: La Nuova Italia Editrice, Florence, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Montague</author>
</authors>
<title>Pragmatics and Intensional Logic.</title>
<date>1970</date>
<journal>Synthese,</journal>
<volume>22</volume>
<pages>68--94</pages>
<contexts>
<context position="105374" citStr="Montague (1970" startWordPosition="17405" endWordPosition="17406">example are S4 to form an untensed clause from a SUBJect and PREDicate, S5 to form a verb phrase from a transverb and a direct object, and S104 to form a present-tense clause. Several points arise with this example. First, we note that this analysis tree presents the derivational history of non-basic expressions in the language in the obvious way. Each node is labeled with a meaningful expression in QE-III; in case the expression is non-basic, it is further labeled by the syntactic rule by which it was constructed, and is given children labeled with the expressions from which it was obtained. Montague (1970b) provides a more formal definition of analysis trees; it should be sufficient to point out that the language is defined in such a way that to each analysis tree (though not necessarily to each meaningful expression) there corresponds a unique translation into the intermediate logical language. This analysis of Example 4-1 illustrates several departures from the corresponding PTQ analysis. First, we note that the basic verb is prefixed with #, and this Computational Linguistics, Volume 14, Number 4, December 1988 29 James Clifford Natural Language Querying of Historical Databases prefix remai</context>
</contexts>
<marker>Montague, 1970</marker>
<rawString>Montague, R. 1970 Pragmatics and Intensional Logic. Synthese, 22: 68-94.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Montague</author>
</authors>
<title>English as a Formal Language.</title>
<date>1970</date>
<booktitle>Linguaggi nella Societa e nella Tecnica. Edizioni di Comunita,</booktitle>
<editor>In Visentini, B. et al (eds.)</editor>
<location>Milan, Italy.</location>
<contexts>
<context position="105374" citStr="Montague (1970" startWordPosition="17405" endWordPosition="17406">example are S4 to form an untensed clause from a SUBJect and PREDicate, S5 to form a verb phrase from a transverb and a direct object, and S104 to form a present-tense clause. Several points arise with this example. First, we note that this analysis tree presents the derivational history of non-basic expressions in the language in the obvious way. Each node is labeled with a meaningful expression in QE-III; in case the expression is non-basic, it is further labeled by the syntactic rule by which it was constructed, and is given children labeled with the expressions from which it was obtained. Montague (1970b) provides a more formal definition of analysis trees; it should be sufficient to point out that the language is defined in such a way that to each analysis tree (though not necessarily to each meaningful expression) there corresponds a unique translation into the intermediate logical language. This analysis of Example 4-1 illustrates several departures from the corresponding PTQ analysis. First, we note that the basic verb is prefixed with #, and this Computational Linguistics, Volume 14, Number 4, December 1988 29 James Clifford Natural Language Querying of Historical Databases prefix remai</context>
</contexts>
<marker>Montague, 1970</marker>
<rawString>Montague, R. 1970 English as a Formal Language. In Visentini, B. et al (eds.) Linguaggi nella Societa e nella Tecnica. Edizioni di Comunita, Milan, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Montague</author>
</authors>
<title>The Proper Treatment of Quantification</title>
<date>1973</date>
<booktitle>Approaches to Natural Language. D. Reidel Publishing Co.,</booktitle>
<editor>in English. In Hintikka, K.J.J. et al. (eds.)</editor>
<location>Dordrecht, The Netherlands.</location>
<contexts>
<context position="2754" citStr="Montague (1973)" startWordPosition="429" endWordPosition="430">. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a mechanism for direct reference to these higher-order objects, and for incorporating them into a general temporal semantics for the database. We can therefore express both static and dynamic queries in the same language, by quantifying over variables of the appropriate types. In a series of papers culminating in Montague (1973), henceforth PTQ, Richard Montague embarked upon a program of providing a formal syntax coupled with a model-theoretic semantics for increasingly sophisticated fragments of English. Section 3 argues that a successful formal treatment can be given to a natural language querying facility for a historical relational data base (HRDB), through the medium of the intensional logic ILs. We view this work as important for two reasons. First, it represents one of the initial attempts to adapt the ideas of Montague Semantics (MS) (Montague 1974) to a practical problem. (Landsbergen (1981) looks at the is</context>
<context position="35652" citStr="Montague 1973" startWordPosition="5934" endWordPosition="5935"> his attention on a formal treatment of the syntax and semantics of declarative sentences in natural language, the framework of using a lambda calculus and the model theory of intensional logic, developed in PTQ, is rich enough to incorporate a view of natural language questions as well. In what seems to be his only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are of course inappropriate, and would be replaced by fulfillment conditions and a characterization of the semantic content of a correct answer&amp;quot; (Montague 1973). Perhaps inspired by this comment, a number of researchers have been investigating ways to incorporate a formal account of the syntax and semantics of questions within the framework of Montague Semantics. Hamblin (1973), Karttunen (1977), Bennett (1977, 1979), Hausser and Zaefferer (1978), and Belnap (1982) are perhaps the most important of these investigations, and we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have al</context>
</contexts>
<marker>Montague, 1973</marker>
<rawString>Montague, R. 1973 The Proper Treatment of Quantification in English. In Hintikka, K.J.J. et al. (eds.) Approaches to Natural Language. D. Reidel Publishing Co., Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Montague</author>
<author>R Thomason</author>
</authors>
<title>Formal Philosophy: Selected Papers of Richard Montague.</title>
<date>1974</date>
<publisher>Yale University Press,</publisher>
<location>New Haven, CT.</location>
<marker>Montague, Thomason, 1974</marker>
<rawString>Montague, R. and Thomason, R. (ed.) 1974 Formal Philosophy: Selected Papers of Richard Montague. Yale University Press, New Haven, CT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Computational Linguistics</author>
</authors>
<title>33 James Clifford Natural Language Querying of Historical Databases</title>
<date>1988</date>
<volume>14</volume>
<marker>Linguistics, 1988</marker>
<rawString>Computational Linguistics, Volume 14, Number 4, December 1988 33 James Clifford Natural Language Querying of Historical Databases</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Morris</author>
</authors>
<title>Foundations of the Theory of Signs.</title>
<date>1938</date>
<booktitle>In International Encyclopedia of</booktitle>
<institution>Unified Science. University of Chicago Press,</institution>
<location>Chicago, IL.</location>
<contexts>
<context position="70103" citStr="Morris (1938)" startWordPosition="11563" endWordPosition="11564">9 and Belnap 1982), and our sets of n-tuples of individuals) many researchers have been investigating ways to accomplish this in a formal semantics. The similarity between wh-terms and unbound pronouns (&amp;quot;Who loves whom?&amp;quot; versus &amp;quot;He loves him&amp;quot;) suggest another approach, viz., one in which 1. the semantic component provides that questions denote as declarative sentences (with unbound pronouns) do, and 2. the pragmatic component provides that questions are interpreted as requests for their answers. Pragmatics is the least understood branch of the tripartite division of the study of language that Morris (1938) proposed in his theory of semiotics. This century has seen tremendous successes in the development of formal logical syntax and model-theoretic semantics, but very little in the way of formal pragmatics. (Martin (1959) is an early attempt in this direction.) Marciszewski (1971) and more recently Levinson (1983) together contain a thorough analysis of the various approaches that have been taken to define the scope of linguistic pragmatics, from its origin in Morris&apos;s definition of semiotics (Morris 1938) to the present day. It is obvious from these accounts that there has been less agreement a</context>
<context position="72948" citStr="Morris 1938" startWordPosition="12035" endWordPosition="12036">ring the answer(s) to a question is in a separate theory of pragmatics for the language. We do not propose a completely general theory of pragmatics. But we believe that incorporating into our fragment a formal pragmatic component that treats the notion of a response to a question is defensible as at least one component of a theory of language use. In the first place, Montague notwithstanding, it falls within the confines of pragmatics as that term is generally understood. For whether one speaks of &amp;quot;the use and effects&amp;quot; of language (Morris 1946), the &amp;quot;relation of signs to their interpreters&amp;quot; (Morris 1938), the notion of &amp;quot;speech acts&amp;quot; (Dowty 1978), or the &amp;quot;linguistic means for effecting literal purposes&amp;quot; (Kasher 1977), it is clear that the notion of responding to a question is encompassed. Our attempt to formalize a pragmatic compoComputational Linguistics, Volume 14, Number 4, December 1988 23 James Clifford Natural Language Querying of Historical Databases nent to QE-III accords well with what Stalnaker (1972) sees as the goals of &amp;quot;a formal semiotics no less rigorous than present day logical syntax and semantics.&amp;quot; Those goals, he goes on to say, include an analysis of such linguistic acts as </context>
</contexts>
<marker>Morris, 1938</marker>
<rawString>Morris, C. 1938 Foundations of the Theory of Signs. In International Encyclopedia of Unified Science. University of Chicago Press, Chicago, IL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Morris</author>
</authors>
<date>1946</date>
<publisher>Prentice Hall,</publisher>
<location>New York, NY.</location>
<contexts>
<context position="71123" citStr="Morris (1946)" startWordPosition="11737" endWordPosition="11738"> the scope of linguistic pragmatics, from its origin in Morris&apos;s definition of semiotics (Morris 1938) to the present day. It is obvious from these accounts that there has been less agreement as to the scope of this branch of the field. Morris (1938) originally defined pragmatics as the study of &amp;quot;the relation of signs to interpreters.&amp;quot; Later, at least partly in response to Carnap&apos;s proposal that &amp;quot;if in an investigation explicit reference is made to the . . . user of a language, then we assign it to the field of pragmatics&amp;quot; (Carnap 1947), Morris felt the need to expand upon this definition. In Morris (1946), he says that pragmatics is &amp;quot;that portion of semiotic which deals with the origins, uses, and effects of signs within the behavior in which they occur.&amp;quot; Montague&apos;s conception of pragmatics (Montague 1968, 1970a, and 1973), based upon Bar-Hillel&apos;s (BarHillel 1954) discussion of indexical expressions, represents a departure from the traditional view. Hamblin (1973) felt that Montague&apos;s incorporation of a pragmatic component directly in the syntax and semantics was unconventional, and felt the need &amp;quot;to defend pragmatics from this weakened interpretation . . . . Pragmatics is the study of the use</context>
<context position="72887" citStr="Morris 1946" startWordPosition="12026" endWordPosition="12027"> our theory of questions is that the proper place for considering the answer(s) to a question is in a separate theory of pragmatics for the language. We do not propose a completely general theory of pragmatics. But we believe that incorporating into our fragment a formal pragmatic component that treats the notion of a response to a question is defensible as at least one component of a theory of language use. In the first place, Montague notwithstanding, it falls within the confines of pragmatics as that term is generally understood. For whether one speaks of &amp;quot;the use and effects&amp;quot; of language (Morris 1946), the &amp;quot;relation of signs to their interpreters&amp;quot; (Morris 1938), the notion of &amp;quot;speech acts&amp;quot; (Dowty 1978), or the &amp;quot;linguistic means for effecting literal purposes&amp;quot; (Kasher 1977), it is clear that the notion of responding to a question is encompassed. Our attempt to formalize a pragmatic compoComputational Linguistics, Volume 14, Number 4, December 1988 23 James Clifford Natural Language Querying of Historical Databases nent to QE-III accords well with what Stalnaker (1972) sees as the goals of &amp;quot;a formal semiotics no less rigorous than present day logical syntax and semantics.&amp;quot; Those goals, he go</context>
</contexts>
<marker>Morris, 1946</marker>
<rawString>Morris, C. 1946 Signs, Language, and Behavior. Prentice Hall, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E N Pope</author>
</authors>
<title>Questions and Answers in English.</title>
<date>1976</date>
<booktitle>In Janua Linguarum Series Practica 226.</booktitle>
<publisher>Mouton, The Hague.</publisher>
<contexts>
<context position="34027" citStr="Pope 1976" startWordPosition="5676" endWordPosition="5677">ork (t) S5 / \ John #work In Section 4, when we discuss further examples of tensed sentences, particularly tensed questions and when-questions, we will discuss this issue further. 3.4 QUESTIONS 3.4.1 INTRODUCTION Despite their obvious importance as a tool for gaining knowledge of the world, both linguists and philosophers have historically considered interrogative sentences the poor relation of the declaratives, to which they have paid the bulk of their attention. Among linguists there is no generally accepted theory about the syntactic generation of English questions (Kuno and Robinson 1972, Pope 1976), and philosophers and logicians have until recently given little attention to the question of questions. More recently Engdahl (1986) explored the issue of constituent questions in Swedish, and proposed a semantic theory of questions similar to those of Hamblin (1973) and Karttunen (1977), which we shall discuss in Section 3.6. Groenendijk and Stokhof (1983) address the issue of the appropriateness of an answer in different situations, an issue outside the scope of the present work. Formal logic from its inception directed its attention to languages based upon the notion of formulas, abstract</context>
</contexts>
<marker>Pope, 1976</marker>
<rawString>Pope, E.N. 1976 Questions and Answers in English. In Janua Linguarum Series Practica 226. Mouton, The Hague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Quirk</author>
<author>S Greenbaum</author>
</authors>
<title>A University Grammar of English.</title>
<date>1974</date>
<publisher>Longman,</publisher>
<location>London, England.</location>
<contexts>
<context position="74290" citStr="Quirk and Greenbaum (1974)" startWordPosition="12250" endWordPosition="12253">haps in some cases normal) completion of the act.&amp;quot; A second argument in favor of this approach comes from looking at the way that linguists have described the concept of a question. Linguists have traditionally classified sentences into four distinct types: declarative, interrogative, imperative, and exclamatory. A glance through some standard text or reference books on English grammar reveals two separate approaches to the rationale behind this scheme. According to one school, as in Roberts (1954), it is based upon the &amp;quot;different kinds of meaning&amp;quot; a sentence may have. The other school, as in Quirk and Greenbaum (1974), considers that the distinction is based upon such criteria as word order in the sentence, presence or absence of a subject, the presence of an interjection, etc. Clearly the disagreement is over whether to consider this a syntactic or a semantic distinction. Perhaps in some sense it is mainly a pragmatic one, reflecting both the use and effects of the utterance. Finally, this approach in its technical details is both simple and elegant. It removes from semantics the burden of providing an account of the response to a question, and allows it to do what semantics theories have always done best</context>
</contexts>
<marker>Quirk, Greenbaum, 1974</marker>
<rawString>Quirk, R. and Greenbaum, S. 1974 A University Grammar of English. Longman, London, England.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Reiter</author>
</authors>
<title>On Closed World Data Bases.</title>
<date>1978</date>
<booktitle>Logic and Data Bases.</booktitle>
<editor>In Gallaire, H., and Minker, J. (eds.)</editor>
<publisher>Plenum Press,</publisher>
<location>New York, NY.</location>
<contexts>
<context position="16638" citStr="Reiter 1978" startWordPosition="2857" endWordPosition="2858">ms of the semantics of HRDM, by defining a small query fragment as a Montague Grammar. The correlation between the database semantics and this query language is made explicit by providing the semantics of the query fragment via an indirect translation into the intensional logic IL.&apos; The translations provide for a completely extensional treatment of verbs (i.e., there are no verbs like seek, which can be nonextensional in object position in the PTQ treatment). This treatment is dictated by the application to a database environment, in which existence is tantamount to existence in the database (Reiter 1978). Through these translations, then, the historical database essentially serves as a model for ILs and therefore as the model for a formal definition of the interpretation of the English queries. In addition to providing a semantic interpretation, which in model-theoretic terms is called its denotation, we also provide for each expression a pragmatic interpretation in a manner to be explained. Our goal in this effort has not been to define an English database query language that is, in any sense of the term, complete. Rather, we have been motivated by two complementary goals. First, we have wan</context>
</contexts>
<marker>Reiter, 1978</marker>
<rawString>Reiter, R. 1978 On Closed World Data Bases. In Gallaire, H., and Minker, J. (eds.) Logic and Data Bases. Plenum Press, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Rescher</author>
<author>A Urquhart</author>
</authors>
<title>Temporal Logic.</title>
<date>1971</date>
<publisher>Springer Verlag,</publisher>
<location>New York, NY.</location>
<contexts>
<context position="26789" citStr="Rescher and Urquhart 1971" startWordPosition="4501" endWordPosition="4504">articularly the semantics of the progressive tenses. lead Dowty to espouse a theory of interval semantics, earlier proposed by Bennett and Partee (1972), wherein truth conditions are given relative to an interval, rather than to a 14 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases moment, of time. Unlike other proposed changes to Montague&apos;s PTQ analysis of English, this proposal causes major modifications to the most basic semantic notion of IL, and indeed of most other temporal logics that have been studied (e.g., Rescher and Urquhart 1971). We are not convinced of the necessity of taking this step (indeed, Dowty himself says that &amp;quot;it results in a system that is really too powerful for natural language semantics&amp;quot; (Dowty 1979), p. 138). Certainly from the perspective of database querying, the complications that it introduces into the logic seem unnecessary. The existence of an actual historical database as the heart of our logical model is the major constraint within which all of our work must be undertaken. This &amp;quot;given,&amp;quot; which in essence already takes a stand on the semantics of the real world, stands as the major difference bet</context>
</contexts>
<marker>Rescher, Urquhart, 1971</marker>
<rawString>Rescher, N. and Urquhart, A. 1971 Temporal Logic. Springer Verlag, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Roberts</author>
</authors>
<title>Understanding Grammar.</title>
<date>1954</date>
<publisher>Harper &amp; Row,</publisher>
<location>New York, NY.</location>
<contexts>
<context position="74167" citStr="Roberts (1954)" startWordPosition="12230" endWordPosition="12231">rtions, commands, . . . , requests . . . to find necessary and sufficient conditions for the successful (or perhaps in some cases normal) completion of the act.&amp;quot; A second argument in favor of this approach comes from looking at the way that linguists have described the concept of a question. Linguists have traditionally classified sentences into four distinct types: declarative, interrogative, imperative, and exclamatory. A glance through some standard text or reference books on English grammar reveals two separate approaches to the rationale behind this scheme. According to one school, as in Roberts (1954), it is based upon the &amp;quot;different kinds of meaning&amp;quot; a sentence may have. The other school, as in Quirk and Greenbaum (1974), considers that the distinction is based upon such criteria as word order in the sentence, presence or absence of a subject, the presence of an interjection, etc. Clearly the disagreement is over whether to consider this a syntactic or a semantic distinction. Perhaps in some sense it is mainly a pragmatic one, reflecting both the use and effects of the utterance. Finally, this approach in its technical details is both simple and elegant. It removes from semantics the burd</context>
</contexts>
<marker>Roberts, 1954</marker>
<rawString>Roberts, P. 1954 Understanding Grammar. Harper &amp; Row, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Remko J H Scha</author>
</authors>
<title>Logical Foundations for Question Answering.</title>
<date>1983</date>
<tech>Ph.D. diss.,</tech>
<institution>University of Groningen, The Netherlands.</institution>
<contexts>
<context position="98309" citStr="Scha (1983)" startWordPosition="16258" endWordPosition="16259">le semantics framework. Their analysis &amp;quot;lets questions denote different types of sets according to the type of that expression which is the critical one in any kind of answer.&amp;quot; In other words, their semantic analysis of answers is quite similar to our pragmatic analysis of questions. The following table comparing the types assigned to various kinds of questions by their semantics and our pragmatics might help to make this analogy clearer. Question class Our typing H-Z typing yes-no &lt;e,t&gt; t I individual &lt;e,&lt;e,t&gt;&gt; &lt;&lt;s,f(T)&gt;,t&gt; 2 individual &lt;&lt;s,f(T)&gt;,&lt;&lt;s,f(T)&gt;,t» 3.6.4 SCHA AND GUNJI The work of Scha (1983) on the PHLIQA1 project and Gunji (1981), both being developed concurrently with the development of QE-III (Clifford 1982b), are remarkably similar in spirit, though not in detail, to the present work. The close parallels in the motivation of these three works indicate a trend among many researchers toward developing a formal foundation for computer systems that do natural language processing. The major theoretical difference between QE-III and that of the PHLIQA1 project of Scha are that we make a distinction between the semantics and pragmatics of sentences in QE-III, so that the pragmatic i</context>
</contexts>
<marker>Scha, 1983</marker>
<rawString>Scha, Remko J.H. 1983 Logical Foundations for Question Answering. Ph.D. diss., University of Groningen, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R C Schank</author>
</authors>
<title>Conceptual Dependence: A Theory of Natural Language Understanding.</title>
<date>1972</date>
<journal>Cognitive Psychology</journal>
<volume>3</volume>
<issue>4</issue>
<pages>552--631</pages>
<contexts>
<context position="23169" citStr="Schank 1972" startWordPosition="3920" endWordPosition="3921">tage of the database semantics to incorporate directly into its translation the information that its subject must be an IC in the role of a MGR, and that its object must be a constant IC that is an EMP. We do not change the logical type of the translation, i.e., a transitive verb in our fragment denotes the same kind of function as it does in Montague&apos;s treatment; we simply analyze its meaning in terms of the database primitives. This analysis in terms of a small set of primitive meaning units is not very different from some approaches taken in Al work in natural language understanding (e.g., Schank 1972), or from the linguistic theory of deep cases (Fillmore 1968). The difference, of course, is that our primitives or cases are different, motivated by the HRDM and the schema design, and are no more absolute than any well-chosen database design. As an example, the translation of &amp;quot;manage&amp;quot; in our fragment is given as: AWAxW(i)(AyAS-1(y(i),x) A EMP*&apos;(i)(y(i)) A MGR&apos;(i)(x)). This expression is of the same logical type as manage&apos; in a PTQ-like treatment, and will combine with terms in the same way, but it does not leave &amp;quot;managing&amp;quot; unanalyzed. Instead it specifies what attribute class(es) its subject</context>
</contexts>
<marker>Schank, 1972</marker>
<rawString>Schank, R.C. 1972 Conceptual Dependence: A Theory of Natural Language Understanding. Cognitive Psychology 3(4): 552-631.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Snodgrass</author>
</authors>
<title>The Temporal Query Language TQuel.</title>
<date>1984</date>
<booktitle>In Proceedings of the Third ACM SIGACT-SIGMOD Symposium on Principles of Database Systems.</booktitle>
<location>Waterloo, Ontario, Canada.</location>
<contexts>
<context position="1791" citStr="Snodgrass (1984)" startWordPosition="276" endWordPosition="277">NTRODUCTION The relational model of data (RM), first proposed in 1970 (Codd 1970), has by now become the standard for both database practitioners and theoreticians alike. In spite of this success, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and th</context>
</contexts>
<marker>Snodgrass, 1984</marker>
<rawString>Snodgrass, R. 1984 The Temporal Query Language TQuel. In Proceedings of the Third ACM SIGACT-SIGMOD Symposium on Principles of Database Systems. Waterloo, Ontario, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Snodgrass</author>
<author>I Ahn</author>
</authors>
<title>A Taxonomy of Time in Data Bases.</title>
<date>1985</date>
<booktitle>In ACM-SIGMOD International Conference on Management of Data.</booktitle>
<location>Austin, TX.</location>
<contexts>
<context position="1853" citStr="Snodgrass and Ahn (1985)" startWordPosition="284" endWordPosition="287">roposed in 1970 (Codd 1970), has by now become the standard for both database practitioners and theoreticians alike. In spite of this success, however, much recent database research has focused on ways to extend RM to overcome perceived shortcomings. Chief among the criticisms has been RM&apos;s lack of any &amp;quot;real-world semantics.&amp;quot; Among the many diverse efforts directed at this deficiency have been a number of attempts to extend RM to incorporate a temporal dimension at the model level. While such efforts as Ben-Zvi (1982), Ariav et al. (1984), Snodgrass (1984), Lum et al. (1984), Clifford (1985), Snodgrass and Ahn (1985), and Gadia and Vaishnav (1985) have all addressed this issue, the Historical Relational Database Model (HRDM) ((Clifford 1982a), (Clifford and Warren 1983), (Clifford 1985), (Clifford and Croker 1987)) has the advantage of being directly parallel to a formal theory of natural language. In Section 2 we present an overview of HRDM, as it serves as the environment in which we wish to explore our query language. In particular, HRDM views database attributes as functions from moments in time to values (in the appropriate domain), and the intensional logic ILs provides a mechanism for direct refere</context>
</contexts>
<marker>Snodgrass, Ahn, 1985</marker>
<rawString>Snodgrass, R., and Ahn, I. 1985 A Taxonomy of Time in Data Bases. In ACM-SIGMOD International Conference on Management of Data. Austin, TX.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stalnaker</author>
</authors>
<title>Pragmatics.</title>
<date>1972</date>
<booktitle>Semantics of Natural Languages. D. Reidel Publishing Co.,</booktitle>
<editor>In Davidson, Donald and Harman, Gilbert (eds.)</editor>
<location>Dordrecht, The Netherlands.</location>
<contexts>
<context position="73362" citStr="Stalnaker (1972)" startWordPosition="12099" endWordPosition="12100">in the confines of pragmatics as that term is generally understood. For whether one speaks of &amp;quot;the use and effects&amp;quot; of language (Morris 1946), the &amp;quot;relation of signs to their interpreters&amp;quot; (Morris 1938), the notion of &amp;quot;speech acts&amp;quot; (Dowty 1978), or the &amp;quot;linguistic means for effecting literal purposes&amp;quot; (Kasher 1977), it is clear that the notion of responding to a question is encompassed. Our attempt to formalize a pragmatic compoComputational Linguistics, Volume 14, Number 4, December 1988 23 James Clifford Natural Language Querying of Historical Databases nent to QE-III accords well with what Stalnaker (1972) sees as the goals of &amp;quot;a formal semiotics no less rigorous than present day logical syntax and semantics.&amp;quot; Those goals, he goes on to say, include an analysis of such linguistic acts as &amp;quot;assertions, commands, . . . , requests . . . to find necessary and sufficient conditions for the successful (or perhaps in some cases normal) completion of the act.&amp;quot; A second argument in favor of this approach comes from looking at the way that linguists have described the concept of a question. Linguists have traditionally classified sentences into four distinct types: declarative, interrogative, imperative, </context>
</contexts>
<marker>Stalnaker, 1972</marker>
<rawString>Stalnaker. 1972 Pragmatics. In Davidson, Donald and Harman, Gilbert (eds.) Semantics of Natural Languages. D. Reidel Publishing Co., Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Tichy</author>
</authors>
<title>Questions, Answers, and Logic.</title>
<date>1978</date>
<journal>American Philosophical Quarterly</journal>
<volume>15</volume>
<issue>4</issue>
<pages>275--284</pages>
<marker>Tichy, 1978</marker>
<rawString>Tichy, P. 1978 Questions, Answers, and Logic. American Philosophical Quarterly 15(4): 275-284.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Z Vendler</author>
</authors>
<title>Linguistics in Philosophy.</title>
<date>1967</date>
<publisher>Cornell University Press,</publisher>
<location>Ithaca, NY.</location>
<contexts>
<context position="25657" citStr="Vendler 1967" startWordPosition="4334" endWordPosition="4335">y different treatment of the phenomenon of tense is one of his contributions. Because we are concerned with many of the same issues as Dowty—in particular tenses and direct temporal references—it seems appropriate to discuss his work and to contrast two different solutions to some of the same issues. A major section of the book is concerned with developing a rigorous taxonomy of verbs in English based upon several syntactic and semantic criteria. The problems with a number of different classification schemes that have been proposed over the years are discussed, in particular Vendler&apos;s scheme (Vendler 1967), which divides verbs into the four categories of statives, activities, accomplishments, and achievements. Dowty judges all of these proposals by the two criteria of syntactic and semantic uniformity: can all of the verbs assigned to a given class appear in the same syntactic constructs, and are the same inferences in meaning justified for all like-classified verbs? Dowty&apos;s final taxonomy, offered with many reservations, defines eight different verb categories. These aspectual verb distinctions, and particularly the semantics of the progressive tenses. lead Dowty to espouse a theory of interva</context>
</contexts>
<marker>Vendler, 1967</marker>
<rawString>Vendler, Z. 1967 Linguistics in Philosophy. Cornell University Press, Ithaca, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D L Waltz</author>
</authors>
<title>An English Language Question Answering System for a Large Relational Data base.</title>
<date>1978</date>
<journal>Communications of the ACM</journal>
<volume>21</volume>
<issue>7</issue>
<pages>526--539</pages>
<contexts>
<context position="36873" citStr="Waltz 1978" startWordPosition="6117" endWordPosition="6118">portant contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering theories and systems to varying degrees of success. These have ranged from some early experimental programs (Green et al. 1963) to database querying programs bound to a particular database domain (Woods et al. 1972 and 16 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases 1 Waltz 1978) to some rather sophisticated DBQ systems today that are designed to be general and easily portable (Harris 1973, Hendrix et al. 1978). The research behind these systems seems to share a goal common to much of the work in Al (as distinct from cognitive science), i.e., an interest more in getting a system to &amp;quot;work&amp;quot; than in developing a formal theory that explains its behavior. 3.4.2 DATABASE QUESTIONS As guidelines to help us judge any proposed theory of questions we have adopted a number of self-imposed criteria that any solution acceptable to us should meet. 1. It must fall within the general</context>
</contexts>
<marker>Waltz, 1978</marker>
<rawString>Waltz, D.L. 1978 An English Language Question Answering System for a Large Relational Data base. Communications of the ACM 21(7): 526-539.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D S Warren</author>
</authors>
<title>Syntax and Semantics in Parsing: An Application to Montague Grammar.</title>
<date>1979</date>
<institution>University of Michigan,</institution>
<location>Ann Arbor, MI.</location>
<note>Ph.D. diss.,</note>
<contexts>
<context position="18310" citStr="Warren (1979)" startWordPosition="3118" endWordPosition="3119">Two overrriding principles have guided this work. First was that whatever interpretation or meaning our theory would give to a natural language database query should be as close as possible to the interpretation given to database queries in, say, the relational algebra or calculus. This meant that the interpretation of a query should somehow encompass its answer as represented in the underlying data base. Second, the theory should make sense computationally. This meant taking into account what had already been learned about parsing strategies for Montague Grammars (Friedman and Warren (1978), Warren (1979), Landsbergen (1981)), as well as what database theory had to say about the semantics of the modeled enterprise. These principles motivate certain systematic simplifications to the PTQ translations from English to logic, wherever these are suggested by the simplified view of the semantics of the enterprise provided by the database model. Moreover, since we are not attempting to develop a semantic theory of questions for English in general, these simplifications have been introduced into the translation process as early as possible. We believe that this strategy has the dual effect of making so</context>
<context position="39322" citStr="Warren 1979" startWordPosition="6526" endWordPosition="6527">xpression as a question in our fragment should be defined to denote a function of type &lt;en,t&gt;. As we shall see we were able to accomplish this easily and naturally not in the semantics, but by extending the framework of Montague Semantics to include a pragmatic component. 3. The theory should be computationally tractable. Because we are interested in developing a theory for natural language query systems that are ultimately implementable, this criterion leads us to direct our attention to solutions that fall within the general PTQ framework. This is because there have been successful results (Warren 1979 and Landsbergen 1981) implementing parsers and semantic interpretation routines for fragments defined within this framework, and we wanted to build upon this work as much as possible. While this work does not discuss a computer implementation of its results, an extension of Warren&apos;s PTQ parser (Warren 1979) to the QE-III fragment has been implemented by Hasbrouck (1982). 4. Proper treatment must be given to the interaction of questions and quantifiers. The PTQ treatment successfully accounts for multiple readings of sentences with interacting quantifiers (&amp;quot;A woman loves every man.&amp;quot;) Our solut</context>
</contexts>
<marker>Warren, 1979</marker>
<rawString>Warren, D.S. 1979 Syntax and Semantics in Parsing: An Application to Montague Grammar. Ph.D. diss., University of Michigan, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W A Woods</author>
<author>R M Kaplan</author>
<author>B Nash-Webber</author>
</authors>
<title>The LUNAR Sciences Natural Language Information System:</title>
<date>1972</date>
<tech>Final Report (Technical Report BBN Report 2378) Bolt,</tech>
<institution>Beranek and Newman Inc.,</institution>
<location>Cambridge, MA.</location>
<contexts>
<context position="36725" citStr="Woods et al. 1972" startWordPosition="6094" endWordPosition="6097">spects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering theories and systems to varying degrees of success. These have ranged from some early experimental programs (Green et al. 1963) to database querying programs bound to a particular database domain (Woods et al. 1972 and 16 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases 1 Waltz 1978) to some rather sophisticated DBQ systems today that are designed to be general and easily portable (Harris 1973, Hendrix et al. 1978). The research behind these systems seems to share a goal common to much of the work in Al (as distinct from cognitive science), i.e., an interest more in getting a system to &amp;quot;work&amp;quot; than in developing a formal theory that explains its behavior. 3.4.2 DATABASE QUESTIONS As guidelines to help us judge any proposed theo</context>
</contexts>
<marker>Woods, Kaplan, Nash-Webber, 1972</marker>
<rawString>Woods, W.A.; Kaplan, R.M.; and Nash-Webber, B. 1972 The LUNAR Sciences Natural Language Information System: Final Report (Technical Report BBN Report 2378) Bolt, Beranek and Newman Inc., Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I See Clifford</author>
</authors>
<title>for the definition of IL, and a discussion of how (and why) it differs from Montague&apos;s IL.</title>
<date>1987</date>
<contexts>
<context position="7553" citStr="Clifford (1987)" startWordPosition="1204" endWordPosition="1205">e inclusion of certain forms of direct questions. These extensions, and the semantic and pragmatic interpretations with which they are provided, are motivated by the ultimate goal of database access, but they are equally interesting in their own right. The syntactic theory presented is in some cases admittedly naive, for we have been primarily interested in getting the interpretation right. Section 4 provides an overview of the salient features of the QE-III by means of a number of example derivations and translations. The complete definition of QEIII is given in Clifford (1982b) and again in Clifford (1987), where it appears with a fuller set of examples. We conclude in Section 5 with a discussion of some of the limitations of the fragment and of some possibilities for further extensions. 2 THE HISTORICAL RELATIONAL DATABASE MODEL Analogous to the relationship between the relational model of data and first-order logic (Gallaire and Minker 1978), we can view an HRDB as a model for ILs (Clifford 1982b). The higher-order language ILs (with its built-in concept of denotation with respect to an index) provides a formal semantics for such data bases in a natural way. In the standard or &amp;quot;static&amp;quot; relati</context>
<context position="100549" citStr="Clifford (1987)" startWordPosition="16605" endWordPosition="16606">declarative and imperative sentences, and true-false questions, QE-III resulted from a concentration on wh-questions and an explicit treatment of time-denoting expressions. This concludes our informal discussion of the goals and philosophy behind the definition of the fragment QE-III, and its relation to other recent work in the area of formal question semantics. The next section provides an overview of QE-III through a series of examples and discussions illustrating the major features of the language. (The complete definition of the syntax, semantics, and pragmatics of QE-III can be found in Clifford (1987).) 4 EXAMPLES FROM THE QE-III FRAGMENT 4.1 INTRODUCTION This section presents and discusses examples of the syntactic and translation rules of the QE-III fragment. As we pointed out in Section 3, the PTQ fragment 28 Computational Linguistics, Volume 14, Number 4, December 1988 James Clifford Natural Language Querying of Historical Databases stands essentially intact as the core of QE-III. There are, however, certain changes to this core. One major change is our use of the logic IL, as the intermediate translation language; this logic is a modification to Montague&apos;s IL, and makes explicit the &amp;quot;</context>
</contexts>
<marker>Clifford, 1987</marker>
<rawString>I. See Clifford (1987) for the definition of IL, and a discussion of how (and why) it differs from Montague&apos;s IL.</rawString>
</citation>
<citation valid="false">
<title>2. In all translation examples we follow Partee in using a double arrow &amp;quot;= -=&gt;&amp;quot; to indicate the immediate result of applying a translation rule of the fragment, and a single arrow &amp;quot;—&gt;&amp;quot; to indicate the result of any of a number of logical simplifications (principally A-reduction).</title>
<marker></marker>
<rawString>2. In all translation examples we follow Partee in using a double arrow &amp;quot;= -=&gt;&amp;quot; to indicate the immediate result of applying a translation rule of the fragment, and a single arrow &amp;quot;—&gt;&amp;quot; to indicate the result of any of a number of logical simplifications (principally A-reduction).</rawString>
</citation>
<citation valid="true">
<title>The &amp;quot;such that&amp;quot; construction for heading relative clauses is a syntactic holdover from the PTQ fragment, which, because our concern is primarily semantic, we have not attempted to replace with a more sophisticated treatment. For a treatment of more usual English relative clauses, the reader is referred to Cooper</title>
<date>1979</date>
<contexts>
<context position="18310" citStr="(1979)" startWordPosition="3119" endWordPosition="3119">rrriding principles have guided this work. First was that whatever interpretation or meaning our theory would give to a natural language database query should be as close as possible to the interpretation given to database queries in, say, the relational algebra or calculus. This meant that the interpretation of a query should somehow encompass its answer as represented in the underlying data base. Second, the theory should make sense computationally. This meant taking into account what had already been learned about parsing strategies for Montague Grammars (Friedman and Warren (1978), Warren (1979), Landsbergen (1981)), as well as what database theory had to say about the semantics of the modeled enterprise. These principles motivate certain systematic simplifications to the PTQ translations from English to logic, wherever these are suggested by the simplified view of the semantics of the enterprise provided by the database model. Moreover, since we are not attempting to develop a semantic theory of questions for English in general, these simplifications have been introduced into the translation process as early as possible. We believe that this strategy has the dual effect of making so</context>
<context position="24408" citStr="(1979)" startWordPosition="4133" endWordPosition="4133">ow they must be related. Specifically, the subject must be an entity (y(i)) that is an EMP, the object an IC (x) that is a MGR, and the MGR-IC must be ASsociated with the EMPloyees (AS1). In general the translation of any verb in our theory will so specify the attribute of its subject (or the disjunction of alternatives, if any). The translation of a TV will further specify the attribute(s) of its direct object, and of a DTV of both its objects. Moreover any relationship(s) among these attributes will also be specified. 3.3 THE PROBLEMS OF TENSE AND TIME 3.3.1 INTERVALS OR STATES? David Dowty (1979) presents a discussion of a broad spectrum of semantic and syntactic issues relevant to the understanding of English, and in particular to providing a Montague Semantic analysis of these issues. In the final chapter of this book he formalizes many of the ideas he has discussed by defining a Montague fragment of English that includes such features as temporal adverbs, dative-taking verbs, a theory of word formation, and a treatment of several compound tense structures. In order to provide a semantics for this expansion of the PTQ fragment Dowty argues for the necessity of several significant ex</context>
<context position="35912" citStr="(1977, 1979)" startWordPosition="5973" endWordPosition="5974">anguage questions as well. In what seems to be his only published remark on the issue of questions, he says: &amp;quot;In connection with imperatives and interrogatives truth and entailment conditions are of course inappropriate, and would be replaced by fulfillment conditions and a characterization of the semantic content of a correct answer&amp;quot; (Montague 1973). Perhaps inspired by this comment, a number of researchers have been investigating ways to incorporate a formal account of the syntax and semantics of questions within the framework of Montague Semantics. Hamblin (1973), Karttunen (1977), Bennett (1977, 1979), Hausser and Zaefferer (1978), and Belnap (1982) are perhaps the most important of these investigations, and we will discuss their work in relation to ours in the following section. Many of the aspects of our proposal have been adapted from or influenced by the work of these researchers. Others not working within the MS framework have also made important contributions to our understanding of the issues involved. Approaching this issue from an entirely different perspective, researchers in artificial intelligence (AI) have over the years developed and implemented automatic question-answering t</context>
<context position="44670" citStr="(1977, 1979)" startWordPosition="7389" endWordPosition="7390">h-questions and ultimately adopt one as our solution. We will see, however, in the course of this presentation, that there are considerable technical difficulties in defining the semantics in such a way as to get it all to come out right for both single and multiple wh-questions. The solution that we adopt, involving the addition of a formally specified pragmatics for the fragment, does have this property in addition to meeting our other criteria; moreover, the simplicity of our solution, as contrasted with the considerable complexity in other proposals for a question semantics, e.g., Bennett (1977, 1979) and Hausser and Zaefferer (1978), makes it especially attractive. However, it is clear that many researchers have found the same kinds of difficulties in extending Montague&apos;s work in the direction of interpreting questions, and that further work in this area is needed. We hope that our proposal to treat the answering of a question as a component of a formally specified pragmatics of the language, apart from its semantics, is a step in the proper direction. 3.5 THE QE-III THEORY OF QUESTIONS 3.5.1 INTRODUCTION We first present a general view of the substance of our theory of the interpretation</context>
<context position="64434" citStr="(1977, 1979)" startWordPosition="10631" endWordPosition="10632">mas for their substitution) requires the same technique for each of the tense rules, and for each of the tense rules with time adverbials, and for each of the when-question rules, the rules for when-questions with tenses, for when-questions with tenses and time adverbials, etc. In other words, accepting a solution that types all questions differently depending upon what they ask for forces the inclusion of rule schemas for all of the other semantic functions that in a simple theory would operate only on one type, the type given to sentences. (Later we will discuss how the solutions of Bennett (1977, 1979), Belnap (1982), and of Hausser and Zaefferer (1978) entail a similar rippling effect of complexity throughout the rest of the semantic theory already developed for declarative sentences.) For an example of this effect in the theory under consideration, consider what the rule for adding past tense to a sentence would look like. (Recall our arguments for the necessity of treating tense as a property of the entire sentence.) Such a rule would have to be of the form Pa + -ED = =&gt; Qa, where a could be the category declarative sentence (type t), 1-term question (type &lt;e,t&gt;), 2-term question (type &lt;</context>
<context position="86189" citStr="(1977, 1979)" startWordPosition="14280" endWordPosition="14281">or sets of propositions, but it seems that even before the choice of just what questions denote was made, this &amp;quot;single semantics&amp;quot; viewpoint had been adopted. The other, as we have already pointed out, is that some account of the answer(s) to a question should be included at least as a component of its semantics. When combined with other factors these two biases have led to somewhat different results. Thus Hamblin (1973) suggests that a question denotes the set of all &amp;quot;propositions that count as answers to it&amp;quot;; Karttunen (1977), &amp;quot;the set of propositions expressed by[its] true answers&amp;quot;; Bennett (1977, 1979) and Belnap (1982), who worked with Bennett on the theory, &amp;quot;sets of open propositions:functions from sequences of individuals to propositions.&amp;quot; 3.6.2 KARTTUNEN As we have said, Karttunen (1977) presents an analysis of the semantics of questions that falls within the single semantics tradition. (Hamblin (1973) earlier proposed a treatment similar to Karttunen&apos;s, but his theory was not worked out in as much detail.) In Karttunen&apos;s theory, for example, the question &amp;quot;Who manages John?&amp;quot; would roughly be translated as: Ap3x[p(i) A p = Ai [manage&apos; (i)(x)(i) ,John]) . Semantically, this expression, wh</context>
<context position="90588" citStr="(1977, 1979)" startWordPosition="14996" endWordPosition="14997">Querying of Historical Databases (&amp;quot;Mary and Susan&amp;quot; and &amp;quot;Bill and Susan&amp;quot;), as well as the relations in the database that express the same information.5 understand it, we provide the following table of the types of the variables used. Variable symbols Type of variable symbol P &lt;e,t&gt; : sets of individuals r,s &lt;n,e&gt; : sequences of individuals 0 &lt;&lt;n,e&gt;,&lt;s,t&gt;&gt; : open propositions Qi Q2 Mary Bill Susan Susan As noted earlier, Bennett discussed the issue of the logic of questions in two separate papers, and collaborated with Belnap in the development. Their theory is presented cumulatively in Bennett (1977, 1979) and Belnap (1982). Motivated again by the goal of a single semantics, and even more strongly by a desire to account for the individuals that answer the question, Belnap and Bennett develop a theory that incorporates sequences of individuals into the model theory. Thus a question like &amp;quot;Whom does John love?&amp;quot; is treated as denoting a set of functions from sequences of individuals to propositions. Essentially all and only those sequences that close the open proposition &amp;quot;John loves [it-ACC-O]&amp;quot; and make it true are included in this denotation. What this is tantamount to is incorporating the standar</context>
<context position="103239" citStr="(1979)" startWordPosition="17045" endWordPosition="17045"> appropriate personal pronoun upon substitution of a term. We have expanded this technique somewhat, using variables of the form [it-CASE-i] where CASE ranges over {NOM,DAT,ACC} and i over the natural numbers. 3. Rule S9 for combining a sentence adverbial (&amp;quot;Necessarily&amp;quot;) with a sentence, has been eliminated. This is because the only sentence adverbials in QE-III are time adverbials, which are brought in together with the tense marker in rules S104—S106. 4. It is well know that there are problems with the PTQ treatment of conjunction and disjunction of terms and IVs (see discussion in Friedman (1979) and Bennett (1974)). While Friedman&apos;s bracketing solution is ultimately more acceptable (both by virtue of its generality and, of particular interest, its natural correspondence to a LISP implementation), we have for simplicity of presentation adopted Bennett&apos;s simple solution of marking all basic verbs with a # marker, which is removed when the verb is ultimately tensed. (We choose this solution because the points we wish to make have only to do with the verbs, and are easily understood with this technique. For ease of understanding the translations to follow, the following table shows the t</context>
<context position="106677" citStr="(1979)" startWordPosition="17621" endWordPosition="17621"> Mary&amp;quot;. Second, Rule S104 is new. It takes an untensed sentence as input and gives a (present) tensed sentence as output. Thus we have characterized tense as a property not of verbs, but of clauses, although this property in English is realized by the inflection of the main verb of the clause. The importance of this characterization will be made clearer when we consider the interaction of tense with interrogative sentences. This method of introducing tenses into a sentence obviates the need for undoing the English verb inflections that would be required by a method (such as in PTQ or in Dowty (1979) that always introduced present tense first, subject to possible subsequent modifications. Dowty (1979) makes a similar point—though still in terms of introducing the tense via a SUBJ + PRED rule—but does not incorporate the idea into the fragment presented there. In a number of the PTQ rules Montague makes use of the auxiliary notions of the gender of a CN or a T, and the third-person singular form of a verb. These notions are never defined with the same rigor that Montague demanded of other characteristics of his logic and grammar, presumably because he felt they were obvious and uninteresti</context>
<context position="109542" citStr="(1979)" startWordPosition="18104" endWordPosition="18104"> of the same type as in PTQ, but they are analyzed in terms of the database schema. 4.3 TEMPORAL REFERENCE IN QE-III In addition to its indication by means of the tense system, temporal reference in English is also indicated by certain time adverbials (today, last year, . . .) and also by prepositional phrases (in 1978, on Monday . . .). Care must be taken in order to analyze properly the semantics of sentences that involve an interaction between tenses and these other temporal indicators. They cannot be applied sequentially as operators to a clause, or the semantics will be incorrect. (Dowty (1979) makes the same observation.) The following derivation for 4-2. Peter earned 25K in 1978. illustrates this aspect of QE-III. Peter earned 25K in 1978 S108 in 1978 S113 Peter #earn 25K S4 / \ (derived as in Example 4-1) in 1978 This example illustrates Rule S108, which simultaneously adds a tense (past) and a time adverbial, and S113, which forms a temporal prepositional phrase. The pragmatic interpretation correctly indicates that there is some state in the past that is also in the set of states 1978 at which the present-tense sentence &amp;quot;Peter earns 25K is true&amp;quot;: 3i13y[1978&apos;(i1) A [i1 &lt; now] A </context>
</contexts>
<marker>1979</marker>
<rawString>3. The &amp;quot;such that&amp;quot; construction for heading relative clauses is a syntactic holdover from the PTQ fragment, which, because our concern is primarily semantic, we have not attempted to replace with a more sophisticated treatment. For a treatment of more usual English relative clauses, the reader is referred to Cooper (1979).</rawString>
</citation>
<citation valid="false">
<title>Although David Warren suggests considering the following sort of exchange:</title>
<marker></marker>
<rawString>4. Although David Warren suggests considering the following sort of exchange:</rawString>
</citation>
<citation valid="false">
<title>There are several Fire Island ferries each day.&amp;quot; [HE]: &amp;quot;Oh, really! When do they arrive and when do they leave?&amp;quot; It is natural to interpret this as a request for the set of ordered pairs representing the arrival and departure times of particular ferry runs. Other sorts of multiple when-questions that ask for a range (&amp;quot;Between when and when . . .&amp;quot;) seem to be of this same type.</title>
<marker></marker>
<rawString>[SHE]: &amp;quot;There are several Fire Island ferries each day.&amp;quot; [HE]: &amp;quot;Oh, really! When do they arrive and when do they leave?&amp;quot; It is natural to interpret this as a request for the set of ordered pairs &lt;t1,t2&gt; representing the arrival and departure times of particular ferry runs. Other sorts of multiple when-questions that ask for a range (&amp;quot;Between when and when . . .&amp;quot;) seem to be of this same type.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tichy</author>
</authors>
<title>makes many of the same points that we make here regarding the proposition idea.</title>
<date>1978</date>
<marker>Tichy, 1978</marker>
<rawString>5. Tichy (1978) makes many of the same points that we make here regarding the proposition idea.</rawString>
</citation>
<citation valid="false">
<title>Actually their syntax does not cover direct questions, and so this is really their treatment of &amp;quot;John loves him&amp;quot; in the category of Basic Question; it seems clear, however, that they intend the semantics of the corresponding direct question to be the same. 7. REL-3 indicates that there is a tri-ary relationship among the indicated three individuals.</title>
<marker></marker>
<rawString>6. Actually their syntax does not cover direct questions, and so this is really their treatment of &amp;quot;John loves him&amp;quot; in the category of Basic Question; it seems clear, however, that they intend the semantics of the corresponding direct question to be the same. 7. REL-3 indicates that there is a tri-ary relationship among the indicated three individuals.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>