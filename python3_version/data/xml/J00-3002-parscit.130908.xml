<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.978188">
Incremental Processing and Acceptability
</title>
<author confidence="0.969955">
Glyn Morrill.
</author>
<bodyText confidence="0.908589333333333">
Universitat Politecnica de Catalunya
We describe a left-to-right incremental procedure for the processing of Lambek categorial grammar
by proof net construction. A simple metric of complexity, the profile in time of the number
of unresolved valencies, correctly predicts a wide variety of performance phenomena including
garden pathing, the unacceptability of center embedding, preference for lower attachment, left-
to-right quantifier scope preference, and heavy noun phrase shift.
</bodyText>
<sectionHeader confidence="0.988137" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.997747111111111">
Contemporary linguistics rests on abstractions and idealizations which, however fruit-
ful, should eventually be integrated with human computational performance in lan-
guage use. In this paper we consider the case of language processing on the basis of
Lambek categorial grammar (Lambek 1958). We argue that an incremental procedure of
proof net construction affords an account of various processing phenomena, including
garden pathing, the unacceptability of center embedding, preference for lower attach-
ment, left-to-right quantifier scope preference, and heavy noun phrase shift. We give
examples of each of these phenomena below.
Garden pathing (Bever 1970) is illustrated by the following contrasts:
</bodyText>
<listItem confidence="0.999835166666667">
(1) a. The horse raced past the barn.
b. ?The horse raced past the barn fell.
(2) a. The boat floated down the river.
b. ?The boat floated down the river sank.
(3) a. The dog that knew the cat disappeared.
b. ?The dog that knew the cat disappeared was rescued.
</listItem>
<bodyText confidence="0.9994384">
Typically, although the b sentences are perfectly well formed they are perceived as
being ungrammatical due to a strong tendency to interpret their initial segments as in
the a sentences.
The unacceptability of centre embedding is illustrated by the fact that while the
nested subject relativizations of (4) exhibit little variation in acceptability, the nested
</bodyText>
<footnote confidence="0.582734">
* Departament de Llenguatges i Sistemes Informatics, Modul C 5 - Campus Nord, Jordi Girona Salgado
1-3, E-08034 Barcelona. E-mail: morrill@lsi.upc.es; http://www-lsi.upc.es/—morrill/
</footnote>
<note confidence="0.839497">
C) 2000 Association for Computational Linguistics
Computational Linguistics Volume 26, Number 3
</note>
<bodyText confidence="0.31029">
object relativizations (5) exhibit a severe deterioration in acceptability (Chomsky 1965,
Chap. 1).
</bodyText>
<listItem confidence="0.984387714285714">
(4) a. The dog that chased the cat barked.
b. The dog that chased the cat that saw the rat barked.
c. The dog that chased the cat that saw the rat that ate the cheese barked.
(5) a. The cheese that the rat ate stank.
b. ?The cheese that the rat that the cat saw ate stank.
c. ??The cheese that the rat that the cat that the dog chased saw ate
stank.
</listItem>
<bodyText confidence="0.998093625">
Discussing such center embedding, Johnson (1998) presents the essential idea devel-
oped here, noting that processing overload of dependencies invoked in psycholin-
guistic literature could be rendered in terms of the maximal number of unresolved
dependencies as represented by proof nets.
Kimball (1973, 27) considers sentences such as (6), which are three ways am-
biguous according to the attachment of the adverb. He points out that the lower the
attachment of the adverb, the higher the preference (he calls this relationship Right
Association).
</bodyText>
<listItem confidence="0.635634714285714">
(6) Joe said that Martha believed that Ingrid fell today.
Left-to-right quantifier scope preference is illustrated by:
(7) a. Someone loves everyone.
b. Everyone is loved by someone.
Both sentences exhibit both quantifier scopings:
(8) a. aVy(love y x)
b. Vy3x(love y x)
</listItem>
<bodyText confidence="0.997412666666667">
However, while the dominant reading of (7a) is (8a), that of (7b) is (8b), i.e., the
preference is for the first quantifier to have wider scope. Note that the same effect is
observed when the quantifiers are swapped:
</bodyText>
<listItem confidence="0.9101725">
(9) a. Everyone loves someone.
b. Someone is loved by everyone.
</listItem>
<bodyText confidence="0.997413166666667">
While both sentences in (9) have both quantifier scopings, the preferred readings give
the first quantifier wide scope.
Finally, we will look at heavy noun phrase shift, which is the preference for com-
plex object noun phrases to &amp;quot;shift&amp;quot; to the end of the sentence. Consider the two sen-
tences in (10); the second, in which the &amp;quot;heavy&amp;quot; direct object follows the indirect object,
is more acceptable than the first.
</bodyText>
<page confidence="0.990715">
320
</page>
<note confidence="0.701842">
Morrill Incremental Processing and Acceptability
(10) a. ?John gave the painting that Mary hated to Bill.
b. John gave Bill the painting that Mary hated.
</note>
<bodyText confidence="0.9928835">
We argue that a simple metric of categorial processing complexity explains these
and other performance phenomena.
</bodyText>
<sectionHeader confidence="0.965597" genericHeader="method">
2. Lambek Calculus
</sectionHeader>
<bodyText confidence="0.9998055">
We shall assume some familiarity with Lambek categorial grammar as presented in, for
example, Moortgat (1988, 1997), Morrill (1994), or Carpenter (1998), and limit ourselves
here to reviewing some central technical and computational aspects.
The types, or (category) formulas, of Lambek calculus are freely generated from
a set of primitives by the binary infix connectives &amp;quot;1&amp;quot; (over), &amp;quot; \ &amp;quot; (under) (directional
divisions) and &amp;quot;-&amp;quot; (product). With respect to a semigroup algebra (L, +) (i.e., a set
L closed under an associative binary operation + of adjunction), each formula A is
interpreted as a subset [AJI of L by residuation as follows:
</bodyText>
<equation confidence="0.704849">
(11) [A.B] = E [All &amp; S2 E
[A\B] = {SIVS&apos; E Si-ES E MI}
[B/Al {siVs&apos; Ei[A]l,s+s&apos; E
</equation>
<bodyText confidence="0.990852">
A sequent, F = A, comprises a succedent formula A and an antecedent configuration
F, which is a a finite sequence of formulas.&apos; A sequent is valid if and only if in all inter-
pretations the ordered adjunction of elements inhabiting the antecedent formulas al-
ways yields an element inhabiting the succedent formula. The following Gentzen-style
sequent presentation is sound and complete for this interpretation (Buszkowski 1986,
Dogen 1992), and indeed for free semigroups (Pentus 1994): hence the Lambek calculus
can make an impressive claim to be the logic of concatenation; a parenthetical notation
A (F) represents a configuration containing a distinguished subconfiguration F.
</bodyText>
<figure confidence="0.890976107142857">
F A z(A)=B
(12) a. A = A id A(F) B
F A L(B)=C A, r B
\L \R
b. A (F,A\B) C F A\B
FrzA A(B) C F,A B
/L /R
c. A(BIA,F) C r BIA
F A A B
R
.1, .
d. F,A.B, A C
By way of example, &amp;quot;lifting&amp;quot; A = B/(A B) is generated as follows:
(13) A=A B=B \L
A,A\B B
jR
A BI(A\B)
1 Officially, the antecedent is nonempty, a detail we gloss over.
Cut
321
Computational Linguistics Volume 26, Number 3
And &amp;quot;composition&amp;quot; A \B, B\C = A \C can be derived thus:
(14) B B C C \L
AA B, B\C C
L
A, A\B, B\C C
\R
A\B , B\C A\C
</figure>
<bodyText confidence="0.999377444444444">
Every rule, with the exception of Cut, where the Cut formula A does not appear
in the conclusion, has exactly one connective occurrence less in its premisses than in
its conclusion. Lambek (1958) proved Cut elimination—that every proof has a Cut-
free counterpart—hence a decision procedure for theoremhood is given by backward-
chaining proof search in the Cut-free fragment. The nonatomic instances of the id
axiom are derivable from atomic instances by the rules for the connectives. But even
in the Cut-free atomic-id calculus there is spurious ambiguity: equivalent derivations
differing only in irrelevant rule ordering. For example, composition as above has the
following alternative derivation:
</bodyText>
<figure confidence="0.83528">
(15) AA BB
\L
A, A\B B c=c
A, A\B, B\C C
\R L
A\B , B\C A\C
</figure>
<bodyText confidence="0.996806">
One approach to this problem consists in defining, within the Cut-free atomic-id
space, normal form derivations in which the succession of rule application is regulated
(Konig 1989, Hepple 1990, Hendriks 1993). Each sequent has a distinguished category
formula (underlined) on which rule applications are keyed:
</bodyText>
<equation confidence="0.988695666666667">
(16) a. P=P id
A(A) B
r A A(13) C
\L
A (F , A\B) C
FzzA A(11) C
/L
A (B/A,F) C
A, F B
\R
r A\B
F, A B
/R
F B/A
ArrA F B
</equation>
<bodyText confidence="0.999904454545455">
In the regulated calculus there is no spurious ambiguity, and provided there is
no explicit or implicit antecedent product, i.e., provided .1_, is not needed, r = A is
a theorem of the Lambek calculus iff F = is a theorem of the regulated calculus.
However, apart from the issue regarding .L, there is a general cause for dissatisfaction
with this approach: it assumes the initial presence of the entire sequent to be proved,
i.e., it is in principle nonincrementah on the other hand, allowing incrementality on
the basis of Cut would reinstate with a vengeance the problem of spurious ambigu-
ity, for then what are to be the Cut formulas? Consequently, the sequent approach is
ill-equipped to address the basic asymmetry of language—the asymmetry of its pro-
cessing in time—and has never been forwarded in a model of the kind of processing
phenomena cited in the introduction.
</bodyText>
<page confidence="0.99527">
322
</page>
<note confidence="0.406282">
Morrill Incremental Processing and Acceptability
</note>
<bodyText confidence="0.9959146">
An alternative formulation (Ades and Steedman 1982, Steedman 1997), which
from its inception has emphasized a capacity to produce left-branching, and there-
fore incrementally processable, analyses, is comprised of combinatory schemata such
as the following (together with a Cut rule, feeding one rule application into an-
other):
</bodyText>
<listItem confidence="0.958477666666667">
(17) a. A,A\B B BIA,A B
b. A = (B I A)\B A B I (A\B)
c. A\B,B\C A\C CIB,BIA CIA
</listItem>
<bodyText confidence="0.9997169">
By a result of Zielonka (1981), the Lambek calculus is not axiomatizable by any fi-
nite set of combinatory schemata, so no such combinatory presentation can constitute
the logic of concatenation in the sense of Lambek calculus. Combinatory categorial
grammar does not concern itself with the capture of all (or only) the concatenatively
valid combinatory schemata, but rather with incrementality, for example, on a shift-
reduce design. An approach (also based on regulation of the succession of rule ap-
plication) to the associated problem of spurious ambiguity is given in Hepple and
Morrill (1989) but again, to our knowledge, there is no predictive relation between
incremental combinatory processing and the kind of processing phenomena cited in
the introduction.
</bodyText>
<sectionHeader confidence="0.720438" genericHeader="method">
3. Proof Nets
</sectionHeader>
<bodyText confidence="0.9980024">
Lambek categorial derivations are often presented in the style of natural deduction
or sequent calculus. Here we are concerned with categorial proof nets (Roorda 1991)
as the fundamental structures of proof in categorial logic, in the same sense that lin-
ear proof nets were originally introduced by Girard (1987) as the fundamental struc-
tures of proof in linear logic. (Cut-free) proof nets exhibit no spurious ambiguity and
play the role in categorial grammar that parse trees play in phrase structure gram-
mar.
Surveys and articles on the topic include Lamarche and Retord (1996), de Groote
and Retord (1996), and Morrill (1999). Still, at the risk of proceeding at a slightly slower
pace, we aim nonetheless to include here enough details to make the present paper
self-contained.
A polar category formula is a Lambek categorial type labeled with input (&apos;) or
output (°) polarity. A polar category formula tree is a binary ordered tree in which
the leaves are labeled with polar atoms (literals) and each local tree is one of the
following (logical) links:
</bodyText>
<figure confidence="0.613859285714286">
A° ii 13* B° A&apos; i
(18) a. A\ 13&apos; A\B°
B• A°.. A&apos; B°.
b. B I A B I A° 1
A° B°B° A°
ii
c. A .B• i A-B°
</figure>
<footnote confidence="0.371739">
Without polarities, a formula tree is a kind of formation tree of the formula at its root:
</footnote>
<page confidence="0.984806">
323
</page>
<note confidence="0.436973">
Computational Linguistics Volume 26, Number 3
</note>
<bodyText confidence="0.999538333333334">
daughters are labeled with the immediate subformulas of their mothers. The polar-
ities indicate sequent sidedness, input for antecedent and output for succedent; the
polarity propagation follows the sidedness of subformulas in the sequent rules: in the
antecedent (input) rule for A\B the subformula A goes in a succedent (output) and the
subformula B goes in an antecedent (input); in the succedent (output) rule for A\B the
subformula A goes in an antecedent (input) and the subformula B goes in a succedent
(output); etc. The labels i and ii indicate whether the corresponding sequent rule is
unary or binary. Note that in the output links the order of the subformulas is switched;
this corresponds to a cyclic reading of sequents: the succedent type is adjacent to the
first antecedent type.
A proof frame is a finite sequence of polar category formula trees, exactly one
of which has a root of output polarity (corresponding to the unique succedent of
sequents).
An axiom linking on a set of literal labeled leaves is a partitioning of the set
into pairs of complementary leaves that is planar in its ordering, i.e., there are no
two pairs {Li, L3}, {1,2, L4} such that L1 &lt; L2 &lt; L3 &lt; L4. Geometrically, planarity
means that where the leaves are ordered on a line, paired leaves can be connected in
the half plane without crossing. Axiom links correspond to id instances in a sequent
proof.
A proof structure is a proof frame together with an axiom linking on its leaves. A
proof net is a proof structure in which every elementary (i.e., visiting vertices at most
once) cycle crosses the edges of some i-link.2 Geometrically, an elementary cycle is the
perimeter of a face or cluster of faces in a planar proof structure. There is a proof net
with roots A° ,A1,. ,A&apos; iff A1, ,A, A is a valid sequent.
</bodyText>
<sectionHeader confidence="0.81327" genericHeader="method">
4. Incremental Processing Load and Acceptability
</sectionHeader>
<bodyText confidence="0.942192">
Let us assume the following lexical assignments:
</bodyText>
<equation confidence="0.950758545454546">
(19)
barn — barn
:= CN
horse — horse
:= CN
past AxAyAz(past x (y z))
((N\St)\(N\St))/N
raced — race
:= N\S+
the — the
:= N/CN
</equation>
<bodyText confidence="0.766434555555556">
The feature + on S marks the projection of a tensed verb form; a verb phrase modified
by past need not be tensed. Let us consider the incremental processing of (1a) as proof
2 This criterion, adapted from that of Lecomte and Retore (1995), derives from Girard&apos;s (1987) long trip
condition, which is an involved mathematical result. Danos and Regnier (1989) express it in terms of
acyclicity and connectivity of certain subgraphs. Intuitively, acyclicity assures that the subformulas of
ii-links (binary rules) occur in different subproofs, whereas connectivity assures that the subformulas of
i-links (unary rules) occur in the same subproofs (attributed to Jean Gallier by Philippe de Groote, p.c.).
However the single-succedent (intuitionistic) nature of Cut-free categorial proofs in fact renders the
connectivity requirement redundant, hence we have just an acyclicity test.
</bodyText>
<page confidence="0.987884">
324
</page>
<note confidence="0.432884">
Morrill Incremental Processing and Acceptability
</note>
<bodyText confidence="0.998833333333333">
net construction.3 In the first case, we suppose that one initially expects some target
category, perhaps (though not necessarily) S. This &apos;principle of expectation&apos; seems a
reasonable or obvious principle of communication; as we shall see, it turns out to
be technically critical. After perception of the word the there is the following partial
proof net (for simplicity we omit features, included in lexical entries, from proof nets
themselves):
</bodyText>
<equation confidence="0.963904">
N• ii CN°
\ /
s° N/CN•
</equation>
<bodyText confidence="0.808226666666667">
the
Here there are three unmatched valencies/unresolved dependencies; no axiom links
can yet be placed, but after horse we can build:
</bodyText>
<equation confidence="0.966563333333333">
— —
I
I
N&apos; ii CN°
\
S° N/CN• CM&apos;
</equation>
<bodyText confidence="0.899563333333333">
the horse
Now there are only two unmatched valencies. After raced we have, on the correct
analysis, the following:
</bodyText>
<table confidence="0.481197375">
- —
1 CN•
horse
s° I N° ii S•
N• ii CN° \ /
\ N\S•
N/CN• raced
the
</table>
<bodyText confidence="0.971936">
Note that linking the Ns is possible, but we are interested in the history of
the correct analysis, and in that, the verb valencies are matched by the adverb that
</bodyText>
<footnote confidence="0.968297333333333">
3 The procedure is similar in spirit to that in the appendix of Ades and Steedman (1982), but we perform
&amp;quot;reductions&amp;quot; by axiom links on complementary literal pairs rather than by combinatory schemata on
category formulas.
</footnote>
<page confidence="0.994906">
325
</page>
<figure confidence="0.734636625">
Computational Linguistics Volume 26, Number 3
follows (henceforth we indicate only the principal connective of a mother node):
S° i N• N° ii S.
\ \
N
N ii CN° N° ii S• \ ii N°
CN•
the horse raced past
</figure>
<bodyText confidence="0.960002">
Observe that a cycle is created, but as required it crosses the edges of an i-link. At the
penultimate step we have:
</bodyText>
<equation confidence="0.988082875">
I I I
I I I
S° i N• N° ii S
— — \ ii \
1 1 1
1 1 1
N ii CN° N° ii S \ ii N° N• ii CN°
S° / CN&amp;quot; \ i
</equation>
<bodyText confidence="0.993647428571429">
the horse raced past the
The final proof net analysis is given in Figure 1.
The semantics associated with a categorial proof net, i.e., the proof as a lambda
term (intuitionistic natural deduction proof, under the Curry-Howard correspondence)
is extracted by associating a distinct index with each output division node and travel-
ing as follows, starting by going up at the unique output root (de Groote and Retore
1996):
</bodyText>
<listItem confidence="0.990463">
(25) • traveling up at the mother of an output division link, perform
the lambda abstraction with respect to the associated index of
the result of traveling up at the daughter of output polarity;
• traveling up at the mother of an output product link, form the
ordered pair of the result of traveling up at the right daughter
(first component) and the left daughter (second component);
</listItem>
<page confidence="0.989209">
326
</page>
<figure confidence="0.76395575">
Morrill Incremental Processing and Acceptability
i N• N° ii S•
I — —
I I
I I
N ii CN° N° ii S \ ii N° N ii CN°
CN• CN•
the horse raced past the barn
</figure>
<figureCaption confidence="0.983166">
Figure 1
</figureCaption>
<bodyText confidence="0.371563">
Proof net analysis of (la) the horse raced past the barn.
</bodyText>
<listItem confidence="0.99848325">
• traveling up at one end of an axiom link, continue down at the
other end;
• traveling down at an (input) daughter of an input division link,
perform the functional application of the result of traveling
down at the mother to the result of traveling up at the other
(output) daughter;
• traveling down at the left (respectively, right) daughter of an
input product link, take the first (respectively, second) projection
of the result of traveling down at the mother;
• traveling down at the (input) daughter of an output division
link, return the associated index;
• traveling down at a root, return the associated lexical semantics.
</listItem>
<bodyText confidence="0.917711">
Thus for our example we obtain (26a), which is logically equivalent to (26b).
</bodyText>
<equation confidence="0.423003">
(26) a. (AxAyAz(past x (y z)) (the barn) A1(race 1) (the horse))
b. (past (the barn) (race (the horse)))
</equation>
<bodyText confidence="0.999448666666667">
The analysis of (lb) is less straightforward. Whereas in (la) raced expresses a one-
place predication (&amp;quot;go quickly&amp;quot;), in (lb) it expresses a two-place predication (there
was some agent racing the horse); horse is modified by an agentless passive participle,
but the adverbial past the barn is modifying race. Within the confines of the Lambek
calculus, the characterization we offer assumes the lexical assignment to the passive
participle given in the following:4
</bodyText>
<footnote confidence="0.960601">
4 In general, grammar requires the expressivity of more powerful categorial logics than just Lambek
calculus; however, so far as we are aware, the characterizations we offer within the Lambek calculus
bear the same properties with regard to our processing considerations as their more sophisticated
categorial logic refinements, because the latter are principally concerned with generalizations of word
order, whereas the semantic dependencies on which our complexity metric depends remain the same.
</footnote>
<page confidence="0.984398">
327
</page>
<figure confidence="0.983084636363636">
Computational Linguistics Volume 26, Number 3
CN° C&apos;N&apos; N• I S• S° N• N°
/ /
N
\ --
1 I I
V
N• CN N• CAN°
I
Se I CN • CI,1•
the horse raced past the barn fell
</figure>
<figureCaption confidence="0.9174945">
Figure 2
Proof net analysis of (1b) the horse raced past the barn fell.
</figureCaption>
<equation confidence="0.702051">
(27) fell fall
N\S+
raced — (Ax)yAzRy z) A 3w(x z w)], race2)
:= ((CN\CN)/(NVN\S—)))•(NVN\S—))
</equation>
<bodyText confidence="0.870423333333333">
Here raced is classified as the product of an untensed transitive verbal type, which can
be modified by the adverbial past the barn by composition, and an adnominalizer of
this transitive verbal type. According to this, (lb) has the proof net analysis given in
</bodyText>
<figureCaption confidence="0.957907">
Figure 2. The semantics extracted is (28a), equivalent to (28b)
</figureCaption>
<figure confidence="0.632547">
(28) a. (fall (the (71-1(Ax)yAz[(y z) A 3w(x z w)],race2) A29A30
(Au).1vAw(past u (v w)) (the barn) A41((
(71-2(ApAsAt[(s t) A 3q(p t q)],race2) 29 41) 30) horse)))
b. (fall (the A8Khorse 8) A 7(past (the barn) (race2 8 7))]))
</figure>
<bodyText confidence="0.999608909090909">
Let us assign to each proof net analysis a complexity profile that indicates, before
and after each word, the number of unmatched literals, i.e., unresolved valencies or
dependencies, under process at that point. This is a measure of the course of memory
load in optimal incremental processing. We are not concerned here with resolution of
lexical ambiguity or serial backtracking: we are supposing sufficient resources that the
nondeterminism of selection of lexical entries and their parallel consideration is not
the critical burden. Rather, the question is: which among parallel competing analyses
places the least load on memory?
Since entropy degrades the structure of memory, it requires more energy to pursue
an analysis that is high cost in memory than to pursue one that is low cost. From these
simple economic considerations we derive our main claim:
</bodyText>
<listItem confidence="0.660814">
(29) Principle of Acceptability
Acceptability is inversely proportional to the sum in time of the memory
load of unresolved valencies.
</listItem>
<bodyText confidence="0.826958">
If other factors are constant, the principle makes a quantitative prediction. We can
distinguish two cases: synonymy and ambiguity. In the case of synonymy, semantics is
constant. It is then predicted that amongst synonymous forms of expression, the lower
</bodyText>
<page confidence="0.975456">
328
</page>
<figure confidence="0.981195875">
Morrill Incremental Processing and Acceptability
S. CN.
\ /
&apos; -
N. \ /
\,/ \ I/
\ /
the dog that chased that
</figure>
<figureCaption confidence="0.6776435">
Figure 3
Proof net analysis of (4b) the dog that chased the cat that saw the rat barked.
</figureCaption>
<bodyText confidence="0.997862857142857">
the complexity curve, the higher the preference for the form of expression. In the case
of ambiguity, prosodics is constant. It is then predicted that amongst the readings of an
ambiguous expression, the lower the complexity curve, the more dominant the reading.
The complexity profile is easily read off a completed proof net: the complexity
between two words is the number of axiom links bridging rightwards (forwards in
time) at that point. Thus for (1a) and (1b) analyzed in Figures 1 and 2, the complexity
profiles are as follows:
</bodyText>
<figure confidence="0.986241">
(30) 6
5
4 a
3 ab b b
2 a
1 ab a a
0 a b
a. the horse raced past the barn
b. the horse raced past the barn fell
</figure>
<bodyText confidence="0.998584571428571">
We see that after the first two words the complexity of the locally ambiguous initial
segment of (1b) is consistently higher than that of its garden path (1a). The areas of
the a and b curves are 12 and 22 respectively, predicting that in (1b) the less costly
but incorrect analysis could be salient, as indeed it is.
Johnson (1998) considers center embedding for subject and object relativization
from a similar point of view. We assume here the relative pronoun lexical assignments
shown in (31).5
</bodyText>
<table confidence="0.66825475">
(31) that - AxAyAz[(y Z) A (X z)]
:= (CN\CN)/(N\S+)
that - AxAyAz[(y z) A (x z)]
:= (CN CN)/ (S+ /N)
</table>
<bodyText confidence="0.933347">
The proof net analysis of sentence (4b) is shown in Figure 3, and that of sentence (5b)
is shown in Figure 4. Let us compare the complexities:
</bodyText>
<figure confidence="0.98391004">
(32) 9
8
7
6
5
4 ab ab a a
3 ab a a a a
2 ab
1 ab
0 ab
the dog that chased the cat that saw the rat barked
the cheese that the rat that the cat saw ate stank
5 For better linguistic treatment not affecting the point at hand, see Morrill (1994, Chap. 8).
\
the barked
329
Computational Linguistics Volume 26, Number 3
S°
I I ;
CN ° CN• N S CN ° CN • N• S° ; — N° S• ; N° • ;
\ \ N CN ° \ \ N. CN ° \ N° \ N° N°
/ \ / I
/ \ / I \ / \ / \ /
/ C&apos;• / / CN• / . \
the cheese that the rat that the cat SO.W ate stank
</figure>
<figureCaption confidence="0.8117935">
Figure 4
Proof net analysis of (5b) the cheese that the rat that the cat saw ate stank.
</figureCaption>
<bodyText confidence="0.999639833333334">
The profile of (5b) is higher; indeed it rises above 8, thus reaching what is usually taken
to be the limit of short-term memory. Johnson attributes the increasing ill-formedness
of centre embedded constructions to the number of incomplete dependencies at the
&amp;quot;maximal cut&amp;quot; of a proof net. This almost corresponds to the maximum height of
a complexity profile here, except Johnson includes no target category, whereas we
will argue in relation to quantifier scope preference that this is critical. However,
we also differ from Johnson in attributing relative acceptability to the area under the
complexity curve, not only its maximal height. This is because we believe acceptability
is to be explained in terms of the energy required to maintain processes in memory
over time, and not just in terms of peak memory load. Finally, it happens that our
proposal solves a problem encountered by Johnson. Gibson and Thomas (1996) observe
that (33a) is easier to comprehend than (33b).
</bodyText>
<listItem confidence="0.7277685">
(33) a. The chance that the nurse who the doctor supervised lost the reports
bothered the intern.
b. ?The intern who the chance that the doctor lost the reports bothered
supervised the nurse.
</listItem>
<bodyText confidence="0.999042666666667">
Johnson notes that his proposal does not capture this difference since both sentences
have the same size maximal cut. Under our account, on the other hand, it is the com-
plexity curves as a whole that account for acceptability. In these sentences, although
the height is the same, the complexity curves are not: the area of (33a) is less than that
of (33b).6 Thus, whereas Johnson must look to other factors to explain this difference,
our account makes the correct prediction.
</bodyText>
<footnote confidence="0.8349208">
6 To save space we exclude the proof nets; the curves are:
8 ab ab
7
6 b ab ab b b
5 a
4 b b a
3 ab a a a a
2 ab
1 ab ab ab
0 ab
</footnote>
<page confidence="0.969823">
330
</page>
<figure confidence="0.970494368421053">
Morrill Incremental Processing and Acceptability
I-1 I I SI) / CP, CP I I
CP, CP N, (N\ I
/\ (NI \ SI) \ (N \ )
Joe said that Martha believed that Ingrid fell today
Joe said
I —
I I I 1 1-1
S. N. (IN \ S) / CP, CP
— —
I I 1—I
S. N. (N \ / CP. CP /
1
1 1 I I
N. N \ S. (N \ S)
CP, CP — I (N \
N, N
that Martha believed that Ingrid fell today
Joe said that Martha believed that Ingrid fell today
</figure>
<figureCaption confidence="0.750939333333334">
Figure 5
Proof net analyses for (34) Joe said that Martha believed that Ingrid fell today, with lowest (top),
middle (center), and highest (bottom) attachment of the adverb today.
</figureCaption>
<sectionHeader confidence="0.812376" genericHeader="method">
5. Preferred Readings
</sectionHeader>
<bodyText confidence="0.99994375">
The examples so far involve comparison of different expressions, having many differ-
ences to which their relative acceptabilities could be attributed. More factors would
be held constant by comparing alternative readings of an ambiguous expression, and
most appropriately of all, a structurally ambiguous expression, where there is no lexi-
cal alternation. Consider the ambiguity that arises in a sentence such as (34) (repeated
from (6)) from the possibility of attaching the adverb at different syntactic levels. As
we saw in the introduction, the lower the attachment of the adverb in such sentences,
the higher the preference (Kimball 1973, 27).
</bodyText>
<listItem confidence="0.547729">
(34) Joe said that Martha believed that Ingrid fell today.
</listItem>
<bodyText confidence="0.9997734">
In Figure 5 we give the analyses for the lowest, the middle, and the highest attach-
ments. We now abbreviate proof nets by flattening formula trees into their linear rep-
resentations (since this conceals the order switching of output links, the notation belies
the underlying planarity, but the portrayal of word-by-word complexity is unaltered).
Accordingly, the complexity profiles are:
</bodyText>
<footnote confidence="0.670815">
(35) 6 be
5 c bc bc
4 abc
3
2 abc ab a
1 abc ab ab a a
abc
b. Joe said that Martha believed that Ingrid fell lowest attachment
today middle attachment
highest attachment
</footnote>
<page confidence="0.930091">
331
</page>
<figure confidence="0.937766625">
Computational Linguistics Volume 26, Number 3
i I I I
I
I — — I -- I — —
I
I I I — —
I I
I I I I I I I I I I I
N, N / ON. ON, (CN \ CN) / (N \ S), (N \ S) / N, N. N \ (N / ON), ON
the book that shocked Mary title
— —I I -- — —
I I
I
I I I
N. N / ON. ON. (ON \ ON) / (N \ S), (N \ S) / N. N, N \ ( / CN), ON
the book that shocked Mary title
</figure>
<figureCaption confidence="0.812115666666667">
Figure 6
Proof net analysis for the sensical (top) and nonsensical (bottom) interpretations of (36) the
book that shocked Mary&apos;s title.
</figureCaption>
<bodyText confidence="0.71900675">
The same effect occurs strongly in (36), where the preferred reading is the one
given by the lowest attachment, even though that one is the nonsensical reading.
(36) the book that shocked Mary&apos;s title
The analyses are given in Figure 6. The complexities are thus:
</bodyText>
<figure confidence="0.992988285714286">
4 a a
3 a a
2 b b ab
1 ab b b ab
ab
the book that shocked Mary title sensical
nonsensical
</figure>
<subsectionHeader confidence="0.474183">
6. Left-to-right Quantifier Scope Preference
</subsectionHeader>
<bodyText confidence="0.996007666666667">
Let us consider now another instance of ambiguity: quantifier scope preference. A
rudimentary account of sentence-peripheral quantifier phrase scoping is obtained in
Lambek calculus by means of lexical assignments such as the following:7
</bodyText>
<equation confidence="0.949499875">
(38) everyone - AxVy(x y)
St/(N\St)
everyone - AxVy(x y)
(St/N)\St
someone - Ax]y(x y)
St/(N\St)
someone - Ax]y(x y)
(St/N)\St
</equation>
<bodyText confidence="0.9932955">
Given these assignments, one analysis of (7a) is that given in Figure 7. This is the
subject wide scope analysis: its extracted and simplified semantics are as in (39).
</bodyText>
<footnote confidence="0.8238585">
7 For a more refined treatment (not requiring multiple lexical categorizations), for which the results of
this paper stand unchanged, see Morrill (1994, Chap. 4).
</footnote>
<page confidence="0.988824">
332
</page>
<figure confidence="0.760945111111111">
Morrill Incremental Processing and Acceptability
_
I I 1 I I I
I I I I I
I
— — S° N• N° S• N• S°
I
s• \ \ N° / S•
So someone loves everyone
</figure>
<figureCaption confidence="0.7746775">
Figure 7
Proof net analysis for the subject wide scope reading of (7a) someone loves everyone (V).
</figureCaption>
<figure confidence="0.944495153846154">
(39) a. (Ax]y(x y) A17xby(x y) A2(love 2 1)))
b. 3xVy(love y x)
A second analysis is that given in Figure 8. This is the object wide scope analysis: its
extracted and simplified semantics are as in (40).
(40) a. PaVy(x y) A2(AxAy(x y) (love 2 1)))
b. Vya(love y x)
Let us compare the complexity profiles for the two readings:
(41) 4
3 ab
2 a
1 ab
0 ab
a. 3V (subject wide scope, Figure 7)
b. someone loves everyone
V3 (object wide scope, Figure 8)
1 1
i 1
_ _
1 I I I I I
I I I I I
I
S° N• N° S• N. S°
I \ /
s• \ \ N° i S•
s i
someone loves everyone
</figure>
<figureCaption confidence="0.656435">
Figure 8
Proof net analysis for the object wide scope reading of (7a) someone loves everyone (Va).
</figureCaption>
<page confidence="0.987815">
333
</page>
<figure confidence="0.3470741875">
Computational Linguistics Volume 26, Number 3
&apos; S. IN&apos;
1 I II I I I
I , I : \ / 1 : :
I I 1 I I
1 I CN. CN. \ N 1 N. S&apos; S° N&apos; N S1
I I
I \/ \/ 1 \/ \/ \/ I
I I I
CN. CN. \ \ N° \ \ \
1 — 1
I 1
I so \ \ \ N° / S&apos;
Z \ /
/ \
eVeryone loved by sonleone
</figure>
<figureCaption confidence="0.7434975">
Figure 9
Proof net analysis for the subject wide scope reading of (7b) everyone is loved by someone (V3).
</figureCaption>
<bodyText confidence="0.9996280625">
At the only point of difference, the subject wide scope reading, the preferred reading,
has the lower complexity
We emphasize that some target category is expected at the start of language pro-
cessing. Lambek proof nets have the property that they can be kept planar under
any cyclic permutation of the roots; one can view them as a circular list and require
planarity on the interior (or exterior) of a disc. The same proof net would then have
different complexity profiles depending on whether one set in axiom links clockwise
or counterclockwise. Language processing, though, takes place in time, which is not
cyclic, so we order the roots along a line, starting, according to the principle of ex-
pectation, with the target category. As a reviewer has pointed out, if, for example, the
target category were placed at the end of the time line, then the predictions of the
relative acceptabilities in (41) would be reversed!
For the passive (7b), let there be assignments as in (42). The preposition by projects
an agentive adverbial phrase; is is a functor over (post)nominal modifiers (the man
outside, John is outside, etc.) and passive loved is treated exactly like passive raced
in (27).
</bodyText>
<equation confidence="0.9008265">
(42) by - AxAyAzRz = x] A (y z)]
:= ((N\S—)\(N\S—))/N
is - AxAy(x Az[z = y] y)
(N\S+)/(CN\CN)
loved — (Ax)yAzRy z) A ]w(x z w)], love)
((CN\CN)/(NVN\S—)))•(NVN\S—))
</equation>
<bodyText confidence="0.729839">
A V] analysis of (7b) is given in Figure 9. This has semantics, after some simplifi-
cation, as in (43), which is equivalent to (40).
(43) V163937[[9 = 7] A (love 16 9)]
An 3V analysis of (7b) is given in Figure 10. This has semantics, after some sim-
plification, as in (44), which is equivalent to (39).
(44) 316V1437[[7 = 16] A (love 14 7)]
</bodyText>
<page confidence="0.983455">
334
</page>
<figure confidence="0.961384464285715">
Morrill Incremental Processing and Acceptability
I I I \ / \ I
N. N. S. CN. CN. I N•
N \ \ /
S. \ \ \ /
N N
everyone loved by sorneone
Figure 10
Proof net analysis for the object wide scope reading of (7b) everyone is loved by someone (3V).
Again, the preferred reading has the lower complexity profile:
(45)
ab
6
5
4
3
2
1
0
ab
ab
someone
b b a
a
everyone is loved by
V3 (Figure 9)
3V (Figure 10)
7. Preferred Forms
</figure>
<bodyText confidence="0.99434075">
Another good test would be to compare different expressions that are synonymous,
holding semantics constant. Our account appears to explain the preference for heavy
noun phrases to appear at the end of the verb phrase (heavy noun phrase shift). Of
the following two sentences, repeated from (10), the second is more acceptable:
</bodyText>
<figure confidence="0.8934369375">
(46) a. ?John gave the painting that Mary hated to Bill.
b. John gave Bill the painting that Mary hated.
The analyses are given in Figure 11. The complexities are thus:
a
a
ba
ab ab a
a
(47) 4
3
2
1 ab
a
a
a. John gave the painting that Mary hated to Bill
b. John gave Bill the painting that Mary hated
</figure>
<page confidence="0.909331">
335
</page>
<table confidence="0.88440175">
Computational Linguistics Volume 26, Number 3
S. N, (N \ / / I / i ) — I / I 1 SI, (N \ I / 1 to I — I
I— John I gave Bdvd I the I CN, I I that I 1_ Mary (N \ I 1 N. N
S. N. —I S) IN (IN PP), N / CIN 1— )(IN \ c&apos;N) that (IS / 1 N. I 1 Bill
John IN , the CN P. ON CIN) (Is I Mary S) I
) I NI hated NI, PP
• N). N. N ). 51)
Bill NI) hated
</table>
<figureCaption confidence="0.588628">
Figure 11
</figureCaption>
<bodyText confidence="0.825691444444444">
Proof net analysis for (46b) John gave Bill the painting that Mary hated (bottom) and (46a) John
gave the painting that Mary hated to Bill (top).
8. Conclusion: Valencies versus Category Complexity
Finally, another dramatic example of unacceptability is provided by the follow-
ing:8
(48) a. That two plus two equals four surprised Jack.
b. ?That that two plus two equals four surprised Jack astonished Ingrid.
c. ??That that that two plus two equals four surprised Jack astonished
Ingrid bothered Frank.
The passive paraphrases, however, seem more or less equally acceptable:
(49) a. Jack was surprised that two plus two equals four.
b. Ingrid was astonished that Jack was surprised that two plus two
equals four.
c. Frank was bothered that Ingrid was astonished that Jack was
surprised that two plus two equals four.
In Figure 12 we give the analysis of (48b) and in Figure 13 that of (49b). It is very
interesting to observe that the complexity profile of the latter is in general lower even
though the analysis has more than twice the total number of links.
</bodyText>
<footnote confidence="0.859911666666667">
8 In some linguistic analyses it is claimed that sentencial subjects are obligatorily extraposed into a
presentencial topic position, which is not available in nonroot clauses. Under our account no such
abstract claims are necessary.
</footnote>
<page confidence="0.993818">
336
</page>
<figure confidence="0.954051923076923">
Morrill Incremental Processing and Acceptability
/ I I I --I .S) N, N. ((12P \ S)
S. CP / S. N, (N \ ) N N. N. (&lt;12P
N. ( \ S)
that that two plus two equals four surp. Jack ast. Ingrid
Figure 12
Proof net analysis of (48b) that that two plus two equals four surprised Jack astonished Ingrid.
S. N, (N \ S) / (CN &apos;I &apos; ((CN \ CN) / (N \ (CP \ S))) • (N \ (CP \ L. I \ (CP \ S that I I
Ingrid N. (N WELS V/09 \ UN), UN), ((CN CV) as, \ S))) • (N \ I ((CT \ 5) I that \ (UP / I I
Jack I (CN \ \ ) / N. F 1 I surp. N, S)), I I I I / IS
\ S) N. (N PI us N. (N (N \ (CP / N. four (CP \ S)(, ((CP li \ S{))
two two \ I
equals \ 51
</figure>
<figureCaption confidence="0.753415">
Figure 13
</figureCaption>
<figure confidence="0.959106333333333">
Proof net analysis of (49b) Ingrid was astonished that Jack was surprised that two plus two equals four.
(50)
7 a
6 a a
5 a a
4 b ab
3 a a b
2 b b b b ab b
1 ab b b a b
0 a b
a. that that two plus two equals four surp. Jack ast. Ingrid
b. Ingrid was ast. that Jack was surp. that two plus two equals four
</figure>
<bodyText confidence="0.9846564">
Acceptability is no doubt a product of many factors other than just the structural
ones considered here. Still, in as much as structural factors may exist, we think this
example in particular provides good support for the view that it is resolution of atomic
valencies, rather than complexity of categories, which underlies their contribution to
acceptability
</bodyText>
<page confidence="0.991868">
337
</page>
<note confidence="0.77362">
Computational Linguistics Volume 26, Number 3
</note>
<sectionHeader confidence="0.981683" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.98959925">
For helpful remarks I thank Gabriel Bes,
anonymous reviewers, and various
audiences, and especially for recent
comment, Ewan Klein and Mark Steedman.
</bodyText>
<sectionHeader confidence="0.993748" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999654009009009">
Ades, Anthony E. and Mark J. Steedman.
1982. On the Order of Words. Linguistics
and Philosophy, 4:517-558.
Bever, Thomas. 1970. The cognitive basis for
linguistic structures. In J. R. Hayes, editor,
Cognition and the Growth of Language, Wiley,
New York.
Buszkowski, Wojciech. 1986. Completeness
results for Lambek syntactic calculus.
Zeitschrift fiir mat hematische Logik und
Grundlage der Mathematik, 32:13-28.
Carpenter, Bob. 1998. Type-Logical Semantics.
MIT Press, Cambridge, MA.
Chomsky, Noam. 1965. Aspects of the Theory
of Syntax. MIT Press, Cambridge, MA.
Danos, Vincent and Laurent Regnier. 1989.
The Structure of Multiplicatives. Archive
for Mathematical Logic, 28:181-203.
Dogen, Kosta. 1992. A brief survey of
frames for the Lambek calculus. Zeitschrift
fur mat hematische Logik und Grundlage der
Mathematik, 38:179-187.
Gibson, E. and J. Thomas. 1996. The
processing complexity of English
center-embedded and self-embedded
structures. Proceedings of NELS, University
of Massachusetts, Amherst.
Girard, Jean-Yves. 1987. Linear Logic.
Theoretical Computer Science, 50:1-102.
de Groote, Philippe and Christian Retore.
1996. On the Semantic Readings of
Proof-Nets. In Geert-Jan Kruijff, Glyn
Morrill and Richard. T. Oehrle, editors,
Proceedings of Formal Grammar 1996,
Prague, pages 57-70.
Hendriks, Herman. 1993. Studied
Flexibility: Categories and Types in
Syntax and Semantics. D.Phil.
dissertation, Universiteit van Amsterdam,
Amsterdam.
Hepple, Mark. 1990. Normal form theorem
proving for the Lambek calculus. In
H. Karlgren, editor, Proceedings of the 13th
International Conference on Computational
Linguistics (COLING 1990), pages 173-178,
Stockholm.
Hepple, Mark and Glyn Morrill. 1989.
Parsing and Derivational Equivalence.
Proceedings of the Fourth Conference of the
European Chapter of the Association for
Computational Linguistics, pages 10-18,
Manchester.
Johnson, Mark. 1998. Proof nets and the
complexity of processing center
embedded constructions, Journal of Logic,
Language and Information, 7(4):433-447.
Kimball, John. 1973. Seven principles of
surface structure parsing in natural
language. Cognition, 2:15-47.
Konig, Esther. 1989. Parsing as natural
deduction. Proceedings of the 27th Annual
Meeting, pages 272-279, Vancouver.
Association for Computational
Linguistics.
Lamarche, Francois and Christian Retore.
1996. Proof nets for the Lambek
calculus-an overview. In V. Michele
Abrusci and Claudia Casadio, editors,
Proofs and Linguistic Categories: Applications
of Logic to the Analysis and Implementation of
Natural Language. CLUEB, Bologna,
pages 241-262.
Lambek, Joachim. 1958. The mathematics of
sentence structure. American Mathematical
Monthly, 65:154-170.
Lecomte, Alain and Christian Retore. 1995.
An alternative categorial grammar. Glyn
Morrill and Richard. T. Oehrle, editors,
Proceedings of Formal Grammar 1995,
Barcelona, pages 181-196.
Moortgat, Michael. 1988. Categorial
Investigations: Logical and Linguistic Aspects
of the Lambek Calculus. Foris, Dordrecht.
Moortgat, Michael. 1997. Categorial Type
Logics. In Johan van Benthem and Alice
ter Meulen, editors, Handbook of Logic and
Language. Elsevier, Amsterdam,
pages 93-177.
Morrill, Glyn. 1994. Type Logical Grammar:
Categorial Logic of Signs. Kluwer Academic
Publishers, Dordrecht.
Morrill, Glyn. 1999. Geometry of
Lexico-Syntactic Interaction. Proceedings of
the Ninth Conference of the European Chapter
of the Association for Computational
Linguistics, Bergen, pages 61-70.
Pentus, Mati. 1994. Language completeness
of the Lambek calculus. Proceedings of the
Eighth Annual IEEE Symposium on Logic in
Computer Science, Paris, pages 487-496.
Roorda, Dirk. 1991. Resource Logics:
Proof-Theoretical Investigations. D.Phil.
dissertation, Universiteit van Amsterdam,
Amsterdam.
Steedman, Mark J. 1997. Surface Structure and
Interpretation. MIT Press, Cambridge, MA.
Zielonka, Wojciech. 1981. Axiomatizability
of Ajdukiewicz-Lambek calculus by
means of cancellation scheme. Zeitschrift
fiir mat hematische Logik und Grundlage der
Mathematik, 27:215-224.
</reference>
<page confidence="0.998288">
338
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.936041">
<title confidence="0.996125">Incremental Processing and Acceptability</title>
<author confidence="0.999963">Glyn Morrill</author>
<affiliation confidence="0.994953">Universitat Politecnica de Catalunya</affiliation>
<abstract confidence="0.98812">We describe a left-to-right incremental procedure for the processing of Lambek categorial grammar by proof net construction. A simple metric of complexity, the profile in time of the number of unresolved valencies, correctly predicts a wide variety of performance phenomena including garden pathing, the unacceptability of center embedding, preference for lower attachment, leftto-right quantifier scope preference, and heavy noun phrase shift.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Anthony E Ades</author>
<author>Mark J Steedman</author>
</authors>
<title>On the Order of Words. Linguistics and Philosophy,</title>
<date>1982</date>
<pages>4--517</pages>
<contexts>
<context position="8477" citStr="Ades and Steedman 1982" startWordPosition="1401" endWordPosition="1404"> it assumes the initial presence of the entire sequent to be proved, i.e., it is in principle nonincrementah on the other hand, allowing incrementality on the basis of Cut would reinstate with a vengeance the problem of spurious ambiguity, for then what are to be the Cut formulas? Consequently, the sequent approach is ill-equipped to address the basic asymmetry of language—the asymmetry of its processing in time—and has never been forwarded in a model of the kind of processing phenomena cited in the introduction. 322 Morrill Incremental Processing and Acceptability An alternative formulation (Ades and Steedman 1982, Steedman 1997), which from its inception has emphasized a capacity to produce left-branching, and therefore incrementally processable, analyses, is comprised of combinatory schemata such as the following (together with a Cut rule, feeding one rule application into another): (17) a. A,A\B B BIA,A B b. A = (B I A)\B A B I (A\B) c. A\B,B\C A\C CIB,BIA CIA By a result of Zielonka (1981), the Lambek calculus is not axiomatizable by any finite set of combinatory schemata, so no such combinatory presentation can constitute the logic of concatenation in the sense of Lambek calculus. Combinatory cate</context>
<context position="14946" citStr="Ades and Steedman (1982)" startWordPosition="2500" endWordPosition="2503"> N• ii CN° \ / s° N/CN• the Here there are three unmatched valencies/unresolved dependencies; no axiom links can yet be placed, but after horse we can build: — — I I N&apos; ii CN° \ S° N/CN• CM&apos; the horse Now there are only two unmatched valencies. After raced we have, on the correct analysis, the following: - — 1 CN• horse s° I N° ii S• N• ii CN° \ / \ N\S• N/CN• raced the Note that linking the Ns is possible, but we are interested in the history of the correct analysis, and in that, the verb valencies are matched by the adverb that 3 The procedure is similar in spirit to that in the appendix of Ades and Steedman (1982), but we perform &amp;quot;reductions&amp;quot; by axiom links on complementary literal pairs rather than by combinatory schemata on category formulas. 325 Computational Linguistics Volume 26, Number 3 follows (henceforth we indicate only the principal connective of a mother node): S° i N• N° ii S. \ \ N N ii CN° N° ii S• \ ii N° CN• the horse raced past Observe that a cycle is created, but as required it crosses the edges of an i-link. At the penultimate step we have: I I I I I I S° i N• N° ii S — — \ ii \ 1 1 1 1 1 1 N ii CN° N° ii S \ ii N° N• ii CN° S° / CN&amp;quot; \ i the horse raced past the The final proof net </context>
</contexts>
<marker>Ades, Steedman, 1982</marker>
<rawString>Ades, Anthony E. and Mark J. Steedman. 1982. On the Order of Words. Linguistics and Philosophy, 4:517-558.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas Bever</author>
</authors>
<title>The cognitive basis for linguistic structures.</title>
<date>1970</date>
<booktitle>Cognition and the Growth of Language,</booktitle>
<editor>In J. R. Hayes, editor,</editor>
<publisher>Wiley,</publisher>
<location>New York.</location>
<contexts>
<context position="1211" citStr="Bever 1970" startWordPosition="166" endWordPosition="167">and idealizations which, however fruitful, should eventually be integrated with human computational performance in language use. In this paper we consider the case of language processing on the basis of Lambek categorial grammar (Lambek 1958). We argue that an incremental procedure of proof net construction affords an account of various processing phenomena, including garden pathing, the unacceptability of center embedding, preference for lower attachment, left-to-right quantifier scope preference, and heavy noun phrase shift. We give examples of each of these phenomena below. Garden pathing (Bever 1970) is illustrated by the following contrasts: (1) a. The horse raced past the barn. b. ?The horse raced past the barn fell. (2) a. The boat floated down the river. b. ?The boat floated down the river sank. (3) a. The dog that knew the cat disappeared. b. ?The dog that knew the cat disappeared was rescued. Typically, although the b sentences are perfectly well formed they are perceived as being ungrammatical due to a strong tendency to interpret their initial segments as in the a sentences. The unacceptability of centre embedding is illustrated by the fact that while the nested subject relativiza</context>
</contexts>
<marker>Bever, 1970</marker>
<rawString>Bever, Thomas. 1970. The cognitive basis for linguistic structures. In J. R. Hayes, editor, Cognition and the Growth of Language, Wiley, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wojciech Buszkowski</author>
</authors>
<title>Completeness results for Lambek syntactic calculus.</title>
<date>1986</date>
<booktitle>Zeitschrift fiir mat hematische Logik und Grundlage der Mathematik,</booktitle>
<pages>32--13</pages>
<contexts>
<context position="5558" citStr="Buszkowski 1986" startWordPosition="877" endWordPosition="878">operation + of adjunction), each formula A is interpreted as a subset [AJI of L by residuation as follows: (11) [A.B] = E [All &amp; S2 E [A\B] = {SIVS&apos; E Si-ES E MI} [B/Al {siVs&apos; Ei[A]l,s+s&apos; E A sequent, F = A, comprises a succedent formula A and an antecedent configuration F, which is a a finite sequence of formulas.&apos; A sequent is valid if and only if in all interpretations the ordered adjunction of elements inhabiting the antecedent formulas always yields an element inhabiting the succedent formula. The following Gentzen-style sequent presentation is sound and complete for this interpretation (Buszkowski 1986, Dogen 1992), and indeed for free semigroups (Pentus 1994): hence the Lambek calculus can make an impressive claim to be the logic of concatenation; a parenthetical notation A (F) represents a configuration containing a distinguished subconfiguration F. F A z(A)=B (12) a. A = A id A(F) B F A L(B)=C A, r B \L \R b. A (F,A\B) C F A\B FrzA A(B) C F,A B /L /R c. A(BIA,F) C r BIA F A A B R .1, . d. F,A.B, A C By way of example, &amp;quot;lifting&amp;quot; A = B/(A B) is generated as follows: (13) A=A B=B \L A,A\B B jR A BI(A\B) 1 Officially, the antecedent is nonempty, a detail we gloss over. Cut 321 Computational </context>
</contexts>
<marker>Buszkowski, 1986</marker>
<rawString>Buszkowski, Wojciech. 1986. Completeness results for Lambek syntactic calculus. Zeitschrift fiir mat hematische Logik und Grundlage der Mathematik, 32:13-28.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bob Carpenter</author>
</authors>
<title>Type-Logical Semantics.</title>
<date>1998</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="4559" citStr="Carpenter (1998)" startWordPosition="711" endWordPosition="712"> the end of the sentence. Consider the two sentences in (10); the second, in which the &amp;quot;heavy&amp;quot; direct object follows the indirect object, is more acceptable than the first. 320 Morrill Incremental Processing and Acceptability (10) a. ?John gave the painting that Mary hated to Bill. b. John gave Bill the painting that Mary hated. We argue that a simple metric of categorial processing complexity explains these and other performance phenomena. 2. Lambek Calculus We shall assume some familiarity with Lambek categorial grammar as presented in, for example, Moortgat (1988, 1997), Morrill (1994), or Carpenter (1998), and limit ourselves here to reviewing some central technical and computational aspects. The types, or (category) formulas, of Lambek calculus are freely generated from a set of primitives by the binary infix connectives &amp;quot;1&amp;quot; (over), &amp;quot; \ &amp;quot; (under) (directional divisions) and &amp;quot;-&amp;quot; (product). With respect to a semigroup algebra (L, +) (i.e., a set L closed under an associative binary operation + of adjunction), each formula A is interpreted as a subset [AJI of L by residuation as follows: (11) [A.B] = E [All &amp; S2 E [A\B] = {SIVS&apos; E Si-ES E MI} [B/Al {siVs&apos; Ei[A]l,s+s&apos; E A sequent, F = A, comprise</context>
</contexts>
<marker>Carpenter, 1998</marker>
<rawString>Carpenter, Bob. 1998. Type-Logical Semantics. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noam Chomsky</author>
</authors>
<title>Aspects of the Theory of Syntax.</title>
<date>1965</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="2245" citStr="Chomsky 1965" startWordPosition="323" endWordPosition="324">ng tendency to interpret their initial segments as in the a sentences. The unacceptability of centre embedding is illustrated by the fact that while the nested subject relativizations of (4) exhibit little variation in acceptability, the nested * Departament de Llenguatges i Sistemes Informatics, Modul C 5 - Campus Nord, Jordi Girona Salgado 1-3, E-08034 Barcelona. E-mail: morrill@lsi.upc.es; http://www-lsi.upc.es/—morrill/ C) 2000 Association for Computational Linguistics Computational Linguistics Volume 26, Number 3 object relativizations (5) exhibit a severe deterioration in acceptability (Chomsky 1965, Chap. 1). (4) a. The dog that chased the cat barked. b. The dog that chased the cat that saw the rat barked. c. The dog that chased the cat that saw the rat that ate the cheese barked. (5) a. The cheese that the rat ate stank. b. ?The cheese that the rat that the cat saw ate stank. c. ??The cheese that the rat that the cat that the dog chased saw ate stank. Discussing such center embedding, Johnson (1998) presents the essential idea developed here, noting that processing overload of dependencies invoked in psycholinguistic literature could be rendered in terms of the maximal number of unreso</context>
</contexts>
<marker>Chomsky, 1965</marker>
<rawString>Chomsky, Noam. 1965. Aspects of the Theory of Syntax. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vincent Danos</author>
<author>Laurent Regnier</author>
</authors>
<date>1989</date>
<booktitle>The Structure of Multiplicatives. Archive for Mathematical Logic,</booktitle>
<pages>28--181</pages>
<contexts>
<context position="13299" citStr="Danos and Regnier (1989)" startWordPosition="2228" endWordPosition="2231">,A1,. ,A&apos; iff A1, ,A, A is a valid sequent. 4. Incremental Processing Load and Acceptability Let us assume the following lexical assignments: (19) barn — barn := CN horse — horse := CN past AxAyAz(past x (y z)) ((N\St)\(N\St))/N raced — race := N\S+ the — the := N/CN The feature + on S marks the projection of a tensed verb form; a verb phrase modified by past need not be tensed. Let us consider the incremental processing of (1a) as proof 2 This criterion, adapted from that of Lecomte and Retore (1995), derives from Girard&apos;s (1987) long trip condition, which is an involved mathematical result. Danos and Regnier (1989) express it in terms of acyclicity and connectivity of certain subgraphs. Intuitively, acyclicity assures that the subformulas of ii-links (binary rules) occur in different subproofs, whereas connectivity assures that the subformulas of i-links (unary rules) occur in the same subproofs (attributed to Jean Gallier by Philippe de Groote, p.c.). However the single-succedent (intuitionistic) nature of Cut-free categorial proofs in fact renders the connectivity requirement redundant, hence we have just an acyclicity test. 324 Morrill Incremental Processing and Acceptability net construction.3 In th</context>
</contexts>
<marker>Danos, Regnier, 1989</marker>
<rawString>Danos, Vincent and Laurent Regnier. 1989. The Structure of Multiplicatives. Archive for Mathematical Logic, 28:181-203.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kosta Dogen</author>
</authors>
<title>A brief survey of frames for the Lambek calculus.</title>
<date>1992</date>
<booktitle>Zeitschrift fur mat hematische Logik und Grundlage der Mathematik,</booktitle>
<pages>38--179</pages>
<contexts>
<context position="5571" citStr="Dogen 1992" startWordPosition="879" endWordPosition="880">junction), each formula A is interpreted as a subset [AJI of L by residuation as follows: (11) [A.B] = E [All &amp; S2 E [A\B] = {SIVS&apos; E Si-ES E MI} [B/Al {siVs&apos; Ei[A]l,s+s&apos; E A sequent, F = A, comprises a succedent formula A and an antecedent configuration F, which is a a finite sequence of formulas.&apos; A sequent is valid if and only if in all interpretations the ordered adjunction of elements inhabiting the antecedent formulas always yields an element inhabiting the succedent formula. The following Gentzen-style sequent presentation is sound and complete for this interpretation (Buszkowski 1986, Dogen 1992), and indeed for free semigroups (Pentus 1994): hence the Lambek calculus can make an impressive claim to be the logic of concatenation; a parenthetical notation A (F) represents a configuration containing a distinguished subconfiguration F. F A z(A)=B (12) a. A = A id A(F) B F A L(B)=C A, r B \L \R b. A (F,A\B) C F A\B FrzA A(B) C F,A B /L /R c. A(BIA,F) C r BIA F A A B R .1, . d. F,A.B, A C By way of example, &amp;quot;lifting&amp;quot; A = B/(A B) is generated as follows: (13) A=A B=B \L A,A\B B jR A BI(A\B) 1 Officially, the antecedent is nonempty, a detail we gloss over. Cut 321 Computational Linguistics V</context>
</contexts>
<marker>Dogen, 1992</marker>
<rawString>Dogen, Kosta. 1992. A brief survey of frames for the Lambek calculus. Zeitschrift fur mat hematische Logik und Grundlage der Mathematik, 38:179-187.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Gibson</author>
<author>J Thomas</author>
</authors>
<title>The processing complexity of English center-embedded and self-embedded structures.</title>
<date>1996</date>
<booktitle>Proceedings of</booktitle>
<institution>NELS, University of Massachusetts,</institution>
<location>Amherst.</location>
<contexts>
<context position="23559" citStr="Gibson and Thomas (1996)" startWordPosition="4061" endWordPosition="4064">st corresponds to the maximum height of a complexity profile here, except Johnson includes no target category, whereas we will argue in relation to quantifier scope preference that this is critical. However, we also differ from Johnson in attributing relative acceptability to the area under the complexity curve, not only its maximal height. This is because we believe acceptability is to be explained in terms of the energy required to maintain processes in memory over time, and not just in terms of peak memory load. Finally, it happens that our proposal solves a problem encountered by Johnson. Gibson and Thomas (1996) observe that (33a) is easier to comprehend than (33b). (33) a. The chance that the nurse who the doctor supervised lost the reports bothered the intern. b. ?The intern who the chance that the doctor lost the reports bothered supervised the nurse. Johnson notes that his proposal does not capture this difference since both sentences have the same size maximal cut. Under our account, on the other hand, it is the complexity curves as a whole that account for acceptability. In these sentences, although the height is the same, the complexity curves are not: the area of (33a) is less than that of (3</context>
</contexts>
<marker>Gibson, Thomas, 1996</marker>
<rawString>Gibson, E. and J. Thomas. 1996. The processing complexity of English center-embedded and self-embedded structures. Proceedings of NELS, University of Massachusetts, Amherst.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jean-Yves Girard</author>
</authors>
<title>Linear Logic.</title>
<date>1987</date>
<journal>Theoretical Computer Science,</journal>
<pages>50--1</pages>
<contexts>
<context position="9925" citStr="Girard (1987)" startWordPosition="1634" endWordPosition="1635"> succession of rule application) to the associated problem of spurious ambiguity is given in Hepple and Morrill (1989) but again, to our knowledge, there is no predictive relation between incremental combinatory processing and the kind of processing phenomena cited in the introduction. 3. Proof Nets Lambek categorial derivations are often presented in the style of natural deduction or sequent calculus. Here we are concerned with categorial proof nets (Roorda 1991) as the fundamental structures of proof in categorial logic, in the same sense that linear proof nets were originally introduced by Girard (1987) as the fundamental structures of proof in linear logic. (Cut-free) proof nets exhibit no spurious ambiguity and play the role in categorial grammar that parse trees play in phrase structure grammar. Surveys and articles on the topic include Lamarche and Retord (1996), de Groote and Retord (1996), and Morrill (1999). Still, at the risk of proceeding at a slightly slower pace, we aim nonetheless to include here enough details to make the present paper self-contained. A polar category formula is a Lambek categorial type labeled with input (&apos;) or output (°) polarity. A polar category formula tree</context>
</contexts>
<marker>Girard, 1987</marker>
<rawString>Girard, Jean-Yves. 1987. Linear Logic. Theoretical Computer Science, 50:1-102.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philippe de Groote</author>
<author>Christian Retore</author>
</authors>
<title>On the Semantic Readings of Proof-Nets.</title>
<date>1996</date>
<booktitle>Proceedings of Formal Grammar</booktitle>
<pages>57--70</pages>
<editor>In Geert-Jan Kruijff, Glyn Morrill and Richard. T. Oehrle, editors,</editor>
<location>Prague,</location>
<marker>de Groote, Retore, 1996</marker>
<rawString>de Groote, Philippe and Christian Retore. 1996. On the Semantic Readings of Proof-Nets. In Geert-Jan Kruijff, Glyn Morrill and Richard. T. Oehrle, editors, Proceedings of Formal Grammar 1996, Prague, pages 57-70.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Herman Hendriks</author>
</authors>
<title>Studied Flexibility: Categories and Types</title>
<date>1993</date>
<booktitle>in Syntax and Semantics. D.Phil. dissertation, Universiteit</booktitle>
<location>van Amsterdam, Amsterdam.</location>
<contexts>
<context position="7275" citStr="Hendriks 1993" startWordPosition="1190" endWordPosition="1191">Cut-free fragment. The nonatomic instances of the id axiom are derivable from atomic instances by the rules for the connectives. But even in the Cut-free atomic-id calculus there is spurious ambiguity: equivalent derivations differing only in irrelevant rule ordering. For example, composition as above has the following alternative derivation: (15) AA BB \L A, A\B B c=c A, A\B, B\C C \R L A\B , B\C A\C One approach to this problem consists in defining, within the Cut-free atomic-id space, normal form derivations in which the succession of rule application is regulated (Konig 1989, Hepple 1990, Hendriks 1993). Each sequent has a distinguished category formula (underlined) on which rule applications are keyed: (16) a. P=P id A(A) B r A A(13) C \L A (F , A\B) C FzzA A(11) C /L A (B/A,F) C A, F B \R r A\B F, A B /R F B/A ArrA F B In the regulated calculus there is no spurious ambiguity, and provided there is no explicit or implicit antecedent product, i.e., provided .1_, is not needed, r = A is a theorem of the Lambek calculus iff F = is a theorem of the regulated calculus. However, apart from the issue regarding .L, there is a general cause for dissatisfaction with this approach: it assumes the init</context>
</contexts>
<marker>Hendriks, 1993</marker>
<rawString>Hendriks, Herman. 1993. Studied Flexibility: Categories and Types in Syntax and Semantics. D.Phil. dissertation, Universiteit van Amsterdam, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Hepple</author>
</authors>
<title>Normal form theorem proving for the Lambek calculus.</title>
<date>1990</date>
<booktitle>Proceedings of the 13th International Conference on Computational Linguistics (COLING</booktitle>
<pages>173--178</pages>
<editor>In H. Karlgren, editor,</editor>
<location>Stockholm.</location>
<contexts>
<context position="7259" citStr="Hepple 1990" startWordPosition="1188" endWordPosition="1189">earch in the Cut-free fragment. The nonatomic instances of the id axiom are derivable from atomic instances by the rules for the connectives. But even in the Cut-free atomic-id calculus there is spurious ambiguity: equivalent derivations differing only in irrelevant rule ordering. For example, composition as above has the following alternative derivation: (15) AA BB \L A, A\B B c=c A, A\B, B\C C \R L A\B , B\C A\C One approach to this problem consists in defining, within the Cut-free atomic-id space, normal form derivations in which the succession of rule application is regulated (Konig 1989, Hepple 1990, Hendriks 1993). Each sequent has a distinguished category formula (underlined) on which rule applications are keyed: (16) a. P=P id A(A) B r A A(13) C \L A (F , A\B) C FzzA A(11) C /L A (B/A,F) C A, F B \R r A\B F, A B /R F B/A ArrA F B In the regulated calculus there is no spurious ambiguity, and provided there is no explicit or implicit antecedent product, i.e., provided .1_, is not needed, r = A is a theorem of the Lambek calculus iff F = is a theorem of the regulated calculus. However, apart from the issue regarding .L, there is a general cause for dissatisfaction with this approach: it </context>
</contexts>
<marker>Hepple, 1990</marker>
<rawString>Hepple, Mark. 1990. Normal form theorem proving for the Lambek calculus. In H. Karlgren, editor, Proceedings of the 13th International Conference on Computational Linguistics (COLING 1990), pages 173-178, Stockholm.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Hepple</author>
<author>Glyn Morrill</author>
</authors>
<title>Parsing and Derivational Equivalence.</title>
<date>1989</date>
<booktitle>Proceedings of the Fourth Conference of the European Chapter of the Association for Computational Linguistics,</booktitle>
<pages>10--18</pages>
<location>Manchester.</location>
<contexts>
<context position="9430" citStr="Hepple and Morrill (1989)" startWordPosition="1556" endWordPosition="1559">) c. A\B,B\C A\C CIB,BIA CIA By a result of Zielonka (1981), the Lambek calculus is not axiomatizable by any finite set of combinatory schemata, so no such combinatory presentation can constitute the logic of concatenation in the sense of Lambek calculus. Combinatory categorial grammar does not concern itself with the capture of all (or only) the concatenatively valid combinatory schemata, but rather with incrementality, for example, on a shiftreduce design. An approach (also based on regulation of the succession of rule application) to the associated problem of spurious ambiguity is given in Hepple and Morrill (1989) but again, to our knowledge, there is no predictive relation between incremental combinatory processing and the kind of processing phenomena cited in the introduction. 3. Proof Nets Lambek categorial derivations are often presented in the style of natural deduction or sequent calculus. Here we are concerned with categorial proof nets (Roorda 1991) as the fundamental structures of proof in categorial logic, in the same sense that linear proof nets were originally introduced by Girard (1987) as the fundamental structures of proof in linear logic. (Cut-free) proof nets exhibit no spurious ambigu</context>
</contexts>
<marker>Hepple, Morrill, 1989</marker>
<rawString>Hepple, Mark and Glyn Morrill. 1989. Parsing and Derivational Equivalence. Proceedings of the Fourth Conference of the European Chapter of the Association for Computational Linguistics, pages 10-18, Manchester.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Johnson</author>
</authors>
<title>Proof nets and the complexity of processing center embedded constructions,</title>
<date>1998</date>
<journal>Journal of Logic, Language and Information,</journal>
<pages>7--4</pages>
<contexts>
<context position="2655" citStr="Johnson (1998)" startWordPosition="405" endWordPosition="406">si.upc.es/—morrill/ C) 2000 Association for Computational Linguistics Computational Linguistics Volume 26, Number 3 object relativizations (5) exhibit a severe deterioration in acceptability (Chomsky 1965, Chap. 1). (4) a. The dog that chased the cat barked. b. The dog that chased the cat that saw the rat barked. c. The dog that chased the cat that saw the rat that ate the cheese barked. (5) a. The cheese that the rat ate stank. b. ?The cheese that the rat that the cat saw ate stank. c. ??The cheese that the rat that the cat that the dog chased saw ate stank. Discussing such center embedding, Johnson (1998) presents the essential idea developed here, noting that processing overload of dependencies invoked in psycholinguistic literature could be rendered in terms of the maximal number of unresolved dependencies as represented by proof nets. Kimball (1973, 27) considers sentences such as (6), which are three ways ambiguous according to the attachment of the adverb. He points out that the lower the attachment of the adverb, the higher the preference (he calls this relationship Right Association). (6) Joe said that Martha believed that Ingrid fell today. Left-to-right quantifier scope preference is </context>
<context position="21626" citStr="Johnson (1998)" startWordPosition="3680" endWordPosition="3681">e number of axiom links bridging rightwards (forwards in time) at that point. Thus for (1a) and (1b) analyzed in Figures 1 and 2, the complexity profiles are as follows: (30) 6 5 4 a 3 ab b b 2 a 1 ab a a 0 a b a. the horse raced past the barn b. the horse raced past the barn fell We see that after the first two words the complexity of the locally ambiguous initial segment of (1b) is consistently higher than that of its garden path (1a). The areas of the a and b curves are 12 and 22 respectively, predicting that in (1b) the less costly but incorrect analysis could be salient, as indeed it is. Johnson (1998) considers center embedding for subject and object relativization from a similar point of view. We assume here the relative pronoun lexical assignments shown in (31).5 (31) that - AxAyAz[(y Z) A (X z)] := (CN\CN)/(N\S+) that - AxAyAz[(y z) A (x z)] := (CN CN)/ (S+ /N) The proof net analysis of sentence (4b) is shown in Figure 3, and that of sentence (5b) is shown in Figure 4. Let us compare the complexities: (32) 9 8 7 6 5 4 ab ab a a 3 ab a a a a 2 ab 1 ab 0 ab the dog that chased the cat that saw the rat barked the cheese that the rat that the cat saw ate stank 5 For better linguistic treatm</context>
</contexts>
<marker>Johnson, 1998</marker>
<rawString>Johnson, Mark. 1998. Proof nets and the complexity of processing center embedded constructions, Journal of Logic, Language and Information, 7(4):433-447.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Kimball</author>
</authors>
<title>Seven principles of surface structure parsing in natural language.</title>
<date>1973</date>
<journal>Cognition,</journal>
<pages>2--15</pages>
<contexts>
<context position="2906" citStr="Kimball (1973" startWordPosition="442" endWordPosition="443">arked. b. The dog that chased the cat that saw the rat barked. c. The dog that chased the cat that saw the rat that ate the cheese barked. (5) a. The cheese that the rat ate stank. b. ?The cheese that the rat that the cat saw ate stank. c. ??The cheese that the rat that the cat that the dog chased saw ate stank. Discussing such center embedding, Johnson (1998) presents the essential idea developed here, noting that processing overload of dependencies invoked in psycholinguistic literature could be rendered in terms of the maximal number of unresolved dependencies as represented by proof nets. Kimball (1973, 27) considers sentences such as (6), which are three ways ambiguous according to the attachment of the adverb. He points out that the lower the attachment of the adverb, the higher the preference (he calls this relationship Right Association). (6) Joe said that Martha believed that Ingrid fell today. Left-to-right quantifier scope preference is illustrated by: (7) a. Someone loves everyone. b. Everyone is loved by someone. Both sentences exhibit both quantifier scopings: (8) a. aVy(love y x) b. Vy3x(love y x) However, while the dominant reading of (7a) is (8a), that of (7b) is (8b), i.e., th</context>
<context position="25654" citStr="Kimball 1973" startWordPosition="4461" endWordPosition="4462">omparison of different expressions, having many differences to which their relative acceptabilities could be attributed. More factors would be held constant by comparing alternative readings of an ambiguous expression, and most appropriately of all, a structurally ambiguous expression, where there is no lexical alternation. Consider the ambiguity that arises in a sentence such as (34) (repeated from (6)) from the possibility of attaching the adverb at different syntactic levels. As we saw in the introduction, the lower the attachment of the adverb in such sentences, the higher the preference (Kimball 1973, 27). (34) Joe said that Martha believed that Ingrid fell today. In Figure 5 we give the analyses for the lowest, the middle, and the highest attachments. We now abbreviate proof nets by flattening formula trees into their linear representations (since this conceals the order switching of output links, the notation belies the underlying planarity, but the portrayal of word-by-word complexity is unaltered). Accordingly, the complexity profiles are: (35) 6 be 5 c bc bc 4 abc 3 2 abc ab a 1 abc ab ab a a abc b. Joe said that Martha believed that Ingrid fell lowest attachment today middle attachm</context>
</contexts>
<marker>Kimball, 1973</marker>
<rawString>Kimball, John. 1973. Seven principles of surface structure parsing in natural language. Cognition, 2:15-47.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Esther Konig</author>
</authors>
<title>Parsing as natural deduction.</title>
<date>1989</date>
<booktitle>Proceedings of the 27th Annual Meeting,</booktitle>
<pages>272--279</pages>
<institution>Vancouver. Association for Computational Linguistics.</institution>
<contexts>
<context position="7246" citStr="Konig 1989" startWordPosition="1186" endWordPosition="1187">ning proof search in the Cut-free fragment. The nonatomic instances of the id axiom are derivable from atomic instances by the rules for the connectives. But even in the Cut-free atomic-id calculus there is spurious ambiguity: equivalent derivations differing only in irrelevant rule ordering. For example, composition as above has the following alternative derivation: (15) AA BB \L A, A\B B c=c A, A\B, B\C C \R L A\B , B\C A\C One approach to this problem consists in defining, within the Cut-free atomic-id space, normal form derivations in which the succession of rule application is regulated (Konig 1989, Hepple 1990, Hendriks 1993). Each sequent has a distinguished category formula (underlined) on which rule applications are keyed: (16) a. P=P id A(A) B r A A(13) C \L A (F , A\B) C FzzA A(11) C /L A (B/A,F) C A, F B \R r A\B F, A B /R F B/A ArrA F B In the regulated calculus there is no spurious ambiguity, and provided there is no explicit or implicit antecedent product, i.e., provided .1_, is not needed, r = A is a theorem of the Lambek calculus iff F = is a theorem of the regulated calculus. However, apart from the issue regarding .L, there is a general cause for dissatisfaction with this </context>
</contexts>
<marker>Konig, 1989</marker>
<rawString>Konig, Esther. 1989. Parsing as natural deduction. Proceedings of the 27th Annual Meeting, pages 272-279, Vancouver. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Francois Lamarche</author>
<author>Christian Retore</author>
</authors>
<title>Proof nets for the Lambek calculus-an overview.</title>
<date>1996</date>
<booktitle>Proofs and Linguistic Categories: Applications of Logic to the Analysis and Implementation of Natural Language. CLUEB,</booktitle>
<pages>241--262</pages>
<editor>In V. Michele Abrusci and Claudia Casadio, editors,</editor>
<location>Bologna,</location>
<marker>Lamarche, Retore, 1996</marker>
<rawString>Lamarche, Francois and Christian Retore. 1996. Proof nets for the Lambek calculus-an overview. In V. Michele Abrusci and Claudia Casadio, editors, Proofs and Linguistic Categories: Applications of Logic to the Analysis and Implementation of Natural Language. CLUEB, Bologna, pages 241-262.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joachim Lambek</author>
</authors>
<title>The mathematics of sentence structure.</title>
<date>1958</date>
<journal>American Mathematical Monthly,</journal>
<pages>65--154</pages>
<contexts>
<context position="842" citStr="Lambek 1958" startWordPosition="114" endWordPosition="115">ic of complexity, the profile in time of the number of unresolved valencies, correctly predicts a wide variety of performance phenomena including garden pathing, the unacceptability of center embedding, preference for lower attachment, leftto-right quantifier scope preference, and heavy noun phrase shift. 1. Introduction Contemporary linguistics rests on abstractions and idealizations which, however fruitful, should eventually be integrated with human computational performance in language use. In this paper we consider the case of language processing on the basis of Lambek categorial grammar (Lambek 1958). We argue that an incremental procedure of proof net construction affords an account of various processing phenomena, including garden pathing, the unacceptability of center embedding, preference for lower attachment, left-to-right quantifier scope preference, and heavy noun phrase shift. We give examples of each of these phenomena below. Garden pathing (Bever 1970) is illustrated by the following contrasts: (1) a. The horse raced past the barn. b. ?The horse raced past the barn fell. (2) a. The boat floated down the river. b. ?The boat floated down the river sank. (3) a. The dog that knew th</context>
<context position="6502" citStr="Lambek (1958)" startWordPosition="1068" endWordPosition="1069">A\B FrzA A(B) C F,A B /L /R c. A(BIA,F) C r BIA F A A B R .1, . d. F,A.B, A C By way of example, &amp;quot;lifting&amp;quot; A = B/(A B) is generated as follows: (13) A=A B=B \L A,A\B B jR A BI(A\B) 1 Officially, the antecedent is nonempty, a detail we gloss over. Cut 321 Computational Linguistics Volume 26, Number 3 And &amp;quot;composition&amp;quot; A \B, B\C = A \C can be derived thus: (14) B B C C \L AA B, B\C C L A, A\B, B\C C \R A\B , B\C A\C Every rule, with the exception of Cut, where the Cut formula A does not appear in the conclusion, has exactly one connective occurrence less in its premisses than in its conclusion. Lambek (1958) proved Cut elimination—that every proof has a Cutfree counterpart—hence a decision procedure for theoremhood is given by backwardchaining proof search in the Cut-free fragment. The nonatomic instances of the id axiom are derivable from atomic instances by the rules for the connectives. But even in the Cut-free atomic-id calculus there is spurious ambiguity: equivalent derivations differing only in irrelevant rule ordering. For example, composition as above has the following alternative derivation: (15) AA BB \L A, A\B B c=c A, A\B, B\C C \R L A\B , B\C A\C One approach to this problem consist</context>
</contexts>
<marker>Lambek, 1958</marker>
<rawString>Lambek, Joachim. 1958. The mathematics of sentence structure. American Mathematical Monthly, 65:154-170.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alain Lecomte</author>
<author>Christian Retore</author>
</authors>
<title>An alternative categorial</title>
<date>1995</date>
<booktitle>Proceedings of Formal Grammar</booktitle>
<pages>181--196</pages>
<editor>grammar. Glyn Morrill and Richard. T. Oehrle, editors,</editor>
<location>Barcelona,</location>
<contexts>
<context position="13181" citStr="Lecomte and Retore (1995)" startWordPosition="2211" endWordPosition="2214">y cycle is the perimeter of a face or cluster of faces in a planar proof structure. There is a proof net with roots A° ,A1,. ,A&apos; iff A1, ,A, A is a valid sequent. 4. Incremental Processing Load and Acceptability Let us assume the following lexical assignments: (19) barn — barn := CN horse — horse := CN past AxAyAz(past x (y z)) ((N\St)\(N\St))/N raced — race := N\S+ the — the := N/CN The feature + on S marks the projection of a tensed verb form; a verb phrase modified by past need not be tensed. Let us consider the incremental processing of (1a) as proof 2 This criterion, adapted from that of Lecomte and Retore (1995), derives from Girard&apos;s (1987) long trip condition, which is an involved mathematical result. Danos and Regnier (1989) express it in terms of acyclicity and connectivity of certain subgraphs. Intuitively, acyclicity assures that the subformulas of ii-links (binary rules) occur in different subproofs, whereas connectivity assures that the subformulas of i-links (unary rules) occur in the same subproofs (attributed to Jean Gallier by Philippe de Groote, p.c.). However the single-succedent (intuitionistic) nature of Cut-free categorial proofs in fact renders the connectivity requirement redundant</context>
</contexts>
<marker>Lecomte, Retore, 1995</marker>
<rawString>Lecomte, Alain and Christian Retore. 1995. An alternative categorial grammar. Glyn Morrill and Richard. T. Oehrle, editors, Proceedings of Formal Grammar 1995, Barcelona, pages 181-196.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Moortgat</author>
</authors>
<title>Categorial Investigations: Logical and Linguistic Aspects of the Lambek Calculus. Foris,</title>
<date>1988</date>
<location>Dordrecht.</location>
<contexts>
<context position="4515" citStr="Moortgat (1988" startWordPosition="705" endWordPosition="706"> complex object noun phrases to &amp;quot;shift&amp;quot; to the end of the sentence. Consider the two sentences in (10); the second, in which the &amp;quot;heavy&amp;quot; direct object follows the indirect object, is more acceptable than the first. 320 Morrill Incremental Processing and Acceptability (10) a. ?John gave the painting that Mary hated to Bill. b. John gave Bill the painting that Mary hated. We argue that a simple metric of categorial processing complexity explains these and other performance phenomena. 2. Lambek Calculus We shall assume some familiarity with Lambek categorial grammar as presented in, for example, Moortgat (1988, 1997), Morrill (1994), or Carpenter (1998), and limit ourselves here to reviewing some central technical and computational aspects. The types, or (category) formulas, of Lambek calculus are freely generated from a set of primitives by the binary infix connectives &amp;quot;1&amp;quot; (over), &amp;quot; \ &amp;quot; (under) (directional divisions) and &amp;quot;-&amp;quot; (product). With respect to a semigroup algebra (L, +) (i.e., a set L closed under an associative binary operation + of adjunction), each formula A is interpreted as a subset [AJI of L by residuation as follows: (11) [A.B] = E [All &amp; S2 E [A\B] = {SIVS&apos; E Si-ES E MI} [B/Al {si</context>
</contexts>
<marker>Moortgat, 1988</marker>
<rawString>Moortgat, Michael. 1988. Categorial Investigations: Logical and Linguistic Aspects of the Lambek Calculus. Foris, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Moortgat</author>
</authors>
<title>Categorial Type Logics.</title>
<date>1997</date>
<booktitle>In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language.</booktitle>
<pages>93--177</pages>
<publisher>Elsevier,</publisher>
<location>Amsterdam,</location>
<marker>Moortgat, 1997</marker>
<rawString>Moortgat, Michael. 1997. Categorial Type Logics. In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language. Elsevier, Amsterdam, pages 93-177.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Glyn Morrill</author>
</authors>
<title>Type Logical Grammar: Categorial Logic of Signs.</title>
<date>1994</date>
<publisher>Kluwer Academic Publishers,</publisher>
<location>Dordrecht.</location>
<contexts>
<context position="4538" citStr="Morrill (1994)" startWordPosition="708" endWordPosition="709">rases to &amp;quot;shift&amp;quot; to the end of the sentence. Consider the two sentences in (10); the second, in which the &amp;quot;heavy&amp;quot; direct object follows the indirect object, is more acceptable than the first. 320 Morrill Incremental Processing and Acceptability (10) a. ?John gave the painting that Mary hated to Bill. b. John gave Bill the painting that Mary hated. We argue that a simple metric of categorial processing complexity explains these and other performance phenomena. 2. Lambek Calculus We shall assume some familiarity with Lambek categorial grammar as presented in, for example, Moortgat (1988, 1997), Morrill (1994), or Carpenter (1998), and limit ourselves here to reviewing some central technical and computational aspects. The types, or (category) formulas, of Lambek calculus are freely generated from a set of primitives by the binary infix connectives &amp;quot;1&amp;quot; (over), &amp;quot; \ &amp;quot; (under) (directional divisions) and &amp;quot;-&amp;quot; (product). With respect to a semigroup algebra (L, +) (i.e., a set L closed under an associative binary operation + of adjunction), each formula A is interpreted as a subset [AJI of L by residuation as follows: (11) [A.B] = E [All &amp; S2 E [A\B] = {SIVS&apos; E Si-ES E MI} [B/Al {siVs&apos; Ei[A]l,s+s&apos; E A seq</context>
<context position="22280" citStr="Morrill (1994" startWordPosition="3813" endWordPosition="3814">nd object relativization from a similar point of view. We assume here the relative pronoun lexical assignments shown in (31).5 (31) that - AxAyAz[(y Z) A (X z)] := (CN\CN)/(N\S+) that - AxAyAz[(y z) A (x z)] := (CN CN)/ (S+ /N) The proof net analysis of sentence (4b) is shown in Figure 3, and that of sentence (5b) is shown in Figure 4. Let us compare the complexities: (32) 9 8 7 6 5 4 ab ab a a 3 ab a a a a 2 ab 1 ab 0 ab the dog that chased the cat that saw the rat barked the cheese that the rat that the cat saw ate stank 5 For better linguistic treatment not affecting the point at hand, see Morrill (1994, Chap. 8). \ the barked 329 Computational Linguistics Volume 26, Number 3 S° I I ; CN ° CN• N S CN ° CN • N• S° ; — N° S• ; N° • ; \ \ N CN ° \ \ N. CN ° \ N° \ N° N° / \ / I / \ / I \ / \ / \ / / C&apos;• / / CN• / . \ the cheese that the rat that the cat SO.W ate stank Figure 4 Proof net analysis of (5b) the cheese that the rat that the cat saw ate stank. The profile of (5b) is higher; indeed it rises above 8, thus reaching what is usually taken to be the limit of short-term memory. Johnson attributes the increasing ill-formedness of centre embedded constructions to the number of incomplete depe</context>
<context position="27841" citStr="Morrill (1994" startWordPosition="4880" endWordPosition="4881">erence. A rudimentary account of sentence-peripheral quantifier phrase scoping is obtained in Lambek calculus by means of lexical assignments such as the following:7 (38) everyone - AxVy(x y) St/(N\St) everyone - AxVy(x y) (St/N)\St someone - Ax]y(x y) St/(N\St) someone - Ax]y(x y) (St/N)\St Given these assignments, one analysis of (7a) is that given in Figure 7. This is the subject wide scope analysis: its extracted and simplified semantics are as in (39). 7 For a more refined treatment (not requiring multiple lexical categorizations), for which the results of this paper stand unchanged, see Morrill (1994, Chap. 4). 332 Morrill Incremental Processing and Acceptability _ I I 1 I I I I I I I I I — — S° N• N° S• N• S° I s• \ \ N° / S• So someone loves everyone Figure 7 Proof net analysis for the subject wide scope reading of (7a) someone loves everyone (V). (39) a. (Ax]y(x y) A17xby(x y) A2(love 2 1))) b. 3xVy(love y x) A second analysis is that given in Figure 8. This is the object wide scope analysis: its extracted and simplified semantics are as in (40). (40) a. PaVy(x y) A2(AxAy(x y) (love 2 1))) b. Vya(love y x) Let us compare the complexity profiles for the two readings: (41) 4 3 ab 2 a 1 a</context>
</contexts>
<marker>Morrill, 1994</marker>
<rawString>Morrill, Glyn. 1994. Type Logical Grammar: Categorial Logic of Signs. Kluwer Academic Publishers, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Glyn Morrill</author>
</authors>
<title>Geometry of Lexico-Syntactic Interaction.</title>
<date>1999</date>
<booktitle>Proceedings of the Ninth Conference of the European Chapter of the Association for Computational Linguistics,</booktitle>
<pages>61--70</pages>
<location>Bergen,</location>
<contexts>
<context position="10242" citStr="Morrill (1999)" startWordPosition="1686" endWordPosition="1687">al derivations are often presented in the style of natural deduction or sequent calculus. Here we are concerned with categorial proof nets (Roorda 1991) as the fundamental structures of proof in categorial logic, in the same sense that linear proof nets were originally introduced by Girard (1987) as the fundamental structures of proof in linear logic. (Cut-free) proof nets exhibit no spurious ambiguity and play the role in categorial grammar that parse trees play in phrase structure grammar. Surveys and articles on the topic include Lamarche and Retord (1996), de Groote and Retord (1996), and Morrill (1999). Still, at the risk of proceeding at a slightly slower pace, we aim nonetheless to include here enough details to make the present paper self-contained. A polar category formula is a Lambek categorial type labeled with input (&apos;) or output (°) polarity. A polar category formula tree is a binary ordered tree in which the leaves are labeled with polar atoms (literals) and each local tree is one of the following (logical) links: A° ii 13* B° A&apos; i (18) a. A\ 13&apos; A\B° B• A°.. A&apos; B°. b. B I A B I A° 1 A° B°B° A° ii c. A .B• i A-B° Without polarities, a formula tree is a kind of formation tree of the</context>
</contexts>
<marker>Morrill, 1999</marker>
<rawString>Morrill, Glyn. 1999. Geometry of Lexico-Syntactic Interaction. Proceedings of the Ninth Conference of the European Chapter of the Association for Computational Linguistics, Bergen, pages 61-70.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mati Pentus</author>
</authors>
<title>Language completeness of the Lambek calculus.</title>
<date>1994</date>
<booktitle>Proceedings of the Eighth Annual IEEE Symposium on Logic in Computer Science,</booktitle>
<pages>487--496</pages>
<location>Paris,</location>
<contexts>
<context position="5617" citStr="Pentus 1994" startWordPosition="886" endWordPosition="887"> subset [AJI of L by residuation as follows: (11) [A.B] = E [All &amp; S2 E [A\B] = {SIVS&apos; E Si-ES E MI} [B/Al {siVs&apos; Ei[A]l,s+s&apos; E A sequent, F = A, comprises a succedent formula A and an antecedent configuration F, which is a a finite sequence of formulas.&apos; A sequent is valid if and only if in all interpretations the ordered adjunction of elements inhabiting the antecedent formulas always yields an element inhabiting the succedent formula. The following Gentzen-style sequent presentation is sound and complete for this interpretation (Buszkowski 1986, Dogen 1992), and indeed for free semigroups (Pentus 1994): hence the Lambek calculus can make an impressive claim to be the logic of concatenation; a parenthetical notation A (F) represents a configuration containing a distinguished subconfiguration F. F A z(A)=B (12) a. A = A id A(F) B F A L(B)=C A, r B \L \R b. A (F,A\B) C F A\B FrzA A(B) C F,A B /L /R c. A(BIA,F) C r BIA F A A B R .1, . d. F,A.B, A C By way of example, &amp;quot;lifting&amp;quot; A = B/(A B) is generated as follows: (13) A=A B=B \L A,A\B B jR A BI(A\B) 1 Officially, the antecedent is nonempty, a detail we gloss over. Cut 321 Computational Linguistics Volume 26, Number 3 And &amp;quot;composition&amp;quot; A \B, B\C</context>
</contexts>
<marker>Pentus, 1994</marker>
<rawString>Pentus, Mati. 1994. Language completeness of the Lambek calculus. Proceedings of the Eighth Annual IEEE Symposium on Logic in Computer Science, Paris, pages 487-496.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dirk Roorda</author>
</authors>
<title>Resource Logics: Proof-Theoretical Investigations.</title>
<date>1991</date>
<location>Universiteit van Amsterdam, Amsterdam.</location>
<note>D.Phil. dissertation,</note>
<contexts>
<context position="9780" citStr="Roorda 1991" startWordPosition="1610" endWordPosition="1611">y valid combinatory schemata, but rather with incrementality, for example, on a shiftreduce design. An approach (also based on regulation of the succession of rule application) to the associated problem of spurious ambiguity is given in Hepple and Morrill (1989) but again, to our knowledge, there is no predictive relation between incremental combinatory processing and the kind of processing phenomena cited in the introduction. 3. Proof Nets Lambek categorial derivations are often presented in the style of natural deduction or sequent calculus. Here we are concerned with categorial proof nets (Roorda 1991) as the fundamental structures of proof in categorial logic, in the same sense that linear proof nets were originally introduced by Girard (1987) as the fundamental structures of proof in linear logic. (Cut-free) proof nets exhibit no spurious ambiguity and play the role in categorial grammar that parse trees play in phrase structure grammar. Surveys and articles on the topic include Lamarche and Retord (1996), de Groote and Retord (1996), and Morrill (1999). Still, at the risk of proceeding at a slightly slower pace, we aim nonetheless to include here enough details to make the present paper </context>
</contexts>
<marker>Roorda, 1991</marker>
<rawString>Roorda, Dirk. 1991. Resource Logics: Proof-Theoretical Investigations. D.Phil. dissertation, Universiteit van Amsterdam, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark J Steedman</author>
</authors>
<title>Surface Structure and Interpretation.</title>
<date>1997</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="8493" citStr="Steedman 1997" startWordPosition="1405" endWordPosition="1406">presence of the entire sequent to be proved, i.e., it is in principle nonincrementah on the other hand, allowing incrementality on the basis of Cut would reinstate with a vengeance the problem of spurious ambiguity, for then what are to be the Cut formulas? Consequently, the sequent approach is ill-equipped to address the basic asymmetry of language—the asymmetry of its processing in time—and has never been forwarded in a model of the kind of processing phenomena cited in the introduction. 322 Morrill Incremental Processing and Acceptability An alternative formulation (Ades and Steedman 1982, Steedman 1997), which from its inception has emphasized a capacity to produce left-branching, and therefore incrementally processable, analyses, is comprised of combinatory schemata such as the following (together with a Cut rule, feeding one rule application into another): (17) a. A,A\B B BIA,A B b. A = (B I A)\B A B I (A\B) c. A\B,B\C A\C CIB,BIA CIA By a result of Zielonka (1981), the Lambek calculus is not axiomatizable by any finite set of combinatory schemata, so no such combinatory presentation can constitute the logic of concatenation in the sense of Lambek calculus. Combinatory categorial grammar d</context>
</contexts>
<marker>Steedman, 1997</marker>
<rawString>Steedman, Mark J. 1997. Surface Structure and Interpretation. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wojciech Zielonka</author>
</authors>
<title>Axiomatizability of Ajdukiewicz-Lambek calculus by means of cancellation scheme.</title>
<date>1981</date>
<booktitle>Zeitschrift fiir mat hematische Logik und Grundlage der Mathematik,</booktitle>
<pages>27--215</pages>
<contexts>
<context position="8864" citStr="Zielonka (1981)" startWordPosition="1470" endWordPosition="1471">ts processing in time—and has never been forwarded in a model of the kind of processing phenomena cited in the introduction. 322 Morrill Incremental Processing and Acceptability An alternative formulation (Ades and Steedman 1982, Steedman 1997), which from its inception has emphasized a capacity to produce left-branching, and therefore incrementally processable, analyses, is comprised of combinatory schemata such as the following (together with a Cut rule, feeding one rule application into another): (17) a. A,A\B B BIA,A B b. A = (B I A)\B A B I (A\B) c. A\B,B\C A\C CIB,BIA CIA By a result of Zielonka (1981), the Lambek calculus is not axiomatizable by any finite set of combinatory schemata, so no such combinatory presentation can constitute the logic of concatenation in the sense of Lambek calculus. Combinatory categorial grammar does not concern itself with the capture of all (or only) the concatenatively valid combinatory schemata, but rather with incrementality, for example, on a shiftreduce design. An approach (also based on regulation of the succession of rule application) to the associated problem of spurious ambiguity is given in Hepple and Morrill (1989) but again, to our knowledge, ther</context>
</contexts>
<marker>Zielonka, 1981</marker>
<rawString>Zielonka, Wojciech. 1981. Axiomatizability of Ajdukiewicz-Lambek calculus by means of cancellation scheme. Zeitschrift fiir mat hematische Logik und Grundlage der Mathematik, 27:215-224.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>