<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.875348">
THE SUBWORLD CONCEPT LEXICON AND THE LEXICON MANAGEMENT
SYSTEM
</note>
<author confidence="0.888019">
Sergei Nirenburg
</author>
<affiliation confidence="0.8917015">
Center for Machine Translation
Carnegie Mellon University
</affiliation>
<author confidence="0.672762">
Victor Raskin
</author>
<affiliation confidence="0.3813925">
Natural Language Processing Laboratory
Purdue University
</affiliation>
<bodyText confidence="0.998879692307692">
Natural language processing systems require three different types of lexicons: the concept lexicon that
describes the (sub)world ontology and the analysis and generation lexicons for natural languages. We
argue that the acquisition of the concept lexicon must precede any lexical work on natural language and
that a comprehensive lexicon management system (LMS) is necessary for lexicon acquisition in
large-scale applications. We describe the interactive concept lexicon acquisition module of the LMS for
TRANSLATOR, a knowledge-based, sublanguage-oriented machine translation project.
This project belongs to two of the fastest growing fields
of computational linguistics and artificial intelligence in
general: the lexicon and knowledge acquisition for Al
systems.
The work in lexicon has centered on a) studies
concerned with the utilization of conventional human-
oriented dictionaries, newly available in machine-read-
able form, for computational tasks (e.g., Amsler
1984a,b; Chodorow et al. 1985; Ahlswede 1985; Marko-
witz et al. 1986) improving the ancillary capabilities for
lexicon systems, such as, for instance, morphological
processors and descriptions (e.g., Nirenburg and Ben
Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c)
hand-building of lexicons necessary for natural language
systems, often with considerations about extensibility
(e.g., Zernik and Dyer 1985; Bessemer and Jacobs
1987). An interesting perspective on the field is given in
Miller (1985).
Knowledge acquisition is a central topic in Al and
expert systems. A number of systems exist for assis-
tance in acquiring specialized knowledge for natural
language processing. Thus, TEAM (Grosz et al. 1985),
TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso
et al. 1987) and some others are devoted to facilitating
customizations in the framework of database query
systems; INKA (Phillips et al. 1986) and CYC (Lenat et
al. 1986) are examples of knowledge acquisition systems
aimed at expert system design.
We would like to address some important method-
ological and strategic points in providing the lexicon
support in the context of a text processing system, such
as the machine translation system TRANSLATOR (Ni-
renburg et al. 1987).
</bodyText>
<sectionHeader confidence="0.856636" genericHeader="method">
1. NEED HELP BUILDING LEXICON
</sectionHeader>
<bodyText confidence="0.999625190476191">
A natural language lexicon is a necessary part of any
natural language processing (NLP) system. Building
such a lexicon is an important knowledge acquisition
task. The format of the lexicon has been the subject of
substantial number of research projects, both in linguis-
tics and in artificial intelligence (AI). In linguistic se-
mantics, the efforts have focused on the formal notation
for representing semantic knowledge with a special
emphasis on the involved categories and rules. The
projects have ranged from simple feature notations
(Katz, Fodor 1963; Bendix 1966) to script-based con-
textual analysis (Raskin 1986).
In Al, this type of work belongs to the area of
knowledge representation. A number of methods of
representing knowledge have been developed, ranging
from first-order predicate calculus notation to quite
sophisticated frame-based and advanced logical formal-
isms. (Brachman and Levesque 1985 summarizes the
state of the art in knowledge representation.)
By comparison, the number of projects devoted to
the design of procedures for compiling and maintaining
</bodyText>
<footnote confidence="0.83243275">
Copyright 1987 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted provided
that the copies are not made for direct commercial advantage and the CL reference and this copyright notice are included on the first page. To
copy otherwise, or to republish, requires a fee and/or specific permission.
0362-613X/ 87 /030276-289$03.00
</footnote>
<page confidence="0.804422">
276 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
</page>
<note confidence="0.817689">
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
</note>
<bodyText confidence="0.991316672897196">
a large lexicon has been relatively small. The usual
practice in Al has been to suggest a relatively well-
developed knowledge representation language and then
use it to represent a miniature world or a very restricted
sublanguage. It is clear, however, that for an NLP
system to be really useful, one needs not only to provide
a language in which to record the meanings of linguistic
units, but also, in fact, to record those meanings for a
non-miniature world (and its corresponding sublangu-
age).
The crux of this problem is generating linguistic
heuristics to support the growth of the representation of
the subworld/sublanguage. Indeed, there can be no
deterministic solution to the problem of knowledge
acquisition; therefore, weaker, heuristic methods
should be applied to (a) discovering the categories in
terms of which to account for the morphological, syn-
tactical, and semantical properties of words and phrases
of natural language and (b) developing guidelines for
compiling the lexicon for a natural language. It follows
from the above that new, sophisticated ways of human-
computer interaction must be devised in order to sup-
port the tasks of linguistic description in terms of
AI-style knowledge representation.
The implication of many workers in knowledge rep-
resentation that once the notation is developed it will be
easy to use it for actually describing the world, is clearly
anti-intuitive and anti-experiential, as anybody who has
ever developed an NLP system knows only too well.
Quite frequently, the lack of any reference to the
procedures of lexical description spells out the differ-
ence between a system conceived and a system exe-
cuted.
Thus, decisions to assign a word to a postulated
category, for instance, are far from straightforward —
many borderline cases have to be routinely considered
and resolved. In any large application, lexicon building
is typically done by a large number of relatively un-
trained people who are certain to make non-uniform
decisions in many cases. The instructions these people
obtain at the beginning of their work cannot be very
precise, unambiguous, or designed to provide in ad-
vance for any contingency. As a result, even a good
knowledge representation language cannot guarantee a
quality lexicon.
One can in principle think of avoiding these diffi-
culties through automation. Fully automated lexicon
building procedures would definitely ensure the unifor-
mity of description. There was a considerable enthusi-
asm about the possibility of a complete automation of
lexicology some 15-20 years ago (see, for instance,
Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973).
A more feasible scenario, however, is partial computa-
tional assistance for lexicology, probably along the lines
suggested in this paper, as well as utilizing such new and
promising resources as on-line dictionaries.
Recent work on machine-readable dictionaries offers
new and interesting possibilities both for the computer-
assisted lexicology (see Walker 1984) and for construct-
ing lexical databases derived from the definitions in
machine-readable dictionaries and utilized in NLP along
with other fields (see Amsler 1982, 1984a; Walker,
Amsler 1986, Calzolari 1984a,b). The premises and
goals of these efforts are fully compatible with our
belief, first, that no Al system is ready to make the kind
of decisions that lexicon building requires and, second,
that &apos;simply having an online version of an encyclopedia
[or a dictionary] would be of little use, as there is
practically nothing that current Al could draw from the
raw text. Rather, we must carefully re-represent the
encyclopedia&apos;s knowledge — by hand — into some
more structured form&apos; (Lenat et al. 1986:75). Such
re-representation would be necessary for Amsler&apos;s
(1984a:458) &apos;lexical knowledge base [which] is a repos-
itory of computational information about concepts&apos; and
which contains information derived from machine-read-
able dictionaries, the full text of reference books, the
results of statistical analysis of text usages, and data
manually obtained from human world knowledge.&apos;
This paper deals primarily with the last item on
Amsler&apos;s agenda. It is based on the following approach
to the problem of lexicon building. The work is done by
humans assisted by an interactive aid which enhances
productivity and ensures uniformity. It is important to
recognize that lexicon building in NLP involves the
acquisition of not one entity but rather of three interre-
lated but distinct lexicons, namely
a) the world concept lexicon which structures our
knowledge of the world
b) the analysis lexicon which is indexed by natural
language words and phrases connected with concepts
from the world concept lexicon, and
c) the generation lexicon, which is indexed by con-
cepts in the world concept lexicon connected with
natural language words and phrases.
In reality, Al systems deal not with the entire world
but typically with a well-specified subworld of it. In
other words, in any practical application, the world
concept lexicon will, in fact, be a subworld concept
lexicon. In the area of machine translation the analysis
and generation lexicons involve two different natural
languages, which creates the task of building such
resources as, say, an English — subworld and subworld
— Russian lexicons, as is the case, for example, in
TRANSLATOR, the knowledge-based machine trans-
lation project for the computer subworld (see Nirenburg
et al. 1985, 1986, 1987).
</bodyText>
<sectionHeader confidence="0.992774" genericHeader="method">
2. WORLD FIRST, WORD LATER
</sectionHeader>
<bodyText confidence="0.979136432835821">
We assert that of the three lexicons described above,
the first to be built must be the subworld concept
lexicon. The availability of such a lexicon is a sine qua
non for any subsequent lexical work in NLP.
The recognized necessity to describe the concept
lexicon prior to dealing with natural languages is a
feature which clearly distinguishes our approach from
Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 277
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
other work on lexical aids (e.g., Ahlswede 1985) and
brings us closer to some non-NL work on knowledge
acquisition (e.g., Lenat et al. 1986).
Ahlswede (1985) describes a typical approach to
lexicon building in a constrained subworld. The sub-
world is that of stroke medicine. The interactive aid is
designed for the analysis lexicon, in our terminology.
The concept realm is not discussed at all, though the
four major semantic features used in this lexicon are
obviously underlain by subworld concepts. As a result,
the structure and interrelations of concepts cannot be
conveniently reasoned about. Thus, for instance, the
distinction between &apos;general&apos; and &apos;specific&apos; features is
not supported by the ontology and is not really used,
since only one subworld is chosen.
We agree with those who believe that each subworld
must be described fully and uniformly prior to the
introduction of any semantic feature. This may not be
feasible or practical for some very rich domains — it is
definitely beyond reach as far as the whole world served
by the whole language is concerned. However, most
NLP systems are designed for constrained domains,
and it will probably remain this way for some time.
The description of a subworld is a matter of distin-
guishing all the relevant concepts in it and arranging
them in a logical, consistent, and meaningful way. We
agree entirely with Lenat et al. (1986:75) that to create
a knowledge acquisition system, &apos;we must encode all
the world&apos;s knowledge down to some level of detail;
there is no way to finesse this.&apos; We differ from them by
our overt, theoretically built-in emphasis on limited
subworlds. More importantly, we want to assist the
&apos;knowledge enterers&apos; with an interactive aid it is not at
all clear how the CYC system of knowledge acquisition
which Lenat et al. describe can ensure the quality and
uniformity of the descriptions without such a device.
Another reason why it is important as well as conve-
nient to precede the lexical work with the description of
the subworld is that such a description is natural lan-
guage-independent. In other words, the same subworld
may correspond to sublanguages of different natural
languages. In MT, the representation of the subworld
functions as — and is — the interlingua. Beginning
directly with the lexicon of a natural language would
make the implied subworld biased toward this language,
and this is known to have an adverse affect on the
description of other natural sublanguages corresponding
to the same subworld.
The subworld concept lexicon determines the struc-
ture of the associated analysis and generation lexicons.
Thus, the constrained nature of the subworld (see
Raskin 1985 and references therein as well as Kittredge
and Lehrberger 1982 and Grishman and Kittredge 1986)
always severely limits polysemy/homonymy so rampant
in the language as a whole. Thus, the concept lexicon
for the computer subworld will make it clear that there
is a need to accommodate only meanings (5) and (7) in
the lexical entry for operator in the corresponding
</bodyText>
<listItem confidence="0.913530818181818">
sublanguage of English, even though the English lan-
guage possesses all of the meanings listed in Figure 1
(cf. SOED 1973:1453).
(1) one who does something, an agent
(2) one who is professionally engaged to perform a
certain operation
(3) a surgeon
(4) one who carries on financial operations
(5) one who works a machine
(6) one who works a business
(7) a symbol
</listItem>
<figureCaption confidence="0.999669">
Figure 1. Meanings of operator
</figureCaption>
<bodyText confidence="0.999950736842105">
In fact, (5) will be narrowed down even further in the
sublanguage. to &apos;one who works a computer&apos; and this is
what the English (or any other natural language) lexical
entry should be limited to.
The subworld concept lexicon also determines, to a
large extent, the inventory of semantic features used in
the entries of the analysis and generation lexicons, the
values of those features, and their status. Thus, a binary
semantic feature is usually induced by a branching in
the `isa&apos; hierarchy underlying the concept lexicon.
Frame slots are suggested by a perceived link between
some two hierarchically unrelated concepts in the con-
cept lexicon. The relative importance and scope of
features used in analysis and generation lexicons de-
pends on the status of the corresponding concepts in the
concept lexicon. We now rest our case for the priority
of the concept lexicon over the analysis and generation
lexicons and proceed to describe a system for facilitat-
ing lexicon acquisition and maintenance.
</bodyText>
<subsectionHeader confidence="0.729472">
2.1 THE DESIGN OF A LEXICON MANAGEMENT
SYSTEM.
</subsectionHeader>
<bodyText confidence="0.999400695652174">
In a large-scale NLP application, the process of acquir-
ing and maintaining the various lexicons cannot be left
unattended. Therefore, any such application requires a
lexicon management system (LMS). Historically, rela-
tively less attention has been devoted to the lexicons in
this context than to either the grammars or the actual
processing modules — parsers, inference engines, and
generators. The importance of an LMS grows propor-
tionally to the size of the lexicons necessary for an
application and also to the depth of coverage. Thus, for
instance, it is extremely important to use a principled
LMS in a knowledge-based machine translation system
where the lexicons must cover not only the usual
morphological and syntactic knowledge but also the
semantic and pragmatic knowledge about the transla-
tion area and where the typical number of concepts in
such an area is large.
An LMS is a collection of programs that help create,
augment, modify, and test the various lexicons in an
NLP application. The particular LMS described in this
paper is suggested for the TRANSLATOR project. The
goal of TRANSLATOR is ultimately to develop a
knowledge-based multilingual machine translation sys-
</bodyText>
<page confidence="0.921824">
278 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
</page>
<figure confidence="0.940075909090909">
The Subworld Concept Lexicon and the Lexicon Management System
Sergei Nirenburg and Victor Raskin
Subworld
Concept
Lexicon
Subworld
Concept
Lexicon
Subworld
Concept
Lexicon
</figure>
<figureCaption confidence="0.996547">
Figure 2. The architecture of the TRANSLATOR Lexicon Module, including the Lexicon Management System (LMS). At
present, the world concept lexicon is identical with the only subworld concept lexicon—that of computer science.
</figureCaption>
<figure confidence="0.9971925">
LMS
World
Concept
Lexicon
Analysis Analysis Generation Generation
Lexicon Lexicon Lexicon Lexicon
(Natural I (Natural (Natural (Natural
Language A) I Language B) Language C) Language A)
Knowledge
Representation
Language
DRL
</figure>
<bodyText confidence="0.993123333333333">
tern for multiple subject areas. Various modules in the
system are designed so as to allow interactive human
participation with no pre- or post-editing. The LMS is
one such module.
The lexicon component of TRANSLATOR (Figure
2) contains four types of lexicons:
1. the subworld concept lexicons, which contain
representations, in the DRL knowledge represen-
tation language (Nirenburg, Raskin, Tucker 1986),
of concepts that belong to a particular subworld,
such as, for instance, the subworld of weather
reports or of research papers in computer science;
</bodyText>
<listItem confidence="0.841812428571428">
2. the world concept lexicon, in which the informa-
tion from all the available subworld concept lexi-
cons is merged;
3. the analysis lexicons, whose entries are indexed by
lexical units in a natural language and which
contain
a) syntactic information about these units;
b) a pointer to a corresponding concept in the con-
cept lexicon (this link essentially assigns semantic
meaning to the lexical unit; note that some lexical
units do not correspond to concepts); and/or
c) additional control and constraint information for
the use of the analysis module of the underlying
NLP system.
</listItem>
<bodyText confidence="0.942023040816326">
4. the generation lexicons, whose entries are indexed
by concepts in the concept lexicon and which contain
pointers to corresponding lexical units in the target
language. (Note that the analysis and generation lexi-
cons are not symmetrical; for a detailed analysis of the
differences see Nirenburg and Raskin 1989.)
LMS maintains all four types of lexicons. In this
paper we will concentrate on describing that part of the
LMS which is devoted to the maintenance of one
subworld concept lexicon (that of computer science
research).
The primary purpose of an LMS at the first stage of
the project is to support knowledge acquisition. At later
stages in the life of the LMS, testing and modification
will become the primary types of work it supports. An
ordinary LMS user, i.e., an enterer, will obtain at this
stage a list of concepts to enter in the concept lexicon
and will code the information about them in DRL. The
LMS assists the enterer by providing graphic and other
aids for human decision making. In case of doubt, the
enterer can try to resolve the difficulty or to refer it to
the lexicon manager, whose responsibility it is to force
solutions to problems in lexicon acquisition.
The task of the manager has much in common with
that of a database administrator in the database system
Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 279
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
environment. In their respective capacities, they are
both responsible for
a) maintaining the format and contents of the knowl-
edge representation language (&apos;data dictionary&apos; in
database terms);
b) defining and executing the security and integrity
checks for the accumulated data;
c) developing and running statistic analysis routines
to monitor access time, etc. (this becomes impor-
tant in production-size lexicon systems);
d) interfacing with regular users (enterers for the
lexicon manager).
In addition to the above, the lexicon manager also
modifies the knowledge representation language in ac-
cordance with the evidence accumulated in the process
of knowledge acquisition.
The LMS thus has two modes of operation: a mode
for enterers and a mode that supports the activities of a
lexicon manager. In what follows we will describe and
illustrate how these modes are implemented in the
TRANSLATOR LMS. The system has been imple-
mented in Zetalisp on a Symbolics 3600 Lisp Machine.
</bodyText>
<subsectionHeader confidence="0.99767">
2.2 A DRL ONTOLOGY FOR COMPUTER SUBWORLD
</subsectionHeader>
<bodyText confidence="0.994401380434783">
The intended result of the first stage of research re-
ported in this paper is a computer subworld concept
lexicon. The subsequent stages will add a number of
analysis and generation lexicons. We have argued that
for the purpose of lexicon building it is necessary to go
beyond just proposing a knowledge representation
framework. It is necessary to use it for the construction
of actual lexicons and to keep using it until the lexicons
are judged sufficiently complete. An LMS must contain
a set of interactive aids to facilitate this type of activity.
The first step is, however, still to suggest a knowl-
edge representation scheme for coding lexical meanings
in a concept lexicon. Structurally, the concept lexicon
can be viewed as a complex network, with concepts as
nodes. The connections in this network place the nodes
in various hierarchies and classify them on the basis of
certain characteristics and constraints. We suggest a
frame-based representation in which frames correspond
to concepts, and slots convey constraints on the mean-
ing of these concepts. The sets of values that can
occupy certain slots, the domains of the latter, can be
further classified. Thus, some slots take names of
concepts in the world as values (such are hierarchy-
related slots); some others, take values from specially
defined property sets. The slots can be occupied by any
number of members of the corresponding domain, and
the logical operators and, or, and not can be used to
augment the expressive power. Also, in every case, the
semantics of the constraints in the lexicon is that of
default knowledge: the contents of a slot are understood
as typically constraining the meaning of the concept.
The semantic character of a slot in a concept lexicon
frame underscores a careful distinction that should be
made between concept types and concept tokens. Such
a distinction is common in certain knowledge represen-
tation languages (see Brachman and Schmolze 1985;
Nirenburg et al. 1986). Concept types belong in the
lexicon; concept tokens are instantiations of concept
types obtained as a result of analyzing natural language
inputs. One kind of knowledge representation can be
used for both types and tokens, a frame-based notation
being one of them. (Of course, due to a number of
possible reasons, a complete knowledge representation
system can use one type of representation for the types
and another for the tokens, cf. Hobbs 1985 for a
discussion of such a position.) The frames for a type and
its token will not, however, be identical in structure.
The semantic content of slots in a lexicon (type) frame
is different from that of the corresponding slots in the
text (token) frame. Concept tokens have their slots
occupied by actual values of properties; if information
about a property is not forthcoming, then the default
value (if any) is inherited from the corresponding type
representations. For example, the frame for a verbal
action type and a verbal action token can have a slot
named &apos;agent.&apos; However, in the former case, the slot
can be occupied by a concept type, such as, for in-
stance, &apos;human.&apos; In the latter case, the slot must be
occupied by a concept token, such as `John23.&apos; If the
analysis program cannot make a decision as to what
token(s) must occupy a slot, it produces a temporary
filler token where constraints will be inherited from its
corresponding type. In this case, it may be `personl
with all the constraints of the type &apos;human&apos; inherited.
The concept lexicon forms a tangled ISA hierarchy
with property inheritance. However, the examples be-
low are simplified to make it look as a strict hierarchy.
The current version of the top levels of this hierarchy is
shown in Figure 3. The actual world ontology in a
working system depends on the subworld for which it is
developed. We will survey the concept frames in the
order suggested by the ISA hierarchy.
all ::= (all
(id string)
(subworld subworld*))
This is the root of the isa hierarchy. The two slots
mean that every node has an id and represents a concept
that belongs to one or more subworlds.
process ::= (process
(isa all)
(patient object))
At this level we meet the `isa&apos; slot, the pointer to a
node&apos;s parent in the hierarchy. Processes, as one can
see from Figure 3, divide into actions and states. The
only overtly mentioned property common to all pro-
cesses is the conceptual case of &apos;patient&apos; (this reflects
our opinion that in the English sentence &apos;John is asleep&apos;
John is not an agent, but rather a patient). Note that
&apos;patient&apos; subsumes the semantics of &apos;beneficiary.&apos;
action ::= (action
(isa process)
(consists-of process-sequence)
</bodyText>
<page confidence="0.720061">
280 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
</page>
<figure confidence="0.996381974358974">
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
t alive
plant
creature
animal
person
physical-object,
natural
object
--------
- alive container
----_,__..._...._......
letter
artifact
\ document newspaper
book
vehicle
device computer
-......._,_
writing device
material
all
mental-object data database
information editor
program compiler
DBMS
physical - stote
state
mental- state
reaction
process menial-action - cognition
perception
assertion
speech -action req-info
request
req -action
move
physical-action ingest
operate
</figure>
<figureCaption confidence="0.984958">
Figure 3. A fragment of the ISA hierarchy for the computer science world.
</figureCaption>
<figure confidence="0.9360207">
action
(part-of process*)
(preconditions state*)
(effects state*)
(tempor process*)
(agent creature)
(object all)
(instrument object)
(source object)
(destination object))
</figure>
<bodyText confidence="0.694822">
The action frame contains two groups of slots:
</bodyText>
<listItem confidence="0.983665833333333">
a) paradigmatic relation slots (isa, consists-of, part-
of, preconditions, effects, tempor) that connect it
with other processes;
b) syntagmatic relation slots (the conceptual case
slots agent, object, instrument, source and desti-
nation; patient is inherited).
</listItem>
<bodyText confidence="0.808963933333333">
The consists-of slot contains either the constant
&apos;primitive,&apos; if the action is not further decomposable, or
a description of the sequence of actions which comprise
the given action. This sequence is a list of action names
connected by the operators sequential, choice and
shuffle. In other words, an action can be a sequence of
subactions (&apos;sequential&apos;), a choice among several subac-
tions (&apos;choice&apos;), a temporally unordered sequence of
subactions (&apos;shuffle&apos;) or any recursive combination of
the above. This treatment of processes is inspired by
Nirenburg, Nirenburg, Reynolds 1985. The tempor slot
connects the action with other actions that typically
occur proximally in time to it. Metaphorically, while
consists-of describes children, tempor describes sib-
lings.
</bodyText>
<equation confidence="0.9586428">
physical-action ::= (physical-action
(isa action)
(object physical-object))
mental-action ::= (mental-action
(isa action))
</equation>
<bodyText confidence="0.512520166666667">
Only creatures can be fillers for the agent slot.
Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 281
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
Mental actions further classify into reaction (cf. the
English please or like), cognition (deduce) and percep-
tion actions (see).
</bodyText>
<equation confidence="0.383066285714286">
speech-action ::= (speech-action
(isa process)
(consists-of primitive)
(agent person)
(patient person* I organization*)
(object event)
(source agent)
</equation>
<bodyText confidence="0.676684333333333">
(destination patient))
Speech processes are &apos;primitives&apos;. The agent slot
filler has the semantics of the speaker. The patient is the
</bodyText>
<equation confidence="0.913919235294117">
hearer.
state ::= (state
(isa process)
(part-of state*))
The actant in states, which is the patient rather than
the agent, is inherited from the process frame.
object ::= (object
(isa all)
(part-of object*)
(consists-of object*)
(belongs-to creature I organization)
(spatial physical-object*)
(object-of mental-action speech-action)
(patient-of process)
(instrument-of process)
(source-of process)
(destination-of process))
</equation>
<bodyText confidence="0.881283666666667">
Once again two groups of slots describe paradigmatic
and syntagmatic relations. The spatial slot lists objects
that typically appear proximally in space to the current
object. The . . .-of slots have the semantics of &apos;typical
. . .-of&apos; and are complementary to the conceptual case
slots in process descriptions.
The other type of slot fillers in the DRL frames is a
set of property values. Properties are defined in the
world, each with a corresponding set (domain) of prop-
erty values. Only an illustration of property values is
given here. Many more exist and are used in the lexicon
description.
size-set ::= (infinitesimal . . . huge)
color-set ::= (black . . . white)
shape-set ::= (flat square spherical . . .)
</bodyText>
<equation confidence="0.91785775">
subworld-set ::= (computer-world business-world
everyday-world . . .)
boolean-set ::= (yes no)
texture-set ::= (smooth . . . rough)
</equation>
<bodyText confidence="0.9851645">
A path of concepts from the root to a leaf node in the
isa hierarchy is presented below and followed by the
corresponding frames (the frames for all and object are
given above).
</bodyText>
<equation confidence="0.950267621621622">
all—&gt;object—&gt;physical-
object—&gt;+alive—&gt;creature--&gt;—&gt;person—&gt;computer-user
physical-object ::= (physical-object
(isa object)
(object-of (+ (take put))
(size size-set)
(shape shape-set)
(color color-set)
(mass integer))
The &apos; sign in slots means all inherited information
plus the contents of the current slot.
+alive ::= (+alive
(isa physical-object)
(edibility boolean-set))
creature :::= (creature
(isa +alive)
(agent-of (eat ingest drink move
attack))
(consists-of (head body))
(object-of (+ (attack))
(power power-set)
(speed speed-set))
person ::= (person
(isa creature)
(agent-of (+ (take put find speech-action
mental-
action)))
(source-of speech-action)
(destination-of speech-action)
(consists-of (+ (hand foot . . .)))
(power human)
(speed slow)
(mass human))
computer-user ::= (computer-user
(isa person)
(agent-of (+ operate))
(subworld computer-world))
</equation>
<bodyText confidence="0.9995076">
The complete frame of the leaf of this path, &apos;computer-
user,&apos; including all inherited slots and default values, is
listed below. In reality frames like this do not exist,
because the tokens of this type do not contain all the
possible slot fillers.
</bodyText>
<equation confidence="0.739388166666667">
(computer-user
(isa person)
(consists-of (hand foot head body))
( belongs-to none)
(part-of organization*)
(spatial physical-object*)
</equation>
<bodyText confidence="0.7966311">
(agent-of (operate take put find speech-action
mental-action eat ingest drink move attack))
(object-of (find mental-action speech-action at-
tack take put))
(destination-of speech-action)
(source-of speech-action)
(power human)
(speed slow)
(mass human)
(subworld computer-world))
</bodyText>
<page confidence="0.876693">
282 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
</page>
<figure confidence="0.9929228125">
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
the 11,55.4- hiernrchti
fr••■
COMMAND:
insert
modify-tree
modify-node
delete
LETTER
BOOK
NEUSPAPER
PHYSICAL-OBJECT
&apos;ALIVE
PLANT CREATURE
ANIMAL
VEHICLE
BEV CE
COMPUTER
MATERIAL INFORMATION
CONTAINER DOC
SMITING-DEVICE
FIRT FACT NATURAL PROGRAM DAT\R
DIMS DATABASE
Command
:
(leaf
con)
COMPUTER-USER&apos;S attributes.
ISA person
CONSISTS-OF hand foot head body
BELONGS-TO
PART-OF
SPATIAL
AGENT-OF
OBJECT-OF
DESTINATION-OF
SOURCE-OF
POWER
SPEED
MASS
Do It 0
RETAIN MOBJEt__
01
Ell 0
0 0
O 0
Et 0
drink move attack 0 10
Ok o
o o
a o
a o
a o
o a
Abort EF
organization
physical-object
take Out find speech-action mental-action eat ingest
find mental-action speech-action attack take put
speech-action
speech-action
human
slow
human
</figure>
<figureCaption confidence="0.99978">
Figure 4. Entering computer-user, I.
</figureCaption>
<sectionHeader confidence="0.9520305" genericHeader="method">
3. Two SAMPLE SESSIONS WITH THE SUBWORLD
MODULE OF THE TRANSLATOR LMS
</sectionHeader>
<bodyText confidence="0.999991538461538">
We will demonstrate the work of the subworld module
of the TRANSLATOR LMS on two examples. They
will illustrate the two modes discussed in 2.1, the
enterer and manager modes. The first, simple example
will involve the placing of a concept in an appropriate
slot of the `isa&apos; tree and checking the slots of the
inherited frame for appropriate values. All of these
operations will be executed in the enterer mode. The
second, more complicated example will present serious
difficulties for the enterer and will require the manager&apos;s
full authority for the resolution of the problem. In other
words, the first example will leave the existing ontology
intact while the second will require its modification.
</bodyText>
<subsectionHeader confidence="0.982861">
3.1 THE ENTERER MODE: ADDING THE CONCEPT
COMPUTER-USER.
</subsectionHeader>
<bodyText confidence="0.999787571428571">
This concept represents meaning (5) in the dictionary
entry for the English word operator (see Figure 1). The
task of the enterer essentially involves the following
operations:
Insert: finding the appropriate slot in the isa hierar-
chy to which the new concept will be attached as a leaf
child
Fill: describing all the properties of this concept by
modifying, wherever necessary, the slot fillers of the
inherited frame
Check: checking whether the property values chosen
distinguish it from its parent and siblings.
The LMS helps the enterer with all- three of these
activities. To decide on the position of the concept in
the hierarchy, the enterer can browse through its graph-
ical representation and view the frames corresponding
to any node (concept) in it. If the enterer has to consider
more than one possibility, the frames for several candi-
date parents for the node to be inserted, can be dis-
played — in the current implementation up to three
candidate frames can be displayed simultaneously. In
the case of computer-user the enterer does not have a
difficulty in selecting person as the only candidate
parent node.
When the place for a concept is found, a menu
containing all slots pertinent for the parent node frame
which incorporates all the slots and slot fillers it inher-
ited from its ancestors, appears on the screen. The
enterer scans the menu and modifies, wherever neces-
sary, the values in these slots. Figure 4, shows the state
of the process for entering computer-user when the
values for the agent-of slot are being considered. Note
that the system provides additional help by listing
candidate &apos;values for this slot. The set of candidates is
produced automatically by determining the common
</bodyText>
<note confidence="0.466593">
Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 283
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
</note>
<figureCaption confidence="0.7177525">
the 155* hierastrichn
Figure 5. Entering computer-user, II.
</figureCaption>
<figure confidence="0.970319857142857">
the &apos;1555&apos;it. hiernrchu
*ALIVE -ALIVE MATERIAL INFORMATION
/ \
PLANT T HRT FACT
„„E PRO RAM \ \
NATURAL DATA
ANIMAL
PERSON\
DEVICE CONTAINER DOCUMENT EDITOR COMPILER DBMS DATABASE
VEHICLE COMPUTER BRITING-DEVICE LETTER NEWSPAPER BOOK
COMMAND:
insert
modify-tree
modify-node
delete
Command
: (lexi
con)
Lisp Lis
INHFRITFD DFFRULTS RETAIN DEI ETE
take 181 0
</figure>
<bodyText confidence="0.898309777777778">
put 0 0
find 0 0
speech-action 0 0
mental-action 0 0
eat 0 0
ingest 0 0
drink 0 0
move 0 0
attack 0 0
</bodyText>
<figure confidence="0.842878860465116">
Do It 0 It Abort
OBJECT
PHYSICAL-OBJECT
vv
COMMAND:
insert
modify-tree
modify-node
delete
Command
: (lex
icon).
Lisp Lis
OBJECT
PHYSICAL- 777,MENTAL-OJECT
77
/01LIE -ALIVE
MATERIAL INFORMATION
PLANT CREATURE ART FACT NATURAL PRO Ron DATA
■\
\\\
ANIMAL :ERSON DEVICE CONTAINER DOCUMENT EDITOR COMPILER DBMS DATABASE
VEHICLE COMPUTER WRITING-DEVICE LETTER NEWSPAPER BOOK
1 ADDITIONAL VALUES ADD DON&apos;T ADD
operate 0 0
Do Ito Abort 0
284 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
the IS* hierarch
PHYSICAL-OBJECT
z-RLIVE
PLANT CREATURE ARTIFACT NATURAL
ANIMAL PERSON DEVICE CONTAINER OOCUMEMT
COMPUTER-USER VEHICLE COMPUTER URITIHC-OEVICE LETTER AMMER BOOK
COMMAND:
insert
modify-tree
modify-node
delete
Command
: (lexi
con) I
Lisp Lis
</figure>
<figureCaption confidence="0.999898">
Figure 5A. Entering computer-user, III.
</figureCaption>
<bodyText confidence="0.999993888888889">
ancestor of the inherited slot values (in this case,
&apos;action&apos;) and suggesting to the enterer all the descen-
dants of this ancestor node that are not currently listed
as the slot values. For slots whose value domains are
not concepts but rather property values, the help mech-
anism simply lists the complete list of values for discrete
domains and the appropriate ranges for the continuous
ones. In our example, the enterer adds operate to the
values of the agent-of slot. Another important ability
(not illustrated in the example) is adding new slots to
various frames and then supplying fillers for them.
When the slot filling stage is completed (this stage of
the process is illustrated in Figure 5), it is necessary to
check whether the new node is distinct from its parent
and siblings. In our example, the new concept does not
have siblings, therefore only the former distinction is
tested. The parent distinction check is performed auto-
matically — the system will alert the enterer if there has
been no changes (except for the `isa&apos; slot filler) to the
frame displayed for modification at the Fill stage. If this
happens, the new concept is discarded as a duplicate of
the parent node. In our example, an additional value has
been added to the agent-of slot. The sibling distinction
check is facilitated in the LMS by allowing the enterer
to view the frames for the concept and its siblings
alongside one another. In case no distinction can be
found between the new concept and one of its siblings,
the new concept is deleted as a duplicate. In general,
before deleting a new concept because of duplication,
the enterer makes an effort to save it by changing at
least one slot value in either of the two duplicate frames.
This may involve adding an existing concept or a
property value from the current domain. However, in
some cases, a new concept or a modification of a
property domain may be required. Each such case is
reported to the manager.
</bodyText>
<subsectionHeader confidence="0.9956385">
3.2 THE MANAGER MODE: ADDING THE CONCEPT
MANAGE(-DATABASE)
</subsectionHeader>
<bodyText confidence="0.999911666666667">
The enterer first decides to insert the new concept
manage(-database) as a sibling of operate and, there-
fore, selects physical-action as the parent node. When
the frame menu is displayed, however, he discovers a
major discrepancy — manage(-database) requires the
&apos;mental-object&apos; filler for the object slot. The enterer
then makes an attempt to attach the new concept as a
child of the mental-action node but cannot accept
reaction, cognition, and perception as the siblings of
manage(-database) for reasons of significant conceptual
dissimilarity. At this point, the enterer decides to refer
the matter to the manager. This is accomplished by
writing a report about the situation and sending it
through the mail system.
At this point the responsibility for processing this
</bodyText>
<figure confidence="0.93739464">
Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 285
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
the 1,55.* hierarchm
COMMAND:
insert
modify-tree
modify-node
delete
Connand
(le
xicon &apos;
manager
)1
Lisp Lis
PHYSICAL-STATE MENTAL-STATE
ROVE OPERATE
REO-INFO
Delete a Child
Show Attributes
Display Subtree
Exit
REQ-ACTION
RENTAL-ACTION
PERCEPTION
REACTION COGNITION
</figure>
<figureCaption confidence="0.999726">
Figure 6. Changing the descendents for mental-action, I.
</figureCaption>
<bodyText confidence="0.999982215686275">
concept passes to the manager. In addition to the
enterer&apos;s message the manager also has access to the
enterer&apos;s attempts to insert manage(-database) into the
hierarchy. The manager is, naturally, capable of han-
dling all the enterer&apos;s tasks; but the LMS manager mode
has additional functionality. The enterer is allowed to
perform only one operation on the `isa&apos; hierarchy —
adding leaves to it. The manager can perform all the
operations on this tree — insert new nodes anywhere in
it; delete nodes (either with their subtrees or without, in
which case the children of the deleted node become
children of the latter&apos;s parent); and move subtrees to a
different position. The manager is also entitled to create
additional property sets (domains) and add and delete
values in the existing ones. Finally, the manager&apos;s
authority also covers adding, deleting and modifying the
value domains of all slots in all concept frames. Each of
these capabilities is supported by LMS routines.
In our example, the manager has to reorganize the
subtree whose root is mental-action. First, he finds the
necessary node and calls a menu of operations on a
node (Figure 6). Clicking on &apos;delete-child&apos;, he obtains
another menu, in which he indicates that he wants to
detach the children of the node. The result of this
operation is illustrated in Figure 7. At this point the
insertion of the two intermediate concepts: computer-
mental-action and non-computer-mental-action can be
performed (which is supported in the manner illustrated
in 3.1 above). During the insertion process the manager
acts exactly in the same manner as an enterer. Tempo-
rarily disregarding the detached children, he inserts the
intermediate concepts one by one.
At the next stage, the former children of mental-
action are reconnected to the hierarchy as children of
non-computer-mental-action. Once again, the manager
acts here as an enterer, filling the frame slots and
running the sibling and parent distinction checks. Next,
manage(-database) is attached as a child of the com-
puter-mental-action node. Again, all the insert-time
checks are run. At this point the manager decides to
develop the computer-mental-action node further de-
ductively, that is, without waiting for empirical evi-
dence for this to accumulate. He decides to enter the
nodes write-code and use-interactive-system as siblings
of manage(-database). This operation is entirely at the
manager&apos;s discretion and expresses the manager&apos;s un-
derstanding of the computer world and his expectations
concerning the concepts that will have to be added to
the ontology in the future. After these concepts have
been added to the world, the subtree with the root
mental-action will look as in Figure 8.
</bodyText>
<page confidence="0.882207">
286 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
</page>
<table confidence="0.9797393125">
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
the 11.5M hierarchn
11
PROCE S COMMAND:
STATE ACTION insert
---- modify-tree
PHYSICAL-STATE MENTAL-STATE PHYSICAL-ACTION SPEECH-ACTIO N RENTAL-ACTION modify-node
HOYEOPERRTE INGEST E delete
RE ST ASSERTION
\\
REO-INFO REO-ACTION Commend
k : (le
■--------------7 xicon &apos;
REACTION COGNITION PERCEPTION manager
) II
Lisp Lis
</table>
<figureCaption confidence="0.997702">
Figure 7. Changing the descendents for mental-action, II.
</figureCaption>
<sectionHeader confidence="0.997125" genericHeader="discussions">
4. DISCUSSION
</sectionHeader>
<bodyText confidence="0.999970830188679">
The TRANSLATOR LMS has been implemented only
in its initial stage, so that its functionality at present is
more constrained than it will be when the LMS attains
full capacity. We would like to discuss here the func-
tionality upgrades under development at the present
time.
First, the manager&apos;s ability to maintain integrity and
consistency in the lexicons must be further supported.
This capability includes modifications of the existing
concept lexicon entries which are affected by the inser-
tion of a new concept by an enterer or the manager or by
the manager&apos;s revision of the domain of a frame slot. At
present, the LMS can automatically find and modify the
values in slots complementary to the ones modified. For
example, in our first sample session, after the enterer
adds &apos;operate&apos; to the agent-of slot of computer-user, the
system automatically adds computer-user to the agent
slot of `operate.&apos; But more should be expected. Thus, in
our second sample session, after the manager inserts the
computer-mental-action and non-computer-mental-
action as the children of mental-action,&apos; the LMS
should be able to generate a suggestion that he consider
a symmetrical modification in the sibling branch (phys-
ical-action), which would make operate a child of
computer-physical-action.&apos; In general, we feel that the
LMS should provide more heuristic support for the
manager&apos;s thought processes concerning ontology mod-
ifications.
This latter modification, along with the one the
manager actually executed in the sample session, would
be a step in the transition from the world ontology in
Figure 3 to the computer subworld ontology. Some of
these changes accurately reflect the differences between
the world and the subworld, i.e., in this case, the
distinction between concepts of computer-related and
non-computer-related is central for the subworld but
not for the world. Other changes in the ontology include
the correction of mistakes and the refining of the
hierarchies suggested by the accumulation of data and
experience. Thus, we will not be surprised if additional
data will provide evidence for making speech-action a
descendant of mental-action instead of action.
An additional source of insight into the improvement
of the LMS will be provided by its use. Thus, it is
difficult to know a priori how many enterers a single
manager will be able to supervise; what forms of the
interaction between the enterers and the manager are
most effective; whether it is possible to support a
concurrent mode of operation in which more than one
enterers work on one hierarchy simultaneously; or
should there be levels of priority assigned to the mes-
sages from enterers to the manager or mechanisms for
clustering similar messages (if the messages are forced
</bodyText>
<figure confidence="0.902250823529412">
Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 287
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
the ISA. hierstrehgt
DENTAL-ACTION
COMPUTER-M-A REACTION COGNITION PERCEPTION
MANAGE-DB UNITE-CODE USE-INTER-SYSTEM
COMMAND:
insert
modify-tree
modify-node
delete
Command
(in
x i con &apos;
manager
)
Lisp Lis
</figure>
<figureCaption confidence="0.999987">
Figure 8. Changing the descendents for mental-action, III.
</figureCaption>
<bodyText confidence="0.983076891891892">
into a certain format). A separate concern is a detailed
set of on-line instructions for quick reference both by
the enterers and the manager. It should be added to the
LMS in the tutorial, reference-manual and keyword-
based help mode format.
So far in this section, we have been discussing the
depth-wise improvements to the TRANSLATOR LMS.
The breadth-wise development concerns the analysis
and generation lexicons. The work on those can be
completed only after the subworld concept lexicon is
already reasonably complete.
In the analysis lexicons, indexed by the words or
word equivalents, the entries will contain conceptual
information from the subworld concept lexicon. Many
words, however, will not have a concept-based lexicon
entry but will contain information triggering certain
parsing procedures. Some other entries will include
both of these types of information. Every entry in an
analysis lexicon contains syntactic information, and the
current LMS already includes an interactive aid for
acquiring it for English. It appears that generation
lexicons are, in fact, indexed not only by subworld
concepts but also by rhetorical and pragmatic markers
in the representation of a text obtained after analysis
because both typically have lexical — as well as gram-
matical — expression in natural language.
Acknowledgements. This research was supported, in
part, by the National Science Foundation under Grant
DCR-8407114 and, in part, by the Air Force Systems
Command, Rome Air Development Center, Griffiss Air
Force Base, NY 13441-5700, and the Air Force Office of
Scientific Research, Bolling Air Force Base, DC, 20332,
under contract number F30602-85-C-0008, to the North-
east Artificial Intelligence Consortium. We would also
like to thank Irene Nirenburg who implemented the
LMS, and Sabine Bergler for a number of useful discus-
sions of the subject matter.
</bodyText>
<sectionHeader confidence="0.996349" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.991147525179856">
Ahlswede, T. E. 1985. A Tool Kit for Lexicon Building. Proceedings
of 23rd ACL, pp. 268-276.
Amsler, R. A. 1982. Computational Lexicology: A Research Program.
AFIPS, Proceedings of the National Computer Conference, vol.
V, pp. 657-663.
Amsler, R. A. 1984a. Lexical Knowledge Bases. Proceedings of
COLING-84. Stanford University, Stanford, CA, July, pp. 458-
459.
Amster, R. A. 1984b. Machine-Readable Dictionaries. In: M. E.
Williams (ed.), Annual Review of Information Science and Technol-
ogy, vol. 19. White Plains NY: Knowledge Industry Publications,
pp. 161-209.
Apresyan, Ju. D. 1974. Leksicheskaya Semantika (Lexical Semantics).
Moscow: Nauka.
Ayuso, D., V. Shaked and R. Weischedel. 1987. An Environment for
Acquiring Semantic Information. Proceedings of 25th ACL, pp.
32-40.
288 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987
Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System
Ballard, B. and D. Stumberger, 1986. Semantic Acquisition in TELL
A Transportable, User-Customized Natural Language Processor.
Proceedings of 24th ACL, pp. 20-29.
Bendix, E. H. 1966. Componential Analysis of General Vocabulary.
Bloomington, IN: Indiana University Research Center in Anthro-
pology, Folklore and Linguistics, Publication 41.
Bessemer, D. and P. Jacobs. 1987. FLUSH: A Flexible Lexicon
Design. Proceedings of 25th ACL, pp. 186-192.
Boguraev, B. et al. 1987. The Derivation of a Grammatically Indexed
Lexicon from the Longman Dictionary of Contemporary English.
Proceedings of 25th ACL, pp. 193-200.
Brachman R. J. and H. J. Levesque (eds.) 1985. Readings in Knowl-
edge Representation. Los Altos, CA: Morgan Kaufmann.
Brachman, R. and J. Schmolze 1985. An Overview of the KL-ONE
Knowledge Representation System. Cognitive Science, 9, pp.
171-216.
Byrd, R., J. Clavans, M. Aronoff and F. Anshen. 1986. Computer
Methods for Morphological Analysis. Proceedings of 24th ACL,
pp. 120-127.
Calzolari, N. 1984a. Detecting Patterns in a Lexical Database. Pro-
ceedings of COLING-84. Stanford University, Stanford, CA, July,
pp. 170-173.
Calzolari, N. 1984b. Machine-Readable Dictionaries, Lexical Data-
base and the Lexical System. Proceedings of COLING-84. Stan-
ford University, Stanford, CA, July, p. 460.
Chodorow, Martin S., Roy J. Byrd and George E. Heidorn. 1986.
Extracting Semantic Hierarchies from a Large On-Line Dictio-
nary. Proceedings of 23d ACL, pp. 299-304.
Collin, A. 1960. The Automatic Construction of a Glossary. Informa-
tion and Control, IX, pp. 211-230.
Frawley, W. 1980-81. Lexicography and the Philosophy of Science.
Dictionaries, 2-3, pp. 18-27.
Grimes J. E. 1970. Computing and Lexicography. Linguistic Re-
porter, V, pp. 1-4.
Grishman R. and R. Kittredge (eds.) 1986. Analysing Language in
Restricted Domains. Hillsdale, NJ: Erlbaum.
Grosz, B., D. Appelt, P. Martin and F. Pereira. 1985. TEAM: An
Experiment in the Design of Transportable Natural-Language
Interfaces. TR 356, SRI International, Menlo Park, CA, August.
Hobbs, J.R. 1985a. Introduction. In: J.R. Hobbs and R.C. Moore
(eds.), Formal Theories of the Commonsense World. Norwood, NJ:
Ablex, pp. xi-xxii.
Hobbs J. R. 1985b. Ontological Promiscuity. Proceedings of 23rd
ACL, pp. 61-69.
Katz J. J. and J. A. Fodor 1963. The Structure of a Semantic Theory.
Language , 39, pp. 170-210.
Kittredge R. and J. Lehrberger (eds.) 1982. Sublanguage. Berlin: de
Gruyter.
Kucera, H. 1969. Computers in Language Analysis and Lexicogra-
phy. In: American Heritage Dictionary of the English Language,
NY: Houghton Mifflin, pp. XXXVII-XL.
Lakoff, G. 1972. Linguistics and Natural Logic. In: D. Davidson and
G. Harman (eds.), Semantics of Natural Language, Dordrecht:
Reidel, pp. 545-665.
Lakoff, G. and M. Johnson 1980. Metaphors We Live By. Chicago -
London: University of Chicago Press.
Landau, S. 1984. Dictionaries. NY: Scribners.
Lenat, D., M. Prakash and M. Shepherd 1986. CYC: Using Common
Sense Knowledge to Overcome Brittleness and Knowledge Ac-
quisition Bottlenecks. Al Magazine, VI, pp. 65-85.
Markowitz, J., T. Ahlswede and M. Evens. 1986. Semantically
Significant Patterns in Dictionary Definitions. Proceedings of 24th
ACL, pp. 112-119.
McCawley, J. D. 1972. A Program for Logic. In: D. Davidson and G.
Harman (eds.), Semantics of Natural Language, Dordrecht: Reidel,
pp. 157-212.
McCawley, James D. 1986. What Linguists might Contribute to
Dictionary Making if They could Get Their Act Together. In: P.
Bjarkman and V. Raskin (eds.), The Real-World Linguist: Linguis-
tic Applications in the 1980s, Norwood, NJ: Ablex, pp. 3-18.
Miller, G. 1985. Dictionaries of the Mind. Proceedings of 23d ACL,
pp. 305-314.
Nirenburg, S. and Y. Ben Asher. 1984. HUHU: The Hebrew Univer-
sity Hebrew Understander. The Journal of Computer Languages,
9, pp. 161-182.
Nirenburg, S. and V. Raskin. 1989. Meaning in Human-Computer
Interaction: Computational Lexical Semantics, Amsterdam: Else-
vier (in preparation).
Nirenburg, S., V. Raskin and A. B. Tucker 1985. Interlingua Design
for TRANSLATOR. Proceedings of the Conference on Theoreti-
cal and Methodological Issues in Machine Translation of Natural
Languages , Colgate University, Hamilton, NY, August, pp.
224-244.
Nirenburg, S., V. Raskin and A.B. Tucker 1986. On Knowledge-
Based Machine Translation. Proceedings of XI International Con-
ference on Computational Linguistics, COLING-86, Bonn, Ger-
many, August 1986, pp. 627-632
Nirenburg, S., V. Raskin and A.B. Tucker 1987. The Structure of
Interlingua in TRANSLATOR. In: S. Nirenburg (editor), Machine
Translation: Theoretical and Methodological Issues, ACL Series
&apos;Studies in Natural Language Processing,&apos; Cambridge University
Press, pp. 90-113.
Nirenburg, S., I. Nirenburg and J.H. Reynolds 1985. Control Knowl-
edge in POPLAR: a Personality-Oriented Planner. Proceedings of
3rd Annual Conference on Intelligent Systems and Machines.
Oakland University, Rochester, Michigan, April, pp. 63-67.
Raskin, V. 1985. Linguistics and Natural Language Processing.
Proceedings of the Conference on Theoretical and Methodological
Issues in Machine Translation of Natural Languages, Colgate
University, Hamilton, NY, August, pp. 268-282. Also in: S.
Nirenburg (ed.), Machine Translation: Theoretical and Method-
ological Issues, ACL Series &apos;Studies in Natural Language Proces-
sing,&apos; Cambridge University Press, pp. 42-58.
Raskin, V. 1986. Script-Based Semantics. In: D.G. Ellis and W.E.
Donohue (eds.), Contemporary Issues in Language and Discourse
Processes. Hillsdale, NJ: Erlbaum, pp. 23-61.
SOED 1973. Shorter Oxford English Dictionary. Oxford: Clarendon
Press, 3rd Ed.
Venezky, R.L. 1973. Computational Aids to Dictionary Compilation.
In: R.Frank and A.F.Cameron (eds.), A Plan for the Dictionary of
Old English. Toronto: University of Toronto Press, pp. 307-327.
Walker, D. E. 1984. Panel Session: Machine-Readable Dictionaries.
Proceedings of COLING-84. Stanford University, Stanford, CA,
July, p. 457.
Walker, D .E and R. A. Amsler 1986. The Use of Machine-Readable
Dictionaries in Sublanguage Analysis. In: Grishman and Kittredge
(eds.), pp. 69-83.
Zernik, U. and M. Dyer. 1985. Towards a Self-Extending Lexicon.
Proceedings of 23d ACL, pp. 284-292.
Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 289
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.090870">
<title confidence="0.992554">THE SUBWORLD CONCEPT LEXICON AND THE LEXICON MANAGEMENT SYSTEM</title>
<author confidence="0.999501">Sergei Nirenburg</author>
<affiliation confidence="0.9869695">Center for Machine Carnegie Mellon University</affiliation>
<author confidence="0.993583">Victor Raskin</author>
<affiliation confidence="0.396395">Natural Language Processing</affiliation>
<abstract confidence="0.99583031147541">Natural language processing systems require three different types of lexicons: the concept lexicon that describes the (sub)world ontology and the analysis and generation lexicons for natural languages. We argue that the acquisition of the concept lexicon must precede any lexical work on natural language and that a comprehensive lexicon management system (LMS) is necessary for lexicon acquisition in large-scale applications. We describe the interactive concept lexicon acquisition module of the LMS for TRANSLATOR, a knowledge-based, sublanguage-oriented machine translation project. project belongs to the fastest growing fields of computational linguistics and artificial intelligence in general: the lexicon and knowledge acquisition for Al systems. The work in lexicon has centered on a) studies concerned with the utilization of conventional humanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address some important methodological and strategic points in providing the lexicon support in the context of a text processing system, such as the machine translation system TRANSLATOR (Nirenburg et al. 1987). HELP BUILDING LEXICON A natural language lexicon is a necessary part of any natural language processing (NLP) system. Building such a lexicon is an important knowledge acquisition task. The format of the lexicon has been the subject of substantial number of research projects, both in linguistics and in artificial intelligence (AI). In linguistic semantics, the efforts have focused on the formal notation for representing semantic knowledge with a special emphasis on the involved categories and rules. The projects have ranged from simple feature notations (Katz, Fodor 1963; Bendix 1966) to script-based contextual analysis (Raskin 1986). In Al, this type of work belongs to the area of knowledge representation. A number of methods of representing knowledge have been developed, ranging from first-order predicate calculus notation to quite sophisticated frame-based and advanced logical formalisms. (Brachman and Levesque 1985 summarizes the state of the art in knowledge representation.) By comparison, the number of projects devoted to the design of procedures for compiling and maintaining</abstract>
<note confidence="0.8644126">Copyright 1987 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted provided the copies are not made for direct commercial advantage and the and this copyright notice are included on the first page. To copy otherwise, or to republish, requires a fee and/or specific permission. 87 Linguistics, Volume 13, Numbers 3-4, July-December 1987</note>
<title confidence="0.768494">Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System</title>
<abstract confidence="0.994405141791044">a large lexicon has been relatively small. The usual practice in Al has been to suggest a relatively welldeveloped knowledge representation language and then use it to represent a miniature world or a very restricted sublanguage. It is clear, however, that for an NLP system to be really useful, one needs not only to provide a language in which to record the meanings of linguistic units, but also, in fact, to record those meanings for a non-miniature world (and its corresponding sublanguage). crux of this problem is generating support the growth of the representation of the subworld/sublanguage. Indeed, there can be no deterministic solution to the problem of knowledge acquisition; therefore, weaker, heuristic methods should be applied to (a) discovering the categories in of which to account for the morphological, syntactical, and semantical properties of words and phrases of natural language and (b) developing guidelines for compiling the lexicon for a natural language. It follows from the above that new, sophisticated ways of humancomputer interaction must be devised in order to support the tasks of linguistic description in terms of AI-style knowledge representation. The implication of many workers in knowledge representation that once the notation is developed it will be easy to use it for actually describing the world, is clearly anti-intuitive and anti-experiential, as anybody who has ever developed an NLP system knows only too well. Quite frequently, the lack of any reference to the procedures of lexical description spells out the difference between a system conceived and a system executed. Thus, decisions to assign a word to a postulated category, for instance, are far from straightforward — many borderline cases have to be routinely considered and resolved. In any large application, lexicon building typically done by a large number of relatively untrained people who are certain to make non-uniform decisions in many cases. The instructions these people obtain at the beginning of their work cannot be very precise, unambiguous, or designed to provide in advance for any contingency. As a result, even a good knowledge representation language cannot guarantee a quality lexicon. One can in principle think of avoiding these difficulties through automation. Fully automated lexicon building procedures would definitely ensure the uniformity of description. There was a considerable enthusiasm about the possibility of a complete automation of lexicology some 15-20 years ago (see, for instance, Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premises and goals of these efforts are fully compatible with our belief, first, that no Al system is ready to make the kind of decisions that lexicon building requires and, second, that &apos;simply having an online version of an encyclopedia [or a dictionary] would be of little use, as there is practically nothing that current Al could draw from the raw text. Rather, we must carefully re-represent the encyclopedia&apos;s knowledge — by hand — into some more structured form&apos; (Lenat et al. 1986:75). Such re-representation would be necessary for Amsler&apos;s (1984a:458) &apos;lexical knowledge base [which] is a repository of computational information about concepts&apos; and which contains information derived from machine-readable dictionaries, the full text of reference books, the results of statistical analysis of text usages, and data manually obtained from human world knowledge.&apos; This paper deals primarily with the last item on Amsler&apos;s agenda. It is based on the following approach to the problem of lexicon building. The work is done by humans assisted by an interactive aid which enhances productivity and ensures uniformity. It is important to recognize that lexicon building in NLP involves the of not one entity but rather of interrebut distinct lexicons, a) the world concept lexicon which structures our knowledge of the world b) the analysis lexicon which is indexed by natural language words and phrases connected with concepts from the world concept lexicon, and c) the generation lexicon, which is indexed by concepts in the world concept lexicon connected with natural language words and phrases. In reality, Al systems deal not with the entire world but typically with a well-specified subworld of it. In other words, in any practical application, the world concept lexicon will, in fact, be a subworld concept lexicon. In the area of machine translation the analysis and generation lexicons involve two different natural languages, which creates the task of building such resources as, say, an English — subworld and subworld — Russian lexicons, as is the case, for example, in TRANSLATOR, the knowledge-based machine translation project for the computer subworld (see Nirenburg et al. 1985, 1986, 1987). FIRST, WORD LATER We assert that of the three lexicons described above, the first to be built must be the subworld concept The availability of such a lexicon is a qua any subsequent lexical work in NLP. The recognized necessity to describe the concept lexicon prior to dealing with natural languages is a feature which clearly distinguishes our approach from Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 277 Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System other work on lexical aids (e.g., Ahlswede 1985) and brings us closer to some non-NL work on knowledge acquisition (e.g., Lenat et al. 1986). Ahlswede (1985) describes a typical approach to building in a constrained subworld. The subworld is that of stroke medicine. The interactive aid is designed for the analysis lexicon, in our terminology. The concept realm is not discussed at all, though the four major semantic features used in this lexicon are obviously underlain by subworld concepts. As a result, the structure and interrelations of concepts cannot be conveniently reasoned about. Thus, for instance, the distinction between &apos;general&apos; and &apos;specific&apos; features is not supported by the ontology and is not really used, since only one subworld is chosen. We agree with those who believe that each subworld must be described fully and uniformly prior to the</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T E Ahlswede</author>
</authors>
<title>A Tool Kit for Lexicon Building.</title>
<date>1985</date>
<booktitle>Proceedings of 23rd ACL,</booktitle>
<pages>268--276</pages>
<contexts>
<context position="1223" citStr="Ahlswede 1985" startWordPosition="165" endWordPosition="166"> large-scale applications. We describe the interactive concept lexicon acquisition module of the LMS for TRANSLATOR, a knowledge-based, sublanguage-oriented machine translation project. This project belongs to two of the fastest growing fields of computational linguistics and artificial intelligence in general: the lexicon and knowledge acquisition for Al systems. The work in lexicon has centered on a) studies concerned with the utilization of conventional humanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized kno</context>
<context position="10153" citStr="Ahlswede 1985" startWordPosition="1551" endWordPosition="1552">7). 2. WORLD FIRST, WORD LATER We assert that of the three lexicons described above, the first to be built must be the subworld concept lexicon. The availability of such a lexicon is a sine qua non for any subsequent lexical work in NLP. The recognized necessity to describe the concept lexicon prior to dealing with natural languages is a feature which clearly distinguishes our approach from Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 277 Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System other work on lexical aids (e.g., Ahlswede 1985) and brings us closer to some non-NL work on knowledge acquisition (e.g., Lenat et al. 1986). Ahlswede (1985) describes a typical approach to lexicon building in a constrained subworld. The subworld is that of stroke medicine. The interactive aid is designed for the analysis lexicon, in our terminology. The concept realm is not discussed at all, though the four major semantic features used in this lexicon are obviously underlain by subworld concepts. As a result, the structure and interrelations of concepts cannot be conveniently reasoned about. Thus, for instance, the distinction between &apos;gen</context>
</contexts>
<marker>Ahlswede, 1985</marker>
<rawString>Ahlswede, T. E. 1985. A Tool Kit for Lexicon Building. Proceedings of 23rd ACL, pp. 268-276.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R A Amsler</author>
</authors>
<title>Computational Lexicology: A Research Program.</title>
<date>1982</date>
<booktitle>AFIPS, Proceedings of the National Computer Conference,</booktitle>
<volume>vol. V,</volume>
<pages>657--663</pages>
<contexts>
<context position="7245" citStr="Amsler 1982" startWordPosition="1091" endWordPosition="1092">5-20 years ago (see, for instance, Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premises and goals of these efforts are fully compatible with our belief, first, that no Al system is ready to make the kind of decisions that lexicon building requires and, second, that &apos;simply having an online version of an encyclopedia [or a dictionary] would be of little use, as there is practically nothing that current Al could draw from the raw text. Rather, we must carefully re-represent the encyclopedia&apos;s knowledge — by hand — into some more structured form&apos; (Lenat et al. 1986:75). Such re-representation would be necessary for Amsle</context>
</contexts>
<marker>Amsler, 1982</marker>
<rawString>Amsler, R. A. 1982. Computational Lexicology: A Research Program. AFIPS, Proceedings of the National Computer Conference, vol. V, pp. 657-663.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R A Amsler</author>
</authors>
<title>Lexical Knowledge Bases.</title>
<date>1984</date>
<booktitle>Proceedings of COLING-84.</booktitle>
<pages>458--459</pages>
<institution>Stanford University,</institution>
<location>Stanford, CA,</location>
<contexts>
<context position="1183" citStr="Amsler 1984" startWordPosition="159" endWordPosition="160">s necessary for lexicon acquisition in large-scale applications. We describe the interactive concept lexicon acquisition module of the LMS for TRANSLATOR, a knowledge-based, sublanguage-oriented machine translation project. This project belongs to two of the fastest growing fields of computational linguistics and artificial intelligence in general: the lexicon and knowledge acquisition for Al systems. The work in lexicon has centered on a) studies concerned with the utilization of conventional humanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for</context>
</contexts>
<marker>Amsler, 1984</marker>
<rawString>Amsler, R. A. 1984a. Lexical Knowledge Bases. Proceedings of COLING-84. Stanford University, Stanford, CA, July, pp. 458-459.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R A Amster</author>
</authors>
<title>Machine-Readable Dictionaries.</title>
<date>1984</date>
<booktitle>Annual Review of Information Science and Technology, vol. 19. White Plains NY: Knowledge Industry Publications,</booktitle>
<pages>161--209</pages>
<editor>In: M. E. Williams (ed.),</editor>
<marker>Amster, 1984</marker>
<rawString>Amster, R. A. 1984b. Machine-Readable Dictionaries. In: M. E. Williams (ed.), Annual Review of Information Science and Technology, vol. 19. White Plains NY: Knowledge Industry Publications, pp. 161-209.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D</author>
</authors>
<title>Leksicheskaya Semantika (Lexical Semantics).</title>
<date>1974</date>
<publisher>Nauka.</publisher>
<location>Moscow:</location>
<marker>D, 1974</marker>
<rawString>Apresyan, Ju. D. 1974. Leksicheskaya Semantika (Lexical Semantics). Moscow: Nauka.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Ayuso</author>
<author>V Shaked</author>
<author>R Weischedel</author>
</authors>
<title>An Environment for Acquiring Semantic Information.</title>
<date>1987</date>
<booktitle>Proceedings of 25th ACL,</booktitle>
<pages>32--40</pages>
<contexts>
<context position="1957" citStr="Ayuso et al. 1987" startWordPosition="274" endWordPosition="277">cal processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address some important methodological and strategic points in providing the lexicon support in the context of a text processing system, such as the machine translation system TRANSLATOR (Nirenburg et al. 1987). 1. NEED HELP BUILDING LEXICON A natural language lexicon is a necessary part of any natural language processing (NLP) system. Building </context>
</contexts>
<marker>Ayuso, Shaked, Weischedel, 1987</marker>
<rawString>Ayuso, D., V. Shaked and R. Weischedel. 1987. An Environment for Acquiring Semantic Information. Proceedings of 25th ACL, pp. 32-40.</rawString>
</citation>
<citation valid="false">
<booktitle>288 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System</booktitle>
<marker></marker>
<rawString>288 Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Ballard</author>
<author>D Stumberger</author>
</authors>
<title>Semantic Acquisition in TELL A Transportable, User-Customized Natural Language Processor.</title>
<date>1986</date>
<booktitle>Proceedings of 24th ACL,</booktitle>
<pages>pp.</pages>
<contexts>
<context position="1930" citStr="Ballard and Stumberger, 1986" startWordPosition="269" endWordPosition="272">ems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address some important methodological and strategic points in providing the lexicon support in the context of a text processing system, such as the machine translation system TRANSLATOR (Nirenburg et al. 1987). 1. NEED HELP BUILDING LEXICON A natural language lexicon is a necessary part of any natural language process</context>
</contexts>
<marker>Ballard, Stumberger, 1986</marker>
<rawString>Ballard, B. and D. Stumberger, 1986. Semantic Acquisition in TELL A Transportable, User-Customized Natural Language Processor. Proceedings of 24th ACL, pp. 20-29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E H Bendix</author>
</authors>
<title>Componential Analysis of General Vocabulary.</title>
<date>1966</date>
<booktitle>in Anthropology, Folklore and Linguistics, Publication 41.</booktitle>
<institution>Indiana University Research Center</institution>
<location>Bloomington, IN:</location>
<contexts>
<context position="3021" citStr="Bendix 1966" startWordPosition="443" endWordPosition="444">t al. 1987). 1. NEED HELP BUILDING LEXICON A natural language lexicon is a necessary part of any natural language processing (NLP) system. Building such a lexicon is an important knowledge acquisition task. The format of the lexicon has been the subject of substantial number of research projects, both in linguistics and in artificial intelligence (AI). In linguistic semantics, the efforts have focused on the formal notation for representing semantic knowledge with a special emphasis on the involved categories and rules. The projects have ranged from simple feature notations (Katz, Fodor 1963; Bendix 1966) to script-based contextual analysis (Raskin 1986). In Al, this type of work belongs to the area of knowledge representation. A number of methods of representing knowledge have been developed, ranging from first-order predicate calculus notation to quite sophisticated frame-based and advanced logical formalisms. (Brachman and Levesque 1985 summarizes the state of the art in knowledge representation.) By comparison, the number of projects devoted to the design of procedures for compiling and maintaining Copyright 1987 by the Association for Computational Linguistics. Permission to copy without </context>
</contexts>
<marker>Bendix, 1966</marker>
<rawString>Bendix, E. H. 1966. Componential Analysis of General Vocabulary. Bloomington, IN: Indiana University Research Center in Anthropology, Folklore and Linguistics, Publication 41.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Bessemer</author>
<author>P Jacobs</author>
</authors>
<title>FLUSH: A Flexible Lexicon Design.</title>
<date>1987</date>
<booktitle>Proceedings of 25th ACL,</booktitle>
<pages>186--192</pages>
<contexts>
<context position="1618" citStr="Bessemer and Jacobs 1987" startWordPosition="220" endWordPosition="223">con has centered on a) studies concerned with the utilization of conventional humanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address</context>
</contexts>
<marker>Bessemer, Jacobs, 1987</marker>
<rawString>Bessemer, D. and P. Jacobs. 1987. FLUSH: A Flexible Lexicon Design. Proceedings of 25th ACL, pp. 186-192.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Boguraev</author>
</authors>
<title>The Derivation of a Grammatically Indexed Lexicon from the Longman Dictionary of Contemporary English.</title>
<date>1987</date>
<booktitle>Proceedings of 25th ACL,</booktitle>
<pages>193--200</pages>
<marker>Boguraev, 1987</marker>
<rawString>Boguraev, B. et al. 1987. The Derivation of a Grammatically Indexed Lexicon from the Longman Dictionary of Contemporary English. Proceedings of 25th ACL, pp. 193-200.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R J Brachman</author>
<author>H J</author>
</authors>
<date>1985</date>
<booktitle>Readings in Knowledge Representation.</booktitle>
<editor>Levesque (eds.)</editor>
<publisher>Morgan Kaufmann.</publisher>
<location>Los Altos, CA:</location>
<marker>Brachman, J, 1985</marker>
<rawString>Brachman R. J. and H. J. Levesque (eds.) 1985. Readings in Knowledge Representation. Los Altos, CA: Morgan Kaufmann.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Brachman</author>
<author>J Schmolze</author>
</authors>
<date>1985</date>
<journal>An Overview of the KL-ONE Knowledge Representation System. Cognitive Science,</journal>
<volume>9</volume>
<pages>171--216</pages>
<contexts>
<context position="22039" citStr="Brachman and Schmolze 1985" startWordPosition="3463" endWordPosition="3466">ets. The slots can be occupied by any number of members of the corresponding domain, and the logical operators and, or, and not can be used to augment the expressive power. Also, in every case, the semantics of the constraints in the lexicon is that of default knowledge: the contents of a slot are understood as typically constraining the meaning of the concept. The semantic character of a slot in a concept lexicon frame underscores a careful distinction that should be made between concept types and concept tokens. Such a distinction is common in certain knowledge representation languages (see Brachman and Schmolze 1985; Nirenburg et al. 1986). Concept types belong in the lexicon; concept tokens are instantiations of concept types obtained as a result of analyzing natural language inputs. One kind of knowledge representation can be used for both types and tokens, a frame-based notation being one of them. (Of course, due to a number of possible reasons, a complete knowledge representation system can use one type of representation for the types and another for the tokens, cf. Hobbs 1985 for a discussion of such a position.) The frames for a type and its token will not, however, be identical in structure. The s</context>
</contexts>
<marker>Brachman, Schmolze, 1985</marker>
<rawString>Brachman, R. and J. Schmolze 1985. An Overview of the KL-ONE Knowledge Representation System. Cognitive Science, 9, pp. 171-216.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Byrd</author>
<author>J Clavans</author>
<author>M Aronoff</author>
<author>F Anshen</author>
</authors>
<title>Computer Methods for Morphological Analysis.</title>
<date>1986</date>
<booktitle>Proceedings of 24th ACL,</booktitle>
<pages>120--127</pages>
<contexts>
<context position="1424" citStr="Byrd et al. 1986" startWordPosition="193" endWordPosition="196"> belongs to two of the fastest growing fields of computational linguistics and artificial intelligence in general: the lexicon and knowledge acquisition for Al systems. The work in lexicon has centered on a) studies concerned with the utilization of conventional humanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the </context>
</contexts>
<marker>Byrd, Clavans, Aronoff, Anshen, 1986</marker>
<rawString>Byrd, R., J. Clavans, M. Aronoff and F. Anshen. 1986. Computer Methods for Morphological Analysis. Proceedings of 24th ACL, pp. 120-127.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Calzolari</author>
</authors>
<title>Detecting Patterns in a Lexical Database.</title>
<date>1984</date>
<booktitle>Proceedings of COLING-84.</booktitle>
<pages>170--173</pages>
<institution>Stanford University,</institution>
<location>Stanford, CA,</location>
<contexts>
<context position="7289" citStr="Calzolari 1984" startWordPosition="1097" endWordPosition="1098"> 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premises and goals of these efforts are fully compatible with our belief, first, that no Al system is ready to make the kind of decisions that lexicon building requires and, second, that &apos;simply having an online version of an encyclopedia [or a dictionary] would be of little use, as there is practically nothing that current Al could draw from the raw text. Rather, we must carefully re-represent the encyclopedia&apos;s knowledge — by hand — into some more structured form&apos; (Lenat et al. 1986:75). Such re-representation would be necessary for Amsler&apos;s (1984a:458) &apos;lexical knowledge base [whi</context>
</contexts>
<marker>Calzolari, 1984</marker>
<rawString>Calzolari, N. 1984a. Detecting Patterns in a Lexical Database. Proceedings of COLING-84. Stanford University, Stanford, CA, July, pp. 170-173.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Calzolari</author>
</authors>
<title>Machine-Readable Dictionaries, Lexical Database and the Lexical System.</title>
<date>1984</date>
<booktitle>Proceedings of COLING-84.</booktitle>
<pages>460</pages>
<institution>Stanford University,</institution>
<location>Stanford, CA,</location>
<contexts>
<context position="7289" citStr="Calzolari 1984" startWordPosition="1097" endWordPosition="1098"> 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premises and goals of these efforts are fully compatible with our belief, first, that no Al system is ready to make the kind of decisions that lexicon building requires and, second, that &apos;simply having an online version of an encyclopedia [or a dictionary] would be of little use, as there is practically nothing that current Al could draw from the raw text. Rather, we must carefully re-represent the encyclopedia&apos;s knowledge — by hand — into some more structured form&apos; (Lenat et al. 1986:75). Such re-representation would be necessary for Amsler&apos;s (1984a:458) &apos;lexical knowledge base [whi</context>
</contexts>
<marker>Calzolari, 1984</marker>
<rawString>Calzolari, N. 1984b. Machine-Readable Dictionaries, Lexical Database and the Lexical System. Proceedings of COLING-84. Stanford University, Stanford, CA, July, p. 460.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin S Chodorow</author>
<author>Roy J Byrd</author>
<author>George E Heidorn</author>
</authors>
<title>Extracting Semantic Hierarchies from a Large On-Line Dictionary.</title>
<date>1986</date>
<booktitle>Proceedings of 23d ACL,</booktitle>
<pages>299--304</pages>
<marker>Chodorow, Byrd, Heidorn, 1986</marker>
<rawString>Chodorow, Martin S., Roy J. Byrd and George E. Heidorn. 1986. Extracting Semantic Hierarchies from a Large On-Line Dictionary. Proceedings of 23d ACL, pp. 299-304.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Collin</author>
</authors>
<title>The Automatic Construction of a Glossary.</title>
<date>1960</date>
<journal>Information and Control, IX,</journal>
<pages>211--230</pages>
<contexts>
<context position="6680" citStr="Collin 1960" startWordPosition="1010" endWordPosition="1011">form decisions in many cases. The instructions these people obtain at the beginning of their work cannot be very precise, unambiguous, or designed to provide in advance for any contingency. As a result, even a good knowledge representation language cannot guarantee a quality lexicon. One can in principle think of avoiding these difficulties through automation. Fully automated lexicon building procedures would definitely ensure the uniformity of description. There was a considerable enthusiasm about the possibility of a complete automation of lexicology some 15-20 years ago (see, for instance, Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzo</context>
</contexts>
<marker>Collin, 1960</marker>
<rawString>Collin, A. 1960. The Automatic Construction of a Glossary. Information and Control, IX, pp. 211-230.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Frawley</author>
</authors>
<date>1980</date>
<journal>Lexicography and the Philosophy of Science. Dictionaries,</journal>
<pages>2--3</pages>
<marker>Frawley, 1980</marker>
<rawString>Frawley, W. 1980-81. Lexicography and the Philosophy of Science. Dictionaries, 2-3, pp. 18-27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J E Grimes</author>
</authors>
<title>Computing and Lexicography. Linguistic Reporter, V,</title>
<date>1970</date>
<pages>1--4</pages>
<contexts>
<context position="6693" citStr="Grimes 1970" startWordPosition="1012" endWordPosition="1013">s in many cases. The instructions these people obtain at the beginning of their work cannot be very precise, unambiguous, or designed to provide in advance for any contingency. As a result, even a good knowledge representation language cannot guarantee a quality lexicon. One can in principle think of avoiding these difficulties through automation. Fully automated lexicon building procedures would definitely ensure the uniformity of description. There was a considerable enthusiasm about the possibility of a complete automation of lexicology some 15-20 years ago (see, for instance, Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b)</context>
</contexts>
<marker>Grimes, 1970</marker>
<rawString>Grimes J. E. 1970. Computing and Lexicography. Linguistic Reporter, V, pp. 1-4.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Grishman</author>
<author>R Kittredge</author>
</authors>
<title>Analysing Language in Restricted Domains.</title>
<date>1986</date>
<publisher>Erlbaum.</publisher>
<location>Hillsdale, NJ:</location>
<contexts>
<context position="12876" citStr="Grishman and Kittredge 1986" startWordPosition="1994" endWordPosition="1997"> of different natural languages. In MT, the representation of the subworld functions as — and is — the interlingua. Beginning directly with the lexicon of a natural language would make the implied subworld biased toward this language, and this is known to have an adverse affect on the description of other natural sublanguages corresponding to the same subworld. The subworld concept lexicon determines the structure of the associated analysis and generation lexicons. Thus, the constrained nature of the subworld (see Raskin 1985 and references therein as well as Kittredge and Lehrberger 1982 and Grishman and Kittredge 1986) always severely limits polysemy/homonymy so rampant in the language as a whole. Thus, the concept lexicon for the computer subworld will make it clear that there is a need to accommodate only meanings (5) and (7) in the lexical entry for operator in the corresponding sublanguage of English, even though the English language possesses all of the meanings listed in Figure 1 (cf. SOED 1973:1453). (1) one who does something, an agent (2) one who is professionally engaged to perform a certain operation (3) a surgeon (4) one who carries on financial operations (5) one who works a machine (6) one who</context>
</contexts>
<marker>Grishman, Kittredge, 1986</marker>
<rawString>Grishman R. and R. Kittredge (eds.) 1986. Analysing Language in Restricted Domains. Hillsdale, NJ: Erlbaum.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Grosz</author>
<author>D Appelt</author>
<author>P Martin</author>
<author>F Pereira</author>
</authors>
<title>TEAM: An Experiment in the Design of Transportable Natural-Language Interfaces.</title>
<date>1985</date>
<booktitle>TR 356, SRI International,</booktitle>
<location>Menlo Park, CA,</location>
<contexts>
<context position="1893" citStr="Grosz et al. 1985" startWordPosition="264" endWordPosition="267">abilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address some important methodological and strategic points in providing the lexicon support in the context of a text processing system, such as the machine translation system TRANSLATOR (Nirenburg et al. 1987). 1. NEED HELP BUILDING LEXICON A natural language lexicon is a necessary</context>
</contexts>
<marker>Grosz, Appelt, Martin, Pereira, 1985</marker>
<rawString>Grosz, B., D. Appelt, P. Martin and F. Pereira. 1985. TEAM: An Experiment in the Design of Transportable Natural-Language Interfaces. TR 356, SRI International, Menlo Park, CA, August.</rawString>
</citation>
<citation valid="false">
<booktitle>Formal Theories of the Commonsense World.</booktitle>
<pages>pp. xi-xxii.</pages>
<editor>Hobbs, J.R. 1985a. Introduction. In: J.R. Hobbs and R.C. Moore (eds.),</editor>
<publisher>Ablex,</publisher>
<location>Norwood, NJ:</location>
<marker></marker>
<rawString>Hobbs, J.R. 1985a. Introduction. In: J.R. Hobbs and R.C. Moore (eds.), Formal Theories of the Commonsense World. Norwood, NJ: Ablex, pp. xi-xxii.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J R Hobbs</author>
</authors>
<title>Ontological Promiscuity.</title>
<date>1985</date>
<booktitle>Proceedings of 23rd ACL,</booktitle>
<pages>61--69</pages>
<contexts>
<context position="22513" citStr="Hobbs 1985" startWordPosition="3542" endWordPosition="3543">ept types and concept tokens. Such a distinction is common in certain knowledge representation languages (see Brachman and Schmolze 1985; Nirenburg et al. 1986). Concept types belong in the lexicon; concept tokens are instantiations of concept types obtained as a result of analyzing natural language inputs. One kind of knowledge representation can be used for both types and tokens, a frame-based notation being one of them. (Of course, due to a number of possible reasons, a complete knowledge representation system can use one type of representation for the types and another for the tokens, cf. Hobbs 1985 for a discussion of such a position.) The frames for a type and its token will not, however, be identical in structure. The semantic content of slots in a lexicon (type) frame is different from that of the corresponding slots in the text (token) frame. Concept tokens have their slots occupied by actual values of properties; if information about a property is not forthcoming, then the default value (if any) is inherited from the corresponding type representations. For example, the frame for a verbal action type and a verbal action token can have a slot named &apos;agent.&apos; However, in the former cas</context>
</contexts>
<marker>Hobbs, 1985</marker>
<rawString>Hobbs J. R. 1985b. Ontological Promiscuity. Proceedings of 23rd ACL, pp. 61-69.</rawString>
</citation>
<citation valid="false">
<authors>
<author>J J Katz</author>
<author>J A</author>
</authors>
<title>Fodor 1963. The Structure of a Semantic Theory.</title>
<journal>Language ,</journal>
<volume>39</volume>
<pages>170--210</pages>
<marker>Katz, A, </marker>
<rawString>Katz J. J. and J. A. Fodor 1963. The Structure of a Semantic Theory. Language , 39, pp. 170-210.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Kittredge</author>
</authors>
<date>1982</date>
<editor>and J. Lehrberger (eds.)</editor>
<note>Sublanguage. Berlin: de Gruyter.</note>
<marker>Kittredge, 1982</marker>
<rawString>Kittredge R. and J. Lehrberger (eds.) 1982. Sublanguage. Berlin: de Gruyter.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Kucera</author>
</authors>
<title>Computers in Language Analysis and Lexicography. In:</title>
<date>1969</date>
<journal>American Heritage Dictionary of the English Language, NY: Houghton Mifflin,</journal>
<pages>pp. XXXVII-XL.</pages>
<contexts>
<context position="6706" citStr="Kucera 1969" startWordPosition="1014" endWordPosition="1015">es. The instructions these people obtain at the beginning of their work cannot be very precise, unambiguous, or designed to provide in advance for any contingency. As a result, even a good knowledge representation language cannot guarantee a quality lexicon. One can in principle think of avoiding these difficulties through automation. Fully automated lexicon building procedures would definitely ensure the uniformity of description. There was a considerable enthusiasm about the possibility of a complete automation of lexicology some 15-20 years ago (see, for instance, Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premise</context>
</contexts>
<marker>Kucera, 1969</marker>
<rawString>Kucera, H. 1969. Computers in Language Analysis and Lexicography. In: American Heritage Dictionary of the English Language, NY: Houghton Mifflin, pp. XXXVII-XL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Lakoff</author>
</authors>
<title>Linguistics and Natural Logic.</title>
<date>1972</date>
<booktitle>Semantics of Natural Language,</booktitle>
<pages>545--665</pages>
<editor>In: D. Davidson and G. Harman (eds.),</editor>
<location>Dordrecht: Reidel,</location>
<marker>Lakoff, 1972</marker>
<rawString>Lakoff, G. 1972. Linguistics and Natural Logic. In: D. Davidson and G. Harman (eds.), Semantics of Natural Language, Dordrecht: Reidel, pp. 545-665.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Lakoff</author>
<author>M Johnson</author>
</authors>
<title>Metaphors We Live By. Chicago -London:</title>
<date>1980</date>
<publisher>University of Chicago Press.</publisher>
<marker>Lakoff, Johnson, 1980</marker>
<rawString>Lakoff, G. and M. Johnson 1980. Metaphors We Live By. Chicago -London: University of Chicago Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Landau</author>
</authors>
<date>1984</date>
<publisher>Scribners.</publisher>
<location>Dictionaries. NY:</location>
<marker>Landau, 1984</marker>
<rawString>Landau, S. 1984. Dictionaries. NY: Scribners.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Lenat</author>
<author>M Prakash</author>
<author>M Shepherd</author>
</authors>
<title>CYC: Using Common Sense Knowledge to Overcome Brittleness and Knowledge Acquisition Bottlenecks. Al Magazine, VI,</title>
<date>1986</date>
<pages>65--85</pages>
<contexts>
<context position="2116" citStr="Lenat et al. 1986" startWordPosition="300" endWordPosition="303">l language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address some important methodological and strategic points in providing the lexicon support in the context of a text processing system, such as the machine translation system TRANSLATOR (Nirenburg et al. 1987). 1. NEED HELP BUILDING LEXICON A natural language lexicon is a necessary part of any natural language processing (NLP) system. Building such a lexicon is an important knowledge acquisition task. The format of the lexicon has been the subject of substantial number of research projects, both in l</context>
<context position="7788" citStr="Lenat et al. 1986" startWordPosition="1179" endWordPosition="1182"> dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premises and goals of these efforts are fully compatible with our belief, first, that no Al system is ready to make the kind of decisions that lexicon building requires and, second, that &apos;simply having an online version of an encyclopedia [or a dictionary] would be of little use, as there is practically nothing that current Al could draw from the raw text. Rather, we must carefully re-represent the encyclopedia&apos;s knowledge — by hand — into some more structured form&apos; (Lenat et al. 1986:75). Such re-representation would be necessary for Amsler&apos;s (1984a:458) &apos;lexical knowledge base [which] is a repository of computational information about concepts&apos; and which contains information derived from machine-readable dictionaries, the full text of reference books, the results of statistical analysis of text usages, and data manually obtained from human world knowledge.&apos; This paper deals primarily with the last item on Amsler&apos;s agenda. It is based on the following approach to the problem of lexicon building. The work is done by humans assisted by an interactive aid which enhances prod</context>
<context position="10245" citStr="Lenat et al. 1986" startWordPosition="1565" endWordPosition="1568"> first to be built must be the subworld concept lexicon. The availability of such a lexicon is a sine qua non for any subsequent lexical work in NLP. The recognized necessity to describe the concept lexicon prior to dealing with natural languages is a feature which clearly distinguishes our approach from Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 277 Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System other work on lexical aids (e.g., Ahlswede 1985) and brings us closer to some non-NL work on knowledge acquisition (e.g., Lenat et al. 1986). Ahlswede (1985) describes a typical approach to lexicon building in a constrained subworld. The subworld is that of stroke medicine. The interactive aid is designed for the analysis lexicon, in our terminology. The concept realm is not discussed at all, though the four major semantic features used in this lexicon are obviously underlain by subworld concepts. As a result, the structure and interrelations of concepts cannot be conveniently reasoned about. Thus, for instance, the distinction between &apos;general&apos; and &apos;specific&apos; features is not supported by the ontology and is not really used, since</context>
<context position="11495" citStr="Lenat et al. (1986" startWordPosition="1771" endWordPosition="1774"> agree with those who believe that each subworld must be described fully and uniformly prior to the introduction of any semantic feature. This may not be feasible or practical for some very rich domains — it is definitely beyond reach as far as the whole world served by the whole language is concerned. However, most NLP systems are designed for constrained domains, and it will probably remain this way for some time. The description of a subworld is a matter of distinguishing all the relevant concepts in it and arranging them in a logical, consistent, and meaningful way. We agree entirely with Lenat et al. (1986:75) that to create a knowledge acquisition system, &apos;we must encode all the world&apos;s knowledge down to some level of detail; there is no way to finesse this.&apos; We differ from them by our overt, theoretically built-in emphasis on limited subworlds. More importantly, we want to assist the &apos;knowledge enterers&apos; with an interactive aid it is not at all clear how the CYC system of knowledge acquisition which Lenat et al. describe can ensure the quality and uniformity of the descriptions without such a device. Another reason why it is important as well as convenient to precede the lexical work with the</context>
</contexts>
<marker>Lenat, Prakash, Shepherd, 1986</marker>
<rawString>Lenat, D., M. Prakash and M. Shepherd 1986. CYC: Using Common Sense Knowledge to Overcome Brittleness and Knowledge Acquisition Bottlenecks. Al Magazine, VI, pp. 65-85.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Markowitz</author>
<author>T Ahlswede</author>
<author>M Evens</author>
</authors>
<title>Semantically Significant Patterns in Dictionary Definitions.</title>
<date>1986</date>
<booktitle>Proceedings of 24th ACL,</booktitle>
<pages>112--119</pages>
<contexts>
<context position="1247" citStr="Markowitz et al. 1986" startWordPosition="167" endWordPosition="171">plications. We describe the interactive concept lexicon acquisition module of the LMS for TRANSLATOR, a knowledge-based, sublanguage-oriented machine translation project. This project belongs to two of the fastest growing fields of computational linguistics and artificial intelligence in general: the lexicon and knowledge acquisition for Al systems. The work in lexicon has centered on a) studies concerned with the utilization of conventional humanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural langu</context>
</contexts>
<marker>Markowitz, Ahlswede, Evens, 1986</marker>
<rawString>Markowitz, J., T. Ahlswede and M. Evens. 1986. Semantically Significant Patterns in Dictionary Definitions. Proceedings of 24th ACL, pp. 112-119.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J D McCawley</author>
</authors>
<title>A Program for Logic.</title>
<date>1972</date>
<booktitle>Semantics of Natural Language,</booktitle>
<pages>157--212</pages>
<editor>In: D. Davidson and G. Harman (eds.),</editor>
<location>Dordrecht: Reidel,</location>
<marker>McCawley, 1972</marker>
<rawString>McCawley, J. D. 1972. A Program for Logic. In: D. Davidson and G. Harman (eds.), Semantics of Natural Language, Dordrecht: Reidel, pp. 157-212.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James D McCawley</author>
</authors>
<title>What Linguists might Contribute to Dictionary Making if They could Get Their Act Together.</title>
<date>1986</date>
<booktitle>The Real-World Linguist: Linguistic Applications in the 1980s,</booktitle>
<pages>3--18</pages>
<editor>In: P. Bjarkman and V. Raskin (eds.),</editor>
<publisher>Ablex,</publisher>
<location>Norwood, NJ:</location>
<marker>McCawley, 1986</marker>
<rawString>McCawley, James D. 1986. What Linguists might Contribute to Dictionary Making if They could Get Their Act Together. In: P. Bjarkman and V. Raskin (eds.), The Real-World Linguist: Linguistic Applications in the 1980s, Norwood, NJ: Ablex, pp. 3-18.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Miller</author>
</authors>
<title>Dictionaries of the Mind.</title>
<date>1985</date>
<booktitle>Proceedings of 23d ACL,</booktitle>
<pages>305--314</pages>
<contexts>
<context position="1685" citStr="Miller (1985)" startWordPosition="233" endWordPosition="234">umanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address some important methodological and strategic points in providing th</context>
</contexts>
<marker>Miller, 1985</marker>
<rawString>Miller, G. 1985. Dictionaries of the Mind. Proceedings of 23d ACL, pp. 305-314.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Nirenburg</author>
<author>Y Ben Asher</author>
</authors>
<title>HUHU: The Hebrew University Hebrew Understander.</title>
<date>1984</date>
<journal>The Journal of Computer Languages,</journal>
<volume>9</volume>
<pages>161--182</pages>
<marker>Nirenburg, Asher, 1984</marker>
<rawString>Nirenburg, S. and Y. Ben Asher. 1984. HUHU: The Hebrew University Hebrew Understander. The Journal of Computer Languages, 9, pp. 161-182.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Nirenburg</author>
<author>V Raskin</author>
</authors>
<date>1989</date>
<booktitle>Meaning in Human-Computer Interaction: Computational Lexical Semantics,</booktitle>
<publisher>Elsevier</publisher>
<location>Amsterdam:</location>
<note>(in preparation).</note>
<contexts>
<context position="17913" citStr="Nirenburg and Raskin 1989" startWordPosition="2790" endWordPosition="2793">) a pointer to a corresponding concept in the concept lexicon (this link essentially assigns semantic meaning to the lexical unit; note that some lexical units do not correspond to concepts); and/or c) additional control and constraint information for the use of the analysis module of the underlying NLP system. 4. the generation lexicons, whose entries are indexed by concepts in the concept lexicon and which contain pointers to corresponding lexical units in the target language. (Note that the analysis and generation lexicons are not symmetrical; for a detailed analysis of the differences see Nirenburg and Raskin 1989.) LMS maintains all four types of lexicons. In this paper we will concentrate on describing that part of the LMS which is devoted to the maintenance of one subworld concept lexicon (that of computer science research). The primary purpose of an LMS at the first stage of the project is to support knowledge acquisition. At later stages in the life of the LMS, testing and modification will become the primary types of work it supports. An ordinary LMS user, i.e., an enterer, will obtain at this stage a list of concepts to enter in the concept lexicon and will code the information about them in DRL</context>
</contexts>
<marker>Nirenburg, Raskin, 1989</marker>
<rawString>Nirenburg, S. and V. Raskin. 1989. Meaning in Human-Computer Interaction: Computational Lexical Semantics, Amsterdam: Elsevier (in preparation).</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Nirenburg</author>
<author>V Raskin</author>
<author>A B Tucker</author>
</authors>
<title>Interlingua Design for TRANSLATOR.</title>
<date>1985</date>
<booktitle>Proceedings of the Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages ,</booktitle>
<pages>224--244</pages>
<institution>Colgate University,</institution>
<location>Hamilton, NY,</location>
<contexts>
<context position="9528" citStr="Nirenburg et al. 1985" startWordPosition="1450" endWordPosition="1453">nguage words and phrases. In reality, Al systems deal not with the entire world but typically with a well-specified subworld of it. In other words, in any practical application, the world concept lexicon will, in fact, be a subworld concept lexicon. In the area of machine translation the analysis and generation lexicons involve two different natural languages, which creates the task of building such resources as, say, an English — subworld and subworld — Russian lexicons, as is the case, for example, in TRANSLATOR, the knowledge-based machine translation project for the computer subworld (see Nirenburg et al. 1985, 1986, 1987). 2. WORLD FIRST, WORD LATER We assert that of the three lexicons described above, the first to be built must be the subworld concept lexicon. The availability of such a lexicon is a sine qua non for any subsequent lexical work in NLP. The recognized necessity to describe the concept lexicon prior to dealing with natural languages is a feature which clearly distinguishes our approach from Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 277 Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System other work on lexical a</context>
</contexts>
<marker>Nirenburg, Raskin, Tucker, 1985</marker>
<rawString>Nirenburg, S., V. Raskin and A. B. Tucker 1985. Interlingua Design for TRANSLATOR. Proceedings of the Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages , Colgate University, Hamilton, NY, August, pp. 224-244.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Nirenburg</author>
<author>V Raskin</author>
<author>A B Tucker</author>
</authors>
<title>On KnowledgeBased Machine Translation.</title>
<date>1986</date>
<booktitle>Proceedings of XI International Conference on Computational Linguistics, COLING-86,</booktitle>
<pages>627--632</pages>
<location>Bonn, Germany,</location>
<contexts>
<context position="22063" citStr="Nirenburg et al. 1986" startWordPosition="3467" endWordPosition="3470">ed by any number of members of the corresponding domain, and the logical operators and, or, and not can be used to augment the expressive power. Also, in every case, the semantics of the constraints in the lexicon is that of default knowledge: the contents of a slot are understood as typically constraining the meaning of the concept. The semantic character of a slot in a concept lexicon frame underscores a careful distinction that should be made between concept types and concept tokens. Such a distinction is common in certain knowledge representation languages (see Brachman and Schmolze 1985; Nirenburg et al. 1986). Concept types belong in the lexicon; concept tokens are instantiations of concept types obtained as a result of analyzing natural language inputs. One kind of knowledge representation can be used for both types and tokens, a frame-based notation being one of them. (Of course, due to a number of possible reasons, a complete knowledge representation system can use one type of representation for the types and another for the tokens, cf. Hobbs 1985 for a discussion of such a position.) The frames for a type and its token will not, however, be identical in structure. The semantic content of slots</context>
</contexts>
<marker>Nirenburg, Raskin, Tucker, 1986</marker>
<rawString>Nirenburg, S., V. Raskin and A.B. Tucker 1986. On KnowledgeBased Machine Translation. Proceedings of XI International Conference on Computational Linguistics, COLING-86, Bonn, Germany, August 1986, pp. 627-632</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Nirenburg</author>
<author>V Raskin</author>
<author>A B Tucker</author>
</authors>
<title>The Structure of Interlingua</title>
<date>1987</date>
<booktitle>Machine Translation: Theoretical and Methodological Issues, ACL Series &apos;Studies in Natural Language Processing,&apos;</booktitle>
<pages>90--113</pages>
<editor>in TRANSLATOR. In: S. Nirenburg (editor),</editor>
<publisher>Cambridge University Press,</publisher>
<contexts>
<context position="2420" citStr="Nirenburg et al. 1987" startWordPosition="347" endWordPosition="351">acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system design. We would like to address some important methodological and strategic points in providing the lexicon support in the context of a text processing system, such as the machine translation system TRANSLATOR (Nirenburg et al. 1987). 1. NEED HELP BUILDING LEXICON A natural language lexicon is a necessary part of any natural language processing (NLP) system. Building such a lexicon is an important knowledge acquisition task. The format of the lexicon has been the subject of substantial number of research projects, both in linguistics and in artificial intelligence (AI). In linguistic semantics, the efforts have focused on the formal notation for representing semantic knowledge with a special emphasis on the involved categories and rules. The projects have ranged from simple feature notations (Katz, Fodor 1963; Bendix 1966</context>
</contexts>
<marker>Nirenburg, Raskin, Tucker, 1987</marker>
<rawString>Nirenburg, S., V. Raskin and A.B. Tucker 1987. The Structure of Interlingua in TRANSLATOR. In: S. Nirenburg (editor), Machine Translation: Theoretical and Methodological Issues, ACL Series &apos;Studies in Natural Language Processing,&apos; Cambridge University Press, pp. 90-113.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Nirenburg</author>
<author>I Nirenburg</author>
<author>J H Reynolds</author>
</authors>
<title>Control Knowledge in POPLAR: a Personality-Oriented Planner.</title>
<date>1985</date>
<booktitle>Proceedings of 3rd Annual Conference on Intelligent Systems and Machines.</booktitle>
<pages>63--67</pages>
<location>Oakland University, Rochester, Michigan,</location>
<contexts>
<context position="9528" citStr="Nirenburg et al. 1985" startWordPosition="1450" endWordPosition="1453">nguage words and phrases. In reality, Al systems deal not with the entire world but typically with a well-specified subworld of it. In other words, in any practical application, the world concept lexicon will, in fact, be a subworld concept lexicon. In the area of machine translation the analysis and generation lexicons involve two different natural languages, which creates the task of building such resources as, say, an English — subworld and subworld — Russian lexicons, as is the case, for example, in TRANSLATOR, the knowledge-based machine translation project for the computer subworld (see Nirenburg et al. 1985, 1986, 1987). 2. WORLD FIRST, WORD LATER We assert that of the three lexicons described above, the first to be built must be the subworld concept lexicon. The availability of such a lexicon is a sine qua non for any subsequent lexical work in NLP. The recognized necessity to describe the concept lexicon prior to dealing with natural languages is a feature which clearly distinguishes our approach from Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 277 Sergei Nirenburg and Victor Raskin The Subworld Concept Lexicon and the Lexicon Management System other work on lexical a</context>
</contexts>
<marker>Nirenburg, Nirenburg, Reynolds, 1985</marker>
<rawString>Nirenburg, S., I. Nirenburg and J.H. Reynolds 1985. Control Knowledge in POPLAR: a Personality-Oriented Planner. Proceedings of 3rd Annual Conference on Intelligent Systems and Machines. Oakland University, Rochester, Michigan, April, pp. 63-67.</rawString>
</citation>
<citation valid="false">
<authors>
<author>V Raskin</author>
</authors>
<date>1985</date>
<booktitle>Linguistics and Natural Language Processing. Proceedings of the Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages,</booktitle>
<pages>268--282</pages>
<editor>in: S. Nirenburg (ed.),</editor>
<publisher>Cambridge University Press,</publisher>
<institution>Colgate University,</institution>
<location>Hamilton, NY,</location>
<note>Also</note>
<contexts>
<context position="12779" citStr="Raskin 1985" startWordPosition="1981" endWordPosition="1982">ge-independent. In other words, the same subworld may correspond to sublanguages of different natural languages. In MT, the representation of the subworld functions as — and is — the interlingua. Beginning directly with the lexicon of a natural language would make the implied subworld biased toward this language, and this is known to have an adverse affect on the description of other natural sublanguages corresponding to the same subworld. The subworld concept lexicon determines the structure of the associated analysis and generation lexicons. Thus, the constrained nature of the subworld (see Raskin 1985 and references therein as well as Kittredge and Lehrberger 1982 and Grishman and Kittredge 1986) always severely limits polysemy/homonymy so rampant in the language as a whole. Thus, the concept lexicon for the computer subworld will make it clear that there is a need to accommodate only meanings (5) and (7) in the lexical entry for operator in the corresponding sublanguage of English, even though the English language possesses all of the meanings listed in Figure 1 (cf. SOED 1973:1453). (1) one who does something, an agent (2) one who is professionally engaged to perform a certain operation </context>
</contexts>
<marker>Raskin, 1985</marker>
<rawString>Raskin, V. 1985. Linguistics and Natural Language Processing. Proceedings of the Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages, Colgate University, Hamilton, NY, August, pp. 268-282. Also in: S. Nirenburg (ed.), Machine Translation: Theoretical and Methodological Issues, ACL Series &apos;Studies in Natural Language Processing,&apos; Cambridge University Press, pp. 42-58.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V Raskin</author>
</authors>
<title>Script-Based Semantics.</title>
<date>1986</date>
<booktitle>Contemporary Issues in Language and Discourse Processes.</booktitle>
<pages>23--61</pages>
<editor>In: D.G. Ellis and W.E. Donohue (eds.),</editor>
<publisher>Erlbaum,</publisher>
<location>Hillsdale, NJ:</location>
<contexts>
<context position="3071" citStr="Raskin 1986" startWordPosition="450" endWordPosition="451">al language lexicon is a necessary part of any natural language processing (NLP) system. Building such a lexicon is an important knowledge acquisition task. The format of the lexicon has been the subject of substantial number of research projects, both in linguistics and in artificial intelligence (AI). In linguistic semantics, the efforts have focused on the formal notation for representing semantic knowledge with a special emphasis on the involved categories and rules. The projects have ranged from simple feature notations (Katz, Fodor 1963; Bendix 1966) to script-based contextual analysis (Raskin 1986). In Al, this type of work belongs to the area of knowledge representation. A number of methods of representing knowledge have been developed, ranging from first-order predicate calculus notation to quite sophisticated frame-based and advanced logical formalisms. (Brachman and Levesque 1985 summarizes the state of the art in knowledge representation.) By comparison, the number of projects devoted to the design of procedures for compiling and maintaining Copyright 1987 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted provid</context>
</contexts>
<marker>Raskin, 1986</marker>
<rawString>Raskin, V. 1986. Script-Based Semantics. In: D.G. Ellis and W.E. Donohue (eds.), Contemporary Issues in Language and Discourse Processes. Hillsdale, NJ: Erlbaum, pp. 23-61.</rawString>
</citation>
<citation valid="true">
<authors>
<author>SOED</author>
</authors>
<title>Shorter Oxford English Dictionary.</title>
<date>1973</date>
<location>Oxford: Clarendon</location>
<note>Press, 3rd Ed.</note>
<contexts>
<context position="13265" citStr="SOED 1973" startWordPosition="2062" endWordPosition="2063">structure of the associated analysis and generation lexicons. Thus, the constrained nature of the subworld (see Raskin 1985 and references therein as well as Kittredge and Lehrberger 1982 and Grishman and Kittredge 1986) always severely limits polysemy/homonymy so rampant in the language as a whole. Thus, the concept lexicon for the computer subworld will make it clear that there is a need to accommodate only meanings (5) and (7) in the lexical entry for operator in the corresponding sublanguage of English, even though the English language possesses all of the meanings listed in Figure 1 (cf. SOED 1973:1453). (1) one who does something, an agent (2) one who is professionally engaged to perform a certain operation (3) a surgeon (4) one who carries on financial operations (5) one who works a machine (6) one who works a business (7) a symbol Figure 1. Meanings of operator In fact, (5) will be narrowed down even further in the sublanguage. to &apos;one who works a computer&apos; and this is what the English (or any other natural language) lexical entry should be limited to. The subworld concept lexicon also determines, to a large extent, the inventory of semantic features used in the entries of the analy</context>
</contexts>
<marker>SOED, 1973</marker>
<rawString>SOED 1973. Shorter Oxford English Dictionary. Oxford: Clarendon Press, 3rd Ed.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R L Venezky</author>
</authors>
<title>Computational Aids to Dictionary Compilation. In: R.Frank and A.F.Cameron (eds.), A Plan for the Dictionary of Old English.</title>
<date>1973</date>
<pages>307--327</pages>
<publisher>University of Toronto Press,</publisher>
<location>Toronto:</location>
<contexts>
<context position="6721" citStr="Venezky 1973" startWordPosition="1016" endWordPosition="1017">uctions these people obtain at the beginning of their work cannot be very precise, unambiguous, or designed to provide in advance for any contingency. As a result, even a good knowledge representation language cannot guarantee a quality lexicon. One can in principle think of avoiding these difficulties through automation. Fully automated lexicon building procedures would definitely ensure the uniformity of description. There was a considerable enthusiasm about the possibility of a complete automation of lexicology some 15-20 years ago (see, for instance, Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premises and goals of </context>
</contexts>
<marker>Venezky, 1973</marker>
<rawString>Venezky, R.L. 1973. Computational Aids to Dictionary Compilation. In: R.Frank and A.F.Cameron (eds.), A Plan for the Dictionary of Old English. Toronto: University of Toronto Press, pp. 307-327.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D E Walker</author>
</authors>
<title>Panel Session: Machine-Readable Dictionaries.</title>
<date>1984</date>
<booktitle>Proceedings of COLING-84.</booktitle>
<pages>457</pages>
<institution>Stanford University,</institution>
<location>Stanford, CA,</location>
<contexts>
<context position="7083" citStr="Walker 1984" startWordPosition="1067" endWordPosition="1068">ures would definitely ensure the uniformity of description. There was a considerable enthusiasm about the possibility of a complete automation of lexicology some 15-20 years ago (see, for instance, Collin 1960; Grimes 1970; Kucera 1969; Venezky 1973). A more feasible scenario, however, is partial computational assistance for lexicology, probably along the lines suggested in this paper, as well as utilizing such new and promising resources as on-line dictionaries. Recent work on machine-readable dictionaries offers new and interesting possibilities both for the computerassisted lexicology (see Walker 1984) and for constructing lexical databases derived from the definitions in machine-readable dictionaries and utilized in NLP along with other fields (see Amsler 1982, 1984a; Walker, Amsler 1986, Calzolari 1984a,b). The premises and goals of these efforts are fully compatible with our belief, first, that no Al system is ready to make the kind of decisions that lexicon building requires and, second, that &apos;simply having an online version of an encyclopedia [or a dictionary] would be of little use, as there is practically nothing that current Al could draw from the raw text. Rather, we must carefully</context>
</contexts>
<marker>Walker, 1984</marker>
<rawString>Walker, D. E. 1984. Panel Session: Machine-Readable Dictionaries. Proceedings of COLING-84. Stanford University, Stanford, CA, July, p. 457.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D E Walker</author>
<author>R A Amsler</author>
</authors>
<date>1986</date>
<booktitle>The Use of Machine-Readable Dictionaries in Sublanguage Analysis. In: Grishman and Kittredge</booktitle>
<pages>69--83</pages>
<editor>(eds.),</editor>
<marker>Walker, Amsler, 1986</marker>
<rawString>Walker, D .E and R. A. Amsler 1986. The Use of Machine-Readable Dictionaries in Sublanguage Analysis. In: Grishman and Kittredge (eds.), pp. 69-83.</rawString>
</citation>
<citation valid="true">
<authors>
<author>U Zernik</author>
<author>M Dyer</author>
</authors>
<title>Towards a Self-Extending Lexicon.</title>
<date>1985</date>
<booktitle>Proceedings of 23d ACL,</booktitle>
<pages>284--292</pages>
<contexts>
<context position="1591" citStr="Zernik and Dyer 1985" startWordPosition="216" endWordPosition="219">tems. The work in lexicon has centered on a) studies concerned with the utilization of conventional humanoriented dictionaries, newly available in machine-readable form, for computational tasks (e.g., Amsler 1984a,b; Chodorow et al. 1985; Ahlswede 1985; Markowitz et al. 1986) improving the ancillary capabilities for lexicon systems, such as, for instance, morphological processors and descriptions (e.g., Nirenburg and Ben Asher 1984; Byrd et al. 1986; Boguraev et al. 1987); c) hand-building of lexicons necessary for natural language systems, often with considerations about extensibility (e.g., Zernik and Dyer 1985; Bessemer and Jacobs 1987). An interesting perspective on the field is given in Miller (1985). Knowledge acquisition is a central topic in Al and expert systems. A number of systems exist for assistance in acquiring specialized knowledge for natural language processing. Thus, TEAM (Grosz et al. 1985), TELI (Ballard and Stumberger, 1986), IRACQ (Ayuso et al. 1987) and some others are devoted to facilitating customizations in the framework of database query systems; INKA (Phillips et al. 1986) and CYC (Lenat et al. 1986) are examples of knowledge acquisition systems aimed at expert system desig</context>
</contexts>
<marker>Zernik, Dyer, 1985</marker>
<rawString>Zernik, U. and M. Dyer. 1985. Towards a Self-Extending Lexicon. Proceedings of 23d ACL, pp. 284-292.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Computational Linguistics</author>
</authors>
<date>1987</date>
<volume>13</volume>
<pages>289</pages>
<location>Numbers</location>
<marker>Linguistics, 1987</marker>
<rawString>Computational Linguistics, Volume 13, Numbers 3-4, July-December 1987 289</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>