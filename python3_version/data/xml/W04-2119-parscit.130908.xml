<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.029116">
<title confidence="0.990527">
Application Adaptive Electronic Dictionary with Intelligent Interface
</title>
<author confidence="0.990372">
Svetlana Sheremetyeva
</author>
<affiliation confidence="0.992615">
Copenhagen Business School,
</affiliation>
<address confidence="0.896937333333333">
LanA Consulting
Madvigs Alle, 9, 2
Copenhagen, Denmark, DK-1829
</address>
<email confidence="0.982287">
lanaconsult@mail.dk
</email>
<sectionHeader confidence="0.992216" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99992725">
The paper presents an electronic dictionary
that can be adapted to the needs of different
NLP applications. It suggests some ways to
save on software customisation and
acquisition effort through an intelligent
developer interface. The emphasis is made on
the flexibility of data representation, handling
and access speed.
</bodyText>
<sectionHeader confidence="0.998494" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999535827586207">
In this paper we try to contribute to the problem
of electronic dictionaries with a case study, -
TransDict, - a multilingual lexicon for a family of
patent-related NLP applications, such as AutoPat,
APTrans and AutoRead1. TransDict thus conforms
to the “Multilingual-Specialized” dictionary
paradigm (Sérasset, 1993), but it can also be used
as a stand alone tool and adapted for other
language related tasks, e.g., training computational
linguists.
The motivation to focuse on application tuned
dictionaries is that though developing reusable full-
sized knowledge bases for NLP systems is highly
desirable this process is extremely expensive and
time consuming, and reusability is not guaranteed.
If an NLP system uses a restricted sublanguage,
and, thus, can operate with smaller-scale
dictionaries, the scope of acquisition and
development effort will decrease correspondingly.
Dictionary software should be adaptable to the
specificity of sublanguages.
The languages that are currently covered are
English and Danish but TransDict can easily be
extended to a multiple number of other languages.
TransDict features a powerful environment for
acquisition, editing, browsing, defaulting and
coherence checking. It is implemented in C++ as
an integral part of 32-bit Windows applications for
Windows 95/98/2000/NT.
</bodyText>
<footnote confidence="0.949009333333333">
1 AutoPat, APTrans, AutoRead, - computer systems
for authoring, translation and improving readability of
paten claims, correspondingly (Sheremetyeva, 2003)
</footnote>
<sectionHeader confidence="0.992864" genericHeader="introduction">
2 Related work
</sectionHeader>
<bodyText confidence="0.999949892857143">
A vast amount of research in the field of
electronic dictionaries concentrate on data
unification, representation, organization and
management with the major focus on
multilingual dictionaries as, for example, in
(Wong, 2000; Boitet et al.,2002).
Multilingual electronic dictionaries often
include a database of cross-referenced unilingual
dictionaries with the use of interlingua such as
ontology (Onyshkevich and Nirenburg, 1994))
or a pivotal language (Boitet et al.,cf.).
The architecture of such dictionaries normally
include a lexical database and a set of tools for
data management, - visualisers, editors,
defaulters, etc. (Khatchadourian, 1992). A
user-friendly interface is one of the major issues
still uderdeveloped (Bilac and Zock, 2003).
XML and SGML data representation
languages (Boitet et al., cf.) have been a
successful approach to facilitate the export of
electronic dictionaries to different applications
though many dictionaries use their own internal
data representation formats (Fedder, 1992).
Finally, it is desirable for electronic
dictionaries to be stand-alone modules with
defined interfaces for interaction with other
linguistic applications (Pointer project report,
http://www.computing.surrey.ac.uk/ai/pointer).
</bodyText>
<sectionHeader confidence="0.90101" genericHeader="method">
3 Overview of TransDict
</sectionHeader>
<subsectionHeader confidence="0.958865">
3.1 Feature space
</subsectionHeader>
<bodyText confidence="0.9955125">
TransDict is originally built over a set of features
relevant for the patent applications including:
Semantic features: SEM_Cl - semantic class,
CASE_ROLEs, - a set of case-roles associated
with a lexeme, if any).
Syntactic features: FILLERs, - sets of most
probable fillers of case-roles in terms of types of
phrases and lexical preferences.
Linking features: PATTERNs, - linearization
patterns of lexemes that code both the knowledge
about co-occurrences of lexemes with their case-
roles and the knowledge about their linear order.
</bodyText>
<figureCaption confidence="0.994184">
Figure 1. An overall architecture of TransDict.
</figureCaption>
<bodyText confidence="0.998632">
Morphological features: POS, - part of speech,
MORPH, - wordforms, number, gender, etc.; the
sets of parts of speech and wordforms are domain
and application specific (Sheremetyeva, cf.).
Rank feature: RANK, - corpus-based frequency
within one semantic class. The more frequent is a
lexeme, the less its rank.
</bodyText>
<subsectionHeader confidence="0.99846">
3.2 Organization and architecture
</subsectionHeader>
<bodyText confidence="0.9686995">
TransDict includes cross-referenced
monolingual lexicons for every language. A
monolingual dictionary consists of a set of entries.
An entry identifies lexical information for one
meaning of a lexeme of a given language. Every
entry is maximally defined as a tree of features:
</bodyText>
<sectionHeader confidence="0.7911575" genericHeader="method">
SEM-CL[Language[POS RANK
[MORPH CASE_ROLE FILLER PATTERN]
</sectionHeader>
<bodyText confidence="0.991451">
The CASE_ROLE , FILLER and PATTERN
features might not be specified in certain entries,
e.g., for nouns-physical objects.
A maximal entry has the following fields:
</bodyText>
<figure confidence="0.67526125">
entry::=
semantics SEM_CL
language LANGUAGE
part of speech POS
major-form string TAG
other-forms {string TAG}+
case-frame {CASE_ROLE}+
filler {CASE_ROLE{FILLER}+}+
patterns {PATTERN}+
frequency RANK
translation{cross-linguistic equivalent entry
index}+
</figure>
<bodyText confidence="0.6755925">
TAG is a label to code several features: POS,
number, inflection type and semantic class:
object, event, etc., providing for powerful tagging.
The architecture of TransDict is shown in
Figure 1. All information is stored in TransDict
internal formats: in data files and index files. The
developer works with the Main Dictionary File
(MDF) visualised by the interface (Figure 2).
</bodyText>
<figureCaption confidence="0.999889">
Figure 2. A screenshot of the TransDict interface displaying the entry for the lexeme “connected”
</figureCaption>
<bodyText confidence="0.9998555">
When the lexicographer saves the data multiple
extractions from MDF are automatically created.
These extractions contain different data subsets
relevant for different processing steps (tagging,
disambiguation, transfer and generation). The
extractions are created for every language and for
every pair of languages. They are linked to
applications by special DLL (dynamic link
library) functions that access only one of the
dictionary extractions for every processing step.
This approach gives a significant increase in
access speed and processing, which is crucial for
real world systems. This and the fact that
TransDict is implemented for PC motivated our
choice not to use the SQL database and XML
(which would have slowed down the application
performance). It does not mean, however, that
TransDict could not be used in the on-line regime.
An interface and a dll can be written for this
purpose.
</bodyText>
<sectionHeader confidence="0.987581" genericHeader="method">
4 Supporting tools
</sectionHeader>
<bodyText confidence="0.9957933">
We developed the following TransDict tools:
Data importer/merger imports wordlists and/or
feature values from external files and applications.
For example, the tool is pipelined to a tagger and
to AutoPat and AutoTrans user interfaces, to
automatically import unknown words.
Defaulter automatically assignes entry
structures and some of feature values to entries.
Editor a) edits feature values in an entry and b)
edits dictionary settings, - languages, semantic
classes, parts of speech, wordforms and their tags.
Any change of settings automatically propagates
to corresponding entries.
Morphological generator automatically
generates wordforms for a given word base form.
Content and format checker reveals incomplete
and/or bad formatted entries.
Look-up tool performs wild card search and
search on any combination of specified
parameters.
</bodyText>
<sectionHeader confidence="0.960409" genericHeader="method">
5 Interface design
</sectionHeader>
<bodyText confidence="0.9982516">
A lexicographer interacts with the lexicon by an
extemely user-friendly interface (Figure2). The
left pane of the interface screen contains a
scrollable list of lexeme base forms2 in a selected
language. A click on a language bookmark over
</bodyText>
<footnote confidence="0.7229335">
2 For convenience other wordforms are not included
in this list but can be displayed on mouse click.
</footnote>
<figureCaption confidence="0.8945905">
Figure 3. A fragment of English and Danish
equivalent entries as shown in the interface.
</figureCaption>
<bodyText confidence="0.99519944">
the morphological zone displays an entry in the
selected language equivalent to a highlighted
word in the left column. All supporting tools are
accessed through the interface menus.
The “Add” button calls pop-up menus where
the developer is prompted to select a semantic
class and part-of speech. This done, an entry with
a relevant structure, tags and default values will
be displayed. After the user types in a base form
all other wordforms are automatically generated
on mouse click. The developer is to review the
default knowledge and edit it if necessary. The
content and format checker take care of correct
descriptions with different kinds of alert messages
and rewriting support. Powerful search can be
done both in a look-up and edit mode.
Changing the dictionary settings can easily
change a base form status of a wordform, the
structure of the entry and other specification
parameters. Figure 3 shows how the default noun
entry with two slots for its morphological forms:
singular and plural, is reset for Danish where
definiteness is expressed morphologically, thus
duplicating the number of members of the noun
paradigm compared with English.
</bodyText>
<sectionHeader confidence="0.999175" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999703423076923">
In this paper we described an on-going project
on developing a multilingual electronic
dictionary, - TransDict, integrated with patent
domain applications. We focused on such effort
saving strategies as knowledge organization,
access, reusability, support tools and interface
design. As of now (April 2004) the dictionary
program including intelligent application adaptive
interface integrated with supporting tools and
external applications, - AutoPat, AutoTrans,
AutoRead (Sheremetyeva, cf.) is fully
implemented and tested. This “shell” can now be
used to create any number of dictionaries with
different feature spaces.
The TransDict patent domain knowledge base
currently contains about 60,000 completed
English entries and around 100 equivalent Danish
entries that are directly used in testing analysis,
transfer and generation modules for the English-
Danish machine translation system. We plan to
increase the English-Danish knowledge base to a
product size level by December 2004.
TransDict (with patent domain or other
knowledge) can be used as a stand-alone tool, for
other applications e.g., for training computational
linguists.
</bodyText>
<sectionHeader confidence="0.998921" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.984229551724138">
S.Bilac and M.Zock. 2003. Towards a user-
friendly dictionary interface. Papillon 2003
Workshop, 3-5 July, NII, Sapporo, Japan.
C.Boitet, M.Mangeot-Lerebours and G.Sérasset.
2002. The PAPILLON project: cooperatively
building a multilingual lexical data-base to
derive open source dictionaries &amp; lexicons.
Proceedings of the 2nd Workshop NLPXML
2002, Post COLING 2002 Workshop. Taipei.
L.Fedder.1992, The Multilex Internal Format.
Multilex report, June.
H. Khatchadourian 1992, Tools, functional
specifications. Multilex report, February.
B. Onyshkevich and S. Nirenburg. 1994. The
lexicon in the scheme of KBMT things.
Thechnical report MCCS-94-277, CRL, NMSU.
G. Sérasset. 1993. Recent Trends of Electronic
Dictionary Research and Development in
Europe, Technical Memorandum Electronic
Dictionary Research (EDR), Tokyo, Japan.
S. Sheremetyeva. 2003. Natural Language
Analysis of Patent Claims. Proceedings of the
workshop “Patent Corpus Processing” in
conjunction with 41st Annual Meeting of the
Association for Computational Linguistics (ACL
2003), Sapporo. Japan, July 7-12.
K.Wong.2000. Multilingual Electronic Dictionary
Project.http://www.csse.monash.edu.au/hons/pr
ojects/2000/Kevin.Wong/ksgw.htm
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.433063">
<title confidence="0.998099">Application Adaptive Electronic Dictionary with Intelligent Interface</title>
<author confidence="0.870405">Svetlana</author>
<affiliation confidence="0.995417">Copenhagen Business</affiliation>
<address confidence="0.827296333333333">LanA Madvigs Alle, 9, Copenhagen, Denmark,</address>
<email confidence="0.99899">lanaconsult@mail.dk</email>
<abstract confidence="0.998519333333333">The paper presents an electronic dictionary that can be adapted to the needs of different NLP applications. It suggests some ways to save on software customisation and acquisition effort through an intelligent developer interface. The emphasis is made on the flexibility of data representation, handling and access speed.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Bilac</author>
<author>M Zock</author>
</authors>
<title>Towards a userfriendly dictionary interface. Papillon</title>
<date>2003</date>
<booktitle>Workshop,</booktitle>
<pages>3--5</pages>
<location>NII, Sapporo, Japan.</location>
<contexts>
<context position="2786" citStr="Bilac and Zock, 2003" startWordPosition="387" endWordPosition="390">nd management with the major focus on multilingual dictionaries as, for example, in (Wong, 2000; Boitet et al.,2002). Multilingual electronic dictionaries often include a database of cross-referenced unilingual dictionaries with the use of interlingua such as ontology (Onyshkevich and Nirenburg, 1994)) or a pivotal language (Boitet et al.,cf.). The architecture of such dictionaries normally include a lexical database and a set of tools for data management, - visualisers, editors, defaulters, etc. (Khatchadourian, 1992). A user-friendly interface is one of the major issues still uderdeveloped (Bilac and Zock, 2003). XML and SGML data representation languages (Boitet et al., cf.) have been a successful approach to facilitate the export of electronic dictionaries to different applications though many dictionaries use their own internal data representation formats (Fedder, 1992). Finally, it is desirable for electronic dictionaries to be stand-alone modules with defined interfaces for interaction with other linguistic applications (Pointer project report, http://www.computing.surrey.ac.uk/ai/pointer). 3 Overview of TransDict 3.1 Feature space TransDict is originally built over a set of features relevant fo</context>
</contexts>
<marker>Bilac, Zock, 2003</marker>
<rawString>S.Bilac and M.Zock. 2003. Towards a userfriendly dictionary interface. Papillon 2003 Workshop, 3-5 July, NII, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Mangeot-Lerebours C Boitet</author>
<author>G Sérasset</author>
</authors>
<title>The PAPILLON project: cooperatively building a multilingual lexical data-base to derive open source dictionaries &amp; lexicons.</title>
<date>2002</date>
<booktitle>Proceedings of the 2nd Workshop NLPXML 2002, Post COLING 2002 Workshop.</booktitle>
<location>Taipei.</location>
<marker>Boitet, Sérasset, 2002</marker>
<rawString>C.Boitet, M.Mangeot-Lerebours and G.Sérasset. 2002. The PAPILLON project: cooperatively building a multilingual lexical data-base to derive open source dictionaries &amp; lexicons. Proceedings of the 2nd Workshop NLPXML 2002, Post COLING 2002 Workshop. Taipei.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Fedder 1992</author>
</authors>
<title>The Multilex Internal Format.</title>
<date></date>
<tech>Multilex report,</tech>
<marker>1992, </marker>
<rawString>L.Fedder.1992, The Multilex Internal Format. Multilex report, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Khatchadourian</author>
</authors>
<title>Tools, functional specifications.</title>
<date>1992</date>
<tech>Multilex report,</tech>
<contexts>
<context position="2689" citStr="Khatchadourian, 1992" startWordPosition="374" endWordPosition="375"> field of electronic dictionaries concentrate on data unification, representation, organization and management with the major focus on multilingual dictionaries as, for example, in (Wong, 2000; Boitet et al.,2002). Multilingual electronic dictionaries often include a database of cross-referenced unilingual dictionaries with the use of interlingua such as ontology (Onyshkevich and Nirenburg, 1994)) or a pivotal language (Boitet et al.,cf.). The architecture of such dictionaries normally include a lexical database and a set of tools for data management, - visualisers, editors, defaulters, etc. (Khatchadourian, 1992). A user-friendly interface is one of the major issues still uderdeveloped (Bilac and Zock, 2003). XML and SGML data representation languages (Boitet et al., cf.) have been a successful approach to facilitate the export of electronic dictionaries to different applications though many dictionaries use their own internal data representation formats (Fedder, 1992). Finally, it is desirable for electronic dictionaries to be stand-alone modules with defined interfaces for interaction with other linguistic applications (Pointer project report, http://www.computing.surrey.ac.uk/ai/pointer). 3 Overvie</context>
</contexts>
<marker>Khatchadourian, 1992</marker>
<rawString>H. Khatchadourian 1992, Tools, functional specifications. Multilex report, February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Onyshkevich</author>
<author>S Nirenburg</author>
</authors>
<title>The lexicon in the scheme of KBMT things.</title>
<date>1994</date>
<tech>Thechnical report MCCS-94-277, CRL, NMSU.</tech>
<contexts>
<context position="2467" citStr="Onyshkevich and Nirenburg, 1994" startWordPosition="340" endWordPosition="343">ns for Windows 95/98/2000/NT. 1 AutoPat, APTrans, AutoRead, - computer systems for authoring, translation and improving readability of paten claims, correspondingly (Sheremetyeva, 2003) 2 Related work A vast amount of research in the field of electronic dictionaries concentrate on data unification, representation, organization and management with the major focus on multilingual dictionaries as, for example, in (Wong, 2000; Boitet et al.,2002). Multilingual electronic dictionaries often include a database of cross-referenced unilingual dictionaries with the use of interlingua such as ontology (Onyshkevich and Nirenburg, 1994)) or a pivotal language (Boitet et al.,cf.). The architecture of such dictionaries normally include a lexical database and a set of tools for data management, - visualisers, editors, defaulters, etc. (Khatchadourian, 1992). A user-friendly interface is one of the major issues still uderdeveloped (Bilac and Zock, 2003). XML and SGML data representation languages (Boitet et al., cf.) have been a successful approach to facilitate the export of electronic dictionaries to different applications though many dictionaries use their own internal data representation formats (Fedder, 1992). Finally, it i</context>
</contexts>
<marker>Onyshkevich, Nirenburg, 1994</marker>
<rawString>B. Onyshkevich and S. Nirenburg. 1994. The lexicon in the scheme of KBMT things. Thechnical report MCCS-94-277, CRL, NMSU.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Sérasset</author>
</authors>
<title>Recent Trends of</title>
<date>1993</date>
<booktitle>Electronic Dictionary Research and Development in Europe, Technical Memorandum Electronic Dictionary Research (EDR),</booktitle>
<location>Tokyo, Japan.</location>
<contexts>
<context position="867" citStr="Sérasset, 1993" startWordPosition="117" endWordPosition="118">nary that can be adapted to the needs of different NLP applications. It suggests some ways to save on software customisation and acquisition effort through an intelligent developer interface. The emphasis is made on the flexibility of data representation, handling and access speed. 1 Introduction In this paper we try to contribute to the problem of electronic dictionaries with a case study, - TransDict, - a multilingual lexicon for a family of patent-related NLP applications, such as AutoPat, APTrans and AutoRead1. TransDict thus conforms to the “Multilingual-Specialized” dictionary paradigm (Sérasset, 1993), but it can also be used as a stand alone tool and adapted for other language related tasks, e.g., training computational linguists. The motivation to focuse on application tuned dictionaries is that though developing reusable fullsized knowledge bases for NLP systems is highly desirable this process is extremely expensive and time consuming, and reusability is not guaranteed. If an NLP system uses a restricted sublanguage, and, thus, can operate with smaller-scale dictionaries, the scope of acquisition and development effort will decrease correspondingly. Dictionary software should be adapta</context>
</contexts>
<marker>Sérasset, 1993</marker>
<rawString>G. Sérasset. 1993. Recent Trends of Electronic Dictionary Research and Development in Europe, Technical Memorandum Electronic Dictionary Research (EDR), Tokyo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Sheremetyeva</author>
</authors>
<title>Natural Language Analysis of Patent Claims.</title>
<date>2003</date>
<booktitle>Proceedings of the workshop “Patent Corpus Processing” in conjunction with 41st Annual Meeting of the Association for Computational Linguistics (ACL 2003),</booktitle>
<pages>7--12</pages>
<location>Sapporo. Japan,</location>
<contexts>
<context position="2020" citStr="Sheremetyeva, 2003" startWordPosition="281" endWordPosition="282">ill decrease correspondingly. Dictionary software should be adaptable to the specificity of sublanguages. The languages that are currently covered are English and Danish but TransDict can easily be extended to a multiple number of other languages. TransDict features a powerful environment for acquisition, editing, browsing, defaulting and coherence checking. It is implemented in C++ as an integral part of 32-bit Windows applications for Windows 95/98/2000/NT. 1 AutoPat, APTrans, AutoRead, - computer systems for authoring, translation and improving readability of paten claims, correspondingly (Sheremetyeva, 2003) 2 Related work A vast amount of research in the field of electronic dictionaries concentrate on data unification, representation, organization and management with the major focus on multilingual dictionaries as, for example, in (Wong, 2000; Boitet et al.,2002). Multilingual electronic dictionaries often include a database of cross-referenced unilingual dictionaries with the use of interlingua such as ontology (Onyshkevich and Nirenburg, 1994)) or a pivotal language (Boitet et al.,cf.). The architecture of such dictionaries normally include a lexical database and a set of tools for data manage</context>
</contexts>
<marker>Sheremetyeva, 2003</marker>
<rawString>S. Sheremetyeva. 2003. Natural Language Analysis of Patent Claims. Proceedings of the workshop “Patent Corpus Processing” in conjunction with 41st Annual Meeting of the Association for Computational Linguistics (ACL 2003), Sapporo. Japan, July 7-12.</rawString>
</citation>
<citation valid="false">
<booktitle>K.Wong.2000. Multilingual Electronic Dictionary Project.http://www.csse.monash.edu.au/hons/pr ojects/2000/Kevin.Wong/ksgw.htm</booktitle>
<marker></marker>
<rawString>K.Wong.2000. Multilingual Electronic Dictionary Project.http://www.csse.monash.edu.au/hons/pr ojects/2000/Kevin.Wong/ksgw.htm</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>