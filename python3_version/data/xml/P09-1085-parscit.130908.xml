<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000030">
<title confidence="0.999538">
Discriminative Lexicon Adaptation for Improved Character Accuracy –
A New Direction in Chinese Language Modeling
</title>
<author confidence="0.960509">
Yi-cheng Pan
</author>
<affiliation confidence="0.949547">
Speech Processing Labratory
National Taiwan University
</affiliation>
<address confidence="0.573962">
Taipei, Taiwan 10617
</address>
<email confidence="0.995874">
thomashughPan@gmail.com
</email>
<author confidence="0.807372">
Lin-shan Lee
</author>
<affiliation confidence="0.8797665">
Speech Processing Labratory
National Taiwan University
</affiliation>
<address confidence="0.573028">
Taipei, Taiwan 10617
</address>
<email confidence="0.994977">
lsl@speech.ee.ntu.edu.tw
</email>
<author confidence="0.852688">
Sadaoki Furui
</author>
<affiliation confidence="0.883678">
Furui Labratory
Tokyo Institute of Technology
</affiliation>
<address confidence="0.591828">
Tokyo 152-8552 Japan
</address>
<email confidence="0.997856">
furui@furui.cs.titech.ac.jp
</email>
<sectionHeader confidence="0.993864" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99989385">
While OOV is always a problem for most
languages in ASR, in the Chinese case the
problem can be avoided by utilizing char-
acter n-grams and moderate performances
can be obtained. However, character n-
gram has its own limitation and proper
addition of new words can increase the
ASR performance. Here we propose a dis-
criminative lexicon adaptation approach for
improved character accuracy, which not
only adds new words but also deletes some
words from the current lexicon. Different
from other lexicon adaptation approaches,
we consider the acoustic features and make
our lexicon adaptation criterion consistent
with that in the decoding process. The pro-
posed approach not only improves the ASR
character accuracy but also significantly
enhances the performance of a character-
based spoken document retrieval system.
</bodyText>
<sectionHeader confidence="0.998992" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99988305882353">
Generally, an automatic speech recognition (ASR)
system requires a lexicon. The lexicon defines the
possible set of output words and also the building
units in the language model (LM). Lexical words
offer local constraints to combine phonemes into
short chunks while the language model combines
phonemes into longer chunks by more global con-
straints. However, it’s almost impossible to include
all words into a lexicon both due to the technical
difficulty and also the fact that new words are cre-
ated continuously. The missed out words will never
be recognized, which is the well-known OOV prob-
lem. Using graphemes for OOV handling is pro-
posed in English (Bisani and Ney, 2005). Although
this sacrifices some of the lexical constraints and in-
troduces a further difficulty to combine graphemes
back into words, it is compensated by its ability for
</bodyText>
<table confidence="0.983270666666667">
5.8K characters 61.5K full lexicon
bigram 63.55% 73.8%
trigram 74.27% 79.28%
</table>
<tableCaption confidence="0.992755">
Table 1: Character recognition accuracy under dif-
</tableCaption>
<bodyText confidence="0.988955029411764">
ferent lexicons and the order of language model.
open vocabulary ASR. Morphs are another possi-
bility, which are longer than graphemes but shorter
than words, in other western languages (Hirsim¨aki
et al., 2005).
Chinese language, on the other hand, is quite
different from western languages. There are no
blanks between words and the definition for words
is vague. Since almost all characters in Chinese
have their own meanings and words are composed
of the characters, there is an obvious solution for
the OOV problem: simply using all characters as
the lexicon. In Table 1 we see the differences in
character recognition accuracy by using only 5.8K
characters and a full set of 61.5K lexicon. The train-
ing set and testing set are the same as those that
will be introduced in Section 4.1. It is clear that
characters alone can provide moderate recognition
accuracies while augmenting new words signifi-
cantly improves the performance. If the words’
semantic functionality can be abandoned, which
definitely can not be replaced by characters, we can
treat words as a means to enhance character recog-
nition accuracy. Such arguments stand at least for
Chinese ASR since they evaluate on character error
rate and do not add explicit blanks between words.
Here we formulate a lexicon adaptation problem
and try to discriminatively find out not only OOV
words beneficial for ASR but also those existing
words that can be deleted.
Unlike previous lexicon adaptation or construc-
tion approaches (Chien, 1997; Fung, 1998; Deligne
and Sagisaka, 2000; Saon and Padmanabhan, 2001;
Gao et al., 2002; Federico and Bertoldi, 2004), we
</bodyText>
<page confidence="0.977984">
755
</page>
<note confidence="0.9996115">
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 755–763,
Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP
</note>
<bodyText confidence="0.99987195">
consider the acoustic signals and also the whole
speech decoding structure. We propose to use
a simple approximation for the character poste-
rior probabilities (PPs), which combines acoustic
model and language model scores after decoding.
Based on the character PPs, we adapt the current
lexicon. The language model is then re-trained ac-
cording the new lexicon. Such procedure can be
iterated until convergence.
Characters, are not only the output units in Chi-
nese ASR but also have their roles in spoken docu-
ment retrieval (SDR). It has been shown that char-
acters are good indexing units. Generally, char-
acters can at least help OOV query handling; in
the subword-based confusion network (S-CN) pro-
posed by Pan et al. (2007), characters are even
better than words for in-vocabulary (IV) queries.
In addition to evaluating the proposed approach on
ASR performance, we investigate its helpfulness
when integrated with an S-CN framework.
</bodyText>
<sectionHeader confidence="0.999691" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999906295454546">
Previous works for lexicon adaptation were focused
on OOV rate reduction. Given an adaptation cor-
pus, the standard way is to first identify OOV words.
These OOV words are selected into the current lex-
icon based on the criterion of frequency or recency
(Federico and Bertoldi, 2004). The language model
is also re-estimated according to the new corpus
and new derived words.
For Chinese, it is more difficult to follow the
same approach since OOV words are not readily
identifiable. Several methods have been proposed
to extract OOV words from the new corpus based
on different statistics, which include associate norm
and context dependency (Chien, 1997), mutual in-
formation (Gao et al., 2002), morphological and
statistical rules (Chen and Ma, 2002), and strength
and spread measure (Fung, 1998). The used statis-
tics generally help find sequences of characters
that are consistent to the general concept of words.
However, if we focus on ASR performance, the
constraint of the extracted character strings to be
word-like is unnecessary.
Yang et al. (1998) proposed a way to select new
character strings based on average character per-
plexity reduction. The word-like constraint is not
required and they show a significant improvement
on character-based perplexity. Similar ideas were
found to use mutual probability as an effective mea-
sure to combine two existing lexicon words into a
new word (Saon and Padmanabhan, 2001). Though
proposed for English, this method is effective for
Chinese ASR (Chen et al., 2004). Gao et al. (2002)
combined an information gain-like metric and the
perplexity reduction criterion for lexicon word se-
lection. The application is on Chinese pinyin-to-
character conversion, which has very good correla-
tion with the underlying language model perplexity.
The above works actually are all focused on the
text level and only consider perplexity effect. How-
ever, as pointed by Rosenfeld (2000), lower per-
plexity does not always imply lower ASR error rate.
Here we try to face the lexicon adaptation problem
from another aspect and take the acoustic signals
involved in the decoding procedure into account.
</bodyText>
<sectionHeader confidence="0.97665" genericHeader="method">
3 Proposed Approach
</sectionHeader>
<subsectionHeader confidence="0.98155">
3.1 Overall Picture
</subsectionHeader>
<figureCaption confidence="0.994523">
Figure 1: The flow chart of the proposed approach.
</figureCaption>
<bodyText confidence="0.9672625625">
Adaptatio
We show the complete flow chart in Figure 1. At
the beginning we are given an adaptation spoken
corpus and manual transcriptions. Based on a base-
line lexicon (Lex0) and a language model (LM0)
we perform ASR on the adaptation corpus and con-
struct corresponding word lattices. We then build
character-based confusion networks (CCNs) (Fu
et al., 2006; Qian et al., 2008). On the CCNs we
perform the proposed algorithm to add and delete
words into/from the current lexicon. The LM train-
ing corpora joined with the adaptation corpus is
then segmented using Lex1 and the language model
is in turn re-trained, which gives LM1. This pro-
cedure can be iterated to give Lexi and LMi until
convergence.
</bodyText>
<sectionHeader confidence="0.509531666666667" genericHeader="method">
3.2 Character Posterior Probability and
Character-based Confusion Network
(CCN)
</sectionHeader>
<bodyText confidence="0.99970225">
Consider a word W as shown in Figure 2 with
characters {c1c2c3} corresponding to the edge e
starting at time T and ending at time t in a word
lattice. During decoding the boundaries between c1
</bodyText>
<equation confidence="0.250671">
Corpus
</equation>
<page confidence="0.980056">
756
</page>
<figureCaption confidence="0.913726666666667">
Figure 2: An edge e of word W composed of char-
acters c1c2c3 starting at time τ and ending at time
t.
</figureCaption>
<bodyText confidence="0.995194416666667">
and c2, and c2 and c3 are recorded respectively as t1
and t2. The posterior probability (PP) of the edge e
given the acoustic features A, P(e|A), is (Wessel
et al., 2001):
where α(τ) and β(t) denote the forward and back-
ward probability masses accumulated up to time τ
and t obtained by the standard forward-backward
algorithm, P(xt�|W) is the acoustic likelihood
function, PLM(W) the language model score, and
βstart the sum of all path scores in the lattice. Equa-
tion (1) can be extended to the PP of a character of
W, say c1 with edge e1:
</bodyText>
<equation confidence="0.9971515">
α(τ) · P (xt1 � |c1) · PLM(c1) · β(t1)
P (e1|A) =
</equation>
<bodyText confidence="0.99668958490566">
Here we need two new probabilities, PLM(c1)
and β(t1). Since neither is easy to estimate, we
make some approximations. First, we assume
PLM(c1) ≈ PLM(W). Of course this is not true,
the actual relation being PLM(c1) ≥ PLM(W ),
since the set of events having c1 given its his-
tory includes a set of events having W given the
same history. We used the above approximation
for easier implementation. Second, we assume
that after c1 there is only one path from t1 to
t: through c2 and c3. This is more reasonable
since we restrain the hypotheses space to be in-
side the word lattice, and pruned paths are sim-
ply neglected. With this approximation we have
β(t1) = P(xtt1|c2c3) · β(t). Substituting these
two approximate values for PLM(c1) and β(t1) in
Equation (2), the result turns out to be very sim-
ple: P(e1|A) ≈ P(e|A). With similar assump-
tions for the character edges e2 and e3, we have
P(e2|A) ≈ P(e3|A) ≈ P(e|A). Similar results
were obtained by Yao et al. (2008) from a different
point of view.
The result that P(ez|A) ≈ P(e|A) seems to
diverge from the intuition: approximating an
n-segment word by splitting the probability of
the entire edge over the segments – P(ez|A) ≈
�P(e|A). The basic meaning of Equation (1) is
�
to calculate the ratio of the paths going through a
specific edge divided by the total paths while each
path is weighted properly. Of course the paths go-
ing through a sub-edge ez should be definitely more
than the paths through the corresponding full-edge
e. As a result, P(ez|A) should usually be greater
than P(e|A), as implied by the intuition. However,
the inter-connectivity between all sub-edges and
the proper weights of them are not easy to be han-
dled well. Here we constrain the inter-connectivity
of sub-edges to be only inside its own word edge
and also simplify the calculation of the weights
of paths. This offers a tractable solution and the
performance is quite acceptable.
After we obtain the PPs for each character arc
in the lattice, such as P(ez|A) as mentioned above,
we can perform the same clustering method pro-
posed by Mangu et al. (2000) to convert the word
lattice to a strict linear sequence of clusters, each
consisting of a set of alternatives of character hy-
potheses, or a character-based confusion network
(CCN) (Fu et al., 2006; Qian et al., 2008). In CCN
we collect the PPs for all character arc c with begin-
ning time τ and end time t as P ([c; τ, t]|A) (based
on the above mentioned approximation):
</bodyText>
<equation confidence="0.945805833333333">
E P(H)P(A|H)
H = wl . . . wN E lattice:
3i E 11 . . . NJ:
wi contains [c; r, t]
E P(H&apos;)P(A|H&apos;) ,
path H&apos; E lattice
</equation>
<bodyText confidence="0.890696222222222">
where H stands for a path in the word lattice. P(H)
is the language model score of H (after proper scal-
ing) and P(A|H) is the acoustic model score. CCN
was known to be very helpful in reducing character
error rate (CER) since it minimizes the expected
CER (Fu et al., 2006; Qian et al., 2008). Given
a CCN, we simply choose the characters with the
highest PP from each cluster as the recognition
results.
</bodyText>
<subsectionHeader confidence="0.9915095">
3.3 Lexicon Adaptation with Improved
Character Accuracy (LAICA)
</subsectionHeader>
<bodyText confidence="0.999939">
In Figure 3 we show a piece of a character-based
confusion network (CCN) aligned with the corre-
sponding manual transcription characters. Such
alignment can be implemented by an efficient dy-
namic programming method. The CCN is com-
posed of several strict linear ordering clusters of
</bodyText>
<equation confidence="0.999196571428571">
α(τ) · P (xt �|W ) · PLM(W ) · β(t)
P (e|A) =
,
βstart
.
βstart
P([c; τ, t]|A) =
</equation>
<page confidence="0.994426">
757
</page>
<figureCaption confidence="0.947893333333333">
Figure 3: A character-based confusion network
(CCN) and corresponding reference manual tran-
scription characters.
</figureCaption>
<bodyText confidence="0.999071055555556">
character alternatives. In the figure, Calign(m)
is a specific cluster aligned with the mth char-
acter in the reference, which contains characters
{s ... o ...} (The alphabets n, o ... u are symbols
for specific Chinese characters) . The characters in
each cluster of CCN are well sorted according to
the PP, and in each cluster a special null character
E with its PP being equal to 1 minus the summation
of PPs for all character hypotheses in that cluster.
The clusters with E ranked first are neglected in the
alignment.
After the alignment, there are only three pos-
sibilities corresponding to each reference charac-
ter. (1) The reference character is ranked first in
the corresponding cluster (Rm−1 and the cluster
Calign(m−1)). In this case the reference charac-
ter can be correctly recognized. (2) The refer-
ence character is included in the corresponding
cluster but not ranked first. ([Rm ... Rm+2] and
{Calign(m), . . . , Calign(m+2)}) (3) The reference
character is not included in the corresponding clus-
ter (Rm+3 and Calign(m+3)). For cases (2) and (3),
the reference character will be incorrectly recog-
nized.
The basic idea of the proposed lexicon adapta-
tion with an improved character accuracy (LAICA)
approach is to enhance the PPs of those incorrectly
recognized characters by adding new words and
deleting existing words in the lexicon. Here we
only focus on those characters of case (2) men-
tioned above. This is primarily motivated by the
minimum classification error (MCE) discriminative
training approach proposed by Juang et al. (1997),
where a sigmoid function was used to suppress the
impacts of those perfectly and very poorly recog-
nized training samples. In our approach, the case
</bodyText>
<listItem confidence="0.5642055">
(1) is the perfect case and case (3) is the very poor
one. Another motivation is that for characters in
case (1), since they are already correctly recognized
we do not try to enhance their PPs.
</listItem>
<bodyText confidence="0.999913829787234">
The procedure of LAICA then becomes simple.
Among the aligned reference characters and clus-
ters of CCN, case (1) and (3) are anchors. The
reference characters between two anchors then be-
come our focus segment and their PPs should be en-
hanced. By investigating Equation (3), to enhance
the PP of a specific character we can adjust the
language model (P(H)), and the acoustic model
(P(A|H)), or we can simply modify the lexicon
(the constraint under summation). We should add
new words to cover the characters of case (2) to
enlarge the numerator of Equation (3) and at the
same time delete some existing words to suppress
the denominator.
In Figure 3, reference characters
[RmRm+1Rm+2=opq] and the clusters
{Calign(m), . . . ,Calign(m+2)} show an exam-
ple of our focus segment. For each such segment,
we at most add one new word and delete an
existing word. From the string [opq] we choose
the longest OOV part from it as a new word.
To select a word to be deleted, we choose the
longest in-vocabulary (IV) part from the top
ranked competitors of [opq], which are then [stu]
in clusters {Calign(m), . . . , Calign(m+2)}. This is
also motivated by MCE that we only suppress the
strongest competitors’ probabilities. Note that we
do not delete single-characters in the procedure.
The “at most one” constraint here is motivated
by previous language model adaptation works (Fed-
erico, 1999) which usually try to introduce new ev-
idences in the adaptation corpus but with the least
modification of the original model. Of course the
modification of language models led by the addi-
tion and deletion of words is hard to quantify and
we choose to add and delete as fewer words as pos-
sible, which is just a simple heuristic. On the other
hand, adding fewer words means that longer words
are added. It has been shown that longer words are
more helpful for ASR (Gao et al., 2004; Saon and
Padmanabhan, 2001).
The proposed LAICA approach can be regarded
as a discriminative one since it not only considers
the reference characters but also those wrongly rec-
ognized characters. This can be beneficial since it
reduces potential ambiguities existing in the lexi-
con.
</bodyText>
<page confidence="0.989478">
758
</page>
<bodyText confidence="0.614401">
The Expectation-Maximization algorithm
</bodyText>
<listItem confidence="0.9997286">
1. Bootstrap initial word segmentation by
maximum-matching algorithm
(Wong and Chan, 1996)
2. Estimate unigram LM
3. Expectation: Re-segment according
to the unigram LM
4. Maximization: Estimate the n-gram LM
5. Expectation: Re-segment according to
the n-gram LM
6. Go to step 4 until convergence
</listItem>
<tableCaption confidence="0.9705985">
Table 2: EM algorithm for word segmentation and
LM estimation
</tableCaption>
<subsectionHeader confidence="0.990407">
3.4 Word Segmentation and Language
Model Training
</subsectionHeader>
<bodyText confidence="0.99992719047619">
If we regard the word segmentation process as a
hidden variable, then we can apply EM algorithm
(Dempster et al., 1977) to train the underlying n-
gram language model. The procedure is described
in Table 2. In the algorithm we can see two ex-
pectation phases. This is natural since at the be-
ginning the bootstrap segmentation can not give
reliable statistics for higher order n-gram and we
choose to only use the unigram marginal probabili-
ties. The procedure was well established by Hwang
et al. (2006).
Actually, the EM algorithm proposed here is sim-
ilar to the n-multigram model training procedure
proposed by Deligne and Sagisaka (2000). The role
of multigrams can be regarded as the words here,
except that multigrams begin from scratch while
here we have an initial lexicon and use maximum-
matching algorithm to offer an acceptable initial
unigram probability distributions. If the initial lex-
icon is not available, the procedure proposed by
Deligne and Sagisaka (2000) is preferred.
</bodyText>
<sectionHeader confidence="0.999627" genericHeader="evaluation">
4 Experimental Results
</sectionHeader>
<subsectionHeader confidence="0.975669">
4.1 Baseline Lexicon, Corpora and Language
Models
</subsectionHeader>
<bodyText confidence="0.999938392857143">
The baseline lexicon was automatically constructed
from a 300 MB Chinese news text corpus ranging
from 1997 to 1999 using the widely applied PAT-
tree-based word extraction method (Chien, 1997).
It includes 61521 words in total, of which 5856
are single-characters. The key principles of the
PAT-tree-based approach to extract a sequence of
characters as a word are: (1) high enough frequency
count; (2) high enough mutual information between
component characters; (3) large enough number of
context variations on both sides; (4) not dominated
by the most frequent context among all context
variations. In general the words extracted have high
frequencies and clear boundaries, thus very often
they have good semantic meanings. Since all the
above statistics of all possible character sequences
in a raw corpus are combinatorially too many, we
need an efficient data structure such as the PAT-tree
to record and access all such information.
With the baseline lexicon, we performed the EM
algorithm as in Table 2 to train the trigram LM.
Here we used a 313 MB LM training corpus, which
contains text news articles in 2000 and 2001. Note
that in the following Sections, the pronunciations
of the added words were automatically labeled by
exhaustively generating all possible pronunciations
from all component characters’ canonical pronun-
ciations.
</bodyText>
<subsectionHeader confidence="0.980416">
4.2 ASR Character Accuracy Results
</subsectionHeader>
<bodyText confidence="0.999921625">
A set of broadcast news corpus collected from a
Chinese radio station from January to September,
2001 was used as the speech corpus. It contained
10K utterances. We separated these utterances into
two parts randomly: 5K as the adaptation corpus
and 5K as the testing set. We show the ASR char-
acter accuracy results after lexicon adaptation by
the proposed approach in Table 3.
</bodyText>
<table confidence="0.9985006">
Baseline LAICA-1 LAICA-2
A D A+D A D A+D
+1743 -1679 +1743 +409 -112 +314
-1679 -88
79.28 80.48 79.31 80.98 80.58 79.33 81.21
</table>
<tableCaption confidence="0.983798">
Table 3: ASR character accuracies for the baseline
</tableCaption>
<bodyText confidence="0.9390311875">
and the proposed LAICA approach. Two iterations
are performed, each with three versions. A: only
add new words, D: only delete words and A+D: si-
multaneously add and delete words. + and - means
the number of words added and deleted, respec-
tively.
For the proposed LAICA approach, we show
the results for one (LAICA-1) and two (LAICA-
2) iterations respectively, each of which has three
different versions: (A) only add new words into
the current lexicon, (D) only delete words, (A+D)
simultaneously add and delete words. The num-
ber of added or deleted words are also included in
Table 3.
There are some interesting observations. First,
we see that deletion of current words brought much
</bodyText>
<page confidence="0.962067">
759
</page>
<equation confidence="0.9984455">
P(Wt+1 = wj, Wt = wi)
Pr(wj|wi) =
</equation>
<bodyText confidence="0.999890594594595">
less benefits than adding new words. We try to give
some explanations. Deleting existing words in the
lexicon actually is a passive assistance for recog-
nizing reference characters correctly. Of course
we eliminate some strong competitive characters
in this way but we can not guarantee that refer-
ence characters will then have high enough PP
to be ranked first in its own cluster. Adding new
words into the lexicon, on the other hand, offers
explicit reinforcement in PP of the reference char-
acters. Such reinforcement offers the main positive
boosting for the PP of reference characters. These
boosted characters are under some specific con-
texts which normally correspond to OOV words
and sometimes in-vocabulary (IV) words that are
hard to be recognized.
From the model training aspect, adding new
words gives the maximum-likelihood flavor while
deleting existing words provides discriminant abil-
ity. It has been shown that discriminative train-
ing does not necessarily outperform maximum-
likelihood training until we have enough training
data (Ng and Jordan, 2001). So it is possible that
discriminatively trained model performs worse than
that trained by maximum likelihood. In our case,
adding and deleting words seem to compliment
each other well. This is an encouraging result.
Another good property is that the proposed ap-
proach converged quickly. The number of words to
be added or deleted dropped significantly in the sec-
ond iteration, compared to the first one. Generally
the fewer words to be changed the fewer recogni-
tion improvement can be expected. Actually we
have tried the third iteration and simply obtained
dozens of words to be added and no words to be
deleted, which resulted in negligible changes in
ASR recognition accuracy.
</bodyText>
<subsectionHeader confidence="0.99904">
4.3 Comparison with other Lexicon
Adaptation Methods
</subsectionHeader>
<bodyText confidence="0.999991">
In this section we compare our method with two
other traditionally used approaches: one is the PAT-
tree-based as introduced in Section 4.1 and the
other is based on mutual probability (Saon and Pad-
manabhan, 2001), which is the geometrical average
of the direct and reverse bigram:
</bodyText>
<equation confidence="0.982412">
�PM(wi,wj) = Pf(wj|wi)Pr(wi|wj),
</equation>
<bodyText confidence="0.9997845">
where the direct (Pf(·) and reverse bigram (Pr(·))
can be estimated as:
</bodyText>
<equation confidence="0.999623">
P(Wt+1 = wj, Wt = wi)
Pf(wj|wi) =
P(Wt+1 = wj) .
</equation>
<bodyText confidence="0.9894803125">
PM(wi, wj) is used as a measure about whether to
combine wi and wj as a new word. By properly
setting a threshold, we may iteratively combine
existing characters and/or words to produce the re-
quired number of new words. For both the PAT-tree-
and mutual-information-based approaches, we use
the manual transcriptions of the development 5K
utterances to collect the required statistics and we
extract 2159 and 2078 words respectively to match
the number of added words by the proposed LAICA
approach after 2 iterations (without word deletion).
The language model is also re-trained as described
in Section 3.4. The results are shown in Table 4,
where we also include the results of our approach
with 2 iterations and adding words only for refer-
ence.
</bodyText>
<table confidence="0.9985335">
PAT- Mutual LAICA-2(A)
tree Probability
Character 79.33 80.11 80.58
Accuracy
</table>
<tableCaption confidence="0.966214">
Table 4: ASR character accuracies on the lexicon
adapted by different approaches.
</tableCaption>
<bodyText confidence="0.999881185185185">
From the results we observe that the PAT-tree-
based approach did not give satisfying improve-
ments while the mutual probability-based one
worked well. This may be due to the sparse adap-
tation data, which includes only 81K characters.
PAT-tree-based approach relies on the frequency
count, and some terms which occur only once in
the adaptation data will not be extracted. Mutual
probability-based approach, on the other hand, con-
siders two simple criterion: the components of a
new word occur often together and rarely in con-
junction with other words (Saon and Padmanabhan,
2001). Compared with the proposed approach, both
PAT-tree and mutual probability do not consider the
decoding structure.
Some new words are clearly good for human
sense and definitely convey novel semantic infor-
mation, but they can be useless for speech recogni-
tion. That is, character n-gram may handle these
words equally well due to the low ambiguities with
other words. The proposed LAICA approach tries
to focus on those new words which can not be han-
dled well by simple character n-grams. Moreover,
the two methods discussed here do not offer pos-
sible ways to delete current words, which can be
considered as a further advantage of the proposed
LAICA approach.
</bodyText>
<equation confidence="0.919953">
P(Wt = wi) ,
</equation>
<page confidence="0.979888">
760
</page>
<subsectionHeader confidence="0.946308">
4.4 Application: Character-based Spoken
Document Indexing and Retrieval
</subsectionHeader>
<bodyText confidence="0.999901857142857">
Pan et al. (2007) recently proposed a new Subword-
based Confusion Network (S-CN) indexing struc-
ture for SDR, which significantly outperforms
word-based methods for IV or OOV queries. Here
we apply S-CN structure to investigate the effec-
tiveness of improved character accuracy for SDR.
Here we choose characters as the subword units,
and then the S-CN structure is exactly the same as
CCN, which was introduced in Section 3.2.
For the SDR back-end corpus, the same 5K test
utterances as used for the ASR experiment in Sec-
tion 4.2 were used. The previously mentioned lexi-
con adaptation approaches and corresponding lan-
guage models were used in the same speech recog-
nizer for the spoken document indexing. We auto-
matically choose 139 words and terms as queries
according to the frequency (at least six times in the
5K utterances). The SDR performance is evaluated
by mean average precision (MAP) calculated by
the trec eval1 package. The results are shown
in Table 5.
</bodyText>
<table confidence="0.998502714285714">
Character MAP
Accuracy
Baseline 79.28 0.8145
PAT-tree 79.33 0.8203
Mutual 80.11 0.8378
Probability
LAICA-2(A+D) 81.21 0.8628
</table>
<tableCaption confidence="0.9739025">
Table 5: ASR character accuracies and SDR MAP
performances under S-CN structure.
</tableCaption>
<bodyText confidence="0.999913">
From the results, we see that generally the
increasing of character recognition accuracy im-
proves the SDR MAP performance. This seems
trivial but we have to note the relative improve-
ments. Actually the transformation ratios from the
relative increased character accuracy to the relative
increased MAP for the three lexicon adaptation ap-
proaches are different. A key factor making the
proposed LAICA approach advantageous is that
we try to extensively raise the incorrectly recog-
nized character posterior probabilities, by means
of adding effective OOV words and deleting am-
biguous words. Actually S-CN is relying on the
character posterior probability for indexing, which
is consistent with our criterion and makes our ap-
proach beneficial. The degree of the raise of char-
acter posterior probabilities can be visualized more
clearly in the following experiment.
</bodyText>
<footnote confidence="0.984274">
1http://trec.nist.gov/
</footnote>
<table confidence="0.481628666666667">
4.5 Further Investigation: the Improved
Rank in Character-based Confusion
Networks
</table>
<bodyText confidence="0.999163666666667">
In this experiment, we have the same setup as in
Section 4.2. After decoding, we have character-
based confusion networks (CCNs) for each test
utterance. Rather than taking the top ranked char-
acters in each cluster as the recognition result, we
investigate the ranks of the reference characters in
these clusters. This can be achieved by the same
alignment as we did in Section 3.3. The results are
shown in Table 6.
</bodyText>
<table confidence="0.9996495">
# of ranked Average
reference Rank
characters
baseline 70993 1.92
PAT-tree 71038 1.89
Mutual 71054 1.81
Probability
LAICA-2(A+D) 71083 1.67
</table>
<tableCaption confidence="0.968015">
Table 6: Average ranks of reference characters in
</tableCaption>
<bodyText confidence="0.9908946875">
the confusion networks constructed by different
lexicons and corresponding language models
In Table 6 we only evaluate ranks on those ref-
erence characters that can be found in its corre-
sponding confusion network cluster (case (1) and
(2) as described in Section 3.3). The number of
those evaluated reference characters depends on
the actual CCN and is also included in the results.
Generally, over 93% of reference characters are in-
cluded (the total number is 75541). Such ranks are
critical for lattice-based spoken document indexing
approaches such as S-CN since they directly affect
retrieval precision. The advantage of the proposed
LAICA approach is clear. The results here provide
a more objective point of view since SDR evalua-
tion is inevitably effected by the selected queries.
</bodyText>
<sectionHeader confidence="0.993523" genericHeader="conclusions">
5 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.9996743">
Characters together is an interesting and distinct
language unit for Chinese. They can be simultane-
ously viewed as words and subwords, which offer
a special means for OOV handling. While relying
only on characters gives moderate performances in
ASR, properly augmenting new words significantly
increases the accuracy. An interesting question
would then be how to choose words to augment.
Here we formulate the problem as an adaptation
one and try to find the best way to alter the current
</bodyText>
<page confidence="0.990208">
761
</page>
<bodyText confidence="0.999896057142857">
lexicon for improved character accuracy.
This is a new perspective for lexicon adaptation.
Instead of identifying OOV words from adaptation
corpus to reduce OOV rate, we try to pick out word
fragments hidden in the adaptation corpus that help
ASR. Furthermore, we delete some existing words
which may result in ambiguities. Since we directly
match our criterion with that in decoding, the pro-
posed approach is expected to have more consistent
improvements than perplexity based criterions.
Characters also play an important role in spoken
document retrieval. This extends the applicability
of the proposed approach and we found that the
S-CN structure proposed by Pan et al. for spoken
document indexing fitted well with the proposed
LAICA approach.
However, there still remain lots to be improved.
For example, considering Equation 3, the language
model score and the summation constraint are not
independent. After we alter the lexicon, the LM is
different accordingly and there is no guarantee that
the obtained posterior probabilities for those incor-
rectly recognized characters would be increased.
We increased the path alternatives for those refer-
ence characters but this can not guarantee to in-
crease total path probability mass. This can be
amended by involving the discriminative language
model adaptation in the iteration, which results in
a unified language model and lexicon adaptation
framework. This can be our future work. Moreover,
the same procedure can be used in the construction.
That is, beginning with only characters in the lexi-
con and using the training data to alter the current
lexicon in each iteration. This is also an interesting
direction.
</bodyText>
<sectionHeader confidence="0.998984" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99905690625">
Maximilian Bisani and Hermann Ney. 2005. Open vo-
cabulary speech recognition with flat hybrid models.
In Interspeech, pages 725–728.
Keh-Jiann Chen and Wei-Yun Ma. 2002. Unknown
word extraction for chinese documents. In COLING,
pages 169–175.
Berlin Chen, Jen-Wei Kuo, and Wen-Hung Tsai. 2004.
Lightly supervised and data-driven approaches to
mandarin broadcast news transcription. In ICASSP,
pages 777–780.
Lee-Feng Chien. 1997. Pat-tree-based keyword ex-
traction for Chinese information retrieval. In SIGIR,
pages 50–58.
Sabine Deligne and Yoshinori Sagisaka. 2000. Sta-
tistical language modeling with a class-based n-
multigram model. Comp. Speech and Lang.,
14(3):261–279.
A. P. Dempster, N. M. Laird, and D. B. Rubin. 1977.
Maximum likelihood from incomplete data via the
em algorithm. Journal of the Royal Statistics Soci-
ety, 39(1):1–38.
Marcello Federico and Nicola Bertoldi. 2004. Broad-
cast news LM adaptation over time. Comp. Speech
Lang., 18:417–435.
Marcello Federico. 1999. Efficient language model
adaptation through MDI estimation. In Intersspech,
pages 1583–1586.
Yi-Sheng Fu, Yi-Cheng Pan, and Lin-Shan Lee.
2006. Improved large vocabulary continuous Chi-
nese speech recognition by character-based consen-
sus networks. In ISCSLP, pages 422–434.
Pascale Fung. 1998. Extracting key terms from chi-
nese and japanese texts. Computer Processing of
Oriental Languages, 12(1):99–121.
Jianfeng Gao, Joshua Goodman, Mingjing Li, and Kai-
Fu Lee. 2002. Toward a unified approach to statis-
tical language modeling for Chinese. ACM Trans-
action on Asian Language Information Processing,
1(1):3–33.
Jianfeng Gao, Mu Li, Andi Wu, and Chang-Ning
Huang. 2004. Chinese word segmentation: A prag-
matic approach. In MSR-TR-2004-123.
Teemu Hirsim¨aki, Mathias Creutz, Vesa Siivola, Mikko
Kurimo, Sami Virpioja, and Janne Pylkk¨onen.
2005. Unlimited vocabulary speech recognition
with morph language models applied to Finnish.
Comp. Speech Lang.
Mei-Yuh Hwang, Xin Lei, Wen Wang, and Takahiro
Shinozaki. 2006. Investigation on mandarin
broadcast news speech recognition. In Interspeech-
ICSLP, pages 1233–1236.
Bing-Hwang Juang, Wu Chou, and Chin-Hui Lee.
1997. Minimum classification error rate methods for
speech recognition. IEEE Trans. Speech Audio Pro-
cess., 5(3):257–265.
Lidia Mangu, Eric Brill, and Andreas Stolcke. 2000.
Finding consensus in speech recognition: Word er-
ror minimization and other applications of confusion
networks. Comp. Speech Lang., 14(2):373–400.
Andrew Y. Ng and Michael I. Jordan. 2001. On
discriminative vs. generative classifiers: A compar-
ison of logistic regression and naive bayes. In Ad-
vances in Neural Information Processing Systems
(14), pages 841–848.
</reference>
<page confidence="0.961996">
762
</page>
<reference confidence="0.999625827586207">
Yi-Cheng Pan, Hung-Lin Chang, and Lin-Shan Lee.
2007. Analytical comparison between position spe-
cific posterior lattices and confusion networks based
on words and subword units for spoken document
indexing. In ASRU.
Yao Qian, Frank K. Soong, and Tan Lee. 2008. Tone-
enhanced generalized character posterior probabil-
ity (GCPP) for Cantonese LUCSR. Comp. Speech
Lang., 22(4):360–373.
Ronald Rosenfeld. 2000. Two decades of statistical
language modeling: Where do we go from here?
Proceeding of IEEE, 88(8):1270–1278.
George Saon and Mukund Padmanabhan. 2001. Data-
driven approach to designing compound words for
continuous speech recognition. IEEE Trans. Speech
and Audio Process., 9(4):327–332, May.
Frank Wessel, Ralf Schlicter, Klaus Macherey, and Her-
mann Ney. 2001. Confidence measures for large
vocabulary continuous speech recognition. IEEE
Trans. Speech Audio Process., 9(3):288–298, Mar.
Pak-kwong Wong and Chorkin Chan. 1996. Chinese
word segmentation based on maximum matching
and word binding force. In Proceedings of the 16th
International Conference on Computational Linguis-
tic, pages 200–203.
Kae-Cherng Yang, Tai-Hsuan Ho, Lee-Feng Chien, and
Lin-Shan Lee. 1998. Statistics-based segment pat-
tern lexicon: A new direction for chinese language
modeling. In ICASSP, pages 169–172.
</reference>
<page confidence="0.998729">
763
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.711683">
<title confidence="0.9994675">Discriminative Lexicon Adaptation for Improved Character Accuracy – A New Direction in Chinese Language Modeling</title>
<author confidence="0.997224">Yi-cheng Pan</author>
<affiliation confidence="0.9896025">Speech Processing Labratory National Taiwan University</affiliation>
<address confidence="0.995795">Taipei, Taiwan 10617</address>
<email confidence="0.999013">thomashughPan@gmail.com</email>
<author confidence="0.968628">Lin-shan Lee</author>
<affiliation confidence="0.974348">Speech Processing Labratory National Taiwan University</affiliation>
<address confidence="0.998019">Taipei, Taiwan 10617</address>
<email confidence="0.961345">lsl@speech.ee.ntu.edu.tw</email>
<author confidence="0.952654">Sadaoki Furui</author>
<affiliation confidence="0.95687">Furui Labratory Tokyo Institute of Technology</affiliation>
<address confidence="0.981275">Tokyo 152-8552 Japan</address>
<email confidence="0.993304">furui@furui.cs.titech.ac.jp</email>
<abstract confidence="0.99898680952381">While OOV is always a problem for most languages in ASR, in the Chinese case the problem can be avoided by utilizing charand moderate performances can be obtained. However, character ngram has its own limitation and proper addition of new words can increase the ASR performance. Here we propose a discriminative lexicon adaptation approach for improved character accuracy, which not only adds new words but also deletes some words from the current lexicon. Different from other lexicon adaptation approaches, we consider the acoustic features and make our lexicon adaptation criterion consistent with that in the decoding process. The proposed approach not only improves the ASR character accuracy but also significantly enhances the performance of a characterbased spoken document retrieval system.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Maximilian Bisani</author>
<author>Hermann Ney</author>
</authors>
<title>Open vocabulary speech recognition with flat hybrid models.</title>
<date>2005</date>
<booktitle>In Interspeech,</booktitle>
<pages>725--728</pages>
<contexts>
<context position="1964" citStr="Bisani and Ney, 2005" startWordPosition="288" endWordPosition="291">requires a lexicon. The lexicon defines the possible set of output words and also the building units in the language model (LM). Lexical words offer local constraints to combine phonemes into short chunks while the language model combines phonemes into longer chunks by more global constraints. However, it’s almost impossible to include all words into a lexicon both due to the technical difficulty and also the fact that new words are created continuously. The missed out words will never be recognized, which is the well-known OOV problem. Using graphemes for OOV handling is proposed in English (Bisani and Ney, 2005). Although this sacrifices some of the lexical constraints and introduces a further difficulty to combine graphemes back into words, it is compensated by its ability for 5.8K characters 61.5K full lexicon bigram 63.55% 73.8% trigram 74.27% 79.28% Table 1: Character recognition accuracy under different lexicons and the order of language model. open vocabulary ASR. Morphs are another possibility, which are longer than graphemes but shorter than words, in other western languages (Hirsim¨aki et al., 2005). Chinese language, on the other hand, is quite different from western languages. There are no</context>
</contexts>
<marker>Bisani, Ney, 2005</marker>
<rawString>Maximilian Bisani and Hermann Ney. 2005. Open vocabulary speech recognition with flat hybrid models. In Interspeech, pages 725–728.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Keh-Jiann Chen</author>
<author>Wei-Yun Ma</author>
</authors>
<title>Unknown word extraction for chinese documents.</title>
<date>2002</date>
<booktitle>In COLING,</booktitle>
<pages>169--175</pages>
<contexts>
<context position="5738" citStr="Chen and Ma, 2002" startWordPosition="897" endWordPosition="900">dentify OOV words. These OOV words are selected into the current lexicon based on the criterion of frequency or recency (Federico and Bertoldi, 2004). The language model is also re-estimated according to the new corpus and new derived words. For Chinese, it is more difficult to follow the same approach since OOV words are not readily identifiable. Several methods have been proposed to extract OOV words from the new corpus based on different statistics, which include associate norm and context dependency (Chien, 1997), mutual information (Gao et al., 2002), morphological and statistical rules (Chen and Ma, 2002), and strength and spread measure (Fung, 1998). The used statistics generally help find sequences of characters that are consistent to the general concept of words. However, if we focus on ASR performance, the constraint of the extracted character strings to be word-like is unnecessary. Yang et al. (1998) proposed a way to select new character strings based on average character perplexity reduction. The word-like constraint is not required and they show a significant improvement on character-based perplexity. Similar ideas were found to use mutual probability as an effective measure to combine</context>
</contexts>
<marker>Chen, Ma, 2002</marker>
<rawString>Keh-Jiann Chen and Wei-Yun Ma. 2002. Unknown word extraction for chinese documents. In COLING, pages 169–175.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Berlin Chen</author>
<author>Jen-Wei Kuo</author>
<author>Wen-Hung Tsai</author>
</authors>
<title>Lightly supervised and data-driven approaches to mandarin broadcast news transcription.</title>
<date>2004</date>
<booktitle>In ICASSP,</booktitle>
<pages>777--780</pages>
<contexts>
<context position="6501" citStr="Chen et al., 2004" startWordPosition="1018" endWordPosition="1021">l concept of words. However, if we focus on ASR performance, the constraint of the extracted character strings to be word-like is unnecessary. Yang et al. (1998) proposed a way to select new character strings based on average character perplexity reduction. The word-like constraint is not required and they show a significant improvement on character-based perplexity. Similar ideas were found to use mutual probability as an effective measure to combine two existing lexicon words into a new word (Saon and Padmanabhan, 2001). Though proposed for English, this method is effective for Chinese ASR (Chen et al., 2004). Gao et al. (2002) combined an information gain-like metric and the perplexity reduction criterion for lexicon word selection. The application is on Chinese pinyin-tocharacter conversion, which has very good correlation with the underlying language model perplexity. The above works actually are all focused on the text level and only consider perplexity effect. However, as pointed by Rosenfeld (2000), lower perplexity does not always imply lower ASR error rate. Here we try to face the lexicon adaptation problem from another aspect and take the acoustic signals involved in the decoding procedur</context>
</contexts>
<marker>Chen, Kuo, Tsai, 2004</marker>
<rawString>Berlin Chen, Jen-Wei Kuo, and Wen-Hung Tsai. 2004. Lightly supervised and data-driven approaches to mandarin broadcast news transcription. In ICASSP, pages 777–780.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lee-Feng Chien</author>
</authors>
<title>Pat-tree-based keyword extraction for Chinese information retrieval.</title>
<date>1997</date>
<booktitle>In SIGIR,</booktitle>
<pages>50--58</pages>
<contexts>
<context position="3758" citStr="Chien, 1997" startWordPosition="579" endWordPosition="580">w words significantly improves the performance. If the words’ semantic functionality can be abandoned, which definitely can not be replaced by characters, we can treat words as a means to enhance character recognition accuracy. Such arguments stand at least for Chinese ASR since they evaluate on character error rate and do not add explicit blanks between words. Here we formulate a lexicon adaptation problem and try to discriminatively find out not only OOV words beneficial for ASR but also those existing words that can be deleted. Unlike previous lexicon adaptation or construction approaches (Chien, 1997; Fung, 1998; Deligne and Sagisaka, 2000; Saon and Padmanabhan, 2001; Gao et al., 2002; Federico and Bertoldi, 2004), we 755 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 755–763, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP consider the acoustic signals and also the whole speech decoding structure. We propose to use a simple approximation for the character posterior probabilities (PPs), which combines acoustic model and language model scores after decoding. Based on the character PPs, we adapt the current lexicon. The language model is th</context>
<context position="5642" citStr="Chien, 1997" startWordPosition="884" endWordPosition="885"> focused on OOV rate reduction. Given an adaptation corpus, the standard way is to first identify OOV words. These OOV words are selected into the current lexicon based on the criterion of frequency or recency (Federico and Bertoldi, 2004). The language model is also re-estimated according to the new corpus and new derived words. For Chinese, it is more difficult to follow the same approach since OOV words are not readily identifiable. Several methods have been proposed to extract OOV words from the new corpus based on different statistics, which include associate norm and context dependency (Chien, 1997), mutual information (Gao et al., 2002), morphological and statistical rules (Chen and Ma, 2002), and strength and spread measure (Fung, 1998). The used statistics generally help find sequences of characters that are consistent to the general concept of words. However, if we focus on ASR performance, the constraint of the extracted character strings to be word-like is unnecessary. Yang et al. (1998) proposed a way to select new character strings based on average character perplexity reduction. The word-like constraint is not required and they show a significant improvement on character-based p</context>
<context position="18146" citStr="Chien, 1997" startWordPosition="3016" endWordPosition="3017"> The role of multigrams can be regarded as the words here, except that multigrams begin from scratch while here we have an initial lexicon and use maximummatching algorithm to offer an acceptable initial unigram probability distributions. If the initial lexicon is not available, the procedure proposed by Deligne and Sagisaka (2000) is preferred. 4 Experimental Results 4.1 Baseline Lexicon, Corpora and Language Models The baseline lexicon was automatically constructed from a 300 MB Chinese news text corpus ranging from 1997 to 1999 using the widely applied PATtree-based word extraction method (Chien, 1997). It includes 61521 words in total, of which 5856 are single-characters. The key principles of the PAT-tree-based approach to extract a sequence of characters as a word are: (1) high enough frequency count; (2) high enough mutual information between component characters; (3) large enough number of context variations on both sides; (4) not dominated by the most frequent context among all context variations. In general the words extracted have high frequencies and clear boundaries, thus very often they have good semantic meanings. Since all the above statistics of all possible character sequence</context>
</contexts>
<marker>Chien, 1997</marker>
<rawString>Lee-Feng Chien. 1997. Pat-tree-based keyword extraction for Chinese information retrieval. In SIGIR, pages 50–58.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sabine Deligne</author>
<author>Yoshinori Sagisaka</author>
</authors>
<title>Statistical language modeling with a class-based nmultigram model.</title>
<date>2000</date>
<journal>Comp. Speech and Lang.,</journal>
<volume>14</volume>
<issue>3</issue>
<contexts>
<context position="3798" citStr="Deligne and Sagisaka, 2000" startWordPosition="583" endWordPosition="586">roves the performance. If the words’ semantic functionality can be abandoned, which definitely can not be replaced by characters, we can treat words as a means to enhance character recognition accuracy. Such arguments stand at least for Chinese ASR since they evaluate on character error rate and do not add explicit blanks between words. Here we formulate a lexicon adaptation problem and try to discriminatively find out not only OOV words beneficial for ASR but also those existing words that can be deleted. Unlike previous lexicon adaptation or construction approaches (Chien, 1997; Fung, 1998; Deligne and Sagisaka, 2000; Saon and Padmanabhan, 2001; Gao et al., 2002; Federico and Bertoldi, 2004), we 755 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 755–763, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP consider the acoustic signals and also the whole speech decoding structure. We propose to use a simple approximation for the character posterior probabilities (PPs), which combines acoustic model and language model scores after decoding. Based on the character PPs, we adapt the current lexicon. The language model is then re-trained according the new lexicon.</context>
<context position="17533" citStr="Deligne and Sagisaka (2000)" startWordPosition="2919" endWordPosition="2922">ard the word segmentation process as a hidden variable, then we can apply EM algorithm (Dempster et al., 1977) to train the underlying ngram language model. The procedure is described in Table 2. In the algorithm we can see two expectation phases. This is natural since at the beginning the bootstrap segmentation can not give reliable statistics for higher order n-gram and we choose to only use the unigram marginal probabilities. The procedure was well established by Hwang et al. (2006). Actually, the EM algorithm proposed here is similar to the n-multigram model training procedure proposed by Deligne and Sagisaka (2000). The role of multigrams can be regarded as the words here, except that multigrams begin from scratch while here we have an initial lexicon and use maximummatching algorithm to offer an acceptable initial unigram probability distributions. If the initial lexicon is not available, the procedure proposed by Deligne and Sagisaka (2000) is preferred. 4 Experimental Results 4.1 Baseline Lexicon, Corpora and Language Models The baseline lexicon was automatically constructed from a 300 MB Chinese news text corpus ranging from 1997 to 1999 using the widely applied PATtree-based word extraction method </context>
</contexts>
<marker>Deligne, Sagisaka, 2000</marker>
<rawString>Sabine Deligne and Yoshinori Sagisaka. 2000. Statistical language modeling with a class-based nmultigram model. Comp. Speech and Lang., 14(3):261–279.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A P Dempster</author>
<author>N M Laird</author>
<author>D B Rubin</author>
</authors>
<title>Maximum likelihood from incomplete data via the em algorithm.</title>
<date>1977</date>
<journal>Journal of the Royal Statistics Society,</journal>
<volume>39</volume>
<issue>1</issue>
<contexts>
<context position="17016" citStr="Dempster et al., 1977" startWordPosition="2832" endWordPosition="2835">ces potential ambiguities existing in the lexicon. 758 The Expectation-Maximization algorithm 1. Bootstrap initial word segmentation by maximum-matching algorithm (Wong and Chan, 1996) 2. Estimate unigram LM 3. Expectation: Re-segment according to the unigram LM 4. Maximization: Estimate the n-gram LM 5. Expectation: Re-segment according to the n-gram LM 6. Go to step 4 until convergence Table 2: EM algorithm for word segmentation and LM estimation 3.4 Word Segmentation and Language Model Training If we regard the word segmentation process as a hidden variable, then we can apply EM algorithm (Dempster et al., 1977) to train the underlying ngram language model. The procedure is described in Table 2. In the algorithm we can see two expectation phases. This is natural since at the beginning the bootstrap segmentation can not give reliable statistics for higher order n-gram and we choose to only use the unigram marginal probabilities. The procedure was well established by Hwang et al. (2006). Actually, the EM algorithm proposed here is similar to the n-multigram model training procedure proposed by Deligne and Sagisaka (2000). The role of multigrams can be regarded as the words here, except that multigrams </context>
</contexts>
<marker>Dempster, Laird, Rubin, 1977</marker>
<rawString>A. P. Dempster, N. M. Laird, and D. B. Rubin. 1977. Maximum likelihood from incomplete data via the em algorithm. Journal of the Royal Statistics Society, 39(1):1–38.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marcello Federico</author>
<author>Nicola Bertoldi</author>
</authors>
<title>Broadcast news LM adaptation over time.</title>
<date>2004</date>
<journal>Comp. Speech Lang.,</journal>
<pages>18--417</pages>
<contexts>
<context position="3874" citStr="Federico and Bertoldi, 2004" startWordPosition="595" endWordPosition="598">ed, which definitely can not be replaced by characters, we can treat words as a means to enhance character recognition accuracy. Such arguments stand at least for Chinese ASR since they evaluate on character error rate and do not add explicit blanks between words. Here we formulate a lexicon adaptation problem and try to discriminatively find out not only OOV words beneficial for ASR but also those existing words that can be deleted. Unlike previous lexicon adaptation or construction approaches (Chien, 1997; Fung, 1998; Deligne and Sagisaka, 2000; Saon and Padmanabhan, 2001; Gao et al., 2002; Federico and Bertoldi, 2004), we 755 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 755–763, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP consider the acoustic signals and also the whole speech decoding structure. We propose to use a simple approximation for the character posterior probabilities (PPs), which combines acoustic model and language model scores after decoding. Based on the character PPs, we adapt the current lexicon. The language model is then re-trained according the new lexicon. Such procedure can be iterated until convergence. Characters, are not only </context>
<context position="5269" citStr="Federico and Bertoldi, 2004" startWordPosition="823" endWordPosition="826">racters can at least help OOV query handling; in the subword-based confusion network (S-CN) proposed by Pan et al. (2007), characters are even better than words for in-vocabulary (IV) queries. In addition to evaluating the proposed approach on ASR performance, we investigate its helpfulness when integrated with an S-CN framework. 2 Related Work Previous works for lexicon adaptation were focused on OOV rate reduction. Given an adaptation corpus, the standard way is to first identify OOV words. These OOV words are selected into the current lexicon based on the criterion of frequency or recency (Federico and Bertoldi, 2004). The language model is also re-estimated according to the new corpus and new derived words. For Chinese, it is more difficult to follow the same approach since OOV words are not readily identifiable. Several methods have been proposed to extract OOV words from the new corpus based on different statistics, which include associate norm and context dependency (Chien, 1997), mutual information (Gao et al., 2002), morphological and statistical rules (Chen and Ma, 2002), and strength and spread measure (Fung, 1998). The used statistics generally help find sequences of characters that are consistent</context>
</contexts>
<marker>Federico, Bertoldi, 2004</marker>
<rawString>Marcello Federico and Nicola Bertoldi. 2004. Broadcast news LM adaptation over time. Comp. Speech Lang., 18:417–435.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marcello Federico</author>
</authors>
<title>Efficient language model adaptation through MDI estimation.</title>
<date>1999</date>
<booktitle>In Intersspech,</booktitle>
<pages>1583--1586</pages>
<contexts>
<context position="15681" citStr="Federico, 1999" startWordPosition="2613" endWordPosition="2615">egment. For each such segment, we at most add one new word and delete an existing word. From the string [opq] we choose the longest OOV part from it as a new word. To select a word to be deleted, we choose the longest in-vocabulary (IV) part from the top ranked competitors of [opq], which are then [stu] in clusters {Calign(m), . . . , Calign(m+2)}. This is also motivated by MCE that we only suppress the strongest competitors’ probabilities. Note that we do not delete single-characters in the procedure. The “at most one” constraint here is motivated by previous language model adaptation works (Federico, 1999) which usually try to introduce new evidences in the adaptation corpus but with the least modification of the original model. Of course the modification of language models led by the addition and deletion of words is hard to quantify and we choose to add and delete as fewer words as possible, which is just a simple heuristic. On the other hand, adding fewer words means that longer words are added. It has been shown that longer words are more helpful for ASR (Gao et al., 2004; Saon and Padmanabhan, 2001). The proposed LAICA approach can be regarded as a discriminative one since it not only cons</context>
</contexts>
<marker>Federico, 1999</marker>
<rawString>Marcello Federico. 1999. Efficient language model adaptation through MDI estimation. In Intersspech, pages 1583–1586.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yi-Sheng Fu</author>
<author>Yi-Cheng Pan</author>
<author>Lin-Shan Lee</author>
</authors>
<title>Improved large vocabulary continuous Chinese speech recognition by character-based consensus networks.</title>
<date>2006</date>
<booktitle>In ISCSLP,</booktitle>
<pages>422--434</pages>
<contexts>
<context position="7565" citStr="Fu et al., 2006" startWordPosition="1189" endWordPosition="1192"> ASR error rate. Here we try to face the lexicon adaptation problem from another aspect and take the acoustic signals involved in the decoding procedure into account. 3 Proposed Approach 3.1 Overall Picture Figure 1: The flow chart of the proposed approach. Adaptatio We show the complete flow chart in Figure 1. At the beginning we are given an adaptation spoken corpus and manual transcriptions. Based on a baseline lexicon (Lex0) and a language model (LM0) we perform ASR on the adaptation corpus and construct corresponding word lattices. We then build character-based confusion networks (CCNs) (Fu et al., 2006; Qian et al., 2008). On the CCNs we perform the proposed algorithm to add and delete words into/from the current lexicon. The LM training corpora joined with the adaptation corpus is then segmented using Lex1 and the language model is in turn re-trained, which gives LM1. This procedure can be iterated to give Lexi and LMi until convergence. 3.2 Character Posterior Probability and Character-based Confusion Network (CCN) Consider a word W as shown in Figure 2 with characters {c1c2c3} corresponding to the edge e starting at time T and ending at time t in a word lattice. During decoding the bound</context>
<context position="11167" citStr="Fu et al., 2006" startWordPosition="1828" endWordPosition="1831">sy to be handled well. Here we constrain the inter-connectivity of sub-edges to be only inside its own word edge and also simplify the calculation of the weights of paths. This offers a tractable solution and the performance is quite acceptable. After we obtain the PPs for each character arc in the lattice, such as P(ez|A) as mentioned above, we can perform the same clustering method proposed by Mangu et al. (2000) to convert the word lattice to a strict linear sequence of clusters, each consisting of a set of alternatives of character hypotheses, or a character-based confusion network (CCN) (Fu et al., 2006; Qian et al., 2008). In CCN we collect the PPs for all character arc c with beginning time τ and end time t as P ([c; τ, t]|A) (based on the above mentioned approximation): E P(H)P(A|H) H = wl . . . wN E lattice: 3i E 11 . . . NJ: wi contains [c; r, t] E P(H&apos;)P(A|H&apos;) , path H&apos; E lattice where H stands for a path in the word lattice. P(H) is the language model score of H (after proper scaling) and P(A|H) is the acoustic model score. CCN was known to be very helpful in reducing character error rate (CER) since it minimizes the expected CER (Fu et al., 2006; Qian et al., 2008). Given a CCN, we s</context>
</contexts>
<marker>Fu, Pan, Lee, 2006</marker>
<rawString>Yi-Sheng Fu, Yi-Cheng Pan, and Lin-Shan Lee. 2006. Improved large vocabulary continuous Chinese speech recognition by character-based consensus networks. In ISCSLP, pages 422–434.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pascale Fung</author>
</authors>
<title>Extracting key terms from chinese and japanese texts.</title>
<date>1998</date>
<booktitle>Computer Processing of Oriental Languages,</booktitle>
<volume>12</volume>
<issue>1</issue>
<contexts>
<context position="3770" citStr="Fung, 1998" startWordPosition="581" endWordPosition="582">ficantly improves the performance. If the words’ semantic functionality can be abandoned, which definitely can not be replaced by characters, we can treat words as a means to enhance character recognition accuracy. Such arguments stand at least for Chinese ASR since they evaluate on character error rate and do not add explicit blanks between words. Here we formulate a lexicon adaptation problem and try to discriminatively find out not only OOV words beneficial for ASR but also those existing words that can be deleted. Unlike previous lexicon adaptation or construction approaches (Chien, 1997; Fung, 1998; Deligne and Sagisaka, 2000; Saon and Padmanabhan, 2001; Gao et al., 2002; Federico and Bertoldi, 2004), we 755 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 755–763, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP consider the acoustic signals and also the whole speech decoding structure. We propose to use a simple approximation for the character posterior probabilities (PPs), which combines acoustic model and language model scores after decoding. Based on the character PPs, we adapt the current lexicon. The language model is then re-traine</context>
<context position="5784" citStr="Fung, 1998" startWordPosition="906" endWordPosition="907">the current lexicon based on the criterion of frequency or recency (Federico and Bertoldi, 2004). The language model is also re-estimated according to the new corpus and new derived words. For Chinese, it is more difficult to follow the same approach since OOV words are not readily identifiable. Several methods have been proposed to extract OOV words from the new corpus based on different statistics, which include associate norm and context dependency (Chien, 1997), mutual information (Gao et al., 2002), morphological and statistical rules (Chen and Ma, 2002), and strength and spread measure (Fung, 1998). The used statistics generally help find sequences of characters that are consistent to the general concept of words. However, if we focus on ASR performance, the constraint of the extracted character strings to be word-like is unnecessary. Yang et al. (1998) proposed a way to select new character strings based on average character perplexity reduction. The word-like constraint is not required and they show a significant improvement on character-based perplexity. Similar ideas were found to use mutual probability as an effective measure to combine two existing lexicon words into a new word (S</context>
</contexts>
<marker>Fung, 1998</marker>
<rawString>Pascale Fung. 1998. Extracting key terms from chinese and japanese texts. Computer Processing of Oriental Languages, 12(1):99–121.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jianfeng Gao</author>
<author>Joshua Goodman</author>
<author>Mingjing Li</author>
<author>KaiFu Lee</author>
</authors>
<title>Toward a unified approach to statistical language modeling for Chinese.</title>
<date>2002</date>
<journal>ACM Transaction on Asian Language Information Processing,</journal>
<volume>1</volume>
<issue>1</issue>
<contexts>
<context position="3844" citStr="Gao et al., 2002" startWordPosition="591" endWordPosition="594">ity can be abandoned, which definitely can not be replaced by characters, we can treat words as a means to enhance character recognition accuracy. Such arguments stand at least for Chinese ASR since they evaluate on character error rate and do not add explicit blanks between words. Here we formulate a lexicon adaptation problem and try to discriminatively find out not only OOV words beneficial for ASR but also those existing words that can be deleted. Unlike previous lexicon adaptation or construction approaches (Chien, 1997; Fung, 1998; Deligne and Sagisaka, 2000; Saon and Padmanabhan, 2001; Gao et al., 2002; Federico and Bertoldi, 2004), we 755 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 755–763, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP consider the acoustic signals and also the whole speech decoding structure. We propose to use a simple approximation for the character posterior probabilities (PPs), which combines acoustic model and language model scores after decoding. Based on the character PPs, we adapt the current lexicon. The language model is then re-trained according the new lexicon. Such procedure can be iterated until converge</context>
<context position="5681" citStr="Gao et al., 2002" startWordPosition="889" endWordPosition="892">ven an adaptation corpus, the standard way is to first identify OOV words. These OOV words are selected into the current lexicon based on the criterion of frequency or recency (Federico and Bertoldi, 2004). The language model is also re-estimated according to the new corpus and new derived words. For Chinese, it is more difficult to follow the same approach since OOV words are not readily identifiable. Several methods have been proposed to extract OOV words from the new corpus based on different statistics, which include associate norm and context dependency (Chien, 1997), mutual information (Gao et al., 2002), morphological and statistical rules (Chen and Ma, 2002), and strength and spread measure (Fung, 1998). The used statistics generally help find sequences of characters that are consistent to the general concept of words. However, if we focus on ASR performance, the constraint of the extracted character strings to be word-like is unnecessary. Yang et al. (1998) proposed a way to select new character strings based on average character perplexity reduction. The word-like constraint is not required and they show a significant improvement on character-based perplexity. Similar ideas were found to </context>
</contexts>
<marker>Gao, Goodman, Li, Lee, 2002</marker>
<rawString>Jianfeng Gao, Joshua Goodman, Mingjing Li, and KaiFu Lee. 2002. Toward a unified approach to statistical language modeling for Chinese. ACM Transaction on Asian Language Information Processing, 1(1):3–33.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jianfeng Gao</author>
<author>Mu Li</author>
<author>Andi Wu</author>
<author>Chang-Ning Huang</author>
</authors>
<title>Chinese word segmentation: A pragmatic approach.</title>
<date>2004</date>
<booktitle>In</booktitle>
<pages>2004--123</pages>
<contexts>
<context position="16160" citStr="Gao et al., 2004" startWordPosition="2701" endWordPosition="2704">-characters in the procedure. The “at most one” constraint here is motivated by previous language model adaptation works (Federico, 1999) which usually try to introduce new evidences in the adaptation corpus but with the least modification of the original model. Of course the modification of language models led by the addition and deletion of words is hard to quantify and we choose to add and delete as fewer words as possible, which is just a simple heuristic. On the other hand, adding fewer words means that longer words are added. It has been shown that longer words are more helpful for ASR (Gao et al., 2004; Saon and Padmanabhan, 2001). The proposed LAICA approach can be regarded as a discriminative one since it not only considers the reference characters but also those wrongly recognized characters. This can be beneficial since it reduces potential ambiguities existing in the lexicon. 758 The Expectation-Maximization algorithm 1. Bootstrap initial word segmentation by maximum-matching algorithm (Wong and Chan, 1996) 2. Estimate unigram LM 3. Expectation: Re-segment according to the unigram LM 4. Maximization: Estimate the n-gram LM 5. Expectation: Re-segment according to the n-gram LM 6. Go to </context>
</contexts>
<marker>Gao, Li, Wu, Huang, 2004</marker>
<rawString>Jianfeng Gao, Mu Li, Andi Wu, and Chang-Ning Huang. 2004. Chinese word segmentation: A pragmatic approach. In MSR-TR-2004-123.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Teemu Hirsim¨aki</author>
<author>Mathias Creutz</author>
<author>Vesa Siivola</author>
<author>Mikko Kurimo</author>
<author>Sami Virpioja</author>
<author>Janne Pylkk¨onen</author>
</authors>
<title>Unlimited vocabulary speech recognition with morph language models applied to Finnish. Comp. Speech Lang.</title>
<date>2005</date>
<marker>Hirsim¨aki, Creutz, Siivola, Kurimo, Virpioja, Pylkk¨onen, 2005</marker>
<rawString>Teemu Hirsim¨aki, Mathias Creutz, Vesa Siivola, Mikko Kurimo, Sami Virpioja, and Janne Pylkk¨onen. 2005. Unlimited vocabulary speech recognition with morph language models applied to Finnish. Comp. Speech Lang.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mei-Yuh Hwang</author>
<author>Xin Lei</author>
<author>Wen Wang</author>
<author>Takahiro Shinozaki</author>
</authors>
<title>Investigation on mandarin broadcast news speech recognition.</title>
<date>2006</date>
<booktitle>In InterspeechICSLP,</booktitle>
<pages>1233--1236</pages>
<contexts>
<context position="17396" citStr="Hwang et al. (2006)" startWordPosition="2898" endWordPosition="2901">ergence Table 2: EM algorithm for word segmentation and LM estimation 3.4 Word Segmentation and Language Model Training If we regard the word segmentation process as a hidden variable, then we can apply EM algorithm (Dempster et al., 1977) to train the underlying ngram language model. The procedure is described in Table 2. In the algorithm we can see two expectation phases. This is natural since at the beginning the bootstrap segmentation can not give reliable statistics for higher order n-gram and we choose to only use the unigram marginal probabilities. The procedure was well established by Hwang et al. (2006). Actually, the EM algorithm proposed here is similar to the n-multigram model training procedure proposed by Deligne and Sagisaka (2000). The role of multigrams can be regarded as the words here, except that multigrams begin from scratch while here we have an initial lexicon and use maximummatching algorithm to offer an acceptable initial unigram probability distributions. If the initial lexicon is not available, the procedure proposed by Deligne and Sagisaka (2000) is preferred. 4 Experimental Results 4.1 Baseline Lexicon, Corpora and Language Models The baseline lexicon was automatically co</context>
</contexts>
<marker>Hwang, Lei, Wang, Shinozaki, 2006</marker>
<rawString>Mei-Yuh Hwang, Xin Lei, Wen Wang, and Takahiro Shinozaki. 2006. Investigation on mandarin broadcast news speech recognition. In InterspeechICSLP, pages 1233–1236.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bing-Hwang Juang</author>
<author>Wu Chou</author>
<author>Chin-Hui Lee</author>
</authors>
<title>Minimum classification error rate methods for speech recognition.</title>
<date>1997</date>
<journal>IEEE Trans. Speech Audio Process.,</journal>
<volume>5</volume>
<issue>3</issue>
<contexts>
<context position="13954" citStr="Juang et al. (1997)" startWordPosition="2314" endWordPosition="2317">n(m+2)}) (3) The reference character is not included in the corresponding cluster (Rm+3 and Calign(m+3)). For cases (2) and (3), the reference character will be incorrectly recognized. The basic idea of the proposed lexicon adaptation with an improved character accuracy (LAICA) approach is to enhance the PPs of those incorrectly recognized characters by adding new words and deleting existing words in the lexicon. Here we only focus on those characters of case (2) mentioned above. This is primarily motivated by the minimum classification error (MCE) discriminative training approach proposed by Juang et al. (1997), where a sigmoid function was used to suppress the impacts of those perfectly and very poorly recognized training samples. In our approach, the case (1) is the perfect case and case (3) is the very poor one. Another motivation is that for characters in case (1), since they are already correctly recognized we do not try to enhance their PPs. The procedure of LAICA then becomes simple. Among the aligned reference characters and clusters of CCN, case (1) and (3) are anchors. The reference characters between two anchors then become our focus segment and their PPs should be enhanced. By investigat</context>
</contexts>
<marker>Juang, Chou, Lee, 1997</marker>
<rawString>Bing-Hwang Juang, Wu Chou, and Chin-Hui Lee. 1997. Minimum classification error rate methods for speech recognition. IEEE Trans. Speech Audio Process., 5(3):257–265.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lidia Mangu</author>
<author>Eric Brill</author>
<author>Andreas Stolcke</author>
</authors>
<title>Finding consensus in speech recognition: Word error minimization and other applications of confusion networks.</title>
<date>2000</date>
<journal>Comp. Speech Lang.,</journal>
<volume>14</volume>
<issue>2</issue>
<contexts>
<context position="10970" citStr="Mangu et al. (2000)" startWordPosition="1795" endWordPosition="1798">ing full-edge e. As a result, P(ez|A) should usually be greater than P(e|A), as implied by the intuition. However, the inter-connectivity between all sub-edges and the proper weights of them are not easy to be handled well. Here we constrain the inter-connectivity of sub-edges to be only inside its own word edge and also simplify the calculation of the weights of paths. This offers a tractable solution and the performance is quite acceptable. After we obtain the PPs for each character arc in the lattice, such as P(ez|A) as mentioned above, we can perform the same clustering method proposed by Mangu et al. (2000) to convert the word lattice to a strict linear sequence of clusters, each consisting of a set of alternatives of character hypotheses, or a character-based confusion network (CCN) (Fu et al., 2006; Qian et al., 2008). In CCN we collect the PPs for all character arc c with beginning time τ and end time t as P ([c; τ, t]|A) (based on the above mentioned approximation): E P(H)P(A|H) H = wl . . . wN E lattice: 3i E 11 . . . NJ: wi contains [c; r, t] E P(H&apos;)P(A|H&apos;) , path H&apos; E lattice where H stands for a path in the word lattice. P(H) is the language model score of H (after proper scaling) and P(</context>
</contexts>
<marker>Mangu, Brill, Stolcke, 2000</marker>
<rawString>Lidia Mangu, Eric Brill, and Andreas Stolcke. 2000. Finding consensus in speech recognition: Word error minimization and other applications of confusion networks. Comp. Speech Lang., 14(2):373–400.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Y Ng</author>
<author>Michael I Jordan</author>
</authors>
<title>On discriminative vs. generative classifiers: A comparison of logistic regression and naive bayes.</title>
<date>2001</date>
<booktitle>In Advances in Neural Information Processing Systems (14),</booktitle>
<pages>841--848</pages>
<contexts>
<context position="21674" citStr="Ng and Jordan, 2001" startWordPosition="3588" endWordPosition="3591">licit reinforcement in PP of the reference characters. Such reinforcement offers the main positive boosting for the PP of reference characters. These boosted characters are under some specific contexts which normally correspond to OOV words and sometimes in-vocabulary (IV) words that are hard to be recognized. From the model training aspect, adding new words gives the maximum-likelihood flavor while deleting existing words provides discriminant ability. It has been shown that discriminative training does not necessarily outperform maximumlikelihood training until we have enough training data (Ng and Jordan, 2001). So it is possible that discriminatively trained model performs worse than that trained by maximum likelihood. In our case, adding and deleting words seem to compliment each other well. This is an encouraging result. Another good property is that the proposed approach converged quickly. The number of words to be added or deleted dropped significantly in the second iteration, compared to the first one. Generally the fewer words to be changed the fewer recognition improvement can be expected. Actually we have tried the third iteration and simply obtained dozens of words to be added and no words</context>
</contexts>
<marker>Ng, Jordan, 2001</marker>
<rawString>Andrew Y. Ng and Michael I. Jordan. 2001. On discriminative vs. generative classifiers: A comparison of logistic regression and naive bayes. In Advances in Neural Information Processing Systems (14), pages 841–848.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yi-Cheng Pan</author>
<author>Hung-Lin Chang</author>
<author>Lin-Shan Lee</author>
</authors>
<title>Analytical comparison between position specific posterior lattices and confusion networks based on words and subword units for spoken document indexing.</title>
<date>2007</date>
<booktitle>In ASRU.</booktitle>
<contexts>
<context position="4762" citStr="Pan et al. (2007)" startWordPosition="743" endWordPosition="746">oximation for the character posterior probabilities (PPs), which combines acoustic model and language model scores after decoding. Based on the character PPs, we adapt the current lexicon. The language model is then re-trained according the new lexicon. Such procedure can be iterated until convergence. Characters, are not only the output units in Chinese ASR but also have their roles in spoken document retrieval (SDR). It has been shown that characters are good indexing units. Generally, characters can at least help OOV query handling; in the subword-based confusion network (S-CN) proposed by Pan et al. (2007), characters are even better than words for in-vocabulary (IV) queries. In addition to evaluating the proposed approach on ASR performance, we investigate its helpfulness when integrated with an S-CN framework. 2 Related Work Previous works for lexicon adaptation were focused on OOV rate reduction. Given an adaptation corpus, the standard way is to first identify OOV words. These OOV words are selected into the current lexicon based on the criterion of frequency or recency (Federico and Bertoldi, 2004). The language model is also re-estimated according to the new corpus and new derived words. </context>
<context position="25094" citStr="Pan et al. (2007)" startWordPosition="4148" endWordPosition="4151"> human sense and definitely convey novel semantic information, but they can be useless for speech recognition. That is, character n-gram may handle these words equally well due to the low ambiguities with other words. The proposed LAICA approach tries to focus on those new words which can not be handled well by simple character n-grams. Moreover, the two methods discussed here do not offer possible ways to delete current words, which can be considered as a further advantage of the proposed LAICA approach. P(Wt = wi) , 760 4.4 Application: Character-based Spoken Document Indexing and Retrieval Pan et al. (2007) recently proposed a new Subwordbased Confusion Network (S-CN) indexing structure for SDR, which significantly outperforms word-based methods for IV or OOV queries. Here we apply S-CN structure to investigate the effectiveness of improved character accuracy for SDR. Here we choose characters as the subword units, and then the S-CN structure is exactly the same as CCN, which was introduced in Section 3.2. For the SDR back-end corpus, the same 5K test utterances as used for the ASR experiment in Section 4.2 were used. The previously mentioned lexicon adaptation approaches and corresponding langu</context>
</contexts>
<marker>Pan, Chang, Lee, 2007</marker>
<rawString>Yi-Cheng Pan, Hung-Lin Chang, and Lin-Shan Lee. 2007. Analytical comparison between position specific posterior lattices and confusion networks based on words and subword units for spoken document indexing. In ASRU.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yao Qian</author>
<author>Frank K Soong</author>
<author>Tan Lee</author>
</authors>
<title>Toneenhanced generalized character posterior probability (GCPP) for Cantonese LUCSR.</title>
<date>2008</date>
<journal>Comp. Speech Lang.,</journal>
<volume>22</volume>
<issue>4</issue>
<contexts>
<context position="7585" citStr="Qian et al., 2008" startWordPosition="1193" endWordPosition="1196">Here we try to face the lexicon adaptation problem from another aspect and take the acoustic signals involved in the decoding procedure into account. 3 Proposed Approach 3.1 Overall Picture Figure 1: The flow chart of the proposed approach. Adaptatio We show the complete flow chart in Figure 1. At the beginning we are given an adaptation spoken corpus and manual transcriptions. Based on a baseline lexicon (Lex0) and a language model (LM0) we perform ASR on the adaptation corpus and construct corresponding word lattices. We then build character-based confusion networks (CCNs) (Fu et al., 2006; Qian et al., 2008). On the CCNs we perform the proposed algorithm to add and delete words into/from the current lexicon. The LM training corpora joined with the adaptation corpus is then segmented using Lex1 and the language model is in turn re-trained, which gives LM1. This procedure can be iterated to give Lexi and LMi until convergence. 3.2 Character Posterior Probability and Character-based Confusion Network (CCN) Consider a word W as shown in Figure 2 with characters {c1c2c3} corresponding to the edge e starting at time T and ending at time t in a word lattice. During decoding the boundaries between c1 Cor</context>
<context position="11187" citStr="Qian et al., 2008" startWordPosition="1832" endWordPosition="1835">well. Here we constrain the inter-connectivity of sub-edges to be only inside its own word edge and also simplify the calculation of the weights of paths. This offers a tractable solution and the performance is quite acceptable. After we obtain the PPs for each character arc in the lattice, such as P(ez|A) as mentioned above, we can perform the same clustering method proposed by Mangu et al. (2000) to convert the word lattice to a strict linear sequence of clusters, each consisting of a set of alternatives of character hypotheses, or a character-based confusion network (CCN) (Fu et al., 2006; Qian et al., 2008). In CCN we collect the PPs for all character arc c with beginning time τ and end time t as P ([c; τ, t]|A) (based on the above mentioned approximation): E P(H)P(A|H) H = wl . . . wN E lattice: 3i E 11 . . . NJ: wi contains [c; r, t] E P(H&apos;)P(A|H&apos;) , path H&apos; E lattice where H stands for a path in the word lattice. P(H) is the language model score of H (after proper scaling) and P(A|H) is the acoustic model score. CCN was known to be very helpful in reducing character error rate (CER) since it minimizes the expected CER (Fu et al., 2006; Qian et al., 2008). Given a CCN, we simply choose the cha</context>
</contexts>
<marker>Qian, Soong, Lee, 2008</marker>
<rawString>Yao Qian, Frank K. Soong, and Tan Lee. 2008. Toneenhanced generalized character posterior probability (GCPP) for Cantonese LUCSR. Comp. Speech Lang., 22(4):360–373.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ronald Rosenfeld</author>
</authors>
<title>Two decades of statistical language modeling: Where do we go from here?</title>
<date>2000</date>
<booktitle>Proceeding of IEEE,</booktitle>
<pages>88--8</pages>
<contexts>
<context position="6904" citStr="Rosenfeld (2000)" startWordPosition="1082" endWordPosition="1083">ual probability as an effective measure to combine two existing lexicon words into a new word (Saon and Padmanabhan, 2001). Though proposed for English, this method is effective for Chinese ASR (Chen et al., 2004). Gao et al. (2002) combined an information gain-like metric and the perplexity reduction criterion for lexicon word selection. The application is on Chinese pinyin-tocharacter conversion, which has very good correlation with the underlying language model perplexity. The above works actually are all focused on the text level and only consider perplexity effect. However, as pointed by Rosenfeld (2000), lower perplexity does not always imply lower ASR error rate. Here we try to face the lexicon adaptation problem from another aspect and take the acoustic signals involved in the decoding procedure into account. 3 Proposed Approach 3.1 Overall Picture Figure 1: The flow chart of the proposed approach. Adaptatio We show the complete flow chart in Figure 1. At the beginning we are given an adaptation spoken corpus and manual transcriptions. Based on a baseline lexicon (Lex0) and a language model (LM0) we perform ASR on the adaptation corpus and construct corresponding word lattices. We then bui</context>
</contexts>
<marker>Rosenfeld, 2000</marker>
<rawString>Ronald Rosenfeld. 2000. Two decades of statistical language modeling: Where do we go from here? Proceeding of IEEE, 88(8):1270–1278.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George Saon</author>
<author>Mukund Padmanabhan</author>
</authors>
<title>Datadriven approach to designing compound words for continuous speech recognition.</title>
<date>2001</date>
<journal>IEEE Trans. Speech and Audio Process.,</journal>
<volume>9</volume>
<issue>4</issue>
<contexts>
<context position="3826" citStr="Saon and Padmanabhan, 2001" startWordPosition="587" endWordPosition="590">e words’ semantic functionality can be abandoned, which definitely can not be replaced by characters, we can treat words as a means to enhance character recognition accuracy. Such arguments stand at least for Chinese ASR since they evaluate on character error rate and do not add explicit blanks between words. Here we formulate a lexicon adaptation problem and try to discriminatively find out not only OOV words beneficial for ASR but also those existing words that can be deleted. Unlike previous lexicon adaptation or construction approaches (Chien, 1997; Fung, 1998; Deligne and Sagisaka, 2000; Saon and Padmanabhan, 2001; Gao et al., 2002; Federico and Bertoldi, 2004), we 755 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 755–763, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP consider the acoustic signals and also the whole speech decoding structure. We propose to use a simple approximation for the character posterior probabilities (PPs), which combines acoustic model and language model scores after decoding. Based on the character PPs, we adapt the current lexicon. The language model is then re-trained according the new lexicon. Such procedure can be itera</context>
<context position="6410" citStr="Saon and Padmanabhan, 2001" startWordPosition="1003" endWordPosition="1006">). The used statistics generally help find sequences of characters that are consistent to the general concept of words. However, if we focus on ASR performance, the constraint of the extracted character strings to be word-like is unnecessary. Yang et al. (1998) proposed a way to select new character strings based on average character perplexity reduction. The word-like constraint is not required and they show a significant improvement on character-based perplexity. Similar ideas were found to use mutual probability as an effective measure to combine two existing lexicon words into a new word (Saon and Padmanabhan, 2001). Though proposed for English, this method is effective for Chinese ASR (Chen et al., 2004). Gao et al. (2002) combined an information gain-like metric and the perplexity reduction criterion for lexicon word selection. The application is on Chinese pinyin-tocharacter conversion, which has very good correlation with the underlying language model perplexity. The above works actually are all focused on the text level and only consider perplexity effect. However, as pointed by Rosenfeld (2000), lower perplexity does not always imply lower ASR error rate. Here we try to face the lexicon adaptation </context>
<context position="16189" citStr="Saon and Padmanabhan, 2001" startWordPosition="2705" endWordPosition="2708"> procedure. The “at most one” constraint here is motivated by previous language model adaptation works (Federico, 1999) which usually try to introduce new evidences in the adaptation corpus but with the least modification of the original model. Of course the modification of language models led by the addition and deletion of words is hard to quantify and we choose to add and delete as fewer words as possible, which is just a simple heuristic. On the other hand, adding fewer words means that longer words are added. It has been shown that longer words are more helpful for ASR (Gao et al., 2004; Saon and Padmanabhan, 2001). The proposed LAICA approach can be regarded as a discriminative one since it not only considers the reference characters but also those wrongly recognized characters. This can be beneficial since it reduces potential ambiguities existing in the lexicon. 758 The Expectation-Maximization algorithm 1. Bootstrap initial word segmentation by maximum-matching algorithm (Wong and Chan, 1996) 2. Estimate unigram LM 3. Expectation: Re-segment according to the unigram LM 4. Maximization: Estimate the n-gram LM 5. Expectation: Re-segment according to the n-gram LM 6. Go to step 4 until convergence Tabl</context>
<context position="22620" citStr="Saon and Padmanabhan, 2001" startWordPosition="3742" endWordPosition="3746">d or deleted dropped significantly in the second iteration, compared to the first one. Generally the fewer words to be changed the fewer recognition improvement can be expected. Actually we have tried the third iteration and simply obtained dozens of words to be added and no words to be deleted, which resulted in negligible changes in ASR recognition accuracy. 4.3 Comparison with other Lexicon Adaptation Methods In this section we compare our method with two other traditionally used approaches: one is the PATtree-based as introduced in Section 4.1 and the other is based on mutual probability (Saon and Padmanabhan, 2001), which is the geometrical average of the direct and reverse bigram: �PM(wi,wj) = Pf(wj|wi)Pr(wi|wj), where the direct (Pf(·) and reverse bigram (Pr(·)) can be estimated as: P(Wt+1 = wj, Wt = wi) Pf(wj|wi) = P(Wt+1 = wj) . PM(wi, wj) is used as a measure about whether to combine wi and wj as a new word. By properly setting a threshold, we may iteratively combine existing characters and/or words to produce the required number of new words. For both the PAT-treeand mutual-information-based approaches, we use the manual transcriptions of the development 5K utterances to collect the required stati</context>
<context position="24326" citStr="Saon and Padmanabhan, 2001" startWordPosition="4021" endWordPosition="4024">s on the lexicon adapted by different approaches. From the results we observe that the PAT-treebased approach did not give satisfying improvements while the mutual probability-based one worked well. This may be due to the sparse adaptation data, which includes only 81K characters. PAT-tree-based approach relies on the frequency count, and some terms which occur only once in the adaptation data will not be extracted. Mutual probability-based approach, on the other hand, considers two simple criterion: the components of a new word occur often together and rarely in conjunction with other words (Saon and Padmanabhan, 2001). Compared with the proposed approach, both PAT-tree and mutual probability do not consider the decoding structure. Some new words are clearly good for human sense and definitely convey novel semantic information, but they can be useless for speech recognition. That is, character n-gram may handle these words equally well due to the low ambiguities with other words. The proposed LAICA approach tries to focus on those new words which can not be handled well by simple character n-grams. Moreover, the two methods discussed here do not offer possible ways to delete current words, which can be cons</context>
</contexts>
<marker>Saon, Padmanabhan, 2001</marker>
<rawString>George Saon and Mukund Padmanabhan. 2001. Datadriven approach to designing compound words for continuous speech recognition. IEEE Trans. Speech and Audio Process., 9(4):327–332, May.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frank Wessel</author>
<author>Ralf Schlicter</author>
<author>Klaus Macherey</author>
<author>Hermann Ney</author>
</authors>
<title>Confidence measures for large vocabulary continuous speech recognition.</title>
<date>2001</date>
<journal>IEEE Trans. Speech Audio Process.,</journal>
<volume>9</volume>
<issue>3</issue>
<contexts>
<context position="8464" citStr="Wessel et al., 2001" startWordPosition="1350" endWordPosition="1353">rocedure can be iterated to give Lexi and LMi until convergence. 3.2 Character Posterior Probability and Character-based Confusion Network (CCN) Consider a word W as shown in Figure 2 with characters {c1c2c3} corresponding to the edge e starting at time T and ending at time t in a word lattice. During decoding the boundaries between c1 Corpus 756 Figure 2: An edge e of word W composed of characters c1c2c3 starting at time τ and ending at time t. and c2, and c2 and c3 are recorded respectively as t1 and t2. The posterior probability (PP) of the edge e given the acoustic features A, P(e|A), is (Wessel et al., 2001): where α(τ) and β(t) denote the forward and backward probability masses accumulated up to time τ and t obtained by the standard forward-backward algorithm, P(xt�|W) is the acoustic likelihood function, PLM(W) the language model score, and βstart the sum of all path scores in the lattice. Equation (1) can be extended to the PP of a character of W, say c1 with edge e1: α(τ) · P (xt1 � |c1) · PLM(c1) · β(t1) P (e1|A) = Here we need two new probabilities, PLM(c1) and β(t1). Since neither is easy to estimate, we make some approximations. First, we assume PLM(c1) ≈ PLM(W). Of course this is not tru</context>
</contexts>
<marker>Wessel, Schlicter, Macherey, Ney, 2001</marker>
<rawString>Frank Wessel, Ralf Schlicter, Klaus Macherey, and Hermann Ney. 2001. Confidence measures for large vocabulary continuous speech recognition. IEEE Trans. Speech Audio Process., 9(3):288–298, Mar.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pak-kwong Wong</author>
<author>Chorkin Chan</author>
</authors>
<title>Chinese word segmentation based on maximum matching and word binding force.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th International Conference on Computational Linguistic,</booktitle>
<pages>200--203</pages>
<contexts>
<context position="16578" citStr="Wong and Chan, 1996" startWordPosition="2761" endWordPosition="2764">rds as possible, which is just a simple heuristic. On the other hand, adding fewer words means that longer words are added. It has been shown that longer words are more helpful for ASR (Gao et al., 2004; Saon and Padmanabhan, 2001). The proposed LAICA approach can be regarded as a discriminative one since it not only considers the reference characters but also those wrongly recognized characters. This can be beneficial since it reduces potential ambiguities existing in the lexicon. 758 The Expectation-Maximization algorithm 1. Bootstrap initial word segmentation by maximum-matching algorithm (Wong and Chan, 1996) 2. Estimate unigram LM 3. Expectation: Re-segment according to the unigram LM 4. Maximization: Estimate the n-gram LM 5. Expectation: Re-segment according to the n-gram LM 6. Go to step 4 until convergence Table 2: EM algorithm for word segmentation and LM estimation 3.4 Word Segmentation and Language Model Training If we regard the word segmentation process as a hidden variable, then we can apply EM algorithm (Dempster et al., 1977) to train the underlying ngram language model. The procedure is described in Table 2. In the algorithm we can see two expectation phases. This is natural since at</context>
</contexts>
<marker>Wong, Chan, 1996</marker>
<rawString>Pak-kwong Wong and Chorkin Chan. 1996. Chinese word segmentation based on maximum matching and word binding force. In Proceedings of the 16th International Conference on Computational Linguistic, pages 200–203.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kae-Cherng Yang</author>
<author>Tai-Hsuan Ho</author>
<author>Lee-Feng Chien</author>
<author>Lin-Shan Lee</author>
</authors>
<title>Statistics-based segment pattern lexicon: A new direction for chinese language modeling.</title>
<date>1998</date>
<booktitle>In ICASSP,</booktitle>
<pages>169--172</pages>
<contexts>
<context position="6044" citStr="Yang et al. (1998)" startWordPosition="946" endWordPosition="949">nce OOV words are not readily identifiable. Several methods have been proposed to extract OOV words from the new corpus based on different statistics, which include associate norm and context dependency (Chien, 1997), mutual information (Gao et al., 2002), morphological and statistical rules (Chen and Ma, 2002), and strength and spread measure (Fung, 1998). The used statistics generally help find sequences of characters that are consistent to the general concept of words. However, if we focus on ASR performance, the constraint of the extracted character strings to be word-like is unnecessary. Yang et al. (1998) proposed a way to select new character strings based on average character perplexity reduction. The word-like constraint is not required and they show a significant improvement on character-based perplexity. Similar ideas were found to use mutual probability as an effective measure to combine two existing lexicon words into a new word (Saon and Padmanabhan, 2001). Though proposed for English, this method is effective for Chinese ASR (Chen et al., 2004). Gao et al. (2002) combined an information gain-like metric and the perplexity reduction criterion for lexicon word selection. The application</context>
</contexts>
<marker>Yang, Ho, Chien, Lee, 1998</marker>
<rawString>Kae-Cherng Yang, Tai-Hsuan Ho, Lee-Feng Chien, and Lin-Shan Lee. 1998. Statistics-based segment pattern lexicon: A new direction for chinese language modeling. In ICASSP, pages 169–172.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>