<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.551138">
Document Structure and Multilingual Authoring
</title>
<author confidence="0.763365">
Caroline Brun Marc Dymetman Veronika Lux
</author>
<affiliation confidence="0.692528">
Xerox Research Centre Europe
</affiliation>
<address confidence="0.632693">
6 chemin de Maupertuis
38240 Meylan, France
</address>
<email confidence="0.872284">
{brun,dymetman,lux}Oxrce.xerox.com
</email>
<sectionHeader confidence="0.980563" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9998414">
The use of XML-based authoring tools is swiftly be-
coming a standard in the world of technical docu-
mentation. An XML document is a mixture of struc-
ture (the tags) and surface (text between the tags).
The structure reflects the choices made by the au-
thor during the top-down stepwise refinement of the
document under control of a DTD grammar. These
choices are typically choices of meaning which are
independent of the language in which the document
is rendered, and can be seen as a kind of interlin-
gua for the class of documents which is modeled by
the DTD. Based on this remark, we advocate a rad-
icalization of XML authoring, where the semantic
content of the document is accounted for exclusively
in terms of choice structures, and where appropri-
ate rendering/realization mechanisms are responsi-
ble for producing the surface, possibly in several lan-
guages simultaneously. In this view, XML authoring
has strong connections to natural language genera-
tion and text authoring. We describe the IG (In-
teraction Grammar) formalism, an extension of DT-
D&apos;s which permits powerful linguistic manipulations,
and show its application to the production of multi-
lingual versions of a certain class of pharmaceutical
documents.
</bodyText>
<sectionHeader confidence="0.996399" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.936159035714286">
The world of technical documentation is forcefully
moving towards the use of authoring tools based
on the XML markup language (W3C, 1998; Pardi,
1999). This language is based on grammatical spec-
ifications, called DTD&apos;s, which are roughly similar
to context-free grammars&apos; with an arbitrary num-
ber of non-terminals and exactly one predefined ter-
minal called pcdata. The pcdata terminal has a
special status: it can dominate any character string
(subject to certain restrictions on the characters al-
lowed). Authoring is seen as a top-down interactive
process of step-wise refinement of the root nonter-
mina! (corresponding to the whole document) where
the author iteratively selects a rule for expanding a
&apos;But see (Wood, 1995; Prescod, 199S) for discussions of
the differences.
nonterminal already present in the tree and where
in addition s/he can choose an arbitrary sequence
of characters (roughly) for expanding the pcdata
node. The resulting document is a mixture of tree-
like structure (the context-free derivation tree cor-
responding to the author&apos;s selections), represented
through tags, and of surface, represented as free-text
(PCDATA) between the tags.
We see however a tension between the structure
and surface aspects of an XML document:
â€¢ While structural choices are under system con-
trol (they have to be compatible with the DTD),
surface choices are not.2
o Surface strings are treated as unanalysable
chunks for the styling mechanisms that render
the XML document to the reader. They can
be displayed in a given font or moved around,
but they lack the internal structure that would
permit to &amp;quot;re-purpose&amp;quot; them for different ren-
dering situations, such as displaying on mobile
telephone screens, wording differently for a spe-
cific audience, or producing prosodically ade-
quate phonetic output. This situation stands
in contrast with the underlying philosophy of
XML, which emphasizes the separation between
content specification and the multiple situations
in which this content can be exploited.
* Structural decisions tend to be associated with
choices of meaning which are independent of tile
language in which the document is rendered.
Thus for instance the DTD for an aircraft main-
tenance manual might distinguish between two
kinds of risks: caution (material damage risk)
and warning (risk to the operator). By select-
ing one of these options (a choice that will lead
to further lower-level choices), the:author takes
a decision of a semantic nature, which is quite
independent of the language in which the docu-
ment is to be rendered, and which could be ex-
ploited to produce multilingual versions of the
</bodyText>
<footnote confidence="0.974868333333333">
2 With the emergence of schemes (W3C, 1999a), which per-
mit some typing of the surface (float, boolean, string. etc.).
some degree of control is becoming more feasible.
</footnote>
<page confidence="0.999">
24
</page>
<bodyText confidence="0.959279220338983">
document. By contrast, a PCDATA string is
language-specific .and ill-suited for multilingual
applications.
These remarks point to a possible radical view of
XML authoring that advocates that surface strings
be altogether eliminated from the document content,
and that author choices be all under the explicit con-
trol of the DTD and reflected in the document struc-
ture. Such a view, which is argued for in a related
paper (Dymetman et al., 2000), emphasizes the link
between XML documenkaathoringAnd;multilingual..
text authoring/generation (Power and Scott, 1998;
Hartley and Paris, 1997; Coch, 1996): the choices
made by the author are treated as a kind of in-
terlingua (specific to the class of documents being
modelled), and it is the responsibility of appropri-
ate &amp;quot;rendering&amp;quot; mechanisms to produce actual text
from these choices in the different languages&apos; under
consideration.
For such a program, existing XML tools suffer
however from serious limitations. First, DTD&apos;s are
too poor in expressive power (they are close to
context-free grammars) for expressing dependencies
between different parts of the document, an aspect
which becomes central as soon as the document
micro-structure (its fine-grained semantic structure)
starts to play a prominent role, as opposed to simply
its macro-structure (its organization in large seman-
tic units, typically larger than a paragraph). Second,
current rendering mechanisms such as CSS (Cascad-
ing Style Sheets) or XSLT (XLS transformation lan-
guage) (W3C, 1999b) are ill-adapted for handling
even simple linguistic phenomena such as morpho-
logical variation or subject-verb agreement.
In order to overcome these limitations, we are
using a formalism, Interaction Grammars (IG), a
specialization of Definite Clause Grammars (Pereira
and Warren, 1980) which originates in A. Ranta&apos;s
Grammatical Framework (GF) (Ranta; Maenpaa.
and Ranta, 1999; Dymetman et al., 2000), a gram-
matical formalism based on Martin-LOf&apos;s Type The-
ory (Martin-L6f, 1984) and building on previous ex-
perience with interactive mathematical proof editors
(Magnusson and Nordstrom, 1994). In this formal-
ism, the carrier of meaning is a choice tree (called
&amp;quot;abstract tree&amp;quot; in GF), a strongly typed object in
which dependencies between substructures can be
easily stated using the notion of dependent types.
The remainder of this paper is organized as fol-
lows. In section 2..we give &apos;a:high.-Ievd -.overview .of
the Multilingual Document Authoring (MDA) sys-
tem that we have developed at XRCE. In section
3, we present in some detail the formalism of In-
teraction Grammars. In section 4, we describe an
&apos;The word -language&amp;quot; should be understood here in an
extended sense that not only covers English. French. etc., but
also different styles or modes of communication.
application of MDA to a certain domain of pharma-
ceutical documents.
</bodyText>
<footnote confidence="0.27886">
2 Our approach to Multilingual
</footnote>
<subsectionHeader confidence="0.782568">
Document Authoring
</subsectionHeader>
<bodyText confidence="0.999730596153846">
Our Multilingual Document Authoring system has
the following main features:
First, the authoring process is monolingual, but
the results are multilingual. At each point of the pro-
cess the author can view in his/her own language the
Aext,4110,,las.aullicired,fa4..i.anclzareas,wliere,,Lhe.
text still needs refinement are highlighted. Menus
for selecting a refinement are also presented to the
author is his/her own language. Thus, the author is
always overtly working in the language s/he nows,
but is implicitly building a language-independent
representation of the document content. From this
representation, the system builds multilingual texts
in any of several languages simultaneously. This ap-
proach characterizes our system as belonging to an
emerging paradigm of &amp;quot;natural language authoring&amp;quot;
(Power and Scott, 1998; Hartley and Paris, 1997),
which is distinguished from natural language gener-
ation by the fact that the semantic input is provided
interactively by a person rather than by a program
accessing digital knowledge representations.
Second, the system maintains strong control both
over the semantics and the realizations of the docu-
ment. At the semantic level, dependencies between
different parts of the representation of the document
content can be imposed: for instance the choice of
a certain chemical at a certain point in a mainte-
nance manual may lead to an obligatory warning
at another point in the manual. At the realization
level, which is not directly manipulated by the au-
thor, the system can impose terminological choices
(e.g. company-specific nomenclature for a given con-
cept) or stylistic choices (such as choosing between
using the infinitive or the imperative mode in French
to express an instruction to an operator).
Finally, and possibly roost distinctively, the se-
mantic representation underlying the authoring pro-
cess is strongly document-centric and geared towards
directly expressing the choices which uniquely char-
acterize a given document in an homogeneous class
of documents belonging to the same domain. Our
view is document-centric in the sense that it takes
as its point of departure the widespread practice of
using XML tools for authoring the macro-structure
of documents-and-extends this practice- towards an
account of their micro-structure. But the analysis
of the micro-structure is only pushed as far as is
necessary in order to account for the variability in-
side the class of documents considered, and not in
terms of the ultimate meaning constituents of lan-
guage. This micro-structure can in general be de-
termined by studying a corpus of documents and by
</bodyText>
<page confidence="0.996512">
25
</page>
<bodyText confidence="0.999606">
exposing the structure of choices that distinguish a
given document from other documents in this class.
This structure of choices is represented in a choice
tree, which is viewed as the semantic representation
for the document.&apos; One single choice may be asso-
ciated with text realizations of drastically different
granularities: while in a pharmaceutical document
the choice of an ingredient may result in the produc-
tion of a single word, the choice of a &amp;quot;responsability-
waiver&amp;quot; may result in a long stereotypical paragraph
of text, the further analysis of which would be totally
.counter-productive.
</bodyText>
<sectionHeader confidence="0.987158" genericHeader="method">
3 Interaction Grammars
</sectionHeader>
<bodyText confidence="0.93029125">
Let us now give some details about the formalism
of Interaction Grammars. We start by explaining
the notion of choice tree on the basis of a simple
context-free grammar, analogous to a DTD.
Context-free grammars and choice trees
Let&apos;s consider the following context-free grammar
for describing simple &amp;quot;addresses&amp;quot; in English such as
&amp;quot;Paris, France&amp;quot;..5
</bodyText>
<construct confidence="0.761379125">
address --&gt; city, &amp;quot;,&amp;quot;,
country.
country --&gt; &amp;quot;France&amp;quot;.
country --&gt; &amp;quot;Germany&amp;quot;.
city --&gt; &amp;quot;Paris&amp;quot;.
city --&gt; &amp;quot;Hamburg&amp;quot;.
city --&gt; &amp;quot;the capital of&amp;quot;,
country.
</construct>
<bodyText confidence="0.989932953488372">
What does it mean, remembering the XML anal-
ogy, to author a &amp;quot;document&amp;quot; with such a CFG? It
means that the author is iteratively presented with
partial derivation trees relative to the grammar (par-
tial in the sense that leaves can be terminals or non-
terminals), and at each given authoring step both
selects a certain nonterminal to &amp;quot;refine&amp;quot;, and also a
given rule to extend this non-terminal one step fur-
ther: this action is repeated until the derivation tree
is complete.
If one conventionally uses the identifier
nonterminal, to name the i-th rule expanding
the nonterminal nonterminal, then the collection
of choices made by the author during a session can
be represented by a choice tree labelled with rule
identifiers, also called combinators. An example
of such a tree is addres s ( c ity2 , country2)
4 This kind of semantic representation stands i-n contrast
to some representations commonly used in NLP, which tend
to emphasize the fine-grained predicate-argument structure of
sentences independently of the productivity of such analyses
for a giuen class of documents.
5 For compatibility with the notations to follow, we use low-
ercase to denote nonterminals. and quoted strings to denote
terminals, rat her than the more usual uppercase: lowercase
convent ions.
which corresponds to choices leading to the output
&amp;quot;Hamburg, Germany&amp;quot;.6 In practice, rather than
using combinator names which strictly adhere to
this numbering scheme, we prefer to use mnemonic
names directly relating to the meaning of the
choices. In the sequel we will use the names adr;
fra, ger, par, ham, cap for the six rules in the
example grammar. The choice tree just described is
thus written adr(ham,ger).
Making choice trees explicit As we have ar-
gued previously, choices trees are in our view the cen-
tral repository of document content and we want to
manipulate them explicitely. Definite Clause Gram-
mars represent possibly the simplest extension of
context-free grammars permitting such manipula-
tion. Our context-free grammar can be extended
straightforwardly into the DCG:7
</bodyText>
<equation confidence="0.981528">
address(adr(Co,C)) --&gt; city(C), &amp;quot;,&amp;quot;,
country(Co).
country(fra) --&gt; &amp;quot;France&amp;quot;.
country(ger) --&gt; &amp;quot;Germany&amp;quot;.
city(par) --&gt; &amp;quot;Paris&amp;quot;.
city(ham) --&gt; &amp;quot;Hamburg&amp;quot;.
city(cap(Co)) --&gt; &amp;quot;the capital of&amp;quot;,
country(Co).
</equation>
<bodyText confidence="0.999745">
What these rules do is simply to construct choice
trees recursively. Thus, the first rule says that if the
author has described a city through the choice tree
C and a country through the choice tree Co, then the
choice tree adr(Co,C) represents the description of
an address.
If now, in this DCG, we &amp;quot;forget&amp;quot; all the terminals,
which are language-specific, by replacing them with
the empty string, we obtain the following &amp;quot;abstract
grammar&amp;quot;:
</bodyText>
<equation confidence="0.997732625">
address(adr(Co,C)) --&gt; city(C), country(Co).
country(fra) --&gt; .
country(ger) --&gt; 0.
city(par) --&gt; [] .
city(ham) --&gt; 0 .
city(cap(Co)) --&gt; country(Co).
which is in fact equivalent to the definite clause
program:8
</equation>
<bodyText confidence="0.978383333333333">
6Such a choice tree can be projected into a derivation
tree in a straightforward way, by mapping a combinator
nonterminali into the nonterminal name nonterminal, and
by introducing terminal material as required by the specific
rules.
&apos; According to the usual logic programming conventions,
lowercase letters denote predicates and functors, whereas up-
percase letters denote metavariables that can be instanciated
with terms.
In the sense that rewriting the nonterminal goal
address (adr (Co ,C) ) to the empty string in the DCC is equiv-
alent to proving the goal address (adr(Co ,C) ) in the program,
</bodyText>
<page confidence="0.85301">
26
</page>
<equation confidence="0.893468833333333">
address(adr(Co,C)) city(C), country(Co).
country(fra).
country(ger).
city (par)
city(ham).
city(cap(Co)) country(Co).
</equation>
<bodyText confidence="0.993759545454546">
This abstract grammar (or, equivalently, this logic
program), is language independent and recursively
defines a set of well-formed choice trees of different
categories, or types. Thus, the tree adr(ham,ger)
is well-formed &amp;quot;in&amp;quot;. the type, address, .and the tree
cap(fra) well-formed in the type city.
Dependent Types In order to stress the type-
related aspects of the previous tree specifications,
we are actually using in our current implementa-
tion the following notation for the previous abstract
grammar:
</bodyText>
<equation confidence="0.969519428571429">
adr(Co,C)::address --&gt; C: :city,
Co::country.
fra::country --&gt; 0.
ger::country --&gt; C7 .
par: :city --&gt; 0.
ham: :city --&gt; 0.
cap(Co)::city --&gt; Co::country.
</equation>
<bodyText confidence="0.999449153846154">
The first rule is then read: &amp;quot;if C is a tree of
type city, and Co a tree of type country, then
adr(Co,C) is a tree of type address&amp;quot;, and similarly
for the remaining rules.
The grammars we have given so far are deficient
in one important respect: there is no dependency
between the city and the country in the same ad-
dress, so that the tree adr(ham,fra) is well-formed
in the type address. In order to remedy this prob-
lem, dependent types (Ranta; Martin-Lof, 1984) can
be used. From our point of view, a dependent type
is simply a type that can be parametrized by objects
of other types. We write:
</bodyText>
<equation confidence="0.995607857142857">
adr(Co,C)::address --&gt; C::city(Co),
Co: :country.
fra::country --&gt; .
ger: :country --&gt; 0 .
par::city(fra) --&gt;
ham::city(ger)
cap(Co)::city(Co) --&gt; Co: :country.
</equation>
<bodyText confidence="0.992944125">
in which the type city is now parametrized by
objects of type country, and where the notation
par: : city(fra) is -read as &amp;quot;par is a-tree of the type:
city of fra.&amp;quot;.9
which is another way of stating the well-known duality be-
tween the rewriting and the goal-proving approaches to the
interpretation of Prolog.
91n terms of the underlying Prolog implementation. is
simply an infix operator for a predicate of arity 2 which relates
an object and its type, and both simple and dependent types
are handled straighforwardly.
Parallel Grammars and Semantics-driven
Compositionality for Text _Realization We
have just explained how abstract grammars can be
used for specifying well-formed typed trees repre-
senting the content of a document.
In order to produce actual multilingual documents
from such specifications, a simple approach is to al-
low for parallel realization English, French, ..., gram-
mars, which all have the same underlying abstract.
grammar (program), but which introduce terminals
specific. to . the. language ..at. hand. T.hus the follow-
ing Freneh and English grammars are parallel to the
previous abstract grammar:1Â°
</bodyText>
<equation confidence="0.964475529411765">
adr(Co,C): :address --&gt; C: :city(Co) II II
P P
Co::country.
fra::country --&gt; &amp;quot;France&amp;quot;.
ger::country --&gt; &amp;quot;Germany&amp;quot;.
par::city(fra) --&gt; &amp;quot;Paris&amp;quot;.
ham::city(ger) --&gt; &amp;quot;Hamburg&amp;quot;.
cap(Co)::city(Co) --&gt; &amp;quot;the capital of&amp;quot;,
Co: :country.
adr(Co,C)::address --&gt; C::city(Co), &amp;quot;,&amp;quot;,
Co: :country.
fra::country --&gt; &amp;quot;la France&amp;quot;.
ger::country --&gt; &amp;quot;l&apos;Allemagne&amp;quot;.
par::city(fra) --&gt; &amp;quot;Paris&amp;quot;.
ham::city(ger) --&gt; &amp;quot;Hambourg&amp;quot;.
cap(Co)::city(Co) --&gt; &amp;quot;la capitale de&amp;quot;,
Co: :country.
</equation>
<bodyText confidence="0.994779884615385">
This view of realization is essentially the one we
have adopted in the prototype at the time of writ-
ing, with some straighforward additions permitting
the handling of agreement constraints and morpho-
logical variants. This simple approach has proven
quite adequate for the class of documents we have
been interested in.
However, such an approach sees the activity of
generating text from an abstract structure as ba-
sically a compositional process on strings, that is,
a process where strings are recursively associated
with subtrees and concatenated to produce strings
at the next subtree level. But such a direct proce-
dure has well-known limitations when the semantic
and syntactic levels do not have a direct correspon-
dence (simple example: ordering a list of modifiers
around a noun). We are currently experimenting
witlia. powerful extension., of.string compositional i ty..
where the objects compositionally associated with
abstract. subtrees are not strings, but syntactic rep-
resentations with rich internal structure. The text
1Â°Because the order of goals in the right-hand side of an ab-
stract grammar rule is irrelevant, the goals on the right-hand
sides of rule in two parallel realization grammars can appear
in a different order, which permits certain reorganizations of
the linguistic material (situation not shown in the example).
</bodyText>
<page confidence="0.995579">
27
</page>
<bodyText confidence="0.981964285714286">
itself is obtained from the syntactic representation
associated with the total tree .by simply enumerat-
ing its leaves.
In this extended view, realization grammars have
rules of the following form: â€¢
--&gt;
B::b(E,...)-SynB,
</bodyText>
<listItem confidence="0.927609">
â€¢ {composeenglish(SyriB;,SynC, ..
</listItem>
<bodyText confidence="0.999229648648649">
The rule shown is a rule for English: the syn-
tactic representations are language dependent; par-
allel rules for the other languages are obtained by
replacing the compose_english constraint (which is
unique to this rule) by constraints appropriate to the
other languages under consideration.
Heterogeneous Trees and Interactivity Natu-
ral language authoring is different from natural lan-
guage generation in one crucial respect. Whenever
the abstract tree to be generated is incomplete (for
instance the tree cap(Co)), that is, has some leaves
which are yet uninstanciated variables, the genera-
tion process should not proceed with nondeterminis-
tically enumerating texts for all the possible instan-
ciations of the initial incomplete structure. Instead
it should display to the author as much of the text as
it can in its present &amp;quot;knowledge state&amp;quot;, and enter into
an interaction with the author to allow her to fur-
ther refine the incomplete structure, that is, to fur-
ther instanciate some of the uninstanciated leaves.
To this purpose, it is useful to introduce along with
the usual combinators (adr, fra, cap, etc.) new
combinators of arity 0 called typenames, which are
notated type, and are of type type. These combi-
nators are allowed to stand as leaves (e.g. in the tree
cap(country)) and the trees thus obtained are said
to be heterogeneous. The typenames are treated by
the text generation process as if they were standard
semantic units, that is, they are associated with text
units which are generated &amp;quot;at their proper place&amp;quot; in
the generated output. These text units are specially
phrased and highlighted to indicate to the author
that some choice has to be made to refine the un-
derlying type (e.g. obtaining the text &amp;quot;la capitale de
PAYS&amp;quot;). This choice has the effect of further install-
ciating the incomplete tree with &amp;quot;true&amp;quot; combinators,
and the generation process is iterated.
</bodyText>
<sectionHeader confidence="0.992919" genericHeader="method">
4 An Application to Pharmaceutical
Documents
</sectionHeader>
<subsectionHeader confidence="0.994129">
4.1. Corpus selection
</subsectionHeader>
<bodyText confidence="0.999665956521739">
Our corpus consists in drug notices extracted from
&amp;quot;Le VIDALOde la Farnille&amp;quot; (Editions du Vidal.
1998). a practical book about health made for the
general public. Le VIDALÂ® includes a collection of
notices for .around 5 5.00..drugs..available in France.
As the publisher, OVP-Editions du Vidal has taken
care of homogeneity across the notices, reformatting
and reformulating source information. The main
source are the New Drug Authorizations (Autori-.
sation de Mise sur le Marche), regulatory docu-
ments written by pharmaceutical laboratories and
approved by legal authorities.
Relative to multilingual document authoring, this
corpus has three features whickz.ve considered highly
desirable: (I) it-deals with a reStricted &amp;-
main (for which various terminological resources are
available), (2) it is a homogeneous collection of docu-
ments all complying to the same division in sections
and sub-sections, (3) there is a strong trend in in-
ternational bodies such as the EEC towards making
drug package notices (which are similar to VIDAL
notices) available in multilingual versions strictly
aligned on a common model.11
</bodyText>
<subsectionHeader confidence="0.999003">
4.2 Corpus analysis
</subsectionHeader>
<bodyText confidence="0.991584">
An analysis of a large collection of notices from Le
VIDALÂ® de la famille, describing different drugs,
from different laboratories was conducted in order
to identify:
</bodyText>
<listItem confidence="0.995589">
â€¢ the structure of a notice,
â€¢ the semantic dependencies between elements in
the structure.
</listItem>
<bodyText confidence="0.999868">
For this task, all the meta-information available is
useful, in particular: explanations provided by Le
VIDALÂ® de la famille and help of a domain expert.
Corpus study was a necessary preliminary task be-
fore modeling the notices in the IG formalism pre-
sented in section 2.
</bodyText>
<subsubsectionHeader confidence="0.617834">
4.2.1 Structure
</subsubsectionHeader>
<bodyText confidence="0.9995487">
Notices from Le VIDAL are all built on the same
model, including a title (the name of the drug, plus
some general information about it). followed by sec-
tions describing the main characteristics of the drug:
general description, composition, indications, con-
traindications, warnings, drug interactions, preg-
nancy and breast-feeding, dosage and administra-
tion, possible side effects. This initial knowledge
about the semantic content of the document is cap-
tured with a first, simple context free rule, such as:
</bodyText>
<figure confidence="0.6695244">
vidalNotdce(T,D,C,I,CL,W,DIj3aBF,DALPSI)::notic
--&gt;
T: :title,
D: :description,
C: :composition,
</figure>
<footnote confidence="0.652849333333333">
I I A similar but less extended corpus was previously built
by the third author as the basis for a prototype of multilingual
document authoring using G F.
</footnote>
<page confidence="0.994685">
28
</page>
<table confidence="0.9007955">
I:: indications,
CI: :contraindications,
W: :warnings,
DI::drugsInteraction,
PaBF::pregnancyAndBreastFeeding,
DaA::dosageAndAdmin,
PSI::possibleSideEffects.
Each section is associated with context-free rules
that describe its internal structure:
TidalTitle(N,AP,
--&gt;
N::name0fDrug,
AP::activePrinciples,
vidalDescription(N,PF,P...)::description
--&gt;
[&apos;DESCRIPTION&apos;],
N::name0fDrug,
PF::pharmaceutForm,
P::package, .
vidalDosageAndAdmin(D,A)::dosageAndAdmin
--&gt;
[&apos;DOSAGE AND ADMINISTRATION&apos;],
D: :dosage,
A: :administration.
tablet::pharmaceutForm --&gt; [&apos;tablet&apos;].
eyeDrops:::pharmaceutForm --&gt; [&apos;eye drops&apos;].
At this point, we allow parallel realizations for
French and English. So, in addition to the English
grammar given above, we have the French grammar:
vidalTitle(N, AP, ..., ...)::title
--&gt;
N::name0fDrug,
AP::activePrinciples, .
vidalDescr(N,PF,P...)::description
--&gt;
[&apos;PRESENTATION&apos;],
N::name0fDrug,
PF::pharmaceutForm,
P: :package,
vidalDosageAndAdmin(D,A)::dosageAndAdmin
--&gt;
[&apos;MODE D&apos;EMPLOI ET POSOLOGIE&apos;],
D: :dosage,
A: :administration.
tablet::pharmaceutForm --&gt; Pcomprime&apos;l.
eyeDrops:::pharmaceutForm --&gt; [&apos;collyre&apos;].
</table>
<bodyText confidence="0.9124985">
This first grammar is fully equivalent to a XML
DTD that. describes the structure of a notice, though
it distinguishes finer-grained units than traditional
DTDs tends to do.
</bodyText>
<subsubsectionHeader confidence="0.667006">
4.2.2 Modeling dependencies
</subsubsectionHeader>
<bodyText confidence="0.994021833333333">
IG goes lurther&apos;, than XML DTDs with regard
to the semantic control of documents: it enables us
to express dependencies which may arise in differ-
ent parts of a document, including long-distance de-
pendencies, through the use of dependent types pre-
sented in section 2.
Identification of the dependencies to be modeled was
done in a second stage of the corpus study. For ex-
ample, we identified dependencies between:
.:-...0,&apos;the4kharrnaceutiCal:.forrn,-of a -,giVerFdrng .(ebn-
cept pharmaceutForm) and its packaging (con-
cept package),
</bodyText>
<listItem confidence="0.96716825">
â€¢ particular ingredients given in the section com-
position and warning instructions given in the
section warnings,
â€¢ categories of patients the drug is intended for in
</listItem>
<bodyText confidence="0.936543647058824">
the section description and posology indicated
for each category in the section indications.
To illustrate the modeling task, we now give more
details about one particular dependency identified.
Intuitively, it appears that there is a strong link be-
tween the pharmaceutical form of a given drug and
the way it should be administered: tablets are swal-
lowed, eye drops are put in the eyes, powder is di-
luted in water etc. In our first grammar, the phar-
maceutical form concept appears in the description
section, since the administration way is described in
the dosage and administration section. The use of
dependent types permits to link these sections to-
gether according to the pharmaceutical form. The
parts of the (English) grammar involved become:
vidalNotice(T,D,C,I,CI,W,DI,PaBF,DaA,PSI)::notice
--&gt;
</bodyText>
<table confidence="0.734191894736842">
T: :title,
D::description(PF),
C: :composition,
I: :indications,
CI: :contraindications,
W: :warnings,
DI::drugsInteraction,
PaBF::pregnancyAndBreastFeeding,
DaA::dosageAndAdmin(PF),
PSI::possibleSideEffects.
vidalDescription(N,PF,P,...)::description(PF)
PDESCRIPTION&apos;],
N::name0fDrug,
PF::pharmaceutForm,
P::package, .
vidalDosageAndAdmin(D,A)::dosageAndAdmin(PF)
--&gt;
[&apos;DOSAGE AND ADMINISTRATION&apos;],
D: :dosage,
</table>
<page confidence="0.995278">
29
</page>
<bodyText confidence="0.866680333333333">
A::administration(PF).
macs: &apos;prolog.
The administration section should now be de-
scribed according to the pharmaceutical form it pre-
supposes, several administration ways being compat-
ible with each form:
</bodyText>
<figure confidence="0.784871363636364">
t able t sAdm inl : : administration (Tablet)
--&gt;
[&apos;Swallow the tablets without
crunching them.&apos;].
â€¢
tabletsAdmin2::administration(Tablet)
--&gt;
[&apos;Let the tablets melt under
the tongue.&apos;].
eyeDropsAdmin::administration(EyeDrops)
--&gt;
</figure>
<bodyText confidence="0.929016305555555">
[&apos;Pull the lower eyelid down while
looking up and squeeze the eye drops,
so that they fall between the eyelid
and the eyeball.&apos;].
The consequence of such a modeling is a better
control of the semantic content of the document in
the process of being authored: once the user chooses
tablet as pharmaceutical form in the section descrip-
tion, his choice is restricted between the two con-
cepts tabletsAdminl and tabletsAdmin2 in the ad-
ministration section. If he chooses eye drops as the
pharmaceutical form, there is no choice left if the ad-
ministration section: the text fragment correspond-
ing to the concept eyeDropsAdmin will be generated
automatically in the document.
This example illustrates how dependencies are
propagated into the macro-structure, but they can
be propagated into the micro-structure as well: for
example, in the description section, we can express
that the packaging of the drugs is also dependent of
their form: tablets are packaged in boxes, eye drops
in flasks, powder in packets, etc.:
vidalDescription(N,P,...)::description(PF)
--&gt;
[&apos;DESCRIPTIDN&apos;],
N::name0fDrug,
PF::pharmaceutForm,
P::package(PF),
box::package(Tablet).--&gt; [&apos;Box&apos;].
flask::package(EyeDrops) --&gt; [&apos;Flask&apos;].
This example shows that the granularity degree of
the linguistic realization can vary from full text seg-
ment (administration ways) to single words (forms
like tablet, eye drops. powder. etc.). This is highly
related to the reusability of the concept: references
to specific forms may appear in many parts of the
</bodyText>
<table confidence="0.861335636363636">
PitilidtlittlattlIESES2107
NUROFEN Ibuprofen.
PRESENTATION: NUROFER : coaortei ( Oen&lt; ) bofte de OR - Renb 65% - 15.0 F
â€¢ laboratoires Roots Nealtncare
(OPPOSITION: P CO
Ibuore(e. 200 eg
INDICATIONS: Ce medicament est un anti-Inflammatoire non sterof Olen (AIRS). Il est
utilise en can de douleurs diverses.
COATE-INDICATIONS: Ce eidicaaent no dolt pas etre utilise dans les con suivants:
al ler le aux BINS notaneent Vas 1 rine â€¢
ATTEFITION:
</table>
<tableCaption confidence="0.45767975">
. INTERACTIONS M0DICAPENTEDSE5: CO eedlcasent tent interagir avec d&apos;autres tea/cements.
,notameent: l&apos;eseirine et les autres anti inflennatoires non sterol diens:
augeentation des effets indesirables. - in lithirm: augaentation On noun de lithiue
dans le sang.
</tableCaption>
<figure confidence="0.8370534">
GROSSESSE ET MAMIE T: .
.0.40:1644,
4ate&apos;rgi, .*i=1;00.
.NOOE D&apos;EXPLOI ET POSOLOGIE: , POW*.
Usual I a: : cow Nes
EFFETS /NDFSIRABLES POSSIBLES: fr,
di :,7.wirt.
Glfri!t
fffrirgrigiQ01.,
&apos;Iirodiem^,T,1011fiittoKRIAIWPOile
</figure>
<figureCaption confidence="0.9608305">
Figure 1: A stage in the authoring of a notice, with
French text shown.
</figureCaption>
<bodyText confidence="0.995367181818182">
document, while the administration ways are more
or less frozen segments.12
The level of generality of dependencies encoded in
the grammar needs to be paid attention to: one has
to be sure that a given dependency is viable over a
large collection of documents in the domain. If a
choice made by the grammar writer is too specific,
the risk is that it may be not relevant for other docu-
ments. For this reason, an accurate knowledge of the
corpus is necessary to ensure an adequate coverage
of documents in the domain.
</bodyText>
<subsectionHeader confidence="0.998223">
4.3 An Example
</subsectionHeader>
<bodyText confidence="0.9998885">
Screen copies of the IG interface during an authoring
process of a VIDAL notice are given on figures I and
2. Figure 1 represents the notice authored in French
at a given stage. The fields still to be refined by
the user appear in dark. When the author wants to
refine a given field, a pulldown menu presenting the
choices for this field appears on the screen. Here, the
author chooses to refine the field avaler in the admin-
istration (mode d&apos;emploi et posologie) section: the
corresponding menu..proposes the list of administra-
tion ways corresponding Co the pharmaceutical form
tablet he has chosen before, Figure 2 shows the par-
allel notice in English but one step further, i.e. once
he has selected the administration way.
</bodyText>
<footnote confidence="0.627150666666667">
12 For a discussion of some of the issues regarding the use of
templates in natural language generation systems, see (Reiter,
1995)
</footnote>
<page confidence="0.899091">
7
30
</page>
<figure confidence="0.926725">
emacs .pr0109&apos;
23INIAttritiE1122d2111.121&apos;â€”&apos;&apos;Â§E.A&apos;xaj
</figure>
<figureCaption confidence="0.9916285">
Figure 2: The parallel English notice one authoring
step later.
</figureCaption>
<sectionHeader confidence="0.964348" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.898343666666667">
XML-based authoring tools are more and more
widely used in the business community for sup-
porting the production of technical documentation,
controlling their quality and improving their re-
usability. In this paper, we have stressed the connec-
tions between these practices and current research in
natural language generation and authoring. We have
described a formalism which removes some of the
limitations of DTD&apos;s when used for the production
of multilingual texts and presented its application to
a certain domain of pharmaceutical documents.
Acknowledgements Thanks to Jean-Pierre
Chanod, Marie-Helene Correard, Sylvain Pogodalla
and Aarne Ranta for important contributions,
discussions and comments.
</bodyText>
<sectionHeader confidence="0.967371" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.995499254237288">
J. Coch. 1996. Evaluating and comparing three text
production techniques. In Proceedings of the 16th
International Conference on Computational Lin-
guistics.
OVP Editions du VidaLeditor. .1998. Le -VIDAL de
la famille. HACHETTE.
M. Dymetman. V. Lux, and A. Ranta. 2000. XML
and multilingual document authoring: Conver-
gent trends. In Proceedings Coling 2000, Saar-
brficken.
A. Hartley and C. Paris. 1997. Multilingual docu-
ment production-: from support for translating to
support for authoring. In Machine Translation,
Special Issue.. on New Tools for Human Transla7;..
tors, pages 109-128.
L. Magnusson and B. Nordstrom. 1994. The ALF
proof editor and its proof engine. In Lecture Notes
in Computer Science 806: Springer.
P. Martin-Lof. 1984. Intuitionistic Type Theory.
Bibliopolis, Naples.
P. Maenpaa and A. Ranta. 1999. The type theory
and type checker of GF. In Colloquium on Prin-
.ciples, .Logics, Implementations :of .High- Level
Programming Languages, &apos; &apos;Workshop- on -Logical
Frameworks and Meta-languages, Paris, Septem-
ber. Available at http://www.cs.chalmers . se/
^-aarne/papers/lfm1999.ps.gz.
W. Pardi. 1999. XML in Action. Microsoft Press.
Fernando C. N. Pereira and David H. D. Warren.
1980. Definite clause grammars for language anal-
ysis. Artificial Intelligence, 13:231-278.
R. Power and D. Scott. 1998. Multilingual au-
thoring using feedback texts. In Proceedings of
the 17th International Conference on Computa-
tional Linguistics and 36th Annual Meeting of the
Association for Computational Linguistics, pages
1053-1059.
P. Prescod. 1998. Formalizing SG ML
and XML instances and schemata
with forest automata theory.
http://www.prescod.net/forest/shorttut/.
A. Ranta. Grammatical Framework work
page. http://www.cs.chalmers.se/
--aarne/GF/pub/work-index/index.html.
E. Reiter. 1995. NLG vs. templates. In Proceedings
of the 5th European Workshop on Natural Lan-
guage Generation (EWNLG &apos;95), pages 95-106,
Leiden.
W3C, 1998. Extensible Markup Language (XML)
1.0, February. W3C recommendation.
W3C, 1999a. XML Schema - Part I: Structures,
Part 2 : Datatypes -, December. W3C Working
draft.
W3C, 1999b. XSL Transformations (,VAT),
November. W3C recommendation.
D. Wood. 1995. Standard Generalized Markup Lan-
guage: Mathematical and philosophical issues.
Lecture Notes in Computer Science. 1000:341--
365.
</reference>
<figure confidence="0.997782">
NUROFEN ibuorafen
DESCRIPTIoN: buROFEN tablet ( chile ) box of 20 - 655 Reich - 15.0 F Boots
Healthcare Laboratories
COMPOSITION: a tb
Ibuprofen 200.5
INDICATIONS: This drug Is a non-steroidal antl-inflaaaatory (NSAIDs). It Is used to
treat various pains
CONTRAINDICATIONS: This drug should not he used in the following cases: allergy to
NSAIDs In articular to aspirin
ilid111111111111111gr7L.
DRUG INTERACTIONS: This drug can interact vIth Other drugs. In particular. - aSDIrlo
ana the other non steroidal anti-Inflameatory drugs: increase of side effects. -
(Attn.: increase of blood lithlue rate.
ORECNANCT AND BREAST-FEEDING:
00SKE MD KMINISTAATION: IMEMI Mg ovecessiagianiza, lass of
giangre et; &amp;Malin
â€¢ &apos;iâ€¢W X-l3
POSSIBLE SIDE EFFECTS:
MIMMUMMIS
15B4rsi.Filtinicgt,ftficiliicelSWKkInfeeineineoldefie
Natennizerttrin)=a4illiailaIaCnnl-S2WalcislInirceil.
</figure>
<page confidence="0.999399">
31
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.899783">
<title confidence="0.997017">Document Structure and Multilingual Authoring</title>
<author confidence="0.999696">Caroline Brun Marc Dymetman Veronika Lux</author>
<affiliation confidence="0.998936">Xerox Research Centre</affiliation>
<address confidence="0.970604">6 chemin de 38240 Meylan,</address>
<email confidence="0.999924">brunOxrce.xerox.com</email>
<email confidence="0.999924">dymetmanOxrce.xerox.com</email>
<email confidence="0.999924">luxOxrce.xerox.com</email>
<abstract confidence="0.998117576923077">The use of XML-based authoring tools is swiftly becoming a standard in the world of technical documentation. An XML document is a mixture of structure (the tags) and surface (text between the tags). The structure reflects the choices made by the author during the top-down stepwise refinement of the document under control of a DTD grammar. These choices are typically choices of meaning which are independent of the language in which the document is rendered, and can be seen as a kind of interlingua for the class of documents which is modeled by the DTD. Based on this remark, we advocate a radicalization of XML authoring, where the semantic content of the document is accounted for exclusively in terms of choice structures, and where appropriate rendering/realization mechanisms are responsible for producing the surface, possibly in several languages simultaneously. In this view, XML authoring has strong connections to natural language generation and text authoring. We describe the IG (Interaction Grammar) formalism, an extension of DT- D&apos;s which permits powerful linguistic manipulations, and show its application to the production of multilingual versions of a certain class of pharmaceutical documents.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Coch</author>
</authors>
<title>Evaluating and comparing three text production techniques.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th International Conference on Computational Linguistics.</booktitle>
<contexts>
<context position="4824" citStr="Coch, 1996" startWordPosition="756" endWordPosition="757">asible. 24 document. By contrast, a PCDATA string is language-specific .and ill-suited for multilingual applications. These remarks point to a possible radical view of XML authoring that advocates that surface strings be altogether eliminated from the document content, and that author choices be all under the explicit control of the DTD and reflected in the document structure. Such a view, which is argued for in a related paper (Dymetman et al., 2000), emphasizes the link between XML documenkaathoringAnd;multilingual.. text authoring/generation (Power and Scott, 1998; Hartley and Paris, 1997; Coch, 1996): the choices made by the author are treated as a kind of interlingua (specific to the class of documents being modelled), and it is the responsibility of appropriate &amp;quot;rendering&amp;quot; mechanisms to produce actual text from these choices in the different languages&apos; under consideration. For such a program, existing XML tools suffer however from serious limitations. First, DTD&apos;s are too poor in expressive power (they are close to context-free grammars) for expressing dependencies between different parts of the document, an aspect which becomes central as soon as the document micro-structure (its fine-</context>
</contexts>
<marker>Coch, 1996</marker>
<rawString>J. Coch. 1996. Evaluating and comparing three text production techniques. In Proceedings of the 16th International Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="false">
<booktitle>OVP Editions du VidaLeditor. .1998. Le -VIDAL de la famille.</booktitle>
<publisher>HACHETTE.</publisher>
<marker></marker>
<rawString>OVP Editions du VidaLeditor. .1998. Le -VIDAL de la famille. HACHETTE.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V Lux</author>
<author>A Ranta</author>
</authors>
<title>XML and multilingual document authoring: Convergent trends.</title>
<date>2000</date>
<booktitle>In Proceedings Coling 2000, Saarbrficken.</booktitle>
<marker>Lux, Ranta, 2000</marker>
<rawString>M. Dymetman. V. Lux, and A. Ranta. 2000. XML and multilingual document authoring: Convergent trends. In Proceedings Coling 2000, Saarbrficken.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Hartley</author>
<author>C Paris</author>
</authors>
<title>Multilingual document production-: from support for translating to support for authoring.</title>
<date>1997</date>
<booktitle>In Machine Translation, Special Issue.. on New Tools for Human Transla7;.. tors,</booktitle>
<pages>109--128</pages>
<contexts>
<context position="4811" citStr="Hartley and Paris, 1997" startWordPosition="752" endWordPosition="755">ntrol is becoming more feasible. 24 document. By contrast, a PCDATA string is language-specific .and ill-suited for multilingual applications. These remarks point to a possible radical view of XML authoring that advocates that surface strings be altogether eliminated from the document content, and that author choices be all under the explicit control of the DTD and reflected in the document structure. Such a view, which is argued for in a related paper (Dymetman et al., 2000), emphasizes the link between XML documenkaathoringAnd;multilingual.. text authoring/generation (Power and Scott, 1998; Hartley and Paris, 1997; Coch, 1996): the choices made by the author are treated as a kind of interlingua (specific to the class of documents being modelled), and it is the responsibility of appropriate &amp;quot;rendering&amp;quot; mechanisms to produce actual text from these choices in the different languages&apos; under consideration. For such a program, existing XML tools suffer however from serious limitations. First, DTD&apos;s are too poor in expressive power (they are close to context-free grammars) for expressing dependencies between different parts of the document, an aspect which becomes central as soon as the document micro-structu</context>
<context position="7963" citStr="Hartley and Paris, 1997" startWordPosition="1226" endWordPosition="1229">age the Aext,4110,,las.aullicired,fa4..i.anclzareas,wliere,,Lhe. text still needs refinement are highlighted. Menus for selecting a refinement are also presented to the author is his/her own language. Thus, the author is always overtly working in the language s/he nows, but is implicitly building a language-independent representation of the document content. From this representation, the system builds multilingual texts in any of several languages simultaneously. This approach characterizes our system as belonging to an emerging paradigm of &amp;quot;natural language authoring&amp;quot; (Power and Scott, 1998; Hartley and Paris, 1997), which is distinguished from natural language generation by the fact that the semantic input is provided interactively by a person rather than by a program accessing digital knowledge representations. Second, the system maintains strong control both over the semantics and the realizations of the document. At the semantic level, dependencies between different parts of the representation of the document content can be imposed: for instance the choice of a certain chemical at a certain point in a maintenance manual may lead to an obligatory warning at another point in the manual. At the realizat</context>
</contexts>
<marker>Hartley, Paris, 1997</marker>
<rawString>A. Hartley and C. Paris. 1997. Multilingual document production-: from support for translating to support for authoring. In Machine Translation, Special Issue.. on New Tools for Human Transla7;.. tors, pages 109-128.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Magnusson</author>
<author>B Nordstrom</author>
</authors>
<title>The ALF proof editor and its proof engine.</title>
<date>1994</date>
<booktitle>In Lecture Notes in Computer Science 806:</booktitle>
<publisher>Springer.</publisher>
<contexts>
<context position="6320" citStr="Magnusson and Nordstrom, 1994" startWordPosition="976" endWordPosition="979">S transformation language) (W3C, 1999b) are ill-adapted for handling even simple linguistic phenomena such as morphological variation or subject-verb agreement. In order to overcome these limitations, we are using a formalism, Interaction Grammars (IG), a specialization of Definite Clause Grammars (Pereira and Warren, 1980) which originates in A. Ranta&apos;s Grammatical Framework (GF) (Ranta; Maenpaa. and Ranta, 1999; Dymetman et al., 2000), a grammatical formalism based on Martin-LOf&apos;s Type Theory (Martin-L6f, 1984) and building on previous experience with interactive mathematical proof editors (Magnusson and Nordstrom, 1994). In this formalism, the carrier of meaning is a choice tree (called &amp;quot;abstract tree&amp;quot; in GF), a strongly typed object in which dependencies between substructures can be easily stated using the notion of dependent types. The remainder of this paper is organized as follows. In section 2..we give &apos;a:high.-Ievd -.overview .of the Multilingual Document Authoring (MDA) system that we have developed at XRCE. In section 3, we present in some detail the formalism of Interaction Grammars. In section 4, we describe an &apos;The word -language&amp;quot; should be understood here in an extended sense that not only covers</context>
</contexts>
<marker>Magnusson, Nordstrom, 1994</marker>
<rawString>L. Magnusson and B. Nordstrom. 1994. The ALF proof editor and its proof engine. In Lecture Notes in Computer Science 806: Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Martin-Lof</author>
</authors>
<title>Intuitionistic Type Theory. Bibliopolis,</title>
<date>1984</date>
<location>Naples.</location>
<contexts>
<context position="15617" citStr="Martin-Lof, 1984" startWordPosition="2434" endWordPosition="2435">dr(Co,C)::address --&gt; C: :city, Co::country. fra::country --&gt; 0. ger::country --&gt; C7 . par: :city --&gt; 0. ham: :city --&gt; 0. cap(Co)::city --&gt; Co::country. The first rule is then read: &amp;quot;if C is a tree of type city, and Co a tree of type country, then adr(Co,C) is a tree of type address&amp;quot;, and similarly for the remaining rules. The grammars we have given so far are deficient in one important respect: there is no dependency between the city and the country in the same address, so that the tree adr(ham,fra) is well-formed in the type address. In order to remedy this problem, dependent types (Ranta; Martin-Lof, 1984) can be used. From our point of view, a dependent type is simply a type that can be parametrized by objects of other types. We write: adr(Co,C)::address --&gt; C::city(Co), Co: :country. fra::country --&gt; . ger: :country --&gt; 0 . par::city(fra) --&gt; ham::city(ger) cap(Co)::city(Co) --&gt; Co: :country. in which the type city is now parametrized by objects of type country, and where the notation par: : city(fra) is -read as &amp;quot;par is a-tree of the type: city of fra.&amp;quot;.9 which is another way of stating the well-known duality between the rewriting and the goal-proving approaches to the interpretation of Prol</context>
</contexts>
<marker>Martin-Lof, 1984</marker>
<rawString>P. Martin-Lof. 1984. Intuitionistic Type Theory. Bibliopolis, Naples.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Maenpaa</author>
<author>A Ranta</author>
</authors>
<title>The type theory and type checker of GF.</title>
<date>1999</date>
<booktitle>In Colloquium on Prin.ciples, .Logics, Implementations :of .High- Level Programming Languages, &apos; &apos;Workshop- on -Logical Frameworks and Meta-languages,</booktitle>
<location>Paris,</location>
<note>se/ ^-aarne/papers/lfm1999.ps.gz.</note>
<marker>Maenpaa, Ranta, 1999</marker>
<rawString>P. Maenpaa and A. Ranta. 1999. The type theory and type checker of GF. In Colloquium on Prin.ciples, .Logics, Implementations :of .High- Level Programming Languages, &apos; &apos;Workshop- on -Logical Frameworks and Meta-languages, Paris, September. Available at http://www.cs.chalmers . se/ ^-aarne/papers/lfm1999.ps.gz.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Pardi</author>
</authors>
<title>XML in Action. Microsoft Press. Fernando</title>
<date>1999</date>
<journal>Artificial Intelligence,</journal>
<pages>13--231</pages>
<contexts>
<context position="1584" citStr="Pardi, 1999" startWordPosition="247" endWordPosition="248">ation mechanisms are responsible for producing the surface, possibly in several languages simultaneously. In this view, XML authoring has strong connections to natural language generation and text authoring. We describe the IG (Interaction Grammar) formalism, an extension of DTD&apos;s which permits powerful linguistic manipulations, and show its application to the production of multilingual versions of a certain class of pharmaceutical documents. 1 Introduction The world of technical documentation is forcefully moving towards the use of authoring tools based on the XML markup language (W3C, 1998; Pardi, 1999). This language is based on grammatical specifications, called DTD&apos;s, which are roughly similar to context-free grammars&apos; with an arbitrary number of non-terminals and exactly one predefined terminal called pcdata. The pcdata terminal has a special status: it can dominate any character string (subject to certain restrictions on the characters allowed). Authoring is seen as a top-down interactive process of step-wise refinement of the root nontermina! (corresponding to the whole document) where the author iteratively selects a rule for expanding a &apos;But see (Wood, 1995; Prescod, 199S) for discus</context>
</contexts>
<marker>Pardi, 1999</marker>
<rawString>W. Pardi. 1999. XML in Action. Microsoft Press. Fernando C. N. Pereira and David H. D. Warren. 1980. Definite clause grammars for language analysis. Artificial Intelligence, 13:231-278.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Power</author>
<author>D Scott</author>
</authors>
<title>Multilingual authoring using feedback texts.</title>
<date>1998</date>
<booktitle>In Proceedings of the 17th International Conference on Computational Linguistics and 36th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>1053--1059</pages>
<contexts>
<context position="4786" citStr="Power and Scott, 1998" startWordPosition="748" endWordPosition="751">tc.). some degree of control is becoming more feasible. 24 document. By contrast, a PCDATA string is language-specific .and ill-suited for multilingual applications. These remarks point to a possible radical view of XML authoring that advocates that surface strings be altogether eliminated from the document content, and that author choices be all under the explicit control of the DTD and reflected in the document structure. Such a view, which is argued for in a related paper (Dymetman et al., 2000), emphasizes the link between XML documenkaathoringAnd;multilingual.. text authoring/generation (Power and Scott, 1998; Hartley and Paris, 1997; Coch, 1996): the choices made by the author are treated as a kind of interlingua (specific to the class of documents being modelled), and it is the responsibility of appropriate &amp;quot;rendering&amp;quot; mechanisms to produce actual text from these choices in the different languages&apos; under consideration. For such a program, existing XML tools suffer however from serious limitations. First, DTD&apos;s are too poor in expressive power (they are close to context-free grammars) for expressing dependencies between different parts of the document, an aspect which becomes central as soon as t</context>
<context position="7937" citStr="Power and Scott, 1998" startWordPosition="1222" endWordPosition="1225">ew in his/her own language the Aext,4110,,las.aullicired,fa4..i.anclzareas,wliere,,Lhe. text still needs refinement are highlighted. Menus for selecting a refinement are also presented to the author is his/her own language. Thus, the author is always overtly working in the language s/he nows, but is implicitly building a language-independent representation of the document content. From this representation, the system builds multilingual texts in any of several languages simultaneously. This approach characterizes our system as belonging to an emerging paradigm of &amp;quot;natural language authoring&amp;quot; (Power and Scott, 1998; Hartley and Paris, 1997), which is distinguished from natural language generation by the fact that the semantic input is provided interactively by a person rather than by a program accessing digital knowledge representations. Second, the system maintains strong control both over the semantics and the realizations of the document. At the semantic level, dependencies between different parts of the representation of the document content can be imposed: for instance the choice of a certain chemical at a certain point in a maintenance manual may lead to an obligatory warning at another point in t</context>
</contexts>
<marker>Power, Scott, 1998</marker>
<rawString>R. Power and D. Scott. 1998. Multilingual authoring using feedback texts. In Proceedings of the 17th International Conference on Computational Linguistics and 36th Annual Meeting of the Association for Computational Linguistics, pages 1053-1059.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Prescod</author>
</authors>
<title>Formalizing SG ML and XML instances and schemata with forest automata theory.</title>
<date>1998</date>
<note>http://www.prescod.net/forest/shorttut/.</note>
<marker>Prescod, 1998</marker>
<rawString>P. Prescod. 1998. Formalizing SG ML and XML instances and schemata with forest automata theory. http://www.prescod.net/forest/shorttut/.</rawString>
</citation>
<citation valid="false">
<authors>
<author>A Ranta</author>
</authors>
<title>Grammatical Framework work page.</title>
<note>http://www.cs.chalmers.se/ --aarne/GF/pub/work-index/index.html.</note>
<marker>Ranta, </marker>
<rawString>A. Ranta. Grammatical Framework work page. http://www.cs.chalmers.se/ --aarne/GF/pub/work-index/index.html.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Reiter</author>
</authors>
<title>NLG vs. templates.</title>
<date>1995</date>
<booktitle>In Proceedings of the 5th European Workshop on Natural Language Generation (EWNLG &apos;95),</booktitle>
<pages>95--106</pages>
<location>Leiden.</location>
<contexts>
<context position="31084" citStr="Reiter, 1995" startWordPosition="4717" endWordPosition="4718">e author wants to refine a given field, a pulldown menu presenting the choices for this field appears on the screen. Here, the author chooses to refine the field avaler in the administration (mode d&apos;emploi et posologie) section: the corresponding menu..proposes the list of administration ways corresponding Co the pharmaceutical form tablet he has chosen before, Figure 2 shows the parallel notice in English but one step further, i.e. once he has selected the administration way. 12 For a discussion of some of the issues regarding the use of templates in natural language generation systems, see (Reiter, 1995) 7 30 emacs .pr0109&apos; 23INIAttritiE1122d2111.121&apos;â€”&apos;&apos;Â§E.A&apos;xaj Figure 2: The parallel English notice one authoring step later. 5 Conclusion XML-based authoring tools are more and more widely used in the business community for supporting the production of technical documentation, controlling their quality and improving their reusability. In this paper, we have stressed the connections between these practices and current research in natural language generation and authoring. We have described a formalism which removes some of the limitations of DTD&apos;s when used for the production of multilingual tex</context>
</contexts>
<marker>Reiter, 1995</marker>
<rawString>E. Reiter. 1995. NLG vs. templates. In Proceedings of the 5th European Workshop on Natural Language Generation (EWNLG &apos;95), pages 95-106, Leiden.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W3C</author>
</authors>
<title>Extensible Markup Language (XML) 1.0,</title>
<date>1998</date>
<note>W3C recommendation.</note>
<marker>W3C, 1998</marker>
<rawString>W3C, 1998. Extensible Markup Language (XML) 1.0, February. W3C recommendation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>1999a W3C</author>
</authors>
<title>XML Schema - Part I: Structures,</title>
<date></date>
<journal>Part</journal>
<booktitle>Datatypes -,</booktitle>
<volume>2</volume>
<note>W3C Working draft.</note>
<marker>W3C, </marker>
<rawString>W3C, 1999a. XML Schema - Part I: Structures, Part 2 : Datatypes -, December. W3C Working draft.</rawString>
</citation>
<citation valid="true">
<date></date>
<booktitle>W3C, 1999b. XSL Transformations (,VAT),</booktitle>
<note>W3C recommendation.</note>
<marker></marker>
<rawString>W3C, 1999b. XSL Transformations (,VAT), November. W3C recommendation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Wood</author>
</authors>
<title>Standard Generalized Markup Language: Mathematical and philosophical issues.</title>
<date>1995</date>
<journal>Lecture Notes in Computer Science.</journal>
<pages>1000--341</pages>
<contexts>
<context position="2157" citStr="Wood, 1995" startWordPosition="336" endWordPosition="337">kup language (W3C, 1998; Pardi, 1999). This language is based on grammatical specifications, called DTD&apos;s, which are roughly similar to context-free grammars&apos; with an arbitrary number of non-terminals and exactly one predefined terminal called pcdata. The pcdata terminal has a special status: it can dominate any character string (subject to certain restrictions on the characters allowed). Authoring is seen as a top-down interactive process of step-wise refinement of the root nontermina! (corresponding to the whole document) where the author iteratively selects a rule for expanding a &apos;But see (Wood, 1995; Prescod, 199S) for discussions of the differences. nonterminal already present in the tree and where in addition s/he can choose an arbitrary sequence of characters (roughly) for expanding the pcdata node. The resulting document is a mixture of treelike structure (the context-free derivation tree corresponding to the author&apos;s selections), represented through tags, and of surface, represented as free-text (PCDATA) between the tags. We see however a tension between the structure and surface aspects of an XML document: â€¢ While structural choices are under system control (they have to be compati</context>
</contexts>
<marker>Wood, 1995</marker>
<rawString>D. Wood. 1995. Standard Generalized Markup Language: Mathematical and philosophical issues. Lecture Notes in Computer Science. 1000:341--365.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>