<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.005480">
<title confidence="0.964731">
Computational Analysis of Move Structures in Academic Abstracts
</title>
<author confidence="0.945028">
Jien-Chen Wu1 Yu-Chia Chang1 Hsien-Chin Liou2 Jason S. Chang1
</author>
<address confidence="0.609161">
CS1 and FLL2, National Tsing Hua Univ.
</address>
<email confidence="0.891128">
{d928322,d948353}@oz.nthu.edu.tw, hcliu@mx.nthu.edu.tw,
jason.jschang@gmail.com
</email>
<sectionHeader confidence="0.997002" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99936125">
This paper introduces a method for
computational analysis of move
structures in abstracts of research articles.
In our approach, sentences in a given
abstract are analyzed and labeled with a
specific move in light of various
rhetorical functions. The method involves
automatically gathering a large number
of abstracts from the Web and building a
language model of abstract moves. We
also present a prototype concordancer,
CARE, which exploits the move-tagged
abstracts for digital learning. This system
provides a promising approach to Web-
based computer-assisted academic
writing.
</bodyText>
<sectionHeader confidence="0.999384" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999944972972973">
In recent years, with the rapid development of
globalization, English for Academic Purposes
has drawn researchers&apos; attention and become the
mainstream of English for Specific Purposes,
particularly in the field of English of Academic
Writing (EAW). EAW deals mainly with genres,
including research articles (RAs), reviews,
experimental reports, and other types of
academic writing. RAs play the most important
role of offering researchers the access to actively
participating in the academic and discourse
community and sharing academic research
information with one another.
Abstracts are constantly regarded as the first
part of RAs and few scholarly RAs go without an
abstract. “A well-prepared abstract enables
readers to identify the basic content of a
document quickly and accurately.” (American
National Standards Institute, 1979) Therefore,
RAs&apos; abstracts are equally important to writers
and readers.
Recent research on abstract requires manually
analysis, which is time-consuming and labor-
intensive. Moreover, with the rapid development
of science and technology, learners are
increasingly engaged in self-paced learning in a
digital environment. Our study, therefore,
attempts to investigate ways of automatically
analyzing the move structure of English RAs’
abstracts and develops an online learning system,
CARE (Concordancer for Academic wRiting in
English). It is expected that the automatic
analytical tool for move structures will facilitate
non-native speakers (NNS) or novice writers to
be aware of appropriate move structures and
internalize relevant knowledge to improve their
writing.
</bodyText>
<sectionHeader confidence="0.9665725" genericHeader="method">
2 Macrostructure of Information in
RAs
</sectionHeader>
<bodyText confidence="0.999962035714286">
Swales (1990) presented a simple and succinct
picture of the organizational pattern for a RA—
the IMRD structure (Introduction, Methods,
Results, and Discussion). Additionally Swales
(1981, 1990) introduced the theory of genre
analysis of a RA and a four-move scheme, which
was later refined as the &amp;quot;Create a Research
Space&amp;quot; (CARS) model for analyzing a RA’s
introduction section.
Even though Swales seemed to have
overlooked the abstract section, in which he did
not propose any move analysis, he himself
plainly realized “abstracts continue to remain a
neglected field among discourse analysts”
(Swales, 1990, p. 181). Salager-Meyer (1992)
also stated, “Abstracts play such a pivotal role in
any professional reading” (p. 94). Seemingly
researchers have perceived this view, so research
has been expanded to concentrate on the abstract
in recent years.
Anthony (2003) further pointed out, “research
has shown that the study of rhetorical
organization or structure of texts is particularly
useful in the technical reading and writing
classroom” (p. 185). Therefore, he utilized
computational means to create a system, Mover,
which could offer move analysis to assist
abstract writing and reading.
</bodyText>
<sectionHeader confidence="0.998669" genericHeader="method">
3 CARE
</sectionHeader>
<bodyText confidence="0.9936465">
Our system focuses on automatically
computational analysis of move structures (i.e.
</bodyText>
<page confidence="0.990631">
41
</page>
<bodyText confidence="0.835575037037037">
Proceedings of the COLING/ACL 2006 Interactive Presentation Sessions, pages 41–44,
Sydney, July 2006. c�2006 Association for Computational Linguistics
Background, Purpose, Method, Result, and
Conclusion) in RA abstracts. In particular, we
investigate the feasibility of using a few
manually labeled data as seeds to train a Markov
model and to automatically acquire move-
collocation relationships based on a large number
of unlabeled data. These relationships are then
used to analyze the rhetorical structure of
abstracts. It is important that only a small
number of manually labeled data are required
while much of move tagging knowledge is
learned from unlabeled data. We attempt to
identify which rhetorical move is correspondent
to a sentence in a given abstract by using features
(e.g. collocations in the sentence). Our learning
process is shown as follows:
(1)Automatically collect abstracts from the Web for
training
(2)Manually label each sentence in a small set of given
abstracts
(3)Automatically extract collocations from all abstracts
(4)Manually label one move for each distinct collocation
(5)Automatically expand collocations indicative of each
move
(6)Develop a hidden Markov model for move tagging
</bodyText>
<figureCaption confidence="0.980392">
Figure 1: Processes used to learn collocation
classifiers
</figureCaption>
<subsectionHeader confidence="0.999924">
3.1 Collecting Training Data
</subsectionHeader>
<bodyText confidence="0.99999575">
In the first four processes, we collected data
through a search engine to build the abstract
corpus A. Three specialists in computer science
tagged a small set of the qualified abstracts based
on our coding scheme of moves. Meanwhile, we
extracted the collocations (Jian et al., 2004) from
the abstract corpus, and labeled these extracted
collocations with the same coding scheme.
</bodyText>
<subsectionHeader confidence="0.9982445">
3.2 Automatically Expanding Collocations
for Moves
</subsectionHeader>
<bodyText confidence="0.992420388888889">
To balance the distribution in the move-tagged
collocation (MTC), we expand the collocation for
certain moves in this stage. We use the one-
move-per-collocation constraint to bootstrap,
which mainly hinges on the feature redundancy
of the given data, a situation where there is often
evidence to indicate that a given should be
annotated with a certain move. That is, given one
collocation ci is tagged with move mi, all
sentences S containing collocation ci will be
tagged with mi as well; meanwhile, the other
collocations in S are thus all tagged with mi. For
example:
Step 1. The collocation “paper address”
extracted from corpus A is labeled with the “P”
move. Then we use it to label other untagged
sentences US (e.g. Examples (1) through (2))
containing “paper address” as “P” in A. As a
result, these US become tagged sentences TS
with “P” move.
(1)This paper addresses the state explosion problem in
automata based ltl model checking. //P//
(2)This paper addresses the problem of fitting mixture
densities to multivariate binned and truncated data. //P//
Step 2. We then look for other features (e.g. the
collocation, “address problem”) that occur in TS
of A to discover new evidences of a “P” move
(e.g. Examples (3) through (4)).
(3)This paper addresses the state explosion problem in
automata based ltl model checking.
(4)This paper addresses the problem of fitting mixture
densities to multivariate binned and truncated data.
Step 3. Subsequently, the feature “address
problem” can be further exploited to tag
sentences which realize the “P” move but do not
contain the collocation “paper address”, thus
gradually expanding the scope of the annotations
to A. For example, in the second iteration,
Example (5) and (6) can be automatically tagged
as indicating the “P” move.
(5)In this paper we address the problem of query
answering using views for non-recursive data log
queries embedded in a Description Logics
knowledge base. //P//
(6)We address the problem of learning robust
plans for robot navigation by observing
particular robot behaviors. //P//
From these examples ((5) and (6)), we can
extend to another feature “we address”, which
can be tagged as “P” move as well. The
bootstrapping processes can be repeated until no
new feature with high enough frequency is found
(a sample of collocation expanded list is shown
in Table1).
</bodyText>
<table confidence="0.808369625">
Type Collocation Move Count of Total of
Collocation Collocation
with mj Occurrences
NV we present P 3,441 3,668
NV we show R 1,985 2,069
NV we propose P 1,722 1,787
NV we describe P 1,505 1,583
... ... ... ... ...
</table>
<tableCaption confidence="0.971241">
Table 1: The sample of the expanded collocation
list
</tableCaption>
<page confidence="0.998587">
42
</page>
<subsectionHeader confidence="0.998084">
3.3 Building a HMM for Move Tagging
</subsectionHeader>
<bodyText confidence="0.999978875">
The move sequence probability P(ti+1 ti) is
given as the following description:
We are given a corpus of unlabeled abstracts A
= {A1,..., AN}. We are also given a small labeled
subset S = {L1,..., Lk} of A, where each abstract
Li consists of a sequence of sentence and move
{t1, t2,..., tk}. The moves ti take out of a value
from a set of possible move M = {m1,m2,...,mn}.
</bodyText>
<equation confidence="0.995497333333333">
⎛ N(ti  |ti+1)
⎜ ⎟
⎝N ( ti) ⎠
</equation>
<bodyText confidence="0.998527416666667">
According to the bi-gram move sequence
score (shown in Table 2), we can see move
sequences follow a certain schematic pattern. For
instance, the “B” move is usually directly
followed by the “P” move or “B” move, but not
by the “M” move. Also rarely will a “P” move
occur before a “B” move. Furthermore, an
abstract seldom have a move sequence wherein
“P” move directly followed by the “R” move,
which tends to be a bad move structure. In sum,
the move progression generally follows the
sequence of &amp;quot;B-P-M-R-C&amp;quot;.
</bodyText>
<table confidence="0.997997823529412">
Move ti Move ti+1 - log P (ti+1|ti)
$ B 0.7802
$ P 0.6131
B B 0.9029
B M 3.6109
B P 0.5664
C $ 0.0000
M $ 4.4998
M C 1.9349
M M 0.7386
M R 1.0033
P M 0.4055
P P 1.1431
P R 4.2341
R $ 0.9410
R C 0.8232
R R 1.7677
</table>
<tableCaption confidence="0.851171">
Table 2: The score of bi-gram move sequence
(Note that “$” denotes the beginning or the
ending of a given abstract.)
</tableCaption>
<bodyText confidence="0.997083888888889">
Finally, we synchronize move sequence and
one-move-per-collocation probabilities to train a
language model to automatically learn the
relationship between those extracted linguistic
features based on a large number of unlabeled
data. Meanwhile, we set some parameters of the
proposed model, such as, the threshold of the
number of collocation occurring in a given
abstract, the weight of move sequence and
collocation and smoothing. Based on these
parameters, we implement the Hidden Markov
Model (HMM). The algorithm is described as the
following:
p(s1,...., sn) = p(t1)p(s1  |t1)Πp(ti  |ti−1)p(si  |ti)
The moves ti take out of a value from a set of
possible moves M={m1, m2, ...., mk} (The
following parameters 01 and 02 will be
determined based on some heuristics).
</bodyText>
<equation confidence="0.953390923076923">
p(Si|ti=mi)
= 01 if Si contains a collocation in MTCj
i =j
= 02 if Si contains a collocation in MTCj
but i ≠ j
1
=
k if Si does not contain a collocation MTCj
The optimal move sequence t* is
(t1*,t2*, ... ,tn*)=argmaxp(s1, ... ,sn  |ti,..., tn)
t t t
1 2
, ,..., n
</equation>
<bodyText confidence="0.9997365">
In summary, at the beginning of training time,
we use a few human move-tagged sentences as
seed data. Then, collocation-to-move and move-
to-move probabilities are employed to build the
HMM. This probabilistic model derived at the
training stage will be applied at run time.
</bodyText>
<sectionHeader confidence="0.997636" genericHeader="method">
4 Evaluation
</sectionHeader>
<bodyText confidence="0.9999199375">
In terms of the training data, we retrieved
abstracts from the search engine, Citeseer; a
corpus of 20,306 abstracts (95,960 sentences)
was generated. Also 106 abstracts composed of
709 sentences were manually move-tagged by
four informants. Meanwhile, we extracted 72,708
collocation types and manually tagged 317
collocations with moves.
At run time, 115 abstracts containing 684
sentences were prepared to be the training data.
We then used our proposed HMM to perform
some experimentation with the different values
of parameters: the frequency of collocation types,
the number of sentences with collocation in each
abstract, move sequence score and collocation
score.
</bodyText>
<subsectionHeader confidence="0.997658">
4.1 Performance of CARE
</subsectionHeader>
<bodyText confidence="0.9676158">
We investigated how well the HMM model
performed the task of automatic move tagging
under different values of parameters. The
parameters involved included the weight of
transitional probability function, the number of
sentences in an abstract, the minimal number of
instance for the applicable collocations. Figure 2
indicates the best precision of 80.54% when 627
sentences were qualified with the set of various
Then P(ti +1  |ti) =
</bodyText>
<page confidence="0.99933">
43
</page>
<bodyText confidence="0.999514307692308">
parameters, including 0.7 as the weight of
transitional probability function and a frequency
threshold of 18 for a collocation to be applicable,
and the minimally two sentences containing an
applicable collocation. Although it is important
to have many collocations, it is crucial that we
set an appropriate frequency threshold of
collocation so as not to include unreliable
collocation and lower the precision rate.
Figure2: The results of tagging performance with
different setting of weight and threshold for
applicable collocations (Note that C_T denotes
the frequency threshold of collocation)
</bodyText>
<sectionHeader confidence="0.997007" genericHeader="method">
5 System Interface
</sectionHeader>
<bodyText confidence="0.99977">
The goal of the CARE System is to allow a
learner to look for instances of sentences labeled
with moves. For this purpose, the system is
developed with three text boxes for learners to
enter queries in English (as shown in Figure3.):
</bodyText>
<listItem confidence="0.956505375">
• Single word query (i.e. directly input one
word to query)
• Multi-word query (i.e. enter the result
show to find citations that contain the
three words, “the”, “paper” and “show”
and all the derivatives)
• Corpus selection (i.e. learners can focus on
a corpus in a specific domain)
</listItem>
<bodyText confidence="0.99700675">
Once a query is submitted, CARE displays the
results in returned Web pages. Each result
consists of a sentence with its move annotation.
The words matching the query are highlighted.
</bodyText>
<figureCaption confidence="0.727387">
Figure 3: The sample of searching result with the
phrase “the result show”
</figureCaption>
<sectionHeader confidence="0.999136" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.9999610625">
In this paper, we have presented a method for
computational analysis of move structures in
RAs&apos; abstracts and addressed its pedagogical
applications. The method involves learning the
inter-move relationships, and some labeling rules
we proposed. We used a large number of
abstracts automatically acquired from the Web
for training, and exploited the HMM to tag
sentences with the move of a given abstract.
Evaluation shows that the proposed method
outperforms previous work with higher precision.
Using the processed result, we built a prototype
concordance, CARE, enriched with words,
phrases and moves. It is expected that NNS can
benefit from such a system in learning how to
write an abstract for a research article.
</bodyText>
<sectionHeader confidence="0.999432" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99767645">
Anthony, L. and Lashkia, G. V. 2003. Mover: A
machine learning tool to assist in the reading and
writing of technical papers. IEEE Trans. Prof.
Communication, 46:185-193.
American National Standards Institute. 1979.
American national standard for writing abstracts.
ANSI Z39, 14-1979. New York: Author.
Jian, J. Y., Chang, Y. C., and Chang, J. S. 2004.
TANGO: Bilingual Collocational Concordancer,
Post &amp; demo in ACL 2004, Barcelona.
Salager-Meyer, F. S. 1992. A text-type and move
analysis study of verb tense and modality
distribution in medical English abstracts. English
for Specific Purposes, 11:93-113.
Swales, J.M. 1981. Aspects of article introductions.
Birmingham, UK: The University of Aston,
Language Studies Unit.
Swales, J.M. 1990. Genre analysis: English in
Academic and Research Settings. Cambridge
University Press®
</reference>
<page confidence="0.999293">
44
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.425300">
<title confidence="0.997131">Computational Analysis of Move Structures in Academic Abstracts</title>
<author confidence="0.998471">Yu-Chia Hsien-Chin Jason S</author>
<affiliation confidence="0.969512">and National Tsing Hua Univ.</affiliation>
<address confidence="0.490079">{d928322,d948353}@oz.nthu.edu.tw, hcliu@mx.nthu.edu.tw,</address>
<email confidence="0.999268">jason.jschang@gmail.com</email>
<abstract confidence="0.991192882352941">This paper introduces a method for computational analysis of move structures in abstracts of research articles. In our approach, sentences in a given abstract are analyzed and labeled with a specific move in light of various rhetorical functions. The method involves automatically gathering a large number of abstracts from the Web and building a language model of abstract moves. We also present a prototype concordancer, CARE, which exploits the move-tagged abstracts for digital learning. This system a promising approach to Webbased computer-assisted academic writing.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>L Anthony</author>
<author>G V Lashkia</author>
</authors>
<title>Mover: A machine learning tool to assist in the reading and writing of technical papers.</title>
<date>2003</date>
<journal>IEEE Trans. Prof. Communication,</journal>
<pages>46--185</pages>
<marker>Anthony, Lashkia, 2003</marker>
<rawString>Anthony, L. and Lashkia, G. V. 2003. Mover: A machine learning tool to assist in the reading and writing of technical papers. IEEE Trans. Prof. Communication, 46:185-193.</rawString>
</citation>
<citation valid="true">
<title>American national standard for writing abstracts.</title>
<date>1979</date>
<booktitle>ANSI Z39,</booktitle>
<pages>14--1979</pages>
<publisher>Author.</publisher>
<institution>American National Standards Institute.</institution>
<location>New York:</location>
<marker>1979</marker>
<rawString>American National Standards Institute. 1979. American national standard for writing abstracts. ANSI Z39, 14-1979. New York: Author.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Y Jian</author>
<author>Y C Chang</author>
<author>J S Chang</author>
</authors>
<date>2004</date>
<booktitle>TANGO: Bilingual Collocational Concordancer, Post &amp; demo in ACL 2004,</booktitle>
<location>Barcelona.</location>
<contexts>
<context position="5376" citStr="Jian et al., 2004" startWordPosition="778" endWordPosition="781">et of given abstracts (3)Automatically extract collocations from all abstracts (4)Manually label one move for each distinct collocation (5)Automatically expand collocations indicative of each move (6)Develop a hidden Markov model for move tagging Figure 1: Processes used to learn collocation classifiers 3.1 Collecting Training Data In the first four processes, we collected data through a search engine to build the abstract corpus A. Three specialists in computer science tagged a small set of the qualified abstracts based on our coding scheme of moves. Meanwhile, we extracted the collocations (Jian et al., 2004) from the abstract corpus, and labeled these extracted collocations with the same coding scheme. 3.2 Automatically Expanding Collocations for Moves To balance the distribution in the move-tagged collocation (MTC), we expand the collocation for certain moves in this stage. We use the onemove-per-collocation constraint to bootstrap, which mainly hinges on the feature redundancy of the given data, a situation where there is often evidence to indicate that a given should be annotated with a certain move. That is, given one collocation ci is tagged with move mi, all sentences S containing collocati</context>
</contexts>
<marker>Jian, Chang, Chang, 2004</marker>
<rawString>Jian, J. Y., Chang, Y. C., and Chang, J. S. 2004. TANGO: Bilingual Collocational Concordancer, Post &amp; demo in ACL 2004, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F S Salager-Meyer</author>
</authors>
<title>A text-type and move analysis study of verb tense and modality distribution in medical English abstracts. English for Specific Purposes,</title>
<date>1992</date>
<pages>11--93</pages>
<contexts>
<context position="3138" citStr="Salager-Meyer (1992)" startWordPosition="445" endWordPosition="446">ed a simple and succinct picture of the organizational pattern for a RA— the IMRD structure (Introduction, Methods, Results, and Discussion). Additionally Swales (1981, 1990) introduced the theory of genre analysis of a RA and a four-move scheme, which was later refined as the &amp;quot;Create a Research Space&amp;quot; (CARS) model for analyzing a RA’s introduction section. Even though Swales seemed to have overlooked the abstract section, in which he did not propose any move analysis, he himself plainly realized “abstracts continue to remain a neglected field among discourse analysts” (Swales, 1990, p. 181). Salager-Meyer (1992) also stated, “Abstracts play such a pivotal role in any professional reading” (p. 94). Seemingly researchers have perceived this view, so research has been expanded to concentrate on the abstract in recent years. Anthony (2003) further pointed out, “research has shown that the study of rhetorical organization or structure of texts is particularly useful in the technical reading and writing classroom” (p. 185). Therefore, he utilized computational means to create a system, Mover, which could offer move analysis to assist abstract writing and reading. 3 CARE Our system focuses on automatically </context>
</contexts>
<marker>Salager-Meyer, 1992</marker>
<rawString>Salager-Meyer, F. S. 1992. A text-type and move analysis study of verb tense and modality distribution in medical English abstracts. English for Specific Purposes, 11:93-113.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J M Swales</author>
</authors>
<title>Aspects of article introductions.</title>
<date>1981</date>
<institution>The University of Aston, Language Studies Unit.</institution>
<location>Birmingham, UK:</location>
<contexts>
<context position="2685" citStr="Swales (1981" startWordPosition="374" endWordPosition="375">ly analyzing the move structure of English RAs’ abstracts and develops an online learning system, CARE (Concordancer for Academic wRiting in English). It is expected that the automatic analytical tool for move structures will facilitate non-native speakers (NNS) or novice writers to be aware of appropriate move structures and internalize relevant knowledge to improve their writing. 2 Macrostructure of Information in RAs Swales (1990) presented a simple and succinct picture of the organizational pattern for a RA— the IMRD structure (Introduction, Methods, Results, and Discussion). Additionally Swales (1981, 1990) introduced the theory of genre analysis of a RA and a four-move scheme, which was later refined as the &amp;quot;Create a Research Space&amp;quot; (CARS) model for analyzing a RA’s introduction section. Even though Swales seemed to have overlooked the abstract section, in which he did not propose any move analysis, he himself plainly realized “abstracts continue to remain a neglected field among discourse analysts” (Swales, 1990, p. 181). Salager-Meyer (1992) also stated, “Abstracts play such a pivotal role in any professional reading” (p. 94). Seemingly researchers have perceived this view, so research</context>
</contexts>
<marker>Swales, 1981</marker>
<rawString>Swales, J.M. 1981. Aspects of article introductions. Birmingham, UK: The University of Aston, Language Studies Unit.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J M Swales</author>
</authors>
<title>Genre analysis: English in Academic and Research Settings.</title>
<date>1990</date>
<publisher>Cambridge University Press®</publisher>
<contexts>
<context position="2510" citStr="Swales (1990)" startWordPosition="350" endWordPosition="351"> of science and technology, learners are increasingly engaged in self-paced learning in a digital environment. Our study, therefore, attempts to investigate ways of automatically analyzing the move structure of English RAs’ abstracts and develops an online learning system, CARE (Concordancer for Academic wRiting in English). It is expected that the automatic analytical tool for move structures will facilitate non-native speakers (NNS) or novice writers to be aware of appropriate move structures and internalize relevant knowledge to improve their writing. 2 Macrostructure of Information in RAs Swales (1990) presented a simple and succinct picture of the organizational pattern for a RA— the IMRD structure (Introduction, Methods, Results, and Discussion). Additionally Swales (1981, 1990) introduced the theory of genre analysis of a RA and a four-move scheme, which was later refined as the &amp;quot;Create a Research Space&amp;quot; (CARS) model for analyzing a RA’s introduction section. Even though Swales seemed to have overlooked the abstract section, in which he did not propose any move analysis, he himself plainly realized “abstracts continue to remain a neglected field among discourse analysts” (Swales, 1990, p</context>
</contexts>
<marker>Swales, 1990</marker>
<rawString>Swales, J.M. 1990. Genre analysis: English in Academic and Research Settings. Cambridge University Press®</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>