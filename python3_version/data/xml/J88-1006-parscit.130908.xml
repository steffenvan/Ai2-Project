<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.016990">
<note confidence="0.807974375">
BOOK REVIEWS
THE ROLE OF LANGUAGE IN PROBLEM SOLVING 2:
EDITED PROCEEDINGS OF THE JOHNS HOPKINS
UNIVERSITY APPLIED PHYSICS LABORATORY SECOND
SYMPOSIUM ON THE ROLE OF LANGUAGE IN PROBLEM
SOLVING HELD IN LAUREL, MARYLAND, 2-4 APRIL
1986
Boudreaux, J.C.; Hamill, Bruce W.; and Jernigan,
</note>
<subsectionHeader confidence="0.456558">
Robert (editors)
</subsectionHeader>
<bodyText confidence="0.909308105263158">
Amsterdam: North-Holland, 1987, xiii+471 pp
Hardbound, ISBN 0-444-70144-1, $70.00/Dfl 175.00
Reviewed by
Allen Klinger
University of California, Los Angeles
In four hundred and seventy-one useful pages, including
author and subject indices, this volume gives a good
view of the problems posed by computer scientists and
linguists in dealing with the title subject. However,
although the book is format-wise of high quality, unfor-
tunately the important word in the preceding sentence is
&amp;quot;problems&amp;quot; (i.e., not &amp;quot;solutions&amp;quot;). This multipaper
volume is the proceedings of The Johns Hopkins Uni-
versity Applied Physics Laboratory Second Symposium
on The Role of Language in Problem Solving, held April
2-4, 1986.
The preface states that the issues addressed by the
papers and panel sessions of the symposium are faced
through
</bodyText>
<listItem confidence="0.9285678">
(1) formal theoretical analysis,
(2) empirical investigation (&amp;quot;theoretically-based&amp;quot;),
(3) structured system design, and
(4) development (&amp;quot;both formal and informal applica-
tion-oriented&amp;quot;),
</listItem>
<bodyText confidence="0.990381384615384">
and that two computer programming metaphors pre-
dominate. These, &amp;quot;language&amp;quot; and &amp;quot;computer-as-tool
kit&amp;quot;, reflect the fact that items 2-4 above forced the
symposium to emphasize the &amp;quot;languages for program-
ming computers&amp;quot; aspect of &amp;quot;language in problem-
solving&amp;quot;. A realistic sense of the volume&apos;s contents is
conveyed by the two preface parenthetical quotations in
this paragraph. These items are included in this review
as examples of wordy technical distinctions that, in the
main, contribute to the systematization of what is being
done.
Four symposium themes group the papers in this
volume:
</bodyText>
<listItem confidence="0.99705925">
(1) knowledge representation,
(2) formal approaches,
(3) design issues, and
(4) programming language environments.
</listItem>
<bodyText confidence="0.999840818181818">
There are eighteen papers in all, four each in themes 1
and 4, five each in themes 2 and 3. Readers of this
journal will be interested in two of the knowledge
representation papers that take this artificial intelligence
subfield into language topics: &amp;quot;Knowledge representa-
tion for reasoning abut language&amp;quot;, by J. Neal and S.
Shapiro, on language understanding as a part of both the
task-domain analysis and the meta-language for prob-
lem-solving, and &amp;quot;Relating two knowledge bases: The
role of identity and part-whole&amp;quot;, by R. Rada, L. Darden
and J. Eng, involving the National Library of Medicine
Medical Literature Analysis and Retrieval System
(MEDLARS). Next in interest would be the papers on
formal approaches, particularly &amp;quot;Analogy in program
development&amp;quot;, by S. Dietzen and W. Scherlis, and
&amp;quot;Computational ontology&amp;quot;, by J. Boudreaux.
The five design issue papers are of greater interest to
computer scientists. They introduce subjects discussed
by the symposium as a whole (see below) and through
such papers as &amp;quot;Programming the parallel processor&amp;quot;,
by G. Lyon, that are of fundamental importance. The
products of three panels are included in the book:
</bodyText>
<listItem confidence="0.9965034">
(1) &amp;quot;Theoretical and empirical approaches&amp;quot;,
(2) &amp;quot;Applications, language, and architecture: Di-
mensions in problem solving&amp;quot;, and
(3) &amp;quot;Open questions: An agenda for language in
problem solving&amp;quot;.
</listItem>
<bodyText confidence="0.997302777777778">
Approximately fifteen percent of the text is of quite-
readable edited transcripts of the actual discussions.
The presence of question-answer transcripts from paper
discussion that constitutes about another four percent
of the text enhances the feeling of the reader of partic-
ipation in the symposium.
The material on programming language environments
concerns specialized applications (&amp;quot;Languages and
software parts for elliptic boundary-value problems&amp;quot;,
by R. Boisvert; &amp;quot;AMPLE: A programming language
environment for automated manufacturing&amp;quot;, by J. Bou-
dreaux) or topics (&amp;quot;. . . diagnostic run-time. . .&amp;quot;, and
&amp;quot;. . . conceptual bugs in novices&apos; programs: A compar-
ison of FPL and PASCAL . . .&amp;quot;) that are not of major
interest. Overall, this is an interesting and useful con-
temporary record of the work and discussions brought
together by the symposium committee, that is worth
reading.
</bodyText>
<reference confidence="0.958664">
Allen Klinger received a PhD degree from the University of Califor-
nia, Berkeley, in 1966. His research interests include computer vision,
pattern analysis and machine intelligence, and human-computer inter-
action. He is co-editor of the books Data Structures, Computer
Graphics, and Pattern Recognition and Structured Computer Vision.
Klinger&apos;s address is: Department of Computer Science, University of
California, Los Angeles, CA 90024. E-mail: klinger@cs.ucla.edu.
Computational Linguistics, Volume 14, Number 1, Winter 1988 53
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.024523">
<title confidence="0.6604712">BOOK REVIEWS ROLE OF LANGUAGE IN PROBLEM SOLVING EDITED PROCEEDINGS OF THE JOHNS HOPKINS UNIVERSITY APPLIED PHYSICS LABORATORY SECOND SYMPOSIUM ON THE ROLE OF LANGUAGE IN PROBLEM</title>
<author confidence="0.497846">HELD IN LAUREL</author>
<author confidence="0.497846">MARYLAND</author>
<date confidence="0.886227">1986</date>
<note confidence="0.767175">Boudreaux, J.C.; Hamill, Bruce W.; and Jernigan, Robert (editors) Amsterdam: North-Holland, 1987, xiii+471 pp Hardbound, ISBN 0-444-70144-1, $70.00/Dfl 175.00 Reviewed by</note>
<author confidence="0.999398">Allen Klinger</author>
<affiliation confidence="0.995549">University of California, Los Angeles</affiliation>
<abstract confidence="0.987154965116279">In four hundred and seventy-one useful pages, including author and subject indices, this volume gives a good view of the problems posed by computer scientists and linguists in dealing with the title subject. However, although the book is format-wise of high quality, unfortunately the important word in the preceding sentence is &amp;quot;problems&amp;quot; (i.e., not &amp;quot;solutions&amp;quot;). This multipaper volume is the proceedings of The Johns Hopkins University Applied Physics Laboratory Second Symposium on The Role of Language in Problem Solving, held April 2-4, 1986. The preface states that the issues addressed by the papers and panel sessions of the symposium are faced through (1) formal theoretical analysis, (2) empirical investigation (&amp;quot;theoretically-based&amp;quot;), (3) structured system design, and (4) development (&amp;quot;both formal and informal application-oriented&amp;quot;), and that two computer programming metaphors predominate. These, &amp;quot;language&amp;quot; and &amp;quot;computer-as-tool kit&amp;quot;, reflect the fact that items 2-4 above forced the symposium to emphasize the &amp;quot;languages for programming computers&amp;quot; aspect of &amp;quot;language in problemsolving&amp;quot;. A realistic sense of the volume&apos;s contents is conveyed by the two preface parenthetical quotations in this paragraph. These items are included in this review as examples of wordy technical distinctions that, in the main, contribute to the systematization of what is being done. Four symposium themes group the papers in this volume: (1) knowledge representation, (2) formal approaches, (3) design issues, and (4) programming language environments. There are eighteen papers in all, four each in themes 1 and 4, five each in themes 2 and 3. Readers of this journal will be interested in two of the knowledge representation papers that take this artificial intelligence subfield into language topics: &amp;quot;Knowledge representation for reasoning abut language&amp;quot;, by J. Neal and S. Shapiro, on language understanding as a part of both the task-domain analysis and the meta-language for problem-solving, and &amp;quot;Relating two knowledge bases: The role of identity and part-whole&amp;quot;, by R. Rada, L. Darden and J. Eng, involving the National Library of Medicine Medical Literature Analysis and Retrieval System (MEDLARS). Next in interest would be the papers on formal approaches, particularly &amp;quot;Analogy in program development&amp;quot;, by S. Dietzen and W. Scherlis, and &amp;quot;Computational ontology&amp;quot;, by J. Boudreaux. The five design issue papers are of greater interest to computer scientists. They introduce subjects discussed by the symposium as a whole (see below) and through such papers as &amp;quot;Programming the parallel processor&amp;quot;, by G. Lyon, that are of fundamental importance. The products of three panels are included in the book: (1) &amp;quot;Theoretical and empirical approaches&amp;quot;, (2) &amp;quot;Applications, language, and architecture: Dimensions in problem solving&amp;quot;, and (3) &amp;quot;Open questions: An agenda for language in problem solving&amp;quot;. Approximately fifteen percent of the text is of quitereadable edited transcripts of the actual discussions. The presence of question-answer transcripts from paper discussion that constitutes about another four percent of the text enhances the feeling of the reader of participation in the symposium. The material on programming language environments concerns specialized applications (&amp;quot;Languages and software parts for elliptic boundary-value problems&amp;quot;, by R. Boisvert; &amp;quot;AMPLE: A programming language environment for automated manufacturing&amp;quot;, by J. Boudreaux) or topics (&amp;quot;. . . diagnostic run-time. . .&amp;quot;, and &amp;quot;. . . conceptual bugs in novices&apos; programs: A comparison of FPL and PASCAL . . .&amp;quot;) that are not of major interest. Overall, this is an interesting and useful contemporary record of the work and discussions brought together by the symposium committee, that is worth reading. Allen Klinger received a PhD degree from the University of California, Berkeley, in 1966. His research interests include computer vision, pattern analysis and machine intelligence, and human-computer inter- He is co-editor of the books Structures, Computer and Pattern Recognition Computer Vision.</abstract>
<affiliation confidence="0.777471">is: Department of Computer Science, University of</affiliation>
<address confidence="0.825941">California, Los Angeles, CA 90024. E-mail: klinger@cs.ucla.edu.</address>
<intro confidence="0.512859">Computational Linguistics, Volume 14, Number 1, Winter 1988 53</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Allen Klinger</author>
</authors>
<title>received a PhD degree from the University of California, Berkeley, in 1966. His research interests include computer vision, pattern analysis and machine intelligence, and human-computer interaction.</title>
<booktitle>He is co-editor of the books Data Structures, Computer Graphics, and Pattern Recognition and Structured Computer Vision. Klinger&apos;s address is:</booktitle>
<pages>90024</pages>
<institution>Department of Computer Science, University of California,</institution>
<location>Los Angeles, CA</location>
<note>E-mail: klinger@cs.ucla.edu.</note>
<marker>Klinger, </marker>
<rawString>Allen Klinger received a PhD degree from the University of California, Berkeley, in 1966. His research interests include computer vision, pattern analysis and machine intelligence, and human-computer interaction. He is co-editor of the books Data Structures, Computer Graphics, and Pattern Recognition and Structured Computer Vision. Klinger&apos;s address is: Department of Computer Science, University of California, Los Angeles, CA 90024. E-mail: klinger@cs.ucla.edu.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Computational Linguistics</author>
</authors>
<date>1988</date>
<volume>14</volume>
<pages>53</pages>
<location>Winter</location>
<marker>Linguistics, 1988</marker>
<rawString>Computational Linguistics, Volume 14, Number 1, Winter 1988 53</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>