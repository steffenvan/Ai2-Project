<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.094964">
<title confidence="0.59926875">
Demonstration of the UAM CorpusTool for text and image annotation
Mick O’Donnell
Escuela Politécnica Superior
Universidad Autónoma de Madrid
</title>
<address confidence="0.891618">
28049, Cantoblanco, Madrid, Spain
</address>
<email confidence="0.995665">
michael.odonnell@uam.es
</email>
<sectionHeader confidence="0.998574" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999436444444444">
This paper introduced the main features of the
UAM CorpusTool, software for human and
semi-automatic annotation of text and images.
The demonstration will show how to set up an
annotation project, how to annotate text files
at multiple annotation levels, how to auto-
matically assign tags to segments matching
lexical patterns, and how to perform cross-
layer searches of the corpus.
</bodyText>
<sectionHeader confidence="0.999516" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999924447368421">
In the last 20 years, a number of tools have been
developed to facilitate the human annotation of
text. These have been necessary where software for
automatic annotation has not been available, e.g.,
for linguistic patterns which are not easily identi-
fied by machine, or for languages without suffi-
cient linguistic resources.
The vast majority of these annotation tools have
been developed for particular projects, and have
thus not been readily adaptable to different annota-
tion problems. Often, the annotation scheme has
been built into the software, or the software has
been limited in that they allow only certain types
of annotation to take place.
A small number of systems have however been
developed to be general purpose text annotation
systems, e.g., MMAX-2 (Müller and Strube 2006),
GATE (Cunningham et al 2002), WordFreak
(Morton and LaCivita 2003) and Knowtator
(Ogren 2006).
With the exception of the last of these however,
these systems are generally aimed at technically
advanced users. WordFreak, for instance, requires
writing of Java code to adapt to a different annota-
tion scheme. Users of MMAX-2 need to edit XML
by hand to provide annotation schemes. Gate al-
lows editing of annotation schemes within the tool,
but it is a very complex system, and lacks clear
documentation to help the novice user become
competent.
The UAM CorpusTool is a text annotation tool
primarily aimed at the linguist or computational
linguist who does not program, and would rather
spend their time annotating text than learning how
to use the system. The software is thus designed
from the ground up to support typical user work-
flow, and everything the user needs to perform an-
notation tasks is included within the software.
</bodyText>
<sectionHeader confidence="0.991762" genericHeader="introduction">
2 The Project Window
</sectionHeader>
<bodyText confidence="0.999920909090909">
In the majority of cases, the annotator is interested
in annotating a range of texts, not just single texts.
Additionally, in most cases annotation at multiple
linguistic levels is desired (e.g., classifying the text
as a whole, tagging sections of text by function
(e.g., abstract, introduction, etc.), tagging sen-
tences/clauses, and tagging participants in clauses.
To overcome the complexity of dealing with mul-
tiple source files annotated at multiple levels, the
main window of the CorpusTool is thus a window
for project management (see Figure 1).
</bodyText>
<page confidence="0.992926">
13
</page>
<note confidence="0.708619">
Proceedings of the ACL-08: HLT Demo Session (Companion Volume), pages 13–16,
Columbus, June 2008. c�2008 Association for Computational Linguistics
</note>
<figureCaption confidence="0.999044">
Figure 1: The Project Window of UAM CorpusTool
Figure 3: An annotation window for ‘Participant’ layer.
</figureCaption>
<figure confidence="0.989139909090909">
&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;
&lt;document&gt;
&lt;segments&gt;
&lt;segment id=&apos;1&apos; start=&apos;158&apos; end=&apos;176&apos;
features=&apos;participant;human&apos; state=&apos;active&apos;/&gt;
&lt;segment id=&apos;2&apos; start=&apos;207&apos; end=&apos;214&apos;
features=&apos;participant;organisation;company&apos;
state=&apos;active&apos;/&gt;
...
&lt;/segments&gt;
&lt;/document&gt;
</figure>
<figureCaption confidence="0.999887">
Figure 4: Annotation Storage Example
</figureCaption>
<page confidence="0.99253">
14
</page>
<bodyText confidence="0.99995525">
This window allows the user to add new annota-
tion layers to the project, and edit/extend the anno-
tation scheme for each layer (by clicking on the
“edit” button shown with each layer panel). It also
allows the user to add or delete source files to the
project, and to open a specific file for annotation at
a specific layer (each file has a button for each
layer).
</bodyText>
<sectionHeader confidence="0.968812" genericHeader="method">
3 Tag Hierarchy Editing
</sectionHeader>
<bodyText confidence="0.999732315789474">
Most of the current text annotation tools lack built-
in facilities for creating and editing the coding
scheme (the tag set). UAM CorpusTool uses a hie-
rarchally organised tag scheme, allowing cross-
classification and multiple inheritance (both dis-
junctive and conjunctive). The scheme is edited
graphically, adding, renaming, moving or deleting
features, adding new sub-distinctions, etc. See Fig-
ure 3.
An important feature of the tool is that any
change to the coding scheme is automatically
propagated throughout all files annotated at this
layer. For instance, if a feature is renamed in the
scheme editor, it is also renamed in all annotation
files.
The user can also associate a gloss with each
tag, and during annotation, the gloss associated
with each feature can be viewed to help the coder
determine which tag to assign.
</bodyText>
<figureCaption confidence="0.948968">
Figure 2: Graphical Editing of the Tag Hierarchy
</figureCaption>
<sectionHeader confidence="0.980532" genericHeader="method">
4 Annotation Windows
</sectionHeader>
<bodyText confidence="0.999357166666667">
When the user clicks on the button for a given text
file/layer, an annotation window opens (see Figure
3). This window shows the text in the top panel
(with previously identified text segments indicated
with underlining). When the user creates a new
segment (by swiping text) or selects an existing
segment, the space below the text window shows
controls to select the tags to assign to this segment.
Tags are drawn from the tag scheme for the current
layer. Since the tag hierarchy allows cross-
classification, multiple tags are assigned to the
segment. CorpusTool allows for partially overlap-
ping segments, and embedding of segments.
Annotated texts are stored using stand-off XML,
one file per source text and layer. See Figure 4 for
a sample. The software does not currently input
from or export to any of the various text encoding
standards, but will be extended to do so as it be-
comes clear which standards users want supported.
Currently the tool only supports assigning tags
to text. Annotating structural relations between text
segments (e.g., co-reference, constituency or rhe-
torical relations) is not currently supported, but is
planned for later releases.
</bodyText>
<sectionHeader confidence="0.998014" genericHeader="method">
5 Corpus Search
</sectionHeader>
<bodyText confidence="0.999709086956522">
A button on the main window opens a Corpus
Search interface, which allows users to retrieve
lists of segments matching a query. Queries can
involve multiple layers, for instance, subject
in passive-clause in english would
retrieve all NPs tagged as subject in clauses tagged
as passive-clause in texts tagged as ‘english’ (this
is thus a search over 3 annotation layers). Searches
can also retrieve segments “containing” segments.
One can also search for segments containing a
string.
Where a lexicon is provided (currently only
English), users can search for segments containing
lexical patterns, for instance, clause con-
taining ‘be% @participle’ would return
all clause segments containing any inflection of
‘be’ immediately followed by any participle verb
(i.e. most of the passive clauses). Since dictionaries
are used, the text does not need to be pre-tagged
with a POS tagger, which may be unreliable on
texts of a different nature to those on which the
tagger was trained. Results are displayed in a
KWIK table format.
</bodyText>
<sectionHeader confidence="0.98272" genericHeader="method">
6 Automating Annotation
</sectionHeader>
<bodyText confidence="0.996188857142857">
Currently, automatic segmentation into sentences
is provided. I am currently working on automatic
NP segmentation.
The search facility outlined above can also be
used for semi-automatic tagging of text. To auto-
code segments as ‘passive-clause’, one specifies a
search pattern (i.e., clause containing
</bodyText>
<figure confidence="0.9966551875">
PARTICIPANTS-
TYPE
participant
FORM
person
country
organisation ORGANISATION-
TYPE
company
government
union
other-organisation
political-party
proper
common
pronominal
</figure>
<page confidence="0.969554">
15
</page>
<bodyText confidence="0.999731428571429">
‘beo @participle’). The user is presented
with all matches, with a check-box next to each.
The user can then uncheck the hits which are false
matches, and then click on the “Store” button to
tag all checked segments with the ‘passive-clause’
feature. A reasonable number of syntactic features
can be identified in this way.
</bodyText>
<sectionHeader confidence="0.779106" genericHeader="method">
7 Statistical processing
</sectionHeader>
<bodyText confidence="0.9999378">
The tool comes with a statistical analysis interface
which allows for specified sub-sections of the cor-
pora (e.g., ‘finite-clause in english’ vs. ‘finite-
clause in spanish’) to be described or contrasted.
Statistics can be of the text itself (e.g., lexical den-
sity, pronominal usage, word and segment length,
etc.), or relate to the frequency of annotations.
These statistics can also be exported in tab-
delimited form for processing in more general sta-
tistical packages.
</bodyText>
<sectionHeader confidence="0.991848" genericHeader="method">
8 Intercoder Reliability Testing
</sectionHeader>
<bodyText confidence="0.9999534">
Where several users have annotated files at the
same layers, a separate tool is provided to compare
each annotation document, showing only the dif-
ferences between coders, and also indicating total
coder agreement. The software can also produce a
“consensus” version of the annotations, taking the
most popular coding where 3 or more coders have
coded the document. In this way, each coder can
be compared to the consensus (n comparisons),
rather than comparing the n! pairs of documents.
</bodyText>
<sectionHeader confidence="0.958486" genericHeader="method">
9 Annotating Images
</sectionHeader>
<bodyText confidence="0.999975071428571">
The tool can also be used to annotate images in-
stead of text files. In this context, one can swipe
regions of the image to create a selection, and as-
sign features to the selection. Since stand-off anno-
tation is used for both text and image, much of the
code-base is common between the two applica-
tions. The major differences are: i) a different an-
notation widget is used for text selection than for
image selection; ii) segments in text are defined by
a tuple: (startchar, endchar), while image segments
are defined by a tuple of points ( (startx,starty),
(endx,endy)), and iii) search in images is restricted
to tag searching, while text can be searched for
strings and lexical patterns.
</bodyText>
<sectionHeader confidence="0.995008" genericHeader="conclusions">
10 Conclusions
</sectionHeader>
<bodyText confidence="0.99982019047619">
UAM CorpusTool is perhaps the most user-
friendly of the annotation tools available, offering
easy installation, an intuitive interface, yet power-
ful facilities for management of multiple docu-
ments annotated at multiple levels.
The main limitation of the tool is that it cur-
rently deals only with feature tagging. Future work
will add structural tagging, including co-reference
linking, rhetorical structuring and syntactic struc-
turing.
The use of the tool is rapidly spreading: in the
first 15 months of availability, the tool has been
downloaded 1700 times, to 1100 distinct CPUs
(with only minimal advertisement). It is being used
for various text annotation projects throughout the
world, but mostly by individual linguists perform-
ing linguistic studies.
UAM CorpusTool is free, available currently for
Macintosh and Windows machines. It is not open
source at present, delivered as a standalone execu-
table. It is implemented in Python, using TKinter .
</bodyText>
<sectionHeader confidence="0.999076" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99880075">
The development of UAM CorpusTool was par-
tially funded by the Spanish Ministry of Education
and Science (MEC) under grant number
HUM2005-01728/FILO (the WOSLAC project).
</bodyText>
<sectionHeader confidence="0.99954" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999845315789473">
C. Müller, and M. Strube. 2006. Multi-Level Annotation
of Linguistic Data with MMAX2. In S. Braun, K.
Kohn, J. Mukherjee (eds.) Corpus Technology
and Language Pedagogy. New Resources, New
Tools, New Methods (English Corpus Linguis-
tics, Vol.3). Frankfurt: Peter Lang. 197-214.
H. Cunningham, D. Maynard, K. Bontcheva and V.
Tablan. 2002. GATE: A Framework and Graphi-
cal Development Environment for Robust NLP
Tools and Applications. Proceedings of the 40th
Meeting of the Association for Computational
Linguistics (ACL&apos;02). Philadelphia, July 2002.
T.S. Morton and J. LaCivita. 2003. WordFreak: An
Open Tool for Linguistic Annotation. Proceed-
ings of HLT-NAACL. 17-18.
P.V. Ogren 2006. Knowtator: a plug-in for creating
training and evaluation data sets for biomedical
natural language systems. Proceedings of the 9th
International Protégé Conference. 73–76.
</reference>
<page confidence="0.998699">
16
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.926835">
<title confidence="0.999465">Demonstration of the UAM CorpusTool for text and image annotation</title>
<author confidence="0.999871">Mick O’Donnell</author>
<affiliation confidence="0.9779295">Escuela Politécnica Superior Universidad Autónoma de Madrid</affiliation>
<address confidence="0.999105">28049, Cantoblanco, Madrid, Spain</address>
<email confidence="0.989595">michael.odonnell@uam.es</email>
<abstract confidence="0.9980796">This paper introduced the main features of the UAM CorpusTool, software for human and semi-automatic annotation of text and images. The demonstration will show how to set up an annotation project, how to annotate text files at multiple annotation levels, how to automatically assign tags to segments matching lexical patterns, and how to perform crosslayer searches of the corpus.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C Müller</author>
<author>M Strube</author>
</authors>
<title>Multi-Level Annotation of Linguistic Data with MMAX2.</title>
<date>2006</date>
<booktitle>Corpus Technology and Language Pedagogy.</booktitle>
<pages>197--214</pages>
<editor>In S. Braun, K. Kohn, J. Mukherjee (eds.)</editor>
<publisher>Peter</publisher>
<location>New Resources, New Tools, New</location>
<contexts>
<context position="1395" citStr="Müller and Strube 2006" startWordPosition="211" endWordPosition="214">n has not been available, e.g., for linguistic patterns which are not easily identified by machine, or for languages without sufficient linguistic resources. The vast majority of these annotation tools have been developed for particular projects, and have thus not been readily adaptable to different annotation problems. Often, the annotation scheme has been built into the software, or the software has been limited in that they allow only certain types of annotation to take place. A small number of systems have however been developed to be general purpose text annotation systems, e.g., MMAX-2 (Müller and Strube 2006), GATE (Cunningham et al 2002), WordFreak (Morton and LaCivita 2003) and Knowtator (Ogren 2006). With the exception of the last of these however, these systems are generally aimed at technically advanced users. WordFreak, for instance, requires writing of Java code to adapt to a different annotation scheme. Users of MMAX-2 need to edit XML by hand to provide annotation schemes. Gate allows editing of annotation schemes within the tool, but it is a very complex system, and lacks clear documentation to help the novice user become competent. The UAM CorpusTool is a text annotation tool primarily </context>
</contexts>
<marker>Müller, Strube, 2006</marker>
<rawString>C. Müller, and M. Strube. 2006. Multi-Level Annotation of Linguistic Data with MMAX2. In S. Braun, K. Kohn, J. Mukherjee (eds.) Corpus Technology and Language Pedagogy. New Resources, New Tools, New Methods (English Corpus Linguistics, Vol.3). Frankfurt: Peter Lang. 197-214.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Cunningham</author>
<author>D Maynard</author>
<author>K Bontcheva</author>
<author>V Tablan</author>
</authors>
<title>GATE: A Framework and Graphical Development Environment for Robust NLP Tools and Applications.</title>
<date>2002</date>
<booktitle>Proceedings of the 40th Meeting of the Association for Computational Linguistics (ACL&apos;02).</booktitle>
<location>Philadelphia,</location>
<contexts>
<context position="1425" citStr="Cunningham et al 2002" startWordPosition="216" endWordPosition="219"> for linguistic patterns which are not easily identified by machine, or for languages without sufficient linguistic resources. The vast majority of these annotation tools have been developed for particular projects, and have thus not been readily adaptable to different annotation problems. Often, the annotation scheme has been built into the software, or the software has been limited in that they allow only certain types of annotation to take place. A small number of systems have however been developed to be general purpose text annotation systems, e.g., MMAX-2 (Müller and Strube 2006), GATE (Cunningham et al 2002), WordFreak (Morton and LaCivita 2003) and Knowtator (Ogren 2006). With the exception of the last of these however, these systems are generally aimed at technically advanced users. WordFreak, for instance, requires writing of Java code to adapt to a different annotation scheme. Users of MMAX-2 need to edit XML by hand to provide annotation schemes. Gate allows editing of annotation schemes within the tool, but it is a very complex system, and lacks clear documentation to help the novice user become competent. The UAM CorpusTool is a text annotation tool primarily aimed at the linguist or compu</context>
</contexts>
<marker>Cunningham, Maynard, Bontcheva, Tablan, 2002</marker>
<rawString>H. Cunningham, D. Maynard, K. Bontcheva and V. Tablan. 2002. GATE: A Framework and Graphical Development Environment for Robust NLP Tools and Applications. Proceedings of the 40th Meeting of the Association for Computational Linguistics (ACL&apos;02). Philadelphia, July 2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T S Morton</author>
<author>J LaCivita</author>
</authors>
<title>WordFreak: An Open Tool for Linguistic Annotation.</title>
<date>2003</date>
<booktitle>Proceedings of HLT-NAACL.</booktitle>
<pages>17--18</pages>
<contexts>
<context position="1463" citStr="Morton and LaCivita 2003" startWordPosition="221" endWordPosition="224">not easily identified by machine, or for languages without sufficient linguistic resources. The vast majority of these annotation tools have been developed for particular projects, and have thus not been readily adaptable to different annotation problems. Often, the annotation scheme has been built into the software, or the software has been limited in that they allow only certain types of annotation to take place. A small number of systems have however been developed to be general purpose text annotation systems, e.g., MMAX-2 (Müller and Strube 2006), GATE (Cunningham et al 2002), WordFreak (Morton and LaCivita 2003) and Knowtator (Ogren 2006). With the exception of the last of these however, these systems are generally aimed at technically advanced users. WordFreak, for instance, requires writing of Java code to adapt to a different annotation scheme. Users of MMAX-2 need to edit XML by hand to provide annotation schemes. Gate allows editing of annotation schemes within the tool, but it is a very complex system, and lacks clear documentation to help the novice user become competent. The UAM CorpusTool is a text annotation tool primarily aimed at the linguist or computational linguist who does not program</context>
</contexts>
<marker>Morton, LaCivita, 2003</marker>
<rawString>T.S. Morton and J. LaCivita. 2003. WordFreak: An Open Tool for Linguistic Annotation. Proceedings of HLT-NAACL. 17-18.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P V Ogren</author>
</authors>
<title>Knowtator: a plug-in for creating training and evaluation data sets for biomedical natural language systems.</title>
<date>2006</date>
<booktitle>Proceedings of the 9th International Protégé Conference.</booktitle>
<pages>73--76</pages>
<contexts>
<context position="1490" citStr="Ogren 2006" startWordPosition="227" endWordPosition="228">languages without sufficient linguistic resources. The vast majority of these annotation tools have been developed for particular projects, and have thus not been readily adaptable to different annotation problems. Often, the annotation scheme has been built into the software, or the software has been limited in that they allow only certain types of annotation to take place. A small number of systems have however been developed to be general purpose text annotation systems, e.g., MMAX-2 (Müller and Strube 2006), GATE (Cunningham et al 2002), WordFreak (Morton and LaCivita 2003) and Knowtator (Ogren 2006). With the exception of the last of these however, these systems are generally aimed at technically advanced users. WordFreak, for instance, requires writing of Java code to adapt to a different annotation scheme. Users of MMAX-2 need to edit XML by hand to provide annotation schemes. Gate allows editing of annotation schemes within the tool, but it is a very complex system, and lacks clear documentation to help the novice user become competent. The UAM CorpusTool is a text annotation tool primarily aimed at the linguist or computational linguist who does not program, and would rather spend th</context>
</contexts>
<marker>Ogren, 2006</marker>
<rawString>P.V. Ogren 2006. Knowtator: a plug-in for creating training and evaluation data sets for biomedical natural language systems. Proceedings of the 9th International Protégé Conference. 73–76.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>