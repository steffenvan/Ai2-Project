<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.908986">
The FINITE STRING Newsletter Abstracts of Current Literature
</note>
<title confidence="0.974145333333333">
Abstracts of Current Literature
A Competence-Based Theory
of Syntactic Closure
</title>
<author confidence="0.666685">
Marilyn Ford and Joan W. Bresnan
</author>
<affiliation confidence="0.616358333333333">
Center for Cognitive Science
Massachusetts Institute of Technology
77 Massachusetts Avenue
</affiliation>
<title confidence="0.415259">
Cambridge, Massachusetts 02139
</title>
<author confidence="0.820265">
Ronald Kaplan.
</author>
<affiliation confidence="0.538027333333333">
Xerox Palo Alto Research Center
3333 Coyote Hill Road
Palo Alto, California 94304
</affiliation>
<subsubsectionHeader confidence="0.940818">
Occasional Paper No. 14, 1981, 61 pages.
</subsubsectionHeader>
<bodyText confidence="0.999912842105263">
Although a sentence may be structurally ambiguous,
it is often the case that perceivers prefer one possible
structural analysis over another. A particularly inter-
esting and important research problem in the develop-
ment of a theory of sentence perception is to explain
the structural biases shown in these ambiguous sen-
tences, since the effects observed reflect the operating
principles of the human parsing mechanism very di-
rectly. In this study, we examine syntactic bias effects
and show that they are a joint function of (i) the lin-
guistic rules which define the structures of sentences,
(ii) the predicate argument structures and grammatical
functions of lexical items, and (iii) a well-defined in-
teraction between rule-driven and data-driven analysis
procedures. The theory that is developed in this study
directly incorporates the linguistically motivated rules
of the lexical-functional grammar and so supports the
competence hypothesis in the domain of sentence
comprehension.
</bodyText>
<subsectionHeader confidence="0.5656312">
One Analyzer for Three Languages
Robert Wilensky and Michael Morgan
Electronics Research Laboratory
University of California
Berkeley, California 94720
</subsectionHeader>
<bodyText confidence="0.943763310344828">
Memorandum No. UCBIERL M81167, September 1981,
62 pages.
We have been developing a model of natural lan-
guage use. The primary point of this model is to pro-
vide a general framework in which it is possible to
conveniently express knowledge about the meaning of
a language&apos;s utterances. Programs for understanding
and producing natural language based upon this model
work by interpreting a knowledge base of such facts.
Thus, improving this knowledge base directly expands
the language processing abilities of the system without
any substantial programming effort.
We have recently tested our model by taking the
understanding component of our system, called
PHRAN (PHRasal ANalyzer), which was originally
written to understand English text, and supplying it
with knowledge bases for Spanish and Chinese. While
we had no theoretical predisposition about what com-
ponents of this system should be transferable to other
languages, we found that we were able to encode the
relevant knowledge about these languages using our
existing representational scheme. Once this was done,
PHRAN was able to understand both these languages
to a substantial extent without any modification to its
control structure. Moreover, we encountered no prob-
lems in describing or processing these languages that
would suggest serious difficulties in extending the
system&apos;s knowledge bases beyond their current capaci-
ty.
</bodyText>
<title confidence="0.219044">
NLI: A Robust Interface for Person-Machine
Communication in Natural Language
</title>
<author confidence="0.286635">
Giovanni Guida
</author>
<sectionHeader confidence="0.945853666666667" genericHeader="method">
Artificial Intelligence Project
Milan Polytechnic
Milan, ITALY
</sectionHeader>
<subsectionHeader confidence="0.5824478">
Carlo Tasso
Istituto di Matematica,
Informatica e Sistemistica
Universita di Udine CISM
Udine, ITALY
</subsectionHeader>
<subsubsectionHeader confidence="0.657093">
Internal Report 81-1, July 1981, 40 pages.
</subsubsectionHeader>
<bodyText confidence="0.972370357142857">
A novel approach to natural language understand-
ing, called goal oriented parsing, is presented. Such a
model of comprehension is embedded in the more
general framework of interpersonal communication
and is applied to the person-machine interaction task.
It is based on the claim that understanding imperative
natural language is strongly dependent both on the
goal of the speaker and on the nature of the hearer.
This assumption is proved appropriate for the design
of effective and robust natural language interfaces to
artificial systems. This approach is supported by the
development of an experimental project called NLI for
interrogating in Italian a relational data base. NLI is
to date running on a PDP 11/34 computer at the Mi-
lan Polytechnic Artificial Intelligence Project. In the
paper we illustrate the overall architecture of the sys-
tem along with the basic features of the parsing algor-
ithm. This is based on the new concept of hierarchical
parsing and is mainly directed by the semantics of the
language. The role of clarification dialog to overcome
critical situations is discussed as well. The use of goal
oriented parsing in dealing with full query text and
anaphora is also exploited. Several meaningful exam-
ples are presented. Comparisons with related work
are outlined, and promising directions deserving fur-
ther investigation are presented.
American Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982 49
The FINITE STRING Newsletter Abstracts of Current Literature
</bodyText>
<sectionHeader confidence="0.731029" genericHeader="method">
ILIAD: Interactive Language Instruction
Assistance for the Deaf
</sectionHeader>
<subsectionHeader confidence="0.983204375">
Madeleine Bates
Bolt Beranek and Newman Inc.
10 Moulton Street
Cambridge, Massachusetts 02238
Kirk Wilson
Boston University
264 Bay State Road
Boston, Massachusetts 02215
</subsectionHeader>
<bodyText confidence="0.985600575">
Report No. 4771, September 1981, 74 pages.
This report describes the syntactic, semantic and
tutorial components of the ILIAD language instruction
system and the steps that have been taken to imple-
ment ILIAD on a microcomputer. The goal of this
work has been to design and implement an English
language instruction system capable of generating a
broad range of meaningful sentences as examples or
exercises in tutorial lessons. This goal has been
reached.
The ILIAD design allows for highly interactive
tutorials in which the learner specifies the content of
each lesson; ILIAD in turn creates an individualized
lesson according to the learner&apos;s specifications. Be-
cause of the generative capability of ILIAD, the system
continues to present examples of exercises for as long
as the learner desires to study a particular grammatical
or functional aspect of language use.
The prototype computer implementation of ILIAD
has been written in InterLISP on a DEC System-20
computer at Bolt Beranek and Newman. Over the
past two years a prototype microcomputer version of
ILIAD has been designed and implemented. The mi-
crocomputer design has involved evaluation and modi-
fication of InterLISP ILIAD components for use in a
UCSD-Pascal program. The microcomputer imple-
mentation, MicroILIAD, is now a functional language
generation system with a subset of ILIAD syntactic
capabilities and a flexible system of semantic repre-
sentation. The MicroILIAD semantic system has al-
lowed for a variety of tests and subsequent improve-
ments of the original ILIAD semantics.
For two years ILIAD has been used by deaf child-
ren at the Boston School for the Deaf, by deaf child-
ren using a terminal in their homes, and by adults with
access to the Deafnet computer communication system
in the Boston area. Having deaf children and adults
use and comment on prototype versions of ILIAD has
been an important component in the design process of
the system.
</bodyText>
<subsectionHeader confidence="0.92788">
Research in Knowledge Representation for
Natural Language Understanding
</subsectionHeader>
<reference confidence="0.486581571428571">
C.L. Sidner, M. Bates, R.J. Bobrow, J. Schmolze, R.J.
Brachman, P.R. Cohen, D.J. Israel, B.L. Webber and
W.A. Woods
Bolt Beranek and Newman Inc.
10 Moulton Street
Cambridge, Massachusetts 02238
Report No. 4785, November 1981, 244 pages.
</reference>
<bodyText confidence="0.999854472222222">
BBN&apos;s ARPA project in Knowledge Representation
for Natural Language Understanding is developing
techniques for computer assistance to a decision maker
who is collecting information about and making
choices in a complex system or situation. In particu-
lar, we are designing a system with natural language
control of an intelligent graphics display of the kind
that can be used in a command and control context,
both in strategic situation assessment and in more
tactical situations. Our work falls into three classes:
fluent natural language understanding in a graphics
context (including intelligent, helpful systems that go
beyond mere passive execution of literal instructions),
fundamental problems of knowledge representation
and use, and abstract parallel algorithms for
knowledge-based inferential operations. The major
accomplishment of our work so far is the development
of the knowledge representation system KL-ONE.
In this report, we describe the research investiga-
tions we have accomplished in the three main areas we
are pursuingâ€”parallel algorithms, representation re-
search on KL-ONE, and natural language research.
Chapter 2 first updates our 1979 report by discussing
extensions and changes in the system since that time.
In Chapter 3 we present an overview of the Natural
Language system, followed by two chapters on specific
parts of that system. One chapter, on the PSI-Klone
interface, contains a discussion of changes and exten-
sions to RUS and PSI-KL-ONE. It also presents our
new work on a lexical acquisition system. The other
chapter contains a discussion of our work on issues
related to discourse, primarily research on models of
speaker meaning, on reference as a planned act and on
one-anaphora. The final chapter presents research on
the development of algorithms for abstract parallel
machines.
</bodyText>
<sectionHeader confidence="0.723699" genericHeader="method">
RLL-1: A Representation Language Language
</sectionHeader>
<subsectionHeader confidence="0.96301275">
Russell Greiner
Department of Computer Science
Stanford University
Stanford, California 94305
</subsectionHeader>
<bodyText confidence="0.957819047619048">
Report No. HPP-80-9, October 1980, 45 pages.
The field of Al is strewn with knowledge represent-
ation languages. The language designer typically de-
signs that language with one particular application
domain in mind; as subsequent types of applications
50 American Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982
The FINITE STRING Newsletter Abstracts of Current Literature
are tried, what had originally been useful features are
found to be undesirable limitations, and the language
is overhauled or scrapped. One remedy to this bleak
cycle might be to construct a representation language
whose domain is the field of representational lan-
guages itself. Toward this end, we designed and im-
plemented RLL-1, a frame-based Representation Lan-
guage Language. The components of representation
languages in general (such as slots and inheritance
mechanisms) and of RLL-1 itself, in particular, are
encoded declaratively as frames. By modifying these
frames, the user can change the semantics of RLL-1&apos;s
components, and significantly alter the overall charac-
ter of the RLL-1 environment.
</bodyText>
<subsectionHeader confidence="0.824918833333333">
RLL-1: A Representation Language Language
Supplement, Details of RLL-1
Russell Greiner and Douglas B. Lenat
Department of Computer Science
Stanford University
Stanford, California 94305
</subsectionHeader>
<bodyText confidence="0.963294333333333">
Report No. HPP-80-23, October 1980, 68 pages.
This paper includes many implementation level de-
tails about the RLL-1 system, described in a compan-
ion paper, RLL-1: A Representation Language Lan-
guage. The contents are as follows: Special Units,
Naming conventions, Legend, Actual units, Index of
units, Environment, Top level Functions, Functions
needed to Bootstrap RLL-1, Convenience Functions,
Advised Functions, and Global Variables.
</bodyText>
<subsectionHeader confidence="0.823775">
Dialogue and Process Design for Interactive
Information Systems Using TAXIS
John Barron
Department of Computer Science
University of Toronto
</subsectionHeader>
<bodyText confidence="0.890446">
Toronto, Ontario M5S 1A7 CANADA
</bodyText>
<subsectionHeader confidence="0.545893">
Technical Report CSRG-128, April 1981, 41 pages.
</subsectionHeader>
<bodyText confidence="0.9997275625">
This paper is concerned with both dialogue and
process management for interactive information sys-
tems (IISs). In particular, the paper describes an ex-
tension to TAXIS (Mylopoulos) a language for HS
design, to provide this type of management. Dialogues
between a user and the system are described through a
small set of primitives incorporated into TAXIS while
process control is accomplished by incorporating
Hoare&apos;s I/O commands for communicating sequential
processes. The overall organization and structure of
dialogue and process control for a particular IIS is
achieved using scripts, a modified version of augment-
ed Petri nets and the TAXIS conceptual framework of
properties, classes, and the IS-A relationship. A jour-
nal editing procedure is used to illustrate the proposed
extension.
</bodyText>
<table confidence="0.870463285714286">
Design and Verification of Interactive
Information Systems Using TAXIS
Harry K.T. Wong
Department of Computer Science
University of Toronto
Toronto, Ontario M5S 1A7 CANADA
Technical Report CSRG-129, April 1981, 148 pages.
</table>
<bodyText confidence="0.999935696969697">
This thesis discusses the syntax and semantics of
TAXIS, a language for the design of Interactive Infor-
mation Systems (IISs). The thesis also examines the
design and verification methodologies of programs that
TAXIS supports. TAXIS offers (relational) database
management facilities, a means of specifying semantic
integrity constraints and an exception-handling mecha-
nism, integrated into a single language through the
concepts of class, property and the IS-A
(generalization) relationship.
The formalization of TAXIS involves a denotation-
al semantics and an axiomatic semantics. The former
uses simple mathematical concepts such as sets and
functions to assign meaning to TAXIS constructs. The
latter provides an axiomatization of TAXIS in the
spirit of Hoare. The two definitions are then shown to
be consistent by proving that the denotational seman-
tics satisfies (in the logical sense) the axiomatization.
A new design methodology for IISs is also sketched
in the thesis. This methodology is based on the con-
cept of stepwise refinement through specialization.
According to this method, an IIS is first designed at a
fairly high level of abstraction which is later refined by
introducing new classes that are specializations of
existing ones. This design method is complementary
to traditional design methods which are based on the
concept of stepwise refinement through decomposi-
tion. Parallel to the design methodology, a verification
methodology of IISs is established in that the correct-
ness of an IIS is shown in a stepwise manner. Each
refinement of an IIS can be specified and proven cor-
rect by using the results of the previous refinement.
Hence, the verification process is considerably simpler.
</bodyText>
<subsectionHeader confidence="0.964077714285714">
Data Base Design for Natural
Language Medical Data
Guy Story and Lynette Hirschman
Linguistic String Project
New York University
251 Mercer Street
New York, New York 10012
</subsectionHeader>
<subsubsectionHeader confidence="0.479723">
Journal of Medical Systems 6, 1 (1982), 77-88.
</subsubsectionHeader>
<bodyText confidence="0.960858846153846">
The natural language of clinical reporting exhibits
the properties of a sublanguage, having a grammar and
vocabulary greatly restricted in comparison to the
language as a whole. This paper presents a
CODASYL-type (network) data base schema for natu-
ral language medical records based on the structures
and relationships identified in such material through
American Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982 51
The FINITE STRING Newsletter Abstracts of Current Literature
computerized language processing. While the schema
described is special to the medical sublanguage, the
methods of analysis and of schema design are applica-
ble to natural language material in other subject areas.
</bodyText>
<subsectionHeader confidence="0.729381142857143">
On beyond Cyrus: Additional Problems
Related to Long Term Memory Organization
and Retrieval
Janet L. Kolodner
School of Information and Computer Science
Georgia Institute of Technology
Atlanta, Georgia 30332
</subsectionHeader>
<bodyText confidence="0.983674384615384">
Report No. GIT-ICS-81117, December 1981, 38 pages.
In previous research the problem of organizing
events in a long term memory, and later retrieving
them based on natural language questions, was ex-
plored. The results of that research are implemented
in a computer program called CYRUS, which stores
and retrieves information about important political
dignitaries. While CYRUS provides a vehicle for dis-
covering problems of long term memory organization,
there are a number of problems important to intelli-
gent fact retrieval and long term memory which were
not addressed in that research. This report presents
CYRUS and addresses some of the problems illustrat-
ed by CYRUS, explaining for each its importance to
intelligent fact retrieval and an initial approach to
resolving it. The problems addressed are representa-
tion and organization of complex events in memory,
using knowledge acquired through previous experience
to extract implicit information from memory, keeping
track of what&apos;s in memory and where it can be found,
controlling indexing within memory structures, and
memory reorganization as a result of memory access.
Although the emphasis is on organization and retrieval
of events, principles stemming from the representa-
tions and processes used for events should be extendi-
ble to other types of items in memory.
</bodyText>
<subsectionHeader confidence="0.809587714285714">
On the Unification of Language Comprehension
with Problem Solving
Douglas Wong
Department of Computer Science
Brown University
Providence, Rhode Island 02912
Technical Report CS-78, August 1981, (Ph.D. Thesis).
</subsectionHeader>
<bodyText confidence="0.999947115384615">
Over the years it has been argued that there ought
to be an artificial intelligence system that can do both
problem solving and language comprehension using the
same database of knowledge. Such a system has not
previously been constructed because researchers in
these two areas have generally used rather different
knowledge representations: the predicate calculus for
problem solving and some frame-like representation
for language comprehension.
This dissertation describes BRUIN, a unified Al
system that can perform both problem-solving and
language comprehension tasks. Included in the system
is a frame-based knowledge-representation language
called FRAIL, a problem solving component called
NASL (which is based on McDermott&apos;s system of the
same name), and a context-recognition component
known as PRAGMATICS. Examples that have been
tested in this system are drawn from the inventory-
control, restaurant, and blocks-world domains.
The main intent of this dissertation is to describe
how context recognition can be done in a problem-
solving environment. Also discussed is the knowledge
representation language FRAIL and the relevant por-
tions of the problem solver NASL. Finally, there is a
discussion of problems with the context recognizer
PRAGMATICS and possibilities for future research.
</bodyText>
<subsectionHeader confidence="0.775797">
Passing Markers: A Theory of Contextual
Influence in Language Comprehension
Eugene Charniak
Department of Computer Science
Brown University
Providence, Rhode Island 02912
Technical Report CS-80, September 1981.
</subsectionHeader>
<bodyText confidence="0.9958303">
Most artificial intelligence theories of language
either assume a syntactic component that serves as a
&amp;quot;front end&amp;quot; for the rest of the system, or else reject
all attempts at distinguishing modules within the com-
prehension system. In this paper we will present an
alternative which, while keeping modularity, will ac-
count for several puzzles for typical &amp;quot;syntax first&amp;quot;
theories. The major addition to this theory is a
&amp;quot;marker passing&amp;quot; component, which operates in paral-
lel to the normal syntactic component.
</bodyText>
<subsectionHeader confidence="0.941404833333333">
A Common Representation for Problem-solving
and Language-Comprehension Information
Eugene Charniak
Department of Computer Science
Brown University
Providence, Rhode Island 02912
</subsectionHeader>
<bodyText confidence="0.959387692307692">
Artificial Intelligence 16, 3 (1981), 225-255.
Many in artificial intelligence have noted the com-
mon concerns of problem-solving and language-
comprehension research. Both must represent large
bodies of real-world knowledge, and both must use
such knowledge to infer new facts from old. Despite
this, the two subdisciplines have, with minor excep-
tions, kept arm&apos;s length. So, for example, many in
language comprehension have adopted some form of
&amp;quot;frame&amp;quot; representation, while problem-solving people
have tended to use predicate calculus. In this paper I
will first show that this is not merely idiosyncratic
behavior, but rather stems from the different issues
</bodyText>
<page confidence="0.65568">
52 American Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982
</page>
<note confidence="0.668424">
The FINITE STRING Newsletter Abstracts of Current Literature
</note>
<bodyText confidence="0.999917857142857">
stressed by the two areas, problem solvers being pri-
marily concerned with deep inferences in narrow do-
mains, while language comprehenders are more con-
cerned with shallow inference in broader areas. I will
then suggest a compromise position which will use
both frames and predicate calculus and then show how
this representation has features desired by both camps.
</bodyText>
<subsectionHeader confidence="0.9097968">
The Case-Slot Identity Theory
Eugene Charniak
Department of Computer Science
Brown University
Providence, Rhode Island 02912
</subsectionHeader>
<subsubsectionHeader confidence="0.629313">
Cognitive Science 5, 3 (July-September 1981), 285-292.
</subsubsectionHeader>
<bodyText confidence="0.992776473684211">
Many people have noted the similarities between
case theories in linguistics and frame representations in
artificial intelligence. In particular, the cases of a verb
seem to correspond to the slots of a frame. This has
led many people, including Fillmore and Winston, to
assert that cases and slots are one and the same. This
hypothesis has not attracted much attention, probably
because the notion of &amp;quot;slot&amp;quot; in frame representations
is so underconstrained that the theory would seem to
be content free. In this note, we wish to show that
this is not true. For one thing, the case-slot identity
theory can explain the difficulty linguists have had in
deciding how many cases there are. Furthermore, its
adoption will place certain interesting, and plausible
constraints on the frame and case theories compatible
with it.
Parsing and Comprehending with Word Experts:
A Theory and Its Realization
Steve Small and Chuck Rieger
</bodyText>
<subsectionHeader confidence="0.971734">
Department of Computer Science
University of Maryland
College Park, Maryland 20742
</subsectionHeader>
<bodyText confidence="0.992830789473684">
Report No. TR-1039, NSG-7253, April 1981.
The Word Expert Parsing theory and model are
described. In this theory, most linguistic and concep-
tual knowledge relevant to comprehension of language
is contained in modular, autonomous &amp;quot;word experts.&amp;quot;
Our theory is that language comprehension is the in-
teraction of such experts as they construct and ex-
change information in reaction to input sentences in
both discourse and real-world contexts. The Lexical
Interaction Language (LIL) and Sense Discrimination
Language (SDL), the two sets of primitives from
which the theory&apos;s model is constructed, are explained
drawing on numerous examples taken from running
examples of the parser. A full execution trace of the
sentence &amp;quot;The man eating peaches throws out a pit.&amp;quot;
concludes the discussion. Arguments are advanced
about why such a theory as this seems to be necessary,
and why it is plausible as a theory of human language
comprehension.
</bodyText>
<note confidence="0.649707">
Truth, Syntax, and Reason
D. Perlis
</note>
<affiliation confidence="0.280495333333333">
Department of Computer Science
The University of Rochester
Rochester, New York 14627
</affiliation>
<subsubsectionHeader confidence="0.289932">
Report No. TR65, June 1980, 45 pages.
</subsubsectionHeader>
<bodyText confidence="0.9994083">
A very broad formalism is developed for analysis of
natural language. Properties and symbols are viewed
as &amp;quot;real&amp;quot; entities on equal footing in a first-order log-
ic. The main difficulty addressed is self-referential
paradox. By extending and modifying the work of
Gilmore and Kripke, a provably consistent treatment is
found which appears to restore the intuitive character
of Frege&apos;s approach to propositional variables. Vari-
ous parallels are drawn to issues in artificial intelli-
gence.
</bodyText>
<subsectionHeader confidence="0.957549333333333">
Design of Lexicons in Some
Natural Language Systems
Nick Cercone and Robert Mercer
Department of Computing Studies
Simon Fraser University
Burnaby, B.C. CANADA
</subsectionHeader>
<bodyText confidence="0.982654916666667">
ALLC Journal 1, 2 (Autumn, 1980), 37-54.
An investigation of certain problems concerning the
structural design of lexicons used in computational
approaches to natural language understanding is in-
tended herewith. Three aspects of lexical design ap-
pear especially noteworthy: (1) retrieval of relevant
portions of lexical items from the lexicon: (2) the stor-
age requirements of the lexicon; and (3) the represent-
ation of meaning in the lexicon. We consider lexicons
from a variety of sources; where appropriate, explicit
comparisons are made between the lexical structures
of Cercone, Winograd, Schank, Wilks, and Woods.
</bodyText>
<subsectionHeader confidence="0.98232025">
Machine Translation in China
Liu Yong-quan
Institute of Linguistics
Chinese Academy of Social Sciences
</subsectionHeader>
<bodyText confidence="0.950125545454545">
ALLC Journal 1,2 (Autumn 1980), 60-66.
MT research in China began in 1957. Over the
years MT algorithms have been developed for transla-
tion into Chinese from English, Russian, German, and
French. Chinese MT techniques concentrate on syn-
tactic analysis, including the determination of the hier-
archical structure of the sentence and the determina-
tion of the axis in the sentence; the full use of fixed
phrases; full stress on the key significance of function
words in MT; and emphasis on formal analysis without
neglecting the function of meaning.
</bodyText>
<note confidence="0.5659405">
American Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982 53
The FINITE STRING Newsletter Abstracts of Current Literature
</note>
<subsectionHeader confidence="0.55532">
Approximate String Matching
Patrick Hall
</subsectionHeader>
<sectionHeader confidence="0.878872" genericHeader="method">
SC ICON
Consultancy International Ltd.
London, ENGLAND
</sectionHeader>
<subsectionHeader confidence="0.962250333333333">
Geoff Dowling
The City University
London, ENGLAND
</subsectionHeader>
<bodyText confidence="0.980591">
Comput. Surv. 12, 4 (December 1980), 381-402.
Approximate matching of strings is reviewed with
the aim of surveying techniques suitable for finding an
item in a database when there may be a spelling mis-
take or other error in the keyword. The methods
found are classified as either equivalence or similarity
problems. Equivalence problems are seen to be readily
solved using canonical forms. For similarity problems
difference measures are surveyed, with a full descrip-
tion of the well-established dynamic programming
method relating this to the approach using probabili-
ties and likelihoods. Searches for approximate
matches in large sets using a difference function are
seen to be an open problem still, though several prom-
ising ideas have been suggested. Approximate match-
ing (error correction) during parsing is briefly re-
viewed.
</bodyText>
<sectionHeader confidence="0.841652666666667" genericHeader="method">
Automatic Extension on an
ATN Knowledge Base
Gail E. Kaiser
</sectionHeader>
<subsectionHeader confidence="0.66765825">
Department of Computer Science
Carnegie-Mellon University
Schenley Park
Pittsburgh, Pennsylvania 15213
</subsectionHeader>
<bodyText confidence="0.962741583333333">
Comm. ACM 24, 9 (September 1981), 587-593.
A computer program is described that acquires
much of its knowledge from conversations among op-
erators on Morse code radio networks. The system
consists of a learning component and a language un-
derstander. The learning component extends a &amp;quot;core&amp;quot;
augmented transition network (ATN) knowledge base
by generalizing from sentences taken from scripts of
actual conversations. The extensions enable the un-
derstanding component to process a large number of
sentences that are syntactically and semantically simi-
lar to the examples.
</bodyText>
<reference confidence="0.956087428571428">
Computer Commands in Restricted Natural
Language: Some Aspects of Memory and
Experience
Dominique L. Scapin
Johns Hopkins University
Baltimore, Maryland
Human Factors 23, 3 (June 1981), 365-375.
</reference>
<bodyText confidence="0.999826470588235">
In this experiment, two groups of subjects having
different levels of experience with computers were
tested to compare the learning and recall of computer
command definitions that differed in context and re-
dundancy and to study the effect of context change.
The results show that inexperienced (naive) subjects
have different requirements than do more experienced
subjects. The experienced group recalls more mean-
ings than the inexperienced group but is more nega-
tively influenced by the number of competing words
(that is, different words used to label the same com-
puter function) than by contextual connotation. For
the inexperienced subjects, particularly, it appears that
computer-oriented words used as commands are better
than more usual words. Besides, inexperienced sub-
jects are more negatively influenced by context
changes than are experienced subjects.
</bodyText>
<subsectionHeader confidence="0.7167476">
User Modelling in Anaphora Generation:
Ellipsis and Definite Description
Anthony Jameson and Wolfgang Wahlster
Universitat Hamburg
Germanisches Seminar
</subsectionHeader>
<reference confidence="0.556896">
Von-Melle-Park 6
D-2000 Hamburg 13 WEST GERMANY
Report No. ANS-2, December 1981, 12 pages.
</reference>
<bodyText confidence="0.999984066666667">
This paper shows how user modelling can improve
the anaphoric utterances generated by a dialogue sys-
tem. Two kinds of anaphora are examined: ellipsis
and the anaphoric use of singular definite noun phras-
es. In connection with the generation of elliptical
utterances, an anticipation feedback loop can help to
ensure that the system&apos;s utterances are not so brief as
to be ambiguous or misleading. When generating noun
phrases to characterize specific objects with which the
user is not familiar, the system may take into account
the existential assumptions, domain-related desires,
and referential beliefs ascribed to the partner. These
applications of user modelling are illustrated as realiz-
ed in the dialogue system HAM-ANS, and some exten-
sions of the strategies described are discussed.
</bodyText>
<page confidence="0.887358">
54 American Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.99750425">The FINITE STRING Newsletter Abstracts of Current Literature Abstracts of Current Literature A Competence-Based Theory of Syntactic Closure</title>
<author confidence="0.999996">Marilyn Ford</author>
<author confidence="0.999996">Joan W Bresnan</author>
<affiliation confidence="0.9999105">Center for Cognitive Science Massachusetts Institute of Technology</affiliation>
<address confidence="0.8195105">77 Massachusetts Avenue Massachusetts</address>
<author confidence="0.98033">Ronald Kaplan</author>
<affiliation confidence="0.99686">Xerox Palo Alto Research Center</affiliation>
<address confidence="0.998012">3333 Coyote Hill Road Palo Alto, California 94304</address>
<abstract confidence="0.9970165">Occasional Paper No. 14, 1981, 61 pages. Although a sentence may be structurally ambiguous, it is often the case that perceivers prefer one possible structural analysis over another. A particularly interesting and important research problem in the development of a theory of sentence perception is to explain the structural biases shown in these ambiguous sentences, since the effects observed reflect the operating principles of the human parsing mechanism very directly. In this study, we examine syntactic bias effects and show that they are a joint function of (i) the linguistic rules which define the structures of sentences, (ii) the predicate argument structures and grammatical functions of lexical items, and (iii) a well-defined interaction between rule-driven and data-driven analysis procedures. The theory that is developed in this study directly incorporates the linguistically motivated rules of the lexical-functional grammar and so supports the competence hypothesis in the domain of sentence comprehension.</abstract>
<title confidence="0.996271">One Analyzer for Three Languages</title>
<author confidence="0.999956">Robert Wilensky</author>
<author confidence="0.999956">Michael Morgan</author>
<affiliation confidence="0.9999595">Electronics Research Laboratory University of California</affiliation>
<address confidence="0.999853">Berkeley, California 94720</address>
<pubnum confidence="0.270533">Memorandum No. UCBIERL M81167, September 1981,</pubnum>
<abstract confidence="0.999372285714286">62 pages. We have been developing a model of natural language use. The primary point of this model is to provide a general framework in which it is possible to conveniently express knowledge about the meaning of a language&apos;s utterances. Programs for understanding and producing natural language based upon this model work by interpreting a knowledge base of such facts. Thus, improving this knowledge base directly expands the language processing abilities of the system without any substantial programming effort. We have recently tested our model by taking the understanding component of our system, called PHRAN (PHRasal ANalyzer), which was originally written to understand English text, and supplying it with knowledge bases for Spanish and Chinese. While we had no theoretical predisposition about what components of this system should be transferable to other languages, we found that we were able to encode the relevant knowledge about these languages using our existing representational scheme. Once this was done, PHRAN was able to understand both these languages to a substantial extent without any modification to its control structure. Moreover, we encountered no problems in describing or processing these languages that would suggest serious difficulties in extending the system&apos;s knowledge bases beyond their current capacity.</abstract>
<title confidence="0.995853">NLI: A Robust Interface for Person-Machine Communication in Natural Language</title>
<author confidence="0.999995">Giovanni Guida</author>
<affiliation confidence="0.9365955">Artificial Intelligence Project Milan Polytechnic</affiliation>
<address confidence="0.956796">Milan, ITALY</address>
<author confidence="0.999642">Carlo Tasso</author>
<affiliation confidence="0.987258666666667">Istituto di Matematica, Informatica e Sistemistica Universita di Udine CISM</affiliation>
<address confidence="0.544735">Udine, ITALY</address>
<abstract confidence="0.997960851851852">Internal Report 81-1, July 1981, 40 pages. A novel approach to natural language understanding, called goal oriented parsing, is presented. Such a model of comprehension is embedded in the more general framework of interpersonal communication and is applied to the person-machine interaction task. It is based on the claim that understanding imperative natural language is strongly dependent both on the goal of the speaker and on the nature of the hearer. This assumption is proved appropriate for the design of effective and robust natural language interfaces to artificial systems. This approach is supported by the development of an experimental project called NLI for interrogating in Italian a relational data base. NLI is date running on a computer at the Milan Polytechnic Artificial Intelligence Project. In the paper we illustrate the overall architecture of the system along with the basic features of the parsing algorithm. This is based on the new concept of hierarchical parsing and is mainly directed by the semantics of the language. The role of clarification dialog to overcome critical situations is discussed as well. The use of goal oriented parsing in dealing with full query text and anaphora is also exploited. Several meaningful examples are presented. Comparisons with related work are outlined, and promising directions deserving further investigation are presented.</abstract>
<note confidence="0.900904">Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982</note>
<title confidence="0.992994666666667">The FINITE STRING Newsletter Abstracts of Current Literature ILIAD: Interactive Language Instruction Assistance for the Deaf</title>
<author confidence="0.993083">Madeleine Bates</author>
<affiliation confidence="0.994894">Bolt Beranek and Newman Inc.</affiliation>
<address confidence="0.999786">10 Moulton Street Cambridge, Massachusetts 02238</address>
<author confidence="0.995955">Kirk Wilson</author>
<affiliation confidence="0.999956">Boston University</affiliation>
<address confidence="0.999339">264 Bay State Road Boston, Massachusetts 02215</address>
<abstract confidence="0.9985925">Report No. 4771, September 1981, 74 pages. This report describes the syntactic, semantic and tutorial components of the ILIAD language instruction system and the steps that have been taken to implement ILIAD on a microcomputer. The goal of this work has been to design and implement an English instruction system capable of broad range of meaningful sentences as examples or exercises in tutorial lessons. This goal has been reached. The ILIAD design allows for highly interactive tutorials in which the learner specifies the content of lesson; ILIAD in turn individualized lesson according to the learner&apos;s specifications. Beof the of ILIAD, the system continues to present examples of exercises for as long as the learner desires to study a particular grammatical or functional aspect of language use. The prototype computer implementation of ILIAD has been written in InterLISP on a DEC System-20 computer at Bolt Beranek and Newman. Over the past two years a prototype microcomputer version of been designed and implemented. The microcomputer design has involved evaluation and modification of InterLISP ILIAD components for use in a UCSD-Pascal program. The microcomputer implementation, MicroILIAD, is now a functional language generation system with a subset of ILIAD syntactic capabilities and a flexible system of semantic representation. The MicroILIAD semantic system has allowed for a variety of tests and subsequent improvements of the original ILIAD semantics. For two years ILIAD has been used by deaf children at the Boston School for the Deaf, by deaf children using a terminal in their homes, and by adults with access to the Deafnet computer communication system in the Boston area. Having deaf children and adults use and comment on prototype versions of ILIAD has been an important component in the design process of the system.</abstract>
<title confidence="0.979147">Research in Knowledge Representation for Natural Language Understanding</title>
<author confidence="0.919659666666667">M Bates</author>
<author confidence="0.919659666666667">R J Bobrow</author>
<author confidence="0.919659666666667">J Schmolze</author>
<author confidence="0.919659666666667">R J Brachman</author>
<author confidence="0.919659666666667">P R Cohen</author>
<author confidence="0.919659666666667">D J Israel</author>
<author confidence="0.919659666666667">B L Webber</author>
<author confidence="0.919659666666667">W A Woods</author>
<affiliation confidence="0.996651">Bolt Beranek and Newman Inc.</affiliation>
<address confidence="0.9997445">10 Moulton Street Cambridge, Massachusetts 02238</address>
<abstract confidence="0.998639837837838">Report No. 4785, November 1981, 244 pages. BBN&apos;s ARPA project in Knowledge Representation for Natural Language Understanding is developing techniques for computer assistance to a decision maker who is collecting information about and making choices in a complex system or situation. In particular, we are designing a system with natural language control of an intelligent graphics display of the kind that can be used in a command and control context, both in strategic situation assessment and in more tactical situations. Our work falls into three classes: fluent natural language understanding in a graphics context (including intelligent, helpful systems that go beyond mere passive execution of literal instructions), fundamental problems of knowledge representation and use, and abstract parallel algorithms for knowledge-based inferential operations. The major accomplishment of our work so far is the development of the knowledge representation system KL-ONE. In this report, we describe the research investigations we have accomplished in the three main areas we are pursuingâ€”parallel algorithms, representation research on KL-ONE, and natural language research. Chapter 2 first updates our 1979 report by discussing extensions and changes in the system since that time. In Chapter 3 we present an overview of the Natural Language system, followed by two chapters on specific parts of that system. One chapter, on the PSI-Klone interface, contains a discussion of changes and extensions to RUS and PSI-KL-ONE. It also presents our new work on a lexical acquisition system. The other chapter contains a discussion of our work on issues related to discourse, primarily research on models of speaker meaning, on reference as a planned act and on one-anaphora. The final chapter presents research on the development of algorithms for abstract parallel machines.</abstract>
<title confidence="0.917369">RLL-1: A Representation Language Language</title>
<author confidence="0.999936">Russell Greiner</author>
<affiliation confidence="0.9999285">Department of Computer Science Stanford University</affiliation>
<address confidence="0.99963">Stanford, California 94305</address>
<abstract confidence="0.978081619047619">Report No. HPP-80-9, October 1980, 45 pages. The field of Al is strewn with knowledge representation languages. The language designer typically designs that language with one particular application domain in mind; as subsequent types of applications Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982 The FINITE STRING Newsletter Abstracts of Current Literature are tried, what had originally been useful features are found to be undesirable limitations, and the language is overhauled or scrapped. One remedy to this bleak cycle might be to construct a representation language whose domain is the field of representational languages itself. Toward this end, we designed and implemented RLL-1, a frame-based Representation Language Language. The components of representation languages in general (such as slots and inheritance mechanisms) and of RLL-1 itself, in particular, are encoded declaratively as frames. By modifying these frames, the user can change the semantics of RLL-1&apos;s components, and significantly alter the overall character of the RLL-1 environment.</abstract>
<title confidence="0.3976825">RLL-1: A Representation Language Language Supplement, Details of RLL-1</title>
<author confidence="0.996902">Russell Greiner</author>
<author confidence="0.996902">Douglas B Lenat</author>
<affiliation confidence="0.999929">Department of Computer Science Stanford University</affiliation>
<address confidence="0.999572">Stanford, California 94305</address>
<note confidence="0.837376777777778">Report No. HPP-80-23, October 1980, 68 pages. This paper includes many implementation level details about the RLL-1 system, described in a companion paper, RLL-1: A Representation Language Language. The contents are as follows: Special Units, Naming conventions, Legend, Actual units, Index of units, Environment, Top level Functions, Functions needed to Bootstrap RLL-1, Convenience Functions, Advised Functions, and Global Variables.</note>
<title confidence="0.981682">Dialogue and Process Design for Interactive Information Systems Using TAXIS</title>
<author confidence="0.999951">John Barron</author>
<affiliation confidence="0.9999765">Department of Computer Science University of Toronto</affiliation>
<address confidence="0.995767">Toronto, Ontario M5S 1A7 CANADA</address>
<abstract confidence="0.998635176470588">Technical Report CSRG-128, April 1981, 41 pages. This paper is concerned with both dialogue and process management for interactive information systems (IISs). In particular, the paper describes an extension to TAXIS (Mylopoulos) a language for HS design, to provide this type of management. Dialogues between a user and the system are described through a small set of primitives incorporated into TAXIS while process control is accomplished by incorporating Hoare&apos;s I/O commands for communicating sequential processes. The overall organization and structure of dialogue and process control for a particular IIS is achieved using scripts, a modified version of augmented Petri nets and the TAXIS conceptual framework of properties, classes, and the IS-A relationship. A journal editing procedure is used to illustrate the proposed extension.</abstract>
<title confidence="0.988781">Design and Verification of Interactive Information Systems Using TAXIS</title>
<author confidence="0.999984">Harry K T Wong</author>
<affiliation confidence="0.9999765">Department of Computer Science University of Toronto</affiliation>
<address confidence="0.995801">Toronto, Ontario M5S 1A7 CANADA</address>
<abstract confidence="0.995498323529412">Technical Report CSRG-129, April 1981, 148 pages. This thesis discusses the syntax and semantics of TAXIS, a language for the design of Interactive Information Systems (IISs). The thesis also examines the design and verification methodologies of programs that TAXIS supports. TAXIS offers (relational) database management facilities, a means of specifying semantic integrity constraints and an exception-handling mechanism, integrated into a single language through the concepts of class, property and the IS-A (generalization) relationship. The formalization of TAXIS involves a denotational semantics and an axiomatic semantics. The former uses simple mathematical concepts such as sets and functions to assign meaning to TAXIS constructs. The latter provides an axiomatization of TAXIS in the spirit of Hoare. The two definitions are then shown to be consistent by proving that the denotational semantics satisfies (in the logical sense) the axiomatization. A new design methodology for IISs is also sketched in the thesis. This methodology is based on the concept of stepwise refinement through specialization. According to this method, an IIS is first designed at a fairly high level of abstraction which is later refined by introducing new classes that are specializations of existing ones. This design method is complementary to traditional design methods which are based on the concept of stepwise refinement through decomposition. Parallel to the design methodology, a verification methodology of IISs is established in that the correctness of an IIS is shown in a stepwise manner. Each refinement of an IIS can be specified and proven correct by using the results of the previous refinement. Hence, the verification process is considerably simpler.</abstract>
<title confidence="0.982572">Data Base Design for Natural Language Medical Data</title>
<author confidence="0.8795965">Guy Story</author>
<author confidence="0.8795965">Lynette Hirschman Linguistic String Project</author>
<affiliation confidence="0.998547">New York University</affiliation>
<address confidence="0.9347675">251 Mercer Street New York, New York 10012</address>
<abstract confidence="0.900332785714286">Journal of Medical Systems 6, 1 (1982), 77-88. The natural language of clinical reporting exhibits the properties of a sublanguage, having a grammar and vocabulary greatly restricted in comparison to the language as a whole. This paper presents CODASYL-type (network) data base schema for natural language medical records based on the structures and relationships identified in such material through Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982 The FINITE STRING Newsletter Abstracts of Current Literature computerized language processing. While the schema described is special to the medical sublanguage, the methods of analysis and of schema design are applicable to natural language material in other subject areas.</abstract>
<title confidence="0.992009">On beyond Cyrus: Additional Problems Related to Long Term Memory Organization and Retrieval</title>
<author confidence="0.999928">Janet L Kolodner</author>
<affiliation confidence="0.9999655">School of Information and Computer Science Georgia Institute of Technology</affiliation>
<address confidence="0.999413">Atlanta, Georgia 30332</address>
<abstract confidence="0.999351538461538">Report No. GIT-ICS-81117, December 1981, 38 pages. In previous research the problem of organizing events in a long term memory, and later retrieving them based on natural language questions, was explored. The results of that research are implemented in a computer program called CYRUS, which stores and retrieves information about important political dignitaries. While CYRUS provides a vehicle for discovering problems of long term memory organization, there are a number of problems important to intelligent fact retrieval and long term memory which were not addressed in that research. This report presents CYRUS and addresses some of the problems illustrated by CYRUS, explaining for each its importance to intelligent fact retrieval and an initial approach to resolving it. The problems addressed are representation and organization of complex events in memory, using knowledge acquired through previous experience to extract implicit information from memory, keeping track of what&apos;s in memory and where it can be found, controlling indexing within memory structures, and memory reorganization as a result of memory access. Although the emphasis is on organization and retrieval of events, principles stemming from the representations and processes used for events should be extendible to other types of items in memory.</abstract>
<title confidence="0.997944">On the Unification of Language Comprehension with Problem Solving</title>
<author confidence="0.999976">Douglas Wong</author>
<affiliation confidence="0.9999525">Department of Computer Science Brown University</affiliation>
<address confidence="0.999273">Providence, Rhode Island 02912</address>
<abstract confidence="0.974691888888889">Technical Report CS-78, August 1981, (Ph.D. Thesis). Over the years it has been argued that there ought to be an artificial intelligence system that can do both problem solving and language comprehension using the same database of knowledge. Such a system has not previously been constructed because researchers in these two areas have generally used rather different knowledge representations: the predicate calculus for problem solving and some frame-like representation for language comprehension. This dissertation describes BRUIN, a unified Al system that can perform both problem-solving and language comprehension tasks. Included in the system is a frame-based knowledge-representation language called FRAIL, a problem solving component called NASL (which is based on McDermott&apos;s system of the same name), and a context-recognition component known as PRAGMATICS. Examples that have been tested in this system are drawn from the inventorycontrol, restaurant, and blocks-world domains. The main intent of this dissertation is to describe how context recognition can be done in a problemsolving environment. Also discussed is the knowledge representation language FRAIL and the relevant portions of the problem solver NASL. Finally, there is a discussion of problems with the context recognizer PRAGMATICS and possibilities for future research.</abstract>
<title confidence="0.9712985">Passing Markers: A Theory of Contextual Influence in Language Comprehension</title>
<author confidence="0.999117">Eugene Charniak</author>
<affiliation confidence="0.9999445">Department of Computer Science Brown University</affiliation>
<address confidence="0.999235">Providence, Rhode Island 02912</address>
<note confidence="0.451335">Technical Report CS-80, September 1981.</note>
<abstract confidence="0.9829812">Most artificial intelligence theories of language either assume a syntactic component that serves as a &amp;quot;front end&amp;quot; for the rest of the system, or else reject all attempts at distinguishing modules within the comprehension system. In this paper we will present an alternative which, while keeping modularity, will account for several puzzles for typical &amp;quot;syntax first&amp;quot; theories. The major addition to this theory is a &amp;quot;marker passing&amp;quot; component, which operates in parallel to the normal syntactic component.</abstract>
<title confidence="0.9934855">A Common Representation for Problem-solving and Language-Comprehension Information</title>
<author confidence="0.999657">Eugene Charniak</author>
<affiliation confidence="0.9999445">Department of Computer Science Brown University</affiliation>
<address confidence="0.998658">Providence, Rhode Island 02912</address>
<note confidence="0.640576">Artificial Intelligence 16, 3 (1981), 225-255. Many in artificial intelligence have noted the com-</note>
<abstract confidence="0.9854292">mon concerns of problem-solving and languagecomprehension research. Both must represent large bodies of real-world knowledge, and both must use such knowledge to infer new facts from old. Despite this, the two subdisciplines have, with minor exceptions, kept arm&apos;s length. So, for example, many in language comprehension have adopted some form of &amp;quot;frame&amp;quot; representation, while problem-solving people have tended to use predicate calculus. In this paper I will first show that this is not merely idiosyncratic behavior, but rather stems from the different issues Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982 The FINITE STRING Newsletter Abstracts of Current Literature stressed by the two areas, problem solvers being primarily concerned with deep inferences in narrow domains, while language comprehenders are more concerned with shallow inference in broader areas. I will then suggest a compromise position which will use both frames and predicate calculus and then show how this representation has features desired by both camps.</abstract>
<title confidence="0.973043">The Case-Slot Identity Theory</title>
<author confidence="0.99839">Eugene Charniak</author>
<affiliation confidence="0.9999445">Department of Computer Science Brown University</affiliation>
<address confidence="0.998971">Providence, Rhode Island 02912</address>
<abstract confidence="0.963561941176471">Cognitive Science 5, 3 (July-September 1981), 285-292. Many people have noted the similarities between case theories in linguistics and frame representations in artificial intelligence. In particular, the cases of a verb seem to correspond to the slots of a frame. This has led many people, including Fillmore and Winston, to assert that cases and slots are one and the same. This hypothesis has not attracted much attention, probably because the notion of &amp;quot;slot&amp;quot; in frame representations is so underconstrained that the theory would seem to be content free. In this note, we wish to show that this is not true. For one thing, the case-slot identity theory can explain the difficulty linguists have had in deciding how many cases there are. Furthermore, its adoption will place certain interesting, and plausible constraints on the frame and case theories compatible with it.</abstract>
<title confidence="0.99952">Parsing and Comprehending with Word Experts: A Theory and Its Realization</title>
<author confidence="0.999972">Steve Small</author>
<author confidence="0.999972">Chuck Rieger</author>
<affiliation confidence="0.9999815">Department of Computer Science University of Maryland</affiliation>
<address confidence="0.995247">College Park, Maryland 20742</address>
<note confidence="0.56386">Report No. TR-1039, NSG-7253, April 1981.</note>
<title confidence="0.421413">The Word Expert Parsing theory and model are</title>
<abstract confidence="0.996197588235294">described. In this theory, most linguistic and conceptual knowledge relevant to comprehension of language is contained in modular, autonomous &amp;quot;word experts.&amp;quot; Our theory is that language comprehension is the interaction of such experts as they construct and exchange information in reaction to input sentences in both discourse and real-world contexts. The Lexical Language Sense Discrimination Language (SDL), the two sets of primitives from which the theory&apos;s model is constructed, are explained drawing on numerous examples taken from running examples of the parser. A full execution trace of the sentence &amp;quot;The man eating peaches throws out a pit.&amp;quot; concludes the discussion. Arguments are advanced about why such a theory as this seems to be necessary, and why it is plausible as a theory of human language comprehension.</abstract>
<keyword confidence="0.488299">Truth, Syntax, and Reason</keyword>
<affiliation confidence="0.9994345">Department of Computer Science The University of Rochester</affiliation>
<address confidence="0.999101">Rochester, New York 14627</address>
<abstract confidence="0.99133">Report No. TR65, June 1980, 45 pages. A very broad formalism is developed for analysis of natural language. Properties and symbols are viewed as &amp;quot;real&amp;quot; entities on equal footing in a first-order logic. The main difficulty addressed is self-referential paradox. By extending and modifying the work of Gilmore and Kripke, a provably consistent treatment is found which appears to restore the intuitive character of Frege&apos;s approach to propositional variables. Various parallels are drawn to issues in artificial intelligence.</abstract>
<title confidence="0.9950145">Design of Lexicons in Some Natural Language Systems</title>
<author confidence="0.999979">Nick Cercone</author>
<author confidence="0.999979">Robert Mercer</author>
<affiliation confidence="0.9951885">Department of Computing Studies Simon Fraser University</affiliation>
<address confidence="0.979364">Burnaby, B.C. CANADA</address>
<abstract confidence="0.97073225">ALLC Journal 1, 2 (Autumn, 1980), 37-54. An investigation of certain problems concerning the structural design of lexicons used in computational approaches to natural language understanding is intended herewith. Three aspects of lexical design appear especially noteworthy: (1) retrieval of relevant portions of lexical items from the lexicon: (2) the storage requirements of the lexicon; and (3) the representation of meaning in the lexicon. We consider lexicons from a variety of sources; where appropriate, explicit comparisons are made between the lexical structures of Cercone, Winograd, Schank, Wilks, and Woods.</abstract>
<title confidence="0.901686">Machine Translation in China</title>
<author confidence="0.964504">Liu Yong-quan</author>
<affiliation confidence="0.834454">Institute of Linguistics</affiliation>
<note confidence="0.682491">Chinese Academy of Social Sciences ALLC Journal 1,2 (Autumn 1980), 60-66. MT research in China began in 1957. Over the</note>
<abstract confidence="0.991268222222222">years MT algorithms have been developed for translation into Chinese from English, Russian, German, and French. Chinese MT techniques concentrate on syntactic analysis, including the determination of the hierarchical structure of the sentence and the determination of the axis in the sentence; the full use of fixed phrases; full stress on the key significance of function words in MT; and emphasis on formal analysis without neglecting the function of meaning.</abstract>
<note confidence="0.917244">Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982</note>
<title confidence="0.991672">The FINITE STRING Newsletter Abstracts of Current Literature Approximate String Matching</title>
<author confidence="0.993872">Patrick Hall</author>
<affiliation confidence="0.9978005">SC ICON Consultancy International Ltd.</affiliation>
<address confidence="0.976124">London, ENGLAND</address>
<author confidence="0.996087">Geoff Dowling</author>
<affiliation confidence="0.999926">The City University</affiliation>
<address confidence="0.99505">London, ENGLAND</address>
<abstract confidence="0.975154117647059">Comput. Surv. 12, 4 (December 1980), 381-402. Approximate matching of strings is reviewed with the aim of surveying techniques suitable for finding an item in a database when there may be a spelling mistake or other error in the keyword. The methods found are classified as either equivalence or similarity problems. Equivalence problems are seen to be readily solved using canonical forms. For similarity problems difference measures are surveyed, with a full description of the well-established dynamic programming relating this to the approach using probabilities and likelihoods. Searches for matches in large sets using a difference function are seen to be an open problem still, though several promising ideas have been suggested. Approximate matching (error correction) during parsing is briefly reviewed.</abstract>
<title confidence="0.8571465">Automatic Extension on an ATN Knowledge Base</title>
<author confidence="0.99999">Gail E Kaiser</author>
<affiliation confidence="0.999858">Department of Computer Science Carnegie-Mellon University</affiliation>
<address confidence="0.8896945">Schenley Park Pittsburgh, Pennsylvania 15213</address>
<note confidence="0.8634695">Comm. ACM 24, 9 (September 1981), 587-593. A computer program is described that acquires</note>
<abstract confidence="0.9991029">much of its knowledge from conversations among operators on Morse code radio networks. The system consists of a learning component and a language understander. The learning component extends a &amp;quot;core&amp;quot; augmented transition network (ATN) knowledge base by generalizing from sentences taken from scripts of actual conversations. The extensions enable the understanding component to process a large number of sentences that are syntactically and semantically similar to the examples.</abstract>
<title confidence="0.906456333333333">Computer Commands in Restricted Natural Language: Some Aspects of Memory and Experience</title>
<author confidence="0.999956">Dominique L Scapin</author>
<affiliation confidence="0.999764">Johns Hopkins University</affiliation>
<address confidence="0.997279">Baltimore, Maryland</address>
<abstract confidence="0.986350722222222">Human Factors 23, 3 (June 1981), 365-375. In this experiment, two groups of subjects having different levels of experience with computers were tested to compare the learning and recall of computer command definitions that differed in context and redundancy and to study the effect of context change. The results show that inexperienced (naive) subjects have different requirements than do more experienced subjects. The experienced group recalls more meanings than the inexperienced group but is more negatively influenced by the number of competing words (that is, different words used to label the same computer function) than by contextual connotation. For the inexperienced subjects, particularly, it appears that computer-oriented words used as commands are better than more usual words. Besides, inexperienced subjects are more negatively influenced by context changes than are experienced subjects.</abstract>
<title confidence="0.986552">User Modelling in Anaphora Generation: Ellipsis and Definite Description</title>
<author confidence="0.998501">Anthony Jameson</author>
<author confidence="0.998501">Wolfgang Wahlster</author>
<affiliation confidence="0.776782">Universitat Hamburg Germanisches Seminar</affiliation>
<address confidence="0.916461">Von-Melle-Park 6 D-2000 Hamburg 13 WEST GERMANY</address>
<abstract confidence="0.99906775">Report No. ANS-2, December 1981, 12 pages. This paper shows how user modelling can improve the anaphoric utterances generated by a dialogue system. Two kinds of anaphora are examined: ellipsis and the anaphoric use of singular definite noun phrases. In connection with the generation of elliptical utterances, an anticipation feedback loop can help to ensure that the system&apos;s utterances are not so brief as to be ambiguous or misleading. When generating noun phrases to characterize specific objects with which the user is not familiar, the system may take into account the existential assumptions, domain-related desires, and referential beliefs ascribed to the partner. These applications of user modelling are illustrated as realized in the dialogue system HAM-ANS, and some extensions of the strategies described are discussed.</abstract>
<note confidence="0.729213">Journal of Computational Linguistics, Volume 8, Number 1, January-March 1982</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>C L Sidner</author>
<author>M Bates</author>
<author>R J Bobrow</author>
<author>J Schmolze</author>
<author>R J Brachman</author>
<author>P R Cohen</author>
<author>D J Israel</author>
<author>B L Webber</author>
<author>W A</author>
</authors>
<publisher>Woods</publisher>
<marker>Sidner, Bates, Bobrow, Schmolze, Brachman, Cohen, Israel, Webber, A, </marker>
<rawString>C.L. Sidner, M. Bates, R.J. Bobrow, J. Schmolze, R.J. Brachman, P.R. Cohen, D.J. Israel, B.L. Webber and W.A. Woods</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bolt Beranek</author>
<author>Newman Inc</author>
</authors>
<date>0223</date>
<volume>10</volume>
<location>Moulton Street Cambridge, Massachusetts</location>
<marker>Beranek, Inc, 0223</marker>
<rawString>Bolt Beranek and Newman Inc. 10 Moulton Street Cambridge, Massachusetts 02238</rawString>
</citation>
<citation valid="true">
<authors>
<author>Report No</author>
</authors>
<date>1981</date>
<journal>Computer Commands in Restricted Natural Language: Some Aspects of Memory and Experience</journal>
<tech>4785,</tech>
<pages>244</pages>
<marker>No, 1981</marker>
<rawString>Report No. 4785, November 1981, 244 pages. Computer Commands in Restricted Natural Language: Some Aspects of Memory and Experience</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Dominique</author>
</authors>
<title>Scapin Johns Hopkins University Baltimore,</title>
<date>1981</date>
<journal>Maryland Human Factors</journal>
<volume>23</volume>
<pages>365--375</pages>
<marker>Dominique, 1981</marker>
<rawString>Dominique L. Scapin Johns Hopkins University Baltimore, Maryland Human Factors 23, 3 (June 1981), 365-375.</rawString>
</citation>
<citation valid="false">
<booktitle>Von-Melle-Park 6 D-2000 Hamburg 13</booktitle>
<publisher>WEST GERMANY</publisher>
<marker></marker>
<rawString>Von-Melle-Park 6 D-2000 Hamburg 13 WEST GERMANY</rawString>
</citation>
<citation valid="true">
<authors>
<author>Report No</author>
</authors>
<date>1981</date>
<tech>ANS-2,</tech>
<volume>12</volume>
<pages>pages.</pages>
<marker>No, 1981</marker>
<rawString>Report No. ANS-2, December 1981, 12 pages.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>