<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000129">
<sectionHeader confidence="0.6099" genericHeader="method">
BOOK REVIEWS
AN INTRODUCTION TO FORMAL LANGUAGE THEORY
</sectionHeader>
<bodyText confidence="0.417912">
Robert N. Moll, Michael A. Arbib, and A. J. Kfoury
with contributions by James Pustejovsky
</bodyText>
<affiliation confidence="0.906418">
(University of Massachusetts, Amherst; University of
Southern California; Boston University; Brandeis
</affiliation>
<figure confidence="0.256270333333333">
University)
New York, NY: Springer-Verlag, 1988, x + 203 pp.
ISBN 0-387-96698-6 and 3-540-96698-6, $39.90
Hardbound
Reviewed by
Geoffrey K. Pullum
</figure>
<affiliation confidence="0.924547">
University of California, Santa Cruz
</affiliation>
<bodyText confidence="0.994376829545455">
This book announces itself in its preface (p. vii) as &amp;quot;the
first textbook to combine the topics of formal language
theory traditionally taught in the context of program-
ming languages with an introduction to issues in com-
putational linguistics&amp;quot;. This is an interesting idea; inter-
esting enough to have made me turn to the book with
some anticipation; but I was disappointed. The natural
language material (virtually all syntax) is segregated in
the last two chapters (52 pp.), drafted by James Puste-
jovsky (henceforth P). Moll, Arbib, and Kfoury (hence-
forth MAK) offer in the first seven chapters (143 pp.) a
standard (and quite brief) introduction to formal lan-
guage theory with no natural language perspective at all
(except for a brief and slightly confusing illustration of
the phrase structures for two English sentences on
pages 20-21).
The main problem with the book is that P&apos;s two
chapters reflect little of the formal rigor for which the
first seven chapters have laid the groundwork. It is hard
to believe MAK worked over P&apos;s chapters with a critical
eye. By the standards of the material in the first seven
chapters, the last two are vague at best, and frequently
confusing or even confused.
The two sections of the book have entirely different
philosophies even in bibliographical policy. Neither
section gets it quite right. MAK adopt school textbook
style, avoiding literature citations. They mention about
a dozen standard names (in order of appearance: Chom-
sky, Backus, Naur, DeMorgan, Kleene, Cocke,
Kasami, Younger, Earley, Turing, Church, Cantor,
Godel, and Post), but they cite no specific literature
except for five introductory books (Aho and Ullmann&apos;s
The theory of parsing, translation, and compiling, Min-
sky&apos;s Computation: Finite and infinite machines, and
three books of their own). I think this is inappropriate in
a university-level textbook; students should be given
directions to at least some of the more important
primary literature in computer science journals. P&apos;s two
chapters, on the other hand, have their own list of
references, more like a linguistics article; but this list
includes several works with scant formal content that
will mean little to the student of computer science.
MAK&apos;s treatment of the standard topics in formal
language theory is clear and effective. Their presenta-
tions of proofs and introductions of new concepts
frequently have an appealing freshness and directness.
They cover a good selection of the most central topics in
formal language theory: context-free (CF) and context-
sensitive grammars and languages, the Chomsky hier-
archy, closure properties of languages, regular expres-
sions and finite-state languages, pushdown automata
and their equivalence to CF grammars, normal forms
for CF grammars, the CKY and Earley algorithms,
Turing machines, linear bounded automata, halting and
undecidability, and parsing, including top-down parsing
(with LL grammars) and bottom-up parsing (with LR
grammars). They also have a chapter on the algebraic
approach more favored by European theoretical com-
puter scientists: fixed-point principles, representing CF
grammars by equations, and so on.
P&apos;s two chapters attempt to cover the aims of linguis-
tic theory (generative grammar), generative capacity as
applied to natural language grammars (a section that P
calls &amp;quot;The generative power of natural languages&amp;quot;, a
mistaken turn of phrase, since languages do not gener-
ate anything), ATNs, lexicalism and X-bar theory,
generalized phrase structure grammar (a section riddled
with misstatements), and government and binding the-
ory (GB). The lack of rigor is unmistakable throughout.
On page 9, in MAK&apos;s section, the distinction be-
tween a node and its label is clear (&amp;quot;Every node that is
not a leaf is labeled with a variable&amp;quot;), but on pages
177-178, P confuses nodes with their labels (&amp;quot;the node
N&amp;quot;; &amp;quot;the number of &apos;bars&apos; associated with a node&amp;quot;). On
page 178, P refers to &amp;quot;having n bars&amp;quot; as an equivalence
relation (he may mean &amp;quot;has the same number of bars
as&amp;quot;). After presenting on page 80 the X-bar rule
Spec N
on page 180, P tells the reader, gratuitously and baf-
flingly:
Although the notation may be new, the structures
here are familiar. The rule for SI, for example, is a
slightly different version of the following NP rule.
NP Det A N PP
But in fact the structures induced by these rules are
strikingly different, as the reader who had understood
even the first ten pages of this book could not fail to see.
What is more, vital issues in syntax and semantics have
</bodyText>
<page confidence="0.828848">
262 Computational Linguistics, Volume 15, Number 4, December 1989
</page>
<note confidence="0.501738">
Book Reviews Attribute-Value Logic and the Theory of Grammar
</note>
<bodyText confidence="0.999111837837838">
been held to hinge on whether the X-bar structure
(corresponding to NP --&gt; Det Nom rather than NP --&gt;
Det A N PP) is correct in the constituent structure claims
it makes. P also states that the categories N, V, A,
and P &amp;quot;correspond to words that are two-place predi-
cates&amp;quot; (p. 178), which cannot be right, since one-place
verbs like_elapse and three-place verbs like give also
appear in V constituents.
The language of P&apos;s chapters is full of impressionistic
turns of phrase; &amp;quot;we can think of X as &amp;quot;X acts as
Y&amp;quot;, and &amp;quot;X functions as y- occur frequently. Differen-
tiating GB from transformational grammar, P asserts:
&amp;quot;In GB, the logical form (or semantics) of a sentence is
considered to be just as important as the surface struc-
ture of a sentence (the words that we actually hear)&amp;quot; (p.
188). This appears to suggest that a crucial difference
between GB and transformational grammar lies in a
value judgment, namely how &amp;quot;important&amp;quot; logical form
is held to be. It also manages to confuse logical form
(which is syntactic) with semantics, s-structure with PF,
and sentences with utterances.
Yet these distinctions are highly germane to the
material discussed. For example, if surface structure
contains &amp;quot;the words that we actually hear&amp;quot;, it is not
clear that there is any coherent interpretation of P&apos;s long
excursus (pp. 155-159) on that old chestnut of theoret-
ical syntax, the putative blocking of the rule
want to ---&gt; wanna
by wh-movement traces. P relies on a distinction be-
tween two kinds of empty string: e &amp;quot;is an empty
category, in the sense that we can&apos;t hear it spoken&amp;quot; (p.
157), but it is not the empty string A introduced by MAK
on page 3, because, crucially, A e (p. 158). The
perceptive student will ask what the formal distinction
is between [NPA] and [Npe], and will find no answer.
(Linguistically, there is published evidence that the
explanation P seeks to present is not adequate anyway;
see Postal and Pullum (1982).)
On page 195, P talks of &amp;quot;a notion of &apos;closeness&apos; based
not on distance in a contiguous string, but on the
nearness in a tree&amp;quot;. He then offers this definition of
such a &amp;quot;closeness&amp;quot; relation:
C-command: Node a c-commands node 0 if the first
branching node dominating a also dominates 13.
This is extraordinarily vague for a definition in a text-
book on formal language theory. The if should be iff;
first is not defined; branching node is not defined;
dominates is not defined (or used anywhere else in the
book, as far as I could determine: typically, P has not
checked whether MAK use the notion of a dominance
relation when talking about trees); and it is not made
clear whether a and 0 have to be distinct nodes, or
whether one can dominate the other. In addition, the
reference to &amp;quot;closeness&amp;quot; remains obscure: there is no
limit to how far a c-commanding node may be from a
c-commanded node, either in paths through the tree or
symbols in the string (a may be indefinitely far down a
chain of unit productions, and p may be embedded
anywhere in an arbitrarily complex structure). What-
ever else c-command may be useful for, it does not
guarantee &amp;quot;closeness&amp;quot; between a and p.
The foregoing are just a few of a very large number of
examples that could be cited of inadequacies in the
natural language portion of this book. The casual expo-
sition of basic natural language syntax presented in the
last two chapters ill befits a text on how to study
languages and grammars with mathematical precision.
It is vital for the future of computational linguistics
that linguists&apos; study of languages and grammars should
not remain at this level of informality and confusion. We
need a textbook that deals with the grammars and
properties of natural languages and programming lan-
guages with equal seriousness. This one does not satisfy
that description.
</bodyText>
<sectionHeader confidence="0.970699" genericHeader="method">
REFERENCE
</sectionHeader>
<bodyText confidence="0.55938">
Postal, P.M. and Pullum, G.K. 1982 The Contraction Debate. Lin-
guistic Inquiry, 13:1, 122-138.
Geoffrey K. Pullum is a professor of linguistics at the Univer-
sity of California, Santa Cruz, where he is also Dean of
Graduate Studies and Research. He holds a doctorate from
the University of London in general linguistics. His recent
research has been in the theory of natural language syntax and
in mathematical aspects of theoretical and computational
linguistics. Pullum&apos;s address is: Cowell College, UCSC, Santa
Cruz, CA 95064. E-mail: gkp@ling.ucsc.edu.
</bodyText>
<sectionHeader confidence="0.953609" genericHeader="method">
ATTRIBUTE-VALUE LOGIC AND THE
THEORY OF GRAMMAR
</sectionHeader>
<reference confidence="0.841289">
Mark Johnson
(Brown University, Providence RI)
Stanford, CA: Center for the Study of Language and
Information, 1988, xi + 162 pp. (CSLI lecture notes
16)
(Distributed by the University of Chicago Press)
ISBN 0-937073-37-7, $37.50 (hb)
ISBN 0-937073-36-9, $15.95 (sb)
Reviewed by
Robert Kuhns
Arthur D. Little, Inc.
</reference>
<bodyText confidence="0.9309603">
In Attribute-Value Logic and the Theory of Grammar,
Mark Johnson has written an important work in the area
of formal syntax. Johnson&apos;s underlying thesis that at-
tribute-value—based grammars can be viewed as sys-
tems of logic permits a detailed analysis of their formal,
computational, and linguistic properties. Although this
book does not propose a specific linguistic theory, it
does have direct implications for research into attribute-
value grammars, which represent a major trend in
contemporary grammatical theory.
</bodyText>
<page confidence="0.28615">
Computational Linguistics, Volume 15, Number 4, December 1989 263
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.562596">
<title confidence="0.562596">BOOK REVIEWS</title>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<institution>Mark Johnson (Brown University,</institution>
<location>Providence RI</location>
<marker></marker>
<rawString>Mark Johnson (Brown University, Providence RI)</rawString>
</citation>
<citation valid="true">
<authors>
<author>CA Stanford</author>
</authors>
<title>Center for the Study of Language and Information,</title>
<date>1988</date>
<journal>xi +</journal>
<volume>162</volume>
<pages>pp.</pages>
<marker>Stanford, 1988</marker>
<rawString>Stanford, CA: Center for the Study of Language and Information, 1988, xi + 162 pp. (CSLI lecture notes 16)</rawString>
</citation>
<citation valid="false">
<title>(Distributed by the University of Chicago Press) ISBN 0-937073-37-7, $37.50 (hb) ISBN 0-937073-36-9, $15.95 (sb) Reviewed by Robert Kuhns</title>
<marker></marker>
<rawString>(Distributed by the University of Chicago Press) ISBN 0-937073-37-7, $37.50 (hb) ISBN 0-937073-36-9, $15.95 (sb) Reviewed by Robert Kuhns</rawString>
</citation>
<citation valid="false">
<authors>
<author>Arthur D Little</author>
</authors>
<publisher>Inc.</publisher>
<marker>Little, </marker>
<rawString>Arthur D. Little, Inc.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>