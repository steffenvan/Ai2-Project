<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.004416">
<title confidence="0.959822">
ProLiV - a Tool for Teaching by Viewing Computational Linguistics
</title>
<author confidence="0.788188">
Monica Gavrila
</author>
<bodyText confidence="0.862100888888889">
Hamburg University, NATS
Vogt-K¨olln Str 30, 20251, Germany
gavrila@informatik.
uni-hamburg.de
Cristina Vertan
Hamburg University, NATS
Vogt-K¨olln Str 30, 20251, Germany
vertan@informatik.
uni-hamburg.de
</bodyText>
<sectionHeader confidence="0.961896" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.963317888888889">
ProLiV - Animated Process-modeler of
Complex (Computational) Linguistic
Methods and Theories - is a fully modular,
flexible, XML-based stand-alone Java
application, used for computer-assisted
learning in Natural Language Processing
(NLP) or Computational Linguistics (CL).
Having a flexible and extendible architec-
ture, the system presents the students, by
means of text, of visual elements (such as
pictures and animations) and of interactive
parameter set-up, the following topics:
Latent Semantics Analysis (LSA), (com-
putational) lexicons, question modeling,
Hidden-Markov-Models (HMM), and
Topic-Focus. These topics are addressed
to first-year students in computer science
and/or linguistics.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998660210526315">
The role of multimedia in teaching Natural
Language Processing (NLP) is demonstrated
by constant development of software packages
such as GATE (http://gate.ac.uk) and
NLTK (http://nltk.sourceforge.net/
index.html). Detailed information about vi-
sual tools for NLP, in particular about GATE, is
to be found in (Gaizauskas et al, 2001).
ProLiV is a Java application framework, devel-
oped in a three-year project (2005-2008) at the
University of Hamburg. It helps first-year stu-
dents to understand and learn, in an easier man-
ner, either complex linguistic theories used in NLP
(e.g. question modeling) or statistical approaches
for computational linguistics (e.g. LSA, HMM).
The learning process is supported by modules
integrating text, visual and interactive elements. In
its first released version, ProLiV contains the fol-
lowing modules:
</bodyText>
<listItem confidence="0.99955375">
• the Latent Semantic Analysis (LSA) module
and the computational lexicons module - for
linguists,
• the question modeling module - for computer
scientists,
• the Hidden-Markov-Models (HMM) module
and Topic-Focus module - for both computer
scientists and linguists.
</listItem>
<sectionHeader confidence="0.955042" genericHeader="introduction">
2 The Learning Path
</sectionHeader>
<bodyText confidence="0.997662454545454">
For each module, the learning path is guided by
lessons, a terminology dictionary and interactive
activities. Exercises and small tests can also be
integrated.
The lessons include text, pictures and ani-
mations. Hyperlinks between lessons ensure a
concept-oriented navigation through the learning
content. Additionally key terms within the content
are linked with dictionary entries.
Three central issues guided the development of
the ProLiV software:
</bodyText>
<listItem confidence="0.910988555555556">
1. choosing the most adequate means (text / pic-
ture / animation) to represent lessons content,
2. designing the layout (quantity and size of
text, colors) in order to increase the learning
success,
3. in case of the animations, defining its com-
ponents and parameters (speed, animation
steps, and graphical elements) to maximize
their impact on users.
</listItem>
<bodyText confidence="0.853552428571429">
Regarding the second issue above-mentioned,
the layout of the modules follows part of the
guidelines found in (Orr et al., 1994) and (Thi-
bodeau, 1997).
Considering the current multimedia develop-
ment, the trend is using animations to improve the
learning process. Animations are assumed to be
</bodyText>
<page confidence="0.993061">
13
</page>
<note confidence="0.9414685">
Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 13–16,
Suntec, Singapore, 3 August 2009. c�2009 ACL and AFNLP
</note>
<bodyText confidence="0.999971043478261">
a promising educational tool, although their effi-
ciency is not fully proved. Researchers, such as
(Morrison, 2000), showed that animations can
convey more information and be helpful when
showing details in intermediate steps of a process,
but when building an animation it is very impor-
tant to consider the background of the student (e.g.
linguistics, natural sciences) and his/her psycho-
logical functioning. The educational effectiveness
of the animations depends on how they interact
with the learner. Depending on the student’s back-
ground, in order to have a helpful material, one
has to carefully decide what information the ani-
mation contains. As our experiment showed (see
Section 2.1), depending on the student and his/her
background, an animation can improve the learn-
ing process, or bring nothing to it. We found no
cases when the animation slowed down the learn-
ing process.
The system was experimentally used in semi-
nars at the University of Hamburg. Part of the
lessons content was adapted following the user’s
feedback.
</bodyText>
<subsectionHeader confidence="0.997744">
2.1 Animations in ProLiV
</subsectionHeader>
<bodyText confidence="0.999733346153846">
Animations are not integrated in all modules of
the ProLiV system, but only in the LSA, computa-
tional lexicons and question modeling modules.
In order to decide how to organize the informa-
tion in an animation, we evaluated the animations
for the matrix multiplication in the LSA module
by asking 11 high-school pupils (between 16 and
19 years old) to choose between the several repre-
sentations.
We showed the pupils three animations that de-
scribe the multiplication of matrices, a static pic-
ture and the text representation of the definition.
The animations differ in the way the process is
presented (abstract vs. concrete) and in user in-
teraction authorization.
The pupils were asked to evaluate all the rep-
resentations. The question they had to answer
was: ”Which of the following representations
helps more, when learning about matrix multipli-
cation?”. The scale given was from 1 = very help-
ful to 5 = not helpful at all.
Analyzing the results, we could not conclude
that one representation is a ”real winner’. The
best representation was considered the most flex-
ible animation, that allows the student go back-
wards and forwards whenever the user needs it,
</bodyText>
<table confidence="0.999483333333333">
Representation Average Result
Definition (formula) 3.5
Picture 2.91
Animation 1 3.64
Animation 2 2.09
Animation 3 2.45
</table>
<tableCaption confidence="0.845085333333333">
Table 1: Evaluation of the animations in the ma-
trix multiplication (Animations 1 and 3 have no
user interaction; Animations 1 and 2 are more ab-
stract)
the learning process being adapted to the user’s
rhythm. All the evaluation results can be seen in
Table 1. In order to better see the influence of these
representations in the learning process, statistical
tests should be run.
</tableCaption>
<sectionHeader confidence="0.983115" genericHeader="method">
3 System Architecture
</sectionHeader>
<bodyText confidence="0.996845">
In Figure 1 we present the ProLiV System archi-
tecture, consisting of:
</bodyText>
<listItem confidence="0.999493">
• a file repository (lessons, dictionary, tests,
and exercises),
• a tool repository,
• an aggregating module combining elements
from file and tool repository (Main Unit),
• the graphical user interface (G.U.I.)
</listItem>
<bodyText confidence="0.995011833333333">
For each topic a stand-alone module is con-
nected with the G.U.I module via the Main Unit.
Modules related to new topics can be inserted any
time with no particular changes of the system.
The ProLiV architecture follows the guideline
considerations found in (Galitz, 1997).
</bodyText>
<figureCaption confidence="0.999275">
Figure 1: The ProLiV Architecture
</figureCaption>
<page confidence="0.993859">
14
</page>
<bodyText confidence="0.9994010625">
The flexibility of the system is also given by the
fact that the G.U.I.1 is generated according to an
XML2 description, developed within the project
(see DTD Description).
The XML description contains the information
in the lessons (definitions, theory, examples, etc.)
and the G.U.I. specifications (colors, fonts, links,
arrangement in the interface, etc.). Having an
XML file as input, the system generates automat-
ically the G.U.I. presented to the student. The in-
formation shown to the user can be extended or
modified with almost no implementation effort.
New lessons or modules can be integrated, by ex-
tending or adding XML files. Due to the same fact,
also the content adaptation of the system to other
languages3 is very easy.
</bodyText>
<figure confidence="0.921523375">
The DTD Description:
&lt;?xml version=”1.0”?&gt;
&lt;DOCTYPE LESSONS[
&lt;!ELEMENT LESSONS (LESSON+)&gt;
&lt;!ELEMENT LESSON (TITLE+, (TEXT|FORMULA|
INDEXI|INDEX|BOLD|
ITALIC|TERM|LINK|DEF|
EXM|OBS|T|OTHER)+&gt;
</figure>
<sectionHeader confidence="0.963083777777778" genericHeader="method">
&lt;!ELEMENT TITLE (#PCDATA)&gt;
&lt;!ELEMENT TEXT (#PCDATA)&gt;
&lt;!ELEMENT FORMULA (#PCDATA)&gt;
&lt;!ELEMENT INDEX (#PCDATA)&gt;
&lt;!ELEMENT INDEXI (#PCDATA)&gt;
&lt;!ELEMENT BOLD (#PCDATA)&gt;
&lt;!ELEMENT ITALIC (#PCDATA)&gt;
&lt;!ELEMENT TERM (#PCDATA)&gt;
&lt;!ELEMENT T (#PCDATA)&gt;
&lt;!ELEMENT OTHER (#PCDATA)&gt;
&lt;!ATTLIST LESSON NO CDATA #REQUIRED&gt;
&lt;!ATTLIST DEF NO CDATA #REQUIRED&gt;
&lt;!ATTLIST EXM NO CDATA #REQUIRED&gt;
&lt;!ATTLIST OBS NO CDATA #REQUIRED&gt;
&lt;!ATTLIST QUIZZ NO CDATA #REQUIRED&gt;
&lt;!ATTLIST EX NO CDATA #REQUIRED&gt;
&lt;!ATTLIST T NO CDATA #REQUIRED&gt;
&lt;!ATTLIST OTHER STYLE CDATA #REQUIRED&gt;
</sectionHeader>
<bodyText confidence="0.9999262">
The G.U.I. follows the same design rules in all
modules and the layout and format decisions are
consistent. A color and a font style are associated
to only one kind of information (e.g. color red as-
sociated to definitions, etc.).
</bodyText>
<footnote confidence="0.990835285714286">
1The G.U.I. is automatically generated not only for the
lessons, but also for the term dictionary associated to each
module.
2XML = Extensible Markup Language. More details to
be found on http://en.wikipedia.org/wiki/XML
3For the moment ProLiV contains lessons in German and
English
</footnote>
<subsectionHeader confidence="0.983561">
3.1 Integrated external software packages
</subsectionHeader>
<bodyText confidence="0.9999094375">
The learning process is also sustained by in-
teractive elements, such as the possibility of
changing parameters for the LSA algorithm
and visualizing the results, or as the inte-
grated programs for the computational lexicons
tool: ManageLex (http://nats-www.
informatik.uni-hamburg.de/view/
Main/ManageLex) and G.E.R.L. (http://
nats-www.informatik.uni-hamburg.
de/view/Main/GerLexicon). This way
the students have the possibility, not only to read
the theory, but also to see the impact of their
modifications in an algorithm that is described in
the lessons.
Due to its architecture, other such external pro-
grams can be easily integrated within ProLiV.
</bodyText>
<sectionHeader confidence="0.981945" genericHeader="method">
4 LSA Module in ProLiV
</sectionHeader>
<bodyText confidence="0.999890384615385">
In order to have a better overview of what a mod-
ule contains and how it is organized, this section
presents some aspects of the LSA module.
The LSA module makes an introduction to the
topic. It gives an overview of the LSA algo-
rithm, principles, application areas, and of the
main mathematical notions used in the algorithm.
Initially thought for being used mostly by students
from linguistics (or linguists) - due to the mathe-
matical algorithms -, the tool can be exploited by
anybody who wants to have an introductory course
on LSA.
The content is organized in four Units:
</bodyText>
<listItem confidence="0.990493461538462">
1. LSA: General Knowledge - It gives the LSA
definition, a short overview of the history, its
semantics, and how LSA can be used in the
study of cognitive processes.
2. Mathematical Fundamentals - It describes the
LSA algorithm
3. LSA Applications - It presents the applica-
tion areas for the LSA, LSA limitations and
critics. Also a comparison with other similar
algorithms is made.
4. Compendium of Mathematics - It gives the
user the mathematical background: defini-
tions, theorems, etc.
</listItem>
<bodyText confidence="0.9435215">
The course has also an introduction, a motivation,
conclusion and references.
</bodyText>
<page confidence="0.995007">
15
</page>
<bodyText confidence="0.999828333333333">
The LSA module is offering not only a textual
representation of the information, but also sev-
eral visualization methods (as images and anima-
tions4). Beside the lessons, there are implemented
a term dictionary and an environment for testing
LSA parameters.
</bodyText>
<subsectionHeader confidence="0.994655">
4.1 The LSA Test Environment
</subsectionHeader>
<bodyText confidence="0.999964333333333">
Probably the most interesting part of the LSA
module is the test environment. After learning
about LSA, in this environment the user has the
possibility to actually see how LSA is working,
and what results can be obtained when compar-
ing the meaning of two words. The user can set
several parameters of the algorithm - e.g. the
analysis mode (simple/frequency based vs. ad-
vanced/entropy based), the minimum word occur-
rences, the analysis dimension, the similarity mea-
sure (Cosine, Euclidean, Pearson, Dot-Product),
etc. - and decide which words are not considered
in the analysis. The analyzed text, the initial co-
occurrence matrix and the one obtained after ap-
plying the Singular Value Decomposition (SVD)
algorithm are shown in the G.U.I. The similarity
measure, when comparing two words, is calcu-
lated in both unreduced and reduced cases.
</bodyText>
<sectionHeader confidence="0.999484" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.999821">
The paper presents a course-ware software, Pro-
LiV. It is a collection of (interactive) multimedia
tools used mainly for the consolidation of first-
years courses in computational linguistics and lit-
erary computing. Its goal is to help the humanist
scientists to make use of complex formal methods,
and the computer specialists to understand human-
ist facts and interpretations.
The main feature of the system, in the context
of the conference, is not the content of the lessons,
but the system’s extendible and adaptable architec-
ture. Another important aspect is the way in which
the information is presented to the student.
The system runs on any platform supporting
Java 1.5 or newer. It was developed on Linux and
tested on Windows and Mac OS X.
Being Java-based and having as input Unicode
files (XML encoded information), the system can
be embedded in the future in a Web environment.
More about ProLiV can be found in (Gavrila
et al, 2006) or in (Gavrila et al, TBA) and on
</bodyText>
<footnote confidence="0.7459365">
4The animations integrated are for the LSA algorithm
tested on an example and for matrix multiplication
</footnote>
<bodyText confidence="0.987409333333333">
the ProLiV homepage: http://nats-www.
informatik.uni-hamburg.de/view/
PROLIV/WebHome.
</bodyText>
<sectionHeader confidence="0.995517" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9822145">
We would like to thank all people that helped in
the development of our software: Project Coor-
</bodyText>
<reference confidence="0.900739642857143">
dinator Prof. Dr. Walther v. Hahn (Computer
Science Department, Natural Language Systems
Group), Prof. Dr. Angelika Redder (Depart-
ment of Language, Linguistics and Media Stud-
ies, Institute for German Studies I), Dr. Shinichi
Kameyama (Department of Language, Linguistics
and Media Studies, Institute for German Stud-
ies I), Christina von Bremen (Computer Science
Department, Natural Language Systems Group),
Olga Szczepanska (Computer Science Depart-
ment, Natural Language Systems Group), Irina
Aleksenko (Computer Science Department, Nat-
ural Language Systems Group), Svetla Boytcheva
(Academy of Sciences Sofia).
</reference>
<sectionHeader confidence="0.916441" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9989295">
Wilbert O. Galitz. 1997 The Essential Guide to User
Interface Design: an Introduction to GUI Design
principles and Techniques, Wiley Computer Pub-
lishing, New York.
Robert J. Gaizauskas, Peter J. Rodgers, and Kevin
Humphreys. 2001 Visual Tools for Natural Lan-
guage Processing, Journal of Visual Languages and
Computing, Vol. 12, Number 4, p. 375-411, Aca-
demic Press
Monica Gavrila, Cristina Vertan. 2006 Visualization
of Complex Linguistic Theories, in the Proceed-
ings of the ICDML 2006 Conference, p. 158-163,
Bangkok, Thailand, March 13-14
Monica Gavrila, Cristina Vertan, and Walther von
Hahn. To be published during 2009 ProLiV - Learn-
ing Terminology with animated Models for Visualiz-
ing Complex Linguistics Theories, in the Proceed-
ings of the LSP 2007 Conference, Hamburg, Ger-
many, August,
Julie Bauer Morrison, Barbara Twersky, and Mireille
Betrancourt. 2000 Animation: Does It Facilitate
Learning?, in the Proc. of the Workshop on Smart
Graphics, AAAI Press, Menlo Park, CA.
Kay L .Orr, Katharine C. Golas, and Katy Yao. 1994
Storyboard Development for Interactive Multimedia
Training, Journal of Interactive Instruction Devel-
opment, Volume 6, Number 3, p. 18-31
Pete Thibodeau. 1997 Design Standards for Visual
Elements and Interactivity for Courseware, T.H.E.
Journal, Volume 24, Number 7, p. 84-86
</reference>
<page confidence="0.998676">
16
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.740493">
<title confidence="0.997375">ProLiV a Tool for Teaching by Viewing Computational Linguistics</title>
<author confidence="0.999801">Monica Gavrila</author>
<affiliation confidence="0.999069">Hamburg University, NATS</affiliation>
<address confidence="0.965849">Vogt-K¨olln Str 30, 20251, Germany</address>
<email confidence="0.958468">gavrila@informatik.uni-hamburg.de</email>
<author confidence="0.99797">Cristina Vertan</author>
<affiliation confidence="0.997707">Hamburg University, NATS</affiliation>
<address confidence="0.95656">Vogt-K¨olln Str 30, 20251, Germany</address>
<email confidence="0.956">vertan@informatik.uni-hamburg.de</email>
<abstract confidence="0.994935105263158">ProLiV - Animated Process-modeler of Complex (Computational) Linguistic Methods and Theories is a fully modular, flexible, XML-based stand-alone Java application, used for computer-assisted learning in Natural Language Processing (NLP) or Computational Linguistics (CL). Having a flexible and extendible architecture, the system presents the students, by means of text, of visual elements (such as pictures and animations) and of interactive parameter set-up, the following topics: Latent Semantics Analysis (LSA), (computational) lexicons, question modeling, Hidden-Markov-Models (HMM), and Topic-Focus. These topics are addressed to first-year students in computer science and/or linguistics.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Dr Walther v</author>
</authors>
<institution>Hahn (Computer Science Department, Natural Language Systems Group), Prof. Dr. Angelika Redder (Department of Language, Linguistics and Media Studies, Institute for German Studies I), Dr. Shinichi Kameyama (Department of Language, Linguistics and Media Studies, Institute for German Studies I), Christina von Bremen (Computer Science Department, Natural Language Systems Group), Olga Szczepanska (Computer Science Department, Natural Language Systems Group), Irina Aleksenko (Computer Science Department, Natural Language Systems Group), Svetla Boytcheva (Academy of Sciences Sofia).</institution>
<marker>v, </marker>
<rawString>dinator Prof. Dr. Walther v. Hahn (Computer Science Department, Natural Language Systems Group), Prof. Dr. Angelika Redder (Department of Language, Linguistics and Media Studies, Institute for German Studies I), Dr. Shinichi Kameyama (Department of Language, Linguistics and Media Studies, Institute for German Studies I), Christina von Bremen (Computer Science Department, Natural Language Systems Group), Olga Szczepanska (Computer Science Department, Natural Language Systems Group), Irina Aleksenko (Computer Science Department, Natural Language Systems Group), Svetla Boytcheva (Academy of Sciences Sofia).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wilbert O Galitz</author>
</authors>
<title>The Essential Guide to User Interface Design: an Introduction to GUI Design principles and Techniques,</title>
<date>1997</date>
<publisher>Wiley Computer Publishing,</publisher>
<location>New York.</location>
<contexts>
<context position="6645" citStr="Galitz, 1997" startWordPosition="1013" endWordPosition="1014">ess, statistical tests should be run. 3 System Architecture In Figure 1 we present the ProLiV System architecture, consisting of: • a file repository (lessons, dictionary, tests, and exercises), • a tool repository, • an aggregating module combining elements from file and tool repository (Main Unit), • the graphical user interface (G.U.I.) For each topic a stand-alone module is connected with the G.U.I module via the Main Unit. Modules related to new topics can be inserted any time with no particular changes of the system. The ProLiV architecture follows the guideline considerations found in (Galitz, 1997). Figure 1: The ProLiV Architecture 14 The flexibility of the system is also given by the fact that the G.U.I.1 is generated according to an XML2 description, developed within the project (see DTD Description). The XML description contains the information in the lessons (definitions, theory, examples, etc.) and the G.U.I. specifications (colors, fonts, links, arrangement in the interface, etc.). Having an XML file as input, the system generates automatically the G.U.I. presented to the student. The information shown to the user can be extended or modified with almost no implementation effort. </context>
</contexts>
<marker>Galitz, 1997</marker>
<rawString>Wilbert O. Galitz. 1997 The Essential Guide to User Interface Design: an Introduction to GUI Design principles and Techniques, Wiley Computer Publishing, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert J Gaizauskas</author>
<author>Peter J Rodgers</author>
<author>Kevin Humphreys</author>
</authors>
<title>Visual Tools for Natural Language Processing,</title>
<date>2001</date>
<journal>Journal of Visual Languages and Computing,</journal>
<volume>12</volume>
<pages>375--411</pages>
<publisher>Academic Press</publisher>
<contexts>
<context position="1339" citStr="Gaizauskas et al, 2001" startWordPosition="171" endWordPosition="174">ns) and of interactive parameter set-up, the following topics: Latent Semantics Analysis (LSA), (computational) lexicons, question modeling, Hidden-Markov-Models (HMM), and Topic-Focus. These topics are addressed to first-year students in computer science and/or linguistics. 1 Introduction The role of multimedia in teaching Natural Language Processing (NLP) is demonstrated by constant development of software packages such as GATE (http://gate.ac.uk) and NLTK (http://nltk.sourceforge.net/ index.html). Detailed information about visual tools for NLP, in particular about GATE, is to be found in (Gaizauskas et al, 2001). ProLiV is a Java application framework, developed in a three-year project (2005-2008) at the University of Hamburg. It helps first-year students to understand and learn, in an easier manner, either complex linguistic theories used in NLP (e.g. question modeling) or statistical approaches for computational linguistics (e.g. LSA, HMM). The learning process is supported by modules integrating text, visual and interactive elements. In its first released version, ProLiV contains the following modules: • the Latent Semantic Analysis (LSA) module and the computational lexicons module - for linguist</context>
</contexts>
<marker>Gaizauskas, Rodgers, Humphreys, 2001</marker>
<rawString>Robert J. Gaizauskas, Peter J. Rodgers, and Kevin Humphreys. 2001 Visual Tools for Natural Language Processing, Journal of Visual Languages and Computing, Vol. 12, Number 4, p. 375-411, Academic Press</rawString>
</citation>
<citation valid="true">
<authors>
<author>Monica Gavrila</author>
<author>Cristina Vertan</author>
</authors>
<title>Visualization of Complex Linguistic Theories,</title>
<date>2006</date>
<booktitle>in the Proceedings of the ICDML 2006 Conference,</booktitle>
<pages>158--163</pages>
<location>Bangkok, Thailand,</location>
<marker>Gavrila, Vertan, 2006</marker>
<rawString>Monica Gavrila, Cristina Vertan. 2006 Visualization of Complex Linguistic Theories, in the Proceedings of the ICDML 2006 Conference, p. 158-163, Bangkok, Thailand, March 13-14</rawString>
</citation>
<citation valid="true">
<authors>
<author>Monica Gavrila</author>
<author>Cristina Vertan</author>
<author>Walther von Hahn</author>
</authors>
<title>ProLiV - Learning Terminology with animated Models for Visualizing Complex Linguistics Theories,</title>
<date>2009</date>
<booktitle>in the Proceedings of the LSP 2007 Conference,</booktitle>
<location>Hamburg, Germany,</location>
<note>To be published during</note>
<marker>Gavrila, Vertan, von Hahn, 2009</marker>
<rawString>Monica Gavrila, Cristina Vertan, and Walther von Hahn. To be published during 2009 ProLiV - Learning Terminology with animated Models for Visualizing Complex Linguistics Theories, in the Proceedings of the LSP 2007 Conference, Hamburg, Germany, August,</rawString>
</citation>
<citation valid="true">
<authors>
<author>Julie Bauer Morrison</author>
<author>Barbara Twersky</author>
<author>Mireille Betrancourt</author>
</authors>
<title>Animation: Does It Facilitate Learning?,</title>
<date>2000</date>
<booktitle>in the Proc. of the Workshop on Smart Graphics,</booktitle>
<publisher>AAAI Press,</publisher>
<location>Menlo Park, CA.</location>
<marker>Morrison, Twersky, Betrancourt, 2000</marker>
<rawString>Julie Bauer Morrison, Barbara Twersky, and Mireille Betrancourt. 2000 Animation: Does It Facilitate Learning?, in the Proc. of the Workshop on Smart Graphics, AAAI Press, Menlo Park, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kay L Orr</author>
<author>Katharine C Golas</author>
<author>Katy Yao</author>
</authors>
<title>Storyboard Development for Interactive Multimedia Training,</title>
<date>1994</date>
<journal>Journal of Interactive Instruction Development,</journal>
<volume>6</volume>
<pages>18--31</pages>
<contexts>
<context position="3059" citStr="Orr et al., 1994" startWordPosition="431" endWordPosition="434">ally key terms within the content are linked with dictionary entries. Three central issues guided the development of the ProLiV software: 1. choosing the most adequate means (text / picture / animation) to represent lessons content, 2. designing the layout (quantity and size of text, colors) in order to increase the learning success, 3. in case of the animations, defining its components and parameters (speed, animation steps, and graphical elements) to maximize their impact on users. Regarding the second issue above-mentioned, the layout of the modules follows part of the guidelines found in (Orr et al., 1994) and (Thibodeau, 1997). Considering the current multimedia development, the trend is using animations to improve the learning process. Animations are assumed to be 13 Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 13–16, Suntec, Singapore, 3 August 2009. c�2009 ACL and AFNLP a promising educational tool, although their efficiency is not fully proved. Researchers, such as (Morrison, 2000), showed that animations can convey more information and be helpful when showing details in intermediate steps of a process, but when building an animation it is very important to consider th</context>
</contexts>
<marker>Orr, Golas, Yao, 1994</marker>
<rawString>Kay L .Orr, Katharine C. Golas, and Katy Yao. 1994 Storyboard Development for Interactive Multimedia Training, Journal of Interactive Instruction Development, Volume 6, Number 3, p. 18-31</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pete Thibodeau</author>
</authors>
<title>Design Standards for Visual Elements and Interactivity for Courseware,</title>
<date>1997</date>
<journal>T.H.E. Journal, Volume</journal>
<volume>24</volume>
<pages>84--86</pages>
<contexts>
<context position="3081" citStr="Thibodeau, 1997" startWordPosition="436" endWordPosition="438">he content are linked with dictionary entries. Three central issues guided the development of the ProLiV software: 1. choosing the most adequate means (text / picture / animation) to represent lessons content, 2. designing the layout (quantity and size of text, colors) in order to increase the learning success, 3. in case of the animations, defining its components and parameters (speed, animation steps, and graphical elements) to maximize their impact on users. Regarding the second issue above-mentioned, the layout of the modules follows part of the guidelines found in (Orr et al., 1994) and (Thibodeau, 1997). Considering the current multimedia development, the trend is using animations to improve the learning process. Animations are assumed to be 13 Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 13–16, Suntec, Singapore, 3 August 2009. c�2009 ACL and AFNLP a promising educational tool, although their efficiency is not fully proved. Researchers, such as (Morrison, 2000), showed that animations can convey more information and be helpful when showing details in intermediate steps of a process, but when building an animation it is very important to consider the background of the st</context>
</contexts>
<marker>Thibodeau, 1997</marker>
<rawString>Pete Thibodeau. 1997 Design Standards for Visual Elements and Interactivity for Courseware, T.H.E. Journal, Volume 24, Number 7, p. 84-86</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>