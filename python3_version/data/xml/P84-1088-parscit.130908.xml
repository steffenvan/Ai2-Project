<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003687">
<title confidence="0.997824">
A Response to the Need for Summary Responses
</title>
<author confidence="0.983301">
J.K. Kalita, M.J. Colbourn&amp;quot; and G.I. McCalla
</author>
<affiliation confidence="0.998385">
Department of Computational Science
University of Saskatchewan
</affiliation>
<address confidence="0.489632">
Saskatoon, Saskatchewan, S7N OWO
</address>
<email confidence="0.374456">
CANADA
</email>
<sectionHeader confidence="0.965699" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.998733444444444">
In this paper we argue that natural language inter-
faces to databases should be able to produce summary
responses as well as listing actual data. We describe a
system (incorporating a number of heuristics and a
knowledge base built on top of the database) that has
been developed to generate such summary responses. It
is largely domain-independent, has been tested on
many examples, and handles a wide variety of situa-
tions where summary responses would be useful.
</bodyText>
<sectionHeader confidence="0.997815" genericHeader="introduction">
1. Introduction
</sectionHeader>
<bodyText confidence="0.986542235294118">
For over a decade research has been ongoing into
the diverse and complex issues involved in developing
smart natural language interfaces to database systems.
Pioneering front-end systems such as PLANES [15],
REQUEST [12], TORUS [11] and RENDEZVOUS 111
experimented with, among other things, various parsing
formalisms (e.g. semantic grammars, transformational
grammars and augmented transition networks); the
need for knowledge representation (e.g. using produc-
tion systems or semantic networks); and the usefulness
of clarification dialogue in disambiguating a user&apos;s
query.
Recent research has addressed various dialogue
issues in order to enhance the elegance of the database
interactions. Such research includes attempts to resolve
anaphoric references in queries [2,4,14,161, to track the
user&apos;s focus of attention [2,4,14,16], and to generate
cooperative responses. In particular, the CO-OP sys-
tem [7] is able to analyze presumptions of the user in
order to generate appropriate explanations for answers
that may mislead the user. Janas [5] takes a similar
approach to generate indirect answers instead of pro-
viding direct inappropriate ones. Mays [8] has
developed techniques to monitor changes in the data-
base and provide relevant information on these changes
to the user. McCoy [0] and McKeown [10] attempt to
provide answers to questions about the structure of the
database rather than extensional information as to its
contents. We investigate herein, one particular
approach to generating &amp;quot;non-extensional&amp;quot; responses - in
particular the generation of &amp;quot;summary&amp;quot; responses.
Generating abstract &amp;quot;summary&amp;quot; responses to users&apos;
queries is often preferable to providing enumerative
replies. This follows from an important convention of
human dialogue that no participant should monopolize
the discourse (i.e. &amp;quot;be brier&apos; [3]). Furthermore, exten-
sional responses can occasionally mislead the user where
summary responses would not. Consider the following
example [131:
QI: Which department managers earn over $40k
per year?
S1-1: Abel, Baker, Charles, Doug.
S1-2: All of them.
By enumerating managers who earn over $40k, the first
response implies that there are managers who do not
earn that much. In linguistic pragmatics, this is called a
sealer implicature [3]. In circumstances where the user
is liable to infer an invalid scalar implicature, the sys-
tem should be able to produce an appropriate response
to block the generation of such an inference as is done
by the response S1-2.
</bodyText>
<sectionHeader confidence="0.686957" genericHeader="method">
2. Overview of the System
</sectionHeader>
<bodyText confidence="0.998102636363636">
We describe herein a system which has been
developed for the generation of summary responses to
user&apos;s queries (fully detailed in [6]). The system arrives
at concise responses by employing a search of the
relevant data for the existence of &amp;quot;interesting&amp;quot; pat-
terns. It uses heuristics to guide this search and a
knowledge base to enhance efficiency and help deter-
mine &amp;quot;interestingness&amp;quot;.
The database used to test the system is a simple
+ Now, at the Department of Computer Science, University of Waterloo, Waterloo,
Ontario, N2L 3G1, CANADA
</bodyText>
<page confidence="0.997893">
432
</page>
<bodyText confidence="0.999971818181818">
relational database of student records, although the
methods developed are largely domain-independent. In
order to concentrate on the response generation issues,
the input/output for the system is in an internal form -
an actual parser and surface language generation capa-
bilities will be incorporated in future versions of the
system.
The flow of control in the system is simple. The
formal representation of the query is used to access the
database and obtain the tuples which satisfy the user&apos;s
query (which we will call T „,a; the other tuples will be
called T„). After the data is accessed, the system, in
consultation with its knowledge base, calls upon its
heuristics to find interesting non-enumerative patterns.
The heuristics are tried in order, until one succeeds or
all fail. When a heuristic detects an appropriate pat-
tern, the system terminates the search and produces
the response as dictated by the successful heuristic. If
all heuristics fail, the system reports its inability to
produce a descriptive response. In any event, the user
may ask the system to produce an extensional answer
by listing the data if he/she so desires.
</bodyText>
<sectionHeader confidence="0.951328" genericHeader="method">
3. The Heuristics
</sectionHeader>
<bodyText confidence="0.999950666666667">
The heuristics employed in the system are pro-
cedural in nature. They guide the system to search for
various patterns that may exist in the data. The heuris-
tics are linearly ordered; they range from simple to
complex. The ordering of the heuristics assumes that if
more than one descriptive answer can be obtained for a
query, it is sensible to produce the &amp;quot;simplest&amp;quot; one.
The equality heuristic determines if all data values
appearing for a particular attribute A in Tgyd are the
same (say, a). If so, and if no tuple in T„„u, has the
same value for the attribute A, the general formulation
of the response is:
&amp;quot;All tuples having the value a for attribute A.&amp;quot;
The particular value under consideration must be one
of the designated &amp;quot;distinguishing values&amp;quot; for the attri-
bute. Response S1-2 (above) is an example of what this
heuristic would do.
The dual of the equality heuristic is the inequality
heuristic where instead of looking for equalities, the
system searches for inequalities. The inequality heuris-
tic enables the system to produce responses such as:
</bodyText>
<listItem confidence="0.732731333333333">
Q2: Which students are taking makeup courses?
52: All students with non-Computer Science
undergraduate background.
</listItem>
<bodyText confidence="0.989394731707317">
Here, the value &amp;quot;Computer Science&amp;quot; for the attribute
UNIVERSITY-DEPARTMENT in the database under
consideration may be considered a distinguishing value.
If the equality or inequality heuristics are not appli-
cable in their pure form and there are a &amp;quot;few&amp;quot; (&amp;quot;few&amp;quot;
depends on the relative number of tuples in T and
2&amp;quot;„„,, and some other factors) tuples in T„„,„I which do
not satisfy the requirement of the heuristic, a
modification of the response produced by the heuristic
may be presented to the user. An example of such a
modification is seen in the following:
Q3: Which students are receiving University
scholarships?
S3: All but one foreign students. In addition,
two Canadian students are also receiving
University scholarships.
Another set of heuristics, the range heuristics,
determine if the data values for an attribute in the
tuples in 7&apos;,„„, are within a particular well-defined range.
There are two main types of range heuristics - one is
concerned with maximum values and the other with
minimum values. We will discuss only the maximum
range heuristic here.
The maximum heuristic determines if the values of
an attribute for all tuples in Tv„, are below a particular
limit while the values of the attribute in all tuples in
are not. An example response produced by the
maximum heuristic is:
Q4: Which students have been advised to dis-
continue studies at the University?
S4: All students with a cumulative GPA of 2.0
or less.
In some cases, the maximum and minimum heuris-
tics may be used together to define the end-points of a
range of values (for some attribute) which the tuples in
T , satisfy. This results in a range specification. If a is
the minimum value and # is the maximum value of the
attribute A in T1, then the corresponding response is:
&amp;quot;All tuples with the value of attribute A ranging
from a to r
An example of an answer with range specification is:
</bodyText>
<listItem confidence="0.664543333333333">
Q5: Which students are in section 1 of CMPT110.3?
S5: All students with surnames starting with &apos;A&apos;
through &apos;F&apos;.
</listItem>
<bodyText confidence="0.999848333333333">
There are several heuristic rules which the system
follows in producing answers with range specification.
For example, one of these rules limits the actual range
specified in an answer to 75% or less of the potential
range of the attribute values. This limitation of 75% is
not sacrosanct; it is an arbitrary decision by the imple-
mentor of the knowledge base. In the current imple-
mentation it is believed that if the actual range is more
than 75% of the potential range, no special meaning
</bodyText>
<page confidence="0.997419">
433
</page>
<bodyText confidence="0.992115391891892">
can be attributed to the occurrence of this range in
TrJaj.
Another rule requires that the actual range specified
in an answer must not be so small as to identify the
actual tuples which constitute the answer. For example,
we should not produce a response such as:
&amp;quot;All students with student-id-no between 821661
and 821663&amp;quot;
In fact, such answers are not brief when compared to
the size of the set of tuples which they qualify.
A more complex heuristic is the conjunction heuris-
tic. If all values of an attribute A in T&amp;quot; satisfy a rela-
tion R (in the mathematical sense) and there are some
tuples in T„„&amp;quot; in which the values of the attribute A
satisfy this relation R, the system attempts to deter-
mine via the above heuristics if there is/are some
&amp;quot;interesting&amp;quot; distinguishing characteristic(s) which the
set T&amp;quot; satisfies, but the set of tuples in T.,,&amp;quot; satisfy-
ing the relation R do not. Let us call the distinguishing
characteristic(s) D. The general formulation of the
response is
&amp;quot;All tuples which satisfy the relation R for attri-
bute A and have the characteristic(s) D.&amp;quot;
An example is:
Q6: Which students are working as T.A. and
R.A.?
S6: Students who have completed at least two
years at the University and who are not
employed outside the University.
If none of the above heuristics can be applied suc-
cessfully, the disjunction heuristic attempts to divide
the tuples in T&amp;quot; into a number of subsets and deter-
mine whether the above heuristics are appropriate for
all of these subsets. The number of such subsets
should be &amp;quot;small&amp;quot;; if too many subsets are identified, it
is no more elegant than listing the data, which we are
trying to avoid. The number of allowable subsets par-
tially depends upon the number of tuples in T&amp;quot;. An
example showing three partitions based on the values of
three different attributes is:
Q7: Which graduate students are not receiving
University scholarships?
S7: Students who are receiving NSERC scholar-
ships or have cumulative GPA less than 6.0
or have completed at least two years at the
University.
If none of the above heuristics produces a satisfac-
tory response, the foreign-key heuristic searches other
&amp;quot;related&amp;quot; relations. A related relation is one with which
the relation under consideration has some common or
join attribute(s). The names of such related relations
and the attributes via which such a relation can be
joined with the original target relation can be obtained
from the knowledge base to be discussed later. An
example of such a dialogue is:
Q8: Which students are taking 880-level courses?
S8: All second year students. In addition, two
first year students are also taking 880-level
courses.
While attempting to answer Q8, the system finds
that the question pertains to the relation COURSE-
REGISTRATIONS. However, it fails to obtain any
interesting descriptive pattern about the tuples in T&amp;quot;
by considering this relation alone. Hence, the system
consults the knowledge base and finds that the relation
COURSE-REGISTRATIONS can be joined with the
relation STUDENTS. It takes the join of all the tuples
constituting T, with the relation STUDENTS and
projects the resulting relation on the attributes of the
relation STUDENTS. Let us call these tuples T„,&amp;quot;.
Next, it attempts to discover the existence of some pat-
tern in the tuples in T„,„,. It succeeds in producing
the response given in S8 by employing modified equal-
ity heuristic.
</bodyText>
<sectionHeader confidence="0.953942" genericHeader="method">
4. The Knowledge Base
</sectionHeader>
<bodyText confidence="0.999986192307692">
The knowledge base incorporates subjective percep-
tions of the user as to the nature and contents of the
database. It consists of two types of frames - the rela-
tion and the attribute frames. These frames may be
considered to be an exten&apos;sion of the database schema.
The frames are created by the interface builder, and
different sets of frames must be provided for different
types of users and/or different databases.
Each relation frame corresponds to an actual rela-
tion in the database; it provides the possible links with
all other relations in the database. In other words,
these frames define all permissible joins of two rela-
tions. If a direct join is not possible between two
specific relations, the frame contains the name of a
third relation which must be included in the join. The
information in the relation frames is useful in the appli-
cation of the foreign-key heuristic.
The attribute frames play a role in our system simi-
lar to that played by McCoy&apos;s axioms [0]. Each attri-
bute frame corresponds to an attribute in the relations
in the database. In addition to a description of the
attributes, these frames indicate the nature and range
of the attribute&apos;s potential values. The expected range
of values that an attribute may assume is helpful to the
range heuristics. Information regarding the relative
preferability of the various attributes is also included.
</bodyText>
<page confidence="0.998344">
434
</page>
<bodyText confidence="0.989458294117647">
Each attribute frame also contains a slot for &amp;quot;dis-
tinguishing values&amp;quot; which the attribute might take.
This slot provides information for distinguishing a sub-
class of an entity from other sub-classes. The contents
of this field are useful in producing descriptive
responses to users&apos; queries. This slot contains one or
more clauses, each of the following format CI j&apos; means
optionality; `...&apos; means arbitrary number of repetitions
of the immediately preceding clause):
(list-of-distinguishing-values-1
(applicable-operator-1-1 [denomination-1-1])
[(applicable-operator-1-2 [denomination-1-2])]
If all the values of the attribute in T„ satisfy
&amp;quot;applicable-operator-1-1&amp;quot; with respect to the contents
of the list &amp;quot;list-of-distinguishing-values-1&amp;quot;, the actual
values may be termed as &amp;quot;denomination-1-1&amp;quot; for pro-
ducing responses. If the value of &amp;quot;denomination-1-1&amp;quot; is
null, no names can be attached to the actual values of
the attribute.
The Distinguishing Values slot enables the imple-
mentor to specify classifications that he would a priori
like to appear meaningfully in descriptive responses.
This information enables the system to faithfully reflect
the implementor perceived notions regarding how a
database entity class may be appropriately partitioned
into subclasses for generating summary responses.
It is often useful to provide descriptive answers on
the basis of certain preferred attributes. For example,
for the STUDENTS relation, it is more &amp;quot;meaningful&amp;quot;
to provide answers on the basis of the attribute
NATIONALITY or UG-MAJOR, rather than
STUDENT-ID-NO or AMOUNT-OF-FINANCIAL-MD.
However, it is impossible to give a concrete weight
regarding each attribute&apos;s preferability. Therefore, we
have classified the attributes into several groups; all
attributes in a group are considered equally useful in
producing meaningful qualitative answers to queries.
This classification means that it is preferable and
more useful to produce descriptive responses using the
attributes in preference category 1 than the attributes
in category 2, 3 or 4. This categorization is based on
one&apos;s familiarity with the data. The decision is subjec-
tive, and hence it is bound to vary according to the
judgement of the person building the interface. In the
Preference Category slot, we have an entry correspond-
ing to each relation the attribute occurs in. The infor-
mation in this slot ensures that the system chooses a
description based on the most salient attribute(s) for
producing a response.
A simple example of an attribute frame is given
below:
</bodyText>
<table confidence="0.698902666666667">
Name:- (NATIONALITY, STUDENTS)
Nature-of-Attribute:- String of characters
Distingu ishing-Values:-
(( (Canadian )(=)(0 foreign))
((U.K. U.S.A. Australia ...)
(member-of English-speaking countries))
((U.K. France ...)
(member-of Europe))
Potential-Range:- Any member from a given list of
countries
Rounding-off-to-be-done?:- Not applicable
Preference-Category:- 1
</table>
<bodyText confidence="0.997492318181818">
The example shows the frame for the attribute
NATIONALITY belonging to the STUDENTS relation.
It assumes character values. To be valid, the values
must be members of a previously compiled list of coun-
tries. It belongs to the preference category 1 discussed
above. Let us consider the clause ((Canadian)(=)(0
foreign)) in the Distinguishing Value slot. The value
&amp;quot;Canadian&amp;quot; is a distinguishing value in the domain of
values which the attribute may take. The term &amp;quot;(=)&amp;quot;
indicates that it is possible to identify a class of stu-
dents using the descriptive expression &amp;quot;NATIONALITY
= Canadian&amp;quot;. If NATIONALITY 0 &amp;quot;Canadian&amp;quot;, the
student may be referred to as a &amp;quot;FOREIGN&amp;quot; student.
Similarly, if the value for a student under the attribute
NATIONALITY is a member of the set (U.K. U.S.A.
Australia ...), he may be designated as coming from an
English-speaking country. This information may be
helpful in answering a query such as:
Q9: Which students are taking the &amp;quot;Intensive
English&amp;quot; course in the Fall term?
SO: Most entering foreign students from
non-English speaking countries.
</bodyText>
<sectionHeader confidence="0.972435" genericHeader="conclusions">
5. Concluding Remarks
</sectionHeader>
<bodyText confidence="0.999984133333333">
A system incorporating the details explained above
has been implemented and extensive experiments have
been performed using a simple student database.
Every heuristic has demonstrated its usefulness in pro-
ducing summary responses by being successful in this
environment. The heuristics are domain-independent,
and the knowledge base is easily modifiable to adapt to
the requirements of a new user or database domain.
For performance enhancement, the knowledge base
may be augmented with an additional component for
storing away the results of the preceding database
interactions to obviate the need to search the database
for every query. The extended knowledge base may be
utilized for improved modelling of the user&apos;s beliefs and
perceptions about the data by providing a mechanism
</bodyText>
<page confidence="0.997739">
435
</page>
<bodyText confidence="0.999944222222222">
to introduce the user&apos;s own definitions and descriptive
terminologies. Further research is necessary in order to
obtain an acceptable structure for this additional com-
ponent of the knowledge base. In addition, the factors -
linguistic or otherwise, that influence the appropriate-
ness of the generation of a summary response for a give
question at a particular point in the interaction are also
to be investigated.
Generation of summary responses has important
implications if the interactions with a database
management system are to have the properties and
constraints normally associated with human dialogue.
Interactions with traditional database management sys-
tems lack the &amp;quot;intelligence&amp;quot; and elegance which we
ascribe to human behaviour. We feel that providing
summary responses will be an important tool to be used
in achieving database interfaces that behave intelli-
gently and co-operatively.
</bodyText>
<sectionHeader confidence="0.996279" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999946875">
We would like to thank the National Science and
Engineering Research Council of Canada (NSERC) and
the University of Saskatchewan for supporting this
research both financially and through the provision of
computing facilities. We would also like to express our
gratitude to Paul Sorensen and Robin Cohen for their
many helpful comments during the course of the
research.
</bodyText>
<sectionHeader confidence="0.998748" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99990540625">
Eli Codd E.F., R.S. Arnold, J.M. Cadious, C.L.
Chang, N. Ftoussopoulos, RENDEZVOUS Version
1: An Experimental English Language Query For-
mulation System for Casual Users of Relational
Databases, Research Report No. RJ2144 (29407),
IBM Research Laboratory, San Jose, California,
1978.
[2] Davidson J., &amp;quot;Natural Language Access to Data-
base: User Modelling and Focus&amp;quot;, Proceedings of
Canadian Society for Computational Studies of
Intelligence, Saskatoon, May, 1982, 204-211.
[31 Grice H.P., &amp;quot;Logic and Conversation&amp;quot;, in P. Cole
and J.L. Morgan (eds.), Syntax and Semantics:
Speech Acts, Vol. 3, Academic Press, New York,
1975, 41-58.
Grosz B.J., &amp;quot;The Representation and the Use of
Focus in a System for Understanding Dialogues&amp;quot;,
Proc. 5th IJCAL Cambridge, 1977, 67-76.
Janas J.M., &amp;quot;How to not Say &amp;quot;NIL&amp;quot; - Improving
answers to Failing Queries in Data Base Sys-
tems&amp;quot;, Proc. 6th IJCAL 1979, Tokyo, 429-434.
[6] Kalita J.K., Generating Summary Responses to
Natural Language Database Queries, M.Sc.
Thesis; also available as TR-9, University of
Saskatchewan, Saskatoon, 1984.
[7] Kaplan S.J., &amp;quot;Cooperative Responses from a Port-
able Natural Language Query System&amp;quot;, Artificial
Intelligence, Vol. 19, No. 2, Oct. 1982, 165-187.
[8] Mays E., S. Lanka, A.K. Joshi and B.L. Webber,
&amp;quot;Natural Language Interaction with Dynamic
Knowledge Bases: Monitoring as Response&amp;quot;,
Proc. 7th IJCAL Vancouver, 1981, 61-63.
191 McCoy K.F., &amp;quot;Augmenting a Database
Knowledge Representation for Natural Language
Generation&amp;quot;, Proc. 20th Annual Conference of
the ACL, Toronto, Ontario, June, 1982, 121-128.
[10] McKeown K.R., &amp;quot;The TEXT system for Natural
Language Generation: An Overview&amp;quot;, Proc. 20th
Annual Conference of the ACL, Toronto, Ontario,
June 1982, 113-120.
[11] Mylopoulos J., A. Borgida, P. Cohen, N. Rousso-
poulos, J. Tsotsos, H. Wing, &amp;quot;TORUS : A Step
towards Bridging the Gap between Databases and
Casual User&amp;quot;, Information Systems, Vol. 2, 1976,
49-64.
[12] Plath W.J., &amp;quot;REQUEST : A Natural Language
Question Answering System&amp;quot;, IBM Journal of
Research and Development, Vol. 20, July 1976,
326-335.
[13] Reiter R., H. Gallaire, J.J. King, J. Mylopoulos
and B.L. Webber, &amp;quot;A Panel on Al and Data-
bases&amp;quot;, Proc. 8th IJCAL 1983, Karlsruhe, West
Germany, 1199-1206.
[14] Sidner C.L., Towards A Computational Theory of
Definite Anaphora Comprehension in English
Discourse&amp;quot;, TR-537, Al Laboratory, MIT, Cam-
bridge, Massachussets, 1979.
[15] Waltz D.L., An English Language Question
Answering System for a Large Relational Data-
base, CA CM, Vol. 21, July, 1978, 526-539.
[16] Webber B. and R. Reiter, &amp;quot;Anaphora and Logical
Form: On Formal Meaning Representations for
Natural Language&amp;quot;, Proc. 5th IJCAL Cambridge,
Massachussets, 1977, 121-131.
</reference>
<page confidence="0.999222">
436
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.859217">
<title confidence="0.999833">A Response to the Need for Summary Responses</title>
<author confidence="0.999616">J K Kalita</author>
<author confidence="0.999616">M J Colbourn</author>
<author confidence="0.999616">G I McCalla</author>
<affiliation confidence="0.999972">Department of Computational Science University of Saskatchewan</affiliation>
<address confidence="0.9401035">Saskatoon, Saskatchewan, S7N OWO CANADA</address>
<abstract confidence="0.9974214">In this paper we argue that natural language interfaces to databases should be able to produce summary responses as well as listing actual data. We describe a system (incorporating a number of heuristics and a knowledge base built on top of the database) that has been developed to generate such summary responses. It is largely domain-independent, has been tested on many examples, and handles a wide variety of situations where summary responses would be useful.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Eli Codd E F</author>
<author>R S Arnold</author>
<author>J M Cadious</author>
<author>C L Chang</author>
<author>N Ftoussopoulos</author>
</authors>
<title>RENDEZVOUS Version 1: An Experimental English Language Query Formulation System for Casual Users of Relational Databases,</title>
<date>1978</date>
<tech>Research Report No. RJ2144 (29407),</tech>
<institution>IBM Research Laboratory,</institution>
<location>San Jose, California,</location>
<marker>F, Arnold, Cadious, Chang, Ftoussopoulos, 1978</marker>
<rawString> Eli Codd E.F., R.S. Arnold, J.M. Cadious, C.L. Chang, N. Ftoussopoulos, RENDEZVOUS Version 1: An Experimental English Language Query Formulation System for Casual Users of Relational Databases, Research Report No. RJ2144 (29407), IBM Research Laboratory, San Jose, California, 1978.</rawString>
</citation>
<citation valid="false">
<authors>
<author>J Davidson</author>
</authors>
<title>Natural Language Access to Database: User Modelling and Focus&amp;quot;,</title>
<date>1982</date>
<booktitle>Proceedings of Canadian Society for Computational Studies of Intelligence,</booktitle>
<volume>3</volume>
<pages>204--211</pages>
<editor>Grice H.P.,</editor>
<publisher>Academic Press,</publisher>
<location>Saskatoon,</location>
<contexts>
<context position="1514" citStr="[2,4,14,16]" startWordPosition="221" endWordPosition="221">, TORUS [11] and RENDEZVOUS 111 experimented with, among other things, various parsing formalisms (e.g. semantic grammars, transformational grammars and augmented transition networks); the need for knowledge representation (e.g. using production systems or semantic networks); and the usefulness of clarification dialogue in disambiguating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention [2,4,14,16], and to generate cooperative responses. In particular, the CO-OP system [7] is able to analyze presumptions of the user in order to generate appropriate explanations for answers that may mislead the user. Janas [5] takes a similar approach to generate indirect answers instead of providing direct inappropriate ones. Mays [8] has developed techniques to monitor changes in the database and provide relevant information on these changes to the user. McCoy [0] and McKeown [10] attempt to provide answers to questions about the structure of the database rather than extensional information as to its c</context>
</contexts>
<marker>[2]</marker>
<rawString>Davidson J., &amp;quot;Natural Language Access to Database: User Modelling and Focus&amp;quot;, Proceedings of Canadian Society for Computational Studies of Intelligence, Saskatoon, May, 1982, 204-211. [31 Grice H.P., &amp;quot;Logic and Conversation&amp;quot;, in P. Cole and J.L. Morgan (eds.), Syntax and Semantics: Speech Acts, Vol. 3, Academic Press, New York, 1975, 41-58. Grosz B.J., &amp;quot;The Representation and the Use of Focus in a System for Understanding Dialogues&amp;quot;, Proc. 5th IJCAL Cambridge, 1977, 67-76. Janas J.M., &amp;quot;How to not Say &amp;quot;NIL&amp;quot; - Improving answers to Failing Queries in Data Base Systems&amp;quot;, Proc. 6th IJCAL 1979, Tokyo, 429-434.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J K Kalita</author>
</authors>
<title>Generating Summary Responses to Natural Language Database Queries, M.Sc. Thesis; also available as TR-9,</title>
<date>1984</date>
<institution>University of Saskatchewan,</institution>
<location>Saskatoon,</location>
<contexts>
<context position="3332" citStr="[6]" startWordPosition="504" endWordPosition="504">Charles, Doug. S1-2: All of them. By enumerating managers who earn over $40k, the first response implies that there are managers who do not earn that much. In linguistic pragmatics, this is called a sealer implicature [3]. In circumstances where the user is liable to infer an invalid scalar implicature, the system should be able to produce an appropriate response to block the generation of such an inference as is done by the response S1-2. 2. Overview of the System We describe herein a system which has been developed for the generation of summary responses to user&apos;s queries (fully detailed in [6]). The system arrives at concise responses by employing a search of the relevant data for the existence of &amp;quot;interesting&amp;quot; patterns. It uses heuristics to guide this search and a knowledge base to enhance efficiency and help determine &amp;quot;interestingness&amp;quot;. The database used to test the system is a simple + Now, at the Department of Computer Science, University of Waterloo, Waterloo, Ontario, N2L 3G1, CANADA 432 relational database of student records, although the methods developed are largely domain-independent. In order to concentrate on the response generation issues, the input/output for the sys</context>
</contexts>
<marker>[6]</marker>
<rawString>Kalita J.K., Generating Summary Responses to Natural Language Database Queries, M.Sc. Thesis; also available as TR-9, University of Saskatchewan, Saskatoon, 1984.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S J Kaplan</author>
</authors>
<title>Cooperative Responses from a Portable Natural Language Query System&amp;quot;,</title>
<date>1982</date>
<journal>Artificial Intelligence,</journal>
<volume>19</volume>
<pages>165--187</pages>
<contexts>
<context position="1590" citStr="[7]" startWordPosition="233" endWordPosition="233">ng formalisms (e.g. semantic grammars, transformational grammars and augmented transition networks); the need for knowledge representation (e.g. using production systems or semantic networks); and the usefulness of clarification dialogue in disambiguating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention [2,4,14,16], and to generate cooperative responses. In particular, the CO-OP system [7] is able to analyze presumptions of the user in order to generate appropriate explanations for answers that may mislead the user. Janas [5] takes a similar approach to generate indirect answers instead of providing direct inappropriate ones. Mays [8] has developed techniques to monitor changes in the database and provide relevant information on these changes to the user. McCoy [0] and McKeown [10] attempt to provide answers to questions about the structure of the database rather than extensional information as to its contents. We investigate herein, one particular approach to generating &amp;quot;non-e</context>
</contexts>
<marker>[7]</marker>
<rawString>Kaplan S.J., &amp;quot;Cooperative Responses from a Portable Natural Language Query System&amp;quot;, Artificial Intelligence, Vol. 19, No. 2, Oct. 1982, 165-187.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Mays</author>
<author>S Lanka</author>
<author>A K Joshi</author>
<author>B L Webber</author>
</authors>
<title>Natural Language Interaction with Dynamic Knowledge Bases: Monitoring as Response&amp;quot;,</title>
<date>1981</date>
<booktitle>Proc. 7th IJCAL</booktitle>
<pages>61--63</pages>
<location>Vancouver,</location>
<contexts>
<context position="1840" citStr="[8]" startWordPosition="273" endWordPosition="273">ating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention [2,4,14,16], and to generate cooperative responses. In particular, the CO-OP system [7] is able to analyze presumptions of the user in order to generate appropriate explanations for answers that may mislead the user. Janas [5] takes a similar approach to generate indirect answers instead of providing direct inappropriate ones. Mays [8] has developed techniques to monitor changes in the database and provide relevant information on these changes to the user. McCoy [0] and McKeown [10] attempt to provide answers to questions about the structure of the database rather than extensional information as to its contents. We investigate herein, one particular approach to generating &amp;quot;non-extensional&amp;quot; responses - in particular the generation of &amp;quot;summary&amp;quot; responses. Generating abstract &amp;quot;summary&amp;quot; responses to users&apos; queries is often preferable to providing enumerative replies. This follows from an important convention of human dialogue t</context>
</contexts>
<marker>[8]</marker>
<rawString>Mays E., S. Lanka, A.K. Joshi and B.L. Webber, &amp;quot;Natural Language Interaction with Dynamic Knowledge Bases: Monitoring as Response&amp;quot;, Proc. 7th IJCAL Vancouver, 1981, 61-63. 191 McCoy K.F., &amp;quot;Augmenting a Database Knowledge Representation for Natural Language Generation&amp;quot;, Proc. 20th Annual Conference of the ACL, Toronto, Ontario, June, 1982, 121-128.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K R McKeown</author>
</authors>
<title>The TEXT system for Natural Language Generation: An Overview&amp;quot;,</title>
<date>1982</date>
<booktitle>Proc. 20th Annual Conference of the ACL,</booktitle>
<pages>113--120</pages>
<location>Toronto, Ontario,</location>
<contexts>
<context position="1990" citStr="[10]" startWordPosition="298" endWordPosition="298">rch includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention [2,4,14,16], and to generate cooperative responses. In particular, the CO-OP system [7] is able to analyze presumptions of the user in order to generate appropriate explanations for answers that may mislead the user. Janas [5] takes a similar approach to generate indirect answers instead of providing direct inappropriate ones. Mays [8] has developed techniques to monitor changes in the database and provide relevant information on these changes to the user. McCoy [0] and McKeown [10] attempt to provide answers to questions about the structure of the database rather than extensional information as to its contents. We investigate herein, one particular approach to generating &amp;quot;non-extensional&amp;quot; responses - in particular the generation of &amp;quot;summary&amp;quot; responses. Generating abstract &amp;quot;summary&amp;quot; responses to users&apos; queries is often preferable to providing enumerative replies. This follows from an important convention of human dialogue that no participant should monopolize the discourse (i.e. &amp;quot;be brier&apos; [3]). Furthermore, extensional responses can occasionally mislead the user where s</context>
</contexts>
<marker>[10]</marker>
<rawString>McKeown K.R., &amp;quot;The TEXT system for Natural Language Generation: An Overview&amp;quot;, Proc. 20th Annual Conference of the ACL, Toronto, Ontario, June 1982, 113-120.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Mylopoulos</author>
<author>A Borgida</author>
<author>P Cohen</author>
<author>N Roussopoulos</author>
<author>J Tsotsos</author>
<author>H Wing</author>
</authors>
<title>TORUS : A Step towards Bridging the Gap between Databases and Casual User&amp;quot;,</title>
<date>1976</date>
<journal>Information Systems,</journal>
<volume>2</volume>
<pages>49--64</pages>
<contexts>
<context position="915" citStr="[11]" startWordPosition="141" endWordPosition="141">ses as well as listing actual data. We describe a system (incorporating a number of heuristics and a knowledge base built on top of the database) that has been developed to generate such summary responses. It is largely domain-independent, has been tested on many examples, and handles a wide variety of situations where summary responses would be useful. 1. Introduction For over a decade research has been ongoing into the diverse and complex issues involved in developing smart natural language interfaces to database systems. Pioneering front-end systems such as PLANES [15], REQUEST [12], TORUS [11] and RENDEZVOUS 111 experimented with, among other things, various parsing formalisms (e.g. semantic grammars, transformational grammars and augmented transition networks); the need for knowledge representation (e.g. using production systems or semantic networks); and the usefulness of clarification dialogue in disambiguating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention [2,4,14,16],</context>
</contexts>
<marker>[11]</marker>
<rawString>Mylopoulos J., A. Borgida, P. Cohen, N. Roussopoulos, J. Tsotsos, H. Wing, &amp;quot;TORUS : A Step towards Bridging the Gap between Databases and Casual User&amp;quot;, Information Systems, Vol. 2, 1976, 49-64.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W J Plath</author>
</authors>
<title>REQUEST : A Natural Language Question Answering System&amp;quot;,</title>
<date>1976</date>
<journal>IBM Journal of Research and Development,</journal>
<volume>20</volume>
<pages>326--335</pages>
<contexts>
<context position="903" citStr="[12]" startWordPosition="139" endWordPosition="139">mmary responses as well as listing actual data. We describe a system (incorporating a number of heuristics and a knowledge base built on top of the database) that has been developed to generate such summary responses. It is largely domain-independent, has been tested on many examples, and handles a wide variety of situations where summary responses would be useful. 1. Introduction For over a decade research has been ongoing into the diverse and complex issues involved in developing smart natural language interfaces to database systems. Pioneering front-end systems such as PLANES [15], REQUEST [12], TORUS [11] and RENDEZVOUS 111 experimented with, among other things, various parsing formalisms (e.g. semantic grammars, transformational grammars and augmented transition networks); the need for knowledge representation (e.g. using production systems or semantic networks); and the usefulness of clarification dialogue in disambiguating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention </context>
</contexts>
<marker>[12]</marker>
<rawString>Plath W.J., &amp;quot;REQUEST : A Natural Language Question Answering System&amp;quot;, IBM Journal of Research and Development, Vol. 20, July 1976, 326-335.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Reiter</author>
<author>H Gallaire</author>
<author>J J King</author>
<author>J Mylopoulos</author>
<author>B L Webber</author>
</authors>
<title>A Panel on Al and Databases&amp;quot;,</title>
<date></date>
<booktitle>Proc. 8th IJCAL 1983,</booktitle>
<pages>1199--1206</pages>
<location>Karlsruhe, West</location>
<marker>[13]</marker>
<rawString>Reiter R., H. Gallaire, J.J. King, J. Mylopoulos and B.L. Webber, &amp;quot;A Panel on Al and Databases&amp;quot;, Proc. 8th IJCAL 1983, Karlsruhe, West Germany, 1199-1206.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L Sidner</author>
</authors>
<title>Towards A Computational Theory of Definite Anaphora Comprehension in English Discourse&amp;quot;,</title>
<date>1979</date>
<booktitle>TR-537, Al Laboratory, MIT,</booktitle>
<location>Cambridge, Massachussets,</location>
<contexts>
<context position="1514" citStr="[2,4,14,16]" startWordPosition="221" endWordPosition="221">, TORUS [11] and RENDEZVOUS 111 experimented with, among other things, various parsing formalisms (e.g. semantic grammars, transformational grammars and augmented transition networks); the need for knowledge representation (e.g. using production systems or semantic networks); and the usefulness of clarification dialogue in disambiguating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention [2,4,14,16], and to generate cooperative responses. In particular, the CO-OP system [7] is able to analyze presumptions of the user in order to generate appropriate explanations for answers that may mislead the user. Janas [5] takes a similar approach to generate indirect answers instead of providing direct inappropriate ones. Mays [8] has developed techniques to monitor changes in the database and provide relevant information on these changes to the user. McCoy [0] and McKeown [10] attempt to provide answers to questions about the structure of the database rather than extensional information as to its c</context>
</contexts>
<marker>[14]</marker>
<rawString>Sidner C.L., Towards A Computational Theory of Definite Anaphora Comprehension in English Discourse&amp;quot;, TR-537, Al Laboratory, MIT, Cambridge, Massachussets, 1979.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D L Waltz</author>
</authors>
<title>An English Language Question Answering System for a Large Relational Database,</title>
<date>1978</date>
<journal>CA CM,</journal>
<volume>21</volume>
<pages>526--539</pages>
<contexts>
<context position="889" citStr="[15]" startWordPosition="137" endWordPosition="137"> to produce summary responses as well as listing actual data. We describe a system (incorporating a number of heuristics and a knowledge base built on top of the database) that has been developed to generate such summary responses. It is largely domain-independent, has been tested on many examples, and handles a wide variety of situations where summary responses would be useful. 1. Introduction For over a decade research has been ongoing into the diverse and complex issues involved in developing smart natural language interfaces to database systems. Pioneering front-end systems such as PLANES [15], REQUEST [12], TORUS [11] and RENDEZVOUS 111 experimented with, among other things, various parsing formalisms (e.g. semantic grammars, transformational grammars and augmented transition networks); the need for knowledge representation (e.g. using production systems or semantic networks); and the usefulness of clarification dialogue in disambiguating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus</context>
</contexts>
<marker>[15]</marker>
<rawString>Waltz D.L., An English Language Question Answering System for a Large Relational Database, CA CM, Vol. 21, July, 1978, 526-539.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Webber</author>
<author>R Reiter</author>
</authors>
<title>Anaphora and Logical Form: On Formal Meaning Representations for Natural Language&amp;quot;,</title>
<date>1977</date>
<booktitle>Proc. 5th IJCAL</booktitle>
<pages>121--131</pages>
<location>Cambridge, Massachussets,</location>
<contexts>
<context position="1514" citStr="[2,4,14,16]" startWordPosition="221" endWordPosition="221">, TORUS [11] and RENDEZVOUS 111 experimented with, among other things, various parsing formalisms (e.g. semantic grammars, transformational grammars and augmented transition networks); the need for knowledge representation (e.g. using production systems or semantic networks); and the usefulness of clarification dialogue in disambiguating a user&apos;s query. Recent research has addressed various dialogue issues in order to enhance the elegance of the database interactions. Such research includes attempts to resolve anaphoric references in queries [2,4,14,161, to track the user&apos;s focus of attention [2,4,14,16], and to generate cooperative responses. In particular, the CO-OP system [7] is able to analyze presumptions of the user in order to generate appropriate explanations for answers that may mislead the user. Janas [5] takes a similar approach to generate indirect answers instead of providing direct inappropriate ones. Mays [8] has developed techniques to monitor changes in the database and provide relevant information on these changes to the user. McCoy [0] and McKeown [10] attempt to provide answers to questions about the structure of the database rather than extensional information as to its c</context>
</contexts>
<marker>[16]</marker>
<rawString>Webber B. and R. Reiter, &amp;quot;Anaphora and Logical Form: On Formal Meaning Representations for Natural Language&amp;quot;, Proc. 5th IJCAL Cambridge, Massachussets, 1977, 121-131.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>