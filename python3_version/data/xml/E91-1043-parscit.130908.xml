<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000603">
<title confidence="0.9711155">
A BIDIRECTIONAL MODEL FOR NATURAL LANGUAGE
PROCESSING
</title>
<author confidence="0.96971">
Giinter Neumann
</author>
<affiliation confidence="0.842314">
Lehrstuhl ftir Computerlinguistik
Universitat des Saarlandes
</affiliation>
<address confidence="0.909154">
Im Stadtwald 15, Bau 17.2
6600 Saarbriicken 11, FRG
</address>
<email confidence="0.956069">
neumann@coli.uni-sb.de
</email>
<sectionHeader confidence="0.988405" genericHeader="abstract">
ABSTRACT
</sectionHeader>
<bodyText confidence="0.999860444444444">
In this paper* I will argue for a model of
grammatical processing that is based on
uniform processing and knowledge sources.
The main feature of this model is to view
parsing and generation as two strongly
interleaved tasks performed by a single
parametrized deduction process. It will be
shown that this view supports flexible and
efficient natural language processing.
</bodyText>
<sectionHeader confidence="0.999477" genericHeader="keywords">
1 INTRODUCTION
</sectionHeader>
<bodyText confidence="0.977752580645161">
The aspect of bidirectionality has been
gaining importance since the growing rate of
research on natural language generation over
the last years offers us deeper insights into
this cognitive ability of humans. There are
theoretical as well as practical reasons for
adopting bidirectionality. Theoretically, the
assumption of common knowledge sources
for both generation and analysis is essential
for the view of language as &amp;quot;an interpersonal
medium and an interface to thought&amp;quot;
(McDonald 1987). From a psychological
point of view, there is a certain amount of
empirical evidence for shared processors or
facilities (Jackendoff 1987), From a system
engineering view, a bidirectional system
produces utterances only from that subset of
language that it is capable to understand.
Therefore, inconsistencies of the language
behaviour of the system can be avoided
(Jacobs 1988).
A fundamental requirement of a
bidirectional knowledge base is that it be
represented declaratively (Appelt 1987). From
this viewpoint one can distinguish two
different types of bidirectional natural
language systems:
* Thanks to Klaus Netter, Karel Oliva, Norbert
Reithingcr, Harald Trost and Hans Uszkoreit for
fruitful discussions about the aspects of the paper&apos;s
contents.
</bodyText>
<listItem confidence="0.9615465">
• systems that use uniform knowledge
sources, but different processes
• systems that use uniform knowledge
sources as well as uniform processes1
</listItem>
<bodyText confidence="0.998669275862069">
Up to now, systems that are capable of
analysing and producing language fall into the
first class, i.e. they use different operations
for both directions (cf. Hoeppner et al. 1983;
Busemann and Hauenschild 1988; Allgayer et
al. 1989) Currently, it is an open question
what degree of bidirectionality should or
could be desired (cf. Appelt 1987; Mann
1987; McDonald 1987; Shieber 1988; Jacobs
1988). One of the reasons could be that the
formal specification of some tasks (e.g., the
determination of content in generation) is
currently not well understood in order to
decide whether they could be bidirectional in
principle.
But in some research areas uniform
processing models have been developed that
are based on formalisms which are well suited
for uniform representation and processing,
e.g., Koskenniemi&apos;s (1984) two-level model
of morphology. Recently, there are first
approaches ,to uniform architectures for
grammatical processing (e.g., Shieber 1988;
Dymetman and Isabelle 1988; Dymetman et
al. 1990). These architectures are based on
Pereira and Warren&apos;s (1983) paradigm of
parsing as deduction. In principle, parsing
and generation are viewed as a single
parametrized deduction process.
</bodyText>
<sectionHeader confidence="0.9981905" genericHeader="introduction">
PROBLEMS OF BIDIRECTIONAL
GRAMMATICAL PROCESSING
</sectionHeader>
<bodyText confidence="0.5440414">
1Besides these two classes there are also systems that
use different knowledge sources that are compiled from
the same source (e.g., Horacek and Pyka 1988) and
systems that use common basic representation devices
(e.g.. Lancel et,al. 1988; Neumann and Finkler 1990).
- 245 -
Currently developed approaches that
consider parsing as well as generation (e.g.,
Shieber 1988; Shieber et al. 1990; Dymetman
et al. 1990; van Noord 1990; Zajac and Emele
</bodyText>
<listItem confidence="0.946845142857143">
1990) assume:
• that both tasks take place independently
from each other, i.e. an utterance is either
generated or parsed and
• that grammatical processing can be
performed without considerations of
discourse.
</listItem>
<bodyText confidence="0.989678446428571">
A great problem with this view is that it offers
no solution of the problem of choice between
paraphrases in generation: The proposed
approaches assume - more or less explicitly -
modularity between the conceptual and
grammatical component of a natural language
system.2 A great advantage of a modular
design especially for uniform architectures is
that it is possible to view the grammatical
component as relatively autonomous and self-
contained (cf. Appelt 87).
But then the following problems emerge:
The conceptual component will be unable to
exactly specify the logical form as input to the
grammatical component that will precisely
lead to the utterance that reflects the intended
meaning unless the conceptual module has
detailed information about the grammar and
knows when to use a specific construction
(which renders the modular design
meaningless).
On the other hand, when parsing and
generation are performed within the
grammatical component by a single process
only then the opposite view of computing all
possible parses of an utterance is the
computation of all possible paraphrases of a
logical form. When gramrriatical processing
should be modelled by means of a
bidirectional grammar, the declarative
structure of the grammar must not contain
pragmatical or stylistical information because
of the modular design. But then the process
can only choose randomly between
paraphrases during generation and this means
that the intended meaning will possibly not be
conveyed.
Ideally, a logical language would be
helpful which necessarily and sufficiently
represents all meaning distinctions of natural
2By a conceptual component I mean either the what-
to-say component of a generation system or the
component that performs inference, plan recognition
or anaphora resolution of an understanding system.
language. But as Shieber (1988) states &amp;quot;this
... is just the central problem of knowledge
representation for natural language in
general&amp;quot;. Currently, there exist only
approximate solutions to this problem for
example the use of canonical logical forms
(cf. Shieber 88).3 But this still offers no
solution of the problem of choice between
paraphrases.
In this paper it will be argued that the
following two points will contribute to an
approximate solution:
</bodyText>
<listItem confidence="0.95940675">
• interleaved parsing and generation
• using the language use of interlocutors as
an additional access criterion to linguistic
knowledge
</listItem>
<bodyText confidence="0.989442888888889">
Interleaved parsing and generation means that
both tasks take place in parallel (see section
2). In principle this results in a bidirectional
and incremental flow of information during
natural language processing (see section 4.1).
An important point during the use of language
is that the choice of linguistic material is
influenced by the language use of others (see
section 3). This leads to more flexibility: not
all necessary parameters (e.g., pragmatical
values) need to be specified in the input of a
generator because decision points can also be
set dynamically during run-time.
A promising approach to realize these two
features will be to base grammatical
processing on a uniform process that is
parametrized by means of a declaratively
specified preference structure of knowledge
sources. But, it is necessary to be aware that
the grammatical component must be assumed
to be an integrated part of a whole natural
language system (in particular in models for
performing dialogs) in order to realize this
solution.
Before the architecture of the model will be
described in section 4 the two issues are
explained in more detail in the next sections.
</bodyText>
<sectionHeader confidence="0.9990635" genericHeader="method">
2 INTERLEAVING GENERATION
AND ANALYSIS
</sectionHeader>
<bodyText confidence="0.999679625">
The strategy of viewing natural language
processing as based on a uniform deduction
process has a formal elegance and results in
more compact systems. There is one further
advantage that is of both theoretical and
practical relevance: uniform architectures offer
the possibility to view generation and parsing
as strongly interleaved tasks. By this I mean
</bodyText>
<footnote confidence="0.895808">
3It is questionable whether there exists a full solution.
</footnote>
<construct confidence="0.262643">
- 246 -
</construct>
<bodyText confidence="0.9158466">
that during performing one task (e.g.,
generation) the other one (e.g., analysis) is
used for monitoring the former. In principle
this results in a bidirectional and incremental
flow of information:
</bodyText>
<listItem confidence="0.9379674">
• During the parse of an utterance the
addressee of the utterance can
simultaneously start to construct his
answer. In doing so, partial results of the
parsing process can be used directly during
generation (e.g., if a paraphrase will be
generated). In such flow of control it will
be possible that generation can be used for
completing the resulting structure of
elliptic, underspecified or ill-formed input
during the process of understanding or for
generating paraphrases in due time.
• During generation interleaved parsing could
help to avoid the construction of
ambiguous utterances. E.g., it is necessary
</listItem>
<bodyText confidence="0.998216518518519">
for a natural language help system to
generate utterances that reflect exactly the
intended meaning (if possible at all) to be
sure that the dialog partner will perform the
correct operations. For instance, producing
the utterance &amp;quot;Remove the folder by means
of the system tools&amp;quot; is better than &amp;quot;Remove
the folder with the system tools&amp;quot; because
for the latter utterance there exists the
reading &amp;quot;Remove the folder that contains
the system tools&amp;quot;, too.
Of course, it is also possible to analyse a
generated utterance if processes are
performing their tasks in an isolated way.4 In
such flow of control the complete structure
has to be generated again if ambiguities are
detected that have to be avoided. Because the
source of an ambiguous utterance is not used
directly to guide the generation process it is
possible that the newly generated structure is
still ambiguous (and it may happen that the
same ambiguous structure is generated again).
This results in inefficient systems because in
general the loop between the , isolated
processes must be performed several times.
The advantage of a uniform architecture is
that intermediate results of one direction can
</bodyText>
<footnote confidence="0.9791388">
4For example, the complete structure of a produced
utterance is analysed during the &apos;anticipation-feedback-
loop&apos; of the HAM-ANS system (see Hoeppner et al.
1983) to determine whether it can be actually uttered
elliptic or not.
</footnote>
<bodyText confidence="0.998841333333333">
immediately be used in the opposite direction
to determine the ambiguous information in
due time.
</bodyText>
<sectionHeader confidence="0.995781666666667" genericHeader="method">
3 BIDIRECTIONALITY SUPPORTS
FLEXIBLE AND EFFICIENT
GENERATION
</sectionHeader>
<bodyText confidence="0.999989081632653">
One of the disadvantages of currently
developed generation systems is that they
view the structure of linguistic knowledge
only statically. If alternatives exist for a
particular linguistic expression, decision
points are evaluated to determine the
appropriate actual utterance. It is necessary to
specify corresponding decision points for all
possible utterances otherwise the choice must
be performed randomly (the determination of
the appropriate set of decision points is one of
the sources of complexity in existing
generation systems). The flexibility of such
systems depends directly on the flexibility that
is brought into the system via the decision
points that are specified by hand during the
development of a generation system (i.e. the
flexibility is restricted).
On the other side, in a bidirectional system
the resulting structures of the parsing task can
be used directly during generation. E.g., in
general a set of alternative lexemes is specified
during the process of lexical choice which are
synonymous in the actual situation or when
the semantic input cannot be sufficiently
specified (e.g., in German, some drinking-
devices can be denoted either &apos;Tasse&apos; (cup) or
&apos;Becher&apos; (mup) because their shape cannot be
interpreted unequivocally). An appropriate
choice would be to use the same lexeme that
was previously used by the hearer (if no other
information is available). In principle this is
also possible for the choice between
alternative syntactic structures.
This means that uniform architectures offer
the possibility to model the assumption that
during comrbunication the use of language of
one interlocutor is influenced by means of the
language use of the others. This adaptability
to the use of language of partners in
communication is one of the sources for the
fact that the global generation process of
humans is flexible and efficient. Of course,
adaptability is also a kind of co-operative
behaviour. This is necessary if new ideas
have to be expressed for which no mutually
known linguistic terms exist (e.g., during
communication between experts and novices).
In this case adaptability to the use of language
</bodyText>
<page confidence="0.896107">
247 -
</page>
<bodyText confidence="0.99952245945946">
of the hearer is necessary in order to make
possible that the hearer will be able to
understand the new information.
I do not want to argue that all choices are
determined by means of language use of
others. But, when structures that are
determined during analysis are considered
during generation, the number of decision
points or parameters which have to be
specified during the development of a
generation system is reduced. This leads to
more flexibility: not all necessary parameters
need to be specified in the input of a
generator because decision points can also be
set dynamically during run-time.
This dynamic behaviour of a generation
system will increase efficiency, too. As
McDonald et al. (1987) define, one generator
design is more efficient than another, if it is
able to solve the same problem with fewer
steps. They argue that &amp;quot;the key element
governing the difficulty of utterance
production is the degree of familiarity with the
situation&amp;quot;. The efficiency of the generation
process depends on the competence and
experience one has acquired for a particular
situation. In such situations the generation
process performs its task by using compiled
knowledge and preferences.
Currently, it is a great problem how
compiled knowledge is acquired dynamically
and how it is activated in particular situations.
But a uniform architecture as proposed in this
paper seems to be a promising basis for
designing such a system, because the
structures determined during analysis could be
used for restricting the potential search space.
</bodyText>
<sectionHeader confidence="0.967284" genericHeader="method">
4 AN OUTLINE OF A
BIDIRECTIONAL ARCHITECTURE
</sectionHeader>
<bodyText confidence="0.999943833333333">
If both aspects - interleaving parsing and
generation and using the language use of
interlocutors as additional criterion for the
structure of linguistic knowledge - are realized
within a uniform architecture then this will
increase flexibility and efficiency in natural
language processing. E.g., when starting the
generation from a logical form, the
grammatical process is able to call the
conceptual module&apos;s attention if a subphrase
causes ambiguity. Thus it is not necessary that
the conceptual module has detailed
information about the grammar.
The flow of control within a system based
on an interleaved approach is bidirectional.
E.g., during the generation of an utterance
partial structures are analysed to avoid
unnecessary ambiguities. The bidirectional
flow of control supports incremental
processing: it is possible to start processing of
partial structures before the whole structure is
known. In Finkler and Neumann (1989) and
Neumann and Finkler (1990) we have already
described an implemented generation system
(named POPEL-HOW) that realizes an
incremental and bidirectional flow of control
based on a uniform parallel processing model.
The incremental and bidirectional flow of
control has two main advantages during
generation. Firstly, the determination of
contents can be done on the basis of
conceptual considerations only, because
POPEL-HOW is flexible enough to handle
underspecified input. Secondly, the
conceptualizer has to regard feedback from
POPEL-HOW during the computation of the
further selection process. This means, an
incremental system like POPEL can model the
influence of linguistic restrictions on the
process that determines what to say next.
Underspecified structures are analysed in
POPEL-HOW at each level of description by
means of declarative described mapping rules.
The analysis of such structures is performed
with generation specific operations. If the
system would be based on a uniform
architecture then such specific operations are
no more necessary.
</bodyText>
<subsectionHeader confidence="0.942745">
4.1 BiLD - A MODEL FOR
</subsectionHeader>
<sectionHeader confidence="0.980335" genericHeader="method">
BIDRECTIONAL LINGUISTIC
DEDUCTION
</sectionHeader>
<bodyText confidence="0.997696833333333">
At the University of Saarbriicken a project
called BiLD is now being started where it will
be investigated how interleaving of parsing
and generation can be efficiently performed
and how such a model can be used for
increasing flexibility and efficiency during
natural language processing. Fig. 1 (next
page) shows the schematic structure of its
architecture.
The core of the system is a uniform
parametrized deduction process. The main
task for the process in both directions is the
determination of the corresponding syntactic
information that functions as an interface
between graphematic and semantic
information (a formalism based on Head-
driven Phrase Structure Grammar (Pollard
and Sag 1987) will be used).
</bodyText>
<figure confidence="0.859612">
- 248 -
**manila
•apr•ssion
utlerano•
</figure>
<figureCaption confidence="0.993693">
Fig. I: Schematic structure of BiLD
</figureCaption>
<bodyText confidence="0.999614">
The task of the deduction process during
generation is to construct the graphematic
form of a specified semantical feature
description.5 For example, to yield the
utterance &amp;quot;A man sings&amp;quot; the deduction process
gets as input the semantic feature structure
and deduces the graphematic structure
[graph : (A_man_sings.)]
by means of successive application of lexical
and grammatical information. In the Same way
the deduction process computes from the
graphematic structure an appropriate semantic
structure in parsing direction.
The author has now started to develop and
implement a first version of a prototype of a
uniform algorithm for HPSG. The main idea6
is that the approach is head-driven in both
directions. In the first phase of the algorithm
the maximal projection for all head elements
are computed (or predicted) bottom-up.
Phrases are then combined top-down. The
completion step is controlled by syntactic and
semantic information inherited from lexical
heads and by the principles of HPSG.
</bodyText>
<footnote confidence="0.981223857142857">
5The resulting structure of the generation process as
well as the input structure of the parsing process is
written language, therefore we use the feature &apos;graph&apos;
instead of &apos;phon&apos; which is preferably used in Pollard
and Sag (1987).
OBasic ideas of the approach are influenced by the
head-driven parser of Proudian and Pollard (1985).
</footnote>
<bodyText confidence="0.9994343">
Because heads are processed first the
completion of structures must be performed in
left as well as in right direction.
The approach supports the ID/LP format
of rules. But it is an open question whether
linear precendence can be processed in the
same way for generation and parsing. The
problem is that during parsing the task of LP
rules is to filter out ungrammatical structures.
During generation the task of LP rules can be
seen as an ordering criterion. But in this case
the problem of choice between paraphrases
emerges. In POPEL-HOW it is assumed that
the order of activation of concepts (which is
determined using pragmatical knowledge)
should be maintained if it is syntactically
wellformed; otherwise the segments are
reordered. Whether such viewpoint is
acceptable for generation in general is still
open.
</bodyText>
<sectionHeader confidence="0.993027" genericHeader="method">
4.2 ASPECTS OF CONTROL
STRUCTURE
</sectionHeader>
<bodyText confidence="0.999978538461539">
A major aspect of the BiLD project is that
specific parametrization of the deduction
process is represented in the lexicon as well
as in the grammar to obtain efficient structures
of control (Uszkoreit 1991). The main idea is
that preference values are assigned to the
elements (disjuncts or conjuncts) of feature
descriptions. For example, in HPSG all
lexical entries are put together into one large
disjunctive form. From a purely declarative
point of view these elements are unordered.
But a preference structure is used during
processing in order to guide the process of
lexical choice efficiently which itself
influences the grammatical process.
To support flexibility and efficiency (in the
way described in section 3) the language use
of interlocutors will be considered to influence
the preference values. For example, the
frequency of access of a lexeme will increase
its preference value. In a uniform lexicon it is
no matter whether the lexeme was accessed
during parsing or generation. But this means
that the use of particular linguistic elements of
the interlocutor influences the choice of lexical
material during generation.
</bodyText>
<sectionHeader confidence="0.998652" genericHeader="conclusions">
5 CONCLUSION
</sectionHeader>
<bodyText confidence="0.9995166">
In this paper it is argued that generation
and parsing should be best viewed as two
interleaved tasks based on a single
parametrized deduction process and that this
view supports flexible and efficient natural
</bodyText>
<equation confidence="0.945409">
rel : sing&apos;
sem: quant : exist&apos;
var : El
agens :
restr : {pred : man]
var :
vi
- 249 -
</equation>
<bodyText confidence="0.9997135">
language processing. A major point of view is
that the language use of interlocutors should
be considered during generation as an
additional access criterion.
</bodyText>
<sectionHeader confidence="0.993456" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.997114990825688">
Allgayer J.; Jansen-Winkeln R.; Reddig C. and
Reithinger N. 1989 &amp;quot;Bidirectional use of knowledge
in the multi-modal NL access system XTRA&amp;quot;,
Proceedings of the 11th International Joint Conference
on Artificial Intelligence, 1492-1497.
Appelt, D. E. 1987 &amp;quot;Bidirectional Grammars and
the Design of Natural Language Generation
Systems,&amp;quot; In Y. Wilks (ed.) Theoretical Issues in
Natural Processing-3, New Mexico State University,
Las Cruces, New Mexico, 185-191.
Busemann, S. and Hauenschild, C. 1988 &amp;quot;A
Constructive View of GPSG or How to Make It
Work,&amp;quot; Proceedings of the 12th International
Conference on Computational Linguistics, 77-82.
Dymetman, M. and Isabelle, P. 1988 &amp;quot;Reversible
Logic Grammars for Machine Translation,&amp;quot;
Proceedings of the 2nd International Conference on
Theoretical and Methodological Issues in Machine
Translation of Natural Language.
Dymetman, M.; Isabelle P. and Perrault, F. 1990
&amp;quot;A Symmetrical Approach to Parsing and Generation,&amp;quot;
Proceedings of the 13th International Conference on
Computational Linguistics, 90-96.
Finkler, W. and Neumann, G. 1989 &amp;quot;POPEL-
HOW: A Distributed Parallel Model for Incremental
Natural Language Production with Feedback,&amp;quot;
Proceedings of the Eleventh International Joint
Conference on Artificial Intelligence, 1518-1523.
Hoeppner, W.; Christaller, T.; Marburger, H.;
Monk, K.; Nebel, B.; O&apos;Leary, M. and Wahlster, W.
1983 &amp;quot;Beyond Domain-Independence: Experience with
the Development of a German Language Access
System To Higly Diverse Background Systems,&amp;quot;
Proceedings of the 8th International Joint Conference
on Artificial Intelligence, 643-646.
Horacek, H. and Pyka, C. 1988 &amp;quot;Anwendbarkeit
von Unifikationsgrammatiken fiir effizientes
Generieren,&amp;quot; In H. Trost (ed.) 4 .Osterreichische
Artificial-Intelligence-Tagung, Springer, Berlin, 171-
177.
Jackendoff, R. 1987 &amp;quot;Consciousness and the
Computational Mind,&amp;quot; Cambridge Massachussetts:
MIT Press.
Jacobs, P. S. 1988 &amp;quot;Achieving Bidirectionality,&amp;quot;
Proceedings of the 12th International Conference on
Computational Linguistics, 267-274.
Koskenniemi, K. 1984 &amp;quot;A General Computational
Model for Word-Form Recognition and Production,&amp;quot;
Proceedings of the 10th International Conference on
Computational Linguistics, 178-181.
Lancet, J.M.; Otani, M.; Simonin, N. and
Danlos, L. 1988 &amp;quot;SAGE: a Sentence Parsing and
Generation System,&amp;quot; Proceedings of the 12th
International Conference on Computational
Linguistics, 359-364.
Mann, W. C. 1987 &amp;quot;What is Special About
Natural Language Generation Research?,&amp;quot; In Y.
Wilks (ed.) Theoretical Issues in Natural Processing-
3, New Mexico State University, Las Cruces, New
Mexico, 206-211.
McDonald D. D. 1987 &amp;quot;No Better, but no Worse,
than People,&amp;quot; In Y. Wilks (ed.) Theoretical Issues in
Natural Processing-3, New Mexico State University,
Las Cruces, New Mexico, 200-205.
McDonald, D. D.; Meteer, M. W. and
Pustejovsky, J. D. 1987 &amp;quot;Factors Contributing to
Efficiency in Natural Language Generation,&amp;quot; In G.
Kempen (ed.) Natural Language Generation: New
Results in Artificial Intelligence, Psychology and
Linguistics, Dordrecht: Martinus Nijhoff, 159-182.
Neumann, G. and Finkler, W. 1990 &amp;quot;A Head-
Driven Approach to Incremental and Parallel
Generation of Syntactic Structures,&amp;quot; Proceedings of
the 13th International Conference on Computational
Linguistics, 288-293.
van Noord, G. 1990 &amp;quot;Reversible Unification Based
Machine Translation,&amp;quot; Proceedings of the 13th
International Conference on Computational
Linguistics, 299-304.
Pereira, F. C. N. and Warren, D. H. D. 1983
&amp;quot;Parsing as Deduction, &amp;quot; Proceedings of the 21th
Annual Meeting of the Association for
Computational Linguistics, 137-144.
Proudian, D. and Pollard, C. 1985 &amp;quot;Parsing Head.
Driven Phrase Structure Grammar, &amp;quot; Proceedings of
the 23rd Annual Meeting of the Association for
Computational Linguistics, 167-171.
Pollard, C. and Sag, I. 1987 &amp;quot;Information-based
syntax and semantics,&amp;quot; CLS! Lecture Notes 13, Center
for the Study of Language and Information, Standford,
CA.
Shieber, S. M. 1988 &amp;quot;A Uniform Architecture for
Parsing and Generation,&amp;quot; Proceedings of the 12th
International Conference on Computational
Linguistics, 614-619.
Shieber, S. M.; van Noord, G.; Moore, R. M. and
Pereira, F. C: P. 1989 &amp;quot;A Semantic Head-Driven
Generation Algorithm for Unification-Based
Formalisms,&amp;quot; Proceedings of the 27th Annual
Meeting of the Association for Computational
Linguistics, 7-17.
Uszkoreit, H. 1991 &amp;quot;Strategies for Adding Control
Information to Declarative Grammars,&amp;quot; Technical
Report, Institute for Computational Linguistics,
University of Saarbriicken, FRG.
Zajac, R. and Emele, M. 1990 &amp;quot;Typed Unification
Grammars,&amp;quot; Proceedings of the 13th International
Conference on Computational Linguistics, 293-298.
- 250 -
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.797638">
<title confidence="0.9960375">A BIDIRECTIONAL MODEL FOR NATURAL LANGUAGE PROCESSING</title>
<author confidence="0.981653">Giinter Neumann</author>
<affiliation confidence="0.944624">Lehrstuhl ftir Computerlinguistik Universitat des Saarlandes</affiliation>
<address confidence="0.973434">Im Stadtwald 15, Bau 17.2 6600 Saarbriicken 11, FRG</address>
<email confidence="0.950162">neumann@coli.uni-sb.de</email>
<abstract confidence="0.9989729">In this paper* I will argue for a model of grammatical processing that is based on uniform processing and knowledge sources. The main feature of this model is to view parsing and generation as two strongly interleaved tasks performed by a single parametrized deduction process. It will be shown that this view supports flexible and efficient natural language processing.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Allgayer</author>
<author>R Jansen-Winkeln</author>
<author>C Reddig</author>
<author>N Reithinger</author>
</authors>
<title>Bidirectional use of knowledge in the multi-modal NL access system XTRA&amp;quot;,</title>
<date>1989</date>
<booktitle>Proceedings of the 11th International Joint Conference on Artificial Intelligence,</booktitle>
<pages>1492--1497</pages>
<contexts>
<context position="2230" citStr="Allgayer et al. 1989" startWordPosition="327" endWordPosition="330"> one can distinguish two different types of bidirectional natural language systems: * Thanks to Klaus Netter, Karel Oliva, Norbert Reithingcr, Harald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall into the first class, i.e. they use different operations for both directions (cf. Hoeppner et al. 1983; Busemann and Hauenschild 1988; Allgayer et al. 1989) Currently, it is an open question what degree of bidirectionality should or could be desired (cf. Appelt 1987; Mann 1987; McDonald 1987; Shieber 1988; Jacobs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and processing, e.g., Koskenniemi&apos;s (1984) two-level model</context>
</contexts>
<marker>Allgayer, Jansen-Winkeln, Reddig, Reithinger, 1989</marker>
<rawString>Allgayer J.; Jansen-Winkeln R.; Reddig C. and Reithinger N. 1989 &amp;quot;Bidirectional use of knowledge in the multi-modal NL access system XTRA&amp;quot;, Proceedings of the 11th International Joint Conference on Artificial Intelligence, 1492-1497.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D E Appelt</author>
</authors>
<title>Bidirectional Grammars and the Design of Natural Language Generation Systems,&amp;quot; In</title>
<date>1987</date>
<booktitle>Theoretical Issues in Natural Processing-3,</booktitle>
<pages>185--191</pages>
<editor>Y. Wilks (ed.)</editor>
<institution>Mexico State University, Las Cruces,</institution>
<location>New</location>
<contexts>
<context position="1588" citStr="Appelt 1987" startWordPosition="231" endWordPosition="232">nalysis is essential for the view of language as &amp;quot;an interpersonal medium and an interface to thought&amp;quot; (McDonald 1987). From a psychological point of view, there is a certain amount of empirical evidence for shared processors or facilities (Jackendoff 1987), From a system engineering view, a bidirectional system produces utterances only from that subset of language that it is capable to understand. Therefore, inconsistencies of the language behaviour of the system can be avoided (Jacobs 1988). A fundamental requirement of a bidirectional knowledge base is that it be represented declaratively (Appelt 1987). From this viewpoint one can distinguish two different types of bidirectional natural language systems: * Thanks to Klaus Netter, Karel Oliva, Norbert Reithingcr, Harald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall into the first class, i.e. they use different operations for both directions (cf. Hoeppner et al. 1983; Busemann a</context>
</contexts>
<marker>Appelt, 1987</marker>
<rawString>Appelt, D. E. 1987 &amp;quot;Bidirectional Grammars and the Design of Natural Language Generation Systems,&amp;quot; In Y. Wilks (ed.) Theoretical Issues in Natural Processing-3, New Mexico State University, Las Cruces, New Mexico, 185-191.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Busemann</author>
<author>C Hauenschild</author>
</authors>
<title>A Constructive View of GPSG or How to Make It Work,&amp;quot;</title>
<date>1988</date>
<booktitle>Proceedings of the 12th International Conference on Computational Linguistics,</booktitle>
<pages>77--82</pages>
<contexts>
<context position="2207" citStr="Busemann and Hauenschild 1988" startWordPosition="323" endWordPosition="326">pelt 1987). From this viewpoint one can distinguish two different types of bidirectional natural language systems: * Thanks to Klaus Netter, Karel Oliva, Norbert Reithingcr, Harald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall into the first class, i.e. they use different operations for both directions (cf. Hoeppner et al. 1983; Busemann and Hauenschild 1988; Allgayer et al. 1989) Currently, it is an open question what degree of bidirectionality should or could be desired (cf. Appelt 1987; Mann 1987; McDonald 1987; Shieber 1988; Jacobs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and processing, e.g., Koskenniemi&apos;s</context>
</contexts>
<marker>Busemann, Hauenschild, 1988</marker>
<rawString>Busemann, S. and Hauenschild, C. 1988 &amp;quot;A Constructive View of GPSG or How to Make It Work,&amp;quot; Proceedings of the 12th International Conference on Computational Linguistics, 77-82.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Dymetman</author>
<author>P Isabelle</author>
</authors>
<title>Reversible Logic Grammars for Machine Translation,&amp;quot;</title>
<date>1988</date>
<booktitle>Proceedings of the 2nd International Conference on Theoretical and Methodological Issues in Machine Translation of Natural Language.</booktitle>
<contexts>
<context position="2983" citStr="Dymetman and Isabelle 1988" startWordPosition="439" endWordPosition="442">nald 1987; Shieber 1988; Jacobs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and processing, e.g., Koskenniemi&apos;s (1984) two-level model of morphology. Recently, there are first approaches ,to uniform architectures for grammatical processing (e.g., Shieber 1988; Dymetman and Isabelle 1988; Dymetman et al. 1990). These architectures are based on Pereira and Warren&apos;s (1983) paradigm of parsing as deduction. In principle, parsing and generation are viewed as a single parametrized deduction process. PROBLEMS OF BIDIRECTIONAL GRAMMATICAL PROCESSING 1Besides these two classes there are also systems that use different knowledge sources that are compiled from the same source (e.g., Horacek and Pyka 1988) and systems that use common basic representation devices (e.g.. Lancel et,al. 1988; Neumann and Finkler 1990). - 245 - Currently developed approaches that consider parsing as well as </context>
</contexts>
<marker>Dymetman, Isabelle, 1988</marker>
<rawString>Dymetman, M. and Isabelle, P. 1988 &amp;quot;Reversible Logic Grammars for Machine Translation,&amp;quot; Proceedings of the 2nd International Conference on Theoretical and Methodological Issues in Machine Translation of Natural Language.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Dymetman</author>
<author>P Isabelle</author>
<author>F Perrault</author>
</authors>
<title>A Symmetrical Approach to Parsing and Generation,&amp;quot;</title>
<date>1990</date>
<booktitle>Proceedings of the 13th International Conference on Computational Linguistics,</booktitle>
<pages>90--96</pages>
<contexts>
<context position="3006" citStr="Dymetman et al. 1990" startWordPosition="443" endWordPosition="446">obs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and processing, e.g., Koskenniemi&apos;s (1984) two-level model of morphology. Recently, there are first approaches ,to uniform architectures for grammatical processing (e.g., Shieber 1988; Dymetman and Isabelle 1988; Dymetman et al. 1990). These architectures are based on Pereira and Warren&apos;s (1983) paradigm of parsing as deduction. In principle, parsing and generation are viewed as a single parametrized deduction process. PROBLEMS OF BIDIRECTIONAL GRAMMATICAL PROCESSING 1Besides these two classes there are also systems that use different knowledge sources that are compiled from the same source (e.g., Horacek and Pyka 1988) and systems that use common basic representation devices (e.g.. Lancel et,al. 1988; Neumann and Finkler 1990). - 245 - Currently developed approaches that consider parsing as well as generation (e.g., Shieb</context>
</contexts>
<marker>Dymetman, Isabelle, Perrault, 1990</marker>
<rawString>Dymetman, M.; Isabelle P. and Perrault, F. 1990 &amp;quot;A Symmetrical Approach to Parsing and Generation,&amp;quot; Proceedings of the 13th International Conference on Computational Linguistics, 90-96.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Finkler</author>
<author>G Neumann</author>
</authors>
<title>POPELHOW: A Distributed Parallel Model for Incremental Natural Language Production with Feedback,&amp;quot;</title>
<date>1989</date>
<booktitle>Proceedings of the Eleventh International Joint Conference on Artificial Intelligence,</booktitle>
<pages>1518--1523</pages>
<contexts>
<context position="14965" citStr="Finkler and Neumann (1989)" startWordPosition="2303" endWordPosition="2306">the generation from a logical form, the grammatical process is able to call the conceptual module&apos;s attention if a subphrase causes ambiguity. Thus it is not necessary that the conceptual module has detailed information about the grammar. The flow of control within a system based on an interleaved approach is bidirectional. E.g., during the generation of an utterance partial structures are analysed to avoid unnecessary ambiguities. The bidirectional flow of control supports incremental processing: it is possible to start processing of partial structures before the whole structure is known. In Finkler and Neumann (1989) and Neumann and Finkler (1990) we have already described an implemented generation system (named POPEL-HOW) that realizes an incremental and bidirectional flow of control based on a uniform parallel processing model. The incremental and bidirectional flow of control has two main advantages during generation. Firstly, the determination of contents can be done on the basis of conceptual considerations only, because POPEL-HOW is flexible enough to handle underspecified input. Secondly, the conceptualizer has to regard feedback from POPEL-HOW during the computation of the further selection proces</context>
</contexts>
<marker>Finkler, Neumann, 1989</marker>
<rawString>Finkler, W. and Neumann, G. 1989 &amp;quot;POPELHOW: A Distributed Parallel Model for Incremental Natural Language Production with Feedback,&amp;quot; Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, 1518-1523.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Hoeppner</author>
<author>T Christaller</author>
<author>H Marburger</author>
<author>K Monk</author>
<author>B Nebel</author>
<author>M O&apos;Leary</author>
<author>W Wahlster</author>
</authors>
<title>Beyond Domain-Independence: Experience with the Development of a German Language Access System To Higly Diverse Background Systems,&amp;quot;</title>
<date>1983</date>
<booktitle>Proceedings of the 8th International Joint Conference on Artificial Intelligence,</booktitle>
<pages>643--646</pages>
<contexts>
<context position="2176" citStr="Hoeppner et al. 1983" startWordPosition="319" endWordPosition="322">nted declaratively (Appelt 1987). From this viewpoint one can distinguish two different types of bidirectional natural language systems: * Thanks to Klaus Netter, Karel Oliva, Norbert Reithingcr, Harald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall into the first class, i.e. they use different operations for both directions (cf. Hoeppner et al. 1983; Busemann and Hauenschild 1988; Allgayer et al. 1989) Currently, it is an open question what degree of bidirectionality should or could be desired (cf. Appelt 1987; Mann 1987; McDonald 1987; Shieber 1988; Jacobs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and </context>
<context position="10061" citStr="Hoeppner et al. 1983" startWordPosition="1543" endWordPosition="1546">Because the source of an ambiguous utterance is not used directly to guide the generation process it is possible that the newly generated structure is still ambiguous (and it may happen that the same ambiguous structure is generated again). This results in inefficient systems because in general the loop between the , isolated processes must be performed several times. The advantage of a uniform architecture is that intermediate results of one direction can 4For example, the complete structure of a produced utterance is analysed during the &apos;anticipation-feedbackloop&apos; of the HAM-ANS system (see Hoeppner et al. 1983) to determine whether it can be actually uttered elliptic or not. immediately be used in the opposite direction to determine the ambiguous information in due time. 3 BIDIRECTIONALITY SUPPORTS FLEXIBLE AND EFFICIENT GENERATION One of the disadvantages of currently developed generation systems is that they view the structure of linguistic knowledge only statically. If alternatives exist for a particular linguistic expression, decision points are evaluated to determine the appropriate actual utterance. It is necessary to specify corresponding decision points for all possible utterances otherwise </context>
</contexts>
<marker>Hoeppner, Christaller, Marburger, Monk, Nebel, O&apos;Leary, Wahlster, 1983</marker>
<rawString>Hoeppner, W.; Christaller, T.; Marburger, H.; Monk, K.; Nebel, B.; O&apos;Leary, M. and Wahlster, W. 1983 &amp;quot;Beyond Domain-Independence: Experience with the Development of a German Language Access System To Higly Diverse Background Systems,&amp;quot; Proceedings of the 8th International Joint Conference on Artificial Intelligence, 643-646.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Horacek</author>
<author>C Pyka</author>
</authors>
<title>Anwendbarkeit von Unifikationsgrammatiken fiir effizientes Generieren,&amp;quot;</title>
<date>1988</date>
<booktitle>4 .Osterreichische Artificial-Intelligence-Tagung,</booktitle>
<pages>171--177</pages>
<editor>In H. Trost (ed.)</editor>
<publisher>Springer,</publisher>
<location>Berlin,</location>
<contexts>
<context position="3399" citStr="Horacek and Pyka 1988" startWordPosition="500" endWordPosition="503">rocessing, e.g., Koskenniemi&apos;s (1984) two-level model of morphology. Recently, there are first approaches ,to uniform architectures for grammatical processing (e.g., Shieber 1988; Dymetman and Isabelle 1988; Dymetman et al. 1990). These architectures are based on Pereira and Warren&apos;s (1983) paradigm of parsing as deduction. In principle, parsing and generation are viewed as a single parametrized deduction process. PROBLEMS OF BIDIRECTIONAL GRAMMATICAL PROCESSING 1Besides these two classes there are also systems that use different knowledge sources that are compiled from the same source (e.g., Horacek and Pyka 1988) and systems that use common basic representation devices (e.g.. Lancel et,al. 1988; Neumann and Finkler 1990). - 245 - Currently developed approaches that consider parsing as well as generation (e.g., Shieber 1988; Shieber et al. 1990; Dymetman et al. 1990; van Noord 1990; Zajac and Emele 1990) assume: • that both tasks take place independently from each other, i.e. an utterance is either generated or parsed and • that grammatical processing can be performed without considerations of discourse. A great problem with this view is that it offers no solution of the problem of choice between parap</context>
</contexts>
<marker>Horacek, Pyka, 1988</marker>
<rawString>Horacek, H. and Pyka, C. 1988 &amp;quot;Anwendbarkeit von Unifikationsgrammatiken fiir effizientes Generieren,&amp;quot; In H. Trost (ed.) 4 .Osterreichische Artificial-Intelligence-Tagung, Springer, Berlin, 171-177.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Jackendoff</author>
</authors>
<title>Consciousness and the Computational Mind,&amp;quot; Cambridge Massachussetts:</title>
<date>1987</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="1233" citStr="Jackendoff 1987" startWordPosition="179" endWordPosition="180">directionality has been gaining importance since the growing rate of research on natural language generation over the last years offers us deeper insights into this cognitive ability of humans. There are theoretical as well as practical reasons for adopting bidirectionality. Theoretically, the assumption of common knowledge sources for both generation and analysis is essential for the view of language as &amp;quot;an interpersonal medium and an interface to thought&amp;quot; (McDonald 1987). From a psychological point of view, there is a certain amount of empirical evidence for shared processors or facilities (Jackendoff 1987), From a system engineering view, a bidirectional system produces utterances only from that subset of language that it is capable to understand. Therefore, inconsistencies of the language behaviour of the system can be avoided (Jacobs 1988). A fundamental requirement of a bidirectional knowledge base is that it be represented declaratively (Appelt 1987). From this viewpoint one can distinguish two different types of bidirectional natural language systems: * Thanks to Klaus Netter, Karel Oliva, Norbert Reithingcr, Harald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the</context>
</contexts>
<marker>Jackendoff, 1987</marker>
<rawString>Jackendoff, R. 1987 &amp;quot;Consciousness and the Computational Mind,&amp;quot; Cambridge Massachussetts: MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P S Jacobs</author>
</authors>
<title>Achieving Bidirectionality,&amp;quot;</title>
<date>1988</date>
<booktitle>Proceedings of the 12th International Conference on Computational Linguistics,</booktitle>
<pages>267--274</pages>
<contexts>
<context position="1473" citStr="Jacobs 1988" startWordPosition="215" endWordPosition="216"> for adopting bidirectionality. Theoretically, the assumption of common knowledge sources for both generation and analysis is essential for the view of language as &amp;quot;an interpersonal medium and an interface to thought&amp;quot; (McDonald 1987). From a psychological point of view, there is a certain amount of empirical evidence for shared processors or facilities (Jackendoff 1987), From a system engineering view, a bidirectional system produces utterances only from that subset of language that it is capable to understand. Therefore, inconsistencies of the language behaviour of the system can be avoided (Jacobs 1988). A fundamental requirement of a bidirectional knowledge base is that it be represented declaratively (Appelt 1987). From this viewpoint one can distinguish two different types of bidirectional natural language systems: * Thanks to Klaus Netter, Karel Oliva, Norbert Reithingcr, Harald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall</context>
</contexts>
<marker>Jacobs, 1988</marker>
<rawString>Jacobs, P. S. 1988 &amp;quot;Achieving Bidirectionality,&amp;quot; Proceedings of the 12th International Conference on Computational Linguistics, 267-274.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Koskenniemi</author>
</authors>
<title>A General Computational Model for Word-Form Recognition and Production,&amp;quot;</title>
<date>1984</date>
<booktitle>Proceedings of the 10th International Conference on Computational Linguistics,</booktitle>
<pages>178--181</pages>
<marker>Koskenniemi, 1984</marker>
<rawString>Koskenniemi, K. 1984 &amp;quot;A General Computational Model for Word-Form Recognition and Production,&amp;quot; Proceedings of the 10th International Conference on Computational Linguistics, 178-181.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J M Lancet</author>
<author>M Otani</author>
<author>N Simonin</author>
<author>L Danlos</author>
</authors>
<title>SAGE: a Sentence Parsing and Generation System,&amp;quot;</title>
<date>1988</date>
<booktitle>Proceedings of the 12th International Conference on Computational Linguistics,</booktitle>
<pages>359--364</pages>
<marker>Lancet, Otani, Simonin, Danlos, 1988</marker>
<rawString>Lancet, J.M.; Otani, M.; Simonin, N. and Danlos, L. 1988 &amp;quot;SAGE: a Sentence Parsing and Generation System,&amp;quot; Proceedings of the 12th International Conference on Computational Linguistics, 359-364.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W C Mann</author>
</authors>
<title>What is Special About Natural Language Generation Research?,&amp;quot; In</title>
<date>1987</date>
<booktitle>Theoretical Issues in Natural Processing3,</booktitle>
<pages>206--211</pages>
<editor>Y. Wilks (ed.)</editor>
<institution>Mexico State University, Las Cruces,</institution>
<location>New</location>
<contexts>
<context position="2351" citStr="Mann 1987" startWordPosition="349" endWordPosition="350">ithingcr, Harald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall into the first class, i.e. they use different operations for both directions (cf. Hoeppner et al. 1983; Busemann and Hauenschild 1988; Allgayer et al. 1989) Currently, it is an open question what degree of bidirectionality should or could be desired (cf. Appelt 1987; Mann 1987; McDonald 1987; Shieber 1988; Jacobs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and processing, e.g., Koskenniemi&apos;s (1984) two-level model of morphology. Recently, there are first approaches ,to uniform architectures for grammatical processing (e.g., Shieber </context>
</contexts>
<marker>Mann, 1987</marker>
<rawString>Mann, W. C. 1987 &amp;quot;What is Special About Natural Language Generation Research?,&amp;quot; In Y. Wilks (ed.) Theoretical Issues in Natural Processing3, New Mexico State University, Las Cruces, New Mexico, 206-211.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D D McDonald</author>
</authors>
<title>No Better, but no Worse, than People,&amp;quot; In</title>
<date>1987</date>
<booktitle>Theoretical Issues in Natural Processing-3,</booktitle>
<pages>200--205</pages>
<editor>Y. Wilks (ed.)</editor>
<institution>Mexico State University, Las Cruces,</institution>
<location>New</location>
<contexts>
<context position="1094" citStr="McDonald 1987" startWordPosition="158" endWordPosition="159">ion process. It will be shown that this view supports flexible and efficient natural language processing. 1 INTRODUCTION The aspect of bidirectionality has been gaining importance since the growing rate of research on natural language generation over the last years offers us deeper insights into this cognitive ability of humans. There are theoretical as well as practical reasons for adopting bidirectionality. Theoretically, the assumption of common knowledge sources for both generation and analysis is essential for the view of language as &amp;quot;an interpersonal medium and an interface to thought&amp;quot; (McDonald 1987). From a psychological point of view, there is a certain amount of empirical evidence for shared processors or facilities (Jackendoff 1987), From a system engineering view, a bidirectional system produces utterances only from that subset of language that it is capable to understand. Therefore, inconsistencies of the language behaviour of the system can be avoided (Jacobs 1988). A fundamental requirement of a bidirectional knowledge base is that it be represented declaratively (Appelt 1987). From this viewpoint one can distinguish two different types of bidirectional natural language systems: *</context>
<context position="2366" citStr="McDonald 1987" startWordPosition="351" endWordPosition="352">arald Trost and Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall into the first class, i.e. they use different operations for both directions (cf. Hoeppner et al. 1983; Busemann and Hauenschild 1988; Allgayer et al. 1989) Currently, it is an open question what degree of bidirectionality should or could be desired (cf. Appelt 1987; Mann 1987; McDonald 1987; Shieber 1988; Jacobs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and processing, e.g., Koskenniemi&apos;s (1984) two-level model of morphology. Recently, there are first approaches ,to uniform architectures for grammatical processing (e.g., Shieber 1988; Dymetman </context>
</contexts>
<marker>McDonald, 1987</marker>
<rawString>McDonald D. D. 1987 &amp;quot;No Better, but no Worse, than People,&amp;quot; In Y. Wilks (ed.) Theoretical Issues in Natural Processing-3, New Mexico State University, Las Cruces, New Mexico, 200-205.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D D McDonald</author>
<author>M W Meteer</author>
<author>J D Pustejovsky</author>
</authors>
<title>Factors Contributing to Efficiency in Natural Language Generation,&amp;quot;</title>
<date>1987</date>
<booktitle>Natural Language Generation: New Results in Artificial Intelligence, Psychology and Linguistics, Dordrecht: Martinus Nijhoff,</booktitle>
<pages>159--182</pages>
<editor>In G. Kempen (ed.)</editor>
<contexts>
<context position="13148" citStr="McDonald et al. (1987)" startWordPosition="2027" endWordPosition="2030">derstand the new information. I do not want to argue that all choices are determined by means of language use of others. But, when structures that are determined during analysis are considered during generation, the number of decision points or parameters which have to be specified during the development of a generation system is reduced. This leads to more flexibility: not all necessary parameters need to be specified in the input of a generator because decision points can also be set dynamically during run-time. This dynamic behaviour of a generation system will increase efficiency, too. As McDonald et al. (1987) define, one generator design is more efficient than another, if it is able to solve the same problem with fewer steps. They argue that &amp;quot;the key element governing the difficulty of utterance production is the degree of familiarity with the situation&amp;quot;. The efficiency of the generation process depends on the competence and experience one has acquired for a particular situation. In such situations the generation process performs its task by using compiled knowledge and preferences. Currently, it is a great problem how compiled knowledge is acquired dynamically and how it is activated in particula</context>
</contexts>
<marker>McDonald, Meteer, Pustejovsky, 1987</marker>
<rawString>McDonald, D. D.; Meteer, M. W. and Pustejovsky, J. D. 1987 &amp;quot;Factors Contributing to Efficiency in Natural Language Generation,&amp;quot; In G. Kempen (ed.) Natural Language Generation: New Results in Artificial Intelligence, Psychology and Linguistics, Dordrecht: Martinus Nijhoff, 159-182.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Neumann</author>
<author>W Finkler</author>
</authors>
<title>A HeadDriven Approach to Incremental and Parallel Generation of Syntactic Structures,&amp;quot;</title>
<date>1990</date>
<booktitle>Proceedings of the 13th International Conference on Computational Linguistics,</booktitle>
<pages>288--293</pages>
<contexts>
<context position="3509" citStr="Neumann and Finkler 1990" startWordPosition="516" endWordPosition="519">to uniform architectures for grammatical processing (e.g., Shieber 1988; Dymetman and Isabelle 1988; Dymetman et al. 1990). These architectures are based on Pereira and Warren&apos;s (1983) paradigm of parsing as deduction. In principle, parsing and generation are viewed as a single parametrized deduction process. PROBLEMS OF BIDIRECTIONAL GRAMMATICAL PROCESSING 1Besides these two classes there are also systems that use different knowledge sources that are compiled from the same source (e.g., Horacek and Pyka 1988) and systems that use common basic representation devices (e.g.. Lancel et,al. 1988; Neumann and Finkler 1990). - 245 - Currently developed approaches that consider parsing as well as generation (e.g., Shieber 1988; Shieber et al. 1990; Dymetman et al. 1990; van Noord 1990; Zajac and Emele 1990) assume: • that both tasks take place independently from each other, i.e. an utterance is either generated or parsed and • that grammatical processing can be performed without considerations of discourse. A great problem with this view is that it offers no solution of the problem of choice between paraphrases in generation: The proposed approaches assume - more or less explicitly - modularity between the concep</context>
<context position="14996" citStr="Neumann and Finkler (1990)" startWordPosition="2308" endWordPosition="2311">orm, the grammatical process is able to call the conceptual module&apos;s attention if a subphrase causes ambiguity. Thus it is not necessary that the conceptual module has detailed information about the grammar. The flow of control within a system based on an interleaved approach is bidirectional. E.g., during the generation of an utterance partial structures are analysed to avoid unnecessary ambiguities. The bidirectional flow of control supports incremental processing: it is possible to start processing of partial structures before the whole structure is known. In Finkler and Neumann (1989) and Neumann and Finkler (1990) we have already described an implemented generation system (named POPEL-HOW) that realizes an incremental and bidirectional flow of control based on a uniform parallel processing model. The incremental and bidirectional flow of control has two main advantages during generation. Firstly, the determination of contents can be done on the basis of conceptual considerations only, because POPEL-HOW is flexible enough to handle underspecified input. Secondly, the conceptualizer has to regard feedback from POPEL-HOW during the computation of the further selection process. This means, an incremental s</context>
</contexts>
<marker>Neumann, Finkler, 1990</marker>
<rawString>Neumann, G. and Finkler, W. 1990 &amp;quot;A HeadDriven Approach to Incremental and Parallel Generation of Syntactic Structures,&amp;quot; Proceedings of the 13th International Conference on Computational Linguistics, 288-293.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G van Noord</author>
</authors>
<title>Reversible Unification Based Machine Translation,&amp;quot;</title>
<date>1990</date>
<booktitle>Proceedings of the 13th International Conference on Computational Linguistics,</booktitle>
<pages>299--304</pages>
<marker>van Noord, 1990</marker>
<rawString>van Noord, G. 1990 &amp;quot;Reversible Unification Based Machine Translation,&amp;quot; Proceedings of the 13th International Conference on Computational Linguistics, 299-304.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F C N Pereira</author>
<author>D H D Warren</author>
</authors>
<title>Parsing as Deduction, &amp;quot;</title>
<date>1983</date>
<booktitle>Proceedings of the 21th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>137--144</pages>
<marker>Pereira, Warren, 1983</marker>
<rawString>Pereira, F. C. N. and Warren, D. H. D. 1983 &amp;quot;Parsing as Deduction, &amp;quot; Proceedings of the 21th Annual Meeting of the Association for Computational Linguistics, 137-144.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Proudian</author>
<author>C Pollard</author>
</authors>
<title>Parsing Head. Driven Phrase Structure Grammar, &amp;quot;</title>
<date>1985</date>
<booktitle>Proceedings of the 23rd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>167--171</pages>
<contexts>
<context position="18211" citStr="Proudian and Pollard (1985)" startWordPosition="2796" endWordPosition="2799">ions. In the first phase of the algorithm the maximal projection for all head elements are computed (or predicted) bottom-up. Phrases are then combined top-down. The completion step is controlled by syntactic and semantic information inherited from lexical heads and by the principles of HPSG. 5The resulting structure of the generation process as well as the input structure of the parsing process is written language, therefore we use the feature &apos;graph&apos; instead of &apos;phon&apos; which is preferably used in Pollard and Sag (1987). OBasic ideas of the approach are influenced by the head-driven parser of Proudian and Pollard (1985). Because heads are processed first the completion of structures must be performed in left as well as in right direction. The approach supports the ID/LP format of rules. But it is an open question whether linear precendence can be processed in the same way for generation and parsing. The problem is that during parsing the task of LP rules is to filter out ungrammatical structures. During generation the task of LP rules can be seen as an ordering criterion. But in this case the problem of choice between paraphrases emerges. In POPEL-HOW it is assumed that the order of activation of concepts (w</context>
</contexts>
<marker>Proudian, Pollard, 1985</marker>
<rawString>Proudian, D. and Pollard, C. 1985 &amp;quot;Parsing Head. Driven Phrase Structure Grammar, &amp;quot; Proceedings of the 23rd Annual Meeting of the Association for Computational Linguistics, 167-171.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Pollard</author>
<author>I Sag</author>
</authors>
<title>Information-based syntax and semantics,&amp;quot;</title>
<date>1987</date>
<booktitle>CLS! Lecture Notes 13, Center for the Study of Language and Information,</booktitle>
<location>Standford, CA.</location>
<contexts>
<context position="16787" citStr="Pollard and Sag 1987" startWordPosition="2574" endWordPosition="2577"> where it will be investigated how interleaving of parsing and generation can be efficiently performed and how such a model can be used for increasing flexibility and efficiency during natural language processing. Fig. 1 (next page) shows the schematic structure of its architecture. The core of the system is a uniform parametrized deduction process. The main task for the process in both directions is the determination of the corresponding syntactic information that functions as an interface between graphematic and semantic information (a formalism based on Headdriven Phrase Structure Grammar (Pollard and Sag 1987) will be used). - 248 - **manila •apr•ssion utlerano• Fig. I: Schematic structure of BiLD The task of the deduction process during generation is to construct the graphematic form of a specified semantical feature description.5 For example, to yield the utterance &amp;quot;A man sings&amp;quot; the deduction process gets as input the semantic feature structure and deduces the graphematic structure [graph : (A_man_sings.)] by means of successive application of lexical and grammatical information. In the Same way the deduction process computes from the graphematic structure an appropriate semantic structure in par</context>
<context position="18109" citStr="Pollard and Sag (1987)" startWordPosition="2780" endWordPosition="2783">f a uniform algorithm for HPSG. The main idea6 is that the approach is head-driven in both directions. In the first phase of the algorithm the maximal projection for all head elements are computed (or predicted) bottom-up. Phrases are then combined top-down. The completion step is controlled by syntactic and semantic information inherited from lexical heads and by the principles of HPSG. 5The resulting structure of the generation process as well as the input structure of the parsing process is written language, therefore we use the feature &apos;graph&apos; instead of &apos;phon&apos; which is preferably used in Pollard and Sag (1987). OBasic ideas of the approach are influenced by the head-driven parser of Proudian and Pollard (1985). Because heads are processed first the completion of structures must be performed in left as well as in right direction. The approach supports the ID/LP format of rules. But it is an open question whether linear precendence can be processed in the same way for generation and parsing. The problem is that during parsing the task of LP rules is to filter out ungrammatical structures. During generation the task of LP rules can be seen as an ordering criterion. But in this case the problem of choi</context>
</contexts>
<marker>Pollard, Sag, 1987</marker>
<rawString>Pollard, C. and Sag, I. 1987 &amp;quot;Information-based syntax and semantics,&amp;quot; CLS! Lecture Notes 13, Center for the Study of Language and Information, Standford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S M Shieber</author>
</authors>
<title>A Uniform Architecture for Parsing and Generation,&amp;quot;</title>
<date>1988</date>
<booktitle>Proceedings of the 12th International Conference on Computational Linguistics,</booktitle>
<pages>614--619</pages>
<contexts>
<context position="2380" citStr="Shieber 1988" startWordPosition="353" endWordPosition="354"> Hans Uszkoreit for fruitful discussions about the aspects of the paper&apos;s contents. • systems that use uniform knowledge sources, but different processes • systems that use uniform knowledge sources as well as uniform processes1 Up to now, systems that are capable of analysing and producing language fall into the first class, i.e. they use different operations for both directions (cf. Hoeppner et al. 1983; Busemann and Hauenschild 1988; Allgayer et al. 1989) Currently, it is an open question what degree of bidirectionality should or could be desired (cf. Appelt 1987; Mann 1987; McDonald 1987; Shieber 1988; Jacobs 1988). One of the reasons could be that the formal specification of some tasks (e.g., the determination of content in generation) is currently not well understood in order to decide whether they could be bidirectional in principle. But in some research areas uniform processing models have been developed that are based on formalisms which are well suited for uniform representation and processing, e.g., Koskenniemi&apos;s (1984) two-level model of morphology. Recently, there are first approaches ,to uniform architectures for grammatical processing (e.g., Shieber 1988; Dymetman and Isabelle 1</context>
<context position="3613" citStr="Shieber 1988" startWordPosition="534" endWordPosition="535">1990). These architectures are based on Pereira and Warren&apos;s (1983) paradigm of parsing as deduction. In principle, parsing and generation are viewed as a single parametrized deduction process. PROBLEMS OF BIDIRECTIONAL GRAMMATICAL PROCESSING 1Besides these two classes there are also systems that use different knowledge sources that are compiled from the same source (e.g., Horacek and Pyka 1988) and systems that use common basic representation devices (e.g.. Lancel et,al. 1988; Neumann and Finkler 1990). - 245 - Currently developed approaches that consider parsing as well as generation (e.g., Shieber 1988; Shieber et al. 1990; Dymetman et al. 1990; van Noord 1990; Zajac and Emele 1990) assume: • that both tasks take place independently from each other, i.e. an utterance is either generated or parsed and • that grammatical processing can be performed without considerations of discourse. A great problem with this view is that it offers no solution of the problem of choice between paraphrases in generation: The proposed approaches assume - more or less explicitly - modularity between the conceptual and grammatical component of a natural language system.2 A great advantage of a modular design espe</context>
<context position="5744" citStr="Shieber (1988)" startWordPosition="861" endWordPosition="862">f the grammar must not contain pragmatical or stylistical information because of the modular design. But then the process can only choose randomly between paraphrases during generation and this means that the intended meaning will possibly not be conveyed. Ideally, a logical language would be helpful which necessarily and sufficiently represents all meaning distinctions of natural 2By a conceptual component I mean either the whatto-say component of a generation system or the component that performs inference, plan recognition or anaphora resolution of an understanding system. language. But as Shieber (1988) states &amp;quot;this ... is just the central problem of knowledge representation for natural language in general&amp;quot;. Currently, there exist only approximate solutions to this problem for example the use of canonical logical forms (cf. Shieber 88).3 But this still offers no solution of the problem of choice between paraphrases. In this paper it will be argued that the following two points will contribute to an approximate solution: • interleaved parsing and generation • using the language use of interlocutors as an additional access criterion to linguistic knowledge Interleaved parsing and generation me</context>
</contexts>
<marker>Shieber, 1988</marker>
<rawString>Shieber, S. M. 1988 &amp;quot;A Uniform Architecture for Parsing and Generation,&amp;quot; Proceedings of the 12th International Conference on Computational Linguistics, 614-619.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S M Shieber</author>
<author>G van Noord</author>
<author>R M Moore</author>
<author>F C P Pereira</author>
</authors>
<title>A Semantic Head-Driven Generation Algorithm for Unification-Based Formalisms,&amp;quot;</title>
<date>1989</date>
<booktitle>Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>7--17</pages>
<marker>Shieber, van Noord, Moore, Pereira, 1989</marker>
<rawString>Shieber, S. M.; van Noord, G.; Moore, R. M. and Pereira, F. C: P. 1989 &amp;quot;A Semantic Head-Driven Generation Algorithm for Unification-Based Formalisms,&amp;quot; Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics, 7-17.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Uszkoreit</author>
</authors>
<title>Strategies for Adding Control Information to Declarative Grammars,&amp;quot;</title>
<date>1991</date>
<tech>Technical Report,</tech>
<institution>Institute for Computational Linguistics, University of Saarbriicken, FRG.</institution>
<contexts>
<context position="19271" citStr="Uszkoreit 1991" startWordPosition="2970" endWordPosition="2971">ering criterion. But in this case the problem of choice between paraphrases emerges. In POPEL-HOW it is assumed that the order of activation of concepts (which is determined using pragmatical knowledge) should be maintained if it is syntactically wellformed; otherwise the segments are reordered. Whether such viewpoint is acceptable for generation in general is still open. 4.2 ASPECTS OF CONTROL STRUCTURE A major aspect of the BiLD project is that specific parametrization of the deduction process is represented in the lexicon as well as in the grammar to obtain efficient structures of control (Uszkoreit 1991). The main idea is that preference values are assigned to the elements (disjuncts or conjuncts) of feature descriptions. For example, in HPSG all lexical entries are put together into one large disjunctive form. From a purely declarative point of view these elements are unordered. But a preference structure is used during processing in order to guide the process of lexical choice efficiently which itself influences the grammatical process. To support flexibility and efficiency (in the way described in section 3) the language use of interlocutors will be considered to influence the preference v</context>
</contexts>
<marker>Uszkoreit, 1991</marker>
<rawString>Uszkoreit, H. 1991 &amp;quot;Strategies for Adding Control Information to Declarative Grammars,&amp;quot; Technical Report, Institute for Computational Linguistics, University of Saarbriicken, FRG.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Zajac</author>
<author>M Emele</author>
</authors>
<title>Typed Unification Grammars,&amp;quot;</title>
<date>1990</date>
<booktitle>Proceedings of the 13th International Conference on Computational Linguistics,</booktitle>
<pages>293--298</pages>
<contexts>
<context position="3695" citStr="Zajac and Emele 1990" startWordPosition="547" endWordPosition="550">igm of parsing as deduction. In principle, parsing and generation are viewed as a single parametrized deduction process. PROBLEMS OF BIDIRECTIONAL GRAMMATICAL PROCESSING 1Besides these two classes there are also systems that use different knowledge sources that are compiled from the same source (e.g., Horacek and Pyka 1988) and systems that use common basic representation devices (e.g.. Lancel et,al. 1988; Neumann and Finkler 1990). - 245 - Currently developed approaches that consider parsing as well as generation (e.g., Shieber 1988; Shieber et al. 1990; Dymetman et al. 1990; van Noord 1990; Zajac and Emele 1990) assume: • that both tasks take place independently from each other, i.e. an utterance is either generated or parsed and • that grammatical processing can be performed without considerations of discourse. A great problem with this view is that it offers no solution of the problem of choice between paraphrases in generation: The proposed approaches assume - more or less explicitly - modularity between the conceptual and grammatical component of a natural language system.2 A great advantage of a modular design especially for uniform architectures is that it is possible to view the grammatical co</context>
</contexts>
<marker>Zajac, Emele, 1990</marker>
<rawString>Zajac, R. and Emele, M. 1990 &amp;quot;Typed Unification Grammars,&amp;quot; Proceedings of the 13th International Conference on Computational Linguistics, 293-298.</rawString>
</citation>
<citation valid="false">
<pages>250</pages>
<marker></marker>
<rawString>- 250 -</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>