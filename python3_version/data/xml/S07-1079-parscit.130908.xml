<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.137807">
<title confidence="0.736309">
UC3M_13: Disambiguation of Person Names Based on the
Composition of Simple Bags of Typed Terms
David César María Teresa
del Valle-Agudo de Pablo-Sánchez Vicente-Díez
Universidad Carlos III de Madrid
Escuela Politécnica Superior
Av. de la Universidad, 30 – 28911
Leganés (Madrid) Spain
</title>
<email confidence="0.981191">
{dvalle, cdepablo, tvicente}@inf.uc3m.es
</email>
<sectionHeader confidence="0.995582" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.995699916666667">
This paper describes a system designed to
disambiguate person names in a set of Web
pages. In our approach Web documents are
represented as different sets of features or
terms of different types (bag of words,
URLs, names and numbers). We apply Ag-
glomerative Vector Space clustering that
uses the similarity between pairs of analo-
gous feature sets. This system achieved a
value of 66% for Fα=0.2 and a value of 48%
for Fα=0.5 in the Web People Search Task at
SemEval-2007 (Artiles et al., 2007).
</bodyText>
<sectionHeader confidence="0.998939" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999926041666667">
Name queries account for a substantial part of Web
queries in commercial search engines. Name que-
ries often aim at retrieving information about par-
ticular persons. Nevertheless, the same query or
mention name usually recalls several people and
the user is unaware of the potential ambiguity and
expects to find the related person after skimming
some results.
Similar problems are also common for products,
organizations and almost any other named object
in real world. A related problem appears for differ-
ent kinds of objects receiving the same name. For
example, Firebird can refer to a car, a guitar, a fic-
tion superhero or a database product among more
than twenty different senses collected in Wikipe-
dia. In all these cases, the user could benefit from a
structured representation that facilitates browsing
results. Other applications like Question Answer-
ing would also benefit from name disambiguation
and person names disambiguation, in particular. In
this work we focus on the task of disambiguating
Web pages retrieved for a person name query as
proposed in the Web People Search Task at SemE-
val-2007.
</bodyText>
<sectionHeader confidence="0.871198" genericHeader="introduction">
2 Background and Related Research
</sectionHeader>
<bodyText confidence="0.999923578947368">
In recent work in named entity disambiguation,
Malin (2005) identifies two different dimensions to
classify approaches to the task depending on the
information type that is used and whether the
method to train the system is supervised or unsu-
pervised. Regarding the information type, Malin
(2006) identifies personal information like bio-
graphical facts (Bagga and Baldwin, 1998; Mann
and Yarowsky, 2003) or relational information
(Bekkerman and McCallum, 05), collocations with
other entities.
Personal name disambiguation has been studied
in relation with citation analysis and record linkage
and their use to improve Web search results have
attracted more interest recently (Guha and Garg
2004; Bollegala, 2006), but it is evaluated only at a
small scale. In contrast Bekkerman and McCallum
(2005) have focused on disambiguating complete
social networks and not only results for one name.
</bodyText>
<sectionHeader confidence="0.986861" genericHeader="method">
3 System description
</sectionHeader>
<bodyText confidence="0.993723428571429">
Web People Search proposes a task to find differ-
ent people sharing the same name referred in a set
of Web pages and associate each of these pages to
these people. To solve the task we added two sim-
plifying assumptions; each document refers only to
one person, and every listed document refers to a
person.
</bodyText>
<page confidence="0.977905">
362
</page>
<bodyText confidence="0.966653444444444">
Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 362–365,
Prague, June 2007. c�2007 Association for Computational Linguistics
Our approach is an unsupervised personal name
disambiguation system according to the classifica-
tion proposed by Malin. In this system the method
applied to solve ambiguity consists of extracting
from each document a set of features, that we
called document context and afterwards to cluster
them according to their similarity
</bodyText>
<subsectionHeader confidence="0.999463">
3.1 Document representation
</subsectionHeader>
<bodyText confidence="0.999980043478261">
In this task we do not have structured information
to estimate similarity. For this reason, the first step
of the system consists of extracting features from
the documents. Since our goal is to develop tech-
niques that work for large amounts of documents,
most of the features are based simply on words,
HTML structure and simple patterns that aim to
substitute more elaborated features based on in-
formation extraction. Features might not have a
direct correspondence with facts that help to iden-
tify a person like date of birth or telephone but, in
some cases, dealing with them instead of with
proper semantic information can be a good ap-
proach. On the other hand, some people features,
as emails or related URLs, are detected through
simple patterns. Other simple patterns like num-
bers can also provide information about some peo-
ple features.
All terms identified by the same pattern are rep-
resented as a bag of terms. Document context is
composed of a set of bags, each containing all the
terms of the document that were captured with a
fixed pattern.
</bodyText>
<subsectionHeader confidence="0.999908">
3.2 Types of Contexts
</subsectionHeader>
<bodyText confidence="0.999790055555555">
The bags of terms used in document contexts are
the following:
a) emails, b) URLs, c) proper names, d) long
numbers (more than four figures), e) short numbers
(up to four figures), f) title terms, g) terms of the
titles of related documents, h) terms contained in
the ‘meta’ tag of the documents, i) terms of em-
phasized text fragments (bold, italic, etc.), j) terms
of the document snippet, and k) terms of the re-
lated documents snippets.
The bags b, f, g, j, and k have been extracted
from the data files provided (snippets, rank, etc.),
whereas a, c, d, e, h and i have been directly ex-
tracted from result pages.
From all the bags of terms, we finally selected to
compound the contexts b, c, d, e, f, g and j as in the
training set they contributed to obtain the best re-
sult.
</bodyText>
<subsectionHeader confidence="0.998855">
3.3 Term normalization and filtering
</subsectionHeader>
<bodyText confidence="0.999938735294117">
Each extracted term is normalized, filtered and
weighted before being added to a bag of terms. A
filter for stopwords is applied to every bag of
words and they are represented in lowercase. Spu-
rious HTML tags and terms under three characters
are also considered stopwords. Bag of numbers are
normalized by removing blanks, hyphens and pa-
renthesis.
In addition to stopwords, terms with low fre-
quency, lower than 0.2 times the frequency of the
more frequent term of each bag of words, are not
considered. Finally the tf-idf value of every term is
associated.
Proper names are extracted with a robust rule
based name recognizer based on surface feature
and some trigger words. It should be emphasized
that over the bag of proper names, a filtering is
implemented to make the detection of co-referents
proper names easier when comparing different ar-
rays. In this way, a similarity measure among
proper names is considered (Camps and Daudé,
2003) more flexible than the simple comparison of
their strings of characters. This approach tolerates
the omission, substitution or inclusion of words in
the proper name, the alteration in the order of the
words, or the substitution of words with initials, as
well as the omission, substitution or inclusion of
characters. First, all proper names that are in the
set of documents are identified, and all similar
proper names according to these relaxed rules are
grouped by the same common term. In this way,
arrays of proper names are rewritten, referencing
each proper name through its common term and
recalculating its frequency.
</bodyText>
<subsectionHeader confidence="0.997574">
3.4 Clustering algorithm
</subsectionHeader>
<bodyText confidence="0.999903818181818">
Our system uses Agglomerative Vector Space
Clustering to group and disambiguate pages. Given
the nature of the problem, it does not need to indi-
cate the number of classes to be obtained in ad-
vance. To determine if two documents should be
assigned to the same cluster, we evaluate the simi-
larity between each pair of bags of terms and, later,
it is determined how many of these pairs have a
similarity over a threshold. For a document to be in
the same cluster we require a minimum number of
similar pairs.
</bodyText>
<page confidence="0.998399">
363
</page>
<bodyText confidence="0.999865166666666">
In order to allow finer adjustments in the num-
ber of similar pairs needed, instead of requiring N
similar pairs, the pairs are arranged in a decreasing
order according to the obtained similarity and it is
checked if the similarity of the nth pair is above or
below the threshold. In this case, interpolation can
be applied, so the number of necessary similar
pairs is not limited to the natural numbers. The
developed system uses linear interpolation to cal-
culate this function.
We use the cosine vector similarity as similarity
measurement.
</bodyText>
<sectionHeader confidence="0.999611" genericHeader="evaluation">
4 Results and Evaluation
</sectionHeader>
<bodyText confidence="0.999915076923077">
For the evaluation the system has been adjusted
with a threshold of similarity of 0.001, 2.5 pairs of
bags of terms above the threshold required for in-
cluding two documents in the same cluster and the
following bags of terms: bags of URLs, proper
names, long and short numbers, terms of titles,
terms of the titles of the related documents and
terms of the document snippets.
With this adjustment it is noticed that some prob-
lems affect the results of the evaluation. The most
important of these problems is the small number of
clusters in which pages are classified. For instance,
Mark Johnson refers to 70 different people in key,
but our system classified his pages in only 14 clus-
ters. Due to this small number of clusters, each
contains more than one person to search, but with a
good recall of pages for each person. Table 1
shows the results obtained for the test set, where P
is the purity, R is the inverse purity, Fα=0.5 repre-
sents the harmonic mean of purity and inverse pu-
rity, and Fα=0.2 is the measure of F that considers
more important inverse purity than purity.
Although at a first sight set 1 shows better re-
sults than set 2 and 3, once we discard the people
names ‘Sharon Goldwater’ and ‘Dekang Lin’
(whose results are above the mean), results are
very similar for all groups. We consider that our
system behaves in a homogenous way regardless
of the proportion of the different types of names
the sets are composed of: less frequent names (with
lower ambiguity) and ‘celebrity’ names (with peo-
ple that dominate the set of pages).
In the other hand, the assumptions considered to
solve the problem (each page references at least
one and only one person) were definitely too naïve,
as there is a lot of discarded pages (in some cases
more than 50% of the pages are not taken into ac-
count) and some pages refer to several people.
These facts also contribute to make lower purity.
</bodyText>
<tableCaption confidence="0.99849">
Table 1. Test results (in percentages)
</tableCaption>
<table confidence="0.999331257142857">
P R Fα=.5 Fα=.2
Set 1 Mark Johnson 20 98 33 54
Sharon Goldwater 99 99 99 99
Robert Moore 26 94 40 61
Leon Barrett 34 97 50 70
Dekang Lin 100 98 99 98
Stephen Clark 21 98 34 56
Frank Keller 25 90 39 59
Jerry Hobbs 52 92 67 80
James Curran 24 98 39 61
Chris Brockett 68 97 80 89
Set 2 Thomas Fraser 33 96 49 70
John Nelson 24 96 38 60
James Hamilton 19 99 32 54
William Dickson 20 99 33 55
James Morehead 26 96 41 62
Patrick Killen 55 99 71 86
George Foster 35 94 51 70
James Davidson 25 98 39 61
Arthur Morgan 54 98 70 84
Thomas Kirk 11 98 20 39
Set 3 Harry Hughes 36 79 50 64
Jude Brown 25 91 39 59
Stephan Johnson 57 92 70 82
Marcy Jackson 32 95 48 68
Karen Peterson 12 99 21 40
Neil Clark 46 98 62 80
Jonathan Brooks 21 95 35 56
Violet Howard 15 88 26 45
Martha Edwards 11 96 20 38
Alvin Cooper 34 95 50 70
Set 1 Average 47 96 58 73
Set 2 Average 30 97 44 64
Set 3 Average 29 93 42 60
Global Average 35 95 48 66
</table>
<sectionHeader confidence="0.992018" genericHeader="conclusions">
5 Conclusions and future works
</sectionHeader>
<bodyText confidence="0.9998757">
This system obtains a good result for inverse purity
to the detriment of purity. This causes a difference
of almost twenty points in the measures of Fα=0.5
and Fα=0.2. In order to correct this weakness, in the
future we will consider that any person can be
mentioned in different pages, and that not all pages
reference to any of the people to search.
Also we will perform additional experiments
regarding parameter tuning. Although the number
of similar contexts considered in these experiments
</bodyText>
<page confidence="0.996243">
364
</page>
<bodyText confidence="0.999478285714286">
is 1.5 (value that maximizes the measure of F),
results show that this value causes larger groups
than those found in search results. Probably a
smaller value for this parameter will divide pages
in more clusters, improving the purity of the result.
Finally, we would like to consider different
methods to select relevant terms.
</bodyText>
<sectionHeader confidence="0.999176" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999650428571428">
A. Bagga and B. Baldwin. 1998. Entity-based cross-
document coreferencing using the vector space
model. In Proc 36th Annual Meeting of the Associa-
tion for Computational Linguistics. San Francisco,
CA.; 79-85.
Artiles, J., Gonzalo, J. and Sekine, S. (2007). Establish-
ing a benchmark for the Web People Search Task:
The Semeval 2007 WePS Track. In Proceedings of
Semeval 2007, Association for Computational Lin-
guistics.
Bradley Malin. 2005. Unsupervised name disambigua-
tion via social network similarity. In Proceedings of
the Workshop on Link Analysis, Counterterrorism,
and Security, in conjunction with the SIAM Interna-
tional Conference on Data Mining. Newport Beach,
CA; 93-102.
Camps, R., Daudé, J. 2003. Improving the efficacy of
aproximate personal name matching. NLDB&apos;03. 8th
International Conference on Applications of Natural
langage to Informations Systems.
Danushka Bollegala, Yutaka Matsuo and Mitsuru Ishi-
zuka. 2006. Disambiguating Personal Names on the
Web using Automatically Extracted Key Phrases.
Proceedings of the European Community of Artifi-
cial Intelligence (ECAI 2006), Italy
G. Mann and D. Yarowsky. 2003. Unsupervised per-
sonal name disambiguation. In Proc 7th Conference
on Computational Natural Language Learning. Ed-
monton, Canada.
Ramanathan V. Guha and A. Garg. 2004. Disambiguat-
ing people in search. In WWW2004.
Ron Bekkerman, Andrew McCallum. 2005. Disambigu-
ating Web appearances ofpeople in a social network.
Proceedings of the 14th international conference on
World Wide Web 2005. Pages 463 - 470.
</reference>
<page confidence="0.999089">
365
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000492">
<title confidence="0.975354">UC3M_13: Disambiguation of Person Names Based on the Composition of Simple Bags of Typed Terms</title>
<author confidence="0.982799">David César María Teresa del Valle-Agudo de_Pablo-Sánchez Vicente-Díez</author>
<affiliation confidence="0.8897175">Universidad Carlos III de Madrid Escuela Politécnica Superior</affiliation>
<address confidence="0.7369565">Av. de la Universidad, 30 – 28911 Leganés (Madrid) Spain</address>
<email confidence="0.873863">dvalle@inf.uc3m.es</email>
<email confidence="0.873863">cdepablo@inf.uc3m.es</email>
<email confidence="0.873863">tvicente@inf.uc3m.es</email>
<abstract confidence="0.998728183486239">This paper describes a system designed to disambiguate person names in a set of Web pages. In our approach Web documents are represented as different sets of features or terms of different types (bag of words, URLs, names and numbers). We apply Agglomerative Vector Space clustering that uses the similarity between pairs of analogous feature sets. This system achieved a of 66% for and a value of 48% in the Web People Search Task at SemEval-2007 (Artiles et al., 2007). Name queries account for a substantial part of Web queries in commercial search engines. Name queries often aim at retrieving information about particular persons. Nevertheless, the same query or mention name usually recalls several people and the user is unaware of the potential ambiguity and expects to find the related person after skimming some results. Similar problems are also common for products, organizations and almost any other named object in real world. A related problem appears for different kinds of objects receiving the same name. For example, Firebird can refer to a car, a guitar, a fiction superhero or a database product among more than twenty different senses collected in Wikipedia. In all these cases, the user could benefit from a structured representation that facilitates browsing results. Other applications like Question Answering would also benefit from name disambiguation and person names disambiguation, in particular. In this work we focus on the task of disambiguating Web pages retrieved for a person name query as proposed in the Web People Search Task at SemEval-2007. 2 Background and Related Research In recent work in named entity disambiguation, Malin (2005) identifies two different dimensions to classify approaches to the task depending on the information type that is used and whether the method to train the system is supervised or unsupervised. Regarding the information type, Malin (2006) identifies personal information like biographical facts (Bagga and Baldwin, 1998; Mann and Yarowsky, 2003) or relational information (Bekkerman and McCallum, 05), collocations with other entities. Personal name disambiguation has been studied in relation with citation analysis and record linkage and their use to improve Web search results have attracted more interest recently (Guha and Garg 2004; Bollegala, 2006), but it is evaluated only at a small scale. In contrast Bekkerman and McCallum (2005) have focused on disambiguating complete social networks and not only results for one name. 3 System description People Search a task to find different people sharing the same name referred in a set of Web pages and associate each of these pages to these people. To solve the task we added two simplifying assumptions; each document refers only to one person, and every listed document refers to a person. 362 of the 4th International Workshop on Semantic Evaluations pages 362–365, June 2007. Association for Computational Linguistics Our approach is an unsupervised personal name disambiguation system according to the classification proposed by Malin. In this system the method applied to solve ambiguity consists of extracting from each document a set of features, that we context afterwards to cluster them according to their similarity 3.1 Document representation In this task we do not have structured information to estimate similarity. For this reason, the first step of the system consists of extracting features from the documents. Since our goal is to develop techniques that work for large amounts of documents, most of the features are based simply on words, HTML structure and simple patterns that aim to substitute more elaborated features based on information extraction. Features might not have a direct correspondence with facts that help to idena person like of birth in some cases, dealing with them instead of with proper semantic information can be a good approach. On the other hand, some people features, as emails or related URLs, are detected through simple patterns. Other simple patterns like numbers can also provide information about some people features. All terms identified by the same pattern are represented as a bag of terms. Document context is composed of a set of bags, each containing all the terms of the document that were captured with a fixed pattern. 3.2 Types of Contexts The bags of terms used in document contexts are the following: a) emails, b) URLs, c) proper names, d) long numbers (more than four figures), e) short numbers (up to four figures), f) title terms, g) terms of the titles of related documents, h) terms contained in tag of the documents, i) terms of emphasized text fragments (bold, italic, etc.), j) terms of the document snippet, and k) terms of the related documents snippets. The bags b, f, g, j, and k have been extracted from the data files provided (snippets, rank, etc.), whereas a, c, d, e, h and i have been directly extracted from result pages. From all the bags of terms, we finally selected to compound the contexts b, c, d, e, f, g and j as in the training set they contributed to obtain the best result. 3.3 Term normalization and filtering Each extracted term is normalized, filtered and weighted before being added to a bag of terms. A filter for stopwords is applied to every bag of words and they are represented in lowercase. Spurious HTML tags and terms under three characters are also considered stopwords. Bag of numbers are normalized by removing blanks, hyphens and parenthesis. In addition to stopwords, terms with low frequency, lower than 0.2 times the frequency of the more frequent term of each bag of words, are not Finally the of every term is associated. Proper names are extracted with a robust rule based name recognizer based on surface feature and some trigger words. It should be emphasized that over the bag of proper names, a filtering is implemented to make the detection of co-referents proper names easier when comparing different arrays. In this way, a similarity measure among proper names is considered (Camps and Daudé, 2003) more flexible than the simple comparison of their strings of characters. This approach tolerates the omission, substitution or inclusion of words in the proper name, the alteration in the order of the words, or the substitution of words with initials, as well as the omission, substitution or inclusion of characters. First, all proper names that are in the set of documents are identified, and all similar proper names according to these relaxed rules are grouped by the same common term. In this way, arrays of proper names are rewritten, referencing each proper name through its common term and recalculating its frequency. 3.4 Clustering algorithm system uses Vector Space group and disambiguate pages. Given the nature of the problem, it does not need to indicate the number of classes to be obtained in advance. To determine if two documents should be assigned to the same cluster, we evaluate the similarity between each pair of bags of terms and, later, it is determined how many of these pairs have a similarity over a threshold. For a document to be in the same cluster we require a minimum number of similar pairs. 363 In order to allow finer adjustments in the number of similar pairs needed, instead of requiring N similar pairs, the pairs are arranged in a decreasing order according to the obtained similarity and it is checked if the similarity of the nth pair is above or below the threshold. In this case, interpolation can be applied, so the number of necessary similar pairs is not limited to the natural numbers. The developed system uses linear interpolation to calculate this function. We use the cosine vector similarity as similarity measurement. 4 Results and Evaluation For the evaluation the system has been adjusted with a threshold of similarity of 0.001, 2.5 pairs of bags of terms above the threshold required for including two documents in the same cluster and the following bags of terms: bags of URLs, proper names, long and short numbers, terms of titles, terms of the titles of the related documents and terms of the document snippets. With this adjustment it is noticed that some problems affect the results of the evaluation. The most important of these problems is the small number of clusters in which pages are classified. For instance, Mark Johnson refers to 70 different people in key, but our system classified his pages in only 14 clusters. Due to this small number of clusters, each contains more than one person to search, but with a good recall of pages for each person. Table 1 shows the results obtained for the test set, where P the purity, R is the inverse purity, represents the harmonic mean of purity and inverse puand is the measure of F that considers more important inverse purity than purity. Although at a first sight set 1 shows better results than set 2 and 3, once we discard the people names ‘Sharon Goldwater’ and ‘Dekang Lin’ (whose results are above the mean), results are very similar for all groups. We consider that our system behaves in a homogenous way regardless of the proportion of the different types of names the sets are composed of: less frequent names (with lower ambiguity) and ‘celebrity’ names (with people that dominate the set of pages). In the other hand, the assumptions considered to solve the problem (each page references at least one and only one person) were definitely too naïve, as there is a lot of discarded pages (in some cases more than 50% of the pages are not taken into account) and some pages refer to several people. These facts also contribute to make lower purity.</abstract>
<note confidence="0.741016111111111">Table 1. Test results (in percentages) P R Set 1 Mark Johnson 20 98 33 54 Sharon Goldwater 99 99 99 99 Robert Moore 26 94 40 61 Leon Barrett 34 97 50 70 Dekang Lin 100 98 99 98 Stephen Clark 21 98 34 56 Frank Keller 25 90 39 59 Jerry Hobbs 52 92 67 80 James Curran 24 98 39 61 Chris Brockett 68 97 80 89 Set 2 Thomas Fraser 33 96 49 70 John Nelson 24 96 38 60 James Hamilton 19 99 32 54 William Dickson 20 99 33 55 James Morehead 26 96 41 62 Patrick Killen 55 99 71 86 George Foster 35 94 51 70 James Davidson 25 98 39 61 Arthur Morgan 54 98 70 84 Thomas Kirk 11 98 20 39 Set 3 Harry Hughes 36 79 50 64 Jude Brown 25 91 39 59 Stephan Johnson 57 92 70 82 Marcy Jackson 32 95 48 68 Karen Peterson 12 99 21 40 Neil Clark 46 98 62 80 Jonathan Brooks 21 95 35 56 Violet Howard 15 88 26 45 Martha Edwards 11 96 20 38 Alvin Cooper 34 95 50 70 Set 1 Average 47 96 58 73 Set 2 Average 30 97 44 64 Set 3 Average 29 93 42 60 Global Average 35 95 48 66</note>
<abstract confidence="0.997433105263158">5 Conclusions and future works This system obtains a good result for inverse purity to the detriment of purity. This causes a difference almost twenty points in the measures of In order to correct this weakness, in the future we will consider that any person can be mentioned in different pages, and that not all pages reference to any of the people to search. Also we will perform additional experiments regarding parameter tuning. Although the number of similar contexts considered in these experiments 364 is 1.5 (value that maximizes the measure of F), results show that this value causes larger groups than those found in search results. Probably a smaller value for this parameter will divide pages in more clusters, improving the purity of the result. Finally, we would like to consider different methods to select relevant terms.</abstract>
<note confidence="0.9400825">References Bagga and B. Baldwin. 1998. crossdocument coreferencing using the vector space Proc 36th Annual Meeting of the Association for Computational Linguistics. San Francisco, CA.; 79-85. J., Gonzalo, J. and Sekine, S. (2007). Establishing a benchmark for the Web People Search Task: Semeval 2007 WePS In Proceedings of Semeval 2007, Association for Computational Linguistics. Malin. 2005. name disambiguavia social network In Proceedings of the Workshop on Link Analysis, Counterterrorism,</note>
<affiliation confidence="0.7095285">and Security, in conjunction with the SIAM International Conference on Data Mining. Newport Beach,</affiliation>
<address confidence="0.731514">CA; 93-102.</address>
<note confidence="0.90442735">R., Daudé, J. 2003. the efficacy of personal name matching. 8th International Conference on Applications of Natural langage to Informations Systems. Danushka Bollegala, Yutaka Matsuo and Mitsuru Ishi- 2006. Personal Names on the using Automatically Extracted Key Proceedings of the European Community of Artificial Intelligence (ECAI 2006), Italy Mann and D. Yarowsky. 2003. pername In Proc 7th Conference on Computational Natural Language Learning. Edmonton, Canada. V. Guha and A. Garg. 2004. Disambiguatpeople in In WWW2004. Bekkerman, Andrew McCallum. 2005. Disambigu- Web appearances ofpeople in a social Proceedings of the 14th international conference on World Wide Web 2005. Pages 463 - 470. 365</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A Bagga</author>
<author>B Baldwin</author>
</authors>
<title>Entity-based crossdocument coreferencing using the vector space model.</title>
<date>1998</date>
<booktitle>In Proc 36th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<pages>79--85</pages>
<location>San Francisco, CA.;</location>
<contexts>
<context position="2367" citStr="Bagga and Baldwin, 1998" startWordPosition="371" endWordPosition="374">iguation and person names disambiguation, in particular. In this work we focus on the task of disambiguating Web pages retrieved for a person name query as proposed in the Web People Search Task at SemEval-2007. 2 Background and Related Research In recent work in named entity disambiguation, Malin (2005) identifies two different dimensions to classify approaches to the task depending on the information type that is used and whether the method to train the system is supervised or unsupervised. Regarding the information type, Malin (2006) identifies personal information like biographical facts (Bagga and Baldwin, 1998; Mann and Yarowsky, 2003) or relational information (Bekkerman and McCallum, 05), collocations with other entities. Personal name disambiguation has been studied in relation with citation analysis and record linkage and their use to improve Web search results have attracted more interest recently (Guha and Garg 2004; Bollegala, 2006), but it is evaluated only at a small scale. In contrast Bekkerman and McCallum (2005) have focused on disambiguating complete social networks and not only results for one name. 3 System description Web People Search proposes a task to find different people sharin</context>
</contexts>
<marker>Bagga, Baldwin, 1998</marker>
<rawString>A. Bagga and B. Baldwin. 1998. Entity-based crossdocument coreferencing using the vector space model. In Proc 36th Annual Meeting of the Association for Computational Linguistics. San Francisco, CA.; 79-85.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Artiles</author>
<author>J Gonzalo</author>
<author>S Sekine</author>
</authors>
<title>Establishing a benchmark for the Web People Search Task: The Semeval</title>
<date>2007</date>
<booktitle>In Proceedings of Semeval 2007, Association for Computational Linguistics.</booktitle>
<contexts>
<context position="829" citStr="Artiles et al., 2007" startWordPosition="128" endWordPosition="131">olitécnica Superior Av. de la Universidad, 30 – 28911 Leganés (Madrid) Spain {dvalle, cdepablo, tvicente}@inf.uc3m.es Abstract This paper describes a system designed to disambiguate person names in a set of Web pages. In our approach Web documents are represented as different sets of features or terms of different types (bag of words, URLs, names and numbers). We apply Agglomerative Vector Space clustering that uses the similarity between pairs of analogous feature sets. This system achieved a value of 66% for Fα=0.2 and a value of 48% for Fα=0.5 in the Web People Search Task at SemEval-2007 (Artiles et al., 2007). 1 Introduction Name queries account for a substantial part of Web queries in commercial search engines. Name queries often aim at retrieving information about particular persons. Nevertheless, the same query or mention name usually recalls several people and the user is unaware of the potential ambiguity and expects to find the related person after skimming some results. Similar problems are also common for products, organizations and almost any other named object in real world. A related problem appears for different kinds of objects receiving the same name. For example, Firebird can refer </context>
</contexts>
<marker>Artiles, Gonzalo, Sekine, 2007</marker>
<rawString>Artiles, J., Gonzalo, J. and Sekine, S. (2007). Establishing a benchmark for the Web People Search Task: The Semeval 2007 WePS Track. In Proceedings of Semeval 2007, Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bradley Malin</author>
</authors>
<title>Unsupervised name disambiguation via social network similarity.</title>
<date>2005</date>
<booktitle>In Proceedings of the Workshop on Link Analysis, Counterterrorism, and Security, in conjunction with the SIAM International Conference on Data Mining.</booktitle>
<pages>93--102</pages>
<location>Newport Beach, CA;</location>
<contexts>
<context position="2049" citStr="Malin (2005)" startWordPosition="325" endWordPosition="326">, a guitar, a fiction superhero or a database product among more than twenty different senses collected in Wikipedia. In all these cases, the user could benefit from a structured representation that facilitates browsing results. Other applications like Question Answering would also benefit from name disambiguation and person names disambiguation, in particular. In this work we focus on the task of disambiguating Web pages retrieved for a person name query as proposed in the Web People Search Task at SemEval-2007. 2 Background and Related Research In recent work in named entity disambiguation, Malin (2005) identifies two different dimensions to classify approaches to the task depending on the information type that is used and whether the method to train the system is supervised or unsupervised. Regarding the information type, Malin (2006) identifies personal information like biographical facts (Bagga and Baldwin, 1998; Mann and Yarowsky, 2003) or relational information (Bekkerman and McCallum, 05), collocations with other entities. Personal name disambiguation has been studied in relation with citation analysis and record linkage and their use to improve Web search results have attracted more i</context>
</contexts>
<marker>Malin, 2005</marker>
<rawString>Bradley Malin. 2005. Unsupervised name disambiguation via social network similarity. In Proceedings of the Workshop on Link Analysis, Counterterrorism, and Security, in conjunction with the SIAM International Conference on Data Mining. Newport Beach, CA; 93-102.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Camps</author>
<author>J Daudé</author>
</authors>
<title>Improving the efficacy of aproximate personal name matching.</title>
<date>2003</date>
<booktitle>NLDB&apos;03. 8th International Conference on Applications of Natural langage to Informations Systems.</booktitle>
<contexts>
<context position="6568" citStr="Camps and Daudé, 2003" startWordPosition="1076" endWordPosition="1079">ks, hyphens and parenthesis. In addition to stopwords, terms with low frequency, lower than 0.2 times the frequency of the more frequent term of each bag of words, are not considered. Finally the tf-idf value of every term is associated. Proper names are extracted with a robust rule based name recognizer based on surface feature and some trigger words. It should be emphasized that over the bag of proper names, a filtering is implemented to make the detection of co-referents proper names easier when comparing different arrays. In this way, a similarity measure among proper names is considered (Camps and Daudé, 2003) more flexible than the simple comparison of their strings of characters. This approach tolerates the omission, substitution or inclusion of words in the proper name, the alteration in the order of the words, or the substitution of words with initials, as well as the omission, substitution or inclusion of characters. First, all proper names that are in the set of documents are identified, and all similar proper names according to these relaxed rules are grouped by the same common term. In this way, arrays of proper names are rewritten, referencing each proper name through its common term and r</context>
</contexts>
<marker>Camps, Daudé, 2003</marker>
<rawString>Camps, R., Daudé, J. 2003. Improving the efficacy of aproximate personal name matching. NLDB&apos;03. 8th International Conference on Applications of Natural langage to Informations Systems.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Danushka Bollegala</author>
<author>Yutaka Matsuo</author>
<author>Mitsuru Ishizuka</author>
</authors>
<title>Disambiguating Personal Names on the Web using Automatically Extracted Key Phrases.</title>
<date>2006</date>
<booktitle>Proceedings of the European Community of Artificial Intelligence (ECAI</booktitle>
<marker>Bollegala, Matsuo, Ishizuka, 2006</marker>
<rawString>Danushka Bollegala, Yutaka Matsuo and Mitsuru Ishizuka. 2006. Disambiguating Personal Names on the Web using Automatically Extracted Key Phrases. Proceedings of the European Community of Artificial Intelligence (ECAI 2006), Italy</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Mann</author>
<author>D Yarowsky</author>
</authors>
<title>Unsupervised personal name disambiguation.</title>
<date>2003</date>
<booktitle>In Proc 7th Conference on Computational Natural Language Learning.</booktitle>
<location>Edmonton, Canada.</location>
<contexts>
<context position="2393" citStr="Mann and Yarowsky, 2003" startWordPosition="375" endWordPosition="378"> disambiguation, in particular. In this work we focus on the task of disambiguating Web pages retrieved for a person name query as proposed in the Web People Search Task at SemEval-2007. 2 Background and Related Research In recent work in named entity disambiguation, Malin (2005) identifies two different dimensions to classify approaches to the task depending on the information type that is used and whether the method to train the system is supervised or unsupervised. Regarding the information type, Malin (2006) identifies personal information like biographical facts (Bagga and Baldwin, 1998; Mann and Yarowsky, 2003) or relational information (Bekkerman and McCallum, 05), collocations with other entities. Personal name disambiguation has been studied in relation with citation analysis and record linkage and their use to improve Web search results have attracted more interest recently (Guha and Garg 2004; Bollegala, 2006), but it is evaluated only at a small scale. In contrast Bekkerman and McCallum (2005) have focused on disambiguating complete social networks and not only results for one name. 3 System description Web People Search proposes a task to find different people sharing the same name referred i</context>
</contexts>
<marker>Mann, Yarowsky, 2003</marker>
<rawString>G. Mann and D. Yarowsky. 2003. Unsupervised personal name disambiguation. In Proc 7th Conference on Computational Natural Language Learning. Edmonton, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ramanathan V Guha</author>
<author>A Garg</author>
</authors>
<title>Disambiguating people in search.</title>
<date>2004</date>
<booktitle>In WWW2004.</booktitle>
<contexts>
<context position="2685" citStr="Guha and Garg 2004" startWordPosition="417" endWordPosition="420">fferent dimensions to classify approaches to the task depending on the information type that is used and whether the method to train the system is supervised or unsupervised. Regarding the information type, Malin (2006) identifies personal information like biographical facts (Bagga and Baldwin, 1998; Mann and Yarowsky, 2003) or relational information (Bekkerman and McCallum, 05), collocations with other entities. Personal name disambiguation has been studied in relation with citation analysis and record linkage and their use to improve Web search results have attracted more interest recently (Guha and Garg 2004; Bollegala, 2006), but it is evaluated only at a small scale. In contrast Bekkerman and McCallum (2005) have focused on disambiguating complete social networks and not only results for one name. 3 System description Web People Search proposes a task to find different people sharing the same name referred in a set of Web pages and associate each of these pages to these people. To solve the task we added two simplifying assumptions; each document refers only to one person, and every listed document refers to a person. 362 Proceedings of the 4th International Workshop on Semantic Evaluations (Se</context>
</contexts>
<marker>Guha, Garg, 2004</marker>
<rawString>Ramanathan V. Guha and A. Garg. 2004. Disambiguating people in search. In WWW2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ron Bekkerman</author>
<author>Andrew McCallum</author>
</authors>
<title>Disambiguating Web appearances ofpeople in a social network.</title>
<date>2005</date>
<booktitle>Proceedings of the 14th international conference on World Wide Web</booktitle>
<pages>463--470</pages>
<contexts>
<context position="2789" citStr="Bekkerman and McCallum (2005)" startWordPosition="434" endWordPosition="437">is used and whether the method to train the system is supervised or unsupervised. Regarding the information type, Malin (2006) identifies personal information like biographical facts (Bagga and Baldwin, 1998; Mann and Yarowsky, 2003) or relational information (Bekkerman and McCallum, 05), collocations with other entities. Personal name disambiguation has been studied in relation with citation analysis and record linkage and their use to improve Web search results have attracted more interest recently (Guha and Garg 2004; Bollegala, 2006), but it is evaluated only at a small scale. In contrast Bekkerman and McCallum (2005) have focused on disambiguating complete social networks and not only results for one name. 3 System description Web People Search proposes a task to find different people sharing the same name referred in a set of Web pages and associate each of these pages to these people. To solve the task we added two simplifying assumptions; each document refers only to one person, and every listed document refers to a person. 362 Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 362–365, Prague, June 2007. c�2007 Association for Computational Linguistics Our appr</context>
</contexts>
<marker>Bekkerman, McCallum, 2005</marker>
<rawString>Ron Bekkerman, Andrew McCallum. 2005. Disambiguating Web appearances ofpeople in a social network. Proceedings of the 14th international conference on World Wide Web 2005. Pages 463 - 470.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>