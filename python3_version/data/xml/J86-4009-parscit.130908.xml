<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000002">
<note confidence="0.6328684">
THE FINITE STRING NEWSLETTER
SITE REPORT
THE FINAL REPORT IN THE DARPA SERIES
(SEE VOLUME 12, NUMBERS 2 AND 3)
TEXT GENERATION FOR STRATEGIC COMPUTING
</note>
<title confidence="0.4055695">
William C. Mann and Norman K. Sondheimer
USC/Information Sciences Institute
</title>
<author confidence="0.260024">
Marina del Rey, CA 90292
</author>
<bodyText confidence="0.954943571428571">
This research is supported by the Defense Advanced
Research Projects Agency under Contract No. MDA903
81 C 0335. Views and conclusions contained in this
report are the authors&apos; and should not be interpreted as
representing the official opinion or policy of DARPA, the
U.S. Government, or any person or agency connected
with them.
</bodyText>
<sectionHeader confidence="0.493669" genericHeader="abstract">
OBJECTIVES
</sectionHeader>
<bodyText confidence="0.990855944444444">
There are many information-rich computer intensive
organizations. They need to have easy, understandable
access to a wide variety of information. Currently, infor-
mation is often in obscure computer notations that are
only understood after extensive training and practice.
Although easy discourse between the user and the
machine is an important objective for any situation, this
issue is especially critical in regards to automated
management decision aids. A manager can not afford to
miss important information nor is it reasonable to expect
managers to undergo highly specialized training to under-
stand obscure computer dialects which change from
machine to machine.
A great deal of work has been done in the area of
natural language understanding and this work is starting
to pay off with the delivery of functional interfaces that
interact naturally with the user. Comparatively little,
however, has been done in the area of natural language
generation. There is currently no effective technology
for expressing complex computer notations in ordinary
English. If there were, computer-based management
information could be made more accessible and under-
standable in a way that was less subject to personnel
changes.
This project is helping to create and demonstrate new
technology to provide an English-in, English-out inter-
face to computer data, called Janus. ISI is developing the
English-out (text generation) portion of Janus, referred
to as Penman. The initial organization served by Janus
will be the US Navy, and the initial capability will be
demonstrated on a naval data base. However, most of
the techniques are more general and will be applicable to
other management and military problems. The end result
will be a new capability that produces answers to queries
and commands in the form of text understandable to any
user that understands English.
Computational Linguistics, Volume 12, Number 4, October-December 1986
This project was put in place at the beginning of FY85
in order to develop the first natural language generation
capability robust and capable enough to be used in
DARPA&apos;s Strategic Computing Program. It is intended
that this interface be coupled to the battle management
system being developed under DARPA&apos;s Fleet Command
Center Battle Management Program (FCCBMP). In the
first 1.5 years of the effort, USC/ISI was able to demon-
strate a uniquely expressive generation system producing
English from output demands expressed in formal math-
ematical logic using a broad coverage grammar and an
artificial intelligence knowledge base. We have developed
the basic technology that will permit the realization of a
full text generation system. In the next phase of the
work, ISI will extend text generation from sentences to
paragraphs, increase the power of the grammar, diction-
ary, and planner, expand the knowledge base, optimize
and make robust the software, and tune the resulting
system to the Navy problem. Finally, USC/ISI will deliver
their generation system to Bolt, Beranek, and Newman
Incorporated (BBN), which will combine it with an under-
standing system for delivery to DARPA and subsequent
integration with FCCBMP.
This report details our approach to these problems,
Penman&apos;s current status, and our plans for future work.
OUR APPROACH
Both understanding and generation components are
necessary in an effective information system interface. It
is also necessary that the technologies used by these two
components be absolutely consistent. If they are not, the
embarrassing situation of the interface failing to under-
stand a piece of text it has just output can occur, leading
to a loss of confidence in the system on the part of a
user.
In order to alleviate this problem, we are developing
Penman in close cooperation with a natural language
understanding project at BBN. This cooperation extends
to joint development of knowledge representation soft-
ware, lexicon design, and work to insure compatibility
between the RUS understanding grammar and the Nigel
generation grammar.
The understanding/generation compatibility effort can
be considered the first of our goals for the Penman
system. Another is the ability to generate substantial
amounts of English text, up to the multiparagraph level.
A useful interface should not be restricted to short replies
or comments.
A third goal is to make Penman as portable and
domain independent as possible. There are many know-
ledge domains available for interface systems, and few
specialists to create the interfaces. Thus, we are empha-
sizing domain independent capabilities over domain
dependent ones.
</bodyText>
<page confidence="0.984693">
315
</page>
<bodyText confidence="0.993445857142857">
The FINITE STRING Newsletter Site Report
Finally, there are many linguistically and computa-
tionally significant issues that must be addressed if high
quality generation is to be achieved. For example, we are
working on improved methods for knowledge represen-
tation, vocabulary development, and for using semantics
and discourse context to guide the generation of text.
</bodyText>
<sectionHeader confidence="0.522047" genericHeader="keywords">
ACCOMPLISHMENTS
</sectionHeader>
<bodyText confidence="0.998946705882353">
By the time of this report, the project had created and
delivered a Master Lexicon facility, ML, for vocabulary
acquisition and use (Cumming 1986a, 1986b; Cumming
and Albano 1986). ML is unusual in that it is compat-
ible with the two radically different grammars of English
in Janus: the Nigel generation grammar and the RUS
understanding grammar. The system features a multi-
window bit mapped display manipulatable through the
keyboard and a mouse. Online documentation is provided
for all lexical choices. ML is built to allow for the exten-
sion of the Janus lexical system. It is also possible to use
ML with other natural language processing systems by
replacement of a single data structure.
In addition, work has been done on bringing the Nigel
and RUS grammars into compatibility.
We have as a general goal the development of natural
language generation capabilities. Our vehicle for these
capabilities will be a reusable module designed to meet all
of a system&apos;s needs for generated sentences. The gener-
ation module must have an input notation in which
demands for expression are represented. The notation
should be of general applicability. For example, a good
notation ought to be generally useful in a reasoning
system. The notation should have a well-defined seman-
tics. In addition, the generator has to have some way of
interpreting the demands. This interpretation has to be
efficient.
In our research, we have chosen to use formal logic as
a demand language. Network knowledge bases are used to
define the domain of discourse in order to help the gener-
ator interpret the logical forms. And a restricted, hybrid
knowledge representation is utilized to analyze demands
for expression using the knowledge base (Sondheimer &amp;
Nebel 1986). We have:
</bodyText>
<listItem confidence="0.886393">
1. Developed a demand language, Penman Logical
Form (PLF), based on first order logic (USC/ISI
1985),
2. Structured a NIKL (New Implementation of
KL-ONE) network (Kaczmarek 1986) to reflect
conceptual distinctions observed by functional
systemic linguists.
3. Developed a method for translation of demands for
expression into a propositional logic database,
4. Employed KL-TWO (Vilain 1985) to analyze the
translated demands, and
5. Used the results of the analyses to provide directions
</listItem>
<bodyText confidence="0.994554966666667">
to the Nigel English sentence generation system
(Mann and Matthiessen 1983).
To first order logic, PLF adds restricted quantification,
i.e., the ability to restrict the set quantified over. In addi-
tion, we allow for equality and some related quantifiers
and operators, such as the quantifier for &amp;quot;there exists
exactly one ...&amp;quot; , the operator for &amp;quot;the one thing that ...&amp;quot;.
We permit the formation and manipulation of sets,
including a predicate for set membership (ELEMENT-
OF). And we have some quantifiers and operators based
on Habel&apos;s (1982) eta operator.
The system&apos;s knowledge has been organized in a new
way in order to facilitate English expression. Abstract
concepts corresponding to the major conceptual catego-
ries of English have been defined in NIKL (a KL-ONE
dialect) and used to organize the conceptual hierarchy of
the domain. By defining concepts such as process, event,
quality, relationship and object in this way, fluent English
expression is facilitated.
KL-ONE is a hybrid knowledge representation system
that uses NIKL&apos;s formal semantics. KL-TWO links another
reasoner, PENN!, to NIKL. For our purposes, PENN!, can
be viewed as restricted to reasoning using propositional
logic.
We translate a logical form into an equivalent
KL-TWO structure. All predications appearing in the
logical form are put into the PENNI data base as
assertions. A separate tree is created that reflects the
variable scoping. Separate scopes are kept for the range
restriction of a quantification and its predication.
The Nigel grammar and generator realizes the func-
tional systemic framework at the level of sentence gener-
ation. Within this framework, language is viewed as
offering a set of grammatical choices to its speakers.
Speakers make their choices based on the information
they wish to convey and the discourse context they find
themselves in. Nigel captures the first of these notions by
organizing minimal sets of choices into systems. The
grammar is actually just a collection of these systems.
The factors the speaker considers in evaluating his
communicative goal are shown by questions called
inquiries inside of the chooser that is associated with each
system. A choice alternative in a system is chosen
according to the responses to one or more of these
inquiries. It is these inquiries we have implemented.
Our implementation of Nigel&apos;s inquiries using the
connection and scope structures with the NIKL upper
structure is fairly straightforward to describe. Since the
logical forms reflecting the world view are in the highest
level of the NIKL model, the information decomposition
inquiries use these structures to do search and retrieval.
With all of the predicates in the domain specializing
concepts in the functional systemic level of the NIKL
model, information characterization inquiries that consid-
er aspects of the connection structure can test for the
truth of appropriate PENN! propositions. The inquiries
that relate to information presented in the quantification
structure of the logical form will search the scope struc-
ture. Finally, to supply lexical entries, we associate lexical
entries with NIKL concepts as attached data and use the
</bodyText>
<page confidence="0.940832">
316 Computational Linguistics, Volume 12, Number 4, October-December 1986
</page>
<note confidence="0.650499">
The FINITE STRING Newsletter Site Report
</note>
<bodyText confidence="0.998861357142857">
retrieval methods of PENN! and NIKL to retrieve the
appropriate terms.
Although we have done some generation off of the
BBN naval knowledge base, our most extensive experi-
ence comes from the Consul knowledge domain of
computer mail and calendars (Kaczmarek, Mark, and
Sondheimer 1983). Using the developments above, trans-
lation from first-order logic to English organized by NIKL
has been demonstrated for a wide variety of sentence
types.
Table 1 shows a series of independent sentences that
Penman is now able to generate. We have arranged and
labeled them to show how they might enter into comput-
er database dialogue.
</bodyText>
<tableCaption confidence="0.992633">
Table 1. Sentences from Penman
</tableCaption>
<listItem confidence="0.9995645">
1. User: What is the read status of the message
which was sent by Jones?
2. System: Message 40 is unread.
3. User: Are any messages which were sent by
Jones in the tape file?
4. User: Are any messages which were sent by
Jones in the old ISI tape file which Smith has?
5. System: Yes.
6. System: Do you want me to display the read status
of the messages?
7. User: No.
8. System: There are messages which were sent by
Jones.
9. System: However, the tape is in use.
10. User: Show me Message 40.
11. User: Did Smith send any messages?
12. System: Message 45 was sent by Smith.
13. User: Did Smith schedule his meeting with me in
New York?
14. System: Yes.
15. User: What does the window show?
16. System: The window shows a message which was
sent by Jones.
17. System: The window shows a request by Jones.
18. User: Did I create the window?
19. System: The window was created when you asked
me to display Message 50.
20. System: You deleted the message, then you asked
</listItem>
<bodyText confidence="0.996108818181818">
me to display it.
Besides the technology described above, work has
been done on aspects of discourse modeling. This
included a study of object description and an initial noun
phrase planner.
In order to produce the sorts of larger texts that are
needed in a User Assistance facility, work is under way
to apply Rhetorical Structure Theory to text planning. A
procedure has been developed that can design structures
for paragraph-length texts given information about the
text goal and communication situation.
</bodyText>
<subsectionHeader confidence="0.3444105">
Computational Linguistics, Volume 12, Number 4, October-December 1986
FUTURE EFFORT
</subsectionHeader>
<bodyText confidence="0.999974196428572">
In the next phase of our effort, Penman will be delivered
to BBN, integrated into Janus, and demonstrated in an
extensive series of laboratory exercises. This version of
Penman will support coordinated English input and
output, paraphrasing, and user assistance, as well as
constructive rhetorical structure theory to create descrip-
tive texts (Mann 1984).
For a machine to create fluent English texts, several
problems of text organization and presentation must be
solved. ISI will design, implement, and demonstrate two
kinds of new text planning processes. One will be a plan-
ner for gross organization of text based on rhetorical
structure theory, and the other a low level planner for
sentence configurations. In addition, ISI will examine the
expert system explanation functionality necessary within
FCCBMP, and will design a text planner to meet those
needs.
Enhancements to the basic interface to Penman will
also be developed. As part of Janus, BBN plans to devel-
op methods for translating English inputs into a higher
order predicate calculus form. In addition the logical
form will be manipulated inside the BBN understanding
component to reflect database organization, expressions
in this form are expected to be much more complex than
the direct expressions of the corresponding English,
requiring multiple sentence expression. Penman will be
extended so that it can express these complex forms in
English.
Following successful completion of laboratory testing,
Penman will be delivered to Naval Ocean Systems Center
for knowledge base development and testing. This
Penman capability is a basic text generation capability
with only limited capability for responding to the know-
ledge of the user and the state of the user-machine inter-
action. In subsequent years, these basic capabilities will
be extensively expanded to provide a much more useful
interface, with particular development in the areas of
user assistance, ability of the system to understand the
user&apos;s knowledge and expectations, and meeting needs
for expert system explanation and user dialogue, as
described below.
Development of extensions is required in the area of
user assistance functio. nality. Text generation can assist
the user by explaining system actions and objects, and by
clarifying its interpretation of incoming English. These
capabilities must be integrated into the Janus interface in
a natural, easy-to-use form. We expect to demonstrate
increased user assistance functionality as time goes on.
Development of extensions is also required in the area
of responsiveness to users&apos; knowledge and expectations.
This includes making the system aware of the ongoing
topics and issues, what the user has already been told,
and what he can be expected to know without being told.
This in turn involves more extensive use of inference. It
also requires implementing a notion of the state of the
dialogue — what things are in attention, what interactions
</bodyText>
<page confidence="0.95083">
317
</page>
<bodyText confidence="0.9651474">
The FINITE STRING Newsletter Calls for Papers
are in process, and what has been interrupted and
suspended.
Penman is scheduled for use in an expert-system
explanation context whose details are yet to be deter-
mined. We will study what functionality is required in
FCCBMP. The study will lead to a design of code for this
use of Penman. Implementation and demonstration of
full functionality are expected following the user assist-
ance work.
</bodyText>
<sectionHeader confidence="0.99876" genericHeader="introduction">
REFERENCES
</sectionHeader>
<reference confidence="0.9942805">
Cumming, Susanna 1986a Design of a Master Lexicon. Technical
Report ISI/RR-85-163 (February). USC/Information Sciences
Institute, Marina del Rey, California.
Cumming, Susanna 1986b The Lexicon in Text Generation. Technical
Report ISI/RR-86-168. USC/Information Sciences Institute,
Marina del Rey, California. Presented at The Workshop on Auto-
mating the Lexicon, Pisa, Italy (May).
Cumming, Susanna and Albano, Robert 1986 A Guide to Lexical
Acquisition in the JANUS System. Technical Report ISI/
RR-85-162 (February). USC/Information Sciences Institute, Mari-
na del Rey, California.
Habel, Christopher 1982 Referential Nets with Attributes. In
Horecky, Ed., Proceedings of COLING-82. North-Holland, Amster-
dam.
Kaczmarek, T.; Bates, R.; and Robins, G. 1986 Recent Developments
in NIKL. In AAAI-86, Proceedings of the National Conference on Artifi-
cial Intelligence. AAAI, Philadelphia, Pennsylvania (August).
Kaczmarek, T.; Mark, W.; and Sondheimer, N. 1983 The
Consul/CUE Interface: An Integrated Interactive Environment. In
Proceedings of CHI &apos;83 Human Factors in Computing Systems. ACM
(December): 98-102.
Mann, W. 1984 Discourse Structures for Text Generation. Technical
Report RR-84-127 (February). USC/Information Sciences Insti-
tute, Marina del Rey, California.
Mann, William C. and Matthiessen, Christian M.I.M. 1983 Nigel: A
Systemic Grammar for Text Generation. Technical Report
iSi/RR-83-105 (February). USC/Information Sciences Institute,
Marina del Rey, California.
Sondheimer, Norman K. and Nebel, Bernhard 1986 A Logical-Form
and Knowledge-Base Design for Natural Language Generation. In
AAAI-86, Proceedings of the National Conference on Artificial Intelli-
gence. AAAI, Philadelphia, Pennsylvania (August).
USC/ISI 1985 Penman&apos;s Logical Language. USC/Information
Sciences Institute, Marina del Rey, California.
Vilain, M. 1985 The Restricted Language Architecture of a Hybrid
Representation System. In Proceedings of the Ninth International
Joint Conference on Artificial Intelligence. Los Angeles, California
(August): 547-551.
</reference>
<sectionHeader confidence="0.985255333333333" genericHeader="method">
CALLS FOR PAPERS
SECOND INTERNATIONAL WORKSHOP ON NATURAL
LANGUAGE UNDERSTANDING AND LOGIC PROGRAMMING
</sectionHeader>
<bodyText confidence="0.934154428571429">
17-20 August 1987, Vancouver, B.C., Canada
The workshop will consider fundamental principles and
important innovations in the design, definition, uses, and
extensions of logic programming to natural language
understanding and, conversely, the adequacy of logic
programming to express natural language formalisms
The main topics of interest are:
</bodyText>
<listItem confidence="0.9996945">
• Logic grammar formalisms
• Formal representations of natural language sentences
and texts
• Resolution methods for specific aspects such as
anaphoras, coordination
• Natural language generation
• Uses of techniques for logic grammars (unification) in
other grammar formalisms
• Compilers and interpreters for grammar formalisms
• Applications: natural language front ends
</listItem>
<sectionHeader confidence="0.962389" genericHeader="method">
DEADLINES
</sectionHeader>
<bodyText confidence="0.61180275">
Submission of paper in final form 15 March 1987
Author notification of acceptance 1 June 1987
Workshop 17-19 August 1987
Final papers will be published in a book.
</bodyText>
<sectionHeader confidence="0.894001" genericHeader="method">
SUBMISSION OF PAPERS
</sectionHeader>
<bodyText confidence="0.79589625">
Papers should contain the following: title, name and
address (es) of author(s), affiliation(s), mailing
address(es) and phone (or telex) number(s), and one
program area. Papers must relate recent and unpublished
work.
Please send four copies of an 8-12 page, single-
spaced, typed manuscript, including a 150-200 word
abstract, to:
</bodyText>
<reference confidence="0.6494266">
Patrick Saint-Dizier
Department of Computing Science
Simon Fraser University
Burnaby, B.C.
V5A 1S6 CANADA
</reference>
<sectionHeader confidence="0.910195" genericHeader="method">
1987 WORKSHOP ON VISUAL LANGUAGES
IEEE COMPUTER SOCIETY
</sectionHeader>
<subsectionHeader confidence="0.343492">
19-21 August 1987, Linkoping, Sweden
</subsectionHeader>
<bodyText confidence="0.998337">
Papers are invited on theory, methodology, and applica-
tions of visual languages, including both languages that
have a heavy visual component and languages designed
for operating on visual objects. Areas related to visual
languages, such as man-machine interface, office auto-
mation, computer-aided design, computer hardware, and
knowledge-based systems, are also of interest if the visu-
al language aspect is in focus.
Topics include, but are not limited to
</bodyText>
<listItem confidence="0.999790333333333">
• Visual Data Structure
• Formal, Cognitive, and Semantic Models for Visual
Languages
• Shape Grammars
• Visual Programming
• Visual Support for Software Production
• Visualization of Programs and their Behavior
• User Interfaces Using Visual Objects
• Representation and Acquisition of Visual Knowledge
• Icon and Iconic System Design
• Animation Research
• Multimedia Systems
</listItem>
<bodyText confidence="0.8819585">
Submit three copies of each paper — maximum length
5,000 words — to the Program Chairman (see below).
</bodyText>
<page confidence="0.928067">
318 Computational Linguistics, Volume 12, Number 4, October-December 1986
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000007">
<title confidence="0.889188">THE FINITE STRING NEWSLETTER SITE REPORT THE FINAL REPORT IN THE DARPA (SEE VOLUME 12, NUMBERS 2 AND 3) TEXT GENERATION FOR STRATEGIC COMPUTING</title>
<author confidence="0.999665">William C Mann</author>
<author confidence="0.999665">Norman K Sondheimer</author>
<affiliation confidence="0.99996">USC/Information Sciences Institute</affiliation>
<address confidence="0.999631">Marina del Rey, CA 90292</address>
<note confidence="0.9847695">This research is supported by the Defense Advanced Research Projects Agency under Contract No. MDA903</note>
<abstract confidence="0.992167242424243">81 C 0335. Views and conclusions contained in this report are the authors&apos; and should not be interpreted as the official opinion or policy of U.S. Government, or any person or agency connected with them. OBJECTIVES There are many information-rich computer intensive organizations. They need to have easy, understandable access to a wide variety of information. Currently, information is often in obscure computer notations that are only understood after extensive training and practice. Although easy discourse between the user and the machine is an important objective for any situation, this issue is especially critical in regards to automated management decision aids. A manager can not afford to miss important information nor is it reasonable to expect managers to undergo highly specialized training to understand obscure computer dialects which change from machine to machine. A great deal of work has been done in the area of natural language understanding and this work is starting to pay off with the delivery of functional interfaces that interact naturally with the user. Comparatively little, however, has been done in the area of natural language generation. There is currently no effective technology for expressing complex computer notations in ordinary English. If there were, computer-based management information could be made more accessible and understandable in a way that was less subject to personnel changes. This project is helping to create and demonstrate new technology to provide an English-in, English-out interto computer data, called is developing the English-out (text generation) portion of Janus, referred as initial organization served by Janus will be the US Navy, and the initial capability will be demonstrated on a naval data base. However, most of the techniques are more general and will be applicable to other management and military problems. The end result will be a new capability that produces answers to queries and commands in the form of text understandable to any user that understands English. Computational Linguistics, Volume 12, Number 4, October-December 1986 This project was put in place at the beginning of FY85 in order to develop the first natural language generation capability robust and capable enough to be used in DARPA&apos;s Strategic Computing Program. It is intended that this interface be coupled to the battle management system being developed under DARPA&apos;s Fleet Command Battle Management Program the first 1.5 years of the effort, USC/ISI was able to demonstrate a uniquely expressive generation system producing English from output demands expressed in formal mathematical logic using a broad coverage grammar and an artificial intelligence knowledge base. We have developed the basic technology that will permit the realization of a full text generation system. In the next phase of the work, ISI will extend text generation from sentences to paragraphs, increase the power of the grammar, dictionary, and planner, expand the knowledge base, optimize and make robust the software, and tune the resulting system to the Navy problem. Finally, USC/ISI will deliver their generation system to Bolt, Beranek, and Newman Incorporated (BBN), which will combine it with an understanding system for delivery to DARPA and subsequent with This report details our approach to these problems, Penman&apos;s current status, and our plans for future work. OUR APPROACH Both understanding and generation components are necessary in an effective information system interface. It is also necessary that the technologies used by these two components be absolutely consistent. If they are not, the embarrassing situation of the interface failing to understand a piece of text it has just output can occur, leading to a loss of confidence in the system on the part of a user. In order to alleviate this problem, we are developing Penman in close cooperation with a natural language understanding project at BBN. This cooperation extends to joint development of knowledge representation software, lexicon design, and work to insure compatibility between the RUS understanding grammar and the Nigel generation grammar. The understanding/generation compatibility effort can be considered the first of our goals for the Penman system. Another is the ability to generate substantial amounts of English text, up to the multiparagraph level. A useful interface should not be restricted to short replies or comments. A third goal is to make Penman as portable and domain independent as possible. There are many knowledge domains available for interface systems, and few specialists to create the interfaces. Thus, we are emphasizing domain independent capabilities over domain dependent ones. 315 The FINITE STRING Newsletter Site Report Finally, there are many linguistically and computationally significant issues that must be addressed if high quality generation is to be achieved. For example, we are working on improved methods for knowledge representation, vocabulary development, and for using semantics and discourse context to guide the generation of text. ACCOMPLISHMENTS By the time of this report, the project had created and delivered a Master Lexicon facility, ML, for vocabulary acquisition and use (Cumming 1986a, 1986b; Cumming Albano 1986). unusual in that it is compatible with the two radically different grammars of English in Janus: the Nigel generation grammar and the RUS understanding grammar. The system features a multiwindow bit mapped display manipulatable through the keyboard and a mouse. Online documentation is provided all lexical choices. built to allow for the extension of the Janus lexical system. It is also possible to use other natural language processing systems by replacement of a single data structure. In addition, work has been done on bringing the Nigel into compatibility. We have as a general goal the development of natural language generation capabilities. Our vehicle for these capabilities will be a reusable module designed to meet all of a system&apos;s needs for generated sentences. The generation module must have an input notation in which demands for expression are represented. The notation be of For example, a good notation ought to be generally useful in a reasoning The notation should have a semanaddition, the generator has to have some way of demands. This interpretation has to be efficient. our research, we have chosen to use logic demand language. knowledge bases used to define the domain of discourse in order to help the generinterpret the logical forms. And a hybrid representation utilized to analyze demands for expression using the knowledge base (Sondheimer &amp; Nebel 1986). We have: 1. Developed a demand language, Penman Logical on first order logic (USC/ISI 1985), Structured a (New of (Kaczmarek 1986) to reflect conceptual distinctions observed by functional systemic linguists. 3. Developed a method for translation of demands for expression into a propositional logic database, Employed (Vilain 1985) to analyze translated demands, and 5. Used the results of the analyses to provide directions to the Nigel English sentence generation system (Mann and Matthiessen 1983). To first order logic, PLF adds restricted quantification, i.e., the ability to restrict the set quantified over. In addition, we allow for equality and some related quantifiers and operators, such as the quantifier for &amp;quot;there exists exactly one ...&amp;quot; , the operator for &amp;quot;the one thing that ...&amp;quot;. We permit the formation and manipulation of sets, a predicate for set membership (ELEMENT- And have some quantifiers and operators based on Habel&apos;s (1982) eta operator. The system&apos;s knowledge has been organized in a new way in order to facilitate English expression. Abstract concepts corresponding to the major conceptual categoof English have been defined in (a dialect) and used to organize the conceptual hierarchy of the domain. By defining concepts such as process, event, quality, relationship and object in this way, fluent English expression is facilitated. is hybrid knowledge representation system that uses NIKL&apos;s formal semantics. KL-TWO links another reasoner, PENN!, to NIKL. For our purposes, PENN!, can be viewed as restricted to reasoning using propositional logic. We translate a logical form into an equivalent structure. All appearing in the logical form are put into the PENNI data base as assertions. A separate tree is created that reflects the variable scoping. Separate scopes are kept for the range restriction of a quantification and its predication. The Nigel grammar and generator realizes the functional systemic framework at the level of sentence generation. Within this framework, language is viewed as offering a set of grammatical choices to its speakers. Speakers make their choices based on the information they wish to convey and the discourse context they find themselves in. Nigel captures the first of these notions by minimal sets of choices into grammar is actually just a collection of these systems. The factors the speaker considers in evaluating his communicative goal are shown by questions called of the is associated with each system. A choice alternative in a system is chosen according to the responses to one or more of these inquiries. It is these inquiries we have implemented. Our implementation of Nigel&apos;s inquiries using the connection and scope structures with the NIKL upper structure is fairly straightforward to describe. Since the logical forms reflecting the world view are in the highest level of the NIKL model, the information decomposition inquiries use these structures to do search and retrieval. With all of the predicates in the domain specializing concepts in the functional systemic level of the NIKL model, information characterization inquiries that consider aspects of the connection structure can test for the truth of appropriate PENN! propositions. The inquiries that relate to information presented in the quantification structure of the logical form will search the scope structure. Finally, to supply lexical entries, we associate lexical with as attached data and use the Linguistics, Volume 12, Number 4, October-December 1986 The FINITE STRING Newsletter Site Report retrieval methods of PENN! and NIKL to retrieve the appropriate terms. Although we have done some generation off of the BBN naval knowledge base, our most extensive experience comes from the Consul knowledge domain of computer mail and calendars (Kaczmarek, Mark, and Sondheimer 1983). Using the developments above, translation from first-order logic to English organized by NIKL has been demonstrated for a wide variety of sentence types. Table 1 shows a series of independent sentences that Penman is now able to generate. We have arranged and labeled them to show how they might enter into computer database dialogue. Table 1. Sentences from Penman 1. User: What is the read status of the which was sent by Jones? 2. System: Message 40 is unread.</abstract>
<note confidence="0.94363176">3. User: Are any messages which were sent by Jones in the tape file? 4. User: Are any messages which were sent by Jones in the old ISI tape file which Smith has? 5. System: Yes. 6. System: Do you want me to display the read status of the messages? 7. User: No. 8. System: There are messages which were sent by Jones. 9. System: However, the tape is in use. 10. User: Show me Message 40. 11. User: Did Smith send any messages? 12. System: Message 45 was sent by Smith. 13. User: Did Smith schedule his meeting with me in New York? 14. System: Yes. 15. User: What does the window show? 16. System: The window shows a message which was sent by Jones. 17. System: The window shows a request by Jones. 18. User: Did I create the window? 19. System: The window was created when you asked me to display Message 50. 20. System: You deleted the message, then you asked</note>
<abstract confidence="0.9954344125">me to display it. Besides the technology described above, work has been done on aspects of discourse modeling. This included a study of object description and an initial noun phrase planner. In order to produce the sorts of larger texts that are needed in a User Assistance facility, work is under way to apply Rhetorical Structure Theory to text planning. A procedure has been developed that can design structures for paragraph-length texts given information about the text goal and communication situation. Computational Linguistics, Volume 12, Number 4, October-December 1986 FUTURE EFFORT In the next phase of our effort, Penman will be delivered into Janus, and demonstrated in an extensive series of laboratory exercises. This version of Penman will support coordinated English input and output, paraphrasing, and user assistance, as well as constructive rhetorical structure theory to create descriptive texts (Mann 1984). For a machine to create fluent English texts, several problems of text organization and presentation must be solved. ISI will design, implement, and demonstrate two kinds of new text planning processes. One will be a planner for gross organization of text based on rhetorical structure theory, and the other a low level planner for sentence configurations. In addition, ISI will examine the expert system explanation functionality necessary within FCCBMP, and will design a text planner to meet those needs. Enhancements to the basic interface to Penman will be developed. As part of Janus, to develop methods for translating English inputs into a higher order predicate calculus form. In addition the logical will be manipulated inside the component to reflect database organization, expressions in this form are expected to be much more complex than the direct expressions of the corresponding English, requiring multiple sentence expression. Penman will be extended so that it can express these complex forms in English. Following successful completion of laboratory testing, Penman will be delivered to Naval Ocean Systems Center for knowledge base development and testing. This Penman capability is a basic text generation capability with only limited capability for responding to the knowledge of the user and the state of the user-machine interaction. In subsequent years, these basic capabilities will be extensively expanded to provide a much more useful interface, with particular development in the areas of user assistance, ability of the system to understand the user&apos;s knowledge and expectations, and meeting needs for expert system explanation and user dialogue, as described below. Development of extensions is required in the area of assistance nality. Text generation can assist the user by explaining system actions and objects, and by clarifying its interpretation of incoming English. These capabilities must be integrated into the Janus interface in a natural, easy-to-use form. We expect to demonstrate increased user assistance functionality as time goes on. Development of extensions is also required in the area of responsiveness to users&apos; knowledge and expectations. This includes making the system aware of the ongoing topics and issues, what the user has already been told, and what he can be expected to know without being told. This in turn involves more extensive use of inference. It also requires implementing a notion of the state of the dialogue — what things are in attention, what interactions 317 The FINITE STRING Newsletter Calls for Papers are in process, and what has been interrupted and suspended. Penman is scheduled for use in an expert-system explanation context whose details are yet to be determined. We will study what functionality is required in FCCBMP. The study will lead to a design of code for this use of Penman. Implementation and demonstration of full functionality are expected following the user assistance work.</abstract>
<note confidence="0.932618">REFERENCES Cumming, Susanna 1986a Design of a Master Lexicon. Technical Report ISI/RR-85-163 (February). USC/Information Sciences Institute, Marina del Rey, California. Cumming, Susanna 1986b The Lexicon in Text Generation. Technical Report ISI/RR-86-168. USC/Information Sciences Institute, Marina del Rey, California. Presented at The Workshop on Automating the Lexicon, Pisa, Italy (May). Cumming, Susanna and Albano, Robert 1986 A Guide to Lexical Acquisition in the JANUS System. Technical Report ISI/ RR-85-162 (February). USC/Information Sciences Institute, Marina del Rey, California. Habel, Christopher 1982 Referential Nets with Attributes. In Ed., of COLING-82. Amsterdam. Kaczmarek, T.; Bates, R.; and Robins, G. 1986 Recent Developments Proceedings of the National Conference on Artifi- Intelligence. Pennsylvania (August). Kaczmarek, T.; Mark, W.; and Sondheimer, N. 1983 Consul/CUE Interface: An Integrated Interactive Environment. In of CHI &apos;83 Human Factors in Computing Systems. (December): 98-102. Mann, W. 1984 Discourse Structures for Text Generation. Technical Report RR-84-127 (February). USC/Information Sciences Insti-</note>
<address confidence="0.7583155">tute, Marina del Rey, California. Mann, William C. and Matthiessen, Christian M.I.M. 1983 Nigel: A</address>
<author confidence="0.552073">Technical</author>
<affiliation confidence="0.983228">iSi/RR-83-105 (February). USC/Information Sciences Institute,</affiliation>
<address confidence="0.9496325">Marina del Rey, California. Sondheimer, Norman K. and Nebel, Bernhard 1986 A Logical-Form</address>
<author confidence="0.558102">In</author>
<note confidence="0.88165225">AAAI-86, Proceedings of the National Conference on Artificial Intelli- Pennsylvania (August). USC/ISI 1985 Penman&apos;s Logical Language. USC/Information Sciences Institute, Marina del Rey, California. Vilain, M. 1985 The Restricted Language Architecture of a Hybrid System. In of the Ninth International Conference on Artificial Intelligence. Angeles, California (August): 547-551.</note>
<affiliation confidence="0.581272333333333">CALLS FOR PAPERS SECOND INTERNATIONAL WORKSHOP ON LANGUAGE UNDERSTANDING AND LOGIC PROGRAMMING</affiliation>
<address confidence="0.983979">17-20 August 1987, Vancouver, B.C., Canada</address>
<abstract confidence="0.951452176470588">The workshop will consider fundamental principles and important innovations in the design, definition, uses, and extensions of logic programming to natural language understanding and, conversely, the adequacy of logic programming to express natural language formalisms The main topics of interest are: • Logic grammar formalisms • Formal representations of natural language sentences and texts • Resolution methods for specific aspects such as anaphoras, coordination • Natural language generation • Uses of techniques for logic grammars (unification) in other grammar formalisms • Compilers and interpreters for grammar formalisms • Applications: natural language front ends DEADLINES</abstract>
<note confidence="0.9522905">Submission of paper in final form 15 March 1987 Author notification of acceptance 1 June 1987 Workshop 17-19 August Final papers will be published in a book.</note>
<title confidence="0.441202">SUBMISSION OF PAPERS</title>
<abstract confidence="0.9653112">Papers should contain the following: title, name and address (es) of author(s), affiliation(s), address(es) and phone (or telex) number(s), and one program area. Papers must relate recent and unpublished work.</abstract>
<note confidence="0.602888333333333">Please send four copies of an 8-12 page, singlespaced, typed manuscript, including a 150-200 word abstract, to:</note>
<author confidence="0.988565">Patrick Saint-Dizier</author>
<affiliation confidence="0.997851">Department of Computing Science Simon Fraser University</affiliation>
<address confidence="0.960775333333333">Burnaby, B.C. V5A 1S6 CANADA 1987 WORKSHOP ON VISUAL</address>
<affiliation confidence="0.98942">IEEE COMPUTER SOCIETY</affiliation>
<address confidence="0.979238">19-21 August 1987, Linkoping, Sweden</address>
<abstract confidence="0.936213666666667">Papers are invited on theory, methodology, and applications of visual languages, including both languages that have a heavy visual component and languages designed for operating on visual objects. Areas related to visual languages, such as man-machine interface, office automation, computer-aided design, computer hardware, and knowledge-based systems, are also of interest if the visual language aspect is in focus. Topics include, but are not limited to</abstract>
<title confidence="0.964172416666667">Visual Data Structure • Formal, Cognitive, and Semantic Models for Visual Languages • Shape Grammars • Visual Programming • Visual Support for Software Production • Visualization of Programs and their Behavior • User Interfaces Using Visual Objects • Representation and Acquisition of Visual Knowledge • Icon and Iconic System Design • Animation Research • Multimedia Systems</title>
<note confidence="0.602323666666667">Submit three copies of each paper — maximum length 5,000 words — to the Program Chairman (see below). Linguistics, Volume 12, Number 4, October-December 1986</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Cumming</author>
</authors>
<title>Susanna 1986a Design of a Master Lexicon.</title>
<date></date>
<tech>Technical Report ISI/RR-85-163</tech>
<institution>USC/Information Sciences Institute, Marina del Rey,</institution>
<location>California.</location>
<marker>Cumming, </marker>
<rawString>Cumming, Susanna 1986a Design of a Master Lexicon. Technical Report ISI/RR-85-163 (February). USC/Information Sciences Institute, Marina del Rey, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cumming</author>
</authors>
<title>Susanna 1986b The Lexicon in Text Generation.</title>
<date></date>
<booktitle>Presented at The Workshop on Automating the Lexicon,</booktitle>
<tech>Technical Report ISI/RR-86-168. USC/Information</tech>
<institution>Sciences Institute, Marina del Rey, California.</institution>
<location>Pisa, Italy</location>
<marker>Cumming, </marker>
<rawString>Cumming, Susanna 1986b The Lexicon in Text Generation. Technical Report ISI/RR-86-168. USC/Information Sciences Institute, Marina del Rey, California. Presented at The Workshop on Automating the Lexicon, Pisa, Italy (May).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susanna Cumming</author>
<author>Robert Albano</author>
</authors>
<title>A Guide to Lexical Acquisition in the JANUS System.</title>
<date>1986</date>
<tech>Technical Report ISI/ RR-85-162</tech>
<institution>USC/Information Sciences Institute, Marina del Rey,</institution>
<location>California.</location>
<contexts>
<context position="5749" citStr="Cumming and Albano 1986" startWordPosition="887" endWordPosition="890">in independent capabilities over domain dependent ones. 315 The FINITE STRING Newsletter Site Report Finally, there are many linguistically and computationally significant issues that must be addressed if high quality generation is to be achieved. For example, we are working on improved methods for knowledge representation, vocabulary development, and for using semantics and discourse context to guide the generation of text. ACCOMPLISHMENTS By the time of this report, the project had created and delivered a Master Lexicon facility, ML, for vocabulary acquisition and use (Cumming 1986a, 1986b; Cumming and Albano 1986). ML is unusual in that it is compatible with the two radically different grammars of English in Janus: the Nigel generation grammar and the RUS understanding grammar. The system features a multiwindow bit mapped display manipulatable through the keyboard and a mouse. Online documentation is provided for all lexical choices. ML is built to allow for the extension of the Janus lexical system. It is also possible to use ML with other natural language processing systems by replacement of a single data structure. In addition, work has been done on bringing the Nigel and RUS grammars into compatibi</context>
</contexts>
<marker>Cumming, Albano, 1986</marker>
<rawString>Cumming, Susanna and Albano, Robert 1986 A Guide to Lexical Acquisition in the JANUS System. Technical Report ISI/ RR-85-162 (February). USC/Information Sciences Institute, Marina del Rey, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christopher Habel</author>
</authors>
<title>Referential Nets with Attributes. In</title>
<date>1982</date>
<booktitle>Horecky, Ed., Proceedings of COLING-82. North-Holland,</booktitle>
<location>Amsterdam.</location>
<marker>Habel, 1982</marker>
<rawString>Habel, Christopher 1982 Referential Nets with Attributes. In Horecky, Ed., Proceedings of COLING-82. North-Holland, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Kaczmarek</author>
<author>R Bates</author>
<author>G Robins</author>
</authors>
<title>Recent Developments in NIKL.</title>
<date>1986</date>
<booktitle>In AAAI-86, Proceedings of the National Conference on Artificial Intelligence. AAAI,</booktitle>
<location>Philadelphia, Pennsylvania</location>
<marker>Kaczmarek, Bates, Robins, 1986</marker>
<rawString>Kaczmarek, T.; Bates, R.; and Robins, G. 1986 Recent Developments in NIKL. In AAAI-86, Proceedings of the National Conference on Artificial Intelligence. AAAI, Philadelphia, Pennsylvania (August).</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Kaczmarek</author>
<author>W Mark</author>
<author>N Sondheimer</author>
</authors>
<title>The Consul/CUE Interface: An Integrated Interactive Environment.</title>
<date>1983</date>
<booktitle>In Proceedings of CHI &apos;83 Human Factors in Computing Systems.</booktitle>
<pages>98--102</pages>
<publisher>ACM</publisher>
<marker>Kaczmarek, Mark, Sondheimer, 1983</marker>
<rawString>Kaczmarek, T.; Mark, W.; and Sondheimer, N. 1983 The Consul/CUE Interface: An Integrated Interactive Environment. In Proceedings of CHI &apos;83 Human Factors in Computing Systems. ACM (December): 98-102.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Mann</author>
</authors>
<title>Discourse Structures for Text Generation.</title>
<date>1984</date>
<tech>Technical Report RR-84-127</tech>
<institution>USC/Information Sciences Institute, Marina del Rey,</institution>
<location>California.</location>
<contexts>
<context position="13659" citStr="Mann 1984" startWordPosition="2166" endWordPosition="2167">y to text planning. A procedure has been developed that can design structures for paragraph-length texts given information about the text goal and communication situation. Computational Linguistics, Volume 12, Number 4, October-December 1986 FUTURE EFFORT In the next phase of our effort, Penman will be delivered to BBN, integrated into Janus, and demonstrated in an extensive series of laboratory exercises. This version of Penman will support coordinated English input and output, paraphrasing, and user assistance, as well as constructive rhetorical structure theory to create descriptive texts (Mann 1984). For a machine to create fluent English texts, several problems of text organization and presentation must be solved. ISI will design, implement, and demonstrate two kinds of new text planning processes. One will be a planner for gross organization of text based on rhetorical structure theory, and the other a low level planner for sentence configurations. In addition, ISI will examine the expert system explanation functionality necessary within FCCBMP, and will design a text planner to meet those needs. Enhancements to the basic interface to Penman will also be developed. As part of Janus, BB</context>
</contexts>
<marker>Mann, 1984</marker>
<rawString>Mann, W. 1984 Discourse Structures for Text Generation. Technical Report RR-84-127 (February). USC/Information Sciences Institute, Marina del Rey, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William C Mann</author>
<author>Christian M I M Matthiessen</author>
</authors>
<title>Nigel: A Systemic Grammar for Text Generation.</title>
<date>1983</date>
<tech>Technical Report iSi/RR-83-105 (February). USC/Information</tech>
<institution>Sciences Institute, Marina del Rey,</institution>
<location>California.</location>
<contexts>
<context position="7888" citStr="Mann and Matthiessen 1983" startWordPosition="1228" endWordPosition="1231">n using the knowledge base (Sondheimer &amp; Nebel 1986). We have: 1. Developed a demand language, Penman Logical Form (PLF), based on first order logic (USC/ISI 1985), 2. Structured a NIKL (New Implementation of KL-ONE) network (Kaczmarek 1986) to reflect conceptual distinctions observed by functional systemic linguists. 3. Developed a method for translation of demands for expression into a propositional logic database, 4. Employed KL-TWO (Vilain 1985) to analyze the translated demands, and 5. Used the results of the analyses to provide directions to the Nigel English sentence generation system (Mann and Matthiessen 1983). To first order logic, PLF adds restricted quantification, i.e., the ability to restrict the set quantified over. In addition, we allow for equality and some related quantifiers and operators, such as the quantifier for &amp;quot;there exists exactly one ...&amp;quot; , the operator for &amp;quot;the one thing that ...&amp;quot;. We permit the formation and manipulation of sets, including a predicate for set membership (ELEMENTOF). And we have some quantifiers and operators based on Habel&apos;s (1982) eta operator. The system&apos;s knowledge has been organized in a new way in order to facilitate English expression. Abstract concepts co</context>
</contexts>
<marker>Mann, Matthiessen, 1983</marker>
<rawString>Mann, William C. and Matthiessen, Christian M.I.M. 1983 Nigel: A Systemic Grammar for Text Generation. Technical Report iSi/RR-83-105 (February). USC/Information Sciences Institute, Marina del Rey, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Norman K Sondheimer</author>
<author>Bernhard Nebel</author>
</authors>
<title>A Logical-Form and Knowledge-Base Design for Natural Language Generation.</title>
<date>1986</date>
<booktitle>In AAAI-86, Proceedings of the National Conference on Artificial Intelligence. AAAI,</booktitle>
<location>Philadelphia, Pennsylvania</location>
<contexts>
<context position="7314" citStr="Sondheimer &amp; Nebel 1986" startWordPosition="1143" endWordPosition="1146"> of general applicability. For example, a good notation ought to be generally useful in a reasoning system. The notation should have a well-defined semantics. In addition, the generator has to have some way of interpreting the demands. This interpretation has to be efficient. In our research, we have chosen to use formal logic as a demand language. Network knowledge bases are used to define the domain of discourse in order to help the generator interpret the logical forms. And a restricted, hybrid knowledge representation is utilized to analyze demands for expression using the knowledge base (Sondheimer &amp; Nebel 1986). We have: 1. Developed a demand language, Penman Logical Form (PLF), based on first order logic (USC/ISI 1985), 2. Structured a NIKL (New Implementation of KL-ONE) network (Kaczmarek 1986) to reflect conceptual distinctions observed by functional systemic linguists. 3. Developed a method for translation of demands for expression into a propositional logic database, 4. Employed KL-TWO (Vilain 1985) to analyze the translated demands, and 5. Used the results of the analyses to provide directions to the Nigel English sentence generation system (Mann and Matthiessen 1983). To first order logic, PL</context>
</contexts>
<marker>Sondheimer, Nebel, 1986</marker>
<rawString>Sondheimer, Norman K. and Nebel, Bernhard 1986 A Logical-Form and Knowledge-Base Design for Natural Language Generation. In AAAI-86, Proceedings of the National Conference on Artificial Intelligence. AAAI, Philadelphia, Pennsylvania (August).</rawString>
</citation>
<citation valid="true">
<authors>
<author>USCISI</author>
</authors>
<title>Penman&apos;s Logical Language. USC/Information Sciences Institute,</title>
<date>1985</date>
<location>Marina del Rey, California.</location>
<marker>USCISI, 1985</marker>
<rawString>USC/ISI 1985 Penman&apos;s Logical Language. USC/Information Sciences Institute, Marina del Rey, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Vilain</author>
</authors>
<title>The Restricted Language Architecture of a Hybrid Representation System.</title>
<date>1985</date>
<booktitle>In Proceedings of the Ninth International Joint Conference on Artificial Intelligence.</booktitle>
<pages>547--551</pages>
<location>Los Angeles, California</location>
<contexts>
<context position="7715" citStr="Vilain 1985" startWordPosition="1203" endWordPosition="1204">urse in order to help the generator interpret the logical forms. And a restricted, hybrid knowledge representation is utilized to analyze demands for expression using the knowledge base (Sondheimer &amp; Nebel 1986). We have: 1. Developed a demand language, Penman Logical Form (PLF), based on first order logic (USC/ISI 1985), 2. Structured a NIKL (New Implementation of KL-ONE) network (Kaczmarek 1986) to reflect conceptual distinctions observed by functional systemic linguists. 3. Developed a method for translation of demands for expression into a propositional logic database, 4. Employed KL-TWO (Vilain 1985) to analyze the translated demands, and 5. Used the results of the analyses to provide directions to the Nigel English sentence generation system (Mann and Matthiessen 1983). To first order logic, PLF adds restricted quantification, i.e., the ability to restrict the set quantified over. In addition, we allow for equality and some related quantifiers and operators, such as the quantifier for &amp;quot;there exists exactly one ...&amp;quot; , the operator for &amp;quot;the one thing that ...&amp;quot;. We permit the formation and manipulation of sets, including a predicate for set membership (ELEMENTOF). And we have some quantifie</context>
</contexts>
<marker>Vilain, 1985</marker>
<rawString>Vilain, M. 1985 The Restricted Language Architecture of a Hybrid Representation System. In Proceedings of the Ninth International Joint Conference on Artificial Intelligence. Los Angeles, California (August): 547-551.</rawString>
</citation>
<citation valid="false">
<institution>Patrick Saint-Dizier Department of Computing Science Simon Fraser University Burnaby, B.C.</institution>
<marker></marker>
<rawString>Patrick Saint-Dizier Department of Computing Science Simon Fraser University Burnaby, B.C.</rawString>
</citation>
<citation valid="false">
<booktitle>V5A 1S6</booktitle>
<publisher>CANADA</publisher>
<marker></marker>
<rawString>V5A 1S6 CANADA</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>