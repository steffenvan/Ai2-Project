<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000167">
<title confidence="0.973728">
An Alternative Conception of
Tree-Adjoining Derivation*
</title>
<author confidence="0.956992">
Yves Schabes
</author>
<affiliation confidence="0.876549875">
Department of Computer and
Information Science
University of Pennsylvania
Philadelphia, PA 19104
Stuart M. Shieber
Aiken Computation Laboratory
Division of Applied Sciences
Harvard University
</affiliation>
<address confidence="0.642608">
Cambridge, MA 02138
</address>
<sectionHeader confidence="0.98946" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99996675">
The precise formulation of derivation for tree-
adjoining grammars has important ramifications
for a wide variety of uses of the formalism, from
syntactic analysis to semantic interpretation and
statistical language modeling. We argue that the
definition of tree-adjoining derivation must be re-
formulated in order to manifest the proper linguis-
tic dependencies in derivations. The particular
proposal is both precisely characterizable, through
a compilation to linear indexed grammars, and
computationally operational, by virtue of an ef-
ficient algorithm for recognition and parsing.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999841363636364">
In a context-free grammar, the derivation of a
string in the rewriting sense can be captured in
a single canonical tree structure that abstracts all
possible derivation orders. As it turns out, this
derivation tree also corresponds exactly to the hi-
erarchical structure that the derivation imposes on
the string, the derived tree structure of the string.
The formalism of tree-adjoining grammars (TAG),
on the other hand, decouples these two notions of
derivation tree and derived tree. Intuitively, the
derivation tree is a more finely grained structure
</bodyText>
<footnote confidence="0.983011166666667">
*The authors are listed in alphabetical order. The first
author was supported in part by DARPA Grant N0014-
90-31863, ARO Grant DAAL03-89-G-0031 and NSF Grant
IRI90-16592. The second author was supported in part by
Presidential Young Investigator award IRI-91-57996 from
the National Science Foundation, The authors wish to
thank Aravind Joshi for his support of the research, and
Aravind Joshi, Anthony Kroch, Fernando Pereira, and
K. Vijay-Shanker for their helpful discussions of the issues
involved. We are indebted to David Yarowsky for aid in
the design of the experiment mentioned in footnote 5 and
for its execution.
</footnote>
<bodyText confidence="0.999927435897436">
than the derived tree, and as such can serve as a
substrate on which to pursue further analysis of
the string. This intuitive possibility is made man-
ifest in several ways. Fine-grained syntactic anal-
ysis can be pursued by imposing on the deriva-
tion tree further combinatorial constraints, for
instance, selective adjoining constraints or equa-
tional constraints over feature structures. Statis-
tical analysis can be explored through the speci-
fication of derivational probabilities as formalized
in stochastic tree-adjoining grammars. Semantic
analysis can be overlaid through the synchronous
derivations of two TAGs.
All of these methods rely on the derivation tree
as the source of the important primitive relation-
ships among trees. The decoupling of derivation
trees from derived trees thus makes possible a
more flexible ability to pursue these types of anal-
yses. At the same time, the exact definition of
derivation becomes of paramount importance. In
this paper, we argue that previous definitions of
tree-adjoining derivation have not taken full ad-
vantage of this decoupling, and are not as appro-
priate as they might be for the kind of further
analysis that tree-adjoining analyses could make
possible. In particular, the standard definition of
derivation, due to Vijay-Shanker (1987), requires
that elementary trees be adjoined at distinct nodes
in elementary trees. However, in certain cases,
especially cases characterized as linguistic modi-
fication, it is more appropriate to allow multiple
adjunctions at a single node.
In this paper, we propose a redefinition of TAG
derivation along these lines, whereby multiple aux-
iliary trees of modification can be adjoined at a
single node, whereas only a single auxiliary tree
of predication can. The redefinition constitutes a
new definition of derivation for TAG that we will
refer to as extended derivation. In order for such
</bodyText>
<page confidence="0.995628">
167
</page>
<bodyText confidence="0.99415816">
a redefinition to be serviceable, however, it is nec-
essary that it be both precise and operational. In
service of the former, we provide a rigorous speci-
fication of our proposal in terms of a compilation
of TAGs into corresponding linear indexed gram-
mars (LIG) that makes the derivation structure
explicit. With respect to the latter, we show how
the generated LIG can drive a parsing algorithm
that recovers, either implicitly or explicitly, the
extended derivations of the string.
The paper is organized as follows. First, we re-
view Vijay-Shanker&apos;s standard definition of TAG
derivation, and introduce the motivation for ex-
tended derivations. Then, we present the extended
notion of derivation informally, and formalize it
through the compilation of TAGs to LIGs. The
original compilation provided by Vijay-Shanker
and Weir and our variant for extended derivations
are both decribed. Finally, we briefly mention a
parsing algorithm for TAG that recovers extended
derivations either implicitly or explicitly, and dis-
cuss some issues surrounding it. Space limitations
preclude us from presenting the algorithm itself,
but a full description is given elsewhere (Schabes
and Shieber, 1992).
</bodyText>
<figure confidence="0.9986104">
Adj N*
roasted
(Pro)
potato pepper
(apo) (ape)
N* Adj N*
baked
Adj
red
Ore)
</figure>
<figureCaption confidence="0.999863">
Figure 1: A sample tree-adjoining grammar
</figureCaption>
<sectionHeader confidence="0.978907" genericHeader="introduction">
2 The Standard Definition of
Derivation
</sectionHeader>
<bodyText confidence="0.99973655">
To exemplify the distinction between standard and
extended derivations, we exhibit the TAG of Fig-
ure 1. This grammar derives some simple noun
phrases such as &amp;quot;roasted red pepper&amp;quot; and &amp;quot;baked
red potato&amp;quot;. The former, for instance, is associ-
ated with the derived tree in Figure 2(a). The tree
can be viewed as being derived in two ways&apos;
Dependent: The auxiliary tree Pro is adjoined
at the root node (address e) of p„. The re-
sultant tree is adjoined at the root node (ad-
dress e) of initial tree ape. This derivation is
depicted as the derivation tree in Figure 3(a).
Independent: The auxiliary trees [3,0 and ,3„
are adjoined at the root node of the initial
tree ape. This derivation is depicted as the
derivation tree in Figure 3(b).
In the independent derivation, two trees are sepa-
rately adjoined at one and the same node in the
initial tree. In the dependent derivation, on the
other hand, one auxiliary tree is adjoined to the
</bodyText>
<footnote confidence="0.997861">
1 As is standard in the TAG literature we disallow ad-
junction at the foot nodes of auxiliary trees.
</footnote>
<figureCaption confidence="0.999985">
Figure 2: Two trees derived by the grammar of
Figure 1
</figureCaption>
<figure confidence="0.9995508">
NP NP
Adj Adj
roasted Adj red Adj
red pepper roasted pepper
(a) (b)
</figure>
<page confidence="0.803748">
168
</page>
<figureCaption confidence="0.8044489">
ape of derivation definition, so that the standard def-
1 inition is as reasonable as any other. However,
Pre ape tree-adjoining grammars are almost universally
El extended with augmentations that make the issue
Pro Pro &apos;ire apposite. We discuss three such variations here, all
(a) (b) of which argue for the use of independent deriva-
Figure 3: Derivation trees for the derived tree of tions under certain circumstances.
Figure 2(a) according to the grammar of Figure 1 3.1 Adding Adjoining Constraints
other, the latter only being adjoined to the initial Already in very early work on tree-adjoining gram-
tree. We will use this informal terminology uni- mars (Joshi et al., 1975) constraints were allowed
</figureCaption>
<bodyText confidence="0.98712751724138">
formly in the sequel to distinguish the two general to be specified as to whether a particular auxiliary
topologies of derivation trees. tree may or may not be adjoined at a particular
The standard definition of derivation, as codified node in a particular tree. The idea is formulated
by Vijay-Shanker, restricts derivations so that two in its modern variant as selective-adjoining con-
adjunctions cannot occur at the same node in the straints (Vijay-Shanker and Joshi, 1985). As an
same elementary tree. The dependent notion of application of this capability, we consider the re-
derivation is therefore the only sanctioned deriva- mark by Quirk et al. (1985, page 517) that &amp;quot;di-
tion for the desired tree in Figure 2(a); the inde- rection adjuncts of both goal and source can nor-
pendent derivation is disallowed. Vijay-Shanker&apos;s mally be used only with verbs of motion&amp;quot;, which
definition is appropriate because for any indepen- accounts for the distinction between the following
dent derivation, there is a dependent derivation of sentences:
the same derived tree. This can be easily seen in (1)a. Brockway escorted his sister to the annual
that any adjunction of 132 at a node at which an cotillion.
adjunction of th occurs could instead be replaced b. #Brockway resembled his sister to the an-
by an adjunction of )32 at the root of /31. nual cotillion.
The advantage of this standard definition of This could be modeled by disallowing through se-
derivation is that a derivation tree in this normal lective adjoining constraints the adjunction of the
form unambiguously specifies a derived tree. The elementary tree corresponding to a to adverbial at
independent derivation tree on the other hand is the VP node of the elementary tree corresponding
ambiguous as to the derived tree it specifies in to the verb resembles.&apos; However, the restriction
that a notion of precedence of the adjunctions at applies even with intervening (and otherwise ac-
the same node is unspecified, but crucial to the ceptable) adverbials.
derived tree specified. This follows from the fact (2)a. Brockway escorted his sister last year.
that the independent derivation tree is symmetric b. Brockway escorted his sister last year to
with respect to the roles of the two auxiliary trees the annual cotillion.
(by inspection), whereas the derived tree is not. (3)a. Brockway resembled his sister last year.
By symmetry, therefore, it must be the case that b. #Brockway resembled his sister last year to
the same independent derivation tree specifies the the annual cotillion.
alternative derived tree in Figure 2(b).
3 Motivation for Extended
Derivations
Under the standard definition of derivation, there
is no direct adjunction in the latter sentence of
the to tree into the resembles tree. Rather, it is
dependently adjoined at the root of the elemen-
tary tree that heads the adverbial last year, the
latter directly adjoining into the main verb tree.
To restrict both of the ill-formed sentences, then,
a restriction must be placed not only on adjoining
In the absence of some further interpretation of 169 2Whether the adjunction occurs at the VP node or the
the derivation tree nothing hinges on the choice S node is immaterial to the argument.
the goal adverbial in a resembles context, but also
in the last year adverbial context. But this con-
straint is too strong, as it disallows sentence (2b)
above as well.
The problem is that the standard derivation
does not correctly reflect the syntactic relation be-
tween adverbial modifier and the phrase it modi-
fies when there are multiple modifications in a sin-
gle clause. In such a case, each of the adverbials
independently modifies the verb, and this should
be reflected in their independent adjunction at the
same point. But this is specifically disallowed in a
standard derivation.
It is important to note that the argument ap-
plies specifically to auxiliary trees that correspond
to a modification relationship. Auxiliary trees are
used in TAG typically for predication relations as
wel1,3 as in the case of raising and sentential com-
plement constructions.4 Consider the following
sentences. (The brackets mark the leaves of the
pertinent trees to be combined by adjunction in
the assumed analysis.)
(4)a. Brockway conjectured that Harrison
wanted to escort his sister.
b. [Brockway conjectured that] [Harrison
wanted] [to escort his sister]
(5)a. Brockway wanted to try to escort his sis-
ter.
b. [Brockway wanted] [to try] [to escort his
sister]
(6)a. * Harrison wanted Brockway tried to escort
his sister.
b. * [Harrison wanted] [Brockway tried] [to es-
cort his sister]
Assume (following, for instance, the analysis of
Kroch and Joshi (1985)) that the trees associ-
ated with the various forms of the verbs &amp;quot;try&amp;quot;,
&amp;quot;want&amp;quot;, and &amp;quot;conjecture&amp;quot; all take sentential com-
plements, certain of which are tensed with overt
subjects and others untensed with empty subjects.
The auxiliary trees for these verbs specify by ad-
3 We use the term &apos;predication&apos; in its logical sense, that
is, for auxiliary trees that serve as logical predicates over
the trees into which they adjoin, in contrast to the term&apos;s
linguistic sub-sense in which the argument of the predicate
is a linguistic subject.
4 The distinction between predicative and modifier trees
has been proposed previously for purely linguistic reasons
by Kroch (1989), who refers to them as thematic and ath-
ematic trees, respectively. The arguments presented here
can be seen as providing further evidence for differentiating
the two kinds of auxiliary trees.
junction constraints which type of sentential com-
plement they take: &amp;quot;conjecture&amp;quot; requires tensed
complements, &amp;quot;want&amp;quot; and &amp;quot;try&amp;quot; untensed. Under
this analysis the auxiliary trees must not be al-
lowed to independently adjoin at the same node.
For instance, if trees corresponding to &amp;quot;Harrison
wanted&amp;quot; and &amp;quot;Brockway tried&amp;quot; (which both re-
quire untensed complements) were both adjoined
at the root of the tree for &amp;quot;to escort his sister&amp;quot;, the
selective adjunction constraints would be satisfied,
yet the generated sentence (6a) is ungrammatical.
Thus, the case of predicative trees is entirely unlike
that of modifier trees. Here, the standard notion
of derivation is exactly what is needed as far as in-
terpretation of adjoining constraints is concerned.
In summary, the interpretation of adjoining con-
straints in TAG is sensitive to the particular no-
tion of derivation that is used. Therefore, it can be
used as a litmus test for an appropriate definition
of derivation. As such, it argues for a nonstandard,
independent, notion of derivation for modifier aux-
iliary trees and a standard, dependent, notion for
predicative trees.
</bodyText>
<subsectionHeader confidence="0.999995">
3.2 Adding Statistical Parameters
</subsectionHeader>
<bodyText confidence="0.999828428571429">
In a similar vein, the statistical parameters of
a stochastic lexicalized TAG (SLTAG) (Resnik,
1992; Schabes, 1992) specify the probability of ad-
junction of a given auxiliary tree at a specific node
in another tree. This specification may again be
interpreted with regard to differing derivations,
obviously with differing impact on the resulting
probabilities assigned to derivation trees. (In the
extreme case, a constraint prohibiting adjoining
corresponds to a zero probability in an SLTAG.
The relation to the argument in the previous sec-
tion follows thereby.) Consider a case in which
linguistic modification of noun phrases by adjec-
tives is modeled by adjunction of a modifying tree.
Under the standard definition of derivation, mul-
tiple modifications of a single NP would lead to
dependent adjunctions in which a first modifier
adjoins at the root of a second. As an example,
we consider again the grammar given in Figure 1,
that admits of derivations for the strings &amp;quot;baked
red potato&amp;quot; and &amp;quot;baked red pepper&amp;quot;. Specifying
adjunction probabilities on standard derivations,
the distinction between the overall probabilities
for these two strings depends solely on the ad-
junction probabilities of )3„ (the tree for red) into
apo and ape (those for potato and pepper, respec-
tively), as the tree IA for the word baked is adjoined
in both cases at the root of gre in both standard
</bodyText>
<page confidence="0.982605">
170
</page>
<bodyText confidence="0.999983">
derivations. In the extended derivations, on the
other hand, both modifying trees are adjoined in-
dependently into the noun trees. Thus, the overall
probabilities are determined as well by the prob-
abilities of adjunction of the trees for baked into
the nominal trees. It seems intuitively plausible
that the most important relationships to charac-
terize statistically are those between modifier and
modified, rather than between two modifiers.5 In
the case at hand, the fact that potatoes are more
frequently baked, whereas peppers are roasted,
would be more determining of the expected overall
probabilities.
Note again that the distinction between modi-
fier and predicative trees is important. The stan-
dard definition of derivation is entirely appropriate
for adjunction probabilities for predicative trees,
but not for modifier trees.
</bodyText>
<subsectionHeader confidence="0.999733">
3.3 Adding Semantics
</subsectionHeader>
<bodyText confidence="0.996990259259259">
Finally, the formation of synchronous TAGs has
been proposed to allow use of TAGs in semantic
interpretation, natural language generation, and
machine translation. In previous work (Shieber
and Schabes, 1990), the definition of synchronous
TAG derivation is given in a manner that requires
multiple adjunctions at a single node. The need
for such derivations follows from the fact that syn-
chronous derivations are intended to model seman-
tic relationships. In cases of multiple adjunction
of modifier trees at a single node, the appropri-
ate semantic relationships comprise separate mod-
ifications rather than cascaded ones, and this is
reflected in the definition of synchronous TAG
derivation.6 Because of this, a parser for syn-
chronous TAGs must recover, at least implicitly,
the extended derivations of TAG derived trees.
5Intuition is an appropriate guide in the design of the
SLTAG framework, as the idea is to set up a linguisti-
cally plausible infrastructure on top of which a lexically-
based statistical model can be built. In addition, sugges-
tive (though certainly not conclusive) evidence along these
lines can be gleaned from corpora analyses. For instance, in
a simple experiment in which medium frequency triples of
exactly the discussed form &amp;quot;(adjective) (adjective) (noun)&amp;quot;
were examined, the mean mutual information between the
first adjective and the noun was found to be larger than
that between the two adjectives. The statistical assump-
tions behind the experiment do not allow very robust con-
clusions to be drawn, and more work is needed along these
lines.
6 The importance of the distinction between predicative
and modifier trees with respect to how derivations are de-
fined was not appreciated in the earlier work; derivations
were taken to be of the independent variety in all cases. In
future work, we plan to remedy this flaw.
Note that the independence of the adjunction of
modifiers in the syntax does not imply that seman-
tically there is no precedence or scoping relation
between them. As exemplified in Figure 4, the de-
rived tree generated by multiple independent ad-
junctions at a single node still manifests nesting
relationships among the adjoined trees. This fact
may be used to advantage in the semantic half of
a synchronous tree-adjoining grammar to specify
the semantic distinction between, for example, the
following two sentences:7
(7)a. Brockway paid for the tickets twice inten-
tionally.
b. Brockway paid for the tickets intention-
ally twice.
We hope to address this issue in greater detail in
future work on synchronous tree-adjoining gram-
mars.
</bodyText>
<sectionHeader confidence="0.9014865" genericHeader="method">
4 Informal Specification of
Extended Derivations
</sectionHeader>
<bodyText confidence="0.99598">
We have presented several arguments that the
standard notion of derivation does not allow for
an appropriate specification of dependencies to be
captured. An extended notion of derivation is
needed that
</bodyText>
<listItem confidence="0.998991">
1. Differentiates predicative and modifier auxil-
iary trees;
2. Requires dependent derivations for predica-
tive trees;
3. Requires independent derivations for modifier
trees; and
4. Unambiguously specifies a derived tree.
</listItem>
<bodyText confidence="0.998204545454546">
Recall that a derivation tree is a tree with un-
ordered arcs where each node is labeled by an el-
ementary tree of a TAG and each arc is labeled
by a tree address specifying a node in the parent
tree. In a standard derivation tree no two sibling
arcs can be labeled with the same address. In an
extended derivation tree, however, the condition
is relaxed: No two sibling arcs to predicative trees
can be labeled with the same address. Thus, for
any given address there can be at most one pred-
icative tree and several modifier trees adjoined at
</bodyText>
<footnote confidence="0.811452666666667">
7 We are indebted to an anonymous reviewer for raising
this issue crisply through examples similar to those given
here.
</footnote>
<page confidence="0.996313">
171
</page>
<figureCaption confidence="0.97978">
Figure 4: Schematic extended derivation tree and
associated derived tree
</figureCaption>
<bodyText confidence="0.999826894117647">
that node. So as to fully specify the output derived
tree, we specify a partial ordering on sibling arcs
by mandating that arcs corresponding to modifier
trees adjoined at the same address are treated as
ordered left-to-right. However, all other arcs, in-
cluding those for predicative adjunctions are left
unordered.
A derivation tree specifies a derived tree through
a bottom-up traversal (as is standard since the
work of Vijay-Shanker (1987)). The choice of a
particular traversal order plays the same role as
choosing a particular rewriting derivation order
in a context-free grammar — leftmost or right-
most, say — in eliminating spurious ambiguity due
to inconsequential reordering of operations. An
extended derivation tree specifies a derived tree
in exactly the same manner, except that there
must be a specification of the derived tree spec-
ified when several trees are adjoined at the same
node.
Assume that in a given tree T at a particular
address t, the predicative tree P and the k mod-
ifier trees M1, , Mk (in that order) are directly
adjoined. Schematically, the extended derivation
tree would appear as in Figure 4(a). Associated
with the subtrees rooted at the k + 1 elementary
auxiliary trees in this derivation are k + 1 derived
auxiliary trees (Ap and A1, , A,, respectively).
(The derived auxiliary trees are specified induc-
tively; it is this sense in which the definition cor-
responds to a bottom-up traversal.)
There are many possible trees that might be en-
tertained as the derived tree associated with the
derivation rooted at T, one for each permutation
of the k + 1 auxiliary trees. Since the ordering of
the modifiers in the derivation tree is essentially
arbitrary, we can fix on a single ordering of these
in the output tree. We will choose the ordering in
which the top to bottom order in the derived tree
follows the partial order on the nodes in the deriva-
tion tree. Thus A1 appears higher in the tree than
A2, A2 higher than A3 and so forth. This much is
arbitrary.
The choice of where the predicative tree goes,
however, is consequential. There are k+1 possible
positions, of which only two can be seriously main-
tained: outermost, at the top of the tree; or inner-
most, at the bottom. We complete the (informal)
definition of extended derivation by specifying the
derived tree corresponding to such a derivation to
manifest outermost predication as depicted in Fig-
ure 4(b).
Both linguistic and technical consequences ar-
gue for outermost, rather than innermost, predi-
cation. Linguistically, the outermost method spec-
ifies that if both a predicative tree and a modifier
tree are adjoined at a single node, then the pred-
icative tree attaches &amp;quot;higher&amp;quot; than the modifier
tree; in terms of the derived tree, it is as if the
predicative tree were adjoined at the root of the
modifier tree. This accords with the semantic in-
tuition that in such a case, the modifier is modify-
ing the original tree, not the predicative one. (The
alternate &amp;quot;reading&amp;quot;, in which the modifier modi-
fies the predicative tree, is still obtainable under
an outermost-predication standard by having the
modifier auxiliary tree adjoin at the root node of
the predicative tree.) In contrast, the innermost-
predication method specifies that the modifier tree
attaches higher, as if the modifier tree adjoined at
the root of the predicative tree and was therefore
modifying the predicative tree, contra semantic in-
tuitions.
From a technical standpoint, the outermost-
predication method requires no changes to the
parsing rules to be presented later, but only a sin-
gle addition. The innermost-predication method
induces some subtle interactions between the orig-
inal parsing rules and the additional one, necessi-
tating a much more complicated set of modifica-
tions to the original algorithm. (In fact, the com-
plexities in generating such an algorithm consti-
tuted the precipitating factor that led us to revise
our original, innermost-predication, attempt at re-
defining tree-adjoining derivation.)
</bodyText>
<figure confidence="0.912965333333333">
yitN
••• P ••• Mk •••
AA A
</figure>
<page confidence="0.99034">
172
</page>
<sectionHeader confidence="0.7916455" genericHeader="method">
5 Formal Specification of Ex-
tended Derivations
</sectionHeader>
<bodyText confidence="0.999965222222222">
In all three application areas of TAGs, the need
is evidenced for a modified notion of derivation
that retains the dependent notion of derivation for
predicative trees but mandates independent ad-
junction for modifier trees. A formal definition
of extended derivation can be given by means of a
compilation of tree-adjoining grammars into linear
indexed grammars. We discuss such a compilation
in this section. This compilation is especially use-
ful as it can be used as the basis for a parsing al-
gorithm that recovers the extended derivations for
strings. The design of the algorithm is the topic
of Section 6.
Linear indexed grammars (LIG) constitute a
grammatical framework based, like context-free,
context-sensitive, and unrestricted rewriting sys-
tems, on rewriting strings of nonterminal and ter-
minal symbols. Unlike these systems, linear in-
dexed grammars, like the indexed grammars from
which they are restricted, allow stacks of marker
symbols, called indices, to be associated with the
nonterminal symbols being rewritten. The linear
version of the formalism allows the full index infor-
mation from the parent to be used to specify the
index information for only one of the child con-
stituents. Thus, a linear indexed production can
be given schematically as:
</bodyText>
<equation confidence="0.953178">
No[..fioj Ni[fid• • • N3-1[)35-1]
N3+1[1381-1]• • N [13 k}
</equation>
<bodyText confidence="0.999793975609756">
The N1 are nonterminals, the fl strings of indices.
The &amp;quot;..&amp;quot; notation stands for the remainder of the
stack below the given string of indices. Note that
only one element on the right-hand side, Ns , in-
herits the remainder of the stack from the parent.
(This schematic rule is intended to be indicative,
not definitive. We ignore issues such as the option-
ality of the inherited stack, how terminal symbols
fit in, and so forth. Vijay-Shanker and Weir (1990)
present a complete discussion.)
Vijay-Shanker and Weir (1990) present a way of
specifying any TAG as a linear indexed grammar.
The LIG version makes explicit the standard no-
tion of derivation being presumed. Also, the LIG
version of a TAG grammar can be used for recog-
nition and parsing. Because the LIG formalism
is based on augmented rewriting, the parsing al-
gorithms can be much simpler to understand and
easier to modify, and no loss of generality is in-
curred. For these reasons, we use the technique in
this work.
The compilation process that manifests the
standard definition of derivation can be most eas-
ily understood by viewing nodes in a TAG elemen-
tary tree as having both a top and bottom compo-
nent, identically marked for nonterminal category,
that dominate (but may not immediately domi-
nate) each other. (See Figure 5.) The rewrite
rules of the corresponding linear indexed gram-
mar capture the immediate domination between
a bottom node and its child top nodes directly,
and capture the domination between top and bot-
tom parts of the same node by optionally allowing
rewriting from the top of a node to an appropriate
auxiliary tree, and from the foot of the auxiliary
tree back to the bottom of the node. The index
stack keeps track of the nodes that adjunction has
occurred on so that the recognition to the left and
the right of the foot node will occur under identical
assumption of derivation structure. In summary,
the following LIG rules are generated:
</bodyText>
<listItem confidence="0.914438">
1. Immediate domination dominating foot: For
</listItem>
<bodyText confidence="0.99520225">
each auxiliary tree node that dominates
the foot node, with children . • • , 713, • • • , 9n,
where 77„ is the child that also dominates the
foot node, include a production
</bodyText>
<listItem confidence="0.871274">
-+ t[rii] • • • t[ris_ &apos;N..77,14718+1] • -47/n1
2. Immediate domination not including foot:
For each elementary tree node y that does
not dominate a foot node, with children
</listItem>
<bodyText confidence="0.832926">
yi, , tin, include a production
</bodyText>
<equation confidence="0.79673">
6[7i) --+ t[Iii] • • •t[lin]
</equation>
<listItem confidence="0.9782781">
3. No adjunction: For each elementary tree node
y that is not marked for substitution or oblig-
atory adjunction, include a production
4. Start root of adjunction: For each elementary
tree node y on which the auxiliary tree # with
root node rir can be adjoined, include the fol-
lowing production:
--+
5. Start foot of adjunction: For each elementary
tree node y on which the auxiliary tree # with
</listItem>
<page confidence="0.995738">
173
</page>
<figure confidence="0.9910285">
Type 1/2
Type S
</figure>
<figureCaption confidence="0.99985">
Figure 5: Schematic structure of adjunction with top and bottom of each node separated
</figureCaption>
<bodyText confidence="0.974242">
foot node ru can be adjoined, include the fol-
lowing production:
6. Start substitution: For each elementary tree
node ri marked for substitution on which the
initial tree a with root node 77,. can be substi-
tuted, include the production
</bodyText>
<equation confidence="0.507049">
t [. t [. rir]
</equation>
<bodyText confidence="0.999117913043478">
We will refer to productions generated by Rule i
above as Type i productions. For example, Type 3
productions are of the form t[..7i] b[..9]. For fur-
ther information concerning the compilation see
the work of Vijay-Shanker and Weir (1990) and
Schabes (1991). For present purposes, it is suf-
ficient to note that the method directly embeds
the standard notion of derivation in the rewriting
process. To perform an adjunction, we move (by
Rule 4) from the node adjoined at to the top of
the root of the auxiliary tree. At the root, ad-
ditional adjunctions might be performed. When
returning from the foot of the auxiliary tree back
to the node where adjunction occurred, rewriting
continues at the bottom of the node (see Rule 5),
not the top, so that no more adjunctions can be
started at that node. Thus, the dependent nature
of predicative adjunction is enforced because only
a single adjunction can occur at any given node.
In order to permit extended derivations, we
must allow for multiple modifier tree adjunctions
at a single node. There are two natural ways this
might be accomplished, as depicted in Figure 6.
</bodyText>
<figureCaption confidence="0.955091333333333">
Figure 6: Schematic structure of possible predica-
tive and modifier adjunctions with top and bottom
of each node separated
</figureCaption>
<figure confidence="0.998870666666667">
Apredicative
tree
•
• A modifier
tree
(c)
</figure>
<page confidence="0.831839">
174
</page>
<bodyText confidence="0.969583297872341">
1. Modified start foot of adjunction rule: Allow
moving from the bottom of the foot of a mod-
ifier auxiliary tree to the top (rather than the
bottom) of the node at which it adjoined (Fig-
ure 6b).
2. Modified start root of adjunction rule: Allow
moving from the bottom (rather than the top)
of a node to the top of the root of a modifier
auxiliary tree (Figure 6c).
As can be seen from the figures, both of these
methods allow recursion at a node, unlike the orig-
inal method depicted in Figure 6a. Thus multi-
ple modifier trees are allowed to adjoin at a single
node. Note that since predicative trees fall under
the original rules, at most a single predicative tree
can be adjoined at a node. The two methods cor-
respond exactly to the innermost- and outermost-
predication methods discussed in Section 4. For
the reasons described there, the latter is preferred.
In summary, independent derivation structures
can be allowed for modifier auxiliary trees by start-
ing the adjunction process from the bottom, rather
than the top of a node for those trees. Thus, we
split Type 4 LIG productions into two subtypes
for predicative and modifier trees, respectively.
4a. Start root of predicative adjunction: For each
elementary tree node I/ on which the predica-
tive auxiliary tree i3 with root node rir can be
adjoined, include the following production:
4b. Start root of modifier adjunction: For each
elementary tree node I/ on which the modi-
fier auxiliary tree i3 with root node lir can be
adjoined, include the following production:
Once this augmentation has been made, we no
longer need to allow for adjunctions at the root
nodes of modifier auxiliary trees, as repeated ad-
junction is now allowed for by the new rule 4b.
Consequently, Rules 4a and 4b must treat all mod-
ifier auxiliary tree root nodes as if they have ad-
joining constraints that forbid modifier tree ad-
junctions that do not correspond to modification
of the tree itself.
This simple modification to the compilation pro-
cess from TAG to LIG fully specifies the modified
notion of derivation. The recognition algorithms
for TAG based on this compilation, however, must
be adjusted to allow for the new rule types.
</bodyText>
<sectionHeader confidence="0.987226" genericHeader="evaluation">
6 Recognition and Parsing
</sectionHeader>
<bodyText confidence="0.999986720930232">
Following Schabes (1991), the LIG generated by
compiling a TAG can be used as the basis for Ear-
ley recognition. Schabes&apos;s original method must
be modified to respect the differences in compi-
lation engendered by extended derivations. Such
parsing rules, along with an extension that allows
building of explicit derivation trees on-line as a ba-
sis for incremental interpretation, have been devel-
oped, and are presented in an extended version of
this paper (Schabes and Shieber, 1992). In sum-
mary, the algorithm operates as a variant of Earley
parsing on the corresponding LIG. The set of ex-
tended derivations can subsequently be recovered
from the set of Earley items generated by the al-
gorithm. The resultant algorithm can be further
modified so as to build an explicit derivation tree
incrementally as parsing proceeds; this modifica-
tion, which is a novel result in its own right, al-
lows the parsing algorithm to be used by systems
that require incremental processing with respect
to tree-adjoining grammars.
As a proof of concept, the parsing algorithm
just described was implemented in Prolog on top
of a simple, general-purpose, agenda-based infer-
ence engine. Encodings of explicit inference rules
are essentially interpreted by the inference engine.
The Prolog database is used as the chart; items
not already subsumed by a previously generated
item are asserted to the database as the parser
runs. An agenda is maintained of potential new
items. Items are added to the agenda as inference
rules are triggered by items added to the chart.
Because the inference rules are stated explicitly,
the relation between the abstract inference rules
described in this paper and the implementation is
extremely transparent. Because the prototype was
implemented as a meta-interpreter it is not partic-
ularly efficient. (In particular, the implementation
does not achieve the theoretical 0(0) bound on
complexity, because of a lack of appropriate in-
dexing.) Code for the prototype implementation
is available for distribution electronically from the
authors.
</bodyText>
<sectionHeader confidence="0.999584" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.999858333333333">
The precise formulation of derivation for tree-
adjoining grammars has important ramifications
for a wide variety of uses of the formalism, from
syntactic analysis to semantic interpretation and
statistical language modeling. We have argued
that the definition of tree-adjoining derivation
</bodyText>
<page confidence="0.995209">
175
</page>
<bodyText confidence="0.99993825">
must be reformulated in order to take greatest ad-
vantage of the decoupling of derivation tree and
derived tree by manifesting the proper linguistic
dependencies in derivations. The particular pro-
posal is both precisely characterizable, through a
compilation to linear indexed grammars, and com-
putationally operational, by virtue of an efficient
algorithm for recognition and parsing.
</bodyText>
<sectionHeader confidence="0.999433" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999888773584905">
Aravind K. Joshi, L. S. Levy, and M. Takahashi.
1975. Tree adjunct grammars. Journal of Com-
puter and System Sciences, 10(1).
Anthony Kroch and Aravind K. Joshi. 1985. Lin-
guistic relevance of tree adjoining grammars.
Technical Report MS-CIS-85-18, Department of
Computer and Information Science, University
of Pennsylvania, April.
Anthony Kroch. 1989. Asymmetries in long dis-
tance extraction in a tag grammar. In M. Baltin
and A. Kroch, editors, Alternative Conceptions
of Phrase Structure, pages 66-98. University of
Chicago Press.
Randolph Quirk, Sidney Greenbaum, Geoffrey
Leech, and Jan Svartvik. 1985. A Comprehen-
sive Grammar of the English Language. Long-
man.
Philip Resnik. 1992. Lexicalized tree-adjoining
grammar for distributional analysis. To appear
in Proceedings of the 14Th International Confer-
ence on Computational Linguistics.
Yves Schabes and Stuart M. Shieber. 1992. An
alternative conception of tree-adjoining deriva-
tion. Technical Report 08-92, Harvard Univer-
sity.
Yves Schabes. 1991. Computational and
mathematical studies of lexicalized grammars.
Manuscript in preparation based on the author&apos;s
PhD dissertation (University of Pennsylvania,
August 1990).
Yves Schabes. 1992. Stochastic lexicalized tree-
adjoining grammars. To appear in Proceedings
of the 14Th International Conference on Com-
putational Linguistics.
Stuart M. Shieber and Yves Schabes. 1990. Syn-
chronous tree-adjoining grammars. In Pro-
ceedings of the 13Th International Conference
on Computational Linguistics (COLING&apos;90),
Helsinki.
K. Vijay-Shanker and Aravind K. Joshi. 1985.
Some computational properties of Tree Adjoin-
ing Grammars. In 23rd Meeting of the Associ-
ation for Computational Linguistics, pages 82-
93, Chicago, Illinois, July.
K. Vijay-Shanker and David J. Weir. 1990. Poly-
nomial parsing of extensions of context-free
grammars. In Masaru Tomita, editor, Current
Issues in Parsing Technologies, pages 191-206.
Kluwer Accademic Publishers.
K. Vijay-Shanker. 1987. A Study of Tree Ad-
joining Grammars. Ph.D. thesis, Department
of Computer and Information Science, Univer-
sity of Pennsylvania.
</reference>
<page confidence="0.998747">
176
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.937000">
<title confidence="0.9987945">An Alternative Conception of Tree-Adjoining Derivation*</title>
<author confidence="0.997887">Yves Schabes</author>
<affiliation confidence="0.999905666666667">Department of Computer and Information Science University of Pennsylvania</affiliation>
<address confidence="0.99979">Philadelphia, PA 19104</address>
<author confidence="0.999406">Stuart M Shieber</author>
<affiliation confidence="0.999925333333333">Aiken Computation Laboratory Division of Applied Sciences Harvard University</affiliation>
<address confidence="0.999991">Cambridge, MA 02138</address>
<abstract confidence="0.995511846153846">The precise formulation of derivation for treeadjoining grammars has important ramifications for a wide variety of uses of the formalism, from syntactic analysis to semantic interpretation and statistical language modeling. We argue that the definition of tree-adjoining derivation must be reformulated in order to manifest the proper linguistic dependencies in derivations. The particular proposal is both precisely characterizable, through a compilation to linear indexed grammars, and computationally operational, by virtue of an efficient algorithm for recognition and parsing.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Aravind K Joshi</author>
<author>L S Levy</author>
<author>M Takahashi</author>
</authors>
<title>Tree adjunct grammars.</title>
<date>1975</date>
<journal>Journal of Computer and System Sciences,</journal>
<volume>10</volume>
<issue>1</issue>
<contexts>
<context position="7129" citStr="Joshi et al., 1975" startWordPosition="1124" endWordPosition="1127">nition is as reasonable as any other. However, Pre ape tree-adjoining grammars are almost universally El extended with augmentations that make the issue Pro Pro &apos;ire apposite. We discuss three such variations here, all (a) (b) of which argue for the use of independent derivaFigure 3: Derivation trees for the derived tree of tions under certain circumstances. Figure 2(a) according to the grammar of Figure 1 3.1 Adding Adjoining Constraints other, the latter only being adjoined to the initial Already in very early work on tree-adjoining gramtree. We will use this informal terminology uni- mars (Joshi et al., 1975) constraints were allowed formly in the sequel to distinguish the two general to be specified as to whether a particular auxiliary topologies of derivation trees. tree may or may not be adjoined at a particular The standard definition of derivation, as codified node in a particular tree. The idea is formulated by Vijay-Shanker, restricts derivations so that two in its modern variant as selective-adjoining conadjunctions cannot occur at the same node in the straints (Vijay-Shanker and Joshi, 1985). As an same elementary tree. The dependent notion of application of this capability, we consider t</context>
</contexts>
<marker>Joshi, Levy, Takahashi, 1975</marker>
<rawString>Aravind K. Joshi, L. S. Levy, and M. Takahashi. 1975. Tree adjunct grammars. Journal of Computer and System Sciences, 10(1).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anthony Kroch</author>
<author>Aravind K Joshi</author>
</authors>
<title>Linguistic relevance of tree adjoining grammars.</title>
<date>1985</date>
<tech>Technical Report MS-CIS-85-18,</tech>
<institution>Department of Computer and Information Science, University of Pennsylvania,</institution>
<contexts>
<context position="11821" citStr="Kroch and Joshi (1985)" startWordPosition="1888" endWordPosition="1891"> sentential complement constructions.4 Consider the following sentences. (The brackets mark the leaves of the pertinent trees to be combined by adjunction in the assumed analysis.) (4)a. Brockway conjectured that Harrison wanted to escort his sister. b. [Brockway conjectured that] [Harrison wanted] [to escort his sister] (5)a. Brockway wanted to try to escort his sister. b. [Brockway wanted] [to try] [to escort his sister] (6)a. * Harrison wanted Brockway tried to escort his sister. b. * [Harrison wanted] [Brockway tried] [to escort his sister] Assume (following, for instance, the analysis of Kroch and Joshi (1985)) that the trees associated with the various forms of the verbs &amp;quot;try&amp;quot;, &amp;quot;want&amp;quot;, and &amp;quot;conjecture&amp;quot; all take sentential complements, certain of which are tensed with overt subjects and others untensed with empty subjects. The auxiliary trees for these verbs specify by ad3 We use the term &apos;predication&apos; in its logical sense, that is, for auxiliary trees that serve as logical predicates over the trees into which they adjoin, in contrast to the term&apos;s linguistic sub-sense in which the argument of the predicate is a linguistic subject. 4 The distinction between predicative and modifier trees has been p</context>
</contexts>
<marker>Kroch, Joshi, 1985</marker>
<rawString>Anthony Kroch and Aravind K. Joshi. 1985. Linguistic relevance of tree adjoining grammars. Technical Report MS-CIS-85-18, Department of Computer and Information Science, University of Pennsylvania, April.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anthony Kroch</author>
</authors>
<title>Asymmetries in long distance extraction in a tag grammar.</title>
<date>1989</date>
<booktitle>Alternative Conceptions of Phrase Structure,</booktitle>
<pages>66--98</pages>
<editor>In M. Baltin and A. Kroch, editors,</editor>
<publisher>University of Chicago Press.</publisher>
<contexts>
<context position="12485" citStr="Kroch (1989)" startWordPosition="1998" endWordPosition="1999">f the verbs &amp;quot;try&amp;quot;, &amp;quot;want&amp;quot;, and &amp;quot;conjecture&amp;quot; all take sentential complements, certain of which are tensed with overt subjects and others untensed with empty subjects. The auxiliary trees for these verbs specify by ad3 We use the term &apos;predication&apos; in its logical sense, that is, for auxiliary trees that serve as logical predicates over the trees into which they adjoin, in contrast to the term&apos;s linguistic sub-sense in which the argument of the predicate is a linguistic subject. 4 The distinction between predicative and modifier trees has been proposed previously for purely linguistic reasons by Kroch (1989), who refers to them as thematic and athematic trees, respectively. The arguments presented here can be seen as providing further evidence for differentiating the two kinds of auxiliary trees. junction constraints which type of sentential complement they take: &amp;quot;conjecture&amp;quot; requires tensed complements, &amp;quot;want&amp;quot; and &amp;quot;try&amp;quot; untensed. Under this analysis the auxiliary trees must not be allowed to independently adjoin at the same node. For instance, if trees corresponding to &amp;quot;Harrison wanted&amp;quot; and &amp;quot;Brockway tried&amp;quot; (which both require untensed complements) were both adjoined at the root of the tree for </context>
</contexts>
<marker>Kroch, 1989</marker>
<rawString>Anthony Kroch. 1989. Asymmetries in long distance extraction in a tag grammar. In M. Baltin and A. Kroch, editors, Alternative Conceptions of Phrase Structure, pages 66-98. University of Chicago Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Randolph Quirk</author>
<author>Sidney Greenbaum</author>
<author>Geoffrey Leech</author>
<author>Jan Svartvik</author>
</authors>
<date>1985</date>
<journal>A Comprehensive Grammar of the English Language. Longman.</journal>
<contexts>
<context position="7812" citStr="Quirk et al. (1985" startWordPosition="1233" endWordPosition="1236"> two general to be specified as to whether a particular auxiliary topologies of derivation trees. tree may or may not be adjoined at a particular The standard definition of derivation, as codified node in a particular tree. The idea is formulated by Vijay-Shanker, restricts derivations so that two in its modern variant as selective-adjoining conadjunctions cannot occur at the same node in the straints (Vijay-Shanker and Joshi, 1985). As an same elementary tree. The dependent notion of application of this capability, we consider the rederivation is therefore the only sanctioned deriva- mark by Quirk et al. (1985, page 517) that &amp;quot;dition for the desired tree in Figure 2(a); the inde- rection adjuncts of both goal and source can norpendent derivation is disallowed. Vijay-Shanker&apos;s mally be used only with verbs of motion&amp;quot;, which definition is appropriate because for any indepen- accounts for the distinction between the following dent derivation, there is a dependent derivation of sentences: the same derived tree. This can be easily seen in (1)a. Brockway escorted his sister to the annual that any adjunction of 132 at a node at which an cotillion. adjunction of th occurs could instead be replaced b. #Broc</context>
</contexts>
<marker>Quirk, Greenbaum, Leech, Svartvik, 1985</marker>
<rawString>Randolph Quirk, Sidney Greenbaum, Geoffrey Leech, and Jan Svartvik. 1985. A Comprehensive Grammar of the English Language. Longman.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philip Resnik</author>
</authors>
<title>Lexicalized tree-adjoining grammar for distributional analysis. To appear</title>
<date>1992</date>
<booktitle>in Proceedings of the 14Th International Conference on Computational Linguistics.</booktitle>
<contexts>
<context position="13933" citStr="Resnik, 1992" startWordPosition="2223" endWordPosition="2224">of derivation is exactly what is needed as far as interpretation of adjoining constraints is concerned. In summary, the interpretation of adjoining constraints in TAG is sensitive to the particular notion of derivation that is used. Therefore, it can be used as a litmus test for an appropriate definition of derivation. As such, it argues for a nonstandard, independent, notion of derivation for modifier auxiliary trees and a standard, dependent, notion for predicative trees. 3.2 Adding Statistical Parameters In a similar vein, the statistical parameters of a stochastic lexicalized TAG (SLTAG) (Resnik, 1992; Schabes, 1992) specify the probability of adjunction of a given auxiliary tree at a specific node in another tree. This specification may again be interpreted with regard to differing derivations, obviously with differing impact on the resulting probabilities assigned to derivation trees. (In the extreme case, a constraint prohibiting adjoining corresponds to a zero probability in an SLTAG. The relation to the argument in the previous section follows thereby.) Consider a case in which linguistic modification of noun phrases by adjectives is modeled by adjunction of a modifying tree. Under th</context>
</contexts>
<marker>Resnik, 1992</marker>
<rawString>Philip Resnik. 1992. Lexicalized tree-adjoining grammar for distributional analysis. To appear in Proceedings of the 14Th International Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yves Schabes</author>
<author>Stuart M Shieber</author>
</authors>
<title>An alternative conception of tree-adjoining derivation.</title>
<date>1992</date>
<tech>Technical Report 08-92,</tech>
<institution>Harvard University.</institution>
<contexts>
<context position="5137" citStr="Schabes and Shieber, 1992" startWordPosition="776" endWordPosition="779">efinition of TAG derivation, and introduce the motivation for extended derivations. Then, we present the extended notion of derivation informally, and formalize it through the compilation of TAGs to LIGs. The original compilation provided by Vijay-Shanker and Weir and our variant for extended derivations are both decribed. Finally, we briefly mention a parsing algorithm for TAG that recovers extended derivations either implicitly or explicitly, and discuss some issues surrounding it. Space limitations preclude us from presenting the algorithm itself, but a full description is given elsewhere (Schabes and Shieber, 1992). Adj N* roasted (Pro) potato pepper (apo) (ape) N* Adj N* baked Adj red Ore) Figure 1: A sample tree-adjoining grammar 2 The Standard Definition of Derivation To exemplify the distinction between standard and extended derivations, we exhibit the TAG of Figure 1. This grammar derives some simple noun phrases such as &amp;quot;roasted red pepper&amp;quot; and &amp;quot;baked red potato&amp;quot;. The former, for instance, is associated with the derived tree in Figure 2(a). The tree can be viewed as being derived in two ways&apos; Dependent: The auxiliary tree Pro is adjoined at the root node (address e) of p„. The resultant tree is ad</context>
<context position="32346" citStr="Schabes and Shieber, 1992" startWordPosition="5282" endWordPosition="5285">e recognition algorithms for TAG based on this compilation, however, must be adjusted to allow for the new rule types. 6 Recognition and Parsing Following Schabes (1991), the LIG generated by compiling a TAG can be used as the basis for Earley recognition. Schabes&apos;s original method must be modified to respect the differences in compilation engendered by extended derivations. Such parsing rules, along with an extension that allows building of explicit derivation trees on-line as a basis for incremental interpretation, have been developed, and are presented in an extended version of this paper (Schabes and Shieber, 1992). In summary, the algorithm operates as a variant of Earley parsing on the corresponding LIG. The set of extended derivations can subsequently be recovered from the set of Earley items generated by the algorithm. The resultant algorithm can be further modified so as to build an explicit derivation tree incrementally as parsing proceeds; this modification, which is a novel result in its own right, allows the parsing algorithm to be used by systems that require incremental processing with respect to tree-adjoining grammars. As a proof of concept, the parsing algorithm just described was implemen</context>
</contexts>
<marker>Schabes, Shieber, 1992</marker>
<rawString>Yves Schabes and Stuart M. Shieber. 1992. An alternative conception of tree-adjoining derivation. Technical Report 08-92, Harvard University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yves Schabes</author>
</authors>
<title>Computational and mathematical studies of lexicalized grammars. Manuscript in preparation based on the author&apos;s PhD dissertation</title>
<date>1991</date>
<institution>University of Pennsylvania,</institution>
<contexts>
<context position="28643" citStr="Schabes (1991)" startWordPosition="4650" endWordPosition="4651">173 Type 1/2 Type S Figure 5: Schematic structure of adjunction with top and bottom of each node separated foot node ru can be adjoined, include the following production: 6. Start substitution: For each elementary tree node ri marked for substitution on which the initial tree a with root node 77,. can be substituted, include the production t [. t [. rir] We will refer to productions generated by Rule i above as Type i productions. For example, Type 3 productions are of the form t[..7i] b[..9]. For further information concerning the compilation see the work of Vijay-Shanker and Weir (1990) and Schabes (1991). For present purposes, it is sufficient to note that the method directly embeds the standard notion of derivation in the rewriting process. To perform an adjunction, we move (by Rule 4) from the node adjoined at to the top of the root of the auxiliary tree. At the root, additional adjunctions might be performed. When returning from the foot of the auxiliary tree back to the node where adjunction occurred, rewriting continues at the bottom of the node (see Rule 5), not the top, so that no more adjunctions can be started at that node. Thus, the dependent nature of predicative adjunction is enfo</context>
<context position="31889" citStr="Schabes (1991)" startWordPosition="5210" endWordPosition="5211">at the root nodes of modifier auxiliary trees, as repeated adjunction is now allowed for by the new rule 4b. Consequently, Rules 4a and 4b must treat all modifier auxiliary tree root nodes as if they have adjoining constraints that forbid modifier tree adjunctions that do not correspond to modification of the tree itself. This simple modification to the compilation process from TAG to LIG fully specifies the modified notion of derivation. The recognition algorithms for TAG based on this compilation, however, must be adjusted to allow for the new rule types. 6 Recognition and Parsing Following Schabes (1991), the LIG generated by compiling a TAG can be used as the basis for Earley recognition. Schabes&apos;s original method must be modified to respect the differences in compilation engendered by extended derivations. Such parsing rules, along with an extension that allows building of explicit derivation trees on-line as a basis for incremental interpretation, have been developed, and are presented in an extended version of this paper (Schabes and Shieber, 1992). In summary, the algorithm operates as a variant of Earley parsing on the corresponding LIG. The set of extended derivations can subsequently </context>
</contexts>
<marker>Schabes, 1991</marker>
<rawString>Yves Schabes. 1991. Computational and mathematical studies of lexicalized grammars. Manuscript in preparation based on the author&apos;s PhD dissertation (University of Pennsylvania, August 1990).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yves Schabes</author>
</authors>
<title>Stochastic lexicalized treeadjoining grammars. To appear in</title>
<date>1992</date>
<booktitle>Proceedings of the 14Th International Conference on Computational Linguistics.</booktitle>
<contexts>
<context position="13949" citStr="Schabes, 1992" startWordPosition="2225" endWordPosition="2226">is exactly what is needed as far as interpretation of adjoining constraints is concerned. In summary, the interpretation of adjoining constraints in TAG is sensitive to the particular notion of derivation that is used. Therefore, it can be used as a litmus test for an appropriate definition of derivation. As such, it argues for a nonstandard, independent, notion of derivation for modifier auxiliary trees and a standard, dependent, notion for predicative trees. 3.2 Adding Statistical Parameters In a similar vein, the statistical parameters of a stochastic lexicalized TAG (SLTAG) (Resnik, 1992; Schabes, 1992) specify the probability of adjunction of a given auxiliary tree at a specific node in another tree. This specification may again be interpreted with regard to differing derivations, obviously with differing impact on the resulting probabilities assigned to derivation trees. (In the extreme case, a constraint prohibiting adjoining corresponds to a zero probability in an SLTAG. The relation to the argument in the previous section follows thereby.) Consider a case in which linguistic modification of noun phrases by adjectives is modeled by adjunction of a modifying tree. Under the standard defin</context>
</contexts>
<marker>Schabes, 1992</marker>
<rawString>Yves Schabes. 1992. Stochastic lexicalized treeadjoining grammars. To appear in Proceedings of the 14Th International Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart M Shieber</author>
<author>Yves Schabes</author>
</authors>
<title>Synchronous tree-adjoining grammars.</title>
<date>1990</date>
<booktitle>In Proceedings of the 13Th International Conference on Computational Linguistics (COLING&apos;90),</booktitle>
<location>Helsinki.</location>
<contexts>
<context position="16285" citStr="Shieber and Schabes, 1990" startWordPosition="2590" endWordPosition="2593">rs.5 In the case at hand, the fact that potatoes are more frequently baked, whereas peppers are roasted, would be more determining of the expected overall probabilities. Note again that the distinction between modifier and predicative trees is important. The standard definition of derivation is entirely appropriate for adjunction probabilities for predicative trees, but not for modifier trees. 3.3 Adding Semantics Finally, the formation of synchronous TAGs has been proposed to allow use of TAGs in semantic interpretation, natural language generation, and machine translation. In previous work (Shieber and Schabes, 1990), the definition of synchronous TAG derivation is given in a manner that requires multiple adjunctions at a single node. The need for such derivations follows from the fact that synchronous derivations are intended to model semantic relationships. In cases of multiple adjunction of modifier trees at a single node, the appropriate semantic relationships comprise separate modifications rather than cascaded ones, and this is reflected in the definition of synchronous TAG derivation.6 Because of this, a parser for synchronous TAGs must recover, at least implicitly, the extended derivations of TAG </context>
</contexts>
<marker>Shieber, Schabes, 1990</marker>
<rawString>Stuart M. Shieber and Yves Schabes. 1990. Synchronous tree-adjoining grammars. In Proceedings of the 13Th International Conference on Computational Linguistics (COLING&apos;90), Helsinki.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>Aravind K Joshi</author>
</authors>
<title>Some computational properties of Tree Adjoining Grammars.</title>
<date>1985</date>
<booktitle>In 23rd Meeting of the Association for Computational Linguistics,</booktitle>
<pages>82--93</pages>
<location>Chicago, Illinois,</location>
<contexts>
<context position="7630" citStr="Vijay-Shanker and Joshi, 1985" startWordPosition="1203" endWordPosition="1206">itial Already in very early work on tree-adjoining gramtree. We will use this informal terminology uni- mars (Joshi et al., 1975) constraints were allowed formly in the sequel to distinguish the two general to be specified as to whether a particular auxiliary topologies of derivation trees. tree may or may not be adjoined at a particular The standard definition of derivation, as codified node in a particular tree. The idea is formulated by Vijay-Shanker, restricts derivations so that two in its modern variant as selective-adjoining conadjunctions cannot occur at the same node in the straints (Vijay-Shanker and Joshi, 1985). As an same elementary tree. The dependent notion of application of this capability, we consider the rederivation is therefore the only sanctioned deriva- mark by Quirk et al. (1985, page 517) that &amp;quot;dition for the desired tree in Figure 2(a); the inde- rection adjuncts of both goal and source can norpendent derivation is disallowed. Vijay-Shanker&apos;s mally be used only with verbs of motion&amp;quot;, which definition is appropriate because for any indepen- accounts for the distinction between the following dent derivation, there is a dependent derivation of sentences: the same derived tree. This can be </context>
</contexts>
<marker>Vijay-Shanker, Joshi, 1985</marker>
<rawString>K. Vijay-Shanker and Aravind K. Joshi. 1985. Some computational properties of Tree Adjoining Grammars. In 23rd Meeting of the Association for Computational Linguistics, pages 82-93, Chicago, Illinois, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>David J Weir</author>
</authors>
<title>Polynomial parsing of extensions of context-free grammars.</title>
<date>1990</date>
<booktitle>Current Issues in Parsing Technologies,</booktitle>
<pages>191--206</pages>
<editor>In Masaru Tomita, editor,</editor>
<publisher>Kluwer Accademic Publishers.</publisher>
<contexts>
<context position="25708" citStr="Vijay-Shanker and Weir (1990)" startWordPosition="4135" endWordPosition="4138">ormation for only one of the child constituents. Thus, a linear indexed production can be given schematically as: No[..fioj Ni[fid• • • N3-1[)35-1] N3+1[1381-1]• • N [13 k} The N1 are nonterminals, the fl strings of indices. The &amp;quot;..&amp;quot; notation stands for the remainder of the stack below the given string of indices. Note that only one element on the right-hand side, Ns , inherits the remainder of the stack from the parent. (This schematic rule is intended to be indicative, not definitive. We ignore issues such as the optionality of the inherited stack, how terminal symbols fit in, and so forth. Vijay-Shanker and Weir (1990) present a complete discussion.) Vijay-Shanker and Weir (1990) present a way of specifying any TAG as a linear indexed grammar. The LIG version makes explicit the standard notion of derivation being presumed. Also, the LIG version of a TAG grammar can be used for recognition and parsing. Because the LIG formalism is based on augmented rewriting, the parsing algorithms can be much simpler to understand and easier to modify, and no loss of generality is incurred. For these reasons, we use the technique in this work. The compilation process that manifests the standard definition of derivation can</context>
<context position="28624" citStr="Vijay-Shanker and Weir (1990)" startWordPosition="4645" endWordPosition="4648">n which the auxiliary tree # with 173 Type 1/2 Type S Figure 5: Schematic structure of adjunction with top and bottom of each node separated foot node ru can be adjoined, include the following production: 6. Start substitution: For each elementary tree node ri marked for substitution on which the initial tree a with root node 77,. can be substituted, include the production t [. t [. rir] We will refer to productions generated by Rule i above as Type i productions. For example, Type 3 productions are of the form t[..7i] b[..9]. For further information concerning the compilation see the work of Vijay-Shanker and Weir (1990) and Schabes (1991). For present purposes, it is sufficient to note that the method directly embeds the standard notion of derivation in the rewriting process. To perform an adjunction, we move (by Rule 4) from the node adjoined at to the top of the root of the auxiliary tree. At the root, additional adjunctions might be performed. When returning from the foot of the auxiliary tree back to the node where adjunction occurred, rewriting continues at the bottom of the node (see Rule 5), not the top, so that no more adjunctions can be started at that node. Thus, the dependent nature of predicative</context>
</contexts>
<marker>Vijay-Shanker, Weir, 1990</marker>
<rawString>K. Vijay-Shanker and David J. Weir. 1990. Polynomial parsing of extensions of context-free grammars. In Masaru Tomita, editor, Current Issues in Parsing Technologies, pages 191-206. Kluwer Accademic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
</authors>
<title>A Study of Tree Adjoining Grammars.</title>
<date>1987</date>
<tech>Ph.D. thesis,</tech>
<institution>Department of Computer and Information Science, University of Pennsylvania.</institution>
<contexts>
<context position="3355" citStr="Vijay-Shanker (1987)" startWordPosition="501" endWordPosition="502">he source of the important primitive relationships among trees. The decoupling of derivation trees from derived trees thus makes possible a more flexible ability to pursue these types of analyses. At the same time, the exact definition of derivation becomes of paramount importance. In this paper, we argue that previous definitions of tree-adjoining derivation have not taken full advantage of this decoupling, and are not as appropriate as they might be for the kind of further analysis that tree-adjoining analyses could make possible. In particular, the standard definition of derivation, due to Vijay-Shanker (1987), requires that elementary trees be adjoined at distinct nodes in elementary trees. However, in certain cases, especially cases characterized as linguistic modification, it is more appropriate to allow multiple adjunctions at a single node. In this paper, we propose a redefinition of TAG derivation along these lines, whereby multiple auxiliary trees of modification can be adjoined at a single node, whereas only a single auxiliary tree of predication can. The redefinition constitutes a new definition of derivation for TAG that we will refer to as extended derivation. In order for such 167 a red</context>
<context position="20310" citStr="Vijay-Shanker (1987)" startWordPosition="3243" endWordPosition="3244"> an anonymous reviewer for raising this issue crisply through examples similar to those given here. 171 Figure 4: Schematic extended derivation tree and associated derived tree that node. So as to fully specify the output derived tree, we specify a partial ordering on sibling arcs by mandating that arcs corresponding to modifier trees adjoined at the same address are treated as ordered left-to-right. However, all other arcs, including those for predicative adjunctions are left unordered. A derivation tree specifies a derived tree through a bottom-up traversal (as is standard since the work of Vijay-Shanker (1987)). The choice of a particular traversal order plays the same role as choosing a particular rewriting derivation order in a context-free grammar — leftmost or rightmost, say — in eliminating spurious ambiguity due to inconsequential reordering of operations. An extended derivation tree specifies a derived tree in exactly the same manner, except that there must be a specification of the derived tree specified when several trees are adjoined at the same node. Assume that in a given tree T at a particular address t, the predicative tree P and the k modifier trees M1, , Mk (in that order) are direc</context>
</contexts>
<marker>Vijay-Shanker, 1987</marker>
<rawString>K. Vijay-Shanker. 1987. A Study of Tree Adjoining Grammars. Ph.D. thesis, Department of Computer and Information Science, University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>