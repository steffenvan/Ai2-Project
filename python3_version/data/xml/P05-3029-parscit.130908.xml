<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000261">
<title confidence="0.751443">
HAHAcronym: A Computational Humor System
</title>
<note confidence="0.665313">
Oliviero Stock and Carlo Strapparava
ITC-irst, Istituto per la Ricerca Scientifica e Tecnologica
I-38050 Trento, ITALY
</note>
<email confidence="0.974442">
{stock, strappa}@itc.it
</email>
<sectionHeader confidence="0.999832" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99946890625">
Society needs humor, not just for entertainment. In
the current business world, humor is considered to
be so important that companies may hire humor con-
sultants. Humor can be used “to criticize without
alienating, to defuse tension or anxiety, to introduce
new ideas, to bond teams, ease relationships and
elicit cooperation”.
As far as human-computer interfaces are con-
cerned, in the future we will demand naturalness and
effectiveness that require the incorporation of mod-
els of possibly all human cognitive capabilities, in-
cluding the handling of humor (Stock, 1996). There
are many practical settings where computational hu-
mor will add value. Among them there are: busi-
ness world applications (such as advertisement, e-
commerce, etc.), general computer-mediated com-
munication and human-computer interaction, in-
crease in the friendliness of natural language inter-
faces, educational and edutainment systems.
Not necessarily applications need to emphasize
interactivity. For instance there are important
prospects for humor in automatic information pre-
sentation. In the Web age presentations will be-
come more and more flexible and personalized and
will require humor contributions for electronic com-
merce developments (e.g. product promotion, get-
ting selective attention, help in memorizing names
etc) more or less as it happened in the world of
advertisement within the old broadcast communica-
tion.
Little published research exists on whether humor
is valuable in task-oriented human-computer inter-
</bodyText>
<sectionHeader confidence="0.667995" genericHeader="keywords">
Abstract
</sectionHeader>
<bodyText confidence="0.999712258064516">
Computational humor will be needed in
interfaces, no less than other cognitive
capabilities. There are many practi-
cal settings where computational humor
will add value. Among them there are:
business world applications (such as ad-
vertisement, e-commerce, etc.), general
computer-mediated communication and
human-computer interaction, increase in
the friendliness of natural language inter-
faces, educational and edutainment sys-
tems. In particular in the educational
field it is an important resource for get-
ting selective attention, help in memoriz-
ing names and situations etc. And we all
know how well it works with children.
Automated humor production in general
is a very difficult task but we wanted to
prove that some results can be achieved
even in short time. We have worked at
a concrete limited problem, as the core
of the European Project HAHAcronym.
The main goal of HAHAcronym has been
the realization of an acronym ironic re-
analyzer and generator as a proof of con-
cept in a focalized but non restricted con-
text. To implement this system some gen-
eral tools have been adapted, or developed
for the humorous context. Systems output
has been submitted to evaluation by hu-
man subjects, with a very positive result.
</bodyText>
<page confidence="0.99295">
113
</page>
<note confidence="0.3632545">
Proceedings of the ACL Interactive Poster and Demonstration Sessions,
pages 113–116, Ann Arbor, June 2005. c�2005 Association for Computational Linguistics
</note>
<bodyText confidence="0.994136223529413">
action (HCI). However (Morkes et al., 1999) did
some experiments concerning the effects of humor
in HCI and computer-mediated communication sit-
uations. Especially in computer-mediated commu-
nication tasks, participants who received jokes rated
the “person” or computer they worked with as more
likable and competent, reported greater cooperation,
joked back more often etc. The experiments show
that, humor enhances the likeability of an interface
“without distracting users”.
There has been a considerable amount of research
on linguistics of humor and on theories of semantics
or pragmatics of humor (Attardo, 1994). Within the
artificial intelligence community, most writing on
humor has been speculative (Hofstadter et al., 1989).
Minsky (Minsky, 1980) made some preliminary re-
marks about formalizing some kind of humor within
an artificial intelligence/cognitive science perspec-
tive. He refined Freud’s notion that humor is a way
of bypassing our mental “censors” which control
inappropriate thoughts and feelings (Freud, 1905).
So far, very limited effort has been put on building
computational humor prototypes. The few existing
ones are concerned with rather simple tasks, nor-
mally in limited domains. Probably the most impor-
tant attempt to create a computational humor proto-
type is the work of Binsted and Ritchie (Binsted and
Ritchie, 1994). They have devised a model of the
semantic and syntactic regularities underlying some
of the simplest types of punning riddles. A punning
riddle is a question-answer riddle that uses phono-
logical ambiguity. The three main strategies used to
create phonological ambiguity are syllable substitu-
tion, word substitution and metathesis. In general,
the constructive approaches are mostly inspired by
the incongruity theory (Raskin, 1985), interpreted at
various level of refinement. The incongruity theory
focuses on the element of surprise. It states that hu-
mor is created out of a conflict between what is ex-
pected and what actually occurs when the humorous
utterance or story is completed. In verbal humor this
means that at some level, different interpretations of
material must be possible (and some not detected
before the culmination of the humorous process) or
various pieces of material must cause perception of
specific forms of opposition. Natural language pro-
cessing research has often dealt with ambiguity in
language. A common view is that ambiguity is an
obstacle for deep comprehension. Exactly the oppo-
site is true here.
The work presented here refers to HAHAcronym,
the first European project devoted to computational
humor (EU project IST-2000-30039), part of the Fu-
ture Emerging Technologies section of the Fifth Eu-
ropean Framework Program. The main goal of HA-
HAcronym was the realization of an acronym ironic
re-analyzer and generator as a proof of concept in a
focalized but non restricted context. In the first case
the system makes fun of existing acronyms, in the
second case, starting from concepts provided by the
user, it produces new acronyms, constrained to be
words of the given language. And, of course, they
have to be funny.
HAHAcronym, fully described in (Stock and
Strapparava, 2003) (Stock and Strapparava, 2005),
is based on various resources for natural language
processing, adapted for humor. Many components
are present but simplified with respect to more com-
plex scenarios and some general tools have been de-
veloped for the humorous context. A fundamental
tool is an incongruity detector/generator: in prac-
tice there is a need to detect semantic mismatches
between expected sentence meaning and other read-
ings, along some specific dimension (i.e. in our case
the acronym and its context).
2 The HAHAcronym project
The realization of an acronym re-analyzer and gen-
erator was proposed to the European Commission
as a project that we would be able to develop in a
short period of time (less than a year), that would be
meaningful, well demonstrable, that could be eval-
uated along some pre-decided criteria, and that was
conducive to a subsequent development in a direc-
tion of potential applicative interest. So for us it was
essential that:
</bodyText>
<listItem confidence="0.973329166666667">
1. the work could have many components of a
larger system, simplified for the current setting;
2. we could reuse and adapt existing relevant lin-
guistic resources;
3. some simple strategies for humor effects could
be experimented.
</listItem>
<page confidence="0.996264">
114
</page>
<bodyText confidence="0.999985291666666">
One of the purposes of the project was to show
that using “standard” resources (with some exten-
sions and modifications) and suitable linguistic the-
ories of humor (i.e. developing specific algorithms
that implement or elaborate theories), it is possi-
ble to implement a working prototype. For that,
we have taken advantage of specialized thesauri and
repositories and in particular of WORDNET DO-
MAINS, an extension developed at ITC-irst of the
well-known English WORDNET. In WORDNET
DOMAINS, synsets are annotated with subject field
codes (or domain labels), e.g. MEDICINE, ARCHI-
TECTURE, LITERATURE,... In particular for HA-
HAcronym, we have modelled an independent struc-
ture of domain opposition, such as RELIGION vs.
TECHNOLOGY, SEX vs. RELIGION, etc..., as a ba-
sic resource for the incongruity generator.
Other important computational tools we have used
are: a parser for analyzing input syntactically
and a syntactic generator of acronyms; general
lexical resources, e.g. acronym grammars, mor-
phological analyzers, rhyming dictionaries, proper
nouns databases, a dictionary of hyperbolic adjec-
tives/adverbs.
</bodyText>
<subsectionHeader confidence="0.938807">
2.1 Implementation
</subsectionHeader>
<bodyText confidence="0.999083">
To get an ironic or profaning re-analysis of a given
acronym, the system follows various steps and relies
on a number of strategies. The main elements of the
algorithm can be schematized as follows:
</bodyText>
<listItem confidence="0.88636725">
• acronym parsing and construction of a logical
form
• choice of what to keep unchanged (for example
the head of the highest ranking NP) and what
to modify (for example the adjectives)
• look for possible, initial letter preserving, sub-
stitutions
– using semantic field oppositions;
</listItem>
<bodyText confidence="0.998299793103448">
– reproducing rhyme and rhythm (the mod-
ified acronym should sound as similar as
possible to the original one);
– for adjectives, reasoning based mainly on
antonym clustering and other semantic re-
lations in WORDNET.
Making fun of existing acronyms amounts to ba-
sically using irony on them, desecrating them with
some unexpectedly contrasting but otherwise con-
sistently sounding expansion.
As far as acronym generation is concerned, the
problem is more complex. We constrain resulting
acronyms to be words of the dictionary. The system
takes in input some concepts (actually synsets, so
that input to this system can result from some other
processing, for instance sentence interpretation) and
some minimal structural indication, such as the se-
mantic head. The primary strategy of the system
is to consider as potential acronyms words that are
in ironic relation with input concepts. Structures
for the acronym expansion result from the specified
head indication and the grammar. Semantic reason-
ing and navigation over WORDNET, choice of spe-
cific word realizations, including morphosyntactic
variations, constrain the result. In this specific strat-
egy, ironic reasoning is developed mainly at the level
of acronym choice and in the incongruity resulting
in relation to the coherently combined words of the
acronym expansion.
</bodyText>
<sectionHeader confidence="0.975372" genericHeader="introduction">
3 Examples and Evaluation
</sectionHeader>
<bodyText confidence="0.999756666666667">
Here below some examples of acronym re-analysis
are reported. As far as semantic field opposition is
concerned, we have slightly biased the system to-
wards the domains FOOD, RELIGION, and SEX. For
each example we report the original acronym and the
re-analysis.
</bodyText>
<table confidence="0.921109266666667">
ACM - Association for Computing Machinery
� Association for Confusing
Machinery
FBI - Federal Bureau of Investigation
� Fantastic Bureau of
Intimidation
PDA -Personal Digital Assistant
� Penitential Demoniacal
Assistant
IJCAI - International Joint Conference on Artifi-
cial Intelligence
� Irrational Joint Conference on
Antenuptial Intemperance
� Irrational Judgment Conference
on Artificial Indolence
</table>
<page confidence="0.770626">
115
</page>
<table confidence="0.938353333333333">
ITS - Intelligent Tutoring Systems
� Impertinent Tutoring Systems
� Indecent Toying Systems
</table>
<bodyText confidence="0.694243428571429">
As far as generation from scratch is concerned,
a main concept and some attributes (in terms of
synsets) are given as input to the system. Here below
we report some examples of acronym generation.
Main concept: tutoring; Attribute: intelligent
FAINT - Folksy Acritical Instruction for Nescience
Teaching
</bodyText>
<sectionHeader confidence="0.531895833333333" genericHeader="method">
NAIVE - Negligent At-large Instruction for Vulner-
able Extracurricular-activity
Main concept: writing; Attribute: creative
CAUSTIC - Creative Activity for Unconvincingly
Sporadically Talkative Individualistic Com-
mercials
</sectionHeader>
<bodyText confidence="0.999872964285714">
We note that the system tries to keep all the ex-
pansions of the acronym coherent in the same se-
mantic field of the main concepts. At the same time,
whenever possible, it exploits some incongruity in
the lexical choices.
Testing the humorous quality of texts or other ver-
bal expressions is not an easy task. There are some
relevant studies though, such as (Ruch, 1996). For
HAHAcronym an evaluation was set with a group
of 30 American university students. They had to
evaluate the system production (80 reanalyzed and
80 generated acronyms), along a scale of five levels
of amusement (from very-funny to not-funny). The
results were very encouraging. The system perfor-
mance with humorous strategies and the one without
such strategies (i.e. random lexical choices, main-
taining only syntactic correctness) were totally dif-
ferent. None of the humorous re-analyses proposed
to the students were rejected as completely non-
humorous. Almost 70% were rated funny enough
(without humorous strategies the figure was less
than 8%). In the case of generation of new acronyms
results were positive in 53% of the cases.
A curiosity that may be worth mentioning: HA-
HAcronym participated to a contest about (human)
production of best acronyms, organized by RAI, the
Italian National Broadcasting Service. The system
won a jury’s special prize.
</bodyText>
<sectionHeader confidence="0.998657" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999986727272727">
The results of the HAHAcronym project have been
positive and a neat prototype resulted, aimed at a
very specific task, but operating without restrictions
of domain. It turns out that it can be even useful per
se, but we think that the project opens the way to
developments for creative language. We believe that
an environment for proposing solutions to advertis-
ing professionals can be a realistic practical develop-
ment of computational humor. In the log run, elec-
tronic commerce, for instance, could include flexible
and individual-oriented humorous promotion.
</bodyText>
<sectionHeader confidence="0.999441" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999816363636364">
S. Attardo. 1994. Linguistic Theory of Humor. Mouton
de Gruyter, Berlin.
K. Binsted and G. Ritchie. 1994. An implemented model
of punning riddles. In Proc. of the 121h National Con-
ference on Artificial Intelligence (AAAI-94), Seattle.
S. Freud. 1905. Der Witz und Seine Beziehung zum Un-
bewussten. Deutike, Leipzig and Vienna.
D. Hofstadter, L. Gabora, V. Raskin, and S. Attardo.
1989. Synopsis of the workshop on humor and cog-
nition. Humor, 2(4):293–347.
M. Minsky. 1980. Jokes and the logic of the cognitive
unconscious. Technical report, MIT Artificial Intelli-
gence Laboratory. AI memo 603.
J. Morkes, H. Kernal, and C. Nass. 1999. Effects
of humor in task-oriented human-computer interac-
tion and computer-mediated communication. Human-
Computer Interaction, 14:395–435.
V. Raskin. 1985. Semantic Mechanisms of Humor. Dor-
drecht/Boston/Lancaster.
W. Ruch. 1996. Special issue: Measurement approaches
to the sense of humor. Humor, 9(3/4).
O. Stock and C. Strapparava. 2003. Getting serious
about the development of computational humor. In
Proceedings of International Joint Conference on Ar-
tificial Intelligence (IJCAI03), Acapulco, Mexico.
O. Stock and C. Strapparava. 2005. The act of creating
humorous acronyms. Applied Artificial Intelligence,
19(2):137–151, February.
O. Stock. 1996. Password Swordfish: Verbal humor
in the interface. In J. Hulstijn and A. Nijholt, ed-
itors, Proc. of International Workshop on Computa-
tional Humour (TWLT 12), University of Twente, En-
schede, Netherlands.
</reference>
<page confidence="0.999024">
116
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.939311">
<title confidence="0.999948">HAHAcronym: A Computational Humor System</title>
<author confidence="0.999788">Oliviero Stock</author>
<author confidence="0.999788">Carlo Strapparava</author>
<affiliation confidence="0.940552">ITC-irst, Istituto per la Ricerca Scientifica e Tecnologica</affiliation>
<address confidence="0.998353">I-38050 Trento, ITALY</address>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Attardo</author>
</authors>
<title>Linguistic Theory of Humor. Mouton de Gruyter,</title>
<date>1994</date>
<location>Berlin.</location>
<contexts>
<context position="3705" citStr="Attardo, 1994" startWordPosition="554" endWordPosition="555">tion (HCI). However (Morkes et al., 1999) did some experiments concerning the effects of humor in HCI and computer-mediated communication situations. Especially in computer-mediated communication tasks, participants who received jokes rated the “person” or computer they worked with as more likable and competent, reported greater cooperation, joked back more often etc. The experiments show that, humor enhances the likeability of an interface “without distracting users”. There has been a considerable amount of research on linguistics of humor and on theories of semantics or pragmatics of humor (Attardo, 1994). Within the artificial intelligence community, most writing on humor has been speculative (Hofstadter et al., 1989). Minsky (Minsky, 1980) made some preliminary remarks about formalizing some kind of humor within an artificial intelligence/cognitive science perspective. He refined Freud’s notion that humor is a way of bypassing our mental “censors” which control inappropriate thoughts and feelings (Freud, 1905). So far, very limited effort has been put on building computational humor prototypes. The few existing ones are concerned with rather simple tasks, normally in limited domains. Probabl</context>
</contexts>
<marker>Attardo, 1994</marker>
<rawString>S. Attardo. 1994. Linguistic Theory of Humor. Mouton de Gruyter, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Binsted</author>
<author>G Ritchie</author>
</authors>
<title>An implemented model of punning riddles.</title>
<date>1994</date>
<booktitle>In Proc. of the 121h National Conference on Artificial Intelligence (AAAI-94),</booktitle>
<location>Seattle.</location>
<contexts>
<context position="4438" citStr="Binsted and Ritchie, 1994" startWordPosition="663" endWordPosition="666">l., 1989). Minsky (Minsky, 1980) made some preliminary remarks about formalizing some kind of humor within an artificial intelligence/cognitive science perspective. He refined Freud’s notion that humor is a way of bypassing our mental “censors” which control inappropriate thoughts and feelings (Freud, 1905). So far, very limited effort has been put on building computational humor prototypes. The few existing ones are concerned with rather simple tasks, normally in limited domains. Probably the most important attempt to create a computational humor prototype is the work of Binsted and Ritchie (Binsted and Ritchie, 1994). They have devised a model of the semantic and syntactic regularities underlying some of the simplest types of punning riddles. A punning riddle is a question-answer riddle that uses phonological ambiguity. The three main strategies used to create phonological ambiguity are syllable substitution, word substitution and metathesis. In general, the constructive approaches are mostly inspired by the incongruity theory (Raskin, 1985), interpreted at various level of refinement. The incongruity theory focuses on the element of surprise. It states that humor is created out of a conflict between what</context>
</contexts>
<marker>Binsted, Ritchie, 1994</marker>
<rawString>K. Binsted and G. Ritchie. 1994. An implemented model of punning riddles. In Proc. of the 121h National Conference on Artificial Intelligence (AAAI-94), Seattle.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Freud</author>
</authors>
<title>Der Witz und Seine Beziehung zum Unbewussten. Deutike,</title>
<date>1905</date>
<location>Leipzig and Vienna.</location>
<contexts>
<context position="4120" citStr="Freud, 1905" startWordPosition="613" endWordPosition="614">likeability of an interface “without distracting users”. There has been a considerable amount of research on linguistics of humor and on theories of semantics or pragmatics of humor (Attardo, 1994). Within the artificial intelligence community, most writing on humor has been speculative (Hofstadter et al., 1989). Minsky (Minsky, 1980) made some preliminary remarks about formalizing some kind of humor within an artificial intelligence/cognitive science perspective. He refined Freud’s notion that humor is a way of bypassing our mental “censors” which control inappropriate thoughts and feelings (Freud, 1905). So far, very limited effort has been put on building computational humor prototypes. The few existing ones are concerned with rather simple tasks, normally in limited domains. Probably the most important attempt to create a computational humor prototype is the work of Binsted and Ritchie (Binsted and Ritchie, 1994). They have devised a model of the semantic and syntactic regularities underlying some of the simplest types of punning riddles. A punning riddle is a question-answer riddle that uses phonological ambiguity. The three main strategies used to create phonological ambiguity are syllab</context>
</contexts>
<marker>Freud, 1905</marker>
<rawString>S. Freud. 1905. Der Witz und Seine Beziehung zum Unbewussten. Deutike, Leipzig and Vienna.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Hofstadter</author>
<author>L Gabora</author>
<author>V Raskin</author>
<author>S Attardo</author>
</authors>
<title>Synopsis of the workshop on humor and cognition.</title>
<date>1989</date>
<journal>Humor,</journal>
<volume>2</volume>
<issue>4</issue>
<contexts>
<context position="3821" citStr="Hofstadter et al., 1989" startWordPosition="568" endWordPosition="571">computer-mediated communication situations. Especially in computer-mediated communication tasks, participants who received jokes rated the “person” or computer they worked with as more likable and competent, reported greater cooperation, joked back more often etc. The experiments show that, humor enhances the likeability of an interface “without distracting users”. There has been a considerable amount of research on linguistics of humor and on theories of semantics or pragmatics of humor (Attardo, 1994). Within the artificial intelligence community, most writing on humor has been speculative (Hofstadter et al., 1989). Minsky (Minsky, 1980) made some preliminary remarks about formalizing some kind of humor within an artificial intelligence/cognitive science perspective. He refined Freud’s notion that humor is a way of bypassing our mental “censors” which control inappropriate thoughts and feelings (Freud, 1905). So far, very limited effort has been put on building computational humor prototypes. The few existing ones are concerned with rather simple tasks, normally in limited domains. Probably the most important attempt to create a computational humor prototype is the work of Binsted and Ritchie (Binsted a</context>
</contexts>
<marker>Hofstadter, Gabora, Raskin, Attardo, 1989</marker>
<rawString>D. Hofstadter, L. Gabora, V. Raskin, and S. Attardo. 1989. Synopsis of the workshop on humor and cognition. Humor, 2(4):293–347.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Minsky</author>
</authors>
<title>Jokes and the logic of the cognitive unconscious.</title>
<date>1980</date>
<journal>MIT Artificial Intelligence Laboratory. AI memo</journal>
<tech>Technical report,</tech>
<pages>603</pages>
<contexts>
<context position="3844" citStr="Minsky, 1980" startWordPosition="573" endWordPosition="574">tuations. Especially in computer-mediated communication tasks, participants who received jokes rated the “person” or computer they worked with as more likable and competent, reported greater cooperation, joked back more often etc. The experiments show that, humor enhances the likeability of an interface “without distracting users”. There has been a considerable amount of research on linguistics of humor and on theories of semantics or pragmatics of humor (Attardo, 1994). Within the artificial intelligence community, most writing on humor has been speculative (Hofstadter et al., 1989). Minsky (Minsky, 1980) made some preliminary remarks about formalizing some kind of humor within an artificial intelligence/cognitive science perspective. He refined Freud’s notion that humor is a way of bypassing our mental “censors” which control inappropriate thoughts and feelings (Freud, 1905). So far, very limited effort has been put on building computational humor prototypes. The few existing ones are concerned with rather simple tasks, normally in limited domains. Probably the most important attempt to create a computational humor prototype is the work of Binsted and Ritchie (Binsted and Ritchie, 1994). They</context>
</contexts>
<marker>Minsky, 1980</marker>
<rawString>M. Minsky. 1980. Jokes and the logic of the cognitive unconscious. Technical report, MIT Artificial Intelligence Laboratory. AI memo 603.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Morkes</author>
<author>H Kernal</author>
<author>C Nass</author>
</authors>
<title>Effects of humor in task-oriented human-computer interaction and computer-mediated communication. HumanComputer Interaction,</title>
<date>1999</date>
<pages>14--395</pages>
<contexts>
<context position="3132" citStr="Morkes et al., 1999" startWordPosition="469" endWordPosition="472">oblem, as the core of the European Project HAHAcronym. The main goal of HAHAcronym has been the realization of an acronym ironic reanalyzer and generator as a proof of concept in a focalized but non restricted context. To implement this system some general tools have been adapted, or developed for the humorous context. Systems output has been submitted to evaluation by human subjects, with a very positive result. 113 Proceedings of the ACL Interactive Poster and Demonstration Sessions, pages 113–116, Ann Arbor, June 2005. c�2005 Association for Computational Linguistics action (HCI). However (Morkes et al., 1999) did some experiments concerning the effects of humor in HCI and computer-mediated communication situations. Especially in computer-mediated communication tasks, participants who received jokes rated the “person” or computer they worked with as more likable and competent, reported greater cooperation, joked back more often etc. The experiments show that, humor enhances the likeability of an interface “without distracting users”. There has been a considerable amount of research on linguistics of humor and on theories of semantics or pragmatics of humor (Attardo, 1994). Within the artificial int</context>
</contexts>
<marker>Morkes, Kernal, Nass, 1999</marker>
<rawString>J. Morkes, H. Kernal, and C. Nass. 1999. Effects of humor in task-oriented human-computer interaction and computer-mediated communication. HumanComputer Interaction, 14:395–435.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V Raskin</author>
</authors>
<date>1985</date>
<booktitle>Semantic Mechanisms of Humor. Dordrecht/Boston/Lancaster.</booktitle>
<contexts>
<context position="4871" citStr="Raskin, 1985" startWordPosition="728" endWordPosition="729">ple tasks, normally in limited domains. Probably the most important attempt to create a computational humor prototype is the work of Binsted and Ritchie (Binsted and Ritchie, 1994). They have devised a model of the semantic and syntactic regularities underlying some of the simplest types of punning riddles. A punning riddle is a question-answer riddle that uses phonological ambiguity. The three main strategies used to create phonological ambiguity are syllable substitution, word substitution and metathesis. In general, the constructive approaches are mostly inspired by the incongruity theory (Raskin, 1985), interpreted at various level of refinement. The incongruity theory focuses on the element of surprise. It states that humor is created out of a conflict between what is expected and what actually occurs when the humorous utterance or story is completed. In verbal humor this means that at some level, different interpretations of material must be possible (and some not detected before the culmination of the humorous process) or various pieces of material must cause perception of specific forms of opposition. Natural language processing research has often dealt with ambiguity in language. A com</context>
</contexts>
<marker>Raskin, 1985</marker>
<rawString>V. Raskin. 1985. Semantic Mechanisms of Humor. Dordrecht/Boston/Lancaster.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Ruch</author>
</authors>
<title>Special issue: Measurement approaches to the sense of humor.</title>
<date>1996</date>
<journal>Humor,</journal>
<volume>9</volume>
<issue>3</issue>
<contexts>
<context position="12056" citStr="Ruch, 1996" startWordPosition="1850" endWordPosition="1851"> for Nescience Teaching NAIVE - Negligent At-large Instruction for Vulnerable Extracurricular-activity Main concept: writing; Attribute: creative CAUSTIC - Creative Activity for Unconvincingly Sporadically Talkative Individualistic Commercials We note that the system tries to keep all the expansions of the acronym coherent in the same semantic field of the main concepts. At the same time, whenever possible, it exploits some incongruity in the lexical choices. Testing the humorous quality of texts or other verbal expressions is not an easy task. There are some relevant studies though, such as (Ruch, 1996). For HAHAcronym an evaluation was set with a group of 30 American university students. They had to evaluate the system production (80 reanalyzed and 80 generated acronyms), along a scale of five levels of amusement (from very-funny to not-funny). The results were very encouraging. The system performance with humorous strategies and the one without such strategies (i.e. random lexical choices, maintaining only syntactic correctness) were totally different. None of the humorous re-analyses proposed to the students were rejected as completely nonhumorous. Almost 70% were rated funny enough (with</context>
</contexts>
<marker>Ruch, 1996</marker>
<rawString>W. Ruch. 1996. Special issue: Measurement approaches to the sense of humor. Humor, 9(3/4).</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Stock</author>
<author>C Strapparava</author>
</authors>
<title>Getting serious about the development of computational humor.</title>
<date>2003</date>
<booktitle>In Proceedings of International Joint Conference on Artificial Intelligence (IJCAI03),</booktitle>
<location>Acapulco, Mexico.</location>
<contexts>
<context position="6253" citStr="Stock and Strapparava, 2003" startWordPosition="951" endWordPosition="954">st European project devoted to computational humor (EU project IST-2000-30039), part of the Future Emerging Technologies section of the Fifth European Framework Program. The main goal of HAHAcronym was the realization of an acronym ironic re-analyzer and generator as a proof of concept in a focalized but non restricted context. In the first case the system makes fun of existing acronyms, in the second case, starting from concepts provided by the user, it produces new acronyms, constrained to be words of the given language. And, of course, they have to be funny. HAHAcronym, fully described in (Stock and Strapparava, 2003) (Stock and Strapparava, 2005), is based on various resources for natural language processing, adapted for humor. Many components are present but simplified with respect to more complex scenarios and some general tools have been developed for the humorous context. A fundamental tool is an incongruity detector/generator: in practice there is a need to detect semantic mismatches between expected sentence meaning and other readings, along some specific dimension (i.e. in our case the acronym and its context). 2 The HAHAcronym project The realization of an acronym re-analyzer and generator was pro</context>
</contexts>
<marker>Stock, Strapparava, 2003</marker>
<rawString>O. Stock and C. Strapparava. 2003. Getting serious about the development of computational humor. In Proceedings of International Joint Conference on Artificial Intelligence (IJCAI03), Acapulco, Mexico.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Stock</author>
<author>C Strapparava</author>
</authors>
<title>The act of creating humorous acronyms.</title>
<date>2005</date>
<journal>Applied Artificial Intelligence,</journal>
<volume>19</volume>
<issue>2</issue>
<contexts>
<context position="6283" citStr="Stock and Strapparava, 2005" startWordPosition="955" endWordPosition="958"> computational humor (EU project IST-2000-30039), part of the Future Emerging Technologies section of the Fifth European Framework Program. The main goal of HAHAcronym was the realization of an acronym ironic re-analyzer and generator as a proof of concept in a focalized but non restricted context. In the first case the system makes fun of existing acronyms, in the second case, starting from concepts provided by the user, it produces new acronyms, constrained to be words of the given language. And, of course, they have to be funny. HAHAcronym, fully described in (Stock and Strapparava, 2003) (Stock and Strapparava, 2005), is based on various resources for natural language processing, adapted for humor. Many components are present but simplified with respect to more complex scenarios and some general tools have been developed for the humorous context. A fundamental tool is an incongruity detector/generator: in practice there is a need to detect semantic mismatches between expected sentence meaning and other readings, along some specific dimension (i.e. in our case the acronym and its context). 2 The HAHAcronym project The realization of an acronym re-analyzer and generator was proposed to the European Commissi</context>
</contexts>
<marker>Stock, Strapparava, 2005</marker>
<rawString>O. Stock and C. Strapparava. 2005. The act of creating humorous acronyms. Applied Artificial Intelligence, 19(2):137–151, February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Stock</author>
</authors>
<title>Password Swordfish: Verbal humor in the interface.</title>
<date>1996</date>
<booktitle>Proc. of International Workshop on Computational Humour (TWLT 12),</booktitle>
<editor>In J. Hulstijn and A. Nijholt, editors,</editor>
<institution>University of Twente,</institution>
<location>Enschede, Netherlands.</location>
<contexts>
<context position="768" citStr="Stock, 1996" startWordPosition="112" endWordPosition="113">ALY {stock, strappa}@itc.it 1 Introduction Society needs humor, not just for entertainment. In the current business world, humor is considered to be so important that companies may hire humor consultants. Humor can be used “to criticize without alienating, to defuse tension or anxiety, to introduce new ideas, to bond teams, ease relationships and elicit cooperation”. As far as human-computer interfaces are concerned, in the future we will demand naturalness and effectiveness that require the incorporation of models of possibly all human cognitive capabilities, including the handling of humor (Stock, 1996). There are many practical settings where computational humor will add value. Among them there are: business world applications (such as advertisement, ecommerce, etc.), general computer-mediated communication and human-computer interaction, increase in the friendliness of natural language interfaces, educational and edutainment systems. Not necessarily applications need to emphasize interactivity. For instance there are important prospects for humor in automatic information presentation. In the Web age presentations will become more and more flexible and personalized and will require humor co</context>
</contexts>
<marker>Stock, 1996</marker>
<rawString>O. Stock. 1996. Password Swordfish: Verbal humor in the interface. In J. Hulstijn and A. Nijholt, editors, Proc. of International Workshop on Computational Humour (TWLT 12), University of Twente, Enschede, Netherlands.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>