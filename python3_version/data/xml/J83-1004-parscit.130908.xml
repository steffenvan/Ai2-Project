<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003880">
<title confidence="0.725005">
Letter to the Editor
</title>
<figureCaption confidence="0.667489">
Editor&apos;s note: Letters to the editor are encouraged on all matters of opinion relevant
to computational linguistics. In addition, responses to previous letters are actively encour-
aged. All letters are reviewed for appropriateness by the editor and a few members of the
editorial board. Comments and suggestions on how to improve this section are welcome.
</figureCaption>
<subsectionHeader confidence="0.8312525">
On the Need for Careful Description of NL
Prototypes
</subsectionHeader>
<bodyText confidence="0.993479172413793">
As a result of much computation linguistic research in
the 1970&apos;s, natural language (NL) processors have
begun to rival more formal means of computer access
in some instances. Unfortunately, very little is known,
even by applied NL researchers themselves, about the
true capabilities of existing systems. This is partly due
to the fact that most literature, at least in journals
such as this one, has focused on technical or theoreti-
cal questions, paying less attention to practical mat-
ters. We believe the state of the art in NL system
design allows authors to become more serious about
matters of usability, without losing sight of the theo-
retical basis on which various facilities are being de-
signed.
Many researchers have observed the usefulness of
obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL
system in order to evaluate it or even truly understand
its workings (e.g., Ballard 1981, Harris 1980, Morris
1979, Petrick 1976, Sondheimer 1978, Tennant 1979).
This suggests to us that a profitable and responsible
way to organize written reports of prototype NL sys-
tems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one dem-
onstration. Of course, certain aspects of a given sys-
tem will deserve separate papers but, even in those
cases, it is important to understand their role in the
overall processing. We now propose a standard for-
mat for descriptions of prototype or near-prototype
natural language processors.
A &amp;quot;Standard Form&amp;quot; for Written Reports
</bodyText>
<listItem confidence="0.8950763">
1. Overview: Define the problem being solved in
terms of the domains, operations, language to be
used, and intended group of users. Tell how the
processing provided by the prototype relates to
the overall class of interest.
2. Sample Session: Provide a transcript of a short
session with the system. State the circumstances
under which the session was held, and indicate
how indicative it is of similar sessions that have
been attempted. If necessary, give hypothetical
</listItem>
<bodyText confidence="0.787109">
inputs or system responses, but clearly indicate
them as such.
</bodyText>
<listItem confidence="0.96886534375">
3. System Overview: Present the construction
(architecture) of the processor, briefly explaining
the role of the major modules. Include a figure
showing which modules talk to which others, and
how various files are used.
4. Example Trace: Trace a single input through all
phases of processing. Choose the example input
to be representative of the anticipated inputs and
of the system capabilities. Tell what would hap-
pen if slight modifications were made in the ex-
ample. Comment on potential errors that would
arise for similar inputs. Explain the effect of
processing the input, including system response.
Describe the effect of the sample (or another
suitable) input in setting up the system to process
subsequent inputs.
5. Features: Indicate the syntactic and semantic
properties of acceptable inputs. List and briefly
describe the available &amp;quot;special features&amp;quot;, both
linguistic (e.g., conjunctions, ellipsis) and other-
wise (e.g., synonym definitions, means of chang-
ing verb meanings, undoing previous actions of
the system).
6. Theory: Present the philosophy or theories on
which the system is based. If one objective of
building the system is to evaluate alternate theo-
ries, state the questions to be addressed.
7. Detailed Description: Discuss the aspects of the
prototype that are considered important or novel.
Describe the techniques and formalisms developed
during the research, and mention what previously
known schemes have been used.
</listItem>
<bodyText confidence="0.999636333333333">
(This is the &amp;quot;heart&amp;quot; of the paper, where the
author is given the freedom to emphasize selected
features while disregarding others. Technical dis-
cussions are now appropriate for components
whose role in the overall processing has already
been specified.)
</bodyText>
<listItem confidence="0.614039333333333">
8. Readiness: Relate experiences with the processor,
telling which components have worked well and
which haven&apos;t. Give examples of inputs informed
</listItem>
<note confidence="0.647858">
American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983 23
Letters to the Editor
</note>
<bodyText confidence="0.997501214285715">
users would expect the system to accept that are
processed incorrectly. If any formal or informal
tests have been conducted, describe them and the
findings. Assess as precisely as possible the
&amp;quot;readiness&apos; of the prototype. That is, who can
use it in its current state, under what conditions,
and what training or practice is needed? Include
a dial-in number and login protocol so the system
may be experimented with by reviewers or pro-
spective users!
9. Prospects: Comment on the generality of the
system design. Evaluate the extendibility of the
system within the prototype domain(s), and the
&amp;quot;portability&amp;quot; of the system to new domains.
</bodyText>
<subsectionHeader confidence="0.787088">
Cornments
</subsectionHeader>
<bodyText confidence="0.999490448275862">
Some comments are in order. First, it may be suit-
able for projects for which a complete processor has
been built as a means for evaluating a theory, rather
than as an end in itself, to reorder the sections we
suggest, e.g., to place the theory section earlier. Fur-
thermore, since existing approaches vary widely, it
may be useful for some papers to gloss over a particu-
lar topic or make it the subject of a separate report.
One obvious benefit of adopting a more-or-less
standard format is that readers will less often need to
&amp;quot;read between the lines&amp;quot; to tell whether a specific
feature is provided if there is a convention of what
material goes where. Another benefit is that by keep-
ing a broad presentation of a system in mind when
doing the research, investigators may be less likely to
expend inordinate effort on less important matters.
Furthermore, providing a proper format is chosen,
both researchers and prospective users can derive at
least some benefit from the same paper.
Concerning the likelihood of acceptance of the
proposal above, we sympathize with a reviewer of a
previous paper of ours who suggested that &amp;quot;it is naive
to think that [a] standard form ... could — or would, if
it could — be followed, but ... it does no harm to
dream.&amp;quot; It is to be expected that readers&apos; attitudes
toward possible standard form will differ from ours in
detail, but we believe the spirit is important, and
would provide a too-often missing element in the NL
literature.
</bodyText>
<figure confidence="0.3656525">
Bruce W. Ballard
Department of Computer Science
Duke University
Durham, NC 27706
</figure>
<sectionHeader confidence="0.926341" genericHeader="abstract">
References
</sectionHeader>
<reference confidence="0.999444789473684">
Ballard, Bruce. 1981 A Methodology for Evaluating Near-
Prototype National Language Processors. Tech. Report TR-81-
4, Department of Computer and Information science, Ohio
State University.
Harris, Larry. 1980 Prospects for Practical Natural Language
Systems. Proceedings of the 18th Annual Meeting of the ACL.
University of Pennsylvania, Philadelphia, Pennsylvania: p. 129.
Morris, John. 1979 Natural Language Systems: A User&apos;s View.
SISTM Quarterly and Brain Theory Newsletter (currently Cogni-
tion and Brain Theory): 16-20.
Petrick, Stanley. 1976 On Natural-Language-Based Computer
Systems. IBM Journal of Research and Development 20(4):
314-325.
Sondheimer, Norman. 1978 Why Don&apos;t We — How Can We —
When Will We — Have Practical English Language Interfaces?
Tech. Report H00002, Sperry Univac, Blue Bell, Pennsylvania.
Tennant, Harry. 1979 Experience with the Evaluation of Natural
Language Question Answerers. Int. J. Conf. on Artificial
Language: 275-281.
</reference>
<page confidence="0.940175">
24 American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.069053">
<title confidence="0.77458">Letter to the Editor</title>
<abstract confidence="0.99460026119403">Editor&apos;s note: Letters to the editor are encouraged on all matters of opinion relevant to computational linguistics. In addition, responses to previous letters are actively encouraged. All letters are reviewed for appropriateness by the editor and a few members of the editorial board. Comments and suggestions on how to improve this section are welcome. On the Need for Careful Description of NL Prototypes As a result of much computation linguistic research in the 1970&apos;s, natural language (NL) processors have begun to rival more formal means of computer access in some instances. Unfortunately, very little is known, even by applied NL researchers themselves, about the true capabilities of existing systems. This is partly due to the fact that most literature, at least in journals such as this one, has focused on technical or theoretical questions, paying less attention to practical matters. We believe the state of the art in NL system design allows authors to become more serious about matters of usability, without losing sight of the theoretical basis on which various facilities are being designed. Many researchers have observed the usefulness of obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL system in order to evaluate it or even truly understand its workings (e.g., Ballard 1981, Harris 1980, Morris 1979, Petrick 1976, Sondheimer 1978, Tennant 1979). This suggests to us that a profitable and responsible way to organize written reports of prototype NL systems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one demonstration. Of course, certain aspects of a given system will deserve separate papers but, even in those cases, it is important to understand their role in the overall processing. We now propose a standard format for descriptions of prototype or near-prototype natural language processors. A &amp;quot;Standard Form&amp;quot; for Written Reports Overview: the problem being solved in terms of the domains, operations, language to be used, and intended group of users. Tell how the processing provided by the prototype relates to the overall class of interest. Sample Session: a transcript of a short session with the system. State the circumstances under which the session was held, and indicate how indicative it is of similar sessions that have been attempted. If necessary, give hypothetical inputs or system responses, but clearly indicate them as such. System Overview: the construction (architecture) of the processor, briefly explaining the role of the major modules. Include a figure showing which modules talk to which others, and how various files are used. Example Trace: a single input through all phases of processing. Choose the example input to be representative of the anticipated inputs and of the system capabilities. Tell what would happen if slight modifications were made in the example. Comment on potential errors that would arise for similar inputs. Explain the effect of processing the input, including system response. Describe the effect of the sample (or another suitable) input in setting up the system to process subsequent inputs. Features: the syntactic and semantic properties of acceptable inputs. List and briefly describe the available &amp;quot;special features&amp;quot;, both linguistic (e.g., conjunctions, ellipsis) and otherwise (e.g., synonym definitions, means of changing verb meanings, undoing previous actions of the system). Theory: the philosophy or theories on which the system is based. If one objective of building the system is to evaluate alternate theories, state the questions to be addressed. Detailed Description: the aspects of the prototype that are considered important or novel. Describe the techniques and formalisms developed during the research, and mention what previously known schemes have been used. (This is the &amp;quot;heart&amp;quot; of the paper, where the author is given the freedom to emphasize selected features while disregarding others. Technical discussions are now appropriate for components whose role in the overall processing has already been specified.) Readiness: experiences with the processor, telling which components have worked well and which haven&apos;t. Give examples of inputs informed Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983 Letters to the Editor users would expect the system to accept that are processed incorrectly. If any formal or informal tests have been conducted, describe them and the findings. Assess as precisely as possible the &amp;quot;readiness&apos; of the prototype. That is, who can use it in its current state, under what conditions, and what training or practice is needed? Include a dial-in number and login protocol so the system may be experimented with by reviewers or prospective users! on the generality of the system design. Evaluate the extendibility of the system within the prototype domain(s), and the &amp;quot;portability&amp;quot; of the system to new domains. Cornments Some comments are in order. First, it may be suitable for projects for which a complete processor has been built as a means for evaluating a theory, rather than as an end in itself, to reorder the sections we suggest, e.g., to place the theory section earlier. Furthermore, since existing approaches vary widely, it may be useful for some papers to gloss over a particular topic or make it the subject of a separate report. One obvious benefit of adopting a more-or-less standard format is that readers will less often need to &amp;quot;read between the lines&amp;quot; to tell whether a specific feature is provided if there is a convention of what material goes where. Another benefit is that by keeping a broad presentation of a system in mind when doing the research, investigators may be less likely to expend inordinate effort on less important matters. Furthermore, providing a proper format is chosen, both researchers and prospective users can derive at least some benefit from the same paper. Concerning the likelihood of acceptance of the proposal above, we sympathize with a reviewer of a previous paper of ours who suggested that &amp;quot;it is naive to think that [a] standard form ... could — or would, if it could — be followed, but ... it does no harm to dream.&amp;quot; It is to be expected that readers&apos; attitudes toward possible standard form will differ from ours in detail, but we believe the spirit is important, and provide a too-often missing element in the literature.</abstract>
<author confidence="0.999563">Bruce W Ballard</author>
<affiliation confidence="0.999877">Department of Computer Science Duke University</affiliation>
<address confidence="0.915496">Durham, NC 27706</address>
<title confidence="0.867912">References</title>
<author confidence="0.880417">A Methodology for Evaluating Near-</author>
<affiliation confidence="0.786884333333333">Prototype National Language Processors. Tech. Report TR-81- 4, Department of Computer and Information science, Ohio State University.</affiliation>
<address confidence="0.824148">Harris, Larry. 1980 Prospects for Practical Natural Language</address>
<note confidence="0.845381142857143">of the 18th Annual Meeting of the ACL. University of Pennsylvania, Philadelphia, Pennsylvania: p. 129. Morris, John. 1979 Natural Language Systems: A User&apos;s View. Quarterly and Brain Theory Newsletter Cogniand Brain Theory): Petrick, Stanley. 1976 On Natural-Language-Based Computer Journal of Research and Development 314-325. Sondheimer, Norman. 1978 Why Don&apos;t We — How Can We — When Will We — Have Practical English Language Interfaces? Tech. Report H00002, Sperry Univac, Blue Bell, Pennsylvania. Tennant, Harry. 1979 Experience with the Evaluation of Natural Question Answerers. J. Conf. on Artificial Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Bruce Ballard</author>
</authors>
<title>A Methodology for Evaluating NearPrototype National Language Processors.</title>
<date>1981</date>
<tech>Tech. Report TR-81-4,</tech>
<institution>Department of Computer and Information science, Ohio State University.</institution>
<contexts>
<context position="1320" citStr="Ballard 1981" startWordPosition="211" endWordPosition="212">ties of existing systems. This is partly due to the fact that most literature, at least in journals such as this one, has focused on technical or theoretical questions, paying less attention to practical matters. We believe the state of the art in NL system design allows authors to become more serious about matters of usability, without losing sight of the theoretical basis on which various facilities are being designed. Many researchers have observed the usefulness of obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL system in order to evaluate it or even truly understand its workings (e.g., Ballard 1981, Harris 1980, Morris 1979, Petrick 1976, Sondheimer 1978, Tennant 1979). This suggests to us that a profitable and responsible way to organize written reports of prototype NL systems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one demonstration. Of course, certain aspects of a given system will deserve separate papers but, even in those cases, it is important to understand their role in the overall processing. We now propose a standard format for descriptions of prototype or near-prototype natural language processors. A &amp;quot;Standard Form&amp;quot; for Written Reports 1. Overview: Define the problem being solve</context>
</contexts>
<marker>Ballard, 1981</marker>
<rawString>Ballard, Bruce. 1981 A Methodology for Evaluating NearPrototype National Language Processors. Tech. Report TR-81-4, Department of Computer and Information science, Ohio State University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Larry Harris</author>
</authors>
<title>Prospects for Practical Natural Language Systems.</title>
<date>1980</date>
<booktitle>Proceedings of the 18th Annual Meeting of the ACL.</booktitle>
<pages>129</pages>
<institution>University of Pennsylvania,</institution>
<location>Philadelphia, Pennsylvania:</location>
<contexts>
<context position="1333" citStr="Harris 1980" startWordPosition="213" endWordPosition="214">ng systems. This is partly due to the fact that most literature, at least in journals such as this one, has focused on technical or theoretical questions, paying less attention to practical matters. We believe the state of the art in NL system design allows authors to become more serious about matters of usability, without losing sight of the theoretical basis on which various facilities are being designed. Many researchers have observed the usefulness of obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL system in order to evaluate it or even truly understand its workings (e.g., Ballard 1981, Harris 1980, Morris 1979, Petrick 1976, Sondheimer 1978, Tennant 1979). This suggests to us that a profitable and responsible way to organize written reports of prototype NL systems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one demonstration. Of course, certain aspects of a given system will deserve separate papers but, even in those cases, it is important to understand their role in the overall processing. We now propose a standard format for descriptions of prototype or near-prototype natural language processors. A &amp;quot;Standard Form&amp;quot; for Written Reports 1. Overview: Define the problem being solved in terms of</context>
</contexts>
<marker>Harris, 1980</marker>
<rawString>Harris, Larry. 1980 Prospects for Practical Natural Language Systems. Proceedings of the 18th Annual Meeting of the ACL. University of Pennsylvania, Philadelphia, Pennsylvania: p. 129.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Morris</author>
</authors>
<title>Natural Language Systems: A User&apos;s View.</title>
<date>1979</date>
<booktitle>SISTM Quarterly and Brain Theory Newsletter (currently Cognition and Brain Theory):</booktitle>
<pages>16--20</pages>
<contexts>
<context position="1346" citStr="Morris 1979" startWordPosition="215" endWordPosition="216">his is partly due to the fact that most literature, at least in journals such as this one, has focused on technical or theoretical questions, paying less attention to practical matters. We believe the state of the art in NL system design allows authors to become more serious about matters of usability, without losing sight of the theoretical basis on which various facilities are being designed. Many researchers have observed the usefulness of obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL system in order to evaluate it or even truly understand its workings (e.g., Ballard 1981, Harris 1980, Morris 1979, Petrick 1976, Sondheimer 1978, Tennant 1979). This suggests to us that a profitable and responsible way to organize written reports of prototype NL systems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one demonstration. Of course, certain aspects of a given system will deserve separate papers but, even in those cases, it is important to understand their role in the overall processing. We now propose a standard format for descriptions of prototype or near-prototype natural language processors. A &amp;quot;Standard Form&amp;quot; for Written Reports 1. Overview: Define the problem being solved in terms of the domains,</context>
</contexts>
<marker>Morris, 1979</marker>
<rawString>Morris, John. 1979 Natural Language Systems: A User&apos;s View. SISTM Quarterly and Brain Theory Newsletter (currently Cognition and Brain Theory): 16-20.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stanley Petrick</author>
</authors>
<title>On Natural-Language-Based Computer Systems.</title>
<date>1976</date>
<journal>IBM Journal of Research and Development</journal>
<volume>20</volume>
<issue>4</issue>
<pages>314--325</pages>
<contexts>
<context position="1360" citStr="Petrick 1976" startWordPosition="217" endWordPosition="218"> due to the fact that most literature, at least in journals such as this one, has focused on technical or theoretical questions, paying less attention to practical matters. We believe the state of the art in NL system design allows authors to become more serious about matters of usability, without losing sight of the theoretical basis on which various facilities are being designed. Many researchers have observed the usefulness of obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL system in order to evaluate it or even truly understand its workings (e.g., Ballard 1981, Harris 1980, Morris 1979, Petrick 1976, Sondheimer 1978, Tennant 1979). This suggests to us that a profitable and responsible way to organize written reports of prototype NL systems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one demonstration. Of course, certain aspects of a given system will deserve separate papers but, even in those cases, it is important to understand their role in the overall processing. We now propose a standard format for descriptions of prototype or near-prototype natural language processors. A &amp;quot;Standard Form&amp;quot; for Written Reports 1. Overview: Define the problem being solved in terms of the domains, operations, l</context>
</contexts>
<marker>Petrick, 1976</marker>
<rawString>Petrick, Stanley. 1976 On Natural-Language-Based Computer Systems. IBM Journal of Research and Development 20(4): 314-325.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Norman Sondheimer</author>
</authors>
<title>Why Don&apos;t We — How Can We — When Will We — Have Practical English Language Interfaces?</title>
<date>1978</date>
<tech>Tech. Report H00002,</tech>
<institution>Sperry Univac, Blue Bell,</institution>
<location>Pennsylvania.</location>
<contexts>
<context position="1377" citStr="Sondheimer 1978" startWordPosition="219" endWordPosition="220">ct that most literature, at least in journals such as this one, has focused on technical or theoretical questions, paying less attention to practical matters. We believe the state of the art in NL system design allows authors to become more serious about matters of usability, without losing sight of the theoretical basis on which various facilities are being designed. Many researchers have observed the usefulness of obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL system in order to evaluate it or even truly understand its workings (e.g., Ballard 1981, Harris 1980, Morris 1979, Petrick 1976, Sondheimer 1978, Tennant 1979). This suggests to us that a profitable and responsible way to organize written reports of prototype NL systems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one demonstration. Of course, certain aspects of a given system will deserve separate papers but, even in those cases, it is important to understand their role in the overall processing. We now propose a standard format for descriptions of prototype or near-prototype natural language processors. A &amp;quot;Standard Form&amp;quot; for Written Reports 1. Overview: Define the problem being solved in terms of the domains, operations, language to be use</context>
</contexts>
<marker>Sondheimer, 1978</marker>
<rawString>Sondheimer, Norman. 1978 Why Don&apos;t We — How Can We — When Will We — Have Practical English Language Interfaces? Tech. Report H00002, Sperry Univac, Blue Bell, Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harry Tennant</author>
</authors>
<title>Experience with the Evaluation of Natural Language Question Answerers.</title>
<date>1979</date>
<journal>Int. J. Conf. on Artificial Language:</journal>
<pages>275--281</pages>
<contexts>
<context position="1392" citStr="Tennant 1979" startWordPosition="221" endWordPosition="222">rature, at least in journals such as this one, has focused on technical or theoretical questions, paying less attention to practical matters. We believe the state of the art in NL system design allows authors to become more serious about matters of usability, without losing sight of the theoretical basis on which various facilities are being designed. Many researchers have observed the usefulness of obtaining actual &amp;quot;hands-on&amp;quot; experience with an NL system in order to evaluate it or even truly understand its workings (e.g., Ballard 1981, Harris 1980, Morris 1979, Petrick 1976, Sondheimer 1978, Tennant 1979). This suggests to us that a profitable and responsible way to organize written reports of prototype NL systems is to attempt to &amp;quot;stimulate&amp;quot; a one-on-one demonstration. Of course, certain aspects of a given system will deserve separate papers but, even in those cases, it is important to understand their role in the overall processing. We now propose a standard format for descriptions of prototype or near-prototype natural language processors. A &amp;quot;Standard Form&amp;quot; for Written Reports 1. Overview: Define the problem being solved in terms of the domains, operations, language to be used, and intended</context>
</contexts>
<marker>Tennant, 1979</marker>
<rawString>Tennant, Harry. 1979 Experience with the Evaluation of Natural Language Question Answerers. Int. J. Conf. on Artificial Language: 275-281.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>