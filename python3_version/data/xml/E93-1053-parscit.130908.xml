<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.984459">
Localising Barriers Theory
</title>
<author confidence="0.982566">
Michael Schiehlen*
</author>
<affiliation confidence="0.946956">
Institute for Computational Linguistics, University of Stuttgart,
</affiliation>
<address confidence="0.743818">
Azenbergstr. 12, W-7000 Stuttgart 1
</address>
<email confidence="0.995171">
E-mail: mike@adler.ims.uni-stuttgart.de
</email>
<sectionHeader confidence="0.996556" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999215462962963">
Government-Binding Parsing has become attractive
in the last few years. A variety of systems have been
designed in view of a correspondence as direct as pos-
sible with linguistic theory ([Johnson, 1989], [Pollard
and Sag, 1991], [Kroch, 1989]). These approaches
can be classified by their method of handling global
constraints. Global constraints are syntactic in na-
ture: They cover more than one projection. In con-
trast, local constraints can be checked inside a pro-
jection and, thus, lend themselves to a treatment in
the lexicon. Conditions on features have been the
subject of intensive study and viable logics have
been proposed for them (see e.g. the CUF formalism
[Dorre and Eisele, 1991], [Dorna, 1992]). In this pa-
per, we assume such a unification-based mechanism
to take care of local conditions and focus on global
constraints. One class of approaches to principle-
based parsing (see [Pollard and Sag, 1991] for HPSG,
[Kroch, 19891 for TAG) attempts to reduce global
conditions to local constraints and thus to make
them accessible to treatment in a feature framework.
This strategy has been pursued only at the expense
of sacrificing the precise formulation of the theory
and the definitory power stemming from it. The re-
sult has been a shift from the structural perspec-
tive assumed by GB theory to the object-oriented
view taken by unification formalisms. The other class
of approaches ([Johnson, 1989]) has allowed the full
range of possible restrictions on trees and has in-
curred potential undecidability for its parsers. We
take up a middle stance on the matter in that we
propose a separate logic for global constraints and
posit that global constraints only work on ancestor
lines (see 7).
We assume &amp;quot;movement&amp;quot; to be encoded by the kind of
gap-threading technique familiar from HPSG, LFG.
In order to integrate global constraints a &amp;quot;state&amp;quot; (in-
formation that serves to express barrier configura-
tions in the part of the tree which has already been
built up) is associated with each &amp;quot;chain&amp;quot; (informa-
tion about a moved element). Following HPSG, LFG,
we have in mind a rule-based parser. Thus, states are
manipulated when rules are chained. We need a cal-
culus that is able to derive global constraints working
on a local basis. We begin by developing this calculus
hand in hand with an analysis of Chomsky&apos;s frame-
1 wish to thank Robin Cooper, Mark Johnson and
Esther Kiinig-Baumer for comments on earlier versions
of this paper.
work. We then go on to show that many approaches
to barriers theory and a variety of diverse phenom-
ena can be moulded into our format and conclude
with an indication of ways to use the system on-line
during parsing.
</bodyText>
<sectionHeader confidence="0.967511" genericHeader="method">
2 Dependencies Between Nodes
</sectionHeader>
<bodyText confidence="0.998425727272727">
We take a free T to be a structure (N,&gt;), where
N is a set of nodes and &gt; stands for dominance, a
binary relation on N. We say that nodes a and b
are connected if a &gt; b V b&gt;a V a= b. We define
the relation of immediate dominance between two
nodes a and b as a&gt;6A-&apos;3c:a&gt;cAc&gt; b. Dominance
is an irreflexive partial order relation satisfying the
axioms (1-3). Ancestors of a node are connected (1),
there exists a (single) root (2), dominance reduces to
immediate dominance (3). Variables are universally
quantified unless specified otherwise.
</bodyText>
<listItem confidence="0.999767666666667">
(1) x&gt;z A y&gt;z x connected with y
(2) 3xVy : x &gt; y
(3) x&gt;z-+3y:x&gt;-y A y&gt;z
</listItem>
<bodyText confidence="0.97571919047619">
Chomsky [1986, 9,30] discusses several definitions for
constraints on unbounded dependencies.
(13) a c-commands f3 if a does not domi-
nate 16 [and does not dominate or equal a]
and every 7 that dominates a dominates 13.
Where 7 is restricted to maximal projec-
tions we will say that a m-commands O.
(18) a governs fi if a m-commands 13 and
there is no 7, 7 a barrier for f3, such that 7
excludes a.
(59) )3 is n-subjacent to a if there are fewer
than n+1 barriers for fl that exclude a.
All of these can be moulded into the general format
introduced in (4): Two nodes can only stand in a re-
lation R if they are unconnected and, furthermore, at
most n barriers for the second node do not dominate
the first one. The notion of a barrier B remains to
be specified. For now, we only demand that barrier-
hood entail dominance. We call relations that satisfy
axiom (4) definable with barrier concepts, for short
BC-definable.
</bodyText>
<page confidence="0.996307">
443
</page>
<listItem confidence="0.872554">
(4) aRb a, b unconnected A
</listItem>
<equation confidence="0.533075">
Re I B(c,b) A —,c&gt;a}l &lt; n
</equation>
<bodyText confidence="0.977154">
Balanced relations like government require a defini-
tion in terms of two BC-definable relations: Ri(a, b)
and R2(b, a).
</bodyText>
<listItem confidence="0.359932">
(5) B(c,b)—, c&gt;b
</listItem>
<bodyText confidence="0.964765">
We can show several properties of BC-definable re-
lations. The nodes are unconnected.
</bodyText>
<listItem confidence="0.869784">
(6) aRb —■ a, b unconnected
</listItem>
<bodyText confidence="0.753404333333333">
In order to investigate BC-definable relations it suf-
fices to investigate the ancestor lines of their second
argument b (that is {y I y&gt; b}).
</bodyText>
<listItem confidence="0.962217333333333">
(7) x›-y A x&gt;ai A --iy&gt;ai A x&gt;a2 A -w&gt;a2
A y &gt; b (aillb a2Rb)
(7) gives rise to equivalence classes for the first argu-
ment of R. For a particular pair (a,b) we can always
find a y as defined in (8).
(8) a E [y] 4-+x›-y A x&gt;a A —ty&gt;a A y&gt; b
Definable relations are never empty. Barriers are pre-
served in the upward direction of the ancestor line:
(9) [y] Ry
(10) x &gt; y A
(10) is less innocent than it looks. I give a revealing
binding example from Kamp and Reyle [1993].
</listItem>
<bodyText confidence="0.80260825">
If EC P=x [CP=y hei sees Mary ] and she
smiles] Johni is happy.
*[cP=T [CP=y Hei sees Mary] and Johni is
happy].
</bodyText>
<sectionHeader confidence="0.985688" genericHeader="method">
3 Barrier Definitions
</sectionHeader>
<subsectionHeader confidence="0.998769">
3.1 Adjunction
</subsectionHeader>
<bodyText confidence="0.999563">
Adjunction rules raise a problem for algebraic in-
vestigations of barriers theory (e.g. [Kracht, 1992]):
They insert material into a tree but do not cre-
ate new projections. Thus, adjunction rules imply
a distinction between projections and segment nodes
that correspond to graph-theoretical nodes. We shall
use Greek letters to refer to projection nodes and
Latin letters for segment nodes. The only way to
create projections covering more than one segment
is through adjunction. Since adjunction rules have
equivalent mother and daughter nodes, projections
are coherent in the sense that:
</bodyText>
<equation confidence="0.708178">
Va # Vbi , b2 : a &gt; bi a &gt; h
_ 2
</equation>
<bodyText confidence="0.999095875">
Chomsky [1986] defines projection dominance so that
a dominates 13 only if every segment of a domi-
nates (every segment of) #. In case this definition
is not empty, (1) guarantees a unique minimal seg-
ment amin of a. Thus, we can rephrase Chomsky&apos;s
definition in terms of segment nodes and get that a
dominates # just in case the minimal segment of a
dominates some segment of #.
</bodyText>
<equation confidence="0.480092">
(11) dominate(a,#) E a A bEf3A
minimal segment(a) A a&gt; b
</equation>
<bodyText confidence="0.9329336">
Likewise, Chomsky&apos;s definition of exclusion, viz that
a excludes f3 if no segment of a dominates (any seg-
ment of) (3, can be transformed to the equivalent
condition that a excludes # if the maximal segment
of a does not dominate a segment of #.
</bodyText>
<listItem confidence="0.6450955">
(12) exclude(a,#) 4-4aEa A b E A
maximal segment(a) A &gt; b
</listItem>
<bodyText confidence="0.99994925">
This way, we reduce projection dominance to seg-
ment dominance. In (13-15), conditions of segment
minimality or maximality are included where they
are appropriate by (11) and (12).
</bodyText>
<subsectionHeader confidence="0.99968">
3.2 Chomsky&apos;s Theory
</subsectionHeader>
<bodyText confidence="0.9955435">
Chomsky [1986, 14] gives the following two core def-
initions for barriers. We are not concerned about the
exact formulation of L-marking (for a definition see
[Chomsky, 1986, 24]).
</bodyText>
<listItem confidence="0.928055333333333">
(25) 7 is a blocking category for # if
7 is not L-marked and 7 dominates #.
(26) 7 is a barrier for (3 if (a) or (b):
a. -y immediately dominates b,
b a blocking category for fi;
b. 7 is a blocking category for 0, 7 0 IP.
</listItem>
<bodyText confidence="0.999512615384615">
We understand 7 in (25) and (26) to be
a maximal projection, and we understand
&amp;quot;immediately dominate&amp;quot; in (26a) to be a
relation between maximal projections (so
that 7 immediately dominates (5 in this
sense even if a nonmaximal projection in-
tervenes).
Formulation of these definitions in first order logic
yields (13-15). In order to obtain an open-ended
definition scheme the equivalence of the above defi-
nitions is held implicit: Barrier concepts are true if
they comply with a manifest definition (see also 22
and 23).
</bodyText>
<listItem confidence="0.534342">
(13) blocking category(c,b)
maximal projection(c)
</listItem>
<page confidence="0.793522">
444
</page>
<equation confidence="0.876346285714286">
L-marked(c)
minimal segment(c)
c&gt; b.
(14) barrier(c,b)
maximal projection(c)
minimal segment(c)
3d: blocking category(d,b) A
c&gt;dA
Ve : c&gt;e&gt;d--+
( maximal projection(e) A
minimal segment(e) ).
(15) barrier(c,b)
blocking category(c,b) A
IP(c).
</equation>
<bodyText confidence="0.9972184">
We regard unary predicates as local conditions (L)
and binary predicates as global concepts (B for &amp;quot;bar-
rier concept&amp;quot;). Abstracting over the particular predi-
cates involved we end up with the following definition
schemes (16 for 13 and 15, 17 for 14).
</bodyText>
<listItem confidence="0.81166325">
(16) B(c, b)
L(c) A
c&gt;b.
(17) B(c,b)
</listItem>
<equation confidence="0.71994975">
L(c) A
B(d, b) A
c&gt;dA
Ve :c&gt;e&gt;d -1(e).
</equation>
<bodyText confidence="0.999946625">
We call the existential subformula of (17) an inher-
itance clause I. The only global conditions in our
system are inheritance clauses and c&gt; b, a condition
that always holds for barrier concepts (see 5). We will
discuss in detail a way to derive inheritance clauses
on a rule to rule basis. For the sake of conciseness
we adopt the following abbreviation for inheritance
clauses.
</bodyText>
<equation confidence="0.8270455">
36 : B(d, A c&gt;d A Ve : c&gt; e&gt; d --+ -1(e)
I(c,b,B,L)
</equation>
<subsectionHeader confidence="0.995971">
3.3 Negative Inheritance Clauses
</subsectionHeader>
<bodyText confidence="0.998776">
It has interesting repercussions to incorporate a
scheme with a negated inheritance clause, viz. (18).
</bodyText>
<equation confidence="0.631425166666667">
(18) B(c, b)
L(c) A
c&gt;b A
-&apos;3d: B(d,b) A
c&gt;dA
Ve : c &gt; e &gt; d —+ -1(e).
</equation>
<bodyText confidence="0.99782525">
For illustration we discuss several applications for
negative inheritance clauses.
Chomsky [1986, 371 talks about IPs as inherent bar-
riers, this effect being restricted to the most deeply
embedded tensed IP. To capture this concept we once
again need a negative inheritance clause: An IP is
most deeply embedded if it does not dominate any
other IP.
</bodyText>
<figure confidence="0.9695215">
(20) barrier(7,#)
tensed IP(7) A
7&gt;/I A
-&apos;36: IP(5,13) A
7&gt;6.
IP(7,#) IP(7) A 7 &gt; )3.
</figure>
<bodyText confidence="0.993727318181818">
A feature of negative inheritance clauses that is de-
sirable in many cases is that they allow to cancel
barriers higher up in the tree. They can be used to
circumvent (24). Classical GB theory has had to re-
sort to a variety of tricks to account for discontinuous
domains. A case in point is the coherent infinitive
construction found in German and Dutch&apos;. A stan-
dard account is to reanalyse 0-structure into another
structure that lacks the annoying barrier-generating
nodes. Different submodules of the theory will work
on different structures. Consider the following exam-
ple.
dal3 [cP E/P PRO [vp [NP der Wagen] zu
reparieren]]] [v versucht] wurde
In this example V governs NP but not &amp;quot;PRO&amp;quot; even
though &amp;quot;PRO&amp;quot; intervenes between V and NP. CP
might be called a phantom barrier. Generally, a phan-
tom (like CP, IP above) is a barrier just in case it
does not dominate a non-phantom (VP above). Thus
CP shields &amp;quot;PRO&amp;quot; but remains open for government
of NP. This state of affairs can be caught in the
present framework by a negative inheritance clause.
</bodyText>
<equation confidence="0.985562666666667">
(21) barrier(7,#)
phantom(7) A
7&gt;/I A
: nonphantom(b ,P) A
7&gt;5-
nonphantom(7 J3) nonphantom(7) A 7 &gt; (3.
</equation>
<bodyText confidence="0.998083666666667">
Similar cases arise with negation. Again, the litera-
ture adopts different lines of argument to account for
the phenomenon. Kamp and Reyle [1993] handle the
binding case below with a rule of double negation
elimination, an operation that deletes structure.
*Either hei owns a Porsche or Johni hides
it.
Either hei does not own a Porsche or John,
hides it.
</bodyText>
<footnote confidence="0.600242">
1 Milner and Sternefeld [1991] propose to treat this
construction within the framework of barrier theory.
</footnote>
<page confidence="0.997432">
445
</page>
<bodyText confidence="0.999407285714286">
The examples below are drawn from Cinque [1990,
831. He uses a superscription convention to annotate
the scope of the negation and assumes an LF amalga-
mation process triggered by coindexing of this sort.
CP is no barrier anymore for LF-amalgamated el-
ements since they become wh-movable. We might
model amalgamation with the &amp;quot;nonphantom&amp;quot; clause
of (21). Then, this clause would have to hold true for
inherently wh-movable elements (bare quantifiers in
Cinque&apos;s analysis) as well.
*Molti amici, [cp ha invitato t, che io sap-
pia.
Molti amici, [cP [Negp non ha invitato t,
che io sappia.
</bodyText>
<subsectionHeader confidence="0.835216">
3.4 Properties of the Definition Schemes
</subsectionHeader>
<bodyText confidence="0.963087">
In this paragraph we further investigate properties
of the three definition schemes we are dealing with.
We summarize scheme (16) in (22). def is a variable
ranging over the given definitions.
(22) B(c, b) 4-■3def :L def(c) A c&gt;b
We can collapse all definitions def into a single defi-
nition with local condition K(c) VdefLdef(c). In
order to summarize the schemes (16-17) we intro-
duce vectors of definitions def of length n and corre-
sponding sequences of nodes of length n 1. xi is
fixed to c and xn+1 to b.
</bodyText>
<listItem confidence="0.758357">
(23) B(c, b) 3 def, : Vi {1, :
def(i)(xi) A Xi &gt;1i+1•
</listItem>
<bodyText confidence="0.952380266666667">
For definitions conforming to type (16-17) we can
show the following property: If we have found a son
y violating the relation R all descendants b of the
father x will be inaccessible to R.
(24) x y A aRx A --iaRy A x &gt; b
In a full-fledged definition scheme where (16-18)
are available (24) ceases to hold. In the example dis-
cussed above a does not govern y but does govern b.
a [cp.x [vp.y b
In pre-Barriers GB theory and most current com-
putational approaches only inherent barriers are al-
lowed (scheme 16) and the violating number of barri-
ers in axiom (4) is set to null. Note that under these
provisos, barriers theory shrinks to command theory:
(4&apos;) aRb 4-, a, b unconnected A
</bodyText>
<subsectionHeader confidence="0.350095">
Vc :K(c) A c&gt;b--,c&gt;a
</subsectionHeader>
<bodyText confidence="0.999870666666667">
The following constraint holds in this configuration:
A barrier as in (24) is not affected by the triggering
first argument.
</bodyText>
<listItem confidence="0.881031">
(25) x&gt;.-y A 3a: [aRx A -iaRy] A bRx -ibRy
</listItem>
<bodyText confidence="0.8672318">
Chomsky [1986, 11] discusses (25) at some length. In
his example (see below) &amp;quot;decide&amp;quot; =a does not govern
&amp;quot;PRO&amp;quot;, but &amp;quot;e&amp;quot; =b would. He shows that if either of
the mentioned requirements (n=0 and intrinsic bar-
riers) is not met the theorem is refuted.
(21) John decided [cp e [ip PRO to [vP
see the movie ]]]
If (16-18) are given then we can show the following
theorem: Brothers are equivalent when occurring as
a second argument of a BC-definable relation.
</bodyText>
<equation confidence="0.416958">
(26) a, bi unconnected A a, b2 unconnected A
bf ›- bi A bi &gt;- b2 (aHbi aRb2)
</equation>
<sectionHeader confidence="0.978814" genericHeader="method">
4 Localising the Global Constraints
</sectionHeader>
<bodyText confidence="0.999008666666667">
The next step is to localise the definitions (16-
18). For ease of reference we repeat the definition
schemes.
</bodyText>
<listItem confidence="0.973259">
(27) B(c,b) 4-, 3def : [Li(c) A c&gt; b]V
[Li(c) A 1(c,b, B, L2)] V
[Li (c) A c&gt;b A B,
</listItem>
<bodyText confidence="0.999927428571428">
We only take into account nodes c that separate a
from b in the sense that they sit on the ancestor line
of b but not on that of a (see also the restrictions
of 4 and 5). Theorem (28) specifies a connection be-
tween the inheritance clauses valid on a father node x
and those valid on the son y. Recall that inheritance
clauses are the only global conditions we consider.
</bodyText>
<listItem confidence="0.936976">
(28) x›-y A y&gt;b A -iy&gt; a
</listItem>
<equation confidence="0.620617">
(B(y, b) V (I(y, b, B, L) A -1(y))
1(x,b, B, L))
</equation>
<bodyText confidence="0.9998774">
In parsing, an unbounded dependency (formally, a
relation R) is triggered by a node n1 (e.g. because it
lacks a t9-role or cannot take up a 19-role assigned to
it) and successfully terminates when a correspond-
ing node n2 is found (that can supply the missing
t9-role or absorb a superfluous t9-role). When search-
ing, ancestor lines are either ascended or descended.
Accordingly we have to make a distinction between
the upward and downward state of dependency in-
formation.
</bodyText>
<page confidence="0.997599">
446
</page>
<subsectionHeader confidence="0.998407">
4.1 Upward States
</subsectionHeader>
<bodyText confidence="0.999585">
Upward states supply information about barrier
nodes encountered on the ancestor line below. They
are constructed when the second argument b of a
relation R has been found and the tree is being
searched for the first argument a. Formally, upward
states are sets (standing for conjunctions) associ-
ated with some node c and some dependency coming
from b.
</bodyText>
<equation confidence="0.914293">
(B,L) E UState(c,b) I(c,b,B,L)
</equation>
<bodyText confidence="0.986445125">
Any inheritance clause that can be derived at c on
the basis of the lower upward state and the rule
schemes (27-28) is included in c&apos;s upward state. If
a clause is not in the state, it cannot be inferred by
(16-18). Consequently, the negation of a missing
clause must hold. We assume a counter for c and b
to be increased and checked as defined by the theory
(computing the number n of passed barriers, see 4).
</bodyText>
<equation confidence="0.913978">
IncreaseCounter(c,b) &lt;-&gt; B(c,b)
</equation>
<bodyText confidence="0.999126">
We use the upward state to break off search as soon
as we can infer from the theory that an element
a cannot possibly be found in the rest of the tree.
Theorem (29) stands to express that as soon as we
have found a node y violating the definitions upward
search becomes obsolete.
</bodyText>
<listItem confidence="0.733746">
(29) -i[y]Rb A -,y&gt; a -+
</listItem>
<subsectionHeader confidence="0.99672">
4.2 Downward States
</subsectionHeader>
<bodyText confidence="0.979441322580645">
Downward states encode information about barrier
nodes encountered on the ancestor line above. They
are computed when the second argument b of a re-
lation R is being expected because a first argument
a has been discovered. Formally, downward states
are first order formulae associated with some node
c, some ancestor node c1 of c, and some dependency
leading to b. Atomic formulae of DState(c,c1,b) are
inheritance clauses I with respect to c and b.
formula E DState(c,ci ,b)
.4=&gt;
formula(c,b) IncreaseCounter(ci ,b)
The rule schemes (27-28) supply all sufficient
and necessary conditions for transfer of inheritance
clauses between nodes. Accordingly an atomic for-
mula in the upper downward state can be trans-
formed into a formula holding for the lower node c.
False formulae are discarded, while true formulae in-
crease the counter.
We use downward states to restrict the search space.
By (24) we can sometimes infer that search into
a subtree will be pointless. Negative inheritance
clauses, however, can only be checked when a can-
didate for b has been encountered. When the parser
descends paths while searching, it always assumes
that the current path will dominate b. For upward
states, in contrast, the ancestor line of b is fixed.
Only downward states scan trees. (26) shows that a
state will not change for brother nodes. So we only
have to store one downward state per rule (e.g. under
its mother node).
</bodyText>
<subsectionHeader confidence="0.998745">
4.3 Example
</subsectionHeader>
<bodyText confidence="0.983871263157895">
Consider the chain of &amp;quot;how&amp;quot; in the following example
how do [Ip. you [vp. t [vp remember
[cP ti*whY [ip Bill t behaved t 11111
In a left-to-right top-down parse, the first barrier to
be encountered would be IP* if it dominated either
a blocking category (BC) or no other tensed IP. VP*
is no BC or barrier since it does not dominate the
intermediate trace (it is not the minimal segment of
the VP node). CP is L-marked and hence a barrier
only if it dominates a BC. If &amp;quot;why&amp;quot; excludes a trace
in SpecCP, the BC IP occurs between CP and the
next trace. Due to the t9-role of &amp;quot;how&amp;quot;, government is
violated leading to an ungrammatical sentence. If an
intermediate trace is allowed, a new chain is started
and no BC occurs. IP refutes the hypothesis that IP*
is the deepest embedded tensed IP, and it turns out
to be this IP as soon as the variable is found. So
only one subjacency barrier occurs: The sentence is
grammatical.
</bodyText>
<sectionHeader confidence="0.999449" genericHeader="method">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999821863636364">
We have described a mechanism that handles global
constraints on long movement from a local basis. The
device has been derived from a logical formulation of
Chomsky&apos;s [1986] theory so that equivalence to this
theory is easily proved. We have sketched methods to
use the logic for early determination of ungrammat-
ical readings in a parser. In my thesis aSchiehlen,
1992)) the technique has been implemented in an
Earley parser that generates all readings in paral-
lel. In this system local conditions are couched into
feature terms. Feature clashes lead to creation and
abolition of dependencies modelling the GB notion
of failed feature assignment and last resource. The
barriers logic restricts rule choice for the predictor
(descending ancestor lines) and discards analyses in
the completer (ascending ancestor lines). Ongoing
work is centred around an application of the bar-
riers framework to the generation of semantic struc-
ture (Discourse Representation Structure). Kracht&apos;s
[1992] approach to analysing barriers theory is re-
lated to the one presented here. However, Kracht&apos;s
emphasis is not so much on parsing.
</bodyText>
<page confidence="0.995481">
447
</page>
<sectionHeader confidence="0.508109" genericHeader="method">
A Proofs
</sectionHeader>
<bodyText confidence="0.992213983606557">
Proof of (6) is trivial.
The theorem (7) is symmetric for al and az. Suppose
aiRb A -ia2Rb. az and b are unconnected. So there
exist ki barriers not dominating al (k1 &lt; n) and kz
barriers not dominating az (k2 &gt; n). Suppose c is a
barrier not dominating az but dominating al (there
are at least kz - ki &gt; 1 such barriers). c&gt; b and y&gt; b,
hence c and y are connected. But y&gt; c entails y&gt; a1.
If c&gt; y then either x &gt; c&gt; y or c&gt; x. But c&gt; x
implies c&gt; az.
To prove (9) note that all barriers for y dominate y
by (5). Hence they also dominate a E [91.
We now turn to (10). Take al E [x] and az E .
az and y are not connected. We show that if --,c&gt; az
and c&gt; b then &gt; al. Assume c&gt; b and c&gt; al.
Then x and c are connected both dominating b. We
know that -ix &gt; c&gt; al. Hence c&gt; x &gt;y. Suppose
yi is y&apos;s father. Then c&gt; x &gt;yj &gt;- y and equally
c&gt; x &gt; az. We obtain that {c I B(c, b) A --,c&gt;
al} J {c I B(c, b) A -&apos;c&gt; a2}. Hence -i[x]Rb.
We prove (24). Suppose c is a barrier for x. Then
by (23) there is a sequence of nodes x1 = c and
xn &gt;xn+i = x. But xn&gt; x &gt; b , so c is a barrier for b as
well, a and y are unconnected. Suppose c is a barrier
for y but not x. Then xi = c and xn &gt; xn+i = y. xn
and x are connected both dominating y. We know
that &gt; x„ &gt; y and -ix„ &gt; x else c would be a
barrier for x. Hence xn = x and we get xn = x &gt; b.
There are at least as many barriers for b as there are
for y, so -iaRb.
To prove (25) we adopt the argumentation of the
foregoing proof and infer that x is a barrier for y.
bRx shows that b, x are unconnected, hence -ix &gt; b
and -ibRy.
(26) follows if we prove B(c, b1) B(c, bz) by in-
duction. The theorem is symmetric. Assume a c
such that B(c, b1). Then either scheme (16) holds:
L(c) A c &gt; bi hence c &gt; bz. Or (17) and L(c) A ad:
B(d, bi) A c&gt;d A Ve :c&gt;e&gt;d---+ -,L(e). By
induction B(d, bz) as well. For the negative scheme
(18) we use symmetry to extend the implication
I(c, bi, B, L) I(c, bz, B, L) to an equivalence.
For (28) we give a proof by cases. Either B(y, b)
I(x, b, B, L). y is the barrier node d referred to in the
consequent. Or I(y, b, B, L) A -1(y) I(x, b, B, L).
We set the barrier node d of the first inheritance
clause equal to the one of the second. Does a node
e between x and d satisfy L? y does not, nor do
the nodes between y and d, and there is no node
between x and y. But y and e must be connected,
both dominating d. We show I(x, b, B, L) B(y, b) V
I(y, b, B, L). The barrier node d of the antecedent
clause and y are connected, both dominating b (see
5). d cannot sit between x and y. If d = y the first
disjunct holds. If y&gt; d we set d equal to the barrier
node of the second disjunct. No e between y and d
satisfies L.
We reduce (29) to (10). If a &gt; y&gt; b we make use of (6).
Otherwise let xi be the smallest node that dominates
both y and a and let x be such that xi x &gt; y. Then
by (10) -i[x]Rb, meaning -iaRb (see 8).
</bodyText>
<sectionHeader confidence="0.999414" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999029744186047">
[Chomsky, 19861 Noam Chomsky. Barriers. Linguis-
tic Inquiry Monograph 13, MIT Press, Cambridge,
Massachusetts, 1986.
[Cinque, 1990] Guglielmo Cinque. Types of A-
Dependencies. Linguistic Inquiry Monograph 17,
MIT Press, Cambridge, Massachusetts, 1990.
[Done and Eisele, 1991] Jochen Done and Andreas
Eisele. A Comprehensive Unification-Based Gram-
mar Formulism. Deliverable R3.1.B, DYANA —
ESPRIT Basic Research Action BR3175, 1991.
[Dorna, 1992] Michael Dorna. Erweiterung der
Constraint-Logiksprache CUF urn em n Typsystem.
Diplomarbeit Nr. 896, Institut fiir Informatik,
Universitat Stuttgart, 1992.
[Johnson, 1989] Mark Johnson. The Use of Knowl-
edge of Language. In Journal of Psycholinguistic
Research, 18(1), 1989.
[Kamp and Reyle, 1993]
Hans Kamp and Uwe Reyle. From Discourse to
Logic, Vol I. to appear: Kluwer, Dordrecht, 1993.
[Kracht, 1992] Marcus Kracht. The Theory of Syn-
tactic Domains. Logic Group Preprint Series
No. 75, Department of Philosophy, University of
Utrecht, February 1992.
[Kroch, 1989] Anthony S. Kroch. Asymmetries
in Long-Distance Extraction in a Tree-Adjoining
Grammar. In Mark Baltin and Anthony Kroch,
eds. Alternative Conceptions of Phrase Structure.
University of Chicago Press, Chicago, 1989.
[Muller and Sternefeld, 1991] Gereon Muller and
Wolfgang Sternefeld. Extraction, Lexical Varia-
tion, and the Theory of Barriers. Universitat Kon-
stanz, September 1991.
[Pollard and Sag, 1991] Carl Pollard and Ivan A.
Sag. Agreement, Binding and Control. draft, June
1991.
[Rizzi, 1990] Luigi Rizzi. Relativized Minimality.
Linguistic Inquiry Monograph 16, MIT Press,
Cambridge, Massachusetts, 1990.
[Schiehlen, 1992] Michael Schiehlen. GB-Parsing
am Beispiel der Barrierentheorie Studienarbeit
Nr- 1168, Institut fiir Informatik, Universitat
Stuttgart, 1992.
</reference>
<page confidence="0.997707">
448
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.953618">
<title confidence="0.999546">Localising Barriers Theory</title>
<author confidence="0.999822">Michael Schiehlen</author>
<affiliation confidence="0.999935">Institute for Computational Linguistics, University of Stuttgart,</affiliation>
<address confidence="0.994727">Azenbergstr. 12, W-7000 Stuttgart 1</address>
<email confidence="0.959121">E-mail:mike@adler.ims.uni-stuttgart.de</email>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Barriers</author>
</authors>
<title>Linguistic Inquiry Monograph 13,</title>
<date>1986</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, Massachusetts,</location>
<marker>Barriers, 1986</marker>
<rawString> [Chomsky, 19861 Noam Chomsky. Barriers. Linguistic Inquiry Monograph 13, MIT Press, Cambridge, Massachusetts, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Guglielmo Cinque</author>
</authors>
<title>Types of ADependencies.</title>
<date>1990</date>
<journal>Linguistic Inquiry Monograph</journal>
<volume>17</volume>
<publisher>MIT Press,</publisher>
<location>Cambridge, Massachusetts,</location>
<marker>[Cinque, 1990]</marker>
<rawString>Guglielmo Cinque. Types of ADependencies. Linguistic Inquiry Monograph 17, MIT Press, Cambridge, Massachusetts, 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jochen Done</author>
<author>Andreas Eisele</author>
</authors>
<title>A Comprehensive Unification-Based Grammar Formulism. Deliverable</title>
<date>1991</date>
<booktitle>R3.1.B, DYANA — ESPRIT Basic Research Action BR3175,</booktitle>
<marker>[Done and Eisele, 1991]</marker>
<rawString>Jochen Done and Andreas Eisele. A Comprehensive Unification-Based Grammar Formulism. Deliverable R3.1.B, DYANA — ESPRIT Basic Research Action BR3175, 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Dorna</author>
</authors>
<title>Erweiterung der Constraint-Logiksprache CUF urn em n Typsystem. Diplomarbeit Nr.</title>
<date>1992</date>
<tech>896,</tech>
<institution>Institut fiir Informatik, Universitat Stuttgart,</institution>
<marker>[Dorna, 1992]</marker>
<rawString>Michael Dorna. Erweiterung der Constraint-Logiksprache CUF urn em n Typsystem. Diplomarbeit Nr. 896, Institut fiir Informatik, Universitat Stuttgart, 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Johnson</author>
</authors>
<title>The Use of Knowledge of Language.</title>
<date>1989</date>
<journal>In Journal of Psycholinguistic Research,</journal>
<volume>18</volume>
<issue>1</issue>
<marker>[Johnson, 1989]</marker>
<rawString>Mark Johnson. The Use of Knowledge of Language. In Journal of Psycholinguistic Research, 18(1), 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans Kamp</author>
<author>Uwe Reyle</author>
</authors>
<title>From Discourse to Logic, Vol I. to appear: Kluwer,</title>
<date>1993</date>
<location>Dordrecht,</location>
<marker>[Kamp and Reyle, 1993]</marker>
<rawString> Hans Kamp and Uwe Reyle. From Discourse to Logic, Vol I. to appear: Kluwer, Dordrecht, 1993.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marcus Kracht</author>
</authors>
<title>The Theory of Syntactic Domains. Logic Group</title>
<date>1992</date>
<tech>Preprint Series No. 75,</tech>
<institution>Department of Philosophy, University of Utrecht,</institution>
<marker>[Kracht, 1992]</marker>
<rawString>Marcus Kracht. The Theory of Syntactic Domains. Logic Group Preprint Series No. 75, Department of Philosophy, University of Utrecht, February 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anthony S Kroch</author>
</authors>
<title>Asymmetries in Long-Distance Extraction in a Tree-Adjoining Grammar.</title>
<date>1989</date>
<booktitle>In Mark Baltin and Anthony Kroch, eds. Alternative Conceptions of Phrase Structure.</booktitle>
<publisher>University of Chicago Press,</publisher>
<location>Chicago,</location>
<marker>[Kroch, 1989]</marker>
<rawString>Anthony S. Kroch. Asymmetries in Long-Distance Extraction in a Tree-Adjoining Grammar. In Mark Baltin and Anthony Kroch, eds. Alternative Conceptions of Phrase Structure. University of Chicago Press, Chicago, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gereon Muller</author>
<author>Wolfgang Sternefeld</author>
</authors>
<title>Extraction, Lexical Variation, and the Theory of Barriers. Universitat</title>
<date>1991</date>
<location>Konstanz,</location>
<marker>[Muller and Sternefeld, 1991]</marker>
<rawString>Gereon Muller and Wolfgang Sternefeld. Extraction, Lexical Variation, and the Theory of Barriers. Universitat Konstanz, September 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Binding Agreement</author>
<author>Control draft</author>
</authors>
<date>1991</date>
<marker>[Pollard and Sag, 1991]</marker>
<rawString>Carl Pollard and Ivan A. Sag. Agreement, Binding and Control. draft, June 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Luigi Rizzi</author>
</authors>
<title>Relativized Minimality. Linguistic Inquiry Monograph 16,</title>
<date>1990</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, Massachusetts,</location>
<marker>[Rizzi, 1990]</marker>
<rawString>Luigi Rizzi. Relativized Minimality. Linguistic Inquiry Monograph 16, MIT Press, Cambridge, Massachusetts, 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Schiehlen</author>
</authors>
<title>GB-Parsing am Beispiel der Barrierentheorie Studienarbeit Nr- 1168, Institut fiir Informatik,</title>
<date>1992</date>
<location>Universitat Stuttgart,</location>
<marker>[Schiehlen, 1992]</marker>
<rawString>Michael Schiehlen. GB-Parsing am Beispiel der Barrierentheorie Studienarbeit Nr- 1168, Institut fiir Informatik, Universitat Stuttgart, 1992.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>