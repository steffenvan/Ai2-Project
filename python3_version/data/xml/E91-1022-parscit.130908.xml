<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000001">
<title confidence="0.702789">
Generating Sentences from Different Perspectives
</title>
<author confidence="0.859312">
Lee Fedder,
</author>
<affiliation confidence="0.942961">
The Computer Laboratory,
University of Cambridge,
</affiliation>
<address confidence="0.689064666666667">
Pembroke Street,
Cambridge CB2 3QC, England.
lffluk.ac.cam.c1
</address>
<keyword confidence="0.810096">
Keywords: Generation, Natural Language interfaces.
</keyword>
<sectionHeader confidence="0.992991" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9994914">
Certain pairs or groups of sentences appear to
be semantically distinct, yet specify the same
underlying state of affairs, from different per-
spectives. This leads to questions about what
that underlying state of affairs might be, and,
for generation, how and why the alternative ex-
pressions might be produced. This paper looks
at how such sentences may be generated in a
Natural Language interface to a database sys-
tem.
</bodyText>
<sectionHeader confidence="0.961544" genericHeader="introduction">
Introduction
</sectionHeader>
<bodyText confidence="0.992703055555556">
The following sentences would have a different
semantics if parsed, yet they seem to specify the
same state of affairs at some level of represen-
tation.
la. I can stay until 5.
lb. I must leave by 5.
For generation, we ought to be able to pro-
duce either. McDonald comments on these sen-
tences :-
&amp;quot;What mutually known cognitive structure
do we recognise from them that would show
them to be two sides of the same coin?&amp;quot;
(McDonald 1988)
This paper describes a language generation
system which is designed as the output com-
ponent of a database interface, and is capa-
ble of producing similar synonymous sentences.
The architecture relies on a two level semantic
representation: one describes data in the sys-
tem&apos;s application database, and plays the role of
McDonald&apos;s &amp;quot;mutually known cognitive struc-
ture&amp;quot;; the other describes the semantics of sen-
tences of Natural Language, and the primitives
correspond to specific entries in the lexicon. In-
formation to be communicated is initially ex-
pressed in the application level semantics, and
is be mapped to the language level semantics
as part of the generation process. Alternatives
similar to la and lb arise during this mapping,
and represent a complexity inherent in language
which did not exist in the original data:- they
are a property of the description.
Application level information is described
by linking it with an event or state (from now
on the term &amp;quot;event&amp;quot; will cover both these), for
which it provides some parameter. Thus, the
origin of a flight could be described by saying
that the plane &amp;quot;flies from&amp;quot; the origin. The map-
ping process exploits a &amp;quot;domain model&amp;quot; which
has two parts. The first lays out how non-
temporal information is related to domain events.
The second describes the temporal character-
istics these events using an ontology which is
rich enough to capture the temporal semantics
of English expressions. Temporal information
- 125 -
from the application is described by first ex-
pressing it in a way that relates it to times in
the model, and by then attempting to add it to
the description of the event which is currently
active. The alternatives arise when more than
one event can be used.
The temporal ontology is based on a re-
cent theory of temporal semantics developed
by Moens and Steedman (1988). This allows
a modular representation of the semantics of
temporal adverbials like &amp;quot;until&amp;quot; and &amp;quot;by&amp;quot;, and
also aids in the generation of tense and aspect.
This system looks at the mechanics of how
the alternatives can be generated from the ini-
tial data, but we will have less to say about
choosing between them. Some simple choice cri-
teria are presented, although these do not prop-
erly address the issue of what perspective is and
how it can be quantified and used. We point to
proposals from McDonald (1991) which seem
more promising on this front.
In rnore general terms, this work addresses
just one of the many issues involved in map-
ping between Natural Language descriptions of
data and the more restricted representation an
application database affords.
</bodyText>
<subsectionHeader confidence="0.525272">
Overview
</subsectionHeader>
<bodyText confidence="0.999992285714286">
The generation system has been designed as the
output stage of an airline information system.
The application database holds timetabling data
such as plane origins and destinations, depar-
ture and arrival times and so on. Input to
the generator is a semantic form compiled from
database relations. For example :-
</bodyText>
<equation confidence="0.682704">
DEST(BA123,ROME)AARR-TIME(BA123,2PM)
</equation>
<bodyText confidence="0.9464028">
This is an expression of the application level
semantics, and states that the destination of
flight BA123 is Rome, and that the arrival time
is 2 p.m. One of the possible surface level se-
mantic descriptions of this would be is :-
arrive(BA123,E)Ain(E,ROME)Aat(E,2PM)
be handed to a grammatical encoder for pro-
duction of the surface form. The final sentence
for this example would be :-
BA123 arrived in Rome at 2 p.m.
In this example, the input data has been
described as a point event occurring at a given
time. As we will see, other descriptions could
view it in other ways, such as a state ending at
that time, or as a state beginning at that time.
</bodyText>
<subsectionHeader confidence="0.659672">
The Domain Model
</subsectionHeader>
<bodyText confidence="0.9670831">
So, database relations may be described by find-
ing events in a model of the domain to which
they correspond. This assumes, of course, that
the hearer has a similar model of the domain.
Figure 1 (overleaf) shows the model for an air-
plane flight, giving the various events and states.
It shows an agent, A, flying from an origin 0, to
a destination at D. The state which can be de-
scribed as &amp;quot;A be at 0&amp;quot; or &amp;quot;A not leave 0&amp;quot; leads
on to an event of &amp;quot;A leave 0&amp;quot; which initiates
a state described as &amp;quot;A not arrive at D&amp;quot;, and
so on. The causal relations between the events
are included in the model, and used in the gen-
eration of tense and aspect, but their use is not
described in this paper.
The model is represented declaratively in a
Prolog style database. For each event there are
two sorts of entry. The first sort record how
non-temporal input-data can be translated to
event based logical forms. These entries link up
the data parameters with the case roles of the
event. For example :-
trans(0E,0Input-sem,0Ling-sem)
The &amp;quot;0&amp;quot; is used here to denote a variable.
The first argument is the event index, the sec-
ond is the semantic form of the input data, and
the third is the language level semantics de-
scribing the event. An example is :-
trans(e5,DEST(0A,0D),arrive(e5,0A)Aat(e5,00))
Once the information is in this form, it can
</bodyText>
<equation confidence="0.769779222222222">
- 126 -
Figure 1 - Domain Model for a Flight
X leave A X arrive at B
X fly from A to B
TTM
X be at A
X not leave A
X not arrive at B
X be at B
</equation>
<bodyText confidence="0.974857928571429">
The language level event here is that of &amp;quot;ar-
riving&amp;quot;, and is recorded using a Davidsonian
style semantics (Davidson 1967).
The second sort of entry records the tempo-
ral characteristics of the event, using a temporal
calculus developed by Moens (1987), and based
on Kowalski&apos;s event logic (1986). Each event
is classified according to its temporal charac-
teristics, and entries in the calculus are made
accordingly. The &amp;quot;arrive&amp;quot; event is classified as
a culmination type of event, for which, the en-
try is :-
occur(cul(e5),T6)
This characterises the event e5 as a punctual
event represented by the single marker &amp;quot;cul(e5)&amp;quot;
which occurs at the time T6. The model is a
prototypical one for the events of the domain,
and actual times are unknown. Instead, tempo-
ral information is recorded using temporal in-
dices, of which &amp;quot;T6&amp;quot; is an example. A process
such as &amp;quot;fly&amp;quot; is represented by two entries, one
for the start point, and one for the end.
The model includes a record of the relative
times of the indices, and actual times may be
included if they become known. The model also
includes causal relations between events, which
can be used in the generation of tense and as-
pect. This model has been identified by Moens
as capable of capturing the semantics of English
temporal expressions more fully than other for-
malisms, such McCarthy and Hayes (1969), or
Allen (1984).
Semantics of Temporal Adver-
bials
With this sort of model, the semantics of adver-
bials may be defined in modular fashion, For in-
stance, &amp;quot;until&amp;quot; is defined as describing the time
at the end of a process type of event. So, if a
process such as &amp;quot;Jim ran&amp;quot; ends at the time &amp;quot;2
p.m.&amp;quot;, this would be described as &amp;quot;Jim ran until
2 p.m.&amp;quot;. Similar interpretations may be defined
for &amp;quot;for&amp;quot;, &amp;quot;in&amp;quot;, &amp;quot;since&amp;quot;, &amp;quot;by&amp;quot;, &amp;quot;later&amp;quot; and soon.
</bodyText>
<subsectionHeader confidence="0.79554">
An Example
</subsectionHeader>
<bodyText confidence="0.956994">
An example will show how several different de-
scriptions of the same initial data may be pro-
- 127 -
duced using this machinery. Beginning with the
input data structure shown previously in the
overview, the first step is to split it into tempo-
ral and non-temporal data, which is done with
a simple set of rewriting rules :-
</bodyText>
<equation confidence="0.4696215">
Temp Data - ARR-TIME(BA123,2PM)
Other Data - DEST(BA123,ROME)
</equation>
<bodyText confidence="0.9860535">
This is mapped onto the model by attaching
the temporal data to one (or more if necessary)
of the temporal indices, and by inserting the
non-temporal data into a &amp;quot;trans&amp;quot; predicate :-
</bodyText>
<equation confidence="0.910012">
Temp Data - .(T6,2PM)
Other Data - trans(0E,DEST(BA123,ROME),
©Ling-sem)
</equation>
<bodyText confidence="0.993436625">
A duration, such as the flight time could be
attached to two indices using &amp;quot;span(T5,T6,Flight-
time)&amp;quot; .
Instantiating the &amp;quot;trans&amp;quot; predicate in the
model picks out an event that describes the
data. Backtracking allows all possibilities to be
produced. In the current model, this picks out
four events, giving the linguistic semantics :-
</bodyText>
<equation confidence="0.99144275">
fiy(e3,BA123) A to(e3,ROME)
not(arrive(e4,BA123) A at(e4,ROME))
arrive(e5,BA123) A at(e5,ROME)
be(e6,BA123) A at(e6,ROME)
</equation>
<bodyText confidence="0.994489545454545">
Of these, e3 is characterised as a culminat-
ing process (like a process, but with a definite
end point) ending at T6, e4 is a state ending at
T6, e5 is a culmination occurring at T6, and e6
is a state beginning at T6.
Next, we must describe the temporal data
&amp;quot;.(T6,2PM)&amp;quot;. A set of rules looks at the event
characteristics, and the data to be expressed,
to see which adverb is appropriate. For e4, the
&amp;quot;until&amp;quot; adverb is chosen, and added to the se-
mantic form to give :-
</bodyText>
<equation confidence="0.9709">
not(arrive(e4,BA123) A at(e4,ROME))
A until(e4,2PM)
</equation>
<bodyText confidence="0.892164875">
Similarly, for e5, the adverbs &amp;quot;at&amp;quot; or &amp;quot;by&amp;quot;
can be used, and for e6 &amp;quot;by&amp;quot; or &amp;quot;since&amp;quot;. That
&amp;quot;since&amp;quot; is only used if conditions for the perfect
also hold. Insufficient space prevents discussion
of the details here. No adverb is available to
describe the end time of a culminating process,
and so no phrase can be built using e3.
The successful cases could eventually be re-
alised as :-
2a. BA123 didn&apos;t arrive at Rome until 2 p.m.
2b. BA123 arrived at Rome at 2 p.m.
2c. BA123 arrived at Rome by 2 p.m.
2d. BA123 was at Rome by 2 p.m.
If conditions for using the perfect held, the
last of these could be replaced by :-
2e. BA123 has been at Rome since 2 p.m.
</bodyText>
<subsectionHeader confidence="0.3653925">
Choosing Between The Alter-
natives
</subsectionHeader>
<bodyText confidence="0.894901833333333">
For the question answering system, several cri-
teria are being investigated for choosing between
the alternatives. The first is a simple mirroring
of the phrasing of the question, the syntactic
and semantic analysis of the question being re-
tained in the discourse model. For example :-
</bodyText>
<listItem confidence="0.998009">
3a. User: When will BA123 be at Rome?
3b. System: It will be at Rome by 2 p.m.
</listItem>
<bodyText confidence="0.9999065">
The main verb of the question is &amp;quot;be&amp;quot; with
a subject of &amp;quot;BA123&amp;quot;. One of the possible de-
scriptions uses the same verb and subject (al-
beit pronominalised), and would be the chosen
alternative. This criteria is used when the gen-
erated sentence is simply supplying new infor-
mation which the user has requested.
A second criteria seems to be useful when
the answer violates a presupposition detected
in the query. For example, take the question :-
</bodyText>
<listItem confidence="0.577957">
- 128 -
4a. User: Will BA123 be at Rome by noon?
</listItem>
<bodyText confidence="0.73890775">
This includes the presupposition that BA123
arrives at noon. If it doesn&apos;t, the best form
for the answer seems to depend on the actual
time of arrival.
</bodyText>
<listItem confidence="0.998443333333333">
4b. System: No, it doesn&apos;t arrive here until
2 p.m.
4c. System: No, it will be here by 11 a.m.
</listItem>
<bodyText confidence="0.991944416666667">
Construction 4b would be chosen if the pre-
supposed time lay before the arrival time, and
thus within the timespan covered by the state
&amp;quot;not arrive&amp;quot;. On the other hand, construction
4c would be chosen if the pre-supposed time
lay after the actual time, placing it within the
timespan covered by the state &amp;quot;be at Rome&amp;quot;.
Finally, the alternatives could be useful to
promote cohesion in multi sentence explanations
of the following sort :-
5a. BA123 won&apos;t be here until noon. It was
delayed at Paris.
5b. BA123 arrives at noon. It will taxi to Ter-
minal 3.
The second sentence is an explanation or
elaboration of the first. In the first example,
the explanation refers to an event located in
the time period before the arrival, and in the
second, it is more closely associated with the
arrival time. The description of the arrival time
is chosen to reflect this.
Related work and Discussion
In a description of the process of language given
by Levelt (1989), a module called &amp;quot;micro-planning&amp;quot;
is included. This module comes after the con-
tent of the output has been decided on, and
before grammatical encoding. Micro-planning
consists of choosing the language related seman-
tic primitives used for describing a data struc-
ture which is not linguistically based. Levelt
notes that, because of the nature of language,
this process will be forced to make choices of
perspective. Much work on generation has as-
sumed that the input semantic form is already
in some sort of &amp;quot;languagese&amp;quot; (see, for example
McDonald 1983, McKeown 1985), but the pro-
cessing described in this paper would be part of
the micro-planner.
There are several precedents for the use of
two level semantic descriptions for generation.
The first, perhaps, was HAM-ANS (Wahlster
1983),in which the generator translated from
the language DEEP to the language SURF. More
recently there has been the TENDUM system
(Bunt 1987), using the model theoretic logical
languages EL/F and EL/R, and others (Kem-
pen 1987, De Roeck 1986). These systems trans-
lated between the levels, but did not address the
issues of alternative mappings.
However, this question has been investigated
by McDonald (1991). He has proposed a solu-
tion in which the data structures of the appli-
cation program (a diary manager) are based on
primitives such as &amp;quot;transition-at-4PM&amp;quot;. These
primitives are then linked to sets of lexemes
such as [stay,until] and [leave,ati. One of these
sets is selected and included in evolving text
structure. This doesn&apos;t seem to take account
of the nature of the the events described by
&amp;quot;leave&amp;quot; and &amp;quot;stay&amp;quot;, or the temporal semantics
involved in using adverbials like &amp;quot;at&amp;quot; and &amp;quot;un-
til&amp;quot;.
McDonald does, however, address the im-
portant issue of the criteria for choosing be-
tween alternatives. The choice of perspective is
intimately bound up with the reasoning of the
manager, which can use knowledge about inten-
tions and surrounding events to decide which
version of the description is the most appropri-
ate. This sort of approach seems to be neces-
sary for the development of more comprehensive
choice criteria.
</bodyText>
<sectionHeader confidence="0.938861" genericHeader="conclusions">
Conclusion
</sectionHeader>
<bodyText confidence="0.999965666666667">
This paper describes a generation system which
is capable of generating A range of Natural Lan-
guage descriptions of the output of a database
enquiry program. The system uses a two level
model of semantics. The possibility of alterna-
tive descriptions arises from the mapping be-
</bodyText>
<page confidence="0.904705">
129 •
</page>
<bodyText confidence="0.998223333333333">
tween the two levels. Some simple criteria are
used to choose the alternative which fits best
into the dialogue context.
</bodyText>
<sectionHeader confidence="0.992733" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.553278428571429">
The author is supported by the Science and En-
gineering Research Council, and by Logica UK.
I would like to thanks the many colleagues who
have provided support and encouragement, es-
pecially Steve Pulman, Julia Galliers, Richard
Crouch, Ann Copestake, Nick Youd, Victor Poz-
nanski, Arnold Smith and Derek Bridge.
</bodyText>
<sectionHeader confidence="0.983487" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.994112693877551">
[1] Allen, J. 1984. Towards a general theory of
action and time. Artificial Intelligence , 23,
123-154.
[2] Bunt, H. 1987. Utterance generation from
semantic representations augmented with
pragmatic information. In Natural Language
Generation, by G. Kempen (Ed.), Martinus
Nijhoff.
[3] Davidson, D. 1967. The logical form of ac-
tion sentences. In Rescher, N. (ed.). The logic
of Decision and Action. University of Pitts-
burgh press.
[4] De Roeck, A., and B. Lowden. 1986. Gen-
erating English paraphrases from formal re-
lational calculus expressions. Coling proceed-
ings.
[5] Levelt, W. 1989. Speaking. MIT press.
[6] McCarthy, J. and Hayes, P. J. 1969. Some
philosophical problems from the standpoint
of artificial intelligence. In Meltzer, B. and
Michie, D. (eds.) Machine Intelligence, Vol-
ume 4, pp463-502. Edinburgh University
Press.
[7] McDonald, David D. 1983. Natural Lan-
guage Generation as a Computational Prob-
lem: an Introduction. In Computational
Models of Discourse. Brady and Berwick
(Ed).
[8] McDonald, D. 1988. On the place of words
in the generation process. Abstract presented
to the Catalina workshop on generation.
[9] McDonald, D. 1991. On the place of words
in the generation process. In Natural Lan-
guage Generation in Artificial Intelligence
and Computational Linguistics, by C. Paris,
W. Swartout, and W. Mann (Eds.) Kluwer,
Dordrecht.
[10] McKeown, K. 1985. Text generation. Cam-
bridge University Press.
[11] Moens, M. Tense, Aspect and Temporal
Reference. PhD thesis, Centre for Cognitive
Science, Edinburgh University.
[12] Moens, M. and Steedman M. 1988. Tem-
poral ontology and temporal reference. Com-
putational Linguistics, Vol. 14 No. 2.
[13] Wahlster, Jameson, thiseman and Mar-
burger. 1983. Over-Answering yes-no ques-
tions. IJCAI, Karlsruhe.
- 130 -
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.314827">
<title confidence="0.999866">Generating Sentences from Different Perspectives</title>
<author confidence="0.99994">Lee Fedder</author>
<affiliation confidence="0.9999885">The Computer Laboratory, University of Cambridge,</affiliation>
<address confidence="0.86983">Pembroke Street, Cambridge CB2 3QC, England.</address>
<email confidence="0.542694">lffluk.ac.cam.c1</email>
<keyword confidence="0.999474">Keywords: Generation, Natural Language interfaces.</keyword>
<abstract confidence="0.979910181818182">pairs or of sentences appear to be semantically distinct, yet specify the same underlying state of affairs, from different perspectives. This leads to questions about what that underlying state of affairs might be, and, for generation, how and why the alternative expressions might be produced. This paper looks at how such sentences may be generated in a Natural Language interface to a database system.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Allen</author>
</authors>
<title>Towards a general theory of action and time.</title>
<date>1984</date>
<journal>Artificial Intelligence ,</journal>
<volume>23</volume>
<pages>123--154</pages>
<marker>[1]</marker>
<rawString>Allen, J. 1984. Towards a general theory of action and time. Artificial Intelligence , 23, 123-154.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Bunt</author>
</authors>
<title>Utterance generation from semantic representations augmented with pragmatic information.</title>
<date>1987</date>
<journal>In Natural Language Generation, by G. Kempen (Ed.), Martinus Nijhoff.</journal>
<marker>[2]</marker>
<rawString>Bunt, H. 1987. Utterance generation from semantic representations augmented with pragmatic information. In Natural Language Generation, by G. Kempen (Ed.), Martinus Nijhoff.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Davidson</author>
</authors>
<title>The logical form of action sentences.</title>
<date>1967</date>
<booktitle>The logic of Decision and Action.</booktitle>
<editor>In Rescher, N. (ed.).</editor>
<publisher>University of Pittsburgh press.</publisher>
<marker>[3]</marker>
<rawString>Davidson, D. 1967. The logical form of action sentences. In Rescher, N. (ed.). The logic of Decision and Action. University of Pittsburgh press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A De Roeck</author>
<author>B Lowden</author>
</authors>
<title>Generating English paraphrases from formal relational calculus expressions. Coling proceedings.</title>
<date>1986</date>
<marker>[4]</marker>
<rawString>De Roeck, A., and B. Lowden. 1986. Generating English paraphrases from formal relational calculus expressions. Coling proceedings.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Levelt</author>
</authors>
<date>1989</date>
<publisher>Speaking. MIT press.</publisher>
<marker>[5]</marker>
<rawString>Levelt, W. 1989. Speaking. MIT press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J McCarthy</author>
<author>P J Hayes</author>
</authors>
<title>Some philosophical problems from the standpoint of artificial intelligence.</title>
<date>1969</date>
<booktitle>Machine Intelligence,</booktitle>
<volume>4</volume>
<pages>463--502</pages>
<editor>In Meltzer, B. and Michie, D. (eds.)</editor>
<publisher>Edinburgh University Press.</publisher>
<marker>[6]</marker>
<rawString>McCarthy, J. and Hayes, P. J. 1969. Some philosophical problems from the standpoint of artificial intelligence. In Meltzer, B. and Michie, D. (eds.) Machine Intelligence, Volume 4, pp463-502. Edinburgh University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David D McDonald</author>
</authors>
<title>Natural Language Generation as a Computational Problem: an Introduction.</title>
<date>1983</date>
<booktitle>In Computational Models of Discourse. Brady and</booktitle>
<marker>[7]</marker>
<rawString>McDonald, David D. 1983. Natural Language Generation as a Computational Problem: an Introduction. In Computational Models of Discourse. Brady and Berwick (Ed).</rawString>
</citation>
<citation valid="true">
<authors>
<author>D McDonald</author>
</authors>
<title>On the place of words in the generation process. Abstract presented to the Catalina workshop on generation.</title>
<date>1988</date>
<marker>[8]</marker>
<rawString>McDonald, D. 1988. On the place of words in the generation process. Abstract presented to the Catalina workshop on generation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D McDonald</author>
</authors>
<title>On the place of words in the generation process.</title>
<date>1991</date>
<booktitle>In Natural Language Generation in Artificial Intelligence and Computational Linguistics, by</booktitle>
<publisher>(Eds.) Kluwer,</publisher>
<location>Dordrecht.</location>
<marker>[9]</marker>
<rawString>McDonald, D. 1991. On the place of words in the generation process. In Natural Language Generation in Artificial Intelligence and Computational Linguistics, by C. Paris, W. Swartout, and W. Mann (Eds.) Kluwer, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K McKeown</author>
</authors>
<title>Text generation.</title>
<date>1985</date>
<publisher>Cambridge University Press.</publisher>
<marker>[10]</marker>
<rawString>McKeown, K. 1985. Text generation. Cambridge University Press.</rawString>
</citation>
<citation valid="false">
<authors>
<author>M Tense Moens</author>
</authors>
<title>Aspect and Temporal Reference.</title>
<tech>PhD thesis,</tech>
<institution>Centre for Cognitive Science, Edinburgh University.</institution>
<marker>[11]</marker>
<rawString>Moens, M. Tense, Aspect and Temporal Reference. PhD thesis, Centre for Cognitive Science, Edinburgh University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Moens</author>
<author>M Steedman</author>
</authors>
<title>Temporal ontology and temporal reference.</title>
<date>1988</date>
<journal>Computational Linguistics,</journal>
<volume>14</volume>
<marker>[12]</marker>
<rawString>Moens, M. and Steedman M. 1988. Temporal ontology and temporal reference. Computational Linguistics, Vol. 14 No. 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jameson Wahlster</author>
<author>thiseman</author>
<author>Marburger</author>
</authors>
<title>Over-Answering yes-no questions.</title>
<date>1983</date>
<journal>IJCAI, Karlsruhe. -</journal>
<pages>130</pages>
<marker>[13]</marker>
<rawString>Wahlster, Jameson, thiseman and Marburger. 1983. Over-Answering yes-no questions. IJCAI, Karlsruhe. - 130 -</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>