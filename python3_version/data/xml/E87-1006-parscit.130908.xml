<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<sectionHeader confidence="0.472077142857143" genericHeader="method">
A GENERATIVE GRAMMAR APPROACH FOR THE MORPHOLOGIC AND
MORPHOSYNTACTIC ANALYSIS OF ITALIAN
Marina Russo
IBM Rome Scientific Center
via del Giorgionc, 129
00147 Rome Italy
ABSTRACT
</sectionHeader>
<bodyText confidence="0.999879">
A morphologic and morphosyntactic analyzer for the Italian
language has been implemented in VM/Prolog 131 at the IBM Rome
Scientific Center as part of a project on text understanding.
Aim of this project is the development of a prototype which
analyzes short narrative texts (press agency news) and gives a formal
representation of their &apos;meaning&amp;quot; as a set of first order logic
expressions. Question answering features are also provided.
The morphologic analyzer processes every word by means of a
context free grammar, in order to obtain its morphologic and
syntactic characteristics.
It also performs a morphosyntactic analysis to recognize fixed
and variable sequences of words such as idioms, date expressions,
compound tenses of verbs and comparative and superlative forms of
adjectives.
The lexicon is stored in a relational data base under the control
of SQL/DS 121, while the endings of the grammar are stored in the
workspace as Prolog facts.
A friendly interface written in GDDM 111 allows the user to
introduce on line the missing lemmata, in order to directly update the
dictionary.
</bodyText>
<sectionHeader confidence="0.961427" genericHeader="method">
Introduction
</sectionHeader>
<bodyText confidence="0.999881636363636">
About thirty years ago, the development of decripting tecniques
made computer scientists be involved for the first time in the field of
Linguistics, especially in automatic translation matters.
The failure of most of these projects contributed to a general
sensibilization towards natural language problems, and gave rise to a
variety of formal theories for their treatment.
In the last few years, one of the main research objectives became
the design of systems able to acquire knowledge directly from texts.
using natural language as an interface between man and machine.
At the IBM Rome Scientific Center a system has been developed
for processing Italian texts. The task of the system is to
</bodyText>
<listItem confidence="0.997678833333333">
• analyze short narrative texts (press agency news) on a restricted
domain (Economics and Finance),
• give the formal representation of their &apos;meaning&amp;quot; as a set of first
order logic expressions, stored in a knowledge base,
• consult this knowledge base in order to answer any question
about the contents of analyzed texts.
</listItem>
<bodyText confidence="0.553647">
The system consists of:
</bodyText>
<listItem confidence="0.811885526315789">
• a morphologic analyzer based on a context-free logic grammar
with the &apos;&apos;word&amp;quot; as axiom and its possible components as
terminal nodes. It includes a lexicon_ of about 7000 elementary
lemmata, structured in a table of a relational data base under the
control of SQL/DS.
• a morphosyntactic analyzer realized by three regular grammars,
recognizing respectively compound tenses of verbs (e.g. has been
signed), comparative and superlative forms of adjectives (e.g. the
most interesting) and compound numbers (e.g. three billions 564
millions 234,000). This module reduces the number of possible
syntactic relations among the words of the sentence in order to
simplify the task of the syntax.
• a syntactic parser developed by means of a meta-analyzer 161
which allows to write production rules for attribute grammars,
and generates from these the corresponding top-down parser. A
grammar has been written to describe the fragment of Italian
considered.
• a semantic processor based on the Conceptual Graphs formalism
1101 and provided with a semantic dictionary containing at
</listItem>
<bodyText confidence="0.999871771428571">
present about 350 concepts. Its task is to solve syntactic
ambiguities and recognize semantic relations between the words
of the sentence 191.
This paper deals in particular with the structure of the lexicon
adopted in the system and with the morhologic and morhosyntactic
analyzer.
In this system the morphology and the lexicon arc strictly
combined; for this reason this lexicon does not contain semantic
information. In the approach of Alinei 14 on the contrary, lexicon
structures contain semantic information in order to describe every
word also in terms of its -meaning&amp;quot;
Another possible approach is the one adopted by Zampolli who
developed a frequency lexicon of Italian language at the
Computational Linguistic Institute in Pisa In The lexicon realized
by Zarnpolli&apos;s working group containes morphologic hints in order to
guide directly the analysis of every word, without the support of a
morphologic ix rser.
In most of the works referring to English language morphology is
considered only as a part of the syntactic parser. On the contrary.
Italian morph&amp;ogy requires to be previously analyzed because it is
more complex: there are more rules than in English and these rules
present many exceptions.
For this reason, in the last few years Italian researchers began to
face systematically these problems beside a purely linguistic context.
A procedural approach is the one followed by Stock in the
development of a morphologic analyzer realized for the
&amp;quot;Wednesday2&amp;quot; parser 1111.
A different approach makes use of formal grammars to describe
the rules of Italian morphology. This morhologic analyzer is based
on a context free grammar describing the logic rules for the word
generation. Other two morphologic systems have been developed
according to the ATN formalism (Augmented Transition Network).
The first one has been realized at the CNR Institute of Pisa by
Morreale, Campagnola and Mugellesi, as a research tool for teaching
Italian morphology, with applications in automatic processing of
</bodyText>
<page confidence="0.998608">
32
</page>
<bodyText confidence="0.99950245">
natural language and knowledge representation In The second one
has been realized by Delmonte, Mian, Omologo and Satta, as part of
a system for the development of a reading machine for blind people.
I71-
giving all the possible lemmata it derives from.
The backtracking mechanism of Prolog directly allows to obtain
all the solutions.
This morphologic analyzer can also provide further information
about some linguistic peculiarities, like, for instance:
In the first section of this paper there is a brief discussion about
morphologic problems and about the possible approaches to their
solution.
The next section describes the structure adopted for the lexicon
and the other sets of data.
The third section deals with a preanalyzer, which simplifies the
work of morphologic analysis by recognizing standard sequences of
words, as idioms and date expressions.
In the fourth section the morphologic analyzer is described and
in the last one the morphosyntactic analyzer, both realized by means
of context free grammars.
</bodyText>
<figure confidence="0.745117375">
compound names pelle-rossa (red-skin), which has as plural
modal verbs pelli-rosse.
altered names which take another verb as object (I can
go)
foglia (leaf) can be altered in fog/i-n/ma
(leaf-let), whose meaning is piccola foglia
(small leaf).
Data structure
</figure>
<subsectionHeader confidence="0.627363">
The problem
</subsectionHeader>
<bodyText confidence="0.994060466666667">
The aim of morphology is to retrieve from every analyzed word
the lemma it derives from, its syntactic category (e.g. verb, noun,
adjective, conjunction, ...) and its morphologic category (e.g.
masculine, singular, indicative, ... ).
A possible approach to the problem is to store in a data base a
list of all the declined forms for every lemma of the language. as well
as their morphologic, syntactic and semantic characteristics.
The size of such a list would be enormous, because a common
dictionary contains about 50000-100000 lemmata and each lemma
gives rise to several derived words and each word may be declined in
different ways.
Such a large data base is hard to enter and to update, and it is
limited by the fixed size of its words list.
In Italian, the creation of words is a generative process that
follows several rules like, for instance:
</bodyText>
<equation confidence="0.900605833333333">
verbalization - --&gt; MAN-EGGIARE
(to hand-le)
MANO ---&gt; composition - --&gt; PALLA-MANO
(hand) (hand-ball)
cliticization - --&gt; RI-MAN-EGGIARE
(to re-hand-le)
</equation>
<bodyText confidence="0.9997415">
In English, rules like composition or cliticization arc not strictly
morphologic, because they often involve more than a word. In
Italian, on the contrary, they modify the single word, producing new
words like, for instance:
</bodyText>
<sectionHeader confidence="0.680935" genericHeader="method">
alteration ---&gt; CART-ACCIA
</sectionHeader>
<subsectionHeader confidence="0.3826035">
(waste paper)
CARTA composition ---&gt; CARTA-MONETA
</subsectionHeader>
<bodyText confidence="0.94783">
(paper) (paper money)
cliticization ---&gt; IN-CART-ARE
(to wrap in paper)
These rules make the set of Italian words potentially unlimited.
and sometimes make insufficient even a common dictionary.
A different approach takes two different lists: one containing the
lemmata of the language and the other the logic rules of derivations,
from which all the correct Italian words can be produced starting
from the lemmata.
These rules can be easily described by means of a context-free
grammar, in which every &apos;&apos;word&amp;quot; results from the concatenation of
the &amp;quot;stem&amp;quot; of a lemma with alterations, affixes, endings and enclitics.
This grammar can both generate from a given lemma all the
current Italian words deriving from it and analyze a given word by
A correct morphologic analysis requires not only knowledge on
the language lemmata, but also on the word components as
alterations, affixes, endings and enclitics. This information might he
represented in form of Prolog facts. In this way, data might be
directly accessed by the program, because the homogeneity of their
structure. The disadvantage is a performance degradation when the
size of data increases, since Prolog is not provided with efficient
search algorithms.
Hence it seemed convenient to draw a distinction between data:
on one hand the set of lemmata, and on the other the sets of affixes,
alterations, endings and enclitics. The former (which is the most
relevant and needs to be continuously updated), has been structured
as a relational data base table, managed by the SQL/DS. The
advantage is that this system is directly accessible from VIM/Prolog
(the string containing the query is processed by SQL, which returns
the answer as a Prolog list). The latter (which have fixed lenght and
are not so large), have been stored in the Prolog workspace in form
of Prolog facts.
The set of lemmata is a table with five attributes:
I. the first is the lemma.
</bodyText>
<listItem confidence="0.932697142857143">
2. the second is the stem (the invariable part of the lemma): this is
the access key in the table.
3. the third is the name of the &amp;quot;class of endings&amp;quot; associated with
every lemma. A class of endings is the set of all the endings
related to a given class of words. For example, each of the
regular verbs of the first conjugation has the same endings: hence
there exists a class named dv_lconjug containing all and only
these endings. Generally each irregular verb is related to different
classes of endings: andare (to go), for example, admits two
different stems, vad (go) and and (went); so there exist two
subclasses of endings named respectively dv I _andure and
dv2_andare.
4. the fourth attribute is the syntactic category of the lemma: for
example, the information that to have is an auxiliary transitive
verb.
5. the fifth is an integer identifying the type of analysis to be
performed:
the analysis can be performed completely
2 the lemma can neither be altered nor affixed (this is
the case for example of prepositions and
conjunctions)
</listItem>
<bodyText confidence="0.994412">
3 only the longest analysis of the lemma is considered
(this is the case of the false alteratecl nouns:
mattino (morning) is not a little matto (mad), such
as in english outlet is not a little out!)
</bodyText>
<page confidence="0.957443">
33
</page>
<bodyText confidence="0.954964272727273">
lemma stem ending_dass synt_categ label
matto matt da_bello adj.qualific. 1
mattino mattin dn_oggetto noun.conunon 3
di di --- prep.simple 2
andare vad dv I _andare v.intran.simple 1
andare and dv2_andare vintran.simple 1
The other sets of data are contained in the Prolog workspace and
are structured as tables of a relational data base.
The set of the classes of endings is a table with three attributes:
I. the first is the name of the class and it is the access key in thc
table.
</bodyText>
<listItem confidence="0.993448666666667">
2. the second is one of the endings belonging to the class
3. the third is the morphologic category associated with the ending:
for example, the class dn_oggetto contains the two endings which
are used in order to inflect all the masculine nouns behaving like
the word oggetto (object): o for the singular (oggett-o), and i for
the plural (oggett-i).
</listItem>
<table confidence="0.763101333333333">
ending_dass ending morPh_ categ
dn_oggetto o mas.sing.
dn_oggetto i mas.plur.
</table>
<bodyText confidence="0.999292727272727">
The affixes can be divided in prefixes preceding the stem of the
lemma, and suffixes following the stem of the lemma.
The prefixes are simply listed by means of a one attribute table.
In this way it is not necessary to list the prefixed words in the
lexicon: they are obtained by chaining the prefix with the original
word. For example, from the verb to handle with the prefix re we
obtain the verb to rehandle. Morphologic and syntactic
characteristics remain the same; for the verbs only, the prefixed verb
differs sometimes from the previous one in the syntactic attributes
(transitive/intransitive, simple/modal).
The set of suffixes is a table with four attributes:
</bodyText>
<listItem confidence="0.945557285714286">
1. the first is the suffix itself
2. the second is the stem of the suffix (the access key to the table)
3. the third is the ending class of the suffix
4. the fourth is the syntactic class of the suffix. Suffixes, in fact,
differently from prefixes, changes both morphologic and syntactic
characteristics of the original word: they change verbs into names
or adjectives (deverbal suffixes), names into verbs or adjectives
</listItem>
<bodyText confidence="0.973288461538461">
(denominal suffixes), adjectives into verbs or names (deadjerlival
suffixes). The first attribute is chained to the stem of the original
lemma in order to obtain the derived lemma: for example, from
the stem of the lemma mattino (morning), which is a noun, with
the suffix iero, we obtain the new lemma mattin-iero (early
rising), which is an adjective, and from the second stem of the
lemma andare (to go), which is a verb, with the suffix amour),
we obtain the new lemma and-amento (walking), which is a
noun.
suffix stem 1 ending_dass synt_catcg
iero ier da_bello adj.qualific.
amento ament dn_oggetto noun.common
The set of alteration is a table with three attributes:
</bodyText>
<listItem confidence="0.998362">
1. the first is the stem of the alteration (the access key in the table)
2. the second is the ending class of the alteration
3. the third is the semantic type of the alteration. Alterations
</listItem>
<bodyText confidence="0.971816766666667">
change the morphologic and semantic characteristics of the
altered word, but not its syntactic cathegory: for example. the
lemma casa (house) can be altered in casina (little house),
casona (big house), cataccia (ugly house), and so on:
stem ending_dass seman_categ
in da_bello diminutive
011 dn_cosa augmentative
ace da_anfibio pejorative
The enclitics are pronouns linked to the ending of a verb: for
example va 11&apos; (go there) can be expressed also in the form vacci (ei is
the enclitic, the c is duplicated according with a phonetic rule).
The set of the enclitics is a table with two attributes: the first is
the enclitic (this is the access key to the table) and the second is the
morphologic characteristic of the enclitic. The analyzer divides the
verb from the enclitic, so that it becomes a different word, taking the
morphologic characteristic stated in the table and the syntactic
category of pronoun.
Other two sets of data have been defined in order to handle fixed
sequences of words, such as proper names and idioms.
The set of the most common italian idioms has been structured
as a table with two attributes: the first one is the idiom itself, while
the second is the syntactic category of the idiom. In this way it is
possible to recognize the idiom without performing the analysis of
each of the component words. For example, di modo che (in such a
way as) is an idiom used in the role of a conjunction, and a mono a
mano (little by little) is used in the role of an adverb.
The set of proper names belonging to the context of Economics
and Finance is a table with three attributes: the first is the proper
name, the second its syntactic category and the third its morphologic
category.
</bodyText>
<table confidence="0.9715618">
proper_name synt_categ morph_ca teg
lunedi&apos; (monday) narne.prop.wday massing.
Montepolimeri Montedison name.prop.comp. fcm.sing.
Vittorio Ripa di Meana name.prop.pers. massing.
Reggio Emilia name.proploc. fem.sing.
</table>
<subsectionHeader confidence="0.871144">
The Preanalyzer
</subsectionHeader>
<bodyText confidence="0.999841555555555">
The preanalyzer simplifies the work of analysis recognizing all the
&apos;fixed&amp;quot; sequences of words in the sentence.
Fixed sequences of words are, for example, idioms like in .such a
way as. To analyze this sequence of words it is not necessary to
know that in is a preposition, such is an adjective, a an article, and so
on: the only useful information is that this sequence takes the role of
conjunction. Other fixed sequences of words are proper names: it is
necessary to know, for example, that Montepolimeri Montedison or
Vittorio Ripa di Meana are single entities.
Idioms and proper names are recognized by means of a pattern
matching algorithm: the comparison is made between the input
sentence and the first attribute of the tables of idioms and proper
names. When the comparison fails, backtracking evaluates another
hypothesis. Every recognized sequence of words is written on an
appropriate file and then removed from the input sentence.
Date expressions, as lunedi&apos; 13 agosto (monday, august the /3rd),
are considered as single entities, in order to simplify the work of
syntax. They are recognized by means of a context-free grammar,
</bodyText>
<page confidence="0.995525">
34
</page>
<figure confidence="0.805970571428571">
whose axiom is the &apos;date&apos;:
1 DATE --&gt; &lt;name_proper_wday&gt; &lt;DA1&gt;
2 DATE --&gt; &lt;DA1&gt;
3 DATE --&gt; &lt;DA2&gt;
4 DA1 --&gt; &lt;number(&lt;31)&gt; &lt;name_proper_month&gt;
5 DA1 &lt;number(&lt;31)&gt; &lt;DA2&gt;
6 DA2 --&gt; &lt;name_proper_month&gt; &lt;number&gt;
</figure>
<figureCaption confidence="0.999917">
Figure I. The grammar for the DATE
</figureCaption>
<bodyText confidence="0.9602982">
Numbers are recognized by the library function numb(* ) and by
means of a context-free grammar translating strings into numbers. In
this way it is possible to evaluate in the same way expressions such
as 1352 and milletrecentocinquantadue (one thousand three hundred
and fifty two).
</bodyText>
<figure confidence="0.967899071428571">
1 NUMBER &lt;NUM1&gt;
2 NUMBER --&gt; &lt;&apos;mille&apos;&gt;
3 NUMBER &lt;&apos;mille&apos;&gt; &lt;NUM1&gt;
4 NUMBER --&gt; &lt;NUM1&gt; &lt;&apos;mila&apos;&gt;
5 NUMBER --&gt; &lt;NUM1&gt; &lt;&apos;mila&apos;&gt; &lt;NUM1&gt;
6 NUM1 &lt;NUM2&gt;
7 NUM1 &lt;NUM3&gt;
8 NUM1 &lt;NUM4&gt;
9 NUM2 &lt;units&gt; &lt;NUM3&gt;
10 NUM3 --&gt; &lt;&apos;cento&apos;&gt;
11 NUM3 --&gt; &lt;&apos;cento&apos;&gt; &lt;NUM4&gt;
12 NUM4 &lt;units&gt;
13 NUM4 &lt;tens&gt;
14 NUM4 &lt;tens&gt; &lt;units&gt;
</figure>
<figureCaption confidence="0.999954">
Figure 2. The grammar for the NUMBER
</figureCaption>
<subsectionHeader confidence="0.834687">
The morphologic analyzer
</subsectionHeader>
<bodyText confidence="0.99774875">
This is the main module of the whole system. Its task is to
analyse each element (word) of the list received from the preanab scr
and to produce for every form analyzed the list of all its
characteristics:
</bodyText>
<figure confidence="0.90987575">
1 WORD --&gt; (prefix)&amp;quot; &lt; stem &gt; &lt; REM &gt;
2 REM --&gt; (suffix) (alteration)&amp;quot; &lt; TAIL&gt;
3 REM .-&gt; &lt; ending&gt; (suffix)&amp;quot; (alteration)&amp;quot; &lt; &amp;quot;rn
4 TAIL .-&gt; &lt; ending&gt; (enclitic)&amp;quot;
</figure>
<figureCaption confidence="0.99982">
Figure 3. The grammar for the WORD
</figureCaption>
<bodyText confidence="0.996825">
Here are some example of words analyzed with this grammar:
</bodyText>
<listItem confidence="0.796376">
• muraglione (high wall)
</listItem>
<bodyText confidence="0.924575">
mur is the stem of the word muro (wall)
agl is the stem of the suffix aglia
i-on on is the stem of the alteration one (augmentative):
the i is an euphonic vowel
is the ending of the singular.
</bodyText>
<listItem confidence="0.84891">
• trasportatore (carrier)
</listItem>
<figureCaption confidence="0.7356595">
tras is the prefix
Figure 4. Parse tree for the word MURAGLIONE
</figureCaption>
<listItem confidence="0.9980398">
1. the lemma it derives from
2. its syntactic characteristics
3. its morphologic characteristics (none for invariable words)
4. the list of alterations (possibly empty)
5. the list of enclitics (possibly empty).
</listItem>
<bodyText confidence="0.974621105263158">
For example the form sono (the 1st sing. and the 3rd plur. person
of the present indicative of essere, to be), after the analysis is
represented by the list:
(sono.
(v. intran. atuc. ind.pres . act . 1. sing. essere.nil) .
(v. intran. aux. ind.pres. act .3.plur essere.nil) .
nil)
Every Italian word is made up by a fundamental nucleus, the
stem (two for the compound names). This is preceded by one or
more prefixes, and followed by one or more suffixes and alterations,
by an ending and, as far as the verbs are concerned, by one or more
enclitics.
This structure has been described by means of a context-free
grammar in which the &apos;&apos;word r is the axiom and all its components
the endings.
Port is the stem of the verb portare (to carry)
at is the ending of the past participle of the veih
or is the stem of the deverbal suffix ore
is the ending of the masculine singular.
</bodyText>
<figureCaption confidence="0.968182">
Figure 5. Parse tree for the word TRASPORTATORE
</figureCaption>
<page confidence="0.996417">
35
</page>
<listItem confidence="0.560735">
• ridandoglielo (giving it to him/her again)
</listItem>
<bodyText confidence="0.933181428571428">
ri is the prefix (it means again)
is the stem of the verb dare (to give)
ando is the ending of the present tense of gerund of the
verb
glie is the first enclitic (it means to him/her): c is an
euphonic vowel
lo is the second enclitic (it means it).
</bodyText>
<figure confidence="0.7001525">
WEED
1
prefix stem 1511
ri TAIL
e enclitic enclitic
end° glie lo
</figure>
<figureCaption confidence="0.975145">
Figure 6. Parse tree for the word RIDANDOGUELO
</figureCaption>
<bodyText confidence="0.999728">
The compound nouns are not reported in the lexicon: they arc
derived from the two component lemmmata. Their plural is made
according to the following set of rules:
</bodyText>
<figure confidence="0.991217428571429">
1 V + N(mas.sing) --&gt; Noun&apos;s ending changes
2 V + N(fem.sing) --&gt; no ending changes
3 V + N(plur) --&gt; no ending changes
4 V + V --&gt; no ending changes
5 N + N --&gt; 2nd Noun s ending changes
6 Ad) + N --&gt; Noun&apos;s ending changes
7 N + Adj --&gt; both endings change
</figure>
<figureCaption confidence="0.999874">
Figure 7. The rules for the plural of Compound Nouns
</figureCaption>
<figure confidence="0.602551444444444">
Some examples of compound nouns are:
rule singular plural
1 passa-porto (pass-port) passa-porti
2 porta-cenere (ash-tray) porta-cenere
3 cava-tappi (cork-screw) cava-tappi
4 sali-scendi (door-latch) sali-scendi
5 banco-nota (bank-note) banco-note
6 basso-rilievo (bas-relief) basso-rilievi
7 cassa-forte (steel-safe) casse-forti
</figure>
<subsectionHeader confidence="0.408417">
The task of this part of the morphology is to:
</subsectionHeader>
<bodyText confidence="0.927166333333334">
1. recognize all the &amp;quot;well-formed- words of Italian language.
The analyzer parses the words from left to right, splitting them
into elementary parts: prefix(es), the stem(s) of the appropriate
lenuna(ta) of derivation (retrieved from a restricted dictionary
reporting only the &apos;&apos;elementary lemmata-) suffix(es), alteration(s),
ending(s), enclitic(s). Each hypothesis is checked by verifying
that all the conditions for a tight composition of those parts arc
satisfied.
2. submit every word not recognized to the user, who can state
wether:
• the word is really wrong, because of
- an orthographic error: for example squola instead of scuola
(school).
- a composition error: for example serviziazione is wrong as
&apos;iazione&apos; is a deverbal suffix and &apos;serviz&apos; is the stem of the
noun &apos;servizio&apos; (service) and the corresponding verb does not
exist.
• the word derives from a lemma which is not reported in the
lexicon. In this case the user can recall a graphic interface,
allowing him/her to update directly the lexicon.
3. perform, if requested by the user, an inspection in the list of the
-currently used words. In this way, for example, the user knows
that coton-ificio (cotton-mill) and coton-iera are two well-formed
Italian words, but that only the first one is commonly used.
</bodyText>
<subsectionHeader confidence="0.859973">
The morphosyntactic analyzer
</subsectionHeader>
<bodyText confidence="0.999789285714286">
The aim of the morphosyntactic analyzer is to perform the
analysis of the contiguous words in the sentence, in order to
recognize regular structures such as compound tenses of verbs and
comparative and superlative forms of adjectives.
Compound tenses of verbs are described by means of a regular
grammar, whose rules are applied any time the analyzer finds in the
sentence the past participle of the verb. These rules arc:
</bodyText>
<figureCaption confidence="0.99865">
Figure 8. The grammar for the COMPOUND TENSES of verbs
</figureCaption>
<bodyText confidence="0.976853259259259">
When a rule is successfully applied the morphologic categories of
the verbs are changed and the attribute &apos;active/&apos;passive can he
specified correctly. For example, after the morphosyntactic analysis.
the phrase io sono chiamato (I&apos;m called)
((io.
(pron.pers .1. sing. io.ni1).
nil).
(sono.
(v. intran. aux. ind.pres. act . 1. sing. essere . nil) .
(v. int ran. aux. ind.pres . act .3.plur essere. nil).
nil).
(chiamato.
(v.tran.sim.part.past.act.mas.sing.chiamare.ni1).
nil).
nil)
becomes
((io.
(pron.pers.l.sing.io.ni1).
nil).
(sono_chiamato.
(v.tran.sim.pass.ind.pres.l.sing.chiamare.ni1).
nil).
nil).
in which only the first analysis of the word -sono&amp;quot; has been taken, as
the number of the auxiliary verb must correspond to the number of
the past participle. The form is passive, as &amp;quot;chiamare- (to call) is a
transitive verb (the auxiliary verb for the active form is to hare). In
</bodyText>
<figure confidence="0.997934111111111">
1 COMP_TENSE --&gt; &lt;v.tran.aux.&gt;
&lt;v.tran.(past.part.)&gt;
2 COMP_TENSE --&gt; &lt;v.intran.aux.&gt; &lt;REM&gt;
3 REM --&gt; &lt;v.intran.aux.(past.part)&gt;
&lt;v.tran.(past.part)&gt;
--&gt; &lt;v.tran.(past.part)&gt;
--&gt; &lt;v.intran.(past.part)&gt;
4 REM
5 REM
</figure>
<page confidence="0.992357">
36
</page>
<bodyText confidence="0.999885">
this case morphosyntactic analysis has solved an ambiguity: only an
interpretation will be analyzed by syntax.
The following figure shows the task of the grammar, applied any
time the parser finds the past participle of a verb in the sentence.
</bodyText>
<listItem confidence="0.984310642857143">
• If the verb is transitive the parser looks at the word BEFORE
the verb:
— if the word is a tense of the verb to be, the resulting verb is
SIMPLE PASSIVE (the rules applied are the 2nd and the
4th);
— if the word is a tense of the verb to have, the resulting verb is
COMPOUND ACTIVE (the rule applied is the 1st).
• If the verb is intransitive the parser looks at the word Al TFR
the verb:
— if it is the past participle of another verb the resulting verb is
COMPOUND PASSIVE (the rules applied are the 2nd and
the 3rd);
— otherwise it is COMPOUND ACTIVE (the rules applied arc
the 2nd and the 5th).
</listItem>
<figureCaption confidence="0.999021">
Figure 9. Compound tenses of verbs
</figureCaption>
<bodyText confidence="0.999961625">
The grammar for the comparative and superlative forms of
adjectives is applied any time the analyzer finds the words piu&apos;
(more), meno (less) followed by a qualificative adjective. In this way
it is possible to recognize and to distinguish expressions like piu&apos;
interessante (more interesting) and il piu&apos; interessantc (the inost
interesting). Remark that in English there is the use of more, &apos;non to
make clear the distinction between the comparative and the
superlative form of the adjective.
</bodyText>
<sectionHeader confidence="0.974224" genericHeader="method">
1 SUPERL REL --&gt; &lt;art.determ.&gt; &lt;COMPARATIVE&gt;
2 COMPARATIVE --&gt; &lt;tpiu&apos;l&gt; &lt;adj.qualific.&gt;
3 COMPARATIVE --&gt; &lt;Inieno1&gt; &lt;adj.qualific.&gt;
</sectionHeader>
<figureCaption confidence="0.877326">
Figure 10. The grammar for the SUPERLATIVE and COMPARATIVE
form of adjectives
</figureCaption>
<bodyText confidence="0.9989396">
In the same manner it is possible to recognize mixed numeric
expressions like three billions 564 millions 234000 and to evaluate
them into their equivalent numeric form (3564234000). The rules are
applied any time the analyzer finds the words miliardi (billions),
milioni (millions) in the sentence.
</bodyText>
<figure confidence="0.978127">
1 NUN COMP --&gt; &lt;agg.num&gt; &lt;imiliardo.&gt; &lt;NUM1&gt;
2 NUM_COMP --&gt; &lt;agg.num&gt; &lt;&apos;miliardot&gt; &lt;agg.num&gt;
3 NUM_COMP --&gt; &lt;agg.num&gt; &lt;imiliardo&apos;&gt;
4 NUN COMP --&gt; &lt;NUM1&gt;
5 NUM1 --&gt; &lt;agg.num&gt; &lt;&apos;milionel&gt; &lt;agg.num&gt;
6 NUM1 --&gt; &lt;agg.num&gt; &lt;imilionel&gt;
</figure>
<figureCaption confidence="0.998048">
Figure II. The grammar for COMPOUND NUMBERS
</figureCaption>
<sectionHeader confidence="0.665206" genericHeader="conclusions">
Conclusions
</sectionHeader>
<bodyText confidence="0.999768125">
This approach presents the advantage of a higher flexibility in the
analysis of words. Moreover such a method has requested a strong
initial effort in the formalization of the rules (with all their
exceptions) for the morphologic treatment of words, but has largely
simplified the work of classification of every Italian word.
The lexicon stores about 7000 elementary lemmata, derived from
a list of about 20000 different Italian forms. They correspond to
about 15000 ordinary lemmata (entries of a common dictionary).
</bodyText>
<sectionHeader confidence="0.999428" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998578307692308">
Ill Graphical Data Display Manager, Application Programming
Guide, SC33-0I48-2, IBM Corp., 1984.
121 SQL/Data System, Terminal User&apos;s Reference, SII24-5017-2,
IBM Corp., 1983.
131 VM/Programming in Logic, Program Description/Operation
Manual, SH20-6541-0, IBM Corp., 1985.
141 M.Alinei, La struttura del lessico, ed. II Mulino, 1974.
151 U.Bortolini, C.Tagliavini and A.Zampolli, 1...es.sico di freqiienza
della lingua italiana contemporanea, ed. IBM, 1971.
16] B.Bottini and M.Cappelli, Un Meta Analizzatore Orientato al
Linguaggio Naturale in Ambicnte Prolog, M.D. Thesis. Milano.
1985.
171 R.Delrnonte, G.A.Mian, M.Omologo and Ci.Satta. 15n
riconoscitore morfologico a transizioni aumcntatc, Proceedingc
of AICA Meeting, Florence, 1985.
181 E.Morreale, P.Campagnola and R.Mugellesi, Un sistema
interattivo per il trattamento morfologico di parole italiatte.
Proceedings of AICA Meeting, Pavia, 1981.
191 M.T.Pazienza and P.Velardi, Pragmatic Knowledge on NVord
Uses for Semantic Analysis of Texts, Workshop on Conceptual
Graphs, Thomwood, NY, August 18-20 1986.
1101 J.F.Sowa, Conceptual Structures: Information Processing in
Mind and Machine, Addison-Wesley, Reading, 1984.
[111 0.Stock, F.Cecconi and C.Castelfranchi, Analisi morfologiea
integrata in un parser a conoscenze linguistiche distribuite,
Proceedings of AICA Meeting, Palermo, 1986.
</reference>
<page confidence="0.99961">
37
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.887322">
<title confidence="0.998155">A GENERATIVE GRAMMAR APPROACH FOR THE MORPHOLOGIC AND MORPHOSYNTACTIC ANALYSIS OF ITALIAN</title>
<author confidence="0.999999">Marina Russo</author>
<affiliation confidence="0.999988">IBM Rome Scientific Center</affiliation>
<address confidence="0.99848">via del Giorgionc, 129 00147 Rome Italy</address>
<abstract confidence="0.990225380952381">A morphologic and morphosyntactic analyzer for the Italian language has been implemented in VM/Prolog 131 at the IBM Rome Scientific Center as part of a project on text understanding. Aim of this project is the development of a prototype which analyzes short narrative texts (press agency news) and gives a formal representation of their &apos;meaning&amp;quot; as a set of first order logic expressions. Question answering features are also provided. The morphologic analyzer processes every word by means of a context free grammar, in order to obtain its morphologic and syntactic characteristics. It also performs a morphosyntactic analysis to recognize fixed and variable sequences of words such as idioms, date expressions, compound tenses of verbs and comparative and superlative forms of adjectives. The lexicon is stored in a relational data base under the control of SQL/DS 121, while the endings of the grammar are stored in the workspace as Prolog facts. A friendly interface written in GDDM 111 allows the user to introduce on line the missing lemmata, in order to directly update the dictionary.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>Ill Graphical Data Display Manager, Application Programming Guide, SC33-0I48-2, IBM Corp.,</title>
<date>1984</date>
<marker>1984</marker>
<rawString> Ill Graphical Data Display Manager, Application Programming Guide, SC33-0I48-2, IBM Corp., 1984.</rawString>
</citation>
<citation valid="true">
<authors>
<author>SQLData System</author>
</authors>
<title>Terminal User&apos;s Reference,</title>
<date>1983</date>
<pages>24--5017</pages>
<publisher>IBM Corp.,</publisher>
<marker>121</marker>
<rawString>SQL/Data System, Terminal User&apos;s Reference, SII24-5017-2, IBM Corp., 1983.</rawString>
</citation>
<citation valid="true">
<title>VM/Programming in Logic,</title>
<date>1985</date>
<booktitle>Program Description/Operation Manual, SH20-6541-0, IBM Corp.,</booktitle>
<marker>131</marker>
<rawString>VM/Programming in Logic, Program Description/Operation Manual, SH20-6541-0, IBM Corp., 1985.</rawString>
</citation>
<citation valid="false">
<date>1974</date>
<editor>M.Alinei, La struttura del lessico, ed.</editor>
<publisher>II Mulino,</publisher>
<marker>141</marker>
<rawString>M.Alinei, La struttura del lessico, ed. II Mulino, 1974.</rawString>
</citation>
<citation valid="true">
<authors>
<author>U Bortolini</author>
</authors>
<title>C.Tagliavini and A.Zampolli, 1...es.sico di freqiienza della lingua italiana contemporanea,</title>
<date>1971</date>
<editor>ed. IBM,</editor>
<marker>151</marker>
<rawString>U.Bortolini, C.Tagliavini and A.Zampolli, 1...es.sico di freqiienza della lingua italiana contemporanea, ed. IBM, 1971.</rawString>
</citation>
<citation valid="false">
<authors>
<author>B Bottini</author>
<author>M Cappelli</author>
</authors>
<booktitle>Analizzatore Orientato al Linguaggio Naturale in Ambicnte Prolog, M.D. Thesis.</booktitle>
<institution>Un Meta</institution>
<location>Milano.</location>
<marker>16</marker>
<rawString>] B.Bottini and M.Cappelli, Un Meta Analizzatore Orientato al Linguaggio Naturale in Ambicnte Prolog, M.D. Thesis. Milano.</rawString>
</citation>
<citation valid="false">
<marker>1985</marker>
<rawString>.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G A Mian R Delrnonte</author>
</authors>
<title>M.Omologo and Ci.Satta. 15n riconoscitore morfologico a transizioni aumcntatc,</title>
<date>1985</date>
<booktitle>Proceedingc of AICA Meeting,</booktitle>
<location>Florence,</location>
<marker>171</marker>
<rawString>R.Delrnonte, G.A.Mian, M.Omologo and Ci.Satta. 15n riconoscitore morfologico a transizioni aumcntatc, Proceedingc of AICA Meeting, Florence, 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Campagnola E Morreale</author>
</authors>
<title>and R.Mugellesi, Un sistema interattivo per il trattamento morfologico di parole italiatte.</title>
<date>1981</date>
<booktitle>Proceedings of AICA Meeting,</booktitle>
<location>Pavia,</location>
<marker>181</marker>
<rawString>E.Morreale, P.Campagnola and R.Mugellesi, Un sistema interattivo per il trattamento morfologico di parole italiatte. Proceedings of AICA Meeting, Pavia, 1981.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M T Pazienza</author>
<author>P Velardi</author>
</authors>
<title>Pragmatic Knowledge on NVord Uses for Semantic Analysis of Texts,</title>
<date>1986</date>
<booktitle>Workshop on Conceptual Graphs,</booktitle>
<location>Thomwood, NY,</location>
<marker>191</marker>
<rawString>M.T.Pazienza and P.Velardi, Pragmatic Knowledge on NVord Uses for Semantic Analysis of Texts, Workshop on Conceptual Graphs, Thomwood, NY, August 18-20 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Conceptual J F Sowa</author>
</authors>
<title>Structures: Information Processing in Mind and Machine,</title>
<date>1984</date>
<booktitle>Proceedings of AICA Meeting,</booktitle>
<publisher>Addison-Wesley,</publisher>
<location>Reading,</location>
<marker>1101</marker>
<rawString>J.F.Sowa, Conceptual Structures: Information Processing in Mind and Machine, Addison-Wesley, Reading, 1984. [111 0.Stock, F.Cecconi and C.Castelfranchi, Analisi morfologiea integrata in un parser a conoscenze linguistiche distribuite, Proceedings of AICA Meeting, Palermo, 1986.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>