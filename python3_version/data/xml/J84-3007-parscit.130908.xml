<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.563941">
The FINITE STRING Newsletter
</title>
<subsectionHeader confidence="0.872697">
Announcing a New Section
</subsectionHeader>
<bodyText confidence="0.9864185">
Many aspects of computational lingusitics research and
development are extremely labor-intensive. These
include realistic grammars of a given natural language,
collections of semantic interpretation rules and case
frames, corpora, lexicons, and software tools, to name
just a few.
One of the ways The FINITE STRING can help is in
publishing catalogs of such resources. The following
submission by Gerald Gazdar on sources of parsers with-
in the paradigm of generalized phrase structure grammars
inaugurates this section, called SOURCES. Note that we
are interested in publishing catalogs — not descriptions of
a single example — nor descriptions of items associated
with a single site.
This section will only be as good as the items submit-
ted to it. Potentially it can contain some of the most
valuable information available. We welcome and encour-
age your submissions.
</bodyText>
<subsectionHeader confidence="0.627073">
Sources
</subsectionHeader>
<bodyText confidence="0.672778333333333">
Recent Computer Implementations of Phrase
Structure Grammars
Gerald Gazdar
</bodyText>
<note confidence="0.7593655">
Center for Advanced Study in the Behavioral Sciences
202 Junipero Serra Boulevard
</note>
<bodyText confidence="0.496433">
Stanford, CA 94305, USA
[Address after 1 September 1985:
</bodyText>
<subsectionHeader confidence="0.653433">
The University of Sussex
School of Social Sciences
Arts Building
</subsectionHeader>
<bodyText confidence="0.995758307692308">
Falmer, Brighton BN1 9QN England]
This note lists twelve recent implementations of phrase
structure grammars. Each entry begins with the name
and address of the persons or institution primarily
responsible. This is followed by summary details of the
systems, together with information about the program-
ming language(s) they were written in and the machines
they run on. The entries conclude with a list of any
publications or working papers that have resulted from
the projects described. Many of the systems presuppose
the grammatical formalism for phrase structure grammars
outlined in Gazdar and Pullum (1982), and the terminol-
ogy used in the entries below reflects that fact.
</bodyText>
<listItem confidence="0.58610125">
Gazdar, Gerald and Pullum, Geoffrey K. 1982 Generalized Phrase
Structure Grammar: A Theoretical Synopsis. University Linguistics
Club, Bloomington, Indiana. Also distributed as University of
Sussex Cognitive Science Research Research Paper 7 (CSRP 007).
</listItem>
<subsectionHeader confidence="0.9028245">
John Bear
Linguistics Research Center
</subsectionHeader>
<bodyText confidence="0.933035846153846">
P.O. Box 7247, University Station
University of Texas
Austin, TX 78712 USA
An all paths, left corner chart paper that uses features for
agreement and unbounded dependencies. It handles rela-
tive clauses, questions, and existentials. No semantics is
implemented. The parser is written in Interlisp and runs
on a DEC20.
Bear, John 1981 Gaps as Syntactic Features. MA dissertation.
University of Texas at Austin. [Published by IULC, Bloomington,
Indiana, in 1982.1
Bear, John and Karttunen, Lauri 1979 PSG: A Simple Phrase Struc-
ture Parser. Texas Linguistic Forum 15: 1-46.
</bodyText>
<subsectionHeader confidence="0.654703">
Roger Evans
Cognitive Studies Programme
University of Sussex
Brighton BN1 9QN, UK
</subsectionHeader>
<bodyText confidence="0.998716260869565">
ProGram is a grammar development system intended for
use by linguists and computational linguists developing
grammars for significant fragments of natural languages.
It incorporates all aspects of the 1982 version of the
Generalized Phrase Structure Grammar (GPSG) frame-
work: features, metarules, immediate dominance and
linear precedence (ID/LP) rules, feature instantiation,
coordination, etc. The parser uses ID/LP format directly
and does not create the induced set of PS rules. ProGram
allows the user to &apos;direct&apos; the parsing if he wishes.
Designed for portability, the system is written in Prolog
and runs on VAXes under VMS or UNIX1, and on other
UNIX systems.
luNix is a trademark of Bell Laboratories.
Evans, Bogert and Gazdar, Gerald 1984 The ProGram Manual.
University of Sussex Cognitive Science Research Paper 35 (CSRP
035).
Keller, Bill 1984a Generating Logic from ProGram Parse Trees.
University of Sussex Cognitive Science Research Paper 39 (CSRP
039).
Keller, Bill 19846 A Lexicon Handler for the ProGram Grammar
Development System. University of Sussex Cognitive Science
Research Paper 40 (CSRP 040).
</bodyText>
<subsectionHeader confidence="0.8646225">
Mark Johnson
Department of Linguistics
</subsectionHeader>
<bodyText confidence="0.9809306">
University of California at San Diego
La Jolla, CA 92093 USA
A suite of small programs including a sentence generator
employing features, instantiation, and ID/LP; a feature
package defining unification, increment, etc.; and an
</bodyText>
<page confidence="0.914002">
212 Computational Linguistics, Volume 10, Numbers 3-4, July-December 1984
</page>
<bodyText confidence="0.798877666666667">
The FINITE STRING Newsletter Sources
LR(1) parser. The programs are written in FranzLisp
and run on a VAX under UNIX.
</bodyText>
<table confidence="0.638069285714286">
James Kilbury
Techniiche Universitat Berlin
Fachbereich Informatik (20)
Institut fur Angewandte Informatik
Projekt KIT, Sekr. FR 5-8
Franklinstrasse 28/29
D-1000 Berlin 10, West Germany
</table>
<bodyText confidence="0.820865384615384">
A modified Earley-Shieber parser using a &amp;quot;first&amp;quot; relation
for the ID/LP formalism is currently being extended to
cover all aspects of the GPSG framework including direct
parsing with metarules. The system is implemented in
Waterloo Prolog and runs on an ITEL AS/5-7031 (equiv-
alent to IBM 370).
Kilbury, James 1984a A Modification of the Earley-Shieber Algorithm
for Direct Parsing of ID/LP Grammars. Unpublished paper, Tech-
nische Universitat Berlin.
Kilbury, James 1984b GPSG-based Parsing and Generation. To
appear in: Rollinger, Claus-Rainer, Ed., Probleme des (Text)-
Verstehens — Ansatze der Kunstlichen Intelligenz. Max Niemeyer,
Tubingen.
</bodyText>
<subsectionHeader confidence="0.940875">
Francis Jeffry Pelletier
Department of Philosophy
University of Alberta
</subsectionHeader>
<bodyText confidence="0.91793868">
Edmonton, Canada T6G 2H1
A recursive descent parser that incorporates metarules
and slash categories and provides intensional logic trans-
lations. The parser does not incorporate features or the
ID/LPformat for rules. The system is written in SNOBOL
and runs on an Amdahl 470.
Stephen G. Pulman
Computer Laboratory
University of Cambridge
Corn Exchange Street
Cambridge CB2 3QG, UK
A recursive transition network (RTN) based parser oper-
ating either depth or breadth first. The system compiles
metarules and phrase structure rules into an RTN and
then optimises it. Slash categories are included, but not
other featural information. A minimal semantics is asso-
ciated with one test grammar. The implementation is
written in PDP11 and runs on a VAX under the VMS
version of the POPLOG system.
Pulman, Stephen 1983 Generalised Phrase Structure Grammar,
Earley&apos;s Algorithm, and the Minimisation of Recursion. In: Sparck-
Jones, K. and Wilks, Y, Eds., Automatic Natural Language Parsing.
Ellis Horwood, Chichester, England: 117-131.
Pulman, Stephen 1984 Limited Domain Systems for Language Teach-
ing. Proceedings of Coling84.
</bodyText>
<table confidence="0.336839">
Lenhart K. Schubert
Department of Computing Science
University of Alberta
Edmonton, Canada T6G 2H1
</table>
<bodyText confidence="0.79317945">
A left corner parser that prunes syntactically or seman-
tically unusual alternatives. It incorporates features and
morphological analysis, coordination and slash catego-
ries, but not metarules. Semantically, it provides first
order logic translations. The system is intended as a
front end for a question-answering system with access to
a logic-based semantic net. Lisp and Pascal versions
exist, both of which run on an Amdahl 470.
Pelletier, Francis Jeffry and Schubert, Lenhart 1984 Two Theories for
Computing the Logical Form of Mass Expressions. Proceedings of
Coling84. Stanford, California: 108-111.
Schubert, Lenhart 1982 An Approach to the Syntax and Semantics of
Affixes in &apos;Conventionalized&apos; Phrase Structure Grammar. Proceed-
ing of the 4th Biennial Conference of the Canadian Society for
Computational Studies of Intelligence: 189-195.
Schubert, Lenhart 1984 On Parsing Preferences. Proceedings of
Coling84. Stanford, California: 247-250.
Schubert, Lenhart and Pelletier, Francis Jeffry 1982 From English to
Logic: Context-Free Computation of &apos;Conventional&apos; Logic Trans-
lation. American Journal of Computational Linguistics 8(1): 27-44.
</bodyText>
<subsectionHeader confidence="0.5971794">
Hidetoshi Shirai
Department of Mathematical Engineering
and Instrumentation Physics
Faculty of Engineering
University of Tokyo
</subsectionHeader>
<bodyText confidence="0.893021111111111">
Hongto 7-1-2, Bunkyo-ku
Tokyo 113, JAPAN
A deterministic parser based on PARSIFAL that incorpo-
rates metarules, raising constructions, and unbounded
dependencies. A Montague semantics is associated with
the parse trees. The system is written in Lisp on a Hitac
M200H.
Shirai, Hidetoshi 1983 Deterministic Parser. In Proceedings of the
Workshop on Non-transformational Grammars. ICOT, Tokyo: 57-61.
</bodyText>
<sectionHeader confidence="0.724357" genericHeader="abstract">
SRI International
</sectionHeader>
<subsectionHeader confidence="0.867797">
[Stuart Shieber and Stan Rosenschein]
333 Ravenswood Avenue
Menlo Park, CA 94035 USA
</subsectionHeader>
<bodyText confidence="0.920417857142857">
The PATR-I system employes a CKY parser and the
feature system allows Boolean combinations of feature
equalities to be interpreted on the fly. There are no
metarules. The semantics is converted to first-ordr logic
and passed to a theorem prover. The system is written in
Interlisp and runs on a DEC20.
Rosenschein, Stanley and Shieber, Stuart M. 1982 Translating English
</bodyText>
<table confidence="0.886023375">
into Logical Form. Proceedings of the 20th Annual Meeting of the
Association for Computational Lingustics: 1-8.
Computational Linguistics, Volume 10, Numbers 3-4, July-December 1984 213
Sources The FINITE STRING Newsletter
SRI International
[Stuart Shieber et al.]
333 Ravenswood Avenue
Menlo Park, CA 94035 USA
</table>
<bodyText confidence="0.961398111111111">
The PATR-II system exists in three implementations, two
in Lisp (Interlisp on a DEC20 and Zetalsip on a Symbol-
ics 3600) and one in Prolog (on a DEC20). The Lisp
versions use a CKY parser whilst the Prolog version uses
Earley&apos;s algorithm. The feature system uses directed
acyclic graph structures and the semantics is embedded in
that feature system. Morphological analysis is achieved
by the method of Kimmo Koskenniemi (implemented in
Lisp by Lauri Karttunen).
</bodyText>
<reference confidence="0.98372071875">
Karttunen, Lauri 1984 Features and Values. Proceedings of Coling84.
Stanford, California: 28-33.
Koskenniemi, Kimmo 1983 A Two Level Model for Morphological
Analysis. Proceedings of the 8th International Joint Conference on
Artificial Intelligence: 683-685.
Pereira, Fernando and Shieber, Stuart 1984 The Semantics of Gram-
mar Formalisms Seen as Computer Languages. Proceedings of
Coling84. Stanford, California: 123-129.
Shieber, Stuart 1983 Sentence Disambiguation by a Shift-reduce Pars-
ing Technique. Technical Note 281. SRI International, Menlo
Park, California. Also in Proceedings of the 21st Annual Meeting of
the Association for Computational Linguistics: 113-118, and in
Proceedings of the 8th International Joint Conference on Artificial
Intelligence: 699-703.
Shieber, Stuart 1984a Direct Parsing of ID/LP Grammars. Linguistics
and Philosophy 7: 135-154.
Shieber, Stuart 198413 The Design of a Computer Language for
Linguistic Information. Proceedings of Coling84. Stanford, Califor-
nia: 362-366.
Shiebert, Stuart; Stucky, Susan; Uszkoreit, Hans; and Robinson, Jane
1983 Formal Constraints on Metarules. Technical Note 283. SRI
International, Menlo Park, California. Also in Proceedings of the
21st Annual Meeting of the Association for Computational Lingustics:
22-27.
Stucky, Susan 1983 Metarules as Meta-Node-Admissibility Condi-
tions. Technical Note 304. SRI International, Menlo Park, Califor-
nia.
Henry Thompson and John Phillips
Department of Artificial Intelligence
University of Edinburgh
Hope Park Square
Edinburgh EH8 9NW, UK
</reference>
<bodyText confidence="0.801223666666667">
MCHART is a chart parser intended for grammar testing.
It incorporates all aspects of the 1982 GPSG framework:
features, metarules, feature instantiation, coordination,
etc. The semantics is currently being implemented. The
system is written in Lisp and runs on a DEC10 and a
VAX under UNIX.
</bodyText>
<reference confidence="0.8605268125">
Thompson, Henry 1981 Chart Parsing and Rule Schemata in PSG.
Proceedings of the 19th Annual Meeting of the Association for Compu-
tational Lingustics: 167-172.
Thompson, Henry 1982 Handling Metarules in a Parser for GPSG.
Edinburgh D.A.I. Research Paper No. 175. Also, in: Barlow, M.;
Flickinger, D.; and Sag, I.A., Eds., Developments in Generalized
Phrase Structure Grammar: Stanford Working Papers in Grammatical
Theory, Volume 2. Indiana University Linguistics Club, Blooming-
ton, Indiana: 26-37.
Thompson, Henry 1983 Crossed Serial Dependencies: A Low-Power
Parseable Extension to GPSG. Proceedings of the 21st Annual Meet-
ing of the Assocition for Computational Linguistics: 16-21.
Thompson, Henry and Phillips, John 1984 An Implementation of
GPSG within the MCHART Parsing Framework. Unpublished
paper, Department of Artificial Intelligence, University of Edin-
burgh.
</reference>
<page confidence="0.973183">
214 Computational Linguistics, Volume 10, Numbers 3-4, July-December 1984
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.990598">The FINITE STRING Newsletter Announcing a New Section</title>
<abstract confidence="0.974396333333333">Many aspects of computational lingusitics research and development are extremely labor-intensive. include realistic grammars of a given natural language, collections of semantic interpretation rules and case frames, corpora, lexicons, and software tools, to name just a few. of the ways FINITE STRING help is in publishing catalogs of such resources. The following submission by Gerald Gazdar on sources of parsers within the paradigm of generalized phrase structure grammars inaugurates this section, called SOURCES. Note that we are interested in publishing catalogs — not descriptions of a single example — nor descriptions of items associated with a single site. This section will only be as good as the items submitted to it. Potentially it can contain some of the most valuable information available. We welcome and encourage your submissions.</abstract>
<title confidence="0.986888666666667">Sources Recent Computer Implementations of Phrase Structure Grammars</title>
<author confidence="0.999624">Gerald Gazdar</author>
<affiliation confidence="0.997707">Center for Advanced Study in the Behavioral Sciences</affiliation>
<address confidence="0.916122">202 Junipero Serra Boulevard Stanford, CA 94305, USA</address>
<note confidence="0.868573">Address after 1 September 1985:</note>
<affiliation confidence="0.971892">The University of Sussex School of Social Sciences</affiliation>
<address confidence="0.7446105">Arts Building Falmer, Brighton BN1 9QN England</address>
<abstract confidence="0.984757">This note lists twelve recent implementations of phrase structure grammars. Each entry begins with the name and address of the persons or institution primarily responsible. This is followed by summary details of the systems, together with information about the programming language(s) they were written in and the machines they run on. The entries conclude with a list of any publications or working papers that have resulted from the projects described. Many of the systems presuppose the grammatical formalism for phrase structure grammars outlined in Gazdar and Pullum (1982), and the terminology used in the entries below reflects that fact.</abstract>
<note confidence="0.94114325">Gazdar, Gerald and Pullum, Geoffrey K. 1982 Generalized Phrase Structure Grammar: A Theoretical Synopsis. University Linguistics Club, Bloomington, Indiana. Also distributed as University of Sussex Cognitive Science Research Research Paper 7 (CSRP 007).</note>
<author confidence="0.890179">John Bear</author>
<affiliation confidence="0.947795666666667">Linguistics Research Center P.O. Box 7247, University Station University of Texas</affiliation>
<address confidence="0.984233">Austin, TX 78712 USA</address>
<abstract confidence="0.8626908">An all paths, left corner chart paper that uses features for agreement and unbounded dependencies. It handles relative clauses, questions, and existentials. No semantics is implemented. The parser is written in Interlisp and runs a</abstract>
<address confidence="0.829812">Bear, John 1981 Gaps as Syntactic Features. MA dissertation.</address>
<affiliation confidence="0.995238">University of Texas at Austin. [Published by IULC, Bloomington,</affiliation>
<address confidence="0.772952333333333">Indiana, in 1982.1 Bear, John and Karttunen, Lauri 1979 PSG: A Simple Phrase Struc- Parser. Linguistic Forum 1-46.</address>
<author confidence="0.872065">Roger Evans</author>
<affiliation confidence="0.9510405">Cognitive Studies Programme University of Sussex</affiliation>
<address confidence="0.990881">Brighton BN1 9QN, UK</address>
<abstract confidence="0.995378846153846">ProGram is a grammar development system intended for use by linguists and computational linguists developing grammars for significant fragments of natural languages. It incorporates all aspects of the 1982 version of the Phrase Structure Grammar framework: features, metarules, immediate dominance and linear precedence (ID/LP) rules, feature instantiation, etc. The parser uses directly does not create the induced set of rules. ProGram allows the user to &apos;direct&apos; the parsing if he wishes. for portability, the system is written in runs on VAXes under VMS or and on other UNIX systems.</abstract>
<note confidence="0.3301329">a trademark of Bell Laboratories. Evans, Bogert and Gazdar, Gerald 1984 The ProGram Manual. University of Sussex Cognitive Science Research Paper 35 (CSRP 035). Keller, Bill 1984a Generating Logic from ProGram Parse Trees. University of Sussex Cognitive Science Research Paper 39 (CSRP 039). Keller, Bill 19846 A Lexicon Handler for the ProGram Grammar Development System. University of Sussex Cognitive Science Research Paper 40 (CSRP 040).</note>
<author confidence="0.999969">Mark Johnson</author>
<affiliation confidence="0.999986">Department of Linguistics University of California at San Diego</affiliation>
<address confidence="0.996015">La Jolla, CA 92093 USA</address>
<abstract confidence="0.971878428571429">A suite of small programs including a sentence generator features, instantiation, and a feature package defining unification, increment, etc.; and an Linguistics, Volume 10, Numbers 3-4, July-December 1984 The FINITE STRING Newsletter Sources LR(1) parser. The programs are written in FranzLisp and run on a VAX under UNIX.</abstract>
<author confidence="0.999673">James Kilbury</author>
<affiliation confidence="0.975127666666667">Techniiche Universitat Berlin Fachbereich Informatik (20) Institut fur Angewandte Informatik</affiliation>
<address confidence="0.950386666666667">Projekt KIT, Sekr. FR 5-8 Franklinstrasse 28/29 D-1000 Berlin 10, West Germany</address>
<note confidence="0.510237625">A modified Earley-Shieber parser using a &amp;quot;first&amp;quot; relation for the ID/LP formalism is currently being extended to cover all aspects of the GPSG framework including direct parsing with metarules. The system is implemented in Waterloo Prolog and runs on an ITEL AS/5-7031 (equivalent to IBM 370). Kilbury, James 1984a A Modification of the Earley-Shieber Algorithm Direct Parsing of Unpublished paper, Tech-</note>
<affiliation confidence="0.960265">nische Universitat Berlin.</affiliation>
<address confidence="0.949655">Kilbury, James 1984b GPSG-based Parsing and Generation. To</address>
<note confidence="0.279175666666667">in: Rollinger, Claus-Rainer, Ed., des (Text)- — Ansatze der Kunstlichen Intelligenz. Niemeyer, Tubingen.</note>
<author confidence="0.985345">Francis Jeffry Pelletier</author>
<affiliation confidence="0.999056">Department of Philosophy University of Alberta</affiliation>
<address confidence="0.980252">Edmonton, Canada T6G 2H1</address>
<abstract confidence="0.9758108">A recursive descent parser that incorporates metarules and slash categories and provides intensional logic translations. The parser does not incorporate features or the ID/LPformat for rules. The system is written in SNOBOL and runs on an Amdahl 470.</abstract>
<author confidence="0.998337">Stephen G Pulman</author>
<affiliation confidence="0.841291666666667">Computer Laboratory University of Cambridge Corn Exchange Street</affiliation>
<address confidence="0.999455">Cambridge CB2 3QG, UK</address>
<abstract confidence="0.996750625">A recursive transition network (RTN) based parser operating either depth or breadth first. The system compiles metarules and phrase structure rules into an RTN and then optimises it. Slash categories are included, but not other featural information. A minimal semantics is associated with one test grammar. The implementation is written in PDP11 and runs on a VAX under the VMS version of the POPLOG system.</abstract>
<keyword confidence="0.506107666666667">Pulman, Stephen 1983 Generalised Phrase Structure Grammar, Earley&apos;s Algorithm, and the Minimisation of Recursion. In: Sparck- K. and Wilks, Y, Eds., Natural Language Parsing.</keyword>
<note confidence="0.905684333333333">Ellis Horwood, Chichester, England: 117-131. Stephen 1984 Limited Domain Systems for Language Teachof Coling84.</note>
<author confidence="0.983033">Lenhart K Schubert</author>
<affiliation confidence="0.9999785">Department of Computing Science University of Alberta</affiliation>
<address confidence="0.9806">Edmonton, Canada T6G 2H1</address>
<abstract confidence="0.995332333333333">A left corner parser that prunes syntactically or semantically unusual alternatives. It incorporates features and morphological analysis, coordination and slash categories, but not metarules. Semantically, it provides first order logic translations. The system is intended as a front end for a question-answering system with access to</abstract>
<note confidence="0.876117285714286">a logic-based semantic net. Lisp and Pascal versions exist, both of which run on an Amdahl 470. Pelletier, Francis Jeffry and Schubert, Lenhart 1984 Two Theories for the Logical Form of Mass Expressions. of California: 108-111. Schubert, Lenhart 1982 An Approach to the Syntax and Semantics of in &apos;Conventionalized&apos; Phrase Structure Grammar. Proceeding of the 4th Biennial Conference of the Canadian Society for Studies of Intelligence: Lenhart 1984 On Parsing Preferences. of California: 247-250. Schubert, Lenhart and Pelletier, Francis Jeffry 1982 From English to Logic: Context-Free Computation of &apos;Conventional&apos; Logic Trans- Journal of Computational Linguistics 27-44.</note>
<author confidence="0.992529">Hidetoshi Shirai</author>
<affiliation confidence="0.99964125">Department of Mathematical Engineering and Instrumentation Physics Faculty of Engineering University of Tokyo</affiliation>
<address confidence="0.959279">Hongto 7-1-2, Bunkyo-ku Tokyo 113, JAPAN</address>
<abstract confidence="0.987005142857143">A deterministic parser based on PARSIFAL that incorporates metarules, raising constructions, and unbounded dependencies. A Montague semantics is associated with the parse trees. The system is written in Lisp on a Hitac M200H. Hidetoshi 1983 Deterministic Parser. In of the on Non-transformational Grammars. Tokyo: 57-61.</abstract>
<affiliation confidence="0.730247">SRI International [Stuart Shieber and Stan Rosenschein]</affiliation>
<address confidence="0.992377">333 Ravenswood Avenue Menlo Park, CA 94035 USA</address>
<abstract confidence="0.958437833333333">The PATR-I system employes a CKY parser and the feature system allows Boolean combinations of feature equalities to be interpreted on the fly. There are no metarules. The semantics is converted to first-ordr logic and passed to a theorem prover. The system is written in Interlisp and runs on a DEC20.</abstract>
<note confidence="0.76294525">Rosenschein, Stanley and Shieber, Stuart M. 1982 Translating English Logical Form. of the 20th Annual Meeting of the for Computational Lingustics: Linguistics, Volume 10, Numbers 3-4, July-December 1984</note>
<title confidence="0.593746">Sources The FINITE STRING Newsletter</title>
<affiliation confidence="0.94241">SRI International [Stuart Shieber et al.]</affiliation>
<address confidence="0.9928615">333 Ravenswood Avenue Menlo Park, CA 94035 USA</address>
<abstract confidence="0.974764">The PATR-II system exists in three implementations, two in Lisp (Interlisp on a DEC20 and Zetalsip on a Symbolics 3600) and one in Prolog (on a DEC20). The Lisp versions use a CKY parser whilst the Prolog version uses Earley&apos;s algorithm. The feature system uses directed acyclic graph structures and the semantics is embedded in that feature system. Morphological analysis is achieved by the method of Kimmo Koskenniemi (implemented in</abstract>
<note confidence="0.969805740740741">Lisp by Lauri Karttunen). Lauri 1984 Features and Values. of Coling84. Stanford, California: 28-33. Koskenniemi, Kimmo 1983 A Two Level Model for Morphological of the 8th International Joint Conference on Intelligence: Pereira, Fernando and Shieber, Stuart 1984 The Semantics of Gram- Formalisms Seen as Computer Languages. of California: 123-129. Shieber, Stuart 1983 Sentence Disambiguation by a Shift-reduce Parsing Technique. Technical Note 281. SRI International, Menlo California. Also in of the 21st Annual Meeting of Association for Computational Linguistics: and in Proceedings of the 8th International Joint Conference on Artificial Stuart 1984a Direct Parsing of ID/LP Grammars. Philosophy 135-154. Shieber, Stuart 198413 The Design of a Computer Language for Information. of Coling84. California: 362-366. Shiebert, Stuart; Stucky, Susan; Uszkoreit, Hans; and Robinson, Jane 1983 Formal Constraints on Metarules. Technical Note 283. SRI Menlo Park, California. Also in of the 21st Annual Meeting of the Association for Computational Lingustics: 22-27. Stucky, Susan 1983 Metarules as Meta-Node-Admissibility Conditions. Technical Note 304. SRI International, Menlo Park, California.</note>
<author confidence="0.934895">Henry Thompson</author>
<author confidence="0.934895">John Phillips</author>
<affiliation confidence="0.999415">Department of Artificial Intelligence University of Edinburgh</affiliation>
<author confidence="0.530701">Hope Park Square</author>
<address confidence="0.930152">Edinburgh EH8 9NW, UK</address>
<abstract confidence="0.983029333333333">MCHART is a chart parser intended for grammar testing. It incorporates all aspects of the 1982 GPSG framework: features, metarules, feature instantiation, coordination, etc. The semantics is currently being implemented. The system is written in Lisp and runs on a DEC10 and a VAX under UNIX.</abstract>
<note confidence="0.723947294117647">Thompson, Henry 1981 Chart Parsing and Rule Schemata in PSG. Proceedings of the 19th Annual Meeting of the Association for Compu- Lingustics: Thompson, Henry 1982 Handling Metarules in a Parser for GPSG. Edinburgh D.A.I. Research Paper No. 175. Also, in: Barlow, M.; D.; and Sag, I.A., Eds., in Generalized Phrase Structure Grammar: Stanford Working Papers in Grammatical Volume 2. University Linguistics Club, Bloomington, Indiana: 26-37. Thompson, Henry 1983 Crossed Serial Dependencies: A Low-Power Extension to GPSG. of the 21st Annual Meetof the Assocition for Computational Linguistics: Thompson, Henry and Phillips, John 1984 An Implementation of GPSG within the MCHART Parsing Framework. Unpublished paper, Department of Artificial Intelligence, University of Edinburgh. Linguistics, Volume 10, Numbers 3-4, July-December 1984</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Lauri Karttunen</author>
</authors>
<title>Features and Values.</title>
<date>1984</date>
<booktitle>Proceedings of Coling84.</booktitle>
<pages>28--33</pages>
<location>Stanford, California:</location>
<marker>Karttunen, 1984</marker>
<rawString>Karttunen, Lauri 1984 Features and Values. Proceedings of Coling84. Stanford, California: 28-33.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kimmo Koskenniemi</author>
</authors>
<title>A Two Level Model for Morphological Analysis.</title>
<date>1983</date>
<booktitle>Proceedings of the 8th International Joint Conference on Artificial Intelligence:</booktitle>
<pages>683--685</pages>
<marker>Koskenniemi, 1983</marker>
<rawString>Koskenniemi, Kimmo 1983 A Two Level Model for Morphological Analysis. Proceedings of the 8th International Joint Conference on Artificial Intelligence: 683-685.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fernando Pereira</author>
<author>Stuart Shieber</author>
</authors>
<title>The Semantics of Grammar Formalisms Seen as Computer Languages.</title>
<date>1984</date>
<booktitle>Proceedings of Coling84.</booktitle>
<pages>123--129</pages>
<location>Stanford, California:</location>
<marker>Pereira, Shieber, 1984</marker>
<rawString>Pereira, Fernando and Shieber, Stuart 1984 The Semantics of Grammar Formalisms Seen as Computer Languages. Proceedings of Coling84. Stanford, California: 123-129.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart Shieber</author>
</authors>
<title>Sentence Disambiguation by a Shift-reduce Parsing Technique. Technical Note 281. SRI International, Menlo Park, California. Also</title>
<date>1983</date>
<booktitle>in Proceedings of the 21st Annual Meeting of the Association for Computational Linguistics: 113-118, and in Proceedings of the 8th International Joint Conference on Artificial Intelligence:</booktitle>
<pages>699--703</pages>
<marker>Shieber, 1983</marker>
<rawString>Shieber, Stuart 1983 Sentence Disambiguation by a Shift-reduce Parsing Technique. Technical Note 281. SRI International, Menlo Park, California. Also in Proceedings of the 21st Annual Meeting of the Association for Computational Linguistics: 113-118, and in Proceedings of the 8th International Joint Conference on Artificial Intelligence: 699-703.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Stuart Shieber</author>
</authors>
<title>1984a Direct Parsing of ID/LP Grammars.</title>
<journal>Linguistics and Philosophy</journal>
<volume>7</volume>
<pages>135--154</pages>
<marker>Shieber, </marker>
<rawString>Shieber, Stuart 1984a Direct Parsing of ID/LP Grammars. Linguistics and Philosophy 7: 135-154.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Stuart Shieber</author>
</authors>
<title>198413 The Design of a Computer Language for Linguistic Information.</title>
<booktitle>Proceedings of Coling84.</booktitle>
<pages>362--366</pages>
<location>Stanford, California:</location>
<marker>Shieber, </marker>
<rawString>Shieber, Stuart 198413 The Design of a Computer Language for Linguistic Information. Proceedings of Coling84. Stanford, California: 362-366.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart Shiebert</author>
<author>Susan Stucky</author>
<author>Hans Uszkoreit</author>
<author>Robinson</author>
</authors>
<title>Formal Constraints on Metarules.</title>
<date>1983</date>
<booktitle>Technical Note 283. SRI International, Menlo Park, California. Also in Proceedings of the 21st Annual Meeting of the Association for Computational Lingustics:</booktitle>
<pages>22--27</pages>
<marker>Shiebert, Stucky, Uszkoreit, Robinson, 1983</marker>
<rawString>Shiebert, Stuart; Stucky, Susan; Uszkoreit, Hans; and Robinson, Jane 1983 Formal Constraints on Metarules. Technical Note 283. SRI International, Menlo Park, California. Also in Proceedings of the 21st Annual Meeting of the Association for Computational Lingustics: 22-27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susan Stucky</author>
</authors>
<title>Metarules as Meta-Node-Admissibility Conditions.</title>
<date>1983</date>
<booktitle>Technical Note 304. SRI International,</booktitle>
<location>Menlo Park, California.</location>
<marker>Stucky, 1983</marker>
<rawString>Stucky, Susan 1983 Metarules as Meta-Node-Admissibility Conditions. Technical Note 304. SRI International, Menlo Park, California.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Henry Thompson</author>
<author>John Phillips</author>
</authors>
<institution>Department of Artificial Intelligence University of Edinburgh</institution>
<marker>Thompson, Phillips, </marker>
<rawString>Henry Thompson and John Phillips Department of Artificial Intelligence University of Edinburgh</rawString>
</citation>
<citation valid="false">
<authors>
<author>Hope Park</author>
</authors>
<title>Square Edinburgh EH8 9NW,</title>
<publisher>UK</publisher>
<marker>Park, </marker>
<rawString>Hope Park Square Edinburgh EH8 9NW, UK</rawString>
</citation>
<citation valid="true">
<authors>
<author>Henry Thompson</author>
</authors>
<title>Chart Parsing and Rule Schemata in PSG.</title>
<date>1981</date>
<booktitle>Proceedings of the 19th Annual Meeting of the Association for Computational Lingustics:</booktitle>
<pages>167--172</pages>
<marker>Thompson, 1981</marker>
<rawString>Thompson, Henry 1981 Chart Parsing and Rule Schemata in PSG. Proceedings of the 19th Annual Meeting of the Association for Computational Lingustics: 167-172.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Henry Thompson</author>
</authors>
<title>Handling Metarules in a Parser for GPSG. Edinburgh D.A.I.</title>
<date>1982</date>
<booktitle>Developments in Generalized Phrase Structure Grammar: Stanford Working Papers in Grammatical Theory,</booktitle>
<tech>Research Paper No. 175.</tech>
<volume>2</volume>
<pages>26--37</pages>
<institution>Indiana University Linguistics Club,</institution>
<location>Also, in:</location>
<marker>Thompson, 1982</marker>
<rawString>Thompson, Henry 1982 Handling Metarules in a Parser for GPSG. Edinburgh D.A.I. Research Paper No. 175. Also, in: Barlow, M.; Flickinger, D.; and Sag, I.A., Eds., Developments in Generalized Phrase Structure Grammar: Stanford Working Papers in Grammatical Theory, Volume 2. Indiana University Linguistics Club, Bloomington, Indiana: 26-37.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Henry Thompson</author>
</authors>
<title>Crossed Serial Dependencies: A Low-Power Parseable Extension to GPSG.</title>
<date>1983</date>
<booktitle>Proceedings of the 21st Annual Meeting of the Assocition for Computational Linguistics:</booktitle>
<pages>16--21</pages>
<marker>Thompson, 1983</marker>
<rawString>Thompson, Henry 1983 Crossed Serial Dependencies: A Low-Power Parseable Extension to GPSG. Proceedings of the 21st Annual Meeting of the Assocition for Computational Linguistics: 16-21.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Henry Thompson</author>
<author>John Phillips</author>
</authors>
<title>An Implementation of GPSG within the MCHART Parsing Framework. Unpublished paper,</title>
<date>1984</date>
<institution>Department of Artificial Intelligence, University of Edinburgh.</institution>
<marker>Thompson, Phillips, 1984</marker>
<rawString>Thompson, Henry and Phillips, John 1984 An Implementation of GPSG within the MCHART Parsing Framework. Unpublished paper, Department of Artificial Intelligence, University of Edinburgh.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>