<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.79329">
American Journal of Computational Linguistics Microfiche 62
</note>
<sectionHeader confidence="0.642132" genericHeader="abstract">
EXPLAtIATION CAPABILITIES
OF PRODUCTION-BASED CONSULTATION SYSTEMS
</sectionHeader>
<note confidence="0.9133835">
A. CARLISLE SCOTT, WILLIAM J. CLANCEY,
RANDALL DAVIS, AND EDWARD H. SHORTLIFFE
Research sponsored in part by Bureau of Health Services Research
and Evaluation, Grant HS01544; Biotechnology .Resources, Grant
RR-00785; Advanced Research Projects Agency, ARPA Contract DAHC-
15-73-C-0435; National Institute of Health, Grant GM-01922.
</note>
<title confidence="0.1632315">
Copyright® 1977
Association for Computational linguistics
</title>
<page confidence="0.433141">
2
</page>
<sectionHeader confidence="0.669442" genericHeader="introduction">
Summary
</sectionHeader>
<bodyText confidence="0.992076266666666">
A computer program that models an expert in a given domain is more
likely to be accepted by experts in that domain, and by non-experts seeking
it advice, if the system can explain its actions. An explanation
capability not only adds to the system s credibility, but also enables the
non-expert user to learn from it. Furthermore, clear explanations allow an
expert to check the system&apos;s &amp;quot;reasoning&amp;quot;, possibly discovering the need for
refinements and additions to the system s knowledge base&apos; In a developing
system, an explanation capability can be used as a debugging aid to verify
that additions to the system are working as they should,
This paper di&amp;cusses the general characteristics of explanation
systems. what types of explanations they should be able to give, what types
of Knowledge will be needed in order to give these explanabiohs, and how
this knowledge might be organized. The explanation faallity in MYCIN
[5,6,/] is discussed as an illustration of how the various pnoblems might be
approached.
</bodyText>
<page confidence="0.834914">
3
</page>
<tableCaption confidence="0.962422">
Table of Contents
</tableCaption>
<table confidence="0.678293375">
Section Page
Subsection
1. General Discussion . • • • • • . • • . • • . 4
1.1 Consultative Production Systems . • . • . . . 4
1.2 Performance Characteristics of an Explanation
Capability . • • • • • . • • . . . 7
1.3 Knowledge Requirements of an Explanation Capability . . 9
1.4 Program Design Considerations . . . . . . . . 12
An Example -- MYCIN . . . • . . . . . . . . 16
2.1 Overview . . . • . • . . . . . . 16
2.2 Organization of Knowledge in MYCIN . . . . . . . 19
2.3 Scope of MYCIN&apos;s Explanation Capability . . . . . . 25
2.4 Understanding The Question . . . . . . . • 30
2.5 Answering the Question . . . . . . . . . . . 36
Conclusions • • • • • • • • • • . . . 48
1 General Discussion
</table>
<subsectionHeader confidence="0.976877">
1.1 Consultative Production Systems
</subsectionHeader>
<bodyText confidence="0.980747863636364">
A consultation program plays the role of an expert consultant in
some domain, giving advice or answers to non-experts with problems in the
domain. Users will often want to know how the system arrived at its results
during a particular consultation. This Paper explains how the
implementation of such a program as a Production system can facilitate
program-generated explanations.
A production system [2] consists of three basic components. a set of
production rules, a data base which is both used and updated by these rules,
and a rule interpreter. A production rule often is in the form of a
situation-action rule. it describes a situation and a set of actions to be
taken if this situation is found to exist. The rule interpreter determines
the order in which rules will be tried, checks to see if the situations
exist, and undertakes the required actions. It also determines how many of
the potentially useful rules will be used. only the first (where ordering
may be predetermined or comouted dynamically), all possible rules, or enough
rules to satisfy some criterion that the interpreter uses.
In some production systems, rules are always tried in a
predetermined order. In others, the order in which rules are tried varies
with different consultations, since a rule will be tried as soon as the rule
Interpreter determines that it may be useful. In such systems, the common
alternatives are data-directed rule invocation, in which a rule is
considered &amp;quot;useful&amp;quot; if its situation part matchem the data base, and goal-
</bodyText>
<note confidence="0.50298">
II
</note>
<sectionHeader confidence="0.294972" genericHeader="method">
5
</sectionHeader>
<bodyText confidence="0.94768475">
directed rule invocation, in which a rule is &amp;quot;useful&amp;quot; if its action part
will help the system reach its current goal. Many systems use a combination
of goal- and data-directed rule invocation.
A consultative production system need not be a psychological model,
imitating a human s reasoning process. The important point is that the
system and a human expert use the same (or similar) knowledge about the
domain to arrive at the same answer to a given problem. The system&apos;s rules
and data base can be viewed as a knowledge base containing the domain-
specific knowledge of an expert as well as facts about a particular Problem.
When a rule is used, its actions make changes to the data base which 2re the
system&apos;s decisions or deductions. Thus, a rule can be thought of as a piece
of judgmental knowledge, using the judgment and knowledge of ap expert to
make deductions.
The process of trying rules and taking actions can be thought of as
&amp;quot;reason2ng&amp;quot;, and explanations consist of showing how rules used information
provided by the user to make various intermediate decauctions and finally to
arrive at the answer. If the information contained in these ru]es is
sufficient to show why an action was taken (without getting into programming
details), an explanation can consist of printing each rule that was used (or
an English equivalent of what the rule means.)
</bodyText>
<figure confidence="0.43473">
6
</figure>
<figureCaption confidence="0.943776">
Figure 1. A Production-Based Consultation, System
with Explanation Capability
</figureCaption>
<bodyText confidence="0.997438076923077">
The three coMponents of a production system (a
RULE INTERPRETER, a set of PRODUCTION RULES, and a DATA
BASE) are augmented by an EXPLANATION CAP4BILITY. The
data base is made up of general facts about the system&apos;s
domain of expertise, facts that the user enters about a
specific problem, and deductions made about the problem
by the system&apos;s rules. These deductions form the basis
of the system&apos;s consultative advice.
The explanation capability makes use of the
system&apos;s knowledge base to give the user explanations.
This knowledge base is made up of static
domain-spenific knowledge (both factual and judgmental)
and dynamic knowledge specific to a particular problem.
</bodyText>
<figure confidence="0.998549555555555">
Static Knowledge
PRODUCTION RULES
JUdgmental Knowledge
about domain
DATA BASE
General Factual
Knowledge of
domain
..111M I■16.
-1 ---- RULE INTERPRETER
1
EXPLANATION
CAPABILITY
11111MS •
1
A III 111 I I I I PI I I MI I • I IN P
L■www.ipm.■■■
Dynamic Knowledge
explanations
consultative I
advice
-ii Facts about
entered by user
]
the problem
Deductions
Imade by system 1(7-1
</figure>
<subsectionHeader confidence="0.826515">
1.2 Performance Characteristics of an Explanation Capability
</subsectionHeader>
<bodyText confidence="0.930419391304348">
The purpose of an explanation capability (EC) is to give the user
access to as much of the system s knowledge as possible. Ideally, it should
be easy for a user to get a complete, understandable answer to any sort of
question about the system&apos;s knowledge and operation -- both in general, and
with reference to a particular consultation. This =plies three major goals
in the development of an explanation capability.
1) To ensure that the EC can handle questions about all
relevant aspects of the system&apos;s knowledge and actions. It
should be capable of giving a few basic types of
explanations, for example.
How it made a certain decision
How it used a piece of information
What decision it made about some subproblem
Why it didn t use a certain piece of information
&apos;Why it failed to make a certain decision
Why it required a certain piece of information
Why it didn t require a certain piece of information
How it will find out a gertain piece of information
[while the consultation is in progress]
What the system is currently doing? [while the
consultation Is in progress]
The suecific set of explanation types which are chosen as
basics, however, will depend on the particular system.
</bodyText>
<listItem confidence="0.9690242">
2) To enable the user to get an explanation which
answers the question completely and comprehensively.
3) To make the EC easy to use. A novice should be able
to use the EC without first spending a large amount of time
learning how to request explanations.
</listItem>
<bodyText confidence="0.909707642857143">
We will distinguish two slightly different functions for an EC and
divide it into two components. the reasoning-status checker (RSC) to be used
during the consultation, and the general question answerer (GQA) to be used
during the consultation or after the system has printed its results.
A reasoning-status checker will answer questions asked during&apos;a
consultation about the status of the syste7n s reasoning process. A few
8
simple commands are often sufficient to handle the questions that the RSC is
expected to answen
A genera question-answer will answer questions about the current
state of the stem s knowledge base, including both static domain
khowledge and fants accumulated ducing the consultation. A GQA will often
need the ability to recognize a wide range of question types about many
aspects of the system&apos;s knowledge. For this reason, it might be difficult to
define a few simple commands which would be easy to learn and still cover
all the possible questions that might be asked. Consequently, natural-
language processing in this component may be important to an explanation
system s acceptability.
In an interactive consultation, the system periodically requests
information about the problem. This offers the user an opportunity to
request explanations while the consultation is in progress. In non-
interactive consultations, the user has no opportunity to interact with the
system until after it has printed its conclusions. Unless there is some
mechanism allowing a user to interrupt the reasoning process and ask
questions, the explanation capability for such a system will be limited to
questions about the system&apos;s final knowledge state. It will have no
reasoning-status checker, and its general. question-answerer will only be
accessible at the termination of the consultation.
</bodyText>
<page confidence="0.547916">
9
</page>
<subsectionHeader confidence="0.995996">
1.3 Knowledge Requirements of an Explanation Capability
</subsectionHeader>
<bodyText confidence="0.984895217391304">
An EC must know what is In the system&apos;s knowledge base, and how it
is organized. In order to give explanations of the system&apos;s current (or
previous) actions, an EC also needs to understand how the system s rule
interpreter works. when ruLes Lill be tried how they can fail, what causes
the interpreter to try one rule but not another etc. This general &amp;quot;schema&amp;quot;
for how or why certain rules are used, together with a comprehensive record
of the specific actions taken during a particular consultation, can be used
at a basis fbr explaining the results of that consultation.
A reasoning-status checker will need d record of what the system has
done so far in order to explain how it arrdyed at the current step. General
knowledge of how the rule interpreter works is necessary in order to explain
where the current step will lead. The ability to understand individual
rules also may be necessary to the extent that the content of a rule may
explain why it was necessary to use this rule, or may affect wnich future
rules will be tried.
A general question-answerer will need more information about the
system since the scope of its explanations is much broader. its task is to
answer general questions about the system&apos;s knowledge base. To do this, it
must know how the system stores knowledge about its area of expertise (the
static knowledge with which it starts each consultation) and how it stores
facts gathered during a particular consultation (its dynamic knowledge).
These two types of information will allow a GOA to answer questions about
the substance and extent of the production system&apos;s current knowledge.
</bodyText>
<page confidence="0.688727">
10
</page>
<bodyText confidence="0.998549470588235">
If an explanation capability also is to provide information about
how the system arrived at the facts that are currently in its dynamic
knowledge base, the GQA will need all the information that a reasoning-
status checker uses. a detailed record of the consultation, an understanding
of the rule interpreter, and the ability to understand rules.
These three types of knowledge could be supplemented with a limited
amount of general information about such things as elementary logic, set
theory, and arithmetic comparisons. This would allow the GQA to answer more
complicated questions about why the system&apos;s knowledge base is In its
current state, and to answer questions involving pelationships between
different facts in the knowledge base.
The nature of the consultation domain as well as what primary
purpose the explanation capability is to serve will influence the range of
questions that an EC should handle. In some systems, a simple retrieval of
facts may suffice, while others may need to give detailed description of the
production system&apos;s &amp;quot;decision&amp;quot; process and to make a number of deductions
from facts that it has.
</bodyText>
<page confidence="0.868017">
11
</page>
<figureCaption confidence="0.991121">
Figure 2. Knowledge Requirements of an
</figureCaption>
<subsectionHeader confidence="0.991152">
Explanation Capability
</subsectionHeader>
<bodyText confidence="0.9572624">
Access to the consultation system&apos;s knowledge
base is a prerequisite for performance of the
explanation capability. Other types of knowledge
may be added to the system to enable the EC to
answer a wider range of questions,
</bodyText>
<figure confidence="0.980788652173913">
MISCELLANEOUS DOMAIN-INDEPENDENT
KNOWLEDGE
&apos;set theory, logic &apos;arithmetic&apos;
,
PROCEDURAL KNOWLEDGE ABOUT THE
CONSULTATION SYSTEM
Knowledge of
production
rules
Knowledge of
the rule
interpreter
KNOWLEDGE BASE OF CONSULTATION SYSTEM
.
Static
Knowledge
Dynamic
Knowledge
HISTORICAL KNOWLEDGE OF CONSULTATION
Record of all deductions made during
the consultation
#
12
</figure>
<subsectionHeader confidence="0.956889">
1.4 Program Design Considerations
</subsectionHeader>
<bodyText confidence="0.999935111111111">
The last two sections described what an explanation capability is,
Outlining what tasks it should perform, and what it requires in order to
periorm these tasks. In this section, we discuss design considerations for
the parent production system that will enable its EC to meet the
requirements that were outlined in the previous section. This discussion is
not meant to define the &amp;quot;correct&amp;quot; way of representing or organizing
knowledge, but rather tP mention certain factors which should be taken into
account when deciding what representation or organization will be best for a
given production system.
</bodyText>
<subsectionHeader confidence="0.607965">
1.4.1 Question Types
</subsectionHeader>
<bodyText confidence="0.9923322">
The first step is to decide what basic types of questions the system
should be able to answer. This will have a direct influence on how the EC
is implemented. It is important, however to make the initial design
flexible enough to accomodate possible future additions to the set of
basics.
</bodyText>
<subsectionHeader confidence="0.648231">
If the basic forms are diverse enough, some level of natural-
</subsectionHeader>
<bodyText confidence="0.997804333333333">
language understanding may be necessary. The degree of sophistication of
the natural-language processor will depend upon what kind of performance is
expected of the EC
</bodyText>
<subsectionHeader confidence="0.991348">
1.4.2 Organization of Knowledge
</subsectionHeader>
<bodyText confidence="0.963016333333333">
The format and organization of various components of the production
system&apos;s knowledge base will affect the design or an EC. Individual pieces
of static and dynamic knowledge presumably will be organized in some fashion
</bodyText>
<page confidence="0.72678">
13
</page>
<bodyText confidence="0.902648909090909">
which makes them accessible during the consultation. A GOA facility could
make use of such organization to help in finding the information needed to
answer a question. The less organized the knowledge base the more
difficult will, be the task of the EC, as more complicated routines must be
used in order to find the desired information.
During the course of the consultation, the system should keep a
record of its actions for vse by both components of the explanation
capability. Where the ordering of events is important (e.g. when the action
of one rule establishes the situation necessary for a subsequent rule to
4ucceed), the record should be structured in a mariner which reflects the
ordering of events as well as the reasons why each event occurred.
</bodyText>
<subsectionHeader confidence="0.985551">
1.4.3 Knowledge of What Rules Mean
</subsectionHeader>
<bodyText confidence="0.990348692307692">
The explanation capability will need to understand some of the
semantics of individual production rules. This requirement could be met by
having the system&apos;s knowledge base include a description of what each rule
means, encoded in some form which would be of use to the EC. If the format
of the system&apos;s rules is highly stylized and well-defined, however, it might
be possible instead to implement a mechanism for &amp;quot;reading&amp;quot; the rules. the
language in which the rules themselves are written could be defined. A
high-level description of the individual components of this language,
telling what each component means, could be used to enable the EC to read
and understand rules. If the rule set consists of a large number of rules,
and these rules are composed entirely of a relatively small number of
primitive elements, this second approach has the advantage that less
information needs te be stored -- a description of each of the primitive
</bodyText>
<page confidence="0.867256">
14
</page>
<bodyText confidence="0.5168">
components, as opposed to a description of each rule. When new rules are
added to the system, the first approach requires that descriptions of these
rules must be added. With the second approach, provided that the new rules
aee made up of the standard rule components, no additional descriptiVe
information would be needed by the explanation capability.
</bodyText>
<subsubsectionHeader confidence="0.337742">
1.4.4 Knowledge of the Rule Interpreter
</subsubsectionHeader>
<bodyText confidence="0.980792846153846">
Enabling an EC to understand how the rule interpreter works
analogous to enabling it to understand rules It must be able to &amp;quot;read&amp;quot; the
interpreter or else it must have access to some stored description of how
the interpreter works. there is a third approach for understanding the rule
interpreter, one which would not be feasible for understanding a larcce
number of rules. Knowledge of how the interpreter works could be built into
the EC -- the information would not be stated explicitly, but would be used
implicitly by the programmer in writing the actual code for the explanation.
capability. The EC can be thought of as a number of &amp;quot;specialists&amp;quot;, each
capable of giving a single type of explanation. There could he one
specialist for each of the basic question types that the system can answer.
Each of the specialists needs only a small amount of information atIout the
rule interpreter which could be built into its &amp;quot;explaining&amp;quot; program.
</bodyText>
<subsectionHeader confidence="0.942075">
1.4.5 Other Domain-Independent Knowledge
</subsectionHeader>
<bodyText confidence="0.894598">
The final type of knowledge that some general quest3on-answering
facilities will need is information allowing deductions to be made from
facts in the knowledge base. The representation and extent o4&apos; this
knowledge will depend upon the types of questions that the system is to
</bodyText>
<page confidence="0.668691">
15
</page>
<bodyText confidence="0.999939692307692">
answer If logic is needed only to determine the answers to questions of a
certain type for example, the necessary deductions could be built into the
specialist for answering that type of question. On the other hand, in some
explanation capibilities, the GOA will be expanded to do more than simply
give explanations of the system s actions or to query its data base -- it
will be expected to answer a wide range of questions involving various kinds
.of inferences about the knowledge base. Such a 00A will need to check for
equality or set membership, make arithmetic comparisons, or make logical
deductions. In general most information of this type can be embodied ln a
new kind of specialist which is an expert at some sort of logical deduction
or comparison. Representation of this sort of general knowledge will become
important as the GOA becomes not simply an explanation tool, but also a
deductive one.
</bodyText>
<sectionHeader confidence="0.582328" genericHeader="method">
2 An Example -- MYCIN
</sectionHeader>
<subsectionHeader confidence="0.992188">
2.1 Overview
</subsectionHeader>
<bodyText confidence="0.999385590909091">
MYCIN [5,6,7] is an example of a production-basea consultation
system with a well-developed explanation capability. A production run is an
infectious disease therapy consultation in which MYCIN is the infectious
disease expert, and the user is a doctor who wants advice about the
treatment of a patient.
Knowledge that is gathered during the consultation is organized into
attribute-object-value triples. In response to questions during the
consultation, the user enters information about the existence of several
objects, called contexts. the patient, infections that the patient has,
organisms which may be causing these infections, cultures that were taken,
and drugs that were given. The task of the consultation system is to
determine the values of various attributes (called clinical parameters) of
these contexts. For example, AGE is a clinical parameter of the patient;
IDENTITY is a clinical parameter of an organism, with STREPTOCOCCUS as a
possible value; SITE is a parameter of a culture, with BLOOD as a possible
value.
A clinical parameter&apos;s value may be determined by asking the user,
or by using decision rules. The parameter is said to be &amp;quot;traced&amp;quot; when the
system has done all it can to find out the parameter&apos;s value. Tracing a
parameter involves asking the user for a value (where applicable) and trying
rules for determining the value of that parameter. Rules are tried until
the value is known with certainty or there are no rules left to use.
</bodyText>
<figure confidence="0.2192635">
16
17
</figure>
<bodyText confidence="0.99041137037037">
Each decision rule has a situation part called its PREMISE. This
congists of predicates, conditions that are tested to determine whether the
indicated situation exists. If.the conditions in a rule&apos;s PREMISE are true,
its ACTION will be evaluated, giving new (or updated) values to some
parameter(s). Before a condition in a rule&apos;s PREMISE can be tested, the
parameters that it mentions must be traced. For example, before rule 209
(below) can succeed, the system must know the site of the culture, the
portal of entry of the organism, and whether the patient is a compromised
host. If any of the clauses in the PREMISE is false, or if the system is
unable to find out the value of one of these parameters, the rule will fail.
RULE209
(PREMISE) If: 1) Tie site of the culture is blood, and GI, and
(ACTION) 2) The portal of entry of the organism is an organism
3) The patient is a compromised host
Then: It is definite (1.0) that bacteroides is
for which therapy should cover
Associated with each attribute-object-value triple is a certainty
factor -- a number between -1 and 1 inclusive which indicates how strongly
the system believes that the attribute of the object has the indicated
value. The user may modify the answer to any question with a certainty
factor, and all rules make conclusions which specify a degree of certainty
as well as attribute, object, and value.
Each context is named uniquely, allowing the system to refer to
CULTURE-2, meaning the second culture, or ORGANISM-3, meaning the third
organism. Moreover, the contexts are organized into a tree known as the
context tree, which defines relationships among them. For example, an
organism is the direct descendent of the culture from which it was isolated.
</bodyText>
<page confidence="0.426856">
18
</page>
<bodyText confidence="0.941205666666667">
In the portion of a tree shown in Figure 3 ORGANISM-3 hangs under CULTURE-2
indicating that STREPTOCOCCUS was isolated from the BLOOD culture.
INFECTION-2
</bodyText>
<figure confidence="0.885884166666667">
IINFECTION: PNEUMONIA
WHENINFFCT: 2/6/76
CULTURE-2 CULTURE-3
ISITE: BLOOD SITE: SPUTUM
ORGANISM-3
IDENTITY: STREPTOCOCCUS
</figure>
<figureCaption confidence="0.999627">
Figure 3. Portion of a Context Tree Showing Some
</figureCaption>
<sectionHeader confidence="0.333606" genericHeader="method">
Contexts, Clinical Parameters,
</sectionHeader>
<subsectionHeader confidence="0.863405">
and Values
</subsectionHeader>
<bodyText confidence="0.999976857142857">
The rule interpreter (MYCIN&apos;s control structure, described in detail
in [7]) chooses the rules which should be used in the particular
consultation, interprets these rules, and creates a record of its actions
for use by the explanation system. Rules are invoked to find out values of
parameters in a given context. A rule is applied to the lowest context in
the context tree whose parameters are mentioned by the rule. The rule can
use (or conclude about) parameters of this context, or of any context which
is its ancestor in the tree. For example, if RULE209 were applied to
ORGANISM-3 (see Figure 3) it would need the SITE of the culture from which
the STREPTOCOCCUS was isolated. The tree indicates that this is CULTURE-2.
Rather than being a sequential cycle through the rule set, where
each rule is tried in some predetermined order, the flow of control is goal-
directed. This means that only rules which conclude about the current goal
(to find out the value of a given parameter) are examined. The PREMISE of
</bodyText>
<subsectionHeader confidence="0.396377">
19
</subsectionHeader>
<bodyText confidence="0.991429333333333">
one of these rules may need to use some parameter whose value is unknown.
This sets up a subgoal, namely to determine the value of this parameter so
that the rule can be used. MYCIN&apos;s goal-directed approach means that the
system (and not the user) takes the initiative during a consultation. The
user will be asked about only those parameters Which may be relevant to the
particular patient&apos;s case.
</bodyText>
<subsectionHeader confidence="0.999834">
2.2 Organization of Knowledge in MIN
</subsectionHeader>
<bodyText confidence="0.977590285714286">
In order to give explanations of a consultation system&apos;s decisions,
an explanation capability must have access to the system&apos;s knowledge base.
More informative explanations can be given if the EC also has knowledge of
how the system works, a record of the consultation, and possibly some
domain-independent knowledge. This section discusses how MYCIN meets these
requirements.
The system&apos;s knowledge base consists of static medical knowledge
plus dynamic knowledge about a specific consultation. Static knowledge is
further classitied as factual and judgmental. Factual knowledge consists of
facts which are medically valid independent of the particular case.
Judgemental knowledge consists of production rules representing deductions
which might be made, conditional an what is already known about the case.
The format of production rules and of dynamic knowledge has already been
described.
</bodyText>
<subsectionHeader confidence="0.6514795">
20
2.2.1 Organization of Factual Knowledge
</subsectionHeader>
<bodyText confidence="0.997851166666667">
As discussed in Section 2.1, all knowledge which is gathered during
the consultation is organized into attribute-object-value triples. For
consistency, many facts in the static knowledge base also have this format.
This includes objects such as bacteria and antibiotics, and attributes such
as the staining characteristics of a bacterium or the recommended dosage of
an antibiotic:
</bodyText>
<sectionHeader confidence="0.813152666666667" genericHeader="method">
ATTRIBUTE OBJECT VALUE
GRAM E.COLI GRAMNEG
DOSE GENTAMICIN 1.7 mg kg q8h IV (or IM)
</sectionHeader>
<bodyText confidence="0.92628675">
The remainder of the factual knowledge consists of lists and tables:
pieces of medical knowledge, organized in such a way that they can be used
to augment the producbion rules. For example, one such piece of knowledge
is the list of the possible culture sites which are normally nonsterile.
</bodyText>
<sectionHeader confidence="0.890121" genericHeader="method">
NONSTERILESITES: (CERVIX CUTANEOUS-ULCER LOCHIA NOSE SKIN
STOOL THROAT URETHRA VAGINA)
</sectionHeader>
<bodyText confidence="0.967829333333333">
The likely pathogens asEociated with the different culture sites are
organized in a table, with different entries for the different sites.
PATH-FLORA
</bodyText>
<sectionHeader confidence="0.896239" genericHeader="method">
THROAT: (STREPTOCOCCUS-PNEUMONIAE STREPTOCOCCUS-
GROUP-A NEISSERIA-MENINGITIDIS)
URINE: (E.COLI PSEUDOMONAS ENTEROCOCCUS PROTEUS
KLEBSIELLA ENTEROBACTER)
SKIN: (STAPHYLOCOCCUS-COAG-POS STREPTOCOCCUS-
GROUP-A STAPHYLOCOCCUS-COAG-NEG)
CERVIX: (STREPTOCOCCUS CLOSTRIDIUM-GANGRENE
</sectionHeader>
<bodyText confidence="0.925808181818182">
NEISSERIA-GONORRnA STREPTOCOCCUS-
GROUP-A)
21
Production rules can make use of this tabularized information:
RULE058
If: 1) The site of the culture is one of: those sites
that are normally nonsterile, and
2) This organism and at least one of the likely
pathogens associated with the site of the culture
agree with respect to the following properties:
gram morph air
Then: Mere is strongly suggestive evidence (.9) that
each of these pathogens is the identity of the
organism
Note that the information in the table could have been organized as
attribute-object-value triples (where the object would be a culture site).
If this had been done, however, the above rule could not have been written.
To accomplish the same purpose (without a change in the control structure),
the 3ystem would have needed several rules -- a separate one for each entry
in the table. Structuring certain facts into lists and tables endbles
individual production rules to express general theories which allow a number
of specific deductions to be made.
</bodyText>
<subsubsectionHeader confidence="0.832488">
2.2.2 Procedural Knowledge
</subsubsectionHeader>
<bodyText confidence="0.962267636363636">
Each of MYCIN&apos;s approximately 400 rules is composed of a small
number of conceptual primitives. A total of 60 such primitives make up the
language in which rules Are written. This design facilitated the
implementation of a mechanism for translating rules into English (described
in detail in [71). Each primitive functions has a translation template with
blanks to be filled in with translations of the function&apos;s arguments. A
large part of MYCIN&apos;s explanation capability depends on this ability to
translate rules into a form that the user can understand.
22
Having a small number of rule components also facilitates the
examination of rules to see which might be applicable to the explanation at
hand. MYCIN&apos;s knowledge of production rules, therefore, takes the form of a
general mechanism for &amp;quot;reading&amp;quot; rules. On the other hand, no attempt has
been made to read the code of the rule interpreter. Procedural knowledge
about the interpreter is embodied in &amp;quot;specialists&amp;quot;, each capable of
answering a single type of question. Each specialist knows how the relevant
part of the control structure works and what pieces of knowledge it uses.
In order to understand rules, the system&apos;s various specialists use a
small amount of knowledge about rules in general, together with descriptions
or templates of each of the rule components. As an example, the following
rule is composed of the units SAND, SAME, and CONCLUDE.
RULE009
</bodyText>
<sectionHeader confidence="0.7322775" genericHeader="method">
PREMISE: (SAND (SAME CNTXT GRAM GRAMNEG)
(SAME CNTXT MORPH COCCUS))
ACTION: (CONCLUDE CNTXT IDENTITY NEISSERIA TALLY 800)
[Translation:
</sectionHeader>
<bodyText confidence="0.949003076923077">
If: 1) The gram stain of the organism is gramneg, and
2) The morphology of the organism is coccus
Then: There is strongly suggestive (.8) that the identity
of the organism is Neisseria]
[When the rule is used, the LISP atom CNTXT is bound to
some object, the context to which the rule is applied
(see Section 2.1)]
The template for CONCLUDE is shown below. This describes each of the
arguments to the function: first, an object (context); second, an attribute
(clinical parameter); third, a value for this parameter; fourth, the tally
or degree of certainty of the PREMISE; and last, the certainty factor -- a
measure of how strong our belief in this conclusion would be, assuming that
the PREMISE of the rule is definitely true.
</bodyText>
<sectionHeader confidence="0.490366" genericHeader="method">
CONCLUDE
TEMPLATE: (CNTXT FARM VALU TALLY CF)
</sectionHeader>
<bodyText confidence="0.995291307692308">
To illustrate how this is used, consider an explanation that
involves finding all rules which could conclude that the identity of an
organism is Neisseria. The appropriate specialist would start with those
rules which the system uses to conclude values for the parameter IDENTITY.
Using templates of the various ACTION functions which appear in each of
these rules, the specialist picks out only those (like RULE009) which have
NEISSERIA in their VALU slot.
This also illustrates the sort of knowledge that can be built into a
specialist. The specialist knew that the control structure uses stored
lists telling which rules can be used to determine the value of each
parameter. Furthermore, it knew that it was necessary to look only at the
rules&apos; ACTIONs because it is the ACTION that concludes facts, while the
PREMISE uses facts.
</bodyText>
<subsubsectionHeader confidence="0.563155">
2.2.3 The History Tree
</subsubsectionHeader>
<bodyText confidence="0.99821625">
Many of the explanation capability&apos;s specialists need a record of
the consultation. This record is built during the consultation, and is
organized into a tree structure called the history tree which reflects
MYCIN&apos;s goal-directed approach. Each node in the tree represents a goal and
contains information about how the system tried to accomplish this goal: by
asking the user or by trying rules. Associated with each rule is a record
of whether the rule succeeded, and if not, why it failed. If trying some
rule causes the system to trace a new parameter, thereby setting up a
</bodyText>
<page confidence="0.631635">
23
</page>
<bodyText confidence="0.8872626">
24
subgoal, the node for this subgoal is the offspring of the node containing
the rule which caused the tracing. Figure 4 illustrates how part of A
history tree might look. In this example, RULE003 caused tracing of the
parlImeter CATEGORY which is used in the PREMISE of this rule.
</bodyText>
<figure confidence="0.978940941176471">
1
goal: IDENTITY of ORGANISM-1
ask: question 7
rules: RULE009 (failed, clause 1) ... RULE003 (succeeded) ...
1.....
goal: GRAM of ORGANISM-1
ask: question 11
[no rules]
I
r
goal: CATEGORY of ORGANISM-1
rules: RULE037 (succeeded) ...
1
goal: HOSPITAL-ACQUIRED of
ORGANISM-1
ask: question 15
[no rules]
</figure>
<figureCaption confidence="0.999942">
Figure 4. Portion of a History Tree
</figureCaption>
<bodyText confidence="0.991111">
tRULE009 is shown above, see Figure 5 for RULE003
and RULE037]
</bodyText>
<subsubsectionHeader confidence="0.821162">
2.2.4 Other Domain-Independent Knowledge
</subsubsectionHeader>
<bodyText confidence="0.9683106875">
MYCIN&apos;s question-answering ability is limited to describing the
system&apos;s actions, and explaining what facts the system knows. Some of the
specialists for answering questions about the consultation make use of logic
in arriving at their answers. In particular, to explain why a decision
wasn&apos;t lade, the appropriate specialist uses the logical conclusion that the
answer consists of explaining what prevented the system from using each of
the rules that would have made that decision.
25
If deductions or comparisons are needed to answer questions of a
specific type, then the necessary logic is built into the appropriate
specialist. There is no general representation of knowledge about logic,
arithmetic, or set theory that the explanation capability can use to make
inferences from different facts in its knowledge base. To find out whether
ORGANISM-1 and ORGANISM-2 have the same identity, for example, it is
necessary for the user to ask separately for the identity of each organism,
then 10 compare the answers to these questions.
</bodyText>
<subsectionHeader confidence="0.999785">
2.3 Scope of MYC1N&apos;s Explanation Capability
</subsectionHeader>
<bodyText confidence="0.9584085">
The purpose of the explanation system is to enable a user to see how
MYCIN makes decisions, both in general and with reference to a particular
consultation. To make this facility as useful as possible, we have tried to
antit.ipate all types of questions which a user might ask, and to make every
part of the system&apos;s knowledge base and reasoning process accessible through
clear explanations.
The entire explanation facility consists of a number of components
or &amp;quot;specialists&amp;quot; each capable of giving a single type of explanation. These
components are grouped into three sets: one for explaining what the system
is doing at a given time, one for answering questions about the system&apos;s
static knowledge base, and one for answering questions about the dynamic
knowledge base. The first set forms MYCIN&apos;s reasoning-status checker, the
second and third together make up the system s general question-answer.
26
</bodyText>
<subsectionHeader confidence="0.684368">
2.3.1 MYCIN&apos;s Reasoning-Status Checker
</subsectionHeader>
<bodyText confidence="0.974830791666666">
Whenever MYCIN asks a question, the user is allowed to interrogate
the status of MYCIN&apos;s reasoning chain by asking WHY this piece of
information is important. As explained in sections 2.1 and 2.2, the system
asks a question in order to find out about its curhent goal. Consider the
portion of a history tree shown in Figure 4. HOSPITAL-ACQUIRED is one
subgoal, CATEGORY is another at the next level up, and RULE037 links them.
The &amp;quot;reason&amp;quot; for adking whether the infection was hospital-acquired, then,
is based on an attempt to use this rule to determine the higher subgoal.
The answer to WHY at this point is simply a display of the goals and the
rules linking them. We have given considerable attention to making this as
lucid a display as possible. First, since &amp;quot;why&amp;quot; has several other
interpretations, and no more extensive natural language processing is used
in this component of MYCIN&apos;s EC, the question is expanded to indicate the
sense in which it will be answered. The higher goal is then presented,
followed by the rule. The clauses in the PREMISE of the rule are divided
into those already established and those yet to be determined. Finally,
since rules may have multiple conclusions about different clinical
parameters, the relevant conclusion is presented first and all others
fbllow.
As Figure 5 illustrates, further seCtions of the reasoning chain can
be examined by repeating the WHY command. For any of the subgoals mentioned
in answer to a WHY, tile user may ask HOW this goal was (or will be)
achieved.
MYCIN&apos;s reasoning-status checker is described in more detail in
</bodyText>
<page confidence="0.357326">
[3,4,6].
</page>
<figure confidence="0.804895893617021">
•
. [preceded by the first 14 questions in the consultation]
15) Is the patient&apos;s illness with ORGANISM-1 a hospital-acquired infection?
** WHY
[i.e. WHY is it important to determine whether or not the infection with
ORGANISM-1 was acquired while the patient was hospitalized?]
f1.0] This will aid in determining the category of ORGANISM-I.
It has already been established that
[1.1] the gram stain of ORGANISM-1 is gramneg, and
[1.2] the morphology of ORGANISM-I is rod, and
[1.3] the aerobicity of ORGANISM-1 is facultative
Therefore, if
t1.4] the infection with ORGANISM-1 was not acquired while the
patient was hospitalized
then
there is strongly suggestive evidence ( 8) that the category of
ORGANISM-1 is enterobacteriaceae
ALSO: there is weakly suggestive evidence (.1) that the identity of
ORGANISM-1 is pseudomonas-aeruginosa]
[RULE037]
** WHY
[i.e. WHY is it important to determine the category of ORGANISM-1?]
[2.0]... in Order to determine the identity of ORGANISM-1
It has already been established that
[2.1] this blood culture was taken from a sterile source
Therefore, if
[2.2] this current organism and at least one of the list of members
associated with the category of the organism agree with
respect to the following properties: air conformation
then
There is strongly suggestive evidence (.9) that each of them is the
identity of ORGANISM-1
[RULE003]
** HOW 1.3
[i.e. HOW was it established that the aerobicity of ORGANISM-1 is
facultative?]
The following were used:
[3.1] RULE027 ndicated there is strongly suggestive evidence (.8) that the
aerobicity of ORGANISM-1 is facultative
[3.2] RULE027 indicated there is weakly suggestive evidence (.2) that the
aerobicity of ORGANISM-1 is anaerobic
Since this gave a cumulative CF of (.8) for facultative, and (.2) for
anaerobic, it has been established that the aerobicity of ORGANISM-1
Is facultative
** HOW 1.1
[i.e. HOW was it established that the gram stain of ORGANISM-1 is gramneg?]
You said so [question 11].
</figure>
<figureCaption confidence="0.958459">
Figure 5. MYCIN&apos;s Reasoning-Status Checker
</figureCaption>
<bodyText confidence="0.747201">
[user entries follow the double asterisks]
</bodyText>
<page confidence="0.577725">
27
</page>
<note confidence="0.455394">
28
</note>
<subsectionHeader confidence="0.679892">
2.3.2 MYCIN&apos;s General Question Answerer
</subsectionHeader>
<bodyText confidence="0.766322714285714">
The question-answering part of the system has natural-language
routines for analyzing the user&apos;s input. The system recognizes questions
phrased in a number of ways, thereby making the question-answering facility
easier to use. Questions about the static knowledge base may deal with
judgmental knowledge (e.g., which rules use or conclude a certain piece of
information) or they may ask about factual knowledge -- entries in tables
and lists. Some questions about static knowledge are shown in Figure 6.
</bodyText>
<figure confidence="0.544193153846154">
IS BLOOD A STERILE SITE?
WHAT ARE THE NONSTERILE SITES?
WHAT ORGANISMS ARE IIKEL1 TO BE FOUND IN THE THROAT?
IS BACTEROIDES AEROBIC?
WHAT METHODS OF COLLECTING SPUTUM CULTURES DO YOU
CONSIDER?
WHAT DOSAGE OF STREPTOMYCIN DO YOU GENERALLY RECOMMEND?
HOW DO YOU DECIDE THAT AN ORGANISM MIGHT BE STREPTOCOCCUS?
WHY DO YOU ASK WHETHER THE PATIENT HAS A FEVER OF UNKNOWN
ORIGIN?
WHAT DRUGS WOULD YOU CONSIDER TO TREAT E.COLI?
HOW DO YOU USE THE SITE OF THE CULTURE TO DECIDE AN
ORGANISM&apos;S IDENTITY?
</figure>
<figureCaption confidence="0.960519">
Figure 6. Sample Questions about MYCIN&apos;s Static Knowledge
</figureCaption>
<bodyText confidence="0.915931">
Perhaps the more important part of the question-answering system is
its ability to answer questions about a Darticular consultation. While some
users may be interested in checking the extent of MYCIN&apos;s static knowledge,
most questions will ask for a justification of, or for the rationale behind,
</bodyText>
<figureCaption confidence="0.993522333333333">
particular decisions which were made during the consultation. Outlined in
Figure 7 are the types of questions about dynamic knowledge which can kr.
handled at present. A few examples of each type are given. &lt;Cntxt&gt;
indicates some context which was discussed in the onngultation; &lt;Dam&gt; is
some clinical parameter of this context, &lt;rule&gt; is one of the system&apos;s
decision rules.
</figureCaption>
<figure confidence="0.982924185185185">
29
1) what is &lt;parm&gt; of (cntxt&gt;
TO WHAT CLASS DOES ORGANISM-1 BELONG?
IS ORGANISM-1 CORYNEBACTERIUM-NON-DIPHTHERIAE?.
2) how do you know the value of iparm&gt; of &lt;cntxt&gt;
HOW DO YOU KNOW THAT CULTURE-1 WAS FROM A STERILE
SOURCE?
DID YOU CONSIDER THAT ORGANISM-1 MIGHT BE A
BACTEROIDES?
WHY DON&apos;T YOU THINK THAT THE SITE OF CULTURE-1 IS
URINE?
WHY DID YOU RULE OUT STREPTOCOCCUS AS A POSSIBILITY
FOR ORGANISM-1?
3) how did you use &lt;parm&gt; of &lt;cntxt&gt;
DID YOU CONSIDER THE FACT THAT PATIENT-1 IS A
COMPROMISED HOST?
HOW DID YOU USE THE AEROBICITY OF ORGANISM-1?
4) why didn t you find out about &lt;parm&gt; of &lt;cntxt&gt;
DID YOU FIND OUT ABOUT THE CBC ASSOCIATED WITH
CULTURE-1?
WHY DIDN&apos;T YOU NEED TO KNOW WHETHER ORGANISM-1 IS A
CONTAMINANT?
5) what did &lt;rule&gt; tell you about &lt;cntxt&gt;
HOW WAS RULE 178 HELPFUL WHEN YOU WERE CONSIDERING
ORGANISM-1?
DID RULE 116 TELL YOU ANYTHING ABOUT INFECTION-1?
WHY DIDN&apos;T YOU USE RULE 189 FOR ORGANISM-2?
</figure>
<figureCaption confidence="0.999683">
Figure 7. Sample Questions about a Consultation
</figureCaption>
<bodyText confidence="0.924890714285714">
Before a question can be answered, it must be classified as
belonging to one of these groups. As Figure 7 illustrates, each question
type includes a variety of ways in which the question can be worded, some
specifying the parameter&apos;s value, some phrased in the negative, and so
forth. MYCIN&apos;s natural-language processor must classify the questions, then
determine what clintcal parameters, etc. the question references.
30
</bodyText>
<subsectionHeader confidence="0.669992">
2.4 Understanding The Question
The main emphasis in the development of the MYCIN system has been
the creation of a production system which can provide sound diagnostic and
</subsectionHeader>
<bodyText confidence="0.995942052631579">
therapeutic advice in the field of infectious disease. The explanation
system was included in the system&apos;s original design in order to make the
consultation program&apos;s decisions acceptable, justifiable, and instructive.
Since the question-answerinw facility was not the primary focus of the
research, it is not designed to be a sophisticated natural-language
understander. Rather, it uses crude techniques, relying strongly on the
very specific vocabulary of the domain, to &amp;quot;understand&amp;quot; what information is
being requested.
The analysis of a question is broken into three phases: the first
creates a list of terminal or root words; the second determines what type of
question is being asked (see the classification of questions in Section
2.3); and the last determines what particular parameters, lists, etc. are
relevant to the question.
In the first and last steps, the system dictionary is important.
The dictionary contains approximately 1400 words that are commonly used in
the domain of infectious disease. It includes all words that are acceptable
values for a parameter, common synonyms of these words, and words used
elsewhere by the system in describing the parameter (e.g., when translating
a rule into English or requesting the value of the parameter).
</bodyText>
<page confidence="0.877568">
31
</page>
<subsectionHeader confidence="0.883679">
2.4.1 Reducing the Question to Terminal Words
</subsectionHeader>
<bodyText confidence="0.991645">
Each word in the dictionary has a synonym pointer to its terminal
word (terminal words point to themserves). For the purpose of analyzing tht
question, a non-terminal word is considered to be equivalent to its
(terminal) synonym.
Terminal words may have properties indicating:
</bodyText>
<listItem confidence="0.908403307692308">
1) that this word is an acceptable value for some
clinical parameter(s)
2) that this word always implicates a certain clinical
parameter, system list, or table (e.g. the word &amp;quot;identity&amp;quot;
always implicates the parameter IDENTITY, which means the
identity of an Organism)
3) that this word might implicate a certain parameter,
system list, or table (e.g. the word &amp;quot;positive&amp;quot; might
implicate the parameter NUMPOS, which means the number of
positive cultures in a series)
4) that this word is part of a phrase which can be
thought of as a single word kexamples of such phrases are
&amp;quot;transtracheal aspiration&amp;quot;, &amp;quot;how long&amp;quot;, and &amp;quot;not sterile&amp;quot;.
</listItem>
<tableCaption confidence="0.912867">
Table 1. Properties of Terminal Words
</tableCaption>
<bodyText confidence="0.982286444444445">
The first three properties are actually inverse pointers which are generated
automatically from properties of&apos; &apos;the clinical parameters. Specifically, a
word receives the &amp;quot;acceptable value&amp;quot; pointer to a parameter (property (1)
above) if it appears in the parameter&apos;s list of acceptable values -- a list
which is used during the consultation to check the user&apos;s response to a
request for the parameter&apos;s value. Also, each clinical parameter, list, and
table has an associated list of key words that are commonly used when
talking about this parameter, list, or table. These words are divided
according to how sure we can be that a doctor is referring to this
</bodyText>
<page confidence="0.539105">
32
</page>
<bodyText confidence="0.990524214285714">
parameter list, or table when the particular word is used in a question.
It is from this list that terminal words &amp;quot;implication&amp;quot; pointers (Properties
2 and 3 in Table 1) are generated.
During the first phase of parsing, each word in the original text is
replaced by its terminal word. For words not found in the dictionary, the
system uses Winogradvs root-extraction algorithm [8] to see if the word&apos;s
lexical root is in the dictionary (e.g., the root of &amp;quot;decision&amp;quot; is
&amp;quot;decide&amp;quot;). If so, the word is replaced by the terminal word for its rOot.
Words still unrecognized after root extraction are left unchanged.
The resulting list of terminal and unrecognized words is then passed
to a function which recognizes phrases. Using property 4 (see Table 1) of
the terminal words in this list, the function identifies a phrase and
replaces it with a single synonymous terminal word (whose dictionary
properties may be important in determining the meaning of the question).
</bodyText>
<subsectionHeader confidence="0.984896">
2.4.2 Classifying the Question
</subsectionHeader>
<bodyText confidence="0.994116444444444">
The waxt step is to classify the question so that the program can
tell which specialist should answer it. Since all auestions about the
consultation must be about some specific context, the system requires that
the name of the context (e.g., ORGANISM-1) be stated explicitly. This gives
an easy way to separate general questions about the knowledge base from
questions about a particular consultation. Further classification is done
through a pattern matching approach similar to that used by Colby [1].
The list of words created by the first phase is tested against a
number of patterns (about 50 at present). Each pattern has a list of
</bodyText>
<note confidence="0.427093">
actions to be taken if the pattern is matched. These actions set flags
</note>
<page confidence="0.774379">
31
</page>
<bodyText confidence="0.997922111111111">
which indicate what type of question was asked. In the case of questions
about judgmental knowledge (called rule-retrieval questions), pattern
matching also divides the question into the part referring to the rule&apos;s
PREMISE and the part referring to its ACTION. For example, in &amp;quot;How do you
decide that an organism is streptococcus?&amp;quot;, there is no PREMISE part, and
the ACTION part is &amp;quot;an organism is streptococcus&amp;quot;; in &amp;quot;Do you ever use the
site of the culture to determine an organism&apos;s identity?&amp;quot;, the PREMISE part
is &amp;quot;the site of the culture&amp;quot; and the ACTION part is &amp;quot;an organism&apos;s
identity&amp;quot;.
</bodyText>
<subsectionHeader confidence="0.957958">
2.4.3 Determining What Pieces of Knowledge are Relevant
</subsectionHeader>
<bodyText confidence="0.945142">
The classification of a question guides its further analysis. Each
question type has an associated template with blanks to be filled in from
the question. The different blanks and the techniques for filling them in
are listed in Table 2. With the question correctly classified, the general
question-answerer can tell which specialist should answer it. Filling in
all blanks in the template gives the specialist all the information needed
to find the answer.
</bodyText>
<listItem confidence="0.995887111111111">
1) &lt;cntxt&gt; - The context must
2) &lt;rule&gt; - Either a rule&apos;s
mentioned, or the word &amp;quot;rule&amp;quot; will
rule&apos;s number (47).
3) &lt;value&gt; - One of the terminal words in
has a dictionary property indicating that it
value for the parameter (property 1, Table 1 --
is a legal value for the parameter SITE).
4) &lt;parm&gt; - All of the words in the list
</listItem>
<bodyText confidence="0.96104772972973">
the question
is a legal
e.g. THROAT
are examined
be mentioned by name.
name (RULE047) will be
appear, together with the
to see if they implicate any clinical parameters. Strong
implications come from words with propertied showing that
the word is an acceptable value of the parameter, or that
the word always implicates that parameter (properties 1 and
2, Table 1). Weak implications come from words with
properties showing that they might implicate the parameter
(property 3, Table 1). The system uses an empirical scoring
mechanism for picking out only the most likely parameters.
Associated with certain parameters are words or
patterns which must appear in the question in order for the
parameter to be implicated. This scheme allows the system to
distinguish related parameters which may be implicated by
the same key words in the first pass. For example, the word
&amp;quot;PMN&amp;quot; Duplicates parameters CSFPOLY (the percent of PMNs in
the CSF) and PMN (the percent of PMNs in the complete blood
count). These are distinguished by requiring that the word
&amp;quot;CSF&amp;quot; be present in a question in order for CSFPOLY to be
implicated.
5) &lt;list&gt; - System lists are indicated in a manner
similar to parameters, except that scoring is not done.
Lists, like parameters, may have associated patterns which
must be present in the question. Furthermore, lists have
properties telling which other system lists are their
subsets. If a question implicates both a list and a subset
of that list, the more general (larger) list is discarded.
As an example, the question &amp;quot;Which drugs are
aminoglycosides?&amp;quot; implicates two lists: The list of all
drugs and the list of drugs which are aminoglycosides. The
system only considers the more specific list of
aminoglycosides when answering the question.
</bodyText>
<listItem confidence="0.619914272727273">
6) &lt;table&gt; - Tables are indicated in a manner similar
to lists except that an entry in the table must also be
Present in the question. Por example, the word &amp;quot;organism&amp;quot;
may indicate two tables: one containing a classification of
organisms, and the other containing normal flora of various
portals. The question &amp;quot;What organisms are considered to Ve
subtypes of Pseudomonas?&amp;quot; will correctly implicate the
former table, and &amp;quot;What are the organisms likely to be found
in the throat?&amp;quot; will implicate the latter, because
PSEUDOMONAS is in the first table and THROAT is in the
second.
</listItem>
<tableCaption confidence="0.991575">
Table 2. Mechanisms for Analyzing a Question
</tableCaption>
<note confidence="0.3920635">
35
** WHEN DO YOU DECIDE THAT AN ORGANISM IS A CONTAMINANT?
</note>
<reference confidence="0.623383375">
[1] Terminal words: WHEN DO YOU CONCLUDE THAT A ORGANISM
IS A CONTAMINANT
[2] Question type:
Premise part:
Action part:
[3] vocab. clues:
(Premise)
vocab. clues:
</reference>
<figure confidence="0.519410058823529">
(Action)
Rule retrieval
(WHEN DO YOU CONCLUDE)
(THAT A ORGANISM IS A CONTAMINANT)
(WHENINFECT (ANY) 1) (WHENSTOP (ANY) 1)
(WHENSTART (ANY) 1) (DURATION (ANY) 1)
(CONTAMINANT (ANY) 4) (FORM (ANY) 1)
(SAMEBUG (ANY) 1) (COVERFOR (ANY) 1)
[4] Final translation:
Premise: ANY
Action: (CONTAMINANT ANY)
[5] The rules listed below conclude about:
whether the organism is a contaminant
6, 31, 351, 39, 41, 42, 44, 347, 49, 106
Which do you wish to see?
** 6
RULE006
</figure>
<figureCaption confidence="0.790318125">
If: 1) The culture was taken from a sterile source, and
2) It is definite that the identity of the organism
is one of: staphylococcus-coag-neg bacillus-
subtilis corynebacterium-non-diphtheriae
Then: There is strongly suggestive evidence (.8)
that the organi4m is a contaminant
Figure 8. Sample of MYCIN&apos;s Analysis of a Question
[User input follows the double asterisks.]
</figureCaption>
<bodyText confidence="0.7136859">
[1] The question is reduced to a list of terminal words.
[2] Pattern matching classifies the question as a rule-retrieval
question, and divides it into a premise part and an action
part.
[3] Dictionary properties of the terminal words are used to
determine which parameters (and their values) are relevant
to each part of the question. These vocabulary clues are
listed in the form (&lt;oarm&gt; (&lt;values&gt;) weight) where weight is
used by the scoring mechanism to determin which parameters
should be eliminated from consideration.
</bodyText>
<listItem confidence="0.981952">
[4] After selecting only the most strongly indicated parameters,
the final translation tells what rules can answer the
question: there are no restrictions on the PREMISE, and the
ACTION must contain the parameter CONTAMINANT (with any
value).
</listItem>
<bodyText confidence="0.472305">
[5] The answer consists of finding all rules which meet these
restrictions, and printing those that the user wants to see.
36
</bodyText>
<subsectionHeader confidence="0.999532">
2.5 Answering the Question
</subsectionHeader>
<bodyText confidence="0.882343388888889">
Corresponding to each question type, there are a number of possible
answer templates. For example, for questions of the form &amp;quot;How do you know
the value of &lt;parm&gt; of &lt;cntxt&gt;?&amp;quot;, two of the answer templates are
I used &lt;rule&gt; to conclude that &lt;parm&gt; of &lt;cntxt&gt; is &lt;value&gt;.
This gave a cumulative c.f. of &lt;certainty factor&gt;.
The last question asked before the conclusion was made
was &lt;question number&gt;.
In answer to question &lt;question number&gt; you said that &lt;parm&gt; of
&lt;cntxt&gt; is &lt;value&gt;
The specialist for answering questions of a given type will need to check
the history tree or the system s knowledge base in order to determine which
of the answer templates is appropriate for a particular question. Some
blanks in the answer template will be filled in by the same items that
filled blanks in the question template. The remainder are filled by the
specialist with information which will answer the question. In the above
example, the slots &lt;parm&gt;, &lt;cntxt&gt;, and possibly &lt;value&gt; would be filled in
from the question, and the other slots would be filled from the history
tree.
</bodyText>
<subsectionHeader confidence="0.963945">
2.5.1 Questions about MYCIN&apos;s Static Knowledge
</subsectionHeader>
<bodyText confidence="0.957519571428571">
General questions about MYCIN&apos;s factual knowledge are the easiest to
answer. The specialist that provides answers to such questions must look up
the desired information in the system&apos;s static knowledge base. Generally,
an answer consists of simply displaying this information. As Figure 9
illustrates, the most processing that is ever done is to check the retrieved
information against some item in the question (for eauality of set
membership).
</bodyText>
<page confidence="0.639754">
37
</page>
<table confidence="0.960131461538462">
** IS BLOOD A STERILE SITE?
Yes. Blood is one of those sites that are normally sterile.
** WHAT ARE THE NONSTERILE SITES?
Those sites that are normally nonsterile are: CERVIX,
CUTANEOUS-ULCER, LOCHIA, NOSE, SKIN, STOOL, THROAT, URETHRA,
VAGINA.
** WHAT ORGANISMS ARE LIKELY TO BE FOUND IN THE THROAT?
The likely pathogens associated with throat are: STREPTWOCCUS-
PNEUMONIAE, STREPTOCOCCUS-GROUP-A, NEISSERIA-MENINGITIDIS.
** IS BACTEROIDES AEROBIC?
No, the aerobicity of bacteroides is anaerobic.
** WHAT DOSAGE OF STREPTOMYCIN DO YOU GENERALLY RECOMMEND?
The suggested dosage and route of streptomycin is 7.5 mg/kg
q12h IM (or IV).
** HOW DO YOU TREAT MENINGOCOCCAL BACTEREMIA?
For treatment of NEISSERIA-MENINGITIDIS in PRIMARY-BACTEREMIA
Select therapy from among the following drugs (ranked according
to relative efficacy, assuming uniform sensitivity):
PENICILLIN (.91)
AMPICILLIN (.9) dose: 30 mg/kg q6h
SULFISOXAZOLE (.8) dose: 60 mg/kg IV then 15 mg/kg q4h IV
for 48 days then 15 mg/kg q4h PO
CHLORAMPHENICOL (.7)
ERYTHROMYCIN (.5)
TETRACYCLINE (.4)
Duration of therapy: 14 days
</table>
<figureCaption confidence="0.995909">
Figure 9. Questions about Factual Knowledge
</figureCaption>
<bodyText confidence="0.999769125">
The specialist that answers questions about judgmental knowledge is
slightly more complicated. Answering these questions (Figure 10) involves
built-in knowledge about the rule set, plus the ability to &amp;quot;read&amp;quot; the rules.
By the time the question has been analyzed, the specialist knows exactly
which parameters must appear in the PREMISE, and which must appear in the
ACTION of any rule which answers the question. Values may be specified for
any of the parameters. To answer the question, the rule-retrieval specialist
must first find every rule whose PREMISE and ACTION satisfy these
</bodyText>
<page confidence="0.594081">
38
</page>
<bodyText confidence="0.935755375">
constraints. To do this, it needs to know that there are two special lists
associated with each paraMeter: one containing every rule that uses the
parameter in its PREMISE, and the other containing every rule that concludes
about the parameter in its ACTION. Using these lists tor the various
parameters mentioned in the question, the specialist can find those rules
that might answer the question. If no values were specified, the job is
done and the relevant rules can be displayed without further analysis;
otherwise, it is necessary to read each of the rules in the list and to
eliminate those which do not mention the correct values for the parameter.
The rule-retrieval specialist also makes use of a piece of MYCIN&apos;s
knowledge which was not discussed earlier. The system contains models of
its own knowledge (called rule models) which are used primarily during
acquisition of new medical knowledge from an expert [4]. These models,
however, can be put to many uses -- one is to explain general patterns in
decision making. The rule models are abstract descriptions of a subsets of
rules and are generated automatically by reading the rules. For example,
the model for IDENT-IS-PSEUDOMONAS tells what features are common to the
majority of rules which conclude that the identity of an organism is
pseudomonas.
If a model exists describing the rules about which the question is
asking, the rule-retrieval specialist incorporates this model&apos;s information
into its answer (Figure 11). Thus the question-answering facility is able
to give some information about strategies for achieving some of the system&apos;s
goals, as well as the individual rules which use the strategies.
</bodyText>
<note confidence="0.7917055">
39
** WHY DO YOU ASK WHETHER THE PATIENT HAS A FEVER OF UNKNOWN
</note>
<sectionHeader confidence="0.585274" genericHeader="method">
ORIGIN?
</sectionHeader>
<bodyText confidence="0.936323357142857">
The rules listed below use:
whether the patient has a true fever of unknown origin
RULE180
If: 1) The site of the culture is blood and
2) The number of cultures in the series including the
culture is greater than or equal to 1, and
3) The number of cultures in this series which were
positive for the organism is less than or equal to 1,
and
4) The patient has a true fever of unknown origin, and
5) ^ardiac-surgery is a relevant item from the history of
the patient
Then: There is suggestive evidence (.6) that the infection is
infective-endocarditis
</bodyText>
<sectionHeader confidence="0.8577155" genericHeader="method">
** WHAT DOES GU MANIPULATION TELL YOU ABOUT THE IDENTITY OF AN
ORGANISM?
</sectionHeader>
<bodyText confidence="0.929134">
The rules listed below use:
whether the patient has had a genito-urinary manipulative
procedure
to conclude about:
the identity of the organism
156, 163, 190
Which do you wish to see?
</bodyText>
<figure confidence="0.323901333333333">
** 156
RULE156
SMOISSIIIIMIMMAMWMP
</figure>
<sectionHeader confidence="0.910798" genericHeader="method">
If: 1) The site of the culture is blood, and
2) The gram stain of the organism is gramneg, and
3) The morphology of the organism is rod, and
4) The portal of entry of the organism is urine, and
</sectionHeader>
<bodyText confidence="0.698769">
5) The patient has not had a genito-urinary manipulative
procedure, and
</bodyText>
<footnote confidence="0.584019">
6) Cystitis is nOt a problem for which the patient has
been treated
</footnote>
<note confidence="0.724447">
Then: There is sugg-eetive evidence (.6) that the identity of
the organism is e.coli
</note>
<figureCaption confidence="0.832885">
Figure 10. -Rule-Retrieval Questions
</figureCaption>
<footnote confidence="0.469817">
4o
</footnote>
<note confidence="0.68334">
** HOW DO YOU DECIDE THAT AN ORGANISM MIGHT BE
PSEUDOMONAS AERUGINOSA?
</note>
<subsectionHeader confidence="0.93531">
Rules which conclude that the identity of the organism is
</subsectionHeader>
<bodyText confidence="0.8954066">
pseudomonas-aeruginosa generally use one or more of the
following pieces of information:
the site of the culture
the gram stain of the organism
the morphology of the organism
Furthermore, the following relationships hold:
The gram stain of the organism, and the morphology of the
organism tend to appear together in these rules.
RULE184, RULE116, RULE047, RULE085, RULE040 conclude that
the identity of the organism is pseudomonas-aeruginosa.
</bodyText>
<figure confidence="0.602686777777778">
Which of these do you wish to see?
** 184
RULE184
If: 1) The category of the organism is not known, and
2) The dram stain of the organism is gramneg, and
3) The morphology of the organism is rod, and
4) The aerobicity of the organism is facul
Then: There is weakly suggestive evidence (.1) that the
identity of the organism is pseudomonas-aeruginosa
</figure>
<figureCaption confidence="0.989563">
Figure 11. Question Which Use Rule Models
</figureCaption>
<sectionHeader confidence="0.806979" genericHeader="method">
215.2 Consultation-Specific Questions
</sectionHeader>
<bodyText confidence="0.998144166666667">
One of the simplest questions about a specific consultation inquires
about the value of a particular parameter (Figure 12). The specialist which
answers these questions must know how to retrieve this information. In some
cases it will also be necessary to make comparisons to see whether a value
specified in the auestion is one of the values which was deduced for that
parameter.
</bodyText>
<sectionHeader confidence="0.658528" genericHeader="method">
** TO WHAT CLASS DOES ORGANISM-1 BELONG?
</sectionHeader>
<bodyText confidence="0.7846184">
The category of ORGANISM-1 is enterobacteriaceae (.9)
** IS ORGANISM-1 A STREPTOCOCCUS?
No.
The identity of ORGANISM-1 is e.coli (.74) bacteroides (.7)
klebsiella-pneumoniae (.4) pseudomonas-aeruginosa (.22)
enterobacter (.21) proteus-non-mirabilis (.19) serratia (.03)
salmonella (.02)
Figure 12. Questions about a Parameter&apos;s Value
Answering other types of consultation-specific questions involves
the use of knowledge about the control strUcture, including:
</bodyText>
<listItem confidence="0.8437576">
1) how the system acquires information
2) why the system tries to find out about parameters
3) how information is used once it is acquired
4) what causes a rule to be tried
5) what causes a rule to fail.
</listItem>
<bodyText confidence="0.970009">
The specialist for answering questions like &amp;quot;How do vou know the
value of &lt;parm&gt; of &lt;cntxt&gt;?&amp;quot;, knows that the value of a parameter can come
from two sources: it can be deduced by rules, or the user can tell us about
It in response to a question. The history tree (see Section 2.2) will show
which (possibly both) of these sources provided the particular information
mentioned in the question (Figure 13).
** HOW DO YOU KNOW THAT CULTURE-1 WAS FROM A STERILE SOURCE?
I used rule189 to conclude that this blood culture was taken from
a sterile source. This gave a cumulative c.f. of (1.0). The
last question asked before the conclusion was made was 7.
** DID YOU CONSIDER BACTEROIDES AS A POSSIBILITY FOR ORGANISM-1?
Yes. I used rule095 to conclude that the identity of ORGANISM-1
is bacteroides. This gave a cumulative c.f. of (.7). The
last question asked before the conclusion was made was 20.
</bodyText>
<sectionHeader confidence="0.643006" genericHeader="method">
** HOW DO YOU KNOW THAT ORGANISM-1 IS E.COLI?
</sectionHeader>
<bodyText confidence="0.987442333333333">
The following rules made conclusions about whether the identity
of ORGANISM-1 is e.coli
cumulative certainty last question asked
</bodyText>
<note confidence="0.763984666666667">
RULE Yes No before conclusion was made
HULE021 (.47) 20
RULE084 (.55) 22
RULE003 (.74) 24
In answer to question 9 you said that the identity of ORGANISM-1
is escoli (.3)
</note>
<figureCaption confidence="0.977307">
Figure 13. Question Regarding How a Conclusion Was Made
</figureCaption>
<page confidence="0.552639">
42
</page>
<bodyText confidence="0.810735565217391">
If the question is phrased in the negative, it is necessary first to
find all the ways the conclusion could have been made (this is a simple task
of rule-retrieval), then to explain why it wasn&apos;t made in this consultation
(Figure 14). The specialist for answering these questions must know what
situations can prevent conclusions from being made. The second question in
Figure 14 illustrates how the answer to one question might cause another
question to be asked.
** WHY DID YOU RULE OUT STREPTOCOCCUS AS A POSSIBILITY FOR
ORGANISM-1?
The following rules could have been used to determine that the
identity of ORGANISM-1 is streptococcus: RULE033. However,
none of these succeeded in the context of ORGANISM-1.
If you would like an explanation for why any of these
rules failed, please enter their numbers:
** 33
Clause 2 of rule033 [&amp;quot;the morphology of the organism is coccus&amp;quot;]
was already known to be false for ORGANISM-1, so the rule
was never tried.
** WHY DON&apos;T YOU THINK THAT THE MORPHOLOGY or ORGANISM-1 IS
COCCUS?
It is definite that the morphology of ORGANISM-1 is rod. Knowing
this with certainty rules out all other values for the
the morphology of ORGANISM-1, including coccus.
</bodyText>
<figureCaption confidence="0.93787">
Figure 14. Questions Regarding Why a Conclusion Wasn&apos;t Made
</figureCaption>
<bodyText confidence="0.999239571428571">
The specialist for answering questions of the form &amp;quot;How did you use
&lt;parm&gt; of &lt;cntxt&gt;?&amp;quot;, needs to know not only how to find the specific rules
which might use a parameter, but also how a parameter can cause a rule to
fail and how one parameter can prevent another from being used. The history
tree can be checked to see which of the relevant rules used the oarameter,
which failed because of the parameter, and which failed for some other
reason, preventing the parameter from being used (Figure 15).
</bodyText>
<page confidence="0.829464">
43
</page>
<note confidence="0.546987333333333">
** HOW DID YOU USE THE AEROBICITY OF ORGANISM-1?
The aerobicity of ORGANISM-I was used in the following rules:
RULE003, RULE005, RULE084.
</note>
<bodyText confidence="0.959204227272727">
The aerobicity of ORGANISM-1 caused the following rules to fail:
RULE035, RULE051, RULE052, RULE053, RULE1111.
Thc aerobicity of ORGANISM-I also would have been used in:
RULE037, RULE0501 1ULE058, RULE086, RULE110, RULE1841
RULE203, RULE204, RULE205. However, none of these
succeeded in the context of ORGANISM-I. If you would
like an explanation ror why any of these rules failed,
please enter their numbers:
** 37
Ru1e037 was tried in the pontext of ORGANISM-1, but it failed
due to clause 1 [&amp;quot;the category of the organism is not
known&amp;quot;].
** DID YOU CONSIDER THE FACT THAT PATIENT-I IS NOT A COMPROMISED
HOST?
The fact that Fred Jones is not a compromised host caused the
following rules to fail: RULE085, RULE106.
The fact that Fred Jones is not a compromised host also would
have been, used in: RULE109. However f none of these
succeeded in the context of PATIENT-1. If you would
like an explanation for why any of these rules failed,
please enter their numbers:
** NONE
</bodyText>
<figureCaption confidence="0.930237">
Figure 15: QuestJons Regarding How Information Was Used
</figureCaption>
<bodyText confidence="0.8900645625">
For questions of the form &amp;quot;Why didn&apos;t you find out about &lt;parm&gt; of
&lt;cntxtn&amp;quot;, general knowledge of MYCIN&apos;s control structure tells the
conditions under which it would have been necessary to find out some piece
of information. The record of the consultation can be used to determine why
these cdnditions never arose for the particular parameter in question
(Figure 16).
Figune 16 also illustrates that MYCIN&apos;s GQA allows a user to get as
much information as is desired. The first answer given was not really
complete in itself, but it led the user to ask another question to get more
information. Then another question was asked to determine why clause 1 or
RULE159 was false. The answers to the first two questions both mentioned
rules which could be printed if the user wanted to examine them. The
special command PR (Print Rule) is for the user&apos;s convenience. It requires
no natural-language processing and thus can be understood and answered
immediately. (&amp;quot;What is rule 109?&amp;quot; or &amp;quot;Print rule 109.&amp;quot; also would have been
understood.)
</bodyText>
<page confidence="0.784464">
45
</page>
<bodyText confidence="0.968667818181818">
** DID rou FIND OUT ABOUT THE CBC ASSOCIATED WITH CULTURE-1?
During the preceding consultation, I never had reason to try to find out
whether the results of the CBC from the time period of this blood
culture are available. It would have been necessary to know this
information im order to use any of the following: RULE109. However,
none of these succeeded in the context of this blood culture. If you
would like an explanation for why any of these rules failed, please
enter their numbers:
** 109
Rule109 would be relevant to this blood culture when applied to: ORGANISM-1.
I never ha a reason to try to apply rule109 to ORGANISM-1. I would have
needed to use rule109 in order to find out whether ORGANISM-1 is a
contaMinant. However, during the preceding consultation, I never had
reason to try to find out whether ORGANISM-1 is a contaminant.
** WHY DIDN&apos;T YOU NEED TO KNOW WHETHER ORGANISM-1 IS A CONTAMINANT?
During the preceding consultation, I never had reason to try to find out
whether ORGANISM-1 is a contaminant. It would have been necessary to
know this information in order to use any of the following: RULE006,
RULE007, RULE/06, RULE108, RULE109, RULE159. However, none of these
succeeded in the context of ORGANISM-1. If you would like an
explanation for why any of these rules failed, please enter their
numbers:
</bodyText>
<reference confidence="0.908571652173913">
** 159
Rule159 was tried in the context of ORGANISM-1, but it failed due to clause
1 [nit is suspected that the identity of the organism is
corynebacterium-non-diphtheriaen]
** IS ORGANISM-1 CORYNEBACTERIUM-NON-DIPHTHERIAE?
No. The identity of ORGANISM-1 is e.coli (.74) bacteroides (.7)
klebsiella-pneumoniae (.4) pseudomonas-aeruginosa (.22) enterobacter
(.21) proteus-non-mirabilis (.19) serratia (.03) salmonella (.02)
** PR 109
RULE109
If: 1) The culture was taken from a sterile source, and
2) It is not known whether the organism is a contaminant, and
3) The patient is not g compromised host, and
4) The patient was febrila due to the infection, and
5) The results of the cbc from the time period of the culture are
available, and
6) A - The white count from the CBC is greater than 10.C, or
B - The percent of pmn&apos;s in the cbc at the time the culture was
obtained is greater than 78, or
C - The percent of wbc&apos;s which were bands in the CBC at the
time the, culture was obtained Is greater than 10
Then: There is strongly suggestive evidence (.8) that the organism is
not a contaminant
</reference>
<figureCaption confidence="0.782964">
Figure 16. Questions Regarding Why a Parameter Wasn&apos;t Traced
</figureCaption>
<bodyText confidence="0.979377454545455">
46
In questions asking about the application of a rule to a context
there are three posslbilities: the rule told us something about the context;
the rule failed when applied to that context; Or the rule was never tried in
that context. The history tree tells which of these is the case.
Furthermore, if a rule succPeded, there is a record of all the conclusions
it made, and if it failed, the reason for failure is recorded. 4s Figure 17
illustrates, rules are only applicable in certain contexts. If the rule
could not apply to the context mentioned in the question, but might be
relevant when applied to some other context [which is an ancestor or
descendent in the context tree], then the question is answered as if it had
mentioned the relevant context.
There are interactions among the different types of questions which
weren&apos;t mentioned earlier for the sake of clarity. Sometimes a question may
Indicate an incorrect assumption about the state of MYCIN&apos;s knowledge. For
example a question could ask &amp;quot;Why don&apos;t you think that ORGANISM-1 is
E.coli?&amp;quot; when, in fact, the system has concluded that the organism is
E.coli. To answer this question, the explanation system would explain how it
did make such a decision, despite the dhrasing of the question. Similarly,
when asked how the system used (or concluded about) some oarameter that was
never traced, the system explains why it didn&apos;t need to find out about the
parameter, regardless of how the question was phrased.
</bodyText>
<page confidence="0.627354">
47
</page>
<bodyText confidence="0.955920818181818">
** DID RULE 116 TELL YOU ANYTHING ABOUT INFECTION-1?
Rule116 would be relevant to the primary-bacteremia when applied
to: ORGANISM-1.
Clause 5 of rule116 [&amp;quot;the infection is meningitis&amp;quot;] was already
known to be false for ORGANISM-17 so the rule was never tried.
** HOW WAS RULE 178 HELPFUL WHEN YOU WERE CONSIDERING ORGANISM-1?
Ru1e178 would be relevant to ORGAnISM-1 when applied to:
CULTURE-1.
I never had reason to try to apply rule178 to this blood culture.
I would have needed to use rule178 in order to find out
whether this blood culture was taken from a sterile source.
nowever, I was already certain that this blood culture was
taken from a sterile source.
** WHAT DID RULE 295 TELL YOU ABOUT ORGANISM-1?
I used rule295 to conclude that the identity of ORGANISM-1 is
hemophilus-influenzae. This gave a cumulative c.f. of (.25).
The last question asked before the conclusion was made
was 36.
** WHY DIDN&apos;T YOU USE,RULE112 TO FIND OUT ABOUT ORGANISM-1?
RULE112 was not executed because it would have caused circular
reasoning when applied to ORGANISM-1. Would you like to
see the chain of rules and parameters which makes up this
circle?
** YES
I wanted to know about the identity of ORGANISM-1-because I
try to find out the identity of the organism for all
current organisms of the patient.
To find out about the identity of ORGANISM-1, I tried to use
rule021. Before I could use rule021, I needed to know about
a prior organism with possibly the same identity as
ORGANISM-1.
To find out about a prior organism with possibly the same
identity as ORGANISM-1, I tried to use rule005. Before I
could use rule005, I needed to know about the aerobicity of
ORGANISM-1.
To find out about the aerobi city of ORGANISM-1, I tried to use
rule031. Before I could use rule031, I needed to know about
the category of ORGANISM-1.
To find out about the category of ORGANISM-1, I tried to use
rule112. Before I could use rule112, I needed to know about
the identity of ORGANISM-1.
But this is the unknown parameter I sought originally.
Figuye 17. Question Regarding the Application of a Rule
L18
</bodyText>
<sectionHeader confidence="0.997123" genericHeader="conclusions">
3 Conclusions
</sectionHeader>
<bodyText confidence="0.999363933333333">
Consultation systemg which give expert advice in some domain form
one class of artificial intelligence programs which can provide useful
solutions to real-world problems. The utility of such a system, however,
depends on its acceptability to human users. One feature which can increase
a system&apos;s acceptability is a mechanism whereby the system can explain or
justify its advice.
The development of an explanation mechanism for a consultation
system is very much related to the problems of representing knowledge and of
making use of different sources of knowledge. Since the production system
formalism provides a unified way to represent modular pieces of knowledge,
the task of designing an explanation capability is simplified for
production-based consultation systems. The example of MYCIN shows how this
can be done and illustrates further that a system designed for a single
domain with a small, technical vocabulary can give comprehensive answers to
a wide range of questions without sophisticated natural-language processing.
</bodyText>
<page confidence="0.83353">
49
</page>
<sectionHeader confidence="0.995289" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<reference confidence="0.972306173913043">
The authors wish to express their gratitude for the interest and
advice of Drs. Bruce Buchanan and Cordell Green (Computer Science
Department). We also are indebted to the following MYCIN Project co-
workers: Jan Aikins, Stanton Axline, Stanley Cohen, Larry Fagan, Frank
Rhame, Bill van Melle, Sharon Wraith, and Victor Yu. Special thanks are due
to Bill van Melle and Bruce Buchanan who made numerous helpful comments on
earlier drafts of the paper.
50
References
[1] Colby, K.Ms, Parkison, R.C., and Faught, B. Pattern-Matching
Rules for the Recognition of Natural Language Dialogue
Expressions. Al Memo 234, Stanford Artificial Intelligence
Laboratory, Stanford University, June 1974.
[2] Davis, R., and King, J. An Overview of Production Systems.
To appear as Machine Representations of Knowledge published
as Machine Intelligence 8 (eds. E.W. Elcock and D. Michie),
John Wylie, December 1976. Also available as Al Memo 271,
Stanford Artificial Intelligence Laboratory, Stanford
University, October 1975.
[3] Davis, R., Buchanan, B.G., and Shortliffe, E.H. Production
Rules as an Approach to Knowledge-Based Consultation Systems.
Al Memo 266, Stanford Artificial Intelligence Laboratory,
Stanford University, October 1975. Also accepted for
publication in Artificial Intelligence, February 1977.
[4] Davis, R. Applications of Meta Level Knowledge to the
Construction, Maintenance and Use of Large Knowledge
Bases. Doctoral dissertation, Stanford University,
June 1976. Also available as Al Memo 283, Stanford
Artificial Intelligence Laboratory, Stanford
University, July 1976.
[5] Shortliffe, E.H., Axline, S.G., Buchanan, B.G., Merigan, T.C.,
Cohen, S.N. An Artificial Intelligence Program
to Advise Physicians Regarding Antimicrobial Therapy.
Computers and Biomedical Research. 6,544-560, 1973.
[6] Shortliffe, E.H., Davis, R., Buchanan, B.G., Axline, S.G.,
Green, C.C., Cohen, S.N. Computer-Based Consultations in
Clinical Therapeutics: Explanation and Rule-acquisition
Capabilities of the MYCIN System. Computers and Biomedical
Research 8,303-320, 1975.
[7] Shortliffe, E.H. MYCIN: A Rule-Based Computer Program to
Advise Physicians Regarding Antimicrobial Therapy Selection.
Doctoral dissertation, Stanford University, October 1974. Also
available as Computer-Based Medical Consultations: MYCIN,
American Elsevier, 1976.
[8] Winograd, T. Undersanding Naural Language. Cognitive
Psychology 3,1-191, 1972.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.885164">Journal of Computational Linguistics 62</note>
<title confidence="0.9273195">EXPLAtIATION CAPABILITIES CONSULTATION SYSTEMS</title>
<author confidence="0.9687445">WILLIAM RANDALL DAVIS SCOTT</author>
<author confidence="0.9687445">EDWARD H SHORTLIFFE</author>
<note confidence="0.944176">Research sponsored in part by Bureau of Health Services Research and Evaluation, Grant HS01544; Biotechnology .Resources, Grant RR-00785; Advanced Research Projects Agency, ARPA Contract DAHC- 15-73-C-0435; National Institute of Health, Grant GM-01922. Copyright® 1977 Association for Computational linguistics</note>
<abstract confidence="0.968861876190476">2 Summary A computer program that models an expert in a given domain is more likely to be accepted by experts in that domain, and by non-experts seeking it advice, if the system can explain its actions. An explanation capability not only adds to the system s credibility, but also enables the non-expert user to learn from it. Furthermore, clear explanations allow an check the &amp;quot;reasoning&amp;quot;, possibly discovering the need for refinements and additions to the system s knowledge base&apos; In a developing system, an explanation capability can be used as a debugging aid to verify that additions to the system are working as they should, paper di&amp;cusses general characteristics of explanation what explanations they should to give, what types Knowledge will be needed in order these explanabiohs, and how this knowledge might be organized. The explanation faallity in [5,6,/] is discussed as an illustration of how the various pnoblems might be approached. 3 Table of Contents Section Page Subsection 1. General Discussion . • • • • • . • • . • • . 4 1.1 Consultative Production Systems . • . • . . . 4 1.2 Performance Characteristics of an Explanation Capability . • • • • • . • • . . . 7 1.3 Knowledge Requirements of an Explanation Capability . . 9 1.4 Program Design Considerations . . . . . . . . 12 An Example -- MYCIN . . . • . . . . . . . . 16 2.1 Overview . . . • . • . . . . . . 16 2.2 Organization of Knowledge in MYCIN . . . . . . . 19 2.3 Scope of MYCIN&apos;s Explanation Capability . . . . . . 25 Understanding The . . . . . . . • 30 2.5 Answering the Question . . . . . . . . . . . 36 • • • • • • • . . . 48 1 General Discussion 1.1 Consultative Production Systems A consultation program plays the role of an expert consultant in some domain, giving advice or answers to non-experts with problems in the domain. Users will often want to know how the system arrived at its results during a particular consultation. This Paper explains how the implementation of such a program as a Production system can facilitate program-generated explanations. A production system [2] consists of three basic components. a set of production rules, a data base which is both used and updated by these rules, and a rule interpreter. A production rule often is in the form of situation-action rule. it describes a situation and a set of actions to be taken if this situation is found to exist. The rule interpreter determines order in which rules will be tried, see if the situations exist, and undertakes the required actions. It also determines how many of the potentially useful rules will be used. only the first (where ordering may be predetermined or comouted dynamically), all possible rules, or enough rules to satisfy some criterion that the interpreter uses. systems, rules are always tried in a predetermined order. In others, the order in which rules are tried varies with different consultations, since a rule will be tried as soon as the rule Interpreter determines that it may be useful. In such systems, the common alternatives are data-directed rule invocation, in which a rule is &amp;quot;useful&amp;quot; if its situation part matchem the data base, and goal- II 5 rule invocation, in which a rule is its action part help the system reach its current Many use a combination of goaland data-directed rule invocation. consultative system need not be a psychological model, a human s reasoning process. The important is system and a human expert use the same (or similar) knowledge about the domain to arrive at the same answer to a given problem. The system&apos;s rules data base can be viewed as a base the domainspecific knowledge of an expert as well as facts about a particular Problem. a rule is used, actions changes to the data 2re the a rule can be thought of as a piece using the judgment and knowledge of ap make deductions. The process of trying rules and taking actions can be thought of as &amp;quot;reason2ng&amp;quot;, and explanations consist of showing how rules used information provided by the user to make various intermediate decauctions and finally to arrive at the answer. If the information contained in these ru]es sufficient to show why an action was taken (without getting into programming details), an explanation can consist of printing each rule that was used (or an English equivalent of what the rule means.) 6 Figure 1. A Production-Based Consultation, System with Explanation Capability three coMponents of a production system RULE INTERPRETER, a set of PRODUCTION RULES, and a DATA are augmented by CAP4BILITY. The base is made up of about system&apos;s domain of expertise, facts that the user enters about a and made about the problem by the system&apos;s rules. These deductions form the basis the system&apos;s advice. The explanation capability makes use of the system&apos;s knowledge base to give the user explanations. knowledge base is made up static domain-spenific knowledge (both factual and judgmental) and dynamic knowledge specific to a particular problem. Static Knowledge PRODUCTION JUdgmental about domain DATA BASE General Factual Knowledge of domain ..111M I■16.</abstract>
<note confidence="0.512566166666667">RULE INTERPRETER 1 EXPLANATION CAPABILITY 11111MS • 1</note>
<title confidence="0.937746">A III 111 I I I I PI I MI I • I IN P Dynamic Knowledge</title>
<abstract confidence="0.988049647482014">explanations consultative I advice -ii Facts about entered by user ] the problem Deductions system Characteristics of an Explanation Capability purpose of an explanation (EC) is to the access to as much of the system s knowledge as possible. Ideally, it should be easy for a user to get a complete, understandable answer to any sort of about the system&apos;s knowledge operation -both in reference to a particular This =plies three major goals the development of explanation capability. 1) To ensure that the EC can handle questions about all aspects of the and It be capable of giving a few types explanations, for example. How it made a certain decision How it used a piece of information What decision it made about some subproblem Why it didn t use a certain piece of information &apos;Why it failed to make a certain decision it required piece of information it didn t a certain piece information it will find a gertain piece of information [while the consultation is in progress] the is currently doing? [while the in progress] suecific explanation types which are chosen as however, will on the particular system. 2) To enable the user to get an explanation which answers the question completely and comprehensively. To make the EC easy to use. A should be able use EC without first spending a large of learning how to request explanations. We will distinguish two slightly different functions for an EC and it into two the reasoning-status (RSC) to be used the consultation, and the question answerer (GQA) to be used the consultation after system has its results. A reasoning-status checker will answer questions asked during&apos;a consultation about the status of the syste7n s reasoning process. A few 8 simple commands are often sufficient to handle the questions that the RSC is expected to answen A genera question-answer will answer questions about the current state of the stem s knowledge base, including both static domain khowledge and fants accumulated ducing the consultation. A GQA will often need the ability to recognize a wide range of question types about many aspects of the system&apos;s knowledge. For this reason, it might be difficult to define a few simple commands which would be easy to learn and still cover all the possible questions that might be asked. Consequently, naturalin be important to an explanation system s acceptability. In an interactive consultation, the system periodically requests information about the problem. This offers the user an opportunity request explanations while the consultation is in progress. In noninteractive consultations, the user has no opportunity to interact with the system until after it has printed its conclusions. Unless there is mechanism allowing a user to interrupt the reasoning process and ask questions, the explanation capability for such a system will be limited to questions about the system&apos;s final knowledge state. It will have reasoning-status checker, and its general. question-answerer will only be accessible at the termination of the consultation. 9 Requirements of an Explanation Capability EC know what is In the system&apos;s knowledge base, and how it organized. In order explanations of current previous) actions, an EC also needs to understand how the system s rule when ruLes Lill tried how they can fail, causes the interpreter to try one rule but not another etc. This general &amp;quot;schema&amp;quot; how or why certain rules are together with a comprehensive record of the specific actions taken during a particular consultation, can be used a basis results that consultation. reasoning-status checker will of what the system has done so far in order to explain how it arrdyed at the current step. General knowledge of how the rule interpreter works is necessary in order to explain where the current step will lead. The ability to understand individual also may be to the extent that the content a may explain why it was necessary to use this rule, or may affect wnich future rules will be tried. A general question-answerer will need more information about the system since the scope of its explanations is much broader. its task is to answer general questions about the system&apos;s knowledge base. To do this, it must know how the system stores knowledge about its area of expertise (the static knowledge with which it starts each consultation) and how it stores facts gathered during a particular consultation (its dynamic knowledge). two types of information will allow a GOA to answer questions the substance and extent of the production system&apos;s current knowledge. 10 If an explanation capability also is to provide information about how the system arrived at the facts that are currently in its dynamic knowledge base, the GQA will need all the information that a reasoningstatus checker uses. a detailed record of the consultation, an understanding of the rule interpreter, and the ability to understand rules. These three types of knowledge could be supplemented with a limited amount of general information about such things as elementary logic, set theory, and arithmetic comparisons. This would allow the GQA to answer more complicated questions about why the system&apos;s knowledge base is In its current state, and to answer questions involving pelationships between different facts in the knowledge base. The nature of the consultation domain as well as what primary purpose the explanation capability is to serve will influence the range of questions that an EC should handle. In some systems, a simple retrieval of facts may suffice, while others may need to give detailed description of the production system&apos;s &amp;quot;decision&amp;quot; process and to make a number of deductions from facts that it has. 11 Figure 2. Knowledge Requirements of an Explanation Capability Access to the consultation system&apos;s knowledge base is a prerequisite for performance of the explanation capability. Other types of knowledge may be added to the system to enable the EC to wider questions, MISCELLANEOUS DOMAIN-INDEPENDENT KNOWLEDGE &apos;set theory, logic &apos;arithmetic&apos; , PROCEDURAL KNOWLEDGE ABOUT THE CONSULTATION SYSTEM Knowledge of production rules Knowledge of the rule interpreter KNOWLEDGE BASE OF CONSULTATION SYSTEM . Static Knowledge Knowledge HISTORICAL KNOWLEDGE OF CONSULTATION Record of all deductions made during the consultation 12 1.4 Program Design Considerations The last two sections described what an explanation capability is, Outlining what tasks it should perform, and what it requires in order to periorm these tasks. In this section, we discuss design considerations for the parent production system that will enable its EC to meet the requirements that were outlined in the previous section. This discussion is not meant to define the &amp;quot;correct&amp;quot; way of representing or organizing knowledge, but rather tP mention certain factors which should be taken into account when deciding what representation or organization will be best for a given production system. Types The first step is to decide what basic types of questions the system should be able to answer. This will have a direct influence on how the EC is implemented. It is important, however to make the initial flexible enough to accomodate possible future additions to the set of basics. the basic forms are diverse enough, some level of naturallanguage understanding may be necessary. The degree of sophistication the natural-language processor will depend upon what kind of performance is expected of the EC of Knowledge The format and organization of various components of the production knowledge base will affect the design EC. Individual of static and dynamic knowledge presumably will be organized in some fashion makes them accessible consultation. A GOA facility could make use of such organization to help in finding the information needed to answer a question. The less organized the knowledge base the difficult will, be the task of the EC, as more complicated routines must be used in order to find the desired information. During the course of the consultation, the system should keep a record of its actions for vse by both components of the explanation capability. Where the ordering of events is important (e.g. when the action of one rule establishes the situation necessary for a subsequent rule to 4ucceed), the record should be structured in a mariner which reflects the ordering of events as well as the reasons why each event occurred. 1.4.3 Knowledge of What Rules Mean The explanation capability will need to understand some of the semantics of individual production rules. This requirement could be met by having the system&apos;s knowledge base include a description of what each rule means, encoded in some form which would be of use to the EC. If the format of the system&apos;s rules is highly stylized and well-defined, however, it might be possible instead to implement a mechanism for &amp;quot;reading&amp;quot; the rules. the language in which the rules themselves are written could be defined. A high-level description of the individual components of this language, telling what each component means, could be used to enable the EC to read and understand rules. If the rule set consists of a large number of rules, and these rules are composed entirely of a relatively small number of primitive elements, this second approach has the advantage that less needs te be stored description of each of the primitive 14 components, as opposed to a description of each rule. When new rules are added to the system, the first approach requires that descriptions of these rules must be added. With the second approach, provided that the new rules made up of the standard rule components, additional information would be needed by the explanation capability. Knowledge of the Rule Enabling an EC to understand how the rule interpreter works analogous to enabling it to understand rules It must be able to &amp;quot;read&amp;quot; interpreter or else it must have access to some stored description of how the interpreter works. there is a third approach for understanding the rule interpreter, one which would not be feasible for understanding a larcce number of rules. Knowledge of how the interpreter works could be built into the EC -the information would not be stated explicitly, but would be used the programmer in writing the actual code for the explanation. capability. The EC can be thought of as a number of &amp;quot;specialists&amp;quot;, each capable of giving a single type of explanation. There could he each of the basic question types that the system can answer. Each of the specialists needs only a small amount of information atIout the rule interpreter which could be built into its &amp;quot;explaining&amp;quot; program. Other Knowledge The final type of knowledge that some general quest3on-answering facilities will need is information allowing deductions to be made from in the knowledge base. The representation and extent knowledge will depend upon the types of questions that the system is to 15 answer If logic is needed only to determine the answers to questions of a certain type for example, the necessary deductions could be built into the specialist for answering that type of question. On the other hand, in some explanation capibilities, the GOA will be expanded to do more than simply give explanations of the system s actions or to query its data base -it will be expected to answer a wide range of questions involving various kinds .of inferences about the knowledge base. Such a 00A will need to check equality or set membership, make arithmetic comparisons, or make logical deductions. In general most information of this type can be embodied ln a new kind of specialist which is an expert at some sort of logical deduction comparison. Representation of this sort of general will important as the GOA becomes not simply an explanation tool, but also a deductive one. 2 An Example -- MYCIN 2.1 Overview MYCIN [5,6,7] is an example of a production-basea consultation system with a well-developed explanation capability. A production run is an disease therapy consultation in which MYCIN is the disease expert, and the user is a doctor who wants advice about the treatment of a patient. Knowledge that is gathered during the consultation is organized into attribute-object-value triples. In response to questions during the the user enters information about the existence of contexts. the patient, infections patient has, organisms which may be causing these infections, cultures that were taken, and drugs that were given. The task of the consultation system is determine the values of various attributes (called clinical parameters) of contexts. For example, AGE is a parameter of patient; is a clinical of an organism, with STREPTOCOCCUS as a possible value; SITE is a parameter of a culture, with BLOOD as a possible value. clinical parameter&apos;s value may be determined by asking the by using decision The parameter is said to &amp;quot;traced&amp;quot; when the has done all it can to find out value. a involves asking the for value (where applicable) and trying rules for determining the value of that parameter. Rules are tried until the value is known with certainty or there are no rules left to use. 17 Each decision rule has a situation part called its PREMISE. This congists of predicates, conditions that are tested to determine whether the indicated situation exists. If.the conditions in a rule&apos;s PREMISE are true, ACTION will be evaluated, giving new (or updated) values to a in a rule&apos;s PREMISE can tested, that it mentions must be traced. For before rule can succeed, the must know the site of the culture, the portal of entry of the organism, and whether the patient is a compromised host. If any of the clauses in the PREMISE is false, or if the system is to find out the value one of rule will fail. RULE209 (PREMISE) (ACTION) If: 1) Tie site of the culture is blood, and GI, and The of of the organism is an organism 3) The patient is a compromised host Then: It is definite (1.0) that bacteroides is for which therapy should cover with each attribute-object-value triple is a -number between -1 and 1 inclusive which indicates how believes that the attribute of has The user may modify the answer to any a certainty and rules make which a degree of as well as attribute, object, and value. context is named uniquely, allowing the to to CULTURE-2, meaning the second culture, or ORGANISM-3, meaning the third Moreover, the are organized into a tree as the tree, which defines relationships among an is direct descendent of the culture from which it was isolated. the portion of a tree shown in Figure hangs under CULTURE-2 indicating that STREPTOCOCCUS was isolated from the BLOOD culture.</abstract>
<note confidence="0.530971">INFECTION-2 PNEUMONIA WHENINFFCT: 2/6/76 CULTURE-2 CULTURE-3 BLOOD SITE: SPUTUM ORGANISM-3</note>
<title confidence="0.6755535">IDENTITY: STREPTOCOCCUS Figure 3. Portion of a Context Tree Showing Some Contexts, Clinical Parameters, and Values</title>
<abstract confidence="0.963892581818182">The rule interpreter (MYCIN&apos;s control structure, described in detail the rules which should be used in the particular consultation, interprets these rules, and creates a record of its actions for use by the explanation system. Rules are invoked to find out values of in a given context. A rule is the lowest context in the context tree whose parameters are mentioned by the rule. The rule can use (or conclude about) parameters of this context, or of any context which is its ancestor in the tree. For example, if RULE209 were applied Figure 3) it would need the SITE of the culture from which the STREPTOCOCCUS was isolated. The tree indicates that this is CULTURE-2. Rather than being a sequential cycle through the rule set, where each rule is tried in some predetermined order, the flow of control is goaldirected. This means that only rules which conclude about the current goal (to find out the value of a given parameter) are examined. The PREMISE of 19 of these rules may need to use some whose value is unknown. This sets up a subgoal, namely to determine the value of this parameter so that the rule can be used. MYCIN&apos;s goal-directed approach means that the (and not the user) takes the a consultation. The will be asked about only those parameters may relevant the case. of Knowledge in MIN In order to give explanations of a consultation system&apos;s decisions, capability must have access to the system&apos;s knowledge base. More informative explanations can be given if the EC also has knowledge of the system works, a record the consultation, and possibly some domain-independent knowledge. This section discusses how MYCIN meets these requirements. system&apos;s base consists of medical plus dynamic knowledge about a specific consultation. Static knowledge is classitied as and judgmental. knowledge consists of which are medically valid of particular case. knowledge consists of production rules representing might be conditional an what is about the case. format of production of dynamic knowledge has already described. 20 2.2.1 Organization of Factual Knowledge As discussed in Section 2.1, all knowledge which is gathered during the consultation is organized into attribute-object-value triples. For consistency, many facts in the static knowledge base also have this format. This includes objects such as bacteria and antibiotics, and attributes such the staining of a bacterium or the recommended dosage of an antibiotic: ATTRIBUTE OBJECT VALUE GRAM E.COLI GRAMNEG DOSE GENTAMICIN 1.7 mg kg q8h IV (or IM) remainder of the factual knowledge consists of and pieces of medical knowledge, organized in such a way that they can be used augment the rules. For example, one such piece of is the list of the possible culture sites which are normally nonsterile. NONSTERILESITES: (CERVIX CUTANEOUS-ULCER LOCHIA NOSE SKIN STOOL THROAT URETHRA VAGINA) The likely pathogens asEociated with the different culture sites are organized in a table, with different entries for the different sites.</abstract>
<title confidence="0.539981875">PATH-FLORA (STREPTOCOCCUS-PNEUMONIAE STREPTOCOCCUS- GROUP-A NEISSERIA-MENINGITIDIS) URINE: (E.COLI PSEUDOMONAS ENTEROCOCCUS PROTEUS KLEBSIELLA ENTEROBACTER) (STAPHYLOCOCCUS-COAG-POS STREPTOCOCCUS- GROUP-A STAPHYLOCOCCUS-COAG-NEG) CERVIX: (STREPTOCOCCUS CLOSTRIDIUM-GANGRENE</title>
<abstract confidence="0.959507477272727">NEISSERIA-GONORRnA STREPTOCOCCUS- GROUP-A) 21 Production rules can make use of this tabularized information: RULE058 If: 1) The site of the culture is one of: those sites that are normally nonsterile, and 2) This organism and at least one of the likely pathogens associated with the site of the culture agree with respect to the following properties: air Then: Mere is strongly suggestive evidence (.9) that each of these pathogens is the identity of the organism Note that the information in the table could have been organized as attribute-object-value triples (where the object would be a culture site). this had been done, however, the above rule could not have been accomplish the same purpose (without a change in control the 3ystem would have needed several rules -a separate one for each entry in the table. Structuring certain facts into lists and tables endbles production to general theories which allow a number of specific deductions to be made. Knowledge of MYCIN&apos;s approximately 400 rules is composed a small of conceptual A of 60 such primitives make up the language in which rules Are written. This design facilitated the of a mechanism translating rules into (described in detail in [71). Each primitive functions has a translation template with to be filled in with translations of the function&apos;s A part of MYCIN&apos;s explanation capability on this ability to rules a form that the user can understand. 22 Having a small number of rule components also facilitates the of rules to see which might be applicable to explanation at MYCIN&apos;s of production rules, takes the form of a general mechanism for &amp;quot;reading&amp;quot; rules. On the other hand, no attempt has made to read of the rule interpreter. Procedural knowledge the interpreter is embodied in capable of a single type of specialist knows how the relevant part of the control structure works and what pieces of knowledge it uses. to rules, the system&apos;s specialists use a small amount of knowledge about rules in general, together with descriptions templates of of the rule components. As an example, the following rule is composed of the units SAND, SAME, and CONCLUDE.</abstract>
<note confidence="0.8434035">RULE009 PREMISE: (SAND (SAME CNTXT GRAM GRAMNEG) (SAME CNTXT MORPH COCCUS)) ACTION: (CONCLUDE CNTXT IDENTITY NEISSERIA TALLY 800) [Translation: If: 1) The gram stain of the organism is gramneg, and</note>
<abstract confidence="0.994921606936416">The morphology of organism is coccus There is suggestive identity of the organism is Neisseria] the rule is used, the atom CNTXT is bound object, the to which rule is applied (see Section 2.1)] template for CONCLUDE is below. This describes of the to the function: an object (context); an attribute parameter); third, a value for this parameter; fourth, the or degree of certainty of the PREMISE; and last, the certainty factor -a of how strong belief in conclusion would assuming that the PREMISE of the rule is definitely true. CONCLUDE TEMPLATE: (CNTXT FARM VALU TALLY CF) To illustrate how this is used, consider an explanation that involves finding all rules which could conclude that the identity of an organism is Neisseria. The appropriate specialist would start with those rules which the system uses to conclude values for the parameter IDENTITY. Using templates of the various ACTION functions which appear in each of these rules, the specialist picks out only those (like RULE009) which have NEISSERIA in their VALU slot. This also illustrates the sort of knowledge that can be built into a specialist. The specialist knew that the control structure uses stored lists telling which rules can be used to determine the value of each parameter. Furthermore, it knew that it was necessary to look only at the rules&apos; ACTIONs because it is the ACTION that concludes facts, while the PREMISE uses facts. History Tree Many of the explanation capability&apos;s specialists need a record of the consultation. This record is built during the consultation, and is into a tree structure called the tree reflects MYCIN&apos;s goal-directed approach. Each node in the tree represents a goal and contains information about how the system tried to accomplish this goal: by asking the user or by trying rules. Associated with each rule is a record of whether the rule succeeded, and if not, why it failed. If trying some rule causes the system to trace a new parameter, thereby setting up a 24 subgoal, the node for this subgoal is the offspring of the node containing the rule which caused the tracing. Figure 4 illustrates how part of A history tree might look. In this example, RULE003 caused tracing of the parlImeter CATEGORY which is used in the PREMISE of this rule. goal: IDENTITY of ORGANISM-1 ask: question 7 rules: RULE009 (failed, clause 1) ... RULE003 (succeeded) ... goal: GRAM of ORGANISM-1 ask: question 11 [no rules] I r goal: CATEGORY of ORGANISM-1 rules: RULE037 (succeeded) ... 1 goal: HOSPITAL-ACQUIRED of ORGANISM-1 ask: question 15 [no rules] Figure 4. Portion of a History Tree tRULE009 is shown above, see Figure 5 for RULE003 and RULE037] Knowledge MYCIN&apos;s question-answering ability is limited to describing the system&apos;s actions, and explaining what facts the system knows. Some of the specialists for answering questions about the consultation make use of logic arriving at their In particular, to explain why a decision lade, the appropriate uses the logical conclusion that the consists of explaining what from using of rules that have made decision. If deductions or comparisons are needed to answer questions of a specific type, then the necessary logic is built into the appropriate specialist. There is no general representation of knowledge about logic, or set theory that the explanation capability can from different facts knowledge base. To find out whether ORGANISM-2 have the same identity, for example, it is necessary for the user to ask separately for the identity of each organism, the answers to these questions. 2.3 Scope of MYC1N&apos;s Explanation Capability The purpose of the explanation system is to enable a user to see how MYCIN makes decisions, both in general and with reference to a particular To facility as useful as possible, we have tried to antit.ipate all types of questions which a user might ask, and to make every part of the system&apos;s knowledge base and reasoning process accessible through clear explanations. The entire explanation facility consists of a number of components or &amp;quot;specialists&amp;quot; each capable of giving a single type of explanation. These components are grouped into three sets: one for explaining what the system is doing at a given time, one for answering questions about the system&apos;s static knowledge base, and one for answering questions about the dynamic knowledge base. The first set forms MYCIN&apos;s reasoning-status checker, the second and third together make up the system s general question-answer. 26 Reasoning-Status Checker Whenever MYCIN asks a question, the user is allowed to interrogate the status of MYCIN&apos;s reasoning chain by asking WHY this piece of is explained sections 2.1 and 2.2, the system asks a question in order to find out about its curhent goal. Consider the of a history tree shown in Figure is one CATEGORY is another at the next level up, links them. The &amp;quot;reason&amp;quot; for adking whether the infection was hospital-acquired, then, based on an to use this rule to determine the higher subgoal. answer to WHY at this point is simply a display of the goals and linking them. given considerable attention to making this as a display as possible. since &amp;quot;why&amp;quot; has other and no processing is used this of EC, the question is to indicate the sense in which it will be answered. The higher goal is then presented, by the rule. The clauses the PREMISE of the rule divided into those already established and those yet to be determined. Finally, rules may multiple conclusions about different clinical the relevant conclusion is first and all others fbllow. Figure illustrates, further of the chain can examined by repeating the WHY command. For any of subgoals mentioned answer to a tile user may ask HOW this goal was (or will be) achieved. reasoning-status is described in more detail in [3,4,6]. • . [preceded by the first 14 questions in the consultation] 15) Is the patient&apos;s illness with ORGANISM-1 a hospital-acquired infection? [i.e. WHY is it important to determine whether or not the infection with ORGANISM-1 was acquired while the patient was hospitalized?] f1.0] This will aid in determining the category of ORGANISM-I. It has already been established that [1.1] the gram stain of ORGANISM-1 is gramneg, and [1.2] the morphology of ORGANISM-I is rod, and [1.3] the aerobicity of ORGANISM-1 is facultative Therefore, if the infection ORGANISM-1 not acquired while the patient was hospitalized then is strongly suggestive ( the category of ORGANISM-1 is enterobacteriaceae there is weakly (.1) that the identity of ORGANISM-1 is pseudomonas-aeruginosa] [RULE037] ** WHY [i.e. WHY is it important to determine the category of ORGANISM-1?] in Order to determine identity of ORGANISM-1 It has already been established that [2.1] this blood culture was taken from a sterile source Therefore, if [2.2] this current organism and at least one of the list of members with the category of the organism agree respect to the following properties: air conformation then There is strongly suggestive evidence (.9) that each of them is the identity of ORGANISM-1 [RULE003] ** HOW 1.3 HOW was it established the aerobicity of ORGANISM-1 is facultative?] The following were used: RULE027 ndicated there is strongly suggestive evidence the aerobicity of ORGANISM-1 is facultative RULE027 indicated is suggestive (.2) that the aerobicity of ORGANISM-1 is anaerobic this gave a cumulative CF of (.8) facultative, and (.2) for it has established that the of ORGANISM-1 Is facultative ** HOW 1.1 HOW was it established that the stain of ORGANISM-1 is gramneg?] You said so [question 11]. Figure 5. MYCIN&apos;s Reasoning-Status Checker [user entries follow the double asterisks] 28 General Question Answerer The question-answering part of the system has natural-language routines for analyzing the user&apos;s input. The system recognizes questions phrased in a number of ways, thereby making the question-answering facility easier to use. Questions about the static knowledge base may deal with judgmental knowledge (e.g., which rules use or conclude a certain piece of information) or they may ask about factual knowledge -entries in tables lists. Some questions about static knowledge are shown in Figure</abstract>
<affiliation confidence="0.60646875">IS BLOOD A STERILE SITE? WHAT ARE THE NONSTERILE SITES? WHAT ORGANISMS ARE IIKEL1 TO BE FOUND IN THE THROAT? IS BACTEROIDES AEROBIC?</affiliation>
<title confidence="0.9269056">WHAT METHODS OF COLLECTING SPUTUM CULTURES DO YOU CONSIDER? WHAT DOSAGE OF STREPTOMYCIN DO YOU GENERALLY RECOMMEND? HOW DO YOU DECIDE THAT AN ORGANISM MIGHT BE STREPTOCOCCUS? WHY DO YOU ASK WHETHER THE PATIENT HAS A FEVER OF UNKNOWN ORIGIN? WHAT DRUGS WOULD YOU CONSIDER TO TREAT E.COLI? HOW DO YOU USE THE SITE OF THE CULTURE TO DECIDE AN ORGANISM&apos;S IDENTITY? Questions about MYCIN&apos;s Static Knowledge</title>
<abstract confidence="0.950200666666667">Perhaps the more important part of the question-answering system is ability answer questions about a consultation. While some may be interested in checking the extent of MYCIN&apos;s questions will ask for a of, or for the rationale behind, decisions which were made during the consultation. Figure 7 are the types of questions about dynamic knowledge which can kr. handled at present. A few examples of each type are given. &lt;Cntxt&gt; some context which was discussed in the onngultation; &lt;Dam&gt; some clinical parameter of this context, &lt;rule&gt; is one of the system&apos;s decision rules. 29 1) what is &lt;parm&gt; of (cntxt&gt;</abstract>
<note confidence="0.815707703703704">TO WHAT CLASS DOES ORGANISM-1 BELONG? IS ORGANISM-1 CORYNEBACTERIUM-NON-DIPHTHERIAE?. 2) how do you know the value of iparm&gt; of &lt;cntxt&gt; HOW DO YOU KNOW THAT CULTURE-1 WAS FROM A STERILE SOURCE? DID YOU CONSIDER THAT ORGANISM-1 MIGHT BE A BACTEROIDES? WHY DON&apos;T YOU THINK THAT THE SITE OF CULTURE-1 IS URINE? WHY DID YOU RULE OUT STREPTOCOCCUS AS A POSSIBILITY FOR ORGANISM-1? 3) how did you use &lt;parm&gt; of &lt;cntxt&gt; DID YOU CONSIDER THE FACT THAT PATIENT-1 IS A COMPROMISED HOST? HOW DID YOU USE THE AEROBICITY OF ORGANISM-1? 4) why didn t you find out about &lt;parm&gt; of &lt;cntxt&gt; DID YOU FIND OUT ABOUT THE CBC ASSOCIATED WITH CULTURE-1? WHY DIDN&apos;T YOU NEED TO KNOW WHETHER ORGANISM-1 IS A CONTAMINANT? 5) what did &lt;rule&gt; tell you about &lt;cntxt&gt; HOW WAS RULE 178 HELPFUL WHEN YOU WERE CONSIDERING ORGANISM-1? RULE 116 YOU ABOUT INFECTION-1? WHY DIDN&apos;T YOU USE RULE 189 FOR ORGANISM-2? Figure 7. Sample Questions about a Consultation Before a question can be answered, it must be classified as</note>
<abstract confidence="0.999549433962264">to one of these groups. As Figure each question type includes a variety of ways in which the question can be worded, some specifying the parameter&apos;s value, some phrased in the negative, and so forth. MYCIN&apos;s natural-language processor must classify the questions, then determine what clintcal parameters, etc. the question references. 30 2.4 Understanding The Question The main emphasis in the development of the MYCIN system has been the creation of a production system which can provide sound diagnostic and therapeutic advice in the field of infectious disease. The system was included in the system&apos;s original design in order to make the consultation program&apos;s decisions acceptable, justifiable, and instructive. Since the question-answerinw facility was not the primary focus of the it is not to be a sophisticated natural-language understander. Rather, it uses crude techniques, relying strongly on the vocabulary of the domain, to &amp;quot;understand&amp;quot; information is being requested. The analysis of a question is broken into three phases: the first creates a list of terminal or root words; the second determines what type of is being asked (see the classification of questions in and the determines parameters, lists, are relevant to the question. the and last the system dictionary is important. The dictionary contains approximately 1400 words that are commonly used in the domain of infectious disease. It includes all words that are acceptable values for a parameter, common synonyms of these words, and words used elsewhere by the system in describing the parameter (e.g., when translating rule into English or requesting the of the parameter). 31 2.4.1 Reducing the Question to Terminal Words Each word in the dictionary has a synonym pointer to its terminal word (terminal words point to themserves). For the purpose of analyzing tht a non-terminal word is considered to be to its (terminal) synonym. Terminal words may have properties indicating: that this word is an value for some clinical parameter(s) that this word a certain system or table (e.g. the word &amp;quot;identity&amp;quot; implicates the parameter IDENTITY, which the of an that this word a certain parameter, list, or table (e.g. the word &amp;quot;positive&amp;quot; the NUMPOS, which means the of positive cultures in a series) 4) that this word is part of a phrase which can be of as a single of such are &amp;quot;transtracheal aspiration&amp;quot;, &amp;quot;how long&amp;quot;, and &amp;quot;not sterile&amp;quot;. Table 1. Properties of Terminal Words The first three properties are actually inverse pointers which are generated automatically from properties of&apos; &apos;the clinical parameters. Specifically, word receives the &amp;quot;acceptable value&amp;quot; pointer to a parameter (property (1) if it appears in the parameter&apos;s list of acceptable -a list is used during the to check the user&apos;s response to a for the parameter&apos;s value. Also, each clinical parameter, and has an list of key words that are used when talking about this parameter, list, or table. These words are divided to how sure we can be that a doctor is to this 32 parameter list, or table when the particular word is used in a question. It is from this list that terminal words &amp;quot;implication&amp;quot; pointers (Properties and 3 in Table 1) are During the first phase of parsing, each word in the original text is replaced by its terminal word. For words not found in the dictionary, uses root-extraction algorithm [8] to see if the word&apos;s root is in (e.g., the of &amp;quot;decision&amp;quot; is &amp;quot;decide&amp;quot;). If so, the word is replaced by the terminal word for its rOot. still unrecognized after extraction left unchanged. resulting list of terminal and unrecognized then passed to a function which recognizes phrases. Using property 4 (see Table 1) of words in this list, the function identifies a phrase and with a terminal word may be important in determining the of the question). 2.4.2 Classifying the Question waxt is to classify the question so that the can which specialist should answer it. all auestions about must be about some specific context, the system the name of the context (e.g., ORGANISM-1) be stated explicitly. This gives way to separate general questions about from questions about a particular consultation. Further classification is done through a pattern matching approach similar to that used by Colby [1]. list of words by the first phase is tested against a number of patterns (about 50 at present). Each pattern has a list of to be taken if pattern is matched. These actions set flags 31 which indicate what type of question was asked. In the case of questions judgmental knowledge (called pattern matching also divides the question into the part referring to the rule&apos;s PREMISE and the part referring to its ACTION. For example, in &amp;quot;How do you decide that an organism is streptococcus?&amp;quot;, there is no PREMISE part, and ACTION part is &amp;quot;an organism is streptococcus&amp;quot;; in &amp;quot;Do you use the of the culture to determine an the PREMISE &amp;quot;the of the culture&amp;quot; and the ACTION part is &amp;quot;an organism&apos;s identity&amp;quot;. What Pieces of Knowledge are Relevant of a question its analysis. Each has an associated with blanks to be in from different blanks and them in are listed in Table 2. With the question correctly classified, the general can tell which specialist should answer Filling in the template all information needed to find the answer. 1) &lt;cntxt&gt; - The context must 2) &lt;rule&gt; - Either a rule&apos;s mentioned, or the word &amp;quot;rule&amp;quot; will rule&apos;s number (47). 3) &lt;value&gt; - One of the terminal words in a dictionary property it value for the parameter (property 1, Table 1 -is a legal value for the parameter SITE). 4) &lt;parm&gt; - All of the words in the list the question is a legal e.g. THROAT are examined be mentioned by name. name (RULE047) will be together to see if they implicate any clinical parameters. Strong implications come from words with propertied showing that is an acceptable of the parameter, or that the word always implicates that parameter (properties 1 and 2, Table 1). Weak implications come from words with showing that they The system uses an empirical scoring for picking out only the parameters. Associated with certain parameters are words or which in the question in order for the to implicated. This allows the system to related parameters which may be by the same key words in the first pass. For example, the word &amp;quot;PMN&amp;quot; Duplicates parameters CSFPOLY (the percent of PMNs in CSF) and PMN percent of in the blood count). These are distinguished by requiring that the word &amp;quot;CSF&amp;quot; be present in a question in order for CSFPOLY to be implicated. &lt;list&gt; - System indicated in a manner to that scoring is not done. Lists, like parameters, may have associated patterns which must be present in the question. Furthermore, lists have properties telling which other system lists are their If question implicates both a list and a subset of that list, the more general (larger) list is discarded. As an example, the question &amp;quot;Which drugs are two lists: The list of all and of drugs which are aminoglycosides. The system only considers the more specific list of when answering question. &lt;table&gt; - Tables indicated in a manner similar to lists except that an entry in the table must also be in the question. word &amp;quot;organism&amp;quot; may indicate two tables: one containing a classification of organisms, and the other containing normal flora of various question &amp;quot;What organisms are considered to Ve subtypes of Pseudomonas?&amp;quot; will correctly implicate the and are the organisms likely to be found the throat?&amp;quot; will implicate the latter, is in the table and THROAT is in the second.</abstract>
<note confidence="0.90795747826087">Table 2. Mechanisms for Analyzing a Question 35 ** WHEN DO YOU DECIDE THAT AN ORGANISM IS A CONTAMINANT? [1] Terminal words: WHEN DO YOU CONCLUDE THAT A ORGANISM IS A CONTAMINANT [2] Question type: Premise part: Action part: [3] vocab. clues: (Premise) vocab. clues: (Action) Rule retrieval (WHEN DO YOU CONCLUDE) (THAT A ORGANISM IS A CONTAMINANT) (WHENINFECT (ANY) 1) (WHENSTOP (ANY) 1) (WHENSTART (ANY) 1) (DURATION (ANY) 1) (CONTAMINANT (ANY) 4) (FORM (ANY) 1) (SAMEBUG (ANY) 1) (COVERFOR (ANY) 1) [4] Final translation: Premise: ANY Action: (CONTAMINANT ANY) [5] The rules listed below conclude about:</note>
<abstract confidence="0.971520541984732">whether the organism is a contaminant 351, 39, 41, 42, 44, 347, 49, 106 Which do you wish to see? ** 6 RULE006 If: 1) The culture was taken from a sterile source, and 2) It is definite that the identity of the organism is one of: staphylococcus-coag-neg bacillussubtilis corynebacterium-non-diphtheriae Then: There is strongly suggestive evidence (.8) that the organi4m is a contaminant Figure 8. Sample of MYCIN&apos;s Analysis of a Question [User input follows the double asterisks.] [1] The question is reduced to a list of terminal words. [2] Pattern matching classifies the question as a rule-retrieval question, and divides it into a premise part and an action part. [3] Dictionary properties of the terminal words are used to determine which parameters (and their values) are relevant to each part of the question. These vocabulary clues are listed in the form (&lt;oarm&gt; (&lt;values&gt;) weight) where weight is used by the scoring mechanism to determin which parameters should be eliminated from consideration. [4] After selecting only the most strongly indicated parameters, the final translation tells what rules can answer the question: there are no restrictions on the PREMISE, and the must contain parameter CONTAMINANT (with any value). [5] The answer consists of finding all rules which meet these restrictions, and printing those that the user wants to see. 36 2.5 Answering the Question Corresponding to each question type, there are a number of possible For example, for questions of the form &amp;quot;How do you know the value of &lt;parm&gt; of &lt;cntxt&gt;?&amp;quot;, two of the answer templates are used &lt;rule&gt; to conclude &lt;parm&gt; of &lt;cntxt&gt; is &lt;value&gt;. This gave a cumulative c.f. of &lt;certainty factor&gt;. The last question asked before the conclusion was made was &lt;question number&gt;. In answer to question &lt;question number&gt; you said that &lt;parm&gt; of &lt;cntxt&gt; is &lt;value&gt; specialist for questions of a given type will need to check the history tree or the system s knowledge base in order to determine which of the answer templates is appropriate for a particular question. Some in the answer will be filled in the same items that in the question template. The remainder are filled the with which will question. In the above the slots &lt;parm&gt;, &lt;cntxt&gt;, and possibly &lt;value&gt; would filled in from the question, and the other slots would be filled from the history tree. 2.5.1 Questions about MYCIN&apos;s Static Knowledge questions MYCIN&apos;s factual knowledge are the easiest to answer. The specialist that provides answers to such questions must look up desired information in the system&apos;s base. Generally, an answer consists of simply displaying this information. As Figure illustrates, the most processing that is ever done is to check the retrieved some item in the (for eauality of set membership). 37 ** IS BLOOD A STERILE SITE? Blood is of those that are sterile. ** WHAT ARE THE NONSTERILE SITES? that are normally nonsterile are: CERVIX, CUTANEOUS-ULCER, LOCHIA, NOSE, SKIN, STOOL, THROAT, URETHRA, VAGINA. ** WHAT ORGANISMS ARE LIKELY TO BE FOUND IN THE THROAT? likely pathogens associated with throat are: STREPTWOCCUS- PNEUMONIAE, STREPTOCOCCUS-GROUP-A, NEISSERIA-MENINGITIDIS. IS BACTEROIDES the aerobicity of bacteroides anaerobic. WHAT DOSAGE OF STREPTOMYCIN DO GENERALLY RECOMMEND? The suggested dosage and route of streptomycin is 7.5 mg/kg q12h IM (or IV). ** HOW DO YOU TREAT MENINGOCOCCAL BACTEREMIA? treatment of in PRIMARY-BACTEREMIA therapy among following drugs (ranked to relative efficacy, assuming uniform sensitivity): PENICILLIN (.91) AMPICILLIN (.9) dose: 30 mg/kg q6h SULFISOXAZOLE (.8) dose: 60 mg/kg IV then 15 mg/kg q4h IV then 15 mg/kg q4h PO CHLORAMPHENICOL (.7) ERYTHROMYCIN (.5) TETRACYCLINE (.4) Duration of therapy: 14 days Figure 9. Questions about Factual Knowledge specialist that questions about knowledge is more complicated. Answering these questions 10) involves built-in knowledge about the rule set, plus the ability to &amp;quot;read&amp;quot; the rules. the time question has analyzed, the specialist knows parameters must appear in PREMISE, and which must appear in the ACTION of any rule which answers the question. Values may be specified for any of the parameters. To answer the question, the rule-retrieval specialist must first find every rule whose PREMISE and ACTION satisfy these 38 constraints. To do this, it needs to know that there are two special lists associated with each paraMeter: one containing every rule that uses the parameter in its PREMISE, and the other containing every rule that concludes the parameter its ACTION. Using these lists tor the in the the specialist can those rules that might answer the question. If no values were specified, the job and the relevant rules can be displayed without analysis; otherwise, it is necessary to read each of the rules in the list and to those which do not mention values for the parameter. rule-retrieval specialist also of a piece of MYCIN&apos;s which was discussed earlier. The system models own knowledge which are during of new knowledge an expert [4]. These can be put to many uses -one to explain general patterns in The are abstract descriptions of a subsets are generated by reading the rules. For the model for IDENT-IS-PSEUDOMONAS tells what features are common to the of rules which conclude the identity of an organism is pseudomonas. model exists describing the rules about which the question is asking, the rule-retrieval specialist incorporates this model&apos;s information its answer (Figure the question-answering facility is able give some information about for achieving some of the system&apos;s as well as the individual rules which strategies. 39 ** WHY DO YOU ASK WHETHER THE PATIENT HAS A FEVER OF UNKNOWN ORIGIN? The rules listed below use: whether the patient has a true fever of unknown origin RULE180 If: 1) The site of the culture is blood and 2) The number of cultures in the series including the culture is greater than or equal to 1, and 3) The number of cultures in this series which were positive for the organism is less than or equal to 1, and 4) The patient has a true fever of unknown origin, and 5) ^ardiac-surgery is a relevant item from the history of the patient There is suggestive evidence the infection is infective-endocarditis ** WHAT DOES GU MANIPULATION TELL YOU ABOUT THE IDENTITY OF AN ORGANISM? The rules listed below use: whether the patient has had a genito-urinary manipulative procedure to conclude about: the identity of the organism 156, 163, 190 Which do you wish to see? ** 156 RULE156 SMOISSIIIIMIMMAMWMP If: 1) The site of the culture is blood, and 2) The gram stain of the organism is gramneg, and 3) The morphology of the organism is rod, and 4) The portal of entry of the organism is urine, and 5) The patient has not had a genito-urinary manipulative procedure, and 6) Cystitis is nOt a problem for which the patient has been treated There is evidence the identity of the organism is e.coli Figure 10. -Rule-Retrieval Questions ** HOW DO YOU DECIDE THAT AN ORGANISM MIGHT BE PSEUDOMONAS AERUGINOSA? Rules which conclude that the identity of the organism is use one or more of the following pieces of information: the site of the culture the gram stain of the organism the morphology of the organism Furthermore, the following relationships hold: The gram stain of the organism, and the morphology of the tend to appear in these rules. RULE184, RULE116, RULE047, RULE085, RULE040 conclude that identity of the organism is Which of these do you wish to see? ** 184 RULE184 1) The category of the is not known, and The dram stain of the is gramneg, and 3) The morphology of the organism is rod, and The of the organism is facul There is weakly suggestive evidence (.1) that identity of the organism is pseudomonas-aeruginosa Figure 11. Question Which Use Rule Models Questions of simplest questions about specific the value of a particular 12). The specialist which these must know how to retrieve this In some it will also necessary to make comparisons to see whether a value in the auestion is one of values which was deduced for that parameter. ** TO WHAT CLASS DOES ORGANISM-1 BELONG? The category of ORGANISM-1 is enterobacteriaceae (.9) ** IS ORGANISM-1 A STREPTOCOCCUS? No. of ORGANISM-1 is e.coli (.74) bacteroides (.7) klebsiella-pneumoniae (.4) pseudomonas-aeruginosa (.22) enterobacter (.21) proteus-non-mirabilis (.19) serratia (.03) salmonella (.02) Figure 12. Questions about a Parameter&apos;s Value Answering other types of consultation-specific questions involves the use of knowledge about the control strUcture, including: 1) how the system acquires information 2) why the system tries to find out about parameters 3) how information is used once it is acquired 4) what causes a rule to be tried 5) what causes a rule to fail. The specialist for answering questions like &amp;quot;How do vou know the value of &lt;parm&gt; of &lt;cntxt&gt;?&amp;quot;, knows that the value of a parameter can come from two sources: it can be deduced by rules, or the user can tell us about in response to a question. history 2.2) will show which (possibly both) of these sources provided the particular information mentioned in the question (Figure 13). ** HOW DO YOU KNOW THAT CULTURE-1 WAS FROM A STERILE SOURCE? I used rule189 to conclude that this blood culture was taken from sterile This gave a c.f. of (1.0). The last question asked before the conclusion was made was 7. ** DID YOU CONSIDER BACTEROIDES AS A POSSIBILITY FOR ORGANISM-1? I used conclude the of ORGANISM-1 is bacteroides. This gave a cumulative c.f. of (.7). The question asked before conclusion was made was 20. ** HOW DO YOU KNOW THAT ORGANISM-1 IS E.COLI? following rules made conclusions about whether the of ORGANISM-1 is e.coli cumulative certainty last question asked Yes No conclusion HULE021 (.47) 20 RULE084 (.55) 22 RULE003 (.74) 24 answer to question 9 said identity of ORGANISM-1 is escoli (.3) Figure 13. Question Regarding How a Conclusion Was Made 42 If the question is phrased in the negative, it is necessary first to find all the ways the conclusion could have been made (this is a simple task of rule-retrieval), then to explain why it wasn&apos;t made in this consultation (Figure 14). The specialist for answering these questions must know what situations can prevent conclusions from being made. The second question in Figure 14 illustrates how the answer to one question might cause another question to be asked. ** WHY DID YOU RULE OUT STREPTOCOCCUS AS A POSSIBILITY FOR ORGANISM-1? The following rules could have been used to determine that the identity of ORGANISM-1 is streptococcus: RULE033. However, none of these succeeded in the context of ORGANISM-1. If you would like an explanation for why any of these rules failed, please enter their numbers: ** 33 Clause 2 of rule033 [&amp;quot;the morphology of the organism is coccus&amp;quot;] was already known to be false for ORGANISM-1, so the rule was never tried. WHY DON&apos;T YOU THINK THAT THE MORPHOLOGY IS COCCUS? is definite that morphology of ORGANISM-1 is rod. Knowing this with certainty rules out all other values for the the morphology of ORGANISM-1, including coccus. Figure 14. Questions Regarding Why a Conclusion Wasn&apos;t Made The specialist for answering questions of the form &amp;quot;How did you use &lt;parm&gt; of &lt;cntxt&gt;?&amp;quot;, needs to know not only how to find the specific rules might use a parameter, but also how a parameter can a rule to fail and how one parameter can prevent another from being used. The history be checked to see which of the relevant rules used oarameter, failed because of the parameter, and for some other preventing parameter from being used (Figure 15).</abstract>
<note confidence="0.82862125">43 ** HOW DID YOU USE THE AEROBICITY OF ORGANISM-1? aerobicity of ORGANISM-I used in the following rules: RULE003, RULE005, RULE084. The aerobicity of ORGANISM-1 caused the following rules to fail: RULE035, RULE051, RULE052, RULE053, RULE1111. Thc aerobicity of ORGANISM-I also would have been used in: 1ULE058, RULE086, RULE110,</note>
<abstract confidence="0.960309798076923">RULE204, RULE205. However, of these succeeded in the context of ORGANISM-I. If you would like an explanation ror why any of these rules failed, please enter their numbers: ** 37 Ru1e037 was tried in the pontext of ORGANISM-1, but it failed to clause 1 the organism is known&amp;quot;]. ** DID YOU CONSIDER THE FACT THAT PATIENT-I IS NOT A COMPROMISED HOST? The fact that Fred Jones is not a compromised host caused the following rules to fail: RULE085, RULE106. fact that Fred Jones is not a host also would been, used in: RULE109. of these succeeded in the context of PATIENT-1. If you would explanation for any of rules failed, please enter their numbers: ** NONE Figure 15: QuestJons Regarding How Information Was Used questions of the &amp;quot;Why didn&apos;t you find about &lt;parm&gt; of &lt;cntxtn&amp;quot;, general knowledge of MYCIN&apos;s control structure tells the under which it would been necessary to find out some piece information. The the can used to determine why never arose for parameter question (Figure 16). Figune 16 also illustrates that MYCIN&apos;s GQA allows a user to get as information as desired. The first answer given in itself, but it led the user another question get more information. Then another question was asked to determine why clause 1 or was false. The to the first two questions both mentioned which could be if the user wanted to examine them. The command PR (Print Rule) the user&apos;s convenience. It thus can be understood and answered immediately. (&amp;quot;What is rule 109?&amp;quot; or &amp;quot;Print rule 109.&amp;quot; also would have been understood.) 45 DID OUT ABOUT THE CBC ASSOCIATED WITH CULTURE-1? the preceding consultation, I had reason to try to out of the CBC from the time period of this blood are available. It would have been necessary to know im order use any of the following: RULE109. However, of these succeeded in context of this blood culture. If you would like an explanation for why any of these rules failed, please enter their numbers: ** 109 would be relevant to this blood culture when applied ORGANISM-1. I never ha a reason to try to apply rule109 to ORGANISM-1. I would have to use in to find out whether ORGANISM-1 is a consultation, I never had to find out whether ORGANISM-1 is a contaminant. ** WHY DIDN&apos;T YOU NEED TO KNOW WHETHER ORGANISM-1 IS A CONTAMINANT? the preceding never reason to try to find out ORGANISM-1 is a contaminant. It would have been to know this information in order to use any of the following: RULE006, RULE007, RULE/06, RULE108, RULE109, RULE159. However, none of these in the of ORGANISM-1. If you would like an why any of rules failed, please enter their numbers: ** 159 was tried in the context of ORGANISM-1, but it failed due to [nit is the of is corynebacterium-non-diphtheriaen] ** IS ORGANISM-1 CORYNEBACTERIUM-NON-DIPHTHERIAE? No. The identity of ORGANISM-1 is e.coli (.74) bacteroides (.7) (.4) (.22) (.21) proteus-non-mirabilis (.19) serratia (.03) salmonella (.02) ** PR 109 RULE109 If: 1) The culture was taken from a sterile source, and 2) It is not known whether the organism is a contaminant, and 3) The patient is not g compromised host, and The was febrila due to the infection, and The results of the cbc from the time period of culture are available, and A - The white count from the CBC is greater 10.C, or B - The percent of pmn&apos;s in the cbc at the time the culture was obtained is greater than 78, or C - The percent of wbc&apos;s which were bands in the CBC at the time the, culture was obtained Is greater than 10 There is strongly suggestive evidence the organism is not a contaminant Questions Regarding Why a Parameter Wasn&apos;t Traced 46 In questions asking about the application of a rule to a context are three posslbilities: the told us something about the the rule failed when applied to that context; Or the rule was never tried in history tree tells which of these is the case. Furthermore, if a rule succPeded, there is a record of all the conclusions made, and if it failed, reason for failure is recorded. 4s Figure 17 illustrates, rules are only applicable in certain contexts. If the rule not apply to context mentioned in the question, but might relevant when applied to some other context [which is an ancestor or the tree], question is answered as if it had mentioned the relevant context. There are interactions among the different types of questions which mentioned for the sake of clarity. a question may Indicate an incorrect assumption about the state of MYCIN&apos;s knowledge. For a question could ask don&apos;t you think that ORGANISM-1 is when, in fact, the system has that the organism To answer this question, the explanation would explain how it such a decision, despite the dhrasing of the question. Similarly, asked how the system concluded about) some oarameter that was never traced, the system explains why it didn&apos;t need to find out about the parameter, regardless of how the question was phrased.</abstract>
<note confidence="0.9208238">DID RULE 116 TELL YOU ANYTHING ABOUT INFECTION-1? Rule116 would be relevant to the primary-bacteremia when applied to: ORGANISM-1. Clause 5 of rule116 [&amp;quot;the infection is meningitis&amp;quot;] was already to be false for so the rule was never tried. ** HOW WAS RULE 178 HELPFUL WHEN YOU WERE CONSIDERING ORGANISM-1? Ru1e178 would be relevant to ORGAnISM-1 when applied to: CULTURE-1. I never had reason to try to apply rule178 to this blood culture. I would have needed to use rule178 in order to find out</note>
<abstract confidence="0.969888761904762">whether this blood culture was taken from a sterile source. nowever, I was already certain that this blood culture was taken from a sterile source. ** WHAT DID RULE 295 TELL YOU ABOUT ORGANISM-1? I used rule295 to conclude that the identity of ORGANISM-1 is hemophilus-influenzae. This gave a cumulative c.f. of (.25). The last question asked before the conclusion was made was 36. ** WHY DIDN&apos;T YOU USE,RULE112 TO FIND OUT ABOUT ORGANISM-1? RULE112 was not executed because it would have caused circular reasoning when applied to ORGANISM-1. Would you like to see the chain of rules and parameters which makes up this circle? ** YES I wanted to know about the identity of ORGANISM-1-because I try to find out the identity of the organism for all current organisms of the patient. To find out about the identity of ORGANISM-1, I tried to use rule021. Before I could use rule021, I needed to know about a prior organism with possibly the same identity as ORGANISM-1.</abstract>
<note confidence="0.649404125">To find out about a prior organism with possibly the same identity as ORGANISM-1, I tried to use rule005. Before I could use rule005, I needed to know about the aerobicity of ORGANISM-1. To find out about the aerobi city of ORGANISM-1, I tried to use rule031. Before I could use rule031, I needed to know about the category of ORGANISM-1. To find out about the category of ORGANISM-1, I tried to use</note>
<abstract confidence="0.8604732">rule112. Before I could use rule112, I needed to know about the identity of ORGANISM-1. But this is the unknown parameter I sought originally. Figuye 17. Question Regarding the Application of a Rule L18 3 Conclusions Consultation systemg which give expert advice in some domain form one class of artificial intelligence programs which can provide useful to real-world problems. The of such a system, however, depends on its acceptability to human users. One feature which can increase a system&apos;s acceptability is a mechanism whereby the system can explain or justify its advice. The development of an explanation mechanism for a consultation is much to problems of representing knowledge and of making use of different sources of knowledge. Since the production system formalism provides a unified way to represent modular pieces of knowledge, task of an explanation capability is simplified production-based consultation systems. The example of MYCIN shows how this be done and further that a system designed for a single domain with a small, technical vocabulary can give comprehensive answers to wide of sophisticated natural-language processing. 49 Acknowledgments The authors wish to express their gratitude for the interest and of Drs. Bruce Buchanan and Green (Computer Science We also indebted to the following MYCIN Project workers: Jan Aikins, Stanton Axline, Stanley Cohen, Larry Fagan, Frank Bill van Sharon Wraith, and Victor Yu. Special thanks are due to Bill van Melle and Bruce Buchanan who made numerous helpful comments on earlier drafts of the paper.</abstract>
<note confidence="0.948087875">50 References [1] Colby, K.Ms, Parkison, R.C., and Faught, B. Pattern-Matching Rules for the Recognition of Natural Language Dialogue Expressions. Al Memo 234, Stanford Artificial Intelligence Laboratory, Stanford University, June 1974. [2] Davis, R., and King, J. An Overview of Production Systems. To appear as Machine Representations of Knowledge published</note>
<author confidence="0.798467">Also available as Al Memo</author>
<affiliation confidence="0.995319">Artificial Intelligence Laboratory,</affiliation>
<note confidence="0.895590821428571">University, October 1975. [3] Davis, R., Buchanan, B.G., and Shortliffe, E.H. Production as an Approach to Knowledge-Based Systems. Memo Artificial Laboratory, Stanford University, October 1975. Also accepted for publication in Artificial Intelligence, February 1977. [4] Davis, R. Applications of Meta Level Knowledge to the Construction, Maintenance and Use of Large Knowledge Doctoral dissertation, University, 1976. Also available as Al Memo Artificial Intelligence Laboratory, Stanford University, July 1976. [5] Shortliffe, E.H., Axline, S.G., Buchanan, B.G., Merigan, T.C., Cohen, S.N. An Artificial Intelligence Program to Advise Physicians Regarding Antimicrobial Therapy. Biomedical Research. 1973. [6] Shortliffe, E.H., Davis, R., Buchanan, B.G., Axline, S.G., Green, C.C., Cohen, S.N. Computer-Based Consultations in Clinical Therapeutics: Explanation and Rule-acquisition of the MYCIN System. Computers Biomedical Research 8,303-320, 1975. [7] Shortliffe, E.H. MYCIN: A Rule-Based Computer Program to Physicians Regarding Antimicrobial Selection. Doctoral dissertation, Stanford University, October 1974. Also available as Computer-Based Medical Consultations: MYCIN, American Elsevier, 1976. [8] Winograd, T. Undersanding Naural Language. Cognitive Psychology 3,1-191, 1972.</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<title>[1] Terminal words:</title>
<journal>WHEN DO YOU CONCLUDE THAT A ORGANISM IS A CONTAMINANT</journal>
<marker></marker>
<rawString>[1] Terminal words: WHEN DO YOU CONCLUDE THAT A ORGANISM IS A CONTAMINANT</rawString>
</citation>
<citation valid="false">
<title>[2] Question type: Premise part: Action part: [3] vocab. clues: (Premise) vocab. clues:</title>
<journal></journal>
<volume>159</volume>
<marker></marker>
<rawString>[2] Question type: Premise part: Action part: [3] vocab. clues: (Premise) vocab. clues: ** 159</rawString>
</citation>
<citation valid="false">
<title>Rule159 was tried in the context of ORGANISM-1, but it failed due to clause 1 [nit is suspected that the identity of the organism is corynebacterium-non-diphtheriaen]</title>
<marker></marker>
<rawString>Rule159 was tried in the context of ORGANISM-1, but it failed due to clause 1 [nit is suspected that the identity of the organism is corynebacterium-non-diphtheriaen]</rawString>
</citation>
<citation valid="false">
<tech>IS ORGANISM-1 CORYNEBACTERIUM-NON-DIPHTHERIAE?</tech>
<marker></marker>
<rawString>** IS ORGANISM-1 CORYNEBACTERIUM-NON-DIPHTHERIAE?</rawString>
</citation>
<citation valid="false">
<authors>
<author>No</author>
</authors>
<title>The identity of ORGANISM-1 is e.coli (.74) bacteroides (.7) klebsiella-pneumoniae (.4) pseudomonas-aeruginosa (.22) enterobacter (.21) proteus-non-mirabilis (.19) serratia (.03) salmonella (.02) **</title>
<journal>PR</journal>
<volume>109</volume>
<pages>109</pages>
<marker>No, </marker>
<rawString>No. The identity of ORGANISM-1 is e.coli (.74) bacteroides (.7) klebsiella-pneumoniae (.4) pseudomonas-aeruginosa (.22) enterobacter (.21) proteus-non-mirabilis (.19) serratia (.03) salmonella (.02) ** PR 109 RULE109</rawString>
</citation>
<citation valid="false">
<title>If: 1) The culture was taken from a sterile source, and 2) It is not known whether the organism is a contaminant, and 3) The patient is not g compromised host, and 4) The patient was febrila due to the infection, and</title>
<marker></marker>
<rawString>If: 1) The culture was taken from a sterile source, and 2) It is not known whether the organism is a contaminant, and 3) The patient is not g compromised host, and 4) The patient was febrila due to the infection, and</rawString>
</citation>
<citation valid="false">
<title>5) The results of the cbc from the time period of the culture are available, and 6) A - The white count from the CBC is greater than 10.C, or</title>
<marker></marker>
<rawString>5) The results of the cbc from the time period of the culture are available, and 6) A - The white count from the CBC is greater than 10.C, or</rawString>
</citation>
<citation valid="false">
<authors>
<author>B</author>
</authors>
<title>The percent of pmn&apos;s in the cbc at the time the culture was obtained is greater than 78, or</title>
<marker>B, </marker>
<rawString>B - The percent of pmn&apos;s in the cbc at the time the culture was obtained is greater than 78, or</rawString>
</citation>
<citation valid="false">
<authors>
<author>C</author>
</authors>
<title>The percent of wbc&apos;s which were bands in the CBC at the time the, culture was obtained Is greater than 10</title>
<marker>C, </marker>
<rawString>C - The percent of wbc&apos;s which were bands in the CBC at the time the, culture was obtained Is greater than 10</rawString>
</citation>
<citation valid="false">
<authors>
<author>Then</author>
</authors>
<title>There is strongly suggestive evidence (.8) that the organism is not a contaminant The authors wish to express their gratitude for the interest and advice of Drs. Bruce Buchanan and Cordell Green (Computer Science Department). We also are indebted to the following MYCIN Project coworkers: Jan Aikins,</title>
<location>Stanton Axline, Stanley Cohen, Larry Fagan, Frank Rhame, Bill</location>
<marker>Then, </marker>
<rawString>Then: There is strongly suggestive evidence (.8) that the organism is not a contaminant The authors wish to express their gratitude for the interest and advice of Drs. Bruce Buchanan and Cordell Green (Computer Science Department). We also are indebted to the following MYCIN Project coworkers: Jan Aikins, Stanton Axline, Stanley Cohen, Larry Fagan, Frank Rhame, Bill van Melle, Sharon Wraith, and Victor Yu. Special thanks are due to Bill van Melle and Bruce Buchanan who made numerous helpful comments on earlier drafts of the paper.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Ms Colby</author>
<author>R C Parkison</author>
<author>B Faught</author>
</authors>
<title>Pattern-Matching Rules for the Recognition of Natural Language Dialogue Expressions. Al Memo 234,</title>
<date>1974</date>
<institution>Stanford Artificial Intelligence Laboratory, Stanford University,</institution>
<marker>Colby, Parkison, Faught, 1974</marker>
<rawString>[1] Colby, K.Ms, Parkison, R.C., and Faught, B. Pattern-Matching Rules for the Recognition of Natural Language Dialogue Expressions. Al Memo 234, Stanford Artificial Intelligence Laboratory, Stanford University, June 1974.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Davis</author>
<author>J King</author>
</authors>
<title>An Overview of Production Systems. To appear as</title>
<date>1976</date>
<booktitle>Machine Representations of Knowledge published as Machine Intelligence</booktitle>
<volume>8</volume>
<editor>(eds. E.W. Elcock and D. Michie), John Wylie,</editor>
<location>Stanford University,</location>
<marker>Davis, King, 1976</marker>
<rawString>[2] Davis, R., and King, J. An Overview of Production Systems. To appear as Machine Representations of Knowledge published as Machine Intelligence 8 (eds. E.W. Elcock and D. Michie), John Wylie, December 1976. Also available as Al Memo 271, Stanford Artificial Intelligence Laboratory, Stanford University, October 1975.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Davis</author>
<author>B G Buchanan</author>
<author>E H Shortliffe</author>
</authors>
<title>Production Rules as an Approach to Knowledge-Based Consultation Systems. Al Memo 266,</title>
<date>1975</date>
<institution>Stanford Artificial Intelligence Laboratory, Stanford University,</institution>
<marker>Davis, Buchanan, Shortliffe, 1975</marker>
<rawString>[3] Davis, R., Buchanan, B.G., and Shortliffe, E.H. Production Rules as an Approach to Knowledge-Based Consultation Systems. Al Memo 266, Stanford Artificial Intelligence Laboratory, Stanford University, October 1975. Also accepted for publication in Artificial Intelligence, February 1977.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Davis</author>
</authors>
<title>Applications of Meta Level Knowledge to the Construction, Maintenance and Use of Large Knowledge Bases. Doctoral dissertation,</title>
<date>1976</date>
<institution>Stanford University,</institution>
<marker>Davis, 1976</marker>
<rawString>[4] Davis, R. Applications of Meta Level Knowledge to the Construction, Maintenance and Use of Large Knowledge Bases. Doctoral dissertation, Stanford University, June 1976. Also available as Al Memo 283, Stanford Artificial Intelligence Laboratory, Stanford University, July 1976.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E H Shortliffe</author>
<author>S G Axline</author>
<author>B G Buchanan</author>
<author>T C Merigan</author>
<author>S N Cohen</author>
</authors>
<date>1973</date>
<booktitle>An Artificial Intelligence Program to Advise Physicians Regarding Antimicrobial Therapy. Computers and Biomedical Research.</booktitle>
<pages>6--544</pages>
<marker>Shortliffe, Axline, Buchanan, Merigan, Cohen, 1973</marker>
<rawString>[5] Shortliffe, E.H., Axline, S.G., Buchanan, B.G., Merigan, T.C., Cohen, S.N. An Artificial Intelligence Program to Advise Physicians Regarding Antimicrobial Therapy. Computers and Biomedical Research. 6,544-560, 1973.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E H Shortliffe</author>
<author>R Davis</author>
<author>B G Buchanan</author>
<author>S G Axline</author>
<author>C C Green</author>
<author>S N Cohen</author>
</authors>
<date>1975</date>
<booktitle>Computer-Based Consultations in Clinical Therapeutics: Explanation and Rule-acquisition Capabilities of the MYCIN System. Computers and Biomedical Research 8,303-320,</booktitle>
<marker>Shortliffe, Davis, Buchanan, Axline, Green, Cohen, 1975</marker>
<rawString>[6] Shortliffe, E.H., Davis, R., Buchanan, B.G., Axline, S.G., Green, C.C., Cohen, S.N. Computer-Based Consultations in Clinical Therapeutics: Explanation and Rule-acquisition Capabilities of the MYCIN System. Computers and Biomedical Research 8,303-320, 1975.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E H Shortliffe</author>
</authors>
<title>MYCIN: A Rule-Based Computer Program to Advise Physicians Regarding Antimicrobial Therapy Selection. Doctoral dissertation,</title>
<date>1974</date>
<publisher>MYCIN, American Elsevier,</publisher>
<institution>Stanford University,</institution>
<marker>Shortliffe, 1974</marker>
<rawString>[7] Shortliffe, E.H. MYCIN: A Rule-Based Computer Program to Advise Physicians Regarding Antimicrobial Therapy Selection. Doctoral dissertation, Stanford University, October 1974. Also available as Computer-Based Medical Consultations: MYCIN, American Elsevier, 1976.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Winograd</author>
</authors>
<title>Undersanding Naural Language.</title>
<date>1972</date>
<journal>Cognitive Psychology</journal>
<pages>3--1</pages>
<marker>Winograd, 1972</marker>
<rawString>[8] Winograd, T. Undersanding Naural Language. Cognitive Psychology 3,1-191, 1972.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>