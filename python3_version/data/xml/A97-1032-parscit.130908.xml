<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.015828">
<title confidence="0.992465">
Layout &amp; Language: Preliminary experiments in assigning logical
structure to table cells
</title>
<author confidence="0.998483">
Matthew Hurst and Shona Douglas
</author>
<affiliation confidence="0.998752">
Language Technology Group, Human Communication Research Centre,
University of Edinburgh, Edinburgh EH8 9LW UK
</affiliation>
<email confidence="0.990649">
{Matthew.Hurst,S.Douglas}@edinburgh.ac.uk
</email>
<sectionHeader confidence="0.99658" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999981071428571">
We describe a prototype system for as-
signing table cells to their proper place
in the table&apos;s logical (relational) structure,
based on a simple model of table struc-
ture combined with a number of measures
of cohesion between cell contents. Pre-
liminary results suggest that very simple
string-based cohesion measures are not suf-
ficient for the extraction of relational in-
formation, and that future work should
pursue the aim of more knowledge/data-
intensive approximations to a notional sub-
type/supertype definition of the relation-
ships between value and label cells.
</bodyText>
<sectionHeader confidence="0.998783" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999903555555556">
Real technical documents are full of text in tabu-
lar and other complex layout formats. Most repre-
sentations of tabular data are layout or geometry-
based: in SGML, in particular, Marcy Thompson
notes &amp;quot;table markup contains a great deal of infor-
mation about what a table looks like... but very lit-
tle about how the table relates the entries. ... [This]
prevents me from doing automated context-based
data retrieval or extraction.&amp;quot;&apos;
</bodyText>
<subsectionHeader confidence="0.999464">
1.1 Views of tables
</subsectionHeader>
<bodyText confidence="0.982785363636364">
In (Douglas, Hurst, and Quinn, 1995) an analysis
of table layout and linguistic characteristics was of-
fered which emphasised the potential importance of
linguistic information about the contents of cells to
the task of assigning a layout-oriented table repre-
sentation to the logical relational structure it em-
bodies. Two views of tables were distinguished: a
denotational and a functional view.
&apos;(Thompson, 1996), p151.
The denotation is the table viewed as a set of n-
tuples, forming a relation between values drawn
from n value-sets or domains. Domains typically
consist of a set of values with a common supertype in
some actual or notional Knowledge Representation
scheme. The actual table may also include label
cells which typically can be interpreted as a lexical-
isation of the common supertype. We hypothesize
that the contents of value cells and corresponding
label cells for a given domain are significantly re-
lated in respect of some measures of cohesion that
we can identify.
The functional view is a description of how the
information presentation aspects of tables embody a
decision structure (Wright, 1982) or reading path,
which determines the order in which domains are
accessed in building or looking up a tuple.
To express a given table denotation according to
a given functional view, there is a repertoire of lay-
out patterns that express how domains can be
grouped and ordered for reading in two dimensions.
These layout patterns constitute a syntax of table
structure, defining the basic geometric configura-
tions that domain values and labels can appear in.
</bodyText>
<subsectionHeader confidence="0.993716">
1.2 An information extraction task
</subsectionHeader>
<bodyText confidence="0.993602357142857">
Our application task is shallow information extrac-
tion in construction industry specification docu-
ments, containing many tables, which come to us
via the miracles of OCR as formatted ASCII, e.g., in
Figure 1.
The predominant argument type of this genre of
specification documents can be thought of as a form
of &apos;assignment&apos;, similar to that in programming lan-
guages. Our aim is to fit each assignment into a
frame that contains various elements represented
in terms of the sublanguage world model, a simple
part-of/type-of knowledge representation.
The elements we are looking for are entities, at-
tributes which the KR accepts as appropriate for
</bodyText>
<page confidence="0.995935">
217
</page>
<bodyText confidence="0.99351875">
t). w and d are either integers or the wild card ?,
and specify respectively the x-extent and y-extent
of an area of cells that can match the template; the
wild card matches any width, or depth, as appropri-
ate. t specifies whether the (sub)template is to be
counted as a value (tv) or a label area (ti).
A selection from a set of four possible restric-
tions on a template can be defined:
</bodyText>
<figure confidence="0.9129533">
Maximum total
Mix chloride ion content
( by weight of cement,
including COBS)
Prest d concrete 0.1
Concrete made with sulphate
resisting Portland cement 0.2
or supersulphated cement
Concrete made with Portland cement,
Portland blastfurnace cement or
</figure>
<figureCaption confidence="0.984922">
combinations of COBS or PFA with 0.4
ordinary Portland cement and
containing embedded metal
Figure 1: Example from the application domain
</figureCaption>
<figure confidence="0.8441901">
RESTRICTION
AREA MUST
-top
-left
+right
+bottom
not contain top row
not contain leftmost column
contain rightmost column
contain bottom row
</figure>
<bodyText confidence="0.999552875">
those entities, a unit or type for each attribute, a
value which the assignment gives to each attribute,
and a relationship expressing the semantic content
of the assignment. To extract these components, we
would like to have a basic representation of the tuple
structure of the table, plus information about any la-
bels and how they relate to the values, in order to
specify fully the relationship and its arguments.
</bodyText>
<subsectionHeader confidence="0.997933">
1.3 Aims of the current work
</subsectionHeader>
<bodyText confidence="0.999918111111111">
Without some way of identifying domains we cannot
extract the table relation we require. Our aim is to
investigate the usefulness of a range of cohesion mea-
sures, from knowledge-independent to knowledge-
intensive, in allowing us to select, from among those
areas of table cells which are syntactically capable of
being domains, those which in fact form the domains
of the table. This paper reports the very beginning
of the process.
</bodyText>
<sectionHeader confidence="0.654759" genericHeader="method">
2 The current prototype system
</sectionHeader>
<bodyText confidence="0.999948">
The system operates in two phases. In the first, a set
of areas that might constitute domains is identified,
using the constraints of table structure (geometric
configuration) and cell cohesion. In the second, this
candidate set is filtered to produce a consistent tiling
over the table.
</bodyText>
<subsectionHeader confidence="0.990478">
2.1 A simplified table structure model
</subsectionHeader>
<bodyText confidence="0.997687210526316">
The potential geometric configurations that we allow
for a set of domain values (plus optional label) are
called templates. A notation for specifying simple
domain templates is defined as follows.
A template is delimited by a pair of brackets
[... ] . Within the brackets is a list of sub-templates,
currently recursive only to depth 1 and taken to be
stacked vertically in the physical table. If a template
has no sub-templates, it consists of a triple (ww, dd,
The following templates are used currently:
lc: [[wi dl ti] [wl d? tv]] A label above a sin-
gle column of values, of any height.
lr: [[wl dl ti] [w? dl tv]] A label above a single
row of values, of any width.
v: [w? d? tv]{-top -left +right +bottom} A
rectangular area consisting of only values, re-
stricted to domains at the bottom right margin,
typically accessed using both x and y keys.
c: [vi d? tv] A single column of values.
</bodyText>
<subsectionHeader confidence="0.999565">
2.2 A simplified cohesion model
</subsectionHeader>
<bodyText confidence="0.999562736842105">
The &apos;goodness&apos; of a rectangular area of the table,
viewed as a possible instantiation of a given tem-
plate, is given by its score on the various cohesion
attributes. Values assigned for each of the chosen at-
tributes are combined in a weighted sum to yield two
overall cohesion scores for each MatchedArea, the
value-value cohesion (v-v) and the label-value
cohesion (l-v) as follows.
We have a set of n v-v cohesion functions
Ifov-v fiy-v f&apos;
T} which each take two cells and
return a value between 0 and 1 which reflects how
similar the two cells are on that function, and a
set of n weights
I which deter-
mine the relative importance of each function&apos;s re-
sult. Then for any area A composed of a set of cells
we can calculate a measure of the area&apos;s cohesion as
a set of domain values:
</bodyText>
<equation confidence="0.915817">
VS = E v-vScore(ci, ci)
(ci,ci)EA
(where (ci, ci) is an ordered pair of cells)
X&apos;
v-vScore = W- f-&apos;7 NrVIVVâ€”` Ar-N
wi
i=o
</equation>
<page confidence="0.993635">
218
</page>
<bodyText confidence="0.9964098">
We have a set of m I-v cohesion functions
{kV, fl-v fnl-v} which each take two cells and
return a value between 0 and 1 which reflects how
likely one of the cells is to be a label for the other,
w10-v, w l-v
and a set of m weights {w, w which
determine the relative importance of each function&apos;s
result. Then for an area A composed of a set of
cells and a label cell ci we calculate a measure of the
area&apos;s cohesion as a label plus set of domain values:
</bodyText>
<equation confidence="0.99930175">
LS = E 1-vScore
(chco):co EA
1-vScore =
i=0 i.0
</equation>
<bodyText confidence="0.993613666666667">
A final score for the area is calculated as follows,
depending on the type of template:
If the area&apos;s template contains values and a label:
</bodyText>
<equation confidence="0.991615333333333">
wv-v VS + whvLS
finalScore =
wv-v + whv
</equation>
<bodyText confidence="0.95078775">
where wv-v and wl_v are weights reflecting the rela-
tive importance given to the VS and LS respectively.
If the area&apos;s template contains only values:
finalScore = VS
The cohesion attributes reported here have values
between 0 and 1, where 0 corresponds to high and 1
to low similiarity:
ALPHA-NUMERIC RATIO: Given by
</bodyText>
<equation confidence="0.7342535">
icka â€” iNai lab&apos; â€” iNbi
((lc/al + a lab&apos; +iNbi
</equation>
<bodyText confidence="0.9986826">
where lac, is the number of alphabetic characters in
string a and IN at is the number of numeric characters
in string a.
STRING LENGTH RATIO: A nondirectional com-
parison of string length.
</bodyText>
<subsectionHeader confidence="0.999695">
2.3 Selecting a set of MatchedAreas
</subsectionHeader>
<bodyText confidence="0.999905">
Given a set of templates, we find a set of MatchedAr-
eas, rectangular areas of cells which satisfy a tem-
plate definition and which reach a given cohesion
threshold. The set of MatchedAreas contains no ar-
eas that are wholly contained in other matched areas
for the same template.
From the set of MatchedAreas we select the ar-
eas we believe to be the domains of the table using
a greedy algorithm which selects a set of cells that
form a complete, non-overlapping tiling over the ta-
ble.
</bodyText>
<sectionHeader confidence="0.997418" genericHeader="method">
3 Experiments
</sectionHeader>
<bodyText confidence="0.999974076923077">
To test our system, we created a corpus of tables
marked up in SGML with basic cell boundaries, al-
lowing the template mechanism to determine the x
and y position of cells. This representation is similar
in relevant information content to many SGML table
DTDs, and is also a plausible output from completely
domain-independent techniques for table recognition
in ASCII text or images, e.g., (Green and Krish-
namoorthy, 1995). To this basic representation we
added human-judgment information about the do-
mains in each table (using an interface written in
XEmacs lisp), specifying cell areas of values and la-
bels for each domain.
The tables were taken from a corpus of format-
ted ASCII documents in the domain of construction
industry specifications. 29 tables consisting of 91
domains were open to examination during the ex-
perimental development; 4 tables consisting of 13
domains were held back as a test set.
The tests we ran had different combinations of the
cohesion measures alphanum and string-length
with a factor ignorelabel, which corresponds to re-
ducing the weighting wi_t, for the goodness of the
label match to 0. The unseen condition is the last
(best-performing) combination, run on the held back
data.
</bodyText>
<sectionHeader confidence="0.997256" genericHeader="evaluation">
4 Results and future work
</sectionHeader>
<bodyText confidence="0.999985818181818">
The recall results are given in Table 1. The experi-
ment column specifies the trial in terms of the fac-
tors defined above. The templates columns specify
which templates are included in the trial. The re-
call score for each trial is the number of matched
areas that perfectly agree with the boundary and
type of a domain as marked by the human judge,
as a percentage of the number of domains identified
by the human judge. (Since the selection algorithm
produces only a single tiling for each table, precision
was not explicitly measured.)
</bodyText>
<subsectionHeader confidence="0.99984">
4.1 Effect of templates
</subsectionHeader>
<bodyText confidence="0.999881">
Increasing the number of templates available at one
time reduces the recall performance because of con-
fusion during the selection process; if we used only
the lc template, for instance, we would get better
performance overall per domain (in this application
area). The true performance of the system has to be
judged with respect to the complete set (the right-
most column in the results table), however, since all
these templates are needed to match even quite sim-
ple tables.
</bodyText>
<page confidence="0.995819">
219
</page>
<table confidence="0.999760647058824">
Experiment Templates available
{lc} {ir} {v} lc} {lc, {lc, {lc, fir, fir, fv, tic, {lc, {lc, {ir, {1c,
lr} v} cl vl cl c} 1r, 1r, v, v, 1r,
v} cl c} c} v,
cl
alphanum 84 3 3 3 82 32 60 5 2 7 33 59 24 9 26
stringlength 41 1 0 0 42 30 35 1 1 0 31 36 26 1 27
alphanum, 84 3 3 3 84 34 84 5 2 7 36 84 34 9 36
ignorelabel
stringlength, 41 1 0 0 42 34 41 1 1 0 35 42 34 1 35
ignorelabel
alphanum, 75 2 3 3 75 45 68 4 1 7 45 67 42 8 42
stringlength
alphanum, 75 2 3 3 76 47 75 5 2 7 48 76 47 8 48
stringlength,
ignorelabel
unseen 77 8 0 0 77 62 62 8 8 0 62 62 54 0 54
</table>
<tableCaption confidence="0.99981">
Table 1: Recall results for all experimental conditions: % of actual domains correctly identified
</tableCaption>
<bodyText confidence="0.9999485">
The simple templates used here are also not ade-
quate for more complex tables with patterns of reca-
pitulation and multiply layered spanning labels. We
intend to take a more sophisticated view of possi-
ble geometric configurations, perhaps similar to the
treatment in (Wang, 1996), and use the idea of read-
ing paths to extract the tuples by relating the ap-
propriate values from different domains.
</bodyText>
<subsectionHeader confidence="0.999553">
4.2 Effect of cohesion measures
</subsectionHeader>
<bodyText confidence="0.999984380952381">
The alphanum and stringlength measures in combi-
nation do perform rather better than alone. How-
ever, ignoring 1-v cohesion always improves recall;
these cohesion measures do not help in distinguish-
ing between labels and values, or in linking labels
with value-sets.
This will be more of a problem when we deal
with more complex tables with complex multi-cell
labels. In future, we intend to investigate the ef-
fect of more sophisticated cohesion measures, includ-
ing the use of thesaural information from domain-
independent sources and corpus-based Knowlege Ac-
quisition, e.g., (Mikheev and Finch, 1995), which
should form better approximations to the super-
type/subtype distinction.
Combining a number of measures, in the kind
of framework we have presented here, should allow
graceful performance over a wide range of domains
using as much information as is available, from what-
ever source, as well as convenient evaluation of the
relative contribution of different sources.
</bodyText>
<sectionHeader confidence="0.998076" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9999575">
We acknowledge the support of BICC plc who sup-
plied data and funded the first author during most
of this work, and of the Engineering and Phys-
ical Sciences Research Council of the UK, who
funded the second author under the CISAU project
(IED4/1/5818).
</bodyText>
<sectionHeader confidence="0.998716" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.997599">
Douglas, Shona, Matthew Hurst, and David Quinn.
1995. Using natural language processing for iden-
tifying and interpreting tables in plain text. In
Fourth Annual Symposium on Document Analy-
sis and Information Retrieval, pages 535-545.
Green, E. and M. Krishnamoorthy. 1995. Recogni-
tion of tables using tables grammars. In Proceed-
ings of the Fourth Annual Symposium on Docu-
ment Analysis and Information Retrieval, pages
261-278, University of Nevada, Las Vegas, April.
Mikheev, A. and S. Finch. 1995. A workbench for
acquisition of ontological knowledge from natural
text. In Proceedings of the 7th conference of the
European Chapter for Computational Linguistics,
pages 194-201, Dublin, Ireland.
Thompson, Marcy. 1996. A tables manifesto. In
Proceedings of SGML Europe, pages 151 â€” 153,
Munich, Germany.
Wang, Xinxin. 1996. Tabular Abstraction, Editing,
and Formatting. Phd, University of Waterloo, On-
tario, Canada.
Wright, Patricia. 1982. A user-oriented approach to
the design of tables and flowcharts. In David H.
Jonassen, editor, The Technology of Text. Educa-
tional Technology Publications, pages 317-340.
</reference>
<page confidence="0.997509">
220
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.309866">
<title confidence="0.8867395">Layout &amp; Language: Preliminary experiments in assigning logical structure to table cells</title>
<author confidence="0.691672">Hurst Douglas</author>
<affiliation confidence="0.999944">Language Technology Group, Human Communication Research Centre,</affiliation>
<address confidence="0.496445">University of Edinburgh, Edinburgh EH8 9LW UK</address>
<email confidence="0.93437">Matthew.Hurst@edinburgh.ac.uk</email>
<email confidence="0.93437">S.Douglas@edinburgh.ac.uk</email>
<abstract confidence="0.997477933333333">We describe a prototype system for assigning table cells to their proper place in the table&apos;s logical (relational) structure, based on a simple model of table structure combined with a number of measures of cohesion between cell contents. Preliminary results suggest that very simple string-based cohesion measures are not sufficient for the extraction of relational information, and that future work should pursue the aim of more knowledge/dataintensive approximations to a notional subtype/supertype definition of the relationships between value and label cells.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Shona Douglas</author>
<author>Matthew Hurst</author>
<author>David Quinn</author>
</authors>
<title>Using natural language processing for identifying and interpreting tables in plain text.</title>
<date>1995</date>
<booktitle>In Fourth Annual Symposium on Document Analysis and Information Retrieval,</booktitle>
<pages>535--545</pages>
<contexts>
<context position="1346" citStr="Douglas, Hurst, and Quinn, 1995" startWordPosition="200" endWordPosition="204">owledge/dataintensive approximations to a notional subtype/supertype definition of the relationships between value and label cells. 1 Introduction Real technical documents are full of text in tabular and other complex layout formats. Most representations of tabular data are layout or geometrybased: in SGML, in particular, Marcy Thompson notes &amp;quot;table markup contains a great deal of information about what a table looks like... but very little about how the table relates the entries. ... [This] prevents me from doing automated context-based data retrieval or extraction.&amp;quot;&apos; 1.1 Views of tables In (Douglas, Hurst, and Quinn, 1995) an analysis of table layout and linguistic characteristics was offered which emphasised the potential importance of linguistic information about the contents of cells to the task of assigning a layout-oriented table representation to the logical relational structure it embodies. Two views of tables were distinguished: a denotational and a functional view. &apos;(Thompson, 1996), p151. The denotation is the table viewed as a set of ntuples, forming a relation between values drawn from n value-sets or domains. Domains typically consist of a set of values with a common supertype in some actual or no</context>
</contexts>
<marker>Douglas, Hurst, Quinn, 1995</marker>
<rawString>Douglas, Shona, Matthew Hurst, and David Quinn. 1995. Using natural language processing for identifying and interpreting tables in plain text. In Fourth Annual Symposium on Document Analysis and Information Retrieval, pages 535-545.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Green</author>
<author>M Krishnamoorthy</author>
</authors>
<title>Recognition of tables using tables grammars.</title>
<date>1995</date>
<booktitle>In Proceedings of the Fourth Annual Symposium on Document Analysis and Information Retrieval,</booktitle>
<pages>261--278</pages>
<institution>University of Nevada, Las Vegas,</institution>
<contexts>
<context position="9749" citStr="Green and Krishnamoorthy, 1995" startWordPosition="1650" endWordPosition="1654">t of MatchedAreas we select the areas we believe to be the domains of the table using a greedy algorithm which selects a set of cells that form a complete, non-overlapping tiling over the table. 3 Experiments To test our system, we created a corpus of tables marked up in SGML with basic cell boundaries, allowing the template mechanism to determine the x and y position of cells. This representation is similar in relevant information content to many SGML table DTDs, and is also a plausible output from completely domain-independent techniques for table recognition in ASCII text or images, e.g., (Green and Krishnamoorthy, 1995). To this basic representation we added human-judgment information about the domains in each table (using an interface written in XEmacs lisp), specifying cell areas of values and labels for each domain. The tables were taken from a corpus of formatted ASCII documents in the domain of construction industry specifications. 29 tables consisting of 91 domains were open to examination during the experimental development; 4 tables consisting of 13 domains were held back as a test set. The tests we ran had different combinations of the cohesion measures alphanum and string-length with a factor ignor</context>
</contexts>
<marker>Green, Krishnamoorthy, 1995</marker>
<rawString>Green, E. and M. Krishnamoorthy. 1995. Recognition of tables using tables grammars. In Proceedings of the Fourth Annual Symposium on Document Analysis and Information Retrieval, pages 261-278, University of Nevada, Las Vegas, April.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Mikheev</author>
<author>S Finch</author>
</authors>
<title>A workbench for acquisition of ontological knowledge from natural text.</title>
<date>1995</date>
<booktitle>In Proceedings of the 7th conference of the European Chapter for Computational Linguistics,</booktitle>
<pages>194--201</pages>
<location>Dublin, Ireland.</location>
<contexts>
<context position="13289" citStr="Mikheev and Finch, 1995" startWordPosition="2295" endWordPosition="2298">fect of cohesion measures The alphanum and stringlength measures in combination do perform rather better than alone. However, ignoring 1-v cohesion always improves recall; these cohesion measures do not help in distinguishing between labels and values, or in linking labels with value-sets. This will be more of a problem when we deal with more complex tables with complex multi-cell labels. In future, we intend to investigate the effect of more sophisticated cohesion measures, including the use of thesaural information from domainindependent sources and corpus-based Knowlege Acquisition, e.g., (Mikheev and Finch, 1995), which should form better approximations to the supertype/subtype distinction. Combining a number of measures, in the kind of framework we have presented here, should allow graceful performance over a wide range of domains using as much information as is available, from whatever source, as well as convenient evaluation of the relative contribution of different sources. Acknowledgements We acknowledge the support of BICC plc who supplied data and funded the first author during most of this work, and of the Engineering and Physical Sciences Research Council of the UK, who funded the second auth</context>
</contexts>
<marker>Mikheev, Finch, 1995</marker>
<rawString>Mikheev, A. and S. Finch. 1995. A workbench for acquisition of ontological knowledge from natural text. In Proceedings of the 7th conference of the European Chapter for Computational Linguistics, pages 194-201, Dublin, Ireland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marcy Thompson</author>
</authors>
<title>A tables manifesto.</title>
<date>1996</date>
<booktitle>In Proceedings of SGML Europe,</booktitle>
<pages>151--153</pages>
<location>Munich, Germany.</location>
<contexts>
<context position="1723" citStr="Thompson, 1996" startWordPosition="259" endWordPosition="260">on about what a table looks like... but very little about how the table relates the entries. ... [This] prevents me from doing automated context-based data retrieval or extraction.&amp;quot;&apos; 1.1 Views of tables In (Douglas, Hurst, and Quinn, 1995) an analysis of table layout and linguistic characteristics was offered which emphasised the potential importance of linguistic information about the contents of cells to the task of assigning a layout-oriented table representation to the logical relational structure it embodies. Two views of tables were distinguished: a denotational and a functional view. &apos;(Thompson, 1996), p151. The denotation is the table viewed as a set of ntuples, forming a relation between values drawn from n value-sets or domains. Domains typically consist of a set of values with a common supertype in some actual or notional Knowledge Representation scheme. The actual table may also include label cells which typically can be interpreted as a lexicalisation of the common supertype. We hypothesize that the contents of value cells and corresponding label cells for a given domain are significantly related in respect of some measures of cohesion that we can identify. The functional view is a d</context>
</contexts>
<marker>Thompson, 1996</marker>
<rawString>Thompson, Marcy. 1996. A tables manifesto. In Proceedings of SGML Europe, pages 151 â€” 153, Munich, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xinxin Wang</author>
</authors>
<title>Tabular Abstraction, Editing, and Formatting.</title>
<date>1996</date>
<tech>Phd,</tech>
<institution>University of Waterloo,</institution>
<location>Ontario, Canada.</location>
<contexts>
<context position="12542" citStr="Wang, 1996" startWordPosition="2177" endWordPosition="2178">ngth, 41 1 0 0 42 34 41 1 1 0 35 42 34 1 35 ignorelabel alphanum, 75 2 3 3 75 45 68 4 1 7 45 67 42 8 42 stringlength alphanum, 75 2 3 3 76 47 75 5 2 7 48 76 47 8 48 stringlength, ignorelabel unseen 77 8 0 0 77 62 62 8 8 0 62 62 54 0 54 Table 1: Recall results for all experimental conditions: % of actual domains correctly identified The simple templates used here are also not adequate for more complex tables with patterns of recapitulation and multiply layered spanning labels. We intend to take a more sophisticated view of possible geometric configurations, perhaps similar to the treatment in (Wang, 1996), and use the idea of reading paths to extract the tuples by relating the appropriate values from different domains. 4.2 Effect of cohesion measures The alphanum and stringlength measures in combination do perform rather better than alone. However, ignoring 1-v cohesion always improves recall; these cohesion measures do not help in distinguishing between labels and values, or in linking labels with value-sets. This will be more of a problem when we deal with more complex tables with complex multi-cell labels. In future, we intend to investigate the effect of more sophisticated cohesion measure</context>
</contexts>
<marker>Wang, 1996</marker>
<rawString>Wang, Xinxin. 1996. Tabular Abstraction, Editing, and Formatting. Phd, University of Waterloo, Ontario, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Patricia Wright</author>
</authors>
<title>A user-oriented approach to the design of tables and flowcharts.</title>
<date>1982</date>
<booktitle>The Technology of Text. Educational Technology Publications,</booktitle>
<pages>317--340</pages>
<editor>In David H. Jonassen, editor,</editor>
<contexts>
<context position="2430" citStr="Wright, 1982" startWordPosition="375" endWordPosition="376">ues drawn from n value-sets or domains. Domains typically consist of a set of values with a common supertype in some actual or notional Knowledge Representation scheme. The actual table may also include label cells which typically can be interpreted as a lexicalisation of the common supertype. We hypothesize that the contents of value cells and corresponding label cells for a given domain are significantly related in respect of some measures of cohesion that we can identify. The functional view is a description of how the information presentation aspects of tables embody a decision structure (Wright, 1982) or reading path, which determines the order in which domains are accessed in building or looking up a tuple. To express a given table denotation according to a given functional view, there is a repertoire of layout patterns that express how domains can be grouped and ordered for reading in two dimensions. These layout patterns constitute a syntax of table structure, defining the basic geometric configurations that domain values and labels can appear in. 1.2 An information extraction task Our application task is shallow information extraction in construction industry specification documents, c</context>
</contexts>
<marker>Wright, 1982</marker>
<rawString>Wright, Patricia. 1982. A user-oriented approach to the design of tables and flowcharts. In David H. Jonassen, editor, The Technology of Text. Educational Technology Publications, pages 317-340.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>