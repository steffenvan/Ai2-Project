<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.017843">
<note confidence="0.385184">
Book Reviews Automated Theorem Proving
</note>
<bodyText confidence="0.9380428">
grammar and purely linguistic theory with parsing
techniques; it is a pity that their articles in this book
make no suggestion of such a combination.)
In summary, this book is not systematic enough
for an introductory text, and it surveys too much
familiar work for a research collection. Although
the book is not suitable as a primary textbook, parts
of it would make good supplementary reading for a
course in AT or computational linguistics.
John F. Sowa, IBM Systems Research Institute
</bodyText>
<sectionHeader confidence="0.673019" genericHeader="abstract">
Automated Theorem Proving: A Logical Basis
D.W. Loveland
</sectionHeader>
<subsectionHeader confidence="0.960996">
North-Holland Publishing Co., New York, 1978,
432 pp., $43.50, ISBN 0-7204-0499-1.
</subsectionHeader>
<bodyText confidence="0.984575136363636">
To determine whether someone understands a
text, such as a story, essay, or poem, he is asked
questions that require him to draw inferences from
what he has read. Since the text, questions, and
answers are all in natural language, a theory of natu-
ral language understanding is not satisfactory if it
cannot support a model of how questions are an-
swered. When linguists propose explanations for
natural language, therefore, they must consider the
inference procedures that will be needed to extract
information from the representations in their theo-
ries.
The inference process associated with the an-
swering of questions can be formally characterized
as theorem proving, the subject of Loveland&apos;s book.
Loveland presents mostly various methods of theo-
rem proving by resolution, but the most attractive
method he presents is a non-resolution approach
that extends the problem reduction method in artifi-
cial intelligence. In the problem reduction method,
a question Q is reduced to a set of subquestions P1,
P2, Pn by application of the assertion
</bodyText>
<equation confidence="0.964122">
P1 &amp; P2 &amp; &amp; Pn Q
</equation>
<bodyText confidence="0.985071689655173">
which is called an implication. The terms Pi and Q
are atomic statements or their negations. Loveland
points out that the problem reduction method is not
complete, i.e., that it cannot always answer answera-
ble questions. From the assertions
PDQ, —13 Q
for example, the question Q cannot be answered yes
(shown to be a theorem) even though that is logical-
ly implied. (The incompleteness comes from the
fact that negation is a primitive in first order logic.
See Black [1] and Smullyan [3] for systems that do
not have negation as a primitive and for which prob-
lem reduction is complete.)
Loveland&apos;s extension to the problem reduction
method, named the MESON format (called a format
because many design choices are left to the implem-
enter), adds several rules to the problem reduction
method which make it complete. These rules do not
complicate the method very much; the most impor-
tant new rule, for instance, states that when answer-
ing a question Q, if one of the resulting subques-
tions is —Q, then that subquestion is considered to
be successfully answered in the affirmative. (This
rule is essentially proof by contradiction.) The ME-
SON format is partially described elsewhere
(Loveland and Stickel [2]), but this book is the
source for a full description and a proof of its com-
pleteness.
The book is divided into six chapters. The first
two chapters review the basic concepts of first order
logic and explain the basic resolution procedure.
Chapter 3 presents several refinements of resolution,
including unit preference, set-of-support, linear re-
finements, and model elimination. Chapter 4 dis-
cusses subsumption, a technique that removes re-
dundant expressions from further consideration.
Chapter 5 adds paramodulation, the inference rule
that handles equality in the context of a resolution-
based theorem proving system. The last chapter is
devoted to the MESON format. In a sense Chapter
6 is the climax of the book because the MESON
format is justified on the basis of theorems about
resolution in the preceding five chapters.
This book is a well organized and well written
reference for mechanical theorem proving methods
presented at the algorithmic level. More than this
should not be expected. It assumes that the reader
has an acquaintance with formal logic. It proves
rigorously nearly every theorem presented, and there
are many. Many technical terms are defined
throughout the book, as is typical of mathematical
treatments. Although theorem proving consists of
two parts, a mechanism that defines a search space
and a control that guides the search in that space,
the techniques described in the book are only the
space defining mechanisms. Details of the guiding
controls are still the subject of research.
Daniel Chester, University of Texas at Austin
</bodyText>
<sectionHeader confidence="0.993527" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9999611">
1. Black, F. A deduction question-answering system, Seman-
tic Information Processing, Marvin Minsky, ed., MIT
Press, Cambridge, MA (1968), 354-402.
2. Loveland, D. W. and Stickel, M. E. A hole in goal trees:
Some guidance from resolution theory, Proc. Third IJCAI,
Stanford, Calif. (August 1973), 153-161. Also in IEEE
Trans. on Computers C-25 (April 1976), 335-341.
3. Smullyan, R. M. Theory of Formal Systems. Annals of
Mathematics Studies, No. 47, Princeton University Press,
Princeton, N.J., 1961.
</reference>
<page confidence="0.944713">
48 American Journal of Computational Linguistics, Volume 6, Number 1, January-March 1980
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.131515">
<title confidence="0.966536">Book Reviews Automated Theorem Proving</title>
<abstract confidence="0.984313888888889">grammar and purely linguistic theory with parsing techniques; it is a pity that their articles in this book make no suggestion of such a combination.) In summary, this book is not systematic enough for an introductory text, and it surveys too much familiar work for a research collection. Although the book is not suitable as a primary textbook, parts of it would make good supplementary reading for a course in AT or computational linguistics.</abstract>
<note confidence="0.619172333333333">F. Sowa, Systems Research Institute Automated Theorem Proving: A Logical Basis D.W. Loveland North-Holland Publishing Co., New York, 1978, 432 pp., $43.50, ISBN 0-7204-0499-1. To determine whether someone understands a</note>
<abstract confidence="0.998750810126582">text, such as a story, essay, or poem, he is asked questions that require him to draw inferences from what he has read. Since the text, questions, and answers are all in natural language, a theory of natural language understanding is not satisfactory if it cannot support a model of how questions are answered. When linguists propose explanations for natural language, therefore, they must consider the inference procedures that will be needed to extract information from the representations in their theories. The inference process associated with the answering of questions can be formally characterized as theorem proving, the subject of Loveland&apos;s book. Loveland presents mostly various methods of theorem proving by resolution, but the most attractive method he presents is a non-resolution approach that extends the problem reduction method in artificial intelligence. In the problem reduction method, a question Q is reduced to a set of subquestions P1, P2, Pn by application of the assertion P1 &amp; P2 &amp; &amp; Pn Q which is called an implication. The terms Pi and Q are atomic statements or their negations. Loveland points out that the problem reduction method is not complete, i.e., that it cannot always answer answerable questions. From the assertions Q for example, the question Q cannot be answered yes (shown to be a theorem) even though that is logically implied. (The incompleteness comes from the fact that negation is a primitive in first order logic. See Black [1] and Smullyan [3] for systems that do not have negation as a primitive and for which problem reduction is complete.) Loveland&apos;s extension to the problem reduction method, named the MESON format (called a format because many design choices are left to the implementer), adds several rules to the problem reduction method which make it complete. These rules do not complicate the method very much; the most important new rule, for instance, states that when answering a question Q, if one of the resulting subquestions is —Q, then that subquestion is considered to be successfully answered in the affirmative. (This rule is essentially proof by contradiction.) The ME- SON format is partially described elsewhere (Loveland and Stickel [2]), but this book is the source for a full description and a proof of its completeness. The book is divided into six chapters. The first two chapters review the basic concepts of first order logic and explain the basic resolution procedure. Chapter 3 presents several refinements of resolution, including unit preference, set-of-support, linear refinements, and model elimination. Chapter 4 discusses subsumption, a technique that removes redundant expressions from further consideration. Chapter 5 adds paramodulation, the inference rule that handles equality in the context of a resolutionbased theorem proving system. The last chapter is devoted to the MESON format. In a sense Chapter 6 is the climax of the book because the MESON format is justified on the basis of theorems about resolution in the preceding five chapters. This book is a well organized and well written reference for mechanical theorem proving methods presented at the algorithmic level. More than this should not be expected. It assumes that the reader has an acquaintance with formal logic. It proves rigorously nearly every theorem presented, and there are many. Many technical terms are throughout the book, as is typical of mathematical treatments. Although theorem proving consists of two parts, a mechanism that defines a search space and a control that guides the search in that space, the techniques described in the book are only the space defining mechanisms. Details of the guiding controls are still the subject of research.</abstract>
<note confidence="0.931892769230769">Chester, of Texas at Austin References Black, F. A deduction question-answering system, Seman- Information Processing, Minsky, ed., MIT Press, Cambridge, MA (1968), 354-402. 2. Loveland, D. W. and Stickel, M. E. A hole in goal trees: guidance from resolution theory, Third IJCAI, Calif. (August 1973), 153-161. Also in on Computers (April 1976), 335-341. Smullyan, R. M. of Formal Systems. of Mathematics Studies, No. 47, Princeton University Press, Princeton, N.J., 1961. Journal of Computational Linguistics, Volume 6, Number 1, January-March 1980</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>F Black</author>
</authors>
<title>A deduction question-answering system, Semantic Information Processing,</title>
<date>1968</date>
<pages>354--402</pages>
<editor>Marvin Minsky, ed.,</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA</location>
<contexts>
<context position="2199" citStr="[1]" startWordPosition="359" endWordPosition="359">oblem reduction method, a question Q is reduced to a set of subquestions P1, P2, Pn by application of the assertion P1 &amp; P2 &amp; &amp; Pn Q which is called an implication. The terms Pi and Q are atomic statements or their negations. Loveland points out that the problem reduction method is not complete, i.e., that it cannot always answer answerable questions. From the assertions PDQ, —13 Q for example, the question Q cannot be answered yes (shown to be a theorem) even though that is logically implied. (The incompleteness comes from the fact that negation is a primitive in first order logic. See Black [1] and Smullyan [3] for systems that do not have negation as a primitive and for which problem reduction is complete.) Loveland&apos;s extension to the problem reduction method, named the MESON format (called a format because many design choices are left to the implementer), adds several rules to the problem reduction method which make it complete. These rules do not complicate the method very much; the most important new rule, for instance, states that when answering a question Q, if one of the resulting subquestions is —Q, then that subquestion is considered to be successfully answered in the affir</context>
</contexts>
<marker>1.</marker>
<rawString>Black, F. A deduction question-answering system, Semantic Information Processing, Marvin Minsky, ed., MIT Press, Cambridge, MA (1968), 354-402.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D W Loveland</author>
<author>M E Stickel</author>
</authors>
<title>A hole in goal trees: Some guidance from resolution theory,</title>
<date>1973</date>
<booktitle>Proc. Third IJCAI,</booktitle>
<pages>153--161</pages>
<location>Stanford, Calif.</location>
<contexts>
<context position="2933" citStr="[2]" startWordPosition="481" endWordPosition="481">ension to the problem reduction method, named the MESON format (called a format because many design choices are left to the implementer), adds several rules to the problem reduction method which make it complete. These rules do not complicate the method very much; the most important new rule, for instance, states that when answering a question Q, if one of the resulting subquestions is —Q, then that subquestion is considered to be successfully answered in the affirmative. (This rule is essentially proof by contradiction.) The MESON format is partially described elsewhere (Loveland and Stickel [2]), but this book is the source for a full description and a proof of its completeness. The book is divided into six chapters. The first two chapters review the basic concepts of first order logic and explain the basic resolution procedure. Chapter 3 presents several refinements of resolution, including unit preference, set-of-support, linear refinements, and model elimination. Chapter 4 discusses subsumption, a technique that removes redundant expressions from further consideration. Chapter 5 adds paramodulation, the inference rule that handles equality in the context of a resolutionbased theo</context>
</contexts>
<marker>2.</marker>
<rawString>Loveland, D. W. and Stickel, M. E. A hole in goal trees: Some guidance from resolution theory, Proc. Third IJCAI, Stanford, Calif. (August 1973), 153-161. Also in IEEE Trans. on Computers C-25 (April 1976), 335-341.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Smullyan</author>
</authors>
<title>Theory of Formal Systems.</title>
<date>1961</date>
<journal>Annals of Mathematics Studies,</journal>
<volume>47</volume>
<publisher>Princeton University Press,</publisher>
<location>Princeton, N.J.,</location>
<contexts>
<context position="2216" citStr="[3]" startWordPosition="362" endWordPosition="362">ethod, a question Q is reduced to a set of subquestions P1, P2, Pn by application of the assertion P1 &amp; P2 &amp; &amp; Pn Q which is called an implication. The terms Pi and Q are atomic statements or their negations. Loveland points out that the problem reduction method is not complete, i.e., that it cannot always answer answerable questions. From the assertions PDQ, —13 Q for example, the question Q cannot be answered yes (shown to be a theorem) even though that is logically implied. (The incompleteness comes from the fact that negation is a primitive in first order logic. See Black [1] and Smullyan [3] for systems that do not have negation as a primitive and for which problem reduction is complete.) Loveland&apos;s extension to the problem reduction method, named the MESON format (called a format because many design choices are left to the implementer), adds several rules to the problem reduction method which make it complete. These rules do not complicate the method very much; the most important new rule, for instance, states that when answering a question Q, if one of the resulting subquestions is —Q, then that subquestion is considered to be successfully answered in the affirmative. (This rul</context>
</contexts>
<marker>3.</marker>
<rawString>Smullyan, R. M. Theory of Formal Systems. Annals of Mathematics Studies, No. 47, Princeton University Press, Princeton, N.J., 1961.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>