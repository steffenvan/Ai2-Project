<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000062">
<title confidence="0.999703">
A Ranking Model of Proximal and Structural Text Retrieval
Based on Region Algebra
</title>
<author confidence="0.996052">
Katsuya Masuda
</author>
<affiliation confidence="0.999286">
Department of Computer Science, Graduate School of Information Science and Technology,
University of Tokyo, Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, Japan
</affiliation>
<email confidence="0.997996">
kmasuda@is.s.u-tokyo.ac.jp
</email>
<sectionHeader confidence="0.995637" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999960181818182">
This paper investigates an application of
the ranked region algebra to information
retrieval from large scale but unannotated
documents. We automatically annotated
documents with document structure and
semantic tags by using taggers, and re-
trieve information by specifying struc-
ture represented by tags and words using
ranked region algebra. We report in detail
what kind of data can be retrieved in the
experiments by this approach.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999982980392157">
In the biomedical area, the number of papers is very
large and increases, as it is difficult to search the in-
formation. Although keyword-based retrieval sys-
tems can be applied to a database of papers, users
may not get the information they want since the re-
lations between these keywords are not specified. If
the document structures, such as “title”, “sentence”,
“author”, and relation between terms are tagged in
the texts, then the retrieval is improved by specify-
ing such structures. Models of the retrieval specify-
ing both structures and words are pursued by many
researchers (Chinenyanga and Kushmerick, 2001;
Wolff et al., 1999; Theobald and Weilkum, 2000;
Deutsch et al., 1998; Salminen and Tompa, 1994;
Clarke et al., 1995). However, these models are not
robust unlike keyword-based retrieval, that is, they
retrieve only the exact matches for queries.
In the previous research (Masuda et al., 2003), we
proposed a new ranking model that enables proximal
and structural search for structured text. This paper
investigates an application of the ranked region al-
gebra to information retrieval from large scale but
unannotated documents. We reports in detail what
kind of data can be retrieved in the experiments. Our
approach is to annotate documents with document
structures and semantic tags by taggers automati-
cally, and to retrieve information by specifying both
structures and words using ranked region algebra. In
this paper, we apply our approach to the OHSUMED
test collection (Hersh et al., 1994), which is a public
test collection for information retrieval in the field
of biomedical science but not tag-annotated. We an-
notate OHSUMED by various taggers and retrieve
information from the tag-annotated corpus.
We have implemented the ranking model in our
retrieval engine, and had preliminary experiments to
evaluate our model. In the experiments, we used
the GENIA corpus (Ohta et al., 2002) as a small but
manually tag-annotated corpus, and OHSUMED as
a large but automatically tag-annotated corpus. The
experiments show that our model succeeded in re-
trieving the relevant answers that an exact-matching
model fails to retrieve because of lack of robustness,
and the relevant answers that a non-structured model
fails because of lack of structural specification. We
report how structural specification works and how it
doesn’t work in the experiments with OHSUMED.
Section 2 explains the region algebra. In Section
3, we describe our ranking model for the structured
query and texts. In Section 4, we show the experi-
mental results of this system.
</bodyText>
<equation confidence="0.935634">
Expression Description
q1 ✄ q2 Gq1✄q2 = Γ({a|a E Gq1 n ]b E Gq2.(b ❁ a)})
q1 ✄� q2 Gq1Vq2 = Γ({a|a E Gq1n Ab E Gq2.(b ❁ a)})
q1 ✁ q2 Gq1aq2 = Γ({a|a E Gq1 n ]b E Gq2.(a ❁ b)})
q1 ✁� q2 Gq1Aq2 = Γ({a|a E Gq1n Ab E Gq2.(a ❁ b)})
q1 A q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c n b ❁ c)})
q1 p q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c V b ❁ c)})
q1 ✸ q2 Gq1✸q2 = Γ({c|c = (ps,p&apos;e) where ](ps, pe) E Gq1.](p&apos;s,p&apos;e) E Gq2.(pe &lt; p&apos;s)})
</equation>
<tableCaption confidence="0.910957">
Table 1: Operators of the Region algebra
</tableCaption>
<figureCaption confidence="0.952304">
Figure 1: Tree of the query ‘[book] ✄ ([title] ✄ “re-
trieval”)’
</figureCaption>
<sectionHeader confidence="0.853384" genericHeader="method">
2 Background: Region algebra
</sectionHeader>
<bodyText confidence="0.999359761904762">
The region algebra (Salminen and Tompa, 1994;
Clarke et al., 1995; Jaakkola and Kilpelainen, 1999)
is a set of operators representing the relation be-
tween the extents (i.e. regions in texts), where an
extent is represented by a pair of positions, begin-
ning and ending position. Region algebra allows for
the specification of the structure of text.
In this paper, we suppose the region algebra pro-
posed in (Clarke et al., 1995). It has seven opera-
tors as shown in Table 1; four containment opera-
tors (✄, 0, ✁, 0) representing the containment re-
lation between the extents, two combination oper-
ators (A, p) corresponding to “and” and “or” op-
erator of the boolean model, and ordering operator
(✸) representing the order of words or structures in
the texts. A containment relation between the ex-
tents is represented as follows: e = (ps, pe) contains
e&apos; = (p&apos;s, p&apos;e) iffps &lt; p&apos;s &lt; p&apos;e &lt; pe (we express this
relation as e ❂ e&apos;). The result of retrieval is a set of
non-nested extents, that is defined by the following
function Γ over a set of extents S:
</bodyText>
<equation confidence="0.555189">
Γ(S) = {e|e E Sn Ae&apos; E S.(e&apos; =�e n e&apos; ❁ e)}
</equation>
<figureCaption confidence="0.785285">
Figure 2: Subqueries of the query ‘[book] ✄ ([title]
✄ “retrieval”)’
</figureCaption>
<bodyText confidence="0.991802916666667">
Intuitively, Γ(S) is an operation for finding the
shortest matching. A set of non-nested extents
matching query q is expressed as Gq.
For convenience of explanation, we represent a
query as a tree structure as shown in Figure 1 (‘[x]’
is a abbreviation of ‘(x) ✸ (/x)’). This query rep-
resents ‘Retrieve the books whose title has the word
“retrieval.” ’
The algorithm for finding an exact match of a
query works efficiently. The time complexity of the
algorithm is linear to the size of a query and the size
of documents (Clarke et al., 1995).
</bodyText>
<sectionHeader confidence="0.870561" genericHeader="method">
3 A Ranking Model for Structured
Queries and Texts
</sectionHeader>
<bodyText confidence="0.95854175">
This section describes the definition of the relevance
between a document and a structured query repre-
sented by the region algebra. The key idea is that a
structured query is decomposed into subqueries, and
the relevance of the whole query is represented as a
vector of relevance measures of subqueries.
Our model assigns a relevance measure of the
query matching extents in (1,15) matching extents in (16,30) constructed by
</bodyText>
<table confidence="0.999061666666667">
qr “(book)” (1,1) (16,16) inverted list
q2 “(/book)” (15,15) (30,30) inverted list
q3 “(title)” (2,2), (7,7) (17,17), (22,22) inverted list
q4 “(/title)” (5,5), (11,11) (20,20), (27,27) inverted list
q5 “retrieval” (4,4), (13,13) (28,28) inverted list
q6 ‘[title]’ (2,5), (7,11) (17,20), (22,27) Gq3, Gq4
q7 ‘[title] ✄ “retrieval”’ (2,5) Gq5, Gq6
q8 ‘[book]’ (1,15) (16,30) Gqr, Gq2
q9 ‘[book] ✄ ([title] ✄ “retrieval”)’ (1,15) Gq7, Gq8
</table>
<tableCaption confidence="0.997862">
Table 2: Extents that match each subquery in the extent (1,15) and (16, 30)
</tableCaption>
<figure confidence="0.7274551">
(book) (title) ranked retrieval (/title) (chapter)
1 2 3 4 5 6
(title) tf and idf (/title) ranked
7 8 9 10 11 12
retrieval (/chapter) (/book) (book) (title) structured
13 14 15 16 17 18
text (/title) (chapter) (title) search for
19 20 21 22 23 24
structured text (/title) retrieval (/chapter) (/book)
25 26 27 28 29 30
</figure>
<figureCaption confidence="0.998615">
Figure 3: An example text
</figureCaption>
<bodyText confidence="0.974481921568627">
structured query as a vector of relevance measures
of the subqueries. In other words, the relevance
is defined by the number of portions matched with
subqueries in a document. If an extent matches a
subquery of query q, the extent will be somewhat
relevant to q even when the extent does not exactly
match q. Figure 2 shows an example of a query and
its subqueries. In this example, even when an extent
does not match the whole query exactly, if the ex-
tent matches “retrieval” or ‘[title]✄“retrieval”’, the
extent is considered to be relevant to the query. Sub-
queries are formally defined as follows.
Definition 1 (Subquery) Let q be a given query
and n1, ..., nm be the nodes of q. Subqueries
q1, ..., qm of q are the subtrees of q. Each qi has
node ni as a root node.
When a relevance a(qi, d) between a subquery
qi and a document d is given, the relevance of the
whole query is defined as follows.
Definition 2 (Relevance of the whole query) Let q
be a given query, d be a document and q1, ..., qm be
subqueries of q. The relevance vector E(q, d) ofd is
defined as follows:
E(q, d) = (a(q1, d), a(q2, d), ..., a(qm, d))
A relevance of a subquery should be defined simi-
larly to that of keyword-based queries in the tradi-
tional ranked retrieval. For example, TFIDF, which
is used in our experiments in Section 4, is the most
simple and straightforward one, while other rele-
vance measures recently proposed (Robertson and
Walker, 2000; Fuhr, 1992) can be applied. TF of a
subquery is calculated using the number of extents
matching the subquery, and IDF of a subquery is
calculated using the number of documents includ-
ing the extents matching the subquery. When a
text is given as Figure 3 and document collection is
{(1,15),(16,30)}, extents matching each subquery in
each document are shown in Table 2. TF and IDF
are calculated using the number of extents matching
subquery in Table 2.
While we have defined a relevance of the struc-
tured query as a vector, we need to arrange the doc-
uments according to the relevance vectors. In this
paper, we first map a vector into a scalar value,
and then sort the documents according to this scalar
measure.
Three methods are introduced for the mapping
from the relevance vector to the scalar measure. The
first one simply works out the sum of the elements
of the relevance vector.
Definition 3 (Simple Sum)
</bodyText>
<equation confidence="0.482207">
Psum(q, d) =
</equation>
<bodyText confidence="0.998783625">
The second appends a coefficient representing the
rareness of the structures. When the query is A ✄ B
or A ✁ B, if the number of extents matching the
query is close to the number of extents matching A,
matching the query does not seem to be very impor-
tant because it means that the extents that match A
mostly match A✄B or A✁B. The case of the other
operators is the same as with ✄ and ✁.
</bodyText>
<equation confidence="0.725342666666667">
�m
i=1
a(qi, d)
</equation>
<table confidence="0.97369075">
Num Query
1 ‘([cons] D ([sem] D “G#DNA domain or region”)) 0 (“in” O ([cons] D ([sem] D (“G#tissue” p “G#body part”))))’
2 ‘([event] D ([obj] D “gene”)) 0 (“in” O ([cons] D ([sem] D (“G#tissue” p “G#body part”))))’
3 ‘([event]D([obj]O([sem]D“G#DNA domain or region”)))0(“in”O([cons]D([sem]D(“G#tissue”p“G#body part”))))’
</table>
<tableCaption confidence="0.999602">
Table 3: Queries submitted in the experiments on the GENIA corpus
</tableCaption>
<construct confidence="0.921937">
Definition 4 (Structure Coefficient) When the op-
erator op is A, p or ✸, the structure coefficient of
the query A op B is:
</construct>
<equation confidence="0.9731075">
C(A) + C(B) − C(A op B)
C(A) + C(B)
</equation>
<bodyText confidence="0.990746">
and when the operator op is ✄ or ✁, the structure
coefficient of the query A op B is:
</bodyText>
<equation confidence="0.9358475">
C(A) − C(A op B)
C(A)
</equation>
<bodyText confidence="0.971377">
where A and B are the queries and C(A) is the num-
ber of extents that match A in the document collec-
tion.
The scalar measure ρsc(qi, d) is then defined as
</bodyText>
<equation confidence="0.990352">
ρsc(q, d) = �m scqi - σ(qi, d)
i=1
</equation>
<bodyText confidence="0.997831090909091">
The third is a combination of the measure of the
query itself and the measure of the subqueries. Al-
though we calculate the score of extents by sub-
queries instead of using only the whole query, the
score of subqueries can not be compared with the
score of other subqueries. We assume normalized
weight of each subquery and interpolate the weight
of parent node and children nodes.
Definition 5 (Interpolated Coefficient) The inter-
polated coefficient of the query qi is recursively de-
fined as follows:
</bodyText>
<equation confidence="0.968033">
� ci ρic(qci, d)
ρic(qi, d) = λ - σ(qi, d) + (1 − λ)
l
</equation>
<bodyText confidence="0.9996814">
where ci is the child of node ni, l is the number of
children of node ni, and 0 &lt; λ &lt; 1.
This formula means that the weight of each node is
defined by a weighted average of the weight of the
query and its subqueries. When λ = 1, the weight
of a query is normalized weight of the query. When
λ = 0, the weight of a query is calculated from the
weight of the subqueries, i.e. the weight is calcu-
lated by only the weight of the words used in the
query.
</bodyText>
<sectionHeader confidence="0.999693" genericHeader="evaluation">
4 Experiments
</sectionHeader>
<bodyText confidence="0.7367413">
In this section, we show the results of our prelimi-
nary experiments of text retrieval using our model.
We used the GENIA corpus (Ohta et al., 2002) and
the OHSUMED test collection (Hersh et al., 1994).
We compared three retrieval models, i) our model,
ii) exact matching of the region algebra (exact), and
iii) not structured model (flat). The queries submit-
ted to our system are shown in Table 3 and 4. In
the flat model, the query was submitted as a query
composed of the words in the queries connected by
the “and” operator (A). For example, in the case of
Query 1, the query submitted to the system in the
flat model is ‘ “G#DNA domain or region” A “in”
A “G#tissue” A “G#body part” .’ The system out-
put the ten results that had the highest relevance for
each model.
In the following experiments, we used a computer
that had Pentium III 1.27GHz CPU, 4GB memory.
The system was implemented in C++ with Berkeley
DB library.
</bodyText>
<subsectionHeader confidence="0.961566">
4.1 GENIA corpus
</subsectionHeader>
<bodyText confidence="0.999936705882353">
The GENIA corpus is an XML document com-
posed of paper abstracts in the field of biomedi-
cal science. The corpus consisted of 1,990 arti-
cles, 873,087 words (including tags), and 16,391
sentences. In the GENIA corpus, the document
structure was annotated by tags such as “(article)”
and “(sentence)”, technical terms were annotated by
“(cons)”, and events were annotated by “(event)”.
The queries in Table 3 are made by an expert in
the field of biomedicine. The document was “sen-
tence” in this experiments. Query 1 retrieves sen-
tences including a gene in a tissue. Queries 2 and
3 retrieve sentences representing an event having a
gene as an object and occurring in a tissue. In Query
2, a gene was represented by the word “gene,” and in
Query 3, a gene was represented by the annotation
“G#DNA domain or region.”
</bodyText>
<equation confidence="0.855335">
scAopB =
scAopB =
</equation>
<table confidence="0.84659254054054">
Query
4 ‘ “postmenopausal” 0 ([neoplastic] D (“breast” O “cancer”)) 0 ([therapeutic] D (“replacement” O “therapy”)) ’
55 year old female, postmenopausal
does estrogen replacement therapy cause breast cancer
5 ‘ ([disease]D(“copd”p(“chronic”O“obstructive”O“pulmonary”O“disease”)))0“theophylline”0([disease]D“asthma”) ’
50 year old with copd
theophylline uses–chronic and acute asthma
6 ‘ ([neoplastic] D (“lung” O “cancer”)) 0 ([therapeutic] D (“radiation” O “therapy”)) ’
lung cancer
lung cancer, radiation therapy
7 ‘([disease]D“pancytopenia”)0([neoplastic]D(“acute”O“megakaryocytic”O“leukemia”))0(“treatmentp“prognosis”)’
70 year old male who presented with pancytopenia
acute megakaryocytic leukemia, treatment and prognosis
8 ‘([disease]D“hypercalcemia”)0([neoplastic]D“carcinoma”)0(([therapeutic]D“gallium”)p(“gallium”O“therapy”))’
57 year old male with hypercalcemia secondary to carcinoma
effectiveness of gallium therapy for hypercalcemia
9 ‘(“lupus”O“nephritis”)0(“thrombotic”O([disease]D(“thrombocytopenic”O“purpura”))0(“management”p“diagnosis”)’
18 year old with lupus nephritis and thrombotic thrombocytopenic purpura
lupus nephritis, diagnosis and management
10 ‘ ([mesh] D “treatment”) 0 ([disease] D “endocarditis”) 0 ([sentence] D (“oral” O “antibiotics”) ’
28 year old male with endocarditis
treatment of endocarditis with oral antibiotics
11 ‘ ([mesh] D “female”) 0 ([disease] D (“anorexia” 0 bulimia)) 0 ([disease] D “complication”) ’
25 year old female with anorexia/bulimia
complications and management of anorexia and bulimia
12 ‘ ([disease] D “diabete”) 0 ([disease] D (“peripheral” O “neuropathy”)) 0 ([therapeutic] D “pentoxifylline”) ’
50 year old diabetic with peripheral neuropathy
use of Trental for neuropathy, does it work?
13 ‘ (“cerebral” O “edema”) 0 ([disease] D “infection”) 0 (“diagnosis” p ([therapeutic] D “treatment”)) ’
22 year old with fever, leukocytosis, increased intracranial pressure, and central herniation
cerebral edema secondary to infection, diagnosis and treatment
14 ‘ ([mesh] D “female”) 0 ([disease] D (“urinary” O “tract” O “infection”)) 0 ([therapeutic] D “treatment”) ’
23 year old woman dysuria
Urinary Tract Infection, criteria for treatment and admission
15 ‘ ([disease] D (“chronic” O “fatigue” O “syndrome”)) 0 ([therapeutic] D “treatment”) ’
chronic fatigue syndrome
chronic fatigue syndrome, management and treatment
</table>
<tableCaption confidence="0.989011">
Table 4: Queries submitted in the experiments on the OHSUMED test collection and original queries of
</tableCaption>
<bodyText confidence="0.978619384615384">
OHSUMED. The first line is a query submitted to the system, the second and third lines are the original query
of the OHSUMED test collection, the second is information of patient and the third is request information.
For the exact model, ten results were selected ran-
domly from the exactly matched results if the num-
ber of results was more than ten. The results are
blind tested, i.e., after we had the results for each
model, we shuffled these results randomly for each
query, and the shuffled results were judged by an ex-
pert in the field of biomedicine whether they were
relevant or not.
Table 5 shows the number of the results that were
judged relevant in the top ten results. The results
show that our model was superior to the exact and
flat models for all queries. Compared to the exact
model, our model output more relevant documents,
since our model allows the partial matching of the
query, which shows the robustness of our model. In
addition, our model gives a better result than the flat
model, which means that the structural specification
of the query was effective for finding the relevant
documents.
Comparing our models, the number of relevant re-
sults using ps, was the same as that of psum. The re-
sults using pi, varied between the results of the flat
model and the results of the exact model depending
on the value of A.
</bodyText>
<subsectionHeader confidence="0.797825">
4.2 OHSUMED test collection
</subsectionHeader>
<bodyText confidence="0.79318">
The OHSUMED test collection is a document set
composed of paper abstracts in the field of biomed-
</bodyText>
<table confidence="0.984180333333333">
Query ρsum ρsc our model ρic exact flat
ρic ρic (λ = 0.75)
(λ = 0.25) (λ = 0.5)
1 10/10 10/10 8/10 9/10 9/10 9/10 9/10
2 6/10 6/10 6/10 6/10 6/10 5/ 5 3/10
3 10/10 10/10 10/10 10/10 10/10 9/ 9 8/10
</table>
<tableCaption confidence="0.990293">
Table 5: (The number of relevant results) / (the number of all results) in top 10 results on the GENIA corpus
</tableCaption>
<table confidence="0.999644333333333">
Query ρsum ρsc our model ρic exact flat
ρic ρic (λ = 0.75)
(λ = 0.25) (λ = 0.5)
4 7/10 7/10 4/10 4/10 4/10 5/12 4/10
5 4/10 3/10 2/10 3/10 3/10 2/9 2/10
6 8/10 8/10 7/10 7/10 7/10 12/34 6/10
7 1/10 0/10 0/10 0/10 0/10 0/0 0/10
8 5/10 5/10 4/10 2/10 2/10 2/2 5/10
9 0/10 0/10 4/10 5/10 4/10 0/1 0/10
10 1/10 1/10 1/10 1/10 0/10 0/0 1/10
11 4/10 4/10 2/10 3/10 5/10 0/0 4/10
12 3/10 3/10 2/10 2/10 2/10 0/0 3/10
13 2/10 1/10 0/10 1/10 0/10 0/1 3/10
14 1/10 1/10 1/10 1/10 1/10 0/5 3/10
15 3/10 3/10 5/10 2/10 3/10 0/1 8/10
</table>
<tableCaption confidence="0.850833">
Table 6: (The number of relevant results) / (the number of all results) in top 10 judged results on the
OHSUMED test collection (“all results” are relevance-judged results in the exact model)
</tableCaption>
<bodyText confidence="0.996628675675676">
ical science. The collection has a query set and a
list of relevant documents for each query. From 50
to 300 documents are judged whether or not rele-
vant to each query. The query consisted of patient
information and information request. We used ti-
tle, abstract, and human-assigned MeSH term fields
of documents in the experiments. Since the origi-
nal OHSUMED is not annotated with tags, we an-
notated it with tags representing document struc-
tures such as “(article)” and “(sentence)”, and an-
notated technical terms with tags such as “(disease)”
and “(therapeutic)” by longest matching of terms of
Unified Medical Language System (UMLS). In the
OHSUMED, relations between technical terms such
as events were not annotated unlike the GENIA cor-
pus. The collection consisted of 348,566 articles,
78,207,514 words (including tags), and 1,731,953
sentences.
12 of 106 queries of OHSUMED are converted
into structured queries of Region Algebra by an ex-
pert in the field of biomedicine. These queries are
shown in Table 4, and submitted to the system. The
document was “article” in this experiments. For the
exact model, all exact matches of the whole query
were judged. Since there are documents that are not
judged whether or not relevant to the query in the
OHSUMED, we picked up only the documents that
are judged.
Table 6 shows the number of relevant results in
top ten results. The results show that our model suc-
ceeded in finding the relevant results that the exact
model could not find, and was superior to the flat
model for Query 4, 5, and 6. However, our model
was inferior to the flat model for Query 14 and 15.
Comparing our models, the number of relevant
results using ρsc and ρic was lower than that using
ρsum.
</bodyText>
<table confidence="0.58869675">
Query our model exact
1 1.94 s 0.75 s
2 1.69 s 0.34 s
3 2.02 s 0.49 s
</table>
<tableCaption confidence="0.899309">
Table 7: The retrieval time (sec.) on GENIA corpus
</tableCaption>
<figure confidence="0.990781846153846">
Query our model exact
4 25.13 s 2.17 s
5 24.77 s 3.13 s
6 23.84 s 2.18 s
7 24.00 s 2.70 s
8 27.62 s 3.50 s
9 20.62 s 2.22 s
10 30.72 s 7.60 s
11 25.88 s 4.59 s
12 25.44 s 4.28 s
13 21.94 s 3.30 s
14 28.44 s 4.38 s
15 20.36 s 3.15 s
</figure>
<tableCaption confidence="0.951836">
Table 8: The retrieval time (sec.) on OHSUMED
test collection
</tableCaption>
<subsectionHeader confidence="0.944773">
4.3 Discussion
</subsectionHeader>
<bodyText confidence="0.999955211267606">
In the experiments on OHSUMED, the number of
relevant documents of our model were less than that
of the flat model in some queries. We think this is
because i) specifying structures was not effective, ii)
weighting subqueries didn’t work, iii) MeSH terms
embedded in the documents are effective for the flat
model and not effective for our model, iv) or there
are many documents that our system found relevant
but were not judged since the OHSUMED test col-
lection was made using keyword-based retrieval.
As for i), structural specification in the queries
is not well-written because the exact model failed
to achieve high precision and its coverage is very
low. We used only tags specifying technical terms as
structures in the experiments on OHSUMED. This
structure was not so effective because these tags are
annotated by longest match of terms. We need to
use the tags representing relations between techni-
cal terms to improve the results. Moreover, struc-
tured query used in the experiments may not specify
the request information exactly. Therefore we think
converting queries written by natural language into
the appropriate structured queries is important, and
lead to the question answering using variously tag-
annotated texts.
As for ii), we think the weighting didn’t work
because we simply use frequency of subqueries for
weighting. To improve the weighting, we have to
assign high weight to the structure concerned with
user’s intention, that are written in the request in-
formation. This is shown in the results of Query
9. In Query 9, relevant documents were not re-
trieved except the model using ρic, because although
the request information was information concerned
“lupus nephritis”, the weight concerned with “lu-
pus nephritis” was smaller than that concerned with
“thrombotic” and “thrombocytopenic purpura” in
the models except ρic. Because the structures con-
cerning with user’s intention did not match the most
weighted structures in the model, the relevant docu-
ments were not retrieved.
As for iii), MeSH terms are human-assigned key-
words for each documents, and no relation exists
across a boundary of each MeSH terms. in the
flat model, these MeSH term will improve the re-
sults. However, in our model, the structure some-
times matches that are not expected. For example,
In the case of Query 14, the subquery ‘ “chronic”
✸ “fatigue” ✸ “syndrome” ’ matched in the field of
MeSH term across a boundary of terms when the
MeSH term field was text such as “Affective Disor-
ders/*CO; Chronic Disease; Fatigue/*PX; Human;
Syndrome ” because the operator ✸ has no limita-
tion of distance.
As for iv), the OHSUMED test collection was
constructed by attaching the relevance judgement to
the documents retrieved by keyword-based retrieval.
To show the effectiveness of structured retrieval
more clearly, we need test collection with (struc-
tured) query and lists of relevant documents, and the
tag-annotated documents, for example, tags repre-
senting the relation between the technical terms such
as “event”, or taggers that can annotate such tags.
Table 7 and 8 show that the retrieval time in-
creases corresponding to the size of the document
collection. The system is efficient enough for infor-
mation retrieval for a rather small document set like
GENIA corpus. To apply to the huge databases such
as Web-based applications, we might require a con-
stant time algorithm, which should be the subject of
future research.
</bodyText>
<sectionHeader confidence="0.996977" genericHeader="conclusions">
5 Conclusions and Future work
</sectionHeader>
<bodyText confidence="0.999995909090909">
We proposed an approach to retrieve information
from documents which are not annotated with any
tags. We annotated documents with document struc-
tures and semantic tags by taggers, and retrieved
information by using ranked region algebra. We
showed what kind of data can be retrieved from doc-
uments in the experiments.
In the discussion, we showed several points about
the ranked retrieval for structured texts. Our future
work is to improve a model, corpus etc. to improve
the ranked retrieval for structured texts.
</bodyText>
<sectionHeader confidence="0.998929" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999882111111111">
I am grateful to my supervisor, Jun’ichi Tsujii, for
his support and many valuable advices. I also thank
to Takashi Ninomiya, Yusuke Miyao for their valu-
able advices, Yoshimasa Tsuruoka for providing me
with a tagger, Tomoko Ohta for making queries, and
anonymous reviewers for their helpful comments.
This work is apart of the Kototoi project1 supported
by CREST of JST (Japan Science and Technology
Corporation).
</bodyText>
<sectionHeader confidence="0.998677" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.991604418604651">
Taurai Chinenyanga and Nicholas Kushmerick. 2001.
Expressive and efficient ranked querying of XML data.
In Proceedings of WebDB-2001 (SIGMOD Workshop
on the Web and Databases).
Charles L. A. Clarke, Gordon V. Cormack, and Forbes J.
Burkowski. 1995. An algebra for structured text
search and a framework for its implementation. The
computer Journal, 38(1):43–56.
Alin Deutsch, Mary Fernandez, Daniela Florescu, Alon
Levy, and Dan Suciu. 1998. XML-QL: A query lan-
guage for XML. In Proceedings of WWW The Query
Language Workshop.
Norbert Fuhr. 1992. Probabilistic models in information
retrieval. The Computer Journal, 35(3):243–255.
William Hersh, Chris Buckley, T. J. Leone, and David
Hickam. 1994. OHSUMED: an interactive retrieval
evaluation and new large test collection for research.
1http://www.kototoi.org/
In Proceedings of the 17th International ACM SIGIR
Conference, pages 192–201.
Jani Jaakkola and Pekka Kilpelainen. 1999. Nested text-
region algebra. Technical Report C-1999-2, Univer-
sity of Helsinki.
Katsuya Masuda, Takashi Ninomiya, Yusuke Miyao,
Tomoko Ohta, and Jun’ichi Tsujii. 2003. A robust
retrieval engine for proximal and structural search. In
Proceedings of the HLT-NAACL 2003 short papers.
Tomoko Ohta, Yuka Tateisi, Hideki Mima, and Jun’ichi
Tsujii. 2002. GENIA corpus: an annotated research
abstract corpus in molecular biology domain. In Pro-
ceedings of the HLT 2002.
Stephen E. Robertson and Steve Walker. 2000.
Okapi/Keenbow at TREC-8. In Proceedings of TREC-
8, pages 151–161.
Airi Salminen and Frank Tompa. 1994. Pat expressions:
an algebra for text search. Acta Linguistica Hungar-
ica, 41(1-4):277–306.
Anja Theobald and Gerhard Weilkum. 2000. Adding
relevance to XML. In Proceedings of WebDB’00.
Jens Wolff, Holger Fl¨orke, and Armin Cremers. 1999.
XPRES: a Ranking Approach to Retrieval on Struc-
tured Documents. Technical Report IAI-TR-99-12,
University of Bonn.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.763476">
<title confidence="0.995678">A Ranking Model of Proximal and Structural Text Retrieval Based on Region Algebra</title>
<author confidence="0.997135">Katsuya Masuda</author>
<affiliation confidence="0.999966">Department of Computer Science, Graduate School of Information Science and Technology,</affiliation>
<address confidence="0.843427">University of Tokyo, Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, Japan</address>
<email confidence="0.984989">kmasuda@is.s.u-tokyo.ac.jp</email>
<abstract confidence="0.99366925">This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We automatically annotated documents with document structure and semantic tags by using taggers, and retrieve information by specifying structure represented by tags and words using ranked region algebra. We report in detail what kind of data can be retrieved in the experiments by this approach.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Taurai Chinenyanga</author>
<author>Nicholas Kushmerick</author>
</authors>
<title>Expressive and efficient ranked querying of XML data.</title>
<date>2001</date>
<booktitle>In Proceedings of WebDB-2001 (SIGMOD Workshop on the Web and Databases).</booktitle>
<contexts>
<context position="1350" citStr="Chinenyanga and Kushmerick, 2001" startWordPosition="201" endWordPosition="204">h. 1 Introduction In the biomedical area, the number of papers is very large and increases, as it is difficult to search the information. Although keyword-based retrieval systems can be applied to a database of papers, users may not get the information they want since the relations between these keywords are not specified. If the document structures, such as “title”, “sentence”, “author”, and relation between terms are tagged in the texts, then the retrieval is improved by specifying such structures. Models of the retrieval specifying both structures and words are pursued by many researchers (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Deutsch et al., 1998; Salminen and Tompa, 1994; Clarke et al., 1995). However, these models are not robust unlike keyword-based retrieval, that is, they retrieve only the exact matches for queries. In the previous research (Masuda et al., 2003), we proposed a new ranking model that enables proximal and structural search for structured text. This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We reports in detail what kind of data can be retrieved in the experim</context>
</contexts>
<marker>Chinenyanga, Kushmerick, 2001</marker>
<rawString>Taurai Chinenyanga and Nicholas Kushmerick. 2001. Expressive and efficient ranked querying of XML data. In Proceedings of WebDB-2001 (SIGMOD Workshop on the Web and Databases).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Charles L A Clarke</author>
<author>Gordon V Cormack</author>
<author>Forbes J Burkowski</author>
</authors>
<title>An algebra for structured text search and a framework for its implementation.</title>
<date>1995</date>
<journal>The computer Journal,</journal>
<volume>38</volume>
<issue>1</issue>
<contexts>
<context position="1468" citStr="Clarke et al., 1995" startWordPosition="221" endWordPosition="224">mation. Although keyword-based retrieval systems can be applied to a database of papers, users may not get the information they want since the relations between these keywords are not specified. If the document structures, such as “title”, “sentence”, “author”, and relation between terms are tagged in the texts, then the retrieval is improved by specifying such structures. Models of the retrieval specifying both structures and words are pursued by many researchers (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Deutsch et al., 1998; Salminen and Tompa, 1994; Clarke et al., 1995). However, these models are not robust unlike keyword-based retrieval, that is, they retrieve only the exact matches for queries. In the previous research (Masuda et al., 2003), we proposed a new ranking model that enables proximal and structural search for structured text. This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We reports in detail what kind of data can be retrieved in the experiments. Our approach is to annotate documents with document structures and semantic tags by taggers automatically, and t</context>
<context position="3962" citStr="Clarke et al., 1995" startWordPosition="658" endWordPosition="661">({a|a E Gq1 n ]b E Gq2.(b ❁ a)}) q1 ✄� q2 Gq1Vq2 = Γ({a|a E Gq1n Ab E Gq2.(b ❁ a)}) q1 ✁ q2 Gq1aq2 = Γ({a|a E Gq1 n ]b E Gq2.(a ❁ b)}) q1 ✁� q2 Gq1Aq2 = Γ({a|a E Gq1n Ab E Gq2.(a ❁ b)}) q1 A q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c n b ❁ c)}) q1 p q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c V b ❁ c)}) q1 ✸ q2 Gq1✸q2 = Γ({c|c = (ps,p&apos;e) where ](ps, pe) E Gq1.](p&apos;s,p&apos;e) E Gq2.(pe &lt; p&apos;s)}) Table 1: Operators of the Region algebra Figure 1: Tree of the query ‘[book] ✄ ([title] ✄ “retrieval”)’ 2 Background: Region algebra The region algebra (Salminen and Tompa, 1994; Clarke et al., 1995; Jaakkola and Kilpelainen, 1999) is a set of operators representing the relation between the extents (i.e. regions in texts), where an extent is represented by a pair of positions, beginning and ending position. Region algebra allows for the specification of the structure of text. In this paper, we suppose the region algebra proposed in (Clarke et al., 1995). It has seven operators as shown in Table 1; four containment operators (✄, 0, ✁, 0) representing the containment relation between the extents, two combination operators (A, p) corresponding to “and” and “or” operator of the boolean model</context>
<context position="5598" citStr="Clarke et al., 1995" startWordPosition="955" endWordPosition="958"> e&apos; ❁ e)} Figure 2: Subqueries of the query ‘[book] ✄ ([title] ✄ “retrieval”)’ Intuitively, Γ(S) is an operation for finding the shortest matching. A set of non-nested extents matching query q is expressed as Gq. For convenience of explanation, we represent a query as a tree structure as shown in Figure 1 (‘[x]’ is a abbreviation of ‘(x) ✸ (/x)’). This query represents ‘Retrieve the books whose title has the word “retrieval.” ’ The algorithm for finding an exact match of a query works efficiently. The time complexity of the algorithm is linear to the size of a query and the size of documents (Clarke et al., 1995). 3 A Ranking Model for Structured Queries and Texts This section describes the definition of the relevance between a document and a structured query represented by the region algebra. The key idea is that a structured query is decomposed into subqueries, and the relevance of the whole query is represented as a vector of relevance measures of subqueries. Our model assigns a relevance measure of the query matching extents in (1,15) matching extents in (16,30) constructed by qr “(book)” (1,1) (16,16) inverted list q2 “(/book)” (15,15) (30,30) inverted list q3 “(title)” (2,2), (7,7) (17,17), (22,</context>
</contexts>
<marker>Clarke, Cormack, Burkowski, 1995</marker>
<rawString>Charles L. A. Clarke, Gordon V. Cormack, and Forbes J. Burkowski. 1995. An algebra for structured text search and a framework for its implementation. The computer Journal, 38(1):43–56.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alin Deutsch</author>
<author>Mary Fernandez</author>
<author>Daniela Florescu</author>
<author>Alon Levy</author>
<author>Dan Suciu</author>
</authors>
<title>XML-QL: A query language for XML.</title>
<date>1998</date>
<booktitle>In Proceedings of WWW The Query Language Workshop.</booktitle>
<contexts>
<context position="1420" citStr="Deutsch et al., 1998" startWordPosition="213" endWordPosition="216">ncreases, as it is difficult to search the information. Although keyword-based retrieval systems can be applied to a database of papers, users may not get the information they want since the relations between these keywords are not specified. If the document structures, such as “title”, “sentence”, “author”, and relation between terms are tagged in the texts, then the retrieval is improved by specifying such structures. Models of the retrieval specifying both structures and words are pursued by many researchers (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Deutsch et al., 1998; Salminen and Tompa, 1994; Clarke et al., 1995). However, these models are not robust unlike keyword-based retrieval, that is, they retrieve only the exact matches for queries. In the previous research (Masuda et al., 2003), we proposed a new ranking model that enables proximal and structural search for structured text. This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We reports in detail what kind of data can be retrieved in the experiments. Our approach is to annotate documents with document structures a</context>
</contexts>
<marker>Deutsch, Fernandez, Florescu, Levy, Suciu, 1998</marker>
<rawString>Alin Deutsch, Mary Fernandez, Daniela Florescu, Alon Levy, and Dan Suciu. 1998. XML-QL: A query language for XML. In Proceedings of WWW The Query Language Workshop.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Norbert Fuhr</author>
</authors>
<title>Probabilistic models in information retrieval.</title>
<date>1992</date>
<journal>The Computer Journal,</journal>
<volume>35</volume>
<issue>3</issue>
<contexts>
<context position="8381" citStr="Fuhr, 1992" startWordPosition="1445" endWordPosition="1446">s given, the relevance of the whole query is defined as follows. Definition 2 (Relevance of the whole query) Let q be a given query, d be a document and q1, ..., qm be subqueries of q. The relevance vector E(q, d) ofd is defined as follows: E(q, d) = (a(q1, d), a(q2, d), ..., a(qm, d)) A relevance of a subquery should be defined similarly to that of keyword-based queries in the traditional ranked retrieval. For example, TFIDF, which is used in our experiments in Section 4, is the most simple and straightforward one, while other relevance measures recently proposed (Robertson and Walker, 2000; Fuhr, 1992) can be applied. TF of a subquery is calculated using the number of extents matching the subquery, and IDF of a subquery is calculated using the number of documents including the extents matching the subquery. When a text is given as Figure 3 and document collection is {(1,15),(16,30)}, extents matching each subquery in each document are shown in Table 2. TF and IDF are calculated using the number of extents matching subquery in Table 2. While we have defined a relevance of the structured query as a vector, we need to arrange the documents according to the relevance vectors. In this paper, we </context>
</contexts>
<marker>Fuhr, 1992</marker>
<rawString>Norbert Fuhr. 1992. Probabilistic models in information retrieval. The Computer Journal, 35(3):243–255.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Hersh</author>
<author>Chris Buckley</author>
<author>T J Leone</author>
<author>David Hickam</author>
</authors>
<title>OHSUMED: an interactive retrieval evaluation and new large test collection for research.</title>
<date>1994</date>
<pages>1</pages>
<contexts>
<context position="2248" citStr="Hersh et al., 1994" startWordPosition="343" endWordPosition="346">a et al., 2003), we proposed a new ranking model that enables proximal and structural search for structured text. This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We reports in detail what kind of data can be retrieved in the experiments. Our approach is to annotate documents with document structures and semantic tags by taggers automatically, and to retrieve information by specifying both structures and words using ranked region algebra. In this paper, we apply our approach to the OHSUMED test collection (Hersh et al., 1994), which is a public test collection for information retrieval in the field of biomedical science but not tag-annotated. We annotate OHSUMED by various taggers and retrieve information from the tag-annotated corpus. We have implemented the ranking model in our retrieval engine, and had preliminary experiments to evaluate our model. In the experiments, we used the GENIA corpus (Ohta et al., 2002) as a small but manually tag-annotated corpus, and OHSUMED as a large but automatically tag-annotated corpus. The experiments show that our model succeeded in retrieving the relevant answers that an exac</context>
<context position="11762" citStr="Hersh et al., 1994" startWordPosition="2077" endWordPosition="2080">mber of children of node ni, and 0 &lt; λ &lt; 1. This formula means that the weight of each node is defined by a weighted average of the weight of the query and its subqueries. When λ = 1, the weight of a query is normalized weight of the query. When λ = 0, the weight of a query is calculated from the weight of the subqueries, i.e. the weight is calculated by only the weight of the words used in the query. 4 Experiments In this section, we show the results of our preliminary experiments of text retrieval using our model. We used the GENIA corpus (Ohta et al., 2002) and the OHSUMED test collection (Hersh et al., 1994). We compared three retrieval models, i) our model, ii) exact matching of the region algebra (exact), and iii) not structured model (flat). The queries submitted to our system are shown in Table 3 and 4. In the flat model, the query was submitted as a query composed of the words in the queries connected by the “and” operator (A). For example, in the case of Query 1, the query submitted to the system in the flat model is ‘ “G#DNA domain or region” A “in” A “G#tissue” A “G#body part” .’ The system output the ten results that had the highest relevance for each model. In the following experiments,</context>
</contexts>
<marker>Hersh, Buckley, Leone, Hickam, 1994</marker>
<rawString>William Hersh, Chris Buckley, T. J. Leone, and David Hickam. 1994. OHSUMED: an interactive retrieval evaluation and new large test collection for research. 1http://www.kototoi.org/</rawString>
</citation>
<citation valid="false">
<booktitle>In Proceedings of the 17th International ACM SIGIR Conference,</booktitle>
<pages>192--201</pages>
<marker></marker>
<rawString>In Proceedings of the 17th International ACM SIGIR Conference, pages 192–201.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jani Jaakkola</author>
<author>Pekka Kilpelainen</author>
</authors>
<title>Nested textregion algebra.</title>
<date>1999</date>
<tech>Technical Report C-1999-2,</tech>
<institution>University of Helsinki.</institution>
<contexts>
<context position="3995" citStr="Jaakkola and Kilpelainen, 1999" startWordPosition="662" endWordPosition="665">2.(b ❁ a)}) q1 ✄� q2 Gq1Vq2 = Γ({a|a E Gq1n Ab E Gq2.(b ❁ a)}) q1 ✁ q2 Gq1aq2 = Γ({a|a E Gq1 n ]b E Gq2.(a ❁ b)}) q1 ✁� q2 Gq1Aq2 = Γ({a|a E Gq1n Ab E Gq2.(a ❁ b)}) q1 A q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c n b ❁ c)}) q1 p q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c V b ❁ c)}) q1 ✸ q2 Gq1✸q2 = Γ({c|c = (ps,p&apos;e) where ](ps, pe) E Gq1.](p&apos;s,p&apos;e) E Gq2.(pe &lt; p&apos;s)}) Table 1: Operators of the Region algebra Figure 1: Tree of the query ‘[book] ✄ ([title] ✄ “retrieval”)’ 2 Background: Region algebra The region algebra (Salminen and Tompa, 1994; Clarke et al., 1995; Jaakkola and Kilpelainen, 1999) is a set of operators representing the relation between the extents (i.e. regions in texts), where an extent is represented by a pair of positions, beginning and ending position. Region algebra allows for the specification of the structure of text. In this paper, we suppose the region algebra proposed in (Clarke et al., 1995). It has seven operators as shown in Table 1; four containment operators (✄, 0, ✁, 0) representing the containment relation between the extents, two combination operators (A, p) corresponding to “and” and “or” operator of the boolean model, and ordering operator (✸) repre</context>
</contexts>
<marker>Jaakkola, Kilpelainen, 1999</marker>
<rawString>Jani Jaakkola and Pekka Kilpelainen. 1999. Nested textregion algebra. Technical Report C-1999-2, University of Helsinki.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Katsuya Masuda</author>
<author>Takashi Ninomiya</author>
<author>Yusuke Miyao</author>
<author>Tomoko Ohta</author>
<author>Jun’ichi Tsujii</author>
</authors>
<title>A robust retrieval engine for proximal and structural search.</title>
<date>2003</date>
<booktitle>In Proceedings of the HLT-NAACL</booktitle>
<note>short papers.</note>
<contexts>
<context position="1644" citStr="Masuda et al., 2003" startWordPosition="248" endWordPosition="251">are not specified. If the document structures, such as “title”, “sentence”, “author”, and relation between terms are tagged in the texts, then the retrieval is improved by specifying such structures. Models of the retrieval specifying both structures and words are pursued by many researchers (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Deutsch et al., 1998; Salminen and Tompa, 1994; Clarke et al., 1995). However, these models are not robust unlike keyword-based retrieval, that is, they retrieve only the exact matches for queries. In the previous research (Masuda et al., 2003), we proposed a new ranking model that enables proximal and structural search for structured text. This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We reports in detail what kind of data can be retrieved in the experiments. Our approach is to annotate documents with document structures and semantic tags by taggers automatically, and to retrieve information by specifying both structures and words using ranked region algebra. In this paper, we apply our approach to the OHSUMED test collection (Hersh et al., 1</context>
</contexts>
<marker>Masuda, Ninomiya, Miyao, Ohta, Tsujii, 2003</marker>
<rawString>Katsuya Masuda, Takashi Ninomiya, Yusuke Miyao, Tomoko Ohta, and Jun’ichi Tsujii. 2003. A robust retrieval engine for proximal and structural search. In Proceedings of the HLT-NAACL 2003 short papers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tomoko Ohta</author>
<author>Yuka Tateisi</author>
<author>Hideki Mima</author>
<author>Jun’ichi Tsujii</author>
</authors>
<title>GENIA corpus: an annotated research abstract corpus in molecular biology domain.</title>
<date>2002</date>
<booktitle>In Proceedings of the HLT</booktitle>
<contexts>
<context position="2645" citStr="Ohta et al., 2002" startWordPosition="405" endWordPosition="408">ntic tags by taggers automatically, and to retrieve information by specifying both structures and words using ranked region algebra. In this paper, we apply our approach to the OHSUMED test collection (Hersh et al., 1994), which is a public test collection for information retrieval in the field of biomedical science but not tag-annotated. We annotate OHSUMED by various taggers and retrieve information from the tag-annotated corpus. We have implemented the ranking model in our retrieval engine, and had preliminary experiments to evaluate our model. In the experiments, we used the GENIA corpus (Ohta et al., 2002) as a small but manually tag-annotated corpus, and OHSUMED as a large but automatically tag-annotated corpus. The experiments show that our model succeeded in retrieving the relevant answers that an exact-matching model fails to retrieve because of lack of robustness, and the relevant answers that a non-structured model fails because of lack of structural specification. We report how structural specification works and how it doesn’t work in the experiments with OHSUMED. Section 2 explains the region algebra. In Section 3, we describe our ranking model for the structured query and texts. In Sec</context>
<context position="11709" citStr="Ohta et al., 2002" startWordPosition="2068" endWordPosition="2071">− λ) l where ci is the child of node ni, l is the number of children of node ni, and 0 &lt; λ &lt; 1. This formula means that the weight of each node is defined by a weighted average of the weight of the query and its subqueries. When λ = 1, the weight of a query is normalized weight of the query. When λ = 0, the weight of a query is calculated from the weight of the subqueries, i.e. the weight is calculated by only the weight of the words used in the query. 4 Experiments In this section, we show the results of our preliminary experiments of text retrieval using our model. We used the GENIA corpus (Ohta et al., 2002) and the OHSUMED test collection (Hersh et al., 1994). We compared three retrieval models, i) our model, ii) exact matching of the region algebra (exact), and iii) not structured model (flat). The queries submitted to our system are shown in Table 3 and 4. In the flat model, the query was submitted as a query composed of the words in the queries connected by the “and” operator (A). For example, in the case of Query 1, the query submitted to the system in the flat model is ‘ “G#DNA domain or region” A “in” A “G#tissue” A “G#body part” .’ The system output the ten results that had the highest re</context>
</contexts>
<marker>Ohta, Tateisi, Mima, Tsujii, 2002</marker>
<rawString>Tomoko Ohta, Yuka Tateisi, Hideki Mima, and Jun’ichi Tsujii. 2002. GENIA corpus: an annotated research abstract corpus in molecular biology domain. In Proceedings of the HLT 2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen E Robertson</author>
<author>Steve Walker</author>
</authors>
<title>Okapi/Keenbow at TREC-8.</title>
<date>2000</date>
<booktitle>In Proceedings of TREC8,</booktitle>
<pages>151--161</pages>
<contexts>
<context position="8368" citStr="Robertson and Walker, 2000" startWordPosition="1441" endWordPosition="1444">bquery qi and a document d is given, the relevance of the whole query is defined as follows. Definition 2 (Relevance of the whole query) Let q be a given query, d be a document and q1, ..., qm be subqueries of q. The relevance vector E(q, d) ofd is defined as follows: E(q, d) = (a(q1, d), a(q2, d), ..., a(qm, d)) A relevance of a subquery should be defined similarly to that of keyword-based queries in the traditional ranked retrieval. For example, TFIDF, which is used in our experiments in Section 4, is the most simple and straightforward one, while other relevance measures recently proposed (Robertson and Walker, 2000; Fuhr, 1992) can be applied. TF of a subquery is calculated using the number of extents matching the subquery, and IDF of a subquery is calculated using the number of documents including the extents matching the subquery. When a text is given as Figure 3 and document collection is {(1,15),(16,30)}, extents matching each subquery in each document are shown in Table 2. TF and IDF are calculated using the number of extents matching subquery in Table 2. While we have defined a relevance of the structured query as a vector, we need to arrange the documents according to the relevance vectors. In th</context>
</contexts>
<marker>Robertson, Walker, 2000</marker>
<rawString>Stephen E. Robertson and Steve Walker. 2000. Okapi/Keenbow at TREC-8. In Proceedings of TREC8, pages 151–161.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Airi Salminen</author>
<author>Frank Tompa</author>
</authors>
<title>Pat expressions: an algebra for text search. Acta Linguistica Hungarica,</title>
<date>1994</date>
<pages>41--1</pages>
<contexts>
<context position="1446" citStr="Salminen and Tompa, 1994" startWordPosition="217" endWordPosition="220">ficult to search the information. Although keyword-based retrieval systems can be applied to a database of papers, users may not get the information they want since the relations between these keywords are not specified. If the document structures, such as “title”, “sentence”, “author”, and relation between terms are tagged in the texts, then the retrieval is improved by specifying such structures. Models of the retrieval specifying both structures and words are pursued by many researchers (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Deutsch et al., 1998; Salminen and Tompa, 1994; Clarke et al., 1995). However, these models are not robust unlike keyword-based retrieval, that is, they retrieve only the exact matches for queries. In the previous research (Masuda et al., 2003), we proposed a new ranking model that enables proximal and structural search for structured text. This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We reports in detail what kind of data can be retrieved in the experiments. Our approach is to annotate documents with document structures and semantic tags by tagger</context>
<context position="3941" citStr="Salminen and Tompa, 1994" startWordPosition="654" endWordPosition="657">ription q1 ✄ q2 Gq1✄q2 = Γ({a|a E Gq1 n ]b E Gq2.(b ❁ a)}) q1 ✄� q2 Gq1Vq2 = Γ({a|a E Gq1n Ab E Gq2.(b ❁ a)}) q1 ✁ q2 Gq1aq2 = Γ({a|a E Gq1 n ]b E Gq2.(a ❁ b)}) q1 ✁� q2 Gq1Aq2 = Γ({a|a E Gq1n Ab E Gq2.(a ❁ b)}) q1 A q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c n b ❁ c)}) q1 p q2 Gq1oq2 = Γ({c|c ❁ (−oc, oc) n ]a E Gq1.]b E Gq2.(a ❁ c V b ❁ c)}) q1 ✸ q2 Gq1✸q2 = Γ({c|c = (ps,p&apos;e) where ](ps, pe) E Gq1.](p&apos;s,p&apos;e) E Gq2.(pe &lt; p&apos;s)}) Table 1: Operators of the Region algebra Figure 1: Tree of the query ‘[book] ✄ ([title] ✄ “retrieval”)’ 2 Background: Region algebra The region algebra (Salminen and Tompa, 1994; Clarke et al., 1995; Jaakkola and Kilpelainen, 1999) is a set of operators representing the relation between the extents (i.e. regions in texts), where an extent is represented by a pair of positions, beginning and ending position. Region algebra allows for the specification of the structure of text. In this paper, we suppose the region algebra proposed in (Clarke et al., 1995). It has seven operators as shown in Table 1; four containment operators (✄, 0, ✁, 0) representing the containment relation between the extents, two combination operators (A, p) corresponding to “and” and “or” operator</context>
</contexts>
<marker>Salminen, Tompa, 1994</marker>
<rawString>Airi Salminen and Frank Tompa. 1994. Pat expressions: an algebra for text search. Acta Linguistica Hungarica, 41(1-4):277–306.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anja Theobald</author>
<author>Gerhard Weilkum</author>
</authors>
<title>Adding relevance to XML.</title>
<date>2000</date>
<booktitle>In Proceedings of WebDB’00.</booktitle>
<contexts>
<context position="1398" citStr="Theobald and Weilkum, 2000" startWordPosition="209" endWordPosition="212">f papers is very large and increases, as it is difficult to search the information. Although keyword-based retrieval systems can be applied to a database of papers, users may not get the information they want since the relations between these keywords are not specified. If the document structures, such as “title”, “sentence”, “author”, and relation between terms are tagged in the texts, then the retrieval is improved by specifying such structures. Models of the retrieval specifying both structures and words are pursued by many researchers (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Deutsch et al., 1998; Salminen and Tompa, 1994; Clarke et al., 1995). However, these models are not robust unlike keyword-based retrieval, that is, they retrieve only the exact matches for queries. In the previous research (Masuda et al., 2003), we proposed a new ranking model that enables proximal and structural search for structured text. This paper investigates an application of the ranked region algebra to information retrieval from large scale but unannotated documents. We reports in detail what kind of data can be retrieved in the experiments. Our approach is to annotate documents with</context>
</contexts>
<marker>Theobald, Weilkum, 2000</marker>
<rawString>Anja Theobald and Gerhard Weilkum. 2000. Adding relevance to XML. In Proceedings of WebDB’00.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jens Wolff</author>
<author>Holger Fl¨orke</author>
<author>Armin Cremers</author>
</authors>
<title>XPRES: a Ranking Approach to Retrieval on Structured Documents.</title>
<date>1999</date>
<tech>Technical Report IAI-TR-99-12,</tech>
<institution>University of Bonn.</institution>
<marker>Wolff, Fl¨orke, Cremers, 1999</marker>
<rawString>Jens Wolff, Holger Fl¨orke, and Armin Cremers. 1999. XPRES: a Ranking Approach to Retrieval on Structured Documents. Technical Report IAI-TR-99-12, University of Bonn.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>