<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.186610">
<title confidence="0.928672">
The TASX-environment: an XML-based toolset for the creation
of multimodal corpora
</title>
<author confidence="0.957775">
Jan-Torsten Milde
</author>
<affiliation confidence="0.9971755">
Department of Linguistics and Literary Studies
University of Bielefeld, Germany
</affiliation>
<email confidence="0.990354">
milde@coli.uni-bielefeld.de
</email>
<sectionHeader confidence="0.995468" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999809">
The design and implementation of an XML-
based corpus environment for multilevel anno-
tated multimodal (language) data is described.
The TASX-environment (TASX: Time Aligned
Signal data eXchange format) constitutes a
technical basis for all aspects of the corpus
setup procedure: XML-based annotation of the
multimodal data, transformation of non XML-
annotations, and the web-based analysis and
dissemination of the data.
</bodyText>
<sectionHeader confidence="0.997913" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9997">
In this paper we describe the design and im-
plementation of an XML-based corpus environ-
ment for complex annotated multimodal data.
The TASX-environment&apos; presented here sup-
ports the complete corpus setup procedure:
XML-based annotation of raw speech and video
data, the transformation of non XML-data and
the analysis and dissemination of the corpus.
The development of the corpus environment
complements the LeaP2 project, which ex-
plores the acquisition of prosody by both sec-
ond language learners of German and English.
From the collected data an XML-annotated
multimodal corpus is created. The TASX-
environment is also used in number of linguistic
projects at our faculty and externally, including
work on language documentation, multi-party
converstional analysis, multimodal construction
dialogues, doctor patient interaction and others.
The paper is organized in four sections. The
underlying XML-based TASX format is ex-
plained and the components of the TASX-
environment are described in more detail. Fi-
nally, a short conslusion is given.
</bodyText>
<footnote confidence="0.970633">
ihttp://coli.launi-bielefeld.dek-,milde/tasx/
2http://www.spectrum.uni-bielefeld.de/LeaP/
</footnote>
<sectionHeader confidence="0.899359" genericHeader="introduction">
2 The TASX format
</sectionHeader>
<bodyText confidence="0.999852666666667">
A central aspect of our research is to explore
up to which point current standard XML tech-
nology (XML, XSL-T, XSL-FO, XPATH, SVG,
XQUERY) can be used to model multimodal
corpora, to transform, query and distribute the
content of such corpora and to perform ade-
quate linguistic analysis. As a result, all lin-
guistic data in our system is stored in an XML-
based format called TASX: the Time Aligned
Signal data eXchange format.
A TASX-annotated corpus consists of a set
of sessions, each one holding an arbitrary num-
ber of descriptive tiers, called layers. Each layer
consists of a set of separated events. Each event
stores some textual information (e.g. a syllable
or the description of gesture) and is linked to
the primary audio data by two time stamps de-
noting the interval of this event. Relations be-
tween events on different tiers can be encoded
by defining links using the ID/IDREFS mech-
anism of XML. This is similar to the approach
of stand-off markup as proposed by MATE (Dy-
bkaer et al., June 1999), respectivly NITE (Car-
letta et al., 2002). Finally, arbitrary meta-data
can be assigned to the complete corpus, each
session, each layer and each event. Meta data
is represented as a named set of attribute-value
pairs. No further restrictions are made on the
AV pairs. The design of TASX is based on
the careful analysis of common annotation for-
mats and tools. We tried to maximally reduce
these formats while still allowing to represent
all of the stored information and (even more im-
portant) the represented information structure.
The TASX-format is thus powerful enough to
encode most of the corpus annotation formats in
use. Indeed a number of format transformation
programms have been implemented. For a more
detailed description of the TASX-environment
</bodyText>
<listItem confidence="0.963303411764706">
see also (Milde and Gut, 2001), (Milde and Gut,
2002a), (Milde and Gut, 2002b). Table 1 shows
the formal TASX-format specification. Two lev-
els of TASX-annotation can be distinguished:
1. TASX level 1: all events do immediately
refer to the common timeline of the under-
lying signal. This approach has been taken
by most of the currently available annota-
tion formats and annotation tools.
2. TASX level 2: events can either refer to
the common timeline or events can re-
fer to events in other layers. This allows
to construct hierarchical annotation stuc-
tures. While conceptually integrated into
the TASX format, there is currently no tool
available to manipulate TASX level 2 anno-
tated language data.
</listItem>
<subsectionHeader confidence="0.968022">
2.1 The TASX-annotator and the
corpus engine
</subsectionHeader>
<bodyText confidence="0.994255">
The complete TASX-environment consists of:
</bodyText>
<listItem confidence="0.998516692307692">
• tools for the annotation of empirical lan-
guage data (video and audio material),
• a simple meta-data editor
• programs for the transformation of var-
ious formats of linguistic standard soft-
ware (Transcriber, Praat, ESPS/waves+,
SyncWriter, Exmaralda etc.)
• a set of programs for linguistic analysis of
the TASX-annotated data, and
• a corpus system for the distribution of lan-
guage data via the internet, including inter-
active corpus query and multimodal data
display in a standard web browser.
</listItem>
<table confidence="0.986773136363636">
Element definition Attributes
&lt; !ELEMENT tasx &lt; !ATTLIST session
(meta*, session+) &gt; s -id CDATA #REQUIRED
&lt; !ELEMENT session day CDATA #REQUIRED
(meta*, layer+) &gt; ref IDREF #IMPLIED
&lt; !ELEMENT layer month CDATA #REQUIRED
(meta*, event+) &gt; year CDATA #REQUIRED &gt;
&lt; !ELEMENT event &lt; !ATTLIST layer
(#PCDATA,meta*) &gt; 1-id CDATA #REQUIRED
&lt; !ELEMENT meta (de sc*) &gt; ref IDREF #IMPLIED &gt;
&lt; !ELEMENT de s c (name , val ) &gt; &lt; !ATTLIST event
&lt; !ELEMENT name (#PCDATA) &gt; c-id CDATA #REQUIRED
&lt; !ELEMENT val (#PCDATA) &gt; start CDATA #REQUIRED
end CDATA #REQUIRED
ref IDREF #IMPLIED
mid CDATA #IMPLIED
len CDATA #IMPLIED &gt;
&lt; !ATTLIST meta
m-id CDATA #REQUIRED
ref IDREF #IMPLIED
access CDATA #IMPLIED
level CDATA #IMPLIED&gt;
</table>
<tableCaption confidence="0.999483">
Table 1: The TASX DTD.
</tableCaption>
<bodyText confidence="0.993002">
In the following sections these modules are
described in more detail
</bodyText>
<subsectionHeader confidence="0.997041">
2.2 The TASX-annotator
</subsectionHeader>
<bodyText confidence="0.999931928571429">
The TASX-annotator is a central component of
the TASX-environment. The tool allows the
multilevel annotation and transcription of video
(multi-channel) and audio data (see figure 1).
A separate video playback window is opened up
for each video file making it possible to e.g. dis-
play multiple perspectives of the same scene.
The video playback is synchronized with the
transcription. For audio transcriptions an os-
zillogram is calculated and is displayed inside
the main window. The programm is very user
friendly and can be used without a high level
of computer skills. It is possible to completely
control the tool by either mouse or by keyboard
shortcuts.
Different data views are programmed (time-
aligned partiture, word-aligned partiture, se-
quential text view) to make annotation as ef-
fective as possible.
The time aligned view is organized as a two
dimensinal grid of infinite size. A layer is pre-
sented as a horizontal tier of events. The order
of the layers is arbitrary and can be changed
instantly. The user is able to define time in-
tervals by dragging the mouse. Each time in-
terval represents an event. The event is dis-
played as a graphical box which can be selected
and moved with the mouse. The content of an
</bodyText>
<figureCaption confidence="0.975835">
Figure 1: A screenshot of the TASX-annotator.
</figureCaption>
<bodyText confidence="0.998431493827161">
In the bottom half, the main panel is visible,
where the time aligned tier view has been se-
lected. On top of the main window, the font se-
lection panel is visible (showing some IPA char-
acters). Above it, the find tool is shown. In
the upper left corner the video display can been
seen.
event is entered in an additional text field. Any
(unicode) font (e.g. IPA fonts, HamNoSys fonts
etc.) available for the operating system can be
used for the transcription. The user can choose
font and fontpage from a table displaying all
characters of the selected font. It is also possi-
ble to define a virtual keyboard which maps the
given keystrokes to arbitrary characters of the
target font.
In the text view the data can be manipulated
in a standard text editor panel. The content
of the editor represents the layer and each line
represents an event. A list selection box allows
switching between different layers. It is possi-
ble to transfer text from standard text editors,
e.g. Microsoft Word, by cut and paste oper-
ations. In order to additionally speed up the
transcription process, a word completion func-
tion has been implemented for the text view.
Entering the initial letter of a word and con-
secutively pressing CTRL+L will bring up all
words starting with this letter. Once the text is
tranferred into the TASX-annotator, the events
still have to be aligned with the primary au-
dio and video data. Switching back to the time
aligned view and moving the events with the
mouse makes this task quite simple.
In the partiture view the data cannot be
edited. In practice this means that the data is
transformed into an HTML table and then dis-
played to the user. A number of different HTML
formatted views have been designed. The views
can also be saved to external files and loaded
into standard web browsers.
One potential strength of the TASX-
annotator is its manner of handling the ex-
port/import of XML based information. A
standard way of solving this problem would be
the implementation of a set of format specific
XML parsers which construct the internal rep-
resentation (e.g. JDom) of the XML file. In
the TASX-annotator we follow a different ap-
proach. The system integrates an XSL-T pro-
cessor (saxon), making it easy to perform on
the fly data transformations. The import of an
XML-file is split into two steps: first an XSL-T
stylesheet transforms the XML file into TASX,
second another XSL-T stylesheet will transform
the TASX file into a simple text oriented format.
This format can be loaded efficiently.
A crucial problem when setting up larger
corpora are inter-anotator transcription errors.
While the TASX-annotator is designed to be
used by a single person, it still provides a num-
ber of routines to combine (merge), control and
align annotations created by a larger team of
people. We do not integrate more complex con-
trol functions. This contradicts our approach of
clearly separating corpus creation from corpus
analysis.
Currently a number of related annotation
tools are under development (e.g. Elan (Brug-
man and Wittenburg, 2001), AGTK (Bird et al.,
2001), (Bird and Liberman, 1999), Anvil (Kipp,
2001), Exmaralada (Schmidt, 2001)), each of
them designed for a specific target audience.
Most of the tools are using Java as an imple-
mentation base and encode the linguistic data
in a comparable way as proposed here (XML-
based, using time spans to mark events, sep-
arating meta-data and content). As a result
it becomes relativly simple to convert/generate
TASX-annotated corpora into/from these for-
mats.
</bodyText>
<subsectionHeader confidence="0.99266">
2.3 Transcoding tools
</subsectionHeader>
<bodyText confidence="0.9877816875">
The development of tools for the TASX-
environment is based on the concept that a re-
implementation of functionalities already avail-
able in other language and speech processing
software is not necessary. Established software
systems such as Praat or ESPS/waves+ do not
need to be duplicated.
The TASX-environment therefore focuses
on the development of transcoding filters
from and into various formats. These in-
clude: Praat/freq, Praat/label, ESPS/waves+,
ESP S/FO-analysis, Transcriber, annotation
graphs stored in XML, SyncWriter and basic
text formats (see table 2). In addition, filters
for data import and export of the Exmaralda
system (Schmidt, 2001) are available.
</bodyText>
<table confidence="0.999084571428572">
TASX import export
Annotation graphs XSL-T XSL-T
Exmaralda XSL-T/Java XSL-T/J.
HTML-table XSL-T
HTML-partiture — XSL-T
RTF XSL-T/J.
Anvil XSL-T XSL-T
EAF XSL-T XSL-T
Praat-label Perl/XSL-T XSL-T
Transcriber(STM) Perl/XSL-T XSL-T
WaveSurfer Perl/XSL-T XSL-T
ESPS-label Perl XSL-T
ESPS-freq Perl/XSL-T/J. XSL-T
SyncWriter Perl
</table>
<tableCaption confidence="0.961391">
Table 2: List of currently implemented
</tableCaption>
<bodyText confidence="0.951276666666667">
transcoding tools. The table shows the pro-
gramming languages used to implement the
transcoders.
Most of these components are implemented
in Java, transformations are defined in XSL-
T and a smaller number of additional tools is
written in Perl (mainly to transform non-XML
data). We will gradually increase the number of
transcoding programms. All programms follow
a unix like processing approach: input can be
read from a file or standard in, the transcod-
ing result will be printed to standard out. This
allows to combine the transcoders in arbitrary
ways. TASX can thus be seen as a common
interlingua for the supported linguistic formats.
</bodyText>
<subsectionHeader confidence="0.997025">
2.4 Pause tracker
</subsectionHeader>
<bodyText confidence="0.9999572">
To speed up the annotation process a pause
tracking programm has been developed. The
programm separates speech from pauses and
generates a TASX annotated XML document
with two tiers, one holding all pause events, the
other one holding all speech events.
The tracker uses Praat (Boersma, 2001) to
perform the actual speech analysis. It simply
calculates the pitch curve of the audio signal.
If no pitch is detected, then non-speech is as-
sumed, otherwise speech. In a second step, the
results of this classification are combined to con-
tinuous stretches of pauses/speech. Finally the
TASX conformant output is generated.
The pause tracker has shown to work quite
reliably on a set of recording in different lan-
guages (Japanese, English, German, Sater-
friesisch, French, Ega). Even if tracking is far
from perfect, the human annotator gets a good
pre-segmentation of the signal. This allows to
move very quickly through the file, possibly per-
forming minor adjustments to the boundaries
or combining a set of separated events of one
speaker.
While the pause tracker gives good results
when doing conversational analysis it is not of
much help for fine grained phonetic research.
Here a tracking system for vowels and conso-
nants would be very useful. Garcia et.al. ((Gar-
cia et al., 2002)) are working on such a system.
</bodyText>
<subsectionHeader confidence="0.999751">
2.5 Statistical analysis
</subsectionHeader>
<bodyText confidence="0.999888916666667">
In the inital design phase of the TASX system
we planned to implement the statistical analysis
in XSL-T and Java. Indeed, a number of smaller
programs have been realized in this technique.
Unfortuneatly it quickly became evident, that
XSL-T is not suited to perform such calcula-
tions on larger sets of data. It lacks high preci-
sion arithmetic functions and consumes to much
memory. When using external Java functions,
a large number of data conversions have to take
place. Also the resulting code is very hard to
read and debug.
Instead we have chosen to use the R sys-
tem, an open source implementation of the
S-Plus statistics language (Ihaka and Gentle-
man, 1996), (Venables and Ripley, 1999). R
implements all major statistical tests and cal-
culations and is equipped with a large number
of high level graphic routines to generate vi-
sually informative presentations of the results.
Even more important it includes efficient in-
put/output routines to load and save semistruc-
tured data (either XML-annotated or plain ascii
text).
</bodyText>
<figure confidence="0.991298153846154">
Corpus-Engine
Information-Pool
URL / CGI / SERVLET
EMBEDDED SQL
HTML / XML / PDF
GIF / WAV / SVG
stere
Activates
oras rn..v-acII
xv�
ResultSet
SQL (JDBC)
Comma separated list
</figure>
<bodyText confidence="0.999725428571429">
into large number of different formats, mak-
ing it possible to integrate TASX-aware com-
ponents into standard linguistic working proce-
dures. This will hopefully lead to the creation
of linguistic resources which can be used over a
long period of time by different researchers with
a wide range of scientific goals.
</bodyText>
<sectionHeader confidence="0.997741" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.997791873417722">
S. Bird and M. Liberman. 1999. A Formal
Framework for Linguistic Annotation. Tech-
nical Report MS-CIS-99-01, Department of
Computer and Information Science, Univer-
sity of Pennsylvania.
Steven Bird, Kazuaki Maeda, and Xiaoyi Ma.
2001. Agtk: the annotation graph toolkit.
In Peter Buneman Steven Bird and Mark
Liberman, editors, IRCS Workshop on Lin-
guistic Databases, University of Pennsylva-
nia, Philadelphia, USA.
P. Boersma. 2001. Praat, a system for doing
phonetics by computer. Glot International,
5(9/10):341-345.
Hennie Brugman and Peter Wittenburg. 2001.
Mpi tools for linguistic annotation. In Pe-
ter Buneman Steven Bird and Mark Liber-
man, editors, IRCS Workshop on Linguis-
tic Databases, University of Pennsylvania,
Philadelphia, USA.
J. Carletta, D. McKelvie, and Isard A. 2002.
Supporting linguistic annotation using xml
and stylesheets. In G. Sampson and D. Mc-
Carthy, editors, Readings in Corpus Linguis-
tic, Continuum International.
L. Dybkaer, M. B. Moeller, N. 0. Bernsen,
J. Carletta, A. Isard, M. Klein, D. McKelvie,
and A. Mengel. June 1999. The mate work-
bench. In David Traum, editor, Proceedings
of ACL&apos;99, Demonstration Abstracts. Univer-
sity of Maryland, pages 12 — 13.
J.E. Garcia, U. B. Gut, and A. Galves. 2002.
Vocale - a semi-automatic annotation tool for
prosodic research. In B. Bel and I. Marlien,
editors, Proceedings of the Speech Prosody
2002 conference, 11-13 April 2002. Aix-en-
Provence: Laboratoire Parole et Langage,
pages 327 — 330.
D. Gibbon and T. Trippel. 2001. Pax - an an-
notation based concordancing toolkit. In Pe-
ter Buneman Steven Bird and Mark Liber-
man, editors, IRCS Workshop on Linguis-
tic Databases, University of Pennsylvania,
Philadelphia, USA.
R. Ihaka and R. Gentleman. 1996. R: A lan-
guage for data analysis and graphics. Jour-
nal of Computational and Graphical Statis-
tics, 5(3):299-314.
Michael Kipp. 2001. Anvil - a generic annota-
tion tool for multimodal dialogue. In Proceed-
ings of the Eurospeech 2001, Aalborg, pages
1367 — 1370.
J.-T. Milde and U. B. Gut. 2001. The TASX-
engine: an XML-based corpus database
for time aligned language data. In Pe-
ter Buneman Steven Bird and Mark Liber-
man, editors, IRCS Workshop on Linguis-
tic Databases, University of Pennsylvania,
Philadelphia, USA.
J.-T. Milde and U. B. Gut. 2002a. A prosodic
corpus of non-native speech. In B. Bel and
I. Marlien, editors, Proceedings of the Speech
Prosody 2002 conference, 11-13 April 2002.
Aix-en-Provence: Laboratoire Parole et Lan-
gage, pages 503 — 506.
J.-T. Milde and U. B. Gut. 2002b. The tasx-
environment: an xml-based toolset for time
aligned speech corpora. In Proceedings of the
third international conference on language re-
sources and evaluation (LREC 2002, Gran
Canaria.
T. Schmidt. 2001. Gesprachstranskription
auf dem Computer - das System
EXMARaLDA. Gesprdchsforschung,
http://www. gespraechsforschung-ozs. de,
2.
W. N. Venables and B. D. Ripley. 1999. Modern
Applied Statistics with S-Plus. Third Edition.
Springer. ISBN 0-387-98825-4.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.887843">
<title confidence="0.934829">The TASX-environment: an XML-based toolset for the of multimodal corpora</title>
<author confidence="0.967426">Jan-Torsten</author>
<affiliation confidence="0.999801">Department of Linguistics and Literary University of Bielefeld,</affiliation>
<abstract confidence="0.998136181818182">The design and implementation of an XMLbased corpus environment for multilevel annotated multimodal (language) data is described. The TASX-environment (TASX: Time Aligned Signal data eXchange format) constitutes a technical basis for all aspects of the corpus setup procedure: XML-based annotation of the multimodal data, transformation of non XMLannotations, and the web-based analysis and dissemination of the data.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Bird</author>
<author>M Liberman</author>
</authors>
<title>A Formal Framework for Linguistic Annotation.</title>
<date>1999</date>
<tech>Technical Report MS-CIS-99-01,</tech>
<institution>Department of Computer and Information Science, University of Pennsylvania.</institution>
<contexts>
<context position="10037" citStr="Bird and Liberman, 1999" startWordPosition="1631" endWordPosition="1634">s format can be loaded efficiently. A crucial problem when setting up larger corpora are inter-anotator transcription errors. While the TASX-annotator is designed to be used by a single person, it still provides a number of routines to combine (merge), control and align annotations created by a larger team of people. We do not integrate more complex control functions. This contradicts our approach of clearly separating corpus creation from corpus analysis. Currently a number of related annotation tools are under development (e.g. Elan (Brugman and Wittenburg, 2001), AGTK (Bird et al., 2001), (Bird and Liberman, 1999), Anvil (Kipp, 2001), Exmaralada (Schmidt, 2001)), each of them designed for a specific target audience. Most of the tools are using Java as an implementation base and encode the linguistic data in a comparable way as proposed here (XMLbased, using time spans to mark events, separating meta-data and content). As a result it becomes relativly simple to convert/generate TASX-annotated corpora into/from these formats. 2.3 Transcoding tools The development of tools for the TASXenvironment is based on the concept that a reimplementation of functionalities already available in other language and spe</context>
</contexts>
<marker>Bird, Liberman, 1999</marker>
<rawString>S. Bird and M. Liberman. 1999. A Formal Framework for Linguistic Annotation. Technical Report MS-CIS-99-01, Department of Computer and Information Science, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
<author>Kazuaki Maeda</author>
<author>Xiaoyi Ma</author>
</authors>
<title>Agtk: the annotation graph toolkit.</title>
<date>2001</date>
<booktitle>IRCS Workshop on Linguistic Databases,</booktitle>
<editor>In Peter Buneman Steven Bird and Mark Liberman, editors,</editor>
<location>University of Pennsylvania, Philadelphia, USA.</location>
<contexts>
<context position="10010" citStr="Bird et al., 2001" startWordPosition="1627" endWordPosition="1630"> oriented format. This format can be loaded efficiently. A crucial problem when setting up larger corpora are inter-anotator transcription errors. While the TASX-annotator is designed to be used by a single person, it still provides a number of routines to combine (merge), control and align annotations created by a larger team of people. We do not integrate more complex control functions. This contradicts our approach of clearly separating corpus creation from corpus analysis. Currently a number of related annotation tools are under development (e.g. Elan (Brugman and Wittenburg, 2001), AGTK (Bird et al., 2001), (Bird and Liberman, 1999), Anvil (Kipp, 2001), Exmaralada (Schmidt, 2001)), each of them designed for a specific target audience. Most of the tools are using Java as an implementation base and encode the linguistic data in a comparable way as proposed here (XMLbased, using time spans to mark events, separating meta-data and content). As a result it becomes relativly simple to convert/generate TASX-annotated corpora into/from these formats. 2.3 Transcoding tools The development of tools for the TASXenvironment is based on the concept that a reimplementation of functionalities already availabl</context>
</contexts>
<marker>Bird, Maeda, Ma, 2001</marker>
<rawString>Steven Bird, Kazuaki Maeda, and Xiaoyi Ma. 2001. Agtk: the annotation graph toolkit. In Peter Buneman Steven Bird and Mark Liberman, editors, IRCS Workshop on Linguistic Databases, University of Pennsylvania, Philadelphia, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Boersma</author>
</authors>
<title>Praat, a system for doing phonetics by computer.</title>
<date>2001</date>
<journal>Glot International,</journal>
<pages>5--9</pages>
<contexts>
<context position="12463" citStr="Boersma, 2001" startWordPosition="2002" endWordPosition="2003">amms. All programms follow a unix like processing approach: input can be read from a file or standard in, the transcoding result will be printed to standard out. This allows to combine the transcoders in arbitrary ways. TASX can thus be seen as a common interlingua for the supported linguistic formats. 2.4 Pause tracker To speed up the annotation process a pause tracking programm has been developed. The programm separates speech from pauses and generates a TASX annotated XML document with two tiers, one holding all pause events, the other one holding all speech events. The tracker uses Praat (Boersma, 2001) to perform the actual speech analysis. It simply calculates the pitch curve of the audio signal. If no pitch is detected, then non-speech is assumed, otherwise speech. In a second step, the results of this classification are combined to continuous stretches of pauses/speech. Finally the TASX conformant output is generated. The pause tracker has shown to work quite reliably on a set of recording in different languages (Japanese, English, German, Saterfriesisch, French, Ega). Even if tracking is far from perfect, the human annotator gets a good pre-segmentation of the signal. This allows to mov</context>
</contexts>
<marker>Boersma, 2001</marker>
<rawString>P. Boersma. 2001. Praat, a system for doing phonetics by computer. Glot International, 5(9/10):341-345.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hennie Brugman</author>
<author>Peter Wittenburg</author>
</authors>
<title>Mpi tools for linguistic annotation.</title>
<date>2001</date>
<booktitle>IRCS Workshop on Linguistic Databases,</booktitle>
<editor>In Peter Buneman Steven Bird and Mark Liberman, editors,</editor>
<location>University of Pennsylvania, Philadelphia, USA.</location>
<contexts>
<context position="9984" citStr="Brugman and Wittenburg, 2001" startWordPosition="1621" endWordPosition="1625">form the TASX file into a simple text oriented format. This format can be loaded efficiently. A crucial problem when setting up larger corpora are inter-anotator transcription errors. While the TASX-annotator is designed to be used by a single person, it still provides a number of routines to combine (merge), control and align annotations created by a larger team of people. We do not integrate more complex control functions. This contradicts our approach of clearly separating corpus creation from corpus analysis. Currently a number of related annotation tools are under development (e.g. Elan (Brugman and Wittenburg, 2001), AGTK (Bird et al., 2001), (Bird and Liberman, 1999), Anvil (Kipp, 2001), Exmaralada (Schmidt, 2001)), each of them designed for a specific target audience. Most of the tools are using Java as an implementation base and encode the linguistic data in a comparable way as proposed here (XMLbased, using time spans to mark events, separating meta-data and content). As a result it becomes relativly simple to convert/generate TASX-annotated corpora into/from these formats. 2.3 Transcoding tools The development of tools for the TASXenvironment is based on the concept that a reimplementation of functi</context>
</contexts>
<marker>Brugman, Wittenburg, 2001</marker>
<rawString>Hennie Brugman and Peter Wittenburg. 2001. Mpi tools for linguistic annotation. In Peter Buneman Steven Bird and Mark Liberman, editors, IRCS Workshop on Linguistic Databases, University of Pennsylvania, Philadelphia, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Carletta</author>
<author>D McKelvie</author>
<author>A Isard</author>
</authors>
<title>Supporting linguistic annotation using xml and stylesheets.</title>
<date>2002</date>
<booktitle>Readings in Corpus Linguistic, Continuum International.</booktitle>
<editor>In G. Sampson and D. McCarthy, editors,</editor>
<contexts>
<context position="2846" citStr="Carletta et al., 2002" startWordPosition="427" endWordPosition="431">A TASX-annotated corpus consists of a set of sessions, each one holding an arbitrary number of descriptive tiers, called layers. Each layer consists of a set of separated events. Each event stores some textual information (e.g. a syllable or the description of gesture) and is linked to the primary audio data by two time stamps denoting the interval of this event. Relations between events on different tiers can be encoded by defining links using the ID/IDREFS mechanism of XML. This is similar to the approach of stand-off markup as proposed by MATE (Dybkaer et al., June 1999), respectivly NITE (Carletta et al., 2002). Finally, arbitrary meta-data can be assigned to the complete corpus, each session, each layer and each event. Meta data is represented as a named set of attribute-value pairs. No further restrictions are made on the AV pairs. The design of TASX is based on the careful analysis of common annotation formats and tools. We tried to maximally reduce these formats while still allowing to represent all of the stored information and (even more important) the represented information structure. The TASX-format is thus powerful enough to encode most of the corpus annotation formats in use. Indeed a num</context>
</contexts>
<marker>Carletta, McKelvie, Isard, 2002</marker>
<rawString>J. Carletta, D. McKelvie, and Isard A. 2002. Supporting linguistic annotation using xml and stylesheets. In G. Sampson and D. McCarthy, editors, Readings in Corpus Linguistic, Continuum International.</rawString>
</citation>
<citation valid="true">
<title>The mate workbench.</title>
<date>1999</date>
<booktitle>Proceedings of ACL&apos;99, Demonstration Abstracts. University of Maryland,</booktitle>
<pages>12--13</pages>
<editor>L. Dybkaer, M. B. Moeller, N. 0. Bernsen, J. Carletta, A. Isard, M. Klein, D. McKelvie, and A. Mengel.</editor>
<marker>1999</marker>
<rawString>L. Dybkaer, M. B. Moeller, N. 0. Bernsen, J. Carletta, A. Isard, M. Klein, D. McKelvie, and A. Mengel. June 1999. The mate workbench. In David Traum, editor, Proceedings of ACL&apos;99, Demonstration Abstracts. University of Maryland, pages 12 — 13.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J E Garcia</author>
<author>U B Gut</author>
<author>A Galves</author>
</authors>
<title>Vocale - a semi-automatic annotation tool for prosodic research.</title>
<date>2002</date>
<booktitle>Proceedings of the Speech Prosody 2002 conference,</booktitle>
<pages>11--13</pages>
<editor>In B. Bel and I. Marlien, editors,</editor>
<contexts>
<context position="13451" citStr="Garcia et al., 2002" startWordPosition="2162" endWordPosition="2166">reliably on a set of recording in different languages (Japanese, English, German, Saterfriesisch, French, Ega). Even if tracking is far from perfect, the human annotator gets a good pre-segmentation of the signal. This allows to move very quickly through the file, possibly performing minor adjustments to the boundaries or combining a set of separated events of one speaker. While the pause tracker gives good results when doing conversational analysis it is not of much help for fine grained phonetic research. Here a tracking system for vowels and consonants would be very useful. Garcia et.al. ((Garcia et al., 2002)) are working on such a system. 2.5 Statistical analysis In the inital design phase of the TASX system we planned to implement the statistical analysis in XSL-T and Java. Indeed, a number of smaller programs have been realized in this technique. Unfortuneatly it quickly became evident, that XSL-T is not suited to perform such calculations on larger sets of data. It lacks high precision arithmetic functions and consumes to much memory. When using external Java functions, a large number of data conversions have to take place. Also the resulting code is very hard to read and debug. Instead we hav</context>
</contexts>
<marker>Garcia, Gut, Galves, 2002</marker>
<rawString>J.E. Garcia, U. B. Gut, and A. Galves. 2002. Vocale - a semi-automatic annotation tool for prosodic research. In B. Bel and I. Marlien, editors, Proceedings of the Speech Prosody 2002 conference, 11-13 April 2002. Aix-enProvence: Laboratoire Parole et Langage, pages 327 — 330.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Gibbon</author>
<author>T Trippel</author>
</authors>
<title>Pax - an annotation based concordancing toolkit.</title>
<date>2001</date>
<booktitle>IRCS Workshop on Linguistic Databases,</booktitle>
<editor>In Peter Buneman Steven Bird and Mark Liberman, editors,</editor>
<location>University of Pennsylvania, Philadelphia, USA.</location>
<marker>Gibbon, Trippel, 2001</marker>
<rawString>D. Gibbon and T. Trippel. 2001. Pax - an annotation based concordancing toolkit. In Peter Buneman Steven Bird and Mark Liberman, editors, IRCS Workshop on Linguistic Databases, University of Pennsylvania, Philadelphia, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Ihaka</author>
<author>R Gentleman</author>
</authors>
<title>R: A language for data analysis and graphics.</title>
<date>1996</date>
<journal>Journal of Computational and Graphical Statistics,</journal>
<pages>5--3</pages>
<contexts>
<context position="14172" citStr="Ihaka and Gentleman, 1996" startWordPosition="2285" endWordPosition="2289"> system we planned to implement the statistical analysis in XSL-T and Java. Indeed, a number of smaller programs have been realized in this technique. Unfortuneatly it quickly became evident, that XSL-T is not suited to perform such calculations on larger sets of data. It lacks high precision arithmetic functions and consumes to much memory. When using external Java functions, a large number of data conversions have to take place. Also the resulting code is very hard to read and debug. Instead we have chosen to use the R system, an open source implementation of the S-Plus statistics language (Ihaka and Gentleman, 1996), (Venables and Ripley, 1999). R implements all major statistical tests and calculations and is equipped with a large number of high level graphic routines to generate visually informative presentations of the results. Even more important it includes efficient input/output routines to load and save semistructured data (either XML-annotated or plain ascii text). Corpus-Engine Information-Pool URL / CGI / SERVLET EMBEDDED SQL HTML / XML / PDF GIF / WAV / SVG stere Activates oras rn..v-acII xv� ResultSet SQL (JDBC) Comma separated list into large number of different formats, making it possible to</context>
</contexts>
<marker>Ihaka, Gentleman, 1996</marker>
<rawString>R. Ihaka and R. Gentleman. 1996. R: A language for data analysis and graphics. Journal of Computational and Graphical Statistics, 5(3):299-314.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Kipp</author>
</authors>
<title>Anvil - a generic annotation tool for multimodal dialogue.</title>
<date>2001</date>
<booktitle>In Proceedings of the Eurospeech</booktitle>
<pages>1367--1370</pages>
<location>Aalborg,</location>
<contexts>
<context position="10057" citStr="Kipp, 2001" startWordPosition="1636" endWordPosition="1637">y. A crucial problem when setting up larger corpora are inter-anotator transcription errors. While the TASX-annotator is designed to be used by a single person, it still provides a number of routines to combine (merge), control and align annotations created by a larger team of people. We do not integrate more complex control functions. This contradicts our approach of clearly separating corpus creation from corpus analysis. Currently a number of related annotation tools are under development (e.g. Elan (Brugman and Wittenburg, 2001), AGTK (Bird et al., 2001), (Bird and Liberman, 1999), Anvil (Kipp, 2001), Exmaralada (Schmidt, 2001)), each of them designed for a specific target audience. Most of the tools are using Java as an implementation base and encode the linguistic data in a comparable way as proposed here (XMLbased, using time spans to mark events, separating meta-data and content). As a result it becomes relativly simple to convert/generate TASX-annotated corpora into/from these formats. 2.3 Transcoding tools The development of tools for the TASXenvironment is based on the concept that a reimplementation of functionalities already available in other language and speech processing softw</context>
</contexts>
<marker>Kipp, 2001</marker>
<rawString>Michael Kipp. 2001. Anvil - a generic annotation tool for multimodal dialogue. In Proceedings of the Eurospeech 2001, Aalborg, pages 1367 — 1370.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J-T Milde</author>
<author>U B Gut</author>
</authors>
<title>The TASXengine: an XML-based corpus database for time aligned language data.</title>
<date>2001</date>
<booktitle>IRCS Workshop on Linguistic Databases,</booktitle>
<editor>In Peter Buneman Steven Bird and Mark Liberman, editors,</editor>
<location>University of Pennsylvania, Philadelphia, USA.</location>
<contexts>
<context position="3594" citStr="Milde and Gut, 2001" startWordPosition="548" endWordPosition="551">resented as a named set of attribute-value pairs. No further restrictions are made on the AV pairs. The design of TASX is based on the careful analysis of common annotation formats and tools. We tried to maximally reduce these formats while still allowing to represent all of the stored information and (even more important) the represented information structure. The TASX-format is thus powerful enough to encode most of the corpus annotation formats in use. Indeed a number of format transformation programms have been implemented. For a more detailed description of the TASX-environment see also (Milde and Gut, 2001), (Milde and Gut, 2002a), (Milde and Gut, 2002b). Table 1 shows the formal TASX-format specification. Two levels of TASX-annotation can be distinguished: 1. TASX level 1: all events do immediately refer to the common timeline of the underlying signal. This approach has been taken by most of the currently available annotation formats and annotation tools. 2. TASX level 2: events can either refer to the common timeline or events can refer to events in other layers. This allows to construct hierarchical annotation stuctures. While conceptually integrated into the TASX format, there is currently n</context>
</contexts>
<marker>Milde, Gut, 2001</marker>
<rawString>J.-T. Milde and U. B. Gut. 2001. The TASXengine: an XML-based corpus database for time aligned language data. In Peter Buneman Steven Bird and Mark Liberman, editors, IRCS Workshop on Linguistic Databases, University of Pennsylvania, Philadelphia, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J-T Milde</author>
<author>U B Gut</author>
</authors>
<title>A prosodic corpus of non-native speech.</title>
<date>2002</date>
<booktitle>Proceedings of the Speech Prosody 2002 conference,</booktitle>
<pages>11--13</pages>
<editor>In B. Bel and I. Marlien, editors,</editor>
<contexts>
<context position="3616" citStr="Milde and Gut, 2002" startWordPosition="552" endWordPosition="555"> of attribute-value pairs. No further restrictions are made on the AV pairs. The design of TASX is based on the careful analysis of common annotation formats and tools. We tried to maximally reduce these formats while still allowing to represent all of the stored information and (even more important) the represented information structure. The TASX-format is thus powerful enough to encode most of the corpus annotation formats in use. Indeed a number of format transformation programms have been implemented. For a more detailed description of the TASX-environment see also (Milde and Gut, 2001), (Milde and Gut, 2002a), (Milde and Gut, 2002b). Table 1 shows the formal TASX-format specification. Two levels of TASX-annotation can be distinguished: 1. TASX level 1: all events do immediately refer to the common timeline of the underlying signal. This approach has been taken by most of the currently available annotation formats and annotation tools. 2. TASX level 2: events can either refer to the common timeline or events can refer to events in other layers. This allows to construct hierarchical annotation stuctures. While conceptually integrated into the TASX format, there is currently no tool available to ma</context>
</contexts>
<marker>Milde, Gut, 2002</marker>
<rawString>J.-T. Milde and U. B. Gut. 2002a. A prosodic corpus of non-native speech. In B. Bel and I. Marlien, editors, Proceedings of the Speech Prosody 2002 conference, 11-13 April 2002. Aix-en-Provence: Laboratoire Parole et Langage, pages 503 — 506.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J-T Milde</author>
<author>U B Gut</author>
</authors>
<title>The tasxenvironment: an xml-based toolset for time aligned speech corpora.</title>
<date>2002</date>
<booktitle>In Proceedings of the third international conference on language resources and evaluation (LREC 2002, Gran Canaria.</booktitle>
<contexts>
<context position="3616" citStr="Milde and Gut, 2002" startWordPosition="552" endWordPosition="555"> of attribute-value pairs. No further restrictions are made on the AV pairs. The design of TASX is based on the careful analysis of common annotation formats and tools. We tried to maximally reduce these formats while still allowing to represent all of the stored information and (even more important) the represented information structure. The TASX-format is thus powerful enough to encode most of the corpus annotation formats in use. Indeed a number of format transformation programms have been implemented. For a more detailed description of the TASX-environment see also (Milde and Gut, 2001), (Milde and Gut, 2002a), (Milde and Gut, 2002b). Table 1 shows the formal TASX-format specification. Two levels of TASX-annotation can be distinguished: 1. TASX level 1: all events do immediately refer to the common timeline of the underlying signal. This approach has been taken by most of the currently available annotation formats and annotation tools. 2. TASX level 2: events can either refer to the common timeline or events can refer to events in other layers. This allows to construct hierarchical annotation stuctures. While conceptually integrated into the TASX format, there is currently no tool available to ma</context>
</contexts>
<marker>Milde, Gut, 2002</marker>
<rawString>J.-T. Milde and U. B. Gut. 2002b. The tasxenvironment: an xml-based toolset for time aligned speech corpora. In Proceedings of the third international conference on language resources and evaluation (LREC 2002, Gran Canaria.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Schmidt</author>
</authors>
<date>2001</date>
<booktitle>Gesprachstranskription auf dem Computer - das System EXMARaLDA. Gesprdchsforschung, http://www. gespraechsforschung-ozs. de,</booktitle>
<pages>2</pages>
<contexts>
<context position="10085" citStr="Schmidt, 2001" startWordPosition="1639" endWordPosition="1640"> setting up larger corpora are inter-anotator transcription errors. While the TASX-annotator is designed to be used by a single person, it still provides a number of routines to combine (merge), control and align annotations created by a larger team of people. We do not integrate more complex control functions. This contradicts our approach of clearly separating corpus creation from corpus analysis. Currently a number of related annotation tools are under development (e.g. Elan (Brugman and Wittenburg, 2001), AGTK (Bird et al., 2001), (Bird and Liberman, 1999), Anvil (Kipp, 2001), Exmaralada (Schmidt, 2001)), each of them designed for a specific target audience. Most of the tools are using Java as an implementation base and encode the linguistic data in a comparable way as proposed here (XMLbased, using time spans to mark events, separating meta-data and content). As a result it becomes relativly simple to convert/generate TASX-annotated corpora into/from these formats. 2.3 Transcoding tools The development of tools for the TASXenvironment is based on the concept that a reimplementation of functionalities already available in other language and speech processing software is not necessary. Establ</context>
</contexts>
<marker>Schmidt, 2001</marker>
<rawString>T. Schmidt. 2001. Gesprachstranskription auf dem Computer - das System EXMARaLDA. Gesprdchsforschung, http://www. gespraechsforschung-ozs. de, 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W N Venables</author>
<author>B D Ripley</author>
</authors>
<title>Modern Applied Statistics with S-Plus. Third Edition.</title>
<date>1999</date>
<pages>0--387</pages>
<publisher>Springer. ISBN</publisher>
<contexts>
<context position="14201" citStr="Venables and Ripley, 1999" startWordPosition="2290" endWordPosition="2293">nt the statistical analysis in XSL-T and Java. Indeed, a number of smaller programs have been realized in this technique. Unfortuneatly it quickly became evident, that XSL-T is not suited to perform such calculations on larger sets of data. It lacks high precision arithmetic functions and consumes to much memory. When using external Java functions, a large number of data conversions have to take place. Also the resulting code is very hard to read and debug. Instead we have chosen to use the R system, an open source implementation of the S-Plus statistics language (Ihaka and Gentleman, 1996), (Venables and Ripley, 1999). R implements all major statistical tests and calculations and is equipped with a large number of high level graphic routines to generate visually informative presentations of the results. Even more important it includes efficient input/output routines to load and save semistructured data (either XML-annotated or plain ascii text). Corpus-Engine Information-Pool URL / CGI / SERVLET EMBEDDED SQL HTML / XML / PDF GIF / WAV / SVG stere Activates oras rn..v-acII xv� ResultSet SQL (JDBC) Comma separated list into large number of different formats, making it possible to integrate TASX-aware compone</context>
</contexts>
<marker>Venables, Ripley, 1999</marker>
<rawString>W. N. Venables and B. D. Ripley. 1999. Modern Applied Statistics with S-Plus. Third Edition. Springer. ISBN 0-387-98825-4.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>