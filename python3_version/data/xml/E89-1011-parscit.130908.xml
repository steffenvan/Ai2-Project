<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000217">
<title confidence="0.850663">
THE ORGANIZATION OF THE ROSETTA GRAMMARS
</title>
<author confidence="0.894072">
Jan Odijk
</author>
<affiliation confidence="0.443291">
Philips Research Laboratories, P.O. Box 80.000
5600 JA Eindhoven, The Netherlands
</affiliation>
<sectionHeader confidence="0.72136" genericHeader="abstract">
ABSTRACT
</sectionHeader>
<bodyText confidence="0.99993525">
In this paper the organization of the gram-
mars in the Rosetta machine translation system
is described and it is shown how this organization
makes it possible to translate between words of dif-
ferent syntactic categories in a systematic way. It
is also shown how the organization chosen makes it
possible to translate &apos;small clauses&apos; into full clauses
and vice versa. The central concept worked out
here in some detail is the concept of &apos;partial iso-
morphy&apos; between subgrammars. The system as de-
scribed here has been implemented and is currently
being tested.
</bodyText>
<sectionHeader confidence="0.995012" genericHeader="keywords">
1 ROSETTA
</sectionHeader>
<bodyText confidence="0.998479270833333">
In this section I will mention some essential prop-
erties of the Rosetta machine translation system.
For more extensive descriptions of this system I
refer to Landsbergen(1987), Appelo &amp; Landsber-
gen(1986), Appelo, Fellinger &amp; Landsbergen(1987)
and Leermakers &amp; Rous(1986).
The Rosetta machine translation system is an
interlingual machine translation system based on
Montague Grammar and developed at Philips Re-
search Laboratories in Eindhoven for Dutch, En-
glish and Spanish. The grammars used in Rosetta
are computational variants of Montague Grammar
and are called M-grammars.
Rules in M-grammars, called M-rules, operate
on syntactic surface trees. If a certain string str is
associated with a syntactic tree of category C the
notation C(str) will be used.
An M-grammar in Rosetta is subdivided into a
number of subgrammars. Each subgrammar is a
rule package and is defined by specifying a head
(the category of a designated argument from the
import for the subgrammar), export (the categories
of the syntactic trees yielded by the subgrammar)
and a control expression that indicates in whict
order M-rules must be applied.
In Rosetta31 a distinction is made between
meaningful M-rules, called rules (that correspond
to a meaning operation), and meaningless rules,
called transformations (that do not correspond tc
a meaning operation).
M-grammars are reversible. Because of this fact
the translation relation between two sentences cat
be illustrated by showing their derivations in gen.
eration. The example derivations below will 13(
restricted to generation only.
Within the Rosetta system the grammars of th(
relevant languages are attuned to one another
in such a way that two sentences that are eacl
other&apos;s translation can be derived starting fron
corresponding basic expressions by applying corre.
sponding rules in the same way for both sentences
&apos;Corresponding&apos; here means: &apos;corresponding to tho
same meaning operation or basic meaning&apos;, and ii
holds of meaningful M-rules only.
M-grammars attuned in this way are called iso
morphic grammars, and therefore the method o
translation used is called the isomorphic gramma
approach to machine translation.
</bodyText>
<sectionHeader confidence="0.9997365" genericHeader="introduction">
2 CATEGORIAL
MISMATCHES
</sectionHeader>
<bodyText confidence="0.994991532258064">
In order to derive simple sentences e.g. Ziet hij di
man? one could design a grammar of Dutch that
starting with a basic verb (zie) applies rules to de
rive the sentence mentioned. One could have rule:
combining a basic verb with arguments that it al
lows or requires (hij, de man) in a sentence, rule:
that determine the tense of this sentence (presen
tense) and rules that determine &apos;mood&apos; and real
IThe paper deals with the grammars in the third versioi
of the Rosetta system, Rosetta3.
- 80 -
ize the sentence accordingly ( in this case yes-no-
question, main clause, realized by the order verb-
subject-object), etc..
In order to derive the English sentence Does he
see the man? as a translation of this Dutch sen-
tence it would be required to design a grammar
of English isomorphic to the grammar of Dutch
sketched above. There must be a rule combining a
verb (see) with its arguments (he, the man). There
must be rules determining tense and aspect (simple
present tense in the example sentence), and there
must be rules that determine &apos;mood&apos; and realize
the sentence accordingly (yes-no- question, main
clause, realized by introducing the auxiliary verb
do and the order do-subject-verb-object), etc..
In this simple example the syntactic categories of
the Dutch word zien and its translation into En-
glish see are the same. For these cases isomor-
phic grammars can be developed rather straight-
forwardly.
However, machine translation systems must be
able not only to translate between words of the
same category, but also to translate between words
of different syntactic categories. Some examples
where a translation between words of different cat-
egories is required or desirable are given in the fol-
lowing table:
hij zweint graag (Adv)
he likes to swim (Verb)
hij is toe vallig ziek (Adv)
he happens to be ill (Verb)
het mist (Verb)
it is foggy (Adj)
hij schaamt zich ervoor (Verb)
He is ashamed of it (Adj)
hij is mij 3 gulden schuldig (Adj)
He owes me 3 guilders (Verb)
hij is in A&apos;dani woonachtig (Adj)
He resides in Amsterdam (Verb)
Het is voldoende (Adj)
It suffices (Verb)
The Rosetta grammars must be able to deal with
such cases in a systematic way.
It must also be possible to translate &apos;small
clauses&apos; into full clauses (finite or infinite) and vice
versa. &apos;Small Clauses&apos; are propositional units in
which a subject-predicate relationship is expressed
and which are not marked for tense and aspect (cf.
Stowell (1981)). Some examples of full clauses and
their corresponding &apos;small clauses&apos; are given in the
following table:
</bodyText>
<equation confidence="0.898945125">
&apos;Full Clauses&apos;
Verb He killed a man
Mi He is intelligent
Prep He is against the deal
Adv He is here
Noun He is a fool
&apos;Small Clauses&apos;
Verb I had the man killed
</equation>
<bodyText confidence="0.991488052631579">
Adj I consider him intelligent
Prep We got him against the deal
Adv We got him here
Noun They consider him a fool
Small clauses can occur only as complements
within a clause. The fact that they are not marked
for tense and aspect is reflected in the absence of
auxiliary and copular verbs. If the grammar al-
lows for translation of clauses into small clauses
and vice-versa, then it becomes possible to derive
e.g. he seems ill and hij schijnt ziek te zijn (lit.
he seems to be ill as translations of each other. It
is sometimes required to be able to translate small
clauses into full clauses in some cases. The En-
glish sentence he seems ill cannot be translated
into Dutch *hij schijnt ziek, which is ungrammat-
ical, but must be translated into hij schijnt ziek te
zijn ( he seems to be ill) or into het schijnt dat hij
ziek is (it seems that he is ill).
</bodyText>
<sectionHeader confidence="0.9995245" genericHeader="method">
3 GRAMMAR ORGANI-
ZATION
</sectionHeader>
<bodyText confidence="0.934491229508197">
The global organization of the grammars (leaving
transformations out of consideration) is the same
for all languages, as is required by the isomorphic
method.
The grammars are subdivided into five projec-
tion subgrammars2, one for each major category
(Verb, Noun, Prep, Adj, Adv).3
Each of these projection subgrammars consists
of a number of subgrammars. The partitioning of
projection subgrammars into subgrammars is mo-
tivated by the fact that it must be possible to use
the output of each subgrammar as import to sub-
grammars of other projection subgrammars.
A schematic representation of the partitioning
of a projection subgrammar into subgrammars is
2These are called subgrammars in Appelo, Fellinger
Landsbergen(1987)
3Apart from these subgrammars there is also a projection
subgrammar to derive simple NPs, which is not partially
isomorphic to the other projection subgrammars.
- 81 -
given in figure 1, where X is a variable over the
major syntactic categories. A projection subgram-
mar is a set of subgrammars that define a projec-
tion for a given category X. A projection of some
category X is a syntactic structure headed by X.
Each projection subgrammar is bifurcated as in-
dicated in figure 1. If the rules and transforma-
tions in the XPPtoCLAUSE and CLAUSEtoSEN-
TENCE subgrammars are applied a full clause is
derived. If the rules and transformations of the
XPPtoXPFORMULA (XPPtoXPF) and XPFOR-
MULAtoXPP (XPFtoXPP) are applied a &apos;small
clause&apos; is derived.
The projection subgrammars are partially iso-
morphic to one another, which makes it possible
to translate a subset of constructions from one
projection subgrammar into constructions from
some other projection subgrammar. Furthermore
the XPPtoXPF subgrammars are partially isomor-
phic to the XPPtoCLAUSE subgrammars, and
the XPFtoXPP subgrammars are partially isomor-
phic to the CLAUSEtoSENTENCE subgrammars.
This makes it possible to translate a subset of full
clauses into &apos;small clauses&apos;.
The subgrammars are partially isomorphic to
one another instead of fully isomorphic, because
for certain full clauses no corresponding small
clauses exist (e.g. there is no &apos;small clause&apos; cor-
responding to the full clause Is he ill?).
BX
x
derivation
XPP
formation
XPP
to
XPF
XPF
to
XPP
</bodyText>
<figureCaption confidence="0.925488666666667">
Figure 1: The global organization of the Rosetta
projection subgrammars. X is a variable ranging
over the major syntactic categories
</figureCaption>
<bodyText confidence="0.999681489795919">
The subgrammars indicated in figure 1 will be
discussed in more detail now.
X-Derivation subgrammar deals with deriva-
tion and composition
XPPformation In this subgrammar the argu.
ment structure and the syntactic realization
of arguments (whether they are subject, ob.
ject, prepositional object, etc.) is accounted
for. Voice (active, passive) is determined in
this subgrammar.
XPPtoCLAUSE When this subgrammar is ap.
plied a full clause will be derived. In the sub-
grammar propositional complements and ad.
verbials are introduced, tense and aspect ie
determined and auxiliaries are introduced ac.
cordingly. There are several transformation:
in this subgrammar to deal with the propel
incorporation of propositional units into the
structure, e.g. transformations dealing witli
control phenomena, and transformations deal.
ing with the proper positioning of verbs (es.
pecially in Dutch). &apos;Hidden&apos; arguments, e.g
nonovert by-phrases in passives, are dealt witt
here.
XPPtoXPF When this subgrammar is applied t
&apos;small clause&apos; will be derived. The XPPtoXPF
subgrammars are partially isomorphic to the
XPPtoCLAUSE subgrammars, hence they
contain similar corresponding rules. They
contain rules introducing propositional corn.
plements, rules determining tense and aspecl
(which is considered to be present thong&apos;
dependent upon superordinate clauses) anc
rules dealing with hidden arguments.
CLAUSEtoSENTENCE In this subgrammal
nonpropositional arguments are introduce
and scope of quantificational expressions is ac•
counted for. Furthermore the &apos;mood&apos; of a sen-
tence is determined, i.e. it is decided whethei
it is going to be a declarative, interrogative
relative etc. clause.
XPFtoXPP This subgrammar is partially iso.
morphic to the CLAUSEtoSENTENCE sub.
grammars. It contains rules to introduce non.
propositional arguments and to account foi
scope. There are &apos;mood&apos; rules determininE
whether the XPP is &apos;closed&apos; (i.e. there are nc
free variables left in the structure), or &apos;open&apos;
(i.e. the subject variable is free).
</bodyText>
<figure confidence="0.931872714285714">
XPP
to
CLAUSE
CLAUSE
to
SENTENCE
- 82 -
</figure>
<sectionHeader confidence="0.996022" genericHeader="method">
4 ILLUSTRATIONS
</sectionHeader>
<bodyText confidence="0.999973558823529">
The global organization of the grammar will be
illustrated here by showing the derivation pro-
cesses of certain examples involving a categorial
mismatch and of some examples of translations
from &apos;small clauses&apos; into full clauses or vice versa. I
repeat that only the generative part of the deriva-
tion need be demonstrated given the reversibility
of the grammars. Furthermore only the correct
derivation paths through the grammar will be il-
lustrated, though in reality many false paths, i.e.
paths through the grammar that do not lead to an
actual sentence, are chosen by the grammar.
Since M-grammars are reversible it possible to
&apos;translate&apos; from e.g. Dutch into Dutch. In this way
Rosetta functions as a paraphrase generator. Be-
cause of this, the partial isomorphy between two
projection subgrammars can (and will) be illus-
trated by showing the parallel derivation of two
paraphrases in generation.
In subsection 4.1 the derivation of hij schaamt
zich ervoor and he is ashamed of it will be illus-
trated.
In subsection 4.2 the derivation of I find him
intelligent and I find that he is intelligent will be
illustrated.
In subsection 4.3 the derivation of he seems in-
telligent, he seems to be intelligent and it seems
that he is intelligent as paraphrases of one another
will be illustrated.
In subsection 4.4 the derivation of de op hear
verliefde man and de man die op haar verliefd is
as paraphrases of one another will be illustrated.
In subsection 4.5 the derivation of hij zwemt
graag and he likes to swim will be illustrated.
</bodyText>
<subsectionHeader confidence="0.997693">
4.1 Adjective-Verb
</subsectionHeader>
<bodyText confidence="0.999248830188679">
The derivations of hij schaamt zich ervoor (lit, he
ashamed himself therefor) and its translation he is
ashamed of it run as follows. The verb schamen
is a two place verb so that it can be combined
with two variables, xi and z2, in the VPPforma-
tion subgrammar yielding VPP(xi x2 schaam). In
the English grammar, the adjective ashamed is also
combined with two variables in the ADJPPfor-
mation subgrammar, yielding ADJPP(xi ashamed
x2). The Dutch verb schamen must realize its sec-
ond argument as a prepositional object with the
preposition voor. The English adjective ashamed
must realize its second argument as a prepositional
object as well, though headed by the preposition of.
Pattern transformations are applied to yield this
effect: VPP(xi voor x2 schaam) and ADJPF(zi
ashamed of x2).
In the VPPformation subgrammar a Voice-rule
applies determining that the structure is in active
voice. In the ADJPPformation subgrammar a cor-
responding rule applies which has no visible effects.
In Dutch a transformation spelling out a reflex-
ive pronoun must apply, since the verb schamen
is a so-called inherently reflexive verb. This yields
VPP(xi zich voor z2 schaam). Since spelling out
these reflexive pronouns is achieved by transfor-
mations, no corresponding M-rule need apply in
English.
These structures are both input to the XPPto-
CLAUSE subgrammar where they are turned into
clauses. In Dutch this yields CLAUSE(xi zich voor
x,2 schaam). In English the copula be is introduced,
yielding CLAUSE(xt be ashamed of x2). Tense and
aspect rules are applied in both cases, putting the
structures in present tense, yielding CLAUSE(xi
zich voor x2 schaamt) and CLAUSE(zi is ashamed
of x2).
Substitution rules substitute the NPs het and
it respectively for the variables x2 and the NPs
hij and he respectively for the variables xi. This
yields in English CLAUSE(he is ashamed of it) and
in Dutch CLAUSE(hij zich voor het schaamt). An
obligatory transformation turns voor het in Dutch
into ervoor.
Mood rules are applied in Dutch and in En-
glish. The clauses are turned into declarative main
clauses. In English this yields SENTENCE(he
is ashamed of it) and in Dutch this yields SEN-
TENCE(hij zich ervoor schaamt). Application of
the transformation putting the finite verb in &apos;sec-
ond&apos; position and application of an obligatory topi-
calization transformation in Dutch yield the actual
sentence Htj schaamt zich ervoor.
</bodyText>
<subsectionHeader confidence="0.888292">
4.2 Adjective-declarative clause
with main verb
</subsectionHeader>
<bodyText confidence="0.991832341463415">
The parallel derivations of I find him intelligent
and I find that he is intelligent run as follows.
In the ADJPPformation subgrammar the adjective
intelligent is combined with a variable xi yielding
ADJPP(xi intelligent) This ADJPP can be turned
either into a clause yielding CLAUSE(xi be intel-
ligent) (in the XPPtoCILAUSE subgrammar) or it
can continue as an adjectival construction (in the
ADJPPtoADJPF subgrammar). Tense and As-
pect rules determine that the tense of this con-
struction is dependent on the tense of a superor-
dinate construction yet to be formed. A substitu-
- 83 -
tion rule substitutes the NP containing he for xi
yielding ADJPF( he intelligent) and CLAUSE(he
is/was intelligent) respectively. Finally Mood rules
determine the way the clause and the ADJPF
are realized. The mood rule forming subordi-
nate declarative clauses is mapped onto the mood
rule forming &apos;closed&apos; ADJPPs (CADJPP). Apply-
ing these mood rules yields SENTENCE(that he
is/was intelligent) and CADJPP(he intelligent).
These results can be used later in the derivation
as arguments to the verb find.
To derive the rest of the structures the verb find
is combined with two variables (x2, x3 ) yield-
ing VPP(x2 find x3). The substructures built
earlier can be substituted for x3 yielding VPP(
X2 find he intelligent) and VPP(x2 find that he
is/was intelligent) respectively. After turning
these VPPs into clauses and applying tense and as-
pect rules (putting the sentences in present tense)
the tense of the subordinate clause can be deter-
mined. This yields CLAUSE(x2 find he intelligent)
and CLAUSE(x2 find that he is intelligent). Ap-
plying a case-assignment transformation and sub-
stituting the NP(/) for x2 yields CLAUSE(&apos; find
him intelligent) and CLAUSE(&apos; find that he is in-
telligent) respectively. Applying a mood rule that
turns these clauses into declarative main clauses
yields the actual sentences.
</bodyText>
<subsectionHeader confidence="0.9871275">
4.3 Adjective-declarative clause
with copula
</subsectionHeader>
<bodyText confidence="0.998653">
The derivations of he seems intelligent, he seems
to be intelligent and it seems that he is intelli-
gent starts in the same way as in the preceding
section. A CADJPP(he intelligent) and a SEN-
TENCE(that he is/was intelligent) are generated.
In addition to the mood rule forming finite declar-
ative subordinate sentences a mood rule forming
&apos;closed&apos; infinite declarative subordinate sentences
containing to can be applied. This rule forms
the SENTENCE(he to be intelligent) out of the
CLAUSE(he be intelligent).
These results can be used as arguments to the
verb seem. In the VPPformation subgrammar a
VPP(seem x.2) is formed from the verb seem and
the variable x2. The SENTENCEs and the CAD-
JPP obtained earlier are substituted for the vari-
able x2. This yields the structures VPP(seem he
intelligent), VPP(seem that he is/was intelligent)
and VPP(seem he to be intelligent) respectively.
A transformation turns the subject of embedded
infinitival complements of verbs such as seem into
the subject of seem, and the NP(it) is inserted as
a subject of the verb seem if it has a finite corn-
plement. After determining tense and aspect and
applying a subject-verb agreement transformation
this yields the structures CLAUSE(he seems in-
telligent), CLAUSE(it seems that he is intelligent)
and CLAUSE(he seems to be intelligent) respec-
tively. Applying the mood rule forming declarative
main clauses yields the actual sentences.
In the grammar of Dutch parallel derivations can
be made. The CADJPP(hij intelligent) (cf. he in-
telligent) and the SENTENCEs dat hij intelligent
is/was and hij intelligent te zijn (cf. that he is/was
intelligent and he to be intelligent resp.) can be de-
rived.
Some of these results can be used as arguments
to the verb schijnen &apos;seem&apos;. In the VPPforma-
tion subgrammar the verb schijnen is combined
with the variable x2 into a VPP(x2 schijn). The
SENTENCEs obtained earlier can be substituted
for this variable, but the CADJPP(hij intelligent)
cannot, because the Dutch verb schijnen does not
take CADJPPs as a complement.
The derivation continues with the two results
VPP(dat hij is/was intelligent schijn) and VPP(hij
intelligent te zijn schijn). Application of several
transformations to deal adequately with such com-
plements in Dutch (Verb-raising and extraposition
(in the sense of Evers(1975)), subject-to-subject-
raising and some others) and application of tense
and aspect rules yields CLAUSE(het schijnt dat hij
intelligent is) and CLAUSE(h2j intelligent schijnt
te zijn) respectively.
Application of mood rules forming declarative
main clauses and some obligatory transformations
in Dutch yields the actual sentences Het schijnt
dat hij intelligent is and Hij schijnt intelligent te
zijn as translations of the English sentences derived
earlier.
</bodyText>
<subsectionHeader confidence="0.997436">
4.4 Adjective-relative clause
</subsectionHeader>
<bodyText confidence="0.992756906976744">
The derivations of (de) op haar verliefde (man)
(the man in love with her) and (de man) die op
haar verliefd is (the man that is in love with her)
runs as follows.
The adjective verliefd &apos;in love&apos; is a two-place
adjective that is combined with two variables xi
and x2 in the ADJPPforma,tion subgrammar. This
yields a structure of the form ADJPP(xi verliefd
x2). The adjective verliefd must realize its second
argument (x2) as a prepositional object that can
occur in front of the adjective. Pattern transfor-
mations introduce the preposition required, yield-
ing ADJPP(xi op x2 verliefd ).
- 84 -
This ADJPP can be turned into a clause, or it
can be turned into an adjectival phrase. The XP-
PROPtoOLAUSE subgrammar changes the struc-
ture mentioned in the following way: CLAUSE(xi
op x2 verliefd zijn), where the top category has
been turned into CLAUSE and the copula zijn `be&apos;
has been introduced. To form an adjectival phrase
the ADJPP is input to the XPPtoXPF subgram-
mar, yielding ADJPF(zi op x2 verliefd). In both
subgrammars tense and aspect rules apply.
In the CLAUSEtoSENTENCE subgrammar a
transformation is applicable that moves the sub-
ject variable xi into a position where normally rel-
ative pronouns would appear. In this particular
structure this has no effects on the left-right order,
but the relation that xi bears is changed.
In the CLAUSEtoSENTENCE subgrammar and
in the ADJPFtoADJPP subgrammar the NP(zij)
&apos;she&apos; is substituted for variable x2 and the appro-
priate Case form (accusative) is assigned to it.
This yields CLAUSE(zi op haar verliefd is/was)
and ADJPP(xi op haar verliefd).
Finally Mood rules turn the ADJPP into an
&apos;open&apos; ADJPP (OADJPP) yielding OADJPP(zi
op haar verliefd), and they turn the CLAUSE into
a relative subordinate clause: SENTENCE(zi op
haar verliefd is). These structures can be used by
rules in the NP-subgrammar that introduce these
structures as modifiers and bind variable xi.
</bodyText>
<subsectionHeader confidence="0.990165">
4.5 Graag-like
</subsectionHeader>
<bodyText confidence="0.999272833333333">
In the Dutch sentence hij zwemt graag the adverb
graag appears. This adverb must be mapped onto
the English verb like in the translation he likes to
swim.
It is assumed that the Dutch adverb graag is a
two place-function. This is required in Rosetta, be-
cause its translation like is a two-place function4.
However, apart from being required in Rosetta, it
is also plausible for independent reasons that graag
is a two-place function: the adverb graag imposes
selectional restrictions upon the subject of the sen-
tence it appears in (cf. ?het regent graag or ?de
steen valt graag, which are as odd as their English
counterparts ?it likes to rain and The stone likes
to fall). If we assume that predicates impose selec-
tional restrictions only upon their arguments, then
it must be the case that the subject of the sentence
is an argument of graag, or that the argument of
</bodyText>
<footnote confidence="0.767615">
4This contrasts with the approach in the Eurotra frame-
work, where this requirement does not hold. See Arnold et.
al. (1988)
</footnote>
<bodyText confidence="0.999403944444445">
graag is coindexed with the subject of the sentence.
I will assume the latter.
Starting with the subordinate infinitival clause
in English, we combine the verb swim, which takes
one argument, with a variable xi as its subject,
yielding: VPP(xi swim) Similarly in the Dutch
grammar the translation of swim, zwem, is com-
bined with xi: VPP(zi zwem) In the VPPfor-
mation subgrammar the voice rule to form active
clauses is applied.
After the VPPformation subgrammar the
derivation continues in the XPPtoCLAUSE sub-
grammar. An M-rule to make the sentence infini-
tival is applied. Corresponding rules are applied in
the XPPtoCLAUSE subgrammar of Dutch.
In the CLAUSEtoSENTENCE subgrammar no
arguments are substituted. In English a rule is ap-
plied that makes the clause an infinitival subordi-
nate clause containing to and containing a free vari-
able in subject position which will later be subject
to control transformations. This yields a structure
of the form SENTENCE(zi to swim)
In Dutch a corresponding rule is applied that
makes the clause an infinitival subordinate clause
without te with a free variable in subject posi-
tion. This yields the following structure in Dutch:
SENTENCE(zi zwemmen) These structures will
be used later on.
In the VPPformation subgrammar of English
the two-place verb like is combined with two vari-
ables, xi and z2. This yields: VPP(xi like 52) The
voice rule to form active sentences is applied.
Correspondingly, in the ADVPPformation sub-
grammar of Dutch the adverb graag is combined
with two variables, xi and z2, and a voice rules is
applied. This yields: ADVPP(zi graag 52)
In the English subgrammar XPPtoCLAUSE the
sentential structure derived above is substituted
for the variable z2, yielding: VPP(zi like xi to
swim])
A control transformation deletes the second oc-
currence of xi. Tense and aspect rules apply which
turn the structure into a finite clause in present
tense.
In the Dutch subgrammar XPPtoOLAUSE the
sentential structure derived above is substituted
for the variable z2 by a special rule that takes care
of substitution of sentential complements into AD-
VPPs. This special rule deletes the ADVPP node
and replaces it by a VPP node, turns the ADVP
into a modifier inside this VPP, makes the VP of
SENT the VP of this VPP, deletes the variable xi
inside SENT and un-does the morphological effects
of tense rules. This yields the structure: VPP(zi
</bodyText>
<equation confidence="0.5153755">
- 85 -
AD VP(graag) zwem)
</equation>
<bodyText confidence="0.99957525">
These structures continue their normal deriva-
tion. Tense and aspect rules apply, the NP ar-
gument hij (he) is substituted for zi and the sen-
tence is made into a declarative main clause, yield-
ing in English: SENTENCE(he likes to swim) and
in Dutch, after application of the transformation
of &apos;Verb second&apos; and an obligatory topicalization
transformation: SENTENCE(hij zwemt graag)
</bodyText>
<sectionHeader confidence="0.999363" genericHeader="conclusions">
5 CONCLUSION
</sectionHeader>
<bodyText confidence="0.9999137">
It has been shown that the concept of partial iso-
morphy between subgrammars makes it possible to
translate between words of different syntactic cat-
egories and between &apos;small clauses&apos; and full clauses
in a systematic way. Furthermore, it has been
shown that one of the most difficult cases of trans-
lation between words of different categories, viz.
the graag/ like translation problem, can be reduced
to having only one special rule, given partial iso-
morphy between subgrammars.
</bodyText>
<sectionHeader confidence="0.998149" genericHeader="acknowledgments">
ACKNOWLEDGEMENTS
</sectionHeader>
<bodyText confidence="0.9993842">
This paper is based on joint work being done in the
Rosetta machine translation project. I would like
to thank Lisette Appelo, Jan Landsbergen, Mar-
greet Sanders and Andre Schenk for many valuable
comments on earlier drafts of this paper.
</bodyText>
<sectionHeader confidence="0.999696" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.985060621621622">
Appelo, L. , C. Fellinger and J. Landsber-
gen (1987), `Subgrammars, Rule Classes and
Control in the Rosetta Translation System&apos;,
Philips Research M.S. 14.131, to appear in:
Proceedings of 3rd Conference ACL, European
Chapter.
Appelo, L. and J. Landsbergen (1986), &apos;The Ma-
chine Translation Project Rosetta&apos;, Philips
Research M.S. 13.801, In: Proceedings First
International Conference on the State of the
Art in Machine Translation, Saarbriicken, pp.
34-51.
Arnold, D., S. Krauwer, L. des Tombe &amp; L. Sadler
(1988), &amp;quot;Relaxed&apos; Compositionality in Ma-
chine Translation&apos;, in: Proceedings of the Sec-
ond International Conference on Theoretical
and Methodological Issues in Machine Trans-
lation of Natural Languages, Carnegie Mellon
University, Center for Machine Translation,
Pittsburgh, Pennsylvania.
Evers, A. (1975), The Transformational Cycle
in Dutch and German, diss. University of
Utrecht.
Landsbergen, J. (1987), &apos;Isomorphic grammars
and their use in the Rosetta Translation Sys-
tem&apos;, Philips Research M.S. 12.950, Paper
presented at the Tutorial on Machine Trans-
lation, Lugano, 1984, in: M. King (ed.), Ma-
chine Translation, the State of the Art, Edin-
burg University Press.
Leermakers, R. and J. Rous (1986), &apos;The Trans-
lation Method of Rosetta&apos;, Philips Research
M.S. 13.701, In: Computers and Translation,
Vol 1, number 3, pp. 169-183.
Stowell, T. (1981), Origins of Phrase Structure,
Ph. D. dissertation, MIT.
- 86-
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.007848">
<title confidence="0.996385">THE ORGANIZATION OF THE ROSETTA GRAMMARS</title>
<author confidence="0.999895">Jan Odijk</author>
<address confidence="0.9196215">Philips Research Laboratories, P.O. Box 80.000 5600 JA Eindhoven, The Netherlands</address>
<abstract confidence="0.989977615763547">In this paper the organization of the grammars in the Rosetta machine translation system is described and it is shown how this organization makes it possible to translate between words of different syntactic categories in a systematic way. It is also shown how the organization chosen makes it possible to translate &apos;small clauses&apos; into full clauses and vice versa. The central concept worked out here in some detail is the concept of &apos;partial isomorphy&apos; between subgrammars. The system as described here has been implemented and is currently being tested. 1 ROSETTA In this section I will mention some essential properties of the Rosetta machine translation system. For more extensive descriptions of this system I refer to Landsbergen(1987), Appelo &amp; Landsbergen(1986), Appelo, Fellinger &amp; Landsbergen(1987) and Leermakers &amp; Rous(1986). The Rosetta machine translation system is an interlingual machine translation system based on Montague Grammar and developed at Philips Research Laboratories in Eindhoven for Dutch, English and Spanish. The grammars used in Rosetta are computational variants of Montague Grammar and are called M-grammars. Rules in M-grammars, called M-rules, operate on syntactic surface trees. If a certain string str is with a syntactic tree of category be used. An M-grammar in Rosetta is subdivided into a number of subgrammars. Each subgrammar is a package and is defined by specifying a (the category of a designated argument from the for the subgrammar), categories of the syntactic trees yielded by the subgrammar) a expression indicates in whict order M-rules must be applied. a distinction is made between M-rules, called correspond to a meaning operation), and meaningless rules, do not correspond tc a meaning operation). M-grammars are reversible. Because of this fact the translation relation between two sentences cat be illustrated by showing their derivations in gen. eration. The example derivations below will 13( restricted to generation only. Within the Rosetta system the grammars of th( relevant languages are attuned to one another in such a way that two sentences that are eacl other&apos;s translation can be derived starting fron corresponding basic expressions by applying corre. sponding rules in the same way for both sentences &apos;Corresponding&apos; here means: &apos;corresponding to tho same meaning operation or basic meaning&apos;, and ii holds of meaningful M-rules only. attuned in this way are called grammars, therefore the method o used is called the gramma approach to machine translation. 2 CATEGORIAL MISMATCHES order to derive simple sentences e.g. hij di man? one could design a grammar of Dutch that with a basic verb rules to de rive the sentence mentioned. One could have rule: combining a basic verb with arguments that it al or requires de man) in sentence, rule: determine the tense of this sentence rules that determine &apos;mood&apos; and real IThe paper deals with the grammars in the third versioi of the Rosetta system, Rosetta3. - 80 ize the sentence accordingly ( in this case yes-noquestion, main clause, realized by the order verbsubject-object), etc.. order to derive the English sentence he the as a translation of this Dutch sentence it would be required to design a grammar of English isomorphic to the grammar of Dutch sketched above. There must be a rule combining a its arguments the There be rules determining tense and aspect tense the example sentence), and there must be rules that determine &apos;mood&apos; and realize the sentence accordingly (yes-noquestion, main clause, realized by introducing the auxiliary verb the order do-subject-verb-object), etc.. In this simple example the syntactic categories of Dutch word its translation into Enthe same. For these cases isomorphic grammars can be developed rather straightforwardly. However, machine translation systems must be able not only to translate between words of the same category, but also to translate between words of different syntactic categories. Some examples where a translation between words of different categories is required or desirable are given in the following table: zweint swim (Verb) is vallig (Adv) be ill (Verb) is ervoor (Verb) is it (Adj) is mij 3 gulden 3 guilders (Verb) is in A&apos;dani (Adj) Amsterdam (Verb) is The Rosetta grammars must be able to deal with such cases in a systematic way. It must also be possible to translate &apos;small clauses&apos; into full clauses (finite or infinite) and vice versa. &apos;Small Clauses&apos; are propositional units in which a subject-predicate relationship is expressed and which are not marked for tense and aspect (cf. Stowell (1981)). Some examples of full clauses and their corresponding &apos;small clauses&apos; are given in the following table: &apos;Full Clauses&apos; Verb He killed a man Mi He is intelligent Prep He is against the deal Adv He is here Noun He is a fool &apos;Small Clauses&apos; I had killed I consider intelligent against the deal him They consider him a Small clauses can occur only as complements within a clause. The fact that they are not marked for tense and aspect is reflected in the absence of auxiliary and copular verbs. If the grammar allows for translation of clauses into small clauses and vice-versa, then it becomes possible to derive seems ill schijnt ziek te zijn seems to be as translations of each other. It is sometimes required to be able to translate small clauses into full clauses in some cases. The Ensentence seems cannot be translated Dutch schijnt ziek, is ungrammatbut must be translated into schijnt ziek te he seems to be ill) into schijnt dat hij ziek is (it seems that he is ill). 3 GRAMMAR ORGANI- ZATION The global organization of the grammars (leaving transformations out of consideration) is the same for all languages, as is required by the isomorphic method. grammars are subdivided into projecfor each major category Noun, Prep, Adj, Each of these projection subgrammars consists of a number of subgrammars. The partitioning of projection subgrammars into subgrammars is motivated by the fact that it must be possible to use the output of each subgrammar as import to subgrammars of other projection subgrammars. A schematic representation of the partitioning of a projection subgrammar into subgrammars is are called subgrammars in Appelo, Fellinger Landsbergen(1987) from these subgrammars there is also a projection subgrammar to derive simple NPs, which is not partially isomorphic to the other projection subgrammars. - 81 given in figure 1, where X is a variable over the major syntactic categories. A projection subgrammar is a set of subgrammars that define a projection for a given category X. A projection of some category X is a syntactic structure headed by X. Each projection subgrammar is bifurcated as indicated in figure 1. If the rules and transformations in the XPPtoCLAUSE and CLAUSEtoSEN- TENCE subgrammars are applied a full clause is derived. If the rules and transformations of the XPPtoXPFORMULA (XPPtoXPF) and XPFOR- MULAtoXPP (XPFtoXPP) are applied a &apos;small clause&apos; is derived. The projection subgrammars are partially isomorphic to one another, which makes it possible to translate a subset of constructions from one projection subgrammar into constructions from some other projection subgrammar. Furthermore the XPPtoXPF subgrammars are partially isomorphic to the XPPtoCLAUSE subgrammars, and the XPFtoXPP subgrammars are partially isomorphic to the CLAUSEtoSENTENCE subgrammars. This makes it possible to translate a subset of full clauses into &apos;small clauses&apos;. The subgrammars are partially isomorphic to one another instead of fully isomorphic, because for certain full clauses no corresponding small clauses exist (e.g. there is no &apos;small clause&apos; corto the full clause he ill?). BX derivation XPP formation XPP to XPF XPF to XPP Figure 1: The global organization of the Rosetta subgrammars. a variable ranging over the major syntactic categories The subgrammars indicated in figure 1 will be discussed in more detail now. subgrammar with derivation and composition this subgrammar the argu. structure the syntactic realization of arguments (whether they are subject, ob. ject, prepositional object, etc.) is accounted for. Voice (active, passive) is determined in this subgrammar. this subgrammar is ap. plied a full clause will be derived. In the subgrammar propositional complements and ad. verbials are introduced, tense and aspect ie determined and auxiliaries are introduced ac. cordingly. There are several transformation: in this subgrammar to deal with the propel incorporation of propositional units into the structure, e.g. transformations dealing witli control phenomena, and transformations deal. ing with the proper positioning of verbs (es. pecially in Dutch). &apos;Hidden&apos; arguments, e.g nonovert by-phrases in passives, are dealt witt here. this subgrammar is applied t &apos;small clause&apos; will be derived. The XPPtoXPF subgrammars are partially isomorphic to the XPPtoCLAUSE subgrammars, hence they contain similar corresponding rules. They contain rules introducing propositional corn. plements, rules determining tense and aspecl (which is considered to be present thong&apos; upon superordinate clauses) rules dealing with hidden arguments. this subgrammal nonpropositional arguments are introduce and scope of quantificational expressions is ac• counted for. Furthermore the &apos;mood&apos; of a sentence is determined, i.e. it is decided whethei it is going to be a declarative, interrogative relative etc. clause. subgrammar is partially iso. morphic to the CLAUSEtoSENTENCE sub. grammars. It contains rules to introduce non. propositional arguments and to account foi scope. There are &apos;mood&apos; rules determininE whether the XPP is &apos;closed&apos; (i.e. there are nc free variables left in the structure), or &apos;open&apos; (i.e. the subject variable is free). XPP to CLAUSE CLAUSE to SENTENCE - 82 - 4 ILLUSTRATIONS The global organization of the grammar will be illustrated here by showing the derivation processes of certain examples involving a categorial mismatch and of some examples of translations from &apos;small clauses&apos; into full clauses or vice versa. I repeat that only the generative part of the derivation need be demonstrated given the reversibility of the grammars. Furthermore only the correct derivation paths through the grammar will be illustrated, though in reality many false paths, i.e. paths through the grammar that do not lead to an actual sentence, are chosen by the grammar. Since M-grammars are reversible it possible to &apos;translate&apos; from e.g. Dutch into Dutch. In this way Rosetta functions as a paraphrase generator. Because of this, the partial isomorphy between two projection subgrammars can (and will) be illustrated by showing the parallel derivation of two paraphrases in generation. subsection 4.1 the derivation of schaamt ervoor is ashamed of it be illustrated. subsection 4.2 the derivation of find him he is intelligent be illustrated. subsection 4.3 the derivation of seems inhe seems to be intelligent it he is intelligent paraphrases of one another will be illustrated. subsection 4.4 the derivation of op hear man de die op haar verliefd is as paraphrases of one another will be illustrated. subsection 4.5 the derivation of zwemt likes to swim be illustrated. derivations of schaamt zich ervoor himself therefor) its translation is of it as follows. The verb a place verb so that it can be combined two variables, and the VPPformasubgrammar yielding VPP(xi schaam). English grammar, the adjective also combined with two variables in the ADJPPforsubgrammar, yielding ashamed The Dutch verb realize its second argument as a prepositional object with the voor. The English adjective must realize its second argument as a prepositional as well, headed by the preposition Pattern transformations are applied to yield this voor schaam) ADJPF(zi of In the VPPformation subgrammar a Voice-rule applies determining that the structure is in active voice. In the ADJPPformation subgrammar a corresponding rule applies which has no visible effects. Dutch a transformation spelling out a reflexpronoun must apply, since the verb so-called inherently reflexive verb. This yields zich voor schaam). spelling out these reflexive pronouns is achieved by transformations, no corresponding M-rule need apply in English. These structures are both input to the XPPto- CLAUSE subgrammar where they are turned into In Dutch this yields zich voor schaam). English the copula introduced, be ashamed of and aspect rules are applied in both cases, putting the structures in present tense, yielding CLAUSE(xi voor schaamt) is ashamed rules substitute the NPs respectively for the variables and the NPs for the variables This in English CLAUSE(he ashamed of it) Dutch CLAUSE(hij voor het schaamt). transformation turns het Dutch Mood rules are applied in Dutch and in English. The clauses are turned into declarative main clauses. In English this yields SENTENCE(he ashamed of it) in Dutch this yields SEN- TENCE(hij zich ervoor schaamt). Application of the transformation putting the finite verb in &apos;second&apos; position and application of an obligatory topicalization transformation in Dutch yield the actual schaamt zich ervoor. clause with main verb parallel derivations of find him intelligent find that he is intelligent as follows. In the ADJPPformation subgrammar the adjective combined with a variable xi yielding ADJPP can be turned into a clause yielding CLAUSE(xi intelthe XPPtoCILAUSE subgrammar) or it can continue as an adjectival construction (in the ADJPPtoADJPF subgrammar). Tense and Aspect rules determine that the tense of this construction is dependent on the tense of a superorconstruction yet to be formed. substitu- - 83 rule substitutes the NP containing yielding ADJPF( he intelligent) and CLAUSE(he intelligent) Finally Mood rules determine the way the clause and the ADJPF are realized. The mood rule forming subordinate declarative clauses is mapped onto the mood rule forming &apos;closed&apos; ADJPPs (CADJPP). Applythese mood rules yields SENTENCE(that intelligent) CADJPP(he These results can be used later in the derivation arguments to the verb derive the rest of the structures the verb combined with two variables ) yieldfind The substructures built earlier can be substituted for x3 yielding VPP( he intelligent) find that he intelligent) After turning these VPPs into clauses and applying tense and aspect rules (putting the sentences in present tense) the tense of the subordinate clause can be deter- This yields find he intelligent) find that he is intelligent). Applying a case-assignment transformation and subthe NP(/) for yields CLAUSE(&apos; intelligent) CLAUSE(&apos; that he is in- Applying a mood rule that turns these clauses into declarative main clauses yields the actual sentences. clause with copula derivations of seems intelligent, he seems be intelligent it that he is intelliin the same way as in the preceding A CADJPP(he a SENis/was intelligent) are In addition to the mood rule forming finite declarative subordinate sentences a mood rule forming &apos;closed&apos; infinite declarative subordinate sentences be applied. This rule forms SENTENCE(he be intelligent) of the intelligent). These results can be used as arguments to the the VPPformation subgrammar a is formed from the verb the variable x2. The SENTENCEs and the CAD- JPP obtained earlier are substituted for the varix2. This yields the structures VPP(seem intelligent), VPP(seem that he is/was intelligent) he to be intelligent) A transformation turns the subject of embedded complements of verbs such as subject of the NP(it) is inserted as subject of the verb it has a finite cornplement. After determining tense and aspect and applying a subject-verb agreement transformation yields the structures CLAUSE(he inthat he is intelligent) CLAUSE(he to be intelligent) respectively. Applying the mood rule forming declarative main clauses yields the actual sentences. In the grammar of Dutch parallel derivations can made. The CADJPP(hij inthe SENTENCEs hij intelligent intelligent te zijn (cf. that he is/was to be intelligent can be derived. Some of these results can be used as arguments the verb &apos;seem&apos;. the VPPformasubgrammar the verb combined the variable into a VPP(x2 SENTENCEs obtained earlier can be substituted this variable, but the CADJPP(hij because the Dutch verb not take CADJPPs as a complement. The derivation continues with the two results is/was intelligent schijn) VPP(hij te zijn schijn). of several transformations to deal adequately with such complements in Dutch (Verb-raising and extraposition (in the sense of Evers(1975)), subject-to-subjectraising and some others) and application of tense aspect rules yields CLAUSE(het dat hij is) CLAUSE(h2j schijnt zijn) Application of mood rules forming declarative main clauses and some obligatory transformations Dutch yields the actual sentences schijnt hij intelligent is schijnt intelligent te translations of the English sentences derived earlier. clause derivations of op haar verliefde (man) man in love with her) man) die op verliefd is (the man that is with her) runs as follows. adjective &apos;in love&apos; a two-place adjective that is combined with two variables xi the ADJPPforma,tion subgrammar. This a structure of the form verliefd The verliefd realize its second argument (x2) as a prepositional object that can occur in front of the adjective. Pattern transformations introduce the preposition required, yieldop verliefd ). - 84 - This ADJPP can be turned into a clause, or it can be turned into an adjectival phrase. The XP- PROPtoOLAUSE subgrammar changes the strucmentioned in the following way: verliefd where the top category has turned into CLAUSE and the copula `be&apos; has been introduced. To form an adjectival phrase the ADJPP is input to the XPPtoXPF subgramyielding op verliefd). both subgrammars tense and aspect rules apply. In the CLAUSEtoSENTENCE subgrammar a transformation is applicable that moves the subvariable into a position where normally relative pronouns would appear. In this particular structure this has no effects on the left-right order, the relation that bears is changed. In the CLAUSEtoSENTENCE subgrammar and in the ADJPFtoADJPP subgrammar the NP(zij) substituted for variable and the appropriate Case form (accusative) is assigned to it. yields op haar verliefd is/was) op haar verliefd). Finally Mood rules turn the ADJPP into an &apos;open&apos; ADJPP (OADJPP) yielding OADJPP(zi haar verliefd), they turn the CLAUSE into relative subordinate clause: op verliefd is). structures can be used by rules in the NP-subgrammar that introduce these as modifiers and bind variable the Dutch sentence zwemt graag adverb This adverb must be mapped onto English verb the translation likes to swim. is assumed that the Dutch adverb is a two place-function. This is required in Rosetta, beits translation is two-place However, apart from being required in Rosetta, it also plausible for independent reasons that two-place function: the adverb selectional restrictions upon the subject of the senit appears in (cf. regent graag valt graag, are as odd as their English likes to rain stone likes fall). we assume that predicates impose selectional restrictions only upon their arguments, then it must be the case that the subject of the sentence an argument of that the argument of contrasts with the approach in the Eurotra framewhere this requirement does not hold. et. al. (1988) coindexed with the subject of the sentence. I will assume the latter. Starting with the subordinate infinitival clause in English, we combine the verb swim, which takes argument, with a variable as its subject, swim) Similarly in the Dutch the translation of is comwith zwem) In the VPPformation subgrammar the voice rule to form active clauses is applied. After the VPPformation subgrammar the derivation continues in the XPPtoCLAUSE subgrammar. An M-rule to make the sentence infinitival is applied. Corresponding rules are applied in the XPPtoCLAUSE subgrammar of Dutch. In the CLAUSEtoSENTENCE subgrammar no arguments are substituted. In English a rule is applied that makes the clause an infinitival subordiclause containing containing a free variable in subject position which will later be subject to control transformations. This yields a structure the form SENTENCE(zi In Dutch a corresponding rule is applied that makes the clause an infinitival subordinate clause a free variable in subject position. This yields the following structure in Dutch: zwemmen) structures will be used later on. In the VPPformation subgrammar of English two-place verb combined with two variand yields: like voice rule to form active sentences is applied. Correspondingly, in the ADVPPformation subof Dutch the adverb combined two variables, and a voice rules is This yields: graag In the English subgrammar XPPtoCLAUSE the sentential structure derived above is substituted the variable z2, yielding: like xi to swim]) A control transformation deletes the second occurrence of xi. Tense and aspect rules apply which turn the structure into a finite clause in present tense. In the Dutch subgrammar XPPtoOLAUSE the sentential structure derived above is substituted for the variable z2 by a special rule that takes care of substitution of sentential complements into AD- VPPs. This special rule deletes the ADVPP node and replaces it by a VPP node, turns the ADVP into a modifier inside this VPP, makes the VP of the VP of this VPP, deletes the variable inside SENT and un-does the morphological effects of tense rules. This yields the structure: VPP(zi - 85 - AD VP(graag) zwem) These structures continue their normal derivation. Tense and aspect rules apply, the NP ar- (he) substituted for and the sentence is made into a declarative main clause, yieldin English: SENTENCE(he to swim) in Dutch, after application of the transformation of &apos;Verb second&apos; and an obligatory topicalization SENTENCE(hij graag) 5 CONCLUSION It has been shown that the concept of partial isomorphy between subgrammars makes it possible to translate between words of different syntactic categories and between &apos;small clauses&apos; and full clauses in a systematic way. Furthermore, it has been shown that one of the most difficult cases of translation between words of different categories, viz. like problem, can be reduced to having only one special rule, given partial isomorphy between subgrammars. ACKNOWLEDGEMENTS This paper is based on joint work being done in the Rosetta machine translation project. I would like to thank Lisette Appelo, Jan Landsbergen, Margreet Sanders and Andre Schenk for many valuable comments on earlier drafts of this paper.</abstract>
<note confidence="0.934756">REFERENCES Appelo, L. , C. Fellinger and J. Landsbergen (1987), `Subgrammars, Rule Classes and Control in the Rosetta Translation System&apos;, Research M.S. 14.131, to appear of 3rd Conference ACL, Chapter. Appelo, L. and J. Landsbergen (1986), &apos;The Machine Translation Project Rosetta&apos;, Philips M.S. 13.801, In: First International Conference on the State of the in Machine Translation, pp. 34-51. Arnold, D., S. Krauwer, L. des Tombe &amp; L. Sadler (1988), &amp;quot;Relaxed&apos; Compositionality in Ma-</note>
<title confidence="0.686224">Translation&apos;, Proceedings of the Second International Conference on Theoretical</title>
<author confidence="0.730296">Methodological Issues in Machine Trans-</author>
<affiliation confidence="0.839155">of Natural Languages, Mellon University, Center for Machine Translation,</affiliation>
<address confidence="0.999606">Pittsburgh, Pennsylvania.</address>
<note confidence="0.916198588235294">A. (1975), Transformational Cycle Dutch and German, University of Utrecht. Landsbergen, J. (1987), &apos;Isomorphic grammars and their use in the Rosetta Translation System&apos;, Philips Research M.S. 12.950, Paper presented at the Tutorial on Machine Trans- Lugano, 1984, in: M. King (ed.), Ma- Translation, the State of the Art, Edinburg University Press. Leermakers, R. and J. Rous (1986), &apos;The Translation Method of Rosetta&apos;, Philips Research 13.701, In: and Translation, Vol 1, number 3, pp. 169-183. T. (1981), of Phrase Structure, Ph. D. dissertation, MIT. 86-</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C Fellinger</author>
<author>J Landsbergen</author>
</authors>
<title>Subgrammars, Rule Classes and Control in the Rosetta Translation System&apos;, Philips Research M.S. 14.131, to appear in:</title>
<date>1987</date>
<booktitle>Proceedings of 3rd Conference ACL, European Chapter.</booktitle>
<marker>Fellinger, Landsbergen, 1987</marker>
<rawString>Appelo, L. , C. Fellinger and J. Landsbergen (1987), `Subgrammars, Rule Classes and Control in the Rosetta Translation System&apos;, Philips Research M.S. 14.131, to appear in: Proceedings of 3rd Conference ACL, European Chapter.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Appelo</author>
<author>J Landsbergen</author>
</authors>
<title>The Machine Translation Project Rosetta&apos;, Philips Research M.S. 13.801, In:</title>
<date>1986</date>
<booktitle>Proceedings First International Conference on the State of the Art in Machine Translation, Saarbriicken,</booktitle>
<pages>34--51</pages>
<marker>Appelo, Landsbergen, 1986</marker>
<rawString>Appelo, L. and J. Landsbergen (1986), &apos;The Machine Translation Project Rosetta&apos;, Philips Research M.S. 13.801, In: Proceedings First International Conference on the State of the Art in Machine Translation, Saarbriicken, pp. 34-51.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Arnold</author>
<author>S Krauwer</author>
<author>L des Tombe</author>
<author>L Sadler</author>
</authors>
<title>Relaxed&apos; Compositionality in Machine Translation&apos;, in:</title>
<date>1988</date>
<booktitle>Proceedings of the Second International Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages,</booktitle>
<institution>Carnegie Mellon University, Center for Machine Translation,</institution>
<location>Pittsburgh, Pennsylvania.</location>
<marker>Arnold, Krauwer, Tombe, Sadler, 1988</marker>
<rawString>Arnold, D., S. Krauwer, L. des Tombe &amp; L. Sadler (1988), &amp;quot;Relaxed&apos; Compositionality in Machine Translation&apos;, in: Proceedings of the Second International Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages, Carnegie Mellon University, Center for Machine Translation, Pittsburgh, Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Evers</author>
</authors>
<title>The Transformational Cycle in Dutch and German,</title>
<date>1975</date>
<institution>University of Utrecht.</institution>
<location>diss.</location>
<marker>Evers, 1975</marker>
<rawString>Evers, A. (1975), The Transformational Cycle in Dutch and German, diss. University of Utrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Landsbergen</author>
</authors>
<title>Isomorphic grammars and their use in the Rosetta Translation System&apos;,</title>
<date>1987</date>
<booktitle>Philips Research M.S. 12.950, Paper presented at the Tutorial on Machine Translation,</booktitle>
<editor>in: M. King (ed.),</editor>
<publisher>University Press.</publisher>
<location>Lugano,</location>
<marker>Landsbergen, 1987</marker>
<rawString>Landsbergen, J. (1987), &apos;Isomorphic grammars and their use in the Rosetta Translation System&apos;, Philips Research M.S. 12.950, Paper presented at the Tutorial on Machine Translation, Lugano, 1984, in: M. King (ed.), Machine Translation, the State of the Art, Edinburg University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Leermakers</author>
<author>J Rous</author>
</authors>
<title>The Translation Method of Rosetta&apos;,</title>
<date>1986</date>
<journal>Philips Research M.S. 13.701, In: Computers and Translation,</journal>
<volume>1</volume>
<pages>169--183</pages>
<marker>Leermakers, Rous, 1986</marker>
<rawString>Leermakers, R. and J. Rous (1986), &apos;The Translation Method of Rosetta&apos;, Philips Research M.S. 13.701, In: Computers and Translation, Vol 1, number 3, pp. 169-183.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Stowell</author>
</authors>
<date>1981</date>
<journal>Origins of Phrase Structure, Ph. D. dissertation, MIT. -</journal>
<volume>86</volume>
<contexts>
<context position="5326" citStr="Stowell (1981)" startWordPosition="861" endWordPosition="862">rb) het mist (Verb) it is foggy (Adj) hij schaamt zich ervoor (Verb) He is ashamed of it (Adj) hij is mij 3 gulden schuldig (Adj) He owes me 3 guilders (Verb) hij is in A&apos;dani woonachtig (Adj) He resides in Amsterdam (Verb) Het is voldoende (Adj) It suffices (Verb) The Rosetta grammars must be able to deal with such cases in a systematic way. It must also be possible to translate &apos;small clauses&apos; into full clauses (finite or infinite) and vice versa. &apos;Small Clauses&apos; are propositional units in which a subject-predicate relationship is expressed and which are not marked for tense and aspect (cf. Stowell (1981)). Some examples of full clauses and their corresponding &apos;small clauses&apos; are given in the following table: &apos;Full Clauses&apos; Verb He killed a man Mi He is intelligent Prep He is against the deal Adv He is here Noun He is a fool &apos;Small Clauses&apos; Verb I had the man killed Adj I consider him intelligent Prep We got him against the deal Adv We got him here Noun They consider him a fool Small clauses can occur only as complements within a clause. The fact that they are not marked for tense and aspect is reflected in the absence of auxiliary and copular verbs. If the grammar allows for translation of cl</context>
</contexts>
<marker>Stowell, 1981</marker>
<rawString>Stowell, T. (1981), Origins of Phrase Structure, Ph. D. dissertation, MIT. - 86-</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>