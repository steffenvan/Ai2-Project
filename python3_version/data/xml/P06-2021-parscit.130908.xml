<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.010993">
<title confidence="0.9970125">
Using WordNet to Automatically Deduce Relations between Words in
Noun-Noun Compounds
</title>
<author confidence="0.982222">
Fintan J. Costello,
</author>
<affiliation confidence="0.9799885">
School of Computer Science,
University College Dublin,
</affiliation>
<address confidence="0.775423">
Dublin 6, Ireland.
</address>
<email confidence="0.990101">
fintan.costello@ucd.ie
</email>
<author confidence="0.996784">
Tony Veale,
</author>
<affiliation confidence="0.981234">
Department of Computer Science,
University College Dublin,
</affiliation>
<address confidence="0.776393">
Dublin 6, Ireland.
</address>
<email confidence="0.990625">
tony.veale@ucd.ie
</email>
<author confidence="0.999368">
Simon Dunne,
</author>
<affiliation confidence="0.993761">
Department of Computer Science,
University College Dublin, Dublin 6, Ireland.
</affiliation>
<email confidence="0.987847">
sdunne@inismor.ucd.ie
</email>
<sectionHeader confidence="0.99461" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.998309703703704">
We present an algorithm for automatically
disambiguating noun-noun compounds by
deducing the correct semantic relation be-
tween their constituent words. This algo-
rithm uses a corpus of 2,500 compounds
annotated with WordNet senses and cov-
ering 139 different semantic relations (we
make this corpus available online for re-
searchers interested in the semantics of
noun-noun compounds). The algorithm
takes as input the WordNet senses for the
nouns in a compound, finds all parent
senses (hypernyms) of those senses, and
searches the corpus for other compounds
containing any pair of those senses. The
relation with the highest proportional co-
occurrence with any sense pair is returned
as the correct relation for the compound.
This algorithm was tested using a ’leave-
one-out’ procedure on the corpus of com-
pounds. The algorithm identified the cor-
rect relations for compounds with high
precision: in 92% of cases where a re-
lation was found with a proportional co-
occurrence of 1.0, it was the correct re-
lation for the compound being disam-
biguated.
</bodyText>
<keyword confidence="0.495201">
Keywords: Noun-Noun Compounds, Conceputal
Combination, Word Relations, WordNet
</keyword>
<sectionHeader confidence="0.998427" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999938825">
Noun-noun compounds are short phrases made up
of two or more nouns. These compounds are
common in everyday language and are especially
frequent, and important, in technical documents
(Justeson &amp; Katz, 1995, report that such phrases
form the majority of technical content of scien-
tific and technical documents surveyed). Under-
standing these compounds requires the listener or
reader to infer the correct semantic relationship
between the words making up the compound, in-
ferring, for example, that the phrase ‘flu virus’
refers to a virus that causes flu, while ‘skin virus’
describes a virus that affects the skin, and marsh
virus a virus contracted in marshes. In this paper
we describe a novel algorithm for disambiguat-
ing noun-noun compounds by automatically de-
ducing the correct semantic relationship between
their constituent words.
Our approach to compound disambiguation
combines statistical and ontological information
about words and relations in compounds. On-
tological information is derived from WordNet
(Miller, 1995), a hierarchical machine readable
dictionary, which is introduced in Section 1. Sec-
tion 2 describes the construction of an annotated
corpus of 2,500 noun-noun compounds covering
139 different semantic relations, with each noun
and each relation annotated with its correct Word-
Net sense.1
Section 3 describes our algorithm for finding
the correct relation between nouns in a com-
pound, which makes use of this annotated cor-
pus. Our general approach is that the correct re-
lation between two words in a compound can be
deduced by finding other compounds containing
words from the same semantic categories as the
words in the compound to be disambiguated: if a
particular relation occurs frequently in those other
compounds, that relation is probably also the cor-
rect relation for the compound in question. Our al-
</bodyText>
<footnote confidence="0.998454">
1A file containing this corpus is available for download
from http://inismor.ucd.ie/∼fintanc/wordnet compounds
</footnote>
<page confidence="0.890439">
160
</page>
<note confidence="0.958361">
Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 160–167,
Sydney, July 2006. c�2006 Association for Computational Linguistics
</note>
<tableCaption confidence="0.998803">
Table 1: Thematic relations proposed by Gagn´e.
</tableCaption>
<bodyText confidence="0.904361487804878">
relation example
head causes modifier flu virus
modifier causes head college headache
head has modifier picture book
modifier has head lemon peel
head makes modifier milk cow
head made of modifier chocolate bird
head for modifier cooking toy
modifier is head dessert food
head uses modifier gas antiques
head about modifier travel magazine
head located modifier mountain cabin
head used by modifier servant language
modifier located head murder town
head derived from modifier oil money
gorithm implements this approach by taking as in-
put the correct WordNet senses for the constituent
words in a compound (both base senses and parent
or hypernyms of those senses), and searching the
corpus for other compounds containing any pair
of those base or hypernym senses. Relations are
given a score equal to their proportional occur-
rence with those sense pairs, and the relation with
the highest proportional occurrence score across
all sense-pairs is returned as the correct relation
for the compound. Section 4 describes two differ-
ent leave-one-out tests of this ‘Proportional Rela-
tion Occurrence’ (PRO) algorithm, in which each
compound is consecutively removed from the cor-
pus and the algorithm is used to deduce the cor-
rect sense for that compound using the set of com-
pounds left behind. These tests show that the
PRO algorithm can identify the correct relations
for compounds, and the correct senses of those re-
lations, with high precision. Section 6 compares
our algorithm for compound disambiguation with
one recently presented alternative, Rosario et al.’s
(2002) rule-based system for the disambiguation
of noun-noun compounds. The paper concludes
with a discussion of future developments of the
PRO algorithm.
</bodyText>
<sectionHeader confidence="0.988438" genericHeader="introduction">
2 Introduction to WordNet
</sectionHeader>
<bodyText confidence="0.999971857142857">
In both our annotated corpus of 2,500 noun-noun
compounds and our proportional relation selection
algorithm we use WordNet (Miller, 1995). The ba-
sic unit of WordNet is the sense. Each word in
WordNet is linked to a set of senses, with each
sense identifying one particular meaning of that
word. For example, the noun ‘skin’ has senses rep-
resenting (i) the cutis or skin of human beings, (ii)
the rind or peel of vegetables or fruit, (iii) the hide
or pelt of an animal, (iv) a skin or bag used as a
container for liquids, and so on. Each sense con-
tains an identifying number and a ‘gloss’ (explain-
ing what that sense means). Each sense is linked
to its parent sense, which subsumes that sense as
part of its meaning. For example, sense (i) of the
word ‘skin’ (the cutis or skin of human beings) has
a parent sense ‘connective tissue’ which contains
that sense of skin and also contains the relevant
sense of ‘bone’, ‘muscle’, and so on. Each par-
ent sense has its own parents, which in turn have
their own parent senses, and so on up to the (no-
tional) root node of the WordNet hierarchy. This
hierarchical structure allows computer programs
to analyse the semantics of natural language ex-
pressions, by finding the senses of the words in
a given expression and traversing the WordNet
graph to make generalisations about the meanings
of those words.
</bodyText>
<sectionHeader confidence="0.728774" genericHeader="method">
3 Corpus of Annotated Compounds
</sectionHeader>
<bodyText confidence="0.999987913043478">
In this section we describe the construction of a
corpus of noun-noun compounds annotated with
the correct WordNet noun senses for constituent
words, the correct semantic relation between those
words, and the correct WordNet verb sense for that
relation. In addition to providing a set of com-
pounds to use as input for our compound disam-
biguation algorithm, one aim in constructing this
corpus was to examine the relations that exist in
naturally occurring noun-noun compounds. This
follows from existing research on the relations that
occur between noun-noun compounds (e.g. Gagn´e
&amp; Shoben, 1997). Gagn´e and her colleagues pro-
vide a set of ‘thematic relations’ (derived from
relations proposed by, for example, Levi, 1978)
which, they argue, cover the majority of semantic
relations between modifier (first word) and head
(second word) in noun-noun compounds. Table
1 shows the set of thematic relations proposed in
Gagn´e &amp; Shoben (1997). A side-effect of the con-
struction of our corpus of noun-noun compounds
was an assessment of the coverage and usefulness
of this set of relations.
</bodyText>
<subsectionHeader confidence="0.998658">
3.1 Procedure
</subsectionHeader>
<bodyText confidence="0.99876075">
The first step in constructing a corpus of anno-
tated noun-noun compounds involved selection of
a set of noun-noun compounds to classify. The
source used was the set of noun-noun compounds
</bodyText>
<page confidence="0.998317">
161
</page>
<figureCaption confidence="0.999906">
Figure 1: Selecting WordNet senses for nouns.
</figureCaption>
<bodyText confidence="0.999957078947369">
defined in WordNet. Compounds from WordNet
were used for two reasons. First, each compound
had an associated gloss or definition written by
the lexicographer who entered that compound into
the corpus: this explains the relation between the
two words in that compound. Sets of compounds
from other sources would not have such associated
definitions. Second, by using compounds from
WordNet, we could guarantee that all constituent
words of those compounds would also have en-
tries in WordNet, ensuring their acceptability to
our compound disambiguation algorithm. An ini-
tial list of over 40,000 two-word noun-noun com-
pounds were extracted from WordNet version 2.0.
From this list we selected a random subset of com-
pounds and went through that set excluding all
compounds using scientific latin (e.g. ocimum
basilicum), idiomatic compounds (e.g. zero hour,
ugli fruit), compounds containing proper nouns
(e.g. Yangtze river), non-english compounds (e.g.
faux pas), and chemical terminology (e.g. carbon
dioxide).
The remaining compounds were placed in ran-
dom order, and the third author annotated each
compound with the WordNet noun senses of the
constituent words, the semantic relation between
those words, and the WordNet verb sense of that
relation (again, with senses extracted from Word-
Net version 2.0). A web page was created for
this annotation task, showing the annotator the
compound to be annotated and the WordNet gloss
(meaning) for that compound (see Figure 1). This
page also showed the annotator the list of possible
WordNet senses for the modifier noun and head
noun in the compound, allowing the annotator to
select the correct WordNet sense for each word.
After selecting correct senses for the words in the
compound, another page was presented (Figure 2)
</bodyText>
<figureCaption confidence="0.987932">
Figure 2: Selecting relation and relation senses.
</figureCaption>
<bodyText confidence="0.9999725">
allowing the annotator to identify the correct se-
mantic relation for that compound, and then to se-
lect the correct WordNet sense for the verb in that
relation.
We began by assuming that Gagn´e &amp; Shoben’s
(1997) set of 14 relations was complete and could
account for all compounds being annotated. How-
ever, a preliminary test revealed some common
relations (e.g., eats, lives in, contains, and re-
sembles) that were not in Gagn´e &amp; Shoben’s set.
These relations were therefore added to the list of
relations we used. Various other less commonly-
occuring relations were also observed. To allow
for these other relations, a function was added to
the web page allowing the annotator to enter the
appropriate relation appearing in the form “noun
(insert relation) modifier” and “modifier (insert re-
lation) noun”. They would then be shown the set
of verb senses for that relation and asked to select
the correct sense.
</bodyText>
<subsectionHeader confidence="0.967788">
3.2 Results
</subsectionHeader>
<bodyText confidence="0.999974230769231">
Word sense, relation, and relation sense informa-
tion was gathered for 2,500 compounds. Relation
occurrence was well distributed across these com-
pounds: there were 139 different relations used in
the corpus. Frequency of these relations ranged
widely: there were 86 relations that occured for
just one compound in the corpus, and 53 relations
that occurred more than once. For the relations
that occured more than once in the corpus, the
average number of occurrences was 46. Table 2
shows the 5 most frequent relations in the corpus:
these 5 relations account for 54% of compounds.
Note that 2 of the 5 relations in Table 2 (head con-
</bodyText>
<page confidence="0.99667">
162
</page>
<tableCaption confidence="0.9968475">
Table 3: Senses for relations makes and carries.
Table 2: 5 most frequent relations in the corpus.
</tableCaption>
<figure confidence="0.880045857142857">
frequency number of
relation senses
382 3
360 1
226 3
217 3
169 1
</figure>
<bodyText confidence="0.99980588">
tains modifier and head resembles modifier) are
not listed in Gagn´e’s set of taxonomic relations.
This suggests that the taxonomy needs to be ex-
tended by the addition of further relations.
In addition to identifying the relations used in
compounds in our corpus, we also identified the
WordNet verb sense of each relation. In total 146
different relation senses occurred in the corpus.
Most relations in the corpus were associated with
just 1 relation sense. However, a significant mi-
nority of relations (29 relations, or 21% of all re-
lations) had more than one relation sense; on aver-
age, these relations had three different senses each.
Relations with more than one sense in the corpus
tended to be the more frequently occurring rela-
tions: as Table 2 shows, of the 5 most frequent
relations in the corpus, 3 were identified as hav-
ing more than one relation sense. The two rela-
tions with the largest number of different relation
senses occurring were carry (9 senses) and makes
(8 senses). Table 3 shows the 3 most frequent
senses for both relations. This diversity of rela-
tion senses suggests that Gagn´e’s set of thematic
relations may be too coarse-grained to capture dis-
tinctions between relations.
</bodyText>
<sectionHeader confidence="0.991987" genericHeader="method">
4 Compound Disambiguation Algorithm
</sectionHeader>
<bodyText confidence="0.999900333333333">
The previous section described the development
of a corpus of associations between word-sense
and relation data for a large set of noun-noun
compounds. This section presents the ‘Pro-
portional Relation Occurrence’ (PRO) algorithm
which makes use of this information to deduce the
correct relation for a given compound.
Our approach to compound disambiguation
works by finding other compounds containing
words from the same semantic categories as the
words in the compound to be disambiguated: if a
particular relation occurs frequently in those other
compounds, that relation is probably also the cor-
rect relation for the compound in question. We
take WordNet senses to represent semantic cate-
</bodyText>
<tableCaption confidence="0.9209219">
relation relation sense gloss example
Makes bring forth or yield; spice tree
Makes cause to occur or exist; smoke bomb
Makes create or manufacture cider mill
a man-made product;
Carries contain or hold, have within; pocket watch
Carries move while supporting, in passenger van
a vehicle or one’s hands;
Carries transmit or serve as the radio wave
medium for transmission;
</tableCaption>
<bodyText confidence="0.999969272727273">
gories. Once the correct WordNet sense for a word
has been identified, that word can placed a set
of nested semantic categories: the category repre-
sented by that WordNet sense, by the parent sense
(or hypernym) of that sense, the parent of that
parent, and so on up to the (notional) root sense
of WordNet (the semantic category which sub-
sumes every other category in WordNet). Our al-
gorithm uses the set of semantic categories for the
words in a compound, and searches for other com-
pounds containing words from any pair of those
categories.
Figure 3 shows the algorithm in pseudocode.
The algorithm uses a corpus of annotated noun-
noun compounds and, to disambiguate a given
compound, takes as input the correct WordNet
sense for the modifier and head words of that com-
pound, plus all hypernyms of those senses. The al-
gorithm pairs each modifier sense with each head
sense (lines 1 &amp; 2 in Figure 3). For each sense-
pair, the algorithm goes through the corpus of
noun-noun compounds and extracts every com-
pound whose modifier sense (or a hypernym of
that sense) is equal to the modifier sense in the
current sense-pair, and whose head sense (or a hy-
pernym of that sense) is equal to the head sense in
that pair (lines 5 to 8). The algorithm counts the
number of times each relation occurs in that set
of compounds, and assigns each relation a Propor-
tional Relation Occurrence (PRO) score for that
sense-pair (lines 10 to 12). The PRO score for a
given relation R in a sense-pair S is a tuple with
two components, as in Equation 1:
</bodyText>
<equation confidence="0.994356">
PRO(R, S) = |R n S ||R n S |(1)
|S |,|D|
</equation>
<bodyText confidence="0.961209444444445">
The first term of this tuple is the proportion of
times relation R occurs with sense-pair S (in other
words, the conditional probability of relation R
relation
head used for modifier
head about modifier
head located modifier
head contains modifier
head resembles modifier
</bodyText>
<page confidence="0.967504">
163
</page>
<figure confidence="0.997126060606061">
Preconditions:
The entry for each compound C in corpus D contains:
CmodList = sense + hypernym senses for modifier of C;
CheadList = sense + hypernym senses for head of C;
Crel = semantic relation of C;
CrelSense = verb sense for semantic relation for C;
Input:
X = compound for which a relation is required;
modList = sense + hypernym senses for modifier of X;
headList = sense + hypernym senses for head of X;
finalResultList = ();
Begin:
1 for each modifier sense M E modList
2 for each head sense H E headList
3 relCount = ();
4 matchCount = 0;
5 for each compound C E corpus D
6 if ((M E CmodList) and (H E CheadList))
7 relCount[Crel] = relCount[Crel] + 1;
8 matchCount = matchCount + 1;
9 for each relation R E relCount
10 condProb = relCount[R]/matchCount;
11 jointProb = relCountQR]/JDJ;
12 scoreTuple = (relProp, jointProb);
13 prevScoreTuple = finalResultList[R];
14 if (scoreTuple[1] &gt; prevScoreTuple[1])
15 finalResultList[R] = relSscoreTuple;
16 if (scoreTuple[1] = prevScoreTuple[1])
17 if (scoreTuple[2] &gt; prevScoreTuple[2])
18 finalResultList[R] = scoreTuple;
19 sort finalResultList by relation score tuples;
20 return finalResultList;
End.
</figure>
<figureCaption confidence="0.999933">
Figure 3: Compound disambiguation algorithm.
</figureCaption>
<bodyText confidence="0.996654180327869">
given sense-pair S); the second term is simply the
proportion of times the relation co-occurs with the
sense pair in the database of compounds D (in
other words, the joint probability of relation R and
sense-pair S). The algorithm compares the PRO
score obtained for each relation R from the current
sense-pair with the score obtained for that relation
from any other sense-pair, using the first term of
the score tuple as the main key for comparison
(lines 14 and 15), and using the second term as
a tie-breaker (lines 16 to 18). If the PRO score for
relation R in the current sense-pair is greater than
the PRO score obtained for that relation with some
other sense pair (or if no previous score for the re-
lation has been entered), the current PRO tuple is
recorded for relation R. In this way the algorithm
finds the maximum PRO score for each relation R
across all possible sense-pairs for the compound
in question. The algorithm returns a list of can-
didate relations for the compound, sorted by PRO
score (lines 19 and 20). The relations at the front
of that list (those with the highest PRO scores) are
those most likely to be the correct relation for that
compound.
Tests of this algorithm suggest that, in many
cases, candidate relations for a given compound
will be tied on the first term of their PRO score
tuple. The use of the second score-tuple term is
therefore an important part of the algorithm. For
example, suppose that two competing relations for
some compound have a proportional occurence
of 1.0 (both relations occur in every occurrence
of some sense-pair in the compound corpus). If
the first relation occurs 20 times with its selected
sense pair (i.e. there are 20 occurrences of the
sense-pair in the corpus, and the relation occurs in
each of those 20 occurrences), but the second rela-
tion only occurs occurs 2 times with its selected
sense pair (i.e. there are 2 occurrences of that
sense-pair in the corpus, and the relation occurs
in each of those 2 occurrences), the first relation
will be preferred over the second relation, because
there is more evidence for that relation being the
correct relation for the compound in question.
The algorithm in Figure 3 returns a list of can-
didate semantic relations for a given compound
(returning relations such as ‘head carries modi-
fier’ for the compound vegetable truck or ‘mod-
ifier causes head’ for the compound storm dam-
age, for example). This algorithm can also return
a list of relation senses for a given compound (re-
turning the WordNet verb sense ‘carries: moves
while supporting, in a vehicle or one’s hands’ for
the relation for the compound vegetable truck but
the verb sense ‘carries: transmits or serves as the
medium for transmission’ for the compound ra-
dio wave, for example). To return a list of rela-
tion senses rather than relations, we replace Crel
with CrelSense throughout the algorithm in Figure
3. Section 5 describes a test of both versions of the
algorithm.
</bodyText>
<sectionHeader confidence="0.846076" genericHeader="method">
5 Testing the Algorithm
</sectionHeader>
<bodyText confidence="0.999961363636364">
To test the PRO algorithm it was implemented in a
Perl program and applied to the corpus of com-
pounds described in Section 3. We applied the
program to two tasks: computing the correct re-
lation for a given compound, and computing the
correct relation sense for that compound. We
used a ‘leave-one-out’ cross-validation approach,
in which we consecutively removed each com-
pound from the corpus (making it the ‘query com-
pound’), recorded the correct relation or relation
sense for that compound, then passed the correct
</bodyText>
<page confidence="0.989209">
164
</page>
<figure confidence="0.99935597368421">
Precision vs PRO level
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
number of compounds
2500
2000
1500
1000
500
0
PRO level
Total number of
responses
returned at this
PRO level
Number of
correct
responses
returned at this
PRO level
Precision vs PRO level
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
number of compounds
2500
2000
1500
1000
500
0
PRO level
Total number of
responses
returned at this
PRO level
Number of
correct
responses
returned at this
PRO level
</figure>
<figureCaption confidence="0.9955535">
Figure 4: Graph of precision versus PRO value for
returned relations
Figure 5: Graph of precision versus PRO value for
returned relation senses
</figureCaption>
<bodyText confidence="0.999579328947369">
head and modifier senses of that query compound
(plus their hypernyms), and the corpus of remain-
ing compounds (excluding the query compound),
to the Perl program. We carried out this process
for each compound in the corpus. The result of this
procedure was a list, for each compound, of can-
didate relations or relation senses sorted by PRO
score.
We assessed the performance of the algorithm
in two ways. We first considered the rank of
the correct relation or relation sense for a given
compound in the sorted list of candidate rela-
tions/relation senses returned by the algorithm.
The algorithm always returned a large list of can-
didate relations or relation senses for each com-
pound (over 100 different candidates returned for
all compounds). In the relation selection task, the
correct relation for a compound occurred in the
first position in this list for 41% of all compounds
(1,026 out of 2,500 compounds), and occured in
one of the first 5 positions (in the top 5% of re-
turned relations or relation senses) for 72% of all
compounds (1780 compounds). In the relation-
sense selection task, the correct relation for a com-
pound occured in the first position in this list for
43% of all compounds, and occured in one of the
first 5 positions for 74% of all compounds. This
performance suggests that the algorithm is doing
well in both tasks, given the large number of pos-
sible relations and relation senses available.
Our second assessment considered the precision
and the recall of relation/relation senses returned
by the algorithm at different proportional occur-
rence levels (different levels for the first term in
PRO score tuples as described in Equation 1). For
each proportional occurrence level between 0 and
1, we assumed that the algorithm would only re-
turn a relation or relation sense when the first rela-
tion in the list of candidate relations returned had
a score at or above that level. We then counted the
total number of compounds for which a response
was returned at that level, and the total number of
compounds for which a correct response was re-
turned. The precision of the algorithm at a given
PRO level was equal to the number of correct
responses returned by the algorithm at that PRO
level, divided by the total number of responses re-
turned by the algorithm at that level. The recall
of the algorithm at a given PRO level was equal
to the number of correct responses returned by the
algorithm at that level, divided by the total number
of compounds in the database (the total number of
compounds for which the algorithm could have re-
turned a correct response).
Figure 4 shows the total number of responses,
and the total number of correct responses, returned
at each PRO level for the relation selection task.
Figure 5 shows the same data for the relation-sense
selection task. As both graphs show, as PRO level
increases, the total number of responses returned
by the algorithm declines, but the total number of
correct responses does not fall significantly. For
example, in the relation selection task, at a PRO
level of 0 the algorithm return a response (selects
a relation) for all 2,500 compounds, and approx-
imately 1,000 of those responses are correct (the
algorithm’s precision at this level is 0.41). At a
PRO level of 1, the algorithm return a response
(selects a relation) for just over 900 compounds,
and approximately 850 of those responses are cor-
rect (the algorithm’s precision at this level is 0.92).
A similar pattern is seen for the relation sense re-
sponses returned by the algorithm. These graphs
show that with a PRO level around 1, the algorithm
makes a relatively small number of errors when se-
lecting the correct relation or relation sense for a
</bodyText>
<page confidence="0.997342">
165
</page>
<bodyText confidence="0.999906333333333">
given compound (an error rate of less than 10%).
The PRO algorithm thus has a high degree of pre-
cision in selecting relations for compounds.
As Figures 4 and 5 show, the number of cor-
rect responses returned by the PRO algorithm did
not vary greatly across PRO levels. This means
that the recall of the algorithm remained relatively
constant across PRO levels: in the relation selec-
tion task, for example, recall ranged from 0.41 (at
a PRO level of 0) to 0.35 (at a PRO level of 1). A
similar pattern occurred in the relation-sense se-
lection task.
</bodyText>
<sectionHeader confidence="0.999963" genericHeader="conclusions">
6 Related Work
</sectionHeader>
<bodyText confidence="0.999960727272727">
Various approaches to noun-noun compound dis-
ambiguation in the literature have used the seman-
tic category membership of the constituent words
in a compound to determine the relation between
those words. Most of these use hand-crafted lex-
ical hierarchies designed for particular semantic
domains. We compare our algorithm for com-
pound disambiguation with one recently presented
alternative, Rosario, Hearst, and Fillmore’s (2002)
rule-based system for the disambiguation of noun-
noun compounds in the biomedical domain.
</bodyText>
<subsectionHeader confidence="0.997534">
6.1 Rule-based disambiguation algorithm
</subsectionHeader>
<bodyText confidence="0.999979847457627">
Rosario et al.’s (2002) general approach to noun-
noun compound disambiguation is based, as ours
is, on the semantic categories of the nouns mak-
ing up a compound. Rosario et al. make use of
the MeSH (Medical Subject Headings) hierarchy,
which provides detailed coverage of the biomed-
ical domain they focus on. Their analysis in-
volves automatically extracting a corpus of noun-
noun compounds from a large set of titles and ab-
stracts from the MedLine collection of biomedical
journal articles, and identifying the MeSH seman-
tic categories under which the modifier and head
words of those compounds fall. This analysis gen-
erates a set of category pairs for each compound
(similar to our sense pairs), with each pair consist-
ing of a MeSH category for the modifier word and
a MeSH category for the head.
The aim of Rosario et al.’s analysis was to pro-
duce a set of rules which would link the MeSH
category pair for a given compound to the correct
semantic relation for that compound. Given such
a set of rules, their algorithm for disabmiguat-
ing noun-noun compounds involves obtaining the
MeSH category membership for the constituent
words of the compounds to be disambiguated,
forming category pairs, and looking up those cat-
egory pairs in the list of category-pair—*relation
rules. If a rule was found linking the category pair
for a given compound to a particular semantic re-
lation, that relation was returned as the correct re-
lation for the compound in question.
To produce a list of category-pair—*relation
rules, Rosario et al. first selected a set of cate-
gory pairs occurring in their corpus of compounds.
For each category pair, they manually examined
20% of the compounds falling under that category
pair, paraphrasing the relation between the nouns
in that compound by hand, and seeing if that re-
lation was the same across all compounds under
that category pair. If that relation was the same
across all selected compounds, that category pair
was recorded as a rule linked to the relation pro-
duced. If, on the other hand, several different re-
lations were produced for a given category pair,
analysis decended one level in the MeSH hierar-
chy, splitting that category pair into several sub-
categories. This repeated until a rule was pro-
duced assigning a relation to every compound ex-
amined. The rules produced by this process were
then tested using a randomly chosen test set of
20% of compounds falling under each category
pair, entirely distinct from the compound set used
in rule construction, and applying the rules to
those new compounds. An evaluator checked each
compound to see whether the relation returned for
that compound was an acceptable reflection of that
compound’s meaning. The results varied between
78.6% correct to 100% correct across the different
category pairs.
</bodyText>
<subsectionHeader confidence="0.999444">
6.2 Comparing the algorithms
</subsectionHeader>
<bodyText confidence="0.999947857142857">
In this section we first compare Rosario et al.’s
algorithm for compound disambiguation with our
own, and then compare the procedures used to as-
sess those algorithms. While both algorithms are
based on the association between category pairs
(sense pairs) and semantic relations, they differ in
that Rosario et al.’s algorithm uses a static list of
manually-defined rules linking category pairs and
semantic relations, while our PRO algorithm au-
tomatically and dynamically computes links be-
tween sense pairs and relations on the basis of pro-
portional co-occurrence in a corpus of compounds.
This gives our algorithm an advantage in terms
of coverage: where Rosario et al.’s algorithm can
</bodyText>
<page confidence="0.995997">
166
</page>
<bodyText confidence="0.999979576271186">
only disambiguate compounds whose constituent
words match one of the category-pair—*relation
rules on their list, our algorithm should be able to
apply to any compound whose constituent words
are defined in WordNet. This also gives our al-
gorithm an advantage in terms of extendability, in
that while adding a new compound to the corpus
of compounds used by Rosario et al. could poten-
tially require the manual removal or re-definition
of a number of category-pair—*relation rules,
adding a new compound to the annotated corpus
used by our PRO algorithm requires no such in-
tervention. Of course, the fact that Rosario et al.’s
algorithm is based on a static list of rules linking
categories and relations, while our algorithm dy-
namically computes such links, gives Rosario et
al.’s algorithm a clear efficiency advantage. Im-
proving the efficiency of the PRO algorithm, per-
haps by automatically compiling a tree of associa-
tions between word senses and semantic relations
and using that tree in compound disambiguation,
is an important aim for future research.
Our second point of comparison concerns the
procedures used to assess the two algorithms. In
Rosario et al.’s assessment of their rule-based al-
gorithm, an evaluator checked the relations re-
turned by the algorithm for a set of compounds,
and found that those relations were acceptable in a
large proportion of cases (up to 100%). A problem
with this procedure is that many compounds can
fall equally under a number of different acceptable
semantic relations. The compound storm damage,
for example, is best defined by the relation causes
(‘damage caused by a storm’), but also falls under
the relations makes (‘damage made by a storm’)
and derived from (‘damage derived from a storm’):
most people would agree that these paraphrases
all acceptably describe the meaning of the com-
pound (Devereux &amp; Costello, 2005). This means
that, while the relations returned for compounds
by Rosario et al.’s algorithm may have been judged
acceptable for those compounds by the evaluator,
they were not necessarily the most appropriate re-
lations for those compounds: the algorithm could
have returned other relations that would have been
equally acceptable. In other words, Rosario et al.’s
assessment procedure is somewhat weaker than
the assessment procedure we used to test the PRO
algorithm, in which there was one correct relation
identified for each compound and the algorithm
was taken to have performed correctly only if it re-
turned that relation. One aim for future work is to
apply the assessment procedure used by Rosario et
al. to the PRO algorithm’s output, asking an eval-
uator to assess the acceptability of the relations re-
turned rather than simply counting the cases where
the best relation was returned. This would provide
a clearer basis for comparison between the algo-
rithms.
</bodyText>
<subsectionHeader confidence="0.978502">
6.3 Conclusions
</subsectionHeader>
<bodyText confidence="0.99996288">
In this paper we’ve described an algorithm for
noun-noun compound disambiguation which au-
tomatically identifies the semantic relations and
relation senses used in such compounds. We’ve
given evidence showing that, coupled with a
corpus of noun-noun compounds annotated with
WordNet senses and semantic relations, this al-
gorithm can identify the correct semantic rela-
tions for compounds with high precision. Unlike
other approaches to automatic compound disam-
biguation which typically apply to particular spe-
cific domains, our algorithm is not domain specific
and can identify relations for a random sample
of noun-noun compounds drawn from the Word-
Net dictionary. Further, our algorithm is fully au-
tomatic: unlike other approaches, our algorithm
does not require the manual construction of rela-
tion rules to produce successful compound disam-
biguation. In future work we hope to extend this
algorithm to provide a more efficient algorithmic
implementation, and also to apply the algorithm
in areas such as the machine translation of noun-
noun compounds, where the identification of se-
mantic relations in compounds is a crucial step in
the translation process.
</bodyText>
<sectionHeader confidence="0.998995" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999958352941177">
B. Devereux &amp; F. J. Costello. 2005. Investigating the
Relations used in Conceptual Combination. Artificial In-
telligence Review, 24(3–4): 489–515.
C. L. Gagn´e, &amp; E. J. Shoben, E. 1997. Influence
of thematic relations on the comprehension of modifier-
noun combinations. Journal of Experimental Psychology:
Learning, Memory and Cognition, 23: 71–87.
J. Justeson &amp; S. Katz. 1995. Technical Terminology: Some
linguistic properties and an algorithm for identification in
text. Natural Language Engineering, 1–1: 9–27.
J. Levi. 1978. The Syntax and Semantics of Complex Nomi-
nals. New York: Academic Press.
G. Miller. 1995. WordNet: A lexical database. Communi-
cation of the ACM, 38(11), 39–41.
B. Rosario, M. Hearst, &amp; C. Fillmore. 2002. The De-
scent of Hierarchy, and Selection in Relational Semantics.
Proceedings of ACL-02: 247–254.
</reference>
<page confidence="0.99776">
167
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.233260">
<title confidence="0.9993645">Using WordNet to Automatically Deduce Relations between Words in Noun-Noun Compounds</title>
<author confidence="0.999985">Fintan J Costello</author>
<affiliation confidence="0.9971975">School of Computer Science, University College Dublin,</affiliation>
<address confidence="0.990908">Dublin 6, Ireland.</address>
<email confidence="0.994229">fintan.costello@ucd.ie</email>
<author confidence="0.999982">Tony Veale</author>
<affiliation confidence="0.9971915">Department of Computer Science, University College Dublin,</affiliation>
<address confidence="0.993988">Dublin 6, Ireland.</address>
<email confidence="0.983868">tony.veale@ucd.ie</email>
<author confidence="0.999832">Simon Dunne</author>
<affiliation confidence="0.999997">Department of Computer Science,</affiliation>
<address confidence="0.922708">University College Dublin, Dublin 6, Ireland.</address>
<email confidence="0.996985">sdunne@inismor.ucd.ie</email>
<abstract confidence="0.997964178571429">We present an algorithm for automatically disambiguating noun-noun compounds by deducing the correct semantic relation between their constituent words. This algorithm uses a corpus of 2,500 compounds annotated with WordNet senses and covering 139 different semantic relations (we make this corpus available online for researchers interested in the semantics of noun-noun compounds). The algorithm takes as input the WordNet senses for the nouns in a compound, finds all parent senses (hypernyms) of those senses, and searches the corpus for other compounds containing any pair of those senses. The relation with the highest proportional cooccurrence with any sense pair is returned as the correct relation for the compound. This algorithm was tested using a ’leaveone-out’ procedure on the corpus of compounds. The algorithm identified the correct relations for compounds with high precision: in 92% of cases where a relation was found with a proportional cooccurrence of 1.0, it was the correct relation for the compound being disambiguated.</abstract>
<keyword confidence="0.470548">Compounds, Conceputal Combination, Word Relations, WordNet</keyword>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>B Devereux</author>
<author>F J Costello</author>
</authors>
<title>Investigating the Relations used in Conceptual Combination.</title>
<date>2005</date>
<journal>Artificial Intelligence Review,</journal>
<volume>24</volume>
<issue>3</issue>
<pages>489--515</pages>
<contexts>
<context position="31368" citStr="Devereux &amp; Costello, 2005" startWordPosition="5175" endWordPosition="5178">s returned by the algorithm for a set of compounds, and found that those relations were acceptable in a large proportion of cases (up to 100%). A problem with this procedure is that many compounds can fall equally under a number of different acceptable semantic relations. The compound storm damage, for example, is best defined by the relation causes (‘damage caused by a storm’), but also falls under the relations makes (‘damage made by a storm’) and derived from (‘damage derived from a storm’): most people would agree that these paraphrases all acceptably describe the meaning of the compound (Devereux &amp; Costello, 2005). This means that, while the relations returned for compounds by Rosario et al.’s algorithm may have been judged acceptable for those compounds by the evaluator, they were not necessarily the most appropriate relations for those compounds: the algorithm could have returned other relations that would have been equally acceptable. In other words, Rosario et al.’s assessment procedure is somewhat weaker than the assessment procedure we used to test the PRO algorithm, in which there was one correct relation identified for each compound and the algorithm was taken to have performed correctly only i</context>
</contexts>
<marker>Devereux, Costello, 2005</marker>
<rawString>B. Devereux &amp; F. J. Costello. 2005. Investigating the Relations used in Conceptual Combination. Artificial Intelligence Review, 24(3–4): 489–515.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L Gagn´e</author>
<author>E J Shoben</author>
<author>E</author>
</authors>
<title>Influence of thematic relations on the comprehension of modifiernoun combinations.</title>
<date>1997</date>
<journal>Journal of Experimental Psychology: Learning, Memory and Cognition,</journal>
<volume>23</volume>
<pages>71--87</pages>
<marker>Gagn´e, Shoben, E, 1997</marker>
<rawString>C. L. Gagn´e, &amp; E. J. Shoben, E. 1997. Influence of thematic relations on the comprehension of modifiernoun combinations. Journal of Experimental Psychology: Learning, Memory and Cognition, 23: 71–87.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Justeson</author>
<author>S Katz</author>
</authors>
<title>Technical Terminology: Some linguistic properties and an algorithm for identification in text.</title>
<date>1995</date>
<journal>Natural Language Engineering,</journal>
<volume>1</volume>
<pages>9--27</pages>
<contexts>
<context position="1774" citStr="Justeson &amp; Katz, 1995" startWordPosition="258" endWordPosition="261">d. This algorithm was tested using a ’leaveone-out’ procedure on the corpus of compounds. The algorithm identified the correct relations for compounds with high precision: in 92% of cases where a relation was found with a proportional cooccurrence of 1.0, it was the correct relation for the compound being disambiguated. Keywords: Noun-Noun Compounds, Conceputal Combination, Word Relations, WordNet 1 Introduction Noun-noun compounds are short phrases made up of two or more nouns. These compounds are common in everyday language and are especially frequent, and important, in technical documents (Justeson &amp; Katz, 1995, report that such phrases form the majority of technical content of scientific and technical documents surveyed). Understanding these compounds requires the listener or reader to infer the correct semantic relationship between the words making up the compound, inferring, for example, that the phrase ‘flu virus’ refers to a virus that causes flu, while ‘skin virus’ describes a virus that affects the skin, and marsh virus a virus contracted in marshes. In this paper we describe a novel algorithm for disambiguating noun-noun compounds by automatically deducing the correct semantic relationship b</context>
</contexts>
<marker>Justeson, Katz, 1995</marker>
<rawString>J. Justeson &amp; S. Katz. 1995. Technical Terminology: Some linguistic properties and an algorithm for identification in text. Natural Language Engineering, 1–1: 9–27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Levi</author>
</authors>
<title>The Syntax and Semantics of Complex Nominals.</title>
<date>1978</date>
<publisher>Academic Press.</publisher>
<location>New York:</location>
<contexts>
<context position="7564" citStr="Levi, 1978" startWordPosition="1185" endWordPosition="1186"> noun senses for constituent words, the correct semantic relation between those words, and the correct WordNet verb sense for that relation. In addition to providing a set of compounds to use as input for our compound disambiguation algorithm, one aim in constructing this corpus was to examine the relations that exist in naturally occurring noun-noun compounds. This follows from existing research on the relations that occur between noun-noun compounds (e.g. Gagn´e &amp; Shoben, 1997). Gagn´e and her colleagues provide a set of ‘thematic relations’ (derived from relations proposed by, for example, Levi, 1978) which, they argue, cover the majority of semantic relations between modifier (first word) and head (second word) in noun-noun compounds. Table 1 shows the set of thematic relations proposed in Gagn´e &amp; Shoben (1997). A side-effect of the construction of our corpus of noun-noun compounds was an assessment of the coverage and usefulness of this set of relations. 3.1 Procedure The first step in constructing a corpus of annotated noun-noun compounds involved selection of a set of noun-noun compounds to classify. The source used was the set of noun-noun compounds 161 Figure 1: Selecting WordNet se</context>
</contexts>
<marker>Levi, 1978</marker>
<rawString>J. Levi. 1978. The Syntax and Semantics of Complex Nominals. New York: Academic Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Miller</author>
</authors>
<title>WordNet: A lexical database.</title>
<date>1995</date>
<journal>Communication of the ACM,</journal>
<volume>38</volume>
<issue>11</issue>
<pages>39--41</pages>
<contexts>
<context position="2597" citStr="Miller, 1995" startWordPosition="383" endWordPosition="384">ationship between the words making up the compound, inferring, for example, that the phrase ‘flu virus’ refers to a virus that causes flu, while ‘skin virus’ describes a virus that affects the skin, and marsh virus a virus contracted in marshes. In this paper we describe a novel algorithm for disambiguating noun-noun compounds by automatically deducing the correct semantic relationship between their constituent words. Our approach to compound disambiguation combines statistical and ontological information about words and relations in compounds. Ontological information is derived from WordNet (Miller, 1995), a hierarchical machine readable dictionary, which is introduced in Section 1. Section 2 describes the construction of an annotated corpus of 2,500 noun-noun compounds covering 139 different semantic relations, with each noun and each relation annotated with its correct WordNet sense.1 Section 3 describes our algorithm for finding the correct relation between nouns in a compound, which makes use of this annotated corpus. Our general approach is that the correct relation between two words in a compound can be deduced by finding other compounds containing words from the same semantic categories</context>
<context position="5597" citStr="Miller, 1995" startWordPosition="846" endWordPosition="847">ompounds left behind. These tests show that the PRO algorithm can identify the correct relations for compounds, and the correct senses of those relations, with high precision. Section 6 compares our algorithm for compound disambiguation with one recently presented alternative, Rosario et al.’s (2002) rule-based system for the disambiguation of noun-noun compounds. The paper concludes with a discussion of future developments of the PRO algorithm. 2 Introduction to WordNet In both our annotated corpus of 2,500 noun-noun compounds and our proportional relation selection algorithm we use WordNet (Miller, 1995). The basic unit of WordNet is the sense. Each word in WordNet is linked to a set of senses, with each sense identifying one particular meaning of that word. For example, the noun ‘skin’ has senses representing (i) the cutis or skin of human beings, (ii) the rind or peel of vegetables or fruit, (iii) the hide or pelt of an animal, (iv) a skin or bag used as a container for liquids, and so on. Each sense contains an identifying number and a ‘gloss’ (explaining what that sense means). Each sense is linked to its parent sense, which subsumes that sense as part of its meaning. For example, sense (</context>
</contexts>
<marker>Miller, 1995</marker>
<rawString>G. Miller. 1995. WordNet: A lexical database. Communication of the ACM, 38(11), 39–41.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Rosario</author>
<author>M Hearst</author>
<author>C Fillmore</author>
</authors>
<title>The Descent of Hierarchy, and Selection in Relational Semantics.</title>
<date>2002</date>
<booktitle>Proceedings of ACL-02:</booktitle>
<pages>247--254</pages>
<marker>Rosario, Hearst, Fillmore, 2002</marker>
<rawString>B. Rosario, M. Hearst, &amp; C. Fillmore. 2002. The Descent of Hierarchy, and Selection in Relational Semantics. Proceedings of ACL-02: 247–254.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>