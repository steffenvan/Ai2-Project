<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000272">
<title confidence="0.7201906">
Book Reviews
Associative Networks -
Representation and Use
of Knowledge by Computers
Nicholas V. Findler, Editor
</title>
<note confidence="0.615435">
Academic Press, New York, 1979,
462 pp., $42.50, ISBN 0-12-256380-8.
</note>
<bodyText confidence="0.999946553398059">
Upon opening this book and leafing through the
pages, one gets the impression of an important com-
pendium. The fourteen articles provide good coverage
of semantic networks and related systems for repre-
senting knowledge. Their average length of 33 pages
is long enough to give each author reasonable scope,
yet short enough to permit a variety of viewpoints to
be expressed in a single volume. The editor should be
commended for his efforts in putting together a well-
organized book instead of just another collection of
unrelated papers.
In the first article, On the Epistemological Status of
Semantic Networks, Ronald Brachman surveys semantic
networks since 1966 and introduces many of the issues
that are discussed by other authors in later chapters.
His main point is the need for greater structure in the
nets than a uniform graph of concept nodes and rela-
tionship arcs. In his system, KLONE, generic con-
cepts are themselves defined by a network, which is
inherited either by individual concepts that are in-
stances of the generic or by other generic concepts
that represent subtypes of the higher level generic.
As a survey, Brachman&apos;s article is good; but as a
history, it is flawed by the common error that semantic
networks &amp;quot;originated in the work of Quillian.&amp;quot; Yet
semantic networks, like much of the Al work on natu-
ral language, are a re-invention of what was done for
machine translation a decade earlier. In linguistics, the
most extensive network representation was the depen-
dency grammar by Lucien Tesniere (1959). Although
Tesniere never used a computer himself, he had a
strong influence on MT work in Europe. In the Unit-
ed States, dependency parsers were implemented by
Hays (1964) and Klein (1965), whom Schank and
Tesler (1969) cited as an influence on their work. Of
the semantic networks for MT, the most sophisticated
were the correlational nets by Silvio Ceccato (1956,
1961, 1962). His work was so advanced that Bar-
Hillel (1960) dismissed it as &amp;quot;practically hopeless&amp;quot;
because of its obscure speculations about &amp;quot;elements of
thought.&amp;quot; Contrary to Brachman&apos;s claim that
Carbonell&apos;s nets were the first to distinguish subtypes
from instances of a type, Ceccato had distinct rela-
tions for member-class, species-genus, and part-whole.
Other arcs in Ceccato&apos;s nets represented linguistic
cases such as object, instrument, and result and spatial
relations such as containing, covering, and contiguity.
Ceccato implemented the typical Al mechanisms of
inheritance of properties from genus to species and
frame-like &amp;quot;constellations&amp;quot; which &amp;quot;indicate both the
particular relations that extend from the analyzed
thing, and the things that can satisfy these relations&amp;quot;
(1961, p. 65). Given the concepts PAINTBRUSH and
PICTURE, he could trace a path through a constella-
tion to show that PAINTBRUSH was the instrument
of PAINT and PICTURE was the result.
Two other articles in the book introduce additional
structure into semantic networks. In A Procedural
Semantics for Semantic Networks, Hector Levesque
and John Mylopoulos develop inheritance mechanisms
similar to Brachman&apos;s, but with a different notation.
Their main innovation is the merger of semantic net-
works with a network notation for procedures and
PLANNER-like conditions for invoking the proce-
dures. Their work forms a bridge between declarative
forms of semantic nets and procedural languages for
knowledge representation. In Making Preferences
More Active, Yorick Wilks extends his earlier work on
preference semantics with more frame-like structures
called pseudotexts. He starts with an example from the
London Times and shows how his system would deal
with typical violations of selectional constraints. His
analysis is worth reading by anyone who is program-
ming computers to understand natural language, al-
though it is unlikely that others will be quick to adopt
Wilks&apos; exuberant terminology of formulas, templates,
paraplates, semantic blocks, extractions, and pseudo-
texts.
Several articles develop notations for representing
quantifiers and specifying their scope. In Encoding
Knowledge in Partitioned Networks, Gary Hendrix pres-
ents a general method of nesting subnets inside of
other nets. The nesting shows scope of quantifiers,
but it could also support other uses for nested contexts
such as modalities. Hendrix assumes that the occur-
rence of a concept automatically asserts its existence;
but if a generic concept occurs in both the antecedent
and the consequent of an implication, it is assumed to
have a universal quantifier. In Extensional Semantic
Networks, Jurgen Janas and Camilla Schwind also use
partitioning to show scope of quantifiers, but they
append explicit existential or universal quantifiers to
the generic concepts. Despite the title of their article,
the authors do represent intensional information in the
networks and present a good discussion of the distinc-
tion between intensions and extensions. In The Struc-
ture and Organization of a Semantic Net for Compre-
hension and Inference, Lenhart Schubert, Randolph
Goebel, and Nicholas Cercone introduce various kinds
of dotted, dashed, and double links that show scope of
Boolean operators, quantifiers, and modality. Their
notation is less readable than Hendrix&apos;s or Janas and
Schwind&apos;s, but they discuss general issues of organiz-
</bodyText>
<page confidence="0.663287">
110 American Journal of Computational Linguistics, Volume 6, Number 2, April-June 1980
</page>
<subsectionHeader confidence="0.244474">
Book Reviews Associative Networks - Representation and Use of Knowledge by Computers
</subsectionHeader>
<bodyText confidence="0.997294303030303">
ing and retrieving knowledge that would apply to al-
most any representation. In The SNePS Semantic
Network Processing System, Stuart Shapiro presents an
extensional approach to handling quantifiers with
structure-building rules; &amp;quot;Every man loves some wom-
an,&amp;quot; for example, corresponds to a rule that builds a
structure for &amp;quot;x loves a woman y&amp;quot; whenever it finds a
node for a man x. That approach works when all of
the facts are represented in a single context. But to
represent &amp;quot;Tom believes that every man loves some
woman&apos;&apos; would require a strange nesting of structure-
building rules inside the context of the verb comple-
ment of BELIEVE.
In A Predicate Calculus Based Semantic Network for
Deductive Searching, James McSkimin and Jack Minker
present a solid, well-written article on sorted first-
order predicate calculus for data base inference. But
calling their notation a semantic network is highly
misleading. According to Brachman, the common
thread that holds together the various forms of seman-
tic networks is their use &amp;quot;in understanding natural
language&amp;quot;; and according to Janas and Schwind,
&amp;quot;intensionality is undoubtedly a constituent of any
semantic network.&amp;quot; McSkimin and Minker&apos;s approach
fails both of these criteria: they make no attempt to
deal with natural language, and their semantic categor-
ies are &amp;quot;simply labels for a set of objects.&amp;quot; With their
purely extensional approach, the concept UNICORN
would be a subconcept of anything because the set of
all unicorns, being empty, is a subset of all other sets.
Three of the articles apply some form of semantic
networks to specific problems in computational lin-
guistics. In Re: The Gettysburg Address, Roger Schank
and Jaime Carbonell, Jr., analyze Lincoln&apos;s famous
prose as a stimulating challenge for conceptual depen-
dency (CD) theory. As a result of the analysis, they
extend the list of primitive CD ACTs with seven social
ACTs such as AUTHORIZE, ORDER, and PETI-
TION. The social ACTs are high-level concepts that
may optionally be expanded in terms of the low-level
primitives. Introducing them solves a common prob-
lem of CD theory: too much expansion of concept
nodes can lead to a combinatorial explosion of primi-
tive nodes. In Rule Forms for Verse, Sentences, and
Story Trees, Robert Simmons and Alfred Correira draw
some parallels between story generation, problem solv-
ing, and theorem proving. As examples, they cite
Meehan&apos;s Metanovel as well as some of their own
work. Although Meehan&apos;s underlying representation
uses conceptual dependency graphs instead of standard
predicate calculus, the output of his story generator
may be viewed as a trace of the steps taken by a clas-
sical theorem prover. In On Representing Common-
sense Knowledge, Benjamin Kuipers gives a working
definition of commonsense knowledge, discusses some
constraints on systems that have it, and then proposes
a representation based on a partial order and associa-
tive triples. His definition seems acceptable, but the
proposed representation is one of the least structured
in the book, and the example he gives is too limited to
show that the representation can support the defini-
tion.
Three other articles discuss systems that use some
form of semantic networks. In A Heuristic Information
Retrieval System Based on Associative Networks, Nicho-
las Findler mentions a keyword, ELIZA-like system
that he developed, proposes a new information retriev-
al system called IRUHS-1, describes some clustering
techniques for fuzzy retrieval, and then gives a sample
dialog that he would like IRUHS-1 to support. Yet
the dialog would require sophisticated syntax, seman-
tics, and deductive capabilities that the body of the
article never discusses. In Representations to Aid Dis-
tributed Understanding in a Multiprogram System,
Christopher Riesbeck discusses the interactions be-
tween the various programs developed by generations
of graduate students at the Yale Al Project. The arti-
cle is not intelligible in isolation, but anyone who has
been following the history of MARGIE, SAM, PAM,
and QUALM will find an interesting discussion of how
one program leaves notes for another one to elaborate.
In Five Aspects of a Full-Scale Story Comprehension
Model, Chuck Rieger proposes an integrated system
for understanding a real story, The Magic Grinder.
Like Schank and Carbonell, he introduces high-level
concepts like KISS instead of limiting the system to
the primitive ACTs of PTRANSing lips. Since some
of his techniques, such as parsing with word sense
networks, may have high overhead, his work in testing
them on a substantial body of text is necessary to
determine their practicality.
Various forms of [ associative I conceptual I
cognitive I partitioned I semantic I structured }
[dependency I inheritance] {graphs I nets I networks}
have major differences in notation, terminology, and
expressive power, but they develop similar network
solutions for their common problems of representing
knowledge in processing natural language. Yet many
areas remain to be developed:
</bodyText>
<listItem confidence="0.985903">
• None of the systems have a good analog of the
</listItem>
<bodyText confidence="0.563533166666667">
LISP QUOTE operator. Such a feature would
enable a system to distinguish between believing a
proposition and actually changing a model of the
world. A QUOTE operator is also necessary for
handling the phrase &amp;quot;dedicated to the proposition
that...&amp;quot; in Schank and Carbonell&apos;s example.
</bodyText>
<listItem confidence="0.899353411764706">
• Many of the systems have special case inference
rules for plausible or exact deduction, but ques-
tions of completeness and consistency are usually
ignored. Their relationship to various nonstan-
dard forms of logic (Leblanc 1973) must also be
investigated.
• Procedural techniques like Levesque and
Mylopoulos&apos;s will have to be refined and tested
on more complex examples than factorial.
American Journal of Computational Linguistics, Volume 6, Number 2, April-June 1980 111
Book Reviews Discourse Production - A Computer Model of Some Aspects of a Speaker
• Benign neglect of syntax was once a healthy reac-
tion to transformational grammar, but the field is
now mature enough to accommodate more syntac-
tic sophistication.
• And for practical systems, naturalness, readabili-
ty, and ease of use become crucial.
</listItem>
<bodyText confidence="0.953441272727273">
In summary, this book is an exciting record of work
in progress. It assumes too much background material
to be used as an introductory textbook, but it could be
used in a seminar course on knowledge representation,
either with supplementary lectures on logic and philos-
ophy or with programming exercises that show stu-
dents how to implement such networks. By presenting
fourteen systems in one volume, it invites detailed
comparisons that can help knowledge engineers select
the best features for their future designs.
John F. Sowa, IBM Systems Research Institute
</bodyText>
<sectionHeader confidence="0.754882" genericHeader="abstract">
References
</sectionHeader>
<reference confidence="0.875850607142857">
Bar-Hillel, Yehoshua (1960) &amp;quot;The present status of automatic
translation of languages,&amp;quot; in F. L. Alt, ed., Advances in Comput-
ers, vol. 1, Academic Press, New York, pp. 91-163.
Ceccato, Silvio (1956) &amp;quot;La grammatica insegnata alle machine,&amp;quot;
Civiltà delle Machine, Nos. 1 &amp; 2.
Ceccato, Silvio (1961) Linguistic Analysis and Programming for
Mechanical Translation, Gordon and Breach, New York.
Ceccato, Silvio (1962) &amp;quot;Automatic translation of languages,&amp;quot; pres-
ented at the NATO Summer School, Venice, July 1962; reprint-
ed in Information Storage and Retrieval, vol. 2, no. 3, pp. 105-
158, 1964.
Hays, David G. (1964) &amp;quot;Dependency theory: a formalism and
some observations,&amp;quot; Language, vol. 40, no. 4, pp. 511-525.
Klein, Sheldon (1965) &amp;quot;Automatic paraphrasing in essay format,&amp;quot;
Mechanical Translation, vol. 8, pp. 68-83.
Leblanc, Hughes, ed. (1973) Truth, Syntax, and Modality, North-
Holland Publishing Co., Amsterdam.
Schank, Roger C., &amp; Lawrence G. Tesler (1969) &amp;quot;A conceptual
parser for natural language,&amp;quot; Proceedings of the First LICAL pp.
569-578.
Tesniere, Lucien (1959) Elements de Syntaxe Structurale, Librairie
C. Klincksieck, Paris, second edition 1965.
Discourse Production -
A Computer Model of Some
Aspects of a Speaker
Anthony Davey
Edinburgh Univ. Press, Scotland, 1978,
170 pp., $16.00. ISBN 0-85224-339-1.
</reference>
<bodyText confidence="0.999875454545455">
&amp;quot;This book describes a computer program that
produces English discourse. The program is capable of
describing in a sequence of English sentences any
game of noughts and crosses (tic-tac-toe), whether
given or actually played with the program.&amp;quot; (From
the Preface.)
The game descriptions have several properties that
make them non-trivial. The entities of the game are
referred to by fairly natural English noun phrases,
making use of anaphora and standard constructions for
qualification (such as relative clauses), and taking
advantage of symmetry of the board. In many cases,
moves are described for their strategic value, and some
mistakes of the program&apos;s opponent are mentioned.
The following sentence produced by the program illus-
trates these properties. If you had blocked my line,
you would have threatened me, but you took the corner
adjacent to the one which you took first and so I won by
completing my line. This also illustrates that the pro-
gram uses connectors like and, but, so, and although, to
string clauses together in coherent discourse.
The grammatical theory used by the author is sys-
temic grammar, essentially the version developed by R.
A. Hudson in English Complex Sentences, North-
Holland, 1971. In this theory, a grammatical item
(such as a clause) is classified by an associated bundle
of features. Feature-realization rules determine a set
of functions (like SUBJECT) for constituents.
Structure-building rules manipulate functions, gather-
ing them into bundles, one for each constituent.
Function-realization rules associate feature bundles
with these function bundles, and the cycle continues,
down to the word level. On each level there is some
freedom of choice for the features of an item, but
there is a network of constraints on co-occurring fea-
tures called the system-network.
In Davey&apos;s adaptation, semantic representations are
carried along with the above sort of syntactic repre-
sentations, and &amp;quot;specialist&amp;quot; procedures are used to
determine features of grammatical items where there is
freedom left in the system-networks. The overall con-
trol, however, is not strictly top-down as in Hudson&apos;s
system described above. Sometimes specialist proce-
dures actually construct the English text for an item
before determining all of its features.
It is unfortunate that the book did not reach pub-
lished form earlier. The work was done in the period
1970-1973 as the author&apos;s thesis at Edinburgh Univer-
sity. A chapter devoted to A Review of Previous Sys-
tems essentially covers only what was published by
1972. The program does not take account of advances
made in systemic grammar since around 1972. Some
of the constructions made by the program seem less
direct than they should be, and this would be im-
proved in the light of later developments.
</bodyText>
<page confidence="0.5932875">
Michael C. McCord, University of Kentucky
112 American Journal of Computational Linguistics, Volume 6, Number 2, April-June 1980
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.005684">
<title confidence="0.997714">Book Reviews Associative Networks - Representation and Use of Knowledge by Computers</title>
<author confidence="0.989102">Nicholas V Findler</author>
<author confidence="0.989102">Editor</author>
<note confidence="0.727481">Academic Press, New York, 1979,</note>
<abstract confidence="0.986766302521008">462 pp., $42.50, ISBN 0-12-256380-8. Upon opening this book and leafing through the pages, one gets the impression of an important compendium. The fourteen articles provide good coverage of semantic networks and related systems for representing knowledge. Their average length of 33 pages is long enough to give each author reasonable scope, yet short enough to permit a variety of viewpoints to be expressed in a single volume. The editor should be commended for his efforts in putting together a wellorganized book instead of just another collection of unrelated papers. the first article, the Epistemological Status of Networks, Brachman surveys semantic networks since 1966 and introduces many of the issues that are discussed by other authors in later chapters. His main point is the need for greater structure in the nets than a uniform graph of concept nodes and relationship arcs. In his system, KLONE, generic concepts are themselves defined by a network, which is inherited either by individual concepts that are instances of the generic or by other generic concepts that represent subtypes of the higher level generic. As a survey, Brachman&apos;s article is good; but as a history, it is flawed by the common error that semantic networks &amp;quot;originated in the work of Quillian.&amp;quot; Yet semantic networks, like much of the Al work on natural language, are a re-invention of what was done for machine translation a decade earlier. In linguistics, the most extensive network representation was the dependency grammar by Lucien Tesniere (1959). Although Tesniere never used a computer himself, he had a strong influence on MT work in Europe. In the United States, dependency parsers were implemented by Hays (1964) and Klein (1965), whom Schank and Tesler (1969) cited as an influence on their work. Of the semantic networks for MT, the most sophisticated were the correlational nets by Silvio Ceccato (1956, 1961, 1962). His work was so advanced that Bar- Hillel (1960) dismissed it as &amp;quot;practically hopeless&amp;quot; because of its obscure speculations about &amp;quot;elements of thought.&amp;quot; Contrary to Brachman&apos;s claim that Carbonell&apos;s nets were the first to distinguish subtypes from instances of a type, Ceccato had distinct relafor species-genus, Other arcs in Ceccato&apos;s nets represented linguistic such as instrument, spatial such as covering, Ceccato implemented the typical Al mechanisms of inheritance of properties from genus to species and frame-like &amp;quot;constellations&amp;quot; which &amp;quot;indicate both the particular relations that extend from the analyzed thing, and the things that can satisfy these relations&amp;quot; (1961, p. 65). Given the concepts PAINTBRUSH and PICTURE, he could trace a path through a constellation to show that PAINTBRUSH was the instrument of PAINT and PICTURE was the result. Two other articles in the book introduce additional into semantic networks. In Procedural for Semantic Networks, Levesque and John Mylopoulos develop inheritance mechanisms similar to Brachman&apos;s, but with a different notation. Their main innovation is the merger of semantic networks with a network notation for procedures and PLANNER-like conditions for invoking the procedures. Their work forms a bridge between declarative forms of semantic nets and procedural languages for representation. In Preferences Active, Wilks extends his earlier work on preference semantics with more frame-like structures starts with an example from the shows how his system would deal with typical violations of selectional constraints. His analysis is worth reading by anyone who is programming computers to understand natural language, although it is unlikely that others will be quick to adopt Wilks&apos; exuberant terminology of formulas, templates, paraplates, semantic blocks, extractions, and pseudotexts. Several articles develop notations for representing and specifying their scope. In in Partitioned Networks, Hendrix presents a general method of nesting subnets inside of other nets. The nesting shows scope of quantifiers, but it could also support other uses for nested contexts such as modalities. Hendrix assumes that the occurrence of a concept automatically asserts its existence; but if a generic concept occurs in both the antecedent and the consequent of an implication, it is assumed to a universal quantifier. In Semantic and Camilla Schwind also use partitioning to show scope of quantifiers, but they append explicit existential or universal quantifiers to the generic concepts. Despite the title of their article, the authors do represent intensional information in the networks and present a good discussion of the distincbetween intensions and extensions. In Structure and Organization of a Semantic Net for Compreand Inference, Schubert, Randolph Goebel, and Nicholas Cercone introduce various kinds of dotted, dashed, and double links that show scope of Boolean operators, quantifiers, and modality. Their notation is less readable than Hendrix&apos;s or Janas and but they discuss general issues of organiz- 110 American Journal of Computational Linguistics, Volume 6, Number 2, April-June 1980 Book Reviews Associative Networks - Representation and Use of Knowledge by Computers ing and retrieving knowledge that would apply to alany representation. In SNePS Semantic Processing System, Shapiro presents an extensional approach to handling quantifiers with structure-building rules; &amp;quot;Every man loves some woman,&amp;quot; for example, corresponds to a rule that builds a structure for &amp;quot;x loves a woman y&amp;quot; whenever it finds a for a man approach works when all of the facts are represented in a single context. But to represent &amp;quot;Tom believes that every man loves some woman&apos;&apos; would require a strange nesting of structurebuilding rules inside the context of the verb complement of BELIEVE.</abstract>
<title confidence="0.501702">Predicate Calculus Based Semantic Network for</title>
<author confidence="0.796888">McSkimin Searching</author>
<author confidence="0.796888">Jack Minker</author>
<abstract confidence="0.997332474576271">present a solid, well-written article on sorted firstorder predicate calculus for data base inference. But calling their notation a semantic network is highly misleading. According to Brachman, the common thread that holds together the various forms of semantic networks is their use &amp;quot;in understanding natural language&amp;quot;; and according to Janas and Schwind, &amp;quot;intensionality is undoubtedly a constituent of any semantic network.&amp;quot; McSkimin and Minker&apos;s approach fails both of these criteria: they make no attempt to deal with natural language, and their semantic categories are &amp;quot;simply labels for a set of objects.&amp;quot; With their purely extensional approach, the concept UNICORN would be a subconcept of anything because the set of all unicorns, being empty, is a subset of all other sets. Three of the articles apply some form of semantic networks to specific problems in computational lin- In The Gettysburg Address, Schank and Jaime Carbonell, Jr., analyze Lincoln&apos;s famous prose as a stimulating challenge for conceptual dependency (CD) theory. As a result of the analysis, they extend the list of primitive CD ACTs with seven social ACTs such as AUTHORIZE, ORDER, and PETI- TION. The social ACTs are high-level concepts that may optionally be expanded in terms of the low-level primitives. Introducing them solves a common problem of CD theory: too much expansion of concept nodes can lead to a combinatorial explosion of priminodes. In Forms for Verse, Sentences, and Trees, Simmons and Alfred Correira draw some parallels between story generation, problem solving, and theorem proving. As examples, they cite Meehan&apos;s Metanovel as well as some of their own work. Although Meehan&apos;s underlying representation uses conceptual dependency graphs instead of standard predicate calculus, the output of his story generator may be viewed as a trace of the steps taken by a clastheorem prover. In Representing Common- Knowledge, Kuipers gives a working definition of commonsense knowledge, discusses some constraints on systems that have it, and then proposes a representation based on a partial order and associative triples. His definition seems acceptable, but the proposed representation is one of the least structured in the book, and the example he gives is too limited to show that the representation can support the definition. Three other articles discuss systems that use some of semantic networks. In Heuristic Information System Based on Associative Networks, Nicholas Findler mentions a keyword, ELIZA-like system that he developed, proposes a new information retrieval system called IRUHS-1, describes some clustering techniques for fuzzy retrieval, and then gives a sample dialog that he would like IRUHS-1 to support. Yet the dialog would require sophisticated syntax, semantics, and deductive capabilities that the body of the never discusses. In to Aid Distributed Understanding in a Multiprogram System, Christopher Riesbeck discusses the interactions between the various programs developed by generations of graduate students at the Yale Al Project. The article is not intelligible in isolation, but anyone who has been following the history of MARGIE, SAM, PAM, and QUALM will find an interesting discussion of how program leaves another one to elaborate. Aspects of a Full-Scale Story Comprehension Rieger proposes an integrated system understanding a real story, Magic Grinder. Like Schank and Carbonell, he introduces high-level concepts like KISS instead of limiting the system to the primitive ACTs of PTRANSing lips. Since some of his techniques, such as parsing with word sense networks, may have high overhead, his work in testing them on a substantial body of text is necessary to determine their practicality. Various forms of [ associative I conceptual I cognitive I partitioned I semantic I structured } [dependency I inheritance] {graphs I nets I networks} have major differences in notation, terminology, and expressive power, but they develop similar network solutions for their common problems of representing knowledge in processing natural language. Yet many areas remain to be developed: • None of the systems have a good analog of the LISP QUOTE operator. Such a feature would enable a system to distinguish between believing a proposition and actually changing a model of the world. A QUOTE operator is also necessary for handling the phrase &amp;quot;dedicated to the proposition that...&amp;quot; in Schank and Carbonell&apos;s example. • Many of the systems have special case inference rules for plausible or exact deduction, but questions of completeness and consistency are usually ignored. Their relationship to various nonstandard forms of logic (Leblanc 1973) must also be investigated. • Procedural techniques like Levesque and Mylopoulos&apos;s will have to be refined and tested on more complex examples than factorial. American Journal of Computational Linguistics, Volume 6, Number 2, April-June 1980 111 Book Reviews Discourse Production - A Computer Model of Some Aspects of a Speaker • Benign neglect of syntax was once a healthy reaction to transformational grammar, but the field is now mature enough to accommodate more syntactic sophistication. • And for practical systems, naturalness, readability, and ease of use become crucial. In summary, this book is an exciting record of work in progress. It assumes too much background material to be used as an introductory textbook, but it could be used in a seminar course on knowledge representation, either with supplementary lectures on logic and philosophy or with programming exercises that show students how to implement such networks. By presenting fourteen systems in one volume, it invites detailed comparisons that can help knowledge engineers select the best features for their future designs.</abstract>
<note confidence="0.987622541666667">F. Sowa, Systems Research Institute References Bar-Hillel, Yehoshua (1960) &amp;quot;The present status of automatic of languages,&amp;quot; in F. L. Alt, ed., in Comput- 1, Academic Press, New York, pp. 91-163. Ceccato, Silvio (1956) &amp;quot;La grammatica insegnata alle machine,&amp;quot; Machine, 1 &amp; 2. Silvio (1961) Analysis and Programming for Translation, and Breach, New York. Ceccato, Silvio (1962) &amp;quot;Automatic translation of languages,&amp;quot; presented at the NATO Summer School, Venice, July 1962; reprintin Storage and Retrieval, 2, no. 3, pp. 105- 158, 1964. Hays, David G. (1964) &amp;quot;Dependency theory: a formalism and observations,&amp;quot; 40, no. 4, pp. 511-525. Klein, Sheldon (1965) &amp;quot;Automatic paraphrasing in essay format,&amp;quot; Translation, 8, pp. 68-83. Hughes, ed. (1973) Syntax, and Modality, North- Holland Publishing Co., Amsterdam. Schank, Roger C., &amp; Lawrence G. Tesler (1969) &amp;quot;A conceptual for natural language,&amp;quot; of the First LICAL 569-578. Lucien (1959) de Syntaxe Structurale, C. Klincksieck, Paris, second edition 1965.</note>
<title confidence="0.981796">Discourse Production - A Computer Model of Some Aspects of a Speaker</title>
<author confidence="0.980752">Anthony Davey</author>
<affiliation confidence="0.6836">Edinburgh Univ. Press, Scotland, 1978,</affiliation>
<address confidence="0.479136">170 pp., $16.00. ISBN 0-85224-339-1.</address>
<abstract confidence="0.9368714">amp;quot;This book describes a computer program that produces English discourse. The program is capable of describing in a sequence of English sentences any game of noughts and crosses (tic-tac-toe), whether given or actually played with the program.&amp;quot; (From the Preface.) The game descriptions have several properties that make them non-trivial. The entities of the game are referred to by fairly natural English noun phrases, making use of anaphora and standard constructions for qualification (such as relative clauses), and taking advantage of symmetry of the board. In many cases, moves are described for their strategic value, and some mistakes of the program&apos;s opponent are mentioned. The following sentence produced by the program illusthese properties. you had blocked my line, you would have threatened me, but you took the corner adjacent to the one which you took first and so I won by my line. also illustrates that the prouses connectors like but, so, string clauses together in coherent discourse. The grammatical theory used by the author is systemic grammar, essentially the version developed by R. Hudson in Complex Sentences, North- Holland, 1971. In this theory, a grammatical item (such as a clause) is classified by an associated bundle features. determine a set SUBJECT) for constituents. manipulate functions, gathering them into bundles, one for each constituent. associate feature bundles with these function bundles, and the cycle continues, down to the word level. On each level there is some freedom of choice for the features of an item, but there is a network of constraints on co-occurring feacalled the In Davey&apos;s adaptation, semantic representations are carried along with the above sort of syntactic representations, and &amp;quot;specialist&amp;quot; procedures are used to determine features of grammatical items where there is freedom left in the system-networks. The overall control, however, is not strictly top-down as in Hudson&apos;s system described above. Sometimes specialist procedures actually construct the English text for an item all of its features. It is unfortunate that the book did not reach published form earlier. The work was done in the period 1970-1973 as the author&apos;s thesis at Edinburgh Univer- A chapter devoted to Review of Previous Syscovers only what was published by 1972. The program does not take account of advances made in systemic grammar since around 1972. Some of the constructions made by the program seem less direct than they should be, and this would be improved in the light of later developments.</abstract>
<note confidence="0.9765325">C. McCord, of Kentucky Journal of Computational Linguistics, Volume 6, Number 2, April-June 1980</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Yehoshua Bar-Hillel</author>
</authors>
<title>The present status of automatic translation of languages,&amp;quot;</title>
<date>1960</date>
<booktitle>Advances in Computers,</booktitle>
<volume>1</volume>
<pages>91--163</pages>
<editor>in F. L. Alt, ed.,</editor>
<publisher>Academic Press,</publisher>
<location>New York,</location>
<marker>Bar-Hillel, 1960</marker>
<rawString>Bar-Hillel, Yehoshua (1960) &amp;quot;The present status of automatic translation of languages,&amp;quot; in F. L. Alt, ed., Advances in Computers, vol. 1, Academic Press, New York, pp. 91-163.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Silvio Ceccato</author>
</authors>
<title>La grammatica insegnata alle machine,&amp;quot;</title>
<date>1956</date>
<journal>Civiltà delle Machine, Nos.</journal>
<volume>1</volume>
<contexts>
<context position="2071" citStr="Ceccato (1956" startWordPosition="338" endWordPosition="339">ntic networks, like much of the Al work on natural language, are a re-invention of what was done for machine translation a decade earlier. In linguistics, the most extensive network representation was the dependency grammar by Lucien Tesniere (1959). Although Tesniere never used a computer himself, he had a strong influence on MT work in Europe. In the United States, dependency parsers were implemented by Hays (1964) and Klein (1965), whom Schank and Tesler (1969) cited as an influence on their work. Of the semantic networks for MT, the most sophisticated were the correlational nets by Silvio Ceccato (1956, 1961, 1962). His work was so advanced that BarHillel (1960) dismissed it as &amp;quot;practically hopeless&amp;quot; because of its obscure speculations about &amp;quot;elements of thought.&amp;quot; Contrary to Brachman&apos;s claim that Carbonell&apos;s nets were the first to distinguish subtypes from instances of a type, Ceccato had distinct relations for member-class, species-genus, and part-whole. Other arcs in Ceccato&apos;s nets represented linguistic cases such as object, instrument, and result and spatial relations such as containing, covering, and contiguity. Ceccato implemented the typical Al mechanisms of inheritance of propertie</context>
</contexts>
<marker>Ceccato, 1956</marker>
<rawString>Ceccato, Silvio (1956) &amp;quot;La grammatica insegnata alle machine,&amp;quot; Civiltà delle Machine, Nos. 1 &amp; 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Silvio Ceccato</author>
</authors>
<title>Linguistic Analysis and Programming for Mechanical Translation, Gordon and Breach,</title>
<date>1961</date>
<location>New York.</location>
<marker>Ceccato, 1961</marker>
<rawString>Ceccato, Silvio (1961) Linguistic Analysis and Programming for Mechanical Translation, Gordon and Breach, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Silvio Ceccato</author>
</authors>
<title>Automatic translation of languages,&amp;quot; presented at the NATO Summer School,</title>
<date>1962</date>
<journal>Information Storage and Retrieval,</journal>
<volume>2</volume>
<pages>105--158</pages>
<location>Venice,</location>
<note>reprinted in</note>
<marker>Ceccato, 1962</marker>
<rawString>Ceccato, Silvio (1962) &amp;quot;Automatic translation of languages,&amp;quot; presented at the NATO Summer School, Venice, July 1962; reprinted in Information Storage and Retrieval, vol. 2, no. 3, pp. 105-158, 1964.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David G Hays</author>
</authors>
<title>Dependency theory: a formalism and some observations,&amp;quot;</title>
<date>1964</date>
<journal>Language,</journal>
<volume>40</volume>
<pages>511--525</pages>
<contexts>
<context position="1878" citStr="Hays (1964)" startWordPosition="306" endWordPosition="307"> of the higher level generic. As a survey, Brachman&apos;s article is good; but as a history, it is flawed by the common error that semantic networks &amp;quot;originated in the work of Quillian.&amp;quot; Yet semantic networks, like much of the Al work on natural language, are a re-invention of what was done for machine translation a decade earlier. In linguistics, the most extensive network representation was the dependency grammar by Lucien Tesniere (1959). Although Tesniere never used a computer himself, he had a strong influence on MT work in Europe. In the United States, dependency parsers were implemented by Hays (1964) and Klein (1965), whom Schank and Tesler (1969) cited as an influence on their work. Of the semantic networks for MT, the most sophisticated were the correlational nets by Silvio Ceccato (1956, 1961, 1962). His work was so advanced that BarHillel (1960) dismissed it as &amp;quot;practically hopeless&amp;quot; because of its obscure speculations about &amp;quot;elements of thought.&amp;quot; Contrary to Brachman&apos;s claim that Carbonell&apos;s nets were the first to distinguish subtypes from instances of a type, Ceccato had distinct relations for member-class, species-genus, and part-whole. Other arcs in Ceccato&apos;s nets represented ling</context>
</contexts>
<marker>Hays, 1964</marker>
<rawString>Hays, David G. (1964) &amp;quot;Dependency theory: a formalism and some observations,&amp;quot; Language, vol. 40, no. 4, pp. 511-525.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sheldon Klein</author>
</authors>
<title>Automatic paraphrasing in essay format,&amp;quot;</title>
<date>1965</date>
<journal>Mechanical Translation,</journal>
<volume>8</volume>
<pages>68--83</pages>
<contexts>
<context position="1895" citStr="Klein (1965)" startWordPosition="309" endWordPosition="310">evel generic. As a survey, Brachman&apos;s article is good; but as a history, it is flawed by the common error that semantic networks &amp;quot;originated in the work of Quillian.&amp;quot; Yet semantic networks, like much of the Al work on natural language, are a re-invention of what was done for machine translation a decade earlier. In linguistics, the most extensive network representation was the dependency grammar by Lucien Tesniere (1959). Although Tesniere never used a computer himself, he had a strong influence on MT work in Europe. In the United States, dependency parsers were implemented by Hays (1964) and Klein (1965), whom Schank and Tesler (1969) cited as an influence on their work. Of the semantic networks for MT, the most sophisticated were the correlational nets by Silvio Ceccato (1956, 1961, 1962). His work was so advanced that BarHillel (1960) dismissed it as &amp;quot;practically hopeless&amp;quot; because of its obscure speculations about &amp;quot;elements of thought.&amp;quot; Contrary to Brachman&apos;s claim that Carbonell&apos;s nets were the first to distinguish subtypes from instances of a type, Ceccato had distinct relations for member-class, species-genus, and part-whole. Other arcs in Ceccato&apos;s nets represented linguistic cases such</context>
</contexts>
<marker>Klein, 1965</marker>
<rawString>Klein, Sheldon (1965) &amp;quot;Automatic paraphrasing in essay format,&amp;quot; Mechanical Translation, vol. 8, pp. 68-83.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hughes Leblanc</author>
<author>ed</author>
</authors>
<title>Truth, Syntax, and Modality,</title>
<date>1973</date>
<publisher>NorthHolland Publishing Co.,</publisher>
<location>Amsterdam.</location>
<marker>Leblanc, ed, 1973</marker>
<rawString>Leblanc, Hughes, ed. (1973) Truth, Syntax, and Modality, NorthHolland Publishing Co., Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger C Schank</author>
<author>Lawrence G Tesler</author>
</authors>
<title>A conceptual parser for natural language,&amp;quot;</title>
<date>1969</date>
<booktitle>Proceedings of the First LICAL</booktitle>
<pages>569--578</pages>
<contexts>
<context position="1926" citStr="Schank and Tesler (1969)" startWordPosition="312" endWordPosition="315">survey, Brachman&apos;s article is good; but as a history, it is flawed by the common error that semantic networks &amp;quot;originated in the work of Quillian.&amp;quot; Yet semantic networks, like much of the Al work on natural language, are a re-invention of what was done for machine translation a decade earlier. In linguistics, the most extensive network representation was the dependency grammar by Lucien Tesniere (1959). Although Tesniere never used a computer himself, he had a strong influence on MT work in Europe. In the United States, dependency parsers were implemented by Hays (1964) and Klein (1965), whom Schank and Tesler (1969) cited as an influence on their work. Of the semantic networks for MT, the most sophisticated were the correlational nets by Silvio Ceccato (1956, 1961, 1962). His work was so advanced that BarHillel (1960) dismissed it as &amp;quot;practically hopeless&amp;quot; because of its obscure speculations about &amp;quot;elements of thought.&amp;quot; Contrary to Brachman&apos;s claim that Carbonell&apos;s nets were the first to distinguish subtypes from instances of a type, Ceccato had distinct relations for member-class, species-genus, and part-whole. Other arcs in Ceccato&apos;s nets represented linguistic cases such as object, instrument, and res</context>
</contexts>
<marker>Schank, Tesler, 1969</marker>
<rawString>Schank, Roger C., &amp; Lawrence G. Tesler (1969) &amp;quot;A conceptual parser for natural language,&amp;quot; Proceedings of the First LICAL pp. 569-578.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lucien Tesniere</author>
</authors>
<title>Elements de Syntaxe Structurale, Librairie C. Klincksieck, Paris, second edition</title>
<date>1959</date>
<contexts>
<context position="1707" citStr="Tesniere (1959)" startWordPosition="277" endWordPosition="278">ts are themselves defined by a network, which is inherited either by individual concepts that are instances of the generic or by other generic concepts that represent subtypes of the higher level generic. As a survey, Brachman&apos;s article is good; but as a history, it is flawed by the common error that semantic networks &amp;quot;originated in the work of Quillian.&amp;quot; Yet semantic networks, like much of the Al work on natural language, are a re-invention of what was done for machine translation a decade earlier. In linguistics, the most extensive network representation was the dependency grammar by Lucien Tesniere (1959). Although Tesniere never used a computer himself, he had a strong influence on MT work in Europe. In the United States, dependency parsers were implemented by Hays (1964) and Klein (1965), whom Schank and Tesler (1969) cited as an influence on their work. Of the semantic networks for MT, the most sophisticated were the correlational nets by Silvio Ceccato (1956, 1961, 1962). His work was so advanced that BarHillel (1960) dismissed it as &amp;quot;practically hopeless&amp;quot; because of its obscure speculations about &amp;quot;elements of thought.&amp;quot; Contrary to Brachman&apos;s claim that Carbonell&apos;s nets were the first to d</context>
</contexts>
<marker>Tesniere, 1959</marker>
<rawString>Tesniere, Lucien (1959) Elements de Syntaxe Structurale, Librairie C. Klincksieck, Paris, second edition 1965.</rawString>
</citation>
<citation valid="false">
<title>Discourse Production -A Computer Model of Some Aspects of a Speaker Anthony Davey</title>
<marker></marker>
<rawString>Discourse Production -A Computer Model of Some Aspects of a Speaker Anthony Davey</rawString>
</citation>
<citation valid="true">
<authors>
<author>Edinburgh Univ</author>
</authors>
<date>1978</date>
<pages>170--16</pages>
<publisher>Press,</publisher>
<location>Scotland,</location>
<marker>Univ, 1978</marker>
<rawString>Edinburgh Univ. Press, Scotland, 1978, 170 pp., $16.00. ISBN 0-85224-339-1.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>