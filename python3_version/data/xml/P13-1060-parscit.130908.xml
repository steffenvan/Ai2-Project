<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.993854">
Decipherment Complexity in 1:1 Substitution Ciphers
</title>
<author confidence="0.948097">
Malte Nuhn and Hermann Ney
</author>
<affiliation confidence="0.940709">
Human Language Technology and Pattern Recognition
Computer Science Department, RWTH Aachen University, Aachen, Germany
</affiliation>
<email confidence="0.971013">
&lt;surname&gt;@cs.rwth-aachen.de
</email>
<sectionHeader confidence="0.997076" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999015692307692">
In this paper we show that even for the
case of 1:1 substitution ciphers—which
encipher plaintext symbols by exchang-
ing them with a unique substitute—finding
the optimal decipherment with respect to a
bigram language model is NP-hard. We
show that in this case the decipherment
problem is equivalent to the quadratic as-
signment problem (QAP). To the best of
our knowledge, this connection between
the QAP and the decipherment problem
has not been known in the literature be-
fore.
</bodyText>
<sectionHeader confidence="0.999394" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99996688">
The decipherment approach for MT has recently
gained popularity for training and adapting trans-
lation models using only monolingual data. The
general idea is to find those translation model
parameters that maximize the probability of the
translations of a given source text in a given lan-
guage model of the target language.
In general, the process of translation has a wide
range of phenomena like substitution and reorder-
ing of words and phrases. In this paper we only
study models that substitute tokens—i.e. words
or letters—with a unique substitute. It therefore
serves as a very basic case for decipherment and
machine translation.
Multiple techniques like integer linear program-
ming (ILP), A∗ search, genetic algorithms, and
Bayesian inference have been used to tackle the
decipherment problem for 1:1 substitution ciphers.
The existence of such a variety of different ap-
proaches for solving the same problem already
shows that there is no obvious way to solve the
problem optimally.
In this paper we show that decipherment of 1:1
substitution ciphers is indeed NP-hard and thus ex-
plain why there is no single best approach to the
problem. The literature on decipherment provides
surprisingly little on the analysis of the complexity
of the decipherment problem. This might be re-
lated to the fact that a statistical formulation of the
decipherment problem has not been analyzed with
respect to n-gram language models: This paper
shows the close relationship of the decipherment
problem to the quadratic assignment problem. To
the best of our knowledge the connection between
the decipherment problem and the quadratic as-
signment problem was not known.
The remainder of this paper is structured as
follows: In Section 2 we review related work.
Section 3 introduces the decipherment problem
and describes the notation and definitions used
throughout this paper. In Section 4 we show that
decipherment using a unigram language model
corresponds to solving a linear sum assignment
problem (LSAP). Section 5 shows the connection
between the quadratic assignment problem and de-
cipherment using a bigram language model. Here
we also give a reduction of the traveling sales-
man problem (TSP) to the decipherment problem
to highlight the additional complexity in the deci-
pherment problem.
</bodyText>
<sectionHeader confidence="0.999947" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999974916666667">
In recent years a large number of publications
on the automatic decipherment of substitution ci-
phers has been published. These publications were
mostly dominated by rather heuristic methods and
did not provide a theoretical analysis of the com-
plexity of the decipherment problem: (Knight and
Yamada, 1999) and (Knight et al., 2006) use the
EM algorithm for various decipherment problems,
like e.g. word substitution ciphers. (Ravi and
Knight, 2008) and (Corlett and Penn, 2010) are
able to obtain optimal (i.e. without search errors)
decipherments of short cryptograms given an n-
</bodyText>
<page confidence="0.981618">
615
</page>
<note confidence="0.914343">
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621,
Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics
</note>
<bodyText confidence="0.99964480952381">
gram language model. (Ravi and Knight, 2011),
(Nuhn et al., 2012), and (Dou and Knight, 2012)
treat natural language translation as a deciphering
problem including phenomena like reordering, in-
sertion, and deletion and are able to train transla-
tion models using only monolingual data.
In this paper we will show the connection be-
tween the decipherment problem and the linear
sum assignment problem as well as the quadratic
assignment problem: Regarding the linear sum as-
signment problem we will make use of definitions
presented in (Burkard and ela, 1999). Concern-
ing the quadratic assignment problem we will use
basic definitions from (Beckmann and Koopmans,
1957). Further (Burkard et al., 1998) gives a good
overview over the quadratic assignment problem,
including different formulations, solution meth-
ods, and an analysis of computational complexity.
The paper also references a vast amount of fur-
ther literature that might be interesting for future
research.
</bodyText>
<sectionHeader confidence="0.997867" genericHeader="method">
3 Definitions
</sectionHeader>
<bodyText confidence="0.9973945">
In the following we will use the machine trans-
lation notation and denote the ciphertext with
</bodyText>
<equation confidence="0.9947126">
fN1 = f1 ... fj ... fN which consists of cipher
tokens fj ∈ Vf. We denote the plaintext with
eN1 = e1 ... ei ... eN (and its vocabulary Ve re-
spectively). We define
e0 = f0 = eN+1 = fN+1 = $ (1)
</equation>
<bodyText confidence="0.997954444444444">
with “$” being a special sentence boundary token.
We use the abbreviations V e = Ve ∪ {$} and V f
respectively.
A general substitution cipher uses a table
s(e|f) which contains for each cipher token f a
probability that the token f is substituted with the
plaintext token e. Such a table for substituting
cipher tokens {A, B, C, D} with plaintext tokens
{a, b, c, d} could for example look like
</bodyText>
<figure confidence="0.3869272">
a b c d
A 0.1 0.2 0.3 0.4
B 0.4 0.2 0.1 0.3
C 0.4 0.1 0.2 0.3
D 0.3 0.4 0.2 0.1
</figure>
<bodyText confidence="0.938011375">
The 1:1 substitution cipher encrypts a given
plaintext into a ciphertext by replacing each plain-
text token with a unique substitute: This means
that the table s(e|f) contains all zeroes, except for
one “1.0” per f ∈ Vf and one “1.0” per e ∈ Ve.
For example the text
abadcab
would be enciphered to
</bodyText>
<equation confidence="0.572729714285714">
BCBADBC
when using the substitution
a b c d
A 0 0 0 1
B 1 0 0 0
C 0 1 0 0
D 0 0 1 0
</equation>
<bodyText confidence="0.99996025">
We formalize the 1:1 substitutions with a bijective
function φ : Vf → Ve. The general decipher-
ment goal is to obtain a mapping φ such that the
probability of the deciphered text is maximal:
</bodyText>
<equation confidence="0.9939605">
φˆ = arg max p(φ(f1)φ(f2)φ(f3)...φ(fN)) (2)
φ
</equation>
<bodyText confidence="0.9972398">
Here p(... ) denotes the language model. De-
pending on the structure of the language model
Equation 2 can be further simplified.
Given a ciphertext fN1 , we define the unigram
count Nf of f ∈ V f as1
</bodyText>
<equation confidence="0.9975045">
Nf = N+1E δ(f, fi) (3)
i=0
</equation>
<bodyText confidence="0.866100333333333">
This implies that Nf are integer counts &gt; 0. We
similarly define the bigram count Nff0 of f, f� ∈
V f as
</bodyText>
<equation confidence="0.997623333333333">
N+1
Nff0 = δ(f, fi−1) · δ(f&apos;, fi) (4)
i=1
</equation>
<bodyText confidence="0.921879">
This definition implies that
</bodyText>
<listItem confidence="0.874728">
(a) Nff0 are integer counts &gt; 0 of bigrams found
in the ciphertext fN1 .
(b) Given the first and last token of the cipher f1
and fN, the bigram counts involving the sen-
tence boundary token $ need to fulfill
</listItem>
<equation confidence="0.9253194">
N$f = δ(f, f1) (5)
Nf$ = δ(f, fN) (6)
(c) For all f ∈ Vf
E Nff0 = E Nf0f (7)
f0EVf f0EVf
</equation>
<bodyText confidence="0.383983">
must hold.
</bodyText>
<footnote confidence="0.991403">
1Here δ denotes the Kronecker delta.
</footnote>
<page confidence="0.998087">
616
</page>
<bodyText confidence="0.99963">
Similarly, we define language model matrices S
for the unigram and the bigram case. The uni-
gram language model Sf is defined as
</bodyText>
<figure confidence="0.669999">
Sf = log p(f) (8)
which implies that
(a) Sf are real numbers with
Sf E [−00,0] (9)
(b) The following normalization constraint holds:
</figure>
<equation confidence="0.6440065">
X exp(Sf) = 1 (10)
fEVf
</equation>
<bodyText confidence="0.7872395">
Similarly for the bigram language model matrix
Sff0, we define
</bodyText>
<equation confidence="0.5597175">
Sff0 = log p(f&apos;|f) (11)
This definition implies that
(a) Sff0 are real numbers with
Sff0 E [−00, 0] (12)
</equation>
<figureCaption confidence="0.88892">
Figure 1: Linear sum assignment problem for a
cipher with Ve = {a, b, c}, Vf = {A, B, C}, uni-
gram counts Nf, and unigram probabilities p(e).
</figureCaption>
<subsectionHeader confidence="0.998031">
4.2 The Linear Sum Assignment Problem
</subsectionHeader>
<bodyText confidence="0.994510444444444">
The practical problem behind the linear sum
assignment problem can be described as fol-
lows: Given jobs {j1, ... , jn} and workers
{w1, ... , wn}, the task is to assign each job ji to a
worker wj. Each assignment incurs a cost cij and
the total cost for assigning all jobs and workers is
to be minimized.
This can be formalized as finding the assign-
ment
</bodyText>
<figure confidence="0.994846083333333">
a
b
c
Ve Vf
A cij A B C
B a NA logp(a) NB logp(a) NC logp(a)
b NA logp(b) NB logp(b) NC logp(b)
c NA log p(c) NB log p(c) NC log p(c)
C
(b) For the sentence boundary symbol, it holds φˆ = arg min Xn ciφ(i) (18)
that φ i=1
Sgg = −00 (13)
</figure>
<listItem confidence="0.763573">
(c) For all f E Vf the following normalization
constraint holds:
</listItem>
<equation confidence="0.985294">
X exp(Sff0) = 1 (14)
</equation>
<bodyText confidence="0.581684">
f0EVf
</bodyText>
<sectionHeader confidence="0.995269" genericHeader="method">
4 Decipherment Using Unigram LMs
</sectionHeader>
<subsectionHeader confidence="0.999467">
4.1 Problem Definition
</subsectionHeader>
<bodyText confidence="0.993627">
When using a unigram language model, Equa-
tion 2 simplifies to finding
</bodyText>
<equation confidence="0.7300315">
φˆ = arg max
φ
=
which can be rewritten as
arg max X NfSφ(f) (16)
φ fEVf
</equation>
<bodyText confidence="0.9832265">
When defining cff0 = Nf log p(f&apos;), for f, f&apos; E
Vf, Equation 16 can be brought into the form of
</bodyText>
<equation confidence="0.885133666666667">
X
φˆ = arg max cfφ(f) (17)
φ fEVf
</equation>
<bodyText confidence="0.970953857142857">
Figure 1 shows an illustration of this problem.
The general LSAP can be solved in polynomial
time using the Hungarian algorithm (Kuhn, 1955).
However, since the matrix cij occurring for the de-
cipherment using a unigram language model can
be represented as the product cij = ai · bj the
decipherment problem can be solved more easily:
In the Section “Optimal Matching”, (Bauer, 2010)
shows that in this case the optimal assignment is
found by sorting the jobs ji by ai and workers wj
by bj and then assigning the jobs ji to workers wj
that have the same rank in the respective sorted
lists. Sorting and then assigning the elements can
be done in O(n log n).
</bodyText>
<sectionHeader confidence="0.954749" genericHeader="method">
5 Decipherment Using Bigram LMs
</sectionHeader>
<subsectionHeader confidence="0.983009">
5.1 Problem Definition
</subsectionHeader>
<bodyText confidence="0.99932">
When using a 2-gram language model, Equation 2
simplifies to
</bodyText>
<equation confidence="0.9994004">
φˆ = arg max ⎧ N+1Y p(φ(fj)|φ(fj−1)) ⎫ (19)
φ ⎨ j=1 ⎬
⎩ ⎭
YN p(φ(fi)) (15)
i=1
</equation>
<page confidence="0.684364">
617
</page>
<figure confidence="0.863066925925926">
n
j=1
{ n
i=1
as finding
φˆ = arg min
φ
where A = (aij),B = (bij),C = (cij) E Nn×n
and φ a permutation
φ : {1,...,n} → {1,...,n}. (22)
Assignments Flows
l1 l2 l3 l4 f1 f2 f3 f4
f1 f2 f3 f4 f1 1
f1 f4 f3 f2 f2 1 1
y f3 1
f4
x
l1
l2
l3
l4
aijbφ(i)φ(j) +
}
ciφ(i)
n
i=1
(21)
</figure>
<figureCaption confidence="0.794883">
Figure 2: Hypothetical quadratic assignment prob-
lem with locations l1 ... l4 and facilities f1 . . . f4
</figureCaption>
<bodyText confidence="0.983225">
with all flows being zero except f1 ↔ f2 and
f3 ↔ f4. The distance between locations l1 ... l4
is implicitly given by the locations in the plane,
implying a euclidean metric. Two example assign-
ments (a) and (b) are shown, with (b) having the
lower overall costs.
Using the definitions from Section 3, Equation 19
can be rewritten as
</bodyText>
<equation confidence="0.888993">
φˆ = arg max { � � Nff0Sφ(f)φ(f0) } (20)
φ f∈Vf f0∈Vf
</equation>
<bodyText confidence="0.999717571428572">
(Bauer, 2010) arrives at a similar optimization
problem for the “combined method of frequency
matching” using bigrams and mentions that it can
be seen as a combinatorial problem for which an
efficient way of solving is not known. However,
he does not mention the close connection to the
quadratic assignment problem.
</bodyText>
<subsectionHeader confidence="0.9961">
5.2 The Quadratic Assignment Problem
</subsectionHeader>
<bodyText confidence="0.994509631578947">
The quadratic assignment problem was introduced
by (Beckmann and Koopmans, 1957) for the fol-
lowing real-life problem:
Given a set of facilities {f1, ... , fn} and a set
of locations {l1, ... , ln} with distances for each
pair of locations, and flows for each pair of facili-
ties (e.g. the amount of supplies to be transported
between a pair of facilities) the problem is to as-
sign the facilities to locations such that the sum
of the distances multiplied by the corresponding
flows (which can be interpreted as total transporta-
tion costs) is minimized. This is visualized in Fig-
ure 2.
Following (Beckmann and Koopmans, 1957)
we can express the quadratic assignment problem
This formulation is often referred to as Koopman-
Beckman QAP and often abbreviated as
QAP(A, B, C). The so-called pure or ho-
mogeneous QAP
</bodyText>
<equation confidence="0.835506">
φˆ = arg min
φ
</equation>
<bodyText confidence="0.992633076923077">
is obtained by setting cij = 0, and is often denoted
as QAP(A, B).
In terms of the real-life problem presented in
(Beckmann and Koopmans, 1957) the matrix A
can be interpreted as distance matrix for loca-
tions {l1 ... ln} and B as flow matrix for facilities
{f1 ... fn}.
(Sahni and Gonzalez, 1976) show that the
quadratic assignment problem is strongly NP-
hard.
We will now show the relation between the
quadratic assignment problem and the decipher-
ment problem.
</bodyText>
<subsectionHeader confidence="0.9482055">
5.3 Decipherment Problem � Quadratic
Assignment Problem
</subsectionHeader>
<bodyText confidence="0.999368888888889">
Every decipherment problem is directly a
quadratic assignment problem, since the ma-
trices Nff0 and Sff0 are just special cases of
the general matrices A and B required for the
quadratic assignment problem. Thus a reduction
from the decipherment problem to the quadratic
assignment problem is trivial. This means that all
algorithms capable of solving QAPs can directly
be used to solve the decipherment problem.
</bodyText>
<subsectionHeader confidence="0.987102">
5.4 Quadratic Assignment Problem �
Decipherment Problem
</subsectionHeader>
<bodyText confidence="0.9998996">
Given QAP(A, B) with integer matrices A =
(aij), B = (bij) i, j E {1, ... , n} we construct
the count matrix Nff0 and language model ma-
trix Sff0 in such a way that the solution for the
decipherment problem implies the solution to the
</bodyText>
<equation confidence="0.953308">
{ n n aijbφ(i)φ(j) } (23)
i=1 j=1
</equation>
<page confidence="0.9746755">
618
619
</page>
<figure confidence="0.905744242424242">
B˜ for f E
φ(f) E
˜B. Further, by enumerating all
B˜ induces a score of
the φ with φ(f) = f for f E
n+3X
f=1
n+3X
f0=1
Nff0 = P Nf0f:
f0
Nff0Sφ(f)φ(f0) (28)
(c) Regarding the properties P
f0
X˜af* +
f0
X˜a*f +
f0
˜aff0 =
˜af0f + δ(f,1)
(24)
which holds by construction of ˜a*f and
˜af*.
• For f = n+1 the count property is equiv-
alent to
to
X
X
X
+
X
+
Nff0Sφ(f)f0
Nff0Sφ(f)φ(f0)
A˜
A˜
A˜
B˜
fE
fE
fE
f0E
 |{z }
(AB)
 |{z }
(AA)
X
X
X
X
+
Nff0Sff0
Nff0Sfφ(f0)
A˜
B˜
B˜
B˜
fE
fE
f0E
f0E
 |{z }
(BB)
 |{z }
(BA)
Here
X
1 +
f0
X˜af0* = 2 + ˜a*f0 (25)
f0
and
bf E
A˜: Nf,n+2 = 0 (30)
bf&apos; E
˜A,f E B˜: Sff0 = Sf1 (31)
quadratic assignment problem, and vice versa. We
will use the vocabularies V e = V f = {1, ... , n +
3}, with n + 3 being the special sentence bound-
ary token “$”. The construction of Nff0 and Sff0
is shown in Figure 3.
To show the validity of our construction, we will
1. Show that Nff0 is a valid count matrix.
2. Show that Sff0 is a valid bigram language
model matrix.
3. Show that the decipherment problem and
the newly constructed quadratic assignment
problem are equivalent.
We start by showing that Nff0 is a valid count
matrix:
(a) By construction, Nff0 has integer counts that
are greater or equal to 0.
(b) By construction, Nff0 at boundaries is:
• N$f = δ(f,1)
• Nf$ = δ(f, n + 2)
(c) By the construction of ˜bf*, the values Sff0 ful-
fill P f0 exp(Sff0) = 1 for all f. This works
since all entries ˜bff0 are chosen to be smaller
than −log(n + 2).
</figure>
<bodyText confidence="0.933265">
We now show the equivalence of the quadratic
assignment problem and the newly constructed de-
cipherment problem. For this we will use the defi-
nitions
</bodyText>
<equation confidence="0.6890615">
A˜ = {1, ... , n}
B˜ = {n + 1,n + 2,n + 3}
</equation>
<bodyText confidence="0.6519022">
We first show that solutions of the constructed
decipherment problem with score &gt; −oo fulfill
φ(f) = f for f E˜B.
All mappings φ, with φ(f) = f&apos; for any f E
A˜ and f&apos; E B˜ will induce a score of −oo since
</bodyText>
<figure confidence="0.959908">
for f E
˜B. Thus any φ with score &gt; −oo will fulfill
six possible permutations, it can be seen that only
&gt; −oo. Thus we can rewrite
A˜ all Nff &gt; 0 and Sf0f0 = −oo for
f&apos; E
• For all f E {1, ... , n} the count proper-
ties are equivalent to
which follows from Equation (24) by
summing over all f E {1, ... , n}.
• For f = n + 2 and f = n + 3, the condi-
tion is fulfilled by construction.
We now show that Sff0 is a valid bigram lan-
guage model matrix:
(a) By construction, Sff0 E [−oo, 0] holds.
(b) By construction, S$$ = −oo holds.
• (AB) is independent of φ since
bf E˜A,f&apos; E {n + 1,n + 3} : Sff0 = S1f0
(29)
• (BA) is independent of φ since
• (BB) is independent of φ.
˜a11 ˜a12 ··· ˜a1n
˜a21 ˜a22 ··· ˜a2n
..
.. ..
˜an1 ˜an2 ··· ˜ann
˜a*1 ˜a*2 ··· ˜a*n
0 0 ··· 0
1 0 ··· 0
˜a1* 0
˜a2* 0
... ...
˜an* 0
0 2
1 0
0 0
˜b11 ˜b12 ··· ˜b1n
˜b21 ˜b22 ··· ˜b2n
..
.. ..
˜bn1 ˜bn2 ··· ˜bnn
ε1 ε1 ··· ε1
ε2 ε2 ··· ε2
ε0 ε0 ··· ε0
Nff0 = ⎛
⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝
0 ⎞ Sff0 = ⎛
0 ⎠⎟⎟⎟⎟⎟⎟⎟⎟⎟ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎝
...
0
0
1
0
... ...
... ...
−∞ ε1
ε2 −∞
−∞ −∞ −∞
ε2 ˜b1*
ε2 ˜b2*
ε2
...
˜bn*
...
−∞
ε2
ε2
ε2
ε2
...
⎞
⎠ ⎟ ⎟ ⎟ ⎟ ⎟ ⎟ ⎟ ⎟ ⎟ ⎟
˜aff0 = aff0 − min {af˜˜f0} + 1 ˜bff0 = bff0 − max {b f˜ ˜f0} − log(n + 2)
f˜˜f0 f˜ ˜f0
⎧
⎨
⎩
⎫
⎬
⎭
n
f0=1
+ δ(f, 1)
˜af* = max
af0f − aff0,0
⎛ ⎞
�n
˜bf* = log ⎝1 − exp(˜bff0) − 2
⎠
n + 2
f0=1
⎧
⎨
⎩
⎫
⎬
⎭
n
f=1
˜a*f0 = max
aff0 − af0f,0
εi = − log(n + i)
</figure>
<figureCaption confidence="0.926023">
Figure 3: Construction of matrices Nff0 and Sff0 of the decipherment problem from matrices A = (aij)
and B = (bij) of the quadratic assignment problem QAP(A, B).
</figureCaption>
<bodyText confidence="0.8788155">
Thus, with some constant c, we can finally rewrite
Equation 28 as
</bodyText>
<equation confidence="0.990827">
Nff0Sφ(f)φ(f0) (32)
</equation>
<bodyText confidence="0.990316">
Inserting the definition of Nff0 and Sff0 (simpli-
fied using constants c&apos;, and c&apos;&apos;) we obtain
</bodyText>
<equation confidence="0.997215">
(aff0 + c&apos;)(bφ(f)φ(f0) + c&apos;&apos;) (33)
</equation>
<bodyText confidence="0.931059076923077">
which is equivalent to the original quadratic as-
signment problem
arg max ⎧ n n aff0bφ(f)φ(f0) ⎫ (34)
⎨ f=1 f0=1 ⎬
⎩ ⎭
Thus we have shown that a solution to the
quadratic assignment problem in Equation 34 is
a solution to the decipherment problem in Equa-
tion 20 and vice versa. Assuming that calculat-
ing elementary functions can be done in O(1), set-
ting up Nff0 and Sff0 can be done in polynomial
time.2 Thus we have given a polynomial time re-
duction from the quadratic assignment problem to
</bodyText>
<footnote confidence="0.770029">
2This is the case if we only require a fixed number of dig-
its precision for the log and exp operations.
</footnote>
<bodyText confidence="0.992992666666667">
the decipherment problem: Since the quadratic as-
signment problem is NP-hard, it follows that the
decipherment problem is NP-hard, too.
</bodyText>
<subsectionHeader confidence="0.992471">
5.5 Traveling Salesman Problem �
Decipherment Problem
</subsectionHeader>
<bodyText confidence="0.786017157894737">
Using the above construction we can immediately
construct a decipherment problem that is equiva-
lent to the traveling salesman problem by using
the quadratic assignment problem formulation of
the traveling salesman problem.
Without loss of generality3 we assume that the
TSP’s distance matrix fulfills the constraints of a
bigram language model matrix Sff0. Then the
count matrix Nff0 needs to be chosen as
⎛ 0 1 0 ··· .... . ... 0 ⎞ (35)
⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜ ⎜⎜⎝ 0 0 1 · · · 0 0 0 ⎠⎟⎟⎟⎟⎟⎟⎟⎟⎟
Nff0 = 0 0 0 ··· 0 0 0
... ... ... .. 0 0 .
0 0 0 ··· 0 . 0
0 0 0 ··· 0 1 1
1 0 0 ··· 0 0 0
0
which fulfills the constraints of a bigram count
matrix.
</bodyText>
<footnote confidence="0.644334">
3The general case can be covered using the reduction
shown in Section 5.
</footnote>
<figure confidence="0.9732118">
c +
n
f0=1
n
f=1
n
f=1
c +
n
f0=1
</figure>
<page confidence="0.983699">
620
</page>
<bodyText confidence="0.9964725">
This matrix corresponds to a ciphertext of the
form
</bodyText>
<equation confidence="0.952171">
$abcd$ (36)
</equation>
<bodyText confidence="0.999986166666667">
and represents the tour of the traveling salesman in
an intuitive way. The mapping φ then only decides
in which order the cities are visited, and only costs
between two successive cities are counted.
This shows that the TSP is only a special case
of the decipherment problem.
</bodyText>
<sectionHeader confidence="0.999626" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.9999946875">
We have shown the correspondence between solv-
ing 1:1 substitution ciphers and the linear sum as-
signment problem and the quadratic assignment
problem: When using unigram language models,
the decipherment problem is equivalent to the lin-
ear sum assignment problem and solvable in poly-
nomial time. For a bigram language model, the de-
cipherment problem is equivalent to the quadratic
assignment problem and is NP-hard.
We also pointed out that all available algorithms
for the quadratic assignment problem can be di-
rectly used to solve the decipherment problem.
To the best of our knowledge, this correspon-
dence between the decipherment problem and the
quadratic assignment problem has not been known
previous to our work.
</bodyText>
<sectionHeader confidence="0.998407" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999898666666667">
This work was partly realized as part of the
Quaero Programme, funded by OSEO, French
State agency for innovation.
</bodyText>
<sectionHeader confidence="0.999474" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999815850746269">
Friedrich L. Bauer. 2010. Decrypted Secrets: Methods
and Maxims of Cryptology. Springer, 4th edition.
Martin J. Beckmann and Tjalling C. Koopmans. 1957.
Assignment problems and the location of economic
activities. Econometrica, 25(4):53–76.
Rainer E. Burkard and Eranda ela. 1999. Linear as-
signment problems and extensions. In Handbook
of Combinatorial Optimization - Supplement Volume
A, pages 75–149. Kluwer Academic Publishers.
Rainer E. Burkard, Eranda ela, Panos M. Pardalos, and
Leonidas S. Pitsoulis. 1998. The quadratic assign-
ment problem. In Handbook of Combinatorial Op-
timization, pages 241–338. Kluwer Academic Pub-
lishers.
Eric Corlett and Gerald Penn. 2010. An exact A*
method for deciphering letter-substitution ciphers.
In Proceedings of the 48th Annual Meeting of the
Association for Computational Linguistics (ACL),
pages 1040–1047, Uppsala, Sweden, July. The As-
sociation for Computer Linguistics.
Qing Dou and Kevin Knight. 2012. Large scale deci-
pherment for out-of-domain machine translation. In
Conference on Empirical Methods in Natural Lan-
guage Processing and Computational Natural Lan-
guage Learning (EMNLP-CoNLL), pages 266–275,
Jeju Island, Korea, July. Association for Computa-
tional Linguistics.
Kevin Knight and Kenji Yamada. 1999. A computa-
tional approach to deciphering unknown scripts. In
Proceedings of the ACL Workshop on Unsupervised
Learning in Natural Language Processing, num-
ber 1, pages 37–44. Association for Computational
Linguistics.
Kevin Knight, Anish Nair, Nishit Rathod, and Kenji
Yamada. 2006. Unsupervised analysis for deci-
pherment problems. In Proceedings of the Confer-
ence on Computational Linguistics and Association
of Computation Linguistics (COLING/ACL) Main
Conference Poster Sessions, pages 499–506, Syd-
ney, Australia, July. Association for Computational
Linguistics.
Harold W. Kuhn. 1955. The Hungarian method for
the assignment problem. Naval Research Logistic
Quarterly, 2(1-2):83–97.
Malte Nuhn, Arne Mauser, and Hermann Ney. 2012.
Deciphering foreign language by combining lan-
guage models and context vectors. In Proceedings
of the 50th Annual Meeting of the Association for
Computational Linguistics (ACL), pages 156–164,
Jeju, Republic of Korea, July. Association for Com-
putational Linguistics.
Sujith Ravi and Kevin Knight. 2008. Attacking de-
cipherment problems optimally with low-order n-
gram models. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing
(EMNLP), pages 812–819, Honolulu, Hawaii. Asso-
ciation for Computational Linguistics.
Sujith Ravi and Kevin Knight. 2011. Deciphering
foreign language. In Proceedings of the 49th An-
nual Meeting of the Association for Computational
Linguistics: Human Language Technologies (ACL-
HLT), pages 12–21, Portland, Oregon, USA, June.
Association for Computational Linguistics.
Sartaj Sahni and Teofilo Gonzalez. 1976. P-complete
approximation problems. Journal of the Association
for Computing Machinery (JACM), 23(3):555–565,
July.
</reference>
<page confidence="0.998293">
621
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.382731">
<title confidence="0.876632">Decipherment Complexity in 1:1 Substitution Ciphers Nuhn</title>
<author confidence="0.542188">Human Language Technology</author>
<author confidence="0.542188">Pattern</author>
<affiliation confidence="0.986015">Computer Science Department, RWTH Aachen University, Aachen,</affiliation>
<email confidence="0.995682"><surname>@cs.rwth-aachen.de</email>
<abstract confidence="0.9898495">In this paper we show that even for the case of 1:1 substitution ciphers—which encipher plaintext symbols by exchanging them with a unique substitute—finding the optimal decipherment with respect to a bigram language model is NP-hard. We show that in this case the decipherment problem is equivalent to the quadratic assignment problem (QAP). To the best of our knowledge, this connection between the QAP and the decipherment problem has not been known in the literature before.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Friedrich L Bauer</author>
</authors>
<title>Decrypted Secrets: Methods and Maxims of Cryptology.</title>
<date>2010</date>
<publisher>Springer,</publisher>
<note>4th edition.</note>
<contexts>
<context position="8931" citStr="Bauer, 2010" startWordPosition="1569" endWordPosition="1570">ion 2 simplifies to finding φˆ = arg max φ = which can be rewritten as arg max X NfSφ(f) (16) φ fEVf When defining cff0 = Nf log p(f&apos;), for f, f&apos; E Vf, Equation 16 can be brought into the form of X φˆ = arg max cfφ(f) (17) φ fEVf Figure 1 shows an illustration of this problem. The general LSAP can be solved in polynomial time using the Hungarian algorithm (Kuhn, 1955). However, since the matrix cij occurring for the decipherment using a unigram language model can be represented as the product cij = ai · bj the decipherment problem can be solved more easily: In the Section “Optimal Matching”, (Bauer, 2010) shows that in this case the optimal assignment is found by sorting the jobs ji by ai and workers wj by bj and then assigning the jobs ji to workers wj that have the same rank in the respective sorted lists. Sorting and then assigning the elements can be done in O(n log n). 5 Decipherment Using Bigram LMs 5.1 Problem Definition When using a 2-gram language model, Equation 2 simplifies to φˆ = arg max ⎧ N+1Y p(φ(fj)|φ(fj−1)) ⎫ (19) φ ⎨ j=1 ⎬ ⎩ ⎭ YN p(φ(fi)) (15) i=1 617 n j=1 { n i=1 as finding φˆ = arg min φ where A = (aij),B = (bij),C = (cij) E Nn×n and φ a permutation φ : {1,...,n} → {1,...,</context>
<context position="10181" citStr="Bauer, 2010" startWordPosition="1827" endWordPosition="1828"> f1 f2 f3 f4 f1 f2 f3 f4 f1 1 f1 f4 f3 f2 f2 1 1 y f3 1 f4 x l1 l2 l3 l4 aijbφ(i)φ(j) + } ciφ(i) n i=1 (21) Figure 2: Hypothetical quadratic assignment problem with locations l1 ... l4 and facilities f1 . . . f4 with all flows being zero except f1 ↔ f2 and f3 ↔ f4. The distance between locations l1 ... l4 is implicitly given by the locations in the plane, implying a euclidean metric. Two example assignments (a) and (b) are shown, with (b) having the lower overall costs. Using the definitions from Section 3, Equation 19 can be rewritten as φˆ = arg max { � � Nff0Sφ(f)φ(f0) } (20) φ f∈Vf f0∈Vf (Bauer, 2010) arrives at a similar optimization problem for the “combined method of frequency matching” using bigrams and mentions that it can be seen as a combinatorial problem for which an efficient way of solving is not known. However, he does not mention the close connection to the quadratic assignment problem. 5.2 The Quadratic Assignment Problem The quadratic assignment problem was introduced by (Beckmann and Koopmans, 1957) for the following real-life problem: Given a set of facilities {f1, ... , fn} and a set of locations {l1, ... , ln} with distances for each pair of locations, and flows for each </context>
</contexts>
<marker>Bauer, 2010</marker>
<rawString>Friedrich L. Bauer. 2010. Decrypted Secrets: Methods and Maxims of Cryptology. Springer, 4th edition.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin J Beckmann</author>
<author>Tjalling C Koopmans</author>
</authors>
<title>Assignment problems and the location of economic activities.</title>
<date>1957</date>
<journal>Econometrica,</journal>
<volume>25</volume>
<issue>4</issue>
<contexts>
<context position="4464" citStr="Beckmann and Koopmans, 1957" startWordPosition="689" endWordPosition="692">, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual data. In this paper we will show the connection between the decipherment problem and the linear sum assignment problem as well as the quadratic assignment problem: Regarding the linear sum assignment problem we will make use of definitions presented in (Burkard and ela, 1999). Concerning the quadratic assignment problem we will use basic definitions from (Beckmann and Koopmans, 1957). Further (Burkard et al., 1998) gives a good overview over the quadratic assignment problem, including different formulations, solution methods, and an analysis of computational complexity. The paper also references a vast amount of further literature that might be interesting for future research. 3 Definitions In the following we will use the machine translation notation and denote the ciphertext with fN1 = f1 ... fj ... fN which consists of cipher tokens fj ∈ Vf. We denote the plaintext with eN1 = e1 ... ei ... eN (and its vocabulary Ve respectively). We define e0 = f0 = eN+1 = fN+1 = $ (1)</context>
<context position="10602" citStr="Beckmann and Koopmans, 1957" startWordPosition="1890" endWordPosition="1893">ments (a) and (b) are shown, with (b) having the lower overall costs. Using the definitions from Section 3, Equation 19 can be rewritten as φˆ = arg max { � � Nff0Sφ(f)φ(f0) } (20) φ f∈Vf f0∈Vf (Bauer, 2010) arrives at a similar optimization problem for the “combined method of frequency matching” using bigrams and mentions that it can be seen as a combinatorial problem for which an efficient way of solving is not known. However, he does not mention the close connection to the quadratic assignment problem. 5.2 The Quadratic Assignment Problem The quadratic assignment problem was introduced by (Beckmann and Koopmans, 1957) for the following real-life problem: Given a set of facilities {f1, ... , fn} and a set of locations {l1, ... , ln} with distances for each pair of locations, and flows for each pair of facilities (e.g. the amount of supplies to be transported between a pair of facilities) the problem is to assign the facilities to locations such that the sum of the distances multiplied by the corresponding flows (which can be interpreted as total transportation costs) is minimized. This is visualized in Figure 2. Following (Beckmann and Koopmans, 1957) we can express the quadratic assignment problem This for</context>
</contexts>
<marker>Beckmann, Koopmans, 1957</marker>
<rawString>Martin J. Beckmann and Tjalling C. Koopmans. 1957. Assignment problems and the location of economic activities. Econometrica, 25(4):53–76.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rainer E Burkard</author>
<author>Eranda ela</author>
</authors>
<title>Linear assignment problems and extensions.</title>
<date>1999</date>
<booktitle>In Handbook of Combinatorial Optimization - Supplement Volume A,</booktitle>
<pages>75--149</pages>
<publisher>Kluwer Academic Publishers.</publisher>
<contexts>
<context position="4354" citStr="Burkard and ela, 1999" startWordPosition="673" endWordPosition="676"> August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual data. In this paper we will show the connection between the decipherment problem and the linear sum assignment problem as well as the quadratic assignment problem: Regarding the linear sum assignment problem we will make use of definitions presented in (Burkard and ela, 1999). Concerning the quadratic assignment problem we will use basic definitions from (Beckmann and Koopmans, 1957). Further (Burkard et al., 1998) gives a good overview over the quadratic assignment problem, including different formulations, solution methods, and an analysis of computational complexity. The paper also references a vast amount of further literature that might be interesting for future research. 3 Definitions In the following we will use the machine translation notation and denote the ciphertext with fN1 = f1 ... fj ... fN which consists of cipher tokens fj ∈ Vf. We denote the plain</context>
</contexts>
<marker>Burkard, ela, 1999</marker>
<rawString>Rainer E. Burkard and Eranda ela. 1999. Linear assignment problems and extensions. In Handbook of Combinatorial Optimization - Supplement Volume A, pages 75–149. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rainer E Burkard</author>
<author>Eranda ela</author>
<author>Panos M Pardalos</author>
<author>Leonidas S Pitsoulis</author>
</authors>
<title>The quadratic assignment problem.</title>
<date>1998</date>
<booktitle>In Handbook of Combinatorial Optimization,</booktitle>
<pages>241--338</pages>
<publisher>Kluwer Academic Publishers.</publisher>
<contexts>
<context position="4496" citStr="Burkard et al., 1998" startWordPosition="694" endWordPosition="697">and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual data. In this paper we will show the connection between the decipherment problem and the linear sum assignment problem as well as the quadratic assignment problem: Regarding the linear sum assignment problem we will make use of definitions presented in (Burkard and ela, 1999). Concerning the quadratic assignment problem we will use basic definitions from (Beckmann and Koopmans, 1957). Further (Burkard et al., 1998) gives a good overview over the quadratic assignment problem, including different formulations, solution methods, and an analysis of computational complexity. The paper also references a vast amount of further literature that might be interesting for future research. 3 Definitions In the following we will use the machine translation notation and denote the ciphertext with fN1 = f1 ... fj ... fN which consists of cipher tokens fj ∈ Vf. We denote the plaintext with eN1 = e1 ... ei ... eN (and its vocabulary Ve respectively). We define e0 = f0 = eN+1 = fN+1 = $ (1) with “$” being a special senten</context>
</contexts>
<marker>Burkard, ela, Pardalos, Pitsoulis, 1998</marker>
<rawString>Rainer E. Burkard, Eranda ela, Panos M. Pardalos, and Leonidas S. Pitsoulis. 1998. The quadratic assignment problem. In Handbook of Combinatorial Optimization, pages 241–338. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eric Corlett</author>
<author>Gerald Penn</author>
</authors>
<title>An exact A* method for deciphering letter-substitution ciphers.</title>
<date>2010</date>
<booktitle>In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>1040--1047</pages>
<location>Uppsala, Sweden,</location>
<contexts>
<context position="3506" citStr="Corlett and Penn, 2010" startWordPosition="543" endWordPosition="546">e traveling salesman problem (TSP) to the decipherment problem to highlight the additional complexity in the decipherment problem. 2 Related Work In recent years a large number of publications on the automatic decipherment of substitution ciphers has been published. These publications were mostly dominated by rather heuristic methods and did not provide a theoretical analysis of the complexity of the decipherment problem: (Knight and Yamada, 1999) and (Knight et al., 2006) use the EM algorithm for various decipherment problems, like e.g. word substitution ciphers. (Ravi and Knight, 2008) and (Corlett and Penn, 2010) are able to obtain optimal (i.e. without search errors) decipherments of short cryptograms given an n615 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual data. In this paper we will </context>
</contexts>
<marker>Corlett, Penn, 2010</marker>
<rawString>Eric Corlett and Gerald Penn. 2010. An exact A* method for deciphering letter-substitution ciphers. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics (ACL), pages 1040–1047, Uppsala, Sweden, July. The Association for Computer Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Qing Dou</author>
<author>Kevin Knight</author>
</authors>
<title>Large scale decipherment for out-of-domain machine translation.</title>
<date>2012</date>
<booktitle>In Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL),</booktitle>
<pages>266--275</pages>
<institution>Jeju Island, Korea, July. Association for Computational Linguistics.</institution>
<contexts>
<context position="3892" citStr="Dou and Knight, 2012" startWordPosition="600" endWordPosition="603">mplexity of the decipherment problem: (Knight and Yamada, 1999) and (Knight et al., 2006) use the EM algorithm for various decipherment problems, like e.g. word substitution ciphers. (Ravi and Knight, 2008) and (Corlett and Penn, 2010) are able to obtain optimal (i.e. without search errors) decipherments of short cryptograms given an n615 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual data. In this paper we will show the connection between the decipherment problem and the linear sum assignment problem as well as the quadratic assignment problem: Regarding the linear sum assignment problem we will make use of definitions presented in (Burkard and ela, 1999). Concerning the quadratic assignment problem we will use basic definitions from (Beckmann and Koopmans, 1957). Further (Burkard et al., 1</context>
</contexts>
<marker>Dou, Knight, 2012</marker>
<rawString>Qing Dou and Kevin Knight. 2012. Large scale decipherment for out-of-domain machine translation. In Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL), pages 266–275, Jeju Island, Korea, July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin Knight</author>
<author>Kenji Yamada</author>
</authors>
<title>A computational approach to deciphering unknown scripts.</title>
<date>1999</date>
<booktitle>In Proceedings of the ACL Workshop on Unsupervised Learning in Natural Language Processing,</booktitle>
<volume>1</volume>
<pages>37--44</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="3334" citStr="Knight and Yamada, 1999" startWordPosition="516" endWordPosition="519">t problem (LSAP). Section 5 shows the connection between the quadratic assignment problem and decipherment using a bigram language model. Here we also give a reduction of the traveling salesman problem (TSP) to the decipherment problem to highlight the additional complexity in the decipherment problem. 2 Related Work In recent years a large number of publications on the automatic decipherment of substitution ciphers has been published. These publications were mostly dominated by rather heuristic methods and did not provide a theoretical analysis of the complexity of the decipherment problem: (Knight and Yamada, 1999) and (Knight et al., 2006) use the EM algorithm for various decipherment problems, like e.g. word substitution ciphers. (Ravi and Knight, 2008) and (Corlett and Penn, 2010) are able to obtain optimal (i.e. without search errors) decipherments of short cryptograms given an n615 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a d</context>
</contexts>
<marker>Knight, Yamada, 1999</marker>
<rawString>Kevin Knight and Kenji Yamada. 1999. A computational approach to deciphering unknown scripts. In Proceedings of the ACL Workshop on Unsupervised Learning in Natural Language Processing, number 1, pages 37–44. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin Knight</author>
<author>Anish Nair</author>
<author>Nishit Rathod</author>
<author>Kenji Yamada</author>
</authors>
<title>Unsupervised analysis for decipherment problems.</title>
<date>2006</date>
<booktitle>In Proceedings of the Conference on Computational Linguistics and Association of Computation Linguistics (COLING/ACL) Main Conference Poster Sessions,</booktitle>
<pages>499--506</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Sydney, Australia,</location>
<contexts>
<context position="3360" citStr="Knight et al., 2006" startWordPosition="521" endWordPosition="524">ows the connection between the quadratic assignment problem and decipherment using a bigram language model. Here we also give a reduction of the traveling salesman problem (TSP) to the decipherment problem to highlight the additional complexity in the decipherment problem. 2 Related Work In recent years a large number of publications on the automatic decipherment of substitution ciphers has been published. These publications were mostly dominated by rather heuristic methods and did not provide a theoretical analysis of the complexity of the decipherment problem: (Knight and Yamada, 1999) and (Knight et al., 2006) use the EM algorithm for various decipherment problems, like e.g. word substitution ciphers. (Ravi and Knight, 2008) and (Corlett and Penn, 2010) are able to obtain optimal (i.e. without search errors) decipherments of short cryptograms given an n615 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem includi</context>
</contexts>
<marker>Knight, Nair, Rathod, Yamada, 2006</marker>
<rawString>Kevin Knight, Anish Nair, Nishit Rathod, and Kenji Yamada. 2006. Unsupervised analysis for decipherment problems. In Proceedings of the Conference on Computational Linguistics and Association of Computation Linguistics (COLING/ACL) Main Conference Poster Sessions, pages 499–506, Sydney, Australia, July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harold W Kuhn</author>
</authors>
<title>The Hungarian method for the assignment problem.</title>
<date>1955</date>
<journal>Naval Research Logistic Quarterly,</journal>
<pages>2--1</pages>
<contexts>
<context position="8689" citStr="Kuhn, 1955" startWordPosition="1528" endWordPosition="1529">= arg min Xn ciφ(i) (18) that φ i=1 Sgg = −00 (13) (c) For all f E Vf the following normalization constraint holds: X exp(Sff0) = 1 (14) f0EVf 4 Decipherment Using Unigram LMs 4.1 Problem Definition When using a unigram language model, Equation 2 simplifies to finding φˆ = arg max φ = which can be rewritten as arg max X NfSφ(f) (16) φ fEVf When defining cff0 = Nf log p(f&apos;), for f, f&apos; E Vf, Equation 16 can be brought into the form of X φˆ = arg max cfφ(f) (17) φ fEVf Figure 1 shows an illustration of this problem. The general LSAP can be solved in polynomial time using the Hungarian algorithm (Kuhn, 1955). However, since the matrix cij occurring for the decipherment using a unigram language model can be represented as the product cij = ai · bj the decipherment problem can be solved more easily: In the Section “Optimal Matching”, (Bauer, 2010) shows that in this case the optimal assignment is found by sorting the jobs ji by ai and workers wj by bj and then assigning the jobs ji to workers wj that have the same rank in the respective sorted lists. Sorting and then assigning the elements can be done in O(n log n). 5 Decipherment Using Bigram LMs 5.1 Problem Definition When using a 2-gram language</context>
</contexts>
<marker>Kuhn, 1955</marker>
<rawString>Harold W. Kuhn. 1955. The Hungarian method for the assignment problem. Naval Research Logistic Quarterly, 2(1-2):83–97.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Malte Nuhn</author>
<author>Arne Mauser</author>
<author>Hermann Ney</author>
</authors>
<title>Deciphering foreign language by combining language models and context vectors.</title>
<date>2012</date>
<booktitle>In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>156--164</pages>
<institution>Korea, July. Association for Computational Linguistics.</institution>
<location>Jeju, Republic of</location>
<contexts>
<context position="3864" citStr="Nuhn et al., 2012" startWordPosition="595" endWordPosition="598">etical analysis of the complexity of the decipherment problem: (Knight and Yamada, 1999) and (Knight et al., 2006) use the EM algorithm for various decipherment problems, like e.g. word substitution ciphers. (Ravi and Knight, 2008) and (Corlett and Penn, 2010) are able to obtain optimal (i.e. without search errors) decipherments of short cryptograms given an n615 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual data. In this paper we will show the connection between the decipherment problem and the linear sum assignment problem as well as the quadratic assignment problem: Regarding the linear sum assignment problem we will make use of definitions presented in (Burkard and ela, 1999). Concerning the quadratic assignment problem we will use basic definitions from (Beckmann and Koopmans, 1957)</context>
</contexts>
<marker>Nuhn, Mauser, Ney, 2012</marker>
<rawString>Malte Nuhn, Arne Mauser, and Hermann Ney. 2012. Deciphering foreign language by combining language models and context vectors. In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics (ACL), pages 156–164, Jeju, Republic of Korea, July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sujith Ravi</author>
<author>Kevin Knight</author>
</authors>
<title>Attacking decipherment problems optimally with low-order ngram models.</title>
<date>2008</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP),</booktitle>
<pages>812--819</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Honolulu, Hawaii.</location>
<contexts>
<context position="3477" citStr="Ravi and Knight, 2008" startWordPosition="538" endWordPosition="541"> also give a reduction of the traveling salesman problem (TSP) to the decipherment problem to highlight the additional complexity in the decipherment problem. 2 Related Work In recent years a large number of publications on the automatic decipherment of substitution ciphers has been published. These publications were mostly dominated by rather heuristic methods and did not provide a theoretical analysis of the complexity of the decipherment problem: (Knight and Yamada, 1999) and (Knight et al., 2006) use the EM algorithm for various decipherment problems, like e.g. word substitution ciphers. (Ravi and Knight, 2008) and (Corlett and Penn, 2010) are able to obtain optimal (i.e. without search errors) decipherments of short cryptograms given an n615 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual</context>
</contexts>
<marker>Ravi, Knight, 2008</marker>
<rawString>Sujith Ravi and Kevin Knight. 2008. Attacking decipherment problems optimally with low-order ngram models. In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 812–819, Honolulu, Hawaii. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sujith Ravi</author>
<author>Kevin Knight</author>
</authors>
<title>Deciphering foreign language.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies (ACLHLT),</booktitle>
<pages>12--21</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Portland, Oregon, USA,</location>
<contexts>
<context position="3843" citStr="Ravi and Knight, 2011" startWordPosition="591" endWordPosition="594">d did not provide a theoretical analysis of the complexity of the decipherment problem: (Knight and Yamada, 1999) and (Knight et al., 2006) use the EM algorithm for various decipherment problems, like e.g. word substitution ciphers. (Ravi and Knight, 2008) and (Corlett and Penn, 2010) are able to obtain optimal (i.e. without search errors) decipherments of short cryptograms given an n615 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 615–621, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics gram language model. (Ravi and Knight, 2011), (Nuhn et al., 2012), and (Dou and Knight, 2012) treat natural language translation as a deciphering problem including phenomena like reordering, insertion, and deletion and are able to train translation models using only monolingual data. In this paper we will show the connection between the decipherment problem and the linear sum assignment problem as well as the quadratic assignment problem: Regarding the linear sum assignment problem we will make use of definitions presented in (Burkard and ela, 1999). Concerning the quadratic assignment problem we will use basic definitions from (Beckman</context>
</contexts>
<marker>Ravi, Knight, 2011</marker>
<rawString>Sujith Ravi and Kevin Knight. 2011. Deciphering foreign language. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies (ACLHLT), pages 12–21, Portland, Oregon, USA, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sartaj Sahni</author>
<author>Teofilo Gonzalez</author>
</authors>
<title>P-complete approximation problems.</title>
<date>1976</date>
<journal>Journal of the Association for Computing Machinery (JACM),</journal>
<volume>23</volume>
<issue>3</issue>
<contexts>
<context position="11642" citStr="Sahni and Gonzalez, 1976" startWordPosition="2078" endWordPosition="2081">interpreted as total transportation costs) is minimized. This is visualized in Figure 2. Following (Beckmann and Koopmans, 1957) we can express the quadratic assignment problem This formulation is often referred to as KoopmanBeckman QAP and often abbreviated as QAP(A, B, C). The so-called pure or homogeneous QAP φˆ = arg min φ is obtained by setting cij = 0, and is often denoted as QAP(A, B). In terms of the real-life problem presented in (Beckmann and Koopmans, 1957) the matrix A can be interpreted as distance matrix for locations {l1 ... ln} and B as flow matrix for facilities {f1 ... fn}. (Sahni and Gonzalez, 1976) show that the quadratic assignment problem is strongly NPhard. We will now show the relation between the quadratic assignment problem and the decipherment problem. 5.3 Decipherment Problem � Quadratic Assignment Problem Every decipherment problem is directly a quadratic assignment problem, since the matrices Nff0 and Sff0 are just special cases of the general matrices A and B required for the quadratic assignment problem. Thus a reduction from the decipherment problem to the quadratic assignment problem is trivial. This means that all algorithms capable of solving QAPs can directly be used to</context>
</contexts>
<marker>Sahni, Gonzalez, 1976</marker>
<rawString>Sartaj Sahni and Teofilo Gonzalez. 1976. P-complete approximation problems. Journal of the Association for Computing Machinery (JACM), 23(3):555–565, July.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>