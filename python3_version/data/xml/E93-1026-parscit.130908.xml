<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.845408">
Inheriting Verb Alternations
</title>
<author confidence="0.885993">
Adam Kilgarriff
</author>
<affiliation confidence="0.580239">
Longman Dictionaries
</affiliation>
<address confidence="0.734364666666667">
Burnt Mill
Harlow, Essex CM20 2JE
England
</address>
<sectionHeader confidence="0.992068" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999960894736842">
The paper shows how the verbal lexicon can
be formalised in a way that captures and
exploits generalisations about the alterna-
tion behaviour of verb classes. An alter-
nation is a pattern in which a number of
words share the same relationship between
a pair of senses. The alternations captured
are ones where the different senses spec-
ify different relationships between syntactic
complements and semantic arguments, as
between bake in &amp;quot;John is baking the cake&amp;quot;
and &amp;quot;The cake is baking&amp;quot;. The formal lan-
guage used is DATR. The lexical entries it
builds are as specified in HPSG. The com-
plex alternation behaviour shared between
families of verbs is elegantly represented in
a way that makes generalisations explicit,
avoids redundancy, and offers practical ben-
efits to computational lexicographers.
</bodyText>
<sectionHeader confidence="0.999471" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.98924185106383">
The paper shows how the verbal lexicon can be for-
malised in a way that captures and exploits gener-
alisations about the alternation behaviour of verb
classes. An alternation is a pattern in which a num-
ber of words share the same relationship between a
pair of senses. The kinds of alternations to be cap-
tured are ones where the different senses specify dif-
ferent relationships between syntactic complements
and semantic arguments, as in the relation between
bake in &amp;quot;John is baking the cake&amp;quot; and &amp;quot;John is bak-
ing&amp;quot;, or between melt in &amp;quot;the chocolate melted&amp;quot; and
*1 would like to thank Gerald Gazdar and Roger Evans
for their many valuable comments, and SERC for the
grant under which the work was• undertaken.
&amp;quot;Mary melted the chocolate&amp;quot; .1 Given that compact-
ness and non-redundancy are a desideratum of theo-
retical descriptions, the different usage-types for bake
and wipe should not require us to introduce different
primitives into the lexicon. Moreover, as the alter-
nations are shared with other verbs, they should be
described at some general node in a hierarchically
organised lexicon, and inherited.
DATR is a formal language in which the such rela-
tionships and generalisations can be simply stated.
Much has been written about verb alternations
and their syntactic corollaries. Here we do not
add to the evidence or construct new theory, but
simply formalise other people&apos;s accounts: those of
[Atkins et al., 1986] and [Levin and Rappoport Ho-
vav, 1991]. The first investigates the range of al-
ternations between transitive and intransitive forms
of verbs. The second, titled Wiping the Slate Clean,
explores the relations between meaning and subcate-
gorisation possibilities for &apos;wipe&apos; verbs, &apos;clean&apos; verbs,
and related groupings. The language used is DATR,.
a default inheritance formalism designed for lexical
representation. We follow Levin and Rappoport Ho-
vav in taking a distinct subcategorisation frame as
defining a distinct word sense, and also in work-
ing with commonsense verb classes such as &apos;cooking
verbs&apos;, since classes such as this serve to predict the
alternations a verb participates in with some accu-
racy.
An important constraint is that the lexical entries
are of a kind specified by a grammar formalism, so
can be used for parsing and semantic interpretation.
The formalism chosen in this paper is HPSG [Pollard
</bodyText>
<footnote confidence="0.5986065">
1The morphosyntactic distinctions between, for exam-
ple, bake and is baking are not addressed here. Extensive
DATR treatments of morphology are provided in various
papers in [Evans and Gazdar, 1990].
</footnote>
<page confidence="0.998837">
213
</page>
<bodyText confidence="0.998380631578947">
and Sag, 1987].
Below we present detailed formal accounts for
alternations involving cooking verbs and physical-
process verbs. After motivating the DATR treatment
and considering related work, we describe how verb
entries appear in HPSG, then represent alternations
as mappings between HPSG lexical entries, then in-
troduce the main constructs of DATR and define a
translation from HPSG notation to DATR. Finally
we build a DATR inheritance network which repre-
sents the alternate verb forms by inference, without
the lexicographer having to explicitly say anything
about them.
The analysis presented in this paper is a part of
a larger lexicon fragment which describes a further
five alternations relating seven verb classes and for-
malises much of the structure described in both ar-
ticles. The complete fragment, illustrated in Fig. 1.
is presented in full in [Kilgarriff, 19921.
</bodyText>
<figureCaption confidence="0.742138">
Figure 1: Verb taxonomy
1.1 Why DATR?
</figureCaption>
<bodyText confidence="0.999900755102041">
As clexicalism&apos; — the doctrine that the bulk of the
information about the behaviour of words should be
located in the lexicon — has become popular in com-
putational and theoretical linguistics, so formalisms
for expressing lexical information have been devel-
oped. The syntax, semantics and morphology of
most words is shared with that of many others, so
the first desideratum for any such formalism is to
provide a mechanism for stating information just
once, in such a way that it is defined for large num-
bers of words. Inheritance networks serve this pur-
pose. If words are arranged into a taxonomy or some
other form of network, then a fact which applies
to a class of words can be stated at a nonterminal
node in the network and inherited by the words to
which it applies. Work in knowledge representation
has addressed questions of different kinds of network,
and the kinds of machinery needed to retrieve inher-
ited information, in detail (see, e.g., [Brachman and
Levesque, 1985]).
The next requirement is that exceptions and sub-
regularities can be expressed. It must be possible to
describe concisely the situation where a word or class
of words are members of some superclass, and share
the regular characteristics of the superclass in most
respects, but have different values for some feature or
cluster of features. Several lexical representation for-
malisms addressing these desiderata have been pro-
posed, e.g. DATR [Evans and Gazdar 1989a, 1989b,
1990]; LRL [Copestake, 1992]; [Russell et al. 1991].
The work described here uses DATR.
DATR has certain desirable formal and computa-
tional properties. It is a formal language with a
declarative semantics. Retrieving values for queries
involves no search. Multiple inheritance specifica-
tions are always orthogonal, so a word may inherit
from more than one place, but any fact about that
word has the place it is to be inherited from uniquely
specified. The problem of different ancestors provid-
ing contradictory values, often associated with mul-
tiple default inheritance, is thereby avoided, yet the
kinds of generalisation most often associated with
the lexicon can still be simply stated. To date
it has been used to express syntactic, morphologi-
cal, phonological and a limited amount of seman-
tic lexical information [Evans and Gazdar, 1990;
Cahill and Evans, 1990; Gibbon, 1990; Cahill, 1993].
Verb alternations have not previously received a
DATR treatment.
</bodyText>
<sectionHeader confidence="0.953298" genericHeader="introduction">
1.2 Related work
</sectionHeader>
<bodyText confidence="0.9997393125">
The work described here is at the meeting-point of
lexical representation languages (as discussed above),
lexical semantics (as in Atkins et al. and Levin and
Rappoport Hovav; see also [Levin, 1991]) and for-
mal accounts of alternations (see particularly [Dowty,
1979]).
Recent work which aims to bring these three
threads together in relation to the lexical repre-
sentation of nouns includes [Briscoe et al., 1990;
Pustejovsky, 1991; Copestake and Briscoe, 1991;
Kilgarriff, 1993 forthcoming; Kilgarriff and Gazdar,
1993 forthcoming]. (The latter two are companion
papers to this, also using DATR in similar ways.) A
paper addressing verbs is [Sanfilippo and Poznanski,
1992].
This covers some of the same alternations as this
</bodyText>
<page confidence="0.997721">
214
</page>
<bodyText confidence="0.999985545454545">
paper, and has similar goals. The formalism it uses
is LRL, the typed default unification formalism of
[Copestake, 1992]. Unlike DATR, this is both a lex-
ical representation language and a grammar formal-
ism. Whereas, in this paper, we represent the lexicon
in DATR and then construct HPSG lexical entries,
Sanfilippo and Poznanski need deal with only one
formalism. This has a prima facie advantage but
also a cost: the formalism must do two jobs. DATR
is designed specifically for one, and offers more flexi-
bility in the representation of exceptions and subreg-
ularities. In LRL, multiple default inheritance is re-
stricted to the cases where there is no clash, with the
condition enforced by a checking procedure, in con-
trast to DATR where the orthogonal nature of inheri-
tance required by the syntax means that the problem
does not arise. Also, LRL default inheritance must
operate within the constraints of a type hierarchy,
and the formalism requires two kinds of inheritance,
default and non-default. In DATR, inheritance is not
constrained by a type hierarchy, and inheritance, de-
fault or otherwise, invokes a single mechanism.
</bodyText>
<sectionHeader confidence="0.804065" genericHeader="method">
2 An HPSG-style lexicon
</sectionHeader>
<bodyText confidence="0.99918475">
The alternations to be addressed in detail here are
the ones relating the transitive, which we treat as the
base form, to the ergative (&amp;quot;The cake baked&amp;quot;) and to
the unspecified object (&amp;quot;John baked&amp;quot;).
</bodyText>
<figure confidence="0.880813285714286">
WORD bake
- MAJ V
SYN SUBCAT (NP[NOM] SEM
NP[ACC] SEM 2
▪ RELN BAKE
SEM BAKER
BAKED 2
</figure>
<figureCaption confidence="0.998756">
Figure 2: AVM for transitive bake.
</figureCaption>
<bodyText confidence="0.985747333333333">
Fig. 2 shows a simplified version of the HPSG lex-
ical entry for transitive bake, in attribute-value ma-
trix (AVM) notation. NP abbreviations and angle-
bracket list notation, where a comma separates list
elements and there is no separator between the con-
juncts of a feature-structure within a list, is as in
[Pollard and Sag, 1987]. The boxed variables indi-
cate the roles the semantic arguments play in the
syntactic structure.
For ergative bake, the same BAKE relation holds
as in the base form, but now between an unspecified
BAKER and a BAKED which is the subject of the
sentence. The unspecified role filler is not &apos;bound&apos;
to a complement (i.e. any item on the SUBCAT list)
but is existentially quantified (EX-Q). The ergative
form is intransitive so has only one item on its SUB-
CAT list and the SEM of that item unifies with the
BAKED, so the AVM for ergative bake will be as in
</bodyText>
<figureCaption confidence="0.9451595">
Fig. 3. For unspecified-object bake in &amp;quot;John was
Figure 3: AVM for ergative bake.
</figureCaption>
<bodyText confidence="0.956392666666667">
baking&amp;quot;, the subject is matched to the BAKER and
it is the BAKED which is unspecified, so existentially
quantified, as in Fig. 4.
</bodyText>
<figureCaption confidence="0.996435">
Figure 4: AVM for unspecified-object bake.
</figureCaption>
<bodyText confidence="0.9997296875">
For bake and other cooking verbs, we are able to
represent the extended senses directly in terms of the
same predicate that applied in the base sense. We
now move on to a case where this does not hold.
For melt, the intransitive (&amp;quot;The ice melted&amp;quot;) is ba-
sic and the transitive (&amp;quot;Maria melted the ice&amp;quot;) is ex-
tended, and it is not possible to define the extended
sense directly in terms of the base. The transitive
can be paraphrased using cause, &amp;quot;Maria caused the
ice to melt&amp;quot; and we call the alternation &apos;causative&apos;. It
is clearly closely related to the ergative, and it would
be possible to treat the transitive form as basic, with
the ergative alternation applying. That route has
not been followed for two reasons. Firstly, melt is a
member of a class of physical-process verbs, also in-
cluding evaporate, freeze, dissolve, sublime and coa-
lesce. They all clearly have intransitive senses. They
all might, in the right setting, be used transitively,
but in cases such as coalesce the transitive is not a
standard use and it would patently be inappropriate
for it to be treated as a base form. If we are to stand
by the intuition that these verbs form a class, and
all participate in the same alternation, then all must
have an intransitive base form.
Secondly, transitive melt introduces an aspect of
meaning, call it CAUSE, which is not in any sense
present in the intransitive. For bake, CAUSE is al-
ready a component of the meaning, whether or not
the verb is being used ergatively. A default en-
tailment of CAUSE is that its first argument, the
CAUSER, has proto-agent properties [Dowty, 1991].
If intransitive melt were treated like ergative bake,
</bodyText>
<figure confidence="0.995590882352941">
- WORD
SYN
SEM
bake
MAJ V
SUBCAT (NP[NOM] SEM [3 )
[RELN BAKE
BAKER EX-Q
BAKED
El
SUBCAT (NP[NOM] SEM n
SEM [ RELN BAKE 1
BAKER
BAKED P-Q
- WORD bake
[ MAJ V
SYN
</figure>
<page confidence="0.997263">
215
</page>
<bodyText confidence="0.999951368421053">
CAUSE would be a component of the meaning of in-
transitive melt. Its semantics would have an existen-
tially quantified MELTER argument, which would
be a CAUSER and which we would expect to have
agent-like properties. In ergative uses of bake, the
baking scenario still includes an agent who is doing
the baking and fills the BAKER role, even though
they are not mentioned. (We concern ourselves here
only with cooking bake, not &amp;quot;The stones baked in the
sun&amp;quot; and other usage-types where bake is behaving as
a physical process verb.) In &amp;quot;The ice melted&amp;quot; there is
usually no agent involved. While it might always be
possible to assign a filler to the MELTER slot, per-
haps &amp;quot;the hot temperature&amp;quot; or &amp;quot;the warm climate&amp;quot;,
they do not fit readily into the agent, CAUSER role.
So we do not treat causatives as ergatives.
A standard analysis of causatives after [Dowty,
1979] as presented by [Chierchia and McConnell-
Ginet, 1990, chapter 8], is
</bodyText>
<subsectionHeader confidence="0.530743">
AyAx M E LT I2(x , y) = AyAxC AU SE(x, M E LT I1(y)).
</subsectionHeader>
<bodyText confidence="0.997111714285714">
The semantics of the causative has the predi-
cate CAUSE, with MELT/1 re-appearing as its sec-
ond argument. In addition to intransitive melt as
shown in Fig. 5 we have causative melt as shown in
Fig. 6. (The relation between lambda expressions
and feature structures is discussed in [Moore, 1989;
Kilgarriff, 1992].)
</bodyText>
<figure confidence="0.3919385">
)1
;
</figure>
<figureCaption confidence="0.967822">
Figure 6: AVM for causative melt.
</figureCaption>
<sectionHeader confidence="0.979275" genericHeader="method">
3 DATR: a gentle introduction
</sectionHeader>
<bodyText confidence="0.9971505">
A simple DATR equation has, on its lhs, a node and
a path, and, on its rhs, either a value:
</bodyText>
<subsectionHeader confidence="0.854052">
Nodel:‹a b c&gt; == value.
</subsectionHeader>
<bodyText confidence="0.999828857142857">
or an inheritance specification. Nodes start with cap-
ital letters, paths are sequences enclosed in angle-
brackets, anything on the rhs that is not a node or a
path is a value. The primary operation on a DATR
description is the evaluation of a query, that is, the
determination of a value associated with a given path
at a given node. Where a value is not given directly,
it may be inherited by following a trail: the inheri-
tance specification on the rhs at step n becomes the
lhs for step n+1. The specifications may state both
node and path, node only or path only. They may
also be local or global. Where they are local, the
unstated node or path is as it was on the lhs, so if
we have the node:
</bodyText>
<figure confidence="0.96573725">
Nodel: &lt;a&gt; == Node2: &lt;z&gt;
&lt;b&gt; =so Node3
&lt;c&gt; == &lt;y&gt;.
then
</figure>
<bodyText confidence="0.776796777777778">
Nodel: &lt;a&gt; inherits from Node2: &lt;x&gt;
Nodel: &lt;b&gt; inherits from Node3: &lt;b&gt;
Nodel: &lt;c&gt; inherits from Nodal: &lt;y&gt;.
(Where a number of node-path specifications for a
given node are stated together, the node need not
be re-iterated. The full stop is delimiter for either a
single equation or such a cluster of equations.)
Where inheritance specifications are global, with
the node or path on the rhs in double quotes:
</bodyText>
<equation confidence="0.8060545">
Node4: &lt;a&gt; == &amp;quot;Wode5&amp;quot;
&lt;b&gt; ==
</equation>
<bodyText confidence="0.999869727272727">
then the &apos;global context&apos; node or path is picked up
to complete the specification. For the purposes of
this paper, the global context node and path are the
initial query node and path.
When there is no lhs to exactly match a node-path
pair to be evaluated, the mechanism which gives rise
to DATR&apos;s nonmonotonicity comes into play. This is
the &apos;longest leading subpath&apos; principle. The node-
path pair inherits according to the equation at the
node which matches the longest leading subpath.
Thus, with Nodel as defined above,
</bodyText>
<subsectionHeader confidence="0.584614">
Nodel:‹a ax ay&gt; inherits from Node2:&lt;x ax ay&gt;
Nodel: &lt;b bx by&gt; inherits from Node3: &lt;b bx by&gt;
Nodel:&lt;c cx cy&gt; inherits from Nodel:&lt;y cx cy&gt;
</subsectionHeader>
<bodyText confidence="0.563272">
If there were any more specific paths defined at
Node1, for
&lt;a ax&gt;,
</bodyText>
<subsectionHeader confidence="0.398745">
&lt;a ax ay&gt;,
&lt;b bx&gt;, etc.,
</subsectionHeader>
<bodyText confidence="0.982959666666667">
then these inheritances would be overridden. Note
that the match must be with the longest leading sub-
path. In this fragment, the queries
</bodyText>
<note confidence="0.613108333333333">
Nodel: &lt;d&gt;,
&lt;ax a&gt;, and
Nodel: &lt;&gt;
</note>
<figureCaption confidence="0.999431">
Figure 5: AVM for intransitive melt.
</figureCaption>
<figure confidence="0.999433769230769">
WORD melt
SYN [
MAJ
SUBCAT
RELN
CAUSER
SEM
CAUSED
V
(NP[NOM] SEM
NP[ACC] SEM 2
CAUSE
RELN MELT/1 I
MELTED
El
WORD
SYN
SEM
El
melt
F MAJ
V
SUBCAT (NP[NOM] SEM
RELN MELT/1
MELTED
El
</figure>
<page confidence="0.997149">
216
</page>
<bodyText confidence="0.996842428571428">
all fail to match and are undefined. (The other
queries may also be undefined, if the trail of inher-
itance specifications terminates without reaching a
value at some later stage, but they are not found to
be undefined at this stage.)
Two particular cases of inheritance used in the pa-
per are:
</bodyText>
<equation confidence="0.803836">
Node5: &lt;&gt; == Node6
&lt;e&gt; == Node7:&lt;&gt;.
</equation>
<bodyText confidence="0.9503827">
In the first, the leading subpath to be matched is
null, so this is a default of defaults: no queries will
terminate at this point, since any query which does
not make a more specific match will match this line
and get passed on from NodeS to Node6, path un-
changed. This is the simplest form of inheritance,
usually used to specify the basic taxonomy in a DATR
theory. In the second, path element e is &apos;chopped&apos;
from the beginning of the path, so:
Node5:‹e ex ey&gt; inherits from Node7: &lt;ex ey&gt;.
</bodyText>
<sectionHeader confidence="0.995998" genericHeader="method">
4 Translations into DATR
</sectionHeader>
<bodyText confidence="0.999712333333333">
Now we move on from describing the alternations,
and describing the inheritance formalism, to repre-
senting the alternations within the formalism. The
DATR translation is straightforward: AVMs can be
rewritten as sets of equations which then become sets
of DATR equations. DATR paths must be associated
with nodes, so a node for the paths to be located at is
introduced. FIRST and REST have been shortened
to fi and re. DATR is not a unification formalism,
and all the theory will do in relation to re-entrancies
will be to mark them with matched pairs of variables,
here vi, v2 etc., to be interpreted as re-entrant pairs
outside DATR. We introduce the feature binding for
the variables to be the value of.2 In order that gener-
alisations covering BAKERS, COOKERS and FRY-
Efts can be stated, we replace verb-specific names
such as BAKER for slots on a semantic args list.
(This does not represent a change in the semantics:
the first member of the argument list of the bake
predicate will continue to be the BAKER whatever
lexical entry it occurs in. It simply allows us to ex-
press generalisations.) We use pred for the predi-
cate rather than RELN. Following these changes, the
(simplified) DATR lexical entry for transitive bake is:
</bodyText>
<figure confidence="0.366417142857143">
Bake:&lt;word&gt; = bake
&lt;syn maj&gt; = v
&lt;syn subcat fi sem binding&gt; = vi
&lt;syn subcat re fi sem binding&gt; = v2
&lt;syn subcat re re&gt; = nil
&lt;sem pred&gt; = bake
&lt;sem args fi binding&gt; = vi
</figure>
<footnote confidence="0.5104325">
2The feature also makes it possible to use the fact that
a semantic argument has an existential-quantification
(ex-q) binding to override the default that it is bound
to a complement.
</footnote>
<bodyText confidence="0.64546">
&lt;sem args re fi binding&gt; = v2
&lt;sem args fi binding&gt; = nil.
</bodyText>
<sectionHeader confidence="0.928882" genericHeader="method">
5 An inheritance hierarchy
</sectionHeader>
<bodyText confidence="0.998168052631579">
The next task is to place the verbs in a hierarchy so
generalisations need stating only once. DATR allows
different kinds of information to be inherited from
different places, and also allows generalisations to be
overridden by either idiosyncratic facts or subregu-
larities. The hierarchy is illustrated in Fig. 1. At
the top of the tree is WORD-CLASS, then VERB, from
where all verbs inherit. They all have a subject, and
by default this unifies with the first item on the args
list. There will be no call for an INTRANSITIVE node
because all the positive information that might be
stated there is true of all verbs so can be stated at
the VERB node, and the negative information that
intransitive verbs do not have direct objects is ex-
pressed by the termination of the subcat list after
its first item at VERB (via ARG and NIL; see below).
TRANSITIVE inherits from VERB, adding the default
binding between second complement and second ar-
gument.
</bodyText>
<table confidence="0.418190857142857">
VERB: &lt;&gt; == WORD-CLASS
&lt;syn maj&gt; == verb
&lt;syn subcat fi sem binding&gt; == vi
&lt;sem args fi binding&gt; == vi.
TRANSITIVE: &lt;&gt; == VERB
&lt;syn subcat re fi sem binding&gt; == v2
&lt;sem args re fi binding&gt; == v2.
</table>
<bodyText confidence="0.9564482">
List termination involves a measure of ingenuity, in
order that nil is the value of &lt;syn subcat re&gt; and
&lt;sem args re&gt; at VERB and &lt;syn subcat re re&gt;
and &lt;sem args re re&gt; at TRANSITIVE, but nowhere
else:3
</bodyText>
<figure confidence="0.849256230769231">
VERB: &lt;sem args&gt; == ARG: &lt;&gt;
&lt;syn subcat&gt; == COMP:&lt;&gt;.
&lt;syn subcat fi syn case&gt; == nom
&lt;sem args fi semfeats&gt; == AGENT:&lt;&gt;.
TRANSITIVE: &lt;syn subcat re&gt; == COMP:&lt;&gt;
&lt;sem args re&gt; == ARG:&lt;&gt;.
ARG:&lt;fi semfeats&gt; == PATIENT:&lt;&gt;
&lt;re&gt; == NIL:&lt;&gt;.
COMP:&lt;fi syn&gt; ==
&lt;re&gt; == NIL:&lt;&gt;.
NIL:&lt;&gt; == nil
&lt;f I&gt; == UNDEF
&lt;re&gt; == UNDEF.
</figure>
<bodyText confidence="0.931476333333333">
The COMP and ARG nodes provide a location for de-
fault information about syntactic complements and
semantic arguments. Complements are, by default,
accusative noun phrases. Following [Dowty, 1991],
we have a default expectation that subjects will have
`proto-agent&apos; semantic features and objects, `proto-
patient&apos; ones. The role of Dowty&apos;s approach in this
analysis is that it gives us a way of marking the dif-
ference between agents and patients which says more
</bodyText>
<footnote confidence="0.968967">
3This treatment is due to Roger Evans.
</footnote>
<page confidence="0.997982">
217
</page>
<bodyText confidence="0.99991">
than simply using the labels &apos;agent&apos; and &apos;patient&apos;,
and has the potential for subtler distinctions, with
different subsets of proto-agent and proto-patient
features applying to subjects and objects of different
verb classes. AGENT and PATIENT set up the expected
values for four of the characteristics Dowty discusses.
</bodyText>
<equation confidence="0.9996475">
NP:&lt;maj&gt; == n
&lt;case&gt; == acc.
AGENT:&lt;volition&gt; == yes
&lt;sentient&gt; == yes.
PATIENT:&lt;changes-state&gt; = = yes
&lt;causally-affected&gt; == yes.
</equation>
<bodyText confidence="0.964723470588235">
The default accusative case and proto-patient seman-
tic features must be overridden in the case of the
subject:
VERB:&lt;syn subcat fi syn case&gt; == nom
&lt;sem args fi semfeats&gt; == AGENT:&lt;&gt;.
To this skeleton, we add some smaller classes
based on meanings. Once we introduce them we
can start expressing generalisations about alterna-
tion behaviour. To distinguish alternate forms from
base forms, we introduce the alt prefix. To re-
quest information about a non-base form, we start
the query path with alt x, where x is a label identi-
fying the alternation under consideration. We adopt
a convention whereby all-upper-case nodenames are
used for nodes for classes of words, such as cook-
ing verbs, while lexical nodes have only initial letters
capitalised.
</bodyText>
<equation confidence="0.995314">
Bake:&lt;&gt; == COOKING-VB
&lt;word&gt; == bake
&lt;sem pred&gt; == bake.
COOKING-VB:&lt;&gt; == C-OF-S
&lt;sem args re fi semfeats edible&gt; == yes.
C-OF-S:&lt;&gt; == TRANSITIVE
&lt;alt erg&gt; == PHYS-PROC:&lt;&gt;
&lt;alt erg sem&gt; == &amp;quot;&lt;sem&gt;&amp;quot;
</equation>
<bodyText confidence="0.981053735294118">
&lt;alt erg sem args fi binding&gt; == ex-q
&lt;alt erg sem args re fi binding&gt; == vi.
Bake is a cooking verb, and cooking verbs are, in
the base case, transitive change-of-state verbs. Thus
Bake inherits, by default, from COOKING-VB which
inherits from C-OF-S (for &apos;change of state&apos;) and then
from TRANSITIVE, so acquiring the default specifica-
tions for semantic features for its subject and object,
and the re-entrancies between subject and first argu-
ment, and object and second argument. The DATR
fragment now represents all the information in the
DATR lexical entry for bake presented above, and
case and proto-agent and proto-patient specifications
in addition.
The first generalisation about alternations that
we wish to capture is that change-of-state transi-
tives such as bake undergo the ergative alternation
to become change-of-state intransitives, or &apos;physical
process&apos; verbs. We access the lexical entries for the
ergative forms of verbs with DATR queries with the
path prefix alt erg, which work as follows. The
semantics of the ergative will be the same predicate-
argument structure as the base form, and this is im-
plemented in the third line of the C-OF-S node which
tells us, with the double-quotes, to inherit the erga-
tive&apos;s semantics from the semantics of the node for
the base form of the verb. The two further speci-
fications for ergatives are that the first argument is
existentially quantified, and the second unifies with
the first complement via vi.
In all other matters, as the second line of the
C-OF-S node tells us, the ergative form is diverted
to inherit from a node for physical-process intransi-
tives:
</bodyText>
<equation confidence="0.85493">
PHYS-PROC:&lt;&gt; == VERB
&lt;sem args fi semfeats&gt; == PATIENT:&lt;&gt;.
</equation>
<bodyText confidence="0.97322224">
The first semantic argument of a physical-process in-
transitive has proto-patient semantic features and
otherwise inherits from VERB. This is a case where
the default - that first semantic arguments (realised
as subjects in the base case) have proto-agent fea-
tures - has been overridden, but the reader will note
that this has been entirely straightforward to express
in DATR.
We now have almost all the information needed to
build the lexical entry for ergative bake. One item we
do not yet have is the intuitively obvious fact that
the word for the alternate form is the word for the
original. This is true by definition for all alternate
forms. All alternate forms will eventually have their
alt x prefix (or prefixes) stripped and inherit from
WORD-CLASS at the top of the tree. So we add the
following line:
WORD-CLASS:&lt;word&gt; == &amp;quot;&lt;word&gt;&amp;quot;.
Now all alternate forms will inherit their word from
the word at the global context node, which will al-
ways be the node for the base form.
Many cooking verbs undergo the &apos;unspecified ob-
ject&apos; alternation, for which we shall use the label
unspec. All information relating to this form is gath-
ered at an UNSPEC node:
</bodyText>
<equation confidence="0.844838">
UNSPEC:&lt;&gt; == VERB
&lt;sem&gt; == &amp;quot;&lt;sem&gt;&amp;quot;
&lt;sem args re fi binding&gt; = = ex -q.
</equation>
<bodyText confidence="0.958621833333333">
This simply states that the form is a standard intran-
sitive, with the semantics of the base form except
that the second argument is existentially quantified.
Cooking verbs with alt unspec prefixes are diverted
here by the addition of:
COOKING-VB:&lt;alt unspec&gt; == UNSPEC:&lt;&gt;.
Now we move on to melt, a physical-process verb
with a causative form. The ergative alternation led
from C-OF-S to PHYS-PROC. This makes a similar
journey in the opposite direction, from PHYS-PROC
to CAUSE and then TRANSITIVE. The alternation la-
bel is cause.
</bodyText>
<page confidence="0.995668">
218
</page>
<figure confidence="0.6555223">
Melt:&lt;&gt; == PHYS-PROC
&lt;sem pred&gt; == melt
&lt;word&gt; == melt.
PHYS-PROC:&lt;&gt; == VERB
&lt;elt cause&gt; == CAUSE:&lt;&gt;
&lt;alt cause sem args re fi&gt; == &amp;quot;&lt;sem&gt;&amp;quot;
&lt;alt cause sem args re fi
args fi binding&gt; == v2.
CAUSE:&lt;&gt; == TRANSITIVE
&lt;sem pred&gt; == cause.
</figure>
<bodyText confidence="0.996056533333334">
Causative melt, with the tat cause prefix, is
a regular verb of causing, and inherits its syntax
and most of its semantics including the predicate
cause/2 from CAUSE. Its first argument will have the
usual characteristics of a CAUSER, and its second,
the predicate-argument structure of the base form of
the verb. As the predicate melt is now identified as
the second argument of cause, the item that melts
is identified as the first argument of the second ar-
gument of the causative form of the verb, and it is
this which is re-entrant with the second item on the
subcat list, as specified in the final line of PHYS-PROC.
The reward for this superstructure is that lexical
entries can now be very concise. By adding a three-
line entry, e.g.,
</bodyText>
<construct confidence="0.336619">
Bake: &lt;&gt; == COOKING-VB
&lt;word&gt; == bake
&lt;sem pred&gt; == bake.
</construct>
<bodyText confidence="0.99880875">
to the lexicon, we make available, for cooking verbs
such as bake, a set of eighteen specifications for the
base form, and fifteen each for the ergative and
unspecified-object, and for physical process verbs, fif-
teen for the base and eighteen for the causative, all
complete with case, subcategorisation, proto-agent,
proto-patient and re-entrancy specifications, as be-
low:
</bodyText>
<tableCaption confidence="0.9320335">
Bake: &lt;lexical&gt; = true.
Bake: &lt;word&gt; = bake.
Bake: &lt;syn maj&gt; = verb.
Bake: &lt;syn subcat fi syn maj&gt; = n.
Bake: &lt;syn subcat fi syn case&gt; = nom.
Bake: &lt;syn subcat fi sem binding&gt; = vi
Bake: &lt;syn subcat re fi syn maj&gt; = n.
Bake: &lt;syn subcat re fi syn case&gt; = acc.
Bake: &lt;syn subcat re fi sem binding&gt; = v2.
Bake: &lt;syn subcat re re&gt; = nil.
Bake: &lt;sem pred&gt; = bake /2.
Bake: &lt;sem args fi binding&gt; = vi.
Bake: &lt;sem args fi semfeats volition&gt; = yes.
Bake: &lt;sem ergs fi semfeats sentient&gt; = yes.
Bake: &lt;sem args re fi binding&gt; = v2.
Bake: &lt;sem ergs re fi semfeats
changes-state&gt; = yes.
Bake: &lt;sem ergs re fi semfeats
causally-affected&gt; = yes.
Bake: &lt;sem args re re&gt; = nil.
</tableCaption>
<sectionHeader confidence="0.970986" genericHeader="conclusions">
6 Summary and discussion
</sectionHeader>
<bodyText confidence="0.999884431034483">
First, HPSG-style verbal lexical entries, and the
mappings between them corresponding to alterna-
tions, were described. But at this stage, the gener-
alisations were not captured. So then these entries
were translated into DATR, and arranged into a tax-
onomy so an alternation only needed expressing once,
at a non-terminal node from which the verbs to which
it applied would inherit. Information about syntax,
semantics, and patterns of polysemy was concisely
expressed in a manner both theoretically and com-
putationally appealing.
The lexicon fragment described in detail is part
of a larger fragment which also formalises the rela-
tions holding between transitives and intransitives
of &apos;care&apos; verbs such as wash, where the intransitive
means the same as the reflexive; between transi-
tive, intransitive, and two ditransitive forms of the
&apos;clear&apos; verbs (&amp;quot;clear the desk&amp;quot;; &amp;quot;the skies cleared&amp;quot;;
&amp;quot;clear the desk of papers&amp;quot;; &amp;quot;clear the papers off the
desk&amp;quot;); and between transitive and ditransitive forms
of &apos;wipe&apos; verbs (&amp;quot;wipe the shelf&amp;quot;; &amp;quot;wipe the dust off
the shelf&amp;quot;). The complete fragment thus covers a
number of the common transitivity alternations of
English.
The paper aims to present both a study of lexical
structure and an approach to practical lexicography.
On the latter score, the ideal to which the paper con-
tributes sees the lexicographer only ever needing to
explicitly enter information that is idiosyncratic to
a word and inheritance specifications, as everything
that is predictable about a word&apos;s behaviour will be
inferred. Maintaining consistency in the lexical rep-
resentation, and updating and revising it, will also be
quicker if a generalisation is located just at one place
in the lexicon rather than at every word to which it
applies.
Transitivity alternations defy classification as ei-
ther syntactic or semantic phenomena. They are
clearly both. The generalisations are associated with
semantic classes of verbs, and have both syntactic
and semantic consequences. The verb taxonomy of
Fig. 1 may be used for conveying specifically linguis-
tic information, as explored in this paper, but also
potentially forms part of an encyclopedic knowledge
base, with knowledge about any type of cooking held
at the COOKING-VB node and knowledge specifically
about frying and baking at the Fry and Bake nodes.
It might be argued that this is to confuse two differ-
ent kinds of information, but, as illustrated in this
paper and argued in [Kilgarriff, 1992], the lexicon
of English holds both the syntax and semantics of
lexical items. The approach offered here indicates
how linguistic and encyclopedic generalisations may
be attached to the same taxonomic structure.
[Boguraev and Levin, 1990] show that an expres-
sively adequate model for the lexicon must incorpo-
rate productive rules so that novel but rulebound
uses of words can be captured. Thus &amp;quot;the her-
</bodyText>
<page confidence="0.996337">
219
</page>
<bodyText confidence="0.999879714285714">
ring soused&amp;quot; is interpretable by any English speaker
who has come across soused herring, but intransitive
souse will not be added by any lexicographer to any
dictionary: it is most unlikely that any corpus will
provide any evidence for the form, and if it did, it
would be of insufficient frequency to justify explicit
treatment. The ergative form of souse must there-
fore be in the lexicon implicitly. Its availability to
speakers and hearers of English can be inferred from
knowledge of the kind of verb which souse is and the
kinds of processes, or alternations, that verbs of that
class can undergo. The DATR analysis demonstrates
how such implicit availability of verb forms can be
formalised.
</bodyText>
<subsectionHeader confidence="0.758974">
6.1 Further work
</subsectionHeader>
<bodyText confidence="0.999993371428571">
A further question that the question of productivity
invites is this: how are we to represent which verbs
undergo which alternations? First, we might wish
to develop devices within DATR or a related formal-
ism for identifying which alternations apply where,
and two such mechanisms are presented in [Kilgar-
riff, 1992]. But as we look closer, and consider the
difficulty of placing many verbs in a semantic class,
or the role of metaphor, analogy, and simple familiar-
ity in determining which alternations are applicable
in a given context of language-use, so the idea of a
yes/no answer to questions of the form, &amp;quot;does this
verb undergo this alternation?&amp;quot; loses plausibility.
This reasoning applies also to verb classes. The
analysis offers an account of verb behaviour which
is premised on verb classes, but their only justifica-
tion has been by appeal to commonsense and an ill-
defined notion of their ability to predict which alter-
nations a verb participates in. Nothing has been said
about how the classes might be identified, or how
decisions regarding where a verb should be placed
might be made.
The questions, &amp;quot;what class does a verb belong
to?&amp;quot;, &amp;quot;what are the relative frequencies of the dif-
ferent patterns it occurs in?&amp;quot;, and &amp;quot;is this pattern
grammatical?&amp;quot; are intimately connected. Alterna-
tion behaviour is a major source of evidence as to
how a verb should be classified, and grammaticality
judgements are premised upon the patterns a com-
petent speaker has frequently encountered in their
experience of the language. The further develop-
ment of computational lexical semantics of the kind
described in this paper requires foundational work
on the relation of corpus-based statistical findings to
formal knowledge representation.
</bodyText>
<sectionHeader confidence="0.999642" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999790066666667">
[Atkins et al., 1986] B. T. S. Atkins, Judy Kegl, and
Beth Levin. Explicit and implicit information in
dictionaries. In Advances in Lexicography: Proc.
Second Ann. Conf. of the UW Centre for the New
OED, pages 45-65, Waterloo, Canada, 1986.
[Boguraev and Levin, 1990] Branimir K. Boguraev
and Beth Levin. Models for lexical knowledge
bases. In Electronic Text Research: Proc. Sixth
Ann. Conf of the UW Centre for the New OED,
pages 65-78, Waterloo, Canada, 1990.
[Brachman and Levesque, 1985] Ronald .1. Brach-
man and Hector J. Levesque, editors. Readings
in Knowledge Representation. Morgan Kaufmann,
Los Altos, California, 1985.
[Briscoe et al., 1990] Edward J. Briscoe, Ann A.
Copestake, and Branimir K. Boguraev. Enjoy the
paper: Lexical semantics via lexicology. In COL-
ING 90, volume 2, pages 42-47, Helsinki, 1990.
[Cahill and Evans, 1990] Lynne J. Cahill and Roger
Evans. An application of DATR: The TIC lexicon.
In Proc. ECAI-90, pages 120-125,1990.
[Cahill, 1993] Lynne J. Cahill. Morphonology in the
lexicon. In ACL Proceedings, 6th European Con-
ference, Utrecht, 1993.
[Chierchia and McConnell-Ginet, 1990]
Gennaro Chierchia and Sally McConnell-Ginet.
Meaning and Grammar. An Introduction to Se-
mantics. MIT Press, Cambridge, Mass., 1990.
[Copestake and Briscoe, 1991] Ann A. Copestake
and Edward J. Briscoe. Lexical operations in
a unification-based framework. In James Puste-
jovsky and Sabine Bergler, editors, Lexical seman-
tics and knowledge representation: ACL SIGLEX
Workshop, Berkeley, California, 1991.
[Copestake, 1992] Ann Copestake. The ACQUILEX
LKB: representation issues in semi-automatic ac-
quisition of large lexicons. In Proc. Third Conf. on
Applied Natural Language Processing, pages 88-
95, Trento, Italy, 1992. Association of Computa-
tional Linguistics.
[Dowty, 1979] David R. Dowty. Word Meaning in
Montague Semantics. Reidel, Dordrecht, 1979.
[Dowty, 1991] David R. Dowty. Thematic proto-
roles and argument selection. Language,
67(3):547-619,1991.
[Evans and Gazdar, 1989a] Roger Evans and Gerald
Gazdar. Inference in DATR. In ACL Proceedings,
4th European Conference, pages 1-9, Manchester,
1989.
[Evans and Gazdar, 1989b] Roger Evans and Ger-
ald Gazdar. The semantics of DATR. In An-
thony G. Cohn, editor, Proc. Seventh Conference
of the AISB, pages 79-87, Falmer, Sussex, 1989.
[Evans and Gazdar, 1990] Roger Evans and Gerald
Gazdar. The DATR papers. Technical Report
CSRP 139, School of Cognitive and Computing
Sciences, University of Sussex, Falmer, Sussex,
1990.
[Gibbon, 1990] Dafydd Gibbon. Prosodic associa-
tion by template inheritance. In Proc. Workshop
</reference>
<page confidence="0.957134">
220
</page>
<reference confidence="0.998555255319149">
on Inheritance in Natural Language Processing,
pages 65-81, Tilburg, 1990. ITK.
[Kilgarriff and Gazdar, 1993 forthcoming] Adam
Kilgarriff and Gerald Gazdar. Polysemous rela-
tions. In Frank R. Palmer, editor, Festschrift for
Sir John Lyons. CUP, Cambridge, England, 1993,
forthcoming.
[Kilgarriff, 1992] Adam Kilgarriff. Polysemy. PhD
thesis, University of Sussex, CSRP 261, School of
Cognitive and Computing Sciences, 1992.
[Kilgarriff, 1993 forthcoming] Adam Kilgarriff. In-
heriting polysemy. In Patrick St. Dizier and Eve-
lyne Viegas, editors, Computational Lexical Se-
mantics. CUP, 1993, forthcoming.
[Levin and Rappoport Hovav, 19911 Beth Levin and
Malka Rappoport Hovav. Wiping the slate clean:
A lexical semantic exploration. Cognition, 41:123-
151, 1991.
[Levin, 19911 Beth Levin. Building a lexicon: The
contribution of linguistics. International Journal
of Lexicography, 4(3):205-226, 1991.
[Moore, 1989] Robert C. Moore. Unification-based
semantic interpretation. In ACL Proceedings, 27th
Annual Meeting, pages 33-41, Vancouver, 1989.
[Pollard and Sag, 1987] Carl Pollard and Ivan A.
Sag. An Information-Based Approach to Syntax
and Semantics. Volume I: Fundamentals. CSLI
Lecture Notes, No. 13. Chicago University Press,
Chicago, 1987.
[Pustejovsky, 1991] James Pustejovsky. The gen-
erative lexicon. Computational Linguistics,
17(4):409-441, 1991.
[Russell et at, 1991] Graham Russell, Afzal Ballim,
John Carroll, and Susan Armstrong-Warwick. A
practical approach to multiple default inheritance
for unification-based lexicons. In Edward J.
Briscoe, Ann A. Copestake, and Valeria de Paiva,
editors, Proc. ACQUILEX workshop on default in-
heritance in the lexicon, Tech. report 238, Univer-
sity of Cambridge Computer Laboratory, 1991.
[Sanfilippo and Poznanski, 1992] Antonio Sanfil-
ippo and Victor Poznanski. The acquisition of lex-
ical knowledge from combined machine-readable
dictionary sources. In Proc. Third Conf. on Ap-
plied Natural Language Processing, pages 80-87,
Trento, Italy, 1992. Association of Computational
Linguistics.
</reference>
<page confidence="0.998315">
221
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.234987">
<title confidence="0.999893">Inheriting Verb Alternations</title>
<author confidence="0.985497">Adam Kilgarriff</author>
<affiliation confidence="0.5595555">Longman Dictionaries Burnt Mill</affiliation>
<address confidence="0.788116">Harlow, Essex CM20 2JE England</address>
<abstract confidence="0.99451505">The paper shows how the verbal lexicon can be formalised in a way that captures and exploits generalisations about the alternation behaviour of verb classes. An alternation is a pattern in which a number of words share the same relationship between a pair of senses. The alternations captured are ones where the different senses specify different relationships between syntactic complements and semantic arguments, as &amp;quot;John is baking the cake&amp;quot; and &amp;quot;The cake is baking&amp;quot;. The formal lanused is lexical entries it builds are as specified in HPSG. The complex alternation behaviour shared between families of verbs is elegantly represented in a way that makes generalisations explicit, avoids redundancy, and offers practical benefits to computational lexicographers.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>B T S Atkins</author>
<author>Judy Kegl</author>
<author>Beth Levin</author>
</authors>
<title>Explicit and implicit information in dictionaries.</title>
<date>1986</date>
<booktitle>In Advances in Lexicography: Proc. Second Ann. Conf. of the UW Centre for the New OED,</booktitle>
<pages>45--65</pages>
<location>Waterloo, Canada,</location>
<marker>[Atkins et al., 1986]</marker>
<rawString>B. T. S. Atkins, Judy Kegl, and Beth Levin. Explicit and implicit information in dictionaries. In Advances in Lexicography: Proc. Second Ann. Conf. of the UW Centre for the New OED, pages 45-65, Waterloo, Canada, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Branimir K Boguraev</author>
<author>Beth Levin</author>
</authors>
<title>Models for lexical knowledge bases.</title>
<date>1990</date>
<booktitle>In Electronic Text Research: Proc. Sixth Ann. Conf of the UW Centre for the New OED,</booktitle>
<pages>65--78</pages>
<location>Waterloo, Canada,</location>
<marker>[Boguraev and Levin, 1990]</marker>
<rawString>Branimir K. Boguraev and Beth Levin. Models for lexical knowledge bases. In Electronic Text Research: Proc. Sixth Ann. Conf of the UW Centre for the New OED, pages 65-78, Waterloo, Canada, 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brachman</author>
<author>J Hector</author>
</authors>
<date>1985</date>
<booktitle>Readings in Knowledge Representation.</booktitle>
<editor>Levesque, editors.</editor>
<publisher>Morgan Kaufmann,</publisher>
<location>Los Altos, California,</location>
<marker>[Brachman and Levesque, 1985]</marker>
<rawString>Ronald .1. Brachman and Hector J. Levesque, editors. Readings in Knowledge Representation. Morgan Kaufmann, Los Altos, California, 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Edward J Briscoe</author>
<author>Ann A Copestake</author>
<author>Branimir K Boguraev</author>
</authors>
<title>Enjoy the paper: Lexical semantics via lexicology.</title>
<date>1990</date>
<booktitle>In COLING 90,</booktitle>
<volume>2</volume>
<pages>42--47</pages>
<location>Helsinki,</location>
<marker>[Briscoe et al., 1990]</marker>
<rawString>Edward J. Briscoe, Ann A. Copestake, and Branimir K. Boguraev. Enjoy the paper: Lexical semantics via lexicology. In COLING 90, volume 2, pages 42-47, Helsinki, 1990.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Lynne J Cahill</author>
<author>Roger Evans</author>
</authors>
<title>An application of DATR: The TIC lexicon.</title>
<booktitle>In Proc. ECAI-90,</booktitle>
<pages>120--125</pages>
<marker>[Cahill and Evans, 1990]</marker>
<rawString>Lynne J. Cahill and Roger Evans. An application of DATR: The TIC lexicon. In Proc. ECAI-90, pages 120-125,1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lynne J Cahill</author>
</authors>
<title>Morphonology in the lexicon.</title>
<date>1993</date>
<booktitle>In ACL Proceedings, 6th European Conference,</booktitle>
<location>Utrecht,</location>
<marker>[Cahill, 1993]</marker>
<rawString>Lynne J. Cahill. Morphonology in the lexicon. In ACL Proceedings, 6th European Conference, Utrecht, 1993.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gennaro Chierchia</author>
<author>Sally McConnell-Ginet</author>
</authors>
<title>Meaning and Grammar. An Introduction to Semantics.</title>
<date>1990</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, Mass.,</location>
<marker>[Chierchia and McConnell-Ginet, 1990]</marker>
<rawString> Gennaro Chierchia and Sally McConnell-Ginet. Meaning and Grammar. An Introduction to Semantics. MIT Press, Cambridge, Mass., 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ann A Copestake</author>
<author>Edward J Briscoe</author>
</authors>
<title>Lexical operations in a unification-based framework.</title>
<date>1991</date>
<booktitle>In James Pustejovsky and Sabine Bergler, editors, Lexical semantics and knowledge representation: ACL SIGLEX Workshop,</booktitle>
<location>Berkeley, California,</location>
<marker>[Copestake and Briscoe, 1991]</marker>
<rawString>Ann A. Copestake and Edward J. Briscoe. Lexical operations in a unification-based framework. In James Pustejovsky and Sabine Bergler, editors, Lexical semantics and knowledge representation: ACL SIGLEX Workshop, Berkeley, California, 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ann Copestake</author>
</authors>
<title>The ACQUILEX LKB: representation issues in semi-automatic acquisition of large lexicons.</title>
<date>1992</date>
<journal>Association of Computational Linguistics.</journal>
<booktitle>In Proc. Third Conf. on Applied Natural Language Processing,</booktitle>
<pages>88--95</pages>
<location>Trento,</location>
<marker>[Copestake, 1992]</marker>
<rawString>Ann Copestake. The ACQUILEX LKB: representation issues in semi-automatic acquisition of large lexicons. In Proc. Third Conf. on Applied Natural Language Processing, pages 88-95, Trento, Italy, 1992. Association of Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David R Dowty</author>
</authors>
<title>Word Meaning in Montague Semantics.</title>
<date>1979</date>
<location>Reidel, Dordrecht,</location>
<marker>[Dowty, 1979]</marker>
<rawString>David R. Dowty. Word Meaning in Montague Semantics. Reidel, Dordrecht, 1979.</rawString>
</citation>
<citation valid="false">
<authors>
<author>David R Dowty</author>
</authors>
<title>Thematic protoroles and argument selection.</title>
<journal>Language,</journal>
<pages>67--3</pages>
<marker>[Dowty, 1991]</marker>
<rawString>David R. Dowty. Thematic protoroles and argument selection. Language, 67(3):547-619,1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger Evans</author>
<author>Gerald Gazdar</author>
</authors>
<title>Inference in DATR.</title>
<date>1989</date>
<booktitle>In ACL Proceedings, 4th European Conference,</booktitle>
<pages>1--9</pages>
<location>Manchester,</location>
<marker>[Evans and Gazdar, 1989a]</marker>
<rawString>Roger Evans and Gerald Gazdar. Inference in DATR. In ACL Proceedings, 4th European Conference, pages 1-9, Manchester, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger Evans</author>
<author>Gerald Gazdar</author>
</authors>
<title>The semantics of DATR.</title>
<date>1989</date>
<booktitle>Proc. Seventh Conference of the AISB,</booktitle>
<pages>79--87</pages>
<editor>In Anthony G. Cohn, editor,</editor>
<location>Falmer, Sussex,</location>
<marker>[Evans and Gazdar, 1989b]</marker>
<rawString>Roger Evans and Gerald Gazdar. The semantics of DATR. In Anthony G. Cohn, editor, Proc. Seventh Conference of the AISB, pages 79-87, Falmer, Sussex, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger Evans</author>
<author>Gerald Gazdar</author>
</authors>
<title>The DATR papers.</title>
<date>1990</date>
<tech>Technical Report CSRP 139,</tech>
<institution>School of Cognitive and Computing Sciences, University of Sussex,</institution>
<location>Falmer, Sussex,</location>
<marker>[Evans and Gazdar, 1990]</marker>
<rawString>Roger Evans and Gerald Gazdar. The DATR papers. Technical Report CSRP 139, School of Cognitive and Computing Sciences, University of Sussex, Falmer, Sussex, 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dafydd Gibbon</author>
</authors>
<title>Prosodic association by template inheritance.</title>
<date>1990</date>
<booktitle>In Proc. Workshop on Inheritance in Natural Language Processing,</booktitle>
<pages>65--81</pages>
<publisher>ITK.</publisher>
<location>Tilburg,</location>
<marker>[Gibbon, 1990]</marker>
<rawString>Dafydd Gibbon. Prosodic association by template inheritance. In Proc. Workshop on Inheritance in Natural Language Processing, pages 65-81, Tilburg, 1990. ITK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Kilgarriff</author>
<author>Gerald Gazdar</author>
</authors>
<title>Polysemous relations.</title>
<date>1993</date>
<booktitle>Festschrift for Sir John Lyons. CUP,</booktitle>
<pages>forthcoming.</pages>
<editor>In Frank R. Palmer, editor,</editor>
<location>Cambridge, England,</location>
<marker>[Kilgarriff and Gazdar, 1993 forthcoming]</marker>
<rawString>Adam Kilgarriff and Gerald Gazdar. Polysemous relations. In Frank R. Palmer, editor, Festschrift for Sir John Lyons. CUP, Cambridge, England, 1993, forthcoming.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Polysemy</author>
</authors>
<date>1992</date>
<booktitle>CSRP 261, School of Cognitive and Computing Sciences,</booktitle>
<tech>PhD thesis,</tech>
<institution>University of Sussex,</institution>
<marker>[Kilgarriff, 1992]</marker>
<rawString>Adam Kilgarriff. Polysemy. PhD thesis, University of Sussex, CSRP 261, School of Cognitive and Computing Sciences, 1992.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Adam Kilgarriff</author>
</authors>
<title>Inheriting polysemy.</title>
<date>1991</date>
<journal>International Journal of Lexicography,</journal>
<booktitle>In Patrick St. Dizier and Evelyne Viegas, editors, Computational Lexical Semantics. CUP, 1993, forthcoming. [Levin and Rappoport Hovav, 19911 Beth Levin and Malka Rappoport Hovav. Wiping the slate clean: A lexical semantic exploration. Cognition,</booktitle>
<pages>41--123</pages>
<location>Levin,</location>
<marker>[Kilgarriff, 1993 forthcoming]</marker>
<rawString>Adam Kilgarriff. Inheriting polysemy. In Patrick St. Dizier and Evelyne Viegas, editors, Computational Lexical Semantics. CUP, 1993, forthcoming. [Levin and Rappoport Hovav, 19911 Beth Levin and Malka Rappoport Hovav. Wiping the slate clean: A lexical semantic exploration. Cognition, 41:123-151, 1991. [Levin, 19911 Beth Levin. Building a lexicon: The contribution of linguistics. International Journal of Lexicography, 4(3):205-226, 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert C Moore</author>
</authors>
<title>Unification-based semantic interpretation.</title>
<date>1989</date>
<booktitle>In ACL Proceedings, 27th Annual Meeting,</booktitle>
<pages>33--41</pages>
<location>Vancouver,</location>
<marker>[Moore, 1989]</marker>
<rawString>Robert C. Moore. Unification-based semantic interpretation. In ACL Proceedings, 27th Annual Meeting, pages 33-41, Vancouver, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carl Pollard</author>
<author>Ivan A Sag</author>
</authors>
<title>An Information-Based Approach to Syntax and Semantics. Volume I: Fundamentals.</title>
<date>1987</date>
<booktitle>CSLI Lecture Notes, No. 13.</booktitle>
<publisher>Chicago University Press,</publisher>
<location>Chicago,</location>
<marker>[Pollard and Sag, 1987]</marker>
<rawString>Carl Pollard and Ivan A. Sag. An Information-Based Approach to Syntax and Semantics. Volume I: Fundamentals. CSLI Lecture Notes, No. 13. Chicago University Press, Chicago, 1987.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
</authors>
<title>The generative lexicon.</title>
<date>1991</date>
<journal>Computational Linguistics,</journal>
<pages>17--4</pages>
<marker>[Pustejovsky, 1991]</marker>
<rawString>James Pustejovsky. The generative lexicon. Computational Linguistics, 17(4):409-441, 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Graham Russell</author>
<author>Afzal Ballim</author>
<author>John Carroll</author>
<author>Susan Armstrong-Warwick</author>
</authors>
<title>A practical approach to multiple default inheritance for unification-based lexicons.</title>
<date>1991</date>
<booktitle>Proc. ACQUILEX workshop on default inheritance in the lexicon, Tech. report 238,</booktitle>
<editor>In Edward J. Briscoe, Ann A. Copestake, and Valeria de Paiva, editors,</editor>
<institution>University of Cambridge Computer Laboratory,</institution>
<marker>[Russell et at, 1991]</marker>
<rawString>Graham Russell, Afzal Ballim, John Carroll, and Susan Armstrong-Warwick. A practical approach to multiple default inheritance for unification-based lexicons. In Edward J. Briscoe, Ann A. Copestake, and Valeria de Paiva, editors, Proc. ACQUILEX workshop on default inheritance in the lexicon, Tech. report 238, University of Cambridge Computer Laboratory, 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Antonio Sanfilippo</author>
<author>Victor Poznanski</author>
</authors>
<title>The acquisition of lexical knowledge from combined machine-readable dictionary sources.</title>
<date>1992</date>
<journal>Association of Computational Linguistics.</journal>
<booktitle>In Proc. Third Conf. on Applied Natural Language Processing,</booktitle>
<pages>80--87</pages>
<location>Trento,</location>
<marker>[Sanfilippo and Poznanski, 1992]</marker>
<rawString>Antonio Sanfilippo and Victor Poznanski. The acquisition of lexical knowledge from combined machine-readable dictionary sources. In Proc. Third Conf. on Applied Natural Language Processing, pages 80-87, Trento, Italy, 1992. Association of Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>