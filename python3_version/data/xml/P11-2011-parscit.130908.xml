<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000300">
<title confidence="0.985219">
Tier-based Strictly Local Constraints for Phonology
</title>
<author confidence="0.997523">
Jeffrey Heinz, Chetan Rawal and Herbert G. Tanner
</author>
<affiliation confidence="0.99734">
University of Delaware
</affiliation>
<email confidence="0.999">
heinz,rawal,btanner@udel.edu
</email>
<sectionHeader confidence="0.993903" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999652416666667">
Beginning with Goldsmith (1976), the phono-
logical tier has a long history in phonological
theory to describe non-local phenomena. This
paper defines a class of formal languages, the
Tier-based Strictly Local languages, which be-
gin to describe such phenomena. Then this
class is located within the Subregular Hier-
archy (McNaughton and Papert, 1971). It is
found that these languages contain the Strictly
Local languages, are star-free, are incompa-
rable with other known sub-star-free classes,
and have other interesting properties.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998946380952381">
The phonological tier is a level of representation
where not all speech sounds are present. For ex-
ample, the vowel tier of the Finnish word pdivda
‘Hello’ is simply the vowels in order without the
consonants: diad.
Tiers were originally introduced to describe tone
systems in languages (Goldsmith, 1976), and subse-
quently many variants of the theory were proposed
(Clements, 1976; Vergnaud, 1977; McCarthy, 1979;
Poser, 1982; Prince, 1984; Mester, 1988; Odden,
1994; Archangeli and Pulleyblank, 1994; Clements
and Hume, 1995). Although these theories differ in
their details, they each adopt the premise that repre-
sentational levels exist which exclude certain speech
sounds.
Computational work exists which incorporates
and formalizes phonological tiers (Kornai, 1994;
Bird, 1995; Eisner, 1997). There are also learning
algorithms which employ them (Hayes and Wilson,
2008; Goldsmith and Riggle, to appear). However,
there is no work of which the authors are aware that
</bodyText>
<page confidence="0.972827">
58
</page>
<bodyText confidence="0.995678058823529">
addresses the expressivity or properties of tier-based
patterns in terms of formal language theory.
This paper begins to fill this gap by defining Tier-
Based Strictly Local (TSL) languages, which gen-
eralize the Strictly Local languages (McNaughton
and Papert, 1971). It is shown that TSL languages
are necessarily star-free, but are incomparable with
other known sub-star-free classes, and that natural
groups of languages within the class are string exten-
sion learnable (Heinz, 2010b; Kasprzik and K¨otzing,
2010). Implications and open questions for learn-
ability and Optimality Theory are also discussed.
Section 2 reviews notation and key concepts. Sec-
tion 3 reviews major subregular classes and their re-
lationships. Section 4 defines the TSL languages,
relates them to known subregular classes, and sec-
tion 5 discusses the results. Section 6 concludes.
</bodyText>
<sectionHeader confidence="0.988172" genericHeader="introduction">
2 Preliminaries
</sectionHeader>
<bodyText confidence="0.946153105263158">
We assume familiarity with set notation. A finite al-
phabet is denoted E. Let En, Ern, E* denote all
sequences over this alphabet of length n, of length
less than or equal to n, and of any finite length, re-
spectively. The empty string is denoted A and |w |de-
notes the length of word w. For all strings w and all
nonempty strings u, |w|u denotes the number of oc-
currences of u in w. For instance, |aaaa|aa = 3. A
language L is a subset of E*. The concatenation of
two languages L1L2 = {uv : u E L1 and v E L2}.
For L C_ E* and a E E, we often write La instead
of L{Q}.
We define generalized regular expressions
(GREs) recursively. GREs include a, 0 and
each letter of E. If R and 5 are GREs then
R5, R + 5, R x 5, R, and R* are also GREs.
The language of a GRE is defined as follows.
Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics:shortpapers, pages 58–64,
Portland, Oregon, June 19-24, 2011. c�2011 Association for Computational Linguistics
</bodyText>
<equation confidence="0.9489162">
L(∅) = ∅. For all Q ∈ E ∪ {a}, L(Q) = {Q}.
If R and S are regular expressions then
L(RS) = L(R)L(S), L(R + S) = L(R) ∪ L(S),
and L(R × S) = L(R) ∩ L(S). Also,
L(R) = E* − L(R) and L(R*) = L(R)*.
</equation>
<bodyText confidence="0.989738285714286">
For example, the GRE ∅ denotes the language E*.
A language is regular iff there is a GRE defin-
ing it. A language is star-free iff there is a GRE
defining it which contains no instances of the Kleene
star (*). It is well known that the star-free languages
(1) are a proper subset of the regular languages, (2)
are closed under Boolean operations, and (3) have
multiple characterizations, including logical and al-
gebraic ones (McNaughton and Papert, 1971).
String u is a factor of string w iff ∃x, y ∈ E*
such that w = xuy. If also |u |= k then u is a k-
factor of w. For example, ab is a 2-factor of aaabbb.
The function Fk maps words to the set of k-factors
within them.
</bodyText>
<equation confidence="0.9843925">
Fk(w) = {u : u is a k-factor of w}
For example, F2(abc) = {ab, bc}.
</equation>
<bodyText confidence="0.99543975">
The domain Fk is generalized to languages L ⊆
E* in the usual way: Fk(L) = ∪wELFk(w). We
also consider the function which counts k-factors up
to some threshold t.
</bodyText>
<equation confidence="0.9574455">
Fk,t(w) = {(u, n) : u is a k-factor of w and
n = |w|u iff |w|u &lt; t else n = t}
</equation>
<bodyText confidence="0.980187375">
For example F2,3(aaaaab) = {(aa, 3), (ab,1)}.
A string u = Q1Q2 · · · Qk is a subsequence of a
string w iff w ∈ E*Q1E*Q2E* ··· E*QkE*. Since
|u |= k we also say u is a k-subsequence of w. For
example, ab is a 2-subsequence of caccccccccbcc.
By definition A is a subsequence of every string in
E*. The function P&lt;k maps words to the set of sub-
sequences up to length k found in those words.
</bodyText>
<equation confidence="0.996981">
P&lt;k(w) = {u ∈ E&lt;k : u is a subsequence of w}
</equation>
<bodyText confidence="0.999434">
For example P&lt;2(abc) = {a, a, b, c, ab, ac, bc}. As
above, the domains of Fk,t and P&lt;k are extended to
languages in the usual way.
</bodyText>
<sectionHeader confidence="0.994251" genericHeader="method">
3 Subregular Hierarchies
</sectionHeader>
<bodyText confidence="0.8660304">
Several important subregular classes of languages
have been identified and their inclusion relation-
ships have been established (McNaughton and Pa-
pert, 1971; Simon, 1975; Rogers and Pullum, to
TSL
</bodyText>
<figureCaption confidence="0.938147">
Figure 1: Proper inclusion relationships among subreg-
ular language classes (indicated from left to right). This
paper establishes the TSL class and its place in the figure.
</figureCaption>
<bodyText confidence="0.997966076923077">
appear; Rogers et al., 2010). Figure 1 summarizes
those earlier results as well as the ones made in
this paper. This section defines the Strictly Local
(SL), Locally Threshold Testable (LTT) and Piece-
wise Testable (PT) classes. The Locally Testable
(LT) languages and the Strictly Piecewise (SP) lan-
guages are discussed by Rogers and Pullum (to ap-
pear) and Rogers et al. (2010), respectively. Readers
are referred to these papers for additional details on
all of these classes. The Tier-based Strictly Local
(TSL) class is defined in Section 4.
Definition 1 A language L is Strictly k-Local iff
there exists a finite set S ⊆ Fk(⋊E*⋉) such that
</bodyText>
<equation confidence="0.978511">
L = {w ∈ E* : Fk(⋊w⋉) ⊆ S}
</equation>
<bodyText confidence="0.999546631578947">
The symbols ⋊ and ⋉ invoke left and right word
boundaries, respectively. A language is said to be
Strictly Local iff there is some k for which it is
Strictly k-Local. For example, let E = {a, b, c} and
L = aa*(b + c). Then L is Strictly 2-Local because
for S = {⋊a, ab, ac, aa, b⋉, c⋉} and every w ∈ L,
every 2-factor of ⋊w⋉ belongs to S.
The elements of S can be thought of as the per-
missible k-factors and the elements in Fk(⋊E*⋉) −
S are the forbidden k-factors. For example, bb and
⋊b are forbidden 2-factors for L = aa*(b + c).
More generally, any SL language L excludes ex-
actly those words with any forbidden factors; i.e., L
is the intersection of the complements of sets defined
to be those words which contain a forbidden fac-
tor. Note the set of forbidden factors is finite. This
provides another characterization of SL languages
(given below in Theorem 1).
Formally, let the container of w ∈ ⋊E*⋉ be
</bodyText>
<equation confidence="0.97839">
C(w) = {u ∈ E* : w is a factor of ⋊ u⋉}
</equation>
<bodyText confidence="0.9701485">
For example, C(⋊a) = aE*. Then, by the immedi-
ately preceding argument, Theorem 1 is proven.
</bodyText>
<figure confidence="0.9710204">
Regular Star-Free
LTT LT
SL
SP
PT
</figure>
<page confidence="0.884002">
59
</page>
<construct confidence="0.849134">
Theorem 1 Consider any Strictly k-Local language
L. Then there exists a finite set offorbidden factors
S C Fk(xE*x) such that L = nwES¯ C(w).
Definition 2 A language L is Locally t-Threshold
k-Testable iff ]t, k E N such that bw, v E E*, if
Fk,t(w) = Fk,t(v) then w E L g v E L.
</construct>
<bodyText confidence="0.845542625">
A language is Locally Threshold Testable iff there
is some k and t for which it is Locally t-Threshold
k-Testable.
Definition 3 A language L is Piecewise k-Testable
iff ]k E N such that bw,v E E*, if P&lt;k(w) =
P&lt;k(v) then w E L g v E L.
A language is Piecewise Testable iff there is some k
for which it is Piecewise k-Testable.
</bodyText>
<sectionHeader confidence="0.964458" genericHeader="method">
4 Tier-based Strictly Local Languages
</sectionHeader>
<bodyText confidence="0.866688">
This section provides the main results of this paper.
</bodyText>
<subsectionHeader confidence="0.960256">
4.1 Definition
</subsectionHeader>
<bodyText confidence="0.999910625">
The definition of Tier-based Strictly Local lan-
guages is similar to the one for SL languages with
the exception that forbidden k-factors only apply to
elements on a tier T C E, all other symbols are ig-
nored. In order to define the TSL languages, it is
necessary to introduce an “erasing” function (some-
times called string projection), which erases sym-
bols not on the tier.
</bodyText>
<equation confidence="0.698001">
ET (Q1 ··· Qn) = u1 ··· un
</equation>
<bodyText confidence="0.774024666666667">
where ui = Qi iff Qi E T and ui = A otherwise.
For example, if E = {a, b, c} and T = {b, c}
then ET (aabaaacaaabaa) = bcb. A string u =
Q1 · · · Qn E xT*x is a factor on tier T of a string w
iff u is a factor of ET (w).
Then the TSL languages are defined as follows.
</bodyText>
<figure confidence="0.3265485">
Definition 4 A language L is Strictly k-Local on
Tier T iff there exists a tier T C E and finite set
S C Fk(xT*x) such that
L={wEE*:Fk(xET(w)x)CS}
</figure>
<bodyText confidence="0.99881885">
Again, S represents the permissible k-factors on the
tier T, and elements in Fk(xT *x) − S represent
the forbidden k-factors on tier T. A language L is a
Tier-based Strictly Local iff it is Strictly k-Local on
Tier T for some T C E and k E N.
To illustrate, let E = {a, b, c}, T = {b, c}, and
S = {xb, xc, bc, cb, bx, c }. Elements of S are
the permissible k-factors on tier T. Elements of
F2(xT*x) − S = {bb, cc} are the forbidden fac-
tors on tier T. The language this describe includes
words like aabaaacaaabaa, but excludes words like
aabaaabaaacaa since bb is a forbidden 2-factor on
tier T. This example captures the nature of long-
distance dissimilation patterns found in phonology
(Suzuki, 1998; Frisch et al., 2004; Heinz, 2010a).
Let LD stand for this particular dissimilatory lan-
guage.
Like SL languages, TSL languages can also be
characterized in terms of the forbidden factors. Let
the tier-based container of w E xT*x be CT (w) =
</bodyText>
<equation confidence="0.74501025">
{u E E* : w is a factor on tier T of x ux}
For example, CT(xb) = (E − T)*bE*. In general
if w = Q1 ··· Qn E T* then CT(w) =
E*Q1(E − T)*Q2(E − T)* ··· (E − T)*QnE*
</equation>
<bodyText confidence="0.988211333333333">
In the case where w begins (ends) with a word
boundary symbol then the first (last) E* in the pre-
vious GRE must be replaced with (E − T)*.
Theorem 2 For any L E TSL, let T, k, S be
the tier, length, and permissible factors, respec-
tively, and S the forbidden factors. Then L =
I wES¯ CT(w).
Proof The structure of the proof is identical to the
one for Theorem 1. ❑
</bodyText>
<subsectionHeader confidence="0.993359">
4.2 Relations to other subregular classes
</subsectionHeader>
<bodyText confidence="0.978412166666667">
This section establishes that TSL languages prop-
erly include SL languages and are properly star-free.
Theorem 3 shows SL languages are necessarily TSL.
Theorems 4 and 5 show that TSL languages are not
necessarily LTT nor PT, but Theorem 6 shows that
TSL languages are necessarily star-free.
Theorem 3 SL languages are TSL.
Proof Inclusion follows immediately from the defi-
nitions by setting the tier T = E. ❑
The fact that TSL languages properly include SL
ones follows from the next theorem.
Theorem 4 TSL languages are not LTT.
</bodyText>
<page confidence="0.953266">
60
</page>
<bodyText confidence="0.96370375">
boundary symbol, the first (last) ∅ in the GRE above
Proof It is sufficient to provide an example of a TSL
language which is not LTT. Consider any threshold
t and length k. Consider the TSL language LD dis-
cussed in Section 4.1, and consider the words
should be replaced with ∅T∅. Since every CT(w)
can be expressed as a GRE without the Kleene-star,
every TSL language is star-free. ❑
</bodyText>
<equation confidence="0.879631333333333">
w = akbakbakcak and v = akbakcakbak
Clearly w ∈6 LD and v ∈ LD. However,
Fk(⋊w⋉) = Fk(⋊v⋉); i.e., they have the same
</equation>
<bodyText confidence="0.9629083">
k-factors. In fact for any factor f ∈ Fk(⋊w⋉),
it is the case that |w|f = |v|f. Therefore
Fk,t(⋊w⋉) = Fk,t(⋊v⋉). If LD were LTT,
it would follow by definition that either both
w, v ∈ LD or neither w, v belong to LD, which is
clearly false. Hence LD ∈6 LTT. ❑
Theorem 5 TSL languages are not PT.
Proof As above, it is sufficient to provide an exam-
ple of a TSL language which is not PT. Consider any
length k and the language LD. Let
</bodyText>
<equation confidence="0.9278185">
w = ak(bakbakcakcak)k and
v = ak(bakcakbakcak)k
</equation>
<bodyText confidence="0.9738643125">
Clearly w ∈6 LD and v ∈ LD. But observe that
P&lt;k(w) = P&lt;k(v). Hence, even though the two
words have exactly the same k-subsequences (for
any k), both words are not in LD. It follows that LD
does not belong to PT. ❑
Although TSL languages are neither LTT nor PT,
Theorem 6 establishes that they are star-free.
Theorem 6 TSL languages are star-free.
Proof Consider any language L which is Strictly k-
Local on Tier T for some T ⊆ E and k ∈ N. By
Theorem 2, there exists a finite set S ⊆ Fk(⋊T*⋉)
such that L = ∩wES� CT(w). Since the star-free lan-
guages are closed under finite intersection and com-
plement, it is sufficient to show that CT(w) is star-
free for all w ∈ ⋊T*⋉.
First consider any w = Q1 · · · Qn ∈ T*. Since
</bodyText>
<equation confidence="0.860110333333333">
(E − T)* = E*TE* and E* = ∅, the set CT(w) can
be written as
∅ ∅T∅ Q1 ∅T∅ Q2 ∅T∅ ··· Qn ∅
</equation>
<bodyText confidence="0.9999204">
This is a regular expression without the Kleene-star.
In the cases where w begins (ends) with a word
Together Theorems 1-4 establish that TSL lan-
guages generalize the SL languages in a different
way than the LT and LTT languages do (Figure 1).
</bodyText>
<subsectionHeader confidence="0.995316">
4.3 Other Properties
</subsectionHeader>
<bodyText confidence="0.999883486486487">
There are two other properties of TSL languages
worth mentioning. First, TSL languages are closed
under suffix and prefix. This follows immediately
because no word w of any TSL language contains
any forbidden factors on the tier and so neither does
any prefix or suffix of w. SL and SP languages–but
not LT or PT ones–also have this property, which has
interesting algebraic consequences (Fu et al., 2011).
Next, consider that the choice of T ⊆ E and
k ∈ N define systematic classes of languages which
are TSL. Let LT,k denote such a class. It follows
immediately that LT,k is a string extension class
(Heinz, 2010b). A string extension class is one
which can be defined by a function f whose do-
main is E* and whose codomain is the set of all
finite subsets of some set A. A grammar G is a
particular finite subset of A and the language of the
grammar is all words which f maps to a subset of
G. For LT,k, the grammar can be thought of as the
set of permissible factors on tier T and the func-
tion is w 7→ Fk(⋊ET (w)⋉). In other words, every
word is mapped to the set of k-factors present on tier
T. (So here the codomain–the possible grammars–is
the powerset of Fk(⋊T*⋉).)
String extension classes have quite a bit of
structure, which faciliates learning (Heinz, 2010b;
Kasprzik and K¨otzing, 2010). They are closed un-
der intersection, and have a lattice structure under
the partial ordering given by the inclusion relation
(⊆). Additionally, these classes are identifiable in
the limit from positive data (Gold, 1967) by an in-
cremental learner with many desirable properties.
In the case just mentioned, the tier is known in
advance. Learners which identify in the limit a class
of TSL languages with an unknown tier but known
k exist in principle (since such a class is of finite
size), but it is unknown whether any such learner is
</bodyText>
<page confidence="0.998385">
61
</page>
<bodyText confidence="0.950917">
efficient in the size of the input sample.
</bodyText>
<sectionHeader confidence="0.991049" genericHeader="method">
5 Discussion
</sectionHeader>
<bodyText confidence="0.99997193150685">
Having established the main results, this section dis-
cusses some implications for phonology in general,
Optimality Theory in particular, and future research.
There are three classes of phonotactic constraints
in phonology: local segmental patterns, long-
distance segmental patterns, and stress patterns
(Heinz, 2007). Local segmental patterns are SL
(Heinz, 2010a). Long-distance segmental phono-
tactic patterns are those derived from processes of
consonant harmony and disharmony and vowel har-
mony. Below we show each of these patterns belong
to TSL. For exposition, assume E={l,r,i,¨o,u,o}.
Phonotactic patterns derived from attested long-
distance consonantal assimilation patterns (Rose
and Walker, 2004; Hansson, 2001) are SP; on the
other hand, phonotactic patterns derived from at-
tested long-distance consonantal dissimilation pat-
terns (Suzuki, 1998) are not (Heinz, 2010a). How-
ever, both belong to TSL. Assimilation is obtained
by forbidding disagreeing factors on the tier. For
example, forbidding lr and rl on the liquid tier
T = {l, r} yields only words which do not contain
both [l] and [r]. Dissimilation is obtained by for-
bidding agreeing factors on the tier; e.g. forbidding
ll and rr on the liquid tier yields a language of the
same character as LD.
The phonological literature distinguishes three
kinds of vowel harmony patterns: those without neu-
tral vowels, those with opaque vowels and those
with transparent vowels (Bakovi´c, 2000; Nevins,
2010). Formally, vowel harmony patterns without
neutral vowels are the same as assimilatory conso-
nant harmony. For example, a case of back harmony
can be described by forbidding disagreeing factors
{iu, io, ¨ou, ¨oo, ui, u¨o, oi, o¨o} on the vowel tier
T ={i,¨o,u,o}. If a vowel is opaque, it does not har-
monize but begins its own harmony domain. For ex-
ample if [i] is opaque, this can be described by for-
bidding factors {iu, io ¨ou, ¨oo, u¨o, o¨o} on the vowel
tier. Thus words like lulolil¨o are acceptable because
oi is a permissible factor. If a vowel is transpar-
ent, it neither harmonizes nor begins its own har-
mony domain. For example if [i] is transparent (as in
Finnish), this can be described by removing it from
the tier; i.e. by forbidding factors {¨ou, ¨oo, u¨o, o¨o}
on tier T ={¨o,u,o}. Thus words like lulolilu are ac-
ceptable since [i] is not on the relevant tier. The rea-
sonable hypothesis which follows from this discus-
sion is that all humanly possible segmental phono-
tactic patterns are TSL (since TSL contains SL).
Additionally, the fact that LT,k is closed under in-
tersection has interesting consequences for Optimal-
ity Theory (OT) (Prince and Smolensky, 2004). The
intersection of two languages drawn from the same
string extension class is only as expensive as the in-
tersection of finite sets (Heinz, 2010b). It is known
that the generation problem in OT is NP-hard (Eis-
ner, 1997; Idsardi, 2006) and that the NP-hardness is
due to the problem of intersecting arbitrarily many
arbitrary regular sets (Heinz et al., 2009). It is un-
known whether intersecting arbitrarily many TSL
sets is expensive, but the results here suggest that
it may only be the intersections across distinct LT,k
classes that are problematic. In this way, this work
suggests a way to factor OT constraints characteri-
zable as TSL languages in a manner originally sug-
gested by Eisner (1997).
Future work includes determining automata-
theoretic characterizations of TSL languages and
procedures for deciding whether a regular set be-
longs to TSL, and if so, for what T and k. Also,
the erasing function may be used to generalize other
subregular classes.
</bodyText>
<sectionHeader confidence="0.999358" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999790142857143">
The TSL languages generalize the SL languages
and have wide application within phonology. Even
though virtually all segmental phonotactic con-
straints present in the phonologies of the world’s lan-
guages, both local and non-local, fall into this class,
it is striking how highly restricted (sub-star-free) and
well-structured the TSL languages are.
</bodyText>
<sectionHeader confidence="0.996512" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.998672428571429">
We thank the anonymous reviewers for carefully
checking the proofs and for their constructive crit-
icism. We also thank the participants in the Fall
2010 Formal Models in Phonology seminar at the
University of Delaware for valuable discussion, es-
pecially Jie Fu. This research is supported by grant
#1035577 from the National Science Foundation.
</bodyText>
<page confidence="0.998903">
62
</page>
<sectionHeader confidence="0.989203" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99969527184466">
Diana Archangeli and Douglas Pulleyblank. 1994.
Grounded Phonology. Cambridge, MA: MIT Press.
Eric Bakovi´c. 2000. Harmony, Dominance and Control.
Ph.D. thesis, Rutgers University.
Steven Bird. 1995. Computational Phonology: A
Constraint-Based Approach. Cambridge University
Press, Cambridge.
G. N. Clements and Elizabeth Hume. 1995. The internal
organization of speech sounds. In John A. Goldsmith,
editor, The Handbook of Phonological Theory, pages
245–306. Blackwell, Cambridge, Mass., and Oxford,
UK.
G. N. Clements. 1976. Neutral vowels in hungarian
vowel harmony: An autosegmental interpretation. In
David Nash Judy Kegl and Annie Zaenen, editors,
North Eastern Linguistic Society (NELS) 7, pages 49–
64, Amherst, MA. University of Massachusetts, Grad-
uate Linguistic Student Association.
Jason Eisner. 1997. Efficient generation in primitive Op-
timality Theory. In Proceedings of the 35th Annual
ACL and 8th EACL, pages 313–320, Madrid, July.
S. Frisch, J. Pierrehumbert, and M. Broe. 2004. Simi-
larity avoidance and the OCP. Natural Language and
Linguistic Theory, 22:179–228.
Jie Fu, Jeffrey Heinz, and Herbert Tanner. 2011. An
algebraic characterization of strictly piecewise lan-
guages. In The 8th Annual Conference on Theory
and Applications of Models of Computation, volume
6648 of Lecture Notes in Computer Science. Springer-
Verlag.
E.M. Gold. 1967. Language identification in the limit.
Information and Control, 10:447–474.
John Goldsmith and Jason Riggle. to appear. Infor-
mation theoretic approaches to phonological structure:
the case of Finnish vowel harmony. Natural Language
and Linguistic Theory.
John Goldsmith. 1976. Autosegmental Phonology.
Ph.D. thesis, MIT, Cambridge, Mass. Published by
Garland Press, New York, 1979.
Gunnar Hansson. 2001. Theoretical and typological is-
sues in consonant harmony. Ph.D. thesis, University
of California, Berkeley.
Bruce Hayes and Colin Wilson. 2008. A maximum en-
tropy model of phonotactics and phonotactic learning.
Linguistic Inquiry, 39:379–440.
Jeffrey Heinz, Gregory Kobele, and Jason Riggle. 2009.
Evaluating the complexity of Optimality Theory. Lin-
guistic Inquiry, 40(2):277–288.
Jeffrey Heinz. 2007. The Inductive Learning of Phono-
tactic Patterns. Ph.D. thesis, University of California,
Los Angeles.
Jeffrey Heinz. 2010a. Learning long-distance phonotac-
tics. Linguistic Inquiry, 41(4):623–661.
Jeffrey Heinz. 2010b. String extension learning. In Pro-
ceedings of the 48th Annual Meeting of the Associ-
ation for Computational Linguistics, pages 897–906,
Uppsala, Sweden, July. Association for Computational
Linguistics.
William Idsardi. 2006. A simple proof that Optimality
Theory is computationally intractable. Linguistic In-
quiry, 37(2):271–275.
Anna Kasprzik and Timo K¨otzing. 2010. String ex-
tension learning using lattices. In Henning Fer-
nau Adrian-Horia Dediu and Carlos Martin-Vide, ed-
itors, Proceedings of the 4th International Confer-
ence on Language and Automata Theory and Appli-
cations (LATA 2010), volume 6031 of Lecture Notes
in Computer Science, pages 380–391, Trier, Germany.
Springer.
Andras Kornai. 1994. Formal Phonology. Garland, New
York.
John J. McCarthy. 1979. Formal problems in Semitic
phonology and morphology. Ph.D. thesis, MIT. Pub-
lished by Garland Press, New York, 1985.
Robert McNaughton and Seymour Papert. 1971.
Counter-Free Automata. MIT Press.
Armin Mester. 1988. Studies in Tier Structure. New
York: Garland Publishing, Inc.
Andrew Nevins. 2010. Locality in Vowel Harmony. The
MIT Press, Cambridge, MA.
David Odden. 1994. Adjacency parameters in phonol-
ogy. Language, 70(2):289–330.
William Poser. 1982. Phonological representation and
action-at-a-distance. In H. van der Hulst and N.R.
Smith, editors, The Structure of Phonological Repre-
sentations, pages 121–158. Dordrecht: Foris.
Alan Prince and Paul Smolensky. 2004. Optimality The-
ory: Constraint Interaction in Generative Grammar.
Blackwell Publishing.
Alan Prince. 1984. Phonology with tiers. In Mark
Aronoff and Richard T. Oehrle, editors, Language
Sound Structure, pages 234–244. MIT Press, Cam-
bridge, Mass.
James Rogers and Geoffrey Pullum. to appear. Aural
pattern recognition experiments and the subregular hi-
erarchy. Journal ofLogic, Language and Information.
James Rogers, Jeffrey Heinz, Gil Bailey, Matt Edlefsen,
Molly Visscher, David Wellcome, and Sean Wibel.
2010. On languages piecewise testable in the strict
sense. In Christian Ebert, Gerhard J¨ager, and Jens
Michaelis, editors, The Mathematics ofLanguage, vol-
ume 6149 of Lecture Notes in Artifical Intelligence,
pages 255–265. Springer.
</reference>
<page confidence="0.987078">
63
</page>
<reference confidence="0.999506461538462">
Sharon Rose and Rachel Walker. 2004. A typology of
consonant agreement as correspondence. Language,
80(3):475–531.
Imre Simon. 1975. Piecewise testable events. In Au-
tomata Theory and Formal Languages, pages 214–
222.
Keiichiro Suzuki. 1998. A Typological Investigation of
Dissimilation. Ph.D. thesis, University of Arizona,
Tucson, AZ.
Jean-Roger Vergnaud. 1977. Formal properties of
phonological rules. In R. Butts and J. Hintikka, ed-
itors, Basic Problems and Methodology and Linguis-
tics. Amsterdam: Reidel.
</reference>
<page confidence="0.999419">
64
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.988178">
<title confidence="0.996107">Tier-based Strictly Local Constraints for Phonology</title>
<author confidence="0.998612">Jeffrey Heinz</author>
<author confidence="0.998612">Chetan Rawal</author>
<author confidence="0.998612">G Herbert</author>
<affiliation confidence="0.999835">University of Delaware</affiliation>
<email confidence="0.999851">heinz,rawal,btanner@udel.edu</email>
<abstract confidence="0.999486692307692">Beginning with Goldsmith (1976), the phonological tier has a long history in phonological theory to describe non-local phenomena. This paper defines a class of formal languages, the Tier-based Strictly Local languages, which begin to describe such phenomena. Then this class is located within the Subregular Hierarchy (McNaughton and Papert, 1971). It is found that these languages contain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Diana Archangeli</author>
<author>Douglas Pulleyblank</author>
</authors>
<title>Grounded Phonology.</title>
<date>1994</date>
<publisher>MIT Press.</publisher>
<location>Cambridge, MA:</location>
<contexts>
<context position="1208" citStr="Archangeli and Pulleyblank, 1994" startWordPosition="173" endWordPosition="176">uages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill</context>
</contexts>
<marker>Archangeli, Pulleyblank, 1994</marker>
<rawString>Diana Archangeli and Douglas Pulleyblank. 1994. Grounded Phonology. Cambridge, MA: MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eric Bakovi´c</author>
</authors>
<title>Harmony, Dominance and Control.</title>
<date>2000</date>
<tech>Ph.D. thesis,</tech>
<institution>Rutgers University.</institution>
<marker>Bakovi´c, 2000</marker>
<rawString>Eric Bakovi´c. 2000. Harmony, Dominance and Control. Ph.D. thesis, Rutgers University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
</authors>
<title>Computational Phonology: A Constraint-Based Approach.</title>
<date>1995</date>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge.</location>
<contexts>
<context position="1489" citStr="Bird, 1995" startWordPosition="214" endWordPosition="215">owels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining TierBased Strictly Local (TSL) languages, which generalize the Strictly Local languages (McNaughton and Papert, 1971). It is shown that TSL languages are necessarily star-free, but are incomparable with other known sub-star-free classes, and that natural grou</context>
</contexts>
<marker>Bird, 1995</marker>
<rawString>Steven Bird. 1995. Computational Phonology: A Constraint-Based Approach. Cambridge University Press, Cambridge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G N Clements</author>
<author>Elizabeth Hume</author>
</authors>
<title>The internal organization of speech sounds. In</title>
<date>1995</date>
<booktitle>The Handbook of Phonological Theory,</booktitle>
<pages>245--306</pages>
<editor>John A. Goldsmith, editor,</editor>
<publisher>Blackwell,</publisher>
<location>Cambridge, Mass., and Oxford, UK.</location>
<contexts>
<context position="1234" citStr="Clements and Hume, 1995" startWordPosition="177" endWordPosition="180">able with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining Tier</context>
</contexts>
<marker>Clements, Hume, 1995</marker>
<rawString>G. N. Clements and Elizabeth Hume. 1995. The internal organization of speech sounds. In John A. Goldsmith, editor, The Handbook of Phonological Theory, pages 245–306. Blackwell, Cambridge, Mass., and Oxford, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G N Clements</author>
</authors>
<title>Neutral vowels in hungarian vowel harmony: An autosegmental interpretation.</title>
<date>1976</date>
<booktitle>In David Nash Judy Kegl and Annie Zaenen, editors, North Eastern Linguistic Society (NELS) 7,</booktitle>
<pages>49--64</pages>
<publisher>Linguistic Student Association.</publisher>
<institution>University of Massachusetts, Graduate</institution>
<location>Amherst, MA.</location>
<contexts>
<context position="1088" citStr="Clements, 1976" startWordPosition="159" endWordPosition="160">rarchy (McNaughton and Papert, 1971). It is found that these languages contain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addre</context>
</contexts>
<marker>Clements, 1976</marker>
<rawString>G. N. Clements. 1976. Neutral vowels in hungarian vowel harmony: An autosegmental interpretation. In David Nash Judy Kegl and Annie Zaenen, editors, North Eastern Linguistic Society (NELS) 7, pages 49– 64, Amherst, MA. University of Massachusetts, Graduate Linguistic Student Association.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Eisner</author>
</authors>
<title>Efficient generation in primitive Optimality Theory.</title>
<date>1997</date>
<booktitle>In Proceedings of the 35th Annual ACL and 8th EACL,</booktitle>
<pages>313--320</pages>
<location>Madrid,</location>
<contexts>
<context position="1504" citStr="Eisner, 1997" startWordPosition="216" endWordPosition="217">er without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining TierBased Strictly Local (TSL) languages, which generalize the Strictly Local languages (McNaughton and Papert, 1971). It is shown that TSL languages are necessarily star-free, but are incomparable with other known sub-star-free classes, and that natural groups of languages</context>
<context position="17793" citStr="Eisner, 1997" startWordPosition="3229" endWordPosition="3231"> ={¨o,u,o}. Thus words like lulolilu are acceptable since [i] is not on the relevant tier. The reasonable hypothesis which follows from this discussion is that all humanly possible segmental phonotactic patterns are TSL (since TSL contains SL). Additionally, the fact that LT,k is closed under intersection has interesting consequences for Optimality Theory (OT) (Prince and Smolensky, 2004). The intersection of two languages drawn from the same string extension class is only as expensive as the intersection of finite sets (Heinz, 2010b). It is known that the generation problem in OT is NP-hard (Eisner, 1997; Idsardi, 2006) and that the NP-hardness is due to the problem of intersecting arbitrarily many arbitrary regular sets (Heinz et al., 2009). It is unknown whether intersecting arbitrarily many TSL sets is expensive, but the results here suggest that it may only be the intersections across distinct LT,k classes that are problematic. In this way, this work suggests a way to factor OT constraints characterizable as TSL languages in a manner originally suggested by Eisner (1997). Future work includes determining automatatheoretic characterizations of TSL languages and procedures for deciding whet</context>
</contexts>
<marker>Eisner, 1997</marker>
<rawString>Jason Eisner. 1997. Efficient generation in primitive Optimality Theory. In Proceedings of the 35th Annual ACL and 8th EACL, pages 313–320, Madrid, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Frisch</author>
<author>J Pierrehumbert</author>
<author>M Broe</author>
</authors>
<date>2004</date>
<booktitle>Similarity avoidance and the OCP. Natural Language and Linguistic Theory,</booktitle>
<pages>22--179</pages>
<contexts>
<context position="9666" citStr="Frisch et al., 2004" startWordPosition="1766" endWordPosition="1769">the forbidden k-factors on tier T. A language L is a Tier-based Strictly Local iff it is Strictly k-Local on Tier T for some T C E and k E N. To illustrate, let E = {a, b, c}, T = {b, c}, and S = {xb, xc, bc, cb, bx, c }. Elements of S are the permissible k-factors on tier T. Elements of F2(xT*x) − S = {bb, cc} are the forbidden factors on tier T. The language this describe includes words like aabaaacaaabaa, but excludes words like aabaaabaaacaa since bb is a forbidden 2-factor on tier T. This example captures the nature of longdistance dissimilation patterns found in phonology (Suzuki, 1998; Frisch et al., 2004; Heinz, 2010a). Let LD stand for this particular dissimilatory language. Like SL languages, TSL languages can also be characterized in terms of the forbidden factors. Let the tier-based container of w E xT*x be CT (w) = {u E E* : w is a factor on tier T of x ux} For example, CT(xb) = (E − T)*bE*. In general if w = Q1 ··· Qn E T* then CT(w) = E*Q1(E − T)*Q2(E − T)* ··· (E − T)*QnE* In the case where w begins (ends) with a word boundary symbol then the first (last) E* in the previous GRE must be replaced with (E − T)*. Theorem 2 For any L E TSL, let T, k, S be the tier, length, and permissible </context>
</contexts>
<marker>Frisch, Pierrehumbert, Broe, 2004</marker>
<rawString>S. Frisch, J. Pierrehumbert, and M. Broe. 2004. Similarity avoidance and the OCP. Natural Language and Linguistic Theory, 22:179–228.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jie Fu</author>
<author>Jeffrey Heinz</author>
<author>Herbert Tanner</author>
</authors>
<title>An algebraic characterization of strictly piecewise languages.</title>
<date>2011</date>
<booktitle>In The 8th Annual Conference on Theory and Applications of Models of Computation,</booktitle>
<volume>6648</volume>
<publisher>SpringerVerlag.</publisher>
<contexts>
<context position="13446" citStr="Fu et al., 2011" startWordPosition="2492" endWordPosition="2495">In the cases where w begins (ends) with a word Together Theorems 1-4 establish that TSL languages generalize the SL languages in a different way than the LT and LTT languages do (Figure 1). 4.3 Other Properties There are two other properties of TSL languages worth mentioning. First, TSL languages are closed under suffix and prefix. This follows immediately because no word w of any TSL language contains any forbidden factors on the tier and so neither does any prefix or suffix of w. SL and SP languages–but not LT or PT ones–also have this property, which has interesting algebraic consequences (Fu et al., 2011). Next, consider that the choice of T ⊆ E and k ∈ N define systematic classes of languages which are TSL. Let LT,k denote such a class. It follows immediately that LT,k is a string extension class (Heinz, 2010b). A string extension class is one which can be defined by a function f whose domain is E* and whose codomain is the set of all finite subsets of some set A. A grammar G is a particular finite subset of A and the language of the grammar is all words which f maps to a subset of G. For LT,k, the grammar can be thought of as the set of permissible factors on tier T and the function is w 7→ </context>
</contexts>
<marker>Fu, Heinz, Tanner, 2011</marker>
<rawString>Jie Fu, Jeffrey Heinz, and Herbert Tanner. 2011. An algebraic characterization of strictly piecewise languages. In The 8th Annual Conference on Theory and Applications of Models of Computation, volume 6648 of Lecture Notes in Computer Science. SpringerVerlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E M Gold</author>
</authors>
<title>Language identification in the limit.</title>
<date>1967</date>
<journal>Information and Control,</journal>
<pages>10--447</pages>
<contexts>
<context position="14559" citStr="Gold, 1967" startWordPosition="2697" endWordPosition="2698">he grammar can be thought of as the set of permissible factors on tier T and the function is w 7→ Fk(⋊ET (w)⋉). In other words, every word is mapped to the set of k-factors present on tier T. (So here the codomain–the possible grammars–is the powerset of Fk(⋊T*⋉).) String extension classes have quite a bit of structure, which faciliates learning (Heinz, 2010b; Kasprzik and K¨otzing, 2010). They are closed under intersection, and have a lattice structure under the partial ordering given by the inclusion relation (⊆). Additionally, these classes are identifiable in the limit from positive data (Gold, 1967) by an incremental learner with many desirable properties. In the case just mentioned, the tier is known in advance. Learners which identify in the limit a class of TSL languages with an unknown tier but known k exist in principle (since such a class is of finite size), but it is unknown whether any such learner is 61 efficient in the size of the input sample. 5 Discussion Having established the main results, this section discusses some implications for phonology in general, Optimality Theory in particular, and future research. There are three classes of phonotactic constraints in phonology: l</context>
</contexts>
<marker>Gold, 1967</marker>
<rawString>E.M. Gold. 1967. Language identification in the limit. Information and Control, 10:447–474.</rawString>
</citation>
<citation valid="false">
<authors>
<author>John Goldsmith</author>
<author>Jason Riggle</author>
</authors>
<title>to appear. Information theoretic approaches to phonological structure: the case of Finnish vowel harmony. Natural Language and Linguistic Theory.</title>
<marker>Goldsmith, Riggle, </marker>
<rawString>John Goldsmith and Jason Riggle. to appear. Information theoretic approaches to phonological structure: the case of Finnish vowel harmony. Natural Language and Linguistic Theory.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Goldsmith</author>
</authors>
<title>Autosegmental Phonology.</title>
<date>1976</date>
<tech>Ph.D. thesis,</tech>
<publisher>Published by Garland Press,</publisher>
<institution>MIT,</institution>
<location>Cambridge, Mass.</location>
<contexts>
<context position="1012" citStr="Goldsmith, 1976" startWordPosition="147" endWordPosition="148"> describe such phenomena. Then this class is located within the Subregular Hierarchy (McNaughton and Papert, 1971). It is found that these languages contain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to app</context>
</contexts>
<marker>Goldsmith, 1976</marker>
<rawString>John Goldsmith. 1976. Autosegmental Phonology. Ph.D. thesis, MIT, Cambridge, Mass. Published by Garland Press, New York, 1979.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gunnar Hansson</author>
</authors>
<title>Theoretical and typological issues in consonant harmony.</title>
<date>2001</date>
<tech>Ph.D. thesis,</tech>
<institution>University of California, Berkeley.</institution>
<contexts>
<context position="15654" citStr="Hansson, 2001" startWordPosition="2865" endWordPosition="2866">ptimality Theory in particular, and future research. There are three classes of phonotactic constraints in phonology: local segmental patterns, longdistance segmental patterns, and stress patterns (Heinz, 2007). Local segmental patterns are SL (Heinz, 2010a). Long-distance segmental phonotactic patterns are those derived from processes of consonant harmony and disharmony and vowel harmony. Below we show each of these patterns belong to TSL. For exposition, assume E={l,r,i,¨o,u,o}. Phonotactic patterns derived from attested longdistance consonantal assimilation patterns (Rose and Walker, 2004; Hansson, 2001) are SP; on the other hand, phonotactic patterns derived from attested long-distance consonantal dissimilation patterns (Suzuki, 1998) are not (Heinz, 2010a). However, both belong to TSL. Assimilation is obtained by forbidding disagreeing factors on the tier. For example, forbidding lr and rl on the liquid tier T = {l, r} yields only words which do not contain both [l] and [r]. Dissimilation is obtained by forbidding agreeing factors on the tier; e.g. forbidding ll and rr on the liquid tier yields a language of the same character as LD. The phonological literature distinguishes three kinds of </context>
</contexts>
<marker>Hansson, 2001</marker>
<rawString>Gunnar Hansson. 2001. Theoretical and typological issues in consonant harmony. Ph.D. thesis, University of California, Berkeley.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bruce Hayes</author>
<author>Colin Wilson</author>
</authors>
<title>A maximum entropy model of phonotactics and phonotactic learning. Linguistic Inquiry,</title>
<date>2008</date>
<pages>39--379</pages>
<contexts>
<context position="1582" citStr="Hayes and Wilson, 2008" startWordPosition="226" endWordPosition="229">describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining TierBased Strictly Local (TSL) languages, which generalize the Strictly Local languages (McNaughton and Papert, 1971). It is shown that TSL languages are necessarily star-free, but are incomparable with other known sub-star-free classes, and that natural groups of languages within the class are string extension learnable (Heinz, 2010b; Kasprzik and K</context>
</contexts>
<marker>Hayes, Wilson, 2008</marker>
<rawString>Bruce Hayes and Colin Wilson. 2008. A maximum entropy model of phonotactics and phonotactic learning. Linguistic Inquiry, 39:379–440.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeffrey Heinz</author>
<author>Gregory Kobele</author>
<author>Jason Riggle</author>
</authors>
<title>Evaluating the complexity of Optimality Theory.</title>
<date>2009</date>
<journal>Linguistic Inquiry,</journal>
<volume>40</volume>
<issue>2</issue>
<contexts>
<context position="17933" citStr="Heinz et al., 2009" startWordPosition="3250" endWordPosition="3253">om this discussion is that all humanly possible segmental phonotactic patterns are TSL (since TSL contains SL). Additionally, the fact that LT,k is closed under intersection has interesting consequences for Optimality Theory (OT) (Prince and Smolensky, 2004). The intersection of two languages drawn from the same string extension class is only as expensive as the intersection of finite sets (Heinz, 2010b). It is known that the generation problem in OT is NP-hard (Eisner, 1997; Idsardi, 2006) and that the NP-hardness is due to the problem of intersecting arbitrarily many arbitrary regular sets (Heinz et al., 2009). It is unknown whether intersecting arbitrarily many TSL sets is expensive, but the results here suggest that it may only be the intersections across distinct LT,k classes that are problematic. In this way, this work suggests a way to factor OT constraints characterizable as TSL languages in a manner originally suggested by Eisner (1997). Future work includes determining automatatheoretic characterizations of TSL languages and procedures for deciding whether a regular set belongs to TSL, and if so, for what T and k. Also, the erasing function may be used to generalize other subregular classes</context>
</contexts>
<marker>Heinz, Kobele, Riggle, 2009</marker>
<rawString>Jeffrey Heinz, Gregory Kobele, and Jason Riggle. 2009. Evaluating the complexity of Optimality Theory. Linguistic Inquiry, 40(2):277–288.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeffrey Heinz</author>
</authors>
<title>The Inductive Learning of Phonotactic Patterns.</title>
<date>2007</date>
<tech>Ph.D. thesis,</tech>
<institution>University of California,</institution>
<location>Los Angeles.</location>
<contexts>
<context position="15250" citStr="Heinz, 2007" startWordPosition="2809" endWordPosition="2810">tioned, the tier is known in advance. Learners which identify in the limit a class of TSL languages with an unknown tier but known k exist in principle (since such a class is of finite size), but it is unknown whether any such learner is 61 efficient in the size of the input sample. 5 Discussion Having established the main results, this section discusses some implications for phonology in general, Optimality Theory in particular, and future research. There are three classes of phonotactic constraints in phonology: local segmental patterns, longdistance segmental patterns, and stress patterns (Heinz, 2007). Local segmental patterns are SL (Heinz, 2010a). Long-distance segmental phonotactic patterns are those derived from processes of consonant harmony and disharmony and vowel harmony. Below we show each of these patterns belong to TSL. For exposition, assume E={l,r,i,¨o,u,o}. Phonotactic patterns derived from attested longdistance consonantal assimilation patterns (Rose and Walker, 2004; Hansson, 2001) are SP; on the other hand, phonotactic patterns derived from attested long-distance consonantal dissimilation patterns (Suzuki, 1998) are not (Heinz, 2010a). However, both belong to TSL. Assimila</context>
</contexts>
<marker>Heinz, 2007</marker>
<rawString>Jeffrey Heinz. 2007. The Inductive Learning of Phonotactic Patterns. Ph.D. thesis, University of California, Los Angeles.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeffrey Heinz</author>
</authors>
<title>Learning long-distance phonotactics.</title>
<date>2010</date>
<journal>Linguistic Inquiry,</journal>
<volume>41</volume>
<issue>4</issue>
<contexts>
<context position="2165" citStr="Heinz, 2010" startWordPosition="319" endWordPosition="320">them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining TierBased Strictly Local (TSL) languages, which generalize the Strictly Local languages (McNaughton and Papert, 1971). It is shown that TSL languages are necessarily star-free, but are incomparable with other known sub-star-free classes, and that natural groups of languages within the class are string extension learnable (Heinz, 2010b; Kasprzik and K¨otzing, 2010). Implications and open questions for learnability and Optimality Theory are also discussed. Section 2 reviews notation and key concepts. Section 3 reviews major subregular classes and their relationships. Section 4 defines the TSL languages, relates them to known subregular classes, and section 5 discusses the results. Section 6 concludes. 2 Preliminaries We assume familiarity with set notation. A finite alphabet is denoted E. Let En, Ern, E* denote all sequences over this alphabet of length n, of length less than or equal to n, and of any finite length, respect</context>
<context position="9679" citStr="Heinz, 2010" startWordPosition="1770" endWordPosition="1771">rs on tier T. A language L is a Tier-based Strictly Local iff it is Strictly k-Local on Tier T for some T C E and k E N. To illustrate, let E = {a, b, c}, T = {b, c}, and S = {xb, xc, bc, cb, bx, c }. Elements of S are the permissible k-factors on tier T. Elements of F2(xT*x) − S = {bb, cc} are the forbidden factors on tier T. The language this describe includes words like aabaaacaaabaa, but excludes words like aabaaabaaacaa since bb is a forbidden 2-factor on tier T. This example captures the nature of longdistance dissimilation patterns found in phonology (Suzuki, 1998; Frisch et al., 2004; Heinz, 2010a). Let LD stand for this particular dissimilatory language. Like SL languages, TSL languages can also be characterized in terms of the forbidden factors. Let the tier-based container of w E xT*x be CT (w) = {u E E* : w is a factor on tier T of x ux} For example, CT(xb) = (E − T)*bE*. In general if w = Q1 ··· Qn E T* then CT(w) = E*Q1(E − T)*Q2(E − T)* ··· (E − T)*QnE* In the case where w begins (ends) with a word boundary symbol then the first (last) E* in the previous GRE must be replaced with (E − T)*. Theorem 2 For any L E TSL, let T, k, S be the tier, length, and permissible factors, resp</context>
<context position="13655" citStr="Heinz, 2010" startWordPosition="2533" endWordPosition="2534">re are two other properties of TSL languages worth mentioning. First, TSL languages are closed under suffix and prefix. This follows immediately because no word w of any TSL language contains any forbidden factors on the tier and so neither does any prefix or suffix of w. SL and SP languages–but not LT or PT ones–also have this property, which has interesting algebraic consequences (Fu et al., 2011). Next, consider that the choice of T ⊆ E and k ∈ N define systematic classes of languages which are TSL. Let LT,k denote such a class. It follows immediately that LT,k is a string extension class (Heinz, 2010b). A string extension class is one which can be defined by a function f whose domain is E* and whose codomain is the set of all finite subsets of some set A. A grammar G is a particular finite subset of A and the language of the grammar is all words which f maps to a subset of G. For LT,k, the grammar can be thought of as the set of permissible factors on tier T and the function is w 7→ Fk(⋊ET (w)⋉). In other words, every word is mapped to the set of k-factors present on tier T. (So here the codomain–the possible grammars–is the powerset of Fk(⋊T*⋉).) String extension classes have quite a bit</context>
<context position="15296" citStr="Heinz, 2010" startWordPosition="2816" endWordPosition="2817">which identify in the limit a class of TSL languages with an unknown tier but known k exist in principle (since such a class is of finite size), but it is unknown whether any such learner is 61 efficient in the size of the input sample. 5 Discussion Having established the main results, this section discusses some implications for phonology in general, Optimality Theory in particular, and future research. There are three classes of phonotactic constraints in phonology: local segmental patterns, longdistance segmental patterns, and stress patterns (Heinz, 2007). Local segmental patterns are SL (Heinz, 2010a). Long-distance segmental phonotactic patterns are those derived from processes of consonant harmony and disharmony and vowel harmony. Below we show each of these patterns belong to TSL. For exposition, assume E={l,r,i,¨o,u,o}. Phonotactic patterns derived from attested longdistance consonantal assimilation patterns (Rose and Walker, 2004; Hansson, 2001) are SP; on the other hand, phonotactic patterns derived from attested long-distance consonantal dissimilation patterns (Suzuki, 1998) are not (Heinz, 2010a). However, both belong to TSL. Assimilation is obtained by forbidding disagreeing fac</context>
<context position="17719" citStr="Heinz, 2010" startWordPosition="3216" endWordPosition="3217"> from the tier; i.e. by forbidding factors {¨ou, ¨oo, u¨o, o¨o} on tier T ={¨o,u,o}. Thus words like lulolilu are acceptable since [i] is not on the relevant tier. The reasonable hypothesis which follows from this discussion is that all humanly possible segmental phonotactic patterns are TSL (since TSL contains SL). Additionally, the fact that LT,k is closed under intersection has interesting consequences for Optimality Theory (OT) (Prince and Smolensky, 2004). The intersection of two languages drawn from the same string extension class is only as expensive as the intersection of finite sets (Heinz, 2010b). It is known that the generation problem in OT is NP-hard (Eisner, 1997; Idsardi, 2006) and that the NP-hardness is due to the problem of intersecting arbitrarily many arbitrary regular sets (Heinz et al., 2009). It is unknown whether intersecting arbitrarily many TSL sets is expensive, but the results here suggest that it may only be the intersections across distinct LT,k classes that are problematic. In this way, this work suggests a way to factor OT constraints characterizable as TSL languages in a manner originally suggested by Eisner (1997). Future work includes determining automatathe</context>
</contexts>
<marker>Heinz, 2010</marker>
<rawString>Jeffrey Heinz. 2010a. Learning long-distance phonotactics. Linguistic Inquiry, 41(4):623–661.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeffrey Heinz</author>
</authors>
<title>String extension learning.</title>
<date>2010</date>
<booktitle>In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>897--906</pages>
<location>Uppsala, Sweden,</location>
<contexts>
<context position="2165" citStr="Heinz, 2010" startWordPosition="319" endWordPosition="320">them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining TierBased Strictly Local (TSL) languages, which generalize the Strictly Local languages (McNaughton and Papert, 1971). It is shown that TSL languages are necessarily star-free, but are incomparable with other known sub-star-free classes, and that natural groups of languages within the class are string extension learnable (Heinz, 2010b; Kasprzik and K¨otzing, 2010). Implications and open questions for learnability and Optimality Theory are also discussed. Section 2 reviews notation and key concepts. Section 3 reviews major subregular classes and their relationships. Section 4 defines the TSL languages, relates them to known subregular classes, and section 5 discusses the results. Section 6 concludes. 2 Preliminaries We assume familiarity with set notation. A finite alphabet is denoted E. Let En, Ern, E* denote all sequences over this alphabet of length n, of length less than or equal to n, and of any finite length, respect</context>
<context position="9679" citStr="Heinz, 2010" startWordPosition="1770" endWordPosition="1771">rs on tier T. A language L is a Tier-based Strictly Local iff it is Strictly k-Local on Tier T for some T C E and k E N. To illustrate, let E = {a, b, c}, T = {b, c}, and S = {xb, xc, bc, cb, bx, c }. Elements of S are the permissible k-factors on tier T. Elements of F2(xT*x) − S = {bb, cc} are the forbidden factors on tier T. The language this describe includes words like aabaaacaaabaa, but excludes words like aabaaabaaacaa since bb is a forbidden 2-factor on tier T. This example captures the nature of longdistance dissimilation patterns found in phonology (Suzuki, 1998; Frisch et al., 2004; Heinz, 2010a). Let LD stand for this particular dissimilatory language. Like SL languages, TSL languages can also be characterized in terms of the forbidden factors. Let the tier-based container of w E xT*x be CT (w) = {u E E* : w is a factor on tier T of x ux} For example, CT(xb) = (E − T)*bE*. In general if w = Q1 ··· Qn E T* then CT(w) = E*Q1(E − T)*Q2(E − T)* ··· (E − T)*QnE* In the case where w begins (ends) with a word boundary symbol then the first (last) E* in the previous GRE must be replaced with (E − T)*. Theorem 2 For any L E TSL, let T, k, S be the tier, length, and permissible factors, resp</context>
<context position="13655" citStr="Heinz, 2010" startWordPosition="2533" endWordPosition="2534">re are two other properties of TSL languages worth mentioning. First, TSL languages are closed under suffix and prefix. This follows immediately because no word w of any TSL language contains any forbidden factors on the tier and so neither does any prefix or suffix of w. SL and SP languages–but not LT or PT ones–also have this property, which has interesting algebraic consequences (Fu et al., 2011). Next, consider that the choice of T ⊆ E and k ∈ N define systematic classes of languages which are TSL. Let LT,k denote such a class. It follows immediately that LT,k is a string extension class (Heinz, 2010b). A string extension class is one which can be defined by a function f whose domain is E* and whose codomain is the set of all finite subsets of some set A. A grammar G is a particular finite subset of A and the language of the grammar is all words which f maps to a subset of G. For LT,k, the grammar can be thought of as the set of permissible factors on tier T and the function is w 7→ Fk(⋊ET (w)⋉). In other words, every word is mapped to the set of k-factors present on tier T. (So here the codomain–the possible grammars–is the powerset of Fk(⋊T*⋉).) String extension classes have quite a bit</context>
<context position="15296" citStr="Heinz, 2010" startWordPosition="2816" endWordPosition="2817">which identify in the limit a class of TSL languages with an unknown tier but known k exist in principle (since such a class is of finite size), but it is unknown whether any such learner is 61 efficient in the size of the input sample. 5 Discussion Having established the main results, this section discusses some implications for phonology in general, Optimality Theory in particular, and future research. There are three classes of phonotactic constraints in phonology: local segmental patterns, longdistance segmental patterns, and stress patterns (Heinz, 2007). Local segmental patterns are SL (Heinz, 2010a). Long-distance segmental phonotactic patterns are those derived from processes of consonant harmony and disharmony and vowel harmony. Below we show each of these patterns belong to TSL. For exposition, assume E={l,r,i,¨o,u,o}. Phonotactic patterns derived from attested longdistance consonantal assimilation patterns (Rose and Walker, 2004; Hansson, 2001) are SP; on the other hand, phonotactic patterns derived from attested long-distance consonantal dissimilation patterns (Suzuki, 1998) are not (Heinz, 2010a). However, both belong to TSL. Assimilation is obtained by forbidding disagreeing fac</context>
<context position="17719" citStr="Heinz, 2010" startWordPosition="3216" endWordPosition="3217"> from the tier; i.e. by forbidding factors {¨ou, ¨oo, u¨o, o¨o} on tier T ={¨o,u,o}. Thus words like lulolilu are acceptable since [i] is not on the relevant tier. The reasonable hypothesis which follows from this discussion is that all humanly possible segmental phonotactic patterns are TSL (since TSL contains SL). Additionally, the fact that LT,k is closed under intersection has interesting consequences for Optimality Theory (OT) (Prince and Smolensky, 2004). The intersection of two languages drawn from the same string extension class is only as expensive as the intersection of finite sets (Heinz, 2010b). It is known that the generation problem in OT is NP-hard (Eisner, 1997; Idsardi, 2006) and that the NP-hardness is due to the problem of intersecting arbitrarily many arbitrary regular sets (Heinz et al., 2009). It is unknown whether intersecting arbitrarily many TSL sets is expensive, but the results here suggest that it may only be the intersections across distinct LT,k classes that are problematic. In this way, this work suggests a way to factor OT constraints characterizable as TSL languages in a manner originally suggested by Eisner (1997). Future work includes determining automatathe</context>
</contexts>
<marker>Heinz, 2010</marker>
<rawString>Jeffrey Heinz. 2010b. String extension learning. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 897–906, Uppsala, Sweden, July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Idsardi</author>
</authors>
<title>A simple proof that Optimality Theory is computationally intractable.</title>
<date>2006</date>
<journal>Linguistic Inquiry,</journal>
<volume>37</volume>
<issue>2</issue>
<contexts>
<context position="17809" citStr="Idsardi, 2006" startWordPosition="3232" endWordPosition="3233">us words like lulolilu are acceptable since [i] is not on the relevant tier. The reasonable hypothesis which follows from this discussion is that all humanly possible segmental phonotactic patterns are TSL (since TSL contains SL). Additionally, the fact that LT,k is closed under intersection has interesting consequences for Optimality Theory (OT) (Prince and Smolensky, 2004). The intersection of two languages drawn from the same string extension class is only as expensive as the intersection of finite sets (Heinz, 2010b). It is known that the generation problem in OT is NP-hard (Eisner, 1997; Idsardi, 2006) and that the NP-hardness is due to the problem of intersecting arbitrarily many arbitrary regular sets (Heinz et al., 2009). It is unknown whether intersecting arbitrarily many TSL sets is expensive, but the results here suggest that it may only be the intersections across distinct LT,k classes that are problematic. In this way, this work suggests a way to factor OT constraints characterizable as TSL languages in a manner originally suggested by Eisner (1997). Future work includes determining automatatheoretic characterizations of TSL languages and procedures for deciding whether a regular se</context>
</contexts>
<marker>Idsardi, 2006</marker>
<rawString>William Idsardi. 2006. A simple proof that Optimality Theory is computationally intractable. Linguistic Inquiry, 37(2):271–275.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anna Kasprzik</author>
<author>Timo K¨otzing</author>
</authors>
<title>String extension learning using lattices. In Henning Fernau Adrian-Horia Dediu and Carlos Martin-Vide, editors,</title>
<date>2010</date>
<booktitle>Proceedings of the 4th International Conference on Language and Automata Theory and Applications (LATA 2010),</booktitle>
<volume>6031</volume>
<pages>380--391</pages>
<publisher>Springer.</publisher>
<location>Trier, Germany.</location>
<marker>Kasprzik, K¨otzing, 2010</marker>
<rawString>Anna Kasprzik and Timo K¨otzing. 2010. String extension learning using lattices. In Henning Fernau Adrian-Horia Dediu and Carlos Martin-Vide, editors, Proceedings of the 4th International Conference on Language and Automata Theory and Applications (LATA 2010), volume 6031 of Lecture Notes in Computer Science, pages 380–391, Trier, Germany. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andras Kornai</author>
</authors>
<title>Formal Phonology.</title>
<date>1994</date>
<publisher>Garland,</publisher>
<location>New York.</location>
<contexts>
<context position="1477" citStr="Kornai, 1994" startWordPosition="212" endWordPosition="213">s simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining TierBased Strictly Local (TSL) languages, which generalize the Strictly Local languages (McNaughton and Papert, 1971). It is shown that TSL languages are necessarily star-free, but are incomparable with other known sub-star-free classes, and that </context>
</contexts>
<marker>Kornai, 1994</marker>
<rawString>Andras Kornai. 1994. Formal Phonology. Garland, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John J McCarthy</author>
</authors>
<title>Formal problems in Semitic phonology and morphology.</title>
<date>1979</date>
<booktitle>Ph.D. thesis, MIT. Published by</booktitle>
<publisher>Garland Press,</publisher>
<location>New York,</location>
<contexts>
<context position="1120" citStr="McCarthy, 1979" startWordPosition="163" endWordPosition="164">971). It is found that these languages contain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or propert</context>
</contexts>
<marker>McCarthy, 1979</marker>
<rawString>John J. McCarthy. 1979. Formal problems in Semitic phonology and morphology. Ph.D. thesis, MIT. Published by Garland Press, New York, 1985.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert McNaughton</author>
<author>Seymour Papert</author>
</authors>
<title>Counter-Free Automata.</title>
<date>1971</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="1947" citStr="McNaughton and Papert, 1971" startWordPosition="284" endWordPosition="287">epresentational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language theory. This paper begins to fill this gap by defining TierBased Strictly Local (TSL) languages, which generalize the Strictly Local languages (McNaughton and Papert, 1971). It is shown that TSL languages are necessarily star-free, but are incomparable with other known sub-star-free classes, and that natural groups of languages within the class are string extension learnable (Heinz, 2010b; Kasprzik and K¨otzing, 2010). Implications and open questions for learnability and Optimality Theory are also discussed. Section 2 reviews notation and key concepts. Section 3 reviews major subregular classes and their relationships. Section 4 defines the TSL languages, relates them to known subregular classes, and section 5 discusses the results. Section 6 concludes. 2 Prelim</context>
<context position="4184" citStr="McNaughton and Papert, 1971" startWordPosition="693" endWordPosition="696">∈ E ∪ {a}, L(Q) = {Q}. If R and S are regular expressions then L(RS) = L(R)L(S), L(R + S) = L(R) ∪ L(S), and L(R × S) = L(R) ∩ L(S). Also, L(R) = E* − L(R) and L(R*) = L(R)*. For example, the GRE ∅ denotes the language E*. A language is regular iff there is a GRE defining it. A language is star-free iff there is a GRE defining it which contains no instances of the Kleene star (*). It is well known that the star-free languages (1) are a proper subset of the regular languages, (2) are closed under Boolean operations, and (3) have multiple characterizations, including logical and algebraic ones (McNaughton and Papert, 1971). String u is a factor of string w iff ∃x, y ∈ E* such that w = xuy. If also |u |= k then u is a kfactor of w. For example, ab is a 2-factor of aaabbb. The function Fk maps words to the set of k-factors within them. Fk(w) = {u : u is a k-factor of w} For example, F2(abc) = {ab, bc}. The domain Fk is generalized to languages L ⊆ E* in the usual way: Fk(L) = ∪wELFk(w). We also consider the function which counts k-factors up to some threshold t. Fk,t(w) = {(u, n) : u is a k-factor of w and n = |w|u iff |w|u &lt; t else n = t} For example F2,3(aaaaab) = {(aa, 3), (ab,1)}. A string u = Q1Q2 · · · Qk i</context>
<context position="5455" citStr="McNaughton and Papert, 1971" startWordPosition="956" endWordPosition="960">Q2E* ··· E*QkE*. Since |u |= k we also say u is a k-subsequence of w. For example, ab is a 2-subsequence of caccccccccbcc. By definition A is a subsequence of every string in E*. The function P&lt;k maps words to the set of subsequences up to length k found in those words. P&lt;k(w) = {u ∈ E&lt;k : u is a subsequence of w} For example P&lt;2(abc) = {a, a, b, c, ab, ac, bc}. As above, the domains of Fk,t and P&lt;k are extended to languages in the usual way. 3 Subregular Hierarchies Several important subregular classes of languages have been identified and their inclusion relationships have been established (McNaughton and Papert, 1971; Simon, 1975; Rogers and Pullum, to TSL Figure 1: Proper inclusion relationships among subregular language classes (indicated from left to right). This paper establishes the TSL class and its place in the figure. appear; Rogers et al., 2010). Figure 1 summarizes those earlier results as well as the ones made in this paper. This section defines the Strictly Local (SL), Locally Threshold Testable (LTT) and Piecewise Testable (PT) classes. The Locally Testable (LT) languages and the Strictly Piecewise (SP) languages are discussed by Rogers and Pullum (to appear) and Rogers et al. (2010), respect</context>
</contexts>
<marker>McNaughton, Papert, 1971</marker>
<rawString>Robert McNaughton and Seymour Papert. 1971. Counter-Free Automata. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Armin Mester</author>
</authors>
<title>Studies in Tier Structure.</title>
<date>1988</date>
<publisher>Garland Publishing, Inc.</publisher>
<location>New York:</location>
<contexts>
<context position="1161" citStr="Mester, 1988" startWordPosition="169" endWordPosition="170">ain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of fo</context>
</contexts>
<marker>Mester, 1988</marker>
<rawString>Armin Mester. 1988. Studies in Tier Structure. New York: Garland Publishing, Inc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Nevins</author>
</authors>
<title>Locality in Vowel Harmony.</title>
<date>2010</date>
<publisher>The MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="16397" citStr="Nevins, 2010" startWordPosition="2986" endWordPosition="2987">998) are not (Heinz, 2010a). However, both belong to TSL. Assimilation is obtained by forbidding disagreeing factors on the tier. For example, forbidding lr and rl on the liquid tier T = {l, r} yields only words which do not contain both [l] and [r]. Dissimilation is obtained by forbidding agreeing factors on the tier; e.g. forbidding ll and rr on the liquid tier yields a language of the same character as LD. The phonological literature distinguishes three kinds of vowel harmony patterns: those without neutral vowels, those with opaque vowels and those with transparent vowels (Bakovi´c, 2000; Nevins, 2010). Formally, vowel harmony patterns without neutral vowels are the same as assimilatory consonant harmony. For example, a case of back harmony can be described by forbidding disagreeing factors {iu, io, ¨ou, ¨oo, ui, u¨o, oi, o¨o} on the vowel tier T ={i,¨o,u,o}. If a vowel is opaque, it does not harmonize but begins its own harmony domain. For example if [i] is opaque, this can be described by forbidding factors {iu, io ¨ou, ¨oo, u¨o, o¨o} on the vowel tier. Thus words like lulolil¨o are acceptable because oi is a permissible factor. If a vowel is transparent, it neither harmonizes nor begins </context>
</contexts>
<marker>Nevins, 2010</marker>
<rawString>Andrew Nevins. 2010. Locality in Vowel Harmony. The MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Odden</author>
</authors>
<title>Adjacency parameters in phonology.</title>
<date>1994</date>
<journal>Language,</journal>
<volume>70</volume>
<issue>2</issue>
<contexts>
<context position="1174" citStr="Odden, 1994" startWordPosition="171" endWordPosition="172">ly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns in terms of formal language</context>
</contexts>
<marker>Odden, 1994</marker>
<rawString>David Odden. 1994. Adjacency parameters in phonology. Language, 70(2):289–330.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Poser</author>
</authors>
<title>Phonological representation and action-at-a-distance.</title>
<date>1982</date>
<booktitle>The Structure of Phonological Representations,</booktitle>
<pages>121--158</pages>
<editor>In H. van der Hulst and N.R. Smith, editors,</editor>
<location>Dordrecht: Foris.</location>
<contexts>
<context position="1133" citStr="Poser, 1982" startWordPosition="165" endWordPosition="166">d that these languages contain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-b</context>
</contexts>
<marker>Poser, 1982</marker>
<rawString>William Poser. 1982. Phonological representation and action-at-a-distance. In H. van der Hulst and N.R. Smith, editors, The Structure of Phonological Representations, pages 121–158. Dordrecht: Foris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan Prince</author>
<author>Paul Smolensky</author>
</authors>
<title>Optimality Theory: Constraint Interaction in Generative Grammar.</title>
<date>2004</date>
<publisher>Blackwell Publishing.</publisher>
<contexts>
<context position="17572" citStr="Prince and Smolensky, 2004" startWordPosition="3189" endWordPosition="3192">el is transparent, it neither harmonizes nor begins its own harmony domain. For example if [i] is transparent (as in Finnish), this can be described by removing it from the tier; i.e. by forbidding factors {¨ou, ¨oo, u¨o, o¨o} on tier T ={¨o,u,o}. Thus words like lulolilu are acceptable since [i] is not on the relevant tier. The reasonable hypothesis which follows from this discussion is that all humanly possible segmental phonotactic patterns are TSL (since TSL contains SL). Additionally, the fact that LT,k is closed under intersection has interesting consequences for Optimality Theory (OT) (Prince and Smolensky, 2004). The intersection of two languages drawn from the same string extension class is only as expensive as the intersection of finite sets (Heinz, 2010b). It is known that the generation problem in OT is NP-hard (Eisner, 1997; Idsardi, 2006) and that the NP-hardness is due to the problem of intersecting arbitrarily many arbitrary regular sets (Heinz et al., 2009). It is unknown whether intersecting arbitrarily many TSL sets is expensive, but the results here suggest that it may only be the intersections across distinct LT,k classes that are problematic. In this way, this work suggests a way to fac</context>
</contexts>
<marker>Prince, Smolensky, 2004</marker>
<rawString>Alan Prince and Paul Smolensky. 2004. Optimality Theory: Constraint Interaction in Generative Grammar. Blackwell Publishing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan Prince</author>
</authors>
<title>Phonology with tiers.</title>
<date>1984</date>
<booktitle>Language Sound Structure,</booktitle>
<pages>234--244</pages>
<editor>In Mark Aronoff and Richard T. Oehrle, editors,</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, Mass.</location>
<contexts>
<context position="1147" citStr="Prince, 1984" startWordPosition="167" endWordPosition="168">languages contain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the expressivity or properties of tier-based patterns </context>
</contexts>
<marker>Prince, 1984</marker>
<rawString>Alan Prince. 1984. Phonology with tiers. In Mark Aronoff and Richard T. Oehrle, editors, Language Sound Structure, pages 234–244. MIT Press, Cambridge, Mass.</rawString>
</citation>
<citation valid="false">
<authors>
<author>James Rogers</author>
<author>Geoffrey Pullum</author>
</authors>
<title>to appear. Aural pattern recognition experiments and the subregular hierarchy.</title>
<journal>Journal ofLogic, Language and Information.</journal>
<marker>Rogers, Pullum, </marker>
<rawString>James Rogers and Geoffrey Pullum. to appear. Aural pattern recognition experiments and the subregular hierarchy. Journal ofLogic, Language and Information.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Rogers</author>
<author>Jeffrey Heinz</author>
<author>Gil Bailey</author>
<author>Matt Edlefsen</author>
<author>Molly Visscher</author>
<author>David Wellcome</author>
<author>Sean Wibel</author>
</authors>
<title>On languages piecewise testable in the strict sense.</title>
<date>2010</date>
<booktitle>The Mathematics ofLanguage,</booktitle>
<volume>6149</volume>
<pages>255--265</pages>
<editor>In Christian Ebert, Gerhard J¨ager, and Jens Michaelis, editors,</editor>
<publisher>Springer.</publisher>
<contexts>
<context position="5697" citStr="Rogers et al., 2010" startWordPosition="996" endWordPosition="999">found in those words. P&lt;k(w) = {u ∈ E&lt;k : u is a subsequence of w} For example P&lt;2(abc) = {a, a, b, c, ab, ac, bc}. As above, the domains of Fk,t and P&lt;k are extended to languages in the usual way. 3 Subregular Hierarchies Several important subregular classes of languages have been identified and their inclusion relationships have been established (McNaughton and Papert, 1971; Simon, 1975; Rogers and Pullum, to TSL Figure 1: Proper inclusion relationships among subregular language classes (indicated from left to right). This paper establishes the TSL class and its place in the figure. appear; Rogers et al., 2010). Figure 1 summarizes those earlier results as well as the ones made in this paper. This section defines the Strictly Local (SL), Locally Threshold Testable (LTT) and Piecewise Testable (PT) classes. The Locally Testable (LT) languages and the Strictly Piecewise (SP) languages are discussed by Rogers and Pullum (to appear) and Rogers et al. (2010), respectively. Readers are referred to these papers for additional details on all of these classes. The Tier-based Strictly Local (TSL) class is defined in Section 4. Definition 1 A language L is Strictly k-Local iff there exists a finite set S ⊆ Fk(</context>
</contexts>
<marker>Rogers, Heinz, Bailey, Edlefsen, Visscher, Wellcome, Wibel, 2010</marker>
<rawString>James Rogers, Jeffrey Heinz, Gil Bailey, Matt Edlefsen, Molly Visscher, David Wellcome, and Sean Wibel. 2010. On languages piecewise testable in the strict sense. In Christian Ebert, Gerhard J¨ager, and Jens Michaelis, editors, The Mathematics ofLanguage, volume 6149 of Lecture Notes in Artifical Intelligence, pages 255–265. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sharon Rose</author>
<author>Rachel Walker</author>
</authors>
<title>A typology of consonant agreement as correspondence.</title>
<date>2004</date>
<journal>Language,</journal>
<volume>80</volume>
<issue>3</issue>
<contexts>
<context position="15638" citStr="Rose and Walker, 2004" startWordPosition="2861" endWordPosition="2864">phonology in general, Optimality Theory in particular, and future research. There are three classes of phonotactic constraints in phonology: local segmental patterns, longdistance segmental patterns, and stress patterns (Heinz, 2007). Local segmental patterns are SL (Heinz, 2010a). Long-distance segmental phonotactic patterns are those derived from processes of consonant harmony and disharmony and vowel harmony. Below we show each of these patterns belong to TSL. For exposition, assume E={l,r,i,¨o,u,o}. Phonotactic patterns derived from attested longdistance consonantal assimilation patterns (Rose and Walker, 2004; Hansson, 2001) are SP; on the other hand, phonotactic patterns derived from attested long-distance consonantal dissimilation patterns (Suzuki, 1998) are not (Heinz, 2010a). However, both belong to TSL. Assimilation is obtained by forbidding disagreeing factors on the tier. For example, forbidding lr and rl on the liquid tier T = {l, r} yields only words which do not contain both [l] and [r]. Dissimilation is obtained by forbidding agreeing factors on the tier; e.g. forbidding ll and rr on the liquid tier yields a language of the same character as LD. The phonological literature distinguishes</context>
</contexts>
<marker>Rose, Walker, 2004</marker>
<rawString>Sharon Rose and Rachel Walker. 2004. A typology of consonant agreement as correspondence. Language, 80(3):475–531.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Imre Simon</author>
</authors>
<title>Piecewise testable events.</title>
<date>1975</date>
<booktitle>In Automata Theory and Formal Languages,</booktitle>
<pages>214--222</pages>
<contexts>
<context position="5468" citStr="Simon, 1975" startWordPosition="961" endWordPosition="962">k we also say u is a k-subsequence of w. For example, ab is a 2-subsequence of caccccccccbcc. By definition A is a subsequence of every string in E*. The function P&lt;k maps words to the set of subsequences up to length k found in those words. P&lt;k(w) = {u ∈ E&lt;k : u is a subsequence of w} For example P&lt;2(abc) = {a, a, b, c, ab, ac, bc}. As above, the domains of Fk,t and P&lt;k are extended to languages in the usual way. 3 Subregular Hierarchies Several important subregular classes of languages have been identified and their inclusion relationships have been established (McNaughton and Papert, 1971; Simon, 1975; Rogers and Pullum, to TSL Figure 1: Proper inclusion relationships among subregular language classes (indicated from left to right). This paper establishes the TSL class and its place in the figure. appear; Rogers et al., 2010). Figure 1 summarizes those earlier results as well as the ones made in this paper. This section defines the Strictly Local (SL), Locally Threshold Testable (LTT) and Piecewise Testable (PT) classes. The Locally Testable (LT) languages and the Strictly Piecewise (SP) languages are discussed by Rogers and Pullum (to appear) and Rogers et al. (2010), respectively. Reader</context>
</contexts>
<marker>Simon, 1975</marker>
<rawString>Imre Simon. 1975. Piecewise testable events. In Automata Theory and Formal Languages, pages 214– 222.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Keiichiro Suzuki</author>
</authors>
<title>A Typological Investigation of Dissimilation.</title>
<date>1998</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Arizona,</institution>
<location>Tucson, AZ.</location>
<contexts>
<context position="9645" citStr="Suzuki, 1998" startWordPosition="1764" endWordPosition="1765">− S represent the forbidden k-factors on tier T. A language L is a Tier-based Strictly Local iff it is Strictly k-Local on Tier T for some T C E and k E N. To illustrate, let E = {a, b, c}, T = {b, c}, and S = {xb, xc, bc, cb, bx, c }. Elements of S are the permissible k-factors on tier T. Elements of F2(xT*x) − S = {bb, cc} are the forbidden factors on tier T. The language this describe includes words like aabaaacaaabaa, but excludes words like aabaaabaaacaa since bb is a forbidden 2-factor on tier T. This example captures the nature of longdistance dissimilation patterns found in phonology (Suzuki, 1998; Frisch et al., 2004; Heinz, 2010a). Let LD stand for this particular dissimilatory language. Like SL languages, TSL languages can also be characterized in terms of the forbidden factors. Let the tier-based container of w E xT*x be CT (w) = {u E E* : w is a factor on tier T of x ux} For example, CT(xb) = (E − T)*bE*. In general if w = Q1 ··· Qn E T* then CT(w) = E*Q1(E − T)*Q2(E − T)* ··· (E − T)*QnE* In the case where w begins (ends) with a word boundary symbol then the first (last) E* in the previous GRE must be replaced with (E − T)*. Theorem 2 For any L E TSL, let T, k, S be the tier, len</context>
<context position="15788" citStr="Suzuki, 1998" startWordPosition="2884" endWordPosition="2885">atterns, longdistance segmental patterns, and stress patterns (Heinz, 2007). Local segmental patterns are SL (Heinz, 2010a). Long-distance segmental phonotactic patterns are those derived from processes of consonant harmony and disharmony and vowel harmony. Below we show each of these patterns belong to TSL. For exposition, assume E={l,r,i,¨o,u,o}. Phonotactic patterns derived from attested longdistance consonantal assimilation patterns (Rose and Walker, 2004; Hansson, 2001) are SP; on the other hand, phonotactic patterns derived from attested long-distance consonantal dissimilation patterns (Suzuki, 1998) are not (Heinz, 2010a). However, both belong to TSL. Assimilation is obtained by forbidding disagreeing factors on the tier. For example, forbidding lr and rl on the liquid tier T = {l, r} yields only words which do not contain both [l] and [r]. Dissimilation is obtained by forbidding agreeing factors on the tier; e.g. forbidding ll and rr on the liquid tier yields a language of the same character as LD. The phonological literature distinguishes three kinds of vowel harmony patterns: those without neutral vowels, those with opaque vowels and those with transparent vowels (Bakovi´c, 2000; Nevi</context>
</contexts>
<marker>Suzuki, 1998</marker>
<rawString>Keiichiro Suzuki. 1998. A Typological Investigation of Dissimilation. Ph.D. thesis, University of Arizona, Tucson, AZ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jean-Roger Vergnaud</author>
</authors>
<title>Formal properties of phonological rules.</title>
<date>1977</date>
<booktitle>Basic Problems and Methodology and Linguistics.</booktitle>
<editor>In R. Butts and J. Hintikka, editors,</editor>
<location>Amsterdam: Reidel.</location>
<contexts>
<context position="1104" citStr="Vergnaud, 1977" startWordPosition="161" endWordPosition="162">on and Papert, 1971). It is found that these languages contain the Strictly Local languages, are star-free, are incomparable with other known sub-star-free classes, and have other interesting properties. 1 Introduction The phonological tier is a level of representation where not all speech sounds are present. For example, the vowel tier of the Finnish word pdivda ‘Hello’ is simply the vowels in order without the consonants: diad. Tiers were originally introduced to describe tone systems in languages (Goldsmith, 1976), and subsequently many variants of the theory were proposed (Clements, 1976; Vergnaud, 1977; McCarthy, 1979; Poser, 1982; Prince, 1984; Mester, 1988; Odden, 1994; Archangeli and Pulleyblank, 1994; Clements and Hume, 1995). Although these theories differ in their details, they each adopt the premise that representational levels exist which exclude certain speech sounds. Computational work exists which incorporates and formalizes phonological tiers (Kornai, 1994; Bird, 1995; Eisner, 1997). There are also learning algorithms which employ them (Hayes and Wilson, 2008; Goldsmith and Riggle, to appear). However, there is no work of which the authors are aware that 58 addresses the express</context>
</contexts>
<marker>Vergnaud, 1977</marker>
<rawString>Jean-Roger Vergnaud. 1977. Formal properties of phonological rules. In R. Butts and J. Hintikka, editors, Basic Problems and Methodology and Linguistics. Amsterdam: Reidel.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>