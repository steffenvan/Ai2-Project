<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.997127">
Word Translation Disambiguation Using
Bilingual Bootstrapping
</title>
<author confidence="0.999877">
Hang Li∗ Cong Li*
</author>
<affiliation confidence="0.970905">
Microsoft Research Asia Microsoft Research Asia
</affiliation>
<bodyText confidence="0.997841">
This article proposes a new methodfor word translation disambiguation, one that uses a machine-
learning technique called bilingual bootstrapping. In learning to disambiguate words to be trans-
lated, bilingual bootstrapping makes use of a small amount of classified data and a large amount
of unclassified data in both the source and the target languages. It repeatedly constructs classi-
fiers in the two languages in parallel and boosts the performance of the classifiers by classifying
unclassified data in the two languages and by exchanging information regarding classified data
between the two languages. Experimental results indicate that word translation disambiguation
based on bilingual bootstrapping consistently and significantly outperforms existing methods
that are based on monolingual bootstrapping.
</bodyText>
<sectionHeader confidence="0.997003" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999926043478261">
We address here the problem of word translation disambiguation. If, for example, we
were to attempt to translate the English noun plant, which could refer either to a type
of factory or to a form of flora (i.e., in Chinese, either to [gongchang] or to
[zhiwu]), our goal would be to determine the correct Chinese translation. That is, word
translation disambiguation is essentially a special case of word sense disambiguation
(in the above example, gongchang would correspond to the sense of factory and zhiwu
to the sense of flora).1
We could view word translation disambiguation as a problem of classification. To
perform the task, we could employ a supervised learning method, but since to do
so would require human labeling of data, which would be expensive, bootstrapping
would be a better choice.
Yarowsky (1995) has proposed a bootstrapping method for word sense disam-
biguation. When applied to translation from English to Chinese, his method starts
learning with a small number of English sentences that contain ambiguous English
words and that are labeled with correct Chinese translations of those words. It then
uses these classified sentences as training data to create a classifier (e.g., a decision list),
which it uses to classify unclassified sentences containing the same ambiguous words.
The output of this process is then used as additional training data. It also adopts the
one-sense-per-discourse heuristic (Gale, Church, and Yarowsky 1992b) in classifying
unclassified sentences. By repeating the above process, an accurate classifier for word
translation disambiguation can be created. Because this method uses data in a single
language (i.e., the source language in translation), we refer to it here as monolingual
bootstrapping (MB).
</bodyText>
<footnote confidence="0.9084626">
* 5F Sigma Center, No. 49 Zhichun Road, Haidian, Beijing, China, 100080. E-mail:{hangli,i-congl}@
microsoft.com.
1 In this article, we take English-Chinese translation as an example; but the ideas and methods described
here can be applied to any pair of languages.
© 2004 Association for Computational Linguistics
</footnote>
<note confidence="0.53048">
Computational Linguistics Volume 30, Number 1
</note>
<bodyText confidence="0.999919692307692">
In this paper, we propose a new method of bootstrapping, one that we refer to as
bilingual bootstrapping (BB). Instead of using data in one language, BB uses data in
two languages. In translation from English to Chinese, for example, BB makes use of
unclassified data from both languages. It also uses a small number of classified data
in English and, optionally, a small number of classified data in Chinese. The data in
the two languages should be from the same domain but are not required to be exactly
in parallel.
BB constructs classifiers for English-to-Chinese translation disambiguation by re-
peating the following two steps: (1) Construct a classifier for each of the languages
on the basis of classified data in both languages, and (2) use the constructed classifier
for each language to classify unclassified data, which are then added to the classified
data of the language. We can use classified data in both languages in step (1), because
words in one language have translations in the other, and we can transform data from
one language into the other.
We have experimentally evaluated the performance of BB in word translation
disambiguation, and all of our results indicate that BB consistently and significantly
outperforms MB. The higher performance of BB can be attributed to its effective use
of the asymmetric relationship between the ambiguous words in the two languages.
Our study is organized as follows. In Section 2, we describe related work. Specifi-
cally, we formalize the problem of word translation disambiguation as that of classifi-
cation based on statistical learning. As examples, we describe two such methods: one
using decision lists and the other using naive Bayes. We also explain the Yarowsky
disambiguation method, which is based on Monolingual Bootstrapping. In Section 3,
we describe bilingual bootstrapping, comparing BB with MB, and discussing the re-
lationship between BB and co-training. In Section 4, we describe our experimental
results, and finally, in Section 5, we give some concluding remarks.
</bodyText>
<sectionHeader confidence="0.999943" genericHeader="related work">
2. Related Work
</sectionHeader>
<subsectionHeader confidence="0.997231">
2.1 Word Translation Disambiguation
</subsectionHeader>
<bodyText confidence="0.999162095238095">
Word translation disambiguation (in general, word sense disambiguation) can be
viewed as a problem of classification and can be addressed by employing various
supervised learning methods. For example, with such a learning method, an English
sentence containing an ambiguous English word corresponds to an instance, and the
Chinese translation of the word in the context (i.e., the word sense) corresponds to a
classification decision (a label).
Many methods for word sense disambiguation based on supervised learning tech-
nique have been proposed. They include those using naive Bayes (Gale, Church, and
Yarowsky 1992a), decision lists (Yarowsky 1994), nearest neighbor (Ng and Lee 1996),
transformation-based learning (Mangu and Brill 1997), neural networks (Towell and
Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and
Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind
these methods is that it is nearly always possible to determine the sense of an ambigu-
ous word by referring to its context, and thus all of the methods build a classifier (i.e.,
a classification program) using features representing context information (e.g., sur-
rounding context words). For other related work on translation disambiguation, see
Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Ped-
ersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999),
Koehn and Knight (2000), and Zhou, Ding, and Huang (2001).
Let us formulate the problem of word sense (translation) disambiguation as fol-
lows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e
</bodyText>
<page confidence="0.995137">
2
</page>
<note confidence="0.952542">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<bodyText confidence="0.966564909090909">
denote a context word in E. (Throughout this article, we use Greek letters to represent
ambiguous words and italic letters to represent context words.) Let Tε denote the set
of senses of ε, and let tε denote a sense in Tε. Let eε stand for an instance representing
a context of ε, that is, a sequence of context words surrounding ε:
eε = (eε,1, eε,2, . . . , (ε), . . . , eε,m), eε,i ∈ E, (i = 1, . . . , m)
For the example presented earlier, we have ε = plant, Tε = {1, 2}, where 1 represents
the sense factory and 2 the sense flora. From the phrase “... computer manufacturing
plant and adjacent...” we obtain eε = (... computer, manufacturing, (plant), and,
adjacent, ... ).
For a specific ε, we define a binary classifier for resolving each of its ambiguities
in Tε in a general form as2
</bodyText>
<equation confidence="0.910626">
P(tε  |eε), tε ∈ Tε and P(¯tε  |eε), ¯tε = Tε − {tε}
</equation>
<bodyText confidence="0.999915">
where eε denotes an instance representing a context of ε. All of the supervised learning
methods mentioned previously can automatically create such a classifier. To construct
classifiers using supervised methods, we need classified data such as those in Figure 1.
</bodyText>
<subsectionHeader confidence="0.995786">
2.2 Decision Lists
</subsectionHeader>
<bodyText confidence="0.9999826">
Let us first consider the use of decision lists, as proposed in Yarowsky (1994). Let fε
denote a feature of the context of ε. A feature can be, for example, a word’s occurrence
immediately to the left of ε. We define many such features. For each feature fε, we
use the classified data to calculate the posterior probability ratio of each sense tε with
respect to the feature as
</bodyText>
<equation confidence="0.9890315">
P(tε  |fε)
λ(tε  |fε) =
P(¯tε  |fε)
For each feature fε, we create a rule consisting of the feature, the sense
arg max λ(tε  |fε)
tε∈Tε
</equation>
<bodyText confidence="0.7972748">
and the score
max λ(tε  |fε)
tε∈Tε
We sort the rules in descending order with respect to their scores, provided that the
scores of the rules are larger than the default
max P(tε)
tε∈Tε P(¯tε)
The sorted rules form an if-then-else type of rule sequence, that is, a decision list.3 For
a new instance eε, we use the decision list to determine its sense. The rule in the list
whose feature is first satisfied in the context of eε is applied in sense disambiguation.
</bodyText>
<footnote confidence="0.991161333333333">
2 In this article we always employ binary classifiers even there are multiple classes.
3 We note that there are two types of decision lists. One is defined as here; the other is defined as a
conditional distribution over a partition of the feature space (cf. Li and Yamanishi 2002).
</footnote>
<page confidence="0.895399">
3
</page>
<figure confidence="0.218723">
Computational Linguistics Volume 30, Number 1
</figure>
<equation confidence="0.99409">
P1 ... Nissan car and truck plant... (1)
P2 ... computer manufacturing plant and adjacent... (1)
P3 ... automated manufacturing plant in Fremont... (1)
P4 ... divide life into plant and animal kingdom... (2)
P5 ... thousands of plant and animal species... (2)
P6 ... zonal distribution of plant life... (2)
. . .
. . .
</equation>
<figureCaption confidence="0.886043">
Figure 1
</figureCaption>
<subsectionHeader confidence="0.985973">
Examples of classified data (ε = plant).
2.3 Naive Bayesian Ensemble
</subsectionHeader>
<bodyText confidence="0.9955485">
Let us next consider the use of naive Bayesian classifiers. Given an instance eE, we can
calculate
</bodyText>
<equation confidence="0.9907146875">
A*(eE) = max
tε∈Tε
P(tE  |eE)
P(¯tE  |eE)
= max
tε∈Tε
P(tE)P(eE  |tE)
(1)
¯tE)
P(¯tE)P(eE |
according to Bayes’ rule and select the sense
P(tE)P(eE  |tE) (2)
tE) L
t*(eE) = arg max
tε∈Tε
P(¯tE)P(eE |
</equation>
<bodyText confidence="0.9532565">
In a naive Bayesian classifier, we assume that the words in eE with a fixed tE are
independently generated from P(eE  |tE) and calculate
</bodyText>
<equation confidence="0.994469">
m
P(eE  |tE) = P(eE,i  |tE)
i=1
</equation>
<bodyText confidence="0.977268">
Here P(eE  |tE) represents the conditional probability of e in the context of E given tE.
We calculate P(eE  |¯tE) similarly. We can then calculate (1) and (2) with the obtained
P(eE  |tE) and P(eE  |¯tE).
The naive Bayesian ensemble method for word sense disambiguation, as proposed
in Pedersen (2000), employs a linear combination of several naive Bayesian classifiers
constructed on the basis of a number of nested surrounding contexts4
</bodyText>
<equation confidence="0.9930414">
h P(tE  |ee,i)
1
P(tE  |eE) = h
i=1
e�E,1 c ··· c e�E,i ··· c eE,h = eE (i = 1, . . . , h)
</equation>
<bodyText confidence="0.9994325">
The naive Bayesian ensemble is reported to perform the best for word sense disam-
biguation with respect to a benchmark data set (Pedersen 2000).
</bodyText>
<subsectionHeader confidence="0.999108">
2.4 Monolingual Bootstrapping
</subsectionHeader>
<bodyText confidence="0.999386666666667">
Since data preparation for supervised learning is expensive, it is desirable to develop
bootstrapping methods. Yarowsky (1995) proposed such a method for word sense
disambiguation, which we refer to as monolingual bootstrapping.
</bodyText>
<footnote confidence="0.627996">
4 Here u ⊂ v denotes that u is a sub-sequence of v.
</footnote>
<page confidence="0.995029">
4
</page>
<note confidence="0.732093">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<bodyText confidence="0.996756">
Let Lε denote a set of classified instances (labeled data) in English, each represent-
ing one context of E:
</bodyText>
<equation confidence="0.9833225">
Lε = {(eε,1, tε,1), (eε,2, tε,2), ... , (eε,k, tε,k)}
tε,i ∈ Tε (i = 1, 2, ... , k)
</equation>
<bodyText confidence="0.978091">
and Uε a set of unclassified instances (unlabeled data) in English, each representing
one context of E:
</bodyText>
<equation confidence="0.99849">
Uε = {eε,1, eε,2, ... , eε,l}
The instances in Figure 1 can be considered examples of Lε. Furthermore, we have
�LE = �Lε, UE = �Uε, T = Tε,
εEE εEE εEE
</equation>
<bodyText confidence="0.928273">
An algorithm for monolingual bootstrapping is presented in Figure 2. For a better
comparison with bilingual bootstrapping, we have extended the method so that it
Input: E, T, LE, UE, Parameter: b, 0
Repeat the following processes until unable to continue
</bodyText>
<listItem confidence="0.7428601">
1. 1 for each (E ∈ E) {
2 for each (t ∈ Tε) {
3 use Lε to create classifier:
P(t  |eε), t ∈ Tε and P(¯t  |eε), ¯t ∈ Tε − {t}; }}
2. 4 for each (E ∈ E) { P(t  |eε)
5 NU ← {}; NL ← {}; P(¯t  |eε);
6 for each (t ∈ Tε) {
7 St ← {};
8 Qt ← {};}
9 for each (eε ∈ Uε){
</listItem>
<figure confidence="0.737750307692308">
10 calculate λ*(eε) = max
tETε
11 let t*(eε) = arg max P(t  |eε)
tETε P(¯t  |eε);
12 if (λ*(eε) &gt; 0 &amp; t*(eε) = t)
13 put eε into St;}
14 for each (t ∈ Tε){
15 sort eε ∈ St in descending order of λ*(eε) and put the top b
elements into Qt;}
16 for each (eε ∈ Ut Qt){
17 put eε into NU and put (eε, t*(eε)) into NL;}
18 Lε ← Lε U NL;
19 Uε ← Uε − NU;}
</figure>
<figureCaption confidence="0.922836">
Figure 2
</figureCaption>
<figure confidence="0.22115">
Monolingual bootstrapping.
5
Computational Linguistics Volume 30, Number 1
</figure>
<bodyText confidence="0.999550409090909">
performs disambiguation for all the words in E. Note that we can employ any kind
of classifier here.
At step 1, for each ambiguous word ε we create binary classifiers for resolving its
ambiguities (cf. lines 1–3 of Figure 2). At step 2, we use the classifiers for each word
ε to select some unclassified instances from Uε, classify them, and add them to Lε (cf.
lines 4–19). We repeat the process until all the data are classified.
Lines 9–13 show that for each unclassified instance eε, we classify it as having
sense t if t’s posterior odds are the largest among the possible senses and are larger
than a threshold θ. For each class t, we store the classified instances in St. Lines 14–15
show that for each class t, we only choose the top b classified instances in terms of the
posterior odds. For each class t, we store the selected top b classified instances in Qt.
Lines 16–17 show that we create the classified instances by combining the instances
with their classification labels.
After line 17, we can employ the one-sense-per-discourse heuristic to further clas-
sify unclassified data, as proposed in Yarowsky (1995). This heuristic is based on the
observation that when an ambiguous word appears in the same text several times, its
tokens usually refer to the same sense. In the bootstrapping process, for each newly
classified instance, we automatically assign its class label to those unclassified instances
that also contain the same ambiguous word and co-occur with it in the same text.
Hereafter, we will refer to this method as monolingual bootstrapping with one
sense per discourse. This method can be viewed as a special case of co-training (Blum
and Mitchell 1998).
</bodyText>
<subsectionHeader confidence="0.999657">
2.5 Co-training
</subsectionHeader>
<bodyText confidence="0.999969625">
Monolingual bootstrapping augmented with the one-sense-per-discourse heuristic can
be viewed as a special case of co-training, as proposed by Blum and Mitchell (1998)
(see also Collins and Singer 1999; Nigam et al. 2000; and Nigam and Ghani 2000). Co-
training conducts two bootstrapping processes in parallel and makes them collaborate
with each other. More specifically, co-training begins with a small number of classified
data and a large number of unclassified data. It trains two classifiers from the classified
data, uses each of the two classifiers to classify some unclassified data, makes the two
classifiers exchange their classified data, and repeats the process.
</bodyText>
<sectionHeader confidence="0.966407" genericHeader="method">
3. Bilingual Bootstrapping
</sectionHeader>
<subsectionHeader confidence="0.999961">
3.1 Basic Algorithm
</subsectionHeader>
<bodyText confidence="0.999980466666667">
Bilingual bootstrapping makes use of a small amount of classified data and a large
amount of unclassified data in both the source and the target languages in translation.
It repeatedly constructs classifiers in the two languages in parallel and boosts the
performance of the classifiers by classifying data in each of the languages and by
exchanging information regarding the classified data between the two languages.
Figures 3 and 4 illustrate the process of bilingual bootstrapping. Figure 5 shows
the translation relationship among the ambiguous words plant, zhiwu, and gongchang.
There is a classifier for plant in English. There are also two classifiers, one each for
zhiwu and gongchang, respectively, in Chinese. Sentences containing plant in English
and sentences containing zhiwu and gongchang in Chinese are used.
In the beginning, sentences P1 and P4 on the English side are assigned labels 1 and
2, respectively (Figure 3). On the Chinese side, sentences G1 and G3 are assigned labels
1 and 3, respectively, and sentences Z1 and Z3 are assigned labels 2 and 4, respectively.
The four labels here correspond to the four links in Figure 5. For example, label 1
represents the sense factory and label 2 represents the sense flora. Other sentences are
</bodyText>
<page confidence="0.985471">
6
</page>
<note confidence="0.728582">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<figureCaption confidence="0.61035">
Figure 3
</figureCaption>
<figure confidence="0.621343">
Bilingual bootstrapping (1).
</figure>
<figureCaption confidence="0.920087">
Figure 4
</figureCaption>
<bodyText confidence="0.397046">
Bilingual bootstrapping (2).
</bodyText>
<page confidence="0.905772">
7
</page>
<figure confidence="0.916534">
Computational Linguistics Volume 30, Number 1
</figure>
<figureCaption confidence="0.6121985">
Figure 5
Example of translation dictionary.
</figureCaption>
<bodyText confidence="0.968613666666667">
not labeled. Bilingual bootstrapping uses labeled sentences P1, P4, G1, and Z1 to create
a classifier for plant disambiguation (between label 1 and label 2). It also uses labeled
sentences Z1, Z3, and P4 to create a classifier for zhiwu and uses labeled sentences G1,
G3, and P1 to create a classifier for gongzhang. Bilingual bootstrapping next uses the
classifier for plant to label sentences P2 and P5 (Figure 4). It uses the classifier for zhiwu
to label sentences Z2 and Z4, and uses the classifier for gongchang to label sentences
G2 and G4. The process is repeated until we cannot continue.
To describe this process formally, let E denote a set of words in English, C a set of
words in Chinese, and T a set of senses (links) in a translation dictionary as shown in
Figure 5. (Any two linked words can be translations of each other.) Mathematically,
T is defined as a relation between E and C, that is, T ⊆ E x C. Let E stand for an
ambiguous word in E, and y an ambiguous word in C. Also let e stand for a context
word in E, c a context word in C, and t a sense in T.
For an English word E, Tε = {t  |t = (E, y&apos;), t E T} represents the set of E’s possible
senses (i.e., its links), and Cε = {y&apos;  |(E, y&apos;) E T} represents the Chinese words that can
be translations of E (i.e., Chinese words to which E is linked). Similarly, for a Chinese
word y, let Tγ = {t  |t = (E&apos;, y), t E T} and Eγ = {E&apos;  |(E&apos;, y) E T}.
For the example in Figure 5, when E = plant, we have Tε = {1,2} and Cε =
{gongchang, zhiwu}. When y = gongchang, Tγ = {1, 3} and Eγ = {plant, mill}. When
y = zhiwu, Tγ = {2,4} and Eγ = {plant, vegetable}. Note that gongchang and zhiwu
share the senses {1,2} with plant.
Let eε denote an instance (a sequence of context words surrounding E) in English:
eε = (eε,1, eε,2, ... , eε,m), eε,i E E (i = 1, 2, ... , m)
Let cγ denote an instance (a sequence of context words surrounding y) in Chinese:
cγ = (cγ,1, cγ,2, ... , cγ,n, cγ,i E C (i = 1, 2,.. . , n)
For an English word E, a binary classifier for resolving each of the ambiguities in Tε is
defined as
</bodyText>
<equation confidence="0.770626">
P(tε  |eε), tε E Tε and P(¯tε  |eε), ¯tε = Tε − {tε}
</equation>
<bodyText confidence="0.936275">
Similarly, for a Chinese word y, a binary classifier is defined as
</bodyText>
<equation confidence="0.749002">
P(tγ  |cγ), tγ E Tγ and P (¯tγ  |cγ), ¯t = Tγ − {tγ}
</equation>
<bodyText confidence="0.863932">
Let Lε denote a set of classified instances in English, each representing one context
of E:
</bodyText>
<equation confidence="0.578556">
Lε = {(eε,1, tε,1), (eε,2, tε,2), ... , (eε,k, tε,k)}, tε,i E Tε (i = 1, 2,. .. , k)
</equation>
<page confidence="0.947376">
8
</page>
<note confidence="0.648879">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<bodyText confidence="0.894547">
and Uε a set of unclassified instances in English, each representing one context of E:
</bodyText>
<equation confidence="0.799348">
Uε = {eε,1, eε,2, ... , eε,l}
</equation>
<bodyText confidence="0.998957">
Similarly, we denote the sets of classified and unclassified instances with respect to y
in Chinese as Lγ and Uγ, respectively. Furthermore, we have
</bodyText>
<equation confidence="0.9778312">
ULE = ULε, LC = ULγ, UE = UUε, UC = Uγ
εEE γEC εEE γEC
We also have
T =U UTε = Tγ
εEE γEC
</equation>
<bodyText confidence="0.998810409090909">
Sentences P1 and P4 in Figure 3 are examples of Lε. Sentences Z1, Z3 and G1, G3 are
examples of Lγ.
We perform bilingual bootstrapping as described in Figure 6. Note that we can,
in principle, employ any kind of classifier here.
The figure explains the process for English (left-hand side); the process for Chinese
(right-hand side) behaves similarly. At step 1, for each ambiguous word E, we create
binary classifiers for resolving its ambiguities (cf. lines 1–3). The main point here is
that we use classified data from both languages to construct classifiers, as we describe
in Section 3.2. For the example in Figure 3, we use both Lε (sentences P1 and P4) and
Lγ, y E Cε (sentences Z1 and G1) to construct a classifier resolving ambiguities in
Tε = {1,2}. Note that not only P1 and P4, but also Z1 and G1, are related to {1,2}.
At step 2, for each word E, we use its classifiers to select some unclassified instances
from Uε, classify them, and add them to Lε (cf. lines 4–19). We repeat the process until
we cannot continue.
Lines 9–13 show that for each unclassified instance eε, we use the classifiers to
classify it into the class (sense) t if t’s posterior odds are the largest among the possible
classes and are larger than a threshold B. For each class t, we store the classified
instances in St. Lines 14–15 show that for each class t, we choose only the top b
classified instances (in terms of the posterior odds), which are then stored in Qt. Lines
16–17 show that we create the classified instances by combining the instances with
their classification labels. We note that after line 17 we can also employ the one-sense-
per-discourse heuristic.
</bodyText>
<subsectionHeader confidence="0.999485">
3.2 An Implementation
</subsectionHeader>
<bodyText confidence="0.9999557">
Although we can in principle employ any kind of classifier in BB, we use here naive
Bayes (or naive Bayesian ensemble). We also use the EM algorithm in classified data
transformation between languages. As will be made clear, this implementation of BB
can naturally combine the features of naive Bayes (or naive Bayesian ensemble) and
the features of EM. Hereafter, when we refer to BB, we mean this implementation of
BB.
We explain the process for English (left-hand side of Figure 6); the process for
Chinese (right-hand side of figure) behaves similarly. At step 1 in BB, we construct a
naive Bayesian classifier as described in Figure 7. At step 2, for each instance eε, we
use the classifier to calculate
</bodyText>
<equation confidence="0.65832">
A*(eε) = max P(tε  |eε) = max P(tε)P(eε  |tε)
tεETε P(¯tε  |eε) tεETε
P(¯tε)P(eε  |¯tε)
</equation>
<page confidence="0.873248">
9
</page>
<figure confidence="0.797264">
Computational Linguistics Volume 30, Number 1
</figure>
<figureCaption confidence="0.6626605">
Figure 6
Bilingual bootstrapping.
</figureCaption>
<bodyText confidence="0.673825">
We estimate
</bodyText>
<equation confidence="0.9991595">
P(eε  |tε) = �m P(eε,i  |tε)
i=1
</equation>
<bodyText confidence="0.9937315">
We estimate P(eε  |¯tε) similarly. We estimate P(eε  |tε) by linearly combining P(E)(eε  |tε)
estimated from English and P(C)(eε  |tε) estimated from Chinese:
</bodyText>
<equation confidence="0.994844">
P(eε  |tε) = (1 − α − O)P(E)(eε  |tε) + αP(C)(eε  |tε) + OP(U)(eε) (3)
</equation>
<bodyText confidence="0.999965">
where 0 &lt; α &lt; 1, 0 &lt; O &lt; 1, α + O &lt; 1, and P(U)(eε) is a uniform distribution over E,
which is used for avoiding zero probability. In this way, we estimate P(eε  |tε) using
information from not only English, but also Chinese.
We estimate P(E)(eε  |tε) with maximum-likelihood estimation (MLE) using Lε as
data. The estimation of P(C)(eε  |tε) proceeds as follows.
For the sake of readability, we rewrite P(C)(eε  |tε) as P(e  |t). We define a finite-
mixture model of the form P(c  |t) = Ee∈E P(c  |e,t)P(e  |t), and for a specific E we
assume that the data in
</bodyText>
<equation confidence="0.659777">
Lγ = {(cγ,1, tγ,1), (cγ,2, tγ,2), ... , (cγ,h, tγ,h)}, tγ,i E Tγ (i = 1, ... , h), V-y E Cε
</equation>
<page confidence="0.970679">
10
</page>
<note confidence="0.741998">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<table confidence="0.5411146">
estimate P(E)(eε  |tε) with MLE using Lε as data;
estimate P(C)(eε  |tε) with EM algorithm using L for each γ E Cε as data;
calculate P(eε  |tε) as a linear combination of P(Z (eε  |tε) and P(C)(eε  |tε);
estimate P(tε) with MLE using Lε;
calculate P(eε  |¯tε) and P(¯tε) similarly.
</table>
<figureCaption confidence="0.989024">
Figure 7
</figureCaption>
<subsectionHeader confidence="0.852738">
Creating a naive Bayesian classifier.
</subsectionHeader>
<bodyText confidence="0.990011571428571">
are generated independently from the model. We can therefore employ the expectation-
maximization (EM) algorithm (Dempster, Laird, and Rubin 1977) to estimate the pa-
rameters of the model, including P(e  |t). Note that e and c represent context words.
Recall that E is a set of words in English, C is a set of words in Chinese, and T
is a set of senses. For a specific English word e, Ce = {c&apos;  |(e,c&apos;) E T} represents the
Chinese words that are its possible translations.
Initially, we set
</bodyText>
<equation confidence="0.982238333333333">
P(c  |e, t) =  Ce
 |
 1|, if c E Ce
0, if c E�Ce
1
P(e  |t) = |E|, e E E
</equation>
<bodyText confidence="0.999912111111111">
We next estimate the parameters by iteratively updating them, as described in Figure 8,
until they converge. Here f (c, t) stands for the frequency of c in the instances which
have sense t. The context information in Chinese f (c, tε) is then “transformed” into the
English version P(C)(eε  |tε) through the links in T.
Figure 9 shows an example of estimating P(eε  |tε) with respect to the factory sense
(i.e., sense 1). We first use sentences such as P1 in Figure 3 to estimate P(E)(eε  |tε) with
MLE as described above. We next use sentences such as G1 to estimate P(C)(eε  |tε) as
described above. Specifically, with the frequency data f (c, tε) and EM we can estimate
P(C)(eε  |tε). Finally, we linearly combine P(E)(eε  |tε) and P(C)(eε  |tε) to obtain P(eε  |tε).
</bodyText>
<subsectionHeader confidence="0.999873">
3.3 Comparison of BB and MB
</subsectionHeader>
<bodyText confidence="0.986296">
We note that monolingual bootstrapping is a special case of bilingual bootstrapping
(consider the situation in which α = 0 in formula (3)).
BB can always perform better than MB. The asymmetric relationship between the
ambiguous words in the two languages stands out as the key to the higher performance
</bodyText>
<equation confidence="0.992226125">
E
e∈E P(c  |e, t)P(e  |t)
M-step: P(c  |e,t) , f (c, t)P(e  |c, t)
E
c∈C f (c, t)P(e  |c, t)
P(e  |t) , &amp;∈C f (c, t)P(e  |c, t)
�
c∈C f (c, t)
</equation>
<figureCaption confidence="0.868336">
Figure 8
</figureCaption>
<figure confidence="0.6293586">
The EM algorithm.
P(c  |e, t)P(e  |t)
E-step: P(e  |c, t) ,
11
Computational Linguistics Volume 30, Number 1
</figure>
<figureCaption confidence="0.70444">
Figure 9
Parameter estimation.
Figure 10
</figureCaption>
<subsectionHeader confidence="0.500809">
Example application of BB.
</subsectionHeader>
<bodyText confidence="0.99956505">
of BB. By asymmetric relationship we mean the many-to-many mapping relationship
between the words in the two languages, as shown in Figure 10.
Suppose that the classifier with respect to plant has two classes (denoted as A
and B in Figure 10). Further suppose that the classifiers with respect to gongchang and
zhiwu in Chinese each have two classes (C and D) and (E and F), respectively. A and
D are equivalent to one another (i.e., they represent the same sense), and so are B and
E.
Assume that instances are classified after several iterations of BB as depicted in
Figure 10. Here, circles denote the instances that are correctly classified and crosses
denote the instances that are incorrectly classified.
Since A and D are equivalent to one another, we can transform the instances with D
and use them to boost the performance of classification to A, because the misclassified
instances (crosses) with D are those mistakenly classified from C, and they will not
have much negative effect on classification to A, even though the translation from
Chinese into English can introduce some noise. Similar explanations can be given for
other classification decisions.
In contrast, MB uses only the instances in A and B to construct a classifier. When
the number of misclassified instances increases (as is inevitable in bootstrapping), its
performance will stop improving. This phenomenon has also been observed when MB
is applied to other tasks (cf. Banko and Brill 2001; Pierce and Cardie 2001).
</bodyText>
<page confidence="0.994626">
12
</page>
<note confidence="0.922471">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<subsectionHeader confidence="0.908484">
3.4 Relationship between BB and Co-training
</subsectionHeader>
<bodyText confidence="0.999976555555556">
We note that there are similarities between BB and co-training. Both BB and co-training
execute two bootstrapping processes in parallel and make the two processes collabo-
rate with one another in order to improve their performance. The two processes look at
different types of information in data and exchange the information in learning. How-
ever, there are also significant differences between BB and co-training. In co-training,
the two processes use different features, whereas in BB, the two processes use different
classes. In BB, although the features used by the two classifiers are transformed from
one language into the other, they belong to the same space. In co-training, on the other
hand, the features used by the two classifiers belong to two different spaces.
</bodyText>
<sectionHeader confidence="0.98461" genericHeader="method">
4. Experimental Results
</sectionHeader>
<bodyText confidence="0.999993333333333">
We have conducted two experiments on English-Chinese translation disambiguation.
In this section, we will first describe the experimental settings and then present the
results. We will also discuss the results of several follow-on experiments.
</bodyText>
<subsectionHeader confidence="0.982327">
4.1 Translation Disambiguation Using BB
</subsectionHeader>
<bodyText confidence="0.999843">
Although it is possible to straightforwardly apply the algorithm of BB described in
Section 3 to word translation disambiguation, here we use a variant of it better adapted
to the task and for fairer comparison with existing technologies. The variant of BB we
use has four modifications:
</bodyText>
<listItem confidence="0.936385421052632">
1. It actually employs naive Bayesian ensemble rather than naive Bayes,
because naive Bayesian ensemble generally performs better than naive
Bayes (Pedersen 2000).
2. It employs the one-sense-per-discourse heuristic. It turns out that in BB
with one sense per discourse, there are two layers of bootstrapping. On
the top level, bilingual bootstrapping is performed between the two
languages, and on the second level, co-training is performed within each
language. (Recall that MB with one sense per discourse can be viewed as
co-training.)
3. It uses only classified data in English at the beginning. That is to say, it
requires exactly the same human labeling efforts as MB does.
4. It individually resolves ambiguities on selected English words such as
plant and interest. (Note that the basic algorithm of BB performs
disambiguation on all the words in English and Chinese.) As a result, in
the case of plant, for example, the classifiers with respect to gongchang
and zhiwu make classification decisions only on D and E and not C and
F (in Figure 10), because it is not necessary to make classification
decisions on C and F. In particular, it calculates λ*(c) as λ*(c) = P(c I t)
and sets θ = 0 in the right-hand side of step 2.
</listItem>
<subsectionHeader confidence="0.980646">
4.2 Translation Disambiguation Using MB
</subsectionHeader>
<bodyText confidence="0.9654832">
We consider here two implementations of MB for word translation disambiguation.
In the first implementation, in addition to the basic algorithm of MB, we also use
(1) naive Bayesian ensemble, (2) one sense per discourse, and (3) a small amount of
classified data in English at the beginning. (We will denote this implementation as MB-
B hereafter.) The second implementation is different from the first one only in (1). That
</bodyText>
<page confidence="0.997664">
13
</page>
<table confidence="0.474039">
Computational Linguistics Volume 30, Number 1
</table>
<tableCaption confidence="0.981385">
Table 1
</tableCaption>
<table confidence="0.576875">
Data descriptions in Experiment 1.
English words Chinese words Senses Seed words
</table>
<bodyText confidence="0.924412642857143">
interest readiness to give attention show
line money paid for the use of money rate
a share in company or business hold
advantage, advancement or favor conflict
a thin flexible object cut
written or spoken text write
telephone connection telephone
formation of people or things wait
an artificial division between
product product
is, it employs a decision list as the classifier. This implementation is exactly the one
proposed in Yarowsky (1995). (We will denote it as MB-D hereafter.) MB-B and MB-D
can be viewed as the state-of-the-art methods for word translation disambiguation
using bootstrapping.
</bodyText>
<subsectionHeader confidence="0.998164">
4.3 Experiment 1: WSD Benchmark Data
</subsectionHeader>
<bodyText confidence="0.999842615384615">
We first applied BB, MB-B, and MB-D to translation disambiguation on the English
words line and interest using a benchmark data set.5 The data set consists mainly
of articles from the Wall Street Journal and is prepared for conducting word sense
disambiguation (WSD) on the two words (e.g., Pedersen 2000).
We collected from the HIT dictionary6 the Chinese words that can be translations
of the two English words; these are listed in Table 1. One sense of an English word
links to one group of Chinese words. (For the word interest, we used only its four
major senses, because the remaining two minor senses occur in only 3.3% of the data.)
For each sense, we selected an English word that is strongly associated with the
sense according to our own intuition (cf. Table 1). We refer to this word as a seed
word. For example, for the sense of money paid for the use of money, we selected the
word rate. We viewed the seed word as a classified “sentence,” following a similar
proposal in Yarowsky (1995). In this way, for each sense we had a classified instance
in English. As unclassified data in English, we collected sentences in news articles
from a Web site (www.news.com), and as unclassified data in Chinese, we collected
sentences in news articles from another Web site (news.cn.tom.com). Note that we
need to use only the sentences containing the words in Table 1. We observed that the
distribution of the senses in the unclassified data was balanced. As test data, we used
the entire benchmark data set.
Table 2 shows the sizes of the data sets. Note that there are in general more
unclassified sentences (and texts) in Chinese than in English, because one English
word usually can link to several Chinese words (cf. Figure 5).
As the translation dictionary, we used the HIT dictionary, which contains about
76,000 Chinese words, 60,000 English words, and 118,000 senses (links). We then used
the data to conduct translation disambiguation with BB, MB-B, and MB-D, as described
in Sections 4.1 and Section 4.2.
</bodyText>
<footnote confidence="0.968795">
5 http://www.d.umn.edu/∼tpederse/data.html.
6 This dictionary was created by Harbin Institute of Technology.
</footnote>
<page confidence="0.998557">
14
</page>
<note confidence="0.973495">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<tableCaption confidence="0.998244">
Table 2
</tableCaption>
<table confidence="0.5842882">
Data set sizes in Experiment 1.
Unclassified sentences (texts)
Words English Chinese Test sentences
interest 1,927 (1,072) 8,811 (2,704) 2,291
line 3,666 (1,570) 5,398 (2,894) 4,148
</table>
<bodyText confidence="0.997842277777778">
For both BB and MB-B, we used an ensemble of five naive Bayesian classifiers
with window sizes of ±1, ±3,±5,±7, and ±9 words, and we set the parameters 0, b,
and 0 to 0.2, 15, and 1.5, respectively. The parameters were tuned on the basis of our
preliminary experimental results on MB-B; they were not tuned, however, for BB. We
set the BB-specific parameter α to 0.4, which meant that we weighted information
from English and Chinese equally.
Table 3 shows the translation disambiguation accuracies of the three methods as
well as that of a baseline method in which we always choose the most frequent sense.
Figures 11 and 12 show the learning curves of MB-D, MB-B, and BB. Figure 13 shows
the accuracies of BB with different α values. From the results, we see that BB consistently
and significantly outperforms both MB-D and MB-B. The results from the sign test are
statistically significant (p-value &lt; 0.001). (For the sign test method, see, for example,
Yang and Liu [1999]).
Table 4 shows the results achieved by some existing supervised learning methods
with respect to the benchmark data (cf. Pedersen 2000). Although BB is a method nearly
equivalent to one based on unsupervised learning, it still performs favorably when
compared with the supervised methods (note that since the experimental settings are
different, the results cannot be directly compared).
</bodyText>
<subsectionHeader confidence="0.998075">
4.4 Experiment 2: Yarowsky’s Words
</subsectionHeader>
<bodyText confidence="0.9951985">
We also conducted translation on seven of the twelve English words studied in Yarowsky
(1995). Table 5 lists the words we used.
</bodyText>
<tableCaption confidence="0.7840035">
Table 3
Accuracies of disambiguation in Experiment 1.
</tableCaption>
<table confidence="0.999425666666667">
Words Major (%) MB-D (%) MB-B (%) BB (%)
interest 54.6 54.7 69.3 75.5
line 53.5 55.6 54.1 62.7
</table>
<tableCaption confidence="0.998812">
Table 4
</tableCaption>
<table confidence="0.963958571428571">
Accuracies of supervised methods.
interest (%) line (%)
Naive Bayesian ensemble 89 88
Naive Bayes 74 72
Decision tree 78 —
Neural network — 76
Nearest neighbor 87 —
</table>
<page confidence="0.911437">
15
</page>
<figure confidence="0.635439">
Computational Linguistics Volume 30, Number 1
Figure 11
Learning curves with interest.
Figure 12
Learning curves with line.
</figure>
<figureCaption confidence="0.890557">
Figure 13
</figureCaption>
<bodyText confidence="0.557998">
Accuracies of BB with different α values.
</bodyText>
<page confidence="0.99699">
16
</page>
<note confidence="0.979676">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<tableCaption confidence="0.99883">
Table 5
</tableCaption>
<table confidence="0.947734">
Data set descriptions in Experiment 2.
English words Chinese words Seed words
bass / fish / music
drug / treatment / smuggler
duty / discharge / export
palm / tree / hand
plant / industry / life
space / volume / outer
tank / combat / fuel
</table>
<tableCaption confidence="0.74849">
Table 6
Data set sizes in Experiment 2.
</tableCaption>
<table confidence="0.990538272727273">
Words Unclassified sentences (texts) Test
sentences
English Chinese
bass 142 (106) 8,811 (4,407) 200
drug 3,053 (1,048) 5,398 (3,143) 197
duty 1,428 (875) 4,338 (2,714) 197
palm 366 (267) 465 (382) 197
plant 7,542 (2,919) 24,977 (13,211) 197
space 3,897(1,494) 14,178 (8,779) 197
tank 417 (245) 1,400 (683) 199
Total 16,845 (6,954) 59,567 (33,319) 1,384
</table>
<bodyText confidence="0.998674333333333">
For each of the English words, we extracted about 200 sentences containing the
word from the Encarta7 English corpus and hand-labeled those sentences using our
own Chinese translations. We used the labeled sentences as test data and the unlabeled
sentences as unclassified data in English. Table 6 shows the data set sizes. We also
used the sentences in the Great Encyclopedia8 Chinese corpus as unclassified data in
Chinese. We defined, for each sense, a seed word in English as a classified instance in
English (cf. Table 5). We did not, however, conduct translation disambiguation on the
words crane, sake, poach, axes, and motion, because the first four words do not frequently
occur in the Encarta corpus, and the accuracy of choosing the major translation for
the last word already exceeds 98%.
We next applied BB, MB-B, and MB-D to word translation disambiguation. The
parameter settings were the same as those in Experiment 1. Table 7 shows the dis-
ambiguation accuracies, and Figures 14–20 show the learning curves for the seven
words.
From the results, we see again that BB significantly outperforms MB-D and MB-B.
Note that the results of MB-D here cannot be directly compared with those in Yarowsky
(1995), because the data used are different. Naive Bayesian ensemble did not perform
well on the word duty, causing the accuracies of both MB-B and BB to deteriorate.
</bodyText>
<footnote confidence="0.9633685">
7 http://encarta.msn.com/default.asp.
8 http://www.whlib.ac.cn/sjk/bkqs.htm.
</footnote>
<page confidence="0.994778">
17
</page>
<figure confidence="0.586154">
Computational Linguistics Volume 30, Number 1
Figure 14 Figure 15
Learning curves with bass. Learning curves with drug.
</figure>
<figureCaption confidence="0.5414774">
Figure 16 Figure 17
Learning curves with duty. Learning curves with palm.
Figure 18 Figure 19
Learning curves with plant. Learning curves with space.
Figure 20
</figureCaption>
<bodyText confidence="0.341709">
Learning curves with tank.
</bodyText>
<page confidence="0.997381">
18
</page>
<note confidence="0.980287">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<tableCaption confidence="0.998624">
Table 7
</tableCaption>
<table confidence="0.9555584">
Accuracies of disambiguation in Experiment 2.
Words Major (%) MB-D (%) MB-B (%) BB (%)
bass 61.0 57.0 89.0 92.0
drug 77.7 78.7 79.7 86.8
duty 86.3 86.8 72.0 75.1
palm 82.2 80.7 83.3 92.4
plant 71.6 89.3 95.4 95.9
space 64.5 83.3 84.3 87.8
tank 60.3 76.4 76.9 84.4
Total 71.9 78.8 82.9 87.8
</table>
<tableCaption confidence="0.999462">
Table 8
</tableCaption>
<figure confidence="0.91843775">
Top words for interest rate sense of interest.
MB-B BB
payment saving
cut payment
earn benchmark
short whose
short-term base
yield prefer
u.s. fixed
margin debt
benchmark annual
regard dividend
</figure>
<subsectionHeader confidence="0.964179">
4.5 Discussion
</subsectionHeader>
<bodyText confidence="0.999864">
We investigated the reason for BB’s outperforming MB and found that the explanation
in Section 3.3 appears to be valid according to the following observations.
</bodyText>
<listItem confidence="0.8115705">
1. In a naive Bayesian classifier, words with large values of likelihood ratio P(e|t)
P(e|¯t)
</listItem>
<bodyText confidence="0.902940333333333">
will have strong influences on classification. We collected the words having the largest
likelihood ratio with respect to each sense t in both BB and MB-B and found that BB
obviously has more “relevant words” than MB-B. Here words relevant to a particular
sense refer to the words that are strongly indicative of that sense according to human
judgments.
Table 8 shows the top 10 words in terms of likelihood ratio with respect to the
interest rate sense in both BB and MB-B. The relevant words are italicized. Figure 21
shows the numbers of relevant words with respect to the four senses of interest in BB
and MB-B.
2. From Figure 13, we see that the performance of BB remains high or gets higher
even when α becomes larger than 0.4 (recall that β was fixed at 0.2). This result strongly
indicates that the information from Chinese has positive effects.
3. One might argue that the higher performance of BB can be attributed to the
larger amount of unclassified data it uses, and thus if we increase the amount of
unclassified data for MB, it is likely that MB can perform as well as BB. We conducted
an additional experiment and found that this is not the case. Figure 22 shows the
accuracies achieved by MB-B as the amount of unclassified data increases. The plot
shows that the accuracy of MB-B does not improve when the amount of unclassified
</bodyText>
<page confidence="0.984952">
19
</page>
<figure confidence="0.891555666666667">
Computational Linguistics Volume 30, Number 1
Figure 21
Number of relevant words.
</figure>
<figureCaption confidence="0.942576">
Figure 22
</figureCaption>
<bodyText confidence="0.964630863636364">
When more unclassified data available.
data increases. Figure 22 plots again the results of BB as well as those of a method
referred to as MB-C. In MB-C, we linearly combined two MB-B classifiers constructed
with two different unclassified data sets, and we found that although the accuracies
are improved in MB-C, they are still much lower than those of BB.
4. We have noticed that a key to BB’s performance is the asymmetric relationship
between the classes in the two languages. Therefore, we tested the performance of
MB and BB when the classes in the two languages are symmetric (i.e., one-to-one
mapping).
We performed two experiments on text classification in which the categories were
finance and industry, and finance and trade, respectively. We collected Chinese texts
from the People’s Daily in 1998 that had already been assigned class labels. We used
half of them as unclassified training data in Chinese and the remaining as test data in
Chinese. We also collected English texts from the Wall Street Journal. We used them as
unlabeled training data in English. We used the class names (i.e., finance, industry, and
trade, as seed data (classified data)). Table 9 shows the accuracies of text classification.
From the results we see that when the classes are symmetric, BB cannot outperform
MB.
5. We also investigated the effect of the one-sense-per-discourse heuristic. Table 10
shows the performance of MB and BB on the word interest with and without the heuris-
tic. We see that with the heuristic, the performance of both MB and BB is improved.
Even without the heuristic, BB still performs better than MB with the heuristic.
</bodyText>
<page confidence="0.989577">
20
</page>
<note confidence="0.978844">
Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping
</note>
<tableCaption confidence="0.998215">
Table 9
</tableCaption>
<table confidence="0.986606444444444">
Accuracy of text classification.
Classes MB-B (%) BB (%)
Finance and industry 93.2 92.9
Finance and trade 78.4 78.6
Table 10
Accuracy of disambiguation.
MB-D (%) MB-B (%) BB (%)
With one sense per discourse 54.7 69.3 75.5
Without one sense per discourse 54.6 66.4 71.6
</table>
<sectionHeader confidence="0.779808" genericHeader="conclusions">
5. Conclusion
</sectionHeader>
<bodyText confidence="0.9997548">
We have addressed here the problem of classification across two languages. Specifically
we have considered the problem of bootstrapping. We find that when the task is word
translation disambiguation between two languages, we can use the asymmetric rela-
tionship between the ambiguous words in the two languages to significantly boost the
performance of bootstrapping. We refer to this approach as bilingual bootstrapping.
We have developed a method for implementing this bootstrapping approach that nat-
urally combines the use of naive Bayes and the EM algorithm. Future work includes a
theoretical analysis of bilingual bootstrapping (generalization error of BB, relationship
between BB and co-training, etc.) and extensions of bilingual bootstrapping to more
complicated machine translation tasks.
</bodyText>
<sectionHeader confidence="0.98747" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.980098666666667">
We thank Ming Zhou, Ashley Chang and
Yao Meng for their valuable comments and
suggestions on an early draft of this article.
We acknowledge the four anonymous
reviewers of this article for their valuable
comments and criticisms. We thank Michael
Holmes, Mark Petersen, Kevin Knight, and
Bob Moore for their checking of the English
of this article. A previous version of this
article appeared in Proceedings of the Fortieth
Annual Meeting of the Association for
Computational Linguistics.
</bodyText>
<sectionHeader confidence="0.988167" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998018694444445">
Banko, Michele, and Eric Brill. 2001. Scaling
to very very large corpora for natural
language disambiguation. In Proceedings of
the 39th Annual Meeting of the Association for
Computational Linguistics, pages 26–33,
Toulouse, France.
Blum, Avrim, and Tom M. Mitchell. 1998.
Combining labeled and unlabeled data
with co-training. In Proceedings of the 11th
Annual Conference on Computational
Learning Theory, pages 92–100, Madison,
WI.
Brown, Peter F., Stephen A. Della Pietra,
Vincent J. Della Pietra, and Robert L.
Mercer. 1991. Word sense disambiguation
using statistical methods. In Proceedings of
the 29th Annual Meeting of the Association for
Computational Linguistics, pages 264–270,
University of California, Berkeley.
Bruce, Rebecca, and Janyce Weibe. 1994.
Word-sense disambiguation using
decomposable models. In Proceedings of the
32nd Annual Meeting of the Association for
Computational Linguistics, pages 139–146,
New Mexico State University, Las Cruces.
Collins, Michael, and Yoram Singer. 1999.
Unsupervised models for named entity
classification. In Proceedings of the 1999
Joint SIGDAT Conference on Empirical
Methods in Natural Language Processing and
Very Large Corpora, University of
Maryland, College Park.
Dagan, Ido, and Alon Itai. 1994. Word sense
disambiguation using a second language
monolingual corpus. Computational
Linguistics, 20(4):563–596.
</reference>
<page confidence="0.993498">
21
</page>
<note confidence="0.448407">
Computational Linguistics Volume 30, Number 1
</note>
<reference confidence="0.999826936507937">
Dempster, A. P., N. M. Laird, and D. B.
Rubin. 1977. Maximum likelihood from
incomplete data via the EM algorithm.
Journal of the Royal Statistical Society B,
39:1–38.
Escudero, Gerard, Lluis Marquez, and
German Rigau. 2000. Boosting applied to
word sense disambiguation. In Proceedings
of the 12th European Conference on Machine
Learning, pages 129–141, Barcelona.
Gale, William, Kenneth Church, and David
Yarowsky. 1992a. A method for
disambiguating word senses in a large
corpus. Computers and Humanities,
26:415–439.
Gale, William, Kenneth Church, and David
Yarowsky. 1992b. One sense per discourse.
In Proceedings of DARPA Speech and Natural
Language Workshop, pages 233–237,
Harriman, NY.
Golding, Andrew R., and Dan Roth. 1999. A
Winnow-based approach to
context-sensitive spelling correction.
Machine Learning, 34:107–130.
Kikui, Genichiro. 1999. Resolving translation
ambiguity using non-parallel bilingual
corpora. In Proceedings of ACL ’99 Workshop
on Unsupervised Learning in Natural
Language Processing, University of
Maryland, College Park.
Koehn, Philipp, and Kevin Knight. 2000.
Estimating word translation probabilities
from unrelated monolingual corpora using
the EM algorithm. In Proceedings of the 17th
National Conference on Artificial Intelligence,
pages 711–715, Austin, TX.
Li, Hang, and Kenji Yamanishi. 2002. Text
classification using ESC-based stochastic
decision lists. Information Processing and
Management, 38:343–361.
Lin, Dekang. 1997. Using syntactic
dependency as local context to resolve
word sense ambiguity. In Proceedings of the
35th Annual Meeting of the Association for
Computational Linguistics, pages 64–71,
Universidad Nacional de Educaci ´on a
Distancia (UNED), Madrid.
Mangu, Lidia, and Eric Brill. 1997.
Automatic rule acquisition for spelling
correction. In Proceedings of the 14th
International Conference on Machine Learning,
pages 187–194, Nashville, TN.
Mihalcea, Rada, and Dan I. Moldovan. 1999.
A method for word sense disambiguation
of unrestricted text. In Proceedings of the
37th Annual Meeting of the Association for
Computational Linguistics, pages 152–158,
University of Maryland, College Park.
Ng, Hwee Tou, and Hian Beng Lee. 1996.
Integrating multiple knowledge sources to
disambiguate word sense: An
exemplar-based approach. In Proceedings of
the 34th Annual Meeting of the Association for
Computational Linguistics, pages 40–47,
University of California, Santa Cruz.
Nigam, Kamal, Andrew McCallum,
Sebastian Thrun, and Tom M. Mitchell.
2000. Text classification from labeled and
unlabeled documents using EM. Machine
Learning, 39(2–3):103–134.
Nigam, Kamal, and Rayid Ghani. 2000.
Analyzing the effectiveness and
applicability of co-training. In Proceedings
of the 9th International Conference on
Information and Knowledge Management,
pages 86–93, McLean, VA.
Pedersen, Ted. 2000. A simple approach to
building ensembles of naive Bayesian
classifiers for word sense disambiguation.
In Proceedings of the First Meeting of the
North American Chapter of the Association for
Computational Linguistics, Seattle.
Pedersen, Ted, and Rebecca Bruce. 1997.
Distinguishing word senses in untagged
text. In Proceedings of the Second Conference
on Empirical Methods in Natural Language
Processing, pages 197–207, Providence, RI.
Pierce, David, and Claire Cardie. 2001.
Limitations of co-training for natural
language learning from large datasets. In
Proceedings of the 2001 Conference on
Empirical Methods in Natural Language
Processing, Carnegie Mellon University,
Pittsburgh.
Schutze, Hinrich. 1998. Automatic word
sense discrimination. Computational
Linguistics, 24(1):97–124.
Towell, Geoffrey, and Ellen M. Voorhees.
1998. Disambiguating highly ambiguous
words. Computational Linguistics,
24(1):125–146.
Yang, Yiming, and Xin Liu. 1999. A
re-examination of text categorization
methods. In Proceedings of the 22nd Annual
International ACM SIGIR Conference on
Research and Development in Information
Retrieval, pages 42–49, Berkeley, CA.
Yarowsky, David. 1994. Decision lists for
lexical ambiguity resolution: Application
to accent restoration in Spanish and
French. In Proceedings of the 32nd Annual
Meeting of the Association for Computational
Linguistics, pages 88–95, New Mexico
State University, Las Cruces.
Yarowsky, David. 1995. Unsupervised word
sense disambiguation rivaling supervised
methods. In Proceedings of the 33rd Annual
Meeting of the Association for Computational
Linguistics, pages 189–196.
Zhou, Ming, Yuan Ding, and Changning
Huang. 2001. Improving translation
selection with a new translation model
trained by independent monolingual
corpora. International Journal of
Computational Linguistics and Chinese
Language Processing, 6(1):1–26.
</reference>
<page confidence="0.999027">
22
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.313920">
<title confidence="0.891338">Word Translation Disambiguation Using Bilingual Bootstrapping</title>
<author confidence="0.417095">Cong</author>
<affiliation confidence="0.882891">Microsoft Research Asia Microsoft Research Asia</affiliation>
<abstract confidence="0.995348222222222">This article proposes a new methodfor word translation disambiguation, one that uses a machinelearning technique called bilingual bootstrapping. In learning to disambiguate words to be translated, bilingual bootstrapping makes use of a small amount of classified data and a large amount of unclassified data in both the source and the target languages. It repeatedly constructs classifiers in the two languages in parallel and boosts the performance of the classifiers by classifying unclassified data in the two languages and by exchanging information regarding classified data between the two languages. Experimental results indicate that word translation disambiguation based on bilingual bootstrapping consistently and significantly outperforms existing methods that are based on monolingual bootstrapping.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Michele Banko</author>
<author>Eric Brill</author>
</authors>
<title>Scaling to very very large corpora for natural language disambiguation.</title>
<date>2001</date>
<booktitle>In Proceedings of the 39th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>26--33</pages>
<location>Toulouse, France.</location>
<contexts>
<context position="26710" citStr="Banko and Brill 2001" startWordPosition="4645" endWordPosition="4648">to A, because the misclassified instances (crosses) with D are those mistakenly classified from C, and they will not have much negative effect on classification to A, even though the translation from Chinese into English can introduce some noise. Similar explanations can be given for other classification decisions. In contrast, MB uses only the instances in A and B to construct a classifier. When the number of misclassified instances increases (as is inevitable in bootstrapping), its performance will stop improving. This phenomenon has also been observed when MB is applied to other tasks (cf. Banko and Brill 2001; Pierce and Cardie 2001). 12 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping 3.4 Relationship between BB and Co-training We note that there are similarities between BB and co-training. Both BB and co-training execute two bootstrapping processes in parallel and make the two processes collaborate with one another in order to improve their performance. The two processes look at different types of information in data and exchange the information in learning. However, there are also significant differences between BB and co-training. In co-training, the two processes use di</context>
</contexts>
<marker>Banko, Brill, 2001</marker>
<rawString>Banko, Michele, and Eric Brill. 2001. Scaling to very very large corpora for natural language disambiguation. In Proceedings of the 39th Annual Meeting of the Association for Computational Linguistics, pages 26–33, Toulouse, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Avrim Blum</author>
<author>Tom M Mitchell</author>
</authors>
<title>Combining labeled and unlabeled data with co-training.</title>
<date>1998</date>
<booktitle>In Proceedings of the 11th Annual Conference on Computational Learning Theory,</booktitle>
<pages>92--100</pages>
<location>Madison, WI.</location>
<contexts>
<context position="14319" citStr="Blum and Mitchell 1998" startWordPosition="2423" endWordPosition="2426">urther classify unclassified data, as proposed in Yarowsky (1995). This heuristic is based on the observation that when an ambiguous word appears in the same text several times, its tokens usually refer to the same sense. In the bootstrapping process, for each newly classified instance, we automatically assign its class label to those unclassified instances that also contain the same ambiguous word and co-occur with it in the same text. Hereafter, we will refer to this method as monolingual bootstrapping with one sense per discourse. This method can be viewed as a special case of co-training (Blum and Mitchell 1998). 2.5 Co-training Monolingual bootstrapping augmented with the one-sense-per-discourse heuristic can be viewed as a special case of co-training, as proposed by Blum and Mitchell (1998) (see also Collins and Singer 1999; Nigam et al. 2000; and Nigam and Ghani 2000). Cotraining conducts two bootstrapping processes in parallel and makes them collaborate with each other. More specifically, co-training begins with a small number of classified data and a large number of unclassified data. It trains two classifiers from the classified data, uses each of the two classifiers to classify some unclassifi</context>
</contexts>
<marker>Blum, Mitchell, 1998</marker>
<rawString>Blum, Avrim, and Tom M. Mitchell. 1998. Combining labeled and unlabeled data with co-training. In Proceedings of the 11th Annual Conference on Computational Learning Theory, pages 92–100, Madison, WI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>Stephen A Della Pietra</author>
<author>Vincent J Della Pietra</author>
<author>Robert L Mercer</author>
</authors>
<title>Word sense disambiguation using statistical methods.</title>
<date>1991</date>
<booktitle>In Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>264--270</pages>
<institution>University of California, Berkeley.</institution>
<contexts>
<context position="6463" citStr="Brown et al. (1991)" startWordPosition="981" endWordPosition="984"> Lee 1996), transformation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε </context>
</contexts>
<marker>Brown, Pietra, Pietra, Mercer, 1991</marker>
<rawString>Brown, Peter F., Stephen A. Della Pietra, Vincent J. Della Pietra, and Robert L. Mercer. 1991. Word sense disambiguation using statistical methods. In Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics, pages 264–270, University of California, Berkeley.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rebecca Bruce</author>
<author>Janyce Weibe</author>
</authors>
<title>Word-sense disambiguation using decomposable models.</title>
<date>1994</date>
<booktitle>In Proceedings of the 32nd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>139--146</pages>
<institution>Mexico State University, Las Cruces.</institution>
<location>New</location>
<contexts>
<context position="6487" citStr="Bruce and Weibe (1994)" startWordPosition="985" endWordPosition="988">ation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses</context>
</contexts>
<marker>Bruce, Weibe, 1994</marker>
<rawString>Bruce, Rebecca, and Janyce Weibe. 1994. Word-sense disambiguation using decomposable models. In Proceedings of the 32nd Annual Meeting of the Association for Computational Linguistics, pages 139–146, New Mexico State University, Las Cruces.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
<author>Yoram Singer</author>
</authors>
<title>Unsupervised models for named entity classification.</title>
<date>1999</date>
<booktitle>In Proceedings of the 1999 Joint SIGDAT Conference on Empirical Methods in Natural Language Processing and Very</booktitle>
<institution>Large Corpora, University of Maryland, College Park.</institution>
<contexts>
<context position="14537" citStr="Collins and Singer 1999" startWordPosition="2454" endWordPosition="2457">se. In the bootstrapping process, for each newly classified instance, we automatically assign its class label to those unclassified instances that also contain the same ambiguous word and co-occur with it in the same text. Hereafter, we will refer to this method as monolingual bootstrapping with one sense per discourse. This method can be viewed as a special case of co-training (Blum and Mitchell 1998). 2.5 Co-training Monolingual bootstrapping augmented with the one-sense-per-discourse heuristic can be viewed as a special case of co-training, as proposed by Blum and Mitchell (1998) (see also Collins and Singer 1999; Nigam et al. 2000; and Nigam and Ghani 2000). Cotraining conducts two bootstrapping processes in parallel and makes them collaborate with each other. More specifically, co-training begins with a small number of classified data and a large number of unclassified data. It trains two classifiers from the classified data, uses each of the two classifiers to classify some unclassified data, makes the two classifiers exchange their classified data, and repeats the process. 3. Bilingual Bootstrapping 3.1 Basic Algorithm Bilingual bootstrapping makes use of a small amount of classified data and a la</context>
</contexts>
<marker>Collins, Singer, 1999</marker>
<rawString>Collins, Michael, and Yoram Singer. 1999. Unsupervised models for named entity classification. In Proceedings of the 1999 Joint SIGDAT Conference on Empirical Methods in Natural Language Processing and Very Large Corpora, University of Maryland, College Park.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ido Dagan</author>
<author>Alon Itai</author>
</authors>
<title>Word sense disambiguation using a second language monolingual corpus.</title>
<date>1994</date>
<journal>Computational Linguistics,</journal>
<volume>20</volume>
<issue>4</issue>
<contexts>
<context position="6510" citStr="Dagan and Itai (1994)" startWordPosition="989" endWordPosition="992">ngu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses of ε, and let tε denot</context>
</contexts>
<marker>Dagan, Itai, 1994</marker>
<rawString>Dagan, Ido, and Alon Itai. 1994. Word sense disambiguation using a second language monolingual corpus. Computational Linguistics, 20(4):563–596.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A P Dempster</author>
<author>N M Laird</author>
<author>D B Rubin</author>
</authors>
<title>Maximum likelihood from incomplete data via the EM algorithm.</title>
<date>1977</date>
<journal>Journal of the Royal Statistical Society B,</journal>
<pages>39--1</pages>
<marker>Dempster, Laird, Rubin, 1977</marker>
<rawString>Dempster, A. P., N. M. Laird, and D. B. Rubin. 1977. Maximum likelihood from incomplete data via the EM algorithm. Journal of the Royal Statistical Society B, 39:1–38.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gerard Escudero</author>
<author>Lluis Marquez</author>
<author>German Rigau</author>
</authors>
<title>Boosting applied to word sense disambiguation.</title>
<date>2000</date>
<booktitle>In Proceedings of the 12th European Conference on Machine Learning,</booktitle>
<pages>129--141</pages>
<location>Barcelona.</location>
<marker>Escudero, Marquez, Rigau, 2000</marker>
<rawString>Escudero, Gerard, Lluis Marquez, and German Rigau. 2000. Boosting applied to word sense disambiguation. In Proceedings of the 12th European Conference on Machine Learning, pages 129–141, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Gale</author>
<author>Kenneth Church</author>
<author>David Yarowsky</author>
</authors>
<title>A method for disambiguating word senses in a large corpus. Computers and Humanities,</title>
<date>1992</date>
<pages>26--415</pages>
<marker>Gale, Church, Yarowsky, 1992</marker>
<rawString>Gale, William, Kenneth Church, and David Yarowsky. 1992a. A method for disambiguating word senses in a large corpus. Computers and Humanities, 26:415–439.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Gale</author>
<author>Kenneth Church</author>
<author>David Yarowsky</author>
</authors>
<title>One sense per discourse.</title>
<date>1992</date>
<booktitle>In Proceedings of DARPA Speech and Natural Language Workshop,</booktitle>
<pages>233--237</pages>
<location>Harriman, NY.</location>
<marker>Gale, Church, Yarowsky, 1992</marker>
<rawString>Gale, William, Kenneth Church, and David Yarowsky. 1992b. One sense per discourse. In Proceedings of DARPA Speech and Natural Language Workshop, pages 233–237, Harriman, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew R Golding</author>
<author>Dan Roth</author>
</authors>
<title>A Winnow-based approach to context-sensitive spelling correction.</title>
<date>1999</date>
<booktitle>Machine Learning,</booktitle>
<pages>34--107</pages>
<contexts>
<context position="5984" citStr="Golding and Roth 1999" startWordPosition="908" endWordPosition="911">ample, with such a learning method, an English sentence containing an ambiguous English word corresponds to an instance, and the Chinese translation of the word in the context (i.e., the word sense) corresponds to a classification decision (a label). Many methods for word sense disambiguation based on supervised learning technique have been proposed. They include those using naive Bayes (Gale, Church, and Yarowsky 1992a), decision lists (Yarowsky 1994), nearest neighbor (Ng and Lee 1996), transformation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mih</context>
</contexts>
<marker>Golding, Roth, 1999</marker>
<rawString>Golding, Andrew R., and Dan Roth. 1999. A Winnow-based approach to context-sensitive spelling correction. Machine Learning, 34:107–130.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Genichiro Kikui</author>
</authors>
<title>Resolving translation ambiguity using non-parallel bilingual corpora.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL ’99 Workshop on Unsupervised Learning in Natural Language Processing,</booktitle>
<institution>University of Maryland, College Park.</institution>
<contexts>
<context position="6579" citStr="Kikui (1999)" startWordPosition="1002" endWordPosition="1003">ng and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses of ε, and let tε denote a sense in Tε. Let eε stand for an instance representing a context </context>
</contexts>
<marker>Kikui, 1999</marker>
<rawString>Kikui, Genichiro. 1999. Resolving translation ambiguity using non-parallel bilingual corpora. In Proceedings of ACL ’99 Workshop on Unsupervised Learning in Natural Language Processing, University of Maryland, College Park.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
<author>Kevin Knight</author>
</authors>
<title>Estimating word translation probabilities from unrelated monolingual corpora using the EM algorithm.</title>
<date>2000</date>
<booktitle>In Proceedings of the 17th National Conference on Artificial Intelligence,</booktitle>
<pages>711--715</pages>
<location>Austin, TX.</location>
<contexts>
<context position="6634" citStr="Koehn and Knight (2000)" startWordPosition="1008" endWordPosition="1011">ez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses of ε, and let tε denote a sense in Tε. Let eε stand for an instance representing a context of ε, that is, a sequence of context words surrounding </context>
</contexts>
<marker>Koehn, Knight, 2000</marker>
<rawString>Koehn, Philipp, and Kevin Knight. 2000. Estimating word translation probabilities from unrelated monolingual corpora using the EM algorithm. In Proceedings of the 17th National Conference on Artificial Intelligence, pages 711–715, Austin, TX.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hang Li</author>
<author>Kenji Yamanishi</author>
</authors>
<title>Text classification using ESC-based stochastic decision lists.</title>
<date>2002</date>
<booktitle>Information Processing and Management,</booktitle>
<pages>38--343</pages>
<contexts>
<context position="9283" citStr="Li and Yamanishi 2002" startWordPosition="1494" endWordPosition="1497">cores of the rules are larger than the default max P(tε) tε∈Tε P(¯tε) The sorted rules form an if-then-else type of rule sequence, that is, a decision list.3 For a new instance eε, we use the decision list to determine its sense. The rule in the list whose feature is first satisfied in the context of eε is applied in sense disambiguation. 2 In this article we always employ binary classifiers even there are multiple classes. 3 We note that there are two types of decision lists. One is defined as here; the other is defined as a conditional distribution over a partition of the feature space (cf. Li and Yamanishi 2002). 3 Computational Linguistics Volume 30, Number 1 P1 ... Nissan car and truck plant... (1) P2 ... computer manufacturing plant and adjacent... (1) P3 ... automated manufacturing plant in Fremont... (1) P4 ... divide life into plant and animal kingdom... (2) P5 ... thousands of plant and animal species... (2) P6 ... zonal distribution of plant life... (2) . . . . . . Figure 1 Examples of classified data (ε = plant). 2.3 Naive Bayesian Ensemble Let us next consider the use of naive Bayesian classifiers. Given an instance eE, we can calculate A*(eE) = max tε∈Tε P(tE |eE) P(¯tE |eE) = max tε∈Tε P(</context>
</contexts>
<marker>Li, Yamanishi, 2002</marker>
<rawString>Li, Hang, and Kenji Yamanishi. 2002. Text classification using ESC-based stochastic decision lists. Information Processing and Management, 38:343–361.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>Using syntactic dependency as local context to resolve word sense ambiguity.</title>
<date>1997</date>
<booktitle>In Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>64--71</pages>
<location>Madrid.</location>
<contexts>
<context position="6522" citStr="Lin (1997)" startWordPosition="993" endWordPosition="994">ural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses of ε, and let tε denote a sense in</context>
</contexts>
<marker>Lin, 1997</marker>
<rawString>Lin, Dekang. 1997. Using syntactic dependency as local context to resolve word sense ambiguity. In Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics, pages 64–71, Universidad Nacional de Educaci ´on a Distancia (UNED), Madrid.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lidia Mangu</author>
<author>Eric Brill</author>
</authors>
<title>Automatic rule acquisition for spelling correction.</title>
<date>1997</date>
<booktitle>In Proceedings of the 14th International Conference on Machine Learning,</booktitle>
<pages>187--194</pages>
<location>Nashville, TN.</location>
<contexts>
<context position="5908" citStr="Mangu and Brill 1997" startWordPosition="897" endWordPosition="900">d can be addressed by employing various supervised learning methods. For example, with such a learning method, an English sentence containing an ambiguous English word corresponds to an instance, and the Chinese translation of the word in the context (i.e., the word sense) corresponds to a classification decision (a label). Many methods for word sense disambiguation based on supervised learning technique have been proposed. They include those using naive Bayes (Gale, Church, and Yarowsky 1992a), decision lists (Yarowsky 1994), nearest neighbor (Ng and Lee 1996), transformation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (199</context>
</contexts>
<marker>Mangu, Brill, 1997</marker>
<rawString>Mangu, Lidia, and Eric Brill. 1997. Automatic rule acquisition for spelling correction. In Proceedings of the 14th International Conference on Machine Learning, pages 187–194, Nashville, TN.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rada Mihalcea</author>
<author>Dan I Moldovan</author>
</authors>
<title>A method for word sense disambiguation of unrestricted text.</title>
<date>1999</date>
<booktitle>In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>152--158</pages>
<institution>University of Maryland, College Park.</institution>
<contexts>
<context position="6609" citStr="Mihalcea and Moldovan (1999)" startWordPosition="1004" endWordPosition="1007">99), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses of ε, and let tε denote a sense in Tε. Let eε stand for an instance representing a context of ε, that is, a sequence of c</context>
</contexts>
<marker>Mihalcea, Moldovan, 1999</marker>
<rawString>Mihalcea, Rada, and Dan I. Moldovan. 1999. A method for word sense disambiguation of unrestricted text. In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics, pages 152–158, University of Maryland, College Park.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hwee Tou Ng</author>
<author>Hian Beng Lee</author>
</authors>
<title>Integrating multiple knowledge sources to disambiguate word sense: An exemplar-based approach.</title>
<date>1996</date>
<booktitle>In Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>40--47</pages>
<institution>University of California, Santa Cruz.</institution>
<contexts>
<context position="5854" citStr="Ng and Lee 1996" startWordPosition="891" endWordPosition="894">) can be viewed as a problem of classification and can be addressed by employing various supervised learning methods. For example, with such a learning method, an English sentence containing an ambiguous English word corresponds to an instance, and the Chinese translation of the word in the context (i.e., the word sense) corresponds to a classification decision (a label). Many methods for word sense disambiguation based on supervised learning technique have been proposed. They include those using naive Bayes (Gale, Church, and Yarowsky 1992a), decision lists (Yarowsky 1994), nearest neighbor (Ng and Lee 1996), transformation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et a</context>
</contexts>
<marker>Ng, Lee, 1996</marker>
<rawString>Ng, Hwee Tou, and Hian Beng Lee. 1996. Integrating multiple knowledge sources to disambiguate word sense: An exemplar-based approach. In Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics, pages 40–47, University of California, Santa Cruz.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kamal Nigam</author>
<author>Andrew McCallum</author>
<author>Sebastian Thrun</author>
<author>Tom M Mitchell</author>
</authors>
<title>Text classification from labeled and unlabeled documents using EM.</title>
<date>2000</date>
<booktitle>Machine Learning,</booktitle>
<pages>39--2</pages>
<contexts>
<context position="14556" citStr="Nigam et al. 2000" startWordPosition="2458" endWordPosition="2461">process, for each newly classified instance, we automatically assign its class label to those unclassified instances that also contain the same ambiguous word and co-occur with it in the same text. Hereafter, we will refer to this method as monolingual bootstrapping with one sense per discourse. This method can be viewed as a special case of co-training (Blum and Mitchell 1998). 2.5 Co-training Monolingual bootstrapping augmented with the one-sense-per-discourse heuristic can be viewed as a special case of co-training, as proposed by Blum and Mitchell (1998) (see also Collins and Singer 1999; Nigam et al. 2000; and Nigam and Ghani 2000). Cotraining conducts two bootstrapping processes in parallel and makes them collaborate with each other. More specifically, co-training begins with a small number of classified data and a large number of unclassified data. It trains two classifiers from the classified data, uses each of the two classifiers to classify some unclassified data, makes the two classifiers exchange their classified data, and repeats the process. 3. Bilingual Bootstrapping 3.1 Basic Algorithm Bilingual bootstrapping makes use of a small amount of classified data and a large amount of uncla</context>
</contexts>
<marker>Nigam, McCallum, Thrun, Mitchell, 2000</marker>
<rawString>Nigam, Kamal, Andrew McCallum, Sebastian Thrun, and Tom M. Mitchell. 2000. Text classification from labeled and unlabeled documents using EM. Machine Learning, 39(2–3):103–134.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kamal Nigam</author>
<author>Rayid Ghani</author>
</authors>
<title>Analyzing the effectiveness and applicability of co-training.</title>
<date>2000</date>
<booktitle>In Proceedings of the 9th International Conference on Information and Knowledge Management,</booktitle>
<pages>86--93</pages>
<location>McLean, VA.</location>
<contexts>
<context position="14583" citStr="Nigam and Ghani 2000" startWordPosition="2463" endWordPosition="2466"> classified instance, we automatically assign its class label to those unclassified instances that also contain the same ambiguous word and co-occur with it in the same text. Hereafter, we will refer to this method as monolingual bootstrapping with one sense per discourse. This method can be viewed as a special case of co-training (Blum and Mitchell 1998). 2.5 Co-training Monolingual bootstrapping augmented with the one-sense-per-discourse heuristic can be viewed as a special case of co-training, as proposed by Blum and Mitchell (1998) (see also Collins and Singer 1999; Nigam et al. 2000; and Nigam and Ghani 2000). Cotraining conducts two bootstrapping processes in parallel and makes them collaborate with each other. More specifically, co-training begins with a small number of classified data and a large number of unclassified data. It trains two classifiers from the classified data, uses each of the two classifiers to classify some unclassified data, makes the two classifiers exchange their classified data, and repeats the process. 3. Bilingual Bootstrapping 3.1 Basic Algorithm Bilingual bootstrapping makes use of a small amount of classified data and a large amount of unclassified data in both the so</context>
</contexts>
<marker>Nigam, Ghani, 2000</marker>
<rawString>Nigam, Kamal, and Rayid Ghani. 2000. Analyzing the effectiveness and applicability of co-training. In Proceedings of the 9th International Conference on Information and Knowledge Management, pages 86–93, McLean, VA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Pedersen</author>
</authors>
<title>A simple approach to building ensembles of naive Bayesian classifiers for word sense disambiguation.</title>
<date>2000</date>
<booktitle>In Proceedings of the First Meeting of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<location>Seattle.</location>
<contexts>
<context position="6075" citStr="Pedersen 2000" startWordPosition="922" endWordPosition="923">ponds to an instance, and the Chinese translation of the word in the context (i.e., the word sense) corresponds to a classification decision (a label). Many methods for word sense disambiguation based on supervised learning technique have been proposed. They include those using naive Bayes (Gale, Church, and Yarowsky 1992a), decision lists (Yarowsky 1994), nearest neighbor (Ng and Lee 1996), transformation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let u</context>
<context position="10489" citStr="Pedersen (2000)" startWordPosition="1708" endWordPosition="1709"> tε∈Tε P(tE)P(eE |tE) (1) ¯tE) P(¯tE)P(eE | according to Bayes’ rule and select the sense P(tE)P(eE |tE) (2) tE) L t*(eE) = arg max tε∈Tε P(¯tE)P(eE | In a naive Bayesian classifier, we assume that the words in eE with a fixed tE are independently generated from P(eE |tE) and calculate m P(eE |tE) = P(eE,i |tE) i=1 Here P(eE |tE) represents the conditional probability of e in the context of E given tE. We calculate P(eE |¯tE) similarly. We can then calculate (1) and (2) with the obtained P(eE |tE) and P(eE |¯tE). The naive Bayesian ensemble method for word sense disambiguation, as proposed in Pedersen (2000), employs a linear combination of several naive Bayesian classifiers constructed on the basis of a number of nested surrounding contexts4 h P(tE |ee,i) 1 P(tE |eE) = h i=1 e�E,1 c ··· c e�E,i ··· c eE,h = eE (i = 1, . . . , h) The naive Bayesian ensemble is reported to perform the best for word sense disambiguation with respect to a benchmark data set (Pedersen 2000). 2.4 Monolingual Bootstrapping Since data preparation for supervised learning is expensive, it is desirable to develop bootstrapping methods. Yarowsky (1995) proposed such a method for word sense disambiguation, which we refer to </context>
<context position="28388" citStr="Pedersen 2000" startWordPosition="4902" endWordPosition="4903"> the experimental settings and then present the results. We will also discuss the results of several follow-on experiments. 4.1 Translation Disambiguation Using BB Although it is possible to straightforwardly apply the algorithm of BB described in Section 3 to word translation disambiguation, here we use a variant of it better adapted to the task and for fairer comparison with existing technologies. The variant of BB we use has four modifications: 1. It actually employs naive Bayesian ensemble rather than naive Bayes, because naive Bayesian ensemble generally performs better than naive Bayes (Pedersen 2000). 2. It employs the one-sense-per-discourse heuristic. It turns out that in BB with one sense per discourse, there are two layers of bootstrapping. On the top level, bilingual bootstrapping is performed between the two languages, and on the second level, co-training is performed within each language. (Recall that MB with one sense per discourse can be viewed as co-training.) 3. It uses only classified data in English at the beginning. That is to say, it requires exactly the same human labeling efforts as MB does. 4. It individually resolves ambiguities on selected English words such as plant a</context>
<context position="31006" citStr="Pedersen 2000" startWordPosition="5334" endWordPosition="5335">, it employs a decision list as the classifier. This implementation is exactly the one proposed in Yarowsky (1995). (We will denote it as MB-D hereafter.) MB-B and MB-D can be viewed as the state-of-the-art methods for word translation disambiguation using bootstrapping. 4.3 Experiment 1: WSD Benchmark Data We first applied BB, MB-B, and MB-D to translation disambiguation on the English words line and interest using a benchmark data set.5 The data set consists mainly of articles from the Wall Street Journal and is prepared for conducting word sense disambiguation (WSD) on the two words (e.g., Pedersen 2000). We collected from the HIT dictionary6 the Chinese words that can be translations of the two English words; these are listed in Table 1. One sense of an English word links to one group of Chinese words. (For the word interest, we used only its four major senses, because the remaining two minor senses occur in only 3.3% of the data.) For each sense, we selected an English word that is strongly associated with the sense according to our own intuition (cf. Table 1). We refer to this word as a seed word. For example, for the sense of money paid for the use of money, we selected the word rate. We </context>
<context position="34207" citStr="Pedersen 2000" startWordPosition="5869" endWordPosition="5870">of the three methods as well as that of a baseline method in which we always choose the most frequent sense. Figures 11 and 12 show the learning curves of MB-D, MB-B, and BB. Figure 13 shows the accuracies of BB with different α values. From the results, we see that BB consistently and significantly outperforms both MB-D and MB-B. The results from the sign test are statistically significant (p-value &lt; 0.001). (For the sign test method, see, for example, Yang and Liu [1999]). Table 4 shows the results achieved by some existing supervised learning methods with respect to the benchmark data (cf. Pedersen 2000). Although BB is a method nearly equivalent to one based on unsupervised learning, it still performs favorably when compared with the supervised methods (note that since the experimental settings are different, the results cannot be directly compared). 4.4 Experiment 2: Yarowsky’s Words We also conducted translation on seven of the twelve English words studied in Yarowsky (1995). Table 5 lists the words we used. Table 3 Accuracies of disambiguation in Experiment 1. Words Major (%) MB-D (%) MB-B (%) BB (%) interest 54.6 54.7 69.3 75.5 line 53.5 55.6 54.1 62.7 Table 4 Accuracies of supervised me</context>
</contexts>
<marker>Pedersen, 2000</marker>
<rawString>Pedersen, Ted. 2000. A simple approach to building ensembles of naive Bayesian classifiers for word sense disambiguation. In Proceedings of the First Meeting of the North American Chapter of the Association for Computational Linguistics, Seattle.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Pedersen</author>
<author>Rebecca Bruce</author>
</authors>
<title>Distinguishing word senses in untagged text.</title>
<date>1997</date>
<booktitle>In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>197--207</pages>
<location>Providence, RI.</location>
<contexts>
<context position="6549" citStr="Pedersen and Bruce (1997)" startWordPosition="995" endWordPosition="999">s (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses of ε, and let tε denote a sense in Tε. Let eε stand for an in</context>
</contexts>
<marker>Pedersen, Bruce, 1997</marker>
<rawString>Pedersen, Ted, and Rebecca Bruce. 1997. Distinguishing word senses in untagged text. In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing, pages 197–207, Providence, RI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Pierce</author>
<author>Claire Cardie</author>
</authors>
<title>Limitations of co-training for natural language learning from large datasets.</title>
<date>2001</date>
<booktitle>In Proceedings of the 2001 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<institution>Carnegie Mellon University,</institution>
<location>Pittsburgh.</location>
<contexts>
<context position="26735" citStr="Pierce and Cardie 2001" startWordPosition="4649" endWordPosition="4652">lassified instances (crosses) with D are those mistakenly classified from C, and they will not have much negative effect on classification to A, even though the translation from Chinese into English can introduce some noise. Similar explanations can be given for other classification decisions. In contrast, MB uses only the instances in A and B to construct a classifier. When the number of misclassified instances increases (as is inevitable in bootstrapping), its performance will stop improving. This phenomenon has also been observed when MB is applied to other tasks (cf. Banko and Brill 2001; Pierce and Cardie 2001). 12 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping 3.4 Relationship between BB and Co-training We note that there are similarities between BB and co-training. Both BB and co-training execute two bootstrapping processes in parallel and make the two processes collaborate with one another in order to improve their performance. The two processes look at different types of information in data and exchange the information in learning. However, there are also significant differences between BB and co-training. In co-training, the two processes use different features, whereas</context>
</contexts>
<marker>Pierce, Cardie, 2001</marker>
<rawString>Pierce, David, and Claire Cardie. 2001. Limitations of co-training for natural language learning from large datasets. In Proceedings of the 2001 Conference on Empirical Methods in Natural Language Processing, Carnegie Mellon University, Pittsburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hinrich Schutze</author>
</authors>
<title>Automatic word sense discrimination.</title>
<date>1998</date>
<journal>Computational Linguistics,</journal>
<volume>24</volume>
<issue>1</issue>
<contexts>
<context position="6565" citStr="Schutze (1998)" startWordPosition="1000" endWordPosition="1001">), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), Schutze (1998), Kikui (1999), Mihalcea and Moldovan (1999), Koehn and Knight (2000), and Zhou, Ding, and Huang (2001). Let us formulate the problem of word sense (translation) disambiguation as follows. Let E denote a set of words. Let ε denote an ambiguous word in E, and let e 2 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping denote a context word in E. (Throughout this article, we use Greek letters to represent ambiguous words and italic letters to represent context words.) Let Tε denote the set of senses of ε, and let tε denote a sense in Tε. Let eε stand for an instance represent</context>
</contexts>
<marker>Schutze, 1998</marker>
<rawString>Schutze, Hinrich. 1998. Automatic word sense discrimination. Computational Linguistics, 24(1):97–124.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Geoffrey Towell</author>
<author>Ellen M Voorhees</author>
</authors>
<title>Disambiguating highly ambiguous words.</title>
<date>1998</date>
<journal>Computational Linguistics,</journal>
<volume>24</volume>
<issue>1</issue>
<contexts>
<context position="5952" citStr="Towell and Voorhees 1998" startWordPosition="903" endWordPosition="906">supervised learning methods. For example, with such a learning method, an English sentence containing an ambiguous English word corresponds to an instance, and the Chinese translation of the word in the context (i.e., the word sense) corresponds to a classification decision (a label). Many methods for word sense disambiguation based on supervised learning technique have been proposed. They include those using naive Bayes (Gale, Church, and Yarowsky 1992a), decision lists (Yarowsky 1994), nearest neighbor (Ng and Lee 1996), transformation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on translation disambiguation, see Brown et al. (1991), Bruce and Weibe (1994), Dagan and Itai (1994), Lin (1997), Pedersen and Bruce (1997), S</context>
</contexts>
<marker>Towell, Voorhees, 1998</marker>
<rawString>Towell, Geoffrey, and Ellen M. Voorhees. 1998. Disambiguating highly ambiguous words. Computational Linguistics, 24(1):125–146.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yiming Yang</author>
<author>Xin Liu</author>
</authors>
<title>A re-examination of text categorization methods.</title>
<date>1999</date>
<booktitle>In Proceedings of the 22nd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval,</booktitle>
<pages>42--49</pages>
<location>Berkeley, CA.</location>
<marker>Yang, Liu, 1999</marker>
<rawString>Yang, Yiming, and Xin Liu. 1999. A re-examination of text categorization methods. In Proceedings of the 22nd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 42–49, Berkeley, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Yarowsky</author>
</authors>
<title>Decision lists for lexical ambiguity resolution: Application to accent restoration in Spanish and French.</title>
<date>1994</date>
<booktitle>In Proceedings of the 32nd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>88--95</pages>
<institution>Mexico State University, Las Cruces.</institution>
<location>New</location>
<contexts>
<context position="5818" citStr="Yarowsky 1994" startWordPosition="887" endWordPosition="888">general, word sense disambiguation) can be viewed as a problem of classification and can be addressed by employing various supervised learning methods. For example, with such a learning method, an English sentence containing an ambiguous English word corresponds to an instance, and the Chinese translation of the word in the context (i.e., the word sense) corresponds to a classification decision (a label). Many methods for word sense disambiguation based on supervised learning technique have been proposed. They include those using naive Bayes (Gale, Church, and Yarowsky 1992a), decision lists (Yarowsky 1994), nearest neighbor (Ng and Lee 1996), transformation-based learning (Mangu and Brill 1997), neural networks (Towell and Voorhees 1998), Winnow (Golding and Roth 1999), boosting (Escudero, Marquez, and Rigau 2000), and naive Bayesian ensemble (Pedersen 2000). The assumption behind these methods is that it is nearly always possible to determine the sense of an ambiguous word by referring to its context, and thus all of the methods build a classifier (i.e., a classification program) using features representing context information (e.g., surrounding context words). For other related work on transl</context>
<context position="8109" citStr="Yarowsky (1994)" startWordPosition="1281" endWordPosition="1282">djacent...” we obtain eε = (... computer, manufacturing, (plant), and, adjacent, ... ). For a specific ε, we define a binary classifier for resolving each of its ambiguities in Tε in a general form as2 P(tε |eε), tε ∈ Tε and P(¯tε |eε), ¯tε = Tε − {tε} where eε denotes an instance representing a context of ε. All of the supervised learning methods mentioned previously can automatically create such a classifier. To construct classifiers using supervised methods, we need classified data such as those in Figure 1. 2.2 Decision Lists Let us first consider the use of decision lists, as proposed in Yarowsky (1994). Let fε denote a feature of the context of ε. A feature can be, for example, a word’s occurrence immediately to the left of ε. We define many such features. For each feature fε, we use the classified data to calculate the posterior probability ratio of each sense tε with respect to the feature as P(tε |fε) λ(tε |fε) = P(¯tε |fε) For each feature fε, we create a rule consisting of the feature, the sense arg max λ(tε |fε) tε∈Tε and the score max λ(tε |fε) tε∈Tε We sort the rules in descending order with respect to their scores, provided that the scores of the rules are larger than the default m</context>
</contexts>
<marker>Yarowsky, 1994</marker>
<rawString>Yarowsky, David. 1994. Decision lists for lexical ambiguity resolution: Application to accent restoration in Spanish and French. In Proceedings of the 32nd Annual Meeting of the Association for Computational Linguistics, pages 88–95, New Mexico State University, Las Cruces.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Yarowsky</author>
</authors>
<title>Unsupervised word sense disambiguation rivaling supervised methods.</title>
<date>1995</date>
<booktitle>In Proceedings of the 33rd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>189--196</pages>
<contexts>
<context position="1773" citStr="Yarowsky (1995)" startWordPosition="264" endWordPosition="265">a (i.e., in Chinese, either to [gongchang] or to [zhiwu]), our goal would be to determine the correct Chinese translation. That is, word translation disambiguation is essentially a special case of word sense disambiguation (in the above example, gongchang would correspond to the sense of factory and zhiwu to the sense of flora).1 We could view word translation disambiguation as a problem of classification. To perform the task, we could employ a supervised learning method, but since to do so would require human labeling of data, which would be expensive, bootstrapping would be a better choice. Yarowsky (1995) has proposed a bootstrapping method for word sense disambiguation. When applied to translation from English to Chinese, his method starts learning with a small number of English sentences that contain ambiguous English words and that are labeled with correct Chinese translations of those words. It then uses these classified sentences as training data to create a classifier (e.g., a decision list), which it uses to classify unclassified sentences containing the same ambiguous words. The output of this process is then used as additional training data. It also adopts the one-sense-per-discourse </context>
<context position="11016" citStr="Yarowsky (1995)" startWordPosition="1799" endWordPosition="1800">e Bayesian ensemble method for word sense disambiguation, as proposed in Pedersen (2000), employs a linear combination of several naive Bayesian classifiers constructed on the basis of a number of nested surrounding contexts4 h P(tE |ee,i) 1 P(tE |eE) = h i=1 e�E,1 c ··· c e�E,i ··· c eE,h = eE (i = 1, . . . , h) The naive Bayesian ensemble is reported to perform the best for word sense disambiguation with respect to a benchmark data set (Pedersen 2000). 2.4 Monolingual Bootstrapping Since data preparation for supervised learning is expensive, it is desirable to develop bootstrapping methods. Yarowsky (1995) proposed such a method for word sense disambiguation, which we refer to as monolingual bootstrapping. 4 Here u ⊂ v denotes that u is a sub-sequence of v. 4 Li and Li Word Translation Disambiguation Using Bilingual Bootstrapping Let Lε denote a set of classified instances (labeled data) in English, each representing one context of E: Lε = {(eε,1, tε,1), (eε,2, tε,2), ... , (eε,k, tε,k)} tε,i ∈ Tε (i = 1, 2, ... , k) and Uε a set of unclassified instances (unlabeled data) in English, each representing one context of E: Uε = {eε,1, eε,2, ... , eε,l} The instances in Figure 1 can be considered ex</context>
<context position="13761" citStr="Yarowsky (1995)" startWordPosition="2334" endWordPosition="2335">ng sense t if t’s posterior odds are the largest among the possible senses and are larger than a threshold θ. For each class t, we store the classified instances in St. Lines 14–15 show that for each class t, we only choose the top b classified instances in terms of the posterior odds. For each class t, we store the selected top b classified instances in Qt. Lines 16–17 show that we create the classified instances by combining the instances with their classification labels. After line 17, we can employ the one-sense-per-discourse heuristic to further classify unclassified data, as proposed in Yarowsky (1995). This heuristic is based on the observation that when an ambiguous word appears in the same text several times, its tokens usually refer to the same sense. In the bootstrapping process, for each newly classified instance, we automatically assign its class label to those unclassified instances that also contain the same ambiguous word and co-occur with it in the same text. Hereafter, we will refer to this method as monolingual bootstrapping with one sense per discourse. This method can be viewed as a special case of co-training (Blum and Mitchell 1998). 2.5 Co-training Monolingual bootstrappin</context>
<context position="30506" citStr="Yarowsky (1995)" startWordPosition="5255" endWordPosition="5256">he first one only in (1). That 13 Computational Linguistics Volume 30, Number 1 Table 1 Data descriptions in Experiment 1. English words Chinese words Senses Seed words interest readiness to give attention show line money paid for the use of money rate a share in company or business hold advantage, advancement or favor conflict a thin flexible object cut written or spoken text write telephone connection telephone formation of people or things wait an artificial division between product product is, it employs a decision list as the classifier. This implementation is exactly the one proposed in Yarowsky (1995). (We will denote it as MB-D hereafter.) MB-B and MB-D can be viewed as the state-of-the-art methods for word translation disambiguation using bootstrapping. 4.3 Experiment 1: WSD Benchmark Data We first applied BB, MB-B, and MB-D to translation disambiguation on the English words line and interest using a benchmark data set.5 The data set consists mainly of articles from the Wall Street Journal and is prepared for conducting word sense disambiguation (WSD) on the two words (e.g., Pedersen 2000). We collected from the HIT dictionary6 the Chinese words that can be translations of the two Englis</context>
<context position="34588" citStr="Yarowsky (1995)" startWordPosition="5926" endWordPosition="5927">y significant (p-value &lt; 0.001). (For the sign test method, see, for example, Yang and Liu [1999]). Table 4 shows the results achieved by some existing supervised learning methods with respect to the benchmark data (cf. Pedersen 2000). Although BB is a method nearly equivalent to one based on unsupervised learning, it still performs favorably when compared with the supervised methods (note that since the experimental settings are different, the results cannot be directly compared). 4.4 Experiment 2: Yarowsky’s Words We also conducted translation on seven of the twelve English words studied in Yarowsky (1995). Table 5 lists the words we used. Table 3 Accuracies of disambiguation in Experiment 1. Words Major (%) MB-D (%) MB-B (%) BB (%) interest 54.6 54.7 69.3 75.5 line 53.5 55.6 54.1 62.7 Table 4 Accuracies of supervised methods. interest (%) line (%) Naive Bayesian ensemble 89 88 Naive Bayes 74 72 Decision tree 78 — Neural network — 76 Nearest neighbor 87 — 15 Computational Linguistics Volume 30, Number 1 Figure 11 Learning curves with interest. Figure 12 Learning curves with line. Figure 13 Accuracies of BB with different α values. 16 Li and Li Word Translation Disambiguation Using Bilingual Boo</context>
<context position="37056" citStr="Yarowsky (1995)" startWordPosition="6341" endWordPosition="6342">e, sake, poach, axes, and motion, because the first four words do not frequently occur in the Encarta corpus, and the accuracy of choosing the major translation for the last word already exceeds 98%. We next applied BB, MB-B, and MB-D to word translation disambiguation. The parameter settings were the same as those in Experiment 1. Table 7 shows the disambiguation accuracies, and Figures 14–20 show the learning curves for the seven words. From the results, we see again that BB significantly outperforms MB-D and MB-B. Note that the results of MB-D here cannot be directly compared with those in Yarowsky (1995), because the data used are different. Naive Bayesian ensemble did not perform well on the word duty, causing the accuracies of both MB-B and BB to deteriorate. 7 http://encarta.msn.com/default.asp. 8 http://www.whlib.ac.cn/sjk/bkqs.htm. 17 Computational Linguistics Volume 30, Number 1 Figure 14 Figure 15 Learning curves with bass. Learning curves with drug. Figure 16 Figure 17 Learning curves with duty. Learning curves with palm. Figure 18 Figure 19 Learning curves with plant. Learning curves with space. Figure 20 Learning curves with tank. 18 Li and Li Word Translation Disambiguation Using B</context>
</contexts>
<marker>Yarowsky, 1995</marker>
<rawString>Yarowsky, David. 1995. Unsupervised word sense disambiguation rivaling supervised methods. In Proceedings of the 33rd Annual Meeting of the Association for Computational Linguistics, pages 189–196.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ming Zhou</author>
<author>Yuan Ding</author>
<author>Changning Huang</author>
</authors>
<title>Improving translation selection with a new translation model trained by independent monolingual corpora.</title>
<date>2001</date>
<journal>International Journal of Computational Linguistics and Chinese Language Processing,</journal>
<volume>6</volume>
<issue>1</issue>
<marker>Zhou, Ding, Huang, 2001</marker>
<rawString>Zhou, Ming, Yuan Ding, and Changning Huang. 2001. Improving translation selection with a new translation model trained by independent monolingual corpora. International Journal of Computational Linguistics and Chinese Language Processing, 6(1):1–26.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>