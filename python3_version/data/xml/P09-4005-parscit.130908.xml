<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.117007">
<title confidence="0.998024">
A Web-Based Interactive Computer Aided Translation Tool
</title>
<author confidence="0.997787">
Philipp Koehn
</author>
<affiliation confidence="0.998031">
School of Informatics
University of Edinburgh
</affiliation>
<email confidence="0.975271">
pkoehn@inf.ed.ac.uk
</email>
<sectionHeader confidence="0.99334" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9998505">
We developed caitra, a novel tool that aids
human translators by (a) making sugges-
tions for sentence completion in an inter-
active machine translation setting, (b) pro-
viding alternative word and phrase trans-
lations, and (c) allowing them to post-
edit machine translation output. The tool
uses the Moses decoder, is implemented in
Ruby on Rails and C++ and delivered over
the web.
</bodyText>
<sectionHeader confidence="0.999256" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999737891891892">
Today’s machine translation systems are mostly
used for inbound translation (also called assim-
ilation), where the reader accepts lower quality
translation for instant access to foreign language
text. The standards are much higher for outbound
translation (also called dissemination), where the
reader is typically an unsuspecting customer or cit-
izen who is seeking information about products or
services, and human translators are required for
high-quality publication-ready translation.
While machine translation has made tremen-
dous progress over the last years, this progress has
made little inroads into tools for human transla-
tors. Although it has become common practice in
the industry to provide human translators with ma-
chine translation output that they have to post-edit,
typically no deeper integration of machine transla-
tion and human translation is found in translation
agencies.
An interesting approach was pioneered by the
TransType project (Langlais et al., 2000). The ma-
chine translation system makes sentence comple-
tion predictions in an interactive machine trans-
lation setting. The users may accept them or
override them by typing in their own translations,
which triggers new suggestions by the tool (Bar-
rachina et al., 2009).
But also other information that is generated dur-
ing the machine translation process may be useful
for the human translator, such as alternative trans-
lations for the input words and phrases.
We are at the beginning of a research program
to explore the benefits of these different types of
aid to human translators, analyze user interaction
behavior, and develop novel types of assistance.
To have a testbed for this research, we developed
an online, web-based tool for translators.
</bodyText>
<sectionHeader confidence="0.994613" genericHeader="introduction">
2 Overview
</sectionHeader>
<bodyText confidence="0.99993525">
Caitra is implemented in Ruby on Rails (Thomas
and Hansson, 2008) as a web-based client-server
architecture, using Ajax-style Web 2.0 technolo-
gies (Raymond, 2007) connected to a MySQL
database-driven back-end. The machine trans-
lation back-end is powered by the open source
Moses decoder (Koehn et al., 2007). The inter-
active machine translation prediction code is im-
plemented in C++ for speed. The tool is delivered
over the web to allow for easier user studies with
remote users, but also to expose the tool to a wider
community to gather additional feedback. You can
find caitra online at http://www.caitra.org/
Caitra allows the uploading of documents us-
ing a simple text box. This text is then processed
by a back-end job to pre-compute all the neces-
sary data (machine translation output, translation
options, search graphs). This process takes a few
minutes.
Finally, the user is presented with an interface
that includes all the different types of assistance.
Each may be turned off, if the user finds it distract-
ing. The user translates one sentence at a time,
while the context (both input and user transla-
tion, including the proceeding and following para-
graph) is displayed for reference.
In the next three sections, we will describe each
type of assistance in detail.
</bodyText>
<sectionHeader confidence="0.99908" genericHeader="method">
3 Interactive Machine Translation
</sectionHeader>
<bodyText confidence="0.9999806">
The idea of interactive machine translation has
been greatly advanced by work carried out in the
TransType project (Langlais et al., 2000), with the
focus on a sentence-completion paradigm. While
the human translator is still in charge of creating
</bodyText>
<page confidence="0.980753">
17
</page>
<note confidence="0.97716">
Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 17–20,
Suntec, Singapore, 3 August 2009. c�2009 ACL and AFNLP
</note>
<figureCaption confidence="0.701276">
Figure 1: Interactive Machine Translation.
Caitra uses the search graph of the machine trans-
lation decoder to suggest words and phrases to
continue the translation.
</figureCaption>
<bodyText confidence="0.999949564102564">
the translation word by word, she is aided by a ma-
chine translation system that interactively makes
suggestions for completing the sentence, and up-
dates these suggestions based on user input. The
scenario is very similar to the auto-completion
function for words, search terms, email addresses,
etc. in modern office applications.
See Figure 1 for a screenshot of the incarnation
of this method in our translation tool. The user is
given an input sentence and a standard web text
box to type in her translation. In addition, caitra
makes suggestions about the next word (or phrase)
to be added to the translation. The user may accept
this (by pressing the TAB key), or type in her own
translation. The tool updates the prediction based
on the user input.
The predictions are based on a statistical ma-
chine translation system. Given the input and the
partial translation of the user (called the prefix),
the machine translation system computes the opti-
mal translation of the input sentence, constrained
by matching the user input. This translation is pro-
vided to the user in form of short phrases (mirror-
ing the underlying phrase-based statistical transla-
tion model).
In contrast to traditional work on interactive ma-
chine translation, the displayed suggestions con-
sist of only very few words to not overload the
reading capacity of the user. We have not yet car-
ried out studies to explore the optimal length of
suggestions, or even when not to provide sugges-
tions at all, in cases when they will be most likely
useless and distractive.
We store the search graph produced by the ma-
chine translation decoder in a database. During
the user interaction, we quickly match user input
against the graph using a string edit distance mea-
sure. The prediction is the optimal completion
path that matches the user input with (a) minimal
</bodyText>
<figureCaption confidence="0.811431">
Figure 2: Translation Options. The most likely
word and phrase translation are displayed along-
side the input words, ranked and color-coded by
their probability.
</figureCaption>
<bodyText confidence="0.994721">
string edit distance and (b) highest sentence trans-
lation probability. This computation takes place at
the server and is implemented in C++.
While caitra only displays one phrase predic-
tion at a time, the entire completion path is trans-
mitted to the client. Acceptance of a system sug-
gestion will instantly lead to another suggestion,
while typed-in user translations require the com-
putation of a new sentence completion path. This
typically takes less than a second.
Preliminary studies suggest that users accept up
to 50-80% of system predictions, but obviously
this number depends highly on language pair and
difficulty of the text.
</bodyText>
<sectionHeader confidence="0.945563" genericHeader="method">
4 Options from the Translation Table
</sectionHeader>
<bodyText confidence="0.999846842105263">
Phrase-based statistical machine translation meth-
ods acquire their translation knowledge in form of
large phrase translation tables automatically from
large amounts of translated texts (Koehn et al.,
2003). For each input word or input word se-
quence, this translation table is consulted for the
most likely translation options. A heuristic beam
search algorithm explores these options and their
ordering to find the most likely sentence trans-
lation (which takes into account various scoring
functions, such as the use of an n-gram language
model).
These translation options may also be of interest
to the user, so we display them in our translation
tool caitra. See Figure 2 for an example. For in-
stance, the tool suggests for the translation of the
French magnifique the English options wonderful,
beautiful, magnificent, and great, among others.
The user may click on any of these phrases and
</bodyText>
<page confidence="0.998758">
18
</page>
<figureCaption confidence="0.9925125">
Figure 3: Post-Editing Machine Translation. Starting with the sentence translation of the machine
translation system, the user post-edits and the tool indicates changes.
</figureCaption>
<bodyText confidence="0.992813870967742">
they are added into the text box. The user may
also just glance at these suggestions and then type
in the translations herself.
The options are color-coded and ranked based
on their score. Note that since these options are ex-
tracted from a translated corpus using various au-
tomatic methods, often inappropriate translations
are included, such as the translation of Newman
into Committee.
For each translation option a score is computed
to assess its utility. This score is the (i) future cost
estimates of the phrases (ii) plus the outside cost
estimates for the remaining sentence (iii) minus
the future cost estimate for the full sentence. This
number allows the ranking of words vs. phrases of
different length. The ranking of the phrases never
places a lower scoring option above a higher scor-
ing option. The absolute score is used to color
code the options. Up to ten table rows are filled
with options.
Since the user may click on the options, or may
simply type in translations inspired by the options,
it is not straight-forward to evaluate their useful-
ness. We plan to assess this by measuring trans-
lation speed and quality. Experience so far has
shown that the options help novice users with un-
known words and advanced users with suggestions
that are not part of their active vocabulary. It may
be possible that these options even allow users that
do not know the source language to create a trans-
lation, as in work done by Albrecht et al. (2009).
</bodyText>
<sectionHeader confidence="0.873223" genericHeader="method">
5 Post-Editing Machine Translation
</sectionHeader>
<bodyText confidence="0.999932">
The addition of full sentence translation of the ma-
chine translation system is trivial compared to the
other types of assistance. When a user starts a new
sentence using this aid, the text box already con-
tains the machine translation output and the user
only makes changes to correct errors.
See Figure 3 for an example. Caitra also com-
pares the user’s translation in form of string edit
distance against the original machine translation.
This is illustrated above the text box, to possibly
alert the user to mistakenly dropped or added con-
tent.
</bodyText>
<sectionHeader confidence="0.918506" genericHeader="method">
6 Key Stroke Logging
</sectionHeader>
<bodyText confidence="0.99992516">
Caitra tracks every key stroke and mouse click of
the user, which then allows for a detailed anal-
ysis of the user’s interaction with the tool. See
Figure 4 for a graphical representation of the user
activity during the translation of a sentence. The
graph plots sentence length (in characters) against
the progression of time. Bars indicate the sentence
length at each point in time when a user action
takes place (acceptance of predictions are red, DEL
key strokes purple, key strokes for cursor move-
ment grey, and key strokes that add characters are
black.)
In the example sentence, the user first slowly
accepted the interactive machine translation pre-
dictions (second 0-12), then more rapidly (second
12-20), followed by a period of deletions and typ-
ing that did not make the translation longer (sec-
ond 20-30). After a short pause, predictions were
accepted again (second 33-40), followed by dele-
tions and typing (second 40-57).
We are currently carrying out user studies to
not only compare the productivity improvements
gained by the different types of help offered to
the user, but also to identify, categorize and ana-
lyze the types of activities (such as long pauses,
</bodyText>
<page confidence="0.997293">
19
</page>
<bodyText confidence="0.9796785">
Input: ”Un ´echange de coups de feu
s’est produit, et la moiti´e des ravisseurs
ont ´et´e tu´es, les autres s’enfuyant”, a dit
ce responsable qui a requis l’anonymat.
MT: ”A exchange of fire occurred, and
half of the kidnappers were killed, the
other is enfuyant,” said this official who
has requested anonymity.
User: ”An exchange of fire occurred,
and half of the kidnappers were killed,
the others running away”, said the
source who has requested anonymity.
</bodyText>
<figureCaption confidence="0.610709333333333">
Figure 4: User Activity. The graph plots the time spent on translation (in seconds, x-axis) against the
length of the sentence (y-axis) with color-coded activities (bars). For instance, at the interval second 2–3,
three interactive machine translations predictions were accepted.
</figureCaption>
<bodyText confidence="0.9997855">
slow typing, fast typing, clicks on options, accep-
tance of predictions) to gain insight into the type
of problems in (computer aided) human transla-
tion and the time spent to solve these problems.
</bodyText>
<sectionHeader confidence="0.999209" genericHeader="conclusions">
7 Conclusions
</sectionHeader>
<bodyText confidence="0.999771857142857">
We described the new computer aided translation
tool caitra that allows us to compare industry-
standard post-editing, the interactive sentence
completion paradigm, and other help for trans-
lators. The tool is available online at the URL
http://www.caitra.org/.
We will report on user studies in future papers.
</bodyText>
<sectionHeader confidence="0.998399" genericHeader="acknowledgments">
8 Acknowledgments
</sectionHeader>
<bodyText confidence="0.99987075">
This work was supported by the EuroMatrix-
Plus project funded by the Europea Commission
(7th Framework Programme). Thanks to Josh
Schroeder for help with Ruby on Rails.
</bodyText>
<sectionHeader confidence="0.998599" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999493184210526">
Albrecht, J., Hwa, R., and Marai, G. E. (2009).
Correcting automatic translations through col-
laborations between mt and monolingual target-
language users. In Proceedings of the 12th Con-
ference of the European Chapter of the Associ-
ation for Computational Linguistics.
Barrachina, S., Bender, O., Casacuberta, F.,
Civera, J., Cubel, E., Khadivi, S., Lagarda, A.,
Ney, H., Tom´as, J., Vidal, E., and Vilar, J.-
M. (2009). Statistical approaches to computer-
assisted translation. Computational Linguistics,
35(1):3–28.
Koehn, P., Hoang, H., Birch, A., Callison-Burch,
C., Federico, M., Bertoldi, N., Cowan, B., Shen,
W., Moran, C., Zens, R., Dyer, C. J., Bo-
jar, O., Constantin, A., and Herbst, E. (2007).
Moses: Open source toolkit for statistical ma-
chine translation. In Proceedings of the 45th
Annual Meeting of the Association for Com-
putational Linguistics Companion Volume Pro-
ceedings of the Demo and Poster Sessions,
pages 177–180, Prague, Czech Republic. Asso-
ciation for Computational Linguistics.
Koehn, P., Och, F. J., and Marcu, D. (2003). Statis-
tical phrase based translation. In Proceedings of
the Joint Conference on Human Language Tech-
nologies and the Annual Meeting of the North
American Chapter of the Association of Com-
putational Linguistics (HLT-NAACL).
Langlais, P., Foster, G., and Lapalme, G. (2000).
Transtype: a computer-aided translation typing
system. In Proceedings of the ANLP-NAACL
2000 Workshop on Embedded Machine Trans-
lation Systems.
Raymond, S. (2007). Ajax on Rails. O’Reilly.
Thomas, D. and Hansson, D. H. (2008). Agile Web
Development with Rails: Second Edition, 2nd
Edition. The Pragmatic Programmers, LLC.
</reference>
<page confidence="0.994806">
20
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.954572">
<title confidence="0.999852">A Web-Based Interactive Computer Aided Translation Tool</title>
<author confidence="0.999858">Philipp Koehn</author>
<affiliation confidence="0.999878">School of Informatics University of Edinburgh</affiliation>
<email confidence="0.997357">pkoehn@inf.ed.ac.uk</email>
<abstract confidence="0.995027181818182">developed a novel tool that aids human translators by (a) making suggestions for sentence completion in an interactive machine translation setting, (b) providing alternative word and phrase translations, and (c) allowing them to postedit machine translation output. The tool uses the Moses decoder, is implemented in Ruby on Rails and C++ and delivered over the web.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Albrecht</author>
<author>R Hwa</author>
<author>G E Marai</author>
</authors>
<title>Correcting automatic translations through collaborations between mt and monolingual targetlanguage users.</title>
<date>2009</date>
<booktitle>In Proceedings of the 12th Conference of the European Chapter of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="9315" citStr="Albrecht et al. (2009)" startWordPosition="1497" endWordPosition="1500">d to color code the options. Up to ten table rows are filled with options. Since the user may click on the options, or may simply type in translations inspired by the options, it is not straight-forward to evaluate their usefulness. We plan to assess this by measuring translation speed and quality. Experience so far has shown that the options help novice users with unknown words and advanced users with suggestions that are not part of their active vocabulary. It may be possible that these options even allow users that do not know the source language to create a translation, as in work done by Albrecht et al. (2009). 5 Post-Editing Machine Translation The addition of full sentence translation of the machine translation system is trivial compared to the other types of assistance. When a user starts a new sentence using this aid, the text box already contains the machine translation output and the user only makes changes to correct errors. See Figure 3 for an example. Caitra also compares the user’s translation in form of string edit distance against the original machine translation. This is illustrated above the text box, to possibly alert the user to mistakenly dropped or added content. 6 Key Stroke Logg</context>
</contexts>
<marker>Albrecht, Hwa, Marai, 2009</marker>
<rawString>Albrecht, J., Hwa, R., and Marai, G. E. (2009). Correcting automatic translations through collaborations between mt and monolingual targetlanguage users. In Proceedings of the 12th Conference of the European Chapter of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Barrachina</author>
<author>O Bender</author>
<author>F Casacuberta</author>
<author>J Civera</author>
<author>E Cubel</author>
<author>S Khadivi</author>
<author>A Lagarda</author>
<author>H Ney</author>
<author>J Tom´as</author>
<author>E Vidal</author>
<author>J-M Vilar</author>
</authors>
<title>Statistical approaches to computerassisted translation.</title>
<date>2009</date>
<journal>Computational Linguistics,</journal>
<volume>35</volume>
<issue>1</issue>
<marker>Barrachina, Bender, Casacuberta, Civera, Cubel, Khadivi, Lagarda, Ney, Tom´as, Vidal, Vilar, 2009</marker>
<rawString>Barrachina, S., Bender, O., Casacuberta, F., Civera, J., Cubel, E., Khadivi, S., Lagarda, A., Ney, H., Tom´as, J., Vidal, E., and Vilar, J.-M. (2009). Statistical approaches to computerassisted translation. Computational Linguistics, 35(1):3–28.</rawString>
</citation>
<citation valid="false">
<authors>
<author>P Koehn</author>
<author>H Hoang</author>
<author>A Birch</author>
<author>C Callison-Burch</author>
<author>M Federico</author>
<author>N Bertoldi</author>
<author>B Cowan</author>
<author>W Shen</author>
<author>C Moran</author>
<author>R Zens</author>
<author>C J Dyer</author>
<author>O Bojar</author>
<author>A Constantin</author>
<author>E Herbst</author>
</authors>
<title>Moses: Open source toolkit for statistical machine translation.</title>
<date>2007</date>
<booktitle>In Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics Companion Volume Proceedings of the Demo and Poster Sessions,</booktitle>
<pages>177--180</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Prague, Czech Republic.</location>
<contexts>
<context position="2583" citStr="Koehn et al., 2007" startWordPosition="391" endWordPosition="394"> phrases. We are at the beginning of a research program to explore the benefits of these different types of aid to human translators, analyze user interaction behavior, and develop novel types of assistance. To have a testbed for this research, we developed an online, web-based tool for translators. 2 Overview Caitra is implemented in Ruby on Rails (Thomas and Hansson, 2008) as a web-based client-server architecture, using Ajax-style Web 2.0 technologies (Raymond, 2007) connected to a MySQL database-driven back-end. The machine translation back-end is powered by the open source Moses decoder (Koehn et al., 2007). The interactive machine translation prediction code is implemented in C++ for speed. The tool is delivered over the web to allow for easier user studies with remote users, but also to expose the tool to a wider community to gather additional feedback. You can find caitra online at http://www.caitra.org/ Caitra allows the uploading of documents using a simple text box. This text is then processed by a back-end job to pre-compute all the necessary data (machine translation output, translation options, search graphs). This process takes a few minutes. Finally, the user is presented with an inte</context>
</contexts>
<marker>Koehn, Hoang, Birch, Callison-Burch, Federico, Bertoldi, Cowan, Shen, Moran, Zens, Dyer, Bojar, Constantin, Herbst, 2007</marker>
<rawString>Koehn, P., Hoang, H., Birch, A., Callison-Burch, C., Federico, M., Bertoldi, N., Cowan, B., Shen, W., Moran, C., Zens, R., Dyer, C. J., Bojar, O., Constantin, A., and Herbst, E. (2007). Moses: Open source toolkit for statistical machine translation. In Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics Companion Volume Proceedings of the Demo and Poster Sessions, pages 177–180, Prague, Czech Republic. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>F J Och</author>
<author>D Marcu</author>
</authors>
<title>Statistical phrase based translation.</title>
<date>2003</date>
<booktitle>In Proceedings of the Joint Conference on Human Language Technologies and the Annual Meeting of the North American Chapter of the Association of Computational Linguistics (HLT-NAACL).</booktitle>
<contexts>
<context position="6996" citStr="Koehn et al., 2003" startWordPosition="1107" endWordPosition="1110">cceptance of a system suggestion will instantly lead to another suggestion, while typed-in user translations require the computation of a new sentence completion path. This typically takes less than a second. Preliminary studies suggest that users accept up to 50-80% of system predictions, but obviously this number depends highly on language pair and difficulty of the text. 4 Options from the Translation Table Phrase-based statistical machine translation methods acquire their translation knowledge in form of large phrase translation tables automatically from large amounts of translated texts (Koehn et al., 2003). For each input word or input word sequence, this translation table is consulted for the most likely translation options. A heuristic beam search algorithm explores these options and their ordering to find the most likely sentence translation (which takes into account various scoring functions, such as the use of an n-gram language model). These translation options may also be of interest to the user, so we display them in our translation tool caitra. See Figure 2 for an example. For instance, the tool suggests for the translation of the French magnifique the English options wonderful, beauti</context>
</contexts>
<marker>Koehn, Och, Marcu, 2003</marker>
<rawString>Koehn, P., Och, F. J., and Marcu, D. (2003). Statistical phrase based translation. In Proceedings of the Joint Conference on Human Language Technologies and the Annual Meeting of the North American Chapter of the Association of Computational Linguistics (HLT-NAACL).</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Langlais</author>
<author>G Foster</author>
<author>G Lapalme</author>
</authors>
<title>Transtype: a computer-aided translation typing system.</title>
<date>2000</date>
<booktitle>In Proceedings of the ANLP-NAACL 2000 Workshop on Embedded Machine Translation Systems.</booktitle>
<contexts>
<context position="1516" citStr="Langlais et al., 2000" startWordPosition="221" endWordPosition="224"> seeking information about products or services, and human translators are required for high-quality publication-ready translation. While machine translation has made tremendous progress over the last years, this progress has made little inroads into tools for human translators. Although it has become common practice in the industry to provide human translators with machine translation output that they have to post-edit, typically no deeper integration of machine translation and human translation is found in translation agencies. An interesting approach was pioneered by the TransType project (Langlais et al., 2000). The machine translation system makes sentence completion predictions in an interactive machine translation setting. The users may accept them or override them by typing in their own translations, which triggers new suggestions by the tool (Barrachina et al., 2009). But also other information that is generated during the machine translation process may be useful for the human translator, such as alternative translations for the input words and phrases. We are at the beginning of a research program to explore the benefits of these different types of aid to human translators, analyze user inter</context>
<context position="3726" citStr="Langlais et al., 2000" startWordPosition="579" endWordPosition="582">. This process takes a few minutes. Finally, the user is presented with an interface that includes all the different types of assistance. Each may be turned off, if the user finds it distracting. The user translates one sentence at a time, while the context (both input and user translation, including the proceeding and following paragraph) is displayed for reference. In the next three sections, we will describe each type of assistance in detail. 3 Interactive Machine Translation The idea of interactive machine translation has been greatly advanced by work carried out in the TransType project (Langlais et al., 2000), with the focus on a sentence-completion paradigm. While the human translator is still in charge of creating 17 Proceedings of the ACL-IJCNLP 2009 Software Demonstrations, pages 17–20, Suntec, Singapore, 3 August 2009. c�2009 ACL and AFNLP Figure 1: Interactive Machine Translation. Caitra uses the search graph of the machine translation decoder to suggest words and phrases to continue the translation. the translation word by word, she is aided by a machine translation system that interactively makes suggestions for completing the sentence, and updates these suggestions based on user input. Th</context>
</contexts>
<marker>Langlais, Foster, Lapalme, 2000</marker>
<rawString>Langlais, P., Foster, G., and Lapalme, G. (2000). Transtype: a computer-aided translation typing system. In Proceedings of the ANLP-NAACL 2000 Workshop on Embedded Machine Translation Systems.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Raymond</author>
</authors>
<date>2007</date>
<note>Ajax on Rails. O’Reilly.</note>
<contexts>
<context position="2438" citStr="Raymond, 2007" startWordPosition="370" endWordPosition="371">ated during the machine translation process may be useful for the human translator, such as alternative translations for the input words and phrases. We are at the beginning of a research program to explore the benefits of these different types of aid to human translators, analyze user interaction behavior, and develop novel types of assistance. To have a testbed for this research, we developed an online, web-based tool for translators. 2 Overview Caitra is implemented in Ruby on Rails (Thomas and Hansson, 2008) as a web-based client-server architecture, using Ajax-style Web 2.0 technologies (Raymond, 2007) connected to a MySQL database-driven back-end. The machine translation back-end is powered by the open source Moses decoder (Koehn et al., 2007). The interactive machine translation prediction code is implemented in C++ for speed. The tool is delivered over the web to allow for easier user studies with remote users, but also to expose the tool to a wider community to gather additional feedback. You can find caitra online at http://www.caitra.org/ Caitra allows the uploading of documents using a simple text box. This text is then processed by a back-end job to pre-compute all the necessary dat</context>
</contexts>
<marker>Raymond, 2007</marker>
<rawString>Raymond, S. (2007). Ajax on Rails. O’Reilly.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Thomas</author>
<author>D H Hansson</author>
</authors>
<title>Agile Web Development with Rails: Second Edition, 2nd Edition. The Pragmatic Programmers,</title>
<date>2008</date>
<publisher>LLC.</publisher>
<contexts>
<context position="2341" citStr="Thomas and Hansson, 2008" startWordPosition="355" endWordPosition="358">ich triggers new suggestions by the tool (Barrachina et al., 2009). But also other information that is generated during the machine translation process may be useful for the human translator, such as alternative translations for the input words and phrases. We are at the beginning of a research program to explore the benefits of these different types of aid to human translators, analyze user interaction behavior, and develop novel types of assistance. To have a testbed for this research, we developed an online, web-based tool for translators. 2 Overview Caitra is implemented in Ruby on Rails (Thomas and Hansson, 2008) as a web-based client-server architecture, using Ajax-style Web 2.0 technologies (Raymond, 2007) connected to a MySQL database-driven back-end. The machine translation back-end is powered by the open source Moses decoder (Koehn et al., 2007). The interactive machine translation prediction code is implemented in C++ for speed. The tool is delivered over the web to allow for easier user studies with remote users, but also to expose the tool to a wider community to gather additional feedback. You can find caitra online at http://www.caitra.org/ Caitra allows the uploading of documents using a si</context>
</contexts>
<marker>Thomas, Hansson, 2008</marker>
<rawString>Thomas, D. and Hansson, D. H. (2008). Agile Web Development with Rails: Second Edition, 2nd Edition. The Pragmatic Programmers, LLC.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>