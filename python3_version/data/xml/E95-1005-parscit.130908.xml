<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.996269">
The Semantics of Resource Sharing in
Lexical-Functional Grammar
</title>
<author confidence="0.986081">
Andrew Kehler*
</author>
<affiliation confidence="0.86561">
Aiken Computation Lab
</affiliation>
<address confidence="0.702175">
33 Oxford Street
Harvard University
Cambridge, MA 02138
Mary Dalrymplet
John Lampingt
Vijay Saraswatt
Xerox PARC
3333 Coyote Hill Road
Palo Alto, CA 94304
</address>
<sectionHeader confidence="0.974314" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999960571428571">
We argue that the resource shar-
ing that is commonly manifest in
semantic accounts of coordination
is instead appropriately handled in
terms of structure-sharing in LFG
f-structures. We provide an extension
to the previous account of LFG seman-
tics (Dalrymple et al., 1993a) accord-
ing to which dependencies between
f-structures are viewed as resources;
as a result a one-to-one correspon-
dence between uses of f-structures and
meanings is maintained. The result-
ing system is sufficiently restricted in
cases where other approaches overgen-
erate; the very property of resource-
sensitivity for which resource sharing
appears to be problematic actually
provides explanatory advantages over
systems that more freely replicate re-
sources during derivation.
</bodyText>
<sectionHeader confidence="0.998883" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.98901795">
The resource-based approach to semantic compo-
sition in Lexical-Functional Grammar (LFG) ob-
tains the interpretation for a phrase via a logical
deduction, beginning with the interpretations of
its parts as premises (Dalrymple et al., 1993a).
The resource-sensitive system of linear logic is
used to compute meanings in accordance with
relationships manifest in LFG f-structures. The
properties of the system ensure that meanings are
used exactly once, allowing coherence and com-
pleteness conditions on f-structures (Kaplan and
Bresnan, 1982, pages 211-212) to be maintained.
However, there are cases where a single con-
stituent appears to yield more than one contribu-
tion to the meaning of an utterance. This is most
icehlerAdas.harvard.edu
Idalrymple,lamping,saraswatl@parc.xerox.com
obvious in, but is not limited to, sentences involv-
ing coordination. In example (1), for instance.
NAFTA is the object of two different verbs:
</bodyText>
<listItem confidence="0.743821">
(1) Bill supported, and Hillary opposed,
NAFTA.
</listItem>
<bodyText confidence="0.999623567567567">
Since the hallmark of the linear logic approach is
to ensure that f-structure contributions are uti-
lized exactly once in a derivation, such construc-
tions would at first glance appear to be problem-
atic for the approach.
We argue that the resource sharing that is
commonly manifest in the treatment of coordi-
nation in other approaches is appropriately han-
dled by exploiting the structure-sharing in LFG
f-structures. We refine our previous analysis to
account for cases where an f-structure is reached
by multiple paths from an enclosing f-structure.
Dalrymple et al. (1993a) provides an account
of LFG semantics that represents the meaning of
lexical items with linear logic formulas. These
formulas manipulate basic assertions of the form
for f-structures f and meaning logic
terins M. Here a is a mapping, the semantic pro-
jection, that relates f-structures to semantic struc-
tures. To distinguish between multiple paths en-
tering an f-structure, we now take a to map from
sets of paths in f-structures to semantic structures.
Further, the paths between f-structures are made
available in the semantic space as resources. This
makes it possible for the semantic formulas to ex-
ploit information about the multiple paths into
an f-structure in order to account for the multi-
ple uses of the f-structure&apos;s semantic contribution.
The resulting system is sufficiently restricted in
cases where other approaches overgenerate; the
very property of resource-sensitivity for which re-
source sharing appears to be problematic actu-
ally provides explanatory advantages over systems
that more freely replicate resources during deriva-
tion.
In Section 2, we review previous approaches to
the semantics of coordination and argument shar-
</bodyText>
<page confidence="0.999754">
31
</page>
<bodyText confidence="0.999916666666667">
ing. and make note of some of their drawbacks.
We describe the revised semantic framework in
Section 3. and work through several examples of
non-constituent coordination (specifically, right-
node raising) in Section 4. We discuss examples
involving intensinual verbs in Section 5.
</bodyText>
<sectionHeader confidence="0.986491" genericHeader="introduction">
2 Previous Work
</sectionHeader>
<subsectionHeader confidence="0.998256">
2.1 Combinatory Categorial Grammar
</subsectionHeader>
<bodyText confidence="0.999834">
Steedman (1985; 1989; 1990), working in the
framework of Combinatory Categorial Grammar
(CCG), presents what is probably the most ade-
quate analysis of non-constituent coordination to
date. As noted by Steedman and discussed by
Oehrle (1990), the addition of the rule of function
composition to the inventory of syntactic rules in
Categorial Grammar enables the formation of con-
stituents with right-peripheral gaps, providing a
basis for a clean treatment of cases of right node
raising as exemplified by sentence (1). Such exam-
ples are handled by a coordination schema which
allows like categories to be conjoined, shown in
(2).
</bodyText>
<listItem confidence="0.99726">
(2) Coordination: X CONJ X r.-4, X
</listItem>
<bodyText confidence="0.9996984">
This schema gives rise to various actual rules
whose semantics depends on the number of ar-
guments that the shared material takes. For the
cases of RNR considered here, the rule has the
form shown in (3).
</bodyText>
<equation confidence="0.683897">
(3) (coordination)
X/Y:F CONJ:&amp; X/Y:G = XIY:Ax.(Fx&amp;Gx)
</equation>
<bodyText confidence="0.9986726">
The contraction from Ax.Fx and Ax.Gx to
Ax.(Fx&amp;Gx) in this rule allows for the single ar-
gument to be utilized twice.
As noted by Hudson (1976), however, not all
examples of RNR involve coordinate structures:
</bodyText>
<listItem confidence="0.597476777777778">
(4) Citizens who support, paraded against
politicians who oppose, two trade bills.
Obviously, such cases fall outside of the purview
of the coordination schema. An analysis for this
sentence is available in the CCG framework by the
addition of the xsubstitute combinator (Steedman,
p.c.), as defined in Steedman (1987).
(5) (&lt;xsubstitute)
Y/Z:G (X\Y)/Z:F X/Z: Ax.(Fx(Gx))
</listItem>
<bodyText confidence="0.9997511">
The use of this combinator assimilates cases of
noncoordinate RNR to cases involving parasitic
gaps.
While this approach has some drawbacks,&apos; we
do not offer a competing analysis of the syntax of
sentences like (4) here. Rather, we seek an anal-
ysis of RNR (and of resource sharing in general)
that is uniform in the semantics; such a treatment
isn&apos;t available in CCG because of its tight integra-
tion between syntax and semantics.
</bodyText>
<subsectionHeader confidence="0.999685">
2.2 Partee and Rooth
</subsectionHeader>
<bodyText confidence="0.999971541666667">
Perhaps the most influential and widely-adopted
semantic treatment of coordination is the ap-
proach of Partee and Rooth (1983). They pro-
pose a generalized conjunction scheme in which
conjuncts of the same type can be combined. s
is the case with Steedman&apos;s operators, contraction
inherent in the schema allows for a single shared
argument to be distributed as an argument of each
conjunct. Type-lifting is allowed to produce like
types when necessary: the combination of the co-
ordination scheme and type-lifting can have the ef-
fect of &apos;copying&apos; an argument of higher type, such
as a quantifier in the case of coordinated inten-
sional verbs. They propose a &apos;processing strat-
egy&apos; requiring that expressions are interpreted at
the lowest possible type, with type-raising taking
place only where necessary.
To illustrate, Partee and Rooth assume that ex-
tensional verbs such as find are entered in the lex-
icon with basic type (e,(e,t)), whereas intensional
verbs like want, which require a quantifier as an
argument, have type (((e, t), t), (e, t)) (ignoring in-
tensionality). Two extensional verbs such as find
and support are coordinated at their basic types:
</bodyText>
<listItem confidence="0.966671">
(6) find and support (type (e, (et))):
Ay.Ax.[find(x,y) A support(x,y)]
Two intensional verbs such as want and seek are
also coordinated at their basic (higher) types:
(7) want and seek (type (((e,t),t),(e,t))):
A&apos;P.Ax.[want(x, 2) A seek(x,r)]
</listItem>
<bodyText confidence="0.997710333333333">
The argument to this expression is a quantified
NP. When an intensional and an extensional verb
are coordinated, the extensional verb must be
</bodyText>
<footnote confidence="0.8434174">
1We find two problems with the approach as it
stands. First, the intuition that one gap is &apos;parasitic&apos;
upon the other in cases like (4) is not strong, whereas
the CCG analysis suggests an asymmetry between the
two gaps. Second, the combinator appears to cause
overgeneration. While it allows sentence (4), it also
allows sentence (b), where two trade bills is analyzed
as the object of both verbs:
(b) *Politicians who oppose, paraded against, two
trade bills.
</footnote>
<page confidence="0.999264">
32
</page>
<bodyText confidence="0.985457333333333">
type-raised to promote it to the type of the
tensional verb:
in- 3 LFG and Linear Logic
LFG assumes two syntactic levels of representa-
tion: constituent structure (c-structure)2 encodes
phrasal dominance and precedence relations, and
functional structure (f-structure) encodes syntac-
tic predicate-argument structure. The f-structure
for sentence (11) is given in (12):
</bodyText>
<listItem confidence="0.784154">
(11) Bill supported NAFTA.
</listItem>
<table confidence="0.571871">
[PRED &apos;SUPPORT&apos;
f: sum g:[PRED &apos;BILL&apos;]
013J h:[ PRED &apos;NAFTA&apos;]
</table>
<bodyText confidence="0.943307928571429">
Lexical entries specify syntactic constraints on
f-structures as well as semantic information:
(8) want and find (type (((e,t),t), (e, 1))):
.Ax .[a; ant (x ,P) A P(Ay. f ind(x , y))]
Again, this leads to the desired result. How-
ever, an unwelcome consequence of this approach,
which appears to have gone unnoticed in the lit-
erature, arises in cases in which more than two
verbs are conjoined. If an intensional verb is co-
ordinated with more than one extensional verb, a
copy of the quantifier will be distributed to each
verb in the coordinate structure. For instance, in
(9), two extensional verbs and an intensional verb
are coordinated.
</bodyText>
<figure confidence="0.4436615">
(9) want, find, and support:
AP.Ax.[ want(x,P)
A P(Ay. f ind(x , y))
A P(Ay.support(x, y))
</figure>
<bodyText confidence="0.99890445">
Application of this expression to a quantifier re-
sults in two quantifiers being scoped separately
over the extensional verbs. This is the wrong re-
sult; in a sentence such as Hillary wanted, found,
and supported two candidates, the desired result is
where one quantifier scopes over both extensional
verbs (that is, Hillary found and supported the
same two candidates), just as in the case where all
the verbs are extensional. Further, there does not
seem to be an obvious way to modify the Partee
and Rooth proposal so as to produce the correct
result, the problem being that the ability to copy
quantifiers inherent in their schema is too unre-
stricted.
A second problem with the account is that, as
with Steedman&apos;s coordination schema, Partee and
Rooth&apos;s type-raising strategy only applies to coor-
dinate structures. However, the need to type-raise
extends to cases not involving coordination, as in
sentence (10).
</bodyText>
<listItem confidence="0.759237">
(10) Citizens who seek, paraded against politi-
cians who have, a decent health insurance
policy.
</listItem>
<bodyText confidence="0.998982571428571">
We will present an analysis that preserves the
intuition underlying Partee and Rooth&apos;s process-
ing strategy, but that predicts and generates the
correct reading for cases such as (9). Furthermore,
the account applies equally to examples not in-
volving coordination, as is the case in sentence
(10).
</bodyText>
<equation confidence="0.9531455">
(13) Bill NP (1 FRED) = &apos;BILL&apos;
-■,-&gt; Bill
supported V (1 PRED)= &apos;SUPPORT&apos;
VX, Y. (1 suBJ),,X
0 (1
—o 1, supported(X, )
NAFTA NP FRED) = &apos;NAFTA&apos;
NAFTA
</equation>
<bodyText confidence="0.999752407407407">
Semantic information is expressed in (1) a mean-
ing language and (2) a language for assembling
meanings, or glue language. The meaning lan-
guage could be that of any appropriate logic:
for present purposes, higher-order logic will suf-
fice. Expressions of the meaning language (such
as Bill) appear on the right side of the meaning
relation .
The glue language is the tensor fragment of lin-
ear logic (Girard, 1987). The semantic contribu-
tion of each lexical entry, which we will refer to
as a meaning constructor, is a linear-logic formula
consisting of instructions in the glue language for
combining the meanings of the lexical entry&apos;s syn-
tactic arguments to obtain the meaning of the
f-structure headed by the entry. For instance, the
meaning constructor for the verb supported is a
glue language formula paraphrasable as: &amp;quot;If my
SUBJ means X and (0) my OBJ means Y, then
( —0 ) my sentence means supported(X, Y)&amp;quot;.
In the system described in Dalrymple et
al. (1993a), the relation associates expressions
in the meaning language with f-structures. As a
result, each f-structure contributed a single mean-
ing constructor as a resource to be used in a
derivation. Because linear logic does not have
any form of logical contraction (as is inherent in
</bodyText>
<footnote confidence="0.682332">
2For discussion of c-structure and its relation to
f-structure, see, for example, Kaplan and Bresnan
(1982).
</footnote>
<page confidence="0.997869">
33
</page>
<bodyText confidence="0.999847279069768">
the approaches discussed earlier), cases where re-
sources are shared appear to be problematic in
this framework. Intuitively, however, the need
for the multiple use of an f-structure meaning re-
sults not from the appearance of a particular lex-
ical item (e.g., a conjunction) or a particular syn-
tactic construction (e.g., parasitic gap construc-
tions), but instead results from multiple paths
to it from within the f-structure that contains it,
where structure sharing is motivated on syntactic
grounds. We therefore revise the earlier frame-
work to model what we will term occurrences of
f-structures as resources explicitly in the logic.
F-structures can mathematically be regarded
as (finite) functions from a set of attributes to
a set of atomic values, semantic forms and (re-
cursively) f-structures. We will identify an oc-
currence of an f-structure with a path (from the
root) to that occurrence; sets of occurrences of an
f-structure can therefore be identified with path
sets in the f-structure. We take, then, the do-
main of the a projection to be path sets in the
root f-structure. Only those path sets S are con-
sidered which satisfy the property that the exten-
sions of each path in S are identical. Therefore
the f-structure reached by each of these paths is
identical. Hence from a path set S, we can read
off an f-structure S1. In the examples discussed
in Dalrymple et al. (1993a) there is a one-to-one
correspondence between the set of path sets S and
the set of f-structures Si picked out by such path
sets, so the two methods yield the same predic-
tions for those cases.
Relations between path sets are represented ex-
plicitly as resources in the logic by R-relations.
11,-relations are represented as three-place predi-
cates of the form R(F, P, G) which indicate that
(the path set) G appears at the end of a path P
(of length 1) extending (the path set) F. That
is, the f-structure G.f appears at the end of the
singleton path P in the f-structure F1. For ex-
ample, the f-structure given in (12) results in two
R-relations:
</bodyText>
<listItem confidence="0.9264015">
(i) R(f, SUBJ, g)
(ii) R(f, OBJ, h)
</listItem>
<bodyText confidence="0.999722285714286">
Because f and g represent path sets entering an
f-structure that they label, R-relation (i) indicates
that the set of paths (f suBi) (which denotes the
set of paths f concatenated with suBJ) is a subset
of the set of paths denoted by g. An axiom for in-
terpretation provides the links between meanings
of path sets related by R-relations.
</bodyText>
<note confidence="0.484235">
Axiom!: !(VF, G, P, X. X
</note>
<subsubsectionHeader confidence="0.349788">
—0 !(R(F, P,G) —o (F P),, X))
</subsubsectionHeader>
<bodyText confidence="0.998323733333333">
According to this axiom, if a set of paths G has
meaning X. then for each R-relation R(F, P, G)
that has been introduced, a resource (F
can be produced. The linear logic operator 1&apos; al-
lows the conclusion (R(F, P,G) —0 (F X)
to be used as many times as necessary: once
for each R-relation R(F, P, G) introduced by the
f-structure.
We show how a deduction can be performed to
derive a meaning for example (11) using the mean-
ing constructors in (13), R-relations (i) and (ii).
and Axiom I. Instantiating the lexical entries for
Bill „VA FTA, and supported according to the la-
bels on the f-structure in (12), we obtain the fol-
lowing premises:
</bodyText>
<figure confidence="0.35142075">
bill: gu---* Bill
NAFTA: NAFTA
supported: VX, Y. (f suBJ),-,-+ X
(f
—o supported(X ,Y )
First, combining Axiom I with the contribution
for Bill yields:
(14) VP, P. R(F, P, g) —o (F Bill
</figure>
<bodyText confidence="0.981038">
This formula states that if a path set is R-related
to the (path set corresponding to the) f-structure
for Bill, then it receives Bill as its meaning. From
R-relation (i) and formula (14), we derive (13).
giving the meaning of the subject of f.
</bodyText>
<listItem confidence="0.807529">
(15) (f suBJ),, Bill
</listItem>
<bodyText confidence="0.998451333333333">
The meaning constructor for supported com-
bines with (15) to derive the formula for
bill-supported shown in (16).
</bodyText>
<listItem confidence="0.6492715">
(16) VY. (f oBJ)
supported(Bill, Y)
</listItem>
<bodyText confidence="0.915628">
Similarly, using the meaning of NAFTA, R-
relation (ii), and Axiom I, we can derive the mean-
ing shown in (17):
</bodyText>
<listItem confidence="0.96352">
(17) (1 oBJ),-- NAFTA
and combine it with (16) to derive (18):
(18) f supported(Bill, NAFTA)
</listItem>
<bodyText confidence="0.998274125">
At each step, universal instantiation and modus
ponens are used. A second derivation is also pos-
sible, in which supported and NAFTA are com-
bined first and the result is then combined with
Bill.
The use of linear logic provides a flexible mech-
anism for deducing meanings of sentences based
on their f-structure representations. Accounts of
</bodyText>
<page confidence="0.997929">
34
</page>
<bodyText confidence="0.999925923076923">
various linguistic phenomena have been developed
within the framework on which our extension is
based, including quantifiers and anaphora (Dal-
rymple et at.. 1994a), intensional verbs (Dalrym-
ple et al., 1994b), and complex predicates (Dal-
rymple et al., 1993b). The logic fits well with the
&apos;resource-sensitivity&apos; of natural language seman-
tics: there is a one-to-one correspondence between
f-structure relationships and meanings; the multi-
ple use of resources arises from multiple paths to
them in the f-structure. In the next section. we
show how this system applies to several cases of
right-node raising.
</bodyText>
<sectionHeader confidence="0.997766" genericHeader="method">
4 Examples
</sectionHeader>
<subsectionHeader confidence="0.96819">
4.1. RNR with Coordination
</subsectionHeader>
<bodyText confidence="0.971091375">
First we consider the derivation of the basic case
of right-node raising (RNR) illustrated in sentence
(1), repeated in (19).
(19) Bill supported, and Hillary opposed,
NAFTA.
The f-structure for example (19) is shown in (20).
The meaning constructors contributed by the lex-
ical items are as follows:
</bodyText>
<equation confidence="0.969356">
Bill: ga--+ Bill
Hillary: i—+ Hillary
supported: VX, Y. (fi suBJ) a., X
O (ft OBJ)-&apos;-+Y
—o fia,+supported(X,Y)
opposed: VX, Y. (12 suBJ),X
O (12 013J),--0Y
- f2c,&amp;quot;-* opposed(X,Y)
and: VX, Y. (f coNJ),--. X
O (f CONJ),,-..--Y
—0 fa-,-and(X,Y)
and2: !(VX, Y. (f coNJ),, X
010 Y
—0 fa, and(X,Y))
NAFTA: ha, NAFTA
</equation>
<bodyText confidence="0.99567875">
Here, we treat and as a binary relation. This
suffices for this example, but in general we will
have to allow for cases where more than two
constituents are conjoined. Therefore, a second
meaning constructor and2 is also contributed by
the appearance of and, prefixed with the linear
logic operator T. so that it may be used as many
times as necessary (and possibly not at all, as is
the case in this example).
The R-relations resulting from the feature-value
relationships manifest in the f-structure in (20)
are:3
</bodyText>
<listItem confidence="0.957562166666667">
(i) RU, CONJ. It)
(ii) RU, CONJ, f2)
(iii) RUT, SUBJ, g)
(iv) R(ft, , h)
(v) RU 2, SUBJ. i)
(vi) R(f2, OBJ, h)
</listItem>
<bodyText confidence="0.998857">
There are several equivalent derivation orders:
here we step through one.&apos; Using the meanings for
Bill, supported, Hillary, and opposed, R-relations
(iii) and (v), and Axiom I, we can derive mean-
ings for Bill supported and Hillary opposed in the
fashion described in Section 3:
</bodyText>
<equation confidence="0.83670125">
bill-supported: VY. (ft OBJ),,Y
--0 )
hillary-opposed:VZ. (f2
opposed(Hillary, Z)
</equation>
<bodyText confidence="0.98915925">
We combine the antecedents and consequents of
the foregoing formulae to yield:
bill-supported 0 hillary-opposed:
VY, Z. (fi OBJ-&apos;-+YØ (12
</bodyText>
<equation confidence="0.9921235">
—0 fla^-4supported(Bill,Y)
f20^-4 opposed(Hillary, Z)
</equation>
<bodyText confidence="0.9841615">
Consuming the meaning of and and R-relations (i)
and (ii), and using Axiom I, we derive:
bill-supported-and-hillary-opposed1:
VY, Z. (Ii ow), Y (f2
</bodyText>
<equation confidence="0.9922385">
—0 and(supported(Bill,Y),
opposed(Hillary, Z))
</equation>
<bodyText confidence="0.9940225">
Using Axiom I and R-relations (iv) and (vi), the
following implication can be derived:
</bodyText>
<equation confidence="0.69577">
VX. X
—o (ft 013.1) 6,-N-, X 0 (12 oBJ) a, X
</equation>
<bodyText confidence="0.74637925">
Using these last two formulae, by transitivity we
obtain:
bill-supported-and-hillary-opposed2:
VX. h--+X
</bodyText>
<equation confidence="0.6824165">
—o fa, and(supported(Bill, X),
opposed(Hillary, X))
</equation>
<footnote confidence="0.998352">
3We treat the CONJ features as unordered, as they
are in the f-structure set.
41n the interest of space, we will skip some inter-
mediate steps in the derivation.
</footnote>
<table confidence="0.535954428571429">
FRED &apos;SUPPORT&apos;
[
: SUBJ g:{PFtED &apos;BILL&apos;]
OBJ h:{ FRED &apos;NAFTA*
PRED &apos;OPPOSE&apos;
SUBJ [ PRED &apos;HILLARY&apos;
OBJ
</table>
<page confidence="0.997044">
35
</page>
<bodyText confidence="0.823688142857143">
Finally. consuming the contribution of NAFTA,
by universal instantiation and modus ponens we
obtain a meaning for the whole sentence:
and(supported( Bill, NAFTA),
opposed( Hillary, NAFTA))
At this stage, all accountable resources have been
consumed, and the deduction is complete.
</bodyText>
<subsectionHeader confidence="0.9652795">
4.2 RNR with Coordination and
Quantified NPs
</subsectionHeader>
<bodyText confidence="0.986751875">
We now consider sentence (21), where a quantified
NP is shared.
(21) Bill supported, and Hillary opposed, two
trade bills.
Partee and Rooth (1983) observe, and we agree,
that the quantifier in such cases only scopes once,
resulting in the reading where Bill supported and
Hillary opposed the same two bills.&apos; Our analysis
predicts this fact in the same way as Partee and
Rooth&apos;s analysis does.
The meanings contributed by the lexical items
and f-structure dependencies are the same as in
the previous example, except for that of the ob-
ject NP. Following Dalrymple et al. (1994a), the
meaning derived using the contributions from an
f-structure h for two trade bills is:
</bodyText>
<equation confidence="0.573717666666667">
two- trade-bills:
VH, S. (Vs. h,,x —0 H S(x))
—o H,,two(z,tradebill(z), S(z))
</equation>
<bodyText confidence="0.962265952380952">
The derivation is just as before, up until the
final step, where we have derived the formula
labeled bill-supported-and-hillary-opposed2.
This formula matches the antecedent of the quan-
tified NP meaning, so by universal instantiation
and modus ponens we derive:
f,,,two(z , tradebill(z), and(supported(Bill, z),
opposed(Hillary, z)))
With this derivation, there is only one quantifier
meaning which scopes over the meaning of the
coordinated material. A result where the quan-
tifier meaning appears twice, scoping over each
conjunct separately, is not available with the rules
we have given thus far; we return to this point in
Section 5.
The analysis readily extends to cases of nonco-
ordinate RNR such as example (4), repeated as
example (22).
5We therefore disagree with Hendricks (1993), who
claims that such sentences readily allow a reading in-
volving four trade bills.
(22) Citizens who support, paraded against
politicians who oppose, two trade bills.
In our analysis, the f-structure for two trade bills
is resource-shared as the object of the two verbs.
just as it is in the coordinated case.
Space limitations preclude our going through
the derivation; however, it is straightforward given
the semantic contributions of the lexical items and
R-relations. The fact that there is no coordination
involved has no bearing on the result, since the se-
mantics of resource-sharing is distinct from that of
coordination in our analysis. As previously noted.
this separation is not possible in CCG because of
the tight integration between syntax and seman-
tics. In LFG, the syntax/semantics interface is
more loosely coupled, affording the flexibility to
handle coordinated and non-coordinated cases of
RNR uniformly in the semantics. This also al-
lows for our semantics of coordination not to re-
quire schemas nor entities of polymorphic type:
our meaning of and is type t t I.
</bodyText>
<sectionHeader confidence="0.994415" genericHeader="method">
5 Intensional Verbs
</sectionHeader>
<bodyText confidence="0.9481935">
We now return to consider cases involving inten-
sional verbs. The preferred reading for sentence
(23), in which only one quantifier scopes over the
two extensional predicates, is shown below:
(23) Hillary wanted, found, and supported two
candidates.
and(wanted(Hillary,
AQ.two(x,candidate(x),[Q](x))).
two(z,candidate(z),
and(found(Hillary, z),
supported( Hillary , z))))
The meaning constructors for the lexical items are
given in Figure 1. Recall that a second meaning
The f-structure for example (23) is given in (24).
</bodyText>
<figure confidence="0.884723714285714">
FRED &apos;WANT&apos;
SUBJ g :[ PRED &apos;HILLARY&apos;
, FRED &apos;CANDIDATE&apos;
OBJ :
SPEC &apos;TWO&apos;
FRED
SUBJ
OBJ -----------
FRED &apos;SUPPORT
SUBJ
OBJ -----
36
Hillary: g a, Hillary
wanted: VX, Y. (fi SUBJ) --X
0 (V s , p. (V X . (f suBJ) X —0 s-- p( X)) —0 s-Y(p))
—o wanted(X,-Y)
found: VX, Y. (12 suBJ),-,-. X 0 (f2 —0 f2,, found(X ,Y)
supported: VX, Y. (f3 (.6 013.1),,Y —0 f3,-- supported(X ,Y)
and: VX, Y. (f CONJ) -.--X (f coNJ) o.,—Y —0 f and(X,Y)
and2: !(VX, Y. (f CONJ) &apos;X Y —0 and(X , Y))
two-candidates:VH, S. (V x. h, X H SW) —0 H --qtoo(z, candidate(z), S(z))
</figure>
<figureCaption confidence="0.999613">
Figure 1: Nleaning constructors for sentence (23)
</figureCaption>
<bodyText confidence="0.9984705">
constructor and2 is introduced by and in order to
handle cases where there are more than two con-
juncts; this contribution will be used once in the
derivation of the meaning for sentence (23). The
following R-relations result from the f-structural
relationships:
</bodyText>
<construct confidence="0.988203444444444">
R(f , CONJ. fl)
R( f , CONJ, 12)
R( f , CONJ, f3)
R(f SUBJ, g)
R( f2, SUBJ, g)
R( f3, SUBJ, y)
R( f , OBJ, h)
R(f2, OBJ, h)
R( f3, OBJ, h)
</construct>
<bodyText confidence="0.998803333333333">
Following the analysis given in Dalrymple et al.
(1994b), the lexical entry for want takes a quan-
tified NP as an argument. This requires that the
quantified NP meaning be duplicated, since other-
wise no readings result. We provide a special rule
for duplicating quantified NPs when necessary:
</bodyText>
<sectionHeader confidence="0.351729" genericHeader="method">
(25) QNP Duplication:
</sectionHeader>
<construct confidence="0.887339166666667">
(VF, Q.
[V -1, S. (V x. Fx —0 H S(x))
H
—0 [ NH, S. (Vx. x —0 H,S(x))
—0 H -,-+Q(S)]
®[VH, S. (Vx. —o H,S(x))
</construct>
<bodyText confidence="0.9842518">
In the interest of space, again we only show a few
steps of the derivation. Combining the meanings
for Hillary, found, supported, and and, Axiom I,
and R-relations (ii), (iii), (v), (vi), (viii), and (ix),
we can derive:
</bodyText>
<construct confidence="0.493468">
x —0 f,,,,and(found(Hillary, x),
supported(Hillary, x)))
</construct>
<bodyText confidence="0.794745333333333">
We duplicate the meaning of two candidates using
QNP Duplication, and combine one copy with the
foregoing formula to yield:
</bodyText>
<construct confidence="0.79273">
candidate(z),
and(found( Hillary, z),
supported(Hillary, z)))
</construct>
<bodyText confidence="0.99773725">
We then combine the other meaning of two can-
didates with the meanings of Hillary and wanted.
and using Axiom I and R-relations (i), (iv), and
(vii) we obtain:
</bodyText>
<equation confidence="0.694458666666667">
(f CONJ)
wanted(Hillary,
&apos;AQ .two(z, candidate(z),[-Q](z)))
</equation>
<bodyText confidence="0.998518">
Finally, using and2 with the two foregoing formu-
lae, we deduce the desired result:
</bodyText>
<construct confidence="0.729442">
f and(wanted(Hillary,
&amp;quot;AQ .two(x , candidate(x),[-Q](x))).
two(z, candidate(z),
and(found(Hillary, z),
supported( Hillary , z))))
</construct>
<bodyText confidence="0.999963761904762">
We can now specify a Partee and Rooth style pro-
cessing strategy, which is to prefer readings which
require the least use of QNP duplication. This
strategy predicts the readings generated for the
examples in Section 4. It also predicts the de-
sired reading for sentence (23), since that reading
requires two quantifiers. While the reading gener-
ated by Partee and Rooth is derivable, it requires
three quantifiers and thus uses QNP duplication
twice, which is less preferred than the reading re-
quiring two quantifiers which uses QNP duplica-
tion once. Also, it allows some flexibility in cases
where pragmatics strongly suggests that quanti-
fiers are copied and distributed for multiple ex-
tensional verbs; unlike the Partee and Rooth ac-
count, this would apply equally to the case where
there are also intensional verbs and the case where
there are not. Finally, our account readily applies
to cases of intensional verbs without coordination
as in example (10), since it applies more generally
to cases of resource sharing.
</bodyText>
<page confidence="0.999184">
37
</page>
<sectionHeader confidence="0.995026" genericHeader="conclusions">
6 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.9999947">
We have given an account of resource sharing in
the syntax/semantics interface of LEG. The mul-
tiple use of semantic contributions results from
viewing dependencies in f-structures as resources;
in this way the one-to-one correspondence be-
tween f-structure relations and meanings is main-
tained. The resulting account does not suffer from
overgeneration inherent in other approaches, and
applies equally to cases of resource sharing that do
not involve coordination. Furthermore, it lends it-
self readily to an extension for the intensional verb
case that has advantages over the widely-assumed
account of Partee and Rooth (1983).
Here we have separated the issue of arriving at
the appropriate f-structure in the syntax from the
issue of deriving the correct semantics from the
f-structure. We have argued that this is the cor-
rect distinction to make, and have given a treat-
ment of the second issue. A treatment of the first
issue will be articulated in a future forum.
</bodyText>
<sectionHeader confidence="0.997491" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999796571428571">
We would like to thank Sam Bayer, John Maxwell,
Fernando Pereira, Dick Oehrle, Stuart Shieber,
and especially Ron Kaplan for helpful discussion
and comments. The first author was supported in
part by National Science Foundation Grant IRI-
9009018, National Science Foundation Grant IRI-
9350192, and a grant from the Xerox Corporation.
</bodyText>
<sectionHeader confidence="0.99924" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999492611940298">
Mary Dalrymple, John Lamping, and Vijay
Saraswat. 1993a. LEG semantics via con-
straints. In Proceedings of the Sixth Meeting of
the European ACL, University of Utrecht, April.
European Chapter of the Association for Com-
putational Linguistics.
Mary Dalrymple, Angie Hinrichs, John Lamping,
and Vijay Saraswat, 1993b. The resource logic
of complex predicate interpretation. In Proceed-
ings of the 1993 Republic of China Computa-
tional Linguistics Conference (ROCLING), Hsi-
tou National Park, Taiwan, September. Compu-
tational Linguistics Society of R.O.C.
Mary Dalrymple, John Lamping, Fernando C. N.
Pereira, and Vijay Saraswat. 1994a. A de-
ductive account of quantification in LFG. In
Makoto Kanazawa, Christopher J. PiiiOn, and
Henriette de Swart, editors, Quantifiers, De-
duction, and Context. Center for the Study of
Language and Information, Stanford, Califor-
nia. To appear.
Mary Dalrymple, John Lamping, Fernando C. N.
Pereira, and Vijay Saraswat. 1994b. Inten-
sional verbs without type-raising or lexical am-
biguity. In Conference on Information-Oriented
Approaches to Logic, Language and Computa-
tion, Moraga, California. Saint Mary&apos;s College.
J.-Y. Girard. 1987. Linear logic. Theoretical
Computer Science, 45:1-102.
Herman Hendriks. 1993. Studied Flexibility: (&apos;at-
egories and Types in Syntax and Semantics.
ILLC dissertation series 1993-5. University of
Amsterdam, Amsterdam, Holland.
Richard A Hudson. 1976. Conjunction reduc-
tion, gapping, and right-node raising. Lan-
guage, 52(3):535-562.
Ronald M. Kaplan and Joan Bresnan. 1982.
Lexical-Functional Grammar: A formal sys-
tem for grammatical representation. In Joan
Bresnan, editor, The Menial Representation
of Grammatical Relations, pages 173-281. The
MIT Press, Cambridge, MA.
Richard T. Oehrle. 1990. Categorial frame-
works, coordination, and extraction. In Aaron
Halpern, editor, Proceedings of the Ninth 14/(st
Coast Conference on Formal Linguistics, pages
411-425.
Barbara Partee and Mats Rooth. 1983. General-
ized conjunction and type ambiguity. In Rainer
Bauerle, Christoph Schwarze, and Arnim von
Stechow, editors, Meaning, Use, and Interpre-
tation of Language, pages 361-383. de Gruyter.
Berlin.
Mark J. Steedman. 1985. Dependency and coor-
dination in the grammar of Dutch and English.
Language, 61:523-568.
Mark J. Steedman. 1987. Combinatory grammars
and parasitic gaps. Natural Language and Lin-
guistic Theory, 5:403-439.
Mark J. Steedman. 1989. Constituency and coor-
dination in a combinatory grammar. In Mark
Baltin and Anthony Kroch, editors, Alternatirc
Conceptions of Phrase Structure, pages 201
231. Chicago University Press.
Mark J. Steedman. 1990. Gapping as con-
stituent coordination. Linguistics and Philos-
ophy, 13(2):207-263.
</reference>
<page confidence="0.999346">
38
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.502903">
<title confidence="0.965835">The Semantics of Resource Sharing in Lexical-Functional Grammar</title>
<author confidence="0.999595">Andrew Kehler</author>
<affiliation confidence="0.99938">Aiken Computation Lab</affiliation>
<address confidence="0.864709">33 Oxford Street</address>
<affiliation confidence="0.999885">Harvard University</affiliation>
<address confidence="0.999984">Cambridge, MA 02138</address>
<author confidence="0.879476333333333">Mary Dalrymplet John Lampingt Vijay Saraswatt</author>
<affiliation confidence="0.928279">Xerox PARC</affiliation>
<address confidence="0.998996">3333 Coyote Hill Road Palo Alto, CA 94304</address>
<abstract confidence="0.998853727272727">We argue that the resource sharing that is commonly manifest in semantic accounts of coordination is instead appropriately handled in terms of structure-sharing in LFG f-structures. We provide an extension to the previous account of LFG semantics (Dalrymple et al., 1993a) according to which dependencies between f-structures are viewed as resources; as a result a one-to-one correspondence between uses of f-structures and meanings is maintained. The resulting system is sufficiently restricted in cases where other approaches overgenerate; the very property of resourcesensitivity for which resource sharing appears to be problematic actually provides explanatory advantages over systems that more freely replicate resources during derivation.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>John Lamping</author>
<author>Vijay Saraswat</author>
</authors>
<title>LEG semantics via constraints.</title>
<date>1993</date>
<booktitle>In Proceedings of the Sixth Meeting of the European ACL,</booktitle>
<institution>University of Utrecht,</institution>
<contexts>
<context position="1262" citStr="Dalrymple et al., 1993" startWordPosition="182" endWordPosition="185"> correspondence between uses of f-structures and meanings is maintained. The resulting system is sufficiently restricted in cases where other approaches overgenerate; the very property of resourcesensitivity for which resource sharing appears to be problematic actually provides explanatory advantages over systems that more freely replicate resources during derivation. 1 Introduction The resource-based approach to semantic composition in Lexical-Functional Grammar (LFG) obtains the interpretation for a phrase via a logical deduction, beginning with the interpretations of its parts as premises (Dalrymple et al., 1993a). The resource-sensitive system of linear logic is used to compute meanings in accordance with relationships manifest in LFG f-structures. The properties of the system ensure that meanings are used exactly once, allowing coherence and completeness conditions on f-structures (Kaplan and Bresnan, 1982, pages 211-212) to be maintained. However, there are cases where a single constituent appears to yield more than one contribution to the meaning of an utterance. This is most icehlerAdas.harvard.edu Idalrymple,lamping,saraswatl@parc.xerox.com obvious in, but is not limited to, sentences involving</context>
<context position="2570" citStr="Dalrymple et al. (1993" startWordPosition="381" endWordPosition="384">s: (1) Bill supported, and Hillary opposed, NAFTA. Since the hallmark of the linear logic approach is to ensure that f-structure contributions are utilized exactly once in a derivation, such constructions would at first glance appear to be problematic for the approach. We argue that the resource sharing that is commonly manifest in the treatment of coordination in other approaches is appropriately handled by exploiting the structure-sharing in LFG f-structures. We refine our previous analysis to account for cases where an f-structure is reached by multiple paths from an enclosing f-structure. Dalrymple et al. (1993a) provides an account of LFG semantics that represents the meaning of lexical items with linear logic formulas. These formulas manipulate basic assertions of the form for f-structures f and meaning logic terins M. Here a is a mapping, the semantic projection, that relates f-structures to semantic structures. To distinguish between multiple paths entering an f-structure, we now take a to map from sets of paths in f-structures to semantic structures. Further, the paths between f-structures are made available in the semantic space as resources. This makes it possible for the semantic formulas to</context>
<context position="11617" citStr="Dalrymple et al. (1993" startWordPosition="1845" endWordPosition="1848">e glue language is the tensor fragment of linear logic (Girard, 1987). The semantic contribution of each lexical entry, which we will refer to as a meaning constructor, is a linear-logic formula consisting of instructions in the glue language for combining the meanings of the lexical entry&apos;s syntactic arguments to obtain the meaning of the f-structure headed by the entry. For instance, the meaning constructor for the verb supported is a glue language formula paraphrasable as: &amp;quot;If my SUBJ means X and (0) my OBJ means Y, then ( —0 ) my sentence means supported(X, Y)&amp;quot;. In the system described in Dalrymple et al. (1993a), the relation associates expressions in the meaning language with f-structures. As a result, each f-structure contributed a single meaning constructor as a resource to be used in a derivation. Because linear logic does not have any form of logical contraction (as is inherent in 2For discussion of c-structure and its relation to f-structure, see, for example, Kaplan and Bresnan (1982). 33 the approaches discussed earlier), cases where resources are shared appear to be problematic in this framework. Intuitively, however, the need for the multiple use of an f-structure meaning results not from</context>
<context position="13396" citStr="Dalrymple et al. (1993" startWordPosition="2140" endWordPosition="2143">orms and (recursively) f-structures. We will identify an occurrence of an f-structure with a path (from the root) to that occurrence; sets of occurrences of an f-structure can therefore be identified with path sets in the f-structure. We take, then, the domain of the a projection to be path sets in the root f-structure. Only those path sets S are considered which satisfy the property that the extensions of each path in S are identical. Therefore the f-structure reached by each of these paths is identical. Hence from a path set S, we can read off an f-structure S1. In the examples discussed in Dalrymple et al. (1993a) there is a one-to-one correspondence between the set of path sets S and the set of f-structures Si picked out by such path sets, so the two methods yield the same predictions for those cases. Relations between path sets are represented explicitly as resources in the logic by R-relations. 11,-relations are represented as three-place predicates of the form R(F, P, G) which indicate that (the path set) G appears at the end of a path P (of length 1) extending (the path set) F. That is, the f-structure G.f appears at the end of the singleton path P in the f-structure F1. For example, the f-struc</context>
<context position="16512" citStr="Dalrymple et al., 1993" startWordPosition="2695" endWordPosition="2699"> supported(Bill, NAFTA) At each step, universal instantiation and modus ponens are used. A second derivation is also possible, in which supported and NAFTA are combined first and the result is then combined with Bill. The use of linear logic provides a flexible mechanism for deducing meanings of sentences based on their f-structure representations. Accounts of 34 various linguistic phenomena have been developed within the framework on which our extension is based, including quantifiers and anaphora (Dalrymple et at.. 1994a), intensional verbs (Dalrymple et al., 1994b), and complex predicates (Dalrymple et al., 1993b). The logic fits well with the &apos;resource-sensitivity&apos; of natural language semantics: there is a one-to-one correspondence between f-structure relationships and meanings; the multiple use of resources arises from multiple paths to them in the f-structure. In the next section. we show how this system applies to several cases of right-node raising. 4 Examples 4.1. RNR with Coordination First we consider the derivation of the basic case of right-node raising (RNR) illustrated in sentence (1), repeated in (19). (19) Bill supported, and Hillary opposed, NAFTA. The f-structure for example (19) is s</context>
</contexts>
<marker>Dalrymple, Lamping, Saraswat, 1993</marker>
<rawString>Mary Dalrymple, John Lamping, and Vijay Saraswat. 1993a. LEG semantics via constraints. In Proceedings of the Sixth Meeting of the European ACL, University of Utrecht, April. European Chapter of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>Angie Hinrichs</author>
<author>John Lamping</author>
<author>Vijay Saraswat</author>
</authors>
<title>The resource logic of complex predicate interpretation.</title>
<date>1993</date>
<journal>Computational Linguistics Society of R.O.C.</journal>
<booktitle>In Proceedings of the 1993 Republic of China Computational Linguistics Conference (ROCLING), Hsitou National Park,</booktitle>
<location>Taiwan,</location>
<contexts>
<context position="1262" citStr="Dalrymple et al., 1993" startWordPosition="182" endWordPosition="185"> correspondence between uses of f-structures and meanings is maintained. The resulting system is sufficiently restricted in cases where other approaches overgenerate; the very property of resourcesensitivity for which resource sharing appears to be problematic actually provides explanatory advantages over systems that more freely replicate resources during derivation. 1 Introduction The resource-based approach to semantic composition in Lexical-Functional Grammar (LFG) obtains the interpretation for a phrase via a logical deduction, beginning with the interpretations of its parts as premises (Dalrymple et al., 1993a). The resource-sensitive system of linear logic is used to compute meanings in accordance with relationships manifest in LFG f-structures. The properties of the system ensure that meanings are used exactly once, allowing coherence and completeness conditions on f-structures (Kaplan and Bresnan, 1982, pages 211-212) to be maintained. However, there are cases where a single constituent appears to yield more than one contribution to the meaning of an utterance. This is most icehlerAdas.harvard.edu Idalrymple,lamping,saraswatl@parc.xerox.com obvious in, but is not limited to, sentences involving</context>
<context position="2570" citStr="Dalrymple et al. (1993" startWordPosition="381" endWordPosition="384">s: (1) Bill supported, and Hillary opposed, NAFTA. Since the hallmark of the linear logic approach is to ensure that f-structure contributions are utilized exactly once in a derivation, such constructions would at first glance appear to be problematic for the approach. We argue that the resource sharing that is commonly manifest in the treatment of coordination in other approaches is appropriately handled by exploiting the structure-sharing in LFG f-structures. We refine our previous analysis to account for cases where an f-structure is reached by multiple paths from an enclosing f-structure. Dalrymple et al. (1993a) provides an account of LFG semantics that represents the meaning of lexical items with linear logic formulas. These formulas manipulate basic assertions of the form for f-structures f and meaning logic terins M. Here a is a mapping, the semantic projection, that relates f-structures to semantic structures. To distinguish between multiple paths entering an f-structure, we now take a to map from sets of paths in f-structures to semantic structures. Further, the paths between f-structures are made available in the semantic space as resources. This makes it possible for the semantic formulas to</context>
<context position="11617" citStr="Dalrymple et al. (1993" startWordPosition="1845" endWordPosition="1848">e glue language is the tensor fragment of linear logic (Girard, 1987). The semantic contribution of each lexical entry, which we will refer to as a meaning constructor, is a linear-logic formula consisting of instructions in the glue language for combining the meanings of the lexical entry&apos;s syntactic arguments to obtain the meaning of the f-structure headed by the entry. For instance, the meaning constructor for the verb supported is a glue language formula paraphrasable as: &amp;quot;If my SUBJ means X and (0) my OBJ means Y, then ( —0 ) my sentence means supported(X, Y)&amp;quot;. In the system described in Dalrymple et al. (1993a), the relation associates expressions in the meaning language with f-structures. As a result, each f-structure contributed a single meaning constructor as a resource to be used in a derivation. Because linear logic does not have any form of logical contraction (as is inherent in 2For discussion of c-structure and its relation to f-structure, see, for example, Kaplan and Bresnan (1982). 33 the approaches discussed earlier), cases where resources are shared appear to be problematic in this framework. Intuitively, however, the need for the multiple use of an f-structure meaning results not from</context>
<context position="13396" citStr="Dalrymple et al. (1993" startWordPosition="2140" endWordPosition="2143">orms and (recursively) f-structures. We will identify an occurrence of an f-structure with a path (from the root) to that occurrence; sets of occurrences of an f-structure can therefore be identified with path sets in the f-structure. We take, then, the domain of the a projection to be path sets in the root f-structure. Only those path sets S are considered which satisfy the property that the extensions of each path in S are identical. Therefore the f-structure reached by each of these paths is identical. Hence from a path set S, we can read off an f-structure S1. In the examples discussed in Dalrymple et al. (1993a) there is a one-to-one correspondence between the set of path sets S and the set of f-structures Si picked out by such path sets, so the two methods yield the same predictions for those cases. Relations between path sets are represented explicitly as resources in the logic by R-relations. 11,-relations are represented as three-place predicates of the form R(F, P, G) which indicate that (the path set) G appears at the end of a path P (of length 1) extending (the path set) F. That is, the f-structure G.f appears at the end of the singleton path P in the f-structure F1. For example, the f-struc</context>
<context position="16512" citStr="Dalrymple et al., 1993" startWordPosition="2695" endWordPosition="2699"> supported(Bill, NAFTA) At each step, universal instantiation and modus ponens are used. A second derivation is also possible, in which supported and NAFTA are combined first and the result is then combined with Bill. The use of linear logic provides a flexible mechanism for deducing meanings of sentences based on their f-structure representations. Accounts of 34 various linguistic phenomena have been developed within the framework on which our extension is based, including quantifiers and anaphora (Dalrymple et at.. 1994a), intensional verbs (Dalrymple et al., 1994b), and complex predicates (Dalrymple et al., 1993b). The logic fits well with the &apos;resource-sensitivity&apos; of natural language semantics: there is a one-to-one correspondence between f-structure relationships and meanings; the multiple use of resources arises from multiple paths to them in the f-structure. In the next section. we show how this system applies to several cases of right-node raising. 4 Examples 4.1. RNR with Coordination First we consider the derivation of the basic case of right-node raising (RNR) illustrated in sentence (1), repeated in (19). (19) Bill supported, and Hillary opposed, NAFTA. The f-structure for example (19) is s</context>
</contexts>
<marker>Dalrymple, Hinrichs, Lamping, Saraswat, 1993</marker>
<rawString>Mary Dalrymple, Angie Hinrichs, John Lamping, and Vijay Saraswat, 1993b. The resource logic of complex predicate interpretation. In Proceedings of the 1993 Republic of China Computational Linguistics Conference (ROCLING), Hsitou National Park, Taiwan, September. Computational Linguistics Society of R.O.C.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>John Lamping</author>
<author>Fernando C N Pereira</author>
<author>Vijay Saraswat</author>
</authors>
<title>A deductive account of quantification</title>
<date>1994</date>
<booktitle>Deduction, and Context. Center for the Study of Language and Information,</booktitle>
<editor>in LFG. In Makoto Kanazawa, Christopher J. PiiiOn, and Henriette de Swart, editors, Quantifiers,</editor>
<location>Stanford, California.</location>
<note>To appear.</note>
<contexts>
<context position="16462" citStr="Dalrymple et al., 1994" startWordPosition="2687" endWordPosition="2691">TA and combine it with (16) to derive (18): (18) f supported(Bill, NAFTA) At each step, universal instantiation and modus ponens are used. A second derivation is also possible, in which supported and NAFTA are combined first and the result is then combined with Bill. The use of linear logic provides a flexible mechanism for deducing meanings of sentences based on their f-structure representations. Accounts of 34 various linguistic phenomena have been developed within the framework on which our extension is based, including quantifiers and anaphora (Dalrymple et at.. 1994a), intensional verbs (Dalrymple et al., 1994b), and complex predicates (Dalrymple et al., 1993b). The logic fits well with the &apos;resource-sensitivity&apos; of natural language semantics: there is a one-to-one correspondence between f-structure relationships and meanings; the multiple use of resources arises from multiple paths to them in the f-structure. In the next section. we show how this system applies to several cases of right-node raising. 4 Examples 4.1. RNR with Coordination First we consider the derivation of the basic case of right-node raising (RNR) illustrated in sentence (1), repeated in (19). (19) Bill supported, and Hillary opp</context>
<context position="20341" citStr="Dalrymple et al. (1994" startWordPosition="3313" endWordPosition="3316"> 4.2 RNR with Coordination and Quantified NPs We now consider sentence (21), where a quantified NP is shared. (21) Bill supported, and Hillary opposed, two trade bills. Partee and Rooth (1983) observe, and we agree, that the quantifier in such cases only scopes once, resulting in the reading where Bill supported and Hillary opposed the same two bills.&apos; Our analysis predicts this fact in the same way as Partee and Rooth&apos;s analysis does. The meanings contributed by the lexical items and f-structure dependencies are the same as in the previous example, except for that of the object NP. Following Dalrymple et al. (1994a), the meaning derived using the contributions from an f-structure h for two trade bills is: two- trade-bills: VH, S. (Vs. h,,x —0 H S(x)) —o H,,two(z,tradebill(z), S(z)) The derivation is just as before, up until the final step, where we have derived the formula labeled bill-supported-and-hillary-opposed2. This formula matches the antecedent of the quantified NP meaning, so by universal instantiation and modus ponens we derive: f,,,two(z , tradebill(z), and(supported(Bill, z), opposed(Hillary, z))) With this derivation, there is only one quantifier meaning which scopes over the meaning of th</context>
<context position="23978" citStr="Dalrymple et al. (1994" startWordPosition="3918" endWordPosition="3921">nd2: !(VX, Y. (f CONJ) &apos;X Y —0 and(X , Y)) two-candidates:VH, S. (V x. h, X H SW) —0 H --qtoo(z, candidate(z), S(z)) Figure 1: Nleaning constructors for sentence (23) constructor and2 is introduced by and in order to handle cases where there are more than two conjuncts; this contribution will be used once in the derivation of the meaning for sentence (23). The following R-relations result from the f-structural relationships: R(f , CONJ. fl) R( f , CONJ, 12) R( f , CONJ, f3) R(f SUBJ, g) R( f2, SUBJ, g) R( f3, SUBJ, y) R( f , OBJ, h) R(f2, OBJ, h) R( f3, OBJ, h) Following the analysis given in Dalrymple et al. (1994b), the lexical entry for want takes a quantified NP as an argument. This requires that the quantified NP meaning be duplicated, since otherwise no readings result. We provide a special rule for duplicating quantified NPs when necessary: (25) QNP Duplication: (VF, Q. [V -1, S. (V x. Fx —0 H S(x)) H —0 [ NH, S. (Vx. x —0 H,S(x)) —0 H -,-+Q(S)] ®[VH, S. (Vx. —o H,S(x)) In the interest of space, again we only show a few steps of the derivation. Combining the meanings for Hillary, found, supported, and and, Axiom I, and R-relations (ii), (iii), (v), (vi), (viii), and (ix), we can derive: x —0 f,,,</context>
</contexts>
<marker>Dalrymple, Lamping, Pereira, Saraswat, 1994</marker>
<rawString>Mary Dalrymple, John Lamping, Fernando C. N. Pereira, and Vijay Saraswat. 1994a. A deductive account of quantification in LFG. In Makoto Kanazawa, Christopher J. PiiiOn, and Henriette de Swart, editors, Quantifiers, Deduction, and Context. Center for the Study of Language and Information, Stanford, California. To appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>John Lamping</author>
<author>Fernando C N Pereira</author>
<author>Vijay Saraswat</author>
</authors>
<title>Intensional verbs without type-raising or lexical ambiguity.</title>
<date>1994</date>
<booktitle>In Conference on Information-Oriented Approaches to Logic, Language and Computation,</booktitle>
<institution>Saint Mary&apos;s College.</institution>
<location>Moraga, California.</location>
<contexts>
<context position="16462" citStr="Dalrymple et al., 1994" startWordPosition="2687" endWordPosition="2691">TA and combine it with (16) to derive (18): (18) f supported(Bill, NAFTA) At each step, universal instantiation and modus ponens are used. A second derivation is also possible, in which supported and NAFTA are combined first and the result is then combined with Bill. The use of linear logic provides a flexible mechanism for deducing meanings of sentences based on their f-structure representations. Accounts of 34 various linguistic phenomena have been developed within the framework on which our extension is based, including quantifiers and anaphora (Dalrymple et at.. 1994a), intensional verbs (Dalrymple et al., 1994b), and complex predicates (Dalrymple et al., 1993b). The logic fits well with the &apos;resource-sensitivity&apos; of natural language semantics: there is a one-to-one correspondence between f-structure relationships and meanings; the multiple use of resources arises from multiple paths to them in the f-structure. In the next section. we show how this system applies to several cases of right-node raising. 4 Examples 4.1. RNR with Coordination First we consider the derivation of the basic case of right-node raising (RNR) illustrated in sentence (1), repeated in (19). (19) Bill supported, and Hillary opp</context>
<context position="20341" citStr="Dalrymple et al. (1994" startWordPosition="3313" endWordPosition="3316"> 4.2 RNR with Coordination and Quantified NPs We now consider sentence (21), where a quantified NP is shared. (21) Bill supported, and Hillary opposed, two trade bills. Partee and Rooth (1983) observe, and we agree, that the quantifier in such cases only scopes once, resulting in the reading where Bill supported and Hillary opposed the same two bills.&apos; Our analysis predicts this fact in the same way as Partee and Rooth&apos;s analysis does. The meanings contributed by the lexical items and f-structure dependencies are the same as in the previous example, except for that of the object NP. Following Dalrymple et al. (1994a), the meaning derived using the contributions from an f-structure h for two trade bills is: two- trade-bills: VH, S. (Vs. h,,x —0 H S(x)) —o H,,two(z,tradebill(z), S(z)) The derivation is just as before, up until the final step, where we have derived the formula labeled bill-supported-and-hillary-opposed2. This formula matches the antecedent of the quantified NP meaning, so by universal instantiation and modus ponens we derive: f,,,two(z , tradebill(z), and(supported(Bill, z), opposed(Hillary, z))) With this derivation, there is only one quantifier meaning which scopes over the meaning of th</context>
<context position="23978" citStr="Dalrymple et al. (1994" startWordPosition="3918" endWordPosition="3921">nd2: !(VX, Y. (f CONJ) &apos;X Y —0 and(X , Y)) two-candidates:VH, S. (V x. h, X H SW) —0 H --qtoo(z, candidate(z), S(z)) Figure 1: Nleaning constructors for sentence (23) constructor and2 is introduced by and in order to handle cases where there are more than two conjuncts; this contribution will be used once in the derivation of the meaning for sentence (23). The following R-relations result from the f-structural relationships: R(f , CONJ. fl) R( f , CONJ, 12) R( f , CONJ, f3) R(f SUBJ, g) R( f2, SUBJ, g) R( f3, SUBJ, y) R( f , OBJ, h) R(f2, OBJ, h) R( f3, OBJ, h) Following the analysis given in Dalrymple et al. (1994b), the lexical entry for want takes a quantified NP as an argument. This requires that the quantified NP meaning be duplicated, since otherwise no readings result. We provide a special rule for duplicating quantified NPs when necessary: (25) QNP Duplication: (VF, Q. [V -1, S. (V x. Fx —0 H S(x)) H —0 [ NH, S. (Vx. x —0 H,S(x)) —0 H -,-+Q(S)] ®[VH, S. (Vx. —o H,S(x)) In the interest of space, again we only show a few steps of the derivation. Combining the meanings for Hillary, found, supported, and and, Axiom I, and R-relations (ii), (iii), (v), (vi), (viii), and (ix), we can derive: x —0 f,,,</context>
</contexts>
<marker>Dalrymple, Lamping, Pereira, Saraswat, 1994</marker>
<rawString>Mary Dalrymple, John Lamping, Fernando C. N. Pereira, and Vijay Saraswat. 1994b. Intensional verbs without type-raising or lexical ambiguity. In Conference on Information-Oriented Approaches to Logic, Language and Computation, Moraga, California. Saint Mary&apos;s College.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J-Y Girard</author>
</authors>
<title>Linear logic.</title>
<date>1987</date>
<journal>Theoretical Computer Science,</journal>
<pages>45--1</pages>
<contexts>
<context position="11064" citStr="Girard, 1987" startWordPosition="1752" endWordPosition="1753">ving coordination, as is the case in sentence (10). (13) Bill NP (1 FRED) = &apos;BILL&apos; -■,-&gt; Bill supported V (1 PRED)= &apos;SUPPORT&apos; VX, Y. (1 suBJ),,X 0 (1 —o 1, supported(X, ) NAFTA NP FRED) = &apos;NAFTA&apos; NAFTA Semantic information is expressed in (1) a meaning language and (2) a language for assembling meanings, or glue language. The meaning language could be that of any appropriate logic: for present purposes, higher-order logic will suffice. Expressions of the meaning language (such as Bill) appear on the right side of the meaning relation . The glue language is the tensor fragment of linear logic (Girard, 1987). The semantic contribution of each lexical entry, which we will refer to as a meaning constructor, is a linear-logic formula consisting of instructions in the glue language for combining the meanings of the lexical entry&apos;s syntactic arguments to obtain the meaning of the f-structure headed by the entry. For instance, the meaning constructor for the verb supported is a glue language formula paraphrasable as: &amp;quot;If my SUBJ means X and (0) my OBJ means Y, then ( —0 ) my sentence means supported(X, Y)&amp;quot;. In the system described in Dalrymple et al. (1993a), the relation associates expressions in the </context>
</contexts>
<marker>Girard, 1987</marker>
<rawString>J.-Y. Girard. 1987. Linear logic. Theoretical Computer Science, 45:1-102.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Herman Hendriks</author>
</authors>
<title>Studied Flexibility: (&apos;ategories and Types in Syntax and Semantics. ILLC dissertation series 1993-5. University of Amsterdam,</title>
<date>1993</date>
<location>Amsterdam, Holland.</location>
<marker>Hendriks, 1993</marker>
<rawString>Herman Hendriks. 1993. Studied Flexibility: (&apos;ategories and Types in Syntax and Semantics. ILLC dissertation series 1993-5. University of Amsterdam, Amsterdam, Holland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard A Hudson</author>
</authors>
<title>Conjunction reduction, gapping, and right-node raising.</title>
<date>1976</date>
<journal>Language,</journal>
<pages>52--3</pages>
<contexts>
<context position="5114" citStr="Hudson (1976)" startWordPosition="785" endWordPosition="786">nt of cases of right node raising as exemplified by sentence (1). Such examples are handled by a coordination schema which allows like categories to be conjoined, shown in (2). (2) Coordination: X CONJ X r.-4, X This schema gives rise to various actual rules whose semantics depends on the number of arguments that the shared material takes. For the cases of RNR considered here, the rule has the form shown in (3). (3) (coordination) X/Y:F CONJ:&amp; X/Y:G = XIY:Ax.(Fx&amp;Gx) The contraction from Ax.Fx and Ax.Gx to Ax.(Fx&amp;Gx) in this rule allows for the single argument to be utilized twice. As noted by Hudson (1976), however, not all examples of RNR involve coordinate structures: (4) Citizens who support, paraded against politicians who oppose, two trade bills. Obviously, such cases fall outside of the purview of the coordination schema. An analysis for this sentence is available in the CCG framework by the addition of the xsubstitute combinator (Steedman, p.c.), as defined in Steedman (1987). (5) (&lt;xsubstitute) Y/Z:G (X\Y)/Z:F X/Z: Ax.(Fx(Gx)) The use of this combinator assimilates cases of noncoordinate RNR to cases involving parasitic gaps. While this approach has some drawbacks,&apos; we do not offer a co</context>
</contexts>
<marker>Hudson, 1976</marker>
<rawString>Richard A Hudson. 1976. Conjunction reduction, gapping, and right-node raising. Language, 52(3):535-562.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ronald M Kaplan</author>
<author>Joan Bresnan</author>
</authors>
<title>Lexical-Functional Grammar: A formal system for grammatical representation.</title>
<date>1982</date>
<booktitle>The Menial Representation of Grammatical Relations,</booktitle>
<pages>173--281</pages>
<editor>In Joan Bresnan, editor,</editor>
<publisher>The MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="1564" citStr="Kaplan and Bresnan, 1982" startWordPosition="225" endWordPosition="228">s over systems that more freely replicate resources during derivation. 1 Introduction The resource-based approach to semantic composition in Lexical-Functional Grammar (LFG) obtains the interpretation for a phrase via a logical deduction, beginning with the interpretations of its parts as premises (Dalrymple et al., 1993a). The resource-sensitive system of linear logic is used to compute meanings in accordance with relationships manifest in LFG f-structures. The properties of the system ensure that meanings are used exactly once, allowing coherence and completeness conditions on f-structures (Kaplan and Bresnan, 1982, pages 211-212) to be maintained. However, there are cases where a single constituent appears to yield more than one contribution to the meaning of an utterance. This is most icehlerAdas.harvard.edu Idalrymple,lamping,saraswatl@parc.xerox.com obvious in, but is not limited to, sentences involving coordination. In example (1), for instance. NAFTA is the object of two different verbs: (1) Bill supported, and Hillary opposed, NAFTA. Since the hallmark of the linear logic approach is to ensure that f-structure contributions are utilized exactly once in a derivation, such constructions would at fi</context>
<context position="12006" citStr="Kaplan and Bresnan (1982)" startWordPosition="1906" endWordPosition="1909">e, the meaning constructor for the verb supported is a glue language formula paraphrasable as: &amp;quot;If my SUBJ means X and (0) my OBJ means Y, then ( —0 ) my sentence means supported(X, Y)&amp;quot;. In the system described in Dalrymple et al. (1993a), the relation associates expressions in the meaning language with f-structures. As a result, each f-structure contributed a single meaning constructor as a resource to be used in a derivation. Because linear logic does not have any form of logical contraction (as is inherent in 2For discussion of c-structure and its relation to f-structure, see, for example, Kaplan and Bresnan (1982). 33 the approaches discussed earlier), cases where resources are shared appear to be problematic in this framework. Intuitively, however, the need for the multiple use of an f-structure meaning results not from the appearance of a particular lexical item (e.g., a conjunction) or a particular syntactic construction (e.g., parasitic gap constructions), but instead results from multiple paths to it from within the f-structure that contains it, where structure sharing is motivated on syntactic grounds. We therefore revise the earlier framework to model what we will term occurrences of f-structure</context>
</contexts>
<marker>Kaplan, Bresnan, 1982</marker>
<rawString>Ronald M. Kaplan and Joan Bresnan. 1982. Lexical-Functional Grammar: A formal system for grammatical representation. In Joan Bresnan, editor, The Menial Representation of Grammatical Relations, pages 173-281. The MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard T Oehrle</author>
</authors>
<title>Categorial frameworks, coordination, and extraction.</title>
<date>1990</date>
<booktitle>Proceedings of the Ninth 14/(st Coast Conference on Formal Linguistics,</booktitle>
<pages>411--425</pages>
<editor>In Aaron Halpern, editor,</editor>
<contexts>
<context position="4289" citStr="Oehrle (1990)" startWordPosition="645" endWordPosition="646">ntics of coordination and argument shar31 ing. and make note of some of their drawbacks. We describe the revised semantic framework in Section 3. and work through several examples of non-constituent coordination (specifically, rightnode raising) in Section 4. We discuss examples involving intensinual verbs in Section 5. 2 Previous Work 2.1 Combinatory Categorial Grammar Steedman (1985; 1989; 1990), working in the framework of Combinatory Categorial Grammar (CCG), presents what is probably the most adequate analysis of non-constituent coordination to date. As noted by Steedman and discussed by Oehrle (1990), the addition of the rule of function composition to the inventory of syntactic rules in Categorial Grammar enables the formation of constituents with right-peripheral gaps, providing a basis for a clean treatment of cases of right node raising as exemplified by sentence (1). Such examples are handled by a coordination schema which allows like categories to be conjoined, shown in (2). (2) Coordination: X CONJ X r.-4, X This schema gives rise to various actual rules whose semantics depends on the number of arguments that the shared material takes. For the cases of RNR considered here, the rule</context>
</contexts>
<marker>Oehrle, 1990</marker>
<rawString>Richard T. Oehrle. 1990. Categorial frameworks, coordination, and extraction. In Aaron Halpern, editor, Proceedings of the Ninth 14/(st Coast Conference on Formal Linguistics, pages 411-425.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Barbara Partee</author>
<author>Mats Rooth</author>
</authors>
<title>Generalized conjunction and type ambiguity.</title>
<date>1983</date>
<booktitle>Meaning, Use, and Interpretation of Language,</booktitle>
<pages>361--383</pages>
<editor>In Rainer Bauerle, Christoph Schwarze, and Arnim von Stechow, editors,</editor>
<location>Berlin.</location>
<contexts>
<context position="6128" citStr="Partee and Rooth (1983)" startWordPosition="943" endWordPosition="946">&lt;xsubstitute) Y/Z:G (X\Y)/Z:F X/Z: Ax.(Fx(Gx)) The use of this combinator assimilates cases of noncoordinate RNR to cases involving parasitic gaps. While this approach has some drawbacks,&apos; we do not offer a competing analysis of the syntax of sentences like (4) here. Rather, we seek an analysis of RNR (and of resource sharing in general) that is uniform in the semantics; such a treatment isn&apos;t available in CCG because of its tight integration between syntax and semantics. 2.2 Partee and Rooth Perhaps the most influential and widely-adopted semantic treatment of coordination is the approach of Partee and Rooth (1983). They propose a generalized conjunction scheme in which conjuncts of the same type can be combined. s is the case with Steedman&apos;s operators, contraction inherent in the schema allows for a single shared argument to be distributed as an argument of each conjunct. Type-lifting is allowed to produce like types when necessary: the combination of the coordination scheme and type-lifting can have the effect of &apos;copying&apos; an argument of higher type, such as a quantifier in the case of coordinated intensional verbs. They propose a &apos;processing strategy&apos; requiring that expressions are interpreted at the</context>
<context position="19911" citStr="Partee and Rooth (1983)" startWordPosition="3240" endWordPosition="3243">ip some intermediate steps in the derivation. FRED &apos;SUPPORT&apos; [ : SUBJ g:{PFtED &apos;BILL&apos;] OBJ h:{ FRED &apos;NAFTA* PRED &apos;OPPOSE&apos; SUBJ [ PRED &apos;HILLARY&apos; OBJ 35 Finally. consuming the contribution of NAFTA, by universal instantiation and modus ponens we obtain a meaning for the whole sentence: and(supported( Bill, NAFTA), opposed( Hillary, NAFTA)) At this stage, all accountable resources have been consumed, and the deduction is complete. 4.2 RNR with Coordination and Quantified NPs We now consider sentence (21), where a quantified NP is shared. (21) Bill supported, and Hillary opposed, two trade bills. Partee and Rooth (1983) observe, and we agree, that the quantifier in such cases only scopes once, resulting in the reading where Bill supported and Hillary opposed the same two bills.&apos; Our analysis predicts this fact in the same way as Partee and Rooth&apos;s analysis does. The meanings contributed by the lexical items and f-structure dependencies are the same as in the previous example, except for that of the object NP. Following Dalrymple et al. (1994a), the meaning derived using the contributions from an f-structure h for two trade bills is: two- trade-bills: VH, S. (Vs. h,,x —0 H S(x)) —o H,,two(z,tradebill(z), S(z)</context>
<context position="26921" citStr="Partee and Rooth (1983)" startWordPosition="4389" endWordPosition="4392">have given an account of resource sharing in the syntax/semantics interface of LEG. The multiple use of semantic contributions results from viewing dependencies in f-structures as resources; in this way the one-to-one correspondence between f-structure relations and meanings is maintained. The resulting account does not suffer from overgeneration inherent in other approaches, and applies equally to cases of resource sharing that do not involve coordination. Furthermore, it lends itself readily to an extension for the intensional verb case that has advantages over the widely-assumed account of Partee and Rooth (1983). Here we have separated the issue of arriving at the appropriate f-structure in the syntax from the issue of deriving the correct semantics from the f-structure. We have argued that this is the correct distinction to make, and have given a treatment of the second issue. A treatment of the first issue will be articulated in a future forum. Acknowledgements We would like to thank Sam Bayer, John Maxwell, Fernando Pereira, Dick Oehrle, Stuart Shieber, and especially Ron Kaplan for helpful discussion and comments. The first author was supported in part by National Science Foundation Grant IRI9009</context>
</contexts>
<marker>Partee, Rooth, 1983</marker>
<rawString>Barbara Partee and Mats Rooth. 1983. Generalized conjunction and type ambiguity. In Rainer Bauerle, Christoph Schwarze, and Arnim von Stechow, editors, Meaning, Use, and Interpretation of Language, pages 361-383. de Gruyter. Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark J Steedman</author>
</authors>
<title>Dependency and coordination in the grammar of Dutch</title>
<date>1985</date>
<pages>61--523</pages>
<contexts>
<context position="4063" citStr="Steedman (1985" startWordPosition="611" endWordPosition="612">sitivity for which resource sharing appears to be problematic actually provides explanatory advantages over systems that more freely replicate resources during derivation. In Section 2, we review previous approaches to the semantics of coordination and argument shar31 ing. and make note of some of their drawbacks. We describe the revised semantic framework in Section 3. and work through several examples of non-constituent coordination (specifically, rightnode raising) in Section 4. We discuss examples involving intensinual verbs in Section 5. 2 Previous Work 2.1 Combinatory Categorial Grammar Steedman (1985; 1989; 1990), working in the framework of Combinatory Categorial Grammar (CCG), presents what is probably the most adequate analysis of non-constituent coordination to date. As noted by Steedman and discussed by Oehrle (1990), the addition of the rule of function composition to the inventory of syntactic rules in Categorial Grammar enables the formation of constituents with right-peripheral gaps, providing a basis for a clean treatment of cases of right node raising as exemplified by sentence (1). Such examples are handled by a coordination schema which allows like categories to be conjoined,</context>
</contexts>
<marker>Steedman, 1985</marker>
<rawString>Mark J. Steedman. 1985. Dependency and coordination in the grammar of Dutch and English. Language, 61:523-568.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark J Steedman</author>
</authors>
<title>Combinatory grammars and parasitic gaps.</title>
<date>1987</date>
<booktitle>Natural Language and Linguistic Theory,</booktitle>
<pages>5--403</pages>
<contexts>
<context position="5498" citStr="Steedman (1987)" startWordPosition="843" endWordPosition="844">e rule has the form shown in (3). (3) (coordination) X/Y:F CONJ:&amp; X/Y:G = XIY:Ax.(Fx&amp;Gx) The contraction from Ax.Fx and Ax.Gx to Ax.(Fx&amp;Gx) in this rule allows for the single argument to be utilized twice. As noted by Hudson (1976), however, not all examples of RNR involve coordinate structures: (4) Citizens who support, paraded against politicians who oppose, two trade bills. Obviously, such cases fall outside of the purview of the coordination schema. An analysis for this sentence is available in the CCG framework by the addition of the xsubstitute combinator (Steedman, p.c.), as defined in Steedman (1987). (5) (&lt;xsubstitute) Y/Z:G (X\Y)/Z:F X/Z: Ax.(Fx(Gx)) The use of this combinator assimilates cases of noncoordinate RNR to cases involving parasitic gaps. While this approach has some drawbacks,&apos; we do not offer a competing analysis of the syntax of sentences like (4) here. Rather, we seek an analysis of RNR (and of resource sharing in general) that is uniform in the semantics; such a treatment isn&apos;t available in CCG because of its tight integration between syntax and semantics. 2.2 Partee and Rooth Perhaps the most influential and widely-adopted semantic treatment of coordination is the appro</context>
</contexts>
<marker>Steedman, 1987</marker>
<rawString>Mark J. Steedman. 1987. Combinatory grammars and parasitic gaps. Natural Language and Linguistic Theory, 5:403-439.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark J Steedman</author>
</authors>
<title>Constituency and coordination in a combinatory grammar.</title>
<date>1989</date>
<booktitle>In Mark Baltin and Anthony Kroch, editors, Alternatirc Conceptions of Phrase Structure,</booktitle>
<pages>201--231</pages>
<publisher>Chicago University Press.</publisher>
<marker>Steedman, 1989</marker>
<rawString>Mark J. Steedman. 1989. Constituency and coordination in a combinatory grammar. In Mark Baltin and Anthony Kroch, editors, Alternatirc Conceptions of Phrase Structure, pages 201 231. Chicago University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark J Steedman</author>
</authors>
<title>Gapping as constituent coordination.</title>
<date>1990</date>
<journal>Linguistics and Philosophy,</journal>
<pages>13--2</pages>
<marker>Steedman, 1990</marker>
<rawString>Mark J. Steedman. 1990. Gapping as constituent coordination. Linguistics and Philosophy, 13(2):207-263.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>