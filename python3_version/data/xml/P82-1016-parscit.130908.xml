<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000184">
<title confidence="0.632685">
An Improved Heuristic for Ellipsis Processing*
</title>
<author confidence="0.89991">
Ralph M. Weischedel
</author>
<affiliation confidence="0.9663005">
Department of Computer &amp; Information Sciences
University of Delaware
</affiliation>
<address confidence="0.432413">
Newark, Delaware 19711
</address>
<sectionHeader confidence="0.95915" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.974787555555556">
Robust response to ellipsis (fragmen-
tary sentences) is essential to acceptable
natural language interfaces. For in-
stance, an experiment with the REL English
query system showed 10$ elliptical input
(Thompson, 1980).
In Quirk, et al. (1972), three types
of contextual ellipsis have been identi-
fied:
</bodyText>
<listItem confidence="0.953856714285714">
1. repetition, if the utterance is a
fragment of the previous sentence.
2. replacement, if the input replaces a
structure in the previous sentence.
3. expansion, if the input adds a new
type of structure to those used in the
previous sentence.
</listItem>
<bodyText confidence="0.808886333333333">
Instances of the three types appear in
the following example.
Were you angry?
</bodyText>
<listItem confidence="0.929648222222222">
a) I was. (repetiion with
change in person)
b) Furious. (replacement)
c) Probably. (expansion)
d) For a time. (expansion)
e) Very. (expansion)
f) I did not want to be. (expansion)
g) Yesterday I was. (expansion &amp;
repetition)
</listItem>
<bodyText confidence="0.95766455">
In addition to appearing as answers fol-
lowing questions, any of the three types
can appear in questions following state-
ments, statements following statements, or
in the utterances of a single speaker.
This paper presents a method of au-
tomatically interpreting ellipsis based on
dialogue context. Our method expands on
previous work by allowing for expansion
ellipsis and by allowing for all combina-
tions of statement following question,
question following statement, question
following question, etc.
*This material is based upon work partially sup-
ported by the National Science Foundation under
Grant No. IST-8009673.
and Norman K. Sondheimer
Software Research
Sperry Univac MS 2G3
Blue Bell, Pennsylvania 19424
</bodyText>
<sectionHeader confidence="0.997236" genericHeader="related work">
2. Related Work
</sectionHeader>
<bodyText confidence="0.999181391304348">
Several natural language systems
(e.g., Bobrow at al., 1977; Hendrix et
al., 1978; Kwasny and Sondheimer, 1979)
include heuristics for replacement and
repetition ellipsis, but not expansion
ellipsis. One general strategy has been
to substitute fragments into the analysis
of the previous input, e.g., substituting
parse trees of the elliptical input into
the parse trees of the previous input in
LIFER (Hendrix, et al., 1978). This only
applies to inputs of the same type, e.g.,
repeated questions.
Allen (1979) deals with some examples
of expansion ellipsis, by fitting a parsed
elliptical input into a model of the
speaker&apos;s plan. This is similar to other
methods that interpret fragments by plac-
ing them into prepared fields in frames or
case slots (Schank et al., 1980; Hayes and
Mouradian, 1980; Waltz, 1978). This ap-
proach seems most applicable to limited-
domain systems.
</bodyText>
<sectionHeader confidence="0.920343" genericHeader="method">
3. The Heuristic
</sectionHeader>
<bodyText confidence="0.999881166666667">
There are three aspects to our solu-
tion: a mechanism for repetition and
replacement ellipsis, an extension for
inputs of different types, such as frag-
mentary answers to questions, and an ex-
tension for expansion ellipsis.
</bodyText>
<subsectionHeader confidence="0.98983">
3.1 Repetition and Replacement
</subsectionHeader>
<bodyText confidence="0.999958230769231">
As noted above, repetition and re-
placement ellipsis can be viewed as sub-
stitution in the previous form. We have
implemented this notion in an augmented
transition network (ATN) grammar inter-
preter with the assumption that the &amp;quot;pre-
vious form&amp;quot; is the complete ATN path that
parsed the previous input and that the
lexical items consumed along that path are
associated with the arcs that consumed
them. In ellipsis mode, the ATN inter-
preter executes the path using the ellipt-
ical input in the following way:
</bodyText>
<page confidence="0.998594">
85
</page>
<listItem confidence="0.967765733333333">
1. Words from the elliptical input,
i.e., the current input, may be con-
sumed along the path at any point.
2. Any arc requiring a word not found
in the current input may be
traversed using the lexical item
associated with the arc from the
previous input.
3. However, once the path consumes the
first word from the elliptical
input, all words from the elliptical
input must be consumed before an arc
can use a word from the previous
input.
4. Traversing a PUSH arc may be accom-
</listItem>
<bodyText confidence="0.944239333333333">
plished either by following the sub-
path of the previous input or by
finding any constituent of the re-
quired type in the current input.
The entire ATN can be used in these
cases.
Suppose that the path for &amp;quot;Were you
angry?&amp;quot; is given by Table 1. Square
brackets are used to indicate subpaths
resulting from PUSHes. &amp;quot;...&amp;quot; indicates
tests and actions which are irrelevant to
the current discussion.
</bodyText>
<figure confidence="0.302750333333333">
Old Lexical
State Arc Item
S ,,
(CAT COPULA ... (TO Sx)) were&amp;quot;
Sx (PUSH NP ... (TO Sy))
LNP (CAT PRO ... (TO NPa)) &amp;quot;you&amp;quot; 3
NPa (POP ...)
Sy (CAT ADJ ... (TO Sz)) &amp;quot;angry&amp;quot;
Sz (POP ...)
</figure>
<tableCaption confidence="0.570766">
Table 1
</tableCaption>
<bodyText confidence="0.993896733333333">
An ATN Path for &amp;quot;Were you Angry?&amp;quot;
An elliptical input of &amp;quot;Was he?&amp;quot; fol-
lowing &amp;quot;Were you angry?&amp;quot; could be under-
stood by traversing all of the arcs as in
Table 1. Following point 1 above, &amp;quot;was&amp;quot;
and &amp;quot;he&amp;quot; would be substituted for &amp;quot;were&amp;quot;
and &amp;quot;you&amp;quot;. Following point 3, in travers-
ing the arc (CAT ADJ (TO Sz)) the lex-
ical item &amp;quot;angry&amp;quot; from the previous input
would be used. Item 4 is illustrated by
an elliptical input of &amp;quot;Was the old man?&amp;quot;;
this is understood by traversing the arcs
at the S level of Table 1, but using the
appropriate path in the NP network to
parse &amp;quot;the old man&amp;quot;.
</bodyText>
<subsectionHeader confidence="0.970504">
3.2 Transformations of the Previous Form
</subsectionHeader>
<bodyText confidence="0.993901952380952">
While the approach illustrated in
Section 3.1 is useful in a data base query
environment where Plliptical input typi-
cally is a modification of the previous
query, it does not account for elliptical
statements following questions, elliptical
questions following statements, etc. Our
approach to the problem is to write a set
of transformations which map the parse
path of a question (e.g., Table 1) into an
expected parse path for a declarative
response, and the parse .path for a de-
clarative into a path for an expected
question, etc.
The left-hand side of a transforma-
tion is a pattern which is matched against
the ATN path of the previous utterance.
Pattern elements include literals refer-
ring to arcs, variables which match a sin-
gle arc or embedded path, variables which
match zero or more arcs, and sets of al-
ternatives. It is straightforward to con-
struct a discrimination net corresponding
to all left-hand sides for efficiently
finding what patterns match the ATN path
of the previous sentence. The right-hand
side of a transformation is a pattern
which constructs an expected path. The
form of the pattern on the right-hand side
is a list of references to states, arcs,
and lexical entries. Such references can
be made through items matched on the
left-hand side or by explicit construction
of literal path elements.
Our technique is to restrict the map-
ping such that any expected parse path is
generated by applying only one transforma-
tion and applying it only once. A special
feature of our transformational system is
the automatic allowance for dialogue
diexis. An expected parse path for the
answer to &amp;quot;Were you angry?&amp;quot; is given in
</bodyText>
<tableCaption confidence="0.920734">
Table 2. Note in Table 2, &amp;quot;you&amp;quot; has be-
come &amp;quot;I&amp;quot; and &amp;quot;were&amp;quot; has become &amp;quot;was&amp;quot;.
</tableCaption>
<table confidence="0.98354325">
Old Lexical
State Arc Item
S (PUSH NP (TO Sa))
INP (CAT PRO ... (TO NPa))
NPa (POP ...)
Sa (CAT COPULA ... (TO Sy)) &amp;quot;was&amp;quot;
Sy (CAT ADJ (TO Sz)) &amp;quot;angry&amp;quot;
Sz (POP ...)
</table>
<tableCaption confidence="0.979733">
Table 2
</tableCaption>
<bodyText confidence="0.984995666666667">
Declarative for the expected answer
for &amp;quot;Were you angry?&amp;quot;.
Using this path, the ellipsis interpreter
described in Section 3.1 would understand
the ellipses in &amp;quot;a)&amp;quot; and &amp;quot;b)&amp;quot;, below, in
the same way as &amp;quot;a&apos;)&amp;quot; and &amp;quot;b&apos;)&amp;quot;.
</bodyText>
<figure confidence="0.987241">
a) I was.
a&apos;) I was angry.
b) My spouse was.
b&apos;) My spouse was angry.
</figure>
<page confidence="0.909983">
86
</page>
<subsectionHeader confidence="0.91881">
3.3 Expansions
</subsectionHeader>
<bodyText confidence="0.99991435">
A large class of expansions are sim-
ple adjuncts, such as examples c, d, e,
and g in section 1. We have handled this
by building our ellipsis interpreter to
allow departing from the base path at
designated states to consume an adjunct
from the input string. We mark states in
the grammar where adjuncts can occur. For
each such state, we list a set of linear
(though possibly cyclic) paths, called
&amp;quot;expansion paths&amp;quot;. Our interpreter as
implemented allows departures from the
base path at any state so marked in the
grammar; it follows expansion paths by
consuming words from the input string, and
must return to a state on the base form.
Each of the examples in c, d, e, and g of
section 1 can be handled by expansion
paths only one arc long. They are given
in Table 3.
</bodyText>
<figure confidence="0.975292666666667">
Initial
State Expansion Path
S (PUSH ADVERB ... (TO S))
Probably (I was angry).
S (PUSH PP ... (TO S))
For a time (I was angry).
S (PUSH NP
(* this includes a test
that the NP is one
of time or place)
... (TO S))
Yesterday (I was angry).
Sy (PUSH INTENSIFIER-ADVERB
... (TO Sy))
(I was) very (angry).
</figure>
<tableCaption confidence="0.821182">
Table 3
</tableCaption>
<sectionHeader confidence="0.264018" genericHeader="method">
Example Expansion Paths
</sectionHeader>
<bodyText confidence="0.999832">
Since this is an extension to the ellipsis
interpreter, combinations of repetition,
replacement, and expansion can all be han-
dled by the one mechanism. For instance,
in response to &amp;quot;Were you angry?&amp;quot;, &amp;quot;Yester-
day you were (angry)&amp;quot; would be treated
using the expansion and replacement
mechanisms.
</bodyText>
<sectionHeader confidence="0.721513" genericHeader="method">
4. Special Cases and Limitations
</sectionHeader>
<bodyText confidence="0.999850361111111">
The ideal model of contextual el-
lipsis would correctly predict what are
appropriate elliptical forms in context,
what their interpretation is, and what
forms are not meaningful in context. We
believe this requires structural restric-
tions, semantic constraints, and a model
of the goals of the speaker. Our heuris-
tic does not meet these criteria in a
number of cases.
Only two classes of structural con-
straints are captured. One relates the
ellipsis to the previous form as a combi-
nation of repetition, replacement, and
expansion. The other constraint is that
the input must be consumed as a contiguous
string. This constraint is violated, for
instance, in &amp;quot;I was (angry) yesterday&amp;quot; as
a response to &amp;quot;Were you angry?&amp;quot;.
Nevertheless, the constraint is computa-
tionally useful, since allowing arbitrary
gaps in consuming the elliptical input
produces a very large space of correct
interpretations. A ludicrous example is
the following question and elliptical
response:
Has the boss given our mutual friend a
raise?
A fat raise.
Allowing arbitrary gaps between the sub-
strings of the ellipsis allows an in-
terpretation such as &amp;quot;A (boss has given
our) fat (friend a) raise.&amp;quot;
While it may be possible to view all
contextual ellipsis as combinations of the
operations repetition, replacement, and
expansion applied to something, our model
makes the strong assumption that these
operations may be viewed as applying to an
ATN path rather straightforwardly related
to the previous utterance. Not all expan-
sions can be viewed that way, as example f
in Section 1 illustrates. Also, answers
of &amp;quot;No&amp;quot; require special processing; that
response in answer to &amp;quot;Were you angry&amp;quot;
should not be interpreted as &amp;quot;No, I was
angry.&amp;quot; One should be able to account for
such examples within the heuristic
described in this paper, perhaps by allow-
ing the transformation system described in
section 3.2 to be completely general rath-
er than strongly restricted to one and
only one transformation application. How-
ever, we propose handling such cases by
special purpose rules we are developing.
These rules for the special cases, plus
the mechanism described in section 3 to-
gether will be formally equivalent in
predictive power to a grammar for ellipti-
cal forms.
Though the heuristic is independent
of the individual grammar, designating
expansion paths and transformations obvi-
ously is not. The grammar may make this
an easy or difficult task. For instance
in the grammar we are using, a subnetwork
that collects all tense, aspect, and mo-
dality elements would simplify Some of the
transformations and expansion paths.
Naturally, semantics must play an
important part in ellipsis processing.
Consider the utterance pair below:
</bodyText>
<page confidence="0.996295">
87
</page>
<bodyText confidence="0.999152333333333">
Did the boss have a martini at lunch?
Some wine.
Though syntactically this could be inter-
preted either as &amp;quot;Some wine (did have a
martini at lunch)&amp;quot;, &amp;quot;(The boss did have)
some wine (at lunch)&amp;quot;, or &amp;quot;(The boss did
have a martini at) some wine&amp;quot;. Semantics
should prefer the second reading. We are
testing our heuristic using the RUS gram-
mar (Bobrow, 1978) which has frequent
calls from the grammar requesting that the
semantic component decide whether to build
a semantic interpretation for the partial
parse found or to veto that partial parse.
This should aid performance.
</bodyText>
<sectionHeader confidence="0.786396" genericHeader="evaluation">
5. Summary and Conclusion
</sectionHeader>
<bodyText confidence="0.999811666666666">
There are three aspects to our
solution: a mechanism for repetition and
replacement ellipsis, an extension for
inputs of different types, such as frag-
mentary answers to questions, and an ex-
tension for expansion ellipsis.
Our heuristic deals with the three
types of expansion ellipsis as follows:
Repetition ellipsis is processed by re-
peating specific parts of a transformed
previous path using the same phrases as in
the transformed form (&amp;quot;I was angry&amp;quot;).
Replacement ellipsis is processed by sub-
stituting the elliptical input for contig-
uous constituents on a transformed previ-
ous path. Expansion ellipsis may be pro-
cessed by taking specially marked paths
that detour from a given state in that
&apos;path. Combinations of the three types of
ellipsis are represented by combinations
of the three variations in a transformed
previous path.
There are two contributions of the
work. First, our method allows for expan-
sion ellipsis. Second, it accounts for
combinations of previous sentence form and
ellided form, e.g., statement following
question, question following statement,
question following question. Furthermore,
the method works without any constraints
on the ATN grammar. The heuristics carry
over to formalisms similar to the ATN,
such as context-free grammars and augment-
ed phrase structure grammars.
Our study of ellipsis is part of a
much broader framework we are developing
for processing syntactically and/or
semantically ill-formed input; see
Weischedel and Sondheimer (1981).
</bodyText>
<sectionHeader confidence="0.980286" genericHeader="conclusions">
Acknowledgement
</sectionHeader>
<bodyText confidence="0.761725">
Much credit is due to Amir Razi for
his programming assistance.
</bodyText>
<sectionHeader confidence="0.818121" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99935994">
Allen, James F., &amp;quot;A Plan-Based Approach to
Speech Act Recognition,&amp;quot; Ph.D. Thesis,
Dept. of&apos;Computer Science, University of
Toronto, Toronto, Canada, 1979,
Bobrow, D., R. Kaplan, M. Kay, D. Norman,
H. Thompson and T. Winograd, &amp;quot;GUS, A
Frame-driven Dialog System&amp;quot;, Artificial
Intelligence, 8, (1977), 155-173.
Bobrow, R., &amp;quot;The BUS System&amp;quot;, in Research
in Natural Language Understanding, by B.
Webber and R. Bobrow, BBN Report No. 3878,
Bolt Beranek and Newman, Inc., Cambridge,
MA, 1978.
Hayes, P. and G. Mouradian, &amp;quot;Flexible
Parsing&amp;quot;, in Proc. of the 18th Annual
Meeting of the Assoc. for Comp. Ling.,
Philadelphia, June, 1980, 97-103.
Hendrix, G., E. Sacerdoti, D. Sagalowicz
and J. Slocum, &amp;quot;Developing a Natural
Language Interface to Complex Data&amp;quot;, ACM
Trans. on Database Sys., 3, 2, (197-g7
105-147.
Kwasny, S. and N. Sondheimer, &amp;quot;Ungrammati-
cality and Extragrammaticality in Natural
Language Understanding Systems&amp;quot;, in Proc.
of the 17th Annual Meeting of the Assoc.
for Comp. Ling., San Diego, August, 1979,
19-23,
Quirk, R., S. Greenbaum, G. Leech and J.
Svartvik, A Grammar of Contempory English,
Seminar Press, New York, 1972.
Schenk, R., M. Lebowitz and L. Birnbaum,
&amp;quot;An Integrated Understander&amp;quot;, American
Journal of Comp. Ling., 6, 1, (1980),
13-30.
Thompson, B. H., &amp;quot;Linguistic Analysis of
Natural Language Communication with Com-
puters&amp;quot;, Proceedings of the Eighth
International Conference on Computational
Linguistics, Tokyo, October, 1980,
190-201.
Waltz, D., &amp;quot;An English Language Question
Answering System for a Large Relational
Database&amp;quot;, Comm. ACM, 21, 7, (1978),
526-539.
Weischedel, Ralph M. and Norman K. Son-
dheimer, &amp;quot;A Framework for Processing III-
Formed Input&amp;quot;, Technical Report, Dept. of
Computer &amp; Informati Sciences, Universi-
ty of Delaware, Newark, DE, 1981.
</reference>
<page confidence="0.999405">
88
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.99944">An Improved Heuristic for Ellipsis Processing*</title>
<author confidence="0.999991">Ralph M Weischedel</author>
<affiliation confidence="0.9999">Department of Computer &amp; Information Sciences University of Delaware</affiliation>
<address confidence="0.990746">Newark, Delaware 19711</address>
<abstract confidence="0.998300390243903">Robust response to ellipsis (fragmentary sentences) is essential to acceptable natural language interfaces. For instance, an experiment with the REL English query system showed 10$ elliptical input (Thompson, 1980). In Quirk, et al. (1972), three types of contextual ellipsis have been identified: 1. repetition,if the utterance is a fragment of the previous sentence. 2. replacement,if the input replaces a structure in the previous sentence. 3. expansion,if the input adds a new type of structure to those used in the previous sentence. Instances of the three types appear in the following example. Were you angry? a) I was. (repetiion with change in person) b) Furious. (replacement) c) Probably. (expansion) d) For a time. (expansion) e) Very. (expansion) f) I did not want to be. (expansion) g) Yesterday I was. (expansion &amp; repetition) In addition to appearing as answers following questions, any of the three types can appear in questions following statements, statements following statements, or in the utterances of a single speaker. This paper presents a method of automatically interpreting ellipsis based on dialogue context. Our method expands on previous work by allowing for expansion ellipsis and by allowing for all combinations of statement following question, question following statement, question following question, etc.</abstract>
<note confidence="0.640297">This material is based upon work partially supported by the National Science Foundation under Grant No. IST-8009673.</note>
<author confidence="0.993423">Norman K Sondheimer</author>
<affiliation confidence="0.997801">Software Research</affiliation>
<address confidence="0.742924">Sperry Univac MS 2G3 Blue Bell, Pennsylvania 19424</address>
<abstract confidence="0.994353109589041">2. Related Work Several natural language systems (e.g., Bobrow at al., 1977; Hendrix et al., 1978; Kwasny and Sondheimer, 1979) include heuristics for replacement and repetition ellipsis, but not expansion ellipsis. One general strategy has been to substitute fragments into the analysis of the previous input, e.g., substituting parse trees of the elliptical input into the parse trees of the previous input in LIFER (Hendrix, et al., 1978). This only applies to inputs of the same type, e.g., repeated questions. with some examples of expansion ellipsis, by fitting a parsed elliptical input into a model of the speaker&apos;s plan. This is similar to other methods that interpret fragments by placing them into prepared fields in frames or case slots (Schank et al., 1980; Hayes and Mouradian, 1980; Waltz, 1978). This approach seems most applicable to limiteddomain systems. The There are three aspects to our solution: a mechanism for repetition and replacement ellipsis, an extension for inputs of different types, such as fragmentary answers to questions, and an extension for expansion ellipsis. 3.1 Repetition and Replacement As noted above, repetition and reellipsis can be viewed as substitution in the previous form. We have implemented this notion in an augmented transition network (ATN) grammar interpreter with the assumption that the &amp;quot;previous form&amp;quot; is the complete ATN path that parsed the previous input and that the lexical items consumed along that path are associated with the arcs that consumed them. In ellipsis mode, the ATN interpreter executes the path using the elliptical input in the following way: 85 1. Words from the elliptical input, i.e., the current input, may be consumed along the path at any point. 2. Any arc requiring a word not found in the current input may be traversed using the lexical item associated with the arc from the previous input. 3. However, once the path consumes the first word from the elliptical input, all words from the elliptical input must be consumed before an arc can use a word from the previous input. 4. Traversing a PUSH arc may be accomplished either by following the subpath of the previous input or by finding any constituent of the required type in the current input. The entire ATN can be used in these cases. Suppose that the path for &amp;quot;Were you angry?&amp;quot; is given by Table 1. Square brackets are used to indicate subpaths resulting from PUSHes. &amp;quot;...&amp;quot; indicates tests and actions which are irrelevant to the current discussion.</abstract>
<title confidence="0.838679">Old Lexical StateArc Item</title>
<author confidence="0.617912">S</author>
<note confidence="0.794789142857143">CAT COPULA ... (TO Sx)) were&amp;quot; Sx (PUSH NP ... (TO Sy)) LNP PRO ... (TO NPa)) &amp;quot;you&amp;quot; 3 NPa (POP ...) Sy (CAT ADJ ... (TO Sz)) &amp;quot;angry&amp;quot; Sz (POP ...) Table 1</note>
<title confidence="0.784982">An ATN Path for &amp;quot;Were you Angry?&amp;quot;</title>
<abstract confidence="0.995521152542373">An elliptical input of &amp;quot;Was he?&amp;quot; following &amp;quot;Were you angry?&amp;quot; could be understood by traversing all of the arcs as in Table 1. Following point 1 above, &amp;quot;was&amp;quot; and &amp;quot;he&amp;quot; would be substituted for &amp;quot;were&amp;quot; &amp;quot;you&amp;quot;. Following point 3, in traversthe arc (CAT ADJ (TO Sz)) the ical item &amp;quot;angry&amp;quot; from the previous input would be used. Item 4 is illustrated by an elliptical input of &amp;quot;Was the old man?&amp;quot;; this is understood by traversing the arcs at the S level of Table 1, but using the appropriate path in the NP network to parse &amp;quot;the old man&amp;quot;. 3.2 Transformations of the Previous Form While the approach illustrated in Section 3.1 is useful in a data base query environment where Plliptical input typiis a modification of previous query, it does not account for elliptical statements following questions, elliptical questions following statements, etc. Our approach to the problem is to write a set of transformations which map the parse path of a question (e.g., Table 1) into an expected parse path for a declarative response, and the parse .path for a declarative into a path for an expected question, etc. The left-hand side of a transformation is a pattern which is matched against the ATN path of the previous utterance. Pattern elements include literals referring to arcs, variables which match a single arc or embedded path, variables which match zero or more arcs, and sets of alternatives. It is straightforward to construct a discrimination net corresponding to all left-hand sides for efficiently finding what patterns match the ATN path of the previous sentence. The right-hand side of a transformation is a pattern which constructs an expected path. The form of the pattern on the right-hand side is a list of references to states, arcs, and lexical entries. Such references can be made through items matched on the left-hand side or by explicit construction of literal path elements. Our technique is to restrict the mapping such that any expected parse path is generated by applying only one transformation and applying it only once. A special feature of our transformational system is the automatic allowance for dialogue diexis. An expected parse path for the answer to &amp;quot;Were you angry?&amp;quot; is given in Table 2. Note in Table 2, &amp;quot;you&amp;quot; has become &amp;quot;I&amp;quot; and &amp;quot;were&amp;quot; has become &amp;quot;was&amp;quot;.</abstract>
<title confidence="0.9502525">Old Lexical StateArc Item</title>
<affiliation confidence="0.6799185">INP (CAT PRO ... (TO NPa)) NPa (POP ...)</affiliation>
<author confidence="0.536312">was Sy angry</author>
<affiliation confidence="0.488097">Sz (POP ...)</affiliation>
<abstract confidence="0.970622170212766">Table 2 Declarative for the expected answer for &amp;quot;Were you angry?&amp;quot;. Using this path, the ellipsis interpreter described in Section 3.1 would understand the ellipses in &amp;quot;a)&amp;quot; and &amp;quot;b)&amp;quot;, below, in the same way as &amp;quot;a&apos;)&amp;quot; and &amp;quot;b&apos;)&amp;quot;. a) I was. a&apos;) I was angry. spouse was. b&apos;) My spouse was angry. 86 A large class of expansions are simple adjuncts, such as examples c, d, e, and g in section 1. We have handled this by building our ellipsis interpreter to allow departing from the base path at designated states to consume an adjunct from the input string. We mark states in the grammar where adjuncts can occur. For each such state, we list a set of linear (though possibly cyclic) paths, called &amp;quot;expansion paths&amp;quot;. Our interpreter as implemented allows departures from the base path at any state so marked in the grammar; it follows expansion paths by consuming words from the input string, and must return to a state on the base form. Each of the examples in c, d, e, and g of section 1 can be handled by expansion paths only one arc long. They are given Table Initial State Expansion Path S (PUSH ADVERB ... (TO S)) Probably (I was angry). S (PUSH PP ... (TO S)) For a time (I was angry). S (PUSH NP (* this includes a test that the NP is one of time or place) ... (TO S)) Yesterday (I was angry). Sy (PUSH INTENSIFIER-ADVERB ... (TO Sy)) (I was) very (angry). Example Expansion Paths Since this is an extension to the ellipsis interpreter, combinations of repetition, replacement, and expansion can all be handled by the one mechanism. For instance, in response to &amp;quot;Were you angry?&amp;quot;, &amp;quot;Yesterday you were (angry)&amp;quot; would be treated using the expansion and replacement mechanisms. Casesand The ideal model of contextual ellipsis would correctly predict what are appropriate elliptical forms in context, what their interpretation is, and what forms are not meaningful in context. We this requires structural restrictions, semantic constraints, and a model of the goals of the speaker. Our heuristic does not meet these criteria in a number of cases. two classes of structural constraints are captured. One relates the ellipsis to the previous form as a combination of repetition, replacement, and expansion. The other constraint is that the input must be consumed as a contiguous string. This constraint is violated, for instance, in &amp;quot;I was (angry) yesterday&amp;quot; as a response to &amp;quot;Were you angry?&amp;quot;. Nevertheless, the constraint is computationally useful, since allowing arbitrary gaps in consuming the elliptical input produces a very large space of correct interpretations. A ludicrous example is the following question and elliptical response: Has the boss given our mutual friend a raise? A fat raise. Allowing arbitrary gaps between the substrings of the ellipsis allows an interpretation such as &amp;quot;A (boss has given our) fat (friend a) raise.&amp;quot; While it may be possible to view all contextual ellipsis as combinations of the operations repetition, replacement, and expansion applied to something, our model makes the strong assumption that these operations may be viewed as applying to an ATN path rather straightforwardly related to the previous utterance. Not all expansions can be viewed that way, as example f in Section 1 illustrates. Also, answers of &amp;quot;No&amp;quot; require special processing; that response in answer to &amp;quot;Were you angry&amp;quot; should not be interpreted as &amp;quot;No, I was angry.&amp;quot; One should be able to account for such examples within the heuristic described in this paper, perhaps by allowing the transformation system described in section 3.2 to be completely general rather than strongly restricted to one and only one transformation application. However, we propose handling such cases by special purpose rules we are developing. These rules for the special cases, plus mechanism described in section together will be formally equivalent in predictive power to a grammar for elliptical forms. Though the heuristic is independent of the individual grammar, designating expansion paths and transformations obviously is not. The grammar may make this an easy or difficult task. For instance in the grammar we are using, a subnetwork that collects all tense, aspect, and modality elements would simplify Some of the transformations and expansion paths. Naturally, semantics must play an important part in ellipsis processing. Consider the utterance pair below: 87 Did the boss have a martini at lunch? Some wine. Though syntactically this could be interpreted either as &amp;quot;Some wine (did have a martini at lunch)&amp;quot;, &amp;quot;(The boss did have) some wine (at lunch)&amp;quot;, or &amp;quot;(The boss did have a martini at) some wine&amp;quot;. Semantics should prefer the second reading. We are testing our heuristic using the RUS grammar (Bobrow, 1978) which has frequent calls from the grammar requesting that the semantic component decide whether to build a semantic interpretation for the partial parse found or to veto that partial parse. This should aid performance. Summaryand There are three aspects to our solution: a mechanism for repetition and replacement ellipsis, an extension for inputs of different types, such as fragmentary answers to questions, and an extension for expansion ellipsis. Our heuristic deals with the three types of expansion ellipsis as follows: Repetition ellipsis is processed by repeating specific parts of a transformed previous path using the same phrases as in the transformed form (&amp;quot;I was angry&amp;quot;). Replacement ellipsis is processed by substituting the elliptical input for contiguous constituents on a transformed previous path. Expansion ellipsis may be processed by taking specially marked paths that detour from a given state in that &apos;path. Combinations of the three types of ellipsis are represented by combinations of the three variations in a transformed previous path. There are two contributions of the work. First, our method allows for expansion ellipsis. Second, it accounts for combinations of previous sentence form and ellided form, e.g., statement following question, question following statement, question following question. Furthermore, the method works without any constraints on the ATN grammar. The heuristics carry over to formalisms similar to the ATN, such as context-free grammars and augmented phrase structure grammars. Our study of ellipsis is part of a much broader framework we are developing for processing syntactically and/or semantically ill-formed input; see Weischedel and Sondheimer (1981). Acknowledgement Much credit is due to Amir Razi for his programming assistance.</abstract>
<title confidence="0.692268">References</title>
<author confidence="0.750636">James F Allen</author>
<author confidence="0.750636">A Plan-Based Approach to</author>
<affiliation confidence="0.6621305">Speech Act Recognition,&amp;quot; Ph.D. Thesis, Dept. of&apos;Computer Science, University of</affiliation>
<address confidence="0.736568666666667">Toronto, Toronto, Canada, 1979, Bobrow, D., R. Kaplan, M. Kay, D. Norman, H. Thompson and T. Winograd, &amp;quot;GUS, A</address>
<affiliation confidence="0.688824">Dialog System&amp;quot;,</affiliation>
<address confidence="0.601412">Intelligence,8, (1977), 155-173.</address>
<affiliation confidence="0.66568">R., &amp;quot;The BUS System&amp;quot;, in Language Understanding,by B.</affiliation>
<address confidence="0.523959333333333">Webber and R. Bobrow, BBN Report No. 3878, Bolt Beranek and Newman, Inc., Cambridge, MA, 1978.</address>
<author confidence="0.46491">of the th</author>
<affiliation confidence="0.71244">Meetingof the Assoc.for Ling.,</affiliation>
<address confidence="0.931477">Philadelphia, June, 1980, 97-103.</address>
<author confidence="0.6245945">G Hendrix</author>
<author confidence="0.6245945">E Sacerdoti</author>
<author confidence="0.6245945">D Sagalowicz</author>
<author confidence="0.6245945">J Slocum</author>
<author confidence="0.6245945">Developing a Natural</author>
<note confidence="0.80176653125">Language Interface to Complex Data&amp;quot;, ACM Trans.on Sys.,3, 2, 105-147. Kwasny, S. and N. Sondheimer, &amp;quot;Ungrammaticality and Extragrammaticality in Natural Language Understanding Systems&amp;quot;, in Proc. the Annual Meetingof the Assoc. Ling.,San Diego, August, 1979, 19-23, Quirk, R., S. Greenbaum, G. Leech and J. A Grammarof English, Seminar Press, New York, 1972. Schenk, R., M. Lebowitz and L. Birnbaum, Integrated Understander&amp;quot;, Journalof Ling.,6, 1, (1980), 13-30. Thompson, B. H., &amp;quot;Linguistic Analysis of Language Communication with Com- Proceedingsof the Eighth Conferenceon Linguistics,Tokyo, October, 1980, 190-201. Waltz, D., &amp;quot;An English Language Question Answering System for a Large Relational Comm.ACM, 21, 7, (1978), 526-539. Weischedel, Ralph M. and Norman K. Sondheimer, &amp;quot;A Framework for Processing III- Formed Input&amp;quot;, Technical Report, Dept. of &amp; Informati Sciences, ty of Delaware, Newark, DE, 1981. 88</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>James F Allen</author>
</authors>
<title>A Plan-Based Approach to Speech Act Recognition,&amp;quot;</title>
<date>1979</date>
<tech>Ph.D. Thesis,</tech>
<institution>Dept. of&apos;Computer Science, University of Toronto,</institution>
<location>Toronto, Canada,</location>
<contexts>
<context position="2260" citStr="Allen (1979)" startWordPosition="347" endWordPosition="348">n K. Sondheimer Software Research Sperry Univac MS 2G3 Blue Bell, Pennsylvania 19424 2. Related Work Several natural language systems (e.g., Bobrow at al., 1977; Hendrix et al., 1978; Kwasny and Sondheimer, 1979) include heuristics for replacement and repetition ellipsis, but not expansion ellipsis. One general strategy has been to substitute fragments into the analysis of the previous input, e.g., substituting parse trees of the elliptical input into the parse trees of the previous input in LIFER (Hendrix, et al., 1978). This only applies to inputs of the same type, e.g., repeated questions. Allen (1979) deals with some examples of expansion ellipsis, by fitting a parsed elliptical input into a model of the speaker&apos;s plan. This is similar to other methods that interpret fragments by placing them into prepared fields in frames or case slots (Schank et al., 1980; Hayes and Mouradian, 1980; Waltz, 1978). This approach seems most applicable to limiteddomain systems. 3. The Heuristic There are three aspects to our solution: a mechanism for repetition and replacement ellipsis, an extension for inputs of different types, such as fragmentary answers to questions, and an extension for expansion ellips</context>
</contexts>
<marker>Allen, 1979</marker>
<rawString>Allen, James F., &amp;quot;A Plan-Based Approach to Speech Act Recognition,&amp;quot; Ph.D. Thesis, Dept. of&apos;Computer Science, University of Toronto, Toronto, Canada, 1979,</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Bobrow</author>
<author>R Kaplan</author>
<author>M Kay</author>
<author>D Norman</author>
<author>H Thompson</author>
<author>T Winograd</author>
</authors>
<title>GUS, A Frame-driven Dialog System&amp;quot;,</title>
<date>1977</date>
<journal>Artificial Intelligence,</journal>
<volume>8</volume>
<pages>155--173</pages>
<marker>Bobrow, Kaplan, Kay, Norman, Thompson, Winograd, 1977</marker>
<rawString>Bobrow, D., R. Kaplan, M. Kay, D. Norman, H. Thompson and T. Winograd, &amp;quot;GUS, A Frame-driven Dialog System&amp;quot;, Artificial Intelligence, 8, (1977), 155-173.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Bobrow</author>
</authors>
<title>The BUS System&amp;quot;, in Research in Natural Language Understanding, by</title>
<date>1978</date>
<tech>BBN Report No. 3878,</tech>
<institution>Bolt Beranek and Newman, Inc.,</institution>
<location>Cambridge, MA,</location>
<contexts>
<context position="11749" citStr="Bobrow, 1978" startWordPosition="1993" endWordPosition="1994">mmar we are using, a subnetwork that collects all tense, aspect, and modality elements would simplify Some of the transformations and expansion paths. Naturally, semantics must play an important part in ellipsis processing. Consider the utterance pair below: 87 Did the boss have a martini at lunch? Some wine. Though syntactically this could be interpreted either as &amp;quot;Some wine (did have a martini at lunch)&amp;quot;, &amp;quot;(The boss did have) some wine (at lunch)&amp;quot;, or &amp;quot;(The boss did have a martini at) some wine&amp;quot;. Semantics should prefer the second reading. We are testing our heuristic using the RUS grammar (Bobrow, 1978) which has frequent calls from the grammar requesting that the semantic component decide whether to build a semantic interpretation for the partial parse found or to veto that partial parse. This should aid performance. 5. Summary and Conclusion There are three aspects to our solution: a mechanism for repetition and replacement ellipsis, an extension for inputs of different types, such as fragmentary answers to questions, and an extension for expansion ellipsis. Our heuristic deals with the three types of expansion ellipsis as follows: Repetition ellipsis is processed by repeating specific par</context>
</contexts>
<marker>Bobrow, 1978</marker>
<rawString>Bobrow, R., &amp;quot;The BUS System&amp;quot;, in Research in Natural Language Understanding, by B. Webber and R. Bobrow, BBN Report No. 3878, Bolt Beranek and Newman, Inc., Cambridge, MA, 1978.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Hayes</author>
<author>G Mouradian</author>
</authors>
<title>Flexible Parsing&amp;quot;,</title>
<date>1980</date>
<booktitle>in Proc. of the 18th Annual Meeting of the Assoc. for Comp.</booktitle>
<pages>97--103</pages>
<location>Ling., Philadelphia,</location>
<contexts>
<context position="2548" citStr="Hayes and Mouradian, 1980" startWordPosition="394" endWordPosition="397">t not expansion ellipsis. One general strategy has been to substitute fragments into the analysis of the previous input, e.g., substituting parse trees of the elliptical input into the parse trees of the previous input in LIFER (Hendrix, et al., 1978). This only applies to inputs of the same type, e.g., repeated questions. Allen (1979) deals with some examples of expansion ellipsis, by fitting a parsed elliptical input into a model of the speaker&apos;s plan. This is similar to other methods that interpret fragments by placing them into prepared fields in frames or case slots (Schank et al., 1980; Hayes and Mouradian, 1980; Waltz, 1978). This approach seems most applicable to limiteddomain systems. 3. The Heuristic There are three aspects to our solution: a mechanism for repetition and replacement ellipsis, an extension for inputs of different types, such as fragmentary answers to questions, and an extension for expansion ellipsis. 3.1 Repetition and Replacement As noted above, repetition and replacement ellipsis can be viewed as substitution in the previous form. We have implemented this notion in an augmented transition network (ATN) grammar interpreter with the assumption that the &amp;quot;previous form&amp;quot; is the comp</context>
</contexts>
<marker>Hayes, Mouradian, 1980</marker>
<rawString>Hayes, P. and G. Mouradian, &amp;quot;Flexible Parsing&amp;quot;, in Proc. of the 18th Annual Meeting of the Assoc. for Comp. Ling., Philadelphia, June, 1980, 97-103.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Hendrix</author>
<author>E Sacerdoti</author>
<author>D Sagalowicz</author>
<author>J Slocum</author>
</authors>
<title>Developing a Natural Language Interface to Complex Data&amp;quot;,</title>
<date></date>
<journal>ACM Trans. on Database Sys.,</journal>
<volume>3</volume>
<pages>105--147</pages>
<marker>Hendrix, Sacerdoti, Sagalowicz, Slocum, </marker>
<rawString>Hendrix, G., E. Sacerdoti, D. Sagalowicz and J. Slocum, &amp;quot;Developing a Natural Language Interface to Complex Data&amp;quot;, ACM Trans. on Database Sys., 3, 2, (197-g7 105-147.</rawString>
</citation>
<citation valid="false">
<authors>
<author>S Kwasny</author>
<author>N Sondheimer</author>
</authors>
<title>Ungrammaticality and Extragrammaticality in Natural Language Understanding Systems&amp;quot;,</title>
<booktitle>in Proc. of the 17th Annual Meeting of the Assoc.</booktitle>
<marker>Kwasny, Sondheimer, </marker>
<rawString>Kwasny, S. and N. Sondheimer, &amp;quot;Ungrammaticality and Extragrammaticality in Natural Language Understanding Systems&amp;quot;, in Proc. of the 17th Annual Meeting of the Assoc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ling</author>
</authors>
<date>1979</date>
<location>San Diego,</location>
<marker>Ling, 1979</marker>
<rawString>for Comp. Ling., San Diego, August, 1979, 19-23,</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Quirk</author>
<author>S Greenbaum</author>
<author>G Leech</author>
<author>J Svartvik</author>
</authors>
<title>A Grammar of Contempory English,</title>
<date>1972</date>
<publisher>Seminar Press,</publisher>
<location>New York,</location>
<marker>Quirk, Greenbaum, Leech, Svartvik, 1972</marker>
<rawString>Quirk, R., S. Greenbaum, G. Leech and J. Svartvik, A Grammar of Contempory English, Seminar Press, New York, 1972.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Schenk</author>
<author>M Lebowitz</author>
<author>L Birnbaum</author>
</authors>
<title>An Integrated Understander&amp;quot;,</title>
<date>1980</date>
<journal>American Journal of Comp. Ling.,</journal>
<volume>6</volume>
<pages>13--30</pages>
<marker>Schenk, Lebowitz, Birnbaum, 1980</marker>
<rawString>Schenk, R., M. Lebowitz and L. Birnbaum, &amp;quot;An Integrated Understander&amp;quot;, American Journal of Comp. Ling., 6, 1, (1980), 13-30.</rawString>
</citation>
<citation valid="false">
<authors>
<author>B H Thompson</author>
</authors>
<title>Linguistic Analysis of Natural Language Communication with Computers&amp;quot;,</title>
<booktitle>Proceedings of the Eighth International Conference on Computational</booktitle>
<marker>Thompson, </marker>
<rawString>Thompson, B. H., &amp;quot;Linguistic Analysis of Natural Language Communication with Computers&amp;quot;, Proceedings of the Eighth International Conference on Computational</rawString>
</citation>
<citation valid="true">
<authors>
<author>Linguistics</author>
</authors>
<date>1980</date>
<pages>190--201</pages>
<location>Tokyo,</location>
<marker>Linguistics, 1980</marker>
<rawString>Linguistics, Tokyo, October, 1980, 190-201.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Waltz</author>
</authors>
<title>An English Language Question Answering System for a Large Relational Database&amp;quot;,</title>
<date>1978</date>
<journal>Comm. ACM,</journal>
<volume>21</volume>
<pages>526--539</pages>
<contexts>
<context position="2562" citStr="Waltz, 1978" startWordPosition="398" endWordPosition="399">ne general strategy has been to substitute fragments into the analysis of the previous input, e.g., substituting parse trees of the elliptical input into the parse trees of the previous input in LIFER (Hendrix, et al., 1978). This only applies to inputs of the same type, e.g., repeated questions. Allen (1979) deals with some examples of expansion ellipsis, by fitting a parsed elliptical input into a model of the speaker&apos;s plan. This is similar to other methods that interpret fragments by placing them into prepared fields in frames or case slots (Schank et al., 1980; Hayes and Mouradian, 1980; Waltz, 1978). This approach seems most applicable to limiteddomain systems. 3. The Heuristic There are three aspects to our solution: a mechanism for repetition and replacement ellipsis, an extension for inputs of different types, such as fragmentary answers to questions, and an extension for expansion ellipsis. 3.1 Repetition and Replacement As noted above, repetition and replacement ellipsis can be viewed as substitution in the previous form. We have implemented this notion in an augmented transition network (ATN) grammar interpreter with the assumption that the &amp;quot;previous form&amp;quot; is the complete ATN path </context>
</contexts>
<marker>Waltz, 1978</marker>
<rawString>Waltz, D., &amp;quot;An English Language Question Answering System for a Large Relational Database&amp;quot;, Comm. ACM, 21, 7, (1978), 526-539.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ralph M Weischedel</author>
<author>Norman K Sondheimer</author>
</authors>
<title>A Framework for Processing IIIFormed Input&amp;quot;,</title>
<date>1981</date>
<tech>Technical Report,</tech>
<institution>Dept. of Computer &amp; Informati Sciences, University of Delaware,</institution>
<location>Newark, DE,</location>
<marker>Weischedel, Sondheimer, 1981</marker>
<rawString>Weischedel, Ralph M. and Norman K. Sondheimer, &amp;quot;A Framework for Processing IIIFormed Input&amp;quot;, Technical Report, Dept. of Computer &amp; Informati Sciences, University of Delaware, Newark, DE, 1981.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>