<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.985564">
Joint Inference of Named Entity Recognition and Normalization for Tweets
</title>
<author confidence="0.999589">
Xiaohua Liu †, Ming Zhou †, Furu Wei †, Zhongyang Fu §, Xiangyang Zhou ♯
</author>
<affiliation confidence="0.995376857142857">
tSchool of Computer Science and Technology
Harbin Institute of Technology, Harbin, 150001, China
§Department of Computer Science and Engineering
Shanghai Jiao Tong University, Shanghai, 200240, China
♯School of Computer Science and Technology
Shandong University, Jinan, 250100, China
†Nicrosoft Research Asia
</affiliation>
<address confidence="0.507515">
Beijing, 100190, China
</address>
<email confidence="0.960151">
†{xiaoliu, fuwei, mingzhou}@microsoft.com
§ zhongyang.fu@gmail.com ♯ v-xzho@microsoft.com
</email>
<sectionHeader confidence="0.995097" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999635904761905">
Tweets represent a critical source of fresh in-
formation, in which named entities occur fre-
quently with rich variations. We study the
problem of named entity normalization (NEN)
for tweets. Two main challenges are the er-
rors propagated from named entity recogni-
tion (NER) and the dearth of information in
a single tweet. We propose a novel graphi-
cal model to simultaneously conduct NER and
NEN on multiple tweets to address these chal-
lenges. Particularly, our model introduces a
binary random variable for each pair of words
with the same lemma across similar tweets,
whose value indicates whether the two related
words are mentions of the same entity. We
evaluate our method on a manually annotated
data set, and show that our method outper-
forms the baseline that handles these two tasks
separately, boosting the F1 from 80.2% to
83.6% for NER, and the Accuracy from 79.4%
to 82.6% for NEN, respectively.
</bodyText>
<sectionHeader confidence="0.999132" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9998928">
Tweets, short messages of less than 140 characters
shared through the Twitter service 1, have become
an important source of fresh information. As a re-
sult, the task of named entity recognition (NER)
for tweets, which aims to identify mentions of rigid
designators from tweets belonging to named-entity
types such as persons, organizations and locations
(2007), has attracted increasing research interest.
For example, Ritter et al. (2011) develop a sys-
tem that exploits a CRF model to segment named
</bodyText>
<footnote confidence="0.975567">
1http://www.twitter.com
</footnote>
<bodyText confidence="0.99962640625">
entities and then uses a distantly supervised ap-
proach based on LabeledLDA to classify named en-
tities. Liu et al. (2011) combine a classifier based
on the k-nearest neighbors algorithm with a CRF-
based model to leverage cross tweets information,
and adopt the semi-supervised learning to leverage
unlabeled tweets.
However, named entity normalization (NEN) for
tweets, which transforms named entities mentioned
in tweets to their unambiguous canonical forms, has
not been well studied. Owing to the informal nature
of tweets, there are rich variations of named enti-
ties in them. According to our investigation on the
data set provided by Liu et al. (2011), every named
entity in tweets has an average of 3.3 variations 2.
As an illustrative example, we show “Anneke Gron-
loh”, which may occur as “Mw.,Gronloh”, “Anneke
Kronloh” or “Mevrouw G”. We thus propose NEN
for tweets, which plays an important role in entity
retrieval, trend detection, and event and entity track-
ing. For example, Khalid et al. (2008) show that
even a simple normalization method leads to im-
provements of early precision, for both document
and passage retrieval, and better normalization re-
sults in better retrieval performance.
Traditionally, NEN is regarded as a septated task,
which takes the output of NER as its input (Li et al.,
2002; Cohen, 2005; Jijkoun et al., 2008; Dai et al.,
2011). One limitation of this cascaded approach is
that errors propagate from NER to NEN and there is
no feedback from NEN to NER. As demonstrated by
Khalid et al. (2008), most NEN errors are caused
</bodyText>
<footnote confidence="0.990152">
2This data set consists of 12,245 randomly sampled tweets
within five days.
</footnote>
<page confidence="0.920606">
526
</page>
<note confidence="0.9861725">
Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 526–535,
Jeju, Republic of Korea, 8-14 July 2012. c�2012 Association for Computational Linguistics
</note>
<bodyText confidence="0.993662290322581">
by recognition errors. Another challenge of NEN
is the dearth of information in a single tweet, due
to the short and noise-prone nature of tweets. Re-
portedly, the accuracy of a baseline NEN system
based on Wikipedia drops considerably from 94%
on edited news to 77% on news comments, a kind of
user generated content (UGC) with similar style to
tweets (Jijkoun et al., 2008).
We propose jointly conducting NER and NEN
on multiple tweets using a graphical model, to
address these challenges. Intuitively, improving
the performance of NER boosts the performance
of NEN. For example, consider the following two
tweets: “· · · Alex’s jokes. Justin’s smartness. Max’s
randomnes· · · ” and “· · · Alex Russo was like the
best character on Disney Channel· · · ”. Identify-
ing “Alex” and “Alex Russo” as PERSON will en-
courage NEN systems to normalize “Alex” into
“Alex Russo”. On the other hand, NEN can guide
NER. For instance, consider the following two
tweets: “· · · she knew Burger King when he was a
Prince!· · · ” and “· · · I’m craving all sorts of food:
mcdonalds, burger king, pizza, chinese· · · ”. Sup-
pose the NEN system believes that “burger king”
cannot be mapped to “Burger King” since these two
tweets are not similar in content. This will help NER
to assign them different types of labels. Our method
optimizes these two tasks simultaneously by en-
abling them to interact with each other. This largely
differentiates our method from existing work.
Furthermore, considering multiple tweets simul-
taneously allows us to exploit the redundancy in
tweets, as suggested by Liu et al. (2011). For exam-
ple, consider the following two tweets: “· · · Bobby
Shaw you don’t invite the wind· · · ” and “· · · I own
yah ! Loool bobby shaw· · · ”. Recognizing “Bobby
Shaw” in the first tweet as a PERSON is easy owing
to its capitalization and the following word “you”,
which in turn helps to identify “bobby shaw” in the
second tweet as a PERSON.
We adopt a factor graph as our graphical model,
which is constructed in the following manner. We
first introduce a random variable for each word in
every tweet, which represents the BILOU (Begin-
ning, the Inside and the Last tokens of multi-token
entities as well as Unit-length entities) label of the
corresponding word. Then we add a factor to con-
nect two neighboring variables, forming a conven-
tional linear chain CRFs. Hereafter, we use tm to
denote the mth tweet ,tim and yim to denote the ith
word of of tm and its BILOU label, respectively, and
fim to denote the factor related to yi�1
m and yim. Next,
for each word pair with the same lemma, denoted by
tim and tjn, we introduce a binary random variable,
denoted by zijmn, whose value indicates whether tim
and tjn belong to two mentions of the same entity. Fi-
nally, for any zijmn we add a factor, denoted by fijmn,
to connect yim, yjn and zijmn. Factors in the same
group ({fijmn} or {fi m}) share the same set of fea-
ture templates. Figure 1 illustrates an example of
our factor graph for two tweets.
</bodyText>
<figureCaption confidence="0.994862125">
Figure 1: A factor graph that jointly conducts NER and
NEN on multiple tweets. Blue and green circles rep-
resent NE type (y-serials) and normalization variables
(z-serials), respectively; filled circles indicate observed
random variables; blue rectangles represent the factors
connecting neighboring y-serial variables while red rect-
angles stand for the factors connecting distant y-serial
and z-serial variables.
</figureCaption>
<bodyText confidence="0.999727733333333">
It is worth noting that our factor graph is differ-
ent from the skip-chain CRFs (Galley, 2006) in the
sense that any skip-chain factor of our model con-
sists not only of two NE type variables (yim and yjn),
which is the case for skip-chain CRFs, but also a nor-
malization variable (zijmn). It is these normalization
variables that enable us to conduct NER and NEN
jointly.
We manually add normalization information to
the data set shared by Liu et al. (2011), to eval-
uate our method. Experimental results show that
our method achieves 83.6% F1 for NER and 82.6%
Accuracy for NEN, outperforming the baseline with
80.2%F1 for NER and 79.4% Accuracy for NEN.
We summarize our contributions as follows.
</bodyText>
<footnote confidence="0.868785">
1. We introduce the task of NEN for tweets, and
propose jointly conducting NER and NEN for
</footnote>
<page confidence="0.996552">
527
</page>
<bodyText confidence="0.999870153846154">
multiple tweets using a factor graph, which
leverages redundancy in tweets to make up for
the dearth of information in a single tweet and
allows these two tasks to inform each other.
2. We evaluate our method on a human annotated
data set, and show that our method compares
favorably with the baseline, achieving better
performance in both tasks.
Our paper is organized as follows. In the next sec-
tion, we introduce related work. In Section 3 and 4,
we formally define the task and present our method.
In Section 5, we evaluate our method. And finally
we conclude our work in Section 6.
</bodyText>
<sectionHeader confidence="0.999759" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.9700105">
Related work can be divided into two categories:
NER and NEN.
</bodyText>
<subsectionHeader confidence="0.866359">
2.1 NER
</subsectionHeader>
<bodyText confidence="0.999981178571429">
NER has been well studied and its solutions can be
divided into three categories: 1) Rule-based (Krupka
and Hausman, 1998); 2) machine learning based
(Finkel and Manning, 2009; Singh et al., 2010); and
3) hybrid methods (Jansche and Abney, 2002). Ow-
ing to the availability of annotated corpora, such as
ACE05, Enron (Minkov et al., 2005) and CoNLL03
(Tjong Kim Sang and De Meulder, 2003), data
driven methods are now dominant.
Current studies of NER mainly focus on formal
text such as news articles (Mccallum and Li, 2003;
Etzioni et al., 2005). A representative work is that
of Ratinov and Roth (2009), in which they system-
atically study the challenges of NER, compare sev-
eral solutions, and show some interesting findings.
For example, they show that the BILOU encoding
scheme significantly outperforms the BIO schema
(Beginning, the Inside and Outside of a chunk).
A handful of work on other genres of texts exists.
For example, Yoshida and Tsujii build a biomedi-
cal NER system (2007) using lexical features, or-
thographic features, semantic features and syntactic
features, such as part-of-speech (POS) and shallow
parsing; Downey et al. (2007) employ capitaliza-
tion cues and n-gram statistics to locate names of a
variety of classes in web text; Wang (2009) intro-
duces NER to clinical notes. A linear CRF model
is trained on a manually annotated data set, which
achieves an F1 of 81.48% on the test data set; Chiti-
cariu et al. (2010) design and implement a high-
level language NERL which simplifies the process
of building, understanding, and customizing com-
plex rule-based named-entity annotators for differ-
ent domains.
Recently, NER for Tweets attracts growing inter-
est. Finin et al. (2010) use Amazons Mechani-
cal Turk service 3 and CrowdFlower 4 to annotate
named entities in tweets and train a CRF model to
evaluate the effectiveness of human labeling. Rit-
ter et al. (2011) re-build the NLP pipeline for
tweets beginning with POS tagging, through chunk-
ing, to NER, which first exploits a CRF model to
segment named entities and then uses a distantly su-
pervised approach based on LabeledLDA to clas-
sify named entities. Unlike this work, our work de-
tects the boundary and type of a named entity si-
multaneously using sequential labeling techniques.
Liu et al. (2011) combine a classifier based on
the k-nearest neighbors algorithm with a CRF-based
model to leverage cross tweets information, and
adopt the semi-supervised learning to leverage un-
labeled tweets. Our method leverages redundance
in similar tweets, using a factor graph rather than a
two-stage labeling strategy. One advantage of our
method is that local and global information can in-
teract with each other.
</bodyText>
<subsectionHeader confidence="0.97274">
2.2 NEN
</subsectionHeader>
<bodyText confidence="0.999545642857143">
There is a large body of studies into normalizing
various types of entities for formally written texts.
For instance, Cohen (2005) normalizes gene/protein
names using dictionaries automatically extracted
from gene databases; Magdy et al. (2007) address
cross-document Arabic name normalization using a
machine learning approach, a dictionary of person
names and frequency information for names in a
collection; Cucerzan (2007) demostrates a large-
scale system for the recognition and semantic dis-
ambiguation of named entities based on informa-
tion extracted from a large encyclopedic collection
and Web search results; Dai et al. (2011) employ
a Markov logic network to model interweaved con-
</bodyText>
<footnote confidence="0.9998845">
3https://www.mturk.com/mturk/
4http://crowdflower.com/
</footnote>
<page confidence="0.994112">
528
</page>
<bodyText confidence="0.999909125">
straints in a setting of gene mention normalization.
Jijkoun et al. (2008) study NEN for UGC. They
report that the accuracy of a baseline NEN system
based on Wikipedia drops considerably from 94%
on edited news to 77% on UGC. They identify three
main error sources, i.e., entity recognition errors,
multiple ways of referring to the same entity and am-
biguous references, and exploit hand-crafted rules to
improve the baseline NEN system.
We introduce the task of NEN for tweets, a new
genre of texts with rich entity variations. In contrast
to existing NEN systems, which take the output of
NER systems as their input, our method conducts
NER and NEN at the same time, allowing them to
reinforce each other, as demonstrated by the experi-
mental results.
</bodyText>
<sectionHeader confidence="0.994879" genericHeader="method">
3 Task Definition
</sectionHeader>
<bodyText confidence="0.997580032258064">
A tweet is a short text message with no more than
140 characters. Here is an example of a tweet: “my-
craftingworld: #Win Microsoft Office 2010 Home
and Student #Contest from @office http://bit.ly/ · · ·
”, where “mycraftingworld” is the name of the user
who published this tweet. Words beginning with
“#” like “”#Win” are hash tags; words starting
with “@” like “@office” represent user names; and
“http://bit.ly/” is a shortened link.
Given a set of tweets, e.g., tweets within some pe-
riod or related to some query, our task is: 1) To rec-
ognize each mention of entities of predefined types
for each tweet; and 2) to restore each entity mention
into its unambiguous canonical form. Following Liu
et al. (2011), we focus on four types of entities, i.e.,
PERSON, ORGANIZATION, PRODUCT, and LO-
CATION, and constrain our scope to English tweets.
Note that the NEN sub-task can be transformed as
follows. Given each pair of entity mentions, decide
whether they denote the same entity. Once this is
achieved, we can link all the mentions of the same
entity, and choose a representative mention, e.g., the
longest mention, as their canonical form.
As an illustrative example, consider the following
three tweets: “· · · Gaga’s Christmas dinner with her
family. Awwwwn· · · ”, “· · · Lady Gaaaaga with her
family on Christmas· · · ” and “· · · Buying a maga-
zine just because Lady Gaga’s on the cover· · · ”. It
is expected that “Gaga”, “Lady Gaaaaga” and “Lady
Gaga” are all labeled as PERSON, and can be re-
stored as “Lady Gaga”.
</bodyText>
<sectionHeader confidence="0.989018" genericHeader="method">
4 Our Method
</sectionHeader>
<bodyText confidence="0.99964975">
In contrast to existing work, our method jointly
conducts NER and NEN for multiple tweets. We
first give an overview of our method, then detail its
model and features.
</bodyText>
<subsectionHeader confidence="0.983659">
4.1 Overview
</subsectionHeader>
<bodyText confidence="0.989368529411765">
Given a set of tweets as input, our method recog-
nizes predefined types of named entities and for each
entity outputs its unambiguous canonical form.
To resolve NER, we assign a label to each
word in a tweet, indicating both the boundary
and entity type. Following Ratinov and Roth
(2009), we use the BILOU schema. For ex-
ample, consider the tweet “· · · without you is
like an iphone without apps; Lady gaga with-
out her telephone· · · ”, the labeled sequence us-
ing the BILOU schema is: “· · · withoutO youO
isO likeO anO iphoneU−PRODUCT withoutO appsO;
LadyB−PERSON gagaL−PERSON withoutO herO
telephoneO· · · ” , where “iphoneU−PRODUCT” indi-
cates that “iphone” is a product name of unit length;
“LadyB−PERSON” means “Lady” is the beginning
of a person name while “gagaL−PERSON” suggests
that “gaga” is the last token of a person name.
To resolve NEN, we assign a binary value label
zmn to each pair of words ti
ij m and tjn which share the
same lemma. zijmn = 1 or -1, indicating whether tim
and tjn belong to two mentions of the same entity 5.
For example, consider the three tweets presented in
Section 3. “Gaga11” 6 and “Gaga1�” will be assigned
a “1” label, since they are part of two mentions of the
same entity “Lady Gaga”; similarly, “Lady1�” and
“Lady1�” are connected with a “1” label. Note that
there are no NEN labels for pairs like “heri” and
“her1�” or “withi and “with1�”, since words like “her”
and “with” are stop words.
With NE type and normalization labels obtained,
we judge two mentions, denoted by ti�···ik
m and
</bodyText>
<footnote confidence="0.990778166666667">
5Stop words have no normalization labels. The stop words
are mainly from http://www.textfixer.com/resources/common-
english-words.txt.
6We use w;, to denote word w’s ith appearance in the mth
tweet. For example, “Gagai” denotes the first occurance of
“Gaga” in the first tweet.
</footnote>
<page confidence="0.983887">
529
</page>
<bodyText confidence="0.964094">
tj1&apos;&apos;&apos;jl
n , respectively, refer to the same entity if and
only if: 1) The two mentions share the same entity
type; 2) ti1&apos;&apos;&apos;ik
m is a sub-string oftj1&apos;&apos;&apos;jl
n or vise versa;
ij
and 3) zmn = 1, i = i1, · · · , ik and j = j1, · · · , jl,
if zijmn exists. Still take the three tweets presented
in Section 3 for example. Suppose “Gaga11” and
“Lady Gaga13” are labeled as PERSON, and there
is only one related NE normalization label, which
is associated with “‘Gaga11” and “Gaga13” and has 1
as its value. We then consider that these two men-
tions can be normalized into the same entity; in a
similar way, we can align “Lady12 Gaaaaga” with
“Lady13 Gaga”. Combining these pieces informa-
tion together, we can infer that “‘Gaga11”, “Lady12
Gaaaaga” and “Lady13 Gaga” are three mentions of
the same entity. Finally, we can select ‘Lady13 Gaga”
as the representative, and output ‘Lady Gaga” as
their canonical form. We choose the mention with
the maximum number of words as the representa-
tive. In case of a tie, we prefer the mention with an
Wikipedia entry 7.
The central problem with our method is infer-
ring all the NE type (y-serial) and normalization
(z-serial) variables. To achieve this, we construct
a factor graph according to the input tweets, which
can evaluate the probability of every possible assign-
ment of y-serials and z-serials, by checking the
characteristics of the assignment. Each character-
istic is called a feature. In this way, we can select
the assignment with the highest probability. Next
we will introduce our model in detail, including its
training and inference procedure and features.
</bodyText>
<subsectionHeader confidence="0.967571">
4.2 Model
</subsectionHeader>
<bodyText confidence="0.965129928571429">
We adopt a factor graph as our model. One advan-
tage of our model is that it allows y-serials and
z-serials variables to interact with each other to
jointly optimize NER and NEN.
Given a set of tweets T = {tm}Nm=1, we can build
a factor graph G = (Y, Z, F, E), where: Y and Z
denote y-serials and z-serials variables, respec-
tively; F represents factor vertices, consisting of
{fi m} and {fij mn}, fi m = fi m(yi�1
m , yi m) and fij mn =
fij mn(yi m, yj n, zijmn); E stands for edges, which de-
pends on F, and consists of edges between yi�1
m and
yim, and those between yim,yjn and fijmn.
</bodyText>
<footnote confidence="0.959604">
7If it still ends up as a draw, we will randomly choose one
from the best.
</footnote>
<bodyText confidence="0.975936666666667">
G = (Y, Z, F, E) defines a probability distribu-
tion according to Formula 1.
where δijmn = 1 if and only if ti m and tjn have the
same lemma and are not stop words, otherwise zero.
A factor factorizes according to a set of features, so
that:
</bodyText>
<equation confidence="0.999615722222222">
λ(1)
k ϕ(1)
k (yi�1
m ,yi m)
∑ln fijmn(yim, yjn, zijmn) = λ(2)
k k ϕ(2)
k (yi m, yjn, zijmn)
(2)
{ϕ(1)
k }K1
k=1 and {ϕ(2)
k }K2
k=1 are two feature sets. Θ =
{λ(1)
k }K1 ∪{λ(2)
k }K2
k=1 is called the feature weight
k=1
</equation>
<bodyText confidence="0.88573225">
set or parameter set of G. Each feature has a real
value as its weight.
Training Θ is learnt from annotated tweets T, by
maximizing the data likelihood, i.e.,
</bodyText>
<equation confidence="0.9967965">
Θ* = arg max lnP(Y,Z|Θ,T) (3)
Θ
</equation>
<bodyText confidence="0.822642">
To solve this optimization problem, we first calcu-
late its gradient:
</bodyText>
<equation confidence="0.99226">
∂ ln P(Y, Z|T; Θ) ∑
= δij mn · ϕ(2)
k (yi m, yj n, zij mn)
∂λ2
k m,n,i,j
p(yim, yjn, zijmn|T; Θ)
2
ϕk (yim, yjn, zijmn)
(5)
</equation>
<bodyText confidence="0.979573571428571">
Here, the two marginal probabilities
p(yi�1
m , yim|T; Θ) and p(yim, yjn, zijmn|T; Θ) are
computed using loopy belief propagation (Murphy
et al., 1999). Once we have computed the gradient,
Θ* can be worked out by standard techniques such
as steepest descent, conjugate gradient and the
</bodyText>
<figure confidence="0.950401208333333">
∑ ln fi m(yi�1
ln P (Y, Z|G, T ) ∝ m , yi m)+
∑
m,n,i,j
(1)
δijmn · ln fijmn(yim, yjn, zijmn)
m,i
∑
lnfi m(yi�1
m , yim) =
k
∑−
m,i
∂ lnP(Y,Z|T;Θ)= ∑ϕk1)(yi-1 , yi m)
∂λ1k m,i
∑
yi−1
m ,yim
(4)
p(yim1,yim|T;Θ)ϕ(k1)(yim1,yim)
∑− ∑
m,n,i,j i
δmjn
yim,yj n,zij mn
</figure>
<page confidence="0.988882">
530
</page>
<bodyText confidence="0.999497875">
limited-memory BFGS algorithm (L-BFGS). We
choose L-BFGS because it is particularly well suited
for optimization problems with a large number of
variables.
Inference Supposing the parameters O have been
set to O∗, the inference problem is: Given a set
of testing tweets T, output the most probable
assignment of Y and Z, i.e.,
</bodyText>
<equation confidence="0.997096">
(Y, Z)∗ = arg max
(Y,Z) lnP(Y,Z|O∗,T) (6)
</equation>
<bodyText confidence="0.999956393939394">
We adopt the max-product algorithm to solve this
inference problem. The max-product algorithm is
nearly identical to the loopy belief propagation al-
gorithm, with the sums replaced by maxima in the
definitions. Note that in both the training and test-
ing stage, the factor graph is constructed in the same
way as described in Section 1.
Efficiency We take several actions to improve our
model’s efficiency. Firstly, we manually compile a
comprehensive named entity dictionary from vari-
ous sources including Wikipedia, Freebase 8, news
articles and the gazetteers shared by Ratinov and
Roth (2009). In total this dictionary contains 350
million entries 9. By looking up this dictionary 10,
we generate the possible BILOU labels, denoted by
Ymi hereafter, for each word ti m. For instance, con-
sider “· · · Good Morning new11 york11· · · ”. Suppose
“New York City” and “New York Times” are in
our dictionary, then “new11 york11” is the matched
string with two corresponding entities. As a re-
sult, “B-LOCATION” and “B-ORGANIZATION”
will be added to Ynew11, and “I-LOCATION” and
“I-ORGANIZATION” will be added to Yyork11. If
Ymi ≠ ∅, we enforce the constraint for training and
testing that yim ∈ Ymi , to reduce the search space.
Secondly, in the testing phase, we introduce three
rules related to zijmn: 1) zijmm = 1, which says two
words sharing the same lemma in the same tweet
denote the same entity; 2) set zijmn to 1, if the sim-
ilarity between tm and tn is above a threshold (0.8
in our work), or tm and tn share one hash tag; and
3)zmnij = −1, if the similarity between tm and
tn is below a threshold (0.3 in work). To compute
</bodyText>
<footnote confidence="0.993695333333333">
8http://freebase.com/view/military
9One phrase refereing to L entities has L entries.
10We use case-insensitive leftmost longest match.
</footnote>
<bodyText confidence="0.997286666666667">
the similarity, each tweet is represented as a bag-of-
words vector with the stop words removed, and the
cosine similarity is adopted, as defined in Formula
7. These rules pre-label a significant part of z-serial
variables (accounting for 22.5%), with an accuracy
of 93.5%.
</bodyText>
<equation confidence="0.978695">
(7)
|⃗tm||⃗tn|
</equation>
<bodyText confidence="0.99822575">
Note that in our experiments, these measures reduce
the training and testing time by 36.2% and 62.8%,
respectively, while no obvious performance drop is
observed.
</bodyText>
<equation confidence="0.759860666666667">
4.3 Features
A feature in {0(1)
k }K1
</equation>
<bodyText confidence="0.994584">
k=1 involves a pair of neighbor-
ing NE-type labels, i.e., yi−1
m and yim, while a fea-
ture in {0k2)}k21 concerns a pair of distant NE-type
labels and its associated normalization label, i.e.,
yim,yjn and zijmn. Details are given below.
</bodyText>
<subsubsectionHeader confidence="0.472686">
4.3.1 Feature Set One: {0k1)}k l1
</subsubsectionHeader>
<bodyText confidence="0.9988142">
We adopts features similar to Wang (2009), and
Ratinov and Roth (2009), i.e., orthographic features,
lexical features and gazetteer-related features. These
features are defined on the observation. Combining
them with yi−1 mand yim constitutes {0(1)
</bodyText>
<equation confidence="0.877789">
k }K1
k=1.
</equation>
<figureCaption confidence="0.46115525">
Orthographic features: Whether tim is capitalized
or upper case; whether it is alphanumeric or contains
any slashes; wether it is a stop word; word prefixes
and suffixes.
</figureCaption>
<bodyText confidence="0.875352428571429">
Lexical features: Lemma of ti m, ti−1
m and ti+1
m ,
respectively; whether ti m is an out-of-vocabulary
(OOV) word 11; POS of ti m, ti−1
m and ti+1
m , respec-
tively; whether ti m is a hash tag, a link, or a user
account.
Gazetteer-related features: Whether Ymi is empty;
the dominating label/entity type in Yim. Which one
is dominant is decided by majority voting of the en-
tities in our dictionary. In case of a tie, we randomly
choose one from the best.
</bodyText>
<equation confidence="0.807732">
4.3.2 Feature Set Two: {0(2)
k }K2
k=1
</equation>
<bodyText confidence="0.9982995">
Similarly, we define orthographic, lexical features
and gazetteer-related features on the observation, yim
11We first conduct a simple dictionary-lookup based normal-
ization with the incorrect/correct word pair list provided by Han
et al. (2011) to correct common ill-formed words. Then we call
an online dictionary service to judge whether a word is OOV.
</bodyText>
<equation confidence="0.9763155">
sim(tm, tn) =
⃗tm · ⃗tn
</equation>
<page confidence="0.987568">
531
</page>
<bodyText confidence="0.9437935">
and yjn; and then we combine these features with
zmn, forming {ϕ(2)
</bodyText>
<equation confidence="0.7097435">
ij k }K2
k=1.
</equation>
<bodyText confidence="0.2848628">
Orthographic features: Whether tim / tjn is capital-
ized or upper case; whether tim / tjn is alphanumeric
or contains any slashes; prefixes and suffixes of tim.
Lexical features: Lemma of tim; whether tim is
OOV; whether tim / ti+1
</bodyText>
<equation confidence="0.8979265">
m /
ti−1 mand tjn / tj+1
n / tj−1
n
</equation>
<bodyText confidence="0.935480714285714">
have the same POS; whether yim and yjn have the
same label/entity type.
Gazetteer-related features: Whether Yi ∩ Yn j /
m
Ymi+1 ∩ Yn+1 / Y m 1 ∩ Yn−1 is empty; whether the
dominating label/entity type in Ymi is the same as
that in Ynj .
</bodyText>
<sectionHeader confidence="0.999113" genericHeader="method">
5 Experiments
</sectionHeader>
<bodyText confidence="0.999487">
We manually annotate a data set to evaluate our
method. We show that our method outperforms the
baseline, a cascaded system that conducts NER and
NEN individually.
</bodyText>
<subsectionHeader confidence="0.99358">
5.1 Data Preparation
</subsectionHeader>
<bodyText confidence="0.999973666666667">
We use the data set provided by Liu et al. (2011),
which consists of 12,245 tweets with four types of
entities annotated: PERSON, LOCATION, ORGA-
NIZATION and PRODUCT. We enrich this data set
by adding entity normalization information. Two
annotators 12 are involved. For any entity mention,
two annotators independently annotate its canonical
form. The inter-rater agreement measured by kappa
is 0.72. Any inconsistent case is discussed by the
two annotators till a consensus is reached. 2, 245
tweets are used for development, and the remainder
are used for 5-fold cross validation.
</bodyText>
<subsectionHeader confidence="0.998572">
5.2 Evaluation Metrics
</subsectionHeader>
<bodyText confidence="0.999224666666667">
We adopt the widely-used Precision, Recall and F1
to measure the performance of NER for a partic-
ular type of entity, and the average Precision, Re-
call and F1 to measure the overall performance of
NER (Liu et al., 2011; Ritter et al., 2011). As for
NEN, we adopt the widely-used Accuracy, i.e., to
what percentage the outputted canonical forms are
correct (Jijkoun et al., 2008; Cucerzan, 2007; Li et
al., 2002).
</bodyText>
<footnote confidence="0.475931">
12Two native English speakers.
</footnote>
<subsectionHeader confidence="0.984437">
5.3 Baseline
</subsectionHeader>
<bodyText confidence="0.99984875">
We develop a cascaded system as the baseline,
which conducts NER and NEN sequentially. Its
NER module, denoted by SBR, is based on the state-
of-the-art method introduced by Liu et al. (2011);
and its NEN model , denoted by SBN, follows
the NEN system for user-generated news comments
proposed by Jijkoun et al. (2008), which uses
handcrafted rules to improve a typical NEN system
that normalizes surface forms to Wikipedia page ti-
tles. We use the POS tagger developed by Ritter et
al. (2011) to extract POS related features, and the
OpenNLP toolkit to get lemma related features.
</bodyText>
<sectionHeader confidence="0.542968" genericHeader="evaluation">
5.4 Results
</sectionHeader>
<bodyText confidence="0.99996675">
Tables 1- 2 show the overall performance of the
baseline and ours (denoted by SRN). It can be
seen that, our method yields a significantly higher
F1 (with p &lt; 0.01) than SBR, and a moderate im-
provement of accuracy as compared with SBN (with
p &lt; 0.05). As a case study, we show that our system
successfully identified “jaxon11” as a PERSON in the
tweet “· · · come to see jaxon11 someday· · · ”, which
is mistakenly labeled as a LOCATION by SBR.
This is largely owing to the fact that our system
aligns “jaxon11” with “Jaxson12” in the tweet “· · · I
love Jaxson12,Hes like my little brother· · · ”, in which
“Jaxson12” is identified as a PERSON. As a result,
this encourages our system to consider “jaxon11” as
a PERSON. We also find cases where our system
works but SBN fails. For example, “Goldman11”
in the tweet “· · · Goldman sees massive upside risk
in oil prices··· ” is normalized into “Albert Gold-
man” by SBR, because it is mistakenly identified as
a PERSON by SBS; in contrast, our system recog-
nizes “Goldman12 Sachs” as an ORGANIZATION,
and successfully links ‘Goldman12” to “Goldman11”,
resulting that “Goldman11” is identified as an ORGA-
NIZATION and normalized into “Goldman Sachs”.
Table 3 reports the NER performance of our
method for each entity type, from which we see that
our system consistently yields better F1 on all entity
types than SBR. We also see that our system boosts
the F1 for ORGANIZATION most significantly, re-
flecting the fact that a large number of organizations
that are incorrectly labeled as PERSON by SBR, are
now correctly recognized by our method.
</bodyText>
<page confidence="0.988516">
532
</page>
<table confidence="0.995876333333333">
System Pre Rec F1
SRN 84.7 82.5 83.6
SBR 81.6 78.8 80.2
</table>
<tableCaption confidence="0.997797">
Table 1: Overall performance (%) of NER.
</tableCaption>
<table confidence="0.700065333333333">
System Accuracy
SRN 82.6
SBN 79.4
</table>
<tableCaption confidence="0.947153">
Table 2: Overall Accuracy (%) of NEN.
</tableCaption>
<table confidence="0.999566">
System PER PRO LOC ORG
SRN 84.2 80.5 82.1 85.2
SBR 83.9 78.7 81.3 79.8
</table>
<tableCaption confidence="0.992404">
Table 3: F1 (%) of NER on different entity types.
</tableCaption>
<table confidence="0.6693302">
Features NER (F1) NEN (Accuracy)
Fo 59.2 61.3
Fo + Fl 65.8 68.7
Fo + F9 80.1 77.2
Fo + Fl + F9 83.6 82.6
</table>
<tableCaption confidence="0.9814085">
Table 4: Overall F1 (%) of NER and Accuracy (%) of
NEN with different feature sets.
</tableCaption>
<bodyText confidence="0.998393875">
Table 4 shows the overall performance of our
method with various feature set combinations,
where Fo, Fl and F9 denote the orthographic fea-
tures, the lexical features, and the gazetteer-related
features, respectively. From Table 4 we see that
gazetteer-related features significantly boost the F1
for NER and Accuracy for NEN, suggesting the im-
portance of external knowledge for this task.
</bodyText>
<subsectionHeader confidence="0.647988">
5.5 Discussion
</subsectionHeader>
<bodyText confidence="0.9997589">
One main error source for NER and NEN, which
accounts for more than half of all the errors, is
slang expressions and informal abbreviations. For
instance, our method recognizes “California11” in
the tweet “· · · And Now, He Lives All The Way In
California11· · · ” as a LOCATION, however, it mis-
takenly identifies “Cali12” in the tweet “· · · i love
Cali so much··· ” as a PERSON. One reason is our
system does not generate any z-serial variable for
“California11” and “Cali1” since they have differ-
</bodyText>
<page confidence="0.500593">
2
</page>
<bodyText confidence="0.993625227272727">
ent lemmas. A more complicated case is “BS11” in
the tweet “· · · I, bobby shaw, am gonna put BS11 on
everything· · · ”, in which “BS11” is the abbreviation
of “bobby shaw”. Our method fails to recognize
“BS11” as an entity. There are two possible ways to
fix these errors: 1) Extending the scope of z-serial
variables to each word pairs with a common prefix;
and 2) developing advanced normalization compo-
nents to restore such slang expressions and informal
abbreviations into their canonical forms.
Our method does not directly exploit Wikipedia
for NEN. This explains the cases where our system
correctly links multiple entity mentions but fails to
generate canonical forms. Take the following two
tweets for example: “· · · nitip link win711 sp1· · · ”
and “· · · Hit the 3TB wall on SRT installing fresh
Win712· · · ”. Our system recognizes “win711” and
“Win712” as two mentions of the same product, but
cannot output their canonical forms “Windows 7”.
One possible solution is to exploit Wikipedia to
compile a dictionary consisting of entities and their
variations.
</bodyText>
<sectionHeader confidence="0.998493" genericHeader="conclusions">
6 Conclusions and Future work
</sectionHeader>
<bodyText confidence="0.99998315">
We study the task of NEN for tweets, a new genre
of texts that are short and prone to noise. Two chal-
lenges of this task are the dearth of information in
a single tweet and errors propagated from the NER
component. We propose jointly conducting NER
and NEN for multiple tweets using a factor graph, to
address these challenges. One unique characteristic
of our model is that a NE normalization variable is
introduced to indicate whether a word pair belongs
to the mentions of the same entity. We evaluate our
method on a manually annotated data set. Experi-
mental results show our method yields better F1 for
NER and Accuracy for NEN than the state-of-the-art
baseline that conducts two tasks sequentially.
In the future, we plan to explore two directions to
improve our method. First, we are going to develop
advanced tweet normalization technologies to re-
solve slang expressions and informal abbreviations.
Second, we are interested in incorporating knowl-
edge mined from Wikipedia into our factor graph.
</bodyText>
<sectionHeader confidence="0.998296" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999876333333333">
We thank Yunbo Cao, Dongdong Zhang, and Mu Li
for helpful discussions, and the anonymous review-
ers for their valuable comments.
</bodyText>
<page confidence="0.998073">
533
</page>
<sectionHeader confidence="0.988186" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999719295238095">
Laura Chiticariu, Rajasekar Krishnamurthy, Yunyao
Li, Frederick Reiss, and Shivakumar Vaithyanathan.
2010. Domain adaptation of rule-based annotators
for named-entity recognition tasks. In EMNLP, pages
1002–1012.
Aaron Cohen. 2005. Unsupervised gene/protein named
entity normalization using automatically extracted dic-
tionaries. In Proceedings of the ACL-ISMB Work-
shop on Linking Biological Literature, Ontologies and
Databases: Mining Biological Semantics, pages 17–
24, Detroit, June. Association for Computational Lin-
guistics.
Silviu Cucerzan. 2007. Large-scale named entity disam-
biguation based on wikipedia data. In In Proc. 2007
Joint Conference on EMNLP and CNLL, pages 708–
716.
Hong-Jie Dai, Richard Tzong-Han Tsai, and Wen-Lian
Hsu. 2011. Entity disambiguation using a markov-
logic network. In Proceedings of 5th International
Joint Conference on Natural Language Processing,
pages 846–855, Chiang Mai, Thailand, November.
Asian Federation of Natural Language Processing.
Doug Downey, Matthew Broadhead, and Oren Etzioni.
2007. Locating Complex Named Entities in Web Text.
In IJCAI.
Oren Etzioni, Michael Cafarella, Doug Downey, Ana-
Maria Popescu, Tal Shaked, Stephen Soderland,
Daniel S. Weld, and Alexander Yates. 2005. Unsu-
pervised named-entity extraction from the web: an ex-
perimental study. Artif. Intell., 165(1):91–134.
Tim Finin, Will Murnane, Anand Karandikar, Nicholas
Keller, Justin Martineau, and Mark Dredze. 2010.
Annotating named entities in twitter data with crowd-
sourcing. In CSLDAMT, pages 80–88.
Jenny Rose Finkel and Christopher D. Manning. 2009.
Nested named entity recognition. In EMNLP, pages
141–150.
Michel Galley. 2006. A skip-chain conditional random
field for ranking meeting utterances by importance.
In Association for Computational Linguistics, pages
364–372.
Bo Han and Timothy Baldwin. 2011. Lexical normalisa-
tion of short text messages: Makn sens a #twitter. In
ACL HLT.
Martin Jansche and Steven P. Abney. 2002. Informa-
tion extraction from voicemail transcripts. In EMNLP,
pages 320–327.
Valentin Jijkoun, Mahboob Alam Khalid, Maarten Marx,
and Maarten de Rijke. 2008. Named entity normal-
ization in user generated content. In Proceedings of
the second workshop on Analytics for noisy unstruc-
tured text data, AND ’08, pages 23–30, New York,
NY, USA. ACM.
Mahboob Khalid, Valentin Jijkoun, and Maarten de Ri-
jke. 2008. The impact of named entity normaliza-
tion on information retrieval for question answering.
In Craig Macdonald, Iadh Ounis, Vassilis Plachouras,
Ian Ruthven, and Ryen White, editors, Advances in In-
formation Retrieval, volume 4956 of Lecture Notes in
Computer Science, pages 705–710. Springer Berlin /
Heidelberg.
George R. Krupka and Kevin Hausman. 1998. Isoquest:
Description of the netowlTM extractor system as used
in muc-7. In MUC-7.
Huifeng Li, Rohini K. Srihari, Cheng Niu, and Wei Li.
2002. Location normalization for information extrac-
tion. In COLING.
Xiaohua Liu, Shaodian Zhang, Furu Wei, and Ming
Zhou. 2011. Recognizing named entities in tweets.
In ACL.
Walid Magdy, Kareem Darwish, Ossama Emam, and
Hany Hassan. 2007. Arabic cross-document person
name normalization. In In CASL Workshop 07, pages
25–32.
Andrew Mccallum and Wei Li. 2003. Early results
for named entity recognition with conditional random
fields, feature induction and web-enhanced lexicons.
In HLT-NAACL, pages 188–191.
Einat Minkov, Richard C. Wang, and William W. Cohen.
2005. Extracting personal names from email: apply-
ing named entity recognition to informal text. In HLT,
pages 443–450.
Kevin P. Murphy, Yair Weiss, and Michael I. Jordan.
1999. Loopy belief propagation for approximate in-
ference: An empirical study. In In Proceedings of Un-
certainty in AI, pages 467–475.
David Nadeau and Satoshi Sekine. 2007. A survey of
named entity recognition and classification. Linguisti-
cae Investigationes, 30:3–26.
Lev Ratinov and Dan Roth. 2009. Design challenges
and misconceptions in named entity recognition. In
CoNLL, pages 147–155.
Alan Ritter, Sam Clark, Mausam, and Oren Etzioni.
2011. Named entity recognition in tweets: An ex-
perimental study. In Proceedings of the 2011 Confer-
ence on Empirical Methods in Natural Language Pro-
cessing, pages 1524–1534, Edinburgh, Scotland, UK.,
July. Association for Computational Linguistics.
Sameer Singh, Dustin Hillard, and Chris Leggetter. 2010.
Minimally-supervised extraction of entities from text
advertisements. In HLT-NAACL, pages 73–81.
Erik F. Tjong Kim Sang and Fien De Meulder. 2003. In-
troduction to the CoNLL-2003 shared task: language-
independent named entity recognition. In HLT-
NAACL, pages 142–147.
</reference>
<page confidence="0.983782">
534
</page>
<reference confidence="0.997815">
Yefeng Wang. 2009. Annotating and recognising named
entities in clinical notes. In ACL-IJCNLP, pages 18–
26.
Kazuhiro Yoshida and Jun’ichi Tsujii. 2007. Reranking
for biomedical named-entity recognition. In BioNLP,
pages 209–216.
</reference>
<page confidence="0.998531">
535
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.290543">
<title confidence="0.999671">Joint Inference of Named Entity Recognition and Normalization for Tweets</title>
<author confidence="0.999804">Liu Ming Zhou Furu Wei Zhongyang Fu Xiangyang Zhou</author>
<affiliation confidence="0.978806666666667">of Computer Science and Harbin Institute of Technology, Harbin, 150001, of Computer Science and</affiliation>
<address confidence="0.598987">Shanghai Jiao Tong University, Shanghai, 200240,</address>
<affiliation confidence="0.888498666666667">of Computer Science and Shandong University, Jinan, 250100, Research</affiliation>
<address confidence="0.986162">Beijing, 100190,</address>
<email confidence="0.991026">fuwei,</email>
<abstract confidence="0.977429545454546">Tweets represent a critical source of fresh information, in which named entities occur frequently with rich variations. We study the problem of named entity normalization (NEN) for tweets. Two main challenges are the errors propagated from named entity recognition (NER) and the dearth of information in a single tweet. We propose a novel graphical model to simultaneously conduct NER and NEN on multiple tweets to address these challenges. Particularly, our model introduces a binary random variable for each pair of words with the same lemma across similar tweets, whose value indicates whether the two related words are mentions of the same entity. We evaluate our method on a manually annotated data set, and show that our method outperforms the baseline that handles these two tasks separately, boosting the F1 from 80.2% to 83.6% for NER, and the Accuracy from 79.4% to 82.6% for NEN, respectively.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Laura Chiticariu</author>
<author>Rajasekar Krishnamurthy</author>
<author>Yunyao Li</author>
<author>Frederick Reiss</author>
<author>Shivakumar Vaithyanathan</author>
</authors>
<title>Domain adaptation of rule-based annotators for named-entity recognition tasks.</title>
<date>2010</date>
<booktitle>In EMNLP,</booktitle>
<pages>1002--1012</pages>
<contexts>
<context position="10167" citStr="Chiticariu et al. (2010)" startWordPosition="1700" endWordPosition="1704">schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yoshida and Tsujii build a biomedical NER system (2007) using lexical features, orthographic features, semantic features and syntactic features, such as part-of-speech (POS) and shallow parsing; Downey et al. (2007) employ capitalization cues and n-gram statistics to locate names of a variety of classes in web text; Wang (2009) introduces NER to clinical notes. A linear CRF model is trained on a manually annotated data set, which achieves an F1 of 81.48% on the test data set; Chiticariu et al. (2010) design and implement a highlevel language NERL which simplifies the process of building, understanding, and customizing complex rule-based named-entity annotators for different domains. Recently, NER for Tweets attracts growing interest. Finin et al. (2010) use Amazons Mechanical Turk service 3 and CrowdFlower 4 to annotate named entities in tweets and train a CRF model to evaluate the effectiveness of human labeling. Ritter et al. (2011) re-build the NLP pipeline for tweets beginning with POS tagging, through chunking, to NER, which first exploits a CRF model to segment named entities and th</context>
</contexts>
<marker>Chiticariu, Krishnamurthy, Li, Reiss, Vaithyanathan, 2010</marker>
<rawString>Laura Chiticariu, Rajasekar Krishnamurthy, Yunyao Li, Frederick Reiss, and Shivakumar Vaithyanathan. 2010. Domain adaptation of rule-based annotators for named-entity recognition tasks. In EMNLP, pages 1002–1012.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aaron Cohen</author>
</authors>
<title>Unsupervised gene/protein named entity normalization using automatically extracted dictionaries.</title>
<date>2005</date>
<booktitle>In Proceedings of the ACL-ISMB Workshop on Linking Biological Literature, Ontologies and Databases: Mining Biological Semantics,</booktitle>
<pages>17--24</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Detroit,</location>
<contexts>
<context position="3345" citStr="Cohen, 2005" startWordPosition="523" endWordPosition="524">ions 2. As an illustrative example, we show “Anneke Gronloh”, which may occur as “Mw.,Gronloh”, “Anneke Kronloh” or “Mevrouw G”. We thus propose NEN for tweets, which plays an important role in entity retrieval, trend detection, and event and entity tracking. For example, Khalid et al. (2008) show that even a simple normalization method leads to improvements of early precision, for both document and passage retrieval, and better normalization results in better retrieval performance. Traditionally, NEN is regarded as a septated task, which takes the output of NER as its input (Li et al., 2002; Cohen, 2005; Jijkoun et al., 2008; Dai et al., 2011). One limitation of this cascaded approach is that errors propagate from NER to NEN and there is no feedback from NEN to NER. As demonstrated by Khalid et al. (2008), most NEN errors are caused 2This data set consists of 12,245 randomly sampled tweets within five days. 526 Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 526–535, Jeju, Republic of Korea, 8-14 July 2012. c�2012 Association for Computational Linguistics by recognition errors. Another challenge of NEN is the dearth of information in a single tw</context>
<context position="11543" citStr="Cohen (2005)" startWordPosition="1925" endWordPosition="1926">imultaneously using sequential labeling techniques. Liu et al. (2011) combine a classifier based on the k-nearest neighbors algorithm with a CRF-based model to leverage cross tweets information, and adopt the semi-supervised learning to leverage unlabeled tweets. Our method leverages redundance in similar tweets, using a factor graph rather than a two-stage labeling strategy. One advantage of our method is that local and global information can interact with each other. 2.2 NEN There is a large body of studies into normalizing various types of entities for formally written texts. For instance, Cohen (2005) normalizes gene/protein names using dictionaries automatically extracted from gene databases; Magdy et al. (2007) address cross-document Arabic name normalization using a machine learning approach, a dictionary of person names and frequency information for names in a collection; Cucerzan (2007) demostrates a largescale system for the recognition and semantic disambiguation of named entities based on information extracted from a large encyclopedic collection and Web search results; Dai et al. (2011) employ a Markov logic network to model interweaved con3https://www.mturk.com/mturk/ 4http://cro</context>
</contexts>
<marker>Cohen, 2005</marker>
<rawString>Aaron Cohen. 2005. Unsupervised gene/protein named entity normalization using automatically extracted dictionaries. In Proceedings of the ACL-ISMB Workshop on Linking Biological Literature, Ontologies and Databases: Mining Biological Semantics, pages 17– 24, Detroit, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Silviu Cucerzan</author>
</authors>
<title>Large-scale named entity disambiguation based on wikipedia data. In</title>
<date>2007</date>
<booktitle>In Proc. 2007 Joint Conference on EMNLP and CNLL,</booktitle>
<pages>708--716</pages>
<contexts>
<context position="11839" citStr="Cucerzan (2007)" startWordPosition="1964" endWordPosition="1965">ce in similar tweets, using a factor graph rather than a two-stage labeling strategy. One advantage of our method is that local and global information can interact with each other. 2.2 NEN There is a large body of studies into normalizing various types of entities for formally written texts. For instance, Cohen (2005) normalizes gene/protein names using dictionaries automatically extracted from gene databases; Magdy et al. (2007) address cross-document Arabic name normalization using a machine learning approach, a dictionary of person names and frequency information for names in a collection; Cucerzan (2007) demostrates a largescale system for the recognition and semantic disambiguation of named entities based on information extracted from a large encyclopedic collection and Web search results; Dai et al. (2011) employ a Markov logic network to model interweaved con3https://www.mturk.com/mturk/ 4http://crowdflower.com/ 528 straints in a setting of gene mention normalization. Jijkoun et al. (2008) study NEN for UGC. They report that the accuracy of a baseline NEN system based on Wikipedia drops considerably from 94% on edited news to 77% on UGC. They identify three main error sources, i.e., entity</context>
<context position="26111" citStr="Cucerzan, 2007" startWordPosition="4479" endWordPosition="4480">y kappa is 0.72. Any inconsistent case is discussed by the two annotators till a consensus is reached. 2, 245 tweets are used for development, and the remainder are used for 5-fold cross validation. 5.2 Evaluation Metrics We adopt the widely-used Precision, Recall and F1 to measure the performance of NER for a particular type of entity, and the average Precision, Recall and F1 to measure the overall performance of NER (Liu et al., 2011; Ritter et al., 2011). As for NEN, we adopt the widely-used Accuracy, i.e., to what percentage the outputted canonical forms are correct (Jijkoun et al., 2008; Cucerzan, 2007; Li et al., 2002). 12Two native English speakers. 5.3 Baseline We develop a cascaded system as the baseline, which conducts NER and NEN sequentially. Its NER module, denoted by SBR, is based on the stateof-the-art method introduced by Liu et al. (2011); and its NEN model , denoted by SBN, follows the NEN system for user-generated news comments proposed by Jijkoun et al. (2008), which uses handcrafted rules to improve a typical NEN system that normalizes surface forms to Wikipedia page titles. We use the POS tagger developed by Ritter et al. (2011) to extract POS related features, and the Open</context>
</contexts>
<marker>Cucerzan, 2007</marker>
<rawString>Silviu Cucerzan. 2007. Large-scale named entity disambiguation based on wikipedia data. In In Proc. 2007 Joint Conference on EMNLP and CNLL, pages 708– 716.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hong-Jie Dai</author>
<author>Richard Tzong-Han Tsai</author>
<author>Wen-Lian Hsu</author>
</authors>
<title>Entity disambiguation using a markovlogic network. In</title>
<date>2011</date>
<journal>Asian Federation of Natural Language Processing.</journal>
<booktitle>Proceedings of 5th International Joint Conference on Natural Language Processing,</booktitle>
<pages>846--855</pages>
<location>Chiang Mai, Thailand,</location>
<contexts>
<context position="3386" citStr="Dai et al., 2011" startWordPosition="529" endWordPosition="532"> we show “Anneke Gronloh”, which may occur as “Mw.,Gronloh”, “Anneke Kronloh” or “Mevrouw G”. We thus propose NEN for tweets, which plays an important role in entity retrieval, trend detection, and event and entity tracking. For example, Khalid et al. (2008) show that even a simple normalization method leads to improvements of early precision, for both document and passage retrieval, and better normalization results in better retrieval performance. Traditionally, NEN is regarded as a septated task, which takes the output of NER as its input (Li et al., 2002; Cohen, 2005; Jijkoun et al., 2008; Dai et al., 2011). One limitation of this cascaded approach is that errors propagate from NER to NEN and there is no feedback from NEN to NER. As demonstrated by Khalid et al. (2008), most NEN errors are caused 2This data set consists of 12,245 randomly sampled tweets within five days. 526 Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 526–535, Jeju, Republic of Korea, 8-14 July 2012. c�2012 Association for Computational Linguistics by recognition errors. Another challenge of NEN is the dearth of information in a single tweet, due to the short and noise-prone nat</context>
<context position="12047" citStr="Dai et al. (2011)" startWordPosition="1995" endWordPosition="1998">body of studies into normalizing various types of entities for formally written texts. For instance, Cohen (2005) normalizes gene/protein names using dictionaries automatically extracted from gene databases; Magdy et al. (2007) address cross-document Arabic name normalization using a machine learning approach, a dictionary of person names and frequency information for names in a collection; Cucerzan (2007) demostrates a largescale system for the recognition and semantic disambiguation of named entities based on information extracted from a large encyclopedic collection and Web search results; Dai et al. (2011) employ a Markov logic network to model interweaved con3https://www.mturk.com/mturk/ 4http://crowdflower.com/ 528 straints in a setting of gene mention normalization. Jijkoun et al. (2008) study NEN for UGC. They report that the accuracy of a baseline NEN system based on Wikipedia drops considerably from 94% on edited news to 77% on UGC. They identify three main error sources, i.e., entity recognition errors, multiple ways of referring to the same entity and ambiguous references, and exploit hand-crafted rules to improve the baseline NEN system. We introduce the task of NEN for tweets, a new g</context>
</contexts>
<marker>Dai, Tsai, Hsu, 2011</marker>
<rawString>Hong-Jie Dai, Richard Tzong-Han Tsai, and Wen-Lian Hsu. 2011. Entity disambiguation using a markovlogic network. In Proceedings of 5th International Joint Conference on Natural Language Processing, pages 846–855, Chiang Mai, Thailand, November. Asian Federation of Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Doug Downey</author>
<author>Matthew Broadhead</author>
<author>Oren Etzioni</author>
</authors>
<title>Locating Complex Named Entities in Web Text.</title>
<date>2007</date>
<booktitle>In IJCAI.</booktitle>
<contexts>
<context position="9877" citStr="Downey et al. (2007)" startWordPosition="1647" endWordPosition="1650">oni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yoshida and Tsujii build a biomedical NER system (2007) using lexical features, orthographic features, semantic features and syntactic features, such as part-of-speech (POS) and shallow parsing; Downey et al. (2007) employ capitalization cues and n-gram statistics to locate names of a variety of classes in web text; Wang (2009) introduces NER to clinical notes. A linear CRF model is trained on a manually annotated data set, which achieves an F1 of 81.48% on the test data set; Chiticariu et al. (2010) design and implement a highlevel language NERL which simplifies the process of building, understanding, and customizing complex rule-based named-entity annotators for different domains. Recently, NER for Tweets attracts growing interest. Finin et al. (2010) use Amazons Mechanical Turk service 3 and CrowdFlow</context>
</contexts>
<marker>Downey, Broadhead, Etzioni, 2007</marker>
<rawString>Doug Downey, Matthew Broadhead, and Oren Etzioni. 2007. Locating Complex Named Entities in Web Text. In IJCAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Oren Etzioni</author>
<author>Michael Cafarella</author>
<author>Doug Downey</author>
<author>AnaMaria Popescu</author>
<author>Tal Shaked</author>
<author>Stephen Soderland</author>
<author>Daniel S Weld</author>
<author>Alexander Yates</author>
</authors>
<title>Unsupervised named-entity extraction from the web: an experimental study.</title>
<date>2005</date>
<journal>Artif. Intell.,</journal>
<volume>165</volume>
<issue>1</issue>
<contexts>
<context position="9274" citStr="Etzioni et al., 2005" startWordPosition="1552" endWordPosition="1555"> Work Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yoshida and Tsujii build a biomedical NER system (2007) using lexical features, orthographic features, semantic features and syntactic features, such as part-of-speech (POS) and shallow parsing; Downey et al. (20</context>
</contexts>
<marker>Etzioni, Cafarella, Downey, Popescu, Shaked, Soderland, Weld, Yates, 2005</marker>
<rawString>Oren Etzioni, Michael Cafarella, Doug Downey, AnaMaria Popescu, Tal Shaked, Stephen Soderland, Daniel S. Weld, and Alexander Yates. 2005. Unsupervised named-entity extraction from the web: an experimental study. Artif. Intell., 165(1):91–134.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tim Finin</author>
<author>Will Murnane</author>
<author>Anand Karandikar</author>
<author>Nicholas Keller</author>
<author>Justin Martineau</author>
<author>Mark Dredze</author>
</authors>
<title>Annotating named entities in twitter data with crowdsourcing. In</title>
<date>2010</date>
<booktitle>CSLDAMT,</booktitle>
<pages>80--88</pages>
<contexts>
<context position="10425" citStr="Finin et al. (2010)" startWordPosition="1739" endWordPosition="1742"> such as part-of-speech (POS) and shallow parsing; Downey et al. (2007) employ capitalization cues and n-gram statistics to locate names of a variety of classes in web text; Wang (2009) introduces NER to clinical notes. A linear CRF model is trained on a manually annotated data set, which achieves an F1 of 81.48% on the test data set; Chiticariu et al. (2010) design and implement a highlevel language NERL which simplifies the process of building, understanding, and customizing complex rule-based named-entity annotators for different domains. Recently, NER for Tweets attracts growing interest. Finin et al. (2010) use Amazons Mechanical Turk service 3 and CrowdFlower 4 to annotate named entities in tweets and train a CRF model to evaluate the effectiveness of human labeling. Ritter et al. (2011) re-build the NLP pipeline for tweets beginning with POS tagging, through chunking, to NER, which first exploits a CRF model to segment named entities and then uses a distantly supervised approach based on LabeledLDA to classify named entities. Unlike this work, our work detects the boundary and type of a named entity simultaneously using sequential labeling techniques. Liu et al. (2011) combine a classifier bas</context>
</contexts>
<marker>Finin, Murnane, Karandikar, Keller, Martineau, Dredze, 2010</marker>
<rawString>Tim Finin, Will Murnane, Anand Karandikar, Nicholas Keller, Justin Martineau, and Mark Dredze. 2010. Annotating named entities in twitter data with crowdsourcing. In CSLDAMT, pages 80–88.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jenny Rose Finkel</author>
<author>Christopher D Manning</author>
</authors>
<title>Nested named entity recognition.</title>
<date>2009</date>
<booktitle>In EMNLP,</booktitle>
<pages>141--150</pages>
<contexts>
<context position="8904" citStr="Finkel and Manning, 2009" startWordPosition="1488" endWordPosition="1491">otated data set, and show that our method compares favorably with the baseline, achieving better performance in both tasks. Our paper is organized as follows. In the next section, we introduce related work. In Section 3 and 4, we formally define the task and present our method. In Section 5, we evaluate our method. And finally we conclude our work in Section 6. 2 Related Work Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding sc</context>
</contexts>
<marker>Finkel, Manning, 2009</marker>
<rawString>Jenny Rose Finkel and Christopher D. Manning. 2009. Nested named entity recognition. In EMNLP, pages 141–150.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michel Galley</author>
</authors>
<title>A skip-chain conditional random field for ranking meeting utterances by importance.</title>
<date>2006</date>
<booktitle>In Association for Computational Linguistics,</booktitle>
<pages>364--372</pages>
<contexts>
<context position="7359" citStr="Galley, 2006" startWordPosition="1220" endWordPosition="1221">are the same set of feature templates. Figure 1 illustrates an example of our factor graph for two tweets. Figure 1: A factor graph that jointly conducts NER and NEN on multiple tweets. Blue and green circles represent NE type (y-serials) and normalization variables (z-serials), respectively; filled circles indicate observed random variables; blue rectangles represent the factors connecting neighboring y-serial variables while red rectangles stand for the factors connecting distant y-serial and z-serial variables. It is worth noting that our factor graph is different from the skip-chain CRFs (Galley, 2006) in the sense that any skip-chain factor of our model consists not only of two NE type variables (yim and yjn), which is the case for skip-chain CRFs, but also a normalization variable (zijmn). It is these normalization variables that enable us to conduct NER and NEN jointly. We manually add normalization information to the data set shared by Liu et al. (2011), to evaluate our method. Experimental results show that our method achieves 83.6% F1 for NER and 82.6% Accuracy for NEN, outperforming the baseline with 80.2%F1 for NER and 79.4% Accuracy for NEN. We summarize our contributions as follow</context>
</contexts>
<marker>Galley, 2006</marker>
<rawString>Michel Galley. 2006. A skip-chain conditional random field for ranking meeting utterances by importance. In Association for Computational Linguistics, pages 364–372.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Han</author>
<author>Timothy Baldwin</author>
</authors>
<title>Lexical normalisation of short text messages: Makn sens a #twitter.</title>
<date>2011</date>
<booktitle>In ACL HLT.</booktitle>
<marker>Han, Baldwin, 2011</marker>
<rawString>Bo Han and Timothy Baldwin. 2011. Lexical normalisation of short text messages: Makn sens a #twitter. In ACL HLT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Jansche</author>
<author>Steven P Abney</author>
</authors>
<title>Information extraction from voicemail transcripts.</title>
<date>2002</date>
<booktitle>In EMNLP,</booktitle>
<pages>320--327</pages>
<contexts>
<context position="8974" citStr="Jansche and Abney, 2002" startWordPosition="1500" endWordPosition="1503">baseline, achieving better performance in both tasks. Our paper is organized as follows. In the next section, we introduce related work. In Section 3 and 4, we formally define the task and present our method. In Section 5, we evaluate our method. And finally we conclude our work in Section 6. 2 Related Work Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside a</context>
</contexts>
<marker>Jansche, Abney, 2002</marker>
<rawString>Martin Jansche and Steven P. Abney. 2002. Information extraction from voicemail transcripts. In EMNLP, pages 320–327.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Valentin Jijkoun</author>
<author>Mahboob Alam Khalid</author>
<author>Maarten Marx</author>
<author>Maarten de Rijke</author>
</authors>
<title>Named entity normalization in user generated content.</title>
<date>2008</date>
<booktitle>In Proceedings of the second workshop on Analytics for noisy unstructured text data, AND ’08,</booktitle>
<pages>23--30</pages>
<publisher>ACM.</publisher>
<location>New York, NY, USA.</location>
<marker>Jijkoun, Khalid, Marx, de Rijke, 2008</marker>
<rawString>Valentin Jijkoun, Mahboob Alam Khalid, Maarten Marx, and Maarten de Rijke. 2008. Named entity normalization in user generated content. In Proceedings of the second workshop on Analytics for noisy unstructured text data, AND ’08, pages 23–30, New York, NY, USA. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mahboob Khalid</author>
<author>Valentin Jijkoun</author>
<author>Maarten de Rijke</author>
</authors>
<title>The impact of named entity normalization on information retrieval for question answering. In</title>
<date>2008</date>
<booktitle>Advances in Information Retrieval,</booktitle>
<volume>4956</volume>
<pages>705--710</pages>
<editor>Craig Macdonald, Iadh Ounis, Vassilis Plachouras, Ian Ruthven, and Ryen White, editors,</editor>
<publisher>Springer</publisher>
<location>Berlin / Heidelberg.</location>
<marker>Khalid, Jijkoun, de Rijke, 2008</marker>
<rawString>Mahboob Khalid, Valentin Jijkoun, and Maarten de Rijke. 2008. The impact of named entity normalization on information retrieval for question answering. In Craig Macdonald, Iadh Ounis, Vassilis Plachouras, Ian Ruthven, and Ryen White, editors, Advances in Information Retrieval, volume 4956 of Lecture Notes in Computer Science, pages 705–710. Springer Berlin / Heidelberg.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George R Krupka</author>
<author>Kevin Hausman</author>
</authors>
<title>Isoquest: Description of the netowlTM extractor system as used in muc-7.</title>
<date>1998</date>
<booktitle>In MUC-7.</booktitle>
<contexts>
<context position="8851" citStr="Krupka and Hausman, 1998" startWordPosition="1480" endWordPosition="1483">m each other. 2. We evaluate our method on a human annotated data set, and show that our method compares favorably with the baseline, achieving better performance in both tasks. Our paper is organized as follows. In the next section, we introduce related work. In Section 3 and 4, we formally define the task and present our method. In Section 5, we evaluate our method. And finally we conclude our work in Section 6. 2 Related Work Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findin</context>
</contexts>
<marker>Krupka, Hausman, 1998</marker>
<rawString>George R. Krupka and Kevin Hausman. 1998. Isoquest: Description of the netowlTM extractor system as used in muc-7. In MUC-7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Huifeng Li</author>
<author>Rohini K Srihari</author>
<author>Cheng Niu</author>
<author>Wei Li</author>
</authors>
<title>Location normalization for information extraction.</title>
<date>2002</date>
<booktitle>In COLING.</booktitle>
<contexts>
<context position="3332" citStr="Li et al., 2002" startWordPosition="519" endWordPosition="522">age of 3.3 variations 2. As an illustrative example, we show “Anneke Gronloh”, which may occur as “Mw.,Gronloh”, “Anneke Kronloh” or “Mevrouw G”. We thus propose NEN for tweets, which plays an important role in entity retrieval, trend detection, and event and entity tracking. For example, Khalid et al. (2008) show that even a simple normalization method leads to improvements of early precision, for both document and passage retrieval, and better normalization results in better retrieval performance. Traditionally, NEN is regarded as a septated task, which takes the output of NER as its input (Li et al., 2002; Cohen, 2005; Jijkoun et al., 2008; Dai et al., 2011). One limitation of this cascaded approach is that errors propagate from NER to NEN and there is no feedback from NEN to NER. As demonstrated by Khalid et al. (2008), most NEN errors are caused 2This data set consists of 12,245 randomly sampled tweets within five days. 526 Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 526–535, Jeju, Republic of Korea, 8-14 July 2012. c�2012 Association for Computational Linguistics by recognition errors. Another challenge of NEN is the dearth of information i</context>
<context position="26129" citStr="Li et al., 2002" startWordPosition="4481" endWordPosition="4484"> Any inconsistent case is discussed by the two annotators till a consensus is reached. 2, 245 tweets are used for development, and the remainder are used for 5-fold cross validation. 5.2 Evaluation Metrics We adopt the widely-used Precision, Recall and F1 to measure the performance of NER for a particular type of entity, and the average Precision, Recall and F1 to measure the overall performance of NER (Liu et al., 2011; Ritter et al., 2011). As for NEN, we adopt the widely-used Accuracy, i.e., to what percentage the outputted canonical forms are correct (Jijkoun et al., 2008; Cucerzan, 2007; Li et al., 2002). 12Two native English speakers. 5.3 Baseline We develop a cascaded system as the baseline, which conducts NER and NEN sequentially. Its NER module, denoted by SBR, is based on the stateof-the-art method introduced by Liu et al. (2011); and its NEN model , denoted by SBN, follows the NEN system for user-generated news comments proposed by Jijkoun et al. (2008), which uses handcrafted rules to improve a typical NEN system that normalizes surface forms to Wikipedia page titles. We use the POS tagger developed by Ritter et al. (2011) to extract POS related features, and the OpenNLP toolkit to get</context>
</contexts>
<marker>Li, Srihari, Niu, Li, 2002</marker>
<rawString>Huifeng Li, Rohini K. Srihari, Cheng Niu, and Wei Li. 2002. Location normalization for information extraction. In COLING.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaohua Liu</author>
<author>Shaodian Zhang</author>
<author>Furu Wei</author>
<author>Ming Zhou</author>
</authors>
<title>Recognizing named entities in tweets.</title>
<date>2011</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="2141" citStr="Liu et al. (2011)" startWordPosition="327" endWordPosition="330">less than 140 characters shared through the Twitter service 1, have become an important source of fresh information. As a result, the task of named entity recognition (NER) for tweets, which aims to identify mentions of rigid designators from tweets belonging to named-entity types such as persons, organizations and locations (2007), has attracted increasing research interest. For example, Ritter et al. (2011) develop a system that exploits a CRF model to segment named 1http://www.twitter.com entities and then uses a distantly supervised approach based on LabeledLDA to classify named entities. Liu et al. (2011) combine a classifier based on the k-nearest neighbors algorithm with a CRFbased model to leverage cross tweets information, and adopt the semi-supervised learning to leverage unlabeled tweets. However, named entity normalization (NEN) for tweets, which transforms named entities mentioned in tweets to their unambiguous canonical forms, has not been well studied. Owing to the informal nature of tweets, there are rich variations of named entities in them. According to our investigation on the data set provided by Liu et al. (2011), every named entity in tweets has an average of 3.3 variations 2.</context>
<context position="5445" citStr="Liu et al. (2011)" startWordPosition="880" endWordPosition="883">ger King when he was a Prince!· · · ” and “· · · I’m craving all sorts of food: mcdonalds, burger king, pizza, chinese· · · ”. Suppose the NEN system believes that “burger king” cannot be mapped to “Burger King” since these two tweets are not similar in content. This will help NER to assign them different types of labels. Our method optimizes these two tasks simultaneously by enabling them to interact with each other. This largely differentiates our method from existing work. Furthermore, considering multiple tweets simultaneously allows us to exploit the redundancy in tweets, as suggested by Liu et al. (2011). For example, consider the following two tweets: “· · · Bobby Shaw you don’t invite the wind· · · ” and “· · · I own yah ! Loool bobby shaw· · · ”. Recognizing “Bobby Shaw” in the first tweet as a PERSON is easy owing to its capitalization and the following word “you”, which in turn helps to identify “bobby shaw” in the second tweet as a PERSON. We adopt a factor graph as our graphical model, which is constructed in the following manner. We first introduce a random variable for each word in every tweet, which represents the BILOU (Beginning, the Inside and the Last tokens of multi-token entit</context>
<context position="7721" citStr="Liu et al. (2011)" startWordPosition="1283" endWordPosition="1286">es represent the factors connecting neighboring y-serial variables while red rectangles stand for the factors connecting distant y-serial and z-serial variables. It is worth noting that our factor graph is different from the skip-chain CRFs (Galley, 2006) in the sense that any skip-chain factor of our model consists not only of two NE type variables (yim and yjn), which is the case for skip-chain CRFs, but also a normalization variable (zijmn). It is these normalization variables that enable us to conduct NER and NEN jointly. We manually add normalization information to the data set shared by Liu et al. (2011), to evaluate our method. Experimental results show that our method achieves 83.6% F1 for NER and 82.6% Accuracy for NEN, outperforming the baseline with 80.2%F1 for NER and 79.4% Accuracy for NEN. We summarize our contributions as follows. 1. We introduce the task of NEN for tweets, and propose jointly conducting NER and NEN for 527 multiple tweets using a factor graph, which leverages redundancy in tweets to make up for the dearth of information in a single tweet and allows these two tasks to inform each other. 2. We evaluate our method on a human annotated data set, and show that our method</context>
<context position="11000" citStr="Liu et al. (2011)" startWordPosition="1838" endWordPosition="1841">acts growing interest. Finin et al. (2010) use Amazons Mechanical Turk service 3 and CrowdFlower 4 to annotate named entities in tweets and train a CRF model to evaluate the effectiveness of human labeling. Ritter et al. (2011) re-build the NLP pipeline for tweets beginning with POS tagging, through chunking, to NER, which first exploits a CRF model to segment named entities and then uses a distantly supervised approach based on LabeledLDA to classify named entities. Unlike this work, our work detects the boundary and type of a named entity simultaneously using sequential labeling techniques. Liu et al. (2011) combine a classifier based on the k-nearest neighbors algorithm with a CRF-based model to leverage cross tweets information, and adopt the semi-supervised learning to leverage unlabeled tweets. Our method leverages redundance in similar tweets, using a factor graph rather than a two-stage labeling strategy. One advantage of our method is that local and global information can interact with each other. 2.2 NEN There is a large body of studies into normalizing various types of entities for formally written texts. For instance, Cohen (2005) normalizes gene/protein names using dictionaries automat</context>
<context position="13640" citStr="Liu et al. (2011)" startWordPosition="2261" endWordPosition="2264">weet: “mycraftingworld: #Win Microsoft Office 2010 Home and Student #Contest from @office http://bit.ly/ · · · ”, where “mycraftingworld” is the name of the user who published this tweet. Words beginning with “#” like “”#Win” are hash tags; words starting with “@” like “@office” represent user names; and “http://bit.ly/” is a shortened link. Given a set of tweets, e.g., tweets within some period or related to some query, our task is: 1) To recognize each mention of entities of predefined types for each tweet; and 2) to restore each entity mention into its unambiguous canonical form. Following Liu et al. (2011), we focus on four types of entities, i.e., PERSON, ORGANIZATION, PRODUCT, and LOCATION, and constrain our scope to English tweets. Note that the NEN sub-task can be transformed as follows. Given each pair of entity mentions, decide whether they denote the same entity. Once this is achieved, we can link all the mentions of the same entity, and choose a representative mention, e.g., the longest mention, as their canonical form. As an illustrative example, consider the following three tweets: “· · · Gaga’s Christmas dinner with her family. Awwwwn· · · ”, “· · · Lady Gaaaaga with her family on Ch</context>
<context position="25162" citStr="Liu et al. (2011)" startWordPosition="4325" endWordPosition="4328">xes and suffixes of tim. Lexical features: Lemma of tim; whether tim is OOV; whether tim / ti+1 m / ti−1 mand tjn / tj+1 n / tj−1 n have the same POS; whether yim and yjn have the same label/entity type. Gazetteer-related features: Whether Yi ∩ Yn j / m Ymi+1 ∩ Yn+1 / Y m 1 ∩ Yn−1 is empty; whether the dominating label/entity type in Ymi is the same as that in Ynj . 5 Experiments We manually annotate a data set to evaluate our method. We show that our method outperforms the baseline, a cascaded system that conducts NER and NEN individually. 5.1 Data Preparation We use the data set provided by Liu et al. (2011), which consists of 12,245 tweets with four types of entities annotated: PERSON, LOCATION, ORGANIZATION and PRODUCT. We enrich this data set by adding entity normalization information. Two annotators 12 are involved. For any entity mention, two annotators independently annotate its canonical form. The inter-rater agreement measured by kappa is 0.72. Any inconsistent case is discussed by the two annotators till a consensus is reached. 2, 245 tweets are used for development, and the remainder are used for 5-fold cross validation. 5.2 Evaluation Metrics We adopt the widely-used Precision, Recall </context>
</contexts>
<marker>Liu, Zhang, Wei, Zhou, 2011</marker>
<rawString>Xiaohua Liu, Shaodian Zhang, Furu Wei, and Ming Zhou. 2011. Recognizing named entities in tweets. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Walid Magdy</author>
<author>Kareem Darwish</author>
<author>Ossama Emam</author>
<author>Hany Hassan</author>
</authors>
<title>Arabic cross-document person name normalization.</title>
<date>2007</date>
<booktitle>In In CASL Workshop 07,</booktitle>
<pages>25--32</pages>
<contexts>
<context position="11657" citStr="Magdy et al. (2007)" startWordPosition="1937" endWordPosition="1940">earest neighbors algorithm with a CRF-based model to leverage cross tweets information, and adopt the semi-supervised learning to leverage unlabeled tweets. Our method leverages redundance in similar tweets, using a factor graph rather than a two-stage labeling strategy. One advantage of our method is that local and global information can interact with each other. 2.2 NEN There is a large body of studies into normalizing various types of entities for formally written texts. For instance, Cohen (2005) normalizes gene/protein names using dictionaries automatically extracted from gene databases; Magdy et al. (2007) address cross-document Arabic name normalization using a machine learning approach, a dictionary of person names and frequency information for names in a collection; Cucerzan (2007) demostrates a largescale system for the recognition and semantic disambiguation of named entities based on information extracted from a large encyclopedic collection and Web search results; Dai et al. (2011) employ a Markov logic network to model interweaved con3https://www.mturk.com/mturk/ 4http://crowdflower.com/ 528 straints in a setting of gene mention normalization. Jijkoun et al. (2008) study NEN for UGC. Th</context>
</contexts>
<marker>Magdy, Darwish, Emam, Hassan, 2007</marker>
<rawString>Walid Magdy, Kareem Darwish, Ossama Emam, and Hany Hassan. 2007. Arabic cross-document person name normalization. In In CASL Workshop 07, pages 25–32.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Mccallum</author>
<author>Wei Li</author>
</authors>
<title>Early results for named entity recognition with conditional random fields, feature induction and web-enhanced lexicons.</title>
<date>2003</date>
<booktitle>In HLT-NAACL,</booktitle>
<pages>188--191</pages>
<contexts>
<context position="9251" citStr="Mccallum and Li, 2003" startWordPosition="1548" endWordPosition="1551">in Section 6. 2 Related Work Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yoshida and Tsujii build a biomedical NER system (2007) using lexical features, orthographic features, semantic features and syntactic features, such as part-of-speech (POS) and shallow par</context>
</contexts>
<marker>Mccallum, Li, 2003</marker>
<rawString>Andrew Mccallum and Wei Li. 2003. Early results for named entity recognition with conditional random fields, feature induction and web-enhanced lexicons. In HLT-NAACL, pages 188–191.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Einat Minkov</author>
<author>Richard C Wang</author>
<author>William W Cohen</author>
</authors>
<title>Extracting personal names from email: applying named entity recognition to informal text.</title>
<date>2005</date>
<booktitle>In HLT,</booktitle>
<pages>443--450</pages>
<contexts>
<context position="9066" citStr="Minkov et al., 2005" startWordPosition="1516" endWordPosition="1519">next section, we introduce related work. In Section 3 and 4, we formally define the task and present our method. In Section 5, we evaluate our method. And finally we conclude our work in Section 6. 2 Related Work Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yosh</context>
</contexts>
<marker>Minkov, Wang, Cohen, 2005</marker>
<rawString>Einat Minkov, Richard C. Wang, and William W. Cohen. 2005. Extracting personal names from email: applying named entity recognition to informal text. In HLT, pages 443–450.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin P Murphy</author>
<author>Yair Weiss</author>
<author>Michael I Jordan</author>
</authors>
<title>Loopy belief propagation for approximate inference: An empirical study.</title>
<date>1999</date>
<booktitle>In In Proceedings of Uncertainty in AI,</booktitle>
<pages>467--475</pages>
<contexts>
<context position="19731" citStr="Murphy et al., 1999" startWordPosition="3380" endWordPosition="3383"> two feature sets. Θ = {λ(1) k }K1 ∪{λ(2) k }K2 k=1 is called the feature weight k=1 set or parameter set of G. Each feature has a real value as its weight. Training Θ is learnt from annotated tweets T, by maximizing the data likelihood, i.e., Θ* = arg max lnP(Y,Z|Θ,T) (3) Θ To solve this optimization problem, we first calculate its gradient: ∂ ln P(Y, Z|T; Θ) ∑ = δij mn · ϕ(2) k (yi m, yj n, zij mn) ∂λ2 k m,n,i,j p(yim, yjn, zijmn|T; Θ) 2 ϕk (yim, yjn, zijmn) (5) Here, the two marginal probabilities p(yi�1 m , yim|T; Θ) and p(yim, yjn, zijmn|T; Θ) are computed using loopy belief propagation (Murphy et al., 1999). Once we have computed the gradient, Θ* can be worked out by standard techniques such as steepest descent, conjugate gradient and the ∑ ln fi m(yi�1 ln P (Y, Z|G, T ) ∝ m , yi m)+ ∑ m,n,i,j (1) δijmn · ln fijmn(yim, yjn, zijmn) m,i ∑ lnfi m(yi�1 m , yim) = k ∑− m,i ∂ lnP(Y,Z|T;Θ)= ∑ϕk1)(yi-1 , yi m) ∂λ1k m,i ∑ yi−1 m ,yim (4) p(yim1,yim|T;Θ)ϕ(k1)(yim1,yim) ∑− ∑ m,n,i,j i δmjn yim,yj n,zij mn 530 limited-memory BFGS algorithm (L-BFGS). We choose L-BFGS because it is particularly well suited for optimization problems with a large number of variables. Inference Supposing the parameters O have be</context>
</contexts>
<marker>Murphy, Weiss, Jordan, 1999</marker>
<rawString>Kevin P. Murphy, Yair Weiss, and Michael I. Jordan. 1999. Loopy belief propagation for approximate inference: An empirical study. In In Proceedings of Uncertainty in AI, pages 467–475.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Nadeau</author>
<author>Satoshi Sekine</author>
</authors>
<title>A survey of named entity recognition and classification.</title>
<date>2007</date>
<booktitle>Linguisticae Investigationes,</booktitle>
<pages>30--3</pages>
<marker>Nadeau, Sekine, 2007</marker>
<rawString>David Nadeau and Satoshi Sekine. 2007. A survey of named entity recognition and classification. Linguisticae Investigationes, 30:3–26.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lev Ratinov</author>
<author>Dan Roth</author>
</authors>
<title>Design challenges and misconceptions in named entity recognition.</title>
<date>2009</date>
<booktitle>In CoNLL,</booktitle>
<pages>147--155</pages>
<contexts>
<context position="9332" citStr="Ratinov and Roth (2009)" startWordPosition="1562" endWordPosition="1565">ER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yoshida and Tsujii build a biomedical NER system (2007) using lexical features, orthographic features, semantic features and syntactic features, such as part-of-speech (POS) and shallow parsing; Downey et al. (2007) employ capitalization cues and n-gram statistics to lo</context>
<context position="14933" citStr="Ratinov and Roth (2009)" startWordPosition="2492" endWordPosition="2495">n the cover· · · ”. It is expected that “Gaga”, “Lady Gaaaaga” and “Lady Gaga” are all labeled as PERSON, and can be restored as “Lady Gaga”. 4 Our Method In contrast to existing work, our method jointly conducts NER and NEN for multiple tweets. We first give an overview of our method, then detail its model and features. 4.1 Overview Given a set of tweets as input, our method recognizes predefined types of named entities and for each entity outputs its unambiguous canonical form. To resolve NER, we assign a label to each word in a tweet, indicating both the boundary and entity type. Following Ratinov and Roth (2009), we use the BILOU schema. For example, consider the tweet “· · · without you is like an iphone without apps; Lady gaga without her telephone· · · ”, the labeled sequence using the BILOU schema is: “· · · withoutO youO isO likeO anO iphoneU−PRODUCT withoutO appsO; LadyB−PERSON gagaL−PERSON withoutO herO telephoneO· · · ” , where “iphoneU−PRODUCT” indicates that “iphone” is a product name of unit length; “LadyB−PERSON” means “Lady” is the beginning of a person name while “gagaL−PERSON” suggests that “gaga” is the last token of a person name. To resolve NEN, we assign a binary value label zmn to</context>
<context position="21094" citStr="Ratinov and Roth (2009)" startWordPosition="3615" endWordPosition="3618"> max (Y,Z) lnP(Y,Z|O∗,T) (6) We adopt the max-product algorithm to solve this inference problem. The max-product algorithm is nearly identical to the loopy belief propagation algorithm, with the sums replaced by maxima in the definitions. Note that in both the training and testing stage, the factor graph is constructed in the same way as described in Section 1. Efficiency We take several actions to improve our model’s efficiency. Firstly, we manually compile a comprehensive named entity dictionary from various sources including Wikipedia, Freebase 8, news articles and the gazetteers shared by Ratinov and Roth (2009). In total this dictionary contains 350 million entries 9. By looking up this dictionary 10, we generate the possible BILOU labels, denoted by Ymi hereafter, for each word ti m. For instance, consider “· · · Good Morning new11 york11· · · ”. Suppose “New York City” and “New York Times” are in our dictionary, then “new11 york11” is the matched string with two corresponding entities. As a result, “B-LOCATION” and “B-ORGANIZATION” will be added to Ynew11, and “I-LOCATION” and “I-ORGANIZATION” will be added to Yyork11. If Ymi ≠ ∅, we enforce the constraint for training and testing that yim ∈ Ymi </context>
<context position="23090" citStr="Ratinov and Roth (2009)" startWordPosition="3959" endWordPosition="3962">-serial variables (accounting for 22.5%), with an accuracy of 93.5%. (7) |⃗tm||⃗tn| Note that in our experiments, these measures reduce the training and testing time by 36.2% and 62.8%, respectively, while no obvious performance drop is observed. 4.3 Features A feature in {0(1) k }K1 k=1 involves a pair of neighboring NE-type labels, i.e., yi−1 m and yim, while a feature in {0k2)}k21 concerns a pair of distant NE-type labels and its associated normalization label, i.e., yim,yjn and zijmn. Details are given below. 4.3.1 Feature Set One: {0k1)}k l1 We adopts features similar to Wang (2009), and Ratinov and Roth (2009), i.e., orthographic features, lexical features and gazetteer-related features. These features are defined on the observation. Combining them with yi−1 mand yim constitutes {0(1) k }K1 k=1. Orthographic features: Whether tim is capitalized or upper case; whether it is alphanumeric or contains any slashes; wether it is a stop word; word prefixes and suffixes. Lexical features: Lemma of ti m, ti−1 m and ti+1 m , respectively; whether ti m is an out-of-vocabulary (OOV) word 11; POS of ti m, ti−1 m and ti+1 m , respectively; whether ti m is a hash tag, a link, or a user account. Gazetteer-related </context>
</contexts>
<marker>Ratinov, Roth, 2009</marker>
<rawString>Lev Ratinov and Dan Roth. 2009. Design challenges and misconceptions in named entity recognition. In CoNLL, pages 147–155.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan Ritter</author>
<author>Sam Clark</author>
<author>Mausam</author>
<author>Oren Etzioni</author>
</authors>
<title>Named entity recognition in tweets: An experimental study.</title>
<date>2011</date>
<booktitle>In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>1524--1534</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Edinburgh, Scotland, UK.,</location>
<contexts>
<context position="1936" citStr="Ritter et al. (2011)" startWordPosition="293" endWordPosition="296">erforms the baseline that handles these two tasks separately, boosting the F1 from 80.2% to 83.6% for NER, and the Accuracy from 79.4% to 82.6% for NEN, respectively. 1 Introduction Tweets, short messages of less than 140 characters shared through the Twitter service 1, have become an important source of fresh information. As a result, the task of named entity recognition (NER) for tweets, which aims to identify mentions of rigid designators from tweets belonging to named-entity types such as persons, organizations and locations (2007), has attracted increasing research interest. For example, Ritter et al. (2011) develop a system that exploits a CRF model to segment named 1http://www.twitter.com entities and then uses a distantly supervised approach based on LabeledLDA to classify named entities. Liu et al. (2011) combine a classifier based on the k-nearest neighbors algorithm with a CRFbased model to leverage cross tweets information, and adopt the semi-supervised learning to leverage unlabeled tweets. However, named entity normalization (NEN) for tweets, which transforms named entities mentioned in tweets to their unambiguous canonical forms, has not been well studied. Owing to the informal nature o</context>
<context position="10610" citStr="Ritter et al. (2011)" startWordPosition="1771" endWordPosition="1775">) introduces NER to clinical notes. A linear CRF model is trained on a manually annotated data set, which achieves an F1 of 81.48% on the test data set; Chiticariu et al. (2010) design and implement a highlevel language NERL which simplifies the process of building, understanding, and customizing complex rule-based named-entity annotators for different domains. Recently, NER for Tweets attracts growing interest. Finin et al. (2010) use Amazons Mechanical Turk service 3 and CrowdFlower 4 to annotate named entities in tweets and train a CRF model to evaluate the effectiveness of human labeling. Ritter et al. (2011) re-build the NLP pipeline for tweets beginning with POS tagging, through chunking, to NER, which first exploits a CRF model to segment named entities and then uses a distantly supervised approach based on LabeledLDA to classify named entities. Unlike this work, our work detects the boundary and type of a named entity simultaneously using sequential labeling techniques. Liu et al. (2011) combine a classifier based on the k-nearest neighbors algorithm with a CRF-based model to leverage cross tweets information, and adopt the semi-supervised learning to leverage unlabeled tweets. Our method leve</context>
<context position="25958" citStr="Ritter et al., 2011" startWordPosition="4453" endWordPosition="4456">rmation. Two annotators 12 are involved. For any entity mention, two annotators independently annotate its canonical form. The inter-rater agreement measured by kappa is 0.72. Any inconsistent case is discussed by the two annotators till a consensus is reached. 2, 245 tweets are used for development, and the remainder are used for 5-fold cross validation. 5.2 Evaluation Metrics We adopt the widely-used Precision, Recall and F1 to measure the performance of NER for a particular type of entity, and the average Precision, Recall and F1 to measure the overall performance of NER (Liu et al., 2011; Ritter et al., 2011). As for NEN, we adopt the widely-used Accuracy, i.e., to what percentage the outputted canonical forms are correct (Jijkoun et al., 2008; Cucerzan, 2007; Li et al., 2002). 12Two native English speakers. 5.3 Baseline We develop a cascaded system as the baseline, which conducts NER and NEN sequentially. Its NER module, denoted by SBR, is based on the stateof-the-art method introduced by Liu et al. (2011); and its NEN model , denoted by SBN, follows the NEN system for user-generated news comments proposed by Jijkoun et al. (2008), which uses handcrafted rules to improve a typical NEN system that</context>
</contexts>
<marker>Ritter, Clark, Mausam, Etzioni, 2011</marker>
<rawString>Alan Ritter, Sam Clark, Mausam, and Oren Etzioni. 2011. Named entity recognition in tweets: An experimental study. In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing, pages 1524–1534, Edinburgh, Scotland, UK., July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sameer Singh</author>
<author>Dustin Hillard</author>
<author>Chris Leggetter</author>
</authors>
<title>Minimally-supervised extraction of entities from text advertisements.</title>
<date>2010</date>
<booktitle>In HLT-NAACL,</booktitle>
<pages>73--81</pages>
<contexts>
<context position="8925" citStr="Singh et al., 2010" startWordPosition="1492" endWordPosition="1495">that our method compares favorably with the baseline, achieving better performance in both tasks. Our paper is organized as follows. In the next section, we introduce related work. In Section 3 and 4, we formally define the task and present our method. In Section 5, we evaluate our method. And finally we conclude our work in Section 6. 2 Related Work Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Owing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant. Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they systematically study the challenges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly ou</context>
</contexts>
<marker>Singh, Hillard, Leggetter, 2010</marker>
<rawString>Sameer Singh, Dustin Hillard, and Chris Leggetter. 2010. Minimally-supervised extraction of entities from text advertisements. In HLT-NAACL, pages 73–81.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Erik</author>
</authors>
<title>Tjong Kim Sang and Fien De Meulder.</title>
<date>2003</date>
<booktitle>In HLTNAACL,</booktitle>
<pages>142--147</pages>
<marker>Erik, 2003</marker>
<rawString>Erik F. Tjong Kim Sang and Fien De Meulder. 2003. Introduction to the CoNLL-2003 shared task: languageindependent named entity recognition. In HLTNAACL, pages 142–147.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yefeng Wang</author>
</authors>
<title>Annotating and recognising named entities in clinical notes.</title>
<date>2009</date>
<booktitle>In ACL-IJCNLP,</booktitle>
<pages>18--26</pages>
<contexts>
<context position="9991" citStr="Wang (2009)" startWordPosition="1669" endWordPosition="1670">ges of NER, compare several solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yoshida and Tsujii build a biomedical NER system (2007) using lexical features, orthographic features, semantic features and syntactic features, such as part-of-speech (POS) and shallow parsing; Downey et al. (2007) employ capitalization cues and n-gram statistics to locate names of a variety of classes in web text; Wang (2009) introduces NER to clinical notes. A linear CRF model is trained on a manually annotated data set, which achieves an F1 of 81.48% on the test data set; Chiticariu et al. (2010) design and implement a highlevel language NERL which simplifies the process of building, understanding, and customizing complex rule-based named-entity annotators for different domains. Recently, NER for Tweets attracts growing interest. Finin et al. (2010) use Amazons Mechanical Turk service 3 and CrowdFlower 4 to annotate named entities in tweets and train a CRF model to evaluate the effectiveness of human labeling. R</context>
<context position="23061" citStr="Wang (2009)" startWordPosition="3956" endWordPosition="3957">ificant part of z-serial variables (accounting for 22.5%), with an accuracy of 93.5%. (7) |⃗tm||⃗tn| Note that in our experiments, these measures reduce the training and testing time by 36.2% and 62.8%, respectively, while no obvious performance drop is observed. 4.3 Features A feature in {0(1) k }K1 k=1 involves a pair of neighboring NE-type labels, i.e., yi−1 m and yim, while a feature in {0k2)}k21 concerns a pair of distant NE-type labels and its associated normalization label, i.e., yim,yjn and zijmn. Details are given below. 4.3.1 Feature Set One: {0k1)}k l1 We adopts features similar to Wang (2009), and Ratinov and Roth (2009), i.e., orthographic features, lexical features and gazetteer-related features. These features are defined on the observation. Combining them with yi−1 mand yim constitutes {0(1) k }K1 k=1. Orthographic features: Whether tim is capitalized or upper case; whether it is alphanumeric or contains any slashes; wether it is a stop word; word prefixes and suffixes. Lexical features: Lemma of ti m, ti−1 m and ti+1 m , respectively; whether ti m is an out-of-vocabulary (OOV) word 11; POS of ti m, ti−1 m and ti+1 m , respectively; whether ti m is a hash tag, a link, or a use</context>
</contexts>
<marker>Wang, 2009</marker>
<rawString>Yefeng Wang. 2009. Annotating and recognising named entities in clinical notes. In ACL-IJCNLP, pages 18– 26.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kazuhiro Yoshida</author>
<author>Jun’ichi Tsujii</author>
</authors>
<title>Reranking for biomedical named-entity recognition. In BioNLP,</title>
<date>2007</date>
<pages>209--216</pages>
<marker>Yoshida, Tsujii, 2007</marker>
<rawString>Kazuhiro Yoshida and Jun’ichi Tsujii. 2007. Reranking for biomedical named-entity recognition. In BioNLP, pages 209–216.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>