<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.989751666666667">
An Efficient Natural Language Processing
System Specially Designed for the
Chinese Language
</title>
<author confidence="0.996995">
Lin-Shan Lee.
</author>
<affiliation confidence="0.99558">
National Taiwan University
</affiliation>
<author confidence="0.944752">
Long-Ji Lint
</author>
<affiliation confidence="0.993719">
National Taiwan University
</affiliation>
<author confidence="0.474822">
K.-J. Chen&apos;
</author>
<affiliation confidence="0.265617">
Academia Sinica
</affiliation>
<author confidence="0.954557">
Lee-Feng Chient
</author>
<affiliation confidence="0.990205">
National Taiwan University
</affiliation>
<author confidence="0.979296">
James Huang§
</author>
<affiliation confidence="0.92795">
Cornell University
</affiliation>
<bodyText confidence="0.998610875">
In this paper an efficient natural language processing system specially designed for the Chinese
language is presented. The center of the present system is a bottom-up chart parser with
head-driven operation; i.e., phrases are built up by starting with their heads and adjoining
constituents to the left or right of the heads instead of strictly from left to right. In this way
many more unnecessary searching actions can be effectively eliminated. The present system also
includes several efficient approaches such as a direction-selective chart to simplify the control of
the head-driven operation; a heuristic scheduling policy and a bidirectional look-ahead approach
to eliminate many unnecessary searching actions, and an improved raise-bind mechanism
combined with check rules to treat the difficult problems of movement transformations and
empty categories and to simplify the design of grammar rules. The present design is based on
careful consideration of some special syntactic phenomena of the Chinese language, such as
head-final and head-initial structures and empty categories. A prototype of the present system
has been successfully implemented and extensive experiments have been performed. In the test
results significant improvement in the efficiency in processing many very complicated Chinese
sentences has been observed. The detailed discussion on the various approaches, the overall
system design, and the experimental results will all be presented in this paper.
</bodyText>
<sectionHeader confidence="0.991232" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.9996012">
The use of computers to process natural languages has been the research goal of many
scientists and engineers for many years, and significant improvement in technologies
in recent years has brought such goal closer to reality. While substantial efforts have
been made to process natural languages, especially several western languages such
as English, and many powerful computational models and algorithms have been pro-
</bodyText>
<affiliation confidence="0.9556395">
* Dept. of Electrical Engineering and Dept. of Computer Science and Information Engineering, National
Taiwan University
f Dept. of Computer Science and Information Engineering, National Taiwan University
Dept. of Electrical Engineering, National Taiwan University
§ Dept. of Modern Linguistics, Cornell University, NJ
Institute of Information Science, Academia Sinica, Taipei, Taiwan
</affiliation>
<note confidence="0.809556">
C) 1991 Association for Computational Linguistics
Computational Linguistics Volume 17, Number 4
</note>
<bodyText confidence="0.99969125">
posed and widely used (Gazdar et al. 1987), very little work has been done with
the Chinese language, which more than a quarter of the world&apos;s population use as
a native language. This is probably due to the fact that the structure of the Chinese
language is quite different from western languages like English and, therefore, the
experience in processing western languages cannot necessarily be directly applied to
the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype
system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also
developed a Chinese natural language processing system with special considerations
on the phenomenon of empty categories in the Chinese language. Yang (1987) pre-
sented a method using semantic constraints to reduce ambiguity in Chinese sentence
analysis. H. H. Chen et al. (1988) proposed a logic programming approach consider-
ing Chomsky&apos;s Goverment-Binding theory to cope with movement transformations in
Mandarin Chinese.
In the following, some special syntactic phenomena of the Chinese language that
significantly affect the design of the present system are first summarized in Sections
2 and 3, and a brief description of the present system and the structure of the lin-
guistic knowledge base is then given in Section 4. The several new approaches, in-
cluding the direction-selective chart and the head-driven chart parser, the bidirectional
look-ahead approach, and the heuristic scheduling policy, are described in detail in
Sections 5, 6, and 7, respectively. Sections 8 and 9 then present the improved design
of the raise-bind mechanism to cope with the problem of movement transformation
and empty categories. Some preliminary experimental results are discussed in Sec-
tion 10, and concluding remarks and future research directions are finally given in
Section 11.
</bodyText>
<sectionHeader confidence="0.896566" genericHeader="method">
2. The Head-Final/Head-Initial Structures of the Chinese Language
</sectionHeader>
<bodyText confidence="0.9998445">
The Chinese language has many special syntactic phenomena substantially different
from western languages. Discussions about such characteristics of the Chinese lan-
guage can be found in the literature (Chao 1968; Li and Thompson 1981; Huang 1982).
In this paper only some of them that have significant influence on the present study
will be briefly described. They are (1) head-final/head-initial structures and (2) empty
categories of the Chinese language, to be respectively summarized in this and the
following sections.
The notion of the head of a phrase has a very long history, which stems from the
traditional grammar and plays a central role in recent syntactic analysis frameworks
such as GB and GPSG (Sells 1985). The basic idea is simply that each phrase con-
tains a certain word that is especially important in the sense that it determines many
of the syntactic properties of the entire phrase; this word is called the head of the
phrase.
Most Chinese phrases and sentences are head-final, e.g., head nouns in NPs are
always located at the final position. For instance, some NPs (examples 1, 2, and 3)
listed in Figure 1 demonstrate this situation, where the underlines indicate the heads.
Comparing these Chinese phrases with their corresponding phrases in English (shown
below each Chinese phrase in parentheses), the positions of the heads in English are
more free. On the other hand, other Chinese phrases that are not head-final are found
to be almost always head-initial, e.g., PPs (such as example 4 in Figure 1). This is
somewhat different from western languages like English. Figure 2 is a list of some
fundamental phrase structure rules (PSRs) for the Chinese language used in the present
system. The underlines indicate the head of each PSR. Some of the categories here are
from Chao&apos;s classification (Chao 1968), and the rules here are primarily based on the
</bodyText>
<page confidence="0.995027">
348
</page>
<note confidence="0.996691">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<figure confidence="0.964713">
1. k,
playing (relativizer) children
(the children who were playing)
2. It SP &apos;ft. *
I the live in America (relativizer) good friend
(the good friend of mine who lives in America)
3. — t MAO 14
a (classifier) quite pretty girl
(a quite pretty girl)
4. it ( rt] •* A 111 )pp
</figure>
<figureCaption confidence="0.798518333333333">
he from your friends borrow money
(he borrowed money (from your friends)pp )
Figure 1
</figureCaption>
<bodyText confidence="0.651173">
Some examples of Chinese noun phrases and preposition phrases.
</bodyText>
<listItem confidence="0.973817090909091">
(1) S = bar --&gt; S-bar PRTAG I S PRTAG
(2) S-bar --&gt; Topic S
(3) S
(4) NP --&gt; (XPDE) (QP) (ADJ)N
(QP) (XPDE) (ADJ)N I
NP LSIC
(5) XPDE --&gt;SPEINPDEIPPDE
(6) VP --&gt; (AUX I ADV I PP I NP)* V-bax
(7) V-bar QP I (NP) (NP I PP I VP I S S-bar)
(8) PP --&gt; PREP NP
Notations:
</listItem>
<table confidence="0.352593">
Operators:
I: Or Operaror, *:Repetition Operator, 0: Optional Operator, head
Phrasal Categories:
S=bar, S-bar, S. NP, XPDE: an Associative Phrase or a Relative/Appositive Clause,
VP, V-bar, PP, Topic, QP: Classifier and Measure Phrase.
Lexical Categories:
PRTAG: Partical Tag, N, ADJ, ADV, AUX, LOC: Localizer, DE ( ) : Retativizer
</table>
<figureCaption confidence="0.928068">
Figure 2
</figureCaption>
<bodyText confidence="0.8177164">
A list of some fundamental PSRs for the Chinese language used in the present study.
theory of Huang (Huang 1982). Apparently, the head in each of the rules is located
either at the initial position (head-initial) or at the final position (head-final). Such
head-final/head-initial structures will be especially useful and helpful in the present
study, as will be clear later in this paper.
</bodyText>
<page confidence="0.996175">
349
</page>
<note confidence="0.61826">
Computational Linguistics Volume 17, Number 4
3. The Empty Categories of the Chinese Language
</note>
<bodyText confidence="0.9619385">
In many languages the &amp;quot;empty category&amp;quot; is typically used to refer to an empty NP
position that has been vacated by a transformation called &amp;quot;move a&amp;quot; (a transformational
operation introduced in government binding theory (GB) that means &amp;quot;move something
somewhere;&amp;quot; i.e., the NP has been moved to a different position such that an empty
position is left). Such empty categories are called &amp;quot;traces.&amp;quot; They indicate the empty
positions left when movements occur. There is another kind of empty category that also
contains vacant NP positions, but they are not traces, because they are not derived from
&amp;quot;move a.&amp;quot; These empty categories are called &amp;quot;null pronominals.&amp;quot; Since the distance
between the location of the actual NP and its corresponding empty category may be
long and the grammatic relation in such sentences can be very complicated, it is usually
difficult to represent such linguistic phenomenon in simple rules. In other words, it is
difficult to list all such possible movements as well as null pronominals exhaustively,
and to specify all the relevant constraints explicitly in the grammar. Empty categories
(or empty NPs) thus become a convenient approach usually used in linguistic theories
to explain these very complicated syntactic phenomena.
In Mandarin Chinese, passivization, relativization, topicalization, ba-transformation
and the use of zero pronouns play major roles in Chinese sentence structures. To deal
with these syntactic phenomena, the conventional approach is to collect a set of com-
plicated grammar rules to cover all the possibilities. However, the high complexity
especially resulting from the interactions among several of these transformations make
such an approach infeasible. A completely different approach is, therefore, adopted in
this paper, in which a specially designed raise-bind mechanism is used based upon the
theory of empty categories, as will be clear later in this paper. With such a raise-bind
mechanism, it will be shown that the parser will treat all these transformations in
relatively simple ways. In the following, some examples of empty categories often en-
countered in the Chinese language are first discussed. Consider the Chinese sentences
(1)—(8) listed in the following.
It., Jang-sanl
he hurt (aspect marker)
(He hurt Jang-san)
ba-transformation:
tf 7
he ba Jang-san hurt (aspect marker)
(He hurt Jang-san)
passivization:
# 41-
Jong-son by him hurt (aspect marker)
(lang-san was hurt by him)
1 The transliteration scheme used here is based on the Mandarin Phonetic Symbols II published in
Taipei, Taiwan by the Ministry of Education of the Republic of China.
</bodyText>
<page confidence="0.997245">
350
</page>
<note confidence="0.986451">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<listItem confidence="0.507647666666667">
4. topicalization:
As
that dog I never have seen
(I have never seen that dog)
5. relativization:
4\ Tt&lt; * T
playing (relativizer) children go (aspect marker)
(the children who were playing are gone)
6. null pronominals:
</listItem>
<equation confidence="0.6355094">
tUt [s 1&amp;1k
Jang-san tried escape
(Jang-san tried to escape)
7. pivot construction:
IA 41 /.1&amp;quot; Is
</equation>
<bodyText confidence="0.994376689655172">
he asked children go to dinner
(He asked the children to go to dinner)
8. zero pronoun:
Jang-san likes
(Jang-san likes someone or something)
Sentences (2)—(8) all involve a missing subject or object (indicated by &amp;quot;e&amp;quot;). The
solid lines under sentences (2)—(7) indicate the references that each missing subject
or object refers to. The missing object in sentence (8), however, does not refer to any
element within the sentence. In fact, it is an omitted pronoun, which refers to someone
or something understood in the situation.
According to GB theory (Chornsky 1981; Huang 1982), sentence (2) is derived from
sentence (1) by a transformation called &amp;quot;ba-transformation.&amp;quot; The word &amp;quot; (ba)&amp;quot; is a
patient case marker. It indicates that the NP following it is the patient of the main verb
in the sentence. The transformation is performed as follows: the object, &amp;quot; (Jang-
san)&amp;quot; in in (1), is moved by the carrier &amp;quot;%E, (ba)&amp;quot; to the position indicated in (2), and
a trace (indicated by &amp;quot;e&amp;quot;) is left behind. The trace dominates no lexical material, but
is &amp;quot;bound&amp;quot; to its antecedent, &amp;quot; E (Jang-san).&amp;quot; This phenomenon appears very fre-
quently in Chinese sentences. Similar situations occur in sentences (3)—(5). In sentence
(3), it is believed in the theory that the object&amp;quot; 5- (Jang-san)&amp;quot; is moved back to the
subject position and a trace is left behind to transform the sentence into a passive one.
In sentence (4), the object&amp;quot; SSt 3111&apos; (that dog)&amp;quot; can be thought of as being moved to
the sentence initial position to form a topic. This is also very often seen in Chinese sen-
tences, and is called &amp;quot;topicalization.&amp;quot; In sentence (5), one explanation is that originally
the relative clause&amp;quot; 4 \ (the children were playing)&amp;quot; in the sentence-initial po-
sition is used to modify the subject &amp;quot; 4 \ (children),&amp;quot; but the first &amp;quot; 4 \ (children)&amp;quot;
is omitted due to repetition. This is relativization. All these sentences (2)—(5) involve
a movement and a trace. In the Chinese language, ba-transformation, passivization,
topicalization, and relativization all can be analyzed using the movements and the
traces. The basic idea is that these phenomena are very sophisticated syntactically, but
</bodyText>
<page confidence="0.99224">
351
</page>
<figure confidence="0.9979913">
Computational Linguistics Volume 17, Number 4
PART I PART II
owl the head-driven
direction-selective chart parser with
charts several efficient
approaches
Chinese
sentences preprocessor
syntax trees
Linguistic Knowledge-Base
</figure>
<figureCaption confidence="0.640704">
Figure 3
The block diagram of the system described in this paper.
</figureCaption>
<bodyText confidence="0.999738">
as long as the empty NP can be inserted into the right position and the movement
understood, the analysis of these phenomena will be significantly simplified, as will
be shown later in this paper.
Sentences (6)—(8) are null pronominals rather than traces, because they are not de-
rived from &amp;quot;move a.&amp;quot; The notation [s ...1 in sentences (6) and (7) denotes the presence
of a clause. Null pronominals are in general free, for example, in sentence (8). But in
certain constructions null pronominals are also bound, for example, in sentences (6)
and (7). Sentence (7) is called a pivot construction but sentence (6) isn&apos;t; this is be-
cause in sentence (7) the object of the first verb is also the subject of the second verb,
while in sentence (6) it is the subject of the first verb that is actually the subject of
the second verb. Therefore in sentence (7) the null pronominal in the subject position
is &amp;quot;bound&amp;quot; to the object of the first verb, but this is not the case in sentence (6). The
special techniques of the raise-bind mechanism proposed in this paper to handle all
such different types of empty categories will be explained in detail later in this paper.
</bodyText>
<subsectionHeader confidence="0.570154">
4. The Overall System and the Linguistic Knowledge Base
</subsectionHeader>
<bodyText confidence="0.934569705882353">
Because the Chinese language has many special structures quite different from many
other languages, in this paper a Chinese natural language processing system is spe-
cially designed to parse Chinese sentences more efficiently. The block diagram of the
system is shown in Figure 3. The system is composed of two parts. The first part,
consisting of a preprocessor and a lexicon plus word formation rules, first segments
the input Chinese sentences (or a series of Chinese characters) into words by looking
them up in the lexicon and applying some word formation rules. This is because, in
Chinese, a word can be composed of from one to several characters without blanks
on both ends to indicate the boundaries of a word; therefore, such a segmentation is
necessary. Because it is impossible to collect all Chinese words into the lexicon, some
word formation rules can be found to identify the words in the input sentences to help
the formulation of some compound words; e.g. the determiner/measure compound
words, the reduplication words, etc., such that they don&apos;t have to be stored in the
PSR&apos;s,
FIRST and LAST
tables,
and check rules
</bodyText>
<figure confidence="0.5985825">
word formation
les
</figure>
<page confidence="0.998066">
352
</page>
<note confidence="0.995024">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<bodyText confidence="0.999940615384616">
lexicon. However, because of the high degree of inherent lexical ambiguity, very often
an input sentence can be segmented into several different possible word combinations
and there are no simple rules to decide which combination is the correct answer. In
this preprocessor, a heuristic longest word matching rule (Chen 1985) is applied to
decide a most promising word combination, but errors still happen sometimes in the
preprocessor and manual correction is actually needed. The preprocessor also adds
relevant categorial information and other features extracted from the lexicon to each
of the words. The result of the first part is represented by a data structure—a direction-
selective chart (to be discussed in detail in the next section) and is transported to the
second part. The second part, consisting of a parser and a linguistic knowledge base,
builds up phrases on the direction-selective chart by applying the linguistic knowledge
base. The parser is a head-driven chart parser, but with several special approaches de-
veloped to make the parser more efficient for the Chinese language, which will also
be made clear later in this paper. The linguistic knowledge base can be broadly seen
as a compilation of a four-tuple; i.e., the phrase structure rules (PSR), the FIRST and
LAST parsing tables of these rules, the check rules, and the lexicon shared with the
first part. If the sentence is grammatical in the sense of the grammar, a syntax tree
will result as the output. Otherwise, failure will be reported. From now on, this paper
will concentrate on the second part of the system, i.e., the parser and the linguistic
knowledge base only, while the details of the first part can be found in other works
(Ho 1984; Chen 1985). As far as the second part of the system is concerned, the input
sentences are assumed to be segmented into words with categorial information and
other features provided by the lexicon.
The linguistic knowledge base used in this system, as mentioned above, can be
broadly seen as a compilation of a four-tuple: the phrase structure grammar (PSRs),
the FIRST and LAST parsing tables for these PSRs, the check rules, and a lexicon
as shown in Figure 4. The PSRs describe how sentences are built up out of phrasal
categories, and how phrases are built up out of lexical categories and/or phrasal
categories. All of these PSRs combined with some syntactic and semantic constraints
are implemented as an ATN-like network (Woods 1970). For each probable phrasal
category (constituent), the FIRST and LAST parsing tables indicate all possible lexical
categories that may begin or end with the present phrasal category to guide the parser
to eliminate some unnecessary searching actions in parsing, as will be described in
detail in Section 6. The check rules are used in the raise-bind mechanism to handle
the binding problems of empty categories and to reject illegal sentences or parsing
trees, as will be described in detail in Sections 8 and 9. The lexicon is a Chinese
machine dictionary, in which the allomorphs are stored together with their features and
other information for syntactic and semantic analysis; e.g., category (CAT), arguments
(ARG), meaning (MEA), allomorph (ALO), person, number... etc.
</bodyText>
<sectionHeader confidence="0.867312" genericHeader="method">
5. The Direction-Selective Chart and the Head-Driven Chart Parser
</sectionHeader>
<bodyText confidence="0.999986777777778">
As discussed above, the Chinese language has prominent head-final/head-initial sen-
tence structures, and zero pronouns are relatively freely used in Chinese sentences.
Therefore, to reduce unnecessary computation in parsing Chinese sentences, a bottom-
up and head-driven parsing strategy, as was used in the present study, will be more
efficient than a top-down and strictly left-to-right parsing strategy. This is because a
bottom-up parsing strategy can avoid inefficiency in duplicating many computations
that a top-down parser often suffers from when backtracking occurs, and a head-driven
parsing strategy can eliminate many unnecessary searching actions (i.e., searching ac-
tions fired by head constituents could be more promising) that often occur in a strictly
</bodyText>
<page confidence="0.998154">
353
</page>
<figure confidence="0.938737666666667">
Computational Linguistics Volume 17, Number 4
FIRST and LAST Tables Check Rules
Phrase Structure Rules Lexicon
S=bar -&gt; S-bar PRTA
-&gt; S PRTAG
S-bar -&gt; Topic S
</figure>
<figureCaption confidence="0.992503">
Figure 4
</figureCaption>
<bodyText confidence="0.995831060606061">
The linguistic knowledge base.
left-to-right parsing scheme. This will all become clearer later in this paper. Several
approaches were further developed in the present parser described in this paper to
better realize this concept, so that significant improvement as compared to some pre-
vious Chinese natural language processing systems (Yang 1987; Jiang 1985; H. H. Chen
et al. 1988) can be observed. In the following sections, these approaches, including the
direction-selective chart, the bidirectional look-ahead approach, the heuristic schedul-
ing policy, and the raise-bind mechanism will be described in detail. Here, we first
describe the direction-selective chart in this section.
Before parsing is performed, any input word sequence has to be first represented
by the direction-selective chart. Just like a conventional chart (Kay 1980; Winograd
1983), the direction-selective chart is an efficient data structure to record what has been
done so far in the course of parsing to avoid duplicate computation. The special feature
of the direction-selective chart is that the active edges (the incomplete constituents
that need other complete constituents to their left or right to compose larger ones) are
further partitioned into two disjoint groups: forward-active (F-active) and backward-
active (B-active) edges to indicate different search directions as described below.
In the head-driven parser, the parsing process will begin on the heads in the input
word sequence. As described in Section 2, the heads in the Chinese language are at
either the initial or final position of a phrase; therefore, in a head-driven parser, the
searching actions triggered by an initial head (being a complete constituent) are al-
ways looking forward (from left to right); while the actions triggered by a final head
are always looking backward (from right to left). However, no bidirectional search-
ing actions can be triggered by a single head in the course of parsing. Therefore, in
this head-driven chart parser, the F-active edges are used to denote forward search-
ing actions, and the B-active edges are used to denote the backward. The information
specified on each active edge then consists of the search direction (forward or back-
ward), in addition to normal information, such as the vertices where the edge starts,
and ends, the grammar rule referred to, etc.
Two diagrams depicted in Figure 5 show the two different searching actions. Figure
5a is the forward search and Figure 5b the backward, in which each arc represents an
inactive edge (a complete constituent) and each arrow line represents an active edge.
The labels attached above the inactive edges denote the corresponding categories.
</bodyText>
<page confidence="0.998334">
354
</page>
<note confidence="0.963783">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<figure confidence="0.986768125">
(a) The searching actions triggered by an initial head are always looking forward (left-to-right).
The sample grammar rule: X -&gt; XI ... Yn
Xi/Y3
X//Y2
(b) The searching actions triggered by a final head are always looking backward (right-to-left).
The sample grammar rule: X -&gt; Y1 ... Yn
X\Wn-2
X\\Yn-1
</figure>
<figureCaption confidence="0.97578">
Figure 5
</figureCaption>
<bodyText confidence="0.979757764705882">
The searching actions in the direction-selective chart.
According to the sample grammar rules listed in the figure, the arrow points out the
search direction, and a label attached above with a form X/ /Y indicates that it needs
a right neighboring complete constituent with Y category to form an X constituent; a
label with a form X \ \ Y indicates that it needs a left neighboring complete constituent
with Y category to form an X constituent.
To compare with a similar approach, in Stock&apos;s island-driven bidirectional chart
(Stock et al. 1988), the searching actions are triggered by islands (an island is a more
reliable word hypothesis resulting from speech recognition) and the searching direc-
tions may be bidirectional; i.e., an active edge may search for constituents on both
sides as shown in Figure 6. Also, Pareschi and Steedman (1987) had proposed another
similar bidirectional chart parsing algorithm to handle operations such as functional
composition for categorial grammars applications (Steedman 1985). However, in our
parser, the actions triggered by the heads have directions either strictly forward or
strictly backward, obviously resulting from the head-final/head-initial phenomena of
the Chinese language. This makes the control of our parser much simpler and more
efficient in the present problem.
</bodyText>
<sectionHeader confidence="0.722863" genericHeader="method">
6. The Bidirectional Look-Ahead Approach
</sectionHeader>
<bodyText confidence="0.999617166666667">
Since Chinese is believed to be a syntactically ambiguous language with relatively free
word order, many complicated syntactic phenomena derived from such situation will
thus make it difficult for a parser to work on Chinese sentences deterministically, as
was done in Marcus&apos;s famous work for English (1982). For example, in long-distance
movements the distance between the location of the binding NP and its corresponding
empty category may be long, and the grammatical relation in such a sentence can be
</bodyText>
<page confidence="0.985441">
355
</page>
<figure confidence="0.968132333333333">
Computational Linguistics Volume 17, Number 4
The sample grammar rule:
X -&gt; Y1 Yi Yj Yn
</figure>
<figureCaption confidence="0.987113">
Figure 6
</figureCaption>
<bodyText confidence="0.9919255">
The searching action with Stock&apos;s bidirectional chart parser.
very complicated. It is also very often difficult for a parser to deal efficiently with the
binding of the empty category deterministically. This is why substantial redundant
computation efforts usually occur unavoidably in analyzing Chinese natural language.
However, some of this redundant computation can be avoided in the present parser,
by the approach discussed below.
An active edge built on a chart indicates a stage in the search for a constituent. It
records the category of the constituent it is looking for, where the constituent should
be, and the structure obtained so far in order to form a complete one. During the
course of parsing because the parser usually cannot correctly predict the category and
position of the constituents to be built next, many unnecessary and redundant active
edges will inevitably be built and substantial searching efforts thus have to be wasted,
as very often happened in many chart-based parsers. This is very inefficient and can,
in fact, be significantly improved in the present system based on the following concept.
Because no phrasal category is null in the grammar rules, whenever an active edge
is built into the direction-selective chart, the parser can first examine the constituent,
exactly located at the position the active edge is looking for, to check whether the
desired category can begin with (if the active edge is F-active for an initial head) or
end with (if the active edge is B-active for a final head) the category of the examined
constituent, according to the description of the grammar. In this way it is possible for
the parser of the present system to avoid building many unnecessary active edges by
such a &amp;quot;bidirectional look-ahead approach&amp;quot; combining the special head-driven strategy
developed in the present study with the concept of FIRST and LAST parsing tables
(Aho and Ullman 1972) to be discussed in detail below. In the following, we shall first
define these two tables and then describe how the bidirectional look-ahead approach
works.
FIRST(C): If C is a category, FIRST(C) is the set of all possible lexical categories
the category C can begin with. Meanwhile, a matrix tabulating such FIRST relations
of all categories of a grammar is called the FIRST parsing table of the grammar. For
example, Figure 7 is the FIRST parsing table for the sample grammar rules listed in
Figure 8. For instance, in it FIRST(NP) = {PRON, N} because FIRST(NP) = PRON U
N U FIRST(XPDE) PRON U N U FIRST(S) = PRON U N = {PRON, N}.
LAST(C): If C is a category, LAST(C) is the set of all possible lexical categories the
category C can end with. Meanwhile, a matrix tabulating such LAST relations of all
categories of a grammar is called the LAST parsing table of the grammar. For example,
Figure 9 shows the LAST parsing table for the sample grammar rules listed in Figure 8.
</bodyText>
<page confidence="0.996548">
356
</page>
<note confidence="0.973253">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<equation confidence="0.977527083333333">
V- V-n PRON N DE ADV
NP X X
XPDE X X
VP X X X
V-bar X X
S X X
V- X
V-n X
PRON X
N X
DE X
ADV X
</equation>
<figureCaption confidence="0.980218">
Figure 7
</figureCaption>
<bodyText confidence="0.992788">
The FIRST parsing table for the sample grammar shown in Figure 7, where each entry filled
by an &amp;quot;X&amp;quot; indicates that the category (constituent) for the row may begin with the lexical
category for the column.
</bodyText>
<listItem confidence="0.9984032">
(1) NP --&gt; BIQA I (XPDE)
(2) XPDE --&gt; S DE I NP DI
(3) VP --&gt; (ADV)* V-bar
(4) V-bar --&gt; Y: I Ert NP
(5) S --&gt; NP yE
</listItem>
<figureCaption confidence="0.954848">
Figure 8
</figureCaption>
<bodyText confidence="0.971942">
A set of sample grammar rules to show the construction of the FIRST and LAST parsing tables.
</bodyText>
<equation confidence="0.993414">
V- V-n PRON N DE ADV
NP X X
XPDE X
VP X X X
V-bar X X X
S X X X
V- X
V-n X
PRON X
N X
DE X
ADV X
</equation>
<figureCaption confidence="0.725567">
Figure 9
</figureCaption>
<bodyText confidence="0.998272583333333">
The LAST parsing table for the sample grammar shown in Figure 7, where each entry filled by
an &amp;quot;X&amp;quot; indicates that the category (constituent) for the row may end with the lexical category
for the column.
For instance, in it LAST(VP) = LAST(V-bar) = V- U LAST(NP) = V- U PRON U N =
{V-, PRON, N}.
In the present parser, both of these parsing tables for the Chinese grammar used
have been constructed (no phrasal category is null). During parsing, when an F-active
edge is waiting to be constructed (using X/ /Y as in Figure 5a to indicate its searching
action), the parser will first look up the FIRST table to see whether the word, at the
position it is looking for, has a lexical category belonging to FIRST(Y). If it does, then
the active edge can be built; otherwise the active edge is redundant, because no such
required constituent can be constructed. Similarly, when a B-active edge is waiting to
</bodyText>
<page confidence="0.956617">
357
</page>
<figure confidence="0.9893425">
Computational Linguistics Volume 17, Number 4
(hit children again)
NP XPDE
ADV
V-n don&apos;t belong to
LAST(XPDE)
fri 1_1•N
again hit children
</figure>
<figureCaption confidence="0.978131">
Figure 10
</figureCaption>
<bodyText confidence="0.999772956521739">
An example to illustrate the use of FIRST and LAST parsing tables to avoid building many
unnecessary active edges on the direction-selective chart.
be constructed (using X\\Y to indicate its searching action), the parser will first look
up the LAST table to see whether the word, at the position it is looking for, has a
lexical category belonging to LAST(Y). If it does, then the active edge can be built;
otherwise the active edge is redundant, because no such required constituent can be
constructed.
For example, consider parsing a Chinese phrase, illustrated in Figure 10, with
the above sample grammar and parsing tables in Figures 7-9. In Figure 10a, an F-
active edge (V-bar/ /NP) is triggered by the initial head &amp;quot;4T (hit).&amp;quot; This indicates that
a right neighboring NP constituent is needed to form a complete V-bar constituent.
Fortunately, the right neighboring word&amp;quot; 4 \ TA (children),&amp;quot; exactly has an N category
belonging to FIRST(NP); therefore, the edge can be constructed. On the other hand,
in Figure 10b, a B-active edge NP XPDE is triggered by the final head &amp;quot; 4\ TA (chil-
dren).&amp;quot; This indicates that a left neighboring XPDE constituent is needed to form a
complete NP constituent. However, in this case the left neighboring word &amp;quot;IT (hit)&amp;quot;
doesn&apos;t have a category belonging to LAST(XPDE); therefore, the edge will not be
built, because it is apparently redundant. In this way, the bidirectional look-ahead ap-
proach can, in fact, eliminate many unnecessary searching actions (or active edges) and
make the parsing process more efficient. A similar approach can be found in Tomita&apos;s
extended LR parser (Tomita 1986), in which the parsing table used is an extended LR
parsing table, and the parsing process performed is strictly left-to-right, as compared
to the two different parsing tables and two parsing directions in the present system.
</bodyText>
<sectionHeader confidence="0.484875" genericHeader="method">
7. The Heuristic Scheduling Policy
</sectionHeader>
<bodyText confidence="0.999069333333333">
Each step in the parsing process can very often produce more than one subsequent
steps. For example, a new edge built into a chart may cause an arbitrary number of
edges (candidate constituents) to be built. Usually, in such situations some of them
</bodyText>
<figure confidence="0.9835628">
V-bar // NP
ADV
3Z.
again
N belongs to FIRST(NP)
</figure>
<page confidence="0.993496">
358
</page>
<note confidence="0.997631">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<bodyText confidence="0.998846166666667">
should be processed prior to the others instead of simply performing exhaustive pro-
cessing. In other words, a well defined scheduling policy is, in fact, helpful. This is
why most of the chart parsers have an agenda to schedule these steps (Kay 1980). In
the present system, a heuristic scheduling policy is also developed, as described in
this section.
In the present system the scheduling policy is primarily based on some heuristic
estimation obtained from empirical experiences, in which each candidate constituent
is assigned a priority to indicate processing order. Most of the time, the assignment is
described by its category. For example, a constituent with an S category will be con-
structed prior to a constituent with a VP category (some unnecessary VP constituents
may be therefore eliminated, for example), a constituent with a VP category will be
constructed prior to one with a V-bar category... etc. On the other hand, if more than
one candidate constituents have the same priority, the constituent at the right-most
position (located at the farthest end vertex) is then the first to be built.
To see how the above heuristic scheduling policy is integrated with the head-
driven chart parser discussed here to efficiently parse an input sentence, a simple
example is used in the following to show the parsing process. Suppose the input
sentence is:
</bodyText>
<sectionHeader confidence="0.295997" genericHeader="method">
tT IA
</sectionHeader>
<bodyText confidence="0.981751428571428">
you of brother again hit children
(your brother hits children again)
and the grammar rules, the FIRST and LAST tables used are those shown in Fig-
ures 7-9, respectively. The resulting chart is shown in Figure 11a, where the numbers
attached on the edges indicate their order in the course of parsing. In fact, it is easy
to see that many constructions have been successfully avoided in the chart. To make
the illustration simple and clear, here we shall follow the parser to analyze only the
sentence fragment &amp;quot; X. ti &amp;quot; (hit children again) as shown in Figure 11b.
Before the parsing process starts, three inactive edges are constructed in the chart
to represent the sentence fragment. Then, based on the head-driven principle and the
sample grammar, the word &amp;quot; 4T (hit),&amp;quot; according to rule (4) in the sample grammar,
is an initial head (a transitive verb) that needs a right neighboring NP to form a
V-bar (that is represented by an F-active edge; i.e., edge(1) in Figure 11b); the word
&amp;quot; f&lt; (children),&amp;quot; based on rule (1), is a final head (a noun) that either can be an NP
by itself (this is represented by an inactive edge; i.e., edge(2) in Figure 11b) or needs
a left neighboring XPDE to form an NP (this is represented by a B-active edge(*) in
Figure 11b). Examining each of these three edges with either the FIRST or LAST tables,
as illustrated in Figure 10b previously, edge(*) should not be built (it is a redundant
edge) but edges (1) and (2) both can be potential candidates and, thus, should be built.
Now, according to the heuristic scheduling policy, a V-bar edge will be built prior to
an NP edge; therefore, edge (1) is the first edge to be built. However, since there is
no such NP currently in the chart, no new edges can be produced after edge (1) is
added, and thus edge (2), the only candidate, is then added to the chart. This edge
now satisfies the request of edge (1) and, therefore, creates a V-bar inactive edge (edge
(3)) as a new candidate. Meanwhile, since edge (2) isn&apos;t a head, no active edges can be
triggered, so that edge (3) is the third edge to be built. Similarly, a VP (edge (4)) can
then be triggered by edge (3), and, finally, a complete VP constituent (edge(5)) can be
built.
</bodyText>
<page confidence="0.980557">
359
</page>
<figure confidence="0.9974535">
Computational Linguistics Volume 17, Number 4
(a)
(3)
(4) VP &apos;.&apos;ADV
</figure>
<figureCaption confidence="0.97869">
Figure 11
</figureCaption>
<bodyText confidence="0.987439826086957">
An example to demonstrate the parsing process.
8. The Raise-Bind Mechanism and Check Rules
The raise-bind mechanism presented here is specially developed in the present system
to treat the difficult problems of movement transformations and empty categories so
that the design of the grammar can be simplified. It is used to cope with the empty
categories; in other words, to find the antecedent for each empty category except for
those that are free (such as in sentence (8) in Section 3). During the parsing process
when an NP is desired, the parser, with the aid of the raise-bind mechanism, will
perform the following operations.
First, a corresponding active edge indicating the request for an NP may be built in
the chart after looking up the FIRST or LAST tables. This request can be satisfied when
a desired NP is actually encountered. Second, if the desired NP is not encountered
and the NP position can, instead, be filled by an empty category (according to the
check rules with details explained below), then an empty NP will be generated to fill
the vacant position and a new edge (active or inactive) denoting this satisfaction will
be built in the chart. This empty NP will then be raised up in some way along the
parsing tree (implicitly represented in the chart) when the tree is growing up (recall
that the parser works bottom up), until Its antecedent is parsed. At this point, the
parser binds the empty NP by setting it to refer to its antecedent (this is also guided
by check rules as described below). Once bound, the empty NP will not be raised up
any further, because an empty NP has exactly one antecedent and cannot be bound
more than once.
Not every NP position can be filled by an empty category. In the Chinese language,
</bodyText>
<page confidence="0.995592">
360
</page>
<note confidence="0.997902">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<bodyText confidence="0.997694612244898">
empty categories only appear in the subject position and direct object position, never
in the indirect object position, or the prepositional object position. In our implemen-
tation, an empty NP contains three fields: (1) a field to keep the pointer to indicate its
antecendent, (2) a field to keep where it came from, and (3) a field to keep the syn-
tactic or semantic constraints on the empty NP for later checking. Rules for this kind
of checking are called check rules in the present system. Most of the time, these check
rules are invoked when a constituent containing unbound empty categories is built in
the chart. Usually, distinct rules are used to treat different problems. For example, we
can informally state the rules to treat the relativization phenomena as follows: for a
noun and a relative clause to be combined into an NP, the relative clause must contain
an empty NP that is unbound and marked to be coming from either the subject posi-
tion or the object position of the relative clause, and then this empty NP will be bound
to the (head) noun (just as in sentence (5) in Section 3; a further example will be given
below). We can also state the check rules for passivization as follows: once a clause is
constructed, the parser checks whether the prepositional phrase, &amp;quot; ik + NP&amp;quot; (similar
to &amp;quot;by + NP&amp;quot; in English) is involved in the clause. If so, there must be an empty NP
that is unbound and marked to be coming from some object position, and this empty
NP will be bound to the subject of the clause (just as in sentence (3) in Section 3; a
further example will be given below). The check rules for pivot construction can also
be formulated as follows: in a pivot construction, the direct object will bind the empty
NP coming from the subject position of the embedded clauses (just as in sentence (7)
in Section 3; a further example will be given below). Apparently, check rules for other
linguistic phenomena such as topicalization, ba-transformation, and so on can all be
similarly developed. In fact, the binding process in the raise-bind mechanism here is
rule-based rather than principle-based; that is, the whole binding process in the raise-
bind mechanism is determined by the check rules and the phrase structure rules, while
instead in some other principle-based parsers, for example, a parser completely based
on GB theory (Wehrli 1988), it is influenced by some linguistic principles; e.g. the gov-
ernment binding principle in GB theory. However, the rule-based approaches may take
some more cost in computation than the principle-based approaches, but in dealing
with some specific problems the former approaches seem more flexible than the latter
approaches. This is why in sentence (7) (pivot construction) the empty category in the
subject position of the embedded clause can be bound to the NP &amp;quot;&apos;1&amp;quot; ig (children)&amp;quot;
in the higher clause, even if it is not governed by the NP. To illustrate the operation
of the above check rules, let&apos;s consider phrase (9) in the following and its parsing tree
in Figure 12, in which several of such phenomena interact with one another. It will be
shown that, with the present approach, this complicated problem can be solved easily.
9. # &apos;t 641 /IN
by Li-s ask go to dinner relativizer children
(the children who were asked by Li-s to go to dinner)
Let&apos;s follow the bottom-up parser to parse phrase (9): (1) Node Si (a clause con-
stituent) is constructed and el serves as the dummy subject (an NP). (2) Node V-bar
is constructed and the dummy object e2 is inserted. Because of the empty category
el existing in the embedded clause SI, the check rules are invoked. According to the
check rules for pivot construction, el is bound to e2. (3) Node S2 is constructed with
an empty NP e3. S2 is a passive clause because of the PP, &amp;quot;by Li-s.&amp;quot; According to the
check rules for passivization, e3 binds e2. (4) Node NP is constructed. According to the
check rules for relativization, e3 is bound to &amp;quot;children.&amp;quot; Notice that only e3 was raised
up across the node S2, because el and e2 had been bound before S2 was constructed.
</bodyText>
<page confidence="0.976965">
361
</page>
<figure confidence="0.987458375">
Computational Linguistics Volume 17, Number 4
DE
(relativizer)
V-bar
4`
(children)
tit al ef --&amp;quot;VP1
(by Li-s) (ask)
</figure>
<figureCaption confidence="0.9606842">
el e2 tit ik
e2 e3 (go to dinner)
e3 r JJ (children)
Figure 12
The parsing tree of the example (9).
</figureCaption>
<bodyText confidence="0.9997993125">
Once the parsing tree in Figure 12 is completed, it is easy to answer questions such
as who were asked and who went to dinner. Since el is the dummy subject of &amp;quot;go to
dinner&amp;quot; and the binder of el is e2, whose binder is e3, whose binder is &amp;quot;children,&amp;quot;
we can conclude it is &amp;quot;children&amp;quot; who went to dinner. In the same way, we can also
conclude it is &amp;quot;children&amp;quot; who were asked.
The raise-bind mechanism also serves as a filter to rule out incorrect sentences or
incorrect parsing trees. For example, if no empty NP is raised up or no NP is bound
within a construction involving passivization or relativization, such a construction will
be rejected by the check rules. On the other hand, some unbound NP could have no
antecedent. This can be determined from the check rules by looking up the attributes
of its corresponding verb. If the corresponding argument of the verb can actually be
omitted, then the parsing tree can be accepted; otherwise, the parsing tree will be
ruled out. Of course, if this mechanism is adopted for English sentence analysis, a test
must be performed to rule out sentences with other empty categories that have no
binder. But such sentences are, in general, grammatical in Chinese (just as sentence (8)
in Section 3).
</bodyText>
<sectionHeader confidence="0.921754" genericHeader="method">
9. Further Discussion of the Raise-Bind Mechanism
</sectionHeader>
<bodyText confidence="0.991812333333333">
Relativization in Chinese is a long-distance movement; that is, it can sometimes move
an object across several S (sentence) nodes. The noun phrase in (10) below shows an
example. On the other hand, the noun phrase in (11) is ambiguous. If the head noun
(&amp;quot;the man&amp;quot;) binds e1, this NP means &amp;quot;the man whom someone likes.&amp;quot; If the head noun
binds e2, on the other hand, it means &amp;quot;the man who likes someone or something.&amp;quot; To
remove the ambiguity, semantic interactions are needed.
</bodyText>
<page confidence="0.995853">
362
</page>
<note confidence="0.981596">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<figure confidence="0.95379025">
[s A [s [s e ] ] ] 611 t
I ask Li-s help me buy (relativizer) book
(the book which I asked Li-s to help me buy)
11. [s e2 ilk el
</figure>
<figureCaption confidence="0.499506">
like (relativizer) the man
</figureCaption>
<bodyText confidence="0.992729">
Considering the above situations, we can further improve the check rules as fol-
lows: for a noun and a relative clause to be combined into an NP, the parser checks
the &amp;quot;empty-NP list&amp;quot; raised up from the relative clause, and
</bodyText>
<listItem confidence="0.996872">
• if no empty NP is raised up, rule out the NP constituent;
• if an empty NP is raised up and marked to be coming from the subject
position or object position or embedded object position (as in example
(10)), set the empty NP to be bound to the head noun;
• if two empty NPs are raised up from both the subject and object
</listItem>
<bodyText confidence="0.997655625">
positions (as in example (11)), employ semantic analysis to determine the
proper binding (the present system is syntactically-based therefore such
semantic analysis will be considered in the next phase research).
Like relativization, topicalization is also a long-distance movement and can be further
improved in a similar way.
Another syntactic phenomena crucial to the parser is known as the complex NP
Constraint (CNPC) (Radford 1981); i.e., no transformation rule can move any element
out of a complex NP, where a complex NP (CNP) is an NP containing a relative clause.
This CNPC can be easily encoded in the grammar in the present approach by a simple
rule; i.e., no empty NPs can be raised up across a CNP node. Hence, it is impossible
for the empty NP within a CNP to be bound to any element out of that CNP.
In most cases, ba-transformation and passivization move the direct objects of verbs.
But the phenomenon known as &amp;quot;subject-to-object raising&amp;quot; (Radford 1981) has some dif-
ferences. In such a case, the subject of an embedded clause can be moved into the sub-
ject (or ba-object) position of the higher clause by passivization (or ba-transformation).
For example, sentence (13) is derived from sentence (12) by such a movement.
</bodyText>
<listItem confidence="0.798662">
12. )C A it 4111 It- VA YJ
</listItem>
<bodyText confidence="0.970052272727273">
people future will believe this mistake is correct
(People will believe in the future that this mistake is correct.)
13. * k AZ • *
this mistake future will by people believe is correct
(This mistake will be believed to be correct by the people in the future.)
To cope with such subject-to-object raising, the rules described in the previous section
for passivization can be modified as follows. The subject of a passive clause will bind
the empty NP in either the object position or the subject position of an embedded
clause.
The raise-bind mechanism is a computational approach to deal with the binding
of empty categories. Its most attractive feature is, in fact, that it is specially designed
</bodyText>
<page confidence="0.996462">
363
</page>
<note confidence="0.487889">
Computational Linguistics Volume 17, Number 4
</note>
<bodyText confidence="0.999797444444444">
to be used for head-driven strategy as in the present system. In ATN (Bates 1978),
the hold-list mechanism is used for a similar purpose. However, it is not very helpful
in parsing Chinese because: (a) it does not really fit the head-driven operation; (b) it
cannot deal with really unbound empty categories (e.g. example (8)); (c) it handles left
extraposition (e.g. (2)—(4)), but not right extraposition (e.g. sentence (5)). A movement
is called left (or right) extraposition, if it moves an NP to the position left (or right) of
its trace. To deal with right extraposition, ATN uses another mechanisim.
In GB theory, both left extraposition and right extraposition move an NP to a
position governing its trace; a null pronominal, if bound, is always bound to an NP
governing the null pronominal (Chomsky 1981). So, the raise-bind mechanism com-
bined with the check rules discussed here is sufficient to cope with all empty categories,
left or right extrapositions, and traces or null pronominals, since its function is simply
to raise up an empty category to be bound by an NP that governs this empty cat-
egory. We believe that by means of the raise-bind mechanism it will not be difficult
to implement some similar linguistic operators such as the slash concept of GPSG
(Sells 1985). However, this present approach still has some constraints; for example,
the check rules may take some computation cost, and multiple binding may occur if
some of the check rules are not consistent in some situations.
</bodyText>
<sectionHeader confidence="0.565077" genericHeader="method">
10. Preliminary Experimental Results
</sectionHeader>
<bodyText confidence="0.99995424137931">
In order to see how the present approaches work as compared to conventional ap-
proaches in parsing Chinese sentences, an experimental system was implemented and
extensive experiments have been performed. The system is written in C language and
performed on an IBM PC/AT. A total of 47 phrase structure rules were used, in which
19 rules are backward with a final head (indicated by a backward flag) and 28 rules
are forward with an initial head (indicated by a forward flag). All these rules, together
with the corresponding FIRST and LAST tables are listed in APPENDIX A and AP-
PENDIX B, respectively. A total of four tests were performed for each test sentence.
In test I, a conventional left-to-right parsing strategy without any look-ahead capa-
bility was used, while in Test lithe left-to-right parsing strategy was equipped with
a forward look-ahead approach (with the FIRST table only). In Test III, the present
head-driven parsing strategy based on the direction-selective chart was used without
any look-ahead capability, and finally in Test IV, the present head-driven parsing strat-
egy based on the direction-selective chart equipped with the bidirectional look-ahead
approach (with both the FIRST and LAST tables) was used. Because of the flexibility of
the present direction-selective chart, all the above four tests can be easily implemented
in the present system. For example, to perform Test I all one has to do is simply switch
all the flags in the phrase structure rules into the forward mode, etc.
After every test sentence was parsed in each test and an output syntax tree was
obtained, the total number of constituents constructed in the process of parsing was
recorded. In Figure 13, the total number of constituents constructed in each of the
four tests, together with the number of resulting output parsing trees for 25 typical
sentence examples picked up from a total of 200 test sentences, are listed. These 25
typical sentence examples are also listed in APPENDIX C . In Figure 14, the reduction
ratios of edge construction for the four tests as compared to Test I (i.e., the ratio
of the number of edge constructions to that of Test I for the 25 sentence examples),
together with the average reduction ratios for all the 200 test sentences, are shown.
Also listed in the last row of Figure 14 is the average time necessary to process a
sentence on the IBM PC/AT for each test. It can be found that, as compared to the
</bodyText>
<page confidence="0.998472">
364
</page>
<note confidence="0.997827">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<bodyText confidence="0.9999264">
conventional approach in Test I, on average the total number of necessary constituents
constructed for a sentence is reduced by a factor of 0.635 (or less than 2/3), or the
required processing time is reduced from 8.2 sec to 3.1 sec for a sentence, through the
use of the present direction-selective chart, the head-driven parsing strategy, and the
bidirectional look-ahead approaches (Test IV). Also, if the direction-selective and the
head-driven parsing strategy are used alone without look-ahead capability (Test III), an
edge reduction ratio of 0.762 can be achieved and it takes about 6.4 sec on average to
parse a sentence, which is close to the edge reduction ratio and processing speed (0.758
and 6.2 sec/sentence) for the use of the FIRST table only with conventional left-to-right
parsing (Test II). Moreover, another important observation is that the edge reduction
ratios are more prominent or the present approaches become more efficient when the
test sentence has a higher degree of ambiguity (a larger number of parsing trees were
obtained). Test sentences 20 and 22 in Figures 13 and 14 are good examples. In any case,
these results have shown that the present approaches of direction-selective chart, head-
driven parsing, and bidirectional look-ahead can, in fact, eliminate many unnecessary
searching actions (or active edges) and can make the parsing process much more
efficient than conventional left-to-right parsing strategies in parsing Chinese sentences.
On the other hand, in order to show the capabilities of the present parser especially
with the raise-bind mechanism to handle the difficult problem of empty categories,
parsing results of several typical sentence examples having empty categories are in-
cluded in APPENDIX D in bracketed text form. These results show that the raise-bind
mechanism, combined with the check rules proposed here, can certainly treat sophis-
ticated syntactic problems of empty categories and movement transformations and
simplify the design of grammar rules.
Although the lexicon implemented on the present system is relatively small (in-
cluding 1,120 words) compared with dictionaries for practical applications (it is es-
timated that at least 80,000 words are necessary), the capabilities of this system are
clearly demonstrated. It was estimated in the tests that, as a general-purpose system
without any special problem domain, about 80% to 85% of the sentences in the high-
school textbooks of Taiwan, can be successfully analyzed by this system, provided
that all the necessary words are either already in or can be keyed into the lexicon
before analysis or parsing is performed. This estimate was obtained simply because in
the tests in fact a total of 241 sentences randomly selected from these textbooks were
tested and correct parsing trees were obtained for 200 of them. These 200 sentences
are therefore used in all the above discussions.
</bodyText>
<subsectionHeader confidence="0.996602">
11. Concluding Remarks and Future Research Directions
</subsectionHeader>
<bodyText confidence="0.999914333333333">
In this paper an efficient natural language processing system specially designed for the
Chinese language is presented. The present design is the result of careful considera-
tion of some of the special syntactic phenomena of the Chinese language; for example,
head-final and head-initial structures, empty categories, and movement transforma-
tions. The present system is an attractive integration of several novel approaches;
e.g., the head-driven parsing strategy, the direction-selective chart, the bidirectional
look-ahead approach, the heuristic scheduling policy, and the raise-bind mechanism
based on check rules, etc. The head-driven parsing strategy can eliminate unneces-
sary searching actions, and the direction-selective chart simplifies the control of the
head-driven parsing strategy and makes the parser more flexible in performing many
different parsing strategies. The heuristic scheduling policy and the bidirectional look-
ahead approach can, in fact, further significantly reduce the large number of searching
</bodyText>
<page confidence="0.993342">
365
</page>
<figure confidence="0.980383914285714">
Computational Linguistics Volume 17, Number 4
Test Number of edge constructions Number of
sentence parsing
trees
Test I Test II Test IV
Test III
1 120 87 97 81 1
2 226 171 161 135 1
—&amp;quot;.-3.-
199 158 162 135 1
4 266 203 189 15 2
—3—
234 172 189 156 2
6 113 91 89 Ai 1
Ir. En
8 132 106 107 89 1
9 140 112 113 99 1
10 144 109 126 113 3
11 107 88 85 78 1
---17—&apos;
209 158 178 161 3
13 444 315 287 260 4
14 277 199 195 175 1
15 743 493 592 534 12
16 358 256 293 247 3
17 334 234 213 190 2
&apos;--&amp;quot;Tr—&apos; 115 86 97 82 1
19 177—&apos;---1-40 143 129 2
20 1540 1112 1034 949 33
21 276 201 207 181 2
22 2583 1801 1528 1327 27
23 114 95 103 88 - 1
&apos;---2-4---.
310 253 209 190 3
25 491 376 352 317 9
</figure>
<figureCaption confidence="0.991255">
Figure 13
</figureCaption>
<bodyText confidence="0.996357833333333">
A table listing the total number of constituents constructed in the four tests and the number of
parsing trees obtained for the 25 typical sentence examples listed in APPENDIX C.
actions and make the parsing processes more efficient, while the raise-bind mecha-
nism and the check rules can certainly handle sophisticated problems of movement
transformations and empty categories, and can simplify the design of grammar rules.
Although much more work is still in progress to further improve the present system,
this is definitely a very good initial attempt to efficiently process natural sentences
of the Chinese language, the structure of which is significantly different from most
western languages, such as English.
Although the present system has shown satisfactory initial results, some natural
difficulties for the Chinese language still remain, such that significant improvement
over the present system is highly desired. One of the primary difficulties is due to the
lack of inflections in Chinese words. This gives multiple solutions in word category
identification and causes exponential growth in the number of structures. It is, there-
fore, believed that an integrated syntactic and semantic analysis will eventually become
an inevitable solution in the future. Because verbs are, ultimately, heads of sentences,
appropriate classification of verbs may help in determining syntactic structure and,
thus in grasping the semantic meaning of sentences. Although in most linguistic theo-
ries verbs are classified according to syntactic properties, and some linguistic theories,
such as Lexical Functional Grammar (Sells 1985) and Case Grammar (Fillmore 1968),
also provide mechanisms to explicitly represent functional or semantic role assignment
of constituents, such work for the Chinese language is still relatively preliminary. Chao
(1968) has only distinguished intransitive verbs from transitive verbs and Yang (1987)
has made very encouraging initial efforts by classifying Chinese verbs according to
</bodyText>
<page confidence="0.997404">
366
</page>
<note confidence="0.997775">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<figureCaption confidence="0.8618495">
Figure 14
A table showing the edge reduction ratios for the 25 typical sentence examples listed in
APPENDIX C and the average reduction ratios for all the 200 test sentences for the four tests
campared to Test I.
</figureCaption>
<figure confidence="0.854850285714286">
Test Edge Reduction Ratios
Sentene
Test I Test II Test III Test IV
1 1.000 0.725 0.809 0.675
z 1.000 0.757 0.718 0.598
.3 1.000 0.794 0.815 0.679
-.
4 1.000 0.764 0.711 0.583
0.664
5 1.000 0.736 0.808
6 1.000 0.806 0.788 0.717
-.
/ 1.000 0.760 0.742 0.630
,
1.000 0.804 0.811 0.675 ...
1.000 0.800 0.808 0.718
10 1.000 0.757 0.875 0.785
1 i 1.000 0.823 0.795 0.729
-.,
12 1.000 0.756 0.852 0.771
13 1.000 0.710 0.647 0.586
14 1.000 0.719 0.704 0.632
13 1.000 0.664 0.797 0.719
(J.b90
16 1.000 0./16 0.819
17 1.000 0.701 0.638 0.569
18 1.000 0.748 0.844 0.714
19 1.000 0.791 0.808 0.729
. 20 1.000 0.723 0.672 0.617
21 1.000 0.729 0.750 0.656
..
22 1.000 0.698 0.592 0.514
23 1.000 0.834 0.904 0.772
24 1.000 0.817 0.675 0.613
1.000 0.766 0.717 0.646
Average 1.000 0.758 0.762 0.635
Ratios
....vet age - 8.2 6.2 6.4 3.1
Speed of
Process
(Sec/Son
ence)
</figure>
<bodyText confidence="0.9992262">
their transitivity into eight different syntactic classes and giving each verb a semantic
category that can be used to decide the case frame to solve the problem of serial verb
construction. Recently, a new classification scheme for Chinese verbs has been devel-
oped (K.-J. Chen et al. 1988), in which current theories of feature-based categorization
are adopted. This scheme is based on the results of analyzing 16,824 Chinese verbs,
with careful consideration given to difficulties in parsing Chinese sentences. In the
next stage of the present study, this verb classification will be employed, and much
more syntactic and semantic information will be provided by the lexicon, especially
for verbs, and represented as complex feature structures (Gazdar 1988). Furthermore,
several other approaches will also be included in the next stage of the present study,
such as the unification concept (Sheiber 1986), and the slot and filler principle (Hell-
wing 1988). In other words, although there is still a very long way to go before a
really convenient and efficient natural language processing system for Chinese be-
comes available in the future, the present system apparently serves as a successful
initial step on the way.
</bodyText>
<page confidence="0.988459">
367
</page>
<table confidence="0.75806532">
Computational Linguistics Volume 17, Number 4
Appendix A
The phrase structure rules used in the experiments
b S2 -4 S PRTAG
b S .- NP VP
f S -&gt; VP
f NP N
f NP --* PLACE
f NP -* TIME
b NP --4 NP LOC
f NP -4 LOC
b NP --* PreN1 N
b NP -- PreN2 N
b NP PreN3 N
f PreN2 -4 QP
b PreN2 -4 XPDE QP
b PreN1 -- XPDE ADJ
b PreN1 -.- QP ADJ
b PreN1 -4 ADJ
b PreN1 --4 XPDE QP ADJ
b PreN1 --4 QP XPDE ADJ
b PreN3 QP XPDE
f PreN3 -4 XPDE
b XPDE -4 SDE
b XPDE -* NP DE
b XPDE --4 PP DE
f VP -4 AUX VBAR
f VP -+ AUX ADV VBAR
f VP -4 ADV AUX VBAR
f VP -.4 ADV AUX PP VBAR
f VP -4 AUX ADV PP VBAR
f VP -- ADV VBAR
f VP -4 PP VBAR
f VP -4 VBAR
f VBAR --4 V
f VBAR --4 V QP
f VBAR -4 V PP
f VBAR -4 V VP
f VBAR -4 VS
f VBAR -4 V NP NP
f VBAR --4 V NP PP
f VBAR ---* V NP VP
f VBAR -4 V NP
f VBAR -- V NP
f PP -- PREP NP
b QP -4 DET NO CLMS
b QP --4 NO CLMS
b QP --* DET CLMS
f CLMS --4 CL
f CLMS -- MS
</table>
<page confidence="0.992523">
368
</page>
<note confidence="0.689860333333333">
Lin-Shan Lee et al. Processing System for Chinese Language
APPENDIX B. The FIRST and LAST tables for the sample grammar shown in
APPENDIX A
</note>
<table confidence="0.358508764705882">
(a) The FIRST table for the sample grammar shown in APPENDIX A
PET PL-
NO MS CL DET PREP V ADV AUX DE AD! N AG ACE TEAM LOC
NO
MS
CL
DET
PREP
V
ADV
AUX
ADS
PRTAG
PLACE
TIMM
LOC
S2
</table>
<sectionHeader confidence="0.938650888888889" genericHeader="method">
NP
VP
XPDE
91?
VEAR
QPNP
ADINP
XPNP
CLMS
</sectionHeader>
<table confidence="0.970187392857143">
(b) The LAST table for the sample grammar shown in APPENDIX A
PRT- PL-
NO MS CL DET PREP V ADV AUX DE ADI N AO ArP TIME LOC
NO X X X ■•■ X X
MS
CI-
DET
PREP
ADV
AUX
DE
AD!
PRTAO
PLACE
TIME
LOC
S2
NP
VP
X:PDE
OP
PP
VEAR
OPNP
ADINP
IC:PNP
CLMS
3C -4 X X X
</table>
<figure confidence="0.783514416666666">
X_
X X X
X
It
a
It
369
Computational Linguistics Volume 17, Number 4
APPENDIX C. 25 example sentences to show typical experimental results
Mfg 1- Eff *7
my (child) has go to school (aspect)
(My child has just gone to school.)
2. fat] IT un
your brother again hit my child
(Your brother hit my child again.)
3. ta -ft a Milit Erg
this is a (classifier) can listen mandrain (relativizer) computer
(This is a computer which can listen to Mandarin.)
4.4jA
he give I a (classifier) I very like (relativizer) flower
(He gave me a flower which I liked very much.)
5. ft SR ft Erg a /-1 _E
I like my painting hang on wall (localizer)
(I like my painting to be hung on the wall.)
6.— ffq tf•
a (classifier) seed sleep in earth ( localizer)
(A seed is planted in the earth.)
n t5 4111
I don&apos;t like do business (relativizer) that (classifier) man
(I don&apos;t like that fellow who is a businessman.)
8. fth M ft Erg 11=1V-IJ.114
he is my high school classmate
(He was may classmate when I was in high school.)
9. r±. Ikffi A - f/.1&apos;fiNfi`g
at Post Office behid there is a row little houses
(There is a row of houses behind the Post Office.)
la Rill 04 141
we ask teacher assign job
(We ask the teacher to assign jobs for us.)
f-j1 a a- Ali t* MT- 11
I live in that (classifier) buildings (localizer)
(l live in that buildings.)
12.
child laugh he is fat
(The child laughed at his fatness.)
134-2RgtflJ -4*/±-
I find my a (classifier) pen lose in classroom
(I soon discovered that I had left may pen in the classroom.)
</figure>
<page confidence="0.971964">
370
</page>
<note confidence="0.967416">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<figure confidence="0.964974377777777">
Appendix C, cont&apos;d
14. Ina tg lk 009 T Ottrig
in this (classifier) tree behind we find (aspect) a (classifier) white flower
(We found a white flower behind this tree.)
15411U1 I —JAZa JI 1imAn /Nix
I believe Uang-wu would think Jang-san very like that (classifier) pretty lady
(I believed that Uang-wu would think Jang-san liked that pretty lady very much.)
16. )C* MA k3 — 1+ Prin
people must think this is a (classifier) wrong thing
(People would think this is a wrong thing.)
174-1 IE 409 — tkri- _E
(ba) your a (classifier) letter put on deak (localizer)
(I left a letter of yours on the desk.)
18.0 9i±i ..Eyll Ralik
you tomorrow class about to what time
(What time will your class end tomorrow?)
IE 1* 1Z Nit
he want (ba) that (classifier) house sell to I
(He wants to sell that house to me.)
20.4t fth til IE t5 N&apos;t fainfl9 E5
he say he very like (ba) that (classifier) green car park on door that
(classifier) big tree behind
(He said he liked very much to park that green car beside the big tree near the front door.)
21. IjNA tti ,-E g
little bird all day long sit on this (classifier) tree (localizer) wait for mother
(A little bird sat on the tree all day long waiting for its mother.)
22.1t E1tf?1liNttlEt5
he say he very like (ba) that (classifier) green car park on door of that
trg fii‘c /JN
(classifier) big tree (localizer) of a (classifier) small alley (localizer)
(He says he likes very much to park that green car in a small alley which is beside the big tree near the front door.)
23. RIM irr. 10T — 1 ROn EI
we yesterday have (aspect) a (classifier) happry holiday
(We had a very happy holiday yesterday.)
24.ft — 411 * 19.1 JI ii 4NTA _E
he (ha) a (classifer) water pour on that (classifer) child body (localizer)
(He poured a bucket of water over that child.)
25. fttl 61 /J&apos;ff&lt; t5 frg AT
they say this child is that (classifier) school of good student
(They say this child is a good student of that school.)
371
Computational Linguistics Volume 17, Number 4
APPENDIX D. Sample Parsing Results
1. INPUT ==&gt; T-1 Vf N frg Ali A Iti, fil AM AA
I last year lost (relativizer) that (classifier) dog I before assume
E. NI* 7, I.. /Nti V fi Nfl1 7.
i&apos;
already die (aspect marker) yesterday unexpectedly by me found (aspect marker)
- (I used to assume the dog I lost last year must have already died, but it was unexpectedly
found by me yesterday.)
(SENTENCE
(NP &lt;NOUN&gt;
(XPDE &lt;S&gt;
(S
(NP &lt;NOUN&gt;
(N &lt;PRON&gt; ===&gt; fl I))
(VP
(ADV ===&gt; IF last year )
(V-bar
(V &lt;V-n&gt; ===&gt; lost )
(EMPTY (No.0)))))
(DEn ===&gt; (lig relativizer ))
(QP &lt;Mc&gt;
(DET ===&gt; Ali that)
(CL &lt;Mc&gt; ===&gt; I classifer))
(N &lt;NOUN&gt; ===&gt; 51g dog))
(S
(NP &lt;NOUN&gt;
(N &lt;PRON&gt; ==» ft I))
(VP
(ADV ===&gt; J24 WI before )
(V-bar
(V &lt;V-s&gt; ===&gt; AA think )
(S
(EMPTY (No.2))
(VP
(ADV =--=&gt; Eff already )
(V-bar
(V &lt;V-&gt; ===&gt; Mlit die)
(Aspect ===&gt; 7 aspect marker ))))))))
(S=bar
(S
(EMPTY (No.5))
(VP
(NP &lt;TIME&gt;
(N &lt;Time&gt; ===&gt; IYF yesterday ))
(ADV ===&gt; Fa PA unexpectedly)
(PP &lt;bei&gt;
(PREP &lt;bei&gt; ===&gt; V by)
(NP &lt;NOUN&gt;
</figure>
<page confidence="0.957565">
372
</page>
<note confidence="0.915736">
Lin-Shan Lee et al. Processing System for Chinese Language
</note>
<equation confidence="0.6861752">
Appendix D, cont&apos;d
(N &lt;PRON&gt; ===&gt; TA me )))
(V-bar
(V &lt;V-n&gt; ===&gt; NM found )
(EMFTY (No.4))))
(PRTAG ===&gt; Ti&apos; aspect marker)))
EMPTY.4 == EMPTY.5
EMPTY.0 == N: ( Pi dog)
EMFTY.2 == NP: ( 1 Yg the dog I lost last year )
EMPTY.5 == NP: ( j reg iI ol the dog I lost last year)
</equation>
<sectionHeader confidence="0.695586" genericHeader="references">
2. INPUT ===&gt; Z-111 OA NI* t, /A** tieZa NES]
</sectionHeader>
<bodyText confidence="0.5807095">
this mistake future will by people believe is correct
(This mistake will be believed to be correct by the people in the future.)
</bodyText>
<figure confidence="0.937426225806452">
(SENTENCE
(S
(NP &lt;NOUN&gt;
(QP &lt;Mc&gt;
(DET ===&gt; 114 this))
(N &lt;NOUN&gt; ===&gt; gm mistake))
(VP
(ADV ==---&gt; 1&apos;44 future)
(AUX ===&gt; will)
(PP &lt;bei&gt;
(PREP &lt;bei&gt; =--= 4&apos; by)
(NP &lt;NOUN&gt;
(N &lt;PRON&gt; ===&gt; 7* people)))
(V-bar
(V &lt;V-s&gt; ===&gt; MA believe)
(S
(EMPTY (No.1))
(VP
(V-bar
(V &lt;SHI&gt; ===&gt;Z is)
(S
(EMPTY (No.0)
(VP
(V-bar
(V &lt;ADJ&gt; ===&gt; Win correct)))
)))))))
EMPTY.° == EMPTY. 1
EMPTY.1 == NP:(1---lotgi this mistake)
373
Computational Linguistics Volume 17, Number 4
References
</figure>
<reference confidence="0.999733897435898">
Aho, A. V., and Ullman, J. D. (1972). The
Theory of Parsing, Translation, and
Compling, Vol. 1. Englewood Cliffs, NJ:
Prentice-Hall.
Bates, M. (1978). &amp;quot;The theory and practice
of augmented transition network
grammars.&amp;quot; Natural Language
Communication with Computers, 191-259.
Chao, Y. R. (1968). A Grammar of Spoken
Chinese. Berkeley, CA: University of
California Press.
Chen, H. H., Lin, I. P., and Wu, C. P. (1988).
&amp;quot;A logical approach to movement
transformation in Mandarin Chinese.&amp;quot;
International Journal of Pattern Recognition
and Artificial Intelligence, (2)1.
Chen, K. J., and Chang, L. L. (1988). &amp;quot;A
classification of Chinese verbs for
language parsing.&amp;quot; International Conference
of Computer Processing and Oriental
Languages.
Chen, J. J. (1985). &amp;quot;An experimental parsing
system for Chinese sentences,&amp;quot; M.S.
thesis, National Taiwan University, Taipei.
Chomsky, N. (1981). Lectures on Government
and Binding. Dordrecht: Foris.
Fillmore, C. (1968). &amp;quot;The case for case.&amp;quot; In
Universals in Linguistic Theory edited by
Bach and Harms, Holt, Reinhart and
Winston.
Gazdar, G., Franz, A., Osborne, K., and
Evans, R. (1987). &amp;quot;Natural language
processing in the 1980s.&amp;quot; CSLI, Stanford
University.
Gazdar, G. (1988). &amp;quot;Categorial structure.&amp;quot;
Computational Linguistics 14:1-19.
Hellwing, P. (1988). &amp;quot;Chart parsing
according to the slot and filler principle.&amp;quot;
In Proceedings, International Conference on
Computational Linguistics, 242-244.
Ho, W. H. (1984). &amp;quot;Automatic recognition of
Chinese words.&amp;quot; M.S. thesis, National
Taiwan Institute of Technology, Taipei.
Huang, J. (1982). &amp;quot;Logical relations in
Chinese and the theory of grammar.&amp;quot;
Doctoral dissertation, Massachusetts
Institute of Technology, Cambridge, MA.
Jiang. (1985). &amp;quot;Chinese parsing: An initial
exploration at LRC.&amp;quot; Computer Processing
of Chinese and Oriental Language 2(2):
127-138.
Kay, M. (1980). &amp;quot;Algorithm schemata and
data structures in syntactic processing.&amp;quot;
Xerox Report CSL-80-12, Palo Alto, CA.
Li, C. N., and Thompson, S. A. (1981).
Mandarin Chinese. University of California
Press.
Lin, L. J. (1985). &amp;quot;A syntactic analysis
system for Chinese sentences.&amp;quot; M.S.
thesis, National Taiwan University, Taipei,
Taiwan.
Lin, L.-J.; Huang, J.; Chen, K.-J.; and Lee,
L.-S. (1986). &amp;quot;SASC: A syntactic analysis
system for Chinese sentences.&amp;quot; In
Proceedings, International Conference on
Chinese Computing. Singapore.
Lin, L.-J.; Chen, K.-J.; Huang, J.; Lee, L.-S.
(1986). &amp;quot;A Chinese natural language
processing system based upon the theory
of empty categories.&amp;quot; In Proceedings, Fifth
National Conference on Artificial Intelligence
(AAAI). Philadelphia, PA.
Marcus, M. P. (1982). A Theory of Syntactic
Recognition for Natural Language.
Cambridge, MA: The MIT Press.
Pareschi R., and Steedman, M. (1987). &amp;quot;A
lazy way to chart-parse with categorial
grammars.&amp;quot; In Proceedings, 25th Annual
Meeting of the Association for Computational
Linguistics.
Radford, A. (1981). Transformational Syntax:
A Student&apos;s Guide to Chomsky&apos;s Extended
Standard Theory. Cambridge, U.K.:
Cambridge University Press.
Sells, P. (1985). &amp;quot;Lecture on contemporary
syntactic theories: An introduction to
government-binding theory, generalized
phrase structure grammar, and
lexical-functional grammar.&amp;quot; CSLI.
Sheiber, S. M. (1986). An Introduction to
Unification-Based Approaches to Grammar.
Chicago: University of Chicago Press.
Steedman, M. (1985). &amp;quot;Dependency and
coordination in the grammar of Dutch
and English.&amp;quot; Language. 61, 523-568.
Stock, 0., Falcone, R., and Insinnamo, P.
(1988). &amp;quot;Island parsing and bidirectional
charts.&amp;quot; In Proceedings, International
Conference on Computational Linguistics.
Tomita, M. (1986). Efficient Parsing for
Natural Language: A Fast Algorithm for
Practical Systems. Boston: Kluwer.
Wehrli, E. (1988). &amp;quot;Parsing with a
GB-grammar.&amp;quot; In Natural Language Parsing
and Linguistic Theories, edited by U. Reyle
and C. Rohrer, Dordrecht, Boston:
D. Reidel, distributed by Kluwer, 177-201.
Winograd, T. (1983). Language as a Cognitive
Process. Vol. 1: Syntax. Reading, MA:
Addison-Wesley.
Woods, W. (1970). &amp;quot;Transition network
grammar for natural language analysis.&amp;quot;
CACM 13(10), 591-606.
Yang, Y. (1987). &amp;quot;Semantic analysis in
Chinese sentence analysis.&amp;quot; In Proceedings,
International Joint Conference on Artificial
Intelligence (AAAI). Milano, Italy.
</reference>
<page confidence="0.999021">
374
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.226773">
<title confidence="0.999303333333333">An Efficient Natural Language Processing System Specially Designed for the Chinese Language</title>
<author confidence="0.994545">Lin-Shan Lee</author>
<affiliation confidence="0.901802">National Taiwan University Long-Ji Lint National Taiwan University</affiliation>
<author confidence="0.572437">K-J Chen&apos;</author>
<affiliation confidence="0.865881">Academia Sinica Lee-Feng Chient National Taiwan University</affiliation>
<author confidence="0.99919">James Huang§</author>
<affiliation confidence="0.999974">Cornell University</affiliation>
<abstract confidence="0.998598375">In this paper an efficient natural language processing system specially designed for the Chinese language is presented. The center of the present system is a bottom-up chart parser with head-driven operation; i.e., phrases are built up by starting with their heads and adjoining constituents to the left or right of the heads instead of strictly from left to right. In this way many more unnecessary searching actions can be effectively eliminated. The present system also includes several efficient approaches such as a direction-selective chart to simplify the control of the head-driven operation; a heuristic scheduling policy and a bidirectional look-ahead approach to eliminate many unnecessary searching actions, and an improved raise-bind mechanism combined with check rules to treat the difficult problems of movement transformations and empty categories and to simplify the design of grammar rules. The present design is based on careful consideration of some special syntactic phenomena of the Chinese language, such as head-final and head-initial structures and empty categories. A prototype of the present system has been successfully implemented and extensive experiments have been performed. In the test results significant improvement in the efficiency in processing many very complicated Chinese sentences has been observed. The detailed discussion on the various approaches, the overall system design, and the experimental results will all be presented in this paper.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A V Aho</author>
<author>J D Ullman</author>
</authors>
<title>The Theory of Parsing,</title>
<date>1972</date>
<journal>Translation, and Compling,</journal>
<volume>1</volume>
<publisher>Prentice-Hall.</publisher>
<location>Englewood Cliffs, NJ:</location>
<contexts>
<context position="27166" citStr="Aho and Ullman 1972" startWordPosition="4318" endWordPosition="4321">actly located at the position the active edge is looking for, to check whether the desired category can begin with (if the active edge is F-active for an initial head) or end with (if the active edge is B-active for a final head) the category of the examined constituent, according to the description of the grammar. In this way it is possible for the parser of the present system to avoid building many unnecessary active edges by such a &amp;quot;bidirectional look-ahead approach&amp;quot; combining the special head-driven strategy developed in the present study with the concept of FIRST and LAST parsing tables (Aho and Ullman 1972) to be discussed in detail below. In the following, we shall first define these two tables and then describe how the bidirectional look-ahead approach works. FIRST(C): If C is a category, FIRST(C) is the set of all possible lexical categories the category C can begin with. Meanwhile, a matrix tabulating such FIRST relations of all categories of a grammar is called the FIRST parsing table of the grammar. For example, Figure 7 is the FIRST parsing table for the sample grammar rules listed in Figure 8. For instance, in it FIRST(NP) = {PRON, N} because FIRST(NP) = PRON U N U FIRST(XPDE) PRON U N U</context>
</contexts>
<marker>Aho, Ullman, 1972</marker>
<rawString>Aho, A. V., and Ullman, J. D. (1972). The Theory of Parsing, Translation, and Compling, Vol. 1. Englewood Cliffs, NJ: Prentice-Hall.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Bates</author>
</authors>
<title>The theory and practice of augmented transition network grammars.&amp;quot;</title>
<date>1978</date>
<journal>Natural Language Communication with Computers,</journal>
<pages>191--259</pages>
<contexts>
<context position="46547" citStr="Bates 1978" startWordPosition="7747" endWordPosition="7748">o be correct by the people in the future.) To cope with such subject-to-object raising, the rules described in the previous section for passivization can be modified as follows. The subject of a passive clause will bind the empty NP in either the object position or the subject position of an embedded clause. The raise-bind mechanism is a computational approach to deal with the binding of empty categories. Its most attractive feature is, in fact, that it is specially designed 363 Computational Linguistics Volume 17, Number 4 to be used for head-driven strategy as in the present system. In ATN (Bates 1978), the hold-list mechanism is used for a similar purpose. However, it is not very helpful in parsing Chinese because: (a) it does not really fit the head-driven operation; (b) it cannot deal with really unbound empty categories (e.g. example (8)); (c) it handles left extraposition (e.g. (2)—(4)), but not right extraposition (e.g. sentence (5)). A movement is called left (or right) extraposition, if it moves an NP to the position left (or right) of its trace. To deal with right extraposition, ATN uses another mechanisim. In GB theory, both left extraposition and right extraposition move an NP to</context>
</contexts>
<marker>Bates, 1978</marker>
<rawString>Bates, M. (1978). &amp;quot;The theory and practice of augmented transition network grammars.&amp;quot; Natural Language Communication with Computers, 191-259.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y R Chao</author>
</authors>
<title>A Grammar of Spoken Chinese.</title>
<date>1968</date>
<publisher>University of California Press.</publisher>
<location>Berkeley, CA:</location>
<contexts>
<context position="4810" citStr="Chao 1968" startWordPosition="703" endWordPosition="704">5, 6, and 7, respectively. Sections 8 and 9 then present the improved design of the raise-bind mechanism to cope with the problem of movement transformation and empty categories. Some preliminary experimental results are discussed in Section 10, and concluding remarks and future research directions are finally given in Section 11. 2. The Head-Final/Head-Initial Structures of the Chinese Language The Chinese language has many special syntactic phenomena substantially different from western languages. Discussions about such characteristics of the Chinese language can be found in the literature (Chao 1968; Li and Thompson 1981; Huang 1982). In this paper only some of them that have significant influence on the present study will be briefly described. They are (1) head-final/head-initial structures and (2) empty categories of the Chinese language, to be respectively summarized in this and the following sections. The notion of the head of a phrase has a very long history, which stems from the traditional grammar and plays a central role in recent syntactic analysis frameworks such as GB and GPSG (Sells 1985). The basic idea is simply that each phrase contains a certain word that is especially im</context>
<context position="6433" citStr="Chao 1968" startWordPosition="972" endWordPosition="973"> phrases with their corresponding phrases in English (shown below each Chinese phrase in parentheses), the positions of the heads in English are more free. On the other hand, other Chinese phrases that are not head-final are found to be almost always head-initial, e.g., PPs (such as example 4 in Figure 1). This is somewhat different from western languages like English. Figure 2 is a list of some fundamental phrase structure rules (PSRs) for the Chinese language used in the present system. The underlines indicate the head of each PSR. Some of the categories here are from Chao&apos;s classification (Chao 1968), and the rules here are primarily based on the 348 Lin-Shan Lee et al. Processing System for Chinese Language 1. k, playing (relativizer) children (the children who were playing) 2. It SP &apos;ft. * I the live in America (relativizer) good friend (the good friend of mine who lives in America) 3. — t MAO 14 a (classifier) quite pretty girl (a quite pretty girl) 4. it ( rt] •* A 111 )pp he from your friends borrow money (he borrowed money (from your friends)pp ) Figure 1 Some examples of Chinese noun phrases and preposition phrases. (1) S = bar --&gt; S-bar PRTAG I S PRTAG (2) S-bar --&gt; Topic S (3) S </context>
<context position="57030" citStr="Chao (1968)" startWordPosition="9458" endWordPosition="9459">inevitable solution in the future. Because verbs are, ultimately, heads of sentences, appropriate classification of verbs may help in determining syntactic structure and, thus in grasping the semantic meaning of sentences. Although in most linguistic theories verbs are classified according to syntactic properties, and some linguistic theories, such as Lexical Functional Grammar (Sells 1985) and Case Grammar (Fillmore 1968), also provide mechanisms to explicitly represent functional or semantic role assignment of constituents, such work for the Chinese language is still relatively preliminary. Chao (1968) has only distinguished intransitive verbs from transitive verbs and Yang (1987) has made very encouraging initial efforts by classifying Chinese verbs according to 366 Lin-Shan Lee et al. Processing System for Chinese Language Figure 14 A table showing the edge reduction ratios for the 25 typical sentence examples listed in APPENDIX C and the average reduction ratios for all the 200 test sentences for the four tests campared to Test I. Test Edge Reduction Ratios Sentene Test I Test II Test III Test IV 1 1.000 0.725 0.809 0.675 z 1.000 0.757 0.718 0.598 .3 1.000 0.794 0.815 0.679 -. 4 1.000 0.</context>
</contexts>
<marker>Chao, 1968</marker>
<rawString>Chao, Y. R. (1968). A Grammar of Spoken Chinese. Berkeley, CA: University of California Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H H Chen</author>
<author>I P Lin</author>
<author>C P Wu</author>
</authors>
<title>A logical approach to movement transformation in Mandarin Chinese.&amp;quot;</title>
<date>1988</date>
<journal>International Journal of Pattern Recognition and Artificial Intelligence,</journal>
<volume>2</volume>
<contexts>
<context position="3541" citStr="Chen et al. (1988)" startWordPosition="513" endWordPosition="516"> language is quite different from western languages like English and, therefore, the experience in processing western languages cannot necessarily be directly applied to the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also developed a Chinese natural language processing system with special considerations on the phenomenon of empty categories in the Chinese language. Yang (1987) presented a method using semantic constraints to reduce ambiguity in Chinese sentence analysis. H. H. Chen et al. (1988) proposed a logic programming approach considering Chomsky&apos;s Goverment-Binding theory to cope with movement transformations in Mandarin Chinese. In the following, some special syntactic phenomena of the Chinese language that significantly affect the design of the present system are first summarized in Sections 2 and 3, and a brief description of the present system and the structure of the linguistic knowledge base is then given in Section 4. The several new approaches, including the direction-selective chart and the head-driven chart parser, the bidirectional look-ahead approach, and the heuri</context>
<context position="20586" citStr="Chen et al. 1988" startWordPosition="3278" endWordPosition="3281">uents could be more promising) that often occur in a strictly 353 Computational Linguistics Volume 17, Number 4 FIRST and LAST Tables Check Rules Phrase Structure Rules Lexicon S=bar -&gt; S-bar PRTA -&gt; S PRTAG S-bar -&gt; Topic S Figure 4 The linguistic knowledge base. left-to-right parsing scheme. This will all become clearer later in this paper. Several approaches were further developed in the present parser described in this paper to better realize this concept, so that significant improvement as compared to some previous Chinese natural language processing systems (Yang 1987; Jiang 1985; H. H. Chen et al. 1988) can be observed. In the following sections, these approaches, including the direction-selective chart, the bidirectional look-ahead approach, the heuristic scheduling policy, and the raise-bind mechanism will be described in detail. Here, we first describe the direction-selective chart in this section. Before parsing is performed, any input word sequence has to be first represented by the direction-selective chart. Just like a conventional chart (Kay 1980; Winograd 1983), the direction-selective chart is an efficient data structure to record what has been done so far in the course of parsing </context>
<context position="58612" citStr="Chen et al. 1988" startWordPosition="9736" endWordPosition="9739">8 0.569 18 1.000 0.748 0.844 0.714 19 1.000 0.791 0.808 0.729 . 20 1.000 0.723 0.672 0.617 21 1.000 0.729 0.750 0.656 .. 22 1.000 0.698 0.592 0.514 23 1.000 0.834 0.904 0.772 24 1.000 0.817 0.675 0.613 1.000 0.766 0.717 0.646 Average 1.000 0.758 0.762 0.635 Ratios ....vet age - 8.2 6.2 6.4 3.1 Speed of Process (Sec/Son ence) their transitivity into eight different syntactic classes and giving each verb a semantic category that can be used to decide the case frame to solve the problem of serial verb construction. Recently, a new classification scheme for Chinese verbs has been developed (K.-J. Chen et al. 1988), in which current theories of feature-based categorization are adopted. This scheme is based on the results of analyzing 16,824 Chinese verbs, with careful consideration given to difficulties in parsing Chinese sentences. In the next stage of the present study, this verb classification will be employed, and much more syntactic and semantic information will be provided by the lexicon, especially for verbs, and represented as complex feature structures (Gazdar 1988). Furthermore, several other approaches will also be included in the next stage of the present study, such as the unification conce</context>
</contexts>
<marker>Chen, Lin, Wu, 1988</marker>
<rawString>Chen, H. H., Lin, I. P., and Wu, C. P. (1988). &amp;quot;A logical approach to movement transformation in Mandarin Chinese.&amp;quot; International Journal of Pattern Recognition and Artificial Intelligence, (2)1.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K J Chen</author>
<author>L L Chang</author>
</authors>
<title>A classification of Chinese verbs for language parsing.&amp;quot;</title>
<date>1988</date>
<booktitle>International Conference of Computer Processing and Oriental Languages.</booktitle>
<marker>Chen, Chang, 1988</marker>
<rawString>Chen, K. J., and Chang, L. L. (1988). &amp;quot;A classification of Chinese verbs for language parsing.&amp;quot; International Conference of Computer Processing and Oriental Languages.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J J Chen</author>
</authors>
<title>An experimental parsing system for Chinese sentences,&amp;quot;</title>
<date>1985</date>
<tech>M.S. thesis,</tech>
<institution>National Taiwan University,</institution>
<location>Taipei.</location>
<contexts>
<context position="16281" citStr="Chen 1985" startWordPosition="2594" endWordPosition="2595">formulation of some compound words; e.g. the determiner/measure compound words, the reduplication words, etc., such that they don&apos;t have to be stored in the PSR&apos;s, FIRST and LAST tables, and check rules word formation les 352 Lin-Shan Lee et al. Processing System for Chinese Language lexicon. However, because of the high degree of inherent lexical ambiguity, very often an input sentence can be segmented into several different possible word combinations and there are no simple rules to decide which combination is the correct answer. In this preprocessor, a heuristic longest word matching rule (Chen 1985) is applied to decide a most promising word combination, but errors still happen sometimes in the preprocessor and manual correction is actually needed. The preprocessor also adds relevant categorial information and other features extracted from the lexicon to each of the words. The result of the first part is represented by a data structure—a directionselective chart (to be discussed in detail in the next section) and is transported to the second part. The second part, consisting of a parser and a linguistic knowledge base, builds up phrases on the direction-selective chart by applying the li</context>
<context position="17694" citStr="Chen 1985" startWordPosition="2830" endWordPosition="2831">later in this paper. The linguistic knowledge base can be broadly seen as a compilation of a four-tuple; i.e., the phrase structure rules (PSR), the FIRST and LAST parsing tables of these rules, the check rules, and the lexicon shared with the first part. If the sentence is grammatical in the sense of the grammar, a syntax tree will result as the output. Otherwise, failure will be reported. From now on, this paper will concentrate on the second part of the system, i.e., the parser and the linguistic knowledge base only, while the details of the first part can be found in other works (Ho 1984; Chen 1985). As far as the second part of the system is concerned, the input sentences are assumed to be segmented into words with categorial information and other features provided by the lexicon. The linguistic knowledge base used in this system, as mentioned above, can be broadly seen as a compilation of a four-tuple: the phrase structure grammar (PSRs), the FIRST and LAST parsing tables for these PSRs, the check rules, and a lexicon as shown in Figure 4. The PSRs describe how sentences are built up out of phrasal categories, and how phrases are built up out of lexical categories and/or phrasal catego</context>
</contexts>
<marker>Chen, 1985</marker>
<rawString>Chen, J. J. (1985). &amp;quot;An experimental parsing system for Chinese sentences,&amp;quot; M.S. thesis, National Taiwan University, Taipei.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Chomsky</author>
</authors>
<date>1981</date>
<booktitle>Lectures on Government and Binding.</booktitle>
<location>Dordrecht: Foris.</location>
<contexts>
<context position="47278" citStr="Chomsky 1981" startWordPosition="7867" endWordPosition="7868">a) it does not really fit the head-driven operation; (b) it cannot deal with really unbound empty categories (e.g. example (8)); (c) it handles left extraposition (e.g. (2)—(4)), but not right extraposition (e.g. sentence (5)). A movement is called left (or right) extraposition, if it moves an NP to the position left (or right) of its trace. To deal with right extraposition, ATN uses another mechanisim. In GB theory, both left extraposition and right extraposition move an NP to a position governing its trace; a null pronominal, if bound, is always bound to an NP governing the null pronominal (Chomsky 1981). So, the raise-bind mechanism combined with the check rules discussed here is sufficient to cope with all empty categories, left or right extrapositions, and traces or null pronominals, since its function is simply to raise up an empty category to be bound by an NP that governs this empty category. We believe that by means of the raise-bind mechanism it will not be difficult to implement some similar linguistic operators such as the slash concept of GPSG (Sells 1985). However, this present approach still has some constraints; for example, the check rules may take some computation cost, and mu</context>
</contexts>
<marker>Chomsky, 1981</marker>
<rawString>Chomsky, N. (1981). Lectures on Government and Binding. Dordrecht: Foris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Fillmore</author>
</authors>
<title>The case for case.&amp;quot;</title>
<date>1968</date>
<booktitle>In Universals in Linguistic Theory</booktitle>
<note>edited by Bach</note>
<contexts>
<context position="56845" citStr="Fillmore 1968" startWordPosition="9433" endWordPosition="9434"> category identification and causes exponential growth in the number of structures. It is, therefore, believed that an integrated syntactic and semantic analysis will eventually become an inevitable solution in the future. Because verbs are, ultimately, heads of sentences, appropriate classification of verbs may help in determining syntactic structure and, thus in grasping the semantic meaning of sentences. Although in most linguistic theories verbs are classified according to syntactic properties, and some linguistic theories, such as Lexical Functional Grammar (Sells 1985) and Case Grammar (Fillmore 1968), also provide mechanisms to explicitly represent functional or semantic role assignment of constituents, such work for the Chinese language is still relatively preliminary. Chao (1968) has only distinguished intransitive verbs from transitive verbs and Yang (1987) has made very encouraging initial efforts by classifying Chinese verbs according to 366 Lin-Shan Lee et al. Processing System for Chinese Language Figure 14 A table showing the edge reduction ratios for the 25 typical sentence examples listed in APPENDIX C and the average reduction ratios for all the 200 test sentences for the four </context>
</contexts>
<marker>Fillmore, 1968</marker>
<rawString>Fillmore, C. (1968). &amp;quot;The case for case.&amp;quot; In Universals in Linguistic Theory edited by Bach and Harms, Holt, Reinhart and Winston.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Gazdar</author>
<author>A Franz</author>
<author>K Osborne</author>
<author>R Evans</author>
</authors>
<title>Natural language processing in the 1980s.&amp;quot; CSLI,</title>
<date>1987</date>
<institution>Stanford University.</institution>
<contexts>
<context position="2719" citStr="Gazdar et al. 1987" startWordPosition="384" endWordPosition="387">rn languages such as English, and many powerful computational models and algorithms have been pro* Dept. of Electrical Engineering and Dept. of Computer Science and Information Engineering, National Taiwan University f Dept. of Computer Science and Information Engineering, National Taiwan University Dept. of Electrical Engineering, National Taiwan University § Dept. of Modern Linguistics, Cornell University, NJ Institute of Information Science, Academia Sinica, Taipei, Taiwan C) 1991 Association for Computational Linguistics Computational Linguistics Volume 17, Number 4 posed and widely used (Gazdar et al. 1987), very little work has been done with the Chinese language, which more than a quarter of the world&apos;s population use as a native language. This is probably due to the fact that the structure of the Chinese language is quite different from western languages like English and, therefore, the experience in processing western languages cannot necessarily be directly applied to the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also developed a Chinese natural language processing system w</context>
</contexts>
<marker>Gazdar, Franz, Osborne, Evans, 1987</marker>
<rawString>Gazdar, G., Franz, A., Osborne, K., and Evans, R. (1987). &amp;quot;Natural language processing in the 1980s.&amp;quot; CSLI, Stanford University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Gazdar</author>
</authors>
<title>Categorial structure.&amp;quot;</title>
<date>1988</date>
<journal>Computational Linguistics</journal>
<pages>14--1</pages>
<contexts>
<context position="59081" citStr="Gazdar 1988" startWordPosition="9807" endWordPosition="9808">ve the problem of serial verb construction. Recently, a new classification scheme for Chinese verbs has been developed (K.-J. Chen et al. 1988), in which current theories of feature-based categorization are adopted. This scheme is based on the results of analyzing 16,824 Chinese verbs, with careful consideration given to difficulties in parsing Chinese sentences. In the next stage of the present study, this verb classification will be employed, and much more syntactic and semantic information will be provided by the lexicon, especially for verbs, and represented as complex feature structures (Gazdar 1988). Furthermore, several other approaches will also be included in the next stage of the present study, such as the unification concept (Sheiber 1986), and the slot and filler principle (Hellwing 1988). In other words, although there is still a very long way to go before a really convenient and efficient natural language processing system for Chinese becomes available in the future, the present system apparently serves as a successful initial step on the way. 367 Computational Linguistics Volume 17, Number 4 Appendix A The phrase structure rules used in the experiments b S2 -4 S PRTAG b S .- NP </context>
</contexts>
<marker>Gazdar, 1988</marker>
<rawString>Gazdar, G. (1988). &amp;quot;Categorial structure.&amp;quot; Computational Linguistics 14:1-19.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Hellwing</author>
</authors>
<title>Chart parsing according to the slot and filler principle.&amp;quot;</title>
<date>1988</date>
<booktitle>In Proceedings, International Conference on Computational Linguistics,</booktitle>
<pages>242--244</pages>
<contexts>
<context position="59280" citStr="Hellwing 1988" startWordPosition="9838" endWordPosition="9840">ation are adopted. This scheme is based on the results of analyzing 16,824 Chinese verbs, with careful consideration given to difficulties in parsing Chinese sentences. In the next stage of the present study, this verb classification will be employed, and much more syntactic and semantic information will be provided by the lexicon, especially for verbs, and represented as complex feature structures (Gazdar 1988). Furthermore, several other approaches will also be included in the next stage of the present study, such as the unification concept (Sheiber 1986), and the slot and filler principle (Hellwing 1988). In other words, although there is still a very long way to go before a really convenient and efficient natural language processing system for Chinese becomes available in the future, the present system apparently serves as a successful initial step on the way. 367 Computational Linguistics Volume 17, Number 4 Appendix A The phrase structure rules used in the experiments b S2 -4 S PRTAG b S .- NP VP f S -&gt; VP f NP N f NP --* PLACE f NP -* TIME b NP --4 NP LOC f NP -4 LOC b NP --* PreN1 N b NP -- PreN2 N b NP PreN3 N f PreN2 -4 QP b PreN2 -4 XPDE QP b PreN1 -- XPDE ADJ b PreN1 -.- QP ADJ b Pre</context>
</contexts>
<marker>Hellwing, 1988</marker>
<rawString>Hellwing, P. (1988). &amp;quot;Chart parsing according to the slot and filler principle.&amp;quot; In Proceedings, International Conference on Computational Linguistics, 242-244.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W H Ho</author>
</authors>
<title>Automatic recognition of Chinese words.&amp;quot;</title>
<date>1984</date>
<tech>M.S. thesis,</tech>
<institution>National Taiwan Institute of Technology,</institution>
<location>Taipei.</location>
<contexts>
<context position="17682" citStr="Ho 1984" startWordPosition="2828" endWordPosition="2829">de clear later in this paper. The linguistic knowledge base can be broadly seen as a compilation of a four-tuple; i.e., the phrase structure rules (PSR), the FIRST and LAST parsing tables of these rules, the check rules, and the lexicon shared with the first part. If the sentence is grammatical in the sense of the grammar, a syntax tree will result as the output. Otherwise, failure will be reported. From now on, this paper will concentrate on the second part of the system, i.e., the parser and the linguistic knowledge base only, while the details of the first part can be found in other works (Ho 1984; Chen 1985). As far as the second part of the system is concerned, the input sentences are assumed to be segmented into words with categorial information and other features provided by the lexicon. The linguistic knowledge base used in this system, as mentioned above, can be broadly seen as a compilation of a four-tuple: the phrase structure grammar (PSRs), the FIRST and LAST parsing tables for these PSRs, the check rules, and a lexicon as shown in Figure 4. The PSRs describe how sentences are built up out of phrasal categories, and how phrases are built up out of lexical categories and/or ph</context>
</contexts>
<marker>Ho, 1984</marker>
<rawString>Ho, W. H. (1984). &amp;quot;Automatic recognition of Chinese words.&amp;quot; M.S. thesis, National Taiwan Institute of Technology, Taipei.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Huang</author>
</authors>
<title>Logical relations in Chinese and the theory of grammar.&amp;quot; Doctoral dissertation,</title>
<date>1982</date>
<institution>Massachusetts Institute of Technology,</institution>
<location>Cambridge, MA.</location>
<contexts>
<context position="4845" citStr="Huang 1982" startWordPosition="709" endWordPosition="710">ns 8 and 9 then present the improved design of the raise-bind mechanism to cope with the problem of movement transformation and empty categories. Some preliminary experimental results are discussed in Section 10, and concluding remarks and future research directions are finally given in Section 11. 2. The Head-Final/Head-Initial Structures of the Chinese Language The Chinese language has many special syntactic phenomena substantially different from western languages. Discussions about such characteristics of the Chinese language can be found in the literature (Chao 1968; Li and Thompson 1981; Huang 1982). In this paper only some of them that have significant influence on the present study will be briefly described. They are (1) head-final/head-initial structures and (2) empty categories of the Chinese language, to be respectively summarized in this and the following sections. The notion of the head of a phrase has a very long history, which stems from the traditional grammar and plays a central role in recent syntactic analysis frameworks such as GB and GPSG (Sells 1985). The basic idea is simply that each phrase contains a certain word that is especially important in the sense that it determ</context>
<context position="7686" citStr="Huang 1982" startWordPosition="1202" endWordPosition="1203">(ADJ)N I NP LSIC (5) XPDE --&gt;SPEINPDEIPPDE (6) VP --&gt; (AUX I ADV I PP I NP)* V-bax (7) V-bar QP I (NP) (NP I PP I VP I S S-bar) (8) PP --&gt; PREP NP Notations: Operators: I: Or Operaror, *:Repetition Operator, 0: Optional Operator, head Phrasal Categories: S=bar, S-bar, S. NP, XPDE: an Associative Phrase or a Relative/Appositive Clause, VP, V-bar, PP, Topic, QP: Classifier and Measure Phrase. Lexical Categories: PRTAG: Partical Tag, N, ADJ, ADV, AUX, LOC: Localizer, DE ( ) : Retativizer Figure 2 A list of some fundamental PSRs for the Chinese language used in the present study. theory of Huang (Huang 1982). Apparently, the head in each of the rules is located either at the initial position (head-initial) or at the final position (head-final). Such head-final/head-initial structures will be especially useful and helpful in the present study, as will be clear later in this paper. 349 Computational Linguistics Volume 17, Number 4 3. The Empty Categories of the Chinese Language In many languages the &amp;quot;empty category&amp;quot; is typically used to refer to an empty NP position that has been vacated by a transformation called &amp;quot;move a&amp;quot; (a transformational operation introduced in government binding theory (GB) t</context>
<context position="11639" citStr="Huang 1982" startWordPosition="1823" endWordPosition="1824">pivot construction: IA 41 /.1&amp;quot; Is he asked children go to dinner (He asked the children to go to dinner) 8. zero pronoun: Jang-san likes (Jang-san likes someone or something) Sentences (2)—(8) all involve a missing subject or object (indicated by &amp;quot;e&amp;quot;). The solid lines under sentences (2)—(7) indicate the references that each missing subject or object refers to. The missing object in sentence (8), however, does not refer to any element within the sentence. In fact, it is an omitted pronoun, which refers to someone or something understood in the situation. According to GB theory (Chornsky 1981; Huang 1982), sentence (2) is derived from sentence (1) by a transformation called &amp;quot;ba-transformation.&amp;quot; The word &amp;quot; (ba)&amp;quot; is a patient case marker. It indicates that the NP following it is the patient of the main verb in the sentence. The transformation is performed as follows: the object, &amp;quot; (Jangsan)&amp;quot; in in (1), is moved by the carrier &amp;quot;%E, (ba)&amp;quot; to the position indicated in (2), and a trace (indicated by &amp;quot;e&amp;quot;) is left behind. The trace dominates no lexical material, but is &amp;quot;bound&amp;quot; to its antecedent, &amp;quot; E (Jang-san).&amp;quot; This phenomenon appears very frequently in Chinese sentences. Similar situations occur in </context>
</contexts>
<marker>Huang, 1982</marker>
<rawString>Huang, J. (1982). &amp;quot;Logical relations in Chinese and the theory of grammar.&amp;quot; Doctoral dissertation, Massachusetts Institute of Technology, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jiang</author>
</authors>
<title>Chinese parsing: An initial exploration at LRC.&amp;quot;</title>
<date>1985</date>
<journal>Computer Processing of Chinese and Oriental Language</journal>
<volume>2</volume>
<issue>2</issue>
<pages>127--138</pages>
<contexts>
<context position="3127" citStr="Jiang (1985)" startWordPosition="451" endWordPosition="452">Institute of Information Science, Academia Sinica, Taipei, Taiwan C) 1991 Association for Computational Linguistics Computational Linguistics Volume 17, Number 4 posed and widely used (Gazdar et al. 1987), very little work has been done with the Chinese language, which more than a quarter of the world&apos;s population use as a native language. This is probably due to the fact that the structure of the Chinese language is quite different from western languages like English and, therefore, the experience in processing western languages cannot necessarily be directly applied to the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also developed a Chinese natural language processing system with special considerations on the phenomenon of empty categories in the Chinese language. Yang (1987) presented a method using semantic constraints to reduce ambiguity in Chinese sentence analysis. H. H. Chen et al. (1988) proposed a logic programming approach considering Chomsky&apos;s Goverment-Binding theory to cope with movement transformations in Mandarin Chinese. In the following, some special syntactic </context>
<context position="20561" citStr="Jiang 1985" startWordPosition="3274" endWordPosition="3275">ed by head constituents could be more promising) that often occur in a strictly 353 Computational Linguistics Volume 17, Number 4 FIRST and LAST Tables Check Rules Phrase Structure Rules Lexicon S=bar -&gt; S-bar PRTA -&gt; S PRTAG S-bar -&gt; Topic S Figure 4 The linguistic knowledge base. left-to-right parsing scheme. This will all become clearer later in this paper. Several approaches were further developed in the present parser described in this paper to better realize this concept, so that significant improvement as compared to some previous Chinese natural language processing systems (Yang 1987; Jiang 1985; H. H. Chen et al. 1988) can be observed. In the following sections, these approaches, including the direction-selective chart, the bidirectional look-ahead approach, the heuristic scheduling policy, and the raise-bind mechanism will be described in detail. Here, we first describe the direction-selective chart in this section. Before parsing is performed, any input word sequence has to be first represented by the direction-selective chart. Just like a conventional chart (Kay 1980; Winograd 1983), the direction-selective chart is an efficient data structure to record what has been done so far </context>
</contexts>
<marker>Jiang, 1985</marker>
<rawString>Jiang. (1985). &amp;quot;Chinese parsing: An initial exploration at LRC.&amp;quot; Computer Processing of Chinese and Oriental Language 2(2): 127-138.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kay</author>
</authors>
<title>Algorithm schemata and data structures in syntactic processing.&amp;quot;</title>
<date>1980</date>
<tech>Xerox Report CSL-80-12,</tech>
<location>Palo Alto, CA.</location>
<contexts>
<context position="21046" citStr="Kay 1980" startWordPosition="3345" endWordPosition="3346">hat significant improvement as compared to some previous Chinese natural language processing systems (Yang 1987; Jiang 1985; H. H. Chen et al. 1988) can be observed. In the following sections, these approaches, including the direction-selective chart, the bidirectional look-ahead approach, the heuristic scheduling policy, and the raise-bind mechanism will be described in detail. Here, we first describe the direction-selective chart in this section. Before parsing is performed, any input word sequence has to be first represented by the direction-selective chart. Just like a conventional chart (Kay 1980; Winograd 1983), the direction-selective chart is an efficient data structure to record what has been done so far in the course of parsing to avoid duplicate computation. The special feature of the direction-selective chart is that the active edges (the incomplete constituents that need other complete constituents to their left or right to compose larger ones) are further partitioned into two disjoint groups: forward-active (F-active) and backwardactive (B-active) edges to indicate different search directions as described below. In the head-driven parser, the parsing process will begin on the</context>
<context position="32397" citStr="Kay 1980" startWordPosition="5267" endWordPosition="5268">ch step in the parsing process can very often produce more than one subsequent steps. For example, a new edge built into a chart may cause an arbitrary number of edges (candidate constituents) to be built. Usually, in such situations some of them V-bar // NP ADV 3Z. again N belongs to FIRST(NP) 358 Lin-Shan Lee et al. Processing System for Chinese Language should be processed prior to the others instead of simply performing exhaustive processing. In other words, a well defined scheduling policy is, in fact, helpful. This is why most of the chart parsers have an agenda to schedule these steps (Kay 1980). In the present system, a heuristic scheduling policy is also developed, as described in this section. In the present system the scheduling policy is primarily based on some heuristic estimation obtained from empirical experiences, in which each candidate constituent is assigned a priority to indicate processing order. Most of the time, the assignment is described by its category. For example, a constituent with an S category will be constructed prior to a constituent with a VP category (some unnecessary VP constituents may be therefore eliminated, for example), a constituent with a VP catego</context>
</contexts>
<marker>Kay, 1980</marker>
<rawString>Kay, M. (1980). &amp;quot;Algorithm schemata and data structures in syntactic processing.&amp;quot; Xerox Report CSL-80-12, Palo Alto, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C N Li</author>
<author>S A Thompson</author>
</authors>
<title>Mandarin Chinese.</title>
<date>1981</date>
<publisher>University of California Press.</publisher>
<contexts>
<context position="4832" citStr="Li and Thompson 1981" startWordPosition="705" endWordPosition="708">, respectively. Sections 8 and 9 then present the improved design of the raise-bind mechanism to cope with the problem of movement transformation and empty categories. Some preliminary experimental results are discussed in Section 10, and concluding remarks and future research directions are finally given in Section 11. 2. The Head-Final/Head-Initial Structures of the Chinese Language The Chinese language has many special syntactic phenomena substantially different from western languages. Discussions about such characteristics of the Chinese language can be found in the literature (Chao 1968; Li and Thompson 1981; Huang 1982). In this paper only some of them that have significant influence on the present study will be briefly described. They are (1) head-final/head-initial structures and (2) empty categories of the Chinese language, to be respectively summarized in this and the following sections. The notion of the head of a phrase has a very long history, which stems from the traditional grammar and plays a central role in recent syntactic analysis frameworks such as GB and GPSG (Sells 1985). The basic idea is simply that each phrase contains a certain word that is especially important in the sense t</context>
</contexts>
<marker>Li, Thompson, 1981</marker>
<rawString>Li, C. N., and Thompson, S. A. (1981). Mandarin Chinese. University of California Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L J Lin</author>
</authors>
<title>A syntactic analysis system for Chinese sentences.&amp;quot;</title>
<date>1985</date>
<tech>M.S. thesis,</tech>
<institution>National Taiwan University,</institution>
<location>Taipei, Taiwan.</location>
<contexts>
<context position="3227" citStr="Lin (1985)" startWordPosition="466" endWordPosition="467">l Linguistics Computational Linguistics Volume 17, Number 4 posed and widely used (Gazdar et al. 1987), very little work has been done with the Chinese language, which more than a quarter of the world&apos;s population use as a native language. This is probably due to the fact that the structure of the Chinese language is quite different from western languages like English and, therefore, the experience in processing western languages cannot necessarily be directly applied to the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also developed a Chinese natural language processing system with special considerations on the phenomenon of empty categories in the Chinese language. Yang (1987) presented a method using semantic constraints to reduce ambiguity in Chinese sentence analysis. H. H. Chen et al. (1988) proposed a logic programming approach considering Chomsky&apos;s Goverment-Binding theory to cope with movement transformations in Mandarin Chinese. In the following, some special syntactic phenomena of the Chinese language that significantly affect the design of the present system are fir</context>
</contexts>
<marker>Lin, 1985</marker>
<rawString>Lin, L. J. (1985). &amp;quot;A syntactic analysis system for Chinese sentences.&amp;quot; M.S. thesis, National Taiwan University, Taipei, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L-J Lin</author>
<author>J Huang</author>
<author>K-J Chen</author>
<author>L-S Lee</author>
</authors>
<title>SASC: A syntactic analysis system for Chinese sentences.&amp;quot;</title>
<date>1986</date>
<booktitle>In Proceedings, International Conference on Chinese Computing. Singapore.</booktitle>
<contexts>
<context position="3248" citStr="Lin et al. (1986" startWordPosition="469" endWordPosition="472">omputational Linguistics Volume 17, Number 4 posed and widely used (Gazdar et al. 1987), very little work has been done with the Chinese language, which more than a quarter of the world&apos;s population use as a native language. This is probably due to the fact that the structure of the Chinese language is quite different from western languages like English and, therefore, the experience in processing western languages cannot necessarily be directly applied to the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also developed a Chinese natural language processing system with special considerations on the phenomenon of empty categories in the Chinese language. Yang (1987) presented a method using semantic constraints to reduce ambiguity in Chinese sentence analysis. H. H. Chen et al. (1988) proposed a logic programming approach considering Chomsky&apos;s Goverment-Binding theory to cope with movement transformations in Mandarin Chinese. In the following, some special syntactic phenomena of the Chinese language that significantly affect the design of the present system are first summarized in Sect</context>
</contexts>
<marker>Lin, Huang, Chen, Lee, 1986</marker>
<rawString>Lin, L.-J.; Huang, J.; Chen, K.-J.; and Lee, L.-S. (1986). &amp;quot;SASC: A syntactic analysis system for Chinese sentences.&amp;quot; In Proceedings, International Conference on Chinese Computing. Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L-J Lin</author>
<author>K-J Chen</author>
<author>J Huang</author>
<author>L-S Lee</author>
</authors>
<title>A Chinese natural language processing system based upon the theory of empty categories.&amp;quot;</title>
<date>1986</date>
<booktitle>In Proceedings, Fifth National Conference on Artificial Intelligence (AAAI).</booktitle>
<location>Philadelphia, PA.</location>
<contexts>
<context position="3248" citStr="Lin et al. (1986" startWordPosition="469" endWordPosition="472">omputational Linguistics Volume 17, Number 4 posed and widely used (Gazdar et al. 1987), very little work has been done with the Chinese language, which more than a quarter of the world&apos;s population use as a native language. This is probably due to the fact that the structure of the Chinese language is quite different from western languages like English and, therefore, the experience in processing western languages cannot necessarily be directly applied to the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also developed a Chinese natural language processing system with special considerations on the phenomenon of empty categories in the Chinese language. Yang (1987) presented a method using semantic constraints to reduce ambiguity in Chinese sentence analysis. H. H. Chen et al. (1988) proposed a logic programming approach considering Chomsky&apos;s Goverment-Binding theory to cope with movement transformations in Mandarin Chinese. In the following, some special syntactic phenomena of the Chinese language that significantly affect the design of the present system are first summarized in Sect</context>
</contexts>
<marker>Lin, Chen, Huang, Lee, 1986</marker>
<rawString>Lin, L.-J.; Chen, K.-J.; Huang, J.; Lee, L.-S. (1986). &amp;quot;A Chinese natural language processing system based upon the theory of empty categories.&amp;quot; In Proceedings, Fifth National Conference on Artificial Intelligence (AAAI). Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M P Marcus</author>
</authors>
<title>A Theory of Syntactic Recognition for Natural Language.</title>
<date>1982</date>
<publisher>The MIT Press.</publisher>
<location>Cambridge, MA:</location>
<marker>Marcus, 1982</marker>
<rawString>Marcus, M. P. (1982). A Theory of Syntactic Recognition for Natural Language. Cambridge, MA: The MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Pareschi</author>
<author>M Steedman</author>
</authors>
<title>A lazy way to chart-parse with categorial grammars.&amp;quot;</title>
<date>1987</date>
<booktitle>In Proceedings, 25th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="24117" citStr="Pareschi and Steedman (1987)" startWordPosition="3840" endWordPosition="3843">t it needs a right neighboring complete constituent with Y category to form an X constituent; a label with a form X \ \ Y indicates that it needs a left neighboring complete constituent with Y category to form an X constituent. To compare with a similar approach, in Stock&apos;s island-driven bidirectional chart (Stock et al. 1988), the searching actions are triggered by islands (an island is a more reliable word hypothesis resulting from speech recognition) and the searching directions may be bidirectional; i.e., an active edge may search for constituents on both sides as shown in Figure 6. Also, Pareschi and Steedman (1987) had proposed another similar bidirectional chart parsing algorithm to handle operations such as functional composition for categorial grammars applications (Steedman 1985). However, in our parser, the actions triggered by the heads have directions either strictly forward or strictly backward, obviously resulting from the head-final/head-initial phenomena of the Chinese language. This makes the control of our parser much simpler and more efficient in the present problem. 6. The Bidirectional Look-Ahead Approach Since Chinese is believed to be a syntactically ambiguous language with relatively </context>
</contexts>
<marker>Pareschi, Steedman, 1987</marker>
<rawString>Pareschi R., and Steedman, M. (1987). &amp;quot;A lazy way to chart-parse with categorial grammars.&amp;quot; In Proceedings, 25th Annual Meeting of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Radford</author>
</authors>
<title>Transformational Syntax: A Student&apos;s Guide to Chomsky&apos;s Extended Standard Theory. Cambridge, U.K.:</title>
<date>1981</date>
<publisher>Cambridge University Press.</publisher>
<contexts>
<context position="44891" citStr="Radford 1981" startWordPosition="7457" endWordPosition="7458">ect position or embedded object position (as in example (10)), set the empty NP to be bound to the head noun; • if two empty NPs are raised up from both the subject and object positions (as in example (11)), employ semantic analysis to determine the proper binding (the present system is syntactically-based therefore such semantic analysis will be considered in the next phase research). Like relativization, topicalization is also a long-distance movement and can be further improved in a similar way. Another syntactic phenomena crucial to the parser is known as the complex NP Constraint (CNPC) (Radford 1981); i.e., no transformation rule can move any element out of a complex NP, where a complex NP (CNP) is an NP containing a relative clause. This CNPC can be easily encoded in the grammar in the present approach by a simple rule; i.e., no empty NPs can be raised up across a CNP node. Hence, it is impossible for the empty NP within a CNP to be bound to any element out of that CNP. In most cases, ba-transformation and passivization move the direct objects of verbs. But the phenomenon known as &amp;quot;subject-to-object raising&amp;quot; (Radford 1981) has some differences. In such a case, the subject of an embedded </context>
</contexts>
<marker>Radford, 1981</marker>
<rawString>Radford, A. (1981). Transformational Syntax: A Student&apos;s Guide to Chomsky&apos;s Extended Standard Theory. Cambridge, U.K.: Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Sells</author>
</authors>
<title>Lecture on contemporary syntactic theories: An introduction to government-binding theory, generalized phrase structure grammar, and lexical-functional grammar.&amp;quot;</title>
<date>1985</date>
<publisher>CSLI.</publisher>
<contexts>
<context position="5321" citStr="Sells 1985" startWordPosition="787" endWordPosition="788">ussions about such characteristics of the Chinese language can be found in the literature (Chao 1968; Li and Thompson 1981; Huang 1982). In this paper only some of them that have significant influence on the present study will be briefly described. They are (1) head-final/head-initial structures and (2) empty categories of the Chinese language, to be respectively summarized in this and the following sections. The notion of the head of a phrase has a very long history, which stems from the traditional grammar and plays a central role in recent syntactic analysis frameworks such as GB and GPSG (Sells 1985). The basic idea is simply that each phrase contains a certain word that is especially important in the sense that it determines many of the syntactic properties of the entire phrase; this word is called the head of the phrase. Most Chinese phrases and sentences are head-final, e.g., head nouns in NPs are always located at the final position. For instance, some NPs (examples 1, 2, and 3) listed in Figure 1 demonstrate this situation, where the underlines indicate the heads. Comparing these Chinese phrases with their corresponding phrases in English (shown below each Chinese phrase in parenthes</context>
<context position="47750" citStr="Sells 1985" startWordPosition="7948" endWordPosition="7949">an NP to a position governing its trace; a null pronominal, if bound, is always bound to an NP governing the null pronominal (Chomsky 1981). So, the raise-bind mechanism combined with the check rules discussed here is sufficient to cope with all empty categories, left or right extrapositions, and traces or null pronominals, since its function is simply to raise up an empty category to be bound by an NP that governs this empty category. We believe that by means of the raise-bind mechanism it will not be difficult to implement some similar linguistic operators such as the slash concept of GPSG (Sells 1985). However, this present approach still has some constraints; for example, the check rules may take some computation cost, and multiple binding may occur if some of the check rules are not consistent in some situations. 10. Preliminary Experimental Results In order to see how the present approaches work as compared to conventional approaches in parsing Chinese sentences, an experimental system was implemented and extensive experiments have been performed. The system is written in C language and performed on an IBM PC/AT. A total of 47 phrase structure rules were used, in which 19 rules are back</context>
<context position="56812" citStr="Sells 1985" startWordPosition="9428" endWordPosition="9429">ves multiple solutions in word category identification and causes exponential growth in the number of structures. It is, therefore, believed that an integrated syntactic and semantic analysis will eventually become an inevitable solution in the future. Because verbs are, ultimately, heads of sentences, appropriate classification of verbs may help in determining syntactic structure and, thus in grasping the semantic meaning of sentences. Although in most linguistic theories verbs are classified according to syntactic properties, and some linguistic theories, such as Lexical Functional Grammar (Sells 1985) and Case Grammar (Fillmore 1968), also provide mechanisms to explicitly represent functional or semantic role assignment of constituents, such work for the Chinese language is still relatively preliminary. Chao (1968) has only distinguished intransitive verbs from transitive verbs and Yang (1987) has made very encouraging initial efforts by classifying Chinese verbs according to 366 Lin-Shan Lee et al. Processing System for Chinese Language Figure 14 A table showing the edge reduction ratios for the 25 typical sentence examples listed in APPENDIX C and the average reduction ratios for all the</context>
</contexts>
<marker>Sells, 1985</marker>
<rawString>Sells, P. (1985). &amp;quot;Lecture on contemporary syntactic theories: An introduction to government-binding theory, generalized phrase structure grammar, and lexical-functional grammar.&amp;quot; CSLI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S M Sheiber</author>
</authors>
<title>An Introduction to Unification-Based Approaches to Grammar. Chicago:</title>
<date>1986</date>
<publisher>University of Chicago Press.</publisher>
<contexts>
<context position="59229" citStr="Sheiber 1986" startWordPosition="9830" endWordPosition="9831"> which current theories of feature-based categorization are adopted. This scheme is based on the results of analyzing 16,824 Chinese verbs, with careful consideration given to difficulties in parsing Chinese sentences. In the next stage of the present study, this verb classification will be employed, and much more syntactic and semantic information will be provided by the lexicon, especially for verbs, and represented as complex feature structures (Gazdar 1988). Furthermore, several other approaches will also be included in the next stage of the present study, such as the unification concept (Sheiber 1986), and the slot and filler principle (Hellwing 1988). In other words, although there is still a very long way to go before a really convenient and efficient natural language processing system for Chinese becomes available in the future, the present system apparently serves as a successful initial step on the way. 367 Computational Linguistics Volume 17, Number 4 Appendix A The phrase structure rules used in the experiments b S2 -4 S PRTAG b S .- NP VP f S -&gt; VP f NP N f NP --* PLACE f NP -* TIME b NP --4 NP LOC f NP -4 LOC b NP --* PreN1 N b NP -- PreN2 N b NP PreN3 N f PreN2 -4 QP b PreN2 -4 X</context>
</contexts>
<marker>Sheiber, 1986</marker>
<rawString>Sheiber, S. M. (1986). An Introduction to Unification-Based Approaches to Grammar. Chicago: University of Chicago Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Steedman</author>
</authors>
<title>Dependency and coordination in the grammar of Dutch and English.&amp;quot;</title>
<date>1985</date>
<journal>Language.</journal>
<volume>61</volume>
<pages>523--568</pages>
<contexts>
<context position="24289" citStr="Steedman 1985" startWordPosition="3863" endWordPosition="3864">with Y category to form an X constituent. To compare with a similar approach, in Stock&apos;s island-driven bidirectional chart (Stock et al. 1988), the searching actions are triggered by islands (an island is a more reliable word hypothesis resulting from speech recognition) and the searching directions may be bidirectional; i.e., an active edge may search for constituents on both sides as shown in Figure 6. Also, Pareschi and Steedman (1987) had proposed another similar bidirectional chart parsing algorithm to handle operations such as functional composition for categorial grammars applications (Steedman 1985). However, in our parser, the actions triggered by the heads have directions either strictly forward or strictly backward, obviously resulting from the head-final/head-initial phenomena of the Chinese language. This makes the control of our parser much simpler and more efficient in the present problem. 6. The Bidirectional Look-Ahead Approach Since Chinese is believed to be a syntactically ambiguous language with relatively free word order, many complicated syntactic phenomena derived from such situation will thus make it difficult for a parser to work on Chinese sentences deterministically, a</context>
</contexts>
<marker>Steedman, 1985</marker>
<rawString>Steedman, M. (1985). &amp;quot;Dependency and coordination in the grammar of Dutch and English.&amp;quot; Language. 61, 523-568.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Falcone</author>
<author>P Insinnamo</author>
</authors>
<title>Island parsing and bidirectional charts.&amp;quot;</title>
<date>1988</date>
<booktitle>In Proceedings, International Conference on Computational Linguistics.</booktitle>
<marker>Falcone, Insinnamo, 1988</marker>
<rawString>Stock, 0., Falcone, R., and Insinnamo, P. (1988). &amp;quot;Island parsing and bidirectional charts.&amp;quot; In Proceedings, International Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Tomita</author>
</authors>
<title>Efficient Parsing for Natural Language: A Fast Algorithm for Practical Systems.</title>
<date>1986</date>
<publisher>Kluwer.</publisher>
<location>Boston:</location>
<contexts>
<context position="31525" citStr="Tomita 1986" startWordPosition="5120" endWordPosition="5121">b, a B-active edge NP XPDE is triggered by the final head &amp;quot; 4\ TA (children).&amp;quot; This indicates that a left neighboring XPDE constituent is needed to form a complete NP constituent. However, in this case the left neighboring word &amp;quot;IT (hit)&amp;quot; doesn&apos;t have a category belonging to LAST(XPDE); therefore, the edge will not be built, because it is apparently redundant. In this way, the bidirectional look-ahead approach can, in fact, eliminate many unnecessary searching actions (or active edges) and make the parsing process more efficient. A similar approach can be found in Tomita&apos;s extended LR parser (Tomita 1986), in which the parsing table used is an extended LR parsing table, and the parsing process performed is strictly left-to-right, as compared to the two different parsing tables and two parsing directions in the present system. 7. The Heuristic Scheduling Policy Each step in the parsing process can very often produce more than one subsequent steps. For example, a new edge built into a chart may cause an arbitrary number of edges (candidate constituents) to be built. Usually, in such situations some of them V-bar // NP ADV 3Z. again N belongs to FIRST(NP) 358 Lin-Shan Lee et al. Processing System</context>
</contexts>
<marker>Tomita, 1986</marker>
<rawString>Tomita, M. (1986). Efficient Parsing for Natural Language: A Fast Algorithm for Practical Systems. Boston: Kluwer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Wehrli</author>
</authors>
<title>Parsing with a GB-grammar.&amp;quot; In Natural Language Parsing and Linguistic Theories, edited by U. Reyle</title>
<date>1988</date>
<pages>177--201</pages>
<location>Dordrecht, Boston:</location>
<note>D. Reidel, distributed by Kluwer,</note>
<contexts>
<context position="39987" citStr="Wehrli 1988" startWordPosition="6588" endWordPosition="6589">e subject position of the embedded clauses (just as in sentence (7) in Section 3; a further example will be given below). Apparently, check rules for other linguistic phenomena such as topicalization, ba-transformation, and so on can all be similarly developed. In fact, the binding process in the raise-bind mechanism here is rule-based rather than principle-based; that is, the whole binding process in the raisebind mechanism is determined by the check rules and the phrase structure rules, while instead in some other principle-based parsers, for example, a parser completely based on GB theory (Wehrli 1988), it is influenced by some linguistic principles; e.g. the government binding principle in GB theory. However, the rule-based approaches may take some more cost in computation than the principle-based approaches, but in dealing with some specific problems the former approaches seem more flexible than the latter approaches. This is why in sentence (7) (pivot construction) the empty category in the subject position of the embedded clause can be bound to the NP &amp;quot;&apos;1&amp;quot; ig (children)&amp;quot; in the higher clause, even if it is not governed by the NP. To illustrate the operation of the above check rules, let</context>
</contexts>
<marker>Wehrli, 1988</marker>
<rawString>Wehrli, E. (1988). &amp;quot;Parsing with a GB-grammar.&amp;quot; In Natural Language Parsing and Linguistic Theories, edited by U. Reyle and C. Rohrer, Dordrecht, Boston: D. Reidel, distributed by Kluwer, 177-201.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Winograd</author>
</authors>
<title>Language as a Cognitive Process.</title>
<date>1983</date>
<volume>1</volume>
<publisher>Addison-Wesley.</publisher>
<location>Reading, MA:</location>
<contexts>
<context position="21062" citStr="Winograd 1983" startWordPosition="3347" endWordPosition="3348">icant improvement as compared to some previous Chinese natural language processing systems (Yang 1987; Jiang 1985; H. H. Chen et al. 1988) can be observed. In the following sections, these approaches, including the direction-selective chart, the bidirectional look-ahead approach, the heuristic scheduling policy, and the raise-bind mechanism will be described in detail. Here, we first describe the direction-selective chart in this section. Before parsing is performed, any input word sequence has to be first represented by the direction-selective chart. Just like a conventional chart (Kay 1980; Winograd 1983), the direction-selective chart is an efficient data structure to record what has been done so far in the course of parsing to avoid duplicate computation. The special feature of the direction-selective chart is that the active edges (the incomplete constituents that need other complete constituents to their left or right to compose larger ones) are further partitioned into two disjoint groups: forward-active (F-active) and backwardactive (B-active) edges to indicate different search directions as described below. In the head-driven parser, the parsing process will begin on the heads in the in</context>
</contexts>
<marker>Winograd, 1983</marker>
<rawString>Winograd, T. (1983). Language as a Cognitive Process. Vol. 1: Syntax. Reading, MA: Addison-Wesley.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Woods</author>
</authors>
<title>Transition network grammar for natural language analysis.&amp;quot;</title>
<date>1970</date>
<journal>CACM</journal>
<volume>13</volume>
<issue>10</issue>
<pages>591--606</pages>
<contexts>
<context position="18423" citStr="Woods 1970" startWordPosition="2951" endWordPosition="2952">h categorial information and other features provided by the lexicon. The linguistic knowledge base used in this system, as mentioned above, can be broadly seen as a compilation of a four-tuple: the phrase structure grammar (PSRs), the FIRST and LAST parsing tables for these PSRs, the check rules, and a lexicon as shown in Figure 4. The PSRs describe how sentences are built up out of phrasal categories, and how phrases are built up out of lexical categories and/or phrasal categories. All of these PSRs combined with some syntactic and semantic constraints are implemented as an ATN-like network (Woods 1970). For each probable phrasal category (constituent), the FIRST and LAST parsing tables indicate all possible lexical categories that may begin or end with the present phrasal category to guide the parser to eliminate some unnecessary searching actions in parsing, as will be described in detail in Section 6. The check rules are used in the raise-bind mechanism to handle the binding problems of empty categories and to reject illegal sentences or parsing trees, as will be described in detail in Sections 8 and 9. The lexicon is a Chinese machine dictionary, in which the allomorphs are stored togeth</context>
</contexts>
<marker>Woods, 1970</marker>
<rawString>Woods, W. (1970). &amp;quot;Transition network grammar for natural language analysis.&amp;quot; CACM 13(10), 591-606.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Yang</author>
</authors>
<title>Semantic analysis in Chinese sentence analysis.&amp;quot;</title>
<date>1987</date>
<booktitle>In Proceedings, International Joint Conference on Artificial Intelligence (AAAI).</booktitle>
<location>Milano, Italy.</location>
<contexts>
<context position="3420" citStr="Yang (1987)" startWordPosition="495" endWordPosition="496">he world&apos;s population use as a native language. This is probably due to the fact that the structure of the Chinese language is quite different from western languages like English and, therefore, the experience in processing western languages cannot necessarily be directly applied to the Chinese language. Jiang (1985) proposed a preliminary Chinese parsing prototype system based on the METAL system, while Lin (1985) and Lin et al. (1986a, 1986b) also developed a Chinese natural language processing system with special considerations on the phenomenon of empty categories in the Chinese language. Yang (1987) presented a method using semantic constraints to reduce ambiguity in Chinese sentence analysis. H. H. Chen et al. (1988) proposed a logic programming approach considering Chomsky&apos;s Goverment-Binding theory to cope with movement transformations in Mandarin Chinese. In the following, some special syntactic phenomena of the Chinese language that significantly affect the design of the present system are first summarized in Sections 2 and 3, and a brief description of the present system and the structure of the linguistic knowledge base is then given in Section 4. The several new approaches, inclu</context>
<context position="20549" citStr="Yang 1987" startWordPosition="3272" endWordPosition="3273">actions fired by head constituents could be more promising) that often occur in a strictly 353 Computational Linguistics Volume 17, Number 4 FIRST and LAST Tables Check Rules Phrase Structure Rules Lexicon S=bar -&gt; S-bar PRTA -&gt; S PRTAG S-bar -&gt; Topic S Figure 4 The linguistic knowledge base. left-to-right parsing scheme. This will all become clearer later in this paper. Several approaches were further developed in the present parser described in this paper to better realize this concept, so that significant improvement as compared to some previous Chinese natural language processing systems (Yang 1987; Jiang 1985; H. H. Chen et al. 1988) can be observed. In the following sections, these approaches, including the direction-selective chart, the bidirectional look-ahead approach, the heuristic scheduling policy, and the raise-bind mechanism will be described in detail. Here, we first describe the direction-selective chart in this section. Before parsing is performed, any input word sequence has to be first represented by the direction-selective chart. Just like a conventional chart (Kay 1980; Winograd 1983), the direction-selective chart is an efficient data structure to record what has been </context>
<context position="57110" citStr="Yang (1987)" startWordPosition="9469" endWordPosition="9470">nces, appropriate classification of verbs may help in determining syntactic structure and, thus in grasping the semantic meaning of sentences. Although in most linguistic theories verbs are classified according to syntactic properties, and some linguistic theories, such as Lexical Functional Grammar (Sells 1985) and Case Grammar (Fillmore 1968), also provide mechanisms to explicitly represent functional or semantic role assignment of constituents, such work for the Chinese language is still relatively preliminary. Chao (1968) has only distinguished intransitive verbs from transitive verbs and Yang (1987) has made very encouraging initial efforts by classifying Chinese verbs according to 366 Lin-Shan Lee et al. Processing System for Chinese Language Figure 14 A table showing the edge reduction ratios for the 25 typical sentence examples listed in APPENDIX C and the average reduction ratios for all the 200 test sentences for the four tests campared to Test I. Test Edge Reduction Ratios Sentene Test I Test II Test III Test IV 1 1.000 0.725 0.809 0.675 z 1.000 0.757 0.718 0.598 .3 1.000 0.794 0.815 0.679 -. 4 1.000 0.764 0.711 0.583 0.664 5 1.000 0.736 0.808 6 1.000 0.806 0.788 0.717 -. / 1.000 0</context>
</contexts>
<marker>Yang, 1987</marker>
<rawString>Yang, Y. (1987). &amp;quot;Semantic analysis in Chinese sentence analysis.&amp;quot; In Proceedings, International Joint Conference on Artificial Intelligence (AAAI). Milano, Italy.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>