<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.063553">
<title confidence="0.958061">
TECHDOC: Multilingual generation of
online and offline instructional text
</title>
<note confidence="0.595351">
Dietmar Rosner
FAW Ulm
P.O. Box 2060, 89010 Ulm, Germany
</note>
<email confidence="0.953956">
roesner@faw.uni-ulm.de
</email>
<author confidence="0.664098">
Manfred Stede
</author>
<affiliation confidence="0.667614">
(University of Toronto and) FAW Ulm
</affiliation>
<address confidence="0.544074">
P.O. Box 2060, 89010 Ulm, Germany
</address>
<email confidence="0.863642">
stede@faw.uni-ulm.de
</email>
<subsectionHeader confidence="0.814851">
Project idea
</subsectionHeader>
<bodyText confidence="0.99969256">
Supplying technical documentation accompanying a
product in multiple languages is a growing prob-
lem, particularly in Europe with its legislation on
the common market. A huge amount of translation
work needs to be done when creating and updat-
ing technical documentation. In response to these
needs, the TECHDOC project aims at supporting
the creation and maintenance of technical documen-
tation by knowledge-based, multilingual generation.
The idea is to build up a knowledge base that in-
cludes a model of the product in question, and to
produce documentation in multiple languages auto-
matically. At present, the system produces mainte-
nance instructions in English, German, and French.
The application domain of TECHDOC is techni-
cal manuals, where one has to do with &amp;quot;real-world&amp;quot;
texts: the domain is practical instead of a &amp;quot;toy
world&amp;quot;. At the same time, the language that is used
in such manuals tends to be relatively simple; one
mostly finds straightforward instructions that have
been written with the intention to produce text that
can be readily understood by a person who is ex-
ecuting some maintenance activity. Moreover, the
structure of manual sections is largely uniform and
amenable to formalization.
</bodyText>
<subsectionHeader confidence="0.991681">
System architecture
</subsectionHeader>
<bodyText confidence="0.999904772727273">
The system is based on a KB encoding knowledge
about the technical domain and about schematic
text structure in LOOM, a KL-ONE dialect (LOOM
1991). A typical manual section first describes the
location of the object to be repaired/maintained and
then lists possible replacement parts/substances;
next, the activities are described, which fall into
the three general categories of checking some at-
tribute (e.g., a fluid level), adding a substance and
replacing a part/substance. These actions are repre-
sented as plans in the traditional Al sense, i.e. with
pre- and postconditions, and with recursive struc-
ture (steps can be elaborated through complete re-
finement plans). We call the schematic ordering of
a manual section its macrostructure.
For a language-independent text representation, a
level was sought that captures the commonalities of
the correponding sections of the German, English
and French texts, i.e. that is not tailored towards one
of the specific languages. Rhetorical Structure The-
ory (RST) (Mann and Thompson 1987) turned out
to be a useful formalism: for almost every section we
investigated in our extensive corpus studies of mul-
tilingual manuals, the RST analyses for the different
language versions were identical. The system imple-
ments this finding by mapping the schematic plan
structure to a tree that captures the microstructure
of documents by means of rhetorical relations hold-
ing among elementary propositions or sub-trees, and
a number of specific annotations. See (Rosner and
Stede 1992) for details.
This document representation is successively
transformed into a sequence of sentence plans (to-
gether with formatting instructions in a selectable
target format; SGML, J4TEX, Zmacs and — for screen
output — formatted ASCII are currently supported),
which are handed over to sentence generators. For
English, we use Penman (Penman 1991) and it s
sentence planning language (SPL) as input terms.
To produce German text, we have implemented
a (partial) German version of Penman&apos;s grammar
(NIGEL), which is enhanced by a morphology mod-
ule, and a fragment of a French grammar in the same
style.
</bodyText>
<sectionHeader confidence="0.841471" genericHeader="abstract">
Interactive, multimodal instructions
</sectionHeader>
<bodyText confidence="0.999893357142857">
The interactive variant of the system, TECHDOC-I
(Peter and Rosner 1994), produces instructions on-
line, by engaging in a dialog with the user. On
the basis of initial questions, users are assigned to
a stereotypical class (ranging from &apos;novice&apos; to &apos;ex-
pert&apos;), which subsequently influences the degree of
detail in which instructions are produced.
The generated texts on the screen are mouse-
sensitive, so that the user can click on words or
phrases (in any of the languages displayed) and re-
quest additional information. Depending on the unit
selected, a menu offers a range of applicable items
for further inquiries. For example, the location of
an object referred to in the text can be clarified by
</bodyText>
<page confidence="0.99413">
209
</page>
<bodyText confidence="0.999933583333333">
an image in which that part is highlighted. Or, if an
action is selected, the system offers to show a short
video sequence on the screen, which illustrates how
that action is to be performed.
In essence, these facilities have paved the way to
move from static, inactive strings as output to an ac-
tive and dynamic interface for the associated knowl-
edge sources and their various presentation modal-
ities. The key is that all kinds of information (lex-
ernes in various languages, images and object&apos;s lo-
cation therein, and video sequences) are associated
with the underlying KB objects.
</bodyText>
<subsectionHeader confidence="0.930543">
Document authoring support
</subsectionHeader>
<bodyText confidence="0.998230061538461">
Apart from supporting the end user with an inter-
active system, the system is now being enhanced on
the &amp;quot;opposite end&amp;quot;, where the input to the docu-
ment generation process is created. A first version
of an authoring tool has been designed and imple-
mented and tested with a number of users. This tool
allows to interactively build up knowledge base in-
stances of maintenance plans, including the actions
and objects involved, and to convert them imme-
diately into multilingual documents. The process
is menu-driven, and the available options are deter-
mined dynamically in accordance with the current
state of the knowledge base — in other words, the
knowledge already encoded in the KB constrains the
range of possible instances that are to be built with
the authoring tool.
Portable KB: the &amp;quot;middle model&amp;quot;
Our KB design focuses on the targets that the rep-
resentations can be used for more than language
generation (tutoring, diagnosis systems, etc.) and
that they should be portable across different techni-
cal domains. We have collected recurring knowledge
about various technical devices like types of connec-
tions, about switches, about objects that turn up in
a variety of designs and functions, for example fluid
tanks, etc., in a middle model that can be carried, to-
gether with the basic ontology (the so-called &apos;upper
model&apos; (Bateman 1990)), from one technical domain
to the next. As the first practical domain extension,
we moved from automobile manuals to several sec-
tions of aircraft maintenance instructions, where the
model of the specific objects and devices was sub-
sumed under the middle model, in the place where
the automobile model previously resided.
The middle model is a set of quite abstract con-
cepts; separating lexical from conceptual informa-
tion allows us to account for lexical differences be-
tween the languages; in our corpus studies of au-
tomobile manuals, we found, for instance, that En-
glish often uses the general remove where German
verbs characterize the physical action more specif-
ically (abziehen, abnehmen, herausschrauben, her-
ausziehen, etc.). Our lexicalization procedure cap-
tures these language-specific differences by exploring
subsumption (see (Stede 1993)); the important point
to note here is that such lexical matters are indepen-
dent of the &amp;quot;conceptual kernel&amp;quot;, which is represented
in a language-independent way and allows for shar-
ing as much information as possible.
Perspective: From research prototype to
practical usage
TECHDOC is being developed into two complemen-
tary directions: toward online, interactive instruc-
tion dialog on the one hand, and toward production
of fully formatted paper documents on the other.
Each is suitable for its particular purposes; both are
important. Online systems, for example, will make
sense in settings where the system can be given sen-
sory data from the device (temperature, pressure
values, etc.) and thus exactly those instructions can
be generated that are relevant in the current situa-
tion. Paper documents, on the other hand, will still
be used for getting familar with a product prior to
using it, as well as for reference purposes — they
won&apos;t vanish altogether.
</bodyText>
<sectionHeader confidence="0.992095" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.959611535714286">
John A. Bateman. Upper modeling: A level of se-
mantics for natural language processing. In Proc.
of the 5th International WS on Natural Language
Generation, Pittsburgh, PA, 1990.
The LOOM Knowledge Representation System.
Documentation package, USC/ISI, Marina Del
Rey, CA, 1991.
William C. Mann and Sandra A. Thompson.
Rhetorical structure theory: A theory of text or-
ganization. In L.Polanyi, editor, The Structure of
Discourse. Ablex, Norwood, NJ, 1987.
The Penman documentation package. USC/ISI, Ma-
rina Del Rey, CA, 1991.
Gerhard Peter and Dietmar Rosner. User-model-
driven generation of instructions. To appear
in User Modeling and User-Adapted Interaction,
1994.
Dietmar Rosner and Manfred Stede. Customizing
RST for the automatic production of technical
manuals. In R. Dale, E. Hovy, D. Rosner, and
0. Stock, editors, Aspects of Automated Natu-
ral Language Generation - Proc. of the 6th In-
ternational WS on Natural Language Generation.
Springer, Berlin/Heidelberg, 1992.
Manfred Stede. Lexical options in multilingual gen-
eration from a knowledge base. In: Working notes
of the 4th European Workshop on Natural Lan-
guage Generation.
</reference>
<page confidence="0.998923">
210
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.024012">
<title confidence="0.9946185">TECHDOC: Multilingual generation of online and offline instructional text</title>
<author confidence="0.887411">Dietmar Rosner</author>
<address confidence="0.8606535">FAW Ulm P.O. Box 2060, 89010 Ulm, Germany</address>
<email confidence="0.998556">roesner@faw.uni-ulm.de</email>
<author confidence="0.999057">Manfred Stede</author>
<affiliation confidence="0.959217">(University of Toronto and) FAW Ulm</affiliation>
<address confidence="0.991127">P.O. Box 2060, 89010 Ulm, Germany</address>
<email confidence="0.987633">stede@faw.uni-ulm.de</email>
<abstract confidence="0.998593127272727">Project idea Supplying technical documentation accompanying a product in multiple languages is a growing problem, particularly in Europe with its legislation on the common market. A huge amount of translation work needs to be done when creating and updating technical documentation. In response to these needs, the TECHDOC project aims at supporting the creation and maintenance of technical documenby multilingual generation. The idea is to build up a knowledge base that includes a model of the product in question, and to produce documentation in multiple languages automatically. At present, the system produces maintenance instructions in English, German, and French. application domain of TECHDOC is technimanuals, one has to do with &amp;quot;real-world&amp;quot; the domain is of a &amp;quot;toy world&amp;quot;. At the same time, the language that is used in such manuals tends to be relatively simple; one mostly finds straightforward instructions that have been written with the intention to produce text that can be readily understood by a person who is executing some maintenance activity. Moreover, the manual sections is largely uniform and amenable to formalization. System architecture The system is based on a KB encoding knowledge about the technical domain and about schematic text structure in LOOM, a KL-ONE dialect (LOOM 1991). A typical manual section first describes the location of the object to be repaired/maintained and then lists possible replacement parts/substances; next, the activities are described, which fall into the three general categories of checking some attribute (e.g., a fluid level), adding a substance and replacing a part/substance. These actions are represented as plans in the traditional Al sense, i.e. with preand postconditions, and with recursive structure (steps can be elaborated through complete refinement plans). We call the schematic ordering of manual section its a language-independent a level was sought that captures the commonalities of the correponding sections of the German, English and French texts, i.e. that is not tailored towards one of the specific languages. Rhetorical Structure Theory (RST) (Mann and Thompson 1987) turned out to be a useful formalism: for almost every section we investigated in our extensive corpus studies of multilingual manuals, the RST analyses for the different language versions were identical. The system implements this finding by mapping the schematic plan to a tree that captures the of documents by means of rhetorical relations holding among elementary propositions or sub-trees, and a number of specific annotations. See (Rosner and Stede 1992) for details. This document representation is successively transformed into a sequence of sentence plans (together with formatting instructions in a selectable format; SGML, Zmacs and — for screen output — formatted ASCII are currently supported), which are handed over to sentence generators. For English, we use Penman (Penman 1991) and it s sentence planning language (SPL) as input terms. To produce German text, we have implemented a (partial) German version of Penman&apos;s grammar (NIGEL), which is enhanced by a morphology module, and a fragment of a French grammar in the same style. Interactive, multimodal instructions The interactive variant of the system, TECHDOC-I (Peter and Rosner 1994), produces instructions online, by engaging in a dialog with the user. On the basis of initial questions, users are assigned to a stereotypical class (ranging from &apos;novice&apos; to &apos;expert&apos;), which subsequently influences the degree of detail in which instructions are produced. The generated texts on the screen are mousesensitive, so that the user can click on words or phrases (in any of the languages displayed) and request additional information. Depending on the unit selected, a menu offers a range of applicable items for further inquiries. For example, the location of an object referred to in the text can be clarified by 209 an image in which that part is highlighted. Or, if an action is selected, the system offers to show a short video sequence on the screen, which illustrates how that action is to be performed. In essence, these facilities have paved the way to move from static, inactive strings as output to an active and dynamic interface for the associated knowledge sources and their various presentation modalities. The key is that all kinds of information (lexernes in various languages, images and object&apos;s location therein, and video sequences) are associated with the underlying KB objects. Document authoring support Apart from supporting the end user with an interactive system, the system is now being enhanced on the &amp;quot;opposite end&amp;quot;, where the input to the document generation process is created. A first version an tool been designed and implemented and tested with a number of users. This tool allows to interactively build up knowledge base instances of maintenance plans, including the actions and objects involved, and to convert them immediately into multilingual documents. The process is menu-driven, and the available options are determined dynamically in accordance with the current state of the knowledge base — in other words, the knowledge already encoded in the KB constrains the range of possible instances that are to be built with the authoring tool. Portable KB: the &amp;quot;middle model&amp;quot; design focuses on the targets that the representations can be used for more than language generation (tutoring, diagnosis systems, etc.) and that they should be portable across different technical domains. We have collected recurring knowledge about various technical devices like types of connections, about switches, about objects that turn up in a variety of designs and functions, for example fluid etc., in a model can be carried, together with the basic ontology (the so-called &apos;upper model&apos; (Bateman 1990)), from one technical domain to the next. As the first practical domain extension, we moved from automobile manuals to several sections of aircraft maintenance instructions, where the model of the specific objects and devices was subsumed under the middle model, in the place where the automobile model previously resided. The middle model is a set of quite abstract concepts; separating lexical from conceptual information allows us to account for lexical differences between the languages; in our corpus studies of automobile manuals, we found, for instance, that Enoften uses the general German verbs characterize the physical action more specifabnehmen, herausschrauben, her- Our lexicalization procedure captures these language-specific differences by exploring subsumption (see (Stede 1993)); the important point to note here is that such lexical matters are independent of the &amp;quot;conceptual kernel&amp;quot;, which is represented in a language-independent way and allows for sharing as much information as possible. Perspective: From research prototype to practical usage being developed into two complementary directions: toward online, interactive instruction dialog on the one hand, and toward production of fully formatted paper documents on the other. Each is suitable for its particular purposes; both are important. Online systems, for example, will make sense in settings where the system can be given sensory data from the device (temperature, pressure values, etc.) and thus exactly those instructions can be generated that are relevant in the current situation. Paper documents, on the other hand, will still be used for getting familar with a product prior to using it, as well as for reference purposes — they won&apos;t vanish altogether.</abstract>
<note confidence="0.82638356">References John A. Bateman. Upper modeling: A level of sefor natural language processing. In of the 5th International WS on Natural Language PA, 1990. The LOOM Knowledge Representation System. Documentation package, USC/ISI, Marina Del Rey, CA, 1991. William C. Mann and Sandra A. Thompson. Rhetorical structure theory: A theory of text or- In L.Polanyi, editor, Structure of Norwood, NJ, 1987. The Penman documentation package. USC/ISI, Marina Del Rey, CA, 1991. Gerhard Peter and Dietmar Rosner. User-modeldriven generation of instructions. To appear Modeling and User-Adapted Interaction, 1994. Dietmar Rosner and Manfred Stede. Customizing RST for the automatic production of technical manuals. In R. Dale, E. Hovy, D. Rosner, and Stock, editors, of Automated Natural Language Generation - Proc. of the 6th International WS on Natural Language Generation. Springer, Berlin/Heidelberg, 1992.</note>
<abstract confidence="0.75519575">Manfred Stede. Lexical options in multilingual generation from a knowledge base. In: Working notes of the 4th European Workshop on Natural Language Generation.</abstract>
<intro confidence="0.532972">210</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>John A Bateman</author>
</authors>
<title>Upper modeling: A level of semantics for natural language processing.</title>
<date>1990</date>
<booktitle>In Proc. of the 5th International WS on Natural Language Generation,</booktitle>
<location>Pittsburgh, PA,</location>
<contexts>
<context position="6314" citStr="Bateman 1990" startWordPosition="1002" endWordPosition="1003">t are to be built with the authoring tool. Portable KB: the &amp;quot;middle model&amp;quot; Our KB design focuses on the targets that the representations can be used for more than language generation (tutoring, diagnosis systems, etc.) and that they should be portable across different technical domains. We have collected recurring knowledge about various technical devices like types of connections, about switches, about objects that turn up in a variety of designs and functions, for example fluid tanks, etc., in a middle model that can be carried, together with the basic ontology (the so-called &apos;upper model&apos; (Bateman 1990)), from one technical domain to the next. As the first practical domain extension, we moved from automobile manuals to several sections of aircraft maintenance instructions, where the model of the specific objects and devices was subsumed under the middle model, in the place where the automobile model previously resided. The middle model is a set of quite abstract concepts; separating lexical from conceptual information allows us to account for lexical differences between the languages; in our corpus studies of automobile manuals, we found, for instance, that English often uses the general rem</context>
</contexts>
<marker>Bateman, 1990</marker>
<rawString>John A. Bateman. Upper modeling: A level of semantics for natural language processing. In Proc. of the 5th International WS on Natural Language Generation, Pittsburgh, PA, 1990.</rawString>
</citation>
<citation valid="true">
<title>The LOOM Knowledge Representation System. Documentation package, USC/ISI,</title>
<date>1991</date>
<location>Marina Del Rey, CA,</location>
<marker>1991</marker>
<rawString>The LOOM Knowledge Representation System. Documentation package, USC/ISI, Marina Del Rey, CA, 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William C Mann</author>
<author>Sandra A Thompson</author>
</authors>
<title>Rhetorical structure theory: A theory of text organization.</title>
<date>1987</date>
<booktitle>The Structure of Discourse. Ablex,</booktitle>
<editor>In L.Polanyi, editor,</editor>
<location>Norwood, NJ,</location>
<contexts>
<context position="2536" citStr="Mann and Thompson 1987" startWordPosition="385" endWordPosition="388">a fluid level), adding a substance and replacing a part/substance. These actions are represented as plans in the traditional Al sense, i.e. with pre- and postconditions, and with recursive structure (steps can be elaborated through complete refinement plans). We call the schematic ordering of a manual section its macrostructure. For a language-independent text representation, a level was sought that captures the commonalities of the correponding sections of the German, English and French texts, i.e. that is not tailored towards one of the specific languages. Rhetorical Structure Theory (RST) (Mann and Thompson 1987) turned out to be a useful formalism: for almost every section we investigated in our extensive corpus studies of multilingual manuals, the RST analyses for the different language versions were identical. The system implements this finding by mapping the schematic plan structure to a tree that captures the microstructure of documents by means of rhetorical relations holding among elementary propositions or sub-trees, and a number of specific annotations. See (Rosner and Stede 1992) for details. This document representation is successively transformed into a sequence of sentence plans (together</context>
</contexts>
<marker>Mann, Thompson, 1987</marker>
<rawString>William C. Mann and Sandra A. Thompson. Rhetorical structure theory: A theory of text organization. In L.Polanyi, editor, The Structure of Discourse. Ablex, Norwood, NJ, 1987.</rawString>
</citation>
<citation valid="true">
<title>The Penman documentation package. USC/ISI,</title>
<date>1991</date>
<location>Marina Del Rey, CA,</location>
<marker>1991</marker>
<rawString>The Penman documentation package. USC/ISI, Marina Del Rey, CA, 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gerhard Peter</author>
<author>Dietmar Rosner</author>
</authors>
<title>User-modeldriven generation of instructions.</title>
<date>1994</date>
<booktitle>User Modeling and User-Adapted Interaction,</booktitle>
<note>To appear in</note>
<contexts>
<context position="3734" citStr="Peter and Rosner 1994" startWordPosition="571" endWordPosition="574">sentence plans (together with formatting instructions in a selectable target format; SGML, J4TEX, Zmacs and — for screen output — formatted ASCII are currently supported), which are handed over to sentence generators. For English, we use Penman (Penman 1991) and it s sentence planning language (SPL) as input terms. To produce German text, we have implemented a (partial) German version of Penman&apos;s grammar (NIGEL), which is enhanced by a morphology module, and a fragment of a French grammar in the same style. Interactive, multimodal instructions The interactive variant of the system, TECHDOC-I (Peter and Rosner 1994), produces instructions online, by engaging in a dialog with the user. On the basis of initial questions, users are assigned to a stereotypical class (ranging from &apos;novice&apos; to &apos;expert&apos;), which subsequently influences the degree of detail in which instructions are produced. The generated texts on the screen are mousesensitive, so that the user can click on words or phrases (in any of the languages displayed) and request additional information. Depending on the unit selected, a menu offers a range of applicable items for further inquiries. For example, the location of an object referred to in th</context>
</contexts>
<marker>Peter, Rosner, 1994</marker>
<rawString>Gerhard Peter and Dietmar Rosner. User-modeldriven generation of instructions. To appear in User Modeling and User-Adapted Interaction, 1994.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dietmar Rosner</author>
<author>Manfred Stede</author>
</authors>
<title>Customizing RST for the automatic production of technical manuals. In</title>
<date>1992</date>
<booktitle>Aspects of Automated Natural Language Generation - Proc. of the 6th International WS on Natural Language Generation.</booktitle>
<editor>R. Dale, E. Hovy, D. Rosner, and 0. Stock, editors,</editor>
<publisher>Springer,</publisher>
<location>Berlin/Heidelberg,</location>
<contexts>
<context position="3022" citStr="Rosner and Stede 1992" startWordPosition="461" endWordPosition="464">rench texts, i.e. that is not tailored towards one of the specific languages. Rhetorical Structure Theory (RST) (Mann and Thompson 1987) turned out to be a useful formalism: for almost every section we investigated in our extensive corpus studies of multilingual manuals, the RST analyses for the different language versions were identical. The system implements this finding by mapping the schematic plan structure to a tree that captures the microstructure of documents by means of rhetorical relations holding among elementary propositions or sub-trees, and a number of specific annotations. See (Rosner and Stede 1992) for details. This document representation is successively transformed into a sequence of sentence plans (together with formatting instructions in a selectable target format; SGML, J4TEX, Zmacs and — for screen output — formatted ASCII are currently supported), which are handed over to sentence generators. For English, we use Penman (Penman 1991) and it s sentence planning language (SPL) as input terms. To produce German text, we have implemented a (partial) German version of Penman&apos;s grammar (NIGEL), which is enhanced by a morphology module, and a fragment of a French grammar in the same styl</context>
</contexts>
<marker>Rosner, Stede, 1992</marker>
<rawString>Dietmar Rosner and Manfred Stede. Customizing RST for the automatic production of technical manuals. In R. Dale, E. Hovy, D. Rosner, and 0. Stock, editors, Aspects of Automated Natural Language Generation - Proc. of the 6th International WS on Natural Language Generation. Springer, Berlin/Heidelberg, 1992.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Manfred Stede</author>
</authors>
<title>Lexical options in multilingual generation from a knowledge base. In:</title>
<booktitle>Working notes of the 4th European Workshop on Natural Language Generation.</booktitle>
<marker>Stede, </marker>
<rawString>Manfred Stede. Lexical options in multilingual generation from a knowledge base. In: Working notes of the 4th European Workshop on Natural Language Generation.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>