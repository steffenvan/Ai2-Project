<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.029013">
<title confidence="0.98669">
Dependency parser demo
</title>
<author confidence="0.990666">
Timo Jarvinen and Pasi Tapanainen
</author>
<affiliation confidence="0.770196">
University of Helsinki, Department of General Linguistics
Research Unit for Multilingual Language Technology
</affiliation>
<address confidence="0.647157">
P.O. Box 4, FIN-00014 University of Helsinki, Finland
</address>
<email confidence="0.655219">
{Pasi.Tapanainen,Timo.Jarvinen}eling.Helsinki.fi
</email>
<sectionHeader confidence="0.998697" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.972598382978724">
We are concerned with surface-syntactic parsing of
running text. Our main goal is to describe a syntac-
tic analysis of sentences using dependency links that
show the head-dependent relations between words.
The new dependency parser&apos; (Tapanainen and Jar-
vinen, 1997; Jarvinen and Tapanainen, 1997) be-
longs to a continuous effort to apply rule-based
methods to natural languages. It can been seen
as a relative of the Constraint Grammar framework
(Karlsson et al., 1995), for many features of the sys-
tem have been derived from it. The syntactic de-
scription in the English Constraint Grammar (ENG-
CG) is implicitly dependency oriented; it contains
tags for heads and modifiers but not explicit links
between them (see Figure 2).
Although, the new syntactic formalism differs
much from the Constraint Grammar&apos;s formalisms,
the basic rule types of the older formalism have been
preserved among the new ones. Also, the rules are
independent, and they describe syntax in a piece-
meal fashion. The new dependency parser creates
explicit links between the elements of the sentence
(in Figure 1) while still retaining the shallower rep-
resentation similar to ENGCG (in Figure 2). The
parser applies the ENGTWOL lexicon designed orig-
inally by Juha Heikkila and Atro Voutilainen. Also,
the reliable parts of the ENGCG&apos;s morphological
disambiguator by Atro Voutilainen are applied.
The parser has been tested in Sun workstation
and in PCs under Linux. The syntactic analysis is
modest in time and space requirements: the size of
the process (the syntactic analysis only) is less than
2 MB and it runs in a Pentium 90 MHz machine at
the speed of 200 words per second. We have tested
the parser on bigger texts to test its usability in cor-
pus linguistic and lexicographic work. By now, some
30 million words have been parsed.
http://www.ling.helsinki.firtapanain/dg/
2 The dependency model
Our syntactic description can be seen as a formalisa-
tion of Tesniere&apos;s (1959) original dependency theory.
The dependency model adopted to our description
differs in various respects from the post-Tesnierean
development of dependency theory, though many of
the features are recognised elsewhere. The main fea-
tures of the parsing system and the adopted depen-
dency theory are:
</bodyText>
<listItem confidence="0.997867458333333">
• The basic syntactic element is not a word, but
a nucleus. This is related to the internal organ-
isation of the grammar, though the default out-
put shows the dependency links between surface
words.
• Every element has one and only one head
(uniqueness).
• The result is a tree.
• Functional dependencies are expressed by link
names.
• The links may cross (non-projective construc-
tions are allowed).
• Modifiers are not obligatory; valency defines
possibility rather than obligatoriness to have ar-
guments.
• The grammar is not generative. This means
that the parser accepts every input sentence,
and returns an analysis even for ungrammatical
sentences to the extent the structure is recover-
able.
• The dependency description is monostratal, i.e.
there is one level of syntactic description, the
surface-syntactic description, and no transfor-
mations.
</listItem>
<page confidence="0.919519">
9
</page>
<figure confidence="0.99384115942029">
&lt;What&gt;
&amp;quot;what&amp;quot; &lt;**CLB&gt; PRON WH SG/PL @OBJ
&lt;would&gt;
&amp;quot;would&amp;quot; V AUXMOD VFIN @+FAUXV
&lt;you&gt;
&amp;quot;you&amp;quot; PRON PERS NOM SG2/PL2 @SUBJ
&lt;like&gt;
&amp;quot;like&amp;quot; V INF 0-FMAINV
&lt;me&gt;
&amp;quot;i&amp;quot; PRON PERS ACC SG1 &apos;OBJ
&lt;to&gt;
&amp;quot;to&amp;quot; INFMARK&gt; @INFMARK&gt;
&lt;do&gt;
&amp;quot;do&amp;quot; V INF @-FMAINV
&lt;?&gt;
&lt;ROOT&gt; #0
&lt;HE&gt; @SUBJ PRON SG3 subj:&gt;2
&lt;WAS&gt; 0+FMAINV PAST #2 main:&gt;0
&lt;A&gt; @DN&gt; DET SG det:&gt;4
&lt;GIANT&gt; @PCOMPL-S N SG #4 comp:&gt;2
&lt;WHO&gt; OSUBJ PRON WH subj:&gt;6
&lt;PACED&gt; 0-FFMAINV PAST #6 mod:&gt;4
&lt;AN&gt; @DN&gt; DET SG det:&gt;9
&lt;UNENDING&gt; @A&gt; A attr:&gt;9
&lt;CIRCLE&gt; ©OBJ N SG #9 obj:&gt;6
&lt;ABOUT&gt; @&lt;NOM PREP #10 mod:&gt;9
&lt;HIS&gt; @A&gt; PRON GEN SG3 attr:&gt;12
&lt;LITTLE&gt; @QN&gt; DET SG #12 qn:&gt;13
&lt;FARM&gt; @&lt;P N SG #13 pcomp:&gt;10
&lt;8,&gt;
&lt;VIEWING&gt; 0-FMAINV PC131 #15 man:&gt;6
&lt;IT&gt; ©OBJ PRON ACC SG3 obj:&gt;15
&lt;FROM&gt; @ADVL PREP #17 sou:&gt;15
&lt;EVERY&gt; @QN&gt; DET qn:&gt;19
&lt;ANGLE&gt; O&lt;P N SG #19 pcomp:&gt;17
&lt;INL&gt;L&gt;O&lt;NOM PREP #20 rnod:&gt;19
&lt;A
@QN&gt; DET qn:&gt;22
&lt;WEATHERS&gt; ©&lt;P N PL #22 pcomp:&gt;20
&lt;$,&gt;
&lt;AND&gt; UGC CC cc:&gt;15
&lt;HE&gt; OSUBJ PRON SG3 subj:&gt;26
&lt;WAS&gt; a+FMAINV PAST #26 cc:&gt;15
&lt;A-LITTLE&gt; OQN&gt; DET SG qn:&gt;28
&lt;BOY&gt; @PCOMPL-S N SG #28 conzp:&gt;26
&lt;$,&gt;
&lt;WHO&gt; @SUBJ PRON WH #30 subj:&gt;43
&lt;$,&gt;
&lt;WHENEVER&gt; OADVL ADV WH trnp:&gt;35
&lt;HE&gt; @SUBJ PRON SG3 subj:&gt;34
&lt;DID&gt; 0-i-FAUXV PAST #34 v-ch:&gt;35
&lt;CATCH&gt; 0-FMAINV INF #35 mod:&gt;30
&lt;A&gt; @DN&gt; DET SG det:&gt;37
&lt;GLIMPSE&gt; OOBJ N SG #37 obj:&gt;35
&lt;OUT_OF&gt; OADVL PREP #38 sou:&gt;35
&lt;THOSE&gt; @DN&gt; DET PL det:&gt;41
&lt;SIX-FOOT&gt; @A&gt; N SG attr:&gt;41
&lt;WINDOWS&gt; O&lt;P N PL #41 pcomp:&gt;38
&lt;8,&gt;
&lt;COULD&gt; 0-I-FAUXV AUXMOD #43 v-ch:&gt;45
&lt;HARDLY&gt; @ADVL ADV &gt;45
&lt;BELIEVE&gt; 0-FMAINV INF #45 mod:&gt;28
&lt;WHAT&gt; &apos;OBJ PRON WH obj:&gt;48
&lt;HE&gt; @SUB.&apos; PRON SG3 subj:&gt;48
&lt;SAW&gt; 0-1-FMAINV PAST #48 obj:&gt;45
&lt;$.&gt; pnct:&gt;48
&lt;LIKE&gt;
&lt;WOULD&gt; &lt;DO&gt;
&lt;WHAT&gt; &lt;YOU&gt; &lt;MEXTO&gt; &lt;V&gt;
</figure>
<figureCaption confidence="0.99979">
Figure 1: Dependency tree
Figure 2: ENGCG-style output
</figureCaption>
<sectionHeader confidence="0.853294" genericHeader="references">
References
</sectionHeader>
<bodyText confidence="0.98885625">
Timo Jarvinen and Path Tapanainen. 1997. A de-
pendency parser for English. Technical Report
TR-1, Department of General Linguistics, Univer-
sity of Helsinki, Finland, February.
Fred Karlsson, Atro Voutilainen, Juha Heikkila, and
Arto Anttila, editors. 1995. Constraint Gram-
mar: a language-independent system for parsing
unrestricted text, volume 4 of Natural Language
Processing. Mouton de Gruyter, Berlin and N.Y.
Pasi Tapanainen and Timo Jarvinen. 1997. A non-
projective dependency parser. In Proceedings of
the 5th Conference on Applied Natural Language
Processing, Washington, D.C., April. ACL.
Lucien Tesniere. 1959. Elements de syntaxe struc-
turale. Editions Klincksieck, Paris.
A An example
The following sentence is excerpted from Jane
Smiley&apos;s Barn Blind (HarperCollins, 1994, p. 8).
The dependency links are enumerated and named,
e.g. subj:&gt;2 marks the subject of the head #2.
</bodyText>
<page confidence="0.996678">
10
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.641261">
<title confidence="0.966367">Dependency parser demo</title>
<author confidence="0.999755">Jarvinen Tapanainen</author>
<affiliation confidence="0.918958">University of Helsinki, Department of General Linguistics Research Unit for Multilingual Language Technology</affiliation>
<address confidence="0.999573">P.O. Box 4, FIN-00014 University of Helsinki, Finland</address>
<intro confidence="0.792226">{Pasi.Tapanainen,Timo.Jarvinen}eling.Helsinki.fi</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>