<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.093033">
<subsectionHeader confidence="0.599982666666667">
Technical Correspondence
Questioning the Need for Parsing
III-formed Inputs
</subsectionHeader>
<bodyText confidence="0.983678264705883">
Parsing of ill-formed input may be an important issue
in the design of robust natural language systems, as
pointed out by Eastman and McLean 1981. The un-
predictable range of user input in natural language
requires a mechanism to deal with unacceptable syn-
tactic constructs. However, human behavior is compli-
cated, and the capacity to adapt our mode of expres-
sion to the varying contexts in which we communicate
should not be overlooked. Because of our adaptabili-
ty, particularly in patterns of speech, the ability to
parse ill-formed inputs may not be a critical require-
ment for all natural language systems.
For example, we conducted an experiment that
simulated a voice-driven office automation system,
where subjects were provided with a tutorial and asked
to solve simple problems using voice commands.1 The
purpose of the experiment was to test the usefulness
of our proposed system and to gather data for the
designers of the natural language processor we planned
to implement (Biermann et al. 1983).
The subjects in the experiment were seated in front
of a terminal display with a microphone and were in-
structed to speak their commands using discrete
speech (about one word per second) or slow connect-
ed speech. The monitor sat in a separate room, listed
to their requests on earphones, and typed the corre-
sponding commands to the system. In this way, sub-
jects experienced a system that responded to spoken
English sentences. If a command was not judged to
be recognizable by our voice recognition system or
parsable by our implemented grammar, the subject
received an error message and was forced to rephrase
the request.
The surprising result of this experiment was that
the subjects consistently spoke well-formed sentences
when forced into the regimen of slow methodical
speech and had very few inputs rejected on the basis
of improper syntax. We had expected to find frequent
occurrences of the three classes of ill-formed input
described by McLean 1981, yet none of our subjects
exhibited such errors to a significant degree.
Out of more than 1600 sentences spoken by our 15
subjects, only 10 utterances were rejected as ungram-
matical inputs. Five of the ill-formed sentences con-
tained incomplete noun phrases not processed by our
system (e.g., &amp;quot;Combine the first paragraph with the
1 This work is supported by the IBM Corporation under GSD
agreement no. 260880.
second [paragraph].&amp;quot;), and the remainder involved
skipped articles (e.g., &amp;quot;Remove period.&amp;quot;, rather than
&amp;quot;Remove the period.&amp;quot;). We also found that relatively
simple syntax was used, with a total of only six sen-
tences containing conjunctions and with a notable
absence of relative clauses.
The subjects were required to begin each utterance
with an imperative verb and to use words from a list
of recognized vocabulary (in this case, some 50 words
from the office domain). These constraints may have
contributed to the lack of syntactic complexity we
noted, but it is still remarkable that during an hour-
long session, under the pressures of problem-solving,
subjects routinely managed to form grammatically
acceptable inputs.
As a consequence of these observations, we have
practically discontinued our efforts to parse ill-formed
sentences. For pragmatic reasons, our work in that
area has become a low priority in the overall develop-
ment of a voice-driven natural language system.
</bodyText>
<figure confidence="0.766005">
Linda Fineman
Department of Computer Science
Duke University
Durham, NC 27706
</figure>
<sectionHeader confidence="0.899508" genericHeader="abstract">
References
</sectionHeader>
<reference confidence="0.999414769230769">
Biermann, A., Rodman, R., Ballard, B., Betancourt, T., Bilbro, G.,
Deas, H., Fineman, L., Fink, P., Gilbert, K., Gregory, D., and
Heidlage, F. 1983 Interactive natural language problem solv-
ing: a pragmatic approach. Paper presented at the Conference
on Applied Natural Language Processing, Santa Monica, CA
(February).
Eastman, C.M. and McLean, D.S. 1981 On the need for parsing
ill-formed input. AJCL 7 4 (October-December), Technical
Correspondence.
McLean, D.S. 1981 METASZK: a natural language front end to
System 2000. M.S. thesis. Department of Mathematics and
Computer Science, Florida State University, Tallahassee, FL
(March).
</reference>
<page confidence="0.937322">
22 American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.173837">
<title confidence="0.8815485">Technical Correspondence Questioning the Need for Parsing</title>
<abstract confidence="0.986917217391304">III-formed Inputs Parsing of ill-formed input may be an important issue in the design of robust natural language systems, as pointed out by Eastman and McLean 1981. The unpredictable range of user input in natural language requires a mechanism to deal with unacceptable syntactic constructs. However, human behavior is complicated, and the capacity to adapt our mode of expression to the varying contexts in which we communicate should not be overlooked. Because of our adaptability, particularly in patterns of speech, the ability to parse ill-formed inputs may not be a critical requirement for all natural language systems. For example, we conducted an experiment that simulated a voice-driven office automation system, where subjects were provided with a tutorial and asked solve simple problems using voice The purpose of the experiment was to test the usefulness of our proposed system and to gather data for the designers of the natural language processor we planned to implement (Biermann et al. 1983). The subjects in the experiment were seated in front of a terminal display with a microphone and were instructed to speak their commands using discrete speech (about one word per second) or slow connected speech. The monitor sat in a separate room, listed to their requests on earphones, and typed the corresponding commands to the system. In this way, subjects experienced a system that responded to spoken English sentences. If a command was not judged to be recognizable by our voice recognition system or parsable by our implemented grammar, the subject received an error message and was forced to rephrase the request. The surprising result of this experiment was that the subjects consistently spoke well-formed sentences when forced into the regimen of slow methodical speech and had very few inputs rejected on the basis of improper syntax. We had expected to find frequent occurrences of the three classes of ill-formed input described by McLean 1981, yet none of our subjects exhibited such errors to a significant degree. Out of more than 1600 sentences spoken by our 15 subjects, only 10 utterances were rejected as ungrammatical inputs. Five of the ill-formed sentences contained incomplete noun phrases not processed by our system (e.g., &amp;quot;Combine the first paragraph with the 1This work is supported by the IBM Corporation under GSD agreement no. 260880. second [paragraph].&amp;quot;), and the remainder involved skipped articles (e.g., &amp;quot;Remove period.&amp;quot;, rather than We also found that relatively simple syntax was used, with a total of only six sentences containing conjunctions and with a notable absence of relative clauses. The subjects were required to begin each utterance with an imperative verb and to use words from a list of recognized vocabulary (in this case, some 50 words from the office domain). These constraints may have contributed to the lack of syntactic complexity we noted, but it is still remarkable that during an hourlong session, under the pressures of problem-solving, subjects routinely managed to form grammatically acceptable inputs. As a consequence of these observations, we have practically discontinued our efforts to parse ill-formed sentences. For pragmatic reasons, our work in that area has become a low priority in the overall development of a voice-driven natural language system.</abstract>
<author confidence="0.999761">Linda Fineman</author>
<affiliation confidence="0.9998575">Department of Computer Science Duke University</affiliation>
<address confidence="0.922805">Durham, NC 27706</address>
<note confidence="0.932147733333333">References Biermann, A., Rodman, R., Ballard, B., Betancourt, T., Bilbro, G., Deas, H., Fineman, L., Fink, P., Gilbert, K., Gregory, D., and Heidlage, F. 1983 Interactive natural language problem solving: a pragmatic approach. Paper presented at the Conference on Applied Natural Language Processing, Santa Monica, CA (February). Eastman, C.M. and McLean, D.S. 1981 On the need for parsing input. 4 (October-December), Technical Correspondence. McLean, D.S. 1981 METASZK: a natural language front end to System 2000. M.S. thesis. Department of Mathematics and Computer Science, Florida State University, Tallahassee, FL (March). Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A Biermann</author>
<author>R Rodman</author>
<author>B Ballard</author>
<author>T Betancourt</author>
<author>G Bilbro</author>
<author>H Deas</author>
<author>L Fineman</author>
<author>P Fink</author>
<author>K Gilbert</author>
<author>D Gregory</author>
<author>F Heidlage</author>
</authors>
<title>Interactive natural language problem solving: a pragmatic approach.</title>
<date>1983</date>
<booktitle>Paper presented at the Conference on Applied Natural Language Processing,</booktitle>
<location>Santa Monica, CA</location>
<contexts>
<context position="1081" citStr="Biermann et al. 1983" startWordPosition="169" endWordPosition="172">ts in which we communicate should not be overlooked. Because of our adaptability, particularly in patterns of speech, the ability to parse ill-formed inputs may not be a critical requirement for all natural language systems. For example, we conducted an experiment that simulated a voice-driven office automation system, where subjects were provided with a tutorial and asked to solve simple problems using voice commands.1 The purpose of the experiment was to test the usefulness of our proposed system and to gather data for the designers of the natural language processor we planned to implement (Biermann et al. 1983). The subjects in the experiment were seated in front of a terminal display with a microphone and were instructed to speak their commands using discrete speech (about one word per second) or slow connected speech. The monitor sat in a separate room, listed to their requests on earphones, and typed the corresponding commands to the system. In this way, subjects experienced a system that responded to spoken English sentences. If a command was not judged to be recognizable by our voice recognition system or parsable by our implemented grammar, the subject received an error message and was forced </context>
</contexts>
<marker>Biermann, Rodman, Ballard, Betancourt, Bilbro, Deas, Fineman, Fink, Gilbert, Gregory, Heidlage, 1983</marker>
<rawString>Biermann, A., Rodman, R., Ballard, B., Betancourt, T., Bilbro, G., Deas, H., Fineman, L., Fink, P., Gilbert, K., Gregory, D., and Heidlage, F. 1983 Interactive natural language problem solving: a pragmatic approach. Paper presented at the Conference on Applied Natural Language Processing, Santa Monica, CA (February).</rawString>
</citation>
<citation valid="true">
<authors>
<author>C M Eastman</author>
<author>D S McLean</author>
</authors>
<title>On the need for parsing ill-formed input.</title>
<date>1981</date>
<journal>AJCL</journal>
<tech>(October-December), Technical Correspondence.</tech>
<volume>7</volume>
<marker>Eastman, McLean, 1981</marker>
<rawString>Eastman, C.M. and McLean, D.S. 1981 On the need for parsing ill-formed input. AJCL 7 4 (October-December), Technical Correspondence.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D S McLean</author>
</authors>
<title>METASZK: a natural language front end to System</title>
<date>1981</date>
<tech>M.S. thesis.</tech>
<institution>Department of Mathematics and Computer Science, Florida State University,</institution>
<location>Tallahassee, FL</location>
<contexts>
<context position="2041" citStr="McLean 1981" startWordPosition="330" endWordPosition="331">way, subjects experienced a system that responded to spoken English sentences. If a command was not judged to be recognizable by our voice recognition system or parsable by our implemented grammar, the subject received an error message and was forced to rephrase the request. The surprising result of this experiment was that the subjects consistently spoke well-formed sentences when forced into the regimen of slow methodical speech and had very few inputs rejected on the basis of improper syntax. We had expected to find frequent occurrences of the three classes of ill-formed input described by McLean 1981, yet none of our subjects exhibited such errors to a significant degree. Out of more than 1600 sentences spoken by our 15 subjects, only 10 utterances were rejected as ungrammatical inputs. Five of the ill-formed sentences contained incomplete noun phrases not processed by our system (e.g., &amp;quot;Combine the first paragraph with the 1 This work is supported by the IBM Corporation under GSD agreement no. 260880. second [paragraph].&amp;quot;), and the remainder involved skipped articles (e.g., &amp;quot;Remove period.&amp;quot;, rather than &amp;quot;Remove the period.&amp;quot;). We also found that relatively simple syntax was used, with a t</context>
</contexts>
<marker>McLean, 1981</marker>
<rawString>McLean, D.S. 1981 METASZK: a natural language front end to System 2000. M.S. thesis. Department of Mathematics and Computer Science, Florida State University, Tallahassee, FL (March).</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>