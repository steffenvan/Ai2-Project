<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.62663">
The TEXTCAP Semantic
</note>
<title confidence="0.795104">
Interpreter
</title>
<author confidence="0.975023">
Charles B. Callaway
</author>
<affiliation confidence="0.996093">
University of Edinburgh (UK)
</affiliation>
<email confidence="0.99707">
email: ccallawa@inf.ed.ac.uk
</email>
<sectionHeader confidence="0.984316" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999164375">
The lack of large amounts of readily available, explicitly represented
knowledge has long been recognized as a barrier to applications requir-
ing semantic knowledge such as machine translation and question an-
swering. This problem is analogous to that facing machine translation
decades ago, where one proposed solution was to use human translators
to post-edit automatically produced, low quality translations rather than
expect a computer to independently create high-quality translations. This
paper describes an attempt at implementing a semantic parser that takes
unrestricted English text, uses publically available computational linguis-
tics tools and lexical resources and as output produces semantic triples
which can be used in a variety of tasks such as generating knowledge
bases, providing raw material for question answering systems, or creating
RDF structures. We describe the TEXTCAP system, detail the semantic
triple representation it produces, illustrate step by step how TEXTCAP
processes a short text, and use its results on unseen texts to discuss the
amount of post-editing that might be realistically required.
</bodyText>
<page confidence="0.991097">
327
</page>
<note confidence="0.830472">
328 Callaway
</note>
<sectionHeader confidence="0.923933" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998726">
A number of applications depend on explicitly represented knowledge to perform ba-
sic tasks or add customization to existing tasks. Improving the quantity and quality of
the knowledge contained in knowledge bases could lead to the improved performance
of many applications that depend on knowledge and inference such as:
</bodyText>
<listItem confidence="0.995447">
• Generating scientific or educational explanations of natural or mechanical sys-
tems and phenomena (Lester and Porter, 1997),
• Question answering systems (Clark et al., 2001) that use reasoning to solve
problems rather than looking up answers,
• Multimodal information presentation systems that depend on specific real world
</listItem>
<bodyText confidence="0.981867529411765">
knowledge in order to describe or refer to it for audiences (Callaway et al., 2005;
Stock et al., 2007).
These systems have typically relied on hand-built and domain specific knowledge
bases requiring years of effort to produce. The need to speed up this process as well
as make the resulting representations more consistent are well-known problems that
have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003;
Carenini et al., 2005; Barker et al., 2007), but large scale, domain independent, and
fully automatic knowledge acquisition on unrestricted text is still in its infancy.
Over the last decade research in applied computational linguistics has extended the
various components necessary for semantic parsing, but have tended to focus on in-
creasing the measurable performance of individual subtask in isolation (e.g., parsing,
anaphora resolution, semantic role labelling, and word sense disambiguation) rather
than on an entire end-to-end system. Meanwhile, theoretical CL research has exam-
ined issues such as underspecification, scoping and reference resolution in discourse
contexts, but has set aside issues such as large-scale robustness, ontology integration
and evaluation which are vital for applied uses of semantic parsing.
In this paper we discuss an implementation to automatically extract explicitly coded
conceptual and ontological knowledge from unrestricted text using a pipeline of NLP
components, as part of the STEP shared task (Bos, 2008). The TEXTCAP system per-
forms the basic steps towards this task by gluing together an off-the-shelf parser with
semantic interpretation methods. It is intended to be a test case for (1) establishing
baseline performance measures for semantic parsing and (2) determining what degree
of post-editing might be necessary in real-world environments.
Because major components of such a system would not be tailored towards the se-
mantic parsing task, we would rightly expect its output to be imperfect. This problem
is analogous to that facing machine translation decades ago, where one proposed so-
lution was to use human translators to post-edit automatically produced, low quality
translations rather than expect a computer to independently create high-quality trans-
lations. One aspect of this research is thus to investigate how much post-editing would
be required to convert the system’s output to usable semantic triples.
Finally, this paper presents the results of TEXTCAP on the 2008 STEP shared task
corpus, giving specific comments about the difficulties in encountered. Although not
a formal evaluation, we were satisfied with its performance in terms of accuracy and
efficiency for helping humans post-edit semantic triples.
</bodyText>
<note confidence="0.823993">
The TEXTCAP Semantic Interpreter 329
</note>
<sectionHeader confidence="0.657635" genericHeader="introduction">
2 System Description
</sectionHeader>
<bodyText confidence="0.999278375">
TEXTCAP performs basic steps towards the task of converting free text into semantic
triples by gluing together an off-the-shelf parser with ad-hoc semantic interpretation
methods. TEXTCAP parses a document into Penn TreeBank form and then traverses
each syntactic parse tree performing a series of step-by-step tasks such as discourse
parsing, clause separation, word sense disambiguation, anaphora resolution and se-
mantic role labelling. Ad hoc rules then create a set of triples from the resulting
semantically-enhanced parse tree.
TEXTCAP first uses the domain-independent Charniak parser (Charniak, 2000) to
convert sentences in the source document into a sequence of syntactic parses. It then
applies syntax-based discourse parsing rules (such as Soricut and Marcu (2003)) to
reduce coordinate, subordinate, and relative clauses into coindexed, simpler sentence
parses headed by single verbal relations.
It then marks for grammatical roles (subject, object, etc.) and syntactic features
(e.g., passivity) before using a simple anaphora resolution algorithm based on those
features and a word sense disambiguation algorithm grounded in WordNet (Fellbaum,
1998) senses that helps determine additional features such as animacy. A two-pass
method is applied where first monosemous words are assigned senses, and then re-
maining senses are selected together with verb types (TEXTCAP uses ad hoc rules
rather than current verb taxonomies like FrameNet). Selectional restrictions from the
verb type then allows for labelling of peripheral grammatical roles as semantic roles.
Finally, entities representing specific objects are marked with ontological relations and
discourse relations are realized between individual verbal relations.
The end product of TEXTCAP is thus a list of coindexed semantic triples represent-
ing the explicitly recoverable semantic content of the input text.
</bodyText>
<sectionHeader confidence="0.991562" genericHeader="method">
3 Text Processing Components
</sectionHeader>
<bodyText confidence="0.9718175">
Corpus methods underlie many of the recent improvements in a wide array of generic
NLP tools. For instance, the introduction of large-scale lexical and syntactic resources
like the Penn TreeBank (Marcus et al., 1993) have led to highly accurate, domain inde-
pendent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution
systems process references across multiple sentences, and recent work on anaphora
resolution by Poesio and Kabadjov (2004) describes itself as the first such system
which can be used off-the-shelf.
Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency
analyses of large annotated corpora, can help localize search in a particular area of a
knowledge base to find the most related concepts and instances. Semantic role labelers
(Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in
relation to its local man verb, and can provide additional clues for disambiguating
words and locating them in an ontological space.
In addition to lexical and semantic tasks, multi-sentence linguistic analysis such
as discourse segmentation and parsing is needed to semantically label the roles of
verb phrases in relation to one other. Soricut and Marcu (2003) presented a statistical
system that automatically produces an analysis of the rhetorical structure that holds
between sets of sentences or clauses at the paragraph level.
330 Callaway
As a generalization, NLP research has been conducted separately and few attempts
have been made to connect each of them into the longer chains and pipelines needed
for more complete and deeper text processing such as is needed for tasks like knowl-
edge acquisition. Additionally, most of these tools are intended to iteratively examine
each sentence individually within a larger document. But often important linguistic
phenomena cross sentence boundaries, yet are just as necessary to properly understand
the semantic content of a document.
</bodyText>
<sectionHeader confidence="0.906444" genericHeader="method">
4 Knowledge Representation in TEXTCAP
</sectionHeader>
<bodyText confidence="0.99968821875">
A common method of representing semantic knowledge in the Knowledge Base com-
munity (Brachman and Schmolze, 1985; Clark and Porter, 1998) is through three-
place predicates, or triples, of the form (CONCEPT RELATION CONCEPT). A concept
can signify either a generic entity or class, like “houses”, or a particular instance, such
as “my house at 35 Lincoln Avenue”; instances are coindexed to indicate they are the
same entity in multiple predicates. Relations are typed according to domain, range and
cardinality, and can also be marked as instances to indicate that they refer to specific
events or properties that hold at a particular time place, etc.
Databases and knowledge bases can both be represented as large collections of
triples. Knowledge bases differ from databases in that they are generally organized
around a hierarchical taxonomy, or ontology, of both entities and relations, allow-
ing for subsumption as inference and for knowledge to be separated into subgroups.
Knowledge bases differ from ontologies in that, like databases, they also contain a
larger set of specific knowledge (instances) that describes non-taxonomic relation-
ships between members and instances of the ontology’s concepts.
For instance, the sentence “My dog chases rabbits.” talks about a specific instance
of the class dog and its relationship to the generic class representing rabbits, per-
haps represented as the triple (DOG492 CHASING RABBIT-ANIMAL). To know that
this dog really is a member of what we consider as the class of all dogs, we would
need to add an ontological triple such as (DOG492 INSTANCE-OF DOG). To represent
the possessive grammatical relation in “my dog” we would need to agree on some
particular person (an instance) to represent the speaker of the utterance (PERSON142
INSTANCE-OF PERSON) and then also add a relation to indicate possession (DOG492
OWNED-BY PERSON142). Because language is ambiguous compared to semantic triples,
we wouldn’t want the word “my” to always be mapped to the same relation, for in-
stance, obtaining (PERSON366 OWNED-BY PERSON142) from the phrase “my friend”.
Like concepts, relations can also have instances since they can refer to particular
events with particular modifiers. For instance, in the sentence “My dog quickly chased
rabbits yesterday.” we would need to change the relation CHASING from the triple
above to (DOG492 CHASING141 RABBIT-ANIMAL) to indicate its modifiers, perhaps
with (CHASING141 SPEED QUICKLY) and (CHASING141 EVENT-TIME YESTERDAY).
We would also need to indicate the taxonomic relationship between the two relations,
</bodyText>
<sectionHeader confidence="0.483234" genericHeader="method">
(CHASING141 INSTANCE-OF CHASING).
</sectionHeader>
<bodyText confidence="0.958451272727273">
Because over the years different research groups have created differing ontologies,
it is important to have a common ontology (and arguably, mapping of lexical items to
classes in that ontology) for purposes such as evaluative comparison, even if imple-
mentations that acquire semantic triples can use any available ontology.
The TEXTCAP Semantic Interpreter 331
In keeping with the practice of much recent large-scale NLP, TEXTCAP uses Word-
Net (Fellbaum, 1998) as an underlying ontology and sense repository for generic
classes, giving it the ability to leverage recent NLP tools that rely on it, such as
for word sense disambiguation (Gliozzo et al., 2005). Thus given the sentence in
Figure 1(a), we are interested in producing the semantic triples in (b) where generic
entities and relations are grounded in WordNet.
</bodyText>
<sectionHeader confidence="0.960184" genericHeader="method">
5 Processing The Text
</sectionHeader>
<bodyText confidence="0.998807307692308">
To illustrate how TEXTCAP works, we follow how it processes the following para-
graph of newspaper text from the New York Times:
Amid the tightly packed row houses of North Philadelphia, a pioneer-
ing urban farm is providing fresh local food for a community that often
lacks it, and making money in the process. Greensgrow, a one-acre plot
of raised beds and greenhouses on the site of a former steel-galvanizing
factory, is turning a profit by selling its own vegetables and herbs as well
as a range of produce from local growers, and by running a nursery sell-
ing plants and seedlings. The farm earned about $10,000 on revenue of
$450,000 in 2007, and hopes to make a profit of 5 percent on $650,000 in
revenue in this, its 10th year, so it can open another operation elsewhere
in Philadelphia.
The first sentence as parsed by Charniak and converted into Lisp notation is:
</bodyText>
<equation confidence="0.967904730769231">
(S (PP (IN &amp;quot;Amid&amp;quot;)
(NP (NP (DT &amp;quot;the&amp;quot;) (ADJP (RB &amp;quot;tightly&amp;quot;) (VBN &amp;quot;packed&amp;quot;))
(NN &amp;quot;row&amp;quot;) (NNS &amp;quot;houses&amp;quot;))
(PP (IN &amp;quot;of&amp;quot;) (NP (NNP &amp;quot;North&amp;quot;) (NNP &amp;quot;Philadelphia&amp;quot;)))))
(PUNCTUATION COMMA)
(NP (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;pioneering&amp;quot;) (JJ &amp;quot;urban&amp;quot;) (NN &amp;quot;farm&amp;quot;))
(VP (AUX &amp;quot;is&amp;quot;)
(VP (VP (VBG &amp;quot;providing&amp;quot;)
(NP (JJ &amp;quot;fresh&amp;quot;) (JJ &amp;quot;local&amp;quot;) (NN &amp;quot;food&amp;quot;))
(PP (IN &amp;quot;for&amp;quot;)
(NP (NP (DT &amp;quot;a&amp;quot;) (NN &amp;quot;community&amp;quot;))
(SBAR (WHNP (WDT &amp;quot;that&amp;quot;))
(S (ADVP (RB &amp;quot;often&amp;quot;))
(VP (VBZ &amp;quot;lacks&amp;quot;) (NP (PRP &amp;quot;it&amp;quot;))))))))
(PUNCTUATION COMMA)
(CC &amp;quot;and&amp;quot;)
(VP (VBG &amp;quot;making&amp;quot;)
(NP (NN &amp;quot;money&amp;quot;))
(PP (IN &amp;quot;in&amp;quot;) (NP (DT &amp;quot;the&amp;quot;) (NN &amp;quot;process&amp;quot;)))))))
(a) &amp;quot;My dog quickly chased rabbits yesterday.&amp;quot;
(b) (DOG492 INSTANCE-OF DOG#n1)
(PERSON142 INSTANCE-OF PERSON#n1)
(CHASING141 INSTANCE-OF CHASING#v1)
(DOG492 CHASING141 RABBIT#n1)
(CHASING141 SPEED QUICKLY#adv1)
(CHASING141 EVENT-TIME YESTERDAY#adv1)
</equation>
<figureCaption confidence="0.996955">
Figure 1: WordNet senses as generic entities and relations
</figureCaption>
<figure confidence="0.253129">
332 Callaway
</figure>
<bodyText confidence="0.9979444">
We first normalize this from the form used by the Charniak and Collins parsers
(which do no semantic role labelling and introduce some simplifications) into a cor-
rected version following the original Penn TreeBank format. In the above parse, the
following lines are normalized to mark grammatical subject and correctly mark the
auxiliary verb:
</bodyText>
<equation confidence="0.9669198">
. . .
(NP-SBJ (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;pioneering&amp;quot;) (JJ &amp;quot;urban&amp;quot;) (NN &amp;quot;farm&amp;quot;))
(VP (VBZ &amp;quot;is&amp;quot;)
(VP (VP (VBG &amp;quot;providing&amp;quot;)
. . .
</equation>
<bodyText confidence="0.999993571428571">
We then apply a customized discourse parser which converts full syntactic parses
into subparses headed by single verb relations. This is done using purely syntac-
tic information to break up coordinate, subordinate and relative clauses while adding
coindexed traces at the appropriate parse level and introducing a new tree-level tag
DR for discourse relations marked according to Rhetorical Structure Theory (Mann
and Thompson, 1987). All three sentences in the paragraph above are thus converted
into the following 13 discourse parses:
</bodyText>
<equation confidence="0.742868279069767">
(S (PP (IN &amp;quot;Amid&amp;quot;)
(NP (NP (DT &amp;quot;the&amp;quot;) (ADJP (RB &amp;quot;tightly&amp;quot;) (VBN &amp;quot;packed&amp;quot;))
(NN &amp;quot;row&amp;quot;)(NNS &amp;quot;houses&amp;quot;))
(PP (IN &amp;quot;of&amp;quot;) (NP (NNP &amp;quot;North&amp;quot;) (NNP &amp;quot;Philadelphia&amp;quot;)))))
(PUNCTUATION COMMA)
(NP-SBJ (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;pioneering&amp;quot;) (JJ &amp;quot;urban&amp;quot;) (NN &amp;quot;farm&amp;quot;) (TRACE 1))
(VP (VBZ &amp;quot;is&amp;quot;)
(VP (VP (VBG &amp;quot;providing&amp;quot;)
(NP (JJ &amp;quot;fresh&amp;quot;) (JJ &amp;quot;local&amp;quot;) (NN &amp;quot;food&amp;quot;))
(PP (IN &amp;quot;for&amp;quot;)
(NP (DT &amp;quot;a&amp;quot;) (NN &amp;quot;community&amp;quot;) (TRACE 2)))))))
(S (NP-SBJ (DT &amp;quot;a&amp;quot;) (NN &amp;quot;community&amp;quot;) (TRACE 2))
(ADVP (RB &amp;quot;often&amp;quot;))
(VP (VBZ &amp;quot;lacks&amp;quot;) (NP (PRP &amp;quot;it&amp;quot;))))
(S (NP-SBJ (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;pioneering&amp;quot;) (JJ &amp;quot;urban&amp;quot;) (NN &amp;quot;farm&amp;quot;) (TRACE 1))
(VP (VBZ &amp;quot;is&amp;quot;)
(VP (VBG &amp;quot;making&amp;quot;)
(NP (NN &amp;quot;money&amp;quot;))
(PP (IN &amp;quot;in&amp;quot;) (NP (DT &amp;quot;the&amp;quot;) (NN &amp;quot;process&amp;quot;))))))
(S (NP-SBJ (NNP &amp;quot;Greensgrow&amp;quot;) (TRACE 3))
(VP (VBZ &amp;quot;is&amp;quot;)
(NP (NP (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;one-acre&amp;quot;) (NN &amp;quot;plot&amp;quot;))
(PP (IN &amp;quot;of&amp;quot;)
(NP (NP (VBN &amp;quot;raised&amp;quot;) (NNS &amp;quot;beds&amp;quot;)
(CC &amp;quot;and&amp;quot;) (NNS &amp;quot;greenhouses&amp;quot;))
(PP (IN &amp;quot;on&amp;quot;)
(NP (NP (DT &amp;quot;the&amp;quot;) (NN &amp;quot;site&amp;quot;))
(PP (IN &amp;quot;of&amp;quot;)
(NP (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;former&amp;quot;)
(JJ &amp;quot;steel-galvanizing&amp;quot;)
(NN &amp;quot;factory&amp;quot;))))))))))
(S (NP-SBJ (NNP &amp;quot;Greensgrow&amp;quot;) (TRACE 3))
(VP (VBZ &amp;quot;is&amp;quot;)
(VP (VBG &amp;quot;turning&amp;quot;)
(NP (DT &amp;quot;a&amp;quot;) (NN &amp;quot;profit&amp;quot;))))
(TRACE 4))
(S (NP-SBJ (NNP &amp;quot;Greensgrow&amp;quot;) (TRACE 3))
(VP (VBZ &amp;quot;is&amp;quot;)
(VP (VBG &amp;quot;selling&amp;quot;)
(NP (NP (PRP-POSS &amp;quot;its&amp;quot;) (JJ &amp;quot;own&amp;quot;)
(NNS &amp;quot;vegetables&amp;quot;) (CC &amp;quot;and&amp;quot;) (NNS &amp;quot;herbs&amp;quot;))
(CONJP (RB &amp;quot;as&amp;quot;) (RB &amp;quot;well&amp;quot;) (IN &amp;quot;as&amp;quot;))
(NP (NP (DT &amp;quot;a&amp;quot;) (NN &amp;quot;range&amp;quot;))
</equation>
<table confidence="0.97554473076923">
(PP (IN &amp;quot;of&amp;quot;) (NP (NN &amp;quot;produce&amp;quot;)))))
(PP (IN &amp;quot;from&amp;quot;) (NP (JJ &amp;quot;local&amp;quot;) (NNS &amp;quot;growers&amp;quot;)))))
(TRACE 5))
(S (NP-SBJ (NNP &amp;quot;Greensgrow&amp;quot;) (TRACE 3))
(VP (VBZ &amp;quot;is&amp;quot;)
(VP (VBG &amp;quot;running&amp;quot;)
(NP (NP (DT &amp;quot;a&amp;quot;) (NN &amp;quot;nursery&amp;quot;)))))
(TRACE 6))
(S (NP-SBJ (NNP &amp;quot;Greensgrow&amp;quot;) (TRACE 3))
The TEXTCAP Semantic Interpreter 333
(VP (VBZ &amp;quot;is&amp;quot;)
(VP (VBG &amp;quot;selling&amp;quot;)
(NP (NNS &amp;quot;plants&amp;quot;) (CC &amp;quot;and&amp;quot;) (NNS &amp;quot;seedlings&amp;quot;)))))
(DR (MEANS (TRACE 4) (TRACE 5) (TRACE 6)))
(S (NP-SBJ (DT &amp;quot;The&amp;quot;) (NN &amp;quot;farm&amp;quot;) (TRACE 7))
(VP (VBD &amp;quot;earned&amp;quot;)
(NP (QP (RB &amp;quot;about&amp;quot;) (CURRENCY DOLLAR-SIGN) (CD 10000)))
(PP (IN &amp;quot;on&amp;quot;)
(NP (NP (NN &amp;quot;revenue&amp;quot;))
(PP (IN &amp;quot;of&amp;quot;)
(NP (CURRENCY DOLLAR-SIGN) (CD 450000)))))
(PP (IN &amp;quot;in&amp;quot;) (NP (CD 2007)))))
(S (NP-SBJ (DT &amp;quot;The&amp;quot;) (NN &amp;quot;farm&amp;quot;) (TRACE 7))
(VP (VBZ &amp;quot;hopes&amp;quot;) (S (VP (TO &amp;quot;to&amp;quot;) (VP (VBP &amp;quot;make&amp;quot;)
(NP (NP (NP (DT &amp;quot;a&amp;quot;) (NN &amp;quot;profit&amp;quot;))
(PP (IN &amp;quot;of&amp;quot;)
(NP (NP (CD 5) (NN &amp;quot;percent&amp;quot;))
(PP (IN &amp;quot;on&amp;quot;)
(NP (NP (CURRENCY DOLLAR-SIGN) (CD 650000))
(PP (IN &amp;quot;in&amp;quot;)
(NP (NP (NN &amp;quot;revenue&amp;quot;))
(PP (IN &amp;quot;in&amp;quot;)
(NP (DT &amp;quot;this&amp;quot;))))))))))
(PUNCTUATION COMMA)
(NP-TMP (PRP-POSS &amp;quot;its&amp;quot;) (JJ &amp;quot;10th&amp;quot;)
(NN &amp;quot;year&amp;quot;)))))))
(TRACE 8))
(S (NP-SBJ (PRP &amp;quot;it&amp;quot;))
(VP (MD &amp;quot;can&amp;quot;)
(VP (VBP &amp;quot;open&amp;quot;)
(NP (DT &amp;quot;another&amp;quot;) (NN &amp;quot;operation&amp;quot;))
(PP (ADVP (RB &amp;quot;elsewhere&amp;quot;))
(IN &amp;quot;in&amp;quot;)
(NP (NNP &amp;quot;Philadelphia&amp;quot;)))))
(TRACE 9))
(DR (EVENT-ENABLES (TRACE 8) (TRACE 9)))
Next, TEXTCAP adds grammatical features at the NP level to allow for eventual
anaphora resolution. Given a simplified version of sentence 5 above, “Greensgrow
sells vegetables.”:
(S (NP-SBJ (NNP &amp;quot;Greensgrow&amp;quot;))
(VP (VBZ &amp;quot;sells&amp;quot;)
(NP (NNS &amp;quot;vegetables&amp;quot;))))
</table>
<bodyText confidence="0.9884486">
One ad-hoc rule matches to the unmodified plural noun and marks it as being a
generic class rather than an instance and stems the lexical item. Another rule notes
that the subject is a proper noun that is not in its stoplist of person names. As it is not
the object of a preposition, it is marked as a company name (via the WordNet sense).
Additional senses are assigned if, for instance, only one sense is possible.
</bodyText>
<table confidence="0.813669">
(S (NP-SBJ (NNP &amp;quot;Greensgrow&amp;quot;) (TYPE COMPANY#n1)
(GENDER NEUTRAL))
(VP (VBZ &amp;quot;sells&amp;quot;)
(NP (NN &amp;quot;vegetable&amp;quot;) (NUMBER PLURAL)
(GENERIC YES) (GENDER NEUTRAL))))
</table>
<bodyText confidence="0.966283">
Next, we map grammatical subjects and objects to logical ones, undoing passiviza-
tion, etc. Then we mark verb type and semantic roles by matching selectional restric-
tions (currently based on ad-hoc rules) between the verb and its principal arguments.
Modifiers of an NP are processed as semantic triples dependent on that NP’s instance,
and similarly for verbal modifiers.
</bodyText>
<figure confidence="0.50301">
334 Callaway
&lt;relation&gt; = (NP-SBJ (VP (VBZ &amp;quot;sells&amp;quot;) NP)
(TRACE 5))
--&gt; (&lt;agent&gt; SELL#v? &lt;patient&gt;)
&lt;agent&gt; = ((NNP &amp;quot;Greensgrow&amp;quot;) (TYPE COMPANY#n1)
--&gt; COMPANY#n1(name=&amp;quot;Greensgrow&amp;quot;,
gender=neutral)
&lt;patient&gt; = (NP (NNS &amp;quot;vegetable&amp;quot;) ...)
--&gt; VEGETABLE#n?(generic=yes,
gender=neutral,
number=plural)
</figure>
<bodyText confidence="0.985460571428571">
Anaphora resolution rules search NPs and their feature lists in reverse to exclude
impossible coreferences; TEXTCAP currently uses the first acceptable NP as its coref-
erent. Next, word sense disambiguation is applied. Because we use WordNet senses
as an underlying foundation, we can pass a bag of nearby senses using existing pub-
lished WSD algorithms, although we are currently testing the degree of performance
improvement between simple baselines and custom algorithms. After WSD, we give
instance names to each type/sense and drop information on generic entities.
</bodyText>
<equation confidence="0.99935075">
&lt;relation&gt; = (&lt;agent&gt; SELL#v1 &lt;patient&gt;), trace=5
&lt;agent&gt; = COMPANY#n1(name=&amp;quot;Greensgrow&amp;quot;,
inst=COMPANY549)
&lt;patient&gt; = VEGETABLE#n1
</equation>
<bodyText confidence="0.999830666666667">
Next, we build a list of coindexed semantic triples directly from the above repre-
sentation. If no sentence-level traces or modifiers are dependent on the verbal relation,
it is treated as a generic instance.
</bodyText>
<equation confidence="0.987476333333333">
(COMPANY549 INSTANCE-OF COMPANY#n1)
(COMPANY549 NAME &amp;quot;Greensgrow&amp;quot;)
(COMPANY549 SELL#v1 VEGETABLE#n1)
</equation>
<bodyText confidence="0.9994425">
After repeating this process for each standard sentence-level parse, triples repre-
senting discourse relations are then included for each dependency, for instance:
</bodyText>
<equation confidence="0.9832524">
(DR (EVENT-ENABLES (TRACE 8) (TRACE 9)))
(FARM381 MAKING287 PROFIT#n1)
(FARM381 OPENING286 OPERATION#n2)
(MAKING287 EVENT-ENABLES OPENING286)
6 Performance on the Shared Task
</equation>
<bodyText confidence="0.973313357142857">
Overall, TEXTCAP performed well for its intended purpose, but many limitations were
encountered on unseen texts, as expected. Principally, word sense disambiguation and
pronoun resolution initially caused significant problems in terms of robustness and the
capabilities of these text processing steps were significantly downgraded in order that
TEXTCAP could run to completion on all seven sets of unseen texts. Thus WSD was
run only for WordNet noun senses and pronoun resolution was not run across sentence
boundaries within each set. Additionally, the discourse parser lacked rules to correctly
convert sentences #1 and #4 in set #5, so the input sentences were manually split in
that case.
The TEXTCAP Semantic Interpreter 335
However, TEXTCAP was able to do a good job at producing semantic triples for
every text, and the number of triples was proportional to the length of each sentence,
as expected. The use of existing lexical tools and resources allows for more time to
be spent on adding and correcting semantic mappings. Some necessary lexical tools
are either not available or still limited in terms of accuracy, and some resources do not
exist, for instance, there is no good ontological inventory of prepositions and how they
should be mapped semantically. In general, overall accuracy (as measured by human
inspection) was much better on shorter sentences.
The system performed poorly in some areas such as interpreting questions and quo-
tations involving multiple sentences. Additionally, the structure of many of the triples
that TEXTCAP produced were highly reflective on the original syntactic parses — it is
not clear, for instance, that they would enable a question answering system to locate
correct answers reliably. However, overall, we believe that post-editing of triples with
TEXTCAP would provide a significant time speedup compared to manual knowledge
engineering alone, and we are looking at methods of showing this empirically.
The following data represent the performance of TEXTCAP on the 2008 STEP
shared task. Sentences were processed in an average time of 4 seconds each.
Set #1
</bodyText>
<listItem confidence="0.54063625">
[1] “An object is thrown with a horizontal speed of 20 m/s from a cliff that is 125
m high.”
Notes: (a) the parser interpreted “m/s” as a plural noun; (b) source is a very vague
relation; (c) cliff was correctly recognized as a relative clause subject.
</listItem>
<equation confidence="0.999527714285715">
((OBJECT001 INSTANCE-OF OBJECT#1)
(SPEED001 INSTANCE-OF SPEED#1)
(M/001 INSTANCE-OF M/#0)
(CLIFF001 INSTANCE-OF CLIFF#1)
(NUMBER10 INSTANCE-OF NUMBER)
(UNKNOWN-AGENT THROWING OBJECT001)
(MANNER-WITH THROWING SPEED001)
(SPEED001 RANGE-OF M/001)
(M/001 SOURCE CLIFF001)
(M/001 NUMERIC-QUANTITY 20)
(SPEED001 CHARACTERISTICS HORIZONTAL)
(TIME-PERIOD THROWING PRESENT)
(NUMBER10 HAS-VALUE 125)
(CLIFF001 BEING NUMBER10))
</equation>
<bodyText confidence="0.8466215">
[2] “The object falls for the height of the cliff.”
Notes: (a) for was incorrectly intepreted as purpose (“object” would be animate); (b)
of yielded the wrong relation; (c) it’s unclear what should be the 3rd element of the
triple for falling.
</bodyText>
<equation confidence="0.489204666666667">
((OBJECT001 INSTANCE-OF OBJECT#1)
(HEIGHT001 INSTANCE-OF HEIGHT#1)
(CLIFF001 INSTANCE-OF CLIFF#1)
(OBJECT001 FALLING INTRANSITIVE-ARGUMENT)
(FALLING PURPOSE-FOR HEIGHT001)
(HEIGHT001 RANGE-OF CLIFF001))
</equation>
<figure confidence="0.735621294117647">
336 Callaway
[3] “If air resistance is negligible, how long does it take the object to fall to the
ground?”
Notes: This sentence was not processed satisfactorily due to no rules to detect ques-
tions of the form “how [adjp]”.
[4] “What is the duration of the fall?”
Notes: This sentence was processed satisfactorily.
Set #2
[1] “Cervical cancer is caused by a virus.”
Notes: (a) probably better to map cervical to cervix to allow for semantic process-
ing in, e.g., a question answering system.
((VIRUS001 INSTANCE-OF VIRUS#1)
(CANCER001 INSTANCE-OF CANCER#1)
(VIRUS001 CAUSING CANCER001)
(CANCER001 CHARACTERISTICS CERVICAL))
[2 “That has been known for some time and it has led to a vaccine that seems to
prevent it.”
</figure>
<figureCaption confidence="0.316650666666667">
Notes: (a) the system has more trouble mapping situational referents, but it did cor-
rectly notice one was present; (b) need more mappings for for besides purpose; (c)
need to map from grammatical tense to relational tense.
</figureCaption>
<equation confidence="0.79203325">
((SITUATION001 INSTANCE-OF UNKNOWN-REFERENT)
(TIME001 INSTANCE-OF TIME#1)
(VACCINE001 INSTANCE-OF VACCINE#1)
(SITUATION001 KNOWING INTRANSITIVE-ARGUMENT)
(KNOWING PURPOSE-FOR TIME001)
(TIME001 QUANTIFIER-VALUE SOME)
(TIME-PERIOD KNOWING PAST-HABITUAL-ACTION)
(SINGLE-NEUTER-REFERENT LEADING INTRANSITIVE-ARGUMENT)
(DESTINATION LEADING VACCINE001)
(TIME-PERIOD LEADING PRESENT-PERFECT)
(VACCINE001 PREVENTING001 SINGLE-NEUTER-REFERENT)
(VACCINE001 SEEMING PREVENTING001))
</equation>
<bodyText confidence="0.551654666666667">
[3] “Researchers have been looking for other cancers that may be caused by viruses.”
Notes: (a) didn’t map looking and for as a single verbal relation; (b) the treatment
of quantifiers is too simplistic (other).
</bodyText>
<equation confidence="0.450157">
((RESEARCHER001 INSTANCE-OF RESEARCHER#1)
(CANCER001 INSTANCE-OF CANCER#1)
(VIRUS001 INSTANCE-OF VIRUS#1)
</equation>
<footnote confidence="0.826313">
(RESEARCHER001 LOOKING INTRANSITIVE-ARGUMENT)
(RESEARCHER001 NUMBER-OF-UNITS MORE-THAN-ONE)
(LOOKING PURPOSE-FOR CANCER001)
(CANCER001 CHARACTERISTICS OTHER-ADJ)
(CANCER001 NUMBER-OF-UNITS MORE-THAN-ONE)
(TIME-PERIOD LOOKING PAST-HABITUAL-ACTION)
(VIRUS001 CAUSING CANCER001)
(VIRUS001 NUMBER-OF-UNITS MORE-THAN-ONE)
(MODALITY CAUSING MODAL-MAY))
</footnote>
<table confidence="0.697682471698113">
The TEXTCAP Semantic Interpreter 337
Set #3
We skip this set of sentences as TEXTCAP seemed to perform very well on set #3
excepting the pronouns in sentence #5.
Set #4
[1] “The first school for the training of leader dogs in the country is going to be
created in Mortagua and will train 22 leader dogs per year.”
Notes: (a) Mortagua wasn’t treated as a city name; (b) incorrect treatment of complex
passive verb phrases (“going” is not a main verb); the same semantic object school
is correctly noted as being involved in both phrases.
((SCHOOL001 INSTANCE-OF SCHOOL#1)
(MORTAGUA001 INSTANCE-OF PERSON#1)
(MORTAGUA001 ACTOR-NAME &amp;quot;Mortagua&amp;quot;)
(MORTAGUA001 ACTOR-GENDER NEUTER)
(DOG001 INSTANCE-OF DOG#1)
(YEAR001 INSTANCE-OF YEAR#1)
(SCHOOL001 GOING INTRANSITIVE-ARGUMENT)
(SCHOOL001 CHARACTERISTICS FIRST)
(GOING LOCATION-IN MORTAGUA001)
(TIME-PERIOD GOING PRESENT-PROGRESSIVE)
(SCHOOL001 TRAINING DOG001)
(DOG001 PER YEAR001)
(DOG001 NAMED-TYPE LEADER#1)
(DOG001 NUMBER-OF-UNITS MORE-THAN-ONE)
(TIME-PERIOD TRAINING FUTURE))
[2] “In Mortagua, Joao Pedro Fonseca and Marta Gomes coordinate the project that
seven people develop in this school.”
Notes: This sentence was processed satisfactorily.
[3] “They visited several similar places in England and in France, and two future
trainers are already doing internship in one of the French Schools.”
Notes: (a) not a good quantifier representation for several; (b) any proper NP is
being interpreted as a person.
((PLACE001 INSTANCE-OF PLACE#1)
(TRAINER001 INSTANCE-OF TRAINER#1)
(INTERNSHIP001 INSTANCE-OF INTERNSHIP#1)
(NUMBER11 INSTANCE-OF NUMBER)
(FRENCH-SCHOOLS001 INSTANCE-OF PERSON#1)
(FRENCH-SCHOOLS001 ACTOR-NAME &amp;quot;French Schools&amp;quot;)
(FRENCH-SCHOOLS001 ACTOR-GENDER NEUTER)
(PLURAL-THIRD-PERSON-REFERENT VISITING PLACE001)
(PLACE001 CHARACTERISTICS SEVERAL)
(PLACE001 CHARACTERISTICS SIMILAR)
(PLACE001 NUMBER-OF-UNITS MORE-THAN-ONE)
(TIME-PERIOD VISITING PAST)
(TRAINER001 DOING INTERNSHIP001)
(TRAINER001 WRITTEN-NUMERIC-QUANTITY 2)
(TRAINER001 CHARACTERISTICS FUTURE)
338 Callaway
(TRAINER001 NUMBER-OF-UNITS MORE-THAN-ONE)
(DURATION DOING ALREADY)
(DOING LOCATION-IN NUMBER11)
(NUMBER11 RANGE-OF FRENCH-SCHOOLS001)
(TIME-PERIOD DOING PRESENT-PROGRESSIVE))
</table>
<bodyText confidence="0.67315375">
[4] “The communitarian funding ensures the operation of the school until 1999.”
Notes: This sentence was relatively uninteresting.
[5] “We would like our school to work similarly to the French ones, which live
from donations, from the merchandising and even from the raffles that children sell in
school.”
Notes: This sentence was not processed satisfactorily due to missing discourse pars-
ing rules.
Set #5
</bodyText>
<listItem confidence="0.7616956">
[1] “As the 3 guns of Turret 2 were being loaded, a crewman who was operating
the center gun yelled into the phone, ‘I have a problem here. I am not ready yet.’ ”
Notes: (a) this sentence was manually split before the quotation; (b) another proper
NP interpreted as a person; (c) the system in general works well with quotations, but
not when they are composed of multiple sentences.
</listItem>
<equation confidence="0.8548719">
((GUN001 INSTANCE-OF GUN#1)
(TURRET-2001 INSTANCE-OF PERSON#1)
(TURRET-2001 ACTOR-NAME &amp;quot;Turret 2&amp;quot;)
(TURRET-2001 ACTOR-GENDER NEUTER)
(CREWMAN001 INSTANCE-OF CREWMAN#1)
(CENTER-GUN001 INSTANCE-OF CENTER-GUN#0)
(PROBLEM001 INSTANCE-OF PROBLEM#1)
(UNKNOWN-AGENT LOADING GUN001)
(GUN001 RANGE-OF TURRET-2001)
(GUN001 NUMERIC-QUANTITY 3)
</equation>
<sectionHeader confidence="0.982159166666666" genericHeader="method">
(TIME-PERIOD LOADING PAST-PROGRESSIVE)
(CREWMAN001 OPERATING CENTER-GUN001)
(TIME-PERIOD OPERATING PAST-PROGRESSIVE)
(PROBLEM001 BEING READY)
(DURATION BEING YET)
(POLARITY BEING NEGATIVE))
</sectionHeader>
<bodyText confidence="0.697368545454546">
[2] “Then the propellant exploded.”
Notes: This sentence was processed satisfactorily.
[3] “When the gun crew was killed they were crouching unnaturally, which sug-
gested that they knew that an explosion would happen.”
Notes: This sentence presented more syntactic than semantic issues.
[4] “The propellant that was used was made from nitrocellulose chunks that were
produced during World War II and were repackaged in 1987 in bags that were made
in 1945.”
Notes:
[5] “Initially it was suspected that this storage might have reduced the powder’s
stability.”
</bodyText>
<note confidence="0.782786">
The TEXTCAP Semantic Interpreter 339
Notes: (a) the possessive noun powder was incorrectly marked as a person; (b) the
time and modality markers are a bit vague.
</note>
<table confidence="0.702032690476191">
((STORAGE001 INSTANCE-OF STORAGE#1)
(STABILITY001 INSTANCE-OF STABILITY#1)
(POWDER001 INSTANCE-OF PERSON#1)
(POWDER001 ACTOR-NAME &amp;quot;powder&amp;quot;)
(POWDER001 ACTOR-GENDER NEUTER)
(UNKNOWN-AGENT SUSPECTING REDUCING)
(STORAGE001 REDUCING STABILITY001)
(TIME SUSPECTING INITIALLY)
(TIME-PERIOD REDUCING PRESENT-PERFECT)
(MODALITY REDUCING MODAL-MIGHT)
(TIME-PERIOD SUSPECTING PAST))
Set #6
Data in this set was used to test TEXTCAP and so is not analyzed here.
Set #7
[1] “Modern development of wind-energy technology and applications was well
underway by the 1930s, when an estimated 600,000 windmills supplied rural areas
with electricity and water-pumping services.”
Notes: (a) couldn’t convert 1930s to a date range; (b) underway was treated as a verb
by the parser; (c) more problems mapping prepositional relations.
((DEVELOPMENT001 INSTANCE-OF DEVELOPMENT#1)
(TECHNOLOGY001 INSTANCE-OF TECHNOLOGY#1)
(APPLICATION001 INSTANCE-OF APPLICATION#1)
(NUMBER24 INSTANCE-OF NUMBER)
(NUMBER24 HAS-VALUE &amp;quot;1930&amp;quot;)
(WINDMILL001 INSTANCE-OF WINDMILL#1)
(AREA001 INSTANCE-OF AREA#1)
(ELECTRICITY001 INSTANCE-OF ELECTRICITY#1)
(SERVICE001 INSTANCE-OF SERVICE#1)
(UNKNOWN-AGENT UNDERWAY DEVELOPMENT001)
(DEVELOPMENT001 RANGE-OF TECHNOLOGY001)
(DEVELOPMENT001 RANGE-OF APPLICATION001)
(TECHNOLOGY001 CHARACTERISTICS WIND-ENERGY)
(APPLICATION001 NUMBER-OF-UNITS MORE-THAN-ONE)
(DEVELOPMENT001 CHARACTERISTICS MODERN)
(DURATION UNDERWAY WELL)
(TIME-BY UNDERWAY NUMBER24)
(NUMBER24 NUMBER-OF-UNITS MORE-THAN-ONE)
(TIME-PERIOD UNDERWAY PAST)
(WINDMILL001 SUPPLYING AREA001)
(WINDMILL001 NUMERIC-QUANTITY 600000)
(AREA001 HAVE-WITH ELECTRICITY001)
(AREA001 HAVE-WITH SERVICE001)
</table>
<footnote confidence="0.9364532">
(SERVICE001 NAMED-TYPE WATER-PUMPING#0)
(SERVICE001 NUMBER-OF-UNITS MORE-THAN-ONE)
(AREA001 CHARACTERISTICS RURAL)
(AREA001 NUMBER-OF-UNITS MORE-THAN-ONE)
(TIME-PERIOD SUPPLYING PAST))
</footnote>
<note confidence="0.533844">
340 Callaway
</note>
<bodyText confidence="0.985108882352941">
[2] “Once broad-scale electricity distribution spread to farms and country towns,
use of wind energy in the United States started to subside, but it picked up again after
the U.S. oil shortage in the early 1970s.”
Notes: Notes: This sentence was processed satisfactorily, but only when manually
split due to missing discourse parsing rules.
[3] “Over the past 30 years, research and development has fluctuated with federal
government interest and tax incentives.”
Notes: This sentence was processed satisfactorily.
[4] “In the mid-’80s, wind turbines had a typical maximum power rating of 150
kW.”
Notes: This sentence had problems understanding the phrase “mid-’80s”, perhaps as
a result of the off-the-shelf parser being very generic.
[5] “In 2006, commercial, utility-scale turbines are commonly rated at over 1 MW
and are available in up to 4 MW capacity.”
Notes: (a) the fact that someone rates turbines isn’t the same as turbines carrying a
rating; commonly wasn’t interpreted correctly; (c) the last phrase after available
wasn’t mapped to anything.
</bodyText>
<equation confidence="0.576568545454546">
((TURBINE001 INSTANCE-OF TURBINE#1)
(DATE26 INSTANCE-OF DATE)
(DATE26 HAS-YEAR 2006)
(UNKNOWN-AGENT RATING TURBINE001)
(TURBINE001 CHARACTERISTICS COMMERCIAL)
(TURBINE001 CHARACTERISTICS UTILITY-SCALE)
(TURBINE001 NUMBER-OF-UNITS MORE-THAN-ONE)
(FREQUENCY RATING COMMONLY)
(TIME-IN RATING DATE26)
(TURBINE001 BEING AVAILABLE)
(TURBINE001 NUMBER-OF-UNITS MORE-THAN-ONE))
</equation>
<sectionHeader confidence="0.984813" genericHeader="conclusions">
7 Conclusions
</sectionHeader>
<bodyText confidence="0.97830125">
We introduced TEXTCAP, a semantic parser which uses a combination of off-the-
shelf NLP technology and ad-hoc rules to produce semantic triples corresponding to
the explicit semantic content in unrestricted text. We ran TEXTCAP on 7 sets of short
text in the STEP 2008 Shared Task, and the system successfully generated triples
for almost all inputs and provided, as we expected, a set of triples that while not fully
correct, could be post-edited for accuracy and which should provide a significant speed
up over completely manual production of semantic triples from text. On average,
TEXTCAP processed a sentence from the corpus in about 4 seconds.
While TEXTCAP only captures explicit knowledge (but not commonsense knowl-
edge, unmentioned knowledge, implicit relationships, etc.) it can save knowledge
engineers time by providing reasonably accurate semantic representations of domain
text. In future work we plan on improving methods of knowledge integration (e.g.,
ontology population), testing within real-world applications such as question answer-
ing systems, and empirically evaluating the time and accuracy for producing semantic
triples via various methods.
The TEXTCAP Semantic Interpreter 341
</bodyText>
<sectionHeader confidence="0.972537" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9946964">
Barker, K., B. Agashe, S. Chaw, J. Fan, N. Friedland, M. Glass, J. Hobbs, E. Hovy,
D. Israel, D. S. Kim, R. Mulkar-Mehta, S. Patwardhan, B. Porter, D. Tecuci, and
P. Yeh (2007, July). Learning by reading: A prototype system, performance base-
line and lessons learned. In Proceedings of the 22nd National Conference on Arti-
ficial Intelligence (AAAI), Vancouver, Canada.
Blythe, J., J. Kim, S. Ramachandran, and Y. Gil (2001). An integrated environment
for knowledge acquisition. In Proceedings of the 2001 International Conference
on Intelligent User Interfaces, Santa Fe, NM, USA.
Bos, J. (2008). Introduction to the Shared Task on Comparing Semantic Representa-
tions. In J. Bos and R. Delmonte (Eds.), Semantics in Text Processing. STEP 2008
Conference Proceedings, Volume 1 of Research in Computational Semantics, pp.
257–261. College Publications.
Brachman, R. J. and J. G. Schmolze (1985, April). An overview of the KL-ONE
knowledge representation system. Cognitive Science 9(2), 171–216.
Callaway, C., E. Not, A. Novello, C. Rocchi, O. Stock, and M. Zancanaro (2005,
June). Automatic cinematography and multilingual NLG for generating video doc-
umentaries. Artificial Intelligence 165(1), 57–89.
Carenini, G., R. T. Ng, and E. Zwart (2005). Extracting knowledge from evaluative
text. In K-CAP ’05: Proceedings of the 3rd International Conference on Knowl-
edge Capture, Banff, Canada, pp. 11–18.
Charniak, E. (2000, April). A maximum-entropy-inspired parser. In Proceedings of
the 2000 NAACL, Seattle, WA.
Clark, P. and B. Porter (1998). KM – the knowledge machine: Users manual. Techni-
cal report, AI Lab, University of Texas at Austin.
Clark, P., J. Thompson, K. Barker, B. Porter, V. Chaudhri, A. Rodriguez, J. Thomr,
Y. Gil, and P. Hayes (2001, October). Knowledge entry as the graphical assembly
of components: The SHAKEN system. In Proceedings of the First International
Conference on Knowledge Capture (KCAP), Victoria BC, Canada.
Collins, M. (1999). Head-driven Statistical Models for Natural Language Parsing.
Ph. D. thesis, University of Pennsylvania.
Fellbaum, C. (1998). WordNet: An electronic lexical database. The MIT Press.
Gildea, D. and D. Jurafsky (2002). Automatic labeling of semantic roles. Computa-
tional Linguistics 28(3), 245–288.
Gliozzo, A., C. Giuliano, and C. Strapparava (2005, June). Domain kernels for word
sense disambiguation. In Proceedings of the 43th Annual Meeting of the Associa-
tion for Computational Linguistics, Ann Arbor, MI, pp. 403–410.
342 Callaway
Lester, J. C. and B. W. Porter (1997). Developing and empirically evaluating ro-
bust explanation generators: The KNIGHT experiments. Computational Linguis-
tics 23(1), 65–101.
Mann, W. C. and S. A. Thompson (1987, June). Rhetorical structure theory: A theory
of text organization. Technical Report ISI/RS-87-190, USC/Information Sciences
Institute, Marina del Rey, CA.
Marcus, M., B. Santorini, and M. Marcinkiewicz (1993). Building a large annotated
corpus of English: The PennTreeBank. Computational Linguistics 19(2), 313–330.
Poesio, M. and M. A. Kabadjov (2004, May). A general-purpose, off-the-shelf system
for anaphora resolution. In Proceedings of the Language Resources and Evaluation
Conference, Lisbon, Portugal.
Reiter, E., S. Sripada, and R. Robertson (2003). Acquiring correct knowledge for
natural language generation. Journal of Artificial Intelligence Research 18, 491–
516.
Soricut, R. and D. Marcu (2003, May). Sentence level discourse parsing using syn-
tactic and lexical information. In Proceedings of HLT-NAACL, Edmonton, Alberta.
Stock, O., M. Zancanaro, P. Busetta, C. Callaway, A. Krueger, M. Kruppa, T. Kuflik,
E. Not, and C. Rocchi (2007). Adaptive, intelligent presentation of information
for the museum visitor in peach. User Modeling and User Adapted Interaction 17,
257–304.
Yeh, P., B. Porter, and K. Barker (2006, July). A unified knowledge based approach
for sense disambiguation and semantic role labeling. In Proceedings of the Twenty-
First National Conference on Artificial Intelligence, Boston, MA.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.577832">
<title confidence="0.991662">Interpreter</title>
<author confidence="0.999746">Charles B Callaway</author>
<affiliation confidence="0.998579">University of Edinburgh (UK)</affiliation>
<abstract confidence="0.999345470588235">The lack of large amounts of readily available, explicitly represented knowledge has long been recognized as a barrier to applications requiring semantic knowledge such as machine translation and question answering. This problem is analogous to that facing machine translation decades ago, where one proposed solution was to use human translators to post-edit automatically produced, low quality translations rather than expect a computer to independently create high-quality translations. This paper describes an attempt at implementing a semantic parser that takes unrestricted English text, uses publically available computational linguistics tools and lexical resources and as output produces semantic triples which can be used in a variety of tasks such as generating knowledge bases, providing raw material for question answering systems, or creating structures. We describe the detail the semantic representation it produces, illustrate step by step how processes a short text, and use its results on unseen texts to discuss the amount of post-editing that might be realistically required.</abstract>
<address confidence="0.7552045">327 328 Callaway</address>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>K Barker</author>
<author>B Agashe</author>
<author>S Chaw</author>
<author>J Fan</author>
<author>N Friedland</author>
<author>M Glass</author>
<author>J Hobbs</author>
<author>E Hovy</author>
<author>D Israel</author>
<author>D S Kim</author>
<author>R Mulkar-Mehta</author>
<author>S Patwardhan</author>
<author>B Porter</author>
<author>D Tecuci</author>
<author>P Yeh</author>
</authors>
<title>Learning by reading: A prototype system, performance baseline and lessons learned.</title>
<date>2007</date>
<booktitle>In Proceedings of the 22nd National Conference on Artificial Intelligence (AAAI),</booktitle>
<location>Vancouver, Canada.</location>
<contexts>
<context position="2415" citStr="Barker et al., 2007" startWordPosition="357" endWordPosition="360">ing to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003; Carenini et al., 2005; Barker et al., 2007), but large scale, domain independent, and fully automatic knowledge acquisition on unrestricted text is still in its infancy. Over the last decade research in applied computational linguistics has extended the various components necessary for semantic parsing, but have tended to focus on increasing the measurable performance of individual subtask in isolation (e.g., parsing, anaphora resolution, semantic role labelling, and word sense disambiguation) rather than on an entire end-to-end system. Meanwhile, theoretical CL research has examined issues such as underspecification, scoping and refer</context>
</contexts>
<marker>Barker, Agashe, Chaw, Fan, Friedland, Glass, Hobbs, Hovy, Israel, Kim, Mulkar-Mehta, Patwardhan, Porter, Tecuci, Yeh, 2007</marker>
<rawString>Barker, K., B. Agashe, S. Chaw, J. Fan, N. Friedland, M. Glass, J. Hobbs, E. Hovy, D. Israel, D. S. Kim, R. Mulkar-Mehta, S. Patwardhan, B. Porter, D. Tecuci, and P. Yeh (2007, July). Learning by reading: A prototype system, performance baseline and lessons learned. In Proceedings of the 22nd National Conference on Artificial Intelligence (AAAI), Vancouver, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Blythe</author>
<author>J Kim</author>
<author>S Ramachandran</author>
<author>Y Gil</author>
</authors>
<title>An integrated environment for knowledge acquisition.</title>
<date>2001</date>
<booktitle>In Proceedings of the 2001 International Conference on Intelligent User Interfaces,</booktitle>
<location>Santa Fe, NM, USA.</location>
<contexts>
<context position="2349" citStr="Blythe et al., 2001" startWordPosition="345" endWordPosition="348">• Question answering systems (Clark et al., 2001) that use reasoning to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003; Carenini et al., 2005; Barker et al., 2007), but large scale, domain independent, and fully automatic knowledge acquisition on unrestricted text is still in its infancy. Over the last decade research in applied computational linguistics has extended the various components necessary for semantic parsing, but have tended to focus on increasing the measurable performance of individual subtask in isolation (e.g., parsing, anaphora resolution, semantic role labelling, and word sense disambiguation) rather than on an entire end-to-end system. Meanwhile, theoretical CL research</context>
</contexts>
<marker>Blythe, Kim, Ramachandran, Gil, 2001</marker>
<rawString>Blythe, J., J. Kim, S. Ramachandran, and Y. Gil (2001). An integrated environment for knowledge acquisition. In Proceedings of the 2001 International Conference on Intelligent User Interfaces, Santa Fe, NM, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Bos</author>
</authors>
<title>Introduction to the Shared Task on Comparing Semantic Representations. In</title>
<date>2008</date>
<booktitle>Semantics in Text Processing. STEP 2008 Conference Proceedings, Volume 1 of Research in Computational Semantics,</booktitle>
<pages>257--261</pages>
<publisher>College Publications.</publisher>
<contexts>
<context position="3425" citStr="Bos, 2008" startWordPosition="503" endWordPosition="504">semantic role labelling, and word sense disambiguation) rather than on an entire end-to-end system. Meanwhile, theoretical CL research has examined issues such as underspecification, scoping and reference resolution in discourse contexts, but has set aside issues such as large-scale robustness, ontology integration and evaluation which are vital for applied uses of semantic parsing. In this paper we discuss an implementation to automatically extract explicitly coded conceptual and ontological knowledge from unrestricted text using a pipeline of NLP components, as part of the STEP shared task (Bos, 2008). The TEXTCAP system performs the basic steps towards this task by gluing together an off-the-shelf parser with semantic interpretation methods. It is intended to be a test case for (1) establishing baseline performance measures for semantic parsing and (2) determining what degree of post-editing might be necessary in real-world environments. Because major components of such a system would not be tailored towards the semantic parsing task, we would rightly expect its output to be imperfect. This problem is analogous to that facing machine translation decades ago, where one proposed solution wa</context>
</contexts>
<marker>Bos, 2008</marker>
<rawString>Bos, J. (2008). Introduction to the Shared Task on Comparing Semantic Representations. In J. Bos and R. Delmonte (Eds.), Semantics in Text Processing. STEP 2008 Conference Proceedings, Volume 1 of Research in Computational Semantics, pp. 257–261. College Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R J Brachman</author>
<author>J G Schmolze</author>
</authors>
<title>An overview of the KL-ONE knowledge representation system.</title>
<date>1985</date>
<journal>Cognitive Science</journal>
<volume>9</volume>
<issue>2</issue>
<pages>171--216</pages>
<contexts>
<context position="8736" citStr="Brachman and Schmolze, 1985" startWordPosition="1290" endWordPosition="1293"> and few attempts have been made to connect each of them into the longer chains and pipelines needed for more complete and deeper text processing such as is needed for tasks like knowledge acquisition. Additionally, most of these tools are intended to iteratively examine each sentence individually within a larger document. But often important linguistic phenomena cross sentence boundaries, yet are just as necessary to properly understand the semantic content of a document. 4 Knowledge Representation in TEXTCAP A common method of representing semantic knowledge in the Knowledge Base community (Brachman and Schmolze, 1985; Clark and Porter, 1998) is through threeplace predicates, or triples, of the form (CONCEPT RELATION CONCEPT). A concept can signify either a generic entity or class, like “houses”, or a particular instance, such as “my house at 35 Lincoln Avenue”; instances are coindexed to indicate they are the same entity in multiple predicates. Relations are typed according to domain, range and cardinality, and can also be marked as instances to indicate that they refer to specific events or properties that hold at a particular time place, etc. Databases and knowledge bases can both be represented as larg</context>
</contexts>
<marker>Brachman, Schmolze, 1985</marker>
<rawString>Brachman, R. J. and J. G. Schmolze (1985, April). An overview of the KL-ONE knowledge representation system. Cognitive Science 9(2), 171–216.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Callaway</author>
<author>E Not</author>
<author>A Novello</author>
<author>C Rocchi</author>
<author>O Stock</author>
<author>M Zancanaro</author>
</authors>
<title>Automatic cinematography and multilingual NLG for generating video documentaries.</title>
<date>2005</date>
<journal>Artificial Intelligence</journal>
<volume>165</volume>
<issue>1</issue>
<pages>57--89</pages>
<contexts>
<context position="2012" citStr="Callaway et al., 2005" startWordPosition="292" endWordPosition="295">tion to existing tasks. Improving the quantity and quality of the knowledge contained in knowledge bases could lead to the improved performance of many applications that depend on knowledge and inference such as: • Generating scientific or educational explanations of natural or mechanical systems and phenomena (Lester and Porter, 1997), • Question answering systems (Clark et al., 2001) that use reasoning to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003; Carenini et al., 2005; Barker et al., 2007), but large scale, domain independent, and fully automatic knowledge acquisition on unrestricted text is still in its infancy. Over the last decade research in applied computational linguistics has</context>
</contexts>
<marker>Callaway, Not, Novello, Rocchi, Stock, Zancanaro, 2005</marker>
<rawString>Callaway, C., E. Not, A. Novello, C. Rocchi, O. Stock, and M. Zancanaro (2005, June). Automatic cinematography and multilingual NLG for generating video documentaries. Artificial Intelligence 165(1), 57–89.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Carenini</author>
<author>R T Ng</author>
<author>E Zwart</author>
</authors>
<title>Extracting knowledge from evaluative text.</title>
<date>2005</date>
<booktitle>In K-CAP ’05: Proceedings of the 3rd International Conference on Knowledge Capture,</booktitle>
<pages>11--18</pages>
<location>Banff, Canada,</location>
<contexts>
<context position="2393" citStr="Carenini et al., 2005" startWordPosition="353" endWordPosition="356">, 2001) that use reasoning to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003; Carenini et al., 2005; Barker et al., 2007), but large scale, domain independent, and fully automatic knowledge acquisition on unrestricted text is still in its infancy. Over the last decade research in applied computational linguistics has extended the various components necessary for semantic parsing, but have tended to focus on increasing the measurable performance of individual subtask in isolation (e.g., parsing, anaphora resolution, semantic role labelling, and word sense disambiguation) rather than on an entire end-to-end system. Meanwhile, theoretical CL research has examined issues such as underspecificat</context>
</contexts>
<marker>Carenini, Ng, Zwart, 2005</marker>
<rawString>Carenini, G., R. T. Ng, and E. Zwart (2005). Extracting knowledge from evaluative text. In K-CAP ’05: Proceedings of the 3rd International Conference on Knowledge Capture, Banff, Canada, pp. 11–18.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Charniak</author>
</authors>
<title>A maximum-entropy-inspired parser.</title>
<date>2000</date>
<booktitle>In Proceedings of the</booktitle>
<location>NAACL, Seattle, WA.</location>
<contexts>
<context position="5320" citStr="Charniak, 2000" startWordPosition="783" endWordPosition="784">iption TEXTCAP performs basic steps towards the task of converting free text into semantic triples by gluing together an off-the-shelf parser with ad-hoc semantic interpretation methods. TEXTCAP parses a document into Penn TreeBank form and then traverses each syntactic parse tree performing a series of step-by-step tasks such as discourse parsing, clause separation, word sense disambiguation, anaphora resolution and semantic role labelling. Ad hoc rules then create a set of triples from the resulting semantically-enhanced parse tree. TEXTCAP first uses the domain-independent Charniak parser (Charniak, 2000) to convert sentences in the source document into a sequence of syntactic parses. It then applies syntax-based discourse parsing rules (such as Soricut and Marcu (2003)) to reduce coordinate, subordinate, and relative clauses into coindexed, simpler sentence parses headed by single verbal relations. It then marks for grammatical roles (subject, object, etc.) and syntactic features (e.g., passivity) before using a simple anaphora resolution algorithm based on those features and a word sense disambiguation algorithm grounded in WordNet (Fellbaum, 1998) senses that helps determine additional feat</context>
<context position="6926" citStr="Charniak, 2000" startWordPosition="1017" endWordPosition="1018">ting specific objects are marked with ontological relations and discourse relations are realized between individual verbal relations. The end product of TEXTCAP is thus a list of coindexed semantic triples representing the explicitly recoverable semantic content of the input text. 3 Text Processing Components Corpus methods underlie many of the recent improvements in a wide array of generic NLP tools. For instance, the introduction of large-scale lexical and syntactic resources like the Penn TreeBank (Marcus et al., 1993) have led to highly accurate, domain independent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution systems process references across multiple sentences, and recent work on anaphora resolution by Poesio and Kabadjov (2004) describes itself as the first such system which can be used off-the-shelf. Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in relation to its local man v</context>
</contexts>
<marker>Charniak, 2000</marker>
<rawString>Charniak, E. (2000, April). A maximum-entropy-inspired parser. In Proceedings of the 2000 NAACL, Seattle, WA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Clark</author>
<author>B Porter</author>
</authors>
<title>KM – the knowledge machine: Users manual.</title>
<date>1998</date>
<tech>Technical report,</tech>
<institution>AI Lab, University of Texas at Austin.</institution>
<contexts>
<context position="8761" citStr="Clark and Porter, 1998" startWordPosition="1294" endWordPosition="1297">ade to connect each of them into the longer chains and pipelines needed for more complete and deeper text processing such as is needed for tasks like knowledge acquisition. Additionally, most of these tools are intended to iteratively examine each sentence individually within a larger document. But often important linguistic phenomena cross sentence boundaries, yet are just as necessary to properly understand the semantic content of a document. 4 Knowledge Representation in TEXTCAP A common method of representing semantic knowledge in the Knowledge Base community (Brachman and Schmolze, 1985; Clark and Porter, 1998) is through threeplace predicates, or triples, of the form (CONCEPT RELATION CONCEPT). A concept can signify either a generic entity or class, like “houses”, or a particular instance, such as “my house at 35 Lincoln Avenue”; instances are coindexed to indicate they are the same entity in multiple predicates. Relations are typed according to domain, range and cardinality, and can also be marked as instances to indicate that they refer to specific events or properties that hold at a particular time place, etc. Databases and knowledge bases can both be represented as large collections of triples.</context>
</contexts>
<marker>Clark, Porter, 1998</marker>
<rawString>Clark, P. and B. Porter (1998). KM – the knowledge machine: Users manual. Technical report, AI Lab, University of Texas at Austin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Clark</author>
<author>J Thompson</author>
<author>K Barker</author>
<author>B Porter</author>
<author>V Chaudhri</author>
<author>A Rodriguez</author>
<author>J Thomr</author>
<author>Y Gil</author>
<author>P Hayes</author>
</authors>
<title>Knowledge entry as the graphical assembly of components: The SHAKEN system.</title>
<date>2001</date>
<booktitle>In Proceedings of the First International Conference on Knowledge Capture (KCAP),</booktitle>
<location>Victoria BC,</location>
<contexts>
<context position="1779" citStr="Clark et al., 2001" startWordPosition="255" endWordPosition="258">on unseen texts to discuss the amount of post-editing that might be realistically required. 327 328 Callaway 1 Introduction A number of applications depend on explicitly represented knowledge to perform basic tasks or add customization to existing tasks. Improving the quantity and quality of the knowledge contained in knowledge bases could lead to the improved performance of many applications that depend on knowledge and inference such as: • Generating scientific or educational explanations of natural or mechanical systems and phenomena (Lester and Porter, 1997), • Question answering systems (Clark et al., 2001) that use reasoning to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003; Carenin</context>
</contexts>
<marker>Clark, Thompson, Barker, Porter, Chaudhri, Rodriguez, Thomr, Gil, Hayes, 2001</marker>
<rawString>Clark, P., J. Thompson, K. Barker, B. Porter, V. Chaudhri, A. Rodriguez, J. Thomr, Y. Gil, and P. Hayes (2001, October). Knowledge entry as the graphical assembly of components: The SHAKEN system. In Proceedings of the First International Conference on Knowledge Capture (KCAP), Victoria BC, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Collins</author>
</authors>
<title>Head-driven Statistical Models for Natural Language Parsing.</title>
<date>1999</date>
<tech>Ph. D. thesis,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="6909" citStr="Collins, 1999" startWordPosition="1015" endWordPosition="1016">tities representing specific objects are marked with ontological relations and discourse relations are realized between individual verbal relations. The end product of TEXTCAP is thus a list of coindexed semantic triples representing the explicitly recoverable semantic content of the input text. 3 Text Processing Components Corpus methods underlie many of the recent improvements in a wide array of generic NLP tools. For instance, the introduction of large-scale lexical and syntactic resources like the Penn TreeBank (Marcus et al., 1993) have led to highly accurate, domain independent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution systems process references across multiple sentences, and recent work on anaphora resolution by Poesio and Kabadjov (2004) describes itself as the first such system which can be used off-the-shelf. Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in relation t</context>
</contexts>
<marker>Collins, 1999</marker>
<rawString>Collins, M. (1999). Head-driven Statistical Models for Natural Language Parsing. Ph. D. thesis, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Fellbaum</author>
</authors>
<title>WordNet: An electronic lexical database.</title>
<date>1998</date>
<publisher>The MIT Press.</publisher>
<contexts>
<context position="5876" citStr="Fellbaum, 1998" startWordPosition="862" endWordPosition="863">ses the domain-independent Charniak parser (Charniak, 2000) to convert sentences in the source document into a sequence of syntactic parses. It then applies syntax-based discourse parsing rules (such as Soricut and Marcu (2003)) to reduce coordinate, subordinate, and relative clauses into coindexed, simpler sentence parses headed by single verbal relations. It then marks for grammatical roles (subject, object, etc.) and syntactic features (e.g., passivity) before using a simple anaphora resolution algorithm based on those features and a word sense disambiguation algorithm grounded in WordNet (Fellbaum, 1998) senses that helps determine additional features such as animacy. A two-pass method is applied where first monosemous words are assigned senses, and then remaining senses are selected together with verb types (TEXTCAP uses ad hoc rules rather than current verb taxonomies like FrameNet). Selectional restrictions from the verb type then allows for labelling of peripheral grammatical roles as semantic roles. Finally, entities representing specific objects are marked with ontological relations and discourse relations are realized between individual verbal relations. The end product of TEXTCAP is t</context>
<context position="11702" citStr="Fellbaum, 1998" startWordPosition="1747" endWordPosition="1748"> (CHASING141 EVENT-TIME YESTERDAY). We would also need to indicate the taxonomic relationship between the two relations, (CHASING141 INSTANCE-OF CHASING). Because over the years different research groups have created differing ontologies, it is important to have a common ontology (and arguably, mapping of lexical items to classes in that ontology) for purposes such as evaluative comparison, even if implementations that acquire semantic triples can use any available ontology. The TEXTCAP Semantic Interpreter 331 In keeping with the practice of much recent large-scale NLP, TEXTCAP uses WordNet (Fellbaum, 1998) as an underlying ontology and sense repository for generic classes, giving it the ability to leverage recent NLP tools that rely on it, such as for word sense disambiguation (Gliozzo et al., 2005). Thus given the sentence in Figure 1(a), we are interested in producing the semantic triples in (b) where generic entities and relations are grounded in WordNet. 5 Processing The Text To illustrate how TEXTCAP works, we follow how it processes the following paragraph of newspaper text from the New York Times: Amid the tightly packed row houses of North Philadelphia, a pioneering urban farm is provid</context>
</contexts>
<marker>Fellbaum, 1998</marker>
<rawString>Fellbaum, C. (1998). WordNet: An electronic lexical database. The MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Gildea</author>
<author>D Jurafsky</author>
</authors>
<title>Automatic labeling of semantic roles.</title>
<date>2002</date>
<journal>Computational Linguistics</journal>
<volume>28</volume>
<issue>3</issue>
<pages>245--288</pages>
<contexts>
<context position="7441" citStr="Gildea and Jurafsky, 2002" startWordPosition="1091" endWordPosition="1094"> (Marcus et al., 1993) have led to highly accurate, domain independent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution systems process references across multiple sentences, and recent work on anaphora resolution by Poesio and Kabadjov (2004) describes itself as the first such system which can be used off-the-shelf. Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in relation to its local man verb, and can provide additional clues for disambiguating words and locating them in an ontological space. In addition to lexical and semantic tasks, multi-sentence linguistic analysis such as discourse segmentation and parsing is needed to semantically label the roles of verb phrases in relation to one other. Soricut and Marcu (2003) presented a statistical system that automatically produces an analysis of the rhetorical structure that holds between sets of sentences or clauses at the paragraph level. 330 Call</context>
</contexts>
<marker>Gildea, Jurafsky, 2002</marker>
<rawString>Gildea, D. and D. Jurafsky (2002). Automatic labeling of semantic roles. Computational Linguistics 28(3), 245–288.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Gliozzo</author>
<author>C Giuliano</author>
<author>C Strapparava</author>
</authors>
<title>Domain kernels for word sense disambiguation.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>403--410</pages>
<location>Ann Arbor, MI,</location>
<contexts>
<context position="7208" citStr="Gliozzo et al., 2005" startWordPosition="1054" endWordPosition="1057">text. 3 Text Processing Components Corpus methods underlie many of the recent improvements in a wide array of generic NLP tools. For instance, the introduction of large-scale lexical and syntactic resources like the Penn TreeBank (Marcus et al., 1993) have led to highly accurate, domain independent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution systems process references across multiple sentences, and recent work on anaphora resolution by Poesio and Kabadjov (2004) describes itself as the first such system which can be used off-the-shelf. Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in relation to its local man verb, and can provide additional clues for disambiguating words and locating them in an ontological space. In addition to lexical and semantic tasks, multi-sentence linguistic analysis such as discourse segmentation and parsing is needed to semantically label the roles of verb phras</context>
<context position="11899" citStr="Gliozzo et al., 2005" startWordPosition="1778" endWordPosition="1781">earch groups have created differing ontologies, it is important to have a common ontology (and arguably, mapping of lexical items to classes in that ontology) for purposes such as evaluative comparison, even if implementations that acquire semantic triples can use any available ontology. The TEXTCAP Semantic Interpreter 331 In keeping with the practice of much recent large-scale NLP, TEXTCAP uses WordNet (Fellbaum, 1998) as an underlying ontology and sense repository for generic classes, giving it the ability to leverage recent NLP tools that rely on it, such as for word sense disambiguation (Gliozzo et al., 2005). Thus given the sentence in Figure 1(a), we are interested in producing the semantic triples in (b) where generic entities and relations are grounded in WordNet. 5 Processing The Text To illustrate how TEXTCAP works, we follow how it processes the following paragraph of newspaper text from the New York Times: Amid the tightly packed row houses of North Philadelphia, a pioneering urban farm is providing fresh local food for a community that often lacks it, and making money in the process. Greensgrow, a one-acre plot of raised beds and greenhouses on the site of a former steel-galvanizing facto</context>
</contexts>
<marker>Gliozzo, Giuliano, Strapparava, 2005</marker>
<rawString>Gliozzo, A., C. Giuliano, and C. Strapparava (2005, June). Domain kernels for word sense disambiguation. In Proceedings of the 43th Annual Meeting of the Association for Computational Linguistics, Ann Arbor, MI, pp. 403–410.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J C Lester</author>
<author>B W Porter</author>
</authors>
<title>Developing and empirically evaluating robust explanation generators: The KNIGHT experiments.</title>
<date>1997</date>
<journal>Computational Linguistics</journal>
<volume>23</volume>
<issue>1</issue>
<pages>65--101</pages>
<contexts>
<context position="1728" citStr="Lester and Porter, 1997" startWordPosition="247" endWordPosition="250">how TEXTCAP processes a short text, and use its results on unseen texts to discuss the amount of post-editing that might be realistically required. 327 328 Callaway 1 Introduction A number of applications depend on explicitly represented knowledge to perform basic tasks or add customization to existing tasks. Improving the quantity and quality of the knowledge contained in knowledge bases could lead to the improved performance of many applications that depend on knowledge and inference such as: • Generating scientific or educational explanations of natural or mechanical systems and phenomena (Lester and Porter, 1997), • Question answering systems (Clark et al., 2001) that use reasoning to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions</context>
</contexts>
<marker>Lester, Porter, 1997</marker>
<rawString>Lester, J. C. and B. W. Porter (1997). Developing and empirically evaluating robust explanation generators: The KNIGHT experiments. Computational Linguistics 23(1), 65–101.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W C Mann</author>
<author>S A Thompson</author>
</authors>
<title>Rhetorical structure theory: A theory of text organization.</title>
<date>1987</date>
<tech>Technical Report ISI/RS-87-190,</tech>
<institution>USC/Information Sciences Institute,</institution>
<location>Marina del Rey, CA.</location>
<contexts>
<context position="14744" citStr="Mann and Thompson, 1987" startWordPosition="2229" endWordPosition="2232">normalized to mark grammatical subject and correctly mark the auxiliary verb: . . . (NP-SBJ (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;pioneering&amp;quot;) (JJ &amp;quot;urban&amp;quot;) (NN &amp;quot;farm&amp;quot;)) (VP (VBZ &amp;quot;is&amp;quot;) (VP (VP (VBG &amp;quot;providing&amp;quot;) . . . We then apply a customized discourse parser which converts full syntactic parses into subparses headed by single verb relations. This is done using purely syntactic information to break up coordinate, subordinate and relative clauses while adding coindexed traces at the appropriate parse level and introducing a new tree-level tag DR for discourse relations marked according to Rhetorical Structure Theory (Mann and Thompson, 1987). All three sentences in the paragraph above are thus converted into the following 13 discourse parses: (S (PP (IN &amp;quot;Amid&amp;quot;) (NP (NP (DT &amp;quot;the&amp;quot;) (ADJP (RB &amp;quot;tightly&amp;quot;) (VBN &amp;quot;packed&amp;quot;)) (NN &amp;quot;row&amp;quot;)(NNS &amp;quot;houses&amp;quot;)) (PP (IN &amp;quot;of&amp;quot;) (NP (NNP &amp;quot;North&amp;quot;) (NNP &amp;quot;Philadelphia&amp;quot;))))) (PUNCTUATION COMMA) (NP-SBJ (DT &amp;quot;a&amp;quot;) (JJ &amp;quot;pioneering&amp;quot;) (JJ &amp;quot;urban&amp;quot;) (NN &amp;quot;farm&amp;quot;) (TRACE 1)) (VP (VBZ &amp;quot;is&amp;quot;) (VP (VP (VBG &amp;quot;providing&amp;quot;) (NP (JJ &amp;quot;fresh&amp;quot;) (JJ &amp;quot;local&amp;quot;) (NN &amp;quot;food&amp;quot;)) (PP (IN &amp;quot;for&amp;quot;) (NP (DT &amp;quot;a&amp;quot;) (NN &amp;quot;community&amp;quot;) (TRACE 2))))))) (S (NP-SBJ (DT &amp;quot;a&amp;quot;) (NN &amp;quot;community&amp;quot;) (TRACE 2)) (ADVP (RB &amp;quot;often&amp;quot;)) (VP (VBZ &amp;quot;lacks&amp;quot;) (NP (PRP &amp;quot;it&amp;quot;)))</context>
</contexts>
<marker>Mann, Thompson, 1987</marker>
<rawString>Mann, W. C. and S. A. Thompson (1987, June). Rhetorical structure theory: A theory of text organization. Technical Report ISI/RS-87-190, USC/Information Sciences Institute, Marina del Rey, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Marcus</author>
<author>B Santorini</author>
<author>M Marcinkiewicz</author>
</authors>
<title>Building a large annotated corpus of English: The PennTreeBank.</title>
<date>1993</date>
<journal>Computational Linguistics</journal>
<volume>19</volume>
<issue>2</issue>
<pages>313--330</pages>
<contexts>
<context position="6838" citStr="Marcus et al., 1993" startWordPosition="1002" endWordPosition="1005">s for labelling of peripheral grammatical roles as semantic roles. Finally, entities representing specific objects are marked with ontological relations and discourse relations are realized between individual verbal relations. The end product of TEXTCAP is thus a list of coindexed semantic triples representing the explicitly recoverable semantic content of the input text. 3 Text Processing Components Corpus methods underlie many of the recent improvements in a wide array of generic NLP tools. For instance, the introduction of large-scale lexical and syntactic resources like the Penn TreeBank (Marcus et al., 1993) have led to highly accurate, domain independent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution systems process references across multiple sentences, and recent work on anaphora resolution by Poesio and Kabadjov (2004) describes itself as the first such system which can be used off-the-shelf. Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2</context>
</contexts>
<marker>Marcus, Santorini, Marcinkiewicz, 1993</marker>
<rawString>Marcus, M., B. Santorini, and M. Marcinkiewicz (1993). Building a large annotated corpus of English: The PennTreeBank. Computational Linguistics 19(2), 313–330.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Poesio</author>
<author>M A Kabadjov</author>
</authors>
<title>A general-purpose, off-the-shelf system for anaphora resolution.</title>
<date>2004</date>
<booktitle>In Proceedings of the Language Resources and Evaluation Conference,</booktitle>
<location>Lisbon, Portugal.</location>
<contexts>
<context position="7084" citStr="Poesio and Kabadjov (2004)" startWordPosition="1035" endWordPosition="1038">ct of TEXTCAP is thus a list of coindexed semantic triples representing the explicitly recoverable semantic content of the input text. 3 Text Processing Components Corpus methods underlie many of the recent improvements in a wide array of generic NLP tools. For instance, the introduction of large-scale lexical and syntactic resources like the Penn TreeBank (Marcus et al., 1993) have led to highly accurate, domain independent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution systems process references across multiple sentences, and recent work on anaphora resolution by Poesio and Kabadjov (2004) describes itself as the first such system which can be used off-the-shelf. Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in relation to its local man verb, and can provide additional clues for disambiguating words and locating them in an ontological space. In addition to lexical and semantic tasks, multi-sen</context>
</contexts>
<marker>Poesio, Kabadjov, 2004</marker>
<rawString>Poesio, M. and M. A. Kabadjov (2004, May). A general-purpose, off-the-shelf system for anaphora resolution. In Proceedings of the Language Resources and Evaluation Conference, Lisbon, Portugal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Reiter</author>
<author>S Sripada</author>
<author>R Robertson</author>
</authors>
<title>Acquiring correct knowledge for natural language generation.</title>
<date>2003</date>
<journal>Journal of Artificial Intelligence Research</journal>
<volume>18</volume>
<pages>491--516</pages>
<contexts>
<context position="2370" citStr="Reiter et al., 2003" startWordPosition="349" endWordPosition="352">systems (Clark et al., 2001) that use reasoning to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003; Carenini et al., 2005; Barker et al., 2007), but large scale, domain independent, and fully automatic knowledge acquisition on unrestricted text is still in its infancy. Over the last decade research in applied computational linguistics has extended the various components necessary for semantic parsing, but have tended to focus on increasing the measurable performance of individual subtask in isolation (e.g., parsing, anaphora resolution, semantic role labelling, and word sense disambiguation) rather than on an entire end-to-end system. Meanwhile, theoretical CL research has examined issues </context>
</contexts>
<marker>Reiter, Sripada, Robertson, 2003</marker>
<rawString>Reiter, E., S. Sripada, and R. Robertson (2003). Acquiring correct knowledge for natural language generation. Journal of Artificial Intelligence Research 18, 491– 516.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Soricut</author>
<author>D Marcu</author>
</authors>
<title>Sentence level discourse parsing using syntactic and lexical information.</title>
<date>2003</date>
<booktitle>In Proceedings of HLT-NAACL,</booktitle>
<location>Edmonton, Alberta.</location>
<contexts>
<context position="5488" citStr="Soricut and Marcu (2003)" startWordPosition="807" endWordPosition="810">tic interpretation methods. TEXTCAP parses a document into Penn TreeBank form and then traverses each syntactic parse tree performing a series of step-by-step tasks such as discourse parsing, clause separation, word sense disambiguation, anaphora resolution and semantic role labelling. Ad hoc rules then create a set of triples from the resulting semantically-enhanced parse tree. TEXTCAP first uses the domain-independent Charniak parser (Charniak, 2000) to convert sentences in the source document into a sequence of syntactic parses. It then applies syntax-based discourse parsing rules (such as Soricut and Marcu (2003)) to reduce coordinate, subordinate, and relative clauses into coindexed, simpler sentence parses headed by single verbal relations. It then marks for grammatical roles (subject, object, etc.) and syntactic features (e.g., passivity) before using a simple anaphora resolution algorithm based on those features and a word sense disambiguation algorithm grounded in WordNet (Fellbaum, 1998) senses that helps determine additional features such as animacy. A two-pass method is applied where first monosemous words are assigned senses, and then remaining senses are selected together with verb types (TE</context>
<context position="7861" citStr="Soricut and Marcu (2003)" startWordPosition="1158" endWordPosition="1161">cy analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in relation to its local man verb, and can provide additional clues for disambiguating words and locating them in an ontological space. In addition to lexical and semantic tasks, multi-sentence linguistic analysis such as discourse segmentation and parsing is needed to semantically label the roles of verb phrases in relation to one other. Soricut and Marcu (2003) presented a statistical system that automatically produces an analysis of the rhetorical structure that holds between sets of sentences or clauses at the paragraph level. 330 Callaway As a generalization, NLP research has been conducted separately and few attempts have been made to connect each of them into the longer chains and pipelines needed for more complete and deeper text processing such as is needed for tasks like knowledge acquisition. Additionally, most of these tools are intended to iteratively examine each sentence individually within a larger document. But often important linguis</context>
</contexts>
<marker>Soricut, Marcu, 2003</marker>
<rawString>Soricut, R. and D. Marcu (2003, May). Sentence level discourse parsing using syntactic and lexical information. In Proceedings of HLT-NAACL, Edmonton, Alberta.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Stock</author>
<author>M Zancanaro</author>
<author>P Busetta</author>
<author>C Callaway</author>
<author>A Krueger</author>
<author>M Kruppa</author>
<author>T Kuflik</author>
<author>E Not</author>
<author>C Rocchi</author>
</authors>
<title>Adaptive, intelligent presentation of information for the museum visitor in peach. User Modeling and User Adapted</title>
<date>2007</date>
<journal>Interaction</journal>
<volume>17</volume>
<pages>257--304</pages>
<contexts>
<context position="2033" citStr="Stock et al., 2007" startWordPosition="296" endWordPosition="299"> Improving the quantity and quality of the knowledge contained in knowledge bases could lead to the improved performance of many applications that depend on knowledge and inference such as: • Generating scientific or educational explanations of natural or mechanical systems and phenomena (Lester and Porter, 1997), • Question answering systems (Clark et al., 2001) that use reasoning to solve problems rather than looking up answers, • Multimodal information presentation systems that depend on specific real world knowledge in order to describe or refer to it for audiences (Callaway et al., 2005; Stock et al., 2007). These systems have typically relied on hand-built and domain specific knowledge bases requiring years of effort to produce. The need to speed up this process as well as make the resulting representations more consistent are well-known problems that have yielded a number of potential solutions (Blythe et al., 2001; Reiter et al., 2003; Carenini et al., 2005; Barker et al., 2007), but large scale, domain independent, and fully automatic knowledge acquisition on unrestricted text is still in its infancy. Over the last decade research in applied computational linguistics has extended the various</context>
</contexts>
<marker>Stock, Zancanaro, Busetta, Callaway, Krueger, Kruppa, Kuflik, Not, Rocchi, 2007</marker>
<rawString>Stock, O., M. Zancanaro, P. Busetta, C. Callaway, A. Krueger, M. Kruppa, T. Kuflik, E. Not, and C. Rocchi (2007). Adaptive, intelligent presentation of information for the museum visitor in peach. User Modeling and User Adapted Interaction 17, 257–304.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Yeh</author>
<author>B Porter</author>
<author>K Barker</author>
</authors>
<title>A unified knowledge based approach for sense disambiguation and semantic role labeling.</title>
<date>2006</date>
<booktitle>In Proceedings of the TwentyFirst National Conference on Artificial Intelligence,</booktitle>
<location>Boston, MA.</location>
<contexts>
<context position="7460" citStr="Yeh et al., 2006" startWordPosition="1095" endWordPosition="1098"> led to highly accurate, domain independent parsers (Collins, 1999; Charniak, 2000). Wide-coverage anaphora resolution systems process references across multiple sentences, and recent work on anaphora resolution by Poesio and Kabadjov (2004) describes itself as the first such system which can be used off-the-shelf. Word sense disambiguation (Gliozzo et al., 2005), often based on term frequency analyses of large annotated corpora, can help localize search in a particular area of a knowledge base to find the most related concepts and instances. Semantic role labelers (Gildea and Jurafsky, 2002; Yeh et al., 2006) annotate what role each entity has in relation to its local man verb, and can provide additional clues for disambiguating words and locating them in an ontological space. In addition to lexical and semantic tasks, multi-sentence linguistic analysis such as discourse segmentation and parsing is needed to semantically label the roles of verb phrases in relation to one other. Soricut and Marcu (2003) presented a statistical system that automatically produces an analysis of the rhetorical structure that holds between sets of sentences or clauses at the paragraph level. 330 Callaway As a generaliz</context>
</contexts>
<marker>Yeh, Porter, Barker, 2006</marker>
<rawString>Yeh, P., B. Porter, and K. Barker (2006, July). A unified knowledge based approach for sense disambiguation and semantic role labeling. In Proceedings of the TwentyFirst National Conference on Artificial Intelligence, Boston, MA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>