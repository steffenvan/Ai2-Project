<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.010103">
<title confidence="0.963536">
A Robust Retrieval Engine for Proximal and Structural Search
</title>
<author confidence="0.8476">
Katsuya Masuda† Takashi Ninomiya†‡ Yusuke Miyao† Tomoko Ohta†‡ Jun’ichi Tsujii†‡† Department of Computer Science, Graduate School of Information Science and Technology,
</author>
<affiliation confidence="0.997456">
University of Tokyo, Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, Japan
</affiliation>
<address confidence="0.70674">
‡ CREST, JST (Japan Science and Technology Corporation)
Honcho 4-1-8, Kawaguchi-shi, Saitama 332-0012, Japan
</address>
<email confidence="0.99881">
{kmasuda,ninomi,yusuke,okap,tsujii}@is.s.u-tokyo.ac.jp
</email>
<sectionHeader confidence="0.999638" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999979821428571">
In the text retrieval area including XML and Region Al-
gebra, many researchers pursued models for specifying
what kinds of information should appear in specified
structural positions and linear positions (Chinenyanga
and Kushmerick, 2001; Wolff et al., 1999; Theobald and
Weilkum, 2000; Clarke et al., 1995). The models at-
tracted many researchers because they are considered to
be basic frameworks for retrieving or extracting complex
information like events. However, unlike IR by keyword-
based search, their models are not robust, that is, they
support only exact matching of queries, while we would
like to know to what degree the contents in specified
structural positions are relevant to those in the query even
when the structure does not exactly match the query.
This paper describes a new ranked retrieval model
that enables proximal and structural search for structured
texts. We extend the model proposed in Region Alge-
bra to be robust by i) incorporating the idea of ranked-
ness in keyword-based search, and ii) expanding queries.
While in ordinary ranked retrieval models relevance mea-
sures are computed in terms of words, our model assumes
that they are defined in more general structural fragments,
i.e., extents (continuous fragments in a text) proposed in
Region Algebra. We decompose queries into subqueries
to allow the system not only to retrieve exactly matched
extents but also to retrieve partially matched ones. Our
model is robust like keyword-based search, and also en-
ables us to specify the structural and linear positions in
texts as done by Region Algebra.
The significance of this work is not in the development
of a new relevance measure nor in showing superiority
of structure-based search over keyword-based search, but
in the proposal of a framework for integrating proximal
and structural ranking models. Since the model treats all
types of structures in texts, not only ordinary text struc-
tures like “title,” “abstract,” “authors,” etc., but also se-
mantic tags corresponding to recognized named entities
or events can also be used for indexing text fragments
and contribute to the relevance measure. Since extents
are treated similarly to keywords in traditional models,
our model will be integrated with any ranking and scala-
bility techniques used by keyword-based models.
We have implemented the ranking model in our re-
trieval engine, and had preliminary experiments to eval-
uate our model. Unfortunately, we used a rather small
corpus for the experiments. This is mainly because
there is no test collection of the structured query and
tag-annotated text. Instead, we used the GENIA cor-
pus (Ohta et al., 2002) as structured texts, which was
an XML document annotated with semantics tags in the
filed of biomedical science. The experiments show that
our model succeeded in retrieving the relevant answers
that an exact-matching model fails to retrieve because of
lack of robustness, and the relevant answers that a non-
structured model fails because of lack of structural spec-
ification.
</bodyText>
<sectionHeader confidence="0.8046755" genericHeader="keywords">
2 A Ranking Model for Structured
Queries and Texts
</sectionHeader>
<bodyText confidence="0.999967125">
This section describes the definition of the relevance be-
tween a document and a structured query represented by
the region algebra. The key idea is that a structured query
is decomposed into subqueries, and the relevance of the
whole query is represented as a vector of relevance mea-
sures of subqueries.
The region algebra (Clarke et al., 1995) is a set of op-
erators, which represent the relation between the extents
(i.e. regions in texts). In this paper, we suppose the re-
gion algebra has seven operators; four containment oper-
ators (D, a, IV, ¢) representing the containment relation
between the extents, two combination operators (A, p)
corresponding to “and” and “or” operator of the boolean
model, and ordering operator (✸) representing the order
of words or structures in the texts. For convenience of
explanation, we represent a query as a tree structure as
</bodyText>
<figureCaption confidence="0.8789205">
Figure 1: Subqueries of the query ‘[book] D ([title] D
“retrieval”)’
</figureCaption>
<bodyText confidence="0.989378565217392">
shown in Figure 1 1 . This query represents ‘Retrieve the
books whose title has the word “retrieval.” ’
Our model assigns a relevance measure of the struc-
tured query as a vector of relevance measures of the sub-
queries. In other words, the relevance is defined by the
number of portions matched with subqueries in a docu-
ment. If an extent matches a subquery of query q, the
extent will be somewhat relevant to q even when the ex-
tent does not exactly match q. Figure 1 shows an example
of a query and its subqueries. In this example, even when
an extent does not match the whole query exactly, if the
extent matches “retrieval” or ‘[title]D“retrieval”’, the ex-
tent is considered to be relevant to the query. Subqueries
are formally defined as following.
Definition 1 (Subquery) Let q be a given query and
n1, ..., nM be the nodes of q. Subqueries q1, ..., qM of q
are the subtrees of q. Each qi has node ni as a root node.
When a relevance σ(qi, d) between a subquery qi and
a document d is given, the relevance of the whole query
is defined as following.
Definition 2 (Relevance of the whole query) Let q be a
given query, d be a document and q1, ..., qM subqueries of
q. The relevance vector E(q, d) ofd is defined as follows:
</bodyText>
<equation confidence="0.660614">
E(q, d) = (σ(q1, d), σ(q2, d), ..., σ(qM, d))
</equation>
<bodyText confidence="0.999496692307692">
A relevance of a subquery should be defined similarly to
that of keyword-based queries in the traditional ranked re-
trieval. For example, TFIDF, which is used in our experi-
ments in Section 3, is the most simple and straightforward
one, while other relevance measures recently proposed in
(Robertson and Walker, 2000) can be applied. TF value is
calculated using the number of extents matching the sub-
query, and IDF value is calculated using the number of
documents including the extents matching the subquery.
While we have defined a relevance of the structured
query as a vector, we need to sort the documents accord-
ing to the relevance vectors. In this paper, we first map
a vector into a scalar value, and then sort the documents
</bodyText>
<footnote confidence="0.853723">
1In this query, ‘[x]’ is a syntax sugar of ‘(x) ✸ (/x)’.
</footnote>
<bodyText confidence="0.889564">
according to this scalar measure. Three methods are in-
troduced for the mapping from the relevance vector to the
scalar measure. The first one simply works out the sum
of the elements of the relevance vector.
Definition 3 (Simple Sum)
</bodyText>
<equation confidence="0.997324">
M
ρsuM(q, d) = σ(qi, d)
i=1
</equation>
<bodyText confidence="0.952963">
The second represents the rareness of the structures.
When the query is A D B or A &lt; B, if the number of
extents matching the query is close to the number of ex-
tents matching A, matching the query does not seem to
be very important because it means that the extents that
match A mostly match A D B or A &lt; B. The case of the
other operators is the same as with D and &lt;.
Definition 4 (Structure Coefficient) When the operator
op is A, p or O, the structure coefficient of the query
A op B is:
</bodyText>
<equation confidence="0.965284">
C(A) + C(B) − C(A op B)
C(A) + C(B)
</equation>
<bodyText confidence="0.988844">
and when the operator op is D or &lt;, the structure coeffi-
cient of the query A op B is:
</bodyText>
<equation confidence="0.950951">
C(A) − C(A op B)
C(A)
</equation>
<bodyText confidence="0.983161">
where A and B are the queries and C(A) is the number
of extents that match A in the document collection.
The scalar measure ρsc(qi, d) is then defined as
</bodyText>
<equation confidence="0.99895">
M
ρsc(q, d) = scq; - σ(qi, d)
i=1
</equation>
<bodyText confidence="0.98311995">
The third is a combination of the measure of the query
itself and the measure of the subqueries. Although we
calculate the score of extents by subqueries instead of us-
ing only the whole query, the score of subqueries can not
be compared with the score of other subqueries. We as-
sume normalized weight of each subquery and interpolate
the weight of parent node and children nodes.
Definition 5 (Interpolated Coefficient) The interpo-
lated coefficient of the query qi is recursively defined as
follows:
ρic (qi, d) = λ - σ(qi, d) + (1 − λ) E.c; ρi l (qc;, d)
where ci is the child ofnode ni, l is the number of children
of node ni, and 0 &lt; λ &lt; 1.
This formula means that the weight of each node is de-
fined by a weighted average of the weight of the query
and its subqueries. When λ = 1, the weight of each
query is normalized weight of the query. When λ = 0,
the weight of each query is calculated from the weight of
the subqueries, i.e. the weight is calculated by only the
weight of the words used in the query.
</bodyText>
<equation confidence="0.998502">
scAopB =
scAopB =
</equation>
<table confidence="0.90059125">
1 ‘([cons]✄([sem]✄“G#DNA domain or region”))4(“in”✸([cons]✄([sem]✄(“G#tissue”5“G#body part”))))’
2 ‘([event]✄([obj]✄“gene”))4(“in”✸([cons]✄([sem]✄(“G#tissue”5“G#body part”))))’
3 ‘([event]✄([obj]✸([sem]✄“G#DNA domain or region”)))4(“in”✸([cons]✄([sem]✄(“G#tissue”5“G#body part”))))’
4 ‘([event]✄([dummy]✄“G#DNA domain or region”))4(“in”✸([cons]✄([sem]✄(“G#tissue”5“G#body part”))))’
</table>
<tableCaption confidence="0.999735">
Table 1: Queries submitted in the experiments
</tableCaption>
<sectionHeader confidence="0.995673" genericHeader="method">
3 Experiments
</sectionHeader>
<bodyText confidence="0.999933871794872">
In this section, we show the results of our preliminary
experiments of text retrieval using our model. Because
there is no test collection of the structured query and tag-
annotated text, we used the GENIA corpus (Ohta et al.,
2002) as a structured text, which was an XML document
composed of paper abstracts in the field of biomedical
science. The corpus consisted of 1,990 articles, 873,087
words (including tags), and 16,391 sentences.
We compared three retrieval models, i) our model, ii)
exact matching of the region algebra (exact), and iii)
not-structured flat model. In the flat model, the query
was submitted as a query composed of the words in the
queries in Table 1 connected by the “and” operator (A).
The queries submitted to our system are shown in Ta-
ble 1, and the document was “sentence” represented by
“(sentence)” tags. Query 1, 2, and 3 are real queries made
by an expert in the field of biomedicine. Query 4 is a toy
query made by us to see the robustness compared with
the exact model easily. The system output the ten results
that had the highest relevance for each model2.
Table 2 shows the number of the results that were
judged relevant in the top ten results when the ranking
was done using ps,,,,,,. The results show that our model
was superior to the exact and flat models for Query 1,
2, and 3. Compared to the exact model, our model out-
put more relevant documents, since our model allows the
partial matching of the query, which shows the robust-
ness of our model. In addition, our model outperforms
the flat model, which means that the structural specifi-
cation of the query was effective for finding the relevant
documents. For Query 4, our model succeeded in find-
ing the relevant results although the exact model failed
to find results because Query 4 includes the tag not con-
tained in the text (“(dummy)” tag). This result shows the
robustness of our model.
Although we omit the results of using ps, and pi, be-
cause of the limit of the space, here we summarize the
results of them. The number of relevant results using ps,
was the same as that of ps,,,,,,, but the rank of irrelevant
</bodyText>
<footnote confidence="0.692960666666667">
2For the exact model, ten results were selected randomly
from the exactly matched results if the total number of results
was more than ten. After we had the results for each model,
we shuffled these results randomly for each query, and the shuf-
fled results were judged by an expert in the field of biomedicine
whether they were relevant or not.
</footnote>
<table confidence="0.945125">
Query our model exact flat
1 10/10 9/10 9/10
2 6/10 5/ 5 3/10
3 10/10 9/ 9 8/10
4 7/10 0/ 0 9/10
</table>
<tableCaption confidence="0.9055345">
Table 2: (The number of relevant results) / (the number
of all results) in top 10 results.
</tableCaption>
<bodyText confidence="0.911899333333333">
results using ps, was lower than that of ps,,,,,,. The results
using pi, varied between the results of the flat model and
the results of ps,,,,,, depending on the value of A.
</bodyText>
<sectionHeader confidence="0.999715" genericHeader="conclusions">
4 Conclusions
</sectionHeader>
<bodyText confidence="0.999992666666667">
We proposed a ranked retrieval model for structured
queries and texts by extending the region algebra to be
ranked. Our model achieved robustness by extending the
concept of words to extents and by matching with sub-
queries decomposed from a given query instead of match-
ing the entire query or words.
</bodyText>
<sectionHeader confidence="0.998682" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.993973">
T. Chinenyanga and N. Kushmerick. 2001. Expressive
and efficient ranked querying of XML data. In Pro-
ceedings of WebDB-2001.
C. L. A. Clarke, G. V. Cormack, and F. J. Burkowski.
1995. An algebra for structured text search and a
framework for its implementation. The computer Jour-
nal, 38(1):43–56.
T. Ohta, Y. Tateisi, H. Mima, and J. Tsujii. 2002. GE-
NIA corpus: an annotated research abstract corpus in
molecular biology domain. In Proceedings of HLT
2002.
S. E. Robertson and S. Walker. 2000. Okapi/Keenbow at
TREC-8. In TREC-8, pages 151–161.
A. Theobald and G. Weilkum. 2000. Adding relevance
to XML. In Proceedings of WebDB’00.
J. Wolff, H. Fl¨orke, and A. Cremers. 1999. XPRES:
a Ranking Approach to Retrieval on Structured Docu-
ments. Technical Report IAI-TR-99-12, University of
Bonn.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.718942">
<title confidence="0.782326">A Robust Retrieval Engine for Proximal and Structural Search</title>
<affiliation confidence="0.983259666666667">of Computer Science, Graduate School of Information Science and University of Tokyo, Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, JST (Japan Science and Technology</affiliation>
<address confidence="0.972618">Honcho 4-1-8, Kawaguchi-shi, Saitama 332-0012,</address>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T Chinenyanga</author>
<author>N Kushmerick</author>
</authors>
<title>Expressive and efficient ranked querying of XML data.</title>
<date>2001</date>
<booktitle>In Proceedings of WebDB-2001.</booktitle>
<contexts>
<context position="712" citStr="Chinenyanga and Kushmerick, 2001" startWordPosition="86" endWordPosition="89">ashi Ninomiya†‡ Yusuke Miyao† Tomoko Ohta†‡ Jun’ichi Tsujii†‡† Department of Computer Science, Graduate School of Information Science and Technology, University of Tokyo, Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, Japan ‡ CREST, JST (Japan Science and Technology Corporation) Honcho 4-1-8, Kawaguchi-shi, Saitama 332-0012, Japan {kmasuda,ninomi,yusuke,okap,tsujii}@is.s.u-tokyo.ac.jp 1 Introduction In the text retrieval area including XML and Region Algebra, many researchers pursued models for specifying what kinds of information should appear in specified structural positions and linear positions (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Clarke et al., 1995). The models attracted many researchers because they are considered to be basic frameworks for retrieving or extracting complex information like events. However, unlike IR by keywordbased search, their models are not robust, that is, they support only exact matching of queries, while we would like to know to what degree the contents in specified structural positions are relevant to those in the query even when the structure does not exactly match the query. This paper describes a new ranked retrieval model that enables proxi</context>
</contexts>
<marker>Chinenyanga, Kushmerick, 2001</marker>
<rawString>T. Chinenyanga and N. Kushmerick. 2001. Expressive and efficient ranked querying of XML data. In Proceedings of WebDB-2001.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L A Clarke</author>
<author>G V Cormack</author>
<author>F J Burkowski</author>
</authors>
<title>An algebra for structured text search and a framework for its implementation.</title>
<date>1995</date>
<journal>The computer Journal,</journal>
<volume>38</volume>
<issue>1</issue>
<contexts>
<context position="782" citStr="Clarke et al., 1995" startWordPosition="98" endWordPosition="101">ter Science, Graduate School of Information Science and Technology, University of Tokyo, Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, Japan ‡ CREST, JST (Japan Science and Technology Corporation) Honcho 4-1-8, Kawaguchi-shi, Saitama 332-0012, Japan {kmasuda,ninomi,yusuke,okap,tsujii}@is.s.u-tokyo.ac.jp 1 Introduction In the text retrieval area including XML and Region Algebra, many researchers pursued models for specifying what kinds of information should appear in specified structural positions and linear positions (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Clarke et al., 1995). The models attracted many researchers because they are considered to be basic frameworks for retrieving or extracting complex information like events. However, unlike IR by keywordbased search, their models are not robust, that is, they support only exact matching of queries, while we would like to know to what degree the contents in specified structural positions are relevant to those in the query even when the structure does not exactly match the query. This paper describes a new ranked retrieval model that enables proximal and structural search for structured texts. We extend the model pr</context>
<context position="3889" citStr="Clarke et al., 1995" startWordPosition="599" endWordPosition="602">ucceeded in retrieving the relevant answers that an exact-matching model fails to retrieve because of lack of robustness, and the relevant answers that a nonstructured model fails because of lack of structural specification. 2 A Ranking Model for Structured Queries and Texts This section describes the definition of the relevance between a document and a structured query represented by the region algebra. The key idea is that a structured query is decomposed into subqueries, and the relevance of the whole query is represented as a vector of relevance measures of subqueries. The region algebra (Clarke et al., 1995) is a set of operators, which represent the relation between the extents (i.e. regions in texts). In this paper, we suppose the region algebra has seven operators; four containment operators (D, a, IV, ¢) representing the containment relation between the extents, two combination operators (A, p) corresponding to “and” and “or” operator of the boolean model, and ordering operator (✸) representing the order of words or structures in the texts. For convenience of explanation, we represent a query as a tree structure as Figure 1: Subqueries of the query ‘[book] D ([title] D “retrieval”)’ shown in </context>
</contexts>
<marker>Clarke, Cormack, Burkowski, 1995</marker>
<rawString>C. L. A. Clarke, G. V. Cormack, and F. J. Burkowski. 1995. An algebra for structured text search and a framework for its implementation. The computer Journal, 38(1):43–56.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Ohta</author>
<author>Y Tateisi</author>
<author>H Mima</author>
<author>J Tsujii</author>
</authors>
<title>GENIA corpus: an annotated research abstract corpus in molecular biology domain.</title>
<date>2002</date>
<booktitle>In Proceedings of HLT</booktitle>
<contexts>
<context position="3118" citStr="Ohta et al., 2002" startWordPosition="473" endWordPosition="476">ed entities or events can also be used for indexing text fragments and contribute to the relevance measure. Since extents are treated similarly to keywords in traditional models, our model will be integrated with any ranking and scalability techniques used by keyword-based models. We have implemented the ranking model in our retrieval engine, and had preliminary experiments to evaluate our model. Unfortunately, we used a rather small corpus for the experiments. This is mainly because there is no test collection of the structured query and tag-annotated text. Instead, we used the GENIA corpus (Ohta et al., 2002) as structured texts, which was an XML document annotated with semantics tags in the filed of biomedical science. The experiments show that our model succeeded in retrieving the relevant answers that an exact-matching model fails to retrieve because of lack of robustness, and the relevant answers that a nonstructured model fails because of lack of structural specification. 2 A Ranking Model for Structured Queries and Texts This section describes the definition of the relevance between a document and a structured query represented by the region algebra. The key idea is that a structured query i</context>
<context position="9329" citStr="Ohta et al., 2002" startWordPosition="1569" endWordPosition="1572">ns]✄([sem]✄(“G#tissue”5“G#body part”))))’ 2 ‘([event]✄([obj]✄“gene”))4(“in”✸([cons]✄([sem]✄(“G#tissue”5“G#body part”))))’ 3 ‘([event]✄([obj]✸([sem]✄“G#DNA domain or region”)))4(“in”✸([cons]✄([sem]✄(“G#tissue”5“G#body part”))))’ 4 ‘([event]✄([dummy]✄“G#DNA domain or region”))4(“in”✸([cons]✄([sem]✄(“G#tissue”5“G#body part”))))’ Table 1: Queries submitted in the experiments 3 Experiments In this section, we show the results of our preliminary experiments of text retrieval using our model. Because there is no test collection of the structured query and tagannotated text, we used the GENIA corpus (Ohta et al., 2002) as a structured text, which was an XML document composed of paper abstracts in the field of biomedical science. The corpus consisted of 1,990 articles, 873,087 words (including tags), and 16,391 sentences. We compared three retrieval models, i) our model, ii) exact matching of the region algebra (exact), and iii) not-structured flat model. In the flat model, the query was submitted as a query composed of the words in the queries in Table 1 connected by the “and” operator (A). The queries submitted to our system are shown in Table 1, and the document was “sentence” represented by “(sentence)” </context>
</contexts>
<marker>Ohta, Tateisi, Mima, Tsujii, 2002</marker>
<rawString>T. Ohta, Y. Tateisi, H. Mima, and J. Tsujii. 2002. GENIA corpus: an annotated research abstract corpus in molecular biology domain. In Proceedings of HLT 2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S E Robertson</author>
<author>S Walker</author>
</authors>
<title>Okapi/Keenbow at TREC-8. In</title>
<date>2000</date>
<booktitle>TREC-8,</booktitle>
<pages>151--161</pages>
<contexts>
<context position="6068" citStr="Robertson and Walker, 2000" startWordPosition="989" endWordPosition="992">uery qi and a document d is given, the relevance of the whole query is defined as following. Definition 2 (Relevance of the whole query) Let q be a given query, d be a document and q1, ..., qM subqueries of q. The relevance vector E(q, d) ofd is defined as follows: E(q, d) = (σ(q1, d), σ(q2, d), ..., σ(qM, d)) A relevance of a subquery should be defined similarly to that of keyword-based queries in the traditional ranked retrieval. For example, TFIDF, which is used in our experiments in Section 3, is the most simple and straightforward one, while other relevance measures recently proposed in (Robertson and Walker, 2000) can be applied. TF value is calculated using the number of extents matching the subquery, and IDF value is calculated using the number of documents including the extents matching the subquery. While we have defined a relevance of the structured query as a vector, we need to sort the documents according to the relevance vectors. In this paper, we first map a vector into a scalar value, and then sort the documents 1In this query, ‘[x]’ is a syntax sugar of ‘(x) ✸ (/x)’. according to this scalar measure. Three methods are introduced for the mapping from the relevance vector to the scalar measure</context>
</contexts>
<marker>Robertson, Walker, 2000</marker>
<rawString>S. E. Robertson and S. Walker. 2000. Okapi/Keenbow at TREC-8. In TREC-8, pages 151–161.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Theobald</author>
<author>G Weilkum</author>
</authors>
<title>Adding relevance to XML.</title>
<date>2000</date>
<booktitle>In Proceedings of WebDB’00.</booktitle>
<contexts>
<context position="760" citStr="Theobald and Weilkum, 2000" startWordPosition="94" endWordPosition="97">sujii†‡† Department of Computer Science, Graduate School of Information Science and Technology, University of Tokyo, Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, Japan ‡ CREST, JST (Japan Science and Technology Corporation) Honcho 4-1-8, Kawaguchi-shi, Saitama 332-0012, Japan {kmasuda,ninomi,yusuke,okap,tsujii}@is.s.u-tokyo.ac.jp 1 Introduction In the text retrieval area including XML and Region Algebra, many researchers pursued models for specifying what kinds of information should appear in specified structural positions and linear positions (Chinenyanga and Kushmerick, 2001; Wolff et al., 1999; Theobald and Weilkum, 2000; Clarke et al., 1995). The models attracted many researchers because they are considered to be basic frameworks for retrieving or extracting complex information like events. However, unlike IR by keywordbased search, their models are not robust, that is, they support only exact matching of queries, while we would like to know to what degree the contents in specified structural positions are relevant to those in the query even when the structure does not exactly match the query. This paper describes a new ranked retrieval model that enables proximal and structural search for structured texts. </context>
</contexts>
<marker>Theobald, Weilkum, 2000</marker>
<rawString>A. Theobald and G. Weilkum. 2000. Adding relevance to XML. In Proceedings of WebDB’00.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Wolff</author>
<author>H Fl¨orke</author>
<author>A Cremers</author>
</authors>
<title>XPRES: a Ranking Approach to Retrieval on Structured Documents.</title>
<date>1999</date>
<tech>Technical Report IAI-TR-99-12,</tech>
<institution>University of Bonn.</institution>
<marker>Wolff, Fl¨orke, Cremers, 1999</marker>
<rawString>J. Wolff, H. Fl¨orke, and A. Cremers. 1999. XPRES: a Ranking Approach to Retrieval on Structured Documents. Technical Report IAI-TR-99-12, University of Bonn.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>