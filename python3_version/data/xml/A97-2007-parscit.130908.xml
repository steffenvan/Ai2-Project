<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001060">
<title confidence="0.696604666666667">
CIRCSim-Tutor: An Intelligent Tutoring System
Using Natural Language Dialogue*
Martha W. Evens
Ru-Charn ChangS
Yoon Hee Lees
Leem Seop Shims
</title>
<author confidence="0.905989">
Chong Woo Woos
Yuemei Zhang
</author>
<affiliation confidence="0.9992765">
Department of CSAM
Illinois Institute of Technology
</affiliation>
<address confidence="0.985945">
10 W. 31st Street 236—SB
Chicago, IL 60616
</address>
<email confidence="0.998023">
csevens@minna.iit.edu
</email>
<sectionHeader confidence="0.993793" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999027888888889">
Cmcsim-Tutor version 2, a dialogue-based intelligent
tutoring system (ITS), is nearly five years old. It
conducts a conversation with a student to help the
student learn to solve a class of problems in cardio-
vascular physiology dealing with the regulation of
blood pressure. It uses natural language for both input
and output, and can handle a variety of syntactic
constructions and lexical items, including sentence
fragments and misspelled words.
</bodyText>
<subsectionHeader confidence="0.840392">
Using Cmcstm-Tutor
</subsectionHeader>
<bodyText confidence="0.995882526315789">
One of the important topics which beginning medical
students must learn is how blood pressure is regulated
in the human body. When something happens to
change the blood pressure, such as a change in the
volume of blood in the body, the body must
compensate. The negative feedback loop which
controls this process, known as the baroreceptor
reflex, can be a difficult topic for students.
CIRcsim-Tutor is based on a qualitative model
involving seven core physiological parameters. The
core parameters and the causal relationships between
them are shown in the concept map in Figure 1.
Figure I also shows the influence of the nervous
system, which plays an essential role in blood pressure
*This work was supported by the Cognitive Science
Program, Office of Naval Research under Grant
No. N00014-94-1-0338, to Illinois Institute of Technology.
The content does not reflect the position or policy of the
government and no official endorsement should be inferred.
</bodyText>
<affiliation confidence="0.74612975">
Iftu-Charn Chang is now at Baxter Laboratories, North
Chicago, it. Yoon Hee Lee is currently Director of Training
and Education, Institute of Defense Analysis, Seoul, Korea.
Leem Seop Shim is currently at the Department of
Information Science and Telecommunications, Hanshin
University, Osan, Korea. Chong Woo Woo is currently Chair
of the Department of Computer Science, Kookmin
University, Seoul, Korea.
</affiliation>
<reference confidence="0.952336666666667">
Joel A. Michael
Allen A. Rovick
Department of Physiology
Rush Medical College
1750 West Harrison
Chicago, IL 60612
</reference>
<email confidence="0.871004">
jmichael@steve.iit.edu
aar@rpslmc.edu
</email>
<bodyText confidence="0.9999103125">
regulation. (In the diagram, Baro = baroreceptor
pressure and NS = nervous system response.)
Students use Cmcsim-Tutor to learn to solve
problems like those taught in their physiology course.
Students are asked to predict the value of the seven
parameters at three points in time: the DR or direct
response stage immediately after the precipitating
event, the RR or reflex response stage after the nervous
system responds, and the SS or new steady state stage.
When students start CiRcsim-Tutor, they see the
main user interface screen illustrated in Figure 2. The
precipitating event (a broken pacemaker in this case) is
shown at the top of the screen. One side of the screen
contains room for students to enter their predictions.
After the predictions are entered, the dialogue will
unfold on the other side of the screen.
</bodyText>
<subsectionHeader confidence="0.362144">
Instructional and Discourse Planning
</subsectionHeader>
<bodyText confidence="0.99993625">
The main components of Cmcsim-Tutor v.2 are the
input understander, the student modeler, the instruc-
tional planner, the discourse processor, the text
generator, and the knowledge base/problem solver.
</bodyText>
<figureCaption confidence="0.486957">
Figure I
</figureCaption>
<page confidence="0.994237">
13
</page>
<bodyText confidence="0.999829045454545">
CiRcsim-Tutor picks a problem for the student to
solve and obtains the correct answers from the problem
solver. It collects the student&apos;s predictions and calls the
instructional planner to conduct a conversation.
The planner is given the student&apos;s predictions, plus a
student model showing student errors and possible
misconceptions. CiRcsim-Tutor v. 2 uses an overlay
model. For each causal relation in the knowledge base,
the student model keeps a record of whether the
student is correct or mistaken about that relationship.
This record is built when the predictions are first
entered and updated during the dialogue.
The planning cycle is implemented with an
augmented finite state machine. The tutoring plans are
kept on a stack. State transitions are chosen based on
the student&apos;s current input, whether the student has
attempted the question before, and domain knowledge.
For example, the system only generates a hint when the
student makes a mistake on the first try at a question.
Otherwise it gives the student the right answer.
The planner calls the discourse processor with a list
of discourse actions such as the following:
</bodyText>
<listItem confidence="0.9990482">
1. Elicit the determinants of the erroneous variable
2. Elicit the currently active determinant
3. Elicit the relationship between the active deter-
minant and the erroneous variable
4. Elicit the correct value
</listItem>
<bodyText confidence="0.9815695">
Alternatives to elicit are to give a declarative expla-
nation or a hint (&amp;quot;Remember that ...&amp;quot;).
</bodyText>
<subsectionHeader confidence="0.573538">
Parsing, Interpretation and and Spelling Correction
</subsectionHeader>
<bodyText confidence="0.997598">
The input understanding component of Cmcsim-Tutor
v. 2 contains a bottom-up chart parser, producing first
a phrase-structure parse and then a Lexical Functional
Grammar f-structure. Matching the f-structure
functional representation of the student&apos;s utterance to
</bodyText>
<table confidence="0.986163555555556">
Problem: Pacemaker malfunctions
DR RR SS Dialogue
RAP
CC
SV
HR
CO
TPR
MAP
</table>
<bodyText confidence="0.99673675">
the logic form of the tutor&apos;s question is largely
performed by ad hoc code. This task is simplified by
the fact that ten predicates cover most student answers.
The CmcsIm-Tutor v. 2 input lexicon is comprised
of approximately 750 lemmata. Also in the lexicon are
basic Lexical-Functional Grammar annotations to be
used by the parser. Spelling correction is an important
aspect of the input understander, as students frequently
misspell words, abbreviate creatively, and make word
boundary errors (two words joined together or a single
word split in two). Spelling correction is based on a
three-way match algorithm which slides a small
window simultaneously across both the unknown input
word and a candidate word from the lexicon. Trans-
positions, elisions, substitutions, and similar errrors are
counted and the most likely candidate is picked.
</bodyText>
<subsectionHeader confidence="0.598011">
Text Generation
</subsectionHeader>
<bodyText confidence="0.999646">
The text generator produces sentences from logic forms
generated by the planner. A single tutor turn may
involve several logic forms, such as an acknow-
ledgment, an explanation expressed as a declarative
statement, and a question. The logic forms are used to
fill in abstract templates. Transformations such as
passivization, insertion of auxiliary verbs and wh-
movement are performed, and the final sentence is
linearized with the help of an LFG grammar.
</bodyText>
<subsectionHeader confidence="0.776433">
Example of Generated Dialogue
</subsectionHeader>
<bodyText confidence="0.9765848">
Here is an excerpt from a conversation generated from
the tutoring tutoring tactic illustrated above:
T: Remember that the Direct Response occurs imme-
diately and produces changes in the system before
any reflex is activated. What controls HR?
S: Nervous system.
T: Correct. Heart rate is neurally controlled. What is
the correct value of HR?
S: Unchanged.
T: Correct, the value of HR is unchanged ...
</bodyText>
<sectionHeader confidence="0.99866" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.998406666666667">
We thank Stefan Brandle, Reva Freedman and Michael
Glass for continued enhancements to v. 2 as part oi
their research on v. 3, and for writing this document.
</bodyText>
<sectionHeader confidence="0.991921" genericHeader="references">
References
</sectionHeader>
<bodyText confidence="0.9762">
The CiRcsim-Tutor project has published over 5(
papers. For a complete bibliography, please see oui
Web page http: //www. csam. iit . edu/-circsim.
</bodyText>
<figureCaption confidence="0.530419">
Figure 2
</figureCaption>
<page confidence="0.997574">
14
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000401">
<title confidence="0.999377">An Intelligent Tutoring System Using Natural Language Dialogue*</title>
<author confidence="0.987033">Martha W Evens</author>
<title confidence="0.87410575">Ru-Charn ChangS Yoon Hee Lees Leem Seop Shims Chong Woo Woos</title>
<author confidence="0.999923">Yuemei Zhang</author>
<affiliation confidence="0.999964">Department of CSAM Illinois Institute of Technology</affiliation>
<address confidence="0.989367">10 W. 31st Street 236—SB Chicago, IL 60616</address>
<email confidence="0.999455">csevens@minna.iit.edu</email>
<abstract confidence="0.98887664">Cmcsim-Tutor version 2, a dialogue-based intelligent tutoring system (ITS), is nearly five years old. It conducts a conversation with a student to help the student learn to solve a class of problems in cardiovascular physiology dealing with the regulation of blood pressure. It uses natural language for both input and output, and can handle a variety of syntactic constructions and lexical items, including sentence fragments and misspelled words. Using Cmcstm-Tutor One of the important topics which beginning medical students must learn is how blood pressure is regulated in the human body. When something happens to change the blood pressure, such as a change in the volume of blood in the body, the body must compensate. The negative feedback loop which this process, known as the be a difficult topic for students. CIRcsim-Tutor is based on a qualitative model involving seven core physiological parameters. The core parameters and the causal relationships between them are shown in the concept map in Figure 1. Figure I also shows the influence of the nervous system, which plays an essential role in blood pressure</abstract>
<note confidence="0.520873615384615">This work was supported by the Cognitive Science Program, Office of Naval Research under Grant No. N00014-94-1-0338, to Illinois Institute of Technology. The content does not reflect the position or policy of the government and no official endorsement should be inferred. Iftu-Charn Chang is now at Baxter Laboratories, North Chicago, it. Yoon Hee Lee is currently Director of Training and Education, Institute of Defense Analysis, Seoul, Korea. Leem Seop Shim is currently at the Department of Information Science and Telecommunications, Hanshin University, Osan, Korea. Chong Woo Woo is currently Chair of the Department of Computer Science, Kookmin University, Seoul, Korea.</note>
<author confidence="0.9804325">Joel A Michael Allen A Rovick</author>
<affiliation confidence="0.997486">Department of Physiology Rush Medical College</affiliation>
<address confidence="0.9939615">1750 West Harrison Chicago, IL 60612</address>
<email confidence="0.970649">jmichael@steve.iit.eduaar@rpslmc.edu</email>
<abstract confidence="0.996703923076923">regulation. (In the diagram, Baro = baroreceptor pressure and NS = nervous system response.) Students use Cmcsim-Tutor to learn to solve problems like those taught in their physiology course. Students are asked to predict the value of the seven at three points in time: the DR or immediately after the precipitating the RR or response after the nervous responds, and the SS or new state When students start CiRcsim-Tutor, they see the main user interface screen illustrated in Figure 2. The precipitating event (a broken pacemaker in this case) is shown at the top of the screen. One side of the screen contains room for students to enter their predictions. After the predictions are entered, the dialogue will unfold on the other side of the screen. Instructional and Discourse Planning The main components of Cmcsim-Tutor v.2 are the input understander, the student modeler, the instructional planner, the discourse processor, the text generator, and the knowledge base/problem solver. Figure I 13 CiRcsim-Tutor picks a problem for the student to solve and obtains the correct answers from the problem solver. It collects the student&apos;s predictions and calls the instructional planner to conduct a conversation. The planner is given the student&apos;s predictions, plus a student model showing student errors and possible misconceptions. CiRcsim-Tutor v. 2 uses an overlay model. For each causal relation in the knowledge base, the student model keeps a record of whether the student is correct or mistaken about that relationship. This record is built when the predictions are first entered and updated during the dialogue. The planning cycle is implemented with an augmented finite state machine. The tutoring plans are kept on a stack. State transitions are chosen based on the student&apos;s current input, whether the student has attempted the question before, and domain knowledge. For example, the system only generates a hint when the student makes a mistake on the first try at a question. Otherwise it gives the student the right answer. The planner calls the discourse processor with a list of discourse actions such as the following: 1. Elicit the determinants of the erroneous variable 2. Elicit the currently active determinant 3. Elicit the relationship between the active determinant and the erroneous variable 4. Elicit the correct value to are give a declarative explanation or a hint (&amp;quot;Remember that ...&amp;quot;).</abstract>
<title confidence="0.5587335">Parsing, Interpretation and and Spelling Correction The input understanding component of Cmcsim-Tutor</title>
<abstract confidence="0.8813700625">v. 2 contains a bottom-up chart parser, producing first a phrase-structure parse and then a Lexical Functional Grammar f-structure. Matching the f-structure functional representation of the student&apos;s utterance to Problem: Pacemaker malfunctions DR RR SS Dialogue RAP CC SV HR CO TPR MAP the logic form of the tutor&apos;s question is largely by hoc This task is simplified by the fact that ten predicates cover most student answers. The CmcsIm-Tutor v. 2 input lexicon is comprised of approximately 750 lemmata. Also in the lexicon are basic Lexical-Functional Grammar annotations to be used by the parser. Spelling correction is an important aspect of the input understander, as students frequently misspell words, abbreviate creatively, and make word boundary errors (two words joined together or a single word split in two). Spelling correction is based on a three-way match algorithm which slides a small window simultaneously across both the unknown input word and a candidate word from the lexicon. Transpositions, elisions, substitutions, and similar errrors are counted and the most likely candidate is picked. Text Generation The text generator produces sentences from logic forms generated by the planner. A single tutor turn may involve several logic forms, such as an acknowledgment, an explanation expressed as a declarative statement, and a question. The logic forms are used to fill in abstract templates. Transformations such as passivization, insertion of auxiliary verbs and whmovement are performed, and the final sentence is linearized with the help of an LFG grammar. Example of Generated Dialogue Here is an excerpt from a conversation generated from the tutoring tutoring tactic illustrated above: T: Remember that the Direct Response occurs immediately and produces changes in the system before any reflex is activated. What controls HR? S: Nervous system. T: Correct. Heart rate is neurally controlled. What is the correct value of HR?</abstract>
<note confidence="0.782650416666667">S: Unchanged. T: Correct, the value of HR is unchanged ... Acknowledgments We thank Stefan Brandle, Reva Freedman and Michael Glass for continued enhancements to v. 2 as part oi their research on v. 3, and for writing this document. References The CiRcsim-Tutor project has published over 5( papers. For a complete bibliography, please see oui page //www. csam. iit . edu/-circsim. Figure 2 14</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Joel A Michael Allen A</author>
</authors>
<institution>Rovick Department of Physiology Rush Medical College</institution>
<marker>A, </marker>
<rawString> Joel A. Michael Allen A. Rovick Department of Physiology Rush Medical College</rawString>
</citation>
<citation valid="false">
<authors>
<author>West Harrison Chicago</author>
</authors>
<journal>IL</journal>
<pages>60612</pages>
<marker>1750</marker>
<rawString>West Harrison Chicago, IL 60612</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>