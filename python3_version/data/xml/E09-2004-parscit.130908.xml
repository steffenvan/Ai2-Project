<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.046928">
<title confidence="0.8117075">
GOSSIP GALORE
A Self-Learning Agent for Exchanging Pop Trivia
</title>
<author confidence="0.987225">
Xiwen Cheng, Peter Adolphs, Feiyu Xu, Hans Uszkoreit, Hong Li
</author>
<affiliation confidence="0.96461">
DFKI GmbH, Language Technology Lab
</affiliation>
<address confidence="0.941197">
Stuhlsatzenhausweg 3, D-66123 Saarbr¨ucken, Germany
</address>
<email confidence="0.99856">
{xiwen.cheng,peter.adolphs,feiyu,uszkoreit,lihong}@domain.com
</email>
<sectionHeader confidence="0.997383" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999175">
This paper describes a self-learning soft-
ware agent who collects and learns knowl-
edge from the web and also exchanges her
knowledge via dialogues with the users.
The agent is built on top of information
extraction, web mining, question answer-
ing and dialogue system technologies, and
users can freely formulate their questions
within the gossip domain and obtain the
answers in multiple ways: textual re-
sponse, graph-based visualization of the
related concepts and speech output.
</bodyText>
<sectionHeader confidence="0.999393" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9983">
The system presented here is developed within the
project Responsive Artificial Situated Cognitive
Agents Living and Learning on the Internet (RAS-
CALLI) supported by the European Commission
Cognitive Systems Programme (IST-27596-2004).
The goal of the project is to develop and imple-
ment cognitively enhanced artificial agents, using
technologies in natural language processing, ques-
tion answering, web-based information extraction,
semantic web and interaction driven profiling with
cognitive modelling (Krenn, 2008).
This paper describes a conversational agent
“Gossip Galore”, an active self-learning system
that can learn, update and interpret information
from the web, and can make conversations with
users and provide answers to their questions in the
domain of celebrity gossip. In more detail, by
applying a minimally supervised relation extrac-
tion system (Xu et al., 2007; Xu et al., 2008), the
agent automatically collects the knowledge from
relevant websites, and also communicates with the
users using a question-answering engine via a 3D
graphic interface.
This paper is organized as follows. Section 2
gives an overview of the system architecture and
</bodyText>
<figureCaption confidence="0.8881695">
Figure 1: Gossip Galore responding to “Tell me
something about Carla Bruni!”
</figureCaption>
<bodyText confidence="0.99597225">
presents the design and functionalities of the com-
ponents. Section 3 explains the system setup and
discusses implementation details, and finally Sec-
tion 4 draws conclusions.
</bodyText>
<sectionHeader confidence="0.964097" genericHeader="method">
2 System Overview
</sectionHeader>
<bodyText confidence="0.999317470588236">
Figure 1 shows a use case of the system. Given a
query “Tell me something about Carla Bruni”, the
application would trigger a series of background
actions and respond with: “Here, have a look at
the personal profile of Carla Bruni”. Meanwhile,
the personal profile of Carla Bruni, would be dis-
played on the screen. The design of the interface
reflects the domain of celebrity gossip: the agent
is depicted as a young lady in 3D graphics, who
communicates with users. As an additional fea-
ture, users can access the dialogue memory of the
system, which simulates the human memory in di-
alogues. An example of the dialogue memory is
sketched in Figure 2.
As shown in Figure 3, the system consists of a
number of components. In principle, first, a user’s
query is linguistically analyzed, and then inter-
</bodyText>
<note confidence="0.337315">
Proceedings of the EACL 2009 Demonstrations Session, pages 13–16,
Athens, Greece, 3 April 2009. c�2009 Association for Computational Linguistics
</note>
<page confidence="0.994688">
13
</page>
<figure confidence="0.999759142857143">
Dialogue
State
Input
Analyzer
Dialogue
Memory
Input
Interpreter
Conversational
Agent
Response
Handler
MM Generator
Knowledge
Base
Relation
Extractor
Web
Miner
Information
Wrapper
Spell
Checker
NE Recognizer
Parser
Anaphora
Resolver
NL Generator
</figure>
<figureCaption confidence="0.987937333333333">
Figure 3: Agent architecture and interaction of components
Figure 2: Representation of Social Network in Di-
alogue Memory
</figureCaption>
<bodyText confidence="0.999811125">
preted with respect to the context of the dialogue.
A Response Handler will then consult the knowl-
edge base pre-constructed by extracting relevant
information from the Web, and pass the answer, in
an abstract representation, to a Multimodal Gener-
ator, which realizes and presents the answer to the
user in multiple ways. The main components are
described in the following sections.
</bodyText>
<subsectionHeader confidence="0.992247">
2.1 Knowledge Base
</subsectionHeader>
<bodyText confidence="0.999985428571429">
The knowledge base is automatically built by the
Web Miner. It contains knowledge regarding prop-
erties of persons or groups and their social rela-
tionships. The persons and groups that we concern
are celebrities in the entertainment industry (e.g.,
singers, bands, or movie stars) and their relatives
(e.g., partners) and friends. Typical properties of a
person include name, gender, birthday, etc., and
profiles of celebrities contain additional proper-
ties such as sexual orientation, home pages, stage
names, genres of their work, albums, and prizes.
Social relationships between the persons/groups
such as parent-child, partner, sibling, influenc-
ing/influenced and group-member, are also stored.
</bodyText>
<subsectionHeader confidence="0.999691">
2.2 Web Miner
</subsectionHeader>
<bodyText confidence="0.999835083333333">
The Web Miner fetches relevant concepts and their
relations by means of two technologies: a) infor-
mation wrapping for exaction of personal profiles
from structured and semi-structured web content,
and b) a minimally supervised machine learning
method provided by DARE (Xu et al., 2007; Xu
et al., 2008) to acquire relations from free texts.
DARE learns linguistic patterns indicating the tar-
get semantic relations by taking some relation in-
stances as initial seed. For example, assume that
the following seed for a parent-child relationship
is given to the DARE system:
</bodyText>
<listItem confidence="0.9967665">
(1) Seed: (Angelina Jolie, Shiloh Nouvel Jolie-Pitt,
daughter)
</listItem>
<bodyText confidence="0.920084">
One sentence that matches the entities men-
tioned in the seed above could be (2), and from
which the DARE system can derive a linguistic
pattern as shown in 3.
</bodyText>
<listItem confidence="0.827960888888889">
(2) Matched sentence: Angelina Jolie and Brad Pitt
welcome their new daughter Shiloh Nouvel Jolie-Pitt.
(3) Extracted pattern: (subject: celebrity) welcome
(mod: “new daughter”) (object: person)
Given the learned pattern, new instances of the
“parent-child” relationship can be automatically
discovered, e.g.:
(4) New acquired instances: (Adam Sandler, Sunny
Madeline) (Cynthia Rodriguez, Ella Alexander)
</listItem>
<bodyText confidence="0.999915571428571">
Given the discovered relations among the
celebrities and other people, the system constructs
a social network, which is the basis for providing
answers to users’ questions regarding celebrities’
relationships. The network also serves as a re-
source for the active dialogue memory of the agent
as shown in Figure 2.
</bodyText>
<page confidence="0.994536">
14
</page>
<subsectionHeader confidence="0.995084">
2.3 Input Analyzer and Input Interpreter
</subsectionHeader>
<bodyText confidence="0.999980470588235">
The Input Analyzer is designed as both domain
and dialogue context independent. It relies on sev-
eral linguistic analysis tools: 1) a spell checker, 2)
a named entity recognizer SProUT (Drozdzynski
et al., 2004), and 3) a syntactic parsing component
for which we currently employ a fuzzy paraphrase
matcher to approximate the output of a deep syn-
tactic/semantic parser.
In contrast to the Input Analyzer, the Input In-
terpreter analyzes the input with respect to the
context of the dialogue. It contains two major
components: 1) anaphoric resolution, which refers
pronouns to previously mentioned entities with the
help of the dialogue memory, and 2) domain clas-
sification, which determines whether the entities
contained in a user query can be found in the gos-
sip knowledge base (cf. “Carla Bruni” vs. “Nico-
las Sarkozy”) and whether the answer focus be-
longs to the domain (cf. “stage name” vs “body
guard”). For example, a simple factoid query such
as “Who is Madonna”, an embedded questions
like “I wonder who Madonna is”, and expressions
of requests and wishes such as “I’m interested in
Madonna”, would share the same answer focus,
i.e., the “personal profile” of “Madonna”. In ad-
dition to the simple answer types such as “person
name”, “location” and “date/time”, our system can
also deal with complex answer focus types such as
“personal profile”, “social network” and “relation
path”, as well as domain-relevant concepts such as
“party affiliation” or “sexual orientation”.
Finally, the analysis of each query is associated
with a meaning representation, an answer focus
and an expected answer type.
</bodyText>
<subsectionHeader confidence="0.993702">
2.4 Response Handler
</subsectionHeader>
<bodyText confidence="0.999951727272727">
This component executes the planned action based
on the properties of the answer focus and the en-
tities in a query. In cases where the answer focus
or the entities cannot be found in the knowledge
base, the system would still attempt to provide a
constructive answer. For instance, if a question
contains a domain-specific answer focus but en-
tities unknown to the knowledge base, the agent
will automatically look for alternative knowledge
resources, e.g., Wikipedia. For example, given
the question “Tell me something about Nicolas
Sarkozy!”, the agent would attempt a Web search
and return the corresponding page on Wikipedia
about “Nicolas Sarkozy”, even if the knowledge
base does not contain his information since he is a
politician rather than an entertainer.
In addition, specific strategies have been devel-
oped to deal with negative answers. For instance,
the agent would answer the question: When did
Madonna die?, with “As far as I know, Madonna
is still alive.”, as it cannot find any information re-
garding Madonna’s death.
</bodyText>
<subsectionHeader confidence="0.998993">
2.5 Multimodal Generator
</subsectionHeader>
<bodyText confidence="0.9999681">
The agent (i.e., the young lady in Figure 1) is
equipped with multimodal capabilities to inter-
act with users. It can show the results in tex-
tual and speech forms, using body gestures, fa-
cial expressions, and finally via multimedia out-
put to an embedded screen. We currently employ
template-based generators for producing both the
natural language utterances and the instructions to
the agent that controls the multimodal communi-
cation with the user.
</bodyText>
<subsectionHeader confidence="0.997518">
2.6 Dialogue State
</subsectionHeader>
<bodyText confidence="0.999687133333333">
The responsibility of this component is to keep
track of the current state of the dialogue between a
user and the agent. It models the system’s expec-
tation of the user’s next action and the system’s re-
actions. For example, if a user misspelled a name
as in the question “Who is Roby Williams?”, the
system would answer with a clarification question:
“Did you mean Robbie Williams?” The user is
then expected to react to the question with either
“yes” or “no”, which would not be interpretable in
other dialogue contexts where the user is expected
to ask a question. The fact that the system asks a
clarification question and expects a yes/no answer
as well as the repaired question are stored in the
Dialogue State component.
</bodyText>
<subsectionHeader confidence="0.994181">
2.7 Dialogue Memory
</subsectionHeader>
<bodyText confidence="0.999972230769231">
This component aims to simulate the cognitive ca-
pacity of the memory of a human being: con-
struction of a short-time memory and activation
of long-time memory (our Knowledge Base). It
records the sequence of all entities mentioned dur-
ing the conversation and their respective target
foci. Simultaneously, it retrieves all the related in-
formation from the Knowledge Base. In figure 2,
the dialogue memory for the three questions “Tell
me something about Carla Bruni.”, “Can you tell
me some news about her?”, “How many kids does
Brad Pitt have?” is shown. Green and yellow bub-
bles are entities mentioned in the dialogue context,
</bodyText>
<page confidence="0.99491">
15
</page>
<bodyText confidence="0.999981333333333">
where the yellow one is the last mentioned entity.
White bubbles indicate the newest records which
are acquired in the last process of online QA.
</bodyText>
<sectionHeader confidence="0.99904" genericHeader="method">
3 Implementation
</sectionHeader>
<bodyText confidence="0.999993333333333">
The system uses a client-server architecture. The
server is responsible for accepting new connec-
tions, managing accounts, processing conversa-
tions and passing responses to the clients. All
the server-side functions are implemented in Java
1.6. We use Jetty as a web server to deliver mul-
timedia representations of an answer and to pro-
vide selected functionalities of the system as web
services to our partners. The knowledge base is
stored in a MySQL database whose size is 11MB,
and contains information of 38,758 persons in-
cluding 16,532 artists and 1,407 music groups. As
for the social connection data, there are 14,909
parent-child, 16,886 partner, 4,214 sibling, 308
influence/influenced and 9,657 group-member re-
lational pairs. The social network is visualized
in JGraph, and speech output is generated by the
open-source speech synthesis system OpenMary
(Schr¨oder and Hunecke, 2007).
There are two interfaces realizing the client-
side of the system: a 3D software application and
a web interface. The software application uses
a 3D computer game engine, and communicates
with the server by messages in an XML format
based on BML and SSML. In addition, we provide
a web interface1, implemented using HTML and
Javascript on the browser side, and Java Servlets
on the server side, offering the same core func-
tionality as the 3D client.
Both the server and the web client are platform
independent. The 3D client runs on Windows with
a dedicated 3D graphics card. The recommended
memory for the server is 1GB.
</bodyText>
<sectionHeader confidence="0.999635" genericHeader="conclusions">
4 Conclusions
</sectionHeader>
<bodyText confidence="0.9999318">
This paper describes a fully implemented software
application, which discovers and learns informa-
tion and knowledge from the Web, and communi-
cates with users and exchanges gossip trivia with
them. The system uses many novel technologies
in order to achieve the goal of vividly chatting and
interacting with the users in a fun way. The tech-
nologies include information extraction, question
answering, dialogue modeling, response planning
and multimodal presentation generation. Please
</bodyText>
<footnote confidence="0.916983">
1http://rascalli.dfki.de/live/dialogue.page
</footnote>
<bodyText confidence="0.9990723125">
refer to (Xu et al., 2009) for additional details
about the “Gossip Galore” system.
The planned future extensions include the in-
tegration of deeper language processing methods
to discover more precise linguistic patterns. A
prime candidate for this extension is our own deep
syntactic/semantic parser. Another plan concerns
the required temporal aspects of relations together
with credibility checking. Finally, we plan to ex-
ploit the dialogue memory for moving more of the
dialogue initiative to the agent. In cases of miss-
ing or negative answers or in cases of pauses on
the user side, the agent can use the active parts
of the dialogue memory to propose additional rel-
evant information or to guide the user to fruitful
requests within the range of user’s interests.
</bodyText>
<sectionHeader confidence="0.99967" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9993365">
Witold Drozdzynski, Hans-Ulrich Krieger, Jakub Piskorski,
Ulrich Sch¨afer, and Feiyu Xu. 2004. Shallow processing
with unification and typed feature structures – foundations
and applications. K¨unstliche Intelligenz, 1:17–23.
Brigitte Krenn. 2008. Responsive artificial situated cognitive
agents living and learning on the internet, April. Poster
presented at CogSys 2008.
Marc Schr¨oder and Anna Hunecke. 2007. Mary tts partici-
pation in the Blizzard Challenge 2007. In Proceedings of
the Blizzard Challenge 2007, Bonn, Germany.
Feiyu Xu, Hans Uszkoreit, and Hong Li. 2007. A seed-
driven bottom-up machine learning framework for extract-
ing relations of various complexity. Proceedings of ACL-
2007, pages 584–591.
Feiyu Xu, Hans Uszkoreit, and Hong Li. 2008. Task driven
coreference resolution for relation extraction. In Proceed-
ings of ECAI 2008, Patras, Greece.
Feiyu Xu, Peter Adolphs, Hans Uszkoreit, Xiwen Cheng, and
Hong Li. 2009. Gossip galore: A conversational web
agent for collecting and sharing pop trivia. In Joaquim
Filipe, Ana Fred, and Bernadette Sharp (eds). Proceed-
ings of ICAART 2009, Porto, Portugal.
</reference>
<page confidence="0.998691">
16
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.912764">
<title confidence="0.9933485">GOSSIP GALORE A Self-Learning Agent for Exchanging Pop Trivia</title>
<author confidence="0.992185">Xiwen Cheng</author>
<author confidence="0.992185">Peter Adolphs</author>
<author confidence="0.992185">Feiyu Xu</author>
<author confidence="0.992185">Hans Uszkoreit</author>
<author confidence="0.992185">Hong Li</author>
<affiliation confidence="0.996926">DFKI GmbH, Language Technology Lab</affiliation>
<address confidence="0.982278">Stuhlsatzenhausweg 3, D-66123 Saarbr¨ucken, Germany</address>
<abstract confidence="0.995926846153846">This paper describes a self-learning software agent who collects and learns knowledge from the web and also exchanges her knowledge via dialogues with the users. The agent is built on top of information extraction, web mining, question answering and dialogue system technologies, and users can freely formulate their questions within the gossip domain and obtain the answers in multiple ways: textual response, graph-based visualization of the related concepts and speech output.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Witold Drozdzynski</author>
<author>Hans-Ulrich Krieger</author>
<author>Jakub Piskorski</author>
<author>Ulrich Sch¨afer</author>
<author>Feiyu Xu</author>
</authors>
<title>Shallow processing with unification and typed feature structures – foundations and applications. K¨unstliche Intelligenz,</title>
<date>2004</date>
<pages>1--17</pages>
<marker>Drozdzynski, Krieger, Piskorski, Sch¨afer, Xu, 2004</marker>
<rawString>Witold Drozdzynski, Hans-Ulrich Krieger, Jakub Piskorski, Ulrich Sch¨afer, and Feiyu Xu. 2004. Shallow processing with unification and typed feature structures – foundations and applications. K¨unstliche Intelligenz, 1:17–23.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brigitte Krenn</author>
</authors>
<title>Responsive artificial situated cognitive agents living and learning on the internet, April. Poster presented at CogSys</title>
<date>2008</date>
<contexts>
<context position="1294" citStr="Krenn, 2008" startWordPosition="175" endWordPosition="176"> response, graph-based visualization of the related concepts and speech output. 1 Introduction The system presented here is developed within the project Responsive Artificial Situated Cognitive Agents Living and Learning on the Internet (RASCALLI) supported by the European Commission Cognitive Systems Programme (IST-27596-2004). The goal of the project is to develop and implement cognitively enhanced artificial agents, using technologies in natural language processing, question answering, web-based information extraction, semantic web and interaction driven profiling with cognitive modelling (Krenn, 2008). This paper describes a conversational agent “Gossip Galore”, an active self-learning system that can learn, update and interpret information from the web, and can make conversations with users and provide answers to their questions in the domain of celebrity gossip. In more detail, by applying a minimally supervised relation extraction system (Xu et al., 2007; Xu et al., 2008), the agent automatically collects the knowledge from relevant websites, and also communicates with the users using a question-answering engine via a 3D graphic interface. This paper is organized as follows. Section 2 g</context>
</contexts>
<marker>Krenn, 2008</marker>
<rawString>Brigitte Krenn. 2008. Responsive artificial situated cognitive agents living and learning on the internet, April. Poster presented at CogSys 2008.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marc Schr¨oder</author>
<author>Anna Hunecke</author>
</authors>
<title>Mary tts participation in the Blizzard Challenge</title>
<date>2007</date>
<booktitle>In Proceedings of the Blizzard Challenge</booktitle>
<location>Bonn, Germany.</location>
<marker>Schr¨oder, Hunecke, 2007</marker>
<rawString>Marc Schr¨oder and Anna Hunecke. 2007. Mary tts participation in the Blizzard Challenge 2007. In Proceedings of the Blizzard Challenge 2007, Bonn, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Feiyu Xu</author>
<author>Hans Uszkoreit</author>
<author>Hong Li</author>
</authors>
<title>A seeddriven bottom-up machine learning framework for extracting relations of various complexity.</title>
<date>2007</date>
<booktitle>Proceedings of ACL2007,</booktitle>
<pages>584--591</pages>
<contexts>
<context position="1657" citStr="Xu et al., 2007" startWordPosition="229" endWordPosition="232"> develop and implement cognitively enhanced artificial agents, using technologies in natural language processing, question answering, web-based information extraction, semantic web and interaction driven profiling with cognitive modelling (Krenn, 2008). This paper describes a conversational agent “Gossip Galore”, an active self-learning system that can learn, update and interpret information from the web, and can make conversations with users and provide answers to their questions in the domain of celebrity gossip. In more detail, by applying a minimally supervised relation extraction system (Xu et al., 2007; Xu et al., 2008), the agent automatically collects the knowledge from relevant websites, and also communicates with the users using a question-answering engine via a 3D graphic interface. This paper is organized as follows. Section 2 gives an overview of the system architecture and Figure 1: Gossip Galore responding to “Tell me something about Carla Bruni!” presents the design and functionalities of the components. Section 3 explains the system setup and discusses implementation details, and finally Section 4 draws conclusions. 2 System Overview Figure 1 shows a use case of the system. Given</context>
<context position="4920" citStr="Xu et al., 2007" startWordPosition="734" endWordPosition="737">, birthday, etc., and profiles of celebrities contain additional properties such as sexual orientation, home pages, stage names, genres of their work, albums, and prizes. Social relationships between the persons/groups such as parent-child, partner, sibling, influencing/influenced and group-member, are also stored. 2.2 Web Miner The Web Miner fetches relevant concepts and their relations by means of two technologies: a) information wrapping for exaction of personal profiles from structured and semi-structured web content, and b) a minimally supervised machine learning method provided by DARE (Xu et al., 2007; Xu et al., 2008) to acquire relations from free texts. DARE learns linguistic patterns indicating the target semantic relations by taking some relation instances as initial seed. For example, assume that the following seed for a parent-child relationship is given to the DARE system: (1) Seed: (Angelina Jolie, Shiloh Nouvel Jolie-Pitt, daughter) One sentence that matches the entities mentioned in the seed above could be (2), and from which the DARE system can derive a linguistic pattern as shown in 3. (2) Matched sentence: Angelina Jolie and Brad Pitt welcome their new daughter Shiloh Nouvel </context>
</contexts>
<marker>Xu, Uszkoreit, Li, 2007</marker>
<rawString>Feiyu Xu, Hans Uszkoreit, and Hong Li. 2007. A seeddriven bottom-up machine learning framework for extracting relations of various complexity. Proceedings of ACL2007, pages 584–591.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Feiyu Xu</author>
<author>Hans Uszkoreit</author>
<author>Hong Li</author>
</authors>
<title>Task driven coreference resolution for relation extraction.</title>
<date>2008</date>
<booktitle>In Proceedings of ECAI</booktitle>
<location>Patras, Greece.</location>
<contexts>
<context position="1675" citStr="Xu et al., 2008" startWordPosition="233" endWordPosition="236">ement cognitively enhanced artificial agents, using technologies in natural language processing, question answering, web-based information extraction, semantic web and interaction driven profiling with cognitive modelling (Krenn, 2008). This paper describes a conversational agent “Gossip Galore”, an active self-learning system that can learn, update and interpret information from the web, and can make conversations with users and provide answers to their questions in the domain of celebrity gossip. In more detail, by applying a minimally supervised relation extraction system (Xu et al., 2007; Xu et al., 2008), the agent automatically collects the knowledge from relevant websites, and also communicates with the users using a question-answering engine via a 3D graphic interface. This paper is organized as follows. Section 2 gives an overview of the system architecture and Figure 1: Gossip Galore responding to “Tell me something about Carla Bruni!” presents the design and functionalities of the components. Section 3 explains the system setup and discusses implementation details, and finally Section 4 draws conclusions. 2 System Overview Figure 1 shows a use case of the system. Given a query “Tell me </context>
<context position="4938" citStr="Xu et al., 2008" startWordPosition="738" endWordPosition="741"> and profiles of celebrities contain additional properties such as sexual orientation, home pages, stage names, genres of their work, albums, and prizes. Social relationships between the persons/groups such as parent-child, partner, sibling, influencing/influenced and group-member, are also stored. 2.2 Web Miner The Web Miner fetches relevant concepts and their relations by means of two technologies: a) information wrapping for exaction of personal profiles from structured and semi-structured web content, and b) a minimally supervised machine learning method provided by DARE (Xu et al., 2007; Xu et al., 2008) to acquire relations from free texts. DARE learns linguistic patterns indicating the target semantic relations by taking some relation instances as initial seed. For example, assume that the following seed for a parent-child relationship is given to the DARE system: (1) Seed: (Angelina Jolie, Shiloh Nouvel Jolie-Pitt, daughter) One sentence that matches the entities mentioned in the seed above could be (2), and from which the DARE system can derive a linguistic pattern as shown in 3. (2) Matched sentence: Angelina Jolie and Brad Pitt welcome their new daughter Shiloh Nouvel Jolie-Pitt. (3) Ex</context>
</contexts>
<marker>Xu, Uszkoreit, Li, 2008</marker>
<rawString>Feiyu Xu, Hans Uszkoreit, and Hong Li. 2008. Task driven coreference resolution for relation extraction. In Proceedings of ECAI 2008, Patras, Greece.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Feiyu Xu</author>
<author>Peter Adolphs</author>
<author>Hans Uszkoreit</author>
<author>Xiwen Cheng</author>
<author>Hong Li</author>
</authors>
<title>Gossip galore: A conversational web agent for collecting and sharing pop trivia.</title>
<date>2009</date>
<booktitle>In Joaquim Filipe, Ana Fred, and Bernadette Sharp (eds). Proceedings of ICAART 2009,</booktitle>
<location>Porto, Portugal.</location>
<contexts>
<context position="12966" citStr="Xu et al., 2009" startWordPosition="2023" endWordPosition="2026">. The recommended memory for the server is 1GB. 4 Conclusions This paper describes a fully implemented software application, which discovers and learns information and knowledge from the Web, and communicates with users and exchanges gossip trivia with them. The system uses many novel technologies in order to achieve the goal of vividly chatting and interacting with the users in a fun way. The technologies include information extraction, question answering, dialogue modeling, response planning and multimodal presentation generation. Please 1http://rascalli.dfki.de/live/dialogue.page refer to (Xu et al., 2009) for additional details about the “Gossip Galore” system. The planned future extensions include the integration of deeper language processing methods to discover more precise linguistic patterns. A prime candidate for this extension is our own deep syntactic/semantic parser. Another plan concerns the required temporal aspects of relations together with credibility checking. Finally, we plan to exploit the dialogue memory for moving more of the dialogue initiative to the agent. In cases of missing or negative answers or in cases of pauses on the user side, the agent can use the active parts of </context>
</contexts>
<marker>Xu, Adolphs, Uszkoreit, Cheng, Li, 2009</marker>
<rawString>Feiyu Xu, Peter Adolphs, Hans Uszkoreit, Xiwen Cheng, and Hong Li. 2009. Gossip galore: A conversational web agent for collecting and sharing pop trivia. In Joaquim Filipe, Ana Fred, and Bernadette Sharp (eds). Proceedings of ICAART 2009, Porto, Portugal.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>