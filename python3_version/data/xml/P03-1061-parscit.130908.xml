<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000006">
<title confidence="0.740452">
Morphological Analysis of a Large Spontaneous Speech Corpus in Japanese
Kiyotaka Uchimoto† Chikashi Nobata† Atsushi Yamada†
</title>
<author confidence="0.700447">
Satoshi Sekine$ Hitoshi Isahara†
</author>
<affiliation confidence="0.879254">
†Communications Research Laboratory $New York University
</affiliation>
<address confidence="0.937416">
3-5, Hikari-dai, Seika-cho, Soraku-gun, 715 Broadway, 7th floor
Kyoto, 619-0289, Japan New York, NY 10003, USA
</address>
<email confidence="0.999784">
{uchimoto,nova,ark,isahara}@crl.go.jp sekine@cs.nyu.edu
</email>
<sectionHeader confidence="0.995656" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99999615">
This paper describes two methods for de-
tecting word segments and their morpho-
logical information in a Japanese sponta-
neous speech corpus, and describes how
to tag a large spontaneous speech corpus
accurately by using the two methods. The
first method is used to detect any type of
word segments. The second method is
used when there are several definitions for
word segments and their POS categories,
and when one type of word segments in-
cludes another type of word segments. In
this paper, we show that by using semi-
automatic analysis we achieve a precision
of better than 99% for detecting and tag-
ging short words and 97% for long words;
the two types of words that comprise the
corpus. We also show that better accuracy
is achieved by using both methods than by
using only the first.
</bodyText>
<sectionHeader confidence="0.999332" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999417333333333">
The “Spontaneous Speech: Corpus and Process-
ing Technology” project is sponsoring the construc-
tion of a large spontaneous Japanese speech corpus,
Corpus of Spontaneous Japanese (CSJ) (Maekawa
et al., 2000). The CSJ is a collection of mono-
logues and dialogues, the majority being mono-
logues such as academic presentations and simu-
lated public speeches. Simulated public speeches
are short speeches presented specifically for the cor-
pus by paid non-professional speakers. The CSJ in-
cludes transcriptions of the speeches as well as audio
recordings of them. One of the goals of the project
is to detect two types of word segments and cor-
responding morphological information in the tran-
scriptions. The two types of word segments were
defined by the members of The National Institute for
Japanese Language and are called short word and
long word. The term short word approximates a dic-
tionary item found in an ordinary Japanese dictio-
nary, and long word represents various compounds.
The length and part-of-speech (POS) of each are dif-
ferent, and every short word is included in a long
word, which is shorter than a Japanese phrasal unit,
a bunsetsu. If all of the short words in the CSJ
were detected, the number of the words would be
approximately seven million. That would be the
largest spontaneous speech corpus in the world. So
far, approximately one tenth of the words have been
manually detected, and morphological information
such as POS category and inflection type have been
assigned to them. Human annotators tagged every
morpheme in the one tenth of the CSJ that has been
tagged, and other annotators checked them. The hu-
man annotators discussed their disagreements and
resolved them. The accuracies of the manual tagging
of short and long words in the one tenth of the CSJ
were greater than 99.8% and 97%, respectively. The
accuracies were evaluated by random sampling. As
it took over two years to tag one tenth of the CSJ ac-
curately, tagging the remainder with morphological
information would take about twenty years. There-
fore, the remaining nine tenths of the CSJ must be
tagged automatically or semi-automatically.
In this paper, we describe methods for detecting
the two types of word segments and corresponding
morphological information. We also describe how
to tag a large spontaneous speech corpus accurately.
Henceforth, we call the two types of word segments
short word and long word respectively, or merely
morphemes. We use the term morphological anal-
ysis for the process of segmenting a given sentence
into a row of morphemes and assigning to each mor-
pheme grammatical attributes such as a POS cate-
gory.
</bodyText>
<sectionHeader confidence="0.839716" genericHeader="introduction">
2 Problems and Their Solutions
</sectionHeader>
<bodyText confidence="0.999936733333334">
As we mentioned in Section 1, tagging the whole of
the CSJ manually would be difficult. Therefore, we
are taking a semi-automatic approach. This section
describes major problems in tagging a large sponta-
neous speech corpus with high precision in a semi-
automatic way, and our solutions to those problems.
One of the most important problems in morpho-
logical analysis is that posed by unknown words,
which are words found in neither a dictionary nor
a training corpus. Two statistical approaches have
been applied to this problem. One is to find un-
known words from corpora and put them into a
dictionary (e.g., (Mori and Nagao, 1996)), and the
other is to estimate a model that can identify un-
known words correctly (e.g., (Kashioka et al., 1997;
Nagata, 1999)). Uchimoto et al. used both ap-
proaches. They proposed a morphological analysis
method based on a maximum entropy (ME) model
(Uchimoto et al., 2001). Their method uses a model
that estimates how likely a string is to be a mor-
pheme as its probability, and thus it has a potential
to overcome the unknown word problem. Therefore,
we use their method for morphological analysis of
the CSJ. However, Uchimoto et al. reported that the
accuracy of automatic word segmentation and POS
tagging was 94 points in F-measure (Uchimoto et
al., 2002). That is much lower than the accuracy ob-
tained by manual tagging. Several problems led to
this inaccuracy. In the following, we describe these
problems and our solutions to them.
</bodyText>
<listItem confidence="0.989226">
• Fillers and disfluencies
</listItem>
<bodyText confidence="0.98325625">
Fillers and disfluencies are characteristic ex-
pressions often used in spoken language, but
they are randomly inserted into text, so detect-
ing their segmentation is difficult. In the CSJ,
they are tagged manually. Therefore, we first
delete fillers and disfluencies and then put them
back in their original place after analyzing a
text.
</bodyText>
<listItem confidence="0.974189">
• Accuracy for unknown words
</listItem>
<bodyText confidence="0.998619214285714">
The morpheme model that will be described
in Section 3.1 can detect word segments and
their POS categories even for unknown words.
However, the accuracy for unknown words is
lower than that for known words. One of the
solutions is to use dictionaries developed for a
corpus on another domain to reduce the num-
ber of unknown words, but the improvement
achieved is slight (Uchimoto et al., 2002). We
believe that the reason for this is that defini-
tions of a word segment and its POS category
depend on a particular corpus, and the defi-
nitions from corpus to corpus differ word by
word. Therefore, we need to put only words
extracted from the same corpus into a dictio-
nary. We are manually examining words that
are detected by the morpheme model but that
are not found in a dictionary. We are also
manually examining those words that the mor-
pheme model estimated as having low proba-
bility. During the process of manual exami-
nation, if we find words that are not found in
a dictionary, those words are then put into a
dictionary. Section 4.2.1 will describe the ac-
curacy of detecting unknown words and show
how much those words contribute to improving
the morphological analysis accuracy when they
are detected and put into a dictionary.
</bodyText>
<listItem confidence="0.864674">
• Insufficiency of features
</listItem>
<bodyText confidence="0.999965157894737">
The model currently used for morphological
analysis considers the information of a target
morpheme and that of an adjacent morpheme
on the left. To improve the model, we need to
consider the information of two or more mor-
phemes on the left of the target morpheme.
However, too much information often leads to
overtraining the model. Using all the informa-
tion makes training the model difficult when
there is too much of it. Therefore, the best
way to improve the accuracy of the morpholog-
ical information in the CSJ within the limited
time available to us is to examine and revise
the errors of automatic morphological analysis
and to improve the model. We assume that the
smaller the probability estimated by a model
for an output morpheme is, then the greater
the likelihood is that the output morpheme is
wrong. Therefore, we examine output mor-
phemes in ascending order of their probabili-
ties. The expected improvement of the accu-
racy of the morphological information in the
whole of the CSJ will be described in Sec-
tion 4.2.1
Another problem concerning unknown words
is that the cost of manual examination is high
when there are several definitions for word seg-
ments and their POS categories. Since there
are two types of word definitions in the CSJ,
the cost would double. Therefore, to reduce the
cost, we propose another method for detecting
word segments and their POS categories. The
method will be described in Section 3.2, and
the advantages of the method will be described
in Section 4.2.2
The next problem described here is one that we
have to solve to make a language model for auto-
matic speech recognition.
</bodyText>
<listItem confidence="0.977961">
• Pronunciation
</listItem>
<bodyText confidence="0.998571">
Pronunciation of each word is indispensable for
making a language model for automatic speech
recognition. In the CSJ, pronunciation is tran-
scribed separately from the basic form writ-
ten by using kanji and hiragana characters as
shown in Fig. 1. Text targeted for morpho-
</bodyText>
<figure confidence="0.2518065">
Basic form Pronunciation
0017 00051.425-00052.869 L:
(F ) (F )
0018 00053.073-00054.503 L:
0019 00054.707-00056.341 L:
“Well, I’m going to talk about morphological analysis.”
</figure>
<figureCaption confidence="0.999811">
Figure 1: Example of transcription.
</figureCaption>
<bodyText confidence="0.998654736842105">
logical analysis is the basic form of the CSJ
and it does not have information on actual pro-
nunciation. The result of morphological anal-
ysis, therefore, is a row of morphemes that
do not have information on actual pronuncia-
tion. To estimate actual pronunciation by using
only the basic form and a dictionary is impossi-
ble. Therefore, actual pronunciation is assigned
to results of morphological analysis by align-
ing the basic form and pronunciation in the
CSJ. First, the results of morphological anal-
ysis, namely, the morphemes, are transliterated
into katakana characters by using a dictionary,
and then they are aligned with pronunciation
in the CSJ by using a dynamic programming
method.
In this paper, we will mainly discuss methods for
detecting word segments and their POS categories in
the whole of the CSJ.
</bodyText>
<sectionHeader confidence="0.966321" genericHeader="method">
3 Models and Algorithms
</sectionHeader>
<bodyText confidence="0.999764">
This section describes two methods for detecting
word segments and their POS categories. The first
method uses morpheme models and is used to detect
any type of word segment. The second method uses
a chunking model and is only used to detect long
word segments.
</bodyText>
<subsectionHeader confidence="0.988936">
3.1 Morpheme Model
</subsectionHeader>
<bodyText confidence="0.999402444444445">
Given a tokenized test corpus, namely a set of
strings, the problem of Japanese morphological
analysis can be reduced to the problem of assign-
ing one of two tags to each string in a sentence. A
string is tagged with a 1 or a 0 to indicate whether
it is a morpheme. When a string is a morpheme, a
grammatical attribute is assigned to it. A tag desig-
nated as a 1 is thus assigned one of a number, n, of
grammatical attributes assigned to morphemes, and
the problem becomes to assign an attribute (from 0
to n) to every string in a given sentence.
We define a model that estimates the likelihood
that a given string is a morpheme and has a gram-
matical attribute i(1 &lt; i &lt; n) as a morpheme
model. We implemented this model within an ME
modeling framework (Jaynes, 1957; Jaynes, 1979;
Berger et al., 1996). The model is represented by
Eq. (1):
</bodyText>
<equation confidence="0.9784015">
pλ(a|b) =
([mo )
exp i,j Ai,jgi,j(a, b)
(1)
Zλ(b)
PPP : post-positional particle , AUX : auxiliary verb , ADF : adverbial form
</equation>
<figureCaption confidence="0.999612">
Figure 2: Example of morphological analysis results.
</figureCaption>
<figure confidence="0.9950761">
Short word
Long word
(form) (keitai) Noun
(morphological
analysis)
(keitaisokaiseki) Noun
Word Pronunciation POS Others
Word Pronunciation POS Others
(element) (so) Suffix
(analysis) (kaiseki) Noun
(ni) PPP case marker
(relate) (tsui) Verb KA-GYO, ADF, eu-
phonic change
(te) PPP conjunctive
(o) Prefix
(talk) (hanashi) Verb SA-GYO, ADF
(do) (itashi) Verb SA-GYO, ADF
(masu) AUX ending form
(about) (nitsuite) PPP case marker,
compound
word
(talk) (ohanashiitasi) Verb SA-GYO,
ADF
(masu) AUX ending form
(� I
exp λi,jgi,j(a, b) , (2)
i,j
�
Zλ(b) =
a
</figure>
<bodyText confidence="0.999913454545455">
where a is one of the categories for classification,
and it can be one of (n + 1) tags from 0 to n (This is
called a “future.”), b is the contextual or condition-
ing information that enables us to make a decision
among the space of futures (This is called a “his-
tory.”), and Z),(b) is a normalizing constant deter-
mined by the requirement that Ea p),(aIb) = 1 for
all b. The computation of p),(a|b) in any ME model
is dependent on a set of “features” which are binary
functions of the history and future. For instance, one
of our features is
</bodyText>
<equation confidence="0.995133">
� 1 : if has(b, fj) = 1 &amp; a = ai
gi,j(a,b) = fj = “POS(−1)(Major) : verb,&amp;quot; (3)
0 : otherwise.
</equation>
<bodyText confidence="0.999613451612903">
Here “has(b, fj)” is a binary function that returns
1 if the history b has feature fj. The features used
in our experiments are described in detail in Sec-
tion 4.1.1.
Given a sentence, probabilities of n tags from 1
to n are estimated for each length of string in that
sentence by using the morpheme model. From all
possible division of morphemes in the sentence, an
optimal one is found by using the Viterbi algorithm.
Each division is represented as a particular division
of morphemes with grammatical attributes in a sen-
tence, and the optimal division is defined as a di-
vision that maximizes the product of the probabil-
ities estimated for each morpheme in the division.
For example, the sentence “
” in basic form as shown in Fig. 1 is
analyzed as shown in Fig. 2. “ ” is ana-
lyzed as three morphemes, “ (noun)”, “ (suf-
fix)”, and “ (noun)”, for short words, and as one
morpheme, “ (noun)” for long words.
In conventional models (e.g., (Mori and Nagao,
1996; Nagata, 1999)), probabilities were estimated
for candidate morphemes that were found in a dic-
tionary or a corpus and for the remaining strings
obtained by eliminating the candidate morphemes
from a given sentence. Therefore, unknown words
were apt to be either concatenated as one word or di-
vided into both a combination of known words and
a single word that consisted of more than one char-
acter. However, this model has the potential to cor-
rectly detect any length of unknown words.
</bodyText>
<subsectionHeader confidence="0.998664">
3.2 Chunking Model
</subsectionHeader>
<bodyText confidence="0.999685315789474">
The model described in this section can be applied
when several types of words are defined in a cor-
pus and one type of words consists of compounds of
other types of words. In the CSJ, every long word
consists of one or more short words.
Our method uses two models, a morpheme model
for short words and a chunking model for long
words. After detecting short word segments and
their POS categories by using the former model,
long word segments and their POS categories are de-
tected by using the latter model. We define four la-
bels, as explained below, and extract long word seg-
ments by estimating the appropriate labels for each
short word according to an ME model. The four la-
bels are listed below:
Ba: Beginning of a long word, and the POS cat-
egory of the long word agrees with the short
word.
Ia: Middle or end of a long word, and the POS cat-
egory of the long word agrees with the short
word.
B: Beginning of a long word, and the POS category
of the long word does not agree with the short
word.
I: Middle or end of a long word, and the POS cat-
egory of the long word does not agree with the
short word.
A label assigned to the leftmost constituent of a long
word is “Ba” or “B”. Labels assigned to other con-
stituents of a long word are “Ia”, or “I”. For exam-
ple, the short words shown in Fig. 2 are labeled as
shown in Fig. 3. The labeling is done deterministi-
cally from the beginning of a given sentence to its
end. The label that has the highest probability as es-
timated by an ME model is assigned to each short
word. The model is represented by Eq. (1). In Eq.
(1), a can be one of four labels. The features used in
our experiments are described in Section 4.1.2.
</bodyText>
<table confidence="0.978592230769231">
Long word
Word POS
Noun
Suffix
Noun
PPP
Verb
PPP
Prefix
Verb
Verb
AUX
PPP : post-positional particle, AUX: auxiliary verb
</table>
<figureCaption confidence="0.998508">
Figure 3: Example of labeling.
</figureCaption>
<bodyText confidence="0.999301238095238">
When a long word that does not include a short
word that has been assigned the label “Ba” or “Ia”,
this indicates that the word’s POS category differs
from all of the short words that constitute the long
word. Such a word must be estimated individually.
In this case, we estimate the POS category by us-
ing transformation rules. The transformation rules
are automatically acquired from the training corpus
by extracting long words with constituents, namely
short words, that are labeled only “B” or “I”. A rule
is constructed by using the extracted long word and
the adjacent short words on its left and right. For
example, the rule shown in Fig. 4 was acquired in
our experiments. The middle division of the con-
sequent part represents a long word “ ” (auxil-
iary verb), and it consists of two short words “ ”
(post-positional particle) and “ ” (verb). If several
different rules have the same antecedent part, only
the rule with the highest frequency is chosen. If no
rules can be applied to a long word segment, rules
are generalized in the following steps.
</bodyText>
<listItem confidence="0.9981815">
1. Delete posterior context
2. Delete anterior and posterior contexts
3. Delete anterior and posterior contexts and lexi-
cal entries.
</listItem>
<bodyText confidence="0.977181666666667">
If no rules can be applied to a long word segment in
any step, the POS category noun is assigned to the
long word.
</bodyText>
<sectionHeader confidence="0.997892" genericHeader="evaluation">
4 Experiments and Discussion
</sectionHeader>
<subsectionHeader confidence="0.837224">
4.1 Experimental Conditions
</subsectionHeader>
<bodyText confidence="0.994977304347826">
In our experiments, we used 744,204 short words
and 618,538 long words for training, and 63,037
short words and 51,796 long words for testing.
Those words were extracted from one tenth of the
CSJ that already had been manually tagged. The
training corpus consisted of 319 speeches and the
test corpus consisted of 19 speeches.
Transcription consisted of basic form and pronun-
ciation, as shown in Fig. 1. Speech sounds were
faithfully transcribed as pronunciation, and also rep-
resented as basic forms by using kanji and hiragana
characters. Lines beginning with numerical digits
are time stamps and represent the time it took to
produce the lines between that time stamp and the
next time stamp. Each line other than time stamps
represents a bunsetsu. In our experiments, we used
only the basic forms. Basic forms were tagged with
several types of labels such as fillers, as shown in
Table 1. Strings tagged with those labels were han-
dled according to rules as shown in the rightmost
columns in Table 1.
Since there are no boundaries between sentences
in the corpus, we selected the places in the CSJ that
</bodyText>
<figure confidence="0.877835571428571">
Short word
Word POS
Label
Ba
I
Ia
Ba
I
Ia
B
Ia
Ia
Ba
Noun
PPP
Verb
AUX
Entry
POS
Label
⇒
</figure>
<table confidence="0.836645">
Anterior context Target words Posterior context
(it, go) (te) (mi, try) (tai, want)
Verb PPP Verb AUX
Ba B I Ba
Antecedent part
Anterior context Long word Posterior context
(it, go) (temi, try) (tai, want)
Verb AUX AUX
Consequent part
</table>
<figureCaption confidence="0.787721">
Figure 4: Example of transformation rules.
</figureCaption>
<tableCaption confidence="0.976447">
Table 1: Type of labels and their handling.
</tableCaption>
<table confidence="0.9379765">
Type of Labels Example Rules
Fillers (F ) delete all
Disfluencies (D ) (D2 ) delete all
No confidence in (? ) leave a candidate
transcription
Entirely (?) delete all
Several can- (? ,) leave the former
didates exist candidate
Citation on sound or (M ) (M ) leave a candidate
words
Foreign, archaic, or (O ) leave a candidate
dialect words
</table>
<bodyText confidence="0.944702117647059">
Personal name, dis- (R ) leave a candidate
criminating words,
and slander
Letters and their (A ;EU) leave the former
pronunciation in candidate
katakana strings
Strings that cannot (K (F ) ; ) leave the latter can-
be written in kanji didate
characters
are automatically detected as pauses of 500 ms or
longer and then designated them as sentence bound-
aries. In addition to these, we also used utterance
boundaries as sentence boundaries. These are au-
tomatically detected at places where short pauses
(shorter than 200 ms but longer than 50 ms) follow
the typical sentence-ending forms of predicates such
as verbs, adjectives, and copula.
</bodyText>
<subsubsectionHeader confidence="0.883892">
4.1.1 Features Used by Morpheme Models
</subsubsectionHeader>
<bodyText confidence="0.998002708333333">
In the CSJ, bunsetsu boundaries, which are phrase
boundaries in Japanese, were manually detected.
Fillers and disfluencies were marked with the labels
(F) and (D). In the experiments, we eliminated fillers
and disfluencies but we did use their positional infor-
mation as features. We also used as features, bun-
setsu boundaries and the labels (M), (O), (R), and
(A), which were assigned to particular morphemes
such as personal names and foreign words. Thus, the
input sentences for training and testing were charac-
ter strings without fillers and disfluencies, and both
boundary information and various labels were at-
tached to them. Given a sentence, for every string
within a bunsetsu and every string appearing in a
dictionary, the probabilities of a in Eq. (1) were es-
timated by using the morpheme model. The output
was a sequence of morphemes with grammatical at-
tributes, as shown in Fig. 2. We used the POS cate-
gories in the CSJ as grammatical attributes. We ob-
tained 14 major POS categories for short words and
15 major POS categories for long words. Therefore,
a in Eq. (1) can be one of 15 tags from 0 to 14 for
short words, and it can be one of 16 tags from 0 to
15 for long words.
</bodyText>
<tableCaption confidence="0.968077">
Table 2: Features.
</tableCaption>
<table confidence="0.996434826086956">
Number Feature Type Feature value
(Number of value) (Short:Long)
1 String(0) (113,474:117,002)
2 String(-1) (17,064:32,037)
3 Substring(0)(Left1) (2,351:2,375)
4 Substring(0)(Right1) (2,148:2,171)
5 Substring(0)(Left2) (30,684:31,456)
6 Substring(0)(Right2) (25,442:25,541)
7 Substring(-1)(Left1) (2,160:2,088)
8 Substring(-1)(Right1) (1,820:1,675)
9 Substring(-1)(Left2) (11,025:12,875)
10 Substring(-1)(Right2) (10,439:13,364)
11 Dic(0)(Major) Noun, Verb, Adjective, ... Unde-
fined (15:16)
12 Dic(0)(Minor) Common noun, Topic marker, Ba-
sic form... (75:71)
13 Dic(0)(Major&amp;Minor) Noun&amp;Common noun,
Verb&amp;Basic form, ... (246:227)
14 Dic(-1)(Minor) Common noun, Topic marker, Ba-
sic form... (16:16)
15 POS(-1) Noun, Verb, Adjective, ... (14:15)
16 Length(0) 1, 2, 3, 4, 5, 6 or more (6:6)
17 Length(-1) 1, 2, 3, 4, 5, 6 or more (6:6)
18 TOC(0)(Beginning) Kanji, Hiragana, Number,
Katakana, Alphabet (5:5)
19 TOC(0)(End) Kanji, Hiragana, Number,
Katakana, Alphabet (5:5)
20 TOC(0)(Transition) Kanji—Hiragana,
Number—Kanji,
Katakana—Kanji, ... (25:25)
21 TOC(-1)(End) Kanji, Hiragana, Number,
Katakana, Alphabet (5:5)
22 TOC(-1)(Transition) Kanji—Hiragana,
Number—Kanji,
Katakana—Kanji, ... (16:15)
23 Boundary Bunsetsu(Beginning), Bun-
setsu(End), Label(Beginning),
Label(End), (4:4)
24 Comb(1,15) (74,602:59,140)
25 Comb(1,2,15) (141,976:136,334)
26 Comb(1,13,15) (78,821:61,813)
27 Comb(1,2,13,15) (156,187:141,442)
28 Comb(11,15) (209:230)
29 Comb(12,15) (733:682)
30 Comb(13,15) (1,549:1,397)
31 Comb(12,14) (730:675)
</table>
<bodyText confidence="0.994318555555556">
The features we used with morpheme models in
our experiments are listed in Table 2. Each feature
consists of a type and a value, which are given in the
rows of the table, and it corresponds to j in the func-
tion gi,j(a, b) in Eq. (1). The notations “(0)” and
“(-1)” used in the feature-type column in Table 2 re-
spectively indicate a target string and the morpheme
to the left of it. The terms used in the table are ba-
sically as same as those that Uchimoto et al. used
(Uchimoto et al., 2002). The main difference is the
following one:
Boundary: Bunsetsu boundaries and positional in-
formation of labels such as fillers. “(Begin-
ning)” and “(End)” in Table 2 respectively indi-
cate whether the left and right side of the target
strings are boundaries.
We used only those features that were found three or
more times in the training corpus.
</bodyText>
<subsubsectionHeader confidence="0.909752">
4.1.2 Features Used by a Chunking Model
</subsubsectionHeader>
<bodyText confidence="0.99603525">
We used the following information as features
on the target word: a word and its POS cate-
gory, and the same information for the four clos-
est words, the two on the left and the two on
the right of the target word. Bigram and tri-
gram words that included a target word plus bigram
and trigram POS categories that included the tar-
get word’s POS category were used as features. In
addition, bunsetsu boundaries as described in Sec-
tion 4.1.1 were used. For example, when a target
word was “ ” in Fig. 3, “ ”, “ ”, “ ”, “
“Suffix”, “Noun”, “PPP”, “Verb”, “PPP”,
“ &amp; ”, “ &amp; ”, “ &amp; &amp; ”, “
&amp; &amp; ”, “Noun&amp;PPP”, “PPP&amp;Verb”, “Suf-
fix&amp;Noun&amp;PPP”, “PPP&amp;Verb&amp;PPP”, and “Bun-
setsu(Beginning)” were used as features.
</bodyText>
<subsectionHeader confidence="0.6149955">
4.2 Results and Discussion
4.2.1 Experiments Using Morpheme Models
</subsectionHeader>
<bodyText confidence="0.996781428571429">
Results of the morphological analysis obtained by
using morpheme models are shown in Table 3 and
4. In these tables, OOV indicates Out-of-Vocabulary
rates. Shown in Table 3, OOV was calculated as the
proportion of words not found in a dictionary to all
words in the test corpus. In Table 4, OOV was cal-
culated as the proportion of word and POS category
pairs that were not found in a dictionary to all pairs
in the test corpus. Recall is the percentage of mor-
phemes in the test corpus for which the segmentation
and major POS category were identified correctly.
Precision is the percentage of all morphemes identi-
fied by the system that were identified correctly. The
F-measure is defined by the following equation.
</bodyText>
<equation confidence="0.977925333333333">
2 × Recall × Precision
F − measure =
Recall + Precision
</equation>
<tableCaption confidence="0.999555">
Table 3: Accuracies of word segmentation.
</tableCaption>
<table confidence="0.999813384615385">
Word Recall Precision F OOV
Short 97.47% 97.62% 97.54 1.66%
(61,444 (61,444 99.17 0%
63,037) 62,945)
99.23% 99.11%
(62,553 (62,553
63,037 ) 63,114 )
Long 96.72% 95.70% 96.21 5.81%
(50,095 (50,095 98.81 0%
51,796 ) 52,346 )
99.05% 98.58%
(51,306
(51,306 51,796) 52,047)
</table>
<tableCaption confidence="0.9716055">
Table 4: Accuracies of word segmentation and POS
tagging.
</tableCaption>
<table confidence="0.995964230769231">
Word Recall Precision F OOV
Short 95.72% 95.86% 95.79 2.64%
(60,341 (60,341 97.51 0%
63,037 ) 62,945)
97.57% 97.45%
(61,505 (61,505
63,037 ) 63,114 )
Long 94.71% 93.72% 94.21 6.93%
(49,058 (49,058) 97.06 0%
51,796 ) 52,346
97.30% 96.83%
(50,396 51,796) (50,396
52,047)
</table>
<bodyText confidence="0.999694391304348">
Tables 3 and 4 show that accuracies would im-
prove significantly if no words were unknown. This
indicates that all morphemes of the CSJ could be an-
alyzed accurately if there were no unknown words.
The improvements that we can expect by detecting
unknown words and putting them into dictionaries
are about 1.5 in F-measure for detecting word seg-
ments of short words and 2.5 for long words. For de-
tecting the word segments and their POS categories,
for short words we expect an improvement of about
2 in F-measure and for long words 3.
Next, we discuss accuracies obtained when un-
known words existed. The OOV for long words
was 4% higher than that for short words. In gen-
eral, the higher the OOV is, the more difficult de-
tecting word segments and their POS categories
is. However, the difference between accuracies
for short and long words was about 1% in recall
and 2% in precision, which is not significant when
we consider that the difference between OOVs for
short and long words was 4%. This result indi-
cates that our morpheme models could detect both
known and unknown words accurately, especially
</bodyText>
<equation confidence="0.842212">
”,
“ ”,
Precision (%)
</equation>
<bodyText confidence="0.999973375">
long words. Therefore, we investigated the recall
of unknown words in the test corpus, and found
that 55.7% (928/1,667) of short word segments and
74.1% (2,660/3,590) of long word segments were
detected correctly. In addition, regarding unknown
words, we also found that 47.5% (791/1,667) of
short word segments plus their POS categories and
67.3% (2,415/3,590) of long word segments plus
their POS categories were detected correctly. The
recall of unknown words was about 20% higher for
long words than for short words. We believe that
this result mainly depended on the difference be-
tween short words and long words in terms of the
definitions of compound words. A compound word
is defined as one word when it is based on the def-
inition of long words; however it is defined as two
or more words when it is based on the definition of
short words. Furthermore, based on the definition of
short words, a division of compound words depends
on its context. More information is needed to pre-
cisely detect short words than is required for long
words. Next, we extracted words that were detected
by the morpheme model but were not found in a dic-
tionary, and investigated the percentage of unknown
words that were completely or partially matched to
the extracted words by their context. This percent-
age was 77.6% (1,293/1,667) for short words, and
80.6% (2,892/3,590) for long words. Most of the re-
maining unknown words that could not be detected
by this method are compound words. We expect that
these compounds can be detected during the manual
examination of those words for which the morpheme
model estimated a low probability, as will be shown
later.
The recall of unknown words was lower than that
of known words, and the accuracy of automatic mor-
phological analysis was lower than that of manual
morphological analysis. As previously stated, to
improve the accuracy of the whole corpus we take
a semi-automatic approach. We assume that the
smaller the probability is for an output morpheme
estimated by a model, the more likely the output
morpheme is wrong, and we examine output mor-
phemes in ascending order of their probabilities. We
investigated how much the accuracy of the whole
corpus would increase. Fig. 5 shows the relation-
ship between the percentage of output morphemes
whose probabilities exceed a threshold and their
</bodyText>
<figure confidence="0.9975585">
20 30 40 50 60 70 80 90 100
Output Rates (%)
</figure>
<figureCaption confidence="0.999971">
Figure 5: Partial analysis.
</figureCaption>
<bodyText confidence="0.999954967741936">
precision. In this figure, “short without UKW”,
“long without UKW ”, “short with UKW”, and
“long with UKW” represent the precision for short
words detected assuming there were no unknown
words, precision for long words detected assuming
there were no unknown words, precision of short
words including unknown words, and precision of
long words including unknown words, respectively.
When the output rate in the horizontal axis in-
creases, the number of low-probability morphemes
increases. In all graphs, precisions monotonously
decrease as output rates increase. This means that
tagging errors can be revised effectively when mor-
phemes are examined in ascending order of their
probabilities.
Next, we investigated the relationship between the
percentage of morphemes examined manually and
the precision obtained after detected errors were re-
vised. The result is shown in Fig. 6. Precision
represents the precision of word segmentation and
POS tagging. If unknown words were detected and
put into a dictionary by the method described in the
fourth paragraph of this section, the graph line for
short words would be drawn between the graph lines
“short without UKW” and “short with UKW”, and
the graph line for long words would be drawn be-
tween the graph lines “long without UKW” and
“long with UKW”. Based on test results, we can
expect better than 99% precision for short words
and better than 97% precision for long words in the
whole corpus when we examine 10% of output mor-
</bodyText>
<figure confidence="0.992637333333333">
100
99
98
97
96
95
94
93
&amp;quot;short_without_UKW&amp;quot;
&amp;quot;long_without_UKW&amp;quot;
&amp;quot;short_with_UKW&amp;quot;
&amp;quot;long_with_UKW&amp;quot;
Precision (%)
0 20 40 60 80 100 120
Examined Morpheme Rates (%)
</figure>
<figureCaption confidence="0.99203">
Figure 6: Relationship between the percentage of
morphemes examined manually and precision ob-
tained after revising detected errors (when mor-
phemes with probabilities under threshold and their
adjacent morphemes are examined).
</figureCaption>
<figure confidence="0.9863825">
0 5 10 15 20 25 30 35 40 45 50
Examined Morpheme Rates (%)
</figure>
<figureCaption confidence="0.991217">
Figure 7: Relationship between percentage of mor-
phemes examined manually and error rate of exam-
ined morphemes.
</figureCaption>
<bodyText confidence="0.990158307692308">
phemes in ascending order of their probabilities.
Finally, we investigated the relationship between
percentage of morphemes examined manually and
the error rate for all of the examined morphemes.
The result is shown in Fig. 7. We found that about
50% of examined morphemes would be found as er-
rors at the beginning of the examination and about
20% of examined morphemes would be found as
errors when examination of 10% of the whole cor-
pus was completed. When unknown words were de-
tected and put into a dictionary, the error rate de-
creased; even so, over 10% of examined morphemes
would be found as errors.
</bodyText>
<subsubsectionHeader confidence="0.966705">
4.2.2 Experiments Using Chunking Models
</subsubsectionHeader>
<bodyText confidence="0.997137666666667">
Results of the morphological analysis of long
words obtained by using a chunking model are
shown in Table 5 and 6. The first and second lines
</bodyText>
<tableCaption confidence="0.997785">
Table 5: Accuracies of long word segmentation.
</tableCaption>
<table confidence="0.9998655">
Model Recall Precision F
Morph 96.72% (50,095 95.70% (50,095 96.21
Chunk 97.65% 97.41% 97.54
51,796 ) 52,346 )
(50,580 51,796) (50,580
51,911 )
Chunk 98.84% (51,193 98.66% (51,193 98.75
51,796 ) 51,888 )
</table>
<tableCaption confidence="0.952408">
Table 6: Accuracies of long word segmentation and
POS tagging.
</tableCaption>
<table confidence="0.985199545454545">
Model Recall Precision F
Morph 94.71% (49,058 93.72% (49,058 94.21
Chunk 95.59% 95.38% 95.49
51,796) 52,346)
(49,513 (49,513
51,796 ) 51,911 )
Chunk 98.56% (51,051 51,796) 98.39% (51,051 98.47
51,888)
Chunk w/o TR 92.61% (47,968 92.40% (47,968 92.51
51,796 ) 51,911 )
TR : transformation rules
</table>
<bodyText confidence="0.999962933333334">
show the respective accuracies obtained when OOVs
were 5.81% and 6.93%. The third lines show the ac-
curacies obtained when we assumed that the OOV
for short words was 0% and there were no errors in
detecting short word segments and their POS cate-
gories. The fourth line in Table 6 shows the accuracy
obtained when a chunking model without transfor-
mation rules was used.
The accuracy obtained by using the chunking
model was one point higher in F-measure than that
obtained by using the morpheme model, and it was
very close to the accuracy achieved for short words.
This result indicates that errors newly produced by
applying a chunking model to the results obtained
for short words were slight, or errors in the results
</bodyText>
<figure confidence="0.992417833333333">
100
99
98
97
96
95
94
93
&amp;quot;short_without_UKW&amp;quot;
&amp;quot;long_without_UKW&amp;quot;
&amp;quot;short_with_UKW&amp;quot;
&amp;quot;long_with_UKW&amp;quot;
Error Rates in Examined Morphemes (%)
60
40
30
20
50
10
0
&amp;quot;short_without_UKW&amp;quot;
&amp;quot;short_with_UKW&amp;quot;
&amp;quot;long_without_UKW&amp;quot;
&amp;quot;long_with_UKW&amp;quot;
</figure>
<bodyText confidence="0.860191066666667">
obtained for short words were amended by apply-
ing the chunking model. This result also shows that
we can achieve good accuracy for long words by ap-
plying a chunking model even if we do not detect
unknown long words and do not put them into a dic-
tionary. If we could improve the accuracy for short
words, the accuracy for long words would be im-
proved also. The third lines in Tables 5 and 6 show
that the accuracy would improve to over 98 points
in F-measure. The fourth line in Tables 6 shows that
transformation rules significantly contributed to im-
proving the accuracy.
Considering the results obtained in this section
and in Section 4.2.1, we are now detecting short and
long word segments and their POS categories in the
whole corpus by using the following steps:
1. Automatically detect and manually examine
unknown words for short words.
2. Improve the accuracy for short words in the
whole corpus by manually examining short
words in ascending order of their probabilities
estimated by a morpheme model.
3. Apply a chunking model to the short words to
detect long word segments and their POS cate-
gories.
As future work, we are planning to use an active
learning method such as that proposed by Argamon-
Engelson and Dagan (Argamon-Engelson and Da-
gan, 1999) to more effectively improve the accuracy
of the whole corpus.
</bodyText>
<sectionHeader confidence="0.999271" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999993205882353">
This paper described two methods for detecting
word segments and their POS categories in a
Japanese spontaneous speech corpus, and describes
how to tag a large spontaneous speech corpus accu-
rately by using the two methods. The first method is
used to detect any type of word segments. We found
that about 80% of unknown words could be semi-
automatically detected by using this method. The
second method is used when there are several defi-
nitions for word segments and their POS categories,
and when one type of word segments includes an-
other type of word segments. We found that better
accuracy could be achieved by using both methods
than by using only the first method alone.
Two types of word segments, short words and
long words, are found in a large spontaneous speech
corpus, CSJ. We found that the accuracy of auto-
matic morphological analysis for the short words
was 95.79 in F-measure and for long words, 95.49.
Although the OOV for long words was much higher
than that for short words, almost the same accuracy
was achieved for both types of words by using our
proposed methods. We also found that we can ex-
pect more than 99% of precision for short words,
and 97% for long words found in the whole corpus
when we examined 10% of output morphemes in as-
cending order of their probabilities as estimated by
the proposed models.
In our experiments, only the information con-
tained in the corpus was used; however, more appro-
priate linguistic knowledge than that could be used,
such as morphemic and syntactic rules. We would
like to investigate whether such linguistic knowl-
edge contributes to improved accuracy.
</bodyText>
<sectionHeader confidence="0.999115" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999955258064516">
S. Argamon-Engelson and I. Dagan. 1999. Committee-Based
Sample Selection For Probabilistic Classifiers. Artificial In-
telligence Research, 11:335–360.
A. L. Berger, S. A. Della Pietra, and V. J. Della Pietra. 1996. A
Maximum Entropy Approach to Natural Language Process-
ing. Computational Linguistics, 22(1):39–71.
E. T. Jaynes. 1957. Information Theory and Statistical Me-
chanics. Physical Review, 106:620–630.
E. T. Jaynes. 1979. Where do we Stand on Maximum Entropy?
In R. D. Levine and M. Tribus, editors, The Maximum En-
tropy Formalism, page 15. M. I. T. Press.
H. Kashioka, S. G. Eubank, and E. W. Black. 1997. Decision-
Tree Morphological Analysis Without a Dictionary for
Japanese. In Proceedings ofNLPRS, pages 541–544.
K. Maekawa, H. Koiso, S. Furui, and H. Isahara. 2000. Sponta-
neous Speech Corpus of Japanese. In Proceedings ofLREC,
pages 947–952.
S. Mori and M. Nagao. 1996. Word Extraction from Cor-
pora and Its Part-of-Speech Estimation Using Distributional
Analysis. In Proceedings of COLING, pages 1119–1122.
M. Nagata. 1999. A Part of Speech Estimation Method for
Japanese Unknown Words Using a Statistical Model of Mor-
phology and Context. In Proceedings of ACL, pages 277–
284.
K. Uchimoto, S. Sekine, and H. Isahara. 2001. The Unknown
Word Problem: a Morphological Analysis of Japanese Using
Maximum Entropy Aided by a Dictionary. In Proceedings
ofEMNLP, pages 91–99.
K. Uchimoto, C. Nobata, A. Yamada, S. Sekine, and H. Isahara.
2002. Morphological Analysis of The Spontaneous Speech
Corpus. In Proceedings of COLING, pages 1298–1302.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.757265">
<title confidence="0.794602">Morphological Analysis of a Large Spontaneous Speech Corpus in Japanese</title>
<affiliation confidence="0.999407">Research Laboratory York University</affiliation>
<address confidence="0.9927885">3-5, Hikari-dai, Seika-cho, Soraku-gun, 715 Broadway, 7th floor Kyoto, 619-0289, Japan New York, NY 10003, USA</address>
<email confidence="0.999819">sekine@cs.nyu.edu</email>
<abstract confidence="0.998162333333333">This paper describes two methods for detecting word segments and their morphological information in a Japanese spontaneous speech corpus, and describes how to tag a large spontaneous speech corpus accurately by using the two methods. The first method is used to detect any type of word segments. The second method is used when there are several definitions for word segments and their POS categories, and when one type of word segments includes another type of word segments. In this paper, we show that by using semiautomatic analysis we achieve a precision of better than 99% for detecting and tagging short words and 97% for long words; the two types of words that comprise the corpus. We also show that better accuracy is achieved by using both methods than by using only the first.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Argamon-Engelson</author>
<author>I Dagan</author>
</authors>
<title>Committee-Based Sample Selection For Probabilistic Classifiers.</title>
<date>1999</date>
<journal>Artificial Intelligence Research,</journal>
<pages>11--335</pages>
<contexts>
<context position="34526" citStr="Argamon-Engelson and Dagan, 1999" startWordPosition="5842" endWordPosition="5846">Section 4.2.1, we are now detecting short and long word segments and their POS categories in the whole corpus by using the following steps: 1. Automatically detect and manually examine unknown words for short words. 2. Improve the accuracy for short words in the whole corpus by manually examining short words in ascending order of their probabilities estimated by a morpheme model. 3. Apply a chunking model to the short words to detect long word segments and their POS categories. As future work, we are planning to use an active learning method such as that proposed by ArgamonEngelson and Dagan (Argamon-Engelson and Dagan, 1999) to more effectively improve the accuracy of the whole corpus. 5 Conclusion This paper described two methods for detecting word segments and their POS categories in a Japanese spontaneous speech corpus, and describes how to tag a large spontaneous speech corpus accurately by using the two methods. The first method is used to detect any type of word segments. We found that about 80% of unknown words could be semiautomatically detected by using this method. The second method is used when there are several definitions for word segments and their POS categories, and when one type of word segments </context>
</contexts>
<marker>Argamon-Engelson, Dagan, 1999</marker>
<rawString>S. Argamon-Engelson and I. Dagan. 1999. Committee-Based Sample Selection For Probabilistic Classifiers. Artificial Intelligence Research, 11:335–360.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A L Berger</author>
<author>S A Della Pietra</author>
<author>V J Della Pietra</author>
</authors>
<title>A Maximum Entropy Approach to Natural Language Processing.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<volume>22</volume>
<issue>1</issue>
<contexts>
<context position="11014" citStr="Berger et al., 1996" startWordPosition="1843" endWordPosition="1846">a sentence. A string is tagged with a 1 or a 0 to indicate whether it is a morpheme. When a string is a morpheme, a grammatical attribute is assigned to it. A tag designated as a 1 is thus assigned one of a number, n, of grammatical attributes assigned to morphemes, and the problem becomes to assign an attribute (from 0 to n) to every string in a given sentence. We define a model that estimates the likelihood that a given string is a morpheme and has a grammatical attribute i(1 &lt; i &lt; n) as a morpheme model. We implemented this model within an ME modeling framework (Jaynes, 1957; Jaynes, 1979; Berger et al., 1996). The model is represented by Eq. (1): pλ(a|b) = ([mo ) exp i,j Ai,jgi,j(a, b) (1) Zλ(b) PPP : post-positional particle , AUX : auxiliary verb , ADF : adverbial form Figure 2: Example of morphological analysis results. Short word Long word (form) (keitai) Noun (morphological analysis) (keitaisokaiseki) Noun Word Pronunciation POS Others Word Pronunciation POS Others (element) (so) Suffix (analysis) (kaiseki) Noun (ni) PPP case marker (relate) (tsui) Verb KA-GYO, ADF, euphonic change (te) PPP conjunctive (o) Prefix (talk) (hanashi) Verb SA-GYO, ADF (do) (itashi) Verb SA-GYO, ADF (masu) AUX endi</context>
</contexts>
<marker>Berger, Pietra, Pietra, 1996</marker>
<rawString>A. L. Berger, S. A. Della Pietra, and V. J. Della Pietra. 1996. A Maximum Entropy Approach to Natural Language Processing. Computational Linguistics, 22(1):39–71.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E T Jaynes</author>
</authors>
<title>Information Theory and Statistical Mechanics. Physical Review,</title>
<date>1957</date>
<pages>106--620</pages>
<contexts>
<context position="10978" citStr="Jaynes, 1957" startWordPosition="1839" endWordPosition="1840"> two tags to each string in a sentence. A string is tagged with a 1 or a 0 to indicate whether it is a morpheme. When a string is a morpheme, a grammatical attribute is assigned to it. A tag designated as a 1 is thus assigned one of a number, n, of grammatical attributes assigned to morphemes, and the problem becomes to assign an attribute (from 0 to n) to every string in a given sentence. We define a model that estimates the likelihood that a given string is a morpheme and has a grammatical attribute i(1 &lt; i &lt; n) as a morpheme model. We implemented this model within an ME modeling framework (Jaynes, 1957; Jaynes, 1979; Berger et al., 1996). The model is represented by Eq. (1): pλ(a|b) = ([mo ) exp i,j Ai,jgi,j(a, b) (1) Zλ(b) PPP : post-positional particle , AUX : auxiliary verb , ADF : adverbial form Figure 2: Example of morphological analysis results. Short word Long word (form) (keitai) Noun (morphological analysis) (keitaisokaiseki) Noun Word Pronunciation POS Others Word Pronunciation POS Others (element) (so) Suffix (analysis) (kaiseki) Noun (ni) PPP case marker (relate) (tsui) Verb KA-GYO, ADF, euphonic change (te) PPP conjunctive (o) Prefix (talk) (hanashi) Verb SA-GYO, ADF (do) (itas</context>
</contexts>
<marker>Jaynes, 1957</marker>
<rawString>E. T. Jaynes. 1957. Information Theory and Statistical Mechanics. Physical Review, 106:620–630.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E T Jaynes</author>
</authors>
<title>Where do we Stand on Maximum Entropy? In</title>
<date>1979</date>
<booktitle>The Maximum Entropy Formalism,</booktitle>
<pages>page</pages>
<editor>R. D. Levine and M. Tribus, editors,</editor>
<publisher>Press.</publisher>
<contexts>
<context position="10992" citStr="Jaynes, 1979" startWordPosition="1841" endWordPosition="1842">ach string in a sentence. A string is tagged with a 1 or a 0 to indicate whether it is a morpheme. When a string is a morpheme, a grammatical attribute is assigned to it. A tag designated as a 1 is thus assigned one of a number, n, of grammatical attributes assigned to morphemes, and the problem becomes to assign an attribute (from 0 to n) to every string in a given sentence. We define a model that estimates the likelihood that a given string is a morpheme and has a grammatical attribute i(1 &lt; i &lt; n) as a morpheme model. We implemented this model within an ME modeling framework (Jaynes, 1957; Jaynes, 1979; Berger et al., 1996). The model is represented by Eq. (1): pλ(a|b) = ([mo ) exp i,j Ai,jgi,j(a, b) (1) Zλ(b) PPP : post-positional particle , AUX : auxiliary verb , ADF : adverbial form Figure 2: Example of morphological analysis results. Short word Long word (form) (keitai) Noun (morphological analysis) (keitaisokaiseki) Noun Word Pronunciation POS Others Word Pronunciation POS Others (element) (so) Suffix (analysis) (kaiseki) Noun (ni) PPP case marker (relate) (tsui) Verb KA-GYO, ADF, euphonic change (te) PPP conjunctive (o) Prefix (talk) (hanashi) Verb SA-GYO, ADF (do) (itashi) Verb SA-GY</context>
</contexts>
<marker>Jaynes, 1979</marker>
<rawString>E. T. Jaynes. 1979. Where do we Stand on Maximum Entropy? In R. D. Levine and M. Tribus, editors, The Maximum Entropy Formalism, page 15. M. I. T. Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Kashioka</author>
<author>S G Eubank</author>
<author>E W Black</author>
</authors>
<title>DecisionTree Morphological Analysis Without a Dictionary for Japanese.</title>
<date>1997</date>
<booktitle>In Proceedings ofNLPRS,</booktitle>
<pages>541--544</pages>
<contexts>
<context position="4590" citStr="Kashioka et al., 1997" startWordPosition="746" endWordPosition="749">automatic approach. This section describes major problems in tagging a large spontaneous speech corpus with high precision in a semiautomatic way, and our solutions to those problems. One of the most important problems in morphological analysis is that posed by unknown words, which are words found in neither a dictionary nor a training corpus. Two statistical approaches have been applied to this problem. One is to find unknown words from corpora and put them into a dictionary (e.g., (Mori and Nagao, 1996)), and the other is to estimate a model that can identify unknown words correctly (e.g., (Kashioka et al., 1997; Nagata, 1999)). Uchimoto et al. used both approaches. They proposed a morphological analysis method based on a maximum entropy (ME) model (Uchimoto et al., 2001). Their method uses a model that estimates how likely a string is to be a morpheme as its probability, and thus it has a potential to overcome the unknown word problem. Therefore, we use their method for morphological analysis of the CSJ. However, Uchimoto et al. reported that the accuracy of automatic word segmentation and POS tagging was 94 points in F-measure (Uchimoto et al., 2002). That is much lower than the accuracy obtained b</context>
</contexts>
<marker>Kashioka, Eubank, Black, 1997</marker>
<rawString>H. Kashioka, S. G. Eubank, and E. W. Black. 1997. DecisionTree Morphological Analysis Without a Dictionary for Japanese. In Proceedings ofNLPRS, pages 541–544.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Maekawa</author>
<author>H Koiso</author>
<author>S Furui</author>
<author>H Isahara</author>
</authors>
<title>Spontaneous Speech Corpus of Japanese.</title>
<date>2000</date>
<booktitle>In Proceedings ofLREC,</booktitle>
<pages>947--952</pages>
<contexts>
<context position="1396" citStr="Maekawa et al., 2000" startWordPosition="212" endWordPosition="215">POS categories, and when one type of word segments includes another type of word segments. In this paper, we show that by using semiautomatic analysis we achieve a precision of better than 99% for detecting and tagging short words and 97% for long words; the two types of words that comprise the corpus. We also show that better accuracy is achieved by using both methods than by using only the first. 1 Introduction The “Spontaneous Speech: Corpus and Processing Technology” project is sponsoring the construction of a large spontaneous Japanese speech corpus, Corpus of Spontaneous Japanese (CSJ) (Maekawa et al., 2000). The CSJ is a collection of monologues and dialogues, the majority being monologues such as academic presentations and simulated public speeches. Simulated public speeches are short speeches presented specifically for the corpus by paid non-professional speakers. The CSJ includes transcriptions of the speeches as well as audio recordings of them. One of the goals of the project is to detect two types of word segments and corresponding morphological information in the transcriptions. The two types of word segments were defined by the members of The National Institute for Japanese Language and </context>
</contexts>
<marker>Maekawa, Koiso, Furui, Isahara, 2000</marker>
<rawString>K. Maekawa, H. Koiso, S. Furui, and H. Isahara. 2000. Spontaneous Speech Corpus of Japanese. In Proceedings ofLREC, pages 947–952.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Mori</author>
<author>M Nagao</author>
</authors>
<title>Word Extraction from Corpora and Its Part-of-Speech Estimation Using Distributional Analysis.</title>
<date>1996</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>1119--1122</pages>
<contexts>
<context position="4479" citStr="Mori and Nagao, 1996" startWordPosition="726" endWordPosition="729">tioned in Section 1, tagging the whole of the CSJ manually would be difficult. Therefore, we are taking a semi-automatic approach. This section describes major problems in tagging a large spontaneous speech corpus with high precision in a semiautomatic way, and our solutions to those problems. One of the most important problems in morphological analysis is that posed by unknown words, which are words found in neither a dictionary nor a training corpus. Two statistical approaches have been applied to this problem. One is to find unknown words from corpora and put them into a dictionary (e.g., (Mori and Nagao, 1996)), and the other is to estimate a model that can identify unknown words correctly (e.g., (Kashioka et al., 1997; Nagata, 1999)). Uchimoto et al. used both approaches. They proposed a morphological analysis method based on a maximum entropy (ME) model (Uchimoto et al., 2001). Their method uses a model that estimates how likely a string is to be a morpheme as its probability, and thus it has a potential to overcome the unknown word problem. Therefore, we use their method for morphological analysis of the CSJ. However, Uchimoto et al. reported that the accuracy of automatic word segmentation and </context>
<context position="13372" citStr="Mori and Nagao, 1996" startWordPosition="2267" endWordPosition="2270">orphemes in the sentence, an optimal one is found by using the Viterbi algorithm. Each division is represented as a particular division of morphemes with grammatical attributes in a sentence, and the optimal division is defined as a division that maximizes the product of the probabilities estimated for each morpheme in the division. For example, the sentence “ ” in basic form as shown in Fig. 1 is analyzed as shown in Fig. 2. “ ” is analyzed as three morphemes, “ (noun)”, “ (suffix)”, and “ (noun)”, for short words, and as one morpheme, “ (noun)” for long words. In conventional models (e.g., (Mori and Nagao, 1996; Nagata, 1999)), probabilities were estimated for candidate morphemes that were found in a dictionary or a corpus and for the remaining strings obtained by eliminating the candidate morphemes from a given sentence. Therefore, unknown words were apt to be either concatenated as one word or divided into both a combination of known words and a single word that consisted of more than one character. However, this model has the potential to correctly detect any length of unknown words. 3.2 Chunking Model The model described in this section can be applied when several types of words are defined in a</context>
</contexts>
<marker>Mori, Nagao, 1996</marker>
<rawString>S. Mori and M. Nagao. 1996. Word Extraction from Corpora and Its Part-of-Speech Estimation Using Distributional Analysis. In Proceedings of COLING, pages 1119–1122.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Nagata</author>
</authors>
<title>A Part of Speech Estimation Method for Japanese Unknown Words Using a Statistical Model of Morphology and Context.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>277--284</pages>
<contexts>
<context position="4605" citStr="Nagata, 1999" startWordPosition="750" endWordPosition="751">s section describes major problems in tagging a large spontaneous speech corpus with high precision in a semiautomatic way, and our solutions to those problems. One of the most important problems in morphological analysis is that posed by unknown words, which are words found in neither a dictionary nor a training corpus. Two statistical approaches have been applied to this problem. One is to find unknown words from corpora and put them into a dictionary (e.g., (Mori and Nagao, 1996)), and the other is to estimate a model that can identify unknown words correctly (e.g., (Kashioka et al., 1997; Nagata, 1999)). Uchimoto et al. used both approaches. They proposed a morphological analysis method based on a maximum entropy (ME) model (Uchimoto et al., 2001). Their method uses a model that estimates how likely a string is to be a morpheme as its probability, and thus it has a potential to overcome the unknown word problem. Therefore, we use their method for morphological analysis of the CSJ. However, Uchimoto et al. reported that the accuracy of automatic word segmentation and POS tagging was 94 points in F-measure (Uchimoto et al., 2002). That is much lower than the accuracy obtained by manual taggin</context>
<context position="13387" citStr="Nagata, 1999" startWordPosition="2271" endWordPosition="2272">ce, an optimal one is found by using the Viterbi algorithm. Each division is represented as a particular division of morphemes with grammatical attributes in a sentence, and the optimal division is defined as a division that maximizes the product of the probabilities estimated for each morpheme in the division. For example, the sentence “ ” in basic form as shown in Fig. 1 is analyzed as shown in Fig. 2. “ ” is analyzed as three morphemes, “ (noun)”, “ (suffix)”, and “ (noun)”, for short words, and as one morpheme, “ (noun)” for long words. In conventional models (e.g., (Mori and Nagao, 1996; Nagata, 1999)), probabilities were estimated for candidate morphemes that were found in a dictionary or a corpus and for the remaining strings obtained by eliminating the candidate morphemes from a given sentence. Therefore, unknown words were apt to be either concatenated as one word or divided into both a combination of known words and a single word that consisted of more than one character. However, this model has the potential to correctly detect any length of unknown words. 3.2 Chunking Model The model described in this section can be applied when several types of words are defined in a corpus and one</context>
</contexts>
<marker>Nagata, 1999</marker>
<rawString>M. Nagata. 1999. A Part of Speech Estimation Method for Japanese Unknown Words Using a Statistical Model of Morphology and Context. In Proceedings of ACL, pages 277– 284.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Uchimoto</author>
<author>S Sekine</author>
<author>H Isahara</author>
</authors>
<title>The Unknown Word Problem: a Morphological Analysis of Japanese Using Maximum Entropy Aided by a Dictionary.</title>
<date>2001</date>
<booktitle>In Proceedings ofEMNLP,</booktitle>
<pages>91--99</pages>
<contexts>
<context position="4753" citStr="Uchimoto et al., 2001" startWordPosition="772" endWordPosition="775">ns to those problems. One of the most important problems in morphological analysis is that posed by unknown words, which are words found in neither a dictionary nor a training corpus. Two statistical approaches have been applied to this problem. One is to find unknown words from corpora and put them into a dictionary (e.g., (Mori and Nagao, 1996)), and the other is to estimate a model that can identify unknown words correctly (e.g., (Kashioka et al., 1997; Nagata, 1999)). Uchimoto et al. used both approaches. They proposed a morphological analysis method based on a maximum entropy (ME) model (Uchimoto et al., 2001). Their method uses a model that estimates how likely a string is to be a morpheme as its probability, and thus it has a potential to overcome the unknown word problem. Therefore, we use their method for morphological analysis of the CSJ. However, Uchimoto et al. reported that the accuracy of automatic word segmentation and POS tagging was 94 points in F-measure (Uchimoto et al., 2002). That is much lower than the accuracy obtained by manual tagging. Several problems led to this inaccuracy. In the following, we describe these problems and our solutions to them. • Fillers and disfluencies Fille</context>
</contexts>
<marker>Uchimoto, Sekine, Isahara, 2001</marker>
<rawString>K. Uchimoto, S. Sekine, and H. Isahara. 2001. The Unknown Word Problem: a Morphological Analysis of Japanese Using Maximum Entropy Aided by a Dictionary. In Proceedings ofEMNLP, pages 91–99.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Uchimoto</author>
<author>C Nobata</author>
<author>A Yamada</author>
<author>S Sekine</author>
<author>H Isahara</author>
</authors>
<title>Morphological Analysis of The Spontaneous Speech Corpus.</title>
<date>2002</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>1298--1302</pages>
<contexts>
<context position="5141" citStr="Uchimoto et al., 2002" startWordPosition="839" endWordPosition="842">that can identify unknown words correctly (e.g., (Kashioka et al., 1997; Nagata, 1999)). Uchimoto et al. used both approaches. They proposed a morphological analysis method based on a maximum entropy (ME) model (Uchimoto et al., 2001). Their method uses a model that estimates how likely a string is to be a morpheme as its probability, and thus it has a potential to overcome the unknown word problem. Therefore, we use their method for morphological analysis of the CSJ. However, Uchimoto et al. reported that the accuracy of automatic word segmentation and POS tagging was 94 points in F-measure (Uchimoto et al., 2002). That is much lower than the accuracy obtained by manual tagging. Several problems led to this inaccuracy. In the following, we describe these problems and our solutions to them. • Fillers and disfluencies Fillers and disfluencies are characteristic expressions often used in spoken language, but they are randomly inserted into text, so detecting their segmentation is difficult. In the CSJ, they are tagged manually. Therefore, we first delete fillers and disfluencies and then put them back in their original place after analyzing a text. • Accuracy for unknown words The morpheme model that will</context>
<context position="22806" citStr="Uchimoto et al., 2002" startWordPosition="3862" endWordPosition="3865">,2,13,15) (156,187:141,442) 28 Comb(11,15) (209:230) 29 Comb(12,15) (733:682) 30 Comb(13,15) (1,549:1,397) 31 Comb(12,14) (730:675) The features we used with morpheme models in our experiments are listed in Table 2. Each feature consists of a type and a value, which are given in the rows of the table, and it corresponds to j in the function gi,j(a, b) in Eq. (1). The notations “(0)” and “(-1)” used in the feature-type column in Table 2 respectively indicate a target string and the morpheme to the left of it. The terms used in the table are basically as same as those that Uchimoto et al. used (Uchimoto et al., 2002). The main difference is the following one: Boundary: Bunsetsu boundaries and positional information of labels such as fillers. “(Beginning)” and “(End)” in Table 2 respectively indicate whether the left and right side of the target strings are boundaries. We used only those features that were found three or more times in the training corpus. 4.1.2 Features Used by a Chunking Model We used the following information as features on the target word: a word and its POS category, and the same information for the four closest words, the two on the left and the two on the right of the target word. Bi</context>
</contexts>
<marker>Uchimoto, Nobata, Yamada, Sekine, Isahara, 2002</marker>
<rawString>K. Uchimoto, C. Nobata, A. Yamada, S. Sekine, and H. Isahara. 2002. Morphological Analysis of The Spontaneous Speech Corpus. In Proceedings of COLING, pages 1298–1302.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>