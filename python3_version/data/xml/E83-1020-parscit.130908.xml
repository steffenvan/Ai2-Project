<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000012">
<note confidence="0.486202833333333">
A FLEXIBLE NATURAL LANGUAGE PARSER
BASED ON A TWO-LEVEL REPRESENTATION OF SYNTAX
Leonardo Lesmo and Pietro Torasso
Istituto di Scienze dell&apos;Informazione
Universita di Torino
C.so Massimo DtAzeglio 42 - 10125 TORINO - ITALY
</note>
<sectionHeader confidence="0.635919" genericHeader="abstract">
ABSTRACT
</sectionHeader>
<bodyText confidence="0.999581565217391">
In this paper we present a parser which al
lows to make explicit the interconnections between
syntax and semantics, to analyze the sentences in
a quasi-deterministic fashion and, in many cases,
to identify the roles of the various constituents
even if the sentance is ill-formed. The main fea
ture of the approach on which the parser is based
consists in a two-level representation of the syn
tactic knowledge: a first set of rules emits tix
potheses about the constituents of the sentence
and their functional role and another set of rules
verifies whether a hypothesis satisfies the con
straints about the well-formedness of sentences.
However, the application of the second set of
rules is delayed until the semantic knowledge con
firms the acceptability of the hypothesis. If the
semantics reject it, a new hypothesis is obtained
by applying a simple and relatively unexpensive
&amp;quot;natural&amp;quot; modification; a set of these modifica
tions is predefined and only when none of them is .
applicable a real backup is performed: in most
cases this situation corresponds to a case where
people would normally garden path.
</bodyText>
<sectionHeader confidence="0.993498" genericHeader="introduction">
INTRODUCTION
</sectionHeader>
<bodyText confidence="0.999913666666667">
The problem of performing an accurate syntac
tic analysis of Natural Language sentences is
still challenging for A.I. people working in the
field of N.L. interpretation (Charniak 81, Kaplan
82). The most relevant points which attracted at
tention recently are:
</bodyText>
<listItem confidence="0.887966166666667">
- the need of a strong connection between syntac
tic processing and semantic interpretation in
order to reduce the space of the alternative syn
tactic analyses (Konolige 80, Sidner et al. 81,
Milne 82)
- the convenience of a quasi-deterministic syntac
tic analysis, in order to reduce the computation
al overhead associated with a heavy use of back
up (Marcus 80)
- the convenience of an approach which tolerates
also (partially) incorrect sentences, at least
when it is possible to obtain a meaningful inter
</listItem>
<bodyText confidence="0.970488222222222">
pretation (Weischedel &amp; Black 80, Kwasny &amp; Sond
heimer 81, Hayes 81).
The first two of these remarks guided the design
and the implementation of a system devoted to the
interpretation of N.L. (Italian) commands (Lesmo,
Magnani &amp; Torasso 81a and 81b). In that system,
however, as in most N.L. interpreters, the analI
sis of the input sentence is mainly syntax-driven;
for this reason, just in case the input sentence
respects the constraints imposed by the syntactic
knowledge it can be interpreted.
The problem of analyzing ill-formed sentences
has received a great deal of attention recently.
However, most studies (Weischedel &amp; Black 80,
Kwasny &amp; Sondheimer 81) are based on standard syn_
tactic analyzers (A.T.N.) which have been further
ly augmented in order to take into account sen
tences lacking some required constituents (elli2
sis) or where some syntactic constraints are not
respected (e.g. agreement in number between the
subject and the verb).
There are two problems with this approach;
both of them depend on the choice of having a syn
tax based analysis. The first problem is the ne
cessity of extending the grammar; of course, it is
necessary, in general, to specify what is grammati
cal-and what is not, but it would be useful that
this specification does not interfere too heavily
in the interpretation of the sentence. In fact, if
all deviations would have to be accounted for in
the grammar, an unforeseen structure would block
the analysis, even if the sentence can be consider
ed as understandable. Consider, for instance, the
following sentence:
Mary drove the car and John the truck (SI)
The absence of the verb in the second clause can
be considered an acceptable form of ellipsis and,
consequently, the sentence can be interpreted car
rectly. On the othe hand, it is very unlikely
that an extension of the grammar would cover the
following ungrammatical (see Winograd 83, pag.480)
sentence:
The book that for John to read would be
(S2)
difficult is beautiful
</bodyText>
<page confidence="0.996713">
114
</page>
<bodyText confidence="0.997942311827957">
However, even if some efforts are required, this
sentence can be considered as understandable. As
stated above, a comprehensive system must be able
to detect the ungrammaticality of S2, but this de
tection should not prevent the construction of a
structure to pass to the semantic analyzer. More
over, it seems that a subtle grammaticality test of
this kind is easier to make (and to express) on a
structured representation of the sentence (e.g. a
tree) than on the input sentence as such.
The second problem which must be faced when
an ATN . is extended to handle ill-formed sen
tences is the one of word ordering. ATNs are pow
erful formal tools able to analyze type-0 lan
guages; in the theory of formal languages a len
guage is defined as a set of strings; for this
reason ATNs must recognize &amp;quot;ordered sequences&amp;quot; of
symbols (or words). Of course also the natural lan
guages have fixed rules which define the admissi
ble orderings of words and constituents, but, if
those constraints have to be relaxed to accept ill-
formed inputs, some extensionswhich are less
straightforward than the ones used for handling
the absence of a constituent are needed. For exam
ple, the sentence
Ate the apple John (S3)
is ungrammatical, easily understandable, but seems
to require in an ATN the extension of the S net to
allow to traverse the constituents in a different
(even if syntactically wrong) order. Also in this
case it seems that the construction of a structur
ed representation of the sentence could be the
first step of the analysis; when it is done, the
ordering constraints can easily be verified and,
in case they are not respected either an alterna
tive analysis is tried or, as in the case of S3,
the sentence is passed to the semantic analyzer
and, possibly, the parser signals the presence of
a syntactic error.
In this paper we present a parser which al
lows to make explicit the interconnections between
syntax and semantics , to analyze the sentences in
a quasi-deterministic fashion and, in many cases,
to identify the roles of the various constituents
even if the sentence is ill-formed.
The main feature of the approach on which the
parser is based consists in the two-level represen
tation of the syntactic knowledge: a first set of
rules emits hypotheses about the constituents of
the sentences and their functional role and an
other set of rules verifies whether a hypothesis
satisfies the constraints about the well-formed
ness of sentences. However, the application of the
second set of rules is delayed until the semantic
knowledge confirms the acceptability of the hypo
thesis. If the semantics reject the current hypo
thesis, an alternative one is tested: this control
structure guarantees that all hypotheses which sa
tisfy the weak syntactic constraints (which govern
the emission of hypotheses) and the semantic con
straints are tried before considering the input
sentence as uninterpretable.
The claim that the parser operates in a quasi-
deterministic fashion is justified by the kind of
processing that the system performs when a hypo
thesis is rejected: in most cases a new hypothesis
is obtained by applying a simple and relatively un
expensive &amp;quot;natural&amp;quot; modification; a set of these
modifications is predefined and only when none of
them is applicable a real backup is performed: in
most cases this situation corresponds to a case
where people would normally garden path.
The decision of paying particular attention
to the problem of analyzing ill-formed sentences
is motivated by the intended application of the
parser. In fact it is included in a larger system,
which allows the user to interact in natural Ian
guage with a relational data base (Siklossy, Lesmo
&amp; Torasso 83, Lesmo, Siklossy &amp; Torasso 83).
Various systems have been developed in the last
years, which act as N.L. interfaces to data bases
(Harris 77, Waltz 78, Konolige 80) and all of them
pointed out the necessity of having at disposal
mechanisms for handling ill-formed inputs (mainly
ellipsis).
In the following some example sentences will
be discussed; they refer both to the implemented
system and to more general sentences. This is jus
tified, because the linguistic coverage of the
perser is wider than the one required by a data
base interface, even if the data base, the seman
tic knowledge and the lexicon are restricted to.
a particular domain.
</bodyText>
<sectionHeader confidence="0.667811" genericHeader="method">
AN EXAMPLE OF THE PARSER&apos;S RESULT
</sectionHeader>
<bodyText confidence="0.986062071428571">
Before describing the parser control struc
ture, it is worth having a look at the final re2
resentation of the input sentence which is produ
ced by the parser. It consists in a tree which
represents the relationships existing among the
constituents of the input sentence according to
the &amp;quot;head and modifier&amp;quot; approach (Winograd 83,
pag.73)°. An example of such a tree is reported in
fig.l.
It may be noticed that the tree is a case re.p.
resentation of the sentence: in the verbal nodes
° This structure might be related to the &amp;quot;syntac
tic/semantic shape representation of RUS (Sidner
et al. 81), but we are not sure.
</bodyText>
<page confidence="0.996874">
115
</page>
<figure confidence="0.990926595238095">
Fig.1 - Result of the analysis of the sentence:
&amp;quot;Quali sono gli studenti di sesso maschile che hanno sostenuto l&apos;esame di Fisica in data 18/1/83?&amp;quot;
(Who are the students of male sex who passed the test of Physics on 18/1/83?).
REL1
IESSEREIII
CONN2
IUNMARKEp
REF2
ISTUDENTE1+1HI
DIff
1-1
HEAD
TENSE
MODE
FORM
GENDER
NUMBER
PERSON
AUX
MOOD
DEPEND
TYPE
LINKUP
Root of the verb
Present, Past, Future
Indicative, Participle ...
Active, Passive
M, F
Singular, Plural
1, 2, 3
Yes, No
Declarative, Interrogative ...
Main, Relative ...
REL
a pointer
ROLES
TRANSL
ROLETYPE
POINTER
SPECIAL
_SYNTFUN
HEAD
TENSE
MODE
FORM
GENDER
NUMBER
PERSON
AUX
MOOD
DEPEND
TYPE
LINKUP
ROLE 1
ROLE 2
• • •
• •
• • •
• • •
• • •
ROLE n
TRANSL a translation
(a)
SOSTENERE
Present Past
Indicative
Active
Any
Plural
3
No
Declarative
Relative
REL
REF2
CASE CONN4 RELPRON SUBJ
AUX / / /
H / / /
CASE CONN5 NIL . OBJ
CASE CONN7 NIL PP
(select &amp;pass
((course eq Fisica)
(date eq 18/1/83)))
(b)
</figure>
<bodyText confidence="0.98794059375">
Fig.2 - Prototypical structure of the REL nodes.
All the slots appearing in fig.2a are atom
ic and their possible contents are exempli
fied in the slot (LINKUP is the upward
pointer which enables to traverse the tree
bottom-up; this link is not depicted in
fig.1); the only exception are the ROLEs,
which correspond to the links shown in
fig.1 and whose structure is shown in
fig.2b. For the meaning of the different
fields refer to the example of fig.3. The
TRANSL slot refers to the interpretation
(in terms of data base operations) of the
constituent headed by the node (see expla
nations in the text).
Fig.3 - Actual contents of the node REL2 (SOSTENE
RE) of fig.l. Five ROLEs appear in this
instance of REL. In the first, fourth and
fifth ROLE the ROLETYPE is &amp;quot;CASE&amp;quot;, because
they refer to actual cases of the verb;
the syntactic function of each case is re
ported in the fourth field (SYNTFUN). The
second and third ROLE have the only func
tion of marking the position in the sen
tence of the auxiliary (hanno - have) and
of the verbal head (sostenuto - passed).
The SPECIAL field is used to mark cases&apos;
filled by interrogatives, reflexive pro
nouns, etc. (RELPRON means RELative PRO
Noun). Notice that the AUX slot is used to
signal the fact that the head of the verb
is (or is not) an auxiliary.
</bodyText>
<page confidence="0.996383">
116
</page>
<table confidence="0.9987022">
REL Relation Verbs, copulas
REF Referent Nouns, pronouns
CONN Connector Prepositions, conjunctions
DET Determiner Articles,
demonstrative adjectives,
adjectival question words
MOD Adverbial Adverbs
Modifier
ADJ Adjectival .
Modifier Adjectives
</table>
<tableCaption confidence="0.785892">
Table 1 - The node types: the first column contains
</tableCaption>
<bodyText confidence="0.960743536082474">
the name (actual and extended); the sec
ond one contains the classical syntactic
categories associated with the node type.
(RELation) each pointer corresponds to a syntactic
case associated with the verb; in the REF nodes,
which roughly correspond to nouns and pronouns,
the dependent structures represent the specifics
tions of the node. The H field indicates the posi
tion of the constituent&apos;s head (i.e. the verb or
noun) in the surface sentence and the A fields are
used in the REL nodes to indicate the position of
the possible auxiliaries. The actual structure of
the nodes appearing in the figure is much more corn
plex; for example, the protoype description of the
REL nodes is reported in fig.2. In fig.3 the actu
al structure of the node REL2 (SOSTENERE) is re
ported. A number of remarks are required:
- when a REL node is instantiated it does not con
tam n any ROLE slot. Whereas the other slots are
&amp;quot;filled&amp;quot; when the needed piece of information is
available (normally this happens when the head
of the verb is scanned), the ROLE slots are d/
namically created when a given constituent is
attached to the REL node (with the exception of
AUX and H);
- some slots are redundant, since their contents
can be deduced by traversing the tree. For exam
pie, the contents of the slot DEPEND and of the
field SPECIAL of the ROLE slot can be obtained
on the basis of the LINKUP node and of the first
case of the clause respectively. They have been
included for the sake of efficiency;
- the sole input word of the example sentence
which does not appear in a node of fig.1 is the
auxiliary &amp;quot;hanno&amp;quot;. Auxiliaries have been consid
ered as components of the verb, so that their
presence is signalled only by means of an AUX
role. The actual auxiliary, its tense, its num
ber, etc. are deducible from the contents of the
other slots of the REL node.
The different types of nodes which have been
defined are listed in Table 1.
As stated in the introduction, the system
should act as a natural language front-end for a
relational data base. The structure reported in
fig.1 is the basis for performing the semantic
checks and for translating the sentence in a rela
tional algebra expression (Date 81) which corre
spend to the input query. As will be described in
the following sections, neither the semantic
checks nor the actual translation of the query are
done at the end of the syntactic analysis; in fact
the semantic checks are performed when a node is
filled with a content word and the translation is
obtained in an incremental way from the constitu
ents occurring in the tree. For instance, the se
mantic check procedures will be triggered when the
word &amp;quot;sesso&amp;quot; (sex) is encountered and the corre
spending REF node is created, linked and filled
to verify that the students have a sex (or, more
precisely, that the sequence &amp;quot;studente di sesso&amp;quot;
is acceptable).
As regards the translation, it is worth no
ticing that it does not represent the interpreta
tion of the given node, but the data base inter
pretation of the whole constituent headed by that
node; for this reason it is obtained by combining
the translations of all depending constituents.
Let us consider, for example, the node REF2. The
translation associated with CONN3 is
(join %student
(select &amp;sex ((hex eq m)))
($student eq $person))
The translation associated with REL2 is
(select &amp;pass ((course eq Fisica)
(date eq 18/1/83)))
The resulting translation associated with REF2 is
(joia (join %student
(select &amp;sex ((hex eq m)))
($student eq $person))
(select &amp;pass ((course eq Fisica)
(date eq 18/1/83)))
($student eq $student))
A detailed description of the way this translation
is obtained is reported in (Lesmo, Siklossy, Toras
so 83). However, for the sake of clarity it is im
portant to say that %student is the unary relation
whose unique attribute is %student and which con
tains the names of all the students whose data are
stored in the data base; &amp;sex is a binary relation
(attributes $person and hex) containing the sex
of all the persons known to the system; finally
&amp;pass is the relation (attributes $student,
$course, $grade, $date) where are stored the re
sults of the tests passed by the students. The
translation which have been shown are stored in
the TRANSL slot of the associated nodes.
</bodyText>
<page confidence="0.995396">
117
</page>
<sectionHeader confidence="0.954228" genericHeader="method">
THE CONSTRUCTION PROCESS
</sectionHeader>
<bodyText confidence="0.9999784375">
The tree described in the previous section is
built by means of a set of rules of the form condi
tion-action. With each syntactic category a subset
of these rules is associated: when an input word of
the given category is encountered in the input sen
tence, then the subset of rules associated with
that category is activated and the conditions are
evaluated. The conditions involve tests on the cur
rent structure of the tree (i.e. the &amp;quot;status&amp;quot; of
the analysis) and may request a one-word lookahead.
If just one rule is selected (i.e. all other condi
tions evaluate to false), its action part is exe
cuted. An action consists in the construction of
new nodes, in their filling up with particular val
ues (normally depending on the input word) and in
their attachment to the already existing tree. In
table 2 are reported as an example some of the
rules of the packet associated with the category
ADJECTIVE. The rules which are not reported handle
the cases of predicative adjectives and adjectives
preceded by adverbs. In some of the rules a one-
word lookaheaiis used; it allows the parser to
build the right structure in virtually all simple
cases. In fact, even if the semantic knowledge
source does not affect the choice of the rule, it
can trigger the natural chonges, which modify the
tree; these changes substitute the backup in many
of the cases where the hypothesized syntactic struc
ture does not satisfy the semantic constraints.
An example of a sentence portion which ottLi
can be disambiguated only by inspecting the seman
tic constraints is the following:
</bodyText>
<listItem confidence="0.51125">
- Determiner - Noun - Adjective - Noun -
</listItem>
<bodyText confidence="0.992217476190476">
In this case the adjective may modify either the
preceding or the following noun. Consider the sen
tences S4 and S5°:
Per le persone anziane bevande ghiacciate
sono dannose
(For old people icy-cold drinks are harmful)
Si arrampicano sulle montagne agili
scalatori
(Agile cragsmen cramble up the mountains)
The strategy adopted by the parser is to attach the
node representing the adjective to a newly created
REF node which will be filled when the second noun
is analyzed (see the action part of Rule 4 in tab.
2). In case the semantics reject this choice (sen
tence S4) a natural change is triggered; it discon
nects the adjectival node and moves it back to the
REF node which represents the first noun.
° The sequence of categories given in the text
corresponds to &amp;quot;... le persona anziane bevande
...&amp;quot; in S4 and to &amp;quot;... le montagne agili scala
&amp;quot; tori ...&amp;quot; in S5.
</bodyText>
<table confidence="0.998894866666667">
RULE 1 COND: CURRENT CONN
ACTION: CRLINK REF CONN
CRLINK ADJ REF
FILL ADJ X
RULE 2 COND: UNFILLED REF or
(CURFILL ADJ and NEXT 0 NOUN)
ACTION: CRLINK ADJ REF
FILL ADJ A
RULE 4 COND: (CURFILL REF or CURRENT NIL or
CURRENT REL) and NEXT = NOUN
ACTION: CRLINK CONN REL
FILL CONN &apos;UNMARKED
CRLINK REF CONN
CRLINK ADJ REF
FILL ADJ o
</table>
<tableCaption confidence="0.854269666666667">
Table 2 - Some of the rules associated with the syn
tactic category ADJECTIVE.
The predicates used in the conditions are
CURRENT X: TRUE if the current node is of
type X.
UNFILLED X: TRUE if the current node or
</tableCaption>
<bodyText confidence="0.668173">
the node above is of type X and it is
not filled yet.
</bodyText>
<equation confidence="0.936934">
CURFILL X: TRUE if the current node is of
type X and is filled.
NEXT CAT: is a lookahead function which
</equation>
<bodyText confidence="0.997293896551724">
returns TRUE if the category of the
next word in the input string is CAT.
The structure-building functions used in
the actions are
CRLINK X1 X2: creates a new node of type
X1 and links it to a node of type X2.
The node which must be used is located
by moving up on the rightmost branch
of the tree.
FILL X VAL: a node of type X (located as
in CRLINK) is filled with the value
VAL (se denotes the normalized form of
the current word).
In general, however, it is not possible to a
void the use of backup. The backup mechanism is
needed when more than one of the conditions of the
rules associated with a particular category is
matched, but this case is actually restricted to
very complex (and unusual) relative clauses. More
often, the backup is required when the input word
is ambiguous, i.e. it belongs to more than one syn
tactic categories. In this case all conditions as
sociated with the different categories are evalu
ated and in some cases more than one of them is &apos;
matched. In all these cases the status of the ana
lysis is saved (i.e. the current tree) together
with the identifiers of the matched rules and a
pointer to the input sentence.
As an example of sentences in which the back
</bodyText>
<page confidence="0.997081">
118
</page>
<bodyText confidence="0.996553142857143">
up mechanism is used consider the sentences S6-S8;
in them there is a lexical ambiguity for the word
&amp;quot;che&amp;quot; (it acts as a relative pronoun in S6, as a
conjunction in S7 and as an adjectival modifier in
S8); moreover in S6 and S7 &amp;quot;pesca&amp;quot; is a form of the
verb &amp;quot;pescare&amp;quot; (to fish) whereas in S8 it is a noun
(the fishing).
Di a quel ragazzo che pesca di andarsene (S6)
(Tell that boy who is fishing to go away)
Di a quel ragazzo che pesca male (S7)
(Tell that boy that he is fishing badly)
Di a quel ragazzo che pesca fantastica
hai fatto (Tell that boy what a marvel
bus fishing you have done).
</bodyText>
<sectionHeader confidence="0.902103" genericHeader="method">
THE VERIFICATION PROCESS
</sectionHeader>
<bodyText confidence="0.987690862068966">
When a node is filled, it is supposed to be
already attached to the tree. The filling opera
tion triggers some procedures associated with the
type of the node which is being filled. Among them,
the AGREEMENT procedures have the task of checking
person, number and gender agreement between a node
and its dependants. Particularly important is the
agreement procedure associated with the REL node
type, because it selects the REF node which can
act as syntactic subject of the sentence (this
suggestion may be overcome later by virtue of se
mantic considerations). If the agreement con
straints are violated, then the natural changes
are attempted; if no restructuring of the tree is
successful, then the initial status is maintained
without changes and a warning message is issued.
Perhaps, among the procedures triggered by
the filling of a node, the one which have the most
dramatic effects on the subsequent behavior of the
system is the semantic check procedure. In fact,
if the outcome of the semantic check procedure re
ports the non-admissibility of an attachment, the
parser is forced to find another alternative. This
is done by first applying the natural changes and
then, if all of them fail, by performing a backup.
A semantic procedure refers to the semantic know
ledge of the domain under consideration, which is
stored in form of a two-level network (Lesmo,
&apos;iklossy &amp; Torasso 83); the external level allows
to perform the checks, whereas the internal level
carries the information necessary to perform the
translation.
Different checks are done depending on the
type of the node. When an ADJ node is attached to
a REF node, the system has to verify that the ad
jective is an acceptable linguistic description of
the noun stored in the REF node. In case two REF
nodes are attached (this case occurs in Italian
only when the lower REF contains a proper noun)
the system has to verify that the lower REF con
tains a possible identifier of the class represent
ed by the noun stored in the upper REF.When two
REFs are attached via a CONN node, the constituent
headed by the lower REF has the purpose either of
specifying a subset of the class identified by the
noun stored in the upper REF or to refer to a pros
erty of a given object. An example of the first
kind is &amp;quot;the professors of the department X&amp;quot; and
an example of the second kind is &amp;quot;the sex of the
professors ...&amp;quot;. In this case the semantic proce
dure accesses the net to reject incorrect specifi
cations of the form &amp;quot;the sex of the department X&amp;quot;.
A quite different behavior characterizes the at
tachment of a role to a verb (a REF node to a REL
node via a CONN node); of course, the attachment
of a new case cannot trigger a simple case check,
but must take into account also all the cases at
tached before. A side effect of this process is
the binding of the actual cases to the cases pre
dicted in the net; this can be useful when there
are two cases which have the same marker (or which
are both unmarked) to determine, by using the se
lectional restrictions stored in the net, the actu
al role of the filler of each case (e.g. syntactic
subject or syntactic object).
The completion of a constituent triggers the
last set of syntactic rules; they verify whether
the constituent (that is the node itself and its
descendants) respects the ordering constraints. In
case those constraints are violated (e.g. &amp;quot;belli i
bambini sono&amp;quot; - nice the babies are) a warning mes
sage is issued but the sentence is considered as
interpretable.
A word is due to explain the meaning of the
term &amp;quot;complete&amp;quot;. The constituent headed by the
node n. is considered as complete when a new node
n. is attached to a node nk which is an ancestor
of n.; all constituents headed by the nodes be
longing to the rightmost path of the tree are con
sidered as complete when the system encounters the
end of the sentence. The concept of &amp;quot;completion&amp;quot;
of a constituent is particularly important because
only when the constituent headed by the node ni is
complete the system translates the constituent by
using different pieces of information gathered by
the semantic procedures and stores the translation
in the TRANSL slot of the node n..
</bodyText>
<sectionHeader confidence="0.839079" genericHeader="method">
NATURAL CHANGES VERSUS BACKUP
</sectionHeader>
<bodyText confidence="0.991392444444445">
The natural changes have the purpose of re
structuring the tree by moving around constituents
without requiring backup. They are represented as
pattern-action rules, where the pattern part is
used to select the rules which can be applied,
whereas the action part implements the transforma
tion of the tree. The natural changes currently im
plemented are of two main types:
- MOVE UP (the easiest and most common): it at
</bodyText>
<equation confidence="0.352751">
(S8)
</equation>
<page confidence="0.792713">
119
</page>
<figure confidence="0.961650666666667">
REL1
DI
REF3
</figure>
<figureCaption confidence="0.9943755">
Fig.4 - Example of the use of a MOVE UP natural
change. The semantic procedure associated
with the REL node type detects that &amp;quot;sesso&amp;quot;
cannot fill any of the cases of &amp;quot;sostenere&amp;quot;
(a), so that the constituent headed by &amp;quot;so
stenere&amp;quot; is MOVEd UP to &amp;quot;studente&amp;quot; (b).
</figureCaption>
<bodyText confidence="0.998566661538462">
taches a constituent (i.e. a subtree) to a higher
node (whose type is specified in the rule) of the
current branch of the tree.
- MOVE BACK: it attaches a constituent to the right
most leaf of the preceding branch of the tree.
For example; a MOVE UP rule is used to build the
tree shown in fig.1: the relative clause &amp;quot;che hanno
sostenuto ...&amp;quot; is firstly attached to the nearest
REF node (&amp;quot;sesso&amp;quot;); when the verb is found the node
REL2 is filled (fig.4a), the agreement and semantic
check procedures are triggered and this latter re
turns that &amp;quot;sesso&amp;quot; cannot fill an unmarked case of
&amp;quot;sostenere&amp;quot;, so that the partially built relative
clause is moved up to REF2 (&amp;quot;studente&amp;quot; - fig.4b);
this new hypothesis is validated by the agreement
and semantic procedures. An example of the applica
tion of a MOVE BACK rule has been given in the
third section, in connection with the problem of
attaching the adjectival nodes (see fig.5).
As stated in the previous section, the natural
changes do not substitute in all cases the backup
mechanism; the backup is strictly connected with
the concept of &amp;quot;garden path&amp;quot;. PARSIFAL (Marcus 80)
REL1
Fig.5 - Example of MOVE BACK natural change. When
the word &amp;quot;bevande&amp;quot; (drinks) is scanned the
node ADJ1 is MOVED BACK from REF2 (a) to
the last REF node of the previous branch
of the tree, i.e. REF1 (b).
is able to parse sentences in a deterministic way
when they are not garden paths. However it has been
shown (Milne 82) that:
- For a pair of potential garden path sentences, it
is not possible to uniquely determine which is a
garden path and which is not (different people
may choose in different ways).
- The choice of having a n-constituent lookahead
(as in PARSIFAL) does not allow to decide whether
a sentence is a potential garden path in a psycho
logically plausible way.
- The semantic knowledge plays a fundamental role
in choosing a particular analysis.
Milne argues that a one-word lookahead, with the
substantial help of semantic information is what is
needed to provide a model of N.L. which is psycho
logically sound (one-word lookahead plus semantics
is also advocated in RUS - Brachman et al. - 79).
We think that the approach adopted in our par
ser basically agrees with this position. In a rath
er vague sense, the non-complete nodes of our tree
correspond with the Active Node Stack, i.e. with
the not yet completed constituents of the sentence.
The natural changes allow to operate on these nodes
on the basis of semantic information. However there
is a fundamental difference: our parser has at dis
posal the whole structure built previously. An ex
ample of the possibility of using non-active con
stituents is given by the MOVE BACK natural changes
where a previousconstituent (al-eady completed) is
used to attach a node (see REF1 in fig.5). This
greater flexibility has the disadvantage of not giv
jog any cue for deciding a-priori what is a valid
natural change and what is not (it is possible to
devise natural changes for all possible kinds of
restructuring of the tree); however, it allows to
</bodyText>
<figure confidence="0.999599031746032">
CONN1
UNMARKED
REF1
CONN2
UNMARKED,
REF2
QUALE
CHM
STUDENTE
DET1
CONN
ESSERE
REID
CONN1
ONN2
II
UNMARKED
UNMARKED
REF1
REF2
11111111
STUDENTE
DET1
CONN3
REL2
SESSO
ono
ADJ1
MASCHILE
REL
SOSTENERE
CONN4
UNMARKED
REF4
11E1111
REL1
ESSERE
11E112
l DIfl
CFI
ADJ1
MASCHILE
SOS TENERE
CONN4
UNMARKED
REF4
MEM
REF3
SESSO
UALE
REL1
fin
CONN1 CONN2
PER UNMARKED
REF1
nun
PERSONA
DET
ADJ1
ANZIANO
REF2
IJ
BEVANDA
</figure>
<page confidence="0.973061">
120
</page>
<bodyText confidence="0.999983736842105">
-choose heuristics which are in agreement with the
actual behavior of humans and which fit in a simple
way in the proposed model.
As regards the use of backup, the cited works
do not give an account of what happens in the par
ser when an analysis fails due to a garden path
(see, however, Marcus 80, pp.202-220). Our provi
sional solution is to use the backup, a computation
al tool heavier than the natural changes: it should
correspond to the situation when &amp;quot;the user must con
sciously undo this previous choice after detect
ing an inconsistency&amp;quot; (woods 73, pag.133). We ac
knowledge the problems associated with this choice,
e.g. the need of saving at some times the status of
the analysis, the possibility of interference with
the natural changes, etc., but the backup is used
parsimoniously (due to the condition part of the
syntactic rules) and, anyway, we do not believe it
is the final solution to this problem.
</bodyText>
<sectionHeader confidence="0.988818" genericHeader="conclusions">
CONCLUDING REMARKS
</sectionHeader>
<bodyText confidence="0.9999864">
The paper describes a parser for a large sub
set of Italian. The novel control structure in
wolves the use of natural changes which restructure
the tree representing the status of the analysis
without the intervention of the backup mechanism.
This allows the system to operate in a pseudo-deter
ministic way, in that the use of backup is limited
to sentences which could make people garden path.
Another major feature of the parser is its a
bility to cope with some kinds of ill-formedness of
the input sentences. This is obtained by a decompo
sition of the syntactic knowledge into two levels:
the first level contains structure building rules,
whereas the second level contains rules of agree
ment and rules related with the ordering of constit
uents. This structuring of the syntactic knowledge
allows the parser to be data driven: the scanning
of a new input word produces its insertion into the
analysis tree; this may be seen as an hypothesis of
interpretation, which can be accepted or rejected
later on the basis of other independent knowledge
sources. This allows the system to avoid the use of
classical rewriting rules or transition networks
which represent in an integrated way all syntactic
constraints.
As stated in the introduction, the authors are
developing a N.L. interface to a relational data
base. The lexical analyzer and the access proce
dures to the network representing the semantic con
straints are running, the construction rules and
the natural changes are being debugged, whereas the
ordering rules are under development. The transla
tion into the actual data base query is running.
The system is written in FRANZ LISP and runs on a
VAX 11/780 under the UNIX operating system.
</bodyText>
<sectionHeader confidence="0.993281" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.999917428571429">
Brachman R.J.-et al.: Research in Natural Language
Understanding. BBN Report no.4274 (1979).
Charniak E.: Six Topics in Search of a Parser: An
Overview of Al Language Research. Proc.7th IJCAI,
Vancouver, B.C. (1981), 1079-1087.
Date C.J.: An Introduction to Database Systems (3rd
edition), Addison Wesley (1981).
Harris L.R.: User-Oriented Data Base Query in the
ROBOT Natural Language Query System. Int. J. of
Man-Machine Studies 9 (1977), 697-713.
Hayes P.J.: Multiple Strategies Construction Sped
fic Parsing for a Flexible Database Access and
Update. Proc.7th IJCAI,Vancouver(1981), 432-439.
Kaplan S.J. (ed.): Special Issue on Natural Lan
guage Processing, SIGART Newsletter 79 (1982).
Konolige K.G.: A Framework for a Portable Natural
Language Interface to Databases. In D.Sagalowicz
(ed.): Mechanical Intelligence: Research and AE
plications, Final Tech. Rep., SRI Int. (1980).
Kwasny S.C., Sondheimer N.K.: Relaxation Techniques
for Parsing Grammatically Ill-Formed Input in
Natural Language Understanding Systems. AJCL 7
(1981), 99-108.
Lesmo L., Magnani D., Torasso P.: A Deterministic
Analyzer for the Interpretation of Natural Lan
guage Commands. Proc.7th IJCAI, Vancouver B.C.
(1981a), 440-442.
Lesmo L., Magnani D., Torasso P.: Lexical and Pral
matic Knowledge for Natural Language Analysis.
Proc.IEEE Int.Conf. on Cybernetics and Society,
Atlanta GA (1981b), 301-305.
Lesmo L., Siklossy L., Torasso P.: A Two-Level Net
for Integrating Selectional Restrictions and Sem
antic Knowledge. IEEE Int. Conf. on Cybernetics
and Society, Bombay and New Delhi (Dec 1983).
Marcus M.P.: A Theory of Syntactic Recognition for
Natural Language. MIT Press, Cambridge MA (1980)
Milne R.W.: Predicting Garden Path Sentences.
Cognitive Science 6 (1982), 349-373.
Sidner C.L. et al.: Research in Knowledge Repres
entation for Natural Language Understanding.
BBN Report no.4735 (1981).
Siklossy L., Lesmo L., Torasso P.: Flexible Pragma
tics for Database Oriented Query Answering. ISI
Internal Report (1983).
Waltz D.L.: An English Language Question-Answering
System for a Large Relational Data Base. Comm.
ACM 21 (1978), 526-539.
Weischedel A.M., Black J.E.: Responding Intelligent
ly to Unparsable Inputs. AJCL 6 (1980), 97-109.
Winograd T.: Language as a Cognitive Process.
Vol.1: Syntax. Addison Wesley (1983).
Woods W.A.: An Experimental Parsing System for
Transition Network Grammars. In R.Rustin (ed.):
Natural Language Processing. Algorithmics Press,
New York (1973), 111-154.
</reference>
<page confidence="0.997891">
121
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.956642">
<title confidence="0.9970235">A FLEXIBLE NATURAL LANGUAGE PARSER BASED ON A TWO-LEVEL REPRESENTATION OF SYNTAX</title>
<author confidence="0.999678">Leonardo Lesmo</author>
<author confidence="0.999678">Pietro Torasso</author>
<affiliation confidence="0.99495">Istituto di Scienze dell&apos;Informazione Universita di Torino</affiliation>
<address confidence="0.989952">Massimo 42 - 10125 TORINO - ITALY</address>
<abstract confidence="0.99924325">In this paper we present a parser which al lows to make explicit the interconnections between syntax and semantics, to analyze the sentences in a quasi-deterministic fashion and, in many cases, to identify the roles of the various constituents even if the sentance is ill-formed. The main fea ture of the approach on which the parser is based consists in a two-level representation of the syn knowledge: a first set of rules emits potheses about the constituents of the sentence and their functional role and another set of rules verifies whether a hypothesis satisfies the con straints about the well-formedness of sentences. However, the application of the second set of rules is delayed until the semantic knowledge con firms the acceptability of the hypothesis. If the semantics reject it, a new hypothesis is obtained by applying a simple and relatively unexpensive &amp;quot;natural&amp;quot; modification; a set of these modifica tions is predefined and only when none of them is . applicable a real backup is performed: in most cases this situation corresponds to a case where people would normally garden path.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Brachman R J-et</author>
</authors>
<title>al.: Research in Natural Language Understanding.</title>
<date>1979</date>
<tech>BBN Report no.4274</tech>
<marker>J-et, 1979</marker>
<rawString>Brachman R.J.-et al.: Research in Natural Language Understanding. BBN Report no.4274 (1979).</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Charniak</author>
</authors>
<title>Six Topics in Search of a Parser: An Overview of Al Language Research.</title>
<date>1981</date>
<booktitle>Proc.7th IJCAI,</booktitle>
<pages>1079--1087</pages>
<location>Vancouver, B.C.</location>
<marker>Charniak, 1981</marker>
<rawString>Charniak E.: Six Topics in Search of a Parser: An Overview of Al Language Research. Proc.7th IJCAI, Vancouver, B.C. (1981), 1079-1087.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C J Date</author>
</authors>
<title>An Introduction to Database Systems (3rd edition),</title>
<date>1981</date>
<publisher>Addison Wesley</publisher>
<marker>Date, 1981</marker>
<rawString>Date C.J.: An Introduction to Database Systems (3rd edition), Addison Wesley (1981).</rawString>
</citation>
<citation valid="true">
<authors>
<author>L R Harris</author>
</authors>
<title>User-Oriented Data Base Query in the ROBOT Natural Language Query System.</title>
<date>1977</date>
<journal>Int. J. of Man-Machine Studies</journal>
<volume>9</volume>
<pages>697--713</pages>
<marker>Harris, 1977</marker>
<rawString>Harris L.R.: User-Oriented Data Base Query in the ROBOT Natural Language Query System. Int. J. of Man-Machine Studies 9 (1977), 697-713.</rawString>
</citation>
<citation valid="false">
<authors>
<author>P J Hayes</author>
</authors>
<title>Multiple Strategies Construction Sped fic Parsing for a Flexible Database Access and Update.</title>
<booktitle>Proc.7th IJCAI,Vancouver(1981),</booktitle>
<pages>432--439</pages>
<marker>Hayes, </marker>
<rawString>Hayes P.J.: Multiple Strategies Construction Sped fic Parsing for a Flexible Database Access and Update. Proc.7th IJCAI,Vancouver(1981), 432-439.</rawString>
</citation>
<citation valid="true">
<date>1982</date>
<booktitle>Special Issue on Natural Lan guage Processing, SIGART Newsletter</booktitle>
<volume>79</volume>
<editor>Kaplan S.J. (ed.):</editor>
<marker>1982</marker>
<rawString>Kaplan S.J. (ed.): Special Issue on Natural Lan guage Processing, SIGART Newsletter 79 (1982).</rawString>
</citation>
<citation valid="true">
<authors>
<author>K G Konolige</author>
</authors>
<title>A Framework for a Portable Natural Language Interface to Databases.</title>
<date>1980</date>
<booktitle>In D.Sagalowicz (ed.): Mechanical Intelligence: Research and AE plications, Final Tech. Rep., SRI Int.</booktitle>
<marker>Konolige, 1980</marker>
<rawString>Konolige K.G.: A Framework for a Portable Natural Language Interface to Databases. In D.Sagalowicz (ed.): Mechanical Intelligence: Research and AE plications, Final Tech. Rep., SRI Int. (1980).</rawString>
</citation>
<citation valid="true">
<authors>
<author>S C Kwasny</author>
</authors>
<title>Sondheimer N.K.: Relaxation Techniques for Parsing Grammatically Ill-Formed Input in Natural Language Understanding Systems.</title>
<date>1981</date>
<journal>AJCL</journal>
<volume>7</volume>
<pages>99--108</pages>
<marker>Kwasny, 1981</marker>
<rawString>Kwasny S.C., Sondheimer N.K.: Relaxation Techniques for Parsing Grammatically Ill-Formed Input in Natural Language Understanding Systems. AJCL 7 (1981), 99-108.</rawString>
</citation>
<citation valid="false">
<authors>
<author>L Lesmo</author>
<author>D Magnani</author>
</authors>
<title>Torasso P.: A Deterministic Analyzer for the Interpretation of Natural Lan guage Commands.</title>
<booktitle>Proc.7th IJCAI, Vancouver B.C. (1981a),</booktitle>
<pages>440--442</pages>
<marker>Lesmo, Magnani, </marker>
<rawString>Lesmo L., Magnani D., Torasso P.: A Deterministic Analyzer for the Interpretation of Natural Lan guage Commands. Proc.7th IJCAI, Vancouver B.C. (1981a), 440-442.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Lesmo</author>
<author>D Magnani</author>
<author>P Torasso</author>
</authors>
<title>Lexical and Pral matic Knowledge for Natural Language Analysis.</title>
<date>1981</date>
<booktitle>Proc.IEEE Int.Conf. on Cybernetics and Society,</booktitle>
<pages>301--305</pages>
<location>Atlanta GA</location>
<marker>Lesmo, Magnani, Torasso, 1981</marker>
<rawString>Lesmo L., Magnani D., Torasso P.: Lexical and Pral matic Knowledge for Natural Language Analysis. Proc.IEEE Int.Conf. on Cybernetics and Society, Atlanta GA (1981b), 301-305.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Lesmo</author>
<author>L Siklossy</author>
<author>P Torasso</author>
</authors>
<title>A Two-Level Net for Integrating Selectional Restrictions and Sem antic Knowledge.</title>
<date>1983</date>
<booktitle>IEEE Int. Conf. on Cybernetics and Society,</booktitle>
<location>Bombay and New Delhi</location>
<marker>Lesmo, Siklossy, Torasso, 1983</marker>
<rawString>Lesmo L., Siklossy L., Torasso P.: A Two-Level Net for Integrating Selectional Restrictions and Sem antic Knowledge. IEEE Int. Conf. on Cybernetics and Society, Bombay and New Delhi (Dec 1983).</rawString>
</citation>
<citation valid="true">
<authors>
<author>M P Marcus</author>
</authors>
<title>A Theory of Syntactic Recognition for Natural Language.</title>
<date>1980</date>
<journal>Cognitive Science</journal>
<volume>6</volume>
<pages>349--373</pages>
<publisher>MIT Press,</publisher>
<location>Cambridge MA</location>
<marker>Marcus, 1980</marker>
<rawString>Marcus M.P.: A Theory of Syntactic Recognition for Natural Language. MIT Press, Cambridge MA (1980) Milne R.W.: Predicting Garden Path Sentences. Cognitive Science 6 (1982), 349-373.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L Sidner</author>
</authors>
<title>et al.: Research in Knowledge Repres entation for Natural Language Understanding.</title>
<date>1981</date>
<tech>BBN Report no.4735</tech>
<marker>Sidner, 1981</marker>
<rawString>Sidner C.L. et al.: Research in Knowledge Repres entation for Natural Language Understanding. BBN Report no.4735 (1981).</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Siklossy</author>
<author>L Lesmo</author>
<author>P Torasso</author>
</authors>
<title>Flexible Pragma tics for Database Oriented Query Answering.</title>
<date>1983</date>
<tech>ISI Internal Report</tech>
<marker>Siklossy, Lesmo, Torasso, 1983</marker>
<rawString>Siklossy L., Lesmo L., Torasso P.: Flexible Pragma tics for Database Oriented Query Answering. ISI Internal Report (1983).</rawString>
</citation>
<citation valid="true">
<authors>
<author>D L Waltz</author>
</authors>
<title>An English Language Question-Answering System for a Large Relational Data Base.</title>
<date>1978</date>
<journal>Comm. ACM</journal>
<volume>21</volume>
<pages>526--539</pages>
<marker>Waltz, 1978</marker>
<rawString>Waltz D.L.: An English Language Question-Answering System for a Large Relational Data Base. Comm. ACM 21 (1978), 526-539.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A M Weischedel</author>
<author>J E Black</author>
</authors>
<title>Responding Intelligent ly to Unparsable Inputs.</title>
<date>1980</date>
<journal>AJCL</journal>
<volume>6</volume>
<pages>97--109</pages>
<marker>Weischedel, Black, 1980</marker>
<rawString>Weischedel A.M., Black J.E.: Responding Intelligent ly to Unparsable Inputs. AJCL 6 (1980), 97-109.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Winograd</author>
</authors>
<title>Language as a Cognitive Process. Vol.1: Syntax.</title>
<date>1983</date>
<publisher>Addison Wesley</publisher>
<marker>Winograd, 1983</marker>
<rawString>Winograd T.: Language as a Cognitive Process. Vol.1: Syntax. Addison Wesley (1983).</rawString>
</citation>
<citation valid="true">
<authors>
<author>W A Woods</author>
</authors>
<title>An Experimental Parsing System for Transition Network Grammars.</title>
<date>1973</date>
<booktitle>In R.Rustin (ed.): Natural Language Processing.</booktitle>
<pages>111--154</pages>
<publisher>Algorithmics Press,</publisher>
<location>New York</location>
<marker>Woods, 1973</marker>
<rawString>Woods W.A.: An Experimental Parsing System for Transition Network Grammars. In R.Rustin (ed.): Natural Language Processing. Algorithmics Press, New York (1973), 111-154.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>