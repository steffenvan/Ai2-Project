<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001968">
<title confidence="0.997919">
A Probability Model to Improve Word Alignment
</title>
<author confidence="0.996872">
Colin Cherry and Dekang Lin
</author>
<affiliation confidence="0.9987025">
Department of Computing Science
University of Alberta
</affiliation>
<address confidence="0.629679">
Edmonton, Alberta, Canada, T6G 2E8
</address>
<email confidence="0.999112">
{colinc,lindek}@cs.ualberta.ca
</email>
<sectionHeader confidence="0.996665" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999770454545455">
Word alignment plays a crucial role in sta-
tistical machine translation. Word-aligned
corpora have been found to be an excellent
source of translation-related knowledge.
We present a statistical model for comput-
ing the probability of an alignment given a
sentence pair. This model allows easy in-
tegration of context-specific features. Our
experiments show that this model can be
an effective tool for improving an existing
word alignment.
</bodyText>
<sectionHeader confidence="0.998784" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999903041666667">
Word alignments were first introduced as an in-
termediate result of statistical machine translation
systems (Brown et al., 1993). Since their intro-
duction, many researchers have become interested
in word alignments as a knowledge source. For
example, alignments can be used to learn transla-
tion lexicons (Melamed, 1996), transfer rules (Car-
bonell et al., 2002; Menezes and Richardson, 2001),
and classifiers to find safe sentence segmentation
points (Berger et al., 1996).
In addition to the IBM models, researchers have
proposed a number of alternative alignment meth-
ods. These methods often involve using a statistic
such as φ2 (Gale and Church, 1991) or the log likeli-
hood ratio (Dunning, 1993) to create a score to mea-
sure the strength of correlation between source and
target words. Such measures can then be used to
guide a constrained search to produce word align-
ments (Melamed, 2000).
It has been shown that once a baseline alignment
has been created, one can improve results by using
a refined scoring metric that is based on the align-
ment. For example Melamed uses competitive link-
ing along with an explicit noise model in (Melamed,
2000) to produce a new scoring metric, which in turn
creates better alignments.
In this paper, we present a simple, flexible, sta-
tistical model that is designed to capture the infor-
mation present in a baseline alignment. This model
allows us to compute the probability of an align-
ment for a given sentence pair. It also allows for
the easy incorporation of context-specific knowl-
edge into alignment probabilities.
A critical reader may pose the question, “Why in-
vent a new statistical model for this purpose, when
existing, proven models are available to train on a
given word alignment?” We will demonstrate exper-
imentally that, for the purposes of refinement, our
model achieves better results than a comparable ex-
isting alternative.
We will first present this model in its most general
form. Next, we describe an alignment algorithm that
integrates this model with linguistic constraints in
order to produce high quality word alignments. We
will follow with our experimental results and dis-
cussion. We will close with a look at how our work
relates to other similar systems and a discussion of
possible future directions.
</bodyText>
<sectionHeader confidence="0.99121" genericHeader="method">
2 Probability Model
</sectionHeader>
<bodyText confidence="0.999244756756757">
In this section we describe our probability model.
To do so, we will first introduce some necessary no-
tation. Let E be an English sentence e1, e2, ... , em
and let F be a French sentence f1, f2,. . . , fn. We
define a link l(ei, fj) to exist if ei and fj are a trans-
lation (or part of a translation) of one another. We
define the null link l(ei, f0) to exist if ei does not
correspond to a translation for any French word in
F. The null link l(e0, fj) is defined similarly. An
alignment A for two sentences E and F is a set of
links such that every word in E and F participates in
at least one link, and a word linked to e0 or f0 partic-
ipates in no other links. If e occurs in E x times and
f occurs in F y times, we say that e and f co-occur
xy times in this sentence pair.
We define the alignment problem as finding the
alignment A that maximizes P(A|E, F). This cor-
responds to finding the Viterbi alignment in the
IBM translation systems. Those systems model
P(F, A|E), which when maximized is equivalent to
maximizing P(A|E, F). We propose here a system
which models P(A|E, F) directly, using a different
decomposition of terms.
In the IBM models of translation, alignments exist
as artifacts of which English words generated which
French words. Our model does not state that one
sentence generates the other. Instead it takes both
sentences as given, and uses the sentences to deter-
mine an alignment. An alignment A consists of t
links {l1, l2, ... , lt}, where each lk = l(eik, fjk) for
some ik and jk. We will refer to consecutive subsets
of A as lji = {li, li+1, ... , lj}. Given this notation,
P(A|E, F) can be decomposed as follows:
Here P(lk|eik, fjk) is link probability given a co-
occurrence of the two words, which is similar in
spirit to Melamed’s explicit noise model (Melamed,
2000). This term depends only on the words in-
</bodyText>
<equation confidence="0.8235855">
volved directly in the link. The ratio P (Ck|lk)
P(Ck|eik ,fjk )
</equation>
<bodyText confidence="0.924212909090909">
modifies the link probability, providing context-
sensitive information.
Up until this point, we have made no simplify-
ing assumptions in our derivation. Unfortunately,
Ck = {E, F, lk−1
1 } is too complex to estimate con-
text probabilities directly. Suppose FTk is a set
of context-related features such that P(lk|Ck) can
be approximated by P(lk|eik, fjk, FTk). Let C0k =
{eik, fjk}∪FTk. P(lk|C0k) can then be decomposed
using the same derivation as above.
</bodyText>
<equation confidence="0.9979344">
k|lk)
P(lk|C0 k) = P(lk|eik, fjk) × P (C0
P(C0 k|eik,
fjk)
= P(lk|eik, fjk) × P(FTk|eik, fjk)
</equation>
<bodyText confidence="0.993736777777778">
In the second line of this derivation, we can drop
eik and fjk from C0k, leaving only FTk, because they
are implied by the events which the probabilities are
conditionalized on. Now, we are left with the task
of approximating P (FTk|lk) and P(FTk|eik,fjk).
To do so, we will assume that for all ft ∈ FTk,
ft is conditionally independent given either lk or
(eik, fjk). This allows us to approximate alignment
probability P(A|E, F) as follows:
</bodyText>
<equation confidence="0.9711386">
P(FTk|lk)
P(A|E, F) = P(lt1|E, F) = t P(lk|E, F, lk−1 t ⎛ ⎞
Y 1 ) Y Y P (ft|lk)
k=1 k=1 ⎝P (lk|eik, fjk) × ⎠
ft∈FTk
P(ft |eik, fjk)
At this point, we must factor P(lk|E, F, lk−1
1 ) to
make computation feasible. Let Ck = {E, F, lk−1
1 }
</equation>
<bodyText confidence="0.967128333333333">
represent the context of lk. Note that both the con-
text Ck and the link lk imply the occurrence of eik
and fjk. We can rewrite P (lk|Ck) as:
</bodyText>
<equation confidence="0.9995975">
P(lk,Ck) =P(Ck|lk)P(lk)
P(Ck) P(Ck, eik,fjk)
</equation>
<bodyText confidence="0.999872357142857">
In any context, only a few features will be ac-
tive. The inner product is understood to be only over
those features ft that are present in the current con-
text. This approximation will cause P(A|E, F) to
no longer be awell-behaved probability distribution,
though as in Naive Bayes, it can be an excellent es-
timator for the purpose of ranking alignments.
If we have an aligned training corpus, the prob-
abilities needed for the above equation are quite
easy to obtain. Link probabilities can be deter-
mined directly from |lk |(link counts) and |eik, fj,k|
(co-occurrence counts). For any co-occurring pair
of words (eik, fjk), we check whether it has the
feature ft. If it does, we increment the count of
</bodyText>
<equation confidence="0.999548333333333">
P(lk|Ck) =
P(lk, eik, fjk)
P(eik, fjk)
=
P(
P(lk eik, fjk) × Ck|l k)
P(Ck|eik, fjk)
P(Ck|lk) ×
P(Ck  |eik, fjk )
</equation>
<bodyText confidence="0.99887325">
|ft, eik, fjk|. If this pair is also linked, then we in-
crement the count of |ft, lk|. Note that our definition
of FTk allows for features that depend on previous
links. For this reason, when determining whether or
not a feature is present in a given context, one must
impose an ordering on the links. This ordering can
be arbitrary as long as the same ordering is used in
training1 and probability evaluation. A simple solu-
tion would be to order links according their French
words. We choose to order links according to the
link probability P(lk|eik, fjk) as it has an intuitive
appeal of allowing more certain links to provide con-
text for others.
We store probabilities in two tables. The first ta-
ble stores link probabilities P(lk|eik, fjk). It has an
entry for every word pair that was linked at least
once in the training corpus. Its size is the same as
the translation table in the IBM models. The sec-
ond table stores feature probabilities, P(ft|lk) and
P(ft|eik, fjk). For every linked word pair, this table
has two entries for each active feature. In the worst
case this table will be of size 2x|FT |x|E|x|F|. In
practice, it is much smaller as most contexts activate
only a small number of features.
In the next subsection we will walk through a sim-
ple example of this probability model in action. We
will describe the features used in our implementa-
tion of this model in Section 3.2.
</bodyText>
<subsectionHeader confidence="0.996342">
2.1 An Illustrative Example
</subsectionHeader>
<bodyText confidence="0.99991">
Figure 1 shows an aligned corpus consisting of
one sentence pair. Suppose that we are concerned
with only one feature ft that is active2 for eik
and fjk if an adjacent pair is an alignment, i.e.,
</bodyText>
<equation confidence="0.955938">
l(eik−1, fjk−1) E lk−1
1 or l(eik+1, fjk+1) E lk−1
1 .
</equation>
<bodyText confidence="0.999820666666667">
This example would produce the probability tables
shown in Table 1.
Note how ft is active for the (a, v) link, and is
not active for the (b, u) link. This is due to our se-
lected ordering. Table 1 allows us to calculate the
probability of this alignment as:
</bodyText>
<footnote confidence="0.9895436">
1In our experiments, the ordering is not necessary during
training to achieve good performance.
2Throughout this paper we will assume that null alignments
are special cases, and do not activate or participate in features
unless otherwise stated in the feature description.
</footnote>
<figureCaption confidence="0.991107">
Figure 1: An Example Aligned Corpus
</figureCaption>
<tableCaption confidence="0.892146">
Table 1: Example Probability Tables
</tableCaption>
<figure confidence="0.9883889375">
(a) Link Counts and Probabilities
eik fjk |lk ||eik, fjk |P(lk|eik, fjk)
b u 1 1 1
a f0 1 2 1
e0 v 1 2 2
a v 1 4 1
2
1
4
(b) Feature Counts
eik fjk |ft, lk ||ft, eik, fjk|
a v 1 1
(c) Feature Probabilities
eik fjk P(ft|lk) P(ft|eik, fjk)
a v 1 1
4
</figure>
<equation confidence="0.952234">
P(A|E, F) = P(l(b, u)|b, u)x
P(l(a, f0)|a, f0)x
P(l(e0, v)|e0, v)x
P(l(a, v)|a, v)P(ft|l(a,v))
P (ft|a,v)
= 1x21x21x41x 11
4
1
4
</equation>
<sectionHeader confidence="0.995913" genericHeader="method">
3 Word-Alignment Algorithm
</sectionHeader>
<bodyText confidence="0.99993225">
In this section, we describe a world-alignment al-
gorithm guided by the alignment probability model
derived above. In designing this algorithm we have
selected constraints, features and a search method
in order to achieve high performance. The model,
however, is general, and could be used with any in-
stantiation of the above three factors. This section
will describe and motivate the selection of our con-
straints, features and search method.
The input to our word-alignment algorithm con-
sists of a pair of sentences E and F, and the depen-
dency tree TE for E. TE allows us to make use of
</bodyText>
<equation confidence="0.9374515">
e❑�❑ a❑ b❑ a❑
AJ u❑ v❑ v❑
</equation>
<bodyText confidence="0.596118">
features and constraints that are based on linguistic
intuitions.
</bodyText>
<figure confidence="0.54565475">
pre�
subj�
det❑ det[]
obj❑
</figure>
<subsectionHeader confidence="0.95723">
3.1 Constraints
</subsectionHeader>
<bodyText confidence="0.99305">
The reader will note that our alignment model as de-
scribed above has very few factors to prevent unde-
sirable alignments, such as having all French words
align to the same English word. To guide the model
to correct alignments, we employ two constraints to
limit our search for the most probable alignment.
The first constraint is the one-to-one constraint
(Melamed, 2000): every word (except the null words
eo and fo) participates in exactly one link.
The second constraint, known as the cohesion
constraint (Fox, 2002), uses the dependency tree
(Mel’ˇcuk, 1987) of the English sentence to restrict
possible link combinations. Given the dependency
tree TE, the alignment can induce a dependency tree
for F (Hwa et al., 2002). The cohesion constraint
requires that this induced dependency tree does not
have any crossing dependencies. The details about
how the cohesion constraint is implemented are out-
side the scope of this paper.3 Here we will use a sim-
ple example to illustrate the effect of the constraint.
Consider the partial alignment in Figure 2. When
the system attempts to link of and de, the new link
will induce the dotted dependency, which crosses a
previously induced dependency between service and
donn´ees. Therefore, of and de will not be linked.
the status of the data service❑
l&apos; état du service de données❑
</bodyText>
<figureCaption confidence="0.980334">
Figure 2: An Example of Cohesion Constraint
</figureCaption>
<subsectionHeader confidence="0.847826">
3.2 Features
</subsectionHeader>
<bodyText confidence="0.969393666666667">
In this section we introduce two types of features
that we use in our implementation of the probabil-
ity model described in Section 2. The first feature
</bodyText>
<footnote confidence="0.9911475">
3The algorithm for checking the cohesion constraint is pre-
sented in a separate paper which is currently under review.
</footnote>
<equation confidence="0.6659824">
theF]host❑ discovers❑all®he[devices❑
111 211 311 411 511 611
111211 311 411 511
l&apos; hôteC-tepère❑tousdesloériphériques❑
thelhost❑ locate❑ all❑ the[] peripherals[]
</equation>
<figureCaption confidence="0.996307">
Figure 3: Feature Extraction Example
</figureCaption>
<bodyText confidence="0.999908">
type fta concerns surrounding links. It has been ob-
served that words close to each other in the source
language tend to remain close to each other in the
translation (Vogel et al., 1996; Ker and Change,
1997). To capture this notion, for any word pair
(ei, fj), if a link l(ei,, fj,) exists where i − 2 ≤ i&apos; ≤
i + 2 and j − 2 ≤ j&apos; ≤ j + 2, then we say that the
feature fta(i−i&apos;, j−j&apos;, ei,) is active for this context.
We refer to these as adjacency features.
The second feature type ftd uses the English
parse tree to capture regularities among grammati-
cal relations between languages. For example, when
dealing with French and English, the location of
the determiner with respect to its governor4 is never
swapped during translation, while the location of ad-
jectives is swapped frequently. For any word pair
(ei, fj), let ei, be the governor of ei, and let rel be
the relationship between them. If a link l(ei,, fj,)
exists, then we say that the feature ftd(j −j&apos;, rel) is
active for this context. We refer to these as depen-
dency features.
Take for example Figure 3 which shows a par-
tial alignment with all links completed except for
those involving ‘the’. Given this sentence pair and
English parse tree, we can extract features of both
types to assist in the alignment of thea. The word
pair (thea, l&apos;) will have an active adjacency feature
fta(+1, +1, host) as well as a dependency feature
ftd(−1, det). These two features will work together
to increase the probability of this correct link. In
contrast, the incorrect link (thea, les) will have only
ftd(+3, det), which will work to lower the link
probability, since most determiners are located be-
</bodyText>
<footnote confidence="0.899362">
4The parent node in the dependency tree.
</footnote>
<figure confidence="0.818729857142857">
det❑
mod❑
pcomp❑
det❑
nn❑
6❑
fore their governors.
</figure>
<subsectionHeader confidence="0.981943">
3.3 Search
</subsectionHeader>
<bodyText confidence="0.999836416666667">
Due to our use of constraints, when seeking the
highest probability alignment, we cannot rely on a
method such as dynamic programming to (implic-
itly) search the entire alignment space. Instead, we
use a best-first search algorithm (with constant beam
and agenda size) to search our constrained space of
possible alignments. A state in this space is a par-
tial alignment. A transition is defined as the addi-
tion of a single link to the current state. Any link
which would create a state that does not violate any
constraint is considered to be a valid transition. Our
start state is the empty alignment, where all words in
E and F are linked to null. A terminal state is a state
in which no more links can be added without violat-
ing a constraint. Our goal is to find the terminal state
with highest probability.
For the purposes of our best-first search, non-
terminal states are evaluated according to a greedy
completion of the partial alignment. We build this
completion by adding valid links in the order of
their unmodified link probabilities P(lje, f) until no
more links can be added. The score the state receives
is the probability of its greedy completion. These
completions are saved for later use (see Section 4.2).
</bodyText>
<sectionHeader confidence="0.996534" genericHeader="method">
4 Training
</sectionHeader>
<bodyText confidence="0.999984888888889">
As was stated in Section 2, our probability model
needs an initial alignment in order to create its prob-
ability tables. Furthermore, to avoid having our
model learn mistakes and noise, it helps to train on a
set of possible alignments for each sentence, rather
than one Viterbi alignment. In the following sub-
sections we describe the creation of the initial align-
ments used for our experiments, as well as our sam-
pling method used in training.
</bodyText>
<subsectionHeader confidence="0.932174">
4.1 Initial Alignment
</subsectionHeader>
<bodyText confidence="0.999998166666667">
We produce an initial alignment using the same al-
gorithm described in Section 3, except we maximize
summed 02 link scores (Gale and Church, 1991),
rather than alignment probability. This produces a
reasonable one-to-one word alignment that we can
refine using our probability model.
</bodyText>
<subsectionHeader confidence="0.998771">
4.2 Alignment Sampling
</subsectionHeader>
<bodyText confidence="0.999974178571429">
Our use of the one-to-one constraint and the cohe-
sion constraint precludes sampling directly from all
possible alignments. These constraints tie words in
such a way that the space of alignments cannot be
enumerated as in IBM models 1 and 2 (Brown et
al., 1993). Taking our lead from IBM models 3, 4
and 5, we will sample from the space of those high-
probability alignments that do not violate our con-
straints, and then redistribute our probability mass
among our sample.
At each search state in our alignment algorithm,
we consider a number of potential links, and select
between them using a heuristic completion of the re-
sulting state. Our sample S of possible alignments
will be the most probable alignment, plus the greedy
completions of the states visited during search. It
is important to note that any sampling method that
concentrates on complete, valid and high probabil-
ity alignments will accomplish the same task.
When collecting the statistics needed to calcu-
late P(AjE, F) from our initial 02 alignment, we
give each s E S a uniform weight. This is rea-
sonable, as we have no probability estimates at this
point. When training from the alignments pro-
duced by our model, we normalize P(sjE, F) so
that &amp;∈S P(sjE, F) = 1. We then count links and
features in S according to these normalized proba-
bilities.
</bodyText>
<sectionHeader confidence="0.994799" genericHeader="method">
5 Experimental Results
</sectionHeader>
<bodyText confidence="0.999997333333333">
We adopted the same evaluation methodology as in
(Och and Ney, 2000), which compared alignment
outputs with manually aligned sentences. Och and
Ney classify manual alignments into two categories:
Sure (S) and Possible (P) (SCP). They defined the
following metrics to evaluate an alignment A:
</bodyText>
<equation confidence="0.9170774">
recall =
precision = |A∩P |
|P |
alignment error rate (AER) = |A∩S|+|A∩P|
|S|+|P|
</equation>
<bodyText confidence="0.873917428571429">
We trained our alignment program with the same
50K pairs of sentences as (Och and Ney, 2000) and
tested it on the same 500 manually aligned sen-
tences. Both the training and testing sentences are
from the Hansard corpus. We parsed the training
|A∩S|
|S|
</bodyText>
<tableCaption confidence="0.999515">
Table 2: Comparison with (Och and Ney, 2000)
</tableCaption>
<table confidence="0.999848333333333">
Method Prec Rec AER
Ours 95.7 86.4 8.7
IBM-4 F→E 80.5 91.2 15.6
IBM-4 E→F 80.0 90.8 16.0
IBM-4 Intersect 95.7 85.6 9.0
IBM-4 Refined 85.9 92.3 11.7
</table>
<tableCaption confidence="0.990621">
Table 3: Evaluation of Features
</tableCaption>
<table confidence="0.9812085">
Algorithm Prec Rec AER
initial (02) 88.9 84.6 13.1
without features 93.7 84.8 10.5
with ftd only 95.6 85.4 9.3
with fta only 95.9 85.8 9.0
with fta and ftd 95.7 86.4 8.7
</table>
<bodyText confidence="0.9998959">
and testing corpora with Minipar.5 We then ran the
training procedure in Section 4 for three iterations.
We conducted three experiments using this
methodology. The goal of the first experiment is to
compare the algorithm in Section 3 to a state-of-the-
art alignment system. The second will determine
the contributions of the features. The third experi-
ment aims to keep all factors constant except for the
model, in an attempt to determine its performance
when compared to an obvious alternative.
</bodyText>
<subsectionHeader confidence="0.997569">
5.1 Comparison to state-of-the-art
</subsectionHeader>
<bodyText confidence="0.999973913043478">
Table 2 compares the results of our algorithm with
the results in (Och and Ney, 2000), where an HMM
model is used to bootstrap IBM Model 4. The rows
IBM-4 F→E and IBM-4 E→F are the results ob-
tained by IBM Model 4 when treating French as the
source and English as the target or vice versa. The
row IBM-4 Intersect shows the results obtained by
taking the intersection of the alignments produced
by IBM-4 E→F and IBM-4 F→E. The row IBM-4
Refined shows results obtained by refining the inter-
section of alignments in order to increase recall.
Our algorithm achieved over 44% relative error
reduction when compared with IBM-4 used in ei-
ther direction and a 25% relative error rate reduc-
tion when compared with IBM-4 Refined. It also
achieved a slight relative error reduction when com-
pared with IBM-4 Intersect. This demonstrates that
we are competitive with the methods described in
(Och and Ney, 2000). In Table 2, one can see that
our algorithm is high precision, low recall. This was
expected as our algorithm uses the one-to-one con-
straint, which rules out many of the possible align-
ments present in the evaluation data.
</bodyText>
<footnote confidence="0.997363">
5available at http://www.cs.ualberta.ca/˜lindek/minipar.htm
</footnote>
<subsectionHeader confidence="0.999816">
5.2 Contributions of Features
</subsectionHeader>
<bodyText confidence="0.9999919375">
Table 3 shows the contributions of features to our al-
gorithm’s performance. The initial (02) row is the
score for the algorithm (described in Section 4.1)
that generates our initial alignment. The withoutfea-
tures row shows the score after 3 iterations of refine-
ment with an empty feature set. Here we can see that
our model in its simplest form is capable of produc-
ing a significant improvement in alignment quality.
The rows with ftd only and with fta only describe
the scores after 3 iterations of training using only de-
pendency and adjacency features respectively. The
two features provide significant contributions, with
the adjacency feature being slightly more important.
The final row shows that both features can work to-
gether to create a greater improvement, despite the
independence assumptions made in Section 2.
</bodyText>
<subsectionHeader confidence="0.999318">
5.3 Model Evaluation
</subsectionHeader>
<bodyText confidence="0.999964210526316">
Even though we have compared our algorithm to
alignments created using IBM statistical models, it
is not clear if our model is essential to our perfor-
mance. This experiment aims to determine if we
could have achieved similar results using the same
initial alignment and search algorithm with an alter-
native model.
Without using any features, our model is similar
to IBM’s Model 1, in that they both take into account
only the word types that participate in a given link.
IBM Model 1 uses P(f|e), the probability of f be-
ing generated by e, while our model uses P(l|e, f),
the probability of a link existing between e and f.
In this experiment, we set Model 1 translation prob-
abilities according to our initial 02 alignment, sam-
pling as we described in Section 4.2. We then use the
M=1 P(fj|eaj) to evaluate candidate alignments in
a search that is otherwise identical to our algorithm.
We ran Model 1 refinement for three iterations and
</bodyText>
<tableCaption confidence="0.986286">
Table 4: P(l|e, f) vs. P(f|e)
</tableCaption>
<table confidence="0.99894875">
Algorithm Prec Rec AER
initial (02) 88.9 84.6 13.1
P(l|e, f) model 93.7 84.8 10.5
P(f|e) model 89.2 83.0 13.7
</table>
<bodyText confidence="0.988485833333333">
recorded the best results that it achieved.
It is clear from Table 4 that refining our initial 02
alignment using IBM’s Model 1 is less effective than
using our model in the same manner. In fact, the
Model 1 refinement receives a lower score than our
initial alignment.
</bodyText>
<sectionHeader confidence="0.999991" genericHeader="method">
6 Related Work
</sectionHeader>
<subsectionHeader confidence="0.99886">
6.1 Probability models
</subsectionHeader>
<bodyText confidence="0.999734254901961">
When viewed with no features, our proba-
bility model is most similar to the explicit
noise model defined in (Melamed, 2000). In
fact, Melamed defines a probability distribution
P(links(u, v)|cooc(u, v), A+, A−) which appears to
make our work redundant. However, this distribu-
tion refers to the probability that two word types u
and v are linked links(u, v) times in the entire cor-
pus. Our distribution P(l|e, f) refers to the proba-
bility of linking a specific co-occurrence of the word
tokens e and f. In Melamed’s work, these probabil-
ities are used to compute a score based on a prob-
ability ratio. In our work, we use the probabilities
directly.
By far the most prominent probability models in
machine translation are the IBM models and their
extensions. When trying to determine whether two
words are aligned, the IBM models ask, “What is
the probability that this English word generated this
French word?” Our model asks instead, “If we are
given this English word and this French word, what
is the probability that they are linked?” The dis-
tinction is subtle, yet important, introducing many
differences. For example, in our model, E and F
are symmetrical. Furthermore, we model P(l|e, f&apos;)
and P (l|e, f&apos;&apos;) as unrelated values, whereas the IBM
model would associate them in the translation prob-
abilities t(f&apos;|e) and t(f&apos;&apos;|e) through the constraint
E f t(f|e) = 1. Unfortunately, by conditionalizing
on both words, we eliminate a large inductive bias.
This prevents us from starting with uniform proba-
bilities and estimating parameters with EM. This is
why we must supply the model with a noisy initial
alignment, while IBM can start from an unaligned
corpus.
In the IBM framework, when one needs the model
to take new information into account, one must cre-
ate an extended model which can base its parame-
ters on the previous model. In our model, new in-
formation can be incorporated modularly by adding
features. This makes our work similar to maximum
entropy-based machine translation methods, which
also employ modular features. Maximum entropy
can be used to improve IBM-style translation prob-
abilities by using features, such as improvements to
P(f|e) in (Berger et al., 1996). By the same token
we can use maximum entropy to improve our esti-
mates of P(lk|eik, fjk, Ck). We are currently inves-
tigating maximum entropy as an alternative to our
current feature model which assumes conditional in-
dependence among features.
</bodyText>
<subsectionHeader confidence="0.995691">
6.2 Grammatical Constraints
</subsectionHeader>
<bodyText confidence="0.9999715">
There have been many recent proposals to leverage
syntactic data in word alignment. Methods such as
(Wu, 1997), (Alshawi et al., 2000) and (Lopez et al.,
2002) employ a synchronous parsing procedure to
constrain a statistical alignment. The work done in
(Yamada and Knight, 2001) measures statistics on
operations that transform a parse tree from one lan-
guage into another.
</bodyText>
<sectionHeader confidence="0.999444" genericHeader="method">
7 Future Work
</sectionHeader>
<bodyText confidence="0.997620363636364">
The alignment algorithm described here is incapable
of creating alignments that are not one-to-one. The
model we describe, however is not limited in the
same manner. The model is currently capable of
creating many-to-one alignments so long as the null
probabilities of the words added on the “many” side
are less than the probabilities of the links that would
be created. Under the current implementation, the
training corpus is one-to-one, which gives our model
no opportunity to learn many-to-one alignments.
We are pursuing methods to create an extended
algorithm that can handle many-to-one alignments.
This would involve training from an initial align-
ment that allows for many-to-one links, such as one
of the IBM models. Features that are related to
multiple links should be added to our set of feature
types, to guide intelligent placement of such links.
Adam Lopez, Michael Nossal, Rebecca Hwa, and Philip
Resnik. 2002. Word-level alignment for multilingual
resource acquisition. In Proceedings of the Workshop
on Linguistic Knowledge Acquisition and Representa-
tion: Bootstrapping Annotated Language Data.
</bodyText>
<sectionHeader confidence="0.922967" genericHeader="conclusions">
8 Conclusion
</sectionHeader>
<bodyText confidence="0.999993666666667">
We have presented a simple, flexible, statistical
model for computing the probability of an alignment
given a sentence pair. This model allows easy in-
tegration of context-specific features. Our experi-
ments show that this model can be an effective tool
for improving an existing word alignment.
</bodyText>
<sectionHeader confidence="0.99921" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999896375">
Hiyan Alshawi, Srinivas Bangalore, and Shona Douglas.
2000. Learning dependency translation models as col-
lections of finite state head transducers. Computa-
tional Linguistics, 26(1):45–60.
Adam L. Berger, Stephen A. Della Pietra, and Vincent J.
Della Pietra. 1996. A maximum entropy approach to
natural language processing. Computational Linguis-
tics, 22(1):39–71.
P. F. Brown, V. S. A. Della Pietra, V. J. Della Pietra, and
R. L. Mercer. 1993. The mathematics of statistical
machine translation: Parameter estimation. Computa-
tional Linguistics, 19(2):263–312.
Jaime Carbonell, Katharina Probst, Erik Peterson, Chris-
tian Monson, Alon Lavie, Ralf Brown, and Lori Levin.
2002. Automatic rule learning for resource-limited mt.
In Proceedings ofAMTA-02, pages 1–10.
Ted Dunning. 1993. Accurate methods for the statistics
of surprise and coincidence. Computational Linguis-
tics, 19(1):61–74, March.
Heidi J. Fox. 2002. Phrasal cohesion and statistical
machine translation. In Proceedings of EMNLP-02,
pages 304–311.
W.A. Gale and K.W. Church. 1991. Identifying word
correspondences in parallel texts. In Proceedings
of the 4th Speech and Natural Language Workshop,
pages 152–157. DARPA, Morgan Kaufmann.
Rebecca Hwa, Philip Resnik, Amy Weinberg, and Okan
Kolak. 2002. Evaluating translational correspondence
using annotation projection. In Proceeding ofACL-02,
pages 392–399.
Sue J. Ker and Jason S. Change. 1997. Aligning more
words with high precision for small bilingual cor-
pora. Computational Linguistics and Chinese Lan-
guage Processing, 2(2):63–96, August.
I. Dan Melamed. 1996. Automatic construction of clean
broad-coverage translation lexicons. In Proceedings
of the 2nd Conference of the Association for Machine
Translation in the Americas, pages 125–134, Mon-
treal.
I. Dan Melamed. 2000. Models of translational equiv-
alence among words. Computational Linguistics,
26(2):221–249, June.
Igor A. Mel’ˇcuk. 1987. Dependency syntax: theory and
practice. State University of New York Press, Albany.
Arul Menezes and Stephen D. Richardson. 2001. A best-
first alignment algorithm for automatic extraction of
transfer mappings from bilingual corpora. In Proceed-
ings of the Workshop on Data-Driven Machine Trans-
lation.
Franz J. Och and Hermann Ney. 2000. Improved sta-
tistical alignment models. In Proceedings of the 38th
Annual Meeting of the Association for Computational
Linguistics, pages 440–447, Hong Kong, China, Octo-
ber.
S. Vogel, H. Ney, and C. Tillmann. 1996. Hmm-based
word alignment in statistical translation. In Proceed-
ings of COLING-96, pages 836–841, Copenhagen,
Denmark, August.
Dekai Wu. 1997. Stochastic inversion transduction
grammars and bilingual parsing of parallel corpora.
Computational Linguistics, 23(3):374–403.
Kenji Yamada and Kevin Knight. 2001. A syntax-based
statistical translation model. In Meeting of the Associ-
ation for Computational Linguistics, pages 523–530.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.935669">
<title confidence="0.999607">A Probability Model to Improve Word Alignment</title>
<author confidence="0.999965">Cherry Lin</author>
<affiliation confidence="0.9999455">Department of Computing Science University of Alberta</affiliation>
<address confidence="0.994321">Edmonton, Alberta, Canada, T6G 2E8</address>
<abstract confidence="0.995122333333333">Word alignment plays a crucial role in statistical machine translation. Word-aligned corpora have been found to be an excellent source of translation-related knowledge. We present a statistical model for computing the probability of an alignment given a sentence pair. This model allows easy integration of context-specific features. Our experiments show that this model can be an effective tool for improving an existing word alignment.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Hiyan Alshawi</author>
<author>Srinivas Bangalore</author>
<author>Shona Douglas</author>
</authors>
<title>Learning dependency translation models as collections of finite state head transducers.</title>
<date>2000</date>
<journal>Computational Linguistics,</journal>
<volume>26</volume>
<issue>1</issue>
<contexts>
<context position="25002" citStr="Alshawi et al., 2000" startWordPosition="4312" endWordPosition="4315"> machine translation methods, which also employ modular features. Maximum entropy can be used to improve IBM-style translation probabilities by using features, such as improvements to P(f|e) in (Berger et al., 1996). By the same token we can use maximum entropy to improve our estimates of P(lk|eik, fjk, Ck). We are currently investigating maximum entropy as an alternative to our current feature model which assumes conditional independence among features. 6.2 Grammatical Constraints There have been many recent proposals to leverage syntactic data in word alignment. Methods such as (Wu, 1997), (Alshawi et al., 2000) and (Lopez et al., 2002) employ a synchronous parsing procedure to constrain a statistical alignment. The work done in (Yamada and Knight, 2001) measures statistics on operations that transform a parse tree from one language into another. 7 Future Work The alignment algorithm described here is incapable of creating alignments that are not one-to-one. The model we describe, however is not limited in the same manner. The model is currently capable of creating many-to-one alignments so long as the null probabilities of the words added on the “many” side are less than the probabilities of the lin</context>
</contexts>
<marker>Alshawi, Bangalore, Douglas, 2000</marker>
<rawString>Hiyan Alshawi, Srinivas Bangalore, and Shona Douglas. 2000. Learning dependency translation models as collections of finite state head transducers. Computational Linguistics, 26(1):45–60.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam L Berger</author>
<author>Stephen A Della Pietra</author>
<author>Vincent J Della Pietra</author>
</authors>
<title>A maximum entropy approach to natural language processing.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<volume>22</volume>
<issue>1</issue>
<contexts>
<context position="1126" citStr="Berger et al., 1996" startWordPosition="162" endWordPosition="165"> of context-specific features. Our experiments show that this model can be an effective tool for improving an existing word alignment. 1 Introduction Word alignments were first introduced as an intermediate result of statistical machine translation systems (Brown et al., 1993). Since their introduction, many researchers have become interested in word alignments as a knowledge source. For example, alignments can be used to learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure the strength of correlation between source and target words. Such measures can then be used to guide a constrained search to produce word alignments (Melamed, 2000). It has been shown that once a baseline alignment has been created, one can improve results by using a refined scoring metric that is based on the alignment. For example Melamed u</context>
<context position="24596" citStr="Berger et al., 1996" startWordPosition="4247" endWordPosition="4250"> must supply the model with a noisy initial alignment, while IBM can start from an unaligned corpus. In the IBM framework, when one needs the model to take new information into account, one must create an extended model which can base its parameters on the previous model. In our model, new information can be incorporated modularly by adding features. This makes our work similar to maximum entropy-based machine translation methods, which also employ modular features. Maximum entropy can be used to improve IBM-style translation probabilities by using features, such as improvements to P(f|e) in (Berger et al., 1996). By the same token we can use maximum entropy to improve our estimates of P(lk|eik, fjk, Ck). We are currently investigating maximum entropy as an alternative to our current feature model which assumes conditional independence among features. 6.2 Grammatical Constraints There have been many recent proposals to leverage syntactic data in word alignment. Methods such as (Wu, 1997), (Alshawi et al., 2000) and (Lopez et al., 2002) employ a synchronous parsing procedure to constrain a statistical alignment. The work done in (Yamada and Knight, 2001) measures statistics on operations that transform</context>
</contexts>
<marker>Berger, Pietra, Pietra, 1996</marker>
<rawString>Adam L. Berger, Stephen A. Della Pietra, and Vincent J. Della Pietra. 1996. A maximum entropy approach to natural language processing. Computational Linguistics, 22(1):39–71.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P F Brown</author>
<author>V S A Della Pietra</author>
<author>V J Della Pietra</author>
<author>R L Mercer</author>
</authors>
<title>The mathematics of statistical machine translation: Parameter estimation.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>2</issue>
<contexts>
<context position="783" citStr="Brown et al., 1993" startWordPosition="110" endWordPosition="113">colinc,lindek}@cs.ualberta.ca Abstract Word alignment plays a crucial role in statistical machine translation. Word-aligned corpora have been found to be an excellent source of translation-related knowledge. We present a statistical model for computing the probability of an alignment given a sentence pair. This model allows easy integration of context-specific features. Our experiments show that this model can be an effective tool for improving an existing word alignment. 1 Introduction Word alignments were first introduced as an intermediate result of statistical machine translation systems (Brown et al., 1993). Since their introduction, many researchers have become interested in word alignments as a knowledge source. For example, alignments can be used to learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure t</context>
<context position="16346" citStr="Brown et al., 1993" startWordPosition="2850" endWordPosition="2853">pling method used in training. 4.1 Initial Alignment We produce an initial alignment using the same algorithm described in Section 3, except we maximize summed 02 link scores (Gale and Church, 1991), rather than alignment probability. This produces a reasonable one-to-one word alignment that we can refine using our probability model. 4.2 Alignment Sampling Our use of the one-to-one constraint and the cohesion constraint precludes sampling directly from all possible alignments. These constraints tie words in such a way that the space of alignments cannot be enumerated as in IBM models 1 and 2 (Brown et al., 1993). Taking our lead from IBM models 3, 4 and 5, we will sample from the space of those highprobability alignments that do not violate our constraints, and then redistribute our probability mass among our sample. At each search state in our alignment algorithm, we consider a number of potential links, and select between them using a heuristic completion of the resulting state. Our sample S of possible alignments will be the most probable alignment, plus the greedy completions of the states visited during search. It is important to note that any sampling method that concentrates on complete, valid</context>
</contexts>
<marker>Brown, Pietra, Pietra, Mercer, 1993</marker>
<rawString>P. F. Brown, V. S. A. Della Pietra, V. J. Della Pietra, and R. L. Mercer. 1993. The mathematics of statistical machine translation: Parameter estimation. Computational Linguistics, 19(2):263–312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jaime Carbonell</author>
<author>Katharina Probst</author>
<author>Erik Peterson</author>
<author>Christian Monson</author>
<author>Alon Lavie</author>
<author>Ralf Brown</author>
<author>Lori Levin</author>
</authors>
<title>Automatic rule learning for resource-limited mt.</title>
<date>2002</date>
<booktitle>In Proceedings ofAMTA-02,</booktitle>
<pages>1--10</pages>
<contexts>
<context position="1014" citStr="Carbonell et al., 2002" startWordPosition="145" endWordPosition="149">ical model for computing the probability of an alignment given a sentence pair. This model allows easy integration of context-specific features. Our experiments show that this model can be an effective tool for improving an existing word alignment. 1 Introduction Word alignments were first introduced as an intermediate result of statistical machine translation systems (Brown et al., 1993). Since their introduction, many researchers have become interested in word alignments as a knowledge source. For example, alignments can be used to learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure the strength of correlation between source and target words. Such measures can then be used to guide a constrained search to produce word alignments (Melamed, 2000). It has been shown that once a baseline alignment has been created,</context>
</contexts>
<marker>Carbonell, Probst, Peterson, Monson, Lavie, Brown, Levin, 2002</marker>
<rawString>Jaime Carbonell, Katharina Probst, Erik Peterson, Christian Monson, Alon Lavie, Ralf Brown, and Lori Levin. 2002. Automatic rule learning for resource-limited mt. In Proceedings ofAMTA-02, pages 1–10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Dunning</author>
</authors>
<title>Accurate methods for the statistics of surprise and coincidence.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="1352" citStr="Dunning, 1993" startWordPosition="202" endWordPosition="203">hine translation systems (Brown et al., 1993). Since their introduction, many researchers have become interested in word alignments as a knowledge source. For example, alignments can be used to learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure the strength of correlation between source and target words. Such measures can then be used to guide a constrained search to produce word alignments (Melamed, 2000). It has been shown that once a baseline alignment has been created, one can improve results by using a refined scoring metric that is based on the alignment. For example Melamed uses competitive linking along with an explicit noise model in (Melamed, 2000) to produce a new scoring metric, which in turn creates better alignments. In this paper, we present a simple, flexible, statistical model that is de</context>
</contexts>
<marker>Dunning, 1993</marker>
<rawString>Ted Dunning. 1993. Accurate methods for the statistics of surprise and coincidence. Computational Linguistics, 19(1):61–74, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Heidi J Fox</author>
</authors>
<title>Phrasal cohesion and statistical machine translation.</title>
<date>2002</date>
<booktitle>In Proceedings of EMNLP-02,</booktitle>
<pages>304--311</pages>
<contexts>
<context position="10990" citStr="Fox, 2002" startWordPosition="1935" endWordPosition="1936">raints that are based on linguistic intuitions. pre� subj� det❑ det[] obj❑ 3.1 Constraints The reader will note that our alignment model as described above has very few factors to prevent undesirable alignments, such as having all French words align to the same English word. To guide the model to correct alignments, we employ two constraints to limit our search for the most probable alignment. The first constraint is the one-to-one constraint (Melamed, 2000): every word (except the null words eo and fo) participates in exactly one link. The second constraint, known as the cohesion constraint (Fox, 2002), uses the dependency tree (Mel’ˇcuk, 1987) of the English sentence to restrict possible link combinations. Given the dependency tree TE, the alignment can induce a dependency tree for F (Hwa et al., 2002). The cohesion constraint requires that this induced dependency tree does not have any crossing dependencies. The details about how the cohesion constraint is implemented are outside the scope of this paper.3 Here we will use a simple example to illustrate the effect of the constraint. Consider the partial alignment in Figure 2. When the system attempts to link of and de, the new link will in</context>
</contexts>
<marker>Fox, 2002</marker>
<rawString>Heidi J. Fox. 2002. Phrasal cohesion and statistical machine translation. In Proceedings of EMNLP-02, pages 304–311.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W A Gale</author>
<author>K W Church</author>
</authors>
<title>Identifying word correspondences in parallel texts.</title>
<date>1991</date>
<booktitle>In Proceedings of the 4th Speech and Natural Language Workshop,</booktitle>
<pages>152--157</pages>
<publisher>DARPA, Morgan Kaufmann.</publisher>
<contexts>
<context position="1308" citStr="Gale and Church, 1991" startWordPosition="192" endWordPosition="195">roduced as an intermediate result of statistical machine translation systems (Brown et al., 1993). Since their introduction, many researchers have become interested in word alignments as a knowledge source. For example, alignments can be used to learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure the strength of correlation between source and target words. Such measures can then be used to guide a constrained search to produce word alignments (Melamed, 2000). It has been shown that once a baseline alignment has been created, one can improve results by using a refined scoring metric that is based on the alignment. For example Melamed uses competitive linking along with an explicit noise model in (Melamed, 2000) to produce a new scoring metric, which in turn creates better alignments. In this paper, we present a si</context>
<context position="15925" citStr="Gale and Church, 1991" startWordPosition="2783" endWordPosition="2786">4 Training As was stated in Section 2, our probability model needs an initial alignment in order to create its probability tables. Furthermore, to avoid having our model learn mistakes and noise, it helps to train on a set of possible alignments for each sentence, rather than one Viterbi alignment. In the following subsections we describe the creation of the initial alignments used for our experiments, as well as our sampling method used in training. 4.1 Initial Alignment We produce an initial alignment using the same algorithm described in Section 3, except we maximize summed 02 link scores (Gale and Church, 1991), rather than alignment probability. This produces a reasonable one-to-one word alignment that we can refine using our probability model. 4.2 Alignment Sampling Our use of the one-to-one constraint and the cohesion constraint precludes sampling directly from all possible alignments. These constraints tie words in such a way that the space of alignments cannot be enumerated as in IBM models 1 and 2 (Brown et al., 1993). Taking our lead from IBM models 3, 4 and 5, we will sample from the space of those highprobability alignments that do not violate our constraints, and then redistribute our prob</context>
</contexts>
<marker>Gale, Church, 1991</marker>
<rawString>W.A. Gale and K.W. Church. 1991. Identifying word correspondences in parallel texts. In Proceedings of the 4th Speech and Natural Language Workshop, pages 152–157. DARPA, Morgan Kaufmann.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rebecca Hwa</author>
<author>Philip Resnik</author>
<author>Amy Weinberg</author>
<author>Okan Kolak</author>
</authors>
<title>Evaluating translational correspondence using annotation projection.</title>
<date>2002</date>
<booktitle>In Proceeding ofACL-02,</booktitle>
<pages>392--399</pages>
<contexts>
<context position="11195" citStr="Hwa et al., 2002" startWordPosition="1966" endWordPosition="1969">e alignments, such as having all French words align to the same English word. To guide the model to correct alignments, we employ two constraints to limit our search for the most probable alignment. The first constraint is the one-to-one constraint (Melamed, 2000): every word (except the null words eo and fo) participates in exactly one link. The second constraint, known as the cohesion constraint (Fox, 2002), uses the dependency tree (Mel’ˇcuk, 1987) of the English sentence to restrict possible link combinations. Given the dependency tree TE, the alignment can induce a dependency tree for F (Hwa et al., 2002). The cohesion constraint requires that this induced dependency tree does not have any crossing dependencies. The details about how the cohesion constraint is implemented are outside the scope of this paper.3 Here we will use a simple example to illustrate the effect of the constraint. Consider the partial alignment in Figure 2. When the system attempts to link of and de, the new link will induce the dotted dependency, which crosses a previously induced dependency between service and donn´ees. Therefore, of and de will not be linked. the status of the data service❑ l&apos; état du service de donnée</context>
</contexts>
<marker>Hwa, Resnik, Weinberg, Kolak, 2002</marker>
<rawString>Rebecca Hwa, Philip Resnik, Amy Weinberg, and Okan Kolak. 2002. Evaluating translational correspondence using annotation projection. In Proceeding ofACL-02, pages 392–399.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sue J Ker</author>
<author>Jason S Change</author>
</authors>
<title>Aligning more words with high precision for small bilingual corpora.</title>
<date>1997</date>
<booktitle>Computational Linguistics and Chinese Language Processing,</booktitle>
<volume>2</volume>
<issue>2</issue>
<contexts>
<context position="12532" citStr="Ker and Change, 1997" startWordPosition="2184" endWordPosition="2187">we use in our implementation of the probability model described in Section 2. The first feature 3The algorithm for checking the cohesion constraint is presented in a separate paper which is currently under review. theF]host❑ discovers❑all®he[devices❑ 111 211 311 411 511 611 111211 311 411 511 l&apos; hôteC-tepère❑tousdesloériphériques❑ thelhost❑ locate❑ all❑ the[] peripherals[] Figure 3: Feature Extraction Example type fta concerns surrounding links. It has been observed that words close to each other in the source language tend to remain close to each other in the translation (Vogel et al., 1996; Ker and Change, 1997). To capture this notion, for any word pair (ei, fj), if a link l(ei,, fj,) exists where i − 2 ≤ i&apos; ≤ i + 2 and j − 2 ≤ j&apos; ≤ j + 2, then we say that the feature fta(i−i&apos;, j−j&apos;, ei,) is active for this context. We refer to these as adjacency features. The second feature type ftd uses the English parse tree to capture regularities among grammatical relations between languages. For example, when dealing with French and English, the location of the determiner with respect to its governor4 is never swapped during translation, while the location of adjectives is swapped frequently. For any word pair</context>
</contexts>
<marker>Ker, Change, 1997</marker>
<rawString>Sue J. Ker and Jason S. Change. 1997. Aligning more words with high precision for small bilingual corpora. Computational Linguistics and Chinese Language Processing, 2(2):63–96, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Dan Melamed</author>
</authors>
<title>Automatic construction of clean broad-coverage translation lexicons.</title>
<date>1996</date>
<booktitle>In Proceedings of the 2nd Conference of the Association for Machine Translation in the Americas,</booktitle>
<pages>125--134</pages>
<location>Montreal.</location>
<contexts>
<context position="974" citStr="Melamed, 1996" startWordPosition="141" endWordPosition="142"> knowledge. We present a statistical model for computing the probability of an alignment given a sentence pair. This model allows easy integration of context-specific features. Our experiments show that this model can be an effective tool for improving an existing word alignment. 1 Introduction Word alignments were first introduced as an intermediate result of statistical machine translation systems (Brown et al., 1993). Since their introduction, many researchers have become interested in word alignments as a knowledge source. For example, alignments can be used to learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure the strength of correlation between source and target words. Such measures can then be used to guide a constrained search to produce word alignments (Melamed, 2000). It has been shown that onc</context>
</contexts>
<marker>Melamed, 1996</marker>
<rawString>I. Dan Melamed. 1996. Automatic construction of clean broad-coverage translation lexicons. In Proceedings of the 2nd Conference of the Association for Machine Translation in the Americas, pages 125–134, Montreal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Dan Melamed</author>
</authors>
<title>Models of translational equivalence among words.</title>
<date>2000</date>
<journal>Computational Linguistics,</journal>
<volume>26</volume>
<issue>2</issue>
<contexts>
<context position="1546" citStr="Melamed, 2000" startWordPosition="236" endWordPosition="237">learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure the strength of correlation between source and target words. Such measures can then be used to guide a constrained search to produce word alignments (Melamed, 2000). It has been shown that once a baseline alignment has been created, one can improve results by using a refined scoring metric that is based on the alignment. For example Melamed uses competitive linking along with an explicit noise model in (Melamed, 2000) to produce a new scoring metric, which in turn creates better alignments. In this paper, we present a simple, flexible, statistical model that is designed to capture the information present in a baseline alignment. This model allows us to compute the probability of an alignment for a given sentence pair. It also allows for the easy incorpor</context>
<context position="4741" citStr="Melamed, 2000" startWordPosition="811" endWordPosition="812">as artifacts of which English words generated which French words. Our model does not state that one sentence generates the other. Instead it takes both sentences as given, and uses the sentences to determine an alignment. An alignment A consists of t links {l1, l2, ... , lt}, where each lk = l(eik, fjk) for some ik and jk. We will refer to consecutive subsets of A as lji = {li, li+1, ... , lj}. Given this notation, P(A|E, F) can be decomposed as follows: Here P(lk|eik, fjk) is link probability given a cooccurrence of the two words, which is similar in spirit to Melamed’s explicit noise model (Melamed, 2000). This term depends only on the words involved directly in the link. The ratio P (Ck|lk) P(Ck|eik ,fjk ) modifies the link probability, providing contextsensitive information. Up until this point, we have made no simplifying assumptions in our derivation. Unfortunately, Ck = {E, F, lk−1 1 } is too complex to estimate context probabilities directly. Suppose FTk is a set of context-related features such that P(lk|Ck) can be approximated by P(lk|eik, fjk, FTk). Let C0k = {eik, fjk}∪FTk. P(lk|C0k) can then be decomposed using the same derivation as above. k|lk) P(lk|C0 k) = P(lk|eik, fjk) × P (C0 </context>
<context position="10842" citStr="Melamed, 2000" startWordPosition="1911" endWordPosition="1912">ithm consists of a pair of sentences E and F, and the dependency tree TE for E. TE allows us to make use of e❑�❑ a❑ b❑ a❑ AJ u❑ v❑ v❑ features and constraints that are based on linguistic intuitions. pre� subj� det❑ det[] obj❑ 3.1 Constraints The reader will note that our alignment model as described above has very few factors to prevent undesirable alignments, such as having all French words align to the same English word. To guide the model to correct alignments, we employ two constraints to limit our search for the most probable alignment. The first constraint is the one-to-one constraint (Melamed, 2000): every word (except the null words eo and fo) participates in exactly one link. The second constraint, known as the cohesion constraint (Fox, 2002), uses the dependency tree (Mel’ˇcuk, 1987) of the English sentence to restrict possible link combinations. Given the dependency tree TE, the alignment can induce a dependency tree for F (Hwa et al., 2002). The cohesion constraint requires that this induced dependency tree does not have any crossing dependencies. The details about how the cohesion constraint is implemented are outside the scope of this paper.3 Here we will use a simple example to i</context>
<context position="22537" citStr="Melamed, 2000" startWordPosition="3906" endWordPosition="3907">Model 1 refinement for three iterations and Table 4: P(l|e, f) vs. P(f|e) Algorithm Prec Rec AER initial (02) 88.9 84.6 13.1 P(l|e, f) model 93.7 84.8 10.5 P(f|e) model 89.2 83.0 13.7 recorded the best results that it achieved. It is clear from Table 4 that refining our initial 02 alignment using IBM’s Model 1 is less effective than using our model in the same manner. In fact, the Model 1 refinement receives a lower score than our initial alignment. 6 Related Work 6.1 Probability models When viewed with no features, our probability model is most similar to the explicit noise model defined in (Melamed, 2000). In fact, Melamed defines a probability distribution P(links(u, v)|cooc(u, v), A+, A−) which appears to make our work redundant. However, this distribution refers to the probability that two word types u and v are linked links(u, v) times in the entire corpus. Our distribution P(l|e, f) refers to the probability of linking a specific co-occurrence of the word tokens e and f. In Melamed’s work, these probabilities are used to compute a score based on a probability ratio. In our work, we use the probabilities directly. By far the most prominent probability models in machine translation are the </context>
</contexts>
<marker>Melamed, 2000</marker>
<rawString>I. Dan Melamed. 2000. Models of translational equivalence among words. Computational Linguistics, 26(2):221–249, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Igor A Mel’ˇcuk</author>
</authors>
<title>Dependency syntax: theory and practice.</title>
<date>1987</date>
<publisher>State University of New York Press,</publisher>
<location>Albany.</location>
<marker>Mel’ˇcuk, 1987</marker>
<rawString>Igor A. Mel’ˇcuk. 1987. Dependency syntax: theory and practice. State University of New York Press, Albany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Arul Menezes</author>
<author>Stephen D Richardson</author>
</authors>
<title>A bestfirst alignment algorithm for automatic extraction of transfer mappings from bilingual corpora.</title>
<date>2001</date>
<booktitle>In Proceedings of the Workshop on Data-Driven Machine Translation.</booktitle>
<contexts>
<context position="1045" citStr="Menezes and Richardson, 2001" startWordPosition="150" endWordPosition="153"> the probability of an alignment given a sentence pair. This model allows easy integration of context-specific features. Our experiments show that this model can be an effective tool for improving an existing word alignment. 1 Introduction Word alignments were first introduced as an intermediate result of statistical machine translation systems (Brown et al., 1993). Since their introduction, many researchers have become interested in word alignments as a knowledge source. For example, alignments can be used to learn translation lexicons (Melamed, 1996), transfer rules (Carbonell et al., 2002; Menezes and Richardson, 2001), and classifiers to find safe sentence segmentation points (Berger et al., 1996). In addition to the IBM models, researchers have proposed a number of alternative alignment methods. These methods often involve using a statistic such as φ2 (Gale and Church, 1991) or the log likelihood ratio (Dunning, 1993) to create a score to measure the strength of correlation between source and target words. Such measures can then be used to guide a constrained search to produce word alignments (Melamed, 2000). It has been shown that once a baseline alignment has been created, one can improve results by usi</context>
</contexts>
<marker>Menezes, Richardson, 2001</marker>
<rawString>Arul Menezes and Stephen D. Richardson. 2001. A bestfirst alignment algorithm for automatic extraction of transfer mappings from bilingual corpora. In Proceedings of the Workshop on Data-Driven Machine Translation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Franz J Och</author>
<author>Hermann Ney</author>
</authors>
<title>Improved statistical alignment models.</title>
<date>2000</date>
<booktitle>In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>440--447</pages>
<location>Hong Kong, China,</location>
<contexts>
<context position="17491" citStr="Och and Ney, 2000" startWordPosition="3048" endWordPosition="3051">ant to note that any sampling method that concentrates on complete, valid and high probability alignments will accomplish the same task. When collecting the statistics needed to calculate P(AjE, F) from our initial 02 alignment, we give each s E S a uniform weight. This is reasonable, as we have no probability estimates at this point. When training from the alignments produced by our model, we normalize P(sjE, F) so that &amp;∈S P(sjE, F) = 1. We then count links and features in S according to these normalized probabilities. 5 Experimental Results We adopted the same evaluation methodology as in (Och and Ney, 2000), which compared alignment outputs with manually aligned sentences. Och and Ney classify manual alignments into two categories: Sure (S) and Possible (P) (SCP). They defined the following metrics to evaluate an alignment A: recall = precision = |A∩P | |P | alignment error rate (AER) = |A∩S|+|A∩P| |S|+|P| We trained our alignment program with the same 50K pairs of sentences as (Och and Ney, 2000) and tested it on the same 500 manually aligned sentences. Both the training and testing sentences are from the Hansard corpus. We parsed the training |A∩S| |S| Table 2: Comparison with (Och and Ney, 20</context>
<context position="19060" citStr="Och and Ney, 2000" startWordPosition="3315" endWordPosition="3318">.7 and testing corpora with Minipar.5 We then ran the training procedure in Section 4 for three iterations. We conducted three experiments using this methodology. The goal of the first experiment is to compare the algorithm in Section 3 to a state-of-theart alignment system. The second will determine the contributions of the features. The third experiment aims to keep all factors constant except for the model, in an attempt to determine its performance when compared to an obvious alternative. 5.1 Comparison to state-of-the-art Table 2 compares the results of our algorithm with the results in (Och and Ney, 2000), where an HMM model is used to bootstrap IBM Model 4. The rows IBM-4 F→E and IBM-4 E→F are the results obtained by IBM Model 4 when treating French as the source and English as the target or vice versa. The row IBM-4 Intersect shows the results obtained by taking the intersection of the alignments produced by IBM-4 E→F and IBM-4 F→E. The row IBM-4 Refined shows results obtained by refining the intersection of alignments in order to increase recall. Our algorithm achieved over 44% relative error reduction when compared with IBM-4 used in either direction and a 25% relative error rate reduction</context>
</contexts>
<marker>Och, Ney, 2000</marker>
<rawString>Franz J. Och and Hermann Ney. 2000. Improved statistical alignment models. In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics, pages 440–447, Hong Kong, China, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Vogel</author>
<author>H Ney</author>
<author>C Tillmann</author>
</authors>
<title>Hmm-based word alignment in statistical translation.</title>
<date>1996</date>
<booktitle>In Proceedings of COLING-96,</booktitle>
<pages>836--841</pages>
<location>Copenhagen, Denmark,</location>
<contexts>
<context position="12509" citStr="Vogel et al., 1996" startWordPosition="2180" endWordPosition="2183">es of features that we use in our implementation of the probability model described in Section 2. The first feature 3The algorithm for checking the cohesion constraint is presented in a separate paper which is currently under review. theF]host❑ discovers❑all®he[devices❑ 111 211 311 411 511 611 111211 311 411 511 l&apos; hôteC-tepère❑tousdesloériphériques❑ thelhost❑ locate❑ all❑ the[] peripherals[] Figure 3: Feature Extraction Example type fta concerns surrounding links. It has been observed that words close to each other in the source language tend to remain close to each other in the translation (Vogel et al., 1996; Ker and Change, 1997). To capture this notion, for any word pair (ei, fj), if a link l(ei,, fj,) exists where i − 2 ≤ i&apos; ≤ i + 2 and j − 2 ≤ j&apos; ≤ j + 2, then we say that the feature fta(i−i&apos;, j−j&apos;, ei,) is active for this context. We refer to these as adjacency features. The second feature type ftd uses the English parse tree to capture regularities among grammatical relations between languages. For example, when dealing with French and English, the location of the determiner with respect to its governor4 is never swapped during translation, while the location of adjectives is swapped freque</context>
</contexts>
<marker>Vogel, Ney, Tillmann, 1996</marker>
<rawString>S. Vogel, H. Ney, and C. Tillmann. 1996. Hmm-based word alignment in statistical translation. In Proceedings of COLING-96, pages 836–841, Copenhagen, Denmark, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekai Wu</author>
</authors>
<title>Stochastic inversion transduction grammars and bilingual parsing of parallel corpora.</title>
<date>1997</date>
<journal>Computational Linguistics,</journal>
<volume>23</volume>
<issue>3</issue>
<contexts>
<context position="24978" citStr="Wu, 1997" startWordPosition="4310" endWordPosition="4311">ntropy-based machine translation methods, which also employ modular features. Maximum entropy can be used to improve IBM-style translation probabilities by using features, such as improvements to P(f|e) in (Berger et al., 1996). By the same token we can use maximum entropy to improve our estimates of P(lk|eik, fjk, Ck). We are currently investigating maximum entropy as an alternative to our current feature model which assumes conditional independence among features. 6.2 Grammatical Constraints There have been many recent proposals to leverage syntactic data in word alignment. Methods such as (Wu, 1997), (Alshawi et al., 2000) and (Lopez et al., 2002) employ a synchronous parsing procedure to constrain a statistical alignment. The work done in (Yamada and Knight, 2001) measures statistics on operations that transform a parse tree from one language into another. 7 Future Work The alignment algorithm described here is incapable of creating alignments that are not one-to-one. The model we describe, however is not limited in the same manner. The model is currently capable of creating many-to-one alignments so long as the null probabilities of the words added on the “many” side are less than the </context>
</contexts>
<marker>Wu, 1997</marker>
<rawString>Dekai Wu. 1997. Stochastic inversion transduction grammars and bilingual parsing of parallel corpora. Computational Linguistics, 23(3):374–403.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenji Yamada</author>
<author>Kevin Knight</author>
</authors>
<title>A syntax-based statistical translation model.</title>
<date>2001</date>
<booktitle>In Meeting of the Association for Computational Linguistics,</booktitle>
<pages>523--530</pages>
<contexts>
<context position="25147" citStr="Yamada and Knight, 2001" startWordPosition="4335" endWordPosition="4338">y using features, such as improvements to P(f|e) in (Berger et al., 1996). By the same token we can use maximum entropy to improve our estimates of P(lk|eik, fjk, Ck). We are currently investigating maximum entropy as an alternative to our current feature model which assumes conditional independence among features. 6.2 Grammatical Constraints There have been many recent proposals to leverage syntactic data in word alignment. Methods such as (Wu, 1997), (Alshawi et al., 2000) and (Lopez et al., 2002) employ a synchronous parsing procedure to constrain a statistical alignment. The work done in (Yamada and Knight, 2001) measures statistics on operations that transform a parse tree from one language into another. 7 Future Work The alignment algorithm described here is incapable of creating alignments that are not one-to-one. The model we describe, however is not limited in the same manner. The model is currently capable of creating many-to-one alignments so long as the null probabilities of the words added on the “many” side are less than the probabilities of the links that would be created. Under the current implementation, the training corpus is one-to-one, which gives our model no opportunity to learn many</context>
</contexts>
<marker>Yamada, Knight, 2001</marker>
<rawString>Kenji Yamada and Kevin Knight. 2001. A syntax-based statistical translation model. In Meeting of the Association for Computational Linguistics, pages 523–530.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>