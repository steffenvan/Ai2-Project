<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.007581">
<title confidence="0.988535">
Automating XML markup of text documents
</title>
<author confidence="0.990662">
Shazia Akhtar
</author>
<affiliation confidence="0.9926985">
Department of Computer
Science, University College
</affiliation>
<address confidence="0.9448025">
Dublin, Belfield, Dublin 4,
Ireland
</address>
<email confidence="0.6260455">
Shazia.Akhtar@ucd.i
e
</email>
<author confidence="0.771566">
Ronan G. Reilly
</author>
<affiliation confidence="0.930668">
Department of Computer
Science, National University
</affiliation>
<address confidence="0.590185">
of Ireland, Maynooth, Ireland
</address>
<email confidence="0.988282">
Ronan.Reilly@may.ie
</email>
<author confidence="0.991482">
John Dunnion
</author>
<affiliation confidence="0.9928375">
Department of Computer
Science, University College
</affiliation>
<address confidence="0.949575">
Dublin, Belfield, Dublin 4,
Ireland
</address>
<email confidence="0.997181">
John.Dunnion@ucd.ie
</email>
<sectionHeader confidence="0.996607" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999746176470588">
We present a novel system for automatically
marking up text documents into XML and
discuss the benefits of XML markup for intel-
ligent information retrieval. The system uses
the Self-Organizing Map (SOM) algorithm to
arrange XML marked-up documents on a two-
dimensional map so that similar documents
appear closer to each other. It then employs
an inductive learning algorithm C5 to auto-
matically extract and apply markup rules from
the nearest SOM neighbours of an unmarked
document. The system is designed to be adap-
tive, so that once a document is marked-up; its
behaviour is modified to improve accuracy.
The automatically marked-up documents are
again categorized on the Self-Organizing
Map.
</bodyText>
<sectionHeader confidence="0.99673" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999845944444444">
Vast amounts of information are now available in elec-
tronic form to which accurate and speedy access is get-
ting more difficult. The increasing quantity of
information has created a need for intelligent manage-
ment and retrieval techniques. Many of the existing in-
formation retrieval systems, which deal with large
volumes of documents, have poor retrieval performance
because these systems can use a little knowledge in the
documents. By adopting XML as a standard document
format, content-based queries can be performed by ex-
ploiting the XML structure of the documents. In addi-
tion, specifically tagged sections of the documents can
be searched rather than the entire document, thus pro-
viding fast and effective retrieval. Furthermore, using
the logical structure of a document created by
XML markup, different types of operations can be per-
formed, for example, the same content can be reused in
a variety of formats, specific elements can be extracted
from the XML documents and full documents satisfying
certain structural conditions can be retrieved from the
database. These and other advantages of using XML
make it a complete solution for content management
and intelligent information retrieval. However, despite
the advantages and the popularity of XML, we still do
not have large repositories of XML because automatic
XML markup is still a challenge and the process of
manually marking up XML documents is complex, te-
dious and expensive. Most of the existing automatic
markup systems are limited to certain domains and do
not perform general automatic markup. In addressing
the need for more general automatic markup of text
documents, we present a system with a novel hybrid
architecture. The system uses the techniques of Self-
Organizing Map (SOM) algorithm (Kohonen, 1997) and
an inductive learning algorithm, C5 (Quinlan, 1993,
2000).
</bodyText>
<sectionHeader confidence="0.874214" genericHeader="method">
2 System overview
</sectionHeader>
<bodyText confidence="0.9997437">
The system has two phases. The first phase of the sys-
tem deals with the formation of a map of valid XML (a
valid XML document is one which is well-formed and
which has been validated against a DTD) marked-up
documents using the SOM algorithm. The second phase
deals with the automatic markup of new (unmarked)
document according to the markup of existing docu-
ments. Once a document is marked-up, the system’s
behaviour is modified to improve accuracy. These two
phases of the system are currently implemented inde-
pendently but will be combined to form an integrated
hybrid system. This paper focuses on phase 2 of the
system.
learn classifiers. These classifiers are later used to
markup the segments of text as XML elements.
Phase 2 of the system is implemented as an independ-
ent automatic XML markup system, which is Figure 1.
It comprises two main modules – a Rule extraction
module and a Markup module. The rule extraction
module deals with the extraction of rules using an in-
ductive learning approach (Mitchell, 1997). Firstly,
during a preliminary phase, training examples are col-
lected from the valid XML marked-up documents.
These documents should be from a specific domain and
their markup should be valid and conformant to the
rules of a single Document Type Definition (DTD). An
XML document consists of a strictly nested hierarchy of
elements with a root element. Only elements having
text nodes are considered as markup elements for our
system.
</bodyText>
<figureCaption confidence="0.996056">
Figure 3: Automatic XML markup system
</figureCaption>
<bodyText confidence="0.999985875">
The markup of elements nested within other elements
can be accomplished by using the DTD. Each training
instance corresponds to an element containing a text
node from the collection of marked-up documents. The
text enclosed between the start and end tags of all occur-
rences of each element is encoded using a fixed-width
feature vector. We have used 31 features in our ex-
periments. The set of feature vectors is used by the sys-
tem to learn classifiers. An inductive learning algorithm
processes these encoded instances to develop classifiers
for elements having specific tag names. These classifi-
ers segment the text of an unmarked document into dif-
ferent elements of the resulting XML marked-up
document. In our system, the C5 program is used to
The second module deals with the creation of XML
markup. The unmarked document to be used for this
process should be from the same domain and should
have a similar structure to the documents, which were
used for learning the rules. To accomplish the markup,
the unmarked document is segmented into pieces of text
using a variety of heuristics. These heuristics are de-
rived from the set of training examples. By using the
DTD conformant to the document set used for learning
the rules and by using the text segments stored for each
element, a hierarchical structure of the document is en-
coded and the marked-up document is produced.
The markup produced by the system can be validated
according to a DTD. However, in order to check the
accuracy of the markup, we have to examine it manually
and compare it with the original source (if available) as
XML processors can only validate the syntax of the
markup, and not its semantics.
</bodyText>
<sectionHeader confidence="0.997826" genericHeader="evaluation">
3 Performance
</sectionHeader>
<bodyText confidence="0.99992575">
We used documents from a number of different domains
for our experiments, including letters from the Mac-
Greevy archive (Schreibman, 1998, 2000), a database of
employee records, Shakespearean plays (Bosak, 1998),
poems from an early American encoding project, and
scientific journal articles (Openly Informatics, Inc.,
1999-200). Figure 2 shows a part of a scene from “A
Midsummer Night&apos;s Dream” as an example of XML
markup automatically produced by our system. The
underlined text was not marked up by our system.
We have also evaluated our system with some of the
document sets. For evaluation, we considered the ele-
ments representing the content of the document, and a
human expert is required to evaluate this. We have used
three performance measures in evaluating the automatic
markup process. These measures are
</bodyText>
<listItem confidence="0.999314625">
• The percentage of markup elements determined
correctly by the system
• The percentage of markup elements determined
incorrectly by the system
• The percentage of markup elements not deter-
mined by the system (i.e. text nodes for these
markup elements are not present in the marked-
up document produced by the system)
</listItem>
<bodyText confidence="0.999951461538461">
The elements of 10 valid XML marked-up letters from
the MacGreevy archive were used to learn C5 rules and
text segmentation heuristics. By applying these rules
and heuristics, 55 elements of five unmarked letters
from the MacGreevy archive were automatically
marked up by the system with 96% accuracy (we use
the term “accuracy” here to mean the number of
marked-up elements correctly determined by the sys-
tem). Similarly, elements of 5 valid XML marked-up
Shakespeare plays were used as training examples and
13882 elements of four Shakespearean plays were
automatically marked-up by the system. In this case the
accuracy rate was 92%.
</bodyText>
<figure confidence="0.831538888888889">
...
&lt;SCENE&gt;
&lt;TITLE&gt; SCENE I. Athens. The
palace of THESEUS. &lt;/TITLE&gt;
&lt;STAGEDIR&gt; Enter THESEUS,
HIPPOLYTA, PHILOSTRATE, and
Attendants&lt;/STAGEDIR&gt;
&lt;SPEECH&gt;
&lt;SPEAKER&gt;THESEUS&lt;/SPEAKER&gt;
</figure>
<figureCaption confidence="0.9436948">
&lt;LINE&gt;Now, fair Hippolyta, our
nuptial hour&lt;/LINE&gt;
&lt;LINE&gt;Draws on a pace; four
happy days bring in&lt;/LINE&gt;
&lt;LINE&gt;Another moon: but, O, me
thinks, how slow&lt;/LINE&gt;
&lt;LINE&gt;This old moon wanes!
she lingers my desires,&lt;/LINE&gt;
&lt;LINE&gt;Like to a step-dame or
a dowager&lt;/LINE&gt;
</figureCaption>
<bodyText confidence="0.958437625">
&lt;LINE&gt;Long withering out a
young man revenue. &lt;/LINE&gt;
&lt;/SPEECH&gt;
&lt;SPEECH&gt;
&lt;SPEAKER&gt;HIPPOLYTA&lt;/SPEAKER&gt;
&lt;LINE&gt;Four days will quickly
steep themselves in night;
&lt;/LINE&gt;
&lt;LINE&gt;Four nights will quickly
dream away the time; &lt;/LINE&gt;
&lt;LINE&gt;And then the moon, like
to a silver bow&lt;/LINE&gt;
&lt;LINE&gt;New-bent in heaven,
shall behold the night&lt;/LINE&gt;
&lt;LINE&gt;Of our solemnities
&lt;/LINE&gt;
</bodyText>
<figure confidence="0.7607655">
&lt;/SPEECH&gt;
...
</figure>
<figureCaption confidence="0.816108">
Figure 2. A section taken from “A Midsummer Night’s
Dream” marked up by our system
</figureCaption>
<sectionHeader confidence="0.998994" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999958714285714">
We have described a system with a novel hybrid archi-
tecture that uses an inductive learning approach to per-
form automatic markup of text documents. The system
automatically marks up documents by capturing markup
information from the neighbouring documents on a
Self-Organizing Map. Such marked-up documents can
be used for management and retrieval purposes accord-
ing to the structural information they contain. The re-
sults from our experiments demonstrate that our
approach is practical and that our system provides a
novel approach for automatically marking up text
documents in XML. The functionality of our system
makes it a useful tool for electronic information ex-
change.
</bodyText>
<sectionHeader confidence="0.996364" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999619333333333">
The support of the Informatics Research Initiative of
Enterprise Ireland is gratefully acknowledged. The work
was funded under grant PRP/00/INF/06.
</bodyText>
<sectionHeader confidence="0.999412" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999597352941176">
Bosak, J. (1998). Shakespeare 2.00.
[http://metalab.unc.edu/bosak/xml/eg/shaks200.zip]
Kohonen, T. (1997). Self-Organizing Maps. Springer
Series in Information Science, Berlin, Heidelberg, New
York.
Mitchell, T. (1997). Machine Learning. McGraw Hill.
Quinlan, J. R. (1993). C4.5: Programs For Machine
Learning. Morgan Kauffman Publishers, San Mateo,
Calif.
Quinlan, J. R. (2000). Data Mining Tools See5 and C5.0.
[http://www.rulequest.com/see5-info.html]
Openly Informatics, Inc. (1999-2000).
[http://www.openly.com/efirst]
Schreibman, S. (1998). The MacGreevy Archive.
[http://www.ucd.ie/~cosei/archive.htm]
Schreibman, S. (2000). The MacGreevy Archive.
[http://jafferson.village.Virginia.edu/macgreevy]
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.028406">
<title confidence="0.999743">Automating XML markup of text documents</title>
<author confidence="0.988319">Shazia</author>
<affiliation confidence="0.999339">Department of Science, University</affiliation>
<address confidence="0.8352475">Dublin, Belfield, Dublin Ireland</address>
<author confidence="0.551927">Shazia Akhtarucd i</author>
<email confidence="0.617886">e</email>
<author confidence="0.956099">G Ronan</author>
<affiliation confidence="0.8877915">Department of Science, National</affiliation>
<address confidence="0.880264">of Ireland, Maynooth, Ireland</address>
<title confidence="0.385091">Ronan.Reilly@may.ie</title>
<author confidence="0.817355">John</author>
<affiliation confidence="0.996415">Department of Science, University</affiliation>
<address confidence="0.8583315">Dublin, Belfield, Dublin Ireland</address>
<email confidence="0.810017">John.Dunnion@ucd.ie</email>
<abstract confidence="0.982743176470588">We present a novel system for automatically marking up text documents into XML and discuss the benefits of XML markup for intelligent information retrieval. The system uses the Self-Organizing Map (SOM) algorithm to arrange XML marked-up documents on a twodimensional map so that similar documents appear closer to each other. It then employs an inductive learning algorithm C5 to automatically extract and apply markup rules from the nearest SOM neighbours of an unmarked document. The system is designed to be adaptive, so that once a document is marked-up; its behaviour is modified to improve accuracy. The automatically marked-up documents are again categorized on the Self-Organizing</abstract>
<intro confidence="0.658823">Map.</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Bosak</author>
</authors>
<date>1998</date>
<note>Shakespeare 2.00. [http://metalab.unc.edu/bosak/xml/eg/shaks200.zip]</note>
<contexts>
<context position="6380" citStr="Bosak, 1998" startWordPosition="1024" endWordPosition="1025"> hierarchical structure of the document is encoded and the marked-up document is produced. The markup produced by the system can be validated according to a DTD. However, in order to check the accuracy of the markup, we have to examine it manually and compare it with the original source (if available) as XML processors can only validate the syntax of the markup, and not its semantics. 3 Performance We used documents from a number of different domains for our experiments, including letters from the MacGreevy archive (Schreibman, 1998, 2000), a database of employee records, Shakespearean plays (Bosak, 1998), poems from an early American encoding project, and scientific journal articles (Openly Informatics, Inc., 1999-200). Figure 2 shows a part of a scene from “A Midsummer Night&apos;s Dream” as an example of XML markup automatically produced by our system. The underlined text was not marked up by our system. We have also evaluated our system with some of the document sets. For evaluation, we considered the elements representing the content of the document, and a human expert is required to evaluate this. We have used three performance measures in evaluating the automatic markup process. These measur</context>
</contexts>
<marker>Bosak, 1998</marker>
<rawString>Bosak, J. (1998). Shakespeare 2.00. [http://metalab.unc.edu/bosak/xml/eg/shaks200.zip]</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Kohonen</author>
</authors>
<title>Self-Organizing Maps.</title>
<date>1997</date>
<booktitle>Series in Information Science,</booktitle>
<publisher>Springer</publisher>
<location>Berlin, Heidelberg, New York.</location>
<contexts>
<context position="2902" citStr="Kohonen, 1997" startWordPosition="442" endWordPosition="443">ntelligent information retrieval. However, despite the advantages and the popularity of XML, we still do not have large repositories of XML because automatic XML markup is still a challenge and the process of manually marking up XML documents is complex, tedious and expensive. Most of the existing automatic markup systems are limited to certain domains and do not perform general automatic markup. In addressing the need for more general automatic markup of text documents, we present a system with a novel hybrid architecture. The system uses the techniques of SelfOrganizing Map (SOM) algorithm (Kohonen, 1997) and an inductive learning algorithm, C5 (Quinlan, 1993, 2000). 2 System overview The system has two phases. The first phase of the system deals with the formation of a map of valid XML (a valid XML document is one which is well-formed and which has been validated against a DTD) marked-up documents using the SOM algorithm. The second phase deals with the automatic markup of new (unmarked) document according to the markup of existing documents. Once a document is marked-up, the system’s behaviour is modified to improve accuracy. These two phases of the system are currently implemented independe</context>
</contexts>
<marker>Kohonen, 1997</marker>
<rawString>Kohonen, T. (1997). Self-Organizing Maps. Springer Series in Information Science, Berlin, Heidelberg, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Mitchell</author>
</authors>
<title>Machine Learning.</title>
<date>1997</date>
<publisher>McGraw</publisher>
<location>San Mateo, Calif.</location>
<contexts>
<context position="4006" citStr="Mitchell, 1997" startWordPosition="629" endWordPosition="630">s behaviour is modified to improve accuracy. These two phases of the system are currently implemented independently but will be combined to form an integrated hybrid system. This paper focuses on phase 2 of the system. learn classifiers. These classifiers are later used to markup the segments of text as XML elements. Phase 2 of the system is implemented as an independent automatic XML markup system, which is Figure 1. It comprises two main modules – a Rule extraction module and a Markup module. The rule extraction module deals with the extraction of rules using an inductive learning approach (Mitchell, 1997). Firstly, during a preliminary phase, training examples are collected from the valid XML marked-up documents. These documents should be from a specific domain and their markup should be valid and conformant to the rules of a single Document Type Definition (DTD). An XML document consists of a strictly nested hierarchy of elements with a root element. Only elements having text nodes are considered as markup elements for our system. Figure 3: Automatic XML markup system The markup of elements nested within other elements can be accomplished by using the DTD. Each training instance corresponds t</context>
</contexts>
<marker>Mitchell, 1997</marker>
<rawString>Mitchell, T. (1997). Machine Learning. McGraw Hill. Quinlan, J. R. (1993). C4.5: Programs For Machine Learning. Morgan Kauffman Publishers, San Mateo, Calif.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J R Quinlan</author>
</authors>
<date>2000</date>
<booktitle>Data Mining Tools See5 and C5.0. [http://www.rulequest.com/see5-info.html]</booktitle>
<marker>Quinlan, 2000</marker>
<rawString>Quinlan, J. R. (2000). Data Mining Tools See5 and C5.0. [http://www.rulequest.com/see5-info.html]</rawString>
</citation>
<citation valid="false">
<date>1999</date>
<institution>Openly Informatics, Inc.</institution>
<note>[http://www.openly.com/efirst]</note>
<marker>1999</marker>
<rawString>Openly Informatics, Inc. (1999-2000). [http://www.openly.com/efirst]</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Schreibman</author>
</authors>
<title>The MacGreevy Archive.</title>
<date>1998</date>
<note>[http://www.ucd.ie/~cosei/archive.htm]</note>
<contexts>
<context position="6306" citStr="Schreibman, 1998" startWordPosition="1014" endWordPosition="1015">r learning the rules and by using the text segments stored for each element, a hierarchical structure of the document is encoded and the marked-up document is produced. The markup produced by the system can be validated according to a DTD. However, in order to check the accuracy of the markup, we have to examine it manually and compare it with the original source (if available) as XML processors can only validate the syntax of the markup, and not its semantics. 3 Performance We used documents from a number of different domains for our experiments, including letters from the MacGreevy archive (Schreibman, 1998, 2000), a database of employee records, Shakespearean plays (Bosak, 1998), poems from an early American encoding project, and scientific journal articles (Openly Informatics, Inc., 1999-200). Figure 2 shows a part of a scene from “A Midsummer Night&apos;s Dream” as an example of XML markup automatically produced by our system. The underlined text was not marked up by our system. We have also evaluated our system with some of the document sets. For evaluation, we considered the elements representing the content of the document, and a human expert is required to evaluate this. We have used three per</context>
</contexts>
<marker>Schreibman, 1998</marker>
<rawString>Schreibman, S. (1998). The MacGreevy Archive. [http://www.ucd.ie/~cosei/archive.htm]</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Schreibman</author>
</authors>
<title>The MacGreevy Archive.</title>
<date>2000</date>
<note>[http://jafferson.village.Virginia.edu/macgreevy]</note>
<marker>Schreibman, 2000</marker>
<rawString>Schreibman, S. (2000). The MacGreevy Archive. [http://jafferson.village.Virginia.edu/macgreevy]</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>