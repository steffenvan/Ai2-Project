<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.9974565">
Beyond Projectivity: Multilingual Evaluation
of Constraints and Measures on Non-Projective Structures
</title>
<author confidence="0.528946">
Jiˇr´ı Havelka
</author>
<affiliation confidence="0.46677">
Institute of Formal and Applied Linguistics
Charles University in Prague
</affiliation>
<address confidence="0.313189">
Czech Republic
</address>
<email confidence="0.986496">
havelka@ufal.mff.cuni.cz
</email>
<sectionHeader confidence="0.998516" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999855545454546">
Dependency analysis of natural language
has gained importance for its applicability
to NLP tasks. Non-projective structures
are common in dependency analysis, there-
fore we need fine-grained means of describ-
ing them, especially for the purposes of
machine-learning oriented approaches like
parsing. We present an evaluation on
twelve languages which explores several
constraints and measures on non-projective
structures. We pursue an edge-based ap-
proach concentrating on properties of in-
dividual edges as opposed to properties of
whole trees. In our evaluation, we include
previously unreported measures taking into
account levels of nodes in dependency trees.
Our empirical results corroborate theoreti-
cal results and show that an edge-based ap-
proach using levels of nodes provides an
accurate and at the same time expressive
means for capturing non-projective struc-
tures in natural language.
</bodyText>
<sectionHeader confidence="0.99963" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.885099577777778">
Dependency analysis of natural language has been
gaining an ever increasing interest thanks to its ap-
plicability in many tasks of NLP—a recent example
is the dependency parsing work of McDonald et al.
(2005), which introduces an approach based on the
search for maximum spanning trees, capable of han-
dling non-projective structures naturally.
The study of dependency structures occurring in
natural language can be approached from two sides:
by trying to delimit permissible dependency struc-
tures through formal constraints (for a recent review
paper, see Kuhlmann and Nivre (2006)), or by pro-
viding their linguistic description (see e.g. Vesel´a et
al. (2004) and Hajiˇcov´a et al. (2004) for a linguistic
analysis of non-projective constructions in Czech.1)
We think that it is worth bearing in mind that
neither syntactic structures in dependency tree-
banks, nor structures arising in machine-learning ap-
proaches, such as MST dependency parsing, need a
priori fall into any formal subclass of dependency
trees. We should therefore aim at formal means ca-
pable of describing all non-projective structures that
are both expressive and fine-grained enough to be
useful in statistical approaches, and at the same time
suitable for an adequate linguistic description.2
Holan et al. (1998) first defined an infinite hierar-
chy of classes of dependency trees, going from pro-
jective to unrestricted dependency trees, based on
the notion of gap degree for subtrees (cf. Section 3).
Holan et al. (2000) present linguistic considerations
concerning Czech and English with respect to this
hierarchy (cf. also Section 6).
In this paper, we consider all constraints and mea-
sures evaluated by Kuhlmann and Nivre (2006)—
with some minor variations, cf. Section 4.2. Ad-
1These two papers contain an error concerning an alternative
condition of projectivity, which is rectified in Havelka (2005).
2The importance of such means becomes more evident from
the asymptotically negligible proportion of projective trees to
all dependency trees; there are super-exponentially many unre-
stricted trees compared to exponentially many projective trees
on n nodes. Unrestricted dependency trees (i.e. labelled rooted
trees) and projective dependency trees are counted by sequences
A000169 and A006013 (offset 1), respectively, in the On-Line
Encyclopedia of Sequences (Sloane, 2007).
</bodyText>
<page confidence="0.961451">
608
</page>
<note confidence="0.925899">
Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 608–615,
Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics
</note>
<bodyText confidence="0.9112809375">
ditionally, we introduce several measures not con- Relation → models linguistic dependency, and so
sidered in their work. We also extend the empirical represents a directed, rooted tree on V. There are
basis from Czech and Danish to twelve languages, many ways of characterizing rooted trees, we give
which were made available in the CoNLL-X shared here a characterization via the properties of →: there
task on dependency parsing. is a root r ∈V such that r →∗ v for all v ∈V and there
In our evaluation, we do not address the issue of is a unique edge p → v for all v ∈ V, v =6 r, and no
what possible effects the annotations and/or conver- edge into r. Relation →∗ is the reflexive transitive
sions used when creating the data might have on closure of → and is usually called subordination.
non-projective structures in the different languages. For each node i we define its level as the length of
The newly considered measures have the first or the path r →∗ i; we denote it leveli. The symmetriza-
both of the following desiderata: they are based tion ↔ = → ∪ →−1 makes it possible to talk about
on properties of individual non-projective edges (cf. edges (pairs of nodes i, j such that i → j) without
Definition 3); and they take into account levels of explicitly specifying the parent (head; i here) and
nodes in dependency trees explicitly. None of the the child (dependent; j here); so → represents di-
constraints and measures in Kuhlmann and Nivre rected edges and ↔ undirected edges. To retain the
(2006) take into account levels of nodes explicitly. ability to talk about the direction of edges, we define
Level types of non-projective edges, introduced i if i → j j if i → j
by Havelka (2005), have both desiderata. They pro- Parenti↔ j = j if j → i and Childi↔ j = i if j → i.
vide an edge-based means of characterizing all non- To make the exposition clearer by avoiding overuse
projective structures; they also have some further in- of the symbol →, we introduce notation for rooted
teresting formal properties. subtrees not only for nodes, but also for edges:
We propose a novel, more detailed measure, level Subtreei = {v ∈ V  |i →∗ v}, Subtreei↔j = {v ∈ V |
signatures of non-projective edges, combining lev- Parenti↔ j →∗ v} (note that the subtree of an edge is
els of nodes with the partitioning of gaps of non- defined relative to its parent node). To be able to talk
projective edges into components. We derive a for- concisely about the total order on nodes �, we de-
mal property of these signatures that links them to fine open intervals whose endpoints need not be in
the constraint of well-nestedness, which is an exten- a prescribed order (i, j) = {v ∈ V  |min-&lt;{i, j} ≺ v ≺
sion of the result for level types (see also Havelka max_&lt;{i, j}}.
(2007b)). 3 Condition of projectivity
The paper is organized as follows: Section 2 con-
tains formal preliminaries; in Section 3 we review
the constraint of projectivity and define related no-
tions necessary in Section 4, where we define and
discuss all evaluated constraints and measures; Sec-
tion 5 describes our data and experimental setup;
empirical results are presented in Section 6.
Projectivity of a dependency tree can be character-
ized both through the properties of its subtrees and
through the properties of its edges.4
Definition 2 A dependency tree T = (V,→,�) is
projective if it satisfies the following equivalent con-
ditions:
2 Formal preliminaries
Here we provide basic definitions and notation used
in subsequent sections.
Definition 1 A dependency tree is a triple
(V,→,--&lt;), where V is a finite set of nodes, → a de-
pendency relation on V, and -&lt; a total order on V.3
</bodyText>
<equation confidence="0.550977666666667">
(Harper &amp; Hays)
i → j &amp; v ∈ (i, j) =⇒ v ∈ Subtreei ,
(Lecerf &amp; Ihm)
j ∈ Subtreei &amp; v ∈ (i, j) =⇒ v ∈ Subtreei ,
(Fitialov)
j1, j2 ∈ Subtreei &amp; v ∈ (j1, j2) =⇒ v ∈ Subtreei .
</equation>
<bodyText confidence="0.990738125">
3We adopt the following convention: nodes are drawn top- Otherwise T is non-projective.
down according to their increasing level, with nodes on the
same level being the same distance from the root; nodes are
drawn from left to right according to the total order on nodes;
edges are drawn as solid lines, paths as dotted curves.
4There are many other equivalent characterizations of pro-
jectivity, we give only three historically prominent ones.
609
It was Marcus (1965) who proved the equivalence
of the conditions in Definition 2, proposed in the
early 1960’s (we denote them by the names of those
to whom Marcus attributes their authorship).
We see that the antecedents of the projectiv-
ity conditions move from edge-focused to subtree-
focused (i.e. from talking about dependency to talk-
ing about subordination).
It is the condition of Fitialov that has been mostly
explored when studying so-called relaxations of pro-
jectivity. (The condition is usually worded as fol-
lows: A dependency tree is projective if the nodes
of all its subtrees constitute contiguous intervals in
the total order on nodes.)
However, we find the condition of Harper &amp; Hays
to be the most appealing from the linguistic point
of view because it gives prominence to the primary
notion of dependency edges over the derived notion
of subordination. We therefore use an edge-based
approach whenever we find it suitable.
To that end, we need the notion of a non-
projective edge and its gap.
Definition 3 For any edge i H j in a dependency
tree T we define its gap as follows
</bodyText>
<subsectionHeader confidence="0.510123">
GapiHj _ {v E V  |v E (i, j) &amp; v E/ SubtreeiHj} .
</subsectionHeader>
<bodyText confidence="0.999905769230769">
An edge with an empty gap is projective, an edge
whose gap is non-empty is non-projective.5
We see that non-projective are those edges i H j
for which there is a node v such that together they
violate the condition of Harper &amp; Hays; we group
all such nodes v into GapiHj, the gap of the non-
projective edge i H j.
The notion of gap is defined differently for sub-
trees of a dependency tree (Holan et al., 1998;
Bodirsky et al., 2005). There it is defined through
the nodes of the whole dependency tree not in the
considered subtree that intervene between its nodes
in the total order on nodes �.
</bodyText>
<sectionHeader confidence="0.9930725" genericHeader="method">
4 Relaxations of projectivity: evaluated
constraints and measures
</sectionHeader>
<bodyText confidence="0.930603153846154">
In this section we present all constraints and mea-
sures on dependency trees that we evaluate empir-
5In figures with sample configurations we adopt this con-
vention: for a non-projective edge, we draw all nodes in its gap
explicitly and assume that no node on any path crossing the span
of the edge lies in the interval delimited by its endpoints.
ically in Section 6. First we give definitions of
global constraints on dependency trees, then we
present measures of non-projectivity based on prop-
erties of individual non-projective edges (some of
the edge-based measures have corresponding tree-
based counterparts, however we do not discuss them
in detail).
</bodyText>
<subsectionHeader confidence="0.998265">
4.1 Tree constraints
</subsectionHeader>
<bodyText confidence="0.99947075">
We consider the following three global constraints
on dependency trees: projectivity, planarity, and
well-nestedness. All three constraints can be applied
to more general structures, e.g. dependency forests
or even general directed graphs. Here we adhere to
their primary application to dependency trees.
Definition 4 A dependency tree T is non-planar if
there are two edges i1 H j1, i2 H j2 in T such that
</bodyText>
<equation confidence="0.9972305">
i1 E (i2, j2) &amp; i2 E (i1, j1) .
Otherwise T is planar.
</equation>
<bodyText confidence="0.9994405625">
Planarity is a relaxation of projectivity that cor-
responds to the “no crossing edges” constraint. Al-
though it might get confused with projectivity, it is in
fact a strictly weaker constraint. Planarity is equiv-
alent to projectivity for dependency trees with their
root node at either the left or right fringe of the tree.
Planarity is a recent name for a constraint stud-
ied under different names already in the 1960’s—
we are aware of independent work in the USSR
(weakly non-projective trees; see the survey paper
by Dikovsky and Modina (2000) for references) and
in Czechoslovakia (smooth trees; Nebesk´y (1979)
presents a survey of his results).
Definition 5 A dependency tree T is ill-nested if
there are two non-projective edges i1 H j1, i2 H j2
in T such that
</bodyText>
<equation confidence="0.9722555">
i1 E Gapi2Hj2 &amp; i2 E Gapi1Hj1 .
Otherwise T is well-nested.
</equation>
<bodyText confidence="0.985958222222222">
Well-nestedness was proposed by Bodirsky et al.
(2005). The original formulation forbids interleav-
ing of disjoint subtrees in the total order on nodes;
we present an equivalent formulation in terms of
non-projective edges, derived in (Havelka, 2007b).
Figure 1 illustrates the subset hierarchy between
classes of dependency trees satisfying the particular
constraints:
projective C planar C well-nested C unrestricted
</bodyText>
<page confidence="0.972495">
610
</page>
<figure confidence="0.450401">
projective planar well-nested unrestricted
</figure>
<figureCaption confidence="0.742662">
Figure 1: Sample dependency trees (trees satisfy corre-
sponding constraints and violate all preceding ones)
</figureCaption>
<subsectionHeader confidence="0.99214">
4.2 Edge measures
</subsectionHeader>
<bodyText confidence="0.974982">
The first two measures are based on two ways of
partitioning the gap of a non-projective edge—into
intervals and into components. The third measure,
level type, is based on levels of nodes. We also pro-
pose a novel measure combining levels of nodes and
the partitioning of gaps into components.
Definition 6 For any edge i ↔ j in a dependency
tree T we define its interval degree as follows
idegi↔j = number of intervals in Gapi↔j .
By an interval we mean a contiguous interval in �,
i.e. a maximal set of nodes comprising all nodes be-
tween its endpoints in the total order on nodes -&lt;.
This measure corresponds to the tree-based gap
degree measure in (Kuhlmann and Nivre, 2006),
which was first introduced in (Holan et al., 1998)—
there it is defined as the maximum over gap degrees
of all subtrees of a dependency tree (the gap degree
of a subtree is the number of contiguous intervals
in the gap of the subtree). The interval degree of an
edge is bounded from above by the gap degree of the
subtree rooted in its parent node.
Definition 7 For any edge i ↔ j in a dependency
tree T we define its component degree as follows
cdegi↔j = number of components in Gapi↔j .
By a component we mean a connected component
in the relation ↔, in other words a weak component
in the relation → (we consider relations induced on
the set Gapi↔j by relations on T).
This measure was introduced by Nivre (2006);
Kuhlmann and Nivre (2006) call it edge degree.
Again, they define it as the maximum over all edges.
Each component of a gap can be represented by
a single node, its root in the dependency relation in-
duced on the nodes of the gap (i.e. a node of the com-
ponent closest to the root of the whole tree). Note
that a component need not constitute a full subtree
positive type type 0 negative type
</bodyText>
<figureCaption confidence="0.6803485">
Figure 2: Sample configurations with non-projective
edges of different level types
</figureCaption>
<bodyText confidence="0.999805833333333">
of the dependency tree (there may be nodes in the
subtree of the component root that lie outside the
span of the particular non-projective edge).
Definition 8 The level type (or just type) of a non-
projective edge i ↔ j in a dependency tree T is de-
fined as follows
</bodyText>
<equation confidence="0.88748">
Typei↔j = levelChildi↔j − minn∈Gapi↔j leveln .
</equation>
<bodyText confidence="0.999577384615385">
The level type of an edge is the relative distance in
levels of its child node and a node in its gap closest
to the root; there may be more than one node wit-
nessing an edge’s type. For sample configurations
see Figure 2. Properties of level types are presented
in Havelka (2005; 2007b).6
We propose a new measure combining level types
and component degrees. (We do not use interval de-
grees, i.e. the partitioning of gaps into intervals, be-
cause we cannot specify a unique representative of
an interval with respect to the tree structure.)
Definition 9 The level signature (or just signature)
of an edge i ↔ j in a dependency tree T is a mapping
</bodyText>
<equation confidence="0.719835333333333">
Signaturei↔j : P(V) → ZN0 defined as follows
Signaturei↔j = {levelChildi↔j − levelr |
r is component root in Gapi↔j} .
</equation>
<bodyText confidence="0.999705666666666">
(The right-hand side is considered as a multiset, i.e.
elements may repeat.) We call the elements of a sig-
nature component levels.
The signature of an edge is a multiset consisting
of the relative distances in levels of all component
roots in its gap from its child node.
Further, we disregard any possible orderings on
signatures and concentrate only on the relative dis-
tances in levels. We present signatures as non-
</bodyText>
<footnote confidence="0.988488333333333">
6For example, presence of non-projective edges of nonnega-
tive level type in equivalent to non-projectivity of a dependency
tree; moreover, all such edges can be found in linear time.
</footnote>
<page confidence="0.996668">
611
</page>
<bodyText confidence="0.993904166666667">
decreasing sequences and write them in angle brack-
ets h i, component levels separated by commas (by
doing so, we avoid combinatorial explosion).
Notice that level signatures subsume level types:
the level type of a non-projective edge is the com-
ponent level of any of possibly several component
roots closest to the root of the whole tree. In other
words, the level type of an edge is equal to the largest
component level occurring in its level signature.
Level signatures share interesting formal proper-
ties with level types of non-projective edges. The
following result is a direct extension of the results
presented in Havelka (2005; 2007b).
Theorem 10 Let i ↔ j be a non-projective edge in a
dependency tree T. For any component c in Gapi↔j
represented by root rc with component level lc ≤ 0
(&lt; 0) there is a non-projective edge v → rc in T with
Typev↔rc ≥ 0 (&gt; 0) such that either i ∈ Gapv↔rc, or
j ∈ Gapv↔rc.
PROOF. From the assumptions lc ≤ 0 and rc ∈
Gapi↔j the parent v of node rc lies outside the
span of the edge i ↔ j, hence v ∈� Gapi↔j. Thus
either i ∈ (v,rc), or j ∈ (v,rc). Since levelv ≥
levelParenti↔j, we have that Parenti↔j ∈� Subtreev, and
so either i ∈ Gapv↔rc, or j ∈ Gapv↔rc. Finally from
lc = levelCh;ldi↔j − levelrc ≤ 0 (&lt; 0) we get levelrc −
levelCh;ldi↔j ≥ 0 (&gt; 0), hence Typev↔rc ≥ 0 (&gt; 0).
This result links level signatures to well-
nestedness: it tells us that whenever an edge’s sig-
nature contains a nonpositive component level, the
whole dependency tree is ill-nested (because then
there are two edges satisfying Definition 5).
All discussed edge measures take integer values:
interval and component degrees take only nonneg-
ative values, level types and level signatures take
integer values (in all cases, their absolute values
are bounded by the size of the whole dependency
tree). Both interval and component degrees are de-
fined also for projective edges (for which they take
value 0), level type is undefined for projective edges,
however the level signature of projective edges is
defined—it is the empty multiset/sequence.
</bodyText>
<sectionHeader confidence="0.971221" genericHeader="evaluation">
5 Data and experimental setup
</sectionHeader>
<bodyText confidence="0.993284142857143">
We evaluate all constraints and measures described
in the previous section on 12 languages, whose tree-
banks were made available in the CoNLL-X shared
Figure 3: Sample non-projective tree considered
planar in empirical evaluation
task on dependency parsing (Buchholz and Marsi,
2006). In alphabetical order they are: Arabic, Bul-
garian, Czech, Danish, Dutch, German, Japanese,
Portuguese, Slovene, Spanish, Swedish, and Turk-
ish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a
et al., 2003; Kromann, 2003; van der Beek et al.,
2002; Brants et al., 2002; Kawata and Bartels, 2000;
Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Tor-
ruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005;
Oflazer et al., 2003).7 We do not include Chinese,
which is also available in this data format, because
all trees in this data set are projective.
We take the data “as is”, although we are aware
that structures occurring in different languages de-
pend on the annotations and/or conversions used
(some languages were not originally annotated with
dependency syntax, but only converted to a unified
dependency format from other representations).
The CoNLL data format is a simple tabular for-
mat for capturing dependency analyses of natural
language sentences. For each sentence, it uses a
technical root node to which dependency analyses of
parts of the sentence (possibly several) are attached.
Equivalently, the representation of a sentence can be
viewed as a forest consisting of dependency trees.
By conjoining partial dependency analyses under
one technical root node, we let all their edges inter-
act. Since the technical root comes before the sen-
tence itself, no new non-projective edges are intro-
duced. However, edges from technical roots may
introduce non-planarity. Therefore, in our empirical
evaluation we disregard all such edges when count-
ing trees conforming to the planarity constraint; we
also exclude them from the total numbers of edges.
Figure 3 exemplifies how this may affect counts of
non-planar trees;8 cf. also the remark after Defini-
tion 4. Counts of well-nested trees are not affected.
</bodyText>
<footnote confidence="0.9874796">
7All data sets are the train parts of the CoNLL-X shared task.
8The sample tree is non-planar according to Definition 4,
however we do not consider it as such, because all pairs of
“crossing edges” involve an edge from the technical root (edges
from the technical root are depicted as dotted lines).
</footnote>
<page confidence="0.985219">
612
</page>
<sectionHeader confidence="0.713513" genericHeader="conclusions">
6 Empirical results Empirical evidence shows that edge measures of
</sectionHeader>
<bodyText confidence="0.998423673913044">
Our complete results for global constraints on de- non-projectivity taking into account levels of nodes
pendency trees are given in Table 1. They confirm fit very well with linguistic data. This supports
the findings of Kuhlmann and Nivre (2006): pla- our theoretical results and confirms that properties
narity seems to be almost as restrictive as projectiv- of non-projective edges provide a more accurate
ity; well-nestedness, on the other hand, covers large as well as expressive means for describing non-
proportions of trees in all languages. projective structures in natural language than the
In contrast to global constraints, properties of in- constraints and measures considered by Kuhlmann
dividual non-projective edges allow us to pinpoint and Nivre (2006).
the causes of non-projectivity. Therefore they pro- 7 Conclusion
vide a means for a much more fine-grained classifi- In this paper, we evaluate several constraints and
cation of non-projective structures occurring in natu- measures on non-projective dependency structures.
ral language. Table 2 presents highlights of our anal- We pursue an edge-based approach giving promi-
ysis of edge measures. nence to properties of individual edges. At the same
Both interval and component degrees take gen- time, we consider levels of nodes in dependency
erally low values. On the other hand, Holan et al. trees. We find an edge-based approach also more
(1998; 2000) show that at least for Czech neither of appealing linguistically than traditional approaches
these two measures can in principle be bounded. based on properties of whole dependency trees or
Taking levels of nodes into account seems to bring their subtrees. Furthermore, edge-based properties
both better accuracy and expressivity. Since level allow machine-learning techniques to model global
signatures subsume level types as their last compo- phenomena locally, resulting in less sparse models.
nents, we only provide counts of edges of positive, We propose a new edge measure of non-
nonpositive, and negative level types. For lack of projectivity, level signatures of non-projective
space, we do not present full distributions of level edges. We prove that, analogously to level types,
types nor of level signatures. they relate to the constraint of well-nestedness.
Positive level types give an even better fit with Our empirical results on twelve languages can
real linguistic data than the global constraint of well- be summarized as follows: Among the global con-
nestedness (an ill-nested tree need not contain a non- straints, well-nestedness fits best with linguistic
projective edge of nonpositive level type; cf. The- data. Among edge measures, the previously unre-
orem 10). For example, in German less than one ported measures taking into account levels of nodes
tenth of ill-nested trees contain an edge of nonpos- stand out. They provide both the best fit with lin-
itive level type. Minimum negative level types for guistic data of all constraints and measures we have
Czech, Slovene, Swedish, and Turkish are respec- considered, as well as a substantially more detailed
tively −1, −5, −2, and −4. capability of describing non-projective structures.
Level signatures combine level types and compo- The interested reader can find a more in-depth and
nent degrees, and so give an even more detailed pic- broader-coverage discussion of properties of depen-
ture of the gaps of non-projective edges. In some dency trees and their application to natural language
languages the actually occurring signatures are quite syntax in (Havelka, 2007a).
limited, in others there is a large variation. As future work, we plan to investigate more lan-
Because we consider it linguistically relevant, we guages and carry out linguistic analyses of non-
also count how many non-projective edges contain projective structures in some of them. We will also
in their gaps a component rooted in an ancestor of apply our results to statistical approaches to NLP
the edge (an ancestor of an edge is any node on the tasks, such as dependency parsing.
path from the root of the whole tree to the parent Acknowledgement The research reported in this
node of the edge). The proportions of such non- paper was supported by Project No. 1ET201120505
projective edges vary widely among languages and of the Ministry of Education of the Czech Republic.
for some this property seems highly important.
</bodyText>
<page confidence="0.461596">
613
</page>
<tableCaption confidence="0.658937166666667">
Table 2: Counts for edge measures interval degree, component degree (for values from 1 to 3; larger values are not included), level type (for positive,
nonpositive, and negative values), level signature (up to 10 most frequent values), and numbers of edges with ancestor component roots in their gaps
and solely with ancestor component roots in their gaps; the second to last line gives the total numbers of non-projective edges, the last line gives the
total numbers of all edges—we exclude edges from technical roots. (The listings need not be exhaustive; an empty cell means count zero.)
Table 1: Counts of dependency trees violating global constraints of well-nestedness, planarity, and projectivity; the last line gives the total numbers
of dependency trees. (An empty cell means count zero.)
</tableCaption>
<figure confidence="0.99723650862069">
146
55
833
27
1
623
8
2
Turkish
813
841
(1)/189
(1,1,1)/29
(4)/19
(2,2,2)/10
(3,3)/6
345
(2,2) / 16 (2,2,2,2) / 6
...
...
1.61%
52273
(3)/53
340
(2)/341
(1,1) /91
(2,2)/31
Turkish
14
556
580
11.6%
4997
204
76
1847
46
9
1546
50
15
Swedish
1829
(1)/530
(3)/114
(1,1)/94
(1,2)/19
950
857
(2)/823
(1,3)/27
(1,1,1)/25
1897
1.05%
180425
(0)/31
(4)/21
Swedish
71
1079
9.77%
11042
1076
1
59
59
Slovene Spanish
58
548
(2) / 384 (2) / 46
(4)/4
(1) /2
(3)/7
57
57
59
0.07%
86028
Spanish
56
57
1.72%
3306
531
(5)/12
(1,1) /6
(6)/4
(4) / 12 (1,1,1,1) / 4
(7)/2
392
(1,1,3)/2
...
386
550
2
3
2
(1) /67
(3)/45
(4)/13
2.13%
25777
11
2
547
Slovene
3
283
340
22.16%
1534
Portuguese
2398
24
2466
151
3
(2)/1670
(1,1,1)/44
(2,2)/29
(9)/35 (1,1,1,1,1)/6
...
...
1820
2702
1.37%
197607
272
(3)/208
(1,1)/113
(2,2,2)/13
(1,1,1,1)/ 7
1832
64
2699
(1) /571
Portuguese
7
1713
18.94%
9071
1718
Japanese
1570
81
143
0
1667
(1)/466
(2)/209
(4)/186
(5)/126
(7)/78
(8)/49
0
1.32%
126511
26
1667
(3)/183
(6)/113
(3,3) / 98 (1,1) / 63
12
1484
Japanese
1
5.29%
17044
902
German
14605
434
15803
(1)/3112
(2,2)/476
(1,1,1)/312
(4)/136
(2,2,2)/69
10128
(3,3) / 15 (1,1,1,1) / 59
...
...
15844
1198
37
13107
2206
41
(2)/8407
(1,1)/1503
(3)/1397
9526
2.4%
660394
German
416
10865
10883
27.75%
39216
Dutch
10209
(1)/512
(2,2)/52
349
8
10264
238
2
(1,3)/16
9781
10566
5.9%
179063
47
10564
(1,1)/118
(1,1,1)/25
(5)/23
(4)/201
9697
(2)/8061
(3)/1461
Dutch
15
4115
4865
36.44%
13349
Danish
6
787
811
15.63%
5190
Danish
940
5
78
942
3
(3)/100
(5)/16
(2,2)/58 (1,1,1) / 16
(2,2) /7
(6)/6
703
(2,2,2)/6
...
1.06%
89171
842
22
(2)/555
(1) / 115
(1,1) /63
685
945
(4)/41
Czech
79
13783
16831
23.15%
72703
Czech
23376
292
189
3
23190
66
23495
(1)/2886
(4)/154
(0)/70
(2,4)/44
20035
(1,3)/32
...
2.13%
1105437
75
4
(2)/18507
(3)/1515
(1,1)/115
(1,1,1)/48
19913
23570
Bulgarian
677
690
5.38%
12823
Bulgarian
724
1
(2)/674
(3)/32
(1)/10
(5)/ 2
0.41%
177394
1
(4)/5
723
1
725
(5)/7 (1,1,1)/ 1
(1,1)/1
711
711
725
Arabic
1
150
163
11.16%
1460
Arabic
211
200
10
1
211
(1)/92
(2)/56
(4)/10
(6)/6
(7)/4
(2,2)/2
39
39
211
(3)/18
(1,1)/8
0.42%
50097
(9)/1
...
proportion of all (%)
all
non-projective
non-projective
Language
ill-nested
non-planar
</figure>
<figureCaption confidence="0.6309725">
ancestor comp. root
only ancestor comp. r.
</figureCaption>
<bodyText confidence="0.615080333333333">
Signature / count
proportion of all (%)
all
</bodyText>
<equation confidence="0.9624641">
Language
cdeg = 2
cdeg = 3
Type &gt; 0
Type &lt; 0
Type &lt; 0
cdeg = 1
ideg = 2
ideg = 3
ideg = 1
</equation>
<page confidence="0.99417">
614
</page>
<bodyText confidence="0.779504">
Tom´aˇs Holan, Vladislav Kuboˇn, Karel Oliva, and Martin Pl´atek.
1998. Two Useful Measures of Word Order Complexity.
In Alain Polgu`ere and Sylvain Kahane, editors, Proceedings
of Dependency-Based Grammars Workshop, COLING/ACL,
pages 21–28.
</bodyText>
<sectionHeader confidence="0.55058" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.985072223404256">
A. Abeill´e, editor. 2003. Treebanks: Building and Using
Parsed Corpora, volume 20 of Text, Speech and Language
Technology. Kluwer Academic Publishers, Dordrecht.
S. Afonso, E. Bick, R. Haber, and D. Santos. 2002. “Floresta
sint´a(c)tica”: a treebank for Portuguese. In Proceedings of
the 3rd Intern. Conf. on Language Resources and Evaluation
(LREC), pages 1698–1703.
Manuel Bodirsky, Marco Kuhlmann, and Matthias M¨ohl. 2005.
Well-nested drawings as models of syntactic structure. In
Proceedings of Tenth Conference on Formal Grammar and
Ninth Meering on Mathematics of Language.
A. B¨ohmov´a, J. Hajiˇc, E. Hajiˇcov´a, and B. Hladk´a. 2003. The
PDT: a 3-level annotation scenario. In Abeill´e (2003), chap-
ter 7.
S. Brants, S. Dipper, S. Hansen, W. Lezius, and G. Smith. 2002.
The TIGER treebank. In Proceedings of the 1st Workshop on
Treebanks and Linguistic Theories (TLT).
S. Buchholz and E. Marsi. 2006. CoNLL-X shared task on
multilingual dependency parsing. In Proceedings of CoNLL-
X. SIGNLL.
M. Civit Torruella and Ma A. MartfAntonfn. 2002. Design
principles for a Spanish treebank. In Proceedings of the 1st
Workshop on Treebanks and Linguistic Theories (TLT).
Alexander Dikovsky and Larissa Modina. 2000. Dependencies
on the other side of the Curtain. Traitement Automatique des
Langues (TAL), 41(1):67–96.
S. Dˇzeroski, T. Erjavec, N. Ledinek, P. Pajas, Z. ˇZabokrtsky, and
A. ˇZele. 2006. Towards a Slovene dependency treebank. In
Proceedings of the 5th Intern. Conf. on Language Resources
and Evaluation (LREC).
J. Hajiˇc, O. Smrˇz, P. Zem´anek, J. ˇSnaidauf, and E. Beˇska. 2004.
Prague Arabic dependency treebank: Development in data
and tools. In Proceedings of the NEMLAR Intern. Conf. on
Arabic Language Resources and Tools, pages 110–117.
Eva Hajiˇcov´a, Jiˇr´ı Havelka, Petr Sgall, Kateˇrina Vesel´a, and
Daniel Zeman. 2004. Issues of Projectivity in the Prague
Dependency Treebank. Prague Bulletin of Mathematical
Linguistics, 81:5–22.
Jiˇr´ı Havelka. 2005. Projectivity in Totally Ordered Rooted
Trees: An Alternative Definition of Projectivity and Optimal
Algorithms for Detecting Non-Projective Edges and Projec-
tivizing Totally Ordered Rooted Trees. Prague Bulletin of
Mathematical Linguistics, 84:13–30.
JiˇrfHavelka. 2007a. Mathematical Properties of Dependency
Trees and their Application to Natural Language Syntax.
Ph.D. thesis, Institute of Formal and Applied Linguistics,
Charles University in Prague, Czech Republic.
JiˇrfHavelka. 2007b. Relationship between Non-Projective
Edges, Their Level Types, and Well-Nestedness. In Pro-
ceedings ofHLT/NAACL; Companion Volume, Short Papers,
pages 61–64.
Tom´aˇs Holan, Vladislav Kuboˇn, Karel Oliva, and Martin Pl´atek.
2000. On Complexity of Word Order. Traitement Automa-
tique des Langues (TAL), 41(1):273–300.
Y. Kawata and J. Bartels. 2000. Stylebook for the Japanese
treebank in VERBMOBIL. Verbmobil-Report 240, Seminar
f¨ur Sprachwissenschaft, Universit¨at T¨ubingen.
M. T. Kromann. 2003. The Danish dependency treebank and
the underlying linguistic theory. In Proceedings of the 2nd
Workshop on Treebanks and Linguistic Theories (TLT).
Marco Kuhlmann and Joakim Nivre. 2006. Mildly Non-
Projective Dependency Structures. In Proceedings of COL-
ING/ACL, pages 507–514.
Solomon Marcus. 1965. Sur la notion de projectivit´e [On the
notion of projectivity]. Zeitschrift f¨ur Mathematische Logik
und Grundlagen der Mathematik, 11:181–192.
Ryan McDonald, Fernando Pereira, Kiril Ribarov, and Jan
Hajiˇc. 2005. Non-Projective Dependency Parsing using
Spanning Tree Algorithms. In Proceedings of HLT/EMNLP,
pages 523–530.
Ladislav Nebesk´y. 1979. Graph theory and linguistics (chapter
12). In R. J. Wilson and L. W. Beineke, editors, Applications
of Graph Theory, pages 357–380. Academic Press.
J. Nilsson, J. Hall, and J. Nivre. 2005. MAMBA meets TIGER:
Reconstructing a Swedish treebank from antiquity. In Pro-
ceedings of the NODALIDA Special Session on Treebanks.
Joakim Nivre. 2006. Constraints on Non-Projective Depen-
dency Parsing. In Proceedings of EACL, pages 73–80.
K. Oflazer, B. Say, D. Zeynep Hakkani-T¨ur, and G. T¨ur. 2003.
Building a Turkish treebank. In Abeill´e (2003), chapter 15.
K. Simov, P. Osenova, A. Simov, and M. Kouylekov. 2005.
Design and implementation of the Bulgarian HPSG-based
treebank. In Journal of Research on Language and Com-
putation – Special Issue, pages 495–522. Kluwer Academic
Publishers.
Neil J. A. Sloane. 2007. On-Line Encyclopedia
of Integer Sequences. Published electronically at
www.research.att.com/˜njas/sequences/.
L. van der Beek, G. Bouma, R. Malouf, and G. van Noord.
2002. The Alpino dependency treebank. In Computational
Linguistics in the Netherlands (CLIN).
Kateˇrina Vesel´a, JiˇrfHavelka, and Eva Hajiˇcov´a. 2004. Con-
dition of Projectivity in the Underlying Dependency Struc-
tures. In Proceedings of COLING, pages 289–295.
</reference>
<page confidence="0.99856">
615
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.778912">
<title confidence="0.997033">Beyond Projectivity: Multilingual Evaluation of Constraints and Measures on Non-Projective Structures</title>
<author confidence="0.998223">Jiˇr´ı Havelka</author>
<affiliation confidence="0.9940755">Institute of Formal and Applied Linguistics Charles University in Prague</affiliation>
<address confidence="0.93663">Czech Republic</address>
<email confidence="0.985039">havelka@ufal.mff.cuni.cz</email>
<abstract confidence="0.993833608695652">Dependency analysis of natural language has gained importance for its applicability to NLP tasks. Non-projective structures are common in dependency analysis, therefore we need fine-grained means of describing them, especially for the purposes of machine-learning oriented approaches like parsing. We present an evaluation on twelve languages which explores several constraints and measures on non-projective structures. We pursue an edge-based approach concentrating on properties of individual edges as opposed to properties of whole trees. In our evaluation, we include previously unreported measures taking into account levels of nodes in dependency trees. Our empirical results corroborate theoretical results and show that an edge-based approach using levels of nodes provides an accurate and at the same time expressive means for capturing non-projective structures in natural language.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>Treebanks: Building and Using Parsed Corpora,</title>
<date>2003</date>
<booktitle>Text, Speech and Language Technology.</booktitle>
<volume>20</volume>
<editor>A. Abeill´e, editor.</editor>
<publisher>Kluwer Academic Publishers,</publisher>
<location>Dordrecht.</location>
<marker>2003</marker>
<rawString>A. Abeill´e, editor. 2003. Treebanks: Building and Using Parsed Corpora, volume 20 of Text, Speech and Language Technology. Kluwer Academic Publishers, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Afonso</author>
<author>E Bick</author>
<author>R Haber</author>
<author>D Santos</author>
</authors>
<title>Floresta sint´a(c)tica”: a treebank for Portuguese.</title>
<date>2002</date>
<booktitle>In Proceedings of the 3rd Intern. Conf. on Language Resources and Evaluation (LREC),</booktitle>
<pages>1698--1703</pages>
<contexts>
<context position="18553" citStr="Afonso et al., 2002" startWordPosition="3152" endWordPosition="3155">experimental setup We evaluate all constraints and measures described in the previous section on 12 languages, whose treebanks were made available in the CoNLL-X shared Figure 3: Sample non-projective tree considered planar in empirical evaluation task on dependency parsing (Buchholz and Marsi, 2006). In alphabetical order they are: Arabic, Bulgarian, Czech, Danish, Dutch, German, Japanese, Portuguese, Slovene, Spanish, Swedish, and Turkish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005; Oflazer et al., 2003).7 We do not include Chinese, which is also available in this data format, because all trees in this data set are projective. We take the data “as is”, although we are aware that structures occurring in different languages depend on the annotations and/or conversions used (some languages were not originally annotated with dependency syntax, but only converted to a unified dependency format from other representations). The CoNLL data format is a simple tabular format for capturing dep</context>
</contexts>
<marker>Afonso, Bick, Haber, Santos, 2002</marker>
<rawString>S. Afonso, E. Bick, R. Haber, and D. Santos. 2002. “Floresta sint´a(c)tica”: a treebank for Portuguese. In Proceedings of the 3rd Intern. Conf. on Language Resources and Evaluation (LREC), pages 1698–1703.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manuel Bodirsky</author>
<author>Marco Kuhlmann</author>
<author>Matthias M¨ohl</author>
</authors>
<title>Well-nested drawings as models of syntactic structure.</title>
<date>2005</date>
<booktitle>In Proceedings of Tenth Conference on Formal Grammar and Ninth Meering on Mathematics of Language.</booktitle>
<marker>Bodirsky, Kuhlmann, M¨ohl, 2005</marker>
<rawString>Manuel Bodirsky, Marco Kuhlmann, and Matthias M¨ohl. 2005. Well-nested drawings as models of syntactic structure. In Proceedings of Tenth Conference on Formal Grammar and Ninth Meering on Mathematics of Language.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A B¨ohmov´a</author>
<author>J Hajiˇc</author>
<author>E Hajiˇcov´a</author>
<author>B Hladk´a</author>
</authors>
<title>The PDT: a 3-level annotation scenario.</title>
<date>2003</date>
<booktitle>In Abeill´e</booktitle>
<note>chapter 7.</note>
<marker>B¨ohmov´a, Hajiˇc, Hajiˇcov´a, Hladk´a, 2003</marker>
<rawString>A. B¨ohmov´a, J. Hajiˇc, E. Hajiˇcov´a, and B. Hladk´a. 2003. The PDT: a 3-level annotation scenario. In Abeill´e (2003), chapter 7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Brants</author>
<author>S Dipper</author>
<author>S Hansen</author>
<author>W Lezius</author>
<author>G Smith</author>
</authors>
<title>The TIGER treebank.</title>
<date>2002</date>
<booktitle>In Proceedings of the 1st Workshop on Treebanks and Linguistic Theories (TLT).</booktitle>
<contexts>
<context position="18506" citStr="Brants et al., 2002" startWordPosition="3144" endWordPosition="3147">—it is the empty multiset/sequence. 5 Data and experimental setup We evaluate all constraints and measures described in the previous section on 12 languages, whose treebanks were made available in the CoNLL-X shared Figure 3: Sample non-projective tree considered planar in empirical evaluation task on dependency parsing (Buchholz and Marsi, 2006). In alphabetical order they are: Arabic, Bulgarian, Czech, Danish, Dutch, German, Japanese, Portuguese, Slovene, Spanish, Swedish, and Turkish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005; Oflazer et al., 2003).7 We do not include Chinese, which is also available in this data format, because all trees in this data set are projective. We take the data “as is”, although we are aware that structures occurring in different languages depend on the annotations and/or conversions used (some languages were not originally annotated with dependency syntax, but only converted to a unified dependency format from other representations). The CoNLL data form</context>
</contexts>
<marker>Brants, Dipper, Hansen, Lezius, Smith, 2002</marker>
<rawString>S. Brants, S. Dipper, S. Hansen, W. Lezius, and G. Smith. 2002. The TIGER treebank. In Proceedings of the 1st Workshop on Treebanks and Linguistic Theories (TLT).</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Buchholz</author>
<author>E Marsi</author>
</authors>
<title>CoNLL-X shared task on multilingual dependency parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of CoNLLX. SIGNLL.</booktitle>
<contexts>
<context position="18235" citStr="Buchholz and Marsi, 2006" startWordPosition="3100" endWordPosition="3103">olute values are bounded by the size of the whole dependency tree). Both interval and component degrees are defined also for projective edges (for which they take value 0), level type is undefined for projective edges, however the level signature of projective edges is defined—it is the empty multiset/sequence. 5 Data and experimental setup We evaluate all constraints and measures described in the previous section on 12 languages, whose treebanks were made available in the CoNLL-X shared Figure 3: Sample non-projective tree considered planar in empirical evaluation task on dependency parsing (Buchholz and Marsi, 2006). In alphabetical order they are: Arabic, Bulgarian, Czech, Danish, Dutch, German, Japanese, Portuguese, Slovene, Spanish, Swedish, and Turkish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005; Oflazer et al., 2003).7 We do not include Chinese, which is also available in this data format, because all trees in this data set are projective. We take the data “as is”, although we are aw</context>
</contexts>
<marker>Buchholz, Marsi, 2006</marker>
<rawString>S. Buchholz and E. Marsi. 2006. CoNLL-X shared task on multilingual dependency parsing. In Proceedings of CoNLLX. SIGNLL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Civit Torruella</author>
<author>Ma A MartfAntonfn</author>
</authors>
<title>Design principles for a Spanish treebank.</title>
<date>2002</date>
<booktitle>In Proceedings of the 1st Workshop on Treebanks and Linguistic Theories (TLT).</booktitle>
<marker>Torruella, MartfAntonfn, 2002</marker>
<rawString>M. Civit Torruella and Ma A. MartfAntonfn. 2002. Design principles for a Spanish treebank. In Proceedings of the 1st Workshop on Treebanks and Linguistic Theories (TLT).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexander Dikovsky</author>
<author>Larissa Modina</author>
</authors>
<date>2000</date>
<booktitle>Dependencies on the other side of the Curtain. Traitement Automatique des Langues (TAL),</booktitle>
<pages>41--1</pages>
<contexts>
<context position="11443" citStr="Dikovsky and Modina (2000)" startWordPosition="1913" endWordPosition="1916">j1, i2 H j2 in T such that i1 E (i2, j2) &amp; i2 E (i1, j1) . Otherwise T is planar. Planarity is a relaxation of projectivity that corresponds to the “no crossing edges” constraint. Although it might get confused with projectivity, it is in fact a strictly weaker constraint. Planarity is equivalent to projectivity for dependency trees with their root node at either the left or right fringe of the tree. Planarity is a recent name for a constraint studied under different names already in the 1960’s— we are aware of independent work in the USSR (weakly non-projective trees; see the survey paper by Dikovsky and Modina (2000) for references) and in Czechoslovakia (smooth trees; Nebesk´y (1979) presents a survey of his results). Definition 5 A dependency tree T is ill-nested if there are two non-projective edges i1 H j1, i2 H j2 in T such that i1 E Gapi2Hj2 &amp; i2 E Gapi1Hj1 . Otherwise T is well-nested. Well-nestedness was proposed by Bodirsky et al. (2005). The original formulation forbids interleaving of disjoint subtrees in the total order on nodes; we present an equivalent formulation in terms of non-projective edges, derived in (Havelka, 2007b). Figure 1 illustrates the subset hierarchy between classes of depen</context>
</contexts>
<marker>Dikovsky, Modina, 2000</marker>
<rawString>Alexander Dikovsky and Larissa Modina. 2000. Dependencies on the other side of the Curtain. Traitement Automatique des Langues (TAL), 41(1):67–96.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Dˇzeroski</author>
<author>T Erjavec</author>
<author>N Ledinek</author>
<author>P Pajas</author>
<author>Z ˇZabokrtsky</author>
<author>A ˇZele</author>
</authors>
<title>Towards a Slovene dependency treebank.</title>
<date>2006</date>
<booktitle>In Proceedings of the 5th Intern. Conf. on Language Resources and Evaluation (LREC).</booktitle>
<marker>Dˇzeroski, Erjavec, Ledinek, Pajas, ˇZabokrtsky, ˇZele, 2006</marker>
<rawString>S. Dˇzeroski, T. Erjavec, N. Ledinek, P. Pajas, Z. ˇZabokrtsky, and A. ˇZele. 2006. Towards a Slovene dependency treebank. In Proceedings of the 5th Intern. Conf. on Language Resources and Evaluation (LREC).</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Hajiˇc</author>
<author>O Smrˇz</author>
<author>P Zem´anek</author>
<author>J ˇSnaidauf</author>
<author>E Beˇska</author>
</authors>
<title>Prague Arabic dependency treebank: Development in data and tools.</title>
<date>2004</date>
<booktitle>In Proceedings of the NEMLAR Intern. Conf. on Arabic Language Resources and Tools,</booktitle>
<pages>110--117</pages>
<marker>Hajiˇc, Smrˇz, Zem´anek, ˇSnaidauf, Beˇska, 2004</marker>
<rawString>J. Hajiˇc, O. Smrˇz, P. Zem´anek, J. ˇSnaidauf, and E. Beˇska. 2004. Prague Arabic dependency treebank: Development in data and tools. In Proceedings of the NEMLAR Intern. Conf. on Arabic Language Resources and Tools, pages 110–117.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eva Hajiˇcov´a</author>
<author>Jiˇr´ı Havelka</author>
<author>Petr Sgall</author>
<author>Kateˇrina Vesel´a</author>
<author>Daniel Zeman</author>
</authors>
<date>2004</date>
<booktitle>Issues of Projectivity in the Prague Dependency Treebank. Prague Bulletin of Mathematical Linguistics,</booktitle>
<pages>81--5</pages>
<marker>Hajiˇcov´a, Havelka, Sgall, Vesel´a, Zeman, 2004</marker>
<rawString>Eva Hajiˇcov´a, Jiˇr´ı Havelka, Petr Sgall, Kateˇrina Vesel´a, and Daniel Zeman. 2004. Issues of Projectivity in the Prague Dependency Treebank. Prague Bulletin of Mathematical Linguistics, 81:5–22.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jiˇr´ı Havelka</author>
</authors>
<title>Projectivity in Totally Ordered Rooted Trees: An Alternative Definition of Projectivity and Optimal Algorithms for Detecting Non-Projective Edges and Projectivizing Totally Ordered Rooted Trees.</title>
<date>2005</date>
<booktitle>Prague Bulletin of Mathematical Linguistics,</booktitle>
<pages>84--13</pages>
<contexts>
<context position="3024" citStr="Havelka (2005)" startWordPosition="448" endWordPosition="449">.2 Holan et al. (1998) first defined an infinite hierarchy of classes of dependency trees, going from projective to unrestricted dependency trees, based on the notion of gap degree for subtrees (cf. Section 3). Holan et al. (2000) present linguistic considerations concerning Czech and English with respect to this hierarchy (cf. also Section 6). In this paper, we consider all constraints and measures evaluated by Kuhlmann and Nivre (2006)— with some minor variations, cf. Section 4.2. Ad1These two papers contain an error concerning an alternative condition of projectivity, which is rectified in Havelka (2005). 2The importance of such means becomes more evident from the asymptotically negligible proportion of projective trees to all dependency trees; there are super-exponentially many unrestricted trees compared to exponentially many projective trees on n nodes. Unrestricted dependency trees (i.e. labelled rooted trees) and projective dependency trees are counted by sequences A000169 and A006013 (offset 1), respectively, in the On-Line Encyclopedia of Sequences (Sloane, 2007). 608 Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 608–615, Prague, Czech Re</context>
<context position="5394" citStr="Havelka (2005)" startWordPosition="846" endWordPosition="847">talk about on properties of individual non-projective edges (cf. edges (pairs of nodes i, j such that i → j) without Definition 3); and they take into account levels of explicitly specifying the parent (head; i here) and nodes in dependency trees explicitly. None of the the child (dependent; j here); so → represents diconstraints and measures in Kuhlmann and Nivre rected edges and ↔ undirected edges. To retain the (2006) take into account levels of nodes explicitly. ability to talk about the direction of edges, we define Level types of non-projective edges, introduced i if i → j j if i → j by Havelka (2005), have both desiderata. They pro- Parenti↔ j = j if j → i and Childi↔ j = i if j → i. vide an edge-based means of characterizing all non- To make the exposition clearer by avoiding overuse projective structures; they also have some further in- of the symbol →, we introduce notation for rooted teresting formal properties. subtrees not only for nodes, but also for edges: We propose a novel, more detailed measure, level Subtreei = {v ∈ V |i →∗ v}, Subtreei↔j = {v ∈ V | signatures of non-projective edges, combining lev- Parenti↔ j →∗ v} (note that the subtree of an edge is els of nodes with the pa</context>
<context position="14773" citStr="Havelka (2005" startWordPosition="2502" endWordPosition="2503">of different level types of the dependency tree (there may be nodes in the subtree of the component root that lie outside the span of the particular non-projective edge). Definition 8 The level type (or just type) of a nonprojective edge i ↔ j in a dependency tree T is defined as follows Typei↔j = levelChildi↔j − minn∈Gapi↔j leveln . The level type of an edge is the relative distance in levels of its child node and a node in its gap closest to the root; there may be more than one node witnessing an edge’s type. For sample configurations see Figure 2. Properties of level types are presented in Havelka (2005; 2007b).6 We propose a new measure combining level types and component degrees. (We do not use interval degrees, i.e. the partitioning of gaps into intervals, because we cannot specify a unique representative of an interval with respect to the tree structure.) Definition 9 The level signature (or just signature) of an edge i ↔ j in a dependency tree T is a mapping Signaturei↔j : P(V) → ZN0 defined as follows Signaturei↔j = {levelChildi↔j − levelr | r is component root in Gapi↔j} . (The right-hand side is considered as a multiset, i.e. elements may repeat.) We call the elements of a signature </context>
<context position="16499" citStr="Havelka (2005" startWordPosition="2794" endWordPosition="2795">nd write them in angle brackets h i, component levels separated by commas (by doing so, we avoid combinatorial explosion). Notice that level signatures subsume level types: the level type of a non-projective edge is the component level of any of possibly several component roots closest to the root of the whole tree. In other words, the level type of an edge is equal to the largest component level occurring in its level signature. Level signatures share interesting formal properties with level types of non-projective edges. The following result is a direct extension of the results presented in Havelka (2005; 2007b). Theorem 10 Let i ↔ j be a non-projective edge in a dependency tree T. For any component c in Gapi↔j represented by root rc with component level lc ≤ 0 (&lt; 0) there is a non-projective edge v → rc in T with Typev↔rc ≥ 0 (&gt; 0) such that either i ∈ Gapv↔rc, or j ∈ Gapv↔rc. PROOF. From the assumptions lc ≤ 0 and rc ∈ Gapi↔j the parent v of node rc lies outside the span of the edge i ↔ j, hence v ∈� Gapi↔j. Thus either i ∈ (v,rc), or j ∈ (v,rc). Since levelv ≥ levelParenti↔j, we have that Parenti↔j ∈� Subtreev, and so either i ∈ Gapv↔rc, or j ∈ Gapv↔rc. Finally from lc = levelCh;ldi↔j − le</context>
</contexts>
<marker>Havelka, 2005</marker>
<rawString>Jiˇr´ı Havelka. 2005. Projectivity in Totally Ordered Rooted Trees: An Alternative Definition of Projectivity and Optimal Algorithms for Detecting Non-Projective Edges and Projectivizing Totally Ordered Rooted Trees. Prague Bulletin of Mathematical Linguistics, 84:13–30.</rawString>
</citation>
<citation valid="false">
<authors>
<author>2007a</author>
</authors>
<title>Mathematical Properties of Dependency Trees and their Application to Natural Language Syntax.</title>
<tech>Ph.D. thesis,</tech>
<institution>Institute of Formal and Applied Linguistics, Charles University in Prague, Czech Republic.</institution>
<marker>2007a, </marker>
<rawString>JiˇrfHavelka. 2007a. Mathematical Properties of Dependency Trees and their Application to Natural Language Syntax. Ph.D. thesis, Institute of Formal and Applied Linguistics, Charles University in Prague, Czech Republic.</rawString>
</citation>
<citation valid="false">
<authors>
<author>2007b</author>
</authors>
<title>Relationship between Non-Projective Edges, Their Level Types, and Well-Nestedness.</title>
<booktitle>In Proceedings ofHLT/NAACL; Companion Volume, Short Papers,</booktitle>
<pages>61--64</pages>
<marker>2007b, </marker>
<rawString>JiˇrfHavelka. 2007b. Relationship between Non-Projective Edges, Their Level Types, and Well-Nestedness. In Proceedings ofHLT/NAACL; Companion Volume, Short Papers, pages 61–64.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tom´aˇs Holan</author>
<author>Vladislav Kuboˇn</author>
<author>Karel Oliva</author>
<author>Martin Pl´atek</author>
</authors>
<date>2000</date>
<booktitle>On Complexity of Word Order. Traitement Automatique des Langues (TAL),</booktitle>
<pages>41--1</pages>
<marker>Holan, Kuboˇn, Oliva, Pl´atek, 2000</marker>
<rawString>Tom´aˇs Holan, Vladislav Kuboˇn, Karel Oliva, and Martin Pl´atek. 2000. On Complexity of Word Order. Traitement Automatique des Langues (TAL), 41(1):273–300.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Kawata</author>
<author>J Bartels</author>
</authors>
<title>Stylebook for the Japanese treebank in VERBMOBIL. Verbmobil-Report 240, Seminar f¨ur Sprachwissenschaft, Universit¨at T¨ubingen.</title>
<date>2000</date>
<contexts>
<context position="18532" citStr="Kawata and Bartels, 2000" startWordPosition="3148" endWordPosition="3151">iset/sequence. 5 Data and experimental setup We evaluate all constraints and measures described in the previous section on 12 languages, whose treebanks were made available in the CoNLL-X shared Figure 3: Sample non-projective tree considered planar in empirical evaluation task on dependency parsing (Buchholz and Marsi, 2006). In alphabetical order they are: Arabic, Bulgarian, Czech, Danish, Dutch, German, Japanese, Portuguese, Slovene, Spanish, Swedish, and Turkish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005; Oflazer et al., 2003).7 We do not include Chinese, which is also available in this data format, because all trees in this data set are projective. We take the data “as is”, although we are aware that structures occurring in different languages depend on the annotations and/or conversions used (some languages were not originally annotated with dependency syntax, but only converted to a unified dependency format from other representations). The CoNLL data format is a simple tabular for</context>
</contexts>
<marker>Kawata, Bartels, 2000</marker>
<rawString>Y. Kawata and J. Bartels. 2000. Stylebook for the Japanese treebank in VERBMOBIL. Verbmobil-Report 240, Seminar f¨ur Sprachwissenschaft, Universit¨at T¨ubingen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M T Kromann</author>
</authors>
<title>The Danish dependency treebank and the underlying linguistic theory.</title>
<date>2003</date>
<booktitle>In Proceedings of the 2nd Workshop on Treebanks and Linguistic Theories (TLT).</booktitle>
<contexts>
<context position="18458" citStr="Kromann, 2003" startWordPosition="3136" endWordPosition="3137">l signature of projective edges is defined—it is the empty multiset/sequence. 5 Data and experimental setup We evaluate all constraints and measures described in the previous section on 12 languages, whose treebanks were made available in the CoNLL-X shared Figure 3: Sample non-projective tree considered planar in empirical evaluation task on dependency parsing (Buchholz and Marsi, 2006). In alphabetical order they are: Arabic, Bulgarian, Czech, Danish, Dutch, German, Japanese, Portuguese, Slovene, Spanish, Swedish, and Turkish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005; Oflazer et al., 2003).7 We do not include Chinese, which is also available in this data format, because all trees in this data set are projective. We take the data “as is”, although we are aware that structures occurring in different languages depend on the annotations and/or conversions used (some languages were not originally annotated with dependency syntax, but only converted to a unified dependency format </context>
</contexts>
<marker>Kromann, 2003</marker>
<rawString>M. T. Kromann. 2003. The Danish dependency treebank and the underlying linguistic theory. In Proceedings of the 2nd Workshop on Treebanks and Linguistic Theories (TLT).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marco Kuhlmann</author>
<author>Joakim Nivre</author>
</authors>
<title>Mildly NonProjective Dependency Structures.</title>
<date>2006</date>
<booktitle>In Proceedings of COLING/ACL,</booktitle>
<pages>507--514</pages>
<contexts>
<context position="1729" citStr="Kuhlmann and Nivre (2006)" startWordPosition="244" endWordPosition="247">uctures in natural language. 1 Introduction Dependency analysis of natural language has been gaining an ever increasing interest thanks to its applicability in many tasks of NLP—a recent example is the dependency parsing work of McDonald et al. (2005), which introduces an approach based on the search for maximum spanning trees, capable of handling non-projective structures naturally. The study of dependency structures occurring in natural language can be approached from two sides: by trying to delimit permissible dependency structures through formal constraints (for a recent review paper, see Kuhlmann and Nivre (2006)), or by providing their linguistic description (see e.g. Vesel´a et al. (2004) and Hajiˇcov´a et al. (2004) for a linguistic analysis of non-projective constructions in Czech.1) We think that it is worth bearing in mind that neither syntactic structures in dependency treebanks, nor structures arising in machine-learning approaches, such as MST dependency parsing, need a priori fall into any formal subclass of dependency trees. We should therefore aim at formal means capable of describing all non-projective structures that are both expressive and fine-grained enough to be useful in statistical</context>
<context position="12992" citStr="Kuhlmann and Nivre, 2006" startWordPosition="2168" endWordPosition="2171">itioning the gap of a non-projective edge—into intervals and into components. The third measure, level type, is based on levels of nodes. We also propose a novel measure combining levels of nodes and the partitioning of gaps into components. Definition 6 For any edge i ↔ j in a dependency tree T we define its interval degree as follows idegi↔j = number of intervals in Gapi↔j . By an interval we mean a contiguous interval in �, i.e. a maximal set of nodes comprising all nodes between its endpoints in the total order on nodes -&lt;. This measure corresponds to the tree-based gap degree measure in (Kuhlmann and Nivre, 2006), which was first introduced in (Holan et al., 1998)— there it is defined as the maximum over gap degrees of all subtrees of a dependency tree (the gap degree of a subtree is the number of contiguous intervals in the gap of the subtree). The interval degree of an edge is bounded from above by the gap degree of the subtree rooted in its parent node. Definition 7 For any edge i ↔ j in a dependency tree T we define its component degree as follows cdegi↔j = number of components in Gapi↔j . By a component we mean a connected component in the relation ↔, in other words a weak component in the relati</context>
<context position="20669" citStr="Kuhlmann and Nivre (2006)" startWordPosition="3492" endWordPosition="3495">ffected. 7All data sets are the train parts of the CoNLL-X shared task. 8The sample tree is non-planar according to Definition 4, however we do not consider it as such, because all pairs of “crossing edges” involve an edge from the technical root (edges from the technical root are depicted as dotted lines). 612 6 Empirical results Empirical evidence shows that edge measures of Our complete results for global constraints on de- non-projectivity taking into account levels of nodes pendency trees are given in Table 1. They confirm fit very well with linguistic data. This supports the findings of Kuhlmann and Nivre (2006): pla- our theoretical results and confirms that properties narity seems to be almost as restrictive as projectiv- of non-projective edges provide a more accurate ity; well-nestedness, on the other hand, covers large as well as expressive means for describing nonproportions of trees in all languages. projective structures in natural language than the In contrast to global constraints, properties of in- constraints and measures considered by Kuhlmann dividual non-projective edges allow us to pinpoint and Nivre (2006). the causes of non-projectivity. Therefore they pro- 7 Conclusion vide a means</context>
</contexts>
<marker>Kuhlmann, Nivre, 2006</marker>
<rawString>Marco Kuhlmann and Joakim Nivre. 2006. Mildly NonProjective Dependency Structures. In Proceedings of COLING/ACL, pages 507–514.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Solomon Marcus</author>
</authors>
<title>Sur la notion de projectivit´e [On the notion of projectivity].</title>
<date>1965</date>
<booktitle>Zeitschrift f¨ur Mathematische Logik und Grundlagen der Mathematik,</booktitle>
<pages>11--181</pages>
<contexts>
<context position="7980" citStr="Marcus (1965)" startWordPosition="1315" endWordPosition="1316">i, j) =⇒ v ∈ Subtreei , (Lecerf &amp; Ihm) j ∈ Subtreei &amp; v ∈ (i, j) =⇒ v ∈ Subtreei , (Fitialov) j1, j2 ∈ Subtreei &amp; v ∈ (j1, j2) =⇒ v ∈ Subtreei . 3We adopt the following convention: nodes are drawn top- Otherwise T is non-projective. down according to their increasing level, with nodes on the same level being the same distance from the root; nodes are drawn from left to right according to the total order on nodes; edges are drawn as solid lines, paths as dotted curves. 4There are many other equivalent characterizations of projectivity, we give only three historically prominent ones. 609 It was Marcus (1965) who proved the equivalence of the conditions in Definition 2, proposed in the early 1960’s (we denote them by the names of those to whom Marcus attributes their authorship). We see that the antecedents of the projectivity conditions move from edge-focused to subtreefocused (i.e. from talking about dependency to talking about subordination). It is the condition of Fitialov that has been mostly explored when studying so-called relaxations of projectivity. (The condition is usually worded as follows: A dependency tree is projective if the nodes of all its subtrees constitute contiguous intervals</context>
</contexts>
<marker>Marcus, 1965</marker>
<rawString>Solomon Marcus. 1965. Sur la notion de projectivit´e [On the notion of projectivity]. Zeitschrift f¨ur Mathematische Logik und Grundlagen der Mathematik, 11:181–192.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ryan McDonald</author>
<author>Fernando Pereira</author>
<author>Kiril Ribarov</author>
<author>Jan Hajiˇc</author>
</authors>
<title>Non-Projective Dependency Parsing using Spanning Tree Algorithms.</title>
<date>2005</date>
<booktitle>In Proceedings of HLT/EMNLP,</booktitle>
<pages>523--530</pages>
<marker>McDonald, Pereira, Ribarov, Hajiˇc, 2005</marker>
<rawString>Ryan McDonald, Fernando Pereira, Kiril Ribarov, and Jan Hajiˇc. 2005. Non-Projective Dependency Parsing using Spanning Tree Algorithms. In Proceedings of HLT/EMNLP, pages 523–530.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ladislav Nebesk´y</author>
</authors>
<title>Graph theory and linguistics (chapter 12). In</title>
<date>1979</date>
<booktitle>Applications of Graph Theory,</booktitle>
<pages>357--380</pages>
<editor>R. J. Wilson and L. W. Beineke, editors,</editor>
<publisher>Academic Press.</publisher>
<marker>Nebesk´y, 1979</marker>
<rawString>Ladislav Nebesk´y. 1979. Graph theory and linguistics (chapter 12). In R. J. Wilson and L. W. Beineke, editors, Applications of Graph Theory, pages 357–380. Academic Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Nilsson</author>
<author>J Hall</author>
<author>J Nivre</author>
</authors>
<title>MAMBA meets TIGER: Reconstructing a Swedish treebank from antiquity.</title>
<date>2005</date>
<booktitle>In Proceedings of the NODALIDA Special Session on Treebanks.</booktitle>
<contexts>
<context position="18642" citStr="Nilsson et al., 2005" startWordPosition="3167" endWordPosition="3170">ction on 12 languages, whose treebanks were made available in the CoNLL-X shared Figure 3: Sample non-projective tree considered planar in empirical evaluation task on dependency parsing (Buchholz and Marsi, 2006). In alphabetical order they are: Arabic, Bulgarian, Czech, Danish, Dutch, German, Japanese, Portuguese, Slovene, Spanish, Swedish, and Turkish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005; Oflazer et al., 2003).7 We do not include Chinese, which is also available in this data format, because all trees in this data set are projective. We take the data “as is”, although we are aware that structures occurring in different languages depend on the annotations and/or conversions used (some languages were not originally annotated with dependency syntax, but only converted to a unified dependency format from other representations). The CoNLL data format is a simple tabular format for capturing dependency analyses of natural language sentences. For each sentence, it uses a technical ro</context>
</contexts>
<marker>Nilsson, Hall, Nivre, 2005</marker>
<rawString>J. Nilsson, J. Hall, and J. Nivre. 2005. MAMBA meets TIGER: Reconstructing a Swedish treebank from antiquity. In Proceedings of the NODALIDA Special Session on Treebanks.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joakim Nivre</author>
</authors>
<title>Constraints on Non-Projective Dependency Parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of EACL,</booktitle>
<pages>73--80</pages>
<contexts>
<context position="1729" citStr="Nivre (2006)" startWordPosition="246" endWordPosition="247">tural language. 1 Introduction Dependency analysis of natural language has been gaining an ever increasing interest thanks to its applicability in many tasks of NLP—a recent example is the dependency parsing work of McDonald et al. (2005), which introduces an approach based on the search for maximum spanning trees, capable of handling non-projective structures naturally. The study of dependency structures occurring in natural language can be approached from two sides: by trying to delimit permissible dependency structures through formal constraints (for a recent review paper, see Kuhlmann and Nivre (2006)), or by providing their linguistic description (see e.g. Vesel´a et al. (2004) and Hajiˇcov´a et al. (2004) for a linguistic analysis of non-projective constructions in Czech.1) We think that it is worth bearing in mind that neither syntactic structures in dependency treebanks, nor structures arising in machine-learning approaches, such as MST dependency parsing, need a priori fall into any formal subclass of dependency trees. We should therefore aim at formal means capable of describing all non-projective structures that are both expressive and fine-grained enough to be useful in statistical</context>
<context position="12992" citStr="Nivre, 2006" startWordPosition="2170" endWordPosition="2171">gap of a non-projective edge—into intervals and into components. The third measure, level type, is based on levels of nodes. We also propose a novel measure combining levels of nodes and the partitioning of gaps into components. Definition 6 For any edge i ↔ j in a dependency tree T we define its interval degree as follows idegi↔j = number of intervals in Gapi↔j . By an interval we mean a contiguous interval in �, i.e. a maximal set of nodes comprising all nodes between its endpoints in the total order on nodes -&lt;. This measure corresponds to the tree-based gap degree measure in (Kuhlmann and Nivre, 2006), which was first introduced in (Holan et al., 1998)— there it is defined as the maximum over gap degrees of all subtrees of a dependency tree (the gap degree of a subtree is the number of contiguous intervals in the gap of the subtree). The interval degree of an edge is bounded from above by the gap degree of the subtree rooted in its parent node. Definition 7 For any edge i ↔ j in a dependency tree T we define its component degree as follows cdegi↔j = number of components in Gapi↔j . By a component we mean a connected component in the relation ↔, in other words a weak component in the relati</context>
<context position="20669" citStr="Nivre (2006)" startWordPosition="3494" endWordPosition="3495"> data sets are the train parts of the CoNLL-X shared task. 8The sample tree is non-planar according to Definition 4, however we do not consider it as such, because all pairs of “crossing edges” involve an edge from the technical root (edges from the technical root are depicted as dotted lines). 612 6 Empirical results Empirical evidence shows that edge measures of Our complete results for global constraints on de- non-projectivity taking into account levels of nodes pendency trees are given in Table 1. They confirm fit very well with linguistic data. This supports the findings of Kuhlmann and Nivre (2006): pla- our theoretical results and confirms that properties narity seems to be almost as restrictive as projectiv- of non-projective edges provide a more accurate ity; well-nestedness, on the other hand, covers large as well as expressive means for describing nonproportions of trees in all languages. projective structures in natural language than the In contrast to global constraints, properties of in- constraints and measures considered by Kuhlmann dividual non-projective edges allow us to pinpoint and Nivre (2006). the causes of non-projectivity. Therefore they pro- 7 Conclusion vide a means</context>
</contexts>
<marker>Nivre, 2006</marker>
<rawString>Joakim Nivre. 2006. Constraints on Non-Projective Dependency Parsing. In Proceedings of EACL, pages 73–80.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Oflazer</author>
<author>B Say</author>
<author>D Zeynep Hakkani-T¨ur</author>
<author>G T¨ur</author>
</authors>
<title>Building a Turkish treebank. In Abeill´e</title>
<date>2003</date>
<pages>15</pages>
<marker>Oflazer, Say, Hakkani-T¨ur, T¨ur, 2003</marker>
<rawString>K. Oflazer, B. Say, D. Zeynep Hakkani-T¨ur, and G. T¨ur. 2003. Building a Turkish treebank. In Abeill´e (2003), chapter 15.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Simov</author>
<author>P Osenova</author>
<author>A Simov</author>
<author>M Kouylekov</author>
</authors>
<title>Design and implementation of the Bulgarian HPSG-based treebank.</title>
<date>2005</date>
<journal>In Journal of Research on Language and Computation – Special Issue,</journal>
<pages>495--522</pages>
<publisher>Kluwer Academic Publishers.</publisher>
<contexts>
<context position="18419" citStr="Simov et al., 2005" startWordPosition="3128" endWordPosition="3131">fined for projective edges, however the level signature of projective edges is defined—it is the empty multiset/sequence. 5 Data and experimental setup We evaluate all constraints and measures described in the previous section on 12 languages, whose treebanks were made available in the CoNLL-X shared Figure 3: Sample non-projective tree considered planar in empirical evaluation task on dependency parsing (Buchholz and Marsi, 2006). In alphabetical order they are: Arabic, Bulgarian, Czech, Danish, Dutch, German, Japanese, Portuguese, Slovene, Spanish, Swedish, and Turkish (Hajiˇc et al., 2004; Simov et al., 2005; B¨ohmov´a et al., 2003; Kromann, 2003; van der Beek et al., 2002; Brants et al., 2002; Kawata and Bartels, 2000; Afonso et al., 2002; Dˇzeroski et al., 2006; Civit Torruella and Mart´ı Anton´ın, 2002; Nilsson et al., 2005; Oflazer et al., 2003).7 We do not include Chinese, which is also available in this data format, because all trees in this data set are projective. We take the data “as is”, although we are aware that structures occurring in different languages depend on the annotations and/or conversions used (some languages were not originally annotated with dependency syntax, but only co</context>
</contexts>
<marker>Simov, Osenova, Simov, Kouylekov, 2005</marker>
<rawString>K. Simov, P. Osenova, A. Simov, and M. Kouylekov. 2005. Design and implementation of the Bulgarian HPSG-based treebank. In Journal of Research on Language and Computation – Special Issue, pages 495–522. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Neil J A Sloane</author>
</authors>
<title>On-Line Encyclopedia of Integer Sequences.</title>
<date>2007</date>
<note>Published electronically at www.research.att.com/˜njas/sequences/.</note>
<contexts>
<context position="3499" citStr="Sloane, 2007" startWordPosition="513" endWordPosition="514">ection 4.2. Ad1These two papers contain an error concerning an alternative condition of projectivity, which is rectified in Havelka (2005). 2The importance of such means becomes more evident from the asymptotically negligible proportion of projective trees to all dependency trees; there are super-exponentially many unrestricted trees compared to exponentially many projective trees on n nodes. Unrestricted dependency trees (i.e. labelled rooted trees) and projective dependency trees are counted by sequences A000169 and A006013 (offset 1), respectively, in the On-Line Encyclopedia of Sequences (Sloane, 2007). 608 Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 608–615, Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics ditionally, we introduce several measures not con- Relation → models linguistic dependency, and so sidered in their work. We also extend the empirical represents a directed, rooted tree on V. There are basis from Czech and Danish to twelve languages, many ways of characterizing rooted trees, we give which were made available in the CoNLL-X shared here a characterization via the properties of →: there tas</context>
</contexts>
<marker>Sloane, 2007</marker>
<rawString>Neil J. A. Sloane. 2007. On-Line Encyclopedia of Integer Sequences. Published electronically at www.research.att.com/˜njas/sequences/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L van der Beek</author>
<author>G Bouma</author>
<author>R Malouf</author>
<author>G van Noord</author>
</authors>
<title>The Alpino dependency treebank.</title>
<date>2002</date>
<booktitle>In Computational Linguistics in the Netherlands (CLIN).</booktitle>
<marker>van der Beek, Bouma, Malouf, van Noord, 2002</marker>
<rawString>L. van der Beek, G. Bouma, R. Malouf, and G. van Noord. 2002. The Alpino dependency treebank. In Computational Linguistics in the Netherlands (CLIN).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kateˇrina Vesel´a</author>
<author>JiˇrfHavelka</author>
<author>Eva Hajiˇcov´a</author>
</authors>
<title>Condition of Projectivity in the Underlying Dependency Structures.</title>
<date>2004</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>289--295</pages>
<marker>Vesel´a, JiˇrfHavelka, Hajiˇcov´a, 2004</marker>
<rawString>Kateˇrina Vesel´a, JiˇrfHavelka, and Eva Hajiˇcov´a. 2004. Condition of Projectivity in the Underlying Dependency Structures. In Proceedings of COLING, pages 289–295.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>