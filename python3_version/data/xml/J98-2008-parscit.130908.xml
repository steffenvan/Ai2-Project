<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.030062">
<figure confidence="0.399398142857143">
Book Reviews
Text Databases: One Database Model and Several Retrieval
Languages
Crist-Jan Doedens
(Utrecht University)
Editions Rodopi (Language and
Computers: Studies in Practical
Linguistics, edited by Jan Aarts and
Willem Meijs, volume 14), 1994, 314 pp;
paperbound, ISBN 90-5183-729-1,
$52.50, Dfl 100.00
Reviewed by
Nancy Ide
Vassar College
</figure>
<bodyText confidence="0.999807909090909">
The development of adequate, sufficiently general models for text-dominated databases
is a sticky problem, and one that is far from solved. With the increased use of corpora
for their research, computational linguists have been forced in recent years to grap-
ple with the organization of and access to large text databases, usually by developing
application-specific, ad hoc systems barely grounded in database theory. The advent of
digital libraries and the prospect of distributed research environments has generated
more interest in the development of application-independent text database models,
but few, if any, directly address the needs of corpus linguistics and natural language
processing research.
The work Doedens describes in this book is motivated by the need to accommo-
date the data in the Electronic Concordance Application (ECA) at the Vrije Universiteit
Amsterdam. The data comprise the Hebrew Bible, together with annotation for mor-
phology, part of speech, and syntactic structure. Consequently, although the text model
and query languages he describes are generalizable to other texts, they were devel-
oped to directly address the representation and retrieval needs for linguistic data. The
discussion and examples are therefore particularly relevant and accessible to compu-
tational linguists.
In Chapter 2, Doedens outlines the properties of enriched text—such as hier-
archical organization, recursively nested structures, variants and alternatives, and
discontinuities—that make traditional database models (e.g., relational models) inad-
equate for their representation. He also describes the need for user access to different
&amp;quot;views&amp;quot; of a text (e.g., as physical structure, logical structure, linguistic structure, etc.),
a particularly thorny retrieval problem. The discussion could be more detailed, and it
could be usefully generalized to other types of richly encoded text beyond those con-
taining linguistic annotation. Nonetheless, this is one of the few places these special
properties have been described and considered in developing text database models.
The author provides a useful list of &amp;quot;basic demands&amp;quot; for text database models, and
uses them to evaluate four previously developed models (two of them developed at
the University of Waterloo, as an outgrowth of the New OED project). He gives cursory
treatment to SGML as a text database model; given its increasingly widespread use, a
more thorough discussion—especially of its weaknesses—would be valuable.
Chapter 3 outlines the Monads dot Feature (MdF) model for text databases, and
Chapter 4 describes its implementation in the ECA database. The model itself seems
</bodyText>
<page confidence="0.994709">
319
</page>
<note confidence="0.631924">
Computational Linguistics Volume 24, Number 2
</note>
<bodyText confidence="0.999895854166667">
well-grounded in database theory, although the author fails to adequately locate it in
this context. All of the examples used in describing the model are based on the ECA
style of syntactic analysis, but the author demonstrates how the model can accommo-
date other types of analysis. The reader interested in computational linguistics will
likely wish that the author provided more than a superficial overview of the parsing
strategies used to construct the ECA database; however, parsing is not the focus of
the book, and the author provides plenty of pointers to additional information about
the ECA project.
The remainder of the book is devoted to query languages. Chapter 5 provides a
rather long and belabored definition of what the author calls &amp;quot;topographic&amp;quot; languages:
i.e., languages whose syntactic form mirrors the structural relations being defined. In
Chapter 6, the topographic query language QL is described in detail, especially its
extended features introduced to accommodate special properties of enriched text. The
next chapter outlines LL, a nontopographic logical retrieval language, which, because
it consists of logical operations over sets, is more elegant and natural (at least, for
logicians and computer scientists) than QL. The author explains that because it is a
higher-level query language, LL is appropriate as an intermediate language in a natural
language query system; natural language requests can be translated to LL and then
from LL to QL. The design of both languages is theoretically sound, and browsing
through their descriptions provides a useful and well-founded introduction to query
language design. A formal description of LL and formal transformation rules from
LL to QL are included as appendices. Chapter 9 proposes a software architecture for
applying MdF, QL, and LL.
This book is taken from a dissertation, and this shows everywhere in the prose and
content. The prose is somewhat stilted and redundant, especially because the author
repeatedly summarizes, at the beginning of each chapter and section, what is about
to be covered. More seriously, the presentation of the material lacks a current context:
the book was published in 19941 and describes work done two or three years earlier
than that. It would be helpful to see Doedens&apos;s proposals in relation to more recent
work on the development of text databases and query languages for corpora. For
instance, Doedens probably would have had to better justify his dismissal of the well-
known relational database query language SQL as a starting point, since it has been
used as a basis for newer text database query languages (for example, in recent work
at Waterloo—see Blake et al. [1995]). Still, I was impressed by Doedens&apos;s principled
treatment of open problems in the design of text databases and query languages for
linguistic corpora, and at times even considered that some recent work would have
benefited from familiarity with his approach.
The most valuable and unique feature of this book is that its topic cuts across
several disciplines, including database theory and design, computational linguistics,
computer science, and text encoding and analysis, applying methodologies from some
to address the needs of others. As a result, Doedens&apos;s approach goes considerably
farther than any other work I know toward developing a principled approach to
text database design that is based on a good understanding of the requirements for
handling richly annotated texts. The book is advertised as representing &amp;quot;one step in the
road&amp;quot; toward creating a framework for future development of computer management
and use of textual information, and this is exactly the impression I was left with after
reading the book. For those with an interest in text databases, it is certainly worth
looking at.
</bodyText>
<footnote confidence="0.54136">
1 The book was not submitted for review until September 1997.
</footnote>
<page confidence="0.993356">
320
</page>
<reference confidence="0.949904">
Book Reviews
Reference Wm. Tompa. 1995. Text / Relational
Blake, G. Elizabeth, Mariano Consens, Ian J. database management systems: Overview
Davis, Pekka Kilpelainen, Eila Kuikka, and proposed SQL extensions.
Per-Ake Larson, Tim Snider, and Frank http://solo.uwaterloo.ca/trdbms/docs/
trdbmsl.ps
</reference>
<bodyText confidence="0.676848285714286">
Nancy Ide is Associate Professor and Chair of Computer Science at Vassar College. Her pub-
lications describe her work on word-sense disambiguation, computational lexicography, and
database models and encoding schemes for dictionary data and linguistic corpora. She is co-
editor of the Kluwer book series Text, Speech, and Language Technology and co-editor-in-chief of
the journal Computers and the Humanities. She is also the founder of the Text Encoding Initiative
(TEI). Ide&apos;s address is: Department of Computer Science, Vassar College, 124 Raymond Avenue,
Poughkeepsie, NY 12604-0520, USA; e-mail: ide@cs.vassar.edu
</bodyText>
<page confidence="0.998224">
321
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.100243">
<title confidence="0.978088666666667">Book Reviews Text Databases: One Database Model and Several Retrieval Languages</title>
<author confidence="0.787259">Crist-Jan Doedens</author>
<affiliation confidence="0.843331">(Utrecht University) Editions Rodopi (Language and</affiliation>
<note confidence="0.685456166666667">Computers: Studies in Practical Linguistics, edited by Jan Aarts and Willem Meijs, volume 14), 1994, 314 pp; paperbound, ISBN 90-5183-729-1, $52.50, Dfl 100.00 Reviewed by</note>
<author confidence="0.980558">Nancy Ide</author>
<affiliation confidence="0.92506">Vassar College</affiliation>
<abstract confidence="0.996312528301887">The development of adequate, sufficiently general models for text-dominated databases is a sticky problem, and one that is far from solved. With the increased use of corpora for their research, computational linguists have been forced in recent years to grapple with the organization of and access to large text databases, usually by developing application-specific, ad hoc systems barely grounded in database theory. The advent of digital libraries and the prospect of distributed research environments has generated more interest in the development of application-independent text database models, but few, if any, directly address the needs of corpus linguistics and natural language processing research. The work Doedens describes in this book is motivated by the need to accommodate the data in the Electronic Concordance Application (ECA) at the Vrije Universiteit Amsterdam. The data comprise the Hebrew Bible, together with annotation for morphology, part of speech, and syntactic structure. Consequently, although the text model and query languages he describes are generalizable to other texts, they were developed to directly address the representation and retrieval needs for linguistic data. The discussion and examples are therefore particularly relevant and accessible to computational linguists. In Chapter 2, Doedens outlines the properties of enriched text—such as hierarchical organization, recursively nested structures, variants and alternatives, and discontinuities—that make traditional database models (e.g., relational models) inadequate for their representation. He also describes the need for user access to different &amp;quot;views&amp;quot; of a text (e.g., as physical structure, logical structure, linguistic structure, etc.), a particularly thorny retrieval problem. The discussion could be more detailed, and it could be usefully generalized to other types of richly encoded text beyond those containing linguistic annotation. Nonetheless, this is one of the few places these special properties have been described and considered in developing text database models. The author provides a useful list of &amp;quot;basic demands&amp;quot; for text database models, and uses them to evaluate four previously developed models (two of them developed at University of Waterloo, as an outgrowth of the OED He gives cursory treatment to SGML as a text database model; given its increasingly widespread use, a more thorough discussion—especially of its weaknesses—would be valuable. Chapter 3 outlines the Monads dot Feature (MdF) model for text databases, and Chapter 4 describes its implementation in the ECA database. The model itself seems 319 Computational Linguistics Volume 24, Number 2 well-grounded in database theory, although the author fails to adequately locate it in this context. All of the examples used in describing the model are based on the ECA style of syntactic analysis, but the author demonstrates how the model can accommodate other types of analysis. The reader interested in computational linguistics will likely wish that the author provided more than a superficial overview of the parsing strategies used to construct the ECA database; however, parsing is not the focus of the book, and the author provides plenty of pointers to additional information about the ECA project. The remainder of the book is devoted to query languages. Chapter 5 provides a rather long and belabored definition of what the author calls &amp;quot;topographic&amp;quot; languages: i.e., languages whose syntactic form mirrors the structural relations being defined. In Chapter 6, the topographic query language QL is described in detail, especially its extended features introduced to accommodate special properties of enriched text. The next chapter outlines LL, a nontopographic logical retrieval language, which, because it consists of logical operations over sets, is more elegant and natural (at least, for logicians and computer scientists) than QL. The author explains that because it is a higher-level query language, LL is appropriate as an intermediate language in a natural language query system; natural language requests can be translated to LL and then</abstract>
<intro confidence="0.626331">from LL to QL. The design of both languages is theoretically sound, and browsing</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Book Reviews Reference Blake</author>
<author>G Elizabeth</author>
<author>Mariano Consens</author>
<author>Ian J Davis</author>
</authors>
<title>Pekka Kilpelainen, Eila Kuikka, Per-Ake Larson, Tim Snider, and Frank Wm.</title>
<date>1995</date>
<location>Tompa.</location>
<note>http://solo.uwaterloo.ca/trdbms/docs/ trdbmsl.ps</note>
<marker>Blake, Elizabeth, Consens, Davis, 1995</marker>
<rawString>Book Reviews Reference Blake, G. Elizabeth, Mariano Consens, Ian J. Davis, Pekka Kilpelainen, Eila Kuikka, Per-Ake Larson, Tim Snider, and Frank Wm. Tompa. 1995. Text / Relational database management systems: Overview and proposed SQL extensions. http://solo.uwaterloo.ca/trdbms/docs/ trdbmsl.ps</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>