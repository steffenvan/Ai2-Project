<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.995968">
Generating Referring Expressions
that Involve Gradable Properties
</title>
<author confidence="0.972764">
Kees van Deemter*
</author>
<affiliation confidence="0.977025">
University of Aberdeen
</affiliation>
<bodyText confidence="0.755574857142857">
This article examines the role of gradable properties in referring expressions from the perspective
of natural language generation. First, we propose a simple semantic analysis of vague de-
scriptions (i.e., referring expressions that contain gradable adjectives) that reflects the context-
dependent meaning of the adjectives in them. Second, we show how this type of analysis can
inform algorithms for the generation of vague descriptions from numerical data. Third, we ask
when such descriptions should be used. The article concludes with a discussion of salience and
pointing, which are analyzed as if they were gradable adjectives.
</bodyText>
<sectionHeader confidence="0.66157" genericHeader="method">
1. Introduction: Vagueness of Gradable Adjectives
</sectionHeader>
<subsectionHeader confidence="0.743222">
1.1 Vague Descriptions
</subsectionHeader>
<bodyText confidence="0.999963736842105">
Vague or gradable expressions pose problems to models of language, caused by their
context dependence, and by the fact that they are applicable to different degrees. This
article focuses on gradable adjectives, also called degree adjectives.1 More specifically,
we shall explore how referring expressions containing gradable adjectives can be pro-
duced by a Natural Language Generation (NLG) program. Following Pinkal (1979), such
expressions will be called vague descriptions even though, as we shall see, the vagueness
of the adjective does not extend to the description as a whole. It will be useful to gen-
eralize over different forms of the adjective, covering the superlative form (e.g., largest)
and the comparative form (larger), as well as the positive or base form (large) of the
adjective. Vague descriptions are worth studying because they use vagueness in a
comparatively transparent way, often combining clarity of reference with indeterminacy
of meaning; as a result, they allow us to make inroads into the difficult area of research
on vagueness. Generation offers an interesting perspective because it forces one to ask
when it is a good idea to use these descriptions, in addition to asking what they mean.
Gradability is especially widespread in adjectives. A search of the British National
Corpus (BNC), for example, shows at least seven of the ten most frequent adjectives
(last, other, new, good, old, great, high, small, different, large) to be gradable. Children use
vague adjectives among their first dozens of words (Peccei 1994) and understand some
of their intricacies as early as their 24th month (Ebeling and Gelman 1994). These
</bodyText>
<footnote confidence="0.91573475">
* Computing Science Department, King’s College, University of Aberdeen, United Kingdom, E-mail:
kvdeemter@csd.abdn.ac.uk.
1 We take such adjectives to be ones that have comparative and superlative forms, and which can be
premodified by intensifiers such as very (Quirk et al. 1972, Section 5.4).
</footnote>
<note confidence="0.83462675">
Submission received: 7 July 2004; revised submission received: 19 October 2005; accepted for
publication: 24 November 2005.
© 2006 Association for Computational Linguistics
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.99387475">
intricacies include what Ebeling and Gelman call perceptual context dependence, as
when a set of objects is perceptually available and the adjective is applied to an element
or subset of the set (e.g., Is this hat big or is it little?, when two hats of different sizes are
visible).
</bodyText>
<subsectionHeader confidence="0.972804">
1.2 Vagueness in NLG
</subsectionHeader>
<bodyText confidence="0.999987242424243">
Some NLG systems produce gradable adjectives. The FOG weather-forecast system, for
example, uses numerical input (Rain[Tuesday] = 45 mm) to generate vague output
(Heavy rain fell on Tuesday, Goldberg, Driedger, and Kitteridge 1994). FOG does not
appear to have generic rules governing the use of gradable notions: it does not compute
the meaning of a vague term based on the context, but uses fixed boundary values
instead. A more flexible approach is used by Reiter and Sripada (2002), where users can
specify boundary values for attributes like rainfall, specifying, for example, rain counts
as moderate above 7 mm/h, as heavy above 20 mm/h, and so on. A third approach was
implemented in Dial Your Disc (DYD), where the extension of a gradable adjective like
famous was computed rather than specified by hand (van Deemter and Odijk 1997). To
determine, for example, whether one of Mozart’s piano sonatas could be called a famous
sonata, the system looked up the number x of compact disc recordings of this sonata (as
listed in an encyclopedia) and compared it to the average number y of CD recordings of
each of Mozart’s sonatas. The sonata was called a famous sonata if x &gt;&gt; y. Like DYD, the
work reported in this article will abandon the use of fixed boundary values for gradable
adjectives, letting these values depend on the context in which the adjective is used.
Sometimes we are forced to be vague because the information we have (e.g., based on
perception or verbal reports) is itself inexact. Such cases can be modeled by letting NLG
systems take vague information (e.g., Rain[Wednesday] = heavy) as their input. We
shall focus on the more challenging case where the output of the generator is less precise
than the input, as is the case in FOG and DYD. This can be a hazardous affair, since vague
expressions tend to be interpreted in different ways by different people (Toogood 1980),
sometimes in stark contrast with the intention of the speaker/writer (Berry, Knapp,
and Raynor 2002). We shall therefore focus—unlike earlier computational accounts—on
vague descriptions, that is, vague expressions in definite descriptions. Here, the context
tends to obliterate the vagueness associated with the adjective. Suppose you enter a
vet’s surgery in the company of two dogs: a big one on a leash, and a tiny one in your
arms. The vet asks “Who’s the patient?”, and you answer “the big dog.” This answer
will allow the vet to pick out the patient just as reliably as if you had said “the one on
the leash”; the fact that big is a vague term is irrelevant. You omit the exact size of the
dog, just like some of its other properties (e.g., the leash), because they do not improve
the description. This shows how vague properties can contribute to the precise task of
identifying a referent.
</bodyText>
<subsectionHeader confidence="0.995439">
1.3 Plan of This Article
</subsectionHeader>
<bodyText confidence="0.999821571428571">
We will show how existing algorithms for the generation of referring expressions (GRE)
can do justice to gradable properties, whether they originate from the gradable adjec-
tives in a vague description, or from some entirely different source (such as the degree of
salience of the referent). Considerable attention will be paid to the many open questions
in this area, which will have to be resolved before NLG can be said to contain a proper
treatment of vague expressions. We start with two preliminary sections, containing a
semantic analysis of vague descriptions (Section 2) and a version of the Incremental
</bodyText>
<page confidence="0.989113">
196
</page>
<bodyText confidence="0.965898625">
van Deemter GRE with Gradable Properties
Algorithm that generates references to sets (Section 3). Section 4 describes the core of
one particular algorithm for generating vague descriptions. Section 5 discusses prag-
matic constraints that let such an algorithm avoid descriptions that are semantically
correct but clumsy. Section 6 discusses linguistic realization. Section 7 summarizes
some empirical results. Section 8 explores non-incremental versions of our algorithm.
Section 9 shows how our approach can be extended to include nouns, salience, and
pointing. Section 10 sums up our main findings.
</bodyText>
<sectionHeader confidence="0.8787535" genericHeader="method">
2. The Meaning of Vague Descriptions
2.1 Linguistic Motivation
</sectionHeader>
<bodyText confidence="0.998552666666667">
We shall be studying vague descriptions of various forms: They may or may not contain
a numeral n (positioned before or after the adjective); and the gradable adjective (Adj)
may at least be in base (large) or superlative form (largest):
</bodyText>
<listItem confidence="0.9812195">
(1) The (n) Adj(est) N (singular/plural)
(2) The Adj(est) (n) N (singular/plural)
</listItem>
<bodyText confidence="0.99805">
If Adj is in the base form, we focus on the word order (1); if Adj is superlative, we focus
on (2). (Little will hinge on this decision.) We are limiting ourselves to referential uses of
these expressions, excluding cases like This must be the largest tree in the world, in which
the expression ascribes a property to an already-identified object. Likewise, we exclude
intensional ones (e.g., Consider the smallest element of this set, in a mathematical proof,
when the identity of the element may not be known).
Many different analyses are possible of what it means to be large: larger than
average, larger than most, larger than some given baseline, and so on. It is doubtful that
any one of these analyses makes sense for all definite descriptions. To see this, consider
a domain of three mice, sized 5, 8, and 10 cm.2 Here one can speak of
</bodyText>
<listItem confidence="0.689506">
(3) The large mouse (= the one whose size is 10 cm)
(4) The two large mice (= the two whose sizes are 8 and 10 cm)
</listItem>
<bodyText confidence="0.999728272727273">
Clearly, what it takes for the adjective to be applicable has not been cast in stone,
but is open to fiat: the speaker may decide that 8 cm is enough, or the speaker may
set the standards higher (cf., Kennedy 1999). The numeral (whether it is implicit, as
in (3), or explicit) can be construed as allowing the reader to draw inferences about
the standards employed (Kyburg and Morreau 2000; DeVault and Stone 2004): (3), for
example, implies a standard that counts 10 cm as large and 8 cm as not large. Our
own proposal will abstract away from the effects of linguistic context. We shall ask
how noun phrases like the ones in (3) and (4) can be generated, without asking how
they constrain, and are constrained by, other uses of large and related words. This will
allow us to make the following simplification: In a definite description that expresses
only properties that are needed for singling out a referent, we take the base form of
</bodyText>
<footnote confidence="0.517757">
2 The reader is asked to focus on any reasonable size measurement, for example, the maximal horizontal or
vertical distance, or some combination of dimensions (Kamp 1975; also Section 8.1 of the present article).
</footnote>
<page confidence="0.988247">
197
</page>
<note confidence="0.799642">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.8971007">
the adjective to be semantically equivalent to the superlative form (and, analogously, the
comparative):
The n large mice = The largest n mice
The large mice = The largest mice
The large mouse = The largest mouse.
Viewed in this way, gradable adjectives are an extreme example of the “efficiency of
language” (Barwise and Perry 1983): Far from meaning something concrete like “larger
than 8 cm”—a concept that would have very limited applicability—or even something
more general like “larger than the average N,” a word like large is applicable across a
wide range of different situations.
</bodyText>
<subsectionHeader confidence="0.96893">
2.2 Caveat: Full NP Anaphora
</subsectionHeader>
<bodyText confidence="0.999791454545455">
Having said this, there are pragmatic differences between the base form and the superla-
tive (Section 5). For example, the equivalence does not take anaphoric uses into account,
such as when the large mouse is legitimized by the fact that the mouse has been called
large before, as in
(5) I was transfixed by a large mouse on the chimney; then suddenly, dozens
of mice were teeming on the ground. The large mouse was running away.
where the mouse on the chimney may be smaller than those on the ground. We focus on
Ebeling and Gelman’s (1994) perceptual context dependence (Section 1), pretending that
the only contextually relevant factor is the “comparison set”: those elements of the noun
denotation that are perceptually available. We disregard functional context dependence,
as when the small hat is the one too small to fit on your head.
</bodyText>
<subsectionHeader confidence="0.995918">
2.3 Caveat: Evaluative Adjectives
</subsectionHeader>
<bodyText confidence="0.991877">
What we said above has also disregarded elements of the “global” (i.e., not immediately
available) context. For some adjectives, including the ones that Bierwisch (1989) called
evaluative (as opposed to dimensional), this is clearly inadequate. He argued that evalu-
ative adjectives (such as beautiful and its antonym ugly; smart and its antonym stupid,
etc.) can be recognized by the way in which they compare with antonyms. For example
(after Bierwisch 1989),
</bodyText>
<listItem confidence="0.94977">
(6a) Hans is taller than Fritz ⇒ Fritz is shorter than Hans.
(6b) Hans is smarter than Fritz ⇒� Fritz is more stupid than Hans.
</listItem>
<bodyText confidence="0.9900738">
We could require that the referent of an evaluative description fall into the correct
segment of the relevant dimension. (For Fritz to be the stupid man, it is not enough
for him to be the least intelligent male in the local context; he also has to be a fairly
stupid specimen in his own right.) If this is done, it is not evident that dimensional
adjectives should be treated differently: If Hans’s and Fritz’s heights are 210 and
</bodyText>
<page confidence="0.986108">
198
</page>
<bodyText confidence="0.985324296296296">
van Deemter GRE with Gradable Properties
205 cm, respectively, then it seems questionable to describe Fritz as the short man, even if
Hans is the only other man in the local context (but see Sedivy et al. 1999, discussed in
Section 7.2). Be this as it may, we shall henceforth focus on local context, assuming that
additional requirements on the global context can be made if necessary.
With these qualifications in place, let us say more precisely what we will assume
the different types of expressions to mean. For ease of reading, concrete examples (e.g.,
large) will replace abstract labels (e.g., ‘Adj’), but the analysis is meant to be general.
The largest n mouse/mice; The n large mice. Imagine a set C of contextually relevant
animals. Then these noun phrases (NPs) presuppose that there is a subset S of C that
contains n elements, all of which are mice, and such that (1) C−S =� m (i.e., not all
elements of C are elements of S) and (2) every mouse in C−S (i.e., every contextually
relevant mouse not in S) is smaller than every mouse in S. If such a set S exists then the
NP denotes S. The case where n = 1, realized as The large(st) mouse, falls out
automatically.
The large(st) mice. This account can be extended to cover cases of the form the
[Adj]-(est) [Npl] (pl = plural), where the numeral n is suppressed: They will be taken to
be ambiguous between all expressions the [Adj]-(est) n [Npl], where n &gt; 1. Sometimes,
this leaves only one possibility. For instance, in a domain where there are five mice, of
sizes 4, 4, 4, 5, and 6 cm, the only possible value of n is 2, causing the NP to denote the
two mice of 5 and 6 cm in size.
Pragmatic refinements are discussed in Section 5. Our analysis is limited to NPs that
contain only one vague adjective. Doubly-graded descriptions tend to cause ambiguity,
since they involve a trade-off between several dimensions. An NP like the tall fat giraffe,
for example, might describe a referent that is neither the tallest nor the fattest giraffe,
as long as a combination of height and fatness singles it out. Some of the problems that
come up in such cases will be discussed in Section 9.1.
</bodyText>
<sectionHeader confidence="0.783541" genericHeader="method">
3. Generation of Crisp Descriptions
</sectionHeader>
<bodyText confidence="0.999899166666667">
Arguably the most fundamental task in the generation of referring expressions (GRE),
content determination (CD) requires finding a set of properties that jointly identify the in-
tended referent. Various CD algorithms have been proposed, most of which approximate
the minimal number of properties that are needed to identify the target. Approxima-
tions differ in terms of their computational complexity and the degree to which they
match the way in which people use referring expressions (see Dale and Reiter [1995] for
a survey). As we shall see in Section 8, any one of these algorithms could be used as
a basis for our task. For concreteness, we focus here on Dale and Reiter’s Incremental
Algorithm (IA). We shall use a form of the IA that can refer to sets as well as individuals,
as long as the sets are individuated via their elements (i.e., distributively, as opposed to
collectively, cf., Stone [2000]). This version of the IA will be called IAPlur. (For motivation
and extensions, see van Deemter 2000, 2002.)
</bodyText>
<subsectionHeader confidence="0.999288">
3.1 The Incremental Algorithm
</subsectionHeader>
<bodyText confidence="0.9102705">
Put simply, IA accumulates semantic properties until the target objects are the only ones
in the domain of which all the accumulated properties are true. This can be done by
arranging the properties in a list and by checking, for each property in the list, whether
it is useful (in the sense that it removes one or more distractors); if a property is useful, it
</bodyText>
<page confidence="0.994268">
199
</page>
<note confidence="0.303517">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.999629066666667">
is included in the description, after which the next property is given the same treatment.
This process of checking and including goes on until the target objects are the only ones
of which all the properties in the list are true (i.e., until there are no distractors left).
For reasons that will become apparent later, we complicate matters slightly: Fol-
lowing Dale and Reiter, we view each property as consisting of an Attribute (e.g.,
color) and a Value (e.g., white), written (Attribute,Value). (Attributes can be viewed
as grouping together a number of related properties.) Attributes are ordered in a
list A, and this preference order determines the order in which properties are examined
(and possibly added to the description) by the algorithm. Suppose S is the target set,
and C the set of all objects that play a role at a given stage of the algorithm (we call
these the confusables). The algorithm iterates through A; for each Attribute, it checks
whether, by specifying a Value for it, one can rule out at least one member of C that has
not yet been ruled out; if so then the Attribute is added to a set L, with the best possible
Value (as determined by FindBestValue). Confusables that are ruled out are removed
from C. The expansion of L and the contraction of C continue until C = S:
</bodyText>
<equation confidence="0.942829333333333">
L := 0
C := Domain
For each Ai c A do
Vi = FindBestValue(S,Ai)
If S C [(Ai, Vi)] &amp; C C� [(Ai, Vi)] then do
L := L U {(Ai, Vi)I
C := C n [(Ai, Vi)]
If C = S then Return L
Return Failure
</equation>
<bodyText confidence="0.999977571428572">
FindBestValue selects the ‘best value’ from among the Values of a given Attribute,
assuming that these are linearly ordered in terms of specificity. The function selects the
Value that removes most distractors, but in case of a tie, the least specific contestant
is chosen, as long as it is not less specific than the basic-level Value (i.e., the most
commonly occurring and psychologically most fundamental level, Rosch 1978). IAPlur
can refer to individuals as well as sets, since reference to a target individual r can be
modeled as reference to the singleton set {r}.
</bodyText>
<subsectionHeader confidence="0.999417">
3.2 The Existing Treatment of Gradables
</subsectionHeader>
<bodyText confidence="0.999608153846154">
IAPlur deals with vague properties in essentially the same way as FOG: Attributes like
size are treated as if they were not context dependent: Their Values always apply to the
same objects, regardless of what other properties occur in the description. In this way,
IA could never describe the same animal as the large chihuahua and the small brown dog,
for example. This approach does not do justice to gradable adjectives, whether they are
used in the base form, the superlative, or the comparative. Suppose, for example, one set
a fixed quantitative boundary, making the word large true of everything above it, and
false of everything below it. Then IA would tend to have little use for this property
at all since, presumably, every chihuahua would be small and every alsatian large,
making each of the combinations {large, chihuahua} (which denotes the empty set) and
{large,alsatian} (the set of all alsatians) useless. In other words, existing treatments of
gradables in GRE fail to take the “efficiency of language” into account (Barwise and
Perry 1983; see our Section 2).
</bodyText>
<page confidence="0.938706">
200
</page>
<bodyText confidence="0.481959">
van Deemter GRE with Gradable Properties
</bodyText>
<sectionHeader confidence="0.673266" genericHeader="method">
4. The Generation of Vague Descriptions
</sectionHeader>
<bodyText confidence="0.999933833333333">
We now turn to the question of how vague descriptions may be generated from nu-
merical data. We focus on semantic issues, postponing discussion of pragmatics until
Section 5, and linguistic realization until Section 6. We shall make occasional reference
to a PROLOG program called VAGUE, designed by Richard Power, which implements a
version of the algorithm described in this section. Code and documentation for VAGUE
can be found at http://www.csd.abdn.ac.uk/∼kvdeemte/vague.html.
</bodyText>
<subsectionHeader confidence="0.998712">
4.1 Expressing One Vague Property
</subsectionHeader>
<subsubsectionHeader confidence="0.74524">
4.1.1 Numerical Properties. We shall assume that gradable properties are stored in
</subsubsectionHeader>
<bodyText confidence="0.9856156">
the Knowledge Base (KB) as Attributes with (decimal) numerical Values, where the
numbers can be the result of physical measurements. We will sometimes speak of
these numerical Values as if they represented exact Values even though they typically
represent approximations.3 For concreteness, we shall take them to be of the form n cm,
where n is a positive real number. For example,
</bodyText>
<equation confidence="0.564436">
type = rodent, mouse
color = black, blue, yellow
size = 3 cm, 4 cm, ..., 10 cm.
</equation>
<bodyText confidence="0.993807666666667">
Making use of this KB, the IA is able to generate a description involving a list of
properties like L = {yellow, mouse, 9 cm}, for example, exploiting the Attribute size.
The result could be the NP The 9-cm yellow mouse, for example. The challenge formulated
in Section 1, however, is to avoid unnecessary precision by avoiding numerical values
unless they are necessary for the individuation of the target. This challenge will be
answered using a replacement strategy. Numerical Values such as 9 cm, in L, will be
replaced by a superlative Value (‘being the unique largest element of C’) whenever all
distractors happen to have a smaller size. This list can then be realized in several ways,
using either the superlative, the comparative, or the base form (e.g., the largest yellow
mouse, the larger yellow mouse, or the large yellow mouse).
4.1.2 Exploiting Numerical Properties, Singular. To (almost4) ensure that every descrip-
tion contains a property expressible as a noun, we shall assume that the type Attribute
is more highly preferred than all others. Suppose also, for now, that properties related
to size are less preferred than others. As a result, all other properties that turn up in the
NP are already in the list L when size is added. Suppose the target is c4:
</bodyText>
<equation confidence="0.999815333333333">
type(c1) = type(c2) = type(c3) = type(c4) = mouse
type(p5) = rat
size(c1) = 6 cm
</equation>
<footnote confidence="0.9705375">
3 The degree of precision of the measurement (James et al. 1996, Section 1.5) determines which objects can
be described by the GRE algorithm, since it determines which objects count as having the same size.
4 To turn this likelihood into a certainty, one can add a test at the end of the algorithm, which adds a
type-related property if none is present yet (cf., Dale and Reiter 1995). VAGUE uses both of these devices.
</footnote>
<page confidence="0.97028">
201
</page>
<note confidence="0.283092">
Computational Linguistics Volume 32, Number 2
</note>
<equation confidence="0.999396666666667">
size(c2) = 10 cm
size(c3) = 12 cm
size(c4) = size(p5) = 14 cm
</equation>
<bodyText confidence="0.9536995">
Since gradable properties are (for now at least) assumed to be dispreferred, the first
property that makes it into L is ‘mouse,’ which removes p5 from the context set. (Result:
C = {c1,...,c4}.) Now size is taken into account, and size(x) = 14 cm singles out c4.
The resulting list is
</bodyText>
<equation confidence="0.938644">
L = {mouse, 14 cm}
</equation>
<bodyText confidence="0.999347571428571">
This might be considered the end of the matter, since the target has been singled out. But
we are interested in alternative lists, to enable later modules to use gradable adjectives.
One way in which such a list can be computed is as follows. Given that 14 cm happens to
be the greatest size of any mouse, size(x) = 14 cm can be replaced, in L, by the property
of ‘being the sole object larger than all other elements of C’ (notation: size(x) = max1;
note that C is the set of mice). Since this property is only applicable because of the
properties earlier-introduced into L, it becomes essential that L is an ordered list:
</bodyText>
<equation confidence="0.982602">
L = (mouse, size(x) = max1) (‘the largest mouse’)
</equation>
<bodyText confidence="0.980822666666667">
4.1.3 Exploiting Numerical Properties, Plural. If plural descriptions were generated us-
ing the replacement strategy sketched above, it would be impossible to characterize sets
whose elements have different sizes. To make this possible, we have to use inequalities,
that is, Values of the form ‘&gt; α’ or ‘&lt; α’, instead of Values of the form ‘= α’. Therefore,
we compile the KB into a more elaborate form by replacing equalities by inequalities of
the form size(x) &gt; α or size(x) &lt; α. The new KB can be limited to relevant inequalities
only: for every n such that the old KB contains an equality of the form size(x) = n cm,
the new KB contains all those inequalities whose truth follows from the equalities in the
old KB. For example,
</bodyText>
<equation confidence="0.991533">
size(c4), size(p5) &gt; 12 cm
size(c3), size(c4), size(p5) &gt; 10 cm
size(c2), size(c3), size(c4), size(p5) &gt; 6 cm,
</equation>
<bodyText confidence="0.999817846153846">
where ‘size’ is an Attribute, ‘&gt; 12 cm’, ‘&gt; 10 cm’, and ‘&gt; 6 cm’ are Values, and c2, c3,
c4, c5, p5 are domain objects of which a given (Attribute, Value) combination is true. The
procedure is analogous to the treatment of negations and disjunctions in van Deemter
(2002): Properties that are implicit in the KB are made available for GRE.
The representation of inequalities is not entirely trivial. For one thing, it is conve-
nient to view properties of the form size(x) &lt; α as belonging to a different Attribute
than those of the form size(x) &gt; α, because this causes the Values of an Attribute to be
linearly ordered: Being larger than 12 cm implies being larger than 10 cm, and so on.
More importantly, it will now become normal for an object to have many Values for the
same Attribute; c4, for example, has the Values &gt; 6 cm, &gt; 10 cm, and &gt; 12 cm. Each of
these Values has equal status, so the notion of a basic-level Value cannot play a role (cf.,
Dale and Reiter 1995). If we abstract away from the role of basic-level Values, then Dale
and Reiter’s FindBestValue chooses the most general Value that removes the maximal
</bodyText>
<page confidence="0.90812">
202
</page>
<bodyText confidence="0.9848685">
van Deemter GRE with Gradable Properties
number of distractors, as we have seen. The problem at hand suggests a simpler ap-
proach that will always prefer logically stronger inequalities over logically weaker ones,
even when they do not remove more distractors.5 (Thus, size(x) &gt; m is preferred over
size(x) &gt; n iff m &gt; n; conversely, size(x) &lt; m is preferred over size(x) &lt; n iff m &lt; n.)
This is reflected by the order in which the properties are listed above: Once a size-
related property is selected, later size-related properties do not remove any distractors
and will therefore not be included in the description.
Let us return to our example. Suppose the target set S is {c3, c4}. The KB models
its two elements as having different sizes (12 cm and 14 cm, respectively), hence they
do not share a property of the form size(x) = α. They do, however, share the property
size(x) &gt; 10 cm. This property is exploited by IAPlur to construct the list
</bodyText>
<equation confidence="0.854708">
L1 = (mouse, &gt;10 cm),
</equation>
<bodyText confidence="0.999951">
first selecting the property ‘mouse,’ then the property size(x) &gt; 10 cm. (The property
size(x) &gt; 12 cm is attempted first but rejected.) Since L succeeds in distinguishing
the two target elements, it follows that they are the only mice greater than 10 cm.
Consequently, this inequality can be replaced by the property “being a set of cardinality
2, whose elements are larger than all others” (notation: size(x) = max2), leading to NPs
such as the largest (two) mice:
</bodyText>
<equation confidence="0.994001">
L2 = (mouse, size(x) = max2).
</equation>
<bodyText confidence="0.999438571428572">
Note that size(x) = max2 is true of a pair of mice: Strictly speaking, the step from L1 to L2
translates a distributive property (“being larger than 10 cm”) into a collective one. The
case in which the numeral is 1 corresponds with the singular (e.g., the largest mouse).
Optionally, we can go a step further and replace size(x) = max2 by the less specified
property size(x) = max, which abbreviates “being a set of cardinality greater than 1, all
of whose elements are larger than all other elements in C.” The result may be realized
as the largest mice.
</bodyText>
<equation confidence="0.959376">
L3 = (mouse, size(x) = max).
</equation>
<bodyText confidence="0.9438464">
4.1.4 Ordering of Properties. Even if comparative properties are at the bottom of the
preference order, while stronger inequalities precede weaker ones, the order is not fixed
completely. Suppose, for example, that the KB contains information about height as
well as width, then we have inequalities of the forms (a) height &gt; x, (b) height &lt; x, (c)
width &gt; x, and (d) width &lt; x. Which of these should come first? Hermann and Deutsch
(1976; also reported in Levelt 1989) show that greater differences are most likely to be
chosen, presumably because they are more striking. In experiments involving candles
of different heights and widths, if the referent is both the tallest and the fattest candle,
subjects tended to say ‘the tall candle’ when the tallest candle is much taller than all
others whereas the same candle is only slightly wider than the others; if the reverse is
the case, the preference switches to ‘the fat candle.’ Hermann and Deutsch’s findings
may be implemented as follows. First, the Values of the different Attributes should be
normalized to make them comparable. Second, preference order should be calculated
5 A statement p is logically stronger than q if p has q as a logical consequence (i.e., p �= q), whereas the
reverse is not true (i.e., q V p).
</bodyText>
<page confidence="0.987285">
203
</page>
<note confidence="0.29042">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.99848125">
dynamically (i.e., based on the current value of C, and taking the target into account),
preferring larger gaps over smaller ones. (It is possible, e.g., that width is most suitable
for singling out a black cat, but height for singling out a white cat.) The rest of the
algorithm remains unchanged.
</bodyText>
<subsubsectionHeader confidence="0.645318">
4.1.5 Beyond Content Determination (CD). Assuming the analysis of Section 2.1, the
</subsubsectionHeader>
<bodyText confidence="0.998430583333334">
n large mouse/mice is semantically equivalent to the n largest mouse/mice. Consequently,
there is no need to distinguish between the two at the level of CD. Representations like
the ones in L2 and L3 are neutral between the superlative and the base form. Pragmatic
constraints determine which of these expressions [the (n) largest, the (n) larger, the (n)
large] is most appropriate in a given situation (Section 5).
4.1.6 Inference. The replacement strategy, whereby one list of properties is transformed
into another, is essentially a simple kind of logical inference. L1 and L2, for instance, are
guaranteed to single out the same set, given that exactly two mice are larger than 10 cm;
given the content of the KB, the two lists are co-extensive. Once the numeral is dropped,
however, as in L3, there is real loss of information: L3 can be used for characterizing
a number of sets, including the one characterized by L2. In any case, the properties in
these lists are logically distinct, so the choice between them belongs to CD.
</bodyText>
<subsectionHeader confidence="0.998666">
4.2 Expressing Several Vague Properties
</subsectionHeader>
<bodyText confidence="0.999956333333333">
If the KB contains several gradable Attributes, a description can make use of several of
them, as in example (7). Even if only one gradable Attribute is represented, descriptions
may contain different adjectives, expressing opposites, as in example (8).
</bodyText>
<listItem confidence="0.8636275">
(7) The tallest two of the smallest three mice.
(8) The mice that are taller than 2 cm but shorter than 4 cm.
</listItem>
<bodyText confidence="0.938162555555556">
(The latter may be better expressed as the mice that are between 2 and 4 cm tall.) Let us see
how the algorithm of the previous sections can be extended to these cases.
4.2.1 Descriptions Using (In)equalities. When opposites are part of the KB, there is no
need for representing equalities separately, since they arise automatically, as combina-
tions of opposites. Every equality of the form ‘size(x) = m cm’ is equivalent to the com-
bination of a property of the form ‘size(x) &gt; i cm’ and one of the form ‘size(x) &lt; j cm.’
Given the content of the following KB, for example, saying that the size of an object is
between 6 and 12 cm amounts to saying that its size is 10 cm, and this is implemented
by adding appropriate transformations to the generator.
</bodyText>
<equation confidence="0.984963166666667">
size(c1) &lt; 10 cm
size(c1), size(c2) &lt; 12 cm
size(c1), size(c2), size(c3) &lt; 14 cm
size(c4), size(p5) &gt; 12 cm
size(c3), size(c4), size(p5) &gt; 10 cm
size(c2), size(c3), size(c4), size(p5) &gt; 6 cm
</equation>
<page confidence="0.923829">
204
</page>
<bodyText confidence="0.932421">
van Deemter GRE with Gradable Properties
Different measures have to be taken when several vague Attributes are involved. Sup-
pose height has these Values:
</bodyText>
<equation confidence="0.971690769230769">
height(c1) = 7 cm
height(p5) = 8 cm
height(c3) = 9 cm
height(c2) = height(c4) = 10 cm.
After recompiling these into the form of inequalities (reiterating types):
type(c1) = type(c2) = type(c3) = type(c4) = mouse
type(p5) = rat
height(c1) &lt; 8 cm
height(c1), height(p5) &lt; 9 cm
height(c1), height(c3), height(p5) &lt; 10 cm
height(c2), height(c4) &gt; 9 cm
height(c2), height(c3), height(c4) &gt; 8 cm
height(c2), height(c3), height(c4), height(p5) &gt; 7 cm
</equation>
<bodyText confidence="0.9997495">
Suppose the target set is {c2, c3}. The algorithm will first select the property mouse,
since crisp properties are more preferred than vague ones (Result: C = {c1, c2, c3, c4}).
The sequel depends on preference order. Omitting the property of being a mouse for
brevity, possible results include the following:
</bodyText>
<listItem confidence="0.9456695">
(a) La = (size &lt; 14 cm , height &gt; 8 cm), to be realized as, e.g., the mice
taller than 8 cm but smaller than 14 cm.
(b) Lb = (height &gt; 8 cm, size &gt; 6 cm, &lt; 14 cm), e.g., the mice that are taller
than 8 cm and sized between 6 and 14 cm.
</listItem>
<bodyText confidence="0.972382">
Analogous to Section 4.1, one might stop here. But there is scope here for logical
inference, even more so than before; likewise, there are pitfalls, more than before.
</bodyText>
<subsubsectionHeader confidence="0.863493">
4.2.2 Adjectives in Superlative and Base Form. To generate descriptions like the ones
</subsubsectionHeader>
<bodyText confidence="0.944239142857143">
in examples (7) and (8), we need to transform a comparative property into a superlative
property, moving from properties of the form ‘height &gt; x’ to properties of the form ‘the
tallest n.’ This can be done in different ways. For example, La may give rise to
(i) (size &lt; 14 cm, height(x) = max2),
(“The tallest two of the mice that are smaller than 14 cm”)
(ii) (size(x) = min3, height(x) = max2)
(“The tallest two of the smallest three mice”)
</bodyText>
<page confidence="0.977109">
205
</page>
<note confidence="0.285747">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.995401166666667">
Once we know which of these outcomes is preferable, the algorithm may be fine-tuned.
(If brevity is an issue, e.g., then one might let a generation program vary the preference
order used by the IA, then choose the outcome that is shortest.) The transformations
described so far rest on logical equivalence (modulo the KB). If numerals are omitted as
well, the result is usually no longer equivalent of course, and the description is at risk
of becoming almost entirely uninformative (e.g., L2):
</bodyText>
<equation confidence="0.9999695">
L1 = (size(x) = min3, height(x) = max)
L2 = (size(x) = min,height(x) = max)
</equation>
<bodyText confidence="0.9789465">
The algorithm outlined in this and the previous section can be summarized as follows:
GRE for Vague Descriptions (using IA):
</bodyText>
<listItem confidence="0.999157769230769">
1. Construct KB using Attributes and Values, assigning numerical Values to
Gradable Attributes.
2. Recompile the KB, replacing equalities by inequalities, for all gradable
Attributes.
3. Determine the preference order between the different groups of Attributes.
(A safe approach is to give all gradable Attributes lower preference than
all nongradable ones.)
4. Run IAPlur (Section 3.2), resulting in a list of properties that jointly identify
the target.
5. Apply inferences to the list of properties. For example, replace
combinations of inequalities by one exact Value; replace inequalities by
properties that involve a cardinality; and so on.
6. Perform linguistic realization (Section 6).
</listItem>
<bodyText confidence="0.997704">
If gradable properties are less preferred than crisp ones (point 3) then this algorithm will
only use gradable properties if an entirely crisp distinguishing description is impossible.
This may well cause gradable properties to be underused. For this and other reasons,
we shall consider non-incremental versions of these ideas in Section 8.
</bodyText>
<subsectionHeader confidence="0.999277">
4.3 Computational Complexity
</subsectionHeader>
<bodyText confidence="0.9998724">
We will examine the worst-case complexity of interpretation as well as generation to
shed some light on the hypothesis that vague descriptions are more difficult to process
than others because they involve a comparison between objects (Beun and Cremers
1998, Krahmer and Theune 2002). Before we do this, consider the tractability of the
original IA. If the running time of FindBestValue(r,Ai) is a constant times the number of
Values of the Attribute Ai, then the worst-case running time of IA (and IAPlur) is O(n77na),
where na equals the number of Attributes in the language and n77 the average number
of Values of all Attributes. This is because, in the worst case, all Values of all Attributes
need to be attempted (van Deemter 2002). As for the new algorithm, we focus on the
crucial phases 2, 4, and 5.
</bodyText>
<page confidence="0.944522">
206
</page>
<bodyText confidence="0.982957456521739">
van Deemter GRE with Gradable Properties
Phase 2: Recompilation of the KB forces one to compare all domain elements with each
other. This takes at most quadratic time (i.e., O(n2), where n is the number of elements
in the domain). This can be done off-line, once and for all.
Phase 4: Content Determination. The initial list of properties, which contains inequal-
ities (e.g., L = (mouse &gt; 5 cm)), is calculated by IAPlur. The algorithm has to take more
Attribute/Value pairs into account as a result of the recompilation of the KB, but this
does not change its theoretical complexity (using nv and na as variables): It is O(nvna).
Phase 5: Inference. The only inference step described so far replaces an inequality (e.g.,
height &gt; n cm) by a “superlative” property (e.g., height = max2). This step requires
no computation to speak of: For any given inequality that appears in the description,
the value of m can be read off the input to the generator in O(nd) steps, where nd is the
number of distractors. (This comes down to counting the number of elements in the
extension of the inequality.) Therefore, if the number of inequalities in the description is
ni then the complexity is O(ndni).
Thus, the complexity of GRE in the gradable case is determined by three steps: The
first is quadratic and can be performed off-line, the second has a worst-case running
time of O(nvna), and the third one has a worst-case running time of O(ndni). Thus,
gradable GRE takes only polynomial time, and if we focus on the part that cannot be
done off-line, it takes only linear time. In other words, gradable GRE does take more
time than nongradable GRE, but the difference seems modest.
The intuition that vague descriptions are more difficult than others is also confirmed
(though again only to a modest extent) when we focus on the hearer. First, consider a
non-vague description consisting of a combination of n properties, P1,..., Pn. To discover
its referent, the denotation of the Boolean expression P1 n .. n Pn needs to be calculated,
which takes just n−1 calculations of the form
Intersect IIP1II n ... n IIPi−1II (a set that has been computed already)
with IIPiII (the extension of the next property in the description).
If computing the intersection of two sets takes constant time then this makes the com-
plexity of interpreting non-vague descriptions linear: O(nd), where nd is the number of
properties used. In a vague description, the property last added to the description is
context dependent. Worst case, calculating the set corresponding with such a property,
of the form size(x) = maxm, for example, involves sorting the distractors as to their
size, which may amount to O(n2d) or O(nd log nd) calculations (depending on the sorting
algorithm: cf. [Aho et al. 1983] Chapter 8). Once again, the most time-consuming
part of the calculation can be performed off-line, since it is the same for all referring
expressions.
Thus, the worst-case time complexity of interpretation is as follows: The part that can
be computed off-line takes O(nd log nd) calculations. The part that has to be computed
for each referring expression separately takes O(nd) calculations. Once again, there is a
difference with the nongradable case, but the difference is modest, especially regarding
the part that cannot be done off-line. One should bear in mind that worst-case theo-
retical complexity is not always a good measure of the time that a program takes in
the kinds of cases that occur most commonly, let alone the difficulty for a person. For
example, it seems likely that hearers and speakers will have most difficulty dealing with
differences that are too small to be obvious (e.g., two mice that are very similar in size).
</bodyText>
<page confidence="0.981053">
207
</page>
<note confidence="0.544927">
Computational Linguistics Volume 32, Number 2
</note>
<sectionHeader confidence="0.9226" genericHeader="method">
5. Pragmatic Constraints
</sectionHeader>
<bodyText confidence="0.99909280952381">
NLG has to do more than select a distinguishing description (i.e., one that unambigu-
ously denotes its referent; Dale 1989): The selected expression should also be felicitous.
Consider the question, discussed in the philosophical logic literature, of whether it is
legitimate, for a gradable adjective, to distinguish between “observationally indifferent”
entities: Suppose two objects x and y, are so similar that it is impossible to distinguish
their sizes; can it ever be reasonable to say that x is large and y is not? A positive
answer would not be psychologically plausible, since x and y are indistinguishable;
but a negative answer would prohibit any binary distinction between objects that are
large and objects that are not, given that one can always construct objects x and y, one of
which falls just below the divide while the other falls just above it. This is the strongest
version of the sorites paradox (e.g., Hyde 2002).
Our approach to vague descriptions allows a subtle response: that the offending
statement may be correct yet infelicitous. This shifts the problem from asking when
vague descriptions are “correct” to the question of when they are used felicitously.
Felicity is naturally thought of as a gradable concept. There is therefore no need for a
generator to demarcate precisely between felicitous and infelicitous expressions, as long
as all the utterances generated are felicitous enough. When in doubt, a generator should
avoid the expression in question. If x and y are mice of sizes 10 and 9.9 cm, for example,
then it is probably better to describe x as the largest mouse than as the large mouse.
Prior to carrying out the experiments to be reported in Section 7, we believed that
the following constraints should be taken into account:
</bodyText>
<figureCaption confidence="0.5814089">
Small Gaps. Expressions of the form the (n) large [N] are infelicitous when the gap
between (1) the smallest element of the designated set S (henceforth, s−) and (2) the
largest N smaller than all elements of S (henceforth, s+) is small in comparison with the
other gaps (Thorisson 1994; Funakoshi et al. 2004). If this gap is so small as to make the
difference between the sizes of s− and s+ impossible to perceive, then the expression is
also infelicitous.
Dichotomy. When separating one single referent from one distractor, the comparative
form is often said to be favored (Use the comparative form to compare two things). We
expected this to generalize to situations where all the referents are of one size, and all
the distractors of another.
</figureCaption>
<bodyText confidence="0.996301866666667">
Minimality. Unless Small Gaps and Dichotomy forbid it, we expected that preference
should be given to the base form. In English, where the base form is morphologically
simpler than the other two, this rule could be argued to follow from Gricean principles
(Grice 1975).
To keep matters simple, linguistic realization could choose the base form if and only if
the gap between s− and s+ surpasses a certain value, which is specified interactively by
the user. (This approach was chosen for the VAGUE program.)
As for the presence/absence of the numeral in the description, there appear to be
different “believable” patterns of linguistic behavior. A cautious generator might only
omit the numeral when the pragmatic principles happen to enforce a specific extension
(e.g., the large mice, when the mice are sized 3, 2.8, 2.499, and 2.498 cm). This would allow
the generator to use vague expressions, but only where they result in a description that
is itself unambiguous.
We shall see in Section 7 that it has not been easy to confirm the pragmatic con-
straints of the present section experimentally.
</bodyText>
<page confidence="0.954885">
208
</page>
<bodyText confidence="0.459717">
van Deemter GRE with Gradable Properties
</bodyText>
<sectionHeader confidence="0.865696" genericHeader="method">
6. Linguistic Realization
</sectionHeader>
<bodyText confidence="0.8301600625">
Some recent GRE algorithms have done away with the separation between content de-
termination and linguistic realization, interleaving the two processes instead (Stone and
Webber 1998; Krahmer and Theune 2002). We have separated the two phases because,
in the case of vague descriptions, interleaving would tend to be difficult. Consider, for
instance, the list of properties L = (size &gt; 3 cm, size &lt; 9 cm). If interleaving forced
us to realize the two properties in L one by one, then it would no longer be possible to
combine them into, for example, the largest mouse but one (if the facts in the KB support
it), or even into the mice between 3 and 9 cm (since size &gt; 3 cm is realized before size
&lt; 9 cm). Clearly, sophisticated use of gradable adjectives requires a separation between
CD and linguistic realization, unless one is willing to complicate linguistic realization
considerably.
Having said this, the distinction between CD and linguistic realization is not always
easy to draw. We propose to think of it as separating the language-independent, logical
aspect of referring expressions generation from its language-dependent, linguistic as-
pect. Our algorithm suggests a distinction into three phases, the first two of which can
be thought of as part of CD:
</bodyText>
<listItem confidence="0.98351175">
1. CD proper, that is, the production of a distinguishing list of properties L;
2. An inference phase, during which the list L is transformed;
3. A realization phase, during which the choice between base, superlative,
and comparative forms is made, among other things.
</listItem>
<bodyText confidence="0.999385842105263">
One area of current interest concerns the left-to-right arrangement of premodifying
adjectives within an NP (e.g., Shaw and Hatzivassiloglou 1999; Malouf 2000). Work
in this area is often based on assigning adjectives to a small number of categories
(e.g., Precentral, Central, Postcentral, and Prehead), which predict adjectives’ relative
position. Interestingly, vague properties tend to be realized before others. Quirk et al.
(1985), for example, report that “adjectives denoting size, length, and height normally
precede other nonderived adjectives” (e.g., the small round table is usually preferred to
the round small table).
Semantically, this does not come as a surprise. In a noun phrase of the form the three
small(-est) [N], for example, the words preceding N select the three smallest elements of
[N]. It follows that, to denote the three smallest elements of the set of round tables, the
only option is to say the three small round tables, rather than the three round small tables.
The latter would mean something else, namely, the three round ones among the n small(est)
tables (where n is not specified). It actually seems quite possible to say this, but only
when some set of small tables is contextually salient (e.g., I don’t mean those small tables,
I mean the three round ones). Given that n is unspecified, the noun phrase would tend to
be very unclear in any other context.
The VAGUE program follows Quirk’s rule by realizing gradable properties before
nongradable ones, choosing some simple (and sometimes stilted) syntactic patterns.
</bodyText>
<sectionHeader confidence="0.925475" genericHeader="method">
7. Empirical Grounding
</sectionHeader>
<bodyText confidence="0.9986355">
A full validation of a GRE program that generates vague descriptions would address
the following questions: (1) When is it natural to generate a vague description (i.e., a
</bodyText>
<page confidence="0.987926">
209
</page>
<note confidence="0.490622">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.9996594">
qualitative description as opposed to a purely quantitative one)? (2) Given that a vague
description is used, which form of the description is most natural? and (3) Are the
generated descriptions properly understood by hearers and readers? Much is unknown,
but we shall summarize the available results in these three areas very briefly, referring
readers to the literature for details.
</bodyText>
<subsectionHeader confidence="0.996781">
7.1 Human Speakers’ Use of Vague Descriptions
</subsectionHeader>
<bodyText confidence="0.998192694444445">
Common sense (as well as the Gricean maxims; Grice 1975) suggests that vague de-
scriptions are preferred by speakers over quantitative ones whenever the additional
information provided by a quantitative description is irrelevant to the purpose of the
communication. We are not aware of any empirical validation of this idea, but the fact
that vague descriptions are frequent is fairly well documented. Dale and Reiter (1995),
for example, discussed the transcripts of a dialogue between people who assemble
a piece of garden furniture (originally recorded by Candy Sidner). They found that,
while instructional texts tended to use numerical descriptions like the 31 4” bolt, human
assemblers “unless they were reading or discussing the written instructions, in all cases used
relative modifiers, such as the long bolt” (Dale and Reiter 1995).6
Our own experiments (van Deemter 2004) point in the same direction. In one ex-
periment, for example, 34 students at the University of Brighton were shown six pieces
of paper, each of which showed two isosceles and approximately equilateral triangles.
Triangles of three sizes were shown, with bases of 5, 8, and 16 mm respectively. On
each sheet, one of the two triangles had been circled with a pencil. We asked subjects to
imagine themselves on the phone to someone who held a copy of the same sheet, but
not necessarily with the same orientation (e.g., possibly upside down), and to complete
the answers in the following:
Q: Which triangle on this sheet
was circled?
A: The triangle.
This setup was used for testing a number of hypotheses. What is relevant for current
purposes is that all except one subject used qualitative size-related descriptions (the big
triangle, the largest triangle, etc.) in the majority of cases. As many as 27 of the 34 subjects
used such descriptions in all cases.
It seems likely that qualitative descriptions would be less frequent if speakers
were offered an easy way to determine the relevant measurements (e.g., if a ruler was
provided). As it was, subjects went for the easy option, relying on a comparison of sizes
rather than on an estimation of their absolute values. Further experiments are needed
before we can say with more confidence under what circumstances vague descriptions
are favored over absolute ones.
It is normally perhaps unlikely that people produce language on the basis of the
kind of numerical representations that our algorithm has used as input. Although psy-
chological plausibility is not our aim, it is worth noting that the inequalities computed
as step 2 of the algorithm of Section 4 might be psychologically more plausible, since
they are essentially no more than comparisons between objects.
</bodyText>
<page confidence="0.67003">
6 Presumably, Beun and Cremers (1998) found vague adjectives to be rare because, in their experiments,
</page>
<bodyText confidence="0.445487">
referents could always be identified using nongradable dimensions.
</bodyText>
<page confidence="0.983648">
210
</page>
<bodyText confidence="0.577324">
van Deemter GRE with Gradable Properties
</bodyText>
<subsectionHeader confidence="0.996338">
7.2 Testing the Correctness of the Generated Expressions
</subsectionHeader>
<bodyText confidence="0.997129043478261">
Sedivy et al. (1999) asked subjects to identify the target of a vague description in a visual
scene. Consider the tall cup. The relevant scene would contain three distractors: (1) a less
tall object of the same type as the target (e.g., a cup that is less tall), (2) a different kind
of object that previous studies had shown to be intermediate in height (e.g., a pitcher
that, while being taller than both cups, was neither short nor tall for a pitcher), and (3)
a different type of object to which the adjective is inapplicable (e.g., a door key). Across
the different conditions under which the experiment was done (e.g., allowing subjects
to study the domain before or after the onset of speech), it was found not to matter
much whether the adjective applied ‘intrinsically’ to the target object (i.e., whether the
target was tall for a cup): Hearers identifed the target without problems in both types
of situations. The time subjects took before looking at the target for the first time was
measured, and although these latency times were somewhat greater when the referent
were not intrinsically tall than when they were, the average difference was tiny at 554
versus 538 miliseconds. Since latency times are thought to be sensitive to most of the
problems that hearers may have in processing a text, these results suggest that, for
dimensional adjectives, it is forgivable to disregard global context.
To get an idea of whether our plural descriptions are understood correctly by human
readers, we showed subjects sequences of numbers, exactly two of which appeared in
brackets, along with the following instructions:
Suppose you want to inform a hearer *which numbers in
a given list appear in brackets*, where the hearer
knows what the numbers are, but not which of them appear
in brackets. Forexample, the hearer knows that the
</bodyText>
<equation confidence="0.7753885">
list is
1 2 1 7 7 1 1 3 1
</equation>
<bodyText confidence="0.9609265">
You, as a speaker, know that only the two occurrences
of the number 7 appear in brackets:
</bodyText>
<equation confidence="0.924872">
1 2 1 (7) (7) 1 1 3 1
</equation>
<bodyText confidence="0.999623222222222">
Our question to you is: Would it be *correct* to convey
this information by saying “The two high numbers appear
in brackets”?
The outcomes of the experiment suggested that readers understand plural vague de-
scriptions in accordance with the semantics of Section 2 (van Deemter 2000). In other
words, they judged the description to be correct if and only if the two highest numbers
in the sequence appeared in brackets.
Assessing the evidence, it seems that vague descriptions are largely unproblematic
from the point of view of interpretation.
</bodyText>
<subsectionHeader confidence="0.985899">
7.3 Testing the Felicity of the Generated Expressions
</subsectionHeader>
<bodyText confidence="0.998915">
How can we choose between the different forms that a vague description can take?
Reiter and Sripada (2002) showed that the variation in corpora based on expert authors
</bodyText>
<page confidence="0.994581">
211
</page>
<note confidence="0.328806">
Computational Linguistics Volume 32, Number 2
</note>
<listItem confidence="0.8970836">
can be considerable, especially in their use of vague expressions (e.g., by evening, by late
evening, around midnight). We confirmed these findings using experiments with human
subjects (van Deemter 2004), focusing on the choice between the different forms of the
adjective. Informally:
1. The dichotomy constraint of Section 5 did not hold up well: Even when
comparing two things, the superlative form was often preferred over the
comparative.
2. When base forms were used, the gap was almost invariably large.
3. Yet, the Minimality constraint of Section 5 turned out to be difficult to
confirm: Even when the gap was large, base forms were often dispreferred.
</listItem>
<bodyText confidence="0.999680571428571">
The validity of these results can be debated (van Deemter 2004) but, taking them at face
value, one could base different generation strategies on them. For example, one might
use the superlative all the time, since this was—surprisingly—the most frequent form
overall. Based on point (2), however, one might also defend using the base form when-
ever the gap is large enough (as was done in the VAGUE program). Future experiments
should allow us to refine this position, perhaps depending on factors such as genre,
communicative goal, and type of audience.
</bodyText>
<listItem confidence="0.570431">
8. Incrementality: Help or Hindrance?
</listItem>
<bodyText confidence="0.924648571428571">
The account sketched in Section 4 was superimposed on an incremental GRE algorithm,
partly because incrementality is well established in this area (Appelt 1985; Dale and
Reiter 1995). But IA may be replaced by any other reasonable7 GRE algorithm, for
example, one that always exactly minimizes the number of properties expressed, or
one that always “greedily” selects the property that removes the maximum number of
distractors. Let G be any such GRE algorithm, then we can proceed as follows:
GRE for Vague Descriptions (version not relying on IA):
</bodyText>
<listItem confidence="0.99636175">
1. Construct KB using Attributes and Values, assigning numerical Values to
gradable Attributes.
2. Recompile the KB, replacing equalities by inequalities.
3. Let G deliver an unordered set of properties which jointly distinguish the
target if such a set exists. (One or more of these properties may be
inequalities.)
4. Impose a linear ordering on the properties produced by (3). (If one wishes
to generate the same descriptions as in Sections 4.1 and 4.2, then
</listItem>
<bodyText confidence="0.634222">
inequalities go last.) Delete any inequalities that do not remove any
distractors.
</bodyText>
<footnote confidence="0.796700333333333">
7 Concretely, we require of a reasonable GRE algorithm that it avoid combining logically comparable
inequalities, such as size(x) &gt; 10 and size(x) &gt; 20, inside one description. All GRE algorithms
that we know of fulfill this requirement.
</footnote>
<page confidence="0.995967">
212
</page>
<listItem confidence="0.875246666666667">
van Deemter GRE with Gradable Properties
5. Apply inferences (in the style of Section 4.1) to the list of properties.
6. Perform linguistic realization.
</listItem>
<bodyText confidence="0.998103428571429">
Imposing a linear order (4) is a necessary preparation for (5) because the super-
lative properties resulting from (5), unlike the inequalities resulting from (4), are
context dependent. For example, (mouse, size(x) = max2) (the largest two mice,
{c3,c4}) does not equal (size(x) = max2, mouse) (the mouse among the largest two
elements, {c4}). Deletion of superfluous inequalities avoids saying, for example, the
short(est) black mouse if there is only one black mouse, because this might invite false
implicatures.
</bodyText>
<subsectionHeader confidence="0.996244">
8.1 Problems with Incrementality
</subsectionHeader>
<bodyText confidence="0.999947904761905">
While IA is generally thought to be consistent with findings on human language pro-
duction (Hermann and Deutsch 1976; Levelt 1989; Pechmann 1989; Sonnenschein 1982),
the hypothesis that incrementality is a good model of human GRE seems unfalsifiable
until a preference order is specified for the properties on which it operates. (Wildly
redundant descriptions can result if the ‘wrong’ preference order are chosen.) We shall
see that vague descriptions pose particular challenges to incrementality.
One question emerges when the IA is combined with findings on word order and
incremental interpretation. If human speakers and/or writers perform CD incrementally,
then why are properties not expressed in the same order in which they were selected?
This question is especially pertinent in the case of vague expressions, since gradable
properties are selected last, but realized first (Section 6). This means that the linguistic
realization cannot start until CD is concluded, contradicting eye-tracking experiments
suggesting that speakers start speaking while still scanning distractors (Pechmann
1989). A similar problem is discussed in the psycholinguistics of interpretation (Sedivy
et al. 1999): Interpretation is widely assumed to proceed incrementally, but vague de-
scriptions resist strict incrementality, since an adjective in a vague description can only
be fully interpreted when its comparison set is known. Sedivy and colleagues resolve
this quandary by allowing a kind of revision, whereby later words allow hearers to
refine their interpretation of gradable adjectives. Summarizing the situation in gener-
ation and interpretation, it is clear that the last word on incrementality has not been
said.
</bodyText>
<subsectionHeader confidence="0.996871">
8.2 Low Preference for Gradable Properties?
</subsectionHeader>
<bodyText confidence="0.999982666666667">
It has been argued that, in an incremental approach, gradable properties should be
given a low preference ranking because they are difficult to process (Krahmer and
Theune 2002). We have seen in Section 4.3 that generation and interpretation of vague
descriptions does have a slightly higher computational complexity than that of non-
vague descriptions. Yet, by giving gradable properties a low ranking, we might cause
the algorithm to underuse them, for example, in situations where gradable properties
are highly relevant to the purpose of the discourse (e.g., a fist fight between people of
very different sizes). Luckily, there are no semantic or algorithmic reasons for giving
gradables a low ranking. Let us see how things would work if they were ranked more
highly.
Suppose comparative properties do not go to the end of the preference list. After
transformation into superlative properties, this alternative preference ranking could
</bodyText>
<page confidence="0.996596">
213
</page>
<note confidence="0.499195">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.998684">
lead to a list like (mouse, size(x) = min4, brown, weight(x) = max2), where two or-
dinary properties are separated by a superlative one. A direct approach to realization
might word this as the two heaviest brown ones among the smallest four mice. To avoid such
awkward expressions, one can change the order of properties after CD (mirroring step
4 above), moving the inequalities to the end of the list before they are transformed into
the appropriate superlatives. The effect would be to boost the number of occurrences of
gradable properties in generated descriptions while keeping CD incremental.
</bodyText>
<sectionHeader confidence="0.739492" genericHeader="method">
9. Extensions of the Approach
9.1 Relational Descriptions
</sectionHeader>
<bodyText confidence="0.9998036">
Some generalizations of our method are fairly straightforward. For example, consider
a relational description (cf., Dale and Haddock 1991) involving a gradable adjective, as
in the dog in the large shed. CD for this type of descriptions along the lines of Section 4 is
not difficult once relational descriptions are integrated with a standard GRE algorithm
(Krahmer and Theune 2002, Section 8.6.2): Suppose an initial description is generated
describing the set of all those dogs that are in sheds over a given size (say, size 5); if this
description happens to distinguish an individual dog then this legitimizes the use of the
noun phrase the dog in the large shed. Note that this is felicitous even if the shed is not
the largest one in the domain, as is true for d2 in the following situation (contains-a=b
means that a is contained by b):
</bodyText>
<equation confidence="0.9997324">
type(d1) = type(d2) = dog
type(c) = cat
type(s1) = type(s2) = type(s3) = shed
size(d1) = size(d2) = size(c) = 1m
size(s1) = 3m
size(s2) = 5m
size(s3) = 6m
contains-d1 = s1
contains-d2 = s2
contains-c = s3
</equation>
<bodyText confidence="0.996562">
In other words, the dog in the large shed denotes ‘the dog such that there is no other shed
that is equally large or larger and that contains a dog’. Note that it would be odd, in the
above-sketched situation, to say the dog in the largest shed.
</bodyText>
<subsectionHeader confidence="0.995469">
9.2 Boolean Combinations
</subsectionHeader>
<bodyText confidence="0.9650715">
Generalizations to complex Boolean descriptions involving negation and disjunction
(van Deemter 2004) appear to be largely straightforward, except for issues to do with
</bodyText>
<page confidence="0.980528">
214
</page>
<bodyText confidence="0.640362666666667">
van Deemter GRE with Gradable Properties
opposites and markedness. For example, the generator will have to decide whether to
say the patients that are old or the patients that are not young.
</bodyText>
<subsectionHeader confidence="0.992018">
9.3 Multidimensionality
</subsectionHeader>
<bodyText confidence="0.989173375">
9.3.1 Combinations of Adjectives. When objects are compared in terms of several
dimensions, these dimensions can be weighed in different ways (e.g., Rasmusen 1989).
Let us focus on references to an individual referent r, starting with a description that
contains more than one gradable adjective. The NP the tall fat giraffe, for example,
can safely refer to an element b in a situation like the one below, where b is the only
element that exceeds all distractors with respect to some dimension (a different one
for a than for c, as it happens) while not being exceeded by any distractors in any
dimension:
</bodyText>
<equation confidence="0.99995925">
height(a) = 5 m
height(b) = height(c) = 15 m
width(a) = width(b) = 3 m
width(c) = 2 m
</equation>
<bodyText confidence="0.999158333333333">
Cases like this would be covered if the decision-theoretic property of Pareto optimality
(e.g., Feldman 1980) was used as the sole criterion: Formally, an object r E C has a
Pareto-optimal combination of Values V iff there is no other x E C such that
</bodyText>
<listItem confidence="0.993158">
1. ]Vi E V : Vi(x) &gt; Vi(r) and
2. -]Vj E V : Vj(x) &lt; Vj(r)
</listItem>
<bodyText confidence="0.99635565">
In our example, b is the only object that has a Pareto-optimal combination of Values,
predicting correctly that b can be called the tall fat giraffe. It seems likely, however, that
people use doubly graded descriptions more liberally. For example, if the example is
modified by letting width(a) = 3.1 m, making a slightly fatter than b, then b might still
be the only reasonable referent of the tall fat giraffe. Many alternative strategies are pos-
sible. The Nash arbitration plan, for example, would allow a doubly graded description
whenever the product of the Values for the referent r exceeds that of all distractors (Nash
1950; cf. Gorniak and Roy 2003; Thorisson 1994, for other plans).
9.3.2 Multidimensional Adjectives (and Color). Multidimensionality can also slip in
through the backdoor. Consider big, for example, when applied to 3D shapes. If there
exists a formula for mapping three dimensions into one (e.g., length x width x height)
then the result is one dimension (overall-size), and the algorithm of Section 4 can be
applied verbatim. But if big is applied to a person then it is far from clear that there is one
canonical formula for mapping the different dimensions of your body into one overall
dimension, and this complicates the situation. Similar things hold for multifaceted
properties like intelligence (Kamp 1975).
Color terms are a case apart. If color is modeled in terms of saturation, hue, and lumi-
nosity, for instance, then an object a may be classified as greener than b on one dimension
(e.g., saturation), but less green than b on another (e.g., hue). This would considerably
complicate the application of our algorithm to color terms, which is otherwise mostly
</bodyText>
<page confidence="0.995933">
215
</page>
<note confidence="0.600805">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.9999435">
straighforward (Section 9.3). (The green chair, said in the presence of two greenish chairs,
would refer to the one that is closest to prototypical green.) A further complication
is that different speakers can regard very different values as prototypical, making it
difficult to assess which of two objects is greener even on one dimension (Berlin and Kay
1969, pages 10–12). (Ideally, GRE should also take into account that the meaning of color
words can differ across different types of referent. Red as in red hair, e.g., differs from
red as in red chair.)
Different attitudes towards multidimensionality are possible. One possibility is to
be cautious and to keep aiming for distinguishing descriptions in the strict sense. In
this case, the program should limit the use of vague descriptions to situations where
there exists a referent that has a Pareto-optimal combination of Values. Alternatively,
one could allow referring expressions to be ambiguous. It would be consistent with this
attitude, for example, to map multiple dimensions into one overall dimension, perhaps
by borrowing from principles applied in perceptual grouping, where different perceptual
dimensions are mapped into one (e.g., Thorisson 1994). The empirical basis of this line
of work, however, is still somewhat weak, so the risk of referential unclarity looms large.
Also, this attitude would go against the spirit of GRE, where referring expressions have
always been assumed to be distinguishing.
</bodyText>
<subsectionHeader confidence="0.991667">
9.4 Salience as a Gradable Property
</subsectionHeader>
<bodyText confidence="0.999578866666667">
We shall see that a natural treatment of salience falls automatically out of our treatment
of vague descriptions. As we shall see, this will allow us to simplify the structure of GRE
algorithms, and it will explain why many definite descriptions that look as if they were
distinguishing descriptions are actually ambiguous.
9.4.1 A New Perspective on Salience. Krahmer and Theune (2002) have argued that
Dale and Reiter’s (1995) dichotomy between salient and nonsalient objects (where the
objects in the domain are the salient ones) should be replaced by an account that takes
degrees of salience into account: No object can be too unsalient to be referred to, as long
as the right properties are available. In effect, this proposal (which measured salience
numerically) analyzes the black mouse as denoting the unique most salient object in the
domain that is both black and a mouse. Now suppose we let GRE treat salience just like
other gradable Attributes. Suppose there are ten mice, five of which are black, whose
degrees of salience are 1, 1, 3, 4, and 5 (the last one being most salient), while the other
objects in the domain (cats, white mice) all have a higher salience. Then our algorithm
might generate this list of properties:
</bodyText>
<equation confidence="0.808849">
L = (mouse, black, salience &gt; 4).
</equation>
<bodyText confidence="0.999849875">
This is a distinguishing description for the black mouse whose salience is 5: the most
salient black mouse. The simpler description the black mouse can be derived by stipulating
that the property of being most salient can be left implicit in English. The salience
Attribute has to be taken into account by CD, however, and this can be ensured in various
ways. For example, instead of testing whether C n [(Ai, Vi)] = Jr}, one tests whether r
is the most salient element of C n [(Ai, Vi)]. Alternatively, the algorithm might proceed
as usual, performing the usual test (involving C n [(Ai,Vi)] = Jr}) but starting with
a reduced domain, consisting of the things that are at least as salient as the target r:
</bodyText>
<page confidence="0.980424">
216
</page>
<bodyText confidence="0.97905558974359">
van Deemter GRE with Gradable Properties
Domain := {x E Domain: salience(x) ≥ r}. The two approaches are equivalent in many
situations.
9.4.2 Salience + Plurality = Ambiguity. It is now easy to see why plural descriptions
are often ambiguous. Taking salience into account as suggested above, the singular the
black mouse can only refer to the most salient mouse. But the mice can refer to the most
salient two (sized 5 and 4), the most salient three (sized 5, 4, and 3), or to all of them. To
disambiguate the description, something like a number can be used (e.g., the two mice),
just as in the case of vague descriptions.
When salience is combined with other gradable notions, the likelihood of unclarity
is even greater. Consider the large(st) dog. Our analysis predicts ambiguity when size
and salience do not go hand in hand.
Type: d1 (dog), d2 (dog), d3 (dog), d4 (dog), c5 (cat)
Size: d1 (20 cm), d2 (50 cm), d3 (70 cm), d4 (60 cm), c5 (50 cm)
Salience: d1 (6), d2 (4), d3 (3), d4 (5), c5 (6).
If we are interested in the three most salient dogs (d1, d2, and d4) then the large(est) dog
designates d4, but if we are interested in the four most salient ones (d1, d2, d3, and d4),
then it designates d3, for example. In other words, the description is ambiguous between
d3 and d4, depending on whether we attach greater importance to salience or size. This
is borne out by our generation algorithm. Consider the simpler of the two treatments of
salience, for example, which starts out with a reduced domain. If d4 is the target then the
reduced domain (consisting of all things at least as salient as the target) is {d1, d2, d4, c5};
dog narrows this down to {d1,d2,d4}, after which size = max1 generates the large dog.
But if d3 is the target then the same procedure applies, this time starting with the full
domain (since no element is less salient that d3) and the same description is generated
to refer to a different animal. For a reader, clearly, salience and gradable adjectives are
a problematic combination. This should come as no surprise, since salience itself is a
gradable property, and combinations of gradable properties are always problematic, as
we have seen in the previous section.
9.4.3 Salience as a Multidimensional Property. Note that salience itself is multidimen-
sional. Consider two people talking about the railway station, when one railway station
is near but of only minor importance (e.g., only few trains stop there), while another is
further afield but of greater significance for travel. In such a situation, it can be unclear
which of the two railway stations is intended. Without more empirical research, we
cannot know how people combine salience with other dimensions.
GRE has usually assumed that distinguishing descriptions are the norm, but once
salience is taken into account (especially in combination with plurals and/or other
gradable dimensions) it becomes difficult to generate descriptions that are immune to
being misunderstood.
</bodyText>
<subsectionHeader confidence="0.935489">
9.5 Beyond Vague Descriptions: Nouns, and Pointing
</subsectionHeader>
<bodyText confidence="0.973176">
9.5.1 Nouns. Two other generalizations are worth mentioning. The first involves a
class of descriptions that do not involve any overt gradable adjectives. Color terms,
for example (cf., Section 9.1), are applicable to different degrees, and the same is true
</bodyText>
<page confidence="0.990238">
217
</page>
<note confidence="0.598404">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.996703">
for many other nouns, such as girl, which involves a vaguely defined age. Similar
claims can be made about less obvious cases. Consider a gathering containing one
famous professor (a), one junior lecturer (b), one Ph.D. student (c), and a policewoman
(e). Then the word academic might denote (a), but also (b) or (c). Accordingly, each
of the following referring expressions appears viable, mirroring examples 3 and 4 of
Section 2:
</bodyText>
<listItem confidence="0.998839">
1. the academic (Can only refer to a)
2. both academics (Can only refer to {a, b})
3. the three academics (Can only refer to {a, b, c})
</listItem>
<bodyText confidence="0.998713">
These descriptions are easily generated on the basis of a KB that involves Values rep-
resenting degrees of being an academic, the more so because our approach generalizes
to ordinal measurements (except for Small Gaps (Section 5), which requires an inter-
val or ratio scale, since it involves an assessment of the size of the gap between
Values). Note that this treatment could cover all those nouns that are used with various
degrees of strictness. It is difficult to say how many nouns fall in this category, but the
phenomenon is believed to be widespread. This is, for example, one of the central tenets
of Prototype Theory (Rosch 1975). An uncomfortable consequence of these observations
is that it is no longer obvious which words denote a crisp property, and which a gradable
property. (For example, it is not clear whether GRE should treat academic as gradable.)
9.5.2 Pointing. To show that vagueness is also inherent in multimodal communication,
imagine the same gathering, but with some more people present. Suppose someone
points at the centre of the gathering. (See below, where W denotes women.) If the distance
between pointer and pointee is considerable then the boundaries of the region pointed
to are not exactly defined: e is definitely pointed at, but d and f might be doubtful:
</bodyText>
<figure confidence="0.810301333333333">
[W] [W] [W] [W]
a b c d e f g h i
   |
</figure>
<bodyText confidence="0.999835">
Here, {e} is a possible referent, and so are {d, e,f } and perhaps {c, d, e,f, g}. The set {d,f }
is not, since there is a gap between its two elements. If precise pointing is represented
as a crisp property whose denotation equals the set of elements pointed at (Krahmer
and Van der Sluis 2003), then vague pointing can be incorporated in our algorithm
by representing it by a gradable property: We let the generator use a KB that involves
numerical degrees of being pointed at, where this degree is highest for e, next highest
for d and f, and so on. If this is done, the generator can generate these two women, along
with a pointing gesture like the one in our example, to refer to {e, f }. No changes to
the algorithm of Section 4 are necessary. A variant of this approach arises if pointing
is modeled as a way of establishing degrees of salience (i.e., the closer to the center of
pointing, the higher the value for the attribute SALIENCE) in the style of Section 9.2.
</bodyText>
<page confidence="0.97683">
218
</page>
<bodyText confidence="0.381317">
van Deemter GRE with Gradable Properties
</bodyText>
<sectionHeader confidence="0.613355" genericHeader="conclusions">
10. Conclusion
</sectionHeader>
<bodyText confidence="0.999425416666667">
If the usefulness of NLG resides in its ability to present data in human-accessible form,
then vagueness must surely be one of its central instruments, because it allows the
suppression of irrelevant detail. In principle, this might be done by providing the gen-
erator with vague input—in which case no special algorithms are needed—but suitably
contextualized vague input is often not available (Mellish 2000). The only practical
alternative is to provide the generator with “crisp” (i.e., quantitative) input, allowing the
generator to be hooked on to a general-purpose database. It is this avenue that we have
explored in this article, in combination with various (incremental and other) approaches
to GRE.
Far from being a peculiarity of a few adjectives, vagueness is widespread. We
believe that our approach can be applied to a variety of situations in which vagueness
affects referring expressions including, for example,
</bodyText>
<listItem confidence="0.99952825">
• color terms (Section 9.3);
• nouns that allow different degrees of strictness (Section 9.5);
• degrees of salience (Section 9.4); and
• imprecise pointing (Section 9.5).
</listItem>
<bodyText confidence="0.998141869565217">
On the other hand, we have also met some considerable obstacles on our way:
Expressive choice (Sections 4 and 7). By enabling the generator to produce more
referring expressions, we have made it harder to choose between them. For example,
when is a qualitative description preferable over a quantitative one? At a more detailed
level, the generator must choose between descriptions like the heaviest two of the
smallest three mice, the mice that weigh between 40 and 60 grams, and so on, each of which
may single out the same individuals. Section 7.3 has summarized some experimental
evidence related to such choices, focusing on the different forms of the adjective, but the
evidence is far from conclusive. Much is still unknown, differences between speakers
abound, and the experimental methodology for advancing the state of the art in this
area is not without its problems (van Deemter 2004).
Architecture (Section 6). The inference rules that were necessary to convert one list
of properties into another do not sit comfortably within the received NLG pipeline
model (e.g., Reiter and Dale 2000). An example of such an inference rule is the one
that transforms a list of the form (mouse, &gt;10 cm) into one of the form (mouse,
size(x) = max2) if only two mice are larger than 10 cm. The same issues also make
it difficult to interleave CD and linguistic realization as proposed by various authors,
because properties may need to be combined before they are expressed.
Incrementality (Section 8). Gradable adjectives complicate the notion of incrementality,
in generation as well as interpretation. Focusing on generation, for example, they force
us to reexamine the idea that properties can be put into words more or less as soon
as they have been selected by content determination (even apart from the issue noted
under Architecture).
</bodyText>
<page confidence="0.993964">
219
</page>
<note confidence="0.57137">
Computational Linguistics Volume 32, Number 2
</note>
<bodyText confidence="0.999769882352941">
Adjectives and presuppositions (Section 2). Our generation-oriented perspective
sheds some doubt on Bierwisch’s (1989) claim that dimensional adjectives are
insensitive to standards provided by the global context: If a man’s height is 205 cm,
then surely no local context can make it felicitous (as opposed to just humorous) to
refer to him as the short man. A related issue that we have not touched upon is the fact
that adjectives are often used partly to pass judgement: One and the same car might
be designated as the expensive car by a hesitant customer and as the luxury car by an
eager salesman: Even if expense and luxury go hand in hand, the two adjectives have
different connotations, and this is something that a generator would ideally be aware of.
Multidimensionality (Section 9.3). We know roughly how to deal with one gradable
dimension: the short man, for example, is the shortest man around. But in practice, we
often juggle several dimensions. This happens, for example, when two adjectives are
used (the short thin man), or when salience is taken into account (e.g., the short man,
when the shortest man is not the most salient one), threatening to make irrefutably
distinguishing descriptions something of an exception. (For a study of approaches to
multidimensionality in a different area, see Masthoff 2004.) At some point, GRE may
have to abandon the strategy of aiming for unambiguous descriptions in all situations.
</bodyText>
<sectionHeader confidence="0.999711" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<reference confidence="0.935299">
I thank Hua Cheng, Roger Evans, Albert
Gatt, Markus Guhe, Imtiaz Khan, Emiel
Krahmer, Judith Masthoff, Chris Mellish,
Oystein Nilsen, Manfred Pinkal, Paul Piwek,
Ehud Reiter, Graeme Ritchie, Ielka van der
Sluis, Rosemary Stevenson, Matthew Stone,
</reference>
<bodyText confidence="0.98168375">
and Sebastian Varges for helpful comments. I
am especially grateful to Richard Power, for
inspiration as well as for implementing the
VAGUE program at great speed. Thanks are
due to four anonymous reviewers for some
very substantial contributions. This work has
been supported by the EPSRC (GR/S13330,
TUNA project).
</bodyText>
<sectionHeader confidence="0.998896" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999169481481481">
Aho, Alfred V., John E. Hopcroft, and Jeffrey
D. Ullman. 1983. Data Structures and
Algorithms. Addison-Wesley Publishing
Company, Reading, MA.
Appelt, Doug. Planning English referring
expressions. Artificial Intelligence, 26:1–33.
Reprinted in: B. J. Grosz, K. Sparck Jones,
and B. L. Webber, editors (1986). Readings
in Natural Language Processing. Morgan
Kaufmann, Los Altos, CA.
Barwise, Jon and John Perry. 1983. Situations
and Attitudes. MIT Press, Cambridge, MA.
Berlin, Brent and Paul Kay. 1969. Basic Color
Terms. University of California Press,
Berkeley.
Berry, Dianne C., Peter R. Knapp, and Theo
Raynor. 2002. Is 15 percent very common?
Informing people about the risks of
medication side effects. International
Journal of Pharmacy Practice, 10:145–151.
Beun, Robbert-Jan and Anita Cremers. 1998.
Object reference in a shared domain of
conversation. Pragmatics and Cognition,
6(1/2):121–152.
Bierwisch, Manfred. 1989. The semantics of
gradation. In M. Bierwisch and E. Lang,
editors, Dimensional Adjectives. Springer
Verlag, Berlin, pages 71–261.
Dale, Robert. 1989. Cooking up referring
expressions. In Proceedings of the 27th
Annual Meeting of the Association for
Computational Linguistics (ACL-89),
pages 68–75.
Dale, Robbert and Nickolas Haddock. 1991.
Generating referring expressions
containing relations. Proceedings of the 5th
Conference of the European Chapter of the
ACL, EACL-91, pages 161–166, Berlin,
Germany.
Dale, Robbert and Ehud Reiter. 1995.
Computational interpretations of the
Gricean maximes in the generation of
referring expressions. Cognitive Science,
18:233–263.
DeVault, David and Matthew Stone. 2004.
Interpreting vague utterances in context.
In Proceedings of COLING 2004,
pages 1247–1253, Geneva.
Ebeling, K. S. and S. A. Gelman. 1994.
Children’s use of context in interpreting
”big” and ”little”. Child Development,
65(4):1178-1192.
Feldman, Allan M. 1980. Welfare Economics
and Social Choice Theory. Kluwer, Boston.
</reference>
<page confidence="0.97863">
220
</page>
<figure confidence="0.407917">
van Deemter GRE with Gradable Properties
</figure>
<reference confidence="0.999541610169491">
Funakoshi, Kotaro, Satoru Watanabe, Naoko
Kuriyama, and Takenobu Takunaga.
2004. Generating referring expressions
using perceptual groups. In Proceedings
of 3rd International Conference on Natural
Language Generation (INLG) 2004,
pages 51–60. Brockenhurst, UK.
Gaiffe, Bertrand and Laurent Romary.1997.
Constraints on the use of language,
gesture, and speech for multimodal
dialogues. In Proceedings of ACL Workshop
Referring Phenomena in a Multimedia Context
and Their Computational Treatment,
pages 94–98, Madrid, Spain.
Goldberg, Eli, Norbert Driedger, and Richard
Kitteridge. 1994. Using natural-language
processing to produce weather forecasts.
IEEE Expert, 9(2):45–53.
Gorniak, Peter and Deb Roy. 2003.
Understanding complex visually
referring utterances. In Proceedings of
HLT-NAACL03 Workshop on Learning
Word Meaning from Non-Linguistic Data,
pages 14–21. Edmonton, Canada,
May 2003.
Grice, Paul. 1975. Logic and conversation. In
P. Cole and J. Morgan, editors, Syntax and
Semantics, volume 3, Speech Acts. Academic
Press, New York, pages 43–58.
Hermann, Tony and Roland Deutsch. 1976.
Psychologie der Objektbenennung. Huber
Verlag, Bern.
Hyde, Dominic. 2002. Sorites Paradox.
In Edward Zalta, editor, The Stanford
Encyclopedia of Philosophy (Fall 2002
Edition), http://plato.stanford.edu/
archives/fall2002/entries/sorites-
paradox/.
James, Glyn, David Burley, Dick Clements,
Phil Dyke, John Searl, and Jerry Wright.
1996. Modern Engineering Mathematics,
second edition. Addison-Wesley Longman
Ltd., Harlow, UK.
Kamp, Hans. 1975. Two theories about
adjectives. In E. Keenan, editor, Semantics
for Natural Language. Cambridge
University Press, Cambridge, UK.
Kennedy, Christopher. 1999. Projecting the
Adjective: The syntax and Semantics of
Gradability and Comparison. Ph.D. thesis,
UC Santa Cruz.
Krahmer, Emiel and Mari¨et Theune. 2002.
Efficient context-sensitive generation of
referring expressions. In K. van Deemter
and R. Kibble, editors, Information Sharing:
Reference and Presupposition in Language
Generation and Interpretation, CSLI
Publications, CSLI, Stanford,
pages 223–264.
Krahmer, Emiel and Ielka van der Sluis. 2003.
A new model for generating multimodal
referring expressions. In Proceedings of 9th
European Workshop on Natural Language
Generation (ENLG-2003), pages 47–54,
Budapest.
Kyburg, Alice and Michael Morreau.
2000. Fitting Words: vague language in
context. Linguistics and Philosophy,
23:577–597.
Levelt, William J. M. 1989. Speaking: From
Intention to Articulation. MIT Press,
Cambridge, MA.
Malouf, Rob. 2000. The order of prenominal
adjectives in natural language generation.
In Proceedings of ACL-2000, pages 85–92,
Hong Kong.
Masthoff, Judith. 2004. Group modeling:
Selecting a sequence of television items to
suit a group of viewers. User Modeling and
User Adapted Interaction, 14:37–85.
Mellish, Chris. 2000. Understanding
shortcuts in NLG systems. In Proceedings of
Workshop ‘Impacts in Natural Language
Generation’, pages 43–50, Dagstuhl,
Germany.
Nash, John. 1950. The bargaining problem.
Econometrica, 18:155–162.
Peccei, Jean Stillwell. 1994. Child Language,
Routledge.
Pechmann, Thomas. 1989. Incremental
speech production and referential
overspecification. Linguistics, 27:98–110.
Pinkal, Manfred. 1979. How to refer with
vague descriptions. In R. B¨auerle, U. Egli,
and A. von Stechow, editors, Semantics
from Different Points of View. Springer
Verlag, Berlin, pages 32–50.
Quirk, Randolph, Sidney Greenbaum,
Geoffrey Leech, and Jan Svartvik. 1972. A
Grammar of Contemporary English.
Longman, Harlow, Essex.
Quirk, Randolph, Sidney Greenbaum,
Geoffrey Leech, and Jan Svartvik. 1985. A
Comprehensive Grammar of the English.
Longman, Harlow, Essex.
Rasmusen, Eric. 1989. Games and Information:
An Introduction to Game Theory. Blackwell
Publishing.
Reiter, Ehud and Robert Dale. 2000. Building
Natural Language Generation Systems.
Cambridge University Press, Cambridge,
UK.
Reiter, Ehud and Somayajulu (Yaji) Sripada.
2002. Should corpora texts be gold
standards for NLG? In Proceedings of
Second International Conference on Natural
Language Generation (INLG-2002),
pages 97–104, New York.
</reference>
<page confidence="0.929468">
221
</page>
<reference confidence="0.990002593220339">
Computational Linguistics Volume 32, Number 2
Rosch, Eleanor. 1975. Cognitive reference
points. Cognitive Psychology, 7:532–547.
Rosch, Eleanor. 1978. Principles of
categorization. In E. Rosch and B. Lloyd,
editors, Cognition and Categorization,
Lawrence Erlbaum, Hillsdale, NJ,
pages 27–48.
Sedivy, Julie, Michael Tanenhaus, Craig
Chambers, and Gregory Carlson. 1999.
Achieving incremental semantic
interpretation through contextual
representation. Cognition, 71:109–147.
Shaw, James and Vasileios Hatzivassiloglou.
1999. Ordering among premodifiers. In
Proceedings of ACL99, pages 135–143,
University of Maryland, College Park.
Sonnenschein, Susan. 1982. The effects of
redundant communications on listeners:
When more is less. Child Development,
53:717–729.
Sripada, Yaji, Ehud Reiter, and Ian Davy.
2003. SumTime-Mousam: Configurable
marine weather forecast generator. Expert
Update, 6(3):4–10.
Stone, Matthew. 2000. On identifying sets. In
Proceedings of INLG-2000, pages 116–123,
Mitzpe Ramon, Israel.
Stone, Matthew and Bonnie Webber. 1998.
Textual Economy through close coupling
of syntax and semantics. In Proceedings of
INLG-1998, pages 178–187.
Th´orisson, Kristinn R. 1994. Simulated
perceptual grouping: An application to
human-computer interaction. In
Proceedings of 6th Annual Conference of the
Cognitive Science Society, pages 876–881.
Toogood, John H. 1980. What do we mean by
‘usually’? Lancet, 1:1094.
van Deemter, Kees. 2000. Generating vague
descriptions. In Proceedings of International
Conference on Natural Language Generation
(INLG-2000), pages 179–185, Mitzpe
Ramon, Israel.
van Deemter, Kees. 2002. Generating
referring expressions: Boolean extensions
of the incremental algorithm.
Computational Linguistics, 28(1):37–52.
van Deemter, Kees. 2004. Finetuning an
NLG system through experiments with
human subjects: The case of vague
descriptions. In Proceedings of 3rd
International Conference on Natural
Language Generation (INLG-04),
pages 31–40, Brockenhurst, UK.
van Deemter, Kees and Jan Odijk. 1997.
Context modeling and the generation of
spoken discourse. Speech Communication,
21:101–121.
</reference>
<page confidence="0.998002">
222
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.886875">
<title confidence="0.9970615">Generating Referring Expressions that Involve Gradable Properties</title>
<author confidence="0.992138">van</author>
<affiliation confidence="0.916147">University of Aberdeen</affiliation>
<abstract confidence="0.996476857142857">This article examines the role of gradable properties in referring expressions from the perspective natural language generation. First, we propose a simple semantic analysis of dereferring expressions that contain gradable adjectives) that reflects the contextdependent meaning of the adjectives in them. Second, we show how this type of analysis can inform algorithms for the generation of vague descriptions from numerical data. Third, we ask such descriptions should be used. The article concludes with a discussion of which are analyzed as if they were gradable adjectives.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>I thank Hua Cheng</author>
</authors>
<title>Roger Evans, Albert Gatt, Markus Guhe, Imtiaz Khan, Emiel Krahmer, Judith Masthoff, Chris Mellish, Oystein Nilsen, Manfred Pinkal, Paul Piwek, Ehud Reiter, Graeme Ritchie, Ielka van der Sluis,</title>
<location>Rosemary Stevenson, Matthew Stone,</location>
<marker>Cheng, </marker>
<rawString>I thank Hua Cheng, Roger Evans, Albert Gatt, Markus Guhe, Imtiaz Khan, Emiel Krahmer, Judith Masthoff, Chris Mellish, Oystein Nilsen, Manfred Pinkal, Paul Piwek, Ehud Reiter, Graeme Ritchie, Ielka van der Sluis, Rosemary Stevenson, Matthew Stone,</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alfred V Aho</author>
<author>John E Hopcroft</author>
<author>Jeffrey D Ullman</author>
</authors>
<title>Data Structures and Algorithms.</title>
<date>1983</date>
<publisher>Addison-Wesley Publishing Company,</publisher>
<location>Reading, MA.</location>
<contexts>
<context position="38578" citStr="Aho et al. 1983" startWordPosition="6553" endWordPosition="6556">IPiII (the extension of the next property in the description). If computing the intersection of two sets takes constant time then this makes the complexity of interpreting non-vague descriptions linear: O(nd), where nd is the number of properties used. In a vague description, the property last added to the description is context dependent. Worst case, calculating the set corresponding with such a property, of the form size(x) = maxm, for example, involves sorting the distractors as to their size, which may amount to O(n2d) or O(nd log nd) calculations (depending on the sorting algorithm: cf. [Aho et al. 1983] Chapter 8). Once again, the most time-consuming part of the calculation can be performed off-line, since it is the same for all referring expressions. Thus, the worst-case time complexity of interpretation is as follows: The part that can be computed off-line takes O(nd log nd) calculations. The part that has to be computed for each referring expression separately takes O(nd) calculations. Once again, there is a difference with the nongradable case, but the difference is modest, especially regarding the part that cannot be done off-line. One should bear in mind that worst-case theoretical co</context>
</contexts>
<marker>Aho, Hopcroft, Ullman, 1983</marker>
<rawString>Aho, Alfred V., John E. Hopcroft, and Jeffrey D. Ullman. 1983. Data Structures and Algorithms. Addison-Wesley Publishing Company, Reading, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Doug Appelt</author>
</authors>
<title>Planning English referring expressions.</title>
<date>1986</date>
<journal>Artificial Intelligence,</journal>
<booktitle>Readings in Natural Language Processing.</booktitle>
<pages>26--1</pages>
<editor>Reprinted in: B. J. Grosz, K. Sparck Jones, and B. L. Webber, editors</editor>
<publisher>Morgan Kaufmann,</publisher>
<location>Los Altos, CA.</location>
<marker>Appelt, 1986</marker>
<rawString>Appelt, Doug. Planning English referring expressions. Artificial Intelligence, 26:1–33. Reprinted in: B. J. Grosz, K. Sparck Jones, and B. L. Webber, editors (1986). Readings in Natural Language Processing. Morgan Kaufmann, Los Altos, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jon Barwise</author>
<author>John Perry</author>
</authors>
<title>Situations and Attitudes.</title>
<date>1983</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="10204" citStr="Barwise and Perry 1983" startWordPosition="1666" endWordPosition="1669">, we take the base form of 2 The reader is asked to focus on any reasonable size measurement, for example, the maximal horizontal or vertical distance, or some combination of dimensions (Kamp 1975; also Section 8.1 of the present article). 197 Computational Linguistics Volume 32, Number 2 the adjective to be semantically equivalent to the superlative form (and, analogously, the comparative): The n large mice = The largest n mice The large mice = The largest mice The large mouse = The largest mouse. Viewed in this way, gradable adjectives are an extreme example of the “efficiency of language” (Barwise and Perry 1983): Far from meaning something concrete like “larger than 8 cm”—a concept that would have very limited applicability—or even something more general like “larger than the average N,” a word like large is applicable across a wide range of different situations. 2.2 Caveat: Full NP Anaphora Having said this, there are pragmatic differences between the base form and the superlative (Section 5). For example, the equivalence does not take anaphoric uses into account, such as when the large mouse is legitimized by the fact that the mouse has been called large before, as in (5) I was transfixed by a larg</context>
<context position="19190" citStr="Barwise and Perry 1983" startWordPosition="3220" endWordPosition="3223"> are used in the base form, the superlative, or the comparative. Suppose, for example, one set a fixed quantitative boundary, making the word large true of everything above it, and false of everything below it. Then IA would tend to have little use for this property at all since, presumably, every chihuahua would be small and every alsatian large, making each of the combinations {large, chihuahua} (which denotes the empty set) and {large,alsatian} (the set of all alsatians) useless. In other words, existing treatments of gradables in GRE fail to take the “efficiency of language” into account (Barwise and Perry 1983; see our Section 2). 200 van Deemter GRE with Gradable Properties 4. The Generation of Vague Descriptions We now turn to the question of how vague descriptions may be generated from numerical data. We focus on semantic issues, postponing discussion of pragmatics until Section 5, and linguistic realization until Section 6. We shall make occasional reference to a PROLOG program called VAGUE, designed by Richard Power, which implements a version of the algorithm described in this section. Code and documentation for VAGUE can be found at http://www.csd.abdn.ac.uk/∼kvdeemte/vague.html. 4.1 Express</context>
</contexts>
<marker>Barwise, Perry, 1983</marker>
<rawString>Barwise, Jon and John Perry. 1983. Situations and Attitudes. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brent Berlin</author>
<author>Paul Kay</author>
</authors>
<title>Basic Color Terms.</title>
<date>1969</date>
<publisher>University of California Press,</publisher>
<location>Berkeley.</location>
<contexts>
<context position="64340" citStr="Berlin and Kay 1969" startWordPosition="10752" endWordPosition="10755"> greener than b on one dimension (e.g., saturation), but less green than b on another (e.g., hue). This would considerably complicate the application of our algorithm to color terms, which is otherwise mostly 215 Computational Linguistics Volume 32, Number 2 straighforward (Section 9.3). (The green chair, said in the presence of two greenish chairs, would refer to the one that is closest to prototypical green.) A further complication is that different speakers can regard very different values as prototypical, making it difficult to assess which of two objects is greener even on one dimension (Berlin and Kay 1969, pages 10–12). (Ideally, GRE should also take into account that the meaning of color words can differ across different types of referent. Red as in red hair, e.g., differs from red as in red chair.) Different attitudes towards multidimensionality are possible. One possibility is to be cautious and to keep aiming for distinguishing descriptions in the strict sense. In this case, the program should limit the use of vague descriptions to situations where there exists a referent that has a Pareto-optimal combination of Values. Alternatively, one could allow referring expressions to be ambiguous. </context>
</contexts>
<marker>Berlin, Kay, 1969</marker>
<rawString>Berlin, Brent and Paul Kay. 1969. Basic Color Terms. University of California Press, Berkeley.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dianne C Berry</author>
<author>Peter R Knapp</author>
<author>Theo Raynor</author>
</authors>
<title>Is 15 percent very common? Informing people about the risks of medication side effects.</title>
<date>2002</date>
<journal>International Journal of Pharmacy Practice,</journal>
<pages>10--145</pages>
<marker>Berry, Knapp, Raynor, 2002</marker>
<rawString>Berry, Dianne C., Peter R. Knapp, and Theo Raynor. 2002. Is 15 percent very common? Informing people about the risks of medication side effects. International Journal of Pharmacy Practice, 10:145–151.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robbert-Jan Beun</author>
<author>Anita Cremers</author>
</authors>
<title>Object reference in a shared domain of conversation. Pragmatics and Cognition,</title>
<date>1998</date>
<pages>6--1</pages>
<contexts>
<context position="35252" citStr="Beun and Cremers 1998" startWordPosition="5983" endWordPosition="5986">able properties are less preferred than crisp ones (point 3) then this algorithm will only use gradable properties if an entirely crisp distinguishing description is impossible. This may well cause gradable properties to be underused. For this and other reasons, we shall consider non-incremental versions of these ideas in Section 8. 4.3 Computational Complexity We will examine the worst-case complexity of interpretation as well as generation to shed some light on the hypothesis that vague descriptions are more difficult to process than others because they involve a comparison between objects (Beun and Cremers 1998, Krahmer and Theune 2002). Before we do this, consider the tractability of the original IA. If the running time of FindBestValue(r,Ai) is a constant times the number of Values of the Attribute Ai, then the worst-case running time of IA (and IAPlur) is O(n77na), where na equals the number of Attributes in the language and n77 the average number of Values of all Attributes. This is because, in the worst case, all Values of all Attributes need to be attempted (van Deemter 2002). As for the new algorithm, we focus on the crucial phases 2, 4, and 5. 206 van Deemter GRE with Gradable Properties Pha</context>
<context position="49798" citStr="Beun and Cremers (1998)" startWordPosition="8379" endWordPosition="8382">timation of their absolute values. Further experiments are needed before we can say with more confidence under what circumstances vague descriptions are favored over absolute ones. It is normally perhaps unlikely that people produce language on the basis of the kind of numerical representations that our algorithm has used as input. Although psychological plausibility is not our aim, it is worth noting that the inequalities computed as step 2 of the algorithm of Section 4 might be psychologically more plausible, since they are essentially no more than comparisons between objects. 6 Presumably, Beun and Cremers (1998) found vague adjectives to be rare because, in their experiments, referents could always be identified using nongradable dimensions. 210 van Deemter GRE with Gradable Properties 7.2 Testing the Correctness of the Generated Expressions Sedivy et al. (1999) asked subjects to identify the target of a vague description in a visual scene. Consider the tall cup. The relevant scene would contain three distractors: (1) a less tall object of the same type as the target (e.g., a cup that is less tall), (2) a different kind of object that previous studies had shown to be intermediate in height (e.g., a p</context>
</contexts>
<marker>Beun, Cremers, 1998</marker>
<rawString>Beun, Robbert-Jan and Anita Cremers. 1998. Object reference in a shared domain of conversation. Pragmatics and Cognition, 6(1/2):121–152.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manfred Bierwisch</author>
</authors>
<title>The semantics of gradation.</title>
<date>1989</date>
<pages>71--261</pages>
<editor>In M. Bierwisch and E. Lang, editors, Dimensional Adjectives.</editor>
<publisher>Springer Verlag,</publisher>
<location>Berlin,</location>
<contexts>
<context position="11536" citStr="Bierwisch (1989)" startWordPosition="1885" endWordPosition="1886">where the mouse on the chimney may be smaller than those on the ground. We focus on Ebeling and Gelman’s (1994) perceptual context dependence (Section 1), pretending that the only contextually relevant factor is the “comparison set”: those elements of the noun denotation that are perceptually available. We disregard functional context dependence, as when the small hat is the one too small to fit on your head. 2.3 Caveat: Evaluative Adjectives What we said above has also disregarded elements of the “global” (i.e., not immediately available) context. For some adjectives, including the ones that Bierwisch (1989) called evaluative (as opposed to dimensional), this is clearly inadequate. He argued that evaluative adjectives (such as beautiful and its antonym ugly; smart and its antonym stupid, etc.) can be recognized by the way in which they compare with antonyms. For example (after Bierwisch 1989), (6a) Hans is taller than Fritz ⇒ Fritz is shorter than Hans. (6b) Hans is smarter than Fritz ⇒� Fritz is more stupid than Hans. We could require that the referent of an evaluative description fall into the correct segment of the relevant dimension. (For Fritz to be the stupid man, it is not enough for him t</context>
</contexts>
<marker>Bierwisch, 1989</marker>
<rawString>Bierwisch, Manfred. 1989. The semantics of gradation. In M. Bierwisch and E. Lang, editors, Dimensional Adjectives. Springer Verlag, Berlin, pages 71–261.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Dale</author>
</authors>
<title>Cooking up referring expressions.</title>
<date>1989</date>
<booktitle>In Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics (ACL-89),</booktitle>
<pages>68--75</pages>
<contexts>
<context position="39720" citStr="Dale 1989" startWordPosition="6741" endWordPosition="6742">one off-line. One should bear in mind that worst-case theoretical complexity is not always a good measure of the time that a program takes in the kinds of cases that occur most commonly, let alone the difficulty for a person. For example, it seems likely that hearers and speakers will have most difficulty dealing with differences that are too small to be obvious (e.g., two mice that are very similar in size). 207 Computational Linguistics Volume 32, Number 2 5. Pragmatic Constraints NLG has to do more than select a distinguishing description (i.e., one that unambiguously denotes its referent; Dale 1989): The selected expression should also be felicitous. Consider the question, discussed in the philosophical logic literature, of whether it is legitimate, for a gradable adjective, to distinguish between “observationally indifferent” entities: Suppose two objects x and y, are so similar that it is impossible to distinguish their sizes; can it ever be reasonable to say that x is large and y is not? A positive answer would not be psychologically plausible, since x and y are indistinguishable; but a negative answer would prohibit any binary distinction between objects that are large and objects th</context>
</contexts>
<marker>Dale, 1989</marker>
<rawString>Dale, Robert. 1989. Cooking up referring expressions. In Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics (ACL-89), pages 68–75.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robbert Dale</author>
<author>Nickolas Haddock</author>
</authors>
<title>Generating referring expressions containing relations.</title>
<date>1991</date>
<booktitle>Proceedings of the 5th Conference of the European Chapter of the ACL, EACL-91,</booktitle>
<pages>161--166</pages>
<location>Berlin, Germany.</location>
<contexts>
<context position="59659" citStr="Dale and Haddock 1991" startWordPosition="9948" endWordPosition="9951">t word this as the two heaviest brown ones among the smallest four mice. To avoid such awkward expressions, one can change the order of properties after CD (mirroring step 4 above), moving the inequalities to the end of the list before they are transformed into the appropriate superlatives. The effect would be to boost the number of occurrences of gradable properties in generated descriptions while keeping CD incremental. 9. Extensions of the Approach 9.1 Relational Descriptions Some generalizations of our method are fairly straightforward. For example, consider a relational description (cf., Dale and Haddock 1991) involving a gradable adjective, as in the dog in the large shed. CD for this type of descriptions along the lines of Section 4 is not difficult once relational descriptions are integrated with a standard GRE algorithm (Krahmer and Theune 2002, Section 8.6.2): Suppose an initial description is generated describing the set of all those dogs that are in sheds over a given size (say, size 5); if this description happens to distinguish an individual dog then this legitimizes the use of the noun phrase the dog in the large shed. Note that this is felicitous even if the shed is not the largest one i</context>
</contexts>
<marker>Dale, Haddock, 1991</marker>
<rawString>Dale, Robbert and Nickolas Haddock. 1991. Generating referring expressions containing relations. Proceedings of the 5th Conference of the European Chapter of the ACL, EACL-91, pages 161–166, Berlin, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robbert Dale</author>
<author>Ehud Reiter</author>
</authors>
<title>Computational interpretations of the Gricean maximes in the generation of referring expressions.</title>
<date>1995</date>
<journal>Cognitive Science,</journal>
<pages>18--233</pages>
<contexts>
<context position="22099" citStr="Dale and Reiter 1995" startWordPosition="3706" endWordPosition="3709">ess preferred than others. As a result, all other properties that turn up in the NP are already in the list L when size is added. Suppose the target is c4: type(c1) = type(c2) = type(c3) = type(c4) = mouse type(p5) = rat size(c1) = 6 cm 3 The degree of precision of the measurement (James et al. 1996, Section 1.5) determines which objects can be described by the GRE algorithm, since it determines which objects count as having the same size. 4 To turn this likelihood into a certainty, one can add a test at the end of the algorithm, which adds a type-related property if none is present yet (cf., Dale and Reiter 1995). VAGUE uses both of these devices. 201 Computational Linguistics Volume 32, Number 2 size(c2) = 10 cm size(c3) = 12 cm size(c4) = size(p5) = 14 cm Since gradable properties are (for now at least) assumed to be dispreferred, the first property that makes it into L is ‘mouse,’ which removes p5 from the context set. (Result: C = {c1,...,c4}.) Now size is taken into account, and size(x) = 14 cm singles out c4. The resulting list is L = {mouse, 14 cm} This might be considered the end of the matter, since the target has been singled out. But we are interested in alternative lists, to enable later m</context>
<context position="25042" citStr="Dale and Reiter 1995" startWordPosition="4243" endWordPosition="4246">ation of inequalities is not entirely trivial. For one thing, it is convenient to view properties of the form size(x) &lt; α as belonging to a different Attribute than those of the form size(x) &gt; α, because this causes the Values of an Attribute to be linearly ordered: Being larger than 12 cm implies being larger than 10 cm, and so on. More importantly, it will now become normal for an object to have many Values for the same Attribute; c4, for example, has the Values &gt; 6 cm, &gt; 10 cm, and &gt; 12 cm. Each of these Values has equal status, so the notion of a basic-level Value cannot play a role (cf., Dale and Reiter 1995). If we abstract away from the role of basic-level Values, then Dale and Reiter’s FindBestValue chooses the most general Value that removes the maximal 202 van Deemter GRE with Gradable Properties number of distractors, as we have seen. The problem at hand suggests a simpler approach that will always prefer logically stronger inequalities over logically weaker ones, even when they do not remove more distractors.5 (Thus, size(x) &gt; m is preferred over size(x) &gt; n iff m &gt; n; conversely, size(x) &lt; m is preferred over size(x) &lt; n iff m &lt; n.) This is reflected by the order in which the properties ar</context>
<context position="47481" citStr="Dale and Reiter (1995)" startWordPosition="8001" endWordPosition="8004">aders? Much is unknown, but we shall summarize the available results in these three areas very briefly, referring readers to the literature for details. 7.1 Human Speakers’ Use of Vague Descriptions Common sense (as well as the Gricean maxims; Grice 1975) suggests that vague descriptions are preferred by speakers over quantitative ones whenever the additional information provided by a quantitative description is irrelevant to the purpose of the communication. We are not aware of any empirical validation of this idea, but the fact that vague descriptions are frequent is fairly well documented. Dale and Reiter (1995), for example, discussed the transcripts of a dialogue between people who assemble a piece of garden furniture (originally recorded by Candy Sidner). They found that, while instructional texts tended to use numerical descriptions like the 31 4” bolt, human assemblers “unless they were reading or discussing the written instructions, in all cases used relative modifiers, such as the long bolt” (Dale and Reiter 1995).6 Our own experiments (van Deemter 2004) point in the same direction. In one experiment, for example, 34 students at the University of Brighton were shown six pieces of paper, each o</context>
<context position="54263" citStr="Dale and Reiter 1995" startWordPosition="9119" endWordPosition="9122">r example, one might use the superlative all the time, since this was—surprisingly—the most frequent form overall. Based on point (2), however, one might also defend using the base form whenever the gap is large enough (as was done in the VAGUE program). Future experiments should allow us to refine this position, perhaps depending on factors such as genre, communicative goal, and type of audience. 8. Incrementality: Help or Hindrance? The account sketched in Section 4 was superimposed on an incremental GRE algorithm, partly because incrementality is well established in this area (Appelt 1985; Dale and Reiter 1995). But IA may be replaced by any other reasonable7 GRE algorithm, for example, one that always exactly minimizes the number of properties expressed, or one that always “greedily” selects the property that removes the maximum number of distractors. Let G be any such GRE algorithm, then we can proceed as follows: GRE for Vague Descriptions (version not relying on IA): 1. Construct KB using Attributes and Values, assigning numerical Values to gradable Attributes. 2. Recompile the KB, replacing equalities by inequalities. 3. Let G deliver an unordered set of properties which jointly distinguish the</context>
</contexts>
<marker>Dale, Reiter, 1995</marker>
<rawString>Dale, Robbert and Ehud Reiter. 1995. Computational interpretations of the Gricean maximes in the generation of referring expressions. Cognitive Science, 18:233–263.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David DeVault</author>
<author>Matthew Stone</author>
</authors>
<title>Interpreting vague utterances in context.</title>
<date>2004</date>
<booktitle>In Proceedings of COLING 2004,</booktitle>
<pages>1247--1253</pages>
<location>Geneva.</location>
<contexts>
<context position="9084" citStr="DeVault and Stone 2004" startWordPosition="1476" endWordPosition="1479">. To see this, consider a domain of three mice, sized 5, 8, and 10 cm.2 Here one can speak of (3) The large mouse (= the one whose size is 10 cm) (4) The two large mice (= the two whose sizes are 8 and 10 cm) Clearly, what it takes for the adjective to be applicable has not been cast in stone, but is open to fiat: the speaker may decide that 8 cm is enough, or the speaker may set the standards higher (cf., Kennedy 1999). The numeral (whether it is implicit, as in (3), or explicit) can be construed as allowing the reader to draw inferences about the standards employed (Kyburg and Morreau 2000; DeVault and Stone 2004): (3), for example, implies a standard that counts 10 cm as large and 8 cm as not large. Our own proposal will abstract away from the effects of linguistic context. We shall ask how noun phrases like the ones in (3) and (4) can be generated, without asking how they constrain, and are constrained by, other uses of large and related words. This will allow us to make the following simplification: In a definite description that expresses only properties that are needed for singling out a referent, we take the base form of 2 The reader is asked to focus on any reasonable size measurement, for examp</context>
</contexts>
<marker>DeVault, Stone, 2004</marker>
<rawString>DeVault, David and Matthew Stone. 2004. Interpreting vague utterances in context. In Proceedings of COLING 2004, pages 1247–1253, Geneva.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K S Ebeling</author>
<author>S A Gelman</author>
</authors>
<title>Children’s use of context in interpreting ”big” and ”little”. Child Development,</title>
<date>1994</date>
<pages>65--4</pages>
<contexts>
<context position="2462" citStr="Ebeling and Gelman 1994" startWordPosition="372" endWordPosition="375">cult area of research on vagueness. Generation offers an interesting perspective because it forces one to ask when it is a good idea to use these descriptions, in addition to asking what they mean. Gradability is especially widespread in adjectives. A search of the British National Corpus (BNC), for example, shows at least seven of the ten most frequent adjectives (last, other, new, good, old, great, high, small, different, large) to be gradable. Children use vague adjectives among their first dozens of words (Peccei 1994) and understand some of their intricacies as early as their 24th month (Ebeling and Gelman 1994). These * Computing Science Department, King’s College, University of Aberdeen, United Kingdom, E-mail: kvdeemter@csd.abdn.ac.uk. 1 We take such adjectives to be ones that have comparative and superlative forms, and which can be premodified by intensifiers such as very (Quirk et al. 1972, Section 5.4). Submission received: 7 July 2004; revised submission received: 19 October 2005; accepted for publication: 24 November 2005. © 2006 Association for Computational Linguistics Computational Linguistics Volume 32, Number 2 intricacies include what Ebeling and Gelman call perceptual context dependenc</context>
</contexts>
<marker>Ebeling, Gelman, 1994</marker>
<rawString>Ebeling, K. S. and S. A. Gelman. 1994. Children’s use of context in interpreting ”big” and ”little”. Child Development, 65(4):1178-1192.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Allan M Feldman</author>
</authors>
<title>Welfare Economics and Social Choice Theory.</title>
<date>1980</date>
<publisher>Kluwer,</publisher>
<location>Boston.</location>
<contexts>
<context position="62031" citStr="Feldman 1980" startWordPosition="10363" endWordPosition="10364">es to an individual referent r, starting with a description that contains more than one gradable adjective. The NP the tall fat giraffe, for example, can safely refer to an element b in a situation like the one below, where b is the only element that exceeds all distractors with respect to some dimension (a different one for a than for c, as it happens) while not being exceeded by any distractors in any dimension: height(a) = 5 m height(b) = height(c) = 15 m width(a) = width(b) = 3 m width(c) = 2 m Cases like this would be covered if the decision-theoretic property of Pareto optimality (e.g., Feldman 1980) was used as the sole criterion: Formally, an object r E C has a Pareto-optimal combination of Values V iff there is no other x E C such that 1. ]Vi E V : Vi(x) &gt; Vi(r) and 2. -]Vj E V : Vj(x) &lt; Vj(r) In our example, b is the only object that has a Pareto-optimal combination of Values, predicting correctly that b can be called the tall fat giraffe. It seems likely, however, that people use doubly graded descriptions more liberally. For example, if the example is modified by letting width(a) = 3.1 m, making a slightly fatter than b, then b might still be the only reasonable referent of the tall</context>
</contexts>
<marker>Feldman, 1980</marker>
<rawString>Feldman, Allan M. 1980. Welfare Economics and Social Choice Theory. Kluwer, Boston.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kotaro Funakoshi</author>
<author>Satoru Watanabe</author>
<author>Naoko Kuriyama</author>
<author>Takenobu Takunaga</author>
</authors>
<title>Generating referring expressions using perceptual groups.</title>
<date>2004</date>
<booktitle>In Proceedings of 3rd International Conference on Natural Language Generation (INLG)</booktitle>
<pages>51--60</pages>
<publisher>Brockenhurst, UK.</publisher>
<contexts>
<context position="41680" citStr="Funakoshi et al. 2004" startWordPosition="7064" endWordPosition="7067">the expression in question. If x and y are mice of sizes 10 and 9.9 cm, for example, then it is probably better to describe x as the largest mouse than as the large mouse. Prior to carrying out the experiments to be reported in Section 7, we believed that the following constraints should be taken into account: Small Gaps. Expressions of the form the (n) large [N] are infelicitous when the gap between (1) the smallest element of the designated set S (henceforth, s−) and (2) the largest N smaller than all elements of S (henceforth, s+) is small in comparison with the other gaps (Thorisson 1994; Funakoshi et al. 2004). If this gap is so small as to make the difference between the sizes of s− and s+ impossible to perceive, then the expression is also infelicitous. Dichotomy. When separating one single referent from one distractor, the comparative form is often said to be favored (Use the comparative form to compare two things). We expected this to generalize to situations where all the referents are of one size, and all the distractors of another. Minimality. Unless Small Gaps and Dichotomy forbid it, we expected that preference should be given to the base form. In English, where the base form is morphologi</context>
</contexts>
<marker>Funakoshi, Watanabe, Kuriyama, Takunaga, 2004</marker>
<rawString>Funakoshi, Kotaro, Satoru Watanabe, Naoko Kuriyama, and Takenobu Takunaga. 2004. Generating referring expressions using perceptual groups. In Proceedings of 3rd International Conference on Natural Language Generation (INLG) 2004, pages 51–60. Brockenhurst, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bertrand Gaiffe</author>
<author>Laurent Romary 1997</author>
</authors>
<title>Constraints on the use of language, gesture, and speech for multimodal dialogues.</title>
<date></date>
<booktitle>In Proceedings of ACL Workshop Referring Phenomena in a Multimedia Context and Their Computational Treatment,</booktitle>
<pages>94--98</pages>
<location>Madrid,</location>
<marker>Gaiffe, 1997, </marker>
<rawString>Gaiffe, Bertrand and Laurent Romary.1997. Constraints on the use of language, gesture, and speech for multimodal dialogues. In Proceedings of ACL Workshop Referring Phenomena in a Multimedia Context and Their Computational Treatment, pages 94–98, Madrid, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eli Goldberg</author>
<author>Norbert Driedger</author>
<author>Richard Kitteridge</author>
</authors>
<title>Using natural-language processing to produce weather forecasts.</title>
<date>1994</date>
<journal>IEEE Expert,</journal>
<volume>9</volume>
<issue>2</issue>
<marker>Goldberg, Driedger, Kitteridge, 1994</marker>
<rawString>Goldberg, Eli, Norbert Driedger, and Richard Kitteridge. 1994. Using natural-language processing to produce weather forecasts. IEEE Expert, 9(2):45–53.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter Gorniak</author>
<author>Deb Roy</author>
</authors>
<title>Understanding complex visually referring utterances.</title>
<date>2003</date>
<booktitle>In Proceedings of HLT-NAACL03 Workshop on Learning Word Meaning from Non-Linguistic Data,</booktitle>
<pages>14--21</pages>
<location>Edmonton, Canada,</location>
<contexts>
<context position="62889" citStr="Gorniak and Roy 2003" startWordPosition="10518" endWordPosition="10521">that has a Pareto-optimal combination of Values, predicting correctly that b can be called the tall fat giraffe. It seems likely, however, that people use doubly graded descriptions more liberally. For example, if the example is modified by letting width(a) = 3.1 m, making a slightly fatter than b, then b might still be the only reasonable referent of the tall fat giraffe. Many alternative strategies are possible. The Nash arbitration plan, for example, would allow a doubly graded description whenever the product of the Values for the referent r exceeds that of all distractors (Nash 1950; cf. Gorniak and Roy 2003; Thorisson 1994, for other plans). 9.3.2 Multidimensional Adjectives (and Color). Multidimensionality can also slip in through the backdoor. Consider big, for example, when applied to 3D shapes. If there exists a formula for mapping three dimensions into one (e.g., length x width x height) then the result is one dimension (overall-size), and the algorithm of Section 4 can be applied verbatim. But if big is applied to a person then it is far from clear that there is one canonical formula for mapping the different dimensions of your body into one overall dimension, and this complicates the situ</context>
</contexts>
<marker>Gorniak, Roy, 2003</marker>
<rawString>Gorniak, Peter and Deb Roy. 2003. Understanding complex visually referring utterances. In Proceedings of HLT-NAACL03 Workshop on Learning Word Meaning from Non-Linguistic Data, pages 14–21. Edmonton, Canada, May 2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Grice</author>
</authors>
<title>Logic and conversation.</title>
<date>1975</date>
<booktitle>Syntax and Semantics,</booktitle>
<volume>volume</volume>
<pages>43--58</pages>
<editor>In P. Cole and J. Morgan, editors,</editor>
<publisher>Academic Press,</publisher>
<location>New York,</location>
<contexts>
<context position="42386" citStr="Grice 1975" startWordPosition="7184" endWordPosition="7185">o perceive, then the expression is also infelicitous. Dichotomy. When separating one single referent from one distractor, the comparative form is often said to be favored (Use the comparative form to compare two things). We expected this to generalize to situations where all the referents are of one size, and all the distractors of another. Minimality. Unless Small Gaps and Dichotomy forbid it, we expected that preference should be given to the base form. In English, where the base form is morphologically simpler than the other two, this rule could be argued to follow from Gricean principles (Grice 1975). To keep matters simple, linguistic realization could choose the base form if and only if the gap between s− and s+ surpasses a certain value, which is specified interactively by the user. (This approach was chosen for the VAGUE program.) As for the presence/absence of the numeral in the description, there appear to be different “believable” patterns of linguistic behavior. A cautious generator might only omit the numeral when the pragmatic principles happen to enforce a specific extension (e.g., the large mice, when the mice are sized 3, 2.8, 2.499, and 2.498 cm). This would allow the genera</context>
<context position="47114" citStr="Grice 1975" startWordPosition="7947" endWordPosition="7948">estions: (1) When is it natural to generate a vague description (i.e., a 209 Computational Linguistics Volume 32, Number 2 qualitative description as opposed to a purely quantitative one)? (2) Given that a vague description is used, which form of the description is most natural? and (3) Are the generated descriptions properly understood by hearers and readers? Much is unknown, but we shall summarize the available results in these three areas very briefly, referring readers to the literature for details. 7.1 Human Speakers’ Use of Vague Descriptions Common sense (as well as the Gricean maxims; Grice 1975) suggests that vague descriptions are preferred by speakers over quantitative ones whenever the additional information provided by a quantitative description is irrelevant to the purpose of the communication. We are not aware of any empirical validation of this idea, but the fact that vague descriptions are frequent is fairly well documented. Dale and Reiter (1995), for example, discussed the transcripts of a dialogue between people who assemble a piece of garden furniture (originally recorded by Candy Sidner). They found that, while instructional texts tended to use numerical descriptions lik</context>
</contexts>
<marker>Grice, 1975</marker>
<rawString>Grice, Paul. 1975. Logic and conversation. In P. Cole and J. Morgan, editors, Syntax and Semantics, volume 3, Speech Acts. Academic Press, New York, pages 43–58.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tony Hermann</author>
<author>Roland Deutsch</author>
</authors>
<title>Psychologie der Objektbenennung.</title>
<date>1976</date>
<publisher>Huber Verlag,</publisher>
<location>Bern.</location>
<contexts>
<context position="27687" citStr="Hermann and Deutsch (1976" startWordPosition="4709" endWordPosition="4712">s “being a set of cardinality greater than 1, all of whose elements are larger than all other elements in C.” The result may be realized as the largest mice. L3 = (mouse, size(x) = max). 4.1.4 Ordering of Properties. Even if comparative properties are at the bottom of the preference order, while stronger inequalities precede weaker ones, the order is not fixed completely. Suppose, for example, that the KB contains information about height as well as width, then we have inequalities of the forms (a) height &gt; x, (b) height &lt; x, (c) width &gt; x, and (d) width &lt; x. Which of these should come first? Hermann and Deutsch (1976; also reported in Levelt 1989) show that greater differences are most likely to be chosen, presumably because they are more striking. In experiments involving candles of different heights and widths, if the referent is both the tallest and the fattest candle, subjects tended to say ‘the tall candle’ when the tallest candle is much taller than all others whereas the same candle is only slightly wider than the others; if the reverse is the case, the preference switches to ‘the fat candle.’ Hermann and Deutsch’s findings may be implemented as follows. First, the Values of the different Attribute</context>
<context position="56234" citStr="Hermann and Deutsch 1976" startWordPosition="9431" endWordPosition="9434">ary preparation for (5) because the superlative properties resulting from (5), unlike the inequalities resulting from (4), are context dependent. For example, (mouse, size(x) = max2) (the largest two mice, {c3,c4}) does not equal (size(x) = max2, mouse) (the mouse among the largest two elements, {c4}). Deletion of superfluous inequalities avoids saying, for example, the short(est) black mouse if there is only one black mouse, because this might invite false implicatures. 8.1 Problems with Incrementality While IA is generally thought to be consistent with findings on human language production (Hermann and Deutsch 1976; Levelt 1989; Pechmann 1989; Sonnenschein 1982), the hypothesis that incrementality is a good model of human GRE seems unfalsifiable until a preference order is specified for the properties on which it operates. (Wildly redundant descriptions can result if the ‘wrong’ preference order are chosen.) We shall see that vague descriptions pose particular challenges to incrementality. One question emerges when the IA is combined with findings on word order and incremental interpretation. If human speakers and/or writers perform CD incrementally, then why are properties not expressed in the same ord</context>
</contexts>
<marker>Hermann, Deutsch, 1976</marker>
<rawString>Hermann, Tony and Roland Deutsch. 1976. Psychologie der Objektbenennung. Huber Verlag, Bern.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dominic Hyde</author>
</authors>
<title>Sorites Paradox.</title>
<date>2002</date>
<booktitle>The Stanford Encyclopedia of Philosophy (Fall 2002 Edition), http://plato.stanford.edu/ archives/fall2002/entries/soritesparadox/.</booktitle>
<editor>In Edward Zalta, editor,</editor>
<contexts>
<context position="40533" citStr="Hyde 2002" startWordPosition="6874" endWordPosition="6875">“observationally indifferent” entities: Suppose two objects x and y, are so similar that it is impossible to distinguish their sizes; can it ever be reasonable to say that x is large and y is not? A positive answer would not be psychologically plausible, since x and y are indistinguishable; but a negative answer would prohibit any binary distinction between objects that are large and objects that are not, given that one can always construct objects x and y, one of which falls just below the divide while the other falls just above it. This is the strongest version of the sorites paradox (e.g., Hyde 2002). Our approach to vague descriptions allows a subtle response: that the offending statement may be correct yet infelicitous. This shifts the problem from asking when vague descriptions are “correct” to the question of when they are used felicitously. Felicity is naturally thought of as a gradable concept. There is therefore no need for a generator to demarcate precisely between felicitous and infelicitous expressions, as long as all the utterances generated are felicitous enough. When in doubt, a generator should avoid the expression in question. If x and y are mice of sizes 10 and 9.9 cm, for</context>
</contexts>
<marker>Hyde, 2002</marker>
<rawString>Hyde, Dominic. 2002. Sorites Paradox. In Edward Zalta, editor, The Stanford Encyclopedia of Philosophy (Fall 2002 Edition), http://plato.stanford.edu/ archives/fall2002/entries/soritesparadox/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Glyn James</author>
<author>David Burley</author>
<author>Dick Clements</author>
<author>Phil Dyke</author>
<author>John Searl</author>
<author>Jerry Wright</author>
</authors>
<title>Modern Engineering Mathematics, second edition.</title>
<date>1996</date>
<publisher>Addison-Wesley Longman Ltd.,</publisher>
<location>Harlow, UK.</location>
<contexts>
<context position="21778" citStr="James et al. 1996" startWordPosition="3649" endWordPosition="3652">llow mouse, or the large yellow mouse). 4.1.2 Exploiting Numerical Properties, Singular. To (almost4) ensure that every description contains a property expressible as a noun, we shall assume that the type Attribute is more highly preferred than all others. Suppose also, for now, that properties related to size are less preferred than others. As a result, all other properties that turn up in the NP are already in the list L when size is added. Suppose the target is c4: type(c1) = type(c2) = type(c3) = type(c4) = mouse type(p5) = rat size(c1) = 6 cm 3 The degree of precision of the measurement (James et al. 1996, Section 1.5) determines which objects can be described by the GRE algorithm, since it determines which objects count as having the same size. 4 To turn this likelihood into a certainty, one can add a test at the end of the algorithm, which adds a type-related property if none is present yet (cf., Dale and Reiter 1995). VAGUE uses both of these devices. 201 Computational Linguistics Volume 32, Number 2 size(c2) = 10 cm size(c3) = 12 cm size(c4) = size(p5) = 14 cm Since gradable properties are (for now at least) assumed to be dispreferred, the first property that makes it into L is ‘mouse,’ wh</context>
</contexts>
<marker>James, Burley, Clements, Dyke, Searl, Wright, 1996</marker>
<rawString>James, Glyn, David Burley, Dick Clements, Phil Dyke, John Searl, and Jerry Wright. 1996. Modern Engineering Mathematics, second edition. Addison-Wesley Longman Ltd., Harlow, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans Kamp</author>
</authors>
<title>Two theories about adjectives.</title>
<date>1975</date>
<booktitle>Semantics for Natural Language.</booktitle>
<editor>In E. Keenan, editor,</editor>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge, UK.</location>
<contexts>
<context position="9777" citStr="Kamp 1975" startWordPosition="1598" endWordPosition="1599">rge. Our own proposal will abstract away from the effects of linguistic context. We shall ask how noun phrases like the ones in (3) and (4) can be generated, without asking how they constrain, and are constrained by, other uses of large and related words. This will allow us to make the following simplification: In a definite description that expresses only properties that are needed for singling out a referent, we take the base form of 2 The reader is asked to focus on any reasonable size measurement, for example, the maximal horizontal or vertical distance, or some combination of dimensions (Kamp 1975; also Section 8.1 of the present article). 197 Computational Linguistics Volume 32, Number 2 the adjective to be semantically equivalent to the superlative form (and, analogously, the comparative): The n large mice = The largest n mice The large mice = The largest mice The large mouse = The largest mouse. Viewed in this way, gradable adjectives are an extreme example of the “efficiency of language” (Barwise and Perry 1983): Far from meaning something concrete like “larger than 8 cm”—a concept that would have very limited applicability—or even something more general like “larger than the avera</context>
<context position="63573" citStr="Kamp 1975" startWordPosition="10628" endWordPosition="10629"> Color). Multidimensionality can also slip in through the backdoor. Consider big, for example, when applied to 3D shapes. If there exists a formula for mapping three dimensions into one (e.g., length x width x height) then the result is one dimension (overall-size), and the algorithm of Section 4 can be applied verbatim. But if big is applied to a person then it is far from clear that there is one canonical formula for mapping the different dimensions of your body into one overall dimension, and this complicates the situation. Similar things hold for multifaceted properties like intelligence (Kamp 1975). Color terms are a case apart. If color is modeled in terms of saturation, hue, and luminosity, for instance, then an object a may be classified as greener than b on one dimension (e.g., saturation), but less green than b on another (e.g., hue). This would considerably complicate the application of our algorithm to color terms, which is otherwise mostly 215 Computational Linguistics Volume 32, Number 2 straighforward (Section 9.3). (The green chair, said in the presence of two greenish chairs, would refer to the one that is closest to prototypical green.) A further complication is that differ</context>
</contexts>
<marker>Kamp, 1975</marker>
<rawString>Kamp, Hans. 1975. Two theories about adjectives. In E. Keenan, editor, Semantics for Natural Language. Cambridge University Press, Cambridge, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christopher Kennedy</author>
</authors>
<title>Projecting the Adjective: The syntax and Semantics of Gradability and Comparison.</title>
<date>1999</date>
<tech>Ph.D. thesis,</tech>
<institution>UC Santa Cruz.</institution>
<contexts>
<context position="8884" citStr="Kennedy 1999" startWordPosition="1445" endWordPosition="1446"> means to be large: larger than average, larger than most, larger than some given baseline, and so on. It is doubtful that any one of these analyses makes sense for all definite descriptions. To see this, consider a domain of three mice, sized 5, 8, and 10 cm.2 Here one can speak of (3) The large mouse (= the one whose size is 10 cm) (4) The two large mice (= the two whose sizes are 8 and 10 cm) Clearly, what it takes for the adjective to be applicable has not been cast in stone, but is open to fiat: the speaker may decide that 8 cm is enough, or the speaker may set the standards higher (cf., Kennedy 1999). The numeral (whether it is implicit, as in (3), or explicit) can be construed as allowing the reader to draw inferences about the standards employed (Kyburg and Morreau 2000; DeVault and Stone 2004): (3), for example, implies a standard that counts 10 cm as large and 8 cm as not large. Our own proposal will abstract away from the effects of linguistic context. We shall ask how noun phrases like the ones in (3) and (4) can be generated, without asking how they constrain, and are constrained by, other uses of large and related words. This will allow us to make the following simplification: In </context>
</contexts>
<marker>Kennedy, 1999</marker>
<rawString>Kennedy, Christopher. 1999. Projecting the Adjective: The syntax and Semantics of Gradability and Comparison. Ph.D. thesis, UC Santa Cruz.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Emiel Krahmer</author>
<author>Mari¨et Theune</author>
</authors>
<title>Efficient context-sensitive generation of referring expressions.</title>
<date>2002</date>
<booktitle>Information Sharing: Reference and Presupposition in Language Generation and Interpretation, CSLI Publications, CSLI, Stanford,</booktitle>
<pages>223--264</pages>
<editor>In K. van Deemter and R. Kibble, editors,</editor>
<contexts>
<context position="35278" citStr="Krahmer and Theune 2002" startWordPosition="5987" endWordPosition="5990">s preferred than crisp ones (point 3) then this algorithm will only use gradable properties if an entirely crisp distinguishing description is impossible. This may well cause gradable properties to be underused. For this and other reasons, we shall consider non-incremental versions of these ideas in Section 8. 4.3 Computational Complexity We will examine the worst-case complexity of interpretation as well as generation to shed some light on the hypothesis that vague descriptions are more difficult to process than others because they involve a comparison between objects (Beun and Cremers 1998, Krahmer and Theune 2002). Before we do this, consider the tractability of the original IA. If the running time of FindBestValue(r,Ai) is a constant times the number of Values of the Attribute Ai, then the worst-case running time of IA (and IAPlur) is O(n77na), where na equals the number of Attributes in the language and n77 the average number of Values of all Attributes. This is because, in the worst case, all Values of all Attributes need to be attempted (van Deemter 2002). As for the new algorithm, we focus on the crucial phases 2, 4, and 5. 206 van Deemter GRE with Gradable Properties Phase 2: Recompilation of the</context>
<context position="43494" citStr="Krahmer and Theune 2002" startWordPosition="7359" endWordPosition="7362">c extension (e.g., the large mice, when the mice are sized 3, 2.8, 2.499, and 2.498 cm). This would allow the generator to use vague expressions, but only where they result in a description that is itself unambiguous. We shall see in Section 7 that it has not been easy to confirm the pragmatic constraints of the present section experimentally. 208 van Deemter GRE with Gradable Properties 6. Linguistic Realization Some recent GRE algorithms have done away with the separation between content determination and linguistic realization, interleaving the two processes instead (Stone and Webber 1998; Krahmer and Theune 2002). We have separated the two phases because, in the case of vague descriptions, interleaving would tend to be difficult. Consider, for instance, the list of properties L = (size &gt; 3 cm, size &lt; 9 cm). If interleaving forced us to realize the two properties in L one by one, then it would no longer be possible to combine them into, for example, the largest mouse but one (if the facts in the KB support it), or even into the mice between 3 and 9 cm (since size &gt; 3 cm is realized before size &lt; 9 cm). Clearly, sophisticated use of gradable adjectives requires a separation between CD and linguistic rea</context>
<context position="58051" citStr="Krahmer and Theune 2002" startWordPosition="9698" endWordPosition="9701">ty, since an adjective in a vague description can only be fully interpreted when its comparison set is known. Sedivy and colleagues resolve this quandary by allowing a kind of revision, whereby later words allow hearers to refine their interpretation of gradable adjectives. Summarizing the situation in generation and interpretation, it is clear that the last word on incrementality has not been said. 8.2 Low Preference for Gradable Properties? It has been argued that, in an incremental approach, gradable properties should be given a low preference ranking because they are difficult to process (Krahmer and Theune 2002). We have seen in Section 4.3 that generation and interpretation of vague descriptions does have a slightly higher computational complexity than that of nonvague descriptions. Yet, by giving gradable properties a low ranking, we might cause the algorithm to underuse them, for example, in situations where gradable properties are highly relevant to the purpose of the discourse (e.g., a fist fight between people of very different sizes). Luckily, there are no semantic or algorithmic reasons for giving gradables a low ranking. Let us see how things would work if they were ranked more highly. Suppo</context>
<context position="59902" citStr="Krahmer and Theune 2002" startWordPosition="9989" endWordPosition="9992">re transformed into the appropriate superlatives. The effect would be to boost the number of occurrences of gradable properties in generated descriptions while keeping CD incremental. 9. Extensions of the Approach 9.1 Relational Descriptions Some generalizations of our method are fairly straightforward. For example, consider a relational description (cf., Dale and Haddock 1991) involving a gradable adjective, as in the dog in the large shed. CD for this type of descriptions along the lines of Section 4 is not difficult once relational descriptions are integrated with a standard GRE algorithm (Krahmer and Theune 2002, Section 8.6.2): Suppose an initial description is generated describing the set of all those dogs that are in sheds over a given size (say, size 5); if this description happens to distinguish an individual dog then this legitimizes the use of the noun phrase the dog in the large shed. Note that this is felicitous even if the shed is not the largest one in the domain, as is true for d2 in the following situation (contains-a=b means that a is contained by b): type(d1) = type(d2) = dog type(c) = cat type(s1) = type(s2) = type(s3) = shed size(d1) = size(d2) = size(c) = 1m size(s1) = 3m size(s2) =</context>
<context position="65880" citStr="Krahmer and Theune (2002)" startWordPosition="10991" endWordPosition="10994"> still somewhat weak, so the risk of referential unclarity looms large. Also, this attitude would go against the spirit of GRE, where referring expressions have always been assumed to be distinguishing. 9.4 Salience as a Gradable Property We shall see that a natural treatment of salience falls automatically out of our treatment of vague descriptions. As we shall see, this will allow us to simplify the structure of GRE algorithms, and it will explain why many definite descriptions that look as if they were distinguishing descriptions are actually ambiguous. 9.4.1 A New Perspective on Salience. Krahmer and Theune (2002) have argued that Dale and Reiter’s (1995) dichotomy between salient and nonsalient objects (where the objects in the domain are the salient ones) should be replaced by an account that takes degrees of salience into account: No object can be too unsalient to be referred to, as long as the right properties are available. In effect, this proposal (which measured salience numerically) analyzes the black mouse as denoting the unique most salient object in the domain that is both black and a mouse. Now suppose we let GRE treat salience just like other gradable Attributes. Suppose there are ten mice</context>
</contexts>
<marker>Krahmer, Theune, 2002</marker>
<rawString>Krahmer, Emiel and Mari¨et Theune. 2002. Efficient context-sensitive generation of referring expressions. In K. van Deemter and R. Kibble, editors, Information Sharing: Reference and Presupposition in Language Generation and Interpretation, CSLI Publications, CSLI, Stanford, pages 223–264.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Emiel Krahmer</author>
<author>Ielka van der Sluis</author>
</authors>
<title>A new model for generating multimodal referring expressions.</title>
<date>2003</date>
<booktitle>In Proceedings of 9th European Workshop on Natural Language Generation (ENLG-2003),</booktitle>
<pages>47--54</pages>
<location>Budapest.</location>
<marker>Krahmer, van der Sluis, 2003</marker>
<rawString>Krahmer, Emiel and Ielka van der Sluis. 2003. A new model for generating multimodal referring expressions. In Proceedings of 9th European Workshop on Natural Language Generation (ENLG-2003), pages 47–54, Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alice Kyburg</author>
<author>Michael Morreau</author>
</authors>
<title>Fitting Words: vague language in context. Linguistics and Philosophy,</title>
<date>2000</date>
<pages>23--577</pages>
<contexts>
<context position="9059" citStr="Kyburg and Morreau 2000" startWordPosition="1472" endWordPosition="1475">all definite descriptions. To see this, consider a domain of three mice, sized 5, 8, and 10 cm.2 Here one can speak of (3) The large mouse (= the one whose size is 10 cm) (4) The two large mice (= the two whose sizes are 8 and 10 cm) Clearly, what it takes for the adjective to be applicable has not been cast in stone, but is open to fiat: the speaker may decide that 8 cm is enough, or the speaker may set the standards higher (cf., Kennedy 1999). The numeral (whether it is implicit, as in (3), or explicit) can be construed as allowing the reader to draw inferences about the standards employed (Kyburg and Morreau 2000; DeVault and Stone 2004): (3), for example, implies a standard that counts 10 cm as large and 8 cm as not large. Our own proposal will abstract away from the effects of linguistic context. We shall ask how noun phrases like the ones in (3) and (4) can be generated, without asking how they constrain, and are constrained by, other uses of large and related words. This will allow us to make the following simplification: In a definite description that expresses only properties that are needed for singling out a referent, we take the base form of 2 The reader is asked to focus on any reasonable si</context>
</contexts>
<marker>Kyburg, Morreau, 2000</marker>
<rawString>Kyburg, Alice and Michael Morreau. 2000. Fitting Words: vague language in context. Linguistics and Philosophy, 23:577–597.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William J M Levelt</author>
</authors>
<title>Speaking: From Intention to Articulation.</title>
<date>1989</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="27718" citStr="Levelt 1989" startWordPosition="4716" endWordPosition="4717">, all of whose elements are larger than all other elements in C.” The result may be realized as the largest mice. L3 = (mouse, size(x) = max). 4.1.4 Ordering of Properties. Even if comparative properties are at the bottom of the preference order, while stronger inequalities precede weaker ones, the order is not fixed completely. Suppose, for example, that the KB contains information about height as well as width, then we have inequalities of the forms (a) height &gt; x, (b) height &lt; x, (c) width &gt; x, and (d) width &lt; x. Which of these should come first? Hermann and Deutsch (1976; also reported in Levelt 1989) show that greater differences are most likely to be chosen, presumably because they are more striking. In experiments involving candles of different heights and widths, if the referent is both the tallest and the fattest candle, subjects tended to say ‘the tall candle’ when the tallest candle is much taller than all others whereas the same candle is only slightly wider than the others; if the reverse is the case, the preference switches to ‘the fat candle.’ Hermann and Deutsch’s findings may be implemented as follows. First, the Values of the different Attributes should be normalized to make </context>
<context position="56247" citStr="Levelt 1989" startWordPosition="9435" endWordPosition="9436">cause the superlative properties resulting from (5), unlike the inequalities resulting from (4), are context dependent. For example, (mouse, size(x) = max2) (the largest two mice, {c3,c4}) does not equal (size(x) = max2, mouse) (the mouse among the largest two elements, {c4}). Deletion of superfluous inequalities avoids saying, for example, the short(est) black mouse if there is only one black mouse, because this might invite false implicatures. 8.1 Problems with Incrementality While IA is generally thought to be consistent with findings on human language production (Hermann and Deutsch 1976; Levelt 1989; Pechmann 1989; Sonnenschein 1982), the hypothesis that incrementality is a good model of human GRE seems unfalsifiable until a preference order is specified for the properties on which it operates. (Wildly redundant descriptions can result if the ‘wrong’ preference order are chosen.) We shall see that vague descriptions pose particular challenges to incrementality. One question emerges when the IA is combined with findings on word order and incremental interpretation. If human speakers and/or writers perform CD incrementally, then why are properties not expressed in the same order in which t</context>
</contexts>
<marker>Levelt, 1989</marker>
<rawString>Levelt, William J. M. 1989. Speaking: From Intention to Articulation. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rob Malouf</author>
</authors>
<title>The order of prenominal adjectives in natural language generation.</title>
<date>2000</date>
<booktitle>In Proceedings of ACL-2000,</booktitle>
<pages>85--92</pages>
<location>Hong Kong.</location>
<contexts>
<context position="44982" citStr="Malouf 2000" startWordPosition="7607" endWordPosition="7608"> expressions generation from its language-dependent, linguistic aspect. Our algorithm suggests a distinction into three phases, the first two of which can be thought of as part of CD: 1. CD proper, that is, the production of a distinguishing list of properties L; 2. An inference phase, during which the list L is transformed; 3. A realization phase, during which the choice between base, superlative, and comparative forms is made, among other things. One area of current interest concerns the left-to-right arrangement of premodifying adjectives within an NP (e.g., Shaw and Hatzivassiloglou 1999; Malouf 2000). Work in this area is often based on assigning adjectives to a small number of categories (e.g., Precentral, Central, Postcentral, and Prehead), which predict adjectives’ relative position. Interestingly, vague properties tend to be realized before others. Quirk et al. (1985), for example, report that “adjectives denoting size, length, and height normally precede other nonderived adjectives” (e.g., the small round table is usually preferred to the round small table). Semantically, this does not come as a surprise. In a noun phrase of the form the three small(-est) [N], for example, the words </context>
</contexts>
<marker>Malouf, 2000</marker>
<rawString>Malouf, Rob. 2000. The order of prenominal adjectives in natural language generation. In Proceedings of ACL-2000, pages 85–92, Hong Kong.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Judith Masthoff</author>
</authors>
<title>Group modeling: Selecting a sequence of television items to suit a group of viewers. User Modeling and User Adapted Interaction,</title>
<date>2004</date>
<pages>14--37</pages>
<marker>Masthoff, 2004</marker>
<rawString>Masthoff, Judith. 2004. Group modeling: Selecting a sequence of television items to suit a group of viewers. User Modeling and User Adapted Interaction, 14:37–85.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Mellish</author>
</authors>
<title>Understanding shortcuts in NLG systems.</title>
<date>2000</date>
<booktitle>In Proceedings of Workshop ‘Impacts in Natural Language Generation’,</booktitle>
<pages>43--50</pages>
<location>Dagstuhl, Germany.</location>
<contexts>
<context position="74164" citStr="Mellish 2000" startWordPosition="12418" endWordPosition="12419"> degrees of salience (i.e., the closer to the center of pointing, the higher the value for the attribute SALIENCE) in the style of Section 9.2. 218 van Deemter GRE with Gradable Properties 10. Conclusion If the usefulness of NLG resides in its ability to present data in human-accessible form, then vagueness must surely be one of its central instruments, because it allows the suppression of irrelevant detail. In principle, this might be done by providing the generator with vague input—in which case no special algorithms are needed—but suitably contextualized vague input is often not available (Mellish 2000). The only practical alternative is to provide the generator with “crisp” (i.e., quantitative) input, allowing the generator to be hooked on to a general-purpose database. It is this avenue that we have explored in this article, in combination with various (incremental and other) approaches to GRE. Far from being a peculiarity of a few adjectives, vagueness is widespread. We believe that our approach can be applied to a variety of situations in which vagueness affects referring expressions including, for example, • color terms (Section 9.3); • nouns that allow different degrees of strictness (</context>
</contexts>
<marker>Mellish, 2000</marker>
<rawString>Mellish, Chris. 2000. Understanding shortcuts in NLG systems. In Proceedings of Workshop ‘Impacts in Natural Language Generation’, pages 43–50, Dagstuhl, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Nash</author>
</authors>
<title>The bargaining problem.</title>
<date>1950</date>
<journal>Econometrica,</journal>
<pages>18--155</pages>
<contexts>
<context position="62863" citStr="Nash 1950" startWordPosition="10515" endWordPosition="10516">he only object that has a Pareto-optimal combination of Values, predicting correctly that b can be called the tall fat giraffe. It seems likely, however, that people use doubly graded descriptions more liberally. For example, if the example is modified by letting width(a) = 3.1 m, making a slightly fatter than b, then b might still be the only reasonable referent of the tall fat giraffe. Many alternative strategies are possible. The Nash arbitration plan, for example, would allow a doubly graded description whenever the product of the Values for the referent r exceeds that of all distractors (Nash 1950; cf. Gorniak and Roy 2003; Thorisson 1994, for other plans). 9.3.2 Multidimensional Adjectives (and Color). Multidimensionality can also slip in through the backdoor. Consider big, for example, when applied to 3D shapes. If there exists a formula for mapping three dimensions into one (e.g., length x width x height) then the result is one dimension (overall-size), and the algorithm of Section 4 can be applied verbatim. But if big is applied to a person then it is far from clear that there is one canonical formula for mapping the different dimensions of your body into one overall dimension, and</context>
</contexts>
<marker>Nash, 1950</marker>
<rawString>Nash, John. 1950. The bargaining problem. Econometrica, 18:155–162.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jean Stillwell Peccei</author>
</authors>
<date>1994</date>
<publisher>Child Language, Routledge.</publisher>
<contexts>
<context position="2366" citStr="Peccei 1994" startWordPosition="358" endWordPosition="359"> indeterminacy of meaning; as a result, they allow us to make inroads into the difficult area of research on vagueness. Generation offers an interesting perspective because it forces one to ask when it is a good idea to use these descriptions, in addition to asking what they mean. Gradability is especially widespread in adjectives. A search of the British National Corpus (BNC), for example, shows at least seven of the ten most frequent adjectives (last, other, new, good, old, great, high, small, different, large) to be gradable. Children use vague adjectives among their first dozens of words (Peccei 1994) and understand some of their intricacies as early as their 24th month (Ebeling and Gelman 1994). These * Computing Science Department, King’s College, University of Aberdeen, United Kingdom, E-mail: kvdeemter@csd.abdn.ac.uk. 1 We take such adjectives to be ones that have comparative and superlative forms, and which can be premodified by intensifiers such as very (Quirk et al. 1972, Section 5.4). Submission received: 7 July 2004; revised submission received: 19 October 2005; accepted for publication: 24 November 2005. © 2006 Association for Computational Linguistics Computational Linguistics V</context>
</contexts>
<marker>Peccei, 1994</marker>
<rawString>Peccei, Jean Stillwell. 1994. Child Language, Routledge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas Pechmann</author>
</authors>
<title>Incremental speech production and referential overspecification.</title>
<date>1989</date>
<journal>Linguistics,</journal>
<pages>27--98</pages>
<contexts>
<context position="56262" citStr="Pechmann 1989" startWordPosition="9437" endWordPosition="9438">erlative properties resulting from (5), unlike the inequalities resulting from (4), are context dependent. For example, (mouse, size(x) = max2) (the largest two mice, {c3,c4}) does not equal (size(x) = max2, mouse) (the mouse among the largest two elements, {c4}). Deletion of superfluous inequalities avoids saying, for example, the short(est) black mouse if there is only one black mouse, because this might invite false implicatures. 8.1 Problems with Incrementality While IA is generally thought to be consistent with findings on human language production (Hermann and Deutsch 1976; Levelt 1989; Pechmann 1989; Sonnenschein 1982), the hypothesis that incrementality is a good model of human GRE seems unfalsifiable until a preference order is specified for the properties on which it operates. (Wildly redundant descriptions can result if the ‘wrong’ preference order are chosen.) We shall see that vague descriptions pose particular challenges to incrementality. One question emerges when the IA is combined with findings on word order and incremental interpretation. If human speakers and/or writers perform CD incrementally, then why are properties not expressed in the same order in which they were select</context>
</contexts>
<marker>Pechmann, 1989</marker>
<rawString>Pechmann, Thomas. 1989. Incremental speech production and referential overspecification. Linguistics, 27:98–110.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Manfred Pinkal</author>
</authors>
<title>How to refer with vague descriptions.</title>
<date>1979</date>
<booktitle>Semantics from Different Points of View.</booktitle>
<pages>32--50</pages>
<editor>In R. B¨auerle, U. Egli, and A. von Stechow, editors,</editor>
<publisher>Springer Verlag,</publisher>
<location>Berlin,</location>
<contexts>
<context position="1236" citStr="Pinkal (1979)" startWordPosition="176" endWordPosition="177">rticle concludes with a discussion of salience and pointing, which are analyzed as if they were gradable adjectives. 1. Introduction: Vagueness of Gradable Adjectives 1.1 Vague Descriptions Vague or gradable expressions pose problems to models of language, caused by their context dependence, and by the fact that they are applicable to different degrees. This article focuses on gradable adjectives, also called degree adjectives.1 More specifically, we shall explore how referring expressions containing gradable adjectives can be produced by a Natural Language Generation (NLG) program. Following Pinkal (1979), such expressions will be called vague descriptions even though, as we shall see, the vagueness of the adjective does not extend to the description as a whole. It will be useful to generalize over different forms of the adjective, covering the superlative form (e.g., largest) and the comparative form (larger), as well as the positive or base form (large) of the adjective. Vague descriptions are worth studying because they use vagueness in a comparatively transparent way, often combining clarity of reference with indeterminacy of meaning; as a result, they allow us to make inroads into the dif</context>
</contexts>
<marker>Pinkal, 1979</marker>
<rawString>Pinkal, Manfred. 1979. How to refer with vague descriptions. In R. B¨auerle, U. Egli, and A. von Stechow, editors, Semantics from Different Points of View. Springer Verlag, Berlin, pages 32–50.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Randolph Quirk</author>
<author>Sidney Greenbaum</author>
<author>Geoffrey Leech</author>
<author>Jan Svartvik</author>
</authors>
<date>1972</date>
<journal>A Grammar of Contemporary English. Longman,</journal>
<location>Harlow, Essex.</location>
<contexts>
<context position="2750" citStr="Quirk et al. 1972" startWordPosition="414" endWordPosition="417">, for example, shows at least seven of the ten most frequent adjectives (last, other, new, good, old, great, high, small, different, large) to be gradable. Children use vague adjectives among their first dozens of words (Peccei 1994) and understand some of their intricacies as early as their 24th month (Ebeling and Gelman 1994). These * Computing Science Department, King’s College, University of Aberdeen, United Kingdom, E-mail: kvdeemter@csd.abdn.ac.uk. 1 We take such adjectives to be ones that have comparative and superlative forms, and which can be premodified by intensifiers such as very (Quirk et al. 1972, Section 5.4). Submission received: 7 July 2004; revised submission received: 19 October 2005; accepted for publication: 24 November 2005. © 2006 Association for Computational Linguistics Computational Linguistics Volume 32, Number 2 intricacies include what Ebeling and Gelman call perceptual context dependence, as when a set of objects is perceptually available and the adjective is applied to an element or subset of the set (e.g., Is this hat big or is it little?, when two hats of different sizes are visible). 1.2 Vagueness in NLG Some NLG systems produce gradable adjectives. The FOG weather</context>
</contexts>
<marker>Quirk, Greenbaum, Leech, Svartvik, 1972</marker>
<rawString>Quirk, Randolph, Sidney Greenbaum, Geoffrey Leech, and Jan Svartvik. 1972. A Grammar of Contemporary English. Longman, Harlow, Essex.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Randolph Quirk</author>
<author>Sidney Greenbaum</author>
<author>Geoffrey Leech</author>
<author>Jan Svartvik</author>
</authors>
<date>1985</date>
<journal>A Comprehensive Grammar of the English. Longman,</journal>
<location>Harlow, Essex.</location>
<contexts>
<context position="45259" citStr="Quirk et al. (1985)" startWordPosition="7645" endWordPosition="7648">inference phase, during which the list L is transformed; 3. A realization phase, during which the choice between base, superlative, and comparative forms is made, among other things. One area of current interest concerns the left-to-right arrangement of premodifying adjectives within an NP (e.g., Shaw and Hatzivassiloglou 1999; Malouf 2000). Work in this area is often based on assigning adjectives to a small number of categories (e.g., Precentral, Central, Postcentral, and Prehead), which predict adjectives’ relative position. Interestingly, vague properties tend to be realized before others. Quirk et al. (1985), for example, report that “adjectives denoting size, length, and height normally precede other nonderived adjectives” (e.g., the small round table is usually preferred to the round small table). Semantically, this does not come as a surprise. In a noun phrase of the form the three small(-est) [N], for example, the words preceding N select the three smallest elements of [N]. It follows that, to denote the three smallest elements of the set of round tables, the only option is to say the three small round tables, rather than the three round small tables. The latter would mean something else, nam</context>
</contexts>
<marker>Quirk, Greenbaum, Leech, Svartvik, 1985</marker>
<rawString>Quirk, Randolph, Sidney Greenbaum, Geoffrey Leech, and Jan Svartvik. 1985. A Comprehensive Grammar of the English. Longman, Harlow, Essex.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eric Rasmusen</author>
</authors>
<title>Games and Information: An Introduction to Game Theory.</title>
<date>1989</date>
<publisher>Blackwell Publishing.</publisher>
<contexts>
<context position="61392" citStr="Rasmusen 1989" startWordPosition="10248" endWordPosition="10249">, to say the dog in the largest shed. 9.2 Boolean Combinations Generalizations to complex Boolean descriptions involving negation and disjunction (van Deemter 2004) appear to be largely straightforward, except for issues to do with 214 van Deemter GRE with Gradable Properties opposites and markedness. For example, the generator will have to decide whether to say the patients that are old or the patients that are not young. 9.3 Multidimensionality 9.3.1 Combinations of Adjectives. When objects are compared in terms of several dimensions, these dimensions can be weighed in different ways (e.g., Rasmusen 1989). Let us focus on references to an individual referent r, starting with a description that contains more than one gradable adjective. The NP the tall fat giraffe, for example, can safely refer to an element b in a situation like the one below, where b is the only element that exceeds all distractors with respect to some dimension (a different one for a than for c, as it happens) while not being exceeded by any distractors in any dimension: height(a) = 5 m height(b) = height(c) = 15 m width(a) = width(b) = 3 m width(c) = 2 m Cases like this would be covered if the decision-theoretic property of</context>
</contexts>
<marker>Rasmusen, 1989</marker>
<rawString>Rasmusen, Eric. 1989. Games and Information: An Introduction to Game Theory. Blackwell Publishing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ehud Reiter</author>
<author>Robert Dale</author>
</authors>
<title>Building Natural Language Generation Systems.</title>
<date>2000</date>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge, UK.</location>
<contexts>
<context position="75956" citStr="Reiter and Dale 2000" startWordPosition="12702" endWordPosition="12705"> so on, each of which may single out the same individuals. Section 7.3 has summarized some experimental evidence related to such choices, focusing on the different forms of the adjective, but the evidence is far from conclusive. Much is still unknown, differences between speakers abound, and the experimental methodology for advancing the state of the art in this area is not without its problems (van Deemter 2004). Architecture (Section 6). The inference rules that were necessary to convert one list of properties into another do not sit comfortably within the received NLG pipeline model (e.g., Reiter and Dale 2000). An example of such an inference rule is the one that transforms a list of the form (mouse, &gt;10 cm) into one of the form (mouse, size(x) = max2) if only two mice are larger than 10 cm. The same issues also make it difficult to interleave CD and linguistic realization as proposed by various authors, because properties may need to be combined before they are expressed. Incrementality (Section 8). Gradable adjectives complicate the notion of incrementality, in generation as well as interpretation. Focusing on generation, for example, they force us to reexamine the idea that properties can be put</context>
</contexts>
<marker>Reiter, Dale, 2000</marker>
<rawString>Reiter, Ehud and Robert Dale. 2000. Building Natural Language Generation Systems. Cambridge University Press, Cambridge, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ehud Reiter</author>
<author>Somayajulu Sripada</author>
</authors>
<title>Should corpora texts be gold standards for NLG?</title>
<date>2002</date>
<booktitle>In Proceedings of Second International Conference on Natural Language Generation (INLG-2002),</booktitle>
<pages>97--104</pages>
<location>New York.</location>
<contexts>
<context position="3774" citStr="Reiter and Sripada (2002)" startWordPosition="576" endWordPosition="579">n element or subset of the set (e.g., Is this hat big or is it little?, when two hats of different sizes are visible). 1.2 Vagueness in NLG Some NLG systems produce gradable adjectives. The FOG weather-forecast system, for example, uses numerical input (Rain[Tuesday] = 45 mm) to generate vague output (Heavy rain fell on Tuesday, Goldberg, Driedger, and Kitteridge 1994). FOG does not appear to have generic rules governing the use of gradable notions: it does not compute the meaning of a vague term based on the context, but uses fixed boundary values instead. A more flexible approach is used by Reiter and Sripada (2002), where users can specify boundary values for attributes like rainfall, specifying, for example, rain counts as moderate above 7 mm/h, as heavy above 20 mm/h, and so on. A third approach was implemented in Dial Your Disc (DYD), where the extension of a gradable adjective like famous was computed rather than specified by hand (van Deemter and Odijk 1997). To determine, for example, whether one of Mozart’s piano sonatas could be called a famous sonata, the system looked up the number x of compact disc recordings of this sonata (as listed in an encyclopedia) and compared it to the average number </context>
<context position="52713" citStr="Reiter and Sripada (2002)" startWordPosition="8872" endWordPosition="8875">ying “The two high numbers appear in brackets”? The outcomes of the experiment suggested that readers understand plural vague descriptions in accordance with the semantics of Section 2 (van Deemter 2000). In other words, they judged the description to be correct if and only if the two highest numbers in the sequence appeared in brackets. Assessing the evidence, it seems that vague descriptions are largely unproblematic from the point of view of interpretation. 7.3 Testing the Felicity of the Generated Expressions How can we choose between the different forms that a vague description can take? Reiter and Sripada (2002) showed that the variation in corpora based on expert authors 211 Computational Linguistics Volume 32, Number 2 can be considerable, especially in their use of vague expressions (e.g., by evening, by late evening, around midnight). We confirmed these findings using experiments with human subjects (van Deemter 2004), focusing on the choice between the different forms of the adjective. Informally: 1. The dichotomy constraint of Section 5 did not hold up well: Even when comparing two things, the superlative form was often preferred over the comparative. 2. When base forms were used, the gap was a</context>
</contexts>
<marker>Reiter, Sripada, 2002</marker>
<rawString>Reiter, Ehud and Somayajulu (Yaji) Sripada. 2002. Should corpora texts be gold standards for NLG? In Proceedings of Second International Conference on Natural Language Generation (INLG-2002), pages 97–104, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eleanor Rosch</author>
</authors>
<title>Cognitive reference points.</title>
<date>1975</date>
<pages>7--532</pages>
<publisher>Cognitive Psychology,</publisher>
<contexts>
<context position="72025" citStr="Rosch 1975" startWordPosition="12042" endWordPosition="12043">ly generated on the basis of a KB that involves Values representing degrees of being an academic, the more so because our approach generalizes to ordinal measurements (except for Small Gaps (Section 5), which requires an interval or ratio scale, since it involves an assessment of the size of the gap between Values). Note that this treatment could cover all those nouns that are used with various degrees of strictness. It is difficult to say how many nouns fall in this category, but the phenomenon is believed to be widespread. This is, for example, one of the central tenets of Prototype Theory (Rosch 1975). An uncomfortable consequence of these observations is that it is no longer obvious which words denote a crisp property, and which a gradable property. (For example, it is not clear whether GRE should treat academic as gradable.) 9.5.2 Pointing. To show that vagueness is also inherent in multimodal communication, imagine the same gathering, but with some more people present. Suppose someone points at the centre of the gathering. (See below, where W denotes women.) If the distance between pointer and pointee is considerable then the boundaries of the region pointed to are not exactly defined: </context>
</contexts>
<marker>Rosch, 1975</marker>
<rawString>Rosch, Eleanor. 1975. Cognitive reference points. Cognitive Psychology, 7:532–547.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eleanor Rosch</author>
</authors>
<title>Principles of categorization.</title>
<date>1978</date>
<booktitle>Cognition and Categorization, Lawrence Erlbaum,</booktitle>
<pages>27--48</pages>
<editor>In E. Rosch and B. Lloyd, editors,</editor>
<location>Hillsdale, NJ,</location>
<contexts>
<context position="17946" citStr="Rosch 1978" startWordPosition="3016" endWordPosition="3017">L := 0 C := Domain For each Ai c A do Vi = FindBestValue(S,Ai) If S C [(Ai, Vi)] &amp; C C� [(Ai, Vi)] then do L := L U {(Ai, Vi)I C := C n [(Ai, Vi)] If C = S then Return L Return Failure FindBestValue selects the ‘best value’ from among the Values of a given Attribute, assuming that these are linearly ordered in terms of specificity. The function selects the Value that removes most distractors, but in case of a tie, the least specific contestant is chosen, as long as it is not less specific than the basic-level Value (i.e., the most commonly occurring and psychologically most fundamental level, Rosch 1978). IAPlur can refer to individuals as well as sets, since reference to a target individual r can be modeled as reference to the singleton set {r}. 3.2 The Existing Treatment of Gradables IAPlur deals with vague properties in essentially the same way as FOG: Attributes like size are treated as if they were not context dependent: Their Values always apply to the same objects, regardless of what other properties occur in the description. In this way, IA could never describe the same animal as the large chihuahua and the small brown dog, for example. This approach does not do justice to gradable ad</context>
</contexts>
<marker>Rosch, 1978</marker>
<rawString>Rosch, Eleanor. 1978. Principles of categorization. In E. Rosch and B. Lloyd, editors, Cognition and Categorization, Lawrence Erlbaum, Hillsdale, NJ, pages 27–48.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Julie Sedivy</author>
<author>Michael Tanenhaus</author>
<author>Craig Chambers</author>
<author>Gregory Carlson</author>
</authors>
<title>Achieving incremental semantic interpretation through contextual representation.</title>
<date>1999</date>
<journal>Cognition,</journal>
<pages>71--109</pages>
<contexts>
<context position="12601" citStr="Sedivy et al. 1999" startWordPosition="2071" endWordPosition="2074">eferent of an evaluative description fall into the correct segment of the relevant dimension. (For Fritz to be the stupid man, it is not enough for him to be the least intelligent male in the local context; he also has to be a fairly stupid specimen in his own right.) If this is done, it is not evident that dimensional adjectives should be treated differently: If Hans’s and Fritz’s heights are 210 and 198 van Deemter GRE with Gradable Properties 205 cm, respectively, then it seems questionable to describe Fritz as the short man, even if Hans is the only other man in the local context (but see Sedivy et al. 1999, discussed in Section 7.2). Be this as it may, we shall henceforth focus on local context, assuming that additional requirements on the global context can be made if necessary. With these qualifications in place, let us say more precisely what we will assume the different types of expressions to mean. For ease of reading, concrete examples (e.g., large) will replace abstract labels (e.g., ‘Adj’), but the analysis is meant to be general. The largest n mouse/mice; The n large mice. Imagine a set C of contextually relevant animals. Then these noun phrases (NPs) presuppose that there is a subset </context>
<context position="50053" citStr="Sedivy et al. (1999)" startWordPosition="8416" endWordPosition="8419">the kind of numerical representations that our algorithm has used as input. Although psychological plausibility is not our aim, it is worth noting that the inequalities computed as step 2 of the algorithm of Section 4 might be psychologically more plausible, since they are essentially no more than comparisons between objects. 6 Presumably, Beun and Cremers (1998) found vague adjectives to be rare because, in their experiments, referents could always be identified using nongradable dimensions. 210 van Deemter GRE with Gradable Properties 7.2 Testing the Correctness of the Generated Expressions Sedivy et al. (1999) asked subjects to identify the target of a vague description in a visual scene. Consider the tall cup. The relevant scene would contain three distractors: (1) a less tall object of the same type as the target (e.g., a cup that is less tall), (2) a different kind of object that previous studies had shown to be intermediate in height (e.g., a pitcher that, while being taller than both cups, was neither short nor tall for a pitcher), and (3) a different type of object to which the adjective is inapplicable (e.g., a door key). Across the different conditions under which the experiment was done (e</context>
<context position="57317" citStr="Sedivy et al. 1999" startWordPosition="9587" endWordPosition="9590">emental interpretation. If human speakers and/or writers perform CD incrementally, then why are properties not expressed in the same order in which they were selected? This question is especially pertinent in the case of vague expressions, since gradable properties are selected last, but realized first (Section 6). This means that the linguistic realization cannot start until CD is concluded, contradicting eye-tracking experiments suggesting that speakers start speaking while still scanning distractors (Pechmann 1989). A similar problem is discussed in the psycholinguistics of interpretation (Sedivy et al. 1999): Interpretation is widely assumed to proceed incrementally, but vague descriptions resist strict incrementality, since an adjective in a vague description can only be fully interpreted when its comparison set is known. Sedivy and colleagues resolve this quandary by allowing a kind of revision, whereby later words allow hearers to refine their interpretation of gradable adjectives. Summarizing the situation in generation and interpretation, it is clear that the last word on incrementality has not been said. 8.2 Low Preference for Gradable Properties? It has been argued that, in an incremental </context>
</contexts>
<marker>Sedivy, Tanenhaus, Chambers, Carlson, 1999</marker>
<rawString>Sedivy, Julie, Michael Tanenhaus, Craig Chambers, and Gregory Carlson. 1999. Achieving incremental semantic interpretation through contextual representation. Cognition, 71:109–147.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Shaw</author>
<author>Vasileios Hatzivassiloglou</author>
</authors>
<title>Ordering among premodifiers.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL99,</booktitle>
<pages>135--143</pages>
<institution>University of Maryland, College Park.</institution>
<contexts>
<context position="44968" citStr="Shaw and Hatzivassiloglou 1999" startWordPosition="7603" endWordPosition="7606">ent, logical aspect of referring expressions generation from its language-dependent, linguistic aspect. Our algorithm suggests a distinction into three phases, the first two of which can be thought of as part of CD: 1. CD proper, that is, the production of a distinguishing list of properties L; 2. An inference phase, during which the list L is transformed; 3. A realization phase, during which the choice between base, superlative, and comparative forms is made, among other things. One area of current interest concerns the left-to-right arrangement of premodifying adjectives within an NP (e.g., Shaw and Hatzivassiloglou 1999; Malouf 2000). Work in this area is often based on assigning adjectives to a small number of categories (e.g., Precentral, Central, Postcentral, and Prehead), which predict adjectives’ relative position. Interestingly, vague properties tend to be realized before others. Quirk et al. (1985), for example, report that “adjectives denoting size, length, and height normally precede other nonderived adjectives” (e.g., the small round table is usually preferred to the round small table). Semantically, this does not come as a surprise. In a noun phrase of the form the three small(-est) [N], for examp</context>
</contexts>
<marker>Shaw, Hatzivassiloglou, 1999</marker>
<rawString>Shaw, James and Vasileios Hatzivassiloglou. 1999. Ordering among premodifiers. In Proceedings of ACL99, pages 135–143, University of Maryland, College Park.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susan Sonnenschein</author>
</authors>
<title>The effects of redundant communications on listeners: When more is less. Child Development,</title>
<date>1982</date>
<pages>53--717</pages>
<contexts>
<context position="56282" citStr="Sonnenschein 1982" startWordPosition="9439" endWordPosition="9440">ties resulting from (5), unlike the inequalities resulting from (4), are context dependent. For example, (mouse, size(x) = max2) (the largest two mice, {c3,c4}) does not equal (size(x) = max2, mouse) (the mouse among the largest two elements, {c4}). Deletion of superfluous inequalities avoids saying, for example, the short(est) black mouse if there is only one black mouse, because this might invite false implicatures. 8.1 Problems with Incrementality While IA is generally thought to be consistent with findings on human language production (Hermann and Deutsch 1976; Levelt 1989; Pechmann 1989; Sonnenschein 1982), the hypothesis that incrementality is a good model of human GRE seems unfalsifiable until a preference order is specified for the properties on which it operates. (Wildly redundant descriptions can result if the ‘wrong’ preference order are chosen.) We shall see that vague descriptions pose particular challenges to incrementality. One question emerges when the IA is combined with findings on word order and incremental interpretation. If human speakers and/or writers perform CD incrementally, then why are properties not expressed in the same order in which they were selected? This question is</context>
</contexts>
<marker>Sonnenschein, 1982</marker>
<rawString>Sonnenschein, Susan. 1982. The effects of redundant communications on listeners: When more is less. Child Development, 53:717–729.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yaji Sripada</author>
<author>Ehud Reiter</author>
<author>Ian Davy</author>
</authors>
<title>SumTime-Mousam: Configurable marine weather forecast generator.</title>
<date>2003</date>
<journal>Expert Update,</journal>
<volume>6</volume>
<issue>3</issue>
<marker>Sripada, Reiter, Davy, 2003</marker>
<rawString>Sripada, Yaji, Ehud Reiter, and Ian Davy. 2003. SumTime-Mousam: Configurable marine weather forecast generator. Expert Update, 6(3):4–10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Stone</author>
</authors>
<title>On identifying sets.</title>
<date>2000</date>
<booktitle>In Proceedings of INLG-2000,</booktitle>
<pages>116--123</pages>
<location>Mitzpe Ramon,</location>
<marker>Stone, 2000</marker>
<rawString>Stone, Matthew. 2000. On identifying sets. In Proceedings of INLG-2000, pages 116–123, Mitzpe Ramon, Israel.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Stone</author>
<author>Bonnie Webber</author>
</authors>
<title>Textual Economy through close coupling of syntax and semantics.</title>
<date>1998</date>
<booktitle>In Proceedings of INLG-1998,</booktitle>
<pages>178--187</pages>
<contexts>
<context position="43468" citStr="Stone and Webber 1998" startWordPosition="7355" endWordPosition="7358">en to enforce a specific extension (e.g., the large mice, when the mice are sized 3, 2.8, 2.499, and 2.498 cm). This would allow the generator to use vague expressions, but only where they result in a description that is itself unambiguous. We shall see in Section 7 that it has not been easy to confirm the pragmatic constraints of the present section experimentally. 208 van Deemter GRE with Gradable Properties 6. Linguistic Realization Some recent GRE algorithms have done away with the separation between content determination and linguistic realization, interleaving the two processes instead (Stone and Webber 1998; Krahmer and Theune 2002). We have separated the two phases because, in the case of vague descriptions, interleaving would tend to be difficult. Consider, for instance, the list of properties L = (size &gt; 3 cm, size &lt; 9 cm). If interleaving forced us to realize the two properties in L one by one, then it would no longer be possible to combine them into, for example, the largest mouse but one (if the facts in the KB support it), or even into the mice between 3 and 9 cm (since size &gt; 3 cm is realized before size &lt; 9 cm). Clearly, sophisticated use of gradable adjectives requires a separation bet</context>
</contexts>
<marker>Stone, Webber, 1998</marker>
<rawString>Stone, Matthew and Bonnie Webber. 1998. Textual Economy through close coupling of syntax and semantics. In Proceedings of INLG-1998, pages 178–187.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kristinn R Th´orisson</author>
</authors>
<title>Simulated perceptual grouping: An application to human-computer interaction.</title>
<date>1994</date>
<booktitle>In Proceedings of 6th Annual Conference of the Cognitive Science Society,</booktitle>
<pages>876--881</pages>
<marker>Th´orisson, 1994</marker>
<rawString>Th´orisson, Kristinn R. 1994. Simulated perceptual grouping: An application to human-computer interaction. In Proceedings of 6th Annual Conference of the Cognitive Science Society, pages 876–881.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John H Toogood</author>
</authors>
<title>What do we mean by ‘usually’?</title>
<date>1980</date>
<tech>Lancet,</tech>
<pages>1--1094</pages>
<contexts>
<context position="5186" citStr="Toogood 1980" startWordPosition="821" endWordPosition="822"> adjectives, letting these values depend on the context in which the adjective is used. Sometimes we are forced to be vague because the information we have (e.g., based on perception or verbal reports) is itself inexact. Such cases can be modeled by letting NLG systems take vague information (e.g., Rain[Wednesday] = heavy) as their input. We shall focus on the more challenging case where the output of the generator is less precise than the input, as is the case in FOG and DYD. This can be a hazardous affair, since vague expressions tend to be interpreted in different ways by different people (Toogood 1980), sometimes in stark contrast with the intention of the speaker/writer (Berry, Knapp, and Raynor 2002). We shall therefore focus—unlike earlier computational accounts—on vague descriptions, that is, vague expressions in definite descriptions. Here, the context tends to obliterate the vagueness associated with the adjective. Suppose you enter a vet’s surgery in the company of two dogs: a big one on a leash, and a tiny one in your arms. The vet asks “Who’s the patient?”, and you answer “the big dog.” This answer will allow the vet to pick out the patient just as reliably as if you had said “the </context>
</contexts>
<marker>Toogood, 1980</marker>
<rawString>Toogood, John H. 1980. What do we mean by ‘usually’? Lancet, 1:1094.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kees van Deemter</author>
</authors>
<title>Generating vague descriptions.</title>
<date>2000</date>
<booktitle>In Proceedings of International Conference on Natural Language Generation (INLG-2000),</booktitle>
<pages>179--185</pages>
<location>Mitzpe Ramon,</location>
<marker>van Deemter, 2000</marker>
<rawString>van Deemter, Kees. 2000. Generating vague descriptions. In Proceedings of International Conference on Natural Language Generation (INLG-2000), pages 179–185, Mitzpe Ramon, Israel.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kees van Deemter</author>
</authors>
<title>Generating referring expressions: Boolean extensions of the incremental algorithm.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>1</issue>
<marker>van Deemter, 2002</marker>
<rawString>van Deemter, Kees. 2002. Generating referring expressions: Boolean extensions of the incremental algorithm. Computational Linguistics, 28(1):37–52.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kees van Deemter</author>
</authors>
<title>Finetuning an NLG system through experiments with human subjects: The case of vague descriptions.</title>
<date>2004</date>
<booktitle>In Proceedings of 3rd International Conference on Natural Language Generation (INLG-04),</booktitle>
<pages>31--40</pages>
<location>Brockenhurst, UK.</location>
<marker>van Deemter, 2004</marker>
<rawString>van Deemter, Kees. 2004. Finetuning an NLG system through experiments with human subjects: The case of vague descriptions. In Proceedings of 3rd International Conference on Natural Language Generation (INLG-04), pages 31–40, Brockenhurst, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kees van Deemter</author>
<author>Jan Odijk</author>
</authors>
<title>Context modeling and the generation of spoken discourse.</title>
<date>1997</date>
<journal>Speech Communication,</journal>
<pages>21--101</pages>
<marker>van Deemter, Odijk, 1997</marker>
<rawString>van Deemter, Kees and Jan Odijk. 1997. Context modeling and the generation of spoken discourse. Speech Communication, 21:101–121.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>