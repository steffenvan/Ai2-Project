<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.007966">
<title confidence="0.981309">
WebLicht: Web-based LRT services for German
</title>
<author confidence="0.997978">
Erhard Hinrichs, Marie Hinrichs, Thomas Zastrow
</author>
<affiliation confidence="0.937668">
Seminar fŸr Sprachwissenschaft, University of Tübingen
</affiliation>
<email confidence="0.392841">
firstname.lastname@uni-tuebingen.de
</email>
<sectionHeader confidence="0.979973" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99936795">
This software demonstration presents WebLicht (short
for: Web-Based Linguistic Chaining Tool), a web-
based service environment for the integration and use
of language resources and tools (LRT). WebLicht is
being developed as part of the D-SPIN project1. We-
bLicht is implemented as a web application so that
there is no need for users to install any software on
their own computers or to concern themselves with
the technical details involved in building tool chains.
The integrated web services are part of a prototypical
infrastructure that was developed to facilitate chaining
of LRT services. WebLicht allows the integration
and use of distributed web services with standardized
APIs. The nature of these open and standardized
APIs makes it possible to access the web services
from nearly any programming language, shell script
or workflow engine (UIMA, Gate etc.) Additionally,
an application for integration of additional services is
available, allowing anyone to contribute his own web
service.
</bodyText>
<sectionHeader confidence="0.998996" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999477846153846">
Currently, WebLicht offers LRT services that
were developed independently at the Institut fŸr
Informatik, Abteilung Automa-
tische Sprachverarbeitung at the University of
Leipzig (tokenizer, lemmatizer, co-occurrence
extraction, and frequency analyzer), at
the Institut fŸr Maschinelle Sprachverarbeitung
at the University of Stuttgart (tokenizer, tag-
ger/lemmatizer, German morphological analyser
SMOR, constituent and dependency parsers),
at the Berlin Brandenburgische Akademie
der Wissenschaften (conversion of plain text to
D-Spin format, tokenizer, taggers, NE recog-
</bodyText>
<footnote confidence="0.9738535">
1 D-SPIN stands for Deutsche SPrachressourcen
INfrastruktur; the D-SPIN project is partly financed
by the BMBF; it is a national German complement
to the EU-project CLARIN. See the URLs
http://www.d-spin.org and http://www.clarin.eu for
details
</footnote>
<bodyText confidence="0.998444222222222">
nizer) and at the Seminar fŸr Sprachwissen-
schaft/Computerlinguistik at the University of
Tübingen (conversion of plain text to D-Spin
format, GermaNet, Open Thesaurus syno-
nym service, and Treebank browser). They cover
a wide range of linguistic applications, like
tokenization, co-occurrence extraction, POS
Tagging, lexical and semantic analysis, and sev-
eral laguages (currently German, English, Italian,
French, Romanian, Spanish and Finnish). For
some of these tasks, more than one web service
is available. As a first external partner, the Uni-
versity of Helsinki in Finnland contributed a set
of web services to create morphological anno-
tated text corpora in the Finnish language. With
the help of the webbased user interface, these
individual web services can be combined into
a chain of linguistic applications.
</bodyText>
<sectionHeader confidence="0.890552" genericHeader="introduction">
2 Service Oriented Architecture
</sectionHeader>
<figureCaption confidence="0.991881">
Figure 1: The Overall Structure of WebLicht
</figureCaption>
<bodyText confidence="0.999904142857143">
WebLicht is a so-called Service Oriented Archi-
tecture (Binildas et. al., 2008), which means that
distributed and independent services (Tanen-
baum et al, 2002) are combined together to a
chain of LRT tools. A centralized database, the
repository, stores technical and content-related
metadata about each service. With the help of
</bodyText>
<page confidence="0.981205">
25
</page>
<note confidence="0.601151">
Proceedings of the ACL 2010 System Demonstrations, pages 25–29,
Uppsala, Sweden, 13 July 2010. c�2010 Association for Computational Linguistics
</note>
<bodyText confidence="0.999859571428571">
this repository, the chaining mechanism as de-
scribed in section 3 is implemented. The We-
bLicht user interface encapsulates this chaining
mechanism in an AJAX driven web application.
Since web applications can be invoked from any
browser, downloading and installation of indi-
vidual tools on the user&apos;s local computer is
avoided. But using WebLicht web services is not
restricted to the use of the integrated user inter-
face. It is also possible to access the web services
from nearly any programming language, shell
script or workflow engine (UIMA, Gate etc.).
Figure 1 depicts the overall structure of We-
bLicht.
An important part of Service Oriented Architec-
tures is ensuring interoperability between the
underlying services. Interoperability of web serv-
ices, as they are implemented in WebLicht, re-
fers to the seamless flow of data between them.
To be interoperable, these web services must first
agree on protocols defining the interaction be-
tween the services (WSDL/SOAP, REST, XML-
RPC). They must also use a shared and standard-
ized data exchange format, which is preferably
based on widely accepted formats already in use
(UTF-8, XML). WebLicht uses the RESTstyle
API and its own XML-based data exchange for-
mat (Text Corpus Format, TCF).
</bodyText>
<sectionHeader confidence="0.968929" genericHeader="method">
3 The Service Repository
</sectionHeader>
<bodyText confidence="0.999919583333333">
Every tool included in WebLicht is registered in
a central repository, located in Leipzig. Also re-
alized as a web service, it offers metadata and
processing information about each registered
tool. For example, the metadata includes infor-
mation about the creator, name and the adress of
the service. The input and output specifications
of each web service are required in order to de-
termine which processing chains are possible.
Combining the metadata and the processing in-
formation, the repository is able to offer func-
tions for the chain building process.
</bodyText>
<table confidence="0.9716896">
Wrappers: TCF, 0.3 / TCF, 0.3
Inputs Outputs
lemmas sem_lex_rels
postags -source: GermaNet
-tagset: stts
</table>
<tableCaption confidence="0.999077">
Table 1: Input and Output Specifications of
</tableCaption>
<subsectionHeader confidence="0.728441">
Tübingen&apos;s Semantic Annotator
</subsectionHeader>
<bodyText confidence="0.9961765">
A specialized tool for registering new web serv-
ices in the repository is available.
</bodyText>
<figure confidence="0.96641925">
1
2
3
4
</figure>
<figureCaption confidence="0.998024">
Figure 2: A Screenshot of the WebLicht Webinterface
</figureCaption>
<page confidence="0.988748">
26
</page>
<sectionHeader confidence="0.991569" genericHeader="method">
4 The WebLicht User Interface
</sectionHeader>
<bodyText confidence="0.999461259259259">
Figure 2 shows a screenshot of the WebLicht
web interface, developed and hosted in TŸbin-
gen. Area 1 shows a list of all WebLicht web
services along with a subset of metadata (author,
URL, description etc.). This list is extracted on-
the-fly from a centralized repository located in
Leipzig. This means that after registration in the
repository, a web service is immediatley avail-
able for inclusion in a processing chain.
The Language Filter selection box allows the
selection of any language for which tools are
available in WebLicht (currently, German, Eng-
lish, Italian, French, Romanian, Spanish or Fin-
nish). The majority of the presently integrated
web services operates on German input. The
platform, however, is language-independent and
supports LRT resources for any language.
Plain text input to the service chain can be speci-
fied in one of three ways: a) entered by the user
in the Input tab, b) file upload from the user&apos;s
local harddrive or c) selecting one of the sample
texts offered by WebLicht (Area 2). Various
format converters can be used to convert up-
loaded files into the data exchange format (TCF)
used by WebLicht. Input file formats accepted
by WebLicht currently include plain text, Micro-
soft Word, RTF and PDF.
</bodyText>
<figureCaption confidence="0.991172">
Figure 3: A Choice of Alternative Services
</figureCaption>
<bodyText confidence="0.9999746875">
In Area 3, one can assemble the service tool
chain and execute it on the input text. The Se-
lected Tools list displays all web services that
have already been entered into the web service
chain. The list under Next Tool Choices then of-
fers the set of tools that can be entered as next
into the chain. This list is generated by inspect-
ing the metadata of the tools which are already in
the chain. The chaining mechanism ensures that
this list only contains tools, that are a valid next
step in the chain. For example, a Part-of-Speech
Tagger can only be added to a chain after a to-
kenizer has been added. The metadata of each
tool contains information about the annotations
which are required in the input data and which
annotations are added by that tool.
As Figure 3 shows, the user sometimes has a
choice of alternative tools - in the example at
hand a wide variety of services are offered
as candidates. Figure 3 shows a subset of web
service workflows currently available in We-
bLicht. Notice that these workflows can combine
tools from various institutions and are not re-
stricted to predefined combinations of tools. This
allows users to compare the results of several
tool chains and find the best solution for their
individual use case.
The final result of running the tool chain as well
as each individual step can be visualized in a Ta-
ble View (implemented as a seperate frame, Area
4), or downloaded to the user&apos;s local harddrive in
WebLicht&apos;s own data exchange format TCF.
</bodyText>
<sectionHeader confidence="0.987564" genericHeader="method">
5 The TCF Format
</sectionHeader>
<bodyText confidence="0.915427">
The D-SPIN Text Corpus Format TCF (Heid et
al, 2010) is used by WebLicht as an internal data
</bodyText>
<figureCaption confidence="0.86218">
Figure 4: A Short Example of a TCF Document,
Containing the Plain Text, Tokens and POS Tags
and Lemmas
</figureCaption>
<bodyText confidence="0.999867666666667">
exchange format. The TCF format allows the
combination of the different linguistic annota-
tions produced by the tool chain. It supports in-
cremental enrichment of linguistic annotations at
different levels of analysis in a common XML-
based format (see Figure 4).
</bodyText>
<page confidence="0.995482">
27
</page>
<bodyText confidence="0.99977375862069">
The Text Corpus Format was designed to effi-
ciently enable the seamless flow of data between
the individual services of a Service Oriented
Architecture.
Figure 4 shows a data sample in the D-SPIN
Text Corpus Format. Lexical tokens are identi-
fied via token IDs which serve as
unique identifiers in different annotation layers.
From an organizational point-of-view, tokens can
be seen as the central, atomic elements in TCF to
which other annotation layers refer. For exam-
ple, the POS annotations refer to the token IDs in
the token annotation layer via the attribute tokID.
The annotation layers are rendered in a stand-off
annotation format. TCF stores all linguistic anno-
tation layers in one single file. That means that
during the chaining process, the file grows (see
Figure 5). Each tool is permitted to add an arbi-
trary number of layers, but it is not allowed to
change or delete any existing layer.
Within the D-SPIN project, several other XML
based data formats were developed beside the
TCF format (for example, an encoding for lexi-
con based data). In order to avoid any confusion
of element names between these different for-
mats, namespaces for the different contextual
scopes within each format have been introduced.
At the end of the chaining process, converter
services will convert the textcorpora from the
</bodyText>
<figureCaption confidence="0.7460365">
Figure 5: Annotation Layers are Added to the
TCF Document by Each Service
</figureCaption>
<bodyText confidence="0.9981375">
TCF format into other common and standardized
data formats, for example MAF/SynAF or TEI.
</bodyText>
<sectionHeader confidence="0.976821" genericHeader="method">
6 Implementation Details
</sectionHeader>
<bodyText confidence="0.9728385">
The web services are available in RESTstyle and
use the TCF data format for input and output.
The concrete implementation can use any com-
bination of programming language and server
environment.
The repository is a relational database, offering
its content also as RESTstyle web services.
The user interface is a Rich Internet Application
(RIA), using an AJAX driven toolkit. It incorpo-
rates the Java EE 5 technology and can be de-
ployed in any Java application server.
7 How to Participate in WebLicht
Since WebLicht follows the paradigm of a Serv-
ice Oriented Architecture, it is easily extendable
by adding new services. In order to participate in
WebLicht by donating additional tools, one must
implement the tool as as RESTful web service
using the TCF data format. You can find further
information including a tutorial on the D-SPIN
homepage2.
</bodyText>
<sectionHeader confidence="0.999429" genericHeader="method">
8 Further Work
</sectionHeader>
<bodyText confidence="0.99996856">
The WebLicht platform in its current form
moves the functionality of LRT tools from the
users desktop computer into the net (Gray et al,
2005). At this point, the user must download the
results of the chaining process and deal with
them on his local machine again. In the future, an
online workspace has to be implemented so that
annotated textcorpora created with WebLicht can
also be stored in and retrieved from the net. For
that purpose, an integration of the eSciDoc re-
search environment3 into Weblicht is planned.
The eSciDoc infrastructure enables sustainable
and reliable long-term preservation of primary
research and analysis data.
To make the use of WebLicht more convenient
to the end user, there will be predefined process-
ing chains. These will consist of the most com-
monly used processing chains and will relieve
the user of having to define the chains manually.
In the last year, WebLicht has proven to be a re-
alizable and useful service environment for the
humanities. In its current state, WebLicht is still
a prototype: due to the restrictions of the under-
lying hardware, WebLicht cannot yet be made
available to the general public.
</bodyText>
<sectionHeader confidence="0.573947" genericHeader="method">
9 Scope of the Software Demonstration
</sectionHeader>
<bodyText confidence="0.99996">
This demonstration will present the core func-
tionalities of WebLicht as well as related mod-
ules and applications. The process of building
language-specific processing tool chains will be
shown. WebLichts capability of offering only
appropriate tools at each step in the chain-
building process will be demonstrated.
</bodyText>
<footnote confidence="0.88970575">
2 http://weblicht.sfs.uni-
tuebingen.de/englisch/weblichttutorial.shtml
3 For further information about the eSciDoc
platform, see https://www.escidoc.org/
</footnote>
<page confidence="0.997793">
28
</page>
<bodyText confidence="0.9999472">
The selected tool chain can be applied to any
arbitrary uploaded text. The resulting annotated
text corpus can be downloaded or visualized us-
ing an integrated software module.
All these functions will be shown live using just
a webbrowser during the software demonstra-
tion.Demo Preview and Hardware Requirements
The call for papers asks submitters of software
demonstrations to provide pointers to demo pre-
views and to provide technical details about
hardware requirements for the actual demo at the
conference.
The WebLicht web application is currently
password protected. Access can be granted by
requesting an account (weblicht@d-spin.org).
If the software demonstration is accepted, inter-
net access is necessary at the conference, but no
special hardware is required. The authors will
bring a laptop of their own and if necessary also
a beamer.
</bodyText>
<sectionHeader confidence="0.997761" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.997851666666667">
WebLicht is the product of a combined effort
within the D-SPIN projects (www.d-spin.org).
Currently, partners include: Seminar fdr
Sprachwissenschaft/Computerlinguistik, Univer-
sitŠt Tdbingen, Abteilung fdr Automatische
Sprachverarbeitung, UniversitŠt Leipzig, Institut
fdr Maschinelle Sprachverarbeitung, UniversitŠt
Stuttgart and Berlin Brandenburgische Akademie
der Wissenschaften.
</bodyText>
<sectionHeader confidence="0.995992" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999079866666667">
Binildas, C.A., Malhar Barai et.al. (2008). Service
Oriented Architectures with Java. PACKT Publish-
ing, Birmingham – Mumbai
Gray, J., Liu, D., Nieto-Santisteban, M., Szalay, A.,
DeWitt, D., Heber, G. (2005). Scientific Data Man-
agement in the Coming Decade. Technical Report
MSR-TR-2005-10, Microsoft Research.
Heid, U., Schmid, H., Eckart, K., Hinrichs, E. (2010).
A Corpus Representation Format for Linguistic
Web Services: the D_SPIN Text Corpus Format
and its Relationship with ISO Standards. In Pro-
ceedings of LREC 2010, Malta.
Tanenbaum, A., van Steen, M. (2002). Distributed
Systems, Prentice Hall, Upper Saddle River, NJ,
1st Edition.
</reference>
<page confidence="0.999107">
29
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.554896">
<title confidence="0.999658">WebLicht: Web-based LRT services for German</title>
<author confidence="0.997753">Erhard Hinrichs</author>
<author confidence="0.997753">Marie Hinrichs</author>
<author confidence="0.997753">Thomas Zastrow</author>
<affiliation confidence="0.577095">Seminar fŸr Sprachwissenschaft, University of Tübingen</affiliation>
<email confidence="0.98012">firstname.lastname@uni-tuebingen.de</email>
<abstract confidence="0.998542047619048">This software demonstration presents WebLicht (short Linguistic Chaining a webbased service environment for the integration and use of language resources and tools (LRT). WebLicht is developed as part of the D-SPIN WebLicht is implemented as a web application so that there is no need for users to install any software on their own computers or to concern themselves with the technical details involved in building tool chains. The integrated web services are part of a prototypical infrastructure that was developed to facilitate chaining of LRT services. WebLicht allows the integration and use of distributed web services with standardized APIs. The nature of these open and standardized APIs makes it possible to access the web services from nearly any programming language, shell script or workflow engine (UIMA, Gate etc.) Additionally, an application for integration of additional services is available, allowing anyone to contribute his own web service.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C A Binildas</author>
<author>Malhar Barai et al</author>
</authors>
<title>Service Oriented Architectures with Java.</title>
<date>2008</date>
<publisher>PACKT Publishing,</publisher>
<location>Birmingham – Mumbai</location>
<marker>Binildas, al, 2008</marker>
<rawString>Binildas, C.A., Malhar Barai et.al. (2008). Service Oriented Architectures with Java. PACKT Publishing, Birmingham – Mumbai</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Gray</author>
<author>D Liu</author>
<author>M Nieto-Santisteban</author>
<author>A Szalay</author>
<author>D DeWitt</author>
<author>G Heber</author>
</authors>
<title>Scientific Data Management in the Coming Decade.</title>
<date>2005</date>
<tech>Technical Report MSR-TR-2005-10, Microsoft Research.</tech>
<contexts>
<context position="11315" citStr="Gray et al, 2005" startWordPosition="1803" endWordPosition="1806">tes the Java EE 5 technology and can be deployed in any Java application server. 7 How to Participate in WebLicht Since WebLicht follows the paradigm of a Service Oriented Architecture, it is easily extendable by adding new services. In order to participate in WebLicht by donating additional tools, one must implement the tool as as RESTful web service using the TCF data format. You can find further information including a tutorial on the D-SPIN homepage2. 8 Further Work The WebLicht platform in its current form moves the functionality of LRT tools from the users desktop computer into the net (Gray et al, 2005). At this point, the user must download the results of the chaining process and deal with them on his local machine again. In the future, an online workspace has to be implemented so that annotated textcorpora created with WebLicht can also be stored in and retrieved from the net. For that purpose, an integration of the eSciDoc research environment3 into Weblicht is planned. The eSciDoc infrastructure enables sustainable and reliable long-term preservation of primary research and analysis data. To make the use of WebLicht more convenient to the end user, there will be predefined processing cha</context>
</contexts>
<marker>Gray, Liu, Nieto-Santisteban, Szalay, DeWitt, Heber, 2005</marker>
<rawString>Gray, J., Liu, D., Nieto-Santisteban, M., Szalay, A., DeWitt, D., Heber, G. (2005). Scientific Data Management in the Coming Decade. Technical Report MSR-TR-2005-10, Microsoft Research.</rawString>
</citation>
<citation valid="true">
<authors>
<author>U Heid</author>
<author>H Schmid</author>
<author>K Eckart</author>
<author>E Hinrichs</author>
</authors>
<title>A Corpus Representation Format for Linguistic Web Services: the D_SPIN Text Corpus Format and its Relationship with ISO Standards.</title>
<date>2010</date>
<booktitle>In Proceedings of LREC</booktitle>
<contexts>
<context position="8396" citStr="Heid et al, 2010" startWordPosition="1319" endWordPosition="1322">eb service workflows currently available in WebLicht. Notice that these workflows can combine tools from various institutions and are not restricted to predefined combinations of tools. This allows users to compare the results of several tool chains and find the best solution for their individual use case. The final result of running the tool chain as well as each individual step can be visualized in a Table View (implemented as a seperate frame, Area 4), or downloaded to the user&apos;s local harddrive in WebLicht&apos;s own data exchange format TCF. 5 The TCF Format The D-SPIN Text Corpus Format TCF (Heid et al, 2010) is used by WebLicht as an internal data Figure 4: A Short Example of a TCF Document, Containing the Plain Text, Tokens and POS Tags and Lemmas exchange format. The TCF format allows the combination of the different linguistic annotations produced by the tool chain. It supports incremental enrichment of linguistic annotations at different levels of analysis in a common XMLbased format (see Figure 4). 27 The Text Corpus Format was designed to efficiently enable the seamless flow of data between the individual services of a Service Oriented Architecture. Figure 4 shows a data sample in the D-SPI</context>
</contexts>
<marker>Heid, Schmid, Eckart, Hinrichs, 2010</marker>
<rawString>Heid, U., Schmid, H., Eckart, K., Hinrichs, E. (2010). A Corpus Representation Format for Linguistic Web Services: the D_SPIN Text Corpus Format and its Relationship with ISO Standards. In Proceedings of LREC 2010, Malta.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Tanenbaum</author>
<author>M van Steen</author>
</authors>
<title>Distributed Systems, Prentice Hall, Upper Saddle River, NJ, 1st Edition.</title>
<date>2002</date>
<marker>Tanenbaum, van Steen, 2002</marker>
<rawString>Tanenbaum, A., van Steen, M. (2002). Distributed Systems, Prentice Hall, Upper Saddle River, NJ, 1st Edition.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>