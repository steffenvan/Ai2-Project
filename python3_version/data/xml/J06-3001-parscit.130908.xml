<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.9980915">
Orthographic Errors in Web Pages:
Toward Cleaner Web Corpora
</title>
<author confidence="0.915908">
Christoph Ringlstetter* Stoyan Mihov†
</author>
<affiliation confidence="0.8170845">
Klaus U. Schulz* Bulgarian Academy of Science, Sofia
CIS, University of Munich
</affiliation>
<bodyText confidence="0.962830625">
Since the Web by far represents the largest public repository of natural language texts, recent
experiments, methods, and tools in the area of corpus linguistics often use the Web as a corpus.
For applications where high accuracy is crucial, the problem has to be faced that a non-negligible
number of orthographic and grammatical errors occur in Web documents. In this article we in-
vestigate the distribution of orthographic errors of various types in Web pages. As a by-product,
methods are developed for efficiently detecting erroneous pages and for marking orthographic
errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic
knowledge bases automatically retrieved from the Web.
</bodyText>
<sectionHeader confidence="0.995171" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.99914425">
The automated analysis of large corpora has many useful applications (Church and
Mercer 1993). Suitable language repositories can be used for deriving models of a
given natural language, as needed for speech recognition (Ostendorf, Digalakis,
and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh
and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998;
Strohmaier et al. 2003b). Other corpus-based methods determine associations between
words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for com-
puting thesauri, or dictionaries of terminological expressions and multiword lexemes
(Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001).
From multilingual texts, translation lexica can be generated (Gale and Church
1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999;
Grefenstette 1999). The analysis of technical texts is used to automatically build dictio-
naries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and
Witten 2000), and related methods help to compute dictionaries that cover the special
vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted lan-
guage learning (CALL), mining techniques for corpora are used to create individualized
and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and
Pahud 2004; Brown and Eskenazi 2004; Fletcher 2004a).
By Zipf’s law, most words, phrases, and specific grammatical constructions have
a very low frequency. Furthermore, the number of text genres and special thematic
</bodyText>
<footnote confidence="0.5883285">
* Funded by German Research Foundation (DFG)
† Funded by VolkswagenStiftung
</footnote>
<note confidence="0.81959825">
Submission received: 21 January 2005; revised submission received: 3 August 2005; accepted for
publication: 10 December 2005.
© 2006 Association for Computational Linguistics
Computational Linguistics Volume 32, Number 3
</note>
<bodyText confidence="0.999892970588235">
areas that come with their own picture of language is large. This explains that most
of the aforementioned applications can only work when built on top of huge heteroge-
neous corpora. Since the Web represents by far the largest public repository for natural
language texts, and since Web search engines such as Google offer simple access to
pages where language material of a given orthographic, grammatical, or thematic kind
is found, many recent experiments and technologies use the Web as a corpus (Kehoe and
Renouf 2002; Morley, Renouf, and Kehoe 2003; Kilgarriff and Grefenstette 2003; Resnik
and Smith 2003; Way and Gough 2003; Fletcher 2004b).
One potential problem for Web-based corpus linguistics is caused by the fact that
words and phrases occurring in Web pages are sometimes erroneous. Typing errors
represent one widespread phenomenon. Many Web pages, say, in English, are written
by non-native speakers, or by persons with very modest language competence. As a
consequence, spelling errors and grammatical bugs result. The character sets that are
used for writing Web pages are often not fully adequate for the alphabet of a given
language, which represents another systematic source for inaccuracies. Furthermore, a
small number of texts found in the Web is obtained via optical character recognition
(OCR), which may again lead to garbled words. As a consequence of these and other
error sources, the Web contains a considerable number of “bad” pages with language
material that is inappropriate for corpus construction.
In one way or the other, all the aforementioned applications are affected by these
inadequacies. While the problem is probably not too serious for approaches that merely
collect statistical information about given language items, the construction of dictio-
naries and related linguistic knowledge bases—which are, after all, meant to be used
in different scenarios of automated language processing—becomes problematic if too
many erroneous entries are retrieved from Web pages. Obviously, in computer-assisted
language learning it is a principal concern that words and phrases from the Web that
are presented to the user are error free.
In discussions we found that problems resulting from erroneous language material
in Web pages for distinct applications are broadly acknowledged (see also Section 4.4 of
Kilgarriff and Grefenstette [2003]). Still, to the best of our knowledge, a serious analysis
of the frequency and distribution of orthographic errors in the Web is missing, and no
general methods have been developed that help to detect and exclude pages with too
many erroneous words. In this article we first report on a series of experiments that try
to answer the following questions:
</bodyText>
<listItem confidence="0.870291666666667">
1. What are important types of orthographic errors found in Web pages?
2. How frequent are errors of a given kind? For a given error level
(percentage of erroneous tokens) -r, which percentage of Web pages
exceeds error level -r?
3. How do these figures depend on the language, on the thematic area,
and on the genre of the Web pages that are considered? How do
these figures depend on the document format of the Web pages that
are considered?
We then look at the problem indicated above.
4. Which methods help to automatically detect Web pages with many
orthographic errors?
Which methods help to mark orthographic errors found in Web pages?
</listItem>
<page confidence="0.994211">
296
</page>
<note confidence="0.948954">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<bodyText confidence="0.9991422">
To answer questions 1–3, we retrieved and analyzed a collection of large English
and German corpora from the Web, using suitable queries to Web search engines. In our
error statistics we wanted to distinguish between (1) “general” Web pages collected
without any specific thematic focus on the one hand and Web pages from specific
thematic areas on the other hand, and (2) between Web pages written in HTML and
Web documents written in PDF. To cover the first difference, for both languages we
retrieved two general corpora as well as a number of corpora for specific thematic
areas. All these corpora only contain HTML pages. A parallel series of general cor-
pora was collected that are composed of PDF documents. Details are provided in
Section 2.
Special Vocabulary. Web pages often contain tokens that do not belong to the standard
vocabulary of the respective language. Typical categories are, for example, special
names, slang, archaic language, expressions from foreign languages, and special ex-
pressions from computer science/programming. Classification and detection of special
vocabulary is outside the scope of the present article. Since sometimes a clear separation
between special vocabulary and errors is difficult, we briefly come back to this problem
in Section 5.4.
Proper Errors. Focusing on garbled standard vocabulary, tokens may be seriously dam-
aged in an “unexplainable” way. Most of the remaining errors can be assigned to one of
the four classes mentioned above:
</bodyText>
<listItem confidence="0.997739">
• typing errors (i.e., errors caused by a confusion of keys when typing a
document),
• spelling errors (“cognitive” errors resulting from insufficient language
competence),
• errors resulting from inadequate character encoding, and
• OCR errors.
</listItem>
<bodyText confidence="0.999331588235294">
In order to estimate the number of errors of a given kind in the corpora, special
error dictionaries were built. These dictionaries, which only list garbled words of
a given language that do not accidentally represent correct words, try to cover a
high number of the conventional errors of each type that are typically found in Web
pages and other documents. Section 3 motivates the use of error dictionaries for er-
ror detection. Details of the construction of the error dictionaries are discussed in
Section 4.
In Section 5, we estimate the number of orthographic errors in the corpora that
remain undetected because they do not occur in the error dictionaries. We also estimate
the percentage of correct tokens of the corpora that are erroneously treated as errors
since they appear in the error dictionaries. Our results show that the number of tokens
of a text that appear in the error dictionaries can be considered as a lower approximation
of the number of real orthographic errors.
In Section 6, we describe the distribution of orthographic errors of the types dis-
tinguished above in the general test corpora, counting occurrences of entries of the
error dictionaries. Section 7 summarizes the most important differences that arise when
using PDF corpora, or corpora for special thematic areas. Section 8 presents various
</bodyText>
<page confidence="0.988912">
297
</page>
<note confidence="0.803179">
Computational Linguistics Volume 32, Number 3
</note>
<bodyText confidence="0.999920894736842">
results that illuminate the relationship between the error rate of a document and
its genre.
In our experiments we observed in all corpora a rich spectrum of error rates, ranging
from perfect documents to a small number of clearly unacceptable pages. This moti-
vates the design of filters that efficiently recognize and reject pages with an error rate
beyond a user-specified threshold. The construction of appropriate filters is described
in Section 9, where we also demonstrate the effect of using these filters, comparing
the figures obtained in Section 6 with the corresponding figures for filtered corpora.
Filters work surprisingly well due to a Zipf-like distribution of error frequencies in
Web pages.
In Section 10, we present two experiments that exemplify how the methods de-
veloped in the article may in fact help to improve corpus-based methods. The general
question of how deeply distinct methods from computational linguistics based on Web
corpora are affected by orthographic errors in Web pages and to what extent the meth-
ods developed in the article help to remedy these deficiencies are too complex to be
discussed here.
The main insights and contributions are summarized in the Conclusion (Section 11)
where we also comment on future work and on some practical difficulties one has to
face when collecting and analyzing large corpora from the Web.
</bodyText>
<sectionHeader confidence="0.990553" genericHeader="keywords">
2. Corpora
</sectionHeader>
<bodyText confidence="0.999968571428571">
The basis for the evaluations described below is a collection of corpora, each composed
of Web pages retrieved with Web search engines (Google/AllTheWeb). In order to
study how specific features of a language might influence the distribution of ortho-
graphic errors, all corpora were built up in two variants. The English and German
variant, respectively, contain Web pages that were classified as English and German Web
pages by the search engine. As described above, for both languages we collected general
corpora with Web pages without any thematic focus and, in addition, corpora that cover
five specific thematic areas to be described below. Statements on the “representative-
ness” of corpora derived from the Web are notoriously difficult. The composition of
corpora retrieved with Web search engines depends on the kind of queries that are used,
on the ranking mechanisms of the engine, and on the details of the collection strategy.
We mainly concentrated on simple queries and straightforward collection strategies.
Still, the large number of subcorpora and pages that were evaluated should guarantee
that accidental results are avoided.
</bodyText>
<subsectionHeader confidence="0.937236">
2.1 General Web Corpora
</subsectionHeader>
<bodyText confidence="0.9998862">
In a first attempt, we tried to obtain a general German HTML corpus using the mean-
ingless query der die das, i.e., the three German definite articles. However, queries
of this and a similar form did not lead to satisfactory results: As a consequence of
Google’s ranking mechanism, which prefers “authorities” (Brin and Page 1998), mainly
portals of big organizations, companies, and others were retrieved. These pages are
often dominated by graphical elements. Portions of text are usually small and carefully
edited, which means that orthographic errors are less frequent than in other “less
official” pages.
To achieve a more realistic scenario we randomly generated quintuples, each col-
lecting five terms of the 10,000 top frequent German words. We used Google to retrieve
</bodyText>
<page confidence="0.995083">
298
</page>
<note confidence="0.948687">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<bodyText confidence="0.998156476190476">
10 pages per query (quintuple) until we obtained 1,000 pages. A considerable number
of the URLs were found to be inactive. After conversion to ASCII and a preliminary
analysis of error rates with methods described below, some of the remaining pages were
found to contain very large lists of general keywords, including many orthographic
errors. Apparently these lists and errors were only added to improve the ranking of
the page in search engines, even for ill-formed queries. We excluded these pages. The
remaining documents represent the “primary” general German HTML corpus. Since we
wanted to know how results depend on the peculiarities of the selected set of pages, a
second series of queries of the same type was sent to Google to retrieve a “secondary”
general German HTML corpus with a completely disjoint set of pages.
Similar procedures were used to obtain a primary and a secondary general English
HTML corpus, a general German PDF corpus, and a general English PDF corpus. The
translation from PDF to ASCII was found to be error prone, in particular for German
documents (cf. Gartner 2003). Due to this process, some converted PDF documents
were seriously damaged. Since we focus on errors in original Web pages (as opposed
to converted versions of such pages), these files were excluded as well. We found
these pages when computing error rates based on error dictionaries as described in
Sections 6 and 7.
The number of Web pages and the number of normal tokens (i.e., tokens composed
of standard letters only) in the resulting six corpora are shown in Table 1. Numbers (1)
and (2) stand for the primary and secondary corpora, respectively.
</bodyText>
<subsectionHeader confidence="0.995186">
2.2 Web Corpora for Specific Thematic Areas
</subsectionHeader>
<bodyText confidence="0.923610111111111">
We looked at the thematic areas “Middle Ages,” “Holocaust,” “Fish,” “Mushrooms,”
and “Neurology.” The given selection of topics tries to cover scientific areas as well as
history and hobbies.
Simple Crawl. A first series of corpora was collected by sending a query with 25
“terminological” keywords mechanically found in a small corpus of the given area to
the AllTheWeb search engine and collecting the answer set. For example, the queries
mushrooms mushroom pine edible harvesting morels harvested harvesters dried
chanterelle matsutake poisonous flavor chanterelles caps fungi drying stuffing
humidity varieties boletes recipes spores conifers pickers
</bodyText>
<tableCaption confidence="0.95824">
Table 1
</tableCaption>
<footnote confidence="0.514882666666667">
Number of Web pages, number of normal tokens (tokens composed of standard letters only),
and sizes in megabytes of the “general” corpora. Numbers (1) and (2) refer to primary and
secondary corpora, respectively.
</footnote>
<table confidence="0.844992857142857">
General corpora Web pages Normal tokens Size (MB)
English HTML (1) 829 7,900,337 157
English HTML (2) 929 7,152,783 188
German HTML (1) 618 9,525,484 189
German HTML (2) 857 11,539,035 284
English PDF 570 2,193,598 393
German PDF 603 1,528,914 240
</table>
<page confidence="0.979779">
299
</page>
<note confidence="0.743874">
Computational Linguistics Volume 32, Number 3
</note>
<construct confidence="0.5169545">
disorder disorders anxiety self hallucinations delusions anatomy cortex delusion
neuroscience disturbance conscious psychotic stimulus hallucination unconsciously
receptors cognitive psychoanalytic unconscious consciously stimuli ego schizophrenia
impairment
</construct>
<bodyText confidence="0.999845038461538">
were respectively used for collecting the corpora Mushrooms E and Neurology E. The
ranking mechanism of AllTheWeb prefers pages containing hits for several keywords
of a disjunctive query. Since this form of corpus construction is straightforward, not all
pages in the resulting corpora belong to the given thematic area.
Refined Crawl. We wanted to see how results are affected when using less naive crawl-
ing methods. For the three areas “Fish,” “Mushrooms,” and “Neurology,” the sec-
ondary corpora were retrieved using the following refined procedure: Starting from
a small tagged seed corpus for the given domain, we mechanically extracted termino-
logical open compounds for English (Sornlertlamvanich and Tanaka 1996; Smadja and
McKeown 1990) and compound nouns for German. Examples are amino group, action
potential, defense mechanism (English, neurology), truffle species, morel areas, harvesting tips
(English, mushrooms), Koffeinstoffwechsel, and Eisenkonzentration (German, neurology).
Each of these expressions was sent as a query to Google. From each answer set we
collected a maximum of 30 top-ranked hits (many answer sets were smaller). For each
document in the resulting corpus, the similarity with the seed corpus was controlled,
using a cosine measure (in practice, almost all documents passed the similarity filter).
Our method can be considered as a variant of Baroni and Bernardini’s (2004) and leads
to corpora with a strong thematic focus.
The statistics for all thematic corpora are summarized in Table 2. Numbers (1) and
(2) stand for corpora crawled with the simple and the refined crawling strategy, respec-
tively. The numbers indicate one interesting effect: Documents in the thematic corpora
obtained with the refined crawling strategy turned out to be typically rather short. Since
we only used the 30 top-ranked documents for each single query, this probably points
to a special feature of Google’s ranking mechanism. A manual inspection of hundreds
of documents for both the simple and the refined crawl did not lead to additional
insights.
</bodyText>
<sectionHeader confidence="0.990012" genericHeader="introduction">
3. Error Detection
</sectionHeader>
<bodyText confidence="0.997571">
For detecting orthographic errors of a particular type in texts, two naive base methods
may be distinguished.
</bodyText>
<listItem confidence="0.9406094">
1. A representative list of errors of the respective type is created and
manually checked. Each token of the text appearing in the list represents
an error (lower approximation).
2. A spell checker or a large-scale dictionary is used to detect “suspicious”
words (error candidates). For each such token W we manually check
if W really represents an error and we determine its type (upper
approximation).
For large corpora, both methods have serious deficiencies. With Method 1, only a small
percentage of all errors is detected. On this basis, it is difficult to estimate the real
number of errors. When using Method 2, the number of tokens that have to be manually
</listItem>
<page confidence="0.997452">
300
</page>
<note confidence="0.902915">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<tableCaption confidence="0.85560625">
Table 2
Selected topics and statistics of English (E) and German (G) corpora for specific thematic areas.
Numbers (1) and (2) refer to corpora crawled with the simple and the refined strategy,
respectively.
</tableCaption>
<table confidence="0.999067176470588">
Topic/Language Web pages Normal tokens Size (MB)
Middle Ages E 710 5,069,796 172
Fish E (1) 510 10,090,682 266
Fish E (2) 940 547,407 22
Holocaust E 699 8,797,882 199
Mushrooms E (1) 676 7,876,067 197
Mushrooms E (2) 933 734,337 22
Neurology E (1) 624 8,765,899 197
Neurology E (2) 923 779,699 24
Middle Ages G 614 6,774,794 195
Fish G (1) 655 7,621,579 199
Fish G (2) 804 688,882 32
Holocaust G 616 5,659,924 160
Mushrooms G (1) 527 5,951,305 147
Mushrooms G (2) 614 538,575 28
Neurology G (1) 486 4,322,952 115
Neurology G (2) 323 345,070 12
</table>
<bodyText confidence="0.998691666666667">
checked becomes too large. In practice, a large number of error candidates represent
correct tokens. This is mainly due to special names and other types of nonstandard
vocabulary found in Web pages, as mentioned in the introduction.
We decided to use a third strategy, which can be considered as a synthesis and
compromise between the above two approaches. As a starting point, we took stan-
dard dictionaries of English, D(English); German, D(German); French, D(French);
and Spanish, D(Spanish); and a dictionary of geographic entities, D(Geos); a dictio-
nary of proper names, D(Names); and a dictionary of abbreviations and acronyms,
D(Abbreviations).1 The number of entries in the dictionaries is described in Table 3.
The German dictionary contains compound nouns, which explains the large number
of entries.
From these standard dictionaries, we derived special error dictionaries that were
used in the experiments described later. First, for each of the four error types mentioned
above we manually collected a number of general patterns that “explain” possible
mutations from correct words to erroneous entries. In a second step, these patterns were
used to garble the words of the given background dictionaries. Third, garbled words
that were found to correspond to correct words (entries of the above dictionaries) were
excluded (filtering step). Collecting the remaining erroneous strings, we obtained large
error dictionaries for each type of orthographic error.
Experiments described in Section 5 show that our error dictionaries cover the major
part of all orthographic errors occurring in the English and German Web pages. At
</bodyText>
<footnote confidence="0.9818428">
1 These dictionaries are nonpublic. They have been built up at the Centre for Information and Language
Processing (CIS) during the last two decades (Maier-Meyer 1995; Guenthner 1996). Each entry comes
with a frequency value that describes the number of occurrences in a 1.5-terabyte subcorpus of the Web
from 1999. Dictionaries for French and Spanish were included to improve the filtering step. Suitable
dictionaries for other languages were not available.
</footnote>
<page confidence="0.996364">
301
</page>
<figure confidence="0.921172636363636">
Computational Linguistics Volume 32, Number 3
Table 3
Size of background dictionaries.
Dictionary Number of entries
D(English) 315,300
D(German) 2,235,136
D(French) 85,895
D(Spanish) 69,634
D(Geos) 195,700
D(Names) 372,628
D(Abbreviations) 2,375
</figure>
<bodyText confidence="0.999248714285714">
the same time, the number of tokens that are erroneously treated as errors due to the
unavoidable incompleteness of the filtering step remains acceptable. On this basis, an
estimate of the number of conventional orthographic errors occurring in Web pages is
possible, counting the number of occurrences of entries of the error dictionaries.2 Before
we comment on these points, we describe the construction of the error dictionaries in
more detail. In the remainder of the article, by Dconv we denote the union of all the
conventional dictionaries listed above.
</bodyText>
<sectionHeader confidence="0.5399" genericHeader="method">
4. Construction of Error Dictionaries
</sectionHeader>
<bodyText confidence="0.99987325">
For the construction of error dictionaries, the most important error patterns for each
type of error were determined. For typing errors and errors caused by character en-
coding problems, error patterns were obtained analytically. For spelling errors and
Optical Character Recognition (OCR) errors, important mutation patterns were col-
lected empirically. As a general rule, all error dictionaries were restricted to entries of
length &gt;4. Many tokens of length ≤4 occurring in texts represent acronyms, special
names, and abbreviations, and it is difficult to mechanically distinguish between this
special kind of vocabulary and errors.
</bodyText>
<subsectionHeader confidence="0.951653">
4.1 Error Dictionaries for Typing Errors
</subsectionHeader>
<bodyText confidence="0.9997413">
Typing errors can be partitioned into transpositions, deletions, substitutions, and inser-
tions. Transpositions of two letters occur if two keys are hit in the wrong order. Deletions
result if a key is not properly pushed down. Substitutions occur if a neighbor key is
pressed down instead of the intended one. Horizontal and vertical shifts of fingers may
be distinguished. If a finger hits the middle between two keys, a neighbor key may be
pressed in addition to the intended one. The wrong letter may occur before or after the
correct letter.
Transpositions, deletions, substitutions, and insertions cover most of the typing
errors discussed in the literature (Kukich 1992). We ignored homologous errors, that
is, substitutions that are traced back to a confusion of the left and right hand. Since
</bodyText>
<footnote confidence="0.914765333333333">
2 Note that we do not capture false friends, that is, garbled strings that accidentally represent correct
words of the dictionary. Detection of false friends is known to be notoriously difficult and outside the
scope of this article.
</footnote>
<page confidence="0.996206">
302
</page>
<note confidence="0.757315">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<bodyText confidence="0.999542611111111">
there are many possible positions for both hands, this kind of error leads to large
confusion sets.
Since we did not find other patterns in the texts, only mutation variants that are
exclusively composed of standard letters (as opposed to digits and other special sym-
bols) were taken into account. Furthermore, since typing errors in general do not affect
the first letter of a word,3 we left this letter unmodified. We analyzed the number of
mutated variants of a given word. Both for the American and for the German keyboard
we have approximately 16l variants for a word of length l. This shows that the above
patterns for typing errors are very productive. It is not possible to garble all the words
of our background dictionary for constructing the error dictionaries. For the generation
of the dictionary of English typing errors, Derr(English,typing), we took the 100,000
entries of the English background dictionary with the highest frequency. Applying the
above mutation patterns we generated 10,785,675 strings. After removal of duplicates
and deletion of words in Dconv (filtering step), we obtained 9,427,051 entries for the
dictionary Derr(English,typing).
The same procedure was used for creating the dictionary of German typing errors,
Derr(German,typing). Since the average length of German words is large, we obtained
13, 656, 866 entries.
</bodyText>
<subsectionHeader confidence="0.906681">
4.2 Error Dictionaries for Spelling Errors
</subsectionHeader>
<bodyText confidence="0.999978666666667">
English. In order to find the most characteristic patterns for English spelling errors, a
bootstrapping procedure was used to compute an initial list of errors. We started with
the misspelled English words verry, noticable, arguement, and inteligence. For each term
we retrieved 20 Web documents. After conversion to ASCII we computed the list of all
normal tokens occurring in these documents. The resulting list was sorted by frequency,
and words in Dconv were filtered out. After a manual selection of new errors with high
Google counts, the procedure was iterated until we did not find new erroneous words
with high frequency. During the bootstrapping procedure, we also found Web pages
that listed some “common misspelled words” of English. The most frequent errors
mentioned in these lists were also added. Table 4 presents some strings that were found
with a large number of Google hits.4
Most of the errors that we found can be traced back to a rule set partially described
in Table 5. The full rule set contains 95 rules. We applied each rule to D(English),
introducing one error at the first possible position, for each entry of the appropriate
form. As a result we obtained a list with 1,223,128 garbled strings. After applying the
standard filtering procedure, we obtained the dictionary Derr(English,spell) of English
spelling errors with 1,202,997 entries.
German. Similarly as for English, we built an initial error list. Bootstrapping was started
with the misspelled German terms n¨ahmlich, addresse, resourcen, and vorraus. Table 6
shows some of the resulting German words, the misspelled variant, and the number
of Google hits of the garbled version. From the initial error list, we obtained a set of 65
rules partially described in Table 7. We applied these rules to D(German), introducing
one error for each entry of the appropriate form. Each rule was applied to each entry
using the first possible position for mutation. For example, for the lexical entry Adresse of
</bodyText>
<footnote confidence="0.8118855">
3 A phenomenon often discussed in the literature; see, for example, Kukich (1992), page 388f.
4 It is well-known that the number of Google hits for a phrase can vary from one day to the next.
</footnote>
<page confidence="0.997367">
303
</page>
<table confidence="0.44515">
Computational Linguistics Volume 32, Number 3
</table>
<tableCaption confidence="0.995084">
Table 4
</tableCaption>
<bodyText confidence="0.907603142857143">
Some frequently misspelled English words and the number of Google hits of the correct
and misspelled forms.
the German standard dictionary we obtained the following error terms: adrese, ahdresse,
adrehsse, addresse, adrresse. As a result we obtained a list with 19, 265, 271 strings. The
large size is mainly caused by the rules for reduplication of consonants, which are
not restricted by word context. The filtering procedure led to an error dictionary with
18, 970, 716 entries.
</bodyText>
<tableCaption confidence="0.990977">
Table 5
</tableCaption>
<table confidence="0.968362833333334">
Rule set (incomplete) for the generation of English spelling errors with examples for each
transformation class.
Deletion of doubled consonants
cc → c occasionally → ocasionally
nn → n drunkenness → drunkeness
Deletion of consecutive consonants
mn → m column → colum
rh → r rhythm → rythm
Deletion of doubled vowels e exceed → exced
ee →
uu → u vacuum → vacum
Deletion in vowel pair ason liaison → liason
aison →
ou → o mischievous → mischievos
ievous → evious mischievous → mischevious
Deletion of silent vowels
?ed → ?d maintained → maintaind
Substitution of consonants cede supersede → supercede
sede H
dent H dant independent → independant
Substitution of vowels ately definitely → definately
itely →
teg → tag category → catagory
Insertion/reduplication of consonants
κ E {c,d,f,l,n,m,p,r,s,t} → κκ always → allways
Transposition of consonants right → rigth
ght → gth
Transposition of vowels believe → beleive
ie H ei
Word Google hits
</table>
<figure confidence="0.997564655172414">
accommodate 5,800,000
category 109,000,000
definitely 10,800,000
independent 25,700,000
millennium 10,500,000
occurrence 4,640,000
receive 57,000,000
recommend 31,400,000
separate 26,300,000
Transformation
mm → m
teg → tag
itely → ately
dent → dant
nn → n
rr → r
ie → ei
mm → m
ara → era
Misspelled variant Google hits
accomodate 559,000
catagory 525,000
definately 1,270,000
independant 523,000
millenium 2,540,000
occurence 279,000
recieve 1,260,000
recomend 707,000
seperate 1,340,000
</figure>
<page confidence="0.997697">
304
</page>
<note confidence="0.902729">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<tableCaption confidence="0.832243333333333">
Table 6
Some frequently misspelled German words and the number of Google hits of the
misspelled version.
</tableCaption>
<table confidence="0.775316642857143">
Word Google hits Transformation Misspelled version Google hits
Weihnachten 5,450,000 ih → i Weinachten 99,600
Adresse 8,040,000 d → dd Addresse 676,000
Videothek 581,000 th → t Videotek 18,300
Kamera 10,900,000 mm → m Kammera 14,200
deshalb 8,330,000 s → ss desshalb 33,900
ziemlich 2,970,000 i → ih ziehmlich 48,900
ekelig 20,600 lig → lich ekelich 17,200
n¨amlich 1,620,000 a¨ → ¨ah n¨ahmlich 53,800
Maschine 1,840,000 i → ie Maschiene 28,300
direkt 18,200,000 ek → eck direckt 20,600
danach 5,100,000 n → nn dannach 46,200
voraus 1,960,000 r → rr vorraus 214,000
4.3 Error Dictionaries for OCR Errors
</table>
<tableCaption confidence="0.780334333333333">
As a starting point we used a list of typical OCR errors that we found in a corpus with
200 pages of OCR output (Ringlstetter 2003). Error types are shown in Table 8.
Table 7
</tableCaption>
<table confidence="0.907051931034483">
Rule set (incomplete) for the generation of German spelling errors. The symbol &amp;quot;t means that t is
not the preceding letter.
Deletion of doubled consonants
dd → d Kuddelmuddel → Kudelmuddel
mm → m Kommando → Komando
Special rules for deletion of consonants
mn → m Kolumne → Kolume
¨ah → a¨ ¨ahnlich → ¨anlich
Deletion of vowels → i ziemlich → zimlich
ie
aa → a Aal → Al
Substitution of consonants
nt → nd eigentlich → eigendlich
rd → rt Standard → Standart
Substitution of vowels
a¨ → e Empf¨anger → Empfenger
era → ara Temperatur → Temparatur
Insertion/reduplication of consonants
[aeiou¨a¨o¨u] H [aeiou¨a¨o¨u]h viel → viehl
[aeiou¨a¨o¨u]k → [aeiou¨a¨o¨u]ck direkt → direckt
κ E {d,f,l,n,m,p,r,t} → κκ GroBbritannien → GroBbrittannien
&amp;quot;tz → tz Schweiz → Schweitz
Insertion of vowels → ie Maschine → Maschiene
i
Shifting
¨au → a¨u ¨auBerst → a¨uBerst
llel → lell parallel → paralell
305
Computational Linguistics Volume 32, Number 3
</table>
<tableCaption confidence="0.981368">
Table 8
</tableCaption>
<bodyText confidence="0.565095">
List of typical OCR errors.
</bodyText>
<equation confidence="0.954257727272727">
Character substitutions Character merges Character splits
l → irn → m m → rn
i → lri → n n → ri
g → q cl → d u¨ → ii
o → p
l → t
v → y
y → v
o → c
e → c
l → 1
</equation>
<bodyText confidence="0.999865823529412">
English. The error dictionary De,.,.(English,ocr) was generated by applying to the en-
tries of D(English) the transformation rules listed in Table 8. The transformation of
D(English) with its 315,300 entries led to a list of 1,697,189 entries. The filtering pro-
cedure where we erase words from Dconv led to the error dictionary De,.,.(English, ocr)
with 1,532,741 entries. Table 9 shows some of the most frequent English words, the
transformation result, and the number of Google hits of the garbled variant.
German. When scanning German texts, vowels ¨a, ¨o, and u¨ are often replaced by
their counterparts a, o, u. However, even more frequently, this kind of replacement
occurs as the result of a character encoding problem (see below). Since we wanted
to avoid having our statistics for OCR errors being heavily overloaded with errors
caused by character encoding problems, we did not add these patterns to the list of
typical OCR errors for German texts. This means that we applied to D(German) the
transformation rules mentioned in Table 8. The transformation of D(German) with its
2,235,136 entries led to a list of 11, 623,989 strings. After filtering, we obtained the error
dictionary De,.,.(German,ocr) with 10, 608, 635 entries. Table 10 shows some frequent
German words, the transformation result, and the number of Google hits of the garbled
variant.
</bodyText>
<tableCaption confidence="0.6318136">
Table 9
Some members of the top 1,000 most frequent English words transformed by typical OCR error
transformations and the number of Google hits of a garbled version.
Word Transformation
company m→rn
</tableCaption>
<construct confidence="0.991835583333333">
from m → rn
government rn → m
many m → rn
market m → rn
more m → rn
most m → rn
only y → v
said d → cl
system m → rn
time m → rn
will ll → 11
Garbled result Google hits
cornpany 1.220
frorn 5,310
governrnent 705
rnany 541
rnarket 282
rnore 707
rnost 1,540
onlv 4,080
saicl 172
systern 2,060
tirne 2,090
wi11 3,570
</construct>
<page confidence="0.997887">
306
</page>
<note confidence="0.915896">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<tableCaption confidence="0.774787">
Table 10
Some members of the top 1,000 most frequent German words transformed by typical OCR error
transformations and the number of Google hits of a garbled version.
</tableCaption>
<table confidence="0.862093285714286">
Word Transformation Garbled result Google hits
Dipl-Ing l → i Dipi-Ing 213
¨uber u¨ → ii iiber 2,360
vorne rn → m vome 1,110
davon o → p davpn 96
lager g → q laqer 164
ferner rn → m femer 841
</table>
<subsectionHeader confidence="0.538219">
4.4 Error Dictionaries with Erroneous Character Encoding of German Words
</subsectionHeader>
<bodyText confidence="0.996221433333333">
In character sets used for the encoding of Web pages, often the German letters ¨A, ¨O, ¨U,
¨a, ¨o, ¨u, and f3 (“sharp s”) are not available. In many of these cases, vocals are replaced,
following the substitution scheme (e-transformation):
A¨→ Ae, O¨→ Oe, U¨→ Ue, a¨→ ae, o¨→ oe, u¨→ ue.
In other Web pages, the aforementioned vocals are replaced using the following scheme:
A¨→ A, O¨→ O, U¨→ U, a¨→ a, o¨→ o, u¨→ u.
This transformation, which is typically found in Web pages written by non-native
speakers of German, will be called e-transformation.
Table 11 shows some transformed terms of the top 1,000 German words and gives
the number of Google hits for correct and incorrect spellings. The right-hand side of
the table gives the corresponding numbers for PDF documents. The numbers show that
misspellings caused by e-transformation are a widespread phenomenon. Note that the
quality of PDF corpora is much better in this respect.
When applying the e- or c-transformation, letter f3 is typically replaced by ss
(s-transformation). For two reasons, the distinction between f3 and ss is a delicate matter.
Since the Swiss spelling is ss, a string representing an erroneous German word may be a
correct Swiss word. To make things even more complicated, the correct spelling of many
German words has been changed during the so-called “Rechtschreibereform” some
years ago, which affected the selection between f3 and ss (e.g., Mif3verst¨andnis became
Missverst¨andnis). Still (and unofficially), the old spelling variant is broadly used. In what
follows, a token written with ss that is officially written with f3 is treated as an error.
We built two error dictionaries respectively representing errors introduced via
e-transformation and c-transformation. All vowels of the form ¨a, ¨o, u¨ (or upper-case
variants) in the German dictionary were replaced by their images under the respective
transformation. Letter f3 occurring in the entries was categorically replaced by ss. For
the e-transformation we obtained a list of 436,198 strings. The filtering procedure led to
an error dictionary Derr(German, enc-e) with 432,987 entries.
Applying the c-transformation and the usual filtering step, we generated the error
dictionary Derr(German,enc-c) with 407,013 entries. A considerable number of well-
formed words was generated and filtered out. The rules of German morphology yield a
</bodyText>
<page confidence="0.977237">
307
</page>
<note confidence="0.26537">
Computational Linguistics Volume 32, Number 3
</note>
<bodyText confidence="0.8948926">
partial explanation: For so-called strong verbs some paradigmatic forms only differ by
a mutation of vowels (mochtQ-mochtQ).
An extra error dictionary DQ,.,.(German,enc-s) was built by replacing f3 by ss in
German dictionary entries without occurrences of vocals A, O, U, d, d, R. The dictionary
has 42,340 entries.
</bodyText>
<subsectionHeader confidence="0.995651">
4.5 Summary and Maximal Error Dictionaries
</subsectionHeader>
<bodyText confidence="0.999465666666667">
Using the union of all error dictionaries for both languages, we constructed the maximal
error dictionaries DQ,.,.(English,all) and DQ,.,.(German,all). Table 12 summarizes the sizes
of all error dictionaries.
</bodyText>
<sectionHeader confidence="0.927116" genericHeader="method">
5. Error Overproduction and Underproduction
</sectionHeader>
<bodyText confidence="0.9986296">
Before we analyze the number of tokens in the corpora that represent entries of the
error dictionaries, we comment on the limitations of this kind of analysis. Obviously,
not all orthographic errors of a given type occur in the respective error dictionary
(underproduction). On the other hand, some tokens classified as errors by the error
dictionary might in fact be correct words (overproduction) due to the incompleteness of
</bodyText>
<tableCaption confidence="0.760682">
Table 11
</tableCaption>
<bodyText confidence="0.991735285714286">
Most frequent German words with vowels ¨a, ¨o, ¨u; frequencies of correct spelling and frequency
after applying e-transformation. Frequencies are counted in arbitrary Web pages (left part of the
table) and in PDF documents in the Web.
Word Norm. Transf. Percentage PDF norm. PDF transf. Percentage
f¨ur 19,000,000 5,140,000 27.05 4,050,000 30,900 0.76
¨uber 17,800,000 2,330,000 13.08 3,610,000 16,000 0.44
k¨onnen 14,500,000 290,000 2.00 1,790,000 3,960 0.22
m¨ussen 7,420,000 177,000 2.38 1,090,000 2,060 0.18
w¨are 3,500,000 173,000 4.94 590,000 631 0.11
f¨unf 2,470,000 291,000 11.78 541,000 570 0.10
k¨onnte 2,900,000 165,000 5.69 570,000 618 0.11
h¨atten 815,000 43,100 5.28 234,000 315 0.13
daf¨ur 3,580,800 124,000 3.46 814,000 865 0.11
w¨urde 3,770,000 162,000 4.30 601,000 693 0.11
</bodyText>
<tableCaption confidence="0.855056">
Table 12
</tableCaption>
<bodyText confidence="0.593137777777778">
Size of error dictionaries.
Error dictionary Entries Error dictionary Entries
DQ,.,.(English,typing) 9,427,051 DQ,.,.(German,typing) 13, 656, 866
DQ,.,.(English,spell) 1,202,997 DQ,.,.(German,spell) 18, 970, 716
DQ,.,.(English,ocr) 1,532,741 DQ,.,.(German,ocr) 10, 608, 635
DQ,.,.(English,all) 11, 884, 284 DQ,.,.(German,enc-e) 432,987
DQ,.,.(German,enc-e) 407,013
DQ,.,.(German,enc-s) 42,340
DQ,.,.(German,all) 43, 688, 771
</bodyText>
<page confidence="0.935661">
308
</page>
<note confidence="0.659355">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<bodyText confidence="0.961689666666667">
the final filtering step in the construction of the error dictionaries. From the construction
of the error dictionaries we may expect that incompleteness/underproduction is mainly
caused by
</bodyText>
<listItem confidence="0.995870666666667">
• missing patterns for spelling errors and OCR errors, and
• the fact that we do not seriously damage words when constructing the
error dictionaries.
</listItem>
<bodyText confidence="0.997232166666667">
For both English and German, to estimate under/overproduction of the error dictio-
naries, the primary general HTML corpus was split into four subclasses. The class
Best contains all documents where the number of hits (tokens representing entries
of the maximal error dictionary) per 1,000 tokens is ≤1. For class Good (Bad, Worst,
respectively), the number of hits per 1,000 tokens is 1–5 (5–10, &gt;10, respectively). The
number of documents in each class is found in Tables 13 and 14.
</bodyText>
<subsectionHeader confidence="0.991097">
5.1 Estimating Underproduction
</subsectionHeader>
<bodyText confidence="0.99996125">
To estimate underproduction of the English error dictionaries, the English general
HTML corpus was split into subfiles, each containing 300 tokens. We then randomly
selected such subfiles and analyzed the proper errors found in these portions. Since
we wanted to avoid an unbalanced selection where most errors are from the doc-
ument class Worst, a maximum of three errors from each subfile was used for the
analysis. Error candidates were found with the help of a spell checker and using
our standard dictionaries as a second control. Slang and special vocabulary were
not used for the statistics. We also excluded errors where two words were merged.
We found that most of the latter errors were caused by the conversion process from
HTML to ASCII. Each candidate was manually controlled; in difficult cases we con-
sulted Merriam-Webster Online. We continued the search until 1,000 proper errors were
isolated. From these, 624 (62.4%) turned out to be entries of the maximal English error
dictionary.
Table 13 refines these statistics and shows the number of errors and the percentage
of errors found in the error dictionary for the four quality classes of documents. As a
tendency, recall of the error dictionary is better in “bad” documents.
The same procedure was used for German and confirmed this tendency. From 1,000
errors in the German general HTML corpus, 638 (63.80%) were found in the maximal
German error dictionary. The statistics for the four quality classes of documents is
presented in Table 14.
</bodyText>
<subsectionHeader confidence="0.999133">
5.2 Estimating Overproduction
</subsectionHeader>
<bodyText confidence="0.999939555555556">
In our first experiment with English texts we found that a considerable number of hits
corresponded to special names introduced in the documents. Many of these names are
artificial (e.g., Hitty). In order to avoid all difficulties with special names we decided
to restrict the error analysis in English texts to words starting with a lowercase letter.
In each of the four classes, 1,000 hits of this form were randomly selected. We then
manually checked which of these tokens represent correct words, reading contexts and
consulting Merriam-Webster Online in difficult cases.
The results are presented in Table 15 and show a clear tendency. The percentage of
proper errors is larger in documents with a large number of hits. In the class Worst, 95%
</bodyText>
<page confidence="0.996097">
309
</page>
<table confidence="0.431777">
Computational Linguistics Volume 32, Number 3
</table>
<tableCaption confidence="0.991843">
Table 13
</tableCaption>
<table confidence="0.936509166666667">
Underproduction of the maximal error dictionary in the primary English general HTML corpus.
Document class Documents Errors found Entries of error dict. %
Worst 24 248 166 66.93
Bad 39 194 131 67.53
Good 226 389 242 62.21
Best 540 169 85 50.29
</table>
<tableCaption confidence="0.996597">
Table 14
</tableCaption>
<table confidence="0.909324333333333">
Underproduction of the maximal error dictionary in the primary German general HTML corpus.
Document class Documents Errors found Entries of error dict. %
Worst 50 389 307 78.92
Bad 42 166 101 60.84
Good 297 385 201 52.21
Best 229 60 29 48.33
</table>
<bodyText confidence="0.998838">
of all hits are proper errors; in the class Best, only 60% of the hits represent orthographic
errors. Most of the remaining hits could be assigned to one of the following categories:
correct standard expressions (missing entries of the standard dictionaries), names and
geographic expressions, foreign language expressions, archaic and literary word forms,
and abbreviations. The number of hits in each category is found in Table 15. The large
number of standard words among the hits in the class Best is caused by an incomplete-
ness of our English dictionary, which does not always contain both the British and the
American spelling variants.
In the German general HTML corpus, where we could not restrict the experiment
to tokens starting with a lowercase letter, a more shallow picture is obtained (Table 16).
For the classes Best (61% proper errors), Good (62% proper errors), and Worst (88%
proper errors), results are similar to the English case and confirm the above-mentioned
general tendency. Due to the large number of names, foreign language expressions, and
archaic/literary word forms that are found in class Bad, we here have only 56% proper
errors. The results show that overproduction could be considerably reduced when filter-
ing error dictionaries with better standard dictionaries for geographic entities, personal
names, foreign language expressions, and archaic and literary word forms.
</bodyText>
<tableCaption confidence="0.759929">
Table 15
</tableCaption>
<bodyText confidence="0.9740156">
Overproduction of the maximal error dictionary in the English general HTML corpus.
Document class Best Good Bad Worst
Hits 1,000 1,000 1,000 1,000
Percentage proper errors 72 86 89 95
Proper errors 722 856 894 952
Standard words 206 31 21 5
Personal names and geographic entities 23 35 24 27
Foreign language expressions 32 42 36 12
Archaic and literary word forms 9 28 1 1
Abbreviations 8 6 24 2
</bodyText>
<page confidence="0.869115">
310
</page>
<note confidence="0.713776">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<subsectionHeader confidence="0.947511">
5.3 Summary So Far
</subsectionHeader>
<bodyText confidence="0.999917857142857">
From the above percentages we obtain a naive estimate for the ratio between the real
number of errors and the number of hits of the error dictionaries, which is presented in
Table 17. The results show that the number of hits can be seen as a lower approximation
of the real number of errors. The ratio between both numbers is larger for English. It
does not differ dramatically between the distinct quality classes. However, since both
over- and underproduction are larger for “good” documents, error estimates for these
classes come with a larger degree of uncertainty.
</bodyText>
<subsectionHeader confidence="0.853944">
5.4 Difficulties
</subsectionHeader>
<bodyText confidence="0.999913">
The above analysis turned out to be much more time-consuming and difficult than
it might appear. One problem is caused by the fact that nonstandard vocabulary and
errors do not represent disjoint categories. Orthographic errors are sometimes “abused”
as slang expressions. A separation between archaic/foreign language expressions and
orthographic errors is often only possible when taking the sentence context into
account. These and other examples explain that demarcation issues are sometimes
difficult to solve. The construction of special dictionaries for slang, foreign language
expressions, special names, and archaic word forms represents an important step
for future work. Using these dictionaries in the filtering step of the construction of
the error dictionaries, overproduction may probably be reduced in a significant way.
Furthermore, these dictionaries should help to detect Web pages with nonstandard
vocabulary of a particular type.
</bodyText>
<tableCaption confidence="0.990538">
Table 16
</tableCaption>
<table confidence="0.9675514">
Overproduction of the maximal error dictionary in the German general HTML corpus.
Document class Best Good Bad Worst
Hits 1,000 1,000 1,000 1,000
Percentage proper errors 61 62 56 88
Proper errors 615 624 564 884
Standard words 126 123 47 3
Names and geos 201 147 193 49
Foreign language expressions 31 46 103 37
Archaic and literary word forms 18 44 82 24
Abbreviations 9 16 11 3
</table>
<tableCaption confidence="0.949932333333333">
Table 17
Naive estimates of the ratio between the real number of errors and the number of hits of the
error dictionaries for distinct quality classes.
</tableCaption>
<table confidence="0.847087428571428">
English German
Best 0.72/0.5029 = 1.43 Best 0.61/0.4833 = 1.26
Good 0.86/0.6221 = 1.38 Good 0.62/0.5221 = 1.19
Bad 0.89/0.6753 = 1.32 Bad 0.56/0.6084 = 0.92
Worst 0.95/0.6693 = 1.42 Worst 0.88/0.7892 = 1.12
311
Computational Linguistics Volume 32, Number 3
</table>
<sectionHeader confidence="0.61337" genericHeader="method">
6. Distribution of Orthographic Errors in the General HTML Corpora
</sectionHeader>
<bodyText confidence="0.999977333333333">
We define the error rate of a text with respect to an error dictionary Derr as the average
number of entries of Derr that are found among 1,000 tokens of the text. In this section
we describe the distribution of error rates for all types of errors in the general HTML
corpora. Experiments for other corpora are summarized in the following section. The
results of the previous section indicate that the error rate represents a reasonable lower
approximation for the real number of errors per 1,000 tokens in the document. Incom-
pleteness of the rule sets for generating spelling errors and OCR errors should be kept
in mind. Recall that in English documents, only words starting with a lowercase letter
are taken into account.
</bodyText>
<subsectionHeader confidence="0.999066">
6.1 Distribution of Error Rates for Orthographic Errors
</subsectionHeader>
<bodyText confidence="0.998181387096774">
In the first test, we consider orthographic errors, that is, errors of arbitrary type. Ac-
cordingly, error rates for documents are computed with respect to the maximal error
dictionaries. For a coarse survey, as in the previous section, we distinguish four quality
classes Best, Good, Bad, Worst, respectively, covering pages with error rates in the
intervals [0, 1), [1, 5), [5,10), and [10, ∞).
English. The histograms in Figure 1 show the percentage of documents in each class in
the primary (left-hand side) and secondary (right-hand side) English corpora. Remark-
ably, the differences between the two corpora are almost negligible. In both cases, most
documents belong to class Best; only a small percentage of documents belongs to classes
Bad and Worst.
Table 18 presents the average error rate for various document classes. As to the
length of documents in the corpora, drastic differences exist. We did not find a cor-
relation between document length and error rates, with the following eye-catching
exception: small (larger) documents of an excellent quality tend to have an error rate
0 (close to 0, but &gt;0).5 In order to avoid a dominating influence of long documents,
we simply computed the arithmetic mean of all error rates obtained for the single
documents. The class Best 80% collects 80% of all documents with lowest error rate,
and similarly for the class Best 90%.
Note that a significant difference exists between the average rate for all documents
(2.47, 2.24, respectively) and the means for the Best 80% classes (0.67, 0.68, respectively).
These numbers point to an effect that will be found again in other figures and exper-
iments: The large majority of all documents in the corpora have a very good quality.
Yet, at the “bad end” of the spectrum we find a considerable number of unacceptable
documents with a very large number of errors. The phenomenon becomes even more
apparent in Figure 2 (left diagram) where we depict the error rates of all documents.
In what follows we often describe mean error rates for all documents and for the class
Best 80%. When comparing distinct corpora, the two values help to see if deviations
concern the class of all documents or if they are rather caused by a small number of
“bad” documents.
Note also that all corresponding average error rates obtained for the primary and
secondary corpora are almost identical. This gives at least some evidence to the conjec-
</bodyText>
<footnote confidence="0.927025">
5 This explains the special effect seen in Figures 14 and 15 where the refined crawl produces many short
documents.
</footnote>
<page confidence="0.983659">
312
</page>
<note confidence="0.953751">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<figureCaption confidence="0.986419">
Figure 1
</figureCaption>
<bodyText confidence="0.9716154">
Percentage of documents in the four quality classes for the primary (left-hand side) and
secondary (right-hand side) English corpora. The four quality classes cover distinct error
rates for orthographic errors.
ture that for corpora crawled with similar queries and collection strategies, error rates
will not differ too much. As we see next, the situation for the German corpora is more
complex.
German. The histogram in Figure 3 shows the percentage of documents in each class
of the primary (left-hand side) and secondary (right-hand side) German corpora. A
large number of documents belongs to class Good. We now find a larger difference
between the primary and secondary corpora. Several phenomena might be responsible.
As mentioned above, for the German corpora we did not restrict the analysis to tokens
starting with a lowercase letter. Hence, documents with many names can cause special
effects and lead to differences between corpora. Second, errors caused by encoding
of special characters represent an important extra source for errors in German docu-
ments where numbers may vary from one corpus to another. This is seen in Table 20
where we analyze all error types occurring in the primary and secondary German
corpus. The means for e-transformation are 0.62 for the primary corpus and 1.40 for the
secondary corpus.
The average error rates obtained for distinct documents classes of the German
corpus, which are presented in Table 19, show that
</bodyText>
<listItem confidence="0.9988">
• for all classes we have more errors than in the English documents, and
• for different corpora, sometimes nontrivial deviations must be expected.
</listItem>
<tableCaption confidence="0.99882">
Table 18
</tableCaption>
<table confidence="0.9944346">
Mean error rate for arbitrary orthographic errors in various document classes; results for the
general English HTML corpus.
Document class Best Good Bad Worst Best 80% Best 90% All
0.30 2.31 8.83 23.23 0.67 1.06 2.47
0.27 2.19 6.77 21.61 0.68 1.03 2.24
</table>
<page confidence="0.93862">
313
</page>
<figure confidence="0.761375">
Computational Linguistics Volume 32, Number 3
</figure>
<figureCaption confidence="0.988941">
Figure 2
</figureCaption>
<bodyText confidence="0.9979546">
Distribution of error rates for arbitrary orthographic errors in the primary English (left diagram,
829 documents, mean error rate 2.47) and the German (right diagram, 618 documents, mean
error rate 3.86) general HTML corpora. On the x-axis, documents are ordered by error rates;
documents with high rates are found on the right-hand side. In the left diagram, 7 documents
with error rates ranging from 42.99 to 64.22 have been omitted to simplify scaling. In the right
diagram, one document with error rate 40.07 is omitted.
A more detailed picture of the error rates in the primary German corpus is given
in Figure 2 (right diagram). The two curves of the figure show that despite the afore-
mentioned differences between English and German, basic features of the error rate
distribution are very similar.
</bodyText>
<subsectionHeader confidence="0.961748">
6.2 Error Rates for Particular Error Classes
</subsectionHeader>
<bodyText confidence="0.999833411764706">
Typographic Errors. The most widespread subclass of errors found in the corpora
are typographic errors. For the primary English corpus, as many as 2.31 of 2.47 hits
(93.5%) can be classified as typing errors.6 The percentage is lower in the German corpus
(2.15/3.86, 55.7%) where e-transformation, c-transformation, and s-transformation rep-
resent additional important sources for errors (see below). In absolute numbers, error
rates for typographic errors observed in the two corpora are similar.
The histograms in Figure 4 show the percentage of documents with error rates for
typographic errors in the four intervals [0, 1), [1, 5), [5,10), and [10, ∞) for the primary
and secondary English corpora (upper diagrams of Figure 4) and the corresponding
German corpora (lower diagrams of Figure 4). Note again the close similarity between
the two English corpora. The detailed distribution curves, which are similar to the
curves obtained for orthographic errors in Figure 2, are omitted.
Spelling Errors. The two diagrams in Figure 5 show that the error rates found in
the primary English corpus (mean 0.39) are similar to the ones found in the primary
German corpus (mean 0.45). The results presented in Section 5.1 indicate that our error
dictionaries for spelling errors are incomplete. Hence the real number of spelling errors
is probably larger. We also computed error rates for spelling errors in the secondary
</bodyText>
<footnote confidence="0.539757">
6 Recall that the error type of a garbled token may be ambiguous.
</footnote>
<page confidence="0.993924">
314
</page>
<note confidence="0.946587">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<figureCaption confidence="0.913054">
Figure 3
</figureCaption>
<bodyText confidence="0.931955454545454">
Percentage of documents in the four quality classes for the primary (left-hand side) and
secondary (right-hand side) German corpora. The four quality classes cover distinct error
rates for orthographic errors.
corpora; results are presented in Table 20. The tendency observed earlier for ortho-
graphic errors was confirmed: the difference between the two English corpora (mean
0.39 versus mean 0.38) is negligible; for the two German corpora, the difference is larger
(mean 0.45 versus mean 0.58).
OCR Errors. The diagrams in Figure 6 show that most documents do not contain any
OCR errors. Of course this result is not surprising. Probably not all errors that contribute
to the two diagrams are really caused by wrong character recognition. Although some
of the documents with the highest errors were explicitly marked to contain scanned
</bodyText>
<tableCaption confidence="0.99727">
Table 19
</tableCaption>
<table confidence="0.9981476">
Mean error rate for arbitrary orthographic errors in various document classes; results for the
general German HTML corpus.
Document class Best Good Bad Worst Best 80% Best 90% All
0.41 2.61 7.30 15.15 1.89 2.58 3.86
0.48 2.57 7.21 24.38 2.40 3.09 5.40
</table>
<tableCaption confidence="0.98193">
Table 20
</tableCaption>
<table confidence="0.995100727272727">
Mean of error rates for all error types in primary and secondary general HTML corpora.
Error type Mean error rate Mean error rate Mean error rate Mean error rate
English corpus English corpus German corpus German corpus
HTML (1) HTML (2) HTML (1) HTML (2)
arbitrary 2.47 2.24 3.86 5.40
typographic 2.31 2.03 2.15 2.79
spelling 0.39 0.38 0.45 0.58
OCR 0.06 0.07 0.13 0.18
e-transformation 0.003 0.004 0.62 1.40
c-transformation 0.02 0.01 0.19 0.24
s-transformation 0.00003 0.00 0.76 0.96
</table>
<page confidence="0.918944">
315
</page>
<figure confidence="0.746451">
Computational Linguistics Volume 32, Number 3
</figure>
<figureCaption confidence="0.988766">
Figure 4
</figureCaption>
<bodyText confidence="0.975378428571429">
Typographic errors: the percentage of documents in the four quality classes in the general
English (upper part) and German (lower part) HTML corpora. Quality classes refer to error rates
for typographic errors.
text, it is natural to assume that the total number of such documents in the corpus is
very small. Ambiguous error types might explain some of the errors found in Figure 6;
see the discussion below. As a matter of fact, the number of OCR errors will grow when
analyzing corpora with many OCRed pages.
</bodyText>
<figureCaption confidence="0.481105">
Figure 5
</figureCaption>
<bodyText confidence="0.994450666666667">
Distribution of error rates for spelling errors in the primary English (left diagram, mean error rate
0.39) and German (right diagram, mean error rate 0.45) general HTML corpora. In the left (right)
diagram, one document with error rate 14.95 (11.31) is omitted.
</bodyText>
<page confidence="0.996788">
316
</page>
<note confidence="0.953642">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<figureCaption confidence="0.962923">
Figure 6
</figureCaption>
<bodyText confidence="0.9939754">
Distribution of error rates for OCR errors in the primary English (left diagram, mean error rate
0.06) and the German (right diagram, mean error rate 0.13) general HTML corpora.
e-transformation and c-transformation. Figures 7 and 8 show some interesting differ-
ences between the use of both transformations in German Web pages. In the primary
German corpus, e-transformation errors are concentrated in a small class of documents
(documents with rank &gt;480) where we have a nontrivial number of occurrences, lead-
ing to a mean error rate of 0.62. The mean error rate for c-transformation is much
smaller (0.19). Still, there are more documents containing an c-transformation error.
This indicates that e-transformation is applied more systematically. The small plateau
in Figure 7 is generated by some portion of text that was found in several documents.
The error rates that arise when applying e-transformation in a completely systematic
way are typically larger. In the corpus we found some documents of this kind; since the
rates are too high, these documents are not depicted in the figure.
We also looked for e- and c-transformation errors in the documents of the En-
glish general HTML corpus. These errors, which mutate German words, only occur
</bodyText>
<figureCaption confidence="0.994219">
Figure 7
</figureCaption>
<bodyText confidence="0.9380245">
Distribution of error rates for e-transformation in the primary German general HTML corpus.
Mean: 0.62. Here 7 documents with error rates ranging from 13.16 to 34.10 are omitted.
</bodyText>
<page confidence="0.971106">
317
</page>
<figure confidence="0.806523">
Computational Linguistics Volume 32, Number 3
</figure>
<figureCaption confidence="0.986722">
Figure 8
</figureCaption>
<bodyText confidence="0.983275916666667">
Distribution of error rates for e-transformation in the primary German general HTML corpus.
Mean 0.19.
in a small number of English documents. Whereas German writers strongly prefer the
e-transformation in situations where the correct characters are not available, we find a
clear preference for the e-transformation in the English documents.
s-Transformation. Figure 9 shows the distribution of error rates for s-transformation
in the primary German general HTML corpus. Since the corpus contains some Swiss
documents, where “ß” is categorically written “ss” (cf. Section 4.4), the high mean (0.76)
has to be relativized.
Overview. Table 20 summarizes the error rates of all types of errors in the general HTML
corpora. The numbers show that not all errors can be traced back to a unique error
type.
</bodyText>
<figureCaption confidence="0.855593">
Figure 9
</figureCaption>
<bodyText confidence="0.8997875">
Distribution of error rates for s-transformation in the primary German general HTML corpus.
Mean 0.76. One document with error rate 11.46 is omitted.
</bodyText>
<page confidence="0.995565">
318
</page>
<note confidence="0.924105">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<subsectionHeader confidence="0.910552">
6.3 Summary So Far
</subsectionHeader>
<bodyText confidence="0.999854190476191">
For both languages, the large majority of all documents has a small number of ortho-
graphic errors. On the other hand, at the “bad end” of the spectrum, a considerable
number of unacceptable documents with high error rates is found. Mean values for
error rates are strongly influenced by the latter documents; the average error rate for
the Best 80% class is usually much lower. The latter rate should also be considered when
comparing results obtained for two corpora.
Phenomena observed in English corpora seem to be more stable than those for
German: Results obtained for the primary and the secondary English general HTML
corpus are almost identical. Differences between the two German corpora may partially
be explained by names occurring in texts and by special character encoding problems.
Table 20 illustrates this effect, showing the mean error rates for all error types in the
primary and secondary HTML corpora.
The most important error class are typographic errors. In the German documents,
e-transformation and s-transformation represent another typical error source. Whereas
the number of spelling errors is significant, OCR errors do not play an essential role.
Interestingly, the basic form of the distribution curves in Figure 2 is found again in
all corresponding curves for other error types and other corpora (see also Figures 14
and 15); although the absolute numbers for error rates and details are of course distinct.
The close similarity of all distribution curves is striking and gives some evidence to the
assumption that relevant features of the error rate distribution are stable, regardless of
the corpora that are investigated.
</bodyText>
<sectionHeader confidence="0.95288" genericHeader="method">
7. Differences for Special Corpora
</sectionHeader>
<bodyText confidence="0.99991625">
We summarize the error rates that we found in PDF corpora and in corpora for special
thematic fields. In Figures 14 and 15, we present a small selection of distribution curves
for error rates. Similarities of the distribution curves mentioned in the previous section
should also be noted.
</bodyText>
<subsectionHeader confidence="0.99888">
7.1 Distribution of Orthographic Errors in the General PDF Corpora
</subsectionHeader>
<bodyText confidence="0.9999361875">
Figure 10 presents the mean error rates for distinct error types found in the general
PDF and (primary) HTML corpus for English. The results show that PDF documents in
general have a better quality than HTML documents. Whereas we have a mean error
rate of 2.47 for orthographic errors in the HTML documents, the corresponding mean
is only 1.38 for PDF. For the Best 80% documents the means are 0.67 (HTML) and 0.38
(PDF).
In principle, the same tendency was observed in the documents of the parallel
German corpora. However, special effects polluted the picture. As we mentioned in
Section 2.1, the conversion of the German PDF documents to ASCII is very error
prone. Although we excluded all converted documents that were obviously garbled
by the conversion, we also found in the remaining documents examples of errors that
were caused by the conversion process. In this sense, the error rates in the original
PDF documents are probably smaller. Mean error rates are 2.15 (HTML) versus 2.04
(PDF) for typographic errors, 0.45 versus 0.41 for spelling errors, 0.13 versus 0.09
for OCR errors, 0.62 versus 0.07 for e-transformation errors, and 0.19 versus 0.16 for
c-transformation errors. Since the conversion tool categorically replaces letter “ß” by
</bodyText>
<page confidence="0.99611">
319
</page>
<figure confidence="0.813066">
Computational Linguistics Volume 32, Number 3
</figure>
<figureCaption confidence="0.953028">
Figure 10
</figureCaption>
<bodyText confidence="0.9813616">
PDF versus HTML: mean error rates for distinct error types in the general corpora (English).
Black rectangles describe mean error rates for the Best 80% subclass.
“ss”, a very high number of s-transformation errors led to the effect that the overall
mean error rate for the German PDF (3.95) is even larger than the rate for the German
HTML (3.86).
</bodyText>
<subsectionHeader confidence="0.997886">
7.2 Distribution of Orthographic Errors in Distinct Thematic Corpora
</subsectionHeader>
<bodyText confidence="0.994300625">
Figure 11 describes the average error rates for orthographic errors and spelling errors
in the English corpora. In almost all thematic areas, mean error rates are larger than
the corresponding means in the general corpora; the differences are significant and
remarkable. With a mean error rate of 2.05 (0.30) for orthographic (spelling) errors,
the English Neurology corpus is very clean and represents an exception. For the Fish
corpus, even the mean error rate for the Best 80% subclass is 2.72. We conjecture that
corpora that are collected without a special thematic focus often contain a large number
of “professional” and carefully edited Web pages. Web pages for special thematic areas
</bodyText>
<figureCaption confidence="0.767867">
Figure 11
</figureCaption>
<bodyText confidence="0.9770625">
Thematic corpora versus general corpora: mean error rates for orthographic errors and spelling
errors in distinct English corpora. All results refer to the primary thematic corpora crawled with
the simple strategy (cf. Section 2.2). Black rectangles represent mean error rates for the Best 80%
subclass.
</bodyText>
<page confidence="0.992717">
320
</page>
<note confidence="0.860528">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<bodyText confidence="0.999925636363636">
are perhaps less “publicity oriented.” Furthermore, as a rule of thumb, documents in
thematic fields related to hobbies (e.g. Fish) contain more orthographic errors than
documents in scientific fields (Holocaust, Neurology). Corpora with a focus on history
seem to occupy a middle position.
In the German corpora we have the means for orthographic/spelling error rates
presented in Table 21; numbers in brackets refer to the Best 80% subclass. The second
column shows that, by and large, the ranking order for thematic areas induced by mean
error rates observed in the English corpora is found again in the German part. The
German corpus Neurology, with its high error rate, does not follow this line. The high
means for the Best 80% subclasses in the German corpora are remarkable and show that
the low quality is not caused by a small number of bad documents.
</bodyText>
<subsectionHeader confidence="0.785729">
7.3 Differences between the Two Crawling Strategies
</subsectionHeader>
<bodyText confidence="0.999340666666666">
Table 22 summarizes the differences for the English corpora retrieved with the simple
strategy on the one hand and the corpora retrieved with the refined strategy on the other
hand. Numbers represent average error rates for the corpora. Numbers in brackets refer
to the Best 80% subclass.
Surprisingly, all corpora crawled with the refined strategy always have a better
(smaller) average error rate than those retrieved with the simple strategy, pointing to
a significant difference between the two types of collection strategies. An analysis of the
document genres found in the two types of corpora presented in Section 8 offers a good
explanation; see Table 26.
</bodyText>
<tableCaption confidence="0.99592">
Table 21
</tableCaption>
<table confidence="0.998497222222222">
Mean error rates for orthographic errors and spelling errors in thematic German corpora.
German Orthographic errors Spelling errors
General PDF 3.95 (2.31) 0.41 (0.06)
Neurology G (1) (HTML) 6.94 (4.48) 0.51 (0.26)
General HTML (1) 3.86 (1.81) 0.45 (0.16)
Holocaust G (HTML) 4.97 (3.03) 0.50 (0.27)
Mushrooms G (1) (HTML) 7.91 (3.69) 0.78 (0.32)
Middle Ages G (HTML) 7.84 (4.30) 0.96 (0.38)
Fish G (1) (HTML) 9.34 (4.47) 1.35 (0.52)
</table>
<tableCaption confidence="0.990809">
Table 22
</tableCaption>
<table confidence="0.897373444444444">
Dependency of mean error rates on the crawling strategy for distinct English thematic corpora.
Orthographic errors Spelling errors
(1) (2) (1) (2)
English Simple crawl Refined crawl Simple crawl Refined crawl
Fish E 7.08 (2.72) 3.39 (0.35) 0.98 (0.27) 0.47 (0)
Mushrooms E 4.10 (1.49) 2.58 (0.32) 0.52 (0.13) 0.50 (0)
Neurology E 2.05 (0.79) 1.77 (0.25) 0.30 (0.05) 0.26 (0)
321
Computational Linguistics Volume 32, Number 3
</table>
<tableCaption confidence="0.983972">
Table 23
</tableCaption>
<table confidence="0.993551">
Dependency of mean error rates on the crawling strategy for distinct German thematic corpora.
Orthographic errors Spelling errors
(1) (2) (1) (2)
German Simple crawl Refined crawl Simple crawl Refined crawl
Fish G 9.34 (4.67) 7.71 (3.31) 1.35 (0.52) 1.00 (0.17)
Mushrooms G 7.91 (3.69) 8.51 (3.50) 0.78 (0.32) 0.76 (0.08)
Neurology G 6.94 (4.48) 7.08 (2.86) 0.51 (0.26) 0.47 (0.00)
</table>
<bodyText confidence="0.993924263157895">
Figures 14 and 15 show that the corpora crawled with the refined strategy have a
large number of documents with error rate 0. This special effect is caused by the large
number of short documents that are obtained. For example, the mean length of all the
documents with error rate 0 in the corpus Fish E (2) is 322 (number of lowercase normal
tokens), whereas the average length of the documents in the corpus Fish E (1) is 14,196
(cf. Table 2).
The relative order between the three thematic fields was not affected by the crawling
strategy. For both crawls, the Neurology corpus achieves the best results, followed by
Mushrooms and Fish. The excellent quality of the Best 80% classes obtained with the
refined crawl are remarkable.
For the German variant of the corpora, as Table 23 shows, a more shallow picture
is obtained. For two thematic areas, the simple crawl even leads to lower error rates,
although the difference is small. The ranking order between the three thematic areas
obtained from the two crawls is not the same.
Figure 14 presents the error rates for orthographic errors in the English HTML
corpora Fish, Mushrooms, and Neurology, comparing the simple strategy (left-hand
side diagrams) with the refined strategy (right-hand side diagrams). Figure 15 gives
the error rates for spelling errors in the German HTML corpora Fish, Mushrooms, and
Neurology, again comparing the simple and the refined strategies.
</bodyText>
<subsectionHeader confidence="0.992365">
7.4 Summary So Far
</subsectionHeader>
<bodyText confidence="0.975082583333333">
PDF corpora were found to have lower error rates. Corpora covering pages from non-
scientific thematic areas often have higher error rates than corpora crawled without a
fixed thematic focus. Error rates in the corpora are influenced by the crawling strategy.
For English texts, refined crawling strategies that collect pages with a strong thematic
focus seem to produce better corpora.
8. Error Rates and Document Genre
Classifying Web documents by genre (Kessler, Nunberg, and Sch¨utze 1997; Finn and
Kushmerick 2003; Dimitrova et al. 2003) represents one possible way to improve Web
search techniques. Web-based corpus linguistics may benefit from these techniques
since they enable a better control of the kind of language material that is added to
a collection. In this section we want to see which kind of correlation exists between
the error rates observed in a document and its genre. After manual inspection of
</bodyText>
<page confidence="0.995714">
322
</page>
<note confidence="0.94794">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<figureCaption confidence="0.975825">
Figure 12
</figureCaption>
<bodyText confidence="0.9786825">
Zipf curves with logarithmic frequencies for English (upper diagram, 1,175,894 entries) and
German (lower diagram, 454,709 entries) ranked error lists. The diagrams respectively
illustrate the frequency of particular orthographic errors in English and German Web pages
from a 1.4-terabyte subcorpus of the Web.
</bodyText>
<listItem confidence="0.943976545454545">
hundreds of Web pages, we decided to use the following set of document genres for
our investigations:
• The class Prof contains all Web pages with professional texts from
organizations, enterprises, and administrations. Also, scientific texts,
professional literature, and fiction are added to this class.
• The class Priv contains private homepages and texts written from a
personal point of view. A clue term is the personal pronoun I. Texts of this
form may dominate in a Web page run by an organization. In this case, the
page was classified as Priv.
• The class Chat contains chat and related collections of private statements
and contributions such as guest books, mailing lists, and so forth.
</listItem>
<page confidence="0.996306">
323
</page>
<figure confidence="0.823169">
Computational Linguistics Volume 32, Number 3
</figure>
<figureCaption confidence="0.990093">
Figure 13
</figureCaption>
<bodyText confidence="0.954169333333333">
Distribution of error rates in documents (passed/rejected) by the filter F3 for threshold µ = 5
(English test corpus). The left (right) diagram describes the distribution of documents passed
(rejected) by the filter. The average error rate for accepted (rejected) documents is 1.08 (16.81).
</bodyText>
<listItem confidence="0.975214428571429">
• The class Junk contains documents where the language is “polluted,” for
example, by large lists of erroneous keywords, lists of foreign language
expressions, dominating subparts only consisting of program code, archaic
language, and so forth.
• The class Other contains all other documents. In practice we tried to assign
to each document one of the above four classes, and most documents in
the class Other are (almost) empty files.
</listItem>
<bodyText confidence="0.99961725">
Even with this small number of classes, separation issues were sometimes difficult to
address. We did not introduce finer subclasses since we expected that the number of
ambiguous and problematic cases would be multiplied.
Our experiments on document genre were restricted to English corpora. We looked
at the primary general English HTML corpus and on the English corpora for the
domains Fish, Mushrooms, and Neurology. For each of the latter three domains, both
the corpus obtained with the simple crawling strategy and the corpus retrieved with the
refined crawl were taken into account. Hence, a total of 7 corpora were investigated.
</bodyText>
<subsectionHeader confidence="0.984358">
8.1 Genre Distribution of the Four Quality Classes
</subsectionHeader>
<bodyText confidence="0.999801">
For each corpus, all documents in the classes Worst and Bad were manually classi-
fied, assigning one of the classes Prof, Priv, Chat, Junk, or Other to the document.
From the classes Good and Best, 100 documents were randomly selected and clas-
sified in the same way. Table 24 presents the classification results for the primary
English general HTML corpus. Not surprisingly, classes Chat and Junk dominate at
the bad end of the quality spectrum, whereas class Prof dominates for good doc-
uments. The same tendency was found for all corpora, although the percentage of
Prof documents in distinct quality classes was often larger. To add one further typical
example, Table 25 presents the result for the corpus Fish E (1) retrieved with the simple
crawling strategy. Note that even for the Bad class, 50.62% of the documents are of
type Prof.
</bodyText>
<page confidence="0.998305">
324
</page>
<note confidence="0.947791">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<figureCaption confidence="0.964103">
Figure 14
</figureCaption>
<bodyText confidence="0.998946384615385">
Distribution of error rates for arbitrary orthographic errors in the 6 English HTML corpora:
Fish E (1) and Fish E (2) (upper diagrams), Mushrooms E (1) and Mushrooms E (2) (middle), and
Neurology E (1) and Neurology E (2) (bottom diagrams). Letters (1) (diagrams on the left-hand
side) refer to corpora retrieved with the simple crawling strategy. Letters (2) (diagrams on the
right-hand side) stand for the refined crawling strategy. From the refined crawl (right-hand
sides) a large number of documents without any error hit is obtained. Corpora crawled with the
refined strategy typically contain a large number of short documents (cf. Sections 2.2 and 7.3),
and short documents of good quality often have an error rate 0. A comparison along the vertical
dimension illuminates differences between the three thematic areas: corpora Fish E contain more
errors than corpora Mushrooms E, which contain more errors than the corpora Neurology E.
Mean error rates are 7.08/3.39 [Fish E (1)/Fish E (2)]; 4.10/2.58 [Mushrooms E (1)/Mushrooms E
(2)]; and 2.05/1.77 [Neurology E (1)/Neurology E (2)]. In the diagrams, some documents with
high error rates are omitted to simplify scaling.
</bodyText>
<page confidence="0.994415">
325
</page>
<figure confidence="0.818121">
Computational Linguistics Volume 32, Number 3
</figure>
<figureCaption confidence="0.979511">
Figure 15
</figureCaption>
<bodyText confidence="0.983710818181818">
Distribution of error rates for spelling errors in the 6 German HTML corpora: Fish G (1) and Fish
G (2) (upper diagrams), Mushrooms G (1) and Mushrooms G (2) (middle), and Neurology G (1)
and Neurology G (2) (bottom diagrams). Letters (1) (diagrams on the left-hand side) refer to
corpora retrieved with the simple crawling strategy. Letters (2) (diagrams on the right-hand
side) stand for the refined crawling strategy. The latter strategy leads to a large number of
short documents without any hits in the error dictionaries. See the discussion in Section 7.3.
Similarly as for English HTML, corpora Fish G contain more errors than corpora Mushrooms G,
which contain more errors than the corpora Neurology G. Mean error rates are 1.35/1.00
[Fish G (1)/Fish G (2)]; 0.78/0.76 [Mushrooms G (1)/Mushrooms G (2)]; and 0.51/0.47
[Neurology G (1)/Neurology G (2)]. In the diagrams, some documents with high error rates
are omitted to simplify scaling.
</bodyText>
<page confidence="0.998366">
326
</page>
<note confidence="0.952146">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<tableCaption confidence="0.993907">
Table 24
</tableCaption>
<table confidence="0.912785428571429">
Genre distribution of the four quality classes for the primary general English HTML corpus.
English HTML (1) Worst (%) Bad (%) Good (%) Best (%)
Chat 42.31 56.41 24.00 1.00
Junk 38.46 5.13 1.00 0.00
Priv 3.85 10.26 14.00 9.00
Prof 15.38 28.20 61.00 90.00
Other 0.00 0.00 0.00 0.00
</table>
<tableCaption confidence="0.731257">
Table 25
Genre distribution of the four quality classes for the corpus Fish E (1).
</tableCaption>
<table confidence="0.9990835">
Fish E (1) Worst (%) Bad (%) Good (%) Best (%)
Chat 37.39 20.99 4.00 3.00
Junk 26.09 6.17 0.00 6.00
Priv 8.70 22.22 9.00 3.00
Prof 27.82 50.62 84.00 84.00
Other 0.00 0.00 3.00 4.00
</table>
<subsectionHeader confidence="0.935879">
8.2 Genre Distribution: Simple Crawl versus Refined Crawl
</subsectionHeader>
<bodyText confidence="0.999832888888889">
The analysis of genres presented in Table 26 illuminates an important difference be-
tween the thematic corpora retrieved with the simple and the refined crawling strategy:
In the latter corpora, the percentage of documents of type Chat and Junk is lower;
differences are significant. At the same time, corpora retrieved with the refined strategy
contain more documents of type Prof. We conjecture that the open compounds that
were used in the queries for the refined crawl (cf. Section 2.2) represent a kind of “high-
level language expressions” that are typically used in a professional or scientific context.
With the above background, it is not surprising that the refined crawling strategy leads
to better error rates.
</bodyText>
<table confidence="0.489842">
8.3 Error Rates for Genres
</table>
<tableCaption confidence="0.718438666666667">
Table 27 presents estimates for the mean error rates obtained for the distinct document
genres in the seven corpora. These numbers represent estimates since not all documents
Table 26
Composition of corpora retrieved with the simple (1) and the refined (2) crawling strategies. The
refined strategy (2) helps to avoid documents of type Chat and Junk, attracting documents of
type Prof at the same time.
</tableCaption>
<table confidence="0.913504666666667">
Crawls Fish E Fish E Mushr. E Mushr. E Neur. E Neur. E
(1) (%) (2) (%) (1) (%) (2) (%) (1) (%) (2) (%)
Chat 13.86 2.69 8.63 3.52 3.87 2.87
Junk 9.10 0.88 5.40 3.15 2.97 0.11
Priv 8.79 16.13 12.70 11.96 7.49 2.44
Prof 66.03 80.30 73.27 80.01 82.83 94.58
Other 2.22 0.00 0.00 1.36 2.84 0.00
327
Computational Linguistics Volume 32, Number 3
</table>
<tableCaption confidence="0.98382">
Table 27
</tableCaption>
<table confidence="0.992197857142857">
Mean error rates (estimates) for distinct document genres in seven corpora.
Crawls English Fish E Fish E Mushr. E Mushr. E Neur. E Neur. E
HTML (1) (1) (2) (1) (2) (1) (2)
Chat 6.90 13.05 14.29 10.71 6.27 4.94 11.22
Junk 27.31 23.61 59.05 12.37 16.00 4.59 3.15
Priv 2.82 7.85 3.16 3.34 3.37 3.79 5.89
Prof 1.26 3.68 2.04 2.94 1.20 1.67 1.31
</table>
<bodyText confidence="0.999589857142857">
of the classes Good and Best were classified. In all corpora, the mean error rate for class
Prof is better than the rate for class Priv, which is better than the rate for class Chat.
The results indicate that the error rate of a document might be an interesting feature
for genre classification: High error rates typically point to documents of the genres Junk
and Chat; excellent error rates typically point to documents of type Prof. Results for
the Neurology corpora indicate that “scientific Chat/Junk” may come with low error
rates.
</bodyText>
<subsectionHeader confidence="0.992093">
8.4 Summary So Far
</subsectionHeader>
<bodyText confidence="0.99998575">
An obvious correlation exists between the genre of a document and its error rate. Error
rates might be used as one feature for genre classification. The analysis of genres helps
one to understand the differences between corpora retrieved with distinct crawling
strategies and the error rates observed in the corpora.
</bodyText>
<sectionHeader confidence="0.996439" genericHeader="method">
9. Filtering Methods
</sectionHeader>
<bodyText confidence="0.999974875">
The figures seen in the previous sections show that corpora collected from the Web
typically contain a non-negligible number of documents with an unacceptable number
of orthographic errors. We now turn to the question of how to use error dictionaries for
recognizing and filtering Web pages with a high percentage of errors, thus excluding
them from the corpus construction process. The question of what should be considered
as a “high percentage” has to be answered for each application. Generally speaking we
would like to exclude at least those documents that are found at the right end of the
diagrams presented in the previous sections.
</bodyText>
<subsectionHeader confidence="0.529842">
Definition
</subsectionHeader>
<bodyText confidence="0.999960666666667">
By a filter, we mean a pair J7 = (D, p) consisting of an error dictionary, D, and a
filter threshold, p. The filter rejects a text document (Web page) T iff the average
number of entries of D that are found among 1,000 tokens of T exceeds p.
As a matter of fact, we may use the maximal error dictionaries for filtering. For
some applications, small error dictionaries, which occupy less space and are easier
to handle, may be advantageous. The results presented below show that when one
uses a more rigid filter threshold p, the filtering effect achieved with “small” error
dictionaries is very similar to the effect when using the maximal error dictionaries.
With an obvious interpolation, this observation supports the assumption that the
</bodyText>
<page confidence="0.996484">
328
</page>
<note confidence="0.910699">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<bodyText confidence="0.995694">
incompleteness of our maximal error dictionaries does not seriously reduce their fil-
tering capacities.
</bodyText>
<subsectionHeader confidence="0.99849">
9.1 Distribution of Error Frequencies
</subsectionHeader>
<bodyText confidence="0.999992416666667">
Since error dictionaries are necessarily incomplete in the sense that not all possible
errors can be covered, it is natural to ask if filters of the above-mentioned form
can work. We shall see below that even filters with small error dictionaries are use-
ful. The reason is that the frequency of orthographic errors in the Web follows a
Zipf-like7 distribution. Since a relatively small number of erroneous tokens already
covers a substantial number of all error occurrences, it should not be surprising that
even small error dictionaries help to identify pages with many errors. In Figure 12, we
show the logarithmic frequencies of errors in a 1.4-terabyte subcorpus retrieved from the
Web in 1999 (“Web-in-a-box”). The upper diagram shows the distribution of all errors
from the maximal English error dictionary, Derr(English,all), in English Web pages. Only
errors with at least two occurrences are covered. Similarly the lower diagram shows the
distribution of errors from Derr(German,all) in German Web pages.
</bodyText>
<subsectionHeader confidence="0.999393">
9.2 Basic Filter Scenario
</subsectionHeader>
<bodyText confidence="0.999959846153846">
Suppose we are given a collection of Web pages, C. We may fix a user-defined threshold
µ in terms of the average number of errors per 1,000 tokens that we are willing to accept
in a document to be added to our corpus. A document where the average number of
errors per 1,000 tokens does not exceed µ is called acceptable, other documents are
called unacceptable. In practice, since we cannot count real errors, a token is considered
erroneous if and only if it occurs in one of our error dictionaries. In Section 5, we have
seen that the number of entries of the error dictionary found in a text yields a lower
approximation for the real number of errors.
In terms of information retrieval, acceptable documents can be considered as rele-
vant documents that we would like to retrieve for “query” µ. To extend this analogy,
we define the answer set of a filter J7 w.r.t. C as the set of all documents in C that are
passed by J7. With these notions we may now define the parameters’ precision and
recall.
</bodyText>
<subsectionHeader confidence="0.632205">
Definition
</subsectionHeader>
<bodyText confidence="0.999926777777778">
Let µ,C, and J7 as above. The precision of J7 with respect to µ and C is the
percentage of acceptable documents in the answer set of J7. The recall of J7 with
respect to µ and C is the number of acceptable documents in the answer set of J7
divided by the number of all acceptable documents in C.
In the remainder of the section, we define and evaluate filters for the English and
German general HTML corpora, which are denoted CE and CG, respectively. We consider
three user-defined thresholds: µ = 10, µ = 5, and µ = 1. The first bound is meant to
exclude a small number of documents with an extraordinary number of orthographic
errors. The second bound is more ambitious. The third bound might be used in
</bodyText>
<footnote confidence="0.9749385">
7 Zipf’s law describes the frequency of words in large corpora. It states that the i-th most frequent word
appears as many times as the most frequent one divided by iθ, for some constant θ ≥ 1.
</footnote>
<page confidence="0.992935">
329
</page>
<note confidence="0.597461">
Computational Linguistics Volume 32, Number 3
</note>
<bodyText confidence="0.991029">
situations where high accuracy is needed and we want to retrieve only documents with
a negligible number of orthographic errors.
</bodyText>
<subsectionHeader confidence="0.992447">
9.3 Automated Filter Construction
</subsectionHeader>
<bodyText confidence="0.998581">
We define a hierarchy of filters
</bodyText>
<equation confidence="0.955876">
J71 = (D1, ρ1), J72 = (D2, ρ2),J73 = (D3, ρ3),.. .
</equation>
<bodyText confidence="0.9989245">
Filters J7k with higher index k generally lead to better results. On the negative side, they
are more complex in terms of the number of entries of Dk. In the following description
we generally assume that a user-defined threshold p has been fixed. For simplicity, we
refer to the construction of filters for the English corpus, CE. The same construction was
used, mutatis mutandis, for CG. All filters are computed automatically on the basis of
training data. For training, two inputs were used.
</bodyText>
<listItem confidence="0.9379623">
1. Ranked error list. We computed a list of all entries of the maximal English
error dictionary, Derr(English,all), that occur at least twice in the corpus
Web-in-a-box (cf. Section 9.1). The list was ordered by descending
frequency of occurrence, as in Figure 12. The resulting ranked error list
contains 1,175,894 entries.
2. 2. Training corpus. The corpus CE was randomly split into a training
subcorpus (427 documents) and a test subcorpus (407 documents).8
From the training corpus, all documents were excluded that did not
contain at least five distinct errors from the ranked error list, leaving
384 documents.
</listItem>
<bodyText confidence="0.996889916666667">
Definition of Filters. The error dictionary Dk for filter J7k was defined as the minimal
initial segment S of the ranked error list such that each unacceptable document in the
training corpus contains at least k distinct entries of the segment S. The threshold ρk
was defined as the minimal average number of occurrences of entries of Dk per 1,000
tokens in an unacceptable document of the training corpus. These entries need not
be distinct.
Clearly, with the given threshold we achieve a precision of 100% on the training
corpus. The philosophy behind this selection of a threshold is simple: We do not want
to add any unacceptable document to the corpus to be built. Precision is much more
important than recall, as long as a substantial number of documents is retrieved. As
a matter of fact, we cannot expect a 100% precision on the test corpus. However, our
results show that the loss of precision is not significant.
</bodyText>
<subsectionHeader confidence="0.999224">
9.4 Filtering Results for English General HTML Corpus
</subsectionHeader>
<bodyText confidence="0.85661625">
In what follows we consider the three user-defined thresholds p = 10, p = 5, and p = 1.
For each of the filters J71 = (D1, ρ1), . . . , J75 = (D5, ρ5), as defined earlier, Table 28 shows
8 The distinct sizes of both corpora seem to indicate that the random selection was not perfectly balanced.
We ignored this problem, which does not influence the construction.
</bodyText>
<page confidence="0.996185">
330
</page>
<note confidence="0.963886">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<tableCaption confidence="0.995016">
Table 28
</tableCaption>
<table confidence="0.950147111111111">
Evaluation of filters -Tk, 1 &lt; k &lt; 5, for English general HTML corpus, user-defined threshold
µ = 10 (top), µ = 5 (middle), and µ = 1 (bottom).
|Dk |Pk PTrain (%) RTrain (%) PTest (%) RTest (%)
1 12,217 0.91 100.00 85.42 99.67 80.00
2 21,037 1.83 100.00 89.79 99.69 84.73
3 46,111 2.19 100.00 91.83 99.40 87.63
4 110,201 4.63 100.00 93.87 99.71 91.31
5 291,309 5.62 100.00 93.00 99.70 89.21
1 34,322 1.23 100.00 87.42 99.34 86.00
2 47,747 2.19 100.00 95.70 98.50 94.00
3 90,160 3.53 100.00 98.77 97.47 97.42
4 110,201 3.71 100.00 98.77 97.70 97.42
5 291,309 4.83 100.00 100.00 96.15 100.00
1 37,994 0.13 100.00 51.15 93.43 55.89
2 169,507 0.49 100.00 78.35 96.75 78.16
3 279,543 0.63 100.00 86.14 97.02 85.58
4 299,397 0.67 100.00 90.90 97.10 87.77
5 580,330 0.89 100.00 97.40 96.06 96.91
</table>
<equation confidence="0.994269888888889">
µ = 10
k =
k =
k =
k =
k =
µ = 5
k =
k =
k =
k =
k =
µ = 1
k =
k =
k =
k =
k =
</equation>
<bodyText confidence="0.9686554">
the size of the filter dictionary Dk (second column), the filter threshold Pk (third column),
and the precision and recall values achieved with the filter on the training and test
corpora (columns 4, 5, 6, 7).
Baselines. When treating the complete test corpus as a “naive” answer set (recall 100%),
we obtain
</bodyText>
<listItem confidence="0.999554666666667">
1. for µ = 10, a precision of 94.76%, corresponding to 380 acceptable and 21
unacceptable documents,
2. for µ = 5, a precision of 87.28%, corresponding to 350 acceptable and 51
unacceptable documents.
3. for µ = 1, a precision of 57.10%, corresponding to 229 acceptable and 172
unacceptable documents.
</listItem>
<bodyText confidence="0.99968625">
For µ = 10, with a precision (recall) of 99.40% (87.63%) on the test corpus, the filter
-T3 represents a good compromise between size and quality. Precision is almost optimal.
The answer set for the filter contains only one unacceptable document with an error rate
of 13.24, which is very close to the threshold.
For µ = 5, using the filter -T3 we obtain a precision (recall) of 97.47% (97.42%). An
inspection of the nine unacceptable documents in the answer set of the filter shows that
they come very close to the bound µ = 5. Note that error dictionaries D1, D2, and D3
are larger than the corresponding dictionaries for the threshold k = 10 due to the larger
number of unacceptable documents in the training corpus.
For µ = 1, using the filter -T3 we obtain a precision (recall) of 97.02% (85.58%). There
are six unacceptable documents in the answer set, all with an error rate below 2. The
numbers in Table 28 show how a more rigid (smaller) filter threshold compensates for
</bodyText>
<page confidence="0.994215">
331
</page>
<note confidence="0.557094">
Computational Linguistics Volume 32, Number 3
</note>
<bodyText confidence="0.95125575">
the reduced size of error dictionaries essentially without sacrificing precision and with
a modest loss of recall. To illustrate the effect of filtering, yet from another perspective,
Figure 13 presents the distribution of error rates (number of entries from the maximal
English error dictionary Derr(English,all) per 1,000 tokens) in the answer set and in the
set of documents rejected by the filter J73 constructed for the user-defined threshold µ =
5. The filter was evaluated on the test subcorpus. The figure shows that almost all docu-
ments passed (rejected) by the filter have an error frequency below (beyond) 5 errors per
1,000 tokens.
</bodyText>
<subsectionHeader confidence="0.999233">
9.5 Filtering Results for the German General HTML Corpus
</subsectionHeader>
<bodyText confidence="0.999992076923077">
For computing the ranked error list, a list with the frequencies of 18, 624, 436 tokens in
German Web pages was used. Via intersection with the list of all entries of the maximal
German error dictionary, Derr(German,all), we obtained a ranked error list with 454,709
entries. The training and test corpora contain 314 and 308 documents, respectively, from
the German general HTML corpus. Since the results are similar to the English case,
we only point to some differences. Frequencies decrease more rapidly in the German
ranked error list, as may be seen in Figure 12. In the German list, the top-ranked part is
dominated by e/c-transformation errors and errors where the letter ß is replaced by ss.
The 10 top-ranked entries and their frequencies are shown in Table 29. This special class
of frequent errors leads to small filter dictionaries. For example, the filter dictionary for
µ = 10,k = 5 has 16,277 entries, and the dictionary for µ = 5,k = 5 has 127,023 entries.
On the other hand, the recall values achieved with the dictionaries in general are lower
than in the English case.
</bodyText>
<sectionHeader confidence="0.607772" genericHeader="method">
10. Example Applications
</sectionHeader>
<bodyText confidence="0.955635733333333">
Obviously, the methods described above are very useful for all corpus tools that visually
present linguistic data from Web pages (words, n-grams, concordances, phrases, sen-
tences, aligned bilingual material, etc.) to the user. Filters help to exclude inappropriate
pages. In the remaining data, tokens that represent entries of the error dictionaries can
be marked. Depending on the application, the system may then decide to suppress this
material or to add a warning when presenting it. In the remainder of this section, two
case studies are presented that demonstrate the usefulness of filtering techniques and
error dictionaries in distinct applications.
10.1 Text Correction with Crawled Dictionaries
It has often been observed that fixed handcrafted dictionaries only have a modest
coverage when applied to new texts and corpora.9 Still, for various text processing tasks,
dictionaries with high coverage are needed. The generation of crawled dictionaries that
collect the vocabulary of appropriate Web pages is one way to obtain a better coverage.
As a matter of fact, the quality of these dictionaries suffers from orthographic errors in
the analyzed pages. Using the above filters helps to reduce the number of errors that are
</bodyText>
<footnote confidence="0.97762775">
9 Kukich (1992) describes an experiment by Walker and Amsler (1986): “Nearly two thirds (61%) of the
words in the Merriam-Webster Seventh Collegiate Dictionary did not appear in an eight million word corpus
of New York Times news wire text, and, conversely, almost two-thirds (64%) of the words in the text were
not in the dictionary.”
</footnote>
<page confidence="0.983613">
332
</page>
<note confidence="0.964184">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<tableCaption confidence="0.994519">
Table 29
</tableCaption>
<table confidence="0.933969666666667">
Top-ranked errors in German ranked error list and their frequencies.
Entry of error list Correct word Error frequency
Universitaet Universit¨at 131,494
grossen großen 107,904
koennen k¨onnen 107,730
knnen k¨onnen (kennen?) 87,167
heisst heißt 76,667
andern ¨andern (anderen?) 73,972
Gruss Gruß 51,721
ausser außer 42,410
waere w¨are 37,071
muessen m¨ussen 35,864
</table>
<bodyText confidence="0.98439175">
imported. In order to further improve a crawled dictionary, we may either eliminate all
words that represent entries of the error dictionaries, or we may mark these words for
a manual inspection. In what follows we report on an experiment in the area of lexical
text correction where these techniques improved:
</bodyText>
<listItem confidence="0.997148666666667">
1. the quality of crawled dictionaries by avoiding erroneous entries,
2. the accuracy of lexical text correction achieved with these dictionaries,
using a high-level text correction system (Strohmaier et al. 2003a, 2003b).
</listItem>
<bodyText confidence="0.99924935">
Correction Strategy. Ignoring details, we used the following correction strategy10: For
each token11 of the input text, the most similar words are retrieved from the dictionary
as a set of correction candidates. In many cases the token will be found in the dictionary
and represents a correction candidate with optimal similarity. Based on (1) the similarity
between text token and correction candidate and (2) the frequency of the correction
candidate in a corpus, each candidate receives a score. If the score of the best candidate
exceeds a given threshold τ, the token is replaced by this candidate. In the other case, the
token is left unmodified. A good balance between similarity and frequency information
in the score is obtained via training. The threshold, which is also optimized via training,
guarantees that the input token is only replaced if additional confidence is available
that the best correction candidate in fact represents the corrected version of the token.
In the experiment described below, the system was trained on a corpus for the domain
Mushrooms. The evaluation corpus is from the domain Fish. Hence, the two corpora
are disjoint and cover distinct thematic areas. More details on the correction system can
be found in Strohmaier et al. (2003b).
Garbled Input Text for Correction. We collected 10 texts from the domain Fish, all
containing a nontrivial number of errors. Texts were retrieved from the Web, using
queries to Google with spelling errors, such as fish anglers infomation realy. We checked
that the texts do not contain paragraphs that are also found in the documents of the
corpora Fish E introduced in Section 2.2. The concatenation of the 10 texts was used as
</bodyText>
<page confidence="0.805967333333333">
10 To simplify evaluation, a fully automated variant of text correction was considered.
11 In what follows, by a token, we always mean a token composed of standard letters only.
333
</page>
<note confidence="0.571723">
Computational Linguistics Volume 32, Number 3
</note>
<bodyText confidence="0.999249727272727">
input to the text correction system. For the evaluation, a corrected version of the full text
was manually created. The full text contains 17,697 tokens of which 418 (2.36%) were
found to be erroneous.
Background Dictionaries for Correction. As a baseline, a first crawled dictionary
Dcrawl with 505,652 entries was built, collecting all words from the documents in the
corpus Fish E (1). A second dictionary D+F
crawl used only those pages that were not
rejected by the filter for threshold µ = 2, based on the maximal English error dic-
tionary Derr(English,all).12 In this case, 324 documents passed the filter, whereas 186
were rejected. In this case we obtained 291,065 entries. Deleting in D+Fcrawl all words that
represent entries of Derr(English,all), a third dictionary D+F+ED
</bodyText>
<figure confidence="0.410797416666667">
crawl with 269,079 entries was
computed.
Note that we did not extend D+F
crawl and D+F+ED
crawl by analyzing an additional set of
filtered Web pages. Hence, D+F
crawl is in fact a subdictionary of Dcrawl, and similarly for
D+F+ED
crawl and D+F
crawl. This explains why the coverage of D+F
crawl (D+F+ED
crawl ) is smaller than
</figure>
<figureCaption confidence="0.191482">
the coverage of Dcrawl (D+F
</figureCaption>
<bodyText confidence="0.99683132">
crawl); see below. With an extended filtered crawl, even better
coverage and accuracy results would probably be possible.
Evaluation Results. We then compared the lexical coverage (percentage of tokens of
the correct version of the input text found in the dictionary) and correction accuracy
(percentage of correct tokens after automated correction) for each of the three dictio-
naries. The results are presented in Table 30. The accuracy of the input text is 97.64%.
The fifth column gives the improvement in accuracy, taking the input text as a baseline.
The last column mentions the number of erroneous tokens in the text that are found in
the respective error dictionary.
Note that the use of the filtered corpus leads to a measurable improvement in
correction accuracy. The second step in which we eliminate all entries of the error
dictionaries in the correction dictionary leads to an additional gain.
Overproduction and Underproduction of the Error Dictionary. As mentioned above,
418 tokens of the input text represented proper errors. From these, 254 (60.77%) turned
out to be entries of the maximal English error dictionary Derr(English,all). Note that
this value for underproduction is very compatible with our estimates in Section 5.
Remarkably, only seven of the correct tokens of the input text occurred in the error
dictionary.
Analyzing the Effect of Using Filters and Error Dictionaries. The most important error
source in the correction process are erroneous tokens of the text that—by accident—
represent entries of the crawled dictionaries. Using the above strategy, these false
friends are only replaced by another word w of the correction dictionary if overwhelm-
ing frequency information is available that leads to a preference of w after computing
the balanced score for similarity and frequency. The dictionary Dcrawl contains 262 of the
418 erroneous tokens of the text. The dictionary D+F , which collects the vocabulary
</bodyText>
<subsubsectionHeader confidence="0.487818">
crawl
</subsubsectionHeader>
<bodyText confidence="0.9997565">
of filtered pages, contains only 92 erroneous tokens. After eliminating all entries of the
maximal error dictionary, the new dictionary D+F+ED contains only 49 false friends.
</bodyText>
<subsubsectionHeader confidence="0.486033">
crawl
</subsubsectionHeader>
<bodyText confidence="0.992588">
Note that the latter tokens represent errors not contained in the error dictionary. A
very interesting additional number is the following: when eliminating in Dcrawl all
</bodyText>
<note confidence="0.289281">
12 Other filter thresholds for µ = 1, 0.5, and 0 were also tested and led to very similar accuracy values.
</note>
<page confidence="0.994766">
334
</page>
<note confidence="0.962026">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<tableCaption confidence="0.995746">
Table 30
</tableCaption>
<table confidence="0.9843901">
Measuring the quality of distinct dictionaries for text correction. Dcrawl is produced by an
unfiltered crawl, D+Fwl by a filtered crawl. For D+ ED, a filtered crawl is used and remaining
craawl
entries of error dictionaries are eliminated.
Dictionary Entries Coverage (%) Accuracy (%) ± (%) False friends
Dcrawl 505,652 99.08 98.45 0.81 262
D+Fwl 291,065 98.77 98.61 0.97 92
cra 269,079 98.75 98.74 1.10 49
D+F+ED
crawl
</table>
<bodyText confidence="0.985181">
the entries that are found in Derr(English,all), the resulting dictionary contains 105
erroneous tokens of the text. This shows that the filtering step eliminates 56 (= 105 − 49)
erroneous tokens of the text that are not found in the error dictionary and proves that
a two-step procedure—first using filters for crawling pages, then eliminating entries of
error dictionaries afterwards—leads to optimal results.
</bodyText>
<subsectionHeader confidence="0.516981">
10.2 Generating Translation Data from Parallel Corpora
</subsectionHeader>
<bodyText confidence="0.9999948">
Parallel texts represent an important resource for automatic acquisition of bilingual
dictionaries. Since only a small number of large parallel corpora are available, which
are moreover specialized both with respect to form and contents, the Web represents
an important archive for mining parallel texts (Resnik and Smith 2003). When building
up bilingual dictionaries for machine translation, or when presenting parallel phrases
to users, correctness is an important issue. Hence, it is interesting to see how error
dictionaries help to reduce errors in parallel corpora. Our methods can be applied to
any kind of parallel corpus. For our experiments we used the freely available Europarl
corpus.13 The corpus covers the proceedings of the European Parliament 1996–2001 in
11 official languages of the European Union. We only analyzed the English and German
versions of the parallel texts. The 488 documents in the corpus are of an excellent quality.
Our goal was to find English and German texts with a nontrivial number of errors (if
any) and to detect these errors. Since the overproduction of error dictionaries in very
accurate texts is high, the problem is challenging. The maximal error dictionaries for
the two languages were used to determine the error rate of each document. Table 31
shows the twenty documents with the highest error rates for both the English and the
German subcollection of the corpora. Columns 4 and 5 describe the number of tokens
that represent entries of the respective error dictionary and the number of real errors
among these hits. The results show that when analyzing very accurate texts, the error
rate is not always a safe indicator for a corresponding number of real errors. Still, the
experiment isolates 246 real errors, only looking at 40 documents. When collecting
translation correspondences, we may simply discard all phrases/sentences with a hit
in an error dictionary, together with their aligned counterparts. Many translation pairs
with errors will be avoided. Given the length of the documents, the number of hits of
the error dictionaries is small, hence the loss of recall is not essential. In this way our
</bodyText>
<footnote confidence="0.457989">
13 The corpus, which was also used by Koehn, Och, and Marcu (2003), is available at
http://www.isi.edu/˜koehn/europarl/.
</footnote>
<page confidence="0.993158">
335
</page>
<note confidence="0.456349">
Computational Linguistics Volume 32, Number 3
</note>
<tableCaption confidence="0.991371">
Table 31
</tableCaption>
<table confidence="0.958551636363637">
English (E) and German (G) documents of the Europarl corpora, sizes, error rates w.r.t. maximal
English and German error dictionaries, numbers of hits of the error dictionaries, and numbers of
real errors among hits.
Documents Tokens Error rate Hits Real errors Percentage
09-20.txt (E) 9,945 1.31 13 2 15.38
04-24.txt(E) 8,074 0.99 8 8 100.00
09-19.txt (E) 3,230 0.93 3 0 0.00
02-21.txt(E) 5,830 0.86 5 5 100.00
01-28.txt (E) 5,347 0.75 4 0 0.00
06-25.txt(E) 20,012 0.70 14 11 78.57
07-19.txt (E) 4,383 0.68 3 3 100.00
04-23.txt(E) 21,930 0.64 14 14 100.00
12-04.txt(E) 9,463 0.63 6 6 100.00
02-12.txt(E) 5,426 0.55 3 3 100.00
03-29.txt(E) 22,252 0.54 12 12 100.00
07-17.txt (E) 34,381 0.52 18 14 77.77
03-10.txt(E) 31,509 0.51 16 0 0.00
11-15.txt(E) 35,167 0.48 17 1 5.88
04-10.txt(E) 16,653 0.48 8 6 75.00
05-15.txt(E) 20,942 0.48 10 2 20.00
10-20.txt(E) 8,601 0.46 4 4 100.00
04-11.txt (E) 6,857 0.44 3 1 33.33
01-15.txt (E) 9,193 0.43 4 0 0.00
06-18.txt(E) 32,768 0.43 14 6 42.86
01-13.txt (G) 15,926 2.57 41 2 4.89
05-16.txt (G) 12,344 1.94 24 15 62.50
09-02.txt (G) 14,845 1.62 24 1 4.16
11-05.txt (G) 15,035 1.46 22 3 13.64
01-28.txt (G) 6,798 1.32 9 0 0.00
04-25.txt (G) 10,842 1.29 14 4 28.57
10-02.txt (G) 13,650 1.25 17 9 52.94
07-20.txt (G) 2,431 1.23 3 0 0.00
03-15.txt (G) 34,904 1.20 42 31 73.81
06-21.txt (G) 8,474 1.18 10 9 90.00
06-17.txt (G) 9,408 1.17 11 2 18.18
04-16.txt (G) 8,667 1.15 10 9 90.00
04-19.txt (G) 8,694 1.15 10 2 20.00
12-15.txt (G) 6,964 1.15 8 3 37.50
09-08.txt (G) 4,374 1.14 5 0 0.00
07-04.txt (G) 10,975 1.09 12 11 91.66
04-05.txt (G) 26,941 1.08 29 20 68.96
06-09.txt (G) 11,152 1.08 12 12 100.00
07-14.txt (G) 11,180 1.07 12 5 41.66
07-18.txt (G) 10,392 1.06 11 10 90.90
</table>
<bodyText confidence="0.7961135">
methods may help to improve the generation of translation data even from collections
of very accurate parallel texts.
</bodyText>
<sectionHeader confidence="0.931808" genericHeader="conclusions">
11. Conclusion
</sectionHeader>
<bodyText confidence="0.988494">
In this article we investigated the distribution of orthographic errors of distinct types in
the English and German Web. Experiments based on a variety of very large error dic-
tionaries showed that Web corpora typically contain a non-negligible number of pages
</bodyText>
<figure confidence="0.99957595">
ep-96-
ep-97-
ep-97-
ep-97-
ep-99-
ep-97-
ep-96-
ep-97-
ep-97-
ep-99-
ep-00-
ep-96-
ep-99-
ep-00-
ep-97-
ep-97-
ep-97-
ep-97-
ep-99-
ep-96-
ep-03-
ep-97-
ep-02-
ep-98-
ep-99-
ep-02-
ep-97-
ep-99-
ep-00-
ep-96-
ep-96-
ep-99-
ep-96-
ep-00-
ep-00-
ep-96-
ep-01-
ep-97-
ep-97-
ep-97-
</figure>
<page confidence="0.996076">
336
</page>
<note confidence="0.894555">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<bodyText confidence="0.99995648">
with an unacceptable number of orthographic errors. Typing errors represent the most
important subclass. In German Web pages, errors resulting from character encoding
problems represent another important category. In our experiments, PDF documents
were found to contain less orthographic errors than HTML documents, and corpora
covering specific thematic areas were found to contain more errors than collections of
“general” pages without such a focus. Some differences were remarkable; in particular,
our corpora for special thematic areas related to hobbies contain many pages with a
high number of orthographic errors. We also found that mean error rates are influenced
by the collection strategy. Specific crawling strategies help to avoid chat and junk while
attracting professional documents. Since document genre and error rates are correlated,
refined crawling strategies may help to reduce mean error rates.
Error dictionaries, even subdictionaries of modest size, can be used as filters that
help to detect and eliminate pages with many orthographic errors. Filters with user-
defined thresholds work well for both languages. Obviously, the possibility of deleting
pages with many orthographic errors and of marking all entries of error dictionaries
in the remaining documents opens a wide range of interesting applications in distinct
areas of corpus linguistics. To exemplify possible applications we showed how to im-
prove the quality of Web-crawled dictionaries for text correction. With these filtered dic-
tionaries, higher values for correction accuracy were obtained than with those directly
obtained from Web crawls. In a second experiment, we showed how error dictionar-
ies may be used to improve the automated collection of translation correspondences,
avoiding translation pairs with orthographic errors.
Going beyond corpus linguistics, it might be interesting to design (special modes of)
Web search engines where the error rate of a given document is used as one parameter
in the ranking of answers. In many search scenarios, answer documents with a large
number of orthographic errors appear to be less reliable, and the user might wish to
concentrate on “professional” or carefully edited Web pages.
In our practical work we found that the collection and analysis of very large Web
corpora is difficult for many reasons. For example, it is not clear how to treat pages
with artificial vocabulary that is only introduced to obtain a better ranking. We learned
that often these junk lists are intensionally enriched with many orthographic errors to
obtain a better ranking, in particular for erroneous queries. In our experiments, some
of these pages were found immediately, looking at error rates, and excluded. Later,
when inspecting documents for genre classification, other less eye-catching examples
were found. Some portions of text occurred in several documents. The conversion of
Web pages into ASCII represents a potential source for new errors. In particular the
conversion of German PDF documents to ASCII turned out to be very error prone.
Nonstandard vocabulary (special names, foreign language expressions, archaic lan-
guage, programming code, slang, etc.) is another source that makes various pages
inappropriate for corpus construction.
One step for future work is the development of special dictionaries for frequent
foreign language expressions, archaic language, programming code, and slang. Special
dictionaries for these expressions would not only help to detect and exclude pages with
a high amount of nonstandard vocabulary, but they could also be used as additional
filters in the construction of error dictionaries. The results in Section 5.2 indicate that
the overproduction of our error dictionaries could be reduced in a significant way by
eliminating entries that represent expressions of the earlier-mentioned type. As a matter
of fact, new types of spelling errors were found during the experiments described
earlier. It might be interesting to enlarge the error dictionaries for spelling errors, taking
the new patterns into account.
</bodyText>
<page confidence="0.987338">
337
</page>
<note confidence="0.569798">
Computational Linguistics Volume 32, Number 3
</note>
<bodyText confidence="0.999807833333333">
We also found that enlarged error dictionaries that store with each garbled entry
the correct word from which it was derived are very useful for error correction. In
contrast to our first intuitions, the number of ambiguities arising from this correction
strategy is small, and the predictive power of enlarged error dictionaries is high.
More details on text correction with error dictionaries will be given in a forthcoming
paper.
</bodyText>
<sectionHeader confidence="0.998112" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.997791">
The authors thank the anonymous referees of
Computational Linguistics. Their remarks and
suggestions helped to improve the contents
and presentation of the article. Special thanks
to Annette Gotscharek and Uli Reffle for all
their help.
</bodyText>
<sectionHeader confidence="0.999228" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998698901098901">
Amengual, Juan Carlos and Enrique Vidal.
1998. Efficient error-correcting viterbi
parsing. IEEE Transactions on PAMI,
20(10):1–109.
Baroni, Marco and Silvia Bernardini. 2004.
BootCaT: Bootstrapping corpora and terms
from the web. In Proceedings of LREC 2004,
pages 1313–1316, Lisbon.
Boutsis, Sotiris, Stelious Piperidis, and Iason
Demiros.1999. Generating translation
lexica from multilingual texts. Applied
Artificial Intelligence, 13(6):583–606.
Brin, Sergey and Lawrence Page. 1998. The
anatomy of a large-scale hypertextual Web
search engine. Computer Networks and
ISDN Systems, 30:107–117.
Brown, Jonathan and Maxine Eskenazi. 2004.
Retrieval of authentic documents for
reader-specific lexical practice. In
Proceedings of the InSTIL/ICALL2004
Symposium on Computer Aided Language
Learning, pages 25–28, Venice.
Chelba, Ciprian and Frederick Jelinek.
2002. Recognition performance of
a structured language model. In
Proceedings of Sixth European Conference
on Speech Communication and Technology
(EUROSPEECH’99), pages 1567–1570,
Budapest.
Church, Kenneth W. and Robert L. Mercer.
1993. Introduction to the special issue on
computational linguistics using large
corpora. Computational Linguistics,
19(1):1–24.
Dimitrova, Maya, Nicholas Kushmerick,
Petia Radeva, and Joan Jose Villanueva.
2003. User assessment of a visual Web
genre classifier. In Third International
Conference on Visualization, Imaging, and
Image Processing, Malaga.
Dunning, Ted. 1993. Accurate models for the
statistics of surprise and coincidence.
Computational Linguistics, 19(1):61–74.
Finn, Aidan and Nicholas Kushmerick. 2003.
Learning to classify documents according
to genre. In IJCAI-03 Workshop on
Computational Approaches to Text Style and
Synthesis, Acapulco. Journal of the American
Society for Information Science and
Technology (in press).
Fletcher, William H. 2004a. Facilitating the
compilation and dissemination of ad-hoc
web corpora. In Guy Aston, Silvia
Bernardini, and Dominic Stewart, editors,
Corpora and Language Learners, number 17
in Studies in Corpus Linguistics. John
Benjamins Publishing Company,
Amsterdam.
Fletcher, William H. 2004b. Making the web
more useful as a source for linguistic
corpora. In U. Connor and T. Upton,
editors, Corpus Linguistics in North America
2002. Rodopi, Amsterdam.
Gaizauskas, Robert, George Demetriou, and
Kevin Humphreys. 2000. Term recognition
in biological science journal articles. In
Proceedings of the Workshop on
Computational Terminology for Medical and
Biological Applications, 2nd International
Conference on Natural Language Processing
(NLP-2000), pages 37–44, Patras.
Gale, William A. and Kenneth W. Church.
1991. Identifying word correspondences
in parallel texts. In Proceedings of
Fourth DARPA Workshop on Speech
and Natural Language, pages 152–157,
Pacific Grove, CA.
Gartner, Hans-J¨urgen. 2003. Extraktion
von semantischer Information aus
Layout-orientierten Daten. Master’s
thesis, Technical University of Graz.
Grefenstette, Gregory. 1992. Use of syntactic
context to produce term association lists
for text retrieval. In Proceedings of the 15th
Annual International ACM SIGIR Conference
on Research and Development in Information
Retrieval, pages 89–97, Copenhagen.
Grefenstette, Gregory. 1999. The WWW as a
resource for example-based MT tasks.
Paper presented at ASLIB “Translating
and the Computer” conference, London.
</reference>
<page confidence="0.976445">
338
</page>
<note confidence="0.663642">
Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages
</note>
<reference confidence="0.99985356779661">
Grefenstette, Gregory. 2001. Very large
lexicons. In Computational Linguistics in the
Netherlands 2000: Selected Papers from the
Eleventh CLIN Meeting, Language and
Computers, Amsterdam.
Guenthner, Franz. 1996. Electronic lexica and
corpora research at CIS. International
Journal of Corpus Linguistics, 1(2):287–301.
Jelinek, Frederick. 1997. Statistical Methods
for Speech Recognition. MIT Press,
Cambridge, MA.
Kehoe, Andrew and Antoinette Renouf. 2002.
WebCorp: Applying the web to linguistics
and linguistics to the Web. In Poster
Proceedings of the 11th International World
Wide Web Conference, WWW02, Honolulu.
Kessler, Brett, Geoffrey Nunberg, and
Hinrich Sch¨utze. 1997. Automated
detection of text genre. In Proceedings of the
35th Annual Meeting of the Association for
Computational Linguistics and the 8th
Meeting of the European Chapter of the
Association for Computational Linguistics,
pages 32–38, Madrid.
Kilgarriff, Adam and Gregory Grefenstette.
2003. Introduction. Computational
Linguistics—Special Issue on the Web as
Corpus, 29(3):333–348.
Koehn, Philipp, Franz Josef Och, and Daniel
Marcu. 2003. Statistical phrase-based
translation. In Proceedings of the Human
Language Technology and North American
Association for Computational Linguistics
Conference (HLT/NAACL), Edmonton.
Kukich, Karen. 1992. Techniques for
automatically correcting words in
texts. ACM Computing Surveys,
24(4):377–439.
Kumano, Akira and Hideki Hirakawa. 1994.
Building a MT dictionary from parallel
texts based on linguistic and statistical
information. In Proceedings of the 15th
International Conference on Computational
Linguistics (COLING’94), pages 76–81,
Kyoto.
Kupiec, Julian. 1993. An algorithm for
finding noun phrase correspondences in
bilingual corpora. In Proceedings of the 31st
Annual Meeting of the Association for
Computational Linguistics (ACL’93),
pages 17–22, Columbus, OH.
Lin, Shian-Hua, Chi-Sheng Shih,
Meng Chang Chen, Jan-Ming Ho,
Ming-Tat Ko, and Yueh-Ming Huang.
1998. Extracting classification knowledge
of internet documents with mining term
associations: A semantic approach. In
Proceedings of the 21st International ACM
SIGIR Conference on Research and
Development in Information Retrieval, pages
241–249, Melbourne, Australia.
Maier-Meyer, Petra. 1995. Lexikon und
automatische Lemmatisierung. Ph.D. thesis,
CIS, University of Munich.
Morley, Barry, Antoinette Renouf, and
Andrew Kehoe. 2003. Linguistic research
with the XML/RDF aware WebCorp tool.
In Poster Proceedings of the 12th International
World Wide Web Conference, WWW03,
Budapest.
Oh, Alice H. and Alexander I. Rudickny.
2000. Stochastic language generation
for spoken dialogue systems. In
ANLP/NAACL 2000 Workshop on
Conversational Systems, pages 27–32,
Seattle.
Ostendorf, Mari, Vassilios V. Digalakis, and
Owen A. Kimball. 1996. From HMMs to
segment models: A unified view of
stochastic modeling for speech
recognition. IEEE Transactions Speech and
Audio Processing, 4(5):360–378.
Resnik, Philip and Noah A. Smith. 2003. The
web as a parallel corpus. Computational
Linguistics - Special Issue on the Web as
Corpus, 29(3):349–380.
Ringlstetter, Christoph. 2003.OCR-
Korrektur und Bestimmung von
Levenshtein-Gewichten. Master’s
thesis, LMU, University of Munich.
Schwartz, Lee, Takako Aikawa, and
Michel Pahud. 2004. Dynamic language
learning tools. In Proceedings of the
InSTIL/ICALL2004 Symposium on
Computer Aided Language Learning,
pages 107–110, Venice.
Smadja, Frank A. and Kathleen R. McKeown.
1990. Automatically extracting and
representing collocations for language
generation. In Proceedings of the 28th Annual
Meeting of the Association for Computational
Linguistics, pages 252–259, Pittsburgh, PA.
Sornlertlamvanich, Virach and Hozumi
Tanaka. 1996. The automatic extraction
of open compounds from text corpora.
In Proceedings of the 16th Conference on
Computational Linguistics, pages 1143–1146,
Copenhagen.
Strohmaier, Christian, Christoph Ringlstetter,
Klaus U. Schulz, and Stoyan Mihov. 2003a.
Lexical postcorrection of OCR-results: The
web as a dynamic secondary dictionary?
In Proceedings of the Seventh International
Conference on Document Analysis and
Recognition (ICDAR 03), pages 1133–1137,
Edinburgh.
Strohmaier, Christian, Christoph Ringlstetter,
Klaus U. Schulz, and Stoyan Mihov.
</reference>
<page confidence="0.974416">
339
</page>
<reference confidence="0.978824965517241">
Computational Linguistics Volume 32, Number 3
2003b. A visual and interactive tool for
optimizing lexical postcorrection of
OCR results. In Proceedings of the IEEE
Workshop on Document Image Analysis
and Recognition, DIAR’03, Madison, WI.
Taghva, Kazem and Jeff Gilbreth. 1999.
Recognizing acronyms and their
definitions. International Journal on
Document Analysis and Recognition,
1(4):191–198.
Walker, Donald E. and Robert A. Amsler.
1986. The use of machine-readable
dictionaries in sublanguage analysis. In
Analyzing Language in Restricted Domains:
Sublanguage Description and Processing.
Lawrence Erlbaum, Hillsdale, NJ,
pages 69–83.
Way, Andy and Nano Gough. 2003.
wEBMT: Developing and validating
an example-based machine translation
system using the world wide web.
Computational Linguistics—Special Issue
on the Web as Corpus, 29(3):421–458.
Yeates, Stuart, David Bainbridge, and
Ian H. Witten. 2000. Using compression
to identify acronyms in text. In Proceedings
of the Conference on Data Compression,
page 582, Snowbird, UT.
</reference>
<page confidence="0.998293">
340
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.818938">
<title confidence="0.961089">Orthographic Errors in Web Pages: Toward Cleaner Web Corpora</title>
<author confidence="0.897096">U Academy of Science</author>
<author confidence="0.897096">Sofia</author>
<affiliation confidence="0.98043">CIS, University of Munich</affiliation>
<abstract confidence="0.994140375">Since the Web by far represents the largest public repository of natural language texts, recent experiments, methods, and tools in the area of corpus linguistics often use the Web as a corpus. For applications where high accuracy is crucial, the problem has to be faced that a non-negligible number of orthographic and grammatical errors occur in Web documents. In this article we investigate the distribution of orthographic errors of various types in Web pages. As a by-product, methods are developed for efficiently detecting erroneous pages and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Juan Carlos Amengual</author>
<author>Enrique Vidal</author>
</authors>
<title>Efficient error-correcting viterbi parsing.</title>
<date>1998</date>
<journal>IEEE Transactions on PAMI,</journal>
<volume>20</volume>
<issue>10</issue>
<contexts>
<context position="1321" citStr="Amengual and Vidal 1998" startWordPosition="194" endWordPosition="197">etecting erroneous pages and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a give</context>
</contexts>
<marker>Amengual, Vidal, 1998</marker>
<rawString>Amengual, Juan Carlos and Enrique Vidal. 1998. Efficient error-correcting viterbi parsing. IEEE Transactions on PAMI, 20(10):1–109.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marco Baroni</author>
<author>Silvia Bernardini</author>
</authors>
<title>BootCaT: Bootstrapping corpora and terms from the web.</title>
<date>2004</date>
<booktitle>In Proceedings of LREC 2004,</booktitle>
<pages>1313--1316</pages>
<location>Lisbon.</location>
<marker>Baroni, Bernardini, 2004</marker>
<rawString>Baroni, Marco and Silvia Bernardini. 2004. BootCaT: Bootstrapping corpora and terms from the web. In Proceedings of LREC 2004, pages 1313–1316, Lisbon.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Sotiris Boutsis</author>
</authors>
<title>Stelious Piperidis, and Iason Demiros.1999. Generating translation lexica from multilingual texts.</title>
<journal>Applied Artificial Intelligence,</journal>
<volume>13</volume>
<issue>6</issue>
<marker>Boutsis, </marker>
<rawString>Boutsis, Sotiris, Stelious Piperidis, and Iason Demiros.1999. Generating translation lexica from multilingual texts. Applied Artificial Intelligence, 13(6):583–606.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sergey Brin</author>
<author>Lawrence Page</author>
</authors>
<title>The anatomy of a large-scale hypertextual Web search engine.</title>
<date>1998</date>
<journal>Computer Networks and ISDN Systems,</journal>
<pages>30--107</pages>
<contexts>
<context position="12268" citStr="Brin and Page 1998" startWordPosition="1908" endWordPosition="1911"> the engine, and on the details of the collection strategy. We mainly concentrated on simple queries and straightforward collection strategies. Still, the large number of subcorpora and pages that were evaluated should guarantee that accidental results are avoided. 2.1 General Web Corpora In a first attempt, we tried to obtain a general German HTML corpus using the meaningless query der die das, i.e., the three German definite articles. However, queries of this and a similar form did not lead to satisfactory results: As a consequence of Google’s ranking mechanism, which prefers “authorities” (Brin and Page 1998), mainly portals of big organizations, companies, and others were retrieved. These pages are often dominated by graphical elements. Portions of text are usually small and carefully edited, which means that orthographic errors are less frequent than in other “less official” pages. To achieve a more realistic scenario we randomly generated quintuples, each collecting five terms of the 10,000 top frequent German words. We used Google to retrieve 298 Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages 10 pages per query (quintuple) until we obtained 1,000 pages. A considerable number </context>
</contexts>
<marker>Brin, Page, 1998</marker>
<rawString>Brin, Sergey and Lawrence Page. 1998. The anatomy of a large-scale hypertextual Web search engine. Computer Networks and ISDN Systems, 30:107–117.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jonathan Brown</author>
<author>Maxine Eskenazi</author>
</authors>
<title>Retrieval of authentic documents for reader-specific lexical practice.</title>
<date>2004</date>
<booktitle>In Proceedings of the InSTIL/ICALL2004 Symposium on Computer Aided Language Learning,</booktitle>
<pages>25--28</pages>
<location>Venice.</location>
<contexts>
<context position="2360" citStr="Brown and Eskenazi 2004" startWordPosition="341" endWordPosition="344">; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and Pahud 2004; Brown and Eskenazi 2004; Fletcher 2004a). By Zipf’s law, most words, phrases, and specific grammatical constructions have a very low frequency. Furthermore, the number of text genres and special thematic * Funded by German Research Foundation (DFG) † Funded by VolkswagenStiftung Submission received: 21 January 2005; revised submission received: 3 August 2005; accepted for publication: 10 December 2005. © 2006 Association for Computational Linguistics Computational Linguistics Volume 32, Number 3 areas that come with their own picture of language is large. This explains that most of the aforementioned applications ca</context>
</contexts>
<marker>Brown, Eskenazi, 2004</marker>
<rawString>Brown, Jonathan and Maxine Eskenazi. 2004. Retrieval of authentic documents for reader-specific lexical practice. In Proceedings of the InSTIL/ICALL2004 Symposium on Computer Aided Language Learning, pages 25–28, Venice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ciprian Chelba</author>
<author>Frederick Jelinek</author>
</authors>
<title>Recognition performance of a structured language model.</title>
<date>2002</date>
<booktitle>In Proceedings of Sixth European Conference on Speech Communication and Technology (EUROSPEECH’99),</booktitle>
<pages>1567--1570</pages>
<location>Budapest.</location>
<contexts>
<context position="1218" citStr="Chelba and Jelinek 2002" startWordPosition="179" endWordPosition="182">hographic errors of various types in Web pages. As a by-product, methods are developed for efficiently detecting erroneous pages and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 19</context>
</contexts>
<marker>Chelba, Jelinek, 2002</marker>
<rawString>Chelba, Ciprian and Frederick Jelinek. 2002. Recognition performance of a structured language model. In Proceedings of Sixth European Conference on Speech Communication and Technology (EUROSPEECH’99), pages 1567–1570, Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth W Church</author>
<author>Robert L Mercer</author>
</authors>
<title>Introduction to the special issue on computational linguistics using large corpora.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="1012" citStr="Church and Mercer 1993" startWordPosition="149" endWordPosition="152">here high accuracy is crucial, the problem has to be faced that a non-negligible number of orthographic and grammatical errors occur in Web documents. In this article we investigate the distribution of orthographic errors of various types in Web pages. As a by-product, methods are developed for efficiently detecting erroneous pages and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphr</context>
</contexts>
<marker>Church, Mercer, 1993</marker>
<rawString>Church, Kenneth W. and Robert L. Mercer. 1993. Introduction to the special issue on computational linguistics using large corpora. Computational Linguistics, 19(1):1–24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maya Dimitrova</author>
<author>Nicholas Kushmerick</author>
<author>Petia Radeva</author>
<author>Joan Jose Villanueva</author>
</authors>
<title>User assessment of a visual Web genre classifier.</title>
<date>2003</date>
<booktitle>In Third International Conference on Visualization, Imaging, and Image Processing,</booktitle>
<location>Malaga.</location>
<contexts>
<context position="69589" citStr="Dimitrova et al. 2003" startWordPosition="11105" endWordPosition="11108">rology, again comparing the simple and the refined strategies. 7.4 Summary So Far PDF corpora were found to have lower error rates. Corpora covering pages from nonscientific thematic areas often have higher error rates than corpora crawled without a fixed thematic focus. Error rates in the corpora are influenced by the crawling strategy. For English texts, refined crawling strategies that collect pages with a strong thematic focus seem to produce better corpora. 8. Error Rates and Document Genre Classifying Web documents by genre (Kessler, Nunberg, and Sch¨utze 1997; Finn and Kushmerick 2003; Dimitrova et al. 2003) represents one possible way to improve Web search techniques. Web-based corpus linguistics may benefit from these techniques since they enable a better control of the kind of language material that is added to a collection. In this section we want to see which kind of correlation exists between the error rates observed in a document and its genre. After manual inspection of 322 Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages Figure 12 Zipf curves with logarithmic frequencies for English (upper diagram, 1,175,894 entries) and German (lower diagram, 454,709 entries) ranked erro</context>
</contexts>
<marker>Dimitrova, Kushmerick, Radeva, Villanueva, 2003</marker>
<rawString>Dimitrova, Maya, Nicholas Kushmerick, Petia Radeva, and Joan Jose Villanueva. 2003. User assessment of a visual Web genre classifier. In Third International Conference on Visualization, Imaging, and Image Processing, Malaga.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Dunning</author>
</authors>
<title>Accurate models for the statistics of surprise and coincidence.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="1445" citStr="Dunning 1993" startWordPosition="211" endWordPosition="212"> and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries th</context>
</contexts>
<marker>Dunning, 1993</marker>
<rawString>Dunning, Ted. 1993. Accurate models for the statistics of surprise and coincidence. Computational Linguistics, 19(1):61–74.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aidan Finn</author>
<author>Nicholas Kushmerick</author>
</authors>
<title>Learning to classify documents according to genre.</title>
<date>2003</date>
<journal>Journal of the American Society for Information Science and Technology</journal>
<booktitle>In IJCAI-03 Workshop on Computational Approaches to Text Style and Synthesis,</booktitle>
<location>Acapulco.</location>
<contexts>
<context position="69565" citStr="Finn and Kushmerick 2003" startWordPosition="11101" endWordPosition="11104">a Fish, Mushrooms, and Neurology, again comparing the simple and the refined strategies. 7.4 Summary So Far PDF corpora were found to have lower error rates. Corpora covering pages from nonscientific thematic areas often have higher error rates than corpora crawled without a fixed thematic focus. Error rates in the corpora are influenced by the crawling strategy. For English texts, refined crawling strategies that collect pages with a strong thematic focus seem to produce better corpora. 8. Error Rates and Document Genre Classifying Web documents by genre (Kessler, Nunberg, and Sch¨utze 1997; Finn and Kushmerick 2003; Dimitrova et al. 2003) represents one possible way to improve Web search techniques. Web-based corpus linguistics may benefit from these techniques since they enable a better control of the kind of language material that is added to a collection. In this section we want to see which kind of correlation exists between the error rates observed in a document and its genre. After manual inspection of 322 Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages Figure 12 Zipf curves with logarithmic frequencies for English (upper diagram, 1,175,894 entries) and German (lower diagram, 454,</context>
</contexts>
<marker>Finn, Kushmerick, 2003</marker>
<rawString>Finn, Aidan and Nicholas Kushmerick. 2003. Learning to classify documents according to genre. In IJCAI-03 Workshop on Computational Approaches to Text Style and Synthesis, Acapulco. Journal of the American Society for Information Science and Technology (in press).</rawString>
</citation>
<citation valid="true">
<authors>
<author>William H Fletcher</author>
</authors>
<title>Facilitating the compilation and dissemination of ad-hoc web corpora.</title>
<date>2004</date>
<booktitle>Corpora and Language Learners, number 17 in Studies in Corpus Linguistics.</booktitle>
<editor>In Guy Aston, Silvia Bernardini, and Dominic Stewart, editors,</editor>
<publisher>John Benjamins Publishing Company,</publisher>
<location>Amsterdam.</location>
<contexts>
<context position="2375" citStr="Fletcher 2004" startWordPosition="345" endWordPosition="346">4; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and Pahud 2004; Brown and Eskenazi 2004; Fletcher 2004a). By Zipf’s law, most words, phrases, and specific grammatical constructions have a very low frequency. Furthermore, the number of text genres and special thematic * Funded by German Research Foundation (DFG) † Funded by VolkswagenStiftung Submission received: 21 January 2005; revised submission received: 3 August 2005; accepted for publication: 10 December 2005. © 2006 Association for Computational Linguistics Computational Linguistics Volume 32, Number 3 areas that come with their own picture of language is large. This explains that most of the aforementioned applications can only work whe</context>
</contexts>
<marker>Fletcher, 2004</marker>
<rawString>Fletcher, William H. 2004a. Facilitating the compilation and dissemination of ad-hoc web corpora. In Guy Aston, Silvia Bernardini, and Dominic Stewart, editors, Corpora and Language Learners, number 17 in Studies in Corpus Linguistics. John Benjamins Publishing Company, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William H Fletcher</author>
</authors>
<title>Making the web more useful as a source for linguistic corpora.</title>
<date>2004</date>
<booktitle>Corpus Linguistics in North America</booktitle>
<editor>In U. Connor and T. Upton, editors,</editor>
<location>Rodopi, Amsterdam.</location>
<contexts>
<context position="2375" citStr="Fletcher 2004" startWordPosition="345" endWordPosition="346">4; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and Pahud 2004; Brown and Eskenazi 2004; Fletcher 2004a). By Zipf’s law, most words, phrases, and specific grammatical constructions have a very low frequency. Furthermore, the number of text genres and special thematic * Funded by German Research Foundation (DFG) † Funded by VolkswagenStiftung Submission received: 21 January 2005; revised submission received: 3 August 2005; accepted for publication: 10 December 2005. © 2006 Association for Computational Linguistics Computational Linguistics Volume 32, Number 3 areas that come with their own picture of language is large. This explains that most of the aforementioned applications can only work whe</context>
</contexts>
<marker>Fletcher, 2004</marker>
<rawString>Fletcher, William H. 2004b. Making the web more useful as a source for linguistic corpora. In U. Connor and T. Upton, editors, Corpus Linguistics in North America 2002. Rodopi, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Gaizauskas</author>
<author>George Demetriou</author>
<author>Kevin Humphreys</author>
</authors>
<title>Term recognition in biological science journal articles.</title>
<date>2000</date>
<booktitle>In Proceedings of the Workshop on Computational Terminology for Medical and Biological Applications, 2nd International Conference on Natural Language Processing (NLP-2000),</booktitle>
<pages>37--44</pages>
<marker>Gaizauskas, Demetriou, Humphreys, 2000</marker>
<rawString>Gaizauskas, Robert, George Demetriou, and Kevin Humphreys. 2000. Term recognition in biological science journal articles. In Proceedings of the Workshop on Computational Terminology for Medical and Biological Applications, 2nd International Conference on Natural Language Processing (NLP-2000), pages 37–44, Patras.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William A Gale</author>
<author>Kenneth W Church</author>
</authors>
<title>Identifying word correspondences in parallel texts.</title>
<date>1991</date>
<booktitle>In Proceedings of Fourth DARPA Workshop on Speech and Natural Language,</booktitle>
<pages>152--157</pages>
<location>Pacific Grove, CA.</location>
<contexts>
<context position="1724" citStr="Gale and Church 1991" startWordPosition="248" endWordPosition="251">, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and</context>
</contexts>
<marker>Gale, Church, 1991</marker>
<rawString>Gale, William A. and Kenneth W. Church. 1991. Identifying word correspondences in parallel texts. In Proceedings of Fourth DARPA Workshop on Speech and Natural Language, pages 152–157, Pacific Grove, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans-J¨urgen Gartner</author>
</authors>
<title>Extraktion von semantischer Information aus Layout-orientierten Daten. Master’s thesis,</title>
<date>2003</date>
<institution>Technical University of Graz.</institution>
<contexts>
<context position="13887" citStr="Gartner 2003" startWordPosition="2170" endWordPosition="2171">these pages. The remaining documents represent the “primary” general German HTML corpus. Since we wanted to know how results depend on the peculiarities of the selected set of pages, a second series of queries of the same type was sent to Google to retrieve a “secondary” general German HTML corpus with a completely disjoint set of pages. Similar procedures were used to obtain a primary and a secondary general English HTML corpus, a general German PDF corpus, and a general English PDF corpus. The translation from PDF to ASCII was found to be error prone, in particular for German documents (cf. Gartner 2003). Due to this process, some converted PDF documents were seriously damaged. Since we focus on errors in original Web pages (as opposed to converted versions of such pages), these files were excluded as well. We found these pages when computing error rates based on error dictionaries as described in Sections 6 and 7. The number of Web pages and the number of normal tokens (i.e., tokens composed of standard letters only) in the resulting six corpora are shown in Table 1. Numbers (1) and (2) stand for the primary and secondary corpora, respectively. 2.2 Web Corpora for Specific Thematic Areas We </context>
</contexts>
<marker>Gartner, 2003</marker>
<rawString>Gartner, Hans-J¨urgen. 2003. Extraktion von semantischer Information aus Layout-orientierten Daten. Master’s thesis, Technical University of Graz.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gregory Grefenstette</author>
</authors>
<title>Use of syntactic context to produce term association lists for text retrieval.</title>
<date>1992</date>
<booktitle>In Proceedings of the 15th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval,</booktitle>
<pages>89--97</pages>
<location>Copenhagen.</location>
<contexts>
<context position="1431" citStr="Grefenstette 1992" startWordPosition="209" endWordPosition="210">f errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute d</context>
</contexts>
<marker>Grefenstette, 1992</marker>
<rawString>Grefenstette, Gregory. 1992. Use of syntactic context to produce term association lists for text retrieval. In Proceedings of the 15th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 89–97, Copenhagen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gregory Grefenstette</author>
</authors>
<title>The WWW as a resource for example-based MT tasks.</title>
<date>1999</date>
<booktitle>Paper presented at ASLIB “Translating and the Computer” conference,</booktitle>
<location>London.</location>
<contexts>
<context position="1821" citStr="Grefenstette 1999" startWordPosition="263" endWordPosition="264">d Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and Pahud 2004; Brown and Eskenazi 2004; Fletcher 2004a). By Zipf’s law, most words, phrases, and sp</context>
</contexts>
<marker>Grefenstette, 1999</marker>
<rawString>Grefenstette, Gregory. 1999. The WWW as a resource for example-based MT tasks. Paper presented at ASLIB “Translating and the Computer” conference, London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gregory Grefenstette</author>
</authors>
<title>Very large lexicons.</title>
<date>2001</date>
<booktitle>In Computational Linguistics in the Netherlands 2000: Selected Papers from the Eleventh CLIN Meeting, Language and Computers,</booktitle>
<location>Amsterdam.</location>
<contexts>
<context position="1640" citStr="Grefenstette 2001" startWordPosition="238" endWordPosition="239"> language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized </context>
</contexts>
<marker>Grefenstette, 2001</marker>
<rawString>Grefenstette, Gregory. 2001. Very large lexicons. In Computational Linguistics in the Netherlands 2000: Selected Papers from the Eleventh CLIN Meeting, Language and Computers, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Franz Guenthner</author>
</authors>
<title>Electronic lexica and corpora research at CIS.</title>
<date>1996</date>
<journal>International Journal of Corpus Linguistics,</journal>
<volume>1</volume>
<issue>2</issue>
<contexts>
<context position="21418" citStr="Guenthner 1996" startWordPosition="3343" endWordPosition="3344">ictionaries. Third, garbled words that were found to correspond to correct words (entries of the above dictionaries) were excluded (filtering step). Collecting the remaining erroneous strings, we obtained large error dictionaries for each type of orthographic error. Experiments described in Section 5 show that our error dictionaries cover the major part of all orthographic errors occurring in the English and German Web pages. At 1 These dictionaries are nonpublic. They have been built up at the Centre for Information and Language Processing (CIS) during the last two decades (Maier-Meyer 1995; Guenthner 1996). Each entry comes with a frequency value that describes the number of occurrences in a 1.5-terabyte subcorpus of the Web from 1999. Dictionaries for French and Spanish were included to improve the filtering step. Suitable dictionaries for other languages were not available. 301 Computational Linguistics Volume 32, Number 3 Table 3 Size of background dictionaries. Dictionary Number of entries D(English) 315,300 D(German) 2,235,136 D(French) 85,895 D(Spanish) 69,634 D(Geos) 195,700 D(Names) 372,628 D(Abbreviations) 2,375 the same time, the number of tokens that are erroneously treated as errors</context>
</contexts>
<marker>Guenthner, 1996</marker>
<rawString>Guenthner, Franz. 1996. Electronic lexica and corpora research at CIS. International Journal of Corpus Linguistics, 1(2):287–301.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frederick Jelinek</author>
</authors>
<title>Statistical Methods for Speech Recognition.</title>
<date>1997</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="1192" citStr="Jelinek 1997" startWordPosition="177" endWordPosition="178">ibution of orthographic errors of various types in Web pages. As a by-product, methods are developed for efficiently detecting erroneous pages and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Dem</context>
</contexts>
<marker>Jelinek, 1997</marker>
<rawString>Jelinek, Frederick. 1997. Statistical Methods for Speech Recognition. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehoe</author>
<author>Antoinette Renouf</author>
</authors>
<title>WebCorp: Applying the web to linguistics and linguistics to the Web. In</title>
<date>2002</date>
<booktitle>Poster Proceedings of the 11th International World Wide Web Conference, WWW02,</booktitle>
<location>Honolulu.</location>
<contexts>
<context position="3360" citStr="Kehoe and Renouf 2002" startWordPosition="493" endWordPosition="496">05. © 2006 Association for Computational Linguistics Computational Linguistics Volume 32, Number 3 areas that come with their own picture of language is large. This explains that most of the aforementioned applications can only work when built on top of huge heterogeneous corpora. Since the Web represents by far the largest public repository for natural language texts, and since Web search engines such as Google offer simple access to pages where language material of a given orthographic, grammatical, or thematic kind is found, many recent experiments and technologies use the Web as a corpus (Kehoe and Renouf 2002; Morley, Renouf, and Kehoe 2003; Kilgarriff and Grefenstette 2003; Resnik and Smith 2003; Way and Gough 2003; Fletcher 2004b). One potential problem for Web-based corpus linguistics is caused by the fact that words and phrases occurring in Web pages are sometimes erroneous. Typing errors represent one widespread phenomenon. Many Web pages, say, in English, are written by non-native speakers, or by persons with very modest language competence. As a consequence, spelling errors and grammatical bugs result. The character sets that are used for writing Web pages are often not fully adequate for t</context>
</contexts>
<marker>Kehoe, Renouf, 2002</marker>
<rawString>Kehoe, Andrew and Antoinette Renouf. 2002. WebCorp: Applying the web to linguistics and linguistics to the Web. In Poster Proceedings of the 11th International World Wide Web Conference, WWW02, Honolulu.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brett Kessler</author>
<author>Geoffrey Nunberg</author>
<author>Hinrich Sch¨utze</author>
</authors>
<title>Automated detection of text genre.</title>
<date>1997</date>
<booktitle>In Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics and the 8th Meeting of the European Chapter of the Association for Computational Linguistics,</booktitle>
<pages>32--38</pages>
<location>Madrid.</location>
<marker>Kessler, Nunberg, Sch¨utze, 1997</marker>
<rawString>Kessler, Brett, Geoffrey Nunberg, and Hinrich Sch¨utze. 1997. Automated detection of text genre. In Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics and the 8th Meeting of the European Chapter of the Association for Computational Linguistics, pages 32–38, Madrid.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Kilgarriff</author>
<author>Gregory Grefenstette</author>
</authors>
<date>2003</date>
<booktitle>Introduction. Computational Linguistics—Special Issue on the Web as Corpus,</booktitle>
<volume>29</volume>
<issue>3</issue>
<contexts>
<context position="3426" citStr="Kilgarriff and Grefenstette 2003" startWordPosition="502" endWordPosition="505">mputational Linguistics Volume 32, Number 3 areas that come with their own picture of language is large. This explains that most of the aforementioned applications can only work when built on top of huge heterogeneous corpora. Since the Web represents by far the largest public repository for natural language texts, and since Web search engines such as Google offer simple access to pages where language material of a given orthographic, grammatical, or thematic kind is found, many recent experiments and technologies use the Web as a corpus (Kehoe and Renouf 2002; Morley, Renouf, and Kehoe 2003; Kilgarriff and Grefenstette 2003; Resnik and Smith 2003; Way and Gough 2003; Fletcher 2004b). One potential problem for Web-based corpus linguistics is caused by the fact that words and phrases occurring in Web pages are sometimes erroneous. Typing errors represent one widespread phenomenon. Many Web pages, say, in English, are written by non-native speakers, or by persons with very modest language competence. As a consequence, spelling errors and grammatical bugs result. The character sets that are used for writing Web pages are often not fully adequate for the alphabet of a given language, which represents another systemat</context>
</contexts>
<marker>Kilgarriff, Grefenstette, 2003</marker>
<rawString>Kilgarriff, Adam and Gregory Grefenstette. 2003. Introduction. Computational Linguistics—Special Issue on the Web as Corpus, 29(3):333–348.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
<author>Franz Josef Och</author>
<author>Daniel Marcu</author>
</authors>
<title>Statistical phrase-based translation.</title>
<date>2003</date>
<booktitle>In Proceedings of the Human Language Technology and North American Association for Computational Linguistics Conference (HLT/NAACL),</booktitle>
<location>Edmonton.</location>
<marker>Koehn, Och, Marcu, 2003</marker>
<rawString>Koehn, Philipp, Franz Josef Och, and Daniel Marcu. 2003. Statistical phrase-based translation. In Proceedings of the Human Language Technology and North American Association for Computational Linguistics Conference (HLT/NAACL), Edmonton.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karen Kukich</author>
</authors>
<title>Techniques for automatically correcting words in texts.</title>
<date>1992</date>
<journal>ACM Computing Surveys,</journal>
<volume>24</volume>
<issue>4</issue>
<contexts>
<context position="1296" citStr="Kukich 1992" startWordPosition="192" endWordPosition="193">efficiently detecting erroneous pages and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionari</context>
<context position="23894" citStr="Kukich 1992" startWordPosition="3717" endWordPosition="3718"> substitutions, and insertions. Transpositions of two letters occur if two keys are hit in the wrong order. Deletions result if a key is not properly pushed down. Substitutions occur if a neighbor key is pressed down instead of the intended one. Horizontal and vertical shifts of fingers may be distinguished. If a finger hits the middle between two keys, a neighbor key may be pressed in addition to the intended one. The wrong letter may occur before or after the correct letter. Transpositions, deletions, substitutions, and insertions cover most of the typing errors discussed in the literature (Kukich 1992). We ignored homologous errors, that is, substitutions that are traced back to a confusion of the left and right hand. Since 2 Note that we do not capture false friends, that is, garbled strings that accidentally represent correct words of the dictionary. Detection of false friends is known to be notoriously difficult and outside the scope of this article. 302 Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages there are many possible positions for both hands, this kind of error leads to large confusion sets. Since we did not find other patterns in the texts, only mutation variant</context>
<context position="27791" citStr="Kukich (1992)" startWordPosition="4341" endWordPosition="4342">arted with the misspelled German terms n¨ahmlich, addresse, resourcen, and vorraus. Table 6 shows some of the resulting German words, the misspelled variant, and the number of Google hits of the garbled version. From the initial error list, we obtained a set of 65 rules partially described in Table 7. We applied these rules to D(German), introducing one error for each entry of the appropriate form. Each rule was applied to each entry using the first possible position for mutation. For example, for the lexical entry Adresse of 3 A phenomenon often discussed in the literature; see, for example, Kukich (1992), page 388f. 4 It is well-known that the number of Google hits for a phrase can vary from one day to the next. 303 Computational Linguistics Volume 32, Number 3 Table 4 Some frequently misspelled English words and the number of Google hits of the correct and misspelled forms. the German standard dictionary we obtained the following error terms: adrese, ahdresse, adrehsse, addresse, adrresse. As a result we obtained a list with 19, 265, 271 strings. The large size is mainly caused by the rules for reduplication of consonants, which are not restricted by word context. The filtering procedure led</context>
<context position="92016" citStr="Kukich (1992)" startWordPosition="14882" endWordPosition="14883">stinct applications. 10.1 Text Correction with Crawled Dictionaries It has often been observed that fixed handcrafted dictionaries only have a modest coverage when applied to new texts and corpora.9 Still, for various text processing tasks, dictionaries with high coverage are needed. The generation of crawled dictionaries that collect the vocabulary of appropriate Web pages is one way to obtain a better coverage. As a matter of fact, the quality of these dictionaries suffers from orthographic errors in the analyzed pages. Using the above filters helps to reduce the number of errors that are 9 Kukich (1992) describes an experiment by Walker and Amsler (1986): “Nearly two thirds (61%) of the words in the Merriam-Webster Seventh Collegiate Dictionary did not appear in an eight million word corpus of New York Times news wire text, and, conversely, almost two-thirds (64%) of the words in the text were not in the dictionary.” 332 Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages Table 29 Top-ranked errors in German ranked error list and their frequencies. Entry of error list Correct word Error frequency Universitaet Universit¨at 131,494 grossen großen 107,904 koennen k¨onnen 107,730 kn</context>
</contexts>
<marker>Kukich, 1992</marker>
<rawString>Kukich, Karen. 1992. Techniques for automatically correcting words in texts. ACM Computing Surveys, 24(4):377–439.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Akira Kumano</author>
<author>Hideki Hirakawa</author>
</authors>
<title>Building a MT dictionary from parallel texts based on linguistic and statistical information.</title>
<date>1994</date>
<booktitle>In Proceedings of the 15th International Conference on Computational Linguistics (COLING’94),</booktitle>
<pages>76--81</pages>
<contexts>
<context position="1763" citStr="Kumano and Hirakawa 1994" startWordPosition="254" endWordPosition="257">(Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and Pahud 2004; Brown and Eskenazi 2004; F</context>
</contexts>
<marker>Kumano, Hirakawa, 1994</marker>
<rawString>Kumano, Akira and Hideki Hirakawa. 1994. Building a MT dictionary from parallel texts based on linguistic and statistical information. In Proceedings of the 15th International Conference on Computational Linguistics (COLING’94), pages 76–81, Kyoto.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Julian Kupiec</author>
</authors>
<title>An algorithm for finding noun phrase correspondences in bilingual corpora.</title>
<date>1993</date>
<booktitle>In Proceedings of the 31st Annual Meeting of the Association for Computational Linguistics (ACL’93),</booktitle>
<pages>17--22</pages>
<location>Columbus, OH.</location>
<contexts>
<context position="1737" citStr="Kupiec 1993" startWordPosition="252" endWordPosition="253"> recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and Pahud 2004; </context>
</contexts>
<marker>Kupiec, 1993</marker>
<rawString>Kupiec, Julian. 1993. An algorithm for finding noun phrase correspondences in bilingual corpora. In Proceedings of the 31st Annual Meeting of the Association for Computational Linguistics (ACL’93), pages 17–22, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shian-Hua Lin</author>
<author>Chi-Sheng Shih</author>
<author>Meng Chang Chen</author>
<author>Jan-Ming Ho</author>
<author>Ming-Tat Ko</author>
<author>Yueh-Ming Huang</author>
</authors>
<title>Extracting classification knowledge of internet documents with mining term associations: A semantic approach.</title>
<date>1998</date>
<booktitle>In Proceedings of the 21st International ACM SIGIR Conference on Research and Development in Information Retrieval,</booktitle>
<pages>241--249</pages>
<location>Melbourne, Australia.</location>
<contexts>
<context position="1463" citStr="Lin et al. 1998" startWordPosition="213" endWordPosition="216">c knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the speci</context>
</contexts>
<marker>Lin, Shih, Chen, Ho, Ko, Huang, 1998</marker>
<rawString>Lin, Shian-Hua, Chi-Sheng Shih, Meng Chang Chen, Jan-Ming Ho, Ming-Tat Ko, and Yueh-Ming Huang. 1998. Extracting classification knowledge of internet documents with mining term associations: A semantic approach. In Proceedings of the 21st International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 241–249, Melbourne, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Petra Maier-Meyer</author>
</authors>
<title>Lexikon und automatische Lemmatisierung.</title>
<date>1995</date>
<tech>Ph.D. thesis,</tech>
<institution>CIS, University of Munich.</institution>
<contexts>
<context position="21401" citStr="Maier-Meyer 1995" startWordPosition="3341" endWordPosition="3342">given background dictionaries. Third, garbled words that were found to correspond to correct words (entries of the above dictionaries) were excluded (filtering step). Collecting the remaining erroneous strings, we obtained large error dictionaries for each type of orthographic error. Experiments described in Section 5 show that our error dictionaries cover the major part of all orthographic errors occurring in the English and German Web pages. At 1 These dictionaries are nonpublic. They have been built up at the Centre for Information and Language Processing (CIS) during the last two decades (Maier-Meyer 1995; Guenthner 1996). Each entry comes with a frequency value that describes the number of occurrences in a 1.5-terabyte subcorpus of the Web from 1999. Dictionaries for French and Spanish were included to improve the filtering step. Suitable dictionaries for other languages were not available. 301 Computational Linguistics Volume 32, Number 3 Table 3 Size of background dictionaries. Dictionary Number of entries D(English) 315,300 D(German) 2,235,136 D(French) 85,895 D(Spanish) 69,634 D(Geos) 195,700 D(Names) 372,628 D(Abbreviations) 2,375 the same time, the number of tokens that are erroneously </context>
</contexts>
<marker>Maier-Meyer, 1995</marker>
<rawString>Maier-Meyer, Petra. 1995. Lexikon und automatische Lemmatisierung. Ph.D. thesis, CIS, University of Munich.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Barry Morley</author>
<author>Antoinette Renouf</author>
<author>Andrew Kehoe</author>
</authors>
<title>Linguistic research with the XML/RDF aware WebCorp tool.</title>
<date>2003</date>
<booktitle>In Poster Proceedings of the 12th International World Wide Web Conference, WWW03,</booktitle>
<location>Budapest.</location>
<marker>Morley, Renouf, Kehoe, 2003</marker>
<rawString>Morley, Barry, Antoinette Renouf, and Andrew Kehoe. 2003. Linguistic research with the XML/RDF aware WebCorp tool. In Poster Proceedings of the 12th International World Wide Web Conference, WWW03, Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alice H Oh</author>
<author>Alexander I Rudickny</author>
</authors>
<title>Stochastic language generation for spoken dialogue systems.</title>
<date>2000</date>
<booktitle>In ANLP/NAACL 2000 Workshop on Conversational Systems,</booktitle>
<pages>27--32</pages>
<location>Seattle.</location>
<contexts>
<context position="1262" citStr="Oh and Rudickny 2000" startWordPosition="185" endWordPosition="188"> As a by-product, methods are developed for efficiently detecting erroneous pages and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used</context>
</contexts>
<marker>Oh, Rudickny, 2000</marker>
<rawString>Oh, Alice H. and Alexander I. Rudickny. 2000. Stochastic language generation for spoken dialogue systems. In ANLP/NAACL 2000 Workshop on Conversational Systems, pages 27–32, Seattle.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mari Ostendorf</author>
<author>Vassilios V Digalakis</author>
<author>Owen A Kimball</author>
</authors>
<title>From HMMs to segment models: A unified view of stochastic modeling for speech recognition.</title>
<date>1996</date>
<journal>IEEE Transactions Speech and Audio Processing,</journal>
<volume>4</volume>
<issue>5</issue>
<marker>Ostendorf, Digalakis, Kimball, 1996</marker>
<rawString>Ostendorf, Mari, Vassilios V. Digalakis, and Owen A. Kimball. 1996. From HMMs to segment models: A unified view of stochastic modeling for speech recognition. IEEE Transactions Speech and Audio Processing, 4(5):360–378.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philip Resnik</author>
<author>Noah A Smith</author>
</authors>
<title>The web as a parallel corpus.</title>
<date>2003</date>
<journal>Computational Linguistics - Special Issue on the Web as Corpus,</journal>
<volume>29</volume>
<issue>3</issue>
<contexts>
<context position="3449" citStr="Resnik and Smith 2003" startWordPosition="506" endWordPosition="509"> Number 3 areas that come with their own picture of language is large. This explains that most of the aforementioned applications can only work when built on top of huge heterogeneous corpora. Since the Web represents by far the largest public repository for natural language texts, and since Web search engines such as Google offer simple access to pages where language material of a given orthographic, grammatical, or thematic kind is found, many recent experiments and technologies use the Web as a corpus (Kehoe and Renouf 2002; Morley, Renouf, and Kehoe 2003; Kilgarriff and Grefenstette 2003; Resnik and Smith 2003; Way and Gough 2003; Fletcher 2004b). One potential problem for Web-based corpus linguistics is caused by the fact that words and phrases occurring in Web pages are sometimes erroneous. Typing errors represent one widespread phenomenon. Many Web pages, say, in English, are written by non-native speakers, or by persons with very modest language competence. As a consequence, spelling errors and grammatical bugs result. The character sets that are used for writing Web pages are often not fully adequate for the alphabet of a given language, which represents another systematic source for inaccurac</context>
<context position="100089" citStr="Resnik and Smith 2003" startWordPosition="16161" endWordPosition="16164"> − 49) erroneous tokens of the text that are not found in the error dictionary and proves that a two-step procedure—first using filters for crawling pages, then eliminating entries of error dictionaries afterwards—leads to optimal results. 10.2 Generating Translation Data from Parallel Corpora Parallel texts represent an important resource for automatic acquisition of bilingual dictionaries. Since only a small number of large parallel corpora are available, which are moreover specialized both with respect to form and contents, the Web represents an important archive for mining parallel texts (Resnik and Smith 2003). When building up bilingual dictionaries for machine translation, or when presenting parallel phrases to users, correctness is an important issue. Hence, it is interesting to see how error dictionaries help to reduce errors in parallel corpora. Our methods can be applied to any kind of parallel corpus. For our experiments we used the freely available Europarl corpus.13 The corpus covers the proceedings of the European Parliament 1996–2001 in 11 official languages of the European Union. We only analyzed the English and German versions of the parallel texts. The 488 documents in the corpus are </context>
</contexts>
<marker>Resnik, Smith, 2003</marker>
<rawString>Resnik, Philip and Noah A. Smith. 2003. The web as a parallel corpus. Computational Linguistics - Special Issue on the Web as Corpus, 29(3):349–380.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christoph Ringlstetter</author>
</authors>
<title>2003.OCRKorrektur und Bestimmung von Levenshtein-Gewichten. Master’s thesis, LMU,</title>
<date>2004</date>
<booktitle>In Proceedings of the InSTIL/ICALL2004 Symposium on Computer Aided Language Learning,</booktitle>
<pages>107--110</pages>
<institution>University of Munich.</institution>
<location>Schwartz, Lee, Takako Aikawa, and</location>
<marker>Ringlstetter, 2004</marker>
<rawString>Ringlstetter, Christoph. 2003.OCRKorrektur und Bestimmung von Levenshtein-Gewichten. Master’s thesis, LMU, University of Munich. Schwartz, Lee, Takako Aikawa, and Michel Pahud. 2004. Dynamic language learning tools. In Proceedings of the InSTIL/ICALL2004 Symposium on Computer Aided Language Learning, pages 107–110, Venice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frank A Smadja</author>
<author>Kathleen R McKeown</author>
</authors>
<title>Automatically extracting and representing collocations for language generation.</title>
<date>1990</date>
<booktitle>In Proceedings of the 28th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>252--259</pages>
<location>Pittsburgh, PA.</location>
<contexts>
<context position="16660" citStr="Smadja and McKeown 1990" startWordPosition="2585" endWordPosition="2588">s pages containing hits for several keywords of a disjunctive query. Since this form of corpus construction is straightforward, not all pages in the resulting corpora belong to the given thematic area. Refined Crawl. We wanted to see how results are affected when using less naive crawling methods. For the three areas “Fish,” “Mushrooms,” and “Neurology,” the secondary corpora were retrieved using the following refined procedure: Starting from a small tagged seed corpus for the given domain, we mechanically extracted terminological open compounds for English (Sornlertlamvanich and Tanaka 1996; Smadja and McKeown 1990) and compound nouns for German. Examples are amino group, action potential, defense mechanism (English, neurology), truffle species, morel areas, harvesting tips (English, mushrooms), Koffeinstoffwechsel, and Eisenkonzentration (German, neurology). Each of these expressions was sent as a query to Google. From each answer set we collected a maximum of 30 top-ranked hits (many answer sets were smaller). For each document in the resulting corpus, the similarity with the seed corpus was controlled, using a cosine measure (in practice, almost all documents passed the similarity filter). Our method </context>
</contexts>
<marker>Smadja, McKeown, 1990</marker>
<rawString>Smadja, Frank A. and Kathleen R. McKeown. 1990. Automatically extracting and representing collocations for language generation. In Proceedings of the 28th Annual Meeting of the Association for Computational Linguistics, pages 252–259, Pittsburgh, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Virach Sornlertlamvanich</author>
<author>Hozumi Tanaka</author>
</authors>
<title>The automatic extraction of open compounds from text corpora.</title>
<date>1996</date>
<booktitle>In Proceedings of the 16th Conference on Computational Linguistics,</booktitle>
<pages>1143--1146</pages>
<location>Copenhagen.</location>
<contexts>
<context position="16634" citStr="Sornlertlamvanich and Tanaka 1996" startWordPosition="2581" endWordPosition="2584">nking mechanism of AllTheWeb prefers pages containing hits for several keywords of a disjunctive query. Since this form of corpus construction is straightforward, not all pages in the resulting corpora belong to the given thematic area. Refined Crawl. We wanted to see how results are affected when using less naive crawling methods. For the three areas “Fish,” “Mushrooms,” and “Neurology,” the secondary corpora were retrieved using the following refined procedure: Starting from a small tagged seed corpus for the given domain, we mechanically extracted terminological open compounds for English (Sornlertlamvanich and Tanaka 1996; Smadja and McKeown 1990) and compound nouns for German. Examples are amino group, action potential, defense mechanism (English, neurology), truffle species, morel areas, harvesting tips (English, mushrooms), Koffeinstoffwechsel, and Eisenkonzentration (German, neurology). Each of these expressions was sent as a query to Google. From each answer set we collected a maximum of 30 top-ranked hits (many answer sets were smaller). For each document in the resulting corpus, the similarity with the seed corpus was controlled, using a cosine measure (in practice, almost all documents passed the simil</context>
</contexts>
<marker>Sornlertlamvanich, Tanaka, 1996</marker>
<rawString>Sornlertlamvanich, Virach and Hozumi Tanaka. 1996. The automatic extraction of open compounds from text corpora. In Proceedings of the 16th Conference on Computational Linguistics, pages 1143–1146, Copenhagen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christian Strohmaier</author>
<author>Christoph Ringlstetter</author>
<author>Klaus U Schulz</author>
<author>Stoyan Mihov</author>
</authors>
<title>Lexical postcorrection of OCR-results: The web as a dynamic secondary dictionary?</title>
<date>2003</date>
<booktitle>In Proceedings of the Seventh International Conference on Document Analysis and Recognition (ICDAR 03),</booktitle>
<pages>1133--1137</pages>
<location>Edinburgh.</location>
<contexts>
<context position="1345" citStr="Strohmaier et al. 2003" startWordPosition="198" endWordPosition="201">and for marking orthographic errors in acceptable Web documents, reducing thus the number of errors in corpora and linguistic knowledge bases automatically retrieved from the Web. 1. Introduction The automated analysis of large corpora has many useful applications (Church and Mercer 1993). Suitable language repositories can be used for deriving models of a given natural language, as needed for speech recognition (Ostendorf, Digalakis, and Kimball 1996; Jelinek 1997; Chelba and Jelinek 2002), language generation (Oh and Rudickny 2000), and text correction (Kukich 1992; Amengual and Vidal 1998; Strohmaier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilb</context>
<context position="93301" citStr="Strohmaier et al. 2003" startWordPosition="15077" endWordPosition="15080"> (anderen?) 73,972 Gruss Gruß 51,721 ausser außer 42,410 waere w¨are 37,071 muessen m¨ussen 35,864 imported. In order to further improve a crawled dictionary, we may either eliminate all words that represent entries of the error dictionaries, or we may mark these words for a manual inspection. In what follows we report on an experiment in the area of lexical text correction where these techniques improved: 1. the quality of crawled dictionaries by avoiding erroneous entries, 2. the accuracy of lexical text correction achieved with these dictionaries, using a high-level text correction system (Strohmaier et al. 2003a, 2003b). Correction Strategy. Ignoring details, we used the following correction strategy10: For each token11 of the input text, the most similar words are retrieved from the dictionary as a set of correction candidates. In many cases the token will be found in the dictionary and represents a correction candidate with optimal similarity. Based on (1) the similarity between text token and correction candidate and (2) the frequency of the correction candidate in a corpus, each candidate receives a score. If the score of the best candidate exceeds a given threshold τ, the token is replaced by t</context>
<context position="94585" citStr="Strohmaier et al. (2003" startWordPosition="15283" endWordPosition="15286">d. A good balance between similarity and frequency information in the score is obtained via training. The threshold, which is also optimized via training, guarantees that the input token is only replaced if additional confidence is available that the best correction candidate in fact represents the corrected version of the token. In the experiment described below, the system was trained on a corpus for the domain Mushrooms. The evaluation corpus is from the domain Fish. Hence, the two corpora are disjoint and cover distinct thematic areas. More details on the correction system can be found in Strohmaier et al. (2003b). Garbled Input Text for Correction. We collected 10 texts from the domain Fish, all containing a nontrivial number of errors. Texts were retrieved from the Web, using queries to Google with spelling errors, such as fish anglers infomation realy. We checked that the texts do not contain paragraphs that are also found in the documents of the corpora Fish E introduced in Section 2.2. The concatenation of the 10 texts was used as 10 To simplify evaluation, a fully automated variant of text correction was considered. 11 In what follows, by a token, we always mean a token composed of standard let</context>
</contexts>
<marker>Strohmaier, Ringlstetter, Schulz, Mihov, 2003</marker>
<rawString>Strohmaier, Christian, Christoph Ringlstetter, Klaus U. Schulz, and Stoyan Mihov. 2003a. Lexical postcorrection of OCR-results: The web as a dynamic secondary dictionary? In Proceedings of the Seventh International Conference on Document Analysis and Recognition (ICDAR 03), pages 1133–1137, Edinburgh.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Christian Strohmaier</author>
<author>Christoph Ringlstetter</author>
<author>Klaus U Schulz</author>
<author>Stoyan Mihov</author>
</authors>
<booktitle>Computational Linguistics Volume 32, Number</booktitle>
<volume>3</volume>
<marker>Strohmaier, Ringlstetter, Schulz, Mihov, </marker>
<rawString>Strohmaier, Christian, Christoph Ringlstetter, Klaus U. Schulz, and Stoyan Mihov. Computational Linguistics Volume 32, Number 3</rawString>
</citation>
<citation valid="false">
<authors>
<author>2003b</author>
</authors>
<title>A visual and interactive tool for optimizing lexical postcorrection of OCR results.</title>
<booktitle>In Proceedings of the IEEE Workshop on Document Image Analysis and Recognition, DIAR’03,</booktitle>
<location>Madison, WI.</location>
<contexts>
<context position="5215" citStr="[2003]" startWordPosition="776" endWordPosition="776">construction of dictionaries and related linguistic knowledge bases—which are, after all, meant to be used in different scenarios of automated language processing—becomes problematic if too many erroneous entries are retrieved from Web pages. Obviously, in computer-assisted language learning it is a principal concern that words and phrases from the Web that are presented to the user are error free. In discussions we found that problems resulting from erroneous language material in Web pages for distinct applications are broadly acknowledged (see also Section 4.4 of Kilgarriff and Grefenstette [2003]). Still, to the best of our knowledge, a serious analysis of the frequency and distribution of orthographic errors in the Web is missing, and no general methods have been developed that help to detect and exclude pages with too many erroneous words. In this article we first report on a series of experiments that try to answer the following questions: 1. What are important types of orthographic errors found in Web pages? 2. How frequent are errors of a given kind? For a given error level (percentage of erroneous tokens) -r, which percentage of Web pages exceeds error level -r? 3. How do these </context>
</contexts>
<marker>2003b, </marker>
<rawString>2003b. A visual and interactive tool for optimizing lexical postcorrection of OCR results. In Proceedings of the IEEE Workshop on Document Image Analysis and Recognition, DIAR’03, Madison, WI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kazem Taghva</author>
<author>Jeff Gilbreth</author>
</authors>
<title>Recognizing acronyms and their definitions.</title>
<date>1999</date>
<journal>International Journal on Document Analysis and Recognition,</journal>
<volume>1</volume>
<issue>4</issue>
<contexts>
<context position="1954" citStr="Taghva and Gilbreth 1999" startWordPosition="283" endWordPosition="286">ier et al. 2003b). Other corpus-based methods determine associations between words (Grefenstette 1992; Dunning 1993; Lin et al. 1998), which yields a basis for computing thesauri, or dictionaries of terminological expressions and multiword lexemes (Gaizauskas, Demetriou, and Humphreys 2000; Grefenstette 2001). From multilingual texts, translation lexica can be generated (Gale and Church 1991; Kupiec 1993; Kumano and Hirakawa 1994; Boutsis, Piperidis, and Demiros 1999; Grefenstette 1999). The analysis of technical texts is used to automatically build dictionaries of acronyms for a given field (Taghva and Gilbreth 1999; Yeates, Bainbridge, and Witten 2000), and related methods help to compute dictionaries that cover the special vocabulary of a given thematic area (Strohmaier et al. 2003a). In computer-assisted language learning (CALL), mining techniques for corpora are used to create individualized and user-centric exercises for grammar and text understanding (Schwartz, Aikawa, and Pahud 2004; Brown and Eskenazi 2004; Fletcher 2004a). By Zipf’s law, most words, phrases, and specific grammatical constructions have a very low frequency. Furthermore, the number of text genres and special thematic * Funded by G</context>
</contexts>
<marker>Taghva, Gilbreth, 1999</marker>
<rawString>Taghva, Kazem and Jeff Gilbreth. 1999. Recognizing acronyms and their definitions. International Journal on Document Analysis and Recognition, 1(4):191–198.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donald E Walker</author>
<author>Robert A Amsler</author>
</authors>
<title>The use of machine-readable dictionaries in sublanguage analysis.</title>
<date>1986</date>
<booktitle>In Analyzing Language in Restricted Domains: Sublanguage Description and Processing. Lawrence Erlbaum,</booktitle>
<pages>69--83</pages>
<location>Hillsdale, NJ,</location>
<contexts>
<context position="92068" citStr="Walker and Amsler (1986)" startWordPosition="14888" endWordPosition="14891"> with Crawled Dictionaries It has often been observed that fixed handcrafted dictionaries only have a modest coverage when applied to new texts and corpora.9 Still, for various text processing tasks, dictionaries with high coverage are needed. The generation of crawled dictionaries that collect the vocabulary of appropriate Web pages is one way to obtain a better coverage. As a matter of fact, the quality of these dictionaries suffers from orthographic errors in the analyzed pages. Using the above filters helps to reduce the number of errors that are 9 Kukich (1992) describes an experiment by Walker and Amsler (1986): “Nearly two thirds (61%) of the words in the Merriam-Webster Seventh Collegiate Dictionary did not appear in an eight million word corpus of New York Times news wire text, and, conversely, almost two-thirds (64%) of the words in the text were not in the dictionary.” 332 Ringlstetter, Schulz, and Mihov Orthographic Errors in Web Pages Table 29 Top-ranked errors in German ranked error list and their frequencies. Entry of error list Correct word Error frequency Universitaet Universit¨at 131,494 grossen großen 107,904 koennen k¨onnen 107,730 knnen k¨onnen (kennen?) 87,167 heisst heißt 76,667 and</context>
</contexts>
<marker>Walker, Amsler, 1986</marker>
<rawString>Walker, Donald E. and Robert A. Amsler. 1986. The use of machine-readable dictionaries in sublanguage analysis. In Analyzing Language in Restricted Domains: Sublanguage Description and Processing. Lawrence Erlbaum, Hillsdale, NJ, pages 69–83.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andy Way</author>
<author>Nano Gough</author>
</authors>
<title>wEBMT: Developing and validating an example-based machine translation system using the world wide web.</title>
<date>2003</date>
<journal>Computational Linguistics—Special Issue on the Web as Corpus,</journal>
<volume>29</volume>
<issue>3</issue>
<contexts>
<context position="3469" citStr="Way and Gough 2003" startWordPosition="510" endWordPosition="513">me with their own picture of language is large. This explains that most of the aforementioned applications can only work when built on top of huge heterogeneous corpora. Since the Web represents by far the largest public repository for natural language texts, and since Web search engines such as Google offer simple access to pages where language material of a given orthographic, grammatical, or thematic kind is found, many recent experiments and technologies use the Web as a corpus (Kehoe and Renouf 2002; Morley, Renouf, and Kehoe 2003; Kilgarriff and Grefenstette 2003; Resnik and Smith 2003; Way and Gough 2003; Fletcher 2004b). One potential problem for Web-based corpus linguistics is caused by the fact that words and phrases occurring in Web pages are sometimes erroneous. Typing errors represent one widespread phenomenon. Many Web pages, say, in English, are written by non-native speakers, or by persons with very modest language competence. As a consequence, spelling errors and grammatical bugs result. The character sets that are used for writing Web pages are often not fully adequate for the alphabet of a given language, which represents another systematic source for inaccuracies. Furthermore, a </context>
</contexts>
<marker>Way, Gough, 2003</marker>
<rawString>Way, Andy and Nano Gough. 2003. wEBMT: Developing and validating an example-based machine translation system using the world wide web. Computational Linguistics—Special Issue on the Web as Corpus, 29(3):421–458.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart Yeates</author>
<author>David Bainbridge</author>
<author>Ian H Witten</author>
</authors>
<title>Using compression to identify acronyms in text.</title>
<date>2000</date>
<booktitle>In Proceedings of the Conference on Data Compression,</booktitle>
<pages>582</pages>
<location>Snowbird, UT.</location>
<marker>Yeates, Bainbridge, Witten, 2000</marker>
<rawString>Yeates, Stuart, David Bainbridge, and Ian H. Witten. 2000. Using compression to identify acronyms in text. In Proceedings of the Conference on Data Compression, page 582, Snowbird, UT.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>