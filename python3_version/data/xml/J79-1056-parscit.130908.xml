<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<note confidence="0.879188">
American Journal of Computational Linguistics Microfiche 56
PROCESSING CASE
</note>
<sectionHeader confidence="0.884638166666667" genericHeader="method">
YORICK WILKS
DEPARTMENT OF ARTIFICIAL INTELLIGENCE
UNIVERSITY OF EDINBURGH
PRESENT ADDRESS: DEPARTMENT OF LANGUAGE AND LINGUISTICS,
UNIVERSITY OF ESSEX
COLCHESTER, ESSEX, ENGLAND
</sectionHeader>
<copyright confidence="0.569825">
Copyright 1976
</copyright>
<affiliation confidence="0.523961">
Association for Computational Linguistics
</affiliation>
<page confidence="0.764192">
2
</page>
<sectionHeader confidence="0.339762" genericHeader="method">
ABSTRACT
</sectionHeader>
<bodyText confidence="0.930791055555556">
This paper has three purposes: firstly, to describe how cage
information is distributed in the preference semantics system of
language understanding, and to show what practical use is made of that
information. Secondly, to argue that that way of doing things has
advantages over tao alternatives: (a) putting all case infolmation in
one place, and (b) not using any case information at all, but only the
names of English prepositions. Thirdly, I wish to... use the positions
established earlier to counter some recent arguments by Charniak and
others that the notion of case is not in fact functioning in any
natural language understanding systems that fall within what could be
called the Artificial Intelligence paradigm. A theme that recurs in
the paper is that tendentious distlo,ctions, such as &amp;quot;surface&amp;quot;, &amp;quot;deep&amp;quot;
and &amp;quot;conceptual&amp;quot; case, must be expounded in processing terms if they
are to make sense.
A^.KNOWLEDGEMENTS
The paper owes a great deal to discussions with Eugene Charniak,
Graham Ritchie, Margeret King and Frederick Parker-Rhodes. The
mistakes, as usual, are all my ownt.
</bodyText>
<figure confidence="0.8516035">
3
TABLE OF CONTENTS
Introduction 4
Case in preference semantics . . . 10
Case in formulas • . • 10
Case in paraplates 32
Case extraction inferences ........ . 47
Charniak&apos;s brief on case 58
References. . • ............ . . 67
INTRODUCTION
</figure>
<bodyText confidence="0.995018347826087">
This paper is intended to describe the case handling procedures of
the preference semantics (Wilks 1972, 1975a)system of natural language
understanding by giving a more complete account than in previous papers,
and in particular I shall distinguish the application of case to the
parsing of preposition structures in English fron subsequent inferences
using case(, Case information in this system is stored in two different
places: in what are called formulas and paraplates respectively. 1
shal1 argue a reasonable.processing account of case requires this.
shall aontrast this position brief:Ty with those of Schank and Riesbeck,
who seem to me to advocate a singl* type of case information, and a no
case view respectively. More importantly, I&amp;shall argue against a
recent position of Charniak that Artificial Intelligence (Al) natural
language systems do not in fact make any use 440 ease. I shall discuss
his arguments and urge that, although there are systems to which his
arguments do apply, they do not apply to the one described here, at least
hot if case is to have anything like its normal meaning.
The use of case information in Al comes from the work of Fillmore
(1968), in which the underlying structute of a sentence is displayed,
in essence, as an array of argument values for a predicate, where the
^redir:ate is the verb of the sentence. The corresponding values are
the case parts of the sentence, each of a different case type, and,
for any given verb, the general pattern of cases it takes is called
the case frame of that verb.
</bodyText>
<page confidence="0.3694455">
4
5
</page>
<bodyText confidence="0.5825725">
Thus, if the horizontal lines denote the verb predicate, the case
frame for &amp;quot;break&amp;quot; could be written as:
</bodyText>
<sectionHeader confidence="0.477845" genericHeader="method">
OBJECT (AGENT) (INSTRUMENT))
</sectionHeader>
<bodyText confidence="0.782698">
which means that this verb must take an object, and can but need not
take an agent and instrument case. These latter two cases are option-
al here and that optionality is indicated by the parentheses round the
case names. So, on this view:
</bodyText>
<listItem confidence="0.758193">
(1) John broke
</listItem>
<bodyText confidence="0.9750164">
would be ill-formed because it gives us only the (optional) agent of
breaking, which is John, but omits the obligatory object that is broken.
This analysis can be contrasted with &amp;quot;hit&amp;quot;, whose frame would be
OBJECT (AGENT X INSTRUMENT))
where the overlapping brackets mean that the two cases,agent and
instrumental are semi-optional, in that at least one of the two must
appear. Thus
(2) The window hit
would be ill-formed on that view because, although it contains the
obligatory object, it contains neither the agent nor the instrument
of the hitting. However,
(3) The window broke
would be perfectly well—formed with respect to the frame for &apos;break&apos;.
This sort of case analysis is normally Called deep case &apos;to distinguish
it from the surface case manifestation of word inflections in Greek,
Latin and German etc. It should be noted, too, that here, as through—
out the paper, no attempt is made to stick to the actual list of case
names used by any author, since thesE vary so much from one to the next,
and no point of principle hangs on any particular list of cases.
Fillmore&apos;s linguistic theory is, naturally enough, a generative
one in that the procedures it suggests would be those for generating
sentences from an underlying structure of a verb plus its case argument
values. What the surface form would be, given any particular under—
lying structure, is determined by what Fillmore calls the &amp;quot;subject
selection rule&amp;quot;, which says that, if there is an agent, that will be
the subject of any active sentence produaed; if there is no agent but
there is an instrument, then that will be the subject and so on.
In this paper, I hhall concentrate, as is normal if not desirable
in Al and computational linguistics, on questions of analysis rather
than generation. The general problem in analysis (that is not emphasised
in generation) is that of the selection restrictions on the
cases, which can be illustrated by looking at the simplest of the
systems using case analysis (Simmons 1973). Simmons wishes to map
all of the sentences (4) r (7) onto the same semantic network
because all four, in some sense, refer to the same event:
</bodyText>
<page confidence="0.659851">
7
</page>
<listItem confidence="0.9086065">
(4) John broke the window with a hammer
(5) John broke the window
(6) The hammer broke the window
(7) The window broke
</listItem>
<bodyText confidence="0.9037256">
All are perfectly well-formed with respect to the frame for &amp;quot;break&amp;quot;
given earlier. Simmons parses such sentences using an augmented trans-
ition network (Woods,1970) and a notion of case paradigm due to Celce-
Murcia (l972). This paradigm, for active forms of a verb like &amp;quot;break&amp;quot;,
has the form:
</bodyText>
<figure confidence="0.69415725">
(8) AGENT * OBJECT INSTRUMENT
AGENT * OBJECT
INSTRUMENT * OBJECT
OBJECT *
</figure>
<bodyText confidence="0.898138379310345">
The lines of (8) are patterns that must match input word strings
in left right order so as to assign the cases they contain. The lines
of (8) match each of (4) - (7) in turn, where marks the position of
the verb (break) in each line of the paradigm. The lines of (8) are
no more than the possible case combinations allowed by the caSe frame
for &amp;quot;break&amp;quot; toether with an analytic version of the &amp;quot;subject selection
rule&amp;quot;, which always makes the Agent the first (subject) item in any
line of the paradigm (8) in which it occurs. There is no naed for the
lines of (8) to be ordered in their application to input sentences,
S
although there is one additional item of information required before
they can be applied at all: the selection restrictions. These tell
us what it is to be an agent of &amp;quot;break&amp;quot;: in Simmons&apos;s scheme a noun
marked ANIMATE. The selection restrictions attached to the cases in
(8) are essential to the application of the paradigm, for only thus
could we know that &amp;quot;John&amp;quot; in (4) was matched by AGENT in the first
line of (8). It should be noted that the restriction of AGENT in (8)
to nouns m&apos;arked ANIMATE is not necessarily a restriction peculiar to
&apos;break&apos;, but rather to the class of verbs for which (8) is the (active)
paradigm. Conversely, the ANIMATE restriction on AGENTs in (8) is
not necessarily on AGENTS as such although it might turn out to be so.
These points will be important when we come to Charniak&apos;s arguments
later.
Notice too, that there are not two different ways in which a
sentence can be ill-formed with respect to the paradigm: one with
respect to selection restrictions and one with respect to the case
frame (as has been argued by Bruce l975). The case frame expressed
by the paradigm, and the corresponding selection restrictions are
indivisible. So, for example,
</bodyText>
<listItem confidence="0.364542">
(9) John broke
is ill-formed with respect to the case frame for &amp;quot;break&amp;quot; as explained
earlier. However, if we look at that fact in procedural terms, such
9
</listItem>
<bodyText confidence="0.995291333333333">
as those provided by Simmons&apos; paradigm, we cannot deem that failure as
one of matching a line of (8) as distinct from (Bruce&apos;s view) not
meeting the selection restrLctions PHYSOB , say, on the case OBJECT
on the fourth line of (8). For the selection restriction associated
with a case defines what it is to match a corresponding line of (8).
The only way in which a sentence could independently fail to match any
line in the paradigm of (8) would be the trivial one of having some
number of arguments (say, four or zero) not corresponding to any line
of (8).
</bodyText>
<page confidence="0.451943">
10
</page>
<sectionHeader confidence="0.31911" genericHeader="method">
CASE IN PREFERENCE SEMANTICS
Case in formulas
</sectionHeader>
<bodyText confidence="0.95921485">
This system builds meaning structures and inference rules from
eighty primitive semantic elements. These are of eight types, one of
which consists of the case elements as follows:
*DIRE the general DIRECTION case element. Like all the primitive
elements whose names are preceded by an asterisk, it is equivalent to
a class of other primitives, in this case the following four:
TO direction towards
FROM direction away from something
UP in an upwards direction
THRU direction through some other thing.
INST the INSTRUMENT case, indicating the instrument used in some
action
FOR the RECIPIENT case, indicating the normal recipient of an
action
IN the CONTAINMENT case, indicating what contains some other thing
LOCA the SPATIAL LOCATION case, indicating the place of an activity
or thing
TLOCA the TIME LOCATION rise, indicating the time location of an
activity
GOAL the PURPOSE case, indicating the purpose of an activity
</bodyText>
<figure confidence="0.526682">
11
SOUR the SOURCE case, indicating the substance from which some
object came
WAY the MANNER case, indicating the manner or method by which an
activity was performed
OBJE the OBJECTIVE case, indicating the object of an action
SUBJ the AGENT case, .indicating the instigator of an action,
&apos;subject&apos; here being taken to refer to a semantic, rather than
a surface, subject
WITH the ACCOMPANIMENT case, indicating the accompaniet of an entity
POSS the POSSESSIVE case, indicating who owns some thing
</figure>
<figureCaption confidence="0.29136075">
These case primitives are ultimately the names of relations in
the system of semantic representation, just as in the familiar semantic
net representations (Simmons 1973) that indicate the instrumentality of
say, the action of striking by a labelled arc such as:
</figureCaption>
<bodyText confidence="0.966045571428571">
strike 4hammer
INST
The representations described here are not of this superficial form
for three reasons:
a) Semantic nets do not immediately suggest their associated
processes, whereas the representations here are intended to be
directed towards the processes that operate on them.
</bodyText>
<equation confidence="0.559828">
b) There is a clear distinction in the present system of represent—
12
</equation>
<bodyText confidence="0.967691034482759">
ation between th knowledge stored and the patterns sought in language,
on the one hand, and the language text actually represented found, on
the other, where the latter may not exactly match what was being looked
for,. This distinction is not always easy to work into a semantic not
structure.
c) The present system of representation is intended to be more
&amp;quot;habitable&amp;quot; in Watt&apos;s (1968) sense of providing a language of semantic
representation that is appropriate to the way humans express themselves.
That is a highly subjective notion, perhaps, but here it is taken to
require at least a dynamic, or readable structure, which nets do not
havetThisrequirement rests upon another assumption: that our
representation must have the &amp;quot;one thing after another&amp;quot; feature that
texts have, rather than being static and timeless like most semantic
nets (thoughNorman and Ruiffinelhart (1975) have constructed nets
containing ordered assertions, though these are no longer semantic
nets in the classic sense).
The case primitives function within a semantic dependency
grammar (Hays 1964), intended to express the meaning of word senses
and, by extension, of texts. Each of the case primitives above will
have a dependent, which is a type of entity for all the case priM—
itives except WAY and GOAL, which take an assertion as dependent.
The case primitive and its dependent (entity or assertion) form a
case group which is in turn dependent on a primitive action (except
13
for WITH and POSS which depended on an entity and may therefore
.be only semi-cases). This is best seen by example of the first
structure in the system, the formula which expresses word sense in
the dictionary° The formula for the action sense of &amp;quot;break is as
follows:
</bodyText>
<equation confidence="0.8906065">
(10)
(*HUM SUBJ)(*PHY OB OBJE)(NOTWHOLE KIND) BE)CAUSE)GOAL)(THING INSTOTRIK
</equation>
<subsectionHeader confidence="0.832307">
The general structure of such formulas has been explained in
</subsectionHeader>
<bodyText confidence="0.995999586206897">
Wilks (1968, 1972, 1975a, 1975b). They are intended to express the
interlingual meaning of the sense of the word, and the primitives that
comprise them are intetded to be interlingual (as are Fillmore&apos;s cases)
even though they happen to be mostly Anglo-Saxon monosyllables.
Formulas are trees of left-rit;nt dependencies but the dependence is
interpreted differently according to the type of the subformula.
14
We have already mentioned the dependence of an entity (or assertion)
on a case primitive to form a case group, such as (*HUM SUBJ), which
means that an agent is (preferably) human. These case groups (except
WITH and FOSS) all depend rightwards on some action, so that (*HUM SUBJ)
in (10) depends on the main primitive actioh of the whole fokmula STRIK.
The whole formula is to, be interpreted as &amp;quot;breaking&amp;quot; being a STRIKing,
done preferably to a *PHYSOBJect, and by a *HUMan SUBJect, using an
INSTrument that is a THING and with the GOAL of CAUSing the *PHYSOBJect
to BE NOTWHOLE.
This interpretation can be constructed from the following _general
rules for the building and interpretation of formulas:
i) Each subgroup in the formulaconsists of a left member depending
on a right member, and left or right may be either a single primitive
element or another group. Thus, in (*HUM SUBJ) we have a case group,
known to be such because the rightmost member of its pair is the gover-
nor and SUBJ. is the primitive element naming the Agent case. One
level higher (*HUM SUBJ).depends on STRIK, the main primitive of the
whole formula, to form an assertion group. Similarly, each of the
other main subparts of the formula (whose heads are respectively
OBJE, INST and GOAL) depends on STRIK to form in each case an action
group which always consists of an action and any case group that is
not an Agent group (nor a POSS or WITH group).
</bodyText>
<page confidence="0.636109">
15
</page>
<bodyText confidence="0.980675097014925">
ii) The dependency within a group is interpreted differently accord-
ing to the type of the group. Within an action group ((*PHYSOB OBJE)
STRIK) the dependence is that of an action&apos;s object on the action and
OBJE does no more than name that relation. In the case&apos; group
(*PHYSOB OBJE) the relation internally is no more than the preferred
type of case filler (physical object) on the name of the case. With
a substantive group like (LINE THING) the dependence is inter-
preted as specification, i.e. linear object. *PHYSOB is a name of a
class of primitive elements which includes THING, but also other
primitives like MAN. In case subformulas, e4c-ept GOAL and WAY,
the leftmost item is always the preferred entity type, to function in
the corresponding rightwards-named case. This leftmost item is, if
you will, the &apos;selection restriction&apos; for that case role for whatever
action is being coded: i.e. in the formula above, for &apos;break&apos;. The
reader should not confuse this with being a restriction for the
associated primitive STRIK. This point will be discussed later, but
for now the formula is to be taken as no more than a formal expression
of the meaning of the action &apos;break&apos; that can be used in subsequent
inference and parsing routines. However, &amp;quot;selection restriction&amp;quot;
here is to be read as&apos;preferring the agent of &amp;quot;break&amp;quot; to be human, &apos;,say,
I have described elsewhere (Wilks 197 c)how whet text representations
are assembled that will be only a preference on the agent of &amp;quot;break&amp;quot;,
and the system will not baulk at assembling a representation for &amp;quot;The
dog broke his bowl&amp;quot; where the agent is not human, though the system
16
would prefer a human agent if it could find one. I write of
&amp;quot;assembling representations&amp;quot; because the elements like *HUM in the
formula above are not slots to be filled by, in this case, the agent
of some breaking. The formulas are &apos;blueprints&apos; for how represent-
ations are to b! assembled elsewhere from whole formulas. When a
representation for &amp;quot;The man broke ..the window&amp;quot; is assembled the whole
formula above (together with a PAST element) will stand at some app-
ropriate node of a higher-level representation.
It is this feature of the system that explains why the head, or
principal, element of a formula is easily accessible at one end of it
--rather than buried in the center as it would be if the formula were
in SVO form, rather than SOV form, as above. Formulas exist for all
parts of speech so, for example, a formula for an entity will have not
a primitive action head like STRIK, but an entity head like THING or MAN
or STUFF (for substance). Note too, that the preference restrictions
for case need not be simple as above but can be as complex as required,
including further case restrictions recursively. So, for example, if
we had a formula for &apos;sew&apos; it might well have a case sub-formula
WITH (LINE THING)
(rimu ART)
INST)
17
to be interpreted as: done with an INSTrument that is preferably a
LINEar THING WITH (accompaniment case) an aperture (THRU PART).
iii) In order to make the formula &amp;quot;habitable&amp;quot; the agents and objects
are compressed, in that they can be agents and objects for more than one
primitive action. Agents and objects of actions in a formula are
normally sought to the left of the primitive action element. If the
whole formula is for an action (as above for &apos;break&apos;) the two left-
most subparts of the formula will always be the preferred agent and
object of the head primitive, in that order. For any actions
within the formula (such as CAUSE in the formula for &apos;break&apos;) its
preferred agent and object are normally the next agent and object to
its left -- which of course, as in the case of &apos;break&apos; may turn out
to yield the same entity as the preferred agent of the whole formula,
though this need not be the case. Moreover, in the case of actions
within a formula (i.e. not constituting the head) the agent need not be
marked though the object must be if it is an entity type. This
proviso does not apply in the formula above since the agent is the
same for CAUSE and STRIK, and CAUSE takes an assertion as object, but
within a formula a group (MAN STRIK) would always be interpreted as an
assertion group, MAN being an unmarked agent of STRIK, and not as a
man being struck which would require a marked object in the action
group i.e. ((MAN OBJE)STRIK).
All this implies that some of the subgroups in the formula for
18
break&apos; are not the apparent ones ie,e. the dependent of GOAL, as
mentioned earlier, must be an assertion, whereas it is bracketted to
only (((NOTWHOLE KIND)BE)CAUSE) which can only (during inference
procedures called &apos;extraction&apos; to be described later) become an
assertion group by the addition of an agent found to the left namely
(*HUM SUBJ.). CAUSE also requires a dependent object that is an
assertian (hencg (*PHYSOB OBJE) will not do as its object taken alone)
and can take, as dependent of that group, an entity to its left marked
either OBJE or SUBJ whichever is closest. Hence the dependent of
((NOTWHOLE KIND)BE) is *PHYSOB and the &amp;quot;real&amp;quot; dependent of CAUSE
(found by inference) is(*PHYSOB ((NOTWHOLE KIND)BE)) and the real
dependent of GOAL is ((*HUM SUBJ)(*PHYSOB((NOTWHOLE KIND)BE)))CAUSE).
This compressiot of expression can be argued to be &amp;quot;habitable&amp;quot;
for a formula maker. It also avoids to a large extent the defect
of some fuller conceptual representations of this general type, pointed
out by Sandewall (1972)? that if the entities like (*HUM SUM) are put
into the representation many times but are intended to refer to THE
SAME HUMAN, then this must be indicated as it frequently was not.
Where such identity must be specific in formulas, but cannot be achieved
by the above compressed expressions, it is obtained by means of the
primitives SAME and NOTSAME: the same (or not), that is to say, as
the first encountered token of the associated primitive when working
in from the top level of the formula. One point that should emerge
19
from this is that those who want to use case names as the names of
relations, as in semantic nets, and also deal with surface language,
must be prepared to extract a number of such relations from a single
occurrence of certain formula subparts. Thus, the formula for &apos;break&apos;
above would contain not only the net links:
*HUMSTRIK
*HUM CAUSE
but also the quite other type of link
SUBJ break
which asserts that the preferred agent of breaking will be human.
However the top link must not be interpreted as saying that the
preferred agent of the primitive STRIK is human, because that is not
an assertion in the system at all. All the top link can say is that
the primitive action STRIK sometines takes human agents. In some
other formula, for another surface action whose underlying primitive
was also STRIK, the preferred agent might be *ANI, a wider class.
Hence, in this system there are not specific semantic restrictions ori.
the dependents of the primitives, as in, say Schank (1973).
In thq present system, such a restriction could emerge only
inductively from a survey of a considerable body of formulas. It is
worth clarifying this issue here: what do underlying representations
constitute case frames for? The issue is related to two others:
20
first the different roles of case frames in analysis and gentration,
and secondly, the procedural opposition between case frame blueprints,
like formulasi and the &apos;tuner&apos; representations of generative semantic-
isa trees and Schankian &apos;conceptualizations&apos;.
First , let us note that it has neyer been as clear as might be
wished what case frames are for in Fillmore&apos;s work. The normal intro-
ductory account given earlier states that they are for surface verbs
like &apos;break&apos;, but in Fillmore (1975) he argues that it is not so simple
because he would want to admit sentences like:
(12) Noon found Harry sleeping
as perfectly well-formed, while not taking account of the usage in the
agentive part of the case frame for &apos;find&apos;. On the other hand, he
wishes to avoid the position of saying that case frames are for under-
lying verbs like semantic primitives in formulas, or the underlying
verbs of Generative Semanticsrepresentations which avoid cases alto-
gether, as in the following for &amp;quot;I broke the glass with a rock&amp;quot;.
</bodyText>
<equation confidence="0.942532">
(13)
</equation>
<bodyText confidence="0.950703833333333">
I use rock enable I act cal se glass whole change glass whole not
I have followed Fillmore&apos;s (1975) device here of making (13)
easier to read by putting it in SVO rather than the usual VSO
(predicate first) form. It will be seen that it is pretty similar
to the above formula for &amp;quot;break&amp;quot; except that, in order to avoid case
notation, they have had to resort to such philosophically suspect
devices as separating the act of using from the basic &apos;act&apos; inside
the tree, even though there was really only one action in the whole
business.
An extreme version of the view that case frames belong only to
the underlying structure is Schank&apos;s (1973) view that case frames are
for underlying primitive acts and that all cases that a primitive act
takes, it takes obligatorily.
21
Thus, for example, Schank&apos;s primitive act TRANS expresses the
22
underlying content of such actions as &amp;quot;buy&amp;quot;, &amp;quot;sell&amp;quot; and &amp;quot;take&amp;quot;, and *he
would begin the representation of
</bodyText>
<listItem confidence="0.71317375">
(14) The man took a book
as (S-chank 1973, p. 196)
0
(15) man 4-44 TRANS book
</listItem>
<bodyText confidence="0.992799121212121">
where the arrows labelled &amp;quot;R&amp;quot; and &amp;quot;0&amp;quot; indicate Recipient and Objective
case respectively, and the Agentive case is in fact indicated by the
double arrow linking &amp;quot;man&amp;quot;, the agent, to the act TRANS. The details
here need not concern us, the point being that Schank is setting up
case frames, not for surface verbs of English, like Fillmore (1968),
but for these primitive acts, of which he has about twelve.
From the point of view on ease expressed in the system described
here, both these strong positions have drawbacks, indeed they have
complementary ones. In the first place, Fillmore&apos;s (1968) system,
with the aid of which he wants to contrast verbs by means of their
frames, only becomes significant if interpreted with the aid of some
non-surface representation of actions. So, for example, Charniak has
pointed out (personal communication) that the earlier contrast of the
frames for &amp;quot;hit&amp;quot; and &amp;quot;break&amp;quot; is significant only if there is some
common, underlying, action that the two verbs share, and which can be
thought of as being substituted for the horizontal line in the frames.
to
23
For, if that is not so, then the contrast of the frames for &amp;quot;kill&amp;quot; and
&amp;quot;murder&amp;quot; is of no more interest than the contrast between &amp;quot;kill&amp;quot; and
&amp;quot;remember&amp;quot;, or any other random verb. In other words, it is only
because the two vt.rbs already have something in common, oVer and above
their case frames, that the comparison has point. Thus, the contrast
of the case frames of only surface verbs is, if unsupplemented, un—
satisfactory.
Conversely, there may be certain problems inherent in Schank&apos;s
attempt to both (a) relate surface verbs to underlying primitive
actions, and then discuss only the latter, and (b) at the same time
make all participants in the case frames for primitives obligatory.
So, for example, Fillmore would express the case frame for &amp;quot;see&amp;quot; as
(OBJECT DATIVE) and for &amp;quot;learn&amp;quot; (OBJECT AGENT). While Schank (1973
pp. 220-1) expresses both verbs by an underlying primitive MTRANS
together with a case frame, for the primitive, containing at least A,
0 and R (Fillmore would call R by D). The individual letters for
cases assigned by different authors need not detain us, nor need their
contrasting interpretation of the case names, for the present point is
the perfectly general one that, whether or not Fillmore is right with
this particular verb pair, it is highly likely that there are pairs
of surface verbs like this one whose surface case frames are different
and whose Schankian primitive act is the same.
It follows-from (b) above that, for Schank, their &amp;quot;deep&amp;quot; case
24
frame must therefore be the same too. Since, for him, every surface
verb has a main act expressing it, there is clearly going to be a
problem with this consequence of (b) unless he is prepared to say that
there is no necessary relation at all between a verb&apos;s case frame and
the case frame of its corresponding primitive act. It may well be
possible to defend such a position -within his theory, but he will still
be left with the difficulty that verbs with quite different semantic
behaviour (for Fillmorian case differences are not superficial) have
identical behaviour in his system. There is bound to be a lack of
discrimination consequent upon Schank&apos;s all-cases-are-obligatory view
unless some careful avoiding action is taken, that he has not yet, to
my knowledge embarked upon.
However, Schank would probably not wish to take advantage of this
last possibility because he does not himself hold the view that
conceptual case &amp;quot;is entirely independent of surface structure consid-
erations&amp;quot;, as was wrongly attributed to him by Bruce (ibid.p0338),
and for the simple reason that he intends that case structure in
conceptualizations shall resolve the case ambiguities present in
English preposition constructions. Schank (1973) makes this quite
clear, and I shall return to it when discussing preposition construct-
ions in the next section. Thus, since Schankian case frames for
primitives are not independent of all surface structure considerations,
he does have the problem above presented by the contrast of &amp;quot;see&amp;quot; and
&amp;quot;learn&amp;quot;.
</bodyText>
<page confidence="0.644252">
25
</page>
<tableCaption confidence="0.585937833333333">
The burden of the last arguments have been to show that three
different positiofts on the question of &amp;quot;what are case frames for9&amp;quot;
are unsatisfactory:
(i) that they are simply for surface verbs : Fillmore&apos;s 1968
position, argued against along the lines sketched above as early as
Schank (1969),
( ii) that underlying structures containing primitive actions do not
require case frames at all: the Generative Semantics position, for
example, Postal (1971),
(iii)that underlying structures containing primitive actions are case
frames for those primitives and, moreover, are all obligatory. case
frames: Schank&apos;s position just discussed.
</tableCaption>
<bodyText confidence="0.9727900625">
Let me now restate the position of the present system, as it
concerns formulas. Formulas are meaning structures for surface word
senses. Formulas for surface verbs can be interpreted as case frameg
for the verbs, in that they contain case subparts at the top level
(i.e0 depending directly on the head action primitive) that the formula
maker has considered necessary to express as part of the meaning of
the verb. Thus, the formula for &amp;quot;break&amp;quot; given earlier (10) contains
case subparts at the top level (i.e0 depending directly on the head
primitive STRIK) INSTrument, GOAL, OBJect and Agent(=underlying SUBJect).
The formula maker is concerned only with specifying, as best as he can,
the semantic preferences of the particular surface word in question.
26
If it were a verb he would semantically specify the preferred agent,
say, of that action, with. no implicit reference to agenthood as such.
The same goes for the other cases: he would attempt to put those cases
into a formula that he thought necessary to specify the meaning of the
</bodyText>
<listItem confidence="0.97755775">
action° Consider
(16) He lives in Lugano
and
(17) He drank some Barbera in Lugano.
</listItem>
<bodyText confidence="0.629389378378378">
It is logically true that one must, if one drinks, do it some—
where, but no one woad hold that the notion of location was involved
in explaining the meaning of drinking. However, one might well hold
that it was impossible to explain the notion of living, in the sense
of inhabiting, without making clear that it was done in some location.
Thus only in the formula for &amp;quot;live&amp;quot; would we expect a location case
subpart (°.. .LOCA).
This description of the insertion of case specification into the
formula for some given surface verb does not correspond in any clear
way to Fillmore&apos;s obligatory or optional distinction, though it seems
clear that any formula should contain at least Fillmore&apos;s obligatory
cases for that surface verb and, as we saw , (10) above, for &amp;quot;break&amp;quot;,
does this, since the qnly obligatory case for &amp;quot;break&amp;quot; is object.
The main reason for this difference remains the essentially
generative quality of a Fillmorean case frame. Much sophisticated
27
linguistic argument in the past decade has gone into 4tempting to
prove that the term &amp;quot;generate&amp;quot; is neutral between &amp;quot;analyse&amp;quot; and
11produce&amp;quot;0 One of the best efforts is to be found in Lyons&apos; (1968,
p.155)0 But, although it is easy to see the productive role of, say,
Fillmore&apos;s subject selection rule (SSR), it is very hard to see what
analytic significance it could have; the surface subject is, after all,
usually revealed by simple methods not requiring the notion of case.
The SSR tells one how to choose the subject given the case structure
and in that sense is inherently generative in its non-neutral sense
meaning &apos;productive&apos;. The system presented here however is inherently
analytic (its productive aspects have been described in(Herskovits
(1973)), and this accounts for a great deal of the difference of
approach to the notion of meaning structure a Those with practical
acquaintance with sentence analysis and production will need little
persuasion that the two processes are not in any sense simple inverses
of ea-ch other (nor does Fillmore himself believe they are, see(Fill-
more 1972 p. 23).
Charniak has argued (1975) that the method of formula coding
results in top level case subformulas that cannot appear in the
surface form of the verb, and he cites (ibid0 p.16) the formuia&apos;for
&amp;quot;drink&amp;quot;:
</bodyText>
<equation confidence="0.651353333333333">
28
(18)
(*ANI SUBJ)((FLOW STUFF)OBJE)(SELF IN)((MAN(THYtil PART))T0)(MOVE CAUSE)
</equation>
<bodyText confidence="0.991258289473684">
where the containment group (SELF IN) indicates that the liquid object
(FLOW STUFF) is moved into the animRte agent (SELF), and the direction
group ((MAN(TVRIJ PART))TO) indicates that this movement is in the
direction of a human aperture„ These two groups appear at the top level
of the formula, and thus dependent on the head primitive action CAUSE.
However, later inferential procedures of extraction (see below) would
shows as with &amp;quot;break&amp;quot; (10) earlier, that the real dependency of the two
groups wAs on MOVE° However, the requirement is observed that the
Fillmorean obligatory cases (only Agent presumably) for &amp;quot;drink&amp;quot; appear
at the top level, and the other case groups - containment and direction -
most certainly could appear at the surface with &apos;drink&apos; as in:
(19) John drank the beer up through his nose with a straw and into
his brain0
where both cases appear at the surface. Charniak is confusing what
29
can appear at the surface with what it would normally be redundant to
say. The difference is made cleaT in (19) if we choose to say some-
thing remarkable, and false.
In this section on formulas I have tried to justify the inter-
mediate role of case description in formulas: by claiming BOTH that
they give a meaning structure that, under inferences processes, can
provide a real underlying structure for text AND that they must include
enough of the surface case behaviour(of the verb meaning being expressed)
to give procedural power in analyzing the input surface sentences. It
seems to me essential to preserve both these roles, and to avoid the
path taken, in their different manners, by Shank, Fillmore and the
Generative Semanticists, Qf disp1a7Ying a full underlying structure
directly without the processes that reach it. I argued earlier that
each of those three gave only a filled-in onfinal,structure which in
itself gives no hints as to how you get there.
The generative linguist argues, Qf course, that he is not trying
to reach such a stiucture at all, but to generate surface structures
from it, and the &amp;quot;artificial intelligence critique&amp;quot; of this aspect of
generative linguistics is familiar by now (my own version is in Wilks
1975c)0 The way in which Schank emphasises a filled-in structure is
a quite different and more interesting natter, His conceptualizations
are filled-in structures, with no procedural capacity. However, at
the back of his early papers (i.e. the Appendix to iSchank et al. 1970)
</bodyText>
<page confidence="0.654691">
30
</page>
<bodyText confidence="0.996369">
are dictionary entries or skeletons for conceptualizations, which
contain selection restrictions on the slots in the conceptualizations
(and in (Schank 1973, p. 229)). These objects are much more fund-
amental to his approach than is generally realized, for they do give it
more procedural power than one could envisage from looking only at the
final conceptualizations.
Their role is somewhat like that of the formulas for actions: they
are blue-prints showing what the system would like to be the usage and
context of a given action. But the difference from formulas is this:
the chank dictionary entiy has slots, marked, say, HUMAN which, when
they are all filled by surface Words yield the filled-in concept-
ualization. The formula too has case specifications, like (*ANI SUBJ),
but these are not slots.to be filled in, but directions as to how to
fill in an agent slot in a higher order entity called a template which
consists of whole formulas: essentially, a network based on an agent
formula, an action formula and an object fdrmula (although any of these
may be dummies). Schank has no equivalent to formulas for nouns or
adjectives, or any part of speech other than verbs.
Thus, if the formula (10) for &amp;quot;break&amp;quot; is placed at the action node
of a template, its agent preference tries to ensure that a formula for
an animate entity will go at the corresponding agent node. There is
a metric for this initial parsing and matching described in (Wilks
1972, 1975a,. 1975b3. The role of the formulas as data for parsing
</bodyText>
<page confidence="0.970611">
31
</page>
<bodyText confidence="0.997932739130435">
here is as follows: templates, matched onto sentences and clauses
expressed as strings of formulas, try to pick up surface subjects and
use the formulas as blue prints for selecting the best template, by try-
ing to ensure that the surface subject is also the agent. In the
initial matching of the &amp;quot;The hammer broke the window&amp;quot; this will not be
possible because the formula for &amp;quot;hammer&amp;quot;, the surface subject, will be
placed at the first (or agent) node of the template. However, since
the formula for &amp;quot;break&amp;quot; will be at the corresponding action noUe the
system will know at any point in later processing that the surface
subject is not the underlying (anibate) agent as preferred by the
&amp;quot;break&amp;quot; formula at the action node of the same template. This clash
will, as we shall, see, lead to later extraction inferencing that deals
&apos;with the etgative paradigm in a uniform manner. But this clash is
only observable in a system which builds structures that retain their
preferences built in: i.e. not in one like Schanks&apos; that just fills in
slots in dictionary entries. Fillmore&apos;s anomalous &amp;quot;Noon found Harry
sleeping&amp;quot; causes no trouble here: the formula for &amp;quot;find&amp;quot; expresses a
preference for an animate agent. In the template for this sentence,
that is not satisfied by the surface subject (a formula for &amp;quot;noon&amp;quot;,
with a head (WHEN POINT)) but no case frame is violated.
Formulas are not used as parsing mechanisms to deal with
preposition structures in English. This is done by other structures
called paraplates, to which I will now turn, so as to giv( a fuller
</bodyText>
<page confidence="0.455124">
32
</page>
<bodyText confidence="0.889821928571429">
account of them than in the past, in (Wilks 1975a)0 In what follows
templates will be written in short form: not as triples of complex
formula trees, but as square brackets round the surface phrase or
clause that the template is for. The words are clustered within
the brackets so as to represent the three nodes of the template.
Case in paraplates
Paraplates are structures employed to assert a connectivity
between two templates, typically between a template representing a main
clause and one representing a prepositional phrase. Thus, if we were
analysing
(20) John left his clothes at the cleaners
which would be represented initially in the system by two templates,
the correct paraplate, when applied, would assert a spatial location
case ( LOCA) tie between the two templates as follows:
</bodyText>
<listItem confidence="0.416529333333333">
(21) [John left his + clothes]
LOCA.1...1■1111b*MINSINIONMIN.M•Pwil.nj
.11[( = Dummv Agent) at the + cleaners]
</listItem>
<bodyText confidence="0.8479768">
Each paraplate corresponds to one of the cases in the inventory, which
is the same as the inventory used to construct formulas. Many para-
plates, however, may correspond to a single case. A paraplate has the
form of two template-skeletons connected by a label indicating the
case expressed by the paraplate, where by template-skeleton I mean an
</bodyText>
<page confidence="0.808704">
33
</page>
<bodyText confidence="0.997716823529412">
entity like a template except that, instead of a foLmula at each of Its
three nodes, it has a function ranging over formulas. Any template
that matches either part of the paraplate must have formulas that
satisfy the functions in the corresponding part of the paraplate. If
the functions in both parts of a paraplate are satisfied by a pair of
templates (and the template for the prepositional phrase is normally
considered to be the right—hand part, though this need not correspond
to actual order of occurrence in text) then the case label of the para—
plate is asserted in the representation as holding between the two
templates.
In earlier descriptions I have distinguished paraplates from
inference rules, but in fact they can perfectly well be seen as a form
of inference rules as Schank has argued. However, the essential role
of paraplates is as parsing structures for prepositional phrases.
So, if we were representing &amp;quot;John picked up the statue made oui
of wood on the table after lunch&amp;quot; we would expect paraplates for the
various case dependencies to create ties as follows:
</bodyText>
<equation confidence="0.970593555555555">
(22)
picked + up the + statue]
-4,
( [ ED made + out + of wood 3
SOUR
[ 0 on the + table ]
LOCA
[John
E after lunch
</equation>
<bodyText confidence="0.941248125">
TLOCA
where SOUR indicates source case, and TLOCA, time location.
34
The preference semantics system applies paraplates immediately
after matching templates and choosing the &amp;quot;most preferred&amp;quot; ones (Wilks
l975). In operation, the system inputs small English paragraphs on-
line, produces a semantic structure for them, and from that generates a
French translation (Wilks 1973b, 1975a; Het6kovits 1973). Thus, as
regards English, the system is an analytic one, and is faced with the
standard problem that a single English preposition cat introduce many
cases (and can, of course, often be translated by a number of French
repositions depending on the case).
Let us consider &amp;quot;by&amp;quot;, functioning in the following sentences, all
of which may be considered to start, like (23), with &amp;quot;He left Lugano
by ...&amp;quot;, where I have indicated the apparent (though disputable) case
of the last clause at the right of each line:
</bodyText>
<listItem confidence="0.99069">
(23) He left Lugano by courtesy of the police SOUR
(24) by Comano 7110
(25) by car INST
(26) by stealth WAY
(27) by Monday night TLOCA
(28) by foLlowing the arrows WAY
(29) by stezling a boat INST
</listItem>
<bodyText confidence="0.841490333333333">
Paraplates are six-place entities, not all of whose places need be
filled, corresponding to AgerLt-of-first-template, Action-of-first-
template, Object-of-first-template, and so on for the second template.
</bodyText>
<page confidence="0.650487">
35
</page>
<bodyText confidence="0.516401333333333">
Here are four paraplates that should match onto the templates for the
sentences above with corresponding numbers. Like the sentences, the
paraplates will all have the same left-hand side, which is written only
</bodyText>
<figure confidence="0.980445375">
once.
(WHERE LINE)
(*REAL)
(WHERE SIGN)
(*REAL)
(24)&apos; (*ANI) (MOVE) (WHERE POINT)
(*DO)
(*DO)
</figure>
<bodyText confidence="0.984742442622951">
The parentheses containing the formula parts are all to be inter-
preted as matching onto corresponding part of a template if and only if
the latter has the mentioned subparts as its head of formula. Thus
paraplate (24)&apos; matches (24) because the formula for
&amp;quot;he&amp;quot; has head MAN included by *ANI
&amp;quot;left&amp;quot; has as head MOVE
&amp;quot;Lugano&amp;quot; has a head containin subpart (WHERE POINT)
”autostrada&amp;quot; It (WHERE LINE)
and so on$ for the other correspondences of sentences and paraplates,
which will then assert the case label tie written at the right hand end
of the sentence in each case (and on the corresponding arrow in the
paraplate) as halding between the corresponding template pair0
is a dummy place holder, *DO covers a wide class of action,
as does *REAL of entities.
36
The paraplates above (24)&apos; to (29)&apos; are a sublist of those stacked
under the name of the preposition &amp;quot;by&amp;quot; and under the primitive action
MOVE that occurs in action position of the left side of each paraplate.
There will also be other sublists of paraplates stored for &amp;quot;by&amp;quot; under
other primitive actions. For example,
(30) This painting is by Titian
would, during its analysis, also access the paraplates under &amp;quot;by&amp;quot; but
in this case the sublist under BE.
The sublists of paraplates, for a given preposition, that are
names by different primitive actions are not ordered with respect to
each other. However, within any sublist, such as the stack (24)&apos; to
(29)&apos; above, the paraplates are ordered, in that the paraplate at the
top of the stack is applied first, the next only if that fails and so
on. Let us return to the example to see why.
First, DIST case is largely a default case for MOVE as it is cued
in by &amp;quot;by&amp;quot;, in that almost any entity can be an instrument here if we
have no reason to beli*ve it is anything else. Thus the more specific
(24)1 must be applied before (25)&apos; in order to match direction case
for (24)&apos; since, if the order were reversed)(25)&apos; might match with
what &amp;quot;ought&amp;quot; to match with (24)% We could imagine something very
seJnific in (25)&apos; to match the formula for car (such as a formula
expressing &amp;quot;thing for moving humans&amp;quot;), but that would risk missing
37
&amp;quot;by cattle truck&amp;quot; which is not normally used for transporting people.
However, it should be noticed here that the paraplates as described
do not have the power to detect an anomaly such as &amp;quot;John walked home
by car&amp;quot;. The templatd3matching that sentence would be quite properly
tied (as INST) by (2$)&apos;. Any anomaly in it would have to be revealed
by later inference. This is an example of what Lyons (op.cito) means
by the criteria of analytic systems beirig (initially) weaker than those
of productive systems.
A stronger but similar argument applies to putting (28)&apos; above
(29)&apos; in a preference stack, given the very weak criterion embodied in
(29)&apos;, that almost any action upon any physical object would satisfy
in default; and one could extend this to putting a (23)&apos; above a less
specific (26)&apos;.
The main point here is as follows: it is clear that stch para-
plates must be applied in some order, but it is not clear that they
should be simply ordered. For example there is no reason why (28)&apos;
should be ordered with respect to (24)&apos;. There is no formal trouble
expressing a partial ordering of this sort procedurally. I argued in
(Wilks 1975a) that in many cases we might expect more than one template
attached to a fragment at this stage and that we would &amp;quot;resolve the
ambiguity&amp;quot; by preferring whichever template matched higher up such a
preference stack of paraplates. Order, then, is important in such
paraplates stacks, even if it turns out to be only partial order.
</bodyText>
<page confidence="0.758952">
38
</page>
<bodyText confidence="0.985133912280702">
If such a stack is only partially ordered then we may, in the case
of a prepositional phrase with two or more current templates competing
to represent it, expect a draw at some stage: that is to say, two
possible templates for the same phrase may match with paraplates that
are not ordered with respect to each other. Such a situation might
well correspond to an example such as:
(31) John jumped on the box
where the last phrase is genuinely ambiguous between TO and LOCA case
(in the sense in which the substitution of &amp;quot;onto&amp;quot; for &amp;quot;on&amp;quot; could only
be interpreted as TO). Thus under &amp;quot;on&amp;quot; we would properly expect
MOVE (for &amp;quot;jump&amp;quot;) paraplates for TO and LOCA to be mutually unordered.
But let us turn to:
(32) He beat the girl with a withered arm
where the case dependence of the prepositional phrase could be either
instrumental or a specification of which girl it was. In such cases
one might imagine some expectational force to be drawn from the case
content of the formulas. Thus, if &amp;quot;beat&amp;quot; has an instrument group in
its formula, we can conceive of using this fact to decide the draw on
the grounds that &amp;quot;beat&amp;quot; really &amp;quot;expects&amp;quot; an instrument, so why not
give it one here, and settle the question. And there might indeed
be somc psychological grounds for doing that.
39
But in general, it is clear that the paraplates do not function
expectationally, except in the sense that by looking first at the
paraplates most preferred in the stack (for a given preposition and
basic action) one could be said to be expecting it. And that sense
of &amp;quot;expectation&amp;quot; is perfectly consistent with trying more than one
candidate template, for a given phrase or clause., at the same time
against the paraplate stack, as we might have to in-a sentence like
(33) He beat the dog with a branch
where we would not only be resolving the ca§e of the prepositional
phrase, but also, and at the saint time, the word sense of &amp;quot;branch&amp;quot;,
where the senses of &amp;quot;branch&amp;quot; might give rise to a corresponding number
of templates and we would always prefer the one that matched further
up the paraplate stack, as in (Wilks 1975a).
The reader may have been struck by an overlap of case content
between the paraplates and formulas. For example, in (10) the form-
ula for &amp;quot;break&amp;quot;, the head action CAUSE has a dependent (THING MIST).
Yet, if we were analyzing the standard sentence &amp;quot;He broke the window
with a hammer&amp;quot;, we would expect to use a stack of paraplates under
&amp;quot;with&amp;quot;, containing a substack whose left-hand action was CAUSE, and
in it find the appropriate paraplate for tying together the two tem-
plates for that sentence with an INST tie. This latter information
might seem to overlap heavily with that contained in the formula (10)
and the question arises whether it need be stated twice.
40
However, although the two forms of information overlap there is
no reason to believe they are the same: the paraplates reflect the
case ambiguity of English prepositions while the formulas reflect only
the sorts of case inferences one might subsequently want to make (in
extraction, see below). There is no reason to suppose that one form
for data can suffice for both these activities. However, Schank does
make this assumption, and the point here may become clearer after some
brief recall of his position on the point.
In (Schenk 1973) an account is given of case inferences from a
primitive action. In
(34) John shot the girl with a rifle
the underlying primitive is PROPEL which forms the center of any
conceptualization for &amp;quot;shoot&amp;quot;. An obligatory INST inference is
always made for PROPEL or, as it was put earlier, itasT is part of the
(obligatory) case frame for PROPEL, and also (a§ it happens) an option-
al part of the Fillmorean surface frame for &amp;quot;shoot&amp;quot;. In Schank&apos;s
scheme Instrumental case involves the insertion of another primitive
action into the conceptualization&apos; But that is not essential to tne
present point which is that, for Schank, PROPEL expects&amp;quot; an instru-
ment, and criteria can be postulated such that a rifle will fit those
criteria, in a way that hair will not, as in
(35) John .shot the .1.x.1 with long hair.
41
Thus, for (34) an INST interprd&apos;ation is achieved for &amp;quot;with&amp;quot;, while in
(35), by default, the hair is taken as a specification of the girl.
These solutions are, of course, correct but the different aspects
of the phenomena do not seem to connect in procedural terms. So, for
example, Schank is perfectly well aware of the case ambiguity of the
preposition &amp;quot;with&amp;quot;, and even lists four forms of it (ibid, p. 231)
corresponding to different cases, along with four &amp;quot;conceptual
realizations for the syntactic item &apos;with (noun)&apos; &amp;quot;, and specifies
that they should be checked in order &amp;quot;for conceptual validity&amp;quot;, just
as paraplates are. The correspondence to the notions described in
this paper (and in Wilks 1973, in the same volume) is reasohably
clear: the inference of an instrument from PROPEL corresponds to
an instrument specification in a formula for &amp;quot;shoot&amp;quot; (and for Schank
it also comes from shoot&amp;quot; rather than more generally from PROPEL)
since otherwise it could not be so specific about the instrument being
a gun, as PROPEL does not deal generally in guns); whereas the ordered
list of case possibilities for &amp;quot;with&amp;quot; is not developed, but corresponds
roughly to a paraplate stack for &amp;quot;with&amp;quot;.
But here is the problem: in Schank (1973) the two forms of
information do not actually meet in any general way. Schank writes
as if the list of possible case functions of &amp;quot;with&amp;quot; is general (i.e.
action independent), but we have shown that it may well be specific
to different primitive actions, in that there may well be a separate
42
paraplate substack for eh primitive action, and may be no short
gen?,ral list of funttions of &amp;quot;with&amp;quot;. Schank suggests that the
example (34) is resolved because PROPEL and/or &amp;quot;shoot&amp;quot; &amp;quot;expects an
instrument&amp;quot;, but that piece of information does not, and cannot, take
accouNit of the pre—existent ambiguity of &amp;quot;with&amp;quot;: it just happens to
fit this example, because PROPEL &amp;quot;expects&amp;quot; an instrument and instru—
mental case is put at the top of the ambiguity list for &amp;quot;with&amp;quot; (ibid.
p. 231).
But will this coincidence hold in general? If we had been
dealing not with PROPEL but with some ether primitive, it is not clear
that the same order for &amp;quot;with&amp;quot; would help. I des-cribed earlier a
MOVE primitive underlying &amp;quot;leave&amp;quot; (the primitive and its name are not
important, only that it is not PROPEL), and con3idered sentences
like
(36) I left Lugano with Ewo pounds in my pocket
which shows that instrumentality is unlikely to be the ”expectation&amp;quot;
for &amp;quot;with&amp;quot; from whatever primitive underlies &amp;quot;leave&amp;quot;. Hence Schank&apos;s
list for.&amp;quot;with&amp;quot; is perhaps specific to its use with PROPEL, and he
must develop sgme structure analogous to paraplates and not assume
$ i.e. a &amp;quot;dictionary entry&amp;quot; for a preposition (like a paraplate sub—
track) will be a function of a primitive action.
</bodyText>
<page confidence="0.917204">
43
</page>
<bodyText confidence="0.999218">
that the instrumentality of PROPEL suffices:
My point is simply that any attempt to introduce generality here
will show that another sort of information structure is required to
deal with prepositions, one specific to particular prepositions, and
that general case inferences (like instrumentalfty from PROPEL) could
only help in special cases. Any development of &amp;quot;with&amp;quot; lists into
paraplate substack structures would, I believe, show that the expect-
ational inferences from the primitives play a far smaller role in
analysis)because the criteria they contain will have been
procedurally expressed somewhere else.
It is true, however, that there is a strong expectation of a gun-
instrument from &amp;quot;shoot&amp;quot;, and this phenomenon does not fit easily into
the paraplate scheme. It might be necessary to ensure that if a
specific instrument were mentioned in a verb formula then that could
override subsequent paraplate matching when, it arose. However, such
specific instruments are not the norm for PROPEL, for this primitive
presumably also underlies &amp;quot;break&amp;quot; for Schenk, and there is no such
presumption of specific instrument with that verbo Indeed, such
an expectation would be bound to lead to error if any object found
after &amp;quot;with&amp;quot; were taken as an instrument, rather than using a
breadth-first approach like paraplates that considers the ranked
possibilities for that preposition and that action. This is
especially true for a system like Schanks that has no back-up and no
</bodyText>
<page confidence="0.743466">
44
</page>
<bodyText confidence="0.991752">
possibility of recovery if it goes wrong.
Formula and paiaplate information do sometimes overlap, and
suspect Schank&apos;s Sy8tem, that assumes that the same mechanism can
serve both functions, draws much of its force by choosing an example
from an area like (34) where they do overlap. But how, in the
examples of (23)-(29), could we work in geneTal with the ambiguity of
&amp;quot;by&amp;quot; by assuming that MOVE had sdme strong single case expectation,
over and above the fact that some case paraplate (like (24)&apos; for TO)
would have necessarily to appear at the top of any substack. How
could Schank express the action-dependent ordering of the rest of the
substack?
Another peculiar feature of Schank&apos;s treatment of these phenomena
is his suggestion (ibid. p. 232) that any ordering of preposition
functions must go &amp;quot;from the general to the specific&amp;quot;. Such limited
data as are afforded by substacks like (24)&apos; (29)&apos; indicate that
it may turn out to be the other way round, because the most general
(right-hand) criteria tend to appear in the paraplate at &apos;the bottom
of the substack.
Much though not all, of what has been said about Schank&apos;s
approach applies to Riesbeck&apos;s (1974) implementation of it. It is
again a strongly expectational system, in practice in Riesbeck&apos;s
case, and that leads to the mentioned defects of a depth-first
approach (if implemented without back-up, as it is),since the whole
45
notion of &amp;quot;preference&amp;quot;, in case as elsewhere (Wilks 1973a), depends on
following a number of possibilities breadth-first for a while before
comparing them and committing the system to only one. Only in
that way could one treat, in a general way, examples like (33) that
require comparison of how high up a paraplate stack a given inter-
pretation comes relative to others.
Riesbeck&apos;s system generates expectations (called &amp;quot;requests&amp;quot;)
from main sentence verbs and uses these to anticipate the case parts
of the seritence. The main difference from Schank&apos;s approach, and
which makes it a curious implementation of it, is that it deals with
prepositions not, as one might expect, by primitive actions seeking
certain cases, but by verbs seeking actual preposition names. So,
for expmple, &amp;quot;prevent&amp;quot; he seeks &amp;quot;from&amp;quot; and &amp;quot;by&amp;quot;, just as the
computational linguistic systems of the fifties and sixties did.
It also has less power than Schank&apos;s theory (and paraplates) in that
Riesbeck specifically says (ibid. p. 95) that requests (including
preposition requests presumably) are not ordered.
All this seems to require that all possible preposition
sequents be stored for every surface verb in the system which
leaves little scope for semantic generalization (the aim of the
whole exercise, presumably).
The strong point of difference, between Riesbeck&apos;s system and
</bodyText>
<page confidence="0.776199">
46
</page>
<bodyText confidence="0.901268095238095">
the one described here, concerns the role of uninhibited &amp;quot;expect-
ations&amp;quot;. The examples presented here suggest that one cannot
base a system simply on the observation that if someone use &amp;quot;by&amp;quot;
after &amp;quot;leave&amp;quot; then it will be expected to introduce an instrument.
For &amp;quot;He left Lugano by day&amp;quot; does not fit that and yet cannot be said
to be violating any expectation. It is simply that the structural
ambiguity of prepositions must be accounted for in a structured and
general manner like that ofiered by the paraplates. The usefulness
of expectation-, in any field, depends on (a) the high chances of it
being right, and (b) knowing what to do when it is frustrated, and
Riesbeckts system seems to lack both these desiderata.
$ For furthet discussion of the issue, see (Wilks 1975c, pp. 40-45)
Case extraction inferences
Extraction inferences produce new template-like forms from the
case content of formulas embedded in source templates: those that
have been matched with text sentence fragments. They are styled
&amp;quot;template-like here only to indicate that they have not been matched
with input text, and hence the inferred propositions they represent
have not necessarily been stated explicitly in the input text. Let
us first see the effect of doing this, and then the mechanism that
does it. In what follows, we extend the &amp;quot;short form&amp;quot; of templates
Obtained by writing square brackets round English words, clustered
at three nodes to show the distribution of formulas in the full
template) by writing extractions as English words inside double
square brackets.
Let us consider
(37) John fired at a line of stags with a shotgun
The result of matching this with templates, applying paraplates as
described above, and then performing case extractions can be written
in summary form as follows:
(38) [John fired+at line(of+stags).7&amp;quot;--.....,
[[John fired+at stags 3]...OBJE,..../ ) ) 1
[[John strikes stags 1]. GOAL-- -&apos;./ )( ,
[[John uses thing
i
/
(=shotgun)
-.....&amp;quot;
[[John cause+move thing 33 CAUSE -......-
_
(=bullet)
with a+shotgun ]
</bodyText>
<page confidence="0.6789175">
47
48
</page>
<bodyText confidence="0.99114208">
The extracted templates are tied by dotted lines to the source template
from which they have been extracted, and the case name on the dotted
line shows the case type of the extraction. The inferences cover both
those that must be true (like the OBJE extraction, since to fire at a
line of stags is necessarily to fire at stags) and those, like the GOAL
extraction, that are only likely.
These extracted templates are not printed out (in the way in which.
MARGIE (Rieger 1974) does) for they do not in themselves constitute
testable output. Their role, as described in (Wilks 1973c, 1975a) is
to be data for further inferences using comion-sense inference rules,
whose function is not essentially connected with case and will not be
recapitulated here. In the implementation described in those refer-
ences, the extractions were purely &amp;quot;problem driven&amp;quot;, in that they were
only done when some problem of reference resolution in the text demand-
ed that the representation be deepened. However, that was a strategic
consideration in no way a consequence of the nature of extractions:
they could equally well be data driven, and be executed after every
matching of a sentence with templates.
The difference between paraplates and extractions should be clear
from (38) because it contains both an INST paraplate-imposed tie between
main clause and preposition phrase templates, and an INST extraction
from the main clause template yielding an extracted template equivalent
to &amp;quot;John uses a thing(=a shotgun)&amp;quot;.
49
In this way, we are able to retain as part of the overall semantic
representation of text,and in a message form appropriate for subsequent
inference, both the surface structure (paraplate DIST tie) and the
underlying structure (INST extraction inference)- As we saw in the
last section, Schank hblds that these are one and the same thing. It
is true, as we shall see, that in order to extract that John uses a
shotgun, the extraction mechanism must consult the template tied by the
&gt;INST paraplate but, as I Argued in detail in the last section, this in
no way establishes that the urfac semantics and the underlying se antic
structures are one and the same, requiring only a single representation.
The eXtraction mechanism congistg of a specialistil(to use Winograd&apos;s
term) for each case (and for CAUSE, which is treated as a semiJcase
during extraction). It is called after an initial semantic representation
for a text has been built up as templates tied together by paraplates
and anaphora ties (See Wilks 1973c, 1975b) An extraction, resulting
in a new double-square-bracketted template, as in (38) above, is made
for each case (or CAUSE) sub-formula at the top level of the formulas
of each source template.
Let us see how the extractions in (38) are actually obtaind.
This will require that we give more of the content of the first source
template in (38), and in particular the formula for &amp;quot;fire+at&amp;quot;. (39)
may be considered a semi-full-form of
[John fired+at line( of+stags)]
50
in that the centre node has been expanded to its formula but the other
two noaes are left in &amp;quot;short form&amp;quot;.
</bodyText>
<equation confidence="0.4403556">
(39) je
[John
line(+of+stags)]
(*HUM SUBJ) (*ANI QBJE) (STR1K GOAL) (THING INST) CAUSE)
(THING MOVE)
</equation>
<bodyText confidence="0.940722857142857">
Each top-level case (or CAUSE) subformula is extracted by the
appropriate &amp;quot;case specialist&amp;quot; which has access to the additional
information provided by the whole template in which that formula is
embedded (and, as we shall see, to other templates as well). By
way of illustration, we will look at the OBJE and GOAL extractions
from the action formula in (39).
The dependent of the OBJE case in (39) shows that &amp;quot;fire*at&amp;quot;
</bodyText>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.049131">
<title confidence="0.5401775">Journal of Computational Linguistics PROCESSING CASE</title>
<author confidence="0.703997">YORICK WILKS</author>
<affiliation confidence="0.990793">DEPARTMENT OF ARTIFICIAL INTELLIGENCE UNIVERSITY OF EDINBURGH PRESENT ADDRESS: DEPARTMENT OF LANGUAGE AND LINGUISTICS, UNIVERSITY OF ESSEX</affiliation>
<address confidence="0.968491">COLCHESTER, ESSEX, ENGLAND</address>
<note confidence="0.880168">Copyright 1976 Association for Computational Linguistics 2</note>
<abstract confidence="0.999535266666667">This paper has three purposes: firstly, to describe how cage information is distributed in the preference semantics system of language understanding, and to show what practical use is made of that information. Secondly, to argue that that way of doing things advantages over tao alternatives: (a) putting all case infolmation in one place, and (b) not using any case information at all, but only the names of English prepositions. Thirdly, I wish to... use the established earlier to counter some recent arguments by Charniak and that the notion of case is not factfunctioning in any natural language understanding systems that fall within what could be called the Artificial Intelligence paradigm. A theme that recurs paper is that tendentious such as &amp;quot;surface&amp;quot;, &amp;quot;deep&amp;quot; and &amp;quot;conceptual&amp;quot; case, must be expounded in processing terms if they are to make sense.</abstract>
<note confidence="0.802556">A^.KNOWLEDGEMENTS The paper owes a great deal to discussions with Eugene Charniak, Graham Ritchie, Margeret King and Frederick Parker-Rhodes. mistakes, as usual, are all my ownt. 3 TABLE OF CONTENTS</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>